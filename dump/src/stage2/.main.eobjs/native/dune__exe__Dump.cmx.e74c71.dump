[
  structure_item (src/dump.ml[14,994+0]..[14,994+11])
    Pstr_open Fresh
    module_expr (src/dump.ml[14,994+5]..[14,994+11])
      Pmod_ident "Printf" (src/dump.ml[14,994+5]..[14,994+11])
  structure_item (src/dump.ml[15,1006+0]..[15,1006+12])
    Pstr_open Fresh
    module_expr (src/dump.ml[15,1006+5]..[15,1006+12])
      Pmod_ident "Grammar" (src/dump.ml[15,1006+5]..[15,1006+12])
  structure_item (src/dump.ml[17,1020+0]..[122,4285+3])
    Pstr_module
    "Make" (src/dump.ml[17,1020+7]..[17,1020+11])
      module_expr (src/dump.ml[17,1020+12]..[122,4285+3])
        Pmod_functor "Default" (src/dump.ml[17,1020+13]..[17,1020+20])
        module_type (src/dump.ml[17,1020+23]..[22,1136+3])
          Pmty_signature
          [
            signature_item (src/dump.ml[19,1048+2]..[20,1077+57])
              Psig_value
              value_description "has_default_reduction" (src/dump.ml[19,1048+6]..[19,1048+27]) (src/dump.ml[19,1048+2]..[20,1077+57])
                core_type (src/dump.ml[20,1077+4]..[20,1077+57])
                  Ptyp_arrow
                  Nolabel
                  core_type (src/dump.ml[20,1077+4]..[20,1077+12])
                    Ptyp_constr "Lr1.node" (src/dump.ml[20,1077+4]..[20,1077+12])
                    []
                  core_type (src/dump.ml[20,1077+16]..[20,1077+57])
                    Ptyp_constr "option" (src/dump.ml[20,1077+51]..[20,1077+57])
                    [
                      core_type (src/dump.ml[20,1077+17]..[20,1077+49])
                        Ptyp_tuple
                        [
                          core_type (src/dump.ml[20,1077+17]..[20,1077+33])
                            Ptyp_constr "Production.index" (src/dump.ml[20,1077+17]..[20,1077+33])
                            []
                          core_type (src/dump.ml[20,1077+36]..[20,1077+49])
                            Ptyp_constr "TerminalSet.t" (src/dump.ml[20,1077+36]..[20,1077+49])
                            []
                        ]
                    ]
                []
          ]
        module_expr (src/dump.ml[22,1136+7]..[122,4285+3])
          Pmod_structure
          [
            structure_item (src/dump.ml[24,1151+0]..[113,4067+18])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/dump.ml[24,1151+4]..[24,1151+13])
                    Ppat_var "dump_node" (src/dump.ml[24,1151+4]..[24,1151+13])
                  expression (src/dump.ml[24,1151+14]..[113,4067+18]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/dump.ml[24,1151+14]..[24,1151+17])
                      Ppat_var "out" (src/dump.ml[24,1151+14]..[24,1151+17])
                    expression (src/dump.ml[24,1151+18]..[113,4067+18]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/dump.ml[24,1151+18]..[24,1151+31])
                        Ppat_var "stack_symbols" (src/dump.ml[24,1151+18]..[24,1151+31])
                      expression (src/dump.ml[24,1151+32]..[113,4067+18]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/dump.ml[24,1151+32]..[24,1151+36])
                          Ppat_var "node" (src/dump.ml[24,1151+32]..[24,1151+36])
                        expression (src/dump.ml[28,1224+2]..[113,4067+18])
                          Pexp_sequence
                          expression (src/dump.ml[28,1224+2]..[29,1252+21])
                            Pexp_apply
                            expression (src/dump.ml[28,1224+2]..[28,1224+9])
                              Pexp_ident "fprintf" (src/dump.ml[28,1224+2]..[28,1224+9])
                            [
                              <arg>
                              Nolabel
                                expression (src/dump.ml[28,1224+10]..[28,1224+13])
                                  Pexp_ident "out" (src/dump.ml[28,1224+10]..[28,1224+13])
                              <arg>
                              Nolabel
                                expression (src/dump.ml[28,1224+14]..[28,1224+27])
                                  Pexp_constant PConst_string("State %d:\n",(src/dump.ml[28,1224+15]..[28,1224+26]),None)
                              <arg>
                              Nolabel
                                expression (src/dump.ml[29,1252+4]..[29,1252+21])
                                  Pexp_apply
                                  expression (src/dump.ml[29,1252+5]..[29,1252+15])
                                    Pexp_ident "Lr1.number" (src/dump.ml[29,1252+5]..[29,1252+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/dump.ml[29,1252+16]..[29,1252+20])
                                        Pexp_ident "node" (src/dump.ml[29,1252+16]..[29,1252+20])
                                  ]
                            ]
                          expression (src/dump.ml[33,1322+2]..[113,4067+18])
                            Pexp_sequence
                            expression (src/dump.ml[33,1322+2]..[36,1380+53])
                              Pexp_apply
                              expression (src/dump.ml[33,1322+2]..[33,1322+9])
                                Pexp_ident "fprintf" (src/dump.ml[33,1322+2]..[33,1322+9])
                              [
                                <arg>
                                Nolabel
                                  expression (src/dump.ml[33,1322+10]..[33,1322+13])
                                    Pexp_ident "out" (src/dump.ml[33,1322+10]..[33,1322+13])
                                <arg>
                                Nolabel
                                  expression (src/dump.ml[34,1336+4]..[35,1367+12])
                                    Pexp_constant PConst_string("## Known stack suffix:\n##%s\n",(src/dump.ml[34,1336+5]..[35,1367+11]),None)
                                <arg>
                                Nolabel
                                  expression (src/dump.ml[36,1380+4]..[36,1380+53])
                                    Pexp_apply
                                    expression (src/dump.ml[36,1380+5]..[36,1380+31])
                                      Pexp_ident "StackSymbols.print_symbols" (src/dump.ml[36,1380+5]..[36,1380+31])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/dump.ml[36,1380+32]..[36,1380+52])
                                          Pexp_apply
                                          expression (src/dump.ml[36,1380+33]..[36,1380+46])
                                            Pexp_ident "stack_symbols" (src/dump.ml[36,1380+33]..[36,1380+46])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/dump.ml[36,1380+47]..[36,1380+51])
                                                Pexp_ident "node" (src/dump.ml[36,1380+47]..[36,1380+51])
                                          ]
                                    ]
                              ]
                            expression (src/dump.ml[40,1462+2]..[113,4067+18])
                              Pexp_sequence
                              expression (src/dump.ml[40,1462+2]..[41,1498+35])
                                Pexp_apply
                                expression (src/dump.ml[40,1462+2]..[40,1462+9])
                                  Pexp_ident "fprintf" (src/dump.ml[40,1462+2]..[40,1462+9])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/dump.ml[40,1462+10]..[40,1462+13])
                                      Pexp_ident "out" (src/dump.ml[40,1462+10]..[40,1462+13])
                                  <arg>
                                  Nolabel
                                    expression (src/dump.ml[40,1462+14]..[40,1462+35])
                                      Pexp_constant PConst_string("## LR(1) items:\n%s",(src/dump.ml[40,1462+15]..[40,1462+34]),None)
                                  <arg>
                                  Nolabel
                                    expression (src/dump.ml[41,1498+4]..[41,1498+35])
                                      Pexp_apply
                                      expression (src/dump.ml[41,1498+5]..[41,1498+14])
                                        Pexp_ident "Lr0.print" (src/dump.ml[41,1498+5]..[41,1498+14])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/dump.ml[41,1498+15]..[41,1498+17])
                                            Pexp_constant PConst_string("",(src/dump.ml[41,1498+16]..[41,1498+16]),None)
                                        <arg>
                                        Nolabel
                                          expression (src/dump.ml[41,1498+18]..[41,1498+34])
                                            Pexp_apply
                                            expression (src/dump.ml[41,1498+19]..[41,1498+28])
                                              Pexp_ident "Lr1.state" (src/dump.ml[41,1498+19]..[41,1498+28])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/dump.ml[41,1498+29]..[41,1498+33])
                                                  Pexp_ident "node" (src/dump.ml[41,1498+29]..[41,1498+33])
                                            ]
                                      ]
                                ]
                              expression (src/dump.ml[45,1568+2]..[113,4067+18])
                                Pexp_sequence
                                expression (src/dump.ml[45,1568+2]..[45,1568+33])
                                  Pexp_apply
                                  expression (src/dump.ml[45,1568+2]..[45,1568+9])
                                    Pexp_ident "fprintf" (src/dump.ml[45,1568+2]..[45,1568+9])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/dump.ml[45,1568+10]..[45,1568+13])
                                        Pexp_ident "out" (src/dump.ml[45,1568+10]..[45,1568+13])
                                    <arg>
                                    Nolabel
                                      expression (src/dump.ml[45,1568+14]..[45,1568+33])
                                        Pexp_constant PConst_string("## Transitions:\n",(src/dump.ml[45,1568+15]..[45,1568+32]),None)
                                  ]
                                expression (src/dump.ml[46,1603+2]..[113,4067+18])
                                  Pexp_sequence
                                  expression (src/dump.ml[46,1603+2]..[49,1733+26])
                                    Pexp_apply
                                    expression (src/dump.ml[46,1603+2]..[46,1603+16])
                                      Pexp_ident "SymbolMap.iter" (src/dump.ml[46,1603+2]..[46,1603+16])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/dump.ml[46,1603+17]..[49,1733+3])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (src/dump.ml[46,1603+22]..[46,1603+28])
                                            Ppat_var "symbol" (src/dump.ml[46,1603+22]..[46,1603+28])
                                          expression (src/dump.ml[46,1603+29]..[48,1687+45]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (src/dump.ml[46,1603+29]..[46,1603+33])
                                              Ppat_var "node" (src/dump.ml[46,1603+29]..[46,1603+33])
                                            expression (src/dump.ml[47,1640+4]..[48,1687+45])
                                              Pexp_apply
                                              expression (src/dump.ml[47,1640+4]..[47,1640+11])
                                                Pexp_ident "fprintf" (src/dump.ml[47,1640+4]..[47,1640+11])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/dump.ml[47,1640+12]..[47,1640+15])
                                                    Pexp_ident "out" (src/dump.ml[47,1640+12]..[47,1640+15])
                                                <arg>
                                                Nolabel
                                                  expression (src/dump.ml[47,1640+16]..[47,1640+46])
                                                    Pexp_constant PConst_string("-- On %s shift to state %d\n",(src/dump.ml[47,1640+17]..[47,1640+45]),None)
                                                <arg>
                                                Nolabel
                                                  expression (src/dump.ml[48,1687+6]..[48,1687+27])
                                                    Pexp_apply
                                                    expression (src/dump.ml[48,1687+7]..[48,1687+19])
                                                      Pexp_ident "Symbol.print" (src/dump.ml[48,1687+7]..[48,1687+19])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/dump.ml[48,1687+20]..[48,1687+26])
                                                          Pexp_ident "symbol" (src/dump.ml[48,1687+20]..[48,1687+26])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (src/dump.ml[48,1687+28]..[48,1687+45])
                                                    Pexp_apply
                                                    expression (src/dump.ml[48,1687+29]..[48,1687+39])
                                                      Pexp_ident "Lr1.number" (src/dump.ml[48,1687+29]..[48,1687+39])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/dump.ml[48,1687+40]..[48,1687+44])
                                                          Pexp_ident "node" (src/dump.ml[48,1687+40]..[48,1687+44])
                                                    ]
                                              ]
                                      <arg>
                                      Nolabel
                                        expression (src/dump.ml[49,1733+4]..[49,1733+26])
                                          Pexp_apply
                                          expression (src/dump.ml[49,1733+5]..[49,1733+20])
                                            Pexp_ident "Lr1.transitions" (src/dump.ml[49,1733+5]..[49,1733+20])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/dump.ml[49,1733+21]..[49,1733+25])
                                                Pexp_ident "node" (src/dump.ml[49,1733+21]..[49,1733+25])
                                          ]
                                    ]
                                  expression (src/dump.ml[53,1793+2]..[113,4067+18])
                                    Pexp_sequence
                                    expression (src/dump.ml[53,1793+2]..[82,3155+5])
                                      Pexp_match
                                      expression (src/dump.ml[53,1793+14]..[53,1793+48])
                                        Pexp_apply
                                        expression (src/dump.ml[53,1793+14]..[53,1793+43])
                                          Pexp_ident "Default.has_default_reduction" (src/dump.ml[53,1793+14]..[53,1793+43])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/dump.ml[53,1793+44]..[53,1793+48])
                                              Pexp_ident "node" (src/dump.ml[53,1793+44]..[53,1793+48])
                                        ]
                                      [
                                        <case>
                                          pattern (src/dump.ml[54,1847+4]..[54,1847+21])
                                            Ppat_construct "Some" (src/dump.ml[54,1847+4]..[54,1847+8])
                                            Some
                                              []
                                              pattern (src/dump.ml[54,1847+9]..[54,1847+21])
                                                Ppat_tuple
                                                [
                                                  pattern (src/dump.ml[54,1847+10]..[54,1847+14])
                                                    Ppat_var "prod" (src/dump.ml[54,1847+10]..[54,1847+14])
                                                  pattern (src/dump.ml[54,1847+16]..[54,1847+20])
                                                    Ppat_var "toks" (src/dump.ml[54,1847+16]..[54,1847+20])
                                                ]
                                          expression (src/dump.ml[61,2290+6]..[70,2641+49])
                                            Pexp_sequence
                                            expression (src/dump.ml[61,2290+6]..[64,2428+7])
                                              Pexp_assert
                                              expression (src/dump.ml[61,2290+13]..[64,2428+7])
                                                Pexp_apply
                                                expression (src/dump.ml[62,2305+70]..[62,2305+72])
                                                  Pexp_ident "||" (src/dump.ml[62,2305+70]..[62,2305+72])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/dump.ml[62,2305+8]..[62,2305+69])
                                                      Pexp_apply
                                                      expression (src/dump.ml[62,2305+8]..[62,2305+25])
                                                        Pexp_ident "TerminalSet.equal" (src/dump.ml[62,2305+8]..[62,2305+25])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/dump.ml[62,2305+26]..[62,2305+30])
                                                            Pexp_ident "toks" (src/dump.ml[62,2305+26]..[62,2305+30])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/dump.ml[62,2305+31]..[62,2305+69])
                                                            Pexp_apply
                                                            expression (src/dump.ml[62,2305+32]..[62,2305+53])
                                                              Pexp_ident "TerminalSet.singleton" (src/dump.ml[62,2305+32]..[62,2305+53])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/dump.ml[62,2305+54]..[62,2305+68])
                                                                  Pexp_ident "Terminal.sharp" (src/dump.ml[62,2305+54]..[62,2305+68])
                                                            ]
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (src/dump.ml[63,2378+8]..[63,2378+49])
                                                      Pexp_apply
                                                      expression (src/dump.ml[63,2378+8]..[63,2378+11])
                                                        Pexp_ident "not" (src/dump.ml[63,2378+8]..[63,2378+11])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/dump.ml[63,2378+12]..[63,2378+49])
                                                            Pexp_apply
                                                            expression (src/dump.ml[63,2378+13]..[63,2378+28])
                                                              Pexp_ident "TerminalSet.mem" (src/dump.ml[63,2378+13]..[63,2378+28])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/dump.ml[63,2378+29]..[63,2378+43])
                                                                  Pexp_ident "Terminal.sharp" (src/dump.ml[63,2378+29]..[63,2378+43])
                                                              <arg>
                                                              Nolabel
                                                                expression (src/dump.ml[63,2378+44]..[63,2378+48])
                                                                  Pexp_ident "toks" (src/dump.ml[63,2378+44]..[63,2378+48])
                                                            ]
                                                      ]
                                                ]
                                            expression (src/dump.ml[65,2437+6]..[70,2641+49])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/dump.ml[65,2437+10]..[65,2437+17])
                                                    Ppat_var "keyword" (src/dump.ml[65,2437+10]..[65,2437+17])
                                                  expression (src/dump.ml[66,2457+8]..[66,2457+74])
                                                    Pexp_ifthenelse
                                                    expression (src/dump.ml[66,2457+11]..[66,2457+46])
                                                      Pexp_apply
                                                      expression (src/dump.ml[66,2457+11]..[66,2457+26])
                                                        Pexp_ident "TerminalSet.mem" (src/dump.ml[66,2457+11]..[66,2457+26])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/dump.ml[66,2457+27]..[66,2457+41])
                                                            Pexp_ident "Terminal.sharp" (src/dump.ml[66,2457+27]..[66,2457+41])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/dump.ml[66,2457+42]..[66,2457+46])
                                                            Pexp_ident "toks" (src/dump.ml[66,2457+42]..[66,2457+46])
                                                      ]
                                                    expression (src/dump.ml[66,2457+52]..[66,2457+61])
                                                      Pexp_constant PConst_string("Without",(src/dump.ml[66,2457+53]..[66,2457+60]),None)
                                                    Some
                                                      expression (src/dump.ml[66,2457+67]..[66,2457+74])
                                                        Pexp_constant PConst_string("After",(src/dump.ml[66,2457+68]..[66,2457+73]),None)
                                              ]
                                              expression (src/dump.ml[68,2541+6]..[70,2641+49])
                                                Pexp_sequence
                                                expression (src/dump.ml[68,2541+6]..[68,2541+43])
                                                  Pexp_apply
                                                  expression (src/dump.ml[68,2541+6]..[68,2541+13])
                                                    Pexp_ident "fprintf" (src/dump.ml[68,2541+6]..[68,2541+13])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/dump.ml[68,2541+14]..[68,2541+17])
                                                        Pexp_ident "out" (src/dump.ml[68,2541+14]..[68,2541+17])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/dump.ml[68,2541+18]..[68,2541+43])
                                                        Pexp_constant PConst_string("## Default reduction:\n",(src/dump.ml[68,2541+19]..[68,2541+42]),None)
                                                  ]
                                                expression (src/dump.ml[69,2586+6]..[70,2641+48])
                                                  Pexp_apply
                                                  expression (src/dump.ml[69,2586+6]..[69,2586+13])
                                                    Pexp_ident "fprintf" (src/dump.ml[69,2586+6]..[69,2586+13])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/dump.ml[69,2586+14]..[69,2586+17])
                                                        Pexp_ident "out" (src/dump.ml[69,2586+14]..[69,2586+17])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/dump.ml[69,2586+18]..[69,2586+54])
                                                        Pexp_constant PConst_string("-- %s reading the next token, %s\n",(src/dump.ml[69,2586+19]..[69,2586+53]),None)
                                                    <arg>
                                                    Nolabel
                                                      expression (src/dump.ml[70,2641+8]..[70,2641+15])
                                                        Pexp_ident "keyword" (src/dump.ml[70,2641+8]..[70,2641+15])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/dump.ml[70,2641+16]..[70,2641+48])
                                                        Pexp_apply
                                                        expression (src/dump.ml[70,2641+17]..[70,2641+36])
                                                          Pexp_ident "Production.describe" (src/dump.ml[70,2641+17]..[70,2641+36])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/dump.ml[70,2641+37]..[70,2641+42])
                                                              Pexp_construct "false" (src/dump.ml[70,2641+37]..[70,2641+42])
                                                              None
                                                          <arg>
                                                          Nolabel
                                                            expression (src/dump.ml[70,2641+43]..[70,2641+47])
                                                              Pexp_ident "prod" (src/dump.ml[70,2641+43]..[70,2641+47])
                                                        ]
                                                  ]
                                        <case>
                                          pattern (src/dump.ml[72,2692+4]..[72,2692+8])
                                            Ppat_construct "None" (src/dump.ml[72,2692+4]..[72,2692+8])
                                            None
                                          expression (src/dump.ml[74,2747+6]..[81,3136+18])
                                            Pexp_sequence
                                            expression (src/dump.ml[74,2747+6]..[74,2747+36])
                                              Pexp_apply
                                              expression (src/dump.ml[74,2747+6]..[74,2747+13])
                                                Pexp_ident "fprintf" (src/dump.ml[74,2747+6]..[74,2747+13])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/dump.ml[74,2747+14]..[74,2747+17])
                                                    Pexp_ident "out" (src/dump.ml[74,2747+14]..[74,2747+17])
                                                <arg>
                                                Nolabel
                                                  expression (src/dump.ml[74,2747+18]..[74,2747+36])
                                                    Pexp_constant PConst_string("## Reductions:\n",(src/dump.ml[74,2747+19]..[74,2747+35]),None)
                                              ]
                                            expression (src/dump.ml[77,2910+6]..[81,3136+18])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/dump.ml[77,2910+10]..[77,2910+20])
                                                    Ppat_var "reductions" (src/dump.ml[77,2910+10]..[77,2910+20])
                                                  expression (src/dump.ml[77,2910+23]..[77,2910+55])
                                                    Pexp_apply
                                                    expression (src/dump.ml[77,2910+23]..[77,2910+33])
                                                      Pexp_ident "Lr0.invert" (src/dump.ml[77,2910+23]..[77,2910+33])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/dump.ml[77,2910+34]..[77,2910+55])
                                                          Pexp_apply
                                                          expression (src/dump.ml[77,2910+35]..[77,2910+49])
                                                            Pexp_ident "Lr1.reductions" (src/dump.ml[77,2910+35]..[77,2910+49])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/dump.ml[77,2910+50]..[77,2910+54])
                                                                Pexp_ident "node" (src/dump.ml[77,2910+50]..[77,2910+54])
                                                          ]
                                                    ]
                                              ]
                                              expression (src/dump.ml[78,2969+6]..[81,3136+18])
                                                Pexp_apply
                                                expression (src/dump.ml[78,2969+6]..[78,2969+24])
                                                  Pexp_ident "ProductionMap.iter" (src/dump.ml[78,2969+6]..[78,2969+24])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/dump.ml[78,2969+25]..[81,3136+7])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (src/dump.ml[78,2969+30]..[78,2969+34])
                                                        Ppat_var "prod" (src/dump.ml[78,2969+30]..[78,2969+34])
                                                      expression (src/dump.ml[78,2969+35]..[80,3071+64]) ghost
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (src/dump.ml[78,2969+35]..[78,2969+39])
                                                          Ppat_var "toks" (src/dump.ml[78,2969+35]..[78,2969+39])
                                                        expression (src/dump.ml[79,3012+8]..[80,3071+64])
                                                          Pexp_sequence
                                                          expression (src/dump.ml[79,3012+8]..[79,3012+57])
                                                            Pexp_apply
                                                            expression (src/dump.ml[79,3012+8]..[79,3012+15])
                                                              Pexp_ident "fprintf" (src/dump.ml[79,3012+8]..[79,3012+15])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/dump.ml[79,3012+16]..[79,3012+19])
                                                                  Pexp_ident "out" (src/dump.ml[79,3012+16]..[79,3012+19])
                                                              <arg>
                                                              Nolabel
                                                                expression (src/dump.ml[79,3012+20]..[79,3012+32])
                                                                  Pexp_constant PConst_string("-- On %s\n",(src/dump.ml[79,3012+21]..[79,3012+31]),None)
                                                              <arg>
                                                              Nolabel
                                                                expression (src/dump.ml[79,3012+33]..[79,3012+57])
                                                                  Pexp_apply
                                                                  expression (src/dump.ml[79,3012+34]..[79,3012+51])
                                                                    Pexp_ident "TerminalSet.print" (src/dump.ml[79,3012+34]..[79,3012+51])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/dump.ml[79,3012+52]..[79,3012+56])
Pexp_ident "toks" (src/dump.ml[79,3012+52]..[79,3012+56])
                                                                  ]
                                                            ]
                                                          expression (src/dump.ml[80,3071+8]..[80,3071+64])
                                                            Pexp_apply
                                                            expression (src/dump.ml[80,3071+8]..[80,3071+15])
                                                              Pexp_ident "fprintf" (src/dump.ml[80,3071+8]..[80,3071+15])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/dump.ml[80,3071+16]..[80,3071+19])
                                                                  Pexp_ident "out" (src/dump.ml[80,3071+16]..[80,3071+19])
                                                              <arg>
                                                              Nolabel
                                                                expression (src/dump.ml[80,3071+20]..[80,3071+31])
                                                                  Pexp_constant PConst_string("--   %s\n",(src/dump.ml[80,3071+21]..[80,3071+30]),None)
                                                              <arg>
                                                              Nolabel
                                                                expression (src/dump.ml[80,3071+32]..[80,3071+64])
                                                                  Pexp_apply
                                                                  expression (src/dump.ml[80,3071+33]..[80,3071+52])
                                                                    Pexp_ident "Production.describe" (src/dump.ml[80,3071+33]..[80,3071+52])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/dump.ml[80,3071+53]..[80,3071+58])
Pexp_construct "false" (src/dump.ml[80,3071+53]..[80,3071+58])
None
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/dump.ml[80,3071+59]..[80,3071+63])
Pexp_ident "prod" (src/dump.ml[80,3071+59]..[80,3071+63])
                                                                  ]
                                                            ]
                                                  <arg>
                                                  Nolabel
                                                    expression (src/dump.ml[81,3136+8]..[81,3136+18])
                                                      Pexp_ident "reductions" (src/dump.ml[81,3136+8]..[81,3136+18])
                                                ]
                                      ]
                                    expression (src/dump.ml[86,3193+2]..[113,4067+18])
                                      Pexp_sequence
                                      expression (src/dump.ml[86,3193+2]..[88,3295+52])
                                        Pexp_ifthenelse
                                        expression (src/dump.ml[86,3193+5]..[86,3193+58])
                                          Pexp_apply
                                          expression (src/dump.ml[86,3193+5]..[86,3193+8])
                                            Pexp_ident "not" (src/dump.ml[86,3193+5]..[86,3193+8])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/dump.ml[86,3193+9]..[86,3193+58])
                                                Pexp_apply
                                                expression (src/dump.ml[86,3193+10]..[86,3193+30])
                                                  Pexp_ident "TerminalSet.is_empty" (src/dump.ml[86,3193+10]..[86,3193+30])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/dump.ml[86,3193+31]..[86,3193+57])
                                                      Pexp_apply
                                                      expression (src/dump.ml[86,3193+32]..[86,3193+51])
                                                        Pexp_ident "Lr1.conflict_tokens" (src/dump.ml[86,3193+32]..[86,3193+51])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/dump.ml[86,3193+52]..[86,3193+56])
                                                            Pexp_ident "node" (src/dump.ml[86,3193+52]..[86,3193+56])
                                                      ]
                                                ]
                                          ]
                                        expression (src/dump.ml[87,3257+4]..[88,3295+52])
                                          Pexp_apply
                                          expression (src/dump.ml[87,3257+4]..[87,3257+11])
                                            Pexp_ident "fprintf" (src/dump.ml[87,3257+4]..[87,3257+11])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/dump.ml[87,3257+12]..[87,3257+15])
                                                Pexp_ident "out" (src/dump.ml[87,3257+12]..[87,3257+15])
                                            <arg>
                                            Nolabel
                                              expression (src/dump.ml[87,3257+16]..[87,3257+37])
                                                Pexp_constant PConst_string("** Conflict on %s\n",(src/dump.ml[87,3257+17]..[87,3257+36]),None)
                                            <arg>
                                            Nolabel
                                              expression (src/dump.ml[88,3295+6]..[88,3295+52])
                                                Pexp_apply
                                                expression (src/dump.ml[88,3295+7]..[88,3295+24])
                                                  Pexp_ident "TerminalSet.print" (src/dump.ml[88,3295+7]..[88,3295+24])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/dump.ml[88,3295+25]..[88,3295+51])
                                                      Pexp_apply
                                                      expression (src/dump.ml[88,3295+26]..[88,3295+45])
                                                        Pexp_ident "Lr1.conflict_tokens" (src/dump.ml[88,3295+26]..[88,3295+45])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/dump.ml[88,3295+46]..[88,3295+50])
                                                            Pexp_ident "node" (src/dump.ml[88,3295+46]..[88,3295+50])
                                                      ]
                                                ]
                                          ]
                                        None
                                      expression (src/dump.ml[92,3394+2]..[113,4067+18])
                                        Pexp_sequence
                                        expression (src/dump.ml[92,3394+2]..[109,4037+5])
                                          Pexp_apply
                                          expression (src/dump.ml[92,3394+28]..[92,3394+30])
                                            Pexp_ident "|>" (src/dump.ml[92,3394+28]..[92,3394+30])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/dump.ml[92,3394+2]..[92,3394+27])
                                                Pexp_apply
                                                expression (src/dump.ml[92,3394+2]..[92,3394+22])
                                                  Pexp_ident "Lr1.has_eos_conflict" (src/dump.ml[92,3394+2]..[92,3394+22])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/dump.ml[92,3394+23]..[92,3394+27])
                                                      Pexp_ident "node" (src/dump.ml[92,3394+23]..[92,3394+27])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (src/dump.ml[92,3394+31]..[109,4037+5])
                                                Pexp_apply
                                                expression (src/dump.ml[92,3394+31]..[92,3394+42])
                                                  Pexp_ident "Option.iter" (src/dump.ml[92,3394+31]..[92,3394+42])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/dump.ml[92,3394+43]..[109,4037+5])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (src/dump.ml[92,3394+53]..[92,3394+66])
                                                        Ppat_tuple
                                                        [
                                                          pattern (src/dump.ml[92,3394+54]..[92,3394+59])
                                                            Ppat_var "prods" (src/dump.ml[92,3394+54]..[92,3394+59])
                                                          pattern (src/dump.ml[92,3394+61]..[92,3394+65])
                                                            Ppat_var "toks" (src/dump.ml[92,3394+61]..[92,3394+65])
                                                        ]
                                                      expression (src/dump.ml[97,3628+4]..[107,3998+37])
                                                        Pexp_sequence
                                                        expression (src/dump.ml[97,3628+4]..[97,3628+24])
                                                          Pexp_assert
                                                          expression (src/dump.ml[97,3628+11]..[97,3628+24])
                                                            Pexp_apply
                                                            expression (src/dump.ml[97,3628+18]..[97,3628+20])
                                                              Pexp_ident "<>" (src/dump.ml[97,3628+18]..[97,3628+20])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/dump.ml[97,3628+12]..[97,3628+17])
                                                                  Pexp_ident "prods" (src/dump.ml[97,3628+12]..[97,3628+17])
                                                              <arg>
                                                              Nolabel
                                                                expression (src/dump.ml[97,3628+21]..[97,3628+23])
                                                                  Pexp_construct "[]" (src/dump.ml[97,3628+21]..[97,3628+23])
                                                                  None
                                                            ]
                                                        expression (src/dump.ml[98,3654+4]..[107,3998+37])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (src/dump.ml[98,3654+8]..[98,3654+12])
                                                                Ppat_var "prod" (src/dump.ml[98,3654+8]..[98,3654+12])
                                                              expression (src/dump.ml[98,3654+15]..[98,3654+28])
                                                                Pexp_apply
                                                                expression (src/dump.ml[98,3654+15]..[98,3654+22])
                                                                  Pexp_ident "List.hd" (src/dump.ml[98,3654+15]..[98,3654+22])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/dump.ml[98,3654+23]..[98,3654+28])
                                                                      Pexp_ident "prods" (src/dump.ml[98,3654+23]..[98,3654+28])
                                                                ]
                                                          ]
                                                          expression (src/dump.ml[100,3687+4]..[107,3998+37])
                                                            Pexp_sequence
                                                            expression (src/dump.ml[100,3687+4]..[101,3739+30])
                                                              Pexp_apply
                                                              expression (src/dump.ml[100,3687+4]..[100,3687+11])
                                                                Pexp_ident "fprintf" (src/dump.ml[100,3687+4]..[100,3687+11])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/dump.ml[100,3687+12]..[100,3687+15])
                                                                    Pexp_ident "out" (src/dump.ml[100,3687+12]..[100,3687+15])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/dump.ml[100,3687+16]..[100,3687+51])
                                                                    Pexp_constant PConst_string("** End-of-stream conflict on %s\n",(src/dump.ml[100,3687+17]..[100,3687+50]),None)
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/dump.ml[101,3739+6]..[101,3739+30])
                                                                    Pexp_apply
                                                                    expression (src/dump.ml[101,3739+7]..[101,3739+24])
                                                                      Pexp_ident "TerminalSet.print" (src/dump.ml[101,3739+7]..[101,3739+24])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/dump.ml[101,3739+25]..[101,3739+29])
  Pexp_ident "toks" (src/dump.ml[101,3739+25]..[101,3739+29])
                                                                    ]
                                                              ]
                                                            expression (src/dump.ml[102,3771+4]..[107,3998+37])
                                                              Pexp_apply
                                                              expression (src/dump.ml[102,3771+4]..[102,3771+11])
                                                                Pexp_ident "fprintf" (src/dump.ml[102,3771+4]..[102,3771+11])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/dump.ml[102,3771+12]..[102,3771+15])
                                                                    Pexp_ident "out" (src/dump.ml[102,3771+12]..[102,3771+15])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/dump.ml[103,3787+6]..[106,3913+84])
                                                                    Pexp_constant PConst_string("**   There is a tension between\n**   (1) %s\n**   without even requesting a lookahead token, and\n**   (2) testing whether the lookahead token is a member of the above set.\n",(src/dump.ml[103,3787+7]..[106,3913+83]),None)
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/dump.ml[107,3998+6]..[107,3998+37])
                                                                    Pexp_apply
                                                                    expression (src/dump.ml[107,3998+7]..[107,3998+26])
                                                                      Pexp_ident "Production.describe" (src/dump.ml[107,3998+7]..[107,3998+26])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/dump.ml[107,3998+27]..[107,3998+31])
  Pexp_construct "true" (src/dump.ml[107,3998+27]..[107,3998+31])
  None
                                                                      <arg>
                                                                      Nolabel
expression (src/dump.ml[107,3998+32]..[107,3998+36])
  Pexp_ident "prod" (src/dump.ml[107,3998+32]..[107,3998+36])
                                                                    ]
                                                              ]
                                                ]
                                          ]
                                        expression (src/dump.ml[113,4067+2]..[113,4067+18])
                                          Pexp_apply
                                          expression (src/dump.ml[113,4067+2]..[113,4067+9])
                                            Pexp_ident "fprintf" (src/dump.ml[113,4067+2]..[113,4067+9])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/dump.ml[113,4067+10]..[113,4067+13])
                                                Pexp_ident "out" (src/dump.ml[113,4067+10]..[113,4067+13])
                                            <arg>
                                            Nolabel
                                              expression (src/dump.ml[113,4067+14]..[113,4067+18])
                                                Pexp_constant PConst_string("\n",(src/dump.ml[113,4067+15]..[113,4067+17]),None)
                                          ]
              ]
            structure_item (src/dump.ml[115,4087+0]..[120,4242+41])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/dump.ml[115,4087+4]..[115,4087+8])
                    Ppat_var "dump" (src/dump.ml[115,4087+4]..[115,4087+8])
                  expression (src/dump.ml[115,4087+9]..[120,4242+41]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/dump.ml[115,4087+9]..[115,4087+17])
                      Ppat_var "filename" (src/dump.ml[115,4087+9]..[115,4087+17])
                    expression (src/dump.ml[116,4107+2]..[120,4242+41])
                      Pexp_letmodule "SS" (src/dump.ml[116,4107+13]..[116,4107+15])
                      module_expr (src/dump.ml[116,4107+18]..[116,4107+36])
                        Pmod_apply_unit
                        module_expr (src/dump.ml[116,4107+18]..[116,4107+34])
                          Pmod_ident "StackSymbols.Run" (src/dump.ml[116,4107+18]..[116,4107+34])
                      expression (src/dump.ml[117,4147+2]..[120,4242+41])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/dump.ml[117,4147+6]..[117,4147+9])
                              Ppat_var "out" (src/dump.ml[117,4147+6]..[117,4147+9])
                            expression (src/dump.ml[117,4147+12]..[117,4147+29])
                              Pexp_apply
                              expression (src/dump.ml[117,4147+12]..[117,4147+20])
                                Pexp_ident "open_out" (src/dump.ml[117,4147+12]..[117,4147+20])
                              [
                                <arg>
                                Nolabel
                                  expression (src/dump.ml[117,4147+21]..[117,4147+29])
                                    Pexp_ident "filename" (src/dump.ml[117,4147+21]..[117,4147+29])
                              ]
                        ]
                        expression (src/dump.ml[118,4180+2]..[120,4242+41])
                          Pexp_sequence
                          expression (src/dump.ml[118,4180+2]..[118,4180+43])
                            Pexp_apply
                            expression (src/dump.ml[118,4180+2]..[118,4180+10])
                              Pexp_ident "Lr1.iter" (src/dump.ml[118,4180+2]..[118,4180+10])
                            [
                              <arg>
                              Nolabel
                                expression (src/dump.ml[118,4180+11]..[118,4180+43])
                                  Pexp_apply
                                  expression (src/dump.ml[118,4180+12]..[118,4180+21])
                                    Pexp_ident "dump_node" (src/dump.ml[118,4180+12]..[118,4180+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/dump.ml[118,4180+22]..[118,4180+25])
                                        Pexp_ident "out" (src/dump.ml[118,4180+22]..[118,4180+25])
                                    <arg>
                                    Nolabel
                                      expression (src/dump.ml[118,4180+26]..[118,4180+42])
                                        Pexp_ident "SS.stack_symbols" (src/dump.ml[118,4180+26]..[118,4180+42])
                                  ]
                            ]
                          expression (src/dump.ml[119,4225+2]..[120,4242+41])
                            Pexp_sequence
                            expression (src/dump.ml[119,4225+2]..[119,4225+15])
                              Pexp_apply
                              expression (src/dump.ml[119,4225+2]..[119,4225+11])
                                Pexp_ident "close_out" (src/dump.ml[119,4225+2]..[119,4225+11])
                              [
                                <arg>
                                Nolabel
                                  expression (src/dump.ml[119,4225+12]..[119,4225+15])
                                    Pexp_ident "out" (src/dump.ml[119,4225+12]..[119,4225+15])
                              ]
                            expression (src/dump.ml[120,4242+2]..[120,4242+41])
                              Pexp_apply
                              expression (src/dump.ml[120,4242+2]..[120,4242+11])
                                Pexp_ident "Time.tick" (src/dump.ml[120,4242+2]..[120,4242+11])
                              [
                                <arg>
                                Nolabel
                                  expression (src/dump.ml[120,4242+12]..[120,4242+41])
                                    Pexp_constant PConst_string("Dumping the LR(1) automaton",(src/dump.ml[120,4242+13]..[120,4242+40]),None)
                              ]
              ]
          ]
]

open Printf
open Grammar
module Make(Default:sig
                      val has_default_reduction :
                        Lr1.node -> (Production.index * TerminalSet.t) option
                    end) =
  struct
    let dump_node out stack_symbols node =
      fprintf out "State %d:\n" (Lr1.number node);
      fprintf out "## Known stack suffix:\n##%s\n"
        (StackSymbols.print_symbols (stack_symbols node));
      fprintf out "## LR(1) items:\n%s" (Lr0.print "" (Lr1.state node));
      fprintf out "## Transitions:\n";
      SymbolMap.iter
        (fun symbol ->
           fun node ->
             fprintf out "-- On %s shift to state %d\n" (Symbol.print symbol)
               (Lr1.number node)) (Lr1.transitions node);
      (match Default.has_default_reduction node with
       | Some (prod, toks) ->
           (assert
              ((TerminalSet.equal toks (TerminalSet.singleton Terminal.sharp))
                 || (not (TerminalSet.mem Terminal.sharp toks)));
            (let keyword =
               if TerminalSet.mem Terminal.sharp toks
               then "Without"
               else "After" in
             fprintf out "## Default reduction:\n";
             fprintf out "-- %s reading the next token, %s\n" keyword
               (Production.describe false prod)))
       | None ->
           (fprintf out "## Reductions:\n";
            (let reductions = Lr0.invert (Lr1.reductions node) in
             ProductionMap.iter
               (fun prod ->
                  fun toks ->
                    fprintf out "-- On %s\n" (TerminalSet.print toks);
                    fprintf out "--   %s\n" (Production.describe false prod))
               reductions)));
      if not (TerminalSet.is_empty (Lr1.conflict_tokens node))
      then
        fprintf out "** Conflict on %s\n"
          (TerminalSet.print (Lr1.conflict_tokens node));
      (Lr1.has_eos_conflict node) |>
        (Option.iter
           (fun (prods, toks) ->
              assert (prods <> []);
              (let prod = List.hd prods in
               fprintf out "** End-of-stream conflict on %s\n"
                 (TerminalSet.print toks);
               fprintf out
                 "**   There is a tension between\n**   (1) %s\n**   without even requesting a lookahead token, and\n**   (2) testing whether the lookahead token is a member of the above set.\n"
                 (Production.describe true prod))));
      fprintf out "\n"
    let dump filename =
      let module SS = (StackSymbols.Run)() in
        let out = open_out filename in
        Lr1.iter (dump_node out SS.stack_symbols);
        close_out out;
        Time.tick "Dumping the LR(1) automaton"
  end
[
  structure_item (src/dump.ml[14,994+0]..src/dump.ml[14,994+11])
    Tstr_open Fresh
    module_expr (src/dump.ml[14,994+5]..src/dump.ml[14,994+11])
      Tmod_ident "Stdlib!.Printf"
  structure_item (src/dump.ml[15,1006+0]..src/dump.ml[15,1006+12])
    Tstr_open Fresh
    module_expr (src/dump.ml[15,1006+5]..src/dump.ml[15,1006+12])
      Tmod_ident "Dune__exe!.Grammar"
  structure_item (src/dump.ml[17,1020+0]..src/dump.ml[122,4285+3])
    Tstr_module
    Make/1169
      module_expr (src/dump.ml[17,1020+12]..src/dump.ml[122,4285+3])
        Tmod_functor "Default/542"
        module_type (src/dump.ml[17,1020+23]..src/dump.ml[22,1136+3])
          Tmty_signature
          [
            signature_item (src/dump.ml[19,1048+2]..src/dump.ml[20,1077+57])
              Tsig_value
              value_description has_default_reduction/541 (src/dump.ml[19,1048+2]..src/dump.ml[20,1077+57])
                core_type (src/dump.ml[20,1077+4]..src/dump.ml[20,1077+57])
                  Ttyp_arrow
                  Nolabel
                  core_type (src/dump.ml[20,1077+4]..src/dump.ml[20,1077+12])
                    Ttyp_constr "Dune__exe!.Lr1.node"
                    []
                  core_type (src/dump.ml[20,1077+16]..src/dump.ml[20,1077+57])
                    Ttyp_constr "option/10!"
                    [
                      core_type (src/dump.ml[20,1077+17]..src/dump.ml[20,1077+49])
                        Ttyp_tuple
                        [
                          core_type (src/dump.ml[20,1077+17]..src/dump.ml[20,1077+33])
                            Ttyp_constr "Dune__exe!.Grammar.Production.index"
                            []
                          core_type (src/dump.ml[20,1077+36]..src/dump.ml[20,1077+49])
                            Ttyp_constr "Dune__exe!.Grammar.TerminalSet.t"
                            []
                        ]
                    ]
                []
          ]
        module_expr (src/dump.ml[22,1136+7]..src/dump.ml[122,4285+3])
          Tmod_structure
          [
            structure_item (src/dump.ml[24,1151+0]..src/dump.ml[113,4067+18])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/dump.ml[24,1151+4]..src/dump.ml[24,1151+13])
                    Tpat_var "dump_node/543"
                  expression (src/dump.ml[24,1151+14]..src/dump.ml[113,4067+18]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/dump.ml[24,1151+14]..src/dump.ml[24,1151+17])
                          Tpat_var "out/545"
                        expression (src/dump.ml[24,1151+18]..src/dump.ml[113,4067+18]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/dump.ml[24,1151+18]..src/dump.ml[24,1151+31])
                                Tpat_var "stack_symbols/546"
                              expression (src/dump.ml[24,1151+32]..src/dump.ml[113,4067+18]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/dump.ml[24,1151+32]..src/dump.ml[24,1151+36])
                                      Tpat_var "node/547"
                                    expression (src/dump.ml[28,1224+2]..src/dump.ml[113,4067+18])
                                      Texp_sequence
                                      expression (src/dump.ml[28,1224+2]..src/dump.ml[29,1252+21])
                                        Texp_apply
                                        expression (src/dump.ml[28,1224+2]..src/dump.ml[28,1224+9])
                                          Texp_ident "Stdlib!.Printf.fprintf"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/dump.ml[28,1224+10]..src/dump.ml[28,1224+13])
                                              Texp_ident "out/545"
                                          <arg>
                                            Nolabel
                                            expression (src/dump.ml[28,1224+14]..src/dump.ml[28,1224+27])
                                              Texp_construct "CamlinternalFormatBasics.Format"
                                              [
                                                expression (src/dump.ml[28,1224+14]..src/dump.ml[28,1224+27]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                  [
                                                    expression (src/dump.ml[28,1224+14]..src/dump.ml[28,1224+27]) ghost
                                                      Texp_constant Const_string("State ",(src/dump.ml[28,1224+14]..src/dump.ml[28,1224+27]) ghost,None)
                                                    expression (src/dump.ml[28,1224+14]..src/dump.ml[28,1224+27]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.Int"
                                                      [
                                                        expression (src/dump.ml[28,1224+14]..src/dump.ml[28,1224+27]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.Int_d"
                                                          []
                                                        expression (src/dump.ml[28,1224+14]..src/dump.ml[28,1224+27]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                                          []
                                                        expression (src/dump.ml[28,1224+14]..src/dump.ml[28,1224+27]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_precision"
                                                          []
                                                        expression (src/dump.ml[28,1224+14]..src/dump.ml[28,1224+27]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                          [
                                                            expression (src/dump.ml[28,1224+14]..src/dump.ml[28,1224+27]) ghost
                                                              Texp_constant Const_string(":\n",(src/dump.ml[28,1224+14]..src/dump.ml[28,1224+27]) ghost,None)
                                                            expression (src/dump.ml[28,1224+14]..src/dump.ml[28,1224+27]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                              []
                                                          ]
                                                      ]
                                                  ]
                                                expression (src/dump.ml[28,1224+14]..src/dump.ml[28,1224+27]) ghost
                                                  Texp_constant Const_string("State %d:\n",(src/dump.ml[28,1224+14]..src/dump.ml[28,1224+27]) ghost,None)
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/dump.ml[29,1252+4]..src/dump.ml[29,1252+21])
                                              Texp_apply
                                              expression (src/dump.ml[29,1252+5]..src/dump.ml[29,1252+15])
                                                Texp_ident "Dune__exe!.Lr1.number"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/dump.ml[29,1252+16]..src/dump.ml[29,1252+20])
                                                    Texp_ident "node/547"
                                              ]
                                        ]
                                      expression (src/dump.ml[33,1322+2]..src/dump.ml[113,4067+18])
                                        Texp_sequence
                                        expression (src/dump.ml[33,1322+2]..src/dump.ml[36,1380+53])
                                          Texp_apply
                                          expression (src/dump.ml[33,1322+2]..src/dump.ml[33,1322+9])
                                            Texp_ident "Stdlib!.Printf.fprintf"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/dump.ml[33,1322+10]..src/dump.ml[33,1322+13])
                                                Texp_ident "out/545"
                                            <arg>
                                              Nolabel
                                              expression (src/dump.ml[34,1336+4]..src/dump.ml[35,1367+12])
                                                Texp_construct "CamlinternalFormatBasics.Format"
                                                [
                                                  expression (src/dump.ml[34,1336+4]..src/dump.ml[35,1367+12]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                    [
                                                      expression (src/dump.ml[34,1336+4]..src/dump.ml[35,1367+12]) ghost
                                                        Texp_constant Const_string("## Known stack suffix:\n##",(src/dump.ml[34,1336+4]..src/dump.ml[35,1367+12]) ghost,None)
                                                      expression (src/dump.ml[34,1336+4]..src/dump.ml[35,1367+12]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.String"
                                                        [
                                                          expression (src/dump.ml[34,1336+4]..src/dump.ml[35,1367+12]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                            []
                                                          expression (src/dump.ml[34,1336+4]..src/dump.ml[35,1367+12]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                            [
                                                              expression (src/dump.ml[34,1336+4]..src/dump.ml[35,1367+12]) ghost
                                                                Texp_constant Const_char 0a
                                                              expression (src/dump.ml[34,1336+4]..src/dump.ml[35,1367+12]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                []
                                                            ]
                                                        ]
                                                    ]
                                                  expression (src/dump.ml[34,1336+4]..src/dump.ml[35,1367+12]) ghost
                                                    Texp_constant Const_string("## Known stack suffix:\n##%s\n",(src/dump.ml[34,1336+4]..src/dump.ml[35,1367+12]) ghost,None)
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/dump.ml[36,1380+4]..src/dump.ml[36,1380+53])
                                                Texp_apply
                                                expression (src/dump.ml[36,1380+5]..src/dump.ml[36,1380+31])
                                                  Texp_ident "Dune__exe!.StackSymbols.print_symbols"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/dump.ml[36,1380+32]..src/dump.ml[36,1380+52])
                                                      Texp_apply
                                                      expression (src/dump.ml[36,1380+33]..src/dump.ml[36,1380+46])
                                                        Texp_ident "stack_symbols/546"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/dump.ml[36,1380+47]..src/dump.ml[36,1380+51])
                                                            Texp_ident "node/547"
                                                      ]
                                                ]
                                          ]
                                        expression (src/dump.ml[40,1462+2]..src/dump.ml[113,4067+18])
                                          Texp_sequence
                                          expression (src/dump.ml[40,1462+2]..src/dump.ml[41,1498+35])
                                            Texp_apply
                                            expression (src/dump.ml[40,1462+2]..src/dump.ml[40,1462+9])
                                              Texp_ident "Stdlib!.Printf.fprintf"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/dump.ml[40,1462+10]..src/dump.ml[40,1462+13])
                                                  Texp_ident "out/545"
                                              <arg>
                                                Nolabel
                                                expression (src/dump.ml[40,1462+14]..src/dump.ml[40,1462+35])
                                                  Texp_construct "CamlinternalFormatBasics.Format"
                                                  [
                                                    expression (src/dump.ml[40,1462+14]..src/dump.ml[40,1462+35]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                      [
                                                        expression (src/dump.ml[40,1462+14]..src/dump.ml[40,1462+35]) ghost
                                                          Texp_constant Const_string("## LR(1) items:\n",(src/dump.ml[40,1462+14]..src/dump.ml[40,1462+35]) ghost,None)
                                                        expression (src/dump.ml[40,1462+14]..src/dump.ml[40,1462+35]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.String"
                                                          [
                                                            expression (src/dump.ml[40,1462+14]..src/dump.ml[40,1462+35]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                                              []
                                                            expression (src/dump.ml[40,1462+14]..src/dump.ml[40,1462+35]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                              []
                                                          ]
                                                      ]
                                                    expression (src/dump.ml[40,1462+14]..src/dump.ml[40,1462+35]) ghost
                                                      Texp_constant Const_string("## LR(1) items:\n%s",(src/dump.ml[40,1462+14]..src/dump.ml[40,1462+35]) ghost,None)
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (src/dump.ml[41,1498+4]..src/dump.ml[41,1498+35])
                                                  Texp_apply
                                                  expression (src/dump.ml[41,1498+5]..src/dump.ml[41,1498+14])
                                                    Texp_ident "Dune__exe!.Lr0.print"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/dump.ml[41,1498+15]..src/dump.ml[41,1498+17])
                                                        Texp_constant Const_string("",(src/dump.ml[41,1498+16]..src/dump.ml[41,1498+16]),None)
                                                    <arg>
                                                      Nolabel
                                                      expression (src/dump.ml[41,1498+18]..src/dump.ml[41,1498+34])
                                                        Texp_apply
                                                        expression (src/dump.ml[41,1498+19]..src/dump.ml[41,1498+28])
                                                          Texp_ident "Dune__exe!.Lr1.state"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/dump.ml[41,1498+29]..src/dump.ml[41,1498+33])
                                                              Texp_ident "node/547"
                                                        ]
                                                  ]
                                            ]
                                          expression (src/dump.ml[45,1568+2]..src/dump.ml[113,4067+18])
                                            Texp_sequence
                                            expression (src/dump.ml[45,1568+2]..src/dump.ml[45,1568+33])
                                              Texp_apply
                                              expression (src/dump.ml[45,1568+2]..src/dump.ml[45,1568+9])
                                                Texp_ident "Stdlib!.Printf.fprintf"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/dump.ml[45,1568+10]..src/dump.ml[45,1568+13])
                                                    Texp_ident "out/545"
                                                <arg>
                                                  Nolabel
                                                  expression (src/dump.ml[45,1568+14]..src/dump.ml[45,1568+33])
                                                    Texp_construct "CamlinternalFormatBasics.Format"
                                                    [
                                                      expression (src/dump.ml[45,1568+14]..src/dump.ml[45,1568+33]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                        [
                                                          expression (src/dump.ml[45,1568+14]..src/dump.ml[45,1568+33]) ghost
                                                            Texp_constant Const_string("## Transitions:\n",(src/dump.ml[45,1568+14]..src/dump.ml[45,1568+33]) ghost,None)
                                                          expression (src/dump.ml[45,1568+14]..src/dump.ml[45,1568+33]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                            []
                                                        ]
                                                      expression (src/dump.ml[45,1568+14]..src/dump.ml[45,1568+33]) ghost
                                                        Texp_constant Const_string("## Transitions:\n",(src/dump.ml[45,1568+14]..src/dump.ml[45,1568+33]) ghost,None)
                                                    ]
                                              ]
                                            expression (src/dump.ml[46,1603+2]..src/dump.ml[113,4067+18])
                                              Texp_sequence
                                              expression (src/dump.ml[46,1603+2]..src/dump.ml[49,1733+26])
                                                Texp_apply
                                                expression (src/dump.ml[46,1603+2]..src/dump.ml[46,1603+16])
                                                  Texp_ident "Dune__exe!.Grammar.SymbolMap.iter"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/dump.ml[46,1603+17]..src/dump.ml[49,1733+3])
                                                      Texp_function
                                                      Nolabel
                                                      [
                                                        <case>
                                                          pattern (src/dump.ml[46,1603+22]..src/dump.ml[46,1603+28])
                                                            Tpat_var "symbol/740"
                                                          expression (src/dump.ml[46,1603+29]..src/dump.ml[48,1687+45]) ghost
                                                            Texp_function
                                                            Nolabel
                                                            [
                                                              <case>
                                                                pattern (src/dump.ml[46,1603+29]..src/dump.ml[46,1603+33])
                                                                  Tpat_var "node/741"
                                                                expression (src/dump.ml[47,1640+4]..src/dump.ml[48,1687+45])
                                                                  Texp_apply
                                                                  expression (src/dump.ml[47,1640+4]..src/dump.ml[47,1640+11])
                                                                    Texp_ident "Stdlib!.Printf.fprintf"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/dump.ml[47,1640+12]..src/dump.ml[47,1640+15])
                                                                        Texp_ident "out/545"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/dump.ml[47,1640+16]..src/dump.ml[47,1640+46])
                                                                        Texp_construct "CamlinternalFormatBasics.Format"
                                                                        [
                                                                          expression (src/dump.ml[47,1640+16]..src/dump.ml[47,1640+46]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                            [
                                                                              expression (src/dump.ml[47,1640+16]..src/dump.ml[47,1640+46]) ghost
                                                                                Texp_constant Const_string("-- On ",(src/dump.ml[47,1640+16]..src/dump.ml[47,1640+46]) ghost,None)
                                                                              expression (src/dump.ml[47,1640+16]..src/dump.ml[47,1640+46]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.String"
                                                                                [
                                                                                  expression (src/dump.ml[47,1640+16]..src/dump.ml[47,1640+46]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                    []
                                                                                  expression (src/dump.ml[47,1640+16]..src/dump.ml[47,1640+46]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                    [
                                                                                      expression (src/dump.ml[47,1640+16]..src/dump.ml[47,1640+46]) ghost
                                                                                        Texp_constant Const_string(" shift to state ",(src/dump.ml[47,1640+16]..src/dump.ml[47,1640+46]) ghost,None)
                                                                                      expression (src/dump.ml[47,1640+16]..src/dump.ml[47,1640+46]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.Int"
                                                                                        [
                                                                                          expression (src/dump.ml[47,1640+16]..src/dump.ml[47,1640+46]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.Int_d"
                                                                                            []
                                                                                          expression (src/dump.ml[47,1640+16]..src/dump.ml[47,1640+46]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                            []
                                                                                          expression (src/dump.ml[47,1640+16]..src/dump.ml[47,1640+46]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.No_precision"
                                                                                            []
                                                                                          expression (src/dump.ml[47,1640+16]..src/dump.ml[47,1640+46]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                            [
                                                                                              expression (src/dump.ml[47,1640+16]..src/dump.ml[47,1640+46]) ghost
                                                                                                Texp_constant Const_char 0a
                                                                                              expression (src/dump.ml[47,1640+16]..src/dump.ml[47,1640+46]) ghost
                                                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                []
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                          expression (src/dump.ml[47,1640+16]..src/dump.ml[47,1640+46]) ghost
                                                                            Texp_constant Const_string("-- On %s shift to state %d\n",(src/dump.ml[47,1640+16]..src/dump.ml[47,1640+46]) ghost,None)
                                                                        ]
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/dump.ml[48,1687+6]..src/dump.ml[48,1687+27])
                                                                        Texp_apply
                                                                        expression (src/dump.ml[48,1687+7]..src/dump.ml[48,1687+19])
                                                                          Texp_ident "Dune__exe!.Grammar.Symbol.print"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/dump.ml[48,1687+20]..src/dump.ml[48,1687+26])
                                                                              Texp_ident "symbol/740"
                                                                        ]
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/dump.ml[48,1687+28]..src/dump.ml[48,1687+45])
                                                                        Texp_apply
                                                                        expression (src/dump.ml[48,1687+29]..src/dump.ml[48,1687+39])
                                                                          Texp_ident "Dune__exe!.Lr1.number"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/dump.ml[48,1687+40]..src/dump.ml[48,1687+44])
                                                                              Texp_ident "node/741"
                                                                        ]
                                                                  ]
                                                            ]
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (src/dump.ml[49,1733+4]..src/dump.ml[49,1733+26])
                                                      Texp_apply
                                                      expression (src/dump.ml[49,1733+5]..src/dump.ml[49,1733+20])
                                                        Texp_ident "Dune__exe!.Lr1.transitions"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/dump.ml[49,1733+21]..src/dump.ml[49,1733+25])
                                                            Texp_ident "node/547"
                                                      ]
                                                ]
                                              expression (src/dump.ml[53,1793+2]..src/dump.ml[113,4067+18])
                                                Texp_sequence
                                                expression (src/dump.ml[53,1793+2]..src/dump.ml[82,3155+5])
                                                  Texp_match
                                                  expression (src/dump.ml[53,1793+14]..src/dump.ml[53,1793+48])
                                                    Texp_apply
                                                    expression (src/dump.ml[53,1793+14]..src/dump.ml[53,1793+43])
                                                      Texp_ident "Default/542.has_default_reduction"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/dump.ml[53,1793+44]..src/dump.ml[53,1793+48])
                                                          Texp_ident "node/547"
                                                    ]
                                                  [
                                                    <case>
                                                      pattern (src/dump.ml[54,1847+4]..src/dump.ml[54,1847+21])
                                                        Tpat_value
                                                        pattern (src/dump.ml[54,1847+4]..src/dump.ml[54,1847+21])
                                                          Tpat_construct "Some"
                                                          [
                                                            pattern (src/dump.ml[54,1847+9]..src/dump.ml[54,1847+21])
                                                              Tpat_tuple
                                                              [
                                                                pattern (src/dump.ml[54,1847+10]..src/dump.ml[54,1847+14])
                                                                  Tpat_var "prod/812"
                                                                pattern (src/dump.ml[54,1847+16]..src/dump.ml[54,1847+20])
                                                                  Tpat_var "toks/813"
                                                              ]
                                                          ]
                                                          None
                                                      expression (src/dump.ml[61,2290+6]..src/dump.ml[70,2641+49])
                                                        Texp_sequence
                                                        expression (src/dump.ml[61,2290+6]..src/dump.ml[64,2428+7])
                                                          Texp_assert                                                          expression (src/dump.ml[61,2290+13]..src/dump.ml[64,2428+7])
                                                            Texp_apply
                                                            expression (src/dump.ml[62,2305+70]..src/dump.ml[62,2305+72])
                                                              Texp_ident "Stdlib!.||"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/dump.ml[62,2305+8]..src/dump.ml[62,2305+69])
                                                                  Texp_apply
                                                                  expression (src/dump.ml[62,2305+8]..src/dump.ml[62,2305+25])
                                                                    Texp_ident "Dune__exe!.Grammar.TerminalSet.equal"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/dump.ml[62,2305+26]..src/dump.ml[62,2305+30])
                                                                        Texp_ident "toks/813"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/dump.ml[62,2305+31]..src/dump.ml[62,2305+69])
                                                                        Texp_apply
                                                                        expression (src/dump.ml[62,2305+32]..src/dump.ml[62,2305+53])
                                                                          Texp_ident "Dune__exe!.Grammar.TerminalSet.singleton"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/dump.ml[62,2305+54]..src/dump.ml[62,2305+68])
                                                                              Texp_ident "Dune__exe!.Grammar.Terminal.sharp"
                                                                        ]
                                                                  ]
                                                              <arg>
                                                                Nolabel
                                                                expression (src/dump.ml[63,2378+8]..src/dump.ml[63,2378+49])
                                                                  Texp_apply
                                                                  expression (src/dump.ml[63,2378+8]..src/dump.ml[63,2378+11])
                                                                    Texp_ident "Stdlib!.not"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/dump.ml[63,2378+12]..src/dump.ml[63,2378+49])
                                                                        Texp_apply
                                                                        expression (src/dump.ml[63,2378+13]..src/dump.ml[63,2378+28])
                                                                          Texp_ident "Dune__exe!.Grammar.TerminalSet.mem"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/dump.ml[63,2378+29]..src/dump.ml[63,2378+43])
                                                                              Texp_ident "Dune__exe!.Grammar.Terminal.sharp"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/dump.ml[63,2378+44]..src/dump.ml[63,2378+48])
                                                                              Texp_ident "toks/813"
                                                                        ]
                                                                  ]
                                                            ]
                                                        expression (src/dump.ml[65,2437+6]..src/dump.ml[70,2641+49])
                                                          Texp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (src/dump.ml[65,2437+10]..src/dump.ml[65,2437+17])
                                                                Tpat_var "keyword/895"
                                                              expression (src/dump.ml[66,2457+8]..src/dump.ml[66,2457+74])
                                                                Texp_ifthenelse
                                                                expression (src/dump.ml[66,2457+11]..src/dump.ml[66,2457+46])
                                                                  Texp_apply
                                                                  expression (src/dump.ml[66,2457+11]..src/dump.ml[66,2457+26])
                                                                    Texp_ident "Dune__exe!.Grammar.TerminalSet.mem"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/dump.ml[66,2457+27]..src/dump.ml[66,2457+41])
                                                                        Texp_ident "Dune__exe!.Grammar.Terminal.sharp"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/dump.ml[66,2457+42]..src/dump.ml[66,2457+46])
                                                                        Texp_ident "toks/813"
                                                                  ]
                                                                expression (src/dump.ml[66,2457+52]..src/dump.ml[66,2457+61])
                                                                  Texp_constant Const_string("Without",(src/dump.ml[66,2457+53]..src/dump.ml[66,2457+60]),None)
                                                                Some
                                                                  expression (src/dump.ml[66,2457+67]..src/dump.ml[66,2457+74])
                                                                    Texp_constant Const_string("After",(src/dump.ml[66,2457+68]..src/dump.ml[66,2457+73]),None)
                                                          ]
                                                          expression (src/dump.ml[68,2541+6]..src/dump.ml[70,2641+49])
                                                            Texp_sequence
                                                            expression (src/dump.ml[68,2541+6]..src/dump.ml[68,2541+43])
                                                              Texp_apply
                                                              expression (src/dump.ml[68,2541+6]..src/dump.ml[68,2541+13])
                                                                Texp_ident "Stdlib!.Printf.fprintf"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/dump.ml[68,2541+14]..src/dump.ml[68,2541+17])
                                                                    Texp_ident "out/545"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/dump.ml[68,2541+18]..src/dump.ml[68,2541+43])
                                                                    Texp_construct "CamlinternalFormatBasics.Format"
                                                                    [
                                                                      expression (src/dump.ml[68,2541+18]..src/dump.ml[68,2541+43]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                        [
                                                                          expression (src/dump.ml[68,2541+18]..src/dump.ml[68,2541+43]) ghost
                                                                            Texp_constant Const_string("## Default reduction:\n",(src/dump.ml[68,2541+18]..src/dump.ml[68,2541+43]) ghost,None)
                                                                          expression (src/dump.ml[68,2541+18]..src/dump.ml[68,2541+43]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                            []
                                                                        ]
                                                                      expression (src/dump.ml[68,2541+18]..src/dump.ml[68,2541+43]) ghost
                                                                        Texp_constant Const_string("## Default reduction:\n",(src/dump.ml[68,2541+18]..src/dump.ml[68,2541+43]) ghost,None)
                                                                    ]
                                                              ]
                                                            expression (src/dump.ml[69,2586+6]..src/dump.ml[70,2641+48])
                                                              Texp_apply
                                                              expression (src/dump.ml[69,2586+6]..src/dump.ml[69,2586+13])
                                                                Texp_ident "Stdlib!.Printf.fprintf"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/dump.ml[69,2586+14]..src/dump.ml[69,2586+17])
                                                                    Texp_ident "out/545"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/dump.ml[69,2586+18]..src/dump.ml[69,2586+54])
                                                                    Texp_construct "CamlinternalFormatBasics.Format"
                                                                    [
                                                                      expression (src/dump.ml[69,2586+18]..src/dump.ml[69,2586+54]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                        [
                                                                          expression (src/dump.ml[69,2586+18]..src/dump.ml[69,2586+54]) ghost
                                                                            Texp_constant Const_string("-- ",(src/dump.ml[69,2586+18]..src/dump.ml[69,2586+54]) ghost,None)
                                                                          expression (src/dump.ml[69,2586+18]..src/dump.ml[69,2586+54]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.String"
                                                                            [
                                                                              expression (src/dump.ml[69,2586+18]..src/dump.ml[69,2586+54]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                []
                                                                              expression (src/dump.ml[69,2586+18]..src/dump.ml[69,2586+54]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                [
                                                                                  expression (src/dump.ml[69,2586+18]..src/dump.ml[69,2586+54]) ghost
                                                                                    Texp_constant Const_string(" reading the next token, ",(src/dump.ml[69,2586+18]..src/dump.ml[69,2586+54]) ghost,None)
                                                                                  expression (src/dump.ml[69,2586+18]..src/dump.ml[69,2586+54]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.String"
                                                                                    [
                                                                                      expression (src/dump.ml[69,2586+18]..src/dump.ml[69,2586+54]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                        []
                                                                                      expression (src/dump.ml[69,2586+18]..src/dump.ml[69,2586+54]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                        [
                                                                                          expression (src/dump.ml[69,2586+18]..src/dump.ml[69,2586+54]) ghost
                                                                                            Texp_constant Const_char 0a
                                                                                          expression (src/dump.ml[69,2586+18]..src/dump.ml[69,2586+54]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                            []
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ]
                                                                      expression (src/dump.ml[69,2586+18]..src/dump.ml[69,2586+54]) ghost
                                                                        Texp_constant Const_string("-- %s reading the next token, %s\n",(src/dump.ml[69,2586+18]..src/dump.ml[69,2586+54]) ghost,None)
                                                                    ]
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/dump.ml[70,2641+8]..src/dump.ml[70,2641+15])
                                                                    Texp_ident "keyword/895"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/dump.ml[70,2641+16]..src/dump.ml[70,2641+48])
                                                                    Texp_apply
                                                                    expression (src/dump.ml[70,2641+17]..src/dump.ml[70,2641+36])
                                                                      Texp_ident "Dune__exe!.Grammar.Production.describe"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/dump.ml[70,2641+37]..src/dump.ml[70,2641+42])
                                                                          Texp_construct "false"
                                                                          []
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/dump.ml[70,2641+43]..src/dump.ml[70,2641+47])
                                                                          Texp_ident "prod/812"
                                                                    ]
                                                              ]
                                                    <case>
                                                      pattern (src/dump.ml[72,2692+4]..src/dump.ml[72,2692+8])
                                                        Tpat_value
                                                        pattern (src/dump.ml[72,2692+4]..src/dump.ml[72,2692+8])
                                                          Tpat_construct "None"
                                                          []
                                                          None
                                                      expression (src/dump.ml[74,2747+6]..src/dump.ml[81,3136+18])
                                                        Texp_sequence
                                                        expression (src/dump.ml[74,2747+6]..src/dump.ml[74,2747+36])
                                                          Texp_apply
                                                          expression (src/dump.ml[74,2747+6]..src/dump.ml[74,2747+13])
                                                            Texp_ident "Stdlib!.Printf.fprintf"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/dump.ml[74,2747+14]..src/dump.ml[74,2747+17])
                                                                Texp_ident "out/545"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/dump.ml[74,2747+18]..src/dump.ml[74,2747+36])
                                                                Texp_construct "CamlinternalFormatBasics.Format"
                                                                [
                                                                  expression (src/dump.ml[74,2747+18]..src/dump.ml[74,2747+36]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                    [
                                                                      expression (src/dump.ml[74,2747+18]..src/dump.ml[74,2747+36]) ghost
                                                                        Texp_constant Const_string("## Reductions:\n",(src/dump.ml[74,2747+18]..src/dump.ml[74,2747+36]) ghost,None)
                                                                      expression (src/dump.ml[74,2747+18]..src/dump.ml[74,2747+36]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                        []
                                                                    ]
                                                                  expression (src/dump.ml[74,2747+18]..src/dump.ml[74,2747+36]) ghost
                                                                    Texp_constant Const_string("## Reductions:\n",(src/dump.ml[74,2747+18]..src/dump.ml[74,2747+36]) ghost,None)
                                                                ]
                                                          ]
                                                        expression (src/dump.ml[77,2910+6]..src/dump.ml[81,3136+18])
                                                          Texp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (src/dump.ml[77,2910+10]..src/dump.ml[77,2910+20])
                                                                Tpat_var "reductions/930"
                                                              expression (src/dump.ml[77,2910+23]..src/dump.ml[77,2910+55])
                                                                Texp_apply
                                                                expression (src/dump.ml[77,2910+23]..src/dump.ml[77,2910+33])
                                                                  Texp_ident "Dune__exe!.Lr0.invert"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/dump.ml[77,2910+34]..src/dump.ml[77,2910+55])
                                                                      Texp_apply
                                                                      expression (src/dump.ml[77,2910+35]..src/dump.ml[77,2910+49])
                                                                        Texp_ident "Dune__exe!.Lr1.reductions"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/dump.ml[77,2910+50]..src/dump.ml[77,2910+54])
                                                                            Texp_ident "node/547"
                                                                      ]
                                                                ]
                                                          ]
                                                          expression (src/dump.ml[78,2969+6]..src/dump.ml[81,3136+18])
                                                            Texp_apply
                                                            expression (src/dump.ml[78,2969+6]..src/dump.ml[78,2969+24])
                                                              Texp_ident "Dune__exe!.Grammar.ProductionMap.iter"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/dump.ml[78,2969+25]..src/dump.ml[81,3136+7])
                                                                  Texp_function
                                                                  Nolabel
                                                                  [
                                                                    <case>
                                                                      pattern (src/dump.ml[78,2969+30]..src/dump.ml[78,2969+34])
                                                                        Tpat_var "prod/1065"
                                                                      expression (src/dump.ml[78,2969+35]..src/dump.ml[80,3071+64]) ghost
                                                                        Texp_function
                                                                        Nolabel
                                                                        [
                                                                          <case>
                                                                            pattern (src/dump.ml[78,2969+35]..src/dump.ml[78,2969+39])
                                                                              Tpat_var "toks/1066"
                                                                            expression (src/dump.ml[79,3012+8]..src/dump.ml[80,3071+64])
                                                                              Texp_sequence
                                                                              expression (src/dump.ml[79,3012+8]..src/dump.ml[79,3012+57])
                                                                                Texp_apply
                                                                                expression (src/dump.ml[79,3012+8]..src/dump.ml[79,3012+15])
                                                                                  Texp_ident "Stdlib!.Printf.fprintf"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/dump.ml[79,3012+16]..src/dump.ml[79,3012+19])
                                                                                      Texp_ident "out/545"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/dump.ml[79,3012+20]..src/dump.ml[79,3012+32])
                                                                                      Texp_construct "CamlinternalFormatBasics.Format"
                                                                                      [
                                                                                        expression (src/dump.ml[79,3012+20]..src/dump.ml[79,3012+32]) ghost
                                                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                          [
                                                                                            expression (src/dump.ml[79,3012+20]..src/dump.ml[79,3012+32]) ghost
                                                                                              Texp_constant Const_string("-- On ",(src/dump.ml[79,3012+20]..src/dump.ml[79,3012+32]) ghost,None)
                                                                                            expression (src/dump.ml[79,3012+20]..src/dump.ml[79,3012+32]) ghost
                                                                                              Texp_construct "CamlinternalFormatBasics.String"
                                                                                              [
                                                                                                expression (src/dump.ml[79,3012+20]..src/dump.ml[79,3012+32]) ghost
                                                                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                  []
                                                                                                expression (src/dump.ml[79,3012+20]..src/dump.ml[79,3012+32]) ghost
                                                                                                  Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                                  [
                                                                                                    expression (src/dump.ml[79,3012+20]..src/dump.ml[79,3012+32]) ghost
                                                                                                      Texp_constant Const_char 0a
                                                                                                    expression (src/dump.ml[79,3012+20]..src/dump.ml[79,3012+32]) ghost
                                                                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                      []
                                                                                                  ]
                                                                                              ]
                                                                                          ]
                                                                                        expression (src/dump.ml[79,3012+20]..src/dump.ml[79,3012+32]) ghost
                                                                                          Texp_constant Const_string("-- On %s\n",(src/dump.ml[79,3012+20]..src/dump.ml[79,3012+32]) ghost,None)
                                                                                      ]
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/dump.ml[79,3012+33]..src/dump.ml[79,3012+57])
                                                                                      Texp_apply
                                                                                      expression (src/dump.ml[79,3012+34]..src/dump.ml[79,3012+51])
                                                                                        Texp_ident "Dune__exe!.Grammar.TerminalSet.print"
                                                                                      [
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/dump.ml[79,3012+52]..src/dump.ml[79,3012+56])
                                                                                            Texp_ident "toks/1066"
                                                                                      ]
                                                                                ]
                                                                              expression (src/dump.ml[80,3071+8]..src/dump.ml[80,3071+64])
                                                                                Texp_apply
                                                                                expression (src/dump.ml[80,3071+8]..src/dump.ml[80,3071+15])
                                                                                  Texp_ident "Stdlib!.Printf.fprintf"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/dump.ml[80,3071+16]..src/dump.ml[80,3071+19])
                                                                                      Texp_ident "out/545"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/dump.ml[80,3071+20]..src/dump.ml[80,3071+31])
                                                                                      Texp_construct "CamlinternalFormatBasics.Format"
                                                                                      [
                                                                                        expression (src/dump.ml[80,3071+20]..src/dump.ml[80,3071+31]) ghost
                                                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                          [
                                                                                            expression (src/dump.ml[80,3071+20]..src/dump.ml[80,3071+31]) ghost
                                                                                              Texp_constant Const_string("--   ",(src/dump.ml[80,3071+20]..src/dump.ml[80,3071+31]) ghost,None)
                                                                                            expression (src/dump.ml[80,3071+20]..src/dump.ml[80,3071+31]) ghost
                                                                                              Texp_construct "CamlinternalFormatBasics.String"
                                                                                              [
                                                                                                expression (src/dump.ml[80,3071+20]..src/dump.ml[80,3071+31]) ghost
                                                                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                  []
                                                                                                expression (src/dump.ml[80,3071+20]..src/dump.ml[80,3071+31]) ghost
                                                                                                  Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                                  [
                                                                                                    expression (src/dump.ml[80,3071+20]..src/dump.ml[80,3071+31]) ghost
                                                                                                      Texp_constant Const_char 0a
                                                                                                    expression (src/dump.ml[80,3071+20]..src/dump.ml[80,3071+31]) ghost
                                                                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                      []
                                                                                                  ]
                                                                                              ]
                                                                                          ]
                                                                                        expression (src/dump.ml[80,3071+20]..src/dump.ml[80,3071+31]) ghost
                                                                                          Texp_constant Const_string("--   %s\n",(src/dump.ml[80,3071+20]..src/dump.ml[80,3071+31]) ghost,None)
                                                                                      ]
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/dump.ml[80,3071+32]..src/dump.ml[80,3071+64])
                                                                                      Texp_apply
                                                                                      expression (src/dump.ml[80,3071+33]..src/dump.ml[80,3071+52])
                                                                                        Texp_ident "Dune__exe!.Grammar.Production.describe"
                                                                                      [
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/dump.ml[80,3071+53]..src/dump.ml[80,3071+58])
                                                                                            Texp_construct "false"
                                                                                            []
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/dump.ml[80,3071+59]..src/dump.ml[80,3071+63])
                                                                                            Texp_ident "prod/1065"
                                                                                      ]
                                                                                ]
                                                                        ]
                                                                  ]
                                                              <arg>
                                                                Nolabel
                                                                expression (src/dump.ml[81,3136+8]..src/dump.ml[81,3136+18])
                                                                  Texp_ident "reductions/930"
                                                            ]
                                                  ]
                                                expression (src/dump.ml[86,3193+2]..src/dump.ml[113,4067+18])
                                                  Texp_sequence
                                                  expression (src/dump.ml[86,3193+2]..src/dump.ml[88,3295+52])
                                                    Texp_ifthenelse
                                                    expression (src/dump.ml[86,3193+5]..src/dump.ml[86,3193+58])
                                                      Texp_apply
                                                      expression (src/dump.ml[86,3193+5]..src/dump.ml[86,3193+8])
                                                        Texp_ident "Stdlib!.not"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/dump.ml[86,3193+9]..src/dump.ml[86,3193+58])
                                                            Texp_apply
                                                            expression (src/dump.ml[86,3193+10]..src/dump.ml[86,3193+30])
                                                              Texp_ident "Dune__exe!.Grammar.TerminalSet.is_empty"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/dump.ml[86,3193+31]..src/dump.ml[86,3193+57])
                                                                  Texp_apply
                                                                  expression (src/dump.ml[86,3193+32]..src/dump.ml[86,3193+51])
                                                                    Texp_ident "Dune__exe!.Lr1.conflict_tokens"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/dump.ml[86,3193+52]..src/dump.ml[86,3193+56])
                                                                        Texp_ident "node/547"
                                                                  ]
                                                            ]
                                                      ]
                                                    expression (src/dump.ml[87,3257+4]..src/dump.ml[88,3295+52])
                                                      Texp_apply
                                                      expression (src/dump.ml[87,3257+4]..src/dump.ml[87,3257+11])
                                                        Texp_ident "Stdlib!.Printf.fprintf"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/dump.ml[87,3257+12]..src/dump.ml[87,3257+15])
                                                            Texp_ident "out/545"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/dump.ml[87,3257+16]..src/dump.ml[87,3257+37])
                                                            Texp_construct "CamlinternalFormatBasics.Format"
                                                            [
                                                              expression (src/dump.ml[87,3257+16]..src/dump.ml[87,3257+37]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                [
                                                                  expression (src/dump.ml[87,3257+16]..src/dump.ml[87,3257+37]) ghost
                                                                    Texp_constant Const_string("** Conflict on ",(src/dump.ml[87,3257+16]..src/dump.ml[87,3257+37]) ghost,None)
                                                                  expression (src/dump.ml[87,3257+16]..src/dump.ml[87,3257+37]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.String"
                                                                    [
                                                                      expression (src/dump.ml[87,3257+16]..src/dump.ml[87,3257+37]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                        []
                                                                      expression (src/dump.ml[87,3257+16]..src/dump.ml[87,3257+37]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                        [
                                                                          expression (src/dump.ml[87,3257+16]..src/dump.ml[87,3257+37]) ghost
                                                                            Texp_constant Const_char 0a
                                                                          expression (src/dump.ml[87,3257+16]..src/dump.ml[87,3257+37]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                            []
                                                                        ]
                                                                    ]
                                                                ]
                                                              expression (src/dump.ml[87,3257+16]..src/dump.ml[87,3257+37]) ghost
                                                                Texp_constant Const_string("** Conflict on %s\n",(src/dump.ml[87,3257+16]..src/dump.ml[87,3257+37]) ghost,None)
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/dump.ml[88,3295+6]..src/dump.ml[88,3295+52])
                                                            Texp_apply
                                                            expression (src/dump.ml[88,3295+7]..src/dump.ml[88,3295+24])
                                                              Texp_ident "Dune__exe!.Grammar.TerminalSet.print"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/dump.ml[88,3295+25]..src/dump.ml[88,3295+51])
                                                                  Texp_apply
                                                                  expression (src/dump.ml[88,3295+26]..src/dump.ml[88,3295+45])
                                                                    Texp_ident "Dune__exe!.Lr1.conflict_tokens"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/dump.ml[88,3295+46]..src/dump.ml[88,3295+50])
                                                                        Texp_ident "node/547"
                                                                  ]
                                                            ]
                                                      ]
                                                    None
                                                  expression (src/dump.ml[92,3394+2]..src/dump.ml[113,4067+18])
                                                    Texp_sequence
                                                    expression (src/dump.ml[92,3394+2]..src/dump.ml[109,4037+5])
                                                      Texp_apply
                                                      expression (src/dump.ml[92,3394+31]..src/dump.ml[109,4037+5])
                                                        Texp_apply
                                                        expression (src/dump.ml[92,3394+31]..src/dump.ml[92,3394+42])
                                                          Texp_ident "Dune__exe!.Option.iter"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/dump.ml[92,3394+43]..src/dump.ml[109,4037+5])
                                                              Texp_function
                                                              Nolabel
                                                              [
                                                                <case>
                                                                  pattern (src/dump.ml[92,3394+53]..src/dump.ml[92,3394+66])
                                                                    Tpat_tuple
                                                                    [
                                                                      pattern (src/dump.ml[92,3394+54]..src/dump.ml[92,3394+59])
                                                                        Tpat_var "prods/1078"
                                                                      pattern (src/dump.ml[92,3394+61]..src/dump.ml[92,3394+65])
                                                                        Tpat_var "toks/1079"
                                                                    ]
                                                                  expression (src/dump.ml[97,3628+4]..src/dump.ml[107,3998+37])
                                                                    Texp_sequence
                                                                    expression (src/dump.ml[97,3628+4]..src/dump.ml[97,3628+24])
                                                                      Texp_assert                                                                      expression (src/dump.ml[97,3628+11]..src/dump.ml[97,3628+24])
                                                                        Texp_apply
                                                                        expression (src/dump.ml[97,3628+18]..src/dump.ml[97,3628+20])
                                                                          Texp_ident "Stdlib!.<>"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/dump.ml[97,3628+12]..src/dump.ml[97,3628+17])
                                                                              Texp_ident "prods/1078"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/dump.ml[97,3628+21]..src/dump.ml[97,3628+23])
                                                                              Texp_construct "[]"
                                                                              []
                                                                        ]
                                                                    expression (src/dump.ml[98,3654+4]..src/dump.ml[107,3998+37])
                                                                      Texp_let Nonrec
                                                                      [
                                                                        <def>
                                                                          pattern (src/dump.ml[98,3654+8]..src/dump.ml[98,3654+12])
                                                                            Tpat_var "prod/1080"
                                                                          expression (src/dump.ml[98,3654+15]..src/dump.ml[98,3654+28])
                                                                            Texp_apply
                                                                            expression (src/dump.ml[98,3654+15]..src/dump.ml[98,3654+22])
                                                                              Texp_ident "Stdlib!.List.hd"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/dump.ml[98,3654+23]..src/dump.ml[98,3654+28])
                                                                                  Texp_ident "prods/1078"
                                                                            ]
                                                                      ]
                                                                      expression (src/dump.ml[100,3687+4]..src/dump.ml[107,3998+37])
                                                                        Texp_sequence
                                                                        expression (src/dump.ml[100,3687+4]..src/dump.ml[101,3739+30])
                                                                          Texp_apply
                                                                          expression (src/dump.ml[100,3687+4]..src/dump.ml[100,3687+11])
                                                                            Texp_ident "Stdlib!.Printf.fprintf"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/dump.ml[100,3687+12]..src/dump.ml[100,3687+15])
                                                                                Texp_ident "out/545"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/dump.ml[100,3687+16]..src/dump.ml[100,3687+51])
                                                                                Texp_construct "CamlinternalFormatBasics.Format"
                                                                                [
                                                                                  expression (src/dump.ml[100,3687+16]..src/dump.ml[100,3687+51]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                    [
                                                                                      expression (src/dump.ml[100,3687+16]..src/dump.ml[100,3687+51]) ghost
                                                                                        Texp_constant Const_string("** End-of-stream conflict on ",(src/dump.ml[100,3687+16]..src/dump.ml[100,3687+51]) ghost,None)
                                                                                      expression (src/dump.ml[100,3687+16]..src/dump.ml[100,3687+51]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.String"
                                                                                        [
                                                                                          expression (src/dump.ml[100,3687+16]..src/dump.ml[100,3687+51]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                            []
                                                                                          expression (src/dump.ml[100,3687+16]..src/dump.ml[100,3687+51]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                            [
                                                                                              expression (src/dump.ml[100,3687+16]..src/dump.ml[100,3687+51]) ghost
                                                                                                Texp_constant Const_char 0a
                                                                                              expression (src/dump.ml[100,3687+16]..src/dump.ml[100,3687+51]) ghost
                                                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                []
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                  expression (src/dump.ml[100,3687+16]..src/dump.ml[100,3687+51]) ghost
                                                                                    Texp_constant Const_string("** End-of-stream conflict on %s\n",(src/dump.ml[100,3687+16]..src/dump.ml[100,3687+51]) ghost,None)
                                                                                ]
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/dump.ml[101,3739+6]..src/dump.ml[101,3739+30])
                                                                                Texp_apply
                                                                                expression (src/dump.ml[101,3739+7]..src/dump.ml[101,3739+24])
                                                                                  Texp_ident "Dune__exe!.Grammar.TerminalSet.print"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/dump.ml[101,3739+25]..src/dump.ml[101,3739+29])
                                                                                      Texp_ident "toks/1079"
                                                                                ]
                                                                          ]
                                                                        expression (src/dump.ml[102,3771+4]..src/dump.ml[107,3998+37])
                                                                          Texp_apply
                                                                          expression (src/dump.ml[102,3771+4]..src/dump.ml[102,3771+11])
                                                                            Texp_ident "Stdlib!.Printf.fprintf"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/dump.ml[102,3771+12]..src/dump.ml[102,3771+15])
                                                                                Texp_ident "out/545"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/dump.ml[103,3787+6]..src/dump.ml[106,3913+84])
                                                                                Texp_construct "CamlinternalFormatBasics.Format"
                                                                                [
                                                                                  expression (src/dump.ml[103,3787+6]..src/dump.ml[106,3913+84]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                    [
                                                                                      expression (src/dump.ml[103,3787+6]..src/dump.ml[106,3913+84]) ghost
                                                                                        Texp_constant Const_string("**   There is a tension between\n**   (1) ",(src/dump.ml[103,3787+6]..src/dump.ml[106,3913+84]) ghost,None)
                                                                                      expression (src/dump.ml[103,3787+6]..src/dump.ml[106,3913+84]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.String"
                                                                                        [
                                                                                          expression (src/dump.ml[103,3787+6]..src/dump.ml[106,3913+84]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                            []
                                                                                          expression (src/dump.ml[103,3787+6]..src/dump.ml[106,3913+84]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                            [
                                                                                              expression (src/dump.ml[103,3787+6]..src/dump.ml[106,3913+84]) ghost
                                                                                                Texp_constant Const_string("\n**   without even requesting a lookahead token, and\n**   (2) testing whether the lookahead token is a member of the above set.\n",(src/dump.ml[103,3787+6]..src/dump.ml[106,3913+84]) ghost,None)
                                                                                              expression (src/dump.ml[103,3787+6]..src/dump.ml[106,3913+84]) ghost
                                                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                []
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                  expression (src/dump.ml[103,3787+6]..src/dump.ml[106,3913+84]) ghost
                                                                                    Texp_constant Const_string("**   There is a tension between\n**   (1) %s\n**   without even requesting a lookahead token, and\n**   (2) testing whether the lookahead token is a member of the above set.\n",(src/dump.ml[103,3787+6]..src/dump.ml[106,3913+84]) ghost,None)
                                                                                ]
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/dump.ml[107,3998+6]..src/dump.ml[107,3998+37])
                                                                                Texp_apply
                                                                                expression (src/dump.ml[107,3998+7]..src/dump.ml[107,3998+26])
                                                                                  Texp_ident "Dune__exe!.Grammar.Production.describe"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/dump.ml[107,3998+27]..src/dump.ml[107,3998+31])
                                                                                      Texp_construct "true"
                                                                                      []
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/dump.ml[107,3998+32]..src/dump.ml[107,3998+36])
                                                                                      Texp_ident "prod/1080"
                                                                                ]
                                                                          ]
                                                              ]
                                                        ]
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/dump.ml[92,3394+2]..src/dump.ml[92,3394+27])
                                                            Texp_apply
                                                            expression (src/dump.ml[92,3394+2]..src/dump.ml[92,3394+22])
                                                              Texp_ident "Dune__exe!.Lr1.has_eos_conflict"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/dump.ml[92,3394+23]..src/dump.ml[92,3394+27])
                                                                  Texp_ident "node/547"
                                                            ]
                                                      ]
                                                    expression (src/dump.ml[113,4067+2]..src/dump.ml[113,4067+18])
                                                      Texp_apply
                                                      expression (src/dump.ml[113,4067+2]..src/dump.ml[113,4067+9])
                                                        Texp_ident "Stdlib!.Printf.fprintf"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/dump.ml[113,4067+10]..src/dump.ml[113,4067+13])
                                                            Texp_ident "out/545"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/dump.ml[113,4067+14]..src/dump.ml[113,4067+18])
                                                            Texp_construct "CamlinternalFormatBasics.Format"
                                                            [
                                                              expression (src/dump.ml[113,4067+14]..src/dump.ml[113,4067+18]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                [
                                                                  expression (src/dump.ml[113,4067+14]..src/dump.ml[113,4067+18]) ghost
                                                                    Texp_constant Const_char 0a
                                                                  expression (src/dump.ml[113,4067+14]..src/dump.ml[113,4067+18]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                    []
                                                                ]
                                                              expression (src/dump.ml[113,4067+14]..src/dump.ml[113,4067+18]) ghost
                                                                Texp_constant Const_string("\n",(src/dump.ml[113,4067+14]..src/dump.ml[113,4067+18]) ghost,None)
                                                            ]
                                                      ]
                                ]
                          ]
                    ]
              ]
            structure_item (src/dump.ml[115,4087+0]..src/dump.ml[120,4242+41])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/dump.ml[115,4087+4]..src/dump.ml[115,4087+8])
                    Tpat_var "dump/1148"
                  expression (src/dump.ml[115,4087+9]..src/dump.ml[120,4242+41]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/dump.ml[115,4087+9]..src/dump.ml[115,4087+17])
                          Tpat_var "filename/1150"
                        expression (src/dump.ml[116,4107+2]..src/dump.ml[120,4242+41])
                          Texp_letmodule "SS/1155"
                          module_expr (src/dump.ml[116,4107+18]..src/dump.ml[116,4107+34])
                            Tmod_apply_unit
                            module_expr (src/dump.ml[116,4107+18]..src/dump.ml[116,4107+34])
                              module_expr (src/dump.ml[116,4107+18]..src/dump.ml[116,4107+34])
                                Tmod_ident "Dune__exe!.StackSymbols.Run"
                          expression (src/dump.ml[117,4147+2]..src/dump.ml[120,4242+41])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/dump.ml[117,4147+6]..src/dump.ml[117,4147+9])
                                  Tpat_var "out/1156"
                                expression (src/dump.ml[117,4147+12]..src/dump.ml[117,4147+29])
                                  Texp_apply
                                  expression (src/dump.ml[117,4147+12]..src/dump.ml[117,4147+20])
                                    Texp_ident "Stdlib!.open_out"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/dump.ml[117,4147+21]..src/dump.ml[117,4147+29])
                                        Texp_ident "filename/1150"
                                  ]
                            ]
                            expression (src/dump.ml[118,4180+2]..src/dump.ml[120,4242+41])
                              Texp_sequence
                              expression (src/dump.ml[118,4180+2]..src/dump.ml[118,4180+43])
                                Texp_apply
                                expression (src/dump.ml[118,4180+2]..src/dump.ml[118,4180+10])
                                  Texp_ident "Dune__exe!.Lr1.iter"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/dump.ml[118,4180+11]..src/dump.ml[118,4180+43])
                                      Texp_apply
                                      expression (src/dump.ml[118,4180+12]..src/dump.ml[118,4180+21])
                                        Texp_ident "dump_node/543"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/dump.ml[118,4180+22]..src/dump.ml[118,4180+25])
                                            Texp_ident "out/1156"
                                        <arg>
                                          Nolabel
                                          expression (src/dump.ml[118,4180+26]..src/dump.ml[118,4180+42])
                                            Texp_ident "SS/1155.stack_symbols"
                                      ]
                                ]
                              expression (src/dump.ml[119,4225+2]..src/dump.ml[120,4242+41])
                                Texp_sequence
                                expression (src/dump.ml[119,4225+2]..src/dump.ml[119,4225+15])
                                  Texp_apply
                                  expression (src/dump.ml[119,4225+2]..src/dump.ml[119,4225+11])
                                    Texp_ident "Stdlib!.close_out"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/dump.ml[119,4225+12]..src/dump.ml[119,4225+15])
                                        Texp_ident "out/1156"
                                  ]
                                expression (src/dump.ml[120,4242+2]..src/dump.ml[120,4242+41])
                                  Texp_apply
                                  expression (src/dump.ml[120,4242+2]..src/dump.ml[120,4242+11])
                                    Texp_ident "Dune__exe!.Time.tick"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/dump.ml[120,4242+12]..src/dump.ml[120,4242+41])
                                        Texp_constant Const_string("Dumping the LR(1) automaton",(src/dump.ml[120,4242+13]..src/dump.ml[120,4242+40]),None)
                                  ]
                    ]
              ]
          ]
]

{<Dune__exe__Dump>
 "Make"[module] ->
   Abs<Dune__exe__Dump.21>
      (Default/542, {
                     "dump"[value] -> <Dune__exe__Dump.17>;
                     });
 }

(let
  (Make/1169 =
     (function Default/2050 is_a_functor
       (let
         (Default/542 =a Default/2050
          dump_node/543 =
            (function out/545 stack_symbols/546 node/547 : int
              (seq
                (apply (field_imm 0 (global Stdlib__Printf!)) out/545
                  [0: [11: "State " [4: 0 0 0 [11: ":\n" 0]]] "State %d:\n"]
                  (apply (field_imm 9 (global Dune__exe__Lr1!)) node/547))
                (apply (field_imm 0 (global Stdlib__Printf!)) out/545
                  [0:
                   [11: "## Known stack suffix:\n##" [2: 0 [12: '\n' 0]]]
                   "## Known stack suffix:\n##%s\n"]
                  (apply (field_imm 2 (global Dune__exe__StackSymbols!))
                    (apply stack_symbols/546 node/547)))
                (apply (field_imm 0 (global Stdlib__Printf!)) out/545
                  [0:
                   [11: "## LR(1) items:\n" [2: 0 0]] "## LR(1) items:\n%s"]
                  (apply (field_imm 25 (global Dune__exe__Lr0!)) ""
                    (apply (field_imm 11 (global Dune__exe__Lr1!)) node/547)))
                (apply (field_imm 0 (global Stdlib__Printf!)) out/545
                  [0: [11: "## Transitions:\n" 0] "## Transitions:\n"])
                (apply
                  (field_imm 22 (field_imm 7 (global Dune__exe__Grammar!)))
                  (function symbol/740 node/741 : int
                    (apply (field_imm 0 (global Stdlib__Printf!)) out/545
                      [0:
                       [11:
                        "-- On "
                        [2:
                         0 [11: " shift to state " [4: 0 0 0 [12: '\n' 0]]]]]
                       "-- On %s shift to state %d\n"]
                      (apply
                        (field_imm 5
                          (field_imm 5 (global Dune__exe__Grammar!)))
                        symbol/740)
                      (apply (field_imm 9 (global Dune__exe__Lr1!)) node/741)))
                  (apply (field_imm 19 (global Dune__exe__Lr1!)) node/547))
                (let
                  (*match*/2047 = (apply (field_imm 0 Default/542) node/547))
                  (if (isint *match*/2047)
                    (seq
                      (apply (field_imm 0 (global Stdlib__Printf!)) out/545
                        [0: [11: "## Reductions:\n" 0] "## Reductions:\n"])
                      (let
                        (reductions/930 =
                           (apply (field_imm 30 (global Dune__exe__Lr0!))
                             (apply (field_imm 20 (global Dune__exe__Lr1!))
                               node/547)))
                        (apply
                          (field_imm 18
                            (field_imm 9 (global Dune__exe__Grammar!)))
                          (function prod/1065 toks/1066 : int
                            (seq
                              (apply (field_imm 0 (global Stdlib__Printf!))
                                out/545
                                [0:
                                 [11: "-- On " [2: 0 [12: '\n' 0]]]
                                 "-- On %s\n"]
                                (apply
                                  (field_imm 18
                                    (field_imm 3
                                      (global Dune__exe__Grammar!)))
                                  toks/1066))
                              (apply (field_imm 0 (global Stdlib__Printf!))
                                out/545
                                [0:
                                 [11: "--   " [2: 0 [12: '\n' 0]]]
                                 "--   %s\n"]
                                (apply
                                  (field_imm 30
                                    (field_imm 8
                                      (global Dune__exe__Grammar!)))
                                  0 prod/1065))))
                          reductions/930)))
                    (let
                      (*match*/2048 =a (field_imm 0 *match*/2047)
                       toks/813 =a (field_imm 1 *match*/2048)
                       prod/812 =a (field_imm 0 *match*/2048))
                      (seq
                        (if
                          (||
                            (apply
                              (field_imm 16
                                (field_imm 3 (global Dune__exe__Grammar!)))
                              toks/813
                              (apply
                                (field_imm 2
                                  (field_imm 3 (global Dune__exe__Grammar!)))
                                (field_imm 9
                                  (field_imm 2 (global Dune__exe__Grammar!)))))
                            (not
                              (apply
                                (field_imm 6
                                  (field_imm 3 (global Dune__exe__Grammar!)))
                                (field_imm 9
                                  (field_imm 2 (global Dune__exe__Grammar!)))
                                toks/813)))
                          0
                          (raise
                            (makeblock 0 (global Assert_failure/28!)
                              [0: "src/dump.ml" 61 6])))
                        (let
                          (keyword/895 =
                             (if
                               (apply
                                 (field_imm 6
                                   (field_imm 3 (global Dune__exe__Grammar!)))
                                 (field_imm 9
                                   (field_imm 2 (global Dune__exe__Grammar!)))
                                 toks/813)
                               "Without" "After"))
                          (seq
                            (apply (field_imm 0 (global Stdlib__Printf!))
                              out/545
                              [0:
                               [11: "## Default reduction:\n" 0]
                               "## Default reduction:\n"])
                            (apply (field_imm 0 (global Stdlib__Printf!))
                              out/545
                              [0:
                               [11:
                                "-- "
                                [2:
                                 0
                                 [11:
                                  " reading the next token, "
                                  [2: 0 [12: '\n' 0]]]]]
                               "-- %s reading the next token, %s\n"]
                              keyword/895
                              (apply
                                (field_imm 30
                                  (field_imm 8 (global Dune__exe__Grammar!)))
                                0 prod/812))))))))
                (if
                  (not
                    (apply
                      (field_imm 1
                        (field_imm 3 (global Dune__exe__Grammar!)))
                      (apply (field_imm 35 (global Dune__exe__Lr1!))
                        node/547)))
                  (apply (field_imm 0 (global Stdlib__Printf!)) out/545
                    [0:
                     [11: "** Conflict on " [2: 0 [12: '\n' 0]]]
                     "** Conflict on %s\n"]
                    (apply
                      (field_imm 18
                        (field_imm 3 (global Dune__exe__Grammar!)))
                      (apply (field_imm 35 (global Dune__exe__Lr1!))
                        node/547)))
                  0)
                (apply (field_imm 2 (global Dune__exe__Option!))
                  (function (param/2045, param/2046) : int
                    (let (toks/1079 =a param/2046 prods/1078 =a param/2045)
                      (seq
                        (if (!= prods/1078 0) 0
                          (raise
                            (makeblock 0 (global Assert_failure/28!)
                              [0: "src/dump.ml" 97 4])))
                        (let
                          (prod/1080 =
                             (apply (field_imm 5 (global Stdlib__List!))
                               prods/1078))
                          (seq
                            (apply (field_imm 0 (global Stdlib__Printf!))
                              out/545
                              [0:
                               [11:
                                "** End-of-stream conflict on "
                                [2: 0 [12: '\n' 0]]]
                               "** End-of-stream conflict on %s\n"]
                              (apply
                                (field_imm 18
                                  (field_imm 3 (global Dune__exe__Grammar!)))
                                toks/1079))
                            (apply (field_imm 0 (global Stdlib__Printf!))
                              out/545
                              [0:
                               [11:
                                "**   There is a tension between\n**   (1) "
                                [2:
                                 0
                                 [11:
                                  "\n**   without even requesting a lookahead token, and\n**   (2) testing whether the lookahead token is a member of the above set.\n"
                                  0]]]
                               "**   There is a tension between\n**   (1) %s\n**   without even requesting a lookahead token, and\n**   (2) testing whether the lookahead token is a member of the above set.\n"]
                              (apply
                                (field_imm 30
                                  (field_imm 8 (global Dune__exe__Grammar!)))
                                1 prod/1080)))))))
                  (apply (field_imm 36 (global Dune__exe__Lr1!)) node/547))
                (apply (field_imm 0 (global Stdlib__Printf!)) out/545
                  [0: [12: '\n' 0] "\n"])))
          dump/1148 =
            (function filename/1150 : int
              (let
                (SS/1155 =
                   (apply
                     (let
                       (let/2049 =
                          (field_imm 0 (global Dune__exe__StackSymbols!)))
                       (field_imm 0 (global Dune__exe__StackSymbols!)))
                     0)
                 out/1156 =
                   (apply (field_imm 59 (global Stdlib!)) filename/1150))
                (seq
                  (apply (field_imm 25 (global Dune__exe__Lr1!))
                    (apply dump_node/543 out/1156 (field_imm 0 SS/1155)))
                  (apply (field_imm 75 (global Stdlib!)) out/1156)
                  (apply (field_imm 0 (global Dune__exe__Time!))
                    "Dumping the LR(1) automaton")))))
         (makeblock 0 dump_node/543 dump/1148))))
  (seq
    (setfield_ptr(root-init) 0 (global Dune__exe__Dump!)
      (function funarg/2051 is_a_functor stub
        (let (let/2052 = (apply Make/1169 funarg/2051))
          (makeblock 0 (field_mut 1 let/2052)))))
    0))
(let
  (Make/1169 =
     (function Default/2050 is_a_functor
       (let
         (dump_node/543 =
            (function out/545 stack_symbols/546 node/547 : int
              (seq
                (apply (field_imm 0 (global Stdlib__Printf!)) out/545
                  [0: [11: "State " [4: 0 0 0 [11: ":\n" 0]]] "State %d:\n"]
                  (apply (field_imm 9 (global Dune__exe__Lr1!)) node/547))
                (apply (field_imm 0 (global Stdlib__Printf!)) out/545
                  [0:
                   [11: "## Known stack suffix:\n##" [2: 0 [12: '\n' 0]]]
                   "## Known stack suffix:\n##%s\n"]
                  (apply (field_imm 2 (global Dune__exe__StackSymbols!))
                    (apply stack_symbols/546 node/547)))
                (apply (field_imm 0 (global Stdlib__Printf!)) out/545
                  [0:
                   [11: "## LR(1) items:\n" [2: 0 0]] "## LR(1) items:\n%s"]
                  (apply (field_imm 25 (global Dune__exe__Lr0!)) ""
                    (apply (field_imm 11 (global Dune__exe__Lr1!)) node/547)))
                (apply (field_imm 0 (global Stdlib__Printf!)) out/545
                  [0: [11: "## Transitions:\n" 0] "## Transitions:\n"])
                (apply
                  (field_imm 22 (field_imm 7 (global Dune__exe__Grammar!)))
                  (function symbol/740 node/741 : int
                    (apply (field_imm 0 (global Stdlib__Printf!)) out/545
                      [0:
                       [11:
                        "-- On "
                        [2:
                         0 [11: " shift to state " [4: 0 0 0 [12: '\n' 0]]]]]
                       "-- On %s shift to state %d\n"]
                      (apply
                        (field_imm 5
                          (field_imm 5 (global Dune__exe__Grammar!)))
                        symbol/740)
                      (apply (field_imm 9 (global Dune__exe__Lr1!)) node/741)))
                  (apply (field_imm 19 (global Dune__exe__Lr1!)) node/547))
                (let
                  (*match*/2047 = (apply (field_imm 0 Default/2050) node/547))
                  (if (isint *match*/2047)
                    (seq
                      (apply (field_imm 0 (global Stdlib__Printf!)) out/545
                        [0: [11: "## Reductions:\n" 0] "## Reductions:\n"])
                      (let
                        (reductions/930 =
                           (apply (field_imm 30 (global Dune__exe__Lr0!))
                             (apply (field_imm 20 (global Dune__exe__Lr1!))
                               node/547)))
                        (apply
                          (field_imm 18
                            (field_imm 9 (global Dune__exe__Grammar!)))
                          (function prod/1065 toks/1066 : int
                            (seq
                              (apply (field_imm 0 (global Stdlib__Printf!))
                                out/545
                                [0:
                                 [11: "-- On " [2: 0 [12: '\n' 0]]]
                                 "-- On %s\n"]
                                (apply
                                  (field_imm 18
                                    (field_imm 3
                                      (global Dune__exe__Grammar!)))
                                  toks/1066))
                              (apply (field_imm 0 (global Stdlib__Printf!))
                                out/545
                                [0:
                                 [11: "--   " [2: 0 [12: '\n' 0]]]
                                 "--   %s\n"]
                                (apply
                                  (field_imm 30
                                    (field_imm 8
                                      (global Dune__exe__Grammar!)))
                                  0 prod/1065))))
                          reductions/930)))
                    (let
                      (*match*/2048 =a (field_imm 0 *match*/2047)
                       toks/813 =a (field_imm 1 *match*/2048))
                      (seq
                        (if
                          (||
                            (apply
                              (field_imm 16
                                (field_imm 3 (global Dune__exe__Grammar!)))
                              toks/813
                              (apply
                                (field_imm 2
                                  (field_imm 3 (global Dune__exe__Grammar!)))
                                (field_imm 9
                                  (field_imm 2 (global Dune__exe__Grammar!)))))
                            (not
                              (apply
                                (field_imm 6
                                  (field_imm 3 (global Dune__exe__Grammar!)))
                                (field_imm 9
                                  (field_imm 2 (global Dune__exe__Grammar!)))
                                toks/813)))
                          0
                          (raise
                            (makeblock 0 (global Assert_failure/28!)
                              [0: "src/dump.ml" 61 6])))
                        (let
                          (keyword/895 =
                             (if
                               (apply
                                 (field_imm 6
                                   (field_imm 3 (global Dune__exe__Grammar!)))
                                 (field_imm 9
                                   (field_imm 2 (global Dune__exe__Grammar!)))
                                 toks/813)
                               "Without" "After"))
                          (seq
                            (apply (field_imm 0 (global Stdlib__Printf!))
                              out/545
                              [0:
                               [11: "## Default reduction:\n" 0]
                               "## Default reduction:\n"])
                            (apply (field_imm 0 (global Stdlib__Printf!))
                              out/545
                              [0:
                               [11:
                                "-- "
                                [2:
                                 0
                                 [11:
                                  " reading the next token, "
                                  [2: 0 [12: '\n' 0]]]]]
                               "-- %s reading the next token, %s\n"]
                              keyword/895
                              (apply
                                (field_imm 30
                                  (field_imm 8 (global Dune__exe__Grammar!)))
                                0 (field_imm 0 *match*/2048)))))))))
                (if
                  (not
                    (apply
                      (field_imm 1
                        (field_imm 3 (global Dune__exe__Grammar!)))
                      (apply (field_imm 35 (global Dune__exe__Lr1!))
                        node/547)))
                  (apply (field_imm 0 (global Stdlib__Printf!)) out/545
                    [0:
                     [11: "** Conflict on " [2: 0 [12: '\n' 0]]]
                     "** Conflict on %s\n"]
                    (apply
                      (field_imm 18
                        (field_imm 3 (global Dune__exe__Grammar!)))
                      (apply (field_imm 35 (global Dune__exe__Lr1!))
                        node/547)))
                  0)
                (apply (field_imm 2 (global Dune__exe__Option!))
                  (function (param/2045, param/2046) : int
                    (seq
                      (if (!= param/2045 0) 0
                        (raise
                          (makeblock 0 (global Assert_failure/28!)
                            [0: "src/dump.ml" 97 4])))
                      (let
                        (prod/1080 =
                           (apply (field_imm 5 (global Stdlib__List!))
                             param/2045))
                        (seq
                          (apply (field_imm 0 (global Stdlib__Printf!))
                            out/545
                            [0:
                             [11:
                              "** End-of-stream conflict on "
                              [2: 0 [12: '\n' 0]]]
                             "** End-of-stream conflict on %s\n"]
                            (apply
                              (field_imm 18
                                (field_imm 3 (global Dune__exe__Grammar!)))
                              param/2046))
                          (apply (field_imm 0 (global Stdlib__Printf!))
                            out/545
                            [0:
                             [11:
                              "**   There is a tension between\n**   (1) "
                              [2:
                               0
                               [11:
                                "\n**   without even requesting a lookahead token, and\n**   (2) testing whether the lookahead token is a member of the above set.\n"
                                0]]]
                             "**   There is a tension between\n**   (1) %s\n**   without even requesting a lookahead token, and\n**   (2) testing whether the lookahead token is a member of the above set.\n"]
                            (apply
                              (field_imm 30
                                (field_imm 8 (global Dune__exe__Grammar!)))
                              1 prod/1080))))))
                  (apply (field_imm 36 (global Dune__exe__Lr1!)) node/547))
                (apply (field_imm 0 (global Stdlib__Printf!)) out/545
                  [0: [12: '\n' 0] "\n"])))
          dump/1148 =
            (function filename/1150 : int
              (let
                (SS/1155 =
                   (apply
                     (let
                       (let/2049 =
                          (field_imm 0 (global Dune__exe__StackSymbols!)))
                       (field_imm 0 (global Dune__exe__StackSymbols!)))
                     0)
                 out/1156 =
                   (apply (field_imm 59 (global Stdlib!)) filename/1150))
                (seq
                  (apply (field_imm 25 (global Dune__exe__Lr1!))
                    (apply dump_node/543 out/1156 (field_imm 0 SS/1155)))
                  (apply (field_imm 75 (global Stdlib!)) out/1156)
                  (apply (field_imm 0 (global Dune__exe__Time!))
                    "Dumping the LR(1) automaton")))))
         (makeblock 0 dump_node/543 dump/1148))))
  (seq
    (setfield_ptr(root-init) 0 (global Dune__exe__Dump!)
      (function funarg/2051 is_a_functor stub
        (let (let/2052 = (apply Make/1169 funarg/2051))
          (makeblock 0 (field_mut 1 let/2052)))))
    0))
