[
  structure_item (src/AtomicBitSet.ml[18,1220+0]..[19,1229+5])
    Pstr_type Rec
    [
      type_declaration "t" (src/AtomicBitSet.ml[18,1220+5]..[18,1220+6]) (src/AtomicBitSet.ml[18,1220+0]..[19,1229+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/AtomicBitSet.ml[19,1229+2]..[19,1229+5])
              Ptyp_constr "int" (src/AtomicBitSet.ml[19,1229+2]..[19,1229+5])
              []
    ]
  structure_item (src/AtomicBitSet.ml[21,1236+0]..[22,1251+5])
    Pstr_type Rec
    [
      type_declaration "element" (src/AtomicBitSet.ml[21,1236+5]..[21,1236+12]) (src/AtomicBitSet.ml[21,1236+0]..[22,1251+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/AtomicBitSet.ml[22,1251+2]..[22,1251+5])
              Ptyp_constr "int" (src/AtomicBitSet.ml[22,1251+2]..[22,1251+5])
              []
    ]
  structure_item (src/AtomicBitSet.ml[24,1258+0]..[25,1270+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[24,1258+4]..[24,1258+9])
          Ppat_var "bound" (src/AtomicBitSet.ml[24,1258+4]..[24,1258+9])
        expression (src/AtomicBitSet.ml[25,1270+2]..[25,1270+19])
          Pexp_apply
          expression (src/AtomicBitSet.ml[25,1270+16]..[25,1270+17])
            Pexp_ident "-" (src/AtomicBitSet.ml[25,1270+16]..[25,1270+17])
          [
            <arg>
            Nolabel
              expression (src/AtomicBitSet.ml[25,1270+2]..[25,1270+15])
                Pexp_ident "Sys.word_size" (src/AtomicBitSet.ml[25,1270+2]..[25,1270+15])
            <arg>
            Nolabel
              expression (src/AtomicBitSet.ml[25,1270+18]..[25,1270+19])
                Pexp_constant PConst_int (1,None)
          ]
    ]
  structure_item (src/AtomicBitSet.ml[31,1398+0]..[33,1442+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[31,1398+4]..[31,1398+7])
          Ppat_var "bit" (src/AtomicBitSet.ml[31,1398+4]..[31,1398+7])
        expression (src/AtomicBitSet.ml[31,1398+8]..[33,1442+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[31,1398+8]..[31,1398+9])
            Ppat_var "i" (src/AtomicBitSet.ml[31,1398+8]..[31,1398+9])
          expression (src/AtomicBitSet.ml[32,1410+2]..[33,1442+9])
            Pexp_sequence
            expression (src/AtomicBitSet.ml[32,1410+2]..[32,1410+30])
              Pexp_assert
              expression (src/AtomicBitSet.ml[32,1410+9]..[32,1410+30])
                Pexp_apply
                expression (src/AtomicBitSet.ml[32,1410+17]..[32,1410+19])
                  Pexp_ident "&&" (src/AtomicBitSet.ml[32,1410+17]..[32,1410+19])
                [
                  <arg>
                  Nolabel
                    expression (src/AtomicBitSet.ml[32,1410+10]..[32,1410+16])
                      Pexp_apply
                      expression (src/AtomicBitSet.ml[32,1410+12]..[32,1410+14])
                        Pexp_ident "<=" (src/AtomicBitSet.ml[32,1410+12]..[32,1410+14])
                      [
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[32,1410+10]..[32,1410+11])
                            Pexp_constant PConst_int (0,None)
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[32,1410+15]..[32,1410+16])
                            Pexp_ident "i" (src/AtomicBitSet.ml[32,1410+15]..[32,1410+16])
                      ]
                  <arg>
                  Nolabel
                    expression (src/AtomicBitSet.ml[32,1410+20]..[32,1410+29])
                      Pexp_apply
                      expression (src/AtomicBitSet.ml[32,1410+22]..[32,1410+23])
                        Pexp_ident "<" (src/AtomicBitSet.ml[32,1410+22]..[32,1410+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[32,1410+20]..[32,1410+21])
                            Pexp_ident "i" (src/AtomicBitSet.ml[32,1410+20]..[32,1410+21])
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[32,1410+24]..[32,1410+29])
                            Pexp_ident "bound" (src/AtomicBitSet.ml[32,1410+24]..[32,1410+29])
                      ]
                ]
            expression (src/AtomicBitSet.ml[33,1442+2]..[33,1442+9])
              Pexp_apply
              expression (src/AtomicBitSet.ml[33,1442+4]..[33,1442+7])
                Pexp_ident "lsl" (src/AtomicBitSet.ml[33,1442+4]..[33,1442+7])
              [
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[33,1442+2]..[33,1442+3])
                    Pexp_constant PConst_int (1,None)
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[33,1442+8]..[33,1442+9])
                    Pexp_ident "i" (src/AtomicBitSet.ml[33,1442+8]..[33,1442+9])
              ]
    ]
  structure_item (src/AtomicBitSet.ml[46,1932+0]..[47,1943+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[46,1932+4]..[46,1932+8])
          Ppat_var "log2" (src/AtomicBitSet.ml[46,1932+4]..[46,1932+8])
        expression (src/AtomicBitSet.ml[47,1943+2]..[47,1943+18])
          Pexp_apply
          expression (src/AtomicBitSet.ml[47,1943+2]..[47,1943+12])
            Pexp_ident "Array.make" (src/AtomicBitSet.ml[47,1943+2]..[47,1943+12])
          [
            <arg>
            Nolabel
              expression (src/AtomicBitSet.ml[47,1943+13]..[47,1943+16])
                Pexp_constant PConst_int (255,None)
            <arg>
            Nolabel
              expression (src/AtomicBitSet.ml[47,1943+17]..[47,1943+18])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (src/AtomicBitSet.ml[48,1962+0]..[49,1971+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[48,1962+4]..[48,1962+6])
          Ppat_construct "()" (src/AtomicBitSet.ml[48,1962+4]..[48,1962+6])
          None
        expression (src/AtomicBitSet.ml[49,1971+2]..[49,1971+42])
          Pexp_for Up
          pattern (src/AtomicBitSet.ml[49,1971+6]..[49,1971+7])
            Ppat_var "i" (src/AtomicBitSet.ml[49,1971+6]..[49,1971+7])
          expression (src/AtomicBitSet.ml[49,1971+10]..[49,1971+11])
            Pexp_constant PConst_int (0,None)
          expression (src/AtomicBitSet.ml[49,1971+15]..[49,1971+16])
            Pexp_constant PConst_int (7,None)
          expression (src/AtomicBitSet.ml[49,1971+20]..[49,1971+37])
            Pexp_apply
            expression (src/AtomicBitSet.ml[49,1971+20]..[49,1971+37]) ghost
              Pexp_ident "Array.set" (src/AtomicBitSet.ml[49,1971+20]..[49,1971+37]) ghost
            [
              <arg>
              Nolabel
                expression (src/AtomicBitSet.ml[49,1971+20]..[49,1971+24])
                  Pexp_ident "log2" (src/AtomicBitSet.ml[49,1971+20]..[49,1971+24])
              <arg>
              Nolabel
                expression (src/AtomicBitSet.ml[49,1971+26]..[49,1971+31])
                  Pexp_apply
                  expression (src/AtomicBitSet.ml[49,1971+26]..[49,1971+29])
                    Pexp_ident "bit" (src/AtomicBitSet.ml[49,1971+26]..[49,1971+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/AtomicBitSet.ml[49,1971+30]..[49,1971+31])
                        Pexp_ident "i" (src/AtomicBitSet.ml[49,1971+30]..[49,1971+31])
                  ]
              <arg>
              Nolabel
                expression (src/AtomicBitSet.ml[49,1971+36]..[49,1971+37])
                  Pexp_ident "i" (src/AtomicBitSet.ml[49,1971+36]..[49,1971+37])
            ]
    ]
  structure_item (src/AtomicBitSet.ml[51,2015+0]..[55,2097+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[51,2015+4]..[51,2015+9])
          Ppat_var "tib16" (src/AtomicBitSet.ml[51,2015+4]..[51,2015+9])
        expression (src/AtomicBitSet.ml[51,2015+10]..[55,2097+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[51,2015+10]..[51,2015+14])
            Ppat_var "accu" (src/AtomicBitSet.ml[51,2015+10]..[51,2015+14])
          expression (src/AtomicBitSet.ml[51,2015+15]..[55,2097+19]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/AtomicBitSet.ml[51,2015+15]..[51,2015+16])
              Ppat_var "x" (src/AtomicBitSet.ml[51,2015+15]..[51,2015+16])
            expression (src/AtomicBitSet.ml[52,2034+2]..[55,2097+19])
              Pexp_ifthenelse
              expression (src/AtomicBitSet.ml[52,2034+5]..[52,2034+20])
                Pexp_apply
                expression (src/AtomicBitSet.ml[52,2034+17]..[52,2034+18])
                  Pexp_ident "=" (src/AtomicBitSet.ml[52,2034+17]..[52,2034+18])
                [
                  <arg>
                  Nolabel
                    expression (src/AtomicBitSet.ml[52,2034+5]..[52,2034+16])
                      Pexp_apply
                      expression (src/AtomicBitSet.ml[52,2034+7]..[52,2034+11])
                        Pexp_ident "land" (src/AtomicBitSet.ml[52,2034+7]..[52,2034+11])
                      [
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[52,2034+5]..[52,2034+6])
                            Pexp_ident "x" (src/AtomicBitSet.ml[52,2034+5]..[52,2034+6])
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[52,2034+12]..[52,2034+16])
                            Pexp_constant PConst_int (0xFF,None)
                      ]
                  <arg>
                  Nolabel
                    expression (src/AtomicBitSet.ml[52,2034+19]..[52,2034+20])
                      Pexp_constant PConst_int (0,None)
                ]
              expression (src/AtomicBitSet.ml[53,2060+4]..[53,2060+29])
                Pexp_apply
                expression (src/AtomicBitSet.ml[53,2060+13]..[53,2060+14])
                  Pexp_ident "+" (src/AtomicBitSet.ml[53,2060+13]..[53,2060+14])
                [
                  <arg>
                  Nolabel
                    expression (src/AtomicBitSet.ml[53,2060+4]..[53,2060+12])
                      Pexp_apply
                      expression (src/AtomicBitSet.ml[53,2060+9]..[53,2060+10])
                        Pexp_ident "+" (src/AtomicBitSet.ml[53,2060+9]..[53,2060+10])
                      [
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[53,2060+4]..[53,2060+8])
                            Pexp_ident "accu" (src/AtomicBitSet.ml[53,2060+4]..[53,2060+8])
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[53,2060+11]..[53,2060+12])
                            Pexp_constant PConst_int (8,None)
                      ]
                  <arg>
                  Nolabel
                    expression (src/AtomicBitSet.ml[53,2060+15]..[53,2060+29])
                      Pexp_apply
                      expression (src/AtomicBitSet.ml[53,2060+15]..[53,2060+29]) ghost
                        Pexp_ident "Array.get" (src/AtomicBitSet.ml[53,2060+15]..[53,2060+29]) ghost
                      [
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[53,2060+15]..[53,2060+19])
                            Pexp_ident "log2" (src/AtomicBitSet.ml[53,2060+15]..[53,2060+19])
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[53,2060+21]..[53,2060+28])
                            Pexp_apply
                            expression (src/AtomicBitSet.ml[53,2060+23]..[53,2060+26])
                              Pexp_ident "lsr" (src/AtomicBitSet.ml[53,2060+23]..[53,2060+26])
                            [
                              <arg>
                              Nolabel
                                expression (src/AtomicBitSet.ml[53,2060+21]..[53,2060+22])
                                  Pexp_ident "x" (src/AtomicBitSet.ml[53,2060+21]..[53,2060+22])
                              <arg>
                              Nolabel
                                expression (src/AtomicBitSet.ml[53,2060+27]..[53,2060+28])
                                  Pexp_constant PConst_int (8,None)
                            ]
                      ]
                ]
              Some
                expression (src/AtomicBitSet.ml[55,2097+4]..[55,2097+19])
                  Pexp_apply
                  expression (src/AtomicBitSet.ml[55,2097+9]..[55,2097+10])
                    Pexp_ident "+" (src/AtomicBitSet.ml[55,2097+9]..[55,2097+10])
                  [
                    <arg>
                    Nolabel
                      expression (src/AtomicBitSet.ml[55,2097+4]..[55,2097+8])
                        Pexp_ident "accu" (src/AtomicBitSet.ml[55,2097+4]..[55,2097+8])
                    <arg>
                    Nolabel
                      expression (src/AtomicBitSet.ml[55,2097+11]..[55,2097+19])
                        Pexp_apply
                        expression (src/AtomicBitSet.ml[55,2097+11]..[55,2097+19]) ghost
                          Pexp_ident "Array.get" (src/AtomicBitSet.ml[55,2097+11]..[55,2097+19]) ghost
                        [
                          <arg>
                          Nolabel
                            expression (src/AtomicBitSet.ml[55,2097+11]..[55,2097+15])
                              Pexp_ident "log2" (src/AtomicBitSet.ml[55,2097+11]..[55,2097+15])
                          <arg>
                          Nolabel
                            expression (src/AtomicBitSet.ml[55,2097+17]..[55,2097+18])
                              Pexp_ident "x" (src/AtomicBitSet.ml[55,2097+17]..[55,2097+18])
                        ]
                  ]
    ]
  structure_item (src/AtomicBitSet.ml[57,2118+0]..[61,2205+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[57,2118+4]..[57,2118+9])
          Ppat_var "tib32" (src/AtomicBitSet.ml[57,2118+4]..[57,2118+9])
        expression (src/AtomicBitSet.ml[57,2118+10]..[61,2205+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[57,2118+10]..[57,2118+14])
            Ppat_var "accu" (src/AtomicBitSet.ml[57,2118+10]..[57,2118+14])
          expression (src/AtomicBitSet.ml[57,2118+15]..[61,2205+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/AtomicBitSet.ml[57,2118+15]..[57,2118+16])
              Ppat_var "x" (src/AtomicBitSet.ml[57,2118+15]..[57,2118+16])
            expression (src/AtomicBitSet.ml[58,2137+2]..[61,2205+16])
              Pexp_ifthenelse
              expression (src/AtomicBitSet.ml[58,2137+5]..[58,2137+22])
                Pexp_apply
                expression (src/AtomicBitSet.ml[58,2137+19]..[58,2137+20])
                  Pexp_ident "=" (src/AtomicBitSet.ml[58,2137+19]..[58,2137+20])
                [
                  <arg>
                  Nolabel
                    expression (src/AtomicBitSet.ml[58,2137+5]..[58,2137+18])
                      Pexp_apply
                      expression (src/AtomicBitSet.ml[58,2137+7]..[58,2137+11])
                        Pexp_ident "land" (src/AtomicBitSet.ml[58,2137+7]..[58,2137+11])
                      [
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[58,2137+5]..[58,2137+6])
                            Pexp_ident "x" (src/AtomicBitSet.ml[58,2137+5]..[58,2137+6])
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[58,2137+12]..[58,2137+18])
                            Pexp_constant PConst_int (0xFFFF,None)
                      ]
                  <arg>
                  Nolabel
                    expression (src/AtomicBitSet.ml[58,2137+21]..[58,2137+22])
                      Pexp_constant PConst_int (0,None)
                ]
              expression (src/AtomicBitSet.ml[59,2165+4]..[59,2165+32])
                Pexp_apply
                expression (src/AtomicBitSet.ml[59,2165+4]..[59,2165+9])
                  Pexp_ident "tib16" (src/AtomicBitSet.ml[59,2165+4]..[59,2165+9])
                [
                  <arg>
                  Nolabel
                    expression (src/AtomicBitSet.ml[59,2165+10]..[59,2165+21])
                      Pexp_apply
                      expression (src/AtomicBitSet.ml[59,2165+16]..[59,2165+17])
                        Pexp_ident "+" (src/AtomicBitSet.ml[59,2165+16]..[59,2165+17])
                      [
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[59,2165+11]..[59,2165+15])
                            Pexp_ident "accu" (src/AtomicBitSet.ml[59,2165+11]..[59,2165+15])
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[59,2165+18]..[59,2165+20])
                            Pexp_constant PConst_int (16,None)
                      ]
                  <arg>
                  Nolabel
                    expression (src/AtomicBitSet.ml[59,2165+22]..[59,2165+32])
                      Pexp_apply
                      expression (src/AtomicBitSet.ml[59,2165+25]..[59,2165+28])
                        Pexp_ident "lsr" (src/AtomicBitSet.ml[59,2165+25]..[59,2165+28])
                      [
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[59,2165+23]..[59,2165+24])
                            Pexp_ident "x" (src/AtomicBitSet.ml[59,2165+23]..[59,2165+24])
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[59,2165+29]..[59,2165+31])
                            Pexp_constant PConst_int (16,None)
                      ]
                ]
              Some
                expression (src/AtomicBitSet.ml[61,2205+4]..[61,2205+16])
                  Pexp_apply
                  expression (src/AtomicBitSet.ml[61,2205+4]..[61,2205+9])
                    Pexp_ident "tib16" (src/AtomicBitSet.ml[61,2205+4]..[61,2205+9])
                  [
                    <arg>
                    Nolabel
                      expression (src/AtomicBitSet.ml[61,2205+10]..[61,2205+14])
                        Pexp_ident "accu" (src/AtomicBitSet.ml[61,2205+10]..[61,2205+14])
                    <arg>
                    Nolabel
                      expression (src/AtomicBitSet.ml[61,2205+15]..[61,2205+16])
                        Pexp_ident "x" (src/AtomicBitSet.ml[61,2205+15]..[61,2205+16])
                  ]
    ]
  structure_item (src/AtomicBitSet.ml[63,2223+0]..[64,2238+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[63,2223+4]..[63,2223+12])
          Ppat_var "ffffffff" (src/AtomicBitSet.ml[63,2223+4]..[63,2223+12])
        expression (src/AtomicBitSet.ml[64,2238+2]..[64,2238+28])
          Pexp_apply
          expression (src/AtomicBitSet.ml[64,2238+18]..[64,2238+21])
            Pexp_ident "lor" (src/AtomicBitSet.ml[64,2238+18]..[64,2238+21])
          [
            <arg>
            Nolabel
              expression (src/AtomicBitSet.ml[64,2238+2]..[64,2238+17])
                Pexp_apply
                expression (src/AtomicBitSet.ml[64,2238+10]..[64,2238+13])
                  Pexp_ident "lsl" (src/AtomicBitSet.ml[64,2238+10]..[64,2238+13])
                [
                  <arg>
                  Nolabel
                    expression (src/AtomicBitSet.ml[64,2238+3]..[64,2238+9])
                      Pexp_constant PConst_int (0xffff,None)
                  <arg>
                  Nolabel
                    expression (src/AtomicBitSet.ml[64,2238+14]..[64,2238+16])
                      Pexp_constant PConst_int (16,None)
                ]
            <arg>
            Nolabel
              expression (src/AtomicBitSet.ml[64,2238+22]..[64,2238+28])
                Pexp_constant PConst_int (0xffff,None)
          ]
    ]
  structure_item (src/AtomicBitSet.ml[68,2397+0]..[72,2472+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[68,2397+4]..[68,2397+9])
          Ppat_var "tib64" (src/AtomicBitSet.ml[68,2397+4]..[68,2397+9])
        expression (src/AtomicBitSet.ml[68,2397+10]..[72,2472+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[68,2397+10]..[68,2397+11])
            Ppat_var "x" (src/AtomicBitSet.ml[68,2397+10]..[68,2397+11])
          expression (src/AtomicBitSet.ml[69,2411+2]..[72,2472+13])
            Pexp_ifthenelse
            expression (src/AtomicBitSet.ml[69,2411+5]..[69,2411+24])
              Pexp_apply
              expression (src/AtomicBitSet.ml[69,2411+21]..[69,2411+22])
                Pexp_ident "=" (src/AtomicBitSet.ml[69,2411+21]..[69,2411+22])
              [
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[69,2411+5]..[69,2411+20])
                    Pexp_apply
                    expression (src/AtomicBitSet.ml[69,2411+7]..[69,2411+11])
                      Pexp_ident "land" (src/AtomicBitSet.ml[69,2411+7]..[69,2411+11])
                    [
                      <arg>
                      Nolabel
                        expression (src/AtomicBitSet.ml[69,2411+5]..[69,2411+6])
                          Pexp_ident "x" (src/AtomicBitSet.ml[69,2411+5]..[69,2411+6])
                      <arg>
                      Nolabel
                        expression (src/AtomicBitSet.ml[69,2411+12]..[69,2411+20])
                          Pexp_ident "ffffffff" (src/AtomicBitSet.ml[69,2411+12]..[69,2411+20])
                    ]
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[69,2411+23]..[69,2411+24])
                    Pexp_constant PConst_int (0,None)
              ]
            expression (src/AtomicBitSet.ml[70,2441+4]..[70,2441+23])
              Pexp_apply
              expression (src/AtomicBitSet.ml[70,2441+4]..[70,2441+9])
                Pexp_ident "tib32" (src/AtomicBitSet.ml[70,2441+4]..[70,2441+9])
              [
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[70,2441+10]..[70,2441+12])
                    Pexp_constant PConst_int (32,None)
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[70,2441+13]..[70,2441+23])
                    Pexp_apply
                    expression (src/AtomicBitSet.ml[70,2441+16]..[70,2441+19])
                      Pexp_ident "lsr" (src/AtomicBitSet.ml[70,2441+16]..[70,2441+19])
                    [
                      <arg>
                      Nolabel
                        expression (src/AtomicBitSet.ml[70,2441+14]..[70,2441+15])
                          Pexp_ident "x" (src/AtomicBitSet.ml[70,2441+14]..[70,2441+15])
                      <arg>
                      Nolabel
                        expression (src/AtomicBitSet.ml[70,2441+20]..[70,2441+22])
                          Pexp_constant PConst_int (32,None)
                    ]
              ]
            Some
              expression (src/AtomicBitSet.ml[72,2472+4]..[72,2472+13])
                Pexp_apply
                expression (src/AtomicBitSet.ml[72,2472+4]..[72,2472+9])
                  Pexp_ident "tib32" (src/AtomicBitSet.ml[72,2472+4]..[72,2472+9])
                [
                  <arg>
                  Nolabel
                    expression (src/AtomicBitSet.ml[72,2472+10]..[72,2472+11])
                      Pexp_constant PConst_int (0,None)
                  <arg>
                  Nolabel
                    expression (src/AtomicBitSet.ml[72,2472+12]..[72,2472+13])
                      Pexp_ident "x" (src/AtomicBitSet.ml[72,2472+12]..[72,2472+13])
                ]
    ]
  structure_item (src/AtomicBitSet.ml[74,2487+0]..[78,2564+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[74,2487+4]..[74,2487+7])
          Ppat_var "tib" (src/AtomicBitSet.ml[74,2487+4]..[74,2487+7])
        expression (src/AtomicBitSet.ml[74,2487+8]..[78,2564+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[74,2487+8]..[74,2487+9])
            Ppat_var "x" (src/AtomicBitSet.ml[74,2487+8]..[74,2487+9])
          expression (src/AtomicBitSet.ml[75,2499+2]..[78,2564+21])
            Pexp_match
            expression (src/AtomicBitSet.ml[75,2499+8]..[75,2499+21])
              Pexp_ident "Sys.word_size" (src/AtomicBitSet.ml[75,2499+8]..[75,2499+21])
            [
              <case>
                pattern (src/AtomicBitSet.ml[76,2526+4]..[76,2526+6])
                  Ppat_constant PConst_int (32,None)
                expression (src/AtomicBitSet.ml[76,2526+10]..[76,2526+19])
                  Pexp_apply
                  expression (src/AtomicBitSet.ml[76,2526+10]..[76,2526+15])
                    Pexp_ident "tib32" (src/AtomicBitSet.ml[76,2526+10]..[76,2526+15])
                  [
                    <arg>
                    Nolabel
                      expression (src/AtomicBitSet.ml[76,2526+16]..[76,2526+17])
                        Pexp_constant PConst_int (0,None)
                    <arg>
                    Nolabel
                      expression (src/AtomicBitSet.ml[76,2526+18]..[76,2526+19])
                        Pexp_ident "x" (src/AtomicBitSet.ml[76,2526+18]..[76,2526+19])
                  ]
              <case>
                pattern (src/AtomicBitSet.ml[77,2546+4]..[77,2546+6])
                  Ppat_constant PConst_int (64,None)
                expression (src/AtomicBitSet.ml[77,2546+10]..[77,2546+17])
                  Pexp_apply
                  expression (src/AtomicBitSet.ml[77,2546+10]..[77,2546+15])
                    Pexp_ident "tib64" (src/AtomicBitSet.ml[77,2546+10]..[77,2546+15])
                  [
                    <arg>
                    Nolabel
                      expression (src/AtomicBitSet.ml[77,2546+16]..[77,2546+17])
                        Pexp_ident "x" (src/AtomicBitSet.ml[77,2546+16]..[77,2546+17])
                  ]
              <case>
                pattern (src/AtomicBitSet.ml[78,2564+4]..[78,2564+5])
                  Ppat_any
                expression (src/AtomicBitSet.ml[78,2564+9]..[78,2564+21])
                  Pexp_assert
                  expression (src/AtomicBitSet.ml[78,2564+16]..[78,2564+21])
                    Pexp_construct "false" (src/AtomicBitSet.ml[78,2564+16]..[78,2564+21])
                    None
            ]
    ]
  structure_item (src/AtomicBitSet.ml[80,2587+0]..[82,2651+57])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[80,2587+4]..[80,2587+6])
          Ppat_construct "()" (src/AtomicBitSet.ml[80,2587+4]..[80,2587+6])
          None
        expression (src/AtomicBitSet.ml[82,2651+2]..[82,2651+57])
          Pexp_for Up
          pattern (src/AtomicBitSet.ml[82,2651+6]..[82,2651+7])
            Ppat_var "i" (src/AtomicBitSet.ml[82,2651+6]..[82,2651+7])
          expression (src/AtomicBitSet.ml[82,2651+10]..[82,2651+11])
            Pexp_constant PConst_int (0,None)
          expression (src/AtomicBitSet.ml[82,2651+15]..[82,2651+24])
            Pexp_apply
            expression (src/AtomicBitSet.ml[82,2651+21]..[82,2651+22])
              Pexp_ident "-" (src/AtomicBitSet.ml[82,2651+21]..[82,2651+22])
            [
              <arg>
              Nolabel
                expression (src/AtomicBitSet.ml[82,2651+15]..[82,2651+20])
                  Pexp_ident "bound" (src/AtomicBitSet.ml[82,2651+15]..[82,2651+20])
              <arg>
              Nolabel
                expression (src/AtomicBitSet.ml[82,2651+23]..[82,2651+24])
                  Pexp_constant PConst_int (1,None)
            ]
          expression (src/AtomicBitSet.ml[82,2651+28]..[82,2651+52])
            Pexp_assert
            expression (src/AtomicBitSet.ml[82,2651+35]..[82,2651+52])
              Pexp_apply
              expression (src/AtomicBitSet.ml[82,2651+48]..[82,2651+49])
                Pexp_ident "=" (src/AtomicBitSet.ml[82,2651+48]..[82,2651+49])
              [
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[82,2651+36]..[82,2651+47])
                    Pexp_apply
                    expression (src/AtomicBitSet.ml[82,2651+36]..[82,2651+39])
                      Pexp_ident "tib" (src/AtomicBitSet.ml[82,2651+36]..[82,2651+39])
                    [
                      <arg>
                      Nolabel
                        expression (src/AtomicBitSet.ml[82,2651+40]..[82,2651+47])
                          Pexp_apply
                          expression (src/AtomicBitSet.ml[82,2651+41]..[82,2651+44])
                            Pexp_ident "bit" (src/AtomicBitSet.ml[82,2651+41]..[82,2651+44])
                          [
                            <arg>
                            Nolabel
                              expression (src/AtomicBitSet.ml[82,2651+45]..[82,2651+46])
                                Pexp_ident "i" (src/AtomicBitSet.ml[82,2651+45]..[82,2651+46])
                          ]
                    ]
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[82,2651+50]..[82,2651+51])
                    Pexp_ident "i" (src/AtomicBitSet.ml[82,2651+50]..[82,2651+51])
              ]
    ]
  structure_item (src/AtomicBitSet.ml[91,2957+0]..[91,2957+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[91,2957+4]..[91,2957+6])
          Ppat_var "b0" (src/AtomicBitSet.ml[91,2957+4]..[91,2957+6])
        expression (src/AtomicBitSet.ml[91,2957+9]..[91,2957+19])
          Pexp_constant PConst_int (0x55555555,None)
    ]
  structure_item (src/AtomicBitSet.ml[92,2977+0]..[92,2977+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[92,2977+4]..[92,2977+6])
          Ppat_var "b1" (src/AtomicBitSet.ml[92,2977+4]..[92,2977+6])
        expression (src/AtomicBitSet.ml[92,2977+9]..[92,2977+19])
          Pexp_constant PConst_int (0x33333333,None)
    ]
  structure_item (src/AtomicBitSet.ml[93,2997+0]..[93,2997+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[93,2997+4]..[93,2997+6])
          Ppat_var "b2" (src/AtomicBitSet.ml[93,2997+4]..[93,2997+6])
        expression (src/AtomicBitSet.ml[93,2997+9]..[93,2997+18])
          Pexp_constant PConst_int (0xf0f0f0f,None)
    ]
  structure_item (src/AtomicBitSet.ml[95,3017+0]..[105,3489+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[95,3017+4]..[95,3017+9])
          Ppat_var "pop32" (src/AtomicBitSet.ml[95,3017+4]..[95,3017+9])
        expression (src/AtomicBitSet.ml[95,3017+10]..[105,3489+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[95,3017+10]..[95,3017+11])
            Ppat_var "x" (src/AtomicBitSet.ml[95,3017+10]..[95,3017+11])
          expression (src/AtomicBitSet.ml[98,3167+2]..[105,3489+13])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/AtomicBitSet.ml[98,3167+6]..[98,3167+7])
                  Ppat_var "x" (src/AtomicBitSet.ml[98,3167+6]..[98,3167+7])
                expression (src/AtomicBitSet.ml[98,3167+10]..[98,3167+39])
                  Pexp_apply
                  expression (src/AtomicBitSet.ml[98,3167+20]..[98,3167+21])
                    Pexp_ident "-" (src/AtomicBitSet.ml[98,3167+20]..[98,3167+21])
                  [
                    <arg>
                    Nolabel
                      expression (src/AtomicBitSet.ml[98,3167+10]..[98,3167+11])
                        Pexp_ident "x" (src/AtomicBitSet.ml[98,3167+10]..[98,3167+11])
                    <arg>
                    Nolabel
                      expression (src/AtomicBitSet.ml[98,3167+22]..[98,3167+39])
                        Pexp_apply
                        expression (src/AtomicBitSet.ml[98,3167+32]..[98,3167+36])
                          Pexp_ident "land" (src/AtomicBitSet.ml[98,3167+32]..[98,3167+36])
                        [
                          <arg>
                          Nolabel
                            expression (src/AtomicBitSet.ml[98,3167+22]..[98,3167+31])
                              Pexp_apply
                              expression (src/AtomicBitSet.ml[98,3167+25]..[98,3167+28])
                                Pexp_ident "lsr" (src/AtomicBitSet.ml[98,3167+25]..[98,3167+28])
                              [
                                <arg>
                                Nolabel
                                  expression (src/AtomicBitSet.ml[98,3167+23]..[98,3167+24])
                                    Pexp_ident "x" (src/AtomicBitSet.ml[98,3167+23]..[98,3167+24])
                                <arg>
                                Nolabel
                                  expression (src/AtomicBitSet.ml[98,3167+29]..[98,3167+30])
                                    Pexp_constant PConst_int (1,None)
                              ]
                          <arg>
                          Nolabel
                            expression (src/AtomicBitSet.ml[98,3167+37]..[98,3167+39])
                              Pexp_ident "b0" (src/AtomicBitSet.ml[98,3167+37]..[98,3167+39])
                        ]
                  ]
            ]
            expression (src/AtomicBitSet.ml[99,3210+2]..[105,3489+13])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/AtomicBitSet.ml[99,3210+6]..[99,3210+7])
                    Ppat_var "x" (src/AtomicBitSet.ml[99,3210+6]..[99,3210+7])
                  expression (src/AtomicBitSet.ml[99,3210+10]..[99,3210+39])
                    Pexp_apply
                    expression (src/AtomicBitSet.ml[99,3210+20]..[99,3210+21])
                      Pexp_ident "+" (src/AtomicBitSet.ml[99,3210+20]..[99,3210+21])
                    [
                      <arg>
                      Nolabel
                        expression (src/AtomicBitSet.ml[99,3210+10]..[99,3210+19])
                          Pexp_apply
                          expression (src/AtomicBitSet.ml[99,3210+12]..[99,3210+16])
                            Pexp_ident "land" (src/AtomicBitSet.ml[99,3210+12]..[99,3210+16])
                          [
                            <arg>
                            Nolabel
                              expression (src/AtomicBitSet.ml[99,3210+10]..[99,3210+11])
                                Pexp_ident "x" (src/AtomicBitSet.ml[99,3210+10]..[99,3210+11])
                            <arg>
                            Nolabel
                              expression (src/AtomicBitSet.ml[99,3210+17]..[99,3210+19])
                                Pexp_ident "b1" (src/AtomicBitSet.ml[99,3210+17]..[99,3210+19])
                          ]
                      <arg>
                      Nolabel
                        expression (src/AtomicBitSet.ml[99,3210+22]..[99,3210+39])
                          Pexp_apply
                          expression (src/AtomicBitSet.ml[99,3210+32]..[99,3210+36])
                            Pexp_ident "land" (src/AtomicBitSet.ml[99,3210+32]..[99,3210+36])
                          [
                            <arg>
                            Nolabel
                              expression (src/AtomicBitSet.ml[99,3210+22]..[99,3210+31])
                                Pexp_apply
                                expression (src/AtomicBitSet.ml[99,3210+25]..[99,3210+28])
                                  Pexp_ident "lsr" (src/AtomicBitSet.ml[99,3210+25]..[99,3210+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/AtomicBitSet.ml[99,3210+23]..[99,3210+24])
                                      Pexp_ident "x" (src/AtomicBitSet.ml[99,3210+23]..[99,3210+24])
                                  <arg>
                                  Nolabel
                                    expression (src/AtomicBitSet.ml[99,3210+29]..[99,3210+30])
                                      Pexp_constant PConst_int (2,None)
                                ]
                            <arg>
                            Nolabel
                              expression (src/AtomicBitSet.ml[99,3210+37]..[99,3210+39])
                                Pexp_ident "b1" (src/AtomicBitSet.ml[99,3210+37]..[99,3210+39])
                          ]
                    ]
              ]
              expression (src/AtomicBitSet.ml[100,3253+2]..[105,3489+13])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/AtomicBitSet.ml[100,3253+6]..[100,3253+7])
                      Ppat_var "x" (src/AtomicBitSet.ml[100,3253+6]..[100,3253+7])
                    expression (src/AtomicBitSet.ml[100,3253+10]..[100,3253+39])
                      Pexp_apply
                      expression (src/AtomicBitSet.ml[100,3253+20]..[100,3253+21])
                        Pexp_ident "+" (src/AtomicBitSet.ml[100,3253+20]..[100,3253+21])
                      [
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[100,3253+10]..[100,3253+19])
                            Pexp_apply
                            expression (src/AtomicBitSet.ml[100,3253+12]..[100,3253+16])
                              Pexp_ident "land" (src/AtomicBitSet.ml[100,3253+12]..[100,3253+16])
                            [
                              <arg>
                              Nolabel
                                expression (src/AtomicBitSet.ml[100,3253+10]..[100,3253+11])
                                  Pexp_ident "x" (src/AtomicBitSet.ml[100,3253+10]..[100,3253+11])
                              <arg>
                              Nolabel
                                expression (src/AtomicBitSet.ml[100,3253+17]..[100,3253+19])
                                  Pexp_ident "b2" (src/AtomicBitSet.ml[100,3253+17]..[100,3253+19])
                            ]
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[100,3253+22]..[100,3253+39])
                            Pexp_apply
                            expression (src/AtomicBitSet.ml[100,3253+32]..[100,3253+36])
                              Pexp_ident "land" (src/AtomicBitSet.ml[100,3253+32]..[100,3253+36])
                            [
                              <arg>
                              Nolabel
                                expression (src/AtomicBitSet.ml[100,3253+22]..[100,3253+31])
                                  Pexp_apply
                                  expression (src/AtomicBitSet.ml[100,3253+25]..[100,3253+28])
                                    Pexp_ident "lsr" (src/AtomicBitSet.ml[100,3253+25]..[100,3253+28])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/AtomicBitSet.ml[100,3253+23]..[100,3253+24])
                                        Pexp_ident "x" (src/AtomicBitSet.ml[100,3253+23]..[100,3253+24])
                                    <arg>
                                    Nolabel
                                      expression (src/AtomicBitSet.ml[100,3253+29]..[100,3253+30])
                                        Pexp_constant PConst_int (4,None)
                                  ]
                              <arg>
                              Nolabel
                                expression (src/AtomicBitSet.ml[100,3253+37]..[100,3253+39])
                                  Pexp_ident "b2" (src/AtomicBitSet.ml[100,3253+37]..[100,3253+39])
                            ]
                      ]
                ]
                expression (src/AtomicBitSet.ml[103,3438+2]..[105,3489+13])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/AtomicBitSet.ml[103,3438+6]..[103,3438+7])
                        Ppat_var "x" (src/AtomicBitSet.ml[103,3438+6]..[103,3438+7])
                      expression (src/AtomicBitSet.ml[103,3438+10]..[103,3438+21])
                        Pexp_apply
                        expression (src/AtomicBitSet.ml[103,3438+12]..[103,3438+13])
                          Pexp_ident "+" (src/AtomicBitSet.ml[103,3438+12]..[103,3438+13])
                        [
                          <arg>
                          Nolabel
                            expression (src/AtomicBitSet.ml[103,3438+10]..[103,3438+11])
                              Pexp_ident "x" (src/AtomicBitSet.ml[103,3438+10]..[103,3438+11])
                          <arg>
                          Nolabel
                            expression (src/AtomicBitSet.ml[103,3438+14]..[103,3438+21])
                              Pexp_apply
                              expression (src/AtomicBitSet.ml[103,3438+16]..[103,3438+19])
                                Pexp_ident "lsr" (src/AtomicBitSet.ml[103,3438+16]..[103,3438+19])
                              [
                                <arg>
                                Nolabel
                                  expression (src/AtomicBitSet.ml[103,3438+14]..[103,3438+15])
                                    Pexp_ident "x" (src/AtomicBitSet.ml[103,3438+14]..[103,3438+15])
                                <arg>
                                Nolabel
                                  expression (src/AtomicBitSet.ml[103,3438+20]..[103,3438+21])
                                    Pexp_constant PConst_int (8,None)
                              ]
                        ]
                  ]
                  expression (src/AtomicBitSet.ml[104,3463+2]..[105,3489+13])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/AtomicBitSet.ml[104,3463+6]..[104,3463+7])
                          Ppat_var "x" (src/AtomicBitSet.ml[104,3463+6]..[104,3463+7])
                        expression (src/AtomicBitSet.ml[104,3463+10]..[104,3463+22])
                          Pexp_apply
                          expression (src/AtomicBitSet.ml[104,3463+12]..[104,3463+13])
                            Pexp_ident "+" (src/AtomicBitSet.ml[104,3463+12]..[104,3463+13])
                          [
                            <arg>
                            Nolabel
                              expression (src/AtomicBitSet.ml[104,3463+10]..[104,3463+11])
                                Pexp_ident "x" (src/AtomicBitSet.ml[104,3463+10]..[104,3463+11])
                            <arg>
                            Nolabel
                              expression (src/AtomicBitSet.ml[104,3463+14]..[104,3463+22])
                                Pexp_apply
                                expression (src/AtomicBitSet.ml[104,3463+16]..[104,3463+19])
                                  Pexp_ident "lsr" (src/AtomicBitSet.ml[104,3463+16]..[104,3463+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/AtomicBitSet.ml[104,3463+14]..[104,3463+15])
                                      Pexp_ident "x" (src/AtomicBitSet.ml[104,3463+14]..[104,3463+15])
                                  <arg>
                                  Nolabel
                                    expression (src/AtomicBitSet.ml[104,3463+20]..[104,3463+22])
                                      Pexp_constant PConst_int (16,None)
                                ]
                          ]
                    ]
                    expression (src/AtomicBitSet.ml[105,3489+2]..[105,3489+13])
                      Pexp_apply
                      expression (src/AtomicBitSet.ml[105,3489+4]..[105,3489+8])
                        Pexp_ident "land" (src/AtomicBitSet.ml[105,3489+4]..[105,3489+8])
                      [
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[105,3489+2]..[105,3489+3])
                            Pexp_ident "x" (src/AtomicBitSet.ml[105,3489+2]..[105,3489+3])
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[105,3489+9]..[105,3489+13])
                            Pexp_constant PConst_int (0xff,None)
                      ]
    ]
  structure_item (src/AtomicBitSet.ml[107,3504+0]..[108,3518+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[107,3504+4]..[107,3504+9])
          Ppat_var "pop64" (src/AtomicBitSet.ml[107,3504+4]..[107,3504+9])
        expression (src/AtomicBitSet.ml[107,3504+10]..[108,3518+28]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[107,3504+10]..[107,3504+11])
            Ppat_var "x" (src/AtomicBitSet.ml[107,3504+10]..[107,3504+11])
          expression (src/AtomicBitSet.ml[108,3518+2]..[108,3518+28])
            Pexp_apply
            expression (src/AtomicBitSet.ml[108,3518+10]..[108,3518+11])
              Pexp_ident "+" (src/AtomicBitSet.ml[108,3518+10]..[108,3518+11])
            [
              <arg>
              Nolabel
                expression (src/AtomicBitSet.ml[108,3518+2]..[108,3518+9])
                  Pexp_apply
                  expression (src/AtomicBitSet.ml[108,3518+2]..[108,3518+7])
                    Pexp_ident "pop32" (src/AtomicBitSet.ml[108,3518+2]..[108,3518+7])
                  [
                    <arg>
                    Nolabel
                      expression (src/AtomicBitSet.ml[108,3518+8]..[108,3518+9])
                        Pexp_ident "x" (src/AtomicBitSet.ml[108,3518+8]..[108,3518+9])
                  ]
              <arg>
              Nolabel
                expression (src/AtomicBitSet.ml[108,3518+12]..[108,3518+28])
                  Pexp_apply
                  expression (src/AtomicBitSet.ml[108,3518+12]..[108,3518+17])
                    Pexp_ident "pop32" (src/AtomicBitSet.ml[108,3518+12]..[108,3518+17])
                  [
                    <arg>
                    Nolabel
                      expression (src/AtomicBitSet.ml[108,3518+18]..[108,3518+28])
                        Pexp_apply
                        expression (src/AtomicBitSet.ml[108,3518+21]..[108,3518+24])
                          Pexp_ident "lsr" (src/AtomicBitSet.ml[108,3518+21]..[108,3518+24])
                        [
                          <arg>
                          Nolabel
                            expression (src/AtomicBitSet.ml[108,3518+19]..[108,3518+20])
                              Pexp_ident "x" (src/AtomicBitSet.ml[108,3518+19]..[108,3518+20])
                          <arg>
                          Nolabel
                            expression (src/AtomicBitSet.ml[108,3518+25]..[108,3518+27])
                              Pexp_constant PConst_int (32,None)
                        ]
                  ]
            ]
    ]
  structure_item (src/AtomicBitSet.ml[112,3684+0]..[116,3759+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[112,3684+4]..[112,3684+7])
          Ppat_var "pop" (src/AtomicBitSet.ml[112,3684+4]..[112,3684+7])
        expression (src/AtomicBitSet.ml[112,3684+8]..[116,3759+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[112,3684+8]..[112,3684+9])
            Ppat_var "x" (src/AtomicBitSet.ml[112,3684+8]..[112,3684+9])
          expression (src/AtomicBitSet.ml[113,3696+2]..[116,3759+21])
            Pexp_match
            expression (src/AtomicBitSet.ml[113,3696+8]..[113,3696+21])
              Pexp_ident "Sys.word_size" (src/AtomicBitSet.ml[113,3696+8]..[113,3696+21])
            [
              <case>
                pattern (src/AtomicBitSet.ml[114,3723+4]..[114,3723+6])
                  Ppat_constant PConst_int (32,None)
                expression (src/AtomicBitSet.ml[114,3723+10]..[114,3723+17])
                  Pexp_apply
                  expression (src/AtomicBitSet.ml[114,3723+10]..[114,3723+15])
                    Pexp_ident "pop32" (src/AtomicBitSet.ml[114,3723+10]..[114,3723+15])
                  [
                    <arg>
                    Nolabel
                      expression (src/AtomicBitSet.ml[114,3723+16]..[114,3723+17])
                        Pexp_ident "x" (src/AtomicBitSet.ml[114,3723+16]..[114,3723+17])
                  ]
              <case>
                pattern (src/AtomicBitSet.ml[115,3741+4]..[115,3741+6])
                  Ppat_constant PConst_int (64,None)
                expression (src/AtomicBitSet.ml[115,3741+10]..[115,3741+17])
                  Pexp_apply
                  expression (src/AtomicBitSet.ml[115,3741+10]..[115,3741+15])
                    Pexp_ident "pop64" (src/AtomicBitSet.ml[115,3741+10]..[115,3741+15])
                  [
                    <arg>
                    Nolabel
                      expression (src/AtomicBitSet.ml[115,3741+16]..[115,3741+17])
                        Pexp_ident "x" (src/AtomicBitSet.ml[115,3741+16]..[115,3741+17])
                  ]
              <case>
                pattern (src/AtomicBitSet.ml[116,3759+4]..[116,3759+5])
                  Ppat_any
                expression (src/AtomicBitSet.ml[116,3759+9]..[116,3759+21])
                  Pexp_assert
                  expression (src/AtomicBitSet.ml[116,3759+16]..[116,3759+21])
                    Pexp_construct "false" (src/AtomicBitSet.ml[116,3759+16]..[116,3759+21])
                    None
            ]
    ]
  structure_item (src/AtomicBitSet.ml[122,3883+0]..[123,3895+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[122,3883+4]..[122,3883+9])
          Ppat_var "empty" (src/AtomicBitSet.ml[122,3883+4]..[122,3883+9])
        expression (src/AtomicBitSet.ml[123,3895+2]..[123,3895+3])
          Pexp_constant PConst_int (0,None)
    ]
  structure_item (src/AtomicBitSet.ml[125,3900+0]..[126,3917+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[125,3900+4]..[125,3900+12])
          Ppat_var "is_empty" (src/AtomicBitSet.ml[125,3900+4]..[125,3900+12])
        expression (src/AtomicBitSet.ml[125,3900+13]..[126,3917+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[125,3900+13]..[125,3900+14])
            Ppat_var "s" (src/AtomicBitSet.ml[125,3900+13]..[125,3900+14])
          expression (src/AtomicBitSet.ml[126,3917+2]..[126,3917+7])
            Pexp_apply
            expression (src/AtomicBitSet.ml[126,3917+4]..[126,3917+5])
              Pexp_ident "=" (src/AtomicBitSet.ml[126,3917+4]..[126,3917+5])
            [
              <arg>
              Nolabel
                expression (src/AtomicBitSet.ml[126,3917+2]..[126,3917+3])
                  Pexp_ident "s" (src/AtomicBitSet.ml[126,3917+2]..[126,3917+3])
              <arg>
              Nolabel
                expression (src/AtomicBitSet.ml[126,3917+6]..[126,3917+7])
                  Pexp_constant PConst_int (0,None)
            ]
    ]
  structure_item (src/AtomicBitSet.ml[128,3926+0]..[129,3942+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[128,3926+4]..[128,3926+13])
          Ppat_var "singleton" (src/AtomicBitSet.ml[128,3926+4]..[128,3926+13])
        expression (src/AtomicBitSet.ml[129,3942+2]..[129,3942+5])
          Pexp_ident "bit" (src/AtomicBitSet.ml[129,3942+2]..[129,3942+5])
    ]
  structure_item (src/AtomicBitSet.ml[131,3949+0]..[132,3963+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[131,3949+4]..[131,3949+7])
          Ppat_var "add" (src/AtomicBitSet.ml[131,3949+4]..[131,3949+7])
        expression (src/AtomicBitSet.ml[131,3949+8]..[132,3963+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[131,3949+8]..[131,3949+9])
            Ppat_var "i" (src/AtomicBitSet.ml[131,3949+8]..[131,3949+9])
          expression (src/AtomicBitSet.ml[131,3949+10]..[132,3963+15]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/AtomicBitSet.ml[131,3949+10]..[131,3949+11])
              Ppat_var "s" (src/AtomicBitSet.ml[131,3949+10]..[131,3949+11])
            expression (src/AtomicBitSet.ml[132,3963+2]..[132,3963+15])
              Pexp_apply
              expression (src/AtomicBitSet.ml[132,3963+10]..[132,3963+13])
                Pexp_ident "lor" (src/AtomicBitSet.ml[132,3963+10]..[132,3963+13])
              [
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[132,3963+2]..[132,3963+9])
                    Pexp_apply
                    expression (src/AtomicBitSet.ml[132,3963+3]..[132,3963+6])
                      Pexp_ident "bit" (src/AtomicBitSet.ml[132,3963+3]..[132,3963+6])
                    [
                      <arg>
                      Nolabel
                        expression (src/AtomicBitSet.ml[132,3963+7]..[132,3963+8])
                          Pexp_ident "i" (src/AtomicBitSet.ml[132,3963+7]..[132,3963+8])
                    ]
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[132,3963+14]..[132,3963+15])
                    Pexp_ident "s" (src/AtomicBitSet.ml[132,3963+14]..[132,3963+15])
              ]
    ]
  structure_item (src/AtomicBitSet.ml[134,3980+0]..[135,3997+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[134,3980+4]..[134,3980+10])
          Ppat_var "remove" (src/AtomicBitSet.ml[134,3980+4]..[134,3980+10])
        expression (src/AtomicBitSet.ml[134,3980+11]..[135,3997+23]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[134,3980+11]..[134,3980+12])
            Ppat_var "i" (src/AtomicBitSet.ml[134,3980+11]..[134,3980+12])
          expression (src/AtomicBitSet.ml[134,3980+13]..[135,3997+23]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/AtomicBitSet.ml[134,3980+13]..[134,3980+14])
              Ppat_var "s" (src/AtomicBitSet.ml[134,3980+13]..[134,3980+14])
            expression (src/AtomicBitSet.ml[135,3997+2]..[135,3997+23])
              Pexp_apply
              expression (src/AtomicBitSet.ml[135,3997+17]..[135,3997+21])
                Pexp_ident "land" (src/AtomicBitSet.ml[135,3997+17]..[135,3997+21])
              [
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[135,3997+2]..[135,3997+16])
                    Pexp_apply
                    expression (src/AtomicBitSet.ml[135,3997+3]..[135,3997+7])
                      Pexp_ident "lnot" (src/AtomicBitSet.ml[135,3997+3]..[135,3997+7])
                    [
                      <arg>
                      Nolabel
                        expression (src/AtomicBitSet.ml[135,3997+8]..[135,3997+15])
                          Pexp_apply
                          expression (src/AtomicBitSet.ml[135,3997+9]..[135,3997+12])
                            Pexp_ident "bit" (src/AtomicBitSet.ml[135,3997+9]..[135,3997+12])
                          [
                            <arg>
                            Nolabel
                              expression (src/AtomicBitSet.ml[135,3997+13]..[135,3997+14])
                                Pexp_ident "i" (src/AtomicBitSet.ml[135,3997+13]..[135,3997+14])
                          ]
                    ]
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[135,3997+22]..[135,3997+23])
                    Pexp_ident "s" (src/AtomicBitSet.ml[135,3997+22]..[135,3997+23])
              ]
    ]
  structure_item (src/AtomicBitSet.ml[137,4022+0]..[144,4198+29])
    Pstr_value Rec
    [
      <def>
        pattern (src/AtomicBitSet.ml[137,4022+8]..[137,4022+18])
          Ppat_var "fold_delta" (src/AtomicBitSet.ml[137,4022+8]..[137,4022+18])
        expression (src/AtomicBitSet.ml[137,4022+19]..[144,4198+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[137,4022+19]..[137,4022+24])
            Ppat_var "delta" (src/AtomicBitSet.ml[137,4022+19]..[137,4022+24])
          expression (src/AtomicBitSet.ml[137,4022+25]..[144,4198+29]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/AtomicBitSet.ml[137,4022+25]..[137,4022+26])
              Ppat_var "f" (src/AtomicBitSet.ml[137,4022+25]..[137,4022+26])
            expression (src/AtomicBitSet.ml[137,4022+27]..[144,4198+29]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/AtomicBitSet.ml[137,4022+27]..[137,4022+28])
                Ppat_var "s" (src/AtomicBitSet.ml[137,4022+27]..[137,4022+28])
              expression (src/AtomicBitSet.ml[137,4022+29]..[144,4198+29]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/AtomicBitSet.ml[137,4022+29]..[137,4022+33])
                  Ppat_var "accu" (src/AtomicBitSet.ml[137,4022+29]..[137,4022+33])
                expression (src/AtomicBitSet.ml[138,4058+2]..[144,4198+29])
                  Pexp_ifthenelse
                  expression (src/AtomicBitSet.ml[138,4058+5]..[138,4058+10])
                    Pexp_apply
                    expression (src/AtomicBitSet.ml[138,4058+7]..[138,4058+8])
                      Pexp_ident "=" (src/AtomicBitSet.ml[138,4058+7]..[138,4058+8])
                    [
                      <arg>
                      Nolabel
                        expression (src/AtomicBitSet.ml[138,4058+5]..[138,4058+6])
                          Pexp_ident "s" (src/AtomicBitSet.ml[138,4058+5]..[138,4058+6])
                      <arg>
                      Nolabel
                        expression (src/AtomicBitSet.ml[138,4058+9]..[138,4058+10])
                          Pexp_constant PConst_int (0,None)
                    ]
                  expression (src/AtomicBitSet.ml[139,4074+4]..[139,4074+8])
                    Pexp_ident "accu" (src/AtomicBitSet.ml[139,4074+4]..[139,4074+8])
                  Some
                    expression (src/AtomicBitSet.ml[141,4090+4]..[144,4198+29])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/AtomicBitSet.ml[141,4090+8]..[141,4090+9])
                            Ppat_var "x" (src/AtomicBitSet.ml[141,4090+8]..[141,4090+9])
                          expression (src/AtomicBitSet.ml[141,4090+12]..[141,4090+23])
                            Pexp_apply
                            expression (src/AtomicBitSet.ml[141,4090+14]..[141,4090+18])
                              Pexp_ident "land" (src/AtomicBitSet.ml[141,4090+14]..[141,4090+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/AtomicBitSet.ml[141,4090+12]..[141,4090+13])
                                  Pexp_ident "s" (src/AtomicBitSet.ml[141,4090+12]..[141,4090+13])
                              <arg>
                              Nolabel
                                expression (src/AtomicBitSet.ml[141,4090+19]..[141,4090+23])
                                  Pexp_apply
                                  expression (src/AtomicBitSet.ml[141,4090+20]..[141,4090+21])
                                    Pexp_ident "~-" (src/AtomicBitSet.ml[141,4090+20]..[141,4090+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/AtomicBitSet.ml[141,4090+21]..[141,4090+22])
                                        Pexp_ident "s" (src/AtomicBitSet.ml[141,4090+21]..[141,4090+22])
                                  ]
                            ]
                      ]
                      expression (src/AtomicBitSet.ml[142,4117+4]..[144,4198+29])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/AtomicBitSet.ml[142,4117+8]..[142,4117+9])
                              Ppat_var "s" (src/AtomicBitSet.ml[142,4117+8]..[142,4117+9])
                            expression (src/AtomicBitSet.ml[142,4117+12]..[142,4117+20])
                              Pexp_apply
                              expression (src/AtomicBitSet.ml[142,4117+14]..[142,4117+18])
                                Pexp_ident "lxor" (src/AtomicBitSet.ml[142,4117+14]..[142,4117+18])
                              [
                                <arg>
                                Nolabel
                                  expression (src/AtomicBitSet.ml[142,4117+12]..[142,4117+13])
                                    Pexp_ident "s" (src/AtomicBitSet.ml[142,4117+12]..[142,4117+13])
                                <arg>
                                Nolabel
                                  expression (src/AtomicBitSet.ml[142,4117+19]..[142,4117+20])
                                    Pexp_ident "x" (src/AtomicBitSet.ml[142,4117+19]..[142,4117+20])
                              ]
                        ]
                        expression (src/AtomicBitSet.ml[143,4157+4]..[144,4198+29])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/AtomicBitSet.ml[143,4157+8]..[143,4157+12])
                                Ppat_var "accu" (src/AtomicBitSet.ml[143,4157+8]..[143,4157+12])
                              expression (src/AtomicBitSet.ml[143,4157+15]..[143,4157+37])
                                Pexp_apply
                                expression (src/AtomicBitSet.ml[143,4157+15]..[143,4157+16])
                                  Pexp_ident "f" (src/AtomicBitSet.ml[143,4157+15]..[143,4157+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/AtomicBitSet.ml[143,4157+17]..[143,4157+32])
                                      Pexp_apply
                                      expression (src/AtomicBitSet.ml[143,4157+24]..[143,4157+25])
                                        Pexp_ident "+" (src/AtomicBitSet.ml[143,4157+24]..[143,4157+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/AtomicBitSet.ml[143,4157+18]..[143,4157+23])
                                            Pexp_ident "delta" (src/AtomicBitSet.ml[143,4157+18]..[143,4157+23])
                                        <arg>
                                        Nolabel
                                          expression (src/AtomicBitSet.ml[143,4157+26]..[143,4157+31])
                                            Pexp_apply
                                            expression (src/AtomicBitSet.ml[143,4157+26]..[143,4157+29])
                                              Pexp_ident "tib" (src/AtomicBitSet.ml[143,4157+26]..[143,4157+29])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/AtomicBitSet.ml[143,4157+30]..[143,4157+31])
                                                  Pexp_ident "x" (src/AtomicBitSet.ml[143,4157+30]..[143,4157+31])
                                            ]
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/AtomicBitSet.ml[143,4157+33]..[143,4157+37])
                                      Pexp_ident "accu" (src/AtomicBitSet.ml[143,4157+33]..[143,4157+37])
                                ]
                          ]
                          expression (src/AtomicBitSet.ml[144,4198+4]..[144,4198+29])
                            Pexp_apply
                            expression (src/AtomicBitSet.ml[144,4198+4]..[144,4198+14])
                              Pexp_ident "fold_delta" (src/AtomicBitSet.ml[144,4198+4]..[144,4198+14])
                            [
                              <arg>
                              Nolabel
                                expression (src/AtomicBitSet.ml[144,4198+15]..[144,4198+20])
                                  Pexp_ident "delta" (src/AtomicBitSet.ml[144,4198+15]..[144,4198+20])
                              <arg>
                              Nolabel
                                expression (src/AtomicBitSet.ml[144,4198+21]..[144,4198+22])
                                  Pexp_ident "f" (src/AtomicBitSet.ml[144,4198+21]..[144,4198+22])
                              <arg>
                              Nolabel
                                expression (src/AtomicBitSet.ml[144,4198+23]..[144,4198+24])
                                  Pexp_ident "s" (src/AtomicBitSet.ml[144,4198+23]..[144,4198+24])
                              <arg>
                              Nolabel
                                expression (src/AtomicBitSet.ml[144,4198+25]..[144,4198+29])
                                  Pexp_ident "accu" (src/AtomicBitSet.ml[144,4198+25]..[144,4198+29])
                            ]
    ]
  structure_item (src/AtomicBitSet.ml[146,4229+0]..[151,4367+24])
    Pstr_value Rec
    [
      <def>
        pattern (src/AtomicBitSet.ml[146,4229+8]..[146,4229+18])
          Ppat_var "iter_delta" (src/AtomicBitSet.ml[146,4229+8]..[146,4229+18])
        expression (src/AtomicBitSet.ml[146,4229+19]..[151,4367+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[146,4229+19]..[146,4229+24])
            Ppat_var "delta" (src/AtomicBitSet.ml[146,4229+19]..[146,4229+24])
          expression (src/AtomicBitSet.ml[146,4229+25]..[151,4367+24]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/AtomicBitSet.ml[146,4229+25]..[146,4229+26])
              Ppat_var "f" (src/AtomicBitSet.ml[146,4229+25]..[146,4229+26])
            expression (src/AtomicBitSet.ml[146,4229+27]..[151,4367+24]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/AtomicBitSet.ml[146,4229+27]..[146,4229+28])
                Ppat_var "s" (src/AtomicBitSet.ml[146,4229+27]..[146,4229+28])
              expression (src/AtomicBitSet.ml[147,4260+2]..[151,4367+24])
                Pexp_ifthenelse
                expression (src/AtomicBitSet.ml[147,4260+5]..[147,4260+11])
                  Pexp_apply
                  expression (src/AtomicBitSet.ml[147,4260+7]..[147,4260+9])
                    Pexp_ident "<>" (src/AtomicBitSet.ml[147,4260+7]..[147,4260+9])
                  [
                    <arg>
                    Nolabel
                      expression (src/AtomicBitSet.ml[147,4260+5]..[147,4260+6])
                        Pexp_ident "s" (src/AtomicBitSet.ml[147,4260+5]..[147,4260+6])
                    <arg>
                    Nolabel
                      expression (src/AtomicBitSet.ml[147,4260+10]..[147,4260+11])
                        Pexp_constant PConst_int (0,None)
                  ]
                expression (src/AtomicBitSet.ml[148,4277+4]..[151,4367+24])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/AtomicBitSet.ml[148,4277+8]..[148,4277+9])
                        Ppat_var "x" (src/AtomicBitSet.ml[148,4277+8]..[148,4277+9])
                      expression (src/AtomicBitSet.ml[148,4277+12]..[148,4277+23])
                        Pexp_apply
                        expression (src/AtomicBitSet.ml[148,4277+14]..[148,4277+18])
                          Pexp_ident "land" (src/AtomicBitSet.ml[148,4277+14]..[148,4277+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/AtomicBitSet.ml[148,4277+12]..[148,4277+13])
                              Pexp_ident "s" (src/AtomicBitSet.ml[148,4277+12]..[148,4277+13])
                          <arg>
                          Nolabel
                            expression (src/AtomicBitSet.ml[148,4277+19]..[148,4277+23])
                              Pexp_apply
                              expression (src/AtomicBitSet.ml[148,4277+20]..[148,4277+21])
                                Pexp_ident "~-" (src/AtomicBitSet.ml[148,4277+20]..[148,4277+21])
                              [
                                <arg>
                                Nolabel
                                  expression (src/AtomicBitSet.ml[148,4277+21]..[148,4277+22])
                                    Pexp_ident "s" (src/AtomicBitSet.ml[148,4277+21]..[148,4277+22])
                              ]
                        ]
                  ]
                  expression (src/AtomicBitSet.ml[149,4304+4]..[151,4367+24])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/AtomicBitSet.ml[149,4304+8]..[149,4304+9])
                          Ppat_var "s" (src/AtomicBitSet.ml[149,4304+8]..[149,4304+9])
                        expression (src/AtomicBitSet.ml[149,4304+12]..[149,4304+20])
                          Pexp_apply
                          expression (src/AtomicBitSet.ml[149,4304+14]..[149,4304+18])
                            Pexp_ident "lxor" (src/AtomicBitSet.ml[149,4304+14]..[149,4304+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/AtomicBitSet.ml[149,4304+12]..[149,4304+13])
                                Pexp_ident "s" (src/AtomicBitSet.ml[149,4304+12]..[149,4304+13])
                            <arg>
                            Nolabel
                              expression (src/AtomicBitSet.ml[149,4304+19]..[149,4304+20])
                                Pexp_ident "x" (src/AtomicBitSet.ml[149,4304+19]..[149,4304+20])
                          ]
                    ]
                    expression (src/AtomicBitSet.ml[150,4344+4]..[151,4367+24])
                      Pexp_sequence
                      expression (src/AtomicBitSet.ml[150,4344+4]..[150,4344+21])
                        Pexp_apply
                        expression (src/AtomicBitSet.ml[150,4344+4]..[150,4344+5])
                          Pexp_ident "f" (src/AtomicBitSet.ml[150,4344+4]..[150,4344+5])
                        [
                          <arg>
                          Nolabel
                            expression (src/AtomicBitSet.ml[150,4344+6]..[150,4344+21])
                              Pexp_apply
                              expression (src/AtomicBitSet.ml[150,4344+13]..[150,4344+14])
                                Pexp_ident "+" (src/AtomicBitSet.ml[150,4344+13]..[150,4344+14])
                              [
                                <arg>
                                Nolabel
                                  expression (src/AtomicBitSet.ml[150,4344+7]..[150,4344+12])
                                    Pexp_ident "delta" (src/AtomicBitSet.ml[150,4344+7]..[150,4344+12])
                                <arg>
                                Nolabel
                                  expression (src/AtomicBitSet.ml[150,4344+15]..[150,4344+20])
                                    Pexp_apply
                                    expression (src/AtomicBitSet.ml[150,4344+15]..[150,4344+18])
                                      Pexp_ident "tib" (src/AtomicBitSet.ml[150,4344+15]..[150,4344+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/AtomicBitSet.ml[150,4344+19]..[150,4344+20])
                                          Pexp_ident "x" (src/AtomicBitSet.ml[150,4344+19]..[150,4344+20])
                                    ]
                              ]
                        ]
                      expression (src/AtomicBitSet.ml[151,4367+4]..[151,4367+24])
                        Pexp_apply
                        expression (src/AtomicBitSet.ml[151,4367+4]..[151,4367+14])
                          Pexp_ident "iter_delta" (src/AtomicBitSet.ml[151,4367+4]..[151,4367+14])
                        [
                          <arg>
                          Nolabel
                            expression (src/AtomicBitSet.ml[151,4367+15]..[151,4367+20])
                              Pexp_ident "delta" (src/AtomicBitSet.ml[151,4367+15]..[151,4367+20])
                          <arg>
                          Nolabel
                            expression (src/AtomicBitSet.ml[151,4367+21]..[151,4367+22])
                              Pexp_ident "f" (src/AtomicBitSet.ml[151,4367+21]..[151,4367+22])
                          <arg>
                          Nolabel
                            expression (src/AtomicBitSet.ml[151,4367+23]..[151,4367+24])
                              Pexp_ident "s" (src/AtomicBitSet.ml[151,4367+23]..[151,4367+24])
                        ]
                None
    ]
  structure_item (src/AtomicBitSet.ml[153,4393+0]..[160,4549+17])
    Pstr_value Rec
    [
      <def>
        pattern (src/AtomicBitSet.ml[153,4393+8]..[153,4393+12])
          Ppat_var "fold" (src/AtomicBitSet.ml[153,4393+8]..[153,4393+12])
        expression (src/AtomicBitSet.ml[153,4393+13]..[160,4549+17]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[153,4393+13]..[153,4393+14])
            Ppat_var "f" (src/AtomicBitSet.ml[153,4393+13]..[153,4393+14])
          expression (src/AtomicBitSet.ml[153,4393+15]..[160,4549+17]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/AtomicBitSet.ml[153,4393+15]..[153,4393+16])
              Ppat_var "s" (src/AtomicBitSet.ml[153,4393+15]..[153,4393+16])
            expression (src/AtomicBitSet.ml[153,4393+17]..[160,4549+17]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/AtomicBitSet.ml[153,4393+17]..[153,4393+21])
                Ppat_var "accu" (src/AtomicBitSet.ml[153,4393+17]..[153,4393+21])
              expression (src/AtomicBitSet.ml[154,4417+2]..[160,4549+17])
                Pexp_ifthenelse
                expression (src/AtomicBitSet.ml[154,4417+5]..[154,4417+10])
                  Pexp_apply
                  expression (src/AtomicBitSet.ml[154,4417+7]..[154,4417+8])
                    Pexp_ident "=" (src/AtomicBitSet.ml[154,4417+7]..[154,4417+8])
                  [
                    <arg>
                    Nolabel
                      expression (src/AtomicBitSet.ml[154,4417+5]..[154,4417+6])
                        Pexp_ident "s" (src/AtomicBitSet.ml[154,4417+5]..[154,4417+6])
                    <arg>
                    Nolabel
                      expression (src/AtomicBitSet.ml[154,4417+9]..[154,4417+10])
                        Pexp_constant PConst_int (0,None)
                  ]
                expression (src/AtomicBitSet.ml[155,4433+4]..[155,4433+8])
                  Pexp_ident "accu" (src/AtomicBitSet.ml[155,4433+4]..[155,4433+8])
                Some
                  expression (src/AtomicBitSet.ml[157,4449+4]..[160,4549+17])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/AtomicBitSet.ml[157,4449+8]..[157,4449+9])
                          Ppat_var "x" (src/AtomicBitSet.ml[157,4449+8]..[157,4449+9])
                        expression (src/AtomicBitSet.ml[157,4449+12]..[157,4449+23])
                          Pexp_apply
                          expression (src/AtomicBitSet.ml[157,4449+14]..[157,4449+18])
                            Pexp_ident "land" (src/AtomicBitSet.ml[157,4449+14]..[157,4449+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/AtomicBitSet.ml[157,4449+12]..[157,4449+13])
                                Pexp_ident "s" (src/AtomicBitSet.ml[157,4449+12]..[157,4449+13])
                            <arg>
                            Nolabel
                              expression (src/AtomicBitSet.ml[157,4449+19]..[157,4449+23])
                                Pexp_apply
                                expression (src/AtomicBitSet.ml[157,4449+20]..[157,4449+21])
                                  Pexp_ident "~-" (src/AtomicBitSet.ml[157,4449+20]..[157,4449+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/AtomicBitSet.ml[157,4449+21]..[157,4449+22])
                                      Pexp_ident "s" (src/AtomicBitSet.ml[157,4449+21]..[157,4449+22])
                                ]
                          ]
                    ]
                    expression (src/AtomicBitSet.ml[158,4476+4]..[160,4549+17])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/AtomicBitSet.ml[158,4476+8]..[158,4476+9])
                            Ppat_var "s" (src/AtomicBitSet.ml[158,4476+8]..[158,4476+9])
                          expression (src/AtomicBitSet.ml[158,4476+12]..[158,4476+20])
                            Pexp_apply
                            expression (src/AtomicBitSet.ml[158,4476+14]..[158,4476+18])
                              Pexp_ident "lxor" (src/AtomicBitSet.ml[158,4476+14]..[158,4476+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/AtomicBitSet.ml[158,4476+12]..[158,4476+13])
                                  Pexp_ident "s" (src/AtomicBitSet.ml[158,4476+12]..[158,4476+13])
                              <arg>
                              Nolabel
                                expression (src/AtomicBitSet.ml[158,4476+19]..[158,4476+20])
                                  Pexp_ident "x" (src/AtomicBitSet.ml[158,4476+19]..[158,4476+20])
                            ]
                      ]
                      expression (src/AtomicBitSet.ml[159,4516+4]..[160,4549+17])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/AtomicBitSet.ml[159,4516+8]..[159,4516+12])
                              Ppat_var "accu" (src/AtomicBitSet.ml[159,4516+8]..[159,4516+12])
                            expression (src/AtomicBitSet.ml[159,4516+15]..[159,4516+29])
                              Pexp_apply
                              expression (src/AtomicBitSet.ml[159,4516+15]..[159,4516+16])
                                Pexp_ident "f" (src/AtomicBitSet.ml[159,4516+15]..[159,4516+16])
                              [
                                <arg>
                                Nolabel
                                  expression (src/AtomicBitSet.ml[159,4516+17]..[159,4516+24])
                                    Pexp_apply
                                    expression (src/AtomicBitSet.ml[159,4516+18]..[159,4516+21])
                                      Pexp_ident "tib" (src/AtomicBitSet.ml[159,4516+18]..[159,4516+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/AtomicBitSet.ml[159,4516+22]..[159,4516+23])
                                          Pexp_ident "x" (src/AtomicBitSet.ml[159,4516+22]..[159,4516+23])
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/AtomicBitSet.ml[159,4516+25]..[159,4516+29])
                                    Pexp_ident "accu" (src/AtomicBitSet.ml[159,4516+25]..[159,4516+29])
                              ]
                        ]
                        expression (src/AtomicBitSet.ml[160,4549+4]..[160,4549+17])
                          Pexp_apply
                          expression (src/AtomicBitSet.ml[160,4549+4]..[160,4549+8])
                            Pexp_ident "fold" (src/AtomicBitSet.ml[160,4549+4]..[160,4549+8])
                          [
                            <arg>
                            Nolabel
                              expression (src/AtomicBitSet.ml[160,4549+9]..[160,4549+10])
                                Pexp_ident "f" (src/AtomicBitSet.ml[160,4549+9]..[160,4549+10])
                            <arg>
                            Nolabel
                              expression (src/AtomicBitSet.ml[160,4549+11]..[160,4549+12])
                                Pexp_ident "s" (src/AtomicBitSet.ml[160,4549+11]..[160,4549+12])
                            <arg>
                            Nolabel
                              expression (src/AtomicBitSet.ml[160,4549+13]..[160,4549+17])
                                Pexp_ident "accu" (src/AtomicBitSet.ml[160,4549+13]..[160,4549+17])
                          ]
    ]
  structure_item (src/AtomicBitSet.ml[162,4568+0]..[167,4686+12])
    Pstr_value Rec
    [
      <def>
        pattern (src/AtomicBitSet.ml[162,4568+8]..[162,4568+12])
          Ppat_var "iter" (src/AtomicBitSet.ml[162,4568+8]..[162,4568+12])
        expression (src/AtomicBitSet.ml[162,4568+13]..[167,4686+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[162,4568+13]..[162,4568+14])
            Ppat_var "f" (src/AtomicBitSet.ml[162,4568+13]..[162,4568+14])
          expression (src/AtomicBitSet.ml[162,4568+15]..[167,4686+12]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/AtomicBitSet.ml[162,4568+15]..[162,4568+16])
              Ppat_var "s" (src/AtomicBitSet.ml[162,4568+15]..[162,4568+16])
            expression (src/AtomicBitSet.ml[163,4587+2]..[167,4686+12])
              Pexp_ifthenelse
              expression (src/AtomicBitSet.ml[163,4587+5]..[163,4587+11])
                Pexp_apply
                expression (src/AtomicBitSet.ml[163,4587+7]..[163,4587+9])
                  Pexp_ident "<>" (src/AtomicBitSet.ml[163,4587+7]..[163,4587+9])
                [
                  <arg>
                  Nolabel
                    expression (src/AtomicBitSet.ml[163,4587+5]..[163,4587+6])
                      Pexp_ident "s" (src/AtomicBitSet.ml[163,4587+5]..[163,4587+6])
                  <arg>
                  Nolabel
                    expression (src/AtomicBitSet.ml[163,4587+10]..[163,4587+11])
                      Pexp_constant PConst_int (0,None)
                ]
              expression (src/AtomicBitSet.ml[164,4604+4]..[167,4686+12])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/AtomicBitSet.ml[164,4604+8]..[164,4604+9])
                      Ppat_var "x" (src/AtomicBitSet.ml[164,4604+8]..[164,4604+9])
                    expression (src/AtomicBitSet.ml[164,4604+12]..[164,4604+23])
                      Pexp_apply
                      expression (src/AtomicBitSet.ml[164,4604+14]..[164,4604+18])
                        Pexp_ident "land" (src/AtomicBitSet.ml[164,4604+14]..[164,4604+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[164,4604+12]..[164,4604+13])
                            Pexp_ident "s" (src/AtomicBitSet.ml[164,4604+12]..[164,4604+13])
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[164,4604+19]..[164,4604+23])
                            Pexp_apply
                            expression (src/AtomicBitSet.ml[164,4604+20]..[164,4604+21])
                              Pexp_ident "~-" (src/AtomicBitSet.ml[164,4604+20]..[164,4604+21])
                            [
                              <arg>
                              Nolabel
                                expression (src/AtomicBitSet.ml[164,4604+21]..[164,4604+22])
                                  Pexp_ident "s" (src/AtomicBitSet.ml[164,4604+21]..[164,4604+22])
                            ]
                      ]
                ]
                expression (src/AtomicBitSet.ml[165,4631+4]..[167,4686+12])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/AtomicBitSet.ml[165,4631+8]..[165,4631+9])
                        Ppat_var "s" (src/AtomicBitSet.ml[165,4631+8]..[165,4631+9])
                      expression (src/AtomicBitSet.ml[165,4631+12]..[165,4631+20])
                        Pexp_apply
                        expression (src/AtomicBitSet.ml[165,4631+14]..[165,4631+18])
                          Pexp_ident "lxor" (src/AtomicBitSet.ml[165,4631+14]..[165,4631+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/AtomicBitSet.ml[165,4631+12]..[165,4631+13])
                              Pexp_ident "s" (src/AtomicBitSet.ml[165,4631+12]..[165,4631+13])
                          <arg>
                          Nolabel
                            expression (src/AtomicBitSet.ml[165,4631+19]..[165,4631+20])
                              Pexp_ident "x" (src/AtomicBitSet.ml[165,4631+19]..[165,4631+20])
                        ]
                  ]
                  expression (src/AtomicBitSet.ml[166,4671+4]..[167,4686+12])
                    Pexp_sequence
                    expression (src/AtomicBitSet.ml[166,4671+4]..[166,4671+13])
                      Pexp_apply
                      expression (src/AtomicBitSet.ml[166,4671+4]..[166,4671+5])
                        Pexp_ident "f" (src/AtomicBitSet.ml[166,4671+4]..[166,4671+5])
                      [
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[166,4671+6]..[166,4671+13])
                            Pexp_apply
                            expression (src/AtomicBitSet.ml[166,4671+7]..[166,4671+10])
                              Pexp_ident "tib" (src/AtomicBitSet.ml[166,4671+7]..[166,4671+10])
                            [
                              <arg>
                              Nolabel
                                expression (src/AtomicBitSet.ml[166,4671+11]..[166,4671+12])
                                  Pexp_ident "x" (src/AtomicBitSet.ml[166,4671+11]..[166,4671+12])
                            ]
                      ]
                    expression (src/AtomicBitSet.ml[167,4686+4]..[167,4686+12])
                      Pexp_apply
                      expression (src/AtomicBitSet.ml[167,4686+4]..[167,4686+8])
                        Pexp_ident "iter" (src/AtomicBitSet.ml[167,4686+4]..[167,4686+8])
                      [
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[167,4686+9]..[167,4686+10])
                            Pexp_ident "f" (src/AtomicBitSet.ml[167,4686+9]..[167,4686+10])
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[167,4686+11]..[167,4686+12])
                            Pexp_ident "s" (src/AtomicBitSet.ml[167,4686+11]..[167,4686+12])
                      ]
              None
    ]
  structure_item (src/AtomicBitSet.ml[169,4700+0]..[172,4845+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[169,4700+4]..[169,4700+16])
          Ppat_var "is_singleton" (src/AtomicBitSet.ml[169,4700+4]..[169,4700+16])
        expression (src/AtomicBitSet.ml[169,4700+17]..[172,4845+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[169,4700+17]..[169,4700+18])
            Ppat_var "s" (src/AtomicBitSet.ml[169,4700+17]..[169,4700+18])
          expression (src/AtomicBitSet.ml[172,4845+2]..[172,4845+20])
            Pexp_apply
            expression (src/AtomicBitSet.ml[172,4845+17]..[172,4845+18])
              Pexp_ident "=" (src/AtomicBitSet.ml[172,4845+17]..[172,4845+18])
            [
              <arg>
              Nolabel
                expression (src/AtomicBitSet.ml[172,4845+2]..[172,4845+16])
                  Pexp_apply
                  expression (src/AtomicBitSet.ml[172,4845+4]..[172,4845+8])
                    Pexp_ident "land" (src/AtomicBitSet.ml[172,4845+4]..[172,4845+8])
                  [
                    <arg>
                    Nolabel
                      expression (src/AtomicBitSet.ml[172,4845+2]..[172,4845+3])
                        Pexp_ident "s" (src/AtomicBitSet.ml[172,4845+2]..[172,4845+3])
                    <arg>
                    Nolabel
                      expression (src/AtomicBitSet.ml[172,4845+9]..[172,4845+16])
                        Pexp_apply
                        expression (src/AtomicBitSet.ml[172,4845+12]..[172,4845+13])
                          Pexp_ident "-" (src/AtomicBitSet.ml[172,4845+12]..[172,4845+13])
                        [
                          <arg>
                          Nolabel
                            expression (src/AtomicBitSet.ml[172,4845+10]..[172,4845+11])
                              Pexp_ident "s" (src/AtomicBitSet.ml[172,4845+10]..[172,4845+11])
                          <arg>
                          Nolabel
                            expression (src/AtomicBitSet.ml[172,4845+14]..[172,4845+15])
                              Pexp_constant PConst_int (1,None)
                        ]
                  ]
              <arg>
              Nolabel
                expression (src/AtomicBitSet.ml[172,4845+19]..[172,4845+20])
                  Pexp_constant PConst_int (0,None)
            ]
    ]
  structure_item (src/AtomicBitSet.ml[174,4867+0]..[175,4884+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[174,4867+4]..[174,4867+12])
          Ppat_var "cardinal" (src/AtomicBitSet.ml[174,4867+4]..[174,4867+12])
        expression (src/AtomicBitSet.ml[174,4867+13]..[175,4884+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[174,4867+13]..[174,4867+14])
            Ppat_var "s" (src/AtomicBitSet.ml[174,4867+13]..[174,4867+14])
          expression (src/AtomicBitSet.ml[175,4884+2]..[175,4884+7])
            Pexp_apply
            expression (src/AtomicBitSet.ml[175,4884+2]..[175,4884+5])
              Pexp_ident "pop" (src/AtomicBitSet.ml[175,4884+2]..[175,4884+5])
            [
              <arg>
              Nolabel
                expression (src/AtomicBitSet.ml[175,4884+6]..[175,4884+7])
                  Pexp_ident "s" (src/AtomicBitSet.ml[175,4884+6]..[175,4884+7])
            ]
    ]
  structure_item (src/AtomicBitSet.ml[178,4933+0]..[180,5006+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[178,4933+4]..[178,4933+12])
          Ppat_var "elements" (src/AtomicBitSet.ml[178,4933+4]..[178,4933+12])
        expression (src/AtomicBitSet.ml[178,4933+13]..[180,5006+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[178,4933+13]..[178,4933+14])
            Ppat_var "s" (src/AtomicBitSet.ml[178,4933+13]..[178,4933+14])
          expression (src/AtomicBitSet.ml[180,5006+2]..[180,5006+35])
            Pexp_apply
            expression (src/AtomicBitSet.ml[180,5006+2]..[180,5006+6])
              Pexp_ident "fold" (src/AtomicBitSet.ml[180,5006+2]..[180,5006+6])
            [
              <arg>
              Nolabel
                expression (src/AtomicBitSet.ml[180,5006+7]..[180,5006+30])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/AtomicBitSet.ml[180,5006+12]..[180,5006+14])
                    Ppat_var "tl" (src/AtomicBitSet.ml[180,5006+12]..[180,5006+14])
                  expression (src/AtomicBitSet.ml[180,5006+15]..[180,5006+29]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/AtomicBitSet.ml[180,5006+15]..[180,5006+17])
                      Ppat_var "hd" (src/AtomicBitSet.ml[180,5006+15]..[180,5006+17])
                    expression (src/AtomicBitSet.ml[180,5006+21]..[180,5006+29])
                      Pexp_construct "::" (src/AtomicBitSet.ml[180,5006+24]..[180,5006+26])
                      Some
                        expression (src/AtomicBitSet.ml[180,5006+21]..[180,5006+29]) ghost
                          Pexp_tuple
                          [
                            expression (src/AtomicBitSet.ml[180,5006+21]..[180,5006+23])
                              Pexp_ident "tl" (src/AtomicBitSet.ml[180,5006+21]..[180,5006+23])
                            expression (src/AtomicBitSet.ml[180,5006+27]..[180,5006+29])
                              Pexp_ident "hd" (src/AtomicBitSet.ml[180,5006+27]..[180,5006+29])
                          ]
              <arg>
              Nolabel
                expression (src/AtomicBitSet.ml[180,5006+31]..[180,5006+32])
                  Pexp_ident "s" (src/AtomicBitSet.ml[180,5006+31]..[180,5006+32])
              <arg>
              Nolabel
                expression (src/AtomicBitSet.ml[180,5006+33]..[180,5006+35])
                  Pexp_construct "[]" (src/AtomicBitSet.ml[180,5006+33]..[180,5006+35])
                  None
            ]
    ]
  structure_item (src/AtomicBitSet.ml[182,5043+0]..[183,5062+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[182,5043+4]..[182,5043+10])
          Ppat_var "subset" (src/AtomicBitSet.ml[182,5043+4]..[182,5043+10])
        expression (src/AtomicBitSet.ml[182,5043+11]..[183,5062+17]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[182,5043+11]..[182,5043+13])
            Ppat_var "s1" (src/AtomicBitSet.ml[182,5043+11]..[182,5043+13])
          expression (src/AtomicBitSet.ml[182,5043+14]..[183,5062+17]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/AtomicBitSet.ml[182,5043+14]..[182,5043+16])
              Ppat_var "s2" (src/AtomicBitSet.ml[182,5043+14]..[182,5043+16])
            expression (src/AtomicBitSet.ml[183,5062+2]..[183,5062+17])
              Pexp_apply
              expression (src/AtomicBitSet.ml[183,5062+13]..[183,5062+14])
                Pexp_ident "=" (src/AtomicBitSet.ml[183,5062+13]..[183,5062+14])
              [
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[183,5062+2]..[183,5062+12])
                    Pexp_apply
                    expression (src/AtomicBitSet.ml[183,5062+5]..[183,5062+9])
                      Pexp_ident "land" (src/AtomicBitSet.ml[183,5062+5]..[183,5062+9])
                    [
                      <arg>
                      Nolabel
                        expression (src/AtomicBitSet.ml[183,5062+2]..[183,5062+4])
                          Pexp_ident "s1" (src/AtomicBitSet.ml[183,5062+2]..[183,5062+4])
                      <arg>
                      Nolabel
                        expression (src/AtomicBitSet.ml[183,5062+10]..[183,5062+12])
                          Pexp_ident "s2" (src/AtomicBitSet.ml[183,5062+10]..[183,5062+12])
                    ]
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[183,5062+15]..[183,5062+17])
                    Pexp_ident "s1" (src/AtomicBitSet.ml[183,5062+15]..[183,5062+17])
              ]
    ]
  structure_item (src/AtomicBitSet.ml[185,5081+0]..[186,5095+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[185,5081+4]..[185,5081+7])
          Ppat_var "mem" (src/AtomicBitSet.ml[185,5081+4]..[185,5081+7])
        expression (src/AtomicBitSet.ml[185,5081+8]..[186,5095+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[185,5081+8]..[185,5081+9])
            Ppat_var "i" (src/AtomicBitSet.ml[185,5081+8]..[185,5081+9])
          expression (src/AtomicBitSet.ml[185,5081+10]..[186,5095+24]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/AtomicBitSet.ml[185,5081+10]..[185,5081+11])
              Ppat_var "s" (src/AtomicBitSet.ml[185,5081+10]..[185,5081+11])
            expression (src/AtomicBitSet.ml[186,5095+2]..[186,5095+24])
              Pexp_apply
              expression (src/AtomicBitSet.ml[186,5095+2]..[186,5095+8])
                Pexp_ident "subset" (src/AtomicBitSet.ml[186,5095+2]..[186,5095+8])
              [
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[186,5095+9]..[186,5095+22])
                    Pexp_apply
                    expression (src/AtomicBitSet.ml[186,5095+10]..[186,5095+19])
                      Pexp_ident "singleton" (src/AtomicBitSet.ml[186,5095+10]..[186,5095+19])
                    [
                      <arg>
                      Nolabel
                        expression (src/AtomicBitSet.ml[186,5095+20]..[186,5095+21])
                          Pexp_ident "i" (src/AtomicBitSet.ml[186,5095+20]..[186,5095+21])
                    ]
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[186,5095+23]..[186,5095+24])
                    Pexp_ident "s" (src/AtomicBitSet.ml[186,5095+23]..[186,5095+24])
              ]
    ]
  structure_item (src/AtomicBitSet.ml[188,5121+0]..[189,5139+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[188,5121+4]..[188,5121+9])
          Ppat_var "union" (src/AtomicBitSet.ml[188,5121+4]..[188,5121+9])
        expression (src/AtomicBitSet.ml[188,5121+10]..[189,5139+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[188,5121+10]..[188,5121+12])
            Ppat_var "s1" (src/AtomicBitSet.ml[188,5121+10]..[188,5121+12])
          expression (src/AtomicBitSet.ml[188,5121+13]..[189,5139+11]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/AtomicBitSet.ml[188,5121+13]..[188,5121+15])
              Ppat_var "s2" (src/AtomicBitSet.ml[188,5121+13]..[188,5121+15])
            expression (src/AtomicBitSet.ml[189,5139+2]..[189,5139+11])
              Pexp_apply
              expression (src/AtomicBitSet.ml[189,5139+5]..[189,5139+8])
                Pexp_ident "lor" (src/AtomicBitSet.ml[189,5139+5]..[189,5139+8])
              [
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[189,5139+2]..[189,5139+4])
                    Pexp_ident "s1" (src/AtomicBitSet.ml[189,5139+2]..[189,5139+4])
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[189,5139+9]..[189,5139+11])
                    Pexp_ident "s2" (src/AtomicBitSet.ml[189,5139+9]..[189,5139+11])
              ]
    ]
  structure_item (src/AtomicBitSet.ml[191,5152+0]..[192,5170+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[191,5152+4]..[191,5152+9])
          Ppat_var "inter" (src/AtomicBitSet.ml[191,5152+4]..[191,5152+9])
        expression (src/AtomicBitSet.ml[191,5152+10]..[192,5170+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[191,5152+10]..[191,5152+12])
            Ppat_var "s1" (src/AtomicBitSet.ml[191,5152+10]..[191,5152+12])
          expression (src/AtomicBitSet.ml[191,5152+13]..[192,5170+12]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/AtomicBitSet.ml[191,5152+13]..[191,5152+15])
              Ppat_var "s2" (src/AtomicBitSet.ml[191,5152+13]..[191,5152+15])
            expression (src/AtomicBitSet.ml[192,5170+2]..[192,5170+12])
              Pexp_apply
              expression (src/AtomicBitSet.ml[192,5170+5]..[192,5170+9])
                Pexp_ident "land" (src/AtomicBitSet.ml[192,5170+5]..[192,5170+9])
              [
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[192,5170+2]..[192,5170+4])
                    Pexp_ident "s1" (src/AtomicBitSet.ml[192,5170+2]..[192,5170+4])
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[192,5170+10]..[192,5170+12])
                    Pexp_ident "s2" (src/AtomicBitSet.ml[192,5170+10]..[192,5170+12])
              ]
    ]
  structure_item (src/AtomicBitSet.ml[194,5184+0]..[199,5270+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[194,5184+4]..[194,5184+11])
          Ppat_var "minimum" (src/AtomicBitSet.ml[194,5184+4]..[194,5184+11])
        expression (src/AtomicBitSet.ml[194,5184+12]..[199,5270+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[194,5184+12]..[194,5184+13])
            Ppat_var "s" (src/AtomicBitSet.ml[194,5184+12]..[194,5184+13])
          expression (src/AtomicBitSet.ml[195,5200+2]..[199,5270+9])
            Pexp_ifthenelse
            expression (src/AtomicBitSet.ml[195,5200+5]..[195,5200+10])
              Pexp_apply
              expression (src/AtomicBitSet.ml[195,5200+7]..[195,5200+8])
                Pexp_ident "=" (src/AtomicBitSet.ml[195,5200+7]..[195,5200+8])
              [
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[195,5200+5]..[195,5200+6])
                    Pexp_ident "s" (src/AtomicBitSet.ml[195,5200+5]..[195,5200+6])
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[195,5200+9]..[195,5200+10])
                    Pexp_constant PConst_int (0,None)
              ]
            expression (src/AtomicBitSet.ml[196,5216+4]..[196,5216+19])
              Pexp_apply
              expression (src/AtomicBitSet.ml[196,5216+4]..[196,5216+9])
                Pexp_ident "raise" (src/AtomicBitSet.ml[196,5216+4]..[196,5216+9])
              [
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[196,5216+10]..[196,5216+19])
                    Pexp_construct "Not_found" (src/AtomicBitSet.ml[196,5216+10]..[196,5216+19])
                    None
              ]
            Some
              expression (src/AtomicBitSet.ml[198,5243+4]..[199,5270+9])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/AtomicBitSet.ml[198,5243+8]..[198,5243+9])
                      Ppat_var "x" (src/AtomicBitSet.ml[198,5243+8]..[198,5243+9])
                    expression (src/AtomicBitSet.ml[198,5243+12]..[198,5243+23])
                      Pexp_apply
                      expression (src/AtomicBitSet.ml[198,5243+14]..[198,5243+18])
                        Pexp_ident "land" (src/AtomicBitSet.ml[198,5243+14]..[198,5243+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[198,5243+12]..[198,5243+13])
                            Pexp_ident "s" (src/AtomicBitSet.ml[198,5243+12]..[198,5243+13])
                        <arg>
                        Nolabel
                          expression (src/AtomicBitSet.ml[198,5243+19]..[198,5243+23])
                            Pexp_apply
                            expression (src/AtomicBitSet.ml[198,5243+20]..[198,5243+21])
                              Pexp_ident "~-" (src/AtomicBitSet.ml[198,5243+20]..[198,5243+21])
                            [
                              <arg>
                              Nolabel
                                expression (src/AtomicBitSet.ml[198,5243+21]..[198,5243+22])
                                  Pexp_ident "s" (src/AtomicBitSet.ml[198,5243+21]..[198,5243+22])
                            ]
                      ]
                ]
                expression (src/AtomicBitSet.ml[199,5270+4]..[199,5270+9])
                  Pexp_apply
                  expression (src/AtomicBitSet.ml[199,5270+4]..[199,5270+7])
                    Pexp_ident "tib" (src/AtomicBitSet.ml[199,5270+4]..[199,5270+7])
                  [
                    <arg>
                    Nolabel
                      expression (src/AtomicBitSet.ml[199,5270+8]..[199,5270+9])
                        Pexp_ident "x" (src/AtomicBitSet.ml[199,5270+8]..[199,5270+9])
                  ]
    ]
  structure_item (src/AtomicBitSet.ml[201,5281+0]..[202,5294+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[201,5281+4]..[201,5281+10])
          Ppat_var "choose" (src/AtomicBitSet.ml[201,5281+4]..[201,5281+10])
        expression (src/AtomicBitSet.ml[202,5294+2]..[202,5294+9])
          Pexp_ident "minimum" (src/AtomicBitSet.ml[202,5294+2]..[202,5294+9])
    ]
  structure_item (src/AtomicBitSet.ml[204,5305+0]..[205,5335+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[204,5305+4]..[204,5305+11])
          Ppat_var "compare" (src/AtomicBitSet.ml[204,5305+4]..[204,5305+11])
        core_type (src/AtomicBitSet.ml[204,5305+14]..[204,5305+27])
          Ptyp_arrow
          Nolabel
          core_type (src/AtomicBitSet.ml[204,5305+14]..[204,5305+15])
            Ptyp_constr "t" (src/AtomicBitSet.ml[204,5305+14]..[204,5305+15])
            []
          core_type (src/AtomicBitSet.ml[204,5305+19]..[204,5305+27])
            Ptyp_arrow
            Nolabel
            core_type (src/AtomicBitSet.ml[204,5305+19]..[204,5305+20])
              Ptyp_constr "t" (src/AtomicBitSet.ml[204,5305+19]..[204,5305+20])
              []
            core_type (src/AtomicBitSet.ml[204,5305+24]..[204,5305+27])
              Ptyp_constr "int" (src/AtomicBitSet.ml[204,5305+24]..[204,5305+27])
              []
        expression (src/AtomicBitSet.ml[205,5335+2]..[205,5335+9])
          Pexp_ident "compare" (src/AtomicBitSet.ml[205,5335+2]..[205,5335+9])
    ]
  structure_item (src/AtomicBitSet.ml[207,5378+0]..[208,5407+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[207,5378+4]..[207,5378+9])
          Ppat_var "equal" (src/AtomicBitSet.ml[207,5378+4]..[207,5378+9])
        core_type (src/AtomicBitSet.ml[207,5378+12]..[207,5378+26])
          Ptyp_arrow
          Nolabel
          core_type (src/AtomicBitSet.ml[207,5378+12]..[207,5378+13])
            Ptyp_constr "t" (src/AtomicBitSet.ml[207,5378+12]..[207,5378+13])
            []
          core_type (src/AtomicBitSet.ml[207,5378+17]..[207,5378+26])
            Ptyp_arrow
            Nolabel
            core_type (src/AtomicBitSet.ml[207,5378+17]..[207,5378+18])
              Ptyp_constr "t" (src/AtomicBitSet.ml[207,5378+17]..[207,5378+18])
              []
            core_type (src/AtomicBitSet.ml[207,5378+22]..[207,5378+26])
              Ptyp_constr "bool" (src/AtomicBitSet.ml[207,5378+22]..[207,5378+26])
              []
        expression (src/AtomicBitSet.ml[208,5407+2]..[208,5407+5])
          Pexp_ident "=" (src/AtomicBitSet.ml[208,5407+2]..[208,5407+5])
    ]
  structure_item (src/AtomicBitSet.ml[210,5414+0]..[211,5435+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[210,5414+4]..[210,5414+12])
          Ppat_var "disjoint" (src/AtomicBitSet.ml[210,5414+4]..[210,5414+12])
        expression (src/AtomicBitSet.ml[210,5414+13]..[211,5435+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/AtomicBitSet.ml[210,5414+13]..[210,5414+15])
            Ppat_var "s1" (src/AtomicBitSet.ml[210,5414+13]..[210,5414+15])
          expression (src/AtomicBitSet.ml[210,5414+16]..[211,5435+24]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/AtomicBitSet.ml[210,5414+16]..[210,5414+18])
              Ppat_var "s2" (src/AtomicBitSet.ml[210,5414+16]..[210,5414+18])
            expression (src/AtomicBitSet.ml[211,5435+2]..[211,5435+24])
              Pexp_apply
              expression (src/AtomicBitSet.ml[211,5435+2]..[211,5435+10])
                Pexp_ident "is_empty" (src/AtomicBitSet.ml[211,5435+2]..[211,5435+10])
              [
                <arg>
                Nolabel
                  expression (src/AtomicBitSet.ml[211,5435+11]..[211,5435+24])
                    Pexp_apply
                    expression (src/AtomicBitSet.ml[211,5435+12]..[211,5435+17])
                      Pexp_ident "inter" (src/AtomicBitSet.ml[211,5435+12]..[211,5435+17])
                    [
                      <arg>
                      Nolabel
                        expression (src/AtomicBitSet.ml[211,5435+18]..[211,5435+20])
                          Pexp_ident "s1" (src/AtomicBitSet.ml[211,5435+18]..[211,5435+20])
                      <arg>
                      Nolabel
                        expression (src/AtomicBitSet.ml[211,5435+21]..[211,5435+23])
                          Pexp_ident "s2" (src/AtomicBitSet.ml[211,5435+21]..[211,5435+23])
                    ]
              ]
    ]
]

type t = int
type element = int
let bound = Sys.word_size - 1
let bit i = assert ((0 <= i) && (i < bound)); 1 lsl i
let log2 = Array.make 255 0
let () = for i = 0 to 7 do log2.(bit i) <- i done
let tib16 accu x =
  if (x land 0xFF) = 0
  then (accu + 8) + (log2.(x lsr 8))
  else accu + (log2.(x))
let tib32 accu x =
  if (x land 0xFFFF) = 0 then tib16 (accu + 16) (x lsr 16) else tib16 accu x
let ffffffff = (0xffff lsl 16) lor 0xffff
let tib64 x =
  if (x land ffffffff) = 0 then tib32 32 (x lsr 32) else tib32 0 x
let tib x =
  match Sys.word_size with
  | 32 -> tib32 0 x
  | 64 -> tib64 x
  | _ -> assert false
let () = for i = 0 to bound - 1 do assert ((tib (bit i)) = i) done
let b0 = 0x55555555
let b1 = 0x33333333
let b2 = 0xf0f0f0f
let pop32 x =
  let x = x - ((x lsr 1) land b0) in
  let x = (x land b1) + ((x lsr 2) land b1) in
  let x = (x land b2) + ((x lsr 4) land b2) in
  let x = x + (x lsr 8) in let x = x + (x lsr 16) in x land 0xff
let pop64 x = (pop32 x) + (pop32 (x lsr 32))
let pop x =
  match Sys.word_size with
  | 32 -> pop32 x
  | 64 -> pop64 x
  | _ -> assert false
let empty = 0
let is_empty s = s = 0
let singleton = bit
let add i s = (bit i) lor s
let remove i s = (lnot (bit i)) land s
let rec fold_delta delta f s accu =
  if s = 0
  then accu
  else
    (let x = s land (- s) in
     let s = s lxor x in
     let accu = f (delta + (tib x)) accu in fold_delta delta f s accu)
let rec iter_delta delta f s =
  if s <> 0
  then
    let x = s land (- s) in
    let s = s lxor x in (f (delta + (tib x)); iter_delta delta f s)
let rec fold f s accu =
  if s = 0
  then accu
  else
    (let x = s land (- s) in
     let s = s lxor x in let accu = f (tib x) accu in fold f s accu)
let rec iter f s =
  if s <> 0
  then let x = s land (- s) in let s = s lxor x in (f (tib x); iter f s)
let is_singleton s = (s land (s - 1)) = 0
let cardinal s = pop s
let elements s = fold (fun tl -> fun hd -> tl :: hd) s []
let subset s1 s2 = (s1 land s2) = s1
let mem i s = subset (singleton i) s
let union s1 s2 = s1 lor s2
let inter s1 s2 = s1 land s2
let minimum s =
  if s = 0 then raise Not_found else (let x = s land (- s) in tib x)
let choose = minimum
let compare : t -> t -> int = compare
let equal : t -> t -> bool = (=)
let disjoint s1 s2 = is_empty (inter s1 s2)
[
  structure_item (src/AtomicBitSet.ml[18,1220+0]..src/AtomicBitSet.ml[19,1229+5])
    Tstr_type Rec
    [
      type_declaration t/397 (src/AtomicBitSet.ml[18,1220+0]..src/AtomicBitSet.ml[19,1229+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/AtomicBitSet.ml[19,1229+2]..src/AtomicBitSet.ml[19,1229+5])
              Ttyp_constr "int/1!"
              []
    ]
  structure_item (src/AtomicBitSet.ml[21,1236+0]..src/AtomicBitSet.ml[22,1251+5])
    Tstr_type Rec
    [
      type_declaration element/398 (src/AtomicBitSet.ml[21,1236+0]..src/AtomicBitSet.ml[22,1251+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/AtomicBitSet.ml[22,1251+2]..src/AtomicBitSet.ml[22,1251+5])
              Ttyp_constr "int/1!"
              []
    ]
  structure_item (src/AtomicBitSet.ml[24,1258+0]..src/AtomicBitSet.ml[25,1270+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[24,1258+4]..src/AtomicBitSet.ml[24,1258+9])
          Tpat_var "bound/399"
        expression (src/AtomicBitSet.ml[25,1270+2]..src/AtomicBitSet.ml[25,1270+19])
          Texp_apply
          expression (src/AtomicBitSet.ml[25,1270+16]..src/AtomicBitSet.ml[25,1270+17])
            Texp_ident "Stdlib!.-"
          [
            <arg>
              Nolabel
              expression (src/AtomicBitSet.ml[25,1270+2]..src/AtomicBitSet.ml[25,1270+15])
                Texp_ident "Stdlib!.Sys.word_size"
            <arg>
              Nolabel
              expression (src/AtomicBitSet.ml[25,1270+18]..src/AtomicBitSet.ml[25,1270+19])
                Texp_constant Const_int 1
          ]
    ]
  structure_item (src/AtomicBitSet.ml[31,1398+0]..src/AtomicBitSet.ml[33,1442+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[31,1398+4]..src/AtomicBitSet.ml[31,1398+7])
          Tpat_var "bit/474"
        expression (src/AtomicBitSet.ml[31,1398+8]..src/AtomicBitSet.ml[33,1442+9]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[31,1398+8]..src/AtomicBitSet.ml[31,1398+9])
                Tpat_var "i/476"
              expression (src/AtomicBitSet.ml[32,1410+2]..src/AtomicBitSet.ml[33,1442+9])
                Texp_sequence
                expression (src/AtomicBitSet.ml[32,1410+2]..src/AtomicBitSet.ml[32,1410+30])
                  Texp_assert                  expression (src/AtomicBitSet.ml[32,1410+9]..src/AtomicBitSet.ml[32,1410+30])
                    Texp_apply
                    expression (src/AtomicBitSet.ml[32,1410+17]..src/AtomicBitSet.ml[32,1410+19])
                      Texp_ident "Stdlib!.&&"
                    [
                      <arg>
                        Nolabel
                        expression (src/AtomicBitSet.ml[32,1410+10]..src/AtomicBitSet.ml[32,1410+16])
                          Texp_apply
                          expression (src/AtomicBitSet.ml[32,1410+12]..src/AtomicBitSet.ml[32,1410+14])
                            Texp_ident "Stdlib!.<="
                          [
                            <arg>
                              Nolabel
                              expression (src/AtomicBitSet.ml[32,1410+10]..src/AtomicBitSet.ml[32,1410+11])
                                Texp_constant Const_int 0
                            <arg>
                              Nolabel
                              expression (src/AtomicBitSet.ml[32,1410+15]..src/AtomicBitSet.ml[32,1410+16])
                                Texp_ident "i/476"
                          ]
                      <arg>
                        Nolabel
                        expression (src/AtomicBitSet.ml[32,1410+20]..src/AtomicBitSet.ml[32,1410+29])
                          Texp_apply
                          expression (src/AtomicBitSet.ml[32,1410+22]..src/AtomicBitSet.ml[32,1410+23])
                            Texp_ident "Stdlib!.<"
                          [
                            <arg>
                              Nolabel
                              expression (src/AtomicBitSet.ml[32,1410+20]..src/AtomicBitSet.ml[32,1410+21])
                                Texp_ident "i/476"
                            <arg>
                              Nolabel
                              expression (src/AtomicBitSet.ml[32,1410+24]..src/AtomicBitSet.ml[32,1410+29])
                                Texp_ident "bound/399"
                          ]
                    ]
                expression (src/AtomicBitSet.ml[33,1442+2]..src/AtomicBitSet.ml[33,1442+9])
                  Texp_apply
                  expression (src/AtomicBitSet.ml[33,1442+4]..src/AtomicBitSet.ml[33,1442+7])
                    Texp_ident "Stdlib!.lsl"
                  [
                    <arg>
                      Nolabel
                      expression (src/AtomicBitSet.ml[33,1442+2]..src/AtomicBitSet.ml[33,1442+3])
                        Texp_constant Const_int 1
                    <arg>
                      Nolabel
                      expression (src/AtomicBitSet.ml[33,1442+8]..src/AtomicBitSet.ml[33,1442+9])
                        Texp_ident "i/476"
                  ]
          ]
    ]
  structure_item (src/AtomicBitSet.ml[46,1932+0]..src/AtomicBitSet.ml[47,1943+18])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[46,1932+4]..src/AtomicBitSet.ml[46,1932+8])
          Tpat_var "log2/477"
        expression (src/AtomicBitSet.ml[47,1943+2]..src/AtomicBitSet.ml[47,1943+18])
          Texp_apply
          expression (src/AtomicBitSet.ml[47,1943+2]..src/AtomicBitSet.ml[47,1943+12])
            Texp_ident "Stdlib!.Array.make"
          [
            <arg>
              Nolabel
              expression (src/AtomicBitSet.ml[47,1943+13]..src/AtomicBitSet.ml[47,1943+16])
                Texp_constant Const_int 255
            <arg>
              Nolabel
              expression (src/AtomicBitSet.ml[47,1943+17]..src/AtomicBitSet.ml[47,1943+18])
                Texp_constant Const_int 0
          ]
    ]
  structure_item (src/AtomicBitSet.ml[48,1962+0]..src/AtomicBitSet.ml[49,1971+42])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[48,1962+4]..src/AtomicBitSet.ml[48,1962+6])
          Tpat_construct "()"
          []
          None
        expression (src/AtomicBitSet.ml[49,1971+2]..src/AtomicBitSet.ml[49,1971+42])
          Texp_for "i/526" Up
          expression (src/AtomicBitSet.ml[49,1971+10]..src/AtomicBitSet.ml[49,1971+11])
            Texp_constant Const_int 0
          expression (src/AtomicBitSet.ml[49,1971+15]..src/AtomicBitSet.ml[49,1971+16])
            Texp_constant Const_int 7
          expression (src/AtomicBitSet.ml[49,1971+20]..src/AtomicBitSet.ml[49,1971+37])
            Texp_apply
            expression (src/AtomicBitSet.ml[49,1971+20]..src/AtomicBitSet.ml[49,1971+37]) ghost
              Texp_ident "Stdlib!.Array.set"
            [
              <arg>
                Nolabel
                expression (src/AtomicBitSet.ml[49,1971+20]..src/AtomicBitSet.ml[49,1971+24])
                  Texp_ident "log2/477"
              <arg>
                Nolabel
                expression (src/AtomicBitSet.ml[49,1971+26]..src/AtomicBitSet.ml[49,1971+31])
                  Texp_apply
                  expression (src/AtomicBitSet.ml[49,1971+26]..src/AtomicBitSet.ml[49,1971+29])
                    Texp_ident "bit/474"
                  [
                    <arg>
                      Nolabel
                      expression (src/AtomicBitSet.ml[49,1971+30]..src/AtomicBitSet.ml[49,1971+31])
                        Texp_ident "i/526"
                  ]
              <arg>
                Nolabel
                expression (src/AtomicBitSet.ml[49,1971+36]..src/AtomicBitSet.ml[49,1971+37])
                  Texp_ident "i/526"
            ]
    ]
  structure_item (src/AtomicBitSet.ml[51,2015+0]..src/AtomicBitSet.ml[55,2097+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[51,2015+4]..src/AtomicBitSet.ml[51,2015+9])
          Tpat_var "tib16/527"
        expression (src/AtomicBitSet.ml[51,2015+10]..src/AtomicBitSet.ml[55,2097+19]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[51,2015+10]..src/AtomicBitSet.ml[51,2015+14])
                Tpat_var "accu/529"
              expression (src/AtomicBitSet.ml[51,2015+15]..src/AtomicBitSet.ml[55,2097+19]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/AtomicBitSet.ml[51,2015+15]..src/AtomicBitSet.ml[51,2015+16])
                      Tpat_var "x/530"
                    expression (src/AtomicBitSet.ml[52,2034+2]..src/AtomicBitSet.ml[55,2097+19])
                      Texp_ifthenelse
                      expression (src/AtomicBitSet.ml[52,2034+5]..src/AtomicBitSet.ml[52,2034+20])
                        Texp_apply
                        expression (src/AtomicBitSet.ml[52,2034+17]..src/AtomicBitSet.ml[52,2034+18])
                          Texp_ident "Stdlib!.="
                        [
                          <arg>
                            Nolabel
                            expression (src/AtomicBitSet.ml[52,2034+5]..src/AtomicBitSet.ml[52,2034+16])
                              Texp_apply
                              expression (src/AtomicBitSet.ml[52,2034+7]..src/AtomicBitSet.ml[52,2034+11])
                                Texp_ident "Stdlib!.land"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[52,2034+5]..src/AtomicBitSet.ml[52,2034+6])
                                    Texp_ident "x/530"
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[52,2034+12]..src/AtomicBitSet.ml[52,2034+16])
                                    Texp_constant Const_int 255
                              ]
                          <arg>
                            Nolabel
                            expression (src/AtomicBitSet.ml[52,2034+19]..src/AtomicBitSet.ml[52,2034+20])
                              Texp_constant Const_int 0
                        ]
                      expression (src/AtomicBitSet.ml[53,2060+4]..src/AtomicBitSet.ml[53,2060+29])
                        Texp_apply
                        expression (src/AtomicBitSet.ml[53,2060+13]..src/AtomicBitSet.ml[53,2060+14])
                          Texp_ident "Stdlib!.+"
                        [
                          <arg>
                            Nolabel
                            expression (src/AtomicBitSet.ml[53,2060+4]..src/AtomicBitSet.ml[53,2060+12])
                              Texp_apply
                              expression (src/AtomicBitSet.ml[53,2060+9]..src/AtomicBitSet.ml[53,2060+10])
                                Texp_ident "Stdlib!.+"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[53,2060+4]..src/AtomicBitSet.ml[53,2060+8])
                                    Texp_ident "accu/529"
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[53,2060+11]..src/AtomicBitSet.ml[53,2060+12])
                                    Texp_constant Const_int 8
                              ]
                          <arg>
                            Nolabel
                            expression (src/AtomicBitSet.ml[53,2060+15]..src/AtomicBitSet.ml[53,2060+29])
                              Texp_apply
                              expression (src/AtomicBitSet.ml[53,2060+15]..src/AtomicBitSet.ml[53,2060+29]) ghost
                                Texp_ident "Stdlib!.Array.get"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[53,2060+15]..src/AtomicBitSet.ml[53,2060+19])
                                    Texp_ident "log2/477"
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[53,2060+21]..src/AtomicBitSet.ml[53,2060+28])
                                    Texp_apply
                                    expression (src/AtomicBitSet.ml[53,2060+23]..src/AtomicBitSet.ml[53,2060+26])
                                      Texp_ident "Stdlib!.lsr"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/AtomicBitSet.ml[53,2060+21]..src/AtomicBitSet.ml[53,2060+22])
                                          Texp_ident "x/530"
                                      <arg>
                                        Nolabel
                                        expression (src/AtomicBitSet.ml[53,2060+27]..src/AtomicBitSet.ml[53,2060+28])
                                          Texp_constant Const_int 8
                                    ]
                              ]
                        ]
                      Some
                        expression (src/AtomicBitSet.ml[55,2097+4]..src/AtomicBitSet.ml[55,2097+19])
                          Texp_apply
                          expression (src/AtomicBitSet.ml[55,2097+9]..src/AtomicBitSet.ml[55,2097+10])
                            Texp_ident "Stdlib!.+"
                          [
                            <arg>
                              Nolabel
                              expression (src/AtomicBitSet.ml[55,2097+4]..src/AtomicBitSet.ml[55,2097+8])
                                Texp_ident "accu/529"
                            <arg>
                              Nolabel
                              expression (src/AtomicBitSet.ml[55,2097+11]..src/AtomicBitSet.ml[55,2097+19])
                                Texp_apply
                                expression (src/AtomicBitSet.ml[55,2097+11]..src/AtomicBitSet.ml[55,2097+19]) ghost
                                  Texp_ident "Stdlib!.Array.get"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/AtomicBitSet.ml[55,2097+11]..src/AtomicBitSet.ml[55,2097+15])
                                      Texp_ident "log2/477"
                                  <arg>
                                    Nolabel
                                    expression (src/AtomicBitSet.ml[55,2097+17]..src/AtomicBitSet.ml[55,2097+18])
                                      Texp_ident "x/530"
                                ]
                          ]
                ]
          ]
    ]
  structure_item (src/AtomicBitSet.ml[57,2118+0]..src/AtomicBitSet.ml[61,2205+16])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[57,2118+4]..src/AtomicBitSet.ml[57,2118+9])
          Tpat_var "tib32/531"
        expression (src/AtomicBitSet.ml[57,2118+10]..src/AtomicBitSet.ml[61,2205+16]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[57,2118+10]..src/AtomicBitSet.ml[57,2118+14])
                Tpat_var "accu/533"
              expression (src/AtomicBitSet.ml[57,2118+15]..src/AtomicBitSet.ml[61,2205+16]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/AtomicBitSet.ml[57,2118+15]..src/AtomicBitSet.ml[57,2118+16])
                      Tpat_var "x/534"
                    expression (src/AtomicBitSet.ml[58,2137+2]..src/AtomicBitSet.ml[61,2205+16])
                      Texp_ifthenelse
                      expression (src/AtomicBitSet.ml[58,2137+5]..src/AtomicBitSet.ml[58,2137+22])
                        Texp_apply
                        expression (src/AtomicBitSet.ml[58,2137+19]..src/AtomicBitSet.ml[58,2137+20])
                          Texp_ident "Stdlib!.="
                        [
                          <arg>
                            Nolabel
                            expression (src/AtomicBitSet.ml[58,2137+5]..src/AtomicBitSet.ml[58,2137+18])
                              Texp_apply
                              expression (src/AtomicBitSet.ml[58,2137+7]..src/AtomicBitSet.ml[58,2137+11])
                                Texp_ident "Stdlib!.land"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[58,2137+5]..src/AtomicBitSet.ml[58,2137+6])
                                    Texp_ident "x/534"
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[58,2137+12]..src/AtomicBitSet.ml[58,2137+18])
                                    Texp_constant Const_int 65535
                              ]
                          <arg>
                            Nolabel
                            expression (src/AtomicBitSet.ml[58,2137+21]..src/AtomicBitSet.ml[58,2137+22])
                              Texp_constant Const_int 0
                        ]
                      expression (src/AtomicBitSet.ml[59,2165+4]..src/AtomicBitSet.ml[59,2165+32])
                        Texp_apply
                        expression (src/AtomicBitSet.ml[59,2165+4]..src/AtomicBitSet.ml[59,2165+9])
                          Texp_ident "tib16/527"
                        [
                          <arg>
                            Nolabel
                            expression (src/AtomicBitSet.ml[59,2165+10]..src/AtomicBitSet.ml[59,2165+21])
                              Texp_apply
                              expression (src/AtomicBitSet.ml[59,2165+16]..src/AtomicBitSet.ml[59,2165+17])
                                Texp_ident "Stdlib!.+"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[59,2165+11]..src/AtomicBitSet.ml[59,2165+15])
                                    Texp_ident "accu/533"
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[59,2165+18]..src/AtomicBitSet.ml[59,2165+20])
                                    Texp_constant Const_int 16
                              ]
                          <arg>
                            Nolabel
                            expression (src/AtomicBitSet.ml[59,2165+22]..src/AtomicBitSet.ml[59,2165+32])
                              Texp_apply
                              expression (src/AtomicBitSet.ml[59,2165+25]..src/AtomicBitSet.ml[59,2165+28])
                                Texp_ident "Stdlib!.lsr"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[59,2165+23]..src/AtomicBitSet.ml[59,2165+24])
                                    Texp_ident "x/534"
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[59,2165+29]..src/AtomicBitSet.ml[59,2165+31])
                                    Texp_constant Const_int 16
                              ]
                        ]
                      Some
                        expression (src/AtomicBitSet.ml[61,2205+4]..src/AtomicBitSet.ml[61,2205+16])
                          Texp_apply
                          expression (src/AtomicBitSet.ml[61,2205+4]..src/AtomicBitSet.ml[61,2205+9])
                            Texp_ident "tib16/527"
                          [
                            <arg>
                              Nolabel
                              expression (src/AtomicBitSet.ml[61,2205+10]..src/AtomicBitSet.ml[61,2205+14])
                                Texp_ident "accu/533"
                            <arg>
                              Nolabel
                              expression (src/AtomicBitSet.ml[61,2205+15]..src/AtomicBitSet.ml[61,2205+16])
                                Texp_ident "x/534"
                          ]
                ]
          ]
    ]
  structure_item (src/AtomicBitSet.ml[63,2223+0]..src/AtomicBitSet.ml[64,2238+28])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[63,2223+4]..src/AtomicBitSet.ml[63,2223+12])
          Tpat_var "ffffffff/535"
        expression (src/AtomicBitSet.ml[64,2238+2]..src/AtomicBitSet.ml[64,2238+28])
          Texp_apply
          expression (src/AtomicBitSet.ml[64,2238+18]..src/AtomicBitSet.ml[64,2238+21])
            Texp_ident "Stdlib!.lor"
          [
            <arg>
              Nolabel
              expression (src/AtomicBitSet.ml[64,2238+2]..src/AtomicBitSet.ml[64,2238+17])
                Texp_apply
                expression (src/AtomicBitSet.ml[64,2238+10]..src/AtomicBitSet.ml[64,2238+13])
                  Texp_ident "Stdlib!.lsl"
                [
                  <arg>
                    Nolabel
                    expression (src/AtomicBitSet.ml[64,2238+3]..src/AtomicBitSet.ml[64,2238+9])
                      Texp_constant Const_int 65535
                  <arg>
                    Nolabel
                    expression (src/AtomicBitSet.ml[64,2238+14]..src/AtomicBitSet.ml[64,2238+16])
                      Texp_constant Const_int 16
                ]
            <arg>
              Nolabel
              expression (src/AtomicBitSet.ml[64,2238+22]..src/AtomicBitSet.ml[64,2238+28])
                Texp_constant Const_int 65535
          ]
    ]
  structure_item (src/AtomicBitSet.ml[68,2397+0]..src/AtomicBitSet.ml[72,2472+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[68,2397+4]..src/AtomicBitSet.ml[68,2397+9])
          Tpat_var "tib64/536"
        expression (src/AtomicBitSet.ml[68,2397+10]..src/AtomicBitSet.ml[72,2472+13]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[68,2397+10]..src/AtomicBitSet.ml[68,2397+11])
                Tpat_var "x/538"
              expression (src/AtomicBitSet.ml[69,2411+2]..src/AtomicBitSet.ml[72,2472+13])
                Texp_ifthenelse
                expression (src/AtomicBitSet.ml[69,2411+5]..src/AtomicBitSet.ml[69,2411+24])
                  Texp_apply
                  expression (src/AtomicBitSet.ml[69,2411+21]..src/AtomicBitSet.ml[69,2411+22])
                    Texp_ident "Stdlib!.="
                  [
                    <arg>
                      Nolabel
                      expression (src/AtomicBitSet.ml[69,2411+5]..src/AtomicBitSet.ml[69,2411+20])
                        Texp_apply
                        expression (src/AtomicBitSet.ml[69,2411+7]..src/AtomicBitSet.ml[69,2411+11])
                          Texp_ident "Stdlib!.land"
                        [
                          <arg>
                            Nolabel
                            expression (src/AtomicBitSet.ml[69,2411+5]..src/AtomicBitSet.ml[69,2411+6])
                              Texp_ident "x/538"
                          <arg>
                            Nolabel
                            expression (src/AtomicBitSet.ml[69,2411+12]..src/AtomicBitSet.ml[69,2411+20])
                              Texp_ident "ffffffff/535"
                        ]
                    <arg>
                      Nolabel
                      expression (src/AtomicBitSet.ml[69,2411+23]..src/AtomicBitSet.ml[69,2411+24])
                        Texp_constant Const_int 0
                  ]
                expression (src/AtomicBitSet.ml[70,2441+4]..src/AtomicBitSet.ml[70,2441+23])
                  Texp_apply
                  expression (src/AtomicBitSet.ml[70,2441+4]..src/AtomicBitSet.ml[70,2441+9])
                    Texp_ident "tib32/531"
                  [
                    <arg>
                      Nolabel
                      expression (src/AtomicBitSet.ml[70,2441+10]..src/AtomicBitSet.ml[70,2441+12])
                        Texp_constant Const_int 32
                    <arg>
                      Nolabel
                      expression (src/AtomicBitSet.ml[70,2441+13]..src/AtomicBitSet.ml[70,2441+23])
                        Texp_apply
                        expression (src/AtomicBitSet.ml[70,2441+16]..src/AtomicBitSet.ml[70,2441+19])
                          Texp_ident "Stdlib!.lsr"
                        [
                          <arg>
                            Nolabel
                            expression (src/AtomicBitSet.ml[70,2441+14]..src/AtomicBitSet.ml[70,2441+15])
                              Texp_ident "x/538"
                          <arg>
                            Nolabel
                            expression (src/AtomicBitSet.ml[70,2441+20]..src/AtomicBitSet.ml[70,2441+22])
                              Texp_constant Const_int 32
                        ]
                  ]
                Some
                  expression (src/AtomicBitSet.ml[72,2472+4]..src/AtomicBitSet.ml[72,2472+13])
                    Texp_apply
                    expression (src/AtomicBitSet.ml[72,2472+4]..src/AtomicBitSet.ml[72,2472+9])
                      Texp_ident "tib32/531"
                    [
                      <arg>
                        Nolabel
                        expression (src/AtomicBitSet.ml[72,2472+10]..src/AtomicBitSet.ml[72,2472+11])
                          Texp_constant Const_int 0
                      <arg>
                        Nolabel
                        expression (src/AtomicBitSet.ml[72,2472+12]..src/AtomicBitSet.ml[72,2472+13])
                          Texp_ident "x/538"
                    ]
          ]
    ]
  structure_item (src/AtomicBitSet.ml[74,2487+0]..src/AtomicBitSet.ml[78,2564+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[74,2487+4]..src/AtomicBitSet.ml[74,2487+7])
          Tpat_var "tib/539"
        expression (src/AtomicBitSet.ml[74,2487+8]..src/AtomicBitSet.ml[78,2564+21]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[74,2487+8]..src/AtomicBitSet.ml[74,2487+9])
                Tpat_var "x/541"
              expression (src/AtomicBitSet.ml[75,2499+2]..src/AtomicBitSet.ml[78,2564+21])
                Texp_match
                expression (src/AtomicBitSet.ml[75,2499+8]..src/AtomicBitSet.ml[75,2499+21])
                  Texp_ident "Stdlib!.Sys.word_size"
                [
                  <case>
                    pattern (src/AtomicBitSet.ml[76,2526+4]..src/AtomicBitSet.ml[76,2526+6])
                      Tpat_value
                      pattern (src/AtomicBitSet.ml[76,2526+4]..src/AtomicBitSet.ml[76,2526+6])
                        Tpat_constant Const_int 32
                    expression (src/AtomicBitSet.ml[76,2526+10]..src/AtomicBitSet.ml[76,2526+19])
                      Texp_apply
                      expression (src/AtomicBitSet.ml[76,2526+10]..src/AtomicBitSet.ml[76,2526+15])
                        Texp_ident "tib32/531"
                      [
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[76,2526+16]..src/AtomicBitSet.ml[76,2526+17])
                            Texp_constant Const_int 0
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[76,2526+18]..src/AtomicBitSet.ml[76,2526+19])
                            Texp_ident "x/541"
                      ]
                  <case>
                    pattern (src/AtomicBitSet.ml[77,2546+4]..src/AtomicBitSet.ml[77,2546+6])
                      Tpat_value
                      pattern (src/AtomicBitSet.ml[77,2546+4]..src/AtomicBitSet.ml[77,2546+6])
                        Tpat_constant Const_int 64
                    expression (src/AtomicBitSet.ml[77,2546+10]..src/AtomicBitSet.ml[77,2546+17])
                      Texp_apply
                      expression (src/AtomicBitSet.ml[77,2546+10]..src/AtomicBitSet.ml[77,2546+15])
                        Texp_ident "tib64/536"
                      [
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[77,2546+16]..src/AtomicBitSet.ml[77,2546+17])
                            Texp_ident "x/541"
                      ]
                  <case>
                    pattern (src/AtomicBitSet.ml[78,2564+4]..src/AtomicBitSet.ml[78,2564+5])
                      Tpat_value
                      pattern (src/AtomicBitSet.ml[78,2564+4]..src/AtomicBitSet.ml[78,2564+5])
                        Tpat_any
                    expression (src/AtomicBitSet.ml[78,2564+9]..src/AtomicBitSet.ml[78,2564+21])
                      Texp_assert                      expression (src/AtomicBitSet.ml[78,2564+16]..src/AtomicBitSet.ml[78,2564+21])
                        Texp_construct "false"
                        []
                ]
          ]
    ]
  structure_item (src/AtomicBitSet.ml[80,2587+0]..src/AtomicBitSet.ml[82,2651+57])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[80,2587+4]..src/AtomicBitSet.ml[80,2587+6])
          Tpat_construct "()"
          []
          None
        expression (src/AtomicBitSet.ml[82,2651+2]..src/AtomicBitSet.ml[82,2651+57])
          Texp_for "i/542" Up
          expression (src/AtomicBitSet.ml[82,2651+10]..src/AtomicBitSet.ml[82,2651+11])
            Texp_constant Const_int 0
          expression (src/AtomicBitSet.ml[82,2651+15]..src/AtomicBitSet.ml[82,2651+24])
            Texp_apply
            expression (src/AtomicBitSet.ml[82,2651+21]..src/AtomicBitSet.ml[82,2651+22])
              Texp_ident "Stdlib!.-"
            [
              <arg>
                Nolabel
                expression (src/AtomicBitSet.ml[82,2651+15]..src/AtomicBitSet.ml[82,2651+20])
                  Texp_ident "bound/399"
              <arg>
                Nolabel
                expression (src/AtomicBitSet.ml[82,2651+23]..src/AtomicBitSet.ml[82,2651+24])
                  Texp_constant Const_int 1
            ]
          expression (src/AtomicBitSet.ml[82,2651+28]..src/AtomicBitSet.ml[82,2651+52])
            Texp_assert            expression (src/AtomicBitSet.ml[82,2651+35]..src/AtomicBitSet.ml[82,2651+52])
              Texp_apply
              expression (src/AtomicBitSet.ml[82,2651+48]..src/AtomicBitSet.ml[82,2651+49])
                Texp_ident "Stdlib!.="
              [
                <arg>
                  Nolabel
                  expression (src/AtomicBitSet.ml[82,2651+36]..src/AtomicBitSet.ml[82,2651+47])
                    Texp_apply
                    expression (src/AtomicBitSet.ml[82,2651+36]..src/AtomicBitSet.ml[82,2651+39])
                      Texp_ident "tib/539"
                    [
                      <arg>
                        Nolabel
                        expression (src/AtomicBitSet.ml[82,2651+40]..src/AtomicBitSet.ml[82,2651+47])
                          Texp_apply
                          expression (src/AtomicBitSet.ml[82,2651+41]..src/AtomicBitSet.ml[82,2651+44])
                            Texp_ident "bit/474"
                          [
                            <arg>
                              Nolabel
                              expression (src/AtomicBitSet.ml[82,2651+45]..src/AtomicBitSet.ml[82,2651+46])
                                Texp_ident "i/542"
                          ]
                    ]
                <arg>
                  Nolabel
                  expression (src/AtomicBitSet.ml[82,2651+50]..src/AtomicBitSet.ml[82,2651+51])
                    Texp_ident "i/542"
              ]
    ]
  structure_item (src/AtomicBitSet.ml[91,2957+0]..src/AtomicBitSet.ml[91,2957+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[91,2957+4]..src/AtomicBitSet.ml[91,2957+6])
          Tpat_var "b0/543"
        expression (src/AtomicBitSet.ml[91,2957+9]..src/AtomicBitSet.ml[91,2957+19])
          Texp_constant Const_int 1431655765
    ]
  structure_item (src/AtomicBitSet.ml[92,2977+0]..src/AtomicBitSet.ml[92,2977+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[92,2977+4]..src/AtomicBitSet.ml[92,2977+6])
          Tpat_var "b1/544"
        expression (src/AtomicBitSet.ml[92,2977+9]..src/AtomicBitSet.ml[92,2977+19])
          Texp_constant Const_int 858993459
    ]
  structure_item (src/AtomicBitSet.ml[93,2997+0]..src/AtomicBitSet.ml[93,2997+18])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[93,2997+4]..src/AtomicBitSet.ml[93,2997+6])
          Tpat_var "b2/545"
        expression (src/AtomicBitSet.ml[93,2997+9]..src/AtomicBitSet.ml[93,2997+18])
          Texp_constant Const_int 252645135
    ]
  structure_item (src/AtomicBitSet.ml[95,3017+0]..src/AtomicBitSet.ml[105,3489+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[95,3017+4]..src/AtomicBitSet.ml[95,3017+9])
          Tpat_var "pop32/546"
        expression (src/AtomicBitSet.ml[95,3017+10]..src/AtomicBitSet.ml[105,3489+13]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[95,3017+10]..src/AtomicBitSet.ml[95,3017+11])
                Tpat_var "x/548"
              expression (src/AtomicBitSet.ml[98,3167+2]..src/AtomicBitSet.ml[105,3489+13])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/AtomicBitSet.ml[98,3167+6]..src/AtomicBitSet.ml[98,3167+7])
                      Tpat_var "x/549"
                    expression (src/AtomicBitSet.ml[98,3167+10]..src/AtomicBitSet.ml[98,3167+39])
                      Texp_apply
                      expression (src/AtomicBitSet.ml[98,3167+20]..src/AtomicBitSet.ml[98,3167+21])
                        Texp_ident "Stdlib!.-"
                      [
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[98,3167+10]..src/AtomicBitSet.ml[98,3167+11])
                            Texp_ident "x/548"
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[98,3167+22]..src/AtomicBitSet.ml[98,3167+39])
                            Texp_apply
                            expression (src/AtomicBitSet.ml[98,3167+32]..src/AtomicBitSet.ml[98,3167+36])
                              Texp_ident "Stdlib!.land"
                            [
                              <arg>
                                Nolabel
                                expression (src/AtomicBitSet.ml[98,3167+22]..src/AtomicBitSet.ml[98,3167+31])
                                  Texp_apply
                                  expression (src/AtomicBitSet.ml[98,3167+25]..src/AtomicBitSet.ml[98,3167+28])
                                    Texp_ident "Stdlib!.lsr"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/AtomicBitSet.ml[98,3167+23]..src/AtomicBitSet.ml[98,3167+24])
                                        Texp_ident "x/548"
                                    <arg>
                                      Nolabel
                                      expression (src/AtomicBitSet.ml[98,3167+29]..src/AtomicBitSet.ml[98,3167+30])
                                        Texp_constant Const_int 1
                                  ]
                              <arg>
                                Nolabel
                                expression (src/AtomicBitSet.ml[98,3167+37]..src/AtomicBitSet.ml[98,3167+39])
                                  Texp_ident "b0/543"
                            ]
                      ]
                ]
                expression (src/AtomicBitSet.ml[99,3210+2]..src/AtomicBitSet.ml[105,3489+13])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (src/AtomicBitSet.ml[99,3210+6]..src/AtomicBitSet.ml[99,3210+7])
                        Tpat_var "x/550"
                      expression (src/AtomicBitSet.ml[99,3210+10]..src/AtomicBitSet.ml[99,3210+39])
                        Texp_apply
                        expression (src/AtomicBitSet.ml[99,3210+20]..src/AtomicBitSet.ml[99,3210+21])
                          Texp_ident "Stdlib!.+"
                        [
                          <arg>
                            Nolabel
                            expression (src/AtomicBitSet.ml[99,3210+10]..src/AtomicBitSet.ml[99,3210+19])
                              Texp_apply
                              expression (src/AtomicBitSet.ml[99,3210+12]..src/AtomicBitSet.ml[99,3210+16])
                                Texp_ident "Stdlib!.land"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[99,3210+10]..src/AtomicBitSet.ml[99,3210+11])
                                    Texp_ident "x/549"
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[99,3210+17]..src/AtomicBitSet.ml[99,3210+19])
                                    Texp_ident "b1/544"
                              ]
                          <arg>
                            Nolabel
                            expression (src/AtomicBitSet.ml[99,3210+22]..src/AtomicBitSet.ml[99,3210+39])
                              Texp_apply
                              expression (src/AtomicBitSet.ml[99,3210+32]..src/AtomicBitSet.ml[99,3210+36])
                                Texp_ident "Stdlib!.land"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[99,3210+22]..src/AtomicBitSet.ml[99,3210+31])
                                    Texp_apply
                                    expression (src/AtomicBitSet.ml[99,3210+25]..src/AtomicBitSet.ml[99,3210+28])
                                      Texp_ident "Stdlib!.lsr"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/AtomicBitSet.ml[99,3210+23]..src/AtomicBitSet.ml[99,3210+24])
                                          Texp_ident "x/549"
                                      <arg>
                                        Nolabel
                                        expression (src/AtomicBitSet.ml[99,3210+29]..src/AtomicBitSet.ml[99,3210+30])
                                          Texp_constant Const_int 2
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[99,3210+37]..src/AtomicBitSet.ml[99,3210+39])
                                    Texp_ident "b1/544"
                              ]
                        ]
                  ]
                  expression (src/AtomicBitSet.ml[100,3253+2]..src/AtomicBitSet.ml[105,3489+13])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/AtomicBitSet.ml[100,3253+6]..src/AtomicBitSet.ml[100,3253+7])
                          Tpat_var "x/551"
                        expression (src/AtomicBitSet.ml[100,3253+10]..src/AtomicBitSet.ml[100,3253+39])
                          Texp_apply
                          expression (src/AtomicBitSet.ml[100,3253+20]..src/AtomicBitSet.ml[100,3253+21])
                            Texp_ident "Stdlib!.+"
                          [
                            <arg>
                              Nolabel
                              expression (src/AtomicBitSet.ml[100,3253+10]..src/AtomicBitSet.ml[100,3253+19])
                                Texp_apply
                                expression (src/AtomicBitSet.ml[100,3253+12]..src/AtomicBitSet.ml[100,3253+16])
                                  Texp_ident "Stdlib!.land"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/AtomicBitSet.ml[100,3253+10]..src/AtomicBitSet.ml[100,3253+11])
                                      Texp_ident "x/550"
                                  <arg>
                                    Nolabel
                                    expression (src/AtomicBitSet.ml[100,3253+17]..src/AtomicBitSet.ml[100,3253+19])
                                      Texp_ident "b2/545"
                                ]
                            <arg>
                              Nolabel
                              expression (src/AtomicBitSet.ml[100,3253+22]..src/AtomicBitSet.ml[100,3253+39])
                                Texp_apply
                                expression (src/AtomicBitSet.ml[100,3253+32]..src/AtomicBitSet.ml[100,3253+36])
                                  Texp_ident "Stdlib!.land"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/AtomicBitSet.ml[100,3253+22]..src/AtomicBitSet.ml[100,3253+31])
                                      Texp_apply
                                      expression (src/AtomicBitSet.ml[100,3253+25]..src/AtomicBitSet.ml[100,3253+28])
                                        Texp_ident "Stdlib!.lsr"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/AtomicBitSet.ml[100,3253+23]..src/AtomicBitSet.ml[100,3253+24])
                                            Texp_ident "x/550"
                                        <arg>
                                          Nolabel
                                          expression (src/AtomicBitSet.ml[100,3253+29]..src/AtomicBitSet.ml[100,3253+30])
                                            Texp_constant Const_int 4
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/AtomicBitSet.ml[100,3253+37]..src/AtomicBitSet.ml[100,3253+39])
                                      Texp_ident "b2/545"
                                ]
                          ]
                    ]
                    expression (src/AtomicBitSet.ml[103,3438+2]..src/AtomicBitSet.ml[105,3489+13])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/AtomicBitSet.ml[103,3438+6]..src/AtomicBitSet.ml[103,3438+7])
                            Tpat_var "x/552"
                          expression (src/AtomicBitSet.ml[103,3438+10]..src/AtomicBitSet.ml[103,3438+21])
                            Texp_apply
                            expression (src/AtomicBitSet.ml[103,3438+12]..src/AtomicBitSet.ml[103,3438+13])
                              Texp_ident "Stdlib!.+"
                            [
                              <arg>
                                Nolabel
                                expression (src/AtomicBitSet.ml[103,3438+10]..src/AtomicBitSet.ml[103,3438+11])
                                  Texp_ident "x/551"
                              <arg>
                                Nolabel
                                expression (src/AtomicBitSet.ml[103,3438+14]..src/AtomicBitSet.ml[103,3438+21])
                                  Texp_apply
                                  expression (src/AtomicBitSet.ml[103,3438+16]..src/AtomicBitSet.ml[103,3438+19])
                                    Texp_ident "Stdlib!.lsr"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/AtomicBitSet.ml[103,3438+14]..src/AtomicBitSet.ml[103,3438+15])
                                        Texp_ident "x/551"
                                    <arg>
                                      Nolabel
                                      expression (src/AtomicBitSet.ml[103,3438+20]..src/AtomicBitSet.ml[103,3438+21])
                                        Texp_constant Const_int 8
                                  ]
                            ]
                      ]
                      expression (src/AtomicBitSet.ml[104,3463+2]..src/AtomicBitSet.ml[105,3489+13])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/AtomicBitSet.ml[104,3463+6]..src/AtomicBitSet.ml[104,3463+7])
                              Tpat_var "x/553"
                            expression (src/AtomicBitSet.ml[104,3463+10]..src/AtomicBitSet.ml[104,3463+22])
                              Texp_apply
                              expression (src/AtomicBitSet.ml[104,3463+12]..src/AtomicBitSet.ml[104,3463+13])
                                Texp_ident "Stdlib!.+"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[104,3463+10]..src/AtomicBitSet.ml[104,3463+11])
                                    Texp_ident "x/552"
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[104,3463+14]..src/AtomicBitSet.ml[104,3463+22])
                                    Texp_apply
                                    expression (src/AtomicBitSet.ml[104,3463+16]..src/AtomicBitSet.ml[104,3463+19])
                                      Texp_ident "Stdlib!.lsr"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/AtomicBitSet.ml[104,3463+14]..src/AtomicBitSet.ml[104,3463+15])
                                          Texp_ident "x/552"
                                      <arg>
                                        Nolabel
                                        expression (src/AtomicBitSet.ml[104,3463+20]..src/AtomicBitSet.ml[104,3463+22])
                                          Texp_constant Const_int 16
                                    ]
                              ]
                        ]
                        expression (src/AtomicBitSet.ml[105,3489+2]..src/AtomicBitSet.ml[105,3489+13])
                          Texp_apply
                          expression (src/AtomicBitSet.ml[105,3489+4]..src/AtomicBitSet.ml[105,3489+8])
                            Texp_ident "Stdlib!.land"
                          [
                            <arg>
                              Nolabel
                              expression (src/AtomicBitSet.ml[105,3489+2]..src/AtomicBitSet.ml[105,3489+3])
                                Texp_ident "x/553"
                            <arg>
                              Nolabel
                              expression (src/AtomicBitSet.ml[105,3489+9]..src/AtomicBitSet.ml[105,3489+13])
                                Texp_constant Const_int 255
                          ]
          ]
    ]
  structure_item (src/AtomicBitSet.ml[107,3504+0]..src/AtomicBitSet.ml[108,3518+28])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[107,3504+4]..src/AtomicBitSet.ml[107,3504+9])
          Tpat_var "pop64/554"
        expression (src/AtomicBitSet.ml[107,3504+10]..src/AtomicBitSet.ml[108,3518+28]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[107,3504+10]..src/AtomicBitSet.ml[107,3504+11])
                Tpat_var "x/556"
              expression (src/AtomicBitSet.ml[108,3518+2]..src/AtomicBitSet.ml[108,3518+28])
                Texp_apply
                expression (src/AtomicBitSet.ml[108,3518+10]..src/AtomicBitSet.ml[108,3518+11])
                  Texp_ident "Stdlib!.+"
                [
                  <arg>
                    Nolabel
                    expression (src/AtomicBitSet.ml[108,3518+2]..src/AtomicBitSet.ml[108,3518+9])
                      Texp_apply
                      expression (src/AtomicBitSet.ml[108,3518+2]..src/AtomicBitSet.ml[108,3518+7])
                        Texp_ident "pop32/546"
                      [
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[108,3518+8]..src/AtomicBitSet.ml[108,3518+9])
                            Texp_ident "x/556"
                      ]
                  <arg>
                    Nolabel
                    expression (src/AtomicBitSet.ml[108,3518+12]..src/AtomicBitSet.ml[108,3518+28])
                      Texp_apply
                      expression (src/AtomicBitSet.ml[108,3518+12]..src/AtomicBitSet.ml[108,3518+17])
                        Texp_ident "pop32/546"
                      [
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[108,3518+18]..src/AtomicBitSet.ml[108,3518+28])
                            Texp_apply
                            expression (src/AtomicBitSet.ml[108,3518+21]..src/AtomicBitSet.ml[108,3518+24])
                              Texp_ident "Stdlib!.lsr"
                            [
                              <arg>
                                Nolabel
                                expression (src/AtomicBitSet.ml[108,3518+19]..src/AtomicBitSet.ml[108,3518+20])
                                  Texp_ident "x/556"
                              <arg>
                                Nolabel
                                expression (src/AtomicBitSet.ml[108,3518+25]..src/AtomicBitSet.ml[108,3518+27])
                                  Texp_constant Const_int 32
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/AtomicBitSet.ml[112,3684+0]..src/AtomicBitSet.ml[116,3759+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[112,3684+4]..src/AtomicBitSet.ml[112,3684+7])
          Tpat_var "pop/557"
        expression (src/AtomicBitSet.ml[112,3684+8]..src/AtomicBitSet.ml[116,3759+21]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[112,3684+8]..src/AtomicBitSet.ml[112,3684+9])
                Tpat_var "x/559"
              expression (src/AtomicBitSet.ml[113,3696+2]..src/AtomicBitSet.ml[116,3759+21])
                Texp_match
                expression (src/AtomicBitSet.ml[113,3696+8]..src/AtomicBitSet.ml[113,3696+21])
                  Texp_ident "Stdlib!.Sys.word_size"
                [
                  <case>
                    pattern (src/AtomicBitSet.ml[114,3723+4]..src/AtomicBitSet.ml[114,3723+6])
                      Tpat_value
                      pattern (src/AtomicBitSet.ml[114,3723+4]..src/AtomicBitSet.ml[114,3723+6])
                        Tpat_constant Const_int 32
                    expression (src/AtomicBitSet.ml[114,3723+10]..src/AtomicBitSet.ml[114,3723+17])
                      Texp_apply
                      expression (src/AtomicBitSet.ml[114,3723+10]..src/AtomicBitSet.ml[114,3723+15])
                        Texp_ident "pop32/546"
                      [
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[114,3723+16]..src/AtomicBitSet.ml[114,3723+17])
                            Texp_ident "x/559"
                      ]
                  <case>
                    pattern (src/AtomicBitSet.ml[115,3741+4]..src/AtomicBitSet.ml[115,3741+6])
                      Tpat_value
                      pattern (src/AtomicBitSet.ml[115,3741+4]..src/AtomicBitSet.ml[115,3741+6])
                        Tpat_constant Const_int 64
                    expression (src/AtomicBitSet.ml[115,3741+10]..src/AtomicBitSet.ml[115,3741+17])
                      Texp_apply
                      expression (src/AtomicBitSet.ml[115,3741+10]..src/AtomicBitSet.ml[115,3741+15])
                        Texp_ident "pop64/554"
                      [
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[115,3741+16]..src/AtomicBitSet.ml[115,3741+17])
                            Texp_ident "x/559"
                      ]
                  <case>
                    pattern (src/AtomicBitSet.ml[116,3759+4]..src/AtomicBitSet.ml[116,3759+5])
                      Tpat_value
                      pattern (src/AtomicBitSet.ml[116,3759+4]..src/AtomicBitSet.ml[116,3759+5])
                        Tpat_any
                    expression (src/AtomicBitSet.ml[116,3759+9]..src/AtomicBitSet.ml[116,3759+21])
                      Texp_assert                      expression (src/AtomicBitSet.ml[116,3759+16]..src/AtomicBitSet.ml[116,3759+21])
                        Texp_construct "false"
                        []
                ]
          ]
    ]
  structure_item (src/AtomicBitSet.ml[122,3883+0]..src/AtomicBitSet.ml[123,3895+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[122,3883+4]..src/AtomicBitSet.ml[122,3883+9])
          Tpat_var "empty/560"
        expression (src/AtomicBitSet.ml[123,3895+2]..src/AtomicBitSet.ml[123,3895+3])
          Texp_constant Const_int 0
    ]
  structure_item (src/AtomicBitSet.ml[125,3900+0]..src/AtomicBitSet.ml[126,3917+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[125,3900+4]..src/AtomicBitSet.ml[125,3900+12])
          Tpat_var "is_empty/561"
        expression (src/AtomicBitSet.ml[125,3900+13]..src/AtomicBitSet.ml[126,3917+7]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[125,3900+13]..src/AtomicBitSet.ml[125,3900+14])
                Tpat_var "s/563"
              expression (src/AtomicBitSet.ml[126,3917+2]..src/AtomicBitSet.ml[126,3917+7])
                Texp_apply
                expression (src/AtomicBitSet.ml[126,3917+4]..src/AtomicBitSet.ml[126,3917+5])
                  Texp_ident "Stdlib!.="
                [
                  <arg>
                    Nolabel
                    expression (src/AtomicBitSet.ml[126,3917+2]..src/AtomicBitSet.ml[126,3917+3])
                      Texp_ident "s/563"
                  <arg>
                    Nolabel
                    expression (src/AtomicBitSet.ml[126,3917+6]..src/AtomicBitSet.ml[126,3917+7])
                      Texp_constant Const_int 0
                ]
          ]
    ]
  structure_item (src/AtomicBitSet.ml[128,3926+0]..src/AtomicBitSet.ml[129,3942+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[128,3926+4]..src/AtomicBitSet.ml[128,3926+13])
          Tpat_var "singleton/564"
        expression (src/AtomicBitSet.ml[129,3942+2]..src/AtomicBitSet.ml[129,3942+5])
          Texp_ident "bit/474"
    ]
  structure_item (src/AtomicBitSet.ml[131,3949+0]..src/AtomicBitSet.ml[132,3963+15])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[131,3949+4]..src/AtomicBitSet.ml[131,3949+7])
          Tpat_var "add/565"
        expression (src/AtomicBitSet.ml[131,3949+8]..src/AtomicBitSet.ml[132,3963+15]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[131,3949+8]..src/AtomicBitSet.ml[131,3949+9])
                Tpat_var "i/567"
              expression (src/AtomicBitSet.ml[131,3949+10]..src/AtomicBitSet.ml[132,3963+15]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/AtomicBitSet.ml[131,3949+10]..src/AtomicBitSet.ml[131,3949+11])
                      Tpat_var "s/568"
                    expression (src/AtomicBitSet.ml[132,3963+2]..src/AtomicBitSet.ml[132,3963+15])
                      Texp_apply
                      expression (src/AtomicBitSet.ml[132,3963+10]..src/AtomicBitSet.ml[132,3963+13])
                        Texp_ident "Stdlib!.lor"
                      [
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[132,3963+2]..src/AtomicBitSet.ml[132,3963+9])
                            Texp_apply
                            expression (src/AtomicBitSet.ml[132,3963+3]..src/AtomicBitSet.ml[132,3963+6])
                              Texp_ident "bit/474"
                            [
                              <arg>
                                Nolabel
                                expression (src/AtomicBitSet.ml[132,3963+7]..src/AtomicBitSet.ml[132,3963+8])
                                  Texp_ident "i/567"
                            ]
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[132,3963+14]..src/AtomicBitSet.ml[132,3963+15])
                            Texp_ident "s/568"
                      ]
                ]
          ]
    ]
  structure_item (src/AtomicBitSet.ml[134,3980+0]..src/AtomicBitSet.ml[135,3997+23])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[134,3980+4]..src/AtomicBitSet.ml[134,3980+10])
          Tpat_var "remove/569"
        expression (src/AtomicBitSet.ml[134,3980+11]..src/AtomicBitSet.ml[135,3997+23]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[134,3980+11]..src/AtomicBitSet.ml[134,3980+12])
                Tpat_var "i/571"
              expression (src/AtomicBitSet.ml[134,3980+13]..src/AtomicBitSet.ml[135,3997+23]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/AtomicBitSet.ml[134,3980+13]..src/AtomicBitSet.ml[134,3980+14])
                      Tpat_var "s/572"
                    expression (src/AtomicBitSet.ml[135,3997+2]..src/AtomicBitSet.ml[135,3997+23])
                      Texp_apply
                      expression (src/AtomicBitSet.ml[135,3997+17]..src/AtomicBitSet.ml[135,3997+21])
                        Texp_ident "Stdlib!.land"
                      [
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[135,3997+2]..src/AtomicBitSet.ml[135,3997+16])
                            Texp_apply
                            expression (src/AtomicBitSet.ml[135,3997+3]..src/AtomicBitSet.ml[135,3997+7])
                              Texp_ident "Stdlib!.lnot"
                            [
                              <arg>
                                Nolabel
                                expression (src/AtomicBitSet.ml[135,3997+8]..src/AtomicBitSet.ml[135,3997+15])
                                  Texp_apply
                                  expression (src/AtomicBitSet.ml[135,3997+9]..src/AtomicBitSet.ml[135,3997+12])
                                    Texp_ident "bit/474"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/AtomicBitSet.ml[135,3997+13]..src/AtomicBitSet.ml[135,3997+14])
                                        Texp_ident "i/571"
                                  ]
                            ]
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[135,3997+22]..src/AtomicBitSet.ml[135,3997+23])
                            Texp_ident "s/572"
                      ]
                ]
          ]
    ]
  structure_item (src/AtomicBitSet.ml[137,4022+0]..src/AtomicBitSet.ml[144,4198+29])
    Tstr_value Rec
    [
      <def>
        pattern (src/AtomicBitSet.ml[137,4022+8]..src/AtomicBitSet.ml[137,4022+18])
          Tpat_var "fold_delta/573"
        expression (src/AtomicBitSet.ml[137,4022+19]..src/AtomicBitSet.ml[144,4198+29]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[137,4022+19]..src/AtomicBitSet.ml[137,4022+24])
                Tpat_var "delta/574"
              expression (src/AtomicBitSet.ml[137,4022+25]..src/AtomicBitSet.ml[144,4198+29]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/AtomicBitSet.ml[137,4022+25]..src/AtomicBitSet.ml[137,4022+26])
                      Tpat_var "f/575"
                    expression (src/AtomicBitSet.ml[137,4022+27]..src/AtomicBitSet.ml[144,4198+29]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/AtomicBitSet.ml[137,4022+27]..src/AtomicBitSet.ml[137,4022+28])
                            Tpat_var "s/576"
                          expression (src/AtomicBitSet.ml[137,4022+29]..src/AtomicBitSet.ml[144,4198+29]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/AtomicBitSet.ml[137,4022+29]..src/AtomicBitSet.ml[137,4022+33])
                                  Tpat_var "accu/577"
                                expression (src/AtomicBitSet.ml[138,4058+2]..src/AtomicBitSet.ml[144,4198+29])
                                  Texp_ifthenelse
                                  expression (src/AtomicBitSet.ml[138,4058+5]..src/AtomicBitSet.ml[138,4058+10])
                                    Texp_apply
                                    expression (src/AtomicBitSet.ml[138,4058+7]..src/AtomicBitSet.ml[138,4058+8])
                                      Texp_ident "Stdlib!.="
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/AtomicBitSet.ml[138,4058+5]..src/AtomicBitSet.ml[138,4058+6])
                                          Texp_ident "s/576"
                                      <arg>
                                        Nolabel
                                        expression (src/AtomicBitSet.ml[138,4058+9]..src/AtomicBitSet.ml[138,4058+10])
                                          Texp_constant Const_int 0
                                    ]
                                  expression (src/AtomicBitSet.ml[139,4074+4]..src/AtomicBitSet.ml[139,4074+8])
                                    Texp_ident "accu/577"
                                  Some
                                    expression (src/AtomicBitSet.ml[141,4090+4]..src/AtomicBitSet.ml[144,4198+29])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/AtomicBitSet.ml[141,4090+8]..src/AtomicBitSet.ml[141,4090+9])
                                            Tpat_var "x/578"
                                          expression (src/AtomicBitSet.ml[141,4090+12]..src/AtomicBitSet.ml[141,4090+23])
                                            Texp_apply
                                            expression (src/AtomicBitSet.ml[141,4090+14]..src/AtomicBitSet.ml[141,4090+18])
                                              Texp_ident "Stdlib!.land"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/AtomicBitSet.ml[141,4090+12]..src/AtomicBitSet.ml[141,4090+13])
                                                  Texp_ident "s/576"
                                              <arg>
                                                Nolabel
                                                expression (src/AtomicBitSet.ml[141,4090+19]..src/AtomicBitSet.ml[141,4090+23])
                                                  Texp_apply
                                                  expression (src/AtomicBitSet.ml[141,4090+20]..src/AtomicBitSet.ml[141,4090+21])
                                                    Texp_ident "Stdlib!.~-"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/AtomicBitSet.ml[141,4090+21]..src/AtomicBitSet.ml[141,4090+22])
                                                        Texp_ident "s/576"
                                                  ]
                                            ]
                                      ]
                                      expression (src/AtomicBitSet.ml[142,4117+4]..src/AtomicBitSet.ml[144,4198+29])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/AtomicBitSet.ml[142,4117+8]..src/AtomicBitSet.ml[142,4117+9])
                                              Tpat_var "s/579"
                                            expression (src/AtomicBitSet.ml[142,4117+12]..src/AtomicBitSet.ml[142,4117+20])
                                              Texp_apply
                                              expression (src/AtomicBitSet.ml[142,4117+14]..src/AtomicBitSet.ml[142,4117+18])
                                                Texp_ident "Stdlib!.lxor"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/AtomicBitSet.ml[142,4117+12]..src/AtomicBitSet.ml[142,4117+13])
                                                    Texp_ident "s/576"
                                                <arg>
                                                  Nolabel
                                                  expression (src/AtomicBitSet.ml[142,4117+19]..src/AtomicBitSet.ml[142,4117+20])
                                                    Texp_ident "x/578"
                                              ]
                                        ]
                                        expression (src/AtomicBitSet.ml[143,4157+4]..src/AtomicBitSet.ml[144,4198+29])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/AtomicBitSet.ml[143,4157+8]..src/AtomicBitSet.ml[143,4157+12])
                                                Tpat_var "accu/580"
                                              expression (src/AtomicBitSet.ml[143,4157+15]..src/AtomicBitSet.ml[143,4157+37])
                                                Texp_apply
                                                expression (src/AtomicBitSet.ml[143,4157+15]..src/AtomicBitSet.ml[143,4157+16])
                                                  Texp_ident "f/575"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/AtomicBitSet.ml[143,4157+17]..src/AtomicBitSet.ml[143,4157+32])
                                                      Texp_apply
                                                      expression (src/AtomicBitSet.ml[143,4157+24]..src/AtomicBitSet.ml[143,4157+25])
                                                        Texp_ident "Stdlib!.+"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/AtomicBitSet.ml[143,4157+18]..src/AtomicBitSet.ml[143,4157+23])
                                                            Texp_ident "delta/574"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/AtomicBitSet.ml[143,4157+26]..src/AtomicBitSet.ml[143,4157+31])
                                                            Texp_apply
                                                            expression (src/AtomicBitSet.ml[143,4157+26]..src/AtomicBitSet.ml[143,4157+29])
                                                              Texp_ident "tib/539"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/AtomicBitSet.ml[143,4157+30]..src/AtomicBitSet.ml[143,4157+31])
                                                                  Texp_ident "x/578"
                                                            ]
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (src/AtomicBitSet.ml[143,4157+33]..src/AtomicBitSet.ml[143,4157+37])
                                                      Texp_ident "accu/577"
                                                ]
                                          ]
                                          expression (src/AtomicBitSet.ml[144,4198+4]..src/AtomicBitSet.ml[144,4198+29])
                                            Texp_apply
                                            expression (src/AtomicBitSet.ml[144,4198+4]..src/AtomicBitSet.ml[144,4198+14])
                                              Texp_ident "fold_delta/573"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/AtomicBitSet.ml[144,4198+15]..src/AtomicBitSet.ml[144,4198+20])
                                                  Texp_ident "delta/574"
                                              <arg>
                                                Nolabel
                                                expression (src/AtomicBitSet.ml[144,4198+21]..src/AtomicBitSet.ml[144,4198+22])
                                                  Texp_ident "f/575"
                                              <arg>
                                                Nolabel
                                                expression (src/AtomicBitSet.ml[144,4198+23]..src/AtomicBitSet.ml[144,4198+24])
                                                  Texp_ident "s/579"
                                              <arg>
                                                Nolabel
                                                expression (src/AtomicBitSet.ml[144,4198+25]..src/AtomicBitSet.ml[144,4198+29])
                                                  Texp_ident "accu/580"
                                            ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/AtomicBitSet.ml[146,4229+0]..src/AtomicBitSet.ml[151,4367+24])
    Tstr_value Rec
    [
      <def>
        pattern (src/AtomicBitSet.ml[146,4229+8]..src/AtomicBitSet.ml[146,4229+18])
          Tpat_var "iter_delta/581"
        expression (src/AtomicBitSet.ml[146,4229+19]..src/AtomicBitSet.ml[151,4367+24]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[146,4229+19]..src/AtomicBitSet.ml[146,4229+24])
                Tpat_var "delta/582"
              expression (src/AtomicBitSet.ml[146,4229+25]..src/AtomicBitSet.ml[151,4367+24]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/AtomicBitSet.ml[146,4229+25]..src/AtomicBitSet.ml[146,4229+26])
                      Tpat_var "f/583"
                    expression (src/AtomicBitSet.ml[146,4229+27]..src/AtomicBitSet.ml[151,4367+24]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/AtomicBitSet.ml[146,4229+27]..src/AtomicBitSet.ml[146,4229+28])
                            Tpat_var "s/584"
                          expression (src/AtomicBitSet.ml[147,4260+2]..src/AtomicBitSet.ml[151,4367+24])
                            Texp_ifthenelse
                            expression (src/AtomicBitSet.ml[147,4260+5]..src/AtomicBitSet.ml[147,4260+11])
                              Texp_apply
                              expression (src/AtomicBitSet.ml[147,4260+7]..src/AtomicBitSet.ml[147,4260+9])
                                Texp_ident "Stdlib!.<>"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[147,4260+5]..src/AtomicBitSet.ml[147,4260+6])
                                    Texp_ident "s/584"
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[147,4260+10]..src/AtomicBitSet.ml[147,4260+11])
                                    Texp_constant Const_int 0
                              ]
                            expression (src/AtomicBitSet.ml[148,4277+4]..src/AtomicBitSet.ml[151,4367+24])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/AtomicBitSet.ml[148,4277+8]..src/AtomicBitSet.ml[148,4277+9])
                                    Tpat_var "x/585"
                                  expression (src/AtomicBitSet.ml[148,4277+12]..src/AtomicBitSet.ml[148,4277+23])
                                    Texp_apply
                                    expression (src/AtomicBitSet.ml[148,4277+14]..src/AtomicBitSet.ml[148,4277+18])
                                      Texp_ident "Stdlib!.land"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/AtomicBitSet.ml[148,4277+12]..src/AtomicBitSet.ml[148,4277+13])
                                          Texp_ident "s/584"
                                      <arg>
                                        Nolabel
                                        expression (src/AtomicBitSet.ml[148,4277+19]..src/AtomicBitSet.ml[148,4277+23])
                                          Texp_apply
                                          expression (src/AtomicBitSet.ml[148,4277+20]..src/AtomicBitSet.ml[148,4277+21])
                                            Texp_ident "Stdlib!.~-"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/AtomicBitSet.ml[148,4277+21]..src/AtomicBitSet.ml[148,4277+22])
                                                Texp_ident "s/584"
                                          ]
                                    ]
                              ]
                              expression (src/AtomicBitSet.ml[149,4304+4]..src/AtomicBitSet.ml[151,4367+24])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (src/AtomicBitSet.ml[149,4304+8]..src/AtomicBitSet.ml[149,4304+9])
                                      Tpat_var "s/586"
                                    expression (src/AtomicBitSet.ml[149,4304+12]..src/AtomicBitSet.ml[149,4304+20])
                                      Texp_apply
                                      expression (src/AtomicBitSet.ml[149,4304+14]..src/AtomicBitSet.ml[149,4304+18])
                                        Texp_ident "Stdlib!.lxor"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/AtomicBitSet.ml[149,4304+12]..src/AtomicBitSet.ml[149,4304+13])
                                            Texp_ident "s/584"
                                        <arg>
                                          Nolabel
                                          expression (src/AtomicBitSet.ml[149,4304+19]..src/AtomicBitSet.ml[149,4304+20])
                                            Texp_ident "x/585"
                                      ]
                                ]
                                expression (src/AtomicBitSet.ml[150,4344+4]..src/AtomicBitSet.ml[151,4367+24])
                                  Texp_sequence
                                  expression (src/AtomicBitSet.ml[150,4344+4]..src/AtomicBitSet.ml[150,4344+21])
                                    Texp_apply
                                    expression (src/AtomicBitSet.ml[150,4344+4]..src/AtomicBitSet.ml[150,4344+5])
                                      Texp_ident "f/583"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/AtomicBitSet.ml[150,4344+6]..src/AtomicBitSet.ml[150,4344+21])
                                          Texp_apply
                                          expression (src/AtomicBitSet.ml[150,4344+13]..src/AtomicBitSet.ml[150,4344+14])
                                            Texp_ident "Stdlib!.+"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/AtomicBitSet.ml[150,4344+7]..src/AtomicBitSet.ml[150,4344+12])
                                                Texp_ident "delta/582"
                                            <arg>
                                              Nolabel
                                              expression (src/AtomicBitSet.ml[150,4344+15]..src/AtomicBitSet.ml[150,4344+20])
                                                Texp_apply
                                                expression (src/AtomicBitSet.ml[150,4344+15]..src/AtomicBitSet.ml[150,4344+18])
                                                  Texp_ident "tib/539"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/AtomicBitSet.ml[150,4344+19]..src/AtomicBitSet.ml[150,4344+20])
                                                      Texp_ident "x/585"
                                                ]
                                          ]
                                    ]
                                  expression (src/AtomicBitSet.ml[151,4367+4]..src/AtomicBitSet.ml[151,4367+24])
                                    Texp_apply
                                    expression (src/AtomicBitSet.ml[151,4367+4]..src/AtomicBitSet.ml[151,4367+14])
                                      Texp_ident "iter_delta/581"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/AtomicBitSet.ml[151,4367+15]..src/AtomicBitSet.ml[151,4367+20])
                                          Texp_ident "delta/582"
                                      <arg>
                                        Nolabel
                                        expression (src/AtomicBitSet.ml[151,4367+21]..src/AtomicBitSet.ml[151,4367+22])
                                          Texp_ident "f/583"
                                      <arg>
                                        Nolabel
                                        expression (src/AtomicBitSet.ml[151,4367+23]..src/AtomicBitSet.ml[151,4367+24])
                                          Texp_ident "s/586"
                                    ]
                            None
                      ]
                ]
          ]
    ]
  structure_item (src/AtomicBitSet.ml[153,4393+0]..src/AtomicBitSet.ml[160,4549+17])
    Tstr_value Rec
    [
      <def>
        pattern (src/AtomicBitSet.ml[153,4393+8]..src/AtomicBitSet.ml[153,4393+12])
          Tpat_var "fold/587"
        expression (src/AtomicBitSet.ml[153,4393+13]..src/AtomicBitSet.ml[160,4549+17]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[153,4393+13]..src/AtomicBitSet.ml[153,4393+14])
                Tpat_var "f/588"
              expression (src/AtomicBitSet.ml[153,4393+15]..src/AtomicBitSet.ml[160,4549+17]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/AtomicBitSet.ml[153,4393+15]..src/AtomicBitSet.ml[153,4393+16])
                      Tpat_var "s/589"
                    expression (src/AtomicBitSet.ml[153,4393+17]..src/AtomicBitSet.ml[160,4549+17]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/AtomicBitSet.ml[153,4393+17]..src/AtomicBitSet.ml[153,4393+21])
                            Tpat_var "accu/590"
                          expression (src/AtomicBitSet.ml[154,4417+2]..src/AtomicBitSet.ml[160,4549+17])
                            Texp_ifthenelse
                            expression (src/AtomicBitSet.ml[154,4417+5]..src/AtomicBitSet.ml[154,4417+10])
                              Texp_apply
                              expression (src/AtomicBitSet.ml[154,4417+7]..src/AtomicBitSet.ml[154,4417+8])
                                Texp_ident "Stdlib!.="
                              [
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[154,4417+5]..src/AtomicBitSet.ml[154,4417+6])
                                    Texp_ident "s/589"
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[154,4417+9]..src/AtomicBitSet.ml[154,4417+10])
                                    Texp_constant Const_int 0
                              ]
                            expression (src/AtomicBitSet.ml[155,4433+4]..src/AtomicBitSet.ml[155,4433+8])
                              Texp_ident "accu/590"
                            Some
                              expression (src/AtomicBitSet.ml[157,4449+4]..src/AtomicBitSet.ml[160,4549+17])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (src/AtomicBitSet.ml[157,4449+8]..src/AtomicBitSet.ml[157,4449+9])
                                      Tpat_var "x/591"
                                    expression (src/AtomicBitSet.ml[157,4449+12]..src/AtomicBitSet.ml[157,4449+23])
                                      Texp_apply
                                      expression (src/AtomicBitSet.ml[157,4449+14]..src/AtomicBitSet.ml[157,4449+18])
                                        Texp_ident "Stdlib!.land"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/AtomicBitSet.ml[157,4449+12]..src/AtomicBitSet.ml[157,4449+13])
                                            Texp_ident "s/589"
                                        <arg>
                                          Nolabel
                                          expression (src/AtomicBitSet.ml[157,4449+19]..src/AtomicBitSet.ml[157,4449+23])
                                            Texp_apply
                                            expression (src/AtomicBitSet.ml[157,4449+20]..src/AtomicBitSet.ml[157,4449+21])
                                              Texp_ident "Stdlib!.~-"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/AtomicBitSet.ml[157,4449+21]..src/AtomicBitSet.ml[157,4449+22])
                                                  Texp_ident "s/589"
                                            ]
                                      ]
                                ]
                                expression (src/AtomicBitSet.ml[158,4476+4]..src/AtomicBitSet.ml[160,4549+17])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/AtomicBitSet.ml[158,4476+8]..src/AtomicBitSet.ml[158,4476+9])
                                        Tpat_var "s/592"
                                      expression (src/AtomicBitSet.ml[158,4476+12]..src/AtomicBitSet.ml[158,4476+20])
                                        Texp_apply
                                        expression (src/AtomicBitSet.ml[158,4476+14]..src/AtomicBitSet.ml[158,4476+18])
                                          Texp_ident "Stdlib!.lxor"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/AtomicBitSet.ml[158,4476+12]..src/AtomicBitSet.ml[158,4476+13])
                                              Texp_ident "s/589"
                                          <arg>
                                            Nolabel
                                            expression (src/AtomicBitSet.ml[158,4476+19]..src/AtomicBitSet.ml[158,4476+20])
                                              Texp_ident "x/591"
                                        ]
                                  ]
                                  expression (src/AtomicBitSet.ml[159,4516+4]..src/AtomicBitSet.ml[160,4549+17])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/AtomicBitSet.ml[159,4516+8]..src/AtomicBitSet.ml[159,4516+12])
                                          Tpat_var "accu/593"
                                        expression (src/AtomicBitSet.ml[159,4516+15]..src/AtomicBitSet.ml[159,4516+29])
                                          Texp_apply
                                          expression (src/AtomicBitSet.ml[159,4516+15]..src/AtomicBitSet.ml[159,4516+16])
                                            Texp_ident "f/588"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/AtomicBitSet.ml[159,4516+17]..src/AtomicBitSet.ml[159,4516+24])
                                                Texp_apply
                                                expression (src/AtomicBitSet.ml[159,4516+18]..src/AtomicBitSet.ml[159,4516+21])
                                                  Texp_ident "tib/539"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/AtomicBitSet.ml[159,4516+22]..src/AtomicBitSet.ml[159,4516+23])
                                                      Texp_ident "x/591"
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/AtomicBitSet.ml[159,4516+25]..src/AtomicBitSet.ml[159,4516+29])
                                                Texp_ident "accu/590"
                                          ]
                                    ]
                                    expression (src/AtomicBitSet.ml[160,4549+4]..src/AtomicBitSet.ml[160,4549+17])
                                      Texp_apply
                                      expression (src/AtomicBitSet.ml[160,4549+4]..src/AtomicBitSet.ml[160,4549+8])
                                        Texp_ident "fold/587"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/AtomicBitSet.ml[160,4549+9]..src/AtomicBitSet.ml[160,4549+10])
                                            Texp_ident "f/588"
                                        <arg>
                                          Nolabel
                                          expression (src/AtomicBitSet.ml[160,4549+11]..src/AtomicBitSet.ml[160,4549+12])
                                            Texp_ident "s/592"
                                        <arg>
                                          Nolabel
                                          expression (src/AtomicBitSet.ml[160,4549+13]..src/AtomicBitSet.ml[160,4549+17])
                                            Texp_ident "accu/593"
                                      ]
                      ]
                ]
          ]
    ]
  structure_item (src/AtomicBitSet.ml[162,4568+0]..src/AtomicBitSet.ml[167,4686+12])
    Tstr_value Rec
    [
      <def>
        pattern (src/AtomicBitSet.ml[162,4568+8]..src/AtomicBitSet.ml[162,4568+12])
          Tpat_var "iter/594"
        expression (src/AtomicBitSet.ml[162,4568+13]..src/AtomicBitSet.ml[167,4686+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[162,4568+13]..src/AtomicBitSet.ml[162,4568+14])
                Tpat_var "f/595"
              expression (src/AtomicBitSet.ml[162,4568+15]..src/AtomicBitSet.ml[167,4686+12]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/AtomicBitSet.ml[162,4568+15]..src/AtomicBitSet.ml[162,4568+16])
                      Tpat_var "s/596"
                    expression (src/AtomicBitSet.ml[163,4587+2]..src/AtomicBitSet.ml[167,4686+12])
                      Texp_ifthenelse
                      expression (src/AtomicBitSet.ml[163,4587+5]..src/AtomicBitSet.ml[163,4587+11])
                        Texp_apply
                        expression (src/AtomicBitSet.ml[163,4587+7]..src/AtomicBitSet.ml[163,4587+9])
                          Texp_ident "Stdlib!.<>"
                        [
                          <arg>
                            Nolabel
                            expression (src/AtomicBitSet.ml[163,4587+5]..src/AtomicBitSet.ml[163,4587+6])
                              Texp_ident "s/596"
                          <arg>
                            Nolabel
                            expression (src/AtomicBitSet.ml[163,4587+10]..src/AtomicBitSet.ml[163,4587+11])
                              Texp_constant Const_int 0
                        ]
                      expression (src/AtomicBitSet.ml[164,4604+4]..src/AtomicBitSet.ml[167,4686+12])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/AtomicBitSet.ml[164,4604+8]..src/AtomicBitSet.ml[164,4604+9])
                              Tpat_var "x/597"
                            expression (src/AtomicBitSet.ml[164,4604+12]..src/AtomicBitSet.ml[164,4604+23])
                              Texp_apply
                              expression (src/AtomicBitSet.ml[164,4604+14]..src/AtomicBitSet.ml[164,4604+18])
                                Texp_ident "Stdlib!.land"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[164,4604+12]..src/AtomicBitSet.ml[164,4604+13])
                                    Texp_ident "s/596"
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[164,4604+19]..src/AtomicBitSet.ml[164,4604+23])
                                    Texp_apply
                                    expression (src/AtomicBitSet.ml[164,4604+20]..src/AtomicBitSet.ml[164,4604+21])
                                      Texp_ident "Stdlib!.~-"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/AtomicBitSet.ml[164,4604+21]..src/AtomicBitSet.ml[164,4604+22])
                                          Texp_ident "s/596"
                                    ]
                              ]
                        ]
                        expression (src/AtomicBitSet.ml[165,4631+4]..src/AtomicBitSet.ml[167,4686+12])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (src/AtomicBitSet.ml[165,4631+8]..src/AtomicBitSet.ml[165,4631+9])
                                Tpat_var "s/598"
                              expression (src/AtomicBitSet.ml[165,4631+12]..src/AtomicBitSet.ml[165,4631+20])
                                Texp_apply
                                expression (src/AtomicBitSet.ml[165,4631+14]..src/AtomicBitSet.ml[165,4631+18])
                                  Texp_ident "Stdlib!.lxor"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/AtomicBitSet.ml[165,4631+12]..src/AtomicBitSet.ml[165,4631+13])
                                      Texp_ident "s/596"
                                  <arg>
                                    Nolabel
                                    expression (src/AtomicBitSet.ml[165,4631+19]..src/AtomicBitSet.ml[165,4631+20])
                                      Texp_ident "x/597"
                                ]
                          ]
                          expression (src/AtomicBitSet.ml[166,4671+4]..src/AtomicBitSet.ml[167,4686+12])
                            Texp_sequence
                            expression (src/AtomicBitSet.ml[166,4671+4]..src/AtomicBitSet.ml[166,4671+13])
                              Texp_apply
                              expression (src/AtomicBitSet.ml[166,4671+4]..src/AtomicBitSet.ml[166,4671+5])
                                Texp_ident "f/595"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[166,4671+6]..src/AtomicBitSet.ml[166,4671+13])
                                    Texp_apply
                                    expression (src/AtomicBitSet.ml[166,4671+7]..src/AtomicBitSet.ml[166,4671+10])
                                      Texp_ident "tib/539"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/AtomicBitSet.ml[166,4671+11]..src/AtomicBitSet.ml[166,4671+12])
                                          Texp_ident "x/597"
                                    ]
                              ]
                            expression (src/AtomicBitSet.ml[167,4686+4]..src/AtomicBitSet.ml[167,4686+12])
                              Texp_apply
                              expression (src/AtomicBitSet.ml[167,4686+4]..src/AtomicBitSet.ml[167,4686+8])
                                Texp_ident "iter/594"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[167,4686+9]..src/AtomicBitSet.ml[167,4686+10])
                                    Texp_ident "f/595"
                                <arg>
                                  Nolabel
                                  expression (src/AtomicBitSet.ml[167,4686+11]..src/AtomicBitSet.ml[167,4686+12])
                                    Texp_ident "s/598"
                              ]
                      None
                ]
          ]
    ]
  structure_item (src/AtomicBitSet.ml[169,4700+0]..src/AtomicBitSet.ml[172,4845+20])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[169,4700+4]..src/AtomicBitSet.ml[169,4700+16])
          Tpat_var "is_singleton/599"
        expression (src/AtomicBitSet.ml[169,4700+17]..src/AtomicBitSet.ml[172,4845+20]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[169,4700+17]..src/AtomicBitSet.ml[169,4700+18])
                Tpat_var "s/601"
              expression (src/AtomicBitSet.ml[172,4845+2]..src/AtomicBitSet.ml[172,4845+20])
                Texp_apply
                expression (src/AtomicBitSet.ml[172,4845+17]..src/AtomicBitSet.ml[172,4845+18])
                  Texp_ident "Stdlib!.="
                [
                  <arg>
                    Nolabel
                    expression (src/AtomicBitSet.ml[172,4845+2]..src/AtomicBitSet.ml[172,4845+16])
                      Texp_apply
                      expression (src/AtomicBitSet.ml[172,4845+4]..src/AtomicBitSet.ml[172,4845+8])
                        Texp_ident "Stdlib!.land"
                      [
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[172,4845+2]..src/AtomicBitSet.ml[172,4845+3])
                            Texp_ident "s/601"
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[172,4845+9]..src/AtomicBitSet.ml[172,4845+16])
                            Texp_apply
                            expression (src/AtomicBitSet.ml[172,4845+12]..src/AtomicBitSet.ml[172,4845+13])
                              Texp_ident "Stdlib!.-"
                            [
                              <arg>
                                Nolabel
                                expression (src/AtomicBitSet.ml[172,4845+10]..src/AtomicBitSet.ml[172,4845+11])
                                  Texp_ident "s/601"
                              <arg>
                                Nolabel
                                expression (src/AtomicBitSet.ml[172,4845+14]..src/AtomicBitSet.ml[172,4845+15])
                                  Texp_constant Const_int 1
                            ]
                      ]
                  <arg>
                    Nolabel
                    expression (src/AtomicBitSet.ml[172,4845+19]..src/AtomicBitSet.ml[172,4845+20])
                      Texp_constant Const_int 0
                ]
          ]
    ]
  structure_item (src/AtomicBitSet.ml[174,4867+0]..src/AtomicBitSet.ml[175,4884+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[174,4867+4]..src/AtomicBitSet.ml[174,4867+12])
          Tpat_var "cardinal/602"
        expression (src/AtomicBitSet.ml[174,4867+13]..src/AtomicBitSet.ml[175,4884+7]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[174,4867+13]..src/AtomicBitSet.ml[174,4867+14])
                Tpat_var "s/604"
              expression (src/AtomicBitSet.ml[175,4884+2]..src/AtomicBitSet.ml[175,4884+7])
                Texp_apply
                expression (src/AtomicBitSet.ml[175,4884+2]..src/AtomicBitSet.ml[175,4884+5])
                  Texp_ident "pop/557"
                [
                  <arg>
                    Nolabel
                    expression (src/AtomicBitSet.ml[175,4884+6]..src/AtomicBitSet.ml[175,4884+7])
                      Texp_ident "s/604"
                ]
          ]
    ]
  structure_item (src/AtomicBitSet.ml[178,4933+0]..src/AtomicBitSet.ml[180,5006+35])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[178,4933+4]..src/AtomicBitSet.ml[178,4933+12])
          Tpat_var "elements/605"
        expression (src/AtomicBitSet.ml[178,4933+13]..src/AtomicBitSet.ml[180,5006+35]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[178,4933+13]..src/AtomicBitSet.ml[178,4933+14])
                Tpat_var "s/607"
              expression (src/AtomicBitSet.ml[180,5006+2]..src/AtomicBitSet.ml[180,5006+35])
                Texp_apply
                expression (src/AtomicBitSet.ml[180,5006+2]..src/AtomicBitSet.ml[180,5006+6])
                  Texp_ident "fold/587"
                [
                  <arg>
                    Nolabel
                    expression (src/AtomicBitSet.ml[180,5006+7]..src/AtomicBitSet.ml[180,5006+30])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/AtomicBitSet.ml[180,5006+12]..src/AtomicBitSet.ml[180,5006+14])
                            Tpat_var "tl/608"
                          expression (src/AtomicBitSet.ml[180,5006+15]..src/AtomicBitSet.ml[180,5006+29]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/AtomicBitSet.ml[180,5006+15]..src/AtomicBitSet.ml[180,5006+17])
                                  Tpat_var "hd/609"
                                expression (src/AtomicBitSet.ml[180,5006+21]..src/AtomicBitSet.ml[180,5006+29])
                                  Texp_construct "::"
                                  [
                                    expression (src/AtomicBitSet.ml[180,5006+21]..src/AtomicBitSet.ml[180,5006+23])
                                      Texp_ident "tl/608"
                                    expression (src/AtomicBitSet.ml[180,5006+27]..src/AtomicBitSet.ml[180,5006+29])
                                      Texp_ident "hd/609"
                                  ]
                            ]
                      ]
                  <arg>
                    Nolabel
                    expression (src/AtomicBitSet.ml[180,5006+31]..src/AtomicBitSet.ml[180,5006+32])
                      Texp_ident "s/607"
                  <arg>
                    Nolabel
                    expression (src/AtomicBitSet.ml[180,5006+33]..src/AtomicBitSet.ml[180,5006+35])
                      Texp_construct "[]"
                      []
                ]
          ]
    ]
  structure_item (src/AtomicBitSet.ml[182,5043+0]..src/AtomicBitSet.ml[183,5062+17])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[182,5043+4]..src/AtomicBitSet.ml[182,5043+10])
          Tpat_var "subset/610"
        expression (src/AtomicBitSet.ml[182,5043+11]..src/AtomicBitSet.ml[183,5062+17]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[182,5043+11]..src/AtomicBitSet.ml[182,5043+13])
                Tpat_var "s1/612"
              expression (src/AtomicBitSet.ml[182,5043+14]..src/AtomicBitSet.ml[183,5062+17]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/AtomicBitSet.ml[182,5043+14]..src/AtomicBitSet.ml[182,5043+16])
                      Tpat_var "s2/613"
                    expression (src/AtomicBitSet.ml[183,5062+2]..src/AtomicBitSet.ml[183,5062+17])
                      Texp_apply
                      expression (src/AtomicBitSet.ml[183,5062+13]..src/AtomicBitSet.ml[183,5062+14])
                        Texp_ident "Stdlib!.="
                      [
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[183,5062+2]..src/AtomicBitSet.ml[183,5062+12])
                            Texp_apply
                            expression (src/AtomicBitSet.ml[183,5062+5]..src/AtomicBitSet.ml[183,5062+9])
                              Texp_ident "Stdlib!.land"
                            [
                              <arg>
                                Nolabel
                                expression (src/AtomicBitSet.ml[183,5062+2]..src/AtomicBitSet.ml[183,5062+4])
                                  Texp_ident "s1/612"
                              <arg>
                                Nolabel
                                expression (src/AtomicBitSet.ml[183,5062+10]..src/AtomicBitSet.ml[183,5062+12])
                                  Texp_ident "s2/613"
                            ]
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[183,5062+15]..src/AtomicBitSet.ml[183,5062+17])
                            Texp_ident "s1/612"
                      ]
                ]
          ]
    ]
  structure_item (src/AtomicBitSet.ml[185,5081+0]..src/AtomicBitSet.ml[186,5095+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[185,5081+4]..src/AtomicBitSet.ml[185,5081+7])
          Tpat_var "mem/614"
        expression (src/AtomicBitSet.ml[185,5081+8]..src/AtomicBitSet.ml[186,5095+24]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[185,5081+8]..src/AtomicBitSet.ml[185,5081+9])
                Tpat_var "i/616"
              expression (src/AtomicBitSet.ml[185,5081+10]..src/AtomicBitSet.ml[186,5095+24]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/AtomicBitSet.ml[185,5081+10]..src/AtomicBitSet.ml[185,5081+11])
                      Tpat_var "s/617"
                    expression (src/AtomicBitSet.ml[186,5095+2]..src/AtomicBitSet.ml[186,5095+24])
                      Texp_apply
                      expression (src/AtomicBitSet.ml[186,5095+2]..src/AtomicBitSet.ml[186,5095+8])
                        Texp_ident "subset/610"
                      [
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[186,5095+9]..src/AtomicBitSet.ml[186,5095+22])
                            Texp_apply
                            expression (src/AtomicBitSet.ml[186,5095+10]..src/AtomicBitSet.ml[186,5095+19])
                              Texp_ident "singleton/564"
                            [
                              <arg>
                                Nolabel
                                expression (src/AtomicBitSet.ml[186,5095+20]..src/AtomicBitSet.ml[186,5095+21])
                                  Texp_ident "i/616"
                            ]
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[186,5095+23]..src/AtomicBitSet.ml[186,5095+24])
                            Texp_ident "s/617"
                      ]
                ]
          ]
    ]
  structure_item (src/AtomicBitSet.ml[188,5121+0]..src/AtomicBitSet.ml[189,5139+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[188,5121+4]..src/AtomicBitSet.ml[188,5121+9])
          Tpat_var "union/618"
        expression (src/AtomicBitSet.ml[188,5121+10]..src/AtomicBitSet.ml[189,5139+11]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[188,5121+10]..src/AtomicBitSet.ml[188,5121+12])
                Tpat_var "s1/620"
              expression (src/AtomicBitSet.ml[188,5121+13]..src/AtomicBitSet.ml[189,5139+11]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/AtomicBitSet.ml[188,5121+13]..src/AtomicBitSet.ml[188,5121+15])
                      Tpat_var "s2/621"
                    expression (src/AtomicBitSet.ml[189,5139+2]..src/AtomicBitSet.ml[189,5139+11])
                      Texp_apply
                      expression (src/AtomicBitSet.ml[189,5139+5]..src/AtomicBitSet.ml[189,5139+8])
                        Texp_ident "Stdlib!.lor"
                      [
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[189,5139+2]..src/AtomicBitSet.ml[189,5139+4])
                            Texp_ident "s1/620"
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[189,5139+9]..src/AtomicBitSet.ml[189,5139+11])
                            Texp_ident "s2/621"
                      ]
                ]
          ]
    ]
  structure_item (src/AtomicBitSet.ml[191,5152+0]..src/AtomicBitSet.ml[192,5170+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[191,5152+4]..src/AtomicBitSet.ml[191,5152+9])
          Tpat_var "inter/622"
        expression (src/AtomicBitSet.ml[191,5152+10]..src/AtomicBitSet.ml[192,5170+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[191,5152+10]..src/AtomicBitSet.ml[191,5152+12])
                Tpat_var "s1/624"
              expression (src/AtomicBitSet.ml[191,5152+13]..src/AtomicBitSet.ml[192,5170+12]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/AtomicBitSet.ml[191,5152+13]..src/AtomicBitSet.ml[191,5152+15])
                      Tpat_var "s2/625"
                    expression (src/AtomicBitSet.ml[192,5170+2]..src/AtomicBitSet.ml[192,5170+12])
                      Texp_apply
                      expression (src/AtomicBitSet.ml[192,5170+5]..src/AtomicBitSet.ml[192,5170+9])
                        Texp_ident "Stdlib!.land"
                      [
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[192,5170+2]..src/AtomicBitSet.ml[192,5170+4])
                            Texp_ident "s1/624"
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[192,5170+10]..src/AtomicBitSet.ml[192,5170+12])
                            Texp_ident "s2/625"
                      ]
                ]
          ]
    ]
  structure_item (src/AtomicBitSet.ml[194,5184+0]..src/AtomicBitSet.ml[199,5270+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[194,5184+4]..src/AtomicBitSet.ml[194,5184+11])
          Tpat_var "minimum/626"
        expression (src/AtomicBitSet.ml[194,5184+12]..src/AtomicBitSet.ml[199,5270+9]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[194,5184+12]..src/AtomicBitSet.ml[194,5184+13])
                Tpat_var "s/628"
              expression (src/AtomicBitSet.ml[195,5200+2]..src/AtomicBitSet.ml[199,5270+9])
                Texp_ifthenelse
                expression (src/AtomicBitSet.ml[195,5200+5]..src/AtomicBitSet.ml[195,5200+10])
                  Texp_apply
                  expression (src/AtomicBitSet.ml[195,5200+7]..src/AtomicBitSet.ml[195,5200+8])
                    Texp_ident "Stdlib!.="
                  [
                    <arg>
                      Nolabel
                      expression (src/AtomicBitSet.ml[195,5200+5]..src/AtomicBitSet.ml[195,5200+6])
                        Texp_ident "s/628"
                    <arg>
                      Nolabel
                      expression (src/AtomicBitSet.ml[195,5200+9]..src/AtomicBitSet.ml[195,5200+10])
                        Texp_constant Const_int 0
                  ]
                expression (src/AtomicBitSet.ml[196,5216+4]..src/AtomicBitSet.ml[196,5216+19])
                  Texp_apply
                  expression (src/AtomicBitSet.ml[196,5216+4]..src/AtomicBitSet.ml[196,5216+9])
                    Texp_ident "Stdlib!.raise"
                  [
                    <arg>
                      Nolabel
                      expression (src/AtomicBitSet.ml[196,5216+10]..src/AtomicBitSet.ml[196,5216+19])
                        Texp_construct "Not_found"
                        []
                  ]
                Some
                  expression (src/AtomicBitSet.ml[198,5243+4]..src/AtomicBitSet.ml[199,5270+9])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/AtomicBitSet.ml[198,5243+8]..src/AtomicBitSet.ml[198,5243+9])
                          Tpat_var "x/629"
                        expression (src/AtomicBitSet.ml[198,5243+12]..src/AtomicBitSet.ml[198,5243+23])
                          Texp_apply
                          expression (src/AtomicBitSet.ml[198,5243+14]..src/AtomicBitSet.ml[198,5243+18])
                            Texp_ident "Stdlib!.land"
                          [
                            <arg>
                              Nolabel
                              expression (src/AtomicBitSet.ml[198,5243+12]..src/AtomicBitSet.ml[198,5243+13])
                                Texp_ident "s/628"
                            <arg>
                              Nolabel
                              expression (src/AtomicBitSet.ml[198,5243+19]..src/AtomicBitSet.ml[198,5243+23])
                                Texp_apply
                                expression (src/AtomicBitSet.ml[198,5243+20]..src/AtomicBitSet.ml[198,5243+21])
                                  Texp_ident "Stdlib!.~-"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/AtomicBitSet.ml[198,5243+21]..src/AtomicBitSet.ml[198,5243+22])
                                      Texp_ident "s/628"
                                ]
                          ]
                    ]
                    expression (src/AtomicBitSet.ml[199,5270+4]..src/AtomicBitSet.ml[199,5270+9])
                      Texp_apply
                      expression (src/AtomicBitSet.ml[199,5270+4]..src/AtomicBitSet.ml[199,5270+7])
                        Texp_ident "tib/539"
                      [
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[199,5270+8]..src/AtomicBitSet.ml[199,5270+9])
                            Texp_ident "x/629"
                      ]
          ]
    ]
  structure_item (src/AtomicBitSet.ml[201,5281+0]..src/AtomicBitSet.ml[202,5294+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[201,5281+4]..src/AtomicBitSet.ml[201,5281+10])
          Tpat_var "choose/630"
        expression (src/AtomicBitSet.ml[202,5294+2]..src/AtomicBitSet.ml[202,5294+9])
          Texp_ident "minimum/626"
    ]
  structure_item (src/AtomicBitSet.ml[204,5305+0]..src/AtomicBitSet.ml[205,5335+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[204,5305+4]..src/AtomicBitSet.ml[204,5305+11])
          extra
            Tpat_extra_constraint
            core_type (src/AtomicBitSet.ml[204,5305+14]..src/AtomicBitSet.ml[204,5305+27])
              Ttyp_arrow
              Nolabel
              core_type (src/AtomicBitSet.ml[204,5305+14]..src/AtomicBitSet.ml[204,5305+15])
                Ttyp_constr "t/397"
                []
              core_type (src/AtomicBitSet.ml[204,5305+19]..src/AtomicBitSet.ml[204,5305+27])
                Ttyp_arrow
                Nolabel
                core_type (src/AtomicBitSet.ml[204,5305+19]..src/AtomicBitSet.ml[204,5305+20])
                  Ttyp_constr "t/397"
                  []
                core_type (src/AtomicBitSet.ml[204,5305+24]..src/AtomicBitSet.ml[204,5305+27])
                  Ttyp_constr "int/1!"
                  []
          Tpat_alias "compare/631"
          pattern (src/AtomicBitSet.ml[204,5305+4]..src/AtomicBitSet.ml[204,5305+11])
            Tpat_any
        expression (src/AtomicBitSet.ml[205,5335+2]..src/AtomicBitSet.ml[205,5335+9])
          extra
            Texp_constraint
            core_type (src/AtomicBitSet.ml[204,5305+14]..src/AtomicBitSet.ml[204,5305+27])
              Ttyp_arrow
              Nolabel
              core_type (src/AtomicBitSet.ml[204,5305+14]..src/AtomicBitSet.ml[204,5305+15])
                Ttyp_constr "t/397"
                []
              core_type (src/AtomicBitSet.ml[204,5305+19]..src/AtomicBitSet.ml[204,5305+27])
                Ttyp_arrow
                Nolabel
                core_type (src/AtomicBitSet.ml[204,5305+19]..src/AtomicBitSet.ml[204,5305+20])
                  Ttyp_constr "t/397"
                  []
                core_type (src/AtomicBitSet.ml[204,5305+24]..src/AtomicBitSet.ml[204,5305+27])
                  Ttyp_constr "int/1!"
                  []
          Texp_ident "Stdlib!.compare"
    ]
  structure_item (src/AtomicBitSet.ml[207,5378+0]..src/AtomicBitSet.ml[208,5407+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[207,5378+4]..src/AtomicBitSet.ml[207,5378+9])
          extra
            Tpat_extra_constraint
            core_type (src/AtomicBitSet.ml[207,5378+12]..src/AtomicBitSet.ml[207,5378+26])
              Ttyp_arrow
              Nolabel
              core_type (src/AtomicBitSet.ml[207,5378+12]..src/AtomicBitSet.ml[207,5378+13])
                Ttyp_constr "t/397"
                []
              core_type (src/AtomicBitSet.ml[207,5378+17]..src/AtomicBitSet.ml[207,5378+26])
                Ttyp_arrow
                Nolabel
                core_type (src/AtomicBitSet.ml[207,5378+17]..src/AtomicBitSet.ml[207,5378+18])
                  Ttyp_constr "t/397"
                  []
                core_type (src/AtomicBitSet.ml[207,5378+22]..src/AtomicBitSet.ml[207,5378+26])
                  Ttyp_constr "bool/5!"
                  []
          Tpat_alias "equal/632"
          pattern (src/AtomicBitSet.ml[207,5378+4]..src/AtomicBitSet.ml[207,5378+9])
            Tpat_any
        expression (src/AtomicBitSet.ml[208,5407+2]..src/AtomicBitSet.ml[208,5407+5])
          extra
            Texp_constraint
            core_type (src/AtomicBitSet.ml[207,5378+12]..src/AtomicBitSet.ml[207,5378+26])
              Ttyp_arrow
              Nolabel
              core_type (src/AtomicBitSet.ml[207,5378+12]..src/AtomicBitSet.ml[207,5378+13])
                Ttyp_constr "t/397"
                []
              core_type (src/AtomicBitSet.ml[207,5378+17]..src/AtomicBitSet.ml[207,5378+26])
                Ttyp_arrow
                Nolabel
                core_type (src/AtomicBitSet.ml[207,5378+17]..src/AtomicBitSet.ml[207,5378+18])
                  Ttyp_constr "t/397"
                  []
                core_type (src/AtomicBitSet.ml[207,5378+22]..src/AtomicBitSet.ml[207,5378+26])
                  Ttyp_constr "bool/5!"
                  []
          Texp_ident "Stdlib!.="
    ]
  structure_item (src/AtomicBitSet.ml[210,5414+0]..src/AtomicBitSet.ml[211,5435+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/AtomicBitSet.ml[210,5414+4]..src/AtomicBitSet.ml[210,5414+12])
          Tpat_var "disjoint/633"
        expression (src/AtomicBitSet.ml[210,5414+13]..src/AtomicBitSet.ml[211,5435+24]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/AtomicBitSet.ml[210,5414+13]..src/AtomicBitSet.ml[210,5414+15])
                Tpat_var "s1/635"
              expression (src/AtomicBitSet.ml[210,5414+16]..src/AtomicBitSet.ml[211,5435+24]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/AtomicBitSet.ml[210,5414+16]..src/AtomicBitSet.ml[210,5414+18])
                      Tpat_var "s2/636"
                    expression (src/AtomicBitSet.ml[211,5435+2]..src/AtomicBitSet.ml[211,5435+24])
                      Texp_apply
                      expression (src/AtomicBitSet.ml[211,5435+2]..src/AtomicBitSet.ml[211,5435+10])
                        Texp_ident "is_empty/561"
                      [
                        <arg>
                          Nolabel
                          expression (src/AtomicBitSet.ml[211,5435+11]..src/AtomicBitSet.ml[211,5435+24])
                            Texp_apply
                            expression (src/AtomicBitSet.ml[211,5435+12]..src/AtomicBitSet.ml[211,5435+17])
                              Texp_ident "inter/622"
                            [
                              <arg>
                                Nolabel
                                expression (src/AtomicBitSet.ml[211,5435+18]..src/AtomicBitSet.ml[211,5435+20])
                                  Texp_ident "s1/635"
                              <arg>
                                Nolabel
                                expression (src/AtomicBitSet.ml[211,5435+21]..src/AtomicBitSet.ml[211,5435+23])
                                  Texp_ident "s2/636"
                            ]
                      ]
                ]
          ]
    ]
]

{<Dune__exe__AtomicBitSet>
 "add"[value] -> <Dune__exe__AtomicBitSet.37>;
 "bound"[value] -> <Dune__exe__AtomicBitSet.2>;
 "cardinal"[value] -> <Dune__exe__AtomicBitSet.71>;
 "choose"[value] -> <Dune__exe__AtomicBitSet.92>;
 "compare"[value] -> <Dune__exe__AtomicBitSet.93>;
 "disjoint"[value] -> <Dune__exe__AtomicBitSet.95>;
 "element"[type] -> <Dune__exe__AtomicBitSet.1>;
 "elements"[value] -> <Dune__exe__AtomicBitSet.73>;
 "empty"[value] -> <Dune__exe__AtomicBitSet.33>;
 "equal"[value] -> <Dune__exe__AtomicBitSet.94>;
 "fold"[value] -> <Dune__exe__AtomicBitSet.57>;
 "fold_delta"[value] -> <Dune__exe__AtomicBitSet.43>;
 "inter"[value] -> <Dune__exe__AtomicBitSet.86>;
 "is_empty"[value] -> <Dune__exe__AtomicBitSet.34>;
 "is_singleton"[value] -> <Dune__exe__AtomicBitSet.69>;
 "iter"[value] -> <Dune__exe__AtomicBitSet.64>;
 "iter_delta"[value] -> <Dune__exe__AtomicBitSet.51>;
 "mem"[value] -> <Dune__exe__AtomicBitSet.80>;
 "remove"[value] -> <Dune__exe__AtomicBitSet.40>;
 "singleton"[value] -> <Dune__exe__AtomicBitSet.36>;
 "subset"[value] -> <Dune__exe__AtomicBitSet.77>;
 "t"[type] -> <Dune__exe__AtomicBitSet.0>;
 "union"[value] -> <Dune__exe__AtomicBitSet.83>;
 }

(seq
  (let (bound/399 =[int] (- (field_imm 8 (global Stdlib__Sys!)) 1))
    (setfield_ptr(root-init) 0 (global Dune__exe__AtomicBitSet!) bound/399))
  (let
    (bit/474 =
       (function i/476[int] : int
         (seq
           (if
             (&& (<= 0 i/476)
               (< i/476 (field_imm 0 (global Dune__exe__AtomicBitSet!))))
             0
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "src/AtomicBitSet.ml" 32 2])))
           (lsl 1 i/476))))
    (setfield_ptr(root-init) 21 (global Dune__exe__AtomicBitSet!) bit/474))
  (let (log2/477 = (caml_make_vect 255 0))
    (setfield_ptr(root-init) 22 (global Dune__exe__AtomicBitSet!) log2/477))
  (let
    (*match*/1080 =
       (for i/526 0 to 7
         (array.set[int] (field_imm 22 (global Dune__exe__AtomicBitSet!))
           (apply (field_imm 21 (global Dune__exe__AtomicBitSet!)) i/526)
           i/526)))
    0)
  (let
    (tib16/527 =
       (function accu/529[int] x/530[int] : int
         (if (== (and x/530 255) 0)
           (+ (+ accu/529 8)
             (array.get[int] (field_imm 22 (global Dune__exe__AtomicBitSet!))
               (lsr x/530 8)))
           (+ accu/529
             (array.get[int] (field_imm 22 (global Dune__exe__AtomicBitSet!))
               x/530)))))
    (setfield_ptr(root-init) 23 (global Dune__exe__AtomicBitSet!) tib16/527))
  (let
    (tib32/531 =
       (function accu/533[int] x/534[int] : int
         (if (== (and x/534 65535) 0)
           (apply (field_imm 23 (global Dune__exe__AtomicBitSet!))
             (+ accu/533 16) (lsr x/534 16))
           (apply (field_imm 23 (global Dune__exe__AtomicBitSet!)) accu/533
             x/534))))
    (setfield_ptr(root-init) 24 (global Dune__exe__AtomicBitSet!) tib32/531))
  (let (ffffffff/535 =[int] (or (lsl 65535 16) 65535))
    (setfield_ptr(root-init) 25 (global Dune__exe__AtomicBitSet!)
      ffffffff/535))
  (let
    (tib64/536 =
       (function x/538[int] : int
         (if
           (== (and x/538 (field_imm 25 (global Dune__exe__AtomicBitSet!)))
             0)
           (apply (field_imm 24 (global Dune__exe__AtomicBitSet!)) 32
             (lsr x/538 32))
           (apply (field_imm 24 (global Dune__exe__AtomicBitSet!)) 0 x/538))))
    (setfield_ptr(root-init) 26 (global Dune__exe__AtomicBitSet!) tib64/536))
  (let
    (tib/539 =
       (function x/541[int] : int
         (let (*match*/1081 = (field_imm 8 (global Stdlib__Sys!)))
           (catch
             (if (!= *match*/1081 32)
               (if (!= *match*/1081 64) (exit 4)
                 (apply (field_imm 26 (global Dune__exe__AtomicBitSet!))
                   x/541))
               (apply (field_imm 24 (global Dune__exe__AtomicBitSet!)) 0
                 x/541))
            with (4)
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "src/AtomicBitSet.ml" 78 9]))))))
    (setfield_ptr(root-init) 27 (global Dune__exe__AtomicBitSet!) tib/539))
  (let
    (*match*/1083 =
       (for i/542 0 to (- (field_imm 0 (global Dune__exe__AtomicBitSet!)) 1)
         (if
           (==
             (apply (field_imm 27 (global Dune__exe__AtomicBitSet!))
               (apply (field_imm 21 (global Dune__exe__AtomicBitSet!)) i/542))
             i/542)
           0
           (raise
             (makeblock 0 (global Assert_failure/28!)
               [0: "src/AtomicBitSet.ml" 82 28])))))
    0)
  (let (b0/543 =[int] 1431655765)
    (setfield_ptr(root-init) 28 (global Dune__exe__AtomicBitSet!) b0/543))
  (let (b1/544 =[int] 858993459)
    (setfield_ptr(root-init) 29 (global Dune__exe__AtomicBitSet!) b1/544))
  (let (b2/545 =[int] 252645135)
    (setfield_ptr(root-init) 30 (global Dune__exe__AtomicBitSet!) b2/545))
  (let
    (pop32/546 =
       (function x/548[int] : int
         (let
           (x/549 =[int]
              (- x/548
                (and (lsr x/548 1)
                  (field_imm 28 (global Dune__exe__AtomicBitSet!))))
            x/550 =[int]
              (+ (and x/549 (field_imm 29 (global Dune__exe__AtomicBitSet!)))
                (and (lsr x/549 2)
                  (field_imm 29 (global Dune__exe__AtomicBitSet!))))
            x/551 =[int]
              (+ (and x/550 (field_imm 30 (global Dune__exe__AtomicBitSet!)))
                (and (lsr x/550 4)
                  (field_imm 30 (global Dune__exe__AtomicBitSet!))))
            x/552 =[int] (+ x/551 (lsr x/551 8))
            x/553 =[int] (+ x/552 (lsr x/552 16)))
           (and x/553 255))))
    (setfield_ptr(root-init) 31 (global Dune__exe__AtomicBitSet!) pop32/546))
  (let
    (pop64/554 =
       (function x/556[int] : int
         (+ (apply (field_imm 31 (global Dune__exe__AtomicBitSet!)) x/556)
           (apply (field_imm 31 (global Dune__exe__AtomicBitSet!))
             (lsr x/556 32)))))
    (setfield_ptr(root-init) 32 (global Dune__exe__AtomicBitSet!) pop64/554))
  (let
    (pop/557 =
       (function x/559[int] : int
         (let (*match*/1084 = (field_imm 8 (global Stdlib__Sys!)))
           (catch
             (if (!= *match*/1084 32)
               (if (!= *match*/1084 64) (exit 8)
                 (apply (field_imm 32 (global Dune__exe__AtomicBitSet!))
                   x/559))
               (apply (field_imm 31 (global Dune__exe__AtomicBitSet!)) x/559))
            with (8)
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "src/AtomicBitSet.ml" 116 9]))))))
    (setfield_ptr(root-init) 33 (global Dune__exe__AtomicBitSet!) pop/557))
  (let (empty/560 =[int] 0)
    (setfield_ptr(root-init) 1 (global Dune__exe__AtomicBitSet!) empty/560))
  (let (is_empty/561 = (function s/563[int] : int (== s/563 0)))
    (setfield_ptr(root-init) 2 (global Dune__exe__AtomicBitSet!)
      is_empty/561))
  (let (singleton/564 = (field_imm 21 (global Dune__exe__AtomicBitSet!)))
    (setfield_ptr(root-init) 3 (global Dune__exe__AtomicBitSet!)
      singleton/564))
  (let
    (add/565 =
       (function i/567[int] s/568[int] : int
         (or (apply (field_imm 21 (global Dune__exe__AtomicBitSet!)) i/567)
           s/568)))
    (setfield_ptr(root-init) 8 (global Dune__exe__AtomicBitSet!) add/565))
  (let
    (remove/569 =
       (function i/571[int] s/572[int] : int
         (and
           (apply (field_imm 20 (global Stdlib!))
             (apply (field_imm 21 (global Dune__exe__AtomicBitSet!)) i/571))
           s/572)))
    (setfield_ptr(root-init) 9 (global Dune__exe__AtomicBitSet!) remove/569))
  (letrec
    (fold_delta/573
       (function delta/574[int] f/575 s/576[int] accu/577
         (if (== s/576 0) accu/577
           (let
             (x/578 =[int] (and s/576 (~ s/576))
              s/579 =[int] (xor s/576 x/578)
              accu/580 =
                (apply f/575
                  (+ delta/574
                    (apply (field_imm 27 (global Dune__exe__AtomicBitSet!))
                      x/578))
                  accu/577))
             (apply fold_delta/573 delta/574 f/575 s/579 accu/580)))))
    (setfield_ptr(root-init) 20 (global Dune__exe__AtomicBitSet!)
      fold_delta/573))
  (letrec
    (iter_delta/581
       (function delta/582[int] f/583 s/584[int] : int
         (if (!= s/584 0)
           (let
             (x/585 =[int] (and s/584 (~ s/584))
              s/586 =[int] (xor s/584 x/585))
             (seq
               (apply f/583
                 (+ delta/582
                   (apply (field_imm 27 (global Dune__exe__AtomicBitSet!))
                     x/585)))
               (apply iter_delta/581 delta/582 f/583 s/586)))
           0)))
    (setfield_ptr(root-init) 19 (global Dune__exe__AtomicBitSet!)
      iter_delta/581))
  (letrec
    (fold/587
       (function f/588 s/589[int] accu/590
         (if (== s/589 0) accu/590
           (let
             (x/591 =[int] (and s/589 (~ s/589))
              s/592 =[int] (xor s/589 x/591)
              accu/593 =
                (apply f/588
                  (apply (field_imm 27 (global Dune__exe__AtomicBitSet!))
                    x/591)
                  accu/590))
             (apply fold/587 f/588 s/592 accu/593)))))
    (setfield_ptr(root-init) 14 (global Dune__exe__AtomicBitSet!) fold/587))
  (letrec
    (iter/594
       (function f/595 s/596[int] : int
         (if (!= s/596 0)
           (let
             (x/597 =[int] (and s/596 (~ s/596))
              s/598 =[int] (xor s/596 x/597))
             (seq
               (apply f/595
                 (apply (field_imm 27 (global Dune__exe__AtomicBitSet!))
                   x/597))
               (apply iter/594 f/595 s/598)))
           0)))
    (setfield_ptr(root-init) 13 (global Dune__exe__AtomicBitSet!) iter/594))
  (let
    (is_singleton/599 =
       (function s/601[int] : int (== (and s/601 (- s/601 1)) 0)))
    (setfield_ptr(root-init) 4 (global Dune__exe__AtomicBitSet!)
      is_singleton/599))
  (let
    (cardinal/602 =
       (function s/604[int] : int
         (apply (field_imm 33 (global Dune__exe__AtomicBitSet!)) s/604)))
    (setfield_ptr(root-init) 5 (global Dune__exe__AtomicBitSet!)
      cardinal/602))
  (let
    (elements/605 =
       (function s/607[int]
         (apply (field_imm 14 (global Dune__exe__AtomicBitSet!))
           (function tl/608[int] hd/609 (makeblock 0 (int,*) tl/608 hd/609))
           s/607 0)))
    (setfield_ptr(root-init) 15 (global Dune__exe__AtomicBitSet!)
      elements/605))
  (let
    (subset/610 =
       (function s1/612[int] s2/613[int] : int
         (== (and s1/612 s2/613) s1/612)))
    (setfield_ptr(root-init) 18 (global Dune__exe__AtomicBitSet!) subset/610))
  (let
    (mem/614 =
       (function i/616[int] s/617[int] : int
         (apply (field_imm 18 (global Dune__exe__AtomicBitSet!))
           (apply (field_imm 3 (global Dune__exe__AtomicBitSet!)) i/616)
           s/617)))
    (setfield_ptr(root-init) 7 (global Dune__exe__AtomicBitSet!) mem/614))
  (let
    (union/618 = (function s1/620[int] s2/621[int] : int (or s1/620 s2/621)))
    (setfield_ptr(root-init) 10 (global Dune__exe__AtomicBitSet!) union/618))
  (let
    (inter/622 = (function s1/624[int] s2/625[int] : int (and s1/624 s2/625)))
    (setfield_ptr(root-init) 11 (global Dune__exe__AtomicBitSet!) inter/622))
  (let
    (minimum/626 =
       (function s/628[int] : int
         (if (== s/628 0) (raise (field_imm 7 (global Stdlib!)))
           (let (x/629 =[int] (and s/628 (~ s/628)))
             (apply (field_imm 27 (global Dune__exe__AtomicBitSet!)) x/629)))))
    (setfield_ptr(root-init) 34 (global Dune__exe__AtomicBitSet!)
      minimum/626))
  (let (choose/630 = (field_imm 34 (global Dune__exe__AtomicBitSet!)))
    (setfield_ptr(root-init) 6 (global Dune__exe__AtomicBitSet!) choose/630))
  (let
    (compare/631 =
       (function prim/1086 prim/1085 stub (compare_ints prim/1086 prim/1085)))
    (setfield_ptr(root-init) 16 (global Dune__exe__AtomicBitSet!)
      compare/631))
  (let
    (equal/632 = (function prim/1089 prim/1088 stub (== prim/1089 prim/1088)))
    (setfield_ptr(root-init) 17 (global Dune__exe__AtomicBitSet!) equal/632))
  (let
    (disjoint/633 =
       (function s1/635[int] s2/636[int] : int
         (apply (field_imm 2 (global Dune__exe__AtomicBitSet!))
           (apply (field_imm 11 (global Dune__exe__AtomicBitSet!)) s1/635
             s2/636))))
    (setfield_ptr(root-init) 12 (global Dune__exe__AtomicBitSet!)
      disjoint/633))
  0)
(seq
  (let (bound/399 =[int] (- (field_imm 8 (global Stdlib__Sys!)) 1))
    (setfield_ptr(root-init) 0 (global Dune__exe__AtomicBitSet!) bound/399))
  (let
    (bit/474 =
       (function i/476[int] : int
         (seq
           (if
             (&& (<= 0 i/476)
               (< i/476 (field_imm 0 (global Dune__exe__AtomicBitSet!))))
             0
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "src/AtomicBitSet.ml" 32 2])))
           (lsl 1 i/476))))
    (setfield_ptr(root-init) 21 (global Dune__exe__AtomicBitSet!) bit/474))
  (let (log2/477 = (caml_make_vect 255 0))
    (setfield_ptr(root-init) 22 (global Dune__exe__AtomicBitSet!) log2/477))
  (let
    (*match*/1080 =
       (for i/526 0 to 7
         (array.set[int] (field_imm 22 (global Dune__exe__AtomicBitSet!))
           (apply (field_imm 21 (global Dune__exe__AtomicBitSet!)) i/526)
           i/526)))
    0)
  (let
    (tib16/527 =
       (function accu/529[int] x/530[int] : int
         (if (== (and x/530 255) 0)
           (+ (+ accu/529 8)
             (array.get[int] (field_imm 22 (global Dune__exe__AtomicBitSet!))
               (lsr x/530 8)))
           (+ accu/529
             (array.get[int] (field_imm 22 (global Dune__exe__AtomicBitSet!))
               x/530)))))
    (setfield_ptr(root-init) 23 (global Dune__exe__AtomicBitSet!) tib16/527))
  (let
    (tib32/531 =
       (function accu/533[int] x/534[int] : int
         (if (== (and x/534 65535) 0)
           (apply (field_imm 23 (global Dune__exe__AtomicBitSet!))
             (+ accu/533 16) (lsr x/534 16))
           (apply (field_imm 23 (global Dune__exe__AtomicBitSet!)) accu/533
             x/534))))
    (setfield_ptr(root-init) 24 (global Dune__exe__AtomicBitSet!) tib32/531))
  (let (ffffffff/535 =[int] (or (lsl 65535 16) 65535))
    (setfield_ptr(root-init) 25 (global Dune__exe__AtomicBitSet!)
      ffffffff/535))
  (let
    (tib64/536 =
       (function x/538[int] : int
         (if
           (== (and x/538 (field_imm 25 (global Dune__exe__AtomicBitSet!)))
             0)
           (apply (field_imm 24 (global Dune__exe__AtomicBitSet!)) 32
             (lsr x/538 32))
           (apply (field_imm 24 (global Dune__exe__AtomicBitSet!)) 0 x/538))))
    (setfield_ptr(root-init) 26 (global Dune__exe__AtomicBitSet!) tib64/536))
  (let
    (tib/539 =
       (function x/541[int] : int
         (let (*match*/1081 = (field_imm 8 (global Stdlib__Sys!)))
           (if (!= *match*/1081 32)
             (if (!= *match*/1081 64)
               (raise
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "src/AtomicBitSet.ml" 78 9]))
               (apply (field_imm 26 (global Dune__exe__AtomicBitSet!)) x/541))
             (apply (field_imm 24 (global Dune__exe__AtomicBitSet!)) 0 x/541)))))
    (setfield_ptr(root-init) 27 (global Dune__exe__AtomicBitSet!) tib/539))
  (let
    (*match*/1083 =
       (for i/542 0 to (- (field_imm 0 (global Dune__exe__AtomicBitSet!)) 1)
         (if
           (==
             (apply (field_imm 27 (global Dune__exe__AtomicBitSet!))
               (apply (field_imm 21 (global Dune__exe__AtomicBitSet!)) i/542))
             i/542)
           0
           (raise
             (makeblock 0 (global Assert_failure/28!)
               [0: "src/AtomicBitSet.ml" 82 28])))))
    0)
  (let (b0/543 =[int] 1431655765)
    (setfield_ptr(root-init) 28 (global Dune__exe__AtomicBitSet!) b0/543))
  (let (b1/544 =[int] 858993459)
    (setfield_ptr(root-init) 29 (global Dune__exe__AtomicBitSet!) b1/544))
  (let (b2/545 =[int] 252645135)
    (setfield_ptr(root-init) 30 (global Dune__exe__AtomicBitSet!) b2/545))
  (let
    (pop32/546 =
       (function x/548[int] : int
         (let
           (x/549 =[int]
              (- x/548
                (and (lsr x/548 1)
                  (field_imm 28 (global Dune__exe__AtomicBitSet!))))
            x/550 =[int]
              (+ (and x/549 (field_imm 29 (global Dune__exe__AtomicBitSet!)))
                (and (lsr x/549 2)
                  (field_imm 29 (global Dune__exe__AtomicBitSet!))))
            x/551 =[int]
              (+ (and x/550 (field_imm 30 (global Dune__exe__AtomicBitSet!)))
                (and (lsr x/550 4)
                  (field_imm 30 (global Dune__exe__AtomicBitSet!))))
            x/552 =[int] (+ x/551 (lsr x/551 8))
            x/553 =[int] (+ x/552 (lsr x/552 16)))
           (and x/553 255))))
    (setfield_ptr(root-init) 31 (global Dune__exe__AtomicBitSet!) pop32/546))
  (let
    (pop64/554 =
       (function x/556[int] : int
         (+ (apply (field_imm 31 (global Dune__exe__AtomicBitSet!)) x/556)
           (apply (field_imm 31 (global Dune__exe__AtomicBitSet!))
             (lsr x/556 32)))))
    (setfield_ptr(root-init) 32 (global Dune__exe__AtomicBitSet!) pop64/554))
  (let
    (pop/557 =
       (function x/559[int] : int
         (let (*match*/1084 = (field_imm 8 (global Stdlib__Sys!)))
           (if (!= *match*/1084 32)
             (if (!= *match*/1084 64)
               (raise
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "src/AtomicBitSet.ml" 116 9]))
               (apply (field_imm 32 (global Dune__exe__AtomicBitSet!)) x/559))
             (apply (field_imm 31 (global Dune__exe__AtomicBitSet!)) x/559)))))
    (setfield_ptr(root-init) 33 (global Dune__exe__AtomicBitSet!) pop/557))
  (let (empty/560 =[int] 0)
    (setfield_ptr(root-init) 1 (global Dune__exe__AtomicBitSet!) empty/560))
  (let (is_empty/561 = (function s/563[int] : int (== s/563 0)))
    (setfield_ptr(root-init) 2 (global Dune__exe__AtomicBitSet!)
      is_empty/561))
  (let (singleton/564 = (field_imm 21 (global Dune__exe__AtomicBitSet!)))
    (setfield_ptr(root-init) 3 (global Dune__exe__AtomicBitSet!)
      singleton/564))
  (let
    (add/565 =
       (function i/567[int] s/568[int] : int
         (or (apply (field_imm 21 (global Dune__exe__AtomicBitSet!)) i/567)
           s/568)))
    (setfield_ptr(root-init) 8 (global Dune__exe__AtomicBitSet!) add/565))
  (let
    (remove/569 =
       (function i/571[int] s/572[int] : int
         (and
           (apply (field_imm 20 (global Stdlib!))
             (apply (field_imm 21 (global Dune__exe__AtomicBitSet!)) i/571))
           s/572)))
    (setfield_ptr(root-init) 9 (global Dune__exe__AtomicBitSet!) remove/569))
  (letrec
    (fold_delta/573
       (function delta/574[int] f/575 s/576[int] accu/577
         (if (== s/576 0) accu/577
           (let
             (x/578 =[int] (and s/576 (~ s/576))
              s/579 =[int] (xor s/576 x/578)
              accu/580 =
                (apply f/575
                  (+ delta/574
                    (apply (field_imm 27 (global Dune__exe__AtomicBitSet!))
                      x/578))
                  accu/577))
             (apply fold_delta/573 delta/574 f/575 s/579 accu/580)))))
    (setfield_ptr(root-init) 20 (global Dune__exe__AtomicBitSet!)
      fold_delta/573))
  (letrec
    (iter_delta/581
       (function delta/582[int] f/583 s/584[int] : int
         (if (!= s/584 0)
           (let
             (x/585 =[int] (and s/584 (~ s/584))
              s/586 =[int] (xor s/584 x/585))
             (seq
               (apply f/583
                 (+ delta/582
                   (apply (field_imm 27 (global Dune__exe__AtomicBitSet!))
                     x/585)))
               (apply iter_delta/581 delta/582 f/583 s/586)))
           0)))
    (setfield_ptr(root-init) 19 (global Dune__exe__AtomicBitSet!)
      iter_delta/581))
  (letrec
    (fold/587
       (function f/588 s/589[int] accu/590
         (if (== s/589 0) accu/590
           (let
             (x/591 =[int] (and s/589 (~ s/589))
              s/592 =[int] (xor s/589 x/591)
              accu/593 =
                (apply f/588
                  (apply (field_imm 27 (global Dune__exe__AtomicBitSet!))
                    x/591)
                  accu/590))
             (apply fold/587 f/588 s/592 accu/593)))))
    (setfield_ptr(root-init) 14 (global Dune__exe__AtomicBitSet!) fold/587))
  (letrec
    (iter/594
       (function f/595 s/596[int] : int
         (if (!= s/596 0)
           (let
             (x/597 =[int] (and s/596 (~ s/596))
              s/598 =[int] (xor s/596 x/597))
             (seq
               (apply f/595
                 (apply (field_imm 27 (global Dune__exe__AtomicBitSet!))
                   x/597))
               (apply iter/594 f/595 s/598)))
           0)))
    (setfield_ptr(root-init) 13 (global Dune__exe__AtomicBitSet!) iter/594))
  (let
    (is_singleton/599 =
       (function s/601[int] : int (== (and s/601 (- s/601 1)) 0)))
    (setfield_ptr(root-init) 4 (global Dune__exe__AtomicBitSet!)
      is_singleton/599))
  (let
    (cardinal/602 =
       (function s/604[int] : int
         (apply (field_imm 33 (global Dune__exe__AtomicBitSet!)) s/604)))
    (setfield_ptr(root-init) 5 (global Dune__exe__AtomicBitSet!)
      cardinal/602))
  (let
    (elements/605 =
       (function s/607[int]
         (apply (field_imm 14 (global Dune__exe__AtomicBitSet!))
           (function tl/608[int] hd/609 (makeblock 0 (int,*) tl/608 hd/609))
           s/607 0)))
    (setfield_ptr(root-init) 15 (global Dune__exe__AtomicBitSet!)
      elements/605))
  (let
    (subset/610 =
       (function s1/612[int] s2/613[int] : int
         (== (and s1/612 s2/613) s1/612)))
    (setfield_ptr(root-init) 18 (global Dune__exe__AtomicBitSet!) subset/610))
  (let
    (mem/614 =
       (function i/616[int] s/617[int] : int
         (apply (field_imm 18 (global Dune__exe__AtomicBitSet!))
           (apply (field_imm 3 (global Dune__exe__AtomicBitSet!)) i/616)
           s/617)))
    (setfield_ptr(root-init) 7 (global Dune__exe__AtomicBitSet!) mem/614))
  (let
    (union/618 = (function s1/620[int] s2/621[int] : int (or s1/620 s2/621)))
    (setfield_ptr(root-init) 10 (global Dune__exe__AtomicBitSet!) union/618))
  (let
    (inter/622 = (function s1/624[int] s2/625[int] : int (and s1/624 s2/625)))
    (setfield_ptr(root-init) 11 (global Dune__exe__AtomicBitSet!) inter/622))
  (let
    (minimum/626 =
       (function s/628[int] : int
         (if (== s/628 0) (raise (field_imm 7 (global Stdlib!)))
           (let (x/629 =[int] (and s/628 (~ s/628)))
             (apply (field_imm 27 (global Dune__exe__AtomicBitSet!)) x/629)))))
    (setfield_ptr(root-init) 34 (global Dune__exe__AtomicBitSet!)
      minimum/626))
  (let (choose/630 = (field_imm 34 (global Dune__exe__AtomicBitSet!)))
    (setfield_ptr(root-init) 6 (global Dune__exe__AtomicBitSet!) choose/630))
  (let
    (compare/631 =
       (function prim/1086 prim/1085 stub (compare_ints prim/1086 prim/1085)))
    (setfield_ptr(root-init) 16 (global Dune__exe__AtomicBitSet!)
      compare/631))
  (let
    (equal/632 = (function prim/1089 prim/1088 stub (== prim/1089 prim/1088)))
    (setfield_ptr(root-init) 17 (global Dune__exe__AtomicBitSet!) equal/632))
  (let
    (disjoint/633 =
       (function s1/635[int] s2/636[int] : int
         (apply (field_imm 2 (global Dune__exe__AtomicBitSet!))
           (apply (field_imm 11 (global Dune__exe__AtomicBitSet!)) s1/635
             s2/636))))
    (setfield_ptr(root-init) 12 (global Dune__exe__AtomicBitSet!)
      disjoint/633))
  0)
