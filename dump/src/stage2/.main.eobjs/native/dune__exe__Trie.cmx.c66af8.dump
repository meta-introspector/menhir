[
  structure_item (src/Trie.ml[14,994+0]..[14,994+12])
    Pstr_open Fresh
    module_expr (src/Trie.ml[14,994+5]..[14,994+12])
      Pmod_ident "Grammar" (src/Trie.ml[14,994+5]..[14,994+12])
  structure_item (src/Trie.ml[27,1503+0]..[36,1873+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/Trie.ml[27,1503+4]..[27,1503+14])
          Ppat_var "can_reduce" (src/Trie.ml[27,1503+4]..[27,1503+14])
        expression (src/Trie.ml[27,1503+15]..[36,1873+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/Trie.ml[27,1503+15]..[27,1503+16])
            Ppat_var "s" (src/Trie.ml[27,1503+15]..[27,1503+16])
          expression (src/Trie.ml[27,1503+17]..[36,1873+32]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/Trie.ml[27,1503+17]..[27,1503+21])
              Ppat_var "prod" (src/Trie.ml[27,1503+17]..[27,1503+21])
            expression (src/Trie.ml[28,1527+2]..[36,1873+32])
              Pexp_match
              expression (src/Trie.ml[28,1527+8]..[28,1527+39])
                Pexp_apply
                expression (src/Trie.ml[28,1527+8]..[28,1527+37])
                  Pexp_ident "Default.has_default_reduction" (src/Trie.ml[28,1527+8]..[28,1527+37])
                [
                  <arg>
                  Nolabel
                    expression (src/Trie.ml[28,1527+38]..[28,1527+39])
                      Pexp_ident "s" (src/Trie.ml[28,1527+38]..[28,1527+39])
                ]
              [
                <case>
                  pattern (src/Trie.ml[29,1572+4]..[29,1572+19])
                    Ppat_construct "Some" (src/Trie.ml[29,1572+4]..[29,1572+8])
                    Some
                      []
                      pattern (src/Trie.ml[29,1572+9]..[29,1572+19])
                        Ppat_tuple
                        [
                          pattern (src/Trie.ml[29,1572+10]..[29,1572+15])
                            Ppat_var "prod'" (src/Trie.ml[29,1572+10]..[29,1572+15])
                          pattern (src/Trie.ml[29,1572+17]..[29,1572+18])
                            Ppat_any
                        ]
                  <when>
                    expression (src/Trie.ml[29,1572+25]..[29,1572+37])
                      Pexp_apply
                      expression (src/Trie.ml[29,1572+30]..[29,1572+31])
                        Pexp_ident "=" (src/Trie.ml[29,1572+30]..[29,1572+31])
                      [
                        <arg>
                        Nolabel
                          expression (src/Trie.ml[29,1572+25]..[29,1572+29])
                            Pexp_ident "prod" (src/Trie.ml[29,1572+25]..[29,1572+29])
                        <arg>
                        Nolabel
                          expression (src/Trie.ml[29,1572+32]..[29,1572+37])
                            Pexp_ident "prod'" (src/Trie.ml[29,1572+32]..[29,1572+37])
                      ]
                  expression (src/Trie.ml[30,1613+6]..[30,1613+10])
                    Pexp_construct "true" (src/Trie.ml[30,1613+6]..[30,1613+10])
                    None
                <case>
                  pattern (src/Trie.ml[31,1624+4]..[31,1624+5])
                    Ppat_any
                  expression (src/Trie.ml[32,1633+6]..[36,1873+32])
                    Pexp_apply
                    expression (src/Trie.ml[32,1633+6]..[32,1633+22])
                      Pexp_ident "TerminalMap.fold" (src/Trie.ml[32,1633+6]..[32,1633+22])
                    [
                      <arg>
                      Nolabel
                        expression (src/Trie.ml[32,1633+23]..[36,1873+7])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/Trie.ml[32,1633+28]..[32,1633+29])
                            Ppat_var "z" (src/Trie.ml[32,1633+28]..[32,1633+29])
                          expression (src/Trie.ml[32,1633+30]..[35,1813+59]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/Trie.ml[32,1633+30]..[32,1633+35])
                              Ppat_var "prods" (src/Trie.ml[32,1633+30]..[32,1633+35])
                            expression (src/Trie.ml[32,1633+36]..[35,1813+59]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/Trie.ml[32,1633+36]..[32,1633+40])
                                Ppat_var "accu" (src/Trie.ml[32,1633+36]..[32,1633+40])
                              expression (src/Trie.ml[34,1757+8]..[35,1813+59])
                                Pexp_sequence
                                expression (src/Trie.ml[34,1757+8]..[34,1757+54])
                                  Pexp_assert
                                  expression (src/Trie.ml[34,1757+15]..[34,1757+54])
                                    Pexp_apply
                                    expression (src/Trie.ml[34,1757+16]..[34,1757+19])
                                      Pexp_ident "not" (src/Trie.ml[34,1757+16]..[34,1757+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/Trie.ml[34,1757+20]..[34,1757+53])
                                          Pexp_apply
                                          expression (src/Trie.ml[34,1757+21]..[34,1757+35])
                                            Pexp_ident "Terminal.equal" (src/Trie.ml[34,1757+21]..[34,1757+35])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/Trie.ml[34,1757+36]..[34,1757+37])
                                                Pexp_ident "z" (src/Trie.ml[34,1757+36]..[34,1757+37])
                                            <arg>
                                            Nolabel
                                              expression (src/Trie.ml[34,1757+38]..[34,1757+52])
                                                Pexp_ident "Terminal.sharp" (src/Trie.ml[34,1757+38]..[34,1757+52])
                                          ]
                                    ]
                                expression (src/Trie.ml[35,1813+8]..[35,1813+59])
                                  Pexp_apply
                                  expression (src/Trie.ml[35,1813+13]..[35,1813+15])
                                    Pexp_ident "||" (src/Trie.ml[35,1813+13]..[35,1813+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/Trie.ml[35,1813+8]..[35,1813+12])
                                        Pexp_ident "accu" (src/Trie.ml[35,1813+8]..[35,1813+12])
                                    <arg>
                                    Nolabel
                                      expression (src/Trie.ml[35,1813+16]..[35,1813+59])
                                        Pexp_apply
                                        expression (src/Trie.ml[35,1813+37]..[35,1813+39])
                                          Pexp_ident "&&" (src/Trie.ml[35,1813+37]..[35,1813+39])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/Trie.ml[35,1813+16]..[35,1813+36])
                                              Pexp_apply
                                              expression (src/Trie.ml[35,1813+16]..[35,1813+34])
                                                Pexp_ident "Terminal.non_error" (src/Trie.ml[35,1813+16]..[35,1813+34])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/Trie.ml[35,1813+35]..[35,1813+36])
                                                    Pexp_ident "z" (src/Trie.ml[35,1813+35]..[35,1813+36])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (src/Trie.ml[35,1813+40]..[35,1813+59])
                                              Pexp_apply
                                              expression (src/Trie.ml[35,1813+40]..[35,1813+48])
                                                Pexp_ident "List.mem" (src/Trie.ml[35,1813+40]..[35,1813+48])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/Trie.ml[35,1813+49]..[35,1813+53])
                                                    Pexp_ident "prod" (src/Trie.ml[35,1813+49]..[35,1813+53])
                                                <arg>
                                                Nolabel
                                                  expression (src/Trie.ml[35,1813+54]..[35,1813+59])
                                                    Pexp_ident "prods" (src/Trie.ml[35,1813+54]..[35,1813+59])
                                              ]
                                        ]
                                  ]
                      <arg>
                      Nolabel
                        expression (src/Trie.ml[36,1873+8]..[36,1873+26])
                          Pexp_apply
                          expression (src/Trie.ml[36,1873+9]..[36,1873+23])
                            Pexp_ident "Lr1.reductions" (src/Trie.ml[36,1873+9]..[36,1873+23])
                          [
                            <arg>
                            Nolabel
                              expression (src/Trie.ml[36,1873+24]..[36,1873+25])
                                Pexp_ident "s" (src/Trie.ml[36,1873+24]..[36,1873+25])
                          ]
                      <arg>
                      Nolabel
                        expression (src/Trie.ml[36,1873+27]..[36,1873+32])
                          Pexp_construct "false" (src/Trie.ml[36,1873+27]..[36,1873+32])
                          None
                    ]
              ]
    ]
  structure_item (src/Trie.ml[43,2174+0]..[53,2470+15])
    Pstr_value Rec
    [
      <def>
        pattern (src/Trie.ml[43,2174+8]..[43,2174+29])
          Ppat_var "reduction_path_exists" (src/Trie.ml[43,2174+8]..[43,2174+29])
        expression (src/Trie.ml[43,2174+30]..[53,2470+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/Trie.ml[43,2174+30]..[43,2174+31])
            Ppat_var "s" (src/Trie.ml[43,2174+30]..[43,2174+31])
          expression (src/Trie.ml[43,2174+32]..[53,2470+15]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/Trie.ml[43,2174+32]..[43,2174+51])
              Ppat_constraint
              pattern (src/Trie.ml[43,2174+33]..[43,2174+34])
                Ppat_var "w" (src/Trie.ml[43,2174+33]..[43,2174+34])
              core_type (src/Trie.ml[43,2174+37]..[43,2174+50])
                Ptyp_constr "list" (src/Trie.ml[43,2174+46]..[43,2174+50])
                [
                  core_type (src/Trie.ml[43,2174+37]..[43,2174+45])
                    Ptyp_constr "Symbol.t" (src/Trie.ml[43,2174+37]..[43,2174+45])
                    []
                ]
            expression (src/Trie.ml[43,2174+52]..[53,2470+15]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/Trie.ml[43,2174+52]..[43,2174+56])
                Ppat_var "prod" (src/Trie.ml[43,2174+52]..[43,2174+56])
              expression (src/Trie.ml[43,2174+57]..[53,2470+15])
                Pexp_constraint
                expression (src/Trie.ml[44,2240+2]..[53,2470+15])
                  Pexp_match
                  expression (src/Trie.ml[44,2240+8]..[44,2240+9])
                    Pexp_ident "w" (src/Trie.ml[44,2240+8]..[44,2240+9])
                  [
                    <case>
                      pattern (src/Trie.ml[45,2255+4]..[45,2255+6])
                        Ppat_construct "[]" (src/Trie.ml[45,2255+4]..[45,2255+6])
                        None
                      expression (src/Trie.ml[46,2265+6]..[46,2265+23])
                        Pexp_apply
                        expression (src/Trie.ml[46,2265+6]..[46,2265+16])
                          Pexp_ident "can_reduce" (src/Trie.ml[46,2265+6]..[46,2265+16])
                        [
                          <arg>
                          Nolabel
                            expression (src/Trie.ml[46,2265+17]..[46,2265+18])
                              Pexp_ident "s" (src/Trie.ml[46,2265+17]..[46,2265+18])
                          <arg>
                          Nolabel
                            expression (src/Trie.ml[46,2265+19]..[46,2265+23])
                              Pexp_ident "prod" (src/Trie.ml[46,2265+19]..[46,2265+23])
                        ]
                    <case>
                      pattern (src/Trie.ml[47,2289+4]..[47,2289+10])
                        Ppat_construct "::" (src/Trie.ml[47,2289+6]..[47,2289+8])
                        Some
                          []
                          pattern (src/Trie.ml[47,2289+4]..[47,2289+10]) ghost
                            Ppat_tuple
                            [
                              pattern (src/Trie.ml[47,2289+4]..[47,2289+5])
                                Ppat_var "a" (src/Trie.ml[47,2289+4]..[47,2289+5])
                              pattern (src/Trie.ml[47,2289+9]..[47,2289+10])
                                Ppat_var "w" (src/Trie.ml[47,2289+9]..[47,2289+10])
                            ]
                      expression (src/Trie.ml[48,2303+6]..[53,2470+15])
                        Pexp_apply
                        expression (src/Trie.ml[48,2303+25]..[48,2303+27])
                          Pexp_ident "&&" (src/Trie.ml[48,2303+25]..[48,2303+27])
                        [
                          <arg>
                          Nolabel
                            expression (src/Trie.ml[48,2303+6]..[48,2303+24])
                              Pexp_apply
                              expression (src/Trie.ml[48,2303+6]..[48,2303+22])
                                Pexp_ident "Symbol.non_error" (src/Trie.ml[48,2303+6]..[48,2303+22])
                              [
                                <arg>
                                Nolabel
                                  expression (src/Trie.ml[48,2303+23]..[48,2303+24])
                                    Pexp_ident "a" (src/Trie.ml[48,2303+23]..[48,2303+24])
                              ]
                          <arg>
                          Nolabel
                            expression (src/Trie.ml[49,2331+6]..[53,2470+15])
                              Pexp_match
                              expression (src/Trie.ml[49,2331+12]..[49,2331+48])
                                Pexp_apply
                                expression (src/Trie.ml[49,2331+12]..[49,2331+26])
                                  Pexp_ident "SymbolMap.find" (src/Trie.ml[49,2331+12]..[49,2331+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/Trie.ml[49,2331+27]..[49,2331+28])
                                      Pexp_ident "a" (src/Trie.ml[49,2331+27]..[49,2331+28])
                                  <arg>
                                  Nolabel
                                    expression (src/Trie.ml[49,2331+29]..[49,2331+48])
                                      Pexp_apply
                                      expression (src/Trie.ml[49,2331+30]..[49,2331+45])
                                        Pexp_ident "Lr1.transitions" (src/Trie.ml[49,2331+30]..[49,2331+45])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/Trie.ml[49,2331+46]..[49,2331+47])
                                            Pexp_ident "s" (src/Trie.ml[49,2331+46]..[49,2331+47])
                                      ]
                                ]
                              [
                                <case>
                                  pattern (src/Trie.ml[50,2385+8]..[50,2385+9])
                                    Ppat_var "s" (src/Trie.ml[50,2385+8]..[50,2385+9])
                                  expression (src/Trie.ml[51,2398+10]..[51,2398+40])
                                    Pexp_apply
                                    expression (src/Trie.ml[51,2398+10]..[51,2398+31])
                                      Pexp_ident "reduction_path_exists" (src/Trie.ml[51,2398+10]..[51,2398+31])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/Trie.ml[51,2398+32]..[51,2398+33])
                                          Pexp_ident "s" (src/Trie.ml[51,2398+32]..[51,2398+33])
                                      <arg>
                                      Nolabel
                                        expression (src/Trie.ml[51,2398+34]..[51,2398+35])
                                          Pexp_ident "w" (src/Trie.ml[51,2398+34]..[51,2398+35])
                                      <arg>
                                      Nolabel
                                        expression (src/Trie.ml[51,2398+36]..[51,2398+40])
                                          Pexp_ident "prod" (src/Trie.ml[51,2398+36]..[51,2398+40])
                                    ]
                                <case>
                                  pattern (src/Trie.ml[52,2439+8]..[52,2439+27])
                                    Ppat_exception
                                    pattern (src/Trie.ml[52,2439+18]..[52,2439+27])
                                      Ppat_construct "Not_found" (src/Trie.ml[52,2439+18]..[52,2439+27])
                                      None
                                  expression (src/Trie.ml[53,2470+10]..[53,2470+15])
                                    Pexp_construct "false" (src/Trie.ml[53,2470+10]..[53,2470+15])
                                    None
                              ]
                        ]
                  ]
                core_type (src/Trie.ml[43,2174+59]..[43,2174+63])
                  Ptyp_constr "bool" (src/Trie.ml[43,2174+59]..[43,2174+63])
                  []
    ]
  structure_item (src/Trie.ml[59,2583+0]..[225,8391+3])
    Pstr_module
    "Make" (src/Trie.ml[59,2583+7]..[59,2583+11])
      module_expr (src/Trie.ml[59,2583+12]..[225,8391+3])
        Pmod_functor "X" (src/Trie.ml[59,2583+13]..[59,2583+14])
        module_type (src/Trie.ml[59,2583+17]..[59,2583+24])
          Pmty_signature
          []
        module_expr (src/Trie.ml[59,2583+28]..[225,8391+3])
          Pmod_structure
          [
            structure_item (src/Trie.ml[63,2664+2]..[80,3543+3])
              Pstr_type Rec
              [
                type_declaration "trie" (src/Trie.ml[63,2664+7]..[63,2664+11]) (src/Trie.ml[63,2664+2]..[80,3543+3])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_record
                      [
                        (src/Trie.ml[67,2846+4]..[67,2846+18])
                          Immutable
                          "identity" (src/Trie.ml[67,2846+4]..[67,2846+12])                          core_type (src/Trie.ml[67,2846+14]..[67,2846+17])
                            Ptyp_constr "int" (src/Trie.ml[67,2846+14]..[67,2846+17])
                            []
                        (src/Trie.ml[69,2926+4]..[69,2926+21])
                          Immutable
                          "source" (src/Trie.ml[69,2926+4]..[69,2926+10])                          core_type (src/Trie.ml[69,2926+12]..[69,2926+20])
                            Ptyp_constr "Lr1.node" (src/Trie.ml[69,2926+12]..[69,2926+20])
                            []
                        (src/Trie.ml[71,3026+4]..[71,3026+22])
                          Immutable
                          "current" (src/Trie.ml[71,3026+4]..[71,3026+11])                          core_type (src/Trie.ml[71,3026+13]..[71,3026+21])
                            Ptyp_constr "Lr1.node" (src/Trie.ml[71,3026+13]..[71,3026+21])
                            []
                        (src/Trie.ml[75,3270+4]..[75,3270+47])
                          Mutable
                          "productions" (src/Trie.ml[75,3270+12]..[75,3270+23])                          core_type (src/Trie.ml[75,3270+25]..[75,3270+46])
                            Ptyp_constr "list" (src/Trie.ml[75,3270+42]..[75,3270+46])
                            [
                              core_type (src/Trie.ml[75,3270+25]..[75,3270+41])
                                Ptyp_constr "Production.index" (src/Trie.ml[75,3270+25]..[75,3270+41])
                                []
                            ]
                        (src/Trie.ml[77,3356+4]..[77,3356+41])
                          Mutable
                          "transitions" (src/Trie.ml[77,3356+12]..[77,3356+23])                          core_type (src/Trie.ml[77,3356+25]..[77,3356+41])
                            Ptyp_constr "SymbolMap.t" (src/Trie.ml[77,3356+30]..[77,3356+41])
                            [
                              core_type (src/Trie.ml[77,3356+25]..[77,3356+29])
                                Ptyp_constr "trie" (src/Trie.ml[77,3356+25]..[77,3356+29])
                                []
                            ]
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (src/Trie.ml[83,3619+2]..[83,3619+15])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/Trie.ml[83,3619+6]..[83,3619+7])
                    Ppat_var "c" (src/Trie.ml[83,3619+6]..[83,3619+7])
                  expression (src/Trie.ml[83,3619+10]..[83,3619+15])
                    Pexp_apply
                    expression (src/Trie.ml[83,3619+10]..[83,3619+13])
                      Pexp_ident "ref" (src/Trie.ml[83,3619+10]..[83,3619+13])
                    [
                      <arg>
                      Nolabel
                        expression (src/Trie.ml[83,3619+14]..[83,3619+15])
                          Pexp_constant PConst_int (0,None)
                    ]
              ]
            structure_item (src/Trie.ml[87,3766+2]..[91,3970+38])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/Trie.ml[87,3766+6]..[87,3766+11])
                    Ppat_var "tries" (src/Trie.ml[87,3766+6]..[87,3766+11])
                  expression (src/Trie.ml[88,3780+4]..[91,3970+38])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/Trie.ml[88,3780+8]..[88,3780+9])
                          Ppat_var "s" (src/Trie.ml[88,3780+8]..[88,3780+9])
                        core_type (src/Trie.ml[88,3780+12]..[88,3780+20])
                          Ptyp_constr "Lr1.node" (src/Trie.ml[88,3780+12]..[88,3780+20])
                          []
                        expression (src/Trie.ml[88,3780+23]..[88,3780+35])
                          Pexp_apply
                          expression (src/Trie.ml[88,3780+23]..[88,3780+32])
                            Pexp_ident "Obj.magic" (src/Trie.ml[88,3780+23]..[88,3780+32])
                          [
                            <arg>
                            Nolabel
                              expression (src/Trie.ml[88,3780+33]..[88,3780+35])
                                Pexp_construct "()" (src/Trie.ml[88,3780+33]..[88,3780+35])
                                None
                          ]
                    ]
                    expression (src/Trie.ml[89,3841+4]..[91,3970+38])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/Trie.ml[89,3841+8]..[89,3841+13])
                            Ppat_var "dummy" (src/Trie.ml[89,3841+8]..[89,3841+13])
                          expression (src/Trie.ml[89,3841+16]..[90,3899+67])
                            Pexp_record
                            [
                              "identity" (src/Trie.ml[89,3841+18]..[89,3841+26])
                                expression (src/Trie.ml[89,3841+29]..[89,3841+31])
                                  Pexp_constant PConst_int (-1,None)
                              "source" (src/Trie.ml[89,3841+33]..[89,3841+39])
                                expression (src/Trie.ml[89,3841+42]..[89,3841+43])
                                  Pexp_ident "s" (src/Trie.ml[89,3841+42]..[89,3841+43])
                              "current" (src/Trie.ml[89,3841+45]..[89,3841+52])
                                expression (src/Trie.ml[89,3841+55]..[89,3841+56])
                                  Pexp_ident "s" (src/Trie.ml[89,3841+55]..[89,3841+56])
                              "productions" (src/Trie.ml[90,3899+18]..[90,3899+29])
                                expression (src/Trie.ml[90,3899+32]..[90,3899+34])
                                  Pexp_construct "[]" (src/Trie.ml[90,3899+32]..[90,3899+34])
                                  None
                              "transitions" (src/Trie.ml[90,3899+36]..[90,3899+47])
                                expression (src/Trie.ml[90,3899+50]..[90,3899+65])
                                  Pexp_ident "SymbolMap.empty" (src/Trie.ml[90,3899+50]..[90,3899+65])
                            ]
                            None
                      ]
                      expression (src/Trie.ml[91,3970+4]..[91,3970+38])
                        Pexp_apply
                        expression (src/Trie.ml[91,3970+4]..[91,3970+32])
                          Pexp_ident "MenhirLib.InfiniteArray.make" (src/Trie.ml[91,3970+4]..[91,3970+32])
                        [
                          <arg>
                          Nolabel
                            expression (src/Trie.ml[91,3970+33]..[91,3970+38])
                              Pexp_ident "dummy" (src/Trie.ml[91,3970+33]..[91,3970+38])
                        ]
              ]
            structure_item (src/Trie.ml[94,4084+2]..[98,4302+5])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/Trie.ml[94,4084+6]..[94,4084+12])
                    Ppat_var "mktrie" (src/Trie.ml[94,4084+6]..[94,4084+12])
                  expression (src/Trie.ml[94,4084+13]..[98,4302+5]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/Trie.ml[94,4084+13]..[94,4084+19])
                      Ppat_var "source" (src/Trie.ml[94,4084+13]..[94,4084+19])
                    expression (src/Trie.ml[94,4084+20]..[98,4302+5]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/Trie.ml[94,4084+20]..[94,4084+27])
                        Ppat_var "current" (src/Trie.ml[94,4084+20]..[94,4084+27])
                      expression (src/Trie.ml[94,4084+28]..[98,4302+5]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/Trie.ml[94,4084+28]..[94,4084+39])
                          Ppat_var "productions" (src/Trie.ml[94,4084+28]..[94,4084+39])
                        expression (src/Trie.ml[94,4084+40]..[98,4302+5]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/Trie.ml[94,4084+40]..[94,4084+51])
                            Ppat_var "transitions" (src/Trie.ml[94,4084+40]..[94,4084+51])
                          expression (src/Trie.ml[95,4138+4]..[98,4302+5])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/Trie.ml[95,4138+8]..[95,4138+16])
                                  Ppat_var "identity" (src/Trie.ml[95,4138+8]..[95,4138+16])
                                expression (src/Trie.ml[95,4138+19]..[95,4138+39])
                                  Pexp_apply
                                  expression (src/Trie.ml[95,4138+19]..[95,4138+37])
                                    Pexp_ident "Misc.postincrement" (src/Trie.ml[95,4138+19]..[95,4138+37])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/Trie.ml[95,4138+38]..[95,4138+39])
                                        Pexp_ident "c" (src/Trie.ml[95,4138+38]..[95,4138+39])
                                  ]
                            ]
                            expression (src/Trie.ml[96,4181+4]..[98,4302+5])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/Trie.ml[96,4181+8]..[96,4181+9])
                                    Ppat_var "t" (src/Trie.ml[96,4181+8]..[96,4181+9])
                                  expression (src/Trie.ml[96,4181+12]..[96,4181+67])
                                    Pexp_record
                                    [
                                      "identity" (src/Trie.ml[96,4181+14]..[96,4181+22]) ghost
                                        expression (src/Trie.ml[96,4181+14]..[96,4181+22])
                                          Pexp_ident "identity" (src/Trie.ml[96,4181+14]..[96,4181+22])
                                      "source" (src/Trie.ml[96,4181+24]..[96,4181+30]) ghost
                                        expression (src/Trie.ml[96,4181+24]..[96,4181+30])
                                          Pexp_ident "source" (src/Trie.ml[96,4181+24]..[96,4181+30])
                                      "current" (src/Trie.ml[96,4181+32]..[96,4181+39]) ghost
                                        expression (src/Trie.ml[96,4181+32]..[96,4181+39])
                                          Pexp_ident "current" (src/Trie.ml[96,4181+32]..[96,4181+39])
                                      "productions" (src/Trie.ml[96,4181+41]..[96,4181+52]) ghost
                                        expression (src/Trie.ml[96,4181+41]..[96,4181+52])
                                          Pexp_ident "productions" (src/Trie.ml[96,4181+41]..[96,4181+52])
                                      "transitions" (src/Trie.ml[96,4181+54]..[96,4181+65]) ghost
                                        expression (src/Trie.ml[96,4181+54]..[96,4181+65])
                                          Pexp_ident "transitions" (src/Trie.ml[96,4181+54]..[96,4181+65])
                                    ]
                                    None
                              ]
                              expression (src/Trie.ml[97,4252+4]..[98,4302+5])
                                Pexp_sequence
                                expression (src/Trie.ml[97,4252+4]..[97,4252+48])
                                  Pexp_apply
                                  expression (src/Trie.ml[97,4252+4]..[97,4252+31])
                                    Pexp_ident "MenhirLib.InfiniteArray.set" (src/Trie.ml[97,4252+4]..[97,4252+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/Trie.ml[97,4252+32]..[97,4252+37])
                                        Pexp_ident "tries" (src/Trie.ml[97,4252+32]..[97,4252+37])
                                    <arg>
                                    Nolabel
                                      expression (src/Trie.ml[97,4252+38]..[97,4252+46])
                                        Pexp_ident "identity" (src/Trie.ml[97,4252+38]..[97,4252+46])
                                    <arg>
                                    Nolabel
                                      expression (src/Trie.ml[97,4252+47]..[97,4252+48])
                                        Pexp_ident "t" (src/Trie.ml[97,4252+47]..[97,4252+48])
                                  ]
                                expression (src/Trie.ml[98,4302+4]..[98,4302+5])
                                  Pexp_ident "t" (src/Trie.ml[98,4302+4]..[98,4302+5])
              ]
            structure_item (src/Trie.ml[106,4694+2]..[126,5420+28])
              Pstr_value Rec
              [
                <def>
                  pattern (src/Trie.ml[106,4694+10]..[106,4694+16])
                    Ppat_var "insert" (src/Trie.ml[106,4694+10]..[106,4694+16])
                  expression (src/Trie.ml[106,4694+17]..[126,5420+28]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/Trie.ml[106,4694+17]..[106,4694+27])
                      Ppat_constraint
                      pattern (src/Trie.ml[106,4694+18]..[106,4694+19])
                        Ppat_var "t" (src/Trie.ml[106,4694+18]..[106,4694+19])
                      core_type (src/Trie.ml[106,4694+22]..[106,4694+26])
                        Ptyp_constr "trie" (src/Trie.ml[106,4694+22]..[106,4694+26])
                        []
                    expression (src/Trie.ml[106,4694+28]..[126,5420+28]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/Trie.ml[106,4694+28]..[106,4694+47])
                        Ppat_constraint
                        pattern (src/Trie.ml[106,4694+29]..[106,4694+30])
                          Ppat_var "w" (src/Trie.ml[106,4694+29]..[106,4694+30])
                        core_type (src/Trie.ml[106,4694+33]..[106,4694+46])
                          Ptyp_constr "list" (src/Trie.ml[106,4694+42]..[106,4694+46])
                          [
                            core_type (src/Trie.ml[106,4694+33]..[106,4694+41])
                              Ptyp_constr "Symbol.t" (src/Trie.ml[106,4694+33]..[106,4694+41])
                              []
                          ]
                      expression (src/Trie.ml[106,4694+48]..[126,5420+28]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/Trie.ml[106,4694+48]..[106,4694+52])
                          Ppat_var "prod" (src/Trie.ml[106,4694+48]..[106,4694+52])
                        expression (src/Trie.ml[106,4694+53]..[126,5420+28])
                          Pexp_constraint
                          expression (src/Trie.ml[107,4756+4]..[126,5420+28])
                            Pexp_match
                            expression (src/Trie.ml[107,4756+10]..[107,4756+11])
                              Pexp_ident "w" (src/Trie.ml[107,4756+10]..[107,4756+11])
                            [
                              <case>
                                pattern (src/Trie.ml[108,4773+6]..[108,4773+8])
                                  Ppat_construct "[]" (src/Trie.ml[108,4773+6]..[108,4773+8])
                                  None
                                expression (src/Trie.ml[109,4785+8]..[110,4829+46])
                                  Pexp_sequence
                                  expression (src/Trie.ml[109,4785+8]..[109,4785+42])
                                    Pexp_assert
                                    expression (src/Trie.ml[109,4785+15]..[109,4785+42])
                                      Pexp_apply
                                      expression (src/Trie.ml[109,4785+16]..[109,4785+26])
                                        Pexp_ident "can_reduce" (src/Trie.ml[109,4785+16]..[109,4785+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/Trie.ml[109,4785+27]..[109,4785+36])
                                            Pexp_field
                                            expression (src/Trie.ml[109,4785+27]..[109,4785+28])
                                              Pexp_ident "t" (src/Trie.ml[109,4785+27]..[109,4785+28])
                                            "current" (src/Trie.ml[109,4785+29]..[109,4785+36])
                                        <arg>
                                        Nolabel
                                          expression (src/Trie.ml[109,4785+37]..[109,4785+41])
                                            Pexp_ident "prod" (src/Trie.ml[109,4785+37]..[109,4785+41])
                                      ]
                                  expression (src/Trie.ml[110,4829+8]..[110,4829+46])
                                    Pexp_setfield
                                    expression (src/Trie.ml[110,4829+8]..[110,4829+9])
                                      Pexp_ident "t" (src/Trie.ml[110,4829+8]..[110,4829+9])
                                    "productions" (src/Trie.ml[110,4829+10]..[110,4829+21])
                                    expression (src/Trie.ml[110,4829+25]..[110,4829+46])
                                      Pexp_construct "::" (src/Trie.ml[110,4829+30]..[110,4829+32])
                                      Some
                                        expression (src/Trie.ml[110,4829+25]..[110,4829+46]) ghost
                                          Pexp_tuple
                                          [
                                            expression (src/Trie.ml[110,4829+25]..[110,4829+29])
                                              Pexp_ident "prod" (src/Trie.ml[110,4829+25]..[110,4829+29])
                                            expression (src/Trie.ml[110,4829+33]..[110,4829+46])
                                              Pexp_field
                                              expression (src/Trie.ml[110,4829+33]..[110,4829+34])
                                                Pexp_ident "t" (src/Trie.ml[110,4829+33]..[110,4829+34])
                                              "productions" (src/Trie.ml[110,4829+35]..[110,4829+46])
                                          ]
                              <case>
                                pattern (src/Trie.ml[111,4876+6]..[111,4876+12])
                                  Ppat_construct "::" (src/Trie.ml[111,4876+8]..[111,4876+10])
                                  Some
                                    []
                                    pattern (src/Trie.ml[111,4876+6]..[111,4876+12]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (src/Trie.ml[111,4876+6]..[111,4876+7])
                                          Ppat_var "a" (src/Trie.ml[111,4876+6]..[111,4876+7])
                                        pattern (src/Trie.ml[111,4876+11]..[111,4876+12])
                                          Ppat_var "w" (src/Trie.ml[111,4876+11]..[111,4876+12])
                                      ]
                                expression (src/Trie.ml[112,4892+8]..[126,5420+28])
                                  Pexp_match
                                  expression (src/Trie.ml[112,4892+14]..[112,4892+58])
                                    Pexp_apply
                                    expression (src/Trie.ml[112,4892+14]..[112,4892+28])
                                      Pexp_ident "SymbolMap.find" (src/Trie.ml[112,4892+14]..[112,4892+28])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/Trie.ml[112,4892+29]..[112,4892+30])
                                          Pexp_ident "a" (src/Trie.ml[112,4892+29]..[112,4892+30])
                                      <arg>
                                      Nolabel
                                        expression (src/Trie.ml[112,4892+31]..[112,4892+58])
                                          Pexp_apply
                                          expression (src/Trie.ml[112,4892+32]..[112,4892+47])
                                            Pexp_ident "Lr1.transitions" (src/Trie.ml[112,4892+32]..[112,4892+47])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/Trie.ml[112,4892+48]..[112,4892+57])
                                                Pexp_field
                                                expression (src/Trie.ml[112,4892+48]..[112,4892+49])
                                                  Pexp_ident "t" (src/Trie.ml[112,4892+48]..[112,4892+49])
                                                "current" (src/Trie.ml[112,4892+50]..[112,4892+57])
                                          ]
                                    ]
                                  [
                                    <case>
                                      pattern (src/Trie.ml[113,4956+10]..[113,4956+29])
                                        Ppat_exception
                                        pattern (src/Trie.ml[113,4956+20]..[113,4956+29])
                                          Ppat_construct "Not_found" (src/Trie.ml[113,4956+20]..[113,4956+29])
                                          None
                                      expression (src/Trie.ml[114,4989+12]..[114,4989+24])
                                        Pexp_assert
                                        expression (src/Trie.ml[114,4989+19]..[114,4989+24])
                                          Pexp_construct "false" (src/Trie.ml[114,4989+19]..[114,4989+24])
                                          None
                                    <case>
                                      pattern (src/Trie.ml[115,5014+10]..[115,5014+19])
                                        Ppat_var "successor" (src/Trie.ml[115,5014+10]..[115,5014+19])
                                      expression (src/Trie.ml[117,5092+12]..[126,5420+28])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/Trie.ml[117,5092+16]..[117,5092+18])
                                              Ppat_var "t'" (src/Trie.ml[117,5092+16]..[117,5092+18])
                                            expression (src/Trie.ml[118,5113+14]..[123,5350+18])
                                              Pexp_try
                                              expression (src/Trie.ml[119,5131+16]..[119,5131+46])
                                                Pexp_apply
                                                expression (src/Trie.ml[119,5131+16]..[119,5131+30])
                                                  Pexp_ident "SymbolMap.find" (src/Trie.ml[119,5131+16]..[119,5131+30])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/Trie.ml[119,5131+31]..[119,5131+32])
                                                      Pexp_ident "a" (src/Trie.ml[119,5131+31]..[119,5131+32])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/Trie.ml[119,5131+33]..[119,5131+46])
                                                      Pexp_field
                                                      expression (src/Trie.ml[119,5131+33]..[119,5131+34])
                                                        Pexp_ident "t" (src/Trie.ml[119,5131+33]..[119,5131+34])
                                                      "transitions" (src/Trie.ml[119,5131+35]..[119,5131+46])
                                                ]
                                              [
                                                <case>
                                                  pattern (src/Trie.ml[120,5178+19]..[120,5178+28])
                                                    Ppat_construct "Not_found" (src/Trie.ml[120,5178+19]..[120,5178+28])
                                                    None
                                                  expression (src/Trie.ml[121,5210+16]..[123,5350+18])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (src/Trie.ml[121,5210+20]..[121,5210+22])
                                                          Ppat_var "t'" (src/Trie.ml[121,5210+20]..[121,5210+22])
                                                        expression (src/Trie.ml[121,5210+25]..[121,5210+69])
                                                          Pexp_apply
                                                          expression (src/Trie.ml[121,5210+25]..[121,5210+31])
                                                            Pexp_ident "mktrie" (src/Trie.ml[121,5210+25]..[121,5210+31])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/Trie.ml[121,5210+32]..[121,5210+40])
                                                                Pexp_field
                                                                expression (src/Trie.ml[121,5210+32]..[121,5210+33])
                                                                  Pexp_ident "t" (src/Trie.ml[121,5210+32]..[121,5210+33])
                                                                "source" (src/Trie.ml[121,5210+34]..[121,5210+40])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/Trie.ml[121,5210+41]..[121,5210+50])
                                                                Pexp_ident "successor" (src/Trie.ml[121,5210+41]..[121,5210+50])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/Trie.ml[121,5210+51]..[121,5210+53])
                                                                Pexp_construct "[]" (src/Trie.ml[121,5210+51]..[121,5210+53])
                                                                None
                                                            <arg>
                                                            Nolabel
                                                              expression (src/Trie.ml[121,5210+54]..[121,5210+69])
                                                                Pexp_ident "SymbolMap.empty" (src/Trie.ml[121,5210+54]..[121,5210+69])
                                                          ]
                                                    ]
                                                    expression (src/Trie.ml[122,5283+16]..[123,5350+18])
                                                      Pexp_sequence
                                                      expression (src/Trie.ml[122,5283+16]..[122,5283+65])
                                                        Pexp_setfield
                                                        expression (src/Trie.ml[122,5283+16]..[122,5283+17])
                                                          Pexp_ident "t" (src/Trie.ml[122,5283+16]..[122,5283+17])
                                                        "transitions" (src/Trie.ml[122,5283+18]..[122,5283+29])
                                                        expression (src/Trie.ml[122,5283+33]..[122,5283+65])
                                                          Pexp_apply
                                                          expression (src/Trie.ml[122,5283+33]..[122,5283+46])
                                                            Pexp_ident "SymbolMap.add" (src/Trie.ml[122,5283+33]..[122,5283+46])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/Trie.ml[122,5283+47]..[122,5283+48])
                                                                Pexp_ident "a" (src/Trie.ml[122,5283+47]..[122,5283+48])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/Trie.ml[122,5283+49]..[122,5283+51])
                                                                Pexp_ident "t'" (src/Trie.ml[122,5283+49]..[122,5283+51])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/Trie.ml[122,5283+52]..[122,5283+65])
                                                                Pexp_field
                                                                expression (src/Trie.ml[122,5283+52]..[122,5283+53])
                                                                  Pexp_ident "t" (src/Trie.ml[122,5283+52]..[122,5283+53])
                                                                "transitions" (src/Trie.ml[122,5283+54]..[122,5283+65])
                                                          ]
                                                      expression (src/Trie.ml[123,5350+16]..[123,5350+18])
                                                        Pexp_ident "t'" (src/Trie.ml[123,5350+16]..[123,5350+18])
                                              ]
                                        ]
                                        expression (src/Trie.ml[126,5420+12]..[126,5420+28])
                                          Pexp_apply
                                          expression (src/Trie.ml[126,5420+12]..[126,5420+18])
                                            Pexp_ident "insert" (src/Trie.ml[126,5420+12]..[126,5420+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/Trie.ml[126,5420+19]..[126,5420+21])
                                                Pexp_ident "t'" (src/Trie.ml[126,5420+19]..[126,5420+21])
                                            <arg>
                                            Nolabel
                                              expression (src/Trie.ml[126,5420+22]..[126,5420+23])
                                                Pexp_ident "w" (src/Trie.ml[126,5420+22]..[126,5420+23])
                                            <arg>
                                            Nolabel
                                              expression (src/Trie.ml[126,5420+24]..[126,5420+28])
                                                Pexp_ident "prod" (src/Trie.ml[126,5420+24]..[126,5420+28])
                                          ]
                                  ]
                            ]
                          core_type (src/Trie.ml[106,4694+55]..[106,4694+59])
                            Ptyp_constr "unit" (src/Trie.ml[106,4694+55]..[106,4694+59])
                            []
              ]
            structure_item (src/Trie.ml[130,5583+2]..[140,6165+21])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/Trie.ml[130,5583+6]..[130,5583+12])
                    Ppat_var "insert" (src/Trie.ml[130,5583+6]..[130,5583+12])
                  expression (src/Trie.ml[130,5583+13]..[140,6165+21]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/Trie.ml[130,5583+13]..[130,5583+14])
                      Ppat_var "t" (src/Trie.ml[130,5583+13]..[130,5583+14])
                    expression (src/Trie.ml[130,5583+15]..[140,6165+21]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/Trie.ml[130,5583+15]..[130,5583+19])
                        Ppat_var "prod" (src/Trie.ml[130,5583+15]..[130,5583+19])
                      expression (src/Trie.ml[130,5583+20]..[140,6165+21])
                        Pexp_constraint
                        expression (src/Trie.ml[131,5612+4]..[140,6165+21])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/Trie.ml[131,5612+8]..[131,5612+9])
                                Ppat_var "w" (src/Trie.ml[131,5612+8]..[131,5612+9])
                              expression (src/Trie.ml[131,5612+12]..[131,5612+47])
                                Pexp_apply
                                expression (src/Trie.ml[131,5612+12]..[131,5612+25])
                                  Pexp_ident "Array.to_list" (src/Trie.ml[131,5612+12]..[131,5612+25])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/Trie.ml[131,5612+26]..[131,5612+47])
                                      Pexp_apply
                                      expression (src/Trie.ml[131,5612+27]..[131,5612+41])
                                        Pexp_ident "Production.rhs" (src/Trie.ml[131,5612+27]..[131,5612+41])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/Trie.ml[131,5612+42]..[131,5612+46])
                                            Pexp_ident "prod" (src/Trie.ml[131,5612+42]..[131,5612+46])
                                      ]
                                ]
                          ]
                          expression (src/Trie.ml[139,6114+4]..[140,6165+21])
                            Pexp_ifthenelse
                            expression (src/Trie.ml[139,6114+7]..[139,6114+45])
                              Pexp_apply
                              expression (src/Trie.ml[139,6114+7]..[139,6114+28])
                                Pexp_ident "reduction_path_exists" (src/Trie.ml[139,6114+7]..[139,6114+28])
                              [
                                <arg>
                                Nolabel
                                  expression (src/Trie.ml[139,6114+29]..[139,6114+38])
                                    Pexp_field
                                    expression (src/Trie.ml[139,6114+29]..[139,6114+30])
                                      Pexp_ident "t" (src/Trie.ml[139,6114+29]..[139,6114+30])
                                    "current" (src/Trie.ml[139,6114+31]..[139,6114+38])
                                <arg>
                                Nolabel
                                  expression (src/Trie.ml[139,6114+39]..[139,6114+40])
                                    Pexp_ident "w" (src/Trie.ml[139,6114+39]..[139,6114+40])
                                <arg>
                                Nolabel
                                  expression (src/Trie.ml[139,6114+41]..[139,6114+45])
                                    Pexp_ident "prod" (src/Trie.ml[139,6114+41]..[139,6114+45])
                              ]
                            expression (src/Trie.ml[140,6165+6]..[140,6165+21])
                              Pexp_apply
                              expression (src/Trie.ml[140,6165+6]..[140,6165+12])
                                Pexp_ident "insert" (src/Trie.ml[140,6165+6]..[140,6165+12])
                              [
                                <arg>
                                Nolabel
                                  expression (src/Trie.ml[140,6165+13]..[140,6165+14])
                                    Pexp_ident "t" (src/Trie.ml[140,6165+13]..[140,6165+14])
                                <arg>
                                Nolabel
                                  expression (src/Trie.ml[140,6165+15]..[140,6165+16])
                                    Pexp_ident "w" (src/Trie.ml[140,6165+15]..[140,6165+16])
                                <arg>
                                Nolabel
                                  expression (src/Trie.ml[140,6165+17]..[140,6165+21])
                                    Pexp_ident "prod" (src/Trie.ml[140,6165+17]..[140,6165+21])
                              ]
                            None
                        core_type (src/Trie.ml[130,5583+22]..[130,5583+26])
                          Ptyp_constr "unit" (src/Trie.ml[130,5583+22]..[130,5583+26])
                          []
              ]
            structure_item (src/Trie.ml[143,6252+2]..[144,6273+43])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/Trie.ml[143,6252+6]..[143,6252+11])
                    Ppat_var "fresh" (src/Trie.ml[143,6252+6]..[143,6252+11])
                  expression (src/Trie.ml[143,6252+12]..[144,6273+43]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/Trie.ml[143,6252+12]..[143,6252+18])
                      Ppat_var "source" (src/Trie.ml[143,6252+12]..[143,6252+18])
                    expression (src/Trie.ml[144,6273+4]..[144,6273+43])
                      Pexp_apply
                      expression (src/Trie.ml[144,6273+4]..[144,6273+10])
                        Pexp_ident "mktrie" (src/Trie.ml[144,6273+4]..[144,6273+10])
                      [
                        <arg>
                        Nolabel
                          expression (src/Trie.ml[144,6273+11]..[144,6273+17])
                            Pexp_ident "source" (src/Trie.ml[144,6273+11]..[144,6273+17])
                        <arg>
                        Nolabel
                          expression (src/Trie.ml[144,6273+18]..[144,6273+24])
                            Pexp_ident "source" (src/Trie.ml[144,6273+18]..[144,6273+24])
                        <arg>
                        Nolabel
                          expression (src/Trie.ml[144,6273+25]..[144,6273+27])
                            Pexp_construct "[]" (src/Trie.ml[144,6273+25]..[144,6273+27])
                            None
                        <arg>
                        Nolabel
                          expression (src/Trie.ml[144,6273+28]..[144,6273+43])
                            Pexp_ident "SymbolMap.empty" (src/Trie.ml[144,6273+28]..[144,6273+43])
                      ]
              ]
            structure_item (src/Trie.ml[149,6513+2]..[158,6732+5])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/Trie.ml[149,6513+6]..[149,6513+10])
                    Ppat_var "star" (src/Trie.ml[149,6513+6]..[149,6513+10])
                  expression (src/Trie.ml[149,6513+11]..[158,6732+5]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/Trie.ml[149,6513+11]..[149,6513+12])
                      Ppat_var "s" (src/Trie.ml[149,6513+11]..[149,6513+12])
                    expression (src/Trie.ml[150,6528+4]..[158,6732+5])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/Trie.ml[150,6528+8]..[150,6528+9])
                            Ppat_var "t" (src/Trie.ml[150,6528+8]..[150,6528+9])
                          expression (src/Trie.ml[150,6528+12]..[150,6528+19])
                            Pexp_apply
                            expression (src/Trie.ml[150,6528+12]..[150,6528+17])
                              Pexp_ident "fresh" (src/Trie.ml[150,6528+12]..[150,6528+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/Trie.ml[150,6528+18]..[150,6528+19])
                                  Pexp_ident "s" (src/Trie.ml[150,6528+18]..[150,6528+19])
                            ]
                      ]
                      expression (src/Trie.ml[151,6551+4]..[158,6732+5])
                        Pexp_sequence
                        expression (src/Trie.ml[151,6551+4]..[157,6705+25])
                          Pexp_apply
                          expression (src/Trie.ml[151,6551+4]..[151,6551+18])
                            Pexp_ident "SymbolMap.iter" (src/Trie.ml[151,6551+4]..[151,6551+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/Trie.ml[151,6551+19]..[157,6705+5])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/Trie.ml[151,6551+24]..[151,6551+27])
                                  Ppat_var "sym" (src/Trie.ml[151,6551+24]..[151,6551+27])
                                expression (src/Trie.ml[151,6551+28]..[156,6663+41]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/Trie.ml[151,6551+28]..[151,6551+29])
                                    Ppat_any
                                  expression (src/Trie.ml[152,6584+6]..[156,6663+41])
                                    Pexp_match
                                    expression (src/Trie.ml[152,6584+12]..[152,6584+15])
                                      Pexp_ident "sym" (src/Trie.ml[152,6584+12]..[152,6584+15])
                                    [
                                      <case>
                                        pattern (src/Trie.ml[153,6605+8]..[153,6605+18])
                                          Ppat_construct "Symbol.T" (src/Trie.ml[153,6605+8]..[153,6605+16])
                                          Some
                                            []
                                            pattern (src/Trie.ml[153,6605+17]..[153,6605+18])
                                              Ppat_any
                                        expression (src/Trie.ml[154,6627+10]..[154,6627+12])
                                          Pexp_construct "()" (src/Trie.ml[154,6627+10]..[154,6627+12])
                                          None
                                      <case>
                                        pattern (src/Trie.ml[155,6640+8]..[155,6640+19])
                                          Ppat_construct "Symbol.N" (src/Trie.ml[155,6640+8]..[155,6640+16])
                                          Some
                                            []
                                            pattern (src/Trie.ml[155,6640+17]..[155,6640+19])
                                              Ppat_var "nt" (src/Trie.ml[155,6640+17]..[155,6640+19])
                                        expression (src/Trie.ml[156,6663+10]..[156,6663+41])
                                          Pexp_apply
                                          expression (src/Trie.ml[156,6663+10]..[156,6663+27])
                                            Pexp_ident "Production.iternt" (src/Trie.ml[156,6663+10]..[156,6663+27])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/Trie.ml[156,6663+28]..[156,6663+30])
                                                Pexp_ident "nt" (src/Trie.ml[156,6663+28]..[156,6663+30])
                                            <arg>
                                            Nolabel
                                              expression (src/Trie.ml[156,6663+31]..[156,6663+41])
                                                Pexp_apply
                                                expression (src/Trie.ml[156,6663+32]..[156,6663+38])
                                                  Pexp_ident "insert" (src/Trie.ml[156,6663+32]..[156,6663+38])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/Trie.ml[156,6663+39]..[156,6663+40])
                                                      Pexp_ident "t" (src/Trie.ml[156,6663+39]..[156,6663+40])
                                                ]
                                          ]
                                    ]
                            <arg>
                            Nolabel
                              expression (src/Trie.ml[157,6705+6]..[157,6705+25])
                                Pexp_apply
                                expression (src/Trie.ml[157,6705+7]..[157,6705+22])
                                  Pexp_ident "Lr1.transitions" (src/Trie.ml[157,6705+7]..[157,6705+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/Trie.ml[157,6705+23]..[157,6705+24])
                                      Pexp_ident "s" (src/Trie.ml[157,6705+23]..[157,6705+24])
                                ]
                          ]
                        expression (src/Trie.ml[158,6732+4]..[158,6732+5])
                          Pexp_ident "t" (src/Trie.ml[158,6732+4]..[158,6732+5])
              ]
            structure_item (src/Trie.ml[165,7080+2]..[166,7098+58])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/Trie.ml[165,7080+6]..[165,7080+13])
                    Ppat_var "trivial" (src/Trie.ml[165,7080+6]..[165,7080+13])
                  expression (src/Trie.ml[165,7080+14]..[166,7098+58]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/Trie.ml[165,7080+14]..[165,7080+15])
                      Ppat_var "t" (src/Trie.ml[165,7080+14]..[165,7080+15])
                    expression (src/Trie.ml[166,7098+4]..[166,7098+58])
                      Pexp_apply
                      expression (src/Trie.ml[166,7098+23]..[166,7098+25])
                        Pexp_ident "&&" (src/Trie.ml[166,7098+23]..[166,7098+25])
                      [
                        <arg>
                        Nolabel
                          expression (src/Trie.ml[166,7098+4]..[166,7098+22])
                            Pexp_apply
                            expression (src/Trie.ml[166,7098+18]..[166,7098+19])
                              Pexp_ident "=" (src/Trie.ml[166,7098+18]..[166,7098+19])
                            [
                              <arg>
                              Nolabel
                                expression (src/Trie.ml[166,7098+4]..[166,7098+17])
                                  Pexp_field
                                  expression (src/Trie.ml[166,7098+4]..[166,7098+5])
                                    Pexp_ident "t" (src/Trie.ml[166,7098+4]..[166,7098+5])
                                  "productions" (src/Trie.ml[166,7098+6]..[166,7098+17])
                              <arg>
                              Nolabel
                                expression (src/Trie.ml[166,7098+20]..[166,7098+22])
                                  Pexp_construct "[]" (src/Trie.ml[166,7098+20]..[166,7098+22])
                                  None
                            ]
                        <arg>
                        Nolabel
                          expression (src/Trie.ml[166,7098+26]..[166,7098+58])
                            Pexp_apply
                            expression (src/Trie.ml[166,7098+26]..[166,7098+44])
                              Pexp_ident "SymbolMap.is_empty" (src/Trie.ml[166,7098+26]..[166,7098+44])
                            [
                              <arg>
                              Nolabel
                                expression (src/Trie.ml[166,7098+45]..[166,7098+58])
                                  Pexp_field
                                  expression (src/Trie.ml[166,7098+45]..[166,7098+46])
                                    Pexp_ident "t" (src/Trie.ml[166,7098+45]..[166,7098+46])
                                  "transitions" (src/Trie.ml[166,7098+47]..[166,7098+58])
                            ]
                      ]
              ]
            structure_item (src/Trie.ml[170,7227+2]..[171,7240+25])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/Trie.ml[170,7227+6]..[170,7227+10])
                    Ppat_var "size" (src/Trie.ml[170,7227+6]..[170,7227+10])
                  expression (src/Trie.ml[171,7240+4]..[171,7240+25])
                    Pexp_apply
                    expression (src/Trie.ml[171,7240+4]..[171,7240+14])
                      Pexp_ident "Array.make" (src/Trie.ml[171,7240+4]..[171,7240+14])
                    [
                      <arg>
                      Nolabel
                        expression (src/Trie.ml[171,7240+15]..[171,7240+20])
                          Pexp_ident "Lr1.n" (src/Trie.ml[171,7240+15]..[171,7240+20])
                      <arg>
                      Nolabel
                        expression (src/Trie.ml[171,7240+21]..[171,7240+25])
                          Pexp_constant PConst_int (-1,None)
                    ]
              ]
            structure_item (src/Trie.ml[173,7267+2]..[178,7394+5])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/Trie.ml[173,7267+6]..[173,7267+10])
                    Ppat_var "star" (src/Trie.ml[173,7267+6]..[173,7267+10])
                  expression (src/Trie.ml[173,7267+11]..[178,7394+5]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/Trie.ml[173,7267+11]..[173,7267+12])
                      Ppat_var "s" (src/Trie.ml[173,7267+11]..[173,7267+12])
                    expression (src/Trie.ml[174,7282+4]..[178,7394+5])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/Trie.ml[174,7282+8]..[174,7282+15])
                            Ppat_var "initial" (src/Trie.ml[174,7282+8]..[174,7282+15])
                          expression (src/Trie.ml[174,7282+18]..[174,7282+20])
                            Pexp_apply
                            expression (src/Trie.ml[174,7282+18]..[174,7282+19])
                              Pexp_ident "!" (src/Trie.ml[174,7282+18]..[174,7282+19])
                            [
                              <arg>
                              Nolabel
                                expression (src/Trie.ml[174,7282+19]..[174,7282+20])
                                  Pexp_ident "c" (src/Trie.ml[174,7282+19]..[174,7282+20])
                            ]
                      ]
                      expression (src/Trie.ml[175,7306+4]..[178,7394+5])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/Trie.ml[175,7306+8]..[175,7306+9])
                              Ppat_var "t" (src/Trie.ml[175,7306+8]..[175,7306+9])
                            expression (src/Trie.ml[175,7306+12]..[175,7306+18])
                              Pexp_apply
                              expression (src/Trie.ml[175,7306+12]..[175,7306+16])
                                Pexp_ident "star" (src/Trie.ml[175,7306+12]..[175,7306+16])
                              [
                                <arg>
                                Nolabel
                                  expression (src/Trie.ml[175,7306+17]..[175,7306+18])
                                    Pexp_ident "s" (src/Trie.ml[175,7306+17]..[175,7306+18])
                              ]
                        ]
                        expression (src/Trie.ml[176,7328+4]..[178,7394+5])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/Trie.ml[176,7328+8]..[176,7328+13])
                                Ppat_var "final" (src/Trie.ml[176,7328+8]..[176,7328+13])
                              expression (src/Trie.ml[176,7328+16]..[176,7328+18])
                                Pexp_apply
                                expression (src/Trie.ml[176,7328+16]..[176,7328+17])
                                  Pexp_ident "!" (src/Trie.ml[176,7328+16]..[176,7328+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/Trie.ml[176,7328+17]..[176,7328+18])
                                      Pexp_ident "c" (src/Trie.ml[176,7328+17]..[176,7328+18])
                                ]
                          ]
                          expression (src/Trie.ml[177,7350+4]..[178,7394+5])
                            Pexp_sequence
                            expression (src/Trie.ml[177,7350+4]..[177,7350+42])
                              Pexp_apply
                              expression (src/Trie.ml[177,7350+4]..[177,7350+42]) ghost
                                Pexp_ident "Array.set" (src/Trie.ml[177,7350+4]..[177,7350+42]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (src/Trie.ml[177,7350+4]..[177,7350+8])
                                    Pexp_ident "size" (src/Trie.ml[177,7350+4]..[177,7350+8])
                                <arg>
                                Nolabel
                                  expression (src/Trie.ml[177,7350+10]..[177,7350+22])
                                    Pexp_apply
                                    expression (src/Trie.ml[177,7350+10]..[177,7350+20])
                                      Pexp_ident "Lr1.number" (src/Trie.ml[177,7350+10]..[177,7350+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/Trie.ml[177,7350+21]..[177,7350+22])
                                          Pexp_ident "s" (src/Trie.ml[177,7350+21]..[177,7350+22])
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/Trie.ml[177,7350+27]..[177,7350+42])
                                    Pexp_apply
                                    expression (src/Trie.ml[177,7350+33]..[177,7350+34])
                                      Pexp_ident "-" (src/Trie.ml[177,7350+33]..[177,7350+34])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/Trie.ml[177,7350+27]..[177,7350+32])
                                          Pexp_ident "final" (src/Trie.ml[177,7350+27]..[177,7350+32])
                                      <arg>
                                      Nolabel
                                        expression (src/Trie.ml[177,7350+35]..[177,7350+42])
                                          Pexp_ident "initial" (src/Trie.ml[177,7350+35]..[177,7350+42])
                                    ]
                              ]
                            expression (src/Trie.ml[178,7394+4]..[178,7394+5])
                              Pexp_ident "t" (src/Trie.ml[178,7394+4]..[178,7394+5])
              ]
            structure_item (src/Trie.ml[182,7481+2]..[189,7696+5])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/Trie.ml[182,7481+6]..[182,7481+11])
                    Ppat_var "stars" (src/Trie.ml[182,7481+6]..[182,7481+11])
                  expression (src/Trie.ml[182,7481+12]..[189,7696+5]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/Trie.ml[182,7481+12]..[182,7481+13])
                      Ppat_var "f" (src/Trie.ml[182,7481+12]..[182,7481+13])
                    expression (src/Trie.ml[184,7530+4]..[189,7696+5])
                      Pexp_apply
                      expression (src/Trie.ml[184,7530+4]..[184,7530+12])
                        Pexp_ident "Lr1.iter" (src/Trie.ml[184,7530+4]..[184,7530+12])
                      [
                        <arg>
                        Nolabel
                          expression (src/Trie.ml[184,7530+13]..[189,7696+5])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/Trie.ml[184,7530+18]..[184,7530+19])
                              Ppat_var "s" (src/Trie.ml[184,7530+18]..[184,7530+19])
                            expression (src/Trie.ml[186,7628+6]..[188,7682+13])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/Trie.ml[186,7628+10]..[186,7628+11])
                                    Ppat_var "t" (src/Trie.ml[186,7628+10]..[186,7628+11])
                                  expression (src/Trie.ml[186,7628+14]..[186,7628+20])
                                    Pexp_apply
                                    expression (src/Trie.ml[186,7628+14]..[186,7628+18])
                                      Pexp_ident "star" (src/Trie.ml[186,7628+14]..[186,7628+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/Trie.ml[186,7628+19]..[186,7628+20])
                                          Pexp_ident "s" (src/Trie.ml[186,7628+19]..[186,7628+20])
                                    ]
                              ]
                              expression (src/Trie.ml[187,7652+6]..[188,7682+13])
                                Pexp_ifthenelse
                                expression (src/Trie.ml[187,7652+9]..[187,7652+24])
                                  Pexp_apply
                                  expression (src/Trie.ml[187,7652+9]..[187,7652+12])
                                    Pexp_ident "not" (src/Trie.ml[187,7652+9]..[187,7652+12])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/Trie.ml[187,7652+13]..[187,7652+24])
                                        Pexp_apply
                                        expression (src/Trie.ml[187,7652+14]..[187,7652+21])
                                          Pexp_ident "trivial" (src/Trie.ml[187,7652+14]..[187,7652+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/Trie.ml[187,7652+22]..[187,7652+23])
                                              Pexp_ident "t" (src/Trie.ml[187,7652+22]..[187,7652+23])
                                        ]
                                  ]
                                expression (src/Trie.ml[188,7682+8]..[188,7682+13])
                                  Pexp_apply
                                  expression (src/Trie.ml[188,7682+8]..[188,7682+9])
                                    Pexp_ident "f" (src/Trie.ml[188,7682+8]..[188,7682+9])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/Trie.ml[188,7682+10]..[188,7682+11])
                                        Pexp_ident "s" (src/Trie.ml[188,7682+10]..[188,7682+11])
                                    <arg>
                                    Nolabel
                                      expression (src/Trie.ml[188,7682+12]..[188,7682+13])
                                        Pexp_ident "t" (src/Trie.ml[188,7682+12]..[188,7682+13])
                                  ]
                                None
                      ]
              ]
            structure_item (src/Trie.ml[191,7703+2]..[193,7746+12])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/Trie.ml[191,7703+6]..[191,7703+10])
                    Ppat_var "size" (src/Trie.ml[191,7703+6]..[191,7703+10])
                  expression (src/Trie.ml[191,7703+11]..[193,7746+12]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/Trie.ml[191,7703+11]..[191,7703+12])
                      Ppat_var "s" (src/Trie.ml[191,7703+11]..[191,7703+12])
                    expression (src/Trie.ml[192,7718+4]..[193,7746+12])
                      Pexp_sequence
                      expression (src/Trie.ml[192,7718+4]..[192,7718+26])
                        Pexp_assert
                        expression (src/Trie.ml[192,7718+11]..[192,7718+26])
                          Pexp_apply
                          expression (src/Trie.ml[192,7718+21]..[192,7718+23])
                            Pexp_ident ">=" (src/Trie.ml[192,7718+21]..[192,7718+23])
                          [
                            <arg>
                            Nolabel
                              expression (src/Trie.ml[192,7718+12]..[192,7718+20])
                                Pexp_apply
                                expression (src/Trie.ml[192,7718+12]..[192,7718+20]) ghost
                                  Pexp_ident "Array.get" (src/Trie.ml[192,7718+12]..[192,7718+20]) ghost
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/Trie.ml[192,7718+12]..[192,7718+16])
                                      Pexp_ident "size" (src/Trie.ml[192,7718+12]..[192,7718+16])
                                  <arg>
                                  Nolabel
                                    expression (src/Trie.ml[192,7718+18]..[192,7718+19])
                                      Pexp_ident "s" (src/Trie.ml[192,7718+18]..[192,7718+19])
                                ]
                            <arg>
                            Nolabel
                              expression (src/Trie.ml[192,7718+24]..[192,7718+25])
                                Pexp_constant PConst_int (0,None)
                          ]
                      expression (src/Trie.ml[193,7746+4]..[193,7746+12])
                        Pexp_apply
                        expression (src/Trie.ml[193,7746+4]..[193,7746+12]) ghost
                          Pexp_ident "Array.get" (src/Trie.ml[193,7746+4]..[193,7746+12]) ghost
                        [
                          <arg>
                          Nolabel
                            expression (src/Trie.ml[193,7746+4]..[193,7746+8])
                              Pexp_ident "size" (src/Trie.ml[193,7746+4]..[193,7746+8])
                          <arg>
                          Nolabel
                            expression (src/Trie.ml[193,7746+10]..[193,7746+11])
                              Pexp_ident "s" (src/Trie.ml[193,7746+10]..[193,7746+11])
                        ]
              ]
            structure_item (src/Trie.ml[195,7760+2]..[196,7782+6])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/Trie.ml[195,7760+6]..[195,7760+16])
                    Ppat_var "total_size" (src/Trie.ml[195,7760+6]..[195,7760+16])
                  expression (src/Trie.ml[195,7760+17]..[196,7782+6]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/Trie.ml[195,7760+17]..[195,7760+19])
                      Ppat_construct "()" (src/Trie.ml[195,7760+17]..[195,7760+19])
                      None
                    expression (src/Trie.ml[196,7782+4]..[196,7782+6])
                      Pexp_apply
                      expression (src/Trie.ml[196,7782+4]..[196,7782+5])
                        Pexp_ident "!" (src/Trie.ml[196,7782+4]..[196,7782+5])
                      [
                        <arg>
                        Nolabel
                          expression (src/Trie.ml[196,7782+5]..[196,7782+6])
                            Pexp_ident "c" (src/Trie.ml[196,7782+5]..[196,7782+6])
                      ]
              ]
            structure_item (src/Trie.ml[198,7790+2]..[199,7812+43])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/Trie.ml[198,7790+6]..[198,7790+13])
                    Ppat_var "compare" (src/Trie.ml[198,7790+6]..[198,7790+13])
                  expression (src/Trie.ml[198,7790+14]..[199,7812+43]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/Trie.ml[198,7790+14]..[198,7790+16])
                      Ppat_var "t1" (src/Trie.ml[198,7790+14]..[198,7790+16])
                    expression (src/Trie.ml[198,7790+17]..[199,7812+43]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/Trie.ml[198,7790+17]..[198,7790+19])
                        Ppat_var "t2" (src/Trie.ml[198,7790+17]..[198,7790+19])
                      expression (src/Trie.ml[199,7812+4]..[199,7812+43])
                        Pexp_apply
                        expression (src/Trie.ml[199,7812+4]..[199,7812+19])
                          Pexp_ident "Generic.compare" (src/Trie.ml[199,7812+4]..[199,7812+19])
                        [
                          <arg>
                          Nolabel
                            expression (src/Trie.ml[199,7812+20]..[199,7812+31])
                              Pexp_field
                              expression (src/Trie.ml[199,7812+20]..[199,7812+22])
                                Pexp_ident "t1" (src/Trie.ml[199,7812+20]..[199,7812+22])
                              "identity" (src/Trie.ml[199,7812+23]..[199,7812+31])
                          <arg>
                          Nolabel
                            expression (src/Trie.ml[199,7812+32]..[199,7812+43])
                              Pexp_field
                              expression (src/Trie.ml[199,7812+32]..[199,7812+34])
                                Pexp_ident "t2" (src/Trie.ml[199,7812+32]..[199,7812+34])
                              "identity" (src/Trie.ml[199,7812+35]..[199,7812+43])
                        ]
              ]
            structure_item (src/Trie.ml[201,7857+2]..[202,7874+12])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/Trie.ml[201,7857+6]..[201,7857+12])
                    Ppat_var "source" (src/Trie.ml[201,7857+6]..[201,7857+12])
                  expression (src/Trie.ml[201,7857+13]..[202,7874+12]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/Trie.ml[201,7857+13]..[201,7857+14])
                      Ppat_var "t" (src/Trie.ml[201,7857+13]..[201,7857+14])
                    expression (src/Trie.ml[202,7874+4]..[202,7874+12])
                      Pexp_field
                      expression (src/Trie.ml[202,7874+4]..[202,7874+5])
                        Pexp_ident "t" (src/Trie.ml[202,7874+4]..[202,7874+5])
                      "source" (src/Trie.ml[202,7874+6]..[202,7874+12])
              ]
            structure_item (src/Trie.ml[204,7888+2]..[205,7906+13])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/Trie.ml[204,7888+6]..[204,7888+13])
                    Ppat_var "current" (src/Trie.ml[204,7888+6]..[204,7888+13])
                  expression (src/Trie.ml[204,7888+14]..[205,7906+13]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/Trie.ml[204,7888+14]..[204,7888+15])
                      Ppat_var "t" (src/Trie.ml[204,7888+14]..[204,7888+15])
                    expression (src/Trie.ml[205,7906+4]..[205,7906+13])
                      Pexp_field
                      expression (src/Trie.ml[205,7906+4]..[205,7906+5])
                        Pexp_ident "t" (src/Trie.ml[205,7906+4]..[205,7906+5])
                      "current" (src/Trie.ml[205,7906+6]..[205,7906+13])
              ]
            structure_item (src/Trie.ml[207,7921+2]..[208,7944+31])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/Trie.ml[207,7921+6]..[207,7921+13])
                    Ppat_var "accepts" (src/Trie.ml[207,7921+6]..[207,7921+13])
                  expression (src/Trie.ml[207,7921+14]..[208,7944+31]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/Trie.ml[207,7921+14]..[207,7921+18])
                      Ppat_var "prod" (src/Trie.ml[207,7921+14]..[207,7921+18])
                    expression (src/Trie.ml[207,7921+19]..[208,7944+31]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/Trie.ml[207,7921+19]..[207,7921+20])
                        Ppat_var "t" (src/Trie.ml[207,7921+19]..[207,7921+20])
                      expression (src/Trie.ml[208,7944+4]..[208,7944+31])
                        Pexp_apply
                        expression (src/Trie.ml[208,7944+4]..[208,7944+12])
                          Pexp_ident "List.mem" (src/Trie.ml[208,7944+4]..[208,7944+12])
                        [
                          <arg>
                          Nolabel
                            expression (src/Trie.ml[208,7944+13]..[208,7944+17])
                              Pexp_ident "prod" (src/Trie.ml[208,7944+13]..[208,7944+17])
                          <arg>
                          Nolabel
                            expression (src/Trie.ml[208,7944+18]..[208,7944+31])
                              Pexp_field
                              expression (src/Trie.ml[208,7944+18]..[208,7944+19])
                                Pexp_ident "t" (src/Trie.ml[208,7944+18]..[208,7944+19])
                              "productions" (src/Trie.ml[208,7944+20]..[208,7944+31])
                        ]
              ]
            structure_item (src/Trie.ml[210,7977+2]..[211,7994+34])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/Trie.ml[210,7977+6]..[210,7977+10])
                    Ppat_var "step" (src/Trie.ml[210,7977+6]..[210,7977+10])
                  expression (src/Trie.ml[210,7977+11]..[211,7994+34]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/Trie.ml[210,7977+11]..[210,7977+12])
                      Ppat_var "a" (src/Trie.ml[210,7977+11]..[210,7977+12])
                    expression (src/Trie.ml[210,7977+13]..[211,7994+34]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/Trie.ml[210,7977+13]..[210,7977+14])
                        Ppat_var "t" (src/Trie.ml[210,7977+13]..[210,7977+14])
                      expression (src/Trie.ml[211,7994+4]..[211,7994+34])
                        Pexp_apply
                        expression (src/Trie.ml[211,7994+4]..[211,7994+18])
                          Pexp_ident "SymbolMap.find" (src/Trie.ml[211,7994+4]..[211,7994+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/Trie.ml[211,7994+19]..[211,7994+20])
                              Pexp_ident "a" (src/Trie.ml[211,7994+19]..[211,7994+20])
                          <arg>
                          Nolabel
                            expression (src/Trie.ml[211,7994+21]..[211,7994+34])
                              Pexp_field
                              expression (src/Trie.ml[211,7994+21]..[211,7994+22])
                                Pexp_ident "t" (src/Trie.ml[211,7994+21]..[211,7994+22])
                              "transitions" (src/Trie.ml[211,7994+23]..[211,7994+34])
                        ]
              ]
            structure_item (src/Trie.ml[213,8067+2]..[214,8086+59])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/Trie.ml[213,8067+6]..[213,8067+13])
                    Ppat_var "verbose" (src/Trie.ml[213,8067+6]..[213,8067+13])
                  expression (src/Trie.ml[213,8067+14]..[214,8086+59]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/Trie.ml[213,8067+14]..[213,8067+16])
                      Ppat_construct "()" (src/Trie.ml[213,8067+14]..[213,8067+16])
                      None
                    expression (src/Trie.ml[214,8086+4]..[214,8086+59])
                      Pexp_apply
                      expression (src/Trie.ml[214,8086+4]..[214,8086+18])
                        Pexp_ident "Printf.eprintf" (src/Trie.ml[214,8086+4]..[214,8086+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/Trie.ml[214,8086+19]..[214,8086+44])
                            Pexp_constant PConst_string("Total star size: %d\n%!",(src/Trie.ml[214,8086+20]..[214,8086+43]),None)
                        <arg>
                        Nolabel
                          expression (src/Trie.ml[214,8086+45]..[214,8086+59])
                            Pexp_apply
                            expression (src/Trie.ml[214,8086+46]..[214,8086+56])
                              Pexp_ident "total_size" (src/Trie.ml[214,8086+46]..[214,8086+56])
                            [
                              <arg>
                              Nolabel
                                expression (src/Trie.ml[214,8086+56]..[214,8086+58])
                                  Pexp_construct "()" (src/Trie.ml[214,8086+56]..[214,8086+58])
                                  None
                            ]
                      ]
              ]
            structure_item (src/Trie.ml[216,8147+2]..[219,8288+5])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/Trie.ml[216,8147+6]..[216,8147+12])
                    Ppat_var "decode" (src/Trie.ml[216,8147+6]..[216,8147+12])
                  expression (src/Trie.ml[216,8147+13]..[219,8288+5]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/Trie.ml[216,8147+13]..[216,8147+14])
                      Ppat_var "i" (src/Trie.ml[216,8147+13]..[216,8147+14])
                    expression (src/Trie.ml[217,8164+4]..[219,8288+5])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/Trie.ml[217,8164+8]..[217,8164+9])
                            Ppat_var "t" (src/Trie.ml[217,8164+8]..[217,8164+9])
                          expression (src/Trie.ml[217,8164+12]..[217,8164+47])
                            Pexp_apply
                            expression (src/Trie.ml[217,8164+12]..[217,8164+39])
                              Pexp_ident "MenhirLib.InfiniteArray.get" (src/Trie.ml[217,8164+12]..[217,8164+39])
                            [
                              <arg>
                              Nolabel
                                expression (src/Trie.ml[217,8164+40]..[217,8164+45])
                                  Pexp_ident "tries" (src/Trie.ml[217,8164+40]..[217,8164+45])
                              <arg>
                              Nolabel
                                expression (src/Trie.ml[217,8164+46]..[217,8164+47])
                                  Pexp_ident "i" (src/Trie.ml[217,8164+46]..[217,8164+47])
                            ]
                      ]
                      expression (src/Trie.ml[218,8215+4]..[219,8288+5])
                        Pexp_sequence
                        expression (src/Trie.ml[218,8215+4]..[218,8215+27])
                          Pexp_assert
                          expression (src/Trie.ml[218,8215+11]..[218,8215+27])
                            Pexp_apply
                            expression (src/Trie.ml[218,8215+23]..[218,8215+24])
                              Pexp_ident "=" (src/Trie.ml[218,8215+23]..[218,8215+24])
                            [
                              <arg>
                              Nolabel
                                expression (src/Trie.ml[218,8215+12]..[218,8215+22])
                                  Pexp_field
                                  expression (src/Trie.ml[218,8215+12]..[218,8215+13])
                                    Pexp_ident "t" (src/Trie.ml[218,8215+12]..[218,8215+13])
                                  "identity" (src/Trie.ml[218,8215+14]..[218,8215+22])
                              <arg>
                              Nolabel
                                expression (src/Trie.ml[218,8215+25]..[218,8215+26])
                                  Pexp_ident "i" (src/Trie.ml[218,8215+25]..[218,8215+26])
                            ]
                        expression (src/Trie.ml[219,8288+4]..[219,8288+5])
                          Pexp_ident "t" (src/Trie.ml[219,8288+4]..[219,8288+5])
              ]
            structure_item (src/Trie.ml[221,8295+2]..[223,8375+14])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/Trie.ml[221,8295+6]..[221,8295+12])
                    Ppat_var "encode" (src/Trie.ml[221,8295+6]..[221,8295+12])
                  expression (src/Trie.ml[221,8295+13]..[223,8375+14]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/Trie.ml[221,8295+13]..[221,8295+14])
                      Ppat_var "t" (src/Trie.ml[221,8295+13]..[221,8295+14])
                    expression (src/Trie.ml[222,8312+4]..[223,8375+14])
                      Pexp_sequence
                      expression (src/Trie.ml[222,8312+4]..[222,8312+35])
                        Pexp_assert
                        expression (src/Trie.ml[222,8312+11]..[222,8312+35])
                          Pexp_apply
                          expression (src/Trie.ml[222,8312+30]..[222,8312+32])
                            Pexp_ident "==" (src/Trie.ml[222,8312+30]..[222,8312+32])
                          [
                            <arg>
                            Nolabel
                              expression (src/Trie.ml[222,8312+12]..[222,8312+29])
                                Pexp_apply
                                expression (src/Trie.ml[222,8312+12]..[222,8312+18])
                                  Pexp_ident "decode" (src/Trie.ml[222,8312+12]..[222,8312+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/Trie.ml[222,8312+19]..[222,8312+29])
                                      Pexp_field
                                      expression (src/Trie.ml[222,8312+19]..[222,8312+20])
                                        Pexp_ident "t" (src/Trie.ml[222,8312+19]..[222,8312+20])
                                      "identity" (src/Trie.ml[222,8312+21]..[222,8312+29])
                                ]
                            <arg>
                            Nolabel
                              expression (src/Trie.ml[222,8312+33]..[222,8312+34])
                                Pexp_ident "t" (src/Trie.ml[222,8312+33]..[222,8312+34])
                          ]
                      expression (src/Trie.ml[223,8375+4]..[223,8375+14])
                        Pexp_field
                        expression (src/Trie.ml[223,8375+4]..[223,8375+5])
                          Pexp_ident "t" (src/Trie.ml[223,8375+4]..[223,8375+5])
                        "identity" (src/Trie.ml[223,8375+6]..[223,8375+14])
              ]
          ]
]

open Grammar
let can_reduce s prod =
  match Default.has_default_reduction s with
  | Some (prod', _) when prod = prod' -> true
  | _ ->
      TerminalMap.fold
        (fun z ->
           fun prods ->
             fun accu ->
               assert (not (Terminal.equal z Terminal.sharp));
               accu || ((Terminal.non_error z) && (List.mem prod prods)))
        (Lr1.reductions s) false
let rec reduction_path_exists s (w : Symbol.t list) prod =
  (match w with
   | [] -> can_reduce s prod
   | a::w ->
       (Symbol.non_error a) &&
         ((match SymbolMap.find a (Lr1.transitions s) with
           | s -> reduction_path_exists s w prod
           | exception Not_found -> false)) : bool)
module Make(X:sig  end) =
  struct
    type trie =
      {
      identity: int ;
      source: Lr1.node ;
      current: Lr1.node ;
      mutable productions: Production.index list ;
      mutable transitions: trie SymbolMap.t }
    let c = ref 0
    let tries =
      let s : Lr1.node = Obj.magic () in
      let dummy =
        {
          identity = (-1);
          source = s;
          current = s;
          productions = [];
          transitions = SymbolMap.empty
        } in
      MenhirLib.InfiniteArray.make dummy
    let mktrie source current productions transitions =
      let identity = Misc.postincrement c in
      let t = { identity; source; current; productions; transitions } in
      MenhirLib.InfiniteArray.set tries identity t; t
    let rec insert (t : trie) (w : Symbol.t list) prod =
      (match w with
       | [] ->
           (assert (can_reduce t.current prod);
            t.productions <- (prod :: (t.productions)))
       | a::w ->
           (match SymbolMap.find a (Lr1.transitions t.current) with
            | exception Not_found -> assert false
            | successor ->
                let t' =
                  try SymbolMap.find a t.transitions
                  with
                  | Not_found ->
                      let t' = mktrie t.source successor [] SymbolMap.empty in
                      (t.transitions <- (SymbolMap.add a t' t.transitions);
                       t') in
                insert t' w prod) : unit)
    let insert t prod =
      (let w = Array.to_list (Production.rhs prod) in
       if reduction_path_exists t.current w prod then insert t w prod : 
      unit)
    let fresh source = mktrie source source [] SymbolMap.empty
    let star s =
      let t = fresh s in
      SymbolMap.iter
        (fun sym ->
           fun _ ->
             match sym with
             | Symbol.T _ -> ()
             | Symbol.N nt -> Production.iternt nt (insert t))
        (Lr1.transitions s);
      t
    let trivial t =
      (t.productions = []) && (SymbolMap.is_empty t.transitions)
    let size = Array.make Lr1.n (-1)
    let star s =
      let initial = !c in
      let t = star s in
      let final = !c in size.(Lr1.number s) <- (final - initial); t
    let stars f =
      Lr1.iter (fun s -> let t = star s in if not (trivial t) then f s t)
    let size s = assert ((size.(s)) >= 0); size.(s)
    let total_size () = !c
    let compare t1 t2 = Generic.compare t1.identity t2.identity
    let source t = t.source
    let current t = t.current
    let accepts prod t = List.mem prod t.productions
    let step a t = SymbolMap.find a t.transitions
    let verbose () = Printf.eprintf "Total star size: %d\n%!" (total_size ())
    let decode i =
      let t = MenhirLib.InfiniteArray.get tries i in
      assert (t.identity = i); t
    let encode t = assert ((decode t.identity) == t); t.identity
  end
[
  structure_item (src/Trie.ml[14,994+0]..src/Trie.ml[14,994+12])
    Tstr_open Fresh
    module_expr (src/Trie.ml[14,994+5]..src/Trie.ml[14,994+12])
      Tmod_ident "Dune__exe!.Grammar"
  structure_item (src/Trie.ml[27,1503+0]..src/Trie.ml[36,1873+32])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/Trie.ml[27,1503+4]..src/Trie.ml[27,1503+14])
          Tpat_var "can_reduce/414"
        expression (src/Trie.ml[27,1503+15]..src/Trie.ml[36,1873+32]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/Trie.ml[27,1503+15]..src/Trie.ml[27,1503+16])
                Tpat_var "s/416"
              expression (src/Trie.ml[27,1503+17]..src/Trie.ml[36,1873+32]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/Trie.ml[27,1503+17]..src/Trie.ml[27,1503+21])
                      Tpat_var "prod/417"
                    expression (src/Trie.ml[28,1527+2]..src/Trie.ml[36,1873+32])
                      Texp_match
                      expression (src/Trie.ml[28,1527+8]..src/Trie.ml[28,1527+39])
                        Texp_apply
                        expression (src/Trie.ml[28,1527+8]..src/Trie.ml[28,1527+37])
                          Texp_ident "Dune__exe!.Default.has_default_reduction"
                        [
                          <arg>
                            Nolabel
                            expression (src/Trie.ml[28,1527+38]..src/Trie.ml[28,1527+39])
                              Texp_ident "s/416"
                        ]
                      [
                        <case>
                          pattern (src/Trie.ml[29,1572+4]..src/Trie.ml[29,1572+19])
                            Tpat_value
                            pattern (src/Trie.ml[29,1572+4]..src/Trie.ml[29,1572+19])
                              Tpat_construct "Some"
                              [
                                pattern (src/Trie.ml[29,1572+9]..src/Trie.ml[29,1572+19])
                                  Tpat_tuple
                                  [
                                    pattern (src/Trie.ml[29,1572+10]..src/Trie.ml[29,1572+15])
                                      Tpat_var "prod'/503"
                                    pattern (src/Trie.ml[29,1572+17]..src/Trie.ml[29,1572+18])
                                      Tpat_any
                                  ]
                              ]
                              None
                          <when>
                            expression (src/Trie.ml[29,1572+25]..src/Trie.ml[29,1572+37])
                              Texp_apply
                              expression (src/Trie.ml[29,1572+30]..src/Trie.ml[29,1572+31])
                                Texp_ident "Stdlib!.="
                              [
                                <arg>
                                  Nolabel
                                  expression (src/Trie.ml[29,1572+25]..src/Trie.ml[29,1572+29])
                                    Texp_ident "prod/417"
                                <arg>
                                  Nolabel
                                  expression (src/Trie.ml[29,1572+32]..src/Trie.ml[29,1572+37])
                                    Texp_ident "prod'/503"
                              ]
                          expression (src/Trie.ml[30,1613+6]..src/Trie.ml[30,1613+10])
                            Texp_construct "true"
                            []
                        <case>
                          pattern (src/Trie.ml[31,1624+4]..src/Trie.ml[31,1624+5])
                            Tpat_value
                            pattern (src/Trie.ml[31,1624+4]..src/Trie.ml[31,1624+5])
                              Tpat_any
                          expression (src/Trie.ml[32,1633+6]..src/Trie.ml[36,1873+32])
                            Texp_apply
                            expression (src/Trie.ml[32,1633+6]..src/Trie.ml[32,1633+22])
                              Texp_ident "Dune__exe!.Grammar.TerminalMap.fold"
                            [
                              <arg>
                                Nolabel
                                expression (src/Trie.ml[32,1633+23]..src/Trie.ml[36,1873+7])
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/Trie.ml[32,1633+28]..src/Trie.ml[32,1633+29])
                                        Tpat_var "z/554"
                                      expression (src/Trie.ml[32,1633+30]..src/Trie.ml[35,1813+59]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/Trie.ml[32,1633+30]..src/Trie.ml[32,1633+35])
                                              Tpat_var "prods/555"
                                            expression (src/Trie.ml[32,1633+36]..src/Trie.ml[35,1813+59]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/Trie.ml[32,1633+36]..src/Trie.ml[32,1633+40])
                                                    Tpat_var "accu/556"
                                                  expression (src/Trie.ml[34,1757+8]..src/Trie.ml[35,1813+59])
                                                    Texp_sequence
                                                    expression (src/Trie.ml[34,1757+8]..src/Trie.ml[34,1757+54])
                                                      Texp_assert                                                      expression (src/Trie.ml[34,1757+15]..src/Trie.ml[34,1757+54])
                                                        Texp_apply
                                                        expression (src/Trie.ml[34,1757+16]..src/Trie.ml[34,1757+19])
                                                          Texp_ident "Stdlib!.not"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/Trie.ml[34,1757+20]..src/Trie.ml[34,1757+53])
                                                              Texp_apply
                                                              expression (src/Trie.ml[34,1757+21]..src/Trie.ml[34,1757+35])
                                                                Texp_ident "Dune__exe!.Grammar.Terminal.equal"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/Trie.ml[34,1757+36]..src/Trie.ml[34,1757+37])
                                                                    Texp_ident "z/554"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/Trie.ml[34,1757+38]..src/Trie.ml[34,1757+52])
                                                                    Texp_ident "Dune__exe!.Grammar.Terminal.sharp"
                                                              ]
                                                        ]
                                                    expression (src/Trie.ml[35,1813+8]..src/Trie.ml[35,1813+59])
                                                      Texp_apply
                                                      expression (src/Trie.ml[35,1813+13]..src/Trie.ml[35,1813+15])
                                                        Texp_ident "Stdlib!.||"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/Trie.ml[35,1813+8]..src/Trie.ml[35,1813+12])
                                                            Texp_ident "accu/556"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/Trie.ml[35,1813+16]..src/Trie.ml[35,1813+59])
                                                            Texp_apply
                                                            expression (src/Trie.ml[35,1813+37]..src/Trie.ml[35,1813+39])
                                                              Texp_ident "Stdlib!.&&"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/Trie.ml[35,1813+16]..src/Trie.ml[35,1813+36])
                                                                  Texp_apply
                                                                  expression (src/Trie.ml[35,1813+16]..src/Trie.ml[35,1813+34])
                                                                    Texp_ident "Dune__exe!.Grammar.Terminal.non_error"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/Trie.ml[35,1813+35]..src/Trie.ml[35,1813+36])
                                                                        Texp_ident "z/554"
                                                                  ]
                                                              <arg>
                                                                Nolabel
                                                                expression (src/Trie.ml[35,1813+40]..src/Trie.ml[35,1813+59])
                                                                  Texp_apply
                                                                  expression (src/Trie.ml[35,1813+40]..src/Trie.ml[35,1813+48])
                                                                    Texp_ident "Stdlib!.List.mem"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/Trie.ml[35,1813+49]..src/Trie.ml[35,1813+53])
                                                                        Texp_ident "prod/417"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/Trie.ml[35,1813+54]..src/Trie.ml[35,1813+59])
                                                                        Texp_ident "prods/555"
                                                                  ]
                                                            ]
                                                      ]
                                              ]
                                        ]
                                  ]
                              <arg>
                                Nolabel
                                expression (src/Trie.ml[36,1873+8]..src/Trie.ml[36,1873+26])
                                  Texp_apply
                                  expression (src/Trie.ml[36,1873+9]..src/Trie.ml[36,1873+23])
                                    Texp_ident "Dune__exe!.Lr1.reductions"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/Trie.ml[36,1873+24]..src/Trie.ml[36,1873+25])
                                        Texp_ident "s/416"
                                  ]
                              <arg>
                                Nolabel
                                expression (src/Trie.ml[36,1873+27]..src/Trie.ml[36,1873+32])
                                  Texp_construct "false"
                                  []
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/Trie.ml[43,2174+0]..src/Trie.ml[53,2470+15])
    Tstr_value Rec
    [
      <def>
        pattern (src/Trie.ml[43,2174+8]..src/Trie.ml[43,2174+29])
          Tpat_var "reduction_path_exists/715"
        expression (src/Trie.ml[43,2174+30]..src/Trie.ml[53,2470+15]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/Trie.ml[43,2174+30]..src/Trie.ml[43,2174+31])
                Tpat_var "s/716"
              expression (src/Trie.ml[43,2174+32]..src/Trie.ml[53,2470+15]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/Trie.ml[43,2174+33]..src/Trie.ml[43,2174+34])
                      extra
                        Tpat_extra_constraint
                        core_type (src/Trie.ml[43,2174+37]..src/Trie.ml[43,2174+50])
                          Ttyp_constr "list/9!"
                          [
                            core_type (src/Trie.ml[43,2174+37]..src/Trie.ml[43,2174+45])
                              Ttyp_constr "Dune__exe!.Grammar.Symbol.t"
                              []
                          ]
                      Tpat_alias "w/728"
                      pattern (src/Trie.ml[43,2174+33]..src/Trie.ml[43,2174+34])
                        Tpat_any
                    expression (src/Trie.ml[43,2174+52]..src/Trie.ml[53,2470+15]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/Trie.ml[43,2174+52]..src/Trie.ml[43,2174+56])
                            Tpat_var "prod/729"
                          expression (src/Trie.ml[44,2240+2]..src/Trie.ml[53,2470+15])
                            extra
                              Texp_constraint
                              core_type (src/Trie.ml[43,2174+59]..src/Trie.ml[43,2174+63])
                                Ttyp_constr "bool/5!"
                                []
                            Texp_match
                            expression (src/Trie.ml[44,2240+8]..src/Trie.ml[44,2240+9])
                              Texp_ident "w/728"
                            [
                              <case>
                                pattern (src/Trie.ml[45,2255+4]..src/Trie.ml[45,2255+6])
                                  Tpat_value
                                  pattern (src/Trie.ml[45,2255+4]..src/Trie.ml[45,2255+6])
                                    Tpat_construct "[]"
                                    []
                                    None
                                expression (src/Trie.ml[46,2265+6]..src/Trie.ml[46,2265+23])
                                  Texp_apply
                                  expression (src/Trie.ml[46,2265+6]..src/Trie.ml[46,2265+16])
                                    Texp_ident "can_reduce/414"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/Trie.ml[46,2265+17]..src/Trie.ml[46,2265+18])
                                        Texp_ident "s/716"
                                    <arg>
                                      Nolabel
                                      expression (src/Trie.ml[46,2265+19]..src/Trie.ml[46,2265+23])
                                        Texp_ident "prod/729"
                                  ]
                              <case>
                                pattern (src/Trie.ml[47,2289+4]..src/Trie.ml[47,2289+10])
                                  Tpat_value
                                  pattern (src/Trie.ml[47,2289+4]..src/Trie.ml[47,2289+10])
                                    Tpat_construct "::"
                                    [
                                      pattern (src/Trie.ml[47,2289+4]..src/Trie.ml[47,2289+5])
                                        Tpat_var "a/730"
                                      pattern (src/Trie.ml[47,2289+9]..src/Trie.ml[47,2289+10])
                                        Tpat_var "w/731"
                                    ]
                                    None
                                expression (src/Trie.ml[48,2303+6]..src/Trie.ml[53,2470+15])
                                  Texp_apply
                                  expression (src/Trie.ml[48,2303+25]..src/Trie.ml[48,2303+27])
                                    Texp_ident "Stdlib!.&&"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/Trie.ml[48,2303+6]..src/Trie.ml[48,2303+24])
                                        Texp_apply
                                        expression (src/Trie.ml[48,2303+6]..src/Trie.ml[48,2303+22])
                                          Texp_ident "Dune__exe!.Grammar.Symbol.non_error"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/Trie.ml[48,2303+23]..src/Trie.ml[48,2303+24])
                                              Texp_ident "a/730"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/Trie.ml[49,2331+6]..src/Trie.ml[53,2470+15])
                                        Texp_match
                                        expression (src/Trie.ml[49,2331+12]..src/Trie.ml[49,2331+48])
                                          Texp_apply
                                          expression (src/Trie.ml[49,2331+12]..src/Trie.ml[49,2331+26])
                                            Texp_ident "Dune__exe!.Grammar.SymbolMap.find"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/Trie.ml[49,2331+27]..src/Trie.ml[49,2331+28])
                                                Texp_ident "a/730"
                                            <arg>
                                              Nolabel
                                              expression (src/Trie.ml[49,2331+29]..src/Trie.ml[49,2331+48])
                                                Texp_apply
                                                expression (src/Trie.ml[49,2331+30]..src/Trie.ml[49,2331+45])
                                                  Texp_ident "Dune__exe!.Lr1.transitions"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/Trie.ml[49,2331+46]..src/Trie.ml[49,2331+47])
                                                      Texp_ident "s/716"
                                                ]
                                          ]
                                        [
                                          <case>
                                            pattern (src/Trie.ml[50,2385+8]..src/Trie.ml[50,2385+9])
                                              Tpat_value
                                              pattern (src/Trie.ml[50,2385+8]..src/Trie.ml[50,2385+9])
                                                Tpat_var "s/907"
                                            expression (src/Trie.ml[51,2398+10]..src/Trie.ml[51,2398+40])
                                              Texp_apply
                                              expression (src/Trie.ml[51,2398+10]..src/Trie.ml[51,2398+31])
                                                Texp_ident "reduction_path_exists/715"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/Trie.ml[51,2398+32]..src/Trie.ml[51,2398+33])
                                                    Texp_ident "s/907"
                                                <arg>
                                                  Nolabel
                                                  expression (src/Trie.ml[51,2398+34]..src/Trie.ml[51,2398+35])
                                                    Texp_ident "w/731"
                                                <arg>
                                                  Nolabel
                                                  expression (src/Trie.ml[51,2398+36]..src/Trie.ml[51,2398+40])
                                                    Texp_ident "prod/729"
                                              ]
                                          <case>
                                            pattern (src/Trie.ml[52,2439+8]..src/Trie.ml[52,2439+27])
                                              Tpat_exception
                                              pattern (src/Trie.ml[52,2439+18]..src/Trie.ml[52,2439+27])
                                                Tpat_construct "Not_found"
                                                []
                                                None
                                            expression (src/Trie.ml[53,2470+10]..src/Trie.ml[53,2470+15])
                                              Texp_construct "false"
                                              []
                                        ]
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/Trie.ml[59,2583+0]..src/Trie.ml[225,8391+3])
    Tstr_module
    Make/1201
      module_expr (src/Trie.ml[59,2583+12]..src/Trie.ml[225,8391+3])
        Tmod_functor "X/908"
        module_type (src/Trie.ml[59,2583+17]..src/Trie.ml[59,2583+24])
          Tmty_signature
          []
        module_expr (src/Trie.ml[59,2583+28]..src/Trie.ml[225,8391+3])
          module_expr (src/Trie.ml[59,2583+28]..src/Trie.ml[225,8391+3])
            Tmod_structure
            [
              structure_item (src/Trie.ml[63,2664+2]..src/Trie.ml[80,3543+3])
                Tstr_type Rec
                [
                  type_declaration trie/909 (src/Trie.ml[63,2664+2]..src/Trie.ml[80,3543+3])
                    ptype_params =
                      []
                    ptype_cstrs =
                      []
                    ptype_kind =
                      Ttype_record
                        [
                          (src/Trie.ml[67,2846+4]..src/Trie.ml[67,2846+18])
                            Immutable
                            identity/910                            core_type (src/Trie.ml[67,2846+14]..src/Trie.ml[67,2846+17])
                              Ttyp_poly
                              core_type (src/Trie.ml[67,2846+14]..src/Trie.ml[67,2846+17])
                                Ttyp_constr "int/1!"
                                []
                          (src/Trie.ml[69,2926+4]..src/Trie.ml[69,2926+21])
                            Immutable
                            source/911                            core_type (src/Trie.ml[69,2926+12]..src/Trie.ml[69,2926+20])
                              Ttyp_poly
                              core_type (src/Trie.ml[69,2926+12]..src/Trie.ml[69,2926+20])
                                Ttyp_constr "Dune__exe!.Lr1.node"
                                []
                          (src/Trie.ml[71,3026+4]..src/Trie.ml[71,3026+22])
                            Immutable
                            current/912                            core_type (src/Trie.ml[71,3026+13]..src/Trie.ml[71,3026+21])
                              Ttyp_poly
                              core_type (src/Trie.ml[71,3026+13]..src/Trie.ml[71,3026+21])
                                Ttyp_constr "Dune__exe!.Lr1.node"
                                []
                          (src/Trie.ml[75,3270+4]..src/Trie.ml[75,3270+47])
                            Mutable
                            productions/913                            core_type (src/Trie.ml[75,3270+25]..src/Trie.ml[75,3270+46])
                              Ttyp_poly
                              core_type (src/Trie.ml[75,3270+25]..src/Trie.ml[75,3270+46])
                                Ttyp_constr "list/9!"
                                [
                                  core_type (src/Trie.ml[75,3270+25]..src/Trie.ml[75,3270+41])
                                    Ttyp_constr "Dune__exe!.Grammar.Production.index"
                                    []
                                ]
                          (src/Trie.ml[77,3356+4]..src/Trie.ml[77,3356+41])
                            Mutable
                            transitions/914                            core_type (src/Trie.ml[77,3356+25]..src/Trie.ml[77,3356+41])
                              Ttyp_poly
                              core_type (src/Trie.ml[77,3356+25]..src/Trie.ml[77,3356+41])
                                Ttyp_constr "Dune__exe!.Grammar.SymbolMap.t"
                                [
                                  core_type (src/Trie.ml[77,3356+25]..src/Trie.ml[77,3356+29])
                                    Ttyp_constr "trie/909"
                                    []
                                ]
                        ]
                    ptype_private = Public
                    ptype_manifest =
                      None
                ]
              structure_item (src/Trie.ml[83,3619+2]..src/Trie.ml[83,3619+15])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/Trie.ml[83,3619+6]..src/Trie.ml[83,3619+7])
                      Tpat_var "c/915"
                    expression (src/Trie.ml[83,3619+10]..src/Trie.ml[83,3619+15])
                      Texp_apply
                      expression (src/Trie.ml[83,3619+10]..src/Trie.ml[83,3619+13])
                        Texp_ident "Stdlib!.ref"
                      [
                        <arg>
                          Nolabel
                          expression (src/Trie.ml[83,3619+14]..src/Trie.ml[83,3619+15])
                            Texp_constant Const_int 0
                      ]
                ]
              structure_item (src/Trie.ml[87,3766+2]..src/Trie.ml[91,3970+38])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/Trie.ml[87,3766+6]..src/Trie.ml[87,3766+11])
                      Tpat_var "tries/916"
                    expression (src/Trie.ml[88,3780+4]..src/Trie.ml[91,3970+38])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/Trie.ml[88,3780+8]..src/Trie.ml[88,3780+9])
                            extra
                              Tpat_extra_constraint
                              core_type (src/Trie.ml[88,3780+12]..src/Trie.ml[88,3780+20])
                                Ttyp_constr "Dune__exe!.Lr1.node"
                                []
                            Tpat_alias "s/917"
                            pattern (src/Trie.ml[88,3780+8]..src/Trie.ml[88,3780+9])
                              Tpat_any
                          expression (src/Trie.ml[88,3780+23]..src/Trie.ml[88,3780+35])
                            extra
                              Texp_constraint
                              core_type (src/Trie.ml[88,3780+12]..src/Trie.ml[88,3780+20])
                                Ttyp_constr "Dune__exe!.Lr1.node"
                                []
                            Texp_apply
                            expression (src/Trie.ml[88,3780+23]..src/Trie.ml[88,3780+32])
                              Texp_ident "Stdlib!.Obj.magic"
                            [
                              <arg>
                                Nolabel
                                expression (src/Trie.ml[88,3780+33]..src/Trie.ml[88,3780+35])
                                  Texp_construct "()"
                                  []
                            ]
                      ]
                      expression (src/Trie.ml[89,3841+4]..src/Trie.ml[91,3970+38])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/Trie.ml[89,3841+8]..src/Trie.ml[89,3841+13])
                              Tpat_var "dummy/959"
                            expression (src/Trie.ml[89,3841+16]..src/Trie.ml[90,3899+67])
                              Texp_record
                                fields =
                                  [
                                    "identity"
                                      expression (src/Trie.ml[89,3841+29]..src/Trie.ml[89,3841+31])
                                        Texp_constant Const_int -1
                                    "source"
                                      expression (src/Trie.ml[89,3841+42]..src/Trie.ml[89,3841+43])
                                        Texp_ident "s/917"
                                    "current"
                                      expression (src/Trie.ml[89,3841+55]..src/Trie.ml[89,3841+56])
                                        Texp_ident "s/917"
                                    "productions"
                                      expression (src/Trie.ml[90,3899+32]..src/Trie.ml[90,3899+34])
                                        Texp_construct "[]"
                                        []
                                    "transitions"
                                      expression (src/Trie.ml[90,3899+50]..src/Trie.ml[90,3899+65])
                                        Texp_ident "Dune__exe!.Grammar.SymbolMap.empty"
                                  ]
                                representation =
                                  Record_regular
                                extended_expression =
                                  None
                        ]
                        expression (src/Trie.ml[91,3970+4]..src/Trie.ml[91,3970+38])
                          Texp_apply
                          expression (src/Trie.ml[91,3970+4]..src/Trie.ml[91,3970+32])
                            Texp_ident "MenhirLib!.InfiniteArray.make"
                          [
                            <arg>
                              Nolabel
                              expression (src/Trie.ml[91,3970+33]..src/Trie.ml[91,3970+38])
                                Texp_ident "dummy/959"
                          ]
                ]
              structure_item (src/Trie.ml[94,4084+2]..src/Trie.ml[98,4302+5])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/Trie.ml[94,4084+6]..src/Trie.ml[94,4084+12])
                      Tpat_var "mktrie/983"
                    expression (src/Trie.ml[94,4084+13]..src/Trie.ml[98,4302+5]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/Trie.ml[94,4084+13]..src/Trie.ml[94,4084+19])
                            Tpat_var "source/985"
                          expression (src/Trie.ml[94,4084+20]..src/Trie.ml[98,4302+5]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/Trie.ml[94,4084+20]..src/Trie.ml[94,4084+27])
                                  Tpat_var "current/986"
                                expression (src/Trie.ml[94,4084+28]..src/Trie.ml[98,4302+5]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/Trie.ml[94,4084+28]..src/Trie.ml[94,4084+39])
                                        Tpat_var "productions/987"
                                      expression (src/Trie.ml[94,4084+40]..src/Trie.ml[98,4302+5]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/Trie.ml[94,4084+40]..src/Trie.ml[94,4084+51])
                                              Tpat_var "transitions/988"
                                            expression (src/Trie.ml[95,4138+4]..src/Trie.ml[98,4302+5])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/Trie.ml[95,4138+8]..src/Trie.ml[95,4138+16])
                                                    Tpat_var "identity/989"
                                                  expression (src/Trie.ml[95,4138+19]..src/Trie.ml[95,4138+39])
                                                    Texp_apply
                                                    expression (src/Trie.ml[95,4138+19]..src/Trie.ml[95,4138+37])
                                                      Texp_ident "Dune__exe!.Misc.postincrement"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/Trie.ml[95,4138+38]..src/Trie.ml[95,4138+39])
                                                          Texp_ident "c/915"
                                                    ]
                                              ]
                                              expression (src/Trie.ml[96,4181+4]..src/Trie.ml[98,4302+5])
                                                Texp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/Trie.ml[96,4181+8]..src/Trie.ml[96,4181+9])
                                                      Tpat_var "t/1026"
                                                    expression (src/Trie.ml[96,4181+12]..src/Trie.ml[96,4181+67])
                                                      Texp_record
                                                        fields =
                                                          [
                                                            "identity"
                                                              expression (src/Trie.ml[96,4181+14]..src/Trie.ml[96,4181+22])
                                                                Texp_ident "identity/989"
                                                            "source"
                                                              expression (src/Trie.ml[96,4181+24]..src/Trie.ml[96,4181+30])
                                                                Texp_ident "source/985"
                                                            "current"
                                                              expression (src/Trie.ml[96,4181+32]..src/Trie.ml[96,4181+39])
                                                                Texp_ident "current/986"
                                                            "productions"
                                                              expression (src/Trie.ml[96,4181+41]..src/Trie.ml[96,4181+52])
                                                                Texp_ident "productions/987"
                                                            "transitions"
                                                              expression (src/Trie.ml[96,4181+54]..src/Trie.ml[96,4181+65])
                                                                Texp_ident "transitions/988"
                                                          ]
                                                        representation =
                                                          Record_regular
                                                        extended_expression =
                                                          None
                                                ]
                                                expression (src/Trie.ml[97,4252+4]..src/Trie.ml[98,4302+5])
                                                  Texp_sequence
                                                  expression (src/Trie.ml[97,4252+4]..src/Trie.ml[97,4252+48])
                                                    Texp_apply
                                                    expression (src/Trie.ml[97,4252+4]..src/Trie.ml[97,4252+31])
                                                      Texp_ident "MenhirLib!.InfiniteArray.set"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/Trie.ml[97,4252+32]..src/Trie.ml[97,4252+37])
                                                          Texp_ident "tries/916"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/Trie.ml[97,4252+38]..src/Trie.ml[97,4252+46])
                                                          Texp_ident "identity/989"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/Trie.ml[97,4252+47]..src/Trie.ml[97,4252+48])
                                                          Texp_ident "t/1026"
                                                    ]
                                                  expression (src/Trie.ml[98,4302+4]..src/Trie.ml[98,4302+5])
                                                    Texp_ident "t/1026"
                                        ]
                                  ]
                            ]
                      ]
                ]
              structure_item (src/Trie.ml[106,4694+2]..src/Trie.ml[126,5420+28])
                Tstr_value Rec
                [
                  <def>
                    pattern (src/Trie.ml[106,4694+10]..src/Trie.ml[106,4694+16])
                      Tpat_var "insert/1027"
                    expression (src/Trie.ml[106,4694+17]..src/Trie.ml[126,5420+28]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/Trie.ml[106,4694+18]..src/Trie.ml[106,4694+19])
                            extra
                              Tpat_extra_constraint
                              core_type (src/Trie.ml[106,4694+22]..src/Trie.ml[106,4694+26])
                                Ttyp_constr "trie/909"
                                []
                            Tpat_alias "t/1028"
                            pattern (src/Trie.ml[106,4694+18]..src/Trie.ml[106,4694+19])
                              Tpat_any
                          expression (src/Trie.ml[106,4694+28]..src/Trie.ml[126,5420+28]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/Trie.ml[106,4694+29]..src/Trie.ml[106,4694+30])
                                  extra
                                    Tpat_extra_constraint
                                    core_type (src/Trie.ml[106,4694+33]..src/Trie.ml[106,4694+46])
                                      Ttyp_constr "list/9!"
                                      [
                                        core_type (src/Trie.ml[106,4694+33]..src/Trie.ml[106,4694+41])
                                          Ttyp_constr "Dune__exe!.Grammar.Symbol.t"
                                          []
                                      ]
                                  Tpat_alias "w/1029"
                                  pattern (src/Trie.ml[106,4694+29]..src/Trie.ml[106,4694+30])
                                    Tpat_any
                                expression (src/Trie.ml[106,4694+48]..src/Trie.ml[126,5420+28]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/Trie.ml[106,4694+48]..src/Trie.ml[106,4694+52])
                                        Tpat_var "prod/1030"
                                      expression (src/Trie.ml[107,4756+4]..src/Trie.ml[126,5420+28])
                                        extra
                                          Texp_constraint
                                          core_type (src/Trie.ml[106,4694+55]..src/Trie.ml[106,4694+59])
                                            Ttyp_constr "unit/6!"
                                            []
                                        Texp_match
                                        expression (src/Trie.ml[107,4756+10]..src/Trie.ml[107,4756+11])
                                          Texp_ident "w/1029"
                                        [
                                          <case>
                                            pattern (src/Trie.ml[108,4773+6]..src/Trie.ml[108,4773+8])
                                              Tpat_value
                                              pattern (src/Trie.ml[108,4773+6]..src/Trie.ml[108,4773+8])
                                                Tpat_construct "[]"
                                                []
                                                None
                                            expression (src/Trie.ml[109,4785+8]..src/Trie.ml[110,4829+46])
                                              Texp_sequence
                                              expression (src/Trie.ml[109,4785+8]..src/Trie.ml[109,4785+42])
                                                Texp_assert                                                expression (src/Trie.ml[109,4785+15]..src/Trie.ml[109,4785+42])
                                                  Texp_apply
                                                  expression (src/Trie.ml[109,4785+16]..src/Trie.ml[109,4785+26])
                                                    Texp_ident "can_reduce/414"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/Trie.ml[109,4785+27]..src/Trie.ml[109,4785+36])
                                                        Texp_field
                                                        expression (src/Trie.ml[109,4785+27]..src/Trie.ml[109,4785+28])
                                                          Texp_ident "t/1028"
                                                        "current"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/Trie.ml[109,4785+37]..src/Trie.ml[109,4785+41])
                                                        Texp_ident "prod/1030"
                                                  ]
                                              expression (src/Trie.ml[110,4829+8]..src/Trie.ml[110,4829+46])
                                                Texp_setfield
                                                expression (src/Trie.ml[110,4829+8]..src/Trie.ml[110,4829+9])
                                                  Texp_ident "t/1028"
                                                "productions"
                                                expression (src/Trie.ml[110,4829+25]..src/Trie.ml[110,4829+46])
                                                  Texp_construct "::"
                                                  [
                                                    expression (src/Trie.ml[110,4829+25]..src/Trie.ml[110,4829+29])
                                                      Texp_ident "prod/1030"
                                                    expression (src/Trie.ml[110,4829+33]..src/Trie.ml[110,4829+46])
                                                      Texp_field
                                                      expression (src/Trie.ml[110,4829+33]..src/Trie.ml[110,4829+34])
                                                        Texp_ident "t/1028"
                                                      "productions"
                                                  ]
                                          <case>
                                            pattern (src/Trie.ml[111,4876+6]..src/Trie.ml[111,4876+12])
                                              Tpat_value
                                              pattern (src/Trie.ml[111,4876+6]..src/Trie.ml[111,4876+12])
                                                Tpat_construct "::"
                                                [
                                                  pattern (src/Trie.ml[111,4876+6]..src/Trie.ml[111,4876+7])
                                                    Tpat_var "a/1031"
                                                  pattern (src/Trie.ml[111,4876+11]..src/Trie.ml[111,4876+12])
                                                    Tpat_var "w/1032"
                                                ]
                                                None
                                            expression (src/Trie.ml[112,4892+8]..src/Trie.ml[126,5420+28])
                                              Texp_match
                                              expression (src/Trie.ml[112,4892+14]..src/Trie.ml[112,4892+58])
                                                Texp_apply
                                                expression (src/Trie.ml[112,4892+14]..src/Trie.ml[112,4892+28])
                                                  Texp_ident "Dune__exe!.Grammar.SymbolMap.find"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/Trie.ml[112,4892+29]..src/Trie.ml[112,4892+30])
                                                      Texp_ident "a/1031"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/Trie.ml[112,4892+31]..src/Trie.ml[112,4892+58])
                                                      Texp_apply
                                                      expression (src/Trie.ml[112,4892+32]..src/Trie.ml[112,4892+47])
                                                        Texp_ident "Dune__exe!.Lr1.transitions"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/Trie.ml[112,4892+48]..src/Trie.ml[112,4892+57])
                                                            Texp_field
                                                            expression (src/Trie.ml[112,4892+48]..src/Trie.ml[112,4892+49])
                                                              Texp_ident "t/1028"
                                                            "current"
                                                      ]
                                                ]
                                              [
                                                <case>
                                                  pattern (src/Trie.ml[113,4956+10]..src/Trie.ml[113,4956+29])
                                                    Tpat_exception
                                                    pattern (src/Trie.ml[113,4956+20]..src/Trie.ml[113,4956+29])
                                                      Tpat_construct "Not_found"
                                                      []
                                                      None
                                                  expression (src/Trie.ml[114,4989+12]..src/Trie.ml[114,4989+24])
                                                    Texp_assert                                                    expression (src/Trie.ml[114,4989+19]..src/Trie.ml[114,4989+24])
                                                      Texp_construct "false"
                                                      []
                                                <case>
                                                  pattern (src/Trie.ml[115,5014+10]..src/Trie.ml[115,5014+19])
                                                    Tpat_value
                                                    pattern (src/Trie.ml[115,5014+10]..src/Trie.ml[115,5014+19])
                                                      Tpat_var "successor/1033"
                                                  expression (src/Trie.ml[117,5092+12]..src/Trie.ml[126,5420+28])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (src/Trie.ml[117,5092+16]..src/Trie.ml[117,5092+18])
                                                          Tpat_var "t'/1034"
                                                        expression (src/Trie.ml[118,5113+14]..src/Trie.ml[123,5350+18])
                                                          Texp_try
                                                          expression (src/Trie.ml[119,5131+16]..src/Trie.ml[119,5131+46])
                                                            Texp_apply
                                                            expression (src/Trie.ml[119,5131+16]..src/Trie.ml[119,5131+30])
                                                              Texp_ident "Dune__exe!.Grammar.SymbolMap.find"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/Trie.ml[119,5131+31]..src/Trie.ml[119,5131+32])
                                                                  Texp_ident "a/1031"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/Trie.ml[119,5131+33]..src/Trie.ml[119,5131+46])
                                                                  Texp_field
                                                                  expression (src/Trie.ml[119,5131+33]..src/Trie.ml[119,5131+34])
                                                                    Texp_ident "t/1028"
                                                                  "transitions"
                                                            ]
                                                          [
                                                            <case>
                                                              pattern (src/Trie.ml[120,5178+19]..src/Trie.ml[120,5178+28])
                                                                Tpat_construct "Not_found"
                                                                []
                                                                None
                                                              expression (src/Trie.ml[121,5210+16]..src/Trie.ml[123,5350+18])
                                                                Texp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (src/Trie.ml[121,5210+20]..src/Trie.ml[121,5210+22])
                                                                      Tpat_var "t'/1035"
                                                                    expression (src/Trie.ml[121,5210+25]..src/Trie.ml[121,5210+69])
                                                                      Texp_apply
                                                                      expression (src/Trie.ml[121,5210+25]..src/Trie.ml[121,5210+31])
                                                                        Texp_ident "mktrie/983"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/Trie.ml[121,5210+32]..src/Trie.ml[121,5210+40])
                                                                            Texp_field
                                                                            expression (src/Trie.ml[121,5210+32]..src/Trie.ml[121,5210+33])
                                                                              Texp_ident "t/1028"
                                                                            "source"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/Trie.ml[121,5210+41]..src/Trie.ml[121,5210+50])
                                                                            Texp_ident "successor/1033"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/Trie.ml[121,5210+51]..src/Trie.ml[121,5210+53])
                                                                            Texp_construct "[]"
                                                                            []
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/Trie.ml[121,5210+54]..src/Trie.ml[121,5210+69])
                                                                            Texp_ident "Dune__exe!.Grammar.SymbolMap.empty"
                                                                      ]
                                                                ]
                                                                expression (src/Trie.ml[122,5283+16]..src/Trie.ml[123,5350+18])
                                                                  Texp_sequence
                                                                  expression (src/Trie.ml[122,5283+16]..src/Trie.ml[122,5283+65])
                                                                    Texp_setfield
                                                                    expression (src/Trie.ml[122,5283+16]..src/Trie.ml[122,5283+17])
                                                                      Texp_ident "t/1028"
                                                                    "transitions"
                                                                    expression (src/Trie.ml[122,5283+33]..src/Trie.ml[122,5283+65])
                                                                      Texp_apply
                                                                      expression (src/Trie.ml[122,5283+33]..src/Trie.ml[122,5283+46])
                                                                        Texp_ident "Dune__exe!.Grammar.SymbolMap.add"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/Trie.ml[122,5283+47]..src/Trie.ml[122,5283+48])
                                                                            Texp_ident "a/1031"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/Trie.ml[122,5283+49]..src/Trie.ml[122,5283+51])
                                                                            Texp_ident "t'/1035"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/Trie.ml[122,5283+52]..src/Trie.ml[122,5283+65])
                                                                            Texp_field
                                                                            expression (src/Trie.ml[122,5283+52]..src/Trie.ml[122,5283+53])
                                                                              Texp_ident "t/1028"
                                                                            "transitions"
                                                                      ]
                                                                  expression (src/Trie.ml[123,5350+16]..src/Trie.ml[123,5350+18])
                                                                    Texp_ident "t'/1035"
                                                          ]
                                                    ]
                                                    expression (src/Trie.ml[126,5420+12]..src/Trie.ml[126,5420+28])
                                                      Texp_apply
                                                      expression (src/Trie.ml[126,5420+12]..src/Trie.ml[126,5420+18])
                                                        Texp_ident "insert/1027"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/Trie.ml[126,5420+19]..src/Trie.ml[126,5420+21])
                                                            Texp_ident "t'/1034"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/Trie.ml[126,5420+22]..src/Trie.ml[126,5420+23])
                                                            Texp_ident "w/1032"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/Trie.ml[126,5420+24]..src/Trie.ml[126,5420+28])
                                                            Texp_ident "prod/1030"
                                                      ]
                                              ]
                                        ]
                                  ]
                            ]
                      ]
                ]
              structure_item (src/Trie.ml[130,5583+2]..src/Trie.ml[140,6165+21])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/Trie.ml[130,5583+6]..src/Trie.ml[130,5583+12])
                      Tpat_var "insert/1036"
                    expression (src/Trie.ml[130,5583+13]..src/Trie.ml[140,6165+21]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/Trie.ml[130,5583+13]..src/Trie.ml[130,5583+14])
                            Tpat_var "t/1037"
                          expression (src/Trie.ml[130,5583+15]..src/Trie.ml[140,6165+21]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/Trie.ml[130,5583+15]..src/Trie.ml[130,5583+19])
                                  Tpat_var "prod/1038"
                                expression (src/Trie.ml[131,5612+4]..src/Trie.ml[140,6165+21])
                                  extra
                                    Texp_constraint
                                    core_type (src/Trie.ml[130,5583+22]..src/Trie.ml[130,5583+26])
                                      Ttyp_constr "unit/6!"
                                      []
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/Trie.ml[131,5612+8]..src/Trie.ml[131,5612+9])
                                        Tpat_var "w/1039"
                                      expression (src/Trie.ml[131,5612+12]..src/Trie.ml[131,5612+47])
                                        Texp_apply
                                        expression (src/Trie.ml[131,5612+12]..src/Trie.ml[131,5612+25])
                                          Texp_ident "Stdlib!.Array.to_list"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/Trie.ml[131,5612+26]..src/Trie.ml[131,5612+47])
                                              Texp_apply
                                              expression (src/Trie.ml[131,5612+27]..src/Trie.ml[131,5612+41])
                                                Texp_ident "Dune__exe!.Grammar.Production.rhs"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/Trie.ml[131,5612+42]..src/Trie.ml[131,5612+46])
                                                    Texp_ident "prod/1038"
                                              ]
                                        ]
                                  ]
                                  expression (src/Trie.ml[139,6114+4]..src/Trie.ml[140,6165+21])
                                    Texp_ifthenelse
                                    expression (src/Trie.ml[139,6114+7]..src/Trie.ml[139,6114+45])
                                      Texp_apply
                                      expression (src/Trie.ml[139,6114+7]..src/Trie.ml[139,6114+28])
                                        Texp_ident "reduction_path_exists/715"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/Trie.ml[139,6114+29]..src/Trie.ml[139,6114+38])
                                            Texp_field
                                            expression (src/Trie.ml[139,6114+29]..src/Trie.ml[139,6114+30])
                                              Texp_ident "t/1037"
                                            "current"
                                        <arg>
                                          Nolabel
                                          expression (src/Trie.ml[139,6114+39]..src/Trie.ml[139,6114+40])
                                            Texp_ident "w/1039"
                                        <arg>
                                          Nolabel
                                          expression (src/Trie.ml[139,6114+41]..src/Trie.ml[139,6114+45])
                                            Texp_ident "prod/1038"
                                      ]
                                    expression (src/Trie.ml[140,6165+6]..src/Trie.ml[140,6165+21])
                                      Texp_apply
                                      expression (src/Trie.ml[140,6165+6]..src/Trie.ml[140,6165+12])
                                        Texp_ident "insert/1027"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/Trie.ml[140,6165+13]..src/Trie.ml[140,6165+14])
                                            Texp_ident "t/1037"
                                        <arg>
                                          Nolabel
                                          expression (src/Trie.ml[140,6165+15]..src/Trie.ml[140,6165+16])
                                            Texp_ident "w/1039"
                                        <arg>
                                          Nolabel
                                          expression (src/Trie.ml[140,6165+17]..src/Trie.ml[140,6165+21])
                                            Texp_ident "prod/1038"
                                      ]
                                    None
                            ]
                      ]
                ]
              structure_item (src/Trie.ml[143,6252+2]..src/Trie.ml[144,6273+43])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/Trie.ml[143,6252+6]..src/Trie.ml[143,6252+11])
                      Tpat_var "fresh/1088"
                    expression (src/Trie.ml[143,6252+12]..src/Trie.ml[144,6273+43]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/Trie.ml[143,6252+12]..src/Trie.ml[143,6252+18])
                            Tpat_var "source/1090"
                          expression (src/Trie.ml[144,6273+4]..src/Trie.ml[144,6273+43])
                            Texp_apply
                            expression (src/Trie.ml[144,6273+4]..src/Trie.ml[144,6273+10])
                              Texp_ident "mktrie/983"
                            [
                              <arg>
                                Nolabel
                                expression (src/Trie.ml[144,6273+11]..src/Trie.ml[144,6273+17])
                                  Texp_ident "source/1090"
                              <arg>
                                Nolabel
                                expression (src/Trie.ml[144,6273+18]..src/Trie.ml[144,6273+24])
                                  Texp_ident "source/1090"
                              <arg>
                                Nolabel
                                expression (src/Trie.ml[144,6273+25]..src/Trie.ml[144,6273+27])
                                  Texp_construct "[]"
                                  []
                              <arg>
                                Nolabel
                                expression (src/Trie.ml[144,6273+28]..src/Trie.ml[144,6273+43])
                                  Texp_ident "Dune__exe!.Grammar.SymbolMap.empty"
                            ]
                      ]
                ]
              structure_item (src/Trie.ml[149,6513+2]..src/Trie.ml[158,6732+5])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/Trie.ml[149,6513+6]..src/Trie.ml[149,6513+10])
                      Tpat_var "star/1091"
                    expression (src/Trie.ml[149,6513+11]..src/Trie.ml[158,6732+5]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/Trie.ml[149,6513+11]..src/Trie.ml[149,6513+12])
                            Tpat_var "s/1093"
                          expression (src/Trie.ml[150,6528+4]..src/Trie.ml[158,6732+5])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/Trie.ml[150,6528+8]..src/Trie.ml[150,6528+9])
                                  Tpat_var "t/1094"
                                expression (src/Trie.ml[150,6528+12]..src/Trie.ml[150,6528+19])
                                  Texp_apply
                                  expression (src/Trie.ml[150,6528+12]..src/Trie.ml[150,6528+17])
                                    Texp_ident "fresh/1088"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/Trie.ml[150,6528+18]..src/Trie.ml[150,6528+19])
                                        Texp_ident "s/1093"
                                  ]
                            ]
                            expression (src/Trie.ml[151,6551+4]..src/Trie.ml[158,6732+5])
                              Texp_sequence
                              expression (src/Trie.ml[151,6551+4]..src/Trie.ml[157,6705+25])
                                Texp_apply
                                expression (src/Trie.ml[151,6551+4]..src/Trie.ml[151,6551+18])
                                  Texp_ident "Dune__exe!.Grammar.SymbolMap.iter"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/Trie.ml[151,6551+19]..src/Trie.ml[157,6705+5])
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/Trie.ml[151,6551+24]..src/Trie.ml[151,6551+27])
                                            Tpat_var "sym/1095"
                                          expression (src/Trie.ml[151,6551+28]..src/Trie.ml[156,6663+41]) ghost
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (src/Trie.ml[151,6551+28]..src/Trie.ml[151,6551+29])
                                                  Tpat_any
                                                expression (src/Trie.ml[152,6584+6]..src/Trie.ml[156,6663+41])
                                                  Texp_match
                                                  expression (src/Trie.ml[152,6584+12]..src/Trie.ml[152,6584+15])
                                                    Texp_ident "sym/1095"
                                                  [
                                                    <case>
                                                      pattern (src/Trie.ml[153,6605+8]..src/Trie.ml[153,6605+18])
                                                        Tpat_value
                                                        pattern (src/Trie.ml[153,6605+8]..src/Trie.ml[153,6605+18])
                                                          Tpat_construct "Symbol.T"
                                                          [
                                                            pattern (src/Trie.ml[153,6605+17]..src/Trie.ml[153,6605+18])
                                                              Tpat_any
                                                          ]
                                                          None
                                                      expression (src/Trie.ml[154,6627+10]..src/Trie.ml[154,6627+12])
                                                        Texp_construct "()"
                                                        []
                                                    <case>
                                                      pattern (src/Trie.ml[155,6640+8]..src/Trie.ml[155,6640+19])
                                                        Tpat_value
                                                        pattern (src/Trie.ml[155,6640+8]..src/Trie.ml[155,6640+19])
                                                          Tpat_construct "Symbol.N"
                                                          [
                                                            pattern (src/Trie.ml[155,6640+17]..src/Trie.ml[155,6640+19])
                                                              Tpat_var "nt/1096"
                                                          ]
                                                          None
                                                      expression (src/Trie.ml[156,6663+10]..src/Trie.ml[156,6663+41])
                                                        Texp_apply
                                                        expression (src/Trie.ml[156,6663+10]..src/Trie.ml[156,6663+27])
                                                          Texp_ident "Dune__exe!.Grammar.Production.iternt"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/Trie.ml[156,6663+28]..src/Trie.ml[156,6663+30])
                                                              Texp_ident "nt/1096"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/Trie.ml[156,6663+31]..src/Trie.ml[156,6663+41])
                                                              Texp_apply
                                                              expression (src/Trie.ml[156,6663+32]..src/Trie.ml[156,6663+38])
                                                                Texp_ident "insert/1036"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/Trie.ml[156,6663+39]..src/Trie.ml[156,6663+40])
                                                                    Texp_ident "t/1094"
                                                              ]
                                                        ]
                                                  ]
                                            ]
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/Trie.ml[157,6705+6]..src/Trie.ml[157,6705+25])
                                      Texp_apply
                                      expression (src/Trie.ml[157,6705+7]..src/Trie.ml[157,6705+22])
                                        Texp_ident "Dune__exe!.Lr1.transitions"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/Trie.ml[157,6705+23]..src/Trie.ml[157,6705+24])
                                            Texp_ident "s/1093"
                                      ]
                                ]
                              expression (src/Trie.ml[158,6732+4]..src/Trie.ml[158,6732+5])
                                Texp_ident "t/1094"
                      ]
                ]
              structure_item (src/Trie.ml[165,7080+2]..src/Trie.ml[166,7098+58])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/Trie.ml[165,7080+6]..src/Trie.ml[165,7080+13])
                      Tpat_var "trivial/1118"
                    expression (src/Trie.ml[165,7080+14]..src/Trie.ml[166,7098+58]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/Trie.ml[165,7080+14]..src/Trie.ml[165,7080+15])
                            Tpat_var "t/1120"
                          expression (src/Trie.ml[166,7098+4]..src/Trie.ml[166,7098+58])
                            Texp_apply
                            expression (src/Trie.ml[166,7098+23]..src/Trie.ml[166,7098+25])
                              Texp_ident "Stdlib!.&&"
                            [
                              <arg>
                                Nolabel
                                expression (src/Trie.ml[166,7098+4]..src/Trie.ml[166,7098+22])
                                  Texp_apply
                                  expression (src/Trie.ml[166,7098+18]..src/Trie.ml[166,7098+19])
                                    Texp_ident "Stdlib!.="
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/Trie.ml[166,7098+4]..src/Trie.ml[166,7098+17])
                                        Texp_field
                                        expression (src/Trie.ml[166,7098+4]..src/Trie.ml[166,7098+5])
                                          Texp_ident "t/1120"
                                        "productions"
                                    <arg>
                                      Nolabel
                                      expression (src/Trie.ml[166,7098+20]..src/Trie.ml[166,7098+22])
                                        Texp_construct "[]"
                                        []
                                  ]
                              <arg>
                                Nolabel
                                expression (src/Trie.ml[166,7098+26]..src/Trie.ml[166,7098+58])
                                  Texp_apply
                                  expression (src/Trie.ml[166,7098+26]..src/Trie.ml[166,7098+44])
                                    Texp_ident "Dune__exe!.Grammar.SymbolMap.is_empty"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/Trie.ml[166,7098+45]..src/Trie.ml[166,7098+58])
                                        Texp_field
                                        expression (src/Trie.ml[166,7098+45]..src/Trie.ml[166,7098+46])
                                          Texp_ident "t/1120"
                                        "transitions"
                                  ]
                            ]
                      ]
                ]
              structure_item (src/Trie.ml[170,7227+2]..src/Trie.ml[171,7240+25])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/Trie.ml[170,7227+6]..src/Trie.ml[170,7227+10])
                      Tpat_var "size/1121"
                    expression (src/Trie.ml[171,7240+4]..src/Trie.ml[171,7240+25])
                      Texp_apply
                      expression (src/Trie.ml[171,7240+4]..src/Trie.ml[171,7240+14])
                        Texp_ident "Stdlib!.Array.make"
                      [
                        <arg>
                          Nolabel
                          expression (src/Trie.ml[171,7240+15]..src/Trie.ml[171,7240+20])
                            Texp_ident "Dune__exe!.Lr1.n"
                        <arg>
                          Nolabel
                          expression (src/Trie.ml[171,7240+21]..src/Trie.ml[171,7240+25])
                            Texp_constant Const_int -1
                      ]
                ]
              structure_item (src/Trie.ml[173,7267+2]..src/Trie.ml[178,7394+5])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/Trie.ml[173,7267+6]..src/Trie.ml[173,7267+10])
                      Tpat_var "star/1122"
                    expression (src/Trie.ml[173,7267+11]..src/Trie.ml[178,7394+5]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/Trie.ml[173,7267+11]..src/Trie.ml[173,7267+12])
                            Tpat_var "s/1123"
                          expression (src/Trie.ml[174,7282+4]..src/Trie.ml[178,7394+5])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/Trie.ml[174,7282+8]..src/Trie.ml[174,7282+15])
                                  Tpat_var "initial/1124"
                                expression (src/Trie.ml[174,7282+18]..src/Trie.ml[174,7282+20])
                                  Texp_apply
                                  expression (src/Trie.ml[174,7282+18]..src/Trie.ml[174,7282+19])
                                    Texp_ident "Stdlib!.!"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/Trie.ml[174,7282+19]..src/Trie.ml[174,7282+20])
                                        Texp_ident "c/915"
                                  ]
                            ]
                            expression (src/Trie.ml[175,7306+4]..src/Trie.ml[178,7394+5])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/Trie.ml[175,7306+8]..src/Trie.ml[175,7306+9])
                                    Tpat_var "t/1125"
                                  expression (src/Trie.ml[175,7306+12]..src/Trie.ml[175,7306+18])
                                    Texp_apply
                                    expression (src/Trie.ml[175,7306+12]..src/Trie.ml[175,7306+16])
                                      Texp_ident "star/1091"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/Trie.ml[175,7306+17]..src/Trie.ml[175,7306+18])
                                          Texp_ident "s/1123"
                                    ]
                              ]
                              expression (src/Trie.ml[176,7328+4]..src/Trie.ml[178,7394+5])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (src/Trie.ml[176,7328+8]..src/Trie.ml[176,7328+13])
                                      Tpat_var "final/1126"
                                    expression (src/Trie.ml[176,7328+16]..src/Trie.ml[176,7328+18])
                                      Texp_apply
                                      expression (src/Trie.ml[176,7328+16]..src/Trie.ml[176,7328+17])
                                        Texp_ident "Stdlib!.!"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/Trie.ml[176,7328+17]..src/Trie.ml[176,7328+18])
                                            Texp_ident "c/915"
                                      ]
                                ]
                                expression (src/Trie.ml[177,7350+4]..src/Trie.ml[178,7394+5])
                                  Texp_sequence
                                  expression (src/Trie.ml[177,7350+4]..src/Trie.ml[177,7350+42])
                                    Texp_apply
                                    expression (src/Trie.ml[177,7350+4]..src/Trie.ml[177,7350+42]) ghost
                                      Texp_ident "Stdlib!.Array.set"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/Trie.ml[177,7350+4]..src/Trie.ml[177,7350+8])
                                          Texp_ident "size/1121"
                                      <arg>
                                        Nolabel
                                        expression (src/Trie.ml[177,7350+10]..src/Trie.ml[177,7350+22])
                                          Texp_apply
                                          expression (src/Trie.ml[177,7350+10]..src/Trie.ml[177,7350+20])
                                            Texp_ident "Dune__exe!.Lr1.number"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/Trie.ml[177,7350+21]..src/Trie.ml[177,7350+22])
                                                Texp_ident "s/1123"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/Trie.ml[177,7350+27]..src/Trie.ml[177,7350+42])
                                          Texp_apply
                                          expression (src/Trie.ml[177,7350+33]..src/Trie.ml[177,7350+34])
                                            Texp_ident "Stdlib!.-"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/Trie.ml[177,7350+27]..src/Trie.ml[177,7350+32])
                                                Texp_ident "final/1126"
                                            <arg>
                                              Nolabel
                                              expression (src/Trie.ml[177,7350+35]..src/Trie.ml[177,7350+42])
                                                Texp_ident "initial/1124"
                                          ]
                                    ]
                                  expression (src/Trie.ml[178,7394+4]..src/Trie.ml[178,7394+5])
                                    Texp_ident "t/1125"
                      ]
                ]
              structure_item (src/Trie.ml[182,7481+2]..src/Trie.ml[189,7696+5])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/Trie.ml[182,7481+6]..src/Trie.ml[182,7481+11])
                      Tpat_var "stars/1127"
                    expression (src/Trie.ml[182,7481+12]..src/Trie.ml[189,7696+5]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/Trie.ml[182,7481+12]..src/Trie.ml[182,7481+13])
                            Tpat_var "f/1129"
                          expression (src/Trie.ml[184,7530+4]..src/Trie.ml[189,7696+5])
                            Texp_apply
                            expression (src/Trie.ml[184,7530+4]..src/Trie.ml[184,7530+12])
                              Texp_ident "Dune__exe!.Lr1.iter"
                            [
                              <arg>
                                Nolabel
                                expression (src/Trie.ml[184,7530+13]..src/Trie.ml[189,7696+5])
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/Trie.ml[184,7530+18]..src/Trie.ml[184,7530+19])
                                        Tpat_var "s/1130"
                                      expression (src/Trie.ml[186,7628+6]..src/Trie.ml[188,7682+13])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/Trie.ml[186,7628+10]..src/Trie.ml[186,7628+11])
                                              Tpat_var "t/1131"
                                            expression (src/Trie.ml[186,7628+14]..src/Trie.ml[186,7628+20])
                                              Texp_apply
                                              expression (src/Trie.ml[186,7628+14]..src/Trie.ml[186,7628+18])
                                                Texp_ident "star/1122"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/Trie.ml[186,7628+19]..src/Trie.ml[186,7628+20])
                                                    Texp_ident "s/1130"
                                              ]
                                        ]
                                        expression (src/Trie.ml[187,7652+6]..src/Trie.ml[188,7682+13])
                                          Texp_ifthenelse
                                          expression (src/Trie.ml[187,7652+9]..src/Trie.ml[187,7652+24])
                                            Texp_apply
                                            expression (src/Trie.ml[187,7652+9]..src/Trie.ml[187,7652+12])
                                              Texp_ident "Stdlib!.not"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/Trie.ml[187,7652+13]..src/Trie.ml[187,7652+24])
                                                  Texp_apply
                                                  expression (src/Trie.ml[187,7652+14]..src/Trie.ml[187,7652+21])
                                                    Texp_ident "trivial/1118"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/Trie.ml[187,7652+22]..src/Trie.ml[187,7652+23])
                                                        Texp_ident "t/1131"
                                                  ]
                                            ]
                                          expression (src/Trie.ml[188,7682+8]..src/Trie.ml[188,7682+13])
                                            Texp_apply
                                            expression (src/Trie.ml[188,7682+8]..src/Trie.ml[188,7682+9])
                                              Texp_ident "f/1129"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/Trie.ml[188,7682+10]..src/Trie.ml[188,7682+11])
                                                  Texp_ident "s/1130"
                                              <arg>
                                                Nolabel
                                                expression (src/Trie.ml[188,7682+12]..src/Trie.ml[188,7682+13])
                                                  Texp_ident "t/1131"
                                            ]
                                          None
                                  ]
                            ]
                      ]
                ]
              structure_item (src/Trie.ml[191,7703+2]..src/Trie.ml[193,7746+12])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/Trie.ml[191,7703+6]..src/Trie.ml[191,7703+10])
                      Tpat_var "size/1132"
                    expression (src/Trie.ml[191,7703+11]..src/Trie.ml[193,7746+12]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/Trie.ml[191,7703+11]..src/Trie.ml[191,7703+12])
                            Tpat_var "s/1133"
                          expression (src/Trie.ml[192,7718+4]..src/Trie.ml[193,7746+12])
                            Texp_sequence
                            expression (src/Trie.ml[192,7718+4]..src/Trie.ml[192,7718+26])
                              Texp_assert                              expression (src/Trie.ml[192,7718+11]..src/Trie.ml[192,7718+26])
                                Texp_apply
                                expression (src/Trie.ml[192,7718+21]..src/Trie.ml[192,7718+23])
                                  Texp_ident "Stdlib!.>="
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/Trie.ml[192,7718+12]..src/Trie.ml[192,7718+20])
                                      Texp_apply
                                      expression (src/Trie.ml[192,7718+12]..src/Trie.ml[192,7718+20]) ghost
                                        Texp_ident "Stdlib!.Array.get"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/Trie.ml[192,7718+12]..src/Trie.ml[192,7718+16])
                                            Texp_ident "size/1121"
                                        <arg>
                                          Nolabel
                                          expression (src/Trie.ml[192,7718+18]..src/Trie.ml[192,7718+19])
                                            Texp_ident "s/1133"
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/Trie.ml[192,7718+24]..src/Trie.ml[192,7718+25])
                                      Texp_constant Const_int 0
                                ]
                            expression (src/Trie.ml[193,7746+4]..src/Trie.ml[193,7746+12])
                              Texp_apply
                              expression (src/Trie.ml[193,7746+4]..src/Trie.ml[193,7746+12]) ghost
                                Texp_ident "Stdlib!.Array.get"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/Trie.ml[193,7746+4]..src/Trie.ml[193,7746+8])
                                    Texp_ident "size/1121"
                                <arg>
                                  Nolabel
                                  expression (src/Trie.ml[193,7746+10]..src/Trie.ml[193,7746+11])
                                    Texp_ident "s/1133"
                              ]
                      ]
                ]
              structure_item (src/Trie.ml[195,7760+2]..src/Trie.ml[196,7782+6])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/Trie.ml[195,7760+6]..src/Trie.ml[195,7760+16])
                      Tpat_var "total_size/1134"
                    expression (src/Trie.ml[195,7760+17]..src/Trie.ml[196,7782+6]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/Trie.ml[195,7760+17]..src/Trie.ml[195,7760+19])
                            Tpat_construct "()"
                            []
                            None
                          expression (src/Trie.ml[196,7782+4]..src/Trie.ml[196,7782+6])
                            Texp_apply
                            expression (src/Trie.ml[196,7782+4]..src/Trie.ml[196,7782+5])
                              Texp_ident "Stdlib!.!"
                            [
                              <arg>
                                Nolabel
                                expression (src/Trie.ml[196,7782+5]..src/Trie.ml[196,7782+6])
                                  Texp_ident "c/915"
                            ]
                      ]
                ]
              structure_item (src/Trie.ml[198,7790+2]..src/Trie.ml[199,7812+43])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/Trie.ml[198,7790+6]..src/Trie.ml[198,7790+13])
                      Tpat_var "compare/1137"
                    expression (src/Trie.ml[198,7790+14]..src/Trie.ml[199,7812+43]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/Trie.ml[198,7790+14]..src/Trie.ml[198,7790+16])
                            Tpat_var "t1/1138"
                          expression (src/Trie.ml[198,7790+17]..src/Trie.ml[199,7812+43]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/Trie.ml[198,7790+17]..src/Trie.ml[198,7790+19])
                                  Tpat_var "t2/1139"
                                expression (src/Trie.ml[199,7812+4]..src/Trie.ml[199,7812+43])
                                  Texp_apply
                                  expression (src/Trie.ml[199,7812+4]..src/Trie.ml[199,7812+19])
                                    Texp_ident "Dune__exe!.Generic.compare"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/Trie.ml[199,7812+20]..src/Trie.ml[199,7812+31])
                                        Texp_field
                                        expression (src/Trie.ml[199,7812+20]..src/Trie.ml[199,7812+22])
                                          Texp_ident "t1/1138"
                                        "identity"
                                    <arg>
                                      Nolabel
                                      expression (src/Trie.ml[199,7812+32]..src/Trie.ml[199,7812+43])
                                        Texp_field
                                        expression (src/Trie.ml[199,7812+32]..src/Trie.ml[199,7812+34])
                                          Texp_ident "t2/1139"
                                        "identity"
                                  ]
                            ]
                      ]
                ]
              structure_item (src/Trie.ml[201,7857+2]..src/Trie.ml[202,7874+12])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/Trie.ml[201,7857+6]..src/Trie.ml[201,7857+12])
                      Tpat_var "source/1141"
                    expression (src/Trie.ml[201,7857+13]..src/Trie.ml[202,7874+12]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/Trie.ml[201,7857+13]..src/Trie.ml[201,7857+14])
                            Tpat_var "t/1143"
                          expression (src/Trie.ml[202,7874+4]..src/Trie.ml[202,7874+12])
                            Texp_field
                            expression (src/Trie.ml[202,7874+4]..src/Trie.ml[202,7874+5])
                              Texp_ident "t/1143"
                            "source"
                      ]
                ]
              structure_item (src/Trie.ml[204,7888+2]..src/Trie.ml[205,7906+13])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/Trie.ml[204,7888+6]..src/Trie.ml[204,7888+13])
                      Tpat_var "current/1144"
                    expression (src/Trie.ml[204,7888+14]..src/Trie.ml[205,7906+13]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/Trie.ml[204,7888+14]..src/Trie.ml[204,7888+15])
                            Tpat_var "t/1146"
                          expression (src/Trie.ml[205,7906+4]..src/Trie.ml[205,7906+13])
                            Texp_field
                            expression (src/Trie.ml[205,7906+4]..src/Trie.ml[205,7906+5])
                              Texp_ident "t/1146"
                            "current"
                      ]
                ]
              structure_item (src/Trie.ml[207,7921+2]..src/Trie.ml[208,7944+31])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/Trie.ml[207,7921+6]..src/Trie.ml[207,7921+13])
                      Tpat_var "accepts/1147"
                    expression (src/Trie.ml[207,7921+14]..src/Trie.ml[208,7944+31]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/Trie.ml[207,7921+14]..src/Trie.ml[207,7921+18])
                            Tpat_var "prod/1149"
                          expression (src/Trie.ml[207,7921+19]..src/Trie.ml[208,7944+31]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/Trie.ml[207,7921+19]..src/Trie.ml[207,7921+20])
                                  Tpat_var "t/1150"
                                expression (src/Trie.ml[208,7944+4]..src/Trie.ml[208,7944+31])
                                  Texp_apply
                                  expression (src/Trie.ml[208,7944+4]..src/Trie.ml[208,7944+12])
                                    Texp_ident "Stdlib!.List.mem"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/Trie.ml[208,7944+13]..src/Trie.ml[208,7944+17])
                                        Texp_ident "prod/1149"
                                    <arg>
                                      Nolabel
                                      expression (src/Trie.ml[208,7944+18]..src/Trie.ml[208,7944+31])
                                        Texp_field
                                        expression (src/Trie.ml[208,7944+18]..src/Trie.ml[208,7944+19])
                                          Texp_ident "t/1150"
                                        "productions"
                                  ]
                            ]
                      ]
                ]
              structure_item (src/Trie.ml[210,7977+2]..src/Trie.ml[211,7994+34])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/Trie.ml[210,7977+6]..src/Trie.ml[210,7977+10])
                      Tpat_var "step/1151"
                    expression (src/Trie.ml[210,7977+11]..src/Trie.ml[211,7994+34]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/Trie.ml[210,7977+11]..src/Trie.ml[210,7977+12])
                            Tpat_var "a/1153"
                          expression (src/Trie.ml[210,7977+13]..src/Trie.ml[211,7994+34]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/Trie.ml[210,7977+13]..src/Trie.ml[210,7977+14])
                                  Tpat_var "t/1154"
                                expression (src/Trie.ml[211,7994+4]..src/Trie.ml[211,7994+34])
                                  Texp_apply
                                  expression (src/Trie.ml[211,7994+4]..src/Trie.ml[211,7994+18])
                                    Texp_ident "Dune__exe!.Grammar.SymbolMap.find"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/Trie.ml[211,7994+19]..src/Trie.ml[211,7994+20])
                                        Texp_ident "a/1153"
                                    <arg>
                                      Nolabel
                                      expression (src/Trie.ml[211,7994+21]..src/Trie.ml[211,7994+34])
                                        Texp_field
                                        expression (src/Trie.ml[211,7994+21]..src/Trie.ml[211,7994+22])
                                          Texp_ident "t/1154"
                                        "transitions"
                                  ]
                            ]
                      ]
                ]
              structure_item (src/Trie.ml[213,8067+2]..src/Trie.ml[214,8086+59])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/Trie.ml[213,8067+6]..src/Trie.ml[213,8067+13])
                      Tpat_var "verbose/1155"
                    expression (src/Trie.ml[213,8067+14]..src/Trie.ml[214,8086+59]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/Trie.ml[213,8067+14]..src/Trie.ml[213,8067+16])
                            Tpat_construct "()"
                            []
                            None
                          expression (src/Trie.ml[214,8086+4]..src/Trie.ml[214,8086+59])
                            Texp_apply
                            expression (src/Trie.ml[214,8086+4]..src/Trie.ml[214,8086+18])
                              Texp_ident "Stdlib!.Printf.eprintf"
                            [
                              <arg>
                                Nolabel
                                expression (src/Trie.ml[214,8086+19]..src/Trie.ml[214,8086+44])
                                  Texp_construct "CamlinternalFormatBasics.Format"
                                  [
                                    expression (src/Trie.ml[214,8086+19]..src/Trie.ml[214,8086+44]) ghost
                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                      [
                                        expression (src/Trie.ml[214,8086+19]..src/Trie.ml[214,8086+44]) ghost
                                          Texp_constant Const_string("Total star size: ",(src/Trie.ml[214,8086+19]..src/Trie.ml[214,8086+44]) ghost,None)
                                        expression (src/Trie.ml[214,8086+19]..src/Trie.ml[214,8086+44]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Int"
                                          [
                                            expression (src/Trie.ml[214,8086+19]..src/Trie.ml[214,8086+44]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Int_d"
                                              []
                                            expression (src/Trie.ml[214,8086+19]..src/Trie.ml[214,8086+44]) ghost
                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                              []
                                            expression (src/Trie.ml[214,8086+19]..src/Trie.ml[214,8086+44]) ghost
                                              Texp_construct "CamlinternalFormatBasics.No_precision"
                                              []
                                            expression (src/Trie.ml[214,8086+19]..src/Trie.ml[214,8086+44]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Char_literal"
                                              [
                                                expression (src/Trie.ml[214,8086+19]..src/Trie.ml[214,8086+44]) ghost
                                                  Texp_constant Const_char 0a
                                                expression (src/Trie.ml[214,8086+19]..src/Trie.ml[214,8086+44]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Flush"
                                                  [
                                                    expression (src/Trie.ml[214,8086+19]..src/Trie.ml[214,8086+44]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                      []
                                                  ]
                                              ]
                                          ]
                                      ]
                                    expression (src/Trie.ml[214,8086+19]..src/Trie.ml[214,8086+44]) ghost
                                      Texp_constant Const_string("Total star size: %d\n%!",(src/Trie.ml[214,8086+19]..src/Trie.ml[214,8086+44]) ghost,None)
                                  ]
                              <arg>
                                Nolabel
                                expression (src/Trie.ml[214,8086+45]..src/Trie.ml[214,8086+59])
                                  Texp_apply
                                  expression (src/Trie.ml[214,8086+46]..src/Trie.ml[214,8086+56])
                                    Texp_ident "total_size/1134"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/Trie.ml[214,8086+56]..src/Trie.ml[214,8086+58])
                                        Texp_construct "()"
                                        []
                                  ]
                            ]
                      ]
                ]
              structure_item (src/Trie.ml[216,8147+2]..src/Trie.ml[219,8288+5])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/Trie.ml[216,8147+6]..src/Trie.ml[216,8147+12])
                      Tpat_var "decode/1194"
                    expression (src/Trie.ml[216,8147+13]..src/Trie.ml[219,8288+5]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/Trie.ml[216,8147+13]..src/Trie.ml[216,8147+14])
                            Tpat_var "i/1196"
                          expression (src/Trie.ml[217,8164+4]..src/Trie.ml[219,8288+5])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/Trie.ml[217,8164+8]..src/Trie.ml[217,8164+9])
                                  Tpat_var "t/1197"
                                expression (src/Trie.ml[217,8164+12]..src/Trie.ml[217,8164+47])
                                  Texp_apply
                                  expression (src/Trie.ml[217,8164+12]..src/Trie.ml[217,8164+39])
                                    Texp_ident "MenhirLib!.InfiniteArray.get"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/Trie.ml[217,8164+40]..src/Trie.ml[217,8164+45])
                                        Texp_ident "tries/916"
                                    <arg>
                                      Nolabel
                                      expression (src/Trie.ml[217,8164+46]..src/Trie.ml[217,8164+47])
                                        Texp_ident "i/1196"
                                  ]
                            ]
                            expression (src/Trie.ml[218,8215+4]..src/Trie.ml[219,8288+5])
                              Texp_sequence
                              expression (src/Trie.ml[218,8215+4]..src/Trie.ml[218,8215+27])
                                Texp_assert                                expression (src/Trie.ml[218,8215+11]..src/Trie.ml[218,8215+27])
                                  Texp_apply
                                  expression (src/Trie.ml[218,8215+23]..src/Trie.ml[218,8215+24])
                                    Texp_ident "Stdlib!.="
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/Trie.ml[218,8215+12]..src/Trie.ml[218,8215+22])
                                        Texp_field
                                        expression (src/Trie.ml[218,8215+12]..src/Trie.ml[218,8215+13])
                                          Texp_ident "t/1197"
                                        "identity"
                                    <arg>
                                      Nolabel
                                      expression (src/Trie.ml[218,8215+25]..src/Trie.ml[218,8215+26])
                                        Texp_ident "i/1196"
                                  ]
                              expression (src/Trie.ml[219,8288+4]..src/Trie.ml[219,8288+5])
                                Texp_ident "t/1197"
                      ]
                ]
              structure_item (src/Trie.ml[221,8295+2]..src/Trie.ml[223,8375+14])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/Trie.ml[221,8295+6]..src/Trie.ml[221,8295+12])
                      Tpat_var "encode/1198"
                    expression (src/Trie.ml[221,8295+13]..src/Trie.ml[223,8375+14]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/Trie.ml[221,8295+13]..src/Trie.ml[221,8295+14])
                            Tpat_var "t/1200"
                          expression (src/Trie.ml[222,8312+4]..src/Trie.ml[223,8375+14])
                            Texp_sequence
                            expression (src/Trie.ml[222,8312+4]..src/Trie.ml[222,8312+35])
                              Texp_assert                              expression (src/Trie.ml[222,8312+11]..src/Trie.ml[222,8312+35])
                                Texp_apply
                                expression (src/Trie.ml[222,8312+30]..src/Trie.ml[222,8312+32])
                                  Texp_ident "Stdlib!.=="
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/Trie.ml[222,8312+12]..src/Trie.ml[222,8312+29])
                                      Texp_apply
                                      expression (src/Trie.ml[222,8312+12]..src/Trie.ml[222,8312+18])
                                        Texp_ident "decode/1194"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/Trie.ml[222,8312+19]..src/Trie.ml[222,8312+29])
                                            Texp_field
                                            expression (src/Trie.ml[222,8312+19]..src/Trie.ml[222,8312+20])
                                              Texp_ident "t/1200"
                                            "identity"
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/Trie.ml[222,8312+33]..src/Trie.ml[222,8312+34])
                                      Texp_ident "t/1200"
                                ]
                            expression (src/Trie.ml[223,8375+4]..src/Trie.ml[223,8375+14])
                              Texp_field
                              expression (src/Trie.ml[223,8375+4]..src/Trie.ml[223,8375+5])
                                Texp_ident "t/1200"
                              "identity"
                      ]
                ]
            ]
]

{<Dune__exe__Trie>
 "Make"[module] ->
   Abs<Dune__exe__Trie.86>
      (X/908,
       {
        "accepts"[value] -> <Dune__exe__Trie.74>;
        "compare"[value] -> <Dune__exe__Trie.67>;
        "current"[value] -> <Dune__exe__Trie.72>;
        "decode"[value] -> <Dune__exe__Trie.81>;
        "encode"[value] -> <Dune__exe__Trie.84>;
        "size"[value] -> <Dune__exe__Trie.64>;
        "source"[value] -> <Dune__exe__Trie.70>;
        "stars"[value] -> <Dune__exe__Trie.60>;
        "step"[value] -> <Dune__exe__Trie.77>;
        "total_size"[value] -> <Dune__exe__Trie.66>;
        "trie"[type] -> <Dune__exe__Trie.15>;
        "verbose"[value] -> <Dune__exe__Trie.80>;
        });
 }

(seq
  (let
    (can_reduce/414 =
       (function s/416 prod/417 : int
         (let
           (*match*/2477 =
              (apply (field_imm 0 (global Dune__exe__Default!)) s/416))
           (catch
             (if (isint *match*/2477) (exit 1)
               (let
                 (*match*/2478 =a (field_imm 0 *match*/2477)
                  prod'/503 =a (field_imm 0 *match*/2478))
                 (if (caml_equal prod/417 prod'/503) 1 (exit 1))))
            with (1)
             (apply (field_imm 19 (field_imm 4 (global Dune__exe__Grammar!)))
               (function z/554 prods/555 accu/556[int] : int
                 (seq
                   (if
                     (not
                       (apply
                         (field_imm 1
                           (field_imm 2 (global Dune__exe__Grammar!)))
                         z/554
                         (field_imm 9
                           (field_imm 2 (global Dune__exe__Grammar!)))))
                     0
                     (raise
                       (makeblock 0 (global Assert_failure/28!)
                         [0: "src/Trie.ml" 34 8])))
                   (|| accu/556
                     (&&
                       (apply
                         (field_imm 14
                           (field_imm 2 (global Dune__exe__Grammar!)))
                         z/554)
                       (apply (field_imm 36 (global Stdlib__List!)) prod/417
                         prods/555)))))
               (apply (field_imm 20 (global Dune__exe__Lr1!)) s/416) 0)))))
    (setfield_ptr(root-init) 1 (global Dune__exe__Trie!) can_reduce/414))
  (letrec
    (reduction_path_exists/715
       (function s/716 w/728 prod/729 : int
         (if (isint w/728)
           (apply (field_imm 1 (global Dune__exe__Trie!)) s/716 prod/729)
           (let (w/731 =a (field_imm 1 w/728) a/730 =a (field_imm 0 w/728))
             (&&
               (apply
                 (field_imm 4 (field_imm 5 (global Dune__exe__Grammar!)))
                 a/730)
               (catch
                 (try
                   (exit 2
                     (apply
                       (field_imm 16
                         (field_imm 7 (global Dune__exe__Grammar!)))
                       a/730
                       (apply (field_imm 19 (global Dune__exe__Lr1!)) s/716)))
                  with exn/2480
                   (catch
                     (if (== exn/2480 (field_imm 7 (global Stdlib!))) 0
                       (exit 3))
                    with (3) (reraise exn/2480)))
                with (2 s/907)
                 (apply reduction_path_exists/715 s/907 w/731 prod/729)))))))
    (setfield_ptr(root-init) 2 (global Dune__exe__Trie!)
      reduction_path_exists/715))
  (let
    (Make/1201 =
       (function X/2487 is_a_functor
         (let
           (X/908 =a X/2487
            c/915 = (makemutable 0 (int) 0)
            tries/916 =
              (let
                (s/917 = 0
                 dummy/959 =
                   (makemutable 0 (int,*,*,*,*) -1 s/917 s/917 0
                     (field_imm 0 (field_imm 7 (global Dune__exe__Grammar!)))))
                (apply (field_imm 0 (field_imm 8 (global MenhirLib!)))
                  dummy/959))
            mktrie/983 =
              (function source/985 current/986 productions/987
                transitions/988
                (let
                  (identity/989 =[int]
                     (apply (field_imm 22 (global Dune__exe__Misc!)) c/915)
                   t/1026 =
                     (makemutable 0 (int,*,*,*,*) identity/989 source/985
                       current/986 productions/987 transitions/988))
                  (seq
                    (apply (field_imm 2 (field_imm 8 (global MenhirLib!)))
                      tries/916 identity/989 t/1026)
                    t/1026))))
           (letrec
             (insert/1027
                (function t/1028 w/1029 prod/1030 : int
                  (if (isint w/1029)
                    (seq
                      (if
                        (apply (field_imm 1 (global Dune__exe__Trie!))
                          (field_imm 2 t/1028) prod/1030)
                        0
                        (raise
                          (makeblock 0 (global Assert_failure/28!)
                            [0: "src/Trie.ml" 109 8])))
                      (setfield_ptr 3 t/1028
                        (makeblock 0 prod/1030 (field_mut 3 t/1028))))
                    (let
                      (w/1032 =a (field_imm 1 w/1029)
                       a/1031 =a (field_imm 0 w/1029))
                      (catch
                        (try
                          (exit 8
                            (apply
                              (field_imm 16
                                (field_imm 7 (global Dune__exe__Grammar!)))
                              a/1031
                              (apply (field_imm 19 (global Dune__exe__Lr1!))
                                (field_imm 2 t/1028))))
                         with exn/2485
                          (catch
                            (if (== exn/2485 (field_imm 7 (global Stdlib!)))
                              (raise
                                (makeblock 0 (global Assert_failure/28!)
                                  [0: "src/Trie.ml" 114 12]))
                              (exit 9))
                           with (9) (reraise exn/2485)))
                       with (8 successor/1033)
                        (let
                          (t'/1034 =
                             (try
                               (apply
                                 (field_imm 16
                                   (field_imm 7 (global Dune__exe__Grammar!)))
                                 a/1031 (field_mut 4 t/1028))
                              with exn/2484
                               (catch
                                 (if
                                   (== exn/2484
                                     (field_imm 7 (global Stdlib!)))
                                   (let
                                     (t'/1035 =
                                        (apply mktrie/983
                                          (field_imm 1 t/1028) successor/1033
                                          0
                                          (field_imm 0
                                            (field_imm 7
                                              (global Dune__exe__Grammar!)))))
                                     (seq
                                       (setfield_ptr 4 t/1028
                                         (apply
                                           (field_imm 1
                                             (field_imm 7
                                               (global Dune__exe__Grammar!)))
                                           a/1031 t'/1035
                                           (field_mut 4 t/1028)))
                                       t'/1035))
                                   (exit 7))
                                with (7) (reraise exn/2484))))
                          (apply insert/1027 t'/1034 w/1032 prod/1030)))))))
             (let
               (insert/1036 =
                  (function t/1037 prod/1038 : int
                    (let
                      (w/1039 =
                         (apply (field_imm 8 (global Stdlib__Array!))
                           (apply
                             (field_imm 6
                               (field_imm 8 (global Dune__exe__Grammar!)))
                             prod/1038)))
                      (if
                        (apply (field_imm 2 (global Dune__exe__Trie!))
                          (field_imm 2 t/1037) w/1039 prod/1038)
                        (apply insert/1027 t/1037 w/1039 prod/1038) 0)))
                fresh/1088 =
                  (function source/1090
                    (apply mktrie/983 source/1090 source/1090 0
                      (field_imm 0
                        (field_imm 7 (global Dune__exe__Grammar!)))))
                star/1091 =
                  (function s/1093
                    (let (t/1094 = (apply fresh/1088 s/1093))
                      (seq
                        (apply
                          (field_imm 22
                            (field_imm 7 (global Dune__exe__Grammar!)))
                          (function sym/1095 param/1117 : int
                            (switch* sym/1095
                             case tag 0:
                              (let (nt/1096 =a (field_imm 0 sym/1095))
                                (apply
                                  (field_imm 22
                                    (field_imm 8
                                      (global Dune__exe__Grammar!)))
                                  nt/1096 (apply insert/1036 t/1094)))
                             case tag 1:
                              (let (*match*/2486 =a (field_imm 0 sym/1095))
                                0)))
                          (apply (field_imm 19 (global Dune__exe__Lr1!))
                            s/1093))
                        t/1094)))
                trivial/1118 =
                  (function t/1120 : int
                    (&& (== (field_mut 3 t/1120) 0)
                      (apply
                        (field_imm 30
                          (field_imm 7 (global Dune__exe__Grammar!)))
                        (field_mut 4 t/1120))))
                size/1121 =
                  (caml_make_vect (field_imm 8 (global Dune__exe__Lr1!)) -1)
                star/1122 =
                  (function s/1123
                    (let
                      (initial/1124 =[int] (field_int 0 c/915)
                       t/1125 = (apply star/1091 s/1123)
                       final/1126 =[int] (field_int 0 c/915))
                      (seq
                        (array.set[int] size/1121
                          (apply (field_imm 9 (global Dune__exe__Lr1!))
                            s/1123)
                          (- final/1126 initial/1124))
                        t/1125)))
                stars/1127 =
                  (function f/1129 : int
                    (apply (field_imm 25 (global Dune__exe__Lr1!))
                      (function s/1130 : int
                        (let (t/1131 = (apply star/1122 s/1130))
                          (if (not (apply trivial/1118 t/1131))
                            (apply f/1129 s/1130 t/1131) 0)))))
                size/1132 =
                  (function s/1133[int] : int
                    (seq
                      (if (>= (array.get[int] size/1121 s/1133) 0) 0
                        (raise
                          (makeblock 0 (global Assert_failure/28!)
                            [0: "src/Trie.ml" 192 4])))
                      (array.get[int] size/1121 s/1133)))
                total_size/1134 =
                  (function param/1136[int] : int (field_int 0 c/915))
                compare/1137 =
                  (function t1/1138 t2/1139 : int
                    (apply (field_imm 0 (global Dune__exe__Generic!))
                      (field_int 0 t1/1138) (field_int 0 t2/1139)))
                source/1141 = (function t/1143 (field_imm 1 t/1143))
                current/1144 = (function t/1146 (field_imm 2 t/1146))
                accepts/1147 =
                  (function prod/1149 t/1150 : int
                    (apply (field_imm 36 (global Stdlib__List!)) prod/1149
                      (field_mut 3 t/1150)))
                step/1151 =
                  (function a/1153 t/1154
                    (apply
                      (field_imm 16
                        (field_imm 7 (global Dune__exe__Grammar!)))
                      a/1153 (field_mut 4 t/1154)))
                verbose/1155 =
                  (function param/1193[int] : int
                    (apply (field_imm 2 (global Stdlib__Printf!))
                      [0:
                       [11:
                        "Total star size: " [4: 0 0 0 [12: '\n' [10: 0]]]]
                       "Total star size: %d\n%!"]
                      (apply total_size/1134 0)))
                decode/1194 =
                  (function i/1196[int]
                    (let
                      (t/1197 =
                         (apply
                           (field_imm 1 (field_imm 8 (global MenhirLib!)))
                           tries/916 i/1196))
                      (seq
                        (if (== (field_int 0 t/1197) i/1196) 0
                          (raise
                            (makeblock 0 (global Assert_failure/28!)
                              [0: "src/Trie.ml" 218 4])))
                        t/1197)))
                encode/1198 =
                  (function t/1200 : int
                    (seq
                      (if
                        (== (apply decode/1194 (field_int 0 t/1200)) t/1200)
                        0
                        (raise
                          (makeblock 0 (global Assert_failure/28!)
                            [0: "src/Trie.ml" 222 4])))
                      (field_int 0 t/1200))))
               (makeblock 0 c/915 tries/916 mktrie/983 insert/1036 fresh/1088
                 trivial/1118 star/1122 stars/1127 size/1132 total_size/1134
                 compare/1137 source/1141 current/1144 accepts/1147 step/1151
                 verbose/1155 decode/1194 encode/1198))))))
    (seq
      (setfield_ptr(root-init) 0 (global Dune__exe__Trie!)
        (function funarg/2488 is_a_functor stub
          (let (let/2489 = (apply Make/1201 funarg/2488))
            (makeblock 0 (field_mut 7 let/2489) (field_mut 8 let/2489)
              (field_mut 9 let/2489) (field_mut 10 let/2489)
              (field_mut 11 let/2489) (field_mut 12 let/2489)
              (field_mut 13 let/2489) (field_mut 14 let/2489)
              (field_mut 15 let/2489) (field_mut 17 let/2489)
              (field_mut 16 let/2489)))))
      0)))
(seq
  (let
    (can_reduce/414 =
       (function s/416 prod/417 : int
         (let
           (*match*/2477 =
              (apply (field_imm 0 (global Dune__exe__Default!)) s/416))
           (catch
             (if (isint *match*/2477) (exit 1)
               (if
                 (caml_equal prod/417
                   (field_imm 0 (field_imm 0 *match*/2477)))
                 1 (exit 1)))
            with (1)
             (apply (field_imm 19 (field_imm 4 (global Dune__exe__Grammar!)))
               (function z/554 prods/555 accu/556[int] : int
                 (seq
                   (if
                     (not
                       (apply
                         (field_imm 1
                           (field_imm 2 (global Dune__exe__Grammar!)))
                         z/554
                         (field_imm 9
                           (field_imm 2 (global Dune__exe__Grammar!)))))
                     0
                     (raise
                       (makeblock 0 (global Assert_failure/28!)
                         [0: "src/Trie.ml" 34 8])))
                   (|| accu/556
                     (&&
                       (apply
                         (field_imm 14
                           (field_imm 2 (global Dune__exe__Grammar!)))
                         z/554)
                       (apply (field_imm 36 (global Stdlib__List!)) prod/417
                         prods/555)))))
               (apply (field_imm 20 (global Dune__exe__Lr1!)) s/416) 0)))))
    (setfield_ptr(root-init) 1 (global Dune__exe__Trie!) can_reduce/414))
  (letrec
    (reduction_path_exists/715
       (function s/716 w/728 prod/729 : int
         (if (isint w/728)
           (apply (field_imm 1 (global Dune__exe__Trie!)) s/716 prod/729)
           (let (a/730 =a (field_imm 0 w/728))
             (&&
               (apply
                 (field_imm 4 (field_imm 5 (global Dune__exe__Grammar!)))
                 a/730)
               (catch
                 (try
                   (exit 2
                     (apply
                       (field_imm 16
                         (field_imm 7 (global Dune__exe__Grammar!)))
                       a/730
                       (apply (field_imm 19 (global Dune__exe__Lr1!)) s/716)))
                  with exn/2480
                   (if (== exn/2480 (field_imm 7 (global Stdlib!))) 0
                     (reraise exn/2480)))
                with (2 s/907)
                 (apply reduction_path_exists/715 s/907 (field_imm 1 w/728)
                   prod/729)))))))
    (setfield_ptr(root-init) 2 (global Dune__exe__Trie!)
      reduction_path_exists/715))
  (let
    (Make/1201 =
       (function X/2487 is_a_functor
         (let
           (c/915 = (makemutable 0 (int) 0)
            tries/916 =
              (let
                (s/917 = 0
                 dummy/959 =
                   (makemutable 0 (int,*,*,*,*) -1 s/917 s/917 0
                     (field_imm 0 (field_imm 7 (global Dune__exe__Grammar!)))))
                (apply (field_imm 0 (field_imm 8 (global MenhirLib!)))
                  dummy/959))
            mktrie/983 =
              (function source/985 current/986 productions/987
                transitions/988
                (let
                  (identity/989 =[int]
                     (apply (field_imm 22 (global Dune__exe__Misc!)) c/915)
                   t/1026 =
                     (makemutable 0 (int,*,*,*,*) identity/989 source/985
                       current/986 productions/987 transitions/988))
                  (seq
                    (apply (field_imm 2 (field_imm 8 (global MenhirLib!)))
                      tries/916 identity/989 t/1026)
                    t/1026))))
           (letrec
             (insert/1027
                (function t/1028 w/1029 prod/1030 : int
                  (if (isint w/1029)
                    (seq
                      (if
                        (apply (field_imm 1 (global Dune__exe__Trie!))
                          (field_imm 2 t/1028) prod/1030)
                        0
                        (raise
                          (makeblock 0 (global Assert_failure/28!)
                            [0: "src/Trie.ml" 109 8])))
                      (setfield_ptr 3 t/1028
                        (makeblock 0 prod/1030 (field_mut 3 t/1028))))
                    (let (a/1031 =a (field_imm 0 w/1029))
                      (catch
                        (try
                          (exit 8
                            (apply
                              (field_imm 16
                                (field_imm 7 (global Dune__exe__Grammar!)))
                              a/1031
                              (apply (field_imm 19 (global Dune__exe__Lr1!))
                                (field_imm 2 t/1028))))
                         with exn/2485
                          (if (== exn/2485 (field_imm 7 (global Stdlib!)))
                            (raise
                              (makeblock 0 (global Assert_failure/28!)
                                [0: "src/Trie.ml" 114 12]))
                            (reraise exn/2485)))
                       with (8 successor/1033)
                        (let
                          (t'/1034 =
                             (try
                               (apply
                                 (field_imm 16
                                   (field_imm 7 (global Dune__exe__Grammar!)))
                                 a/1031 (field_mut 4 t/1028))
                              with exn/2484
                               (if
                                 (== exn/2484 (field_imm 7 (global Stdlib!)))
                                 (let
                                   (t'/1035 =
                                      (apply mktrie/983 (field_imm 1 t/1028)
                                        successor/1033 0
                                        (field_imm 0
                                          (field_imm 7
                                            (global Dune__exe__Grammar!)))))
                                   (seq
                                     (setfield_ptr 4 t/1028
                                       (apply
                                         (field_imm 1
                                           (field_imm 7
                                             (global Dune__exe__Grammar!)))
                                         a/1031 t'/1035 (field_mut 4 t/1028)))
                                     t'/1035))
                                 (reraise exn/2484))))
                          (apply insert/1027 t'/1034 (field_imm 1 w/1029)
                            prod/1030)))))))
             (let
               (insert/1036 =
                  (function t/1037 prod/1038 : int
                    (let
                      (w/1039 =
                         (apply (field_imm 8 (global Stdlib__Array!))
                           (apply
                             (field_imm 6
                               (field_imm 8 (global Dune__exe__Grammar!)))
                             prod/1038)))
                      (if
                        (apply (field_imm 2 (global Dune__exe__Trie!))
                          (field_imm 2 t/1037) w/1039 prod/1038)
                        (apply insert/1027 t/1037 w/1039 prod/1038) 0)))
                fresh/1088 =
                  (function source/1090
                    (apply mktrie/983 source/1090 source/1090 0
                      (field_imm 0
                        (field_imm 7 (global Dune__exe__Grammar!)))))
                star/1091 =
                  (function s/1093
                    (let (t/1094 = (apply fresh/1088 s/1093))
                      (seq
                        (apply
                          (field_imm 22
                            (field_imm 7 (global Dune__exe__Grammar!)))
                          (function sym/1095 param/1117 : int
                            (switch* sym/1095
                             case tag 0:
                              (apply
                                (field_imm 22
                                  (field_imm 8 (global Dune__exe__Grammar!)))
                                (field_imm 0 sym/1095)
                                (apply insert/1036 t/1094))
                             case tag 1: 0))
                          (apply (field_imm 19 (global Dune__exe__Lr1!))
                            s/1093))
                        t/1094)))
                trivial/1118 =
                  (function t/1120 : int
                    (&& (== (field_mut 3 t/1120) 0)
                      (apply
                        (field_imm 30
                          (field_imm 7 (global Dune__exe__Grammar!)))
                        (field_mut 4 t/1120))))
                size/1121 =
                  (caml_make_vect (field_imm 8 (global Dune__exe__Lr1!)) -1)
                star/1122 =
                  (function s/1123
                    (let
                      (initial/1124 =[int] (field_int 0 c/915)
                       t/1125 = (apply star/1091 s/1123)
                       final/1126 =[int] (field_int 0 c/915))
                      (seq
                        (array.set[int] size/1121
                          (apply (field_imm 9 (global Dune__exe__Lr1!))
                            s/1123)
                          (- final/1126 initial/1124))
                        t/1125)))
                stars/1127 =
                  (function f/1129 : int
                    (apply (field_imm 25 (global Dune__exe__Lr1!))
                      (function s/1130 : int
                        (let (t/1131 = (apply star/1122 s/1130))
                          (if (not (apply trivial/1118 t/1131))
                            (apply f/1129 s/1130 t/1131) 0)))))
                size/1132 =
                  (function s/1133[int] : int
                    (seq
                      (if (>= (array.get[int] size/1121 s/1133) 0) 0
                        (raise
                          (makeblock 0 (global Assert_failure/28!)
                            [0: "src/Trie.ml" 192 4])))
                      (array.get[int] size/1121 s/1133)))
                total_size/1134 =
                  (function param/1136[int] : int (field_int 0 c/915))
                compare/1137 =
                  (function t1/1138 t2/1139 : int
                    (apply (field_imm 0 (global Dune__exe__Generic!))
                      (field_int 0 t1/1138) (field_int 0 t2/1139)))
                source/1141 = (function t/1143 (field_imm 1 t/1143))
                current/1144 = (function t/1146 (field_imm 2 t/1146))
                accepts/1147 =
                  (function prod/1149 t/1150 : int
                    (apply (field_imm 36 (global Stdlib__List!)) prod/1149
                      (field_mut 3 t/1150)))
                step/1151 =
                  (function a/1153 t/1154
                    (apply
                      (field_imm 16
                        (field_imm 7 (global Dune__exe__Grammar!)))
                      a/1153 (field_mut 4 t/1154)))
                verbose/1155 =
                  (function param/1193[int] : int
                    (apply (field_imm 2 (global Stdlib__Printf!))
                      [0:
                       [11:
                        "Total star size: " [4: 0 0 0 [12: '\n' [10: 0]]]]
                       "Total star size: %d\n%!"]
                      (apply total_size/1134 0)))
                decode/1194 =
                  (function i/1196[int]
                    (let
                      (t/1197 =
                         (apply
                           (field_imm 1 (field_imm 8 (global MenhirLib!)))
                           tries/916 i/1196))
                      (seq
                        (if (== (field_int 0 t/1197) i/1196) 0
                          (raise
                            (makeblock 0 (global Assert_failure/28!)
                              [0: "src/Trie.ml" 218 4])))
                        t/1197)))
                encode/1198 =
                  (function t/1200 : int
                    (seq
                      (if
                        (== (apply decode/1194 (field_int 0 t/1200)) t/1200)
                        0
                        (raise
                          (makeblock 0 (global Assert_failure/28!)
                            [0: "src/Trie.ml" 222 4])))
                      (field_int 0 t/1200))))
               (makeblock 0 c/915 tries/916 mktrie/983 insert/1036 fresh/1088
                 trivial/1118 star/1122 stars/1127 size/1132 total_size/1134
                 compare/1137 source/1141 current/1144 accepts/1147 step/1151
                 verbose/1155 decode/1194 encode/1198))))))
    (seq
      (setfield_ptr(root-init) 0 (global Dune__exe__Trie!)
        (function funarg/2488 is_a_functor stub
          (let (let/2489 = (apply Make/1201 funarg/2488))
            (makeblock 0 (field_mut 7 let/2489) (field_mut 8 let/2489)
              (field_mut 9 let/2489) (field_mut 10 let/2489)
              (field_mut 11 let/2489) (field_mut 12 let/2489)
              (field_mut 13 let/2489) (field_mut 14 let/2489)
              (field_mut 15 let/2489) (field_mut 17 let/2489)
              (field_mut 16 let/2489)))))
      0)))
