[
  structure_item (src/StackSymbols.ml[14,1002+0]..[14,1002+12])
    Pstr_open Fresh
    module_expr (src/StackSymbols.ml[14,1002+5]..[14,1002+12])
      Pmod_ident "Grammar" (src/StackSymbols.ml[14,1002+5]..[14,1002+12])
  structure_item (src/StackSymbols.ml[16,1016+0]..[50,2451+3])
    Pstr_modtype "STACK_SYMBOLS" (src/StackSymbols.ml[16,1016+12]..[16,1016+25])
      module_type (src/StackSymbols.ml[16,1016+28]..[50,2451+3])
        Pmty_signature
        [
          signature_item (src/StackSymbols.ml[21,1245+2]..[22,1263+18])
            Psig_type Rec
            [
              type_declaration "property" (src/StackSymbols.ml[21,1245+7]..[21,1245+15]) (src/StackSymbols.ml[21,1245+2]..[22,1263+18])
                attribute "ocaml.doc"
                  [
                    structure_item (src/StackSymbols.ml[18,1049+2]..[20,1199+45])
                      Pstr_eval
                      expression (src/StackSymbols.ml[18,1049+2]..[20,1199+45])
                        Pexp_constant PConst_string("A property is a description of the known suffix of the stack at state\n     [s]. It is represented as an array of symbols. By convention, the top\n     of the stack is the end of the array. ",(src/StackSymbols.ml[18,1049+2]..[20,1199+45]),None)
                  ]
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/StackSymbols.ml[22,1263+4]..[22,1263+18])
                      Ptyp_constr "array" (src/StackSymbols.ml[22,1263+13]..[22,1263+18])
                      [
                        core_type (src/StackSymbols.ml[22,1263+4]..[22,1263+12])
                          Ptyp_constr "Symbol.t" (src/StackSymbols.ml[22,1263+4]..[22,1263+12])
                          []
                      ]
            ]
          signature_item (src/StackSymbols.ml[27,1469+2]..[27,1469+41])
            Psig_value
            value_description "stack_symbols" (src/StackSymbols.ml[27,1469+6]..[27,1469+19]) (src/StackSymbols.ml[27,1469+2]..[27,1469+41])
              attribute "ocaml.doc"
                [
                  structure_item (src/StackSymbols.ml[24,1283+2]..[26,1426+42])
                    Pstr_eval
                    expression (src/StackSymbols.ml[24,1283+2]..[26,1426+42])
                      Pexp_constant PConst_string("[stack_symbols s] is the known suffix of the stack at state [s]. It\n     is represented as an array of symbols. By convention, the top of\n     the stack is the end of the array. ",(src/StackSymbols.ml[24,1283+2]..[26,1426+42]),None)
                ]
              core_type (src/StackSymbols.ml[27,1469+21]..[27,1469+41])
                Ptyp_arrow
                Nolabel
                core_type (src/StackSymbols.ml[27,1469+21]..[27,1469+29])
                  Ptyp_constr "Lr1.node" (src/StackSymbols.ml[27,1469+21]..[27,1469+29])
                  []
                core_type (src/StackSymbols.ml[27,1469+33]..[27,1469+41])
                  Ptyp_constr "property" (src/StackSymbols.ml[27,1469+33]..[27,1469+41])
                  []
              []
          signature_item (src/StackSymbols.ml[30,1574+2]..[30,1574+35])
            Psig_value
            value_description "stack_height" (src/StackSymbols.ml[30,1574+6]..[30,1574+18]) (src/StackSymbols.ml[30,1574+2]..[30,1574+35])
              attribute "ocaml.doc"
                [
                  structure_item (src/StackSymbols.ml[29,1512+2]..[29,1512+61])
                    Pstr_eval
                    expression (src/StackSymbols.ml[29,1512+2]..[29,1512+61])
                      Pexp_constant PConst_string("[stack_height s] is [Array.length (stack_symbols s)]. ",(src/StackSymbols.ml[29,1512+2]..[29,1512+61]),None)
                ]
              core_type (src/StackSymbols.ml[30,1574+20]..[30,1574+35])
                Ptyp_arrow
                Nolabel
                core_type (src/StackSymbols.ml[30,1574+20]..[30,1574+28])
                  Ptyp_constr "Lr1.node" (src/StackSymbols.ml[30,1574+20]..[30,1574+28])
                  []
                core_type (src/StackSymbols.ml[30,1574+32]..[30,1574+35])
                  Ptyp_constr "int" (src/StackSymbols.ml[30,1574+32]..[30,1574+35])
                  []
              []
          signature_item (src/StackSymbols.ml[36,1873+2]..[36,1873+54])
            Psig_value
            value_description "production_symbols" (src/StackSymbols.ml[36,1873+6]..[36,1873+24]) (src/StackSymbols.ml[36,1873+2]..[36,1873+54])
              attribute "ocaml.doc"
                [
                  structure_item (src/StackSymbols.ml[32,1611+2]..[35,1827+45])
                    Pstr_eval
                    expression (src/StackSymbols.ml[32,1611+2]..[35,1827+45])
                      Pexp_constant PConst_string("[production_symbols prod] is the known suffix of the stack at a state\n     where production [prod] can be reduced. In the short invariant, the\n     length of this suffix is [Production.length prod]. In the long\n     invariant, its length can be greater. ",(src/StackSymbols.ml[32,1611+2]..[35,1827+45]),None)
                ]
              core_type (src/StackSymbols.ml[36,1873+26]..[36,1873+54])
                Ptyp_arrow
                Nolabel
                core_type (src/StackSymbols.ml[36,1873+26]..[36,1873+42])
                  Ptyp_constr "Production.index" (src/StackSymbols.ml[36,1873+26]..[36,1873+42])
                  []
                core_type (src/StackSymbols.ml[36,1873+46]..[36,1873+54])
                  Ptyp_constr "property" (src/StackSymbols.ml[36,1873+46]..[36,1873+54])
                  []
              []
          signature_item (src/StackSymbols.ml[39,2007+2]..[39,2007+48])
            Psig_value
            value_description "production_height" (src/StackSymbols.ml[39,2007+6]..[39,2007+23]) (src/StackSymbols.ml[39,2007+2]..[39,2007+48])
              attribute "ocaml.doc"
                [
                  structure_item (src/StackSymbols.ml[38,1929+2]..[38,1929+77])
                    Pstr_eval
                    expression (src/StackSymbols.ml[38,1929+2]..[38,1929+77])
                      Pexp_constant PConst_string("[production_height prod] is [Array.length (production_symbols prod)]. ",(src/StackSymbols.ml[38,1929+2]..[38,1929+77]),None)
                ]
              core_type (src/StackSymbols.ml[39,2007+25]..[39,2007+48])
                Ptyp_arrow
                Nolabel
                core_type (src/StackSymbols.ml[39,2007+25]..[39,2007+41])
                  Ptyp_constr "Production.index" (src/StackSymbols.ml[39,2007+25]..[39,2007+41])
                  []
                core_type (src/StackSymbols.ml[39,2007+45]..[39,2007+48])
                  Ptyp_constr "int" (src/StackSymbols.ml[39,2007+45]..[39,2007+48])
                  []
              []
          signature_item (src/StackSymbols.ml[45,2301+2]..[45,2301+45])
            Psig_value
            value_description "goto_symbols" (src/StackSymbols.ml[45,2301+6]..[45,2301+18]) (src/StackSymbols.ml[45,2301+2]..[45,2301+45])
              attribute "ocaml.doc"
                [
                  structure_item (src/StackSymbols.ml[41,2057+2]..[44,2284+16])
                    Pstr_eval
                    expression (src/StackSymbols.ml[41,2057+2]..[44,2284+16])
                      Pexp_constant PConst_string("[goto_symbols nt] is the known suffix of the stack at a state where an\n     edge labeled [nt] has just been followed. In the short invariant, the\n     length of this suffix is [1]. In the long invariant, its length can be\n     greater. ",(src/StackSymbols.ml[41,2057+2]..[44,2284+16]),None)
                ]
              core_type (src/StackSymbols.ml[45,2301+20]..[45,2301+45])
                Ptyp_arrow
                Nolabel
                core_type (src/StackSymbols.ml[45,2301+20]..[45,2301+33])
                  Ptyp_constr "Nonterminal.t" (src/StackSymbols.ml[45,2301+20]..[45,2301+33])
                  []
                core_type (src/StackSymbols.ml[45,2301+37]..[45,2301+45])
                  Ptyp_constr "property" (src/StackSymbols.ml[45,2301+37]..[45,2301+45])
                  []
              []
          signature_item (src/StackSymbols.ml[48,2410+2]..[48,2410+39])
            Psig_value
            value_description "goto_height" (src/StackSymbols.ml[48,2410+6]..[48,2410+17]) (src/StackSymbols.ml[48,2410+2]..[48,2410+39])
              attribute "ocaml.doc"
                [
                  structure_item (src/StackSymbols.ml[47,2348+2]..[47,2348+61])
                    Pstr_eval
                    expression (src/StackSymbols.ml[47,2348+2]..[47,2348+61])
                      Pexp_constant PConst_string("[goto_height nt] is [Array.length (goto_symbols nt)]. ",(src/StackSymbols.ml[47,2348+2]..[47,2348+61]),None)
                ]
              core_type (src/StackSymbols.ml[48,2410+19]..[48,2410+39])
                Ptyp_arrow
                Nolabel
                core_type (src/StackSymbols.ml[48,2410+19]..[48,2410+32])
                  Ptyp_constr "Nonterminal.t" (src/StackSymbols.ml[48,2410+19]..[48,2410+32])
                  []
                core_type (src/StackSymbols.ml[48,2410+36]..[48,2410+39])
                  Ptyp_constr "int" (src/StackSymbols.ml[48,2410+36]..[48,2410+39])
                  []
              []
        ]
  structure_item (src/StackSymbols.ml[74,3597+0]..[117,4670+3])
    Pstr_module
    "Run" (src/StackSymbols.ml[74,3597+7]..[74,3597+10])
      module_expr (src/StackSymbols.ml[74,3597+11]..[117,4670+3])
        Pmod_functor ()
        module_expr (src/StackSymbols.ml[74,3597+16]..[117,4670+3])
          Pmod_structure
          [
            structure_item (src/StackSymbols.ml[76,3621+2]..[77,3639+18])
              Pstr_type Rec
              [
                type_declaration "property" (src/StackSymbols.ml[76,3621+7]..[76,3621+15]) (src/StackSymbols.ml[76,3621+2]..[77,3639+18])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (src/StackSymbols.ml[77,3639+4]..[77,3639+18])
                        Ptyp_constr "array" (src/StackSymbols.ml[77,3639+13]..[77,3639+18])
                        [
                          core_type (src/StackSymbols.ml[77,3639+4]..[77,3639+12])
                            Ptyp_constr "Symbol.t" (src/StackSymbols.ml[77,3639+4]..[77,3639+12])
                            []
                        ]
              ]
            structure_item (src/StackSymbols.ml[82,3748+2]..[91,4098+5])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/StackSymbols.ml[82,3748+6]..[82,3748+19])
                    Ppat_var "stack_symbols" (src/StackSymbols.ml[82,3748+6]..[82,3748+19])
                  core_type (src/StackSymbols.ml[82,3748+22]..[82,3748+42])
                    Ptyp_arrow
                    Nolabel
                    core_type (src/StackSymbols.ml[82,3748+22]..[82,3748+30])
                      Ptyp_constr "Lr0.node" (src/StackSymbols.ml[82,3748+22]..[82,3748+30])
                      []
                    core_type (src/StackSymbols.ml[82,3748+34]..[82,3748+42])
                      Ptyp_constr "property" (src/StackSymbols.ml[82,3748+34]..[82,3748+42])
                      []
                  expression (src/StackSymbols.ml[83,3793+4]..[91,4098+5])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/StackSymbols.ml[83,3793+8]..[83,3793+13])
                          Ppat_var "dummy" (src/StackSymbols.ml[83,3793+8]..[83,3793+13])
                        expression (src/StackSymbols.ml[84,3809+6]..[84,3809+44])
                          Pexp_apply
                          expression (src/StackSymbols.ml[84,3809+6]..[84,3809+16])
                            Pexp_ident "Array.make" (src/StackSymbols.ml[84,3809+6]..[84,3809+16])
                          [
                            <arg>
                            Nolabel
                              expression (src/StackSymbols.ml[84,3809+17]..[84,3809+18])
                                Pexp_constant PConst_int (0,None)
                            <arg>
                            Nolabel
                              expression (src/StackSymbols.ml[84,3809+19]..[84,3809+44])
                                Pexp_construct "Symbol.T" (src/StackSymbols.ml[84,3809+20]..[84,3809+28])
                                Some
                                  expression (src/StackSymbols.ml[84,3809+29]..[84,3809+43])
                                    Pexp_ident "Terminal.sharp" (src/StackSymbols.ml[84,3809+29]..[84,3809+43])
                          ]
                    ]
                    expression (src/StackSymbols.ml[86,3861+4]..[91,4098+5])
                      Pexp_apply
                      expression (src/StackSymbols.ml[86,3861+4]..[86,3861+17])
                        Pexp_ident "Misc.tabulate" (src/StackSymbols.ml[86,3861+4]..[86,3861+17])
                      [
                        <arg>
                        Nolabel
                          expression (src/StackSymbols.ml[86,3861+18]..[86,3861+23])
                            Pexp_ident "Lr0.n" (src/StackSymbols.ml[86,3861+18]..[86,3861+23])
                        <arg>
                        Nolabel
                          expression (src/StackSymbols.ml[86,3861+24]..[91,4098+5])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/StackSymbols.ml[86,3861+29]..[86,3861+33])
                              Ppat_var "node" (src/StackSymbols.ml[86,3861+29]..[86,3861+33])
                            expression (src/StackSymbols.ml[87,3898+6]..[90,4067+30])
                              Pexp_apply
                              expression (src/StackSymbols.ml[87,3898+6]..[87,3898+19])
                                Pexp_ident "Item.Set.fold" (src/StackSymbols.ml[87,3898+6]..[87,3898+19])
                              [
                                <arg>
                                Nolabel
                                  expression (src/StackSymbols.ml[87,3898+20]..[90,4067+7])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/StackSymbols.ml[87,3898+25]..[87,3898+29])
                                      Ppat_var "item" (src/StackSymbols.ml[87,3898+25]..[87,3898+29])
                                    expression (src/StackSymbols.ml[87,3898+30]..[89,3997+69]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (src/StackSymbols.ml[87,3898+30]..[87,3898+34])
                                        Ppat_var "accu" (src/StackSymbols.ml[87,3898+30]..[87,3898+34])
                                      expression (src/StackSymbols.ml[88,3936+8]..[89,3997+69])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/StackSymbols.ml[88,3936+12]..[88,3936+41])
                                              Ppat_tuple
                                              [
                                                pattern (src/StackSymbols.ml[88,3936+12]..[88,3936+17])
                                                  Ppat_var "_prod" (src/StackSymbols.ml[88,3936+12]..[88,3936+17])
                                                pattern (src/StackSymbols.ml[88,3936+19]..[88,3936+22])
                                                  Ppat_var "_nt" (src/StackSymbols.ml[88,3936+19]..[88,3936+22])
                                                pattern (src/StackSymbols.ml[88,3936+24]..[88,3936+27])
                                                  Ppat_var "rhs" (src/StackSymbols.ml[88,3936+24]..[88,3936+27])
                                                pattern (src/StackSymbols.ml[88,3936+29]..[88,3936+32])
                                                  Ppat_var "pos" (src/StackSymbols.ml[88,3936+29]..[88,3936+32])
                                                pattern (src/StackSymbols.ml[88,3936+34]..[88,3936+41])
                                                  Ppat_var "_length" (src/StackSymbols.ml[88,3936+34]..[88,3936+41])
                                              ]
                                            expression (src/StackSymbols.ml[88,3936+44]..[88,3936+57])
                                              Pexp_apply
                                              expression (src/StackSymbols.ml[88,3936+44]..[88,3936+52])
                                                Pexp_ident "Item.def" (src/StackSymbols.ml[88,3936+44]..[88,3936+52])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/StackSymbols.ml[88,3936+53]..[88,3936+57])
                                                    Pexp_ident "item" (src/StackSymbols.ml[88,3936+53]..[88,3936+57])
                                              ]
                                        ]
                                        expression (src/StackSymbols.ml[89,3997+8]..[89,3997+69])
                                          Pexp_ifthenelse
                                          expression (src/StackSymbols.ml[89,3997+11]..[89,3997+34])
                                            Pexp_apply
                                            expression (src/StackSymbols.ml[89,3997+15]..[89,3997+16])
                                              Pexp_ident ">" (src/StackSymbols.ml[89,3997+15]..[89,3997+16])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/StackSymbols.ml[89,3997+11]..[89,3997+14])
                                                  Pexp_ident "pos" (src/StackSymbols.ml[89,3997+11]..[89,3997+14])
                                              <arg>
                                              Nolabel
                                                expression (src/StackSymbols.ml[89,3997+17]..[89,3997+34])
                                                  Pexp_apply
                                                  expression (src/StackSymbols.ml[89,3997+17]..[89,3997+29])
                                                    Pexp_ident "Array.length" (src/StackSymbols.ml[89,3997+17]..[89,3997+29])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/StackSymbols.ml[89,3997+30]..[89,3997+34])
                                                        Pexp_ident "accu" (src/StackSymbols.ml[89,3997+30]..[89,3997+34])
                                                  ]
                                            ]
                                          expression (src/StackSymbols.ml[89,3997+40]..[89,3997+59])
                                            Pexp_apply
                                            expression (src/StackSymbols.ml[89,3997+40]..[89,3997+49])
                                              Pexp_ident "Array.sub" (src/StackSymbols.ml[89,3997+40]..[89,3997+49])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/StackSymbols.ml[89,3997+50]..[89,3997+53])
                                                  Pexp_ident "rhs" (src/StackSymbols.ml[89,3997+50]..[89,3997+53])
                                              <arg>
                                              Nolabel
                                                expression (src/StackSymbols.ml[89,3997+54]..[89,3997+55])
                                                  Pexp_constant PConst_int (0,None)
                                              <arg>
                                              Nolabel
                                                expression (src/StackSymbols.ml[89,3997+56]..[89,3997+59])
                                                  Pexp_ident "pos" (src/StackSymbols.ml[89,3997+56]..[89,3997+59])
                                            ]
                                          Some
                                            expression (src/StackSymbols.ml[89,3997+65]..[89,3997+69])
                                              Pexp_ident "accu" (src/StackSymbols.ml[89,3997+65]..[89,3997+69])
                                <arg>
                                Nolabel
                                  expression (src/StackSymbols.ml[90,4067+8]..[90,4067+24])
                                    Pexp_apply
                                    expression (src/StackSymbols.ml[90,4067+9]..[90,4067+18])
                                      Pexp_ident "Lr0.items" (src/StackSymbols.ml[90,4067+9]..[90,4067+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/StackSymbols.ml[90,4067+19]..[90,4067+23])
                                          Pexp_ident "node" (src/StackSymbols.ml[90,4067+19]..[90,4067+23])
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/StackSymbols.ml[90,4067+25]..[90,4067+30])
                                    Pexp_ident "dummy" (src/StackSymbols.ml[90,4067+25]..[90,4067+30])
                              ]
                      ]
              ]
            structure_item (src/StackSymbols.ml[95,4148+2]..[96,4199+45])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/StackSymbols.ml[95,4148+6]..[95,4148+19])
                    Ppat_var "stack_symbols" (src/StackSymbols.ml[95,4148+6]..[95,4148+19])
                  expression (src/StackSymbols.ml[95,4148+20]..[96,4199+45]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/StackSymbols.ml[95,4148+20]..[95,4148+37])
                      Ppat_constraint
                      pattern (src/StackSymbols.ml[95,4148+21]..[95,4148+25])
                        Ppat_var "node" (src/StackSymbols.ml[95,4148+21]..[95,4148+25])
                      core_type (src/StackSymbols.ml[95,4148+28]..[95,4148+36])
                        Ptyp_constr "Lr1.node" (src/StackSymbols.ml[95,4148+28]..[95,4148+36])
                        []
                    expression (src/StackSymbols.ml[95,4148+38]..[96,4199+45])
                      Pexp_constraint
                      expression (src/StackSymbols.ml[96,4199+4]..[96,4199+45])
                        Pexp_apply
                        expression (src/StackSymbols.ml[96,4199+4]..[96,4199+17])
                          Pexp_ident "stack_symbols" (src/StackSymbols.ml[96,4199+4]..[96,4199+17])
                        [
                          <arg>
                          Nolabel
                            expression (src/StackSymbols.ml[96,4199+18]..[96,4199+45])
                              Pexp_apply
                              expression (src/StackSymbols.ml[96,4199+19]..[96,4199+27])
                                Pexp_ident "Lr0.core" (src/StackSymbols.ml[96,4199+19]..[96,4199+27])
                              [
                                <arg>
                                Nolabel
                                  expression (src/StackSymbols.ml[96,4199+28]..[96,4199+44])
                                    Pexp_apply
                                    expression (src/StackSymbols.ml[96,4199+29]..[96,4199+38])
                                      Pexp_ident "Lr1.state" (src/StackSymbols.ml[96,4199+29]..[96,4199+38])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/StackSymbols.ml[96,4199+39]..[96,4199+43])
                                          Pexp_ident "node" (src/StackSymbols.ml[96,4199+39]..[96,4199+43])
                                    ]
                              ]
                        ]
                      core_type (src/StackSymbols.ml[95,4148+40]..[95,4148+48])
                        Ptyp_constr "property" (src/StackSymbols.ml[95,4148+40]..[95,4148+48])
                        []
              ]
            structure_item (src/StackSymbols.ml[98,4246+2]..[99,4291+37])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/StackSymbols.ml[98,4246+6]..[98,4246+18])
                    Ppat_var "stack_height" (src/StackSymbols.ml[98,4246+6]..[98,4246+18])
                  expression (src/StackSymbols.ml[98,4246+19]..[99,4291+37]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/StackSymbols.ml[98,4246+19]..[98,4246+36])
                      Ppat_constraint
                      pattern (src/StackSymbols.ml[98,4246+20]..[98,4246+24])
                        Ppat_var "node" (src/StackSymbols.ml[98,4246+20]..[98,4246+24])
                      core_type (src/StackSymbols.ml[98,4246+27]..[98,4246+35])
                        Ptyp_constr "Lr1.node" (src/StackSymbols.ml[98,4246+27]..[98,4246+35])
                        []
                    expression (src/StackSymbols.ml[98,4246+37]..[99,4291+37])
                      Pexp_constraint
                      expression (src/StackSymbols.ml[99,4291+4]..[99,4291+37])
                        Pexp_apply
                        expression (src/StackSymbols.ml[99,4291+4]..[99,4291+16])
                          Pexp_ident "Array.length" (src/StackSymbols.ml[99,4291+4]..[99,4291+16])
                        [
                          <arg>
                          Nolabel
                            expression (src/StackSymbols.ml[99,4291+17]..[99,4291+37])
                              Pexp_apply
                              expression (src/StackSymbols.ml[99,4291+18]..[99,4291+31])
                                Pexp_ident "stack_symbols" (src/StackSymbols.ml[99,4291+18]..[99,4291+31])
                              [
                                <arg>
                                Nolabel
                                  expression (src/StackSymbols.ml[99,4291+32]..[99,4291+36])
                                    Pexp_ident "node" (src/StackSymbols.ml[99,4291+32]..[99,4291+36])
                              ]
                        ]
                      core_type (src/StackSymbols.ml[98,4246+39]..[98,4246+42])
                        Ptyp_constr "int" (src/StackSymbols.ml[98,4246+39]..[98,4246+42])
                        []
              ]
            structure_item (src/StackSymbols.ml[103,4389+2]..[104,4416+18])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/StackSymbols.ml[103,4389+6]..[103,4389+24])
                    Ppat_var "production_symbols" (src/StackSymbols.ml[103,4389+6]..[103,4389+24])
                  expression (src/StackSymbols.ml[104,4416+4]..[104,4416+18])
                    Pexp_ident "Production.rhs" (src/StackSymbols.ml[104,4416+4]..[104,4416+18])
              ]
            structure_item (src/StackSymbols.ml[106,4436+2]..[107,4467+42])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/StackSymbols.ml[106,4436+6]..[106,4436+23])
                    Ppat_var "production_height" (src/StackSymbols.ml[106,4436+6]..[106,4436+23])
                  expression (src/StackSymbols.ml[106,4436+24]..[107,4467+42]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/StackSymbols.ml[106,4436+24]..[106,4436+28])
                      Ppat_var "prod" (src/StackSymbols.ml[106,4436+24]..[106,4436+28])
                    expression (src/StackSymbols.ml[107,4467+4]..[107,4467+42])
                      Pexp_apply
                      expression (src/StackSymbols.ml[107,4467+4]..[107,4467+16])
                        Pexp_ident "Array.length" (src/StackSymbols.ml[107,4467+4]..[107,4467+16])
                      [
                        <arg>
                        Nolabel
                          expression (src/StackSymbols.ml[107,4467+17]..[107,4467+42])
                            Pexp_apply
                            expression (src/StackSymbols.ml[107,4467+18]..[107,4467+36])
                              Pexp_ident "production_symbols" (src/StackSymbols.ml[107,4467+18]..[107,4467+36])
                            [
                              <arg>
                              Nolabel
                                expression (src/StackSymbols.ml[107,4467+37]..[107,4467+41])
                                  Pexp_ident "prod" (src/StackSymbols.ml[107,4467+37]..[107,4467+41])
                            ]
                      ]
              ]
            structure_item (src/StackSymbols.ml[111,4564+2]..[112,4588+21])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/StackSymbols.ml[111,4564+6]..[111,4564+18])
                    Ppat_var "goto_symbols" (src/StackSymbols.ml[111,4564+6]..[111,4564+18])
                  expression (src/StackSymbols.ml[111,4564+19]..[112,4588+21]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/StackSymbols.ml[111,4564+19]..[111,4564+21])
                      Ppat_var "nt" (src/StackSymbols.ml[111,4564+19]..[111,4564+21])
                    expression (src/StackSymbols.ml[112,4588+4]..[112,4588+21])
                      Pexp_array
                      [
                        expression (src/StackSymbols.ml[112,4588+7]..[112,4588+18])
                          Pexp_construct "Symbol.N" (src/StackSymbols.ml[112,4588+7]..[112,4588+15])
                          Some
                            expression (src/StackSymbols.ml[112,4588+16]..[112,4588+18])
                              Pexp_ident "nt" (src/StackSymbols.ml[112,4588+16]..[112,4588+18])
                      ]
              ]
            structure_item (src/StackSymbols.ml[114,4611+2]..[115,4634+34])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/StackSymbols.ml[114,4611+6]..[114,4611+17])
                    Ppat_var "goto_height" (src/StackSymbols.ml[114,4611+6]..[114,4611+17])
                  expression (src/StackSymbols.ml[114,4611+18]..[115,4634+34]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/StackSymbols.ml[114,4611+18]..[114,4611+20])
                      Ppat_var "nt" (src/StackSymbols.ml[114,4611+18]..[114,4611+20])
                    expression (src/StackSymbols.ml[115,4634+4]..[115,4634+34])
                      Pexp_apply
                      expression (src/StackSymbols.ml[115,4634+4]..[115,4634+16])
                        Pexp_ident "Array.length" (src/StackSymbols.ml[115,4634+4]..[115,4634+16])
                      [
                        <arg>
                        Nolabel
                          expression (src/StackSymbols.ml[115,4634+17]..[115,4634+34])
                            Pexp_apply
                            expression (src/StackSymbols.ml[115,4634+18]..[115,4634+30])
                              Pexp_ident "goto_symbols" (src/StackSymbols.ml[115,4634+18]..[115,4634+30])
                            [
                              <arg>
                              Nolabel
                                expression (src/StackSymbols.ml[115,4634+31]..[115,4634+33])
                                  Pexp_ident "nt" (src/StackSymbols.ml[115,4634+31]..[115,4634+33])
                            ]
                      ]
              ]
          ]
  structure_item (src/StackSymbols.ml[126,5054+0]..[267,9374+3])
    Pstr_module
    "Long" (src/StackSymbols.ml[126,5054+7]..[126,5054+11])
      module_expr (src/StackSymbols.ml[126,5054+12]..[267,9374+3])
        Pmod_functor ()
        module_expr (src/StackSymbols.ml[126,5054+17]..[267,9374+3])
          Pmod_structure
          [
            structure_item (src/StackSymbols.ml[130,5108+2]..[156,5851+5])
              Pstr_module
              "SymbolVector" (src/StackSymbols.ml[130,5108+9]..[130,5108+21])
                module_expr (src/StackSymbols.ml[130,5108+24]..[156,5851+5])
                  Pmod_structure
                  [
                    structure_item (src/StackSymbols.ml[132,5140+4]..[133,5160+20])
                      Pstr_type Rec
                      [
                        type_declaration "property" (src/StackSymbols.ml[132,5140+9]..[132,5140+17]) (src/StackSymbols.ml[132,5140+4]..[133,5160+20])
                          ptype_params =
                            []
                          ptype_cstrs =
                            []
                          ptype_kind =
                            Ptype_abstract
                          ptype_private = Public
                          ptype_manifest =
                            Some
                              core_type (src/StackSymbols.ml[133,5160+6]..[133,5160+20])
                                Ptyp_constr "array" (src/StackSymbols.ml[133,5160+15]..[133,5160+20])
                                [
                                  core_type (src/StackSymbols.ml[133,5160+6]..[133,5160+14])
                                    Ptyp_constr "Symbol.t" (src/StackSymbols.ml[133,5160+6]..[133,5160+14])
                                    []
                                ]
                      ]
                    structure_item (src/StackSymbols.ml[135,5182+4]..[136,5204+26])
                      Pstr_value Nonrec
                      [
                        <def>
                          pattern (src/StackSymbols.ml[135,5182+8]..[135,5182+19])
                            Ppat_tuple
                            [
                              pattern (src/StackSymbols.ml[135,5182+8]..[135,5182+13])
                                Ppat_var "empty" (src/StackSymbols.ml[135,5182+8]..[135,5182+13])
                              pattern (src/StackSymbols.ml[135,5182+15]..[135,5182+19])
                                Ppat_var "push" (src/StackSymbols.ml[135,5182+15]..[135,5182+19])
                            ]
                          expression (src/StackSymbols.ml[136,5204+6]..[136,5204+26])
                            Pexp_open Fresh
                            module_expr (src/StackSymbols.ml[136,5204+6]..[136,5204+12])
                              Pmod_ident "MArray" (src/StackSymbols.ml[136,5204+6]..[136,5204+12])
                            expression (src/StackSymbols.ml[136,5204+14]..[136,5204+25])
                              Pexp_tuple
                              [
                                expression (src/StackSymbols.ml[136,5204+14]..[136,5204+19])
                                  Pexp_ident "empty" (src/StackSymbols.ml[136,5204+14]..[136,5204+19])
                                expression (src/StackSymbols.ml[136,5204+21]..[136,5204+25])
                                  Pexp_ident "push" (src/StackSymbols.ml[136,5204+21]..[136,5204+25])
                              ]
                      ]
                    structure_item (src/StackSymbols.ml[142,5447+4]..[145,5573+36])
                      Pstr_value Rec
                      [
                        <def>
                          pattern (src/StackSymbols.ml[142,5447+12]..[142,5447+15])
                            Ppat_var "lcs" (src/StackSymbols.ml[142,5447+12]..[142,5447+15])
                          expression (src/StackSymbols.ml[142,5447+16]..[145,5573+36]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/StackSymbols.ml[142,5447+16]..[142,5447+18])
                              Ppat_var "v1" (src/StackSymbols.ml[142,5447+16]..[142,5447+18])
                            expression (src/StackSymbols.ml[142,5447+19]..[145,5573+36]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/StackSymbols.ml[142,5447+19]..[142,5447+21])
                                Ppat_var "v2" (src/StackSymbols.ml[142,5447+19]..[142,5447+21])
                              expression (src/StackSymbols.ml[142,5447+22]..[145,5573+36]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/StackSymbols.ml[142,5447+22]..[142,5447+24])
                                  Ppat_var "n1" (src/StackSymbols.ml[142,5447+22]..[142,5447+24])
                                expression (src/StackSymbols.ml[142,5447+25]..[145,5573+36]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/StackSymbols.ml[142,5447+25]..[142,5447+27])
                                    Ppat_var "n2" (src/StackSymbols.ml[142,5447+25]..[142,5447+27])
                                  expression (src/StackSymbols.ml[142,5447+28]..[145,5573+36]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/StackSymbols.ml[142,5447+28]..[142,5447+29])
                                      Ppat_var "n" (src/StackSymbols.ml[142,5447+28]..[142,5447+29])
                                    expression (src/StackSymbols.ml[142,5447+30]..[145,5573+36]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (src/StackSymbols.ml[142,5447+30]..[142,5447+31])
                                        Ppat_var "k" (src/StackSymbols.ml[142,5447+30]..[142,5447+31])
                                      expression (src/StackSymbols.ml[144,5513+6]..[145,5573+36])
                                        Pexp_ifthenelse
                                        expression (src/StackSymbols.ml[144,5513+9]..[144,5513+52])
                                          Pexp_apply
                                          expression (src/StackSymbols.ml[144,5513+15]..[144,5513+17])
                                            Pexp_ident "||" (src/StackSymbols.ml[144,5513+15]..[144,5513+17])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/StackSymbols.ml[144,5513+9]..[144,5513+14])
                                                Pexp_apply
                                                expression (src/StackSymbols.ml[144,5513+11]..[144,5513+12])
                                                  Pexp_ident "=" (src/StackSymbols.ml[144,5513+11]..[144,5513+12])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/StackSymbols.ml[144,5513+9]..[144,5513+10])
                                                      Pexp_ident "k" (src/StackSymbols.ml[144,5513+9]..[144,5513+10])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/StackSymbols.ml[144,5513+13]..[144,5513+14])
                                                      Pexp_ident "n" (src/StackSymbols.ml[144,5513+13]..[144,5513+14])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (src/StackSymbols.ml[144,5513+18]..[144,5513+52])
                                                Pexp_apply
                                                expression (src/StackSymbols.ml[144,5513+34]..[144,5513+36])
                                                  Pexp_ident "<>" (src/StackSymbols.ml[144,5513+34]..[144,5513+36])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/StackSymbols.ml[144,5513+18]..[144,5513+33])
                                                      Pexp_apply
                                                      expression (src/StackSymbols.ml[144,5513+18]..[144,5513+33]) ghost
                                                        Pexp_ident "Array.get" (src/StackSymbols.ml[144,5513+18]..[144,5513+33]) ghost
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/StackSymbols.ml[144,5513+18]..[144,5513+20])
                                                            Pexp_ident "v1" (src/StackSymbols.ml[144,5513+18]..[144,5513+20])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/StackSymbols.ml[144,5513+22]..[144,5513+32])
                                                            Pexp_apply
                                                            expression (src/StackSymbols.ml[144,5513+29]..[144,5513+30])
                                                              Pexp_ident "-" (src/StackSymbols.ml[144,5513+29]..[144,5513+30])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/StackSymbols.ml[144,5513+22]..[144,5513+28])
                                                                  Pexp_apply
                                                                  expression (src/StackSymbols.ml[144,5513+25]..[144,5513+26])
                                                                    Pexp_ident "-" (src/StackSymbols.ml[144,5513+25]..[144,5513+26])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/StackSymbols.ml[144,5513+22]..[144,5513+24])
Pexp_ident "n1" (src/StackSymbols.ml[144,5513+22]..[144,5513+24])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/StackSymbols.ml[144,5513+27]..[144,5513+28])
Pexp_constant PConst_int (1,None)
                                                                  ]
                                                              <arg>
                                                              Nolabel
                                                                expression (src/StackSymbols.ml[144,5513+31]..[144,5513+32])
                                                                  Pexp_ident "k" (src/StackSymbols.ml[144,5513+31]..[144,5513+32])
                                                            ]
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (src/StackSymbols.ml[144,5513+37]..[144,5513+52])
                                                      Pexp_apply
                                                      expression (src/StackSymbols.ml[144,5513+37]..[144,5513+52]) ghost
                                                        Pexp_ident "Array.get" (src/StackSymbols.ml[144,5513+37]..[144,5513+52]) ghost
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/StackSymbols.ml[144,5513+37]..[144,5513+39])
                                                            Pexp_ident "v2" (src/StackSymbols.ml[144,5513+37]..[144,5513+39])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/StackSymbols.ml[144,5513+41]..[144,5513+51])
                                                            Pexp_apply
                                                            expression (src/StackSymbols.ml[144,5513+48]..[144,5513+49])
                                                              Pexp_ident "-" (src/StackSymbols.ml[144,5513+48]..[144,5513+49])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/StackSymbols.ml[144,5513+41]..[144,5513+47])
                                                                  Pexp_apply
                                                                  expression (src/StackSymbols.ml[144,5513+44]..[144,5513+45])
                                                                    Pexp_ident "-" (src/StackSymbols.ml[144,5513+44]..[144,5513+45])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/StackSymbols.ml[144,5513+41]..[144,5513+43])
Pexp_ident "n2" (src/StackSymbols.ml[144,5513+41]..[144,5513+43])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/StackSymbols.ml[144,5513+46]..[144,5513+47])
Pexp_constant PConst_int (1,None)
                                                                  ]
                                                              <arg>
                                                              Nolabel
                                                                expression (src/StackSymbols.ml[144,5513+50]..[144,5513+51])
                                                                  Pexp_ident "k" (src/StackSymbols.ml[144,5513+50]..[144,5513+51])
                                                            ]
                                                      ]
                                                ]
                                          ]
                                        expression (src/StackSymbols.ml[144,5513+58]..[144,5513+59])
                                          Pexp_ident "k" (src/StackSymbols.ml[144,5513+58]..[144,5513+59])
                                        Some
                                          expression (src/StackSymbols.ml[145,5573+11]..[145,5573+36])
                                            Pexp_apply
                                            expression (src/StackSymbols.ml[145,5573+11]..[145,5573+14])
                                              Pexp_ident "lcs" (src/StackSymbols.ml[145,5573+11]..[145,5573+14])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/StackSymbols.ml[145,5573+15]..[145,5573+17])
                                                  Pexp_ident "v1" (src/StackSymbols.ml[145,5573+15]..[145,5573+17])
                                              <arg>
                                              Nolabel
                                                expression (src/StackSymbols.ml[145,5573+18]..[145,5573+20])
                                                  Pexp_ident "v2" (src/StackSymbols.ml[145,5573+18]..[145,5573+20])
                                              <arg>
                                              Nolabel
                                                expression (src/StackSymbols.ml[145,5573+21]..[145,5573+23])
                                                  Pexp_ident "n1" (src/StackSymbols.ml[145,5573+21]..[145,5573+23])
                                              <arg>
                                              Nolabel
                                                expression (src/StackSymbols.ml[145,5573+24]..[145,5573+26])
                                                  Pexp_ident "n2" (src/StackSymbols.ml[145,5573+24]..[145,5573+26])
                                              <arg>
                                              Nolabel
                                                expression (src/StackSymbols.ml[145,5573+27]..[145,5573+28])
                                                  Pexp_ident "n" (src/StackSymbols.ml[145,5573+27]..[145,5573+28])
                                              <arg>
                                              Nolabel
                                                expression (src/StackSymbols.ml[145,5573+29]..[145,5573+36])
                                                  Pexp_apply
                                                  expression (src/StackSymbols.ml[145,5573+32]..[145,5573+33])
                                                    Pexp_ident "+" (src/StackSymbols.ml[145,5573+32]..[145,5573+33])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/StackSymbols.ml[145,5573+30]..[145,5573+31])
                                                        Pexp_ident "k" (src/StackSymbols.ml[145,5573+30]..[145,5573+31])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/StackSymbols.ml[145,5573+34]..[145,5573+35])
                                                        Pexp_constant PConst_int (1,None)
                                                  ]
                                            ]
                      ]
                    structure_item (src/StackSymbols.ml[147,5611+4]..[154,5818+31])
                      Pstr_value Nonrec
                      [
                        <def>
                          pattern (src/StackSymbols.ml[147,5611+8]..[147,5611+16])
                            Ppat_var "leq_join" (src/StackSymbols.ml[147,5611+8]..[147,5611+16])
                          expression (src/StackSymbols.ml[147,5611+17]..[154,5818+31]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/StackSymbols.ml[147,5611+17]..[147,5611+19])
                              Ppat_var "v1" (src/StackSymbols.ml[147,5611+17]..[147,5611+19])
                            expression (src/StackSymbols.ml[147,5611+20]..[154,5818+31]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/StackSymbols.ml[147,5611+20]..[147,5611+22])
                                Ppat_var "v2" (src/StackSymbols.ml[147,5611+20]..[147,5611+22])
                              expression (src/StackSymbols.ml[148,5636+6]..[154,5818+31])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/StackSymbols.ml[148,5636+10]..[148,5636+12])
                                      Ppat_var "n1" (src/StackSymbols.ml[148,5636+10]..[148,5636+12])
                                    expression (src/StackSymbols.ml[148,5636+15]..[148,5636+30])
                                      Pexp_apply
                                      expression (src/StackSymbols.ml[148,5636+15]..[148,5636+27])
                                        Pexp_ident "Array.length" (src/StackSymbols.ml[148,5636+15]..[148,5636+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/StackSymbols.ml[148,5636+28]..[148,5636+30])
                                            Pexp_ident "v1" (src/StackSymbols.ml[148,5636+28]..[148,5636+30])
                                      ]
                                  <def>
                                    pattern (src/StackSymbols.ml[149,5667+10]..[149,5667+12])
                                      Ppat_var "n2" (src/StackSymbols.ml[149,5667+10]..[149,5667+12])
                                    expression (src/StackSymbols.ml[149,5667+15]..[149,5667+30])
                                      Pexp_apply
                                      expression (src/StackSymbols.ml[149,5667+15]..[149,5667+27])
                                        Pexp_ident "Array.length" (src/StackSymbols.ml[149,5667+15]..[149,5667+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/StackSymbols.ml[149,5667+28]..[149,5667+30])
                                            Pexp_ident "v2" (src/StackSymbols.ml[149,5667+28]..[149,5667+30])
                                      ]
                                ]
                                expression (src/StackSymbols.ml[150,5701+6]..[154,5818+31])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/StackSymbols.ml[150,5701+10]..[150,5701+11])
                                        Ppat_var "n" (src/StackSymbols.ml[150,5701+10]..[150,5701+11])
                                      expression (src/StackSymbols.ml[150,5701+14]..[150,5701+23])
                                        Pexp_apply
                                        expression (src/StackSymbols.ml[150,5701+14]..[150,5701+17])
                                          Pexp_ident "min" (src/StackSymbols.ml[150,5701+14]..[150,5701+17])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/StackSymbols.ml[150,5701+18]..[150,5701+20])
                                              Pexp_ident "n1" (src/StackSymbols.ml[150,5701+18]..[150,5701+20])
                                          <arg>
                                          Nolabel
                                            expression (src/StackSymbols.ml[150,5701+21]..[150,5701+23])
                                              Pexp_ident "n2" (src/StackSymbols.ml[150,5701+21]..[150,5701+23])
                                        ]
                                  ]
                                  expression (src/StackSymbols.ml[151,5728+6]..[154,5818+31])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/StackSymbols.ml[151,5728+10]..[151,5728+11])
                                          Ppat_var "k" (src/StackSymbols.ml[151,5728+10]..[151,5728+11])
                                        expression (src/StackSymbols.ml[151,5728+14]..[151,5728+33])
                                          Pexp_apply
                                          expression (src/StackSymbols.ml[151,5728+14]..[151,5728+17])
                                            Pexp_ident "lcs" (src/StackSymbols.ml[151,5728+14]..[151,5728+17])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/StackSymbols.ml[151,5728+18]..[151,5728+20])
                                                Pexp_ident "v1" (src/StackSymbols.ml[151,5728+18]..[151,5728+20])
                                            <arg>
                                            Nolabel
                                              expression (src/StackSymbols.ml[151,5728+21]..[151,5728+23])
                                                Pexp_ident "v2" (src/StackSymbols.ml[151,5728+21]..[151,5728+23])
                                            <arg>
                                            Nolabel
                                              expression (src/StackSymbols.ml[151,5728+24]..[151,5728+26])
                                                Pexp_ident "n1" (src/StackSymbols.ml[151,5728+24]..[151,5728+26])
                                            <arg>
                                            Nolabel
                                              expression (src/StackSymbols.ml[151,5728+27]..[151,5728+29])
                                                Pexp_ident "n2" (src/StackSymbols.ml[151,5728+27]..[151,5728+29])
                                            <arg>
                                            Nolabel
                                              expression (src/StackSymbols.ml[151,5728+30]..[151,5728+31])
                                                Pexp_ident "n" (src/StackSymbols.ml[151,5728+30]..[151,5728+31])
                                            <arg>
                                            Nolabel
                                              expression (src/StackSymbols.ml[151,5728+32]..[151,5728+33])
                                                Pexp_constant PConst_int (0,None)
                                          ]
                                    ]
                                    expression (src/StackSymbols.ml[152,5765+6]..[154,5818+31])
                                      Pexp_ifthenelse
                                      expression (src/StackSymbols.ml[152,5765+9]..[152,5765+15])
                                        Pexp_apply
                                        expression (src/StackSymbols.ml[152,5765+11]..[152,5765+12])
                                          Pexp_ident "=" (src/StackSymbols.ml[152,5765+11]..[152,5765+12])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/StackSymbols.ml[152,5765+9]..[152,5765+10])
                                              Pexp_ident "k" (src/StackSymbols.ml[152,5765+9]..[152,5765+10])
                                          <arg>
                                          Nolabel
                                            expression (src/StackSymbols.ml[152,5765+13]..[152,5765+15])
                                              Pexp_ident "n2" (src/StackSymbols.ml[152,5765+13]..[152,5765+15])
                                        ]
                                      expression (src/StackSymbols.ml[152,5765+21]..[152,5765+23])
                                        Pexp_ident "v2" (src/StackSymbols.ml[152,5765+21]..[152,5765+23])
                                      Some
                                        expression (src/StackSymbols.ml[153,5789+11]..[154,5818+31])
                                          Pexp_ifthenelse
                                          expression (src/StackSymbols.ml[153,5789+14]..[153,5789+20])
                                            Pexp_apply
                                            expression (src/StackSymbols.ml[153,5789+16]..[153,5789+17])
                                              Pexp_ident "=" (src/StackSymbols.ml[153,5789+16]..[153,5789+17])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/StackSymbols.ml[153,5789+14]..[153,5789+15])
                                                  Pexp_ident "k" (src/StackSymbols.ml[153,5789+14]..[153,5789+15])
                                              <arg>
                                              Nolabel
                                                expression (src/StackSymbols.ml[153,5789+18]..[153,5789+20])
                                                  Pexp_ident "n1" (src/StackSymbols.ml[153,5789+18]..[153,5789+20])
                                            ]
                                          expression (src/StackSymbols.ml[153,5789+26]..[153,5789+28])
                                            Pexp_ident "v1" (src/StackSymbols.ml[153,5789+26]..[153,5789+28])
                                          Some
                                            expression (src/StackSymbols.ml[154,5818+11]..[154,5818+31])
                                              Pexp_apply
                                              expression (src/StackSymbols.ml[154,5818+11]..[154,5818+26])
                                                Pexp_ident "MArray.truncate" (src/StackSymbols.ml[154,5818+11]..[154,5818+26])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/StackSymbols.ml[154,5818+27]..[154,5818+28])
                                                    Pexp_ident "k" (src/StackSymbols.ml[154,5818+27]..[154,5818+28])
                                                <arg>
                                                Nolabel
                                                  expression (src/StackSymbols.ml[154,5818+29]..[154,5818+31])
                                                    Pexp_ident "v1" (src/StackSymbols.ml[154,5818+29]..[154,5818+31])
                                              ]
                      ]
                  ]
            structure_item (src/StackSymbols.ml[158,5858+2]..[158,5858+22])
              Pstr_include              module_expr (src/StackSymbols.ml[158,5858+10]..[158,5858+22])
                Pmod_ident "SymbolVector" (src/StackSymbols.ml[158,5858+10]..[158,5858+22])
            structure_item (src/StackSymbols.ml[164,5999+2]..[186,6712+5])
              Pstr_module
              "G" (src/StackSymbols.ml[164,5999+9]..[164,5999+10])
                module_expr (src/StackSymbols.ml[164,5999+13]..[186,6712+5])
                  Pmod_structure
                  [
                    structure_item (src/StackSymbols.ml[166,6020+4]..[166,6020+28])
                      Pstr_type Rec
                      [
                        type_declaration "variable" (src/StackSymbols.ml[166,6020+9]..[166,6020+17]) (src/StackSymbols.ml[166,6020+4]..[166,6020+28])
                          ptype_params =
                            []
                          ptype_cstrs =
                            []
                          ptype_kind =
                            Ptype_abstract
                          ptype_private = Public
                          ptype_manifest =
                            Some
                              core_type (src/StackSymbols.ml[166,6020+20]..[166,6020+28])
                                Ptyp_constr "Lr0.node" (src/StackSymbols.ml[166,6020+20]..[166,6020+28])
                                []
                      ]
                    structure_item (src/StackSymbols.ml[168,6050+4]..[168,6050+41])
                      Pstr_type Rec
                      [
                        type_declaration "property" (src/StackSymbols.ml[168,6050+9]..[168,6050+17]) (src/StackSymbols.ml[168,6050+4]..[168,6050+41])
                          ptype_params =
                            []
                          ptype_cstrs =
                            []
                          ptype_kind =
                            Ptype_abstract
                          ptype_private = Public
                          ptype_manifest =
                            Some
                              core_type (src/StackSymbols.ml[168,6050+20]..[168,6050+41])
                                Ptyp_constr "SymbolVector.property" (src/StackSymbols.ml[168,6050+20]..[168,6050+41])
                                []
                      ]
                    structure_item (src/StackSymbols.ml[172,6162+4]..[175,6283+7])
                      Pstr_value Nonrec
                      [
                        <def>
                          pattern (src/StackSymbols.ml[172,6162+8]..[172,6162+20])
                            Ppat_var "foreach_root" (src/StackSymbols.ml[172,6162+8]..[172,6162+20])
                          expression (src/StackSymbols.ml[172,6162+21]..[175,6283+7]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/StackSymbols.ml[172,6162+21]..[172,6162+31])
                              Ppat_var "contribute" (src/StackSymbols.ml[172,6162+21]..[172,6162+31])
                            expression (src/StackSymbols.ml[173,6196+6]..[175,6283+7])
                              Pexp_apply
                              expression (src/StackSymbols.ml[173,6196+16]..[173,6196+18])
                                Pexp_ident "|>" (src/StackSymbols.ml[173,6196+16]..[173,6196+18])
                              [
                                <arg>
                                Nolabel
                                  expression (src/StackSymbols.ml[173,6196+6]..[173,6196+15])
                                    Pexp_ident "Lr0.entry" (src/StackSymbols.ml[173,6196+6]..[173,6196+15])
                                <arg>
                                Nolabel
                                  expression (src/StackSymbols.ml[173,6196+19]..[175,6283+7])
                                    Pexp_apply
                                    expression (src/StackSymbols.ml[173,6196+19]..[173,6196+37])
                                      Pexp_ident "ProductionMap.iter" (src/StackSymbols.ml[173,6196+19]..[173,6196+37])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/StackSymbols.ml[173,6196+38]..[175,6283+7])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (src/StackSymbols.ml[173,6196+43]..[173,6196+48])
                                            Ppat_var "_prod" (src/StackSymbols.ml[173,6196+43]..[173,6196+48])
                                          expression (src/StackSymbols.ml[173,6196+49]..[174,6253+29]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (src/StackSymbols.ml[173,6196+49]..[173,6196+53])
                                              Ppat_var "root" (src/StackSymbols.ml[173,6196+49]..[173,6196+53])
                                            expression (src/StackSymbols.ml[174,6253+8]..[174,6253+29])
                                              Pexp_apply
                                              expression (src/StackSymbols.ml[174,6253+8]..[174,6253+18])
                                                Pexp_ident "contribute" (src/StackSymbols.ml[174,6253+8]..[174,6253+18])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/StackSymbols.ml[174,6253+19]..[174,6253+23])
                                                    Pexp_ident "root" (src/StackSymbols.ml[174,6253+19]..[174,6253+23])
                                                <arg>
                                                Nolabel
                                                  expression (src/StackSymbols.ml[174,6253+24]..[174,6253+29])
                                                    Pexp_ident "empty" (src/StackSymbols.ml[174,6253+24]..[174,6253+29])
                                              ]
                                    ]
                              ]
                      ]
                    structure_item (src/StackSymbols.ml[179,6374+4]..[184,6703+7])
                      Pstr_value Nonrec
                      [
                        <def>
                          pattern (src/StackSymbols.ml[179,6374+8]..[179,6374+25])
                            Ppat_var "foreach_successor" (src/StackSymbols.ml[179,6374+8]..[179,6374+25])
                          expression (src/StackSymbols.ml[179,6374+26]..[184,6703+7]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/StackSymbols.ml[179,6374+26]..[179,6374+32])
                              Ppat_var "source" (src/StackSymbols.ml[179,6374+26]..[179,6374+32])
                            expression (src/StackSymbols.ml[179,6374+33]..[184,6703+7]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/StackSymbols.ml[179,6374+33]..[179,6374+38])
                                Ppat_var "stack" (src/StackSymbols.ml[179,6374+33]..[179,6374+38])
                              expression (src/StackSymbols.ml[179,6374+39]..[184,6703+7]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/StackSymbols.ml[179,6374+39]..[179,6374+49])
                                  Ppat_var "contribute" (src/StackSymbols.ml[179,6374+39]..[179,6374+49])
                                expression (src/StackSymbols.ml[180,6426+6]..[184,6703+7])
                                  Pexp_apply
                                  expression (src/StackSymbols.ml[180,6426+32]..[180,6426+34])
                                    Pexp_ident "|>" (src/StackSymbols.ml[180,6426+32]..[180,6426+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/StackSymbols.ml[180,6426+6]..[180,6426+31])
                                        Pexp_apply
                                        expression (src/StackSymbols.ml[180,6426+6]..[180,6426+24])
                                          Pexp_ident "Lr0.outgoing_edges" (src/StackSymbols.ml[180,6426+6]..[180,6426+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/StackSymbols.ml[180,6426+25]..[180,6426+31])
                                              Pexp_ident "source" (src/StackSymbols.ml[180,6426+25]..[180,6426+31])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/StackSymbols.ml[180,6426+35]..[184,6703+7])
                                        Pexp_apply
                                        expression (src/StackSymbols.ml[180,6426+35]..[180,6426+49])
                                          Pexp_ident "SymbolMap.iter" (src/StackSymbols.ml[180,6426+35]..[180,6426+49])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/StackSymbols.ml[180,6426+50]..[184,6703+7])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (src/StackSymbols.ml[180,6426+55]..[180,6426+61])
                                                Ppat_var "symbol" (src/StackSymbols.ml[180,6426+55]..[180,6426+61])
                                              expression (src/StackSymbols.ml[180,6426+62]..[183,6657+45]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (src/StackSymbols.ml[180,6426+62]..[180,6426+68])
                                                  Ppat_var "target" (src/StackSymbols.ml[180,6426+62]..[180,6426+68])
                                                expression (src/StackSymbols.ml[183,6657+8]..[183,6657+45])
                                                  Pexp_apply
                                                  expression (src/StackSymbols.ml[183,6657+8]..[183,6657+18])
                                                    Pexp_ident "contribute" (src/StackSymbols.ml[183,6657+8]..[183,6657+18])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/StackSymbols.ml[183,6657+19]..[183,6657+25])
                                                        Pexp_ident "target" (src/StackSymbols.ml[183,6657+19]..[183,6657+25])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/StackSymbols.ml[183,6657+26]..[183,6657+45])
                                                        Pexp_apply
                                                        expression (src/StackSymbols.ml[183,6657+27]..[183,6657+31])
                                                          Pexp_ident "push" (src/StackSymbols.ml[183,6657+27]..[183,6657+31])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/StackSymbols.ml[183,6657+32]..[183,6657+37])
                                                              Pexp_ident "stack" (src/StackSymbols.ml[183,6657+32]..[183,6657+37])
                                                          <arg>
                                                          Nolabel
                                                            expression (src/StackSymbols.ml[183,6657+38]..[183,6657+44])
                                                              Pexp_ident "symbol" (src/StackSymbols.ml[183,6657+38]..[183,6657+44])
                                                        ]
                                                  ]
                                        ]
                                  ]
                      ]
                  ]
            structure_item (src/StackSymbols.ml[190,6759+2]..[192,6890+14])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/StackSymbols.ml[190,6759+6]..[190,6759+19])
                    Ppat_var "stack_symbols" (src/StackSymbols.ml[190,6759+6]..[190,6759+19])
                  core_type (src/StackSymbols.ml[190,6759+22]..[190,6759+49])
                    Ptyp_arrow
                    Nolabel
                    core_type (src/StackSymbols.ml[190,6759+22]..[190,6759+30])
                      Ptyp_constr "Lr0.node" (src/StackSymbols.ml[190,6759+22]..[190,6759+30])
                      []
                    core_type (src/StackSymbols.ml[190,6759+34]..[190,6759+49])
                      Ptyp_constr "option" (src/StackSymbols.ml[190,6759+43]..[190,6759+49])
                      [
                        core_type (src/StackSymbols.ml[190,6759+34]..[190,6759+42])
                          Ptyp_constr "property" (src/StackSymbols.ml[190,6759+34]..[190,6759+42])
                          []
                      ]
                  expression (src/StackSymbols.ml[191,6811+4]..[192,6890+14])
                    Pexp_letmodule "F" (src/StackSymbols.ml[191,6811+15]..[191,6811+16])
                    module_expr (src/StackSymbols.ml[191,6811+19]..[191,6811+75])
                      Pmod_apply
                      module_expr (src/StackSymbols.ml[191,6811+19]..[191,6811+72])
                        Pmod_apply
                        module_expr (src/StackSymbols.ml[191,6811+19]..[191,6811+58])
                          Pmod_apply
                          module_expr (src/StackSymbols.ml[191,6811+19]..[191,6811+35])
                            Pmod_ident "Fix.DataFlow.Run" (src/StackSymbols.ml[191,6811+19]..[191,6811+35])
                          module_expr (src/StackSymbols.ml[191,6811+36]..[191,6811+57])
                            Pmod_ident "Lr0.ImperativeNodeMap" (src/StackSymbols.ml[191,6811+36]..[191,6811+57])
                        module_expr (src/StackSymbols.ml[191,6811+59]..[191,6811+71])
                          Pmod_ident "SymbolVector" (src/StackSymbols.ml[191,6811+59]..[191,6811+71])
                      module_expr (src/StackSymbols.ml[191,6811+73]..[191,6811+74])
                        Pmod_ident "G" (src/StackSymbols.ml[191,6811+73]..[191,6811+74])
                    expression (src/StackSymbols.ml[192,6890+4]..[192,6890+14])
                      Pexp_ident "F.solution" (src/StackSymbols.ml[192,6890+4]..[192,6890+14])
              ]
            structure_item (src/StackSymbols.ml[198,7079+2]..[204,7266+9])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/StackSymbols.ml[198,7079+6]..[198,7079+19])
                    Ppat_var "stack_symbols" (src/StackSymbols.ml[198,7079+6]..[198,7079+19])
                  expression (src/StackSymbols.ml[198,7079+20]..[204,7266+9]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/StackSymbols.ml[198,7079+20]..[198,7079+37])
                      Ppat_constraint
                      pattern (src/StackSymbols.ml[198,7079+21]..[198,7079+25])
                        Ppat_var "node" (src/StackSymbols.ml[198,7079+21]..[198,7079+25])
                      core_type (src/StackSymbols.ml[198,7079+28]..[198,7079+36])
                        Ptyp_constr "Lr0.node" (src/StackSymbols.ml[198,7079+28]..[198,7079+36])
                        []
                    expression (src/StackSymbols.ml[198,7079+38]..[204,7266+9])
                      Pexp_constraint
                      expression (src/StackSymbols.ml[199,7130+4]..[204,7266+9])
                        Pexp_match
                        expression (src/StackSymbols.ml[199,7130+10]..[199,7130+28])
                          Pexp_apply
                          expression (src/StackSymbols.ml[199,7130+10]..[199,7130+23])
                            Pexp_ident "stack_symbols" (src/StackSymbols.ml[199,7130+10]..[199,7130+23])
                          [
                            <arg>
                            Nolabel
                              expression (src/StackSymbols.ml[199,7130+24]..[199,7130+28])
                                Pexp_ident "node" (src/StackSymbols.ml[199,7130+24]..[199,7130+28])
                          ]
                        [
                          <case>
                            pattern (src/StackSymbols.ml[200,7164+6]..[200,7164+10])
                              Ppat_construct "None" (src/StackSymbols.ml[200,7164+6]..[200,7164+10])
                              None
                            expression (src/StackSymbols.ml[202,7229+8]..[202,7229+20])
                              Pexp_assert
                              expression (src/StackSymbols.ml[202,7229+15]..[202,7229+20])
                                Pexp_construct "false" (src/StackSymbols.ml[202,7229+15]..[202,7229+20])
                                None
                          <case>
                            pattern (src/StackSymbols.ml[203,7250+6]..[203,7250+12])
                              Ppat_construct "Some" (src/StackSymbols.ml[203,7250+6]..[203,7250+10])
                              Some
                                []
                                pattern (src/StackSymbols.ml[203,7250+11]..[203,7250+12])
                                  Ppat_var "v" (src/StackSymbols.ml[203,7250+11]..[203,7250+12])
                            expression (src/StackSymbols.ml[204,7266+8]..[204,7266+9])
                              Pexp_ident "v" (src/StackSymbols.ml[204,7266+8]..[204,7266+9])
                        ]
                      core_type (src/StackSymbols.ml[198,7079+40]..[198,7079+48])
                        Ptyp_constr "property" (src/StackSymbols.ml[198,7079+40]..[198,7079+48])
                        []
              ]
            structure_item (src/StackSymbols.ml[208,7331+2]..[209,7382+45])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/StackSymbols.ml[208,7331+6]..[208,7331+19])
                    Ppat_var "stack_symbols" (src/StackSymbols.ml[208,7331+6]..[208,7331+19])
                  expression (src/StackSymbols.ml[208,7331+20]..[209,7382+45]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/StackSymbols.ml[208,7331+20]..[208,7331+37])
                      Ppat_constraint
                      pattern (src/StackSymbols.ml[208,7331+21]..[208,7331+25])
                        Ppat_var "node" (src/StackSymbols.ml[208,7331+21]..[208,7331+25])
                      core_type (src/StackSymbols.ml[208,7331+28]..[208,7331+36])
                        Ptyp_constr "Lr1.node" (src/StackSymbols.ml[208,7331+28]..[208,7331+36])
                        []
                    expression (src/StackSymbols.ml[208,7331+38]..[209,7382+45])
                      Pexp_constraint
                      expression (src/StackSymbols.ml[209,7382+4]..[209,7382+45])
                        Pexp_apply
                        expression (src/StackSymbols.ml[209,7382+4]..[209,7382+17])
                          Pexp_ident "stack_symbols" (src/StackSymbols.ml[209,7382+4]..[209,7382+17])
                        [
                          <arg>
                          Nolabel
                            expression (src/StackSymbols.ml[209,7382+18]..[209,7382+45])
                              Pexp_apply
                              expression (src/StackSymbols.ml[209,7382+19]..[209,7382+27])
                                Pexp_ident "Lr0.core" (src/StackSymbols.ml[209,7382+19]..[209,7382+27])
                              [
                                <arg>
                                Nolabel
                                  expression (src/StackSymbols.ml[209,7382+28]..[209,7382+44])
                                    Pexp_apply
                                    expression (src/StackSymbols.ml[209,7382+29]..[209,7382+38])
                                      Pexp_ident "Lr1.state" (src/StackSymbols.ml[209,7382+29]..[209,7382+38])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/StackSymbols.ml[209,7382+39]..[209,7382+43])
                                          Pexp_ident "node" (src/StackSymbols.ml[209,7382+39]..[209,7382+43])
                                    ]
                              ]
                        ]
                      core_type (src/StackSymbols.ml[208,7331+40]..[208,7331+48])
                        Ptyp_constr "property" (src/StackSymbols.ml[208,7331+40]..[208,7331+48])
                        []
              ]
            structure_item (src/StackSymbols.ml[211,7429+2]..[212,7474+37])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/StackSymbols.ml[211,7429+6]..[211,7429+18])
                    Ppat_var "stack_height" (src/StackSymbols.ml[211,7429+6]..[211,7429+18])
                  expression (src/StackSymbols.ml[211,7429+19]..[212,7474+37]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/StackSymbols.ml[211,7429+19]..[211,7429+36])
                      Ppat_constraint
                      pattern (src/StackSymbols.ml[211,7429+20]..[211,7429+24])
                        Ppat_var "node" (src/StackSymbols.ml[211,7429+20]..[211,7429+24])
                      core_type (src/StackSymbols.ml[211,7429+27]..[211,7429+35])
                        Ptyp_constr "Lr1.node" (src/StackSymbols.ml[211,7429+27]..[211,7429+35])
                        []
                    expression (src/StackSymbols.ml[211,7429+37]..[212,7474+37])
                      Pexp_constraint
                      expression (src/StackSymbols.ml[212,7474+4]..[212,7474+37])
                        Pexp_apply
                        expression (src/StackSymbols.ml[212,7474+4]..[212,7474+16])
                          Pexp_ident "Array.length" (src/StackSymbols.ml[212,7474+4]..[212,7474+16])
                        [
                          <arg>
                          Nolabel
                            expression (src/StackSymbols.ml[212,7474+17]..[212,7474+37])
                              Pexp_apply
                              expression (src/StackSymbols.ml[212,7474+18]..[212,7474+31])
                                Pexp_ident "stack_symbols" (src/StackSymbols.ml[212,7474+18]..[212,7474+31])
                              [
                                <arg>
                                Nolabel
                                  expression (src/StackSymbols.ml[212,7474+32]..[212,7474+36])
                                    Pexp_ident "node" (src/StackSymbols.ml[212,7474+32]..[212,7474+36])
                              ]
                        ]
                      core_type (src/StackSymbols.ml[211,7429+39]..[211,7429+42])
                        Ptyp_constr "int" (src/StackSymbols.ml[211,7429+39]..[211,7429+42])
                        []
              ]
            structure_item (src/StackSymbols.ml[218,7701+2]..[223,7883+20])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/StackSymbols.ml[218,7701+6]..[218,7701+11])
                    Ppat_var "join1" (src/StackSymbols.ml[218,7701+6]..[218,7701+11])
                  expression (src/StackSymbols.ml[218,7701+12]..[223,7883+20]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/StackSymbols.ml[218,7701+12]..[218,7701+13])
                      Ppat_var "f" (src/StackSymbols.ml[218,7701+12]..[218,7701+13])
                    expression (src/StackSymbols.ml[218,7701+14]..[223,7883+20]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/StackSymbols.ml[218,7701+14]..[218,7701+19])
                        Ppat_var "nodes" (src/StackSymbols.ml[218,7701+14]..[218,7701+19])
                      expression (src/StackSymbols.ml[219,7723+4]..[223,7883+20])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/StackSymbols.ml[219,7723+8]..[219,7723+12])
                              Ppat_var "node" (src/StackSymbols.ml[219,7723+8]..[219,7723+12])
                            expression (src/StackSymbols.ml[219,7723+15]..[219,7723+39])
                              Pexp_apply
                              expression (src/StackSymbols.ml[219,7723+15]..[219,7723+33])
                                Pexp_ident "Lr1.NodeSet.choose" (src/StackSymbols.ml[219,7723+15]..[219,7723+33])
                              [
                                <arg>
                                Nolabel
                                  expression (src/StackSymbols.ml[219,7723+34]..[219,7723+39])
                                    Pexp_ident "nodes" (src/StackSymbols.ml[219,7723+34]..[219,7723+39])
                              ]
                        ]
                        expression (src/StackSymbols.ml[220,7766+4]..[223,7883+20])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/StackSymbols.ml[220,7766+8]..[220,7766+13])
                                Ppat_var "nodes" (src/StackSymbols.ml[220,7766+8]..[220,7766+13])
                              expression (src/StackSymbols.ml[220,7766+16]..[220,7766+45])
                                Pexp_apply
                                expression (src/StackSymbols.ml[220,7766+16]..[220,7766+34])
                                  Pexp_ident "Lr1.NodeSet.remove" (src/StackSymbols.ml[220,7766+16]..[220,7766+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/StackSymbols.ml[220,7766+35]..[220,7766+39])
                                      Pexp_ident "node" (src/StackSymbols.ml[220,7766+35]..[220,7766+39])
                                  <arg>
                                  Nolabel
                                    expression (src/StackSymbols.ml[220,7766+40]..[220,7766+45])
                                      Pexp_ident "nodes" (src/StackSymbols.ml[220,7766+40]..[220,7766+45])
                                ]
                          ]
                          expression (src/StackSymbols.ml[221,7815+4]..[223,7883+20])
                            Pexp_apply
                            expression (src/StackSymbols.ml[221,7815+4]..[221,7815+20])
                              Pexp_ident "Lr1.NodeSet.fold" (src/StackSymbols.ml[221,7815+4]..[221,7815+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/StackSymbols.ml[221,7815+21]..[223,7883+5])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/StackSymbols.ml[221,7815+26]..[221,7815+30])
                                    Ppat_var "node" (src/StackSymbols.ml[221,7815+26]..[221,7815+30])
                                  expression (src/StackSymbols.ml[221,7815+31]..[222,7854+28]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/StackSymbols.ml[221,7815+31]..[221,7815+35])
                                      Ppat_var "accu" (src/StackSymbols.ml[221,7815+31]..[221,7815+35])
                                    expression (src/StackSymbols.ml[222,7854+6]..[222,7854+28])
                                      Pexp_apply
                                      expression (src/StackSymbols.ml[222,7854+6]..[222,7854+14])
                                        Pexp_ident "leq_join" (src/StackSymbols.ml[222,7854+6]..[222,7854+14])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/StackSymbols.ml[222,7854+15]..[222,7854+23])
                                            Pexp_apply
                                            expression (src/StackSymbols.ml[222,7854+16]..[222,7854+17])
                                              Pexp_ident "f" (src/StackSymbols.ml[222,7854+16]..[222,7854+17])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/StackSymbols.ml[222,7854+18]..[222,7854+22])
                                                  Pexp_ident "node" (src/StackSymbols.ml[222,7854+18]..[222,7854+22])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (src/StackSymbols.ml[222,7854+24]..[222,7854+28])
                                            Pexp_ident "accu" (src/StackSymbols.ml[222,7854+24]..[222,7854+28])
                                      ]
                              <arg>
                              Nolabel
                                expression (src/StackSymbols.ml[223,7883+6]..[223,7883+11])
                                  Pexp_ident "nodes" (src/StackSymbols.ml[223,7883+6]..[223,7883+11])
                              <arg>
                              Nolabel
                                expression (src/StackSymbols.ml[223,7883+12]..[223,7883+20])
                                  Pexp_apply
                                  expression (src/StackSymbols.ml[223,7883+13]..[223,7883+14])
                                    Pexp_ident "f" (src/StackSymbols.ml[223,7883+13]..[223,7883+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/StackSymbols.ml[223,7883+15]..[223,7883+19])
                                        Pexp_ident "node" (src/StackSymbols.ml[223,7883+15]..[223,7883+19])
                                  ]
                            ]
              ]
            structure_item (src/StackSymbols.ml[231,8132+2]..[243,8703+5])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/StackSymbols.ml[231,8132+6]..[231,8132+24])
                    Ppat_var "production_symbols" (src/StackSymbols.ml[231,8132+6]..[231,8132+24])
                  core_type (src/StackSymbols.ml[231,8132+27]..[231,8132+55])
                    Ptyp_arrow
                    Nolabel
                    core_type (src/StackSymbols.ml[231,8132+27]..[231,8132+43])
                      Ptyp_constr "Production.index" (src/StackSymbols.ml[231,8132+27]..[231,8132+43])
                      []
                    core_type (src/StackSymbols.ml[231,8132+47]..[231,8132+55])
                      Ptyp_constr "property" (src/StackSymbols.ml[231,8132+47]..[231,8132+55])
                      []
                  expression (src/StackSymbols.ml[232,8190+4]..[243,8703+5])
                    Pexp_apply
                    expression (src/StackSymbols.ml[232,8190+4]..[232,8190+23])
                      Pexp_ident "Production.tabulate" (src/StackSymbols.ml[232,8190+4]..[232,8190+23])
                    [
                      <arg>
                      Nolabel
                        expression (src/StackSymbols.ml[232,8190+24]..[243,8703+5])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/StackSymbols.ml[232,8190+29]..[232,8190+33])
                            Ppat_var "prod" (src/StackSymbols.ml[232,8190+29]..[232,8190+33])
                          expression (src/StackSymbols.ml[233,8227+6]..[242,8669+33])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/StackSymbols.ml[233,8227+10]..[233,8227+15])
                                  Ppat_var "nodes" (src/StackSymbols.ml[233,8227+10]..[233,8227+15])
                                expression (src/StackSymbols.ml[233,8227+18]..[233,8227+43])
                                  Pexp_apply
                                  expression (src/StackSymbols.ml[233,8227+18]..[233,8227+38])
                                    Pexp_ident "Lr1.production_where" (src/StackSymbols.ml[233,8227+18]..[233,8227+38])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/StackSymbols.ml[233,8227+39]..[233,8227+43])
                                        Pexp_ident "prod" (src/StackSymbols.ml[233,8227+39]..[233,8227+43])
                                  ]
                            ]
                            expression (src/StackSymbols.ml[234,8274+6]..[242,8669+33])
                              Pexp_ifthenelse
                              expression (src/StackSymbols.ml[234,8274+9]..[234,8274+35])
                                Pexp_apply
                                expression (src/StackSymbols.ml[234,8274+9]..[234,8274+29])
                                  Pexp_ident "Lr1.NodeSet.is_empty" (src/StackSymbols.ml[234,8274+9]..[234,8274+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/StackSymbols.ml[234,8274+30]..[234,8274+35])
                                      Pexp_ident "nodes" (src/StackSymbols.ml[234,8274+30]..[234,8274+35])
                                ]
                              expression (src/StackSymbols.ml[238,8534+8]..[238,8534+27])
                                Pexp_apply
                                expression (src/StackSymbols.ml[238,8534+8]..[238,8534+22])
                                  Pexp_ident "Production.rhs" (src/StackSymbols.ml[238,8534+8]..[238,8534+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/StackSymbols.ml[238,8534+23]..[238,8534+27])
                                      Pexp_ident "prod" (src/StackSymbols.ml[238,8534+23]..[238,8534+27])
                                ]
                              Some
                                expression (src/StackSymbols.ml[242,8669+8]..[242,8669+33])
                                  Pexp_apply
                                  expression (src/StackSymbols.ml[242,8669+8]..[242,8669+13])
                                    Pexp_ident "join1" (src/StackSymbols.ml[242,8669+8]..[242,8669+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/StackSymbols.ml[242,8669+14]..[242,8669+27])
                                        Pexp_ident "stack_symbols" (src/StackSymbols.ml[242,8669+14]..[242,8669+27])
                                    <arg>
                                    Nolabel
                                      expression (src/StackSymbols.ml[242,8669+28]..[242,8669+33])
                                        Pexp_ident "nodes" (src/StackSymbols.ml[242,8669+28]..[242,8669+33])
                                  ]
                    ]
              ]
            structure_item (src/StackSymbols.ml[245,8710+2]..[246,8741+42])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/StackSymbols.ml[245,8710+6]..[245,8710+23])
                    Ppat_var "production_height" (src/StackSymbols.ml[245,8710+6]..[245,8710+23])
                  expression (src/StackSymbols.ml[245,8710+24]..[246,8741+42]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/StackSymbols.ml[245,8710+24]..[245,8710+28])
                      Ppat_var "prod" (src/StackSymbols.ml[245,8710+24]..[245,8710+28])
                    expression (src/StackSymbols.ml[246,8741+4]..[246,8741+42])
                      Pexp_apply
                      expression (src/StackSymbols.ml[246,8741+4]..[246,8741+16])
                        Pexp_ident "Array.length" (src/StackSymbols.ml[246,8741+4]..[246,8741+16])
                      [
                        <arg>
                        Nolabel
                          expression (src/StackSymbols.ml[246,8741+17]..[246,8741+42])
                            Pexp_apply
                            expression (src/StackSymbols.ml[246,8741+18]..[246,8741+36])
                              Pexp_ident "production_symbols" (src/StackSymbols.ml[246,8741+18]..[246,8741+36])
                            [
                              <arg>
                              Nolabel
                                expression (src/StackSymbols.ml[246,8741+37]..[246,8741+41])
                                  Pexp_ident "prod" (src/StackSymbols.ml[246,8741+37]..[246,8741+41])
                            ]
                      ]
              ]
            structure_item (src/StackSymbols.ml[251,8889+2]..[262,9308+5])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/StackSymbols.ml[251,8889+6]..[251,8889+18])
                    Ppat_var "goto_symbols" (src/StackSymbols.ml[251,8889+6]..[251,8889+18])
                  core_type (src/StackSymbols.ml[251,8889+21]..[251,8889+46])
                    Ptyp_arrow
                    Nolabel
                    core_type (src/StackSymbols.ml[251,8889+21]..[251,8889+34])
                      Ptyp_constr "Nonterminal.t" (src/StackSymbols.ml[251,8889+21]..[251,8889+34])
                      []
                    core_type (src/StackSymbols.ml[251,8889+38]..[251,8889+46])
                      Ptyp_constr "property" (src/StackSymbols.ml[251,8889+38]..[251,8889+46])
                      []
                  expression (src/StackSymbols.ml[252,8938+4]..[262,9308+5])
                    Pexp_apply
                    expression (src/StackSymbols.ml[252,8938+4]..[252,8938+24])
                      Pexp_ident "Nonterminal.tabulate" (src/StackSymbols.ml[252,8938+4]..[252,8938+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/StackSymbols.ml[252,8938+25]..[262,9308+5])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/StackSymbols.ml[252,8938+30]..[252,8938+32])
                            Ppat_var "nt" (src/StackSymbols.ml[252,8938+30]..[252,8938+32])
                          expression (src/StackSymbols.ml[253,8974+6]..[261,9272+35])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/StackSymbols.ml[253,8974+10]..[253,8974+16])
                                  Ppat_var "symbol" (src/StackSymbols.ml[253,8974+10]..[253,8974+16])
                                expression (src/StackSymbols.ml[253,8974+19]..[253,8974+30])
                                  Pexp_construct "Symbol.N" (src/StackSymbols.ml[253,8974+19]..[253,8974+27])
                                  Some
                                    expression (src/StackSymbols.ml[253,8974+28]..[253,8974+30])
                                      Pexp_ident "nt" (src/StackSymbols.ml[253,8974+28]..[253,8974+30])
                            ]
                            expression (src/StackSymbols.ml[256,9112+6]..[261,9272+35])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/StackSymbols.ml[256,9112+10]..[256,9112+17])
                                    Ppat_var "targets" (src/StackSymbols.ml[256,9112+10]..[256,9112+17])
                                  expression (src/StackSymbols.ml[256,9112+20]..[256,9112+42])
                                    Pexp_apply
                                    expression (src/StackSymbols.ml[256,9112+20]..[256,9112+35])
                                      Pexp_ident "Lr1.all_targets" (src/StackSymbols.ml[256,9112+20]..[256,9112+35])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/StackSymbols.ml[256,9112+36]..[256,9112+42])
                                          Pexp_ident "symbol" (src/StackSymbols.ml[256,9112+36]..[256,9112+42])
                                    ]
                              ]
                              expression (src/StackSymbols.ml[257,9158+6]..[261,9272+35])
                                Pexp_ifthenelse
                                expression (src/StackSymbols.ml[257,9158+9]..[257,9158+37])
                                  Pexp_apply
                                  expression (src/StackSymbols.ml[257,9158+9]..[257,9158+29])
                                    Pexp_ident "Lr1.NodeSet.is_empty" (src/StackSymbols.ml[257,9158+9]..[257,9158+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/StackSymbols.ml[257,9158+30]..[257,9158+37])
                                        Pexp_ident "targets" (src/StackSymbols.ml[257,9158+30]..[257,9158+37])
                                  ]
                                expression (src/StackSymbols.ml[259,9240+8]..[259,9240+20])
                                  Pexp_array
                                  [
                                    expression (src/StackSymbols.ml[259,9240+11]..[259,9240+17])
                                      Pexp_ident "symbol" (src/StackSymbols.ml[259,9240+11]..[259,9240+17])
                                  ]
                                Some
                                  expression (src/StackSymbols.ml[261,9272+8]..[261,9272+35])
                                    Pexp_apply
                                    expression (src/StackSymbols.ml[261,9272+8]..[261,9272+13])
                                      Pexp_ident "join1" (src/StackSymbols.ml[261,9272+8]..[261,9272+13])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/StackSymbols.ml[261,9272+14]..[261,9272+27])
                                          Pexp_ident "stack_symbols" (src/StackSymbols.ml[261,9272+14]..[261,9272+27])
                                      <arg>
                                      Nolabel
                                        expression (src/StackSymbols.ml[261,9272+28]..[261,9272+35])
                                          Pexp_ident "targets" (src/StackSymbols.ml[261,9272+28]..[261,9272+35])
                                    ]
                    ]
              ]
            structure_item (src/StackSymbols.ml[264,9315+2]..[265,9338+34])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/StackSymbols.ml[264,9315+6]..[264,9315+17])
                    Ppat_var "goto_height" (src/StackSymbols.ml[264,9315+6]..[264,9315+17])
                  expression (src/StackSymbols.ml[264,9315+18]..[265,9338+34]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/StackSymbols.ml[264,9315+18]..[264,9315+20])
                      Ppat_var "nt" (src/StackSymbols.ml[264,9315+18]..[264,9315+20])
                    expression (src/StackSymbols.ml[265,9338+4]..[265,9338+34])
                      Pexp_apply
                      expression (src/StackSymbols.ml[265,9338+4]..[265,9338+16])
                        Pexp_ident "Array.length" (src/StackSymbols.ml[265,9338+4]..[265,9338+16])
                      [
                        <arg>
                        Nolabel
                          expression (src/StackSymbols.ml[265,9338+17]..[265,9338+34])
                            Pexp_apply
                            expression (src/StackSymbols.ml[265,9338+18]..[265,9338+30])
                              Pexp_ident "goto_symbols" (src/StackSymbols.ml[265,9338+18]..[265,9338+30])
                            [
                              <arg>
                              Nolabel
                                expression (src/StackSymbols.ml[265,9338+31]..[265,9338+33])
                                  Pexp_ident "nt" (src/StackSymbols.ml[265,9338+31]..[265,9338+33])
                            ]
                      ]
              ]
          ]
  structure_item (src/StackSymbols.ml[273,9476+0]..[274,9489+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/StackSymbols.ml[273,9476+4]..[273,9476+10])
          Ppat_var "buffer" (src/StackSymbols.ml[273,9476+4]..[273,9476+10])
        expression (src/StackSymbols.ml[274,9489+2]..[274,9489+20])
          Pexp_apply
          expression (src/StackSymbols.ml[274,9489+2]..[274,9489+15])
            Pexp_ident "Buffer.create" (src/StackSymbols.ml[274,9489+2]..[274,9489+15])
          [
            <arg>
            Nolabel
              expression (src/StackSymbols.ml[274,9489+16]..[274,9489+20])
                Pexp_constant PConst_int (1024,None)
          ]
    ]
  structure_item (src/StackSymbols.ml[276,9511+0]..[282,9696+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/StackSymbols.ml[276,9511+4]..[276,9511+17])
          Ppat_var "print_symbols" (src/StackSymbols.ml[276,9511+4]..[276,9511+17])
        expression (src/StackSymbols.ml[276,9511+18]..[282,9696+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/StackSymbols.ml[276,9511+18]..[276,9511+25])
            Ppat_var "symbols" (src/StackSymbols.ml[276,9511+18]..[276,9511+25])
          expression (src/StackSymbols.ml[277,9539+2]..[282,9696+3])
            Pexp_sequence
            expression (src/StackSymbols.ml[277,9539+2]..[279,9632+3])
              Pexp_apply
              expression (src/StackSymbols.ml[277,9539+10]..[277,9539+12])
                Pexp_ident "|>" (src/StackSymbols.ml[277,9539+10]..[277,9539+12])
              [
                <arg>
                Nolabel
                  expression (src/StackSymbols.ml[277,9539+2]..[277,9539+9])
                    Pexp_ident "symbols" (src/StackSymbols.ml[277,9539+2]..[277,9539+9])
                <arg>
                Nolabel
                  expression (src/StackSymbols.ml[277,9539+13]..[279,9632+3])
                    Pexp_apply
                    expression (src/StackSymbols.ml[277,9539+13]..[277,9539+23])
                      Pexp_ident "Array.iter" (src/StackSymbols.ml[277,9539+13]..[277,9539+23])
                    [
                      <arg>
                      Nolabel
                        expression (src/StackSymbols.ml[277,9539+24]..[279,9632+3])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/StackSymbols.ml[277,9539+29]..[277,9539+35])
                            Ppat_var "symbol" (src/StackSymbols.ml[277,9539+29]..[277,9539+35])
                          expression (src/StackSymbols.ml[278,9578+4]..[278,9578+53])
                            Pexp_apply
                            expression (src/StackSymbols.ml[278,9578+4]..[278,9578+18])
                              Pexp_ident "Printf.bprintf" (src/StackSymbols.ml[278,9578+4]..[278,9578+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/StackSymbols.ml[278,9578+19]..[278,9578+25])
                                  Pexp_ident "buffer" (src/StackSymbols.ml[278,9578+19]..[278,9578+25])
                              <arg>
                              Nolabel
                                expression (src/StackSymbols.ml[278,9578+26]..[278,9578+31])
                                  Pexp_constant PConst_string(" %s",(src/StackSymbols.ml[278,9578+27]..[278,9578+30]),None)
                              <arg>
                              Nolabel
                                expression (src/StackSymbols.ml[278,9578+32]..[278,9578+53])
                                  Pexp_apply
                                  expression (src/StackSymbols.ml[278,9578+33]..[278,9578+45])
                                    Pexp_ident "Symbol.print" (src/StackSymbols.ml[278,9578+33]..[278,9578+45])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/StackSymbols.ml[278,9578+46]..[278,9578+52])
                                        Pexp_ident "symbol" (src/StackSymbols.ml[278,9578+46]..[278,9578+52])
                                  ]
                            ]
                    ]
              ]
            expression (src/StackSymbols.ml[280,9637+2]..[282,9696+3])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/StackSymbols.ml[280,9637+6]..[280,9637+7])
                    Ppat_var "s" (src/StackSymbols.ml[280,9637+6]..[280,9637+7])
                  expression (src/StackSymbols.ml[280,9637+10]..[280,9637+32])
                    Pexp_apply
                    expression (src/StackSymbols.ml[280,9637+10]..[280,9637+25])
                      Pexp_ident "Buffer.contents" (src/StackSymbols.ml[280,9637+10]..[280,9637+25])
                    [
                      <arg>
                      Nolabel
                        expression (src/StackSymbols.ml[280,9637+26]..[280,9637+32])
                          Pexp_ident "buffer" (src/StackSymbols.ml[280,9637+26]..[280,9637+32])
                    ]
              ]
              expression (src/StackSymbols.ml[281,9673+2]..[282,9696+3])
                Pexp_sequence
                expression (src/StackSymbols.ml[281,9673+2]..[281,9673+21])
                  Pexp_apply
                  expression (src/StackSymbols.ml[281,9673+2]..[281,9673+14])
                    Pexp_ident "Buffer.clear" (src/StackSymbols.ml[281,9673+2]..[281,9673+14])
                  [
                    <arg>
                    Nolabel
                      expression (src/StackSymbols.ml[281,9673+15]..[281,9673+21])
                        Pexp_ident "buffer" (src/StackSymbols.ml[281,9673+15]..[281,9673+21])
                  ]
                expression (src/StackSymbols.ml[282,9696+2]..[282,9696+3])
                  Pexp_ident "s" (src/StackSymbols.ml[282,9696+2]..[282,9696+3])
    ]
]

open Grammar
module type STACK_SYMBOLS  =
  sig
    type property = Symbol.t array[@@ocaml.doc
                                    "A property is a description of the known suffix of the stack at state\n     [s]. It is represented as an array of symbols. By convention, the top\n     of the stack is the end of the array. "]
    val stack_symbols : Lr1.node -> property[@@ocaml.doc
                                              "[stack_symbols s] is the known suffix of the stack at state [s]. It\n     is represented as an array of symbols. By convention, the top of\n     the stack is the end of the array. "]
    val stack_height : Lr1.node -> int[@@ocaml.doc
                                        "[stack_height s] is [Array.length (stack_symbols s)]. "]
    val production_symbols : Production.index -> property[@@ocaml.doc
                                                           "[production_symbols prod] is the known suffix of the stack at a state\n     where production [prod] can be reduced. In the short invariant, the\n     length of this suffix is [Production.length prod]. In the long\n     invariant, its length can be greater. "]
    val production_height : Production.index -> int[@@ocaml.doc
                                                     "[production_height prod] is [Array.length (production_symbols prod)]. "]
    val goto_symbols : Nonterminal.t -> property[@@ocaml.doc
                                                  "[goto_symbols nt] is the known suffix of the stack at a state where an\n     edge labeled [nt] has just been followed. In the short invariant, the\n     length of this suffix is [1]. In the long invariant, its length can be\n     greater. "]
    val goto_height : Nonterminal.t -> int[@@ocaml.doc
                                            "[goto_height nt] is [Array.length (goto_symbols nt)]. "]
  end
module Run() =
  struct
    type property = Symbol.t array
    let stack_symbols : Lr0.node -> property =
      let dummy = Array.make 0 (Symbol.T Terminal.sharp) in
      Misc.tabulate Lr0.n
        (fun node ->
           Item.Set.fold
             (fun item ->
                fun accu ->
                  let (_prod, _nt, rhs, pos, _length) = Item.def item in
                  if pos > (Array.length accu)
                  then Array.sub rhs 0 pos
                  else accu) (Lr0.items node) dummy)
    let stack_symbols (node : Lr1.node) =
      (stack_symbols (Lr0.core (Lr1.state node)) : property)
    let stack_height (node : Lr1.node) =
      (Array.length (stack_symbols node) : int)
    let production_symbols = Production.rhs
    let production_height prod = Array.length (production_symbols prod)
    let goto_symbols nt = [|(Symbol.N nt)|]
    let goto_height nt = Array.length (goto_symbols nt)
  end
module Long() =
  struct
    module SymbolVector =
      struct
        type property = Symbol.t array
        let (empty, push) = let open MArray in (empty, push)
        let rec lcs v1 v2 n1 n2 n k =
          if (k = n) || ((v1.((n1 - 1) - k)) <> (v2.((n2 - 1) - k)))
          then k
          else lcs v1 v2 n1 n2 n (k + 1)
        let leq_join v1 v2 =
          let n1 = Array.length v1
          and n2 = Array.length v2 in
          let n = min n1 n2 in
          let k = lcs v1 v2 n1 n2 n 0 in
          if k = n2 then v2 else if k = n1 then v1 else MArray.truncate k v1
      end
    include SymbolVector
    module G =
      struct
        type variable = Lr0.node
        type property = SymbolVector.property
        let foreach_root contribute =
          Lr0.entry |>
            (ProductionMap.iter
               (fun _prod -> fun root -> contribute root empty))
        let foreach_successor source stack contribute =
          (Lr0.outgoing_edges source) |>
            (SymbolMap.iter
               (fun symbol ->
                  fun target -> contribute target (push stack symbol)))
      end
    let stack_symbols : Lr0.node -> property option =
      let module F =
        (((Fix.DataFlow.Run)(Lr0.ImperativeNodeMap))(SymbolVector))(G) in
        F.solution
    let stack_symbols (node : Lr0.node) =
      (match stack_symbols node with | None -> assert false | Some v -> v : 
      property)
    let stack_symbols (node : Lr1.node) =
      (stack_symbols (Lr0.core (Lr1.state node)) : property)
    let stack_height (node : Lr1.node) =
      (Array.length (stack_symbols node) : int)
    let join1 f nodes =
      let node = Lr1.NodeSet.choose nodes in
      let nodes = Lr1.NodeSet.remove node nodes in
      Lr1.NodeSet.fold (fun node -> fun accu -> leq_join (f node) accu) nodes
        (f node)
    let production_symbols : Production.index -> property =
      Production.tabulate
        (fun prod ->
           let nodes = Lr1.production_where prod in
           if Lr1.NodeSet.is_empty nodes
           then Production.rhs prod
           else join1 stack_symbols nodes)
    let production_height prod = Array.length (production_symbols prod)
    let goto_symbols : Nonterminal.t -> property =
      Nonterminal.tabulate
        (fun nt ->
           let symbol = Symbol.N nt in
           let targets = Lr1.all_targets symbol in
           if Lr1.NodeSet.is_empty targets
           then [|symbol|]
           else join1 stack_symbols targets)
    let goto_height nt = Array.length (goto_symbols nt)
  end
let buffer = Buffer.create 1024
let print_symbols symbols =
  symbols |>
    (Array.iter
       (fun symbol -> Printf.bprintf buffer " %s" (Symbol.print symbol)));
  (let s = Buffer.contents buffer in Buffer.clear buffer; s)
[
  structure_item (src/StackSymbols.ml[14,1002+0]..src/StackSymbols.ml[14,1002+12])
    Tstr_open Fresh
    module_expr (src/StackSymbols.ml[14,1002+5]..src/StackSymbols.ml[14,1002+12])
      Tmod_ident "Dune__exe!.Grammar"
  structure_item (src/StackSymbols.ml[16,1016+0]..src/StackSymbols.ml[50,2451+3])
    Tstr_modtype "STACK_SYMBOLS/555"
      module_type (src/StackSymbols.ml[16,1016+28]..src/StackSymbols.ml[50,2451+3])
        Tmty_signature
        [
          signature_item (src/StackSymbols.ml[21,1245+2]..src/StackSymbols.ml[22,1263+18])
            Tsig_type Rec
            [
              type_declaration property/414 (src/StackSymbols.ml[21,1245+2]..src/StackSymbols.ml[22,1263+18])
                attribute "ocaml.doc"
                  [
                    structure_item (src/StackSymbols.ml[18,1049+2]..[20,1199+45])
                      Pstr_eval
                      expression (src/StackSymbols.ml[18,1049+2]..[20,1199+45])
                        Pexp_constant PConst_string("A property is a description of the known suffix of the stack at state\n     [s]. It is represented as an array of symbols. By convention, the top\n     of the stack is the end of the array. ",(src/StackSymbols.ml[18,1049+2]..[20,1199+45]),None)
                  ]
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/StackSymbols.ml[22,1263+4]..src/StackSymbols.ml[22,1263+18])
                      Ttyp_constr "array/8!"
                      [
                        core_type (src/StackSymbols.ml[22,1263+4]..src/StackSymbols.ml[22,1263+12])
                          Ttyp_constr "Dune__exe!.Grammar.Symbol.t"
                          []
                      ]
            ]
          signature_item (src/StackSymbols.ml[27,1469+2]..src/StackSymbols.ml[27,1469+41])
            Tsig_value
            value_description stack_symbols/495 (src/StackSymbols.ml[27,1469+2]..src/StackSymbols.ml[27,1469+41])
              attribute "ocaml.doc"
                [
                  structure_item (src/StackSymbols.ml[24,1283+2]..[26,1426+42])
                    Pstr_eval
                    expression (src/StackSymbols.ml[24,1283+2]..[26,1426+42])
                      Pexp_constant PConst_string("[stack_symbols s] is the known suffix of the stack at state [s]. It\n     is represented as an array of symbols. By convention, the top of\n     the stack is the end of the array. ",(src/StackSymbols.ml[24,1283+2]..[26,1426+42]),None)
                ]
              core_type (src/StackSymbols.ml[27,1469+21]..src/StackSymbols.ml[27,1469+41])
                Ttyp_arrow
                Nolabel
                core_type (src/StackSymbols.ml[27,1469+21]..src/StackSymbols.ml[27,1469+29])
                  Ttyp_constr "Dune__exe!.Lr1.node"
                  []
                core_type (src/StackSymbols.ml[27,1469+33]..src/StackSymbols.ml[27,1469+41])
                  Ttyp_constr "property/414"
                  []
              []
          signature_item (src/StackSymbols.ml[30,1574+2]..src/StackSymbols.ml[30,1574+35])
            Tsig_value
            value_description stack_height/496 (src/StackSymbols.ml[30,1574+2]..src/StackSymbols.ml[30,1574+35])
              attribute "ocaml.doc"
                [
                  structure_item (src/StackSymbols.ml[29,1512+2]..[29,1512+61])
                    Pstr_eval
                    expression (src/StackSymbols.ml[29,1512+2]..[29,1512+61])
                      Pexp_constant PConst_string("[stack_height s] is [Array.length (stack_symbols s)]. ",(src/StackSymbols.ml[29,1512+2]..[29,1512+61]),None)
                ]
              core_type (src/StackSymbols.ml[30,1574+20]..src/StackSymbols.ml[30,1574+35])
                Ttyp_arrow
                Nolabel
                core_type (src/StackSymbols.ml[30,1574+20]..src/StackSymbols.ml[30,1574+28])
                  Ttyp_constr "Dune__exe!.Lr1.node"
                  []
                core_type (src/StackSymbols.ml[30,1574+32]..src/StackSymbols.ml[30,1574+35])
                  Ttyp_constr "int/1!"
                  []
              []
          signature_item (src/StackSymbols.ml[36,1873+2]..src/StackSymbols.ml[36,1873+54])
            Tsig_value
            value_description production_symbols/531 (src/StackSymbols.ml[36,1873+2]..src/StackSymbols.ml[36,1873+54])
              attribute "ocaml.doc"
                [
                  structure_item (src/StackSymbols.ml[32,1611+2]..[35,1827+45])
                    Pstr_eval
                    expression (src/StackSymbols.ml[32,1611+2]..[35,1827+45])
                      Pexp_constant PConst_string("[production_symbols prod] is the known suffix of the stack at a state\n     where production [prod] can be reduced. In the short invariant, the\n     length of this suffix is [Production.length prod]. In the long\n     invariant, its length can be greater. ",(src/StackSymbols.ml[32,1611+2]..[35,1827+45]),None)
                ]
              core_type (src/StackSymbols.ml[36,1873+26]..src/StackSymbols.ml[36,1873+54])
                Ttyp_arrow
                Nolabel
                core_type (src/StackSymbols.ml[36,1873+26]..src/StackSymbols.ml[36,1873+42])
                  Ttyp_constr "Dune__exe!.Grammar.Production.index"
                  []
                core_type (src/StackSymbols.ml[36,1873+46]..src/StackSymbols.ml[36,1873+54])
                  Ttyp_constr "property/414"
                  []
              []
          signature_item (src/StackSymbols.ml[39,2007+2]..src/StackSymbols.ml[39,2007+48])
            Tsig_value
            value_description production_height/532 (src/StackSymbols.ml[39,2007+2]..src/StackSymbols.ml[39,2007+48])
              attribute "ocaml.doc"
                [
                  structure_item (src/StackSymbols.ml[38,1929+2]..[38,1929+77])
                    Pstr_eval
                    expression (src/StackSymbols.ml[38,1929+2]..[38,1929+77])
                      Pexp_constant PConst_string("[production_height prod] is [Array.length (production_symbols prod)]. ",(src/StackSymbols.ml[38,1929+2]..[38,1929+77]),None)
                ]
              core_type (src/StackSymbols.ml[39,2007+25]..src/StackSymbols.ml[39,2007+48])
                Ttyp_arrow
                Nolabel
                core_type (src/StackSymbols.ml[39,2007+25]..src/StackSymbols.ml[39,2007+41])
                  Ttyp_constr "Dune__exe!.Grammar.Production.index"
                  []
                core_type (src/StackSymbols.ml[39,2007+45]..src/StackSymbols.ml[39,2007+48])
                  Ttyp_constr "int/1!"
                  []
              []
          signature_item (src/StackSymbols.ml[45,2301+2]..src/StackSymbols.ml[45,2301+45])
            Tsig_value
            value_description goto_symbols/553 (src/StackSymbols.ml[45,2301+2]..src/StackSymbols.ml[45,2301+45])
              attribute "ocaml.doc"
                [
                  structure_item (src/StackSymbols.ml[41,2057+2]..[44,2284+16])
                    Pstr_eval
                    expression (src/StackSymbols.ml[41,2057+2]..[44,2284+16])
                      Pexp_constant PConst_string("[goto_symbols nt] is the known suffix of the stack at a state where an\n     edge labeled [nt] has just been followed. In the short invariant, the\n     length of this suffix is [1]. In the long invariant, its length can be\n     greater. ",(src/StackSymbols.ml[41,2057+2]..[44,2284+16]),None)
                ]
              core_type (src/StackSymbols.ml[45,2301+20]..src/StackSymbols.ml[45,2301+45])
                Ttyp_arrow
                Nolabel
                core_type (src/StackSymbols.ml[45,2301+20]..src/StackSymbols.ml[45,2301+33])
                  Ttyp_constr "Dune__exe!.Grammar.Nonterminal.t"
                  []
                core_type (src/StackSymbols.ml[45,2301+37]..src/StackSymbols.ml[45,2301+45])
                  Ttyp_constr "property/414"
                  []
              []
          signature_item (src/StackSymbols.ml[48,2410+2]..src/StackSymbols.ml[48,2410+39])
            Tsig_value
            value_description goto_height/554 (src/StackSymbols.ml[48,2410+2]..src/StackSymbols.ml[48,2410+39])
              attribute "ocaml.doc"
                [
                  structure_item (src/StackSymbols.ml[47,2348+2]..[47,2348+61])
                    Pstr_eval
                    expression (src/StackSymbols.ml[47,2348+2]..[47,2348+61])
                      Pexp_constant PConst_string("[goto_height nt] is [Array.length (goto_symbols nt)]. ",(src/StackSymbols.ml[47,2348+2]..[47,2348+61]),None)
                ]
              core_type (src/StackSymbols.ml[48,2410+19]..src/StackSymbols.ml[48,2410+39])
                Ttyp_arrow
                Nolabel
                core_type (src/StackSymbols.ml[48,2410+19]..src/StackSymbols.ml[48,2410+32])
                  Ttyp_constr "Dune__exe!.Grammar.Nonterminal.t"
                  []
                core_type (src/StackSymbols.ml[48,2410+36]..src/StackSymbols.ml[48,2410+39])
                  Ttyp_constr "int/1!"
                  []
              []
        ]
  structure_item (src/StackSymbols.ml[74,3597+0]..src/StackSymbols.ml[117,4670+3])
    Tstr_module
    Run/965
      module_expr (src/StackSymbols.ml[74,3597+11]..src/StackSymbols.ml[117,4670+3])
        Tmod_functor ()
        module_expr (src/StackSymbols.ml[74,3597+16]..src/StackSymbols.ml[117,4670+3])
          module_expr (src/StackSymbols.ml[74,3597+16]..src/StackSymbols.ml[117,4670+3])
            Tmod_structure
            [
              structure_item (src/StackSymbols.ml[76,3621+2]..src/StackSymbols.ml[77,3639+18])
                Tstr_type Rec
                [
                  type_declaration property/556 (src/StackSymbols.ml[76,3621+2]..src/StackSymbols.ml[77,3639+18])
                    ptype_params =
                      []
                    ptype_cstrs =
                      []
                    ptype_kind =
                      Ttype_abstract
                    ptype_private = Public
                    ptype_manifest =
                      Some
                        core_type (src/StackSymbols.ml[77,3639+4]..src/StackSymbols.ml[77,3639+18])
                          Ttyp_constr "array/8!"
                          [
                            core_type (src/StackSymbols.ml[77,3639+4]..src/StackSymbols.ml[77,3639+12])
                              Ttyp_constr "Dune__exe!.Grammar.Symbol.t"
                              []
                          ]
                ]
              structure_item (src/StackSymbols.ml[82,3748+2]..src/StackSymbols.ml[91,4098+5])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/StackSymbols.ml[82,3748+6]..src/StackSymbols.ml[82,3748+19])
                      extra
                        Tpat_extra_constraint
                        core_type (src/StackSymbols.ml[82,3748+22]..src/StackSymbols.ml[82,3748+42])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/StackSymbols.ml[82,3748+22]..src/StackSymbols.ml[82,3748+30])
                            Ttyp_constr "Dune__exe!.Lr0.node"
                            []
                          core_type (src/StackSymbols.ml[82,3748+34]..src/StackSymbols.ml[82,3748+42])
                            Ttyp_constr "property/556"
                            []
                      Tpat_alias "stack_symbols/595"
                      pattern (src/StackSymbols.ml[82,3748+6]..src/StackSymbols.ml[82,3748+19])
                        Tpat_any
                    expression (src/StackSymbols.ml[83,3793+4]..src/StackSymbols.ml[91,4098+5])
                      extra
                        Texp_constraint
                        core_type (src/StackSymbols.ml[82,3748+22]..src/StackSymbols.ml[82,3748+42])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/StackSymbols.ml[82,3748+22]..src/StackSymbols.ml[82,3748+30])
                            Ttyp_constr "Dune__exe!.Lr0.node"
                            []
                          core_type (src/StackSymbols.ml[82,3748+34]..src/StackSymbols.ml[82,3748+42])
                            Ttyp_constr "property/556"
                            []
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/StackSymbols.ml[83,3793+8]..src/StackSymbols.ml[83,3793+13])
                            Tpat_var "dummy/596"
                          expression (src/StackSymbols.ml[84,3809+6]..src/StackSymbols.ml[84,3809+44])
                            Texp_apply
                            expression (src/StackSymbols.ml[84,3809+6]..src/StackSymbols.ml[84,3809+16])
                              Texp_ident "Stdlib!.Array.make"
                            [
                              <arg>
                                Nolabel
                                expression (src/StackSymbols.ml[84,3809+17]..src/StackSymbols.ml[84,3809+18])
                                  Texp_constant Const_int 0
                              <arg>
                                Nolabel
                                expression (src/StackSymbols.ml[84,3809+19]..src/StackSymbols.ml[84,3809+44])
                                  Texp_construct "Symbol.T"
                                  [
                                    expression (src/StackSymbols.ml[84,3809+29]..src/StackSymbols.ml[84,3809+43])
                                      Texp_ident "Dune__exe!.Grammar.Terminal.sharp"
                                  ]
                            ]
                      ]
                      expression (src/StackSymbols.ml[86,3861+4]..src/StackSymbols.ml[91,4098+5])
                        Texp_apply
                        expression (src/StackSymbols.ml[86,3861+4]..src/StackSymbols.ml[86,3861+17])
                          Texp_ident "Dune__exe!.Misc.tabulate"
                        [
                          <arg>
                            Nolabel
                            expression (src/StackSymbols.ml[86,3861+18]..src/StackSymbols.ml[86,3861+23])
                              Texp_ident "Dune__exe!.Lr0.n"
                          <arg>
                            Nolabel
                            expression (src/StackSymbols.ml[86,3861+24]..src/StackSymbols.ml[91,4098+5])
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/StackSymbols.ml[86,3861+29]..src/StackSymbols.ml[86,3861+33])
                                    Tpat_var "node/740"
                                  expression (src/StackSymbols.ml[87,3898+6]..src/StackSymbols.ml[90,4067+30])
                                    Texp_apply
                                    expression (src/StackSymbols.ml[87,3898+6]..src/StackSymbols.ml[87,3898+19])
                                      Texp_ident "Dune__exe!.Item.Set.fold"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/StackSymbols.ml[87,3898+20]..src/StackSymbols.ml[90,4067+7])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/StackSymbols.ml[87,3898+25]..src/StackSymbols.ml[87,3898+29])
                                                Tpat_var "item/790"
                                              expression (src/StackSymbols.ml[87,3898+30]..src/StackSymbols.ml[89,3997+69]) ghost
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (src/StackSymbols.ml[87,3898+30]..src/StackSymbols.ml[87,3898+34])
                                                      Tpat_var "accu/791"
                                                    expression (src/StackSymbols.ml[88,3936+8]..src/StackSymbols.ml[89,3997+69])
                                                      Texp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (src/StackSymbols.ml[88,3936+12]..src/StackSymbols.ml[88,3936+41])
                                                            Tpat_tuple
                                                            [
                                                              pattern (src/StackSymbols.ml[88,3936+12]..src/StackSymbols.ml[88,3936+17])
                                                                Tpat_var "_prod/792"
                                                              pattern (src/StackSymbols.ml[88,3936+19]..src/StackSymbols.ml[88,3936+22])
                                                                Tpat_var "_nt/793"
                                                              pattern (src/StackSymbols.ml[88,3936+24]..src/StackSymbols.ml[88,3936+27])
                                                                Tpat_var "rhs/794"
                                                              pattern (src/StackSymbols.ml[88,3936+29]..src/StackSymbols.ml[88,3936+32])
                                                                Tpat_var "pos/795"
                                                              pattern (src/StackSymbols.ml[88,3936+34]..src/StackSymbols.ml[88,3936+41])
                                                                Tpat_var "_length/796"
                                                            ]
                                                          expression (src/StackSymbols.ml[88,3936+44]..src/StackSymbols.ml[88,3936+57])
                                                            Texp_apply
                                                            expression (src/StackSymbols.ml[88,3936+44]..src/StackSymbols.ml[88,3936+52])
                                                              Texp_ident "Dune__exe!.Item.def"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/StackSymbols.ml[88,3936+53]..src/StackSymbols.ml[88,3936+57])
                                                                  Texp_ident "item/790"
                                                            ]
                                                      ]
                                                      expression (src/StackSymbols.ml[89,3997+8]..src/StackSymbols.ml[89,3997+69])
                                                        Texp_ifthenelse
                                                        expression (src/StackSymbols.ml[89,3997+11]..src/StackSymbols.ml[89,3997+34])
                                                          Texp_apply
                                                          expression (src/StackSymbols.ml[89,3997+15]..src/StackSymbols.ml[89,3997+16])
                                                            Texp_ident "Stdlib!.>"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/StackSymbols.ml[89,3997+11]..src/StackSymbols.ml[89,3997+14])
                                                                Texp_ident "pos/795"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/StackSymbols.ml[89,3997+17]..src/StackSymbols.ml[89,3997+34])
                                                                Texp_apply
                                                                expression (src/StackSymbols.ml[89,3997+17]..src/StackSymbols.ml[89,3997+29])
                                                                  Texp_ident "Stdlib!.Array.length"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/StackSymbols.ml[89,3997+30]..src/StackSymbols.ml[89,3997+34])
                                                                      Texp_ident "accu/791"
                                                                ]
                                                          ]
                                                        expression (src/StackSymbols.ml[89,3997+40]..src/StackSymbols.ml[89,3997+59])
                                                          Texp_apply
                                                          expression (src/StackSymbols.ml[89,3997+40]..src/StackSymbols.ml[89,3997+49])
                                                            Texp_ident "Stdlib!.Array.sub"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/StackSymbols.ml[89,3997+50]..src/StackSymbols.ml[89,3997+53])
                                                                Texp_ident "rhs/794"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/StackSymbols.ml[89,3997+54]..src/StackSymbols.ml[89,3997+55])
                                                                Texp_constant Const_int 0
                                                            <arg>
                                                              Nolabel
                                                              expression (src/StackSymbols.ml[89,3997+56]..src/StackSymbols.ml[89,3997+59])
                                                                Texp_ident "pos/795"
                                                          ]
                                                        Some
                                                          expression (src/StackSymbols.ml[89,3997+65]..src/StackSymbols.ml[89,3997+69])
                                                            Texp_ident "accu/791"
                                                ]
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/StackSymbols.ml[90,4067+8]..src/StackSymbols.ml[90,4067+24])
                                          Texp_apply
                                          expression (src/StackSymbols.ml[90,4067+9]..src/StackSymbols.ml[90,4067+18])
                                            Texp_ident "Dune__exe!.Lr0.items"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/StackSymbols.ml[90,4067+19]..src/StackSymbols.ml[90,4067+23])
                                                Texp_ident "node/740"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/StackSymbols.ml[90,4067+25]..src/StackSymbols.ml[90,4067+30])
                                          Texp_ident "dummy/596"
                                    ]
                              ]
                        ]
                ]
              structure_item (src/StackSymbols.ml[95,4148+2]..src/StackSymbols.ml[96,4199+45])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/StackSymbols.ml[95,4148+6]..src/StackSymbols.ml[95,4148+19])
                      Tpat_var "stack_symbols/817"
                    expression (src/StackSymbols.ml[95,4148+20]..src/StackSymbols.ml[96,4199+45]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/StackSymbols.ml[95,4148+21]..src/StackSymbols.ml[95,4148+25])
                            extra
                              Tpat_extra_constraint
                              core_type (src/StackSymbols.ml[95,4148+28]..src/StackSymbols.ml[95,4148+36])
                                Ttyp_constr "Dune__exe!.Lr1.node"
                                []
                            Tpat_alias "node/818"
                            pattern (src/StackSymbols.ml[95,4148+21]..src/StackSymbols.ml[95,4148+25])
                              Tpat_any
                          expression (src/StackSymbols.ml[96,4199+4]..src/StackSymbols.ml[96,4199+45])
                            extra
                              Texp_constraint
                              core_type (src/StackSymbols.ml[95,4148+40]..src/StackSymbols.ml[95,4148+48])
                                Ttyp_constr "property/556"
                                []
                            Texp_apply
                            expression (src/StackSymbols.ml[96,4199+4]..src/StackSymbols.ml[96,4199+17])
                              Texp_ident "stack_symbols/595"
                            [
                              <arg>
                                Nolabel
                                expression (src/StackSymbols.ml[96,4199+18]..src/StackSymbols.ml[96,4199+45])
                                  Texp_apply
                                  expression (src/StackSymbols.ml[96,4199+19]..src/StackSymbols.ml[96,4199+27])
                                    Texp_ident "Dune__exe!.Lr0.core"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/StackSymbols.ml[96,4199+28]..src/StackSymbols.ml[96,4199+44])
                                        Texp_apply
                                        expression (src/StackSymbols.ml[96,4199+29]..src/StackSymbols.ml[96,4199+38])
                                          Texp_ident "Dune__exe!.Lr1.state"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/StackSymbols.ml[96,4199+39]..src/StackSymbols.ml[96,4199+43])
                                              Texp_ident "node/818"
                                        ]
                                  ]
                            ]
                      ]
                ]
              structure_item (src/StackSymbols.ml[98,4246+2]..src/StackSymbols.ml[99,4291+37])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/StackSymbols.ml[98,4246+6]..src/StackSymbols.ml[98,4246+18])
                      Tpat_var "stack_height/898"
                    expression (src/StackSymbols.ml[98,4246+19]..src/StackSymbols.ml[99,4291+37]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/StackSymbols.ml[98,4246+20]..src/StackSymbols.ml[98,4246+24])
                            extra
                              Tpat_extra_constraint
                              core_type (src/StackSymbols.ml[98,4246+27]..src/StackSymbols.ml[98,4246+35])
                                Ttyp_constr "Dune__exe!.Lr1.node"
                                []
                            Tpat_alias "node/900"
                            pattern (src/StackSymbols.ml[98,4246+20]..src/StackSymbols.ml[98,4246+24])
                              Tpat_any
                          expression (src/StackSymbols.ml[99,4291+4]..src/StackSymbols.ml[99,4291+37])
                            extra
                              Texp_constraint
                              core_type (src/StackSymbols.ml[98,4246+39]..src/StackSymbols.ml[98,4246+42])
                                Ttyp_constr "int/1!"
                                []
                            Texp_apply
                            expression (src/StackSymbols.ml[99,4291+4]..src/StackSymbols.ml[99,4291+16])
                              Texp_ident "Stdlib!.Array.length"
                            [
                              <arg>
                                Nolabel
                                expression (src/StackSymbols.ml[99,4291+17]..src/StackSymbols.ml[99,4291+37])
                                  Texp_apply
                                  expression (src/StackSymbols.ml[99,4291+18]..src/StackSymbols.ml[99,4291+31])
                                    Texp_ident "stack_symbols/817"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/StackSymbols.ml[99,4291+32]..src/StackSymbols.ml[99,4291+36])
                                        Texp_ident "node/900"
                                  ]
                            ]
                      ]
                ]
              structure_item (src/StackSymbols.ml[103,4389+2]..src/StackSymbols.ml[104,4416+18])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/StackSymbols.ml[103,4389+6]..src/StackSymbols.ml[103,4389+24])
                      Tpat_var "production_symbols/901"
                    expression (src/StackSymbols.ml[104,4416+4]..src/StackSymbols.ml[104,4416+18])
                      Texp_ident "Dune__exe!.Grammar.Production.rhs"
                ]
              structure_item (src/StackSymbols.ml[106,4436+2]..src/StackSymbols.ml[107,4467+42])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/StackSymbols.ml[106,4436+6]..src/StackSymbols.ml[106,4436+23])
                      Tpat_var "production_height/902"
                    expression (src/StackSymbols.ml[106,4436+24]..src/StackSymbols.ml[107,4467+42]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/StackSymbols.ml[106,4436+24]..src/StackSymbols.ml[106,4436+28])
                            Tpat_var "prod/904"
                          expression (src/StackSymbols.ml[107,4467+4]..src/StackSymbols.ml[107,4467+42])
                            Texp_apply
                            expression (src/StackSymbols.ml[107,4467+4]..src/StackSymbols.ml[107,4467+16])
                              Texp_ident "Stdlib!.Array.length"
                            [
                              <arg>
                                Nolabel
                                expression (src/StackSymbols.ml[107,4467+17]..src/StackSymbols.ml[107,4467+42])
                                  Texp_apply
                                  expression (src/StackSymbols.ml[107,4467+18]..src/StackSymbols.ml[107,4467+36])
                                    Texp_ident "production_symbols/901"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/StackSymbols.ml[107,4467+37]..src/StackSymbols.ml[107,4467+41])
                                        Texp_ident "prod/904"
                                  ]
                            ]
                      ]
                ]
              structure_item (src/StackSymbols.ml[111,4564+2]..src/StackSymbols.ml[112,4588+21])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/StackSymbols.ml[111,4564+6]..src/StackSymbols.ml[111,4564+18])
                      Tpat_var "goto_symbols/939"
                    expression (src/StackSymbols.ml[111,4564+19]..src/StackSymbols.ml[112,4588+21]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/StackSymbols.ml[111,4564+19]..src/StackSymbols.ml[111,4564+21])
                            Tpat_var "nt/941"
                          expression (src/StackSymbols.ml[112,4588+4]..src/StackSymbols.ml[112,4588+21])
                            Texp_array
                            [
                              expression (src/StackSymbols.ml[112,4588+7]..src/StackSymbols.ml[112,4588+18])
                                Texp_construct "Symbol.N"
                                [
                                  expression (src/StackSymbols.ml[112,4588+16]..src/StackSymbols.ml[112,4588+18])
                                    Texp_ident "nt/941"
                                ]
                            ]
                      ]
                ]
              structure_item (src/StackSymbols.ml[114,4611+2]..src/StackSymbols.ml[115,4634+34])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/StackSymbols.ml[114,4611+6]..src/StackSymbols.ml[114,4611+17])
                      Tpat_var "goto_height/962"
                    expression (src/StackSymbols.ml[114,4611+18]..src/StackSymbols.ml[115,4634+34]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/StackSymbols.ml[114,4611+18]..src/StackSymbols.ml[114,4611+20])
                            Tpat_var "nt/964"
                          expression (src/StackSymbols.ml[115,4634+4]..src/StackSymbols.ml[115,4634+34])
                            Texp_apply
                            expression (src/StackSymbols.ml[115,4634+4]..src/StackSymbols.ml[115,4634+16])
                              Texp_ident "Stdlib!.Array.length"
                            [
                              <arg>
                                Nolabel
                                expression (src/StackSymbols.ml[115,4634+17]..src/StackSymbols.ml[115,4634+34])
                                  Texp_apply
                                  expression (src/StackSymbols.ml[115,4634+18]..src/StackSymbols.ml[115,4634+30])
                                    Texp_ident "goto_symbols/939"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/StackSymbols.ml[115,4634+31]..src/StackSymbols.ml[115,4634+33])
                                        Texp_ident "nt/964"
                                  ]
                            ]
                      ]
                ]
            ]
  structure_item (src/StackSymbols.ml[126,5054+0]..src/StackSymbols.ml[267,9374+3])
    Tstr_module
    Long/1524
      module_expr (src/StackSymbols.ml[126,5054+12]..src/StackSymbols.ml[267,9374+3])
        Tmod_functor ()
        module_expr (src/StackSymbols.ml[126,5054+17]..src/StackSymbols.ml[267,9374+3])
          module_expr (src/StackSymbols.ml[126,5054+17]..src/StackSymbols.ml[267,9374+3])
            Tmod_structure
            [
              structure_item (src/StackSymbols.ml[130,5108+2]..src/StackSymbols.ml[156,5851+5])
                Tstr_module
                SymbolVector/1048
                  module_expr (src/StackSymbols.ml[130,5108+24]..src/StackSymbols.ml[156,5851+5])
                    Tmod_structure
                    [
                      structure_item (src/StackSymbols.ml[132,5140+4]..src/StackSymbols.ml[133,5160+20])
                        Tstr_type Rec
                        [
                          type_declaration property/966 (src/StackSymbols.ml[132,5140+4]..src/StackSymbols.ml[133,5160+20])
                            ptype_params =
                              []
                            ptype_cstrs =
                              []
                            ptype_kind =
                              Ttype_abstract
                            ptype_private = Public
                            ptype_manifest =
                              Some
                                core_type (src/StackSymbols.ml[133,5160+6]..src/StackSymbols.ml[133,5160+20])
                                  Ttyp_constr "array/8!"
                                  [
                                    core_type (src/StackSymbols.ml[133,5160+6]..src/StackSymbols.ml[133,5160+14])
                                      Ttyp_constr "Dune__exe!.Grammar.Symbol.t"
                                      []
                                  ]
                        ]
                      structure_item (src/StackSymbols.ml[135,5182+4]..src/StackSymbols.ml[136,5204+26])
                        Tstr_value Nonrec
                        [
                          <def>
                            pattern (src/StackSymbols.ml[135,5182+8]..src/StackSymbols.ml[135,5182+19])
                              Tpat_tuple
                              [
                                pattern (src/StackSymbols.ml[135,5182+8]..src/StackSymbols.ml[135,5182+13])
                                  Tpat_var "empty/967"
                                pattern (src/StackSymbols.ml[135,5182+15]..src/StackSymbols.ml[135,5182+19])
                                  Tpat_var "push/968"
                              ]
                            expression (src/StackSymbols.ml[136,5204+6]..src/StackSymbols.ml[136,5204+26])
                              Texp_open Fresh
                              module_expr (src/StackSymbols.ml[136,5204+6]..src/StackSymbols.ml[136,5204+12])
                                Tmod_ident "Dune__exe!.MArray"
                              expression (src/StackSymbols.ml[136,5204+14]..src/StackSymbols.ml[136,5204+25])
                                Texp_tuple
                                [
                                  expression (src/StackSymbols.ml[136,5204+14]..src/StackSymbols.ml[136,5204+19])
                                    Texp_ident "Dune__exe!.MArray.empty"
                                  expression (src/StackSymbols.ml[136,5204+21]..src/StackSymbols.ml[136,5204+25])
                                    Texp_ident "Dune__exe!.MArray.push"
                                ]
                        ]
                      structure_item (src/StackSymbols.ml[142,5447+4]..src/StackSymbols.ml[145,5573+36])
                        Tstr_value Rec
                        [
                          <def>
                            pattern (src/StackSymbols.ml[142,5447+12]..src/StackSymbols.ml[142,5447+15])
                              Tpat_var "lcs/1033"
                            expression (src/StackSymbols.ml[142,5447+16]..src/StackSymbols.ml[145,5573+36]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/StackSymbols.ml[142,5447+16]..src/StackSymbols.ml[142,5447+18])
                                    Tpat_var "v1/1034"
                                  expression (src/StackSymbols.ml[142,5447+19]..src/StackSymbols.ml[145,5573+36]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/StackSymbols.ml[142,5447+19]..src/StackSymbols.ml[142,5447+21])
                                          Tpat_var "v2/1035"
                                        expression (src/StackSymbols.ml[142,5447+22]..src/StackSymbols.ml[145,5573+36]) ghost
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/StackSymbols.ml[142,5447+22]..src/StackSymbols.ml[142,5447+24])
                                                Tpat_var "n1/1036"
                                              expression (src/StackSymbols.ml[142,5447+25]..src/StackSymbols.ml[145,5573+36]) ghost
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (src/StackSymbols.ml[142,5447+25]..src/StackSymbols.ml[142,5447+27])
                                                      Tpat_var "n2/1037"
                                                    expression (src/StackSymbols.ml[142,5447+28]..src/StackSymbols.ml[145,5573+36]) ghost
                                                      Texp_function
                                                      Nolabel
                                                      [
                                                        <case>
                                                          pattern (src/StackSymbols.ml[142,5447+28]..src/StackSymbols.ml[142,5447+29])
                                                            Tpat_var "n/1038"
                                                          expression (src/StackSymbols.ml[142,5447+30]..src/StackSymbols.ml[145,5573+36]) ghost
                                                            Texp_function
                                                            Nolabel
                                                            [
                                                              <case>
                                                                pattern (src/StackSymbols.ml[142,5447+30]..src/StackSymbols.ml[142,5447+31])
                                                                  Tpat_var "k/1039"
                                                                expression (src/StackSymbols.ml[144,5513+6]..src/StackSymbols.ml[145,5573+36])
                                                                  Texp_ifthenelse
                                                                  expression (src/StackSymbols.ml[144,5513+9]..src/StackSymbols.ml[144,5513+52])
                                                                    Texp_apply
                                                                    expression (src/StackSymbols.ml[144,5513+15]..src/StackSymbols.ml[144,5513+17])
                                                                      Texp_ident "Stdlib!.||"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/StackSymbols.ml[144,5513+9]..src/StackSymbols.ml[144,5513+14])
                                                                          Texp_apply
                                                                          expression (src/StackSymbols.ml[144,5513+11]..src/StackSymbols.ml[144,5513+12])
                                                                            Texp_ident "Stdlib!.="
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/StackSymbols.ml[144,5513+9]..src/StackSymbols.ml[144,5513+10])
                                                                                Texp_ident "k/1039"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/StackSymbols.ml[144,5513+13]..src/StackSymbols.ml[144,5513+14])
                                                                                Texp_ident "n/1038"
                                                                          ]
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/StackSymbols.ml[144,5513+18]..src/StackSymbols.ml[144,5513+52])
                                                                          Texp_apply
                                                                          expression (src/StackSymbols.ml[144,5513+34]..src/StackSymbols.ml[144,5513+36])
                                                                            Texp_ident "Stdlib!.<>"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/StackSymbols.ml[144,5513+18]..src/StackSymbols.ml[144,5513+33])
                                                                                Texp_apply
                                                                                expression (src/StackSymbols.ml[144,5513+18]..src/StackSymbols.ml[144,5513+33]) ghost
                                                                                  Texp_ident "Stdlib!.Array.get"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/StackSymbols.ml[144,5513+18]..src/StackSymbols.ml[144,5513+20])
                                                                                      Texp_ident "v1/1034"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/StackSymbols.ml[144,5513+22]..src/StackSymbols.ml[144,5513+32])
                                                                                      Texp_apply
                                                                                      expression (src/StackSymbols.ml[144,5513+29]..src/StackSymbols.ml[144,5513+30])
                                                                                        Texp_ident "Stdlib!.-"
                                                                                      [
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/StackSymbols.ml[144,5513+22]..src/StackSymbols.ml[144,5513+28])
                                                                                            Texp_apply
                                                                                            expression (src/StackSymbols.ml[144,5513+25]..src/StackSymbols.ml[144,5513+26])
                                                                                              Texp_ident "Stdlib!.-"
                                                                                            [
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/StackSymbols.ml[144,5513+22]..src/StackSymbols.ml[144,5513+24])
                                                                                                  Texp_ident "n1/1036"
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/StackSymbols.ml[144,5513+27]..src/StackSymbols.ml[144,5513+28])
                                                                                                  Texp_constant Const_int 1
                                                                                            ]
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/StackSymbols.ml[144,5513+31]..src/StackSymbols.ml[144,5513+32])
                                                                                            Texp_ident "k/1039"
                                                                                      ]
                                                                                ]
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/StackSymbols.ml[144,5513+37]..src/StackSymbols.ml[144,5513+52])
                                                                                Texp_apply
                                                                                expression (src/StackSymbols.ml[144,5513+37]..src/StackSymbols.ml[144,5513+52]) ghost
                                                                                  Texp_ident "Stdlib!.Array.get"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/StackSymbols.ml[144,5513+37]..src/StackSymbols.ml[144,5513+39])
                                                                                      Texp_ident "v2/1035"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/StackSymbols.ml[144,5513+41]..src/StackSymbols.ml[144,5513+51])
                                                                                      Texp_apply
                                                                                      expression (src/StackSymbols.ml[144,5513+48]..src/StackSymbols.ml[144,5513+49])
                                                                                        Texp_ident "Stdlib!.-"
                                                                                      [
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/StackSymbols.ml[144,5513+41]..src/StackSymbols.ml[144,5513+47])
                                                                                            Texp_apply
                                                                                            expression (src/StackSymbols.ml[144,5513+44]..src/StackSymbols.ml[144,5513+45])
                                                                                              Texp_ident "Stdlib!.-"
                                                                                            [
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/StackSymbols.ml[144,5513+41]..src/StackSymbols.ml[144,5513+43])
                                                                                                  Texp_ident "n2/1037"
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/StackSymbols.ml[144,5513+46]..src/StackSymbols.ml[144,5513+47])
                                                                                                  Texp_constant Const_int 1
                                                                                            ]
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/StackSymbols.ml[144,5513+50]..src/StackSymbols.ml[144,5513+51])
                                                                                            Texp_ident "k/1039"
                                                                                      ]
                                                                                ]
                                                                          ]
                                                                    ]
                                                                  expression (src/StackSymbols.ml[144,5513+58]..src/StackSymbols.ml[144,5513+59])
                                                                    Texp_ident "k/1039"
                                                                  Some
                                                                    expression (src/StackSymbols.ml[145,5573+11]..src/StackSymbols.ml[145,5573+36])
                                                                      Texp_apply
                                                                      expression (src/StackSymbols.ml[145,5573+11]..src/StackSymbols.ml[145,5573+14])
                                                                        Texp_ident "lcs/1033"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/StackSymbols.ml[145,5573+15]..src/StackSymbols.ml[145,5573+17])
                                                                            Texp_ident "v1/1034"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/StackSymbols.ml[145,5573+18]..src/StackSymbols.ml[145,5573+20])
                                                                            Texp_ident "v2/1035"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/StackSymbols.ml[145,5573+21]..src/StackSymbols.ml[145,5573+23])
                                                                            Texp_ident "n1/1036"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/StackSymbols.ml[145,5573+24]..src/StackSymbols.ml[145,5573+26])
                                                                            Texp_ident "n2/1037"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/StackSymbols.ml[145,5573+27]..src/StackSymbols.ml[145,5573+28])
                                                                            Texp_ident "n/1038"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/StackSymbols.ml[145,5573+29]..src/StackSymbols.ml[145,5573+36])
                                                                            Texp_apply
                                                                            expression (src/StackSymbols.ml[145,5573+32]..src/StackSymbols.ml[145,5573+33])
                                                                              Texp_ident "Stdlib!.+"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/StackSymbols.ml[145,5573+30]..src/StackSymbols.ml[145,5573+31])
                                                                                  Texp_ident "k/1039"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/StackSymbols.ml[145,5573+34]..src/StackSymbols.ml[145,5573+35])
                                                                                  Texp_constant Const_int 1
                                                                            ]
                                                                      ]
                                                            ]
                                                      ]
                                                ]
                                          ]
                                    ]
                              ]
                        ]
                      structure_item (src/StackSymbols.ml[147,5611+4]..src/StackSymbols.ml[154,5818+31])
                        Tstr_value Nonrec
                        [
                          <def>
                            pattern (src/StackSymbols.ml[147,5611+8]..src/StackSymbols.ml[147,5611+16])
                              Tpat_var "leq_join/1040"
                            expression (src/StackSymbols.ml[147,5611+17]..src/StackSymbols.ml[154,5818+31]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/StackSymbols.ml[147,5611+17]..src/StackSymbols.ml[147,5611+19])
                                    Tpat_var "v1/1042"
                                  expression (src/StackSymbols.ml[147,5611+20]..src/StackSymbols.ml[154,5818+31]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/StackSymbols.ml[147,5611+20]..src/StackSymbols.ml[147,5611+22])
                                          Tpat_var "v2/1043"
                                        expression (src/StackSymbols.ml[148,5636+6]..src/StackSymbols.ml[154,5818+31])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/StackSymbols.ml[148,5636+10]..src/StackSymbols.ml[148,5636+12])
                                                Tpat_var "n1/1044"
                                              expression (src/StackSymbols.ml[148,5636+15]..src/StackSymbols.ml[148,5636+30])
                                                Texp_apply
                                                expression (src/StackSymbols.ml[148,5636+15]..src/StackSymbols.ml[148,5636+27])
                                                  Texp_ident "Stdlib!.Array.length"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/StackSymbols.ml[148,5636+28]..src/StackSymbols.ml[148,5636+30])
                                                      Texp_ident "v1/1042"
                                                ]
                                            <def>
                                              pattern (src/StackSymbols.ml[149,5667+10]..src/StackSymbols.ml[149,5667+12])
                                                Tpat_var "n2/1045"
                                              expression (src/StackSymbols.ml[149,5667+15]..src/StackSymbols.ml[149,5667+30])
                                                Texp_apply
                                                expression (src/StackSymbols.ml[149,5667+15]..src/StackSymbols.ml[149,5667+27])
                                                  Texp_ident "Stdlib!.Array.length"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/StackSymbols.ml[149,5667+28]..src/StackSymbols.ml[149,5667+30])
                                                      Texp_ident "v2/1043"
                                                ]
                                          ]
                                          expression (src/StackSymbols.ml[150,5701+6]..src/StackSymbols.ml[154,5818+31])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/StackSymbols.ml[150,5701+10]..src/StackSymbols.ml[150,5701+11])
                                                  Tpat_var "n/1046"
                                                expression (src/StackSymbols.ml[150,5701+14]..src/StackSymbols.ml[150,5701+23])
                                                  Texp_apply
                                                  expression (src/StackSymbols.ml[150,5701+14]..src/StackSymbols.ml[150,5701+17])
                                                    Texp_ident "Stdlib!.min"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/StackSymbols.ml[150,5701+18]..src/StackSymbols.ml[150,5701+20])
                                                        Texp_ident "n1/1044"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/StackSymbols.ml[150,5701+21]..src/StackSymbols.ml[150,5701+23])
                                                        Texp_ident "n2/1045"
                                                  ]
                                            ]
                                            expression (src/StackSymbols.ml[151,5728+6]..src/StackSymbols.ml[154,5818+31])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/StackSymbols.ml[151,5728+10]..src/StackSymbols.ml[151,5728+11])
                                                    Tpat_var "k/1047"
                                                  expression (src/StackSymbols.ml[151,5728+14]..src/StackSymbols.ml[151,5728+33])
                                                    Texp_apply
                                                    expression (src/StackSymbols.ml[151,5728+14]..src/StackSymbols.ml[151,5728+17])
                                                      Texp_ident "lcs/1033"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/StackSymbols.ml[151,5728+18]..src/StackSymbols.ml[151,5728+20])
                                                          Texp_ident "v1/1042"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/StackSymbols.ml[151,5728+21]..src/StackSymbols.ml[151,5728+23])
                                                          Texp_ident "v2/1043"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/StackSymbols.ml[151,5728+24]..src/StackSymbols.ml[151,5728+26])
                                                          Texp_ident "n1/1044"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/StackSymbols.ml[151,5728+27]..src/StackSymbols.ml[151,5728+29])
                                                          Texp_ident "n2/1045"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/StackSymbols.ml[151,5728+30]..src/StackSymbols.ml[151,5728+31])
                                                          Texp_ident "n/1046"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/StackSymbols.ml[151,5728+32]..src/StackSymbols.ml[151,5728+33])
                                                          Texp_constant Const_int 0
                                                    ]
                                              ]
                                              expression (src/StackSymbols.ml[152,5765+6]..src/StackSymbols.ml[154,5818+31])
                                                Texp_ifthenelse
                                                expression (src/StackSymbols.ml[152,5765+9]..src/StackSymbols.ml[152,5765+15])
                                                  Texp_apply
                                                  expression (src/StackSymbols.ml[152,5765+11]..src/StackSymbols.ml[152,5765+12])
                                                    Texp_ident "Stdlib!.="
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/StackSymbols.ml[152,5765+9]..src/StackSymbols.ml[152,5765+10])
                                                        Texp_ident "k/1047"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/StackSymbols.ml[152,5765+13]..src/StackSymbols.ml[152,5765+15])
                                                        Texp_ident "n2/1045"
                                                  ]
                                                expression (src/StackSymbols.ml[152,5765+21]..src/StackSymbols.ml[152,5765+23])
                                                  Texp_ident "v2/1043"
                                                Some
                                                  expression (src/StackSymbols.ml[153,5789+11]..src/StackSymbols.ml[154,5818+31])
                                                    Texp_ifthenelse
                                                    expression (src/StackSymbols.ml[153,5789+14]..src/StackSymbols.ml[153,5789+20])
                                                      Texp_apply
                                                      expression (src/StackSymbols.ml[153,5789+16]..src/StackSymbols.ml[153,5789+17])
                                                        Texp_ident "Stdlib!.="
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/StackSymbols.ml[153,5789+14]..src/StackSymbols.ml[153,5789+15])
                                                            Texp_ident "k/1047"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/StackSymbols.ml[153,5789+18]..src/StackSymbols.ml[153,5789+20])
                                                            Texp_ident "n1/1044"
                                                      ]
                                                    expression (src/StackSymbols.ml[153,5789+26]..src/StackSymbols.ml[153,5789+28])
                                                      Texp_ident "v1/1042"
                                                    Some
                                                      expression (src/StackSymbols.ml[154,5818+11]..src/StackSymbols.ml[154,5818+31])
                                                        Texp_apply
                                                        expression (src/StackSymbols.ml[154,5818+11]..src/StackSymbols.ml[154,5818+26])
                                                          Texp_ident "Dune__exe!.MArray.truncate"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/StackSymbols.ml[154,5818+27]..src/StackSymbols.ml[154,5818+28])
                                                              Texp_ident "k/1047"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/StackSymbols.ml[154,5818+29]..src/StackSymbols.ml[154,5818+31])
                                                              Texp_ident "v1/1042"
                                                        ]
                                    ]
                              ]
                        ]
                    ]
              structure_item (src/StackSymbols.ml[158,5858+2]..src/StackSymbols.ml[158,5858+22])
                Tstr_include                module_expr (src/StackSymbols.ml[158,5858+10]..src/StackSymbols.ml[158,5858+22])
                  Tmod_ident "SymbolVector/1048"
              structure_item (src/StackSymbols.ml[164,5999+2]..src/StackSymbols.ml[186,6712+5])
                Tstr_module
                G/1232
                  module_expr (src/StackSymbols.ml[164,5999+13]..src/StackSymbols.ml[186,6712+5])
                    Tmod_structure
                    [
                      structure_item (src/StackSymbols.ml[166,6020+4]..src/StackSymbols.ml[166,6020+28])
                        Tstr_type Rec
                        [
                          type_declaration variable/1054 (src/StackSymbols.ml[166,6020+4]..src/StackSymbols.ml[166,6020+28])
                            ptype_params =
                              []
                            ptype_cstrs =
                              []
                            ptype_kind =
                              Ttype_abstract
                            ptype_private = Public
                            ptype_manifest =
                              Some
                                core_type (src/StackSymbols.ml[166,6020+20]..src/StackSymbols.ml[166,6020+28])
                                  Ttyp_constr "Dune__exe!.Lr0.node"
                                  []
                        ]
                      structure_item (src/StackSymbols.ml[168,6050+4]..src/StackSymbols.ml[168,6050+41])
                        Tstr_type Rec
                        [
                          type_declaration property/1055 (src/StackSymbols.ml[168,6050+4]..src/StackSymbols.ml[168,6050+41])
                            ptype_params =
                              []
                            ptype_cstrs =
                              []
                            ptype_kind =
                              Ttype_abstract
                            ptype_private = Public
                            ptype_manifest =
                              Some
                                core_type (src/StackSymbols.ml[168,6050+20]..src/StackSymbols.ml[168,6050+41])
                                  Ttyp_constr "SymbolVector/1048.property"
                                  []
                        ]
                      structure_item (src/StackSymbols.ml[172,6162+4]..src/StackSymbols.ml[175,6283+7])
                        Tstr_value Nonrec
                        [
                          <def>
                            pattern (src/StackSymbols.ml[172,6162+8]..src/StackSymbols.ml[172,6162+20])
                              Tpat_var "foreach_root/1056"
                            expression (src/StackSymbols.ml[172,6162+21]..src/StackSymbols.ml[175,6283+7]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/StackSymbols.ml[172,6162+21]..src/StackSymbols.ml[172,6162+31])
                                    Tpat_var "contribute/1058"
                                  expression (src/StackSymbols.ml[173,6196+6]..src/StackSymbols.ml[175,6283+7])
                                    Texp_apply
                                    expression (src/StackSymbols.ml[173,6196+19]..src/StackSymbols.ml[175,6283+7])
                                      Texp_apply
                                      expression (src/StackSymbols.ml[173,6196+19]..src/StackSymbols.ml[173,6196+37])
                                        Texp_ident "Dune__exe!.Grammar.ProductionMap.iter"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/StackSymbols.ml[173,6196+38]..src/StackSymbols.ml[175,6283+7])
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (src/StackSymbols.ml[173,6196+43]..src/StackSymbols.ml[173,6196+48])
                                                  Tpat_var "_prod/1093"
                                                expression (src/StackSymbols.ml[173,6196+49]..src/StackSymbols.ml[174,6253+29]) ghost
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (src/StackSymbols.ml[173,6196+49]..src/StackSymbols.ml[173,6196+53])
                                                        Tpat_var "root/1094"
                                                      expression (src/StackSymbols.ml[174,6253+8]..src/StackSymbols.ml[174,6253+29])
                                                        Texp_apply
                                                        expression (src/StackSymbols.ml[174,6253+8]..src/StackSymbols.ml[174,6253+18])
                                                          Texp_ident "contribute/1058"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/StackSymbols.ml[174,6253+19]..src/StackSymbols.ml[174,6253+23])
                                                              Texp_ident "root/1094"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/StackSymbols.ml[174,6253+24]..src/StackSymbols.ml[174,6253+29])
                                                              Texp_ident "empty/1050"
                                                        ]
                                                  ]
                                            ]
                                      ]
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/StackSymbols.ml[173,6196+6]..src/StackSymbols.ml[173,6196+15])
                                          Texp_ident "Dune__exe!.Lr0.entry"
                                    ]
                              ]
                        ]
                      structure_item (src/StackSymbols.ml[179,6374+4]..src/StackSymbols.ml[184,6703+7])
                        Tstr_value Nonrec
                        [
                          <def>
                            pattern (src/StackSymbols.ml[179,6374+8]..src/StackSymbols.ml[179,6374+25])
                              Tpat_var "foreach_successor/1129"
                            expression (src/StackSymbols.ml[179,6374+26]..src/StackSymbols.ml[184,6703+7]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/StackSymbols.ml[179,6374+26]..src/StackSymbols.ml[179,6374+32])
                                    Tpat_var "source/1131"
                                  expression (src/StackSymbols.ml[179,6374+33]..src/StackSymbols.ml[184,6703+7]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/StackSymbols.ml[179,6374+33]..src/StackSymbols.ml[179,6374+38])
                                          Tpat_var "stack/1132"
                                        expression (src/StackSymbols.ml[179,6374+39]..src/StackSymbols.ml[184,6703+7]) ghost
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/StackSymbols.ml[179,6374+39]..src/StackSymbols.ml[179,6374+49])
                                                Tpat_var "contribute/1133"
                                              expression (src/StackSymbols.ml[180,6426+6]..src/StackSymbols.ml[184,6703+7])
                                                Texp_apply
                                                expression (src/StackSymbols.ml[180,6426+35]..src/StackSymbols.ml[184,6703+7])
                                                  Texp_apply
                                                  expression (src/StackSymbols.ml[180,6426+35]..src/StackSymbols.ml[180,6426+49])
                                                    Texp_ident "Dune__exe!.Grammar.SymbolMap.iter"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/StackSymbols.ml[180,6426+50]..src/StackSymbols.ml[184,6703+7])
                                                        Texp_function
                                                        Nolabel
                                                        [
                                                          <case>
                                                            pattern (src/StackSymbols.ml[180,6426+55]..src/StackSymbols.ml[180,6426+61])
                                                              Tpat_var "symbol/1182"
                                                            expression (src/StackSymbols.ml[180,6426+62]..src/StackSymbols.ml[183,6657+45]) ghost
                                                              Texp_function
                                                              Nolabel
                                                              [
                                                                <case>
                                                                  pattern (src/StackSymbols.ml[180,6426+62]..src/StackSymbols.ml[180,6426+68])
                                                                    Tpat_var "target/1183"
                                                                  expression (src/StackSymbols.ml[183,6657+8]..src/StackSymbols.ml[183,6657+45])
                                                                    Texp_apply
                                                                    expression (src/StackSymbols.ml[183,6657+8]..src/StackSymbols.ml[183,6657+18])
                                                                      Texp_ident "contribute/1133"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/StackSymbols.ml[183,6657+19]..src/StackSymbols.ml[183,6657+25])
                                                                          Texp_ident "target/1183"
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/StackSymbols.ml[183,6657+26]..src/StackSymbols.ml[183,6657+45])
                                                                          Texp_apply
                                                                          expression (src/StackSymbols.ml[183,6657+27]..src/StackSymbols.ml[183,6657+31])
                                                                            Texp_ident "push/1051"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/StackSymbols.ml[183,6657+32]..src/StackSymbols.ml[183,6657+37])
                                                                                Texp_ident "stack/1132"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/StackSymbols.ml[183,6657+38]..src/StackSymbols.ml[183,6657+44])
                                                                                Texp_ident "symbol/1182"
                                                                          ]
                                                                    ]
                                                              ]
                                                        ]
                                                  ]
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/StackSymbols.ml[180,6426+6]..src/StackSymbols.ml[180,6426+31])
                                                      Texp_apply
                                                      expression (src/StackSymbols.ml[180,6426+6]..src/StackSymbols.ml[180,6426+24])
                                                        Texp_ident "Dune__exe!.Lr0.outgoing_edges"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/StackSymbols.ml[180,6426+25]..src/StackSymbols.ml[180,6426+31])
                                                            Texp_ident "source/1131"
                                                      ]
                                                ]
                                          ]
                                    ]
                              ]
                        ]
                    ]
              structure_item (src/StackSymbols.ml[190,6759+2]..src/StackSymbols.ml[192,6890+14])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/StackSymbols.ml[190,6759+6]..src/StackSymbols.ml[190,6759+19])
                      extra
                        Tpat_extra_constraint
                        core_type (src/StackSymbols.ml[190,6759+22]..src/StackSymbols.ml[190,6759+49])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/StackSymbols.ml[190,6759+22]..src/StackSymbols.ml[190,6759+30])
                            Ttyp_constr "Dune__exe!.Lr0.node"
                            []
                          core_type (src/StackSymbols.ml[190,6759+34]..src/StackSymbols.ml[190,6759+49])
                            Ttyp_constr "option/10!"
                            [
                              core_type (src/StackSymbols.ml[190,6759+34]..src/StackSymbols.ml[190,6759+42])
                                Ttyp_constr "property/1049"
                                []
                            ]
                      Tpat_alias "stack_symbols/1233"
                      pattern (src/StackSymbols.ml[190,6759+6]..src/StackSymbols.ml[190,6759+19])
                        Tpat_any
                    expression (src/StackSymbols.ml[191,6811+4]..src/StackSymbols.ml[192,6890+14])
                      extra
                        Texp_constraint
                        core_type (src/StackSymbols.ml[190,6759+22]..src/StackSymbols.ml[190,6759+49])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/StackSymbols.ml[190,6759+22]..src/StackSymbols.ml[190,6759+30])
                            Ttyp_constr "Dune__exe!.Lr0.node"
                            []
                          core_type (src/StackSymbols.ml[190,6759+34]..src/StackSymbols.ml[190,6759+49])
                            Ttyp_constr "option/10!"
                            [
                              core_type (src/StackSymbols.ml[190,6759+34]..src/StackSymbols.ml[190,6759+42])
                                Ttyp_constr "property/1049"
                                []
                            ]
                      Texp_letmodule "F/1400"
                      module_expr (src/StackSymbols.ml[191,6811+19]..src/StackSymbols.ml[191,6811+75])
                        Tmod_apply
                        module_expr (src/StackSymbols.ml[191,6811+19]..src/StackSymbols.ml[191,6811+72])
                          Tmod_apply
                          module_expr (src/StackSymbols.ml[191,6811+19]..src/StackSymbols.ml[191,6811+58])
                            Tmod_apply
                            module_expr (src/StackSymbols.ml[191,6811+19]..src/StackSymbols.ml[191,6811+35])
                              module_expr (src/StackSymbols.ml[191,6811+19]..src/StackSymbols.ml[191,6811+35])
                                Tmod_ident "Dune__exe!.Fix.DataFlow.Run"
                            module_expr (src/StackSymbols.ml[191,6811+36]..src/StackSymbols.ml[191,6811+57])
                              module_expr (src/StackSymbols.ml[191,6811+36]..src/StackSymbols.ml[191,6811+57])
                                Tmod_ident "Dune__exe!.Lr0.ImperativeNodeMap"
                          module_expr (src/StackSymbols.ml[191,6811+59]..src/StackSymbols.ml[191,6811+71])
                            Tmod_ident "SymbolVector/1048"
                        module_expr (src/StackSymbols.ml[191,6811+73]..src/StackSymbols.ml[191,6811+74])
                          Tmod_ident "G/1232"
                      expression (src/StackSymbols.ml[192,6890+4]..src/StackSymbols.ml[192,6890+14])
                        Texp_ident "F/1400.solution"
                ]
              structure_item (src/StackSymbols.ml[198,7079+2]..src/StackSymbols.ml[204,7266+9])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/StackSymbols.ml[198,7079+6]..src/StackSymbols.ml[198,7079+19])
                      Tpat_var "stack_symbols/1401"
                    expression (src/StackSymbols.ml[198,7079+20]..src/StackSymbols.ml[204,7266+9]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/StackSymbols.ml[198,7079+21]..src/StackSymbols.ml[198,7079+25])
                            extra
                              Tpat_extra_constraint
                              core_type (src/StackSymbols.ml[198,7079+28]..src/StackSymbols.ml[198,7079+36])
                                Ttyp_constr "Dune__exe!.Lr0.node"
                                []
                            Tpat_alias "node/1402"
                            pattern (src/StackSymbols.ml[198,7079+21]..src/StackSymbols.ml[198,7079+25])
                              Tpat_any
                          expression (src/StackSymbols.ml[199,7130+4]..src/StackSymbols.ml[204,7266+9])
                            extra
                              Texp_constraint
                              core_type (src/StackSymbols.ml[198,7079+40]..src/StackSymbols.ml[198,7079+48])
                                Ttyp_constr "property/1049"
                                []
                            Texp_match
                            expression (src/StackSymbols.ml[199,7130+10]..src/StackSymbols.ml[199,7130+28])
                              Texp_apply
                              expression (src/StackSymbols.ml[199,7130+10]..src/StackSymbols.ml[199,7130+23])
                                Texp_ident "stack_symbols/1233"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/StackSymbols.ml[199,7130+24]..src/StackSymbols.ml[199,7130+28])
                                    Texp_ident "node/1402"
                              ]
                            [
                              <case>
                                pattern (src/StackSymbols.ml[200,7164+6]..src/StackSymbols.ml[200,7164+10])
                                  Tpat_value
                                  pattern (src/StackSymbols.ml[200,7164+6]..src/StackSymbols.ml[200,7164+10])
                                    Tpat_construct "None"
                                    []
                                    None
                                expression (src/StackSymbols.ml[202,7229+8]..src/StackSymbols.ml[202,7229+20])
                                  Texp_assert                                  expression (src/StackSymbols.ml[202,7229+15]..src/StackSymbols.ml[202,7229+20])
                                    Texp_construct "false"
                                    []
                              <case>
                                pattern (src/StackSymbols.ml[203,7250+6]..src/StackSymbols.ml[203,7250+12])
                                  Tpat_value
                                  pattern (src/StackSymbols.ml[203,7250+6]..src/StackSymbols.ml[203,7250+12])
                                    Tpat_construct "Some"
                                    [
                                      pattern (src/StackSymbols.ml[203,7250+11]..src/StackSymbols.ml[203,7250+12])
                                        Tpat_var "v/1403"
                                    ]
                                    None
                                expression (src/StackSymbols.ml[204,7266+8]..src/StackSymbols.ml[204,7266+9])
                                  Texp_ident "v/1403"
                            ]
                      ]
                ]
              structure_item (src/StackSymbols.ml[208,7331+2]..src/StackSymbols.ml[209,7382+45])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/StackSymbols.ml[208,7331+6]..src/StackSymbols.ml[208,7331+19])
                      Tpat_var "stack_symbols/1404"
                    expression (src/StackSymbols.ml[208,7331+20]..src/StackSymbols.ml[209,7382+45]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/StackSymbols.ml[208,7331+21]..src/StackSymbols.ml[208,7331+25])
                            extra
                              Tpat_extra_constraint
                              core_type (src/StackSymbols.ml[208,7331+28]..src/StackSymbols.ml[208,7331+36])
                                Ttyp_constr "Dune__exe!.Lr1.node"
                                []
                            Tpat_alias "node/1405"
                            pattern (src/StackSymbols.ml[208,7331+21]..src/StackSymbols.ml[208,7331+25])
                              Tpat_any
                          expression (src/StackSymbols.ml[209,7382+4]..src/StackSymbols.ml[209,7382+45])
                            extra
                              Texp_constraint
                              core_type (src/StackSymbols.ml[208,7331+40]..src/StackSymbols.ml[208,7331+48])
                                Ttyp_constr "property/1049"
                                []
                            Texp_apply
                            expression (src/StackSymbols.ml[209,7382+4]..src/StackSymbols.ml[209,7382+17])
                              Texp_ident "stack_symbols/1401"
                            [
                              <arg>
                                Nolabel
                                expression (src/StackSymbols.ml[209,7382+18]..src/StackSymbols.ml[209,7382+45])
                                  Texp_apply
                                  expression (src/StackSymbols.ml[209,7382+19]..src/StackSymbols.ml[209,7382+27])
                                    Texp_ident "Dune__exe!.Lr0.core"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/StackSymbols.ml[209,7382+28]..src/StackSymbols.ml[209,7382+44])
                                        Texp_apply
                                        expression (src/StackSymbols.ml[209,7382+29]..src/StackSymbols.ml[209,7382+38])
                                          Texp_ident "Dune__exe!.Lr1.state"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/StackSymbols.ml[209,7382+39]..src/StackSymbols.ml[209,7382+43])
                                              Texp_ident "node/1405"
                                        ]
                                  ]
                            ]
                      ]
                ]
              structure_item (src/StackSymbols.ml[211,7429+2]..src/StackSymbols.ml[212,7474+37])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/StackSymbols.ml[211,7429+6]..src/StackSymbols.ml[211,7429+18])
                      Tpat_var "stack_height/1406"
                    expression (src/StackSymbols.ml[211,7429+19]..src/StackSymbols.ml[212,7474+37]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/StackSymbols.ml[211,7429+20]..src/StackSymbols.ml[211,7429+24])
                            extra
                              Tpat_extra_constraint
                              core_type (src/StackSymbols.ml[211,7429+27]..src/StackSymbols.ml[211,7429+35])
                                Ttyp_constr "Dune__exe!.Lr1.node"
                                []
                            Tpat_alias "node/1408"
                            pattern (src/StackSymbols.ml[211,7429+20]..src/StackSymbols.ml[211,7429+24])
                              Tpat_any
                          expression (src/StackSymbols.ml[212,7474+4]..src/StackSymbols.ml[212,7474+37])
                            extra
                              Texp_constraint
                              core_type (src/StackSymbols.ml[211,7429+39]..src/StackSymbols.ml[211,7429+42])
                                Ttyp_constr "int/1!"
                                []
                            Texp_apply
                            expression (src/StackSymbols.ml[212,7474+4]..src/StackSymbols.ml[212,7474+16])
                              Texp_ident "Stdlib!.Array.length"
                            [
                              <arg>
                                Nolabel
                                expression (src/StackSymbols.ml[212,7474+17]..src/StackSymbols.ml[212,7474+37])
                                  Texp_apply
                                  expression (src/StackSymbols.ml[212,7474+18]..src/StackSymbols.ml[212,7474+31])
                                    Texp_ident "stack_symbols/1404"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/StackSymbols.ml[212,7474+32]..src/StackSymbols.ml[212,7474+36])
                                        Texp_ident "node/1408"
                                  ]
                            ]
                      ]
                ]
              structure_item (src/StackSymbols.ml[218,7701+2]..src/StackSymbols.ml[223,7883+20])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/StackSymbols.ml[218,7701+6]..src/StackSymbols.ml[218,7701+11])
                      Tpat_var "join1/1409"
                    expression (src/StackSymbols.ml[218,7701+12]..src/StackSymbols.ml[223,7883+20]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/StackSymbols.ml[218,7701+12]..src/StackSymbols.ml[218,7701+13])
                            Tpat_var "f/1411"
                          expression (src/StackSymbols.ml[218,7701+14]..src/StackSymbols.ml[223,7883+20]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/StackSymbols.ml[218,7701+14]..src/StackSymbols.ml[218,7701+19])
                                  Tpat_var "nodes/1412"
                                expression (src/StackSymbols.ml[219,7723+4]..src/StackSymbols.ml[223,7883+20])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/StackSymbols.ml[219,7723+8]..src/StackSymbols.ml[219,7723+12])
                                        Tpat_var "node/1413"
                                      expression (src/StackSymbols.ml[219,7723+15]..src/StackSymbols.ml[219,7723+39])
                                        Texp_apply
                                        expression (src/StackSymbols.ml[219,7723+15]..src/StackSymbols.ml[219,7723+33])
                                          Texp_ident "Dune__exe!.Lr1.NodeSet.choose"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/StackSymbols.ml[219,7723+34]..src/StackSymbols.ml[219,7723+39])
                                              Texp_ident "nodes/1412"
                                        ]
                                  ]
                                  expression (src/StackSymbols.ml[220,7766+4]..src/StackSymbols.ml[223,7883+20])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/StackSymbols.ml[220,7766+8]..src/StackSymbols.ml[220,7766+13])
                                          Tpat_var "nodes/1508"
                                        expression (src/StackSymbols.ml[220,7766+16]..src/StackSymbols.ml[220,7766+45])
                                          Texp_apply
                                          expression (src/StackSymbols.ml[220,7766+16]..src/StackSymbols.ml[220,7766+34])
                                            Texp_ident "Dune__exe!.Lr1.NodeSet.remove"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/StackSymbols.ml[220,7766+35]..src/StackSymbols.ml[220,7766+39])
                                                Texp_ident "node/1413"
                                            <arg>
                                              Nolabel
                                              expression (src/StackSymbols.ml[220,7766+40]..src/StackSymbols.ml[220,7766+45])
                                                Texp_ident "nodes/1412"
                                          ]
                                    ]
                                    expression (src/StackSymbols.ml[221,7815+4]..src/StackSymbols.ml[223,7883+20])
                                      Texp_apply
                                      expression (src/StackSymbols.ml[221,7815+4]..src/StackSymbols.ml[221,7815+20])
                                        Texp_ident "Dune__exe!.Lr1.NodeSet.fold"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/StackSymbols.ml[221,7815+21]..src/StackSymbols.ml[223,7883+5])
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (src/StackSymbols.ml[221,7815+26]..src/StackSymbols.ml[221,7815+30])
                                                  Tpat_var "node/1509"
                                                expression (src/StackSymbols.ml[221,7815+31]..src/StackSymbols.ml[222,7854+28]) ghost
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (src/StackSymbols.ml[221,7815+31]..src/StackSymbols.ml[221,7815+35])
                                                        Tpat_var "accu/1510"
                                                      expression (src/StackSymbols.ml[222,7854+6]..src/StackSymbols.ml[222,7854+28])
                                                        Texp_apply
                                                        expression (src/StackSymbols.ml[222,7854+6]..src/StackSymbols.ml[222,7854+14])
                                                          Texp_ident "leq_join/1053"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/StackSymbols.ml[222,7854+15]..src/StackSymbols.ml[222,7854+23])
                                                              Texp_apply
                                                              expression (src/StackSymbols.ml[222,7854+16]..src/StackSymbols.ml[222,7854+17])
                                                                Texp_ident "f/1411"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/StackSymbols.ml[222,7854+18]..src/StackSymbols.ml[222,7854+22])
                                                                    Texp_ident "node/1509"
                                                              ]
                                                          <arg>
                                                            Nolabel
                                                            expression (src/StackSymbols.ml[222,7854+24]..src/StackSymbols.ml[222,7854+28])
                                                              Texp_ident "accu/1510"
                                                        ]
                                                  ]
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/StackSymbols.ml[223,7883+6]..src/StackSymbols.ml[223,7883+11])
                                            Texp_ident "nodes/1508"
                                        <arg>
                                          Nolabel
                                          expression (src/StackSymbols.ml[223,7883+12]..src/StackSymbols.ml[223,7883+20])
                                            Texp_apply
                                            expression (src/StackSymbols.ml[223,7883+13]..src/StackSymbols.ml[223,7883+14])
                                              Texp_ident "f/1411"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/StackSymbols.ml[223,7883+15]..src/StackSymbols.ml[223,7883+19])
                                                  Texp_ident "node/1413"
                                            ]
                                      ]
                            ]
                      ]
                ]
              structure_item (src/StackSymbols.ml[231,8132+2]..src/StackSymbols.ml[243,8703+5])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/StackSymbols.ml[231,8132+6]..src/StackSymbols.ml[231,8132+24])
                      extra
                        Tpat_extra_constraint
                        core_type (src/StackSymbols.ml[231,8132+27]..src/StackSymbols.ml[231,8132+55])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/StackSymbols.ml[231,8132+27]..src/StackSymbols.ml[231,8132+43])
                            Ttyp_constr "Dune__exe!.Grammar.Production.index"
                            []
                          core_type (src/StackSymbols.ml[231,8132+47]..src/StackSymbols.ml[231,8132+55])
                            Ttyp_constr "property/1049"
                            []
                      Tpat_alias "production_symbols/1511"
                      pattern (src/StackSymbols.ml[231,8132+6]..src/StackSymbols.ml[231,8132+24])
                        Tpat_any
                    expression (src/StackSymbols.ml[232,8190+4]..src/StackSymbols.ml[243,8703+5])
                      extra
                        Texp_constraint
                        core_type (src/StackSymbols.ml[231,8132+27]..src/StackSymbols.ml[231,8132+55])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/StackSymbols.ml[231,8132+27]..src/StackSymbols.ml[231,8132+43])
                            Ttyp_constr "Dune__exe!.Grammar.Production.index"
                            []
                          core_type (src/StackSymbols.ml[231,8132+47]..src/StackSymbols.ml[231,8132+55])
                            Ttyp_constr "property/1049"
                            []
                      Texp_apply
                      expression (src/StackSymbols.ml[232,8190+4]..src/StackSymbols.ml[232,8190+23])
                        Texp_ident "Dune__exe!.Grammar.Production.tabulate"
                      [
                        <arg>
                          Nolabel
                          expression (src/StackSymbols.ml[232,8190+24]..src/StackSymbols.ml[243,8703+5])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/StackSymbols.ml[232,8190+29]..src/StackSymbols.ml[232,8190+33])
                                  Tpat_var "prod/1512"
                                expression (src/StackSymbols.ml[233,8227+6]..src/StackSymbols.ml[242,8669+33])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/StackSymbols.ml[233,8227+10]..src/StackSymbols.ml[233,8227+15])
                                        Tpat_var "nodes/1513"
                                      expression (src/StackSymbols.ml[233,8227+18]..src/StackSymbols.ml[233,8227+43])
                                        Texp_apply
                                        expression (src/StackSymbols.ml[233,8227+18]..src/StackSymbols.ml[233,8227+38])
                                          Texp_ident "Dune__exe!.Lr1.production_where"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/StackSymbols.ml[233,8227+39]..src/StackSymbols.ml[233,8227+43])
                                              Texp_ident "prod/1512"
                                        ]
                                  ]
                                  expression (src/StackSymbols.ml[234,8274+6]..src/StackSymbols.ml[242,8669+33])
                                    Texp_ifthenelse
                                    expression (src/StackSymbols.ml[234,8274+9]..src/StackSymbols.ml[234,8274+35])
                                      Texp_apply
                                      expression (src/StackSymbols.ml[234,8274+9]..src/StackSymbols.ml[234,8274+29])
                                        Texp_ident "Dune__exe!.Lr1.NodeSet.is_empty"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/StackSymbols.ml[234,8274+30]..src/StackSymbols.ml[234,8274+35])
                                            Texp_ident "nodes/1513"
                                      ]
                                    expression (src/StackSymbols.ml[238,8534+8]..src/StackSymbols.ml[238,8534+27])
                                      Texp_apply
                                      expression (src/StackSymbols.ml[238,8534+8]..src/StackSymbols.ml[238,8534+22])
                                        Texp_ident "Dune__exe!.Grammar.Production.rhs"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/StackSymbols.ml[238,8534+23]..src/StackSymbols.ml[238,8534+27])
                                            Texp_ident "prod/1512"
                                      ]
                                    Some
                                      expression (src/StackSymbols.ml[242,8669+8]..src/StackSymbols.ml[242,8669+33])
                                        Texp_apply
                                        expression (src/StackSymbols.ml[242,8669+8]..src/StackSymbols.ml[242,8669+13])
                                          Texp_ident "join1/1409"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/StackSymbols.ml[242,8669+14]..src/StackSymbols.ml[242,8669+27])
                                              Texp_ident "stack_symbols/1404"
                                          <arg>
                                            Nolabel
                                            expression (src/StackSymbols.ml[242,8669+28]..src/StackSymbols.ml[242,8669+33])
                                              Texp_ident "nodes/1513"
                                        ]
                            ]
                      ]
                ]
              structure_item (src/StackSymbols.ml[245,8710+2]..src/StackSymbols.ml[246,8741+42])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/StackSymbols.ml[245,8710+6]..src/StackSymbols.ml[245,8710+23])
                      Tpat_var "production_height/1514"
                    expression (src/StackSymbols.ml[245,8710+24]..src/StackSymbols.ml[246,8741+42]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/StackSymbols.ml[245,8710+24]..src/StackSymbols.ml[245,8710+28])
                            Tpat_var "prod/1516"
                          expression (src/StackSymbols.ml[246,8741+4]..src/StackSymbols.ml[246,8741+42])
                            Texp_apply
                            expression (src/StackSymbols.ml[246,8741+4]..src/StackSymbols.ml[246,8741+16])
                              Texp_ident "Stdlib!.Array.length"
                            [
                              <arg>
                                Nolabel
                                expression (src/StackSymbols.ml[246,8741+17]..src/StackSymbols.ml[246,8741+42])
                                  Texp_apply
                                  expression (src/StackSymbols.ml[246,8741+18]..src/StackSymbols.ml[246,8741+36])
                                    Texp_ident "production_symbols/1511"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/StackSymbols.ml[246,8741+37]..src/StackSymbols.ml[246,8741+41])
                                        Texp_ident "prod/1516"
                                  ]
                            ]
                      ]
                ]
              structure_item (src/StackSymbols.ml[251,8889+2]..src/StackSymbols.ml[262,9308+5])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/StackSymbols.ml[251,8889+6]..src/StackSymbols.ml[251,8889+18])
                      extra
                        Tpat_extra_constraint
                        core_type (src/StackSymbols.ml[251,8889+21]..src/StackSymbols.ml[251,8889+46])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/StackSymbols.ml[251,8889+21]..src/StackSymbols.ml[251,8889+34])
                            Ttyp_constr "Dune__exe!.Grammar.Nonterminal.t"
                            []
                          core_type (src/StackSymbols.ml[251,8889+38]..src/StackSymbols.ml[251,8889+46])
                            Ttyp_constr "property/1049"
                            []
                      Tpat_alias "goto_symbols/1517"
                      pattern (src/StackSymbols.ml[251,8889+6]..src/StackSymbols.ml[251,8889+18])
                        Tpat_any
                    expression (src/StackSymbols.ml[252,8938+4]..src/StackSymbols.ml[262,9308+5])
                      extra
                        Texp_constraint
                        core_type (src/StackSymbols.ml[251,8889+21]..src/StackSymbols.ml[251,8889+46])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/StackSymbols.ml[251,8889+21]..src/StackSymbols.ml[251,8889+34])
                            Ttyp_constr "Dune__exe!.Grammar.Nonterminal.t"
                            []
                          core_type (src/StackSymbols.ml[251,8889+38]..src/StackSymbols.ml[251,8889+46])
                            Ttyp_constr "property/1049"
                            []
                      Texp_apply
                      expression (src/StackSymbols.ml[252,8938+4]..src/StackSymbols.ml[252,8938+24])
                        Texp_ident "Dune__exe!.Grammar.Nonterminal.tabulate"
                      [
                        <arg>
                          Nolabel
                          expression (src/StackSymbols.ml[252,8938+25]..src/StackSymbols.ml[262,9308+5])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/StackSymbols.ml[252,8938+30]..src/StackSymbols.ml[252,8938+32])
                                  Tpat_var "nt/1518"
                                expression (src/StackSymbols.ml[253,8974+6]..src/StackSymbols.ml[261,9272+35])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/StackSymbols.ml[253,8974+10]..src/StackSymbols.ml[253,8974+16])
                                        Tpat_var "symbol/1519"
                                      expression (src/StackSymbols.ml[253,8974+19]..src/StackSymbols.ml[253,8974+30])
                                        Texp_construct "Symbol.N"
                                        [
                                          expression (src/StackSymbols.ml[253,8974+28]..src/StackSymbols.ml[253,8974+30])
                                            Texp_ident "nt/1518"
                                        ]
                                  ]
                                  expression (src/StackSymbols.ml[256,9112+6]..src/StackSymbols.ml[261,9272+35])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/StackSymbols.ml[256,9112+10]..src/StackSymbols.ml[256,9112+17])
                                          Tpat_var "targets/1520"
                                        expression (src/StackSymbols.ml[256,9112+20]..src/StackSymbols.ml[256,9112+42])
                                          Texp_apply
                                          expression (src/StackSymbols.ml[256,9112+20]..src/StackSymbols.ml[256,9112+35])
                                            Texp_ident "Dune__exe!.Lr1.all_targets"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/StackSymbols.ml[256,9112+36]..src/StackSymbols.ml[256,9112+42])
                                                Texp_ident "symbol/1519"
                                          ]
                                    ]
                                    expression (src/StackSymbols.ml[257,9158+6]..src/StackSymbols.ml[261,9272+35])
                                      Texp_ifthenelse
                                      expression (src/StackSymbols.ml[257,9158+9]..src/StackSymbols.ml[257,9158+37])
                                        Texp_apply
                                        expression (src/StackSymbols.ml[257,9158+9]..src/StackSymbols.ml[257,9158+29])
                                          Texp_ident "Dune__exe!.Lr1.NodeSet.is_empty"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/StackSymbols.ml[257,9158+30]..src/StackSymbols.ml[257,9158+37])
                                              Texp_ident "targets/1520"
                                        ]
                                      expression (src/StackSymbols.ml[259,9240+8]..src/StackSymbols.ml[259,9240+20])
                                        Texp_array
                                        [
                                          expression (src/StackSymbols.ml[259,9240+11]..src/StackSymbols.ml[259,9240+17])
                                            Texp_ident "symbol/1519"
                                        ]
                                      Some
                                        expression (src/StackSymbols.ml[261,9272+8]..src/StackSymbols.ml[261,9272+35])
                                          Texp_apply
                                          expression (src/StackSymbols.ml[261,9272+8]..src/StackSymbols.ml[261,9272+13])
                                            Texp_ident "join1/1409"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/StackSymbols.ml[261,9272+14]..src/StackSymbols.ml[261,9272+27])
                                                Texp_ident "stack_symbols/1404"
                                            <arg>
                                              Nolabel
                                              expression (src/StackSymbols.ml[261,9272+28]..src/StackSymbols.ml[261,9272+35])
                                                Texp_ident "targets/1520"
                                          ]
                            ]
                      ]
                ]
              structure_item (src/StackSymbols.ml[264,9315+2]..src/StackSymbols.ml[265,9338+34])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/StackSymbols.ml[264,9315+6]..src/StackSymbols.ml[264,9315+17])
                      Tpat_var "goto_height/1521"
                    expression (src/StackSymbols.ml[264,9315+18]..src/StackSymbols.ml[265,9338+34]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/StackSymbols.ml[264,9315+18]..src/StackSymbols.ml[264,9315+20])
                            Tpat_var "nt/1523"
                          expression (src/StackSymbols.ml[265,9338+4]..src/StackSymbols.ml[265,9338+34])
                            Texp_apply
                            expression (src/StackSymbols.ml[265,9338+4]..src/StackSymbols.ml[265,9338+16])
                              Texp_ident "Stdlib!.Array.length"
                            [
                              <arg>
                                Nolabel
                                expression (src/StackSymbols.ml[265,9338+17]..src/StackSymbols.ml[265,9338+34])
                                  Texp_apply
                                  expression (src/StackSymbols.ml[265,9338+18]..src/StackSymbols.ml[265,9338+30])
                                    Texp_ident "goto_symbols/1517"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/StackSymbols.ml[265,9338+31]..src/StackSymbols.ml[265,9338+33])
                                        Texp_ident "nt/1523"
                                  ]
                            ]
                      ]
                ]
            ]
  structure_item (src/StackSymbols.ml[273,9476+0]..src/StackSymbols.ml[274,9489+20])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/StackSymbols.ml[273,9476+4]..src/StackSymbols.ml[273,9476+10])
          Tpat_var "buffer/1525"
        expression (src/StackSymbols.ml[274,9489+2]..src/StackSymbols.ml[274,9489+20])
          Texp_apply
          expression (src/StackSymbols.ml[274,9489+2]..src/StackSymbols.ml[274,9489+15])
            Texp_ident "Stdlib!.Buffer.create"
          [
            <arg>
              Nolabel
              expression (src/StackSymbols.ml[274,9489+16]..src/StackSymbols.ml[274,9489+20])
                Texp_constant Const_int 1024
          ]
    ]
  structure_item (src/StackSymbols.ml[276,9511+0]..src/StackSymbols.ml[282,9696+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/StackSymbols.ml[276,9511+4]..src/StackSymbols.ml[276,9511+17])
          Tpat_var "print_symbols/1608"
        expression (src/StackSymbols.ml[276,9511+18]..src/StackSymbols.ml[282,9696+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/StackSymbols.ml[276,9511+18]..src/StackSymbols.ml[276,9511+25])
                Tpat_var "symbols/1610"
              expression (src/StackSymbols.ml[277,9539+2]..src/StackSymbols.ml[282,9696+3])
                Texp_sequence
                expression (src/StackSymbols.ml[277,9539+2]..src/StackSymbols.ml[279,9632+3])
                  Texp_apply
                  expression (src/StackSymbols.ml[277,9539+13]..src/StackSymbols.ml[279,9632+3])
                    Texp_apply
                    expression (src/StackSymbols.ml[277,9539+13]..src/StackSymbols.ml[277,9539+23])
                      Texp_ident "Stdlib!.Array.iter"
                    [
                      <arg>
                        Nolabel
                        expression (src/StackSymbols.ml[277,9539+24]..src/StackSymbols.ml[279,9632+3])
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/StackSymbols.ml[277,9539+29]..src/StackSymbols.ml[277,9539+35])
                                Tpat_var "symbol/1611"
                              expression (src/StackSymbols.ml[278,9578+4]..src/StackSymbols.ml[278,9578+53])
                                Texp_apply
                                expression (src/StackSymbols.ml[278,9578+4]..src/StackSymbols.ml[278,9578+18])
                                  Texp_ident "Stdlib!.Printf.bprintf"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/StackSymbols.ml[278,9578+19]..src/StackSymbols.ml[278,9578+25])
                                      Texp_ident "buffer/1525"
                                  <arg>
                                    Nolabel
                                    expression (src/StackSymbols.ml[278,9578+26]..src/StackSymbols.ml[278,9578+31])
                                      Texp_construct "CamlinternalFormatBasics.Format"
                                      [
                                        expression (src/StackSymbols.ml[278,9578+26]..src/StackSymbols.ml[278,9578+31]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Char_literal"
                                          [
                                            expression (src/StackSymbols.ml[278,9578+26]..src/StackSymbols.ml[278,9578+31]) ghost
                                              Texp_constant Const_char 20
                                            expression (src/StackSymbols.ml[278,9578+26]..src/StackSymbols.ml[278,9578+31]) ghost
                                              Texp_construct "CamlinternalFormatBasics.String"
                                              [
                                                expression (src/StackSymbols.ml[278,9578+26]..src/StackSymbols.ml[278,9578+31]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                  []
                                                expression (src/StackSymbols.ml[278,9578+26]..src/StackSymbols.ml[278,9578+31]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                  []
                                              ]
                                          ]
                                        expression (src/StackSymbols.ml[278,9578+26]..src/StackSymbols.ml[278,9578+31]) ghost
                                          Texp_constant Const_string(" %s",(src/StackSymbols.ml[278,9578+26]..src/StackSymbols.ml[278,9578+31]) ghost,None)
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/StackSymbols.ml[278,9578+32]..src/StackSymbols.ml[278,9578+53])
                                      Texp_apply
                                      expression (src/StackSymbols.ml[278,9578+33]..src/StackSymbols.ml[278,9578+45])
                                        Texp_ident "Dune__exe!.Grammar.Symbol.print"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/StackSymbols.ml[278,9578+46]..src/StackSymbols.ml[278,9578+52])
                                            Texp_ident "symbol/1611"
                                      ]
                                ]
                          ]
                    ]
                  [
                    <arg>
                      Nolabel
                      expression (src/StackSymbols.ml[277,9539+2]..src/StackSymbols.ml[277,9539+9])
                        Texp_ident "symbols/1610"
                  ]
                expression (src/StackSymbols.ml[280,9637+2]..src/StackSymbols.ml[282,9696+3])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (src/StackSymbols.ml[280,9637+6]..src/StackSymbols.ml[280,9637+7])
                        Tpat_var "s/1648"
                      expression (src/StackSymbols.ml[280,9637+10]..src/StackSymbols.ml[280,9637+32])
                        Texp_apply
                        expression (src/StackSymbols.ml[280,9637+10]..src/StackSymbols.ml[280,9637+25])
                          Texp_ident "Stdlib!.Buffer.contents"
                        [
                          <arg>
                            Nolabel
                            expression (src/StackSymbols.ml[280,9637+26]..src/StackSymbols.ml[280,9637+32])
                              Texp_ident "buffer/1525"
                        ]
                  ]
                  expression (src/StackSymbols.ml[281,9673+2]..src/StackSymbols.ml[282,9696+3])
                    Texp_sequence
                    expression (src/StackSymbols.ml[281,9673+2]..src/StackSymbols.ml[281,9673+21])
                      Texp_apply
                      expression (src/StackSymbols.ml[281,9673+2]..src/StackSymbols.ml[281,9673+14])
                        Texp_ident "Stdlib!.Buffer.clear"
                      [
                        <arg>
                          Nolabel
                          expression (src/StackSymbols.ml[281,9673+15]..src/StackSymbols.ml[281,9673+21])
                            Texp_ident "buffer/1525"
                      ]
                    expression (src/StackSymbols.ml[282,9696+2]..src/StackSymbols.ml[282,9696+3])
                      Texp_ident "s/1648"
          ]
    ]
]

{<Dune__exe__StackSymbols>
 "Long"[module] ->
   Abs<Dune__exe__StackSymbols.89>
      (()/1,
       {
        "goto_height"[value] -> <Dune__exe__StackSymbols.87>;
        "goto_symbols"[value] -> <Dune__exe__StackSymbols.83>;
        "production_height"[value] -> <Dune__exe__StackSymbols.81>;
        "production_symbols"[value] -> <Dune__exe__StackSymbols.78>;
        "property"[type] -> <Dune__exe__StackSymbols.31>;
        "stack_height"[value] -> <Dune__exe__StackSymbols.69>;
        "stack_symbols"[value] -> <Dune__exe__StackSymbols.67>;
        });
 "Run"[module] ->
   Abs<Dune__exe__StackSymbols.30>
      (()/1,
       {
        "goto_height"[value] -> <Dune__exe__StackSymbols.28>;
        "goto_symbols"[value] -> <Dune__exe__StackSymbols.26>;
        "production_height"[value] -> <Dune__exe__StackSymbols.24>;
        "production_symbols"[value] -> <Dune__exe__StackSymbols.23>;
        "property"[type] -> <Dune__exe__StackSymbols.8>;
        "stack_height"[value] -> <Dune__exe__StackSymbols.21>;
        "stack_symbols"[value] -> <Dune__exe__StackSymbols.19>;
        });
 "STACK_SYMBOLS"[module type] -> <Dune__exe__StackSymbols.7>;
 "print_symbols"[value] -> <Dune__exe__StackSymbols.91>;
 }

(let
  (Run/965 =
     (function */4696 is_a_functor
       (let
         (*/4687 =a */4696
          stack_symbols/595 =
            (let
              (dummy/596 =
                 (caml_make_vect 0
                   (makeblock 1
                     (field_imm 9 (field_imm 2 (global Dune__exe__Grammar!))))))
              (apply (field_imm 2 (global Dune__exe__Misc!))
                (field_imm 0 (global Dune__exe__Lr0!))
                (function node/740[int]
                  (apply
                    (field_imm 13 (field_imm 8 (global Dune__exe__Item!)))
                    (function item/790 accu/791
                      (let
                        (*match*/4694 =
                           (apply (field_imm 4 (global Dune__exe__Item!))
                             item/790)
                         pos/795 =a (field_imm 3 *match*/4694))
                        (if (> pos/795 (array.length[addr] accu/791))
                          (let
                            (_length/796 =a (field_imm 4 *match*/4694)
                             rhs/794 =a (field_imm 2 *match*/4694)
                             _nt/793 =a (field_imm 1 *match*/4694)
                             _prod/792 =a (field_imm 0 *match*/4694))
                            (apply (field_imm 4 (global Stdlib__Array!))
                              rhs/794 0 pos/795))
                          accu/791)))
                    (apply (field_imm 2 (global Dune__exe__Lr0!)) node/740)
                    dummy/596))))
          stack_symbols/817 =
            (function node/818
              (apply stack_symbols/595
                (apply (field_imm 11 (global Dune__exe__Lr0!))
                  (apply (field_imm 11 (global Dune__exe__Lr1!)) node/818))))
          stack_height/898 =
            (function node/900 : int
              (array.length[addr] (apply stack_symbols/817 node/900)))
          production_symbols/901 =
            (field_imm 6 (field_imm 8 (global Dune__exe__Grammar!)))
          production_height/902 =
            (function prod/904 : int
              (array.length[addr] (apply production_symbols/901 prod/904)))
          goto_symbols/939 =
            (function nt/941 (makearray[addr] (makeblock 0 nt/941)))
          goto_height/962 =
            (function nt/964 : int
              (array.length[addr] (apply goto_symbols/939 nt/964))))
         (makeblock 0 stack_symbols/817 stack_height/898
           production_symbols/901 production_height/902 goto_symbols/939
           goto_height/962))))
  (seq (setfield_ptr(root-init) 0 (global Dune__exe__StackSymbols!) Run/965)
    (let
      (Long/1524 =
         (function */4707 is_a_functor
           (let
             (*/4697 =a */4707
              SymbolVector/1048 =
                (catch
                  (let
                    (push/4699 = (field_imm 41 (global Dune__exe__MArray!))
                     empty/4698 = (field_imm 38 (global Dune__exe__MArray!)))
                    (exit 7 empty/4698 push/4699))
                 with (7 empty/967 push/968)
                  (letrec
                    (lcs/1033
                       (function v1/1034 v2/1035 n1/1036[int] n2/1037[int]
                         n/1038[int] k/1039[int] : int
                         (if
                           (|| (== k/1039 n/1038)
                             (caml_notequal
                               (array.get[gen] v1/1034
                                 (- (- n1/1036 1) k/1039))
                               (array.get[gen] v2/1035
                                 (- (- n2/1037 1) k/1039))))
                           k/1039
                           (apply lcs/1033 v1/1034 v2/1035 n1/1036 n2/1037
                             n/1038 (+ k/1039 1)))))
                    (let
                      (leq_join/1040 =
                         (function v1/1042 v2/1043
                           (let
                             (n1/1044 =[int] (array.length[gen] v1/1042)
                              n2/1045 =[int] (array.length[gen] v2/1043)
                              n/1046 =[int]
                                (apply (field_imm 15 (global Stdlib!))
                                  n1/1044 n2/1045)
                              k/1047 =[int]
                                (apply lcs/1033 v1/1042 v2/1043 n1/1044
                                  n2/1045 n/1046 0))
                             (if (== k/1047 n2/1045) v2/1043
                               (if (== k/1047 n1/1044) v1/1042
                                 (apply
                                   (field_imm 42 (global Dune__exe__MArray!))
                                   k/1047 v1/1042))))))
                      (makeblock 0 empty/967 push/968 lcs/1033 leq_join/1040))))
              include/4700 =a SymbolVector/1048
              empty/1050 =a (field_mut 0 include/4700)
              push/1051 =a (field_mut 1 include/4700)
              lcs/1052 =a (field_mut 2 include/4700)
              leq_join/1053 =a (field_mut 3 include/4700)
              G/1232 =
                (let
                  (foreach_root/1056 =
                     (function contribute/1058 : int
                       (apply
                         (field_imm 18
                           (field_imm 9 (global Dune__exe__Grammar!)))
                         (function _prod/1093 root/1094[int] : int
                           (apply contribute/1058 root/1094 empty/1050))
                         (field_imm 1 (global Dune__exe__Lr0!))))
                   foreach_successor/1129 =
                     (function source/1131[int] stack/1132 contribute/1133
                       : int
                       (apply
                         (field_imm 22
                           (field_imm 7 (global Dune__exe__Grammar!)))
                         (function symbol/1182 target/1183[int] : int
                           (apply contribute/1133 target/1183
                             (apply push/1051 stack/1132 symbol/1182)))
                         (apply (field_imm 5 (global Dune__exe__Lr0!))
                           source/1131))))
                  (makeblock 0 foreach_root/1056 foreach_successor/1129))
              stack_symbols/1233 =
                (let
                  (F/1400 =
                     (apply
                       (apply
                         (apply
                           (let
                             (let/4702 =
                                (field_imm 0
                                  (global Vendored_fix__DataFlow!)))
                             (field_imm 0 (global Vendored_fix__DataFlow!)))
                           (let
                             (let/4701 =
                                (field_imm 7 (global Dune__exe__Lr0!)))
                             (field_imm 7 (global Dune__exe__Lr0!))))
                         (makeblock 0 (field_mut 3 SymbolVector/1048)))
                       G/1232))
                  (field_imm 0 F/1400))
              stack_symbols/1401 =
                (function node/1402[int]
                  (let (*match*/4703 = (apply stack_symbols/1233 node/1402))
                    (if (isint *match*/4703)
                      (raise
                        (makeblock 0 (global Assert_failure/28!)
                          [0: "src/StackSymbols.ml" 202 8]))
                      (let (v/1403 =a (field_imm 0 *match*/4703)) v/1403))))
              stack_symbols/1404 =
                (function node/1405
                  (apply stack_symbols/1401
                    (apply (field_imm 11 (global Dune__exe__Lr0!))
                      (apply (field_imm 11 (global Dune__exe__Lr1!))
                        node/1405))))
              stack_height/1406 =
                (function node/1408 : int
                  (array.length[addr] (apply stack_symbols/1404 node/1408)))
              join1/1409 =
                (function f/1411 nodes/1412
                  (let
                    (node/1413 =
                       (apply
                         (field_imm 14
                           (field_imm 1 (global Dune__exe__Lr1!)))
                         nodes/1412)
                     nodes/1508 =
                       (apply
                         (field_imm 3 (field_imm 1 (global Dune__exe__Lr1!)))
                         node/1413 nodes/1412))
                    (apply
                      (field_imm 23 (field_imm 1 (global Dune__exe__Lr1!)))
                      (function node/1509 accu/1510
                        (apply leq_join/1053 (apply f/1411 node/1509)
                          accu/1510))
                      nodes/1508 (apply f/1411 node/1413))))
              production_symbols/1511 =
                (apply
                  (field_imm 31 (field_imm 8 (global Dune__exe__Grammar!)))
                  (function prod/1512
                    (let
                      (nodes/1513 =
                         (apply (field_imm 39 (global Dune__exe__Lr1!))
                           prod/1512))
                      (if
                        (apply
                          (field_imm 29
                            (field_imm 1 (global Dune__exe__Lr1!)))
                          nodes/1513)
                        (apply
                          (field_imm 6
                            (field_imm 8 (global Dune__exe__Grammar!)))
                          prod/1512)
                        (apply join1/1409 stack_symbols/1404 nodes/1513)))))
              production_height/1514 =
                (function prod/1516 : int
                  (array.length[addr]
                    (apply production_symbols/1511 prod/1516)))
              goto_symbols/1517 =
                (apply
                  (field_imm 14 (field_imm 0 (global Dune__exe__Grammar!)))
                  (function nt/1518
                    (let
                      (symbol/1519 = (makeblock 0 nt/1518)
                       targets/1520 =
                         (apply (field_imm 33 (global Dune__exe__Lr1!))
                           symbol/1519))
                      (if
                        (apply
                          (field_imm 29
                            (field_imm 1 (global Dune__exe__Lr1!)))
                          targets/1520)
                        (makearray[addr] symbol/1519)
                        (apply join1/1409 stack_symbols/1404 targets/1520)))))
              goto_height/1521 =
                (function nt/1523 : int
                  (array.length[addr] (apply goto_symbols/1517 nt/1523))))
             (makeblock 0 SymbolVector/1048 empty/1050 push/1051 lcs/1052
               leq_join/1053 G/1232 stack_symbols/1404 stack_height/1406
               join1/1409 production_symbols/1511 production_height/1514
               goto_symbols/1517 goto_height/1521))))
      (seq
        (setfield_ptr(root-init) 1 (global Dune__exe__StackSymbols!)
          (function funarg/4708 is_a_functor stub
            (let (let/4709 = (apply Long/1524 funarg/4708))
              (makeblock 0 (field_mut 6 let/4709) (field_mut 7 let/4709)
                (field_mut 9 let/4709) (field_mut 10 let/4709)
                (field_mut 11 let/4709) (field_mut 12 let/4709)))))
        (let
          (buffer/1525 = (apply (field_imm 0 (global Stdlib__Buffer!)) 1024))
          (setfield_ptr(root-init) 3 (global Dune__exe__StackSymbols!)
            buffer/1525))
        (let
          (print_symbols/1608 =
             (function symbols/1610
               (seq
                 (apply (field_imm 10 (global Stdlib__Array!))
                   (function symbol/1611 : int
                     (apply (field_imm 4 (global Stdlib__Printf!))
                       (field_imm 3 (global Dune__exe__StackSymbols!))
                       [0: [12: ' ' [2: 0 0]] " %s"]
                       (apply
                         (field_imm 5
                           (field_imm 5 (global Dune__exe__Grammar!)))
                         symbol/1611)))
                   symbols/1610)
                 (let
                   (s/1648 =
                      (apply (field_imm 1 (global Stdlib__Buffer!))
                        (field_imm 3 (global Dune__exe__StackSymbols!))))
                   (seq
                     (apply (field_imm 7 (global Stdlib__Buffer!))
                       (field_imm 3 (global Dune__exe__StackSymbols!)))
                     s/1648)))))
          (setfield_ptr(root-init) 2 (global Dune__exe__StackSymbols!)
            print_symbols/1608))
        0))))
(let
  (Run/965 =
     (function */4696 is_a_functor
       (let
         (stack_symbols/595 =
            (let
              (dummy/596 =
                 (caml_make_vect 0
                   (makeblock 1
                     (field_imm 9 (field_imm 2 (global Dune__exe__Grammar!))))))
              (apply (field_imm 2 (global Dune__exe__Misc!))
                (field_imm 0 (global Dune__exe__Lr0!))
                (function node/740[int]
                  (apply
                    (field_imm 13 (field_imm 8 (global Dune__exe__Item!)))
                    (function item/790 accu/791
                      (let
                        (*match*/4694 =
                           (apply (field_imm 4 (global Dune__exe__Item!))
                             item/790)
                         pos/795 =a (field_imm 3 *match*/4694))
                        (if (> pos/795 (array.length[addr] accu/791))
                          (apply (field_imm 4 (global Stdlib__Array!))
                            (field_imm 2 *match*/4694) 0 pos/795)
                          accu/791)))
                    (apply (field_imm 2 (global Dune__exe__Lr0!)) node/740)
                    dummy/596))))
          stack_symbols/817 =
            (function node/818
              (apply stack_symbols/595
                (apply (field_imm 11 (global Dune__exe__Lr0!))
                  (apply (field_imm 11 (global Dune__exe__Lr1!)) node/818))))
          stack_height/898 =
            (function node/900 : int
              (array.length[addr] (apply stack_symbols/817 node/900)))
          production_symbols/901 =
            (field_imm 6 (field_imm 8 (global Dune__exe__Grammar!)))
          production_height/902 =
            (function prod/904 : int
              (array.length[addr] (apply production_symbols/901 prod/904)))
          goto_symbols/939 =
            (function nt/941 (makearray[addr] (makeblock 0 nt/941)))
          goto_height/962 =
            (function nt/964 : int
              (array.length[addr] (apply goto_symbols/939 nt/964))))
         (makeblock 0 stack_symbols/817 stack_height/898
           production_symbols/901 production_height/902 goto_symbols/939
           goto_height/962))))
  (seq (setfield_ptr(root-init) 0 (global Dune__exe__StackSymbols!) Run/965)
    (let
      (Long/1524 =
         (function */4707 is_a_functor
           (let
             (SymbolVector/1048 =
                (let
                  (push/4699 = (field_imm 41 (global Dune__exe__MArray!))
                   empty/4698 = (field_imm 38 (global Dune__exe__MArray!)))
                  (letrec
                    (lcs/1033
                       (function v1/1034 v2/1035 n1/1036[int] n2/1037[int]
                         n/1038[int] k/1039[int] : int
                         (if
                           (|| (== k/1039 n/1038)
                             (caml_notequal
                               (array.get[gen] v1/1034
                                 (- (- n1/1036 1) k/1039))
                               (array.get[gen] v2/1035
                                 (- (- n2/1037 1) k/1039))))
                           k/1039
                           (apply lcs/1033 v1/1034 v2/1035 n1/1036 n2/1037
                             n/1038 (+ k/1039 1)))))
                    (let
                      (leq_join/1040 =
                         (function v1/1042 v2/1043
                           (let
                             (n1/1044 =[int] (array.length[gen] v1/1042)
                              n2/1045 =[int] (array.length[gen] v2/1043)
                              n/1046 =[int]
                                (apply (field_imm 15 (global Stdlib!))
                                  n1/1044 n2/1045)
                              k/1047 =[int]
                                (apply lcs/1033 v1/1042 v2/1043 n1/1044
                                  n2/1045 n/1046 0))
                             (if (== k/1047 n2/1045) v2/1043
                               (if (== k/1047 n1/1044) v1/1042
                                 (apply
                                   (field_imm 42 (global Dune__exe__MArray!))
                                   k/1047 v1/1042))))))
                      (makeblock 0 empty/4698 push/4699 lcs/1033
                        leq_join/1040))))
              empty/1050 =a (field_mut 0 SymbolVector/1048)
              push/1051 =a (field_mut 1 SymbolVector/1048)
              leq_join/1053 =a (field_mut 3 SymbolVector/1048)
              G/1232 =
                (let
                  (foreach_root/1056 =
                     (function contribute/1058 : int
                       (apply
                         (field_imm 18
                           (field_imm 9 (global Dune__exe__Grammar!)))
                         (function _prod/1093 root/1094[int] : int
                           (apply contribute/1058 root/1094 empty/1050))
                         (field_imm 1 (global Dune__exe__Lr0!))))
                   foreach_successor/1129 =
                     (function source/1131[int] stack/1132 contribute/1133
                       : int
                       (apply
                         (field_imm 22
                           (field_imm 7 (global Dune__exe__Grammar!)))
                         (function symbol/1182 target/1183[int] : int
                           (apply contribute/1133 target/1183
                             (apply push/1051 stack/1132 symbol/1182)))
                         (apply (field_imm 5 (global Dune__exe__Lr0!))
                           source/1131))))
                  (makeblock 0 foreach_root/1056 foreach_successor/1129))
              stack_symbols/1233 =
                (let
                  (F/1400 =
                     (apply
                       (apply
                         (apply
                           (let
                             (let/4702 =
                                (field_imm 0
                                  (global Vendored_fix__DataFlow!)))
                             (field_imm 0 (global Vendored_fix__DataFlow!)))
                           (let
                             (let/4701 =
                                (field_imm 7 (global Dune__exe__Lr0!)))
                             (field_imm 7 (global Dune__exe__Lr0!))))
                         (makeblock 0 (field_mut 3 SymbolVector/1048)))
                       G/1232))
                  (field_imm 0 F/1400))
              stack_symbols/1401 =
                (function node/1402[int]
                  (let (*match*/4703 = (apply stack_symbols/1233 node/1402))
                    (if (isint *match*/4703)
                      (raise
                        (makeblock 0 (global Assert_failure/28!)
                          [0: "src/StackSymbols.ml" 202 8]))
                      (field_imm 0 *match*/4703))))
              stack_symbols/1404 =
                (function node/1405
                  (apply stack_symbols/1401
                    (apply (field_imm 11 (global Dune__exe__Lr0!))
                      (apply (field_imm 11 (global Dune__exe__Lr1!))
                        node/1405))))
              stack_height/1406 =
                (function node/1408 : int
                  (array.length[addr] (apply stack_symbols/1404 node/1408)))
              join1/1409 =
                (function f/1411 nodes/1412
                  (let
                    (node/1413 =
                       (apply
                         (field_imm 14
                           (field_imm 1 (global Dune__exe__Lr1!)))
                         nodes/1412)
                     nodes/1508 =
                       (apply
                         (field_imm 3 (field_imm 1 (global Dune__exe__Lr1!)))
                         node/1413 nodes/1412))
                    (apply
                      (field_imm 23 (field_imm 1 (global Dune__exe__Lr1!)))
                      (function node/1509 accu/1510
                        (apply leq_join/1053 (apply f/1411 node/1509)
                          accu/1510))
                      nodes/1508 (apply f/1411 node/1413))))
              production_symbols/1511 =
                (apply
                  (field_imm 31 (field_imm 8 (global Dune__exe__Grammar!)))
                  (function prod/1512
                    (let
                      (nodes/1513 =
                         (apply (field_imm 39 (global Dune__exe__Lr1!))
                           prod/1512))
                      (if
                        (apply
                          (field_imm 29
                            (field_imm 1 (global Dune__exe__Lr1!)))
                          nodes/1513)
                        (apply
                          (field_imm 6
                            (field_imm 8 (global Dune__exe__Grammar!)))
                          prod/1512)
                        (apply join1/1409 stack_symbols/1404 nodes/1513)))))
              production_height/1514 =
                (function prod/1516 : int
                  (array.length[addr]
                    (apply production_symbols/1511 prod/1516)))
              goto_symbols/1517 =
                (apply
                  (field_imm 14 (field_imm 0 (global Dune__exe__Grammar!)))
                  (function nt/1518
                    (let
                      (symbol/1519 = (makeblock 0 nt/1518)
                       targets/1520 =
                         (apply (field_imm 33 (global Dune__exe__Lr1!))
                           symbol/1519))
                      (if
                        (apply
                          (field_imm 29
                            (field_imm 1 (global Dune__exe__Lr1!)))
                          targets/1520)
                        (makearray[addr] symbol/1519)
                        (apply join1/1409 stack_symbols/1404 targets/1520)))))
              goto_height/1521 =
                (function nt/1523 : int
                  (array.length[addr] (apply goto_symbols/1517 nt/1523))))
             (makeblock 0 SymbolVector/1048 empty/1050 push/1051
               (field_mut 2 SymbolVector/1048) leq_join/1053 G/1232
               stack_symbols/1404 stack_height/1406 join1/1409
               production_symbols/1511 production_height/1514
               goto_symbols/1517 goto_height/1521))))
      (seq
        (setfield_ptr(root-init) 1 (global Dune__exe__StackSymbols!)
          (function funarg/4708 is_a_functor stub
            (let (let/4709 = (apply Long/1524 funarg/4708))
              (makeblock 0 (field_mut 6 let/4709) (field_mut 7 let/4709)
                (field_mut 9 let/4709) (field_mut 10 let/4709)
                (field_mut 11 let/4709) (field_mut 12 let/4709)))))
        (let
          (buffer/1525 = (apply (field_imm 0 (global Stdlib__Buffer!)) 1024))
          (setfield_ptr(root-init) 3 (global Dune__exe__StackSymbols!)
            buffer/1525))
        (let
          (print_symbols/1608 =
             (function symbols/1610
               (seq
                 (apply (field_imm 10 (global Stdlib__Array!))
                   (function symbol/1611 : int
                     (apply (field_imm 4 (global Stdlib__Printf!))
                       (field_imm 3 (global Dune__exe__StackSymbols!))
                       [0: [12: ' ' [2: 0 0]] " %s"]
                       (apply
                         (field_imm 5
                           (field_imm 5 (global Dune__exe__Grammar!)))
                         symbol/1611)))
                   symbols/1610)
                 (let
                   (s/1648 =
                      (apply (field_imm 1 (global Stdlib__Buffer!))
                        (field_imm 3 (global Dune__exe__StackSymbols!))))
                   (seq
                     (apply (field_imm 7 (global Stdlib__Buffer!))
                       (field_imm 3 (global Dune__exe__StackSymbols!)))
                     s/1648)))))
          (setfield_ptr(root-init) 2 (global Dune__exe__StackSymbols!)
            print_symbols/1608))
        0))))
