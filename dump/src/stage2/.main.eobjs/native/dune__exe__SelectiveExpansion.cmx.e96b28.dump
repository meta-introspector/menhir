[
  structure_item (src/SelectiveExpansion.ml[14,1008+0]..[14,1008+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/SelectiveExpansion.ml[14,1008+4]..[14,1008+9])
          Ppat_var "value" (src/SelectiveExpansion.ml[14,1008+4]..[14,1008+9])
        expression (src/SelectiveExpansion.ml[14,1008+15]..[14,1008+30])
          Pexp_ident "Positions.value" (src/SelectiveExpansion.ml[14,1008+15]..[14,1008+30])
    ]
  structure_item (src/SelectiveExpansion.ml[15,1039+0]..[15,1039+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/SelectiveExpansion.ml[15,1039+4]..[15,1039+11])
          Ppat_var "unknown" (src/SelectiveExpansion.ml[15,1039+4]..[15,1039+11])
        expression (src/SelectiveExpansion.ml[15,1039+15]..[15,1039+36])
          Pexp_ident "Positions.unknown_pos" (src/SelectiveExpansion.ml[15,1039+15]..[15,1039+36])
    ]
  structure_item (src/SelectiveExpansion.ml[16,1076+0]..[16,1076+11])
    Pstr_open Fresh
    module_expr (src/SelectiveExpansion.ml[16,1076+5]..[16,1076+11])
      Pmod_ident "Syntax" (src/SelectiveExpansion.ml[16,1076+5]..[16,1076+11])
  structure_item (src/SelectiveExpansion.ml[17,1088+0]..[17,1088+15])
    Pstr_open Fresh
    module_expr (src/SelectiveExpansion.ml[17,1088+5]..[17,1088+15])
      Pmod_ident "GroundSort" (src/SelectiveExpansion.ml[17,1088+5]..[17,1088+15])
  structure_item (src/SelectiveExpansion.ml[23,1211+0]..[25,1244+13])
    Pstr_type Rec
    [
      type_declaration "mode" (src/SelectiveExpansion.ml[23,1211+5]..[23,1211+9]) (src/SelectiveExpansion.ml[23,1211+0]..[25,1244+13])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (src/SelectiveExpansion.ml[24,1223+2]..[24,1223+20])
                "ExpandHigherSort" (src/SelectiveExpansion.ml[24,1223+4]..[24,1223+20])
                []
                None
              (src/SelectiveExpansion.ml[25,1244+2]..[25,1244+13])
                "ExpandAll" (src/SelectiveExpansion.ml[25,1244+4]..[25,1244+13])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/SelectiveExpansion.ml[42,1994+0]..[43,2015+23])
    Pstr_type Rec
    [
      type_declaration "instantiation" (src/SelectiveExpansion.ml[42,1994+5]..[42,1994+18]) (src/SelectiveExpansion.ml[42,1994+0]..[43,2015+23])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/SelectiveExpansion.ml[43,2015+2]..[43,2015+23])
              Ptyp_constr "list" (src/SelectiveExpansion.ml[43,2015+19]..[43,2015+23])
              [
                core_type (src/SelectiveExpansion.ml[43,2015+2]..[43,2015+18])
                  Ptyp_constr "option" (src/SelectiveExpansion.ml[43,2015+12]..[43,2015+18])
                  [
                    core_type (src/SelectiveExpansion.ml[43,2015+2]..[43,2015+11])
                      Ptyp_constr "parameter" (src/SelectiveExpansion.ml[43,2015+2]..[43,2015+11])
                      []
                  ]
              ]
    ]
  structure_item (src/SelectiveExpansion.ml[45,2040+0]..[46,2053+29])
    Pstr_type Rec
    [
      type_declaration "label" (src/SelectiveExpansion.ml[45,2040+5]..[45,2040+10]) (src/SelectiveExpansion.ml[45,2040+0]..[46,2053+29])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/SelectiveExpansion.ml[46,2053+2]..[46,2053+29])
              Ptyp_tuple
              [
                core_type (src/SelectiveExpansion.ml[46,2053+2]..[46,2053+13])
                  Ptyp_constr "nonterminal" (src/SelectiveExpansion.ml[46,2053+2]..[46,2053+13])
                  []
                core_type (src/SelectiveExpansion.ml[46,2053+16]..[46,2053+29])
                  Ptyp_constr "instantiation" (src/SelectiveExpansion.ml[46,2053+16]..[46,2053+29])
                  []
              ]
    ]
  structure_item (src/SelectiveExpansion.ml[50,2124+0]..[57,2385+3])
    Pstr_module
    "Label" (src/SelectiveExpansion.ml[50,2124+7]..[50,2124+12])
      module_expr (src/SelectiveExpansion.ml[50,2124+15]..[57,2385+3])
        Pmod_structure
        [
          structure_item (src/SelectiveExpansion.ml[51,2146+2]..[51,2146+16])
            Pstr_type Rec
            [
              type_declaration "t" (src/SelectiveExpansion.ml[51,2146+7]..[51,2146+8]) (src/SelectiveExpansion.ml[51,2146+2]..[51,2146+16])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/SelectiveExpansion.ml[51,2146+11]..[51,2146+16])
                      Ptyp_constr "label" (src/SelectiveExpansion.ml[51,2146+11]..[51,2146+16])
                      []
            ]
          structure_item (src/SelectiveExpansion.ml[52,2163+2]..[54,2220+61])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/SelectiveExpansion.ml[52,2163+6]..[52,2163+11])
                  Ppat_var "equal" (src/SelectiveExpansion.ml[52,2163+6]..[52,2163+11])
                expression (src/SelectiveExpansion.ml[52,2163+12]..[54,2220+61]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/SelectiveExpansion.ml[52,2163+12]..[52,2163+24])
                    Ppat_tuple
                    [
                      pattern (src/SelectiveExpansion.ml[52,2163+13]..[52,2163+16])
                        Ppat_var "nt1" (src/SelectiveExpansion.ml[52,2163+13]..[52,2163+16])
                      pattern (src/SelectiveExpansion.ml[52,2163+18]..[52,2163+23])
                        Ppat_var "inst1" (src/SelectiveExpansion.ml[52,2163+18]..[52,2163+23])
                    ]
                  expression (src/SelectiveExpansion.ml[52,2163+25]..[54,2220+61]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/SelectiveExpansion.ml[52,2163+25]..[52,2163+37])
                      Ppat_tuple
                      [
                        pattern (src/SelectiveExpansion.ml[52,2163+26]..[52,2163+29])
                          Ppat_var "nt2" (src/SelectiveExpansion.ml[52,2163+26]..[52,2163+29])
                        pattern (src/SelectiveExpansion.ml[52,2163+31]..[52,2163+36])
                          Ppat_var "inst2" (src/SelectiveExpansion.ml[52,2163+31]..[52,2163+36])
                      ]
                    expression (src/SelectiveExpansion.ml[53,2203+4]..[54,2220+61])
                      Pexp_apply
                      expression (src/SelectiveExpansion.ml[53,2203+14]..[53,2203+16])
                        Pexp_ident "&&" (src/SelectiveExpansion.ml[53,2203+14]..[53,2203+16])
                      [
                        <arg>
                        Nolabel
                          expression (src/SelectiveExpansion.ml[53,2203+4]..[53,2203+13])
                            Pexp_apply
                            expression (src/SelectiveExpansion.ml[53,2203+8]..[53,2203+9])
                              Pexp_ident "=" (src/SelectiveExpansion.ml[53,2203+8]..[53,2203+9])
                            [
                              <arg>
                              Nolabel
                                expression (src/SelectiveExpansion.ml[53,2203+4]..[53,2203+7])
                                  Pexp_ident "nt1" (src/SelectiveExpansion.ml[53,2203+4]..[53,2203+7])
                              <arg>
                              Nolabel
                                expression (src/SelectiveExpansion.ml[53,2203+10]..[53,2203+13])
                                  Pexp_ident "nt2" (src/SelectiveExpansion.ml[53,2203+10]..[53,2203+13])
                            ]
                        <arg>
                        Nolabel
                          expression (src/SelectiveExpansion.ml[54,2220+4]..[54,2220+61])
                            Pexp_apply
                            expression (src/SelectiveExpansion.ml[54,2220+4]..[54,2220+17])
                              Pexp_ident "List.for_all2" (src/SelectiveExpansion.ml[54,2220+4]..[54,2220+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/SelectiveExpansion.ml[54,2220+18]..[54,2220+49])
                                  Pexp_apply
                                  expression (src/SelectiveExpansion.ml[54,2220+19]..[54,2220+31])
                                    Pexp_ident "Option.equal" (src/SelectiveExpansion.ml[54,2220+19]..[54,2220+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/SelectiveExpansion.ml[54,2220+32]..[54,2220+48])
                                        Pexp_ident "Parameters.equal" (src/SelectiveExpansion.ml[54,2220+32]..[54,2220+48])
                                  ]
                              <arg>
                              Nolabel
                                expression (src/SelectiveExpansion.ml[54,2220+50]..[54,2220+55])
                                  Pexp_ident "inst1" (src/SelectiveExpansion.ml[54,2220+50]..[54,2220+55])
                              <arg>
                              Nolabel
                                expression (src/SelectiveExpansion.ml[54,2220+56]..[54,2220+61])
                                  Pexp_ident "inst2" (src/SelectiveExpansion.ml[54,2220+56]..[54,2220+61])
                            ]
                      ]
            ]
          structure_item (src/SelectiveExpansion.ml[55,2282+2]..[56,2306+78])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/SelectiveExpansion.ml[55,2282+6]..[55,2282+10])
                  Ppat_var "hash" (src/SelectiveExpansion.ml[55,2282+6]..[55,2282+10])
                expression (src/SelectiveExpansion.ml[55,2282+11]..[56,2306+78]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/SelectiveExpansion.ml[55,2282+11]..[55,2282+21])
                    Ppat_tuple
                    [
                      pattern (src/SelectiveExpansion.ml[55,2282+12]..[55,2282+14])
                        Ppat_var "nt" (src/SelectiveExpansion.ml[55,2282+12]..[55,2282+14])
                      pattern (src/SelectiveExpansion.ml[55,2282+16]..[55,2282+20])
                        Ppat_var "inst" (src/SelectiveExpansion.ml[55,2282+16]..[55,2282+20])
                    ]
                  expression (src/SelectiveExpansion.ml[56,2306+4]..[56,2306+78])
                    Pexp_apply
                    expression (src/SelectiveExpansion.ml[56,2306+4]..[56,2306+16])
                      Pexp_ident "Hashtbl.hash" (src/SelectiveExpansion.ml[56,2306+4]..[56,2306+16])
                    [
                      <arg>
                      Nolabel
                        expression (src/SelectiveExpansion.ml[56,2306+17]..[56,2306+78])
                          Pexp_tuple
                          [
                            expression (src/SelectiveExpansion.ml[56,2306+18]..[56,2306+20])
                              Pexp_ident "nt" (src/SelectiveExpansion.ml[56,2306+18]..[56,2306+20])
                            expression (src/SelectiveExpansion.ml[56,2306+22]..[56,2306+77])
                              Pexp_apply
                              expression (src/SelectiveExpansion.ml[56,2306+22]..[56,2306+42])
                                Pexp_ident "Misc.ListExtras.hash" (src/SelectiveExpansion.ml[56,2306+22]..[56,2306+42])
                              [
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[56,2306+43]..[56,2306+72])
                                    Pexp_apply
                                    expression (src/SelectiveExpansion.ml[56,2306+44]..[56,2306+55])
                                      Pexp_ident "Option.hash" (src/SelectiveExpansion.ml[56,2306+44]..[56,2306+55])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/SelectiveExpansion.ml[56,2306+56]..[56,2306+71])
                                          Pexp_ident "Parameters.hash" (src/SelectiveExpansion.ml[56,2306+56]..[56,2306+71])
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[56,2306+73]..[56,2306+77])
                                    Pexp_ident "inst" (src/SelectiveExpansion.ml[56,2306+73]..[56,2306+77])
                              ]
                          ]
                    ]
            ]
        ]
  structure_item (src/SelectiveExpansion.ml[68,2819+0]..[75,3008+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/SelectiveExpansion.ml[68,2819+4]..[68,2819+13])
          Ppat_var "mangle_po" (src/SelectiveExpansion.ml[68,2819+4]..[68,2819+13])
        expression (src/SelectiveExpansion.ml[68,2819+14]..[75,3008+30]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/SelectiveExpansion.ml[68,2819+14]..[68,2819+37])
            Ppat_constraint
            pattern (src/SelectiveExpansion.ml[68,2819+15]..[68,2819+17])
              Ppat_var "po" (src/SelectiveExpansion.ml[68,2819+15]..[68,2819+17])
            core_type (src/SelectiveExpansion.ml[68,2819+20]..[68,2819+36])
              Ptyp_constr "option" (src/SelectiveExpansion.ml[68,2819+30]..[68,2819+36])
              [
                core_type (src/SelectiveExpansion.ml[68,2819+20]..[68,2819+29])
                  Ptyp_constr "parameter" (src/SelectiveExpansion.ml[68,2819+20]..[68,2819+29])
                  []
              ]
          expression (src/SelectiveExpansion.ml[69,2859+2]..[75,3008+30])
            Pexp_match
            expression (src/SelectiveExpansion.ml[69,2859+8]..[69,2859+10])
              Pexp_ident "po" (src/SelectiveExpansion.ml[69,2859+8]..[69,2859+10])
            [
              <case>
                pattern (src/SelectiveExpansion.ml[70,2875+4]..[70,2875+8])
                  Ppat_construct "None" (src/SelectiveExpansion.ml[70,2875+4]..[70,2875+8])
                  None
                expression (src/SelectiveExpansion.ml[73,2984+6]..[73,2984+9])
                  Pexp_constant PConst_string("_",(src/SelectiveExpansion.ml[73,2984+7]..[73,2984+8]),None)
              <case>
                pattern (src/SelectiveExpansion.ml[74,2994+4]..[74,2994+10])
                  Ppat_construct "Some" (src/SelectiveExpansion.ml[74,2994+4]..[74,2994+8])
                  Some
                    []
                    pattern (src/SelectiveExpansion.ml[74,2994+9]..[74,2994+10])
                      Ppat_var "p" (src/SelectiveExpansion.ml[74,2994+9]..[74,2994+10])
                expression (src/SelectiveExpansion.ml[75,3008+6]..[75,3008+30])
                  Pexp_apply
                  expression (src/SelectiveExpansion.ml[75,3008+6]..[75,3008+22])
                    Pexp_ident "Parameters.print" (src/SelectiveExpansion.ml[75,3008+6]..[75,3008+22])
                  [
                    <arg>
                    Nolabel
                      expression (src/SelectiveExpansion.ml[75,3008+23]..[75,3008+28])
                        Pexp_construct "false" (src/SelectiveExpansion.ml[75,3008+23]..[75,3008+28])
                        None
                    <arg>
                    Nolabel
                      expression (src/SelectiveExpansion.ml[75,3008+29]..[75,3008+30])
                        Pexp_ident "p" (src/SelectiveExpansion.ml[75,3008+29]..[75,3008+30])
                  ]
            ]
    ]
  structure_item (src/SelectiveExpansion.ml[77,3040+0]..[81,3151+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/SelectiveExpansion.ml[77,3040+4]..[77,3040+10])
          Ppat_var "mangle" (src/SelectiveExpansion.ml[77,3040+4]..[77,3040+10])
        expression (src/SelectiveExpansion.ml[77,3040+11]..[81,3151+55]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/SelectiveExpansion.ml[77,3040+11]..[77,3040+30])
            Ppat_constraint
            pattern (src/SelectiveExpansion.ml[77,3040+12]..[77,3040+21])
              Ppat_tuple
              [
                pattern (src/SelectiveExpansion.ml[77,3040+13]..[77,3040+15])
                  Ppat_var "nt" (src/SelectiveExpansion.ml[77,3040+13]..[77,3040+15])
                pattern (src/SelectiveExpansion.ml[77,3040+17]..[77,3040+20])
                  Ppat_var "pos" (src/SelectiveExpansion.ml[77,3040+17]..[77,3040+20])
              ]
            core_type (src/SelectiveExpansion.ml[77,3040+24]..[77,3040+29])
              Ptyp_constr "label" (src/SelectiveExpansion.ml[77,3040+24]..[77,3040+29])
              []
          expression (src/SelectiveExpansion.ml[77,3040+31]..[81,3151+55])
            Pexp_constraint
            expression (src/SelectiveExpansion.ml[78,3087+2]..[81,3151+55])
              Pexp_ifthenelse
              expression (src/SelectiveExpansion.ml[78,3087+5]..[78,3087+13])
                Pexp_apply
                expression (src/SelectiveExpansion.ml[78,3087+9]..[78,3087+10])
                  Pexp_ident "=" (src/SelectiveExpansion.ml[78,3087+9]..[78,3087+10])
                [
                  <arg>
                  Nolabel
                    expression (src/SelectiveExpansion.ml[78,3087+5]..[78,3087+8])
                      Pexp_ident "pos" (src/SelectiveExpansion.ml[78,3087+5]..[78,3087+8])
                  <arg>
                  Nolabel
                    expression (src/SelectiveExpansion.ml[78,3087+11]..[78,3087+13])
                      Pexp_construct "[]" (src/SelectiveExpansion.ml[78,3087+11]..[78,3087+13])
                      None
                ]
              expression (src/SelectiveExpansion.ml[78,3087+19]..[78,3087+21])
                Pexp_ident "nt" (src/SelectiveExpansion.ml[78,3087+19]..[78,3087+21])
              Some
                expression (src/SelectiveExpansion.ml[79,3114+4]..[81,3151+55])
                  Pexp_apply
                  expression (src/SelectiveExpansion.ml[79,3114+4]..[79,3114+18])
                    Pexp_ident "Printf.sprintf" (src/SelectiveExpansion.ml[79,3114+4]..[79,3114+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/SelectiveExpansion.ml[79,3114+19]..[79,3114+27])
                        Pexp_constant PConst_string("%s(%s)",(src/SelectiveExpansion.ml[79,3114+20]..[79,3114+26]),None)
                    <arg>
                    Nolabel
                      expression (src/SelectiveExpansion.ml[80,3142+6]..[80,3142+8])
                        Pexp_ident "nt" (src/SelectiveExpansion.ml[80,3142+6]..[80,3142+8])
                    <arg>
                    Nolabel
                      expression (src/SelectiveExpansion.ml[81,3151+6]..[81,3151+55])
                        Pexp_apply
                        expression (src/SelectiveExpansion.ml[81,3151+7]..[81,3151+36])
                          Pexp_ident "Misc.separated_list_to_string" (src/SelectiveExpansion.ml[81,3151+7]..[81,3151+36])
                        [
                          <arg>
                          Nolabel
                            expression (src/SelectiveExpansion.ml[81,3151+37]..[81,3151+46])
                              Pexp_ident "mangle_po" (src/SelectiveExpansion.ml[81,3151+37]..[81,3151+46])
                          <arg>
                          Nolabel
                            expression (src/SelectiveExpansion.ml[81,3151+47]..[81,3151+50])
                              Pexp_constant PConst_string(",",(src/SelectiveExpansion.ml[81,3151+48]..[81,3151+49]),None)
                          <arg>
                          Nolabel
                            expression (src/SelectiveExpansion.ml[81,3151+51]..[81,3151+54])
                              Pexp_ident "pos" (src/SelectiveExpansion.ml[81,3151+51]..[81,3151+54])
                        ]
                  ]
            core_type (src/SelectiveExpansion.ml[77,3040+33]..[77,3040+44])
              Ptyp_constr "nonterminal" (src/SelectiveExpansion.ml[77,3040+33]..[77,3040+44])
              []
    ]
  structure_item (src/SelectiveExpansion.ml[88,3423+0]..[89,3436+11])
    Pstr_module
    "Env" (src/SelectiveExpansion.ml[88,3423+7]..[88,3423+10])
      module_expr (src/SelectiveExpansion.ml[89,3436+2]..[89,3436+11])
        Pmod_ident "StringMap" (src/SelectiveExpansion.ml[89,3436+2]..[89,3436+11])
  structure_item (src/SelectiveExpansion.ml[91,3449+0]..[92,3460+17])
    Pstr_type Rec
    [
      type_declaration "env" (src/SelectiveExpansion.ml[91,3449+5]..[91,3449+8]) (src/SelectiveExpansion.ml[91,3449+0]..[92,3460+17])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/SelectiveExpansion.ml[92,3460+2]..[92,3460+17])
              Ptyp_constr "Env.t" (src/SelectiveExpansion.ml[92,3460+12]..[92,3460+17])
              [
                core_type (src/SelectiveExpansion.ml[92,3460+2]..[92,3460+11])
                  Ptyp_constr "parameter" (src/SelectiveExpansion.ml[92,3460+2]..[92,3460+11])
                  []
              ]
    ]
  structure_item (src/SelectiveExpansion.ml[94,3479+0]..[99,3639+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/SelectiveExpansion.ml[94,3479+4]..[94,3479+16])
          Ppat_var "subst_symbol" (src/SelectiveExpansion.ml[94,3479+4]..[94,3479+16])
        expression (src/SelectiveExpansion.ml[94,3479+17]..[99,3639+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/SelectiveExpansion.ml[94,3479+17]..[94,3479+20])
            Ppat_var "env" (src/SelectiveExpansion.ml[94,3479+17]..[94,3479+20])
          expression (src/SelectiveExpansion.ml[94,3479+21]..[99,3639+20]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/SelectiveExpansion.ml[94,3479+21]..[94,3479+24])
              Ppat_var "sym" (src/SelectiveExpansion.ml[94,3479+21]..[94,3479+24])
            expression (src/SelectiveExpansion.ml[94,3479+25]..[99,3639+20])
              Pexp_constraint
              expression (src/SelectiveExpansion.ml[95,3518+2]..[99,3639+20])
                Pexp_try
                expression (src/SelectiveExpansion.ml[96,3524+4]..[96,3524+28])
                  Pexp_apply
                  expression (src/SelectiveExpansion.ml[96,3524+4]..[96,3524+12])
                    Pexp_ident "Env.find" (src/SelectiveExpansion.ml[96,3524+4]..[96,3524+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/SelectiveExpansion.ml[96,3524+13]..[96,3524+24])
                        Pexp_apply
                        expression (src/SelectiveExpansion.ml[96,3524+14]..[96,3524+19])
                          Pexp_ident "value" (src/SelectiveExpansion.ml[96,3524+14]..[96,3524+19])
                        [
                          <arg>
                          Nolabel
                            expression (src/SelectiveExpansion.ml[96,3524+20]..[96,3524+23])
                              Pexp_ident "sym" (src/SelectiveExpansion.ml[96,3524+20]..[96,3524+23])
                        ]
                    <arg>
                    Nolabel
                      expression (src/SelectiveExpansion.ml[96,3524+25]..[96,3524+28])
                        Pexp_ident "env" (src/SelectiveExpansion.ml[96,3524+25]..[96,3524+28])
                  ]
                [
                  <case>
                    pattern (src/SelectiveExpansion.ml[97,3553+7]..[97,3553+16])
                      Ppat_construct "Not_found" (src/SelectiveExpansion.ml[97,3553+7]..[97,3553+16])
                      None
                    expression (src/SelectiveExpansion.ml[99,3639+4]..[99,3639+20])
                      Pexp_construct "ParameterVar" (src/SelectiveExpansion.ml[99,3639+4]..[99,3639+16])
                      Some
                        expression (src/SelectiveExpansion.ml[99,3639+17]..[99,3639+20])
                          Pexp_ident "sym" (src/SelectiveExpansion.ml[99,3639+17]..[99,3639+20])
                ]
              core_type (src/SelectiveExpansion.ml[94,3479+27]..[94,3479+36])
                Ptyp_constr "parameter" (src/SelectiveExpansion.ml[94,3479+27]..[94,3479+36])
                []
    ]
  structure_item (src/SelectiveExpansion.ml[101,3661+0]..[113,4144+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/SelectiveExpansion.ml[101,3661+4]..[101,3661+9])
          Ppat_var "apply" (src/SelectiveExpansion.ml[101,3661+4]..[101,3661+9])
        expression (src/SelectiveExpansion.ml[101,3661+10]..[113,4144+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/SelectiveExpansion.ml[101,3661+10]..[101,3661+29])
            Ppat_constraint
            pattern (src/SelectiveExpansion.ml[101,3661+11]..[101,3661+16])
              Ppat_var "param" (src/SelectiveExpansion.ml[101,3661+11]..[101,3661+16])
            core_type (src/SelectiveExpansion.ml[101,3661+19]..[101,3661+28])
              Ptyp_constr "parameter" (src/SelectiveExpansion.ml[101,3661+19]..[101,3661+28])
              []
          expression (src/SelectiveExpansion.ml[101,3661+30]..[113,4144+18]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/SelectiveExpansion.ml[101,3661+30]..[101,3661+55])
              Ppat_constraint
              pattern (src/SelectiveExpansion.ml[101,3661+31]..[101,3661+37])
                Ppat_var "params" (src/SelectiveExpansion.ml[101,3661+31]..[101,3661+37])
              core_type (src/SelectiveExpansion.ml[101,3661+40]..[101,3661+54])
                Ptyp_constr "list" (src/SelectiveExpansion.ml[101,3661+50]..[101,3661+54])
                [
                  core_type (src/SelectiveExpansion.ml[101,3661+40]..[101,3661+49])
                    Ptyp_constr "parameter" (src/SelectiveExpansion.ml[101,3661+40]..[101,3661+49])
                    []
                ]
            expression (src/SelectiveExpansion.ml[101,3661+56]..[113,4144+18])
              Pexp_constraint
              expression (src/SelectiveExpansion.ml[102,3731+2]..[113,4144+18])
                Pexp_match
                expression (src/SelectiveExpansion.ml[102,3731+8]..[102,3731+13])
                  Pexp_ident "param" (src/SelectiveExpansion.ml[102,3731+8]..[102,3731+13])
                [
                  <case>
                    pattern (src/SelectiveExpansion.ml[103,3750+4]..[103,3750+20])
                      Ppat_construct "ParameterVar" (src/SelectiveExpansion.ml[103,3750+4]..[103,3750+16])
                      Some
                        []
                        pattern (src/SelectiveExpansion.ml[103,3750+17]..[103,3750+20])
                          Ppat_var "sym" (src/SelectiveExpansion.ml[103,3750+17]..[103,3750+20])
                    expression (src/SelectiveExpansion.ml[104,3774+6]..[105,3803+32])
                      Pexp_sequence
                      expression (src/SelectiveExpansion.ml[104,3774+6]..[104,3774+27])
                        Pexp_assert
                        expression (src/SelectiveExpansion.ml[104,3774+13]..[104,3774+27])
                          Pexp_apply
                          expression (src/SelectiveExpansion.ml[104,3774+21]..[104,3774+23])
                            Pexp_ident "<>" (src/SelectiveExpansion.ml[104,3774+21]..[104,3774+23])
                          [
                            <arg>
                            Nolabel
                              expression (src/SelectiveExpansion.ml[104,3774+14]..[104,3774+20])
                                Pexp_ident "params" (src/SelectiveExpansion.ml[104,3774+14]..[104,3774+20])
                            <arg>
                            Nolabel
                              expression (src/SelectiveExpansion.ml[104,3774+24]..[104,3774+26])
                                Pexp_construct "[]" (src/SelectiveExpansion.ml[104,3774+24]..[104,3774+26])
                                None
                          ]
                      expression (src/SelectiveExpansion.ml[105,3803+6]..[105,3803+32])
                        Pexp_construct "ParameterApp" (src/SelectiveExpansion.ml[105,3803+6]..[105,3803+18])
                        Some
                          expression (src/SelectiveExpansion.ml[105,3803+19]..[105,3803+32])
                            Pexp_tuple
                            [
                              expression (src/SelectiveExpansion.ml[105,3803+20]..[105,3803+23])
                                Pexp_ident "sym" (src/SelectiveExpansion.ml[105,3803+20]..[105,3803+23])
                              expression (src/SelectiveExpansion.ml[105,3803+25]..[105,3803+31])
                                Pexp_ident "params" (src/SelectiveExpansion.ml[105,3803+25]..[105,3803+31])
                            ]
                  <case>
                    pattern (src/SelectiveExpansion.ml[106,3836+4]..[106,3836+18])
                      Ppat_construct "ParameterApp" (src/SelectiveExpansion.ml[106,3836+4]..[106,3836+16])
                      Some
                        []
                        pattern (src/SelectiveExpansion.ml[106,3836+17]..[106,3836+18])
                          Ppat_any
                    expression (src/SelectiveExpansion.ml[110,4044+6]..[110,4044+18])
                      Pexp_assert
                      expression (src/SelectiveExpansion.ml[110,4044+13]..[110,4044+18])
                        Pexp_construct "false" (src/SelectiveExpansion.ml[110,4044+13]..[110,4044+18])
                        None
                  <case>
                    pattern (src/SelectiveExpansion.ml[111,4063+4]..[111,4063+24])
                      Ppat_construct "ParameterAnonymous" (src/SelectiveExpansion.ml[111,4063+4]..[111,4063+22])
                      Some
                        []
                        pattern (src/SelectiveExpansion.ml[111,4063+23]..[111,4063+24])
                          Ppat_any
                    expression (src/SelectiveExpansion.ml[113,4144+6]..[113,4144+18])
                      Pexp_assert
                      expression (src/SelectiveExpansion.ml[113,4144+13]..[113,4144+18])
                        Pexp_construct "false" (src/SelectiveExpansion.ml[113,4144+13]..[113,4144+18])
                        None
                ]
              core_type (src/SelectiveExpansion.ml[101,3661+58]..[101,3661+67])
                Ptyp_constr "parameter" (src/SelectiveExpansion.ml[101,3661+58]..[101,3661+67])
                []
    ]
  structure_item (src/SelectiveExpansion.ml[115,4164+0]..[127,4545+39])
    Pstr_value Rec
    [
      <def>
        pattern (src/SelectiveExpansion.ml[115,4164+8]..[115,4164+23])
          Ppat_var "subst_parameter" (src/SelectiveExpansion.ml[115,4164+8]..[115,4164+23])
        expression (src/SelectiveExpansion.ml[115,4164+24]..[124,4491+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/SelectiveExpansion.ml[115,4164+24]..[115,4164+27])
            Ppat_var "env" (src/SelectiveExpansion.ml[115,4164+24]..[115,4164+27])
          expression (src/SelectiveExpansion.ml[115,4164+28]..[124,4491+18]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/SelectiveExpansion.ml[115,4164+28]..[115,4164+33])
              Ppat_var "param" (src/SelectiveExpansion.ml[115,4164+28]..[115,4164+33])
            expression (src/SelectiveExpansion.ml[115,4164+34]..[124,4491+18])
              Pexp_constraint
              expression (src/SelectiveExpansion.ml[116,4212+2]..[124,4491+18])
                Pexp_match
                expression (src/SelectiveExpansion.ml[116,4212+8]..[116,4212+13])
                  Pexp_ident "param" (src/SelectiveExpansion.ml[116,4212+8]..[116,4212+13])
                [
                  <case>
                    pattern (src/SelectiveExpansion.ml[117,4231+4]..[117,4231+20])
                      Ppat_construct "ParameterVar" (src/SelectiveExpansion.ml[117,4231+4]..[117,4231+16])
                      Some
                        []
                        pattern (src/SelectiveExpansion.ml[117,4231+17]..[117,4231+20])
                          Ppat_var "sym" (src/SelectiveExpansion.ml[117,4231+17]..[117,4231+20])
                    expression (src/SelectiveExpansion.ml[118,4255+6]..[118,4255+26])
                      Pexp_apply
                      expression (src/SelectiveExpansion.ml[118,4255+6]..[118,4255+18])
                        Pexp_ident "subst_symbol" (src/SelectiveExpansion.ml[118,4255+6]..[118,4255+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/SelectiveExpansion.ml[118,4255+19]..[118,4255+22])
                            Pexp_ident "env" (src/SelectiveExpansion.ml[118,4255+19]..[118,4255+22])
                        <arg>
                        Nolabel
                          expression (src/SelectiveExpansion.ml[118,4255+23]..[118,4255+26])
                            Pexp_ident "sym" (src/SelectiveExpansion.ml[118,4255+23]..[118,4255+26])
                      ]
                  <case>
                    pattern (src/SelectiveExpansion.ml[119,4282+4]..[119,4282+30])
                      Ppat_construct "ParameterApp" (src/SelectiveExpansion.ml[119,4282+4]..[119,4282+16])
                      Some
                        []
                        pattern (src/SelectiveExpansion.ml[119,4282+17]..[119,4282+30])
                          Ppat_tuple
                          [
                            pattern (src/SelectiveExpansion.ml[119,4282+18]..[119,4282+21])
                              Ppat_var "sym" (src/SelectiveExpansion.ml[119,4282+18]..[119,4282+21])
                            pattern (src/SelectiveExpansion.ml[119,4282+23]..[119,4282+29])
                              Ppat_var "params" (src/SelectiveExpansion.ml[119,4282+23]..[119,4282+29])
                          ]
                    expression (src/SelectiveExpansion.ml[120,4316+6]..[121,4345+64])
                      Pexp_sequence
                      expression (src/SelectiveExpansion.ml[120,4316+6]..[120,4316+27])
                        Pexp_assert
                        expression (src/SelectiveExpansion.ml[120,4316+13]..[120,4316+27])
                          Pexp_apply
                          expression (src/SelectiveExpansion.ml[120,4316+21]..[120,4316+23])
                            Pexp_ident "<>" (src/SelectiveExpansion.ml[120,4316+21]..[120,4316+23])
                          [
                            <arg>
                            Nolabel
                              expression (src/SelectiveExpansion.ml[120,4316+14]..[120,4316+20])
                                Pexp_ident "params" (src/SelectiveExpansion.ml[120,4316+14]..[120,4316+20])
                            <arg>
                            Nolabel
                              expression (src/SelectiveExpansion.ml[120,4316+24]..[120,4316+26])
                                Pexp_construct "[]" (src/SelectiveExpansion.ml[120,4316+24]..[120,4316+26])
                                None
                          ]
                      expression (src/SelectiveExpansion.ml[121,4345+6]..[121,4345+64])
                        Pexp_apply
                        expression (src/SelectiveExpansion.ml[121,4345+6]..[121,4345+11])
                          Pexp_ident "apply" (src/SelectiveExpansion.ml[121,4345+6]..[121,4345+11])
                        [
                          <arg>
                          Nolabel
                            expression (src/SelectiveExpansion.ml[121,4345+12]..[121,4345+34])
                              Pexp_apply
                              expression (src/SelectiveExpansion.ml[121,4345+13]..[121,4345+25])
                                Pexp_ident "subst_symbol" (src/SelectiveExpansion.ml[121,4345+13]..[121,4345+25])
                              [
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[121,4345+26]..[121,4345+29])
                                    Pexp_ident "env" (src/SelectiveExpansion.ml[121,4345+26]..[121,4345+29])
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[121,4345+30]..[121,4345+33])
                                    Pexp_ident "sym" (src/SelectiveExpansion.ml[121,4345+30]..[121,4345+33])
                              ]
                          <arg>
                          Nolabel
                            expression (src/SelectiveExpansion.ml[121,4345+35]..[121,4345+64])
                              Pexp_apply
                              expression (src/SelectiveExpansion.ml[121,4345+36]..[121,4345+52])
                                Pexp_ident "subst_parameters" (src/SelectiveExpansion.ml[121,4345+36]..[121,4345+52])
                              [
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[121,4345+53]..[121,4345+56])
                                    Pexp_ident "env" (src/SelectiveExpansion.ml[121,4345+53]..[121,4345+56])
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[121,4345+57]..[121,4345+63])
                                    Pexp_ident "params" (src/SelectiveExpansion.ml[121,4345+57]..[121,4345+63])
                              ]
                        ]
                  <case>
                    pattern (src/SelectiveExpansion.ml[122,4410+4]..[122,4410+24])
                      Ppat_construct "ParameterAnonymous" (src/SelectiveExpansion.ml[122,4410+4]..[122,4410+22])
                      Some
                        []
                        pattern (src/SelectiveExpansion.ml[122,4410+23]..[122,4410+24])
                          Ppat_any
                    expression (src/SelectiveExpansion.ml[124,4491+6]..[124,4491+18])
                      Pexp_assert
                      expression (src/SelectiveExpansion.ml[124,4491+13]..[124,4491+18])
                        Pexp_construct "false" (src/SelectiveExpansion.ml[124,4491+13]..[124,4491+18])
                        None
                ]
              core_type (src/SelectiveExpansion.ml[115,4164+36]..[115,4164+45])
                Ptyp_constr "parameter" (src/SelectiveExpansion.ml[115,4164+36]..[115,4164+45])
                []
      <def>
        pattern (src/SelectiveExpansion.ml[126,4511+4]..[126,4511+20])
          Ppat_var "subst_parameters" (src/SelectiveExpansion.ml[126,4511+4]..[126,4511+20])
        expression (src/SelectiveExpansion.ml[126,4511+21]..[127,4545+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/SelectiveExpansion.ml[126,4511+21]..[126,4511+24])
            Ppat_var "env" (src/SelectiveExpansion.ml[126,4511+21]..[126,4511+24])
          expression (src/SelectiveExpansion.ml[126,4511+25]..[127,4545+39]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/SelectiveExpansion.ml[126,4511+25]..[126,4511+31])
              Ppat_var "params" (src/SelectiveExpansion.ml[126,4511+25]..[126,4511+31])
            expression (src/SelectiveExpansion.ml[127,4545+2]..[127,4545+39])
              Pexp_apply
              expression (src/SelectiveExpansion.ml[127,4545+2]..[127,4545+10])
                Pexp_ident "List.map" (src/SelectiveExpansion.ml[127,4545+2]..[127,4545+10])
              [
                <arg>
                Nolabel
                  expression (src/SelectiveExpansion.ml[127,4545+11]..[127,4545+32])
                    Pexp_apply
                    expression (src/SelectiveExpansion.ml[127,4545+12]..[127,4545+27])
                      Pexp_ident "subst_parameter" (src/SelectiveExpansion.ml[127,4545+12]..[127,4545+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/SelectiveExpansion.ml[127,4545+28]..[127,4545+31])
                          Pexp_ident "env" (src/SelectiveExpansion.ml[127,4545+28]..[127,4545+31])
                    ]
                <arg>
                Nolabel
                  expression (src/SelectiveExpansion.ml[127,4545+33]..[127,4545+39])
                    Pexp_ident "params" (src/SelectiveExpansion.ml[127,4545+33]..[127,4545+39])
              ]
    ]
  structure_item (src/SelectiveExpansion.ml[134,4819+0]..[523,19063+3])
    Pstr_module
    "Run" (src/SelectiveExpansion.ml[134,4819+7]..[134,4819+10])
      module_expr (src/SelectiveExpansion.ml[134,4819+11]..[523,19063+3])
        Pmod_functor "G" (src/SelectiveExpansion.ml[134,4819+12]..[134,4819+13])
        module_type (src/SelectiveExpansion.ml[134,4819+16]..[141,5009+3])
          Pmty_signature
          [
            signature_item (src/SelectiveExpansion.ml[136,4863+2]..[136,4863+16])
              Psig_value
              value_description "mode" (src/SelectiveExpansion.ml[136,4863+6]..[136,4863+10]) (src/SelectiveExpansion.ml[136,4863+2]..[136,4863+16])
                core_type (src/SelectiveExpansion.ml[136,4863+12]..[136,4863+16])
                  Ptyp_constr "mode" (src/SelectiveExpansion.ml[136,4863+12]..[136,4863+16])
                  []
                []
            signature_item (src/SelectiveExpansion.ml[138,4906+2]..[138,4906+32])
              Psig_value
              value_description "sorts" (src/SelectiveExpansion.ml[138,4906+6]..[138,4906+11]) (src/SelectiveExpansion.ml[138,4906+2]..[138,4906+32])
                core_type (src/SelectiveExpansion.ml[138,4906+13]..[138,4906+32])
                  Ptyp_constr "SortInference.sorts" (src/SelectiveExpansion.ml[138,4906+13]..[138,4906+32])
                  []
                []
            signature_item (src/SelectiveExpansion.ml[140,4991+2]..[140,4991+17])
              Psig_value
              value_description "g" (src/SelectiveExpansion.ml[140,4991+6]..[140,4991+7]) (src/SelectiveExpansion.ml[140,4991+2]..[140,4991+17])
                core_type (src/SelectiveExpansion.ml[140,4991+10]..[140,4991+17])
                  Ptyp_constr "grammar" (src/SelectiveExpansion.ml[140,4991+10]..[140,4991+17])
                  []
                []
          ]
        module_expr (src/SelectiveExpansion.ml[141,5009+7]..[523,19063+3])
          Pmod_structure
          [
            structure_item (src/SelectiveExpansion.ml[143,5024+0]..[143,5024+6])
              Pstr_open Fresh
              module_expr (src/SelectiveExpansion.ml[143,5024+5]..[143,5024+6])
                Pmod_ident "G" (src/SelectiveExpansion.ml[143,5024+5]..[143,5024+6])
            structure_item (src/SelectiveExpansion.ml[153,5387+0]..[157,5471+16])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[153,5387+4]..[153,5387+8])
                    Ppat_var "sort" (src/SelectiveExpansion.ml[153,5387+4]..[153,5387+8])
                  expression (src/SelectiveExpansion.ml[153,5387+9]..[157,5471+16]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/SelectiveExpansion.ml[153,5387+9]..[153,5387+15])
                      Ppat_var "symbol" (src/SelectiveExpansion.ml[153,5387+9]..[153,5387+15])
                    expression (src/SelectiveExpansion.ml[154,5405+2]..[157,5471+16])
                      Pexp_try
                      expression (src/SelectiveExpansion.ml[155,5411+4]..[155,5411+39])
                        Pexp_apply
                        expression (src/SelectiveExpansion.ml[155,5411+4]..[155,5411+18])
                          Pexp_ident "StringMap.find" (src/SelectiveExpansion.ml[155,5411+4]..[155,5411+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/SelectiveExpansion.ml[155,5411+19]..[155,5411+33])
                              Pexp_apply
                              expression (src/SelectiveExpansion.ml[155,5411+20]..[155,5411+25])
                                Pexp_ident "value" (src/SelectiveExpansion.ml[155,5411+20]..[155,5411+25])
                              [
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[155,5411+26]..[155,5411+32])
                                    Pexp_ident "symbol" (src/SelectiveExpansion.ml[155,5411+26]..[155,5411+32])
                              ]
                          <arg>
                          Nolabel
                            expression (src/SelectiveExpansion.ml[155,5411+34]..[155,5411+39])
                              Pexp_ident "sorts" (src/SelectiveExpansion.ml[155,5411+34]..[155,5411+39])
                        ]
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[156,5451+7]..[156,5451+16])
                            Ppat_construct "Not_found" (src/SelectiveExpansion.ml[156,5451+7]..[156,5451+16])
                            None
                          expression (src/SelectiveExpansion.ml[157,5471+4]..[157,5471+16])
                            Pexp_assert
                            expression (src/SelectiveExpansion.ml[157,5471+11]..[157,5471+16])
                              Pexp_construct "false" (src/SelectiveExpansion.ml[157,5471+11]..[157,5471+16])
                              None
                      ]
              ]
            structure_item (src/SelectiveExpansion.ml[159,5489+0]..[168,5712+18])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[159,5489+4]..[159,5489+8])
                    Ppat_var "sort" (src/SelectiveExpansion.ml[159,5489+4]..[159,5489+8])
                  expression (src/SelectiveExpansion.ml[159,5489+9]..[168,5712+18]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/SelectiveExpansion.ml[159,5489+9]..[159,5489+14])
                      Ppat_var "param" (src/SelectiveExpansion.ml[159,5489+9]..[159,5489+14])
                    expression (src/SelectiveExpansion.ml[160,5506+2]..[168,5712+18])
                      Pexp_match
                      expression (src/SelectiveExpansion.ml[160,5506+8]..[160,5506+13])
                        Pexp_ident "param" (src/SelectiveExpansion.ml[160,5506+8]..[160,5506+13])
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[161,5525+4]..[161,5525+20])
                            Ppat_construct "ParameterVar" (src/SelectiveExpansion.ml[161,5525+4]..[161,5525+16])
                            Some
                              []
                              pattern (src/SelectiveExpansion.ml[161,5525+17]..[161,5525+20])
                                Ppat_var "sym" (src/SelectiveExpansion.ml[161,5525+17]..[161,5525+20])
                          expression (src/SelectiveExpansion.ml[162,5549+6]..[162,5549+14])
                            Pexp_apply
                            expression (src/SelectiveExpansion.ml[162,5549+6]..[162,5549+10])
                              Pexp_ident "sort" (src/SelectiveExpansion.ml[162,5549+6]..[162,5549+10])
                            [
                              <arg>
                              Nolabel
                                expression (src/SelectiveExpansion.ml[162,5549+11]..[162,5549+14])
                                  Pexp_ident "sym" (src/SelectiveExpansion.ml[162,5549+11]..[162,5549+14])
                            ]
                        <case>
                          pattern (src/SelectiveExpansion.ml[163,5564+4]..[163,5564+28])
                            Ppat_construct "ParameterApp" (src/SelectiveExpansion.ml[163,5564+4]..[163,5564+16])
                            Some
                              []
                              pattern (src/SelectiveExpansion.ml[163,5564+17]..[163,5564+28])
                                Ppat_tuple
                                [
                                  pattern (src/SelectiveExpansion.ml[163,5564+18]..[163,5564+19])
                                    Ppat_any
                                  pattern (src/SelectiveExpansion.ml[163,5564+21]..[163,5564+27])
                                    Ppat_var "params" (src/SelectiveExpansion.ml[163,5564+21]..[163,5564+27])
                                ]
                          expression (src/SelectiveExpansion.ml[164,5596+6]..[166,5673+10])
                            Pexp_sequence
                            expression (src/SelectiveExpansion.ml[164,5596+6]..[164,5596+27])
                              Pexp_assert
                              expression (src/SelectiveExpansion.ml[164,5596+13]..[164,5596+27])
                                Pexp_apply
                                expression (src/SelectiveExpansion.ml[164,5596+21]..[164,5596+23])
                                  Pexp_ident "<>" (src/SelectiveExpansion.ml[164,5596+21]..[164,5596+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/SelectiveExpansion.ml[164,5596+14]..[164,5596+20])
                                      Pexp_ident "params" (src/SelectiveExpansion.ml[164,5596+14]..[164,5596+20])
                                  <arg>
                                  Nolabel
                                    expression (src/SelectiveExpansion.ml[164,5596+24]..[164,5596+26])
                                      Pexp_construct "[]" (src/SelectiveExpansion.ml[164,5596+24]..[164,5596+26])
                                      None
                                ]
                            expression (src/SelectiveExpansion.ml[166,5673+6]..[166,5673+10])
                              Pexp_ident "star" (src/SelectiveExpansion.ml[166,5673+6]..[166,5673+10])
                        <case>
                          pattern (src/SelectiveExpansion.ml[167,5684+4]..[167,5684+24])
                            Ppat_construct "ParameterAnonymous" (src/SelectiveExpansion.ml[167,5684+4]..[167,5684+22])
                            Some
                              []
                              pattern (src/SelectiveExpansion.ml[167,5684+23]..[167,5684+24])
                                Ppat_any
                          expression (src/SelectiveExpansion.ml[168,5712+6]..[168,5712+18])
                            Pexp_assert
                            expression (src/SelectiveExpansion.ml[168,5712+13]..[168,5712+18])
                              Pexp_construct "false" (src/SelectiveExpansion.ml[168,5712+13]..[168,5712+18])
                              None
                      ]
              ]
            structure_item (src/SelectiveExpansion.ml[178,6076+0]..[182,6292+26])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[178,6076+4]..[178,6076+21])
                    Ppat_var "global_attributes" (src/SelectiveExpansion.ml[178,6076+4]..[178,6076+21])
                  expression (src/SelectiveExpansion.ml[178,6076+22]..[182,6292+26]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/SelectiveExpansion.ml[178,6076+22]..[178,6076+35])
                      Ppat_constraint
                      pattern (src/SelectiveExpansion.ml[178,6076+23]..[178,6076+25])
                        Ppat_var "nt" (src/SelectiveExpansion.ml[178,6076+23]..[178,6076+25])
                      core_type (src/SelectiveExpansion.ml[178,6076+28]..[178,6076+34])
                        Ptyp_constr "symbol" (src/SelectiveExpansion.ml[178,6076+28]..[178,6076+34])
                        []
                    expression (src/SelectiveExpansion.ml[178,6076+36]..[182,6292+26])
                      Pexp_constraint
                      expression (src/SelectiveExpansion.ml[179,6131+2]..[182,6292+26])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/SelectiveExpansion.ml[179,6131+6]..[179,6131+11])
                              Ppat_var "param" (src/SelectiveExpansion.ml[179,6131+6]..[179,6131+11])
                            expression (src/SelectiveExpansion.ml[179,6131+14]..[179,6131+39])
                              Pexp_construct "ParameterVar" (src/SelectiveExpansion.ml[179,6131+14]..[179,6131+26])
                              Some
                                expression (src/SelectiveExpansion.ml[179,6131+27]..[179,6131+39])
                                  Pexp_apply
                                  expression (src/SelectiveExpansion.ml[179,6131+28]..[179,6131+35])
                                    Pexp_ident "unknown" (src/SelectiveExpansion.ml[179,6131+28]..[179,6131+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/SelectiveExpansion.ml[179,6131+36]..[179,6131+38])
                                        Pexp_ident "nt" (src/SelectiveExpansion.ml[179,6131+36]..[179,6131+38])
                                  ]
                        ]
                        expression (src/SelectiveExpansion.ml[180,6174+2]..[182,6292+26])
                          Pexp_apply
                          expression (src/SelectiveExpansion.ml[180,6174+2]..[180,6174+13])
                            Pexp_ident "List.concat" (src/SelectiveExpansion.ml[180,6174+2]..[180,6174+13])
                          [
                            <arg>
                            Nolabel
                              expression (src/SelectiveExpansion.ml[180,6174+14]..[182,6292+26])
                                Pexp_apply
                                expression (src/SelectiveExpansion.ml[180,6174+15]..[180,6174+23])
                                  Pexp_ident "List.map" (src/SelectiveExpansion.ml[180,6174+15]..[180,6174+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/SelectiveExpansion.ml[180,6174+24]..[182,6292+3])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (src/SelectiveExpansion.ml[180,6174+29]..[180,6174+44])
                                        Ppat_tuple
                                        [
                                          pattern (src/SelectiveExpansion.ml[180,6174+30]..[180,6174+36])
                                            Ppat_var "params" (src/SelectiveExpansion.ml[180,6174+30]..[180,6174+36])
                                          pattern (src/SelectiveExpansion.ml[180,6174+38]..[180,6174+43])
                                            Ppat_var "attrs" (src/SelectiveExpansion.ml[180,6174+38]..[180,6174+43])
                                        ]
                                      expression (src/SelectiveExpansion.ml[181,6222+4]..[181,6222+69])
                                        Pexp_ifthenelse
                                        expression (src/SelectiveExpansion.ml[181,6222+7]..[181,6222+50])
                                          Pexp_apply
                                          expression (src/SelectiveExpansion.ml[181,6222+7]..[181,6222+18])
                                            Pexp_ident "List.exists" (src/SelectiveExpansion.ml[181,6222+7]..[181,6222+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/SelectiveExpansion.ml[181,6222+19]..[181,6222+43])
                                                Pexp_apply
                                                expression (src/SelectiveExpansion.ml[181,6222+20]..[181,6222+36])
                                                  Pexp_ident "Parameters.equal" (src/SelectiveExpansion.ml[181,6222+20]..[181,6222+36])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/SelectiveExpansion.ml[181,6222+37]..[181,6222+42])
                                                      Pexp_ident "param" (src/SelectiveExpansion.ml[181,6222+37]..[181,6222+42])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (src/SelectiveExpansion.ml[181,6222+44]..[181,6222+50])
                                                Pexp_ident "params" (src/SelectiveExpansion.ml[181,6222+44]..[181,6222+50])
                                          ]
                                        expression (src/SelectiveExpansion.ml[181,6222+56]..[181,6222+61])
                                          Pexp_ident "attrs" (src/SelectiveExpansion.ml[181,6222+56]..[181,6222+61])
                                        Some
                                          expression (src/SelectiveExpansion.ml[181,6222+67]..[181,6222+69])
                                            Pexp_construct "[]" (src/SelectiveExpansion.ml[181,6222+67]..[181,6222+69])
                                            None
                                  <arg>
                                  Nolabel
                                    expression (src/SelectiveExpansion.ml[182,6292+4]..[182,6292+25])
                                      Pexp_field
                                      expression (src/SelectiveExpansion.ml[182,6292+4]..[182,6292+5])
                                        Pexp_ident "g" (src/SelectiveExpansion.ml[182,6292+4]..[182,6292+5])
                                      "p_symbol_attributes" (src/SelectiveExpansion.ml[182,6292+6]..[182,6292+25])
                                ]
                          ]
                      core_type (src/SelectiveExpansion.ml[178,6076+38]..[178,6076+52])
                        Ptyp_constr "list" (src/SelectiveExpansion.ml[178,6076+48]..[178,6076+52])
                        [
                          core_type (src/SelectiveExpansion.ml[178,6076+38]..[178,6076+47])
                            Ptyp_constr "attribute" (src/SelectiveExpansion.ml[178,6076+38]..[178,6076+47])
                            []
                        ]
              ]
            structure_item (src/SelectiveExpansion.ml[189,6501+0]..[196,6664+21])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[189,6501+4]..[189,6501+23])
                    Ppat_tuple
                    [
                      pattern (src/SelectiveExpansion.ml[189,6501+4]..[189,6501+11])
                        Ppat_var "enqueue" (src/SelectiveExpansion.ml[189,6501+4]..[189,6501+11])
                      pattern (src/SelectiveExpansion.ml[189,6501+13]..[189,6501+23])
                        Ppat_var "repeatedly" (src/SelectiveExpansion.ml[189,6501+13]..[189,6501+23])
                    ]
                  expression (src/SelectiveExpansion.ml[190,6527+2]..[196,6664+21])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/SelectiveExpansion.ml[190,6527+6]..[190,6527+11])
                          Ppat_var "queue" (src/SelectiveExpansion.ml[190,6527+6]..[190,6527+11])
                        expression (src/SelectiveExpansion.ml[190,6527+14]..[190,6527+28])
                          Pexp_apply
                          expression (src/SelectiveExpansion.ml[190,6527+14]..[190,6527+26])
                            Pexp_ident "Queue.create" (src/SelectiveExpansion.ml[190,6527+14]..[190,6527+26])
                          [
                            <arg>
                            Nolabel
                              expression (src/SelectiveExpansion.ml[190,6527+26]..[190,6527+28])
                                Pexp_construct "()" (src/SelectiveExpansion.ml[190,6527+26]..[190,6527+28])
                                None
                          ]
                    ]
                    expression (src/SelectiveExpansion.ml[191,6559+2]..[196,6664+21])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/SelectiveExpansion.ml[191,6559+6]..[191,6559+13])
                            Ppat_var "enqueue" (src/SelectiveExpansion.ml[191,6559+6]..[191,6559+13])
                          expression (src/SelectiveExpansion.ml[191,6559+14]..[192,6581+25]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/SelectiveExpansion.ml[191,6559+14]..[191,6559+19])
                              Ppat_var "label" (src/SelectiveExpansion.ml[191,6559+14]..[191,6559+19])
                            expression (src/SelectiveExpansion.ml[192,6581+4]..[192,6581+25])
                              Pexp_apply
                              expression (src/SelectiveExpansion.ml[192,6581+4]..[192,6581+13])
                                Pexp_ident "Queue.add" (src/SelectiveExpansion.ml[192,6581+4]..[192,6581+13])
                              [
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[192,6581+14]..[192,6581+19])
                                    Pexp_ident "label" (src/SelectiveExpansion.ml[192,6581+14]..[192,6581+19])
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[192,6581+20]..[192,6581+25])
                                    Pexp_ident "queue" (src/SelectiveExpansion.ml[192,6581+20]..[192,6581+25])
                              ]
                        <def>
                          pattern (src/SelectiveExpansion.ml[193,6607+6]..[193,6607+16])
                            Ppat_var "repeatedly" (src/SelectiveExpansion.ml[193,6607+6]..[193,6607+16])
                          expression (src/SelectiveExpansion.ml[193,6607+17]..[194,6632+26]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/SelectiveExpansion.ml[193,6607+17]..[193,6607+22])
                              Ppat_var "visit" (src/SelectiveExpansion.ml[193,6607+17]..[193,6607+22])
                            expression (src/SelectiveExpansion.ml[194,6632+4]..[194,6632+26])
                              Pexp_apply
                              expression (src/SelectiveExpansion.ml[194,6632+4]..[194,6632+14])
                                Pexp_ident "Misc.qiter" (src/SelectiveExpansion.ml[194,6632+4]..[194,6632+14])
                              [
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[194,6632+15]..[194,6632+20])
                                    Pexp_ident "visit" (src/SelectiveExpansion.ml[194,6632+15]..[194,6632+20])
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[194,6632+21]..[194,6632+26])
                                    Pexp_ident "queue" (src/SelectiveExpansion.ml[194,6632+21]..[194,6632+26])
                              ]
                      ]
                      expression (src/SelectiveExpansion.ml[196,6664+2]..[196,6664+21])
                        Pexp_tuple
                        [
                          expression (src/SelectiveExpansion.ml[196,6664+2]..[196,6664+9])
                            Pexp_ident "enqueue" (src/SelectiveExpansion.ml[196,6664+2]..[196,6664+9])
                          expression (src/SelectiveExpansion.ml[196,6664+11]..[196,6664+21])
                            Pexp_ident "repeatedly" (src/SelectiveExpansion.ml[196,6664+11]..[196,6664+21])
                        ]
              ]
            structure_item (src/SelectiveExpansion.ml[202,6851+0]..[210,7032+14])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[202,6851+4]..[202,6851+16])
                    Ppat_tuple
                    [
                      pattern (src/SelectiveExpansion.ml[202,6851+4]..[202,6851+8])
                        Ppat_var "mark" (src/SelectiveExpansion.ml[202,6851+4]..[202,6851+8])
                      pattern (src/SelectiveExpansion.ml[202,6851+10]..[202,6851+16])
                        Ppat_var "marked" (src/SelectiveExpansion.ml[202,6851+10]..[202,6851+16])
                    ]
                  expression (src/SelectiveExpansion.ml[203,6870+2]..[210,7032+14])
                    Pexp_letmodule "H" (src/SelectiveExpansion.ml[203,6870+13]..[203,6870+14])
                    module_expr (src/SelectiveExpansion.ml[203,6870+17]..[203,6870+36])
                      Pmod_apply
                      module_expr (src/SelectiveExpansion.ml[203,6870+17]..[203,6870+29])
                        Pmod_ident "Hashtbl.Make" (src/SelectiveExpansion.ml[203,6870+17]..[203,6870+29])
                      module_expr (src/SelectiveExpansion.ml[203,6870+30]..[203,6870+35])
                        Pmod_ident "Label" (src/SelectiveExpansion.ml[203,6870+30]..[203,6870+35])
                    expression (src/SelectiveExpansion.ml[204,6910+2]..[210,7032+14])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/SelectiveExpansion.ml[204,6910+6]..[204,6910+11])
                            Ppat_var "table" (src/SelectiveExpansion.ml[204,6910+6]..[204,6910+11])
                          expression (src/SelectiveExpansion.ml[204,6910+14]..[204,6910+26])
                            Pexp_apply
                            expression (src/SelectiveExpansion.ml[204,6910+14]..[204,6910+22])
                              Pexp_ident "H.create" (src/SelectiveExpansion.ml[204,6910+14]..[204,6910+22])
                            [
                              <arg>
                              Nolabel
                                expression (src/SelectiveExpansion.ml[204,6910+23]..[204,6910+26])
                                  Pexp_constant PConst_int (128,None)
                            ]
                      ]
                      expression (src/SelectiveExpansion.ml[205,6940+2]..[210,7032+14])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/SelectiveExpansion.ml[205,6940+6]..[205,6940+10])
                              Ppat_var "mark" (src/SelectiveExpansion.ml[205,6940+6]..[205,6940+10])
                            expression (src/SelectiveExpansion.ml[205,6940+11]..[206,6959+24]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/SelectiveExpansion.ml[205,6940+11]..[205,6940+16])
                                Ppat_var "label" (src/SelectiveExpansion.ml[205,6940+11]..[205,6940+16])
                              expression (src/SelectiveExpansion.ml[206,6959+4]..[206,6959+24])
                                Pexp_apply
                                expression (src/SelectiveExpansion.ml[206,6959+4]..[206,6959+9])
                                  Pexp_ident "H.add" (src/SelectiveExpansion.ml[206,6959+4]..[206,6959+9])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/SelectiveExpansion.ml[206,6959+10]..[206,6959+15])
                                      Pexp_ident "table" (src/SelectiveExpansion.ml[206,6959+10]..[206,6959+15])
                                  <arg>
                                  Nolabel
                                    expression (src/SelectiveExpansion.ml[206,6959+16]..[206,6959+21])
                                      Pexp_ident "label" (src/SelectiveExpansion.ml[206,6959+16]..[206,6959+21])
                                  <arg>
                                  Nolabel
                                    expression (src/SelectiveExpansion.ml[206,6959+22]..[206,6959+24])
                                      Pexp_construct "()" (src/SelectiveExpansion.ml[206,6959+22]..[206,6959+24])
                                      None
                                ]
                          <def>
                            pattern (src/SelectiveExpansion.ml[207,6984+6]..[207,6984+12])
                              Ppat_var "marked" (src/SelectiveExpansion.ml[207,6984+6]..[207,6984+12])
                            expression (src/SelectiveExpansion.ml[207,6984+13]..[208,7005+21]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/SelectiveExpansion.ml[207,6984+13]..[207,6984+18])
                                Ppat_var "label" (src/SelectiveExpansion.ml[207,6984+13]..[207,6984+18])
                              expression (src/SelectiveExpansion.ml[208,7005+4]..[208,7005+21])
                                Pexp_apply
                                expression (src/SelectiveExpansion.ml[208,7005+4]..[208,7005+9])
                                  Pexp_ident "H.mem" (src/SelectiveExpansion.ml[208,7005+4]..[208,7005+9])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/SelectiveExpansion.ml[208,7005+10]..[208,7005+15])
                                      Pexp_ident "table" (src/SelectiveExpansion.ml[208,7005+10]..[208,7005+15])
                                  <arg>
                                  Nolabel
                                    expression (src/SelectiveExpansion.ml[208,7005+16]..[208,7005+21])
                                      Pexp_ident "label" (src/SelectiveExpansion.ml[208,7005+16]..[208,7005+21])
                                ]
                        ]
                        expression (src/SelectiveExpansion.ml[210,7032+2]..[210,7032+14])
                          Pexp_tuple
                          [
                            expression (src/SelectiveExpansion.ml[210,7032+2]..[210,7032+6])
                              Pexp_ident "mark" (src/SelectiveExpansion.ml[210,7032+2]..[210,7032+6])
                            expression (src/SelectiveExpansion.ml[210,7032+8]..[210,7032+14])
                              Pexp_ident "marked" (src/SelectiveExpansion.ml[210,7032+8]..[210,7032+14])
                          ]
              ]
            structure_item (src/SelectiveExpansion.ml[216,7196+0]..[224,7403+13])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[216,7196+4]..[216,7196+15])
                    Ppat_tuple
                    [
                      pattern (src/SelectiveExpansion.ml[216,7196+4]..[216,7196+8])
                        Ppat_var "emit" (src/SelectiveExpansion.ml[216,7196+4]..[216,7196+8])
                      pattern (src/SelectiveExpansion.ml[216,7196+10]..[216,7196+15])
                        Ppat_var "rules" (src/SelectiveExpansion.ml[216,7196+10]..[216,7196+15])
                    ]
                  expression (src/SelectiveExpansion.ml[217,7214+2]..[224,7403+13])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/SelectiveExpansion.ml[217,7214+6]..[217,7214+11])
                          Ppat_var "rules" (src/SelectiveExpansion.ml[217,7214+6]..[217,7214+11])
                        expression (src/SelectiveExpansion.ml[217,7214+14]..[217,7214+33])
                          Pexp_apply
                          expression (src/SelectiveExpansion.ml[217,7214+14]..[217,7214+17])
                            Pexp_ident "ref" (src/SelectiveExpansion.ml[217,7214+14]..[217,7214+17])
                          [
                            <arg>
                            Nolabel
                              expression (src/SelectiveExpansion.ml[217,7214+18]..[217,7214+33])
                                Pexp_ident "StringMap.empty" (src/SelectiveExpansion.ml[217,7214+18]..[217,7214+33])
                          ]
                    ]
                    expression (src/SelectiveExpansion.ml[218,7251+2]..[224,7403+13])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/SelectiveExpansion.ml[218,7251+6]..[218,7251+10])
                            Ppat_var "emit" (src/SelectiveExpansion.ml[218,7251+6]..[218,7251+10])
                          expression (src/SelectiveExpansion.ml[218,7251+11]..[220,7321+49]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/SelectiveExpansion.ml[218,7251+11]..[218,7251+15])
                              Ppat_var "rule" (src/SelectiveExpansion.ml[218,7251+11]..[218,7251+15])
                            expression (src/SelectiveExpansion.ml[219,7269+4]..[220,7321+49])
                              Pexp_sequence
                              expression (src/SelectiveExpansion.ml[219,7269+4]..[219,7269+50])
                                Pexp_assert
                                expression (src/SelectiveExpansion.ml[219,7269+11]..[219,7269+50])
                                  Pexp_apply
                                  expression (src/SelectiveExpansion.ml[219,7269+12]..[219,7269+15])
                                    Pexp_ident "not" (src/SelectiveExpansion.ml[219,7269+12]..[219,7269+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/SelectiveExpansion.ml[219,7269+16]..[219,7269+49])
                                        Pexp_apply
                                        expression (src/SelectiveExpansion.ml[219,7269+17]..[219,7269+30])
                                          Pexp_ident "StringMap.mem" (src/SelectiveExpansion.ml[219,7269+17]..[219,7269+30])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/SelectiveExpansion.ml[219,7269+31]..[219,7269+41])
                                              Pexp_field
                                              expression (src/SelectiveExpansion.ml[219,7269+31]..[219,7269+35])
                                                Pexp_ident "rule" (src/SelectiveExpansion.ml[219,7269+31]..[219,7269+35])
                                              "pr_nt" (src/SelectiveExpansion.ml[219,7269+36]..[219,7269+41])
                                          <arg>
                                          Nolabel
                                            expression (src/SelectiveExpansion.ml[219,7269+42]..[219,7269+48])
                                              Pexp_apply
                                              expression (src/SelectiveExpansion.ml[219,7269+42]..[219,7269+43])
                                                Pexp_ident "!" (src/SelectiveExpansion.ml[219,7269+42]..[219,7269+43])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/SelectiveExpansion.ml[219,7269+43]..[219,7269+48])
                                                    Pexp_ident "rules" (src/SelectiveExpansion.ml[219,7269+43]..[219,7269+48])
                                              ]
                                        ]
                                  ]
                              expression (src/SelectiveExpansion.ml[220,7321+4]..[220,7321+49])
                                Pexp_apply
                                expression (src/SelectiveExpansion.ml[220,7321+10]..[220,7321+12])
                                  Pexp_ident ":=" (src/SelectiveExpansion.ml[220,7321+10]..[220,7321+12])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/SelectiveExpansion.ml[220,7321+4]..[220,7321+9])
                                      Pexp_ident "rules" (src/SelectiveExpansion.ml[220,7321+4]..[220,7321+9])
                                  <arg>
                                  Nolabel
                                    expression (src/SelectiveExpansion.ml[220,7321+13]..[220,7321+49])
                                      Pexp_apply
                                      expression (src/SelectiveExpansion.ml[220,7321+13]..[220,7321+26])
                                        Pexp_ident "StringMap.add" (src/SelectiveExpansion.ml[220,7321+13]..[220,7321+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/SelectiveExpansion.ml[220,7321+27]..[220,7321+37])
                                            Pexp_field
                                            expression (src/SelectiveExpansion.ml[220,7321+27]..[220,7321+31])
                                              Pexp_ident "rule" (src/SelectiveExpansion.ml[220,7321+27]..[220,7321+31])
                                            "pr_nt" (src/SelectiveExpansion.ml[220,7321+32]..[220,7321+37])
                                        <arg>
                                        Nolabel
                                          expression (src/SelectiveExpansion.ml[220,7321+38]..[220,7321+42])
                                            Pexp_ident "rule" (src/SelectiveExpansion.ml[220,7321+38]..[220,7321+42])
                                        <arg>
                                        Nolabel
                                          expression (src/SelectiveExpansion.ml[220,7321+43]..[220,7321+49])
                                            Pexp_apply
                                            expression (src/SelectiveExpansion.ml[220,7321+43]..[220,7321+44])
                                              Pexp_ident "!" (src/SelectiveExpansion.ml[220,7321+43]..[220,7321+44])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/SelectiveExpansion.ml[220,7321+44]..[220,7321+49])
                                                  Pexp_ident "rules" (src/SelectiveExpansion.ml[220,7321+44]..[220,7321+49])
                                            ]
                                      ]
                                ]
                        <def>
                          pattern (src/SelectiveExpansion.ml[221,7371+6]..[221,7371+11])
                            Ppat_var "rules" (src/SelectiveExpansion.ml[221,7371+6]..[221,7371+11])
                          expression (src/SelectiveExpansion.ml[221,7371+11]..[222,7387+10]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/SelectiveExpansion.ml[221,7371+11]..[221,7371+13])
                              Ppat_construct "()" (src/SelectiveExpansion.ml[221,7371+11]..[221,7371+13])
                              None
                            expression (src/SelectiveExpansion.ml[222,7387+4]..[222,7387+10])
                              Pexp_apply
                              expression (src/SelectiveExpansion.ml[222,7387+4]..[222,7387+5])
                                Pexp_ident "!" (src/SelectiveExpansion.ml[222,7387+4]..[222,7387+5])
                              [
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[222,7387+5]..[222,7387+10])
                                    Pexp_ident "rules" (src/SelectiveExpansion.ml[222,7387+5]..[222,7387+10])
                              ]
                      ]
                      expression (src/SelectiveExpansion.ml[224,7403+2]..[224,7403+13])
                        Pexp_tuple
                        [
                          expression (src/SelectiveExpansion.ml[224,7403+2]..[224,7403+6])
                            Pexp_ident "emit" (src/SelectiveExpansion.ml[224,7403+2]..[224,7403+6])
                          expression (src/SelectiveExpansion.ml[224,7403+8]..[224,7403+13])
                            Pexp_ident "rules" (src/SelectiveExpansion.ml[224,7403+8]..[224,7403+13])
                        ]
              ]
            structure_item (src/SelectiveExpansion.ml[238,8108+0]..[245,8341+7])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[238,8108+4]..[238,8108+13])
                    Ppat_var "new_claim" (src/SelectiveExpansion.ml[238,8108+4]..[238,8108+13])
                  expression (src/SelectiveExpansion.ml[238,8108+14]..[245,8341+7]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/SelectiveExpansion.ml[238,8108+14]..[238,8108+16])
                      Ppat_construct "()" (src/SelectiveExpansion.ml[238,8108+14]..[238,8108+16])
                      None
                    expression (src/SelectiveExpansion.ml[238,8108+17]..[245,8341+7])
                      Pexp_constraint
                      expression (src/SelectiveExpansion.ml[239,8146+2]..[245,8341+7])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/SelectiveExpansion.ml[239,8146+6]..[239,8146+11])
                              Ppat_var "names" (src/SelectiveExpansion.ml[239,8146+6]..[239,8146+11])
                            expression (src/SelectiveExpansion.ml[239,8146+14]..[239,8146+33])
                              Pexp_apply
                              expression (src/SelectiveExpansion.ml[239,8146+14]..[239,8146+17])
                                Pexp_ident "ref" (src/SelectiveExpansion.ml[239,8146+14]..[239,8146+17])
                              [
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[239,8146+18]..[239,8146+33])
                                    Pexp_ident "StringSet.empty" (src/SelectiveExpansion.ml[239,8146+18]..[239,8146+33])
                              ]
                        ]
                        expression (src/SelectiveExpansion.ml[240,8183+2]..[245,8341+7])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/SelectiveExpansion.ml[240,8183+6]..[240,8183+11])
                                Ppat_var "claim" (src/SelectiveExpansion.ml[240,8183+6]..[240,8183+11])
                              expression (src/SelectiveExpansion.ml[240,8183+12]..[243,8297+38]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/SelectiveExpansion.ml[240,8183+12]..[240,8183+16])
                                  Ppat_var "name" (src/SelectiveExpansion.ml[240,8183+12]..[240,8183+16])
                                expression (src/SelectiveExpansion.ml[241,8202+4]..[243,8297+38])
                                  Pexp_sequence
                                  expression (src/SelectiveExpansion.ml[241,8202+4]..[242,8240+55])
                                    Pexp_ifthenelse
                                    expression (src/SelectiveExpansion.ml[241,8202+7]..[241,8202+32])
                                      Pexp_apply
                                      expression (src/SelectiveExpansion.ml[241,8202+7]..[241,8202+20])
                                        Pexp_ident "StringSet.mem" (src/SelectiveExpansion.ml[241,8202+7]..[241,8202+20])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/SelectiveExpansion.ml[241,8202+21]..[241,8202+25])
                                            Pexp_ident "name" (src/SelectiveExpansion.ml[241,8202+21]..[241,8202+25])
                                        <arg>
                                        Nolabel
                                          expression (src/SelectiveExpansion.ml[241,8202+26]..[241,8202+32])
                                            Pexp_apply
                                            expression (src/SelectiveExpansion.ml[241,8202+26]..[241,8202+27])
                                              Pexp_ident "!" (src/SelectiveExpansion.ml[241,8202+26]..[241,8202+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/SelectiveExpansion.ml[241,8202+27]..[241,8202+32])
                                                  Pexp_ident "names" (src/SelectiveExpansion.ml[241,8202+27]..[241,8202+32])
                                            ]
                                      ]
                                    expression (src/SelectiveExpansion.ml[242,8240+6]..[242,8240+55])
                                      Pexp_apply
                                      expression (src/SelectiveExpansion.ml[242,8240+6]..[242,8240+17])
                                        Pexp_ident "Error.error" (src/SelectiveExpansion.ml[242,8240+6]..[242,8240+17])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/SelectiveExpansion.ml[242,8240+18]..[242,8240+20])
                                            Pexp_construct "[]" (src/SelectiveExpansion.ml[242,8240+18]..[242,8240+20])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (src/SelectiveExpansion.ml[242,8240+21]..[242,8240+50])
                                            Pexp_constant PConst_string("internal name clash over %s",(src/SelectiveExpansion.ml[242,8240+22]..[242,8240+49]),None)
                                        <arg>
                                        Nolabel
                                          expression (src/SelectiveExpansion.ml[242,8240+51]..[242,8240+55])
                                            Pexp_ident "name" (src/SelectiveExpansion.ml[242,8240+51]..[242,8240+55])
                                      ]
                                    None
                                  expression (src/SelectiveExpansion.ml[243,8297+4]..[243,8297+38])
                                    Pexp_apply
                                    expression (src/SelectiveExpansion.ml[243,8297+10]..[243,8297+12])
                                      Pexp_ident ":=" (src/SelectiveExpansion.ml[243,8297+10]..[243,8297+12])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/SelectiveExpansion.ml[243,8297+4]..[243,8297+9])
                                          Pexp_ident "names" (src/SelectiveExpansion.ml[243,8297+4]..[243,8297+9])
                                      <arg>
                                      Nolabel
                                        expression (src/SelectiveExpansion.ml[243,8297+13]..[243,8297+38])
                                          Pexp_apply
                                          expression (src/SelectiveExpansion.ml[243,8297+13]..[243,8297+26])
                                            Pexp_ident "StringSet.add" (src/SelectiveExpansion.ml[243,8297+13]..[243,8297+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/SelectiveExpansion.ml[243,8297+27]..[243,8297+31])
                                                Pexp_ident "name" (src/SelectiveExpansion.ml[243,8297+27]..[243,8297+31])
                                            <arg>
                                            Nolabel
                                              expression (src/SelectiveExpansion.ml[243,8297+32]..[243,8297+38])
                                                Pexp_apply
                                                expression (src/SelectiveExpansion.ml[243,8297+32]..[243,8297+33])
                                                  Pexp_ident "!" (src/SelectiveExpansion.ml[243,8297+32]..[243,8297+33])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/SelectiveExpansion.ml[243,8297+33]..[243,8297+38])
                                                      Pexp_ident "names" (src/SelectiveExpansion.ml[243,8297+33]..[243,8297+38])
                                                ]
                                          ]
                                    ]
                          ]
                          expression (src/SelectiveExpansion.ml[245,8341+2]..[245,8341+7])
                            Pexp_ident "claim" (src/SelectiveExpansion.ml[245,8341+2]..[245,8341+7])
                      core_type (src/SelectiveExpansion.ml[238,8108+20]..[238,8108+34])
                        Ptyp_arrow
                        Nolabel
                        core_type (src/SelectiveExpansion.ml[238,8108+20]..[238,8108+26])
                          Ptyp_constr "string" (src/SelectiveExpansion.ml[238,8108+20]..[238,8108+26])
                          []
                        core_type (src/SelectiveExpansion.ml[238,8108+30]..[238,8108+34])
                          Ptyp_constr "unit" (src/SelectiveExpansion.ml[238,8108+30]..[238,8108+34])
                          []
              ]
            structure_item (src/SelectiveExpansion.ml[247,8350+0]..[254,8581+3])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[247,8350+4]..[247,8350+10])
                    Ppat_var "mangle" (src/SelectiveExpansion.ml[247,8350+4]..[247,8350+10])
                  core_type (src/SelectiveExpansion.ml[247,8350+13]..[247,8350+33])
                    Ptyp_arrow
                    Nolabel
                    core_type (src/SelectiveExpansion.ml[247,8350+13]..[247,8350+18])
                      Ptyp_constr "label" (src/SelectiveExpansion.ml[247,8350+13]..[247,8350+18])
                      []
                    core_type (src/SelectiveExpansion.ml[247,8350+22]..[247,8350+33])
                      Ptyp_constr "nonterminal" (src/SelectiveExpansion.ml[247,8350+22]..[247,8350+33])
                      []
                  expression (src/SelectiveExpansion.ml[248,8386+2]..[254,8581+3])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/SelectiveExpansion.ml[248,8386+6]..[248,8386+18])
                          Ppat_var "ensure_fresh" (src/SelectiveExpansion.ml[248,8386+6]..[248,8386+18])
                        expression (src/SelectiveExpansion.ml[248,8386+21]..[248,8386+32])
                          Pexp_apply
                          expression (src/SelectiveExpansion.ml[248,8386+21]..[248,8386+30])
                            Pexp_ident "new_claim" (src/SelectiveExpansion.ml[248,8386+21]..[248,8386+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/SelectiveExpansion.ml[248,8386+30]..[248,8386+32])
                                Pexp_construct "()" (src/SelectiveExpansion.ml[248,8386+30]..[248,8386+32])
                                None
                          ]
                    ]
                    expression (src/SelectiveExpansion.ml[249,8422+2]..[254,8581+3])
                      Pexp_letmodule "M" (src/SelectiveExpansion.ml[249,8422+13]..[249,8422+14])
                      module_expr (src/SelectiveExpansion.ml[249,8422+17]..[249,8422+49])
                        Pmod_apply
                        module_expr (src/SelectiveExpansion.ml[249,8422+17]..[249,8422+42])
                          Pmod_ident "Fix.Memoize.ForHashedType" (src/SelectiveExpansion.ml[249,8422+17]..[249,8422+42])
                        module_expr (src/SelectiveExpansion.ml[249,8422+43]..[249,8422+48])
                          Pmod_ident "Label" (src/SelectiveExpansion.ml[249,8422+43]..[249,8422+48])
                      expression (src/SelectiveExpansion.ml[250,8475+2]..[254,8581+3])
                        Pexp_apply
                        expression (src/SelectiveExpansion.ml[250,8475+2]..[250,8475+11])
                          Pexp_ident "M.memoize" (src/SelectiveExpansion.ml[250,8475+2]..[250,8475+11])
                        [
                          <arg>
                          Nolabel
                            expression (src/SelectiveExpansion.ml[250,8475+12]..[254,8581+3])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/SelectiveExpansion.ml[250,8475+17]..[250,8475+22])
                                Ppat_var "label" (src/SelectiveExpansion.ml[250,8475+17]..[250,8475+22])
                              expression (src/SelectiveExpansion.ml[251,8501+4]..[253,8572+8])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/SelectiveExpansion.ml[251,8501+8]..[251,8501+12])
                                      Ppat_var "name" (src/SelectiveExpansion.ml[251,8501+8]..[251,8501+12])
                                    expression (src/SelectiveExpansion.ml[251,8501+15]..[251,8501+27])
                                      Pexp_apply
                                      expression (src/SelectiveExpansion.ml[251,8501+15]..[251,8501+21])
                                        Pexp_ident "mangle" (src/SelectiveExpansion.ml[251,8501+15]..[251,8501+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/SelectiveExpansion.ml[251,8501+22]..[251,8501+27])
                                            Pexp_ident "label" (src/SelectiveExpansion.ml[251,8501+22]..[251,8501+27])
                                      ]
                                ]
                                expression (src/SelectiveExpansion.ml[252,8532+4]..[253,8572+8])
                                  Pexp_sequence
                                  expression (src/SelectiveExpansion.ml[252,8532+4]..[252,8532+38])
                                    Pexp_apply
                                    expression (src/SelectiveExpansion.ml[252,8532+4]..[252,8532+16])
                                      Pexp_ident "ensure_fresh" (src/SelectiveExpansion.ml[252,8532+4]..[252,8532+16])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/SelectiveExpansion.ml[252,8532+17]..[252,8532+38])
                                          Pexp_apply
                                          expression (src/SelectiveExpansion.ml[252,8532+18]..[252,8532+32])
                                            Pexp_ident "Misc.normalize" (src/SelectiveExpansion.ml[252,8532+18]..[252,8532+32])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/SelectiveExpansion.ml[252,8532+33]..[252,8532+37])
                                                Pexp_ident "name" (src/SelectiveExpansion.ml[252,8532+33]..[252,8532+37])
                                          ]
                                    ]
                                  expression (src/SelectiveExpansion.ml[253,8572+4]..[253,8572+8])
                                    Pexp_ident "name" (src/SelectiveExpansion.ml[253,8572+4]..[253,8572+8])
                        ]
              ]
            structure_item (src/SelectiveExpansion.ml[284,9869+0]..[328,11647+44])
              Pstr_value Rec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[284,9869+8]..[284,9869+17])
                    Ppat_var "recognize" (src/SelectiveExpansion.ml[284,9869+8]..[284,9869+17])
                  expression (src/SelectiveExpansion.ml[284,9869+18]..[328,11647+44]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/SelectiveExpansion.ml[284,9869+18]..[284,9869+37])
                      Ppat_constraint
                      pattern (src/SelectiveExpansion.ml[284,9869+19]..[284,9869+24])
                        Ppat_var "param" (src/SelectiveExpansion.ml[284,9869+19]..[284,9869+24])
                      core_type (src/SelectiveExpansion.ml[284,9869+27]..[284,9869+36])
                        Ptyp_constr "parameter" (src/SelectiveExpansion.ml[284,9869+27]..[284,9869+36])
                        []
                    expression (src/SelectiveExpansion.ml[284,9869+38]..[328,11647+44])
                      Pexp_constraint
                      expression (src/SelectiveExpansion.ml[286,9996+2]..[328,11647+44])
                        Pexp_match
                        expression (src/SelectiveExpansion.ml[286,9996+8]..[286,9996+13])
                          Pexp_ident "param" (src/SelectiveExpansion.ml[286,9996+8]..[286,9996+13])
                        [
                          <case>
                            pattern (src/SelectiveExpansion.ml[287,10015+4]..[287,10015+24])
                              Ppat_construct "ParameterAnonymous" (src/SelectiveExpansion.ml[287,10015+4]..[287,10015+22])
                              Some
                                []
                                pattern (src/SelectiveExpansion.ml[287,10015+23]..[287,10015+24])
                                  Ppat_any
                            expression (src/SelectiveExpansion.ml[288,10043+6]..[288,10043+18])
                              Pexp_assert
                              expression (src/SelectiveExpansion.ml[288,10043+13]..[288,10043+18])
                                Pexp_construct "false" (src/SelectiveExpansion.ml[288,10043+13]..[288,10043+18])
                                None
                          <case>
                            pattern (src/SelectiveExpansion.ml[289,10062+4]..[289,10062+18])
                              Ppat_construct "ParameterVar" (src/SelectiveExpansion.ml[289,10062+4]..[289,10062+16])
                              Some
                                []
                                pattern (src/SelectiveExpansion.ml[289,10062+17]..[289,10062+18])
                                  Ppat_any
                            expression (src/SelectiveExpansion.ml[290,10084+6]..[290,10084+11])
                              Pexp_ident "param" (src/SelectiveExpansion.ml[290,10084+6]..[290,10084+11])
                          <case>
                            pattern (src/SelectiveExpansion.ml[291,10096+4]..[291,10096+26])
                              Ppat_construct "ParameterApp" (src/SelectiveExpansion.ml[291,10096+4]..[291,10096+16])
                              Some
                                []
                                pattern (src/SelectiveExpansion.ml[291,10096+17]..[291,10096+26])
                                  Ppat_tuple
                                  [
                                    pattern (src/SelectiveExpansion.ml[291,10096+18]..[291,10096+21])
                                      Ppat_var "sym" (src/SelectiveExpansion.ml[291,10096+18]..[291,10096+21])
                                    pattern (src/SelectiveExpansion.ml[291,10096+23]..[291,10096+25])
                                      Ppat_var "ps" (src/SelectiveExpansion.ml[291,10096+23]..[291,10096+25])
                                  ]
                            expression (src/SelectiveExpansion.ml[292,10126+6]..[328,11647+44])
                              Pexp_sequence
                              expression (src/SelectiveExpansion.ml[292,10126+6]..[292,10126+23])
                                Pexp_assert
                                expression (src/SelectiveExpansion.ml[292,10126+13]..[292,10126+23])
                                  Pexp_apply
                                  expression (src/SelectiveExpansion.ml[292,10126+17]..[292,10126+19])
                                    Pexp_ident "<>" (src/SelectiveExpansion.ml[292,10126+17]..[292,10126+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/SelectiveExpansion.ml[292,10126+14]..[292,10126+16])
                                        Pexp_ident "ps" (src/SelectiveExpansion.ml[292,10126+14]..[292,10126+16])
                                    <arg>
                                    Nolabel
                                      expression (src/SelectiveExpansion.ml[292,10126+20]..[292,10126+22])
                                        Pexp_construct "[]" (src/SelectiveExpansion.ml[292,10126+20]..[292,10126+22])
                                        None
                                  ]
                              expression (src/SelectiveExpansion.ml[293,10151+6]..[328,11647+44])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/SelectiveExpansion.ml[293,10151+10]..[293,10151+11])
                                      Ppat_var "x" (src/SelectiveExpansion.ml[293,10151+10]..[293,10151+11])
                                    expression (src/SelectiveExpansion.ml[293,10151+14]..[293,10151+23])
                                      Pexp_apply
                                      expression (src/SelectiveExpansion.ml[293,10151+14]..[293,10151+19])
                                        Pexp_ident "value" (src/SelectiveExpansion.ml[293,10151+14]..[293,10151+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/SelectiveExpansion.ml[293,10151+20]..[293,10151+23])
                                            Pexp_ident "sym" (src/SelectiveExpansion.ml[293,10151+20]..[293,10151+23])
                                      ]
                                ]
                                expression (src/SelectiveExpansion.ml[301,10677+6]..[328,11647+44])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/SelectiveExpansion.ml[301,10677+10]..[301,10677+25])
                                        Ppat_tuple
                                        [
                                          pattern (src/SelectiveExpansion.ml[301,10677+10]..[301,10677+14])
                                            Ppat_var "inst" (src/SelectiveExpansion.ml[301,10677+10]..[301,10677+14])
                                          pattern (src/SelectiveExpansion.ml[301,10677+16]..[301,10677+25])
                                            Ppat_var "residuals" (src/SelectiveExpansion.ml[301,10677+16]..[301,10677+25])
                                        ]
                                      expression (src/SelectiveExpansion.ml[302,10705+8]..[323,11526+27])
                                        Pexp_match
                                        expression (src/SelectiveExpansion.ml[302,10705+14]..[302,10705+18])
                                          Pexp_ident "mode" (src/SelectiveExpansion.ml[302,10705+14]..[302,10705+18])
                                        [
                                          <case>
                                            pattern (src/SelectiveExpansion.ml[303,10729+10]..[303,10729+19])
                                              Ppat_construct "ExpandAll" (src/SelectiveExpansion.ml[303,10729+10]..[303,10729+19])
                                              None
                                            expression (src/SelectiveExpansion.ml[305,10799+12]..[307,10886+27])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/SelectiveExpansion.ml[305,10799+16]..[305,10799+20])
                                                    Ppat_var "inst" (src/SelectiveExpansion.ml[305,10799+16]..[305,10799+20])
                                                  expression (src/SelectiveExpansion.ml[305,10799+23]..[305,10799+52])
                                                    Pexp_apply
                                                    expression (src/SelectiveExpansion.ml[305,10799+23]..[305,10799+31])
                                                      Pexp_ident "List.map" (src/SelectiveExpansion.ml[305,10799+23]..[305,10799+31])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/SelectiveExpansion.ml[305,10799+32]..[305,10799+49])
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (src/SelectiveExpansion.ml[305,10799+37]..[305,10799+38])
                                                            Ppat_var "p" (src/SelectiveExpansion.ml[305,10799+37]..[305,10799+38])
                                                          expression (src/SelectiveExpansion.ml[305,10799+42]..[305,10799+48])
                                                            Pexp_construct "Some" (src/SelectiveExpansion.ml[305,10799+42]..[305,10799+46])
                                                            Some
                                                              expression (src/SelectiveExpansion.ml[305,10799+47]..[305,10799+48])
                                                                Pexp_ident "p" (src/SelectiveExpansion.ml[305,10799+47]..[305,10799+48])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/SelectiveExpansion.ml[305,10799+50]..[305,10799+52])
                                                          Pexp_ident "ps" (src/SelectiveExpansion.ml[305,10799+50]..[305,10799+52])
                                                    ]
                                                <def>
                                                  pattern (src/SelectiveExpansion.ml[306,10852+16]..[306,10852+25])
                                                    Ppat_var "residuals" (src/SelectiveExpansion.ml[306,10852+16]..[306,10852+25])
                                                  expression (src/SelectiveExpansion.ml[306,10852+28]..[306,10852+30])
                                                    Pexp_construct "[]" (src/SelectiveExpansion.ml[306,10852+28]..[306,10852+30])
                                                    None
                                              ]
                                              expression (src/SelectiveExpansion.ml[307,10886+12]..[307,10886+27])
                                                Pexp_tuple
                                                [
                                                  expression (src/SelectiveExpansion.ml[307,10886+12]..[307,10886+16])
                                                    Pexp_ident "inst" (src/SelectiveExpansion.ml[307,10886+12]..[307,10886+16])
                                                  expression (src/SelectiveExpansion.ml[307,10886+18]..[307,10886+27])
                                                    Pexp_ident "residuals" (src/SelectiveExpansion.ml[307,10886+18]..[307,10886+27])
                                                ]
                                          <case>
                                            pattern (src/SelectiveExpansion.ml[308,10914+10]..[308,10914+26])
                                              Ppat_construct "ExpandHigherSort" (src/SelectiveExpansion.ml[308,10914+10]..[308,10914+26])
                                              None
                                            expression (src/SelectiveExpansion.ml[310,11011+12]..[323,11526+27])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/SelectiveExpansion.ml[310,11011+16]..[310,11011+18])
                                                    Ppat_var "ss" (src/SelectiveExpansion.ml[310,11011+16]..[310,11011+18])
                                                  core_type (src/SelectiveExpansion.ml[310,11011+21]..[310,11011+30])
                                                    Ptyp_constr "list" (src/SelectiveExpansion.ml[310,11011+26]..[310,11011+30])
                                                    [
                                                      core_type (src/SelectiveExpansion.ml[310,11011+21]..[310,11011+25])
                                                        Ptyp_constr "sort" (src/SelectiveExpansion.ml[310,11011+21]..[310,11011+25])
                                                        []
                                                    ]
                                                  expression (src/SelectiveExpansion.ml[310,11011+33]..[310,11011+65])
                                                    Pexp_apply
                                                    expression (src/SelectiveExpansion.ml[310,11011+33]..[310,11011+39])
                                                      Pexp_ident "domain" (src/SelectiveExpansion.ml[310,11011+33]..[310,11011+39])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/SelectiveExpansion.ml[310,11011+40]..[310,11011+65])
                                                          Pexp_apply
                                                          expression (src/SelectiveExpansion.ml[310,11011+41]..[310,11011+45])
                                                            Pexp_ident "sort" (src/SelectiveExpansion.ml[310,11011+41]..[310,11011+45])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/SelectiveExpansion.ml[310,11011+46]..[310,11011+64])
                                                                Pexp_construct "ParameterVar" (src/SelectiveExpansion.ml[310,11011+47]..[310,11011+59])
                                                                Some
                                                                  expression (src/SelectiveExpansion.ml[310,11011+60]..[310,11011+63])
                                                                    Pexp_ident "sym" (src/SelectiveExpansion.ml[310,11011+60]..[310,11011+63])
                                                          ]
                                                    ]
                                              ]
                                              expression (src/SelectiveExpansion.ml[311,11080+12]..[323,11526+27])
                                                Pexp_sequence
                                                expression (src/SelectiveExpansion.ml[311,11080+12]..[311,11080+52])
                                                  Pexp_assert
                                                  expression (src/SelectiveExpansion.ml[311,11080+19]..[311,11080+52])
                                                    Pexp_apply
                                                    expression (src/SelectiveExpansion.ml[311,11080+35]..[311,11080+36])
                                                      Pexp_ident "=" (src/SelectiveExpansion.ml[311,11080+35]..[311,11080+36])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/SelectiveExpansion.ml[311,11080+20]..[311,11080+34])
                                                          Pexp_apply
                                                          expression (src/SelectiveExpansion.ml[311,11080+20]..[311,11080+31])
                                                            Pexp_ident "List.length" (src/SelectiveExpansion.ml[311,11080+20]..[311,11080+31])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/SelectiveExpansion.ml[311,11080+32]..[311,11080+34])
                                                                Pexp_ident "ps" (src/SelectiveExpansion.ml[311,11080+32]..[311,11080+34])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (src/SelectiveExpansion.ml[311,11080+37]..[311,11080+51])
                                                          Pexp_apply
                                                          expression (src/SelectiveExpansion.ml[311,11080+37]..[311,11080+48])
                                                            Pexp_ident "List.length" (src/SelectiveExpansion.ml[311,11080+37]..[311,11080+48])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/SelectiveExpansion.ml[311,11080+49]..[311,11080+51])
                                                                Pexp_ident "ss" (src/SelectiveExpansion.ml[311,11080+49]..[311,11080+51])
                                                          ]
                                                    ]
                                                expression (src/SelectiveExpansion.ml[312,11134+12]..[323,11526+27])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (src/SelectiveExpansion.ml[312,11134+16]..[312,11134+19])
                                                        Ppat_var "pss" (src/SelectiveExpansion.ml[312,11134+16]..[312,11134+19])
                                                      expression (src/SelectiveExpansion.ml[312,11134+22]..[312,11134+40])
                                                        Pexp_apply
                                                        expression (src/SelectiveExpansion.ml[312,11134+22]..[312,11134+34])
                                                          Pexp_ident "List.combine" (src/SelectiveExpansion.ml[312,11134+22]..[312,11134+34])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/SelectiveExpansion.ml[312,11134+35]..[312,11134+37])
                                                              Pexp_ident "ps" (src/SelectiveExpansion.ml[312,11134+35]..[312,11134+37])
                                                          <arg>
                                                          Nolabel
                                                            expression (src/SelectiveExpansion.ml[312,11134+38]..[312,11134+40])
                                                              Pexp_ident "ss" (src/SelectiveExpansion.ml[312,11134+38]..[312,11134+40])
                                                        ]
                                                  ]
                                                  expression (src/SelectiveExpansion.ml[313,11178+12]..[323,11526+27])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (src/SelectiveExpansion.ml[313,11178+16]..[313,11178+20])
                                                          Ppat_var "inst" (src/SelectiveExpansion.ml[313,11178+16]..[313,11178+20])
                                                        expression (src/SelectiveExpansion.ml[314,11201+14]..[316,11267+60])
                                                          Pexp_apply
                                                          expression (src/SelectiveExpansion.ml[315,11219+14]..[315,11219+16])
                                                            Pexp_ident "|>" (src/SelectiveExpansion.ml[315,11219+14]..[315,11219+16])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/SelectiveExpansion.ml[314,11201+14]..[314,11201+17])
                                                                Pexp_ident "pss" (src/SelectiveExpansion.ml[314,11201+14]..[314,11201+17])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/SelectiveExpansion.ml[315,11219+17]..[316,11267+60])
                                                                Pexp_apply
                                                                expression (src/SelectiveExpansion.ml[315,11219+17]..[315,11219+25])
                                                                  Pexp_ident "List.map" (src/SelectiveExpansion.ml[315,11219+17]..[315,11219+25])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/SelectiveExpansion.ml[315,11219+26]..[316,11267+60])
                                                                      Pexp_fun
                                                                      Nolabel
                                                                      None
                                                                      pattern (src/SelectiveExpansion.ml[315,11219+31]..[315,11219+44])
Ppat_tuple
[
  pattern (src/SelectiveExpansion.ml[315,11219+32]..[315,11219+37])
    Ppat_var "param" (src/SelectiveExpansion.ml[315,11219+32]..[315,11219+37])
  pattern (src/SelectiveExpansion.ml[315,11219+39]..[315,11219+43])
    Ppat_var "sort" (src/SelectiveExpansion.ml[315,11219+39]..[315,11219+43])
]
                                                                      expression (src/SelectiveExpansion.ml[316,11267+19]..[316,11267+59])
Pexp_ifthenelse
expression (src/SelectiveExpansion.ml[316,11267+22]..[316,11267+33])
  Pexp_apply
  expression (src/SelectiveExpansion.ml[316,11267+27]..[316,11267+28])
    Pexp_ident "=" (src/SelectiveExpansion.ml[316,11267+27]..[316,11267+28])
  [
    <arg>
    Nolabel
      expression (src/SelectiveExpansion.ml[316,11267+22]..[316,11267+26])
        Pexp_ident "sort" (src/SelectiveExpansion.ml[316,11267+22]..[316,11267+26])
    <arg>
    Nolabel
      expression (src/SelectiveExpansion.ml[316,11267+29]..[316,11267+33])
        Pexp_ident "star" (src/SelectiveExpansion.ml[316,11267+29]..[316,11267+33])
  ]
expression (src/SelectiveExpansion.ml[316,11267+39]..[316,11267+43])
  Pexp_construct "None" (src/SelectiveExpansion.ml[316,11267+39]..[316,11267+43])
  None
Some
  expression (src/SelectiveExpansion.ml[316,11267+49]..[316,11267+59])
    Pexp_construct "Some" (src/SelectiveExpansion.ml[316,11267+49]..[316,11267+53])
    Some
      expression (src/SelectiveExpansion.ml[316,11267+54]..[316,11267+59])
        Pexp_ident "param" (src/SelectiveExpansion.ml[316,11267+54]..[316,11267+59])
                                                                ]
                                                          ]
                                                    ]
                                                    expression (src/SelectiveExpansion.ml[318,11343+12]..[323,11526+27])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (src/SelectiveExpansion.ml[318,11343+16]..[318,11343+25])
                                                            Ppat_var "residuals" (src/SelectiveExpansion.ml[318,11343+16]..[318,11343+25])
                                                          expression (src/SelectiveExpansion.ml[319,11371+14]..[321,11449+61])
                                                            Pexp_apply
                                                            expression (src/SelectiveExpansion.ml[321,11449+14]..[321,11449+16])
                                                              Pexp_ident "|>" (src/SelectiveExpansion.ml[321,11449+14]..[321,11449+16])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/SelectiveExpansion.ml[319,11371+14]..[320,11389+59])
                                                                  Pexp_apply
                                                                  expression (src/SelectiveExpansion.ml[320,11389+14]..[320,11389+16])
                                                                    Pexp_ident "|>" (src/SelectiveExpansion.ml[320,11389+14]..[320,11389+16])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/SelectiveExpansion.ml[319,11371+14]..[319,11371+17])
Pexp_ident "pss" (src/SelectiveExpansion.ml[319,11371+14]..[319,11371+17])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/SelectiveExpansion.ml[320,11389+17]..[320,11389+59])
Pexp_apply
expression (src/SelectiveExpansion.ml[320,11389+17]..[320,11389+28])
  Pexp_ident "List.filter" (src/SelectiveExpansion.ml[320,11389+17]..[320,11389+28])
[
  <arg>
  Nolabel
    expression (src/SelectiveExpansion.ml[320,11389+29]..[320,11389+59])
      Pexp_fun
      Nolabel
      None
      pattern (src/SelectiveExpansion.ml[320,11389+34]..[320,11389+43])
        Ppat_tuple
        [
          pattern (src/SelectiveExpansion.ml[320,11389+35]..[320,11389+36])
            Ppat_any
          pattern (src/SelectiveExpansion.ml[320,11389+38]..[320,11389+42])
            Ppat_var "sort" (src/SelectiveExpansion.ml[320,11389+38]..[320,11389+42])
        ]
      expression (src/SelectiveExpansion.ml[320,11389+47]..[320,11389+58])
        Pexp_apply
        expression (src/SelectiveExpansion.ml[320,11389+52]..[320,11389+53])
          Pexp_ident "=" (src/SelectiveExpansion.ml[320,11389+52]..[320,11389+53])
        [
          <arg>
          Nolabel
            expression (src/SelectiveExpansion.ml[320,11389+47]..[320,11389+51])
              Pexp_ident "sort" (src/SelectiveExpansion.ml[320,11389+47]..[320,11389+51])
          <arg>
          Nolabel
            expression (src/SelectiveExpansion.ml[320,11389+54]..[320,11389+58])
              Pexp_ident "star" (src/SelectiveExpansion.ml[320,11389+54]..[320,11389+58])
        ]
]
                                                                  ]
                                                              <arg>
                                                              Nolabel
                                                                expression (src/SelectiveExpansion.ml[321,11449+17]..[321,11449+61])
                                                                  Pexp_apply
                                                                  expression (src/SelectiveExpansion.ml[321,11449+17]..[321,11449+25])
                                                                    Pexp_ident "List.map" (src/SelectiveExpansion.ml[321,11449+17]..[321,11449+25])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/SelectiveExpansion.ml[321,11449+26]..[321,11449+61])
Pexp_fun
Nolabel
None
pattern (src/SelectiveExpansion.ml[321,11449+31]..[321,11449+41])
  Ppat_tuple
  [
    pattern (src/SelectiveExpansion.ml[321,11449+32]..[321,11449+37])
      Ppat_var "param" (src/SelectiveExpansion.ml[321,11449+32]..[321,11449+37])
    pattern (src/SelectiveExpansion.ml[321,11449+39]..[321,11449+40])
      Ppat_any
  ]
expression (src/SelectiveExpansion.ml[321,11449+45]..[321,11449+60])
  Pexp_apply
  expression (src/SelectiveExpansion.ml[321,11449+45]..[321,11449+54])
    Pexp_ident "recognize" (src/SelectiveExpansion.ml[321,11449+45]..[321,11449+54])
  [
    <arg>
    Nolabel
      expression (src/SelectiveExpansion.ml[321,11449+55]..[321,11449+60])
        Pexp_ident "param" (src/SelectiveExpansion.ml[321,11449+55]..[321,11449+60])
  ]
                                                                  ]
                                                            ]
                                                      ]
                                                      expression (src/SelectiveExpansion.ml[323,11526+12]..[323,11526+27])
                                                        Pexp_tuple
                                                        [
                                                          expression (src/SelectiveExpansion.ml[323,11526+12]..[323,11526+16])
                                                            Pexp_ident "inst" (src/SelectiveExpansion.ml[323,11526+12]..[323,11526+16])
                                                          expression (src/SelectiveExpansion.ml[323,11526+18]..[323,11526+27])
                                                            Pexp_ident "residuals" (src/SelectiveExpansion.ml[323,11526+18]..[323,11526+27])
                                                        ]
                                        ]
                                  ]
                                  expression (src/SelectiveExpansion.ml[325,11563+6]..[328,11647+44])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/SelectiveExpansion.ml[325,11563+10]..[325,11563+15])
                                          Ppat_var "label" (src/SelectiveExpansion.ml[325,11563+10]..[325,11563+15])
                                        expression (src/SelectiveExpansion.ml[325,11563+18]..[325,11563+27])
                                          Pexp_tuple
                                          [
                                            expression (src/SelectiveExpansion.ml[325,11563+19]..[325,11563+20])
                                              Pexp_ident "x" (src/SelectiveExpansion.ml[325,11563+19]..[325,11563+20])
                                            expression (src/SelectiveExpansion.ml[325,11563+22]..[325,11563+26])
                                              Pexp_ident "inst" (src/SelectiveExpansion.ml[325,11563+22]..[325,11563+26])
                                          ]
                                    ]
                                    expression (src/SelectiveExpansion.ml[326,11594+6]..[328,11647+44])
                                      Pexp_sequence
                                      expression (src/SelectiveExpansion.ml[326,11594+6]..[326,11594+19])
                                        Pexp_apply
                                        expression (src/SelectiveExpansion.ml[326,11594+6]..[326,11594+13])
                                          Pexp_ident "enqueue" (src/SelectiveExpansion.ml[326,11594+6]..[326,11594+13])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/SelectiveExpansion.ml[326,11594+14]..[326,11594+19])
                                              Pexp_ident "label" (src/SelectiveExpansion.ml[326,11594+14]..[326,11594+19])
                                        ]
                                      expression (src/SelectiveExpansion.ml[327,11615+6]..[328,11647+44])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/SelectiveExpansion.ml[327,11615+10]..[327,11615+13])
                                              Ppat_var "sym" (src/SelectiveExpansion.ml[327,11615+10]..[327,11615+13])
                                            expression (src/SelectiveExpansion.ml[327,11615+16]..[327,11615+28])
                                              Pexp_apply
                                              expression (src/SelectiveExpansion.ml[327,11615+16]..[327,11615+22])
                                                Pexp_ident "mangle" (src/SelectiveExpansion.ml[327,11615+16]..[327,11615+22])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/SelectiveExpansion.ml[327,11615+23]..[327,11615+28])
                                                    Pexp_ident "label" (src/SelectiveExpansion.ml[327,11615+23]..[327,11615+28])
                                              ]
                                        ]
                                        expression (src/SelectiveExpansion.ml[328,11647+6]..[328,11647+44])
                                          Pexp_apply
                                          expression (src/SelectiveExpansion.ml[328,11647+6]..[328,11647+20])
                                            Pexp_ident "Parameters.app" (src/SelectiveExpansion.ml[328,11647+6]..[328,11647+20])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/SelectiveExpansion.ml[328,11647+21]..[328,11647+34])
                                                Pexp_apply
                                                expression (src/SelectiveExpansion.ml[328,11647+22]..[328,11647+29])
                                                  Pexp_ident "unknown" (src/SelectiveExpansion.ml[328,11647+22]..[328,11647+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/SelectiveExpansion.ml[328,11647+30]..[328,11647+33])
                                                      Pexp_ident "sym" (src/SelectiveExpansion.ml[328,11647+30]..[328,11647+33])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (src/SelectiveExpansion.ml[328,11647+35]..[328,11647+44])
                                                Pexp_ident "residuals" (src/SelectiveExpansion.ml[328,11647+35]..[328,11647+44])
                                          ]
                        ]
                      core_type (src/SelectiveExpansion.ml[284,9869+40]..[284,9869+49])
                        Ptyp_constr "parameter" (src/SelectiveExpansion.ml[284,9869+40]..[284,9869+49])
                        []
              ]
            structure_item (src/SelectiveExpansion.ml[335,11893+0]..[337,12000+39])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[335,11893+4]..[335,11893+19])
                    Ppat_var "subst_parameter" (src/SelectiveExpansion.ml[335,11893+4]..[335,11893+19])
                  expression (src/SelectiveExpansion.ml[335,11893+20]..[337,12000+39]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/SelectiveExpansion.ml[335,11893+20]..[335,11893+23])
                      Ppat_var "env" (src/SelectiveExpansion.ml[335,11893+20]..[335,11893+23])
                    expression (src/SelectiveExpansion.ml[335,11893+24]..[337,12000+39]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/SelectiveExpansion.ml[335,11893+24]..[335,11893+29])
                        Ppat_var "param" (src/SelectiveExpansion.ml[335,11893+24]..[335,11893+29])
                      expression (src/SelectiveExpansion.ml[337,12000+2]..[337,12000+39])
                        Pexp_apply
                        expression (src/SelectiveExpansion.ml[337,12000+2]..[337,12000+11])
                          Pexp_ident "recognize" (src/SelectiveExpansion.ml[337,12000+2]..[337,12000+11])
                        [
                          <arg>
                          Nolabel
                            expression (src/SelectiveExpansion.ml[337,12000+12]..[337,12000+39])
                              Pexp_apply
                              expression (src/SelectiveExpansion.ml[337,12000+13]..[337,12000+28])
                                Pexp_ident "subst_parameter" (src/SelectiveExpansion.ml[337,12000+13]..[337,12000+28])
                              [
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[337,12000+29]..[337,12000+32])
                                    Pexp_ident "env" (src/SelectiveExpansion.ml[337,12000+29]..[337,12000+32])
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[337,12000+33]..[337,12000+38])
                                    Pexp_ident "param" (src/SelectiveExpansion.ml[337,12000+33]..[337,12000+38])
                              ]
                        ]
              ]
            structure_item (src/SelectiveExpansion.ml[339,12041+0]..[341,12128+20])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[339,12041+4]..[339,12041+18])
                    Ppat_var "subst_producer" (src/SelectiveExpansion.ml[339,12041+4]..[339,12041+18])
                  expression (src/SelectiveExpansion.ml[339,12041+19]..[341,12128+20]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/SelectiveExpansion.ml[339,12041+19]..[339,12041+22])
                      Ppat_var "env" (src/SelectiveExpansion.ml[339,12041+19]..[339,12041+22])
                    expression (src/SelectiveExpansion.ml[339,12041+23]..[341,12128+20]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/SelectiveExpansion.ml[339,12041+23]..[339,12041+41])
                        Ppat_tuple
                        [
                          pattern (src/SelectiveExpansion.ml[339,12041+24]..[339,12041+26])
                            Ppat_var "id" (src/SelectiveExpansion.ml[339,12041+24]..[339,12041+26])
                          pattern (src/SelectiveExpansion.ml[339,12041+28]..[339,12041+33])
                            Ppat_var "param" (src/SelectiveExpansion.ml[339,12041+28]..[339,12041+33])
                          pattern (src/SelectiveExpansion.ml[339,12041+35]..[339,12041+40])
                            Ppat_var "attrs" (src/SelectiveExpansion.ml[339,12041+35]..[339,12041+40])
                        ]
                      expression (src/SelectiveExpansion.ml[340,12085+2]..[341,12128+20])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/SelectiveExpansion.ml[340,12085+6]..[340,12085+11])
                              Ppat_var "param" (src/SelectiveExpansion.ml[340,12085+6]..[340,12085+11])
                            expression (src/SelectiveExpansion.ml[340,12085+14]..[340,12085+39])
                              Pexp_apply
                              expression (src/SelectiveExpansion.ml[340,12085+14]..[340,12085+29])
                                Pexp_ident "subst_parameter" (src/SelectiveExpansion.ml[340,12085+14]..[340,12085+29])
                              [
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[340,12085+30]..[340,12085+33])
                                    Pexp_ident "env" (src/SelectiveExpansion.ml[340,12085+30]..[340,12085+33])
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[340,12085+34]..[340,12085+39])
                                    Pexp_ident "param" (src/SelectiveExpansion.ml[340,12085+34]..[340,12085+39])
                              ]
                        ]
                        expression (src/SelectiveExpansion.ml[341,12128+2]..[341,12128+20])
                          Pexp_tuple
                          [
                            expression (src/SelectiveExpansion.ml[341,12128+3]..[341,12128+5])
                              Pexp_ident "id" (src/SelectiveExpansion.ml[341,12128+3]..[341,12128+5])
                            expression (src/SelectiveExpansion.ml[341,12128+7]..[341,12128+12])
                              Pexp_ident "param" (src/SelectiveExpansion.ml[341,12128+7]..[341,12128+12])
                            expression (src/SelectiveExpansion.ml[341,12128+14]..[341,12128+19])
                              Pexp_ident "attrs" (src/SelectiveExpansion.ml[341,12128+14]..[341,12128+19])
                          ]
              ]
            structure_item (src/SelectiveExpansion.ml[343,12150+0]..[344,12186+41])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[343,12150+4]..[343,12150+19])
                    Ppat_var "subst_producers" (src/SelectiveExpansion.ml[343,12150+4]..[343,12150+19])
                  expression (src/SelectiveExpansion.ml[343,12150+20]..[344,12186+41]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/SelectiveExpansion.ml[343,12150+20]..[343,12150+23])
                      Ppat_var "env" (src/SelectiveExpansion.ml[343,12150+20]..[343,12150+23])
                    expression (src/SelectiveExpansion.ml[343,12150+24]..[344,12186+41]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/SelectiveExpansion.ml[343,12150+24]..[343,12150+33])
                        Ppat_var "producers" (src/SelectiveExpansion.ml[343,12150+24]..[343,12150+33])
                      expression (src/SelectiveExpansion.ml[344,12186+2]..[344,12186+41])
                        Pexp_apply
                        expression (src/SelectiveExpansion.ml[344,12186+2]..[344,12186+10])
                          Pexp_ident "List.map" (src/SelectiveExpansion.ml[344,12186+2]..[344,12186+10])
                        [
                          <arg>
                          Nolabel
                            expression (src/SelectiveExpansion.ml[344,12186+11]..[344,12186+31])
                              Pexp_apply
                              expression (src/SelectiveExpansion.ml[344,12186+12]..[344,12186+26])
                                Pexp_ident "subst_producer" (src/SelectiveExpansion.ml[344,12186+12]..[344,12186+26])
                              [
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[344,12186+27]..[344,12186+30])
                                    Pexp_ident "env" (src/SelectiveExpansion.ml[344,12186+27]..[344,12186+30])
                              ]
                          <arg>
                          Nolabel
                            expression (src/SelectiveExpansion.ml[344,12186+32]..[344,12186+41])
                              Pexp_ident "producers" (src/SelectiveExpansion.ml[344,12186+32]..[344,12186+41])
                        ]
              ]
            structure_item (src/SelectiveExpansion.ml[346,12229+0]..[347,12259+72])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[346,12229+4]..[346,12229+16])
                    Ppat_var "subst_branch" (src/SelectiveExpansion.ml[346,12229+4]..[346,12229+16])
                  expression (src/SelectiveExpansion.ml[346,12229+17]..[347,12259+72]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/SelectiveExpansion.ml[346,12229+17]..[346,12229+20])
                      Ppat_var "env" (src/SelectiveExpansion.ml[346,12229+17]..[346,12229+20])
                    expression (src/SelectiveExpansion.ml[346,12229+21]..[347,12259+72]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/SelectiveExpansion.ml[346,12229+21]..[346,12229+27])
                        Ppat_var "branch" (src/SelectiveExpansion.ml[346,12229+21]..[346,12229+27])
                      expression (src/SelectiveExpansion.ml[347,12259+2]..[347,12259+72])
                        Pexp_record
                        [
                          "pr_producers" (src/SelectiveExpansion.ml[347,12259+16]..[347,12259+28])
                            expression (src/SelectiveExpansion.ml[347,12259+31]..[347,12259+70])
                              Pexp_apply
                              expression (src/SelectiveExpansion.ml[347,12259+31]..[347,12259+46])
                                Pexp_ident "subst_producers" (src/SelectiveExpansion.ml[347,12259+31]..[347,12259+46])
                              [
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[347,12259+47]..[347,12259+50])
                                    Pexp_ident "env" (src/SelectiveExpansion.ml[347,12259+47]..[347,12259+50])
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[347,12259+51]..[347,12259+70])
                                    Pexp_field
                                    expression (src/SelectiveExpansion.ml[347,12259+51]..[347,12259+57])
                                      Pexp_ident "branch" (src/SelectiveExpansion.ml[347,12259+51]..[347,12259+57])
                                    "pr_producers" (src/SelectiveExpansion.ml[347,12259+58]..[347,12259+70])
                              ]
                        ]
                        Some
                          expression (src/SelectiveExpansion.ml[347,12259+4]..[347,12259+10])
                            Pexp_ident "branch" (src/SelectiveExpansion.ml[347,12259+4]..[347,12259+10])
              ]
            structure_item (src/SelectiveExpansion.ml[349,12333+0]..[350,12367+38])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[349,12333+4]..[349,12333+18])
                    Ppat_var "subst_branches" (src/SelectiveExpansion.ml[349,12333+4]..[349,12333+18])
                  expression (src/SelectiveExpansion.ml[349,12333+19]..[350,12367+38]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/SelectiveExpansion.ml[349,12333+19]..[349,12333+22])
                      Ppat_var "env" (src/SelectiveExpansion.ml[349,12333+19]..[349,12333+22])
                    expression (src/SelectiveExpansion.ml[349,12333+23]..[350,12367+38]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/SelectiveExpansion.ml[349,12333+23]..[349,12333+31])
                        Ppat_var "branches" (src/SelectiveExpansion.ml[349,12333+23]..[349,12333+31])
                      expression (src/SelectiveExpansion.ml[350,12367+2]..[350,12367+38])
                        Pexp_apply
                        expression (src/SelectiveExpansion.ml[350,12367+2]..[350,12367+10])
                          Pexp_ident "List.map" (src/SelectiveExpansion.ml[350,12367+2]..[350,12367+10])
                        [
                          <arg>
                          Nolabel
                            expression (src/SelectiveExpansion.ml[350,12367+11]..[350,12367+29])
                              Pexp_apply
                              expression (src/SelectiveExpansion.ml[350,12367+12]..[350,12367+24])
                                Pexp_ident "subst_branch" (src/SelectiveExpansion.ml[350,12367+12]..[350,12367+24])
                              [
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[350,12367+25]..[350,12367+28])
                                    Pexp_ident "env" (src/SelectiveExpansion.ml[350,12367+25]..[350,12367+28])
                              ]
                          <arg>
                          Nolabel
                            expression (src/SelectiveExpansion.ml[350,12367+30]..[350,12367+38])
                              Pexp_ident "branches" (src/SelectiveExpansion.ml[350,12367+30]..[350,12367+38])
                        ]
              ]
            structure_item (src/SelectiveExpansion.ml[356,12553+0]..[359,12616+60])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[356,12553+4]..[356,12553+11])
                    Ppat_var "freshen" (src/SelectiveExpansion.ml[356,12553+4]..[356,12553+11])
                  core_type (src/SelectiveExpansion.ml[356,12553+14]..[356,12553+30])
                    Ptyp_arrow
                    Nolabel
                    core_type (src/SelectiveExpansion.ml[356,12553+14]..[356,12553+20])
                      Ptyp_constr "string" (src/SelectiveExpansion.ml[356,12553+14]..[356,12553+20])
                      []
                    core_type (src/SelectiveExpansion.ml[356,12553+24]..[356,12553+30])
                      Ptyp_constr "string" (src/SelectiveExpansion.ml[356,12553+24]..[356,12553+30])
                      []
                  expression (src/SelectiveExpansion.ml[357,12586+2]..[359,12616+60])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/SelectiveExpansion.ml[357,12586+6]..[357,12586+7])
                          Ppat_var "c" (src/SelectiveExpansion.ml[357,12586+6]..[357,12586+7])
                        expression (src/SelectiveExpansion.ml[357,12586+10]..[357,12586+15])
                          Pexp_apply
                          expression (src/SelectiveExpansion.ml[357,12586+10]..[357,12586+13])
                            Pexp_ident "ref" (src/SelectiveExpansion.ml[357,12586+10]..[357,12586+13])
                          [
                            <arg>
                            Nolabel
                              expression (src/SelectiveExpansion.ml[357,12586+14]..[357,12586+15])
                                Pexp_constant PConst_int (0,None)
                          ]
                    ]
                    expression (src/SelectiveExpansion.ml[358,12605+2]..[359,12616+60])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/SelectiveExpansion.ml[358,12605+6]..[358,12605+7])
                        Ppat_var "x" (src/SelectiveExpansion.ml[358,12605+6]..[358,12605+7])
                      expression (src/SelectiveExpansion.ml[359,12616+4]..[359,12616+60])
                        Pexp_apply
                        expression (src/SelectiveExpansion.ml[359,12616+4]..[359,12616+18])
                          Pexp_ident "Printf.sprintf" (src/SelectiveExpansion.ml[359,12616+4]..[359,12616+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/SelectiveExpansion.ml[359,12616+19]..[359,12616+35])
                              Pexp_constant PConst_string("%s__menhir__%d",(src/SelectiveExpansion.ml[359,12616+20]..[359,12616+34]),None)
                          <arg>
                          Nolabel
                            expression (src/SelectiveExpansion.ml[359,12616+36]..[359,12616+37])
                              Pexp_ident "x" (src/SelectiveExpansion.ml[359,12616+36]..[359,12616+37])
                          <arg>
                          Nolabel
                            expression (src/SelectiveExpansion.ml[359,12616+38]..[359,12616+60])
                              Pexp_apply
                              expression (src/SelectiveExpansion.ml[359,12616+39]..[359,12616+57])
                                Pexp_ident "Misc.postincrement" (src/SelectiveExpansion.ml[359,12616+39]..[359,12616+57])
                              [
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[359,12616+58]..[359,12616+59])
                                    Pexp_ident "c" (src/SelectiveExpansion.ml[359,12616+58]..[359,12616+59])
                              ]
                        ]
              ]
            structure_item (src/SelectiveExpansion.ml[368,13075+0]..[392,14140+16])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[368,13075+4]..[368,13075+21])
                    Ppat_var "instantiation_env" (src/SelectiveExpansion.ml[368,13075+4]..[368,13075+21])
                  expression (src/SelectiveExpansion.ml[368,13075+22]..[392,14140+16]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/SelectiveExpansion.ml[368,13075+22]..[368,13075+29])
                      Ppat_var "formals" (src/SelectiveExpansion.ml[368,13075+22]..[368,13075+29])
                    expression (src/SelectiveExpansion.ml[368,13075+30]..[392,14140+16]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/SelectiveExpansion.ml[368,13075+30]..[368,13075+34])
                        Ppat_var "inst" (src/SelectiveExpansion.ml[368,13075+30]..[368,13075+34])
                      expression (src/SelectiveExpansion.ml[368,13075+35]..[392,14140+16])
                        Pexp_constraint
                        expression (src/SelectiveExpansion.ml[369,13132+2]..[392,14140+16])
                          Pexp_sequence
                          expression (src/SelectiveExpansion.ml[369,13132+2]..[369,13132+49])
                            Pexp_assert
                            expression (src/SelectiveExpansion.ml[369,13132+9]..[369,13132+49])
                              Pexp_apply
                              expression (src/SelectiveExpansion.ml[369,13132+30]..[369,13132+31])
                                Pexp_ident "=" (src/SelectiveExpansion.ml[369,13132+30]..[369,13132+31])
                              [
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[369,13132+10]..[369,13132+29])
                                    Pexp_apply
                                    expression (src/SelectiveExpansion.ml[369,13132+10]..[369,13132+21])
                                      Pexp_ident "List.length" (src/SelectiveExpansion.ml[369,13132+10]..[369,13132+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/SelectiveExpansion.ml[369,13132+22]..[369,13132+29])
                                          Pexp_ident "formals" (src/SelectiveExpansion.ml[369,13132+22]..[369,13132+29])
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[369,13132+32]..[369,13132+48])
                                    Pexp_apply
                                    expression (src/SelectiveExpansion.ml[369,13132+32]..[369,13132+43])
                                      Pexp_ident "List.length" (src/SelectiveExpansion.ml[369,13132+32]..[369,13132+43])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/SelectiveExpansion.ml[369,13132+44]..[369,13132+48])
                                          Pexp_ident "inst" (src/SelectiveExpansion.ml[369,13132+44]..[369,13132+48])
                                    ]
                              ]
                          expression (src/SelectiveExpansion.ml[370,13183+2]..[392,14140+16])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/SelectiveExpansion.ml[370,13183+6]..[370,13183+20])
                                  Ppat_tuple
                                  [
                                    pattern (src/SelectiveExpansion.ml[370,13183+6]..[370,13183+9])
                                      Ppat_var "env" (src/SelectiveExpansion.ml[370,13183+6]..[370,13183+9])
                                    pattern (src/SelectiveExpansion.ml[370,13183+11]..[370,13183+20])
                                      Ppat_var "residuals" (src/SelectiveExpansion.ml[370,13183+11]..[370,13183+20])
                                  ]
                                expression (src/SelectiveExpansion.ml[371,13206+4]..[390,14100+34])
                                  Pexp_apply
                                  expression (src/SelectiveExpansion.ml[371,13206+4]..[371,13206+20])
                                    Pexp_ident "List.fold_right2" (src/SelectiveExpansion.ml[371,13206+4]..[371,13206+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/SelectiveExpansion.ml[371,13206+21]..[390,14100+5])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/SelectiveExpansion.ml[371,13206+26]..[371,13206+32])
                                          Ppat_var "formal" (src/SelectiveExpansion.ml[371,13206+26]..[371,13206+32])
                                        expression (src/SelectiveExpansion.ml[371,13206+33]..[389,14058+41]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (src/SelectiveExpansion.ml[371,13206+33]..[371,13206+35])
                                            Ppat_var "po" (src/SelectiveExpansion.ml[371,13206+33]..[371,13206+35])
                                          expression (src/SelectiveExpansion.ml[371,13206+36]..[389,14058+41]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (src/SelectiveExpansion.ml[371,13206+36]..[371,13206+52])
                                              Ppat_tuple
                                              [
                                                pattern (src/SelectiveExpansion.ml[371,13206+37]..[371,13206+40])
                                                  Ppat_var "env" (src/SelectiveExpansion.ml[371,13206+37]..[371,13206+40])
                                                pattern (src/SelectiveExpansion.ml[371,13206+42]..[371,13206+51])
                                                  Ppat_var "residuals" (src/SelectiveExpansion.ml[371,13206+42]..[371,13206+51])
                                              ]
                                            expression (src/SelectiveExpansion.ml[372,13262+6]..[389,14058+41])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/SelectiveExpansion.ml[372,13262+10]..[372,13262+26])
                                                    Ppat_tuple
                                                    [
                                                      pattern (src/SelectiveExpansion.ml[372,13262+10]..[372,13262+15])
                                                        Ppat_var "param" (src/SelectiveExpansion.ml[372,13262+10]..[372,13262+15])
                                                      pattern (src/SelectiveExpansion.ml[372,13262+17]..[372,13262+26])
                                                        Ppat_var "residuals" (src/SelectiveExpansion.ml[372,13262+17]..[372,13262+26])
                                                    ]
                                                  expression (src/SelectiveExpansion.ml[373,13291+8]..[387,14017+31])
                                                    Pexp_match
                                                    expression (src/SelectiveExpansion.ml[373,13291+14]..[373,13291+16])
                                                      Pexp_ident "po" (src/SelectiveExpansion.ml[373,13291+14]..[373,13291+16])
                                                    [
                                                      <case>
                                                        pattern (src/SelectiveExpansion.ml[374,13313+10]..[374,13313+20])
                                                          Ppat_construct "Some" (src/SelectiveExpansion.ml[374,13313+10]..[374,13313+14])
                                                          Some
                                                            []
                                                            pattern (src/SelectiveExpansion.ml[374,13313+15]..[374,13313+20])
                                                              Ppat_var "param" (src/SelectiveExpansion.ml[374,13313+15]..[374,13313+20])
                                                        expression (src/SelectiveExpansion.ml[376,13394+12]..[376,13394+28])
                                                          Pexp_tuple
                                                          [
                                                            expression (src/SelectiveExpansion.ml[376,13394+12]..[376,13394+17])
                                                              Pexp_ident "param" (src/SelectiveExpansion.ml[376,13394+12]..[376,13394+17])
                                                            expression (src/SelectiveExpansion.ml[376,13394+19]..[376,13394+28])
                                                              Pexp_ident "residuals" (src/SelectiveExpansion.ml[376,13394+19]..[376,13394+28])
                                                          ]
                                                      <case>
                                                        pattern (src/SelectiveExpansion.ml[377,13423+10]..[377,13423+14])
                                                          Ppat_construct "None" (src/SelectiveExpansion.ml[377,13423+10]..[377,13423+14])
                                                          None
                                                        expression (src/SelectiveExpansion.ml[385,13931+12]..[387,14017+31])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (src/SelectiveExpansion.ml[385,13931+16]..[385,13931+22])
                                                                Ppat_var "formal" (src/SelectiveExpansion.ml[385,13931+16]..[385,13931+22])
                                                              expression (src/SelectiveExpansion.ml[385,13931+25]..[385,13931+39])
                                                                Pexp_apply
                                                                expression (src/SelectiveExpansion.ml[385,13931+25]..[385,13931+32])
                                                                  Pexp_ident "freshen" (src/SelectiveExpansion.ml[385,13931+25]..[385,13931+32])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/SelectiveExpansion.ml[385,13931+33]..[385,13931+39])
                                                                      Pexp_ident "formal" (src/SelectiveExpansion.ml[385,13931+33]..[385,13931+39])
                                                                ]
                                                          ]
                                                          expression (src/SelectiveExpansion.ml[386,13974+12]..[387,14017+31])
                                                            Pexp_tuple
                                                            [
                                                              expression (src/SelectiveExpansion.ml[386,13974+12]..[386,13974+41])
                                                                Pexp_construct "ParameterVar" (src/SelectiveExpansion.ml[386,13974+12]..[386,13974+24])
                                                                Some
                                                                  expression (src/SelectiveExpansion.ml[386,13974+25]..[386,13974+41])
                                                                    Pexp_apply
                                                                    expression (src/SelectiveExpansion.ml[386,13974+26]..[386,13974+33])
                                                                      Pexp_ident "unknown" (src/SelectiveExpansion.ml[386,13974+26]..[386,13974+33])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/SelectiveExpansion.ml[386,13974+34]..[386,13974+40])
  Pexp_ident "formal" (src/SelectiveExpansion.ml[386,13974+34]..[386,13974+40])
                                                                    ]
                                                              expression (src/SelectiveExpansion.ml[387,14017+12]..[387,14017+31])
                                                                Pexp_construct "::" (src/SelectiveExpansion.ml[387,14017+19]..[387,14017+21])
                                                                Some
                                                                  expression (src/SelectiveExpansion.ml[387,14017+12]..[387,14017+31]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (src/SelectiveExpansion.ml[387,14017+12]..[387,14017+18])
Pexp_ident "formal" (src/SelectiveExpansion.ml[387,14017+12]..[387,14017+18])
                                                                      expression (src/SelectiveExpansion.ml[387,14017+22]..[387,14017+31])
Pexp_ident "residuals" (src/SelectiveExpansion.ml[387,14017+22]..[387,14017+31])
                                                                    ]
                                                            ]
                                                    ]
                                              ]
                                              expression (src/SelectiveExpansion.ml[389,14058+6]..[389,14058+41])
                                                Pexp_tuple
                                                [
                                                  expression (src/SelectiveExpansion.ml[389,14058+6]..[389,14058+30])
                                                    Pexp_apply
                                                    expression (src/SelectiveExpansion.ml[389,14058+6]..[389,14058+13])
                                                      Pexp_ident "Env.add" (src/SelectiveExpansion.ml[389,14058+6]..[389,14058+13])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/SelectiveExpansion.ml[389,14058+14]..[389,14058+20])
                                                          Pexp_ident "formal" (src/SelectiveExpansion.ml[389,14058+14]..[389,14058+20])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/SelectiveExpansion.ml[389,14058+21]..[389,14058+26])
                                                          Pexp_ident "param" (src/SelectiveExpansion.ml[389,14058+21]..[389,14058+26])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/SelectiveExpansion.ml[389,14058+27]..[389,14058+30])
                                                          Pexp_ident "env" (src/SelectiveExpansion.ml[389,14058+27]..[389,14058+30])
                                                    ]
                                                  expression (src/SelectiveExpansion.ml[389,14058+32]..[389,14058+41])
                                                    Pexp_ident "residuals" (src/SelectiveExpansion.ml[389,14058+32]..[389,14058+41])
                                                ]
                                    <arg>
                                    Nolabel
                                      expression (src/SelectiveExpansion.ml[390,14100+6]..[390,14100+13])
                                        Pexp_ident "formals" (src/SelectiveExpansion.ml[390,14100+6]..[390,14100+13])
                                    <arg>
                                    Nolabel
                                      expression (src/SelectiveExpansion.ml[390,14100+14]..[390,14100+18])
                                        Pexp_ident "inst" (src/SelectiveExpansion.ml[390,14100+14]..[390,14100+18])
                                    <arg>
                                    Nolabel
                                      expression (src/SelectiveExpansion.ml[390,14100+19]..[390,14100+34])
                                        Pexp_tuple
                                        [
                                          expression (src/SelectiveExpansion.ml[390,14100+20]..[390,14100+29])
                                            Pexp_ident "Env.empty" (src/SelectiveExpansion.ml[390,14100+20]..[390,14100+29])
                                          expression (src/SelectiveExpansion.ml[390,14100+31]..[390,14100+33])
                                            Pexp_construct "[]" (src/SelectiveExpansion.ml[390,14100+31]..[390,14100+33])
                                            None
                                        ]
                                  ]
                            ]
                            expression (src/SelectiveExpansion.ml[392,14140+2]..[392,14140+16])
                              Pexp_tuple
                              [
                                expression (src/SelectiveExpansion.ml[392,14140+2]..[392,14140+5])
                                  Pexp_ident "env" (src/SelectiveExpansion.ml[392,14140+2]..[392,14140+5])
                                expression (src/SelectiveExpansion.ml[392,14140+7]..[392,14140+16])
                                  Pexp_ident "residuals" (src/SelectiveExpansion.ml[392,14140+7]..[392,14140+16])
                              ]
                        core_type (src/SelectiveExpansion.ml[368,13075+37]..[368,13075+54])
                          Ptyp_tuple
                          [
                            core_type (src/SelectiveExpansion.ml[368,13075+37]..[368,13075+40])
                              Ptyp_constr "env" (src/SelectiveExpansion.ml[368,13075+37]..[368,13075+40])
                              []
                            core_type (src/SelectiveExpansion.ml[368,13075+43]..[368,13075+54])
                              Ptyp_constr "list" (src/SelectiveExpansion.ml[368,13075+50]..[368,13075+54])
                              [
                                core_type (src/SelectiveExpansion.ml[368,13075+43]..[368,13075+49])
                                  Ptyp_constr "symbol" (src/SelectiveExpansion.ml[368,13075+43]..[368,13075+49])
                                  []
                              ]
                          ]
              ]
            structure_item (src/SelectiveExpansion.ml[410,15105+0]..[426,15611+5])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[410,15105+4]..[410,15105+9])
                    Ppat_var "visit" (src/SelectiveExpansion.ml[410,15105+4]..[410,15105+9])
                  expression (src/SelectiveExpansion.ml[410,15105+10]..[426,15611+5]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/SelectiveExpansion.ml[410,15105+10]..[410,15105+15])
                      Ppat_var "label" (src/SelectiveExpansion.ml[410,15105+10]..[410,15105+15])
                    expression (src/SelectiveExpansion.ml[411,15123+2]..[426,15611+5])
                      Pexp_ifthenelse
                      expression (src/SelectiveExpansion.ml[411,15123+5]..[411,15123+23])
                        Pexp_apply
                        expression (src/SelectiveExpansion.ml[411,15123+5]..[411,15123+8])
                          Pexp_ident "not" (src/SelectiveExpansion.ml[411,15123+5]..[411,15123+8])
                        [
                          <arg>
                          Nolabel
                            expression (src/SelectiveExpansion.ml[411,15123+9]..[411,15123+23])
                              Pexp_apply
                              expression (src/SelectiveExpansion.ml[411,15123+10]..[411,15123+16])
                                Pexp_ident "marked" (src/SelectiveExpansion.ml[411,15123+10]..[411,15123+16])
                              [
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[411,15123+17]..[411,15123+22])
                                    Pexp_ident "label" (src/SelectiveExpansion.ml[411,15123+17]..[411,15123+22])
                              ]
                        ]
                      expression (src/SelectiveExpansion.ml[411,15123+29]..[426,15611+5])
                        Pexp_sequence
                        expression (src/SelectiveExpansion.ml[412,15158+4]..[412,15158+14])
                          Pexp_apply
                          expression (src/SelectiveExpansion.ml[412,15158+4]..[412,15158+8])
                            Pexp_ident "mark" (src/SelectiveExpansion.ml[412,15158+4]..[412,15158+8])
                          [
                            <arg>
                            Nolabel
                              expression (src/SelectiveExpansion.ml[412,15158+9]..[412,15158+14])
                                Pexp_ident "label" (src/SelectiveExpansion.ml[412,15158+9]..[412,15158+14])
                          ]
                        expression (src/SelectiveExpansion.ml[413,15174+4]..[425,15605+5])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/SelectiveExpansion.ml[413,15174+8]..[413,15174+18])
                                Ppat_tuple
                                [
                                  pattern (src/SelectiveExpansion.ml[413,15174+9]..[413,15174+11])
                                    Ppat_var "nt" (src/SelectiveExpansion.ml[413,15174+9]..[413,15174+11])
                                  pattern (src/SelectiveExpansion.ml[413,15174+13]..[413,15174+17])
                                    Ppat_var "inst" (src/SelectiveExpansion.ml[413,15174+13]..[413,15174+17])
                                ]
                              expression (src/SelectiveExpansion.ml[413,15174+21]..[413,15174+26])
                                Pexp_ident "label" (src/SelectiveExpansion.ml[413,15174+21]..[413,15174+26])
                          ]
                          expression (src/SelectiveExpansion.ml[414,15204+4]..[425,15605+5])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/SelectiveExpansion.ml[414,15204+8]..[414,15204+12])
                                  Ppat_var "rule" (src/SelectiveExpansion.ml[414,15204+8]..[414,15204+12])
                                expression (src/SelectiveExpansion.ml[414,15204+15]..[414,15204+42])
                                  Pexp_apply
                                  expression (src/SelectiveExpansion.ml[414,15204+15]..[414,15204+29])
                                    Pexp_ident "StringMap.find" (src/SelectiveExpansion.ml[414,15204+15]..[414,15204+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/SelectiveExpansion.ml[414,15204+30]..[414,15204+32])
                                        Pexp_ident "nt" (src/SelectiveExpansion.ml[414,15204+30]..[414,15204+32])
                                    <arg>
                                    Nolabel
                                      expression (src/SelectiveExpansion.ml[414,15204+33]..[414,15204+42])
                                        Pexp_field
                                        expression (src/SelectiveExpansion.ml[414,15204+33]..[414,15204+34])
                                          Pexp_ident "g" (src/SelectiveExpansion.ml[414,15204+33]..[414,15204+34])
                                        "p_rules" (src/SelectiveExpansion.ml[414,15204+35]..[414,15204+42])
                                  ]
                            ]
                            expression (src/SelectiveExpansion.ml[415,15250+4]..[425,15605+5])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/SelectiveExpansion.ml[415,15250+8]..[415,15250+15])
                                    Ppat_var "formals" (src/SelectiveExpansion.ml[415,15250+8]..[415,15250+15])
                                  expression (src/SelectiveExpansion.ml[415,15250+18]..[415,15250+36])
                                    Pexp_field
                                    expression (src/SelectiveExpansion.ml[415,15250+18]..[415,15250+22])
                                      Pexp_ident "rule" (src/SelectiveExpansion.ml[415,15250+18]..[415,15250+22])
                                    "pr_parameters" (src/SelectiveExpansion.ml[415,15250+23]..[415,15250+36])
                              ]
                              expression (src/SelectiveExpansion.ml[416,15290+4]..[425,15605+5])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/SelectiveExpansion.ml[416,15290+8]..[416,15290+22])
                                      Ppat_tuple
                                      [
                                        pattern (src/SelectiveExpansion.ml[416,15290+8]..[416,15290+11])
                                          Ppat_var "env" (src/SelectiveExpansion.ml[416,15290+8]..[416,15290+11])
                                        pattern (src/SelectiveExpansion.ml[416,15290+13]..[416,15290+22])
                                          Ppat_var "residuals" (src/SelectiveExpansion.ml[416,15290+13]..[416,15290+22])
                                      ]
                                    expression (src/SelectiveExpansion.ml[416,15290+25]..[416,15290+55])
                                      Pexp_apply
                                      expression (src/SelectiveExpansion.ml[416,15290+25]..[416,15290+42])
                                        Pexp_ident "instantiation_env" (src/SelectiveExpansion.ml[416,15290+25]..[416,15290+42])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/SelectiveExpansion.ml[416,15290+43]..[416,15290+50])
                                            Pexp_ident "formals" (src/SelectiveExpansion.ml[416,15290+43]..[416,15290+50])
                                        <arg>
                                        Nolabel
                                          expression (src/SelectiveExpansion.ml[416,15290+51]..[416,15290+55])
                                            Pexp_ident "inst" (src/SelectiveExpansion.ml[416,15290+51]..[416,15290+55])
                                      ]
                                ]
                                expression (src/SelectiveExpansion.ml[417,15349+4]..[425,15605+5])
                                  Pexp_apply
                                  expression (src/SelectiveExpansion.ml[417,15349+4]..[417,15349+8])
                                    Pexp_ident "emit" (src/SelectiveExpansion.ml[417,15349+4]..[417,15349+8])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/SelectiveExpansion.ml[417,15349+9]..[425,15605+5])
                                        Pexp_record
                                        [
                                          "pr_nt" (src/SelectiveExpansion.ml[419,15376+6]..[419,15376+11])
                                            expression (src/SelectiveExpansion.ml[419,15376+14]..[419,15376+26])
                                              Pexp_apply
                                              expression (src/SelectiveExpansion.ml[419,15376+14]..[419,15376+20])
                                                Pexp_ident "mangle" (src/SelectiveExpansion.ml[419,15376+14]..[419,15376+20])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/SelectiveExpansion.ml[419,15376+21]..[419,15376+26])
                                                    Pexp_ident "label" (src/SelectiveExpansion.ml[419,15376+21]..[419,15376+26])
                                              ]
                                          "pr_parameters" (src/SelectiveExpansion.ml[420,15404+6]..[420,15404+19])
                                            expression (src/SelectiveExpansion.ml[420,15404+22]..[420,15404+31])
                                              Pexp_ident "residuals" (src/SelectiveExpansion.ml[420,15404+22]..[420,15404+31])
                                          "pr_branches" (src/SelectiveExpansion.ml[421,15437+6]..[421,15437+17])
                                            expression (src/SelectiveExpansion.ml[421,15437+20]..[421,15437+55])
                                              Pexp_apply
                                              expression (src/SelectiveExpansion.ml[421,15437+20]..[421,15437+34])
                                                Pexp_ident "subst_branches" (src/SelectiveExpansion.ml[421,15437+20]..[421,15437+34])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/SelectiveExpansion.ml[421,15437+35]..[421,15437+38])
                                                    Pexp_ident "env" (src/SelectiveExpansion.ml[421,15437+35]..[421,15437+38])
                                                <arg>
                                                Nolabel
                                                  expression (src/SelectiveExpansion.ml[421,15437+39]..[421,15437+55])
                                                    Pexp_field
                                                    expression (src/SelectiveExpansion.ml[421,15437+39]..[421,15437+43])
                                                      Pexp_ident "rule" (src/SelectiveExpansion.ml[421,15437+39]..[421,15437+43])
                                                    "pr_branches" (src/SelectiveExpansion.ml[421,15437+44]..[421,15437+55])
                                              ]
                                          "pr_attributes" (src/SelectiveExpansion.ml[422,15494+6]..[422,15494+19])
                                            expression (src/SelectiveExpansion.ml[423,15516+8]..[424,15578+26])
                                              Pexp_apply
                                              expression (src/SelectiveExpansion.ml[423,15516+60]..[423,15516+61])
                                                Pexp_ident "@" (src/SelectiveExpansion.ml[423,15516+60]..[423,15516+61])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/SelectiveExpansion.ml[423,15516+8]..[423,15516+59])
                                                    Pexp_ifthenelse
                                                    expression (src/SelectiveExpansion.ml[423,15516+12]..[423,15516+24])
                                                      Pexp_apply
                                                      expression (src/SelectiveExpansion.ml[423,15516+20]..[423,15516+21])
                                                        Pexp_ident "=" (src/SelectiveExpansion.ml[423,15516+20]..[423,15516+21])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/SelectiveExpansion.ml[423,15516+12]..[423,15516+19])
                                                            Pexp_ident "formals" (src/SelectiveExpansion.ml[423,15516+12]..[423,15516+19])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/SelectiveExpansion.ml[423,15516+22]..[423,15516+24])
                                                            Pexp_construct "[]" (src/SelectiveExpansion.ml[423,15516+22]..[423,15516+24])
                                                            None
                                                      ]
                                                    expression (src/SelectiveExpansion.ml[423,15516+30]..[423,15516+32])
                                                      Pexp_construct "[]" (src/SelectiveExpansion.ml[423,15516+30]..[423,15516+32])
                                                      None
                                                    Some
                                                      expression (src/SelectiveExpansion.ml[423,15516+38]..[423,15516+58])
                                                        Pexp_apply
                                                        expression (src/SelectiveExpansion.ml[423,15516+38]..[423,15516+55])
                                                          Pexp_ident "global_attributes" (src/SelectiveExpansion.ml[423,15516+38]..[423,15516+55])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/SelectiveExpansion.ml[423,15516+56]..[423,15516+58])
                                                              Pexp_ident "nt" (src/SelectiveExpansion.ml[423,15516+56]..[423,15516+58])
                                                        ]
                                                <arg>
                                                Nolabel
                                                  expression (src/SelectiveExpansion.ml[424,15578+8]..[424,15578+26])
                                                    Pexp_field
                                                    expression (src/SelectiveExpansion.ml[424,15578+8]..[424,15578+12])
                                                      Pexp_ident "rule" (src/SelectiveExpansion.ml[424,15578+8]..[424,15578+12])
                                                    "pr_attributes" (src/SelectiveExpansion.ml[424,15578+13]..[424,15578+26])
                                              ]
                                        ]
                                        Some
                                          expression (src/SelectiveExpansion.ml[418,15360+6]..[418,15360+10])
                                            Pexp_ident "rule" (src/SelectiveExpansion.ml[418,15360+6]..[418,15360+10])
                                  ]
                      None
              ]
            structure_item (src/SelectiveExpansion.ml[436,16033+0]..[441,16163+13])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[436,16033+4]..[436,16033+6])
                    Ppat_construct "()" (src/SelectiveExpansion.ml[436,16033+4]..[436,16033+6])
                    None
                  expression (src/SelectiveExpansion.ml[437,16042+2]..[441,16163+13])
                    Pexp_apply
                    expression (src/SelectiveExpansion.ml[437,16042+2]..[437,16042+16])
                      Pexp_ident "StringMap.iter" (src/SelectiveExpansion.ml[437,16042+2]..[437,16042+16])
                    [
                      <arg>
                      Nolabel
                        expression (src/SelectiveExpansion.ml[437,16042+17]..[441,16163+3])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/SelectiveExpansion.ml[437,16042+22]..[437,16042+24])
                            Ppat_var "nt" (src/SelectiveExpansion.ml[437,16042+22]..[437,16042+24])
                          expression (src/SelectiveExpansion.ml[437,16042+25]..[440,16143+19]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/SelectiveExpansion.ml[437,16042+25]..[437,16042+30])
                              Ppat_var "prule" (src/SelectiveExpansion.ml[437,16042+25]..[437,16042+30])
                            expression (src/SelectiveExpansion.ml[438,16076+4]..[440,16143+19])
                              Pexp_ifthenelse
                              expression (src/SelectiveExpansion.ml[438,16076+7]..[438,16076+31])
                                Pexp_apply
                                expression (src/SelectiveExpansion.ml[438,16076+27]..[438,16076+28])
                                  Pexp_ident "=" (src/SelectiveExpansion.ml[438,16076+27]..[438,16076+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/SelectiveExpansion.ml[438,16076+7]..[438,16076+26])
                                      Pexp_field
                                      expression (src/SelectiveExpansion.ml[438,16076+7]..[438,16076+12])
                                        Pexp_ident "prule" (src/SelectiveExpansion.ml[438,16076+7]..[438,16076+12])
                                      "pr_parameters" (src/SelectiveExpansion.ml[438,16076+13]..[438,16076+26])
                                  <arg>
                                  Nolabel
                                    expression (src/SelectiveExpansion.ml[438,16076+29]..[438,16076+31])
                                      Pexp_construct "[]" (src/SelectiveExpansion.ml[438,16076+29]..[438,16076+31])
                                      None
                                ]
                              expression (src/SelectiveExpansion.ml[439,16113+6]..[440,16143+19])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/SelectiveExpansion.ml[439,16113+10]..[439,16113+15])
                                      Ppat_var "label" (src/SelectiveExpansion.ml[439,16113+10]..[439,16113+15])
                                    expression (src/SelectiveExpansion.ml[439,16113+18]..[439,16113+26])
                                      Pexp_tuple
                                      [
                                        expression (src/SelectiveExpansion.ml[439,16113+19]..[439,16113+21])
                                          Pexp_ident "nt" (src/SelectiveExpansion.ml[439,16113+19]..[439,16113+21])
                                        expression (src/SelectiveExpansion.ml[439,16113+23]..[439,16113+25])
                                          Pexp_construct "[]" (src/SelectiveExpansion.ml[439,16113+23]..[439,16113+25])
                                          None
                                      ]
                                ]
                                expression (src/SelectiveExpansion.ml[440,16143+6]..[440,16143+19])
                                  Pexp_apply
                                  expression (src/SelectiveExpansion.ml[440,16143+6]..[440,16143+13])
                                    Pexp_ident "enqueue" (src/SelectiveExpansion.ml[440,16143+6]..[440,16143+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/SelectiveExpansion.ml[440,16143+14]..[440,16143+19])
                                        Pexp_ident "label" (src/SelectiveExpansion.ml[440,16143+14]..[440,16143+19])
                                  ]
                              None
                      <arg>
                      Nolabel
                        expression (src/SelectiveExpansion.ml[441,16163+4]..[441,16163+13])
                          Pexp_field
                          expression (src/SelectiveExpansion.ml[441,16163+4]..[441,16163+5])
                            Pexp_ident "g" (src/SelectiveExpansion.ml[441,16163+4]..[441,16163+5])
                          "p_rules" (src/SelectiveExpansion.ml[441,16163+6]..[441,16163+13])
                    ]
              ]
            structure_item (src/SelectiveExpansion.ml[448,16411+0]..[449,16439+33])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[448,16411+4]..[448,16411+19])
                    Ppat_var "subst_parameter" (src/SelectiveExpansion.ml[448,16411+4]..[448,16411+19])
                  expression (src/SelectiveExpansion.ml[448,16411+20]..[449,16439+33]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/SelectiveExpansion.ml[448,16411+20]..[448,16411+25])
                      Ppat_var "param" (src/SelectiveExpansion.ml[448,16411+20]..[448,16411+25])
                    expression (src/SelectiveExpansion.ml[449,16439+2]..[449,16439+33])
                      Pexp_apply
                      expression (src/SelectiveExpansion.ml[449,16439+2]..[449,16439+17])
                        Pexp_ident "subst_parameter" (src/SelectiveExpansion.ml[449,16439+2]..[449,16439+17])
                      [
                        <arg>
                        Nolabel
                          expression (src/SelectiveExpansion.ml[449,16439+18]..[449,16439+27])
                            Pexp_ident "Env.empty" (src/SelectiveExpansion.ml[449,16439+18]..[449,16439+27])
                        <arg>
                        Nolabel
                          expression (src/SelectiveExpansion.ml[449,16439+28]..[449,16439+33])
                            Pexp_ident "param" (src/SelectiveExpansion.ml[449,16439+28]..[449,16439+33])
                      ]
              ]
            structure_item (src/SelectiveExpansion.ml[451,16474+0]..[453,16542+31])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[451,16474+4]..[451,16474+21])
                    Ppat_var "subst_declaration" (src/SelectiveExpansion.ml[451,16474+4]..[451,16474+21])
                  expression (src/SelectiveExpansion.ml[451,16474+22]..[453,16542+31]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/SelectiveExpansion.ml[451,16474+22]..[451,16474+35])
                      Ppat_tuple
                      [
                        pattern (src/SelectiveExpansion.ml[451,16474+23]..[451,16474+28])
                          Ppat_var "param" (src/SelectiveExpansion.ml[451,16474+23]..[451,16474+28])
                        pattern (src/SelectiveExpansion.ml[451,16474+30]..[451,16474+34])
                          Ppat_var "info" (src/SelectiveExpansion.ml[451,16474+30]..[451,16474+34])
                      ]
                    expression (src/SelectiveExpansion.ml[452,16512+2]..[453,16542+31])
                      Pexp_sequence
                      expression (src/SelectiveExpansion.ml[452,16512+2]..[452,16512+28])
                        Pexp_assert
                        expression (src/SelectiveExpansion.ml[452,16512+9]..[452,16512+28])
                          Pexp_apply
                          expression (src/SelectiveExpansion.ml[452,16512+21]..[452,16512+22])
                            Pexp_ident "=" (src/SelectiveExpansion.ml[452,16512+21]..[452,16512+22])
                          [
                            <arg>
                            Nolabel
                              expression (src/SelectiveExpansion.ml[452,16512+10]..[452,16512+20])
                                Pexp_apply
                                expression (src/SelectiveExpansion.ml[452,16512+10]..[452,16512+14])
                                  Pexp_ident "sort" (src/SelectiveExpansion.ml[452,16512+10]..[452,16512+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/SelectiveExpansion.ml[452,16512+15]..[452,16512+20])
                                      Pexp_ident "param" (src/SelectiveExpansion.ml[452,16512+15]..[452,16512+20])
                                ]
                            <arg>
                            Nolabel
                              expression (src/SelectiveExpansion.ml[452,16512+23]..[452,16512+27])
                                Pexp_ident "star" (src/SelectiveExpansion.ml[452,16512+23]..[452,16512+27])
                          ]
                      expression (src/SelectiveExpansion.ml[453,16542+2]..[453,16542+31])
                        Pexp_tuple
                        [
                          expression (src/SelectiveExpansion.ml[453,16542+3]..[453,16542+24])
                            Pexp_apply
                            expression (src/SelectiveExpansion.ml[453,16542+3]..[453,16542+18])
                              Pexp_ident "subst_parameter" (src/SelectiveExpansion.ml[453,16542+3]..[453,16542+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/SelectiveExpansion.ml[453,16542+19]..[453,16542+24])
                                  Pexp_ident "param" (src/SelectiveExpansion.ml[453,16542+19]..[453,16542+24])
                            ]
                          expression (src/SelectiveExpansion.ml[453,16542+26]..[453,16542+30])
                            Pexp_ident "info" (src/SelectiveExpansion.ml[453,16542+26]..[453,16542+30])
                        ]
              ]
            structure_item (src/SelectiveExpansion.ml[455,16575+0]..[456,16606+34])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[455,16575+4]..[455,16575+22])
                    Ppat_var "subst_declarations" (src/SelectiveExpansion.ml[455,16575+4]..[455,16575+22])
                  expression (src/SelectiveExpansion.ml[455,16575+23]..[456,16606+34]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/SelectiveExpansion.ml[455,16575+23]..[455,16575+28])
                      Ppat_var "decls" (src/SelectiveExpansion.ml[455,16575+23]..[455,16575+28])
                    expression (src/SelectiveExpansion.ml[456,16606+2]..[456,16606+34])
                      Pexp_apply
                      expression (src/SelectiveExpansion.ml[456,16606+2]..[456,16606+10])
                        Pexp_ident "List.map" (src/SelectiveExpansion.ml[456,16606+2]..[456,16606+10])
                      [
                        <arg>
                        Nolabel
                          expression (src/SelectiveExpansion.ml[456,16606+11]..[456,16606+28])
                            Pexp_ident "subst_declaration" (src/SelectiveExpansion.ml[456,16606+11]..[456,16606+28])
                        <arg>
                        Nolabel
                          expression (src/SelectiveExpansion.ml[456,16606+29]..[456,16606+34])
                            Pexp_ident "decls" (src/SelectiveExpansion.ml[456,16606+29]..[456,16606+34])
                      ]
              ]
            structure_item (src/SelectiveExpansion.ml[470,17272+0]..[472,17328+44])
              Pstr_type Rec
              [
                type_declaration "thing" (src/SelectiveExpansion.ml[470,17272+5]..[470,17272+10]) (src/SelectiveExpansion.ml[470,17272+0]..[472,17328+44])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_variant
                      [
                        (src/SelectiveExpansion.ml[471,17285+2]..[471,17285+42])
                          "TargetParameterOfSortStar" (src/SelectiveExpansion.ml[471,17285+4]..[471,17285+29])
                          [
                            core_type (src/SelectiveExpansion.ml[471,17285+33]..[471,17285+42])
                              Ptyp_constr "parameter" (src/SelectiveExpansion.ml[471,17285+33]..[471,17285+42])
                              []
                          ]
                          None
                        (src/SelectiveExpansion.ml[472,17328+2]..[472,17328+44])
                          "SourceParameterOfHigherSort" (src/SelectiveExpansion.ml[472,17328+4]..[472,17328+31])
                          [
                            core_type (src/SelectiveExpansion.ml[472,17328+35]..[472,17328+44])
                              Ptyp_constr "parameter" (src/SelectiveExpansion.ml[472,17328+35]..[472,17328+44])
                              []
                          ]
                          None
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (src/SelectiveExpansion.ml[474,17374+0]..[478,17502+37])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[474,17374+4]..[474,17374+22])
                    Ppat_var "thingify_parameter" (src/SelectiveExpansion.ml[474,17374+4]..[474,17374+22])
                  expression (src/SelectiveExpansion.ml[474,17374+23]..[478,17502+37]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/SelectiveExpansion.ml[474,17374+23]..[474,17374+28])
                      Ppat_var "param" (src/SelectiveExpansion.ml[474,17374+23]..[474,17374+28])
                    expression (src/SelectiveExpansion.ml[474,17374+29]..[478,17502+37])
                      Pexp_constraint
                      expression (src/SelectiveExpansion.ml[475,17413+2]..[478,17502+37])
                        Pexp_ifthenelse
                        expression (src/SelectiveExpansion.ml[475,17413+5]..[475,17413+22])
                          Pexp_apply
                          expression (src/SelectiveExpansion.ml[475,17413+16]..[475,17413+17])
                            Pexp_ident "=" (src/SelectiveExpansion.ml[475,17413+16]..[475,17413+17])
                          [
                            <arg>
                            Nolabel
                              expression (src/SelectiveExpansion.ml[475,17413+5]..[475,17413+15])
                                Pexp_apply
                                expression (src/SelectiveExpansion.ml[475,17413+5]..[475,17413+9])
                                  Pexp_ident "sort" (src/SelectiveExpansion.ml[475,17413+5]..[475,17413+9])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/SelectiveExpansion.ml[475,17413+10]..[475,17413+15])
                                      Pexp_ident "param" (src/SelectiveExpansion.ml[475,17413+10]..[475,17413+15])
                                ]
                            <arg>
                            Nolabel
                              expression (src/SelectiveExpansion.ml[475,17413+18]..[475,17413+22])
                                Pexp_ident "star" (src/SelectiveExpansion.ml[475,17413+18]..[475,17413+22])
                          ]
                        expression (src/SelectiveExpansion.ml[476,17441+4]..[476,17441+53])
                          Pexp_construct "TargetParameterOfSortStar" (src/SelectiveExpansion.ml[476,17441+4]..[476,17441+29])
                          Some
                            expression (src/SelectiveExpansion.ml[476,17441+30]..[476,17441+53])
                              Pexp_apply
                              expression (src/SelectiveExpansion.ml[476,17441+31]..[476,17441+46])
                                Pexp_ident "subst_parameter" (src/SelectiveExpansion.ml[476,17441+31]..[476,17441+46])
                              [
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[476,17441+47]..[476,17441+52])
                                    Pexp_ident "param" (src/SelectiveExpansion.ml[476,17441+47]..[476,17441+52])
                              ]
                        Some
                          expression (src/SelectiveExpansion.ml[478,17502+4]..[478,17502+37])
                            Pexp_construct "SourceParameterOfHigherSort" (src/SelectiveExpansion.ml[478,17502+4]..[478,17502+31])
                            Some
                              expression (src/SelectiveExpansion.ml[478,17502+32]..[478,17502+37])
                                Pexp_ident "param" (src/SelectiveExpansion.ml[478,17502+32]..[478,17502+37])
                      core_type (src/SelectiveExpansion.ml[474,17374+31]..[474,17374+36])
                        Ptyp_constr "thing" (src/SelectiveExpansion.ml[474,17374+31]..[474,17374+36])
                        []
              ]
            structure_item (src/SelectiveExpansion.ml[480,17541+0]..[481,17594+45])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[480,17541+4]..[480,17541+34])
                    Ppat_var "thingify_attribute_declaration" (src/SelectiveExpansion.ml[480,17541+4]..[480,17541+34])
                  expression (src/SelectiveExpansion.ml[480,17541+35]..[481,17594+45]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/SelectiveExpansion.ml[480,17541+35]..[480,17541+50])
                      Ppat_tuple
                      [
                        pattern (src/SelectiveExpansion.ml[480,17541+36]..[480,17541+42])
                          Ppat_var "params" (src/SelectiveExpansion.ml[480,17541+36]..[480,17541+42])
                        pattern (src/SelectiveExpansion.ml[480,17541+44]..[480,17541+49])
                          Ppat_var "attrs" (src/SelectiveExpansion.ml[480,17541+44]..[480,17541+49])
                      ]
                    expression (src/SelectiveExpansion.ml[481,17594+2]..[481,17594+45])
                      Pexp_tuple
                      [
                        expression (src/SelectiveExpansion.ml[481,17594+3]..[481,17594+37])
                          Pexp_apply
                          expression (src/SelectiveExpansion.ml[481,17594+3]..[481,17594+11])
                            Pexp_ident "List.map" (src/SelectiveExpansion.ml[481,17594+3]..[481,17594+11])
                          [
                            <arg>
                            Nolabel
                              expression (src/SelectiveExpansion.ml[481,17594+12]..[481,17594+30])
                                Pexp_ident "thingify_parameter" (src/SelectiveExpansion.ml[481,17594+12]..[481,17594+30])
                            <arg>
                            Nolabel
                              expression (src/SelectiveExpansion.ml[481,17594+31]..[481,17594+37])
                                Pexp_ident "params" (src/SelectiveExpansion.ml[481,17594+31]..[481,17594+37])
                          ]
                        expression (src/SelectiveExpansion.ml[481,17594+39]..[481,17594+44])
                          Pexp_ident "attrs" (src/SelectiveExpansion.ml[481,17594+39]..[481,17594+44])
                      ]
              ]
            structure_item (src/SelectiveExpansion.ml[483,17641+0]..[484,17685+47])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[483,17641+4]..[483,17641+35])
                    Ppat_var "thingify_attribute_declarations" (src/SelectiveExpansion.ml[483,17641+4]..[483,17641+35])
                  expression (src/SelectiveExpansion.ml[483,17641+36]..[484,17685+47]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/SelectiveExpansion.ml[483,17641+36]..[483,17641+41])
                      Ppat_var "decls" (src/SelectiveExpansion.ml[483,17641+36]..[483,17641+41])
                    expression (src/SelectiveExpansion.ml[484,17685+2]..[484,17685+47])
                      Pexp_apply
                      expression (src/SelectiveExpansion.ml[484,17685+2]..[484,17685+10])
                        Pexp_ident "List.map" (src/SelectiveExpansion.ml[484,17685+2]..[484,17685+10])
                      [
                        <arg>
                        Nolabel
                          expression (src/SelectiveExpansion.ml[484,17685+11]..[484,17685+41])
                            Pexp_ident "thingify_attribute_declaration" (src/SelectiveExpansion.ml[484,17685+11]..[484,17685+41])
                        <arg>
                        Nolabel
                          expression (src/SelectiveExpansion.ml[484,17685+42]..[484,17685+47])
                            Pexp_ident "decls" (src/SelectiveExpansion.ml[484,17685+42]..[484,17685+47])
                      ]
              ]
            structure_item (src/SelectiveExpansion.ml[486,17734+0]..[495,18120+60])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[486,17734+4]..[486,17734+24])
                    Ppat_var "unthingify_parameter" (src/SelectiveExpansion.ml[486,17734+4]..[486,17734+24])
                  expression (src/SelectiveExpansion.ml[486,17734+25]..[495,18120+60]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/SelectiveExpansion.ml[486,17734+25]..[486,17734+30])
                      Ppat_var "rules" (src/SelectiveExpansion.ml[486,17734+25]..[486,17734+30])
                    expression (src/SelectiveExpansion.ml[486,17734+31]..[495,18120+60]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/SelectiveExpansion.ml[486,17734+31]..[486,17734+36])
                        Ppat_var "thing" (src/SelectiveExpansion.ml[486,17734+31]..[486,17734+36])
                      expression (src/SelectiveExpansion.ml[487,17773+2]..[495,18120+60])
                        Pexp_match
                        expression (src/SelectiveExpansion.ml[487,17773+8]..[487,17773+13])
                          Pexp_ident "thing" (src/SelectiveExpansion.ml[487,17773+8]..[487,17773+13])
                        [
                          <case>
                            pattern (src/SelectiveExpansion.ml[488,17792+4]..[488,17792+35])
                              Ppat_construct "TargetParameterOfSortStar" (src/SelectiveExpansion.ml[488,17792+4]..[488,17792+29])
                              Some
                                []
                                pattern (src/SelectiveExpansion.ml[488,17792+30]..[488,17792+35])
                                  Ppat_var "param" (src/SelectiveExpansion.ml[488,17792+30]..[488,17792+35])
                            expression (src/SelectiveExpansion.ml[490,17884+5]..[490,17884+15])
                              Pexp_construct "Some" (src/SelectiveExpansion.ml[490,17884+5]..[490,17884+9])
                              Some
                                expression (src/SelectiveExpansion.ml[490,17884+10]..[490,17884+15])
                                  Pexp_ident "param" (src/SelectiveExpansion.ml[490,17884+10]..[490,17884+15])
                          <case>
                            pattern (src/SelectiveExpansion.ml[491,17900+4]..[491,17900+37])
                              Ppat_construct "SourceParameterOfHigherSort" (src/SelectiveExpansion.ml[491,17900+4]..[491,17900+31])
                              Some
                                []
                                pattern (src/SelectiveExpansion.ml[491,17900+32]..[491,17900+37])
                                  Ppat_var "param" (src/SelectiveExpansion.ml[491,17900+32]..[491,17900+37])
                            expression (src/SelectiveExpansion.ml[494,18068+5]..[495,18120+60])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/SelectiveExpansion.ml[494,18068+9]..[494,18068+15])
                                    Ppat_var "symbol" (src/SelectiveExpansion.ml[494,18068+9]..[494,18068+15])
                                  expression (src/SelectiveExpansion.ml[494,18068+18]..[494,18068+48])
                                    Pexp_apply
                                    expression (src/SelectiveExpansion.ml[494,18068+18]..[494,18068+23])
                                      Pexp_ident "value" (src/SelectiveExpansion.ml[494,18068+18]..[494,18068+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/SelectiveExpansion.ml[494,18068+24]..[494,18068+48])
                                          Pexp_apply
                                          expression (src/SelectiveExpansion.ml[494,18068+25]..[494,18068+41])
                                            Pexp_ident "Parameters.unvar" (src/SelectiveExpansion.ml[494,18068+25]..[494,18068+41])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/SelectiveExpansion.ml[494,18068+42]..[494,18068+47])
                                                Pexp_ident "param" (src/SelectiveExpansion.ml[494,18068+42]..[494,18068+47])
                                          ]
                                    ]
                              ]
                              expression (src/SelectiveExpansion.ml[495,18120+5]..[495,18120+60])
                                Pexp_ifthenelse
                                expression (src/SelectiveExpansion.ml[495,18120+8]..[495,18120+34])
                                  Pexp_apply
                                  expression (src/SelectiveExpansion.ml[495,18120+8]..[495,18120+21])
                                    Pexp_ident "StringMap.mem" (src/SelectiveExpansion.ml[495,18120+8]..[495,18120+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/SelectiveExpansion.ml[495,18120+22]..[495,18120+28])
                                        Pexp_ident "symbol" (src/SelectiveExpansion.ml[495,18120+22]..[495,18120+28])
                                    <arg>
                                    Nolabel
                                      expression (src/SelectiveExpansion.ml[495,18120+29]..[495,18120+34])
                                        Pexp_ident "rules" (src/SelectiveExpansion.ml[495,18120+29]..[495,18120+34])
                                  ]
                                expression (src/SelectiveExpansion.ml[495,18120+40]..[495,18120+50])
                                  Pexp_construct "Some" (src/SelectiveExpansion.ml[495,18120+40]..[495,18120+44])
                                  Some
                                    expression (src/SelectiveExpansion.ml[495,18120+45]..[495,18120+50])
                                      Pexp_ident "param" (src/SelectiveExpansion.ml[495,18120+45]..[495,18120+50])
                                Some
                                  expression (src/SelectiveExpansion.ml[495,18120+56]..[495,18120+60])
                                    Pexp_construct "None" (src/SelectiveExpansion.ml[495,18120+56]..[495,18120+60])
                                    None
                        ]
              ]
            structure_item (src/SelectiveExpansion.ml[497,18182+0]..[498,18243+62])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[497,18182+4]..[497,18182+36])
                    Ppat_var "unthingify_attribute_declaration" (src/SelectiveExpansion.ml[497,18182+4]..[497,18182+36])
                  expression (src/SelectiveExpansion.ml[497,18182+37]..[498,18243+62]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/SelectiveExpansion.ml[497,18182+37]..[497,18182+42])
                      Ppat_var "rules" (src/SelectiveExpansion.ml[497,18182+37]..[497,18182+42])
                    expression (src/SelectiveExpansion.ml[497,18182+43]..[498,18243+62]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/SelectiveExpansion.ml[497,18182+43]..[497,18182+58])
                        Ppat_tuple
                        [
                          pattern (src/SelectiveExpansion.ml[497,18182+44]..[497,18182+50])
                            Ppat_var "params" (src/SelectiveExpansion.ml[497,18182+44]..[497,18182+50])
                          pattern (src/SelectiveExpansion.ml[497,18182+52]..[497,18182+57])
                            Ppat_var "attrs" (src/SelectiveExpansion.ml[497,18182+52]..[497,18182+57])
                        ]
                      expression (src/SelectiveExpansion.ml[498,18243+2]..[498,18243+62])
                        Pexp_tuple
                        [
                          expression (src/SelectiveExpansion.ml[498,18243+3]..[498,18243+54])
                            Pexp_apply
                            expression (src/SelectiveExpansion.ml[498,18243+3]..[498,18243+18])
                              Pexp_ident "Misc.filter_map" (src/SelectiveExpansion.ml[498,18243+3]..[498,18243+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/SelectiveExpansion.ml[498,18243+19]..[498,18243+47])
                                  Pexp_apply
                                  expression (src/SelectiveExpansion.ml[498,18243+20]..[498,18243+40])
                                    Pexp_ident "unthingify_parameter" (src/SelectiveExpansion.ml[498,18243+20]..[498,18243+40])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/SelectiveExpansion.ml[498,18243+41]..[498,18243+46])
                                        Pexp_ident "rules" (src/SelectiveExpansion.ml[498,18243+41]..[498,18243+46])
                                  ]
                              <arg>
                              Nolabel
                                expression (src/SelectiveExpansion.ml[498,18243+48]..[498,18243+54])
                                  Pexp_ident "params" (src/SelectiveExpansion.ml[498,18243+48]..[498,18243+54])
                            ]
                          expression (src/SelectiveExpansion.ml[498,18243+56]..[498,18243+61])
                            Pexp_ident "attrs" (src/SelectiveExpansion.ml[498,18243+56]..[498,18243+61])
                        ]
              ]
            structure_item (src/SelectiveExpansion.ml[500,18307+0]..[501,18359+57])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[500,18307+4]..[500,18307+37])
                    Ppat_var "unthingify_attribute_declarations" (src/SelectiveExpansion.ml[500,18307+4]..[500,18307+37])
                  expression (src/SelectiveExpansion.ml[500,18307+38]..[501,18359+57]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/SelectiveExpansion.ml[500,18307+38]..[500,18307+43])
                      Ppat_var "rules" (src/SelectiveExpansion.ml[500,18307+38]..[500,18307+43])
                    expression (src/SelectiveExpansion.ml[500,18307+44]..[501,18359+57]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/SelectiveExpansion.ml[500,18307+44]..[500,18307+49])
                        Ppat_var "decls" (src/SelectiveExpansion.ml[500,18307+44]..[500,18307+49])
                      expression (src/SelectiveExpansion.ml[501,18359+2]..[501,18359+57])
                        Pexp_apply
                        expression (src/SelectiveExpansion.ml[501,18359+2]..[501,18359+10])
                          Pexp_ident "List.map" (src/SelectiveExpansion.ml[501,18359+2]..[501,18359+10])
                        [
                          <arg>
                          Nolabel
                            expression (src/SelectiveExpansion.ml[501,18359+11]..[501,18359+51])
                              Pexp_apply
                              expression (src/SelectiveExpansion.ml[501,18359+12]..[501,18359+44])
                                Pexp_ident "unthingify_attribute_declaration" (src/SelectiveExpansion.ml[501,18359+12]..[501,18359+44])
                              [
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[501,18359+45]..[501,18359+50])
                                    Pexp_ident "rules" (src/SelectiveExpansion.ml[501,18359+45]..[501,18359+50])
                              ]
                          <arg>
                          Nolabel
                            expression (src/SelectiveExpansion.ml[501,18359+52]..[501,18359+57])
                              Pexp_ident "decls" (src/SelectiveExpansion.ml[501,18359+52]..[501,18359+57])
                        ]
              ]
            structure_item (src/SelectiveExpansion.ml[507,18558+0]..[521,19048+13])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/SelectiveExpansion.ml[507,18558+4]..[507,18558+5])
                    Ppat_var "g" (src/SelectiveExpansion.ml[507,18558+4]..[507,18558+5])
                  expression (src/SelectiveExpansion.ml[509,18601+2]..[521,19048+13])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/SelectiveExpansion.ml[509,18601+6]..[509,18601+13])
                          Ppat_var "p_types" (src/SelectiveExpansion.ml[509,18601+6]..[509,18601+13])
                        expression (src/SelectiveExpansion.ml[509,18601+16]..[509,18601+44])
                          Pexp_apply
                          expression (src/SelectiveExpansion.ml[509,18601+16]..[509,18601+34])
                            Pexp_ident "subst_declarations" (src/SelectiveExpansion.ml[509,18601+16]..[509,18601+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/SelectiveExpansion.ml[509,18601+35]..[509,18601+44])
                                Pexp_field
                                expression (src/SelectiveExpansion.ml[509,18601+35]..[509,18601+36])
                                  Pexp_ident "g" (src/SelectiveExpansion.ml[509,18601+35]..[509,18601+36])
                                "p_types" (src/SelectiveExpansion.ml[509,18601+37]..[509,18601+44])
                          ]
                      <def>
                        pattern (src/SelectiveExpansion.ml[510,18646+6]..[510,18646+23])
                          Ppat_var "p_on_error_reduce" (src/SelectiveExpansion.ml[510,18646+6]..[510,18646+23])
                        expression (src/SelectiveExpansion.ml[510,18646+26]..[510,18646+64])
                          Pexp_apply
                          expression (src/SelectiveExpansion.ml[510,18646+26]..[510,18646+44])
                            Pexp_ident "subst_declarations" (src/SelectiveExpansion.ml[510,18646+26]..[510,18646+44])
                          [
                            <arg>
                            Nolabel
                              expression (src/SelectiveExpansion.ml[510,18646+45]..[510,18646+64])
                                Pexp_field
                                expression (src/SelectiveExpansion.ml[510,18646+45]..[510,18646+46])
                                  Pexp_ident "g" (src/SelectiveExpansion.ml[510,18646+45]..[510,18646+46])
                                "p_on_error_reduce" (src/SelectiveExpansion.ml[510,18646+47]..[510,18646+64])
                          ]
                      <def>
                        pattern (src/SelectiveExpansion.ml[511,18711+6]..[511,18711+12])
                          Ppat_var "things" (src/SelectiveExpansion.ml[511,18711+6]..[511,18711+12])
                        expression (src/SelectiveExpansion.ml[511,18711+15]..[511,18711+68])
                          Pexp_apply
                          expression (src/SelectiveExpansion.ml[511,18711+15]..[511,18711+46])
                            Pexp_ident "thingify_attribute_declarations" (src/SelectiveExpansion.ml[511,18711+15]..[511,18711+46])
                          [
                            <arg>
                            Nolabel
                              expression (src/SelectiveExpansion.ml[511,18711+47]..[511,18711+68])
                                Pexp_field
                                expression (src/SelectiveExpansion.ml[511,18711+47]..[511,18711+48])
                                  Pexp_ident "g" (src/SelectiveExpansion.ml[511,18711+47]..[511,18711+48])
                                "p_symbol_attributes" (src/SelectiveExpansion.ml[511,18711+49]..[511,18711+68])
                          ]
                    ]
                    expression (src/SelectiveExpansion.ml[513,18808+2]..[521,19048+13])
                      Pexp_sequence
                      expression (src/SelectiveExpansion.ml[513,18808+2]..[513,18808+18])
                        Pexp_apply
                        expression (src/SelectiveExpansion.ml[513,18808+2]..[513,18808+12])
                          Pexp_ident "repeatedly" (src/SelectiveExpansion.ml[513,18808+2]..[513,18808+12])
                        [
                          <arg>
                          Nolabel
                            expression (src/SelectiveExpansion.ml[513,18808+13]..[513,18808+18])
                              Pexp_ident "visit" (src/SelectiveExpansion.ml[513,18808+13]..[513,18808+18])
                        ]
                      expression (src/SelectiveExpansion.ml[515,18869+2]..[521,19048+13])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/SelectiveExpansion.ml[515,18869+6]..[515,18869+13])
                              Ppat_var "p_rules" (src/SelectiveExpansion.ml[515,18869+6]..[515,18869+13])
                            expression (src/SelectiveExpansion.ml[515,18869+16]..[515,18869+23])
                              Pexp_apply
                              expression (src/SelectiveExpansion.ml[515,18869+16]..[515,18869+21])
                                Pexp_ident "rules" (src/SelectiveExpansion.ml[515,18869+16]..[515,18869+21])
                              [
                                <arg>
                                Nolabel
                                  expression (src/SelectiveExpansion.ml[515,18869+21]..[515,18869+23])
                                    Pexp_construct "()" (src/SelectiveExpansion.ml[515,18869+21]..[515,18869+23])
                                    None
                              ]
                        ]
                        expression (src/SelectiveExpansion.ml[516,18896+2]..[521,19048+13])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/SelectiveExpansion.ml[516,18896+6]..[516,18896+25])
                                Ppat_var "p_symbol_attributes" (src/SelectiveExpansion.ml[516,18896+6]..[516,18896+25])
                              expression (src/SelectiveExpansion.ml[516,18896+28]..[516,18896+76])
                                Pexp_apply
                                expression (src/SelectiveExpansion.ml[516,18896+28]..[516,18896+61])
                                  Pexp_ident "unthingify_attribute_declarations" (src/SelectiveExpansion.ml[516,18896+28]..[516,18896+61])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/SelectiveExpansion.ml[516,18896+62]..[516,18896+69])
                                      Pexp_ident "p_rules" (src/SelectiveExpansion.ml[516,18896+62]..[516,18896+69])
                                  <arg>
                                  Nolabel
                                    expression (src/SelectiveExpansion.ml[516,18896+70]..[516,18896+76])
                                      Pexp_ident "things" (src/SelectiveExpansion.ml[516,18896+70]..[516,18896+76])
                                ]
                          ]
                          expression (src/SelectiveExpansion.ml[517,18976+2]..[521,19048+13])
                            Pexp_record
                            [
                              "p_types" (src/SelectiveExpansion.ml[518,18987+4]..[518,18987+11]) ghost
                                expression (src/SelectiveExpansion.ml[518,18987+4]..[518,18987+11])
                                  Pexp_ident "p_types" (src/SelectiveExpansion.ml[518,18987+4]..[518,18987+11])
                              "p_on_error_reduce" (src/SelectiveExpansion.ml[519,19000+4]..[519,19000+21]) ghost
                                expression (src/SelectiveExpansion.ml[519,19000+4]..[519,19000+21])
                                  Pexp_ident "p_on_error_reduce" (src/SelectiveExpansion.ml[519,19000+4]..[519,19000+21])
                              "p_symbol_attributes" (src/SelectiveExpansion.ml[520,19023+4]..[520,19023+23]) ghost
                                expression (src/SelectiveExpansion.ml[520,19023+4]..[520,19023+23])
                                  Pexp_ident "p_symbol_attributes" (src/SelectiveExpansion.ml[520,19023+4]..[520,19023+23])
                              "p_rules" (src/SelectiveExpansion.ml[521,19048+4]..[521,19048+11]) ghost
                                expression (src/SelectiveExpansion.ml[521,19048+4]..[521,19048+11])
                                  Pexp_ident "p_rules" (src/SelectiveExpansion.ml[521,19048+4]..[521,19048+11])
                            ]
                            Some
                              expression (src/SelectiveExpansion.ml[517,18976+4]..[517,18976+5])
                                Pexp_ident "g" (src/SelectiveExpansion.ml[517,18976+4]..[517,18976+5])
              ]
          ]
  structure_item (src/SelectiveExpansion.ml[529,19222+0]..[535,19342+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/SelectiveExpansion.ml[529,19222+4]..[529,19222+10])
          Ppat_var "expand" (src/SelectiveExpansion.ml[529,19222+4]..[529,19222+10])
        expression (src/SelectiveExpansion.ml[529,19222+11]..[535,19342+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/SelectiveExpansion.ml[529,19222+11]..[529,19222+15])
            Ppat_var "mode" (src/SelectiveExpansion.ml[529,19222+11]..[529,19222+15])
          expression (src/SelectiveExpansion.ml[529,19222+16]..[535,19342+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/SelectiveExpansion.ml[529,19222+16]..[529,19222+21])
              Ppat_var "sorts" (src/SelectiveExpansion.ml[529,19222+16]..[529,19222+21])
            expression (src/SelectiveExpansion.ml[529,19222+22]..[535,19342+5]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/SelectiveExpansion.ml[529,19222+22]..[529,19222+23])
                Ppat_var "g" (src/SelectiveExpansion.ml[529,19222+22]..[529,19222+23])
              expression (src/SelectiveExpansion.ml[530,19248+2]..[535,19342+5])
                Pexp_letmodule "G" (src/SelectiveExpansion.ml[530,19248+13]..[530,19248+14])
                module_expr (src/SelectiveExpansion.ml[530,19248+17]..[534,19332+6])
                  Pmod_apply
                  module_expr (src/SelectiveExpansion.ml[530,19248+17]..[530,19248+20])
                    Pmod_ident "Run" (src/SelectiveExpansion.ml[530,19248+17]..[530,19248+20])
                  module_expr (src/SelectiveExpansion.ml[530,19248+21]..[534,19332+5])
                    Pmod_structure
                    [
                      structure_item (src/SelectiveExpansion.ml[531,19276+4]..[531,19276+19])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (src/SelectiveExpansion.ml[531,19276+8]..[531,19276+12])
                              Ppat_var "mode" (src/SelectiveExpansion.ml[531,19276+8]..[531,19276+12])
                            expression (src/SelectiveExpansion.ml[531,19276+15]..[531,19276+19])
                              Pexp_ident "mode" (src/SelectiveExpansion.ml[531,19276+15]..[531,19276+19])
                        ]
                      structure_item (src/SelectiveExpansion.ml[532,19296+4]..[532,19296+21])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (src/SelectiveExpansion.ml[532,19296+8]..[532,19296+13])
                              Ppat_var "sorts" (src/SelectiveExpansion.ml[532,19296+8]..[532,19296+13])
                            expression (src/SelectiveExpansion.ml[532,19296+16]..[532,19296+21])
                              Pexp_ident "sorts" (src/SelectiveExpansion.ml[532,19296+16]..[532,19296+21])
                        ]
                      structure_item (src/SelectiveExpansion.ml[533,19318+4]..[533,19318+13])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (src/SelectiveExpansion.ml[533,19318+8]..[533,19318+9])
                              Ppat_var "g" (src/SelectiveExpansion.ml[533,19318+8]..[533,19318+9])
                            expression (src/SelectiveExpansion.ml[533,19318+12]..[533,19318+13])
                              Pexp_ident "g" (src/SelectiveExpansion.ml[533,19318+12]..[533,19318+13])
                        ]
                    ]
                expression (src/SelectiveExpansion.ml[535,19342+2]..[535,19342+5])
                  Pexp_ident "G.g" (src/SelectiveExpansion.ml[535,19342+2]..[535,19342+5])
    ]
]

let value = Positions.value
let unknown = Positions.unknown_pos
open Syntax
open GroundSort
type mode =
  | ExpandHigherSort 
  | ExpandAll 
type instantiation = parameter option list
type label = (nonterminal * instantiation)
module Label =
  struct
    type t = label
    let equal (nt1, inst1) (nt2, inst2) =
      (nt1 = nt2) &&
        (List.for_all2 (Option.equal Parameters.equal) inst1 inst2)
    let hash (nt, inst) =
      Hashtbl.hash
        (nt, (Misc.ListExtras.hash (Option.hash Parameters.hash) inst))
  end
let mangle_po (po : parameter option) =
  match po with | None -> "_" | Some p -> Parameters.print false p
let mangle ((nt, pos) : label) =
  (if pos = []
   then nt
   else
     Printf.sprintf "%s(%s)" nt
       (Misc.separated_list_to_string mangle_po "," pos) : nonterminal)
module Env = StringMap
type env = parameter Env.t
let subst_symbol env sym =
  (try Env.find (value sym) env with | Not_found -> ParameterVar sym : 
  parameter)
let apply (param : parameter) (params : parameter list) =
  (match param with
   | ParameterVar sym -> (assert (params <> []); ParameterApp (sym, params))
   | ParameterApp _ -> assert false
   | ParameterAnonymous _ -> assert false : parameter)
let rec subst_parameter env param =
  (match param with
   | ParameterVar sym -> subst_symbol env sym
   | ParameterApp (sym, params) ->
       (assert (params <> []);
        apply (subst_symbol env sym) (subst_parameters env params))
   | ParameterAnonymous _ -> assert false : parameter)
and subst_parameters env params = List.map (subst_parameter env) params
module Run(G:sig
               val mode : mode
               val sorts : SortInference.sorts
               val g : grammar
             end) =
  struct
    open G
    let sort symbol =
      try StringMap.find (value symbol) sorts
      with | Not_found -> assert false
    let sort param =
      match param with
      | ParameterVar sym -> sort sym
      | ParameterApp (_, params) -> (assert (params <> []); star)
      | ParameterAnonymous _ -> assert false
    let global_attributes (nt : symbol) =
      (let param = ParameterVar (unknown nt) in
       List.concat
         (List.map
            (fun (params, attrs) ->
               if List.exists (Parameters.equal param) params
               then attrs
               else []) g.p_symbol_attributes) : attribute list)
    let (enqueue, repeatedly) =
      let queue = Queue.create () in
      let enqueue label = Queue.add label queue
      and repeatedly visit = Misc.qiter visit queue in (enqueue, repeatedly)
    let (mark, marked) =
      let module H = (Hashtbl.Make)(Label) in
        let table = H.create 128 in
        let mark label = H.add table label ()
        and marked label = H.mem table label in (mark, marked)
    let (emit, rules) =
      let rules = ref StringMap.empty in
      let emit rule =
        assert (not (StringMap.mem rule.pr_nt (!rules)));
        rules := (StringMap.add rule.pr_nt rule (!rules))
      and rules () = !rules in (emit, rules)
    let new_claim () =
      (let names = ref StringSet.empty in
       let claim name =
         if StringSet.mem name (!names)
         then Error.error [] "internal name clash over %s" name;
         names := (StringSet.add name (!names)) in
       claim : string -> unit)
    let mangle : label -> nonterminal =
      let ensure_fresh = new_claim () in
      let module M = (Fix.Memoize.ForHashedType)(Label) in
        M.memoize
          (fun label ->
             let name = mangle label in
             ensure_fresh (Misc.normalize name); name)
    let rec recognize (param : parameter) =
      (match param with
       | ParameterAnonymous _ -> assert false
       | ParameterVar _ -> param
       | ParameterApp (sym, ps) ->
           (assert (ps <> []);
            (let x = value sym in
             let (inst, residuals) =
               match mode with
               | ExpandAll ->
                   let inst = List.map (fun p -> Some p) ps
                   and residuals = [] in (inst, residuals)
               | ExpandHigherSort ->
                   let ss : sort list = domain (sort (ParameterVar sym)) in
                   (assert ((List.length ps) = (List.length ss));
                    (let pss = List.combine ps ss in
                     let inst =
                       pss |>
                         (List.map
                            (fun (param, sort) ->
                               if sort = star then None else Some param)) in
                     let residuals =
                       (pss |> (List.filter (fun (_, sort) -> sort = star)))
                         |> (List.map (fun (param, _) -> recognize param)) in
                     (inst, residuals))) in
             let label = (x, inst) in
             enqueue label;
             (let sym = mangle label in
              Parameters.app (unknown sym) residuals))) : parameter)
    let subst_parameter env param = recognize (subst_parameter env param)
    let subst_producer env (id, param, attrs) =
      let param = subst_parameter env param in (id, param, attrs)
    let subst_producers env producers =
      List.map (subst_producer env) producers
    let subst_branch env branch =
      { branch with pr_producers = (subst_producers env branch.pr_producers)
      }
    let subst_branches env branches = List.map (subst_branch env) branches
    let freshen : string -> string =
      let c = ref 0 in
      fun x -> Printf.sprintf "%s__menhir__%d" x (Misc.postincrement c)
    let instantiation_env formals inst =
      (assert ((List.length formals) = (List.length inst));
       (let (env, residuals) =
          List.fold_right2
            (fun formal ->
               fun po ->
                 fun (env, residuals) ->
                   let (param, residuals) =
                     match po with
                     | Some param -> (param, residuals)
                     | None ->
                         let formal = freshen formal in
                         ((ParameterVar (unknown formal)), (formal ::
                           residuals)) in
                   ((Env.add formal param env), residuals)) formals inst
            (Env.empty, []) in
        (env, residuals)) : (env * symbol list))
    let visit label =
      if not (marked label)
      then
        (mark label;
         (let (nt, inst) = label in
          let rule = StringMap.find nt g.p_rules in
          let formals = rule.pr_parameters in
          let (env, residuals) = instantiation_env formals inst in
          emit
            {
              rule with
              pr_nt = (mangle label);
              pr_parameters = residuals;
              pr_branches = (subst_branches env rule.pr_branches);
              pr_attributes =
                ((if formals = [] then [] else global_attributes nt) @
                   rule.pr_attributes)
            }))
    let () =
      StringMap.iter
        (fun nt ->
           fun prule ->
             if prule.pr_parameters = []
             then let label = (nt, []) in enqueue label) g.p_rules
    let subst_parameter param = subst_parameter Env.empty param
    let subst_declaration (param, info) =
      assert ((sort param) = star); ((subst_parameter param), info)
    let subst_declarations decls = List.map subst_declaration decls
    type thing =
      | TargetParameterOfSortStar of parameter 
      | SourceParameterOfHigherSort of parameter 
    let thingify_parameter param =
      (if (sort param) = star
       then TargetParameterOfSortStar (subst_parameter param)
       else SourceParameterOfHigherSort param : thing)
    let thingify_attribute_declaration (params, attrs) =
      ((List.map thingify_parameter params), attrs)
    let thingify_attribute_declarations decls =
      List.map thingify_attribute_declaration decls
    let unthingify_parameter rules thing =
      match thing with
      | TargetParameterOfSortStar param -> Some param
      | SourceParameterOfHigherSort param ->
          let symbol = value (Parameters.unvar param) in
          if StringMap.mem symbol rules then Some param else None
    let unthingify_attribute_declaration rules (params, attrs) =
      ((Misc.filter_map (unthingify_parameter rules) params), attrs)
    let unthingify_attribute_declarations rules decls =
      List.map (unthingify_attribute_declaration rules) decls
    let g =
      let p_types = subst_declarations g.p_types
      and p_on_error_reduce = subst_declarations g.p_on_error_reduce
      and things = thingify_attribute_declarations g.p_symbol_attributes in
      repeatedly visit;
      (let p_rules = rules () in
       let p_symbol_attributes =
         unthingify_attribute_declarations p_rules things in
       { g with p_types; p_on_error_reduce; p_symbol_attributes; p_rules })
  end
let expand mode sorts g =
  let module G = (Run)(struct let mode = mode
                              let sorts = sorts
                              let g = g end) in G.g
[
  structure_item (src/SelectiveExpansion.ml[14,1008+0]..src/SelectiveExpansion.ml[14,1008+30])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/SelectiveExpansion.ml[14,1008+4]..src/SelectiveExpansion.ml[14,1008+9])
          Tpat_var "value/397"
        expression (src/SelectiveExpansion.ml[14,1008+15]..src/SelectiveExpansion.ml[14,1008+30])
          Texp_ident "Dune__exe!.Positions.value"
    ]
  structure_item (src/SelectiveExpansion.ml[15,1039+0]..src/SelectiveExpansion.ml[15,1039+36])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/SelectiveExpansion.ml[15,1039+4]..src/SelectiveExpansion.ml[15,1039+11])
          Tpat_var "unknown/433"
        expression (src/SelectiveExpansion.ml[15,1039+15]..src/SelectiveExpansion.ml[15,1039+36])
          Texp_ident "Dune__exe!.Positions.unknown_pos"
    ]
  structure_item (src/SelectiveExpansion.ml[16,1076+0]..src/SelectiveExpansion.ml[16,1076+11])
    Tstr_open Fresh
    module_expr (src/SelectiveExpansion.ml[16,1076+5]..src/SelectiveExpansion.ml[16,1076+11])
      Tmod_ident "Dune__exe!.Syntax"
  structure_item (src/SelectiveExpansion.ml[17,1088+0]..src/SelectiveExpansion.ml[17,1088+15])
    Tstr_open Fresh
    module_expr (src/SelectiveExpansion.ml[17,1088+5]..src/SelectiveExpansion.ml[17,1088+15])
      Tmod_ident "Dune__exe!.GroundSort"
  structure_item (src/SelectiveExpansion.ml[23,1211+0]..src/SelectiveExpansion.ml[25,1244+13])
    Tstr_type Rec
    [
      type_declaration mode/472 (src/SelectiveExpansion.ml[23,1211+0]..src/SelectiveExpansion.ml[25,1244+13])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (src/SelectiveExpansion.ml[24,1223+2]..src/SelectiveExpansion.ml[24,1223+20])
                ExpandHigherSort/473
                []
                None
              (src/SelectiveExpansion.ml[25,1244+2]..src/SelectiveExpansion.ml[25,1244+13])
                ExpandAll/474
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/SelectiveExpansion.ml[42,1994+0]..src/SelectiveExpansion.ml[43,2015+23])
    Tstr_type Rec
    [
      type_declaration instantiation/475 (src/SelectiveExpansion.ml[42,1994+0]..src/SelectiveExpansion.ml[43,2015+23])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/SelectiveExpansion.ml[43,2015+2]..src/SelectiveExpansion.ml[43,2015+23])
              Ttyp_constr "list/9!"
              [
                core_type (src/SelectiveExpansion.ml[43,2015+2]..src/SelectiveExpansion.ml[43,2015+18])
                  Ttyp_constr "option/10!"
                  [
                    core_type (src/SelectiveExpansion.ml[43,2015+2]..src/SelectiveExpansion.ml[43,2015+11])
                      Ttyp_constr "Dune__exe!.Syntax.parameter"
                      []
                  ]
              ]
    ]
  structure_item (src/SelectiveExpansion.ml[45,2040+0]..src/SelectiveExpansion.ml[46,2053+29])
    Tstr_type Rec
    [
      type_declaration label/511 (src/SelectiveExpansion.ml[45,2040+0]..src/SelectiveExpansion.ml[46,2053+29])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/SelectiveExpansion.ml[46,2053+2]..src/SelectiveExpansion.ml[46,2053+29])
              Ttyp_tuple
              [
                core_type (src/SelectiveExpansion.ml[46,2053+2]..src/SelectiveExpansion.ml[46,2053+13])
                  Ttyp_constr "Dune__exe!.Syntax.nonterminal"
                  []
                core_type (src/SelectiveExpansion.ml[46,2053+16]..src/SelectiveExpansion.ml[46,2053+29])
                  Ttyp_constr "instantiation/475"
                  []
              ]
    ]
  structure_item (src/SelectiveExpansion.ml[50,2124+0]..src/SelectiveExpansion.ml[57,2385+3])
    Tstr_module
    Label/731
      module_expr (src/SelectiveExpansion.ml[50,2124+15]..src/SelectiveExpansion.ml[57,2385+3])
        Tmod_structure
        [
          structure_item (src/SelectiveExpansion.ml[51,2146+2]..src/SelectiveExpansion.ml[51,2146+16])
            Tstr_type Rec
            [
              type_declaration t/512 (src/SelectiveExpansion.ml[51,2146+2]..src/SelectiveExpansion.ml[51,2146+16])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/SelectiveExpansion.ml[51,2146+11]..src/SelectiveExpansion.ml[51,2146+16])
                      Ttyp_constr "label/511"
                      []
            ]
          structure_item (src/SelectiveExpansion.ml[52,2163+2]..src/SelectiveExpansion.ml[54,2220+61])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/SelectiveExpansion.ml[52,2163+6]..src/SelectiveExpansion.ml[52,2163+11])
                  Tpat_var "equal/513"
                expression (src/SelectiveExpansion.ml[52,2163+12]..src/SelectiveExpansion.ml[54,2220+61]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/SelectiveExpansion.ml[52,2163+12]..src/SelectiveExpansion.ml[52,2163+24])
                        Tpat_tuple
                        [
                          pattern (src/SelectiveExpansion.ml[52,2163+13]..src/SelectiveExpansion.ml[52,2163+16])
                            Tpat_var "nt1/515"
                          pattern (src/SelectiveExpansion.ml[52,2163+18]..src/SelectiveExpansion.ml[52,2163+23])
                            Tpat_var "inst1/516"
                        ]
                      expression (src/SelectiveExpansion.ml[52,2163+25]..src/SelectiveExpansion.ml[54,2220+61]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/SelectiveExpansion.ml[52,2163+25]..src/SelectiveExpansion.ml[52,2163+37])
                              Tpat_tuple
                              [
                                pattern (src/SelectiveExpansion.ml[52,2163+26]..src/SelectiveExpansion.ml[52,2163+29])
                                  Tpat_var "nt2/517"
                                pattern (src/SelectiveExpansion.ml[52,2163+31]..src/SelectiveExpansion.ml[52,2163+36])
                                  Tpat_var "inst2/518"
                              ]
                            expression (src/SelectiveExpansion.ml[53,2203+4]..src/SelectiveExpansion.ml[54,2220+61])
                              Texp_apply
                              expression (src/SelectiveExpansion.ml[53,2203+14]..src/SelectiveExpansion.ml[53,2203+16])
                                Texp_ident "Stdlib!.&&"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/SelectiveExpansion.ml[53,2203+4]..src/SelectiveExpansion.ml[53,2203+13])
                                    Texp_apply
                                    expression (src/SelectiveExpansion.ml[53,2203+8]..src/SelectiveExpansion.ml[53,2203+9])
                                      Texp_ident "Stdlib!.="
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/SelectiveExpansion.ml[53,2203+4]..src/SelectiveExpansion.ml[53,2203+7])
                                          Texp_ident "nt1/515"
                                      <arg>
                                        Nolabel
                                        expression (src/SelectiveExpansion.ml[53,2203+10]..src/SelectiveExpansion.ml[53,2203+13])
                                          Texp_ident "nt2/517"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/SelectiveExpansion.ml[54,2220+4]..src/SelectiveExpansion.ml[54,2220+61])
                                    Texp_apply
                                    expression (src/SelectiveExpansion.ml[54,2220+4]..src/SelectiveExpansion.ml[54,2220+17])
                                      Texp_ident "Stdlib!.List.for_all2"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/SelectiveExpansion.ml[54,2220+18]..src/SelectiveExpansion.ml[54,2220+49])
                                          Texp_apply
                                          expression (src/SelectiveExpansion.ml[54,2220+19]..src/SelectiveExpansion.ml[54,2220+31])
                                            Texp_ident "Dune__exe!.Option.equal"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/SelectiveExpansion.ml[54,2220+32]..src/SelectiveExpansion.ml[54,2220+48])
                                                Texp_ident "Dune__exe!.Parameters.equal"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/SelectiveExpansion.ml[54,2220+50]..src/SelectiveExpansion.ml[54,2220+55])
                                          Texp_ident "inst1/516"
                                      <arg>
                                        Nolabel
                                        expression (src/SelectiveExpansion.ml[54,2220+56]..src/SelectiveExpansion.ml[54,2220+61])
                                          Texp_ident "inst2/518"
                                    ]
                              ]
                        ]
                  ]
            ]
          structure_item (src/SelectiveExpansion.ml[55,2282+2]..src/SelectiveExpansion.ml[56,2306+78])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/SelectiveExpansion.ml[55,2282+6]..src/SelectiveExpansion.ml[55,2282+10])
                  Tpat_var "hash/613"
                expression (src/SelectiveExpansion.ml[55,2282+11]..src/SelectiveExpansion.ml[56,2306+78]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/SelectiveExpansion.ml[55,2282+11]..src/SelectiveExpansion.ml[55,2282+21])
                        Tpat_tuple
                        [
                          pattern (src/SelectiveExpansion.ml[55,2282+12]..src/SelectiveExpansion.ml[55,2282+14])
                            Tpat_var "nt/615"
                          pattern (src/SelectiveExpansion.ml[55,2282+16]..src/SelectiveExpansion.ml[55,2282+20])
                            Tpat_var "inst/616"
                        ]
                      expression (src/SelectiveExpansion.ml[56,2306+4]..src/SelectiveExpansion.ml[56,2306+78])
                        Texp_apply
                        expression (src/SelectiveExpansion.ml[56,2306+4]..src/SelectiveExpansion.ml[56,2306+16])
                          Texp_ident "Stdlib!.Hashtbl.hash"
                        [
                          <arg>
                            Nolabel
                            expression (src/SelectiveExpansion.ml[56,2306+17]..src/SelectiveExpansion.ml[56,2306+78])
                              Texp_tuple
                              [
                                expression (src/SelectiveExpansion.ml[56,2306+18]..src/SelectiveExpansion.ml[56,2306+20])
                                  Texp_ident "nt/615"
                                expression (src/SelectiveExpansion.ml[56,2306+22]..src/SelectiveExpansion.ml[56,2306+77])
                                  Texp_apply
                                  expression (src/SelectiveExpansion.ml[56,2306+22]..src/SelectiveExpansion.ml[56,2306+42])
                                    Texp_ident "Dune__exe!.Misc.ListExtras.hash"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/SelectiveExpansion.ml[56,2306+43]..src/SelectiveExpansion.ml[56,2306+72])
                                        Texp_apply
                                        expression (src/SelectiveExpansion.ml[56,2306+44]..src/SelectiveExpansion.ml[56,2306+55])
                                          Texp_ident "Dune__exe!.Option.hash"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/SelectiveExpansion.ml[56,2306+56]..src/SelectiveExpansion.ml[56,2306+71])
                                              Texp_ident "Dune__exe!.Parameters.hash"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/SelectiveExpansion.ml[56,2306+73]..src/SelectiveExpansion.ml[56,2306+77])
                                        Texp_ident "inst/616"
                                  ]
                              ]
                        ]
                  ]
            ]
        ]
  structure_item (src/SelectiveExpansion.ml[68,2819+0]..src/SelectiveExpansion.ml[75,3008+30])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/SelectiveExpansion.ml[68,2819+4]..src/SelectiveExpansion.ml[68,2819+13])
          Tpat_var "mangle_po/732"
        expression (src/SelectiveExpansion.ml[68,2819+14]..src/SelectiveExpansion.ml[75,3008+30]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/SelectiveExpansion.ml[68,2819+15]..src/SelectiveExpansion.ml[68,2819+17])
                extra
                  Tpat_extra_constraint
                  core_type (src/SelectiveExpansion.ml[68,2819+20]..src/SelectiveExpansion.ml[68,2819+36])
                    Ttyp_constr "option/10!"
                    [
                      core_type (src/SelectiveExpansion.ml[68,2819+20]..src/SelectiveExpansion.ml[68,2819+29])
                        Ttyp_constr "Dune__exe!.Syntax.parameter"
                        []
                    ]
                Tpat_alias "po/734"
                pattern (src/SelectiveExpansion.ml[68,2819+15]..src/SelectiveExpansion.ml[68,2819+17])
                  Tpat_any
              expression (src/SelectiveExpansion.ml[69,2859+2]..src/SelectiveExpansion.ml[75,3008+30])
                Texp_match
                expression (src/SelectiveExpansion.ml[69,2859+8]..src/SelectiveExpansion.ml[69,2859+10])
                  Texp_ident "po/734"
                [
                  <case>
                    pattern (src/SelectiveExpansion.ml[70,2875+4]..src/SelectiveExpansion.ml[70,2875+8])
                      Tpat_value
                      pattern (src/SelectiveExpansion.ml[70,2875+4]..src/SelectiveExpansion.ml[70,2875+8])
                        Tpat_construct "None"
                        []
                        None
                    expression (src/SelectiveExpansion.ml[73,2984+6]..src/SelectiveExpansion.ml[73,2984+9])
                      Texp_constant Const_string("_",(src/SelectiveExpansion.ml[73,2984+7]..src/SelectiveExpansion.ml[73,2984+8]),None)
                  <case>
                    pattern (src/SelectiveExpansion.ml[74,2994+4]..src/SelectiveExpansion.ml[74,2994+10])
                      Tpat_value
                      pattern (src/SelectiveExpansion.ml[74,2994+4]..src/SelectiveExpansion.ml[74,2994+10])
                        Tpat_construct "Some"
                        [
                          pattern (src/SelectiveExpansion.ml[74,2994+9]..src/SelectiveExpansion.ml[74,2994+10])
                            Tpat_var "p/735"
                        ]
                        None
                    expression (src/SelectiveExpansion.ml[75,3008+6]..src/SelectiveExpansion.ml[75,3008+30])
                      Texp_apply
                      expression (src/SelectiveExpansion.ml[75,3008+6]..src/SelectiveExpansion.ml[75,3008+22])
                        Texp_ident "Dune__exe!.Parameters.print"
                      [
                        <arg>
                          Nolabel
                          expression (src/SelectiveExpansion.ml[75,3008+23]..src/SelectiveExpansion.ml[75,3008+28])
                            Texp_construct "false"
                            []
                        <arg>
                          Nolabel
                          expression (src/SelectiveExpansion.ml[75,3008+29]..src/SelectiveExpansion.ml[75,3008+30])
                            Texp_ident "p/735"
                      ]
                ]
          ]
    ]
  structure_item (src/SelectiveExpansion.ml[77,3040+0]..src/SelectiveExpansion.ml[81,3151+55])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/SelectiveExpansion.ml[77,3040+4]..src/SelectiveExpansion.ml[77,3040+10])
          Tpat_var "mangle/736"
        expression (src/SelectiveExpansion.ml[77,3040+11]..src/SelectiveExpansion.ml[81,3151+55]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/SelectiveExpansion.ml[77,3040+12]..src/SelectiveExpansion.ml[77,3040+21])
                extra
                  Tpat_extra_constraint
                  core_type (src/SelectiveExpansion.ml[77,3040+24]..src/SelectiveExpansion.ml[77,3040+29])
                    Ttyp_constr "label/511"
                    []
                Tpat_tuple
                [
                  pattern (src/SelectiveExpansion.ml[77,3040+13]..src/SelectiveExpansion.ml[77,3040+15])
                    Tpat_var "nt/738"
                  pattern (src/SelectiveExpansion.ml[77,3040+17]..src/SelectiveExpansion.ml[77,3040+20])
                    Tpat_var "pos/739"
                ]
              expression (src/SelectiveExpansion.ml[78,3087+2]..src/SelectiveExpansion.ml[81,3151+55])
                extra
                  Texp_constraint
                  core_type (src/SelectiveExpansion.ml[77,3040+33]..src/SelectiveExpansion.ml[77,3040+44])
                    Ttyp_constr "Dune__exe!.Syntax.nonterminal"
                    []
                Texp_ifthenelse
                expression (src/SelectiveExpansion.ml[78,3087+5]..src/SelectiveExpansion.ml[78,3087+13])
                  Texp_apply
                  expression (src/SelectiveExpansion.ml[78,3087+9]..src/SelectiveExpansion.ml[78,3087+10])
                    Texp_ident "Stdlib!.="
                  [
                    <arg>
                      Nolabel
                      expression (src/SelectiveExpansion.ml[78,3087+5]..src/SelectiveExpansion.ml[78,3087+8])
                        Texp_ident "pos/739"
                    <arg>
                      Nolabel
                      expression (src/SelectiveExpansion.ml[78,3087+11]..src/SelectiveExpansion.ml[78,3087+13])
                        Texp_construct "[]"
                        []
                  ]
                expression (src/SelectiveExpansion.ml[78,3087+19]..src/SelectiveExpansion.ml[78,3087+21])
                  Texp_ident "nt/738"
                Some
                  expression (src/SelectiveExpansion.ml[79,3114+4]..src/SelectiveExpansion.ml[81,3151+55])
                    Texp_apply
                    expression (src/SelectiveExpansion.ml[79,3114+4]..src/SelectiveExpansion.ml[79,3114+18])
                      Texp_ident "Stdlib!.Printf.sprintf"
                    [
                      <arg>
                        Nolabel
                        expression (src/SelectiveExpansion.ml[79,3114+19]..src/SelectiveExpansion.ml[79,3114+27])
                          Texp_construct "CamlinternalFormatBasics.Format"
                          [
                            expression (src/SelectiveExpansion.ml[79,3114+19]..src/SelectiveExpansion.ml[79,3114+27]) ghost
                              Texp_construct "CamlinternalFormatBasics.String"
                              [
                                expression (src/SelectiveExpansion.ml[79,3114+19]..src/SelectiveExpansion.ml[79,3114+27]) ghost
                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                  []
                                expression (src/SelectiveExpansion.ml[79,3114+19]..src/SelectiveExpansion.ml[79,3114+27]) ghost
                                  Texp_construct "CamlinternalFormatBasics.Char_literal"
                                  [
                                    expression (src/SelectiveExpansion.ml[79,3114+19]..src/SelectiveExpansion.ml[79,3114+27]) ghost
                                      Texp_constant Const_char 28
                                    expression (src/SelectiveExpansion.ml[79,3114+19]..src/SelectiveExpansion.ml[79,3114+27]) ghost
                                      Texp_construct "CamlinternalFormatBasics.String"
                                      [
                                        expression (src/SelectiveExpansion.ml[79,3114+19]..src/SelectiveExpansion.ml[79,3114+27]) ghost
                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                          []
                                        expression (src/SelectiveExpansion.ml[79,3114+19]..src/SelectiveExpansion.ml[79,3114+27]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Char_literal"
                                          [
                                            expression (src/SelectiveExpansion.ml[79,3114+19]..src/SelectiveExpansion.ml[79,3114+27]) ghost
                                              Texp_constant Const_char 29
                                            expression (src/SelectiveExpansion.ml[79,3114+19]..src/SelectiveExpansion.ml[79,3114+27]) ghost
                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                              []
                                          ]
                                      ]
                                  ]
                              ]
                            expression (src/SelectiveExpansion.ml[79,3114+19]..src/SelectiveExpansion.ml[79,3114+27]) ghost
                              Texp_constant Const_string("%s(%s)",(src/SelectiveExpansion.ml[79,3114+19]..src/SelectiveExpansion.ml[79,3114+27]) ghost,None)
                          ]
                      <arg>
                        Nolabel
                        expression (src/SelectiveExpansion.ml[80,3142+6]..src/SelectiveExpansion.ml[80,3142+8])
                          Texp_ident "nt/738"
                      <arg>
                        Nolabel
                        expression (src/SelectiveExpansion.ml[81,3151+6]..src/SelectiveExpansion.ml[81,3151+55])
                          Texp_apply
                          expression (src/SelectiveExpansion.ml[81,3151+7]..src/SelectiveExpansion.ml[81,3151+36])
                            Texp_ident "Dune__exe!.Misc.separated_list_to_string"
                          [
                            <arg>
                              Nolabel
                              expression (src/SelectiveExpansion.ml[81,3151+37]..src/SelectiveExpansion.ml[81,3151+46])
                                Texp_ident "mangle_po/732"
                            <arg>
                              Nolabel
                              expression (src/SelectiveExpansion.ml[81,3151+47]..src/SelectiveExpansion.ml[81,3151+50])
                                Texp_constant Const_string(",",(src/SelectiveExpansion.ml[81,3151+48]..src/SelectiveExpansion.ml[81,3151+49]),None)
                            <arg>
                              Nolabel
                              expression (src/SelectiveExpansion.ml[81,3151+51]..src/SelectiveExpansion.ml[81,3151+54])
                                Texp_ident "pos/739"
                          ]
                    ]
          ]
    ]
  structure_item (src/SelectiveExpansion.ml[88,3423+0]..src/SelectiveExpansion.ml[89,3436+11])
    Tstr_module
    Env/777
      module_expr (src/SelectiveExpansion.ml[89,3436+2]..src/SelectiveExpansion.ml[89,3436+11])
        Tmod_ident "Dune__exe!.StringMap"
  structure_item (src/SelectiveExpansion.ml[91,3449+0]..src/SelectiveExpansion.ml[92,3460+17])
    Tstr_type Rec
    [
      type_declaration env/778 (src/SelectiveExpansion.ml[91,3449+0]..src/SelectiveExpansion.ml[92,3460+17])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/SelectiveExpansion.ml[92,3460+2]..src/SelectiveExpansion.ml[92,3460+17])
              Ttyp_constr "Env/777.t"
              [
                core_type (src/SelectiveExpansion.ml[92,3460+2]..src/SelectiveExpansion.ml[92,3460+11])
                  Ttyp_constr "Dune__exe!.Syntax.parameter"
                  []
              ]
    ]
  structure_item (src/SelectiveExpansion.ml[94,3479+0]..src/SelectiveExpansion.ml[99,3639+20])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/SelectiveExpansion.ml[94,3479+4]..src/SelectiveExpansion.ml[94,3479+16])
          Tpat_var "subst_symbol/875"
        expression (src/SelectiveExpansion.ml[94,3479+17]..src/SelectiveExpansion.ml[99,3639+20]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/SelectiveExpansion.ml[94,3479+17]..src/SelectiveExpansion.ml[94,3479+20])
                Tpat_var "env/877"
              expression (src/SelectiveExpansion.ml[94,3479+21]..src/SelectiveExpansion.ml[99,3639+20]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/SelectiveExpansion.ml[94,3479+21]..src/SelectiveExpansion.ml[94,3479+24])
                      Tpat_var "sym/878"
                    expression (src/SelectiveExpansion.ml[95,3518+2]..src/SelectiveExpansion.ml[99,3639+20])
                      extra
                        Texp_constraint
                        core_type (src/SelectiveExpansion.ml[94,3479+27]..src/SelectiveExpansion.ml[94,3479+36])
                          Ttyp_constr "Dune__exe!.Syntax.parameter"
                          []
                      Texp_try
                      expression (src/SelectiveExpansion.ml[96,3524+4]..src/SelectiveExpansion.ml[96,3524+28])
                        Texp_apply
                        expression (src/SelectiveExpansion.ml[96,3524+4]..src/SelectiveExpansion.ml[96,3524+12])
                          Texp_ident "Env/777.find"
                        [
                          <arg>
                            Nolabel
                            expression (src/SelectiveExpansion.ml[96,3524+13]..src/SelectiveExpansion.ml[96,3524+24])
                              Texp_apply
                              expression (src/SelectiveExpansion.ml[96,3524+14]..src/SelectiveExpansion.ml[96,3524+19])
                                Texp_ident "value/397"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/SelectiveExpansion.ml[96,3524+20]..src/SelectiveExpansion.ml[96,3524+23])
                                    Texp_ident "sym/878"
                              ]
                          <arg>
                            Nolabel
                            expression (src/SelectiveExpansion.ml[96,3524+25]..src/SelectiveExpansion.ml[96,3524+28])
                              Texp_ident "env/877"
                        ]
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[97,3553+7]..src/SelectiveExpansion.ml[97,3553+16])
                            Tpat_construct "Not_found"
                            []
                            None
                          expression (src/SelectiveExpansion.ml[99,3639+4]..src/SelectiveExpansion.ml[99,3639+20])
                            Texp_construct "ParameterVar"
                            [
                              expression (src/SelectiveExpansion.ml[99,3639+17]..src/SelectiveExpansion.ml[99,3639+20])
                                Texp_ident "sym/878"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/SelectiveExpansion.ml[101,3661+0]..src/SelectiveExpansion.ml[113,4144+18])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/SelectiveExpansion.ml[101,3661+4]..src/SelectiveExpansion.ml[101,3661+9])
          Tpat_var "apply/914"
        expression (src/SelectiveExpansion.ml[101,3661+10]..src/SelectiveExpansion.ml[113,4144+18]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/SelectiveExpansion.ml[101,3661+11]..src/SelectiveExpansion.ml[101,3661+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/SelectiveExpansion.ml[101,3661+19]..src/SelectiveExpansion.ml[101,3661+28])
                    Ttyp_constr "Dune__exe!.Syntax.parameter"
                    []
                Tpat_alias "param/916"
                pattern (src/SelectiveExpansion.ml[101,3661+11]..src/SelectiveExpansion.ml[101,3661+16])
                  Tpat_any
              expression (src/SelectiveExpansion.ml[101,3661+30]..src/SelectiveExpansion.ml[113,4144+18]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/SelectiveExpansion.ml[101,3661+31]..src/SelectiveExpansion.ml[101,3661+37])
                      extra
                        Tpat_extra_constraint
                        core_type (src/SelectiveExpansion.ml[101,3661+40]..src/SelectiveExpansion.ml[101,3661+54])
                          Ttyp_constr "list/9!"
                          [
                            core_type (src/SelectiveExpansion.ml[101,3661+40]..src/SelectiveExpansion.ml[101,3661+49])
                              Ttyp_constr "Dune__exe!.Syntax.parameter"
                              []
                          ]
                      Tpat_alias "params/917"
                      pattern (src/SelectiveExpansion.ml[101,3661+31]..src/SelectiveExpansion.ml[101,3661+37])
                        Tpat_any
                    expression (src/SelectiveExpansion.ml[102,3731+2]..src/SelectiveExpansion.ml[113,4144+18])
                      extra
                        Texp_constraint
                        core_type (src/SelectiveExpansion.ml[101,3661+58]..src/SelectiveExpansion.ml[101,3661+67])
                          Ttyp_constr "Dune__exe!.Syntax.parameter"
                          []
                      Texp_match
                      expression (src/SelectiveExpansion.ml[102,3731+8]..src/SelectiveExpansion.ml[102,3731+13])
                        Texp_ident "param/916"
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[103,3750+4]..src/SelectiveExpansion.ml[103,3750+20])
                            Tpat_value
                            pattern (src/SelectiveExpansion.ml[103,3750+4]..src/SelectiveExpansion.ml[103,3750+20])
                              Tpat_construct "ParameterVar"
                              [
                                pattern (src/SelectiveExpansion.ml[103,3750+17]..src/SelectiveExpansion.ml[103,3750+20])
                                  Tpat_var "sym/918"
                              ]
                              None
                          expression (src/SelectiveExpansion.ml[104,3774+6]..src/SelectiveExpansion.ml[105,3803+32])
                            Texp_sequence
                            expression (src/SelectiveExpansion.ml[104,3774+6]..src/SelectiveExpansion.ml[104,3774+27])
                              Texp_assert                              expression (src/SelectiveExpansion.ml[104,3774+13]..src/SelectiveExpansion.ml[104,3774+27])
                                Texp_apply
                                expression (src/SelectiveExpansion.ml[104,3774+21]..src/SelectiveExpansion.ml[104,3774+23])
                                  Texp_ident "Stdlib!.<>"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/SelectiveExpansion.ml[104,3774+14]..src/SelectiveExpansion.ml[104,3774+20])
                                      Texp_ident "params/917"
                                  <arg>
                                    Nolabel
                                    expression (src/SelectiveExpansion.ml[104,3774+24]..src/SelectiveExpansion.ml[104,3774+26])
                                      Texp_construct "[]"
                                      []
                                ]
                            expression (src/SelectiveExpansion.ml[105,3803+6]..src/SelectiveExpansion.ml[105,3803+32])
                              Texp_construct "ParameterApp"
                              [
                                expression (src/SelectiveExpansion.ml[105,3803+20]..src/SelectiveExpansion.ml[105,3803+23])
                                  Texp_ident "sym/918"
                                expression (src/SelectiveExpansion.ml[105,3803+25]..src/SelectiveExpansion.ml[105,3803+31])
                                  Texp_ident "params/917"
                              ]
                        <case>
                          pattern (src/SelectiveExpansion.ml[106,3836+4]..src/SelectiveExpansion.ml[106,3836+18])
                            Tpat_value
                            pattern (src/SelectiveExpansion.ml[106,3836+4]..src/SelectiveExpansion.ml[106,3836+18])
                              Tpat_construct "ParameterApp"
                              [
                                pattern (src/SelectiveExpansion.ml[106,3836+17]..src/SelectiveExpansion.ml[106,3836+18])
                                  Tpat_any
                                pattern (src/SelectiveExpansion.ml[106,3836+17]..src/SelectiveExpansion.ml[106,3836+18])
                                  Tpat_any
                              ]
                              None
                          expression (src/SelectiveExpansion.ml[110,4044+6]..src/SelectiveExpansion.ml[110,4044+18])
                            Texp_assert                            expression (src/SelectiveExpansion.ml[110,4044+13]..src/SelectiveExpansion.ml[110,4044+18])
                              Texp_construct "false"
                              []
                        <case>
                          pattern (src/SelectiveExpansion.ml[111,4063+4]..src/SelectiveExpansion.ml[111,4063+24])
                            Tpat_value
                            pattern (src/SelectiveExpansion.ml[111,4063+4]..src/SelectiveExpansion.ml[111,4063+24])
                              Tpat_construct "ParameterAnonymous"
                              [
                                pattern (src/SelectiveExpansion.ml[111,4063+23]..src/SelectiveExpansion.ml[111,4063+24])
                                  Tpat_any
                              ]
                              None
                          expression (src/SelectiveExpansion.ml[113,4144+6]..src/SelectiveExpansion.ml[113,4144+18])
                            Texp_assert                            expression (src/SelectiveExpansion.ml[113,4144+13]..src/SelectiveExpansion.ml[113,4144+18])
                              Texp_construct "false"
                              []
                      ]
                ]
          ]
    ]
  structure_item (src/SelectiveExpansion.ml[115,4164+0]..src/SelectiveExpansion.ml[127,4545+39])
    Tstr_value Rec
    [
      <def>
        pattern (src/SelectiveExpansion.ml[115,4164+8]..src/SelectiveExpansion.ml[115,4164+23])
          Tpat_var "subst_parameter/919"
        expression (src/SelectiveExpansion.ml[115,4164+24]..src/SelectiveExpansion.ml[124,4491+18]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/SelectiveExpansion.ml[115,4164+24]..src/SelectiveExpansion.ml[115,4164+27])
                Tpat_var "env/921"
              expression (src/SelectiveExpansion.ml[115,4164+28]..src/SelectiveExpansion.ml[124,4491+18]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/SelectiveExpansion.ml[115,4164+28]..src/SelectiveExpansion.ml[115,4164+33])
                      Tpat_var "param/922"
                    expression (src/SelectiveExpansion.ml[116,4212+2]..src/SelectiveExpansion.ml[124,4491+18])
                      extra
                        Texp_constraint
                        core_type (src/SelectiveExpansion.ml[115,4164+36]..src/SelectiveExpansion.ml[115,4164+45])
                          Ttyp_constr "Dune__exe!.Syntax.parameter"
                          []
                      Texp_match
                      expression (src/SelectiveExpansion.ml[116,4212+8]..src/SelectiveExpansion.ml[116,4212+13])
                        Texp_ident "param/922"
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[117,4231+4]..src/SelectiveExpansion.ml[117,4231+20])
                            Tpat_value
                            pattern (src/SelectiveExpansion.ml[117,4231+4]..src/SelectiveExpansion.ml[117,4231+20])
                              Tpat_construct "ParameterVar"
                              [
                                pattern (src/SelectiveExpansion.ml[117,4231+17]..src/SelectiveExpansion.ml[117,4231+20])
                                  Tpat_var "sym/923"
                              ]
                              None
                          expression (src/SelectiveExpansion.ml[118,4255+6]..src/SelectiveExpansion.ml[118,4255+26])
                            Texp_apply
                            expression (src/SelectiveExpansion.ml[118,4255+6]..src/SelectiveExpansion.ml[118,4255+18])
                              Texp_ident "subst_symbol/875"
                            [
                              <arg>
                                Nolabel
                                expression (src/SelectiveExpansion.ml[118,4255+19]..src/SelectiveExpansion.ml[118,4255+22])
                                  Texp_ident "env/921"
                              <arg>
                                Nolabel
                                expression (src/SelectiveExpansion.ml[118,4255+23]..src/SelectiveExpansion.ml[118,4255+26])
                                  Texp_ident "sym/923"
                            ]
                        <case>
                          pattern (src/SelectiveExpansion.ml[119,4282+4]..src/SelectiveExpansion.ml[119,4282+30])
                            Tpat_value
                            pattern (src/SelectiveExpansion.ml[119,4282+4]..src/SelectiveExpansion.ml[119,4282+30])
                              Tpat_construct "ParameterApp"
                              [
                                pattern (src/SelectiveExpansion.ml[119,4282+18]..src/SelectiveExpansion.ml[119,4282+21])
                                  Tpat_var "sym/924"
                                pattern (src/SelectiveExpansion.ml[119,4282+23]..src/SelectiveExpansion.ml[119,4282+29])
                                  Tpat_var "params/925"
                              ]
                              None
                          expression (src/SelectiveExpansion.ml[120,4316+6]..src/SelectiveExpansion.ml[121,4345+64])
                            Texp_sequence
                            expression (src/SelectiveExpansion.ml[120,4316+6]..src/SelectiveExpansion.ml[120,4316+27])
                              Texp_assert                              expression (src/SelectiveExpansion.ml[120,4316+13]..src/SelectiveExpansion.ml[120,4316+27])
                                Texp_apply
                                expression (src/SelectiveExpansion.ml[120,4316+21]..src/SelectiveExpansion.ml[120,4316+23])
                                  Texp_ident "Stdlib!.<>"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/SelectiveExpansion.ml[120,4316+14]..src/SelectiveExpansion.ml[120,4316+20])
                                      Texp_ident "params/925"
                                  <arg>
                                    Nolabel
                                    expression (src/SelectiveExpansion.ml[120,4316+24]..src/SelectiveExpansion.ml[120,4316+26])
                                      Texp_construct "[]"
                                      []
                                ]
                            expression (src/SelectiveExpansion.ml[121,4345+6]..src/SelectiveExpansion.ml[121,4345+64])
                              Texp_apply
                              expression (src/SelectiveExpansion.ml[121,4345+6]..src/SelectiveExpansion.ml[121,4345+11])
                                Texp_ident "apply/914"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/SelectiveExpansion.ml[121,4345+12]..src/SelectiveExpansion.ml[121,4345+34])
                                    Texp_apply
                                    expression (src/SelectiveExpansion.ml[121,4345+13]..src/SelectiveExpansion.ml[121,4345+25])
                                      Texp_ident "subst_symbol/875"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/SelectiveExpansion.ml[121,4345+26]..src/SelectiveExpansion.ml[121,4345+29])
                                          Texp_ident "env/921"
                                      <arg>
                                        Nolabel
                                        expression (src/SelectiveExpansion.ml[121,4345+30]..src/SelectiveExpansion.ml[121,4345+33])
                                          Texp_ident "sym/924"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/SelectiveExpansion.ml[121,4345+35]..src/SelectiveExpansion.ml[121,4345+64])
                                    Texp_apply
                                    expression (src/SelectiveExpansion.ml[121,4345+36]..src/SelectiveExpansion.ml[121,4345+52])
                                      Texp_ident "subst_parameters/920"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/SelectiveExpansion.ml[121,4345+53]..src/SelectiveExpansion.ml[121,4345+56])
                                          Texp_ident "env/921"
                                      <arg>
                                        Nolabel
                                        expression (src/SelectiveExpansion.ml[121,4345+57]..src/SelectiveExpansion.ml[121,4345+63])
                                          Texp_ident "params/925"
                                    ]
                              ]
                        <case>
                          pattern (src/SelectiveExpansion.ml[122,4410+4]..src/SelectiveExpansion.ml[122,4410+24])
                            Tpat_value
                            pattern (src/SelectiveExpansion.ml[122,4410+4]..src/SelectiveExpansion.ml[122,4410+24])
                              Tpat_construct "ParameterAnonymous"
                              [
                                pattern (src/SelectiveExpansion.ml[122,4410+23]..src/SelectiveExpansion.ml[122,4410+24])
                                  Tpat_any
                              ]
                              None
                          expression (src/SelectiveExpansion.ml[124,4491+6]..src/SelectiveExpansion.ml[124,4491+18])
                            Texp_assert                            expression (src/SelectiveExpansion.ml[124,4491+13]..src/SelectiveExpansion.ml[124,4491+18])
                              Texp_construct "false"
                              []
                      ]
                ]
          ]
      <def>
        pattern (src/SelectiveExpansion.ml[126,4511+4]..src/SelectiveExpansion.ml[126,4511+20])
          Tpat_var "subst_parameters/920"
        expression (src/SelectiveExpansion.ml[126,4511+21]..src/SelectiveExpansion.ml[127,4545+39]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/SelectiveExpansion.ml[126,4511+21]..src/SelectiveExpansion.ml[126,4511+24])
                Tpat_var "env/926"
              expression (src/SelectiveExpansion.ml[126,4511+25]..src/SelectiveExpansion.ml[127,4545+39]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/SelectiveExpansion.ml[126,4511+25]..src/SelectiveExpansion.ml[126,4511+31])
                      Tpat_var "params/927"
                    expression (src/SelectiveExpansion.ml[127,4545+2]..src/SelectiveExpansion.ml[127,4545+39])
                      Texp_apply
                      expression (src/SelectiveExpansion.ml[127,4545+2]..src/SelectiveExpansion.ml[127,4545+10])
                        Texp_ident "Stdlib!.List.map"
                      [
                        <arg>
                          Nolabel
                          expression (src/SelectiveExpansion.ml[127,4545+11]..src/SelectiveExpansion.ml[127,4545+32])
                            Texp_apply
                            expression (src/SelectiveExpansion.ml[127,4545+12]..src/SelectiveExpansion.ml[127,4545+27])
                              Texp_ident "subst_parameter/919"
                            [
                              <arg>
                                Nolabel
                                expression (src/SelectiveExpansion.ml[127,4545+28]..src/SelectiveExpansion.ml[127,4545+31])
                                  Texp_ident "env/926"
                            ]
                        <arg>
                          Nolabel
                          expression (src/SelectiveExpansion.ml[127,4545+33]..src/SelectiveExpansion.ml[127,4545+39])
                            Texp_ident "params/927"
                      ]
                ]
          ]
    ]
  structure_item (src/SelectiveExpansion.ml[134,4819+0]..src/SelectiveExpansion.ml[523,19063+3])
    Tstr_module
    Run/1511
      module_expr (src/SelectiveExpansion.ml[134,4819+11]..src/SelectiveExpansion.ml[523,19063+3])
        Tmod_functor "G/933"
        module_type (src/SelectiveExpansion.ml[134,4819+16]..src/SelectiveExpansion.ml[141,5009+3])
          Tmty_signature
          [
            signature_item (src/SelectiveExpansion.ml[136,4863+2]..src/SelectiveExpansion.ml[136,4863+16])
              Tsig_value
              value_description mode/928 (src/SelectiveExpansion.ml[136,4863+2]..src/SelectiveExpansion.ml[136,4863+16])
                core_type (src/SelectiveExpansion.ml[136,4863+12]..src/SelectiveExpansion.ml[136,4863+16])
                  Ttyp_constr "mode/472"
                  []
                []
            signature_item (src/SelectiveExpansion.ml[138,4906+2]..src/SelectiveExpansion.ml[138,4906+32])
              Tsig_value
              value_description sorts/931 (src/SelectiveExpansion.ml[138,4906+2]..src/SelectiveExpansion.ml[138,4906+32])
                core_type (src/SelectiveExpansion.ml[138,4906+13]..src/SelectiveExpansion.ml[138,4906+32])
                  Ttyp_constr "Dune__exe!.SortInference.sorts"
                  []
                []
            signature_item (src/SelectiveExpansion.ml[140,4991+2]..src/SelectiveExpansion.ml[140,4991+17])
              Tsig_value
              value_description g/932 (src/SelectiveExpansion.ml[140,4991+2]..src/SelectiveExpansion.ml[140,4991+17])
                core_type (src/SelectiveExpansion.ml[140,4991+10]..src/SelectiveExpansion.ml[140,4991+17])
                  Ttyp_constr "Dune__exe!.Syntax.grammar"
                  []
                []
          ]
        module_expr (src/SelectiveExpansion.ml[141,5009+7]..src/SelectiveExpansion.ml[523,19063+3])
          module_expr (src/SelectiveExpansion.ml[141,5009+7]..src/SelectiveExpansion.ml[523,19063+3])
            Tmod_structure
            [
              structure_item (src/SelectiveExpansion.ml[143,5024+0]..src/SelectiveExpansion.ml[143,5024+6])
                Tstr_open Fresh
                module_expr (src/SelectiveExpansion.ml[143,5024+5]..src/SelectiveExpansion.ml[143,5024+6])
                  Tmod_ident "G/933"
              structure_item (src/SelectiveExpansion.ml[153,5387+0]..src/SelectiveExpansion.ml[157,5471+16])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[153,5387+4]..src/SelectiveExpansion.ml[153,5387+8])
                      Tpat_var "sort/934"
                    expression (src/SelectiveExpansion.ml[153,5387+9]..src/SelectiveExpansion.ml[157,5471+16]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[153,5387+9]..src/SelectiveExpansion.ml[153,5387+15])
                            Tpat_var "symbol/936"
                          expression (src/SelectiveExpansion.ml[154,5405+2]..src/SelectiveExpansion.ml[157,5471+16])
                            Texp_try
                            expression (src/SelectiveExpansion.ml[155,5411+4]..src/SelectiveExpansion.ml[155,5411+39])
                              Texp_apply
                              expression (src/SelectiveExpansion.ml[155,5411+4]..src/SelectiveExpansion.ml[155,5411+18])
                                Texp_ident "Dune__exe!.StringMap.find"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/SelectiveExpansion.ml[155,5411+19]..src/SelectiveExpansion.ml[155,5411+33])
                                    Texp_apply
                                    expression (src/SelectiveExpansion.ml[155,5411+20]..src/SelectiveExpansion.ml[155,5411+25])
                                      Texp_ident "value/397"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/SelectiveExpansion.ml[155,5411+26]..src/SelectiveExpansion.ml[155,5411+32])
                                          Texp_ident "symbol/936"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/SelectiveExpansion.ml[155,5411+34]..src/SelectiveExpansion.ml[155,5411+39])
                                    Texp_ident "G/933.sorts"
                              ]
                            [
                              <case>
                                pattern (src/SelectiveExpansion.ml[156,5451+7]..src/SelectiveExpansion.ml[156,5451+16])
                                  Tpat_construct "Not_found"
                                  []
                                  None
                                expression (src/SelectiveExpansion.ml[157,5471+4]..src/SelectiveExpansion.ml[157,5471+16])
                                  Texp_assert                                  expression (src/SelectiveExpansion.ml[157,5471+11]..src/SelectiveExpansion.ml[157,5471+16])
                                    Texp_construct "false"
                                    []
                            ]
                      ]
                ]
              structure_item (src/SelectiveExpansion.ml[159,5489+0]..src/SelectiveExpansion.ml[168,5712+18])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[159,5489+4]..src/SelectiveExpansion.ml[159,5489+8])
                      Tpat_var "sort/937"
                    expression (src/SelectiveExpansion.ml[159,5489+9]..src/SelectiveExpansion.ml[168,5712+18]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[159,5489+9]..src/SelectiveExpansion.ml[159,5489+14])
                            Tpat_var "param/938"
                          expression (src/SelectiveExpansion.ml[160,5506+2]..src/SelectiveExpansion.ml[168,5712+18])
                            Texp_match
                            expression (src/SelectiveExpansion.ml[160,5506+8]..src/SelectiveExpansion.ml[160,5506+13])
                              Texp_ident "param/938"
                            [
                              <case>
                                pattern (src/SelectiveExpansion.ml[161,5525+4]..src/SelectiveExpansion.ml[161,5525+20])
                                  Tpat_value
                                  pattern (src/SelectiveExpansion.ml[161,5525+4]..src/SelectiveExpansion.ml[161,5525+20])
                                    Tpat_construct "ParameterVar"
                                    [
                                      pattern (src/SelectiveExpansion.ml[161,5525+17]..src/SelectiveExpansion.ml[161,5525+20])
                                        Tpat_var "sym/939"
                                    ]
                                    None
                                expression (src/SelectiveExpansion.ml[162,5549+6]..src/SelectiveExpansion.ml[162,5549+14])
                                  Texp_apply
                                  expression (src/SelectiveExpansion.ml[162,5549+6]..src/SelectiveExpansion.ml[162,5549+10])
                                    Texp_ident "sort/934"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/SelectiveExpansion.ml[162,5549+11]..src/SelectiveExpansion.ml[162,5549+14])
                                        Texp_ident "sym/939"
                                  ]
                              <case>
                                pattern (src/SelectiveExpansion.ml[163,5564+4]..src/SelectiveExpansion.ml[163,5564+28])
                                  Tpat_value
                                  pattern (src/SelectiveExpansion.ml[163,5564+4]..src/SelectiveExpansion.ml[163,5564+28])
                                    Tpat_construct "ParameterApp"
                                    [
                                      pattern (src/SelectiveExpansion.ml[163,5564+18]..src/SelectiveExpansion.ml[163,5564+19])
                                        Tpat_any
                                      pattern (src/SelectiveExpansion.ml[163,5564+21]..src/SelectiveExpansion.ml[163,5564+27])
                                        Tpat_var "params/940"
                                    ]
                                    None
                                expression (src/SelectiveExpansion.ml[164,5596+6]..src/SelectiveExpansion.ml[166,5673+10])
                                  Texp_sequence
                                  expression (src/SelectiveExpansion.ml[164,5596+6]..src/SelectiveExpansion.ml[164,5596+27])
                                    Texp_assert                                    expression (src/SelectiveExpansion.ml[164,5596+13]..src/SelectiveExpansion.ml[164,5596+27])
                                      Texp_apply
                                      expression (src/SelectiveExpansion.ml[164,5596+21]..src/SelectiveExpansion.ml[164,5596+23])
                                        Texp_ident "Stdlib!.<>"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/SelectiveExpansion.ml[164,5596+14]..src/SelectiveExpansion.ml[164,5596+20])
                                            Texp_ident "params/940"
                                        <arg>
                                          Nolabel
                                          expression (src/SelectiveExpansion.ml[164,5596+24]..src/SelectiveExpansion.ml[164,5596+26])
                                            Texp_construct "[]"
                                            []
                                      ]
                                  expression (src/SelectiveExpansion.ml[166,5673+6]..src/SelectiveExpansion.ml[166,5673+10])
                                    Texp_ident "Dune__exe!.GroundSort.star"
                              <case>
                                pattern (src/SelectiveExpansion.ml[167,5684+4]..src/SelectiveExpansion.ml[167,5684+24])
                                  Tpat_value
                                  pattern (src/SelectiveExpansion.ml[167,5684+4]..src/SelectiveExpansion.ml[167,5684+24])
                                    Tpat_construct "ParameterAnonymous"
                                    [
                                      pattern (src/SelectiveExpansion.ml[167,5684+23]..src/SelectiveExpansion.ml[167,5684+24])
                                        Tpat_any
                                    ]
                                    None
                                expression (src/SelectiveExpansion.ml[168,5712+6]..src/SelectiveExpansion.ml[168,5712+18])
                                  Texp_assert                                  expression (src/SelectiveExpansion.ml[168,5712+13]..src/SelectiveExpansion.ml[168,5712+18])
                                    Texp_construct "false"
                                    []
                            ]
                      ]
                ]
              structure_item (src/SelectiveExpansion.ml[178,6076+0]..src/SelectiveExpansion.ml[182,6292+26])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[178,6076+4]..src/SelectiveExpansion.ml[178,6076+21])
                      Tpat_var "global_attributes/944"
                    expression (src/SelectiveExpansion.ml[178,6076+22]..src/SelectiveExpansion.ml[182,6292+26]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[178,6076+23]..src/SelectiveExpansion.ml[178,6076+25])
                            extra
                              Tpat_extra_constraint
                              core_type (src/SelectiveExpansion.ml[178,6076+28]..src/SelectiveExpansion.ml[178,6076+34])
                                Ttyp_constr "Dune__exe!.Syntax.symbol"
                                []
                            Tpat_alias "nt/946"
                            pattern (src/SelectiveExpansion.ml[178,6076+23]..src/SelectiveExpansion.ml[178,6076+25])
                              Tpat_any
                          expression (src/SelectiveExpansion.ml[179,6131+2]..src/SelectiveExpansion.ml[182,6292+26])
                            extra
                              Texp_constraint
                              core_type (src/SelectiveExpansion.ml[178,6076+38]..src/SelectiveExpansion.ml[178,6076+52])
                                Ttyp_constr "list/9!"
                                [
                                  core_type (src/SelectiveExpansion.ml[178,6076+38]..src/SelectiveExpansion.ml[178,6076+47])
                                    Ttyp_constr "Dune__exe!.Syntax.attribute"
                                    []
                                ]
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/SelectiveExpansion.ml[179,6131+6]..src/SelectiveExpansion.ml[179,6131+11])
                                  Tpat_var "param/947"
                                expression (src/SelectiveExpansion.ml[179,6131+14]..src/SelectiveExpansion.ml[179,6131+39])
                                  Texp_construct "ParameterVar"
                                  [
                                    expression (src/SelectiveExpansion.ml[179,6131+27]..src/SelectiveExpansion.ml[179,6131+39])
                                      Texp_apply
                                      expression (src/SelectiveExpansion.ml[179,6131+28]..src/SelectiveExpansion.ml[179,6131+35])
                                        Texp_ident "unknown/433"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/SelectiveExpansion.ml[179,6131+36]..src/SelectiveExpansion.ml[179,6131+38])
                                            Texp_ident "nt/946"
                                      ]
                                  ]
                            ]
                            expression (src/SelectiveExpansion.ml[180,6174+2]..src/SelectiveExpansion.ml[182,6292+26])
                              Texp_apply
                              expression (src/SelectiveExpansion.ml[180,6174+2]..src/SelectiveExpansion.ml[180,6174+13])
                                Texp_ident "Stdlib!.List.concat"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/SelectiveExpansion.ml[180,6174+14]..src/SelectiveExpansion.ml[182,6292+26])
                                    Texp_apply
                                    expression (src/SelectiveExpansion.ml[180,6174+15]..src/SelectiveExpansion.ml[180,6174+23])
                                      Texp_ident "Stdlib!.List.map"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/SelectiveExpansion.ml[180,6174+24]..src/SelectiveExpansion.ml[182,6292+3])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/SelectiveExpansion.ml[180,6174+29]..src/SelectiveExpansion.ml[180,6174+44])
                                                Tpat_tuple
                                                [
                                                  pattern (src/SelectiveExpansion.ml[180,6174+30]..src/SelectiveExpansion.ml[180,6174+36])
                                                    Tpat_var "params/948"
                                                  pattern (src/SelectiveExpansion.ml[180,6174+38]..src/SelectiveExpansion.ml[180,6174+43])
                                                    Tpat_var "attrs/949"
                                                ]
                                              expression (src/SelectiveExpansion.ml[181,6222+4]..src/SelectiveExpansion.ml[181,6222+69])
                                                Texp_ifthenelse
                                                expression (src/SelectiveExpansion.ml[181,6222+7]..src/SelectiveExpansion.ml[181,6222+50])
                                                  Texp_apply
                                                  expression (src/SelectiveExpansion.ml[181,6222+7]..src/SelectiveExpansion.ml[181,6222+18])
                                                    Texp_ident "Stdlib!.List.exists"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/SelectiveExpansion.ml[181,6222+19]..src/SelectiveExpansion.ml[181,6222+43])
                                                        Texp_apply
                                                        expression (src/SelectiveExpansion.ml[181,6222+20]..src/SelectiveExpansion.ml[181,6222+36])
                                                          Texp_ident "Dune__exe!.Parameters.equal"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/SelectiveExpansion.ml[181,6222+37]..src/SelectiveExpansion.ml[181,6222+42])
                                                              Texp_ident "param/947"
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (src/SelectiveExpansion.ml[181,6222+44]..src/SelectiveExpansion.ml[181,6222+50])
                                                        Texp_ident "params/948"
                                                  ]
                                                expression (src/SelectiveExpansion.ml[181,6222+56]..src/SelectiveExpansion.ml[181,6222+61])
                                                  Texp_ident "attrs/949"
                                                Some
                                                  expression (src/SelectiveExpansion.ml[181,6222+67]..src/SelectiveExpansion.ml[181,6222+69])
                                                    Texp_construct "[]"
                                                    []
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/SelectiveExpansion.ml[182,6292+4]..src/SelectiveExpansion.ml[182,6292+25])
                                          Texp_field
                                          expression (src/SelectiveExpansion.ml[182,6292+4]..src/SelectiveExpansion.ml[182,6292+5])
                                            Texp_ident "G/933.g"
                                          "p_symbol_attributes"
                                    ]
                              ]
                      ]
                ]
              structure_item (src/SelectiveExpansion.ml[189,6501+0]..src/SelectiveExpansion.ml[196,6664+21])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[189,6501+4]..src/SelectiveExpansion.ml[189,6501+23])
                      Tpat_tuple
                      [
                        pattern (src/SelectiveExpansion.ml[189,6501+4]..src/SelectiveExpansion.ml[189,6501+11])
                          Tpat_var "enqueue/951"
                        pattern (src/SelectiveExpansion.ml[189,6501+13]..src/SelectiveExpansion.ml[189,6501+23])
                          Tpat_var "repeatedly/952"
                      ]
                    expression (src/SelectiveExpansion.ml[190,6527+2]..src/SelectiveExpansion.ml[196,6664+21])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/SelectiveExpansion.ml[190,6527+6]..src/SelectiveExpansion.ml[190,6527+11])
                            Tpat_var "queue/953"
                          expression (src/SelectiveExpansion.ml[190,6527+14]..src/SelectiveExpansion.ml[190,6527+28])
                            Texp_apply
                            expression (src/SelectiveExpansion.ml[190,6527+14]..src/SelectiveExpansion.ml[190,6527+26])
                              Texp_ident "Stdlib!.Queue.create"
                            [
                              <arg>
                                Nolabel
                                expression (src/SelectiveExpansion.ml[190,6527+26]..src/SelectiveExpansion.ml[190,6527+28])
                                  Texp_construct "()"
                                  []
                            ]
                      ]
                      expression (src/SelectiveExpansion.ml[191,6559+2]..src/SelectiveExpansion.ml[196,6664+21])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/SelectiveExpansion.ml[191,6559+6]..src/SelectiveExpansion.ml[191,6559+13])
                              Tpat_var "enqueue/996"
                            expression (src/SelectiveExpansion.ml[191,6559+14]..src/SelectiveExpansion.ml[192,6581+25]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/SelectiveExpansion.ml[191,6559+14]..src/SelectiveExpansion.ml[191,6559+19])
                                    Tpat_var "label/1000"
                                  expression (src/SelectiveExpansion.ml[192,6581+4]..src/SelectiveExpansion.ml[192,6581+25])
                                    Texp_apply
                                    expression (src/SelectiveExpansion.ml[192,6581+4]..src/SelectiveExpansion.ml[192,6581+13])
                                      Texp_ident "Stdlib!.Queue.add"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/SelectiveExpansion.ml[192,6581+14]..src/SelectiveExpansion.ml[192,6581+19])
                                          Texp_ident "label/1000"
                                      <arg>
                                        Nolabel
                                        expression (src/SelectiveExpansion.ml[192,6581+20]..src/SelectiveExpansion.ml[192,6581+25])
                                          Texp_ident "queue/953"
                                    ]
                              ]
                          <def>
                            pattern (src/SelectiveExpansion.ml[193,6607+6]..src/SelectiveExpansion.ml[193,6607+16])
                              Tpat_var "repeatedly/997"
                            expression (src/SelectiveExpansion.ml[193,6607+17]..src/SelectiveExpansion.ml[194,6632+26]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/SelectiveExpansion.ml[193,6607+17]..src/SelectiveExpansion.ml[193,6607+22])
                                    Tpat_var "visit/1001"
                                  expression (src/SelectiveExpansion.ml[194,6632+4]..src/SelectiveExpansion.ml[194,6632+26])
                                    Texp_apply
                                    expression (src/SelectiveExpansion.ml[194,6632+4]..src/SelectiveExpansion.ml[194,6632+14])
                                      Texp_ident "Dune__exe!.Misc.qiter"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/SelectiveExpansion.ml[194,6632+15]..src/SelectiveExpansion.ml[194,6632+20])
                                          Texp_ident "visit/1001"
                                      <arg>
                                        Nolabel
                                        expression (src/SelectiveExpansion.ml[194,6632+21]..src/SelectiveExpansion.ml[194,6632+26])
                                          Texp_ident "queue/953"
                                    ]
                              ]
                        ]
                        expression (src/SelectiveExpansion.ml[196,6664+2]..src/SelectiveExpansion.ml[196,6664+21])
                          Texp_tuple
                          [
                            expression (src/SelectiveExpansion.ml[196,6664+2]..src/SelectiveExpansion.ml[196,6664+9])
                              Texp_ident "enqueue/996"
                            expression (src/SelectiveExpansion.ml[196,6664+11]..src/SelectiveExpansion.ml[196,6664+21])
                              Texp_ident "repeatedly/997"
                          ]
                ]
              structure_item (src/SelectiveExpansion.ml[202,6851+0]..src/SelectiveExpansion.ml[210,7032+14])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[202,6851+4]..src/SelectiveExpansion.ml[202,6851+16])
                      Tpat_tuple
                      [
                        pattern (src/SelectiveExpansion.ml[202,6851+4]..src/SelectiveExpansion.ml[202,6851+8])
                          Tpat_var "mark/1002"
                        pattern (src/SelectiveExpansion.ml[202,6851+10]..src/SelectiveExpansion.ml[202,6851+16])
                          Tpat_var "marked/1003"
                      ]
                    expression (src/SelectiveExpansion.ml[203,6870+2]..src/SelectiveExpansion.ml[210,7032+14])
                      Texp_letmodule "H/1096"
                      module_expr (src/SelectiveExpansion.ml[203,6870+17]..src/SelectiveExpansion.ml[203,6870+36])
                        Tmod_apply
                        module_expr (src/SelectiveExpansion.ml[203,6870+17]..src/SelectiveExpansion.ml[203,6870+29])
                          module_expr (src/SelectiveExpansion.ml[203,6870+17]..src/SelectiveExpansion.ml[203,6870+29])
                            Tmod_ident "Stdlib!.Hashtbl.Make"
                        module_expr (src/SelectiveExpansion.ml[203,6870+30]..src/SelectiveExpansion.ml[203,6870+35])
                          Tmod_ident "Label/731"
                      expression (src/SelectiveExpansion.ml[204,6910+2]..src/SelectiveExpansion.ml[210,7032+14])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/SelectiveExpansion.ml[204,6910+6]..src/SelectiveExpansion.ml[204,6910+11])
                              Tpat_var "table/1097"
                            expression (src/SelectiveExpansion.ml[204,6910+14]..src/SelectiveExpansion.ml[204,6910+26])
                              Texp_apply
                              expression (src/SelectiveExpansion.ml[204,6910+14]..src/SelectiveExpansion.ml[204,6910+22])
                                Texp_ident "H/1096.create"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/SelectiveExpansion.ml[204,6910+23]..src/SelectiveExpansion.ml[204,6910+26])
                                    Texp_constant Const_int 128
                              ]
                        ]
                        expression (src/SelectiveExpansion.ml[205,6940+2]..src/SelectiveExpansion.ml[210,7032+14])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (src/SelectiveExpansion.ml[205,6940+6]..src/SelectiveExpansion.ml[205,6940+10])
                                Tpat_var "mark/1146"
                              expression (src/SelectiveExpansion.ml[205,6940+11]..src/SelectiveExpansion.ml[206,6959+24]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/SelectiveExpansion.ml[205,6940+11]..src/SelectiveExpansion.ml[205,6940+16])
                                      Tpat_var "label/1150"
                                    expression (src/SelectiveExpansion.ml[206,6959+4]..src/SelectiveExpansion.ml[206,6959+24])
                                      Texp_apply
                                      expression (src/SelectiveExpansion.ml[206,6959+4]..src/SelectiveExpansion.ml[206,6959+9])
                                        Texp_ident "H/1096.add"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/SelectiveExpansion.ml[206,6959+10]..src/SelectiveExpansion.ml[206,6959+15])
                                            Texp_ident "table/1097"
                                        <arg>
                                          Nolabel
                                          expression (src/SelectiveExpansion.ml[206,6959+16]..src/SelectiveExpansion.ml[206,6959+21])
                                            Texp_ident "label/1150"
                                        <arg>
                                          Nolabel
                                          expression (src/SelectiveExpansion.ml[206,6959+22]..src/SelectiveExpansion.ml[206,6959+24])
                                            Texp_construct "()"
                                            []
                                      ]
                                ]
                            <def>
                              pattern (src/SelectiveExpansion.ml[207,6984+6]..src/SelectiveExpansion.ml[207,6984+12])
                                Tpat_var "marked/1147"
                              expression (src/SelectiveExpansion.ml[207,6984+13]..src/SelectiveExpansion.ml[208,7005+21]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/SelectiveExpansion.ml[207,6984+13]..src/SelectiveExpansion.ml[207,6984+18])
                                      Tpat_var "label/1151"
                                    expression (src/SelectiveExpansion.ml[208,7005+4]..src/SelectiveExpansion.ml[208,7005+21])
                                      Texp_apply
                                      expression (src/SelectiveExpansion.ml[208,7005+4]..src/SelectiveExpansion.ml[208,7005+9])
                                        Texp_ident "H/1096.mem"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/SelectiveExpansion.ml[208,7005+10]..src/SelectiveExpansion.ml[208,7005+15])
                                            Texp_ident "table/1097"
                                        <arg>
                                          Nolabel
                                          expression (src/SelectiveExpansion.ml[208,7005+16]..src/SelectiveExpansion.ml[208,7005+21])
                                            Texp_ident "label/1151"
                                      ]
                                ]
                          ]
                          expression (src/SelectiveExpansion.ml[210,7032+2]..src/SelectiveExpansion.ml[210,7032+14])
                            Texp_tuple
                            [
                              expression (src/SelectiveExpansion.ml[210,7032+2]..src/SelectiveExpansion.ml[210,7032+6])
                                Texp_ident "mark/1146"
                              expression (src/SelectiveExpansion.ml[210,7032+8]..src/SelectiveExpansion.ml[210,7032+14])
                                Texp_ident "marked/1147"
                            ]
                ]
              structure_item (src/SelectiveExpansion.ml[216,7196+0]..src/SelectiveExpansion.ml[224,7403+13])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[216,7196+4]..src/SelectiveExpansion.ml[216,7196+15])
                      Tpat_tuple
                      [
                        pattern (src/SelectiveExpansion.ml[216,7196+4]..src/SelectiveExpansion.ml[216,7196+8])
                          Tpat_var "emit/1152"
                        pattern (src/SelectiveExpansion.ml[216,7196+10]..src/SelectiveExpansion.ml[216,7196+15])
                          Tpat_var "rules/1153"
                      ]
                    expression (src/SelectiveExpansion.ml[217,7214+2]..src/SelectiveExpansion.ml[224,7403+13])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/SelectiveExpansion.ml[217,7214+6]..src/SelectiveExpansion.ml[217,7214+11])
                            Tpat_var "rules/1154"
                          expression (src/SelectiveExpansion.ml[217,7214+14]..src/SelectiveExpansion.ml[217,7214+33])
                            Texp_apply
                            expression (src/SelectiveExpansion.ml[217,7214+14]..src/SelectiveExpansion.ml[217,7214+17])
                              Texp_ident "Stdlib!.ref"
                            [
                              <arg>
                                Nolabel
                                expression (src/SelectiveExpansion.ml[217,7214+18]..src/SelectiveExpansion.ml[217,7214+33])
                                  Texp_ident "Dune__exe!.StringMap.empty"
                            ]
                      ]
                      expression (src/SelectiveExpansion.ml[218,7251+2]..src/SelectiveExpansion.ml[224,7403+13])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/SelectiveExpansion.ml[218,7251+6]..src/SelectiveExpansion.ml[218,7251+10])
                              Tpat_var "emit/1155"
                            expression (src/SelectiveExpansion.ml[218,7251+11]..src/SelectiveExpansion.ml[220,7321+49]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/SelectiveExpansion.ml[218,7251+11]..src/SelectiveExpansion.ml[218,7251+15])
                                    Tpat_var "rule/1158"
                                  expression (src/SelectiveExpansion.ml[219,7269+4]..src/SelectiveExpansion.ml[220,7321+49])
                                    Texp_sequence
                                    expression (src/SelectiveExpansion.ml[219,7269+4]..src/SelectiveExpansion.ml[219,7269+50])
                                      Texp_assert                                      expression (src/SelectiveExpansion.ml[219,7269+11]..src/SelectiveExpansion.ml[219,7269+50])
                                        Texp_apply
                                        expression (src/SelectiveExpansion.ml[219,7269+12]..src/SelectiveExpansion.ml[219,7269+15])
                                          Texp_ident "Stdlib!.not"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/SelectiveExpansion.ml[219,7269+16]..src/SelectiveExpansion.ml[219,7269+49])
                                              Texp_apply
                                              expression (src/SelectiveExpansion.ml[219,7269+17]..src/SelectiveExpansion.ml[219,7269+30])
                                                Texp_ident "Dune__exe!.StringMap.mem"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/SelectiveExpansion.ml[219,7269+31]..src/SelectiveExpansion.ml[219,7269+41])
                                                    Texp_field
                                                    expression (src/SelectiveExpansion.ml[219,7269+31]..src/SelectiveExpansion.ml[219,7269+35])
                                                      Texp_ident "rule/1158"
                                                    "pr_nt"
                                                <arg>
                                                  Nolabel
                                                  expression (src/SelectiveExpansion.ml[219,7269+42]..src/SelectiveExpansion.ml[219,7269+48])
                                                    Texp_apply
                                                    expression (src/SelectiveExpansion.ml[219,7269+42]..src/SelectiveExpansion.ml[219,7269+43])
                                                      Texp_ident "Stdlib!.!"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/SelectiveExpansion.ml[219,7269+43]..src/SelectiveExpansion.ml[219,7269+48])
                                                          Texp_ident "rules/1154"
                                                    ]
                                              ]
                                        ]
                                    expression (src/SelectiveExpansion.ml[220,7321+4]..src/SelectiveExpansion.ml[220,7321+49])
                                      Texp_apply
                                      expression (src/SelectiveExpansion.ml[220,7321+10]..src/SelectiveExpansion.ml[220,7321+12])
                                        Texp_ident "Stdlib!.:="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/SelectiveExpansion.ml[220,7321+4]..src/SelectiveExpansion.ml[220,7321+9])
                                            Texp_ident "rules/1154"
                                        <arg>
                                          Nolabel
                                          expression (src/SelectiveExpansion.ml[220,7321+13]..src/SelectiveExpansion.ml[220,7321+49])
                                            Texp_apply
                                            expression (src/SelectiveExpansion.ml[220,7321+13]..src/SelectiveExpansion.ml[220,7321+26])
                                              Texp_ident "Dune__exe!.StringMap.add"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/SelectiveExpansion.ml[220,7321+27]..src/SelectiveExpansion.ml[220,7321+37])
                                                  Texp_field
                                                  expression (src/SelectiveExpansion.ml[220,7321+27]..src/SelectiveExpansion.ml[220,7321+31])
                                                    Texp_ident "rule/1158"
                                                  "pr_nt"
                                              <arg>
                                                Nolabel
                                                expression (src/SelectiveExpansion.ml[220,7321+38]..src/SelectiveExpansion.ml[220,7321+42])
                                                  Texp_ident "rule/1158"
                                              <arg>
                                                Nolabel
                                                expression (src/SelectiveExpansion.ml[220,7321+43]..src/SelectiveExpansion.ml[220,7321+49])
                                                  Texp_apply
                                                  expression (src/SelectiveExpansion.ml[220,7321+43]..src/SelectiveExpansion.ml[220,7321+44])
                                                    Texp_ident "Stdlib!.!"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/SelectiveExpansion.ml[220,7321+44]..src/SelectiveExpansion.ml[220,7321+49])
                                                        Texp_ident "rules/1154"
                                                  ]
                                            ]
                                      ]
                              ]
                          <def>
                            pattern (src/SelectiveExpansion.ml[221,7371+6]..src/SelectiveExpansion.ml[221,7371+11])
                              Tpat_var "rules/1156"
                            expression (src/SelectiveExpansion.ml[221,7371+11]..src/SelectiveExpansion.ml[222,7387+10]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/SelectiveExpansion.ml[221,7371+11]..src/SelectiveExpansion.ml[221,7371+13])
                                    Tpat_construct "()"
                                    []
                                    None
                                  expression (src/SelectiveExpansion.ml[222,7387+4]..src/SelectiveExpansion.ml[222,7387+10])
                                    Texp_apply
                                    expression (src/SelectiveExpansion.ml[222,7387+4]..src/SelectiveExpansion.ml[222,7387+5])
                                      Texp_ident "Stdlib!.!"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/SelectiveExpansion.ml[222,7387+5]..src/SelectiveExpansion.ml[222,7387+10])
                                          Texp_ident "rules/1154"
                                    ]
                              ]
                        ]
                        expression (src/SelectiveExpansion.ml[224,7403+2]..src/SelectiveExpansion.ml[224,7403+13])
                          Texp_tuple
                          [
                            expression (src/SelectiveExpansion.ml[224,7403+2]..src/SelectiveExpansion.ml[224,7403+6])
                              Texp_ident "emit/1155"
                            expression (src/SelectiveExpansion.ml[224,7403+8]..src/SelectiveExpansion.ml[224,7403+13])
                              Texp_ident "rules/1156"
                          ]
                ]
              structure_item (src/SelectiveExpansion.ml[238,8108+0]..src/SelectiveExpansion.ml[245,8341+7])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[238,8108+4]..src/SelectiveExpansion.ml[238,8108+13])
                      Tpat_var "new_claim/1160"
                    expression (src/SelectiveExpansion.ml[238,8108+14]..src/SelectiveExpansion.ml[245,8341+7]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[238,8108+14]..src/SelectiveExpansion.ml[238,8108+16])
                            Tpat_construct "()"
                            []
                            None
                          expression (src/SelectiveExpansion.ml[239,8146+2]..src/SelectiveExpansion.ml[245,8341+7])
                            extra
                              Texp_constraint
                              core_type (src/SelectiveExpansion.ml[238,8108+20]..src/SelectiveExpansion.ml[238,8108+34])
                                Ttyp_arrow
                                Nolabel
                                core_type (src/SelectiveExpansion.ml[238,8108+20]..src/SelectiveExpansion.ml[238,8108+26])
                                  Ttyp_constr "string/15!"
                                  []
                                core_type (src/SelectiveExpansion.ml[238,8108+30]..src/SelectiveExpansion.ml[238,8108+34])
                                  Ttyp_constr "unit/6!"
                                  []
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/SelectiveExpansion.ml[239,8146+6]..src/SelectiveExpansion.ml[239,8146+11])
                                  Tpat_var "names/1162"
                                expression (src/SelectiveExpansion.ml[239,8146+14]..src/SelectiveExpansion.ml[239,8146+33])
                                  Texp_apply
                                  expression (src/SelectiveExpansion.ml[239,8146+14]..src/SelectiveExpansion.ml[239,8146+17])
                                    Texp_ident "Stdlib!.ref"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/SelectiveExpansion.ml[239,8146+18]..src/SelectiveExpansion.ml[239,8146+33])
                                        Texp_ident "Dune__exe!.StringSet.empty"
                                  ]
                            ]
                            expression (src/SelectiveExpansion.ml[240,8183+2]..src/SelectiveExpansion.ml[245,8341+7])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/SelectiveExpansion.ml[240,8183+6]..src/SelectiveExpansion.ml[240,8183+11])
                                    Tpat_var "claim/1209"
                                  expression (src/SelectiveExpansion.ml[240,8183+12]..src/SelectiveExpansion.ml[243,8297+38]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/SelectiveExpansion.ml[240,8183+12]..src/SelectiveExpansion.ml[240,8183+16])
                                          Tpat_var "name/1211"
                                        expression (src/SelectiveExpansion.ml[241,8202+4]..src/SelectiveExpansion.ml[243,8297+38])
                                          Texp_sequence
                                          expression (src/SelectiveExpansion.ml[241,8202+4]..src/SelectiveExpansion.ml[242,8240+55])
                                            Texp_ifthenelse
                                            expression (src/SelectiveExpansion.ml[241,8202+7]..src/SelectiveExpansion.ml[241,8202+32])
                                              Texp_apply
                                              expression (src/SelectiveExpansion.ml[241,8202+7]..src/SelectiveExpansion.ml[241,8202+20])
                                                Texp_ident "Dune__exe!.StringSet.mem"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/SelectiveExpansion.ml[241,8202+21]..src/SelectiveExpansion.ml[241,8202+25])
                                                    Texp_ident "name/1211"
                                                <arg>
                                                  Nolabel
                                                  expression (src/SelectiveExpansion.ml[241,8202+26]..src/SelectiveExpansion.ml[241,8202+32])
                                                    Texp_apply
                                                    expression (src/SelectiveExpansion.ml[241,8202+26]..src/SelectiveExpansion.ml[241,8202+27])
                                                      Texp_ident "Stdlib!.!"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/SelectiveExpansion.ml[241,8202+27]..src/SelectiveExpansion.ml[241,8202+32])
                                                          Texp_ident "names/1162"
                                                    ]
                                              ]
                                            expression (src/SelectiveExpansion.ml[242,8240+6]..src/SelectiveExpansion.ml[242,8240+55])
                                              Texp_apply
                                              expression (src/SelectiveExpansion.ml[242,8240+6]..src/SelectiveExpansion.ml[242,8240+17])
                                                Texp_ident "Dune__exe!.Error.error"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/SelectiveExpansion.ml[242,8240+18]..src/SelectiveExpansion.ml[242,8240+20])
                                                    Texp_construct "[]"
                                                    []
                                                <arg>
                                                  Nolabel
                                                  expression (src/SelectiveExpansion.ml[242,8240+21]..src/SelectiveExpansion.ml[242,8240+50])
                                                    Texp_construct "CamlinternalFormatBasics.Format"
                                                    [
                                                      expression (src/SelectiveExpansion.ml[242,8240+21]..src/SelectiveExpansion.ml[242,8240+50]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                        [
                                                          expression (src/SelectiveExpansion.ml[242,8240+21]..src/SelectiveExpansion.ml[242,8240+50]) ghost
                                                            Texp_constant Const_string("internal name clash over ",(src/SelectiveExpansion.ml[242,8240+21]..src/SelectiveExpansion.ml[242,8240+50]) ghost,None)
                                                          expression (src/SelectiveExpansion.ml[242,8240+21]..src/SelectiveExpansion.ml[242,8240+50]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.String"
                                                            [
                                                              expression (src/SelectiveExpansion.ml[242,8240+21]..src/SelectiveExpansion.ml[242,8240+50]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                []
                                                              expression (src/SelectiveExpansion.ml[242,8240+21]..src/SelectiveExpansion.ml[242,8240+50]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                []
                                                            ]
                                                        ]
                                                      expression (src/SelectiveExpansion.ml[242,8240+21]..src/SelectiveExpansion.ml[242,8240+50]) ghost
                                                        Texp_constant Const_string("internal name clash over %s",(src/SelectiveExpansion.ml[242,8240+21]..src/SelectiveExpansion.ml[242,8240+50]) ghost,None)
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/SelectiveExpansion.ml[242,8240+51]..src/SelectiveExpansion.ml[242,8240+55])
                                                    Texp_ident "name/1211"
                                              ]
                                            None
                                          expression (src/SelectiveExpansion.ml[243,8297+4]..src/SelectiveExpansion.ml[243,8297+38])
                                            Texp_apply
                                            expression (src/SelectiveExpansion.ml[243,8297+10]..src/SelectiveExpansion.ml[243,8297+12])
                                              Texp_ident "Stdlib!.:="
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/SelectiveExpansion.ml[243,8297+4]..src/SelectiveExpansion.ml[243,8297+9])
                                                  Texp_ident "names/1162"
                                              <arg>
                                                Nolabel
                                                expression (src/SelectiveExpansion.ml[243,8297+13]..src/SelectiveExpansion.ml[243,8297+38])
                                                  Texp_apply
                                                  expression (src/SelectiveExpansion.ml[243,8297+13]..src/SelectiveExpansion.ml[243,8297+26])
                                                    Texp_ident "Dune__exe!.StringSet.add"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/SelectiveExpansion.ml[243,8297+27]..src/SelectiveExpansion.ml[243,8297+31])
                                                        Texp_ident "name/1211"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/SelectiveExpansion.ml[243,8297+32]..src/SelectiveExpansion.ml[243,8297+38])
                                                        Texp_apply
                                                        expression (src/SelectiveExpansion.ml[243,8297+32]..src/SelectiveExpansion.ml[243,8297+33])
                                                          Texp_ident "Stdlib!.!"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/SelectiveExpansion.ml[243,8297+33]..src/SelectiveExpansion.ml[243,8297+38])
                                                              Texp_ident "names/1162"
                                                        ]
                                                  ]
                                            ]
                                    ]
                              ]
                              expression (src/SelectiveExpansion.ml[245,8341+2]..src/SelectiveExpansion.ml[245,8341+7])
                                Texp_ident "claim/1209"
                      ]
                ]
              structure_item (src/SelectiveExpansion.ml[247,8350+0]..src/SelectiveExpansion.ml[254,8581+3])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[247,8350+4]..src/SelectiveExpansion.ml[247,8350+10])
                      extra
                        Tpat_extra_constraint
                        core_type (src/SelectiveExpansion.ml[247,8350+13]..src/SelectiveExpansion.ml[247,8350+33])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/SelectiveExpansion.ml[247,8350+13]..src/SelectiveExpansion.ml[247,8350+18])
                            Ttyp_constr "label/511"
                            []
                          core_type (src/SelectiveExpansion.ml[247,8350+22]..src/SelectiveExpansion.ml[247,8350+33])
                            Ttyp_constr "Dune__exe!.Syntax.nonterminal"
                            []
                      Tpat_alias "mangle/1274"
                      pattern (src/SelectiveExpansion.ml[247,8350+4]..src/SelectiveExpansion.ml[247,8350+10])
                        Tpat_any
                    expression (src/SelectiveExpansion.ml[248,8386+2]..src/SelectiveExpansion.ml[254,8581+3])
                      extra
                        Texp_constraint
                        core_type (src/SelectiveExpansion.ml[247,8350+13]..src/SelectiveExpansion.ml[247,8350+33])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/SelectiveExpansion.ml[247,8350+13]..src/SelectiveExpansion.ml[247,8350+18])
                            Ttyp_constr "label/511"
                            []
                          core_type (src/SelectiveExpansion.ml[247,8350+22]..src/SelectiveExpansion.ml[247,8350+33])
                            Ttyp_constr "Dune__exe!.Syntax.nonterminal"
                            []
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/SelectiveExpansion.ml[248,8386+6]..src/SelectiveExpansion.ml[248,8386+18])
                            Tpat_var "ensure_fresh/1275"
                          expression (src/SelectiveExpansion.ml[248,8386+21]..src/SelectiveExpansion.ml[248,8386+32])
                            Texp_apply
                            expression (src/SelectiveExpansion.ml[248,8386+21]..src/SelectiveExpansion.ml[248,8386+30])
                              Texp_ident "new_claim/1160"
                            [
                              <arg>
                                Nolabel
                                expression (src/SelectiveExpansion.ml[248,8386+30]..src/SelectiveExpansion.ml[248,8386+32])
                                  Texp_construct "()"
                                  []
                            ]
                      ]
                      expression (src/SelectiveExpansion.ml[249,8422+2]..src/SelectiveExpansion.ml[254,8581+3])
                        Texp_letmodule "M/1385"
                        module_expr (src/SelectiveExpansion.ml[249,8422+17]..src/SelectiveExpansion.ml[249,8422+49])
                          Tmod_apply
                          module_expr (src/SelectiveExpansion.ml[249,8422+17]..src/SelectiveExpansion.ml[249,8422+42])
                            module_expr (src/SelectiveExpansion.ml[249,8422+17]..src/SelectiveExpansion.ml[249,8422+42])
                              Tmod_ident "Dune__exe!.Fix.Memoize.ForHashedType"
                          module_expr (src/SelectiveExpansion.ml[249,8422+43]..src/SelectiveExpansion.ml[249,8422+48])
                            Tmod_ident "Label/731"
                        expression (src/SelectiveExpansion.ml[250,8475+2]..src/SelectiveExpansion.ml[254,8581+3])
                          Texp_apply
                          expression (src/SelectiveExpansion.ml[250,8475+2]..src/SelectiveExpansion.ml[250,8475+11])
                            Texp_ident "M/1385.memoize"
                          [
                            <arg>
                              Nolabel
                              expression (src/SelectiveExpansion.ml[250,8475+12]..src/SelectiveExpansion.ml[254,8581+3])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/SelectiveExpansion.ml[250,8475+17]..src/SelectiveExpansion.ml[250,8475+22])
                                      Tpat_var "label/1386"
                                    expression (src/SelectiveExpansion.ml[251,8501+4]..src/SelectiveExpansion.ml[253,8572+8])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/SelectiveExpansion.ml[251,8501+8]..src/SelectiveExpansion.ml[251,8501+12])
                                            Tpat_var "name/1387"
                                          expression (src/SelectiveExpansion.ml[251,8501+15]..src/SelectiveExpansion.ml[251,8501+27])
                                            Texp_apply
                                            expression (src/SelectiveExpansion.ml[251,8501+15]..src/SelectiveExpansion.ml[251,8501+21])
                                              Texp_ident "mangle/736"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/SelectiveExpansion.ml[251,8501+22]..src/SelectiveExpansion.ml[251,8501+27])
                                                  Texp_ident "label/1386"
                                            ]
                                      ]
                                      expression (src/SelectiveExpansion.ml[252,8532+4]..src/SelectiveExpansion.ml[253,8572+8])
                                        Texp_sequence
                                        expression (src/SelectiveExpansion.ml[252,8532+4]..src/SelectiveExpansion.ml[252,8532+38])
                                          Texp_apply
                                          expression (src/SelectiveExpansion.ml[252,8532+4]..src/SelectiveExpansion.ml[252,8532+16])
                                            Texp_ident "ensure_fresh/1275"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/SelectiveExpansion.ml[252,8532+17]..src/SelectiveExpansion.ml[252,8532+38])
                                                Texp_apply
                                                expression (src/SelectiveExpansion.ml[252,8532+18]..src/SelectiveExpansion.ml[252,8532+32])
                                                  Texp_ident "Dune__exe!.Misc.normalize"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/SelectiveExpansion.ml[252,8532+33]..src/SelectiveExpansion.ml[252,8532+37])
                                                      Texp_ident "name/1387"
                                                ]
                                          ]
                                        expression (src/SelectiveExpansion.ml[253,8572+4]..src/SelectiveExpansion.ml[253,8572+8])
                                          Texp_ident "name/1387"
                                ]
                          ]
                ]
              structure_item (src/SelectiveExpansion.ml[284,9869+0]..src/SelectiveExpansion.ml[328,11647+44])
                Tstr_value Rec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[284,9869+8]..src/SelectiveExpansion.ml[284,9869+17])
                      Tpat_var "recognize/1388"
                    expression (src/SelectiveExpansion.ml[284,9869+18]..src/SelectiveExpansion.ml[328,11647+44]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[284,9869+19]..src/SelectiveExpansion.ml[284,9869+24])
                            extra
                              Tpat_extra_constraint
                              core_type (src/SelectiveExpansion.ml[284,9869+27]..src/SelectiveExpansion.ml[284,9869+36])
                                Ttyp_constr "Dune__exe!.Syntax.parameter"
                                []
                            Tpat_alias "param/1389"
                            pattern (src/SelectiveExpansion.ml[284,9869+19]..src/SelectiveExpansion.ml[284,9869+24])
                              Tpat_any
                          expression (src/SelectiveExpansion.ml[286,9996+2]..src/SelectiveExpansion.ml[328,11647+44])
                            extra
                              Texp_constraint
                              core_type (src/SelectiveExpansion.ml[284,9869+40]..src/SelectiveExpansion.ml[284,9869+49])
                                Ttyp_constr "Dune__exe!.Syntax.parameter"
                                []
                            Texp_match
                            expression (src/SelectiveExpansion.ml[286,9996+8]..src/SelectiveExpansion.ml[286,9996+13])
                              Texp_ident "param/1389"
                            [
                              <case>
                                pattern (src/SelectiveExpansion.ml[287,10015+4]..src/SelectiveExpansion.ml[287,10015+24])
                                  Tpat_value
                                  pattern (src/SelectiveExpansion.ml[287,10015+4]..src/SelectiveExpansion.ml[287,10015+24])
                                    Tpat_construct "ParameterAnonymous"
                                    [
                                      pattern (src/SelectiveExpansion.ml[287,10015+23]..src/SelectiveExpansion.ml[287,10015+24])
                                        Tpat_any
                                    ]
                                    None
                                expression (src/SelectiveExpansion.ml[288,10043+6]..src/SelectiveExpansion.ml[288,10043+18])
                                  Texp_assert                                  expression (src/SelectiveExpansion.ml[288,10043+13]..src/SelectiveExpansion.ml[288,10043+18])
                                    Texp_construct "false"
                                    []
                              <case>
                                pattern (src/SelectiveExpansion.ml[289,10062+4]..src/SelectiveExpansion.ml[289,10062+18])
                                  Tpat_value
                                  pattern (src/SelectiveExpansion.ml[289,10062+4]..src/SelectiveExpansion.ml[289,10062+18])
                                    Tpat_construct "ParameterVar"
                                    [
                                      pattern (src/SelectiveExpansion.ml[289,10062+17]..src/SelectiveExpansion.ml[289,10062+18])
                                        Tpat_any
                                    ]
                                    None
                                expression (src/SelectiveExpansion.ml[290,10084+6]..src/SelectiveExpansion.ml[290,10084+11])
                                  Texp_ident "param/1389"
                              <case>
                                pattern (src/SelectiveExpansion.ml[291,10096+4]..src/SelectiveExpansion.ml[291,10096+26])
                                  Tpat_value
                                  pattern (src/SelectiveExpansion.ml[291,10096+4]..src/SelectiveExpansion.ml[291,10096+26])
                                    Tpat_construct "ParameterApp"
                                    [
                                      pattern (src/SelectiveExpansion.ml[291,10096+18]..src/SelectiveExpansion.ml[291,10096+21])
                                        Tpat_var "sym/1390"
                                      pattern (src/SelectiveExpansion.ml[291,10096+23]..src/SelectiveExpansion.ml[291,10096+25])
                                        Tpat_var "ps/1391"
                                    ]
                                    None
                                expression (src/SelectiveExpansion.ml[292,10126+6]..src/SelectiveExpansion.ml[328,11647+44])
                                  Texp_sequence
                                  expression (src/SelectiveExpansion.ml[292,10126+6]..src/SelectiveExpansion.ml[292,10126+23])
                                    Texp_assert                                    expression (src/SelectiveExpansion.ml[292,10126+13]..src/SelectiveExpansion.ml[292,10126+23])
                                      Texp_apply
                                      expression (src/SelectiveExpansion.ml[292,10126+17]..src/SelectiveExpansion.ml[292,10126+19])
                                        Texp_ident "Stdlib!.<>"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/SelectiveExpansion.ml[292,10126+14]..src/SelectiveExpansion.ml[292,10126+16])
                                            Texp_ident "ps/1391"
                                        <arg>
                                          Nolabel
                                          expression (src/SelectiveExpansion.ml[292,10126+20]..src/SelectiveExpansion.ml[292,10126+22])
                                            Texp_construct "[]"
                                            []
                                      ]
                                  expression (src/SelectiveExpansion.ml[293,10151+6]..src/SelectiveExpansion.ml[328,11647+44])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/SelectiveExpansion.ml[293,10151+10]..src/SelectiveExpansion.ml[293,10151+11])
                                          Tpat_var "x/1392"
                                        expression (src/SelectiveExpansion.ml[293,10151+14]..src/SelectiveExpansion.ml[293,10151+23])
                                          Texp_apply
                                          expression (src/SelectiveExpansion.ml[293,10151+14]..src/SelectiveExpansion.ml[293,10151+19])
                                            Texp_ident "value/397"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/SelectiveExpansion.ml[293,10151+20]..src/SelectiveExpansion.ml[293,10151+23])
                                                Texp_ident "sym/1390"
                                          ]
                                    ]
                                    expression (src/SelectiveExpansion.ml[301,10677+6]..src/SelectiveExpansion.ml[328,11647+44])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/SelectiveExpansion.ml[301,10677+10]..src/SelectiveExpansion.ml[301,10677+25])
                                            Tpat_tuple
                                            [
                                              pattern (src/SelectiveExpansion.ml[301,10677+10]..src/SelectiveExpansion.ml[301,10677+14])
                                                Tpat_var "inst/1393"
                                              pattern (src/SelectiveExpansion.ml[301,10677+16]..src/SelectiveExpansion.ml[301,10677+25])
                                                Tpat_var "residuals/1394"
                                            ]
                                          expression (src/SelectiveExpansion.ml[302,10705+8]..src/SelectiveExpansion.ml[323,11526+27])
                                            Texp_match
                                            expression (src/SelectiveExpansion.ml[302,10705+14]..src/SelectiveExpansion.ml[302,10705+18])
                                              Texp_ident "G/933.mode"
                                            [
                                              <case>
                                                pattern (src/SelectiveExpansion.ml[303,10729+10]..src/SelectiveExpansion.ml[303,10729+19])
                                                  Tpat_value
                                                  pattern (src/SelectiveExpansion.ml[303,10729+10]..src/SelectiveExpansion.ml[303,10729+19])
                                                    Tpat_construct "ExpandAll"
                                                    []
                                                    None
                                                expression (src/SelectiveExpansion.ml[305,10799+12]..src/SelectiveExpansion.ml[307,10886+27])
                                                  Texp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (src/SelectiveExpansion.ml[305,10799+16]..src/SelectiveExpansion.ml[305,10799+20])
                                                        Tpat_var "inst/1395"
                                                      expression (src/SelectiveExpansion.ml[305,10799+23]..src/SelectiveExpansion.ml[305,10799+52])
                                                        Texp_apply
                                                        expression (src/SelectiveExpansion.ml[305,10799+23]..src/SelectiveExpansion.ml[305,10799+31])
                                                          Texp_ident "Stdlib!.List.map"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/SelectiveExpansion.ml[305,10799+32]..src/SelectiveExpansion.ml[305,10799+49])
                                                              Texp_function
                                                              Nolabel
                                                              [
                                                                <case>
                                                                  pattern (src/SelectiveExpansion.ml[305,10799+37]..src/SelectiveExpansion.ml[305,10799+38])
                                                                    Tpat_var "p/1397"
                                                                  expression (src/SelectiveExpansion.ml[305,10799+42]..src/SelectiveExpansion.ml[305,10799+48])
                                                                    Texp_construct "Some"
                                                                    [
                                                                      expression (src/SelectiveExpansion.ml[305,10799+47]..src/SelectiveExpansion.ml[305,10799+48])
                                                                        Texp_ident "p/1397"
                                                                    ]
                                                              ]
                                                          <arg>
                                                            Nolabel
                                                            expression (src/SelectiveExpansion.ml[305,10799+50]..src/SelectiveExpansion.ml[305,10799+52])
                                                              Texp_ident "ps/1391"
                                                        ]
                                                    <def>
                                                      pattern (src/SelectiveExpansion.ml[306,10852+16]..src/SelectiveExpansion.ml[306,10852+25])
                                                        Tpat_var "residuals/1396"
                                                      expression (src/SelectiveExpansion.ml[306,10852+28]..src/SelectiveExpansion.ml[306,10852+30])
                                                        Texp_construct "[]"
                                                        []
                                                  ]
                                                  expression (src/SelectiveExpansion.ml[307,10886+12]..src/SelectiveExpansion.ml[307,10886+27])
                                                    Texp_tuple
                                                    [
                                                      expression (src/SelectiveExpansion.ml[307,10886+12]..src/SelectiveExpansion.ml[307,10886+16])
                                                        Texp_ident "inst/1395"
                                                      expression (src/SelectiveExpansion.ml[307,10886+18]..src/SelectiveExpansion.ml[307,10886+27])
                                                        Texp_ident "residuals/1396"
                                                    ]
                                              <case>
                                                pattern (src/SelectiveExpansion.ml[308,10914+10]..src/SelectiveExpansion.ml[308,10914+26])
                                                  Tpat_value
                                                  pattern (src/SelectiveExpansion.ml[308,10914+10]..src/SelectiveExpansion.ml[308,10914+26])
                                                    Tpat_construct "ExpandHigherSort"
                                                    []
                                                    None
                                                expression (src/SelectiveExpansion.ml[310,11011+12]..src/SelectiveExpansion.ml[323,11526+27])
                                                  Texp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (src/SelectiveExpansion.ml[310,11011+16]..src/SelectiveExpansion.ml[310,11011+18])
                                                        extra
                                                          Tpat_extra_constraint
                                                          core_type (src/SelectiveExpansion.ml[310,11011+21]..src/SelectiveExpansion.ml[310,11011+30])
                                                            Ttyp_constr "list/9!"
                                                            [
                                                              core_type (src/SelectiveExpansion.ml[310,11011+21]..src/SelectiveExpansion.ml[310,11011+25])
                                                                Ttyp_constr "Dune__exe!.GroundSort.sort"
                                                                []
                                                            ]
                                                        Tpat_alias "ss/1398"
                                                        pattern (src/SelectiveExpansion.ml[310,11011+16]..src/SelectiveExpansion.ml[310,11011+18])
                                                          Tpat_any
                                                      expression (src/SelectiveExpansion.ml[310,11011+33]..src/SelectiveExpansion.ml[310,11011+65])
                                                        extra
                                                          Texp_constraint
                                                          core_type (src/SelectiveExpansion.ml[310,11011+21]..src/SelectiveExpansion.ml[310,11011+30])
                                                            Ttyp_constr "list/9!"
                                                            [
                                                              core_type (src/SelectiveExpansion.ml[310,11011+21]..src/SelectiveExpansion.ml[310,11011+25])
                                                                Ttyp_constr "Dune__exe!.GroundSort.sort"
                                                                []
                                                            ]
                                                        Texp_apply
                                                        expression (src/SelectiveExpansion.ml[310,11011+33]..src/SelectiveExpansion.ml[310,11011+39])
                                                          Texp_ident "Dune__exe!.GroundSort.domain"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/SelectiveExpansion.ml[310,11011+40]..src/SelectiveExpansion.ml[310,11011+65])
                                                              Texp_apply
                                                              expression (src/SelectiveExpansion.ml[310,11011+41]..src/SelectiveExpansion.ml[310,11011+45])
                                                                Texp_ident "sort/937"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/SelectiveExpansion.ml[310,11011+46]..src/SelectiveExpansion.ml[310,11011+64])
                                                                    Texp_construct "ParameterVar"
                                                                    [
                                                                      expression (src/SelectiveExpansion.ml[310,11011+60]..src/SelectiveExpansion.ml[310,11011+63])
                                                                        Texp_ident "sym/1390"
                                                                    ]
                                                              ]
                                                        ]
                                                  ]
                                                  expression (src/SelectiveExpansion.ml[311,11080+12]..src/SelectiveExpansion.ml[323,11526+27])
                                                    Texp_sequence
                                                    expression (src/SelectiveExpansion.ml[311,11080+12]..src/SelectiveExpansion.ml[311,11080+52])
                                                      Texp_assert                                                      expression (src/SelectiveExpansion.ml[311,11080+19]..src/SelectiveExpansion.ml[311,11080+52])
                                                        Texp_apply
                                                        expression (src/SelectiveExpansion.ml[311,11080+35]..src/SelectiveExpansion.ml[311,11080+36])
                                                          Texp_ident "Stdlib!.="
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/SelectiveExpansion.ml[311,11080+20]..src/SelectiveExpansion.ml[311,11080+34])
                                                              Texp_apply
                                                              expression (src/SelectiveExpansion.ml[311,11080+20]..src/SelectiveExpansion.ml[311,11080+31])
                                                                Texp_ident "Stdlib!.List.length"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/SelectiveExpansion.ml[311,11080+32]..src/SelectiveExpansion.ml[311,11080+34])
                                                                    Texp_ident "ps/1391"
                                                              ]
                                                          <arg>
                                                            Nolabel
                                                            expression (src/SelectiveExpansion.ml[311,11080+37]..src/SelectiveExpansion.ml[311,11080+51])
                                                              Texp_apply
                                                              expression (src/SelectiveExpansion.ml[311,11080+37]..src/SelectiveExpansion.ml[311,11080+48])
                                                                Texp_ident "Stdlib!.List.length"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/SelectiveExpansion.ml[311,11080+49]..src/SelectiveExpansion.ml[311,11080+51])
                                                                    Texp_ident "ss/1398"
                                                              ]
                                                        ]
                                                    expression (src/SelectiveExpansion.ml[312,11134+12]..src/SelectiveExpansion.ml[323,11526+27])
                                                      Texp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (src/SelectiveExpansion.ml[312,11134+16]..src/SelectiveExpansion.ml[312,11134+19])
                                                            Tpat_var "pss/1399"
                                                          expression (src/SelectiveExpansion.ml[312,11134+22]..src/SelectiveExpansion.ml[312,11134+40])
                                                            Texp_apply
                                                            expression (src/SelectiveExpansion.ml[312,11134+22]..src/SelectiveExpansion.ml[312,11134+34])
                                                              Texp_ident "Stdlib!.List.combine"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/SelectiveExpansion.ml[312,11134+35]..src/SelectiveExpansion.ml[312,11134+37])
                                                                  Texp_ident "ps/1391"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/SelectiveExpansion.ml[312,11134+38]..src/SelectiveExpansion.ml[312,11134+40])
                                                                  Texp_ident "ss/1398"
                                                            ]
                                                      ]
                                                      expression (src/SelectiveExpansion.ml[313,11178+12]..src/SelectiveExpansion.ml[323,11526+27])
                                                        Texp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (src/SelectiveExpansion.ml[313,11178+16]..src/SelectiveExpansion.ml[313,11178+20])
                                                              Tpat_var "inst/1400"
                                                            expression (src/SelectiveExpansion.ml[314,11201+14]..src/SelectiveExpansion.ml[316,11267+60])
                                                              Texp_apply
                                                              expression (src/SelectiveExpansion.ml[315,11219+17]..src/SelectiveExpansion.ml[316,11267+60])
                                                                Texp_apply
                                                                expression (src/SelectiveExpansion.ml[315,11219+17]..src/SelectiveExpansion.ml[315,11219+25])
                                                                  Texp_ident "Stdlib!.List.map"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/SelectiveExpansion.ml[315,11219+26]..src/SelectiveExpansion.ml[316,11267+60])
                                                                      Texp_function
                                                                      Nolabel
                                                                      [
                                                                        <case>
                                                                          pattern (src/SelectiveExpansion.ml[315,11219+31]..src/SelectiveExpansion.ml[315,11219+44])
                                                                            Tpat_tuple
                                                                            [
                                                                              pattern (src/SelectiveExpansion.ml[315,11219+32]..src/SelectiveExpansion.ml[315,11219+37])
                                                                                Tpat_var "param/1401"
                                                                              pattern (src/SelectiveExpansion.ml[315,11219+39]..src/SelectiveExpansion.ml[315,11219+43])
                                                                                Tpat_var "sort/1402"
                                                                            ]
                                                                          expression (src/SelectiveExpansion.ml[316,11267+19]..src/SelectiveExpansion.ml[316,11267+59])
                                                                            Texp_ifthenelse
                                                                            expression (src/SelectiveExpansion.ml[316,11267+22]..src/SelectiveExpansion.ml[316,11267+33])
                                                                              Texp_apply
                                                                              expression (src/SelectiveExpansion.ml[316,11267+27]..src/SelectiveExpansion.ml[316,11267+28])
                                                                                Texp_ident "Stdlib!.="
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/SelectiveExpansion.ml[316,11267+22]..src/SelectiveExpansion.ml[316,11267+26])
                                                                                    Texp_ident "sort/1402"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/SelectiveExpansion.ml[316,11267+29]..src/SelectiveExpansion.ml[316,11267+33])
                                                                                    Texp_ident "Dune__exe!.GroundSort.star"
                                                                              ]
                                                                            expression (src/SelectiveExpansion.ml[316,11267+39]..src/SelectiveExpansion.ml[316,11267+43])
                                                                              Texp_construct "None"
                                                                              []
                                                                            Some
                                                                              expression (src/SelectiveExpansion.ml[316,11267+49]..src/SelectiveExpansion.ml[316,11267+59])
                                                                                Texp_construct "Some"
                                                                                [
                                                                                  expression (src/SelectiveExpansion.ml[316,11267+54]..src/SelectiveExpansion.ml[316,11267+59])
                                                                                    Texp_ident "param/1401"
                                                                                ]
                                                                      ]
                                                                ]
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/SelectiveExpansion.ml[314,11201+14]..src/SelectiveExpansion.ml[314,11201+17])
                                                                    Texp_ident "pss/1399"
                                                              ]
                                                        ]
                                                        expression (src/SelectiveExpansion.ml[318,11343+12]..src/SelectiveExpansion.ml[323,11526+27])
                                                          Texp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (src/SelectiveExpansion.ml[318,11343+16]..src/SelectiveExpansion.ml[318,11343+25])
                                                                Tpat_var "residuals/1404"
                                                              expression (src/SelectiveExpansion.ml[319,11371+14]..src/SelectiveExpansion.ml[321,11449+61])
                                                                Texp_apply
                                                                expression (src/SelectiveExpansion.ml[321,11449+17]..src/SelectiveExpansion.ml[321,11449+61])
                                                                  Texp_apply
                                                                  expression (src/SelectiveExpansion.ml[321,11449+17]..src/SelectiveExpansion.ml[321,11449+25])
                                                                    Texp_ident "Stdlib!.List.map"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/SelectiveExpansion.ml[321,11449+26]..src/SelectiveExpansion.ml[321,11449+61])
                                                                        Texp_function
                                                                        Nolabel
                                                                        [
                                                                          <case>
                                                                            pattern (src/SelectiveExpansion.ml[321,11449+31]..src/SelectiveExpansion.ml[321,11449+41])
                                                                              Tpat_tuple
                                                                              [
                                                                                pattern (src/SelectiveExpansion.ml[321,11449+32]..src/SelectiveExpansion.ml[321,11449+37])
                                                                                  Tpat_var "param/1405"
                                                                                pattern (src/SelectiveExpansion.ml[321,11449+39]..src/SelectiveExpansion.ml[321,11449+40])
                                                                                  Tpat_any
                                                                              ]
                                                                            expression (src/SelectiveExpansion.ml[321,11449+45]..src/SelectiveExpansion.ml[321,11449+60])
                                                                              Texp_apply
                                                                              expression (src/SelectiveExpansion.ml[321,11449+45]..src/SelectiveExpansion.ml[321,11449+54])
                                                                                Texp_ident "recognize/1388"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/SelectiveExpansion.ml[321,11449+55]..src/SelectiveExpansion.ml[321,11449+60])
                                                                                    Texp_ident "param/1405"
                                                                              ]
                                                                        ]
                                                                  ]
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/SelectiveExpansion.ml[319,11371+14]..src/SelectiveExpansion.ml[320,11389+59])
                                                                      Texp_apply
                                                                      expression (src/SelectiveExpansion.ml[320,11389+17]..src/SelectiveExpansion.ml[320,11389+59])
                                                                        Texp_apply
                                                                        expression (src/SelectiveExpansion.ml[320,11389+17]..src/SelectiveExpansion.ml[320,11389+28])
                                                                          Texp_ident "Stdlib!.List.filter"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/SelectiveExpansion.ml[320,11389+29]..src/SelectiveExpansion.ml[320,11389+59])
                                                                              Texp_function
                                                                              Nolabel
                                                                              [
                                                                                <case>
                                                                                  pattern (src/SelectiveExpansion.ml[320,11389+34]..src/SelectiveExpansion.ml[320,11389+43])
                                                                                    Tpat_tuple
                                                                                    [
                                                                                      pattern (src/SelectiveExpansion.ml[320,11389+35]..src/SelectiveExpansion.ml[320,11389+36])
                                                                                        Tpat_any
                                                                                      pattern (src/SelectiveExpansion.ml[320,11389+38]..src/SelectiveExpansion.ml[320,11389+42])
                                                                                        Tpat_var "sort/1407"
                                                                                    ]
                                                                                  expression (src/SelectiveExpansion.ml[320,11389+47]..src/SelectiveExpansion.ml[320,11389+58])
                                                                                    Texp_apply
                                                                                    expression (src/SelectiveExpansion.ml[320,11389+52]..src/SelectiveExpansion.ml[320,11389+53])
                                                                                      Texp_ident "Stdlib!.="
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/SelectiveExpansion.ml[320,11389+47]..src/SelectiveExpansion.ml[320,11389+51])
                                                                                          Texp_ident "sort/1407"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/SelectiveExpansion.ml[320,11389+54]..src/SelectiveExpansion.ml[320,11389+58])
                                                                                          Texp_ident "Dune__exe!.GroundSort.star"
                                                                                    ]
                                                                              ]
                                                                        ]
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/SelectiveExpansion.ml[319,11371+14]..src/SelectiveExpansion.ml[319,11371+17])
                                                                            Texp_ident "pss/1399"
                                                                      ]
                                                                ]
                                                          ]
                                                          expression (src/SelectiveExpansion.ml[323,11526+12]..src/SelectiveExpansion.ml[323,11526+27])
                                                            Texp_tuple
                                                            [
                                                              expression (src/SelectiveExpansion.ml[323,11526+12]..src/SelectiveExpansion.ml[323,11526+16])
                                                                Texp_ident "inst/1400"
                                                              expression (src/SelectiveExpansion.ml[323,11526+18]..src/SelectiveExpansion.ml[323,11526+27])
                                                                Texp_ident "residuals/1404"
                                                            ]
                                            ]
                                      ]
                                      expression (src/SelectiveExpansion.ml[325,11563+6]..src/SelectiveExpansion.ml[328,11647+44])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/SelectiveExpansion.ml[325,11563+10]..src/SelectiveExpansion.ml[325,11563+15])
                                              Tpat_var "label/1409"
                                            expression (src/SelectiveExpansion.ml[325,11563+18]..src/SelectiveExpansion.ml[325,11563+27])
                                              Texp_tuple
                                              [
                                                expression (src/SelectiveExpansion.ml[325,11563+19]..src/SelectiveExpansion.ml[325,11563+20])
                                                  Texp_ident "x/1392"
                                                expression (src/SelectiveExpansion.ml[325,11563+22]..src/SelectiveExpansion.ml[325,11563+26])
                                                  Texp_ident "inst/1393"
                                              ]
                                        ]
                                        expression (src/SelectiveExpansion.ml[326,11594+6]..src/SelectiveExpansion.ml[328,11647+44])
                                          Texp_sequence
                                          expression (src/SelectiveExpansion.ml[326,11594+6]..src/SelectiveExpansion.ml[326,11594+19])
                                            Texp_apply
                                            expression (src/SelectiveExpansion.ml[326,11594+6]..src/SelectiveExpansion.ml[326,11594+13])
                                              Texp_ident "enqueue/951"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/SelectiveExpansion.ml[326,11594+14]..src/SelectiveExpansion.ml[326,11594+19])
                                                  Texp_ident "label/1409"
                                            ]
                                          expression (src/SelectiveExpansion.ml[327,11615+6]..src/SelectiveExpansion.ml[328,11647+44])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/SelectiveExpansion.ml[327,11615+10]..src/SelectiveExpansion.ml[327,11615+13])
                                                  Tpat_var "sym/1410"
                                                expression (src/SelectiveExpansion.ml[327,11615+16]..src/SelectiveExpansion.ml[327,11615+28])
                                                  Texp_apply
                                                  expression (src/SelectiveExpansion.ml[327,11615+16]..src/SelectiveExpansion.ml[327,11615+22])
                                                    Texp_ident "mangle/1274"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/SelectiveExpansion.ml[327,11615+23]..src/SelectiveExpansion.ml[327,11615+28])
                                                        Texp_ident "label/1409"
                                                  ]
                                            ]
                                            expression (src/SelectiveExpansion.ml[328,11647+6]..src/SelectiveExpansion.ml[328,11647+44])
                                              Texp_apply
                                              expression (src/SelectiveExpansion.ml[328,11647+6]..src/SelectiveExpansion.ml[328,11647+20])
                                                Texp_ident "Dune__exe!.Parameters.app"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/SelectiveExpansion.ml[328,11647+21]..src/SelectiveExpansion.ml[328,11647+34])
                                                    Texp_apply
                                                    expression (src/SelectiveExpansion.ml[328,11647+22]..src/SelectiveExpansion.ml[328,11647+29])
                                                      Texp_ident "unknown/433"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/SelectiveExpansion.ml[328,11647+30]..src/SelectiveExpansion.ml[328,11647+33])
                                                          Texp_ident "sym/1410"
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/SelectiveExpansion.ml[328,11647+35]..src/SelectiveExpansion.ml[328,11647+44])
                                                    Texp_ident "residuals/1394"
                                              ]
                            ]
                      ]
                ]
              structure_item (src/SelectiveExpansion.ml[335,11893+0]..src/SelectiveExpansion.ml[337,12000+39])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[335,11893+4]..src/SelectiveExpansion.ml[335,11893+19])
                      Tpat_var "subst_parameter/1411"
                    expression (src/SelectiveExpansion.ml[335,11893+20]..src/SelectiveExpansion.ml[337,12000+39]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[335,11893+20]..src/SelectiveExpansion.ml[335,11893+23])
                            Tpat_var "env/1412"
                          expression (src/SelectiveExpansion.ml[335,11893+24]..src/SelectiveExpansion.ml[337,12000+39]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/SelectiveExpansion.ml[335,11893+24]..src/SelectiveExpansion.ml[335,11893+29])
                                  Tpat_var "param/1413"
                                expression (src/SelectiveExpansion.ml[337,12000+2]..src/SelectiveExpansion.ml[337,12000+39])
                                  Texp_apply
                                  expression (src/SelectiveExpansion.ml[337,12000+2]..src/SelectiveExpansion.ml[337,12000+11])
                                    Texp_ident "recognize/1388"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/SelectiveExpansion.ml[337,12000+12]..src/SelectiveExpansion.ml[337,12000+39])
                                        Texp_apply
                                        expression (src/SelectiveExpansion.ml[337,12000+13]..src/SelectiveExpansion.ml[337,12000+28])
                                          Texp_ident "subst_parameter/919"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/SelectiveExpansion.ml[337,12000+29]..src/SelectiveExpansion.ml[337,12000+32])
                                              Texp_ident "env/1412"
                                          <arg>
                                            Nolabel
                                            expression (src/SelectiveExpansion.ml[337,12000+33]..src/SelectiveExpansion.ml[337,12000+38])
                                              Texp_ident "param/1413"
                                        ]
                                  ]
                            ]
                      ]
                ]
              structure_item (src/SelectiveExpansion.ml[339,12041+0]..src/SelectiveExpansion.ml[341,12128+20])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[339,12041+4]..src/SelectiveExpansion.ml[339,12041+18])
                      Tpat_var "subst_producer/1414"
                    expression (src/SelectiveExpansion.ml[339,12041+19]..src/SelectiveExpansion.ml[341,12128+20]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[339,12041+19]..src/SelectiveExpansion.ml[339,12041+22])
                            Tpat_var "env/1416"
                          expression (src/SelectiveExpansion.ml[339,12041+23]..src/SelectiveExpansion.ml[341,12128+20]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/SelectiveExpansion.ml[339,12041+23]..src/SelectiveExpansion.ml[339,12041+41])
                                  Tpat_tuple
                                  [
                                    pattern (src/SelectiveExpansion.ml[339,12041+24]..src/SelectiveExpansion.ml[339,12041+26])
                                      Tpat_var "id/1417"
                                    pattern (src/SelectiveExpansion.ml[339,12041+28]..src/SelectiveExpansion.ml[339,12041+33])
                                      Tpat_var "param/1418"
                                    pattern (src/SelectiveExpansion.ml[339,12041+35]..src/SelectiveExpansion.ml[339,12041+40])
                                      Tpat_var "attrs/1419"
                                  ]
                                expression (src/SelectiveExpansion.ml[340,12085+2]..src/SelectiveExpansion.ml[341,12128+20])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/SelectiveExpansion.ml[340,12085+6]..src/SelectiveExpansion.ml[340,12085+11])
                                        Tpat_var "param/1420"
                                      expression (src/SelectiveExpansion.ml[340,12085+14]..src/SelectiveExpansion.ml[340,12085+39])
                                        Texp_apply
                                        expression (src/SelectiveExpansion.ml[340,12085+14]..src/SelectiveExpansion.ml[340,12085+29])
                                          Texp_ident "subst_parameter/1411"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/SelectiveExpansion.ml[340,12085+30]..src/SelectiveExpansion.ml[340,12085+33])
                                              Texp_ident "env/1416"
                                          <arg>
                                            Nolabel
                                            expression (src/SelectiveExpansion.ml[340,12085+34]..src/SelectiveExpansion.ml[340,12085+39])
                                              Texp_ident "param/1418"
                                        ]
                                  ]
                                  expression (src/SelectiveExpansion.ml[341,12128+2]..src/SelectiveExpansion.ml[341,12128+20])
                                    Texp_tuple
                                    [
                                      expression (src/SelectiveExpansion.ml[341,12128+3]..src/SelectiveExpansion.ml[341,12128+5])
                                        Texp_ident "id/1417"
                                      expression (src/SelectiveExpansion.ml[341,12128+7]..src/SelectiveExpansion.ml[341,12128+12])
                                        Texp_ident "param/1420"
                                      expression (src/SelectiveExpansion.ml[341,12128+14]..src/SelectiveExpansion.ml[341,12128+19])
                                        Texp_ident "attrs/1419"
                                    ]
                            ]
                      ]
                ]
              structure_item (src/SelectiveExpansion.ml[343,12150+0]..src/SelectiveExpansion.ml[344,12186+41])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[343,12150+4]..src/SelectiveExpansion.ml[343,12150+19])
                      Tpat_var "subst_producers/1422"
                    expression (src/SelectiveExpansion.ml[343,12150+20]..src/SelectiveExpansion.ml[344,12186+41]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[343,12150+20]..src/SelectiveExpansion.ml[343,12150+23])
                            Tpat_var "env/1424"
                          expression (src/SelectiveExpansion.ml[343,12150+24]..src/SelectiveExpansion.ml[344,12186+41]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/SelectiveExpansion.ml[343,12150+24]..src/SelectiveExpansion.ml[343,12150+33])
                                  Tpat_var "producers/1425"
                                expression (src/SelectiveExpansion.ml[344,12186+2]..src/SelectiveExpansion.ml[344,12186+41])
                                  Texp_apply
                                  expression (src/SelectiveExpansion.ml[344,12186+2]..src/SelectiveExpansion.ml[344,12186+10])
                                    Texp_ident "Stdlib!.List.map"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/SelectiveExpansion.ml[344,12186+11]..src/SelectiveExpansion.ml[344,12186+31])
                                        Texp_apply
                                        expression (src/SelectiveExpansion.ml[344,12186+12]..src/SelectiveExpansion.ml[344,12186+26])
                                          Texp_ident "subst_producer/1414"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/SelectiveExpansion.ml[344,12186+27]..src/SelectiveExpansion.ml[344,12186+30])
                                              Texp_ident "env/1424"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/SelectiveExpansion.ml[344,12186+32]..src/SelectiveExpansion.ml[344,12186+41])
                                        Texp_ident "producers/1425"
                                  ]
                            ]
                      ]
                ]
              structure_item (src/SelectiveExpansion.ml[346,12229+0]..src/SelectiveExpansion.ml[347,12259+72])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[346,12229+4]..src/SelectiveExpansion.ml[346,12229+16])
                      Tpat_var "subst_branch/1426"
                    expression (src/SelectiveExpansion.ml[346,12229+17]..src/SelectiveExpansion.ml[347,12259+72]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[346,12229+17]..src/SelectiveExpansion.ml[346,12229+20])
                            Tpat_var "env/1428"
                          expression (src/SelectiveExpansion.ml[346,12229+21]..src/SelectiveExpansion.ml[347,12259+72]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/SelectiveExpansion.ml[346,12229+21]..src/SelectiveExpansion.ml[346,12229+27])
                                  Tpat_var "branch/1429"
                                expression (src/SelectiveExpansion.ml[347,12259+2]..src/SelectiveExpansion.ml[347,12259+72])
                                  Texp_record
                                    fields =
                                      [
                                        <kept>                                        "pr_producers"
                                          expression (src/SelectiveExpansion.ml[347,12259+31]..src/SelectiveExpansion.ml[347,12259+70])
                                            Texp_apply
                                            expression (src/SelectiveExpansion.ml[347,12259+31]..src/SelectiveExpansion.ml[347,12259+46])
                                              Texp_ident "subst_producers/1422"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/SelectiveExpansion.ml[347,12259+47]..src/SelectiveExpansion.ml[347,12259+50])
                                                  Texp_ident "env/1428"
                                              <arg>
                                                Nolabel
                                                expression (src/SelectiveExpansion.ml[347,12259+51]..src/SelectiveExpansion.ml[347,12259+70])
                                                  Texp_field
                                                  expression (src/SelectiveExpansion.ml[347,12259+51]..src/SelectiveExpansion.ml[347,12259+57])
                                                    Texp_ident "branch/1429"
                                                  "pr_producers"
                                            ]
                                        <kept>                                        <kept>                                        <kept>                                      ]
                                    representation =
                                      Record_regular
                                    extended_expression =
                                      Some
                                        expression (src/SelectiveExpansion.ml[347,12259+4]..src/SelectiveExpansion.ml[347,12259+10])
                                          Texp_ident "branch/1429"
                            ]
                      ]
                ]
              structure_item (src/SelectiveExpansion.ml[349,12333+0]..src/SelectiveExpansion.ml[350,12367+38])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[349,12333+4]..src/SelectiveExpansion.ml[349,12333+18])
                      Tpat_var "subst_branches/1430"
                    expression (src/SelectiveExpansion.ml[349,12333+19]..src/SelectiveExpansion.ml[350,12367+38]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[349,12333+19]..src/SelectiveExpansion.ml[349,12333+22])
                            Tpat_var "env/1432"
                          expression (src/SelectiveExpansion.ml[349,12333+23]..src/SelectiveExpansion.ml[350,12367+38]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/SelectiveExpansion.ml[349,12333+23]..src/SelectiveExpansion.ml[349,12333+31])
                                  Tpat_var "branches/1433"
                                expression (src/SelectiveExpansion.ml[350,12367+2]..src/SelectiveExpansion.ml[350,12367+38])
                                  Texp_apply
                                  expression (src/SelectiveExpansion.ml[350,12367+2]..src/SelectiveExpansion.ml[350,12367+10])
                                    Texp_ident "Stdlib!.List.map"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/SelectiveExpansion.ml[350,12367+11]..src/SelectiveExpansion.ml[350,12367+29])
                                        Texp_apply
                                        expression (src/SelectiveExpansion.ml[350,12367+12]..src/SelectiveExpansion.ml[350,12367+24])
                                          Texp_ident "subst_branch/1426"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/SelectiveExpansion.ml[350,12367+25]..src/SelectiveExpansion.ml[350,12367+28])
                                              Texp_ident "env/1432"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/SelectiveExpansion.ml[350,12367+30]..src/SelectiveExpansion.ml[350,12367+38])
                                        Texp_ident "branches/1433"
                                  ]
                            ]
                      ]
                ]
              structure_item (src/SelectiveExpansion.ml[356,12553+0]..src/SelectiveExpansion.ml[359,12616+60])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[356,12553+4]..src/SelectiveExpansion.ml[356,12553+11])
                      extra
                        Tpat_extra_constraint
                        core_type (src/SelectiveExpansion.ml[356,12553+14]..src/SelectiveExpansion.ml[356,12553+30])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/SelectiveExpansion.ml[356,12553+14]..src/SelectiveExpansion.ml[356,12553+20])
                            Ttyp_constr "string/15!"
                            []
                          core_type (src/SelectiveExpansion.ml[356,12553+24]..src/SelectiveExpansion.ml[356,12553+30])
                            Ttyp_constr "string/15!"
                            []
                      Tpat_alias "freshen/1434"
                      pattern (src/SelectiveExpansion.ml[356,12553+4]..src/SelectiveExpansion.ml[356,12553+11])
                        Tpat_any
                    expression (src/SelectiveExpansion.ml[357,12586+2]..src/SelectiveExpansion.ml[359,12616+60])
                      extra
                        Texp_constraint
                        core_type (src/SelectiveExpansion.ml[356,12553+14]..src/SelectiveExpansion.ml[356,12553+30])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/SelectiveExpansion.ml[356,12553+14]..src/SelectiveExpansion.ml[356,12553+20])
                            Ttyp_constr "string/15!"
                            []
                          core_type (src/SelectiveExpansion.ml[356,12553+24]..src/SelectiveExpansion.ml[356,12553+30])
                            Ttyp_constr "string/15!"
                            []
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/SelectiveExpansion.ml[357,12586+6]..src/SelectiveExpansion.ml[357,12586+7])
                            Tpat_var "c/1435"
                          expression (src/SelectiveExpansion.ml[357,12586+10]..src/SelectiveExpansion.ml[357,12586+15])
                            Texp_apply
                            expression (src/SelectiveExpansion.ml[357,12586+10]..src/SelectiveExpansion.ml[357,12586+13])
                              Texp_ident "Stdlib!.ref"
                            [
                              <arg>
                                Nolabel
                                expression (src/SelectiveExpansion.ml[357,12586+14]..src/SelectiveExpansion.ml[357,12586+15])
                                  Texp_constant Const_int 0
                            ]
                      ]
                      expression (src/SelectiveExpansion.ml[358,12605+2]..src/SelectiveExpansion.ml[359,12616+60])
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/SelectiveExpansion.ml[358,12605+6]..src/SelectiveExpansion.ml[358,12605+7])
                              Tpat_var "x/1436"
                            expression (src/SelectiveExpansion.ml[359,12616+4]..src/SelectiveExpansion.ml[359,12616+60])
                              Texp_apply
                              expression (src/SelectiveExpansion.ml[359,12616+4]..src/SelectiveExpansion.ml[359,12616+18])
                                Texp_ident "Stdlib!.Printf.sprintf"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/SelectiveExpansion.ml[359,12616+19]..src/SelectiveExpansion.ml[359,12616+35])
                                    Texp_construct "CamlinternalFormatBasics.Format"
                                    [
                                      expression (src/SelectiveExpansion.ml[359,12616+19]..src/SelectiveExpansion.ml[359,12616+35]) ghost
                                        Texp_construct "CamlinternalFormatBasics.String"
                                        [
                                          expression (src/SelectiveExpansion.ml[359,12616+19]..src/SelectiveExpansion.ml[359,12616+35]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                            []
                                          expression (src/SelectiveExpansion.ml[359,12616+19]..src/SelectiveExpansion.ml[359,12616+35]) ghost
                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                            [
                                              expression (src/SelectiveExpansion.ml[359,12616+19]..src/SelectiveExpansion.ml[359,12616+35]) ghost
                                                Texp_constant Const_string("__menhir__",(src/SelectiveExpansion.ml[359,12616+19]..src/SelectiveExpansion.ml[359,12616+35]) ghost,None)
                                              expression (src/SelectiveExpansion.ml[359,12616+19]..src/SelectiveExpansion.ml[359,12616+35]) ghost
                                                Texp_construct "CamlinternalFormatBasics.Int"
                                                [
                                                  expression (src/SelectiveExpansion.ml[359,12616+19]..src/SelectiveExpansion.ml[359,12616+35]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.Int_d"
                                                    []
                                                  expression (src/SelectiveExpansion.ml[359,12616+19]..src/SelectiveExpansion.ml[359,12616+35]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                    []
                                                  expression (src/SelectiveExpansion.ml[359,12616+19]..src/SelectiveExpansion.ml[359,12616+35]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.No_precision"
                                                    []
                                                  expression (src/SelectiveExpansion.ml[359,12616+19]..src/SelectiveExpansion.ml[359,12616+35]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                    []
                                                ]
                                            ]
                                        ]
                                      expression (src/SelectiveExpansion.ml[359,12616+19]..src/SelectiveExpansion.ml[359,12616+35]) ghost
                                        Texp_constant Const_string("%s__menhir__%d",(src/SelectiveExpansion.ml[359,12616+19]..src/SelectiveExpansion.ml[359,12616+35]) ghost,None)
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/SelectiveExpansion.ml[359,12616+36]..src/SelectiveExpansion.ml[359,12616+37])
                                    Texp_ident "x/1436"
                                <arg>
                                  Nolabel
                                  expression (src/SelectiveExpansion.ml[359,12616+38]..src/SelectiveExpansion.ml[359,12616+60])
                                    Texp_apply
                                    expression (src/SelectiveExpansion.ml[359,12616+39]..src/SelectiveExpansion.ml[359,12616+57])
                                      Texp_ident "Dune__exe!.Misc.postincrement"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/SelectiveExpansion.ml[359,12616+58]..src/SelectiveExpansion.ml[359,12616+59])
                                          Texp_ident "c/1435"
                                    ]
                              ]
                        ]
                ]
              structure_item (src/SelectiveExpansion.ml[368,13075+0]..src/SelectiveExpansion.ml[392,14140+16])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[368,13075+4]..src/SelectiveExpansion.ml[368,13075+21])
                      Tpat_var "instantiation_env/1437"
                    expression (src/SelectiveExpansion.ml[368,13075+22]..src/SelectiveExpansion.ml[392,14140+16]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[368,13075+22]..src/SelectiveExpansion.ml[368,13075+29])
                            Tpat_var "formals/1439"
                          expression (src/SelectiveExpansion.ml[368,13075+30]..src/SelectiveExpansion.ml[392,14140+16]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/SelectiveExpansion.ml[368,13075+30]..src/SelectiveExpansion.ml[368,13075+34])
                                  Tpat_var "inst/1440"
                                expression (src/SelectiveExpansion.ml[369,13132+2]..src/SelectiveExpansion.ml[392,14140+16])
                                  extra
                                    Texp_constraint
                                    core_type (src/SelectiveExpansion.ml[368,13075+37]..src/SelectiveExpansion.ml[368,13075+54])
                                      Ttyp_tuple
                                      [
                                        core_type (src/SelectiveExpansion.ml[368,13075+37]..src/SelectiveExpansion.ml[368,13075+40])
                                          Ttyp_constr "env/778"
                                          []
                                        core_type (src/SelectiveExpansion.ml[368,13075+43]..src/SelectiveExpansion.ml[368,13075+54])
                                          Ttyp_constr "list/9!"
                                          [
                                            core_type (src/SelectiveExpansion.ml[368,13075+43]..src/SelectiveExpansion.ml[368,13075+49])
                                              Ttyp_constr "Dune__exe!.Syntax.symbol"
                                              []
                                          ]
                                      ]
                                  Texp_sequence
                                  expression (src/SelectiveExpansion.ml[369,13132+2]..src/SelectiveExpansion.ml[369,13132+49])
                                    Texp_assert                                    expression (src/SelectiveExpansion.ml[369,13132+9]..src/SelectiveExpansion.ml[369,13132+49])
                                      Texp_apply
                                      expression (src/SelectiveExpansion.ml[369,13132+30]..src/SelectiveExpansion.ml[369,13132+31])
                                        Texp_ident "Stdlib!.="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/SelectiveExpansion.ml[369,13132+10]..src/SelectiveExpansion.ml[369,13132+29])
                                            Texp_apply
                                            expression (src/SelectiveExpansion.ml[369,13132+10]..src/SelectiveExpansion.ml[369,13132+21])
                                              Texp_ident "Stdlib!.List.length"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/SelectiveExpansion.ml[369,13132+22]..src/SelectiveExpansion.ml[369,13132+29])
                                                  Texp_ident "formals/1439"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/SelectiveExpansion.ml[369,13132+32]..src/SelectiveExpansion.ml[369,13132+48])
                                            Texp_apply
                                            expression (src/SelectiveExpansion.ml[369,13132+32]..src/SelectiveExpansion.ml[369,13132+43])
                                              Texp_ident "Stdlib!.List.length"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/SelectiveExpansion.ml[369,13132+44]..src/SelectiveExpansion.ml[369,13132+48])
                                                  Texp_ident "inst/1440"
                                            ]
                                      ]
                                  expression (src/SelectiveExpansion.ml[370,13183+2]..src/SelectiveExpansion.ml[392,14140+16])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/SelectiveExpansion.ml[370,13183+6]..src/SelectiveExpansion.ml[370,13183+20])
                                          Tpat_tuple
                                          [
                                            pattern (src/SelectiveExpansion.ml[370,13183+6]..src/SelectiveExpansion.ml[370,13183+9])
                                              Tpat_var "env/1441"
                                            pattern (src/SelectiveExpansion.ml[370,13183+11]..src/SelectiveExpansion.ml[370,13183+20])
                                              Tpat_var "residuals/1442"
                                          ]
                                        expression (src/SelectiveExpansion.ml[371,13206+4]..src/SelectiveExpansion.ml[390,14100+34])
                                          Texp_apply
                                          expression (src/SelectiveExpansion.ml[371,13206+4]..src/SelectiveExpansion.ml[371,13206+20])
                                            Texp_ident "Stdlib!.List.fold_right2"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/SelectiveExpansion.ml[371,13206+21]..src/SelectiveExpansion.ml[390,14100+5])
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (src/SelectiveExpansion.ml[371,13206+26]..src/SelectiveExpansion.ml[371,13206+32])
                                                      Tpat_var "formal/1443"
                                                    expression (src/SelectiveExpansion.ml[371,13206+33]..src/SelectiveExpansion.ml[389,14058+41]) ghost
                                                      Texp_function
                                                      Nolabel
                                                      [
                                                        <case>
                                                          pattern (src/SelectiveExpansion.ml[371,13206+33]..src/SelectiveExpansion.ml[371,13206+35])
                                                            Tpat_var "po/1444"
                                                          expression (src/SelectiveExpansion.ml[371,13206+36]..src/SelectiveExpansion.ml[389,14058+41]) ghost
                                                            Texp_function
                                                            Nolabel
                                                            [
                                                              <case>
                                                                pattern (src/SelectiveExpansion.ml[371,13206+36]..src/SelectiveExpansion.ml[371,13206+52])
                                                                  Tpat_tuple
                                                                  [
                                                                    pattern (src/SelectiveExpansion.ml[371,13206+37]..src/SelectiveExpansion.ml[371,13206+40])
                                                                      Tpat_var "env/1445"
                                                                    pattern (src/SelectiveExpansion.ml[371,13206+42]..src/SelectiveExpansion.ml[371,13206+51])
                                                                      Tpat_var "residuals/1446"
                                                                  ]
                                                                expression (src/SelectiveExpansion.ml[372,13262+6]..src/SelectiveExpansion.ml[389,14058+41])
                                                                  Texp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (src/SelectiveExpansion.ml[372,13262+10]..src/SelectiveExpansion.ml[372,13262+26])
                                                                        Tpat_tuple
                                                                        [
                                                                          pattern (src/SelectiveExpansion.ml[372,13262+10]..src/SelectiveExpansion.ml[372,13262+15])
                                                                            Tpat_var "param/1447"
                                                                          pattern (src/SelectiveExpansion.ml[372,13262+17]..src/SelectiveExpansion.ml[372,13262+26])
                                                                            Tpat_var "residuals/1448"
                                                                        ]
                                                                      expression (src/SelectiveExpansion.ml[373,13291+8]..src/SelectiveExpansion.ml[387,14017+31])
                                                                        Texp_match
                                                                        expression (src/SelectiveExpansion.ml[373,13291+14]..src/SelectiveExpansion.ml[373,13291+16])
                                                                          Texp_ident "po/1444"
                                                                        [
                                                                          <case>
                                                                            pattern (src/SelectiveExpansion.ml[374,13313+10]..src/SelectiveExpansion.ml[374,13313+20])
                                                                              Tpat_value
                                                                              pattern (src/SelectiveExpansion.ml[374,13313+10]..src/SelectiveExpansion.ml[374,13313+20])
                                                                                Tpat_construct "Some"
                                                                                [
                                                                                  pattern (src/SelectiveExpansion.ml[374,13313+15]..src/SelectiveExpansion.ml[374,13313+20])
                                                                                    Tpat_var "param/1449"
                                                                                ]
                                                                                None
                                                                            expression (src/SelectiveExpansion.ml[376,13394+12]..src/SelectiveExpansion.ml[376,13394+28])
                                                                              Texp_tuple
                                                                              [
                                                                                expression (src/SelectiveExpansion.ml[376,13394+12]..src/SelectiveExpansion.ml[376,13394+17])
                                                                                  Texp_ident "param/1449"
                                                                                expression (src/SelectiveExpansion.ml[376,13394+19]..src/SelectiveExpansion.ml[376,13394+28])
                                                                                  Texp_ident "residuals/1446"
                                                                              ]
                                                                          <case>
                                                                            pattern (src/SelectiveExpansion.ml[377,13423+10]..src/SelectiveExpansion.ml[377,13423+14])
                                                                              Tpat_value
                                                                              pattern (src/SelectiveExpansion.ml[377,13423+10]..src/SelectiveExpansion.ml[377,13423+14])
                                                                                Tpat_construct "None"
                                                                                []
                                                                                None
                                                                            expression (src/SelectiveExpansion.ml[385,13931+12]..src/SelectiveExpansion.ml[387,14017+31])
                                                                              Texp_let Nonrec
                                                                              [
                                                                                <def>
                                                                                  pattern (src/SelectiveExpansion.ml[385,13931+16]..src/SelectiveExpansion.ml[385,13931+22])
                                                                                    Tpat_var "formal/1450"
                                                                                  expression (src/SelectiveExpansion.ml[385,13931+25]..src/SelectiveExpansion.ml[385,13931+39])
                                                                                    Texp_apply
                                                                                    expression (src/SelectiveExpansion.ml[385,13931+25]..src/SelectiveExpansion.ml[385,13931+32])
                                                                                      Texp_ident "freshen/1434"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/SelectiveExpansion.ml[385,13931+33]..src/SelectiveExpansion.ml[385,13931+39])
                                                                                          Texp_ident "formal/1443"
                                                                                    ]
                                                                              ]
                                                                              expression (src/SelectiveExpansion.ml[386,13974+12]..src/SelectiveExpansion.ml[387,14017+31])
                                                                                Texp_tuple
                                                                                [
                                                                                  expression (src/SelectiveExpansion.ml[386,13974+12]..src/SelectiveExpansion.ml[386,13974+41])
                                                                                    Texp_construct "ParameterVar"
                                                                                    [
                                                                                      expression (src/SelectiveExpansion.ml[386,13974+25]..src/SelectiveExpansion.ml[386,13974+41])
                                                                                        Texp_apply
                                                                                        expression (src/SelectiveExpansion.ml[386,13974+26]..src/SelectiveExpansion.ml[386,13974+33])
                                                                                          Texp_ident "unknown/433"
                                                                                        [
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/SelectiveExpansion.ml[386,13974+34]..src/SelectiveExpansion.ml[386,13974+40])
                                                                                              Texp_ident "formal/1450"
                                                                                        ]
                                                                                    ]
                                                                                  expression (src/SelectiveExpansion.ml[387,14017+12]..src/SelectiveExpansion.ml[387,14017+31])
                                                                                    Texp_construct "::"
                                                                                    [
                                                                                      expression (src/SelectiveExpansion.ml[387,14017+12]..src/SelectiveExpansion.ml[387,14017+18])
                                                                                        Texp_ident "formal/1450"
                                                                                      expression (src/SelectiveExpansion.ml[387,14017+22]..src/SelectiveExpansion.ml[387,14017+31])
                                                                                        Texp_ident "residuals/1446"
                                                                                    ]
                                                                                ]
                                                                        ]
                                                                  ]
                                                                  expression (src/SelectiveExpansion.ml[389,14058+6]..src/SelectiveExpansion.ml[389,14058+41])
                                                                    Texp_tuple
                                                                    [
                                                                      expression (src/SelectiveExpansion.ml[389,14058+6]..src/SelectiveExpansion.ml[389,14058+30])
                                                                        Texp_apply
                                                                        expression (src/SelectiveExpansion.ml[389,14058+6]..src/SelectiveExpansion.ml[389,14058+13])
                                                                          Texp_ident "Env/777.add"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/SelectiveExpansion.ml[389,14058+14]..src/SelectiveExpansion.ml[389,14058+20])
                                                                              Texp_ident "formal/1443"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/SelectiveExpansion.ml[389,14058+21]..src/SelectiveExpansion.ml[389,14058+26])
                                                                              Texp_ident "param/1447"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/SelectiveExpansion.ml[389,14058+27]..src/SelectiveExpansion.ml[389,14058+30])
                                                                              Texp_ident "env/1445"
                                                                        ]
                                                                      expression (src/SelectiveExpansion.ml[389,14058+32]..src/SelectiveExpansion.ml[389,14058+41])
                                                                        Texp_ident "residuals/1448"
                                                                    ]
                                                            ]
                                                      ]
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/SelectiveExpansion.ml[390,14100+6]..src/SelectiveExpansion.ml[390,14100+13])
                                                Texp_ident "formals/1439"
                                            <arg>
                                              Nolabel
                                              expression (src/SelectiveExpansion.ml[390,14100+14]..src/SelectiveExpansion.ml[390,14100+18])
                                                Texp_ident "inst/1440"
                                            <arg>
                                              Nolabel
                                              expression (src/SelectiveExpansion.ml[390,14100+19]..src/SelectiveExpansion.ml[390,14100+34])
                                                Texp_tuple
                                                [
                                                  expression (src/SelectiveExpansion.ml[390,14100+20]..src/SelectiveExpansion.ml[390,14100+29])
                                                    Texp_ident "Env/777.empty"
                                                  expression (src/SelectiveExpansion.ml[390,14100+31]..src/SelectiveExpansion.ml[390,14100+33])
                                                    Texp_construct "[]"
                                                    []
                                                ]
                                          ]
                                    ]
                                    expression (src/SelectiveExpansion.ml[392,14140+2]..src/SelectiveExpansion.ml[392,14140+16])
                                      Texp_tuple
                                      [
                                        expression (src/SelectiveExpansion.ml[392,14140+2]..src/SelectiveExpansion.ml[392,14140+5])
                                          Texp_ident "env/1441"
                                        expression (src/SelectiveExpansion.ml[392,14140+7]..src/SelectiveExpansion.ml[392,14140+16])
                                          Texp_ident "residuals/1442"
                                      ]
                            ]
                      ]
                ]
              structure_item (src/SelectiveExpansion.ml[410,15105+0]..src/SelectiveExpansion.ml[426,15611+5])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[410,15105+4]..src/SelectiveExpansion.ml[410,15105+9])
                      Tpat_var "visit/1452"
                    expression (src/SelectiveExpansion.ml[410,15105+10]..src/SelectiveExpansion.ml[426,15611+5]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[410,15105+10]..src/SelectiveExpansion.ml[410,15105+15])
                            Tpat_var "label/1454"
                          expression (src/SelectiveExpansion.ml[411,15123+2]..src/SelectiveExpansion.ml[426,15611+5])
                            Texp_ifthenelse
                            expression (src/SelectiveExpansion.ml[411,15123+5]..src/SelectiveExpansion.ml[411,15123+23])
                              Texp_apply
                              expression (src/SelectiveExpansion.ml[411,15123+5]..src/SelectiveExpansion.ml[411,15123+8])
                                Texp_ident "Stdlib!.not"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/SelectiveExpansion.ml[411,15123+9]..src/SelectiveExpansion.ml[411,15123+23])
                                    Texp_apply
                                    expression (src/SelectiveExpansion.ml[411,15123+10]..src/SelectiveExpansion.ml[411,15123+16])
                                      Texp_ident "marked/1003"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/SelectiveExpansion.ml[411,15123+17]..src/SelectiveExpansion.ml[411,15123+22])
                                          Texp_ident "label/1454"
                                    ]
                              ]
                            expression (src/SelectiveExpansion.ml[411,15123+29]..src/SelectiveExpansion.ml[426,15611+5])
                              Texp_sequence
                              expression (src/SelectiveExpansion.ml[412,15158+4]..src/SelectiveExpansion.ml[412,15158+14])
                                Texp_apply
                                expression (src/SelectiveExpansion.ml[412,15158+4]..src/SelectiveExpansion.ml[412,15158+8])
                                  Texp_ident "mark/1002"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/SelectiveExpansion.ml[412,15158+9]..src/SelectiveExpansion.ml[412,15158+14])
                                      Texp_ident "label/1454"
                                ]
                              expression (src/SelectiveExpansion.ml[413,15174+4]..src/SelectiveExpansion.ml[425,15605+5])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (src/SelectiveExpansion.ml[413,15174+8]..src/SelectiveExpansion.ml[413,15174+18])
                                      Tpat_tuple
                                      [
                                        pattern (src/SelectiveExpansion.ml[413,15174+9]..src/SelectiveExpansion.ml[413,15174+11])
                                          Tpat_var "nt/1455"
                                        pattern (src/SelectiveExpansion.ml[413,15174+13]..src/SelectiveExpansion.ml[413,15174+17])
                                          Tpat_var "inst/1456"
                                      ]
                                    expression (src/SelectiveExpansion.ml[413,15174+21]..src/SelectiveExpansion.ml[413,15174+26])
                                      Texp_ident "label/1454"
                                ]
                                expression (src/SelectiveExpansion.ml[414,15204+4]..src/SelectiveExpansion.ml[425,15605+5])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/SelectiveExpansion.ml[414,15204+8]..src/SelectiveExpansion.ml[414,15204+12])
                                        Tpat_var "rule/1457"
                                      expression (src/SelectiveExpansion.ml[414,15204+15]..src/SelectiveExpansion.ml[414,15204+42])
                                        Texp_apply
                                        expression (src/SelectiveExpansion.ml[414,15204+15]..src/SelectiveExpansion.ml[414,15204+29])
                                          Texp_ident "Dune__exe!.StringMap.find"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/SelectiveExpansion.ml[414,15204+30]..src/SelectiveExpansion.ml[414,15204+32])
                                              Texp_ident "nt/1455"
                                          <arg>
                                            Nolabel
                                            expression (src/SelectiveExpansion.ml[414,15204+33]..src/SelectiveExpansion.ml[414,15204+42])
                                              Texp_field
                                              expression (src/SelectiveExpansion.ml[414,15204+33]..src/SelectiveExpansion.ml[414,15204+34])
                                                Texp_ident "G/933.g"
                                              "p_rules"
                                        ]
                                  ]
                                  expression (src/SelectiveExpansion.ml[415,15250+4]..src/SelectiveExpansion.ml[425,15605+5])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/SelectiveExpansion.ml[415,15250+8]..src/SelectiveExpansion.ml[415,15250+15])
                                          Tpat_var "formals/1458"
                                        expression (src/SelectiveExpansion.ml[415,15250+18]..src/SelectiveExpansion.ml[415,15250+36])
                                          Texp_field
                                          expression (src/SelectiveExpansion.ml[415,15250+18]..src/SelectiveExpansion.ml[415,15250+22])
                                            Texp_ident "rule/1457"
                                          "pr_parameters"
                                    ]
                                    expression (src/SelectiveExpansion.ml[416,15290+4]..src/SelectiveExpansion.ml[425,15605+5])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/SelectiveExpansion.ml[416,15290+8]..src/SelectiveExpansion.ml[416,15290+22])
                                            Tpat_tuple
                                            [
                                              pattern (src/SelectiveExpansion.ml[416,15290+8]..src/SelectiveExpansion.ml[416,15290+11])
                                                Tpat_var "env/1459"
                                              pattern (src/SelectiveExpansion.ml[416,15290+13]..src/SelectiveExpansion.ml[416,15290+22])
                                                Tpat_var "residuals/1460"
                                            ]
                                          expression (src/SelectiveExpansion.ml[416,15290+25]..src/SelectiveExpansion.ml[416,15290+55])
                                            Texp_apply
                                            expression (src/SelectiveExpansion.ml[416,15290+25]..src/SelectiveExpansion.ml[416,15290+42])
                                              Texp_ident "instantiation_env/1437"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/SelectiveExpansion.ml[416,15290+43]..src/SelectiveExpansion.ml[416,15290+50])
                                                  Texp_ident "formals/1458"
                                              <arg>
                                                Nolabel
                                                expression (src/SelectiveExpansion.ml[416,15290+51]..src/SelectiveExpansion.ml[416,15290+55])
                                                  Texp_ident "inst/1456"
                                            ]
                                      ]
                                      expression (src/SelectiveExpansion.ml[417,15349+4]..src/SelectiveExpansion.ml[425,15605+5])
                                        Texp_apply
                                        expression (src/SelectiveExpansion.ml[417,15349+4]..src/SelectiveExpansion.ml[417,15349+8])
                                          Texp_ident "emit/1152"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/SelectiveExpansion.ml[417,15349+9]..src/SelectiveExpansion.ml[425,15605+5])
                                              Texp_record
                                                fields =
                                                  [
                                                    <kept>                                                    <kept>                                                    "pr_nt"
                                                      expression (src/SelectiveExpansion.ml[419,15376+14]..src/SelectiveExpansion.ml[419,15376+26])
                                                        Texp_apply
                                                        expression (src/SelectiveExpansion.ml[419,15376+14]..src/SelectiveExpansion.ml[419,15376+20])
                                                          Texp_ident "mangle/1274"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/SelectiveExpansion.ml[419,15376+21]..src/SelectiveExpansion.ml[419,15376+26])
                                                              Texp_ident "label/1454"
                                                        ]
                                                    <kept>                                                    "pr_attributes"
                                                      expression (src/SelectiveExpansion.ml[423,15516+8]..src/SelectiveExpansion.ml[424,15578+26])
                                                        Texp_apply
                                                        expression (src/SelectiveExpansion.ml[423,15516+60]..src/SelectiveExpansion.ml[423,15516+61])
                                                          Texp_ident "Stdlib!.@"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/SelectiveExpansion.ml[423,15516+8]..src/SelectiveExpansion.ml[423,15516+59])
                                                              Texp_ifthenelse
                                                              expression (src/SelectiveExpansion.ml[423,15516+12]..src/SelectiveExpansion.ml[423,15516+24])
                                                                Texp_apply
                                                                expression (src/SelectiveExpansion.ml[423,15516+20]..src/SelectiveExpansion.ml[423,15516+21])
                                                                  Texp_ident "Stdlib!.="
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/SelectiveExpansion.ml[423,15516+12]..src/SelectiveExpansion.ml[423,15516+19])
                                                                      Texp_ident "formals/1458"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/SelectiveExpansion.ml[423,15516+22]..src/SelectiveExpansion.ml[423,15516+24])
                                                                      Texp_construct "[]"
                                                                      []
                                                                ]
                                                              expression (src/SelectiveExpansion.ml[423,15516+30]..src/SelectiveExpansion.ml[423,15516+32])
                                                                Texp_construct "[]"
                                                                []
                                                              Some
                                                                expression (src/SelectiveExpansion.ml[423,15516+38]..src/SelectiveExpansion.ml[423,15516+58])
                                                                  Texp_apply
                                                                  expression (src/SelectiveExpansion.ml[423,15516+38]..src/SelectiveExpansion.ml[423,15516+55])
                                                                    Texp_ident "global_attributes/944"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/SelectiveExpansion.ml[423,15516+56]..src/SelectiveExpansion.ml[423,15516+58])
                                                                        Texp_ident "nt/1455"
                                                                  ]
                                                          <arg>
                                                            Nolabel
                                                            expression (src/SelectiveExpansion.ml[424,15578+8]..src/SelectiveExpansion.ml[424,15578+26])
                                                              Texp_field
                                                              expression (src/SelectiveExpansion.ml[424,15578+8]..src/SelectiveExpansion.ml[424,15578+12])
                                                                Texp_ident "rule/1457"
                                                              "pr_attributes"
                                                        ]
                                                    "pr_parameters"
                                                      expression (src/SelectiveExpansion.ml[420,15404+22]..src/SelectiveExpansion.ml[420,15404+31])
                                                        Texp_ident "residuals/1460"
                                                    "pr_branches"
                                                      expression (src/SelectiveExpansion.ml[421,15437+20]..src/SelectiveExpansion.ml[421,15437+55])
                                                        Texp_apply
                                                        expression (src/SelectiveExpansion.ml[421,15437+20]..src/SelectiveExpansion.ml[421,15437+34])
                                                          Texp_ident "subst_branches/1430"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/SelectiveExpansion.ml[421,15437+35]..src/SelectiveExpansion.ml[421,15437+38])
                                                              Texp_ident "env/1459"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/SelectiveExpansion.ml[421,15437+39]..src/SelectiveExpansion.ml[421,15437+55])
                                                              Texp_field
                                                              expression (src/SelectiveExpansion.ml[421,15437+39]..src/SelectiveExpansion.ml[421,15437+43])
                                                                Texp_ident "rule/1457"
                                                              "pr_branches"
                                                        ]
                                                  ]
                                                representation =
                                                  Record_regular
                                                extended_expression =
                                                  Some
                                                    expression (src/SelectiveExpansion.ml[418,15360+6]..src/SelectiveExpansion.ml[418,15360+10])
                                                      Texp_ident "rule/1457"
                                        ]
                            None
                      ]
                ]
              structure_item (src/SelectiveExpansion.ml[436,16033+0]..src/SelectiveExpansion.ml[441,16163+13])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[436,16033+4]..src/SelectiveExpansion.ml[436,16033+6])
                      Tpat_construct "()"
                      []
                      None
                    expression (src/SelectiveExpansion.ml[437,16042+2]..src/SelectiveExpansion.ml[441,16163+13])
                      Texp_apply
                      expression (src/SelectiveExpansion.ml[437,16042+2]..src/SelectiveExpansion.ml[437,16042+16])
                        Texp_ident "Dune__exe!.StringMap.iter"
                      [
                        <arg>
                          Nolabel
                          expression (src/SelectiveExpansion.ml[437,16042+17]..src/SelectiveExpansion.ml[441,16163+3])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/SelectiveExpansion.ml[437,16042+22]..src/SelectiveExpansion.ml[437,16042+24])
                                  Tpat_var "nt/1461"
                                expression (src/SelectiveExpansion.ml[437,16042+25]..src/SelectiveExpansion.ml[440,16143+19]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/SelectiveExpansion.ml[437,16042+25]..src/SelectiveExpansion.ml[437,16042+30])
                                        Tpat_var "prule/1462"
                                      expression (src/SelectiveExpansion.ml[438,16076+4]..src/SelectiveExpansion.ml[440,16143+19])
                                        Texp_ifthenelse
                                        expression (src/SelectiveExpansion.ml[438,16076+7]..src/SelectiveExpansion.ml[438,16076+31])
                                          Texp_apply
                                          expression (src/SelectiveExpansion.ml[438,16076+27]..src/SelectiveExpansion.ml[438,16076+28])
                                            Texp_ident "Stdlib!.="
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/SelectiveExpansion.ml[438,16076+7]..src/SelectiveExpansion.ml[438,16076+26])
                                                Texp_field
                                                expression (src/SelectiveExpansion.ml[438,16076+7]..src/SelectiveExpansion.ml[438,16076+12])
                                                  Texp_ident "prule/1462"
                                                "pr_parameters"
                                            <arg>
                                              Nolabel
                                              expression (src/SelectiveExpansion.ml[438,16076+29]..src/SelectiveExpansion.ml[438,16076+31])
                                                Texp_construct "[]"
                                                []
                                          ]
                                        expression (src/SelectiveExpansion.ml[439,16113+6]..src/SelectiveExpansion.ml[440,16143+19])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/SelectiveExpansion.ml[439,16113+10]..src/SelectiveExpansion.ml[439,16113+15])
                                                Tpat_var "label/1463"
                                              expression (src/SelectiveExpansion.ml[439,16113+18]..src/SelectiveExpansion.ml[439,16113+26])
                                                Texp_tuple
                                                [
                                                  expression (src/SelectiveExpansion.ml[439,16113+19]..src/SelectiveExpansion.ml[439,16113+21])
                                                    Texp_ident "nt/1461"
                                                  expression (src/SelectiveExpansion.ml[439,16113+23]..src/SelectiveExpansion.ml[439,16113+25])
                                                    Texp_construct "[]"
                                                    []
                                                ]
                                          ]
                                          expression (src/SelectiveExpansion.ml[440,16143+6]..src/SelectiveExpansion.ml[440,16143+19])
                                            Texp_apply
                                            expression (src/SelectiveExpansion.ml[440,16143+6]..src/SelectiveExpansion.ml[440,16143+13])
                                              Texp_ident "enqueue/951"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/SelectiveExpansion.ml[440,16143+14]..src/SelectiveExpansion.ml[440,16143+19])
                                                  Texp_ident "label/1463"
                                            ]
                                        None
                                  ]
                            ]
                        <arg>
                          Nolabel
                          expression (src/SelectiveExpansion.ml[441,16163+4]..src/SelectiveExpansion.ml[441,16163+13])
                            Texp_field
                            expression (src/SelectiveExpansion.ml[441,16163+4]..src/SelectiveExpansion.ml[441,16163+5])
                              Texp_ident "G/933.g"
                            "p_rules"
                      ]
                ]
              structure_item (src/SelectiveExpansion.ml[448,16411+0]..src/SelectiveExpansion.ml[449,16439+33])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[448,16411+4]..src/SelectiveExpansion.ml[448,16411+19])
                      Tpat_var "subst_parameter/1464"
                    expression (src/SelectiveExpansion.ml[448,16411+20]..src/SelectiveExpansion.ml[449,16439+33]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[448,16411+20]..src/SelectiveExpansion.ml[448,16411+25])
                            Tpat_var "param/1465"
                          expression (src/SelectiveExpansion.ml[449,16439+2]..src/SelectiveExpansion.ml[449,16439+33])
                            Texp_apply
                            expression (src/SelectiveExpansion.ml[449,16439+2]..src/SelectiveExpansion.ml[449,16439+17])
                              Texp_ident "subst_parameter/1411"
                            [
                              <arg>
                                Nolabel
                                expression (src/SelectiveExpansion.ml[449,16439+18]..src/SelectiveExpansion.ml[449,16439+27])
                                  Texp_ident "Env/777.empty"
                              <arg>
                                Nolabel
                                expression (src/SelectiveExpansion.ml[449,16439+28]..src/SelectiveExpansion.ml[449,16439+33])
                                  Texp_ident "param/1465"
                            ]
                      ]
                ]
              structure_item (src/SelectiveExpansion.ml[451,16474+0]..src/SelectiveExpansion.ml[453,16542+31])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[451,16474+4]..src/SelectiveExpansion.ml[451,16474+21])
                      Tpat_var "subst_declaration/1466"
                    expression (src/SelectiveExpansion.ml[451,16474+22]..src/SelectiveExpansion.ml[453,16542+31]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[451,16474+22]..src/SelectiveExpansion.ml[451,16474+35])
                            Tpat_tuple
                            [
                              pattern (src/SelectiveExpansion.ml[451,16474+23]..src/SelectiveExpansion.ml[451,16474+28])
                                Tpat_var "param/1468"
                              pattern (src/SelectiveExpansion.ml[451,16474+30]..src/SelectiveExpansion.ml[451,16474+34])
                                Tpat_var "info/1469"
                            ]
                          expression (src/SelectiveExpansion.ml[452,16512+2]..src/SelectiveExpansion.ml[453,16542+31])
                            Texp_sequence
                            expression (src/SelectiveExpansion.ml[452,16512+2]..src/SelectiveExpansion.ml[452,16512+28])
                              Texp_assert                              expression (src/SelectiveExpansion.ml[452,16512+9]..src/SelectiveExpansion.ml[452,16512+28])
                                Texp_apply
                                expression (src/SelectiveExpansion.ml[452,16512+21]..src/SelectiveExpansion.ml[452,16512+22])
                                  Texp_ident "Stdlib!.="
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/SelectiveExpansion.ml[452,16512+10]..src/SelectiveExpansion.ml[452,16512+20])
                                      Texp_apply
                                      expression (src/SelectiveExpansion.ml[452,16512+10]..src/SelectiveExpansion.ml[452,16512+14])
                                        Texp_ident "sort/937"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/SelectiveExpansion.ml[452,16512+15]..src/SelectiveExpansion.ml[452,16512+20])
                                            Texp_ident "param/1468"
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/SelectiveExpansion.ml[452,16512+23]..src/SelectiveExpansion.ml[452,16512+27])
                                      Texp_ident "Dune__exe!.GroundSort.star"
                                ]
                            expression (src/SelectiveExpansion.ml[453,16542+2]..src/SelectiveExpansion.ml[453,16542+31])
                              Texp_tuple
                              [
                                expression (src/SelectiveExpansion.ml[453,16542+3]..src/SelectiveExpansion.ml[453,16542+24])
                                  Texp_apply
                                  expression (src/SelectiveExpansion.ml[453,16542+3]..src/SelectiveExpansion.ml[453,16542+18])
                                    Texp_ident "subst_parameter/1464"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/SelectiveExpansion.ml[453,16542+19]..src/SelectiveExpansion.ml[453,16542+24])
                                        Texp_ident "param/1468"
                                  ]
                                expression (src/SelectiveExpansion.ml[453,16542+26]..src/SelectiveExpansion.ml[453,16542+30])
                                  Texp_ident "info/1469"
                              ]
                      ]
                ]
              structure_item (src/SelectiveExpansion.ml[455,16575+0]..src/SelectiveExpansion.ml[456,16606+34])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[455,16575+4]..src/SelectiveExpansion.ml[455,16575+22])
                      Tpat_var "subst_declarations/1471"
                    expression (src/SelectiveExpansion.ml[455,16575+23]..src/SelectiveExpansion.ml[456,16606+34]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[455,16575+23]..src/SelectiveExpansion.ml[455,16575+28])
                            Tpat_var "decls/1473"
                          expression (src/SelectiveExpansion.ml[456,16606+2]..src/SelectiveExpansion.ml[456,16606+34])
                            Texp_apply
                            expression (src/SelectiveExpansion.ml[456,16606+2]..src/SelectiveExpansion.ml[456,16606+10])
                              Texp_ident "Stdlib!.List.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/SelectiveExpansion.ml[456,16606+11]..src/SelectiveExpansion.ml[456,16606+28])
                                  Texp_ident "subst_declaration/1466"
                              <arg>
                                Nolabel
                                expression (src/SelectiveExpansion.ml[456,16606+29]..src/SelectiveExpansion.ml[456,16606+34])
                                  Texp_ident "decls/1473"
                            ]
                      ]
                ]
              structure_item (src/SelectiveExpansion.ml[470,17272+0]..src/SelectiveExpansion.ml[472,17328+44])
                Tstr_type Rec
                [
                  type_declaration thing/1474 (src/SelectiveExpansion.ml[470,17272+0]..src/SelectiveExpansion.ml[472,17328+44])
                    ptype_params =
                      []
                    ptype_cstrs =
                      []
                    ptype_kind =
                      Ttype_variant
                        [
                          (src/SelectiveExpansion.ml[471,17285+2]..src/SelectiveExpansion.ml[471,17285+42])
                            TargetParameterOfSortStar/1475
                            [
                              core_type (src/SelectiveExpansion.ml[471,17285+33]..src/SelectiveExpansion.ml[471,17285+42])
                                Ttyp_constr "Dune__exe!.Syntax.parameter"
                                []
                            ]
                            None
                          (src/SelectiveExpansion.ml[472,17328+2]..src/SelectiveExpansion.ml[472,17328+44])
                            SourceParameterOfHigherSort/1476
                            [
                              core_type (src/SelectiveExpansion.ml[472,17328+35]..src/SelectiveExpansion.ml[472,17328+44])
                                Ttyp_constr "Dune__exe!.Syntax.parameter"
                                []
                            ]
                            None
                        ]
                    ptype_private = Public
                    ptype_manifest =
                      None
                ]
              structure_item (src/SelectiveExpansion.ml[474,17374+0]..src/SelectiveExpansion.ml[478,17502+37])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[474,17374+4]..src/SelectiveExpansion.ml[474,17374+22])
                      Tpat_var "thingify_parameter/1477"
                    expression (src/SelectiveExpansion.ml[474,17374+23]..src/SelectiveExpansion.ml[478,17502+37]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[474,17374+23]..src/SelectiveExpansion.ml[474,17374+28])
                            Tpat_var "param/1479"
                          expression (src/SelectiveExpansion.ml[475,17413+2]..src/SelectiveExpansion.ml[478,17502+37])
                            extra
                              Texp_constraint
                              core_type (src/SelectiveExpansion.ml[474,17374+31]..src/SelectiveExpansion.ml[474,17374+36])
                                Ttyp_constr "thing/1474"
                                []
                            Texp_ifthenelse
                            expression (src/SelectiveExpansion.ml[475,17413+5]..src/SelectiveExpansion.ml[475,17413+22])
                              Texp_apply
                              expression (src/SelectiveExpansion.ml[475,17413+16]..src/SelectiveExpansion.ml[475,17413+17])
                                Texp_ident "Stdlib!.="
                              [
                                <arg>
                                  Nolabel
                                  expression (src/SelectiveExpansion.ml[475,17413+5]..src/SelectiveExpansion.ml[475,17413+15])
                                    Texp_apply
                                    expression (src/SelectiveExpansion.ml[475,17413+5]..src/SelectiveExpansion.ml[475,17413+9])
                                      Texp_ident "sort/937"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/SelectiveExpansion.ml[475,17413+10]..src/SelectiveExpansion.ml[475,17413+15])
                                          Texp_ident "param/1479"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/SelectiveExpansion.ml[475,17413+18]..src/SelectiveExpansion.ml[475,17413+22])
                                    Texp_ident "Dune__exe!.GroundSort.star"
                              ]
                            expression (src/SelectiveExpansion.ml[476,17441+4]..src/SelectiveExpansion.ml[476,17441+53])
                              Texp_construct "TargetParameterOfSortStar"
                              [
                                expression (src/SelectiveExpansion.ml[476,17441+30]..src/SelectiveExpansion.ml[476,17441+53])
                                  Texp_apply
                                  expression (src/SelectiveExpansion.ml[476,17441+31]..src/SelectiveExpansion.ml[476,17441+46])
                                    Texp_ident "subst_parameter/1464"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/SelectiveExpansion.ml[476,17441+47]..src/SelectiveExpansion.ml[476,17441+52])
                                        Texp_ident "param/1479"
                                  ]
                              ]
                            Some
                              expression (src/SelectiveExpansion.ml[478,17502+4]..src/SelectiveExpansion.ml[478,17502+37])
                                Texp_construct "SourceParameterOfHigherSort"
                                [
                                  expression (src/SelectiveExpansion.ml[478,17502+32]..src/SelectiveExpansion.ml[478,17502+37])
                                    Texp_ident "param/1479"
                                ]
                      ]
                ]
              structure_item (src/SelectiveExpansion.ml[480,17541+0]..src/SelectiveExpansion.ml[481,17594+45])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[480,17541+4]..src/SelectiveExpansion.ml[480,17541+34])
                      Tpat_var "thingify_attribute_declaration/1480"
                    expression (src/SelectiveExpansion.ml[480,17541+35]..src/SelectiveExpansion.ml[481,17594+45]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[480,17541+35]..src/SelectiveExpansion.ml[480,17541+50])
                            Tpat_tuple
                            [
                              pattern (src/SelectiveExpansion.ml[480,17541+36]..src/SelectiveExpansion.ml[480,17541+42])
                                Tpat_var "params/1482"
                              pattern (src/SelectiveExpansion.ml[480,17541+44]..src/SelectiveExpansion.ml[480,17541+49])
                                Tpat_var "attrs/1483"
                            ]
                          expression (src/SelectiveExpansion.ml[481,17594+2]..src/SelectiveExpansion.ml[481,17594+45])
                            Texp_tuple
                            [
                              expression (src/SelectiveExpansion.ml[481,17594+3]..src/SelectiveExpansion.ml[481,17594+37])
                                Texp_apply
                                expression (src/SelectiveExpansion.ml[481,17594+3]..src/SelectiveExpansion.ml[481,17594+11])
                                  Texp_ident "Stdlib!.List.map"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/SelectiveExpansion.ml[481,17594+12]..src/SelectiveExpansion.ml[481,17594+30])
                                      Texp_ident "thingify_parameter/1477"
                                  <arg>
                                    Nolabel
                                    expression (src/SelectiveExpansion.ml[481,17594+31]..src/SelectiveExpansion.ml[481,17594+37])
                                      Texp_ident "params/1482"
                                ]
                              expression (src/SelectiveExpansion.ml[481,17594+39]..src/SelectiveExpansion.ml[481,17594+44])
                                Texp_ident "attrs/1483"
                            ]
                      ]
                ]
              structure_item (src/SelectiveExpansion.ml[483,17641+0]..src/SelectiveExpansion.ml[484,17685+47])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[483,17641+4]..src/SelectiveExpansion.ml[483,17641+35])
                      Tpat_var "thingify_attribute_declarations/1485"
                    expression (src/SelectiveExpansion.ml[483,17641+36]..src/SelectiveExpansion.ml[484,17685+47]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[483,17641+36]..src/SelectiveExpansion.ml[483,17641+41])
                            Tpat_var "decls/1487"
                          expression (src/SelectiveExpansion.ml[484,17685+2]..src/SelectiveExpansion.ml[484,17685+47])
                            Texp_apply
                            expression (src/SelectiveExpansion.ml[484,17685+2]..src/SelectiveExpansion.ml[484,17685+10])
                              Texp_ident "Stdlib!.List.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/SelectiveExpansion.ml[484,17685+11]..src/SelectiveExpansion.ml[484,17685+41])
                                  Texp_ident "thingify_attribute_declaration/1480"
                              <arg>
                                Nolabel
                                expression (src/SelectiveExpansion.ml[484,17685+42]..src/SelectiveExpansion.ml[484,17685+47])
                                  Texp_ident "decls/1487"
                            ]
                      ]
                ]
              structure_item (src/SelectiveExpansion.ml[486,17734+0]..src/SelectiveExpansion.ml[495,18120+60])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[486,17734+4]..src/SelectiveExpansion.ml[486,17734+24])
                      Tpat_var "unthingify_parameter/1488"
                    expression (src/SelectiveExpansion.ml[486,17734+25]..src/SelectiveExpansion.ml[495,18120+60]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[486,17734+25]..src/SelectiveExpansion.ml[486,17734+30])
                            Tpat_var "rules/1490"
                          expression (src/SelectiveExpansion.ml[486,17734+31]..src/SelectiveExpansion.ml[495,18120+60]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/SelectiveExpansion.ml[486,17734+31]..src/SelectiveExpansion.ml[486,17734+36])
                                  Tpat_var "thing/1491"
                                expression (src/SelectiveExpansion.ml[487,17773+2]..src/SelectiveExpansion.ml[495,18120+60])
                                  Texp_match
                                  expression (src/SelectiveExpansion.ml[487,17773+8]..src/SelectiveExpansion.ml[487,17773+13])
                                    Texp_ident "thing/1491"
                                  [
                                    <case>
                                      pattern (src/SelectiveExpansion.ml[488,17792+4]..src/SelectiveExpansion.ml[488,17792+35])
                                        Tpat_value
                                        pattern (src/SelectiveExpansion.ml[488,17792+4]..src/SelectiveExpansion.ml[488,17792+35])
                                          Tpat_construct "TargetParameterOfSortStar"
                                          [
                                            pattern (src/SelectiveExpansion.ml[488,17792+30]..src/SelectiveExpansion.ml[488,17792+35])
                                              Tpat_var "param/1492"
                                          ]
                                          None
                                      expression (src/SelectiveExpansion.ml[490,17884+5]..src/SelectiveExpansion.ml[490,17884+15])
                                        Texp_construct "Some"
                                        [
                                          expression (src/SelectiveExpansion.ml[490,17884+10]..src/SelectiveExpansion.ml[490,17884+15])
                                            Texp_ident "param/1492"
                                        ]
                                    <case>
                                      pattern (src/SelectiveExpansion.ml[491,17900+4]..src/SelectiveExpansion.ml[491,17900+37])
                                        Tpat_value
                                        pattern (src/SelectiveExpansion.ml[491,17900+4]..src/SelectiveExpansion.ml[491,17900+37])
                                          Tpat_construct "SourceParameterOfHigherSort"
                                          [
                                            pattern (src/SelectiveExpansion.ml[491,17900+32]..src/SelectiveExpansion.ml[491,17900+37])
                                              Tpat_var "param/1493"
                                          ]
                                          None
                                      expression (src/SelectiveExpansion.ml[494,18068+5]..src/SelectiveExpansion.ml[495,18120+60])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/SelectiveExpansion.ml[494,18068+9]..src/SelectiveExpansion.ml[494,18068+15])
                                              Tpat_var "symbol/1494"
                                            expression (src/SelectiveExpansion.ml[494,18068+18]..src/SelectiveExpansion.ml[494,18068+48])
                                              Texp_apply
                                              expression (src/SelectiveExpansion.ml[494,18068+18]..src/SelectiveExpansion.ml[494,18068+23])
                                                Texp_ident "value/397"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/SelectiveExpansion.ml[494,18068+24]..src/SelectiveExpansion.ml[494,18068+48])
                                                    Texp_apply
                                                    expression (src/SelectiveExpansion.ml[494,18068+25]..src/SelectiveExpansion.ml[494,18068+41])
                                                      Texp_ident "Dune__exe!.Parameters.unvar"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/SelectiveExpansion.ml[494,18068+42]..src/SelectiveExpansion.ml[494,18068+47])
                                                          Texp_ident "param/1493"
                                                    ]
                                              ]
                                        ]
                                        expression (src/SelectiveExpansion.ml[495,18120+5]..src/SelectiveExpansion.ml[495,18120+60])
                                          Texp_ifthenelse
                                          expression (src/SelectiveExpansion.ml[495,18120+8]..src/SelectiveExpansion.ml[495,18120+34])
                                            Texp_apply
                                            expression (src/SelectiveExpansion.ml[495,18120+8]..src/SelectiveExpansion.ml[495,18120+21])
                                              Texp_ident "Dune__exe!.StringMap.mem"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/SelectiveExpansion.ml[495,18120+22]..src/SelectiveExpansion.ml[495,18120+28])
                                                  Texp_ident "symbol/1494"
                                              <arg>
                                                Nolabel
                                                expression (src/SelectiveExpansion.ml[495,18120+29]..src/SelectiveExpansion.ml[495,18120+34])
                                                  Texp_ident "rules/1490"
                                            ]
                                          expression (src/SelectiveExpansion.ml[495,18120+40]..src/SelectiveExpansion.ml[495,18120+50])
                                            Texp_construct "Some"
                                            [
                                              expression (src/SelectiveExpansion.ml[495,18120+45]..src/SelectiveExpansion.ml[495,18120+50])
                                                Texp_ident "param/1493"
                                            ]
                                          Some
                                            expression (src/SelectiveExpansion.ml[495,18120+56]..src/SelectiveExpansion.ml[495,18120+60])
                                              Texp_construct "None"
                                              []
                                  ]
                            ]
                      ]
                ]
              structure_item (src/SelectiveExpansion.ml[497,18182+0]..src/SelectiveExpansion.ml[498,18243+62])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[497,18182+4]..src/SelectiveExpansion.ml[497,18182+36])
                      Tpat_var "unthingify_attribute_declaration/1495"
                    expression (src/SelectiveExpansion.ml[497,18182+37]..src/SelectiveExpansion.ml[498,18243+62]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[497,18182+37]..src/SelectiveExpansion.ml[497,18182+42])
                            Tpat_var "rules/1497"
                          expression (src/SelectiveExpansion.ml[497,18182+43]..src/SelectiveExpansion.ml[498,18243+62]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/SelectiveExpansion.ml[497,18182+43]..src/SelectiveExpansion.ml[497,18182+58])
                                  Tpat_tuple
                                  [
                                    pattern (src/SelectiveExpansion.ml[497,18182+44]..src/SelectiveExpansion.ml[497,18182+50])
                                      Tpat_var "params/1498"
                                    pattern (src/SelectiveExpansion.ml[497,18182+52]..src/SelectiveExpansion.ml[497,18182+57])
                                      Tpat_var "attrs/1499"
                                  ]
                                expression (src/SelectiveExpansion.ml[498,18243+2]..src/SelectiveExpansion.ml[498,18243+62])
                                  Texp_tuple
                                  [
                                    expression (src/SelectiveExpansion.ml[498,18243+3]..src/SelectiveExpansion.ml[498,18243+54])
                                      Texp_apply
                                      expression (src/SelectiveExpansion.ml[498,18243+3]..src/SelectiveExpansion.ml[498,18243+18])
                                        Texp_ident "Dune__exe!.Misc.filter_map"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/SelectiveExpansion.ml[498,18243+19]..src/SelectiveExpansion.ml[498,18243+47])
                                            Texp_apply
                                            expression (src/SelectiveExpansion.ml[498,18243+20]..src/SelectiveExpansion.ml[498,18243+40])
                                              Texp_ident "unthingify_parameter/1488"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/SelectiveExpansion.ml[498,18243+41]..src/SelectiveExpansion.ml[498,18243+46])
                                                  Texp_ident "rules/1497"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/SelectiveExpansion.ml[498,18243+48]..src/SelectiveExpansion.ml[498,18243+54])
                                            Texp_ident "params/1498"
                                      ]
                                    expression (src/SelectiveExpansion.ml[498,18243+56]..src/SelectiveExpansion.ml[498,18243+61])
                                      Texp_ident "attrs/1499"
                                  ]
                            ]
                      ]
                ]
              structure_item (src/SelectiveExpansion.ml[500,18307+0]..src/SelectiveExpansion.ml[501,18359+57])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[500,18307+4]..src/SelectiveExpansion.ml[500,18307+37])
                      Tpat_var "unthingify_attribute_declarations/1501"
                    expression (src/SelectiveExpansion.ml[500,18307+38]..src/SelectiveExpansion.ml[501,18359+57]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[500,18307+38]..src/SelectiveExpansion.ml[500,18307+43])
                            Tpat_var "rules/1503"
                          expression (src/SelectiveExpansion.ml[500,18307+44]..src/SelectiveExpansion.ml[501,18359+57]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/SelectiveExpansion.ml[500,18307+44]..src/SelectiveExpansion.ml[500,18307+49])
                                  Tpat_var "decls/1504"
                                expression (src/SelectiveExpansion.ml[501,18359+2]..src/SelectiveExpansion.ml[501,18359+57])
                                  Texp_apply
                                  expression (src/SelectiveExpansion.ml[501,18359+2]..src/SelectiveExpansion.ml[501,18359+10])
                                    Texp_ident "Stdlib!.List.map"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/SelectiveExpansion.ml[501,18359+11]..src/SelectiveExpansion.ml[501,18359+51])
                                        Texp_apply
                                        expression (src/SelectiveExpansion.ml[501,18359+12]..src/SelectiveExpansion.ml[501,18359+44])
                                          Texp_ident "unthingify_attribute_declaration/1495"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/SelectiveExpansion.ml[501,18359+45]..src/SelectiveExpansion.ml[501,18359+50])
                                              Texp_ident "rules/1503"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/SelectiveExpansion.ml[501,18359+52]..src/SelectiveExpansion.ml[501,18359+57])
                                        Texp_ident "decls/1504"
                                  ]
                            ]
                      ]
                ]
              structure_item (src/SelectiveExpansion.ml[507,18558+0]..src/SelectiveExpansion.ml[521,19048+13])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/SelectiveExpansion.ml[507,18558+4]..src/SelectiveExpansion.ml[507,18558+5])
                      Tpat_var "g/1505"
                    expression (src/SelectiveExpansion.ml[509,18601+2]..src/SelectiveExpansion.ml[521,19048+13])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/SelectiveExpansion.ml[509,18601+6]..src/SelectiveExpansion.ml[509,18601+13])
                            Tpat_var "p_types/1506"
                          expression (src/SelectiveExpansion.ml[509,18601+16]..src/SelectiveExpansion.ml[509,18601+44])
                            Texp_apply
                            expression (src/SelectiveExpansion.ml[509,18601+16]..src/SelectiveExpansion.ml[509,18601+34])
                              Texp_ident "subst_declarations/1471"
                            [
                              <arg>
                                Nolabel
                                expression (src/SelectiveExpansion.ml[509,18601+35]..src/SelectiveExpansion.ml[509,18601+44])
                                  Texp_field
                                  expression (src/SelectiveExpansion.ml[509,18601+35]..src/SelectiveExpansion.ml[509,18601+36])
                                    Texp_ident "G/933.g"
                                  "p_types"
                            ]
                        <def>
                          pattern (src/SelectiveExpansion.ml[510,18646+6]..src/SelectiveExpansion.ml[510,18646+23])
                            Tpat_var "p_on_error_reduce/1507"
                          expression (src/SelectiveExpansion.ml[510,18646+26]..src/SelectiveExpansion.ml[510,18646+64])
                            Texp_apply
                            expression (src/SelectiveExpansion.ml[510,18646+26]..src/SelectiveExpansion.ml[510,18646+44])
                              Texp_ident "subst_declarations/1471"
                            [
                              <arg>
                                Nolabel
                                expression (src/SelectiveExpansion.ml[510,18646+45]..src/SelectiveExpansion.ml[510,18646+64])
                                  Texp_field
                                  expression (src/SelectiveExpansion.ml[510,18646+45]..src/SelectiveExpansion.ml[510,18646+46])
                                    Texp_ident "G/933.g"
                                  "p_on_error_reduce"
                            ]
                        <def>
                          pattern (src/SelectiveExpansion.ml[511,18711+6]..src/SelectiveExpansion.ml[511,18711+12])
                            Tpat_var "things/1508"
                          expression (src/SelectiveExpansion.ml[511,18711+15]..src/SelectiveExpansion.ml[511,18711+68])
                            Texp_apply
                            expression (src/SelectiveExpansion.ml[511,18711+15]..src/SelectiveExpansion.ml[511,18711+46])
                              Texp_ident "thingify_attribute_declarations/1485"
                            [
                              <arg>
                                Nolabel
                                expression (src/SelectiveExpansion.ml[511,18711+47]..src/SelectiveExpansion.ml[511,18711+68])
                                  Texp_field
                                  expression (src/SelectiveExpansion.ml[511,18711+47]..src/SelectiveExpansion.ml[511,18711+48])
                                    Texp_ident "G/933.g"
                                  "p_symbol_attributes"
                            ]
                      ]
                      expression (src/SelectiveExpansion.ml[513,18808+2]..src/SelectiveExpansion.ml[521,19048+13])
                        Texp_sequence
                        expression (src/SelectiveExpansion.ml[513,18808+2]..src/SelectiveExpansion.ml[513,18808+18])
                          Texp_apply
                          expression (src/SelectiveExpansion.ml[513,18808+2]..src/SelectiveExpansion.ml[513,18808+12])
                            Texp_ident "repeatedly/952"
                          [
                            <arg>
                              Nolabel
                              expression (src/SelectiveExpansion.ml[513,18808+13]..src/SelectiveExpansion.ml[513,18808+18])
                                Texp_ident "visit/1452"
                          ]
                        expression (src/SelectiveExpansion.ml[515,18869+2]..src/SelectiveExpansion.ml[521,19048+13])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (src/SelectiveExpansion.ml[515,18869+6]..src/SelectiveExpansion.ml[515,18869+13])
                                Tpat_var "p_rules/1509"
                              expression (src/SelectiveExpansion.ml[515,18869+16]..src/SelectiveExpansion.ml[515,18869+23])
                                Texp_apply
                                expression (src/SelectiveExpansion.ml[515,18869+16]..src/SelectiveExpansion.ml[515,18869+21])
                                  Texp_ident "rules/1153"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/SelectiveExpansion.ml[515,18869+21]..src/SelectiveExpansion.ml[515,18869+23])
                                      Texp_construct "()"
                                      []
                                ]
                          ]
                          expression (src/SelectiveExpansion.ml[516,18896+2]..src/SelectiveExpansion.ml[521,19048+13])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/SelectiveExpansion.ml[516,18896+6]..src/SelectiveExpansion.ml[516,18896+25])
                                  Tpat_var "p_symbol_attributes/1510"
                                expression (src/SelectiveExpansion.ml[516,18896+28]..src/SelectiveExpansion.ml[516,18896+76])
                                  Texp_apply
                                  expression (src/SelectiveExpansion.ml[516,18896+28]..src/SelectiveExpansion.ml[516,18896+61])
                                    Texp_ident "unthingify_attribute_declarations/1501"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/SelectiveExpansion.ml[516,18896+62]..src/SelectiveExpansion.ml[516,18896+69])
                                        Texp_ident "p_rules/1509"
                                    <arg>
                                      Nolabel
                                      expression (src/SelectiveExpansion.ml[516,18896+70]..src/SelectiveExpansion.ml[516,18896+76])
                                        Texp_ident "things/1508"
                                  ]
                            ]
                            expression (src/SelectiveExpansion.ml[517,18976+2]..src/SelectiveExpansion.ml[521,19048+13])
                              Texp_record
                                fields =
                                  [
                                    <kept>                                    <kept>                                    <kept>                                    <kept>                                    "p_types"
                                      expression (src/SelectiveExpansion.ml[518,18987+4]..src/SelectiveExpansion.ml[518,18987+11])
                                        Texp_ident "p_types/1506"
                                    <kept>                                    "p_on_error_reduce"
                                      expression (src/SelectiveExpansion.ml[519,19000+4]..src/SelectiveExpansion.ml[519,19000+21])
                                        Texp_ident "p_on_error_reduce/1507"
                                    <kept>                                    "p_symbol_attributes"
                                      expression (src/SelectiveExpansion.ml[520,19023+4]..src/SelectiveExpansion.ml[520,19023+23])
                                        Texp_ident "p_symbol_attributes/1510"
                                    "p_rules"
                                      expression (src/SelectiveExpansion.ml[521,19048+4]..src/SelectiveExpansion.ml[521,19048+11])
                                        Texp_ident "p_rules/1509"
                                  ]
                                representation =
                                  Record_regular
                                extended_expression =
                                  Some
                                    expression (src/SelectiveExpansion.ml[517,18976+4]..src/SelectiveExpansion.ml[517,18976+5])
                                      Texp_ident "G/933.g"
                ]
            ]
  structure_item (src/SelectiveExpansion.ml[529,19222+0]..src/SelectiveExpansion.ml[535,19342+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/SelectiveExpansion.ml[529,19222+4]..src/SelectiveExpansion.ml[529,19222+10])
          Tpat_var "expand/1512"
        expression (src/SelectiveExpansion.ml[529,19222+11]..src/SelectiveExpansion.ml[535,19342+5]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/SelectiveExpansion.ml[529,19222+11]..src/SelectiveExpansion.ml[529,19222+15])
                Tpat_var "mode/1514"
              expression (src/SelectiveExpansion.ml[529,19222+16]..src/SelectiveExpansion.ml[535,19342+5]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/SelectiveExpansion.ml[529,19222+16]..src/SelectiveExpansion.ml[529,19222+21])
                      Tpat_var "sorts/1515"
                    expression (src/SelectiveExpansion.ml[529,19222+22]..src/SelectiveExpansion.ml[535,19342+5]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/SelectiveExpansion.ml[529,19222+22]..src/SelectiveExpansion.ml[529,19222+23])
                            Tpat_var "g/1516"
                          expression (src/SelectiveExpansion.ml[530,19248+2]..src/SelectiveExpansion.ml[535,19342+5])
                            Texp_letmodule "G/1549"
                            module_expr (src/SelectiveExpansion.ml[530,19248+17]..src/SelectiveExpansion.ml[534,19332+6])
                              Tmod_apply
                              module_expr (src/SelectiveExpansion.ml[530,19248+17]..src/SelectiveExpansion.ml[530,19248+20])
                                Tmod_ident "Run/1511"
                              module_expr (src/SelectiveExpansion.ml[530,19248+21]..src/SelectiveExpansion.ml[534,19332+5])
                                Tmod_structure
                                [
                                  structure_item (src/SelectiveExpansion.ml[531,19276+4]..src/SelectiveExpansion.ml[531,19276+19])
                                    Tstr_value Nonrec
                                    [
                                      <def>
                                        pattern (src/SelectiveExpansion.ml[531,19276+8]..src/SelectiveExpansion.ml[531,19276+12])
                                          Tpat_var "mode/1517"
                                        expression (src/SelectiveExpansion.ml[531,19276+15]..src/SelectiveExpansion.ml[531,19276+19])
                                          Texp_ident "mode/1514"
                                    ]
                                  structure_item (src/SelectiveExpansion.ml[532,19296+4]..src/SelectiveExpansion.ml[532,19296+21])
                                    Tstr_value Nonrec
                                    [
                                      <def>
                                        pattern (src/SelectiveExpansion.ml[532,19296+8]..src/SelectiveExpansion.ml[532,19296+13])
                                          Tpat_var "sorts/1518"
                                        expression (src/SelectiveExpansion.ml[532,19296+16]..src/SelectiveExpansion.ml[532,19296+21])
                                          Texp_ident "sorts/1515"
                                    ]
                                  structure_item (src/SelectiveExpansion.ml[533,19318+4]..src/SelectiveExpansion.ml[533,19318+13])
                                    Tstr_value Nonrec
                                    [
                                      <def>
                                        pattern (src/SelectiveExpansion.ml[533,19318+8]..src/SelectiveExpansion.ml[533,19318+9])
                                          Tpat_var "g/1519"
                                        expression (src/SelectiveExpansion.ml[533,19318+12]..src/SelectiveExpansion.ml[533,19318+13])
                                          Texp_ident "g/1516"
                                    ]
                                ]
                            expression (src/SelectiveExpansion.ml[535,19342+2]..src/SelectiveExpansion.ml[535,19342+5])
                              Texp_ident "G/1549.g"
                      ]
                ]
          ]
    ]
]

{<Dune__exe__SelectiveExpansion>
 "expand"[value] -> <Dune__exe__SelectiveExpansion.188>;
 "mode"[type] -> <Dune__exe__SelectiveExpansion.2>;
 }

(seq
  (let (value/397 = (field_imm 0 (global Dune__exe__Positions!)))
    (setfield_ptr(root-init) 1 (global Dune__exe__SelectiveExpansion!)
      value/397))
  (let (unknown/433 = (field_imm 6 (global Dune__exe__Positions!)))
    (setfield_ptr(root-init) 2 (global Dune__exe__SelectiveExpansion!)
      unknown/433))
  (let
    (equal/513 =
       (function param/612 param/611 : int
         (let
           (inst2/518 =a (field_imm 1 param/611)
            nt2/517 =a (field_imm 0 param/611)
            inst1/516 =a (field_imm 1 param/612)
            nt1/515 =a (field_imm 0 param/612))
           (&& (caml_equal nt1/515 nt2/517)
             (apply (field_imm 34 (global Stdlib__List!))
               (apply (field_imm 6 (global Dune__exe__Option!))
                 (field_imm 9 (global Dune__exe__Parameters!)))
               inst1/516 inst2/518)))))
    (setfield_ptr(root-init) 11 (global Dune__exe__SelectiveExpansion!)
      equal/513))
  (let
    (hash/613 =
       (function (param/4849, param/4850) : int
         (let (inst/616 =a param/4850 nt/615 =a param/4849)
           (apply (field_imm 27 (global Stdlib__Hashtbl!))
             (makeblock 0 (*,int) nt/615
               (apply (field_imm 1 (field_imm 30 (global Dune__exe__Misc!)))
                 (apply (field_imm 7 (global Dune__exe__Option!))
                   (field_imm 10 (global Dune__exe__Parameters!)))
                 inst/616))))))
    (setfield_ptr(root-init) 12 (global Dune__exe__SelectiveExpansion!)
      hash/613))
  0
  (let
    (Label/731 =
       (makeblock 0 (field_imm 11 (global Dune__exe__SelectiveExpansion!))
         (field_imm 12 (global Dune__exe__SelectiveExpansion!))))
    (seq
      (setfield_ptr(root-init) 3 (global Dune__exe__SelectiveExpansion!)
        Label/731)
      (let
        (mangle_po/732 =
           (function po/734
             (if (isint po/734) "_"
               (let (p/735 =a (field_imm 0 po/734))
                 (apply (field_imm 13 (global Dune__exe__Parameters!)) 0
                   p/735)))))
        (setfield_ptr(root-init) 4 (global Dune__exe__SelectiveExpansion!)
          mangle_po/732))
      (let
        (mangle/736 =
           (function (param/4851, param/4852)
             (let (pos/739 =a param/4852 nt/738 =a param/4851)
               (if (== pos/739 0) nt/738
                 (apply (field_imm 3 (global Stdlib__Printf!))
                   [0: [2: 0 [12: '(' [2: 0 [12: ')' 0]]]] "%s(%s)"] nt/738
                   (apply (field_imm 6 (global Dune__exe__Misc!))
                     (field_imm 4 (global Dune__exe__SelectiveExpansion!))
                     "," pos/739))))))
        (setfield_ptr(root-init) 5 (global Dune__exe__SelectiveExpansion!)
          mangle/736))
      (let
        (subst_symbol/875 =
           (function env/877 sym/878
             (try
               (apply (field_imm 15 (global Dune__exe__StringMap!))
                 (apply (field_imm 1 (global Dune__exe__SelectiveExpansion!))
                   sym/878)
                 env/877)
              with exn/4853
               (catch
                 (if (== exn/4853 (field_imm 7 (global Stdlib!)))
                   (makeblock 0 sym/878) (exit 1))
                with (1) (reraise exn/4853)))))
        (setfield_ptr(root-init) 6 (global Dune__exe__SelectiveExpansion!)
          subst_symbol/875))
      (let
        (apply/914 =
           (function param/916 params/917
             (switch* param/916
              case tag 0:
               (let (sym/918 =a (field_imm 0 param/916))
                 (seq
                   (if (!= params/917 0) 0
                     (raise
                       (makeblock 0 (global Assert_failure/28!)
                         [0: "src/SelectiveExpansion.ml" 104 6])))
                   (makeblock 1 sym/918 params/917)))
              case tag 1:
               (let
                 (*match*/4855 =a (field_imm 1 param/916)
                  *match*/4854 =a (field_imm 0 param/916))
                 (raise
                   (makeblock 0 (global Assert_failure/28!)
                     [0: "src/SelectiveExpansion.ml" 110 6])))
              case tag 2:
               (let (*match*/4856 =a (field_imm 0 param/916))
                 (raise
                   (makeblock 0 (global Assert_failure/28!)
                     [0: "src/SelectiveExpansion.ml" 113 6]))))))
        (setfield_ptr(root-init) 7 (global Dune__exe__SelectiveExpansion!)
          apply/914))
      (letrec
        (subst_parameter/919
           (function env/921 param/922
             (switch* param/922
              case tag 0:
               (let (sym/923 =a (field_imm 0 param/922))
                 (apply (field_imm 6 (global Dune__exe__SelectiveExpansion!))
                   env/921 sym/923))
              case tag 1:
               (let
                 (params/925 =a (field_imm 1 param/922)
                  sym/924 =a (field_imm 0 param/922))
                 (seq
                   (if (!= params/925 0) 0
                     (raise
                       (makeblock 0 (global Assert_failure/28!)
                         [0: "src/SelectiveExpansion.ml" 120 6])))
                   (apply
                     (field_imm 7 (global Dune__exe__SelectiveExpansion!))
                     (apply
                       (field_imm 6 (global Dune__exe__SelectiveExpansion!))
                       env/921 sym/924)
                     (apply subst_parameters/920 env/921 params/925))))
              case tag 2:
               (let (*match*/4857 =a (field_imm 0 param/922))
                 (raise
                   (makeblock 0 (global Assert_failure/28!)
                     [0: "src/SelectiveExpansion.ml" 124 6])))))
          subst_parameters/920
            (function env/926 params/927
              (apply (field_imm 19 (global Stdlib__List!))
                (apply subst_parameter/919 env/926) params/927)))
        (seq
          (setfield_ptr(root-init) 8 (global Dune__exe__SelectiveExpansion!)
            subst_parameter/919)
          (setfield_ptr(root-init) 9 (global Dune__exe__SelectiveExpansion!)
            subst_parameters/920)))
      (let
        (Run/1511 =
           (function G/4910 is_a_functor
             (let
               (G/933 =a G/4910
                sort/934 =
                  (function symbol/936
                    (try
                      (apply (field_imm 15 (global Dune__exe__StringMap!))
                        (apply
                          (field_imm 1
                            (global Dune__exe__SelectiveExpansion!))
                          symbol/936)
                        (field_imm 1 G/933))
                     with exn/4858
                      (catch
                        (if (== exn/4858 (field_imm 7 (global Stdlib!)))
                          (raise
                            (makeblock 0 (global Assert_failure/28!)
                              [0: "src/SelectiveExpansion.ml" 157 4]))
                          (exit 2))
                       with (2) (reraise exn/4858))))
                sort/937 =
                  (function param/938
                    (switch* param/938
                     case tag 0:
                      (let (sym/939 =a (field_imm 0 param/938))
                        (apply sort/934 sym/939))
                     case tag 1:
                      (let
                        (params/940 =a (field_imm 1 param/938)
                         *match*/4859 =a (field_imm 0 param/938))
                        (seq
                          (if (!= params/940 0) 0
                            (raise
                              (makeblock 0 (global Assert_failure/28!)
                                [0: "src/SelectiveExpansion.ml" 164 6])))
                          (field_imm 0 (global Dune__exe__GroundSort!))))
                     case tag 2:
                      (let (*match*/4860 =a (field_imm 0 param/938))
                        (raise
                          (makeblock 0 (global Assert_failure/28!)
                            [0: "src/SelectiveExpansion.ml" 168 6])))))
                global_attributes/944 =
                  (function nt/946
                    (let
                      (param/947 =
                         (makeblock 0
                           (apply
                             (field_imm 2
                               (global Dune__exe__SelectiveExpansion!))
                             nt/946)))
                      (apply (field_imm 13 (global Stdlib__List!))
                        (apply (field_imm 19 (global Stdlib__List!))
                          (function (param/4861, param/4862)
                            (let
                              (attrs/949 =a param/4862
                               params/948 =a param/4861)
                              (if
                                (apply (field_imm 33 (global Stdlib__List!))
                                  (apply
                                    (field_imm 9
                                      (global Dune__exe__Parameters!))
                                    param/947)
                                  params/948)
                                attrs/949 0)))
                          (field_imm 8 (field_imm 2 G/933)))))))
               (catch
                 (let
                   (queue/953 =
                      (apply (field_imm 1 (global Stdlib__Queue!)) 0)
                    enqueue/996 =
                      (function label/1000 : int
                        (apply (field_imm 2 (global Stdlib__Queue!))
                          label/1000 queue/953))
                    repeatedly/997 =
                      (function visit/1001 : int
                        (apply (field_imm 18 (global Dune__exe__Misc!))
                          visit/1001 queue/953))
                    repeatedly/4909 =a repeatedly/997
                    enqueue/4908 =a enqueue/996)
                   (exit 40 enqueue/4908 repeatedly/4909))
                with (40 enqueue/951 repeatedly/952)
                 (catch
                   (let
                     (H/1096 =
                        (apply
                          (let
                            (let/4863 =
                               (field_imm 25 (global Stdlib__Hashtbl!)))
                            (field_imm 25 (global Stdlib__Hashtbl!)))
                          (field_imm 3
                            (global Dune__exe__SelectiveExpansion!)))
                      table/1097 = (apply (field_imm 0 H/1096) 128)
                      mark/1146 =
                        (function label/1150 : int
                          (apply (field_imm 4 H/1096) table/1097 label/1150
                            0))
                      marked/1147 =
                        (function label/1151 : int
                          (apply (field_imm 10 H/1096) table/1097 label/1151))
                      marked/4907 =a marked/1147
                      mark/4906 =a mark/1146)
                     (exit 37 mark/4906 marked/4907))
                  with (37 mark/1002 marked/1003)
                   (catch
                     (let
                       (rules/1154 =
                          (makemutable 0
                            (field_imm 0 (global Dune__exe__StringMap!)))
                        emit/1155 =
                          (function rule/1158 : int
                            (seq
                              (if
                                (not
                                  (apply
                                    (field_imm 29
                                      (global Dune__exe__StringMap!))
                                    (field_imm 2 rule/1158)
                                    (field_mut 0 rules/1154)))
                                0
                                (raise
                                  (makeblock 0 (global Assert_failure/28!)
                                    [0: "src/SelectiveExpansion.ml" 219 4])))
                              (setfield_ptr 0 rules/1154
                                (apply
                                  (field_imm 1
                                    (global Dune__exe__StringMap!))
                                  (field_imm 2 rule/1158) rule/1158
                                  (field_mut 0 rules/1154)))))
                        rules/1156 =
                          (function param/1159[int] (field_mut 0 rules/1154))
                        rules/4905 =a rules/1156
                        emit/4904 =a emit/1155)
                       (exit 34 emit/4904 rules/4905))
                    with (34 emit/1152 rules/1153)
                     (let
                       (new_claim/1160 =
                          (function param/1273[int]
                            (let
                              (names/1162 =
                                 (makemutable 0
                                   (field_imm 0
                                     (global Dune__exe__StringSet!)))
                               claim/1209 =
                                 (function name/1211 : int
                                   (seq
                                     (if
                                       (apply
                                         (field_imm 29
                                           (global Dune__exe__StringSet!))
                                         name/1211 (field_mut 0 names/1162))
                                       (apply
                                         (field_imm 5
                                           (global Dune__exe__Error!))
                                         0
                                         [0:
                                          [11:
                                           "internal name clash over "
                                           [2: 0 0]]
                                          "internal name clash over %s"]
                                         name/1211)
                                       0)
                                     (setfield_ptr 0 names/1162
                                       (apply
                                         (field_imm 1
                                           (global Dune__exe__StringSet!))
                                         name/1211 (field_mut 0 names/1162))))))
                              claim/1209))
                        mangle/1274 =
                          (let
                            (ensure_fresh/1275 = (apply new_claim/1160 0)
                             M/1385 =
                               (apply
                                 (let
                                   (let/4864 =
                                      (field_imm 2
                                        (global Vendored_fix__Memoize!)))
                                   (field_imm 2
                                     (global Vendored_fix__Memoize!)))
                                 (field_imm 3
                                   (global Dune__exe__SelectiveExpansion!))))
                            (apply (field_imm 0 M/1385)
                              (function label/1386
                                (let
                                  (name/1387 =
                                     (apply
                                       (field_imm 5
                                         (global Dune__exe__SelectiveExpansion!))
                                       label/1386))
                                  (seq
                                    (apply ensure_fresh/1275
                                      (apply
                                        (field_imm 21
                                          (global Dune__exe__Misc!))
                                        name/1387))
                                    name/1387))))))
                       (letrec
                         (recognize/1388
                            (function param/1389
                              (switch* param/1389
                               case tag 0:
                                (let
                                  (*match*/4878 =a (field_imm 0 param/1389))
                                  param/1389)
                               case tag 1:
                                (let
                                  (ps/1391 =a (field_imm 1 param/1389)
                                   sym/1390 =a (field_imm 0 param/1389))
                                  (seq
                                    (if (!= ps/1391 0) 0
                                      (raise
                                        (makeblock 0
                                          (global Assert_failure/28!)
                                          [0:
                                           "src/SelectiveExpansion.ml" 292 6])))
                                    (let
                                      (x/1392 =
                                         (apply
                                           (field_imm 1
                                             (global Dune__exe__SelectiveExpansion!))
                                           sym/1390))
                                      (catch
                                        (let
                                          (*match*/4872 = (field_imm 0 G/933))
                                          (if *match*/4872
                                            (let
                                              (inst/1395 =
                                                 (apply
                                                   (field_imm 19
                                                     (global Stdlib__List!))
                                                   (function p/1397
                                                     (makeblock 0 p/1397))
                                                   ps/1391)
                                               residuals/1396 = 0
                                               residuals/4876 =a
                                                 residuals/1396
                                               inst/4875 =a inst/1395)
                                              (exit 6 inst/4875
                                                residuals/4876))
                                            (let
                                              (ss/1398 =
                                                 (apply
                                                   (field_imm 1
                                                     (global Dune__exe__GroundSort!))
                                                   (apply sort/937
                                                     (makeblock 0 sym/1390))))
                                              (seq
                                                (if
                                                  (==
                                                    (apply
                                                      (field_imm 0
                                                        (global Stdlib__List!))
                                                      ps/1391)
                                                    (apply
                                                      (field_imm 0
                                                        (global Stdlib__List!))
                                                      ss/1398))
                                                  0
                                                  (raise
                                                    (makeblock 0
                                                      (global Assert_failure/28!)
                                                      [0:
                                                       "src/SelectiveExpansion.ml"
                                                       311 12])))
                                                (let
                                                  (pss/1399 =
                                                     (apply
                                                       (field_imm 57
                                                         (global Stdlib__List!))
                                                       ps/1391 ss/1398)
                                                   inst/1400 =
                                                     (apply
                                                       (field_imm 19
                                                         (global Stdlib__List!))
                                                       (function (param/4869,
                                                         param/4870)
                                                         (let
                                                           (sort/1402 =a
                                                              param/4870
                                                            param/1401 =a
                                                              param/4869)
                                                           (if
                                                             (caml_equal
                                                               sort/1402
                                                               (field_imm 0
                                                                 (global Dune__exe__GroundSort!)))
                                                             0
                                                             (makeblock 0
                                                               param/1401))))
                                                       pss/1399)
                                                   residuals/1404 =
                                                     (apply
                                                       (field_imm 19
                                                         (global Stdlib__List!))
                                                       (function (param/4865,
                                                         param/4866)
                                                         (let
                                                           (param/1405 =a
                                                              param/4865)
                                                           (apply
                                                             recognize/1388
                                                             param/1405)))
                                                       (apply
                                                         (field_imm 43
                                                           (global Stdlib__List!))
                                                         (function (param/4867,
                                                           param/4868) : int
                                                           (let
                                                             (sort/1407 =a
                                                                param/4868)
                                                             (caml_equal
                                                               sort/1407
                                                               (field_imm 0
                                                                 (global Dune__exe__GroundSort!)))))
                                                         pss/1399))
                                                   residuals/4874 =a
                                                     residuals/1404
                                                   inst/4873 =a inst/1400)
                                                  (exit 6 inst/4873
                                                    residuals/4874))))))
                                       with (6 inst/1393 residuals/1394)
                                        (let
                                          (label/1409 =
                                             (makeblock 0 x/1392 inst/1393))
                                          (seq (apply enqueue/951 label/1409)
                                            (let
                                              (sym/1410 =
                                                 (apply mangle/1274
                                                   label/1409))
                                              (apply
                                                (field_imm 0
                                                  (global Dune__exe__Parameters!))
                                                (apply
                                                  (field_imm 2
                                                    (global Dune__exe__SelectiveExpansion!))
                                                  sym/1410)
                                                residuals/1394))))))))
                               case tag 2:
                                (let
                                  (*match*/4877 =a (field_imm 0 param/1389))
                                  (raise
                                    (makeblock 0 (global Assert_failure/28!)
                                      [0: "src/SelectiveExpansion.ml" 288 6]))))))
                         (let
                           (subst_parameter/1411 =
                              (function env/1412 param/1413
                                (apply recognize/1388
                                  (apply
                                    (field_imm 8
                                      (global Dune__exe__SelectiveExpansion!))
                                    env/1412 param/1413)))
                            subst_producer/1414 =
                              (function env/1416 param/1421
                                (let
                                  (attrs/1419 =a (field_imm 2 param/1421)
                                   param/1418 =a (field_imm 1 param/1421)
                                   id/1417 =a (field_imm 0 param/1421)
                                   param/1420 =
                                     (apply subst_parameter/1411 env/1416
                                       param/1418))
                                  (makeblock 0 id/1417 param/1420 attrs/1419)))
                            subst_producers/1422 =
                              (function env/1424 producers/1425
                                (apply (field_imm 19 (global Stdlib__List!))
                                  (apply subst_producer/1414 env/1424)
                                  producers/1425))
                            subst_branch/1426 =
                              (function env/1428 branch/1429
                                (let (init/4879 = branch/1429)
                                  (makeblock 0 (field_imm 0 init/4879)
                                    (apply subst_producers/1422 env/1428
                                      (field_imm 1 branch/1429))
                                    (field_imm 2 init/4879)
                                    (field_imm 3 init/4879)
                                    (field_imm 4 init/4879))))
                            subst_branches/1430 =
                              (function env/1432 branches/1433
                                (apply (field_imm 19 (global Stdlib__List!))
                                  (apply subst_branch/1426 env/1432)
                                  branches/1433))
                            freshen/1434 =
                              (let (c/1435 = (makemutable 0 (int) 0))
                                (function x/1436
                                  (apply
                                    (field_imm 3 (global Stdlib__Printf!))
                                    [0:
                                     [2: 0 [11: "__menhir__" [4: 0 0 0 0]]]
                                     "%s__menhir__%d"]
                                    x/1436
                                    (apply
                                      (field_imm 22
                                        (global Dune__exe__Misc!))
                                      c/1435))))
                            instantiation_env/1437 =
                              (function formals/1439 inst/1440
                                (seq
                                  (if
                                    (==
                                      (apply
                                        (field_imm 0 (global Stdlib__List!))
                                        formals/1439)
                                      (apply
                                        (field_imm 0 (global Stdlib__List!))
                                        inst/1440))
                                    0
                                    (raise
                                      (makeblock 0
                                        (global Assert_failure/28!)
                                        [0:
                                         "src/SelectiveExpansion.ml" 369 2])))
                                  (let
                                    (*match*/4887 =
                                       (apply
                                         (field_imm 31
                                           (global Stdlib__List!))
                                         (function formal/1443 po/1444
                                           param/1451
                                           (let
                                             (residuals/1446 =a
                                                (field_imm 1 param/1451)
                                              env/1445 =a
                                                (field_imm 0 param/1451))
                                             (catch
                                               (if (isint po/1444)
                                                 (let
                                                   (formal/1450 =
                                                      (apply freshen/1434
                                                        formal/1443)
                                                    residuals/4883 =
                                                      (makeblock 0
                                                        formal/1450
                                                        residuals/1446)
                                                    param/4882 =
                                                      (makeblock 0
                                                        (apply
                                                          (field_imm 2
                                                            (global Dune__exe__SelectiveExpansion!))
                                                          formal/1450)))
                                                   (exit 11 param/4882
                                                     residuals/4883))
                                                 (let
                                                   (param/1449 =a
                                                      (field_imm 0 po/1444)
                                                    residuals/4881 =a
                                                      residuals/1446
                                                    param/4880 =a param/1449)
                                                   (exit 11 param/4880
                                                     residuals/4881)))
                                              with (11 param/1447 residuals/1448)
                                               (makeblock 0
                                                 (apply
                                                   (field_imm 1
                                                     (global Dune__exe__StringMap!))
                                                   formal/1443 param/1447
                                                   env/1445)
                                                 residuals/1448))))
                                         formals/1439 inst/1440
                                         (makeblock 0
                                           (field_imm 0
                                             (global Dune__exe__StringMap!))
                                           0))
                                     residuals/1442 =a
                                       (field_imm 1 *match*/4887)
                                     env/1441 =a (field_imm 0 *match*/4887))
                                    (makeblock 0 env/1441 residuals/1442))))
                            visit/1452 =
                              (function label/1454 : int
                                (if (not (apply marked/1003 label/1454))
                                  (seq (apply mark/1002 label/1454)
                                    (let
                                      (inst/1456 =a (field_imm 1 label/1454)
                                       nt/1455 =a (field_imm 0 label/1454)
                                       rule/1457 =
                                         (apply
                                           (field_imm 15
                                             (global Dune__exe__StringMap!))
                                           nt/1455
                                           (field_imm 9 (field_imm 2 G/933)))
                                       formals/1458 = (field_imm 5 rule/1457)
                                       *match*/4892 =
                                         (apply instantiation_env/1437
                                           formals/1458 inst/1456)
                                       residuals/1460 =a
                                         (field_imm 1 *match*/4892)
                                       env/1459 =a (field_imm 0 *match*/4892))
                                      (apply emit/1152
                                        (let (init/4888 = rule/1457)
                                          (makeblock 0 (int,int,*,*,*,*,*)
                                            (field_int 0 init/4888)
                                            (field_int 1 init/4888)
                                            (apply mangle/1274 label/1454)
                                            (field_imm 3 init/4888)
                                            (apply
                                              (field_imm 36 (global Stdlib!))
                                              (if (== formals/1458 0) 0
                                                (apply global_attributes/944
                                                  nt/1455))
                                              (field_imm 4 rule/1457))
                                            residuals/1460
                                            (apply subst_branches/1430
                                              env/1459
                                              (field_imm 6 rule/1457)))))))
                                  0))
                            *match*/4901 =
                              (apply
                                (field_imm 21 (global Dune__exe__StringMap!))
                                (function nt/1461 prule/1462 : int
                                  (if (== (field_imm 5 prule/1462) 0)
                                    (let
                                      (label/1463 = (makeblock 0 nt/1461 0))
                                      (apply enqueue/951 label/1463))
                                    0))
                                (field_imm 9 (field_imm 2 G/933)))
                            subst_parameter/1464 =
                              (function param/1465
                                (apply subst_parameter/1411
                                  (field_imm 0
                                    (global Dune__exe__StringMap!))
                                  param/1465))
                            subst_declaration/1466 =
                              (function (param/4895, param/4896)
                                (let
                                  (info/1469 =a param/4896
                                   param/1468 =a param/4895)
                                  (seq
                                    (if
                                      (caml_equal (apply sort/937 param/1468)
                                        (field_imm 0
                                          (global Dune__exe__GroundSort!)))
                                      0
                                      (raise
                                        (makeblock 0
                                          (global Assert_failure/28!)
                                          [0:
                                           "src/SelectiveExpansion.ml" 452 2])))
                                    (makeblock 0
                                      (apply subst_parameter/1464 param/1468)
                                      info/1469))))
                            subst_declarations/1471 =
                              (function decls/1473
                                (apply (field_imm 19 (global Stdlib__List!))
                                  subst_declaration/1466 decls/1473))
                            thingify_parameter/1477 =
                              (function param/1479
                                (if
                                  (caml_equal (apply sort/937 param/1479)
                                    (field_imm 0
                                      (global Dune__exe__GroundSort!)))
                                  (makeblock 0
                                    (apply subst_parameter/1464 param/1479))
                                  (makeblock 1 param/1479)))
                            thingify_attribute_declaration/1480 =
                              (function (param/4897, param/4898)
                                (let
                                  (attrs/1483 =a param/4898
                                   params/1482 =a param/4897)
                                  (makeblock 0
                                    (apply
                                      (field_imm 19 (global Stdlib__List!))
                                      thingify_parameter/1477 params/1482)
                                    attrs/1483)))
                            thingify_attribute_declarations/1485 =
                              (function decls/1487
                                (apply (field_imm 19 (global Stdlib__List!))
                                  thingify_attribute_declaration/1480
                                  decls/1487))
                            unthingify_parameter/1488 =
                              (function rules/1490 thing/1491
                                (switch* thing/1491
                                 case tag 0:
                                  (let
                                    (param/1492 =a (field_imm 0 thing/1491))
                                    (makeblock 0 param/1492))
                                 case tag 1:
                                  (let
                                    (param/1493 =a (field_imm 0 thing/1491)
                                     symbol/1494 =
                                       (apply
                                         (field_imm 1
                                           (global Dune__exe__SelectiveExpansion!))
                                         (apply
                                           (field_imm 2
                                             (global Dune__exe__Parameters!))
                                           param/1493)))
                                    (if
                                      (apply
                                        (field_imm 29
                                          (global Dune__exe__StringMap!))
                                        symbol/1494 rules/1490)
                                      (makeblock 0 param/1493) 0))))
                            unthingify_attribute_declaration/1495 =
                              (function rules/1497 param/1500
                                (let
                                  (attrs/1499 =a (field_imm 1 param/1500)
                                   params/1498 =a (field_imm 0 param/1500))
                                  (makeblock 0
                                    (apply
                                      (field_imm 23
                                        (global Dune__exe__Misc!))
                                      (apply unthingify_parameter/1488
                                        rules/1497)
                                      params/1498)
                                    attrs/1499)))
                            unthingify_attribute_declarations/1501 =
                              (function rules/1503 decls/1504
                                (apply (field_imm 19 (global Stdlib__List!))
                                  (apply
                                    unthingify_attribute_declaration/1495
                                    rules/1503)
                                  decls/1504))
                            g/1505 =
                              (let
                                (p_types/1506 =
                                   (apply subst_declarations/1471
                                     (field_imm 4 (field_imm 2 G/933)))
                                 p_on_error_reduce/1507 =
                                   (apply subst_declarations/1471
                                     (field_imm 6 (field_imm 2 G/933)))
                                 things/1508 =
                                   (apply
                                     thingify_attribute_declarations/1485
                                     (field_imm 8 (field_imm 2 G/933))))
                                (seq (apply repeatedly/952 visit/1452)
                                  (let
                                    (p_rules/1509 = (apply rules/1153 0)
                                     p_symbol_attributes/1510 =
                                       (apply
                                         unthingify_attribute_declarations/1501
                                         p_rules/1509 things/1508)
                                     init/4899 = (field_imm 2 G/933))
                                    (makeblock 0 (field_imm 0 init/4899)
                                      (field_imm 1 init/4899)
                                      (field_imm 2 init/4899)
                                      (field_imm 3 init/4899) p_types/1506
                                      (field_imm 5 init/4899)
                                      p_on_error_reduce/1507
                                      (field_imm 7 init/4899)
                                      p_symbol_attributes/1510 p_rules/1509)))))
                           (makeblock 0 sort/937 global_attributes/944
                             enqueue/951 repeatedly/952 mark/1002 marked/1003
                             emit/1152 rules/1153 new_claim/1160 mangle/1274
                             recognize/1388 subst_producer/1414
                             subst_producers/1422 subst_branch/1426
                             subst_branches/1430 freshen/1434
                             instantiation_env/1437 visit/1452
                             subst_parameter/1464 subst_declaration/1466
                             subst_declarations/1471 thingify_parameter/1477
                             thingify_attribute_declaration/1480
                             thingify_attribute_declarations/1485
                             unthingify_parameter/1488
                             unthingify_attribute_declaration/1495
                             unthingify_attribute_declarations/1501 g/1505))))))))))
        (seq
          (setfield_ptr(root-init) 10 (global Dune__exe__SelectiveExpansion!)
            Run/1511)
          (let
            (expand/1512 =
               (function mode/1514[int] sorts/1515 g/1516
                 (let
                   (G/1549 =
                      (apply
                        (field_imm 10
                          (global Dune__exe__SelectiveExpansion!))
                        (let
                          (mode/1517 =[int] mode/1514
                           sorts/1518 = sorts/1515
                           g/1519 = g/1516)
                          (makeblock 0 mode/1517 sorts/1518 g/1519))))
                   (field_imm 27 G/1549))))
            (setfield_ptr(root-init) 0
              (global Dune__exe__SelectiveExpansion!) expand/1512))
          0)))))
(seq
  (let (value/397 = (field_imm 0 (global Dune__exe__Positions!)))
    (setfield_ptr(root-init) 1 (global Dune__exe__SelectiveExpansion!)
      value/397))
  (let (unknown/433 = (field_imm 6 (global Dune__exe__Positions!)))
    (setfield_ptr(root-init) 2 (global Dune__exe__SelectiveExpansion!)
      unknown/433))
  (let
    (equal/513 =
       (function param/612 param/611 : int
         (&& (caml_equal (field_imm 0 param/612) (field_imm 0 param/611))
           (apply (field_imm 34 (global Stdlib__List!))
             (apply (field_imm 6 (global Dune__exe__Option!))
               (field_imm 9 (global Dune__exe__Parameters!)))
             (field_imm 1 param/612) (field_imm 1 param/611)))))
    (setfield_ptr(root-init) 11 (global Dune__exe__SelectiveExpansion!)
      equal/513))
  (let
    (hash/613 =
       (function (param/4849, param/4850) : int
         (apply (field_imm 27 (global Stdlib__Hashtbl!))
           (makeblock 0 (*,int) param/4849
             (apply (field_imm 1 (field_imm 30 (global Dune__exe__Misc!)))
               (apply (field_imm 7 (global Dune__exe__Option!))
                 (field_imm 10 (global Dune__exe__Parameters!)))
               param/4850)))))
    (setfield_ptr(root-init) 12 (global Dune__exe__SelectiveExpansion!)
      hash/613))
  0
  (let
    (Label/731 =
       (makeblock 0 (field_imm 11 (global Dune__exe__SelectiveExpansion!))
         (field_imm 12 (global Dune__exe__SelectiveExpansion!))))
    (seq
      (setfield_ptr(root-init) 3 (global Dune__exe__SelectiveExpansion!)
        Label/731)
      (let
        (mangle_po/732 =
           (function po/734
             (if (isint po/734) "_"
               (apply (field_imm 13 (global Dune__exe__Parameters!)) 0
                 (field_imm 0 po/734)))))
        (setfield_ptr(root-init) 4 (global Dune__exe__SelectiveExpansion!)
          mangle_po/732))
      (let
        (mangle/736 =
           (function (param/4851, param/4852)
             (if (== param/4852 0) param/4851
               (apply (field_imm 3 (global Stdlib__Printf!))
                 [0: [2: 0 [12: '(' [2: 0 [12: ')' 0]]]] "%s(%s)"] param/4851
                 (apply (field_imm 6 (global Dune__exe__Misc!))
                   (field_imm 4 (global Dune__exe__SelectiveExpansion!)) ","
                   param/4852)))))
        (setfield_ptr(root-init) 5 (global Dune__exe__SelectiveExpansion!)
          mangle/736))
      (let
        (subst_symbol/875 =
           (function env/877 sym/878
             (try
               (apply (field_imm 15 (global Dune__exe__StringMap!))
                 (apply (field_imm 1 (global Dune__exe__SelectiveExpansion!))
                   sym/878)
                 env/877)
              with exn/4853
               (if (== exn/4853 (field_imm 7 (global Stdlib!)))
                 (makeblock 0 sym/878) (reraise exn/4853)))))
        (setfield_ptr(root-init) 6 (global Dune__exe__SelectiveExpansion!)
          subst_symbol/875))
      (let
        (apply/914 =
           (function param/916 params/917
             (switch* param/916
              case tag 0:
               (seq
                 (if (!= params/917 0) 0
                   (raise
                     (makeblock 0 (global Assert_failure/28!)
                       [0: "src/SelectiveExpansion.ml" 104 6])))
                 (makeblock 1 (field_imm 0 param/916) params/917))
              case tag 1:
               (raise
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "src/SelectiveExpansion.ml" 110 6]))
              case tag 2:
               (raise
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "src/SelectiveExpansion.ml" 113 6])))))
        (setfield_ptr(root-init) 7 (global Dune__exe__SelectiveExpansion!)
          apply/914))
      (letrec
        (subst_parameter/919
           (function env/921 param/922
             (switch* param/922
              case tag 0:
               (apply (field_imm 6 (global Dune__exe__SelectiveExpansion!))
                 env/921 (field_imm 0 param/922))
              case tag 1:
               (let (params/925 =a (field_imm 1 param/922))
                 (seq
                   (if (!= params/925 0) 0
                     (raise
                       (makeblock 0 (global Assert_failure/28!)
                         [0: "src/SelectiveExpansion.ml" 120 6])))
                   (apply
                     (field_imm 7 (global Dune__exe__SelectiveExpansion!))
                     (apply
                       (field_imm 6 (global Dune__exe__SelectiveExpansion!))
                       env/921 (field_imm 0 param/922))
                     (apply subst_parameters/920 env/921 params/925))))
              case tag 2:
               (raise
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "src/SelectiveExpansion.ml" 124 6]))))
          subst_parameters/920
            (function env/926 params/927
              (apply (field_imm 19 (global Stdlib__List!))
                (apply subst_parameter/919 env/926) params/927)))
        (seq
          (setfield_ptr(root-init) 8 (global Dune__exe__SelectiveExpansion!)
            subst_parameter/919)
          (setfield_ptr(root-init) 9 (global Dune__exe__SelectiveExpansion!)
            subst_parameters/920)))
      (let
        (Run/1511 =
           (function G/4910 is_a_functor
             (let
               (sort/934 =
                  (function symbol/936
                    (try
                      (apply (field_imm 15 (global Dune__exe__StringMap!))
                        (apply
                          (field_imm 1
                            (global Dune__exe__SelectiveExpansion!))
                          symbol/936)
                        (field_imm 1 G/4910))
                     with exn/4858
                      (if (== exn/4858 (field_imm 7 (global Stdlib!)))
                        (raise
                          (makeblock 0 (global Assert_failure/28!)
                            [0: "src/SelectiveExpansion.ml" 157 4]))
                        (reraise exn/4858))))
                sort/937 =
                  (function param/938
                    (switch* param/938
                     case tag 0: (apply sort/934 (field_imm 0 param/938))
                     case tag 1:
                      (seq
                        (if (!= (field_imm 1 param/938) 0) 0
                          (raise
                            (makeblock 0 (global Assert_failure/28!)
                              [0: "src/SelectiveExpansion.ml" 164 6])))
                        (field_imm 0 (global Dune__exe__GroundSort!)))
                     case tag 2:
                      (raise
                        (makeblock 0 (global Assert_failure/28!)
                          [0: "src/SelectiveExpansion.ml" 168 6]))))
                global_attributes/944 =
                  (function nt/946
                    (let
                      (param/947 =
                         (makeblock 0
                           (apply
                             (field_imm 2
                               (global Dune__exe__SelectiveExpansion!))
                             nt/946)))
                      (apply (field_imm 13 (global Stdlib__List!))
                        (apply (field_imm 19 (global Stdlib__List!))
                          (function (param/4861, param/4862)
                            (if
                              (apply (field_imm 33 (global Stdlib__List!))
                                (apply
                                  (field_imm 9
                                    (global Dune__exe__Parameters!))
                                  param/947)
                                param/4861)
                              param/4862 0))
                          (field_imm 8 (field_imm 2 G/4910))))))
                queue/953 = (apply (field_imm 1 (global Stdlib__Queue!)) 0)
                enqueue/996 =
                  (function label/1000 : int
                    (apply (field_imm 2 (global Stdlib__Queue!)) label/1000
                      queue/953))
                repeatedly/997 =
                  (function visit/1001 : int
                    (apply (field_imm 18 (global Dune__exe__Misc!))
                      visit/1001 queue/953))
                H/1096 =
                  (apply
                    (let
                      (let/4863 = (field_imm 25 (global Stdlib__Hashtbl!)))
                      (field_imm 25 (global Stdlib__Hashtbl!)))
                    (field_imm 3 (global Dune__exe__SelectiveExpansion!)))
                table/1097 = (apply (field_imm 0 H/1096) 128)
                mark/1146 =
                  (function label/1150 : int
                    (apply (field_imm 4 H/1096) table/1097 label/1150 0))
                marked/1147 =
                  (function label/1151 : int
                    (apply (field_imm 10 H/1096) table/1097 label/1151))
                rules/1154 =
                  (makemutable 0
                    (field_imm 0 (global Dune__exe__StringMap!)))
                emit/1155 =
                  (function rule/1158 : int
                    (seq
                      (if
                        (not
                          (apply
                            (field_imm 29 (global Dune__exe__StringMap!))
                            (field_imm 2 rule/1158) (field_mut 0 rules/1154)))
                        0
                        (raise
                          (makeblock 0 (global Assert_failure/28!)
                            [0: "src/SelectiveExpansion.ml" 219 4])))
                      (setfield_ptr 0 rules/1154
                        (apply (field_imm 1 (global Dune__exe__StringMap!))
                          (field_imm 2 rule/1158) rule/1158
                          (field_mut 0 rules/1154)))))
                rules/1156 =
                  (function param/1159[int] (field_mut 0 rules/1154))
                new_claim/1160 =
                  (function param/1273[int]
                    (let
                      (names/1162 =
                         (makemutable 0
                           (field_imm 0 (global Dune__exe__StringSet!))))
                      (function name/1211 : int
                        (seq
                          (if
                            (apply
                              (field_imm 29 (global Dune__exe__StringSet!))
                              name/1211 (field_mut 0 names/1162))
                            (apply (field_imm 5 (global Dune__exe__Error!)) 0
                              [0:
                               [11: "internal name clash over " [2: 0 0]]
                               "internal name clash over %s"]
                              name/1211)
                            0)
                          (setfield_ptr 0 names/1162
                            (apply
                              (field_imm 1 (global Dune__exe__StringSet!))
                              name/1211 (field_mut 0 names/1162)))))))
                mangle/1274 =
                  (let
                    (ensure_fresh/1275 = (apply new_claim/1160 0)
                     M/1385 =
                       (apply
                         (let
                           (let/4864 =
                              (field_imm 2 (global Vendored_fix__Memoize!)))
                           (field_imm 2 (global Vendored_fix__Memoize!)))
                         (field_imm 3
                           (global Dune__exe__SelectiveExpansion!))))
                    (apply (field_imm 0 M/1385)
                      (function label/1386
                        (let
                          (name/1387 =
                             (apply
                               (field_imm 5
                                 (global Dune__exe__SelectiveExpansion!))
                               label/1386))
                          (seq
                            (apply ensure_fresh/1275
                              (apply (field_imm 21 (global Dune__exe__Misc!))
                                name/1387))
                            name/1387))))))
               (letrec
                 (recognize/1388
                    (function param/1389
                      (switch* param/1389
                       case tag 0: param/1389
                       case tag 1:
                        (let
                          (ps/1391 =a (field_imm 1 param/1389)
                           sym/1390 =a (field_imm 0 param/1389))
                          (seq
                            (if (!= ps/1391 0) 0
                              (raise
                                (makeblock 0 (global Assert_failure/28!)
                                  [0: "src/SelectiveExpansion.ml" 292 6])))
                            (let
                              (x/1392 =
                                 (apply
                                   (field_imm 1
                                     (global Dune__exe__SelectiveExpansion!))
                                   sym/1390))
                              (catch
                                (let (*match*/4872 = (field_imm 0 G/4910))
                                  (if *match*/4872
                                    (let
                                      (inst/1395 =
                                         (apply
                                           (field_imm 19
                                             (global Stdlib__List!))
                                           (function p/1397
                                             (makeblock 0 p/1397))
                                           ps/1391)
                                       residuals/1396 = 0)
                                      (exit 6 inst/1395 residuals/1396))
                                    (let
                                      (ss/1398 =
                                         (apply
                                           (field_imm 1
                                             (global Dune__exe__GroundSort!))
                                           (apply sort/937
                                             (makeblock 0 sym/1390))))
                                      (seq
                                        (if
                                          (==
                                            (apply
                                              (field_imm 0
                                                (global Stdlib__List!))
                                              ps/1391)
                                            (apply
                                              (field_imm 0
                                                (global Stdlib__List!))
                                              ss/1398))
                                          0
                                          (raise
                                            (makeblock 0
                                              (global Assert_failure/28!)
                                              [0:
                                               "src/SelectiveExpansion.ml"
                                               311 12])))
                                        (let
                                          (pss/1399 =
                                             (apply
                                               (field_imm 57
                                                 (global Stdlib__List!))
                                               ps/1391 ss/1398)
                                           inst/1400 =
                                             (apply
                                               (field_imm 19
                                                 (global Stdlib__List!))
                                               (function (param/4869,
                                                 param/4870)
                                                 (if
                                                   (caml_equal param/4870
                                                     (field_imm 0
                                                       (global Dune__exe__GroundSort!)))
                                                   0
                                                   (makeblock 0 param/4869)))
                                               pss/1399)
                                           residuals/1404 =
                                             (apply
                                               (field_imm 19
                                                 (global Stdlib__List!))
                                               (function (param/4865,
                                                 param/4866)
                                                 (apply recognize/1388
                                                   param/4865))
                                               (apply
                                                 (field_imm 43
                                                   (global Stdlib__List!))
                                                 (function (param/4867,
                                                   param/4868) : int
                                                   (caml_equal param/4868
                                                     (field_imm 0
                                                       (global Dune__exe__GroundSort!))))
                                                 pss/1399)))
                                          (exit 6 inst/1400 residuals/1404))))))
                               with (6 inst/1393 residuals/1394)
                                (let
                                  (label/1409 =
                                     (makeblock 0 x/1392 inst/1393))
                                  (seq (apply enqueue/996 label/1409)
                                    (let
                                      (sym/1410 =
                                         (apply mangle/1274 label/1409))
                                      (apply
                                        (field_imm 0
                                          (global Dune__exe__Parameters!))
                                        (apply
                                          (field_imm 2
                                            (global Dune__exe__SelectiveExpansion!))
                                          sym/1410)
                                        residuals/1394))))))))
                       case tag 2:
                        (raise
                          (makeblock 0 (global Assert_failure/28!)
                            [0: "src/SelectiveExpansion.ml" 288 6])))))
                 (let
                   (subst_parameter/1411 =
                      (function env/1412 param/1413
                        (apply recognize/1388
                          (apply
                            (field_imm 8
                              (global Dune__exe__SelectiveExpansion!))
                            env/1412 param/1413)))
                    subst_producer/1414 =
                      (function env/1416 param/1421
                        (let
                          (param/1420 =
                             (apply subst_parameter/1411 env/1416
                               (field_imm 1 param/1421)))
                          (makeblock 0 (field_imm 0 param/1421) param/1420
                            (field_imm 2 param/1421))))
                    subst_producers/1422 =
                      (function env/1424 producers/1425
                        (apply (field_imm 19 (global Stdlib__List!))
                          (apply subst_producer/1414 env/1424)
                          producers/1425))
                    subst_branch/1426 =
                      (function env/1428 branch/1429
                        (makeblock 0 (field_imm 0 branch/1429)
                          (apply subst_producers/1422 env/1428
                            (field_imm 1 branch/1429))
                          (field_imm 2 branch/1429) (field_imm 3 branch/1429)
                          (field_imm 4 branch/1429)))
                    subst_branches/1430 =
                      (function env/1432 branches/1433
                        (apply (field_imm 19 (global Stdlib__List!))
                          (apply subst_branch/1426 env/1432) branches/1433))
                    freshen/1434 =
                      (let (c/1435 = (makemutable 0 (int) 0))
                        (function x/1436
                          (apply (field_imm 3 (global Stdlib__Printf!))
                            [0:
                             [2: 0 [11: "__menhir__" [4: 0 0 0 0]]]
                             "%s__menhir__%d"]
                            x/1436
                            (apply (field_imm 22 (global Dune__exe__Misc!))
                              c/1435))))
                    instantiation_env/1437 =
                      (function formals/1439 inst/1440
                        (seq
                          (if
                            (==
                              (apply (field_imm 0 (global Stdlib__List!))
                                formals/1439)
                              (apply (field_imm 0 (global Stdlib__List!))
                                inst/1440))
                            0
                            (raise
                              (makeblock 0 (global Assert_failure/28!)
                                [0: "src/SelectiveExpansion.ml" 369 2])))
                          (let
                            (*match*/4887 =
                               (apply (field_imm 31 (global Stdlib__List!))
                                 (function formal/1443 po/1444 param/1451
                                   (let
                                     (residuals/1446 =a
                                        (field_imm 1 param/1451))
                                     (catch
                                       (if (isint po/1444)
                                         (let
                                           (formal/1450 =
                                              (apply freshen/1434
                                                formal/1443)
                                            residuals/4883 =
                                              (makeblock 0 formal/1450
                                                residuals/1446)
                                            param/4882 =
                                              (makeblock 0
                                                (apply
                                                  (field_imm 2
                                                    (global Dune__exe__SelectiveExpansion!))
                                                  formal/1450)))
                                           (exit 11 param/4882
                                             residuals/4883))
                                         (exit 11 (field_imm 0 po/1444)
                                           residuals/1446))
                                      with (11 param/1447 residuals/1448)
                                       (makeblock 0
                                         (apply
                                           (field_imm 1
                                             (global Dune__exe__StringMap!))
                                           formal/1443 param/1447
                                           (field_imm 0 param/1451))
                                         residuals/1448))))
                                 formals/1439 inst/1440
                                 (makeblock 0
                                   (field_imm 0
                                     (global Dune__exe__StringMap!))
                                   0)))
                            (makeblock 0 (field_imm 0 *match*/4887)
                              (field_imm 1 *match*/4887)))))
                    visit/1452 =
                      (function label/1454 : int
                        (if (not (apply marked/1147 label/1454))
                          (seq (apply mark/1146 label/1454)
                            (let
                              (nt/1455 =a (field_imm 0 label/1454)
                               rule/1457 =
                                 (apply
                                   (field_imm 15
                                     (global Dune__exe__StringMap!))
                                   nt/1455
                                   (field_imm 9 (field_imm 2 G/4910)))
                               formals/1458 = (field_imm 5 rule/1457)
                               *match*/4892 =
                                 (apply instantiation_env/1437 formals/1458
                                   (field_imm 1 label/1454)))
                              (apply emit/1155
                                (makeblock 0 (int,int,*,*,*,*,*)
                                  (field_int 0 rule/1457)
                                  (field_int 1 rule/1457)
                                  (apply mangle/1274 label/1454)
                                  (field_imm 3 rule/1457)
                                  (apply (field_imm 36 (global Stdlib!))
                                    (if (== formals/1458 0) 0
                                      (apply global_attributes/944 nt/1455))
                                    (field_imm 4 rule/1457))
                                  (field_imm 1 *match*/4892)
                                  (apply subst_branches/1430
                                    (field_imm 0 *match*/4892)
                                    (field_imm 6 rule/1457))))))
                          0))
                    *match*/4901 =
                      (apply (field_imm 21 (global Dune__exe__StringMap!))
                        (function nt/1461 prule/1462 : int
                          (if (== (field_imm 5 prule/1462) 0)
                            (let (label/1463 = (makeblock 0 nt/1461 0))
                              (apply enqueue/996 label/1463))
                            0))
                        (field_imm 9 (field_imm 2 G/4910)))
                    subst_parameter/1464 =
                      (function param/1465
                        (apply subst_parameter/1411
                          (field_imm 0 (global Dune__exe__StringMap!))
                          param/1465))
                    subst_declaration/1466 =
                      (function (param/4895, param/4896)
                        (seq
                          (if
                            (caml_equal (apply sort/937 param/4895)
                              (field_imm 0 (global Dune__exe__GroundSort!)))
                            0
                            (raise
                              (makeblock 0 (global Assert_failure/28!)
                                [0: "src/SelectiveExpansion.ml" 452 2])))
                          (makeblock 0
                            (apply subst_parameter/1464 param/4895)
                            param/4896)))
                    subst_declarations/1471 =
                      (function decls/1473
                        (apply (field_imm 19 (global Stdlib__List!))
                          subst_declaration/1466 decls/1473))
                    thingify_parameter/1477 =
                      (function param/1479
                        (if
                          (caml_equal (apply sort/937 param/1479)
                            (field_imm 0 (global Dune__exe__GroundSort!)))
                          (makeblock 0
                            (apply subst_parameter/1464 param/1479))
                          (makeblock 1 param/1479)))
                    thingify_attribute_declaration/1480 =
                      (function (param/4897, param/4898)
                        (makeblock 0
                          (apply (field_imm 19 (global Stdlib__List!))
                            thingify_parameter/1477 param/4897)
                          param/4898))
                    thingify_attribute_declarations/1485 =
                      (function decls/1487
                        (apply (field_imm 19 (global Stdlib__List!))
                          thingify_attribute_declaration/1480 decls/1487))
                    unthingify_parameter/1488 =
                      (function rules/1490 thing/1491
                        (switch* thing/1491
                         case tag 0: (makeblock 0 (field_imm 0 thing/1491))
                         case tag 1:
                          (let
                            (param/1493 =a (field_imm 0 thing/1491)
                             symbol/1494 =
                               (apply
                                 (field_imm 1
                                   (global Dune__exe__SelectiveExpansion!))
                                 (apply
                                   (field_imm 2
                                     (global Dune__exe__Parameters!))
                                   param/1493)))
                            (if
                              (apply
                                (field_imm 29 (global Dune__exe__StringMap!))
                                symbol/1494 rules/1490)
                              (makeblock 0 param/1493) 0))))
                    unthingify_attribute_declaration/1495 =
                      (function rules/1497 param/1500
                        (makeblock 0
                          (apply (field_imm 23 (global Dune__exe__Misc!))
                            (apply unthingify_parameter/1488 rules/1497)
                            (field_imm 0 param/1500))
                          (field_imm 1 param/1500)))
                    unthingify_attribute_declarations/1501 =
                      (function rules/1503 decls/1504
                        (apply (field_imm 19 (global Stdlib__List!))
                          (apply unthingify_attribute_declaration/1495
                            rules/1503)
                          decls/1504))
                    g/1505 =
                      (let
                        (p_types/1506 =
                           (apply subst_declarations/1471
                             (field_imm 4 (field_imm 2 G/4910)))
                         p_on_error_reduce/1507 =
                           (apply subst_declarations/1471
                             (field_imm 6 (field_imm 2 G/4910)))
                         things/1508 =
                           (apply thingify_attribute_declarations/1485
                             (field_imm 8 (field_imm 2 G/4910))))
                        (seq (apply repeatedly/997 visit/1452)
                          (let
                            (p_rules/1509 = (apply rules/1156 0)
                             p_symbol_attributes/1510 =
                               (apply unthingify_attribute_declarations/1501
                                 p_rules/1509 things/1508)
                             init/4899 = (field_imm 2 G/4910))
                            (makeblock 0 (field_imm 0 init/4899)
                              (field_imm 1 init/4899) (field_imm 2 init/4899)
                              (field_imm 3 init/4899) p_types/1506
                              (field_imm 5 init/4899) p_on_error_reduce/1507
                              (field_imm 7 init/4899)
                              p_symbol_attributes/1510 p_rules/1509)))))
                   (makeblock 0 sort/937 global_attributes/944 enqueue/996
                     repeatedly/997 mark/1146 marked/1147 emit/1155
                     rules/1156 new_claim/1160 mangle/1274 recognize/1388
                     subst_producer/1414 subst_producers/1422
                     subst_branch/1426 subst_branches/1430 freshen/1434
                     instantiation_env/1437 visit/1452 subst_parameter/1464
                     subst_declaration/1466 subst_declarations/1471
                     thingify_parameter/1477
                     thingify_attribute_declaration/1480
                     thingify_attribute_declarations/1485
                     unthingify_parameter/1488
                     unthingify_attribute_declaration/1495
                     unthingify_attribute_declarations/1501 g/1505))))))
        (seq
          (setfield_ptr(root-init) 10 (global Dune__exe__SelectiveExpansion!)
            Run/1511)
          (let
            (expand/1512 =
               (function mode/1514[int] sorts/1515 g/1516
                 (let
                   (G/1549 =
                      (apply
                        (field_imm 10
                          (global Dune__exe__SelectiveExpansion!))
                        (makeblock 0 mode/1514 sorts/1515 g/1516)))
                   (field_imm 27 G/1549))))
            (setfield_ptr(root-init) 0
              (global Dune__exe__SelectiveExpansion!) expand/1512))
          0)))))
