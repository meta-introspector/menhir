[
  structure_item (test/dynamic/semantics/calc/code/lexer.mll[2,51+2]..[2,51+13])
    Pstr_open Fresh
    module_expr (test/dynamic/semantics/calc/code/lexer.mll[2,51+7]..[2,51+13])
      Pmod_ident "Parser" (test/dynamic/semantics/calc/code/lexer.mll[2,51+7]..[2,51+13])
  structure_item (test/dynamic/semantics/calc/code/lexer.mll[4,66+2]..[4,66+27])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (test/dynamic/semantics/calc/code/lexer.mll[4,66+2]..[4,66+27])
          pext_name = "Error"
          pext_kind =
            Pext_decl
              [
                core_type (test/dynamic/semantics/calc/code/lexer.mll[4,66+21]..[4,66+27])
                  Ptyp_constr "string" (test/dynamic/semantics/calc/code/lexer.mll[4,66+21]..[4,66+27])
                  []
              ]
              None
  structure_item (test/dynamic/semantics/calc/code/lexer.ml[9,144+0]..[104,5669+1])
    Pstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/semantics/calc/code/lexer.ml[9,144+4]..[9,144+22])
          Ppat_var "__ocaml_lex_tables" (test/dynamic/semantics/calc/code/lexer.ml[9,144+4]..[9,144+22])
        expression (test/dynamic/semantics/calc/code/lexer.ml[9,144+25]..[104,5669+1])
          Pexp_record
          [
            "Lexing.lex_base" (test/dynamic/semantics/calc/code/lexer.ml[10,171+2]..[10,171+17])
              expression (test/dynamic/semantics/calc/code/lexer.ml[11,191+3]..[13,331+13])
                Pexp_constant PConst_string("\000\000\254\255\255\255\001\000\253\255\003\000\245\255\246\255\247\255\248\255\249\255\250\255\251\255\252\255\r\000\254\255\255\255",(test/dynamic/semantics/calc/code/lexer.ml[11,191+4]..[13,331+12]),None)
            "Lexing.lex_backtrk" (test/dynamic/semantics/calc/code/lexer.ml[14,346+2]..[14,346+20])
              expression (test/dynamic/semantics/calc/code/lexer.ml[15,369+3]..[17,509+13])
                Pexp_constant PConst_string("\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\002\000\255\255\255\255",(test/dynamic/semantics/calc/code/lexer.ml[15,369+4]..[17,509+12]),None)
            "Lexing.lex_default" (test/dynamic/semantics/calc/code/lexer.ml[18,524+2]..[18,524+20])
              expression (test/dynamic/semantics/calc/code/lexer.ml[19,547+3]..[21,687+13])
                Pexp_constant PConst_string("\003\000\000\000\000\000\003\000\000\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000",(test/dynamic/semantics/calc/code/lexer.ml[19,547+4]..[21,687+12]),None)
            "Lexing.lex_trans" (test/dynamic/semantics/calc/code/lexer.ml[22,702+2]..[22,702+18])
              expression (test/dynamic/semantics/calc/code/lexer.ml[23,723+3]..[56,3033+53])
                Pexp_constant PConst_string("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\002\000\016\000\015\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\b\000\011\000\r\000\000\000\012\000\007\000\ntest/dynamic/semantics/calc/code/lexer.ml[23,723+4]..[56,3033+52]),None)
            "Lexing.lex_check" (test/dynamic/semantics/calc/code/lexer.ml[57,3088+2]..[57,3088+18])
              expression (test/dynamic/semantics/calc/code/lexer.ml[58,3109+3]..[91,5419+53])
                Pexp_constant PConst_stringtest/dynamic/semantics/calc/code/lexer.ml[58,3109+4]..[91,5419+52]),None)
            "Lexing.lex_base_code" (test/dynamic/semantics/calc/code/lexer.ml[92,5474+2]..[92,5474+22])
              expression (test/dynamic/semantics/calc/code/lexer.ml[93,5499+3]..[93,5499+5])
                Pexp_constant PConst_string("",(test/dynamic/semantics/calc/code/lexer.ml[93,5499+4]..[93,5499+4]),None)
            "Lexing.lex_backtrk_code" (test/dynamic/semantics/calc/code/lexer.ml[94,5506+2]..[94,5506+25])
              expression (test/dynamic/semantics/calc/code/lexer.ml[95,5534+3]..[95,5534+5])
                Pexp_constant PConst_string("",(test/dynamic/semantics/calc/code/lexer.ml[95,5534+4]..[95,5534+4]),None)
            "Lexing.lex_default_code" (test/dynamic/semantics/calc/code/lexer.ml[96,5541+2]..[96,5541+25])
              expression (test/dynamic/semantics/calc/code/lexer.ml[97,5569+3]..[97,5569+5])
                Pexp_constant PConst_string("",(test/dynamic/semantics/calc/code/lexer.ml[97,5569+4]..[97,5569+4]),None)
            "Lexing.lex_trans_code" (test/dynamic/semantics/calc/code/lexer.ml[98,5576+2]..[98,5576+23])
              expression (test/dynamic/semantics/calc/code/lexer.ml[99,5602+3]..[99,5602+5])
                Pexp_constant PConst_string("",(test/dynamic/semantics/calc/code/lexer.ml[99,5602+4]..[99,5602+4]),None)
            "Lexing.lex_check_code" (test/dynamic/semantics/calc/code/lexer.ml[100,5609+2]..[100,5609+23])
              expression (test/dynamic/semantics/calc/code/lexer.ml[101,5635+3]..[101,5635+5])
                Pexp_constant PConst_string("",(test/dynamic/semantics/calc/code/lexer.ml[101,5635+4]..[101,5635+4]),None)
            "Lexing.lex_code" (test/dynamic/semantics/calc/code/lexer.ml[102,5642+2]..[102,5642+17])
              expression (test/dynamic/semantics/calc/code/lexer.ml[103,5662+3]..[103,5662+5])
                Pexp_constant PConst_string("",(test/dynamic/semantics/calc/code/lexer.ml[103,5662+4]..[103,5662+4]),None)
          ]
          None
    ]
  structure_item (test/dynamic/semantics/calc/code/lexer.ml[106,5672+0]..[203,8722+52])
    Pstr_value Rec
    [
      <def>
        pattern (test/dynamic/semantics/calc/code/lexer.ml[106,5672+8]..[106,5672+12])
          Ppat_var "line" (test/dynamic/semantics/calc/code/lexer.ml[106,5672+8]..[106,5672+12])
        expression (test/dynamic/semantics/calc/code/lexer.ml[106,5672+13]..[107,5694+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (test/dynamic/semantics/calc/code/lexer.ml[106,5672+13]..[106,5672+19])
            Ppat_var "lexbuf" (test/dynamic/semantics/calc/code/lexer.ml[106,5672+13]..[106,5672+19])
          expression (test/dynamic/semantics/calc/code/lexer.ml[107,5694+3]..[107,5694+32])
            Pexp_apply
            expression (test/dynamic/semantics/calc/code/lexer.ml[107,5694+3]..[107,5694+23])
              Pexp_ident "__ocaml_lex_line_rec" (test/dynamic/semantics/calc/code/lexer.ml[107,5694+3]..[107,5694+23])
            [
              <arg>
              Nolabel
                expression (test/dynamic/semantics/calc/code/lexer.ml[107,5694+24]..[107,5694+30])
                  Pexp_ident "lexbuf" (test/dynamic/semantics/calc/code/lexer.ml[107,5694+24]..[107,5694+30])
              <arg>
              Nolabel
                expression (test/dynamic/semantics/calc/code/lexer.ml[107,5694+31]..[107,5694+32])
                  Pexp_constant PConst_int (0,None)
            ]
      <def>
        pattern (test/dynamic/semantics/calc/code/lexer.ml[108,5727+4]..[108,5727+24])
          Ppat_var "__ocaml_lex_line_rec" (test/dynamic/semantics/calc/code/lexer.ml[108,5727+4]..[108,5727+24])
        expression (test/dynamic/semantics/calc/code/lexer.ml[108,5727+25]..[136,6745+51]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (test/dynamic/semantics/calc/code/lexer.ml[108,5727+25]..[108,5727+31])
            Ppat_var "lexbuf" (test/dynamic/semantics/calc/code/lexer.ml[108,5727+25]..[108,5727+31])
          expression (test/dynamic/semantics/calc/code/lexer.ml[108,5727+32]..[136,6745+51]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (test/dynamic/semantics/calc/code/lexer.ml[108,5727+32]..[108,5727+49])
              Ppat_var "__ocaml_lex_state" (test/dynamic/semantics/calc/code/lexer.ml[108,5727+32]..[108,5727+49])
            expression (test/dynamic/semantics/calc/code/lexer.ml[109,5779+2]..[136,6745+51])
              Pexp_match
              expression (test/dynamic/semantics/calc/code/lexer.ml[109,5779+8]..[109,5779+65])
                Pexp_apply
                expression (test/dynamic/semantics/calc/code/lexer.ml[109,5779+8]..[109,5779+21])
                  Pexp_ident "Lexing.engine" (test/dynamic/semantics/calc/code/lexer.ml[109,5779+8]..[109,5779+21])
                [
                  <arg>
                  Nolabel
                    expression (test/dynamic/semantics/calc/code/lexer.ml[109,5779+22]..[109,5779+40])
                      Pexp_ident "__ocaml_lex_tables" (test/dynamic/semantics/calc/code/lexer.ml[109,5779+22]..[109,5779+40])
                  <arg>
                  Nolabel
                    expression (test/dynamic/semantics/calc/code/lexer.ml[109,5779+41]..[109,5779+58])
                      Pexp_ident "__ocaml_lex_state" (test/dynamic/semantics/calc/code/lexer.ml[109,5779+41]..[109,5779+58])
                  <arg>
                  Nolabel
                    expression (test/dynamic/semantics/calc/code/lexer.ml[109,5779+59]..[109,5779+65])
                      Pexp_ident "lexbuf" (test/dynamic/semantics/calc/code/lexer.ml[109,5779+59]..[109,5779+65])
                ]
              [
                <case>
                  pattern (test/dynamic/semantics/calc/code/lexer.ml[110,5850+8]..[110,5850+9])
                    Ppat_constant PConst_int (0,None)
                  expression (test/dynamic/semantics/calc/code/lexer.ml[111,5863+0]..test/dynamic/semantics/calc/code/lexer.mll[15,6128+23])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (test/dynamic/semantics/calc/code/lexer.mll[13,5917+21]..[13,5917+25])
                          Ppat_var "line" (test/dynamic/semantics/calc/code/lexer.mll[13,5917+21]..[13,5917+25])
                        expression (test/dynamic/semantics/calc/code/lexer.ml[115,5993+2]..[115,5993+81])
                          Pexp_apply
                          expression (test/dynamic/semantics/calc/code/lexer.ml[115,5993+2]..[115,5993+19])
                            Pexp_ident "Lexing.sub_lexeme" (test/dynamic/semantics/calc/code/lexer.ml[115,5993+2]..[115,5993+19])
                          [
                            <arg>
                            Nolabel
                              expression (test/dynamic/semantics/calc/code/lexer.ml[115,5993+20]..[115,5993+26])
                                Pexp_ident "lexbuf" (test/dynamic/semantics/calc/code/lexer.ml[115,5993+20]..[115,5993+26])
                            <arg>
                            Nolabel
                              expression (test/dynamic/semantics/calc/code/lexer.ml[115,5993+27]..[115,5993+54])
                                Pexp_field
                                expression (test/dynamic/semantics/calc/code/lexer.ml[115,5993+27]..[115,5993+33])
                                  Pexp_ident "lexbuf" (test/dynamic/semantics/calc/code/lexer.ml[115,5993+27]..[115,5993+33])
                                "Lexing.lex_start_pos" (test/dynamic/semantics/calc/code/lexer.ml[115,5993+34]..[115,5993+54])
                            <arg>
                            Nolabel
                              expression (test/dynamic/semantics/calc/code/lexer.ml[115,5993+55]..[115,5993+81])
                                Pexp_field
                                expression (test/dynamic/semantics/calc/code/lexer.ml[115,5993+55]..[115,5993+61])
                                  Pexp_ident "lexbuf" (test/dynamic/semantics/calc/code/lexer.ml[115,5993+55]..[115,5993+61])
                                "Lexing.lex_curr_pos" (test/dynamic/semantics/calc/code/lexer.ml[115,5993+62]..[115,5993+81])
                          ]
                    ]
                    expression (test/dynamic/semantics/calc/code/lexer.mll[15,6128+4]..[15,6128+23])
                      Pexp_tuple
                      [
                        expression (test/dynamic/semantics/calc/code/lexer.mll[15,6128+6]..[15,6128+15])
                          Pexp_construct "Some" (test/dynamic/semantics/calc/code/lexer.mll[15,6128+6]..[15,6128+10])
                          Some
                            expression (test/dynamic/semantics/calc/code/lexer.mll[15,6128+11]..[15,6128+15])
                              Pexp_ident "line" (test/dynamic/semantics/calc/code/lexer.mll[15,6128+11]..[15,6128+15])
                        expression (test/dynamic/semantics/calc/code/lexer.mll[15,6128+17]..[15,6128+21])
                          Pexp_construct "true" (test/dynamic/semantics/calc/code/lexer.mll[15,6128+17]..[15,6128+21])
                          None
                      ]
                <case>
                  pattern (test/dynamic/semantics/calc/code/lexer.ml[120,6203+4]..[120,6203+5])
                    Ppat_constant PConst_int (1,None)
                  expression (test/dynamic/semantics/calc/code/lexer.mll[18,6262+4]..[18,6262+19])
                    Pexp_tuple
                    [
                      expression (test/dynamic/semantics/calc/code/lexer.mll[18,6262+6]..[18,6262+10])
                        Pexp_construct "None" (test/dynamic/semantics/calc/code/lexer.mll[18,6262+6]..[18,6262+10])
                        None
                      expression (test/dynamic/semantics/calc/code/lexer.mll[18,6262+12]..[18,6262+17])
                        Pexp_construct "false" (test/dynamic/semantics/calc/code/lexer.mll[18,6262+12]..[18,6262+17])
                        None
                    ]
                <case>
                  pattern (test/dynamic/semantics/calc/code/lexer.ml[125,6333+4]..[125,6333+5])
                    Ppat_constant PConst_int (2,None)
                  expression (test/dynamic/semantics/calc/code/lexer.ml[126,6342+0]..test/dynamic/semantics/calc/code/lexer.mll[22,6601+33])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (test/dynamic/semantics/calc/code/lexer.mll[19,6396+15]..[19,6396+19])
                          Ppat_var "line" (test/dynamic/semantics/calc/code/lexer.mll[19,6396+15]..[19,6396+19])
                        expression (test/dynamic/semantics/calc/code/lexer.ml[130,6466+2]..[130,6466+81])
                          Pexp_apply
                          expression (test/dynamic/semantics/calc/code/lexer.ml[130,6466+2]..[130,6466+19])
                            Pexp_ident "Lexing.sub_lexeme" (test/dynamic/semantics/calc/code/lexer.ml[130,6466+2]..[130,6466+19])
                          [
                            <arg>
                            Nolabel
                              expression (test/dynamic/semantics/calc/code/lexer.ml[130,6466+20]..[130,6466+26])
                                Pexp_ident "lexbuf" (test/dynamic/semantics/calc/code/lexer.ml[130,6466+20]..[130,6466+26])
                            <arg>
                            Nolabel
                              expression (test/dynamic/semantics/calc/code/lexer.ml[130,6466+27]..[130,6466+54])
                                Pexp_field
                                expression (test/dynamic/semantics/calc/code/lexer.ml[130,6466+27]..[130,6466+33])
                                  Pexp_ident "lexbuf" (test/dynamic/semantics/calc/code/lexer.ml[130,6466+27]..[130,6466+33])
                                "Lexing.lex_start_pos" (test/dynamic/semantics/calc/code/lexer.ml[130,6466+34]..[130,6466+54])
                            <arg>
                            Nolabel
                              expression (test/dynamic/semantics/calc/code/lexer.ml[130,6466+55]..[130,6466+81])
                                Pexp_field
                                expression (test/dynamic/semantics/calc/code/lexer.ml[130,6466+55]..[130,6466+61])
                                  Pexp_ident "lexbuf" (test/dynamic/semantics/calc/code/lexer.ml[130,6466+55]..[130,6466+61])
                                "Lexing.lex_curr_pos" (test/dynamic/semantics/calc/code/lexer.ml[130,6466+62]..[130,6466+81])
                          ]
                    ]
                    expression (test/dynamic/semantics/calc/code/lexer.mll[22,6601+4]..[22,6601+33])
                      Pexp_tuple
                      [
                        expression (test/dynamic/semantics/calc/code/lexer.mll[22,6601+6]..[22,6601+24])
                          Pexp_construct "Some" (test/dynamic/semantics/calc/code/lexer.mll[22,6601+6]..[22,6601+10])
                          Some
                            expression (test/dynamic/semantics/calc/code/lexer.mll[22,6601+11]..[22,6601+24])
                              Pexp_apply
                              expression (test/dynamic/semantics/calc/code/lexer.mll[22,6601+17]..[22,6601+18])
                                Pexp_ident "^" (test/dynamic/semantics/calc/code/lexer.mll[22,6601+17]..[22,6601+18])
                              [
                                <arg>
                                Nolabel
                                  expression (test/dynamic/semantics/calc/code/lexer.mll[22,6601+12]..[22,6601+16])
                                    Pexp_ident "line" (test/dynamic/semantics/calc/code/lexer.mll[22,6601+12]..[22,6601+16])
                                <arg>
                                Nolabel
                                  expression (test/dynamic/semantics/calc/code/lexer.mll[22,6601+19]..[22,6601+23])
                                    Pexp_constant PConst_string("\n",(test/dynamic/semantics/calc/code/lexer.mll[22,6601+20]..[22,6601+22]),None)
                              ]
                        expression (test/dynamic/semantics/calc/code/lexer.mll[22,6601+26]..[22,6601+31])
                          Pexp_construct "false" (test/dynamic/semantics/calc/code/lexer.mll[22,6601+26]..[22,6601+31])
                          None
                      ]
                <case>
                  pattern (test/dynamic/semantics/calc/code/lexer.ml[135,6686+4]..[135,6686+21])
                    Ppat_var "__ocaml_lex_state" (test/dynamic/semantics/calc/code/lexer.ml[135,6686+4]..[135,6686+21])
                  expression (test/dynamic/semantics/calc/code/lexer.ml[135,6686+25]..[136,6745+51])
                    Pexp_sequence
                    expression (test/dynamic/semantics/calc/code/lexer.ml[135,6686+25]..[135,6686+57])
                      Pexp_apply
                      expression (test/dynamic/semantics/calc/code/lexer.ml[135,6686+25]..[135,6686+50])
                        Pexp_field
                        expression (test/dynamic/semantics/calc/code/lexer.ml[135,6686+25]..[135,6686+31])
                          Pexp_ident "lexbuf" (test/dynamic/semantics/calc/code/lexer.ml[135,6686+25]..[135,6686+31])
                        "Lexing.refill_buff" (test/dynamic/semantics/calc/code/lexer.ml[135,6686+32]..[135,6686+50])
                      [
                        <arg>
                        Nolabel
                          expression (test/dynamic/semantics/calc/code/lexer.ml[135,6686+51]..[135,6686+57])
                            Pexp_ident "lexbuf" (test/dynamic/semantics/calc/code/lexer.ml[135,6686+51]..[135,6686+57])
                      ]
                    expression (test/dynamic/semantics/calc/code/lexer.ml[136,6745+6]..[136,6745+51])
                      Pexp_apply
                      expression (test/dynamic/semantics/calc/code/lexer.ml[136,6745+6]..[136,6745+26])
                        Pexp_ident "__ocaml_lex_line_rec" (test/dynamic/semantics/calc/code/lexer.ml[136,6745+6]..[136,6745+26])
                      [
                        <arg>
                        Nolabel
                          expression (test/dynamic/semantics/calc/code/lexer.ml[136,6745+27]..[136,6745+33])
                            Pexp_ident "lexbuf" (test/dynamic/semantics/calc/code/lexer.ml[136,6745+27]..[136,6745+33])
                        <arg>
                        Nolabel
                          expression (test/dynamic/semantics/calc/code/lexer.ml[136,6745+34]..[136,6745+51])
                            Pexp_ident "__ocaml_lex_state" (test/dynamic/semantics/calc/code/lexer.ml[136,6745+34]..[136,6745+51])
                      ]
              ]
      <def>
        pattern (test/dynamic/semantics/calc/code/lexer.ml[138,6798+4]..[138,6798+9])
          Ppat_var "token" (test/dynamic/semantics/calc/code/lexer.ml[138,6798+4]..[138,6798+9])
        expression (test/dynamic/semantics/calc/code/lexer.ml[138,6798+10]..[139,6817+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (test/dynamic/semantics/calc/code/lexer.ml[138,6798+10]..[138,6798+16])
            Ppat_var "lexbuf" (test/dynamic/semantics/calc/code/lexer.ml[138,6798+10]..[138,6798+16])
          expression (test/dynamic/semantics/calc/code/lexer.ml[139,6817+3]..[139,6817+33])
            Pexp_apply
            expression (test/dynamic/semantics/calc/code/lexer.ml[139,6817+3]..[139,6817+24])
              Pexp_ident "__ocaml_lex_token_rec" (test/dynamic/semantics/calc/code/lexer.ml[139,6817+3]..[139,6817+24])
            [
              <arg>
              Nolabel
                expression (test/dynamic/semantics/calc/code/lexer.ml[139,6817+25]..[139,6817+31])
                  Pexp_ident "lexbuf" (test/dynamic/semantics/calc/code/lexer.ml[139,6817+25]..[139,6817+31])
              <arg>
              Nolabel
                expression (test/dynamic/semantics/calc/code/lexer.ml[139,6817+32]..[139,6817+33])
                  Pexp_constant PConst_int (5,None)
            ]
      <def>
        pattern (test/dynamic/semantics/calc/code/lexer.ml[140,6851+4]..[140,6851+25])
          Ppat_var "__ocaml_lex_token_rec" (test/dynamic/semantics/calc/code/lexer.ml[140,6851+4]..[140,6851+25])
        expression (test/dynamic/semantics/calc/code/lexer.ml[140,6851+26]..[203,8722+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (test/dynamic/semantics/calc/code/lexer.ml[140,6851+26]..[140,6851+32])
            Ppat_var "lexbuf" (test/dynamic/semantics/calc/code/lexer.ml[140,6851+26]..[140,6851+32])
          expression (test/dynamic/semantics/calc/code/lexer.ml[140,6851+33]..[203,8722+52]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (test/dynamic/semantics/calc/code/lexer.ml[140,6851+33]..[140,6851+50])
              Ppat_var "__ocaml_lex_state" (test/dynamic/semantics/calc/code/lexer.ml[140,6851+33]..[140,6851+50])
            expression (test/dynamic/semantics/calc/code/lexer.ml[141,6904+2]..[203,8722+52])
              Pexp_match
              expression (test/dynamic/semantics/calc/code/lexer.ml[141,6904+8]..[141,6904+65])
                Pexp_apply
                expression (test/dynamic/semantics/calc/code/lexer.ml[141,6904+8]..[141,6904+21])
                  Pexp_ident "Lexing.engine" (test/dynamic/semantics/calc/code/lexer.ml[141,6904+8]..[141,6904+21])
                [
                  <arg>
                  Nolabel
                    expression (test/dynamic/semantics/calc/code/lexer.ml[141,6904+22]..[141,6904+40])
                      Pexp_ident "__ocaml_lex_tables" (test/dynamic/semantics/calc/code/lexer.ml[141,6904+22]..[141,6904+40])
                  <arg>
                  Nolabel
                    expression (test/dynamic/semantics/calc/code/lexer.ml[141,6904+41]..[141,6904+58])
                      Pexp_ident "__ocaml_lex_state" (test/dynamic/semantics/calc/code/lexer.ml[141,6904+41]..[141,6904+58])
                  <arg>
                  Nolabel
                    expression (test/dynamic/semantics/calc/code/lexer.ml[141,6904+59]..[141,6904+65])
                      Pexp_ident "lexbuf" (test/dynamic/semantics/calc/code/lexer.ml[141,6904+59]..[141,6904+65])
                ]
              [
                <case>
                  pattern (test/dynamic/semantics/calc/code/lexer.ml[142,6975+8]..[142,6975+9])
                    Ppat_constant PConst_int (0,None)
                  expression (test/dynamic/semantics/calc/code/lexer.mll[29,7038+4]..[29,7038+20])
                    Pexp_apply
                    expression (test/dynamic/semantics/calc/code/lexer.mll[29,7038+6]..[29,7038+11])
                      Pexp_ident "token" (test/dynamic/semantics/calc/code/lexer.mll[29,7038+6]..[29,7038+11])
                    [
                      <arg>
                      Nolabel
                        expression (test/dynamic/semantics/calc/code/lexer.mll[29,7038+12]..[29,7038+18])
                          Pexp_ident "lexbuf" (test/dynamic/semantics/calc/code/lexer.mll[29,7038+12]..[29,7038+18])
                    ]
                <case>
                  pattern (test/dynamic/semantics/calc/code/lexer.ml[147,7110+4]..[147,7110+5])
                    Ppat_constant PConst_int (1,None)
                  expression (test/dynamic/semantics/calc/code/lexer.mll[31,7169+4]..[31,7169+11])
                    Pexp_construct "EOL" (test/dynamic/semantics/calc/code/lexer.mll[31,7169+6]..[31,7169+9])
                    None
                <case>
                  pattern (test/dynamic/semantics/calc/code/lexer.ml[152,7232+4]..[152,7232+5])
                    Ppat_constant PConst_int (2,None)
                  expression (test/dynamic/semantics/calc/code/lexer.ml[153,7241+0]..test/dynamic/semantics/calc/code/lexer.mll[33,7498+29])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (test/dynamic/semantics/calc/code/lexer.mll[32,7295+16]..[32,7295+17])
                          Ppat_var "i" (test/dynamic/semantics/calc/code/lexer.mll[32,7295+16]..[32,7295+17])
                        expression (test/dynamic/semantics/calc/code/lexer.ml[157,7363+2]..[157,7363+81])
                          Pexp_apply
                          expression (test/dynamic/semantics/calc/code/lexer.ml[157,7363+2]..[157,7363+19])
                            Pexp_ident "Lexing.sub_lexeme" (test/dynamic/semantics/calc/code/lexer.ml[157,7363+2]..[157,7363+19])
                          [
                            <arg>
                            Nolabel
                              expression (test/dynamic/semantics/calc/code/lexer.ml[157,7363+20]..[157,7363+26])
                                Pexp_ident "lexbuf" (test/dynamic/semantics/calc/code/lexer.ml[157,7363+20]..[157,7363+26])
                            <arg>
                            Nolabel
                              expression (test/dynamic/semantics/calc/code/lexer.ml[157,7363+27]..[157,7363+54])
                                Pexp_field
                                expression (test/dynamic/semantics/calc/code/lexer.ml[157,7363+27]..[157,7363+33])
                                  Pexp_ident "lexbuf" (test/dynamic/semantics/calc/code/lexer.ml[157,7363+27]..[157,7363+33])
                                "Lexing.lex_start_pos" (test/dynamic/semantics/calc/code/lexer.ml[157,7363+34]..[157,7363+54])
                            <arg>
                            Nolabel
                              expression (test/dynamic/semantics/calc/code/lexer.ml[157,7363+55]..[157,7363+81])
                                Pexp_field
                                expression (test/dynamic/semantics/calc/code/lexer.ml[157,7363+55]..[157,7363+61])
                                  Pexp_ident "lexbuf" (test/dynamic/semantics/calc/code/lexer.ml[157,7363+55]..[157,7363+61])
                                "Lexing.lex_curr_pos" (test/dynamic/semantics/calc/code/lexer.ml[157,7363+62]..[157,7363+81])
                          ]
                    ]
                    expression (test/dynamic/semantics/calc/code/lexer.mll[33,7498+4]..[33,7498+29])
                      Pexp_construct "INT" (test/dynamic/semantics/calc/code/lexer.mll[33,7498+6]..[33,7498+9])
                      Some
                        expression (test/dynamic/semantics/calc/code/lexer.mll[33,7498+10]..[33,7498+27])
                          Pexp_apply
                          expression (test/dynamic/semantics/calc/code/lexer.mll[33,7498+11]..[33,7498+24])
                            Pexp_ident "int_of_string" (test/dynamic/semantics/calc/code/lexer.mll[33,7498+11]..[33,7498+24])
                          [
                            <arg>
                            Nolabel
                              expression (test/dynamic/semantics/calc/code/lexer.mll[33,7498+25]..[33,7498+26])
                                Pexp_ident "i" (test/dynamic/semantics/calc/code/lexer.mll[33,7498+25]..[33,7498+26])
                          ]
                <case>
                  pattern (test/dynamic/semantics/calc/code/lexer.ml[162,7579+4]..[162,7579+5])
                    Ppat_constant PConst_int (3,None)
                  expression (test/dynamic/semantics/calc/code/lexer.mll[35,7638+4]..[35,7638+12])
                    Pexp_construct "PLUS" (test/dynamic/semantics/calc/code/lexer.mll[35,7638+6]..[35,7638+10])
                    None
                <case>
                  pattern (test/dynamic/semantics/calc/code/lexer.ml[167,7702+4]..[167,7702+5])
                    Ppat_constant PConst_int (4,None)
                  expression (test/dynamic/semantics/calc/code/lexer.mll[37,7761+4]..[37,7761+13])
                    Pexp_construct "MINUS" (test/dynamic/semantics/calc/code/lexer.mll[37,7761+6]..[37,7761+11])
                    None
                <case>
                  pattern (test/dynamic/semantics/calc/code/lexer.ml[172,7826+4]..[172,7826+5])
                    Ppat_constant PConst_int (5,None)
                  expression (test/dynamic/semantics/calc/code/lexer.mll[39,7885+4]..[39,7885+13])
                    Pexp_construct "TIMES" (test/dynamic/semantics/calc/code/lexer.mll[39,7885+6]..[39,7885+11])
                    None
                <case>
                  pattern (test/dynamic/semantics/calc/code/lexer.ml[177,7950+4]..[177,7950+5])
                    Ppat_constant PConst_int (6,None)
                  expression (test/dynamic/semantics/calc/code/lexer.mll[41,8009+4]..[41,8009+11])
                    Pexp_construct "DIV" (test/dynamic/semantics/calc/code/lexer.mll[41,8009+6]..[41,8009+9])
                    None
                <case>
                  pattern (test/dynamic/semantics/calc/code/lexer.ml[182,8072+4]..[182,8072+5])
                    Ppat_constant PConst_int (7,None)
                  expression (test/dynamic/semantics/calc/code/lexer.mll[43,8131+4]..[43,8131+14])
                    Pexp_construct "LPAREN" (test/dynamic/semantics/calc/code/lexer.mll[43,8131+6]..[43,8131+12])
                    None
                <case>
                  pattern (test/dynamic/semantics/calc/code/lexer.ml[187,8197+4]..[187,8197+5])
                    Ppat_constant PConst_int (8,None)
                  expression (test/dynamic/semantics/calc/code/lexer.mll[45,8256+4]..[45,8256+14])
                    Pexp_construct "RPAREN" (test/dynamic/semantics/calc/code/lexer.mll[45,8256+6]..[45,8256+12])
                    None
                <case>
                  pattern (test/dynamic/semantics/calc/code/lexer.ml[192,8322+4]..[192,8322+5])
                    Ppat_constant PConst_int (9,None)
                  expression (test/dynamic/semantics/calc/code/lexer.mll[47,8381+4]..[47,8381+11])
                    Pexp_construct "DOT" (test/dynamic/semantics/calc/code/lexer.mll[47,8381+6]..[47,8381+9])
                    None
                <case>
                  pattern (test/dynamic/semantics/calc/code/lexer.ml[197,8444+4]..[197,8444+6])
                    Ppat_constant PConst_int (10,None)
                  expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+4]..[49,8504+107])
                    Pexp_apply
                    expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+6]..[49,8504+11])
                      Pexp_ident "raise" (test/dynamic/semantics/calc/code/lexer.mll[49,8504+6]..[49,8504+11])
                    [
                      <arg>
                      Nolabel
                        expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+12]..[49,8504+105])
                          Pexp_construct "Error" (test/dynamic/semantics/calc/code/lexer.mll[49,8504+13]..[49,8504+18])
                          Some
                            expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+19]..[49,8504+104])
                              Pexp_apply
                              expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+20]..[49,8504+34])
                                Pexp_ident "Printf.sprintf" (test/dynamic/semantics/calc/code/lexer.mll[49,8504+20]..[49,8504+34])
                              [
                                <arg>
                                Nolabel
                                  expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+35]..[49,8504+74])
                                    Pexp_constant PConst_string("At offset %d: unexpected character.\n",(test/dynamic/semantics/calc/code/lexer.mll[49,8504+36]..[49,8504+73]),None)
                                <arg>
                                Nolabel
                                  expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+75]..[49,8504+103])
                                    Pexp_apply
                                    expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+76]..[49,8504+95])
                                      Pexp_ident "Lexing.lexeme_start" (test/dynamic/semantics/calc/code/lexer.mll[49,8504+76]..[49,8504+95])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+96]..[49,8504+102])
                                          Pexp_ident "lexbuf" (test/dynamic/semantics/calc/code/lexer.mll[49,8504+96]..[49,8504+102])
                                    ]
                              ]
                    ]
                <case>
                  pattern (test/dynamic/semantics/calc/code/lexer.ml[202,8663+4]..[202,8663+21])
                    Ppat_var "__ocaml_lex_state" (test/dynamic/semantics/calc/code/lexer.ml[202,8663+4]..[202,8663+21])
                  expression (test/dynamic/semantics/calc/code/lexer.ml[202,8663+25]..[203,8722+52])
                    Pexp_sequence
                    expression (test/dynamic/semantics/calc/code/lexer.ml[202,8663+25]..[202,8663+57])
                      Pexp_apply
                      expression (test/dynamic/semantics/calc/code/lexer.ml[202,8663+25]..[202,8663+50])
                        Pexp_field
                        expression (test/dynamic/semantics/calc/code/lexer.ml[202,8663+25]..[202,8663+31])
                          Pexp_ident "lexbuf" (test/dynamic/semantics/calc/code/lexer.ml[202,8663+25]..[202,8663+31])
                        "Lexing.refill_buff" (test/dynamic/semantics/calc/code/lexer.ml[202,8663+32]..[202,8663+50])
                      [
                        <arg>
                        Nolabel
                          expression (test/dynamic/semantics/calc/code/lexer.ml[202,8663+51]..[202,8663+57])
                            Pexp_ident "lexbuf" (test/dynamic/semantics/calc/code/lexer.ml[202,8663+51]..[202,8663+57])
                      ]
                    expression (test/dynamic/semantics/calc/code/lexer.ml[203,8722+6]..[203,8722+52])
                      Pexp_apply
                      expression (test/dynamic/semantics/calc/code/lexer.ml[203,8722+6]..[203,8722+27])
                        Pexp_ident "__ocaml_lex_token_rec" (test/dynamic/semantics/calc/code/lexer.ml[203,8722+6]..[203,8722+27])
                      [
                        <arg>
                        Nolabel
                          expression (test/dynamic/semantics/calc/code/lexer.ml[203,8722+28]..[203,8722+34])
                            Pexp_ident "lexbuf" (test/dynamic/semantics/calc/code/lexer.ml[203,8722+28]..[203,8722+34])
                        <arg>
                        Nolabel
                          expression (test/dynamic/semantics/calc/code/lexer.ml[203,8722+35]..[203,8722+52])
                            Pexp_ident "__ocaml_lex_state" (test/dynamic/semantics/calc/code/lexer.ml[203,8722+35]..[203,8722+52])
                      ]
              ]
    ]
]

open Parser
exception Error of string 
let __ocaml_lex_tables =
  {
    Lexing.lex_base =
      "\000\000\254\255\255\255\001\000\253\255\003\000\245\255\246\255\247\255\248\255\249\255\250\255\251\255\252\255\r\000\254\255\255\255";
    Lexing.lex_backtrk =
      "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\002\000\255\255\255\255";
    Lexing.lex_default =
      "\003\000\000\000\000\000\003\000\000\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000";
    Lexing.lex_trans =
      "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\002\000\016\000\015\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\b\000\011\000\r\000\000\000\012\000\007\000\n
    Lexing.lex_check =

    Lexing.lex_base_code = "";
    Lexing.lex_backtrk_code = "";
    Lexing.lex_default_code = "";
    Lexing.lex_trans_code = "";
    Lexing.lex_check_code = "";
    Lexing.lex_code = ""
  }
let rec line lexbuf = __ocaml_lex_line_rec lexbuf 0
and __ocaml_lex_line_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
  | 0 ->
      let line =
        Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos
          lexbuf.Lexing.lex_curr_pos in
      ((Some line), true)
  | 1 -> (None, false)
  | 2 ->
      let line =
        Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos
          lexbuf.Lexing.lex_curr_pos in
      ((Some (line ^ "\n")), false)
  | __ocaml_lex_state ->
      (lexbuf.Lexing.refill_buff lexbuf;
       __ocaml_lex_line_rec lexbuf __ocaml_lex_state)
and token lexbuf = __ocaml_lex_token_rec lexbuf 5
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
  | 0 -> token lexbuf
  | 1 -> EOL
  | 2 ->
      let i =
        Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos
          lexbuf.Lexing.lex_curr_pos in
      INT (int_of_string i)
  | 3 -> PLUS
  | 4 -> MINUS
  | 5 -> TIMES
  | 6 -> DIV
  | 7 -> LPAREN
  | 8 -> RPAREN
  | 9 -> DOT
  | 10 ->
      raise
        (Error
           (Printf.sprintf "At offset %d: unexpected character.\n"
              (Lexing.lexeme_start lexbuf)))
  | __ocaml_lex_state ->
      (lexbuf.Lexing.refill_buff lexbuf;
       __ocaml_lex_token_rec lexbuf __ocaml_lex_state)
[
  structure_item (test/dynamic/semantics/calc/code/lexer.mll[2,51+2]..test/dynamic/semantics/calc/code/lexer.mll[2,51+13])
    Tstr_open Fresh
    module_expr (test/dynamic/semantics/calc/code/lexer.mll[2,51+7]..test/dynamic/semantics/calc/code/lexer.mll[2,51+13])
      Tmod_ident "Dune__exe!.Parser"
  structure_item (test/dynamic/semantics/calc/code/lexer.mll[4,66+2]..test/dynamic/semantics/calc/code/lexer.mll[4,66+27])
    Tstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (test/dynamic/semantics/calc/code/lexer.mll[4,66+2]..test/dynamic/semantics/calc/code/lexer.mll[4,66+27])
          pext_name = "Error/275"
          pext_kind =
            Text_decl
              [
                core_type (test/dynamic/semantics/calc/code/lexer.mll[4,66+21]..test/dynamic/semantics/calc/code/lexer.mll[4,66+27])
                  Ttyp_constr "string/15!"
                  []
              ]
              None
  structure_item (test/dynamic/semantics/calc/code/lexer.ml[9,144+0]..test/dynamic/semantics/calc/code/lexer.ml[104,5669+1])
    Tstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/semantics/calc/code/lexer.ml[9,144+4]..test/dynamic/semantics/calc/code/lexer.ml[9,144+22])
          Tpat_var "__ocaml_lex_tables/276"
        expression (test/dynamic/semantics/calc/code/lexer.ml[9,144+25]..test/dynamic/semantics/calc/code/lexer.ml[104,5669+1])
          Texp_record
            fields =
              [
                "Lexing.lex_base"
                  expression (test/dynamic/semantics/calc/code/lexer.ml[11,191+3]..test/dynamic/semantics/calc/code/lexer.ml[13,331+13])
                    Texp_constant Const_string("\000\000\254\255\255\255\001\000\253\255\003\000\245\255\246\255\247\255\248\255\249\255\250\255\251\255\252\255\r\000\254\255\255\255",(test/dynamic/semantics/calc/code/lexer.ml[11,191+4]..test/dynamic/semantics/calc/code/lexer.ml[13,331+12]),None)
                "Lexing.lex_backtrk"
                  expression (test/dynamic/semantics/calc/code/lexer.ml[15,369+3]..test/dynamic/semantics/calc/code/lexer.ml[17,509+13])
                    Texp_constant Const_string("\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\002\000\255\255\255\255",(test/dynamic/semantics/calc/code/lexer.ml[15,369+4]..test/dynamic/semantics/calc/code/lexer.ml[17,509+12]),None)
                "Lexing.lex_default"
                  expression (test/dynamic/semantics/calc/code/lexer.ml[19,547+3]..test/dynamic/semantics/calc/code/lexer.ml[21,687+13])
                    Texp_constant Const_string("\003\000\000\000\000\000\003\000\000\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000",(test/dynamic/semantics/calc/code/lexer.ml[19,547+4]..test/dynamic/semantics/calc/code/lexer.ml[21,687+12]),None)
                "Lexing.lex_trans"
                  expression (test/dynamic/semantics/calc/code/lexer.ml[23,723+3]..test/dynamic/semantics/calc/code/lexer.ml[56,3033+53])
                    Texp_constant Const_string("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\002\000\016\000\015\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\b\000\011\000\r\000\000\000\012\000\007\000\n\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\004\000\000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000",(test/dynamic/semantics/calc/code/lexer.ml[23,723+4]..test/dynamic/semantics/calc/code/lexer.ml[56,3033+52]),None)
                "Lexing.lex_check"
                  expression (test/dynamic/semantics/calc/code/lexer.ml[58,3109+3]..test/dynamic/semantics/calc/code/lexer.ml[91,5419+53])
                    Texp_constant Const_stringtest/dynamic/semantics/calc/code/lexer.ml[58,3109+4]..test/dynamic/semantics/calc/code/lexer.ml[91,5419+52]),None)
                "Lexing.lex_base_code"
                  expression (test/dynamic/semantics/calc/code/lexer.ml[93,5499+3]..test/dynamic/semantics/calc/code/lexer.ml[93,5499+5])
                    Texp_constant Const_string("",(test/dynamic/semantics/calc/code/lexer.ml[93,5499+4]..test/dynamic/semantics/calc/code/lexer.ml[93,5499+4]),None)
                "Lexing.lex_backtrk_code"
                  expression (test/dynamic/semantics/calc/code/lexer.ml[95,5534+3]..test/dynamic/semantics/calc/code/lexer.ml[95,5534+5])
                    Texp_constant Const_string("",(test/dynamic/semantics/calc/code/lexer.ml[95,5534+4]..test/dynamic/semantics/calc/code/lexer.ml[95,5534+4]),None)
                "Lexing.lex_default_code"
                  expression (test/dynamic/semantics/calc/code/lexer.ml[97,5569+3]..test/dynamic/semantics/calc/code/lexer.ml[97,5569+5])
                    Texp_constant Const_string("",(test/dynamic/semantics/calc/code/lexer.ml[97,5569+4]..test/dynamic/semantics/calc/code/lexer.ml[97,5569+4]),None)
                "Lexing.lex_trans_code"
                  expression (test/dynamic/semantics/calc/code/lexer.ml[99,5602+3]..test/dynamic/semantics/calc/code/lexer.ml[99,5602+5])
                    Texp_constant Const_string("",(test/dynamic/semantics/calc/code/lexer.ml[99,5602+4]..test/dynamic/semantics/calc/code/lexer.ml[99,5602+4]),None)
                "Lexing.lex_check_code"
                  expression (test/dynamic/semantics/calc/code/lexer.ml[101,5635+3]..test/dynamic/semantics/calc/code/lexer.ml[101,5635+5])
                    Texp_constant Const_string("",(test/dynamic/semantics/calc/code/lexer.ml[101,5635+4]..test/dynamic/semantics/calc/code/lexer.ml[101,5635+4]),None)
                "Lexing.lex_code"
                  expression (test/dynamic/semantics/calc/code/lexer.ml[103,5662+3]..test/dynamic/semantics/calc/code/lexer.ml[103,5662+5])
                    Texp_constant Const_string("",(test/dynamic/semantics/calc/code/lexer.ml[103,5662+4]..test/dynamic/semantics/calc/code/lexer.ml[103,5662+4]),None)
              ]
            representation =
              Record_regular
            extended_expression =
              None
    ]
  structure_item (test/dynamic/semantics/calc/code/lexer.ml[106,5672+0]..test/dynamic/semantics/calc/code/lexer.ml[203,8722+52])
    Tstr_value Rec
    [
      <def>
        pattern (test/dynamic/semantics/calc/code/lexer.ml[106,5672+8]..test/dynamic/semantics/calc/code/lexer.ml[106,5672+12])
          Tpat_var "line/301"
        expression (test/dynamic/semantics/calc/code/lexer.ml[106,5672+13]..test/dynamic/semantics/calc/code/lexer.ml[107,5694+32]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (test/dynamic/semantics/calc/code/lexer.ml[106,5672+13]..test/dynamic/semantics/calc/code/lexer.ml[106,5672+19])
                Tpat_var "lexbuf/305"
              expression (test/dynamic/semantics/calc/code/lexer.ml[107,5694+3]..test/dynamic/semantics/calc/code/lexer.ml[107,5694+32])
                Texp_apply
                expression (test/dynamic/semantics/calc/code/lexer.ml[107,5694+3]..test/dynamic/semantics/calc/code/lexer.ml[107,5694+23])
                  Texp_ident "__ocaml_lex_line_rec/302"
                [
                  <arg>
                    Nolabel
                    expression (test/dynamic/semantics/calc/code/lexer.ml[107,5694+24]..test/dynamic/semantics/calc/code/lexer.ml[107,5694+30])
                      Texp_ident "lexbuf/305"
                  <arg>
                    Nolabel
                    expression (test/dynamic/semantics/calc/code/lexer.ml[107,5694+31]..test/dynamic/semantics/calc/code/lexer.ml[107,5694+32])
                      Texp_constant Const_int 0
                ]
          ]
      <def>
        pattern (test/dynamic/semantics/calc/code/lexer.ml[108,5727+4]..test/dynamic/semantics/calc/code/lexer.ml[108,5727+24])
          Tpat_var "__ocaml_lex_line_rec/302"
        expression (test/dynamic/semantics/calc/code/lexer.ml[108,5727+25]..test/dynamic/semantics/calc/code/lexer.ml[136,6745+51]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (test/dynamic/semantics/calc/code/lexer.ml[108,5727+25]..test/dynamic/semantics/calc/code/lexer.ml[108,5727+31])
                Tpat_var "lexbuf/306"
              expression (test/dynamic/semantics/calc/code/lexer.ml[108,5727+32]..test/dynamic/semantics/calc/code/lexer.ml[136,6745+51]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (test/dynamic/semantics/calc/code/lexer.ml[108,5727+32]..test/dynamic/semantics/calc/code/lexer.ml[108,5727+49])
                      Tpat_var "__ocaml_lex_state/307"
                    expression (test/dynamic/semantics/calc/code/lexer.ml[109,5779+2]..test/dynamic/semantics/calc/code/lexer.ml[136,6745+51])
                      Texp_match
                      expression (test/dynamic/semantics/calc/code/lexer.ml[109,5779+8]..test/dynamic/semantics/calc/code/lexer.ml[109,5779+65])
                        Texp_apply
                        expression (test/dynamic/semantics/calc/code/lexer.ml[109,5779+8]..test/dynamic/semantics/calc/code/lexer.ml[109,5779+21])
                          Texp_ident "Stdlib!.Lexing.engine"
                        [
                          <arg>
                            Nolabel
                            expression (test/dynamic/semantics/calc/code/lexer.ml[109,5779+22]..test/dynamic/semantics/calc/code/lexer.ml[109,5779+40])
                              Texp_ident "__ocaml_lex_tables/276"
                          <arg>
                            Nolabel
                            expression (test/dynamic/semantics/calc/code/lexer.ml[109,5779+41]..test/dynamic/semantics/calc/code/lexer.ml[109,5779+58])
                              Texp_ident "__ocaml_lex_state/307"
                          <arg>
                            Nolabel
                            expression (test/dynamic/semantics/calc/code/lexer.ml[109,5779+59]..test/dynamic/semantics/calc/code/lexer.ml[109,5779+65])
                              Texp_ident "lexbuf/306"
                        ]
                      [
                        <case>
                          pattern (test/dynamic/semantics/calc/code/lexer.ml[110,5850+8]..test/dynamic/semantics/calc/code/lexer.ml[110,5850+9])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/code/lexer.ml[110,5850+8]..test/dynamic/semantics/calc/code/lexer.ml[110,5850+9])
                              Tpat_constant Const_int 0
                          expression (test/dynamic/semantics/calc/code/lexer.ml[111,5863+0]..test/dynamic/semantics/calc/code/lexer.mll[15,6128+23])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (test/dynamic/semantics/calc/code/lexer.mll[13,5917+21]..test/dynamic/semantics/calc/code/lexer.mll[13,5917+25])
                                  Tpat_var "line/333"
                                expression (test/dynamic/semantics/calc/code/lexer.ml[115,5993+2]..test/dynamic/semantics/calc/code/lexer.ml[115,5993+81])
                                  Texp_apply
                                  expression (test/dynamic/semantics/calc/code/lexer.ml[115,5993+2]..test/dynamic/semantics/calc/code/lexer.ml[115,5993+19])
                                    Texp_ident "Stdlib!.Lexing.sub_lexeme"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/semantics/calc/code/lexer.ml[115,5993+20]..test/dynamic/semantics/calc/code/lexer.ml[115,5993+26])
                                        Texp_ident "lexbuf/306"
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/semantics/calc/code/lexer.ml[115,5993+27]..test/dynamic/semantics/calc/code/lexer.ml[115,5993+54])
                                        Texp_field
                                        expression (test/dynamic/semantics/calc/code/lexer.ml[115,5993+27]..test/dynamic/semantics/calc/code/lexer.ml[115,5993+33])
                                          Texp_ident "lexbuf/306"
                                        "Lexing.lex_start_pos"
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/semantics/calc/code/lexer.ml[115,5993+55]..test/dynamic/semantics/calc/code/lexer.ml[115,5993+81])
                                        Texp_field
                                        expression (test/dynamic/semantics/calc/code/lexer.ml[115,5993+55]..test/dynamic/semantics/calc/code/lexer.ml[115,5993+61])
                                          Texp_ident "lexbuf/306"
                                        "Lexing.lex_curr_pos"
                                  ]
                            ]
                            expression (test/dynamic/semantics/calc/code/lexer.mll[15,6128+4]..test/dynamic/semantics/calc/code/lexer.mll[15,6128+23])
                              Texp_tuple
                              [
                                expression (test/dynamic/semantics/calc/code/lexer.mll[15,6128+6]..test/dynamic/semantics/calc/code/lexer.mll[15,6128+15])
                                  Texp_construct "Some"
                                  [
                                    expression (test/dynamic/semantics/calc/code/lexer.mll[15,6128+11]..test/dynamic/semantics/calc/code/lexer.mll[15,6128+15])
                                      Texp_ident "line/333"
                                  ]
                                expression (test/dynamic/semantics/calc/code/lexer.mll[15,6128+17]..test/dynamic/semantics/calc/code/lexer.mll[15,6128+21])
                                  Texp_construct "true"
                                  []
                              ]
                        <case>
                          pattern (test/dynamic/semantics/calc/code/lexer.ml[120,6203+4]..test/dynamic/semantics/calc/code/lexer.ml[120,6203+5])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/code/lexer.ml[120,6203+4]..test/dynamic/semantics/calc/code/lexer.ml[120,6203+5])
                              Tpat_constant Const_int 1
                          expression (test/dynamic/semantics/calc/code/lexer.mll[18,6262+4]..test/dynamic/semantics/calc/code/lexer.mll[18,6262+19])
                            Texp_tuple
                            [
                              expression (test/dynamic/semantics/calc/code/lexer.mll[18,6262+6]..test/dynamic/semantics/calc/code/lexer.mll[18,6262+10])
                                Texp_construct "None"
                                []
                              expression (test/dynamic/semantics/calc/code/lexer.mll[18,6262+12]..test/dynamic/semantics/calc/code/lexer.mll[18,6262+17])
                                Texp_construct "false"
                                []
                            ]
                        <case>
                          pattern (test/dynamic/semantics/calc/code/lexer.ml[125,6333+4]..test/dynamic/semantics/calc/code/lexer.ml[125,6333+5])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/code/lexer.ml[125,6333+4]..test/dynamic/semantics/calc/code/lexer.ml[125,6333+5])
                              Tpat_constant Const_int 2
                          expression (test/dynamic/semantics/calc/code/lexer.ml[126,6342+0]..test/dynamic/semantics/calc/code/lexer.mll[22,6601+33])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (test/dynamic/semantics/calc/code/lexer.mll[19,6396+15]..test/dynamic/semantics/calc/code/lexer.mll[19,6396+19])
                                  Tpat_var "line/334"
                                expression (test/dynamic/semantics/calc/code/lexer.ml[130,6466+2]..test/dynamic/semantics/calc/code/lexer.ml[130,6466+81])
                                  Texp_apply
                                  expression (test/dynamic/semantics/calc/code/lexer.ml[130,6466+2]..test/dynamic/semantics/calc/code/lexer.ml[130,6466+19])
                                    Texp_ident "Stdlib!.Lexing.sub_lexeme"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/semantics/calc/code/lexer.ml[130,6466+20]..test/dynamic/semantics/calc/code/lexer.ml[130,6466+26])
                                        Texp_ident "lexbuf/306"
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/semantics/calc/code/lexer.ml[130,6466+27]..test/dynamic/semantics/calc/code/lexer.ml[130,6466+54])
                                        Texp_field
                                        expression (test/dynamic/semantics/calc/code/lexer.ml[130,6466+27]..test/dynamic/semantics/calc/code/lexer.ml[130,6466+33])
                                          Texp_ident "lexbuf/306"
                                        "Lexing.lex_start_pos"
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/semantics/calc/code/lexer.ml[130,6466+55]..test/dynamic/semantics/calc/code/lexer.ml[130,6466+81])
                                        Texp_field
                                        expression (test/dynamic/semantics/calc/code/lexer.ml[130,6466+55]..test/dynamic/semantics/calc/code/lexer.ml[130,6466+61])
                                          Texp_ident "lexbuf/306"
                                        "Lexing.lex_curr_pos"
                                  ]
                            ]
                            expression (test/dynamic/semantics/calc/code/lexer.mll[22,6601+4]..test/dynamic/semantics/calc/code/lexer.mll[22,6601+33])
                              Texp_tuple
                              [
                                expression (test/dynamic/semantics/calc/code/lexer.mll[22,6601+6]..test/dynamic/semantics/calc/code/lexer.mll[22,6601+24])
                                  Texp_construct "Some"
                                  [
                                    expression (test/dynamic/semantics/calc/code/lexer.mll[22,6601+11]..test/dynamic/semantics/calc/code/lexer.mll[22,6601+24])
                                      Texp_apply
                                      expression (test/dynamic/semantics/calc/code/lexer.mll[22,6601+17]..test/dynamic/semantics/calc/code/lexer.mll[22,6601+18])
                                        Texp_ident "Stdlib!.^"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (test/dynamic/semantics/calc/code/lexer.mll[22,6601+12]..test/dynamic/semantics/calc/code/lexer.mll[22,6601+16])
                                            Texp_ident "line/334"
                                        <arg>
                                          Nolabel
                                          expression (test/dynamic/semantics/calc/code/lexer.mll[22,6601+19]..test/dynamic/semantics/calc/code/lexer.mll[22,6601+23])
                                            Texp_constant Const_string("\n",(test/dynamic/semantics/calc/code/lexer.mll[22,6601+20]..test/dynamic/semantics/calc/code/lexer.mll[22,6601+22]),None)
                                      ]
                                  ]
                                expression (test/dynamic/semantics/calc/code/lexer.mll[22,6601+26]..test/dynamic/semantics/calc/code/lexer.mll[22,6601+31])
                                  Texp_construct "false"
                                  []
                              ]
                        <case>
                          pattern (test/dynamic/semantics/calc/code/lexer.ml[135,6686+4]..test/dynamic/semantics/calc/code/lexer.ml[135,6686+21])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/code/lexer.ml[135,6686+4]..test/dynamic/semantics/calc/code/lexer.ml[135,6686+21])
                              Tpat_var "__ocaml_lex_state/332"
                          expression (test/dynamic/semantics/calc/code/lexer.ml[135,6686+25]..test/dynamic/semantics/calc/code/lexer.ml[136,6745+51])
                            Texp_sequence
                            expression (test/dynamic/semantics/calc/code/lexer.ml[135,6686+25]..test/dynamic/semantics/calc/code/lexer.ml[135,6686+57])
                              Texp_apply
                              expression (test/dynamic/semantics/calc/code/lexer.ml[135,6686+25]..test/dynamic/semantics/calc/code/lexer.ml[135,6686+50])
                                Texp_field
                                expression (test/dynamic/semantics/calc/code/lexer.ml[135,6686+25]..test/dynamic/semantics/calc/code/lexer.ml[135,6686+31])
                                  Texp_ident "lexbuf/306"
                                "Lexing.refill_buff"
                              [
                                <arg>
                                  Nolabel
                                  expression (test/dynamic/semantics/calc/code/lexer.ml[135,6686+51]..test/dynamic/semantics/calc/code/lexer.ml[135,6686+57])
                                    Texp_ident "lexbuf/306"
                              ]
                            expression (test/dynamic/semantics/calc/code/lexer.ml[136,6745+6]..test/dynamic/semantics/calc/code/lexer.ml[136,6745+51])
                              Texp_apply
                              expression (test/dynamic/semantics/calc/code/lexer.ml[136,6745+6]..test/dynamic/semantics/calc/code/lexer.ml[136,6745+26])
                                Texp_ident "__ocaml_lex_line_rec/302"
                              [
                                <arg>
                                  Nolabel
                                  expression (test/dynamic/semantics/calc/code/lexer.ml[136,6745+27]..test/dynamic/semantics/calc/code/lexer.ml[136,6745+33])
                                    Texp_ident "lexbuf/306"
                                <arg>
                                  Nolabel
                                  expression (test/dynamic/semantics/calc/code/lexer.ml[136,6745+34]..test/dynamic/semantics/calc/code/lexer.ml[136,6745+51])
                                    Texp_ident "__ocaml_lex_state/332"
                              ]
                      ]
                ]
          ]
      <def>
        pattern (test/dynamic/semantics/calc/code/lexer.ml[138,6798+4]..test/dynamic/semantics/calc/code/lexer.ml[138,6798+9])
          Tpat_var "token/303"
        expression (test/dynamic/semantics/calc/code/lexer.ml[138,6798+10]..test/dynamic/semantics/calc/code/lexer.ml[139,6817+33]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (test/dynamic/semantics/calc/code/lexer.ml[138,6798+10]..test/dynamic/semantics/calc/code/lexer.ml[138,6798+16])
                Tpat_var "lexbuf/335"
              expression (test/dynamic/semantics/calc/code/lexer.ml[139,6817+3]..test/dynamic/semantics/calc/code/lexer.ml[139,6817+33])
                Texp_apply
                expression (test/dynamic/semantics/calc/code/lexer.ml[139,6817+3]..test/dynamic/semantics/calc/code/lexer.ml[139,6817+24])
                  Texp_ident "__ocaml_lex_token_rec/304"
                [
                  <arg>
                    Nolabel
                    expression (test/dynamic/semantics/calc/code/lexer.ml[139,6817+25]..test/dynamic/semantics/calc/code/lexer.ml[139,6817+31])
                      Texp_ident "lexbuf/335"
                  <arg>
                    Nolabel
                    expression (test/dynamic/semantics/calc/code/lexer.ml[139,6817+32]..test/dynamic/semantics/calc/code/lexer.ml[139,6817+33])
                      Texp_constant Const_int 5
                ]
          ]
      <def>
        pattern (test/dynamic/semantics/calc/code/lexer.ml[140,6851+4]..test/dynamic/semantics/calc/code/lexer.ml[140,6851+25])
          Tpat_var "__ocaml_lex_token_rec/304"
        expression (test/dynamic/semantics/calc/code/lexer.ml[140,6851+26]..test/dynamic/semantics/calc/code/lexer.ml[203,8722+52]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (test/dynamic/semantics/calc/code/lexer.ml[140,6851+26]..test/dynamic/semantics/calc/code/lexer.ml[140,6851+32])
                Tpat_var "lexbuf/336"
              expression (test/dynamic/semantics/calc/code/lexer.ml[140,6851+33]..test/dynamic/semantics/calc/code/lexer.ml[203,8722+52]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (test/dynamic/semantics/calc/code/lexer.ml[140,6851+33]..test/dynamic/semantics/calc/code/lexer.ml[140,6851+50])
                      Tpat_var "__ocaml_lex_state/337"
                    expression (test/dynamic/semantics/calc/code/lexer.ml[141,6904+2]..test/dynamic/semantics/calc/code/lexer.ml[203,8722+52])
                      Texp_match
                      expression (test/dynamic/semantics/calc/code/lexer.ml[141,6904+8]..test/dynamic/semantics/calc/code/lexer.ml[141,6904+65])
                        Texp_apply
                        expression (test/dynamic/semantics/calc/code/lexer.ml[141,6904+8]..test/dynamic/semantics/calc/code/lexer.ml[141,6904+21])
                          Texp_ident "Stdlib!.Lexing.engine"
                        [
                          <arg>
                            Nolabel
                            expression (test/dynamic/semantics/calc/code/lexer.ml[141,6904+22]..test/dynamic/semantics/calc/code/lexer.ml[141,6904+40])
                              Texp_ident "__ocaml_lex_tables/276"
                          <arg>
                            Nolabel
                            expression (test/dynamic/semantics/calc/code/lexer.ml[141,6904+41]..test/dynamic/semantics/calc/code/lexer.ml[141,6904+58])
                              Texp_ident "__ocaml_lex_state/337"
                          <arg>
                            Nolabel
                            expression (test/dynamic/semantics/calc/code/lexer.ml[141,6904+59]..test/dynamic/semantics/calc/code/lexer.ml[141,6904+65])
                              Texp_ident "lexbuf/336"
                        ]
                      [
                        <case>
                          pattern (test/dynamic/semantics/calc/code/lexer.ml[142,6975+8]..test/dynamic/semantics/calc/code/lexer.ml[142,6975+9])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/code/lexer.ml[142,6975+8]..test/dynamic/semantics/calc/code/lexer.ml[142,6975+9])
                              Tpat_constant Const_int 0
                          expression (test/dynamic/semantics/calc/code/lexer.mll[29,7038+4]..test/dynamic/semantics/calc/code/lexer.mll[29,7038+20])
                            Texp_apply
                            expression (test/dynamic/semantics/calc/code/lexer.mll[29,7038+6]..test/dynamic/semantics/calc/code/lexer.mll[29,7038+11])
                              Texp_ident "token/303"
                            [
                              <arg>
                                Nolabel
                                expression (test/dynamic/semantics/calc/code/lexer.mll[29,7038+12]..test/dynamic/semantics/calc/code/lexer.mll[29,7038+18])
                                  Texp_ident "lexbuf/336"
                            ]
                        <case>
                          pattern (test/dynamic/semantics/calc/code/lexer.ml[147,7110+4]..test/dynamic/semantics/calc/code/lexer.ml[147,7110+5])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/code/lexer.ml[147,7110+4]..test/dynamic/semantics/calc/code/lexer.ml[147,7110+5])
                              Tpat_constant Const_int 1
                          expression (test/dynamic/semantics/calc/code/lexer.mll[31,7169+4]..test/dynamic/semantics/calc/code/lexer.mll[31,7169+11])
                            Texp_construct "EOL"
                            []
                        <case>
                          pattern (test/dynamic/semantics/calc/code/lexer.ml[152,7232+4]..test/dynamic/semantics/calc/code/lexer.ml[152,7232+5])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/code/lexer.ml[152,7232+4]..test/dynamic/semantics/calc/code/lexer.ml[152,7232+5])
                              Tpat_constant Const_int 2
                          expression (test/dynamic/semantics/calc/code/lexer.ml[153,7241+0]..test/dynamic/semantics/calc/code/lexer.mll[33,7498+29])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (test/dynamic/semantics/calc/code/lexer.mll[32,7295+16]..test/dynamic/semantics/calc/code/lexer.mll[32,7295+17])
                                  Tpat_var "i/339"
                                expression (test/dynamic/semantics/calc/code/lexer.ml[157,7363+2]..test/dynamic/semantics/calc/code/lexer.ml[157,7363+81])
                                  Texp_apply
                                  expression (test/dynamic/semantics/calc/code/lexer.ml[157,7363+2]..test/dynamic/semantics/calc/code/lexer.ml[157,7363+19])
                                    Texp_ident "Stdlib!.Lexing.sub_lexeme"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/semantics/calc/code/lexer.ml[157,7363+20]..test/dynamic/semantics/calc/code/lexer.ml[157,7363+26])
                                        Texp_ident "lexbuf/336"
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/semantics/calc/code/lexer.ml[157,7363+27]..test/dynamic/semantics/calc/code/lexer.ml[157,7363+54])
                                        Texp_field
                                        expression (test/dynamic/semantics/calc/code/lexer.ml[157,7363+27]..test/dynamic/semantics/calc/code/lexer.ml[157,7363+33])
                                          Texp_ident "lexbuf/336"
                                        "Lexing.lex_start_pos"
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/semantics/calc/code/lexer.ml[157,7363+55]..test/dynamic/semantics/calc/code/lexer.ml[157,7363+81])
                                        Texp_field
                                        expression (test/dynamic/semantics/calc/code/lexer.ml[157,7363+55]..test/dynamic/semantics/calc/code/lexer.ml[157,7363+61])
                                          Texp_ident "lexbuf/336"
                                        "Lexing.lex_curr_pos"
                                  ]
                            ]
                            expression (test/dynamic/semantics/calc/code/lexer.mll[33,7498+4]..test/dynamic/semantics/calc/code/lexer.mll[33,7498+29])
                              Texp_construct "INT"
                              [
                                expression (test/dynamic/semantics/calc/code/lexer.mll[33,7498+10]..test/dynamic/semantics/calc/code/lexer.mll[33,7498+27])
                                  Texp_apply
                                  expression (test/dynamic/semantics/calc/code/lexer.mll[33,7498+11]..test/dynamic/semantics/calc/code/lexer.mll[33,7498+24])
                                    Texp_ident "Stdlib!.int_of_string"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/semantics/calc/code/lexer.mll[33,7498+25]..test/dynamic/semantics/calc/code/lexer.mll[33,7498+26])
                                        Texp_ident "i/339"
                                  ]
                              ]
                        <case>
                          pattern (test/dynamic/semantics/calc/code/lexer.ml[162,7579+4]..test/dynamic/semantics/calc/code/lexer.ml[162,7579+5])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/code/lexer.ml[162,7579+4]..test/dynamic/semantics/calc/code/lexer.ml[162,7579+5])
                              Tpat_constant Const_int 3
                          expression (test/dynamic/semantics/calc/code/lexer.mll[35,7638+4]..test/dynamic/semantics/calc/code/lexer.mll[35,7638+12])
                            Texp_construct "PLUS"
                            []
                        <case>
                          pattern (test/dynamic/semantics/calc/code/lexer.ml[167,7702+4]..test/dynamic/semantics/calc/code/lexer.ml[167,7702+5])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/code/lexer.ml[167,7702+4]..test/dynamic/semantics/calc/code/lexer.ml[167,7702+5])
                              Tpat_constant Const_int 4
                          expression (test/dynamic/semantics/calc/code/lexer.mll[37,7761+4]..test/dynamic/semantics/calc/code/lexer.mll[37,7761+13])
                            Texp_construct "MINUS"
                            []
                        <case>
                          pattern (test/dynamic/semantics/calc/code/lexer.ml[172,7826+4]..test/dynamic/semantics/calc/code/lexer.ml[172,7826+5])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/code/lexer.ml[172,7826+4]..test/dynamic/semantics/calc/code/lexer.ml[172,7826+5])
                              Tpat_constant Const_int 5
                          expression (test/dynamic/semantics/calc/code/lexer.mll[39,7885+4]..test/dynamic/semantics/calc/code/lexer.mll[39,7885+13])
                            Texp_construct "TIMES"
                            []
                        <case>
                          pattern (test/dynamic/semantics/calc/code/lexer.ml[177,7950+4]..test/dynamic/semantics/calc/code/lexer.ml[177,7950+5])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/code/lexer.ml[177,7950+4]..test/dynamic/semantics/calc/code/lexer.ml[177,7950+5])
                              Tpat_constant Const_int 6
                          expression (test/dynamic/semantics/calc/code/lexer.mll[41,8009+4]..test/dynamic/semantics/calc/code/lexer.mll[41,8009+11])
                            Texp_construct "DIV"
                            []
                        <case>
                          pattern (test/dynamic/semantics/calc/code/lexer.ml[182,8072+4]..test/dynamic/semantics/calc/code/lexer.ml[182,8072+5])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/code/lexer.ml[182,8072+4]..test/dynamic/semantics/calc/code/lexer.ml[182,8072+5])
                              Tpat_constant Const_int 7
                          expression (test/dynamic/semantics/calc/code/lexer.mll[43,8131+4]..test/dynamic/semantics/calc/code/lexer.mll[43,8131+14])
                            Texp_construct "LPAREN"
                            []
                        <case>
                          pattern (test/dynamic/semantics/calc/code/lexer.ml[187,8197+4]..test/dynamic/semantics/calc/code/lexer.ml[187,8197+5])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/code/lexer.ml[187,8197+4]..test/dynamic/semantics/calc/code/lexer.ml[187,8197+5])
                              Tpat_constant Const_int 8
                          expression (test/dynamic/semantics/calc/code/lexer.mll[45,8256+4]..test/dynamic/semantics/calc/code/lexer.mll[45,8256+14])
                            Texp_construct "RPAREN"
                            []
                        <case>
                          pattern (test/dynamic/semantics/calc/code/lexer.ml[192,8322+4]..test/dynamic/semantics/calc/code/lexer.ml[192,8322+5])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/code/lexer.ml[192,8322+4]..test/dynamic/semantics/calc/code/lexer.ml[192,8322+5])
                              Tpat_constant Const_int 9
                          expression (test/dynamic/semantics/calc/code/lexer.mll[47,8381+4]..test/dynamic/semantics/calc/code/lexer.mll[47,8381+11])
                            Texp_construct "DOT"
                            []
                        <case>
                          pattern (test/dynamic/semantics/calc/code/lexer.ml[197,8444+4]..test/dynamic/semantics/calc/code/lexer.ml[197,8444+6])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/code/lexer.ml[197,8444+4]..test/dynamic/semantics/calc/code/lexer.ml[197,8444+6])
                              Tpat_constant Const_int 10
                          expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+4]..test/dynamic/semantics/calc/code/lexer.mll[49,8504+107])
                            Texp_apply
                            expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+6]..test/dynamic/semantics/calc/code/lexer.mll[49,8504+11])
                              Texp_ident "Stdlib!.raise"
                            [
                              <arg>
                                Nolabel
                                expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+12]..test/dynamic/semantics/calc/code/lexer.mll[49,8504+105])
                                  Texp_construct "Error"
                                  [
                                    expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+19]..test/dynamic/semantics/calc/code/lexer.mll[49,8504+104])
                                      Texp_apply
                                      expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+20]..test/dynamic/semantics/calc/code/lexer.mll[49,8504+34])
                                        Texp_ident "Stdlib!.Printf.sprintf"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+35]..test/dynamic/semantics/calc/code/lexer.mll[49,8504+74])
                                            Texp_construct "CamlinternalFormatBasics.Format"
                                            [
                                              expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+35]..test/dynamic/semantics/calc/code/lexer.mll[49,8504+74]) ghost
                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                [
                                                  expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+35]..test/dynamic/semantics/calc/code/lexer.mll[49,8504+74]) ghost
                                                    Texp_constant Const_string("At offset ",(test/dynamic/semantics/calc/code/lexer.mll[49,8504+35]..test/dynamic/semantics/calc/code/lexer.mll[49,8504+74]) ghost,None)
                                                  expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+35]..test/dynamic/semantics/calc/code/lexer.mll[49,8504+74]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.Int"
                                                    [
                                                      expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+35]..test/dynamic/semantics/calc/code/lexer.mll[49,8504+74]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.Int_d"
                                                        []
                                                      expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+35]..test/dynamic/semantics/calc/code/lexer.mll[49,8504+74]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                        []
                                                      expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+35]..test/dynamic/semantics/calc/code/lexer.mll[49,8504+74]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.No_precision"
                                                        []
                                                      expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+35]..test/dynamic/semantics/calc/code/lexer.mll[49,8504+74]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                        [
                                                          expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+35]..test/dynamic/semantics/calc/code/lexer.mll[49,8504+74]) ghost
                                                            Texp_constant Const_string(": unexpected character.\n",(test/dynamic/semantics/calc/code/lexer.mll[49,8504+35]..test/dynamic/semantics/calc/code/lexer.mll[49,8504+74]) ghost,None)
                                                          expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+35]..test/dynamic/semantics/calc/code/lexer.mll[49,8504+74]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                            []
                                                        ]
                                                    ]
                                                ]
                                              expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+35]..test/dynamic/semantics/calc/code/lexer.mll[49,8504+74]) ghost
                                                Texp_constant Const_string("At offset %d: unexpected character.\n",(test/dynamic/semantics/calc/code/lexer.mll[49,8504+35]..test/dynamic/semantics/calc/code/lexer.mll[49,8504+74]) ghost,None)
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+75]..test/dynamic/semantics/calc/code/lexer.mll[49,8504+103])
                                            Texp_apply
                                            expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+76]..test/dynamic/semantics/calc/code/lexer.mll[49,8504+95])
                                              Texp_ident "Stdlib!.Lexing.lexeme_start"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (test/dynamic/semantics/calc/code/lexer.mll[49,8504+96]..test/dynamic/semantics/calc/code/lexer.mll[49,8504+102])
                                                  Texp_ident "lexbuf/336"
                                            ]
                                      ]
                                  ]
                            ]
                        <case>
                          pattern (test/dynamic/semantics/calc/code/lexer.ml[202,8663+4]..test/dynamic/semantics/calc/code/lexer.ml[202,8663+21])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/code/lexer.ml[202,8663+4]..test/dynamic/semantics/calc/code/lexer.ml[202,8663+21])
                              Tpat_var "__ocaml_lex_state/338"
                          expression (test/dynamic/semantics/calc/code/lexer.ml[202,8663+25]..test/dynamic/semantics/calc/code/lexer.ml[203,8722+52])
                            Texp_sequence
                            expression (test/dynamic/semantics/calc/code/lexer.ml[202,8663+25]..test/dynamic/semantics/calc/code/lexer.ml[202,8663+57])
                              Texp_apply
                              expression (test/dynamic/semantics/calc/code/lexer.ml[202,8663+25]..test/dynamic/semantics/calc/code/lexer.ml[202,8663+50])
                                Texp_field
                                expression (test/dynamic/semantics/calc/code/lexer.ml[202,8663+25]..test/dynamic/semantics/calc/code/lexer.ml[202,8663+31])
                                  Texp_ident "lexbuf/336"
                                "Lexing.refill_buff"
                              [
                                <arg>
                                  Nolabel
                                  expression (test/dynamic/semantics/calc/code/lexer.ml[202,8663+51]..test/dynamic/semantics/calc/code/lexer.ml[202,8663+57])
                                    Texp_ident "lexbuf/336"
                              ]
                            expression (test/dynamic/semantics/calc/code/lexer.ml[203,8722+6]..test/dynamic/semantics/calc/code/lexer.ml[203,8722+52])
                              Texp_apply
                              expression (test/dynamic/semantics/calc/code/lexer.ml[203,8722+6]..test/dynamic/semantics/calc/code/lexer.ml[203,8722+27])
                                Texp_ident "__ocaml_lex_token_rec/304"
                              [
                                <arg>
                                  Nolabel
                                  expression (test/dynamic/semantics/calc/code/lexer.ml[203,8722+28]..test/dynamic/semantics/calc/code/lexer.ml[203,8722+34])
                                    Texp_ident "lexbuf/336"
                                <arg>
                                  Nolabel
                                  expression (test/dynamic/semantics/calc/code/lexer.ml[203,8722+35]..test/dynamic/semantics/calc/code/lexer.ml[203,8722+52])
                                    Texp_ident "__ocaml_lex_state/338"
                              ]
                      ]
                ]
          ]
    ]
]

{<Dune__exe__Lexer>
 "Error"[extension constructor] -> <Dune__exe__Lexer.0>;
 "__ocaml_lex_line_rec"[value] -> <Dune__exe__Lexer.3>;
 "__ocaml_lex_tables"[value] -> <Dune__exe__Lexer.1>;
 "__ocaml_lex_token_rec"[value] -> <Dune__exe__Lexer.5>;
 "line"[value] -> <Dune__exe__Lexer.2>;
 "token"[value] -> <Dune__exe__Lexer.4>;
 }

(setglobal Dune__exe__Lexer!
  (let
    (Error/275 =
       (makeblock 248 "Dune__exe__Lexer.Error" (caml_fresh_oo_id 0))
     __ocaml_lex_tables/276 =
       [0:
        "\000\000\254\255\255\255\001\000\253\255\003\000\245\255\246\255\247\255\248\255\249\255\250\255\251\255\252\255\r\000\254\255\255\255"
        "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\002\000\255\255\255\255"
        "\003\000\000\000\000\000\003\000\000\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000"
        "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\002\000\016\000\015\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\b\000\011\000\r\000\000\000\012\000\007\000\n

        "" "" "" "" "" ""])
    (letrec
      (line/301
         (function lexbuf/305
           (funct-body Dune__exe__Lexer.line test/dynamic/semantics/calc/code/lexer.ml(106)<ghost>:5685-5726
             (before Dune__exe__Lexer.line test/dynamic/semantics/calc/code/lexer.ml(107):5697-5726
               (after Dune__exe__Lexer.line test/dynamic/semantics/calc/code/lexer.ml(107):5697-5726
                 (apply __ocaml_lex_line_rec/302 lexbuf/305 0)))))
        __ocaml_lex_line_rec/302
          (function lexbuf/306 __ocaml_lex_state/307[int]
            (funct-body Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.ml(108)<ghost>:5752-6796
              (before Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.ml(109):5781-6796
                (let
                  (__ocaml_lex_state/332 =
                     (after Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.ml(109):5787-5844
                       (apply (field_imm 19 (global Stdlib__Lexing!))
                         __ocaml_lex_tables/276 __ocaml_lex_state/307
                         lexbuf/306)))
                  (catch
                    (if (isout 2 __ocaml_lex_state/332) (exit 1)
                      (switch* __ocaml_lex_state/332
                       case int 0:
                        (before Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.ml(111):5863-6151
                          (let
                            (line/333 =
                               (after Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.ml(115):5995-6074
                                 (apply
                                   (field_imm 15 (global Stdlib__Lexing!))
                                   lexbuf/306 (field_int 4 lexbuf/306)
                                   (field_int 5 lexbuf/306))))
                            (before Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.mll(15):6132-6151
                              (makeblock 0 (*,int) (makeblock 0 line/333) 1))))
                       case int 1:
                        (before Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.mll(18):6266-6281
                          [0: 0 0])
                       case int 2:
                        (before Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.ml(126):6342-6634
                          (let
                            (line/334 =
                               (after Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.ml(130):6468-6547
                                 (apply
                                   (field_imm 15 (global Stdlib__Lexing!))
                                   lexbuf/306 (field_int 4 lexbuf/306)
                                   (field_int 5 lexbuf/306))))
                            (before Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.mll(22):6605-6634
                              (makeblock 0 (*,int)
                                (makeblock 0
                                  (after Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.mll(22):6612-6625
                                    (apply (field_imm 27 (global Stdlib!))
                                      line/334 "\n")))
                                0))))))
                   with (1)
                    (before Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.ml(135):6711-6796
                      (seq
                        (after Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.ml(135):6711-6743
                          (apply (field_imm 0 lexbuf/306) lexbuf/306))
                        (before Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.ml(136):6751-6796
                          (after Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.ml(136):6751-6796
                            (apply __ocaml_lex_line_rec/302 lexbuf/306
                              __ocaml_lex_state/332))))))))))
        token/303
          (function lexbuf/335
            (funct-body Dune__exe__Lexer.token test/dynamic/semantics/calc/code/lexer.ml(138)<ghost>:6808-6850
              (before Dune__exe__Lexer.token test/dynamic/semantics/calc/code/lexer.ml(139):6820-6850
                (after Dune__exe__Lexer.token test/dynamic/semantics/calc/code/lexer.ml(139):6820-6850
                  (apply __ocaml_lex_token_rec/304 lexbuf/335 5)))))
        __ocaml_lex_token_rec/304
          (function lexbuf/336 __ocaml_lex_state/337[int]
            (funct-body Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.ml(140)<ghost>:6877-8774
              (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.ml(141):6906-8774
                (let
                  (__ocaml_lex_state/338 =
                     (after Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.ml(141):6912-6969
                       (apply (field_imm 19 (global Stdlib__Lexing!))
                         __ocaml_lex_tables/276 __ocaml_lex_state/337
                         lexbuf/336)))
                  (catch
                    (if (isout 10 __ocaml_lex_state/338) (exit 2)
                      (switch* __ocaml_lex_state/338
                       case int 0:
                        (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(29):7042-7058
                          (after Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(29):7042-7058
                            (apply token/303 lexbuf/336)))
                       case int 1:
                        (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(31):7173-7180
                          5)
                       case int 2:
                        (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.ml(153):7241-7527
                          (let
                            (i/339 =
                               (after Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.ml(157):7365-7444
                                 (apply
                                   (field_imm 15 (global Stdlib__Lexing!))
                                   lexbuf/336 (field_int 4 lexbuf/336)
                                   (field_int 5 lexbuf/336))))
                            (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(33):7502-7527
                              (makeblock 0 (int)
                                (after Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(33):7508-7525
                                  (caml_int_of_string i/339))))))
                       case int 3:
                        (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(35):7642-7650
                          2)
                       case int 4:
                        (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(37):7765-7774
                          3)
                       case int 5:
                        (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(39):7889-7898
                          0)
                       case int 6:
                        (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(41):8013-8020
                          7)
                       case int 7:
                        (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(43):8135-8145
                          4)
                       case int 8:
                        (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(45):8260-8270
                          1)
                       case int 9:
                        (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(47):8385-8392
                          6)
                       case int 10:
                        (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(49):8508-8611
                          (raise
                            (after Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(49):8508-8611
                              (makeblock 0 Error/275
                                (after Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(49):8523-8608
                                  (apply
                                    (field_imm 3 (global Stdlib__Printf!))
                                    [0:
                                     [11:
                                      "At offset "
                                      [4:
                                       0 0 0
                                       [11: ": unexpected character.\n" 0]]]
                                     "At offset %d: unexpected character.\n"]
                                    (after Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(49):8579-8607
                                      (apply
                                        (field_imm 9
                                          (global Stdlib__Lexing!))
                                        lexbuf/336))))))))))
                   with (2)
                    (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.ml(202):8688-8774
                      (seq
                        (after Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.ml(202):8688-8720
                          (apply (field_imm 0 lexbuf/336) lexbuf/336))
                        (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.ml(203):8728-8774
                          (after Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.ml(203):8728-8774
                            (apply __ocaml_lex_token_rec/304 lexbuf/336
                              __ocaml_lex_state/338)))))))))))
      (pseudo <unknown location>
        (makeblock 0 Error/275 __ocaml_lex_tables/276 line/301
          __ocaml_lex_line_rec/302 token/303 __ocaml_lex_token_rec/304)))))
(setglobal Dune__exe__Lexer!
  (let
    (Error/275 =
       (makeblock 248 "Dune__exe__Lexer.Error" (caml_fresh_oo_id 0))
     __ocaml_lex_tables/276 =
       [0:
        "\000\000\254\255\255\255\001\000\253\255\003\000\245\255\246\255\247\255\248\255\249\255\250\255\251\255\252\255\r\000\254\255\255\255"
        "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\002\000\255\255\255\255"
        "\003\000\000\000\000\000\003\000\000\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000"
        "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\002\000\016\000\015\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\b\000\011\000\r\000\000\000\012\000\007\000\n
        "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\003\000\005\000\005\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\005\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\005\000\005\000\005\000\005\000\255\255\005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\003\000\255\255\005\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255"
        "" "" "" "" "" ""])
    (letrec
      (line/301
         (function lexbuf/305
           (funct-body Dune__exe__Lexer.line test/dynamic/semantics/calc/code/lexer.ml(106)<ghost>:5685-5726
             (before Dune__exe__Lexer.line test/dynamic/semantics/calc/code/lexer.ml(107):5697-5726
               (after Dune__exe__Lexer.line test/dynamic/semantics/calc/code/lexer.ml(107):5697-5726
                 (apply __ocaml_lex_line_rec/302 lexbuf/305 0)))))
        __ocaml_lex_line_rec/302
          (function lexbuf/306 __ocaml_lex_state/307[int]
            (funct-body Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.ml(108)<ghost>:5752-6796
              (before Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.ml(109):5781-6796
                (let
                  (__ocaml_lex_state/332 =
                     (after Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.ml(109):5787-5844
                       (apply (field_imm 19 (global Stdlib__Lexing!))
                         __ocaml_lex_tables/276 __ocaml_lex_state/307
                         lexbuf/306)))
                  (if (isout 2 __ocaml_lex_state/332)
                    (before Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.ml(135):6711-6796
                      (seq
                        (after Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.ml(135):6711-6743
                          (apply (field_imm 0 lexbuf/306) lexbuf/306))
                        (before Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.ml(136):6751-6796
                          (after Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.ml(136):6751-6796
                            (apply __ocaml_lex_line_rec/302 lexbuf/306
                              __ocaml_lex_state/332)))))
                    (switch* __ocaml_lex_state/332
                     case int 0:
                      (before Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.ml(111):5863-6151
                        (let
                          (line/333 =
                             (after Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.ml(115):5995-6074
                               (apply (field_imm 15 (global Stdlib__Lexing!))
                                 lexbuf/306 (field_int 4 lexbuf/306)
                                 (field_int 5 lexbuf/306))))
                          (before Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.mll(15):6132-6151
                            (makeblock 0 (*,int) (makeblock 0 line/333) 1))))
                     case int 1:
                      (before Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.mll(18):6266-6281
                        [0: 0 0])
                     case int 2:
                      (before Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.ml(126):6342-6634
                        (let
                          (line/334 =
                             (after Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.ml(130):6468-6547
                               (apply (field_imm 15 (global Stdlib__Lexing!))
                                 lexbuf/306 (field_int 4 lexbuf/306)
                                 (field_int 5 lexbuf/306))))
                          (before Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.mll(22):6605-6634
                            (makeblock 0 (*,int)
                              (makeblock 0
                                (after Dune__exe__Lexer.__ocaml_lex_line_rec test/dynamic/semantics/calc/code/lexer.mll(22):6612-6625
                                  (apply (field_imm 27 (global Stdlib!))
                                    line/334 "\n")))
                              0))))))))))
        token/303
          (function lexbuf/335
            (funct-body Dune__exe__Lexer.token test/dynamic/semantics/calc/code/lexer.ml(138)<ghost>:6808-6850
              (before Dune__exe__Lexer.token test/dynamic/semantics/calc/code/lexer.ml(139):6820-6850
                (after Dune__exe__Lexer.token test/dynamic/semantics/calc/code/lexer.ml(139):6820-6850
                  (apply __ocaml_lex_token_rec/304 lexbuf/335 5)))))
        __ocaml_lex_token_rec/304
          (function lexbuf/336 __ocaml_lex_state/337[int]
            (funct-body Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.ml(140)<ghost>:6877-8774
              (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.ml(141):6906-8774
                (let
                  (__ocaml_lex_state/338 =
                     (after Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.ml(141):6912-6969
                       (apply (field_imm 19 (global Stdlib__Lexing!))
                         __ocaml_lex_tables/276 __ocaml_lex_state/337
                         lexbuf/336)))
                  (if (isout 10 __ocaml_lex_state/338)
                    (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.ml(202):8688-8774
                      (seq
                        (after Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.ml(202):8688-8720
                          (apply (field_imm 0 lexbuf/336) lexbuf/336))
                        (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.ml(203):8728-8774
                          (after Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.ml(203):8728-8774
                            (apply __ocaml_lex_token_rec/304 lexbuf/336
                              __ocaml_lex_state/338)))))
                    (switch* __ocaml_lex_state/338
                     case int 0:
                      (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(29):7042-7058
                        (after Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(29):7042-7058
                          (apply token/303 lexbuf/336)))
                     case int 1:
                      (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(31):7173-7180
                        5)
                     case int 2:
                      (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.ml(153):7241-7527
                        (let
                          (i/339 =
                             (after Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.ml(157):7365-7444
                               (apply (field_imm 15 (global Stdlib__Lexing!))
                                 lexbuf/336 (field_int 4 lexbuf/336)
                                 (field_int 5 lexbuf/336))))
                          (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(33):7502-7527
                            (makeblock 0 (int)
                              (after Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(33):7508-7525
                                (caml_int_of_string i/339))))))
                     case int 3:
                      (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(35):7642-7650
                        2)
                     case int 4:
                      (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(37):7765-7774
                        3)
                     case int 5:
                      (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(39):7889-7898
                        0)
                     case int 6:
                      (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(41):8013-8020
                        7)
                     case int 7:
                      (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(43):8135-8145
                        4)
                     case int 8:
                      (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(45):8260-8270
                        1)
                     case int 9:
                      (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(47):8385-8392
                        6)
                     case int 10:
                      (before Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(49):8508-8611
                        (raise
                          (after Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(49):8508-8611
                            (makeblock 0 Error/275
                              (after Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(49):8523-8608
                                (apply (field_imm 3 (global Stdlib__Printf!))
                                  [0:
                                   [11:
                                    "At offset "
                                    [4:
                                     0 0 0
                                     [11: ": unexpected character.\n" 0]]]
                                   "At offset %d: unexpected character.\n"]
                                  (after Dune__exe__Lexer.__ocaml_lex_token_rec test/dynamic/semantics/calc/code/lexer.mll(49):8579-8607
                                    (apply
                                      (field_imm 9 (global Stdlib__Lexing!))
                                      lexbuf/336)))))))))))))))
      (pseudo <unknown location>
        (makeblock 0 Error/275 __ocaml_lex_tables/276 line/301
          __ocaml_lex_line_rec/302 token/303 __ocaml_lex_token_rec/304)))))
