[
  structure_item (test/dynamic/semantics/calc/table/lexer.mll[2,52+2]..[2,52+13])
    Pstr_open Fresh
    module_expr (test/dynamic/semantics/calc/table/lexer.mll[2,52+7]..[2,52+13])
      Pmod_ident "Parser" (test/dynamic/semantics/calc/table/lexer.mll[2,52+7]..[2,52+13])
  structure_item (test/dynamic/semantics/calc/table/lexer.mll[4,67+2]..[4,67+27])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (test/dynamic/semantics/calc/table/lexer.mll[4,67+2]..[4,67+27])
          pext_name = "Error"
          pext_kind =
            Pext_decl
              [
                core_type (test/dynamic/semantics/calc/table/lexer.mll[4,67+21]..[4,67+27])
                  Ptyp_constr "string" (test/dynamic/semantics/calc/table/lexer.mll[4,67+21]..[4,67+27])
                  []
              ]
              None
  structure_item (test/dynamic/semantics/calc/table/lexer.ml[9,146+0]..[104,5671+1])
    Pstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/semantics/calc/table/lexer.ml[9,146+4]..[9,146+22])
          Ppat_var "__ocaml_lex_tables" (test/dynamic/semantics/calc/table/lexer.ml[9,146+4]..[9,146+22])
        expression (test/dynamic/semantics/calc/table/lexer.ml[9,146+25]..[104,5671+1])
          Pexp_record
          [
            "Lexing.lex_base" (test/dynamic/semantics/calc/table/lexer.ml[10,173+2]..[10,173+17])
              expression (test/dynamic/semantics/calc/table/lexer.ml[11,193+3]..[13,333+13])
                Pexp_constant PConst_string("\000\000\254\255\255\255\001\000\253\255\003\000\245\255\246\255\247\255\248\255\249\255\250\255\251\255\252\255\r\000\254\255\255\255",(test/dynamic/semantics/calc/table/lexer.ml[11,193+4]..[13,333+12]),None)
            "Lexing.lex_backtrk" (test/dynamic/semantics/calc/table/lexer.ml[14,348+2]..[14,348+20])
              expression (test/dynamic/semantics/calc/table/lexer.ml[15,371+3]..[17,511+13])
                Pexp_constant PConst_string("\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\002\000\255\255\255\255",(test/dynamic/semantics/calc/table/lexer.ml[15,371+4]..[17,511+12]),None)
            "Lexing.lex_default" (test/dynamic/semantics/calc/table/lexer.ml[18,526+2]..[18,526+20])
              expression (test/dynamic/semantics/calc/table/lexer.ml[19,549+3]..[21,689+13])
                Pexp_constant PConst_string("\003\000\000\000\000\000\003\000\000\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000",(test/dynamic/semantics/calc/table/lexer.ml[19,549+4]..[21,689+12]),None)
            "Lexing.lex_trans" (test/dynamic/semantics/calc/table/lexer.ml[22,704+2]..[22,704+18])
              expression (test/dynamic/semantics/calc/table/lexer.ml[23,725+3]..[56,3035+53])
                Pexp_constant PConst_string("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\002\000\016\000\015\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\b\000\011\000\r\000\000\000\012\000\007\000\ntest/dynamic/semantics/calc/table/lexer.ml[23,725+4]..[56,3035+52]),None)
            "Lexing.lex_check" (test/dynamic/semantics/calc/table/lexer.ml[57,3090+2]..[57,3090+18])
              expression (test/dynamic/semantics/calc/table/lexer.ml[58,3111+3]..[91,5421+53])
                Pexp_constant PConst_stringtest/dynamic/semantics/calc/table/lexer.ml[58,3111+4]..[91,5421+52]),None)
            "Lexing.lex_base_code" (test/dynamic/semantics/calc/table/lexer.ml[92,5476+2]..[92,5476+22])
              expression (test/dynamic/semantics/calc/table/lexer.ml[93,5501+3]..[93,5501+5])
                Pexp_constant PConst_string("",(test/dynamic/semantics/calc/table/lexer.ml[93,5501+4]..[93,5501+4]),None)
            "Lexing.lex_backtrk_code" (test/dynamic/semantics/calc/table/lexer.ml[94,5508+2]..[94,5508+25])
              expression (test/dynamic/semantics/calc/table/lexer.ml[95,5536+3]..[95,5536+5])
                Pexp_constant PConst_string("",(test/dynamic/semantics/calc/table/lexer.ml[95,5536+4]..[95,5536+4]),None)
            "Lexing.lex_default_code" (test/dynamic/semantics/calc/table/lexer.ml[96,5543+2]..[96,5543+25])
              expression (test/dynamic/semantics/calc/table/lexer.ml[97,5571+3]..[97,5571+5])
                Pexp_constant PConst_string("",(test/dynamic/semantics/calc/table/lexer.ml[97,5571+4]..[97,5571+4]),None)
            "Lexing.lex_trans_code" (test/dynamic/semantics/calc/table/lexer.ml[98,5578+2]..[98,5578+23])
              expression (test/dynamic/semantics/calc/table/lexer.ml[99,5604+3]..[99,5604+5])
                Pexp_constant PConst_string("",(test/dynamic/semantics/calc/table/lexer.ml[99,5604+4]..[99,5604+4]),None)
            "Lexing.lex_check_code" (test/dynamic/semantics/calc/table/lexer.ml[100,5611+2]..[100,5611+23])
              expression (test/dynamic/semantics/calc/table/lexer.ml[101,5637+3]..[101,5637+5])
                Pexp_constant PConst_string("",(test/dynamic/semantics/calc/table/lexer.ml[101,5637+4]..[101,5637+4]),None)
            "Lexing.lex_code" (test/dynamic/semantics/calc/table/lexer.ml[102,5644+2]..[102,5644+17])
              expression (test/dynamic/semantics/calc/table/lexer.ml[103,5664+3]..[103,5664+5])
                Pexp_constant PConst_string("",(test/dynamic/semantics/calc/table/lexer.ml[103,5664+4]..[103,5664+4]),None)
          ]
          None
    ]
  structure_item (test/dynamic/semantics/calc/table/lexer.ml[106,5674+0]..[203,8758+52])
    Pstr_value Rec
    [
      <def>
        pattern (test/dynamic/semantics/calc/table/lexer.ml[106,5674+8]..[106,5674+12])
          Ppat_var "line" (test/dynamic/semantics/calc/table/lexer.ml[106,5674+8]..[106,5674+12])
        expression (test/dynamic/semantics/calc/table/lexer.ml[106,5674+13]..[107,5696+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (test/dynamic/semantics/calc/table/lexer.ml[106,5674+13]..[106,5674+19])
            Ppat_var "lexbuf" (test/dynamic/semantics/calc/table/lexer.ml[106,5674+13]..[106,5674+19])
          expression (test/dynamic/semantics/calc/table/lexer.ml[107,5696+3]..[107,5696+32])
            Pexp_apply
            expression (test/dynamic/semantics/calc/table/lexer.ml[107,5696+3]..[107,5696+23])
              Pexp_ident "__ocaml_lex_line_rec" (test/dynamic/semantics/calc/table/lexer.ml[107,5696+3]..[107,5696+23])
            [
              <arg>
              Nolabel
                expression (test/dynamic/semantics/calc/table/lexer.ml[107,5696+24]..[107,5696+30])
                  Pexp_ident "lexbuf" (test/dynamic/semantics/calc/table/lexer.ml[107,5696+24]..[107,5696+30])
              <arg>
              Nolabel
                expression (test/dynamic/semantics/calc/table/lexer.ml[107,5696+31]..[107,5696+32])
                  Pexp_constant PConst_int (0,None)
            ]
      <def>
        pattern (test/dynamic/semantics/calc/table/lexer.ml[108,5729+4]..[108,5729+24])
          Ppat_var "__ocaml_lex_line_rec" (test/dynamic/semantics/calc/table/lexer.ml[108,5729+4]..[108,5729+24])
        expression (test/dynamic/semantics/calc/table/lexer.ml[108,5729+25]..[136,6757+51]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (test/dynamic/semantics/calc/table/lexer.ml[108,5729+25]..[108,5729+31])
            Ppat_var "lexbuf" (test/dynamic/semantics/calc/table/lexer.ml[108,5729+25]..[108,5729+31])
          expression (test/dynamic/semantics/calc/table/lexer.ml[108,5729+32]..[136,6757+51]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (test/dynamic/semantics/calc/table/lexer.ml[108,5729+32]..[108,5729+49])
              Ppat_var "__ocaml_lex_state" (test/dynamic/semantics/calc/table/lexer.ml[108,5729+32]..[108,5729+49])
            expression (test/dynamic/semantics/calc/table/lexer.ml[109,5781+2]..[136,6757+51])
              Pexp_match
              expression (test/dynamic/semantics/calc/table/lexer.ml[109,5781+8]..[109,5781+65])
                Pexp_apply
                expression (test/dynamic/semantics/calc/table/lexer.ml[109,5781+8]..[109,5781+21])
                  Pexp_ident "Lexing.engine" (test/dynamic/semantics/calc/table/lexer.ml[109,5781+8]..[109,5781+21])
                [
                  <arg>
                  Nolabel
                    expression (test/dynamic/semantics/calc/table/lexer.ml[109,5781+22]..[109,5781+40])
                      Pexp_ident "__ocaml_lex_tables" (test/dynamic/semantics/calc/table/lexer.ml[109,5781+22]..[109,5781+40])
                  <arg>
                  Nolabel
                    expression (test/dynamic/semantics/calc/table/lexer.ml[109,5781+41]..[109,5781+58])
                      Pexp_ident "__ocaml_lex_state" (test/dynamic/semantics/calc/table/lexer.ml[109,5781+41]..[109,5781+58])
                  <arg>
                  Nolabel
                    expression (test/dynamic/semantics/calc/table/lexer.ml[109,5781+59]..[109,5781+65])
                      Pexp_ident "lexbuf" (test/dynamic/semantics/calc/table/lexer.ml[109,5781+59]..[109,5781+65])
                ]
              [
                <case>
                  pattern (test/dynamic/semantics/calc/table/lexer.ml[110,5852+8]..[110,5852+9])
                    Ppat_constant PConst_int (0,None)
                  expression (test/dynamic/semantics/calc/table/lexer.ml[111,5865+0]..test/dynamic/semantics/calc/table/lexer.mll[15,6133+23])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (test/dynamic/semantics/calc/table/lexer.mll[13,5920+21]..[13,5920+25])
                          Ppat_var "line" (test/dynamic/semantics/calc/table/lexer.mll[13,5920+21]..[13,5920+25])
                        expression (test/dynamic/semantics/calc/table/lexer.ml[115,5997+2]..[115,5997+81])
                          Pexp_apply
                          expression (test/dynamic/semantics/calc/table/lexer.ml[115,5997+2]..[115,5997+19])
                            Pexp_ident "Lexing.sub_lexeme" (test/dynamic/semantics/calc/table/lexer.ml[115,5997+2]..[115,5997+19])
                          [
                            <arg>
                            Nolabel
                              expression (test/dynamic/semantics/calc/table/lexer.ml[115,5997+20]..[115,5997+26])
                                Pexp_ident "lexbuf" (test/dynamic/semantics/calc/table/lexer.ml[115,5997+20]..[115,5997+26])
                            <arg>
                            Nolabel
                              expression (test/dynamic/semantics/calc/table/lexer.ml[115,5997+27]..[115,5997+54])
                                Pexp_field
                                expression (test/dynamic/semantics/calc/table/lexer.ml[115,5997+27]..[115,5997+33])
                                  Pexp_ident "lexbuf" (test/dynamic/semantics/calc/table/lexer.ml[115,5997+27]..[115,5997+33])
                                "Lexing.lex_start_pos" (test/dynamic/semantics/calc/table/lexer.ml[115,5997+34]..[115,5997+54])
                            <arg>
                            Nolabel
                              expression (test/dynamic/semantics/calc/table/lexer.ml[115,5997+55]..[115,5997+81])
                                Pexp_field
                                expression (test/dynamic/semantics/calc/table/lexer.ml[115,5997+55]..[115,5997+61])
                                  Pexp_ident "lexbuf" (test/dynamic/semantics/calc/table/lexer.ml[115,5997+55]..[115,5997+61])
                                "Lexing.lex_curr_pos" (test/dynamic/semantics/calc/table/lexer.ml[115,5997+62]..[115,5997+81])
                          ]
                    ]
                    expression (test/dynamic/semantics/calc/table/lexer.mll[15,6133+4]..[15,6133+23])
                      Pexp_tuple
                      [
                        expression (test/dynamic/semantics/calc/table/lexer.mll[15,6133+6]..[15,6133+15])
                          Pexp_construct "Some" (test/dynamic/semantics/calc/table/lexer.mll[15,6133+6]..[15,6133+10])
                          Some
                            expression (test/dynamic/semantics/calc/table/lexer.mll[15,6133+11]..[15,6133+15])
                              Pexp_ident "line" (test/dynamic/semantics/calc/table/lexer.mll[15,6133+11]..[15,6133+15])
                        expression (test/dynamic/semantics/calc/table/lexer.mll[15,6133+17]..[15,6133+21])
                          Pexp_construct "true" (test/dynamic/semantics/calc/table/lexer.mll[15,6133+17]..[15,6133+21])
                          None
                      ]
                <case>
                  pattern (test/dynamic/semantics/calc/table/lexer.ml[120,6209+4]..[120,6209+5])
                    Ppat_constant PConst_int (1,None)
                  expression (test/dynamic/semantics/calc/table/lexer.mll[18,6269+4]..[18,6269+19])
                    Pexp_tuple
                    [
                      expression (test/dynamic/semantics/calc/table/lexer.mll[18,6269+6]..[18,6269+10])
                        Pexp_construct "None" (test/dynamic/semantics/calc/table/lexer.mll[18,6269+6]..[18,6269+10])
                        None
                      expression (test/dynamic/semantics/calc/table/lexer.mll[18,6269+12]..[18,6269+17])
                        Pexp_construct "false" (test/dynamic/semantics/calc/table/lexer.mll[18,6269+12]..[18,6269+17])
                        None
                    ]
                <case>
                  pattern (test/dynamic/semantics/calc/table/lexer.ml[125,6341+4]..[125,6341+5])
                    Ppat_constant PConst_int (2,None)
                  expression (test/dynamic/semantics/calc/table/lexer.ml[126,6350+0]..test/dynamic/semantics/calc/table/lexer.mll[22,6612+33])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (test/dynamic/semantics/calc/table/lexer.mll[19,6405+15]..[19,6405+19])
                          Ppat_var "line" (test/dynamic/semantics/calc/table/lexer.mll[19,6405+15]..[19,6405+19])
                        expression (test/dynamic/semantics/calc/table/lexer.ml[130,6476+2]..[130,6476+81])
                          Pexp_apply
                          expression (test/dynamic/semantics/calc/table/lexer.ml[130,6476+2]..[130,6476+19])
                            Pexp_ident "Lexing.sub_lexeme" (test/dynamic/semantics/calc/table/lexer.ml[130,6476+2]..[130,6476+19])
                          [
                            <arg>
                            Nolabel
                              expression (test/dynamic/semantics/calc/table/lexer.ml[130,6476+20]..[130,6476+26])
                                Pexp_ident "lexbuf" (test/dynamic/semantics/calc/table/lexer.ml[130,6476+20]..[130,6476+26])
                            <arg>
                            Nolabel
                              expression (test/dynamic/semantics/calc/table/lexer.ml[130,6476+27]..[130,6476+54])
                                Pexp_field
                                expression (test/dynamic/semantics/calc/table/lexer.ml[130,6476+27]..[130,6476+33])
                                  Pexp_ident "lexbuf" (test/dynamic/semantics/calc/table/lexer.ml[130,6476+27]..[130,6476+33])
                                "Lexing.lex_start_pos" (test/dynamic/semantics/calc/table/lexer.ml[130,6476+34]..[130,6476+54])
                            <arg>
                            Nolabel
                              expression (test/dynamic/semantics/calc/table/lexer.ml[130,6476+55]..[130,6476+81])
                                Pexp_field
                                expression (test/dynamic/semantics/calc/table/lexer.ml[130,6476+55]..[130,6476+61])
                                  Pexp_ident "lexbuf" (test/dynamic/semantics/calc/table/lexer.ml[130,6476+55]..[130,6476+61])
                                "Lexing.lex_curr_pos" (test/dynamic/semantics/calc/table/lexer.ml[130,6476+62]..[130,6476+81])
                          ]
                    ]
                    expression (test/dynamic/semantics/calc/table/lexer.mll[22,6612+4]..[22,6612+33])
                      Pexp_tuple
                      [
                        expression (test/dynamic/semantics/calc/table/lexer.mll[22,6612+6]..[22,6612+24])
                          Pexp_construct "Some" (test/dynamic/semantics/calc/table/lexer.mll[22,6612+6]..[22,6612+10])
                          Some
                            expression (test/dynamic/semantics/calc/table/lexer.mll[22,6612+11]..[22,6612+24])
                              Pexp_apply
                              expression (test/dynamic/semantics/calc/table/lexer.mll[22,6612+17]..[22,6612+18])
                                Pexp_ident "^" (test/dynamic/semantics/calc/table/lexer.mll[22,6612+17]..[22,6612+18])
                              [
                                <arg>
                                Nolabel
                                  expression (test/dynamic/semantics/calc/table/lexer.mll[22,6612+12]..[22,6612+16])
                                    Pexp_ident "line" (test/dynamic/semantics/calc/table/lexer.mll[22,6612+12]..[22,6612+16])
                                <arg>
                                Nolabel
                                  expression (test/dynamic/semantics/calc/table/lexer.mll[22,6612+19]..[22,6612+23])
                                    Pexp_constant PConst_string("\n",(test/dynamic/semantics/calc/table/lexer.mll[22,6612+20]..[22,6612+22]),None)
                              ]
                        expression (test/dynamic/semantics/calc/table/lexer.mll[22,6612+26]..[22,6612+31])
                          Pexp_construct "false" (test/dynamic/semantics/calc/table/lexer.mll[22,6612+26]..[22,6612+31])
                          None
                      ]
                <case>
                  pattern (test/dynamic/semantics/calc/table/lexer.ml[135,6698+4]..[135,6698+21])
                    Ppat_var "__ocaml_lex_state" (test/dynamic/semantics/calc/table/lexer.ml[135,6698+4]..[135,6698+21])
                  expression (test/dynamic/semantics/calc/table/lexer.ml[135,6698+25]..[136,6757+51])
                    Pexp_sequence
                    expression (test/dynamic/semantics/calc/table/lexer.ml[135,6698+25]..[135,6698+57])
                      Pexp_apply
                      expression (test/dynamic/semantics/calc/table/lexer.ml[135,6698+25]..[135,6698+50])
                        Pexp_field
                        expression (test/dynamic/semantics/calc/table/lexer.ml[135,6698+25]..[135,6698+31])
                          Pexp_ident "lexbuf" (test/dynamic/semantics/calc/table/lexer.ml[135,6698+25]..[135,6698+31])
                        "Lexing.refill_buff" (test/dynamic/semantics/calc/table/lexer.ml[135,6698+32]..[135,6698+50])
                      [
                        <arg>
                        Nolabel
                          expression (test/dynamic/semantics/calc/table/lexer.ml[135,6698+51]..[135,6698+57])
                            Pexp_ident "lexbuf" (test/dynamic/semantics/calc/table/lexer.ml[135,6698+51]..[135,6698+57])
                      ]
                    expression (test/dynamic/semantics/calc/table/lexer.ml[136,6757+6]..[136,6757+51])
                      Pexp_apply
                      expression (test/dynamic/semantics/calc/table/lexer.ml[136,6757+6]..[136,6757+26])
                        Pexp_ident "__ocaml_lex_line_rec" (test/dynamic/semantics/calc/table/lexer.ml[136,6757+6]..[136,6757+26])
                      [
                        <arg>
                        Nolabel
                          expression (test/dynamic/semantics/calc/table/lexer.ml[136,6757+27]..[136,6757+33])
                            Pexp_ident "lexbuf" (test/dynamic/semantics/calc/table/lexer.ml[136,6757+27]..[136,6757+33])
                        <arg>
                        Nolabel
                          expression (test/dynamic/semantics/calc/table/lexer.ml[136,6757+34]..[136,6757+51])
                            Pexp_ident "__ocaml_lex_state" (test/dynamic/semantics/calc/table/lexer.ml[136,6757+34]..[136,6757+51])
                      ]
              ]
      <def>
        pattern (test/dynamic/semantics/calc/table/lexer.ml[138,6810+4]..[138,6810+9])
          Ppat_var "token" (test/dynamic/semantics/calc/table/lexer.ml[138,6810+4]..[138,6810+9])
        expression (test/dynamic/semantics/calc/table/lexer.ml[138,6810+10]..[139,6829+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (test/dynamic/semantics/calc/table/lexer.ml[138,6810+10]..[138,6810+16])
            Ppat_var "lexbuf" (test/dynamic/semantics/calc/table/lexer.ml[138,6810+10]..[138,6810+16])
          expression (test/dynamic/semantics/calc/table/lexer.ml[139,6829+3]..[139,6829+33])
            Pexp_apply
            expression (test/dynamic/semantics/calc/table/lexer.ml[139,6829+3]..[139,6829+24])
              Pexp_ident "__ocaml_lex_token_rec" (test/dynamic/semantics/calc/table/lexer.ml[139,6829+3]..[139,6829+24])
            [
              <arg>
              Nolabel
                expression (test/dynamic/semantics/calc/table/lexer.ml[139,6829+25]..[139,6829+31])
                  Pexp_ident "lexbuf" (test/dynamic/semantics/calc/table/lexer.ml[139,6829+25]..[139,6829+31])
              <arg>
              Nolabel
                expression (test/dynamic/semantics/calc/table/lexer.ml[139,6829+32]..[139,6829+33])
                  Pexp_constant PConst_int (5,None)
            ]
      <def>
        pattern (test/dynamic/semantics/calc/table/lexer.ml[140,6863+4]..[140,6863+25])
          Ppat_var "__ocaml_lex_token_rec" (test/dynamic/semantics/calc/table/lexer.ml[140,6863+4]..[140,6863+25])
        expression (test/dynamic/semantics/calc/table/lexer.ml[140,6863+26]..[203,8758+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (test/dynamic/semantics/calc/table/lexer.ml[140,6863+26]..[140,6863+32])
            Ppat_var "lexbuf" (test/dynamic/semantics/calc/table/lexer.ml[140,6863+26]..[140,6863+32])
          expression (test/dynamic/semantics/calc/table/lexer.ml[140,6863+33]..[203,8758+52]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (test/dynamic/semantics/calc/table/lexer.ml[140,6863+33]..[140,6863+50])
              Ppat_var "__ocaml_lex_state" (test/dynamic/semantics/calc/table/lexer.ml[140,6863+33]..[140,6863+50])
            expression (test/dynamic/semantics/calc/table/lexer.ml[141,6916+2]..[203,8758+52])
              Pexp_match
              expression (test/dynamic/semantics/calc/table/lexer.ml[141,6916+8]..[141,6916+65])
                Pexp_apply
                expression (test/dynamic/semantics/calc/table/lexer.ml[141,6916+8]..[141,6916+21])
                  Pexp_ident "Lexing.engine" (test/dynamic/semantics/calc/table/lexer.ml[141,6916+8]..[141,6916+21])
                [
                  <arg>
                  Nolabel
                    expression (test/dynamic/semantics/calc/table/lexer.ml[141,6916+22]..[141,6916+40])
                      Pexp_ident "__ocaml_lex_tables" (test/dynamic/semantics/calc/table/lexer.ml[141,6916+22]..[141,6916+40])
                  <arg>
                  Nolabel
                    expression (test/dynamic/semantics/calc/table/lexer.ml[141,6916+41]..[141,6916+58])
                      Pexp_ident "__ocaml_lex_state" (test/dynamic/semantics/calc/table/lexer.ml[141,6916+41]..[141,6916+58])
                  <arg>
                  Nolabel
                    expression (test/dynamic/semantics/calc/table/lexer.ml[141,6916+59]..[141,6916+65])
                      Pexp_ident "lexbuf" (test/dynamic/semantics/calc/table/lexer.ml[141,6916+59]..[141,6916+65])
                ]
              [
                <case>
                  pattern (test/dynamic/semantics/calc/table/lexer.ml[142,6987+8]..[142,6987+9])
                    Ppat_constant PConst_int (0,None)
                  expression (test/dynamic/semantics/calc/table/lexer.mll[29,7051+4]..[29,7051+20])
                    Pexp_apply
                    expression (test/dynamic/semantics/calc/table/lexer.mll[29,7051+6]..[29,7051+11])
                      Pexp_ident "token" (test/dynamic/semantics/calc/table/lexer.mll[29,7051+6]..[29,7051+11])
                    [
                      <arg>
                      Nolabel
                        expression (test/dynamic/semantics/calc/table/lexer.mll[29,7051+12]..[29,7051+18])
                          Pexp_ident "lexbuf" (test/dynamic/semantics/calc/table/lexer.mll[29,7051+12]..[29,7051+18])
                    ]
                <case>
                  pattern (test/dynamic/semantics/calc/table/lexer.ml[147,7124+4]..[147,7124+5])
                    Ppat_constant PConst_int (1,None)
                  expression (test/dynamic/semantics/calc/table/lexer.mll[31,7184+4]..[31,7184+11])
                    Pexp_construct "EOL" (test/dynamic/semantics/calc/table/lexer.mll[31,7184+6]..[31,7184+9])
                    None
                <case>
                  pattern (test/dynamic/semantics/calc/table/lexer.ml[152,7248+4]..[152,7248+5])
                    Ppat_constant PConst_int (2,None)
                  expression (test/dynamic/semantics/calc/table/lexer.ml[153,7257+0]..test/dynamic/semantics/calc/table/lexer.mll[33,7517+29])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (test/dynamic/semantics/calc/table/lexer.mll[32,7312+16]..[32,7312+17])
                          Ppat_var "i" (test/dynamic/semantics/calc/table/lexer.mll[32,7312+16]..[32,7312+17])
                        expression (test/dynamic/semantics/calc/table/lexer.ml[157,7381+2]..[157,7381+81])
                          Pexp_apply
                          expression (test/dynamic/semantics/calc/table/lexer.ml[157,7381+2]..[157,7381+19])
                            Pexp_ident "Lexing.sub_lexeme" (test/dynamic/semantics/calc/table/lexer.ml[157,7381+2]..[157,7381+19])
                          [
                            <arg>
                            Nolabel
                              expression (test/dynamic/semantics/calc/table/lexer.ml[157,7381+20]..[157,7381+26])
                                Pexp_ident "lexbuf" (test/dynamic/semantics/calc/table/lexer.ml[157,7381+20]..[157,7381+26])
                            <arg>
                            Nolabel
                              expression (test/dynamic/semantics/calc/table/lexer.ml[157,7381+27]..[157,7381+54])
                                Pexp_field
                                expression (test/dynamic/semantics/calc/table/lexer.ml[157,7381+27]..[157,7381+33])
                                  Pexp_ident "lexbuf" (test/dynamic/semantics/calc/table/lexer.ml[157,7381+27]..[157,7381+33])
                                "Lexing.lex_start_pos" (test/dynamic/semantics/calc/table/lexer.ml[157,7381+34]..[157,7381+54])
                            <arg>
                            Nolabel
                              expression (test/dynamic/semantics/calc/table/lexer.ml[157,7381+55]..[157,7381+81])
                                Pexp_field
                                expression (test/dynamic/semantics/calc/table/lexer.ml[157,7381+55]..[157,7381+61])
                                  Pexp_ident "lexbuf" (test/dynamic/semantics/calc/table/lexer.ml[157,7381+55]..[157,7381+61])
                                "Lexing.lex_curr_pos" (test/dynamic/semantics/calc/table/lexer.ml[157,7381+62]..[157,7381+81])
                          ]
                    ]
                    expression (test/dynamic/semantics/calc/table/lexer.mll[33,7517+4]..[33,7517+29])
                      Pexp_construct "INT" (test/dynamic/semantics/calc/table/lexer.mll[33,7517+6]..[33,7517+9])
                      Some
                        expression (test/dynamic/semantics/calc/table/lexer.mll[33,7517+10]..[33,7517+27])
                          Pexp_apply
                          expression (test/dynamic/semantics/calc/table/lexer.mll[33,7517+11]..[33,7517+24])
                            Pexp_ident "int_of_string" (test/dynamic/semantics/calc/table/lexer.mll[33,7517+11]..[33,7517+24])
                          [
                            <arg>
                            Nolabel
                              expression (test/dynamic/semantics/calc/table/lexer.mll[33,7517+25]..[33,7517+26])
                                Pexp_ident "i" (test/dynamic/semantics/calc/table/lexer.mll[33,7517+25]..[33,7517+26])
                          ]
                <case>
                  pattern (test/dynamic/semantics/calc/table/lexer.ml[162,7599+4]..[162,7599+5])
                    Ppat_constant PConst_int (3,None)
                  expression (test/dynamic/semantics/calc/table/lexer.mll[35,7659+4]..[35,7659+12])
                    Pexp_construct "PLUS" (test/dynamic/semantics/calc/table/lexer.mll[35,7659+6]..[35,7659+10])
                    None
                <case>
                  pattern (test/dynamic/semantics/calc/table/lexer.ml[167,7724+4]..[167,7724+5])
                    Ppat_constant PConst_int (4,None)
                  expression (test/dynamic/semantics/calc/table/lexer.mll[37,7784+4]..[37,7784+13])
                    Pexp_construct "MINUS" (test/dynamic/semantics/calc/table/lexer.mll[37,7784+6]..[37,7784+11])
                    None
                <case>
                  pattern (test/dynamic/semantics/calc/table/lexer.ml[172,7850+4]..[172,7850+5])
                    Ppat_constant PConst_int (5,None)
                  expression (test/dynamic/semantics/calc/table/lexer.mll[39,7910+4]..[39,7910+13])
                    Pexp_construct "TIMES" (test/dynamic/semantics/calc/table/lexer.mll[39,7910+6]..[39,7910+11])
                    None
                <case>
                  pattern (test/dynamic/semantics/calc/table/lexer.ml[177,7976+4]..[177,7976+5])
                    Ppat_constant PConst_int (6,None)
                  expression (test/dynamic/semantics/calc/table/lexer.mll[41,8036+4]..[41,8036+11])
                    Pexp_construct "DIV" (test/dynamic/semantics/calc/table/lexer.mll[41,8036+6]..[41,8036+9])
                    None
                <case>
                  pattern (test/dynamic/semantics/calc/table/lexer.ml[182,8100+4]..[182,8100+5])
                    Ppat_constant PConst_int (7,None)
                  expression (test/dynamic/semantics/calc/table/lexer.mll[43,8160+4]..[43,8160+14])
                    Pexp_construct "LPAREN" (test/dynamic/semantics/calc/table/lexer.mll[43,8160+6]..[43,8160+12])
                    None
                <case>
                  pattern (test/dynamic/semantics/calc/table/lexer.ml[187,8227+4]..[187,8227+5])
                    Ppat_constant PConst_int (8,None)
                  expression (test/dynamic/semantics/calc/table/lexer.mll[45,8287+4]..[45,8287+14])
                    Pexp_construct "RPAREN" (test/dynamic/semantics/calc/table/lexer.mll[45,8287+6]..[45,8287+12])
                    None
                <case>
                  pattern (test/dynamic/semantics/calc/table/lexer.ml[192,8354+4]..[192,8354+5])
                    Ppat_constant PConst_int (9,None)
                  expression (test/dynamic/semantics/calc/table/lexer.mll[47,8414+4]..[47,8414+11])
                    Pexp_construct "DOT" (test/dynamic/semantics/calc/table/lexer.mll[47,8414+6]..[47,8414+9])
                    None
                <case>
                  pattern (test/dynamic/semantics/calc/table/lexer.ml[197,8478+4]..[197,8478+6])
                    Ppat_constant PConst_int (10,None)
                  expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+4]..[49,8539+107])
                    Pexp_apply
                    expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+6]..[49,8539+11])
                      Pexp_ident "raise" (test/dynamic/semantics/calc/table/lexer.mll[49,8539+6]..[49,8539+11])
                    [
                      <arg>
                      Nolabel
                        expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+12]..[49,8539+105])
                          Pexp_construct "Error" (test/dynamic/semantics/calc/table/lexer.mll[49,8539+13]..[49,8539+18])
                          Some
                            expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+19]..[49,8539+104])
                              Pexp_apply
                              expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+20]..[49,8539+34])
                                Pexp_ident "Printf.sprintf" (test/dynamic/semantics/calc/table/lexer.mll[49,8539+20]..[49,8539+34])
                              [
                                <arg>
                                Nolabel
                                  expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+35]..[49,8539+74])
                                    Pexp_constant PConst_string("At offset %d: unexpected character.\n",(test/dynamic/semantics/calc/table/lexer.mll[49,8539+36]..[49,8539+73]),None)
                                <arg>
                                Nolabel
                                  expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+75]..[49,8539+103])
                                    Pexp_apply
                                    expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+76]..[49,8539+95])
                                      Pexp_ident "Lexing.lexeme_start" (test/dynamic/semantics/calc/table/lexer.mll[49,8539+76]..[49,8539+95])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+96]..[49,8539+102])
                                          Pexp_ident "lexbuf" (test/dynamic/semantics/calc/table/lexer.mll[49,8539+96]..[49,8539+102])
                                    ]
                              ]
                    ]
                <case>
                  pattern (test/dynamic/semantics/calc/table/lexer.ml[202,8699+4]..[202,8699+21])
                    Ppat_var "__ocaml_lex_state" (test/dynamic/semantics/calc/table/lexer.ml[202,8699+4]..[202,8699+21])
                  expression (test/dynamic/semantics/calc/table/lexer.ml[202,8699+25]..[203,8758+52])
                    Pexp_sequence
                    expression (test/dynamic/semantics/calc/table/lexer.ml[202,8699+25]..[202,8699+57])
                      Pexp_apply
                      expression (test/dynamic/semantics/calc/table/lexer.ml[202,8699+25]..[202,8699+50])
                        Pexp_field
                        expression (test/dynamic/semantics/calc/table/lexer.ml[202,8699+25]..[202,8699+31])
                          Pexp_ident "lexbuf" (test/dynamic/semantics/calc/table/lexer.ml[202,8699+25]..[202,8699+31])
                        "Lexing.refill_buff" (test/dynamic/semantics/calc/table/lexer.ml[202,8699+32]..[202,8699+50])
                      [
                        <arg>
                        Nolabel
                          expression (test/dynamic/semantics/calc/table/lexer.ml[202,8699+51]..[202,8699+57])
                            Pexp_ident "lexbuf" (test/dynamic/semantics/calc/table/lexer.ml[202,8699+51]..[202,8699+57])
                      ]
                    expression (test/dynamic/semantics/calc/table/lexer.ml[203,8758+6]..[203,8758+52])
                      Pexp_apply
                      expression (test/dynamic/semantics/calc/table/lexer.ml[203,8758+6]..[203,8758+27])
                        Pexp_ident "__ocaml_lex_token_rec" (test/dynamic/semantics/calc/table/lexer.ml[203,8758+6]..[203,8758+27])
                      [
                        <arg>
                        Nolabel
                          expression (test/dynamic/semantics/calc/table/lexer.ml[203,8758+28]..[203,8758+34])
                            Pexp_ident "lexbuf" (test/dynamic/semantics/calc/table/lexer.ml[203,8758+28]..[203,8758+34])
                        <arg>
                        Nolabel
                          expression (test/dynamic/semantics/calc/table/lexer.ml[203,8758+35]..[203,8758+52])
                            Pexp_ident "__ocaml_lex_state" (test/dynamic/semantics/calc/table/lexer.ml[203,8758+35]..[203,8758+52])
                      ]
              ]
    ]
]

open Parser
exception Error of string 
let __ocaml_lex_tables =
  {
    Lexing.lex_base =
      "\000\000\254\255\255\255\001\000\253\255\003\000\245\255\246\255\247\255\248\255\249\255\250\255\251\255\252\255\r\000\254\255\255\255";
    Lexing.lex_backtrk =
      "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\002\000\255\255\255\255";
    Lexing.lex_default =
      "\003\000\000\000\000\000\003\000\000\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000";
    Lexing.lex_trans =
      "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\002\000\016\000\015\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\b\000\011\000\r\000\000\000\012\000\007\000\n
    Lexing.lex_check =

    Lexing.lex_base_code = "";
    Lexing.lex_backtrk_code = "";
    Lexing.lex_default_code = "";
    Lexing.lex_trans_code = "";
    Lexing.lex_check_code = "";
    Lexing.lex_code = ""
  }
let rec line lexbuf = __ocaml_lex_line_rec lexbuf 0
and __ocaml_lex_line_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
  | 0 ->
      let line =
        Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos
          lexbuf.Lexing.lex_curr_pos in
      ((Some line), true)
  | 1 -> (None, false)
  | 2 ->
      let line =
        Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos
          lexbuf.Lexing.lex_curr_pos in
      ((Some (line ^ "\n")), false)
  | __ocaml_lex_state ->
      (lexbuf.Lexing.refill_buff lexbuf;
       __ocaml_lex_line_rec lexbuf __ocaml_lex_state)
and token lexbuf = __ocaml_lex_token_rec lexbuf 5
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
  | 0 -> token lexbuf
  | 1 -> EOL
  | 2 ->
      let i =
        Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos
          lexbuf.Lexing.lex_curr_pos in
      INT (int_of_string i)
  | 3 -> PLUS
  | 4 -> MINUS
  | 5 -> TIMES
  | 6 -> DIV
  | 7 -> LPAREN
  | 8 -> RPAREN
  | 9 -> DOT
  | 10 ->
      raise
        (Error
           (Printf.sprintf "At offset %d: unexpected character.\n"
              (Lexing.lexeme_start lexbuf)))
  | __ocaml_lex_state ->
      (lexbuf.Lexing.refill_buff lexbuf;
       __ocaml_lex_token_rec lexbuf __ocaml_lex_state)
[
  structure_item (test/dynamic/semantics/calc/table/lexer.mll[2,52+2]..test/dynamic/semantics/calc/table/lexer.mll[2,52+13])
    Tstr_open Fresh
    module_expr (test/dynamic/semantics/calc/table/lexer.mll[2,52+7]..test/dynamic/semantics/calc/table/lexer.mll[2,52+13])
      Tmod_ident "Dune__exe!.Parser"
  structure_item (test/dynamic/semantics/calc/table/lexer.mll[4,67+2]..test/dynamic/semantics/calc/table/lexer.mll[4,67+27])
    Tstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (test/dynamic/semantics/calc/table/lexer.mll[4,67+2]..test/dynamic/semantics/calc/table/lexer.mll[4,67+27])
          pext_name = "Error/277"
          pext_kind =
            Text_decl
              [
                core_type (test/dynamic/semantics/calc/table/lexer.mll[4,67+21]..test/dynamic/semantics/calc/table/lexer.mll[4,67+27])
                  Ttyp_constr "string/15!"
                  []
              ]
              None
  structure_item (test/dynamic/semantics/calc/table/lexer.ml[9,146+0]..test/dynamic/semantics/calc/table/lexer.ml[104,5671+1])
    Tstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/semantics/calc/table/lexer.ml[9,146+4]..test/dynamic/semantics/calc/table/lexer.ml[9,146+22])
          Tpat_var "__ocaml_lex_tables/278"
        expression (test/dynamic/semantics/calc/table/lexer.ml[9,146+25]..test/dynamic/semantics/calc/table/lexer.ml[104,5671+1])
          Texp_record
            fields =
              [
                "Lexing.lex_base"
                  expression (test/dynamic/semantics/calc/table/lexer.ml[11,193+3]..test/dynamic/semantics/calc/table/lexer.ml[13,333+13])
                    Texp_constant Const_string("\000\000\254\255\255\255\001\000\253\255\003\000\245\255\246\255\247\255\248\255\249\255\250\255\251\255\252\255\r\000\254\255\255\255",(test/dynamic/semantics/calc/table/lexer.ml[11,193+4]..test/dynamic/semantics/calc/table/lexer.ml[13,333+12]),None)
                "Lexing.lex_backtrk"
                  expression (test/dynamic/semantics/calc/table/lexer.ml[15,371+3]..test/dynamic/semantics/calc/table/lexer.ml[17,511+13])
                    Texp_constant Const_string("\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\002\000\255\255\255\255",(test/dynamic/semantics/calc/table/lexer.ml[15,371+4]..test/dynamic/semantics/calc/table/lexer.ml[17,511+12]),None)
                "Lexing.lex_default"
                  expression (test/dynamic/semantics/calc/table/lexer.ml[19,549+3]..test/dynamic/semantics/calc/table/lexer.ml[21,689+13])
                    Texp_constant Const_string("\003\000\000\000\000\000\003\000\000\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000",(test/dynamic/semantics/calc/table/lexer.ml[19,549+4]..test/dynamic/semantics/calc/table/lexer.ml[21,689+12]),None)
                "Lexing.lex_trans"
                  expression (test/dynamic/semantics/calc/table/lexer.ml[23,725+3]..test/dynamic/semantics/calc/table/lexer.ml[56,3035+53])
                    Texp_constant Const_string("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\002\000\016\000\015\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\b\000\011\000\r\000\000\000\012\000\007\000\ntest/dynamic/semantics/calc/table/lexer.ml[23,725+4]..test/dynamic/semantics/calc/table/lexer.ml[56,3035+52]),None)
                "Lexing.lex_check"
                  expression (test/dynamic/semantics/calc/table/lexer.ml[58,3111+3]..test/dynamic/semantics/calc/table/lexer.ml[91,5421+53])
                    Texp_constant Const_stringtest/dynamic/semantics/calc/table/lexer.ml[58,3111+4]..test/dynamic/semantics/calc/table/lexer.ml[91,5421+52]),None)
                "Lexing.lex_base_code"
                  expression (test/dynamic/semantics/calc/table/lexer.ml[93,5501+3]..test/dynamic/semantics/calc/table/lexer.ml[93,5501+5])
                    Texp_constant Const_string("",(test/dynamic/semantics/calc/table/lexer.ml[93,5501+4]..test/dynamic/semantics/calc/table/lexer.ml[93,5501+4]),None)
                "Lexing.lex_backtrk_code"
                  expression (test/dynamic/semantics/calc/table/lexer.ml[95,5536+3]..test/dynamic/semantics/calc/table/lexer.ml[95,5536+5])
                    Texp_constant Const_string("",(test/dynamic/semantics/calc/table/lexer.ml[95,5536+4]..test/dynamic/semantics/calc/table/lexer.ml[95,5536+4]),None)
                "Lexing.lex_default_code"
                  expression (test/dynamic/semantics/calc/table/lexer.ml[97,5571+3]..test/dynamic/semantics/calc/table/lexer.ml[97,5571+5])
                    Texp_constant Const_string("",(test/dynamic/semantics/calc/table/lexer.ml[97,5571+4]..test/dynamic/semantics/calc/table/lexer.ml[97,5571+4]),None)
                "Lexing.lex_trans_code"
                  expression (test/dynamic/semantics/calc/table/lexer.ml[99,5604+3]..test/dynamic/semantics/calc/table/lexer.ml[99,5604+5])
                    Texp_constant Const_string("",(test/dynamic/semantics/calc/table/lexer.ml[99,5604+4]..test/dynamic/semantics/calc/table/lexer.ml[99,5604+4]),None)
                "Lexing.lex_check_code"
                  expression (test/dynamic/semantics/calc/table/lexer.ml[101,5637+3]..test/dynamic/semantics/calc/table/lexer.ml[101,5637+5])
                    Texp_constant Const_string("",(test/dynamic/semantics/calc/table/lexer.ml[101,5637+4]..test/dynamic/semantics/calc/table/lexer.ml[101,5637+4]),None)
                "Lexing.lex_code"
                  expression (test/dynamic/semantics/calc/table/lexer.ml[103,5664+3]..test/dynamic/semantics/calc/table/lexer.ml[103,5664+5])
                    Texp_constant Const_string("",(test/dynamic/semantics/calc/table/lexer.ml[103,5664+4]..test/dynamic/semantics/calc/table/lexer.ml[103,5664+4]),None)
              ]
            representation =
              Record_regular
            extended_expression =
              None
    ]
  structure_item (test/dynamic/semantics/calc/table/lexer.ml[106,5674+0]..test/dynamic/semantics/calc/table/lexer.ml[203,8758+52])
    Tstr_value Rec
    [
      <def>
        pattern (test/dynamic/semantics/calc/table/lexer.ml[106,5674+8]..test/dynamic/semantics/calc/table/lexer.ml[106,5674+12])
          Tpat_var "line/303"
        expression (test/dynamic/semantics/calc/table/lexer.ml[106,5674+13]..test/dynamic/semantics/calc/table/lexer.ml[107,5696+32]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (test/dynamic/semantics/calc/table/lexer.ml[106,5674+13]..test/dynamic/semantics/calc/table/lexer.ml[106,5674+19])
                Tpat_var "lexbuf/307"
              expression (test/dynamic/semantics/calc/table/lexer.ml[107,5696+3]..test/dynamic/semantics/calc/table/lexer.ml[107,5696+32])
                Texp_apply
                expression (test/dynamic/semantics/calc/table/lexer.ml[107,5696+3]..test/dynamic/semantics/calc/table/lexer.ml[107,5696+23])
                  Texp_ident "__ocaml_lex_line_rec/304"
                [
                  <arg>
                    Nolabel
                    expression (test/dynamic/semantics/calc/table/lexer.ml[107,5696+24]..test/dynamic/semantics/calc/table/lexer.ml[107,5696+30])
                      Texp_ident "lexbuf/307"
                  <arg>
                    Nolabel
                    expression (test/dynamic/semantics/calc/table/lexer.ml[107,5696+31]..test/dynamic/semantics/calc/table/lexer.ml[107,5696+32])
                      Texp_constant Const_int 0
                ]
          ]
      <def>
        pattern (test/dynamic/semantics/calc/table/lexer.ml[108,5729+4]..test/dynamic/semantics/calc/table/lexer.ml[108,5729+24])
          Tpat_var "__ocaml_lex_line_rec/304"
        expression (test/dynamic/semantics/calc/table/lexer.ml[108,5729+25]..test/dynamic/semantics/calc/table/lexer.ml[136,6757+51]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (test/dynamic/semantics/calc/table/lexer.ml[108,5729+25]..test/dynamic/semantics/calc/table/lexer.ml[108,5729+31])
                Tpat_var "lexbuf/308"
              expression (test/dynamic/semantics/calc/table/lexer.ml[108,5729+32]..test/dynamic/semantics/calc/table/lexer.ml[136,6757+51]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (test/dynamic/semantics/calc/table/lexer.ml[108,5729+32]..test/dynamic/semantics/calc/table/lexer.ml[108,5729+49])
                      Tpat_var "__ocaml_lex_state/309"
                    expression (test/dynamic/semantics/calc/table/lexer.ml[109,5781+2]..test/dynamic/semantics/calc/table/lexer.ml[136,6757+51])
                      Texp_match
                      expression (test/dynamic/semantics/calc/table/lexer.ml[109,5781+8]..test/dynamic/semantics/calc/table/lexer.ml[109,5781+65])
                        Texp_apply
                        expression (test/dynamic/semantics/calc/table/lexer.ml[109,5781+8]..test/dynamic/semantics/calc/table/lexer.ml[109,5781+21])
                          Texp_ident "Stdlib!.Lexing.engine"
                        [
                          <arg>
                            Nolabel
                            expression (test/dynamic/semantics/calc/table/lexer.ml[109,5781+22]..test/dynamic/semantics/calc/table/lexer.ml[109,5781+40])
                              Texp_ident "__ocaml_lex_tables/278"
                          <arg>
                            Nolabel
                            expression (test/dynamic/semantics/calc/table/lexer.ml[109,5781+41]..test/dynamic/semantics/calc/table/lexer.ml[109,5781+58])
                              Texp_ident "__ocaml_lex_state/309"
                          <arg>
                            Nolabel
                            expression (test/dynamic/semantics/calc/table/lexer.ml[109,5781+59]..test/dynamic/semantics/calc/table/lexer.ml[109,5781+65])
                              Texp_ident "lexbuf/308"
                        ]
                      [
                        <case>
                          pattern (test/dynamic/semantics/calc/table/lexer.ml[110,5852+8]..test/dynamic/semantics/calc/table/lexer.ml[110,5852+9])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/table/lexer.ml[110,5852+8]..test/dynamic/semantics/calc/table/lexer.ml[110,5852+9])
                              Tpat_constant Const_int 0
                          expression (test/dynamic/semantics/calc/table/lexer.ml[111,5865+0]..test/dynamic/semantics/calc/table/lexer.mll[15,6133+23])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (test/dynamic/semantics/calc/table/lexer.mll[13,5920+21]..test/dynamic/semantics/calc/table/lexer.mll[13,5920+25])
                                  Tpat_var "line/335"
                                expression (test/dynamic/semantics/calc/table/lexer.ml[115,5997+2]..test/dynamic/semantics/calc/table/lexer.ml[115,5997+81])
                                  Texp_apply
                                  expression (test/dynamic/semantics/calc/table/lexer.ml[115,5997+2]..test/dynamic/semantics/calc/table/lexer.ml[115,5997+19])
                                    Texp_ident "Stdlib!.Lexing.sub_lexeme"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/semantics/calc/table/lexer.ml[115,5997+20]..test/dynamic/semantics/calc/table/lexer.ml[115,5997+26])
                                        Texp_ident "lexbuf/308"
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/semantics/calc/table/lexer.ml[115,5997+27]..test/dynamic/semantics/calc/table/lexer.ml[115,5997+54])
                                        Texp_field
                                        expression (test/dynamic/semantics/calc/table/lexer.ml[115,5997+27]..test/dynamic/semantics/calc/table/lexer.ml[115,5997+33])
                                          Texp_ident "lexbuf/308"
                                        "Lexing.lex_start_pos"
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/semantics/calc/table/lexer.ml[115,5997+55]..test/dynamic/semantics/calc/table/lexer.ml[115,5997+81])
                                        Texp_field
                                        expression (test/dynamic/semantics/calc/table/lexer.ml[115,5997+55]..test/dynamic/semantics/calc/table/lexer.ml[115,5997+61])
                                          Texp_ident "lexbuf/308"
                                        "Lexing.lex_curr_pos"
                                  ]
                            ]
                            expression (test/dynamic/semantics/calc/table/lexer.mll[15,6133+4]..test/dynamic/semantics/calc/table/lexer.mll[15,6133+23])
                              Texp_tuple
                              [
                                expression (test/dynamic/semantics/calc/table/lexer.mll[15,6133+6]..test/dynamic/semantics/calc/table/lexer.mll[15,6133+15])
                                  Texp_construct "Some"
                                  [
                                    expression (test/dynamic/semantics/calc/table/lexer.mll[15,6133+11]..test/dynamic/semantics/calc/table/lexer.mll[15,6133+15])
                                      Texp_ident "line/335"
                                  ]
                                expression (test/dynamic/semantics/calc/table/lexer.mll[15,6133+17]..test/dynamic/semantics/calc/table/lexer.mll[15,6133+21])
                                  Texp_construct "true"
                                  []
                              ]
                        <case>
                          pattern (test/dynamic/semantics/calc/table/lexer.ml[120,6209+4]..test/dynamic/semantics/calc/table/lexer.ml[120,6209+5])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/table/lexer.ml[120,6209+4]..test/dynamic/semantics/calc/table/lexer.ml[120,6209+5])
                              Tpat_constant Const_int 1
                          expression (test/dynamic/semantics/calc/table/lexer.mll[18,6269+4]..test/dynamic/semantics/calc/table/lexer.mll[18,6269+19])
                            Texp_tuple
                            [
                              expression (test/dynamic/semantics/calc/table/lexer.mll[18,6269+6]..test/dynamic/semantics/calc/table/lexer.mll[18,6269+10])
                                Texp_construct "None"
                                []
                              expression (test/dynamic/semantics/calc/table/lexer.mll[18,6269+12]..test/dynamic/semantics/calc/table/lexer.mll[18,6269+17])
                                Texp_construct "false"
                                []
                            ]
                        <case>
                          pattern (test/dynamic/semantics/calc/table/lexer.ml[125,6341+4]..test/dynamic/semantics/calc/table/lexer.ml[125,6341+5])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/table/lexer.ml[125,6341+4]..test/dynamic/semantics/calc/table/lexer.ml[125,6341+5])
                              Tpat_constant Const_int 2
                          expression (test/dynamic/semantics/calc/table/lexer.ml[126,6350+0]..test/dynamic/semantics/calc/table/lexer.mll[22,6612+33])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (test/dynamic/semantics/calc/table/lexer.mll[19,6405+15]..test/dynamic/semantics/calc/table/lexer.mll[19,6405+19])
                                  Tpat_var "line/336"
                                expression (test/dynamic/semantics/calc/table/lexer.ml[130,6476+2]..test/dynamic/semantics/calc/table/lexer.ml[130,6476+81])
                                  Texp_apply
                                  expression (test/dynamic/semantics/calc/table/lexer.ml[130,6476+2]..test/dynamic/semantics/calc/table/lexer.ml[130,6476+19])
                                    Texp_ident "Stdlib!.Lexing.sub_lexeme"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/semantics/calc/table/lexer.ml[130,6476+20]..test/dynamic/semantics/calc/table/lexer.ml[130,6476+26])
                                        Texp_ident "lexbuf/308"
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/semantics/calc/table/lexer.ml[130,6476+27]..test/dynamic/semantics/calc/table/lexer.ml[130,6476+54])
                                        Texp_field
                                        expression (test/dynamic/semantics/calc/table/lexer.ml[130,6476+27]..test/dynamic/semantics/calc/table/lexer.ml[130,6476+33])
                                          Texp_ident "lexbuf/308"
                                        "Lexing.lex_start_pos"
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/semantics/calc/table/lexer.ml[130,6476+55]..test/dynamic/semantics/calc/table/lexer.ml[130,6476+81])
                                        Texp_field
                                        expression (test/dynamic/semantics/calc/table/lexer.ml[130,6476+55]..test/dynamic/semantics/calc/table/lexer.ml[130,6476+61])
                                          Texp_ident "lexbuf/308"
                                        "Lexing.lex_curr_pos"
                                  ]
                            ]
                            expression (test/dynamic/semantics/calc/table/lexer.mll[22,6612+4]..test/dynamic/semantics/calc/table/lexer.mll[22,6612+33])
                              Texp_tuple
                              [
                                expression (test/dynamic/semantics/calc/table/lexer.mll[22,6612+6]..test/dynamic/semantics/calc/table/lexer.mll[22,6612+24])
                                  Texp_construct "Some"
                                  [
                                    expression (test/dynamic/semantics/calc/table/lexer.mll[22,6612+11]..test/dynamic/semantics/calc/table/lexer.mll[22,6612+24])
                                      Texp_apply
                                      expression (test/dynamic/semantics/calc/table/lexer.mll[22,6612+17]..test/dynamic/semantics/calc/table/lexer.mll[22,6612+18])
                                        Texp_ident "Stdlib!.^"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (test/dynamic/semantics/calc/table/lexer.mll[22,6612+12]..test/dynamic/semantics/calc/table/lexer.mll[22,6612+16])
                                            Texp_ident "line/336"
                                        <arg>
                                          Nolabel
                                          expression (test/dynamic/semantics/calc/table/lexer.mll[22,6612+19]..test/dynamic/semantics/calc/table/lexer.mll[22,6612+23])
                                            Texp_constant Const_string("\n",(test/dynamic/semantics/calc/table/lexer.mll[22,6612+20]..test/dynamic/semantics/calc/table/lexer.mll[22,6612+22]),None)
                                      ]
                                  ]
                                expression (test/dynamic/semantics/calc/table/lexer.mll[22,6612+26]..test/dynamic/semantics/calc/table/lexer.mll[22,6612+31])
                                  Texp_construct "false"
                                  []
                              ]
                        <case>
                          pattern (test/dynamic/semantics/calc/table/lexer.ml[135,6698+4]..test/dynamic/semantics/calc/table/lexer.ml[135,6698+21])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/table/lexer.ml[135,6698+4]..test/dynamic/semantics/calc/table/lexer.ml[135,6698+21])
                              Tpat_var "__ocaml_lex_state/334"
                          expression (test/dynamic/semantics/calc/table/lexer.ml[135,6698+25]..test/dynamic/semantics/calc/table/lexer.ml[136,6757+51])
                            Texp_sequence
                            expression (test/dynamic/semantics/calc/table/lexer.ml[135,6698+25]..test/dynamic/semantics/calc/table/lexer.ml[135,6698+57])
                              Texp_apply
                              expression (test/dynamic/semantics/calc/table/lexer.ml[135,6698+25]..test/dynamic/semantics/calc/table/lexer.ml[135,6698+50])
                                Texp_field
                                expression (test/dynamic/semantics/calc/table/lexer.ml[135,6698+25]..test/dynamic/semantics/calc/table/lexer.ml[135,6698+31])
                                  Texp_ident "lexbuf/308"
                                "Lexing.refill_buff"
                              [
                                <arg>
                                  Nolabel
                                  expression (test/dynamic/semantics/calc/table/lexer.ml[135,6698+51]..test/dynamic/semantics/calc/table/lexer.ml[135,6698+57])
                                    Texp_ident "lexbuf/308"
                              ]
                            expression (test/dynamic/semantics/calc/table/lexer.ml[136,6757+6]..test/dynamic/semantics/calc/table/lexer.ml[136,6757+51])
                              Texp_apply
                              expression (test/dynamic/semantics/calc/table/lexer.ml[136,6757+6]..test/dynamic/semantics/calc/table/lexer.ml[136,6757+26])
                                Texp_ident "__ocaml_lex_line_rec/304"
                              [
                                <arg>
                                  Nolabel
                                  expression (test/dynamic/semantics/calc/table/lexer.ml[136,6757+27]..test/dynamic/semantics/calc/table/lexer.ml[136,6757+33])
                                    Texp_ident "lexbuf/308"
                                <arg>
                                  Nolabel
                                  expression (test/dynamic/semantics/calc/table/lexer.ml[136,6757+34]..test/dynamic/semantics/calc/table/lexer.ml[136,6757+51])
                                    Texp_ident "__ocaml_lex_state/334"
                              ]
                      ]
                ]
          ]
      <def>
        pattern (test/dynamic/semantics/calc/table/lexer.ml[138,6810+4]..test/dynamic/semantics/calc/table/lexer.ml[138,6810+9])
          Tpat_var "token/305"
        expression (test/dynamic/semantics/calc/table/lexer.ml[138,6810+10]..test/dynamic/semantics/calc/table/lexer.ml[139,6829+33]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (test/dynamic/semantics/calc/table/lexer.ml[138,6810+10]..test/dynamic/semantics/calc/table/lexer.ml[138,6810+16])
                Tpat_var "lexbuf/337"
              expression (test/dynamic/semantics/calc/table/lexer.ml[139,6829+3]..test/dynamic/semantics/calc/table/lexer.ml[139,6829+33])
                Texp_apply
                expression (test/dynamic/semantics/calc/table/lexer.ml[139,6829+3]..test/dynamic/semantics/calc/table/lexer.ml[139,6829+24])
                  Texp_ident "__ocaml_lex_token_rec/306"
                [
                  <arg>
                    Nolabel
                    expression (test/dynamic/semantics/calc/table/lexer.ml[139,6829+25]..test/dynamic/semantics/calc/table/lexer.ml[139,6829+31])
                      Texp_ident "lexbuf/337"
                  <arg>
                    Nolabel
                    expression (test/dynamic/semantics/calc/table/lexer.ml[139,6829+32]..test/dynamic/semantics/calc/table/lexer.ml[139,6829+33])
                      Texp_constant Const_int 5
                ]
          ]
      <def>
        pattern (test/dynamic/semantics/calc/table/lexer.ml[140,6863+4]..test/dynamic/semantics/calc/table/lexer.ml[140,6863+25])
          Tpat_var "__ocaml_lex_token_rec/306"
        expression (test/dynamic/semantics/calc/table/lexer.ml[140,6863+26]..test/dynamic/semantics/calc/table/lexer.ml[203,8758+52]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (test/dynamic/semantics/calc/table/lexer.ml[140,6863+26]..test/dynamic/semantics/calc/table/lexer.ml[140,6863+32])
                Tpat_var "lexbuf/338"
              expression (test/dynamic/semantics/calc/table/lexer.ml[140,6863+33]..test/dynamic/semantics/calc/table/lexer.ml[203,8758+52]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (test/dynamic/semantics/calc/table/lexer.ml[140,6863+33]..test/dynamic/semantics/calc/table/lexer.ml[140,6863+50])
                      Tpat_var "__ocaml_lex_state/339"
                    expression (test/dynamic/semantics/calc/table/lexer.ml[141,6916+2]..test/dynamic/semantics/calc/table/lexer.ml[203,8758+52])
                      Texp_match
                      expression (test/dynamic/semantics/calc/table/lexer.ml[141,6916+8]..test/dynamic/semantics/calc/table/lexer.ml[141,6916+65])
                        Texp_apply
                        expression (test/dynamic/semantics/calc/table/lexer.ml[141,6916+8]..test/dynamic/semantics/calc/table/lexer.ml[141,6916+21])
                          Texp_ident "Stdlib!.Lexing.engine"
                        [
                          <arg>
                            Nolabel
                            expression (test/dynamic/semantics/calc/table/lexer.ml[141,6916+22]..test/dynamic/semantics/calc/table/lexer.ml[141,6916+40])
                              Texp_ident "__ocaml_lex_tables/278"
                          <arg>
                            Nolabel
                            expression (test/dynamic/semantics/calc/table/lexer.ml[141,6916+41]..test/dynamic/semantics/calc/table/lexer.ml[141,6916+58])
                              Texp_ident "__ocaml_lex_state/339"
                          <arg>
                            Nolabel
                            expression (test/dynamic/semantics/calc/table/lexer.ml[141,6916+59]..test/dynamic/semantics/calc/table/lexer.ml[141,6916+65])
                              Texp_ident "lexbuf/338"
                        ]
                      [
                        <case>
                          pattern (test/dynamic/semantics/calc/table/lexer.ml[142,6987+8]..test/dynamic/semantics/calc/table/lexer.ml[142,6987+9])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/table/lexer.ml[142,6987+8]..test/dynamic/semantics/calc/table/lexer.ml[142,6987+9])
                              Tpat_constant Const_int 0
                          expression (test/dynamic/semantics/calc/table/lexer.mll[29,7051+4]..test/dynamic/semantics/calc/table/lexer.mll[29,7051+20])
                            Texp_apply
                            expression (test/dynamic/semantics/calc/table/lexer.mll[29,7051+6]..test/dynamic/semantics/calc/table/lexer.mll[29,7051+11])
                              Texp_ident "token/305"
                            [
                              <arg>
                                Nolabel
                                expression (test/dynamic/semantics/calc/table/lexer.mll[29,7051+12]..test/dynamic/semantics/calc/table/lexer.mll[29,7051+18])
                                  Texp_ident "lexbuf/338"
                            ]
                        <case>
                          pattern (test/dynamic/semantics/calc/table/lexer.ml[147,7124+4]..test/dynamic/semantics/calc/table/lexer.ml[147,7124+5])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/table/lexer.ml[147,7124+4]..test/dynamic/semantics/calc/table/lexer.ml[147,7124+5])
                              Tpat_constant Const_int 1
                          expression (test/dynamic/semantics/calc/table/lexer.mll[31,7184+4]..test/dynamic/semantics/calc/table/lexer.mll[31,7184+11])
                            Texp_construct "EOL"
                            []
                        <case>
                          pattern (test/dynamic/semantics/calc/table/lexer.ml[152,7248+4]..test/dynamic/semantics/calc/table/lexer.ml[152,7248+5])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/table/lexer.ml[152,7248+4]..test/dynamic/semantics/calc/table/lexer.ml[152,7248+5])
                              Tpat_constant Const_int 2
                          expression (test/dynamic/semantics/calc/table/lexer.ml[153,7257+0]..test/dynamic/semantics/calc/table/lexer.mll[33,7517+29])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (test/dynamic/semantics/calc/table/lexer.mll[32,7312+16]..test/dynamic/semantics/calc/table/lexer.mll[32,7312+17])
                                  Tpat_var "i/341"
                                expression (test/dynamic/semantics/calc/table/lexer.ml[157,7381+2]..test/dynamic/semantics/calc/table/lexer.ml[157,7381+81])
                                  Texp_apply
                                  expression (test/dynamic/semantics/calc/table/lexer.ml[157,7381+2]..test/dynamic/semantics/calc/table/lexer.ml[157,7381+19])
                                    Texp_ident "Stdlib!.Lexing.sub_lexeme"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/semantics/calc/table/lexer.ml[157,7381+20]..test/dynamic/semantics/calc/table/lexer.ml[157,7381+26])
                                        Texp_ident "lexbuf/338"
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/semantics/calc/table/lexer.ml[157,7381+27]..test/dynamic/semantics/calc/table/lexer.ml[157,7381+54])
                                        Texp_field
                                        expression (test/dynamic/semantics/calc/table/lexer.ml[157,7381+27]..test/dynamic/semantics/calc/table/lexer.ml[157,7381+33])
                                          Texp_ident "lexbuf/338"
                                        "Lexing.lex_start_pos"
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/semantics/calc/table/lexer.ml[157,7381+55]..test/dynamic/semantics/calc/table/lexer.ml[157,7381+81])
                                        Texp_field
                                        expression (test/dynamic/semantics/calc/table/lexer.ml[157,7381+55]..test/dynamic/semantics/calc/table/lexer.ml[157,7381+61])
                                          Texp_ident "lexbuf/338"
                                        "Lexing.lex_curr_pos"
                                  ]
                            ]
                            expression (test/dynamic/semantics/calc/table/lexer.mll[33,7517+4]..test/dynamic/semantics/calc/table/lexer.mll[33,7517+29])
                              Texp_construct "INT"
                              [
                                expression (test/dynamic/semantics/calc/table/lexer.mll[33,7517+10]..test/dynamic/semantics/calc/table/lexer.mll[33,7517+27])
                                  Texp_apply
                                  expression (test/dynamic/semantics/calc/table/lexer.mll[33,7517+11]..test/dynamic/semantics/calc/table/lexer.mll[33,7517+24])
                                    Texp_ident "Stdlib!.int_of_string"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/semantics/calc/table/lexer.mll[33,7517+25]..test/dynamic/semantics/calc/table/lexer.mll[33,7517+26])
                                        Texp_ident "i/341"
                                  ]
                              ]
                        <case>
                          pattern (test/dynamic/semantics/calc/table/lexer.ml[162,7599+4]..test/dynamic/semantics/calc/table/lexer.ml[162,7599+5])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/table/lexer.ml[162,7599+4]..test/dynamic/semantics/calc/table/lexer.ml[162,7599+5])
                              Tpat_constant Const_int 3
                          expression (test/dynamic/semantics/calc/table/lexer.mll[35,7659+4]..test/dynamic/semantics/calc/table/lexer.mll[35,7659+12])
                            Texp_construct "PLUS"
                            []
                        <case>
                          pattern (test/dynamic/semantics/calc/table/lexer.ml[167,7724+4]..test/dynamic/semantics/calc/table/lexer.ml[167,7724+5])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/table/lexer.ml[167,7724+4]..test/dynamic/semantics/calc/table/lexer.ml[167,7724+5])
                              Tpat_constant Const_int 4
                          expression (test/dynamic/semantics/calc/table/lexer.mll[37,7784+4]..test/dynamic/semantics/calc/table/lexer.mll[37,7784+13])
                            Texp_construct "MINUS"
                            []
                        <case>
                          pattern (test/dynamic/semantics/calc/table/lexer.ml[172,7850+4]..test/dynamic/semantics/calc/table/lexer.ml[172,7850+5])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/table/lexer.ml[172,7850+4]..test/dynamic/semantics/calc/table/lexer.ml[172,7850+5])
                              Tpat_constant Const_int 5
                          expression (test/dynamic/semantics/calc/table/lexer.mll[39,7910+4]..test/dynamic/semantics/calc/table/lexer.mll[39,7910+13])
                            Texp_construct "TIMES"
                            []
                        <case>
                          pattern (test/dynamic/semantics/calc/table/lexer.ml[177,7976+4]..test/dynamic/semantics/calc/table/lexer.ml[177,7976+5])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/table/lexer.ml[177,7976+4]..test/dynamic/semantics/calc/table/lexer.ml[177,7976+5])
                              Tpat_constant Const_int 6
                          expression (test/dynamic/semantics/calc/table/lexer.mll[41,8036+4]..test/dynamic/semantics/calc/table/lexer.mll[41,8036+11])
                            Texp_construct "DIV"
                            []
                        <case>
                          pattern (test/dynamic/semantics/calc/table/lexer.ml[182,8100+4]..test/dynamic/semantics/calc/table/lexer.ml[182,8100+5])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/table/lexer.ml[182,8100+4]..test/dynamic/semantics/calc/table/lexer.ml[182,8100+5])
                              Tpat_constant Const_int 7
                          expression (test/dynamic/semantics/calc/table/lexer.mll[43,8160+4]..test/dynamic/semantics/calc/table/lexer.mll[43,8160+14])
                            Texp_construct "LPAREN"
                            []
                        <case>
                          pattern (test/dynamic/semantics/calc/table/lexer.ml[187,8227+4]..test/dynamic/semantics/calc/table/lexer.ml[187,8227+5])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/table/lexer.ml[187,8227+4]..test/dynamic/semantics/calc/table/lexer.ml[187,8227+5])
                              Tpat_constant Const_int 8
                          expression (test/dynamic/semantics/calc/table/lexer.mll[45,8287+4]..test/dynamic/semantics/calc/table/lexer.mll[45,8287+14])
                            Texp_construct "RPAREN"
                            []
                        <case>
                          pattern (test/dynamic/semantics/calc/table/lexer.ml[192,8354+4]..test/dynamic/semantics/calc/table/lexer.ml[192,8354+5])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/table/lexer.ml[192,8354+4]..test/dynamic/semantics/calc/table/lexer.ml[192,8354+5])
                              Tpat_constant Const_int 9
                          expression (test/dynamic/semantics/calc/table/lexer.mll[47,8414+4]..test/dynamic/semantics/calc/table/lexer.mll[47,8414+11])
                            Texp_construct "DOT"
                            []
                        <case>
                          pattern (test/dynamic/semantics/calc/table/lexer.ml[197,8478+4]..test/dynamic/semantics/calc/table/lexer.ml[197,8478+6])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/table/lexer.ml[197,8478+4]..test/dynamic/semantics/calc/table/lexer.ml[197,8478+6])
                              Tpat_constant Const_int 10
                          expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+4]..test/dynamic/semantics/calc/table/lexer.mll[49,8539+107])
                            Texp_apply
                            expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+6]..test/dynamic/semantics/calc/table/lexer.mll[49,8539+11])
                              Texp_ident "Stdlib!.raise"
                            [
                              <arg>
                                Nolabel
                                expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+12]..test/dynamic/semantics/calc/table/lexer.mll[49,8539+105])
                                  Texp_construct "Error"
                                  [
                                    expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+19]..test/dynamic/semantics/calc/table/lexer.mll[49,8539+104])
                                      Texp_apply
                                      expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+20]..test/dynamic/semantics/calc/table/lexer.mll[49,8539+34])
                                        Texp_ident "Stdlib!.Printf.sprintf"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+35]..test/dynamic/semantics/calc/table/lexer.mll[49,8539+74])
                                            Texp_construct "CamlinternalFormatBasics.Format"
                                            [
                                              expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+35]..test/dynamic/semantics/calc/table/lexer.mll[49,8539+74]) ghost
                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                [
                                                  expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+35]..test/dynamic/semantics/calc/table/lexer.mll[49,8539+74]) ghost
                                                    Texp_constant Const_string("At offset ",(test/dynamic/semantics/calc/table/lexer.mll[49,8539+35]..test/dynamic/semantics/calc/table/lexer.mll[49,8539+74]) ghost,None)
                                                  expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+35]..test/dynamic/semantics/calc/table/lexer.mll[49,8539+74]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.Int"
                                                    [
                                                      expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+35]..test/dynamic/semantics/calc/table/lexer.mll[49,8539+74]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.Int_d"
                                                        []
                                                      expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+35]..test/dynamic/semantics/calc/table/lexer.mll[49,8539+74]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                        []
                                                      expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+35]..test/dynamic/semantics/calc/table/lexer.mll[49,8539+74]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.No_precision"
                                                        []
                                                      expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+35]..test/dynamic/semantics/calc/table/lexer.mll[49,8539+74]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                        [
                                                          expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+35]..test/dynamic/semantics/calc/table/lexer.mll[49,8539+74]) ghost
                                                            Texp_constant Const_string(": unexpected character.\n",(test/dynamic/semantics/calc/table/lexer.mll[49,8539+35]..test/dynamic/semantics/calc/table/lexer.mll[49,8539+74]) ghost,None)
                                                          expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+35]..test/dynamic/semantics/calc/table/lexer.mll[49,8539+74]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                            []
                                                        ]
                                                    ]
                                                ]
                                              expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+35]..test/dynamic/semantics/calc/table/lexer.mll[49,8539+74]) ghost
                                                Texp_constant Const_string("At offset %d: unexpected character.\n",(test/dynamic/semantics/calc/table/lexer.mll[49,8539+35]..test/dynamic/semantics/calc/table/lexer.mll[49,8539+74]) ghost,None)
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+75]..test/dynamic/semantics/calc/table/lexer.mll[49,8539+103])
                                            Texp_apply
                                            expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+76]..test/dynamic/semantics/calc/table/lexer.mll[49,8539+95])
                                              Texp_ident "Stdlib!.Lexing.lexeme_start"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (test/dynamic/semantics/calc/table/lexer.mll[49,8539+96]..test/dynamic/semantics/calc/table/lexer.mll[49,8539+102])
                                                  Texp_ident "lexbuf/338"
                                            ]
                                      ]
                                  ]
                            ]
                        <case>
                          pattern (test/dynamic/semantics/calc/table/lexer.ml[202,8699+4]..test/dynamic/semantics/calc/table/lexer.ml[202,8699+21])
                            Tpat_value
                            pattern (test/dynamic/semantics/calc/table/lexer.ml[202,8699+4]..test/dynamic/semantics/calc/table/lexer.ml[202,8699+21])
                              Tpat_var "__ocaml_lex_state/340"
                          expression (test/dynamic/semantics/calc/table/lexer.ml[202,8699+25]..test/dynamic/semantics/calc/table/lexer.ml[203,8758+52])
                            Texp_sequence
                            expression (test/dynamic/semantics/calc/table/lexer.ml[202,8699+25]..test/dynamic/semantics/calc/table/lexer.ml[202,8699+57])
                              Texp_apply
                              expression (test/dynamic/semantics/calc/table/lexer.ml[202,8699+25]..test/dynamic/semantics/calc/table/lexer.ml[202,8699+50])
                                Texp_field
                                expression (test/dynamic/semantics/calc/table/lexer.ml[202,8699+25]..test/dynamic/semantics/calc/table/lexer.ml[202,8699+31])
                                  Texp_ident "lexbuf/338"
                                "Lexing.refill_buff"
                              [
                                <arg>
                                  Nolabel
                                  expression (test/dynamic/semantics/calc/table/lexer.ml[202,8699+51]..test/dynamic/semantics/calc/table/lexer.ml[202,8699+57])
                                    Texp_ident "lexbuf/338"
                              ]
                            expression (test/dynamic/semantics/calc/table/lexer.ml[203,8758+6]..test/dynamic/semantics/calc/table/lexer.ml[203,8758+52])
                              Texp_apply
                              expression (test/dynamic/semantics/calc/table/lexer.ml[203,8758+6]..test/dynamic/semantics/calc/table/lexer.ml[203,8758+27])
                                Texp_ident "__ocaml_lex_token_rec/306"
                              [
                                <arg>
                                  Nolabel
                                  expression (test/dynamic/semantics/calc/table/lexer.ml[203,8758+28]..test/dynamic/semantics/calc/table/lexer.ml[203,8758+34])
                                    Texp_ident "lexbuf/338"
                                <arg>
                                  Nolabel
                                  expression (test/dynamic/semantics/calc/table/lexer.ml[203,8758+35]..test/dynamic/semantics/calc/table/lexer.ml[203,8758+52])
                                    Texp_ident "__ocaml_lex_state/340"
                              ]
                      ]
                ]
          ]
    ]
]

{<Dune__exe__Lexer>
 "Error"[extension constructor] -> <Dune__exe__Lexer.0>;
 "__ocaml_lex_line_rec"[value] -> <Dune__exe__Lexer.3>;
 "__ocaml_lex_tables"[value] -> <Dune__exe__Lexer.1>;
 "__ocaml_lex_token_rec"[value] -> <Dune__exe__Lexer.5>;
 "line"[value] -> <Dune__exe__Lexer.2>;
 "token"[value] -> <Dune__exe__Lexer.4>;
 }

(seq
  (let
    (Error/277 =
       (makeblock 248 "Dune__exe__Lexer.Error" (caml_fresh_oo_id 0)))
    (setfield_ptr(root-init) 0 (global Dune__exe__Lexer!) Error/277))
  (let
    (__ocaml_lex_tables/278 =
       [0:
        "\000\000\254\255\255\255\001\000\253\255\003\000\245\255\246\255\247\255\248\255\249\255\250\255\251\255\252\255\r\000\254\255\255\255"
        "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\002\000\255\255\255\255"
        "\003\000\000\000\000\000\003\000\000\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000"
        "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\002\000\016\000\015\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\b\000\011\000\r\000\000\000\012\000\007\000\n

        "" "" "" "" "" ""])
    (setfield_ptr(root-init) 1 (global Dune__exe__Lexer!)
      __ocaml_lex_tables/278))
  (letrec
    (line/303
       (function lexbuf/307 (apply __ocaml_lex_line_rec/304 lexbuf/307 0))
      __ocaml_lex_line_rec/304
        (function lexbuf/308 __ocaml_lex_state/309[int]
          (let
            (__ocaml_lex_state/334 =
               (apply (field_imm 19 (global Stdlib__Lexing!))
                 (field_imm 1 (global Dune__exe__Lexer!))
                 __ocaml_lex_state/309 lexbuf/308))
            (catch
              (if (isout 2 __ocaml_lex_state/334) (exit 1)
                (switch* __ocaml_lex_state/334
                 case int 0:
                  (let
                    (line/335 =
                       (apply (field_imm 15 (global Stdlib__Lexing!))
                         lexbuf/308 (field_int 4 lexbuf/308)
                         (field_int 5 lexbuf/308)))
                    (makeblock 0 (*,int) (makeblock 0 line/335) 1))
                 case int 1: [0: 0 0]
                 case int 2:
                  (let
                    (line/336 =
                       (apply (field_imm 15 (global Stdlib__Lexing!))
                         lexbuf/308 (field_int 4 lexbuf/308)
                         (field_int 5 lexbuf/308)))
                    (makeblock 0 (*,int)
                      (makeblock 0
                        (apply (field_imm 27 (global Stdlib!)) line/336 "\n"))
                      0))))
             with (1)
              (seq (apply (field_imm 0 lexbuf/308) lexbuf/308)
                (apply __ocaml_lex_line_rec/304 lexbuf/308
                  __ocaml_lex_state/334)))))
      token/305
        (function lexbuf/337 (apply __ocaml_lex_token_rec/306 lexbuf/337 5))
      __ocaml_lex_token_rec/306
        (function lexbuf/338 __ocaml_lex_state/339[int]
          (let
            (__ocaml_lex_state/340 =
               (apply (field_imm 19 (global Stdlib__Lexing!))
                 (field_imm 1 (global Dune__exe__Lexer!))
                 __ocaml_lex_state/339 lexbuf/338))
            (catch
              (if (isout 10 __ocaml_lex_state/340) (exit 2)
                (switch* __ocaml_lex_state/340
                 case int 0: (apply token/305 lexbuf/338)
                 case int 1: 5
                 case int 2:
                  (let
                    (i/341 =
                       (apply (field_imm 15 (global Stdlib__Lexing!))
                         lexbuf/338 (field_int 4 lexbuf/338)
                         (field_int 5 lexbuf/338)))
                    (makeblock 0 (int) (caml_int_of_string i/341)))
                 case int 3: 2
                 case int 4: 3
                 case int 5: 0
                 case int 6: 7
                 case int 7: 4
                 case int 8: 1
                 case int 9: 6
                 case int 10:
                  (raise
                    (makeblock 0 (field_imm 0 (global Dune__exe__Lexer!))
                      (apply (field_imm 3 (global Stdlib__Printf!))
                        [0:
                         [11:
                          "At offset "
                          [4: 0 0 0 [11: ": unexpected character.\n" 0]]]
                         "At offset %d: unexpected character.\n"]
                        (apply (field_imm 9 (global Stdlib__Lexing!))
                          lexbuf/338))))))
             with (2)
              (seq (apply (field_imm 0 lexbuf/338) lexbuf/338)
                (apply __ocaml_lex_token_rec/306 lexbuf/338
                  __ocaml_lex_state/340))))))
    (seq (setfield_ptr(root-init) 2 (global Dune__exe__Lexer!) line/303)
      (setfield_ptr(root-init) 3 (global Dune__exe__Lexer!)
        __ocaml_lex_line_rec/304)
      (setfield_ptr(root-init) 4 (global Dune__exe__Lexer!) token/305)
      (setfield_ptr(root-init) 5 (global Dune__exe__Lexer!)
        __ocaml_lex_token_rec/306)))
  0)
(seq
  (let
    (Error/277 =
       (makeblock 248 "Dune__exe__Lexer.Error" (caml_fresh_oo_id 0)))
    (setfield_ptr(root-init) 0 (global Dune__exe__Lexer!) Error/277))
  (let
    (__ocaml_lex_tables/278 =
       [0:
        "\000\000\254\255\255\255\001\000\253\255\003\000\245\255\246\255\247\255\248\255\249\255\250\255\251\255\252\255\r\000\254\255\255\255"
        "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\002\000\255\255\255\255"
        "\003\000\000\000\000\000\003\000\000\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000"
        "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\002\000\016\000\015\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\b\000\011\000\r\000\000\000\012\000\007\000\n

        "" "" "" "" "" ""])
    (setfield_ptr(root-init) 1 (global Dune__exe__Lexer!)
      __ocaml_lex_tables/278))
  (letrec
    (line/303
       (function lexbuf/307 (apply __ocaml_lex_line_rec/304 lexbuf/307 0))
      __ocaml_lex_line_rec/304
        (function lexbuf/308 __ocaml_lex_state/309[int]
          (let
            (__ocaml_lex_state/334 =
               (apply (field_imm 19 (global Stdlib__Lexing!))
                 (field_imm 1 (global Dune__exe__Lexer!))
                 __ocaml_lex_state/309 lexbuf/308))
            (if (isout 2 __ocaml_lex_state/334)
              (seq (apply (field_imm 0 lexbuf/308) lexbuf/308)
                (apply __ocaml_lex_line_rec/304 lexbuf/308
                  __ocaml_lex_state/334))
              (switch* __ocaml_lex_state/334
               case int 0:
                (let
                  (line/335 =
                     (apply (field_imm 15 (global Stdlib__Lexing!))
                       lexbuf/308 (field_int 4 lexbuf/308)
                       (field_int 5 lexbuf/308)))
                  (makeblock 0 (*,int) (makeblock 0 line/335) 1))
               case int 1: [0: 0 0]
               case int 2:
                (let
                  (line/336 =
                     (apply (field_imm 15 (global Stdlib__Lexing!))
                       lexbuf/308 (field_int 4 lexbuf/308)
                       (field_int 5 lexbuf/308)))
                  (makeblock 0 (*,int)
                    (makeblock 0
                      (apply (field_imm 27 (global Stdlib!)) line/336 "\n"))
                    0))))))
      token/305
        (function lexbuf/337 (apply __ocaml_lex_token_rec/306 lexbuf/337 5))
      __ocaml_lex_token_rec/306
        (function lexbuf/338 __ocaml_lex_state/339[int]
          (let
            (__ocaml_lex_state/340 =
               (apply (field_imm 19 (global Stdlib__Lexing!))
                 (field_imm 1 (global Dune__exe__Lexer!))
                 __ocaml_lex_state/339 lexbuf/338))
            (if (isout 10 __ocaml_lex_state/340)
              (seq (apply (field_imm 0 lexbuf/338) lexbuf/338)
                (apply __ocaml_lex_token_rec/306 lexbuf/338
                  __ocaml_lex_state/340))
              (switch* __ocaml_lex_state/340
               case int 0: (apply token/305 lexbuf/338)
               case int 1: 5
               case int 2:
                (let
                  (i/341 =
                     (apply (field_imm 15 (global Stdlib__Lexing!))
                       lexbuf/338 (field_int 4 lexbuf/338)
                       (field_int 5 lexbuf/338)))
                  (makeblock 0 (int) (caml_int_of_string i/341)))
               case int 3: 2
               case int 4: 3
               case int 5: 0
               case int 6: 7
               case int 7: 4
               case int 8: 1
               case int 9: 6
               case int 10:
                (raise
                  (makeblock 0 (field_imm 0 (global Dune__exe__Lexer!))
                    (apply (field_imm 3 (global Stdlib__Printf!))
                      [0:
                       [11:
                        "At offset "
                        [4: 0 0 0 [11: ": unexpected character.\n" 0]]]
                       "At offset %d: unexpected character.\n"]
                      (apply (field_imm 9 (global Stdlib__Lexing!))
                        lexbuf/338)))))))))
    (seq (setfield_ptr(root-init) 2 (global Dune__exe__Lexer!) line/303)
      (setfield_ptr(root-init) 3 (global Dune__exe__Lexer!)
        __ocaml_lex_line_rec/304)
      (setfield_ptr(root-init) 4 (global Dune__exe__Lexer!) token/305)
      (setfield_ptr(root-init) 5 (global Dune__exe__Lexer!)
        __ocaml_lex_token_rec/306)))
  0)
