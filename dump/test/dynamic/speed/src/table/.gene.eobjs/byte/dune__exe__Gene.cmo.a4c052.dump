[
  structure_item (test/dynamic/speed/src/gene.ml[1,37+0]..[1,37+11])
    Pstr_open Fresh
    module_expr (test/dynamic/speed/src/gene.ml[1,37+5]..[1,37+11])
      Pmod_ident "Printf" (test/dynamic/speed/src/gene.ml[1,37+5]..[1,37+11])
  structure_item (test/dynamic/speed/src/gene.ml[2,49+0]..[2,49+11])
    Pstr_open Fresh
    module_expr (test/dynamic/speed/src/gene.ml[2,49+5]..[2,49+11])
      Pmod_ident "Parser" (test/dynamic/speed/src/gene.ml[2,49+5]..[2,49+11])
  structure_item (test/dynamic/speed/src/gene.ml[3,61+0]..[3,61+14])
    Pstr_open Fresh
    module_expr (test/dynamic/speed/src/gene.ml[3,61+5]..[3,61+14])
      Pmod_ident "Generator" (test/dynamic/speed/src/gene.ml[3,61+5]..[3,61+14])
  structure_item (test/dynamic/speed/src/gene.ml[9,200+0]..[25,458+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[9,200+4]..[9,200+15])
          Ppat_var "print_token" (test/dynamic/speed/src/gene.ml[9,200+4]..[9,200+15])
        expression (test/dynamic/speed/src/gene.ml[9,200+18]..[25,458+17])
          Pexp_function
          [
            <case>
              pattern (test/dynamic/speed/src/gene.ml[10,227+4]..[10,227+9])
                Ppat_construct "INT" (test/dynamic/speed/src/gene.ml[10,227+4]..[10,227+7])
                Some
                  []
                  pattern (test/dynamic/speed/src/gene.ml[10,227+8]..[10,227+9])
                    Ppat_var "i" (test/dynamic/speed/src/gene.ml[10,227+8]..[10,227+9])
              expression (test/dynamic/speed/src/gene.ml[11,240+6]..[11,240+19])
                Pexp_apply
                expression (test/dynamic/speed/src/gene.ml[11,240+6]..[11,240+12])
                  Pexp_ident "printf" (test/dynamic/speed/src/gene.ml[11,240+6]..[11,240+12])
                [
                  <arg>
                  Nolabel
                    expression (test/dynamic/speed/src/gene.ml[11,240+13]..[11,240+17])
                      Pexp_constant PConst_string("%d",(test/dynamic/speed/src/gene.ml[11,240+14]..[11,240+16]),None)
                  <arg>
                  Nolabel
                    expression (test/dynamic/speed/src/gene.ml[11,240+18]..[11,240+19])
                      Pexp_ident "i" (test/dynamic/speed/src/gene.ml[11,240+18]..[11,240+19])
                ]
            <case>
              pattern (test/dynamic/speed/src/gene.ml[12,260+4]..[12,260+8])
                Ppat_construct "PLUS" (test/dynamic/speed/src/gene.ml[12,260+4]..[12,260+8])
                None
              expression (test/dynamic/speed/src/gene.ml[13,272+6]..[13,272+18])
                Pexp_apply
                expression (test/dynamic/speed/src/gene.ml[13,272+6]..[13,272+12])
                  Pexp_ident "printf" (test/dynamic/speed/src/gene.ml[13,272+6]..[13,272+12])
                [
                  <arg>
                  Nolabel
                    expression (test/dynamic/speed/src/gene.ml[13,272+13]..[13,272+18])
                      Pexp_constant PConst_string(" + ",(test/dynamic/speed/src/gene.ml[13,272+14]..[13,272+17]),None)
                ]
            <case>
              pattern (test/dynamic/speed/src/gene.ml[14,291+4]..[14,291+9])
                Ppat_construct "MINUS" (test/dynamic/speed/src/gene.ml[14,291+4]..[14,291+9])
                None
              expression (test/dynamic/speed/src/gene.ml[15,304+6]..[15,304+18])
                Pexp_apply
                expression (test/dynamic/speed/src/gene.ml[15,304+6]..[15,304+12])
                  Pexp_ident "printf" (test/dynamic/speed/src/gene.ml[15,304+6]..[15,304+12])
                [
                  <arg>
                  Nolabel
                    expression (test/dynamic/speed/src/gene.ml[15,304+13]..[15,304+18])
                      Pexp_constant PConst_string(" - ",(test/dynamic/speed/src/gene.ml[15,304+14]..[15,304+17]),None)
                ]
            <case>
              pattern (test/dynamic/speed/src/gene.ml[16,323+4]..[16,323+9])
                Ppat_construct "TIMES" (test/dynamic/speed/src/gene.ml[16,323+4]..[16,323+9])
                None
              expression (test/dynamic/speed/src/gene.ml[17,336+6]..[17,336+18])
                Pexp_apply
                expression (test/dynamic/speed/src/gene.ml[17,336+6]..[17,336+12])
                  Pexp_ident "printf" (test/dynamic/speed/src/gene.ml[17,336+6]..[17,336+12])
                [
                  <arg>
                  Nolabel
                    expression (test/dynamic/speed/src/gene.ml[17,336+13]..[17,336+18])
                      Pexp_constant PConst_string(" * ",(test/dynamic/speed/src/gene.ml[17,336+14]..[17,336+17]),None)
                ]
            <case>
              pattern (test/dynamic/speed/src/gene.ml[18,355+4]..[18,355+7])
                Ppat_construct "DIV" (test/dynamic/speed/src/gene.ml[18,355+4]..[18,355+7])
                None
              expression (test/dynamic/speed/src/gene.ml[19,366+6]..[19,366+18])
                Pexp_apply
                expression (test/dynamic/speed/src/gene.ml[19,366+6]..[19,366+12])
                  Pexp_ident "printf" (test/dynamic/speed/src/gene.ml[19,366+6]..[19,366+12])
                [
                  <arg>
                  Nolabel
                    expression (test/dynamic/speed/src/gene.ml[19,366+13]..[19,366+18])
                      Pexp_constant PConst_string(" / ",(test/dynamic/speed/src/gene.ml[19,366+14]..[19,366+17]),None)
                ]
            <case>
              pattern (test/dynamic/speed/src/gene.ml[20,385+4]..[20,385+10])
                Ppat_construct "LPAREN" (test/dynamic/speed/src/gene.ml[20,385+4]..[20,385+10])
                None
              expression (test/dynamic/speed/src/gene.ml[21,399+6]..[21,399+16])
                Pexp_apply
                expression (test/dynamic/speed/src/gene.ml[21,399+6]..[21,399+12])
                  Pexp_ident "printf" (test/dynamic/speed/src/gene.ml[21,399+6]..[21,399+12])
                [
                  <arg>
                  Nolabel
                    expression (test/dynamic/speed/src/gene.ml[21,399+13]..[21,399+16])
                      Pexp_constant PConst_string("(",(test/dynamic/speed/src/gene.ml[21,399+14]..[21,399+15]),None)
                ]
            <case>
              pattern (test/dynamic/speed/src/gene.ml[22,416+4]..[22,416+10])
                Ppat_construct "RPAREN" (test/dynamic/speed/src/gene.ml[22,416+4]..[22,416+10])
                None
              expression (test/dynamic/speed/src/gene.ml[23,430+6]..[23,430+16])
                Pexp_apply
                expression (test/dynamic/speed/src/gene.ml[23,430+6]..[23,430+12])
                  Pexp_ident "printf" (test/dynamic/speed/src/gene.ml[23,430+6]..[23,430+12])
                [
                  <arg>
                  Nolabel
                    expression (test/dynamic/speed/src/gene.ml[23,430+13]..[23,430+16])
                      Pexp_constant PConst_string(")",(test/dynamic/speed/src/gene.ml[23,430+14]..[23,430+15]),None)
                ]
            <case>
              pattern (test/dynamic/speed/src/gene.ml[24,447+4]..[24,447+7])
                Ppat_construct "EOL" (test/dynamic/speed/src/gene.ml[24,447+4]..[24,447+7])
                None
              expression (test/dynamic/speed/src/gene.ml[25,458+6]..[25,458+17])
                Pexp_apply
                expression (test/dynamic/speed/src/gene.ml[25,458+6]..[25,458+12])
                  Pexp_ident "printf" (test/dynamic/speed/src/gene.ml[25,458+6]..[25,458+12])
                [
                  <arg>
                  Nolabel
                    expression (test/dynamic/speed/src/gene.ml[25,458+13]..[25,458+17])
                      Pexp_constant PConst_string("\n",(test/dynamic/speed/src/gene.ml[25,458+14]..[25,458+16]),None)
                ]
          ]
    ]
  structure_item (test/dynamic/speed/src/gene.ml[34,704+0]..[35,718+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[34,704+4]..[34,704+11])
          Ppat_var "dry_run" (test/dynamic/speed/src/gene.ml[34,704+4]..[34,704+11])
        expression (test/dynamic/speed/src/gene.ml[35,718+2]..[35,718+11])
          Pexp_apply
          expression (test/dynamic/speed/src/gene.ml[35,718+2]..[35,718+5])
            Pexp_ident "ref" (test/dynamic/speed/src/gene.ml[35,718+2]..[35,718+5])
          [
            <arg>
            Nolabel
              expression (test/dynamic/speed/src/gene.ml[35,718+6]..[35,718+11])
                Pexp_construct "false" (test/dynamic/speed/src/gene.ml[35,718+6]..[35,718+11])
                None
          ]
    ]
  structure_item (test/dynamic/speed/src/gene.ml[39,802+0]..[40,813+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[39,802+4]..[39,802+8])
          Ppat_var "seed" (test/dynamic/speed/src/gene.ml[39,802+4]..[39,802+8])
        expression (test/dynamic/speed/src/gene.ml[40,813+2]..[40,813+14])
          Pexp_apply
          expression (test/dynamic/speed/src/gene.ml[40,813+2]..[40,813+5])
            Pexp_ident "ref" (test/dynamic/speed/src/gene.ml[40,813+2]..[40,813+5])
          [
            <arg>
            Nolabel
              expression (test/dynamic/speed/src/gene.ml[40,813+6]..[40,813+14])
                Pexp_constant PConst_int (61112962,None)
          ]
    ]
  structure_item (test/dynamic/speed/src/gene.ml[44,911+0]..[45,922+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[44,911+4]..[44,911+8])
          Ppat_var "runs" (test/dynamic/speed/src/gene.ml[44,911+4]..[44,911+8])
        expression (test/dynamic/speed/src/gene.ml[45,922+2]..[45,922+8])
          Pexp_apply
          expression (test/dynamic/speed/src/gene.ml[45,922+2]..[45,922+5])
            Pexp_ident "ref" (test/dynamic/speed/src/gene.ml[45,922+2]..[45,922+5])
          [
            <arg>
            Nolabel
              expression (test/dynamic/speed/src/gene.ml[45,922+6]..[45,922+8])
                Pexp_constant PConst_int (10,None)
          ]
    ]
  structure_item (test/dynamic/speed/src/gene.ml[50,1036+0]..[51,1047+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[50,1036+4]..[50,1036+8])
          Ppat_var "size" (test/dynamic/speed/src/gene.ml[50,1036+4]..[50,1036+8])
        expression (test/dynamic/speed/src/gene.ml[51,1047+2]..[51,1047+14])
          Pexp_apply
          expression (test/dynamic/speed/src/gene.ml[51,1047+2]..[51,1047+5])
            Pexp_ident "ref" (test/dynamic/speed/src/gene.ml[51,1047+2]..[51,1047+5])
          [
            <arg>
            Nolabel
              expression (test/dynamic/speed/src/gene.ml[51,1047+6]..[51,1047+14])
                Pexp_constant PConst_int (10000000,None)
          ]
    ]
  structure_item (test/dynamic/speed/src/gene.ml[53,1063+0]..[58,1408+1])
    Pstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[53,1063+4]..[53,1063+11])
          Ppat_var "options" (test/dynamic/speed/src/gene.ml[53,1063+4]..[53,1063+11])
        expression (test/dynamic/speed/src/gene.ml[53,1063+14]..[58,1408+1])
          Pexp_apply
          expression (test/dynamic/speed/src/gene.ml[53,1063+14]..[53,1063+23])
            Pexp_ident "Arg.align" (test/dynamic/speed/src/gene.ml[53,1063+14]..[53,1063+23])
          [
            <arg>
            Nolabel
              expression (test/dynamic/speed/src/gene.ml[53,1063+24]..[58,1408+1])
                Pexp_construct "::" (test/dynamic/speed/src/gene.ml[54,1089+2]..[58,1408+1]) ghost
                Some
                  expression (test/dynamic/speed/src/gene.ml[54,1089+2]..[58,1408+1]) ghost
                    Pexp_tuple
                    [
                      expression (test/dynamic/speed/src/gene.ml[54,1089+2]..[54,1089+72])
                        Pexp_tuple
                        [
                          expression (test/dynamic/speed/src/gene.ml[54,1089+2]..[54,1089+13])
                            Pexp_constant PConst_string("--dry-run",(test/dynamic/speed/src/gene.ml[54,1089+3]..[54,1089+12]),None)
                          expression (test/dynamic/speed/src/gene.ml[54,1089+15]..[54,1089+30])
                            Pexp_construct "Arg.Set" (test/dynamic/speed/src/gene.ml[54,1089+15]..[54,1089+22])
                            Some
                              expression (test/dynamic/speed/src/gene.ml[54,1089+23]..[54,1089+30])
                                Pexp_ident "dry_run" (test/dynamic/speed/src/gene.ml[54,1089+23]..[54,1089+30])
                          expression (test/dynamic/speed/src/gene.ml[54,1089+32]..[54,1089+72])
                            Pexp_constant PConst_string("Run only the generator, not the parser",(test/dynamic/speed/src/gene.ml[54,1089+33]..[54,1089+71]),None)
                        ]
                      expression (test/dynamic/speed/src/gene.ml[55,1163+2]..[58,1408+1]) ghost
                        Pexp_construct "::" (test/dynamic/speed/src/gene.ml[55,1163+2]..[58,1408+1]) ghost
                        Some
                          expression (test/dynamic/speed/src/gene.ml[55,1163+2]..[58,1408+1]) ghost
                            Pexp_tuple
                            [
                              expression (test/dynamic/speed/src/gene.ml[55,1163+2]..[55,1163+77])
                                Pexp_tuple
                                [
                                  expression (test/dynamic/speed/src/gene.ml[55,1163+2]..[55,1163+10])
                                    Pexp_constant PConst_string("--seed",(test/dynamic/speed/src/gene.ml[55,1163+3]..[55,1163+9]),None)
                                  expression (test/dynamic/speed/src/gene.ml[55,1163+12]..[55,1163+28])
                                    Pexp_construct "Arg.Set_int" (test/dynamic/speed/src/gene.ml[55,1163+12]..[55,1163+23])
                                    Some
                                      expression (test/dynamic/speed/src/gene.ml[55,1163+24]..[55,1163+28])
                                        Pexp_ident "seed" (test/dynamic/speed/src/gene.ml[55,1163+24]..[55,1163+28])
                                  expression (test/dynamic/speed/src/gene.ml[55,1163+30]..[55,1163+77])
                                    Pexp_apply
                                    expression (test/dynamic/speed/src/gene.ml[55,1163+30]..[55,1163+37])
                                      Pexp_ident "sprintf" (test/dynamic/speed/src/gene.ml[55,1163+30]..[55,1163+37])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (test/dynamic/speed/src/gene.ml[55,1163+38]..[55,1163+71])
                                          Pexp_constant PConst_string("<seed> Set the random seed (%d)",(test/dynamic/speed/src/gene.ml[55,1163+39]..[55,1163+70]),None)
                                      <arg>
                                      Nolabel
                                        expression (test/dynamic/speed/src/gene.ml[55,1163+72]..[55,1163+77])
                                          Pexp_apply
                                          expression (test/dynamic/speed/src/gene.ml[55,1163+72]..[55,1163+73])
                                            Pexp_ident "!" (test/dynamic/speed/src/gene.ml[55,1163+72]..[55,1163+73])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (test/dynamic/speed/src/gene.ml[55,1163+73]..[55,1163+77])
                                                Pexp_ident "seed" (test/dynamic/speed/src/gene.ml[55,1163+73]..[55,1163+77])
                                          ]
                                    ]
                                ]
                              expression (test/dynamic/speed/src/gene.ml[56,1242+2]..[58,1408+1]) ghost
                                Pexp_construct "::" (test/dynamic/speed/src/gene.ml[56,1242+2]..[58,1408+1]) ghost
                                Some
                                  expression (test/dynamic/speed/src/gene.ml[56,1242+2]..[58,1408+1]) ghost
                                    Pexp_tuple
                                    [
                                      expression (test/dynamic/speed/src/gene.ml[56,1242+2]..[56,1242+80])
                                        Pexp_tuple
                                        [
                                          expression (test/dynamic/speed/src/gene.ml[56,1242+2]..[56,1242+10])
                                            Pexp_constant PConst_string("--runs",(test/dynamic/speed/src/gene.ml[56,1242+3]..[56,1242+9]),None)
                                          expression (test/dynamic/speed/src/gene.ml[56,1242+12]..[56,1242+28])
                                            Pexp_construct "Arg.Set_int" (test/dynamic/speed/src/gene.ml[56,1242+12]..[56,1242+23])
                                            Some
                                              expression (test/dynamic/speed/src/gene.ml[56,1242+24]..[56,1242+28])
                                                Pexp_ident "runs" (test/dynamic/speed/src/gene.ml[56,1242+24]..[56,1242+28])
                                          expression (test/dynamic/speed/src/gene.ml[56,1242+30]..[56,1242+80])
                                            Pexp_apply
                                            expression (test/dynamic/speed/src/gene.ml[56,1242+30]..[56,1242+37])
                                              Pexp_ident "sprintf" (test/dynamic/speed/src/gene.ml[56,1242+30]..[56,1242+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (test/dynamic/speed/src/gene.ml[56,1242+38]..[56,1242+74])
                                                  Pexp_constant PConst_string("<runs> Set the number of runs (%d)",(test/dynamic/speed/src/gene.ml[56,1242+39]..[56,1242+73]),None)
                                              <arg>
                                              Nolabel
                                                expression (test/dynamic/speed/src/gene.ml[56,1242+75]..[56,1242+80])
                                                  Pexp_apply
                                                  expression (test/dynamic/speed/src/gene.ml[56,1242+75]..[56,1242+76])
                                                    Pexp_ident "!" (test/dynamic/speed/src/gene.ml[56,1242+75]..[56,1242+76])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (test/dynamic/speed/src/gene.ml[56,1242+76]..[56,1242+80])
                                                        Pexp_ident "runs" (test/dynamic/speed/src/gene.ml[56,1242+76]..[56,1242+80])
                                                  ]
                                            ]
                                        ]
                                      expression (test/dynamic/speed/src/gene.ml[57,1324+2]..[58,1408+1]) ghost
                                        Pexp_construct "::" (test/dynamic/speed/src/gene.ml[57,1324+2]..[58,1408+1]) ghost
                                        Some
                                          expression (test/dynamic/speed/src/gene.ml[57,1324+2]..[58,1408+1]) ghost
                                            Pexp_tuple
                                            [
                                              expression (test/dynamic/speed/src/gene.ml[57,1324+2]..[57,1324+82])
                                                Pexp_tuple
                                                [
                                                  expression (test/dynamic/speed/src/gene.ml[57,1324+2]..[57,1324+10])
                                                    Pexp_constant PConst_string("--size",(test/dynamic/speed/src/gene.ml[57,1324+3]..[57,1324+9]),None)
                                                  expression (test/dynamic/speed/src/gene.ml[57,1324+12]..[57,1324+28])
                                                    Pexp_construct "Arg.Set_int" (test/dynamic/speed/src/gene.ml[57,1324+12]..[57,1324+23])
                                                    Some
                                                      expression (test/dynamic/speed/src/gene.ml[57,1324+24]..[57,1324+28])
                                                        Pexp_ident "size" (test/dynamic/speed/src/gene.ml[57,1324+24]..[57,1324+28])
                                                  expression (test/dynamic/speed/src/gene.ml[57,1324+30]..[57,1324+82])
                                                    Pexp_apply
                                                    expression (test/dynamic/speed/src/gene.ml[57,1324+30]..[57,1324+37])
                                                      Pexp_ident "sprintf" (test/dynamic/speed/src/gene.ml[57,1324+30]..[57,1324+37])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (test/dynamic/speed/src/gene.ml[57,1324+38]..[57,1324+76])
                                                          Pexp_constant PConst_string("<size> Set the size of the test (%d)",(test/dynamic/speed/src/gene.ml[57,1324+39]..[57,1324+75]),None)
                                                      <arg>
                                                      Nolabel
                                                        expression (test/dynamic/speed/src/gene.ml[57,1324+77]..[57,1324+82])
                                                          Pexp_apply
                                                          expression (test/dynamic/speed/src/gene.ml[57,1324+77]..[57,1324+78])
                                                            Pexp_ident "!" (test/dynamic/speed/src/gene.ml[57,1324+77]..[57,1324+78])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (test/dynamic/speed/src/gene.ml[57,1324+78]..[57,1324+82])
                                                                Pexp_ident "size" (test/dynamic/speed/src/gene.ml[57,1324+78]..[57,1324+82])
                                                          ]
                                                    ]
                                                ]
                                              expression (test/dynamic/speed/src/gene.ml[58,1408+0]..[58,1408+1]) ghost
                                                Pexp_construct "[]" (test/dynamic/speed/src/gene.ml[58,1408+0]..[58,1408+1]) ghost
                                                None
                                            ]
                                    ]
                            ]
                    ]
          ]
    ]
  structure_item (test/dynamic/speed/src/gene.ml[60,1411+0]..[61,1423+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[60,1411+4]..[60,1411+9])
          Ppat_var "usage" (test/dynamic/speed/src/gene.ml[60,1411+4]..[60,1411+9])
        expression (test/dynamic/speed/src/gene.ml[61,1423+2]..[61,1423+44])
          Pexp_apply
          expression (test/dynamic/speed/src/gene.ml[61,1423+2]..[61,1423+9])
            Pexp_ident "sprintf" (test/dynamic/speed/src/gene.ml[61,1423+2]..[61,1423+9])
          [
            <arg>
            Nolabel
              expression (test/dynamic/speed/src/gene.ml[61,1423+10]..[61,1423+31])
                Pexp_constant PConst_string("Usage: %s <options>",(test/dynamic/speed/src/gene.ml[61,1423+11]..[61,1423+30]),None)
            <arg>
            Nolabel
              expression (test/dynamic/speed/src/gene.ml[61,1423+32]..[61,1423+44])
                Pexp_apply
                expression (test/dynamic/speed/src/gene.ml[61,1423+32]..[61,1423+44]) ghost
                  Pexp_ident "Array.get" (test/dynamic/speed/src/gene.ml[61,1423+32]..[61,1423+44]) ghost
                [
                  <arg>
                  Nolabel
                    expression (test/dynamic/speed/src/gene.ml[61,1423+32]..[61,1423+40])
                      Pexp_ident "Sys.argv" (test/dynamic/speed/src/gene.ml[61,1423+32]..[61,1423+40])
                  <arg>
                  Nolabel
                    expression (test/dynamic/speed/src/gene.ml[61,1423+42]..[61,1423+43])
                      Pexp_constant PConst_int (0,None)
                ]
          ]
    ]
  structure_item (test/dynamic/speed/src/gene.ml[63,1469+0]..[64,1478+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[63,1469+4]..[63,1469+6])
          Ppat_construct "()" (test/dynamic/speed/src/gene.ml[63,1469+4]..[63,1469+6])
          None
        expression (test/dynamic/speed/src/gene.ml[64,1478+2]..[64,1478+39])
          Pexp_apply
          expression (test/dynamic/speed/src/gene.ml[64,1478+2]..[64,1478+11])
            Pexp_ident "Arg.parse" (test/dynamic/speed/src/gene.ml[64,1478+2]..[64,1478+11])
          [
            <arg>
            Nolabel
              expression (test/dynamic/speed/src/gene.ml[64,1478+12]..[64,1478+19])
                Pexp_ident "options" (test/dynamic/speed/src/gene.ml[64,1478+12]..[64,1478+19])
            <arg>
            Nolabel
              expression (test/dynamic/speed/src/gene.ml[64,1478+20]..[64,1478+33])
                Pexp_fun
                Nolabel
                None
                pattern (test/dynamic/speed/src/gene.ml[64,1478+25]..[64,1478+26])
                  Ppat_any
                expression (test/dynamic/speed/src/gene.ml[64,1478+30]..[64,1478+32])
                  Pexp_construct "()" (test/dynamic/speed/src/gene.ml[64,1478+30]..[64,1478+32])
                  None
            <arg>
            Nolabel
              expression (test/dynamic/speed/src/gene.ml[64,1478+34]..[64,1478+39])
                Pexp_ident "usage" (test/dynamic/speed/src/gene.ml[64,1478+34]..[64,1478+39])
          ]
    ]
  structure_item (test/dynamic/speed/src/gene.ml[70,1615+0]..[70,1615+11])
    Pstr_open Fresh
    module_expr (test/dynamic/speed/src/gene.ml[70,1615+5]..[70,1615+11])
      Pmod_ident "Lexing" (test/dynamic/speed/src/gene.ml[70,1615+5]..[70,1615+11])
  structure_item (test/dynamic/speed/src/gene.ml[72,1628+0]..[74,1676+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[72,1628+4]..[72,1628+10])
          Ppat_var "tokens" (test/dynamic/speed/src/gene.ml[72,1628+4]..[72,1628+10])
        core_type (test/dynamic/speed/src/gene.ml[72,1628+13]..[72,1628+24])
          Ptyp_constr "array" (test/dynamic/speed/src/gene.ml[72,1628+19]..[72,1628+24])
          [
            core_type (test/dynamic/speed/src/gene.ml[72,1628+13]..[72,1628+18])
              Ptyp_constr "token" (test/dynamic/speed/src/gene.ml[72,1628+13]..[72,1628+18])
              []
          ]
        expression (test/dynamic/speed/src/gene.ml[73,1655+2]..[74,1676+15])
          Pexp_sequence
          expression (test/dynamic/speed/src/gene.ml[73,1655+2]..[73,1655+19])
            Pexp_apply
            expression (test/dynamic/speed/src/gene.ml[73,1655+2]..[73,1655+13])
              Pexp_ident "Random.init" (test/dynamic/speed/src/gene.ml[73,1655+2]..[73,1655+13])
            [
              <arg>
              Nolabel
                expression (test/dynamic/speed/src/gene.ml[73,1655+14]..[73,1655+19])
                  Pexp_apply
                  expression (test/dynamic/speed/src/gene.ml[73,1655+14]..[73,1655+15])
                    Pexp_ident "!" (test/dynamic/speed/src/gene.ml[73,1655+14]..[73,1655+15])
                  [
                    <arg>
                    Nolabel
                      expression (test/dynamic/speed/src/gene.ml[73,1655+15]..[73,1655+19])
                        Pexp_ident "seed" (test/dynamic/speed/src/gene.ml[73,1655+15]..[73,1655+19])
                  ]
            ]
          expression (test/dynamic/speed/src/gene.ml[74,1676+2]..[74,1676+15])
            Pexp_apply
            expression (test/dynamic/speed/src/gene.ml[74,1676+2]..[74,1676+9])
              Pexp_ident "produce" (test/dynamic/speed/src/gene.ml[74,1676+2]..[74,1676+9])
            [
              <arg>
              Nolabel
                expression (test/dynamic/speed/src/gene.ml[74,1676+10]..[74,1676+15])
                  Pexp_apply
                  expression (test/dynamic/speed/src/gene.ml[74,1676+10]..[74,1676+11])
                    Pexp_ident "!" (test/dynamic/speed/src/gene.ml[74,1676+10]..[74,1676+11])
                  [
                    <arg>
                    Nolabel
                      expression (test/dynamic/speed/src/gene.ml[74,1676+11]..[74,1676+15])
                        Pexp_ident "size" (test/dynamic/speed/src/gene.ml[74,1676+11]..[74,1676+15])
                  ]
            ]
    ]
  structure_item (test/dynamic/speed/src/gene.ml[76,1693+0]..[77,1702+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[76,1693+4]..[76,1693+6])
          Ppat_construct "()" (test/dynamic/speed/src/gene.ml[76,1693+4]..[76,1693+6])
          None
        expression (test/dynamic/speed/src/gene.ml[77,1702+2]..[77,1702+17])
          Pexp_apply
          expression (test/dynamic/speed/src/gene.ml[77,1702+2]..[77,1702+15])
            Pexp_ident "Gc.full_major" (test/dynamic/speed/src/gene.ml[77,1702+2]..[77,1702+15])
          [
            <arg>
            Nolabel
              expression (test/dynamic/speed/src/gene.ml[77,1702+15]..[77,1702+17])
                Pexp_construct "()" (test/dynamic/speed/src/gene.ml[77,1702+15]..[77,1702+17])
                None
          ]
    ]
  structure_item (test/dynamic/speed/src/gene.ml[79,1721+0]..[81,1749+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[79,1721+4]..[79,1721+6])
          Ppat_construct "()" (test/dynamic/speed/src/gene.ml[79,1721+4]..[79,1721+6])
          None
        expression (test/dynamic/speed/src/gene.ml[80,1730+2]..[81,1749+10])
          Pexp_ifthenelse
          expression (test/dynamic/speed/src/gene.ml[80,1730+5]..[80,1730+13])
            Pexp_apply
            expression (test/dynamic/speed/src/gene.ml[80,1730+5]..[80,1730+6])
              Pexp_ident "!" (test/dynamic/speed/src/gene.ml[80,1730+5]..[80,1730+6])
            [
              <arg>
              Nolabel
                expression (test/dynamic/speed/src/gene.ml[80,1730+6]..[80,1730+13])
                  Pexp_ident "dry_run" (test/dynamic/speed/src/gene.ml[80,1730+6]..[80,1730+13])
            ]
          expression (test/dynamic/speed/src/gene.ml[81,1749+4]..[81,1749+10])
            Pexp_apply
            expression (test/dynamic/speed/src/gene.ml[81,1749+4]..[81,1749+8])
              Pexp_ident "exit" (test/dynamic/speed/src/gene.ml[81,1749+4]..[81,1749+8])
            [
              <arg>
              Nolabel
                expression (test/dynamic/speed/src/gene.ml[81,1749+9]..[81,1749+10])
                  Pexp_constant PConst_int (0,None)
            ]
          None
    ]
  structure_item (test/dynamic/speed/src/gene.ml[83,1761+0]..[90,2034+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[83,1761+4]..[83,1761+9])
          Ppat_var "lexer" (test/dynamic/speed/src/gene.ml[83,1761+4]..[83,1761+9])
        expression (test/dynamic/speed/src/gene.ml[83,1761+10]..[90,2034+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (test/dynamic/speed/src/gene.ml[83,1761+10]..[83,1761+16])
            Ppat_var "lexbuf" (test/dynamic/speed/src/gene.ml[83,1761+10]..[83,1761+16])
          expression (test/dynamic/speed/src/gene.ml[84,1780+2]..[90,2034+7])
            Pexp_let Nonrec
            [
              <def>
                pattern (test/dynamic/speed/src/gene.ml[84,1780+6]..[84,1780+9])
                  Ppat_var "pos" (test/dynamic/speed/src/gene.ml[84,1780+6]..[84,1780+9])
                expression (test/dynamic/speed/src/gene.ml[84,1780+12]..[84,1780+31])
                  Pexp_field
                  expression (test/dynamic/speed/src/gene.ml[84,1780+12]..[84,1780+18])
                    Pexp_ident "lexbuf" (test/dynamic/speed/src/gene.ml[84,1780+12]..[84,1780+18])
                  "lex_curr_pos" (test/dynamic/speed/src/gene.ml[84,1780+19]..[84,1780+31])
            ]
            expression (test/dynamic/speed/src/gene.ml[87,1917+2]..[90,2034+7])
              Pexp_sequence
              expression (test/dynamic/speed/src/gene.ml[87,1917+2]..[87,1917+36])
                Pexp_assert
                expression (test/dynamic/speed/src/gene.ml[87,1917+9]..[87,1917+36])
                  Pexp_apply
                  expression (test/dynamic/speed/src/gene.ml[87,1917+14]..[87,1917+15])
                    Pexp_ident "<" (test/dynamic/speed/src/gene.ml[87,1917+14]..[87,1917+15])
                  [
                    <arg>
                    Nolabel
                      expression (test/dynamic/speed/src/gene.ml[87,1917+10]..[87,1917+13])
                        Pexp_ident "pos" (test/dynamic/speed/src/gene.ml[87,1917+10]..[87,1917+13])
                    <arg>
                    Nolabel
                      expression (test/dynamic/speed/src/gene.ml[87,1917+16]..[87,1917+35])
                        Pexp_apply
                        expression (test/dynamic/speed/src/gene.ml[87,1917+16]..[87,1917+28])
                          Pexp_ident "Array.length" (test/dynamic/speed/src/gene.ml[87,1917+16]..[87,1917+28])
                        [
                          <arg>
                          Nolabel
                            expression (test/dynamic/speed/src/gene.ml[87,1917+29]..[87,1917+35])
                              Pexp_ident "tokens" (test/dynamic/speed/src/gene.ml[87,1917+29]..[87,1917+35])
                        ]
                  ]
              expression (test/dynamic/speed/src/gene.ml[88,1955+2]..[90,2034+7])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (test/dynamic/speed/src/gene.ml[88,1955+6]..[88,1955+11])
                      Ppat_var "token" (test/dynamic/speed/src/gene.ml[88,1955+6]..[88,1955+11])
                    expression (test/dynamic/speed/src/gene.ml[88,1955+14]..[88,1955+41])
                      Pexp_apply
                      expression (test/dynamic/speed/src/gene.ml[88,1955+14]..[88,1955+30])
                        Pexp_ident "Array.unsafe_get" (test/dynamic/speed/src/gene.ml[88,1955+14]..[88,1955+30])
                      [
                        <arg>
                        Nolabel
                          expression (test/dynamic/speed/src/gene.ml[88,1955+31]..[88,1955+37])
                            Pexp_ident "tokens" (test/dynamic/speed/src/gene.ml[88,1955+31]..[88,1955+37])
                        <arg>
                        Nolabel
                          expression (test/dynamic/speed/src/gene.ml[88,1955+38]..[88,1955+41])
                            Pexp_ident "pos" (test/dynamic/speed/src/gene.ml[88,1955+38]..[88,1955+41])
                      ]
                ]
                expression (test/dynamic/speed/src/gene.ml[89,2000+2]..[90,2034+7])
                  Pexp_sequence
                  expression (test/dynamic/speed/src/gene.ml[89,2000+2]..[89,2000+32])
                    Pexp_setfield
                    expression (test/dynamic/speed/src/gene.ml[89,2000+2]..[89,2000+8])
                      Pexp_ident "lexbuf" (test/dynamic/speed/src/gene.ml[89,2000+2]..[89,2000+8])
                    "lex_curr_pos" (test/dynamic/speed/src/gene.ml[89,2000+9]..[89,2000+21])
                    expression (test/dynamic/speed/src/gene.ml[89,2000+25]..[89,2000+32])
                      Pexp_apply
                      expression (test/dynamic/speed/src/gene.ml[89,2000+29]..[89,2000+30])
                        Pexp_ident "+" (test/dynamic/speed/src/gene.ml[89,2000+29]..[89,2000+30])
                      [
                        <arg>
                        Nolabel
                          expression (test/dynamic/speed/src/gene.ml[89,2000+25]..[89,2000+28])
                            Pexp_ident "pos" (test/dynamic/speed/src/gene.ml[89,2000+25]..[89,2000+28])
                        <arg>
                        Nolabel
                          expression (test/dynamic/speed/src/gene.ml[89,2000+31]..[89,2000+32])
                            Pexp_constant PConst_int (1,None)
                      ]
                  expression (test/dynamic/speed/src/gene.ml[90,2034+2]..[90,2034+7])
                    Pexp_ident "token" (test/dynamic/speed/src/gene.ml[90,2034+2]..[90,2034+7])
    ]
  structure_item (test/dynamic/speed/src/gene.ml[92,2043+0]..[97,2193+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[92,2043+4]..[92,2043+14])
          Ppat_var "new_lexbuf" (test/dynamic/speed/src/gene.ml[92,2043+4]..[92,2043+14])
        expression (test/dynamic/speed/src/gene.ml[92,2043+15]..[97,2193+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (test/dynamic/speed/src/gene.ml[92,2043+15]..[92,2043+17])
            Ppat_construct "()" (test/dynamic/speed/src/gene.ml[92,2043+15]..[92,2043+17])
            None
          expression (test/dynamic/speed/src/gene.ml[93,2063+2]..[97,2193+8])
            Pexp_let Nonrec
            [
              <def>
                pattern (test/dynamic/speed/src/gene.ml[93,2063+6]..[93,2063+12])
                  Ppat_var "lexbuf" (test/dynamic/speed/src/gene.ml[93,2063+6]..[93,2063+12])
                expression (test/dynamic/speed/src/gene.ml[93,2063+15]..[93,2063+29])
                  Pexp_apply
                  expression (test/dynamic/speed/src/gene.ml[93,2063+15]..[93,2063+26])
                    Pexp_ident "from_string" (test/dynamic/speed/src/gene.ml[93,2063+15]..[93,2063+26])
                  [
                    <arg>
                    Nolabel
                      expression (test/dynamic/speed/src/gene.ml[93,2063+27]..[93,2063+29])
                        Pexp_constant PConst_string("",(test/dynamic/speed/src/gene.ml[93,2063+28]..[93,2063+28]),None)
                  ]
            ]
            expression (test/dynamic/speed/src/gene.ml[94,2096+2]..[97,2193+8])
              Pexp_sequence
              expression (test/dynamic/speed/src/gene.ml[94,2096+2]..[94,2096+33])
                Pexp_setfield
                expression (test/dynamic/speed/src/gene.ml[94,2096+2]..[94,2096+8])
                  Pexp_ident "lexbuf" (test/dynamic/speed/src/gene.ml[94,2096+2]..[94,2096+8])
                "lex_start_p" (test/dynamic/speed/src/gene.ml[94,2096+9]..[94,2096+20])
                expression (test/dynamic/speed/src/gene.ml[94,2096+24]..[94,2096+33])
                  Pexp_ident "dummy_pos" (test/dynamic/speed/src/gene.ml[94,2096+24]..[94,2096+33])
              expression (test/dynamic/speed/src/gene.ml[95,2131+2]..[97,2193+8])
                Pexp_sequence
                expression (test/dynamic/speed/src/gene.ml[95,2131+2]..[95,2131+32])
                  Pexp_setfield
                  expression (test/dynamic/speed/src/gene.ml[95,2131+2]..[95,2131+8])
                    Pexp_ident "lexbuf" (test/dynamic/speed/src/gene.ml[95,2131+2]..[95,2131+8])
                  "lex_curr_p" (test/dynamic/speed/src/gene.ml[95,2131+9]..[95,2131+19])
                  expression (test/dynamic/speed/src/gene.ml[95,2131+23]..[95,2131+32])
                    Pexp_ident "dummy_pos" (test/dynamic/speed/src/gene.ml[95,2131+23]..[95,2131+32])
                expression (test/dynamic/speed/src/gene.ml[96,2165+2]..[97,2193+8])
                  Pexp_sequence
                  expression (test/dynamic/speed/src/gene.ml[96,2165+2]..[96,2165+26])
                    Pexp_setfield
                    expression (test/dynamic/speed/src/gene.ml[96,2165+2]..[96,2165+8])
                      Pexp_ident "lexbuf" (test/dynamic/speed/src/gene.ml[96,2165+2]..[96,2165+8])
                    "lex_curr_pos" (test/dynamic/speed/src/gene.ml[96,2165+9]..[96,2165+21])
                    expression (test/dynamic/speed/src/gene.ml[96,2165+25]..[96,2165+26])
                      Pexp_constant PConst_int (0,None)
                  expression (test/dynamic/speed/src/gene.ml[97,2193+2]..[97,2193+8])
                    Pexp_ident "lexbuf" (test/dynamic/speed/src/gene.ml[97,2193+2]..[97,2193+8])
    ]
  structure_item (test/dynamic/speed/src/gene.ml[99,2203+0]..[121,3117+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[99,2203+4]..[99,2203+6])
          Ppat_construct "()" (test/dynamic/speed/src/gene.ml[99,2203+4]..[99,2203+6])
          None
        expression (test/dynamic/speed/src/gene.ml[103,2426+2]..[121,3117+4])
          Pexp_let Nonrec
          [
            <def>
              pattern (test/dynamic/speed/src/gene.ml[103,2426+6]..[103,2426+9])
                Ppat_var "gc1" (test/dynamic/speed/src/gene.ml[103,2426+6]..[103,2426+9])
              expression (test/dynamic/speed/src/gene.ml[103,2426+12]..[103,2426+28])
                Pexp_apply
                expression (test/dynamic/speed/src/gene.ml[103,2426+12]..[103,2426+25])
                  Pexp_ident "Gc.quick_stat" (test/dynamic/speed/src/gene.ml[103,2426+12]..[103,2426+25])
                [
                  <arg>
                  Nolabel
                    expression (test/dynamic/speed/src/gene.ml[103,2426+26]..[103,2426+28])
                      Pexp_construct "()" (test/dynamic/speed/src/gene.ml[103,2426+26]..[103,2426+28])
                      None
                ]
          ]
          expression (test/dynamic/speed/src/gene.ml[104,2458+2]..[121,3117+4])
            Pexp_let Nonrec
            [
              <def>
                pattern (test/dynamic/speed/src/gene.ml[104,2458+6]..[104,2458+12])
                  Ppat_var "times1" (test/dynamic/speed/src/gene.ml[104,2458+6]..[104,2458+12])
                expression (test/dynamic/speed/src/gene.ml[104,2458+15]..[104,2458+27])
                  Pexp_apply
                  expression (test/dynamic/speed/src/gene.ml[104,2458+15]..[104,2458+25])
                    Pexp_ident "Unix.times" (test/dynamic/speed/src/gene.ml[104,2458+15]..[104,2458+25])
                  [
                    <arg>
                    Nolabel
                      expression (test/dynamic/speed/src/gene.ml[104,2458+25]..[104,2458+27])
                        Pexp_construct "()" (test/dynamic/speed/src/gene.ml[104,2458+25]..[104,2458+27])
                        None
                  ]
            ]
            expression (test/dynamic/speed/src/gene.ml[105,2489+2]..[121,3117+4])
              Pexp_sequence
              expression (test/dynamic/speed/src/gene.ml[105,2489+2]..[108,2577+6])
                Pexp_for Up
                pattern (test/dynamic/speed/src/gene.ml[105,2489+6]..[105,2489+10])
                  Ppat_var "_run" (test/dynamic/speed/src/gene.ml[105,2489+6]..[105,2489+10])
                expression (test/dynamic/speed/src/gene.ml[105,2489+13]..[105,2489+14])
                  Pexp_constant PConst_int (1,None)
                expression (test/dynamic/speed/src/gene.ml[105,2489+18]..[105,2489+23])
                  Pexp_apply
                  expression (test/dynamic/speed/src/gene.ml[105,2489+18]..[105,2489+19])
                    Pexp_ident "!" (test/dynamic/speed/src/gene.ml[105,2489+18]..[105,2489+19])
                  [
                    <arg>
                    Nolabel
                      expression (test/dynamic/speed/src/gene.ml[105,2489+19]..[105,2489+23])
                        Pexp_ident "runs" (test/dynamic/speed/src/gene.ml[105,2489+19]..[105,2489+23])
                  ]
                expression (test/dynamic/speed/src/gene.ml[106,2516+4]..[107,2536+40])
                  Pexp_apply
                  expression (test/dynamic/speed/src/gene.ml[106,2516+4]..[106,2516+10])
                    Pexp_ident "printf" (test/dynamic/speed/src/gene.ml[106,2516+4]..[106,2516+10])
                  [
                    <arg>
                    Nolabel
                      expression (test/dynamic/speed/src/gene.ml[106,2516+11]..[106,2516+19])
                        Pexp_constant PConst_string("%d\n%!",(test/dynamic/speed/src/gene.ml[106,2516+12]..[106,2516+18]),None)
                    <arg>
                    Nolabel
                      expression (test/dynamic/speed/src/gene.ml[107,2536+6]..[107,2536+40])
                        Pexp_apply
                        expression (test/dynamic/speed/src/gene.ml[107,2536+7]..[107,2536+18])
                          Pexp_ident "Parser.main" (test/dynamic/speed/src/gene.ml[107,2536+7]..[107,2536+18])
                        [
                          <arg>
                          Nolabel
                            expression (test/dynamic/speed/src/gene.ml[107,2536+19]..[107,2536+24])
                              Pexp_ident "lexer" (test/dynamic/speed/src/gene.ml[107,2536+19]..[107,2536+24])
                          <arg>
                          Nolabel
                            expression (test/dynamic/speed/src/gene.ml[107,2536+25]..[107,2536+39])
                              Pexp_apply
                              expression (test/dynamic/speed/src/gene.ml[107,2536+26]..[107,2536+36])
                                Pexp_ident "new_lexbuf" (test/dynamic/speed/src/gene.ml[107,2536+26]..[107,2536+36])
                              [
                                <arg>
                                Nolabel
                                  expression (test/dynamic/speed/src/gene.ml[107,2536+36]..[107,2536+38])
                                    Pexp_construct "()" (test/dynamic/speed/src/gene.ml[107,2536+36]..[107,2536+38])
                                    None
                              ]
                        ]
                  ]
              expression (test/dynamic/speed/src/gene.ml[109,2585+2]..[121,3117+4])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (test/dynamic/speed/src/gene.ml[109,2585+6]..[109,2585+12])
                      Ppat_var "times2" (test/dynamic/speed/src/gene.ml[109,2585+6]..[109,2585+12])
                    expression (test/dynamic/speed/src/gene.ml[109,2585+15]..[109,2585+27])
                      Pexp_apply
                      expression (test/dynamic/speed/src/gene.ml[109,2585+15]..[109,2585+25])
                        Pexp_ident "Unix.times" (test/dynamic/speed/src/gene.ml[109,2585+15]..[109,2585+25])
                      [
                        <arg>
                        Nolabel
                          expression (test/dynamic/speed/src/gene.ml[109,2585+25]..[109,2585+27])
                            Pexp_construct "()" (test/dynamic/speed/src/gene.ml[109,2585+25]..[109,2585+27])
                            None
                      ]
                ]
                expression (test/dynamic/speed/src/gene.ml[110,2616+2]..[121,3117+4])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (test/dynamic/speed/src/gene.ml[110,2616+6]..[110,2616+13])
                        Ppat_var "elapsed" (test/dynamic/speed/src/gene.ml[110,2616+6]..[110,2616+13])
                      expression (test/dynamic/speed/src/gene.ml[110,2616+16]..[110,2616+52])
                        Pexp_apply
                        expression (test/dynamic/speed/src/gene.ml[110,2616+33]..[110,2616+35])
                          Pexp_ident "-." (test/dynamic/speed/src/gene.ml[110,2616+33]..[110,2616+35])
                        [
                          <arg>
                          Nolabel
                            expression (test/dynamic/speed/src/gene.ml[110,2616+16]..[110,2616+32])
                              Pexp_field
                              expression (test/dynamic/speed/src/gene.ml[110,2616+16]..[110,2616+22])
                                Pexp_ident "times2" (test/dynamic/speed/src/gene.ml[110,2616+16]..[110,2616+22])
                              "tms_utime" (test/dynamic/speed/src/gene.ml[110,2616+23]..[110,2616+32])
                          <arg>
                          Nolabel
                            expression (test/dynamic/speed/src/gene.ml[110,2616+36]..[110,2616+52])
                              Pexp_field
                              expression (test/dynamic/speed/src/gene.ml[110,2616+36]..[110,2616+42])
                                Pexp_ident "times1" (test/dynamic/speed/src/gene.ml[110,2616+36]..[110,2616+42])
                              "tms_utime" (test/dynamic/speed/src/gene.ml[110,2616+43]..[110,2616+52])
                        ]
                  ]
                  expression (test/dynamic/speed/src/gene.ml[111,2672+2]..[121,3117+4])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (test/dynamic/speed/src/gene.ml[111,2672+6]..[111,2672+9])
                          Ppat_var "gc2" (test/dynamic/speed/src/gene.ml[111,2672+6]..[111,2672+9])
                        expression (test/dynamic/speed/src/gene.ml[111,2672+12]..[111,2672+28])
                          Pexp_apply
                          expression (test/dynamic/speed/src/gene.ml[111,2672+12]..[111,2672+25])
                            Pexp_ident "Gc.quick_stat" (test/dynamic/speed/src/gene.ml[111,2672+12]..[111,2672+25])
                          [
                            <arg>
                            Nolabel
                              expression (test/dynamic/speed/src/gene.ml[111,2672+26]..[111,2672+28])
                                Pexp_construct "()" (test/dynamic/speed/src/gene.ml[111,2672+26]..[111,2672+28])
                                None
                          ]
                    ]
                    expression (test/dynamic/speed/src/gene.ml[112,2704+2]..[121,3117+4])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (test/dynamic/speed/src/gene.ml[112,2704+6]..[112,2704+11])
                            Ppat_var "minor" (test/dynamic/speed/src/gene.ml[112,2704+6]..[112,2704+11])
                          expression (test/dynamic/speed/src/gene.ml[112,2704+14]..[112,2704+48])
                            Pexp_apply
                            expression (test/dynamic/speed/src/gene.ml[112,2704+30]..[112,2704+32])
                              Pexp_ident "-." (test/dynamic/speed/src/gene.ml[112,2704+30]..[112,2704+32])
                            [
                              <arg>
                              Nolabel
                                expression (test/dynamic/speed/src/gene.ml[112,2704+14]..[112,2704+29])
                                  Pexp_field
                                  expression (test/dynamic/speed/src/gene.ml[112,2704+14]..[112,2704+17])
                                    Pexp_ident "gc2" (test/dynamic/speed/src/gene.ml[112,2704+14]..[112,2704+17])
                                  "minor_words" (test/dynamic/speed/src/gene.ml[112,2704+18]..[112,2704+29])
                              <arg>
                              Nolabel
                                expression (test/dynamic/speed/src/gene.ml[112,2704+33]..[112,2704+48])
                                  Pexp_field
                                  expression (test/dynamic/speed/src/gene.ml[112,2704+33]..[112,2704+36])
                                    Pexp_ident "gc1" (test/dynamic/speed/src/gene.ml[112,2704+33]..[112,2704+36])
                                  "minor_words" (test/dynamic/speed/src/gene.ml[112,2704+37]..[112,2704+48])
                            ]
                        <def>
                          pattern (test/dynamic/speed/src/gene.ml[113,2753+6]..[113,2753+11])
                            Ppat_var "major" (test/dynamic/speed/src/gene.ml[113,2753+6]..[113,2753+11])
                          expression (test/dynamic/speed/src/gene.ml[113,2753+14]..[113,2753+48])
                            Pexp_apply
                            expression (test/dynamic/speed/src/gene.ml[113,2753+30]..[113,2753+32])
                              Pexp_ident "-." (test/dynamic/speed/src/gene.ml[113,2753+30]..[113,2753+32])
                            [
                              <arg>
                              Nolabel
                                expression (test/dynamic/speed/src/gene.ml[113,2753+14]..[113,2753+29])
                                  Pexp_field
                                  expression (test/dynamic/speed/src/gene.ml[113,2753+14]..[113,2753+17])
                                    Pexp_ident "gc2" (test/dynamic/speed/src/gene.ml[113,2753+14]..[113,2753+17])
                                  "major_words" (test/dynamic/speed/src/gene.ml[113,2753+18]..[113,2753+29])
                              <arg>
                              Nolabel
                                expression (test/dynamic/speed/src/gene.ml[113,2753+33]..[113,2753+48])
                                  Pexp_field
                                  expression (test/dynamic/speed/src/gene.ml[113,2753+33]..[113,2753+36])
                                    Pexp_ident "gc1" (test/dynamic/speed/src/gene.ml[113,2753+33]..[113,2753+36])
                                  "major_words" (test/dynamic/speed/src/gene.ml[113,2753+37]..[113,2753+48])
                            ]
                        <def>
                          pattern (test/dynamic/speed/src/gene.ml[114,2802+6]..[114,2802+14])
                            Ppat_var "promoted" (test/dynamic/speed/src/gene.ml[114,2802+6]..[114,2802+14])
                          expression (test/dynamic/speed/src/gene.ml[114,2802+17]..[114,2802+57])
                            Pexp_apply
                            expression (test/dynamic/speed/src/gene.ml[114,2802+36]..[114,2802+38])
                              Pexp_ident "-." (test/dynamic/speed/src/gene.ml[114,2802+36]..[114,2802+38])
                            [
                              <arg>
                              Nolabel
                                expression (test/dynamic/speed/src/gene.ml[114,2802+17]..[114,2802+35])
                                  Pexp_field
                                  expression (test/dynamic/speed/src/gene.ml[114,2802+17]..[114,2802+20])
                                    Pexp_ident "gc2" (test/dynamic/speed/src/gene.ml[114,2802+17]..[114,2802+20])
                                  "promoted_words" (test/dynamic/speed/src/gene.ml[114,2802+21]..[114,2802+35])
                              <arg>
                              Nolabel
                                expression (test/dynamic/speed/src/gene.ml[114,2802+39]..[114,2802+57])
                                  Pexp_field
                                  expression (test/dynamic/speed/src/gene.ml[114,2802+39]..[114,2802+42])
                                    Pexp_ident "gc1" (test/dynamic/speed/src/gene.ml[114,2802+39]..[114,2802+42])
                                  "promoted_words" (test/dynamic/speed/src/gene.ml[114,2802+43]..[114,2802+57])
                            ]
                      ]
                      expression (test/dynamic/speed/src/gene.ml[115,2863+2]..[121,3117+4])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (test/dynamic/speed/src/gene.ml[115,2863+6]..[115,2863+10])
                              Ppat_var "runs" (test/dynamic/speed/src/gene.ml[115,2863+6]..[115,2863+10])
                            expression (test/dynamic/speed/src/gene.ml[115,2863+13]..[115,2863+31])
                              Pexp_apply
                              expression (test/dynamic/speed/src/gene.ml[115,2863+13]..[115,2863+25])
                                Pexp_ident "float_of_int" (test/dynamic/speed/src/gene.ml[115,2863+13]..[115,2863+25])
                              [
                                <arg>
                                Nolabel
                                  expression (test/dynamic/speed/src/gene.ml[115,2863+26]..[115,2863+31])
                                    Pexp_apply
                                    expression (test/dynamic/speed/src/gene.ml[115,2863+26]..[115,2863+27])
                                      Pexp_ident "!" (test/dynamic/speed/src/gene.ml[115,2863+26]..[115,2863+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (test/dynamic/speed/src/gene.ml[115,2863+27]..[115,2863+31])
                                          Pexp_ident "runs" (test/dynamic/speed/src/gene.ml[115,2863+27]..[115,2863+31])
                                    ]
                              ]
                        ]
                        expression (test/dynamic/speed/src/gene.ml[116,2898+2]..[121,3117+4])
                          Pexp_sequence
                          expression (test/dynamic/speed/src/gene.ml[116,2898+2]..[116,2898+46])
                            Pexp_apply
                            expression (test/dynamic/speed/src/gene.ml[116,2898+2]..[116,2898+9])
                              Pexp_ident "eprintf" (test/dynamic/speed/src/gene.ml[116,2898+2]..[116,2898+9])
                            [
                              <arg>
                              Nolabel
                                expression (test/dynamic/speed/src/gene.ml[116,2898+10]..[116,2898+24])
                                  Pexp_constant PConst_string("tokens: %d\n",(test/dynamic/speed/src/gene.ml[116,2898+11]..[116,2898+23]),None)
                              <arg>
                              Nolabel
                                expression (test/dynamic/speed/src/gene.ml[116,2898+25]..[116,2898+46])
                                  Pexp_apply
                                  expression (test/dynamic/speed/src/gene.ml[116,2898+26]..[116,2898+38])
                                    Pexp_ident "Array.length" (test/dynamic/speed/src/gene.ml[116,2898+26]..[116,2898+38])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (test/dynamic/speed/src/gene.ml[116,2898+39]..[116,2898+45])
                                        Pexp_ident "tokens" (test/dynamic/speed/src/gene.ml[116,2898+39]..[116,2898+45])
                                  ]
                            ]
                          expression (test/dynamic/speed/src/gene.ml[117,2946+2]..[121,3117+4])
                            Pexp_sequence
                            expression (test/dynamic/speed/src/gene.ml[117,2946+2]..[117,2946+40])
                              Pexp_apply
                              expression (test/dynamic/speed/src/gene.ml[117,2946+2]..[117,2946+9])
                                Pexp_ident "eprintf" (test/dynamic/speed/src/gene.ml[117,2946+2]..[117,2946+9])
                              [
                                <arg>
                                Nolabel
                                  expression (test/dynamic/speed/src/gene.ml[117,2946+10]..[117,2946+22])
                                    Pexp_constant PConst_string("time: %f\n",(test/dynamic/speed/src/gene.ml[117,2946+11]..[117,2946+21]),None)
                                <arg>
                                Nolabel
                                  expression (test/dynamic/speed/src/gene.ml[117,2946+23]..[117,2946+40])
                                    Pexp_apply
                                    expression (test/dynamic/speed/src/gene.ml[117,2946+32]..[117,2946+34])
                                      Pexp_ident "/." (test/dynamic/speed/src/gene.ml[117,2946+32]..[117,2946+34])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (test/dynamic/speed/src/gene.ml[117,2946+24]..[117,2946+31])
                                          Pexp_ident "elapsed" (test/dynamic/speed/src/gene.ml[117,2946+24]..[117,2946+31])
                                      <arg>
                                      Nolabel
                                        expression (test/dynamic/speed/src/gene.ml[117,2946+35]..[117,2946+39])
                                          Pexp_ident "runs" (test/dynamic/speed/src/gene.ml[117,2946+35]..[117,2946+39])
                                    ]
                              ]
                            expression (test/dynamic/speed/src/gene.ml[118,2988+2]..[121,3117+4])
                              Pexp_sequence
                              expression (test/dynamic/speed/src/gene.ml[118,2988+2]..[118,2988+39])
                                Pexp_apply
                                expression (test/dynamic/speed/src/gene.ml[118,2988+2]..[118,2988+9])
                                  Pexp_ident "eprintf" (test/dynamic/speed/src/gene.ml[118,2988+2]..[118,2988+9])
                                [
                                  <arg>
                                  Nolabel
                                    expression (test/dynamic/speed/src/gene.ml[118,2988+10]..[118,2988+23])
                                      Pexp_constant PConst_string("minor: %f\n",(test/dynamic/speed/src/gene.ml[118,2988+11]..[118,2988+22]),None)
                                  <arg>
                                  Nolabel
                                    expression (test/dynamic/speed/src/gene.ml[118,2988+24]..[118,2988+39])
                                      Pexp_apply
                                      expression (test/dynamic/speed/src/gene.ml[118,2988+31]..[118,2988+33])
                                        Pexp_ident "/." (test/dynamic/speed/src/gene.ml[118,2988+31]..[118,2988+33])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (test/dynamic/speed/src/gene.ml[118,2988+25]..[118,2988+30])
                                            Pexp_ident "minor" (test/dynamic/speed/src/gene.ml[118,2988+25]..[118,2988+30])
                                        <arg>
                                        Nolabel
                                          expression (test/dynamic/speed/src/gene.ml[118,2988+34]..[118,2988+38])
                                            Pexp_ident "runs" (test/dynamic/speed/src/gene.ml[118,2988+34]..[118,2988+38])
                                      ]
                                ]
                              expression (test/dynamic/speed/src/gene.ml[119,3029+2]..[121,3117+4])
                                Pexp_sequence
                                expression (test/dynamic/speed/src/gene.ml[119,3029+2]..[119,3029+39])
                                  Pexp_apply
                                  expression (test/dynamic/speed/src/gene.ml[119,3029+2]..[119,3029+9])
                                    Pexp_ident "eprintf" (test/dynamic/speed/src/gene.ml[119,3029+2]..[119,3029+9])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (test/dynamic/speed/src/gene.ml[119,3029+10]..[119,3029+23])
                                        Pexp_constant PConst_string("major: %f\n",(test/dynamic/speed/src/gene.ml[119,3029+11]..[119,3029+22]),None)
                                    <arg>
                                    Nolabel
                                      expression (test/dynamic/speed/src/gene.ml[119,3029+24]..[119,3029+39])
                                        Pexp_apply
                                        expression (test/dynamic/speed/src/gene.ml[119,3029+31]..[119,3029+33])
                                          Pexp_ident "/." (test/dynamic/speed/src/gene.ml[119,3029+31]..[119,3029+33])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (test/dynamic/speed/src/gene.ml[119,3029+25]..[119,3029+30])
                                              Pexp_ident "major" (test/dynamic/speed/src/gene.ml[119,3029+25]..[119,3029+30])
                                          <arg>
                                          Nolabel
                                            expression (test/dynamic/speed/src/gene.ml[119,3029+34]..[119,3029+38])
                                              Pexp_ident "runs" (test/dynamic/speed/src/gene.ml[119,3029+34]..[119,3029+38])
                                        ]
                                  ]
                                expression (test/dynamic/speed/src/gene.ml[120,3070+2]..[121,3117+4])
                                  Pexp_sequence
                                  expression (test/dynamic/speed/src/gene.ml[120,3070+2]..[120,3070+45])
                                    Pexp_apply
                                    expression (test/dynamic/speed/src/gene.ml[120,3070+2]..[120,3070+9])
                                      Pexp_ident "eprintf" (test/dynamic/speed/src/gene.ml[120,3070+2]..[120,3070+9])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (test/dynamic/speed/src/gene.ml[120,3070+10]..[120,3070+26])
                                          Pexp_constant PConst_string("promoted: %f\n",(test/dynamic/speed/src/gene.ml[120,3070+11]..[120,3070+25]),None)
                                      <arg>
                                      Nolabel
                                        expression (test/dynamic/speed/src/gene.ml[120,3070+27]..[120,3070+45])
                                          Pexp_apply
                                          expression (test/dynamic/speed/src/gene.ml[120,3070+37]..[120,3070+39])
                                            Pexp_ident "/." (test/dynamic/speed/src/gene.ml[120,3070+37]..[120,3070+39])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (test/dynamic/speed/src/gene.ml[120,3070+28]..[120,3070+36])
                                                Pexp_ident "promoted" (test/dynamic/speed/src/gene.ml[120,3070+28]..[120,3070+36])
                                            <arg>
                                            Nolabel
                                              expression (test/dynamic/speed/src/gene.ml[120,3070+40]..[120,3070+44])
                                                Pexp_ident "runs" (test/dynamic/speed/src/gene.ml[120,3070+40]..[120,3070+44])
                                          ]
                                    ]
                                  expression (test/dynamic/speed/src/gene.ml[121,3117+2]..[121,3117+4])
                                    Pexp_construct "()" (test/dynamic/speed/src/gene.ml[121,3117+2]..[121,3117+4])
                                    None
    ]
]

open Printf
open Parser
open Generator
let print_token =
  function
  | INT i -> printf "%d" i
  | PLUS -> printf " + "
  | MINUS -> printf " - "
  | TIMES -> printf " * "
  | DIV -> printf " / "
  | LPAREN -> printf "("
  | RPAREN -> printf ")"
  | EOL -> printf "\n"
let dry_run = ref false
let seed = ref 61112962
let runs = ref 10
let size = ref 10000000
let options =
  Arg.align
    [("--dry-run", (Arg.Set dry_run),
       "Run only the generator, not the parser");
    ("--seed", (Arg.Set_int seed),
      (sprintf "<seed> Set the random seed (%d)" (!seed)));
    ("--runs", (Arg.Set_int runs),
      (sprintf "<runs> Set the number of runs (%d)" (!runs)));
    ("--size", (Arg.Set_int size),
      (sprintf "<size> Set the size of the test (%d)" (!size)))]
let usage = sprintf "Usage: %s <options>" (Sys.argv.(0))
let () = Arg.parse options (fun _ -> ()) usage
open Lexing
let tokens : token array = Random.init (!seed); produce (!size)
let () = Gc.full_major ()
let () = if !dry_run then exit 0
let lexer lexbuf =
  let pos = lexbuf.lex_curr_pos in
  assert (pos < (Array.length tokens));
  (let token = Array.unsafe_get tokens pos in
   lexbuf.lex_curr_pos <- (pos + 1); token)
let new_lexbuf () =
  let lexbuf = from_string "" in
  lexbuf.lex_start_p <- dummy_pos;
  lexbuf.lex_curr_p <- dummy_pos;
  lexbuf.lex_curr_pos <- 0;
  lexbuf
let () =
  let gc1 = Gc.quick_stat () in
  let times1 = Unix.times () in
  for _run = 1 to !runs do
    printf "%d\n%!" (Parser.main lexer (new_lexbuf ()))
  done;
  (let times2 = Unix.times () in
   let elapsed = times2.tms_utime -. times1.tms_utime in
   let gc2 = Gc.quick_stat () in
   let minor = gc2.minor_words -. gc1.minor_words
   and major = gc2.major_words -. gc1.major_words
   and promoted = gc2.promoted_words -. gc1.promoted_words in
   let runs = float_of_int (!runs) in
   eprintf "tokens: %d\n" (Array.length tokens);
   eprintf "time: %f\n" (elapsed /. runs);
   eprintf "minor: %f\n" (minor /. runs);
   eprintf "major: %f\n" (major /. runs);
   eprintf "promoted: %f\n" (promoted /. runs);
   ())
[
  structure_item (test/dynamic/speed/src/gene.ml[1,37+0]..test/dynamic/speed/src/gene.ml[1,37+11])
    Tstr_open Fresh
    module_expr (test/dynamic/speed/src/gene.ml[1,37+5]..test/dynamic/speed/src/gene.ml[1,37+11])
      Tmod_ident "Stdlib!.Printf"
  structure_item (test/dynamic/speed/src/gene.ml[2,49+0]..test/dynamic/speed/src/gene.ml[2,49+11])
    Tstr_open Fresh
    module_expr (test/dynamic/speed/src/gene.ml[2,49+5]..test/dynamic/speed/src/gene.ml[2,49+11])
      Tmod_ident "Dune__exe!.Parser"
  structure_item (test/dynamic/speed/src/gene.ml[3,61+0]..test/dynamic/speed/src/gene.ml[3,61+14])
    Tstr_open Fresh
    module_expr (test/dynamic/speed/src/gene.ml[3,61+5]..test/dynamic/speed/src/gene.ml[3,61+14])
      Tmod_ident "Dune__exe!.Generator"
  structure_item (test/dynamic/speed/src/gene.ml[9,200+0]..test/dynamic/speed/src/gene.ml[25,458+17])
    Tstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[9,200+4]..test/dynamic/speed/src/gene.ml[9,200+15])
          Tpat_var "print_token/292"
        expression (test/dynamic/speed/src/gene.ml[9,200+18]..test/dynamic/speed/src/gene.ml[25,458+17])
          Texp_function
          Nolabel
          [
            <case>
              pattern (test/dynamic/speed/src/gene.ml[10,227+4]..test/dynamic/speed/src/gene.ml[10,227+9])
                Tpat_construct "INT"
                [
                  pattern (test/dynamic/speed/src/gene.ml[10,227+8]..test/dynamic/speed/src/gene.ml[10,227+9])
                    Tpat_var "i/294"
                ]
                None
              expression (test/dynamic/speed/src/gene.ml[11,240+6]..test/dynamic/speed/src/gene.ml[11,240+19])
                Texp_apply
                expression (test/dynamic/speed/src/gene.ml[11,240+6]..test/dynamic/speed/src/gene.ml[11,240+12])
                  Texp_ident "Stdlib!.Printf.printf"
                [
                  <arg>
                    Nolabel
                    expression (test/dynamic/speed/src/gene.ml[11,240+13]..test/dynamic/speed/src/gene.ml[11,240+17])
                      Texp_construct "CamlinternalFormatBasics.Format"
                      [
                        expression (test/dynamic/speed/src/gene.ml[11,240+13]..test/dynamic/speed/src/gene.ml[11,240+17]) ghost
                          Texp_construct "CamlinternalFormatBasics.Int"
                          [
                            expression (test/dynamic/speed/src/gene.ml[11,240+13]..test/dynamic/speed/src/gene.ml[11,240+17]) ghost
                              Texp_construct "CamlinternalFormatBasics.Int_d"
                              []
                            expression (test/dynamic/speed/src/gene.ml[11,240+13]..test/dynamic/speed/src/gene.ml[11,240+17]) ghost
                              Texp_construct "CamlinternalFormatBasics.No_padding"
                              []
                            expression (test/dynamic/speed/src/gene.ml[11,240+13]..test/dynamic/speed/src/gene.ml[11,240+17]) ghost
                              Texp_construct "CamlinternalFormatBasics.No_precision"
                              []
                            expression (test/dynamic/speed/src/gene.ml[11,240+13]..test/dynamic/speed/src/gene.ml[11,240+17]) ghost
                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                              []
                          ]
                        expression (test/dynamic/speed/src/gene.ml[11,240+13]..test/dynamic/speed/src/gene.ml[11,240+17]) ghost
                          Texp_constant Const_string("%d",(test/dynamic/speed/src/gene.ml[11,240+13]..test/dynamic/speed/src/gene.ml[11,240+17]) ghost,None)
                      ]
                  <arg>
                    Nolabel
                    expression (test/dynamic/speed/src/gene.ml[11,240+18]..test/dynamic/speed/src/gene.ml[11,240+19])
                      Texp_ident "i/294"
                ]
            <case>
              pattern (test/dynamic/speed/src/gene.ml[12,260+4]..test/dynamic/speed/src/gene.ml[12,260+8])
                Tpat_construct "PLUS"
                []
                None
              expression (test/dynamic/speed/src/gene.ml[13,272+6]..test/dynamic/speed/src/gene.ml[13,272+18])
                Texp_apply
                expression (test/dynamic/speed/src/gene.ml[13,272+6]..test/dynamic/speed/src/gene.ml[13,272+12])
                  Texp_ident "Stdlib!.Printf.printf"
                [
                  <arg>
                    Nolabel
                    expression (test/dynamic/speed/src/gene.ml[13,272+13]..test/dynamic/speed/src/gene.ml[13,272+18])
                      Texp_construct "CamlinternalFormatBasics.Format"
                      [
                        expression (test/dynamic/speed/src/gene.ml[13,272+13]..test/dynamic/speed/src/gene.ml[13,272+18]) ghost
                          Texp_construct "CamlinternalFormatBasics.String_literal"
                          [
                            expression (test/dynamic/speed/src/gene.ml[13,272+13]..test/dynamic/speed/src/gene.ml[13,272+18]) ghost
                              Texp_constant Const_string(" + ",(test/dynamic/speed/src/gene.ml[13,272+13]..test/dynamic/speed/src/gene.ml[13,272+18]) ghost,None)
                            expression (test/dynamic/speed/src/gene.ml[13,272+13]..test/dynamic/speed/src/gene.ml[13,272+18]) ghost
                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                              []
                          ]
                        expression (test/dynamic/speed/src/gene.ml[13,272+13]..test/dynamic/speed/src/gene.ml[13,272+18]) ghost
                          Texp_constant Const_string(" + ",(test/dynamic/speed/src/gene.ml[13,272+13]..test/dynamic/speed/src/gene.ml[13,272+18]) ghost,None)
                      ]
                ]
            <case>
              pattern (test/dynamic/speed/src/gene.ml[14,291+4]..test/dynamic/speed/src/gene.ml[14,291+9])
                Tpat_construct "MINUS"
                []
                None
              expression (test/dynamic/speed/src/gene.ml[15,304+6]..test/dynamic/speed/src/gene.ml[15,304+18])
                Texp_apply
                expression (test/dynamic/speed/src/gene.ml[15,304+6]..test/dynamic/speed/src/gene.ml[15,304+12])
                  Texp_ident "Stdlib!.Printf.printf"
                [
                  <arg>
                    Nolabel
                    expression (test/dynamic/speed/src/gene.ml[15,304+13]..test/dynamic/speed/src/gene.ml[15,304+18])
                      Texp_construct "CamlinternalFormatBasics.Format"
                      [
                        expression (test/dynamic/speed/src/gene.ml[15,304+13]..test/dynamic/speed/src/gene.ml[15,304+18]) ghost
                          Texp_construct "CamlinternalFormatBasics.String_literal"
                          [
                            expression (test/dynamic/speed/src/gene.ml[15,304+13]..test/dynamic/speed/src/gene.ml[15,304+18]) ghost
                              Texp_constant Const_string(" - ",(test/dynamic/speed/src/gene.ml[15,304+13]..test/dynamic/speed/src/gene.ml[15,304+18]) ghost,None)
                            expression (test/dynamic/speed/src/gene.ml[15,304+13]..test/dynamic/speed/src/gene.ml[15,304+18]) ghost
                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                              []
                          ]
                        expression (test/dynamic/speed/src/gene.ml[15,304+13]..test/dynamic/speed/src/gene.ml[15,304+18]) ghost
                          Texp_constant Const_string(" - ",(test/dynamic/speed/src/gene.ml[15,304+13]..test/dynamic/speed/src/gene.ml[15,304+18]) ghost,None)
                      ]
                ]
            <case>
              pattern (test/dynamic/speed/src/gene.ml[16,323+4]..test/dynamic/speed/src/gene.ml[16,323+9])
                Tpat_construct "TIMES"
                []
                None
              expression (test/dynamic/speed/src/gene.ml[17,336+6]..test/dynamic/speed/src/gene.ml[17,336+18])
                Texp_apply
                expression (test/dynamic/speed/src/gene.ml[17,336+6]..test/dynamic/speed/src/gene.ml[17,336+12])
                  Texp_ident "Stdlib!.Printf.printf"
                [
                  <arg>
                    Nolabel
                    expression (test/dynamic/speed/src/gene.ml[17,336+13]..test/dynamic/speed/src/gene.ml[17,336+18])
                      Texp_construct "CamlinternalFormatBasics.Format"
                      [
                        expression (test/dynamic/speed/src/gene.ml[17,336+13]..test/dynamic/speed/src/gene.ml[17,336+18]) ghost
                          Texp_construct "CamlinternalFormatBasics.String_literal"
                          [
                            expression (test/dynamic/speed/src/gene.ml[17,336+13]..test/dynamic/speed/src/gene.ml[17,336+18]) ghost
                              Texp_constant Const_string(" * ",(test/dynamic/speed/src/gene.ml[17,336+13]..test/dynamic/speed/src/gene.ml[17,336+18]) ghost,None)
                            expression (test/dynamic/speed/src/gene.ml[17,336+13]..test/dynamic/speed/src/gene.ml[17,336+18]) ghost
                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                              []
                          ]
                        expression (test/dynamic/speed/src/gene.ml[17,336+13]..test/dynamic/speed/src/gene.ml[17,336+18]) ghost
                          Texp_constant Const_string(" * ",(test/dynamic/speed/src/gene.ml[17,336+13]..test/dynamic/speed/src/gene.ml[17,336+18]) ghost,None)
                      ]
                ]
            <case>
              pattern (test/dynamic/speed/src/gene.ml[18,355+4]..test/dynamic/speed/src/gene.ml[18,355+7])
                Tpat_construct "DIV"
                []
                None
              expression (test/dynamic/speed/src/gene.ml[19,366+6]..test/dynamic/speed/src/gene.ml[19,366+18])
                Texp_apply
                expression (test/dynamic/speed/src/gene.ml[19,366+6]..test/dynamic/speed/src/gene.ml[19,366+12])
                  Texp_ident "Stdlib!.Printf.printf"
                [
                  <arg>
                    Nolabel
                    expression (test/dynamic/speed/src/gene.ml[19,366+13]..test/dynamic/speed/src/gene.ml[19,366+18])
                      Texp_construct "CamlinternalFormatBasics.Format"
                      [
                        expression (test/dynamic/speed/src/gene.ml[19,366+13]..test/dynamic/speed/src/gene.ml[19,366+18]) ghost
                          Texp_construct "CamlinternalFormatBasics.String_literal"
                          [
                            expression (test/dynamic/speed/src/gene.ml[19,366+13]..test/dynamic/speed/src/gene.ml[19,366+18]) ghost
                              Texp_constant Const_string(" / ",(test/dynamic/speed/src/gene.ml[19,366+13]..test/dynamic/speed/src/gene.ml[19,366+18]) ghost,None)
                            expression (test/dynamic/speed/src/gene.ml[19,366+13]..test/dynamic/speed/src/gene.ml[19,366+18]) ghost
                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                              []
                          ]
                        expression (test/dynamic/speed/src/gene.ml[19,366+13]..test/dynamic/speed/src/gene.ml[19,366+18]) ghost
                          Texp_constant Const_string(" / ",(test/dynamic/speed/src/gene.ml[19,366+13]..test/dynamic/speed/src/gene.ml[19,366+18]) ghost,None)
                      ]
                ]
            <case>
              pattern (test/dynamic/speed/src/gene.ml[20,385+4]..test/dynamic/speed/src/gene.ml[20,385+10])
                Tpat_construct "LPAREN"
                []
                None
              expression (test/dynamic/speed/src/gene.ml[21,399+6]..test/dynamic/speed/src/gene.ml[21,399+16])
                Texp_apply
                expression (test/dynamic/speed/src/gene.ml[21,399+6]..test/dynamic/speed/src/gene.ml[21,399+12])
                  Texp_ident "Stdlib!.Printf.printf"
                [
                  <arg>
                    Nolabel
                    expression (test/dynamic/speed/src/gene.ml[21,399+13]..test/dynamic/speed/src/gene.ml[21,399+16])
                      Texp_construct "CamlinternalFormatBasics.Format"
                      [
                        expression (test/dynamic/speed/src/gene.ml[21,399+13]..test/dynamic/speed/src/gene.ml[21,399+16]) ghost
                          Texp_construct "CamlinternalFormatBasics.Char_literal"
                          [
                            expression (test/dynamic/speed/src/gene.ml[21,399+13]..test/dynamic/speed/src/gene.ml[21,399+16]) ghost
                              Texp_constant Const_char 28
                            expression (test/dynamic/speed/src/gene.ml[21,399+13]..test/dynamic/speed/src/gene.ml[21,399+16]) ghost
                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                              []
                          ]
                        expression (test/dynamic/speed/src/gene.ml[21,399+13]..test/dynamic/speed/src/gene.ml[21,399+16]) ghost
                          Texp_constant Const_string("(",(test/dynamic/speed/src/gene.ml[21,399+13]..test/dynamic/speed/src/gene.ml[21,399+16]) ghost,None)
                      ]
                ]
            <case>
              pattern (test/dynamic/speed/src/gene.ml[22,416+4]..test/dynamic/speed/src/gene.ml[22,416+10])
                Tpat_construct "RPAREN"
                []
                None
              expression (test/dynamic/speed/src/gene.ml[23,430+6]..test/dynamic/speed/src/gene.ml[23,430+16])
                Texp_apply
                expression (test/dynamic/speed/src/gene.ml[23,430+6]..test/dynamic/speed/src/gene.ml[23,430+12])
                  Texp_ident "Stdlib!.Printf.printf"
                [
                  <arg>
                    Nolabel
                    expression (test/dynamic/speed/src/gene.ml[23,430+13]..test/dynamic/speed/src/gene.ml[23,430+16])
                      Texp_construct "CamlinternalFormatBasics.Format"
                      [
                        expression (test/dynamic/speed/src/gene.ml[23,430+13]..test/dynamic/speed/src/gene.ml[23,430+16]) ghost
                          Texp_construct "CamlinternalFormatBasics.Char_literal"
                          [
                            expression (test/dynamic/speed/src/gene.ml[23,430+13]..test/dynamic/speed/src/gene.ml[23,430+16]) ghost
                              Texp_constant Const_char 29
                            expression (test/dynamic/speed/src/gene.ml[23,430+13]..test/dynamic/speed/src/gene.ml[23,430+16]) ghost
                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                              []
                          ]
                        expression (test/dynamic/speed/src/gene.ml[23,430+13]..test/dynamic/speed/src/gene.ml[23,430+16]) ghost
                          Texp_constant Const_string(")",(test/dynamic/speed/src/gene.ml[23,430+13]..test/dynamic/speed/src/gene.ml[23,430+16]) ghost,None)
                      ]
                ]
            <case>
              pattern (test/dynamic/speed/src/gene.ml[24,447+4]..test/dynamic/speed/src/gene.ml[24,447+7])
                Tpat_construct "EOL"
                []
                None
              expression (test/dynamic/speed/src/gene.ml[25,458+6]..test/dynamic/speed/src/gene.ml[25,458+17])
                Texp_apply
                expression (test/dynamic/speed/src/gene.ml[25,458+6]..test/dynamic/speed/src/gene.ml[25,458+12])
                  Texp_ident "Stdlib!.Printf.printf"
                [
                  <arg>
                    Nolabel
                    expression (test/dynamic/speed/src/gene.ml[25,458+13]..test/dynamic/speed/src/gene.ml[25,458+17])
                      Texp_construct "CamlinternalFormatBasics.Format"
                      [
                        expression (test/dynamic/speed/src/gene.ml[25,458+13]..test/dynamic/speed/src/gene.ml[25,458+17]) ghost
                          Texp_construct "CamlinternalFormatBasics.Char_literal"
                          [
                            expression (test/dynamic/speed/src/gene.ml[25,458+13]..test/dynamic/speed/src/gene.ml[25,458+17]) ghost
                              Texp_constant Const_char 0a
                            expression (test/dynamic/speed/src/gene.ml[25,458+13]..test/dynamic/speed/src/gene.ml[25,458+17]) ghost
                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                              []
                          ]
                        expression (test/dynamic/speed/src/gene.ml[25,458+13]..test/dynamic/speed/src/gene.ml[25,458+17]) ghost
                          Texp_constant Const_string("\n",(test/dynamic/speed/src/gene.ml[25,458+13]..test/dynamic/speed/src/gene.ml[25,458+17]) ghost,None)
                      ]
                ]
          ]
    ]
  structure_item (test/dynamic/speed/src/gene.ml[34,704+0]..test/dynamic/speed/src/gene.ml[35,718+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[34,704+4]..test/dynamic/speed/src/gene.ml[34,704+11])
          Tpat_var "dry_run/324"
        expression (test/dynamic/speed/src/gene.ml[35,718+2]..test/dynamic/speed/src/gene.ml[35,718+11])
          Texp_apply
          expression (test/dynamic/speed/src/gene.ml[35,718+2]..test/dynamic/speed/src/gene.ml[35,718+5])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (test/dynamic/speed/src/gene.ml[35,718+6]..test/dynamic/speed/src/gene.ml[35,718+11])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (test/dynamic/speed/src/gene.ml[39,802+0]..test/dynamic/speed/src/gene.ml[40,813+14])
    Tstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[39,802+4]..test/dynamic/speed/src/gene.ml[39,802+8])
          Tpat_var "seed/325"
        expression (test/dynamic/speed/src/gene.ml[40,813+2]..test/dynamic/speed/src/gene.ml[40,813+14])
          Texp_apply
          expression (test/dynamic/speed/src/gene.ml[40,813+2]..test/dynamic/speed/src/gene.ml[40,813+5])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (test/dynamic/speed/src/gene.ml[40,813+6]..test/dynamic/speed/src/gene.ml[40,813+14])
                Texp_constant Const_int 61112962
          ]
    ]
  structure_item (test/dynamic/speed/src/gene.ml[44,911+0]..test/dynamic/speed/src/gene.ml[45,922+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[44,911+4]..test/dynamic/speed/src/gene.ml[44,911+8])
          Tpat_var "runs/326"
        expression (test/dynamic/speed/src/gene.ml[45,922+2]..test/dynamic/speed/src/gene.ml[45,922+8])
          Texp_apply
          expression (test/dynamic/speed/src/gene.ml[45,922+2]..test/dynamic/speed/src/gene.ml[45,922+5])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (test/dynamic/speed/src/gene.ml[45,922+6]..test/dynamic/speed/src/gene.ml[45,922+8])
                Texp_constant Const_int 10
          ]
    ]
  structure_item (test/dynamic/speed/src/gene.ml[50,1036+0]..test/dynamic/speed/src/gene.ml[51,1047+14])
    Tstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[50,1036+4]..test/dynamic/speed/src/gene.ml[50,1036+8])
          Tpat_var "size/327"
        expression (test/dynamic/speed/src/gene.ml[51,1047+2]..test/dynamic/speed/src/gene.ml[51,1047+14])
          Texp_apply
          expression (test/dynamic/speed/src/gene.ml[51,1047+2]..test/dynamic/speed/src/gene.ml[51,1047+5])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (test/dynamic/speed/src/gene.ml[51,1047+6]..test/dynamic/speed/src/gene.ml[51,1047+14])
                Texp_constant Const_int 10000000
          ]
    ]
  structure_item (test/dynamic/speed/src/gene.ml[53,1063+0]..test/dynamic/speed/src/gene.ml[58,1408+1])
    Tstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[53,1063+4]..test/dynamic/speed/src/gene.ml[53,1063+11])
          Tpat_var "options/328"
        expression (test/dynamic/speed/src/gene.ml[53,1063+14]..test/dynamic/speed/src/gene.ml[58,1408+1])
          Texp_apply
          expression (test/dynamic/speed/src/gene.ml[53,1063+14]..test/dynamic/speed/src/gene.ml[53,1063+23])
            Texp_ident "Stdlib!.Arg.align"
          [
            <arg>
              Optional "limit"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Nolabel
              expression (test/dynamic/speed/src/gene.ml[53,1063+24]..test/dynamic/speed/src/gene.ml[58,1408+1])
                Texp_construct "::"
                [
                  expression (test/dynamic/speed/src/gene.ml[54,1089+2]..test/dynamic/speed/src/gene.ml[54,1089+72])
                    Texp_tuple
                    [
                      expression (test/dynamic/speed/src/gene.ml[54,1089+2]..test/dynamic/speed/src/gene.ml[54,1089+13])
                        Texp_constant Const_string("--dry-run",(test/dynamic/speed/src/gene.ml[54,1089+3]..test/dynamic/speed/src/gene.ml[54,1089+12]),None)
                      expression (test/dynamic/speed/src/gene.ml[54,1089+15]..test/dynamic/speed/src/gene.ml[54,1089+30])
                        Texp_construct "Arg.Set"
                        [
                          expression (test/dynamic/speed/src/gene.ml[54,1089+23]..test/dynamic/speed/src/gene.ml[54,1089+30])
                            Texp_ident "dry_run/324"
                        ]
                      expression (test/dynamic/speed/src/gene.ml[54,1089+32]..test/dynamic/speed/src/gene.ml[54,1089+72])
                        Texp_constant Const_string("Run only the generator, not the parser",(test/dynamic/speed/src/gene.ml[54,1089+33]..test/dynamic/speed/src/gene.ml[54,1089+71]),None)
                    ]
                  expression (test/dynamic/speed/src/gene.ml[55,1163+2]..test/dynamic/speed/src/gene.ml[58,1408+1]) ghost
                    Texp_construct "::"
                    [
                      expression (test/dynamic/speed/src/gene.ml[55,1163+2]..test/dynamic/speed/src/gene.ml[55,1163+77])
                        Texp_tuple
                        [
                          expression (test/dynamic/speed/src/gene.ml[55,1163+2]..test/dynamic/speed/src/gene.ml[55,1163+10])
                            Texp_constant Const_string("--seed",(test/dynamic/speed/src/gene.ml[55,1163+3]..test/dynamic/speed/src/gene.ml[55,1163+9]),None)
                          expression (test/dynamic/speed/src/gene.ml[55,1163+12]..test/dynamic/speed/src/gene.ml[55,1163+28])
                            Texp_construct "Arg.Set_int"
                            [
                              expression (test/dynamic/speed/src/gene.ml[55,1163+24]..test/dynamic/speed/src/gene.ml[55,1163+28])
                                Texp_ident "seed/325"
                            ]
                          expression (test/dynamic/speed/src/gene.ml[55,1163+30]..test/dynamic/speed/src/gene.ml[55,1163+77])
                            Texp_apply
                            expression (test/dynamic/speed/src/gene.ml[55,1163+30]..test/dynamic/speed/src/gene.ml[55,1163+37])
                              Texp_ident "Stdlib!.Printf.sprintf"
                            [
                              <arg>
                                Nolabel
                                expression (test/dynamic/speed/src/gene.ml[55,1163+38]..test/dynamic/speed/src/gene.ml[55,1163+71])
                                  Texp_construct "CamlinternalFormatBasics.Format"
                                  [
                                    expression (test/dynamic/speed/src/gene.ml[55,1163+38]..test/dynamic/speed/src/gene.ml[55,1163+71]) ghost
                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                      [
                                        expression (test/dynamic/speed/src/gene.ml[55,1163+38]..test/dynamic/speed/src/gene.ml[55,1163+71]) ghost
                                          Texp_constant Const_string("<seed> Set the random seed (",(test/dynamic/speed/src/gene.ml[55,1163+38]..test/dynamic/speed/src/gene.ml[55,1163+71]) ghost,None)
                                        expression (test/dynamic/speed/src/gene.ml[55,1163+38]..test/dynamic/speed/src/gene.ml[55,1163+71]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Int"
                                          [
                                            expression (test/dynamic/speed/src/gene.ml[55,1163+38]..test/dynamic/speed/src/gene.ml[55,1163+71]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Int_d"
                                              []
                                            expression (test/dynamic/speed/src/gene.ml[55,1163+38]..test/dynamic/speed/src/gene.ml[55,1163+71]) ghost
                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                              []
                                            expression (test/dynamic/speed/src/gene.ml[55,1163+38]..test/dynamic/speed/src/gene.ml[55,1163+71]) ghost
                                              Texp_construct "CamlinternalFormatBasics.No_precision"
                                              []
                                            expression (test/dynamic/speed/src/gene.ml[55,1163+38]..test/dynamic/speed/src/gene.ml[55,1163+71]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Char_literal"
                                              [
                                                expression (test/dynamic/speed/src/gene.ml[55,1163+38]..test/dynamic/speed/src/gene.ml[55,1163+71]) ghost
                                                  Texp_constant Const_char 29
                                                expression (test/dynamic/speed/src/gene.ml[55,1163+38]..test/dynamic/speed/src/gene.ml[55,1163+71]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                  []
                                              ]
                                          ]
                                      ]
                                    expression (test/dynamic/speed/src/gene.ml[55,1163+38]..test/dynamic/speed/src/gene.ml[55,1163+71]) ghost
                                      Texp_constant Const_string("<seed> Set the random seed (%d)",(test/dynamic/speed/src/gene.ml[55,1163+38]..test/dynamic/speed/src/gene.ml[55,1163+71]) ghost,None)
                                  ]
                              <arg>
                                Nolabel
                                expression (test/dynamic/speed/src/gene.ml[55,1163+72]..test/dynamic/speed/src/gene.ml[55,1163+77])
                                  Texp_apply
                                  expression (test/dynamic/speed/src/gene.ml[55,1163+72]..test/dynamic/speed/src/gene.ml[55,1163+73])
                                    Texp_ident "Stdlib!.!"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/speed/src/gene.ml[55,1163+73]..test/dynamic/speed/src/gene.ml[55,1163+77])
                                        Texp_ident "seed/325"
                                  ]
                            ]
                        ]
                      expression (test/dynamic/speed/src/gene.ml[56,1242+2]..test/dynamic/speed/src/gene.ml[58,1408+1]) ghost
                        Texp_construct "::"
                        [
                          expression (test/dynamic/speed/src/gene.ml[56,1242+2]..test/dynamic/speed/src/gene.ml[56,1242+80])
                            Texp_tuple
                            [
                              expression (test/dynamic/speed/src/gene.ml[56,1242+2]..test/dynamic/speed/src/gene.ml[56,1242+10])
                                Texp_constant Const_string("--runs",(test/dynamic/speed/src/gene.ml[56,1242+3]..test/dynamic/speed/src/gene.ml[56,1242+9]),None)
                              expression (test/dynamic/speed/src/gene.ml[56,1242+12]..test/dynamic/speed/src/gene.ml[56,1242+28])
                                Texp_construct "Arg.Set_int"
                                [
                                  expression (test/dynamic/speed/src/gene.ml[56,1242+24]..test/dynamic/speed/src/gene.ml[56,1242+28])
                                    Texp_ident "runs/326"
                                ]
                              expression (test/dynamic/speed/src/gene.ml[56,1242+30]..test/dynamic/speed/src/gene.ml[56,1242+80])
                                Texp_apply
                                expression (test/dynamic/speed/src/gene.ml[56,1242+30]..test/dynamic/speed/src/gene.ml[56,1242+37])
                                  Texp_ident "Stdlib!.Printf.sprintf"
                                [
                                  <arg>
                                    Nolabel
                                    expression (test/dynamic/speed/src/gene.ml[56,1242+38]..test/dynamic/speed/src/gene.ml[56,1242+74])
                                      Texp_construct "CamlinternalFormatBasics.Format"
                                      [
                                        expression (test/dynamic/speed/src/gene.ml[56,1242+38]..test/dynamic/speed/src/gene.ml[56,1242+74]) ghost
                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                          [
                                            expression (test/dynamic/speed/src/gene.ml[56,1242+38]..test/dynamic/speed/src/gene.ml[56,1242+74]) ghost
                                              Texp_constant Const_string("<runs> Set the number of runs (",(test/dynamic/speed/src/gene.ml[56,1242+38]..test/dynamic/speed/src/gene.ml[56,1242+74]) ghost,None)
                                            expression (test/dynamic/speed/src/gene.ml[56,1242+38]..test/dynamic/speed/src/gene.ml[56,1242+74]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Int"
                                              [
                                                expression (test/dynamic/speed/src/gene.ml[56,1242+38]..test/dynamic/speed/src/gene.ml[56,1242+74]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Int_d"
                                                  []
                                                expression (test/dynamic/speed/src/gene.ml[56,1242+38]..test/dynamic/speed/src/gene.ml[56,1242+74]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                  []
                                                expression (test/dynamic/speed/src/gene.ml[56,1242+38]..test/dynamic/speed/src/gene.ml[56,1242+74]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_precision"
                                                  []
                                                expression (test/dynamic/speed/src/gene.ml[56,1242+38]..test/dynamic/speed/src/gene.ml[56,1242+74]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                  [
                                                    expression (test/dynamic/speed/src/gene.ml[56,1242+38]..test/dynamic/speed/src/gene.ml[56,1242+74]) ghost
                                                      Texp_constant Const_char 29
                                                    expression (test/dynamic/speed/src/gene.ml[56,1242+38]..test/dynamic/speed/src/gene.ml[56,1242+74]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                      []
                                                  ]
                                              ]
                                          ]
                                        expression (test/dynamic/speed/src/gene.ml[56,1242+38]..test/dynamic/speed/src/gene.ml[56,1242+74]) ghost
                                          Texp_constant Const_string("<runs> Set the number of runs (%d)",(test/dynamic/speed/src/gene.ml[56,1242+38]..test/dynamic/speed/src/gene.ml[56,1242+74]) ghost,None)
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (test/dynamic/speed/src/gene.ml[56,1242+75]..test/dynamic/speed/src/gene.ml[56,1242+80])
                                      Texp_apply
                                      expression (test/dynamic/speed/src/gene.ml[56,1242+75]..test/dynamic/speed/src/gene.ml[56,1242+76])
                                        Texp_ident "Stdlib!.!"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (test/dynamic/speed/src/gene.ml[56,1242+76]..test/dynamic/speed/src/gene.ml[56,1242+80])
                                            Texp_ident "runs/326"
                                      ]
                                ]
                            ]
                          expression (test/dynamic/speed/src/gene.ml[57,1324+2]..test/dynamic/speed/src/gene.ml[58,1408+1]) ghost
                            Texp_construct "::"
                            [
                              expression (test/dynamic/speed/src/gene.ml[57,1324+2]..test/dynamic/speed/src/gene.ml[57,1324+82])
                                Texp_tuple
                                [
                                  expression (test/dynamic/speed/src/gene.ml[57,1324+2]..test/dynamic/speed/src/gene.ml[57,1324+10])
                                    Texp_constant Const_string("--size",(test/dynamic/speed/src/gene.ml[57,1324+3]..test/dynamic/speed/src/gene.ml[57,1324+9]),None)
                                  expression (test/dynamic/speed/src/gene.ml[57,1324+12]..test/dynamic/speed/src/gene.ml[57,1324+28])
                                    Texp_construct "Arg.Set_int"
                                    [
                                      expression (test/dynamic/speed/src/gene.ml[57,1324+24]..test/dynamic/speed/src/gene.ml[57,1324+28])
                                        Texp_ident "size/327"
                                    ]
                                  expression (test/dynamic/speed/src/gene.ml[57,1324+30]..test/dynamic/speed/src/gene.ml[57,1324+82])
                                    Texp_apply
                                    expression (test/dynamic/speed/src/gene.ml[57,1324+30]..test/dynamic/speed/src/gene.ml[57,1324+37])
                                      Texp_ident "Stdlib!.Printf.sprintf"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (test/dynamic/speed/src/gene.ml[57,1324+38]..test/dynamic/speed/src/gene.ml[57,1324+76])
                                          Texp_construct "CamlinternalFormatBasics.Format"
                                          [
                                            expression (test/dynamic/speed/src/gene.ml[57,1324+38]..test/dynamic/speed/src/gene.ml[57,1324+76]) ghost
                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                              [
                                                expression (test/dynamic/speed/src/gene.ml[57,1324+38]..test/dynamic/speed/src/gene.ml[57,1324+76]) ghost
                                                  Texp_constant Const_string("<size> Set the size of the test (",(test/dynamic/speed/src/gene.ml[57,1324+38]..test/dynamic/speed/src/gene.ml[57,1324+76]) ghost,None)
                                                expression (test/dynamic/speed/src/gene.ml[57,1324+38]..test/dynamic/speed/src/gene.ml[57,1324+76]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Int"
                                                  [
                                                    expression (test/dynamic/speed/src/gene.ml[57,1324+38]..test/dynamic/speed/src/gene.ml[57,1324+76]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.Int_d"
                                                      []
                                                    expression (test/dynamic/speed/src/gene.ml[57,1324+38]..test/dynamic/speed/src/gene.ml[57,1324+76]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                      []
                                                    expression (test/dynamic/speed/src/gene.ml[57,1324+38]..test/dynamic/speed/src/gene.ml[57,1324+76]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.No_precision"
                                                      []
                                                    expression (test/dynamic/speed/src/gene.ml[57,1324+38]..test/dynamic/speed/src/gene.ml[57,1324+76]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                      [
                                                        expression (test/dynamic/speed/src/gene.ml[57,1324+38]..test/dynamic/speed/src/gene.ml[57,1324+76]) ghost
                                                          Texp_constant Const_char 29
                                                        expression (test/dynamic/speed/src/gene.ml[57,1324+38]..test/dynamic/speed/src/gene.ml[57,1324+76]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                          []
                                                      ]
                                                  ]
                                              ]
                                            expression (test/dynamic/speed/src/gene.ml[57,1324+38]..test/dynamic/speed/src/gene.ml[57,1324+76]) ghost
                                              Texp_constant Const_string("<size> Set the size of the test (%d)",(test/dynamic/speed/src/gene.ml[57,1324+38]..test/dynamic/speed/src/gene.ml[57,1324+76]) ghost,None)
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (test/dynamic/speed/src/gene.ml[57,1324+77]..test/dynamic/speed/src/gene.ml[57,1324+82])
                                          Texp_apply
                                          expression (test/dynamic/speed/src/gene.ml[57,1324+77]..test/dynamic/speed/src/gene.ml[57,1324+78])
                                            Texp_ident "Stdlib!.!"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (test/dynamic/speed/src/gene.ml[57,1324+78]..test/dynamic/speed/src/gene.ml[57,1324+82])
                                                Texp_ident "size/327"
                                          ]
                                    ]
                                ]
                              expression (test/dynamic/speed/src/gene.ml[58,1408+0]..test/dynamic/speed/src/gene.ml[58,1408+1]) ghost
                                Texp_construct "[]"
                                []
                            ]
                        ]
                    ]
                ]
          ]
    ]
  structure_item (test/dynamic/speed/src/gene.ml[60,1411+0]..test/dynamic/speed/src/gene.ml[61,1423+44])
    Tstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[60,1411+4]..test/dynamic/speed/src/gene.ml[60,1411+9])
          Tpat_var "usage/371"
        expression (test/dynamic/speed/src/gene.ml[61,1423+2]..test/dynamic/speed/src/gene.ml[61,1423+44])
          Texp_apply
          expression (test/dynamic/speed/src/gene.ml[61,1423+2]..test/dynamic/speed/src/gene.ml[61,1423+9])
            Texp_ident "Stdlib!.Printf.sprintf"
          [
            <arg>
              Nolabel
              expression (test/dynamic/speed/src/gene.ml[61,1423+10]..test/dynamic/speed/src/gene.ml[61,1423+31])
                Texp_construct "CamlinternalFormatBasics.Format"
                [
                  expression (test/dynamic/speed/src/gene.ml[61,1423+10]..test/dynamic/speed/src/gene.ml[61,1423+31]) ghost
                    Texp_construct "CamlinternalFormatBasics.String_literal"
                    [
                      expression (test/dynamic/speed/src/gene.ml[61,1423+10]..test/dynamic/speed/src/gene.ml[61,1423+31]) ghost
                        Texp_constant Const_string("Usage: ",(test/dynamic/speed/src/gene.ml[61,1423+10]..test/dynamic/speed/src/gene.ml[61,1423+31]) ghost,None)
                      expression (test/dynamic/speed/src/gene.ml[61,1423+10]..test/dynamic/speed/src/gene.ml[61,1423+31]) ghost
                        Texp_construct "CamlinternalFormatBasics.String"
                        [
                          expression (test/dynamic/speed/src/gene.ml[61,1423+10]..test/dynamic/speed/src/gene.ml[61,1423+31]) ghost
                            Texp_construct "CamlinternalFormatBasics.No_padding"
                            []
                          expression (test/dynamic/speed/src/gene.ml[61,1423+10]..test/dynamic/speed/src/gene.ml[61,1423+31]) ghost
                            Texp_construct "CamlinternalFormatBasics.String_literal"
                            [
                              expression (test/dynamic/speed/src/gene.ml[61,1423+10]..test/dynamic/speed/src/gene.ml[61,1423+31]) ghost
                                Texp_constant Const_string(" <options>",(test/dynamic/speed/src/gene.ml[61,1423+10]..test/dynamic/speed/src/gene.ml[61,1423+31]) ghost,None)
                              expression (test/dynamic/speed/src/gene.ml[61,1423+10]..test/dynamic/speed/src/gene.ml[61,1423+31]) ghost
                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                []
                            ]
                        ]
                    ]
                  expression (test/dynamic/speed/src/gene.ml[61,1423+10]..test/dynamic/speed/src/gene.ml[61,1423+31]) ghost
                    Texp_constant Const_string("Usage: %s <options>",(test/dynamic/speed/src/gene.ml[61,1423+10]..test/dynamic/speed/src/gene.ml[61,1423+31]) ghost,None)
                ]
            <arg>
              Nolabel
              expression (test/dynamic/speed/src/gene.ml[61,1423+32]..test/dynamic/speed/src/gene.ml[61,1423+44])
                Texp_apply
                expression (test/dynamic/speed/src/gene.ml[61,1423+32]..test/dynamic/speed/src/gene.ml[61,1423+44]) ghost
                  Texp_ident "Stdlib!.Array.get"
                [
                  <arg>
                    Nolabel
                    expression (test/dynamic/speed/src/gene.ml[61,1423+32]..test/dynamic/speed/src/gene.ml[61,1423+40])
                      Texp_ident "Stdlib!.Sys.argv"
                  <arg>
                    Nolabel
                    expression (test/dynamic/speed/src/gene.ml[61,1423+42]..test/dynamic/speed/src/gene.ml[61,1423+43])
                      Texp_constant Const_int 0
                ]
          ]
    ]
  structure_item (test/dynamic/speed/src/gene.ml[63,1469+0]..test/dynamic/speed/src/gene.ml[64,1478+39])
    Tstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[63,1469+4]..test/dynamic/speed/src/gene.ml[63,1469+6])
          Tpat_construct "()"
          []
          None
        expression (test/dynamic/speed/src/gene.ml[64,1478+2]..test/dynamic/speed/src/gene.ml[64,1478+39])
          Texp_apply
          expression (test/dynamic/speed/src/gene.ml[64,1478+2]..test/dynamic/speed/src/gene.ml[64,1478+11])
            Texp_ident "Stdlib!.Arg.parse"
          [
            <arg>
              Nolabel
              expression (test/dynamic/speed/src/gene.ml[64,1478+12]..test/dynamic/speed/src/gene.ml[64,1478+19])
                Texp_ident "options/328"
            <arg>
              Nolabel
              expression (test/dynamic/speed/src/gene.ml[64,1478+20]..test/dynamic/speed/src/gene.ml[64,1478+33])
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (test/dynamic/speed/src/gene.ml[64,1478+25]..test/dynamic/speed/src/gene.ml[64,1478+26])
                      Tpat_any
                    expression (test/dynamic/speed/src/gene.ml[64,1478+30]..test/dynamic/speed/src/gene.ml[64,1478+32])
                      Texp_construct "()"
                      []
                ]
            <arg>
              Nolabel
              expression (test/dynamic/speed/src/gene.ml[64,1478+34]..test/dynamic/speed/src/gene.ml[64,1478+39])
                Texp_ident "usage/371"
          ]
    ]
  structure_item (test/dynamic/speed/src/gene.ml[70,1615+0]..test/dynamic/speed/src/gene.ml[70,1615+11])
    Tstr_open Fresh
    module_expr (test/dynamic/speed/src/gene.ml[70,1615+5]..test/dynamic/speed/src/gene.ml[70,1615+11])
      Tmod_ident "Stdlib!.Lexing"
  structure_item (test/dynamic/speed/src/gene.ml[72,1628+0]..test/dynamic/speed/src/gene.ml[74,1676+15])
    Tstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[72,1628+4]..test/dynamic/speed/src/gene.ml[72,1628+10])
          extra
            Tpat_extra_constraint
            core_type (test/dynamic/speed/src/gene.ml[72,1628+13]..test/dynamic/speed/src/gene.ml[72,1628+24])
              Ttyp_constr "array/8!"
              [
                core_type (test/dynamic/speed/src/gene.ml[72,1628+13]..test/dynamic/speed/src/gene.ml[72,1628+18])
                  Ttyp_constr "Dune__exe!.Parser.token"
                  []
              ]
          Tpat_alias "tokens/519"
          pattern (test/dynamic/speed/src/gene.ml[72,1628+4]..test/dynamic/speed/src/gene.ml[72,1628+10])
            Tpat_any
        expression (test/dynamic/speed/src/gene.ml[73,1655+2]..test/dynamic/speed/src/gene.ml[74,1676+15])
          extra
            Texp_constraint
            core_type (test/dynamic/speed/src/gene.ml[72,1628+13]..test/dynamic/speed/src/gene.ml[72,1628+24])
              Ttyp_constr "array/8!"
              [
                core_type (test/dynamic/speed/src/gene.ml[72,1628+13]..test/dynamic/speed/src/gene.ml[72,1628+18])
                  Ttyp_constr "Dune__exe!.Parser.token"
                  []
              ]
          Texp_sequence
          expression (test/dynamic/speed/src/gene.ml[73,1655+2]..test/dynamic/speed/src/gene.ml[73,1655+19])
            Texp_apply
            expression (test/dynamic/speed/src/gene.ml[73,1655+2]..test/dynamic/speed/src/gene.ml[73,1655+13])
              Texp_ident "Stdlib!.Random.init"
            [
              <arg>
                Nolabel
                expression (test/dynamic/speed/src/gene.ml[73,1655+14]..test/dynamic/speed/src/gene.ml[73,1655+19])
                  Texp_apply
                  expression (test/dynamic/speed/src/gene.ml[73,1655+14]..test/dynamic/speed/src/gene.ml[73,1655+15])
                    Texp_ident "Stdlib!.!"
                  [
                    <arg>
                      Nolabel
                      expression (test/dynamic/speed/src/gene.ml[73,1655+15]..test/dynamic/speed/src/gene.ml[73,1655+19])
                        Texp_ident "seed/325"
                  ]
            ]
          expression (test/dynamic/speed/src/gene.ml[74,1676+2]..test/dynamic/speed/src/gene.ml[74,1676+15])
            Texp_apply
            expression (test/dynamic/speed/src/gene.ml[74,1676+2]..test/dynamic/speed/src/gene.ml[74,1676+9])
              Texp_ident "Dune__exe!.Generator.produce"
            [
              <arg>
                Nolabel
                expression (test/dynamic/speed/src/gene.ml[74,1676+10]..test/dynamic/speed/src/gene.ml[74,1676+15])
                  Texp_apply
                  expression (test/dynamic/speed/src/gene.ml[74,1676+10]..test/dynamic/speed/src/gene.ml[74,1676+11])
                    Texp_ident "Stdlib!.!"
                  [
                    <arg>
                      Nolabel
                      expression (test/dynamic/speed/src/gene.ml[74,1676+11]..test/dynamic/speed/src/gene.ml[74,1676+15])
                        Texp_ident "size/327"
                  ]
            ]
    ]
  structure_item (test/dynamic/speed/src/gene.ml[76,1693+0]..test/dynamic/speed/src/gene.ml[77,1702+17])
    Tstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[76,1693+4]..test/dynamic/speed/src/gene.ml[76,1693+6])
          Tpat_construct "()"
          []
          None
        expression (test/dynamic/speed/src/gene.ml[77,1702+2]..test/dynamic/speed/src/gene.ml[77,1702+17])
          Texp_apply
          expression (test/dynamic/speed/src/gene.ml[77,1702+2]..test/dynamic/speed/src/gene.ml[77,1702+15])
            Texp_ident "Stdlib!.Gc.full_major"
          [
            <arg>
              Nolabel
              expression (test/dynamic/speed/src/gene.ml[77,1702+15]..test/dynamic/speed/src/gene.ml[77,1702+17])
                Texp_construct "()"
                []
          ]
    ]
  structure_item (test/dynamic/speed/src/gene.ml[79,1721+0]..test/dynamic/speed/src/gene.ml[81,1749+10])
    Tstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[79,1721+4]..test/dynamic/speed/src/gene.ml[79,1721+6])
          Tpat_construct "()"
          []
          None
        expression (test/dynamic/speed/src/gene.ml[80,1730+2]..test/dynamic/speed/src/gene.ml[81,1749+10])
          Texp_ifthenelse
          expression (test/dynamic/speed/src/gene.ml[80,1730+5]..test/dynamic/speed/src/gene.ml[80,1730+13])
            Texp_apply
            expression (test/dynamic/speed/src/gene.ml[80,1730+5]..test/dynamic/speed/src/gene.ml[80,1730+6])
              Texp_ident "Stdlib!.!"
            [
              <arg>
                Nolabel
                expression (test/dynamic/speed/src/gene.ml[80,1730+6]..test/dynamic/speed/src/gene.ml[80,1730+13])
                  Texp_ident "dry_run/324"
            ]
          expression (test/dynamic/speed/src/gene.ml[81,1749+4]..test/dynamic/speed/src/gene.ml[81,1749+10])
            Texp_apply
            expression (test/dynamic/speed/src/gene.ml[81,1749+4]..test/dynamic/speed/src/gene.ml[81,1749+8])
              Texp_ident "Stdlib!.exit"
            [
              <arg>
                Nolabel
                expression (test/dynamic/speed/src/gene.ml[81,1749+9]..test/dynamic/speed/src/gene.ml[81,1749+10])
                  Texp_constant Const_int 0
            ]
          None
    ]
  structure_item (test/dynamic/speed/src/gene.ml[83,1761+0]..test/dynamic/speed/src/gene.ml[90,2034+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[83,1761+4]..test/dynamic/speed/src/gene.ml[83,1761+9])
          Tpat_var "lexer/563"
        expression (test/dynamic/speed/src/gene.ml[83,1761+10]..test/dynamic/speed/src/gene.ml[90,2034+7]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (test/dynamic/speed/src/gene.ml[83,1761+10]..test/dynamic/speed/src/gene.ml[83,1761+16])
                Tpat_var "lexbuf/565"
              expression (test/dynamic/speed/src/gene.ml[84,1780+2]..test/dynamic/speed/src/gene.ml[90,2034+7])
                Texp_let Nonrec
                [
                  <def>
                    pattern (test/dynamic/speed/src/gene.ml[84,1780+6]..test/dynamic/speed/src/gene.ml[84,1780+9])
                      Tpat_var "pos/566"
                    expression (test/dynamic/speed/src/gene.ml[84,1780+12]..test/dynamic/speed/src/gene.ml[84,1780+31])
                      Texp_field
                      expression (test/dynamic/speed/src/gene.ml[84,1780+12]..test/dynamic/speed/src/gene.ml[84,1780+18])
                        Texp_ident "lexbuf/565"
                      "lex_curr_pos"
                ]
                expression (test/dynamic/speed/src/gene.ml[87,1917+2]..test/dynamic/speed/src/gene.ml[90,2034+7])
                  Texp_sequence
                  expression (test/dynamic/speed/src/gene.ml[87,1917+2]..test/dynamic/speed/src/gene.ml[87,1917+36])
                    Texp_assert                    expression (test/dynamic/speed/src/gene.ml[87,1917+9]..test/dynamic/speed/src/gene.ml[87,1917+36])
                      Texp_apply
                      expression (test/dynamic/speed/src/gene.ml[87,1917+14]..test/dynamic/speed/src/gene.ml[87,1917+15])
                        Texp_ident "Stdlib!.<"
                      [
                        <arg>
                          Nolabel
                          expression (test/dynamic/speed/src/gene.ml[87,1917+10]..test/dynamic/speed/src/gene.ml[87,1917+13])
                            Texp_ident "pos/566"
                        <arg>
                          Nolabel
                          expression (test/dynamic/speed/src/gene.ml[87,1917+16]..test/dynamic/speed/src/gene.ml[87,1917+35])
                            Texp_apply
                            expression (test/dynamic/speed/src/gene.ml[87,1917+16]..test/dynamic/speed/src/gene.ml[87,1917+28])
                              Texp_ident "Stdlib!.Array.length"
                            [
                              <arg>
                                Nolabel
                                expression (test/dynamic/speed/src/gene.ml[87,1917+29]..test/dynamic/speed/src/gene.ml[87,1917+35])
                                  Texp_ident "tokens/519"
                            ]
                      ]
                  expression (test/dynamic/speed/src/gene.ml[88,1955+2]..test/dynamic/speed/src/gene.ml[90,2034+7])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (test/dynamic/speed/src/gene.ml[88,1955+6]..test/dynamic/speed/src/gene.ml[88,1955+11])
                          Tpat_var "token/567"
                        expression (test/dynamic/speed/src/gene.ml[88,1955+14]..test/dynamic/speed/src/gene.ml[88,1955+41])
                          Texp_apply
                          expression (test/dynamic/speed/src/gene.ml[88,1955+14]..test/dynamic/speed/src/gene.ml[88,1955+30])
                            Texp_ident "Stdlib!.Array.unsafe_get"
                          [
                            <arg>
                              Nolabel
                              expression (test/dynamic/speed/src/gene.ml[88,1955+31]..test/dynamic/speed/src/gene.ml[88,1955+37])
                                Texp_ident "tokens/519"
                            <arg>
                              Nolabel
                              expression (test/dynamic/speed/src/gene.ml[88,1955+38]..test/dynamic/speed/src/gene.ml[88,1955+41])
                                Texp_ident "pos/566"
                          ]
                    ]
                    expression (test/dynamic/speed/src/gene.ml[89,2000+2]..test/dynamic/speed/src/gene.ml[90,2034+7])
                      Texp_sequence
                      expression (test/dynamic/speed/src/gene.ml[89,2000+2]..test/dynamic/speed/src/gene.ml[89,2000+32])
                        Texp_setfield
                        expression (test/dynamic/speed/src/gene.ml[89,2000+2]..test/dynamic/speed/src/gene.ml[89,2000+8])
                          Texp_ident "lexbuf/565"
                        "lex_curr_pos"
                        expression (test/dynamic/speed/src/gene.ml[89,2000+25]..test/dynamic/speed/src/gene.ml[89,2000+32])
                          Texp_apply
                          expression (test/dynamic/speed/src/gene.ml[89,2000+29]..test/dynamic/speed/src/gene.ml[89,2000+30])
                            Texp_ident "Stdlib!.+"
                          [
                            <arg>
                              Nolabel
                              expression (test/dynamic/speed/src/gene.ml[89,2000+25]..test/dynamic/speed/src/gene.ml[89,2000+28])
                                Texp_ident "pos/566"
                            <arg>
                              Nolabel
                              expression (test/dynamic/speed/src/gene.ml[89,2000+31]..test/dynamic/speed/src/gene.ml[89,2000+32])
                                Texp_constant Const_int 1
                          ]
                      expression (test/dynamic/speed/src/gene.ml[90,2034+2]..test/dynamic/speed/src/gene.ml[90,2034+7])
                        Texp_ident "token/567"
          ]
    ]
  structure_item (test/dynamic/speed/src/gene.ml[92,2043+0]..test/dynamic/speed/src/gene.ml[97,2193+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[92,2043+4]..test/dynamic/speed/src/gene.ml[92,2043+14])
          Tpat_var "new_lexbuf/592"
        expression (test/dynamic/speed/src/gene.ml[92,2043+15]..test/dynamic/speed/src/gene.ml[97,2193+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (test/dynamic/speed/src/gene.ml[92,2043+15]..test/dynamic/speed/src/gene.ml[92,2043+17])
                Tpat_construct "()"
                []
                None
              expression (test/dynamic/speed/src/gene.ml[93,2063+2]..test/dynamic/speed/src/gene.ml[97,2193+8])
                Texp_let Nonrec
                [
                  <def>
                    pattern (test/dynamic/speed/src/gene.ml[93,2063+6]..test/dynamic/speed/src/gene.ml[93,2063+12])
                      Tpat_var "lexbuf/594"
                    expression (test/dynamic/speed/src/gene.ml[93,2063+15]..test/dynamic/speed/src/gene.ml[93,2063+29])
                      Texp_apply
                      expression (test/dynamic/speed/src/gene.ml[93,2063+15]..test/dynamic/speed/src/gene.ml[93,2063+26])
                        Texp_ident "Stdlib!.Lexing.from_string"
                      [
                        <arg>
                          Optional "with_positions"
                          expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                            Texp_construct "None"
                            []
                        <arg>
                          Nolabel
                          expression (test/dynamic/speed/src/gene.ml[93,2063+27]..test/dynamic/speed/src/gene.ml[93,2063+29])
                            Texp_constant Const_string("",(test/dynamic/speed/src/gene.ml[93,2063+28]..test/dynamic/speed/src/gene.ml[93,2063+28]),None)
                      ]
                ]
                expression (test/dynamic/speed/src/gene.ml[94,2096+2]..test/dynamic/speed/src/gene.ml[97,2193+8])
                  Texp_sequence
                  expression (test/dynamic/speed/src/gene.ml[94,2096+2]..test/dynamic/speed/src/gene.ml[94,2096+33])
                    Texp_setfield
                    expression (test/dynamic/speed/src/gene.ml[94,2096+2]..test/dynamic/speed/src/gene.ml[94,2096+8])
                      Texp_ident "lexbuf/594"
                    "lex_start_p"
                    expression (test/dynamic/speed/src/gene.ml[94,2096+24]..test/dynamic/speed/src/gene.ml[94,2096+33])
                      Texp_ident "Stdlib!.Lexing.dummy_pos"
                  expression (test/dynamic/speed/src/gene.ml[95,2131+2]..test/dynamic/speed/src/gene.ml[97,2193+8])
                    Texp_sequence
                    expression (test/dynamic/speed/src/gene.ml[95,2131+2]..test/dynamic/speed/src/gene.ml[95,2131+32])
                      Texp_setfield
                      expression (test/dynamic/speed/src/gene.ml[95,2131+2]..test/dynamic/speed/src/gene.ml[95,2131+8])
                        Texp_ident "lexbuf/594"
                      "lex_curr_p"
                      expression (test/dynamic/speed/src/gene.ml[95,2131+23]..test/dynamic/speed/src/gene.ml[95,2131+32])
                        Texp_ident "Stdlib!.Lexing.dummy_pos"
                    expression (test/dynamic/speed/src/gene.ml[96,2165+2]..test/dynamic/speed/src/gene.ml[97,2193+8])
                      Texp_sequence
                      expression (test/dynamic/speed/src/gene.ml[96,2165+2]..test/dynamic/speed/src/gene.ml[96,2165+26])
                        Texp_setfield
                        expression (test/dynamic/speed/src/gene.ml[96,2165+2]..test/dynamic/speed/src/gene.ml[96,2165+8])
                          Texp_ident "lexbuf/594"
                        "lex_curr_pos"
                        expression (test/dynamic/speed/src/gene.ml[96,2165+25]..test/dynamic/speed/src/gene.ml[96,2165+26])
                          Texp_constant Const_int 0
                      expression (test/dynamic/speed/src/gene.ml[97,2193+2]..test/dynamic/speed/src/gene.ml[97,2193+8])
                        Texp_ident "lexbuf/594"
          ]
    ]
  structure_item (test/dynamic/speed/src/gene.ml[99,2203+0]..test/dynamic/speed/src/gene.ml[121,3117+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (test/dynamic/speed/src/gene.ml[99,2203+4]..test/dynamic/speed/src/gene.ml[99,2203+6])
          Tpat_construct "()"
          []
          None
        expression (test/dynamic/speed/src/gene.ml[103,2426+2]..test/dynamic/speed/src/gene.ml[121,3117+4])
          Texp_let Nonrec
          [
            <def>
              pattern (test/dynamic/speed/src/gene.ml[103,2426+6]..test/dynamic/speed/src/gene.ml[103,2426+9])
                Tpat_var "gc1/596"
              expression (test/dynamic/speed/src/gene.ml[103,2426+12]..test/dynamic/speed/src/gene.ml[103,2426+28])
                Texp_apply
                expression (test/dynamic/speed/src/gene.ml[103,2426+12]..test/dynamic/speed/src/gene.ml[103,2426+25])
                  Texp_ident "Stdlib!.Gc.quick_stat"
                [
                  <arg>
                    Nolabel
                    expression (test/dynamic/speed/src/gene.ml[103,2426+26]..test/dynamic/speed/src/gene.ml[103,2426+28])
                      Texp_construct "()"
                      []
                ]
          ]
          expression (test/dynamic/speed/src/gene.ml[104,2458+2]..test/dynamic/speed/src/gene.ml[121,3117+4])
            Texp_let Nonrec
            [
              <def>
                pattern (test/dynamic/speed/src/gene.ml[104,2458+6]..test/dynamic/speed/src/gene.ml[104,2458+12])
                  Tpat_var "times1/622"
                expression (test/dynamic/speed/src/gene.ml[104,2458+15]..test/dynamic/speed/src/gene.ml[104,2458+27])
                  Texp_apply
                  expression (test/dynamic/speed/src/gene.ml[104,2458+15]..test/dynamic/speed/src/gene.ml[104,2458+25])
                    Texp_ident "Unix!.times"
                  [
                    <arg>
                      Nolabel
                      expression (test/dynamic/speed/src/gene.ml[104,2458+25]..test/dynamic/speed/src/gene.ml[104,2458+27])
                        Texp_construct "()"
                        []
                  ]
            ]
            expression (test/dynamic/speed/src/gene.ml[105,2489+2]..test/dynamic/speed/src/gene.ml[121,3117+4])
              Texp_sequence
              expression (test/dynamic/speed/src/gene.ml[105,2489+2]..test/dynamic/speed/src/gene.ml[108,2577+6])
                Texp_for "_run/839" Up
                expression (test/dynamic/speed/src/gene.ml[105,2489+13]..test/dynamic/speed/src/gene.ml[105,2489+14])
                  Texp_constant Const_int 1
                expression (test/dynamic/speed/src/gene.ml[105,2489+18]..test/dynamic/speed/src/gene.ml[105,2489+23])
                  Texp_apply
                  expression (test/dynamic/speed/src/gene.ml[105,2489+18]..test/dynamic/speed/src/gene.ml[105,2489+19])
                    Texp_ident "Stdlib!.!"
                  [
                    <arg>
                      Nolabel
                      expression (test/dynamic/speed/src/gene.ml[105,2489+19]..test/dynamic/speed/src/gene.ml[105,2489+23])
                        Texp_ident "runs/326"
                  ]
                expression (test/dynamic/speed/src/gene.ml[106,2516+4]..test/dynamic/speed/src/gene.ml[107,2536+40])
                  Texp_apply
                  expression (test/dynamic/speed/src/gene.ml[106,2516+4]..test/dynamic/speed/src/gene.ml[106,2516+10])
                    Texp_ident "Stdlib!.Printf.printf"
                  [
                    <arg>
                      Nolabel
                      expression (test/dynamic/speed/src/gene.ml[106,2516+11]..test/dynamic/speed/src/gene.ml[106,2516+19])
                        Texp_construct "CamlinternalFormatBasics.Format"
                        [
                          expression (test/dynamic/speed/src/gene.ml[106,2516+11]..test/dynamic/speed/src/gene.ml[106,2516+19]) ghost
                            Texp_construct "CamlinternalFormatBasics.Int"
                            [
                              expression (test/dynamic/speed/src/gene.ml[106,2516+11]..test/dynamic/speed/src/gene.ml[106,2516+19]) ghost
                                Texp_construct "CamlinternalFormatBasics.Int_d"
                                []
                              expression (test/dynamic/speed/src/gene.ml[106,2516+11]..test/dynamic/speed/src/gene.ml[106,2516+19]) ghost
                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                []
                              expression (test/dynamic/speed/src/gene.ml[106,2516+11]..test/dynamic/speed/src/gene.ml[106,2516+19]) ghost
                                Texp_construct "CamlinternalFormatBasics.No_precision"
                                []
                              expression (test/dynamic/speed/src/gene.ml[106,2516+11]..test/dynamic/speed/src/gene.ml[106,2516+19]) ghost
                                Texp_construct "CamlinternalFormatBasics.Char_literal"
                                [
                                  expression (test/dynamic/speed/src/gene.ml[106,2516+11]..test/dynamic/speed/src/gene.ml[106,2516+19]) ghost
                                    Texp_constant Const_char 0a
                                  expression (test/dynamic/speed/src/gene.ml[106,2516+11]..test/dynamic/speed/src/gene.ml[106,2516+19]) ghost
                                    Texp_construct "CamlinternalFormatBasics.Flush"
                                    [
                                      expression (test/dynamic/speed/src/gene.ml[106,2516+11]..test/dynamic/speed/src/gene.ml[106,2516+19]) ghost
                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                        []
                                    ]
                                ]
                            ]
                          expression (test/dynamic/speed/src/gene.ml[106,2516+11]..test/dynamic/speed/src/gene.ml[106,2516+19]) ghost
                            Texp_constant Const_string("%d\n%!",(test/dynamic/speed/src/gene.ml[106,2516+11]..test/dynamic/speed/src/gene.ml[106,2516+19]) ghost,None)
                        ]
                    <arg>
                      Nolabel
                      expression (test/dynamic/speed/src/gene.ml[107,2536+6]..test/dynamic/speed/src/gene.ml[107,2536+40])
                        Texp_apply
                        expression (test/dynamic/speed/src/gene.ml[107,2536+7]..test/dynamic/speed/src/gene.ml[107,2536+18])
                          Texp_ident "Dune__exe!.Parser.main"
                        [
                          <arg>
                            Nolabel
                            expression (test/dynamic/speed/src/gene.ml[107,2536+19]..test/dynamic/speed/src/gene.ml[107,2536+24])
                              Texp_ident "lexer/563"
                          <arg>
                            Nolabel
                            expression (test/dynamic/speed/src/gene.ml[107,2536+25]..test/dynamic/speed/src/gene.ml[107,2536+39])
                              Texp_apply
                              expression (test/dynamic/speed/src/gene.ml[107,2536+26]..test/dynamic/speed/src/gene.ml[107,2536+36])
                                Texp_ident "new_lexbuf/592"
                              [
                                <arg>
                                  Nolabel
                                  expression (test/dynamic/speed/src/gene.ml[107,2536+36]..test/dynamic/speed/src/gene.ml[107,2536+38])
                                    Texp_construct "()"
                                    []
                              ]
                        ]
                  ]
              expression (test/dynamic/speed/src/gene.ml[109,2585+2]..test/dynamic/speed/src/gene.ml[121,3117+4])
                Texp_let Nonrec
                [
                  <def>
                    pattern (test/dynamic/speed/src/gene.ml[109,2585+6]..test/dynamic/speed/src/gene.ml[109,2585+12])
                      Tpat_var "times2/840"
                    expression (test/dynamic/speed/src/gene.ml[109,2585+15]..test/dynamic/speed/src/gene.ml[109,2585+27])
                      Texp_apply
                      expression (test/dynamic/speed/src/gene.ml[109,2585+15]..test/dynamic/speed/src/gene.ml[109,2585+25])
                        Texp_ident "Unix!.times"
                      [
                        <arg>
                          Nolabel
                          expression (test/dynamic/speed/src/gene.ml[109,2585+25]..test/dynamic/speed/src/gene.ml[109,2585+27])
                            Texp_construct "()"
                            []
                      ]
                ]
                expression (test/dynamic/speed/src/gene.ml[110,2616+2]..test/dynamic/speed/src/gene.ml[121,3117+4])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (test/dynamic/speed/src/gene.ml[110,2616+6]..test/dynamic/speed/src/gene.ml[110,2616+13])
                        Tpat_var "elapsed/841"
                      expression (test/dynamic/speed/src/gene.ml[110,2616+16]..test/dynamic/speed/src/gene.ml[110,2616+52])
                        Texp_apply
                        expression (test/dynamic/speed/src/gene.ml[110,2616+33]..test/dynamic/speed/src/gene.ml[110,2616+35])
                          Texp_ident "Stdlib!.-."
                        [
                          <arg>
                            Nolabel
                            expression (test/dynamic/speed/src/gene.ml[110,2616+16]..test/dynamic/speed/src/gene.ml[110,2616+32])
                              Texp_field
                              expression (test/dynamic/speed/src/gene.ml[110,2616+16]..test/dynamic/speed/src/gene.ml[110,2616+22])
                                Texp_ident "times2/840"
                              "tms_utime"
                          <arg>
                            Nolabel
                            expression (test/dynamic/speed/src/gene.ml[110,2616+36]..test/dynamic/speed/src/gene.ml[110,2616+52])
                              Texp_field
                              expression (test/dynamic/speed/src/gene.ml[110,2616+36]..test/dynamic/speed/src/gene.ml[110,2616+42])
                                Texp_ident "times1/622"
                              "tms_utime"
                        ]
                  ]
                  expression (test/dynamic/speed/src/gene.ml[111,2672+2]..test/dynamic/speed/src/gene.ml[121,3117+4])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (test/dynamic/speed/src/gene.ml[111,2672+6]..test/dynamic/speed/src/gene.ml[111,2672+9])
                          Tpat_var "gc2/842"
                        expression (test/dynamic/speed/src/gene.ml[111,2672+12]..test/dynamic/speed/src/gene.ml[111,2672+28])
                          Texp_apply
                          expression (test/dynamic/speed/src/gene.ml[111,2672+12]..test/dynamic/speed/src/gene.ml[111,2672+25])
                            Texp_ident "Stdlib!.Gc.quick_stat"
                          [
                            <arg>
                              Nolabel
                              expression (test/dynamic/speed/src/gene.ml[111,2672+26]..test/dynamic/speed/src/gene.ml[111,2672+28])
                                Texp_construct "()"
                                []
                          ]
                    ]
                    expression (test/dynamic/speed/src/gene.ml[112,2704+2]..test/dynamic/speed/src/gene.ml[121,3117+4])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (test/dynamic/speed/src/gene.ml[112,2704+6]..test/dynamic/speed/src/gene.ml[112,2704+11])
                            Tpat_var "minor/843"
                          expression (test/dynamic/speed/src/gene.ml[112,2704+14]..test/dynamic/speed/src/gene.ml[112,2704+48])
                            Texp_apply
                            expression (test/dynamic/speed/src/gene.ml[112,2704+30]..test/dynamic/speed/src/gene.ml[112,2704+32])
                              Texp_ident "Stdlib!.-."
                            [
                              <arg>
                                Nolabel
                                expression (test/dynamic/speed/src/gene.ml[112,2704+14]..test/dynamic/speed/src/gene.ml[112,2704+29])
                                  Texp_field
                                  expression (test/dynamic/speed/src/gene.ml[112,2704+14]..test/dynamic/speed/src/gene.ml[112,2704+17])
                                    Texp_ident "gc2/842"
                                  "minor_words"
                              <arg>
                                Nolabel
                                expression (test/dynamic/speed/src/gene.ml[112,2704+33]..test/dynamic/speed/src/gene.ml[112,2704+48])
                                  Texp_field
                                  expression (test/dynamic/speed/src/gene.ml[112,2704+33]..test/dynamic/speed/src/gene.ml[112,2704+36])
                                    Texp_ident "gc1/596"
                                  "minor_words"
                            ]
                        <def>
                          pattern (test/dynamic/speed/src/gene.ml[113,2753+6]..test/dynamic/speed/src/gene.ml[113,2753+11])
                            Tpat_var "major/844"
                          expression (test/dynamic/speed/src/gene.ml[113,2753+14]..test/dynamic/speed/src/gene.ml[113,2753+48])
                            Texp_apply
                            expression (test/dynamic/speed/src/gene.ml[113,2753+30]..test/dynamic/speed/src/gene.ml[113,2753+32])
                              Texp_ident "Stdlib!.-."
                            [
                              <arg>
                                Nolabel
                                expression (test/dynamic/speed/src/gene.ml[113,2753+14]..test/dynamic/speed/src/gene.ml[113,2753+29])
                                  Texp_field
                                  expression (test/dynamic/speed/src/gene.ml[113,2753+14]..test/dynamic/speed/src/gene.ml[113,2753+17])
                                    Texp_ident "gc2/842"
                                  "major_words"
                              <arg>
                                Nolabel
                                expression (test/dynamic/speed/src/gene.ml[113,2753+33]..test/dynamic/speed/src/gene.ml[113,2753+48])
                                  Texp_field
                                  expression (test/dynamic/speed/src/gene.ml[113,2753+33]..test/dynamic/speed/src/gene.ml[113,2753+36])
                                    Texp_ident "gc1/596"
                                  "major_words"
                            ]
                        <def>
                          pattern (test/dynamic/speed/src/gene.ml[114,2802+6]..test/dynamic/speed/src/gene.ml[114,2802+14])
                            Tpat_var "promoted/845"
                          expression (test/dynamic/speed/src/gene.ml[114,2802+17]..test/dynamic/speed/src/gene.ml[114,2802+57])
                            Texp_apply
                            expression (test/dynamic/speed/src/gene.ml[114,2802+36]..test/dynamic/speed/src/gene.ml[114,2802+38])
                              Texp_ident "Stdlib!.-."
                            [
                              <arg>
                                Nolabel
                                expression (test/dynamic/speed/src/gene.ml[114,2802+17]..test/dynamic/speed/src/gene.ml[114,2802+35])
                                  Texp_field
                                  expression (test/dynamic/speed/src/gene.ml[114,2802+17]..test/dynamic/speed/src/gene.ml[114,2802+20])
                                    Texp_ident "gc2/842"
                                  "promoted_words"
                              <arg>
                                Nolabel
                                expression (test/dynamic/speed/src/gene.ml[114,2802+39]..test/dynamic/speed/src/gene.ml[114,2802+57])
                                  Texp_field
                                  expression (test/dynamic/speed/src/gene.ml[114,2802+39]..test/dynamic/speed/src/gene.ml[114,2802+42])
                                    Texp_ident "gc1/596"
                                  "promoted_words"
                            ]
                      ]
                      expression (test/dynamic/speed/src/gene.ml[115,2863+2]..test/dynamic/speed/src/gene.ml[121,3117+4])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (test/dynamic/speed/src/gene.ml[115,2863+6]..test/dynamic/speed/src/gene.ml[115,2863+10])
                              Tpat_var "runs/846"
                            expression (test/dynamic/speed/src/gene.ml[115,2863+13]..test/dynamic/speed/src/gene.ml[115,2863+31])
                              Texp_apply
                              expression (test/dynamic/speed/src/gene.ml[115,2863+13]..test/dynamic/speed/src/gene.ml[115,2863+25])
                                Texp_ident "Stdlib!.float_of_int"
                              [
                                <arg>
                                  Nolabel
                                  expression (test/dynamic/speed/src/gene.ml[115,2863+26]..test/dynamic/speed/src/gene.ml[115,2863+31])
                                    Texp_apply
                                    expression (test/dynamic/speed/src/gene.ml[115,2863+26]..test/dynamic/speed/src/gene.ml[115,2863+27])
                                      Texp_ident "Stdlib!.!"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (test/dynamic/speed/src/gene.ml[115,2863+27]..test/dynamic/speed/src/gene.ml[115,2863+31])
                                          Texp_ident "runs/326"
                                    ]
                              ]
                        ]
                        expression (test/dynamic/speed/src/gene.ml[116,2898+2]..test/dynamic/speed/src/gene.ml[121,3117+4])
                          Texp_sequence
                          expression (test/dynamic/speed/src/gene.ml[116,2898+2]..test/dynamic/speed/src/gene.ml[116,2898+46])
                            Texp_apply
                            expression (test/dynamic/speed/src/gene.ml[116,2898+2]..test/dynamic/speed/src/gene.ml[116,2898+9])
                              Texp_ident "Stdlib!.Printf.eprintf"
                            [
                              <arg>
                                Nolabel
                                expression (test/dynamic/speed/src/gene.ml[116,2898+10]..test/dynamic/speed/src/gene.ml[116,2898+24])
                                  Texp_construct "CamlinternalFormatBasics.Format"
                                  [
                                    expression (test/dynamic/speed/src/gene.ml[116,2898+10]..test/dynamic/speed/src/gene.ml[116,2898+24]) ghost
                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                      [
                                        expression (test/dynamic/speed/src/gene.ml[116,2898+10]..test/dynamic/speed/src/gene.ml[116,2898+24]) ghost
                                          Texp_constant Const_string("tokens: ",(test/dynamic/speed/src/gene.ml[116,2898+10]..test/dynamic/speed/src/gene.ml[116,2898+24]) ghost,None)
                                        expression (test/dynamic/speed/src/gene.ml[116,2898+10]..test/dynamic/speed/src/gene.ml[116,2898+24]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Int"
                                          [
                                            expression (test/dynamic/speed/src/gene.ml[116,2898+10]..test/dynamic/speed/src/gene.ml[116,2898+24]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Int_d"
                                              []
                                            expression (test/dynamic/speed/src/gene.ml[116,2898+10]..test/dynamic/speed/src/gene.ml[116,2898+24]) ghost
                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                              []
                                            expression (test/dynamic/speed/src/gene.ml[116,2898+10]..test/dynamic/speed/src/gene.ml[116,2898+24]) ghost
                                              Texp_construct "CamlinternalFormatBasics.No_precision"
                                              []
                                            expression (test/dynamic/speed/src/gene.ml[116,2898+10]..test/dynamic/speed/src/gene.ml[116,2898+24]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Char_literal"
                                              [
                                                expression (test/dynamic/speed/src/gene.ml[116,2898+10]..test/dynamic/speed/src/gene.ml[116,2898+24]) ghost
                                                  Texp_constant Const_char 0a
                                                expression (test/dynamic/speed/src/gene.ml[116,2898+10]..test/dynamic/speed/src/gene.ml[116,2898+24]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                  []
                                              ]
                                          ]
                                      ]
                                    expression (test/dynamic/speed/src/gene.ml[116,2898+10]..test/dynamic/speed/src/gene.ml[116,2898+24]) ghost
                                      Texp_constant Const_string("tokens: %d\n",(test/dynamic/speed/src/gene.ml[116,2898+10]..test/dynamic/speed/src/gene.ml[116,2898+24]) ghost,None)
                                  ]
                              <arg>
                                Nolabel
                                expression (test/dynamic/speed/src/gene.ml[116,2898+25]..test/dynamic/speed/src/gene.ml[116,2898+46])
                                  Texp_apply
                                  expression (test/dynamic/speed/src/gene.ml[116,2898+26]..test/dynamic/speed/src/gene.ml[116,2898+38])
                                    Texp_ident "Stdlib!.Array.length"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/speed/src/gene.ml[116,2898+39]..test/dynamic/speed/src/gene.ml[116,2898+45])
                                        Texp_ident "tokens/519"
                                  ]
                            ]
                          expression (test/dynamic/speed/src/gene.ml[117,2946+2]..test/dynamic/speed/src/gene.ml[121,3117+4])
                            Texp_sequence
                            expression (test/dynamic/speed/src/gene.ml[117,2946+2]..test/dynamic/speed/src/gene.ml[117,2946+40])
                              Texp_apply
                              expression (test/dynamic/speed/src/gene.ml[117,2946+2]..test/dynamic/speed/src/gene.ml[117,2946+9])
                                Texp_ident "Stdlib!.Printf.eprintf"
                              [
                                <arg>
                                  Nolabel
                                  expression (test/dynamic/speed/src/gene.ml[117,2946+10]..test/dynamic/speed/src/gene.ml[117,2946+22])
                                    Texp_construct "CamlinternalFormatBasics.Format"
                                    [
                                      expression (test/dynamic/speed/src/gene.ml[117,2946+10]..test/dynamic/speed/src/gene.ml[117,2946+22]) ghost
                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                        [
                                          expression (test/dynamic/speed/src/gene.ml[117,2946+10]..test/dynamic/speed/src/gene.ml[117,2946+22]) ghost
                                            Texp_constant Const_string("time: ",(test/dynamic/speed/src/gene.ml[117,2946+10]..test/dynamic/speed/src/gene.ml[117,2946+22]) ghost,None)
                                          expression (test/dynamic/speed/src/gene.ml[117,2946+10]..test/dynamic/speed/src/gene.ml[117,2946+22]) ghost
                                            Texp_construct "CamlinternalFormatBasics.Float"
                                            [
                                              expression (test/dynamic/speed/src/gene.ml[117,2946+10]..test/dynamic/speed/src/gene.ml[117,2946+22]) ghost
                                                Texp_tuple
                                                [
                                                  expression (test/dynamic/speed/src/gene.ml[117,2946+10]..test/dynamic/speed/src/gene.ml[117,2946+22]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.Float_flag_"
                                                    []
                                                  expression (test/dynamic/speed/src/gene.ml[117,2946+10]..test/dynamic/speed/src/gene.ml[117,2946+22]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.Float_f"
                                                    []
                                                ]
                                              expression (test/dynamic/speed/src/gene.ml[117,2946+10]..test/dynamic/speed/src/gene.ml[117,2946+22]) ghost
                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                []
                                              expression (test/dynamic/speed/src/gene.ml[117,2946+10]..test/dynamic/speed/src/gene.ml[117,2946+22]) ghost
                                                Texp_construct "CamlinternalFormatBasics.No_precision"
                                                []
                                              expression (test/dynamic/speed/src/gene.ml[117,2946+10]..test/dynamic/speed/src/gene.ml[117,2946+22]) ghost
                                                Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                [
                                                  expression (test/dynamic/speed/src/gene.ml[117,2946+10]..test/dynamic/speed/src/gene.ml[117,2946+22]) ghost
                                                    Texp_constant Const_char 0a
                                                  expression (test/dynamic/speed/src/gene.ml[117,2946+10]..test/dynamic/speed/src/gene.ml[117,2946+22]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                    []
                                                ]
                                            ]
                                        ]
                                      expression (test/dynamic/speed/src/gene.ml[117,2946+10]..test/dynamic/speed/src/gene.ml[117,2946+22]) ghost
                                        Texp_constant Const_string("time: %f\n",(test/dynamic/speed/src/gene.ml[117,2946+10]..test/dynamic/speed/src/gene.ml[117,2946+22]) ghost,None)
                                    ]
                                <arg>
                                  Nolabel
                                  expression (test/dynamic/speed/src/gene.ml[117,2946+23]..test/dynamic/speed/src/gene.ml[117,2946+40])
                                    Texp_apply
                                    expression (test/dynamic/speed/src/gene.ml[117,2946+32]..test/dynamic/speed/src/gene.ml[117,2946+34])
                                      Texp_ident "Stdlib!./."
                                    [
                                      <arg>
                                        Nolabel
                                        expression (test/dynamic/speed/src/gene.ml[117,2946+24]..test/dynamic/speed/src/gene.ml[117,2946+31])
                                          Texp_ident "elapsed/841"
                                      <arg>
                                        Nolabel
                                        expression (test/dynamic/speed/src/gene.ml[117,2946+35]..test/dynamic/speed/src/gene.ml[117,2946+39])
                                          Texp_ident "runs/846"
                                    ]
                              ]
                            expression (test/dynamic/speed/src/gene.ml[118,2988+2]..test/dynamic/speed/src/gene.ml[121,3117+4])
                              Texp_sequence
                              expression (test/dynamic/speed/src/gene.ml[118,2988+2]..test/dynamic/speed/src/gene.ml[118,2988+39])
                                Texp_apply
                                expression (test/dynamic/speed/src/gene.ml[118,2988+2]..test/dynamic/speed/src/gene.ml[118,2988+9])
                                  Texp_ident "Stdlib!.Printf.eprintf"
                                [
                                  <arg>
                                    Nolabel
                                    expression (test/dynamic/speed/src/gene.ml[118,2988+10]..test/dynamic/speed/src/gene.ml[118,2988+23])
                                      Texp_construct "CamlinternalFormatBasics.Format"
                                      [
                                        expression (test/dynamic/speed/src/gene.ml[118,2988+10]..test/dynamic/speed/src/gene.ml[118,2988+23]) ghost
                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                          [
                                            expression (test/dynamic/speed/src/gene.ml[118,2988+10]..test/dynamic/speed/src/gene.ml[118,2988+23]) ghost
                                              Texp_constant Const_string("minor: ",(test/dynamic/speed/src/gene.ml[118,2988+10]..test/dynamic/speed/src/gene.ml[118,2988+23]) ghost,None)
                                            expression (test/dynamic/speed/src/gene.ml[118,2988+10]..test/dynamic/speed/src/gene.ml[118,2988+23]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Float"
                                              [
                                                expression (test/dynamic/speed/src/gene.ml[118,2988+10]..test/dynamic/speed/src/gene.ml[118,2988+23]) ghost
                                                  Texp_tuple
                                                  [
                                                    expression (test/dynamic/speed/src/gene.ml[118,2988+10]..test/dynamic/speed/src/gene.ml[118,2988+23]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.Float_flag_"
                                                      []
                                                    expression (test/dynamic/speed/src/gene.ml[118,2988+10]..test/dynamic/speed/src/gene.ml[118,2988+23]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.Float_f"
                                                      []
                                                  ]
                                                expression (test/dynamic/speed/src/gene.ml[118,2988+10]..test/dynamic/speed/src/gene.ml[118,2988+23]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                  []
                                                expression (test/dynamic/speed/src/gene.ml[118,2988+10]..test/dynamic/speed/src/gene.ml[118,2988+23]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_precision"
                                                  []
                                                expression (test/dynamic/speed/src/gene.ml[118,2988+10]..test/dynamic/speed/src/gene.ml[118,2988+23]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                  [
                                                    expression (test/dynamic/speed/src/gene.ml[118,2988+10]..test/dynamic/speed/src/gene.ml[118,2988+23]) ghost
                                                      Texp_constant Const_char 0a
                                                    expression (test/dynamic/speed/src/gene.ml[118,2988+10]..test/dynamic/speed/src/gene.ml[118,2988+23]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                      []
                                                  ]
                                              ]
                                          ]
                                        expression (test/dynamic/speed/src/gene.ml[118,2988+10]..test/dynamic/speed/src/gene.ml[118,2988+23]) ghost
                                          Texp_constant Const_string("minor: %f\n",(test/dynamic/speed/src/gene.ml[118,2988+10]..test/dynamic/speed/src/gene.ml[118,2988+23]) ghost,None)
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (test/dynamic/speed/src/gene.ml[118,2988+24]..test/dynamic/speed/src/gene.ml[118,2988+39])
                                      Texp_apply
                                      expression (test/dynamic/speed/src/gene.ml[118,2988+31]..test/dynamic/speed/src/gene.ml[118,2988+33])
                                        Texp_ident "Stdlib!./."
                                      [
                                        <arg>
                                          Nolabel
                                          expression (test/dynamic/speed/src/gene.ml[118,2988+25]..test/dynamic/speed/src/gene.ml[118,2988+30])
                                            Texp_ident "minor/843"
                                        <arg>
                                          Nolabel
                                          expression (test/dynamic/speed/src/gene.ml[118,2988+34]..test/dynamic/speed/src/gene.ml[118,2988+38])
                                            Texp_ident "runs/846"
                                      ]
                                ]
                              expression (test/dynamic/speed/src/gene.ml[119,3029+2]..test/dynamic/speed/src/gene.ml[121,3117+4])
                                Texp_sequence
                                expression (test/dynamic/speed/src/gene.ml[119,3029+2]..test/dynamic/speed/src/gene.ml[119,3029+39])
                                  Texp_apply
                                  expression (test/dynamic/speed/src/gene.ml[119,3029+2]..test/dynamic/speed/src/gene.ml[119,3029+9])
                                    Texp_ident "Stdlib!.Printf.eprintf"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/speed/src/gene.ml[119,3029+10]..test/dynamic/speed/src/gene.ml[119,3029+23])
                                        Texp_construct "CamlinternalFormatBasics.Format"
                                        [
                                          expression (test/dynamic/speed/src/gene.ml[119,3029+10]..test/dynamic/speed/src/gene.ml[119,3029+23]) ghost
                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                            [
                                              expression (test/dynamic/speed/src/gene.ml[119,3029+10]..test/dynamic/speed/src/gene.ml[119,3029+23]) ghost
                                                Texp_constant Const_string("major: ",(test/dynamic/speed/src/gene.ml[119,3029+10]..test/dynamic/speed/src/gene.ml[119,3029+23]) ghost,None)
                                              expression (test/dynamic/speed/src/gene.ml[119,3029+10]..test/dynamic/speed/src/gene.ml[119,3029+23]) ghost
                                                Texp_construct "CamlinternalFormatBasics.Float"
                                                [
                                                  expression (test/dynamic/speed/src/gene.ml[119,3029+10]..test/dynamic/speed/src/gene.ml[119,3029+23]) ghost
                                                    Texp_tuple
                                                    [
                                                      expression (test/dynamic/speed/src/gene.ml[119,3029+10]..test/dynamic/speed/src/gene.ml[119,3029+23]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.Float_flag_"
                                                        []
                                                      expression (test/dynamic/speed/src/gene.ml[119,3029+10]..test/dynamic/speed/src/gene.ml[119,3029+23]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.Float_f"
                                                        []
                                                    ]
                                                  expression (test/dynamic/speed/src/gene.ml[119,3029+10]..test/dynamic/speed/src/gene.ml[119,3029+23]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                    []
                                                  expression (test/dynamic/speed/src/gene.ml[119,3029+10]..test/dynamic/speed/src/gene.ml[119,3029+23]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.No_precision"
                                                    []
                                                  expression (test/dynamic/speed/src/gene.ml[119,3029+10]..test/dynamic/speed/src/gene.ml[119,3029+23]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                    [
                                                      expression (test/dynamic/speed/src/gene.ml[119,3029+10]..test/dynamic/speed/src/gene.ml[119,3029+23]) ghost
                                                        Texp_constant Const_char 0a
                                                      expression (test/dynamic/speed/src/gene.ml[119,3029+10]..test/dynamic/speed/src/gene.ml[119,3029+23]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                        []
                                                    ]
                                                ]
                                            ]
                                          expression (test/dynamic/speed/src/gene.ml[119,3029+10]..test/dynamic/speed/src/gene.ml[119,3029+23]) ghost
                                            Texp_constant Const_string("major: %f\n",(test/dynamic/speed/src/gene.ml[119,3029+10]..test/dynamic/speed/src/gene.ml[119,3029+23]) ghost,None)
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (test/dynamic/speed/src/gene.ml[119,3029+24]..test/dynamic/speed/src/gene.ml[119,3029+39])
                                        Texp_apply
                                        expression (test/dynamic/speed/src/gene.ml[119,3029+31]..test/dynamic/speed/src/gene.ml[119,3029+33])
                                          Texp_ident "Stdlib!./."
                                        [
                                          <arg>
                                            Nolabel
                                            expression (test/dynamic/speed/src/gene.ml[119,3029+25]..test/dynamic/speed/src/gene.ml[119,3029+30])
                                              Texp_ident "major/844"
                                          <arg>
                                            Nolabel
                                            expression (test/dynamic/speed/src/gene.ml[119,3029+34]..test/dynamic/speed/src/gene.ml[119,3029+38])
                                              Texp_ident "runs/846"
                                        ]
                                  ]
                                expression (test/dynamic/speed/src/gene.ml[120,3070+2]..test/dynamic/speed/src/gene.ml[121,3117+4])
                                  Texp_sequence
                                  expression (test/dynamic/speed/src/gene.ml[120,3070+2]..test/dynamic/speed/src/gene.ml[120,3070+45])
                                    Texp_apply
                                    expression (test/dynamic/speed/src/gene.ml[120,3070+2]..test/dynamic/speed/src/gene.ml[120,3070+9])
                                      Texp_ident "Stdlib!.Printf.eprintf"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (test/dynamic/speed/src/gene.ml[120,3070+10]..test/dynamic/speed/src/gene.ml[120,3070+26])
                                          Texp_construct "CamlinternalFormatBasics.Format"
                                          [
                                            expression (test/dynamic/speed/src/gene.ml[120,3070+10]..test/dynamic/speed/src/gene.ml[120,3070+26]) ghost
                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                              [
                                                expression (test/dynamic/speed/src/gene.ml[120,3070+10]..test/dynamic/speed/src/gene.ml[120,3070+26]) ghost
                                                  Texp_constant Const_string("promoted: ",(test/dynamic/speed/src/gene.ml[120,3070+10]..test/dynamic/speed/src/gene.ml[120,3070+26]) ghost,None)
                                                expression (test/dynamic/speed/src/gene.ml[120,3070+10]..test/dynamic/speed/src/gene.ml[120,3070+26]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Float"
                                                  [
                                                    expression (test/dynamic/speed/src/gene.ml[120,3070+10]..test/dynamic/speed/src/gene.ml[120,3070+26]) ghost
                                                      Texp_tuple
                                                      [
                                                        expression (test/dynamic/speed/src/gene.ml[120,3070+10]..test/dynamic/speed/src/gene.ml[120,3070+26]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.Float_flag_"
                                                          []
                                                        expression (test/dynamic/speed/src/gene.ml[120,3070+10]..test/dynamic/speed/src/gene.ml[120,3070+26]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.Float_f"
                                                          []
                                                      ]
                                                    expression (test/dynamic/speed/src/gene.ml[120,3070+10]..test/dynamic/speed/src/gene.ml[120,3070+26]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                      []
                                                    expression (test/dynamic/speed/src/gene.ml[120,3070+10]..test/dynamic/speed/src/gene.ml[120,3070+26]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.No_precision"
                                                      []
                                                    expression (test/dynamic/speed/src/gene.ml[120,3070+10]..test/dynamic/speed/src/gene.ml[120,3070+26]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                      [
                                                        expression (test/dynamic/speed/src/gene.ml[120,3070+10]..test/dynamic/speed/src/gene.ml[120,3070+26]) ghost
                                                          Texp_constant Const_char 0a
                                                        expression (test/dynamic/speed/src/gene.ml[120,3070+10]..test/dynamic/speed/src/gene.ml[120,3070+26]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                          []
                                                      ]
                                                  ]
                                              ]
                                            expression (test/dynamic/speed/src/gene.ml[120,3070+10]..test/dynamic/speed/src/gene.ml[120,3070+26]) ghost
                                              Texp_constant Const_string("promoted: %f\n",(test/dynamic/speed/src/gene.ml[120,3070+10]..test/dynamic/speed/src/gene.ml[120,3070+26]) ghost,None)
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (test/dynamic/speed/src/gene.ml[120,3070+27]..test/dynamic/speed/src/gene.ml[120,3070+45])
                                          Texp_apply
                                          expression (test/dynamic/speed/src/gene.ml[120,3070+37]..test/dynamic/speed/src/gene.ml[120,3070+39])
                                            Texp_ident "Stdlib!./."
                                          [
                                            <arg>
                                              Nolabel
                                              expression (test/dynamic/speed/src/gene.ml[120,3070+28]..test/dynamic/speed/src/gene.ml[120,3070+36])
                                                Texp_ident "promoted/845"
                                            <arg>
                                              Nolabel
                                              expression (test/dynamic/speed/src/gene.ml[120,3070+40]..test/dynamic/speed/src/gene.ml[120,3070+44])
                                                Texp_ident "runs/846"
                                          ]
                                    ]
                                  expression (test/dynamic/speed/src/gene.ml[121,3117+2]..test/dynamic/speed/src/gene.ml[121,3117+4])
                                    Texp_construct "()"
                                    []
    ]
]

{<Dune__exe__Gene>
 "dry_run"[value] -> <Dune__exe__Gene.2>;
 "lexer"[value] -> <Dune__exe__Gene.9>;
 "new_lexbuf"[value] -> <Dune__exe__Gene.13>;
 "options"[value] -> <Dune__exe__Gene.6>;
 "print_token"[value] -> <Dune__exe__Gene.0>;
 "runs"[value] -> <Dune__exe__Gene.4>;
 "seed"[value] -> <Dune__exe__Gene.3>;
 "size"[value] -> <Dune__exe__Gene.5>;
 "tokens"[value] -> <Dune__exe__Gene.8>;
 "usage"[value] -> <Dune__exe__Gene.7>;
 }

(setglobal Dune__exe__Gene!
  (let
    (print_token/292 =
       (function param/323 : int
         (funct-body Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(9):218-475
           (if (isint param/323)
             (switch* param/323
              case int 0:
               (before Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(17):342-354
                 (after Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(17):342-354
                   (apply (field_imm 1 (global Stdlib__Printf!))
                     [0: [11: " * " 0] " * "])))
              case int 1:
               (before Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(23):436-446
                 (after Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(23):436-446
                   (apply (field_imm 1 (global Stdlib__Printf!))
                     [0: [12: ')' 0] ")"])))
              case int 2:
               (before Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(13):278-290
                 (after Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(13):278-290
                   (apply (field_imm 1 (global Stdlib__Printf!))
                     [0: [11: " + " 0] " + "])))
              case int 3:
               (before Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(15):310-322
                 (after Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(15):310-322
                   (apply (field_imm 1 (global Stdlib__Printf!))
                     [0: [11: " - " 0] " - "])))
              case int 4:
               (before Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(21):405-415
                 (after Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(21):405-415
                   (apply (field_imm 1 (global Stdlib__Printf!))
                     [0: [12: '(' 0] "("])))
              case int 5:
               (before Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(25):464-475
                 (after Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(25):464-475
                   (apply (field_imm 1 (global Stdlib__Printf!))
                     [0: [12: '\n' 0] "\n"])))
              case int 6:
               (before Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(19):372-384
                 (after Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(19):372-384
                   (apply (field_imm 1 (global Stdlib__Printf!))
                     [0: [11: " / " 0] " / "]))))
             (let (i/294 =a (field_imm 0 param/323))
               (before Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(11):246-259
                 (after Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(11):246-259
                   (apply (field_imm 1 (global Stdlib__Printf!))
                     [0: [4: 0 0 0 0] "%d"] i/294)))))))
     dry_run/324 = (makemutable 0 (int) 0)
     seed/325 = (makemutable 0 (int) 61112962)
     runs/326 = (makemutable 0 (int) 10)
     size/327 = (makemutable 0 (int) 10000000)
     options/328 =
       (after Dune__exe__Gene.options test/dynamic/speed/src/gene.ml(53):1077-1409
         (apply (field_imm 10 (global Stdlib__Arg!)) 0
           (makeblock 0
             (makeblock 0 "--dry-run" (makeblock 2 dry_run/324)
               "Run only the generator, not the parser")
             (makeblock 0
               (makeblock 0 "--seed" (makeblock 7 seed/325)
                 (after Dune__exe__Gene.options test/dynamic/speed/src/gene.ml(55):1193-1240
                   (apply (field_imm 3 (global Stdlib__Printf!))
                     [0:
                      [11:
                       "<seed> Set the random seed (" [4: 0 0 0 [12: ')' 0]]]
                      "<seed> Set the random seed (%d)"]
                     (field_int 0 seed/325))))
               (makeblock 0
                 (makeblock 0 "--runs" (makeblock 7 runs/326)
                   (after Dune__exe__Gene.options test/dynamic/speed/src/gene.ml(56):1272-1322
                     (apply (field_imm 3 (global Stdlib__Printf!))
                       [0:
                        [11:
                         "<runs> Set the number of runs ("
                         [4: 0 0 0 [12: ')' 0]]]
                        "<runs> Set the number of runs (%d)"]
                       (field_int 0 runs/326))))
                 (makeblock 0
                   (makeblock 0 "--size" (makeblock 7 size/327)
                     (after Dune__exe__Gene.options test/dynamic/speed/src/gene.ml(57):1354-1406
                       (apply (field_imm 3 (global Stdlib__Printf!))
                         [0:
                          [11:
                           "<size> Set the size of the test ("
                           [4: 0 0 0 [12: ')' 0]]]
                          "<size> Set the size of the test (%d)"]
                         (field_int 0 size/327))))
                   0))))))
     usage/371 =
       (after Dune__exe__Gene.usage test/dynamic/speed/src/gene.ml(61):1425-1467
         (apply (field_imm 3 (global Stdlib__Printf!))
           [0:
            [11: "Usage: " [2: 0 [11: " <options>" 0]]] "Usage: %s <options>"]
           (after Dune__exe__Gene.usage test/dynamic/speed/src/gene.ml(61):1455-1467
             (array.get[addr] (caml_sys_argv 0) 0))))
     *match*/1305 =
       (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(64):1480-1517
         (apply (field_imm 0 (global Stdlib__Arg!)) options/328
           (function param/494 : int
             (funct-body Dune__exe__Gene.(fun) test/dynamic/speed/src/gene.ml(64):1498-1511
               (before Dune__exe__Gene.(fun) test/dynamic/speed/src/gene.ml(64):1508-1510
                 0)))
           usage/371))
     tokens/519 =
       (seq
         (after Dune__exe__Gene.tokens test/dynamic/speed/src/gene.ml(73):1657-1674
           (apply (field_imm 0 (global Stdlib__Random!))
             (field_int 0 seed/325)))
         (before Dune__exe__Gene.tokens test/dynamic/speed/src/gene.ml(74):1678-1691
           (after Dune__exe__Gene.tokens test/dynamic/speed/src/gene.ml(74):1678-1691
             (apply (field_imm 1 (global Dune__exe__Generator!))
               (field_int 0 size/327)))))
     *match*/1302 =
       (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(77):1704-1719
         (caml_gc_full_major 0))
     *match*/1300 =
       (if (field_int 0 dry_run/324)
         (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(81):1753-1759
           (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(81):1753-1759
             (apply (field_imm 98 (global Stdlib!)) 0)))
         0)
     lexer/563 =
       (function lexbuf/565
         (funct-body Dune__exe__Gene.lexer test/dynamic/speed/src/gene.ml(83)<ghost>:1771-2041
           (before Dune__exe__Gene.lexer test/dynamic/speed/src/gene.ml(84):1782-2041
             (let (pos/566 =[int] (field_int 5 lexbuf/565))
               (before Dune__exe__Gene.lexer test/dynamic/speed/src/gene.ml(87):1919-2041
                 (seq
                   (if (< pos/566 (array.length[addr] tokens/519)) 0
                     (raise
                       (after Dune__exe__Gene.lexer test/dynamic/speed/src/gene.ml(87):1919-1953
                         (makeblock 0 (global Assert_failure/28!)
                           [0: "test/dynamic/speed/src/gene.ml" 87 2]))))
                   (before Dune__exe__Gene.lexer test/dynamic/speed/src/gene.ml(88):1957-2041
                     (let
                       (token/567 =
                          (array.unsafe_get[addr] tokens/519 pos/566))
                       (before Dune__exe__Gene.lexer test/dynamic/speed/src/gene.ml(89):2002-2041
                         (seq (setfield_imm 5 lexbuf/565 (+ pos/566 1))
                           (before Dune__exe__Gene.lexer test/dynamic/speed/src/gene.ml(90):2036-2041
                             token/567)))))))))))
     new_lexbuf/592 =
       (function param/595[int]
         (funct-body Dune__exe__Gene.new_lexbuf test/dynamic/speed/src/gene.ml(92)<ghost>:2058-2201
           (before Dune__exe__Gene.new_lexbuf test/dynamic/speed/src/gene.ml(93):2065-2201
             (let
               (lexbuf/594 =
                  (after Dune__exe__Gene.new_lexbuf test/dynamic/speed/src/gene.ml(93):2078-2092
                    (apply (field_imm 2 (global Stdlib__Lexing!)) 0 "")))
               (before Dune__exe__Gene.new_lexbuf test/dynamic/speed/src/gene.ml(94):2098-2201
                 (seq
                   (setfield_ptr 10 lexbuf/594
                     (field_imm 0 (global Stdlib__Lexing!)))
                   (before Dune__exe__Gene.new_lexbuf test/dynamic/speed/src/gene.ml(95):2133-2201
                     (seq
                       (setfield_ptr 11 lexbuf/594
                         (field_imm 0 (global Stdlib__Lexing!)))
                       (before Dune__exe__Gene.new_lexbuf test/dynamic/speed/src/gene.ml(96):2167-2201
                         (seq (setfield_imm 5 lexbuf/594 0)
                           (before Dune__exe__Gene.new_lexbuf test/dynamic/speed/src/gene.ml(97):2195-2201
                             lexbuf/594)))))))))))
     *match*/1297 =
       (let
         (gc1/596 =
            (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(103):2438-2454
              (caml_gc_quick_stat 0)))
         (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(104):2460-3121
           (let
             (times1/622 =
                (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(104):2473-2485
                  (apply (field_imm 107 (global Unix!)) 0)))
             (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(105):2491-3121
               (seq
                 (for _run/839 1 to (field_int 0 runs/326)
                   (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(106):2520-2576
                     (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(106):2520-2576
                       (apply (field_imm 1 (global Stdlib__Printf!))
                         [0: [4: 0 0 0 [12: '\n' [10: 0]]] "%d\n%!"]
                         (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(107):2542-2576
                           (apply (field_imm 1 (global Dune__exe__Parser!))
                             lexer/563
                             (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(107):2561-2575
                               (apply new_lexbuf/592 0))))))))
                 (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(109):2587-3121
                   (let
                     (times2/840 =
                        (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(109):2600-2612
                          (apply (field_imm 107 (global Unix!)) 0)))
                     (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(110):2618-3121
                       (let
                         (elapsed/841 =[float]
                            (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(110):2632-2668
                              (-. (floatfield 0 times2/840)
                                (floatfield 0 times1/622))))
                         (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(111):2674-3121
                           (let
                             (gc2/842 =
                                (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(111):2684-2700
                                  (caml_gc_quick_stat 0)))
                             (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(112):2706-3121
                               (let
                                 (minor/843 =[float]
                                    (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(112):2718-2752
                                      (-. (field_imm 0 gc2/842)
                                        (field_imm 0 gc1/596)))
                                  major/844 =[float]
                                    (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(113):2767-2801
                                      (-. (field_imm 2 gc2/842)
                                        (field_imm 2 gc1/596)))
                                  promoted/845 =[float]
                                    (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(114):2819-2859
                                      (-. (field_imm 1 gc2/842)
                                        (field_imm 1 gc1/596))))
                                 (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(115):2865-3121
                                   (let
                                     (runs/846 =[float]
                                        (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(115):2876-2894
                                          (float_of_int
                                            (field_int 0 runs/326))))
                                     (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(116):2900-3121
                                       (seq
                                         (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(116):2900-2944
                                           (apply
                                             (field_imm 2
                                               (global Stdlib__Printf!))
                                             [0:
                                              [11:
                                               "tokens: "
                                               [4: 0 0 0 [12: '\n' 0]]]
                                              "tokens: %d\n"]
                                             (array.length[addr] tokens/519)))
                                         (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(117):2948-3121
                                           (seq
                                             (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(117):2948-2986
                                               (apply
                                                 (field_imm 2
                                                   (global Stdlib__Printf!))
                                                 [0:
                                                  [11:
                                                   "time: "
                                                   [8:
                                                    [0: 0 0] 0 0 [12: '\n' 0]]]
                                                  "time: %f\n"]
                                                 (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(117):2969-2986
                                                   (/. elapsed/841 runs/846))))
                                             (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(118):2990-3121
                                               (seq
                                                 (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(118):2990-3027
                                                   (apply
                                                     (field_imm 2
                                                       (global Stdlib__Printf!))
                                                     [0:
                                                      [11:
                                                       "minor: "
                                                       [8:
                                                        [0: 0 0] 0 0
                                                        [12: '\n' 0]]]
                                                      "minor: %f\n"]
                                                     (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(118):3012-3027
                                                       (/. minor/843
                                                         runs/846))))
                                                 (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(119):3031-3121
                                                   (seq
                                                     (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(119):3031-3068
                                                       (apply
                                                         (field_imm 2
                                                           (global Stdlib__Printf!))
                                                         [0:
                                                          [11:
                                                           "major: "
                                                           [8:
                                                            [0: 0 0] 0 0
                                                            [12: '\n' 0]]]
                                                          "major: %f\n"]
                                                         (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(119):3053-3068
                                                           (/. major/844
                                                             runs/846))))
                                                     (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(120):3072-3121
                                                       (seq
                                                         (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(120):3072-3115
                                                           (apply
                                                             (field_imm 2
                                                               (global Stdlib__Printf!))
                                                             [0:
                                                              [11:
                                                               "promoted: "
                                                               [8:
                                                                [0: 0 0] 0 0
                                                                [12: '\n' 0]]]
                                                              "promoted: %f\n"]
                                                             (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(120):3097-3115
                                                               (/.
                                                                 promoted/845
                                                                 runs/846))))
                                                         (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(121):3119-3121
                                                           0)))))))))))))))))))))))))))
    (pseudo <unknown location>
      (makeblock 0 print_token/292 dry_run/324 seed/325 runs/326 size/327
        options/328 usage/371 tokens/519 lexer/563 new_lexbuf/592))))
(setglobal Dune__exe__Gene!
  (let
    (print_token/292 =
       (function param/323 : int
         (funct-body Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(9):218-475
           (if (isint param/323)
             (switch* param/323
              case int 0:
               (before Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(17):342-354
                 (after Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(17):342-354
                   (apply (field_imm 1 (global Stdlib__Printf!))
                     [0: [11: " * " 0] " * "])))
              case int 1:
               (before Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(23):436-446
                 (after Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(23):436-446
                   (apply (field_imm 1 (global Stdlib__Printf!))
                     [0: [12: ')' 0] ")"])))
              case int 2:
               (before Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(13):278-290
                 (after Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(13):278-290
                   (apply (field_imm 1 (global Stdlib__Printf!))
                     [0: [11: " + " 0] " + "])))
              case int 3:
               (before Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(15):310-322
                 (after Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(15):310-322
                   (apply (field_imm 1 (global Stdlib__Printf!))
                     [0: [11: " - " 0] " - "])))
              case int 4:
               (before Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(21):405-415
                 (after Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(21):405-415
                   (apply (field_imm 1 (global Stdlib__Printf!))
                     [0: [12: '(' 0] "("])))
              case int 5:
               (before Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(25):464-475
                 (after Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(25):464-475
                   (apply (field_imm 1 (global Stdlib__Printf!))
                     [0: [12: '\n' 0] "\n"])))
              case int 6:
               (before Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(19):372-384
                 (after Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(19):372-384
                   (apply (field_imm 1 (global Stdlib__Printf!))
                     [0: [11: " / " 0] " / "]))))
             (let (i/294 =a (field_imm 0 param/323))
               (before Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(11):246-259
                 (after Dune__exe__Gene.print_token test/dynamic/speed/src/gene.ml(11):246-259
                   (apply (field_imm 1 (global Stdlib__Printf!))
                     [0: [4: 0 0 0 0] "%d"] i/294)))))))
     dry_run/324 = (makemutable 0 (int) 0)
     seed/325 = (makemutable 0 (int) 61112962)
     runs/326 = (makemutable 0 (int) 10)
     size/327 = (makemutable 0 (int) 10000000)
     options/328 =
       (after Dune__exe__Gene.options test/dynamic/speed/src/gene.ml(53):1077-1409
         (apply (field_imm 10 (global Stdlib__Arg!)) 0
           (makeblock 0
             (makeblock 0 "--dry-run" (makeblock 2 dry_run/324)
               "Run only the generator, not the parser")
             (makeblock 0
               (makeblock 0 "--seed" (makeblock 7 seed/325)
                 (after Dune__exe__Gene.options test/dynamic/speed/src/gene.ml(55):1193-1240
                   (apply (field_imm 3 (global Stdlib__Printf!))
                     [0:
                      [11:
                       "<seed> Set the random seed (" [4: 0 0 0 [12: ')' 0]]]
                      "<seed> Set the random seed (%d)"]
                     (field_int 0 seed/325))))
               (makeblock 0
                 (makeblock 0 "--runs" (makeblock 7 runs/326)
                   (after Dune__exe__Gene.options test/dynamic/speed/src/gene.ml(56):1272-1322
                     (apply (field_imm 3 (global Stdlib__Printf!))
                       [0:
                        [11:
                         "<runs> Set the number of runs ("
                         [4: 0 0 0 [12: ')' 0]]]
                        "<runs> Set the number of runs (%d)"]
                       (field_int 0 runs/326))))
                 (makeblock 0
                   (makeblock 0 "--size" (makeblock 7 size/327)
                     (after Dune__exe__Gene.options test/dynamic/speed/src/gene.ml(57):1354-1406
                       (apply (field_imm 3 (global Stdlib__Printf!))
                         [0:
                          [11:
                           "<size> Set the size of the test ("
                           [4: 0 0 0 [12: ')' 0]]]
                          "<size> Set the size of the test (%d)"]
                         (field_int 0 size/327))))
                   0))))))
     usage/371 =
       (after Dune__exe__Gene.usage test/dynamic/speed/src/gene.ml(61):1425-1467
         (apply (field_imm 3 (global Stdlib__Printf!))
           [0:
            [11: "Usage: " [2: 0 [11: " <options>" 0]]] "Usage: %s <options>"]
           (after Dune__exe__Gene.usage test/dynamic/speed/src/gene.ml(61):1455-1467
             (array.get[addr] (caml_sys_argv 0) 0))))
     *match*/1305 =
       (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(64):1480-1517
         (apply (field_imm 0 (global Stdlib__Arg!)) options/328
           (function param/494 : int
             (funct-body Dune__exe__Gene.(fun) test/dynamic/speed/src/gene.ml(64):1498-1511
               (before Dune__exe__Gene.(fun) test/dynamic/speed/src/gene.ml(64):1508-1510
                 0)))
           usage/371))
     tokens/519 =
       (seq
         (after Dune__exe__Gene.tokens test/dynamic/speed/src/gene.ml(73):1657-1674
           (apply (field_imm 0 (global Stdlib__Random!))
             (field_int 0 seed/325)))
         (before Dune__exe__Gene.tokens test/dynamic/speed/src/gene.ml(74):1678-1691
           (after Dune__exe__Gene.tokens test/dynamic/speed/src/gene.ml(74):1678-1691
             (apply (field_imm 1 (global Dune__exe__Generator!))
               (field_int 0 size/327)))))
     *match*/1302 =
       (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(77):1704-1719
         (caml_gc_full_major 0))
     *match*/1300 =
       (if (field_int 0 dry_run/324)
         (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(81):1753-1759
           (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(81):1753-1759
             (apply (field_imm 98 (global Stdlib!)) 0)))
         0)
     lexer/563 =
       (function lexbuf/565
         (funct-body Dune__exe__Gene.lexer test/dynamic/speed/src/gene.ml(83)<ghost>:1771-2041
           (before Dune__exe__Gene.lexer test/dynamic/speed/src/gene.ml(84):1782-2041
             (let (pos/566 =[int] (field_int 5 lexbuf/565))
               (before Dune__exe__Gene.lexer test/dynamic/speed/src/gene.ml(87):1919-2041
                 (seq
                   (if (< pos/566 (array.length[addr] tokens/519)) 0
                     (raise
                       (after Dune__exe__Gene.lexer test/dynamic/speed/src/gene.ml(87):1919-1953
                         (makeblock 0 (global Assert_failure/28!)
                           [0: "test/dynamic/speed/src/gene.ml" 87 2]))))
                   (before Dune__exe__Gene.lexer test/dynamic/speed/src/gene.ml(88):1957-2041
                     (let
                       (token/567 =
                          (array.unsafe_get[addr] tokens/519 pos/566))
                       (before Dune__exe__Gene.lexer test/dynamic/speed/src/gene.ml(89):2002-2041
                         (seq (setfield_imm 5 lexbuf/565 (+ pos/566 1))
                           (before Dune__exe__Gene.lexer test/dynamic/speed/src/gene.ml(90):2036-2041
                             token/567)))))))))))
     new_lexbuf/592 =
       (function param/595[int]
         (funct-body Dune__exe__Gene.new_lexbuf test/dynamic/speed/src/gene.ml(92)<ghost>:2058-2201
           (before Dune__exe__Gene.new_lexbuf test/dynamic/speed/src/gene.ml(93):2065-2201
             (let
               (lexbuf/594 =
                  (after Dune__exe__Gene.new_lexbuf test/dynamic/speed/src/gene.ml(93):2078-2092
                    (apply (field_imm 2 (global Stdlib__Lexing!)) 0 "")))
               (before Dune__exe__Gene.new_lexbuf test/dynamic/speed/src/gene.ml(94):2098-2201
                 (seq
                   (setfield_ptr 10 lexbuf/594
                     (field_imm 0 (global Stdlib__Lexing!)))
                   (before Dune__exe__Gene.new_lexbuf test/dynamic/speed/src/gene.ml(95):2133-2201
                     (seq
                       (setfield_ptr 11 lexbuf/594
                         (field_imm 0 (global Stdlib__Lexing!)))
                       (before Dune__exe__Gene.new_lexbuf test/dynamic/speed/src/gene.ml(96):2167-2201
                         (seq (setfield_imm 5 lexbuf/594 0)
                           (before Dune__exe__Gene.new_lexbuf test/dynamic/speed/src/gene.ml(97):2195-2201
                             lexbuf/594)))))))))))
     *match*/1297 =
       (let
         (gc1/596 =
            (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(103):2438-2454
              (caml_gc_quick_stat 0)))
         (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(104):2460-3121
           (let
             (times1/622 =
                (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(104):2473-2485
                  (apply (field_imm 107 (global Unix!)) 0)))
             (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(105):2491-3121
               (seq
                 (for _run/839 1 to (field_int 0 runs/326)
                   (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(106):2520-2576
                     (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(106):2520-2576
                       (apply (field_imm 1 (global Stdlib__Printf!))
                         [0: [4: 0 0 0 [12: '\n' [10: 0]]] "%d\n%!"]
                         (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(107):2542-2576
                           (apply (field_imm 1 (global Dune__exe__Parser!))
                             lexer/563
                             (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(107):2561-2575
                               (apply new_lexbuf/592 0))))))))
                 (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(109):2587-3121
                   (let
                     (times2/840 =
                        (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(109):2600-2612
                          (apply (field_imm 107 (global Unix!)) 0)))
                     (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(110):2618-3121
                       (let
                         (elapsed/841 =[float]
                            (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(110):2632-2668
                              (-. (floatfield 0 times2/840)
                                (floatfield 0 times1/622))))
                         (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(111):2674-3121
                           (let
                             (gc2/842 =
                                (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(111):2684-2700
                                  (caml_gc_quick_stat 0)))
                             (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(112):2706-3121
                               (let
                                 (minor/843 =[float]
                                    (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(112):2718-2752
                                      (-. (field_imm 0 gc2/842)
                                        (field_imm 0 gc1/596)))
                                  major/844 =[float]
                                    (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(113):2767-2801
                                      (-. (field_imm 2 gc2/842)
                                        (field_imm 2 gc1/596)))
                                  promoted/845 =[float]
                                    (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(114):2819-2859
                                      (-. (field_imm 1 gc2/842)
                                        (field_imm 1 gc1/596))))
                                 (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(115):2865-3121
                                   (let
                                     (runs/846 =[float]
                                        (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(115):2876-2894
                                          (float_of_int
                                            (field_int 0 runs/326))))
                                     (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(116):2900-3121
                                       (seq
                                         (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(116):2900-2944
                                           (apply
                                             (field_imm 2
                                               (global Stdlib__Printf!))
                                             [0:
                                              [11:
                                               "tokens: "
                                               [4: 0 0 0 [12: '\n' 0]]]
                                              "tokens: %d\n"]
                                             (array.length[addr] tokens/519)))
                                         (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(117):2948-3121
                                           (seq
                                             (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(117):2948-2986
                                               (apply
                                                 (field_imm 2
                                                   (global Stdlib__Printf!))
                                                 [0:
                                                  [11:
                                                   "time: "
                                                   [8:
                                                    [0: 0 0] 0 0 [12: '\n' 0]]]
                                                  "time: %f\n"]
                                                 (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(117):2969-2986
                                                   (/. elapsed/841 runs/846))))
                                             (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(118):2990-3121
                                               (seq
                                                 (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(118):2990-3027
                                                   (apply
                                                     (field_imm 2
                                                       (global Stdlib__Printf!))
                                                     [0:
                                                      [11:
                                                       "minor: "
                                                       [8:
                                                        [0: 0 0] 0 0
                                                        [12: '\n' 0]]]
                                                      "minor: %f\n"]
                                                     (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(118):3012-3027
                                                       (/. minor/843
                                                         runs/846))))
                                                 (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(119):3031-3121
                                                   (seq
                                                     (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(119):3031-3068
                                                       (apply
                                                         (field_imm 2
                                                           (global Stdlib__Printf!))
                                                         [0:
                                                          [11:
                                                           "major: "
                                                           [8:
                                                            [0: 0 0] 0 0
                                                            [12: '\n' 0]]]
                                                          "major: %f\n"]
                                                         (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(119):3053-3068
                                                           (/. major/844
                                                             runs/846))))
                                                     (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(120):3072-3121
                                                       (seq
                                                         (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(120):3072-3115
                                                           (apply
                                                             (field_imm 2
                                                               (global Stdlib__Printf!))
                                                             [0:
                                                              [11:
                                                               "promoted: "
                                                               [8:
                                                                [0: 0 0] 0 0
                                                                [12: '\n' 0]]]
                                                              "promoted: %f\n"]
                                                             (after Dune__exe__Gene test/dynamic/speed/src/gene.ml(120):3097-3115
                                                               (/.
                                                                 promoted/845
                                                                 runs/846))))
                                                         (before Dune__exe__Gene test/dynamic/speed/src/gene.ml(121):3119-3121
                                                           0)))))))))))))))))))))))))))
    (pseudo <unknown location>
      (makeblock 0 print_token/292 dry_run/324 seed/325 runs/326 size/327
        options/328 usage/371 tokens/519 lexer/563 new_lexbuf/592))))
