type is_type = bool
type export_flag = Export | Import
type export = (export_flag * Libobject.open_filter) option
val make_oname : Nametab.object_prefix -> Names.Id.t -> Libobject.object_name
val make_foname : Names.Id.t -> Libobject.object_name
val oname_prefix : Libobject.object_name -> Nametab.object_prefix
type 'summary node =
    CompilingLibrary of Nametab.object_prefix
  | OpenedModule of is_type * export * Nametab.object_prefix * 'summary
  | OpenedSection of Nametab.object_prefix * 'summary
val node_prefix : 'summary node -> Nametab.object_prefix
type 'summary library_segment = ('summary node * Libobject.t list) list
val add_leaf : Libobject.obj -> unit
val contents : unit -> Summary.Interp.frozen library_segment
val prefix : unit -> Nametab.object_prefix
val cwd : unit -> Names.DirPath.t
val cwd_except_section : unit -> Names.DirPath.t
val current_dirpath : bool -> Names.DirPath.t
val make_path : Names.Id.t -> Libnames.full_path
val make_path_except_section : Names.Id.t -> Libnames.full_path
val current_mp : unit -> Names.ModPath.t
val make_kn : Names.Id.t -> Names.KerName.t
val sections_are_opened : unit -> bool
val sections_depth : unit -> int
val is_module_or_modtype : unit -> bool
val is_modtype : unit -> bool
val is_modtype_strict : unit -> bool
val is_module : unit -> bool
module type StagedLibS =
  sig
    type summary
    type classified_objects = {
      substobjs : Libobject.t list;
      keepobjs : Libobject.t list;
      anticipateobjs : Libobject.t list;
    }
    val classify_segment : Libobject.t list -> classified_objects
    val find_opening_node : Names.Id.t -> summary node
    val add_entry : summary node -> unit
    val add_leaf_entry : Libobject.t -> unit
    val open_section : Names.Id.t -> unit
    val close_section : unit -> unit
    val start_module :
      export ->
      Names.module_ident ->
      Names.ModPath.t -> summary -> Nametab.object_prefix
    val start_modtype :
      Names.module_ident ->
      Names.ModPath.t -> summary -> Nametab.object_prefix
    val end_module :
      unit -> Nametab.object_prefix * summary * classified_objects
    val end_modtype :
      unit -> Nametab.object_prefix * summary * classified_objects
    type frozen
    val freeze : unit -> frozen
    val unfreeze : frozen -> unit
    val init : unit -> unit
    val drop_objects : frozen -> frozen
  end
module Synterp :
  sig
    type summary = Summary.Synterp.frozen
    type classified_objects = {
      substobjs : Libobject.t list;
      keepobjs : Libobject.t list;
      anticipateobjs : Libobject.t list;
    }
    val classify_segment : Libobject.t list -> classified_objects
    val find_opening_node : Names.Id.t -> summary node
    val add_entry : summary node -> unit
    val add_leaf_entry : Libobject.t -> unit
    val open_section : Names.Id.t -> unit
    val close_section : unit -> unit
    val start_module :
      export ->
      Names.module_ident ->
      Names.ModPath.t -> summary -> Nametab.object_prefix
    val start_modtype :
      Names.module_ident ->
      Names.ModPath.t -> summary -> Nametab.object_prefix
    val end_module :
      unit -> Nametab.object_prefix * summary * classified_objects
    val end_modtype :
      unit -> Nametab.object_prefix * summary * classified_objects
    type frozen
    val freeze : unit -> frozen
    val unfreeze : frozen -> unit
    val init : unit -> unit
    val drop_objects : frozen -> frozen
  end
module Interp :
  sig
    type summary = Summary.Interp.frozen
    type classified_objects = {
      substobjs : Libobject.t list;
      keepobjs : Libobject.t list;
      anticipateobjs : Libobject.t list;
    }
    val classify_segment : Libobject.t list -> classified_objects
    val find_opening_node : Names.Id.t -> summary node
    val add_entry : summary node -> unit
    val add_leaf_entry : Libobject.t -> unit
    val open_section : Names.Id.t -> unit
    val close_section : unit -> unit
    val start_module :
      export ->
      Names.module_ident ->
      Names.ModPath.t -> summary -> Nametab.object_prefix
    val start_modtype :
      Names.module_ident ->
      Names.ModPath.t -> summary -> Nametab.object_prefix
    val end_module :
      unit -> Nametab.object_prefix * summary * classified_objects
    val end_modtype :
      unit -> Nametab.object_prefix * summary * classified_objects
    type frozen
    val freeze : unit -> frozen
    val unfreeze : frozen -> unit
    val init : unit -> unit
    val drop_objects : frozen -> frozen
  end
val start_compilation : Names.DirPath.t -> Names.ModPath.t -> unit
val end_compilation :
  Names.DirPath.t ->
  Nametab.object_prefix * Interp.classified_objects *
  Synterp.classified_objects
val library_dp : unit -> Names.DirPath.t
val split_modpath : Names.ModPath.t -> Names.DirPath.t * Names.Id.t list
val library_part : Names.GlobRef.t -> Names.DirPath.t
val section_segment_of_constant : Names.Constant.t -> Cooking.cooking_info
val section_segment_of_inductive : Names.MutInd.t -> Cooking.cooking_info
val section_segment_of_reference : Names.GlobRef.t -> Cooking.cooking_info
val section_instance : Names.GlobRef.t -> Constr.t array
val is_in_section : Names.GlobRef.t -> bool
val discharge_proj_repr : Names.Projection.Repr.t -> Names.Projection.Repr.t
val init : unit -> unit
val open_section : Names.Id.t -> unit("DEBUG:rule", [Tag1 (("is_type", 965), (0, 0, 0, 1, ((Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -133)), 0, 0, 0, 0, (("library/lib.mli", 19, 978, 978), ("library/lib.mli", 19, 978, 997), 0), 0, 1, 0, Tag1 ("Lib", 0)), 1, 0); Tag1 (("export_flag", 966), (0, 0, Tag1 ([(("Export", 356), (0), 0, (("library/lib.mli", 20, 1031, 1050), ("library/lib.mli", 20, 1031, 1056), 0), 0, Tag1 ("Lib", 2)); (("Import", 357), (0), 0, (("library/lib.mli", 20, 1031, 1057), ("library/lib.mli", 20, 1031, 1065), 0), 0, Tag1 ("Lib", 3))], 0), 1, 0, 0, 0, 0, 0, (("library/lib.mli", 20, 1031, 1031), ("library/lib.mli", 20, 1031, 1065), 0), 0, 1, 0, Tag1 ("Lib", 1)), 1, 0); Tag1 (("export", 967), (0, 0, 0, 1, ((Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("export_flag", 966)), 0, (0)), 100000000, 0, -131); (Tag3 (Tag1 ((Tag2 ("Libobject")), "open_filter"), 0, (0)), 100000000, 0, -132)]), 100000000, 0, -130)], (0)), 100000000, 0, -129)), 0, 0, 0, 0, (("library/lib.mli", 21, 1066, 1066), ("library/lib.mli", 21, 1066, 1124), 0), 0, 0, 0, Tag1 ("Lib", 4)), 1, 0); (("make_oname", 968), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -128), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -127), (Tag3 (Tag1 ((Tag2 ("Libobject")), "object_name"), 0, (0)), 100000000, 0, -126), 0), 100000000, 0, -125), 0), 100000000, 0, -124), 0, (("library/lib.mli", 23, 1155, 1155), ("library/lib.mli", 23, 1155, 1232), 0), 0, Tag1 ("Lib", 6)), 0); (("make_foname", 969), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -123), (Tag3 (Tag1 ((Tag2 ("Libobject")), "object_name"), 0, (0)), 100000000, 0, -122), 0), 100000000, 0, -121), 0, (("library/lib.mli", 24, 1233, 1233), ("library/lib.mli", 24, 1233, 1286), 0), 0, Tag1 ("Lib", 7)), 0); (("oname_prefix", 970), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Libobject")), "object_name"), 0, (0)), 100000000, 0, -120), (Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -119), 0), 100000000, 0, -118), 0, (("library/lib.mli", 25, 1287, 1287), ("library/lib.mli", 25, 1287, 1352), 0), 0, Tag1 ("Lib", 8)), 0); Tag1 (("node", 971), ([((("summary")), 100000000, 0, -116)], 1, Tag1 ([(("CompilingLibrary", 484), ([(Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -112)]), 0, (("library/lib.mli", 28, 1375, 1377), ("library/lib.mli", 28, 1375, 1420), 0), 0, Tag1 ("Lib", 10)); (("OpenedModule", 485), ([(Tag3 ((("is_type", 965)), 0, (0)), 100000000, 0, -113); (Tag3 ((("export", 967)), 0, (0)), 100000000, 0, -114); (Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -115); ((("summary")), 100000000, 0, -116)]), 0, (("library/lib.mli", 29, 1421, 1423), ("library/lib.mli", 29, 1421, 1492), 0), 0, Tag1 ("Lib", 11)); (("OpenedSection", 486), ([(Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -117); ((("summary")), 100000000, 0, -116)]), 0, (("library/lib.mli", 30, 1493, 1495), ("library/lib.mli", 30, 1493, 1546), 0), 0, Tag1 ("Lib", 12))], 0), 1, 0, [25], [0], 0, 0, (("library/lib.mli", 27, 1354, 1354), ("library/lib.mli", 30, 1493, 1546), 0), 0, 0, 0, Tag1 ("Lib", 9)), 1, 0); (("node_prefix", 972), ((Tag1 (0, (Tag3 ((("node", 971)), [((("summary")), 100000000, 0, -111)], (0)), 100000000, 0, -110), (Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -109), 0), 100000000, 0, -108), 0, (("library/lib.mli", 35, 1731, 1731), ("library/lib.mli", 35, 1731, 1787), 0), 0, Tag1 ("Lib", 13)), 0); Tag1 (("library_segment", 973), ([((("summary")), 100000000, 0, -105)], 1, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("node", 971)), [((("summary")), 100000000, 0, -105)], (0)), 100000000, 0, -104); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Libobject")), "t"), 0, (0)), 100000000, 0, -107)], (0)), 100000000, 0, -106)]), 100000000, 0, -103)], (0)), 100000000, 0, -102)), [25], [0], 0, 0, (("library/lib.mli", 37, 1789, 1789), ("library/lib.mli", 37, 1789, 1860), 0), 0, 0, 0, Tag1 ("Lib", 14)), 1, 0); (("add_leaf", 974), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Libobject")), "obj"), 0, (0)), 100000000, 0, -101), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -100), 0), 100000000, 0, -99), 0, (("library/lib.mli", 43, 2014, 2014), ("library/lib.mli", 43, 2014, 2050), 0), 0, Tag1 ("Lib", 15)), 0); (("contents", 975), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -98), (Tag3 ((("library_segment", 973)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Summary")), "Interp"), "frozen"), 0, (0)), 100000000, 0, -97)], (0)), 100000000, 0, -96), 0), 100000000, 0, -95), 0, (("library/lib.mli", 49, 2144, 2144), ("library/lib.mli", 49, 2144, 2204), 0), 0, Tag1 ("Lib", 16)), 0); (("prefix", 976), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -94), (Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -93), 0), 100000000, 0, -92), 0, (("library/lib.mli", 69, 2701, 2701), ("library/lib.mli", 69, 2701, 2743), 0), 0, Tag1 ("Lib", 17)), 0); (("cwd", 977), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -91), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -90), 0), 100000000, 0, -89), 0, (("library/lib.mli", 70, 2744, 2744), ("library/lib.mli", 70, 2744, 2771), 0), 0, Tag1 ("Lib", 18)), 0); (("cwd_except_section", 978), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -88), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("library/lib.mli", 71, 2772, 2772), ("library/lib.mli", 71, 2772, 2814), 0), 0, Tag1 ("Lib", 19)), 0); (("current_dirpath", 979), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -85), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -84), 0), 100000000, 0, -83), 0, (("library/lib.mli", 72, 2815, 2815), ("library/lib.mli", 72, 2815, 2854), 0), 0, Tag1 ("Lib", 20)), 0); (("make_path", 980), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -82), (Tag3 (Tag1 ((Tag2 ("Libnames")), "full_path"), 0, (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0, (("library/lib.mli", 73, 2885, 2885), ("library/lib.mli", 73, 2885, 2927), 0), 0, Tag1 ("Lib", 21)), 0); (("make_path_except_section", 981), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -79), (Tag3 (Tag1 ((Tag2 ("Libnames")), "full_path"), 0, (0)), 100000000, 0, -78), 0), 100000000, 0, -77), 0, (("library/lib.mli", 74, 2928, 2928), ("library/lib.mli", 74, 2928, 2985), 0), 0, Tag1 ("Lib", 22)), 0); (("current_mp", 982), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -76), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), 0, (("library/lib.mli", 77, 3012, 3012), ("library/lib.mli", 77, 3012, 3046), 0), 0, Tag1 ("Lib", 23)), 0); (("make_kn", 983), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -73), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0, (("library/lib.mli", 78, 3047, 3047), ("library/lib.mli", 78, 3047, 3078), 0), 0, Tag1 ("Lib", 24)), 0); (("sections_are_opened", 984), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -70), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("library/lib.mli", 81, 3119, 3119), ("library/lib.mli", 81, 3119, 3157), 0), 0, Tag1 ("Lib", 25)), 0); (("sections_depth", 985), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -67), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("library/lib.mli", 82, 3158, 3158), ("library/lib.mli", 82, 3158, 3190), 0), 0, Tag1 ("Lib", 26)), 0); (("is_module_or_modtype", 986), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -64), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -63), 0), 100000000, 0, -62), 0, (("library/lib.mli", 85, 3235, 3235), ("library/lib.mli", 85, 3235, 3274), 0), 0, Tag1 ("Lib", 27)), 0); (("is_modtype", 987), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -61), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -60), 0), 100000000, 0, -59), 0, (("library/lib.mli", 86, 3275, 3275), ("library/lib.mli", 86, 3275, 3304), 0), 0, Tag1 ("Lib", 28)), 0); (("is_modtype_strict", 988), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -58), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("library/lib.mli", 89, 3430, 3430), ("library/lib.mli", 89, 3430, 3466), 0), 0, Tag1 ("Lib", 29)), 0); (("is_module", 989), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -55), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("library/lib.mli", 90, 3467, 3467), ("library/lib.mli", 90, 3467, 3495), 0), 0, Tag1 ("Lib", 30)), 0); Tag4 (("StagedLibS", 990), ((Tag1 ([Tag1 (("summary", 1007), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("library/lib.mli", 96, 3628, 3630), ("library/lib.mli", 96, 3628, 3642), 0), 0, 0, 0, Tag1 ("Lib", 31)), 1, 0); Tag1 (("classified_objects", 1008), (0, 0, [[(("substobjs", 604), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Libobject")), "t"), 0, (0)), 100000000, 0, -196)], (0)), 100000000, 0, -195), (("library/lib.mli", 99, 3674, 3678), ("library/lib.mli", 99, 3674, 3707), 0), 0, Tag1 ("Lib", 33)); (("keepobjs", 605), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Libobject")), "t"), 0, (0)), 100000000, 0, -198)], (0)), 100000000, 0, -197), (("library/lib.mli", 100, 3708, 3712), ("library/lib.mli", 100, 3708, 3740), 0), 0, Tag1 ("Lib", 34)); (("anticipateobjs", 606), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Libobject")), "t"), 0, (0)), 100000000, 0, -200)], (0)), 100000000, 0, -199), (("library/lib.mli", 101, 3741, 3745), ("library/lib.mli", 101, 3741, 3779), 0), 0, Tag1 ("Lib", 35))]], 1, 0, 0, 0, 0, 0, (("library/lib.mli", 98, 3644, 3646), ("library/lib.mli", 102, 3780, 3783), 0), 0, 0, 0, Tag1 ("Lib", 32)), 1, 0); (("classify_segment", 1009), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Libobject")), "t"), 0, (0)), 100000000, 0, -194)], (0)), 100000000, 0, -193), (Tag3 ((("classified_objects", 1008)), 0, (0)), 100000000, 0, -192), 0), 100000000, 0, -191), 0, (("library/lib.mli", 103, 3784, 3786), ("library/lib.mli", 103, 3784, 3847), 0), 0, Tag1 ("Lib", 36)), 0); (("find_opening_node", 1010), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -190), (Tag3 ((("node", 971)), [(Tag3 ((("summary", 1007)), 0, (0)), 100000000, 0, -189)], (0)), 100000000, 0, -188), 0), 100000000, 0, -187), 0, (("library/lib.mli", 106, 3899, 3901), ("library/lib.mli", 106, 3899, 3945), 0), 0, Tag1 ("Lib", 37)), 0); (("add_entry", 1011), ((Tag1 (0, (Tag3 ((("node", 971)), [(Tag3 ((("summary", 1007)), 0, (0)), 100000000, 0, -186)], (0)), 100000000, 0, -185), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -184), 0), 100000000, 0, -183), 0, (("library/lib.mli", 108, 3947, 3949), ("library/lib.mli", 108, 3947, 3985), 0), 0, Tag1 ("Lib", 38)), 0); (("add_leaf_entry", 1012), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Libobject")), "t"), 0, (0)), 100000000, 0, -182), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -181), 0), 100000000, 0, -180), 0, (("library/lib.mli", 109, 3986, 3988), ("library/lib.mli", 109, 3986, 4028), 0), 0, Tag1 ("Lib", 39)), 0); (("open_section", 1013), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -179), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -178), 0), 100000000, 0, -177), 0, (("library/lib.mli", 112, 4053, 4055), ("library/lib.mli", 112, 4053, 4086), 0), 0, Tag1 ("Lib", 40)), 0); (("close_section", 1014), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -176), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -175), 0), 100000000, 0, -174), 0, (("library/lib.mli", 113, 4087, 4089), ("library/lib.mli", 113, 4087, 4121), 0), 0, Tag1 ("Lib", 41)), 0); (("start_module", 1015), ((Tag1 (0, (Tag3 ((("export", 967)), 0, (0)), 100000000, 0, -173), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "module_ident"), 0, (0)), 100000000, 0, -172), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -171), (Tag1 (0, (Tag3 ((("summary", 1007)), 0, (0)), 100000000, 0, -170), (Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -169), 0), 100000000, 0, -168), 0), 100000000, 0, -167), 0), 100000000, 0, -166), 0), 100000000, 0, -165), 0, (("library/lib.mli", 117, 4163, 4165), ("library/lib.mli", 119, 4227, 4263), 0), 0, Tag1 ("Lib", 42)), 0); (("start_modtype", 1016), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "module_ident"), 0, (0)), 100000000, 0, -164), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -163), (Tag1 (0, (Tag3 ((("summary", 1007)), 0, (0)), 100000000, 0, -162), (Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -161), 0), 100000000, 0, -160), 0), 100000000, 0, -159), 0), 100000000, 0, -158), 0, (("library/lib.mli", 121, 4265, 4267), ("library/lib.mli", 123, 4320, 4356), 0), 0, Tag1 ("Lib", 43)), 0); (("end_module", 1017), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -157), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -154); (Tag3 ((("summary", 1007)), 0, (0)), 100000000, 0, -155); (Tag3 ((("classified_objects", 1008)), 0, (0)), 100000000, 0, -156)]), 100000000, 0, -153), 0), 100000000, 0, -152), 0, (("library/lib.mli", 125, 4358, 4360), ("library/lib.mli", 127, 4389, 4445), 0), 0, Tag1 ("Lib", 44)), 0); (("end_modtype", 1018), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -151), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -148); (Tag3 ((("summary", 1007)), 0, (0)), 100000000, 0, -149); (Tag3 ((("classified_objects", 1008)), 0, (0)), 100000000, 0, -150)]), 100000000, 0, -147), 0), 100000000, 0, -146), 0, (("library/lib.mli", 129, 4447, 4449), ("library/lib.mli", 131, 4479, 4535), 0), 0, Tag1 ("Lib", 45)), 0); Tag1 (("frozen", 1019), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("library/lib.mli", 133, 4537, 4539), ("library/lib.mli", 133, 4537, 4550), 0), 0, 0, 0, Tag1 ("Lib", 46)), 1, 0); (("freeze", 1020), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -145), (Tag3 ((("frozen", 1019)), 0, (0)), 100000000, 0, -144), 0), 100000000, 0, -143), 0, (("library/lib.mli", 135, 4552, 4554), ("library/lib.mli", 135, 4552, 4581), 0), 0, Tag1 ("Lib", 47)), 0); (("unfreeze", 1021), ((Tag1 (0, (Tag3 ((("frozen", 1019)), 0, (0)), 100000000, 0, -142), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -141), 0), 100000000, 0, -140), 0, (("library/lib.mli", 136, 4582, 4584), ("library/lib.mli", 136, 4582, 4613), 0), 0, Tag1 ("Lib", 48)), 0); (("init", 1022), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -139), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -138), 0), 100000000, 0, -137), 0, (("library/lib.mli", 137, 4614, 4616), ("library/lib.mli", 137, 4614, 4639), 0), 0, Tag1 ("Lib", 49)), 0); (("drop_objects", 1023), ((Tag1 (0, (Tag3 ((("frozen", 1019)), 0, (0)), 100000000, 0, -136), (Tag3 ((("frozen", 1019)), 0, (0)), 100000000, 0, -135), 0), 100000000, 0, -134), 0, (("library/lib.mli", 140, 4712, 4714), ("library/lib.mli", 140, 4712, 4749), 0), 0, Tag1 ("Lib", 50)), 0)])), 0, (("library/lib.mli", 94, 3598, 3598), ("library/lib.mli", 142, 4751, 4754), 0), Tag1 ("Lib", 51)), 0); Tag3 (("Synterp", 991), 0, (Tag1 ([Tag1 (("summary", 1024), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Summary")), "Synterp"), "frozen"), 0, (0)), 100000000, 0, -268)), 0, 0, 0, 0, (("library/lib.mli", 147, 4858, 4891), ("library/lib.mli", 147, 4858, 4928), 0), 0, 0, 0, Tag1 ("Lib", 52)), 1, 0); Tag1 (("classified_objects", 1025), (0, 0, [[(("substobjs", 604), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Libobject")), "t"), 0, (0)), 100000000, 0, -263)], (0)), 100000000, 0, -262), (("library/lib.mli", 99, 3674, 3678), ("library/lib.mli", 99, 3674, 3707), 0), 0, Tag1 ("Lib", 33)); (("keepobjs", 605), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Libobject")), "t"), 0, (0)), 100000000, 0, -265)], (0)), 100000000, 0, -264), (("library/lib.mli", 100, 3708, 3712), ("library/lib.mli", 100, 3708, 3740), 0), 0, Tag1 ("Lib", 34)); (("anticipateobjs", 606), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Libobject")), "t"), 0, (0)), 100000000, 0, -267)], (0)), 100000000, 0, -266), (("library/lib.mli", 101, 3741, 3745), ("library/lib.mli", 101, 3741, 3779), 0), 0, Tag1 ("Lib", 35))]], 1, 0, 0, 0, 0, 0, (("library/lib.mli", 98, 3644, 3646), ("library/lib.mli", 102, 3780, 3783), 0), 0, 0, 0, Tag1 ("Lib", 32)), 1, 0); (("classify_segment", 1026), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Libobject")), "t"), 0, (0)), 100000000, 0, -261)], (0)), 100000000, 0, -260), (Tag3 ((("classified_objects", 1025)), 0, (0)), 100000000, 0, -259), 0), 100000000, 0, -258), 0, (("library/lib.mli", 103, 3784, 3786), ("library/lib.mli", 103, 3784, 3847), 0), 0, Tag1 ("Lib", 36)), 0); (("find_opening_node", 1027), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -257), (Tag3 ((("node", 971)), [(Tag3 ((("summary", 1024)), 0, (0)), 100000000, 0, -256)], (0)), 100000000, 0, -255), 0), 100000000, 0, -254), 0, (("library/lib.mli", 106, 3899, 3901), ("library/lib.mli", 106, 3899, 3945), 0), 0, Tag1 ("Lib", 37)), 0); (("add_entry", 1028), ((Tag1 (0, (Tag3 ((("node", 971)), [(Tag3 ((("summary", 1024)), 0, (0)), 100000000, 0, -253)], (0)), 100000000, 0, -252), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -251), 0), 100000000, 0, -250), 0, (("library/lib.mli", 108, 3947, 3949), ("library/lib.mli", 108, 3947, 3985), 0), 0, Tag1 ("Lib", 38)), 0); (("add_leaf_entry", 1029), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Libobject")), "t"), 0, (0)), 100000000, 0, -249), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -248), 0), 100000000, 0, -247), 0, (("library/lib.mli", 109, 3986, 3988), ("library/lib.mli", 109, 3986, 4028), 0), 0, Tag1 ("Lib", 39)), 0); (("open_section", 1030), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -246), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -245), 0), 100000000, 0, -244), 0, (("library/lib.mli", 112, 4053, 4055), ("library/lib.mli", 112, 4053, 4086), 0), 0, Tag1 ("Lib", 40)), 0); (("close_section", 1031), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -243), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -242), 0), 100000000, 0, -241), 0, (("library/lib.mli", 113, 4087, 4089), ("library/lib.mli", 113, 4087, 4121), 0), 0, Tag1 ("Lib", 41)), 0); (("start_module", 1032), ((Tag1 (0, (Tag3 ((("export", 967)), 0, (0)), 100000000, 0, -240), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "module_ident"), 0, (0)), 100000000, 0, -239), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -238), (Tag1 (0, (Tag3 ((("summary", 1024)), 0, (0)), 100000000, 0, -237), (Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -236), 0), 100000000, 0, -235), 0), 100000000, 0, -234), 0), 100000000, 0, -233), 0), 100000000, 0, -232), 0, (("library/lib.mli", 117, 4163, 4165), ("library/lib.mli", 119, 4227, 4263), 0), 0, Tag1 ("Lib", 42)), 0); (("start_modtype", 1033), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "module_ident"), 0, (0)), 100000000, 0, -231), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -230), (Tag1 (0, (Tag3 ((("summary", 1024)), 0, (0)), 100000000, 0, -229), (Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -228), 0), 100000000, 0, -227), 0), 100000000, 0, -226), 0), 100000000, 0, -225), 0, (("library/lib.mli", 121, 4265, 4267), ("library/lib.mli", 123, 4320, 4356), 0), 0, Tag1 ("Lib", 43)), 0); (("end_module", 1034), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -224), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -221); (Tag3 ((("summary", 1024)), 0, (0)), 100000000, 0, -222); (Tag3 ((("classified_objects", 1025)), 0, (0)), 100000000, 0, -223)]), 100000000, 0, -220), 0), 100000000, 0, -219), 0, (("library/lib.mli", 125, 4358, 4360), ("library/lib.mli", 127, 4389, 4445), 0), 0, Tag1 ("Lib", 44)), 0); (("end_modtype", 1035), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -218), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -215); (Tag3 ((("summary", 1024)), 0, (0)), 100000000, 0, -216); (Tag3 ((("classified_objects", 1025)), 0, (0)), 100000000, 0, -217)]), 100000000, 0, -214), 0), 100000000, 0, -213), 0, (("library/lib.mli", 129, 4447, 4449), ("library/lib.mli", 131, 4479, 4535), 0), 0, Tag1 ("Lib", 45)), 0); Tag1 (("frozen", 1036), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("library/lib.mli", 133, 4537, 4539), ("library/lib.mli", 133, 4537, 4550), 0), 0, 0, 0, Tag1 ("Lib", 46)), 1, 0); (("freeze", 1037), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -212), (Tag3 ((("frozen", 1036)), 0, (0)), 100000000, 0, -211), 0), 100000000, 0, -210), 0, (("library/lib.mli", 135, 4552, 4554), ("library/lib.mli", 135, 4552, 4581), 0), 0, Tag1 ("Lib", 47)), 0); (("unfreeze", 1038), ((Tag1 (0, (Tag3 ((("frozen", 1036)), 0, (0)), 100000000, 0, -209), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -208), 0), 100000000, 0, -207), 0, (("library/lib.mli", 136, 4582, 4584), ("library/lib.mli", 136, 4582, 4613), 0), 0, Tag1 ("Lib", 48)), 0); (("init", 1039), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -206), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -205), 0), 100000000, 0, -204), 0, (("library/lib.mli", 137, 4614, 4616), ("library/lib.mli", 137, 4614, 4639), 0), 0, Tag1 ("Lib", 49)), 0); (("drop_objects", 1040), ((Tag1 (0, (Tag3 ((("frozen", 1036)), 0, (0)), 100000000, 0, -203), (Tag3 ((("frozen", 1036)), 0, (0)), 100000000, 0, -202), 0), 100000000, 0, -201), 0, (("library/lib.mli", 140, 4712, 4714), ("library/lib.mli", 140, 4712, 4749), 0), 0, Tag1 ("Lib", 50)), 0)]), 0, (("library/lib.mli", 147, 4858, 4858), ("library/lib.mli", 147, 4858, 4928), 0), Tag1 ("Lib", 53)), 0, 0); Tag3 (("Interp", 992), 0, (Tag1 ([Tag1 (("summary", 1041), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Summary")), "Interp"), "frozen"), 0, (0)), 100000000, 0, -336)), 0, 0, 0, 0, (("library/lib.mli", 148, 4929, 4961), ("library/lib.mli", 148, 4929, 4997), 0), 0, 0, 0, Tag1 ("Lib", 54)), 1, 0); Tag1 (("classified_objects", 1042), (0, 0, [[(("substobjs", 604), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Libobject")), "t"), 0, (0)), 100000000, 0, -331)], (0)), 100000000, 0, -330), (("library/lib.mli", 99, 3674, 3678), ("library/lib.mli", 99, 3674, 3707), 0), 0, Tag1 ("Lib", 33)); (("keepobjs", 605), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Libobject")), "t"), 0, (0)), 100000000, 0, -333)], (0)), 100000000, 0, -332), (("library/lib.mli", 100, 3708, 3712), ("library/lib.mli", 100, 3708, 3740), 0), 0, Tag1 ("Lib", 34)); (("anticipateobjs", 606), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Libobject")), "t"), 0, (0)), 100000000, 0, -335)], (0)), 100000000, 0, -334), (("library/lib.mli", 101, 3741, 3745), ("library/lib.mli", 101, 3741, 3779), 0), 0, Tag1 ("Lib", 35))]], 1, 0, 0, 0, 0, 0, (("library/lib.mli", 98, 3644, 3646), ("library/lib.mli", 102, 3780, 3783), 0), 0, 0, 0, Tag1 ("Lib", 32)), 1, 0); (("classify_segment", 1043), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Libobject")), "t"), 0, (0)), 100000000, 0, -329)], (0)), 100000000, 0, -328), (Tag3 ((("classified_objects", 1042)), 0, (0)), 100000000, 0, -327), 0), 100000000, 0, -326), 0, (("library/lib.mli", 103, 3784, 3786), ("library/lib.mli", 103, 3784, 3847), 0), 0, Tag1 ("Lib", 36)), 0); (("find_opening_node", 1044), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -325), (Tag3 ((("node", 971)), [(Tag3 ((("summary", 1041)), 0, (0)), 100000000, 0, -324)], (0)), 100000000, 0, -323), 0), 100000000, 0, -322), 0, (("library/lib.mli", 106, 3899, 3901), ("library/lib.mli", 106, 3899, 3945), 0), 0, Tag1 ("Lib", 37)), 0); (("add_entry", 1045), ((Tag1 (0, (Tag3 ((("node", 971)), [(Tag3 ((("summary", 1041)), 0, (0)), 100000000, 0, -321)], (0)), 100000000, 0, -320), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -319), 0), 100000000, 0, -318), 0, (("library/lib.mli", 108, 3947, 3949), ("library/lib.mli", 108, 3947, 3985), 0), 0, Tag1 ("Lib", 38)), 0); (("add_leaf_entry", 1046), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Libobject")), "t"), 0, (0)), 100000000, 0, -317), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -316), 0), 100000000, 0, -315), 0, (("library/lib.mli", 109, 3986, 3988), ("library/lib.mli", 109, 3986, 4028), 0), 0, Tag1 ("Lib", 39)), 0); (("open_section", 1047), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -314), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -313), 0), 100000000, 0, -312), 0, (("library/lib.mli", 112, 4053, 4055), ("library/lib.mli", 112, 4053, 4086), 0), 0, Tag1 ("Lib", 40)), 0); (("close_section", 1048), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -311), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -310), 0), 100000000, 0, -309), 0, (("library/lib.mli", 113, 4087, 4089), ("library/lib.mli", 113, 4087, 4121), 0), 0, Tag1 ("Lib", 41)), 0); (("start_module", 1049), ((Tag1 (0, (Tag3 ((("export", 967)), 0, (0)), 100000000, 0, -308), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "module_ident"), 0, (0)), 100000000, 0, -307), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -306), (Tag1 (0, (Tag3 ((("summary", 1041)), 0, (0)), 100000000, 0, -305), (Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -304), 0), 100000000, 0, -303), 0), 100000000, 0, -302), 0), 100000000, 0, -301), 0), 100000000, 0, -300), 0, (("library/lib.mli", 117, 4163, 4165), ("library/lib.mli", 119, 4227, 4263), 0), 0, Tag1 ("Lib", 42)), 0); (("start_modtype", 1050), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "module_ident"), 0, (0)), 100000000, 0, -299), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -298), (Tag1 (0, (Tag3 ((("summary", 1041)), 0, (0)), 100000000, 0, -297), (Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -296), 0), 100000000, 0, -295), 0), 100000000, 0, -294), 0), 100000000, 0, -293), 0, (("library/lib.mli", 121, 4265, 4267), ("library/lib.mli", 123, 4320, 4356), 0), 0, Tag1 ("Lib", 43)), 0); (("end_module", 1051), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -292), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -289); (Tag3 ((("summary", 1041)), 0, (0)), 100000000, 0, -290); (Tag3 ((("classified_objects", 1042)), 0, (0)), 100000000, 0, -291)]), 100000000, 0, -288), 0), 100000000, 0, -287), 0, (("library/lib.mli", 125, 4358, 4360), ("library/lib.mli", 127, 4389, 4445), 0), 0, Tag1 ("Lib", 44)), 0); (("end_modtype", 1052), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -286), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -283); (Tag3 ((("summary", 1041)), 0, (0)), 100000000, 0, -284); (Tag3 ((("classified_objects", 1042)), 0, (0)), 100000000, 0, -285)]), 100000000, 0, -282), 0), 100000000, 0, -281), 0, (("library/lib.mli", 129, 4447, 4449), ("library/lib.mli", 131, 4479, 4535), 0), 0, Tag1 ("Lib", 45)), 0); Tag1 (("frozen", 1053), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("library/lib.mli", 133, 4537, 4539), ("library/lib.mli", 133, 4537, 4550), 0), 0, 0, 0, Tag1 ("Lib", 46)), 1, 0); (("freeze", 1054), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -280), (Tag3 ((("frozen", 1053)), 0, (0)), 100000000, 0, -279), 0), 100000000, 0, -278), 0, (("library/lib.mli", 135, 4552, 4554), ("library/lib.mli", 135, 4552, 4581), 0), 0, Tag1 ("Lib", 47)), 0); (("unfreeze", 1055), ((Tag1 (0, (Tag3 ((("frozen", 1053)), 0, (0)), 100000000, 0, -277), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -276), 0), 100000000, 0, -275), 0, (("library/lib.mli", 136, 4582, 4584), ("library/lib.mli", 136, 4582, 4613), 0), 0, Tag1 ("Lib", 48)), 0); (("init", 1056), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -274), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -273), 0), 100000000, 0, -272), 0, (("library/lib.mli", 137, 4614, 4616), ("library/lib.mli", 137, 4614, 4639), 0), 0, Tag1 ("Lib", 49)), 0); (("drop_objects", 1057), ((Tag1 (0, (Tag3 ((("frozen", 1053)), 0, (0)), 100000000, 0, -271), (Tag3 ((("frozen", 1053)), 0, (0)), 100000000, 0, -270), 0), 100000000, 0, -269), 0, (("library/lib.mli", 140, 4712, 4714), ("library/lib.mli", 140, 4712, 4749), 0), 0, Tag1 ("Lib", 50)), 0)]), 0, (("library/lib.mli", 148, 4929, 4929), ("library/lib.mli", 148, 4929, 4997), 0), Tag1 ("Lib", 55)), 0, 0); (("start_compilation", 993), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -52), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -51), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("library/lib.mli", 152, 5030, 5030), ("library/lib.mli", 152, 5030, 5084), 0), 0, Tag1 ("Lib", 56)), 0); (("end_compilation", 994), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -47), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -44); (Tag3 (Tag1 ((("Interp", 992)), "classified_objects"), 0, (0)), 100000000, 0, -45); (Tag3 (Tag1 ((("Synterp", 991)), "classified_objects"), 0, (0)), 100000000, 0, -46)]), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("library/lib.mli", 156, 5232, 5232), ("library/lib.mli", 156, 5232, 5345), 0), 0, Tag1 ("Lib", 57)), 0); (("library_dp", 995), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -41), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("library/lib.mli", 160, 5463, 5463), ("library/lib.mli", 160, 5463, 5497), 0), 0, Tag1 ("Lib", 58)), 0); (("split_modpath", 996), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -38), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -35); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -37)], (0)), 100000000, 0, -36)]), 100000000, 0, -34), 0), 100000000, 0, -33), 0, (("library/lib.mli", 163, 5562, 5562), ("library/lib.mli", 163, 5562, 5616), 0), 0, Tag1 ("Lib", 59)), 0); (("library_part", 997), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -32), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("library/lib.mli", 164, 5617, 5617), ("library/lib.mli", 164, 5617, 5659), 0), 0, Tag1 ("Lib", 60)), 0); (("section_segment_of_constant", 998), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -29), (Tag3 (Tag1 ((Tag2 ("Cooking")), "cooking_info"), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("library/lib.mli", 167, 5706, 5706), ("library/lib.mli", 167, 5706, 5774), 0), 0, Tag1 ("Lib", 61)), 0); (("section_segment_of_inductive", 999), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MutInd"), "t"), 0, (0)), 100000000, 0, -26), (Tag3 (Tag1 ((Tag2 ("Cooking")), "cooking_info"), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("library/lib.mli", 168, 5775, 5775), ("library/lib.mli", 168, 5775, 5841), 0), 0, Tag1 ("Lib", 62)), 0); (("section_segment_of_reference", 1000), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -23), (Tag3 (Tag1 ((Tag2 ("Cooking")), "cooking_info"), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("library/lib.mli", 169, 5842, 5842), ("library/lib.mli", 169, 5842, 5910), 0), 0, Tag1 ("Lib", 63)), 0); (("section_instance", 1001), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -20), (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "t"), 0, (0)), 100000000, 0, -19)], (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("library/lib.mli", 171, 5912, 5912), ("library/lib.mli", 171, 5912, 5962), 0), 0, Tag1 ("Lib", 65)), 0); (("is_in_section", 1002), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -16), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("library/lib.mli", 172, 5963, 5963), ("library/lib.mli", 172, 5963, 6000), 0), 0, Tag1 ("Lib", 66)), 0); (("discharge_proj_repr", 1003), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Projection"), "Repr"), "t"), 0, (0)), 100000000, 0, -13), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Projection"), "Repr"), "t"), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("library/lib.mli", 176, 6079, 6079), ("library/lib.mli", 176, 6079, 6143), 0), 0, Tag1 ("Lib", 67)), 0); (("init", 1004), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("library/lib.mli", 180, 6173, 6173), ("library/lib.mli", 180, 6173, 6196), 0), 0, Tag1 ("Lib", 68)), 0); (("open_section", 1005), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("library/lib.mli", 182, 6198, 6198), ("library/lib.mli", 182, 6198, 6229), 0), 0, Tag1 ("Lib", 69)), 0); (("close_section", 1006), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("library/lib.mli", 183, 6230, 6230), ("library/lib.mli", 183, 6230, 6262), 0), 0, Tag1 ("Lib", 70)), 0)], "Lib", [("Lib", ("8\018\021\210\020\136$\149\164=\007\002\218\026RX")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Nametab", ("1\018\163\254\225\2178\025DI\0271Q\198\134\140")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libobject", ("\132}t\226hl\213L\210\172\167pc\012~\129")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Globnames", ("W\004\172T\214\181H\220\232\160LSW\006\130\226")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Deprecation", ("\226:\146\245\190;\1929\254@\247a\218\244\134\189")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CWarnings", ("\132\220\150\227\215\239t\217\132\220'JX\188\246c")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])

val close_section : unit -> unit
