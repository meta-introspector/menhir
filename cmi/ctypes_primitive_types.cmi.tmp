type _ prim =
    Char : char prim
  | Schar : int prim
  | Uchar : Unsigned.uchar prim
  | Bool : bool prim
  | Short : int prim
  | Int : int prim
  | Long : Signed.long prim
  | Llong : Signed.llong prim
  | Ushort : Unsigned.ushort prim
  | Sint : Signed.sint prim
  | Uint : Unsigned.uint prim
  | Ulong : Unsigned.ulong prim
  | Ullong : Unsigned.ullong prim
  | Size_t : Unsigned.size_t prim
  | Int8_t : int prim
  | Int16_t : int prim
  | Int32_t : int32 prim
  | Int64_t : int64 prim
  | Uint8_t : Unsigned.uint8 prim
  | Uint16_t : Unsigned.uint16 prim
  | Uint32_t : Unsigned.uint32 prim
  | Uint64_t : Unsigned.uint64 prim
  | Camlint : int prim
  | Nativeint : nativeint prim
  | Float : float prim
  | Double : float prim
  | LDouble : LDouble.t prim
  | Complex32 : Complex.t prim
  | Complex64 : Complex.t prim
  | Complexld : ComplexL.t prim
type _ ml_prim =
    ML_char : char ml_prim
  | ML_complex : Complex.t ml_prim
  | ML_complexld : ComplexL.t ml_prim
  | ML_float : float ml_prim
  | ML_ldouble : LDouble.t ml_prim
  | ML_int : int ml_prim
  | ML_int32 : int32 ml_prim
  | ML_int64 : int64 ml_prim
  | ML_llong : Signed.llong ml_prim
  | ML_long : Signed.long ml_prim
  | ML_sint : Signed.sint ml_prim
  | ML_nativeint : nativeint ml_prim
  | ML_size_t : Unsigned.size_t ml_prim
  | ML_uchar : Unsigned.uchar ml_prim
  | ML_bool : bool ml_prim
  | ML_uint : Unsigned.uint ml_prim
  | ML_uint16 : Unsigned.uint16 ml_prim
  | ML_uint32 : Unsigned.uint32 ml_prim
  | ML_uint64 : Unsigned.uint64 ml_prim
  | ML_uint8 : Unsigned.uint8 ml_prim
  | ML_ullong : Unsigned.ullong ml_prim
  | ML_ulong : Unsigned.ulong ml_prim
  | ML_ushort : Unsigned.ushort ml_prim("DEBUG:rule", [Tag1 (("prim", 709), ([((("_")), 100000000, 0, -113)], 1, Tag1 ([(("Char", 305), (0), ((Tag3 ((("prim", 709)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -54)], (0)), 100000000, 0, -53)), (("src/ctypes/ctypes_primitive_types.mli", 16, 283, 284), ("src/ctypes/ctypes_primitive_types.mli", 16, 283, 302), 0), 0, Tag1 ("Ctypes_primitive_types", 1)); (("Schar", 306), (0), ((Tag3 ((("prim", 709)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -56)], (0)), 100000000, 0, -55)), (("src/ctypes/ctypes_primitive_types.mli", 17, 303, 304), ("src/ctypes/ctypes_primitive_types.mli", 17, 303, 322), 0), 0, Tag1 ("Ctypes_primitive_types", 2)); (("Uchar", 307), (0), ((Tag3 ((("prim", 709)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "uchar"), 0, (0)), 100000000, 0, -58)], (0)), 100000000, 0, -57)), (("src/ctypes/ctypes_primitive_types.mli", 18, 323, 324), ("src/ctypes/ctypes_primitive_types.mli", 18, 323, 344), 0), 0, Tag1 ("Ctypes_primitive_types", 3)); (("Bool", 308), (0), ((Tag3 ((("prim", 709)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -60)], (0)), 100000000, 0, -59)), (("src/ctypes/ctypes_primitive_types.mli", 19, 345, 346), ("src/ctypes/ctypes_primitive_types.mli", 19, 345, 364), 0), 0, Tag1 ("Ctypes_primitive_types", 4)); (("Short", 309), (0), ((Tag3 ((("prim", 709)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -62)], (0)), 100000000, 0, -61)), (("src/ctypes/ctypes_primitive_types.mli", 20, 365, 366), ("src/ctypes/ctypes_primitive_types.mli", 20, 365, 384), 0), 0, Tag1 ("Ctypes_primitive_types", 5)); (("Int", 310), (0), ((Tag3 ((("prim", 709)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -64)], (0)), 100000000, 0, -63)), (("src/ctypes/ctypes_primitive_types.mli", 21, 385, 386), ("src/ctypes/ctypes_primitive_types.mli", 21, 385, 402), 0), 0, Tag1 ("Ctypes_primitive_types", 6)); (("Long", 311), (0), ((Tag3 ((("prim", 709)), [(Tag3 (Tag1 ((Tag2 ("Signed")), "long"), 0, (0)), 100000000, 0, -66)], (0)), 100000000, 0, -65)), (("src/ctypes/ctypes_primitive_types.mli", 22, 403, 404), ("src/ctypes/ctypes_primitive_types.mli", 22, 403, 422), 0), 0, Tag1 ("Ctypes_primitive_types", 7)); (("Llong", 312), (0), ((Tag3 ((("prim", 709)), [(Tag3 (Tag1 ((Tag2 ("Signed")), "llong"), 0, (0)), 100000000, 0, -68)], (0)), 100000000, 0, -67)), (("src/ctypes/ctypes_primitive_types.mli", 23, 423, 424), ("src/ctypes/ctypes_primitive_types.mli", 23, 423, 444), 0), 0, Tag1 ("Ctypes_primitive_types", 8)); (("Ushort", 313), (0), ((Tag3 ((("prim", 709)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "ushort"), 0, (0)), 100000000, 0, -70)], (0)), 100000000, 0, -69)), (("src/ctypes/ctypes_primitive_types.mli", 24, 445, 446), ("src/ctypes/ctypes_primitive_types.mli", 24, 445, 468), 0), 0, Tag1 ("Ctypes_primitive_types", 9)); (("Sint", 314), (0), ((Tag3 ((("prim", 709)), [(Tag3 (Tag1 ((Tag2 ("Signed")), "sint"), 0, (0)), 100000000, 0, -72)], (0)), 100000000, 0, -71)), (("src/ctypes/ctypes_primitive_types.mli", 25, 469, 470), ("src/ctypes/ctypes_primitive_types.mli", 25, 469, 488), 0), 0, Tag1 ("Ctypes_primitive_types", 10)); (("Uint", 315), (0), ((Tag3 ((("prim", 709)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "uint"), 0, (0)), 100000000, 0, -74)], (0)), 100000000, 0, -73)), (("src/ctypes/ctypes_primitive_types.mli", 26, 489, 490), ("src/ctypes/ctypes_primitive_types.mli", 26, 489, 508), 0), 0, Tag1 ("Ctypes_primitive_types", 11)); (("Ulong", 316), (0), ((Tag3 ((("prim", 709)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "ulong"), 0, (0)), 100000000, 0, -76)], (0)), 100000000, 0, -75)), (("src/ctypes/ctypes_primitive_types.mli", 27, 509, 510), ("src/ctypes/ctypes_primitive_types.mli", 27, 509, 530), 0), 0, Tag1 ("Ctypes_primitive_types", 12)); (("Ullong", 317), (0), ((Tag3 ((("prim", 709)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "ullong"), 0, (0)), 100000000, 0, -78)], (0)), 100000000, 0, -77)), (("src/ctypes/ctypes_primitive_types.mli", 28, 531, 532), ("src/ctypes/ctypes_primitive_types.mli", 28, 531, 554), 0), 0, Tag1 ("Ctypes_primitive_types", 13)); (("Size_t", 318), (0), ((Tag3 ((("prim", 709)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "size_t"), 0, (0)), 100000000, 0, -80)], (0)), 100000000, 0, -79)), (("src/ctypes/ctypes_primitive_types.mli", 29, 555, 556), ("src/ctypes/ctypes_primitive_types.mli", 29, 555, 578), 0), 0, Tag1 ("Ctypes_primitive_types", 14)); (("Int8_t", 319), (0), ((Tag3 ((("prim", 709)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -82)], (0)), 100000000, 0, -81)), (("src/ctypes/ctypes_primitive_types.mli", 30, 579, 580), ("src/ctypes/ctypes_primitive_types.mli", 30, 579, 599), 0), 0, Tag1 ("Ctypes_primitive_types", 15)); (("Int16_t", 320), (0), ((Tag3 ((("prim", 709)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -84)], (0)), 100000000, 0, -83)), (("src/ctypes/ctypes_primitive_types.mli", 31, 600, 601), ("src/ctypes/ctypes_primitive_types.mli", 31, 600, 621), 0), 0, Tag1 ("Ctypes_primitive_types", 16)); (("Int32_t", 321), (0), ((Tag3 ((("prim", 709)), [(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -86)], (0)), 100000000, 0, -85)), (("src/ctypes/ctypes_primitive_types.mli", 32, 622, 623), ("src/ctypes/ctypes_primitive_types.mli", 32, 622, 645), 0), 0, Tag1 ("Ctypes_primitive_types", 17)); (("Int64_t", 322), (0), ((Tag3 ((("prim", 709)), [(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -88)], (0)), 100000000, 0, -87)), (("src/ctypes/ctypes_primitive_types.mli", 33, 646, 647), ("src/ctypes/ctypes_primitive_types.mli", 33, 646, 669), 0), 0, Tag1 ("Ctypes_primitive_types", 18)); (("Uint8_t", 323), (0), ((Tag3 ((("prim", 709)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "uint8"), 0, (0)), 100000000, 0, -90)], (0)), 100000000, 0, -89)), (("src/ctypes/ctypes_primitive_types.mli", 34, 670, 671), ("src/ctypes/ctypes_primitive_types.mli", 34, 670, 693), 0), 0, Tag1 ("Ctypes_primitive_types", 19)); (("Uint16_t", 324), (0), ((Tag3 ((("prim", 709)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "uint16"), 0, (0)), 100000000, 0, -92)], (0)), 100000000, 0, -91)), (("src/ctypes/ctypes_primitive_types.mli", 35, 694, 695), ("src/ctypes/ctypes_primitive_types.mli", 35, 694, 719), 0), 0, Tag1 ("Ctypes_primitive_types", 20)); (("Uint32_t", 325), (0), ((Tag3 ((("prim", 709)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "uint32"), 0, (0)), 100000000, 0, -94)], (0)), 100000000, 0, -93)), (("src/ctypes/ctypes_primitive_types.mli", 36, 720, 721), ("src/ctypes/ctypes_primitive_types.mli", 36, 720, 745), 0), 0, Tag1 ("Ctypes_primitive_types", 21)); (("Uint64_t", 326), (0), ((Tag3 ((("prim", 709)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "uint64"), 0, (0)), 100000000, 0, -96)], (0)), 100000000, 0, -95)), (("src/ctypes/ctypes_primitive_types.mli", 37, 746, 747), ("src/ctypes/ctypes_primitive_types.mli", 37, 746, 771), 0), 0, Tag1 ("Ctypes_primitive_types", 22)); (("Camlint", 327), (0), ((Tag3 ((("prim", 709)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -98)], (0)), 100000000, 0, -97)), (("src/ctypes/ctypes_primitive_types.mli", 38, 772, 773), ("src/ctypes/ctypes_primitive_types.mli", 38, 772, 793), 0), 0, Tag1 ("Ctypes_primitive_types", 23)); (("Nativeint", 328), (0), ((Tag3 ((("prim", 709)), [(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -100)], (0)), 100000000, 0, -99)), (("src/ctypes/ctypes_primitive_types.mli", 39, 794, 795), ("src/ctypes/ctypes_primitive_types.mli", 39, 794, 823), 0), 0, Tag1 ("Ctypes_primitive_types", 24)); (("Float", 329), (0), ((Tag3 ((("prim", 709)), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -102)], (0)), 100000000, 0, -101)), (("src/ctypes/ctypes_primitive_types.mli", 40, 824, 825), ("src/ctypes/ctypes_primitive_types.mli", 40, 824, 845), 0), 0, Tag1 ("Ctypes_primitive_types", 25)); (("Double", 330), (0), ((Tag3 ((("prim", 709)), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -104)], (0)), 100000000, 0, -103)), (("src/ctypes/ctypes_primitive_types.mli", 41, 846, 847), ("src/ctypes/ctypes_primitive_types.mli", 41, 846, 868), 0), 0, Tag1 ("Ctypes_primitive_types", 26)); (("LDouble", 331), (0), ((Tag3 ((("prim", 709)), [(Tag3 (Tag1 ((Tag2 ("LDouble")), "t"), 0, (0)), 100000000, 0, -106)], (0)), 100000000, 0, -105)), (("src/ctypes/ctypes_primitive_types.mli", 42, 869, 870), ("src/ctypes/ctypes_primitive_types.mli", 42, 869, 896), 0), 0, Tag1 ("Ctypes_primitive_types", 27)); (("Complex32", 384), (0), ((Tag3 ((("prim", 709)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Complex"), "t"), 0, (0)), 100000000, 0, -108)], (0)), 100000000, 0, -107)), (("src/ctypes/ctypes_primitive_types.mli", 43, 897, 898), ("src/ctypes/ctypes_primitive_types.mli", 43, 897, 926), 0), 0, Tag1 ("Ctypes_primitive_types", 28)); (("Complex64", 404), (0), ((Tag3 ((("prim", 709)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Complex"), "t"), 0, (0)), 100000000, 0, -110)], (0)), 100000000, 0, -109)), (("src/ctypes/ctypes_primitive_types.mli", 44, 927, 928), ("src/ctypes/ctypes_primitive_types.mli", 44, 927, 956), 0), 0, Tag1 ("Ctypes_primitive_types", 29)); (("Complexld", 405), (0), ((Tag3 ((("prim", 709)), [(Tag3 (Tag1 ((Tag2 ("ComplexL")), "t"), 0, (0)), 100000000, 0, -112)], (0)), 100000000, 0, -111)), (("src/ctypes/ctypes_primitive_types.mli", 45, 957, 958), ("src/ctypes/ctypes_primitive_types.mli", 45, 957, 987), 0), 0, Tag1 ("Ctypes_primitive_types", 30))], 0), 1, 0, [63], [0], 0, 0, (("src/ctypes/ctypes_primitive_types.mli", 15, 269, 269), ("src/ctypes/ctypes_primitive_types.mli", 45, 957, 987), 0), 0, 1, 0, Tag1 ("Ctypes_primitive_types", 0)), 1, 0); Tag1 (("ml_prim", 710), ([((("_")), 100000000, 0, -52)], 1, Tag1 ([(("ML_char", 685), (0), ((Tag3 ((("ml_prim", 710)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -7)], (0)), 100000000, 0, -6)), (("src/ctypes/ctypes_primitive_types.mli", 48, 1007, 1009), ("src/ctypes/ctypes_primitive_types.mli", 48, 1007, 1034), 0), 0, Tag1 ("Ctypes_primitive_types", 32)); (("ML_complex", 686), (0), ((Tag3 ((("ml_prim", 710)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Complex"), "t"), 0, (0)), 100000000, 0, -9)], (0)), 100000000, 0, -8)), (("src/ctypes/ctypes_primitive_types.mli", 49, 1035, 1037), ("src/ctypes/ctypes_primitive_types.mli", 49, 1035, 1070), 0), 0, Tag1 ("Ctypes_primitive_types", 33)); (("ML_complexld", 687), (0), ((Tag3 ((("ml_prim", 710)), [(Tag3 (Tag1 ((Tag2 ("ComplexL")), "t"), 0, (0)), 100000000, 0, -11)], (0)), 100000000, 0, -10)), (("src/ctypes/ctypes_primitive_types.mli", 50, 1071, 1073), ("src/ctypes/ctypes_primitive_types.mli", 50, 1071, 1109), 0), 0, Tag1 ("Ctypes_primitive_types", 34)); (("ML_float", 688), (0), ((Tag3 ((("ml_prim", 710)), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -13)], (0)), 100000000, 0, -12)), (("src/ctypes/ctypes_primitive_types.mli", 51, 1110, 1112), ("src/ctypes/ctypes_primitive_types.mli", 51, 1110, 1139), 0), 0, Tag1 ("Ctypes_primitive_types", 35)); (("ML_ldouble", 689), (0), ((Tag3 ((("ml_prim", 710)), [(Tag3 (Tag1 ((Tag2 ("LDouble")), "t"), 0, (0)), 100000000, 0, -15)], (0)), 100000000, 0, -14)), (("src/ctypes/ctypes_primitive_types.mli", 52, 1140, 1142), ("src/ctypes/ctypes_primitive_types.mli", 52, 1140, 1175), 0), 0, Tag1 ("Ctypes_primitive_types", 36)); (("ML_int", 690), (0), ((Tag3 ((("ml_prim", 710)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -17)], (0)), 100000000, 0, -16)), (("src/ctypes/ctypes_primitive_types.mli", 53, 1176, 1178), ("src/ctypes/ctypes_primitive_types.mli", 53, 1176, 1201), 0), 0, Tag1 ("Ctypes_primitive_types", 37)); (("ML_int32", 691), (0), ((Tag3 ((("ml_prim", 710)), [(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -19)], (0)), 100000000, 0, -18)), (("src/ctypes/ctypes_primitive_types.mli", 54, 1202, 1204), ("src/ctypes/ctypes_primitive_types.mli", 54, 1202, 1231), 0), 0, Tag1 ("Ctypes_primitive_types", 38)); (("ML_int64", 692), (0), ((Tag3 ((("ml_prim", 710)), [(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -21)], (0)), 100000000, 0, -20)), (("src/ctypes/ctypes_primitive_types.mli", 55, 1232, 1234), ("src/ctypes/ctypes_primitive_types.mli", 55, 1232, 1261), 0), 0, Tag1 ("Ctypes_primitive_types", 39)); (("ML_llong", 693), (0), ((Tag3 ((("ml_prim", 710)), [(Tag3 (Tag1 ((Tag2 ("Signed")), "llong"), 0, (0)), 100000000, 0, -23)], (0)), 100000000, 0, -22)), (("src/ctypes/ctypes_primitive_types.mli", 56, 1262, 1264), ("src/ctypes/ctypes_primitive_types.mli", 56, 1262, 1291), 0), 0, Tag1 ("Ctypes_primitive_types", 40)); (("ML_long", 694), (0), ((Tag3 ((("ml_prim", 710)), [(Tag3 (Tag1 ((Tag2 ("Signed")), "long"), 0, (0)), 100000000, 0, -25)], (0)), 100000000, 0, -24)), (("src/ctypes/ctypes_primitive_types.mli", 57, 1292, 1294), ("src/ctypes/ctypes_primitive_types.mli", 57, 1292, 1319), 0), 0, Tag1 ("Ctypes_primitive_types", 41)); (("ML_sint", 695), (0), ((Tag3 ((("ml_prim", 710)), [(Tag3 (Tag1 ((Tag2 ("Signed")), "sint"), 0, (0)), 100000000, 0, -27)], (0)), 100000000, 0, -26)), (("src/ctypes/ctypes_primitive_types.mli", 58, 1320, 1322), ("src/ctypes/ctypes_primitive_types.mli", 58, 1320, 1346), 0), 0, Tag1 ("Ctypes_primitive_types", 42)); (("ML_nativeint", 696), (0), ((Tag3 ((("ml_prim", 710)), [(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -29)], (0)), 100000000, 0, -28)), (("src/ctypes/ctypes_primitive_types.mli", 59, 1347, 1349), ("src/ctypes/ctypes_primitive_types.mli", 59, 1347, 1384), 0), 0, Tag1 ("Ctypes_primitive_types", 43)); (("ML_size_t", 697), (0), ((Tag3 ((("ml_prim", 710)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "size_t"), 0, (0)), 100000000, 0, -31)], (0)), 100000000, 0, -30)), (("src/ctypes/ctypes_primitive_types.mli", 60, 1385, 1387), ("src/ctypes/ctypes_primitive_types.mli", 60, 1385, 1416), 0), 0, Tag1 ("Ctypes_primitive_types", 44)); (("ML_uchar", 698), (0), ((Tag3 ((("ml_prim", 710)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "uchar"), 0, (0)), 100000000, 0, -33)], (0)), 100000000, 0, -32)), (("src/ctypes/ctypes_primitive_types.mli", 61, 1417, 1419), ("src/ctypes/ctypes_primitive_types.mli", 61, 1417, 1446), 0), 0, Tag1 ("Ctypes_primitive_types", 45)); (("ML_bool", 699), (0), ((Tag3 ((("ml_prim", 710)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -35)], (0)), 100000000, 0, -34)), (("src/ctypes/ctypes_primitive_types.mli", 62, 1447, 1449), ("src/ctypes/ctypes_primitive_types.mli", 62, 1447, 1474), 0), 0, Tag1 ("Ctypes_primitive_types", 46)); (("ML_uint", 700), (0), ((Tag3 ((("ml_prim", 710)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "uint"), 0, (0)), 100000000, 0, -37)], (0)), 100000000, 0, -36)), (("src/ctypes/ctypes_primitive_types.mli", 63, 1475, 1477), ("src/ctypes/ctypes_primitive_types.mli", 63, 1475, 1502), 0), 0, Tag1 ("Ctypes_primitive_types", 47)); (("ML_uint16", 701), (0), ((Tag3 ((("ml_prim", 710)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "uint16"), 0, (0)), 100000000, 0, -39)], (0)), 100000000, 0, -38)), (("src/ctypes/ctypes_primitive_types.mli", 64, 1503, 1505), ("src/ctypes/ctypes_primitive_types.mli", 64, 1503, 1534), 0), 0, Tag1 ("Ctypes_primitive_types", 48)); (("ML_uint32", 702), (0), ((Tag3 ((("ml_prim", 710)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "uint32"), 0, (0)), 100000000, 0, -41)], (0)), 100000000, 0, -40)), (("src/ctypes/ctypes_primitive_types.mli", 65, 1535, 1537), ("src/ctypes/ctypes_primitive_types.mli", 65, 1535, 1566), 0), 0, Tag1 ("Ctypes_primitive_types", 49)); (("ML_uint64", 703), (0), ((Tag3 ((("ml_prim", 710)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "uint64"), 0, (0)), 100000000, 0, -43)], (0)), 100000000, 0, -42)), (("src/ctypes/ctypes_primitive_types.mli", 66, 1567, 1569), ("src/ctypes/ctypes_primitive_types.mli", 66, 1567, 1598), 0), 0, Tag1 ("Ctypes_primitive_types", 50)); (("ML_uint8", 704), (0), ((Tag3 ((("ml_prim", 710)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "uint8"), 0, (0)), 100000000, 0, -45)], (0)), 100000000, 0, -44)), (("src/ctypes/ctypes_primitive_types.mli", 67, 1599, 1601), ("src/ctypes/ctypes_primitive_types.mli", 67, 1599, 1628), 0), 0, Tag1 ("Ctypes_primitive_types", 51)); (("ML_ullong", 705), (0), ((Tag3 ((("ml_prim", 710)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "ullong"), 0, (0)), 100000000, 0, -47)], (0)), 100000000, 0, -46)), (("src/ctypes/ctypes_primitive_types.mli", 68, 1629, 1631), ("src/ctypes/ctypes_primitive_types.mli", 68, 1629, 1660), 0), 0, Tag1 ("Ctypes_primitive_types", 52)); (("ML_ulong", 706), (0), ((Tag3 ((("ml_prim", 710)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "ulong"), 0, (0)), 100000000, 0, -49)], (0)), 100000000, 0, -48)), (("src/ctypes/ctypes_primitive_types.mli", 69, 1661, 1663), ("src/ctypes/ctypes_primitive_types.mli", 69, 1661, 1690), 0), 0, Tag1 ("Ctypes_primitive_types", 53)); (("ML_ushort", 707), (0), ((Tag3 ((("ml_prim", 710)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "ushort"), 0, (0)), 100000000, 0, -51)], (0)), 100000000, 0, -50)), (("src/ctypes/ctypes_primitive_types.mli", 70, 1691, 1693), ("src/ctypes/ctypes_primitive_types.mli", 70, 1691, 1722), 0), 0, Tag1 ("Ctypes_primitive_types", 54))], 0), 1, 0, [63], [0], 0, 0, (("src/ctypes/ctypes_primitive_types.mli", 47, 989, 989), ("src/ctypes/ctypes_primitive_types.mli", 70, 1691, 1722), 0), 0, 1, 0, Tag1 ("Ctypes_primitive_types", 31)), 1, 0); (("ml_prim", 711), ((Tag1 (0, (Tag3 ((("prim", 709)), [((("a")), 100000000, 0, -4)], (0)), 100000000, 0, -5), (Tag3 ((("ml_prim", 710)), [((("a")), 100000000, 0, -4)], (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/ctypes/ctypes_primitive_types.mli", 72, 1724, 1724), ("src/ctypes/ctypes_primitive_types.mli", 72, 1724, 1759), 0), 0, Tag1 ("Ctypes_primitive_types", 55)), 0)], "Ctypes_primitive_types", [("Ctypes_primitive_types", ("\147\237\001\150\136\017Z\2308\137C\245\023\133\161\158")); ("Unsigned", ("cd\205\030\181\167\151\005!\134;\177\228\249\168+")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Signed", ("R\017i\"\030\024\134f\143\198\192\180>t\175\225")); ("LDouble", ("j\251\140\230^u\251\210\143\236T\207\022\147\011\211")); ("ComplexL", ("\n\230\139\192\213\0226\203\176\242\200\205c\155ag")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val ml_prim : 'a prim -> 'a ml_prim
