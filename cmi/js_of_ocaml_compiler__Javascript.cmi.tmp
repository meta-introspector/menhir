module Num :
  sig
    type t
    val of_string_unsafe : string -> t
    val of_int32 : int32 -> t
    val of_float : float -> t
    val to_string : t -> string
    val to_int32 : t -> int32
    val is_zero : t -> bool
    val is_one : t -> bool
    val is_neg : t -> bool
    val add : t -> t -> t
    val neg : t -> t
  end
module Label :
  sig
    type t =
        L of Js_of_ocaml_compiler.Code.Var.t
      | S of Js_of_ocaml_compiler.Stdlib.Utf8_string.t
    val fresh : unit -> t
    val of_string : Js_of_ocaml_compiler.Stdlib.Utf8_string.t -> t
  end
type location = Pi of Js_of_ocaml_compiler.Parse_info.t | N | U
type identifier = Js_of_ocaml_compiler.Stdlib.Utf8_string.t
type ident_string = {
  name : identifier;
  var : Js_of_ocaml_compiler.Code.Var.t option;
  loc : location;
}
type early_error = {
  loc : Js_of_ocaml_compiler.Parse_info.t;
  reason : string option;
}
type ident = S of ident_string | V of Js_of_ocaml_compiler.Code.Var.t
and array_litteral = element_list
and element_list = element list
and element =
    ElementHole
  | Element of expression
  | ElementSpread of expression
and binop =
    Eq
  | StarEq
  | SlashEq
  | ModEq
  | PlusEq
  | MinusEq
  | LslEq
  | AsrEq
  | LsrEq
  | BandEq
  | BxorEq
  | BorEq
  | Or
  | OrEq
  | And
  | AndEq
  | Bor
  | Bxor
  | Band
  | EqEq
  | NotEq
  | EqEqEq
  | NotEqEq
  | Lt
  | Le
  | Gt
  | Ge
  | LtInt
  | LeInt
  | GtInt
  | GeInt
  | InstanceOf
  | In
  | Lsl
  | Lsr
  | Asr
  | Plus
  | Minus
  | Mul
  | Div
  | Mod
  | Exp
  | ExpEq
  | Coalesce
  | CoalesceEq
and unop =
    Not
  | Neg
  | Pl
  | Typeof
  | Void
  | Delete
  | Bnot
  | IncrA
  | DecrA
  | IncrB
  | DecrB
  | Await
and arguments = argument list
and argument = Arg of expression | ArgSpread of expression
and property_list = property list
and property =
    Property of property_name * expression
  | PropertySpread of expression
  | PropertyMethod of property_name * method_
  | CoverInitializedName of early_error * ident * initialiser
and method_ =
    MethodGet of function_declaration
  | MethodSet of function_declaration
  | Method of function_declaration
and property_name =
    PNI of identifier
  | PNS of Js_of_ocaml_compiler.Stdlib.Utf8_string.t
  | PNN of Num.t
  | PComputed of expression
and expression =
    ESeq of expression * expression
  | ECond of expression * expression * expression
  | EAssignTarget of binding_pattern
  | EBin of binop * expression * expression
  | EUn of unop * expression
  | ECall of expression * access_kind * arguments * location
  | ECallTemplate of expression * template * location
  | EAccess of expression * access_kind * expression
  | EDot of expression * access_kind * identifier
  | ENew of expression * arguments option
  | EVar of ident
  | EFun of ident option * function_declaration
  | EClass of ident option * class_declaration
  | EArrow of function_declaration * arrow_info
  | EStr of Js_of_ocaml_compiler.Stdlib.Utf8_string.t
  | ETemplate of template
  | EArr of array_litteral
  | EBool of bool
  | ENum of Num.t
  | EObj of property_list
  | ERegexp of string * string option
  | EYield of expression option
  | CoverParenthesizedExpressionAndArrowParameterList of early_error
  | CoverCallExpressionAndAsyncArrowHead of early_error
and arrow_info = AUnknown | AUse_parent_fun_context | ANo_fun_context
and template = template_part list
and template_part =
    TStr of Js_of_ocaml_compiler.Stdlib.Utf8_string.t
  | TExp of expression
and access_kind = ANormal | ANullish
and statement =
    Block of block
  | Variable_statement of variable_declaration_kind *
      variable_declaration list
  | Function_declaration of ident * function_declaration
  | Class_declaration of ident * class_declaration
  | Empty_statement
  | Expression_statement of expression
  | If_statement of expression * (statement * location) *
      (statement * location) option
  | Do_while_statement of (statement * location) * expression
  | While_statement of expression * (statement * location)
  | For_statement of
      (expression option,
       variable_declaration_kind * variable_declaration list)
      either * expression option * expression option * (statement * location)
  | ForIn_statement of
      (expression, variable_declaration_kind * for_binding) either *
      expression * (statement * location)
  | ForOf_statement of
      (expression, variable_declaration_kind * for_binding) either *
      expression * (statement * location)
  | Continue_statement of Label.t option
  | Break_statement of Label.t option
  | Return_statement of expression option
  | Labelled_statement of Label.t * (statement * location)
  | Switch_statement of expression * case_clause list *
      statement_list option * case_clause list
  | Throw_statement of expression
  | Try_statement of block * (formal_parameter option * block) option *
      block option
  | Debugger_statement
  | Import of import * Js_of_ocaml_compiler.Parse_info.t
  | Export of export * Js_of_ocaml_compiler.Parse_info.t
and ('left, 'right) either = Left of 'left | Right of 'right
and block = statement_list
and statement_list = (statement * location) list
and variable_declaration =
    DeclIdent of binding_ident * initialiser option
  | DeclPattern of binding_pattern * initialiser
and variable_declaration_kind = Var | Let | Const
and case_clause = expression * statement_list
and initialiser = expression * location
and function_declaration =
    function_kind * formal_parameter_list * function_body * location
and function_kind = { async : bool; generator : bool; }
and class_declaration = {
  extends : expression option;
  body : class_element list;
}
and class_element =
    CEMethod of bool * class_element_name * method_
  | CEField of bool * class_element_name * initialiser option
  | CEStaticBLock of statement_list
and class_element_name = PropName of property_name | PrivName of ident
and ('a, 'b) list_with_rest = { list : 'a list; rest : 'b option; }
and formal_parameter_list = (formal_parameter, binding) list_with_rest
and formal_parameter = binding_element
and for_binding = binding
and binding_element = binding * initialiser option
and binding =
    BindingIdent of binding_ident
  | BindingPattern of binding_pattern
and binding_pattern =
    ObjectBinding of (binding_property, binding_ident) list_with_rest
  | ArrayBinding of (binding_element option, binding) list_with_rest
and binding_ident = ident
and binding_property =
    Prop_binding of property_name * binding_element
  | Prop_ident of binding_ident * initialiser option
and function_body = statement_list
and program = statement_list
and export =
    ExportVar of variable_declaration_kind * variable_declaration list
  | ExportFun of ident * function_declaration
  | ExportClass of ident * class_declaration
  | ExportNames of (ident * Js_of_ocaml_compiler.Stdlib.Utf8_string.t) list
  | ExportDefaultFun of ident * function_declaration
  | ExportDefaultClass of ident * class_declaration
  | ExportDefaultExpression of expression
  | ExportFrom of { kind : export_from_kind;
      from : Js_of_ocaml_compiler.Stdlib.Utf8_string.t;
    }
  | CoverExportFrom of early_error
and export_from_kind =
    Export_all of Js_of_ocaml_compiler.Stdlib.Utf8_string.t option
  | Export_names of
      (Js_of_ocaml_compiler.Stdlib.Utf8_string.t *
       Js_of_ocaml_compiler.Stdlib.Utf8_string.t)
      list
and import = {
  from : Js_of_ocaml_compiler.Stdlib.Utf8_string.t;
  kind : import_kind;
}
and import_default = ident
and import_kind =
    Namespace of import_default option * ident
  | Named of import_default option *
      (Js_of_ocaml_compiler.Stdlib.Utf8_string.t * ident) list
  | Default of import_default
  | SideEffect
and program_with_annots =
    (statement_list *
     (Js_of_ocaml_compiler.Js_token.Annot.t *
      Js_of_ocaml_compiler.Parse_info.t)
     list)
    list
val compare_ident : ident -> ident -> int
val is_ident : string -> bool
val is_ident' : Js_of_ocaml_compiler.Stdlib.Utf8_string.t -> bool
val ident :
  ?loc:location ->
  ?var:Js_of_ocaml_compiler.Code.Var.t -> identifier -> ident
val param :
  ?loc:location ->
  ?var:Js_of_ocaml_compiler.Code.Var.t -> identifier -> formal_parameter
val param' : ident -> formal_parameter
val ident_unsafe :
  ?loc:location ->
  ?var:Js_of_ocaml_compiler.Code.Var.t -> identifier -> ident
val bound_idents_of_params : formal_parameter_list -> ident list
val bound_idents_of_variable_declaration : variable_declaration -> ident list
val bound_idents_of_pattern : binding_pattern -> ident list
val bound_idents_of_binding : binding -> ident list
module IdentSet :
  sig
    type elt = ident
    type t
    val empty : t
    val add : elt -> t -> t
    val singleton : elt -> t
    val remove : elt -> t -> t
    val union : t -> t -> t
    val inter : t -> t -> t
    val disjoint : t -> t -> bool
    val diff : t -> t -> t
    val cardinal : t -> int
    val elements : t -> elt list
    val min_elt : t -> elt
    val min_elt_opt : t -> elt option
    val max_elt : t -> elt
    val max_elt_opt : t -> elt option
    val choose : t -> elt
    val choose_opt : t -> elt option
    val find : elt -> t -> elt
    val find_opt : elt -> t -> elt option
    val find_first : (elt -> bool) -> t -> elt
    val find_first_opt : (elt -> bool) -> t -> elt option
    val find_last : (elt -> bool) -> t -> elt
    val find_last_opt : (elt -> bool) -> t -> elt option
    val iter : (elt -> unit) -> t -> unit
    val fold : (elt -> 'acc -> 'acc) -> t -> 'acc -> 'acc
    val map : (elt -> elt) -> t -> t
    val filter : (elt -> bool) -> t -> t
    val filter_map : (elt -> elt option) -> t -> t
    val partition : (elt -> bool) -> t -> t * t
    val split : elt -> t -> t * bool * t
    val is_empty : t -> bool
    val mem : elt -> t -> bool
    val equal : t -> t -> bool
    val compare : t -> t -> int
    val subset : t -> t -> bool
    val for_all : (elt -> bool) -> t -> bool
    val exists : (elt -> bool) -> t -> bool
    val to_list : t -> elt list
    val of_list : elt list -> t
    val to_seq_from : elt -> t -> elt Seq.t
    val to_seq : t -> elt Seq.t
    val to_rev_seq : t -> elt Seq.t
    val add_seq : elt Seq.t -> t -> t
    val of_seq : elt Seq.t -> t
  end
module IdentMap :
  sig
    type key = ident
    type +!'a t
    val empty : 'a t
    val add : key -> 'a -> 'a t -> 'a t
    val add_to_list : key -> 'a -> 'a list t -> 'a list t
    val update : key -> ('a option -> 'a option) -> 'a t -> 'a t
    val singleton : key -> 'a -> 'a t
    val remove : key -> 'a t -> 'a t
    val merge :
      (key -> 'a option -> 'b option -> 'c option) -> 'a t -> 'b t -> 'c t
    val union : (key -> 'a -> 'a -> 'a option) -> 'a t -> 'a t -> 'a t
    val cardinal : 'a t -> int
    val bindings : 'a t -> (key * 'a) list
    val min_binding : 'a t -> key * 'a
    val min_binding_opt : 'a t -> (key * 'a) option
    val max_binding : 'a t -> key * 'a
    val max_binding_opt : 'a t -> (key * 'a) option
    val choose : 'a t -> key * 'a
    val choose_opt : 'a t -> (key * 'a) option
    val find : key -> 'a t -> 'a
    val find_opt : key -> 'a t -> 'a option
    val find_first : (key -> bool) -> 'a t -> key * 'a
    val find_first_opt : (key -> bool) -> 'a t -> (key * 'a) option
    val find_last : (key -> bool) -> 'a t -> key * 'a
    val find_last_opt : (key -> bool) -> 'a t -> (key * 'a) option
    val iter : (key -> 'a -> unit) -> 'a t -> unit
    val fold : (key -> 'a -> 'acc -> 'acc) -> 'a t -> 'acc -> 'acc
    val map : ('a -> 'b) -> 'a t -> 'b t
    val mapi : (key -> 'a -> 'b) -> 'a t -> 'b t
    val filter : (key -> 'a -> bool) -> 'a t -> 'a t
    val filter_map : (key -> 'a -> 'b option) -> 'a t -> 'b t
    val partition : (key -> 'a -> bool) -> 'a t -> 'a t * 'a t
    val split : key -> 'a t -> 'a t * 'a option * 'a t
    val is_empty : 'a t -> bool
    val mem : key -> 'a t -> bool
    val equal : ('a -> 'a -> bool) -> 'a t -> 'a t -> bool
    val compare : ('a -> 'a -> int) -> 'a t -> 'a t -> int
    val for_all : (key -> 'a -> bool) -> 'a t -> bool
    val exists : (key -> 'a -> bool) -> 'a t -> bool
    val to_list : 'a t -> (key * 'a) list
    val of_list : (key * 'a) list -> 'a t
    val to_seq : 'a t -> (key * 'a) Seq.t
    val to_rev_seq : 'a t -> (key * 'a) Seq.t
    val to_seq_from : key -> 'a t -> (key * 'a) Seq.t
    val add_seq : (key * 'a) Seq.t -> 'a t -> 'a t
    val of_seq : (key * 'a) Seq.t -> 'a t
  end
val dot : expression -> identifier -> expression
val array : expression list -> expression
val call : expression -> expression list -> location -> expression
val variable_declaration : (ident * initialiser) list -> statement
val list : 'a list -> ('a, 'b) list_with_rest
val early_error :
  ?reason:string -> Js_of_ocaml_compiler.Parse_info.t -> early_error
val fun_ : ident list -> statement_list -> location -> function_declaration
val assignment_pattern_of_expr :
  ("DEBUG:rule", [Tag3 (("Num", 1188), 0, (Tag1 ([Tag1 (("t", 1262), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 24, 954, 956), ("compiler/lib/javascript.mli", 24, 954, 962), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 0)), 1, 0); (("of_string_unsafe", 1263), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -430), (Tag3 ((("t", 1262)), 0, (0)), 100000000, 0, -429), 0), 100000000, 0, -428), 0, (("compiler/lib/javascript.mli", 28, 986, 988), ("compiler/lib/javascript.mli", 28, 986, 1022), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 1)), 0); (("of_int32", 1264), ((Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -427), (Tag3 ((("t", 1262)), 0, (0)), 100000000, 0, -426), 0), 100000000, 0, -425), 0, (("compiler/lib/javascript.mli", 30, 1024, 1026), ("compiler/lib/javascript.mli", 30, 1024, 1051), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 2)), 0); (("of_float", 1265), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -424), (Tag3 ((("t", 1262)), 0, (0)), 100000000, 0, -423), 0), 100000000, 0, -422), 0, (("compiler/lib/javascript.mli", 32, 1053, 1055), ("compiler/lib/javascript.mli", 32, 1053, 1080), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 3)), 0); (("to_string", 1266), ((Tag1 (0, (Tag3 ((("t", 1262)), 0, (0)), 100000000, 0, -421), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -420), 0), 100000000, 0, -419), 0, (("compiler/lib/javascript.mli", 34, 1082, 1084), ("compiler/lib/javascript.mli", 34, 1082, 1111), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 4)), 0); (("to_int32", 1267), ((Tag1 (0, (Tag3 ((("t", 1262)), 0, (0)), 100000000, 0, -418), (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -417), 0), 100000000, 0, -416), 0, (("compiler/lib/javascript.mli", 36, 1113, 1115), ("compiler/lib/javascript.mli", 36, 1113, 1140), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 5)), 0); (("is_zero", 1268), ((Tag1 (0, (Tag3 ((("t", 1262)), 0, (0)), 100000000, 0, -415), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -414), 0), 100000000, 0, -413), 0, (("compiler/lib/javascript.mli", 40, 1163, 1165), ("compiler/lib/javascript.mli", 40, 1163, 1188), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 6)), 0); (("is_one", 1269), ((Tag1 (0, (Tag3 ((("t", 1262)), 0, (0)), 100000000, 0, -412), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -411), 0), 100000000, 0, -410), 0, (("compiler/lib/javascript.mli", 42, 1190, 1192), ("compiler/lib/javascript.mli", 42, 1190, 1214), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 7)), 0); (("is_neg", 1270), ((Tag1 (0, (Tag3 ((("t", 1262)), 0, (0)), 100000000, 0, -409), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -408), 0), 100000000, 0, -407), 0, (("compiler/lib/javascript.mli", 44, 1216, 1218), ("compiler/lib/javascript.mli", 44, 1216, 1240), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 8)), 0); (("add", 1271), ((Tag1 (0, (Tag3 ((("t", 1262)), 0, (0)), 100000000, 0, -406), (Tag1 (0, (Tag3 ((("t", 1262)), 0, (0)), 100000000, 0, -405), (Tag3 ((("t", 1262)), 0, (0)), 100000000, 0, -404), 0), 100000000, 0, -403), 0), 100000000, 0, -402), 0, (("compiler/lib/javascript.mli", 48, 1263, 1265), ("compiler/lib/javascript.mli", 48, 1263, 1286), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 9)), 0); (("neg", 1272), ((Tag1 (0, (Tag3 ((("t", 1262)), 0, (0)), 100000000, 0, -401), (Tag3 ((("t", 1262)), 0, (0)), 100000000, 0, -400), 0), 100000000, 0, -399), 0, (("compiler/lib/javascript.mli", 50, 1288, 1290), ("compiler/lib/javascript.mli", 50, 1288, 1306), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 10)), 0)]), 0, (("compiler/lib/javascript.mli", 23, 937, 937), ("compiler/lib/javascript.mli", 51, 1307, 1310), 0), Tag1 ("Js_of_ocaml_compiler__Javascript", 11)), 0, 0); Tag3 (("Label", 1189), 0, (Tag1 ([Tag1 (("t", 1273), (0, 0, Tag1 ([(("L", 398), ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Code"), "Var"), "t"), 0, (0)), 100000000, 0, -437)]), 0, (("compiler/lib/javascript.mli", 55, 1342, 1346), ("compiler/lib/javascript.mli", 55, 1342, 1363), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 15)); (("S", 484), ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Stdlib"), "Utf8_string"), "t"), 0, (0)), 100000000, 0, -438)]), 0, (("compiler/lib/javascript.mli", 56, 1364, 1368), ("compiler/lib/javascript.mli", 56, 1364, 1388), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 16))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 54, 1331, 1333), ("compiler/lib/javascript.mli", 56, 1364, 1388), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 12)), 1, 0); (("fresh", 1274), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -436), (Tag3 ((("t", 1273)), 0, (0)), 100000000, 0, -435), 0), 100000000, 0, -434), 0, (("compiler/lib/javascript.mli", 58, 1390, 1392), ("compiler/lib/javascript.mli", 58, 1390, 1413), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 17)), 0); (("of_string", 1275), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Stdlib"), "Utf8_string"), "t"), 0, (0)), 100000000, 0, -433), (Tag3 ((("t", 1273)), 0, (0)), 100000000, 0, -432), 0), 100000000, 0, -431), 0, (("compiler/lib/javascript.mli", 60, 1415, 1417), ("compiler/lib/javascript.mli", 60, 1415, 1451), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 18)), 0)]), 0, (("compiler/lib/javascript.mli", 53, 1312, 1312), ("compiler/lib/javascript.mli", 61, 1452, 1455), 0), Tag1 ("Js_of_ocaml_compiler__Javascript", 19)), 0, 0); Tag1 (("location", 1190), (0, 0, Tag1 ([(("Pi", 569), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Parse_info"), "t"), 0, (0)), 100000000, 0, -398)]), 0, (("compiler/lib/javascript.mli", 64, 1473, 1475), ("compiler/lib/javascript.mli", 64, 1473, 1495), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 21)); (("N", 576), (0), 0, (("compiler/lib/javascript.mli", 65, 1496, 1498), ("compiler/lib/javascript.mli", 65, 1496, 1501), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 22)); (("U", 577), (0), 0, (("compiler/lib/javascript.mli", 67, 1541, 1543), ("compiler/lib/javascript.mli", 67, 1541, 1546), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 23))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 63, 1457, 1457), ("compiler/lib/javascript.mli", 67, 1541, 1546), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 20)), 1, 0); Tag1 (("identifier", 1191), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Stdlib"), "Utf8_string"), "t"), 0, (0)), 100000000, 0, -397)), 0, 0, 0, 0, (("compiler/lib/javascript.mli", 73, 1595, 1595), ("compiler/lib/javascript.mli", 73, 1595, 1626), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 24)), 1, 0); Tag1 (("ident_string", 1192), (0, 0, [[(("name", 586), 0, (Tag3 ((("identifier", 1191)), 0, (0)), 100000000, 0, -393), (("compiler/lib/javascript.mli", 76, 1648, 1652), ("compiler/lib/javascript.mli", 77, 1670, 1673), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 26)); (("var", 587), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Code"), "Var"), "t"), 0, (0)), 100000000, 0, -395)], (0)), 100000000, 0, -394), (("compiler/lib/javascript.mli", 77, 1670, 1674), ("compiler/lib/javascript.mli", 78, 1698, 1701), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 27)); (("loc", 588), 0, (Tag3 ((("location", 1190)), 0, (0)), 100000000, 0, -396), (("compiler/lib/javascript.mli", 78, 1698, 1702), ("compiler/lib/javascript.mli", 78, 1698, 1716), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 28))]], 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 75, 1628, 1628), ("compiler/lib/javascript.mli", 79, 1717, 1720), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 25)), 1, 0); Tag1 (("early_error", 1193), (0, 0, [[(("loc", 590), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Parse_info"), "t"), 0, (0)), 100000000, 0, -390), (("compiler/lib/javascript.mli", 82, 1741, 1745), ("compiler/lib/javascript.mli", 83, 1764, 1767), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 30)); (("reason", 591), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -392)], (0)), 100000000, 0, -391), (("compiler/lib/javascript.mli", 83, 1764, 1768), ("compiler/lib/javascript.mli", 83, 1764, 1790), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 31))]], 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 81, 1722, 1722), ("compiler/lib/javascript.mli", 84, 1791, 1794), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 29)), 1, 0); Tag1 (("ident", 1194), (0, 0, Tag1 ([(("S", 639), ([(Tag3 ((("ident_string", 1192)), 0, (0)), 100000000, 0, -388)]), 0, (("compiler/lib/javascript.mli", 87, 1809, 1811), ("compiler/lib/javascript.mli", 87, 1809, 1830), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 79)); (("V", 640), ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Code"), "Var"), "t"), 0, (0)), 100000000, 0, -389)]), 0, (("compiler/lib/javascript.mli", 88, 1831, 1833), ("compiler/lib/javascript.mli", 88, 1831, 1850), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 80))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 86, 1796, 1796), ("compiler/lib/javascript.mli", 88, 1831, 1850), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 32)), 1, 0); Tag1 (("array_litteral", 1195), (0, 0, 0, 1, ((Tag3 ((("element_list", 1196)), 0, (0)), 100000000, 0, -387)), 0, 0, 0, 0, (("compiler/lib/javascript.mli", 90, 1852, 1852), ("compiler/lib/javascript.mli", 90, 1852, 1885), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 33)), 2, 0); Tag1 (("element_list", 1196), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("element", 1197)), 0, (0)), 100000000, 0, -386)], (0)), 100000000, 0, -385)), 0, 0, 0, 0, (("compiler/lib/javascript.mli", 92, 1887, 1887), ("compiler/lib/javascript.mli", 92, 1887, 1918), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 34)), 2, 0); Tag1 (("element", 1197), (0, 0, Tag1 ([(("ElementHole", 641), (0), 0, (("compiler/lib/javascript.mli", 95, 1934, 1936), ("compiler/lib/javascript.mli", 95, 1934, 1949), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 81)); (("Element", 642), ([(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -383)]), 0, (("compiler/lib/javascript.mli", 96, 1950, 1952), ("compiler/lib/javascript.mli", 96, 1950, 1975), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 82)); (("ElementSpread", 643), ([(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -384)]), 0, (("compiler/lib/javascript.mli", 97, 1976, 1978), ("compiler/lib/javascript.mli", 97, 1976, 2007), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 83))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 94, 1920, 1920), ("compiler/lib/javascript.mli", 97, 1976, 2007), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 35)), 2, 0); Tag1 (("binop", 1198), (0, 0, Tag1 ([(("Eq", 644), (0), 0, (("compiler/lib/javascript.mli", 100, 2021, 2023), ("compiler/lib/javascript.mli", 100, 2021, 2027), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 84)); (("StarEq", 645), (0), 0, (("compiler/lib/javascript.mli", 101, 2028, 2030), ("compiler/lib/javascript.mli", 101, 2028, 2038), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 85)); (("SlashEq", 646), (0), 0, (("compiler/lib/javascript.mli", 102, 2039, 2041), ("compiler/lib/javascript.mli", 102, 2039, 2050), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 86)); (("ModEq", 647), (0), 0, (("compiler/lib/javascript.mli", 103, 2051, 2053), ("compiler/lib/javascript.mli", 103, 2051, 2060), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 87)); (("PlusEq", 648), (0), 0, (("compiler/lib/javascript.mli", 104, 2061, 2063), ("compiler/lib/javascript.mli", 104, 2061, 2071), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 88)); (("MinusEq", 649), (0), 0, (("compiler/lib/javascript.mli", 105, 2072, 2074), ("compiler/lib/javascript.mli", 105, 2072, 2083), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 89)); (("LslEq", 650), (0), 0, (("compiler/lib/javascript.mli", 106, 2084, 2086), ("compiler/lib/javascript.mli", 106, 2084, 2093), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 90)); (("AsrEq", 651), (0), 0, (("compiler/lib/javascript.mli", 107, 2094, 2096), ("compiler/lib/javascript.mli", 107, 2094, 2103), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 91)); (("LsrEq", 652), (0), 0, (("compiler/lib/javascript.mli", 108, 2104, 2106), ("compiler/lib/javascript.mli", 108, 2104, 2113), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 92)); (("BandEq", 653), (0), 0, (("compiler/lib/javascript.mli", 109, 2114, 2116), ("compiler/lib/javascript.mli", 109, 2114, 2124), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 93)); (("BxorEq", 654), (0), 0, (("compiler/lib/javascript.mli", 110, 2125, 2127), ("compiler/lib/javascript.mli", 110, 2125, 2135), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 94)); (("BorEq", 655), (0), 0, (("compiler/lib/javascript.mli", 111, 2136, 2138), ("compiler/lib/javascript.mli", 111, 2136, 2145), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 95)); (("Or", 656), (0), 0, (("compiler/lib/javascript.mli", 112, 2146, 2148), ("compiler/lib/javascript.mli", 112, 2146, 2152), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 96)); (("OrEq", 657), (0), 0, (("compiler/lib/javascript.mli", 113, 2153, 2155), ("compiler/lib/javascript.mli", 113, 2153, 2161), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 97)); (("And", 658), (0), 0, (("compiler/lib/javascript.mli", 114, 2162, 2164), ("compiler/lib/javascript.mli", 114, 2162, 2169), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 98)); (("AndEq", 659), (0), 0, (("compiler/lib/javascript.mli", 115, 2170, 2172), ("compiler/lib/javascript.mli", 115, 2170, 2179), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 99)); (("Bor", 660), (0), 0, (("compiler/lib/javascript.mli", 116, 2180, 2182), ("compiler/lib/javascript.mli", 116, 2180, 2187), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 100)); (("Bxor", 661), (0), 0, (("compiler/lib/javascript.mli", 117, 2188, 2190), ("compiler/lib/javascript.mli", 117, 2188, 2196), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 101)); (("Band", 662), (0), 0, (("compiler/lib/javascript.mli", 118, 2197, 2199), ("compiler/lib/javascript.mli", 118, 2197, 2205), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 102)); (("EqEq", 663), (0), 0, (("compiler/lib/javascript.mli", 119, 2206, 2208), ("compiler/lib/javascript.mli", 119, 2206, 2214), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 103)); (("NotEq", 664), (0), 0, (("compiler/lib/javascript.mli", 120, 2215, 2217), ("compiler/lib/javascript.mli", 120, 2215, 2224), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 104)); (("EqEqEq", 665), (0), 0, (("compiler/lib/javascript.mli", 121, 2225, 2227), ("compiler/lib/javascript.mli", 121, 2225, 2235), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 105)); (("NotEqEq", 666), (0), 0, (("compiler/lib/javascript.mli", 122, 2236, 2238), ("compiler/lib/javascript.mli", 122, 2236, 2247), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 106)); (("Lt", 667), (0), 0, (("compiler/lib/javascript.mli", 123, 2248, 2250), ("compiler/lib/javascript.mli", 123, 2248, 2254), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 107)); (("Le", 668), (0), 0, (("compiler/lib/javascript.mli", 124, 2255, 2257), ("compiler/lib/javascript.mli", 124, 2255, 2261), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 108)); (("Gt", 669), (0), 0, (("compiler/lib/javascript.mli", 125, 2262, 2264), ("compiler/lib/javascript.mli", 125, 2262, 2268), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 109)); (("Ge", 670), (0), 0, (("compiler/lib/javascript.mli", 126, 2269, 2271), ("compiler/lib/javascript.mli", 126, 2269, 2275), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 110)); (("LtInt", 671), (0), 0, (("compiler/lib/javascript.mli", 127, 2276, 2278), ("compiler/lib/javascript.mli", 127, 2276, 2285), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 111)); (("LeInt", 672), (0), 0, (("compiler/lib/javascript.mli", 128, 2286, 2288), ("compiler/lib/javascript.mli", 128, 2286, 2295), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 112)); (("GtInt", 673), (0), 0, (("compiler/lib/javascript.mli", 129, 2296, 2298), ("compiler/lib/javascript.mli", 129, 2296, 2305), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 113)); (("GeInt", 674), (0), 0, (("compiler/lib/javascript.mli", 130, 2306, 2308), ("compiler/lib/javascript.mli", 130, 2306, 2315), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 114)); (("InstanceOf", 675), (0), 0, (("compiler/lib/javascript.mli", 131, 2316, 2318), ("compiler/lib/javascript.mli", 131, 2316, 2330), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 115)); (("In", 676), (0), 0, (("compiler/lib/javascript.mli", 132, 2331, 2333), ("compiler/lib/javascript.mli", 132, 2331, 2337), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 116)); (("Lsl", 677), (0), 0, (("compiler/lib/javascript.mli", 133, 2338, 2340), ("compiler/lib/javascript.mli", 133, 2338, 2345), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 117)); (("Lsr", 678), (0), 0, (("compiler/lib/javascript.mli", 134, 2346, 2348), ("compiler/lib/javascript.mli", 134, 2346, 2353), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 118)); (("Asr", 679), (0), 0, (("compiler/lib/javascript.mli", 135, 2354, 2356), ("compiler/lib/javascript.mli", 135, 2354, 2361), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 119)); (("Plus", 680), (0), 0, (("compiler/lib/javascript.mli", 136, 2362, 2364), ("compiler/lib/javascript.mli", 136, 2362, 2370), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 120)); (("Minus", 681), (0), 0, (("compiler/lib/javascript.mli", 137, 2371, 2373), ("compiler/lib/javascript.mli", 137, 2371, 2380), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 121)); (("Mul", 682), (0), 0, (("compiler/lib/javascript.mli", 138, 2381, 2383), ("compiler/lib/javascript.mli", 138, 2381, 2388), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 122)); (("Div", 683), (0), 0, (("compiler/lib/javascript.mli", 139, 2389, 2391), ("compiler/lib/javascript.mli", 139, 2389, 2396), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 123)); (("Mod", 684), (0), 0, (("compiler/lib/javascript.mli", 140, 2397, 2399), ("compiler/lib/javascript.mli", 140, 2397, 2404), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 124)); (("Exp", 685), (0), 0, (("compiler/lib/javascript.mli", 141, 2405, 2407), ("compiler/lib/javascript.mli", 141, 2405, 2412), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 125)); (("ExpEq", 686), (0), 0, (("compiler/lib/javascript.mli", 142, 2413, 2415), ("compiler/lib/javascript.mli", 142, 2413, 2422), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 126)); (("Coalesce", 687), (0), 0, (("compiler/lib/javascript.mli", 143, 2423, 2425), ("compiler/lib/javascript.mli", 143, 2423, 2435), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 127)); (("CoalesceEq", 688), (0), 0, (("compiler/lib/javascript.mli", 144, 2436, 2438), ("compiler/lib/javascript.mli", 144, 2436, 2450), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 128))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 99, 2009, 2009), ("compiler/lib/javascript.mli", 144, 2436, 2450), 0), 0, 1, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 36)), 2, 0); Tag1 (("unop", 1199), (0, 0, Tag1 ([(("Not", 689), (0), 0, (("compiler/lib/javascript.mli", 147, 2463, 2465), ("compiler/lib/javascript.mli", 147, 2463, 2470), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 129)); (("Neg", 690), (0), 0, (("compiler/lib/javascript.mli", 148, 2471, 2473), ("compiler/lib/javascript.mli", 148, 2471, 2478), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 130)); (("Pl", 691), (0), 0, (("compiler/lib/javascript.mli", 149, 2479, 2481), ("compiler/lib/javascript.mli", 149, 2479, 2485), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 131)); (("Typeof", 692), (0), 0, (("compiler/lib/javascript.mli", 150, 2486, 2488), ("compiler/lib/javascript.mli", 150, 2486, 2496), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 132)); (("Void", 693), (0), 0, (("compiler/lib/javascript.mli", 151, 2497, 2499), ("compiler/lib/javascript.mli", 151, 2497, 2505), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 133)); (("Delete", 694), (0), 0, (("compiler/lib/javascript.mli", 152, 2506, 2508), ("compiler/lib/javascript.mli", 152, 2506, 2516), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 134)); (("Bnot", 695), (0), 0, (("compiler/lib/javascript.mli", 153, 2517, 2519), ("compiler/lib/javascript.mli", 153, 2517, 2525), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 135)); (("IncrA", 696), (0), 0, (("compiler/lib/javascript.mli", 154, 2526, 2528), ("compiler/lib/javascript.mli", 154, 2526, 2535), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 136)); (("DecrA", 697), (0), 0, (("compiler/lib/javascript.mli", 155, 2536, 2538), ("compiler/lib/javascript.mli", 155, 2536, 2545), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 137)); (("IncrB", 698), (0), 0, (("compiler/lib/javascript.mli", 156, 2546, 2548), ("compiler/lib/javascript.mli", 156, 2546, 2555), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 138)); (("DecrB", 699), (0), 0, (("compiler/lib/javascript.mli", 157, 2556, 2558), ("compiler/lib/javascript.mli", 157, 2556, 2565), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 139)); (("Await", 700), (0), 0, (("compiler/lib/javascript.mli", 158, 2566, 2568), ("compiler/lib/javascript.mli", 158, 2566, 2575), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 140))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 146, 2452, 2452), ("compiler/lib/javascript.mli", 158, 2566, 2575), 0), 0, 1, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 37)), 2, 0); Tag1 (("arguments", 1200), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("argument", 1201)), 0, (0)), 100000000, 0, -382)], (0)), 100000000, 0, -381)), 0, 0, 0, 0, (("compiler/lib/javascript.mli", 160, 2577, 2577), ("compiler/lib/javascript.mli", 160, 2577, 2606), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 38)), 2, 0); Tag1 (("argument", 1201), (0, 0, Tag1 ([(("Arg", 701), ([(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -379)]), 0, (("compiler/lib/javascript.mli", 163, 2623, 2625), ("compiler/lib/javascript.mli", 163, 2623, 2644), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 141)); (("ArgSpread", 702), ([(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -380)]), 0, (("compiler/lib/javascript.mli", 164, 2645, 2647), ("compiler/lib/javascript.mli", 164, 2645, 2672), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 142))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 162, 2608, 2608), ("compiler/lib/javascript.mli", 164, 2645, 2672), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 39)), 2, 0); Tag1 (("property_list", 1202), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("property", 1203)), 0, (0)), 100000000, 0, -378)], (0)), 100000000, 0, -377)), 0, 0, 0, 0, (("compiler/lib/javascript.mli", 166, 2674, 2674), ("compiler/lib/javascript.mli", 166, 2674, 2707), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 40)), 2, 0); Tag1 (("property", 1203), (0, 0, Tag1 ([(("Property", 703), ([(Tag3 ((("property_name", 1205)), 0, (0)), 100000000, 0, -369); (Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -370)]), 0, (("compiler/lib/javascript.mli", 169, 2724, 2726), ("compiler/lib/javascript.mli", 169, 2724, 2766), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 143)); (("PropertySpread", 704), ([(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -371)]), 0, (("compiler/lib/javascript.mli", 170, 2767, 2769), ("compiler/lib/javascript.mli", 170, 2767, 2799), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 144)); (("PropertyMethod", 705), ([(Tag3 ((("property_name", 1205)), 0, (0)), 100000000, 0, -372); (Tag3 ((("method_", 1204)), 0, (0)), 100000000, 0, -373)]), 0, (("compiler/lib/javascript.mli", 171, 2800, 2802), ("compiler/lib/javascript.mli", 171, 2800, 2845), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 145)); (("CoverInitializedName", 706), ([(Tag3 ((("early_error", 1193)), 0, (0)), 100000000, 0, -374); (Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -375); (Tag3 ((("initialiser", 1218)), 0, (0)), 100000000, 0, -376)]), 0, (("compiler/lib/javascript.mli", 172, 2846, 2848), ("compiler/lib/javascript.mli", 172, 2846, 2907), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 146))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 168, 2709, 2709), ("compiler/lib/javascript.mli", 172, 2846, 2907), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 41)), 2, 0); Tag1 (("method_", 1204), (0, 0, Tag1 ([(("MethodGet", 707), ([(Tag3 ((("function_declaration", 1219)), 0, (0)), 100000000, 0, -366)]), 0, (("compiler/lib/javascript.mli", 175, 2923, 2925), ("compiler/lib/javascript.mli", 175, 2923, 2960), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 147)); (("MethodSet", 708), ([(Tag3 ((("function_declaration", 1219)), 0, (0)), 100000000, 0, -367)]), 0, (("compiler/lib/javascript.mli", 176, 2961, 2963), ("compiler/lib/javascript.mli", 176, 2961, 2998), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 148)); (("Method", 709), ([(Tag3 ((("function_declaration", 1219)), 0, (0)), 100000000, 0, -368)]), 0, (("compiler/lib/javascript.mli", 177, 2999, 3001), ("compiler/lib/javascript.mli", 177, 2999, 3033), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 149))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 174, 2909, 2909), ("compiler/lib/javascript.mli", 177, 2999, 3033), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 42)), 2, 0); Tag1 (("property_name", 1205), (0, 0, Tag1 ([(("PNI", 710), ([(Tag3 ((("identifier", 1191)), 0, (0)), 100000000, 0, -362)]), 0, (("compiler/lib/javascript.mli", 180, 3055, 3057), ("compiler/lib/javascript.mli", 180, 3055, 3076), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 150)); (("PNS", 711), ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Stdlib"), "Utf8_string"), "t"), 0, (0)), 100000000, 0, -363)]), 0, (("compiler/lib/javascript.mli", 181, 3077, 3079), ("compiler/lib/javascript.mli", 181, 3077, 3101), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 151)); (("PNN", 712), ([(Tag3 (Tag1 ((("Num", 1188)), "t"), 0, (0)), 100000000, 0, -364)]), 0, (("compiler/lib/javascript.mli", 182, 3102, 3104), ("compiler/lib/javascript.mli", 182, 3102, 3118), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 152)); (("PComputed", 713), ([(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -365)]), 0, (("compiler/lib/javascript.mli", 183, 3119, 3121), ("compiler/lib/javascript.mli", 183, 3119, 3146), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 153))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 179, 3035, 3035), ("compiler/lib/javascript.mli", 183, 3119, 3146), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 43)), 2, 0); Tag1 (("expression", 1206), (0, 0, Tag1 ([(("ESeq", 714), ([(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -313); (Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -314)]), 0, (("compiler/lib/javascript.mli", 186, 3165, 3167), ("compiler/lib/javascript.mli", 186, 3165, 3200), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 154)); (("ECond", 715), ([(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -315); (Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -316); (Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -317)]), 0, (("compiler/lib/javascript.mli", 187, 3201, 3203), ("compiler/lib/javascript.mli", 187, 3201, 3250), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 155)); (("EAssignTarget", 716), ([(Tag3 ((("binding_pattern", 1230)), 0, (0)), 100000000, 0, -318)]), 0, (("compiler/lib/javascript.mli", 188, 3251, 3253), ("compiler/lib/javascript.mli", 188, 3251, 3287), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 156)); (("EBin", 717), ([(Tag3 ((("binop", 1198)), 0, (0)), 100000000, 0, -319); (Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -320); (Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -321)]), 0, (("compiler/lib/javascript.mli", 193, 3408, 3410), ("compiler/lib/javascript.mli", 193, 3408, 3451), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 157)); (("EUn", 718), ([(Tag3 ((("unop", 1199)), 0, (0)), 100000000, 0, -322); (Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -323)]), 0, (("compiler/lib/javascript.mli", 194, 3452, 3454), ("compiler/lib/javascript.mli", 194, 3452, 3480), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 158)); (("ECall", 719), ([(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -324); (Tag3 ((("access_kind", 1210)), 0, (0)), 100000000, 0, -325); (Tag3 ((("arguments", 1200)), 0, (0)), 100000000, 0, -326); (Tag3 ((("location", 1190)), 0, (0)), 100000000, 0, -327)]), 0, (("compiler/lib/javascript.mli", 195, 3481, 3483), ("compiler/lib/javascript.mli", 195, 3481, 3541), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 159)); (("ECallTemplate", 720), ([(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -328); (Tag3 ((("template", 1208)), 0, (0)), 100000000, 0, -329); (Tag3 ((("location", 1190)), 0, (0)), 100000000, 0, -330)]), 0, (("compiler/lib/javascript.mli", 196, 3542, 3544), ("compiler/lib/javascript.mli", 196, 3542, 3595), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 160)); (("EAccess", 721), ([(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -331); (Tag3 ((("access_kind", 1210)), 0, (0)), 100000000, 0, -332); (Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -333)]), 0, (("compiler/lib/javascript.mli", 197, 3596, 3598), ("compiler/lib/javascript.mli", 197, 3596, 3648), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 161)); (("EDot", 722), ([(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -334); (Tag3 ((("access_kind", 1210)), 0, (0)), 100000000, 0, -335); (Tag3 ((("identifier", 1191)), 0, (0)), 100000000, 0, -336)]), 0, (("compiler/lib/javascript.mli", 198, 3649, 3651), ("compiler/lib/javascript.mli", 198, 3649, 3698), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 162)); (("ENew", 723), ([(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -337); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("arguments", 1200)), 0, (0)), 100000000, 0, -339)], (0)), 100000000, 0, -338)]), 0, (("compiler/lib/javascript.mli", 199, 3699, 3701), ("compiler/lib/javascript.mli", 199, 3699, 3740), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 163)); (("EVar", 724), ([(Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -340)]), 0, (("compiler/lib/javascript.mli", 200, 3741, 3743), ("compiler/lib/javascript.mli", 200, 3741, 3758), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 164)); (("EFun", 725), ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -342)], (0)), 100000000, 0, -341); (Tag3 ((("function_declaration", 1219)), 0, (0)), 100000000, 0, -343)]), 0, (("compiler/lib/javascript.mli", 201, 3759, 3761), ("compiler/lib/javascript.mli", 201, 3759, 3806), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 165)); (("EClass", 726), ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -345)], (0)), 100000000, 0, -344); (Tag3 ((("class_declaration", 1221)), 0, (0)), 100000000, 0, -346)]), 0, (("compiler/lib/javascript.mli", 202, 3807, 3809), ("compiler/lib/javascript.mli", 202, 3807, 3853), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 166)); (("EArrow", 727), ([(Tag3 ((("function_declaration", 1219)), 0, (0)), 100000000, 0, -347); (Tag3 ((("arrow_info", 1207)), 0, (0)), 100000000, 0, -348)]), 0, (("compiler/lib/javascript.mli", 203, 3854, 3856), ("compiler/lib/javascript.mli", 203, 3854, 3901), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 167)); (("EStr", 728), ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Stdlib"), "Utf8_string"), "t"), 0, (0)), 100000000, 0, -349)]), 0, (("compiler/lib/javascript.mli", 204, 3902, 3904), ("compiler/lib/javascript.mli", 204, 3902, 3927), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 168)); (("ETemplate", 729), ([(Tag3 ((("template", 1208)), 0, (0)), 100000000, 0, -350)]), 0, (("compiler/lib/javascript.mli", 206, 3994, 3996), ("compiler/lib/javascript.mli", 206, 3994, 4019), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 169)); (("EArr", 730), ([(Tag3 ((("array_litteral", 1195)), 0, (0)), 100000000, 0, -351)]), 0, (("compiler/lib/javascript.mli", 207, 4020, 4022), ("compiler/lib/javascript.mli", 207, 4020, 4046), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 170)); (("EBool", 731), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -352)]), 0, (("compiler/lib/javascript.mli", 208, 4047, 4049), ("compiler/lib/javascript.mli", 208, 4047, 4064), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 171)); (("ENum", 732), ([(Tag3 (Tag1 ((("Num", 1188)), "t"), 0, (0)), 100000000, 0, -353)]), 0, (("compiler/lib/javascript.mli", 209, 4065, 4067), ("compiler/lib/javascript.mli", 209, 4065, 4082), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 172)); (("EObj", 733), ([(Tag3 ((("property_list", 1202)), 0, (0)), 100000000, 0, -354)]), 0, (("compiler/lib/javascript.mli", 210, 4083, 4085), ("compiler/lib/javascript.mli", 210, 4083, 4108), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 173)); (("ERegexp", 734), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -355); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -357)], (0)), 100000000, 0, -356)]), 0, (("compiler/lib/javascript.mli", 211, 4109, 4111), ("compiler/lib/javascript.mli", 211, 4109, 4146), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 174)); (("EYield", 735), ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -359)], (0)), 100000000, 0, -358)]), 0, (("compiler/lib/javascript.mli", 212, 4147, 4149), ("compiler/lib/javascript.mli", 212, 4147, 4178), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 175)); (("CoverParenthesizedExpressionAndArrowParameterList", 736), ([(Tag3 ((("early_error", 1193)), 0, (0)), 100000000, 0, -360)]), 0, (("compiler/lib/javascript.mli", 213, 4179, 4181), ("compiler/lib/javascript.mli", 213, 4179, 4247), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 176)); (("CoverCallExpressionAndAsyncArrowHead", 737), ([(Tag3 ((("early_error", 1193)), 0, (0)), 100000000, 0, -361)]), 0, (("compiler/lib/javascript.mli", 214, 4248, 4250), ("compiler/lib/javascript.mli", 214, 4248, 4303), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 177))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 185, 3148, 3148), ("compiler/lib/javascript.mli", 214, 4248, 4303), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 44)), 2, 0); Tag1 (("arrow_info", 1207), (0, 0, Tag1 ([(("AUnknown", 738), (0), 0, (("compiler/lib/javascript.mli", 217, 4322, 4324), ("compiler/lib/javascript.mli", 217, 4322, 4334), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 178)); (("AUse_parent_fun_context", 739), (0), 0, (("compiler/lib/javascript.mli", 218, 4335, 4337), ("compiler/lib/javascript.mli", 218, 4335, 4362), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 179)); (("ANo_fun_context", 740), (0), 0, (("compiler/lib/javascript.mli", 219, 4363, 4365), ("compiler/lib/javascript.mli", 219, 4363, 4382), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 180))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 216, 4305, 4305), ("compiler/lib/javascript.mli", 219, 4363, 4382), 0), 0, 1, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 45)), 2, 0); Tag1 (("template", 1208), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("template_part", 1209)), 0, (0)), 100000000, 0, -312)], (0)), 100000000, 0, -311)), 0, 0, 0, 0, (("compiler/lib/javascript.mli", 221, 4384, 4384), ("compiler/lib/javascript.mli", 221, 4384, 4417), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 46)), 2, 0); Tag1 (("template_part", 1209), (0, 0, Tag1 ([(("TStr", 741), ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Stdlib"), "Utf8_string"), "t"), 0, (0)), 100000000, 0, -309)]), 0, (("compiler/lib/javascript.mli", 224, 4439, 4441), ("compiler/lib/javascript.mli", 224, 4439, 4464), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 181)); (("TExp", 742), ([(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -310)]), 0, (("compiler/lib/javascript.mli", 225, 4465, 4467), ("compiler/lib/javascript.mli", 225, 4465, 4487), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 182))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 223, 4419, 4419), ("compiler/lib/javascript.mli", 225, 4465, 4487), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 47)), 2, 0); Tag1 (("access_kind", 1210), (0, 0, Tag1 ([(("ANormal", 743), (0), 0, (("compiler/lib/javascript.mli", 228, 4507, 4509), ("compiler/lib/javascript.mli", 228, 4507, 4518), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 183)); (("ANullish", 744), (0), 0, (("compiler/lib/javascript.mli", 229, 4519, 4521), ("compiler/lib/javascript.mli", 229, 4519, 4531), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 184))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 227, 4489, 4489), ("compiler/lib/javascript.mli", 229, 4519, 4531), 0), 0, 1, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 48)), 2, 0); Tag1 (("statement", 1211), (0, 0, Tag1 ([(("Block", 745), ([(Tag3 ((("block", 1213)), 0, (0)), 100000000, 0, -222)]), 0, (("compiler/lib/javascript.mli", 235, 4578, 4580), ("compiler/lib/javascript.mli", 235, 4578, 4596), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 185)); (("Variable_statement", 746), ([(Tag3 ((("variable_declaration_kind", 1216)), 0, (0)), 100000000, 0, -223); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("variable_declaration", 1215)), 0, (0)), 100000000, 0, -225)], (0)), 100000000, 0, -224)]), 0, (("compiler/lib/javascript.mli", 236, 4597, 4599), ("compiler/lib/javascript.mli", 236, 4597, 4676), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 186)); (("Function_declaration", 747), ([(Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -226); (Tag3 ((("function_declaration", 1219)), 0, (0)), 100000000, 0, -227)]), 0, (("compiler/lib/javascript.mli", 237, 4677, 4679), ("compiler/lib/javascript.mli", 237, 4677, 4733), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 187)); (("Class_declaration", 748), ([(Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -228); (Tag3 ((("class_declaration", 1221)), 0, (0)), 100000000, 0, -229)]), 0, (("compiler/lib/javascript.mli", 238, 4734, 4736), ("compiler/lib/javascript.mli", 238, 4734, 4784), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 188)); (("Empty_statement", 749), (0), 0, (("compiler/lib/javascript.mli", 239, 4785, 4787), ("compiler/lib/javascript.mli", 239, 4785, 4804), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 189)); (("Expression_statement", 750), ([(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -230)]), 0, (("compiler/lib/javascript.mli", 240, 4805, 4807), ("compiler/lib/javascript.mli", 240, 4805, 4843), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 190)); (("If_statement", 751), ([(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -231); (Tag2 ([(Tag3 ((("statement", 1211)), 0, (0)), 100000000, 0, -233); (Tag3 ((("location", 1190)), 0, (0)), 100000000, 0, -234)]), 100000000, 0, -232); (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("statement", 1211)), 0, (0)), 100000000, 0, -237); (Tag3 ((("location", 1190)), 0, (0)), 100000000, 0, -238)]), 100000000, 0, -236)], (0)), 100000000, 0, -235)]), 0, (("compiler/lib/javascript.mli", 241, 4844, 4846), ("compiler/lib/javascript.mli", 241, 4844, 4931), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 191)); (("Do_while_statement", 752), ([(Tag2 ([(Tag3 ((("statement", 1211)), 0, (0)), 100000000, 0, -240); (Tag3 ((("location", 1190)), 0, (0)), 100000000, 0, -241)]), 100000000, 0, -239); (Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -242)]), 0, (("compiler/lib/javascript.mli", 242, 4932, 4934), ("compiler/lib/javascript.mli", 242, 4932, 4993), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 192)); (("While_statement", 753), ([(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -243); (Tag2 ([(Tag3 ((("statement", 1211)), 0, (0)), 100000000, 0, -245); (Tag3 ((("location", 1190)), 0, (0)), 100000000, 0, -246)]), 100000000, 0, -244)]), 0, (("compiler/lib/javascript.mli", 243, 4994, 4996), ("compiler/lib/javascript.mli", 243, 4994, 5052), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 193)); (("For_statement", 754), ([(Tag3 ((("either", 1212)), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -249)], (0)), 100000000, 0, -248); (Tag2 ([(Tag3 ((("variable_declaration_kind", 1216)), 0, (0)), 100000000, 0, -251); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("variable_declaration", 1215)), 0, (0)), 100000000, 0, -253)], (0)), 100000000, 0, -252)]), 100000000, 0, -250)], (0)), 100000000, 0, -247); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -255)], (0)), 100000000, 0, -254); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -257)], (0)), 100000000, 0, -256); (Tag2 ([(Tag3 ((("statement", 1211)), 0, (0)), 100000000, 0, -259); (Tag3 ((("location", 1190)), 0, (0)), 100000000, 0, -260)]), 100000000, 0, -258)]), 0, (("compiler/lib/javascript.mli", 244, 5053, 5055), ("compiler/lib/javascript.mli", 248, 5214, 5244), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 194)); (("ForIn_statement", 755), ([(Tag3 ((("either", 1212)), [(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -262); (Tag2 ([(Tag3 ((("variable_declaration_kind", 1216)), 0, (0)), 100000000, 0, -264); (Tag3 ((("for_binding", 1227)), 0, (0)), 100000000, 0, -265)]), 100000000, 0, -263)], (0)), 100000000, 0, -261); (Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -266); (Tag2 ([(Tag3 ((("statement", 1211)), 0, (0)), 100000000, 0, -268); (Tag3 ((("location", 1190)), 0, (0)), 100000000, 0, -269)]), 100000000, 0, -267)]), 0, (("compiler/lib/javascript.mli", 249, 5245, 5247), ("compiler/lib/javascript.mli", 252, 5354, 5384), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 195)); (("ForOf_statement", 756), ([(Tag3 ((("either", 1212)), [(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -271); (Tag2 ([(Tag3 ((("variable_declaration_kind", 1216)), 0, (0)), 100000000, 0, -273); (Tag3 ((("for_binding", 1227)), 0, (0)), 100000000, 0, -274)]), 100000000, 0, -272)], (0)), 100000000, 0, -270); (Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -275); (Tag2 ([(Tag3 ((("statement", 1211)), 0, (0)), 100000000, 0, -277); (Tag3 ((("location", 1190)), 0, (0)), 100000000, 0, -278)]), 100000000, 0, -276)]), 0, (("compiler/lib/javascript.mli", 253, 5385, 5387), ("compiler/lib/javascript.mli", 256, 5494, 5524), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 196)); (("Continue_statement", 757), ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Label", 1189)), "t"), 0, (0)), 100000000, 0, -280)], (0)), 100000000, 0, -279)]), 0, (("compiler/lib/javascript.mli", 257, 5525, 5527), ("compiler/lib/javascript.mli", 257, 5525, 5565), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 197)); (("Break_statement", 758), ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Label", 1189)), "t"), 0, (0)), 100000000, 0, -282)], (0)), 100000000, 0, -281)]), 0, (("compiler/lib/javascript.mli", 258, 5566, 5568), ("compiler/lib/javascript.mli", 258, 5566, 5603), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 198)); (("Return_statement", 759), ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -284)], (0)), 100000000, 0, -283)]), 0, (("compiler/lib/javascript.mli", 259, 5604, 5606), ("compiler/lib/javascript.mli", 259, 5604, 5645), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 199)); (("Labelled_statement", 760), ([(Tag3 (Tag1 ((("Label", 1189)), "t"), 0, (0)), 100000000, 0, -285); (Tag2 ([(Tag3 ((("statement", 1211)), 0, (0)), 100000000, 0, -287); (Tag3 ((("location", 1190)), 0, (0)), 100000000, 0, -288)]), 100000000, 0, -286)]), 0, (("compiler/lib/javascript.mli", 263, 5673, 5675), ("compiler/lib/javascript.mli", 263, 5673, 5731), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 200)); (("Switch_statement", 761), ([(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -289); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case_clause", 1217)), 0, (0)), 100000000, 0, -291)], (0)), 100000000, 0, -290); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("statement_list", 1214)), 0, (0)), 100000000, 0, -293)], (0)), 100000000, 0, -292); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case_clause", 1217)), 0, (0)), 100000000, 0, -295)], (0)), 100000000, 0, -294)]), 0, (("compiler/lib/javascript.mli", 264, 5732, 5734), ("compiler/lib/javascript.mli", 265, 5756, 5834), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 201)); (("Throw_statement", 762), ([(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -296)]), 0, (("compiler/lib/javascript.mli", 266, 5835, 5837), ("compiler/lib/javascript.mli", 266, 5835, 5868), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 202)); (("Try_statement", 763), ([(Tag3 ((("block", 1213)), 0, (0)), 100000000, 0, -297); (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("formal_parameter", 1226)), 0, (0)), 100000000, 0, -301)], (0)), 100000000, 0, -300); (Tag3 ((("block", 1213)), 0, (0)), 100000000, 0, -302)]), 100000000, 0, -299)], (0)), 100000000, 0, -298); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("block", 1213)), 0, (0)), 100000000, 0, -304)], (0)), 100000000, 0, -303)]), 0, (("compiler/lib/javascript.mli", 267, 5869, 5871), ("compiler/lib/javascript.mli", 267, 5869, 5953), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 203)); (("Debugger_statement", 764), (0), 0, (("compiler/lib/javascript.mli", 268, 5954, 5956), ("compiler/lib/javascript.mli", 268, 5954, 5976), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 204)); (("Import", 765), ([(Tag3 ((("import", 1237)), 0, (0)), 100000000, 0, -305); (Tag3 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Parse_info"), "t"), 0, (0)), 100000000, 0, -306)]), 0, (("compiler/lib/javascript.mli", 269, 5977, 5979), ("compiler/lib/javascript.mli", 269, 5977, 6012), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 205)); (("Export", 766), ([(Tag3 ((("export", 1235)), 0, (0)), 100000000, 0, -307); (Tag3 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Parse_info"), "t"), 0, (0)), 100000000, 0, -308)]), 0, (("compiler/lib/javascript.mli", 270, 6013, 6015), ("compiler/lib/javascript.mli", 270, 6013, 6048), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 206))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 234, 4562, 4562), ("compiler/lib/javascript.mli", 270, 6013, 6048), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 49)), 2, 0); Tag1 (("either", 1212), ([((("left")), 100000000, 0, -220); ((("right")), 100000000, 0, -221)], 2, Tag1 ([(("Left", 767), ([((("left")), 100000000, 0, -220)]), 0, (("compiler/lib/javascript.mli", 273, 6079, 6081), ("compiler/lib/javascript.mli", 273, 6079, 6096), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 207)); (("Right", 768), ([((("right")), 100000000, 0, -221)]), 0, (("compiler/lib/javascript.mli", 274, 6097, 6099), ("compiler/lib/javascript.mli", 274, 6097, 6116), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 208))], 0), 1, 0, [25; 25], [0; 0], 0, 0, (("compiler/lib/javascript.mli", 272, 6050, 6050), ("compiler/lib/javascript.mli", 274, 6097, 6116), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 50)), 2, 0); Tag1 (("block", 1213), (0, 0, 0, 1, ((Tag3 ((("statement_list", 1214)), 0, (0)), 100000000, 0, -219)), 0, 0, 0, 0, (("compiler/lib/javascript.mli", 276, 6118, 6118), ("compiler/lib/javascript.mli", 276, 6118, 6144), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 51)), 2, 0); Tag1 (("statement_list", 1214), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("statement", 1211)), 0, (0)), 100000000, 0, -217); (Tag3 ((("location", 1190)), 0, (0)), 100000000, 0, -218)]), 100000000, 0, -216)], (0)), 100000000, 0, -215)), 0, 0, 0, 0, (("compiler/lib/javascript.mli", 278, 6146, 6146), ("compiler/lib/javascript.mli", 278, 6146, 6194), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 52)), 2, 0); Tag1 (("variable_declaration", 1215), (0, 0, Tag1 ([(("DeclIdent", 769), ([(Tag3 ((("binding_ident", 1231)), 0, (0)), 100000000, 0, -210); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("initialiser", 1218)), 0, (0)), 100000000, 0, -212)], (0)), 100000000, 0, -211)]), 0, (("compiler/lib/javascript.mli", 281, 6223, 6225), ("compiler/lib/javascript.mli", 281, 6223, 6274), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 209)); (("DeclPattern", 770), ([(Tag3 ((("binding_pattern", 1230)), 0, (0)), 100000000, 0, -213); (Tag3 ((("initialiser", 1218)), 0, (0)), 100000000, 0, -214)]), 0, (("compiler/lib/javascript.mli", 282, 6275, 6277), ("compiler/lib/javascript.mli", 282, 6275, 6323), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 210))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 280, 6196, 6196), ("compiler/lib/javascript.mli", 282, 6275, 6323), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 53)), 2, 0); Tag1 (("variable_declaration_kind", 1216), (0, 0, Tag1 ([(("Var", 771), (0), 0, (("compiler/lib/javascript.mli", 285, 6357, 6359), ("compiler/lib/javascript.mli", 285, 6357, 6364), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 211)); (("Let", 772), (0), 0, (("compiler/lib/javascript.mli", 286, 6365, 6367), ("compiler/lib/javascript.mli", 286, 6365, 6372), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 212)); (("Const", 773), (0), 0, (("compiler/lib/javascript.mli", 287, 6373, 6375), ("compiler/lib/javascript.mli", 287, 6373, 6382), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 213))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 284, 6325, 6325), ("compiler/lib/javascript.mli", 287, 6373, 6382), 0), 0, 1, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 54)), 2, 0); Tag1 (("case_clause", 1217), (0, 0, 0, 1, ((Tag2 ([(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -208); (Tag3 ((("statement_list", 1214)), 0, (0)), 100000000, 0, -209)]), 100000000, 0, -207)), 0, 0, 0, 0, (("compiler/lib/javascript.mli", 289, 6384, 6384), ("compiler/lib/javascript.mli", 289, 6384, 6429), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 55)), 2, 0); Tag1 (("initialiser", 1218), (0, 0, 0, 1, ((Tag2 ([(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -205); (Tag3 ((("location", 1190)), 0, (0)), 100000000, 0, -206)]), 100000000, 0, -204)), 0, 0, 0, 0, (("compiler/lib/javascript.mli", 291, 6431, 6431), ("compiler/lib/javascript.mli", 291, 6431, 6470), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 56)), 2, 0); Tag1 (("function_declaration", 1219), (0, 0, 0, 1, ((Tag2 ([(Tag3 ((("function_kind", 1220)), 0, (0)), 100000000, 0, -200); (Tag3 ((("formal_parameter_list", 1225)), 0, (0)), 100000000, 0, -201); (Tag3 ((("function_body", 1233)), 0, (0)), 100000000, 0, -202); (Tag3 ((("location", 1190)), 0, (0)), 100000000, 0, -203)]), 100000000, 0, -199)), 0, 0, 0, 0, (("compiler/lib/javascript.mli", 294, 6479, 6479), ("compiler/lib/javascript.mli", 295, 6506, 6572), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 57)), 2, 0); Tag1 (("function_kind", 1220), (0, 0, [[(("async", 774), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -197), (("compiler/lib/javascript.mli", 298, 6594, 6598), ("compiler/lib/javascript.mli", 299, 6611, 6614), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 214)); (("generator", 775), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -198), (("compiler/lib/javascript.mli", 299, 6611, 6615), ("compiler/lib/javascript.mli", 299, 6611, 6631), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 215))]], 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 297, 6574, 6574), ("compiler/lib/javascript.mli", 300, 6632, 6635), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 58)), 2, 0); Tag1 (("class_declaration", 1221), (0, 0, [[(("extends", 776), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -194)], (0)), 100000000, 0, -193), (("compiler/lib/javascript.mli", 303, 6661, 6665), ("compiler/lib/javascript.mli", 304, 6693, 6696), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 216)); (("body", 777), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_element", 1222)), 0, (0)), 100000000, 0, -196)], (0)), 100000000, 0, -195), (("compiler/lib/javascript.mli", 304, 6693, 6697), ("compiler/lib/javascript.mli", 304, 6693, 6722), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 217))]], 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 302, 6637, 6637), ("compiler/lib/javascript.mli", 305, 6723, 6726), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 59)), 2, 0); Tag1 (("class_element", 1222), (0, 0, Tag1 ([(("CEMethod", 778), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -185); (Tag3 ((("class_element_name", 1223)), 0, (0)), 100000000, 0, -186); (Tag3 ((("method_", 1204)), 0, (0)), 100000000, 0, -187)]), 0, (("compiler/lib/javascript.mli", 308, 6748, 6750), ("compiler/lib/javascript.mli", 308, 6748, 6812), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 218)); (("CEField", 779), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -188); (Tag3 ((("class_element_name", 1223)), 0, (0)), 100000000, 0, -189); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("initialiser", 1218)), 0, (0)), 100000000, 0, -191)], (0)), 100000000, 0, -190)]), 0, (("compiler/lib/javascript.mli", 309, 6813, 6815), ("compiler/lib/javascript.mli", 309, 6813, 6887), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 219)); (("CEStaticBLock", 780), ([(Tag3 ((("statement_list", 1214)), 0, (0)), 100000000, 0, -192)]), 0, (("compiler/lib/javascript.mli", 310, 6888, 6890), ("compiler/lib/javascript.mli", 310, 6888, 6923), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 220))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 307, 6728, 6728), ("compiler/lib/javascript.mli", 310, 6888, 6923), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 60)), 2, 0); Tag1 (("class_element_name", 1223), (0, 0, Tag1 ([(("PropName", 781), ([(Tag3 ((("property_name", 1205)), 0, (0)), 100000000, 0, -183)]), 0, (("compiler/lib/javascript.mli", 313, 6950, 6952), ("compiler/lib/javascript.mli", 313, 6950, 6979), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 221)); (("PrivName", 782), ([(Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -184)]), 0, (("compiler/lib/javascript.mli", 314, 6980, 6982), ("compiler/lib/javascript.mli", 314, 6980, 7001), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 222))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 312, 6925, 6925), ("compiler/lib/javascript.mli", 314, 6980, 7001), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 61)), 2, 0); Tag1 (("list_with_rest", 1224), ([((("a")), 100000000, 0, -180); ((("b")), 100000000, 0, -182)], 2, [[(("list", 783), 0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -180)], (0)), 100000000, 0, -179), (("compiler/lib/javascript.mli", 317, 7033, 7037), ("compiler/lib/javascript.mli", 318, 7052, 7055), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 223)); (("rest", 784), 0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -182)], (0)), 100000000, 0, -181), (("compiler/lib/javascript.mli", 318, 7052, 7056), ("compiler/lib/javascript.mli", 318, 7052, 7072), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 224))]], 1, 0, [25; 25], [0; 0], 0, 0, (("compiler/lib/javascript.mli", 316, 7003, 7003), ("compiler/lib/javascript.mli", 319, 7073, 7076), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 62)), 2, 0); Tag1 (("formal_parameter_list", 1225), (0, 0, 0, 1, ((Tag3 ((("list_with_rest", 1224)), [(Tag3 ((("formal_parameter", 1226)), 0, (0)), 100000000, 0, -177); (Tag3 ((("binding", 1229)), 0, (0)), 100000000, 0, -178)], (0)), 100000000, 0, -176)), 0, 0, 0, 0, (("compiler/lib/javascript.mli", 321, 7078, 7078), ("compiler/lib/javascript.mli", 321, 7078, 7148), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 63)), 2, 0); Tag1 (("formal_parameter", 1226), (0, 0, 0, 1, ((Tag3 ((("binding_element", 1228)), 0, (0)), 100000000, 0, -175)), 0, 0, 0, 0, (("compiler/lib/javascript.mli", 323, 7150, 7150), ("compiler/lib/javascript.mli", 323, 7150, 7188), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 64)), 2, 0); Tag1 (("for_binding", 1227), (0, 0, 0, 1, ((Tag3 ((("binding", 1229)), 0, (0)), 100000000, 0, -174)), 0, 0, 0, 0, (("compiler/lib/javascript.mli", 325, 7190, 7190), ("compiler/lib/javascript.mli", 325, 7190, 7215), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 65)), 2, 0); Tag1 (("binding_element", 1228), (0, 0, 0, 1, ((Tag2 ([(Tag3 ((("binding", 1229)), 0, (0)), 100000000, 0, -171); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("initialiser", 1218)), 0, (0)), 100000000, 0, -173)], (0)), 100000000, 0, -172)]), 100000000, 0, -170)), 0, 0, 0, 0, (("compiler/lib/javascript.mli", 327, 7217, 7217), ("compiler/lib/javascript.mli", 327, 7217, 7267), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 66)), 2, 0); Tag1 (("binding", 1229), (0, 0, Tag1 ([(("BindingIdent", 785), ([(Tag3 ((("binding_ident", 1231)), 0, (0)), 100000000, 0, -168)]), 0, (("compiler/lib/javascript.mli", 330, 7283, 7285), ("compiler/lib/javascript.mli", 330, 7283, 7316), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 225)); (("BindingPattern", 786), ([(Tag3 ((("binding_pattern", 1230)), 0, (0)), 100000000, 0, -169)]), 0, (("compiler/lib/javascript.mli", 331, 7317, 7319), ("compiler/lib/javascript.mli", 331, 7317, 7354), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 226))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 329, 7269, 7269), ("compiler/lib/javascript.mli", 331, 7317, 7354), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 67)), 2, 0); Tag1 (("binding_pattern", 1230), (0, 0, Tag1 ([(("ObjectBinding", 787), ([(Tag3 ((("list_with_rest", 1224)), [(Tag3 ((("binding_property", 1232)), 0, (0)), 100000000, 0, -162); (Tag3 ((("binding_ident", 1231)), 0, (0)), 100000000, 0, -163)], (0)), 100000000, 0, -161)]), 0, (("compiler/lib/javascript.mli", 334, 7378, 7380), ("compiler/lib/javascript.mli", 334, 7378, 7447), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 227)); (("ArrayBinding", 788), ([(Tag3 ((("list_with_rest", 1224)), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("binding_element", 1228)), 0, (0)), 100000000, 0, -166)], (0)), 100000000, 0, -165); (Tag3 ((("binding", 1229)), 0, (0)), 100000000, 0, -167)], (0)), 100000000, 0, -164)]), 0, (("compiler/lib/javascript.mli", 335, 7448, 7450), ("compiler/lib/javascript.mli", 335, 7448, 7516), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 228))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 333, 7356, 7356), ("compiler/lib/javascript.mli", 335, 7448, 7516), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 68)), 2, 0); Tag1 (("binding_ident", 1231), (0, 0, 0, 1, ((Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -160)), 0, 0, 0, 0, (("compiler/lib/javascript.mli", 337, 7518, 7518), ("compiler/lib/javascript.mli", 337, 7518, 7543), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 69)), 2, 0); Tag1 (("binding_property", 1232), (0, 0, Tag1 ([(("Prop_binding", 789), ([(Tag3 ((("property_name", 1205)), 0, (0)), 100000000, 0, -155); (Tag3 ((("binding_element", 1228)), 0, (0)), 100000000, 0, -156)]), 0, (("compiler/lib/javascript.mli", 340, 7568, 7570), ("compiler/lib/javascript.mli", 340, 7568, 7619), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 229)); (("Prop_ident", 790), ([(Tag3 ((("binding_ident", 1231)), 0, (0)), 100000000, 0, -157); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("initialiser", 1218)), 0, (0)), 100000000, 0, -159)], (0)), 100000000, 0, -158)]), 0, (("compiler/lib/javascript.mli", 341, 7620, 7622), ("compiler/lib/javascript.mli", 341, 7620, 7672), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 230))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 339, 7545, 7545), ("compiler/lib/javascript.mli", 341, 7620, 7672), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 70)), 2, 0); Tag1 (("function_body", 1233), (0, 0, 0, 1, ((Tag3 ((("statement_list", 1214)), 0, (0)), 100000000, 0, -154)), 0, 0, 0, 0, (("compiler/lib/javascript.mli", 343, 7674, 7674), ("compiler/lib/javascript.mli", 343, 7674, 7708), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 71)), 2, 0); Tag1 (("program", 1234), (0, 0, 0, 1, ((Tag3 ((("statement_list", 1214)), 0, (0)), 100000000, 0, -153)), 0, 0, 0, 0, (("compiler/lib/javascript.mli", 345, 7710, 7710), ("compiler/lib/javascript.mli", 345, 7710, 7738), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 72)), 2, 0); Tag1 (("export", 1235), (0, 0, Tag1 ([(("ExportVar", 791), ([(Tag3 ((("variable_declaration_kind", 1216)), 0, (0)), 100000000, 0, -134); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("variable_declaration", 1215)), 0, (0)), 100000000, 0, -136)], (0)), 100000000, 0, -135)]), 0, (("compiler/lib/javascript.mli", 348, 7753, 7755), ("compiler/lib/javascript.mli", 348, 7753, 7823), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 231)); (("ExportFun", 792), ([(Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -137); (Tag3 ((("function_declaration", 1219)), 0, (0)), 100000000, 0, -138)]), 0, (("compiler/lib/javascript.mli", 349, 7824, 7826), ("compiler/lib/javascript.mli", 349, 7824, 7869), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 232)); (("ExportClass", 793), ([(Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -139); (Tag3 ((("class_declaration", 1221)), 0, (0)), 100000000, 0, -140)]), 0, (("compiler/lib/javascript.mli", 350, 7870, 7872), ("compiler/lib/javascript.mli", 350, 7870, 7914), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 233)); (("ExportNames", 794), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -143); (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Stdlib"), "Utf8_string"), "t"), 0, (0)), 100000000, 0, -144)]), 100000000, 0, -142)], (0)), 100000000, 0, -141)]), 0, (("compiler/lib/javascript.mli", 351, 7915, 7917), ("compiler/lib/javascript.mli", 351, 7915, 7962), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 234)); (("ExportDefaultFun", 795), ([(Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -145); (Tag3 ((("function_declaration", 1219)), 0, (0)), 100000000, 0, -146)]), 0, (("compiler/lib/javascript.mli", 353, 7979, 7981), ("compiler/lib/javascript.mli", 353, 7979, 8031), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 235)); (("ExportDefaultClass", 796), ([(Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -147); (Tag3 ((("class_declaration", 1221)), 0, (0)), 100000000, 0, -148)]), 0, (("compiler/lib/javascript.mli", 354, 8032, 8034), ("compiler/lib/javascript.mli", 354, 8032, 8083), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 236)); (("ExportDefaultExpression", 797), ([(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -149)]), 0, (("compiler/lib/javascript.mli", 355, 8084, 8086), ("compiler/lib/javascript.mli", 355, 8084, 8125), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 237)); (("ExportFrom", 798), Tag1 ([(("kind", 799), 0, (Tag3 ((("export_from_kind", 1236)), 0, (0)), 100000000, 0, -150), (("compiler/lib/javascript.mli", 358, 8157, 8165), ("compiler/lib/javascript.mli", 359, 8189, 8196), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 238)); (("from", 800), 0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Stdlib"), "Utf8_string"), "t"), 0, (0)), 100000000, 0, -151), (("compiler/lib/javascript.mli", 359, 8189, 8197), ("compiler/lib/javascript.mli", 359, 8189, 8217), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 239))]), 0, (("compiler/lib/javascript.mli", 357, 8139, 8141), ("compiler/lib/javascript.mli", 360, 8218, 8225), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 240)); (("CoverExportFrom", 801), ([(Tag3 ((("early_error", 1193)), 0, (0)), 100000000, 0, -152)]), 0, (("compiler/lib/javascript.mli", 361, 8226, 8228), ("compiler/lib/javascript.mli", 361, 8226, 8260), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 241))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 347, 7740, 7740), ("compiler/lib/javascript.mli", 361, 8226, 8260), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 73)), 2, 0); Tag1 (("export_from_kind", 1236), (0, 0, Tag1 ([(("Export_all", 802), ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Stdlib"), "Utf8_string"), "t"), 0, (0)), 100000000, 0, -129)], (0)), 100000000, 0, -128)]), 0, (("compiler/lib/javascript.mli", 364, 8285, 8287), ("compiler/lib/javascript.mli", 364, 8285, 8323), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 242)); (("Export_names", 803), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Stdlib"), "Utf8_string"), "t"), 0, (0)), 100000000, 0, -132); (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Stdlib"), "Utf8_string"), "t"), 0, (0)), 100000000, 0, -133)]), 100000000, 0, -131)], (0)), 100000000, 0, -130)]), 0, (("compiler/lib/javascript.mli", 365, 8324, 8326), ("compiler/lib/javascript.mli", 365, 8324, 8380), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 243))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 363, 8262, 8262), ("compiler/lib/javascript.mli", 365, 8324, 8380), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 74)), 2, 0); Tag1 (("import", 1237), (0, 0, [[(("from", 804), 0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Stdlib"), "Utf8_string"), "t"), 0, (0)), 100000000, 0, -126), (("compiler/lib/javascript.mli", 368, 8395, 8399), ("compiler/lib/javascript.mli", 369, 8420, 8423), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 244)); (("kind", 805), 0, (Tag3 ((("import_kind", 1239)), 0, (0)), 100000000, 0, -127), (("compiler/lib/javascript.mli", 369, 8420, 8424), ("compiler/lib/javascript.mli", 369, 8420, 8442), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 245))]], 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 367, 8382, 8382), ("compiler/lib/javascript.mli", 370, 8443, 8446), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 75)), 2, 0); Tag1 (("import_default", 1238), (0, 0, 0, 1, ((Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -125)), 0, 0, 0, 0, (("compiler/lib/javascript.mli", 372, 8448, 8448), ("compiler/lib/javascript.mli", 372, 8448, 8474), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 76)), 2, 0); Tag1 (("import_kind", 1239), (0, 0, Tag1 ([(("Namespace", 806), ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("import_default", 1238)), 0, (0)), 100000000, 0, -116)], (0)), 100000000, 0, -115); (Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -117)]), 0, (("compiler/lib/javascript.mli", 375, 8494, 8496), ("compiler/lib/javascript.mli", 375, 8494, 8540), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 246)); (("Named", 807), ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("import_default", 1238)), 0, (0)), 100000000, 0, -119)], (0)), 100000000, 0, -118); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Stdlib"), "Utf8_string"), "t"), 0, (0)), 100000000, 0, -122); (Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -123)]), 100000000, 0, -121)], (0)), 100000000, 0, -120)]), 0, (("compiler/lib/javascript.mli", 378, 8630, 8632), ("compiler/lib/javascript.mli", 378, 8630, 8695), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 247)); (("Default", 808), ([(Tag3 ((("import_default", 1238)), 0, (0)), 100000000, 0, -124)]), 0, (("compiler/lib/javascript.mli", 381, 8799, 8801), ("compiler/lib/javascript.mli", 381, 8799, 8828), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 248)); (("SideEffect", 809), (0), 0, (("compiler/lib/javascript.mli", 383, 8869, 8871), ("compiler/lib/javascript.mli", 383, 8869, 8883), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 249))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/javascript.mli", 374, 8476, 8476), ("compiler/lib/javascript.mli", 383, 8869, 8883), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 77)), 2, 0); Tag1 (("program_with_annots", 1240), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("statement_list", 1214)), 0, (0)), 100000000, 0, -110); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Js_token"), "Annot"), "t"), 0, (0)), 100000000, 0, -113); (Tag3 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Parse_info"), "t"), 0, (0)), 100000000, 0, -114)]), 100000000, 0, -112)], (0)), 100000000, 0, -111)]), 100000000, 0, -109)], (0)), 100000000, 0, -108)), 0, 0, 0, 0, (("compiler/lib/javascript.mli", 385, 8906, 8906), ("compiler/lib/javascript.mli", 385, 8906, 8994), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 78)), 2, 0); (("compare_ident", 1241), ((Tag1 (0, (Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -107), (Tag1 (0, (Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -106), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -105), 0), 100000000, 0, -104), 0), 100000000, 0, -103), 0, (("compiler/lib/javascript.mli", 387, 8996, 8996), ("compiler/lib/javascript.mli", 387, 8996, 9037), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 257)), 0); (("is_ident", 1242), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -102), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -101), 0), 100000000, 0, -100), 0, (("compiler/lib/javascript.mli", 389, 9039, 9039), ("compiler/lib/javascript.mli", 389, 9039, 9068), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 258)), 0); (("is_ident'", 1243), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Stdlib"), "Utf8_string"), "t"), 0, (0)), 100000000, 0, -99), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -98), 0), 100000000, 0, -97), 0, (("compiler/lib/javascript.mli", 391, 9070, 9070), ("compiler/lib/javascript.mli", 391, 9070, 9107), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 259)), 0); (("ident", 1244), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("location", 1190)), 0, (0)), 100000000, 0, -96)], (0)), 100000000, 0, -95), (Tag1 (Tag1 ("var"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Code"), "Var"), "t"), 0, (0)), 100000000, 0, -94)], (0)), 100000000, 0, -93), (Tag1 (0, (Tag3 ((("identifier", 1191)), 0, (0)), 100000000, 0, -92), (Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -91), 0), 100000000, 0, -90), 0), 100000000, 0, -89), 0), 100000000, 0, -88), 0, (("compiler/lib/javascript.mli", 393, 9109, 9109), ("compiler/lib/javascript.mli", 393, 9109, 9176), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 260)), 0); (("param", 1245), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("location", 1190)), 0, (0)), 100000000, 0, -87)], (0)), 100000000, 0, -86), (Tag1 (Tag1 ("var"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Code"), "Var"), "t"), 0, (0)), 100000000, 0, -85)], (0)), 100000000, 0, -84), (Tag1 (0, (Tag3 ((("identifier", 1191)), 0, (0)), 100000000, 0, -83), (Tag3 ((("formal_parameter", 1226)), 0, (0)), 100000000, 0, -82), 0), 100000000, 0, -81), 0), 100000000, 0, -80), 0), 100000000, 0, -79), 0, (("compiler/lib/javascript.mli", 395, 9178, 9178), ("compiler/lib/javascript.mli", 395, 9178, 9256), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 261)), 0); (("param'", 1246), ((Tag1 (0, (Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -78), (Tag3 ((("formal_parameter", 1226)), 0, (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0, (("compiler/lib/javascript.mli", 397, 9258, 9258), ("compiler/lib/javascript.mli", 397, 9258, 9296), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 262)), 0); (("ident_unsafe", 1247), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("location", 1190)), 0, (0)), 100000000, 0, -75)], (0)), 100000000, 0, -74), (Tag1 (Tag1 ("var"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Code"), "Var"), "t"), 0, (0)), 100000000, 0, -73)], (0)), 100000000, 0, -72), (Tag1 (0, (Tag3 ((("identifier", 1191)), 0, (0)), 100000000, 0, -71), (Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0), 100000000, 0, -68), 0), 100000000, 0, -67), 0, (("compiler/lib/javascript.mli", 399, 9298, 9298), ("compiler/lib/javascript.mli", 399, 9298, 9372), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 263)), 0); (("bound_idents_of_params", 1248), ((Tag1 (0, (Tag3 ((("formal_parameter_list", 1225)), 0, (0)), 100000000, 0, -66), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -65)], (0)), 100000000, 0, -64), 0), 100000000, 0, -63), 0, (("compiler/lib/javascript.mli", 401, 9374, 9374), ("compiler/lib/javascript.mli", 401, 9374, 9438), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 264)), 0); (("bound_idents_of_variable_declaration", 1249), ((Tag1 (0, (Tag3 ((("variable_declaration", 1215)), 0, (0)), 100000000, 0, -62), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -61)], (0)), 100000000, 0, -60), 0), 100000000, 0, -59), 0, (("compiler/lib/javascript.mli", 403, 9440, 9440), ("compiler/lib/javascript.mli", 403, 9440, 9517), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 265)), 0); (("bound_idents_of_pattern", 1250), ((Tag1 (0, (Tag3 ((("binding_pattern", 1230)), 0, (0)), 100000000, 0, -58), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -57)], (0)), 100000000, 0, -56), 0), 100000000, 0, -55), 0, (("compiler/lib/javascript.mli", 405, 9519, 9519), ("compiler/lib/javascript.mli", 405, 9519, 9578), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 266)), 0); (("bound_idents_of_binding", 1251), ((Tag1 (0, (Tag3 ((("binding", 1229)), 0, (0)), 100000000, 0, -54), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -53)], (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("compiler/lib/javascript.mli", 407, 9580, 9580), ("compiler/lib/javascript.mli", 407, 9580, 9631), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 267)), 0); Tag3 (("IdentSet", 1252), 0, (Tag1 ([Tag1 (("elt", 1276), (0, 0, 0, 1, ((Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -665)), 0, 0, 0, 0, (("compiler/lib/javascript.mli", 409, 9633, 9662), ("compiler/lib/javascript.mli", 409, 9633, 9678), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 268)), 1, 0); Tag1 (("t", 1277), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("set.mli", 74, 2901, 2905), ("set.mli", 74, 2901, 2911), 0), 0, 0, 0, Tag1 ("Stdlib__Set", 4)), 1, 0); (("empty", 1278), ((Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -664), 0, (("set.mli", 77, 2942, 2946), ("set.mli", 77, 2942, 2958), 0), 0, Tag1 ("Stdlib__Set", 5)), 0); (("add", 1279), ((Tag1 (0, (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -663), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -662), (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -661), 0), 100000000, 0, -660), 0), 100000000, 0, -659), 0, (("set.mli", 80, 2986, 2990), ("set.mli", 80, 2986, 3012), 0), 0, Tag1 ("Stdlib__Set", 6)), 0); (("singleton", 1280), ((Tag1 (0, (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -658), (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -657), 0), 100000000, 0, -656), 0, (("set.mli", 86, 3278, 3282), ("set.mli", 86, 3278, 3305), 0), 0, Tag1 ("Stdlib__Set", 7)), 0); (("remove", 1281), ((Tag1 (0, (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -655), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -654), (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -653), 0), 100000000, 0, -652), 0), 100000000, 0, -651), 0, (("set.mli", 89, 3381, 3385), ("set.mli", 89, 3381, 3410), 0), 0, Tag1 ("Stdlib__Set", 8)), 0); (("union", 1282), ((Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -650), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -649), (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -648), 0), 100000000, 0, -647), 0), 100000000, 0, -646), 0, (("set.mli", 95, 3677, 3681), ("set.mli", 95, 3677, 3703), 0), 0, Tag1 ("Stdlib__Set", 9)), 0); (("inter", 1283), ((Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -645), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -644), (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -643), 0), 100000000, 0, -642), 0), 100000000, 0, -641), 0, (("set.mli", 98, 3727, 3731), ("set.mli", 98, 3727, 3753), 0), 0, Tag1 ("Stdlib__Set", 10)), 0); (("disjoint", 1284), ((Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -640), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -639), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -638), 0), 100000000, 0, -637), 0), 100000000, 0, -636), 0, (("set.mli", 101, 3784, 3788), ("set.mli", 101, 3784, 3816), 0), 0, Tag1 ("Stdlib__Set", 11)), 0); (("diff", 1285), ((Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -635), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -634), (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -633), 0), 100000000, 0, -632), 0), 100000000, 0, -631), 0, (("set.mli", 105, 3880, 3884), ("set.mli", 105, 3880, 3905), 0), 0, Tag1 ("Stdlib__Set", 12)), 0); (("cardinal", 1286), ((Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -630), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -629), 0), 100000000, 0, -628), 0, (("set.mli", 109, 4007, 4011), ("set.mli", 109, 4007, 4033), 0), 0, Tag1 ("Stdlib__Set", 13)), 0); (("elements", 1287), ((Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -627), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -626)], (0)), 100000000, 0, -625), 0), 100000000, 0, -624), 0, (("set.mli", 114, 4120, 4124), ("set.mli", 114, 4120, 4151), 0), 0, Tag1 ("Stdlib__Set", 14)), 0); (("min_elt", 1288), ((Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -623), (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -622), 0), 100000000, 0, -621), 0, (("set.mli", 120, 4380, 4384), ("set.mli", 120, 4380, 4405), 0), 0, Tag1 ("Stdlib__Set", 15)), 0); (("min_elt_opt", 1289), ((Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -620), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -619)], (0)), 100000000, 0, -618), 0), 100000000, 0, -617), 0, (("set.mli", 125, 4567, 4571), ("set.mli", 125, 4567, 4603), 0), 0, Tag1 ("Stdlib__Set", 16)), 0); (("max_elt", 1290), ((Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -616), (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -615), 0), 100000000, 0, -614), 0, (("set.mli", 131, 4774, 4778), ("set.mli", 131, 4774, 4799), 0), 0, Tag1 ("Stdlib__Set", 17)), 0); (("max_elt_opt", 1291), ((Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -613), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -612)], (0)), 100000000, 0, -611), 0), 100000000, 0, -610), 0, (("set.mli", 135, 4890, 4894), ("set.mli", 135, 4890, 4926), 0), 0, Tag1 ("Stdlib__Set", 18)), 0); (("choose", 1292), ((Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -609), (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -608), 0), 100000000, 0, -607), 0, (("set.mli", 140, 5041, 5045), ("set.mli", 140, 5041, 5065), 0), 0, Tag1 ("Stdlib__Set", 19)), 0); (("choose_opt", 1293), ((Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -606), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -605)], (0)), 100000000, 0, -604), 0), 100000000, 0, -603), 0, (("set.mli", 145, 5263, 5267), ("set.mli", 145, 5263, 5298), 0), 0, Tag1 ("Stdlib__Set", 20)), 0); (("find", 1294), ((Tag1 (0, (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -602), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -601), (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -600), 0), 100000000, 0, -599), 0), 100000000, 0, -598), 0, (("set.mli", 153, 5541, 5549), ("set.mli", 153, 5541, 5574), 0), 0, Tag1 ("Stdlib__Set", 21)), 0); (("find_opt", 1295), ((Tag1 (0, (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -597), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -596), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -595)], (0)), 100000000, 0, -594), 0), 100000000, 0, -593), 0), 100000000, 0, -592), 0, (("set.mli", 159, 5752, 5756), ("set.mli", 159, 5752, 5792), 0), 0, Tag1 ("Stdlib__Set", 22)), 0); (("find_first", 1296), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -591), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -590), 0), 100000000, 0, -589), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -588), (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -587), 0), 100000000, 0, -586), 0), 100000000, 0, -585), 0, (("set.mli", 165, 5963, 5967), ("set.mli", 165, 5963, 6008), 0), 0, Tag1 ("Stdlib__Set", 23)), 0); (("find_first_opt", 1297), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -584), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -583), 0), 100000000, 0, -582), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -581), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -580)], (0)), 100000000, 0, -579), 0), 100000000, 0, -578), 0), 100000000, 0, -577), 0, (("set.mli", 177, 6482, 6486), ("set.mli", 177, 6482, 6538), 0), 0, Tag1 ("Stdlib__Set", 24)), 0); (("find_last", 1298), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -576), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -575), 0), 100000000, 0, -574), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -573), (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -572), 0), 100000000, 0, -571), 0), 100000000, 0, -570), 0, (("set.mli", 184, 6779, 6783), ("set.mli", 184, 6779, 6823), 0), 0, Tag1 ("Stdlib__Set", 25)), 0); (("find_last_opt", 1299), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -569), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -568), 0), 100000000, 0, -567), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -566), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -565)], (0)), 100000000, 0, -564), 0), 100000000, 0, -563), 0), 100000000, 0, -562), 0, (("set.mli", 190, 7044, 7048), ("set.mli", 190, 7044, 7099), 0), 0, Tag1 ("Stdlib__Set", 26)), 0); (("iter", 1300), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -561), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -560), 0), 100000000, 0, -559), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -558), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -557), 0), 100000000, 0, -556), 0), 100000000, 0, -555), 0, (("set.mli", 198, 7371, 7375), ("set.mli", 198, 7371, 7411), 0), 0, Tag1 ("Stdlib__Set", 27)), 0); (("fold", 1301), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -554), (Tag1 (0, ((("acc")), 100000000, 0, -550), ((("acc")), 100000000, 0, -550), 0), 100000000, 0, -553), 0), 100000000, 0, -552), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -551), (Tag1 (0, ((("acc")), 100000000, 0, -550), ((("acc")), 100000000, 0, -550), 0), 100000000, 0, -549), 0), 100000000, 0, -548), 0), 100000000, 0, -547), 0, (("set.mli", 203, 7616, 7620), ("set.mli", 203, 7616, 7672), 0), 0, Tag1 ("Stdlib__Set", 28)), 0); (("map", 1302), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -546), (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -545), 0), 100000000, 0, -544), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -543), (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -542), 0), 100000000, 0, -541), 0), 100000000, 0, -540), 0, (("set.mli", 209, 7860, 7864), ("set.mli", 209, 7860, 7895), 0), 0, Tag1 ("Stdlib__Set", 29)), 0); (("filter", 1303), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -539), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -538), 0), 100000000, 0, -537), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -536), (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -535), 0), 100000000, 0, -534), 0), 100000000, 0, -533), 0, (("set.mli", 221, 8372, 8376), ("set.mli", 221, 8372, 8411), 0), 0, Tag1 ("Stdlib__Set", 30)), 0); (("filter_map", 1304), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -532), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -531)], (0)), 100000000, 0, -530), 0), 100000000, 0, -529), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -528), (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -527), 0), 100000000, 0, -526), 0), 100000000, 0, -525), 0, (("set.mli", 228, 8710, 8714), ("set.mli", 228, 8710, 8759), 0), 0, Tag1 ("Stdlib__Set", 31)), 0); (("partition", 1305), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -524), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -523), 0), 100000000, 0, -522), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -521), (Tag2 ([(Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -519); (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -520)]), 100000000, 0, -518), 0), 100000000, 0, -517), 0), 100000000, 0, -516), 0, (("set.mli", 243, 9275, 9279), ("set.mli", 243, 9275, 9321), 0), 0, Tag1 ("Stdlib__Set", 32)), 0); (("split", 1306), ((Tag1 (0, (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -515), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -514), (Tag2 ([(Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -511); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -512); (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -513)]), 100000000, 0, -510), 0), 100000000, 0, -509), 0), 100000000, 0, -508), 0, (("set.mli", 249, 9562, 9566), ("set.mli", 249, 9562, 9601), 0), 0, Tag1 ("Stdlib__Set", 33)), 0); (("is_empty", 1307), ((Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -507), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -506), 0), 100000000, 0, -505), 0, (("set.mli", 260, 10020, 10024), ("set.mli", 260, 10020, 10047), 0), 0, Tag1 ("Stdlib__Set", 34)), 0); (("mem", 1308), ((Tag1 (0, (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -504), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -503), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -502), 0), 100000000, 0, -501), 0), 100000000, 0, -500), 0, (("set.mli", 263, 10096, 10100), ("set.mli", 263, 10096, 10125), 0), 0, Tag1 ("Stdlib__Set", 35)), 0); (("equal", 1309), ((Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -499), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -498), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -497), 0), 100000000, 0, -496), 0), 100000000, 0, -495), 0, (("set.mli", 266, 10190, 10194), ("set.mli", 266, 10190, 10219), 0), 0, Tag1 ("Stdlib__Set", 36)), 0); (("compare", 1310), ((Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -494), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -493), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -492), 0), 100000000, 0, -491), 0), 100000000, 0, -490), 0, (("set.mli", 270, 10335, 10339), ("set.mli", 270, 10335, 10365), 0), 0, Tag1 ("Stdlib__Set", 37)), 0); (("subset", 1311), ((Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -489), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -488), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -487), 0), 100000000, 0, -486), 0), 100000000, 0, -485), 0, (("set.mli", 274, 10476, 10480), ("set.mli", 274, 10476, 10506), 0), 0, Tag1 ("Stdlib__Set", 38)), 0); (("for_all", 1312), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -484), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -483), 0), 100000000, 0, -482), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -481), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -480), 0), 100000000, 0, -479), 0), 100000000, 0, -478), 0, (("set.mli", 278, 10598, 10602), ("set.mli", 278, 10598, 10641), 0), 0, Tag1 ("Stdlib__Set", 39)), 0); (("exists", 1313), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -477), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -476), 0), 100000000, 0, -475), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -474), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -473), 0), 100000000, 0, -472), 0), 100000000, 0, -471), 0, (("set.mli", 282, 10737, 10741), ("set.mli", 282, 10737, 10779), 0), 0, Tag1 ("Stdlib__Set", 40)), 0); (("to_list", 1314), ((Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -470), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -469)], (0)), 100000000, 0, -468), 0), 100000000, 0, -467), 0, (("set.mli", 288, 10922, 10926), ("set.mli", 288, 10922, 10953), 0), 0, Tag1 ("Stdlib__Set", 41)), 0); (("of_list", 1315), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -466)], (0)), 100000000, 0, -465), (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -464), 0), 100000000, 0, -463), 0, (("set.mli", 292, 11017, 11021), ("set.mli", 292, 11017, 11047), 0), 0, Tag1 ("Stdlib__Set", 42)), 0); (("to_seq_from", 1316), ((Tag1 (0, (Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -462), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -461), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -460)], (0)), 100000000, 0, -459), 0), 100000000, 0, -458), 0), 100000000, 0, -457), 0, (("set.mli", 298, 11268, 11272), ("set.mli", 298, 11268, 11311), 0), 0, Tag1 ("Stdlib__Set", 43)), 0); (("to_seq", 1317), ((Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -456), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -455)], (0)), 100000000, 0, -454), 0), 100000000, 0, -453), 0, (("set.mli", 303, 11453, 11457), ("set.mli", 303, 11453, 11484), 0), 0, Tag1 ("Stdlib__Set", 44)), 0); (("to_rev_seq", 1318), ((Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -452), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -451)], (0)), 100000000, 0, -450), 0), 100000000, 0, -449), 0, (("set.mli", 307, 11562, 11566), ("set.mli", 307, 11562, 11597), 0), 0, Tag1 ("Stdlib__Set", 45)), 0); (("add_seq", 1319), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -448)], (0)), 100000000, 0, -447), (Tag1 (0, (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -446), (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -445), 0), 100000000, 0, -444), 0), 100000000, 0, -443), 0, (("set.mli", 311, 11676, 11680), ("set.mli", 311, 11676, 11713), 0), 0, Tag1 ("Stdlib__Set", 46)), 0); (("of_seq", 1320), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((("elt", 1276)), 0, (0)), 100000000, 0, -442)], (0)), 100000000, 0, -441), (Tag3 ((("t", 1277)), 0, (0)), 100000000, 0, -440), 0), 100000000, 0, -439), 0, (("set.mli", 315, 11791, 11795), ("set.mli", 315, 11791, 11822), 0), 0, Tag1 ("Stdlib__Set", 47)), 0)]), 0, (("compiler/lib/javascript.mli", 409, 9633, 9633), ("compiler/lib/javascript.mli", 409, 9633, 9678), 0), Tag1 ("Js_of_ocaml_compiler__Javascript", 269)), 0, 0); Tag3 (("IdentMap", 1253), 0, (Tag1 ([Tag1 (("key", 1321), (0, 0, 0, 1, ((Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -994)), 0, 0, 0, 0, (("compiler/lib/javascript.mli", 411, 9680, 9709), ("compiler/lib/javascript.mli", 411, 9680, 9725), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 270)), 1, 0); Tag1 (("t", 1322), ([((("a")), 100000000, 0, -993)], 1, 0, 1, 0, [9], [2], 0, 0, (("map.mli", 73, 2902, 2906), ("map.mli", 73, 2902, 2917), 0), 0, 0, 0, Tag1 ("Stdlib__Map", 4)), 1, 0); (("empty", 1323), ((Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -992)], (0)), 100000000, 0, -991), 0, (("map.mli", 76, 2977, 2981), ("map.mli", 76, 2977, 2996), 0), 0, Tag1 ("Stdlib__Map", 5)), 0); (("add", 1324), ((Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -990), (Tag1 (0, ((("a")), 100000000, 0, -988), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -988)], (0)), 100000000, 0, -989), (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -988)], (0)), 100000000, 0, -987), 0), 100000000, 0, -986), 0), 100000000, 0, -985), 0), 100000000, 0, -984), 0, (("map.mli", 79, 3024, 3028), ("map.mli", 79, 3024, 3062), 0), 0, Tag1 ("Stdlib__Map", 6)), 0); (("add_to_list", 1325), ((Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -983), (Tag1 (0, ((("a")), 100000000, 0, -980), (Tag1 (0, (Tag3 ((("t", 1322)), [(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -980)], (0)), 100000000, 0, -982)], (0)), 100000000, 0, -981), (Tag3 ((("t", 1322)), [(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -980)], (0)), 100000000, 0, -979)], (0)), 100000000, 0, -978), 0), 100000000, 0, -977), 0), 100000000, 0, -976), 0), 100000000, 0, -975), 0, (("map.mli", 88, 3503, 3507), ("map.mli", 88, 3503, 3559), 0), 0, Tag1 ("Stdlib__Map", 7)), 0); (("update", 1326), ((Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -974), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -969)], (0)), 100000000, 0, -973), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -969)], (0)), 100000000, 0, -972), 0), 100000000, 0, -971), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -969)], (0)), 100000000, 0, -970), (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -969)], (0)), 100000000, 0, -968), 0), 100000000, 0, -967), 0), 100000000, 0, -966), 0), 100000000, 0, -965), 0, (("map.mli", 94, 3753, 3757), ("map.mli", 94, 3753, 3816), 0), 0, Tag1 ("Stdlib__Map", 8)), 0); (("singleton", 1327), ((Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -964), (Tag1 (0, ((("a")), 100000000, 0, -963), (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -963)], (0)), 100000000, 0, -962), 0), 100000000, 0, -961), 0), 100000000, 0, -960), 0, (("map.mli", 106, 4436, 4440), ("map.mli", 106, 4436, 4472), 0), 0, Tag1 ("Stdlib__Map", 9)), 0); (("remove", 1328), ((Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -959), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -957)], (0)), 100000000, 0, -958), (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -957)], (0)), 100000000, 0, -956), 0), 100000000, 0, -955), 0), 100000000, 0, -954), 0, (("map.mli", 111, 4594, 4598), ("map.mli", 111, 4594, 4629), 0), 0, Tag1 ("Stdlib__Map", 10)), 0); (("merge", 1329), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -953), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -946)], (0)), 100000000, 0, -952), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -944)], (0)), 100000000, 0, -951), (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -942)], (0)), 100000000, 0, -950), 0), 100000000, 0, -949), 0), 100000000, 0, -948), 0), 100000000, 0, -947), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -946)], (0)), 100000000, 0, -945), (Tag1 (0, (Tag3 ((("t", 1322)), [((("b")), 100000000, 0, -944)], (0)), 100000000, 0, -943), (Tag3 ((("t", 1322)), [((("c")), 100000000, 0, -942)], (0)), 100000000, 0, -941), 0), 100000000, 0, -940), 0), 100000000, 0, -939), 0), 100000000, 0, -938), 0, (("map.mli", 118, 4950, 4954), ("map.mli", 120, 5019, 5045), 0), 0, Tag1 ("Stdlib__Map", 11)), 0); (("union", 1330), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -937), (Tag1 (0, ((("a")), 100000000, 0, -930), (Tag1 (0, ((("a")), 100000000, 0, -930), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -930)], (0)), 100000000, 0, -936), 0), 100000000, 0, -935), 0), 100000000, 0, -934), 0), 100000000, 0, -933), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -930)], (0)), 100000000, 0, -932), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -930)], (0)), 100000000, 0, -931), (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -930)], (0)), 100000000, 0, -929), 0), 100000000, 0, -928), 0), 100000000, 0, -927), 0), 100000000, 0, -926), 0, (("map.mli", 129, 5475, 5479), ("map.mli", 129, 5475, 5544), 0), 0, Tag1 ("Stdlib__Map", 12)), 0); (("cardinal", 1331), ((Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -925)], (0)), 100000000, 0, -924), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -923), 0), 100000000, 0, -922), 0, (("map.mli", 142, 6061, 6065), ("map.mli", 142, 6061, 6090), 0), 0, Tag1 ("Stdlib__Map", 13)), 0); (("bindings", 1332), ((Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -920)], (0)), 100000000, 0, -921), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -919); ((("a")), 100000000, 0, -920)]), 100000000, 0, -918)], (0)), 100000000, 0, -917), 0), 100000000, 0, -916), 0, (("map.mli", 148, 6197, 6201), ("map.mli", 148, 6197, 6238), 0), 0, Tag1 ("Stdlib__Map", 14)), 0); (("min_binding", 1333), ((Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -914)], (0)), 100000000, 0, -915), (Tag2 ([(Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -913); ((("a")), 100000000, 0, -914)]), 100000000, 0, -912), 0), 100000000, 0, -911), 0, (("map.mli", 155, 6495, 6499), ("map.mli", 155, 6495, 6534), 0), 0, Tag1 ("Stdlib__Map", 15)), 0); (("min_binding_opt", 1334), ((Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -909)], (0)), 100000000, 0, -910), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -908); ((("a")), 100000000, 0, -909)]), 100000000, 0, -907)], (0)), 100000000, 0, -906), 0), 100000000, 0, -905), 0, (("map.mli", 161, 6727, 6731), ("map.mli", 161, 6727, 6777), 0), 0, Tag1 ("Stdlib__Map", 16)), 0); (("max_binding", 1335), ((Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -903)], (0)), 100000000, 0, -904), (Tag2 ([(Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -902); ((("a")), 100000000, 0, -903)]), 100000000, 0, -901), 0), 100000000, 0, -900), 0, (("map.mli", 167, 6961, 6965), ("map.mli", 167, 6961, 7000), 0), 0, Tag1 ("Stdlib__Map", 17)), 0); (("max_binding_opt", 1336), ((Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -898)], (0)), 100000000, 0, -899), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -897); ((("a")), 100000000, 0, -898)]), 100000000, 0, -896)], (0)), 100000000, 0, -895), 0), 100000000, 0, -894), 0, (("map.mli", 172, 7128, 7132), ("map.mli", 172, 7128, 7178), 0), 0, Tag1 ("Stdlib__Map", 18)), 0); (("choose", 1337), ((Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -892)], (0)), 100000000, 0, -893), (Tag2 ([(Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -891); ((("a")), 100000000, 0, -892)]), 100000000, 0, -890), 0), 100000000, 0, -889), 0, (("map.mli", 177, 7310, 7314), ("map.mli", 177, 7310, 7344), 0), 0, Tag1 ("Stdlib__Map", 19)), 0); (("choose_opt", 1338), ((Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -887)], (0)), 100000000, 0, -888), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -886); ((("a")), 100000000, 0, -887)]), 100000000, 0, -885)], (0)), 100000000, 0, -884), 0), 100000000, 0, -883), 0, (("map.mli", 183, 7562, 7566), ("map.mli", 183, 7562, 7607), 0), 0, Tag1 ("Stdlib__Map", 20)), 0); (("find", 1339), ((Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -882), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -880)], (0)), 100000000, 0, -881), ((("a")), 100000000, 0, -880), 0), 100000000, 0, -879), 0), 100000000, 0, -878), 0, (("map.mli", 191, 7850, 7854), ("map.mli", 191, 7850, 7881), 0), 0, Tag1 ("Stdlib__Map", 21)), 0); (("find_opt", 1340), ((Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -877), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -875)], (0)), 100000000, 0, -876), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -875)], (0)), 100000000, 0, -874), 0), 100000000, 0, -873), 0), 100000000, 0, -872), 0, (("map.mli", 195, 8006, 8010), ("map.mli", 195, 8006, 8048), 0), 0, Tag1 ("Stdlib__Map", 22)), 0); (("find_first", 1341), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -871), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -870), 0), 100000000, 0, -869), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -867)], (0)), 100000000, 0, -868), (Tag2 ([(Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -866); ((("a")), 100000000, 0, -867)]), 100000000, 0, -865), 0), 100000000, 0, -864), 0), 100000000, 0, -863), 0, (("map.mli", 200, 8204, 8208), ("map.mli", 200, 8204, 8257), 0), 0, Tag1 ("Stdlib__Map", 23)), 0); (("find_first_opt", 1342), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -862), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -861), 0), 100000000, 0, -860), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -858)], (0)), 100000000, 0, -859), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -857); ((("a")), 100000000, 0, -858)]), 100000000, 0, -856)], (0)), 100000000, 0, -855), 0), 100000000, 0, -854), 0), 100000000, 0, -853), 0, (("map.mli", 212, 8743, 8747), ("map.mli", 212, 8743, 8809), 0), 0, Tag1 ("Stdlib__Map", 24)), 0); (("find_last", 1343), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -852), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -851), 0), 100000000, 0, -850), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -848)], (0)), 100000000, 0, -849), (Tag2 ([(Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -847); ((("a")), 100000000, 0, -848)]), 100000000, 0, -846), 0), 100000000, 0, -845), 0), 100000000, 0, -844), 0, (("map.mli", 218, 9052, 9056), ("map.mli", 218, 9052, 9104), 0), 0, Tag1 ("Stdlib__Map", 25)), 0); (("find_last_opt", 1344), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -843), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -842), 0), 100000000, 0, -841), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -839)], (0)), 100000000, 0, -840), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -838); ((("a")), 100000000, 0, -839)]), 100000000, 0, -837)], (0)), 100000000, 0, -836), 0), 100000000, 0, -835), 0), 100000000, 0, -834), 0, (("map.mli", 224, 9334, 9338), ("map.mli", 224, 9334, 9399), 0), 0, Tag1 ("Stdlib__Map", 26)), 0); (("iter", 1345), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -833), (Tag1 (0, ((("a")), 100000000, 0, -829), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -832), 0), 100000000, 0, -831), 0), 100000000, 0, -830), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -829)], (0)), 100000000, 0, -828), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -827), 0), 100000000, 0, -826), 0), 100000000, 0, -825), 0, (("map.mli", 233, 9688, 9692), ("map.mli", 233, 9688, 9737), 0), 0, Tag1 ("Stdlib__Map", 27)), 0); (("fold", 1346), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -824), (Tag1 (0, ((("a")), 100000000, 0, -820), (Tag1 (0, ((("acc")), 100000000, 0, -818), ((("acc")), 100000000, 0, -818), 0), 100000000, 0, -823), 0), 100000000, 0, -822), 0), 100000000, 0, -821), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -820)], (0)), 100000000, 0, -819), (Tag1 (0, ((("acc")), 100000000, 0, -818), ((("acc")), 100000000, 0, -818), 0), 100000000, 0, -817), 0), 100000000, 0, -816), 0), 100000000, 0, -815), 0, (("map.mli", 239, 10018, 10022), ("map.mli", 240, 10032, 10089), 0), 0, Tag1 ("Stdlib__Map", 28)), 0); (("map", 1347), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -813), ((("b")), 100000000, 0, -811), 0), 100000000, 0, -814), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -813)], (0)), 100000000, 0, -812), (Tag3 ((("t", 1322)), [((("b")), 100000000, 0, -811)], (0)), 100000000, 0, -810), 0), 100000000, 0, -809), 0), 100000000, 0, -808), 0, (("map.mli", 247, 10338, 10342), ("map.mli", 247, 10338, 10377), 0), 0, Tag1 ("Stdlib__Map", 29)), 0); (("mapi", 1348), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -807), (Tag1 (0, ((("a")), 100000000, 0, -804), ((("b")), 100000000, 0, -802), 0), 100000000, 0, -806), 0), 100000000, 0, -805), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -804)], (0)), 100000000, 0, -803), (Tag3 ((("t", 1322)), [((("b")), 100000000, 0, -802)], (0)), 100000000, 0, -801), 0), 100000000, 0, -800), 0), 100000000, 0, -799), 0, (("map.mli", 254, 10698, 10702), ("map.mli", 254, 10698, 10745), 0), 0, Tag1 ("Stdlib__Map", 30)), 0); (("filter", 1349), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -798), (Tag1 (0, ((("a")), 100000000, 0, -793), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -797), 0), 100000000, 0, -796), 0), 100000000, 0, -795), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -793)], (0)), 100000000, 0, -794), (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -793)], (0)), 100000000, 0, -792), 0), 100000000, 0, -791), 0), 100000000, 0, -790), 0, (("map.mli", 258, 10888, 10892), ("map.mli", 258, 10888, 10939), 0), 0, Tag1 ("Stdlib__Map", 31)), 0); (("filter_map", 1350), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -789), (Tag1 (0, ((("a")), 100000000, 0, -785), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -783)], (0)), 100000000, 0, -788), 0), 100000000, 0, -787), 0), 100000000, 0, -786), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -785)], (0)), 100000000, 0, -784), (Tag3 ((("t", 1322)), [((("b")), 100000000, 0, -783)], (0)), 100000000, 0, -782), 0), 100000000, 0, -781), 0), 100000000, 0, -780), 0, (("map.mli", 266, 11264, 11268), ("map.mli", 266, 11264, 11324), 0), 0, Tag1 ("Stdlib__Map", 32)), 0); (("partition", 1351), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -779), (Tag1 (0, ((("a")), 100000000, 0, -773), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -778), 0), 100000000, 0, -777), 0), 100000000, 0, -776), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -773)], (0)), 100000000, 0, -775), (Tag2 ([(Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -773)], (0)), 100000000, 0, -772); (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -773)], (0)), 100000000, 0, -774)]), 100000000, 0, -771), 0), 100000000, 0, -770), 0), 100000000, 0, -769), 0, (("map.mli", 285, 12005, 12009), ("map.mli", 285, 12005, 12066), 0), 0, Tag1 ("Stdlib__Map", 33)), 0); (("split", 1352), ((Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -768), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -764)], (0)), 100000000, 0, -767), (Tag2 ([(Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -764)], (0)), 100000000, 0, -763); (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -764)], (0)), 100000000, 0, -765); (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -764)], (0)), 100000000, 0, -766)]), 100000000, 0, -762), 0), 100000000, 0, -761), 0), 100000000, 0, -760), 0, (("map.mli", 292, 12324, 12328), ("map.mli", 292, 12324, 12377), 0), 0, Tag1 ("Stdlib__Map", 34)), 0); (("is_empty", 1353), ((Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -759)], (0)), 100000000, 0, -758), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -757), 0), 100000000, 0, -756), 0, (("map.mli", 304, 12826, 12830), ("map.mli", 304, 12826, 12856), 0), 0, Tag1 ("Stdlib__Map", 35)), 0); (("mem", 1354), ((Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -755), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -754)], (0)), 100000000, 0, -753), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -752), 0), 100000000, 0, -751), 0), 100000000, 0, -750), 0, (("map.mli", 307, 12905, 12909), ("map.mli", 307, 12905, 12937), 0), 0, Tag1 ("Stdlib__Map", 36)), 0); (("equal", 1355), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -745), (Tag1 (0, ((("a")), 100000000, 0, -745), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -749), 0), 100000000, 0, -748), 0), 100000000, 0, -747), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -745)], (0)), 100000000, 0, -746), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -745)], (0)), 100000000, 0, -744), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -743), 0), 100000000, 0, -742), 0), 100000000, 0, -741), 0), 100000000, 0, -740), 0, (("map.mli", 311, 13041, 13045), ("map.mli", 311, 13041, 13098), 0), 0, Tag1 ("Stdlib__Map", 37)), 0); (("compare", 1356), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -735), (Tag1 (0, ((("a")), 100000000, 0, -735), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -739), 0), 100000000, 0, -738), 0), 100000000, 0, -737), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -735)], (0)), 100000000, 0, -736), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -735)], (0)), 100000000, 0, -734), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -733), 0), 100000000, 0, -732), 0), 100000000, 0, -731), 0), 100000000, 0, -730), 0, (("map.mli", 317, 13349, 13353), ("map.mli", 317, 13349, 13406), 0), 0, Tag1 ("Stdlib__Map", 38)), 0); (("for_all", 1357), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -729), (Tag1 (0, ((("a")), 100000000, 0, -725), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -728), 0), 100000000, 0, -727), 0), 100000000, 0, -726), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -725)], (0)), 100000000, 0, -724), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -723), 0), 100000000, 0, -722), 0), 100000000, 0, -721), 0, (("map.mli", 321, 13561, 13565), ("map.mli", 321, 13561, 13613), 0), 0, Tag1 ("Stdlib__Map", 39)), 0); (("exists", 1358), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -720), (Tag1 (0, ((("a")), 100000000, 0, -716), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -719), 0), 100000000, 0, -718), 0), 100000000, 0, -717), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -716)], (0)), 100000000, 0, -715), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -714), 0), 100000000, 0, -713), 0), 100000000, 0, -712), 0, (("map.mli", 326, 13733, 13737), ("map.mli", 326, 13733, 13784), 0), 0, Tag1 ("Stdlib__Map", 40)), 0); (("to_list", 1359), ((Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -710)], (0)), 100000000, 0, -711), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -709); ((("a")), 100000000, 0, -710)]), 100000000, 0, -708)], (0)), 100000000, 0, -707), 0), 100000000, 0, -706), 0, (("map.mli", 333, 13947, 13951), ("map.mli", 333, 13947, 13988), 0), 0, Tag1 ("Stdlib__Map", 41)), 0); (("of_list", 1360), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -705); ((("a")), 100000000, 0, -702)]), 100000000, 0, -704)], (0)), 100000000, 0, -703), (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -702)], (0)), 100000000, 0, -701), 0), 100000000, 0, -700), 0, (("map.mli", 337, 14052, 14056), ("map.mli", 337, 14052, 14093), 0), 0, Tag1 ("Stdlib__Map", 42)), 0); (("to_seq", 1361), ((Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -698)], (0)), 100000000, 0, -699), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag2 ([(Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -697); ((("a")), 100000000, 0, -698)]), 100000000, 0, -696)], (0)), 100000000, 0, -695), 0), 100000000, 0, -694), 0, (("map.mli", 343, 14271, 14275), ("map.mli", 343, 14271, 14312), 0), 0, Tag1 ("Stdlib__Map", 43)), 0); (("to_rev_seq", 1362), ((Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -692)], (0)), 100000000, 0, -693), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag2 ([(Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -691); ((("a")), 100000000, 0, -692)]), 100000000, 0, -690)], (0)), 100000000, 0, -689), 0), 100000000, 0, -688), 0, (("map.mli", 347, 14398, 14402), ("map.mli", 347, 14398, 14443), 0), 0, Tag1 ("Stdlib__Map", 44)), 0); (("to_seq_from", 1363), ((Tag1 (0, (Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -687), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -685)], (0)), 100000000, 0, -686), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag2 ([(Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -684); ((("a")), 100000000, 0, -685)]), 100000000, 0, -683)], (0)), 100000000, 0, -682), 0), 100000000, 0, -681), 0), 100000000, 0, -680), 0, (("map.mli", 351, 14530, 14534), ("map.mli", 351, 14530, 14583), 0), 0, Tag1 ("Stdlib__Map", 45)), 0); (("add_seq", 1364), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag2 ([(Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -679); ((("a")), 100000000, 0, -675)]), 100000000, 0, -678)], (0)), 100000000, 0, -677), (Tag1 (0, (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -675)], (0)), 100000000, 0, -676), (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -675)], (0)), 100000000, 0, -674), 0), 100000000, 0, -673), 0), 100000000, 0, -672), 0, (("map.mli", 356, 14738, 14742), ("map.mli", 356, 14738, 14788), 0), 0, Tag1 ("Stdlib__Map", 46)), 0); (("of_seq", 1365), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag2 ([(Tag3 ((("key", 1321)), 0, (0)), 100000000, 0, -671); ((("a")), 100000000, 0, -668)]), 100000000, 0, -670)], (0)), 100000000, 0, -669), (Tag3 ((("t", 1322)), [((("a")), 100000000, 0, -668)], (0)), 100000000, 0, -667), 0), 100000000, 0, -666), 0, (("map.mli", 360, 14866, 14870), ("map.mli", 360, 14866, 14907), 0), 0, Tag1 ("Stdlib__Map", 47)), 0)]), 0, (("compiler/lib/javascript.mli", 411, 9680, 9680), ("compiler/lib/javascript.mli", 411, 9680, 9725), 0), Tag1 ("Js_of_ocaml_compiler__Javascript", 271)), 0, 0); (("dot", 1254), ((Tag1 (0, (Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 ((("identifier", 1191)), 0, (0)), 100000000, 0, -49), (Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("compiler/lib/javascript.mli", 413, 9727, 9727), ("compiler/lib/javascript.mli", 413, 9727, 9775), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 272)), 0); (("array", 1255), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -45)], (0)), 100000000, 0, -44), (Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("compiler/lib/javascript.mli", 415, 9777, 9777), ("compiler/lib/javascript.mli", 415, 9777, 9818), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 273)), 0); (("call", 1256), ((Tag1 (0, (Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -41), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -40)], (0)), 100000000, 0, -39), (Tag1 (0, (Tag3 ((("location", 1190)), 0, (0)), 100000000, 0, -38), (Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("compiler/lib/javascript.mli", 417, 9820, 9820), ("compiler/lib/javascript.mli", 417, 9820, 9886), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 274)), 0); (("variable_declaration", 1257), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -32); (Tag3 ((("initialiser", 1218)), 0, (0)), 100000000, 0, -33)]), 100000000, 0, -31)], (0)), 100000000, 0, -30), (Tag3 ((("statement", 1211)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("compiler/lib/javascript.mli", 419, 9888, 9888), ("compiler/lib/javascript.mli", 419, 9888, 9954), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 275)), 0); (("list", 1258), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -25)], (0)), 100000000, 0, -27), (Tag3 ((("list_with_rest", 1224)), [((("a")), 100000000, 0, -25); ((0), 100000000, 0, -26)], (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("compiler/lib/javascript.mli", 421, 9956, 9956), ("compiler/lib/javascript.mli", 421, 9956, 10000), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 276)), 0); (("early_error", 1259), ((Tag1 (Tag1 ("reason"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -22)], (0)), 100000000, 0, -21), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Parse_info"), "t"), 0, (0)), 100000000, 0, -20), (Tag3 ((("early_error", 1193)), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("compiler/lib/javascript.mli", 423, 10002, 10002), ("compiler/lib/javascript.mli", 423, 10002, 10065), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 277)), 0); (("fun_", 1260), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("ident", 1194)), 0, (0)), 100000000, 0, -16)], (0)), 100000000, 0, -15), (Tag1 (0, (Tag3 ((("statement_list", 1214)), 0, (0)), 100000000, 0, -14), (Tag1 (0, (Tag3 ((("location", 1190)), 0, (0)), 100000000, 0, -13), (Tag3 ((("function_declaration", 1219)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("compiler/lib/javascript.mli", 425, 10067, 10067), ("compiler/lib/javascript.mli", 425, 10067, 10142), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 278)), 0); (("assignment_pattern_of_expr", 1261), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("binop", 1198)), 0, (0)), 100000000, 0, -8)], (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 ((("expression", 1206)), 0, (0)), 100000000, 0, -6), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("binding_pattern", 1230)), 0, (0)), 100000000, 0, -5)], (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("compiler/lib/javascript.mli", 427, 10144, 10144), ("compiler/lib/javascript.mli", 427, 10144, 10229), 0), 0, Tag1 ("Js_of_ocaml_compiler__Javascript", 279)), 0)], "Js_of_ocaml_compiler__Javascript", [("Js_of_ocaml_compiler__Javascript", ("\155\213x*\244\2451\153\243\178\151\133\019\173^:")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__StringLabels", ("\134F\024\226\216Is#\223\230\234\169Z\206Gc")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Random", ("\020\005Xq\171\026\218\152X\135\254\023\133zK\200")); ("Stdlib__Printf", ("\215<\139]\021\142\224E\245m\198qc(W\229")); ("Stdlib__Printexc", ("\217u\168\235\179oi\167\235\255\025\017%d\192s")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__ListLabels", ("*\194\012\191\020%\170\249m\002\180\178hk\205\220")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Fun", ("\234t\181\000iQ\251,\b\020$\224\233\160\142\210")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Filename", ("z\163\210n\195\247\255\129\029SI\180\152\141h ")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Char", ("\1794\1468\190\138\150g\231\240\140d\191.\212e")); ("Stdlib__BytesLabels", ("\145\128\000\239\186Z.\0310^\247\201\174\\\137R")); ("Stdlib__Bytes", ("C\134\194)\175\222\137p\205\246\244\r\241\164P\209")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__ArrayLabels", ("\029\143d\025\218v\003\007\212jC\235/\205\006\198")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Js_of_ocaml_compiler__Stdlib", ("\162;P\232\137\003\012\252\217E\227\201\001\204\163j")); ("Js_of_ocaml_compiler__Primitive", ("\131\186\144\175\240\170t#\016p\219\012\\\020\211b")); ("Js_of_ocaml_compiler__Parse_info", ("`+\018\231C(v\197\016 .\222N\n\219\229")); ("Js_of_ocaml_compiler__Js_token", ("x\209\213\210\201\210\166u\150\014\024\249Q\184\161\216")); ("Js_of_ocaml_compiler__Code", ("\016a\196PfGPO\142UB\129\019g#\027")); ("Js_of_ocaml_compiler", ("\140\150\022\231\129$!^\139\156\170\236r\184~q")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
binop option -> expression -> binding_pattern option
