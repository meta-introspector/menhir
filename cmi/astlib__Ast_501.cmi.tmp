module Asttypes :
  sig
    type constant =
      Asttypes.constant =
        Const_int of int
      | Const_char of char
      | Const_string of string * Astlib__.Location.t * string option
      | Const_float of string
      | Const_int32 of int32
      | Const_int64 of int64
      | Const_nativeint of nativeint
    type rec_flag = Asttypes.rec_flag = Nonrecursive | Recursive
    type direction_flag = Asttypes.direction_flag = Upto | Downto
    type private_flag = Asttypes.private_flag = Private | Public
    type mutable_flag = Asttypes.mutable_flag = Immutable | Mutable
    type virtual_flag = Asttypes.virtual_flag = Virtual | Concrete
    type override_flag = Asttypes.override_flag = Override | Fresh
    type closed_flag = Asttypes.closed_flag = Closed | Open
    type label = string
    type arg_label =
      Asttypes.arg_label =
        Nolabel
      | Labelled of string
      | Optional of string
    type 'a loc =
      'a Astlib__.Location.loc = {
      txt : 'a;
      loc : Astlib__.Location.t;
    }
    type variance =
      Asttypes.variance =
        Covariant
      | Contravariant
      | NoVariance
    type injectivity = Asttypes.injectivity = Injective | NoInjectivity
  end
module Parsetree :
  sig
    type constant =
      Parsetree.constant =
        Pconst_integer of string * char option
      | Pconst_char of char
      | Pconst_string of string * Astlib__.Location.t * string option
      | Pconst_float of string * char option
    type location_stack = Astlib__.Location.t list
    type attribute =
      Parsetree.attribute = {
      attr_name : string Asttypes.loc;
      attr_payload : payload;
      attr_loc : Astlib__.Location.t;
    }
    and extension = string Asttypes.loc * payload
    and attributes = attribute list
    and payload =
      Parsetree.payload =
        PStr of structure
      | PSig of signature
      | PTyp of core_type
      | PPat of pattern * expression option
    and core_type =
      Parsetree.core_type = {
      ptyp_desc : core_type_desc;
      ptyp_loc : Astlib__.Location.t;
      ptyp_loc_stack : location_stack;
      ptyp_attributes : attributes;
    }
    and core_type_desc =
      Parsetree.core_type_desc =
        Ptyp_any
      | Ptyp_var of string
      | Ptyp_arrow of Asttypes.arg_label * core_type * core_type
      | Ptyp_tuple of core_type list
      | Ptyp_constr of Astlib__.Longident.t Asttypes.loc * core_type list
      | Ptyp_object of object_field list * Asttypes.closed_flag
      | Ptyp_class of Astlib__.Longident.t Asttypes.loc * core_type list
      | Ptyp_alias of core_type * string
      | Ptyp_variant of row_field list * Asttypes.closed_flag *
          Asttypes.label list option
      | Ptyp_poly of string Asttypes.loc list * core_type
      | Ptyp_package of package_type
      | Ptyp_extension of extension
    and package_type =
        Astlib__.Longident.t Asttypes.loc *
        (Astlib__.Longident.t Asttypes.loc * core_type) list
    and row_field =
      Parsetree.row_field = {
      prf_desc : row_field_desc;
      prf_loc : Astlib__.Location.t;
      prf_attributes : attributes;
    }
    and row_field_desc =
      Parsetree.row_field_desc =
        Rtag of Asttypes.label Asttypes.loc * bool * core_type list
      | Rinherit of core_type
    and object_field =
      Parsetree.object_field = {
      pof_desc : object_field_desc;
      pof_loc : Astlib__.Location.t;
      pof_attributes : attributes;
    }
    and object_field_desc =
      Parsetree.object_field_desc =
        Otag of Asttypes.label Asttypes.loc * core_type
      | Oinherit of core_type
    and pattern =
      Parsetree.pattern = {
      ppat_desc : pattern_desc;
      ppat_loc : Astlib__.Location.t;
      ppat_loc_stack : location_stack;
      ppat_attributes : attributes;
    }
    and pattern_desc =
      Parsetree.pattern_desc =
        Ppat_any
      | Ppat_var of string Asttypes.loc
      | Ppat_alias of pattern * string Asttypes.loc
      | Ppat_constant of constant
      | Ppat_interval of constant * constant
      | Ppat_tuple of pattern list
      | Ppat_construct of Astlib__.Longident.t Asttypes.loc *
          (string Asttypes.loc list * pattern) option
      | Ppat_variant of Asttypes.label * pattern option
      | Ppat_record of (Astlib__.Longident.t Asttypes.loc * pattern) list *
          Asttypes.closed_flag
      | Ppat_array of pattern list
      | Ppat_or of pattern * pattern
      | Ppat_constraint of pattern * core_type
      | Ppat_type of Astlib__.Longident.t Asttypes.loc
      | Ppat_lazy of pattern
      | Ppat_unpack of string option Asttypes.loc
      | Ppat_exception of pattern
      | Ppat_extension of extension
      | Ppat_open of Astlib__.Longident.t Asttypes.loc * pattern
    and expression =
      Parsetree.expression = {
      pexp_desc : expression_desc;
      pexp_loc : Astlib__.Location.t;
      pexp_loc_stack : location_stack;
      pexp_attributes : attributes;
    }
    and expression_desc =
      Parsetree.expression_desc =
        Pexp_ident of Astlib__.Longident.t Asttypes.loc
      | Pexp_constant of constant
      | Pexp_let of Asttypes.rec_flag * value_binding list * expression
      | Pexp_function of case list
      | Pexp_fun of Asttypes.arg_label * expression option * pattern *
          expression
      | Pexp_apply of expression * (Asttypes.arg_label * expression) list
      | Pexp_match of expression * case list
      | Pexp_try of expression * case list
      | Pexp_tuple of expression list
      | Pexp_construct of Astlib__.Longident.t Asttypes.loc *
          expression option
      | Pexp_variant of Asttypes.label * expression option
      | Pexp_record of
          (Astlib__.Longident.t Asttypes.loc * expression) list *
          expression option
      | Pexp_field of expression * Astlib__.Longident.t Asttypes.loc
      | Pexp_setfield of expression * Astlib__.Longident.t Asttypes.loc *
          expression
      | Pexp_array of expression list
      | Pexp_ifthenelse of expression * expression * expression option
      | Pexp_sequence of expression * expression
      | Pexp_while of expression * expression
      | Pexp_for of pattern * expression * expression *
          Asttypes.direction_flag * expression
      | Pexp_constraint of expression * core_type
      | Pexp_coerce of expression * core_type option * core_type
      | Pexp_send of expression * Asttypes.label Asttypes.loc
      | Pexp_new of Astlib__.Longident.t Asttypes.loc
      | Pexp_setinstvar of Asttypes.label Asttypes.loc * expression
      | Pexp_override of (Asttypes.label Asttypes.loc * expression) list
      | Pexp_letmodule of string option Asttypes.loc * module_expr *
          expression
      | Pexp_letexception of extension_constructor * expression
      | Pexp_assert of expression
      | Pexp_lazy of expression
      | Pexp_poly of expression * core_type option
      | Pexp_object of class_structure
      | Pexp_newtype of string Asttypes.loc * expression
      | Pexp_pack of module_expr
      | Pexp_open of open_declaration * expression
      | Pexp_letop of letop
      | Pexp_extension of extension
      | Pexp_unreachable
    and case =
      Parsetree.case = {
      pc_lhs : pattern;
      pc_guard : expression option;
      pc_rhs : expression;
    }
    and letop =
      Parsetree.letop = {
      let_ : binding_op;
      ands : binding_op list;
      body : expression;
    }
    and binding_op =
      Parsetree.binding_op = {
      pbop_op : string Asttypes.loc;
      pbop_pat : pattern;
      pbop_exp : expression;
      pbop_loc : Astlib__.Location.t;
    }
    and value_description =
      Parsetree.value_description = {
      pval_name : string Asttypes.loc;
      pval_type : core_type;
      pval_prim : string list;
      pval_attributes : attributes;
      pval_loc : Astlib__.Location.t;
    }
    and type_declaration =
      Parsetree.type_declaration = {
      ptype_name : string Asttypes.loc;
      ptype_params :
        (core_type * (Asttypes.variance * Asttypes.injectivity)) list;
      ptype_cstrs : (core_type * core_type * Astlib__.Location.t) list;
      ptype_kind : type_kind;
      ptype_private : Asttypes.private_flag;
      ptype_manifest : core_type option;
      ptype_attributes : attributes;
      ptype_loc : Astlib__.Location.t;
    }
    and type_kind =
      Parsetree.type_kind =
        Ptype_abstract
      | Ptype_variant of constructor_declaration list
      | Ptype_record of label_declaration list
      | Ptype_open
    and label_declaration =
      Parsetree.label_declaration = {
      pld_name : string Asttypes.loc;
      pld_mutable : Asttypes.mutable_flag;
      pld_type : core_type;
      pld_loc : Astlib__.Location.t;
      pld_attributes : attributes;
    }
    and constructor_declaration =
      Parsetree.constructor_declaration = {
      pcd_name : string Asttypes.loc;
      pcd_vars : string Asttypes.loc list;
      pcd_args : constructor_arguments;
      pcd_res : core_type option;
      pcd_loc : Astlib__.Location.t;
      pcd_attributes : attributes;
    }
    and constructor_arguments =
      Parsetree.constructor_arguments =
        Pcstr_tuple of core_type list
      | Pcstr_record of label_declaration list
    and type_extension =
      Parsetree.type_extension = {
      ptyext_path : Astlib__.Longident.t Asttypes.loc;
      ptyext_params :
        (core_type * (Asttypes.variance * Asttypes.injectivity)) list;
      ptyext_constructors : extension_constructor list;
      ptyext_private : Asttypes.private_flag;
      ptyext_loc : Astlib__.Location.t;
      ptyext_attributes : attributes;
    }
    and extension_constructor =
      Parsetree.extension_constructor = {
      pext_name : string Asttypes.loc;
      pext_kind : extension_constructor_kind;
      pext_loc : Astlib__.Location.t;
      pext_attributes : attributes;
    }
    and type_exception =
      Parsetree.type_exception = {
      ptyexn_constructor : extension_constructor;
      ptyexn_loc : Astlib__.Location.t;
      ptyexn_attributes : attributes;
    }
    and extension_constructor_kind =
      Parsetree.extension_constructor_kind =
        Pext_decl of string Asttypes.loc list * constructor_arguments *
          core_type option
      | Pext_rebind of Astlib__.Longident.t Asttypes.loc
    and class_type =
      Parsetree.class_type = {
      pcty_desc : class_type_desc;
      pcty_loc : Astlib__.Location.t;
      pcty_attributes : attributes;
    }
    and class_type_desc =
      Parsetree.class_type_desc =
        Pcty_constr of Astlib__.Longident.t Asttypes.loc * core_type list
      | Pcty_signature of class_signature
      | Pcty_arrow of Asttypes.arg_label * core_type * class_type
      | Pcty_extension of extension
      | Pcty_open of open_description * class_type
    and class_signature =
      Parsetree.class_signature = {
      pcsig_self : core_type;
      pcsig_fields : class_type_field list;
    }
    and class_type_field =
      Parsetree.class_type_field = {
      pctf_desc : class_type_field_desc;
      pctf_loc : Astlib__.Location.t;
      pctf_attributes : attributes;
    }
    and class_type_field_desc =
      Parsetree.class_type_field_desc =
        Pctf_inherit of class_type
      | Pctf_val of
          (Asttypes.label Asttypes.loc * Asttypes.mutable_flag *
           Asttypes.virtual_flag * core_type)
      | Pctf_method of
          (Asttypes.label Asttypes.loc * Asttypes.private_flag *
           Asttypes.virtual_flag * core_type)
      | Pctf_constraint of (core_type * core_type)
      | Pctf_attribute of attribute
      | Pctf_extension of extension
    and 'a class_infos =
      'a Parsetree.class_infos = {
      pci_virt : Asttypes.virtual_flag;
      pci_params :
        (core_type * (Asttypes.variance * Asttypes.injectivity)) list;
      pci_name : string Asttypes.loc;
      pci_expr : 'a;
      pci_loc : Astlib__.Location.t;
      pci_attributes : attributes;
    }
    and class_description = class_type class_infos
    and class_type_declaration = class_type class_infos
    and class_expr =
      Parsetree.class_expr = {
      pcl_desc : class_expr_desc;
      pcl_loc : Astlib__.Location.t;
      pcl_attributes : attributes;
    }
    and class_expr_desc =
      Parsetree.class_expr_desc =
        Pcl_constr of Astlib__.Longident.t Asttypes.loc * core_type list
      | Pcl_structure of class_structure
      | Pcl_fun of Asttypes.arg_label * expression option * pattern *
          class_expr
      | Pcl_apply of class_expr * (Asttypes.arg_label * expression) list
      | Pcl_let of Asttypes.rec_flag * value_binding list * class_expr
      | Pcl_constraint of class_expr * class_type
      | Pcl_extension of extension
      | Pcl_open of open_description * class_expr
    and class_structure =
      Parsetree.class_structure = {
      pcstr_self : pattern;
      pcstr_fields : class_field list;
    }
    and class_field =
      Parsetree.class_field = {
      pcf_desc : class_field_desc;
      pcf_loc : Astlib__.Location.t;
      pcf_attributes : attributes;
    }
    and class_field_desc =
      Parsetree.class_field_desc =
        Pcf_inherit of Asttypes.override_flag * class_expr *
          string Asttypes.loc option
      | Pcf_val of
          (Asttypes.label Asttypes.loc * Asttypes.mutable_flag *
           class_field_kind)
      | Pcf_method of
          (Asttypes.label Asttypes.loc * Asttypes.private_flag *
           class_field_kind)
      | Pcf_constraint of (core_type * core_type)
      | Pcf_initializer of expression
      | Pcf_attribute of attribute
      | Pcf_extension of extension
    and class_field_kind =
      Parsetree.class_field_kind =
        Cfk_virtual of core_type
      | Cfk_concrete of Asttypes.override_flag * expression
    and class_declaration = class_expr class_infos
    and module_type =
      Parsetree.module_type = {
      pmty_desc : module_type_desc;
      pmty_loc : Astlib__.Location.t;
      pmty_attributes : attributes;
    }
    and module_type_desc =
      Parsetree.module_type_desc =
        Pmty_ident of Astlib__.Longident.t Asttypes.loc
      | Pmty_signature of signature
      | Pmty_functor of functor_parameter * module_type
      | Pmty_with of module_type * with_constraint list
      | Pmty_typeof of module_expr
      | Pmty_extension of extension
      | Pmty_alias of Astlib__.Longident.t Asttypes.loc
    and functor_parameter =
      Parsetree.functor_parameter =
        Unit
      | Named of string option Asttypes.loc * module_type
    and signature = signature_item list
    and signature_item =
      Parsetree.signature_item = {
      psig_desc : signature_item_desc;
      psig_loc : Astlib__.Location.t;
    }
    and signature_item_desc =
      Parsetree.signature_item_desc =
        Psig_value of value_description
      | Psig_type of Asttypes.rec_flag * type_declaration list
      | Psig_typesubst of type_declaration list
      | Psig_typext of type_extension
      | Psig_exception of type_exception
      | Psig_module of module_declaration
      | Psig_modsubst of module_substitution
      | Psig_recmodule of module_declaration list
      | Psig_modtype of module_type_declaration
      | Psig_modtypesubst of module_type_declaration
      | Psig_open of open_description
      | Psig_include of include_description
      | Psig_class of class_description list
      | Psig_class_type of class_type_declaration list
      | Psig_attribute of attribute
      | Psig_extension of extension * attributes
    and module_declaration =
      Parsetree.module_declaration = {
      pmd_name : string option Asttypes.loc;
      pmd_type : module_type;
      pmd_attributes : attributes;
      pmd_loc : Astlib__.Location.t;
    }
    and module_substitution =
      Parsetree.module_substitution = {
      pms_name : string Asttypes.loc;
      pms_manifest : Astlib__.Longident.t Asttypes.loc;
      pms_attributes : attributes;
      pms_loc : Astlib__.Location.t;
    }
    and module_type_declaration =
      Parsetree.module_type_declaration = {
      pmtd_name : string Asttypes.loc;
      pmtd_type : module_type option;
      pmtd_attributes : attributes;
      pmtd_loc : Astlib__.Location.t;
    }
    and 'a open_infos =
      'a Parsetree.open_infos = {
      popen_expr : 'a;
      popen_override : Asttypes.override_flag;
      popen_loc : Astlib__.Location.t;
      popen_attributes : attributes;
    }
    and open_description = Astlib__.Longident.t Asttypes.loc open_infos
    and open_declaration = module_expr open_infos
    and 'a include_infos =
      'a Parsetree.include_infos = {
      pincl_mod : 'a;
      pincl_loc : Astlib__.Location.t;
      pincl_attributes : attributes;
    }
    and include_description = module_type include_infos
    and include_declaration = module_expr include_infos
    and with_constraint =
      Parsetree.with_constraint =
        Pwith_type of Astlib__.Longident.t Asttypes.loc * type_declaration
      | Pwith_module of Astlib__.Longident.t Asttypes.loc *
          Astlib__.Longident.t Asttypes.loc
      | Pwith_modtype of Astlib__.Longident.t Asttypes.loc * module_type
      | Pwith_modtypesubst of Astlib__.Longident.t Asttypes.loc * module_type
      | Pwith_typesubst of Astlib__.Longident.t Asttypes.loc *
          type_declaration
      | Pwith_modsubst of Astlib__.Longident.t Asttypes.loc *
          Astlib__.Longident.t Asttypes.loc
    and module_expr =
      Parsetree.module_expr = {
      pmod_desc : module_expr_desc;
      pmod_loc : Astlib__.Location.t;
      pmod_attributes : attributes;
    }
    and module_expr_desc =
      Parsetree.module_expr_desc =
        Pmod_ident of Astlib__.Longident.t Asttypes.loc
      | Pmod_structure of structure
      | Pmod_functor of functor_parameter * module_expr
      | Pmod_apply of module_expr * module_expr
      | Pmod_apply_unit of module_expr
      | Pmod_constraint of module_expr * module_type
      | Pmod_unpack of expression
      | Pmod_extension of extension
    and structure = structure_item list
    and structure_item =
      Parsetree.structure_item = {
      pstr_desc : structure_item_desc;
      pstr_loc : Astlib__.Location.t;
    }
    and structure_item_desc =
      Parsetree.structure_item_desc =
        Pstr_eval of expression * attributes
      | Pstr_value of Asttypes.rec_flag * value_binding list
      | Pstr_primitive of value_description
      | Pstr_type of Asttypes.rec_flag * type_declaration list
      | Pstr_typext of type_extension
      | Pstr_exception of type_exception
      | Pstr_module of module_binding
      | Pstr_recmodule of module_binding list
      | Pstr_modtype of module_type_declaration
      | Pstr_open of open_declaration
      | Pstr_class of class_declaration list
      | Pstr_class_type of class_type_declaration list
      | Pstr_include of include_declaration
      | Pstr_attribute of attribute
      | Pstr_extension of extension * attributes
    and value_constraint =
      Parsetree.value_constraint =
        Pvc_constraint of {
          locally_abstract_univars : string Asttypes.loc list;
          typ : core_type;
        }
      | Pvc_coercion of { ground : core_type option; coercion : core_type; }
    and value_binding =
      Parsetree.value_binding = {
      pvb_pat : pattern;
      pvb_expr : expression;
      pvb_constraint : value_constraint option;
      pvb_attributes : attributes;
      pvb_loc : Astlib__.Location.t;
    }
    and module_binding =
      Parsetree.module_binding = {
      pmb_name : string option Asttypes.loc;
      pmb_expr : module_expr;
      pmb_attributes : attributes;
      pmb_loc : Astlib__.Location.t;
    }
    type toplevel_phrase =
      Parsetree.toplevel_phrase =
        Ptop_def of structure
      | Ptop_dir of toplevel_directive
    and toplevel_directive =
      Parsetree.toplevel_directive = {
      pdir_name : string Asttypes.loc;
      pdir_arg : directive_argument option;
      pdir_loc : Astlib__.Location.t;
    }
    and directive_argument =
      Parsetree.directive_argument = {
      pdira_desc : directive_argument_desc;
      pdira_loc : Astlib__.Location.t;
    }
    and directive_argument_desc =
      Parsetree.directive_argument_desc =
        Pdir_string of string
      | Pdir_int of string * char option
      | Pdir_ident of Astlib__.Longident.t
      | Pdir_bool of bool
  end
module Config :
  sig
    val ast_impl_magic_number : string
    val ast_intf_magic_number : string("DEBUG:rule", [Tag3 (("Asttypes", 1135), 0, (Tag1 ([Tag1 (("constant", 1138), (0, 0, Tag1 ([(("Const_int", 321), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -19)]), 0, (("astlib/ast_501.ml", 3, 103, 109), ("astlib/ast_501.ml", 3, 103, 125), 0), 0, Tag1 ("Astlib__Ast_501", 1)); (("Const_char", 322), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -20)]), 0, (("astlib/ast_501.ml", 4, 126, 130), ("astlib/ast_501.ml", 4, 126, 150), 0), 0, Tag1 ("Astlib__Ast_501", 2)); (("Const_string", 323), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -21); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -22); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -24)], (0)), 100000000, 0, -23)]), 0, (("astlib/ast_501.ml", 5, 151, 155), ("astlib/ast_501.ml", 5, 151, 208), 0), 0, Tag1 ("Astlib__Ast_501", 3)); (("Const_float", 333), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -25)]), 0, (("astlib/ast_501.ml", 6, 209, 213), ("astlib/ast_501.ml", 6, 209, 236), 0), 0, Tag1 ("Astlib__Ast_501", 4)); (("Const_int32", 334), ([(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -26)]), 0, (("astlib/ast_501.ml", 7, 237, 241), ("astlib/ast_501.ml", 7, 237, 263), 0), 0, Tag1 ("Astlib__Ast_501", 5)); (("Const_int64", 335), ([(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -27)]), 0, (("astlib/ast_501.ml", 8, 264, 268), ("astlib/ast_501.ml", 8, 264, 290), 0), 0, Tag1 ("Astlib__Ast_501", 6)); (("Const_nativeint", 336), ([(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -28)]), 0, (("astlib/ast_501.ml", 9, 291, 295), ("astlib/ast_501.ml", 9, 291, 325), 0), 0, Tag1 ("Astlib__Ast_501", 7))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Asttypes")), "constant"), 0, (0)), 100000000, 0, -18)), 0, 0, 0, 0, (("astlib/ast_501.ml", 2, 49, 51), ("astlib/ast_501.ml", 9, 291, 325), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 0)), 1, 0); Tag1 (("rec_flag", 1139), (0, 0, Tag1 ([(("Nonrecursive", 622), (0), 0, (("astlib/ast_501.ml", 11, 327, 381), ("astlib/ast_501.ml", 11, 327, 393), 0), 0, Tag1 ("Astlib__Ast_501", 9)); (("Recursive", 623), (0), 0, (("astlib/ast_501.ml", 11, 327, 394), ("astlib/ast_501.ml", 11, 327, 405), 0), 0, Tag1 ("Astlib__Ast_501", 10))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Asttypes")), "rec_flag"), 0, (0)), 100000000, 0, -17)), 0, 0, 0, 0, (("astlib/ast_501.ml", 11, 327, 329), ("astlib/ast_501.ml", 11, 327, 405), 0), 0, 1, 0, Tag1 ("Astlib__Ast_501", 8)), 1, 0); Tag1 (("direction_flag", 1140), (0, 0, Tag1 ([(("Upto", 625), (0), 0, (("astlib/ast_501.ml", 13, 407, 473), ("astlib/ast_501.ml", 13, 407, 477), 0), 0, Tag1 ("Astlib__Ast_501", 12)); (("Downto", 626), (0), 0, (("astlib/ast_501.ml", 13, 407, 478), ("astlib/ast_501.ml", 13, 407, 486), 0), 0, Tag1 ("Astlib__Ast_501", 13))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Asttypes")), "direction_flag"), 0, (0)), 100000000, 0, -16)), 0, 0, 0, 0, (("astlib/ast_501.ml", 13, 407, 409), ("astlib/ast_501.ml", 13, 407, 486), 0), 0, 1, 0, Tag1 ("Astlib__Ast_501", 11)), 1, 0); Tag1 (("private_flag", 1141), (0, 0, Tag1 ([(("Private", 628), (0), 0, (("astlib/ast_501.ml", 16, 542, 604), ("astlib/ast_501.ml", 16, 542, 611), 0), 0, Tag1 ("Astlib__Ast_501", 15)); (("Public", 629), (0), 0, (("astlib/ast_501.ml", 16, 542, 612), ("astlib/ast_501.ml", 16, 542, 620), 0), 0, Tag1 ("Astlib__Ast_501", 16))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Asttypes")), "private_flag"), 0, (0)), 100000000, 0, -15)), 0, 0, 0, 0, (("astlib/ast_501.ml", 16, 542, 544), ("astlib/ast_501.ml", 16, 542, 620), 0), 0, 1, 0, Tag1 ("Astlib__Ast_501", 14)), 1, 0); Tag1 (("mutable_flag", 1142), (0, 0, Tag1 ([(("Immutable", 631), (0), 0, (("astlib/ast_501.ml", 18, 622, 684), ("astlib/ast_501.ml", 18, 622, 693), 0), 0, Tag1 ("Astlib__Ast_501", 18)); (("Mutable", 632), (0), 0, (("astlib/ast_501.ml", 18, 622, 694), ("astlib/ast_501.ml", 18, 622, 703), 0), 0, Tag1 ("Astlib__Ast_501", 19))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Asttypes")), "mutable_flag"), 0, (0)), 100000000, 0, -14)), 0, 0, 0, 0, (("astlib/ast_501.ml", 18, 622, 624), ("astlib/ast_501.ml", 18, 622, 703), 0), 0, 1, 0, Tag1 ("Astlib__Ast_501", 17)), 1, 0); Tag1 (("virtual_flag", 1143), (0, 0, Tag1 ([(("Virtual", 634), (0), 0, (("astlib/ast_501.ml", 20, 705, 767), ("astlib/ast_501.ml", 20, 705, 774), 0), 0, Tag1 ("Astlib__Ast_501", 21)); (("Concrete", 635), (0), 0, (("astlib/ast_501.ml", 20, 705, 775), ("astlib/ast_501.ml", 20, 705, 785), 0), 0, Tag1 ("Astlib__Ast_501", 22))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Asttypes")), "virtual_flag"), 0, (0)), 100000000, 0, -13)), 0, 0, 0, 0, (("astlib/ast_501.ml", 20, 705, 707), ("astlib/ast_501.ml", 20, 705, 785), 0), 0, 1, 0, Tag1 ("Astlib__Ast_501", 20)), 1, 0); Tag1 (("override_flag", 1144), (0, 0, Tag1 ([(("Override", 637), (0), 0, (("astlib/ast_501.ml", 22, 787, 851), ("astlib/ast_501.ml", 22, 787, 859), 0), 0, Tag1 ("Astlib__Ast_501", 24)); (("Fresh", 638), (0), 0, (("astlib/ast_501.ml", 22, 787, 860), ("astlib/ast_501.ml", 22, 787, 867), 0), 0, Tag1 ("Astlib__Ast_501", 25))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Asttypes")), "override_flag"), 0, (0)), 100000000, 0, -12)), 0, 0, 0, 0, (("astlib/ast_501.ml", 22, 787, 789), ("astlib/ast_501.ml", 22, 787, 867), 0), 0, 1, 0, Tag1 ("Astlib__Ast_501", 23)), 1, 0); Tag1 (("closed_flag", 1145), (0, 0, Tag1 ([(("Closed", 640), (0), 0, (("astlib/ast_501.ml", 24, 869, 929), ("astlib/ast_501.ml", 24, 869, 935), 0), 0, Tag1 ("Astlib__Ast_501", 27)); (("Open", 641), (0), 0, (("astlib/ast_501.ml", 24, 869, 936), ("astlib/ast_501.ml", 24, 869, 942), 0), 0, Tag1 ("Astlib__Ast_501", 28))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Asttypes")), "closed_flag"), 0, (0)), 100000000, 0, -11)), 0, 0, 0, 0, (("astlib/ast_501.ml", 24, 869, 871), ("astlib/ast_501.ml", 24, 869, 942), 0), 0, 1, 0, Tag1 ("Astlib__Ast_501", 26)), 1, 0); Tag1 (("label", 1146), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10)), 0, 0, 0, 0, (("astlib/ast_501.ml", 26, 944, 946), ("astlib/ast_501.ml", 26, 944, 965), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 29)), 1, 0); Tag1 (("arg_label", 1147), (0, 0, Tag1 ([(("Nolabel", 644), (0), 0, (("astlib/ast_501.ml", 29, 1023, 1029), ("astlib/ast_501.ml", 29, 1023, 1036), 0), 0, Tag1 ("Astlib__Ast_501", 31)); (("Labelled", 645), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8)]), 0, (("astlib/ast_501.ml", 30, 1037, 1041), ("astlib/ast_501.ml", 30, 1037, 1061), 0), 0, Tag1 ("Astlib__Ast_501", 32)); (("Optional", 646), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9)]), 0, (("astlib/ast_501.ml", 31, 1086, 1090), ("astlib/ast_501.ml", 31, 1086, 1110), 0), 0, Tag1 ("Astlib__Ast_501", 33))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Asttypes")), "arg_label"), 0, (0)), 100000000, 0, -7)), 0, 0, 0, 0, (("astlib/ast_501.ml", 28, 967, 969), ("astlib/ast_501.ml", 31, 1086, 1110), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 30)), 1, 0); Tag1 (("loc", 1148), ([((("a")), 100000000, 0, -5)], 1, [[(("txt", 648), 0, ((("a")), 100000000, 0, -5), (("astlib/ast_501.ml", 34, 1173, 1177), ("astlib/ast_501.ml", 34, 1173, 1186), 0), 0, Tag1 ("Astlib__Ast_501", 35)); (("loc", 649), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6), (("astlib/ast_501.ml", 35, 1187, 1191), ("astlib/ast_501.ml", 35, 1187, 1208), 0), 0, Tag1 ("Astlib__Ast_501", 36))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "loc"), [((("a")), 100000000, 0, -5)], (0)), 100000000, 0, -4)), [25], [0], 0, 0, (("astlib/ast_501.ml", 33, 1137, 1139), ("astlib/ast_501.ml", 36, 1209, 1212), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 34)), 1, 0); Tag1 (("variance", 1149), (0, 0, Tag1 ([(("Covariant", 651), (0), 0, (("astlib/ast_501.ml", 39, 1268, 1272), ("astlib/ast_501.ml", 39, 1268, 1283), 0), 0, Tag1 ("Astlib__Ast_501", 38)); (("Contravariant", 652), (0), 0, (("astlib/ast_501.ml", 40, 1284, 1288), ("astlib/ast_501.ml", 40, 1284, 1303), 0), 0, Tag1 ("Astlib__Ast_501", 39)); (("NoVariance", 653), (0), 0, (("astlib/ast_501.ml", 41, 1304, 1308), ("astlib/ast_501.ml", 41, 1304, 1320), 0), 0, Tag1 ("Astlib__Ast_501", 40))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Asttypes")), "variance"), 0, (0)), 100000000, 0, -3)), 0, 0, 0, 0, (("astlib/ast_501.ml", 38, 1214, 1216), ("astlib/ast_501.ml", 41, 1304, 1320), 0), 0, 1, 0, Tag1 ("Astlib__Ast_501", 37)), 1, 0); Tag1 (("injectivity", 1150), (0, 0, Tag1 ([(("Injective", 655), (0), 0, (("astlib/ast_501.ml", 44, 1382, 1386), ("astlib/ast_501.ml", 44, 1382, 1397), 0), 0, Tag1 ("Astlib__Ast_501", 42)); (("NoInjectivity", 656), (0), 0, (("astlib/ast_501.ml", 45, 1398, 1402), ("astlib/ast_501.ml", 45, 1398, 1417), 0), 0, Tag1 ("Astlib__Ast_501", 43))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Asttypes")), "injectivity"), 0, (0)), 100000000, 0, -2)), 0, 0, 0, 0, (("astlib/ast_501.ml", 43, 1322, 1324), ("astlib/ast_501.ml", 45, 1398, 1417), 0), 0, 1, 0, Tag1 ("Astlib__Ast_501", 41)), 1, 0)]), 0, (("astlib/ast_501.ml", 1, 24, 24), ("astlib/ast_501.ml", 46, 1418, 1421), 0), Tag1 ("Astlib__Ast_501", 44)), 0, 0); Tag3 (("Parsetree", 1136), 0, (Tag1 ([Tag1 (("constant", 1151), (0, 0, Tag1 ([(("Pconst_integer", 659), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -703); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -705)], (0)), 100000000, 0, -704)]), 0, (("astlib/ast_501.ml", 52, 1521, 1525), ("astlib/ast_501.ml", 52, 1521, 1565), 0), 0, Tag1 ("Astlib__Ast_501", 46)); (("Pconst_char", 660), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -706)]), 0, (("astlib/ast_501.ml", 58, 1777, 1781), ("astlib/ast_501.ml", 58, 1777, 1802), 0), 0, Tag1 ("Astlib__Ast_501", 47)); (("Pconst_string", 661), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -707); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -708); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -710)], (0)), 100000000, 0, -709)]), 0, (("astlib/ast_501.ml", 59, 1836, 1840), ("astlib/ast_501.ml", 59, 1836, 1894), 0), 0, Tag1 ("Astlib__Ast_501", 48)); (("Pconst_float", 662), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -711); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -713)], (0)), 100000000, 0, -712)]), 0, (("astlib/ast_501.ml", 65, 2080, 2084), ("astlib/ast_501.ml", 65, 2080, 2122), 0), 0, Tag1 ("Astlib__Ast_501", 49))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "constant"), 0, (0)), 100000000, 0, -702)), 0, 0, 0, 0, (("astlib/ast_501.ml", 51, 1466, 1468), ("astlib/ast_501.ml", 65, 2080, 2122), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 45)), 1, 0); Tag1 (("location_stack", 1152), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -701)], (0)), 100000000, 0, -700)), 0, 0, 0, 0, (("astlib/ast_501.ml", 72, 2307, 2309), ("astlib/ast_501.ml", 72, 2307, 2346), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 52)), 1, 0); Tag1 (("attribute", 1153), (0, 0, [[(("attr_name", 804), 0, (Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -697)], (0)), 100000000, 0, -696), (("astlib/ast_501.ml", 77, 2438, 2442), ("astlib/ast_501.ml", 77, 2438, 2465), 0), 0, Tag1 ("Astlib__Ast_501", 120)); (("attr_payload", 805), 0, (Tag3 ((("payload", 1156)), 0, (0)), 100000000, 0, -698), (("astlib/ast_501.ml", 78, 2466, 2470), ("astlib/ast_501.ml", 78, 2466, 2493), 0), 0, Tag1 ("Astlib__Ast_501", 121)); (("attr_loc", 806), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -699), (("astlib/ast_501.ml", 79, 2494, 2498), ("astlib/ast_501.ml", 79, 2494, 2520), 0), 0, Tag1 ("Astlib__Ast_501", 122))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "attribute"), 0, (0)), 100000000, 0, -695)), 0, 0, 0, 0, (("astlib/ast_501.ml", 76, 2379, 2381), ("astlib/ast_501.ml", 80, 2521, 2524), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 53)), 1, 0); Tag1 (("extension", 1154), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -693)], (0)), 100000000, 0, -692); (Tag3 ((("payload", 1156)), 0, (0)), 100000000, 0, -694)]), 100000000, 0, -691)), 0, 0, 0, 0, (("astlib/ast_501.ml", 87, 2691, 2693), ("astlib/ast_501.ml", 87, 2691, 2729), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 54)), 2, 0); Tag1 (("attributes", 1155), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("attribute", 1153)), 0, (0)), 100000000, 0, -690)], (0)), 100000000, 0, -689)), 0, 0, 0, 0, (("astlib/ast_501.ml", 93, 2858, 2860), ("astlib/ast_501.ml", 93, 2858, 2891), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 55)), 2, 0); Tag1 (("payload", 1156), (0, 0, Tag1 ([(("PStr", 807), ([(Tag3 ((("structure", 1214)), 0, (0)), 100000000, 0, -683)]), 0, (("astlib/ast_501.ml", 96, 2945, 2949), ("astlib/ast_501.ml", 96, 2945, 2968), 0), 0, Tag1 ("Astlib__Ast_501", 123)); (("PSig", 808), ([(Tag3 ((("signature", 1199)), 0, (0)), 100000000, 0, -684)]), 0, (("astlib/ast_501.ml", 97, 2969, 2973), ("astlib/ast_501.ml", 97, 2969, 2992), 0), 0, Tag1 ("Astlib__Ast_501", 124)); (("PTyp", 809), ([(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -685)]), 0, (("astlib/ast_501.ml", 98, 3047, 3051), ("astlib/ast_501.ml", 98, 3047, 3070), 0), 0, Tag1 ("Astlib__Ast_501", 125)); (("PPat", 810), ([(Tag3 ((("pattern", 1164)), 0, (0)), 100000000, 0, -686); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -688)], (0)), 100000000, 0, -687)]), 0, (("astlib/ast_501.ml", 99, 3123, 3127), ("astlib/ast_501.ml", 99, 3123, 3164), 0), 0, Tag1 ("Astlib__Ast_501", 126))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "payload"), 0, (0)), 100000000, 0, -682)), 0, 0, 0, 0, (("astlib/ast_501.ml", 95, 2893, 2895), ("astlib/ast_501.ml", 99, 3123, 3164), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 56)), 2, 0); Tag1 (("core_type", 1157), (0, 0, [[(("ptyp_desc", 811), 0, (Tag3 ((("core_type_desc", 1158)), 0, (0)), 100000000, 0, -678), (("astlib/ast_501.ml", 107, 3364, 3370), ("astlib/ast_501.ml", 107, 3364, 3396), 0), 0, Tag1 ("Astlib__Ast_501", 127)); (("ptyp_loc", 812), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -679), (("astlib/ast_501.ml", 108, 3397, 3403), ("astlib/ast_501.ml", 108, 3397, 3424), 0), 0, Tag1 ("Astlib__Ast_501", 128)); (("ptyp_loc_stack", 813), 0, (Tag3 ((("location_stack", 1152)), 0, (0)), 100000000, 0, -680), (("astlib/ast_501.ml", 109, 3425, 3431), ("astlib/ast_501.ml", 109, 3425, 3462), 0), 0, Tag1 ("Astlib__Ast_501", 129)); (("ptyp_attributes", 814), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -681), (("astlib/ast_501.ml", 110, 3463, 3469), ("astlib/ast_501.ml", 110, 3463, 3497), 0), 0, Tag1 ("Astlib__Ast_501", 130))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -677)), 0, 0, 0, 0, (("astlib/ast_501.ml", 105, 3302, 3304), ("astlib/ast_501.ml", 111, 3528, 3533), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 57)), 2, 0); Tag1 (("core_type_desc", 1158), (0, 0, Tag1 ([(("Ptyp_any", 815), (0), 0, (("astlib/ast_501.ml", 114, 3601, 3605), ("astlib/ast_501.ml", 114, 3601, 3615), 0), 0, Tag1 ("Astlib__Ast_501", 131)); (("Ptyp_var", 816), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -646)]), 0, (("astlib/ast_501.ml", 115, 3628, 3632), ("astlib/ast_501.ml", 115, 3628, 3652), 0), 0, Tag1 ("Astlib__Ast_501", 132)); (("Ptyp_arrow", 817), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "arg_label"), 0, (0)), 100000000, 0, -647); (Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -648); (Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -649)]), 0, (("astlib/ast_501.ml", 116, 3690, 3694), ("astlib/ast_501.ml", 116, 3690, 3743), 0), 0, Tag1 ("Astlib__Ast_501", 133)); (("Ptyp_tuple", 818), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -651)], (0)), 100000000, 0, -650)]), 0, (("astlib/ast_501.ml", 125, 4187, 4191), ("astlib/ast_501.ml", 125, 4187, 4221), 0), 0, Tag1 ("Astlib__Ast_501", 134)); (("Ptyp_constr", 819), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -653)], (0)), 100000000, 0, -652); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -655)], (0)), 100000000, 0, -654)]), 0, (("astlib/ast_501.ml", 131, 4367, 4371), ("astlib/ast_501.ml", 131, 4367, 4420), 0), 0, Tag1 ("Astlib__Ast_501", 135)); (("Ptyp_object", 823), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("object_field", 1162)), 0, (0)), 100000000, 0, -657)], (0)), 100000000, 0, -656); (Tag3 (Tag1 ((("Asttypes", 1135)), "closed_flag"), 0, (0)), 100000000, 0, -658)]), 0, (("astlib/ast_501.ml", 137, 4657, 4661), ("astlib/ast_501.ml", 137, 4657, 4709), 0), 0, Tag1 ("Astlib__Ast_501", 136)); (("Ptyp_class", 824), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -660)], (0)), 100000000, 0, -659); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -662)], (0)), 100000000, 0, -661)]), 0, (("astlib/ast_501.ml", 144, 5075, 5079), ("astlib/ast_501.ml", 144, 5075, 5127), 0), 0, Tag1 ("Astlib__Ast_501", 137)); (("Ptyp_alias", 825), ([(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -663); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -664)]), 0, (("astlib/ast_501.ml", 150, 5367, 5371), ("astlib/ast_501.ml", 150, 5367, 5405), 0), 0, Tag1 ("Astlib__Ast_501", 138)); (("Ptyp_variant", 826), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("row_field", 1160)), 0, (0)), 100000000, 0, -666)], (0)), 100000000, 0, -665); (Tag3 (Tag1 ((("Asttypes", 1135)), "closed_flag"), 0, (0)), 100000000, 0, -667); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 1135)), "label"), 0, (0)), 100000000, 0, -670)], (0)), 100000000, 0, -669)], (0)), 100000000, 0, -668)]), 0, (("astlib/ast_501.ml", 151, 5425, 5429), ("astlib/ast_501.ml", 151, 5425, 5495), 0), 0, Tag1 ("Astlib__Ast_501", 139)); (("Ptyp_poly", 827), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -673)], (0)), 100000000, 0, -672)], (0)), 100000000, 0, -671); (Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -674)]), 0, (("astlib/ast_501.ml", 166, 6232, 6236), ("astlib/ast_501.ml", 166, 6232, 6278), 0), 0, Tag1 ("Astlib__Ast_501", 140)); (("Ptyp_package", 828), ([(Tag3 ((("package_type", 1159)), 0, (0)), 100000000, 0, -675)]), 0, (("astlib/ast_501.ml", 194, 7243, 7247), ("astlib/ast_501.ml", 194, 7243, 7277), 0), 0, Tag1 ("Astlib__Ast_501", 141)); (("Ptyp_extension", 829), ([(Tag3 ((("extension", 1154)), 0, (0)), 100000000, 0, -676)]), 0, (("astlib/ast_501.ml", 195, 7300, 7304), ("astlib/ast_501.ml", 195, 7300, 7333), 0), 0, Tag1 ("Astlib__Ast_501", 142))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type_desc"), 0, (0)), 100000000, 0, -645)), 0, 0, 0, 0, (("astlib/ast_501.ml", 113, 3535, 3537), ("astlib/ast_501.ml", 195, 7300, 7333), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 58)), 2, 0); Tag1 (("package_type", 1159), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -639)], (0)), 100000000, 0, -638); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -643)], (0)), 100000000, 0, -642); (Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -644)]), 100000000, 0, -641)], (0)), 100000000, 0, -640)]), 100000000, 0, -637)), 0, 0, 0, 0, (("astlib/ast_501.ml", 197, 7352, 7354), ("astlib/ast_501.ml", 197, 7352, 7425), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 59)), 2, 0); Tag1 (("row_field", 1160), (0, 0, [[(("prf_desc", 830), 0, (Tag3 ((("row_field_desc", 1161)), 0, (0)), 100000000, 0, -634), (("astlib/ast_501.ml", 205, 7707, 7711), ("astlib/ast_501.ml", 205, 7707, 7737), 0), 0, Tag1 ("Astlib__Ast_501", 143)); (("prf_loc", 831), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -635), (("astlib/ast_501.ml", 206, 7738, 7742), ("astlib/ast_501.ml", 206, 7738, 7763), 0), 0, Tag1 ("Astlib__Ast_501", 144)); (("prf_attributes", 832), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -636), (("astlib/ast_501.ml", 207, 7764, 7768), ("astlib/ast_501.ml", 207, 7764, 7796), 0), 0, Tag1 ("Astlib__Ast_501", 145))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "row_field"), 0, (0)), 100000000, 0, -633)), 0, 0, 0, 0, (("astlib/ast_501.ml", 204, 7649, 7651), ("astlib/ast_501.ml", 208, 7797, 7800), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 60)), 2, 0); Tag1 (("row_field_desc", 1161), (0, 0, Tag1 ([(("Rtag", 833), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 1135)), "label"), 0, (0)), 100000000, 0, -628)], (0)), 100000000, 0, -627); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -629); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -631)], (0)), 100000000, 0, -630)]), 0, (("astlib/ast_501.ml", 211, 7868, 7872), ("astlib/ast_501.ml", 211, 7868, 7915), 0), 0, Tag1 ("Astlib__Ast_501", 146)); (("Rinherit", 834), ([(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -632)]), 0, (("astlib/ast_501.ml", 223, 8509, 8513), ("astlib/ast_501.ml", 223, 8509, 8536), 0), 0, Tag1 ("Astlib__Ast_501", 147))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "row_field_desc"), 0, (0)), 100000000, 0, -626)), 0, 0, 0, 0, (("astlib/ast_501.ml", 210, 7802, 7804), ("astlib/ast_501.ml", 223, 8509, 8536), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 61)), 2, 0); Tag1 (("object_field", 1162), (0, 0, [[(("pof_desc", 835), 0, (Tag3 ((("object_field_desc", 1163)), 0, (0)), 100000000, 0, -623), (("astlib/ast_501.ml", 226, 8620, 8624), ("astlib/ast_501.ml", 226, 8620, 8653), 0), 0, Tag1 ("Astlib__Ast_501", 148)); (("pof_loc", 836), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -624), (("astlib/ast_501.ml", 227, 8654, 8658), ("astlib/ast_501.ml", 227, 8654, 8679), 0), 0, Tag1 ("Astlib__Ast_501", 149)); (("pof_attributes", 837), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -625), (("astlib/ast_501.ml", 228, 8680, 8684), ("astlib/ast_501.ml", 228, 8680, 8712), 0), 0, Tag1 ("Astlib__Ast_501", 150))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "object_field"), 0, (0)), 100000000, 0, -622)), 0, 0, 0, 0, (("astlib/ast_501.ml", 225, 8556, 8558), ("astlib/ast_501.ml", 229, 8713, 8716), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 62)), 2, 0); Tag1 (("object_field_desc", 1163), (0, 0, Tag1 ([(("Otag", 838), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 1135)), "label"), 0, (0)), 100000000, 0, -619)], (0)), 100000000, 0, -618); (Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -620)]), 0, (("astlib/ast_501.ml", 232, 8790, 8794), ("astlib/ast_501.ml", 232, 8790, 8825), 0), 0, Tag1 ("Astlib__Ast_501", 151)); (("Oinherit", 839), ([(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -621)]), 0, (("astlib/ast_501.ml", 233, 8826, 8830), ("astlib/ast_501.ml", 233, 8826, 8853), 0), 0, Tag1 ("Astlib__Ast_501", 152))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "object_field_desc"), 0, (0)), 100000000, 0, -617)), 0, 0, 0, 0, (("astlib/ast_501.ml", 231, 8718, 8720), ("astlib/ast_501.ml", 233, 8826, 8853), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 63)), 2, 0); Tag1 (("pattern", 1164), (0, 0, [[(("ppat_desc", 840), 0, (Tag3 ((("pattern_desc", 1165)), 0, (0)), 100000000, 0, -613), (("astlib/ast_501.ml", 239, 8936, 8942), ("astlib/ast_501.ml", 239, 8936, 8966), 0), 0, Tag1 ("Astlib__Ast_501", 153)); (("ppat_loc", 841), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -614), (("astlib/ast_501.ml", 240, 8967, 8973), ("astlib/ast_501.ml", 240, 8967, 8994), 0), 0, Tag1 ("Astlib__Ast_501", 154)); (("ppat_loc_stack", 842), 0, (Tag3 ((("location_stack", 1152)), 0, (0)), 100000000, 0, -615), (("astlib/ast_501.ml", 241, 8995, 9001), ("astlib/ast_501.ml", 241, 8995, 9032), 0), 0, Tag1 ("Astlib__Ast_501", 155)); (("ppat_attributes", 843), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -616), (("astlib/ast_501.ml", 242, 9033, 9039), ("astlib/ast_501.ml", 242, 9033, 9067), 0), 0, Tag1 ("Astlib__Ast_501", 156))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -612)), 0, 0, 0, 0, (("astlib/ast_501.ml", 237, 8878, 8880), ("astlib/ast_501.ml", 243, 9098, 9103), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 64)), 2, 0); Tag1 (("pattern_desc", 1165), (0, 0, Tag1 ([(("Ppat_any", 844), (0), 0, (("astlib/ast_501.ml", 246, 9167, 9171), ("astlib/ast_501.ml", 246, 9167, 9181), 0), 0, Tag1 ("Astlib__Ast_501", 157)); (("Ppat_var", 845), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -569)], (0)), 100000000, 0, -568)]), 0, (("astlib/ast_501.ml", 247, 9207, 9211), ("astlib/ast_501.ml", 247, 9207, 9235), 0), 0, Tag1 ("Astlib__Ast_501", 158)); (("Ppat_alias", 846), ([(Tag3 ((("pattern", 1164)), 0, (0)), 100000000, 0, -570); (Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -572)], (0)), 100000000, 0, -571)]), 0, (("astlib/ast_501.ml", 248, 9275, 9279), ("astlib/ast_501.ml", 248, 9275, 9315), 0), 0, Tag1 ("Astlib__Ast_501", 159)); (("Ppat_constant", 847), ([(Tag3 ((("constant", 1151)), 0, (0)), 100000000, 0, -573)]), 0, (("astlib/ast_501.ml", 250, 9366, 9370), ("astlib/ast_501.ml", 250, 9366, 9397), 0), 0, Tag1 ("Astlib__Ast_501", 160)); (("Ppat_interval", 848), ([(Tag3 ((("constant", 1151)), 0, (0)), 100000000, 0, -574); (Tag3 ((("constant", 1151)), 0, (0)), 100000000, 0, -575)]), 0, (("astlib/ast_501.ml", 252, 9476, 9480), ("astlib/ast_501.ml", 252, 9476, 9518), 0), 0, Tag1 ("Astlib__Ast_501", 161)); (("Ppat_tuple", 849), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 1164)), 0, (0)), 100000000, 0, -577)], (0)), 100000000, 0, -576)]), 0, (("astlib/ast_501.ml", 257, 9677, 9681), ("astlib/ast_501.ml", 257, 9677, 9709), 0), 0, Tag1 ("Astlib__Ast_501", 162)); (("Ppat_construct", 850), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -579)], (0)), 100000000, 0, -578); (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -584)], (0)), 100000000, 0, -583)], (0)), 100000000, 0, -582); (Tag3 ((("pattern", 1164)), 0, (0)), 100000000, 0, -585)]), 100000000, 0, -581)], (0)), 100000000, 0, -580)]), 0, (("astlib/ast_501.ml", 262, 9795, 9799), ("astlib/ast_501.ml", 262, 9795, 9871), 0), 0, Tag1 ("Astlib__Ast_501", 163)); (("Ppat_variant", 851), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "label"), 0, (0)), 100000000, 0, -586); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 1164)), 0, (0)), 100000000, 0, -588)], (0)), 100000000, 0, -587)]), 0, (("astlib/ast_501.ml", 270, 10257, 10261), ("astlib/ast_501.ml", 270, 10257, 10301), 0), 0, Tag1 ("Astlib__Ast_501", 164)); (("Ppat_record", 852), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -592)], (0)), 100000000, 0, -591); (Tag3 ((("pattern", 1164)), 0, (0)), 100000000, 0, -593)]), 100000000, 0, -590)], (0)), 100000000, 0, -589); (Tag3 (Tag1 ((("Asttypes", 1135)), "closed_flag"), 0, (0)), 100000000, 0, -594)]), 0, (("astlib/ast_501.ml", 275, 10455, 10459), ("astlib/ast_501.ml", 275, 10455, 10522), 0), 0, Tag1 ("Astlib__Ast_501", 165)); (("Ppat_array", 853), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 1164)), 0, (0)), 100000000, 0, -596)], (0)), 100000000, 0, -595)]), 0, (("astlib/ast_501.ml", 284, 10869, 10873), ("astlib/ast_501.ml", 284, 10869, 10901), 0), 0, Tag1 ("Astlib__Ast_501", 166)); (("Ppat_or", 854), ([(Tag3 ((("pattern", 1164)), 0, (0)), 100000000, 0, -597); (Tag3 ((("pattern", 1164)), 0, (0)), 100000000, 0, -598)]), 0, (("astlib/ast_501.ml", 285, 10938, 10942), ("astlib/ast_501.ml", 285, 10938, 10972), 0), 0, Tag1 ("Astlib__Ast_501", 167)); (("Ppat_constraint", 855), ([(Tag3 ((("pattern", 1164)), 0, (0)), 100000000, 0, -599); (Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -600)]), 0, (("astlib/ast_501.ml", 286, 10999, 11003), ("astlib/ast_501.ml", 286, 10999, 11043), 0), 0, Tag1 ("Astlib__Ast_501", 168)); (("Ppat_type", 856), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -602)], (0)), 100000000, 0, -601)]), 0, (("astlib/ast_501.ml", 287, 11070, 11074), ("astlib/ast_501.ml", 287, 11070, 11104), 0), 0, Tag1 ("Astlib__Ast_501", 169)); (("Ppat_lazy", 857), ([(Tag3 ((("pattern", 1164)), 0, (0)), 100000000, 0, -603)]), 0, (("astlib/ast_501.ml", 288, 11131, 11135), ("astlib/ast_501.ml", 288, 11131, 11157), 0), 0, Tag1 ("Astlib__Ast_501", 170)); (("Ppat_unpack", 858), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -606)], (0)), 100000000, 0, -605)], (0)), 100000000, 0, -604)]), 0, (("astlib/ast_501.ml", 289, 11183, 11187), ("astlib/ast_501.ml", 289, 11183, 11221), 0), 0, Tag1 ("Astlib__Ast_501", 171)); (("Ppat_exception", 859), ([(Tag3 ((("pattern", 1164)), 0, (0)), 100000000, 0, -607)]), 0, (("astlib/ast_501.ml", 297, 11502, 11506), ("astlib/ast_501.ml", 297, 11502, 11533), 0), 0, Tag1 ("Astlib__Ast_501", 172)); (("Ppat_extension", 860), ([(Tag3 ((("extension", 1154)), 0, (0)), 100000000, 0, -608)]), 0, (("astlib/ast_501.ml", 298, 11564, 11568), ("astlib/ast_501.ml", 298, 11564, 11597), 0), 0, Tag1 ("Astlib__Ast_501", 173)); (("Ppat_open", 861), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -610)], (0)), 100000000, 0, -609); (Tag3 ((("pattern", 1164)), 0, (0)), 100000000, 0, -611)]), 0, (("astlib/ast_501.ml", 299, 11622, 11626), ("astlib/ast_501.ml", 299, 11622, 11666), 0), 0, Tag1 ("Astlib__Ast_501", 174))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern_desc"), 0, (0)), 100000000, 0, -567)), 0, 0, 0, 0, (("astlib/ast_501.ml", 245, 9105, 9107), ("astlib/ast_501.ml", 299, 11622, 11666), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 65)), 2, 0); Tag1 (("expression", 1166), (0, 0, [[(("pexp_desc", 862), 0, (Tag3 ((("expression_desc", 1167)), 0, (0)), 100000000, 0, -563), (("astlib/ast_501.ml", 305, 11790, 11797), ("astlib/ast_501.ml", 305, 11790, 11824), 0), 0, Tag1 ("Astlib__Ast_501", 175)); (("pexp_loc", 863), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -564), (("astlib/ast_501.ml", 306, 11825, 11832), ("astlib/ast_501.ml", 306, 11825, 11853), 0), 0, Tag1 ("Astlib__Ast_501", 176)); (("pexp_loc_stack", 864), 0, (Tag3 ((("location_stack", 1152)), 0, (0)), 100000000, 0, -565), (("astlib/ast_501.ml", 307, 11854, 11861), ("astlib/ast_501.ml", 307, 11854, 11892), 0), 0, Tag1 ("Astlib__Ast_501", 177)); (("pexp_attributes", 865), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -566), (("astlib/ast_501.ml", 308, 11893, 11900), ("astlib/ast_501.ml", 308, 11893, 11928), 0), 0, Tag1 ("Astlib__Ast_501", 178))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -562)), 0, 0, 0, 0, (("astlib/ast_501.ml", 303, 11724, 11726), ("astlib/ast_501.ml", 309, 11959, 11966), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 66)), 2, 0); Tag1 (("expression_desc", 1167), (0, 0, Tag1 ([(("Pexp_ident", 866), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -460)], (0)), 100000000, 0, -459)]), 0, (("astlib/ast_501.ml", 312, 12036, 12040), ("astlib/ast_501.ml", 312, 12036, 12071), 0), 0, Tag1 ("Astlib__Ast_501", 179)); (("Pexp_constant", 867), ([(Tag3 ((("constant", 1151)), 0, (0)), 100000000, 0, -461)]), 0, (("astlib/ast_501.ml", 315, 12132, 12136), ("astlib/ast_501.ml", 315, 12132, 12163), 0), 0, Tag1 ("Astlib__Ast_501", 180)); (("Pexp_let", 868), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "rec_flag"), 0, (0)), 100000000, 0, -462); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 1218)), 0, (0)), 100000000, 0, -464)], (0)), 100000000, 0, -463); (Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -465)]), 0, (("astlib/ast_501.ml", 318, 12268, 12272), ("astlib/ast_501.ml", 318, 12268, 12328), 0), 0, Tag1 ("Astlib__Ast_501", 181)); (("Pexp_function", 869), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 1168)), 0, (0)), 100000000, 0, -467)], (0)), 100000000, 0, -466)]), 0, (("astlib/ast_501.ml", 325, 12688, 12692), ("astlib/ast_501.ml", 325, 12688, 12720), 0), 0, Tag1 ("Astlib__Ast_501", 182)); (("Pexp_fun", 870), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "arg_label"), 0, (0)), 100000000, 0, -468); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -470)], (0)), 100000000, 0, -469); (Tag3 ((("pattern", 1164)), 0, (0)), 100000000, 0, -471); (Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -472)]), 0, (("astlib/ast_501.ml", 326, 12766, 12770), ("astlib/ast_501.ml", 326, 12766, 12836), 0), 0, Tag1 ("Astlib__Ast_501", 183)); (("Pexp_apply", 871), ([(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -473); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 1135)), "arg_label"), 0, (0)), 100000000, 0, -476); (Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -477)]), 100000000, 0, -475)], (0)), 100000000, 0, -474)]), 0, (("astlib/ast_501.ml", 349, 13913, 13917), ("astlib/ast_501.ml", 349, 13913, 13975), 0), 0, Tag1 ("Astlib__Ast_501", 184)); (("Pexp_match", 872), ([(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -478); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 1168)), 0, (0)), 100000000, 0, -480)], (0)), 100000000, 0, -479)]), 0, (("astlib/ast_501.ml", 360, 14402, 14406), ("astlib/ast_501.ml", 360, 14402, 14444), 0), 0, Tag1 ("Astlib__Ast_501", 185)); (("Pexp_try", 873), ([(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -481); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 1168)), 0, (0)), 100000000, 0, -483)], (0)), 100000000, 0, -482)]), 0, (("astlib/ast_501.ml", 362, 14502, 14506), ("astlib/ast_501.ml", 362, 14502, 14542), 0), 0, Tag1 ("Astlib__Ast_501", 186)); (("Pexp_tuple", 874), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -485)], (0)), 100000000, 0, -484)]), 0, (("astlib/ast_501.ml", 364, 14598, 14602), ("astlib/ast_501.ml", 364, 14598, 14633), 0), 0, Tag1 ("Astlib__Ast_501", 187)); (("Pexp_construct", 875), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -487)], (0)), 100000000, 0, -486); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -489)], (0)), 100000000, 0, -488)]), 0, (("astlib/ast_501.ml", 369, 14721, 14725), ("astlib/ast_501.ml", 369, 14721, 14780), 0), 0, Tag1 ("Astlib__Ast_501", 188)); (("Pexp_variant", 876), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "label"), 0, (0)), 100000000, 0, -490); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -492)], (0)), 100000000, 0, -491)]), 0, (("astlib/ast_501.ml", 375, 15033, 15037), ("astlib/ast_501.ml", 375, 15033, 15080), 0), 0, Tag1 ("Astlib__Ast_501", 189)); (("Pexp_record", 877), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -496)], (0)), 100000000, 0, -495); (Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -497)]), 100000000, 0, -494)], (0)), 100000000, 0, -493); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -499)], (0)), 100000000, 0, -498)]), 0, (("astlib/ast_501.ml", 380, 15232, 15236), ("astlib/ast_501.ml", 380, 15232, 15308), 0), 0, Tag1 ("Astlib__Ast_501", 190)); (("Pexp_field", 878), ([(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -500); (Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -502)], (0)), 100000000, 0, -501)]), 0, (("astlib/ast_501.ml", 387, 15569, 15573), ("astlib/ast_501.ml", 387, 15569, 15617), 0), 0, Tag1 ("Astlib__Ast_501", 191)); (("Pexp_setfield", 879), ([(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -503); (Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -505)], (0)), 100000000, 0, -504); (Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -506)]), 0, (("astlib/ast_501.ml", 388, 15632, 15636), ("astlib/ast_501.ml", 388, 15632, 15696), 0), 0, Tag1 ("Astlib__Ast_501", 192)); (("Pexp_array", 880), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -508)], (0)), 100000000, 0, -507)]), 0, (("astlib/ast_501.ml", 390, 15725, 15729), ("astlib/ast_501.ml", 390, 15725, 15760), 0), 0, Tag1 ("Astlib__Ast_501", 193)); (("Pexp_ifthenelse", 881), ([(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -509); (Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -510); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -512)], (0)), 100000000, 0, -511)]), 0, (("astlib/ast_501.ml", 391, 15789, 15793), ("astlib/ast_501.ml", 391, 15789, 15857), 0), 0, Tag1 ("Astlib__Ast_501", 194)); (("Pexp_sequence", 882), ([(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -513); (Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -514)]), 0, (("astlib/ast_501.ml", 393, 15897, 15901), ("astlib/ast_501.ml", 393, 15897, 15943), 0), 0, Tag1 ("Astlib__Ast_501", 195)); (("Pexp_while", 883), ([(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -515); (Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -516)]), 0, (("astlib/ast_501.ml", 394, 15961, 15965), ("astlib/ast_501.ml", 394, 15961, 16004), 0), 0, Tag1 ("Astlib__Ast_501", 196)); (("Pexp_for", 884), ([(Tag3 ((("pattern", 1164)), 0, (0)), 100000000, 0, -517); (Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -518); (Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -519); (Tag3 (Tag1 ((("Asttypes", 1135)), "direction_flag"), 0, (0)), 100000000, 0, -520); (Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -521)]), 0, (("astlib/ast_501.ml", 395, 16035, 16039), ("astlib/ast_501.ml", 395, 16035, 16116), 0), 0, Tag1 ("Astlib__Ast_501", 197)); (("Pexp_constraint", 885), ([(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -522); (Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -523)]), 0, (("astlib/ast_501.ml", 402, 16450, 16454), ("astlib/ast_501.ml", 402, 16450, 16497), 0), 0, Tag1 ("Astlib__Ast_501", 198)); (("Pexp_coerce", 886), ([(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -524); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -526)], (0)), 100000000, 0, -525); (Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -527)]), 0, (("astlib/ast_501.ml", 403, 16516, 16520), ("astlib/ast_501.ml", 403, 16516, 16578), 0), 0, Tag1 ("Astlib__Ast_501", 199)); (("Pexp_send", 887), ([(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -528); (Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 1135)), "label"), 0, (0)), 100000000, 0, -530)], (0)), 100000000, 0, -529)]), 0, (("astlib/ast_501.ml", 408, 16755, 16759), ("astlib/ast_501.ml", 408, 16755, 16796), 0), 0, Tag1 ("Astlib__Ast_501", 200)); (("Pexp_new", 888), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -532)], (0)), 100000000, 0, -531)]), 0, (("astlib/ast_501.ml", 409, 16813, 16817), ("astlib/ast_501.ml", 409, 16813, 16846), 0), 0, Tag1 ("Astlib__Ast_501", 201)); (("Pexp_setinstvar", 889), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 1135)), "label"), 0, (0)), 100000000, 0, -534)], (0)), 100000000, 0, -533); (Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -535)]), 0, (("astlib/ast_501.ml", 410, 16865, 16869), ("astlib/ast_501.ml", 410, 16865, 16912), 0), 0, Tag1 ("Astlib__Ast_501", 202)); (("Pexp_override", 890), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 1135)), "label"), 0, (0)), 100000000, 0, -539)], (0)), 100000000, 0, -538); (Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -540)]), 100000000, 0, -537)], (0)), 100000000, 0, -536)]), 0, (("astlib/ast_501.ml", 411, 16930, 16934), ("astlib/ast_501.ml", 411, 16930, 16982), 0), 0, Tag1 ("Astlib__Ast_501", 203)); (("Pexp_letmodule", 891), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -543)], (0)), 100000000, 0, -542)], (0)), 100000000, 0, -541); (Tag3 ((("module_expr", 1212)), 0, (0)), 100000000, 0, -544); (Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -545)]), 0, (("astlib/ast_501.ml", 413, 17028, 17032), ("astlib/ast_501.ml", 413, 17028, 17096), 0), 0, Tag1 ("Astlib__Ast_501", 204)); (("Pexp_letexception", 892), ([(Tag3 ((("extension_constructor", 1178)), 0, (0)), 100000000, 0, -546); (Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -547)]), 0, (("astlib/ast_501.ml", 415, 17137, 17141), ("astlib/ast_501.ml", 415, 17137, 17198), 0), 0, Tag1 ("Astlib__Ast_501", 205)); (("Pexp_assert", 893), ([(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -548)]), 0, (("astlib/ast_501.ml", 417, 17237, 17241), ("astlib/ast_501.ml", 417, 17237, 17268), 0), 0, Tag1 ("Astlib__Ast_501", 206)); (("Pexp_lazy", 894), ([(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -549)]), 0, (("astlib/ast_501.ml", 422, 17393, 17397), ("astlib/ast_501.ml", 422, 17393, 17422), 0), 0, Tag1 ("Astlib__Ast_501", 207)); (("Pexp_poly", 895), ([(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -550); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -552)], (0)), 100000000, 0, -551)]), 0, (("astlib/ast_501.ml", 423, 17440, 17444), ("astlib/ast_501.ml", 423, 17440, 17488), 0), 0, Tag1 ("Astlib__Ast_501", 208)); (("Pexp_object", 896), ([(Tag3 ((("class_structure", 1191)), 0, (0)), 100000000, 0, -553)]), 0, (("astlib/ast_501.ml", 429, 17684, 17688), ("astlib/ast_501.ml", 429, 17684, 17720), 0), 0, Tag1 ("Astlib__Ast_501", 209)); (("Pexp_newtype", 897), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -555)], (0)), 100000000, 0, -554); (Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -556)]), 0, (("astlib/ast_501.ml", 430, 17746, 17750), ("astlib/ast_501.ml", 430, 17746, 17791), 0), 0, Tag1 ("Astlib__Ast_501", 210)); (("Pexp_pack", 898), ([(Tag3 ((("module_expr", 1212)), 0, (0)), 100000000, 0, -557)]), 0, (("astlib/ast_501.ml", 431, 17820, 17824), ("astlib/ast_501.ml", 431, 17820, 17850), 0), 0, Tag1 ("Astlib__Ast_501", 211)); (("Pexp_open", 899), ([(Tag3 ((("open_declaration", 1207)), 0, (0)), 100000000, 0, -558); (Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -559)]), 0, (("astlib/ast_501.ml", 436, 17992, 17996), ("astlib/ast_501.ml", 436, 17992, 18040), 0), 0, Tag1 ("Astlib__Ast_501", 212)); (("Pexp_letop", 900), ([(Tag3 ((("letop", 1169)), 0, (0)), 100000000, 0, -560)]), 0, (("astlib/ast_501.ml", 440, 18135, 18139), ("astlib/ast_501.ml", 440, 18135, 18160), 0), 0, Tag1 ("Astlib__Ast_501", 213)); (("Pexp_extension", 901), ([(Tag3 ((("extension", 1154)), 0, (0)), 100000000, 0, -561)]), 0, (("astlib/ast_501.ml", 443, 18250, 18254), ("astlib/ast_501.ml", 443, 18250, 18283), 0), 0, Tag1 ("Astlib__Ast_501", 214)); (("Pexp_unreachable", 902), (0), 0, (("astlib/ast_501.ml", 444, 18300, 18304), ("astlib/ast_501.ml", 444, 18300, 18322), 0), 0, Tag1 ("Astlib__Ast_501", 215))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression_desc"), 0, (0)), 100000000, 0, -458)), 0, 0, 0, 0, (("astlib/ast_501.ml", 311, 11968, 11970), ("astlib/ast_501.ml", 444, 18300, 18322), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 67)), 2, 0); Tag1 (("case", 1168), (0, 0, [[(("pc_lhs", 903), 0, (Tag3 ((("pattern", 1164)), 0, (0)), 100000000, 0, -454), (("astlib/ast_501.ml", 448, 18388, 18394), ("astlib/ast_501.ml", 448, 18388, 18410), 0), 0, Tag1 ("Astlib__Ast_501", 216)); (("pc_guard", 904), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -456)], (0)), 100000000, 0, -455), (("astlib/ast_501.ml", 449, 18411, 18417), ("astlib/ast_501.ml", 449, 18411, 18445), 0), 0, Tag1 ("Astlib__Ast_501", 217)); (("pc_rhs", 905), 0, (Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -457), (("astlib/ast_501.ml", 450, 18446, 18452), ("astlib/ast_501.ml", 450, 18446, 18471), 0), 0, Tag1 ("Astlib__Ast_501", 218))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "case"), 0, (0)), 100000000, 0, -453)), 0, 0, 0, 0, (("astlib/ast_501.ml", 446, 18336, 18338), ("astlib/ast_501.ml", 451, 18472, 18477), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 68)), 2, 0); Tag1 (("letop", 1169), (0, 0, [[(("let_", 906), 0, (Tag3 ((("binding_op", 1170)), 0, (0)), 100000000, 0, -449), (("astlib/ast_501.ml", 456, 18609, 18615), ("astlib/ast_501.ml", 456, 18609, 18633), 0), 0, Tag1 ("Astlib__Ast_501", 219)); (("ands", 907), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("binding_op", 1170)), 0, (0)), 100000000, 0, -451)], (0)), 100000000, 0, -450), (("astlib/ast_501.ml", 457, 18634, 18640), ("astlib/ast_501.ml", 457, 18634, 18663), 0), 0, Tag1 ("Astlib__Ast_501", 220)); (("body", 908), 0, (Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -452), (("astlib/ast_501.ml", 458, 18664, 18670), ("astlib/ast_501.ml", 458, 18664, 18688), 0), 0, Tag1 ("Astlib__Ast_501", 221))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "letop"), 0, (0)), 100000000, 0, -448)), 0, 0, 0, 0, (("astlib/ast_501.ml", 454, 18555, 18557), ("astlib/ast_501.ml", 459, 18689, 18694), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 69)), 2, 0); Tag1 (("binding_op", 1170), (0, 0, [[(("pbop_op", 909), 0, (Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -444)], (0)), 100000000, 0, -443), (("astlib/ast_501.ml", 463, 18760, 18766), ("astlib/ast_501.ml", 463, 18760, 18787), 0), 0, Tag1 ("Astlib__Ast_501", 222)); (("pbop_pat", 910), 0, (Tag3 ((("pattern", 1164)), 0, (0)), 100000000, 0, -445), (("astlib/ast_501.ml", 464, 18788, 18794), ("astlib/ast_501.ml", 464, 18788, 18813), 0), 0, Tag1 ("Astlib__Ast_501", 223)); (("pbop_exp", 911), 0, (Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -446), (("astlib/ast_501.ml", 465, 18814, 18820), ("astlib/ast_501.ml", 465, 18814, 18842), 0), 0, Tag1 ("Astlib__Ast_501", 224)); (("pbop_loc", 912), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -447), (("astlib/ast_501.ml", 466, 18843, 18849), ("astlib/ast_501.ml", 466, 18843, 18871), 0), 0, Tag1 ("Astlib__Ast_501", 225))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "binding_op"), 0, (0)), 100000000, 0, -442)), 0, 0, 0, 0, (("astlib/ast_501.ml", 461, 18696, 18698), ("astlib/ast_501.ml", 467, 18872, 18877), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 70)), 2, 0); Tag1 (("value_description", 1171), (0, 0, [[(("pval_name", 913), 0, (Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -436)], (0)), 100000000, 0, -435), (("astlib/ast_501.ml", 473, 18990, 18996), ("astlib/ast_501.ml", 473, 18990, 19018), 0), 0, Tag1 ("Astlib__Ast_501", 226)); (("pval_type", 914), 0, (Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -437), (("astlib/ast_501.ml", 474, 19019, 19025), ("astlib/ast_501.ml", 474, 19019, 19046), 0), 0, Tag1 ("Astlib__Ast_501", 227)); (("pval_prim", 915), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -439)], (0)), 100000000, 0, -438), (("astlib/ast_501.ml", 475, 19047, 19053), ("astlib/ast_501.ml", 475, 19047, 19076), 0), 0, Tag1 ("Astlib__Ast_501", 228)); (("pval_attributes", 916), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -440), (("astlib/ast_501.ml", 476, 19077, 19083), ("astlib/ast_501.ml", 476, 19077, 19111), 0), 0, Tag1 ("Astlib__Ast_501", 229)); (("pval_loc", 917), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -441), (("astlib/ast_501.ml", 477, 19146, 19152), ("astlib/ast_501.ml", 477, 19146, 19173), 0), 0, Tag1 ("Astlib__Ast_501", 230))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "value_description"), 0, (0)), 100000000, 0, -434)), 0, 0, 0, 0, (("astlib/ast_501.ml", 471, 18912, 18914), ("astlib/ast_501.ml", 478, 19174, 19179), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 71)), 2, 0); Tag1 (("type_declaration", 1172), (0, 0, [[(("ptype_name", 918), 0, (Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -416)], (0)), 100000000, 0, -415), (("astlib/ast_501.ml", 490, 19562, 19568), ("astlib/ast_501.ml", 490, 19562, 19591), 0), 0, Tag1 ("Astlib__Ast_501", 231)); (("ptype_params", 919), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -419); (Tag2 ([(Tag3 (Tag1 ((("Asttypes", 1135)), "variance"), 0, (0)), 100000000, 0, -421); (Tag3 (Tag1 ((("Asttypes", 1135)), "injectivity"), 0, (0)), 100000000, 0, -422)]), 100000000, 0, -420)]), 100000000, 0, -418)], (0)), 100000000, 0, -417), (("astlib/ast_501.ml", 491, 19592, 19598), ("astlib/ast_501.ml", 491, 19592, 19656), 0), 0, Tag1 ("Astlib__Ast_501", 232)); (("ptype_cstrs", 920), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -425); (Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -426); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -427)]), 100000000, 0, -424)], (0)), 100000000, 0, -423), (("astlib/ast_501.ml", 493, 19687, 19693), ("astlib/ast_501.ml", 493, 19687, 19748), 0), 0, Tag1 ("Astlib__Ast_501", 233)); (("ptype_kind", 921), 0, (Tag3 ((("type_kind", 1173)), 0, (0)), 100000000, 0, -428), (("astlib/ast_501.ml", 495, 19809, 19815), ("astlib/ast_501.ml", 495, 19809, 19837), 0), 0, Tag1 ("Astlib__Ast_501", 234)); (("ptype_private", 922), 0, (Tag3 (Tag1 ((("Asttypes", 1135)), "private_flag"), 0, (0)), 100000000, 0, -429), (("astlib/ast_501.ml", 496, 19838, 19844), ("astlib/ast_501.ml", 496, 19838, 19872), 0), 0, Tag1 ("Astlib__Ast_501", 235)); (("ptype_manifest", 923), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -431)], (0)), 100000000, 0, -430), (("astlib/ast_501.ml", 497, 19901, 19907), ("astlib/ast_501.ml", 497, 19901, 19940), 0), 0, Tag1 ("Astlib__Ast_501", 236)); (("ptype_attributes", 924), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -432), (("astlib/ast_501.ml", 498, 19966, 19972), ("astlib/ast_501.ml", 498, 19966, 20001), 0), 0, Tag1 ("Astlib__Ast_501", 237)); (("ptype_loc", 925), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -433), (("astlib/ast_501.ml", 499, 20036, 20042), ("astlib/ast_501.ml", 499, 20036, 20064), 0), 0, Tag1 ("Astlib__Ast_501", 238))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "type_declaration"), 0, (0)), 100000000, 0, -414)), 0, 0, 0, 0, (("astlib/ast_501.ml", 488, 19486, 19488), ("astlib/ast_501.ml", 500, 20065, 20070), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 72)), 2, 0); Tag1 (("type_kind", 1173), (0, 0, Tag1 ([(("Ptype_abstract", 926), (0), 0, (("astlib/ast_501.ml", 528, 21378, 21382), ("astlib/ast_501.ml", 528, 21378, 21398), 0), 0, Tag1 ("Astlib__Ast_501", 239)); (("Ptype_variant", 927), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("constructor_declaration", 1175)), 0, (0)), 100000000, 0, -411)], (0)), 100000000, 0, -410)]), 0, (("astlib/ast_501.ml", 529, 21399, 21403), ("astlib/ast_501.ml", 529, 21399, 21450), 0), 0, Tag1 ("Astlib__Ast_501", 240)); (("Ptype_record", 928), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 1174)), 0, (0)), 100000000, 0, -413)], (0)), 100000000, 0, -412)]), 0, (("astlib/ast_501.ml", 530, 21451, 21455), ("astlib/ast_501.ml", 530, 21451, 21495), 0), 0, Tag1 ("Astlib__Ast_501", 241)); (("Ptype_open", 929), (0), 0, (("astlib/ast_501.ml", 531, 21530, 21534), ("astlib/ast_501.ml", 531, 21530, 21546), 0), 0, Tag1 ("Astlib__Ast_501", 242))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "type_kind"), 0, (0)), 100000000, 0, -409)), 0, 0, 0, 0, (("astlib/ast_501.ml", 527, 21322, 21324), ("astlib/ast_501.ml", 531, 21530, 21546), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 73)), 2, 0); Tag1 (("label_declaration", 1174), (0, 0, [[(("pld_name", 930), 0, (Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -404)], (0)), 100000000, 0, -403), (("astlib/ast_501.ml", 535, 21626, 21632), ("astlib/ast_501.ml", 535, 21626, 21653), 0), 0, Tag1 ("Astlib__Ast_501", 243)); (("pld_mutable", 931), 0, (Tag3 (Tag1 ((("Asttypes", 1135)), "mutable_flag"), 0, (0)), 100000000, 0, -405), (("astlib/ast_501.ml", 536, 21654, 21660), ("astlib/ast_501.ml", 536, 21654, 21686), 0), 0, Tag1 ("Astlib__Ast_501", 244)); (("pld_type", 932), 0, (Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -406), (("astlib/ast_501.ml", 537, 21687, 21693), ("astlib/ast_501.ml", 537, 21687, 21713), 0), 0, Tag1 ("Astlib__Ast_501", 245)); (("pld_loc", 933), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -407), (("astlib/ast_501.ml", 538, 21714, 21720), ("astlib/ast_501.ml", 538, 21714, 21740), 0), 0, Tag1 ("Astlib__Ast_501", 246)); (("pld_attributes", 934), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -408), (("astlib/ast_501.ml", 539, 21741, 21747), ("astlib/ast_501.ml", 539, 21741, 21774), 0), 0, Tag1 ("Astlib__Ast_501", 247))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "label_declaration"), 0, (0)), 100000000, 0, -402)), 0, 0, 0, 0, (("astlib/ast_501.ml", 533, 21548, 21550), ("astlib/ast_501.ml", 540, 21807, 21812), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 74)), 2, 0); Tag1 (("constructor_declaration", 1175), (0, 0, [[(("pcd_name", 935), 0, (Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -393)], (0)), 100000000, 0, -392), (("astlib/ast_501.ml", 554, 22372, 22378), ("astlib/ast_501.ml", 554, 22372, 22399), 0), 0, Tag1 ("Astlib__Ast_501", 248)); (("pcd_vars", 936), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -396)], (0)), 100000000, 0, -395)], (0)), 100000000, 0, -394), (("astlib/ast_501.ml", 555, 22400, 22406), ("astlib/ast_501.ml", 555, 22400, 22432), 0), 0, Tag1 ("Astlib__Ast_501", 249)); (("pcd_args", 937), 0, (Tag3 ((("constructor_arguments", 1176)), 0, (0)), 100000000, 0, -397), (("astlib/ast_501.ml", 556, 22433, 22439), ("astlib/ast_501.ml", 556, 22433, 22471), 0), 0, Tag1 ("Astlib__Ast_501", 250)); (("pcd_res", 938), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -399)], (0)), 100000000, 0, -398), (("astlib/ast_501.ml", 557, 22472, 22478), ("astlib/ast_501.ml", 557, 22472, 22504), 0), 0, Tag1 ("Astlib__Ast_501", 251)); (("pcd_loc", 939), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -400), (("astlib/ast_501.ml", 558, 22505, 22511), ("astlib/ast_501.ml", 558, 22505, 22531), 0), 0, Tag1 ("Astlib__Ast_501", 252)); (("pcd_attributes", 940), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -401), (("astlib/ast_501.ml", 559, 22532, 22538), ("astlib/ast_501.ml", 559, 22532, 22565), 0), 0, Tag1 ("Astlib__Ast_501", 253))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "constructor_declaration"), 0, (0)), 100000000, 0, -391)), 0, 0, 0, 0, (("astlib/ast_501.ml", 552, 22282, 22284), ("astlib/ast_501.ml", 560, 22601, 22606), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 75)), 2, 0); Tag1 (("constructor_arguments", 1176), (0, 0, Tag1 ([(("Pcstr_tuple", 941), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -388)], (0)), 100000000, 0, -387)]), 0, (("astlib/ast_501.ml", 563, 22688, 22692), ("astlib/ast_501.ml", 563, 22688, 22723), 0), 0, Tag1 ("Astlib__Ast_501", 254)); (("Pcstr_record", 942), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 1174)), 0, (0)), 100000000, 0, -390)], (0)), 100000000, 0, -389)]), 0, (("astlib/ast_501.ml", 564, 22724, 22728), ("astlib/ast_501.ml", 564, 22724, 22768), 0), 0, Tag1 ("Astlib__Ast_501", 255))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "constructor_arguments"), 0, (0)), 100000000, 0, -386)), 0, 0, 0, 0, (("astlib/ast_501.ml", 562, 22608, 22610), ("astlib/ast_501.ml", 564, 22724, 22768), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 76)), 2, 0); Tag1 (("type_extension", 1177), (0, 0, [[(("ptyext_path", 943), 0, (Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -374)], (0)), 100000000, 0, -373), (("astlib/ast_501.ml", 581, 23544, 23550), ("astlib/ast_501.ml", 581, 23544, 23579), 0), 0, Tag1 ("Astlib__Ast_501", 256)); (("ptyext_params", 944), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -377); (Tag2 ([(Tag3 (Tag1 ((("Asttypes", 1135)), "variance"), 0, (0)), 100000000, 0, -379); (Tag3 (Tag1 ((("Asttypes", 1135)), "injectivity"), 0, (0)), 100000000, 0, -380)]), 100000000, 0, -378)]), 100000000, 0, -376)], (0)), 100000000, 0, -375), (("astlib/ast_501.ml", 582, 23580, 23586), ("astlib/ast_501.ml", 582, 23580, 23645), 0), 0, Tag1 ("Astlib__Ast_501", 257)); (("ptyext_constructors", 945), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("extension_constructor", 1178)), 0, (0)), 100000000, 0, -382)], (0)), 100000000, 0, -381), (("astlib/ast_501.ml", 583, 23646, 23652), ("astlib/ast_501.ml", 583, 23646, 23700), 0), 0, Tag1 ("Astlib__Ast_501", 258)); (("ptyext_private", 946), 0, (Tag3 (Tag1 ((("Asttypes", 1135)), "private_flag"), 0, (0)), 100000000, 0, -383), (("astlib/ast_501.ml", 584, 23701, 23707), ("astlib/ast_501.ml", 584, 23701, 23736), 0), 0, Tag1 ("Astlib__Ast_501", 259)); (("ptyext_loc", 947), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -384), (("astlib/ast_501.ml", 585, 23737, 23743), ("astlib/ast_501.ml", 585, 23737, 23766), 0), 0, Tag1 ("Astlib__Ast_501", 260)); (("ptyext_attributes", 948), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -385), (("astlib/ast_501.ml", 586, 23767, 23773), ("astlib/ast_501.ml", 586, 23767, 23803), 0), 0, Tag1 ("Astlib__Ast_501", 261))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "type_extension"), 0, (0)), 100000000, 0, -372)), 0, 0, 0, 0, (("astlib/ast_501.ml", 579, 23472, 23474), ("astlib/ast_501.ml", 587, 23836, 23841), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 77)), 2, 0); Tag1 (("extension_constructor", 1178), (0, 0, [[(("pext_name", 949), 0, (Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -368)], (0)), 100000000, 0, -367), (("astlib/ast_501.ml", 595, 24042, 24048), ("astlib/ast_501.ml", 595, 24042, 24070), 0), 0, Tag1 ("Astlib__Ast_501", 262)); (("pext_kind", 950), 0, (Tag3 ((("extension_constructor_kind", 1180)), 0, (0)), 100000000, 0, -369), (("astlib/ast_501.ml", 596, 24071, 24077), ("astlib/ast_501.ml", 596, 24071, 24115), 0), 0, Tag1 ("Astlib__Ast_501", 263)); (("pext_loc", 951), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -370), (("astlib/ast_501.ml", 597, 24116, 24122), ("astlib/ast_501.ml", 597, 24116, 24143), 0), 0, Tag1 ("Astlib__Ast_501", 264)); (("pext_attributes", 952), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -371), (("astlib/ast_501.ml", 598, 24144, 24150), ("astlib/ast_501.ml", 598, 24144, 24178), 0), 0, Tag1 ("Astlib__Ast_501", 265))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "extension_constructor"), 0, (0)), 100000000, 0, -366)), 0, 0, 0, 0, (("astlib/ast_501.ml", 593, 23956, 23958), ("astlib/ast_501.ml", 599, 24214, 24219), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 78)), 2, 0); Tag1 (("type_exception", 1179), (0, 0, [[(("ptyexn_constructor", 953), 0, (Tag3 ((("extension_constructor", 1178)), 0, (0)), 100000000, 0, -363), (("astlib/ast_501.ml", 603, 24293, 24299), ("astlib/ast_501.ml", 603, 24293, 24342), 0), 0, Tag1 ("Astlib__Ast_501", 266)); (("ptyexn_loc", 954), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -364), (("astlib/ast_501.ml", 604, 24343, 24349), ("astlib/ast_501.ml", 604, 24343, 24373), 0), 0, Tag1 ("Astlib__Ast_501", 267)); (("ptyexn_attributes", 955), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -365), (("astlib/ast_501.ml", 605, 24374, 24380), ("astlib/ast_501.ml", 605, 24374, 24411), 0), 0, Tag1 ("Astlib__Ast_501", 268))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "type_exception"), 0, (0)), 100000000, 0, -362)), 0, 0, 0, 0, (("astlib/ast_501.ml", 601, 24221, 24223), ("astlib/ast_501.ml", 606, 24446, 24451), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 79)), 2, 0); Tag1 (("extension_constructor_kind", 1180), (0, 0, Tag1 ([(("Pext_decl", 956), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -356)], (0)), 100000000, 0, -355)], (0)), 100000000, 0, -354); (Tag3 ((("constructor_arguments", 1176)), 0, (0)), 100000000, 0, -357); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -359)], (0)), 100000000, 0, -358)]), 0, (("astlib/ast_501.ml", 610, 24599, 24603), ("astlib/ast_501.ml", 610, 24599, 24676), 0), 0, Tag1 ("Astlib__Ast_501", 269)); (("Pext_rebind", 957), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -361)], (0)), 100000000, 0, -360)]), 0, (("astlib/ast_501.ml", 630, 25565, 25569), ("astlib/ast_501.ml", 630, 25565, 25601), 0), 0, Tag1 ("Astlib__Ast_501", 270))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "extension_constructor_kind"), 0, (0)), 100000000, 0, -353)), 0, 0, 0, 0, (("astlib/ast_501.ml", 609, 24509, 24511), ("astlib/ast_501.ml", 630, 25565, 25601), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 80)), 2, 0); Tag1 (("class_type", 1181), (0, 0, [[(("pcty_desc", 958), 0, (Tag3 ((("class_type_desc", 1182)), 0, (0)), 100000000, 0, -350), (("astlib/ast_501.ml", 638, 25829, 25835), ("astlib/ast_501.ml", 638, 25829, 25862), 0), 0, Tag1 ("Astlib__Ast_501", 271)); (("pcty_loc", 959), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -351), (("astlib/ast_501.ml", 639, 25863, 25869), ("astlib/ast_501.ml", 639, 25863, 25890), 0), 0, Tag1 ("Astlib__Ast_501", 272)); (("pcty_attributes", 960), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -352), (("astlib/ast_501.ml", 640, 25891, 25897), ("astlib/ast_501.ml", 640, 25891, 25925), 0), 0, Tag1 ("Astlib__Ast_501", 273))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type"), 0, (0)), 100000000, 0, -349)), 0, 0, 0, 0, (("astlib/ast_501.ml", 636, 25765, 25767), ("astlib/ast_501.ml", 641, 25956, 25961), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 81)), 2, 0); Tag1 (("class_type_desc", 1182), (0, 0, Tag1 ([(("Pcty_constr", 961), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -339)], (0)), 100000000, 0, -338); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -341)], (0)), 100000000, 0, -340)]), 0, (("astlib/ast_501.ml", 644, 26031, 26035), ("astlib/ast_501.ml", 644, 26031, 26084), 0), 0, Tag1 ("Astlib__Ast_501", 274)); (("Pcty_signature", 962), ([(Tag3 ((("class_signature", 1183)), 0, (0)), 100000000, 0, -342)]), 0, (("astlib/ast_501.ml", 647, 26142, 26146), ("astlib/ast_501.ml", 647, 26142, 26181), 0), 0, Tag1 ("Astlib__Ast_501", 275)); (("Pcty_arrow", 963), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "arg_label"), 0, (0)), 100000000, 0, -343); (Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -344); (Tag3 ((("class_type", 1181)), 0, (0)), 100000000, 0, -345)]), 0, (("astlib/ast_501.ml", 648, 26207, 26211), ("astlib/ast_501.ml", 648, 26207, 26261), 0), 0, Tag1 ("Astlib__Ast_501", 276)); (("Pcty_extension", 964), ([(Tag3 ((("extension", 1154)), 0, (0)), 100000000, 0, -346)]), 0, (("astlib/ast_501.ml", 657, 26654, 26658), ("astlib/ast_501.ml", 657, 26654, 26687), 0), 0, Tag1 ("Astlib__Ast_501", 277)); (("Pcty_open", 965), ([(Tag3 ((("open_description", 1206)), 0, (0)), 100000000, 0, -347); (Tag3 ((("class_type", 1181)), 0, (0)), 100000000, 0, -348)]), 0, (("astlib/ast_501.ml", 658, 26702, 26706), ("astlib/ast_501.ml", 658, 26702, 26750), 0), 0, Tag1 ("Astlib__Ast_501", 278))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type_desc"), 0, (0)), 100000000, 0, -337)), 0, 0, 0, 0, (("astlib/ast_501.ml", 643, 25963, 25965), ("astlib/ast_501.ml", 658, 26702, 26750), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 82)), 2, 0); Tag1 (("class_signature", 1183), (0, 0, [[(("pcsig_self", 966), 0, (Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -334), (("astlib/ast_501.ml", 662, 26853, 26859), ("astlib/ast_501.ml", 662, 26853, 26881), 0), 0, Tag1 ("Astlib__Ast_501", 279)); (("pcsig_fields", 967), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_field", 1184)), 0, (0)), 100000000, 0, -336)], (0)), 100000000, 0, -335), (("astlib/ast_501.ml", 663, 26882, 26888), ("astlib/ast_501.ml", 663, 26882, 26924), 0), 0, Tag1 ("Astlib__Ast_501", 280))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_signature"), 0, (0)), 100000000, 0, -333)), 0, 0, 0, 0, (("astlib/ast_501.ml", 660, 26779, 26781), ("astlib/ast_501.ml", 664, 26925, 26930), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 83)), 2, 0); Tag1 (("class_type_field", 1184), (0, 0, [[(("pctf_desc", 968), 0, (Tag3 ((("class_type_field_desc", 1185)), 0, (0)), 100000000, 0, -330), (("astlib/ast_501.ml", 673, 27242, 27248), ("astlib/ast_501.ml", 673, 27242, 27281), 0), 0, Tag1 ("Astlib__Ast_501", 281)); (("pctf_loc", 969), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -331), (("astlib/ast_501.ml", 674, 27282, 27288), ("astlib/ast_501.ml", 674, 27282, 27309), 0), 0, Tag1 ("Astlib__Ast_501", 282)); (("pctf_attributes", 970), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -332), (("astlib/ast_501.ml", 675, 27310, 27316), ("astlib/ast_501.ml", 675, 27310, 27344), 0), 0, Tag1 ("Astlib__Ast_501", 283))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type_field"), 0, (0)), 100000000, 0, -329)), 0, 0, 0, 0, (("astlib/ast_501.ml", 671, 27166, 27168), ("astlib/ast_501.ml", 676, 27379, 27384), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 84)), 2, 0); Tag1 (("class_type_field_desc", 1185), (0, 0, Tag1 ([(("Pctf_inherit", 971), ([(Tag3 ((("class_type", 1181)), 0, (0)), 100000000, 0, -311)]), 0, (("astlib/ast_501.ml", 679, 27466, 27470), ("astlib/ast_501.ml", 679, 27466, 27498), 0), 0, Tag1 ("Astlib__Ast_501", 284)); (("Pctf_val", 972), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 1135)), "label"), 0, (0)), 100000000, 0, -314)], (0)), 100000000, 0, -313); (Tag3 (Tag1 ((("Asttypes", 1135)), "mutable_flag"), 0, (0)), 100000000, 0, -315); (Tag3 (Tag1 ((("Asttypes", 1135)), "virtual_flag"), 0, (0)), 100000000, 0, -316); (Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -317)]), 100000000, 0, -312)]), 0, (("astlib/ast_501.ml", 680, 27520, 27524), ("astlib/ast_501.ml", 680, 27520, 27591), 0), 0, Tag1 ("Astlib__Ast_501", 285)); (("Pctf_method", 973), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 1135)), "label"), 0, (0)), 100000000, 0, -320)], (0)), 100000000, 0, -319); (Tag3 (Tag1 ((("Asttypes", 1135)), "private_flag"), 0, (0)), 100000000, 0, -321); (Tag3 (Tag1 ((("Asttypes", 1135)), "virtual_flag"), 0, (0)), 100000000, 0, -322); (Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -323)]), 100000000, 0, -318)]), 0, (("astlib/ast_501.ml", 682, 27618, 27622), ("astlib/ast_501.ml", 682, 27618, 27692), 0), 0, Tag1 ("Astlib__Ast_501", 286)); (("Pctf_constraint", 974), ([(Tag2 ([(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -325); (Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -326)]), 100000000, 0, -324)]), 0, (("astlib/ast_501.ml", 687, 27808, 27812), ("astlib/ast_501.ml", 687, 27808, 27856), 0), 0, Tag1 ("Astlib__Ast_501", 287)); (("Pctf_attribute", 975), ([(Tag3 ((("attribute", 1153)), 0, (0)), 100000000, 0, -327)]), 0, (("astlib/ast_501.ml", 688, 27886, 27890), ("astlib/ast_501.ml", 688, 27886, 27919), 0), 0, Tag1 ("Astlib__Ast_501", 288)); (("Pctf_extension", 976), ([(Tag3 ((("extension", 1154)), 0, (0)), 100000000, 0, -328)]), 0, (("astlib/ast_501.ml", 689, 27941, 27945), ("astlib/ast_501.ml", 689, 27941, 27974), 0), 0, Tag1 ("Astlib__Ast_501", 289))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type_field_desc"), 0, (0)), 100000000, 0, -310)), 0, 0, 0, 0, (("astlib/ast_501.ml", 678, 27386, 27388), ("astlib/ast_501.ml", 689, 27941, 27974), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 85)), 2, 0); Tag1 (("class_infos", 1186), ([((("a")), 100000000, 0, -298)], 1, [[(("pci_virt", 977), 0, (Tag3 (Tag1 ((("Asttypes", 1135)), "virtual_flag"), 0, (0)), 100000000, 0, -299), (("astlib/ast_501.ml", 693, 28065, 28071), ("astlib/ast_501.ml", 693, 28065, 28094), 0), 0, Tag1 ("Astlib__Ast_501", 290)); (("pci_params", 978), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -302); (Tag2 ([(Tag3 (Tag1 ((("Asttypes", 1135)), "variance"), 0, (0)), 100000000, 0, -304); (Tag3 (Tag1 ((("Asttypes", 1135)), "injectivity"), 0, (0)), 100000000, 0, -305)]), 100000000, 0, -303)]), 100000000, 0, -301)], (0)), 100000000, 0, -300), (("astlib/ast_501.ml", 694, 28095, 28101), ("astlib/ast_501.ml", 694, 28095, 28157), 0), 0, Tag1 ("Astlib__Ast_501", 291)); (("pci_name", 979), 0, (Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -307)], (0)), 100000000, 0, -306), (("astlib/ast_501.ml", 695, 28158, 28164), ("astlib/ast_501.ml", 695, 28158, 28185), 0), 0, Tag1 ("Astlib__Ast_501", 292)); (("pci_expr", 980), 0, ((("a")), 100000000, 0, -298), (("astlib/ast_501.ml", 696, 28186, 28192), ("astlib/ast_501.ml", 696, 28186, 28205), 0), 0, Tag1 ("Astlib__Ast_501", 293)); (("pci_loc", 981), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -308), (("astlib/ast_501.ml", 697, 28206, 28212), ("astlib/ast_501.ml", 697, 28206, 28232), 0), 0, Tag1 ("Astlib__Ast_501", 294)); (("pci_attributes", 982), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -309), (("astlib/ast_501.ml", 698, 28233, 28239), ("astlib/ast_501.ml", 698, 28233, 28266), 0), 0, Tag1 ("Astlib__Ast_501", 295))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_infos"), [((("a")), 100000000, 0, -298)], (0)), 100000000, 0, -297)), [25], [0], 0, 0, (("astlib/ast_501.ml", 691, 27993, 27995), ("astlib/ast_501.ml", 699, 28301, 28306), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 86)), 2, 0); Tag1 (("class_description", 1187), (0, 0, 0, 1, ((Tag3 ((("class_infos", 1186)), [(Tag3 ((("class_type", 1181)), 0, (0)), 100000000, 0, -296)], (0)), 100000000, 0, -295)), 0, 0, 0, 0, (("astlib/ast_501.ml", 708, 28520, 28522), ("astlib/ast_501.ml", 708, 28520, 28568), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 87)), 2, 0); Tag1 (("class_type_declaration", 1188), (0, 0, 0, 1, ((Tag3 ((("class_infos", 1186)), [(Tag3 ((("class_type", 1181)), 0, (0)), 100000000, 0, -294)], (0)), 100000000, 0, -293)), 0, 0, 0, 0, (("astlib/ast_501.ml", 710, 28570, 28572), ("astlib/ast_501.ml", 710, 28570, 28623), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 88)), 2, 0); Tag1 (("class_expr", 1189), (0, 0, [[(("pcl_desc", 983), 0, (Tag3 ((("class_expr_desc", 1190)), 0, (0)), 100000000, 0, -290), (("astlib/ast_501.ml", 716, 28746, 28753), ("astlib/ast_501.ml", 716, 28746, 28779), 0), 0, Tag1 ("Astlib__Ast_501", 296)); (("pcl_loc", 984), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -291), (("astlib/ast_501.ml", 717, 28780, 28787), ("astlib/ast_501.ml", 717, 28780, 28807), 0), 0, Tag1 ("Astlib__Ast_501", 297)); (("pcl_attributes", 985), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -292), (("astlib/ast_501.ml", 718, 28808, 28815), ("astlib/ast_501.ml", 718, 28808, 28842), 0), 0, Tag1 ("Astlib__Ast_501", 298))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_expr"), 0, (0)), 100000000, 0, -289)), 0, 0, 0, 0, (("astlib/ast_501.ml", 714, 28680, 28682), ("astlib/ast_501.ml", 719, 28873, 28880), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 89)), 2, 0); Tag1 (("class_expr_desc", 1190), (0, 0, Tag1 ([(("Pcl_constr", 986), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -266)], (0)), 100000000, 0, -265); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -268)], (0)), 100000000, 0, -267)]), 0, (("astlib/ast_501.ml", 722, 28950, 28954), ("astlib/ast_501.ml", 722, 28950, 29002), 0), 0, Tag1 ("Astlib__Ast_501", 299)); (("Pcl_structure", 987), ([(Tag3 ((("class_structure", 1191)), 0, (0)), 100000000, 0, -269)]), 0, (("astlib/ast_501.ml", 724, 29046, 29050), ("astlib/ast_501.ml", 724, 29046, 29084), 0), 0, Tag1 ("Astlib__Ast_501", 300)); (("Pcl_fun", 988), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "arg_label"), 0, (0)), 100000000, 0, -270); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -272)], (0)), 100000000, 0, -271); (Tag3 ((("pattern", 1164)), 0, (0)), 100000000, 0, -273); (Tag3 ((("class_expr", 1189)), 0, (0)), 100000000, 0, -274)]), 0, (("astlib/ast_501.ml", 725, 29110, 29114), ("astlib/ast_501.ml", 725, 29110, 29179), 0), 0, Tag1 ("Astlib__Ast_501", 301)); (("Pcl_apply", 989), ([(Tag3 ((("class_expr", 1189)), 0, (0)), 100000000, 0, -275); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 1135)), "arg_label"), 0, (0)), 100000000, 0, -278); (Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -279)]), 100000000, 0, -277)], (0)), 100000000, 0, -276)]), 0, (("astlib/ast_501.ml", 740, 29896, 29900), ("astlib/ast_501.ml", 740, 29896, 29957), 0), 0, Tag1 ("Astlib__Ast_501", 302)); (("Pcl_let", 990), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "rec_flag"), 0, (0)), 100000000, 0, -280); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 1218)), 0, (0)), 100000000, 0, -282)], (0)), 100000000, 0, -281); (Tag3 ((("class_expr", 1189)), 0, (0)), 100000000, 0, -283)]), 0, (("astlib/ast_501.ml", 748, 30217, 30221), ("astlib/ast_501.ml", 748, 30217, 30276), 0), 0, Tag1 ("Astlib__Ast_501", 303)); (("Pcl_constraint", 991), ([(Tag3 ((("class_expr", 1189)), 0, (0)), 100000000, 0, -284); (Tag3 ((("class_type", 1181)), 0, (0)), 100000000, 0, -285)]), 0, (("astlib/ast_501.ml", 755, 30637, 30641), ("astlib/ast_501.ml", 755, 30637, 30684), 0), 0, Tag1 ("Astlib__Ast_501", 304)); (("Pcl_extension", 992), ([(Tag3 ((("extension", 1154)), 0, (0)), 100000000, 0, -286)]), 0, (("astlib/ast_501.ml", 756, 30705, 30709), ("astlib/ast_501.ml", 756, 30705, 30737), 0), 0, Tag1 ("Astlib__Ast_501", 305)); (("Pcl_open", 993), ([(Tag3 ((("open_description", 1206)), 0, (0)), 100000000, 0, -287); (Tag3 ((("class_expr", 1189)), 0, (0)), 100000000, 0, -288)]), 0, (("astlib/ast_501.ml", 757, 30754, 30758), ("astlib/ast_501.ml", 757, 30754, 30801), 0), 0, Tag1 ("Astlib__Ast_501", 306))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_expr_desc"), 0, (0)), 100000000, 0, -264)), 0, 0, 0, 0, (("astlib/ast_501.ml", 721, 28882, 28884), ("astlib/ast_501.ml", 757, 30754, 30801), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 90)), 2, 0); Tag1 (("class_structure", 1191), (0, 0, [[(("pcstr_self", 994), 0, (Tag3 ((("pattern", 1164)), 0, (0)), 100000000, 0, -261), (("astlib/ast_501.ml", 761, 30904, 30910), ("astlib/ast_501.ml", 761, 30904, 30930), 0), 0, Tag1 ("Astlib__Ast_501", 307)); (("pcstr_fields", 995), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_field", 1192)), 0, (0)), 100000000, 0, -263)], (0)), 100000000, 0, -262), (("astlib/ast_501.ml", 762, 30931, 30937), ("astlib/ast_501.ml", 762, 30931, 30968), 0), 0, Tag1 ("Astlib__Ast_501", 308))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_structure"), 0, (0)), 100000000, 0, -260)), 0, 0, 0, 0, (("astlib/ast_501.ml", 759, 30830, 30832), ("astlib/ast_501.ml", 763, 30969, 30974), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 91)), 2, 0); Tag1 (("class_field", 1192), (0, 0, [[(("pcf_desc", 996), 0, (Tag3 ((("class_field_desc", 1193)), 0, (0)), 100000000, 0, -257), (("astlib/ast_501.ml", 772, 31274, 31280), ("astlib/ast_501.ml", 772, 31274, 31307), 0), 0, Tag1 ("Astlib__Ast_501", 309)); (("pcf_loc", 997), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -258), (("astlib/ast_501.ml", 773, 31308, 31314), ("astlib/ast_501.ml", 773, 31308, 31334), 0), 0, Tag1 ("Astlib__Ast_501", 310)); (("pcf_attributes", 998), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -259), (("astlib/ast_501.ml", 774, 31335, 31341), ("astlib/ast_501.ml", 774, 31335, 31368), 0), 0, Tag1 ("Astlib__Ast_501", 311))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_field"), 0, (0)), 100000000, 0, -256)), 0, 0, 0, 0, (("astlib/ast_501.ml", 770, 31208, 31210), ("astlib/ast_501.ml", 775, 31403, 31408), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 92)), 2, 0); Tag1 (("class_field_desc", 1193), (0, 0, Tag1 ([(("Pcf_inherit", 999), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "override_flag"), 0, (0)), 100000000, 0, -235); (Tag3 ((("class_expr", 1189)), 0, (0)), 100000000, 0, -236); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -239)], (0)), 100000000, 0, -238)], (0)), 100000000, 0, -237)]), 0, (("astlib/ast_501.ml", 778, 31480, 31484), ("astlib/ast_501.ml", 778, 31480, 31547), 0), 0, Tag1 ("Astlib__Ast_501", 312)); (("Pcf_val", 1000), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 1135)), "label"), 0, (0)), 100000000, 0, -242)], (0)), 100000000, 0, -241); (Tag3 (Tag1 ((("Asttypes", 1135)), "mutable_flag"), 0, (0)), 100000000, 0, -243); (Tag3 ((("class_field_kind", 1194)), 0, (0)), 100000000, 0, -244)]), 100000000, 0, -240)]), 0, (("astlib/ast_501.ml", 793, 32223, 32227), ("astlib/ast_501.ml", 793, 32223, 32285), 0), 0, Tag1 ("Astlib__Ast_501", 313)); (("Pcf_method", 1001), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 1135)), "label"), 0, (0)), 100000000, 0, -247)], (0)), 100000000, 0, -246); (Tag3 (Tag1 ((("Asttypes", 1135)), "private_flag"), 0, (0)), 100000000, 0, -248); (Tag3 ((("class_field_kind", 1194)), 0, (0)), 100000000, 0, -249)]), 100000000, 0, -245)]), 0, (("astlib/ast_501.ml", 808, 33077, 33081), ("astlib/ast_501.ml", 808, 33077, 33142), 0), 0, Tag1 ("Astlib__Ast_501", 314)); (("Pcf_constraint", 1002), ([(Tag2 ([(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -251); (Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -252)]), 100000000, 0, -250)]), 0, (("astlib/ast_501.ml", 814, 33382, 33386), ("astlib/ast_501.ml", 814, 33382, 33429), 0), 0, Tag1 ("Astlib__Ast_501", 315)); (("Pcf_initializer", 1003), ([(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -253)]), 0, (("astlib/ast_501.ml", 815, 33459, 33463), ("astlib/ast_501.ml", 815, 33459, 33494), 0), 0, Tag1 ("Astlib__Ast_501", 316)); (("Pcf_attribute", 1004), ([(Tag3 ((("attribute", 1153)), 0, (0)), 100000000, 0, -254)]), 0, (("astlib/ast_501.ml", 816, 33519, 33523), ("astlib/ast_501.ml", 816, 33519, 33551), 0), 0, Tag1 ("Astlib__Ast_501", 317)); (("Pcf_extension", 1005), ([(Tag3 ((("extension", 1154)), 0, (0)), 100000000, 0, -255)]), 0, (("astlib/ast_501.ml", 817, 33573, 33577), ("astlib/ast_501.ml", 817, 33573, 33605), 0), 0, Tag1 ("Astlib__Ast_501", 318))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_field_desc"), 0, (0)), 100000000, 0, -234)), 0, 0, 0, 0, (("astlib/ast_501.ml", 777, 31410, 31412), ("astlib/ast_501.ml", 817, 33573, 33605), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 93)), 2, 0); Tag1 (("class_field_kind", 1194), (0, 0, Tag1 ([(("Cfk_virtual", 1006), ([(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -231)]), 0, (("astlib/ast_501.ml", 820, 33694, 33698), ("astlib/ast_501.ml", 820, 33694, 33724), 0), 0, Tag1 ("Astlib__Ast_501", 319)); (("Cfk_concrete", 1007), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "override_flag"), 0, (0)), 100000000, 0, -232); (Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -233)]), 0, (("astlib/ast_501.ml", 821, 33725, 33729), ("astlib/ast_501.ml", 821, 33725, 33773), 0), 0, Tag1 ("Astlib__Ast_501", 320))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_field_kind"), 0, (0)), 100000000, 0, -230)), 0, 0, 0, 0, (("astlib/ast_501.ml", 819, 33624, 33626), ("astlib/ast_501.ml", 821, 33725, 33773), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 94)), 2, 0); Tag1 (("class_declaration", 1195), (0, 0, 0, 1, ((Tag3 ((("class_infos", 1186)), [(Tag3 ((("class_expr", 1189)), 0, (0)), 100000000, 0, -229)], (0)), 100000000, 0, -228)), 0, 0, 0, 0, (("astlib/ast_501.ml", 823, 33775, 33777), ("astlib/ast_501.ml", 823, 33775, 33823), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 95)), 2, 0); Tag1 (("module_type", 1196), (0, 0, [[(("pmty_desc", 1008), 0, (Tag3 ((("module_type_desc", 1197)), 0, (0)), 100000000, 0, -225), (("astlib/ast_501.ml", 830, 33975, 33981), ("astlib/ast_501.ml", 830, 33975, 34009), 0), 0, Tag1 ("Astlib__Ast_501", 321)); (("pmty_loc", 1009), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -226), (("astlib/ast_501.ml", 831, 34010, 34016), ("astlib/ast_501.ml", 831, 34010, 34037), 0), 0, Tag1 ("Astlib__Ast_501", 322)); (("pmty_attributes", 1010), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -227), (("astlib/ast_501.ml", 832, 34038, 34044), ("astlib/ast_501.ml", 832, 34038, 34072), 0), 0, Tag1 ("Astlib__Ast_501", 323))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type"), 0, (0)), 100000000, 0, -224)), 0, 0, 0, 0, (("astlib/ast_501.ml", 828, 33909, 33911), ("astlib/ast_501.ml", 833, 34103, 34108), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 96)), 2, 0); Tag1 (("module_type_desc", 1197), (0, 0, Tag1 ([(("Pmty_ident", 1011), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -213)], (0)), 100000000, 0, -212)]), 0, (("astlib/ast_501.ml", 836, 34180, 34184), ("astlib/ast_501.ml", 836, 34180, 34215), 0), 0, Tag1 ("Astlib__Ast_501", 324)); (("Pmty_signature", 1012), ([(Tag3 ((("signature", 1199)), 0, (0)), 100000000, 0, -214)]), 0, (("astlib/ast_501.ml", 837, 34255, 34259), ("astlib/ast_501.ml", 837, 34255, 34288), 0), 0, Tag1 ("Astlib__Ast_501", 325)); (("Pmty_functor", 1013), ([(Tag3 ((("functor_parameter", 1198)), 0, (0)), 100000000, 0, -215); (Tag3 ((("module_type", 1196)), 0, (0)), 100000000, 0, -216)]), 0, (("astlib/ast_501.ml", 838, 34311, 34315), ("astlib/ast_501.ml", 838, 34311, 34364), 0), 0, Tag1 ("Astlib__Ast_501", 326)); (("Pmty_with", 1014), ([(Tag3 ((("module_type", 1196)), 0, (0)), 100000000, 0, -217); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("with_constraint", 1211)), 0, (0)), 100000000, 0, -219)], (0)), 100000000, 0, -218)]), 0, (("astlib/ast_501.ml", 840, 34406, 34410), ("astlib/ast_501.ml", 840, 34406, 34459), 0), 0, Tag1 ("Astlib__Ast_501", 327)); (("Pmty_typeof", 1015), ([(Tag3 ((("module_expr", 1212)), 0, (0)), 100000000, 0, -220)]), 0, (("astlib/ast_501.ml", 841, 34482, 34486), ("astlib/ast_501.ml", 841, 34482, 34514), 0), 0, Tag1 ("Astlib__Ast_501", 328)); (("Pmty_extension", 1016), ([(Tag3 ((("extension", 1154)), 0, (0)), 100000000, 0, -221)]), 0, (("astlib/ast_501.ml", 842, 34543, 34547), ("astlib/ast_501.ml", 842, 34543, 34576), 0), 0, Tag1 ("Astlib__Ast_501", 329)); (("Pmty_alias", 1017), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -223)], (0)), 100000000, 0, -222)]), 0, (("astlib/ast_501.ml", 843, 34593, 34597), ("astlib/ast_501.ml", 843, 34593, 34628), 0), 0, Tag1 ("Astlib__Ast_501", 330))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type_desc"), 0, (0)), 100000000, 0, -211)), 0, 0, 0, 0, (("astlib/ast_501.ml", 835, 34110, 34112), ("astlib/ast_501.ml", 843, 34593, 34628), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 97)), 2, 0); Tag1 (("functor_parameter", 1198), (0, 0, Tag1 ([(("Unit", 1018), (0), 0, (("astlib/ast_501.ml", 846, 34723, 34727), ("astlib/ast_501.ml", 846, 34723, 34733), 0), 0, Tag1 ("Astlib__Ast_501", 331)); (("Named", 1019), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -209)], (0)), 100000000, 0, -208)], (0)), 100000000, 0, -207); (Tag3 ((("module_type", 1196)), 0, (0)), 100000000, 0, -210)]), 0, (("astlib/ast_501.ml", 847, 34747, 34751), ("astlib/ast_501.ml", 847, 34747, 34793), 0), 0, Tag1 ("Astlib__Ast_501", 332))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "functor_parameter"), 0, (0)), 100000000, 0, -206)), 0, 0, 0, 0, (("astlib/ast_501.ml", 845, 34651, 34653), ("astlib/ast_501.ml", 847, 34747, 34793), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 98)), 2, 0); Tag1 (("signature", 1199), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("signature_item", 1200)), 0, (0)), 100000000, 0, -205)], (0)), 100000000, 0, -204)), 0, 0, 0, 0, (("astlib/ast_501.ml", 852, 34941, 34943), ("astlib/ast_501.ml", 852, 34941, 34978), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 99)), 2, 0); Tag1 (("signature_item", 1200), (0, 0, [[(("psig_desc", 1020), 0, (Tag3 ((("signature_item_desc", 1201)), 0, (0)), 100000000, 0, -202), (("astlib/ast_501.ml", 856, 35052, 35058), ("astlib/ast_501.ml", 856, 35052, 35089), 0), 0, Tag1 ("Astlib__Ast_501", 333)); (("psig_loc", 1021), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -203), (("astlib/ast_501.ml", 857, 35090, 35096), ("astlib/ast_501.ml", 857, 35090, 35117), 0), 0, Tag1 ("Astlib__Ast_501", 334))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item"), 0, (0)), 100000000, 0, -201)), 0, 0, 0, 0, (("astlib/ast_501.ml", 854, 34980, 34982), ("astlib/ast_501.ml", 858, 35118, 35123), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 100)), 2, 0); Tag1 (("signature_item_desc", 1201), (0, 0, Tag1 ([(("Psig_value", 1022), ([(Tag3 ((("value_description", 1171)), 0, (0)), 100000000, 0, -178)]), 0, (("astlib/ast_501.ml", 861, 35201, 35205), ("astlib/ast_501.ml", 861, 35201, 35238), 0), 0, Tag1 ("Astlib__Ast_501", 335)); (("Psig_type", 1023), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "rec_flag"), 0, (0)), 100000000, 0, -179); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 1172)), 0, (0)), 100000000, 0, -181)], (0)), 100000000, 0, -180)]), 0, (("astlib/ast_501.ml", 865, 35326, 35330), ("astlib/ast_501.ml", 865, 35326, 35377), 0), 0, Tag1 ("Astlib__Ast_501", 336)); (("Psig_typesubst", 1024), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 1172)), 0, (0)), 100000000, 0, -183)], (0)), 100000000, 0, -182)]), 0, (("astlib/ast_501.ml", 867, 35431, 35435), ("astlib/ast_501.ml", 867, 35431, 35476), 0), 0, Tag1 ("Astlib__Ast_501", 337)); (("Psig_typext", 1025), ([(Tag3 ((("type_extension", 1177)), 0, (0)), 100000000, 0, -184)]), 0, (("astlib/ast_501.ml", 869, 35532, 35536), ("astlib/ast_501.ml", 869, 35532, 35567), 0), 0, Tag1 ("Astlib__Ast_501", 338)); (("Psig_exception", 1026), ([(Tag3 ((("type_exception", 1179)), 0, (0)), 100000000, 0, -185)]), 0, (("astlib/ast_501.ml", 870, 35593, 35597), ("astlib/ast_501.ml", 870, 35593, 35631), 0), 0, Tag1 ("Astlib__Ast_501", 339)); (("Psig_module", 1027), ([(Tag3 ((("module_declaration", 1202)), 0, (0)), 100000000, 0, -186)]), 0, (("astlib/ast_501.ml", 871, 35659, 35663), ("astlib/ast_501.ml", 871, 35659, 35698), 0), 0, Tag1 ("Astlib__Ast_501", 340)); (("Psig_modsubst", 1028), ([(Tag3 ((("module_substitution", 1203)), 0, (0)), 100000000, 0, -187)]), 0, (("astlib/ast_501.ml", 872, 35742, 35746), ("astlib/ast_501.ml", 872, 35742, 35784), 0), 0, Tag1 ("Astlib__Ast_501", 341)); (("Psig_recmodule", 1029), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_declaration", 1202)), 0, (0)), 100000000, 0, -189)], (0)), 100000000, 0, -188)]), 0, (("astlib/ast_501.ml", 873, 35809, 35813), ("astlib/ast_501.ml", 873, 35809, 35856), 0), 0, Tag1 ("Astlib__Ast_501", 342)); (("Psig_modtype", 1030), ([(Tag3 ((("module_type_declaration", 1204)), 0, (0)), 100000000, 0, -190)]), 0, (("astlib/ast_501.ml", 875, 35915, 35919), ("astlib/ast_501.ml", 875, 35915, 35960), 0), 0, Tag1 ("Astlib__Ast_501", 343)); (("Psig_modtypesubst", 1031), ([(Tag3 ((("module_type_declaration", 1204)), 0, (0)), 100000000, 0, -191)]), 0, (("astlib/ast_501.ml", 877, 36017, 36021), ("astlib/ast_501.ml", 877, 36017, 36067), 0), 0, Tag1 ("Astlib__Ast_501", 344)); (("Psig_open", 1032), ([(Tag3 ((("open_description", 1206)), 0, (0)), 100000000, 0, -192)]), 0, (("astlib/ast_501.ml", 879, 36108, 36112), ("astlib/ast_501.ml", 879, 36108, 36143), 0), 0, Tag1 ("Astlib__Ast_501", 345)); (("Psig_include", 1033), ([(Tag3 ((("include_description", 1209)), 0, (0)), 100000000, 0, -193)]), 0, (("astlib/ast_501.ml", 880, 36161, 36165), ("astlib/ast_501.ml", 880, 36161, 36202), 0), 0, Tag1 ("Astlib__Ast_501", 346)); (("Psig_class", 1034), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_description", 1187)), 0, (0)), 100000000, 0, -195)], (0)), 100000000, 0, -194)]), 0, (("astlib/ast_501.ml", 881, 36224, 36228), ("astlib/ast_501.ml", 881, 36224, 36266), 0), 0, Tag1 ("Astlib__Ast_501", 347)); (("Psig_class_type", 1035), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 1188)), 0, (0)), 100000000, 0, -197)], (0)), 100000000, 0, -196)]), 0, (("astlib/ast_501.ml", 883, 36320, 36324), ("astlib/ast_501.ml", 883, 36320, 36372), 0), 0, Tag1 ("Astlib__Ast_501", 348)); (("Psig_attribute", 1036), ([(Tag3 ((("attribute", 1153)), 0, (0)), 100000000, 0, -198)]), 0, (("astlib/ast_501.ml", 885, 36433, 36437), ("astlib/ast_501.ml", 885, 36433, 36466), 0), 0, Tag1 ("Astlib__Ast_501", 349)); (("Psig_extension", 1037), ([(Tag3 ((("extension", 1154)), 0, (0)), 100000000, 0, -199); (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -200)]), 0, (("astlib/ast_501.ml", 886, 36488, 36492), ("astlib/ast_501.ml", 886, 36488, 36534), 0), 0, Tag1 ("Astlib__Ast_501", 350))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item_desc"), 0, (0)), 100000000, 0, -177)), 0, 0, 0, 0, (("astlib/ast_501.ml", 860, 35125, 35127), ("astlib/ast_501.ml", 886, 36488, 36534), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 101)), 2, 0); Tag1 (("module_declaration", 1202), (0, 0, [[(("pmd_name", 1038), 0, (Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -173)], (0)), 100000000, 0, -172)], (0)), 100000000, 0, -171), (("astlib/ast_501.ml", 890, 36633, 36639), ("astlib/ast_501.ml", 890, 36633, 36667), 0), 0, Tag1 ("Astlib__Ast_501", 351)); (("pmd_type", 1039), 0, (Tag3 ((("module_type", 1196)), 0, (0)), 100000000, 0, -174), (("astlib/ast_501.ml", 891, 36668, 36674), ("astlib/ast_501.ml", 891, 36668, 36696), 0), 0, Tag1 ("Astlib__Ast_501", 352)); (("pmd_attributes", 1040), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -175), (("astlib/ast_501.ml", 892, 36697, 36703), ("astlib/ast_501.ml", 892, 36697, 36730), 0), 0, Tag1 ("Astlib__Ast_501", 353)); (("pmd_loc", 1041), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -176), (("astlib/ast_501.ml", 893, 36765, 36771), ("astlib/ast_501.ml", 893, 36765, 36791), 0), 0, Tag1 ("Astlib__Ast_501", 354))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_declaration"), 0, (0)), 100000000, 0, -170)), 0, 0, 0, 0, (("astlib/ast_501.ml", 888, 36553, 36555), ("astlib/ast_501.ml", 894, 36792, 36797), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 102)), 2, 0); Tag1 (("module_substitution", 1203), (0, 0, [[(("pms_name", 1042), 0, (Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -165)], (0)), 100000000, 0, -164), (("astlib/ast_501.ml", 899, 36946, 36952), ("astlib/ast_501.ml", 899, 36946, 36973), 0), 0, Tag1 ("Astlib__Ast_501", 355)); (("pms_manifest", 1043), 0, (Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -167)], (0)), 100000000, 0, -166), (("astlib/ast_501.ml", 900, 36974, 36980), ("astlib/ast_501.ml", 900, 36974, 37010), 0), 0, Tag1 ("Astlib__Ast_501", 356)); (("pms_attributes", 1044), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -168), (("astlib/ast_501.ml", 901, 37011, 37017), ("astlib/ast_501.ml", 901, 37011, 37044), 0), 0, Tag1 ("Astlib__Ast_501", 357)); (("pms_loc", 1045), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -169), (("astlib/ast_501.ml", 902, 37079, 37085), ("astlib/ast_501.ml", 902, 37079, 37105), 0), 0, Tag1 ("Astlib__Ast_501", 358))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_substitution"), 0, (0)), 100000000, 0, -163)), 0, 0, 0, 0, (("astlib/ast_501.ml", 897, 36864, 36866), ("astlib/ast_501.ml", 903, 37106, 37111), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 103)), 2, 0); Tag1 (("module_type_declaration", 1204), (0, 0, [[(("pmtd_name", 1046), 0, (Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -158)], (0)), 100000000, 0, -157), (("astlib/ast_501.ml", 908, 37269, 37275), ("astlib/ast_501.ml", 908, 37269, 37297), 0), 0, Tag1 ("Astlib__Ast_501", 359)); (("pmtd_type", 1047), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 1196)), 0, (0)), 100000000, 0, -160)], (0)), 100000000, 0, -159), (("astlib/ast_501.ml", 909, 37298, 37304), ("astlib/ast_501.ml", 909, 37298, 37334), 0), 0, Tag1 ("Astlib__Ast_501", 360)); (("pmtd_attributes", 1048), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -161), (("astlib/ast_501.ml", 910, 37335, 37341), ("astlib/ast_501.ml", 910, 37335, 37369), 0), 0, Tag1 ("Astlib__Ast_501", 361)); (("pmtd_loc", 1049), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -162), (("astlib/ast_501.ml", 911, 37404, 37410), ("astlib/ast_501.ml", 911, 37404, 37431), 0), 0, Tag1 ("Astlib__Ast_501", 362))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type_declaration"), 0, (0)), 100000000, 0, -156)), 0, 0, 0, 0, (("astlib/ast_501.ml", 906, 37179, 37181), ("astlib/ast_501.ml", 912, 37432, 37437), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 104)), 2, 0); Tag1 (("open_infos", 1205), ([((("a")), 100000000, 0, -152)], 1, [[(("popen_expr", 1050), 0, ((("a")), 100000000, 0, -152), (("astlib/ast_501.ml", 921, 37712, 37718), ("astlib/ast_501.ml", 921, 37712, 37733), 0), 0, Tag1 ("Astlib__Ast_501", 363)); (("popen_override", 1051), 0, (Tag3 (Tag1 ((("Asttypes", 1135)), "override_flag"), 0, (0)), 100000000, 0, -153), (("astlib/ast_501.ml", 922, 37734, 37740), ("astlib/ast_501.ml", 922, 37734, 37770), 0), 0, Tag1 ("Astlib__Ast_501", 364)); (("popen_loc", 1052), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -154), (("astlib/ast_501.ml", 923, 37771, 37777), ("astlib/ast_501.ml", 923, 37771, 37799), 0), 0, Tag1 ("Astlib__Ast_501", 365)); (("popen_attributes", 1053), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -155), (("astlib/ast_501.ml", 924, 37800, 37806), ("astlib/ast_501.ml", 924, 37800, 37835), 0), 0, Tag1 ("Astlib__Ast_501", 366))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "open_infos"), [((("a")), 100000000, 0, -152)], (0)), 100000000, 0, -151)), [25], [0], 0, 0, (("astlib/ast_501.ml", 919, 37642, 37644), ("astlib/ast_501.ml", 925, 37836, 37841), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 105)), 2, 0); Tag1 (("open_description", 1206), (0, 0, 0, 1, ((Tag3 ((("open_infos", 1205)), [(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -150)], (0)), 100000000, 0, -149)], (0)), 100000000, 0, -148)), 0, 0, 0, 0, (("astlib/ast_501.ml", 934, 38228, 38230), ("astlib/ast_501.ml", 934, 38228, 38279), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 106)), 2, 0); Tag1 (("open_declaration", 1207), (0, 0, 0, 1, ((Tag3 ((("open_infos", 1205)), [(Tag3 ((("module_expr", 1212)), 0, (0)), 100000000, 0, -147)], (0)), 100000000, 0, -146)), 0, 0, 0, 0, (("astlib/ast_501.ml", 939, 38377, 38379), ("astlib/ast_501.ml", 939, 38377, 38424), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 107)), 2, 0); Tag1 (("include_infos", 1208), ([((("a")), 100000000, 0, -143)], 1, [[(("pincl_mod", 1054), 0, ((("a")), 100000000, 0, -143), (("astlib/ast_501.ml", 947, 38628, 38634), ("astlib/ast_501.ml", 947, 38628, 38648), 0), 0, Tag1 ("Astlib__Ast_501", 367)); (("pincl_loc", 1055), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -144), (("astlib/ast_501.ml", 948, 38649, 38655), ("astlib/ast_501.ml", 948, 38649, 38677), 0), 0, Tag1 ("Astlib__Ast_501", 368)); (("pincl_attributes", 1056), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -145), (("astlib/ast_501.ml", 949, 38678, 38684), ("astlib/ast_501.ml", 949, 38678, 38713), 0), 0, Tag1 ("Astlib__Ast_501", 369))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "include_infos"), [((("a")), 100000000, 0, -143)], (0)), 100000000, 0, -142)), [25], [0], 0, 0, (("astlib/ast_501.ml", 945, 38552, 38554), ("astlib/ast_501.ml", 950, 38714, 38719), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 108)), 2, 0); Tag1 (("include_description", 1209), (0, 0, 0, 1, ((Tag3 ((("include_infos", 1208)), [(Tag3 ((("module_type", 1196)), 0, (0)), 100000000, 0, -141)], (0)), 100000000, 0, -140)), 0, 0, 0, 0, (("astlib/ast_501.ml", 952, 38721, 38723), ("astlib/ast_501.ml", 952, 38721, 38774), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 109)), 2, 0); Tag1 (("include_declaration", 1210), (0, 0, 0, 1, ((Tag3 ((("include_infos", 1208)), [(Tag3 ((("module_expr", 1212)), 0, (0)), 100000000, 0, -139)], (0)), 100000000, 0, -138)), 0, 0, 0, 0, (("astlib/ast_501.ml", 955, 38846, 38848), ("astlib/ast_501.ml", 955, 38846, 38899), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 110)), 2, 0); Tag1 (("with_constraint", 1211), (0, 0, Tag1 ([(("Pwith_type", 1057), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -119)], (0)), 100000000, 0, -118); (Tag3 ((("type_declaration", 1172)), 0, (0)), 100000000, 0, -120)]), 0, (("astlib/ast_501.ml", 959, 39039, 39043), ("astlib/ast_501.ml", 959, 39039, 39093), 0), 0, Tag1 ("Astlib__Ast_501", 370)); (("Pwith_module", 1058), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -122)], (0)), 100000000, 0, -121); (Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -124)], (0)), 100000000, 0, -123)]), 0, (("astlib/ast_501.ml", 964, 39243, 39247), ("astlib/ast_501.ml", 964, 39243, 39298), 0), 0, Tag1 ("Astlib__Ast_501", 371)); (("Pwith_modtype", 1059), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -126)], (0)), 100000000, 0, -125); (Tag3 ((("module_type", 1196)), 0, (0)), 100000000, 0, -127)]), 0, (("astlib/ast_501.ml", 966, 39336, 39340), ("astlib/ast_501.ml", 966, 39336, 39388), 0), 0, Tag1 ("Astlib__Ast_501", 372)); (("Pwith_modtypesubst", 1060), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -129)], (0)), 100000000, 0, -128); (Tag3 ((("module_type", 1196)), 0, (0)), 100000000, 0, -130)]), 0, (("astlib/ast_501.ml", 968, 39431, 39435), ("astlib/ast_501.ml", 968, 39431, 39488), 0), 0, Tag1 ("Astlib__Ast_501", 373)); (("Pwith_typesubst", 1061), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -132)], (0)), 100000000, 0, -131); (Tag3 ((("type_declaration", 1172)), 0, (0)), 100000000, 0, -133)]), 0, (("astlib/ast_501.ml", 970, 39538, 39542), ("astlib/ast_501.ml", 970, 39538, 39597), 0), 0, Tag1 ("Astlib__Ast_501", 374)); (("Pwith_modsubst", 1062), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -135)], (0)), 100000000, 0, -134); (Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -137)], (0)), 100000000, 0, -136)]), 0, (("astlib/ast_501.ml", 972, 39665, 39669), ("astlib/ast_501.ml", 972, 39665, 39722), 0), 0, Tag1 ("Astlib__Ast_501", 375))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "with_constraint"), 0, (0)), 100000000, 0, -117)), 0, 0, 0, 0, (("astlib/ast_501.ml", 958, 38971, 38973), ("astlib/ast_501.ml", 972, 39665, 39722), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 111)), 2, 0); Tag1 (("module_expr", 1212), (0, 0, [[(("pmod_desc", 1063), 0, (Tag3 ((("module_expr_desc", 1213)), 0, (0)), 100000000, 0, -114), (("astlib/ast_501.ml", 979, 39884, 39890), ("astlib/ast_501.ml", 979, 39884, 39918), 0), 0, Tag1 ("Astlib__Ast_501", 376)); (("pmod_loc", 1064), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -115), (("astlib/ast_501.ml", 980, 39919, 39925), ("astlib/ast_501.ml", 980, 39919, 39946), 0), 0, Tag1 ("Astlib__Ast_501", 377)); (("pmod_attributes", 1065), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -116), (("astlib/ast_501.ml", 981, 39947, 39953), ("astlib/ast_501.ml", 981, 39947, 39981), 0), 0, Tag1 ("Astlib__Ast_501", 378))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr"), 0, (0)), 100000000, 0, -113)), 0, 0, 0, 0, (("astlib/ast_501.ml", 977, 39818, 39820), ("astlib/ast_501.ml", 982, 40012, 40017), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 112)), 2, 0); Tag1 (("module_expr_desc", 1213), (0, 0, Tag1 ([(("Pmod_ident", 1066), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -102)], (0)), 100000000, 0, -101)]), 0, (("astlib/ast_501.ml", 985, 40089, 40093), ("astlib/ast_501.ml", 985, 40089, 40124), 0), 0, Tag1 ("Astlib__Ast_501", 379)); (("Pmod_structure", 1067), ([(Tag3 ((("structure", 1214)), 0, (0)), 100000000, 0, -103)]), 0, (("astlib/ast_501.ml", 986, 40137, 40141), ("astlib/ast_501.ml", 986, 40137, 40170), 0), 0, Tag1 ("Astlib__Ast_501", 380)); (("Pmod_functor", 1068), ([(Tag3 ((("functor_parameter", 1198)), 0, (0)), 100000000, 0, -104); (Tag3 ((("module_expr", 1212)), 0, (0)), 100000000, 0, -105)]), 0, (("astlib/ast_501.ml", 987, 40196, 40200), ("astlib/ast_501.ml", 987, 40196, 40249), 0), 0, Tag1 ("Astlib__Ast_501", 381)); (("Pmod_apply", 1069), ([(Tag3 ((("module_expr", 1212)), 0, (0)), 100000000, 0, -106); (Tag3 ((("module_expr", 1212)), 0, (0)), 100000000, 0, -107)]), 0, (("astlib/ast_501.ml", 989, 40290, 40294), ("astlib/ast_501.ml", 989, 40290, 40335), 0), 0, Tag1 ("Astlib__Ast_501", 382)); (("Pmod_apply_unit", 1070), ([(Tag3 ((("module_expr", 1212)), 0, (0)), 100000000, 0, -108)]), 0, (("astlib/ast_501.ml", 990, 40355, 40359), ("astlib/ast_501.ml", 990, 40355, 40391), 0), 0, Tag1 ("Astlib__Ast_501", 383)); (("Pmod_constraint", 1071), ([(Tag3 ((("module_expr", 1212)), 0, (0)), 100000000, 0, -109); (Tag3 ((("module_type", 1196)), 0, (0)), 100000000, 0, -110)]), 0, (("astlib/ast_501.ml", 991, 40407, 40411), ("astlib/ast_501.ml", 991, 40407, 40457), 0), 0, Tag1 ("Astlib__Ast_501", 384)); (("Pmod_unpack", 1072), ([(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -111)]), 0, (("astlib/ast_501.ml", 992, 40478, 40482), ("astlib/ast_501.ml", 992, 40478, 40509), 0), 0, Tag1 ("Astlib__Ast_501", 385)); (("Pmod_extension", 1073), ([(Tag3 ((("extension", 1154)), 0, (0)), 100000000, 0, -112)]), 0, (("astlib/ast_501.ml", 993, 40528, 40532), ("astlib/ast_501.ml", 993, 40528, 40561), 0), 0, Tag1 ("Astlib__Ast_501", 386))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr_desc"), 0, (0)), 100000000, 0, -100)), 0, 0, 0, 0, (("astlib/ast_501.ml", 984, 40019, 40021), ("astlib/ast_501.ml", 993, 40528, 40561), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 113)), 2, 0); Tag1 (("structure", 1214), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("structure_item", 1215)), 0, (0)), 100000000, 0, -99)], (0)), 100000000, 0, -98)), 0, 0, 0, 0, (("astlib/ast_501.ml", 995, 40579, 40581), ("astlib/ast_501.ml", 995, 40579, 40616), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 114)), 2, 0); Tag1 (("structure_item", 1215), (0, 0, [[(("pstr_desc", 1074), 0, (Tag3 ((("structure_item_desc", 1216)), 0, (0)), 100000000, 0, -96), (("astlib/ast_501.ml", 999, 40690, 40696), ("astlib/ast_501.ml", 999, 40690, 40727), 0), 0, Tag1 ("Astlib__Ast_501", 387)); (("pstr_loc", 1075), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -97), (("astlib/ast_501.ml", 1000, 40728, 40734), ("astlib/ast_501.ml", 1000, 40728, 40755), 0), 0, Tag1 ("Astlib__Ast_501", 388))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure_item"), 0, (0)), 100000000, 0, -95)), 0, 0, 0, 0, (("astlib/ast_501.ml", 997, 40618, 40620), ("astlib/ast_501.ml", 1001, 40756, 40761), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 115)), 2, 0); Tag1 (("structure_item_desc", 1216), (0, 0, Tag1 ([(("Pstr_eval", 1076), ([(Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -71); (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -72)]), 0, (("astlib/ast_501.ml", 1004, 40839, 40843), ("astlib/ast_501.ml", 1004, 40839, 40881), 0), 0, Tag1 ("Astlib__Ast_501", 389)); (("Pstr_value", 1077), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "rec_flag"), 0, (0)), 100000000, 0, -73); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 1218)), 0, (0)), 100000000, 0, -75)], (0)), 100000000, 0, -74)]), 0, (("astlib/ast_501.ml", 1005, 40894, 40898), ("astlib/ast_501.ml", 1005, 40894, 40943), 0), 0, Tag1 ("Astlib__Ast_501", 390)); (("Pstr_primitive", 1078), ([(Tag3 ((("value_description", 1171)), 0, (0)), 100000000, 0, -76)]), 0, (("astlib/ast_501.ml", 1012, 41293, 41297), ("astlib/ast_501.ml", 1012, 41293, 41334), 0), 0, Tag1 ("Astlib__Ast_501", 391)); (("Pstr_type", 1079), ([(Tag3 (Tag1 ((("Asttypes", 1135)), "rec_flag"), 0, (0)), 100000000, 0, -77); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 1172)), 0, (0)), 100000000, 0, -79)], (0)), 100000000, 0, -78)]), 0, (("astlib/ast_501.ml", 1015, 41411, 41415), ("astlib/ast_501.ml", 1015, 41411, 41462), 0), 0, Tag1 ("Astlib__Ast_501", 392)); (("Pstr_typext", 1080), ([(Tag3 ((("type_extension", 1177)), 0, (0)), 100000000, 0, -80)]), 0, (("astlib/ast_501.ml", 1017, 41515, 41519), ("astlib/ast_501.ml", 1017, 41515, 41550), 0), 0, Tag1 ("Astlib__Ast_501", 393)); (("Pstr_exception", 1081), ([(Tag3 ((("type_exception", 1179)), 0, (0)), 100000000, 0, -81)]), 0, (("astlib/ast_501.ml", 1018, 41576, 41580), ("astlib/ast_501.ml", 1018, 41576, 41614), 0), 0, Tag1 ("Astlib__Ast_501", 394)); (("Pstr_module", 1082), ([(Tag3 ((("module_binding", 1219)), 0, (0)), 100000000, 0, -82)]), 0, (("astlib/ast_501.ml", 1021, 41687, 41691), ("astlib/ast_501.ml", 1021, 41687, 41722), 0), 0, Tag1 ("Astlib__Ast_501", 395)); (("Pstr_recmodule", 1083), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_binding", 1219)), 0, (0)), 100000000, 0, -84)], (0)), 100000000, 0, -83)]), 0, (("astlib/ast_501.ml", 1022, 41747, 41751), ("astlib/ast_501.ml", 1022, 41747, 41790), 0), 0, Tag1 ("Astlib__Ast_501", 396)); (("Pstr_modtype", 1084), ([(Tag3 ((("module_type_declaration", 1204)), 0, (0)), 100000000, 0, -85)]), 0, (("astlib/ast_501.ml", 1024, 41849, 41853), ("astlib/ast_501.ml", 1024, 41849, 41894), 0), 0, Tag1 ("Astlib__Ast_501", 397)); (("Pstr_open", 1085), ([(Tag3 ((("open_declaration", 1207)), 0, (0)), 100000000, 0, -86)]), 0, (("astlib/ast_501.ml", 1025, 41924, 41928), ("astlib/ast_501.ml", 1025, 41924, 41959), 0), 0, Tag1 ("Astlib__Ast_501", 398)); (("Pstr_class", 1086), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_declaration", 1195)), 0, (0)), 100000000, 0, -88)], (0)), 100000000, 0, -87)]), 0, (("astlib/ast_501.ml", 1026, 41977, 41981), ("astlib/ast_501.ml", 1026, 41977, 42019), 0), 0, Tag1 ("Astlib__Ast_501", 399)); (("Pstr_class_type", 1087), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 1188)), 0, (0)), 100000000, 0, -90)], (0)), 100000000, 0, -89)]), 0, (("astlib/ast_501.ml", 1028, 42073, 42077), ("astlib/ast_501.ml", 1028, 42073, 42125), 0), 0, Tag1 ("Astlib__Ast_501", 400)); (("Pstr_include", 1088), ([(Tag3 ((("include_declaration", 1210)), 0, (0)), 100000000, 0, -91)]), 0, (("astlib/ast_501.ml", 1030, 42186, 42190), ("astlib/ast_501.ml", 1030, 42186, 42227), 0), 0, Tag1 ("Astlib__Ast_501", 401)); (("Pstr_attribute", 1089), ([(Tag3 ((("attribute", 1153)), 0, (0)), 100000000, 0, -92)]), 0, (("astlib/ast_501.ml", 1031, 42249, 42253), ("astlib/ast_501.ml", 1031, 42249, 42282), 0), 0, Tag1 ("Astlib__Ast_501", 402)); (("Pstr_extension", 1090), ([(Tag3 ((("extension", 1154)), 0, (0)), 100000000, 0, -93); (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -94)]), 0, (("astlib/ast_501.ml", 1032, 42304, 42308), ("astlib/ast_501.ml", 1032, 42304, 42350), 0), 0, Tag1 ("Astlib__Ast_501", 403))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure_item_desc"), 0, (0)), 100000000, 0, -70)), 0, 0, 0, 0, (("astlib/ast_501.ml", 1003, 40763, 40765), ("astlib/ast_501.ml", 1032, 42304, 42350), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 116)), 2, 0); Tag1 (("value_constraint", 1217), (0, 0, Tag1 ([(("Pvc_constraint", 1091), Tag1 ([(("locally_abstract_univars", 1092), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -65)], (0)), 100000000, 0, -64)], (0)), 100000000, 0, -63), (("astlib/ast_501.ml", 1036, 42465, 42471), ("astlib/ast_501.ml", 1036, 42465, 42512), 0), 0, Tag1 ("Astlib__Ast_501", 404)); (("typ", 1093), 0, (Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -66), (("astlib/ast_501.ml", 1037, 42513, 42519), ("astlib/ast_501.ml", 1037, 42513, 42533), 0), 0, Tag1 ("Astlib__Ast_501", 405))]), 0, (("astlib/ast_501.ml", 1035, 42439, 42443), ("astlib/ast_501.ml", 1038, 42534, 42541), 0), 0, Tag1 ("Astlib__Ast_501", 406)); (("Pvc_coercion", 1094), Tag1 ([(("ground", 1095), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -68)], (0)), 100000000, 0, -67), (("astlib/ast_501.ml", 1039, 42542, 42565), ("astlib/ast_501.ml", 1039, 42542, 42589), 0), 0, Tag1 ("Astlib__Ast_501", 407)); (("coercion", 1096), 0, (Tag3 ((("core_type", 1157)), 0, (0)), 100000000, 0, -69), (("astlib/ast_501.ml", 1039, 42542, 42590), ("astlib/ast_501.ml", 1039, 42542, 42608), 0), 0, Tag1 ("Astlib__Ast_501", 408))]), 0, (("astlib/ast_501.ml", 1039, 42542, 42546), ("astlib/ast_501.ml", 1039, 42542, 42610), 0), 0, Tag1 ("Astlib__Ast_501", 409))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "value_constraint"), 0, (0)), 100000000, 0, -62)), 0, 0, 0, 0, (("astlib/ast_501.ml", 1034, 42369, 42371), ("astlib/ast_501.ml", 1039, 42542, 42610), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 117)), 2, 0); Tag1 (("value_binding", 1218), (0, 0, [[(("pvb_pat", 1097), 0, (Tag3 ((("pattern", 1164)), 0, (0)), 100000000, 0, -56), (("astlib/ast_501.ml", 1043, 42682, 42688), ("astlib/ast_501.ml", 1043, 42682, 42705), 0), 0, Tag1 ("Astlib__Ast_501", 410)); (("pvb_expr", 1098), 0, (Tag3 ((("expression", 1166)), 0, (0)), 100000000, 0, -57), (("astlib/ast_501.ml", 1044, 42706, 42712), ("astlib/ast_501.ml", 1044, 42706, 42733), 0), 0, Tag1 ("Astlib__Ast_501", 411)); (("pvb_constraint", 1099), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("value_constraint", 1217)), 0, (0)), 100000000, 0, -59)], (0)), 100000000, 0, -58), (("astlib/ast_501.ml", 1045, 42734, 42740), ("astlib/ast_501.ml", 1045, 42734, 42780), 0), 0, Tag1 ("Astlib__Ast_501", 412)); (("pvb_attributes", 1100), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -60), (("astlib/ast_501.ml", 1046, 42781, 42787), ("astlib/ast_501.ml", 1046, 42781, 42814), 0), 0, Tag1 ("Astlib__Ast_501", 413)); (("pvb_loc", 1101), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -61), (("astlib/ast_501.ml", 1047, 42815, 42821), ("astlib/ast_501.ml", 1047, 42815, 42841), 0), 0, Tag1 ("Astlib__Ast_501", 414))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "value_binding"), 0, (0)), 100000000, 0, -55)), 0, 0, 0, 0, (("astlib/ast_501.ml", 1041, 42612, 42614), ("astlib/ast_501.ml", 1048, 42842, 42847), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 118)), 2, 0); Tag1 (("module_binding", 1219), (0, 0, [[(("pmb_name", 1102), 0, (Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -51)], (0)), 100000000, 0, -50)], (0)), 100000000, 0, -49), (("astlib/ast_501.ml", 1052, 42921, 42927), ("astlib/ast_501.ml", 1052, 42921, 42955), 0), 0, Tag1 ("Astlib__Ast_501", 415)); (("pmb_expr", 1103), 0, (Tag3 ((("module_expr", 1212)), 0, (0)), 100000000, 0, -52), (("astlib/ast_501.ml", 1053, 42956, 42962), ("astlib/ast_501.ml", 1053, 42956, 42984), 0), 0, Tag1 ("Astlib__Ast_501", 416)); (("pmb_attributes", 1104), 0, (Tag3 ((("attributes", 1155)), 0, (0)), 100000000, 0, -53), (("astlib/ast_501.ml", 1054, 42985, 42991), ("astlib/ast_501.ml", 1054, 42985, 43018), 0), 0, Tag1 ("Astlib__Ast_501", 417)); (("pmb_loc", 1105), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -54), (("astlib/ast_501.ml", 1055, 43019, 43025), ("astlib/ast_501.ml", 1055, 43019, 43045), 0), 0, Tag1 ("Astlib__Ast_501", 418))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_binding"), 0, (0)), 100000000, 0, -48)), 0, 0, 0, 0, (("astlib/ast_501.ml", 1050, 42849, 42851), ("astlib/ast_501.ml", 1056, 43046, 43051), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 119)), 2, 0); Tag1 (("toplevel_phrase", 1220), (0, 0, Tag1 ([(("Ptop_def", 1120), ([(Tag3 ((("structure", 1214)), 0, (0)), 100000000, 0, -46)]), 0, (("astlib/ast_501.ml", 1064, 43244, 43248), ("astlib/ast_501.ml", 1064, 43244, 43271), 0), 0, Tag1 ("Astlib__Ast_501", 435)); (("Ptop_dir", 1121), ([(Tag3 ((("toplevel_directive", 1221)), 0, (0)), 100000000, 0, -47)]), 0, (("astlib/ast_501.ml", 1065, 43272, 43276), ("astlib/ast_501.ml", 1065, 43272, 43308), 0), 0, Tag1 ("Astlib__Ast_501", 436))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "toplevel_phrase"), 0, (0)), 100000000, 0, -45)), 0, 0, 0, 0, (("astlib/ast_501.ml", 1063, 43175, 43177), ("astlib/ast_501.ml", 1065, 43272, 43308), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 431)), 1, 0); Tag1 (("toplevel_directive", 1221), (0, 0, [[(("pdir_name", 1122), 0, (Tag3 (Tag1 ((("Asttypes", 1135)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -41)], (0)), 100000000, 0, -40), (("astlib/ast_501.ml", 1069, 43418, 43424), ("astlib/ast_501.ml", 1069, 43418, 43446), 0), 0, Tag1 ("Astlib__Ast_501", 437)); (("pdir_arg", 1123), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("directive_argument", 1222)), 0, (0)), 100000000, 0, -43)], (0)), 100000000, 0, -42), (("astlib/ast_501.ml", 1070, 43447, 43453), ("astlib/ast_501.ml", 1070, 43447, 43489), 0), 0, Tag1 ("Astlib__Ast_501", 438)); (("pdir_loc", 1124), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -44), (("astlib/ast_501.ml", 1071, 43490, 43496), ("astlib/ast_501.ml", 1071, 43490, 43517), 0), 0, Tag1 ("Astlib__Ast_501", 439))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "toplevel_directive"), 0, (0)), 100000000, 0, -39)), 0, 0, 0, 0, (("astlib/ast_501.ml", 1067, 43338, 43340), ("astlib/ast_501.ml", 1072, 43518, 43523), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 432)), 2, 0); Tag1 (("directive_argument", 1222), (0, 0, [[(("pdira_desc", 1125), 0, (Tag3 ((("directive_argument_desc", 1223)), 0, (0)), 100000000, 0, -37), (("astlib/ast_501.ml", 1076, 43605, 43611), ("astlib/ast_501.ml", 1076, 43605, 43647), 0), 0, Tag1 ("Astlib__Ast_501", 440)); (("pdira_loc", 1126), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -38), (("astlib/ast_501.ml", 1077, 43648, 43654), ("astlib/ast_501.ml", 1077, 43648, 43676), 0), 0, Tag1 ("Astlib__Ast_501", 441))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "directive_argument"), 0, (0)), 100000000, 0, -36)), 0, 0, 0, 0, (("astlib/ast_501.ml", 1074, 43525, 43527), ("astlib/ast_501.ml", 1078, 43677, 43682), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 433)), 2, 0); Tag1 (("directive_argument_desc", 1223), (0, 0, Tag1 ([(("Pdir_string", 1127), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -30)]), 0, (("astlib/ast_501.ml", 1081, 43768, 43772), ("astlib/ast_501.ml", 1081, 43768, 43795), 0), 0, Tag1 ("Astlib__Ast_501", 442)); (("Pdir_int", 1128), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -31); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -33)], (0)), 100000000, 0, -32)]), 0, (("astlib/ast_501.ml", 1082, 43796, 43800), ("astlib/ast_501.ml", 1082, 43796, 43834), 0), 0, Tag1 ("Astlib__Ast_501", 443)); (("Pdir_ident", 1129), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -34)]), 0, (("astlib/ast_501.ml", 1083, 43835, 43839), ("astlib/ast_501.ml", 1083, 43835, 43866), 0), 0, Tag1 ("Astlib__Ast_501", 444)); (("Pdir_bool", 1130), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -35)]), 0, (("astlib/ast_501.ml", 1084, 43867, 43871), ("astlib/ast_501.ml", 1084, 43867, 43890), 0), 0, Tag1 ("Astlib__Ast_501", 445))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "directive_argument_desc"), 0, (0)), 100000000, 0, -29)), 0, 0, 0, 0, (("astlib/ast_501.ml", 1080, 43684, 43686), ("astlib/ast_501.ml", 1084, 43867, 43890), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 434)), 2, 0)]), 0, (("astlib/ast_501.ml", 48, 1423, 1423), ("astlib/ast_501.ml", 1085, 43891, 43894), 0), Tag1 ("Astlib__Ast_501", 446)), 0, 0); Tag3 (("Config", 1137), 0, (Tag1 ([(("ast_impl_magic_number", 1224), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -715), 0, (("astlib/ast_501.ml", 1088, 43919, 43925), ("astlib/ast_501.ml", 1088, 43919, 43946), 0), 0, Tag1 ("Astlib__Ast_501", 447)), 0); (("ast_intf_magic_number", 1225), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -714), 0, (("astlib/ast_501.ml", 1089, 43964, 43970), ("astlib/ast_501.ml", 1089, 43964, 43991), 0), 0, Tag1 ("Astlib__Ast_501", 448)), 0)]), 0, (("astlib/ast_501.ml", 1087, 43896, 43896), ("astlib/ast_501.ml", 1090, 44009, 44012), 0), Tag1 ("Astlib__Ast_501", 449)), 0, 0)], "Astlib__Ast_501", [("Astlib__Ast_501", ("\207\"A\188\024\242Q\223\153\146\239\128\168h\148&")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Ocaml_common", ("1\212\195\020\163\232\187\142G\192\221\180@\1278u")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216")); ("Astlib__Longident", ("\n\192\233\142\177n\225\191\238\161#\150\204n\"Y")); ("Astlib__Location", ("nn\153\250\162\2239\215\129\229e\026xg\000U")); ("Astlib__", ("\246\155.n\143$\1435\bi\005\019C\219\191A"))], [(0)])

  end
