module Signature_search :
  sig
    type ele
    type tab = (ele, Types.signature_item) Hashtbl.t
    val table : Types.signature -> tab
    val search_value : tab -> string -> Types.type_expr
    val search_extension : tab -> string -> Types.extension_constructor
    val search_type : tab -> string -> Types.type_declaration
    val search_class : tab -> string -> Types.class_declaration
    val search_class_type : tab -> string -> Types.class_type_declaration
    val search_module : tab -> string -> Types.module_type
    val search_module_type : tab -> string -> Types.module_type option
    val search_attribute_type :
      Types.Vars.key -> Types.class_signature -> Types.type_expr
    val search_method_type :
      string -> Types.class_signature -> Types.type_expr
  end
module type Info_retriever =
  sig
    val all_special : string -> string -> int * Odoc_types.info list
    val blank_line_outside_simple : string -> string -> bool
    val just_after_special : string -> string -> int * Odoc_types.info option
    val first_special : string -> string -> int * Odoc_types.info option
    val get_comments :
      (Odoc_types.text -> 'a) ->
      string -> string -> Odoc_types.info option * 'a list
  end
val analyze_alerts :
  Odoc_types.info option -> Parsetree.attributes -> Odoc_types.info option
module Analyser :
  Info_retriever ->
    sig
      val file : string ref
      val file_name : string ref
      val get_string_of_file : int -> int -> string
      val prepare_file : string -> string -> unit
      val preamble :
        string ->
        string ->
        ('a -> Location.t) -> 'a list -> int * Odoc_types.info option
      val get_comments_in_class :
        int -> int -> Odoc_types.info option * Odoc_class.class_element list
      val get_comments_in_module :
        int ->
        int -> Odoc_types.info option * Odoc_module.module_element list
      val name_comment_from_type_decl :
        int ->
        int ->
        Parsetree.type_declaration ->
        int * (string * Odoc_types.info option) list
      val manifest_structure :
        Odoc_env.env ->
        (string * Odoc_types.info option) list ->
        Types.type_expr -> Odoc_type.type_manifest
      val get_type_kind :
        Odoc_env.env ->
        (string * Odoc_types.info option) list ->
        Types.type_decl_kind -> Odoc_type.type_kind
      val get_cstr_args :
        Odoc_env.env ->
        int -> Typedtree.constructor_arguments -> Odoc_type.constructor_args
      val merge_infos :
        Odoc_types.info option ->
        Odoc_types.info option -> Odoc_types.info option
      val analyse_module_type_kind :
        ?erased:[ `Constrained of Parsetree.with_constraint list | `Removed ]
                Odoc_name.Map.t ->
        Odoc_env.env ->
        Odoc_name.t ->
        Parsetree.module_type ->
        Types.module_type -> Odoc_module.module_type_kind
      val analyse_class_type_kind :
        Odoc_env.env ->
        Odoc_name.t ->
        int ->
        Parsetree.class_type ->
        Types.class_type -> Odoc_class.class_type_kind
      val analyse_signature :
        string ->
        string ->
        Parsetree.signature -> Types.signature -> Odoc_module.t_module("DEBUG:rule", [Tag3 (("Signature_search", 973), 0, (Tag1 ([Tag1 (("ele", 977), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("odoc_sig.mli", 21, 1287, 1293), ("odoc_sig.mli", 21, 1287, 1301), 0), 0, 0, 0, Tag1 ("Odoc_sig", 0)), 1, 0); Tag1 (("tab", 978), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Hashtbl"), "t"), [(Tag3 ((("ele", 977)), 0, (0)), 100000000, 0, -59); (Tag3 (Tag1 ((Tag2 ("Types")), "signature_item"), 0, (0)), 100000000, 0, -60)], (0)), 100000000, 0, -58)), 0, 0, 0, 0, (("odoc_sig.mli", 22, 1302, 1308), ("odoc_sig.mli", 22, 1302, 1356), 0), 0, 0, 0, Tag1 ("Odoc_sig", 1)), 1, 0); (("table", 979), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "signature"), 0, (0)), 100000000, 0, -57), (Tag3 ((("tab", 978)), 0, (0)), 100000000, 0, -56), 0), 100000000, 0, -55), 0, (("odoc_sig.mli", 26, 1471, 1477), ("odoc_sig.mli", 26, 1471, 1511), 0), 0, Tag1 ("Odoc_sig", 3)), 0); (("search_value", 980), ((Tag1 (0, (Tag3 ((("tab", 978)), 0, (0)), 100000000, 0, -54), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -53), (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0), 100000000, 0, -50), 0, (("odoc_sig.mli", 31, 1671, 1677), ("odoc_sig.mli", 31, 1671, 1728), 0), 0, Tag1 ("Odoc_sig", 4)), 0); (("search_extension", 981), ((Tag1 (0, (Tag3 ((("tab", 978)), 0, (0)), 100000000, 0, -49), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -48), (Tag3 (Tag1 ((Tag2 ("Types")), "extension_constructor"), 0, (0)), 100000000, 0, -47), 0), 100000000, 0, -46), 0), 100000000, 0, -45), 0, (("odoc_sig.mli", 36, 1900, 1906), ("odoc_sig.mli", 36, 1900, 1973), 0), 0, Tag1 ("Odoc_sig", 5)), 0); (("search_type", 982), ((Tag1 (0, (Tag3 ((("tab", 978)), 0, (0)), 100000000, 0, -44), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -43), (Tag3 (Tag1 ((Tag2 ("Types")), "type_declaration"), 0, (0)), 100000000, 0, -42), 0), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("odoc_sig.mli", 41, 2136, 2142), ("odoc_sig.mli", 41, 2136, 2199), 0), 0, Tag1 ("Odoc_sig", 6)), 0); (("search_class", 983), ((Tag1 (0, (Tag3 ((("tab", 978)), 0, (0)), 100000000, 0, -39), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -38), (Tag3 (Tag1 ((Tag2 ("Types")), "class_declaration"), 0, (0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("odoc_sig.mli", 46, 2364, 2370), ("odoc_sig.mli", 46, 2364, 2429), 0), 0, Tag1 ("Odoc_sig", 7)), 0); (("search_class_type", 984), ((Tag1 (0, (Tag3 ((("tab", 978)), 0, (0)), 100000000, 0, -34), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -33), (Tag3 (Tag1 ((Tag2 ("Types")), "class_type_declaration"), 0, (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("odoc_sig.mli", 51, 2604, 2610), ("odoc_sig.mli", 51, 2604, 2679), 0), 0, Tag1 ("Odoc_sig", 8)), 0); (("search_module", 985), ((Tag1 (0, (Tag3 ((("tab", 978)), 0, (0)), 100000000, 0, -29), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -28), (Tag3 (Tag1 ((Tag2 ("Types")), "module_type"), 0, (0)), 100000000, 0, -27), 0), 100000000, 0, -26), 0), 100000000, 0, -25), 0, (("odoc_sig.mli", 56, 2839, 2845), ("odoc_sig.mli", 56, 2839, 2899), 0), 0, Tag1 ("Odoc_sig", 9)), 0); (("search_module_type", 986), ((Tag1 (0, (Tag3 ((("tab", 978)), 0, (0)), 100000000, 0, -24), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -23), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Types")), "module_type"), 0, (0)), 100000000, 0, -22)], (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("odoc_sig.mli", 61, 3073, 3079), ("odoc_sig.mli", 61, 3073, 3145), 0), 0, Tag1 ("Odoc_sig", 10)), 0); (("search_attribute_type", 987), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Types")), "Vars"), "key"), 0, (0)), 100000000, 0, -18), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "class_signature"), 0, (0)), 100000000, 0, -17), (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("odoc_sig.mli", 66, 3300, 3306), ("odoc_sig.mli", 67, 3334, 3402), 0), 0, Tag1 ("Odoc_sig", 11)), 0); (("search_method_type", 988), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "class_signature"), 0, (0)), 100000000, 0, -12), (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("odoc_sig.mli", 72, 3557, 3563), ("odoc_sig.mli", 73, 3588, 3648), 0), 0, Tag1 ("Odoc_sig", 12)), 0)]), 0, (("odoc_sig.mli", 19, 1253, 1253), ("odoc_sig.mli", 74, 3649, 3656), 0), Tag1 ("Odoc_sig", 13)), 0, 0); Tag4 (("Info_retriever", 974), ((Tag1 ([(("all_special", 989), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -101), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -100), (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -97); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -99)], (0)), 100000000, 0, -98)]), 100000000, 0, -96), 0), 100000000, 0, -95), 0), 100000000, 0, -94), 0, (("odoc_sig.mli", 82, 3941, 3945), ("odoc_sig.mli", 83, 3963, 4017), 0), 0, Tag1 ("Odoc_sig", 14)), 0); (("blank_line_outside_simple", 990), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -93), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -92), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -91), 0), 100000000, 0, -90), 0), 100000000, 0, -89), 0, (("odoc_sig.mli", 86, 4085, 4089), ("odoc_sig.mli", 87, 4121, 4153), 0), 0, Tag1 ("Odoc_sig", 15)), 0); (("just_after_special", 991), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -88), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -87), (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -84); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -86)], (0)), 100000000, 0, -85)]), 100000000, 0, -83), 0), 100000000, 0, -82), 0), 100000000, 0, -81), 0, (("odoc_sig.mli", 93, 4449, 4453), ("odoc_sig.mli", 94, 4478, 4536), 0), 0, Tag1 ("Odoc_sig", 16)), 0); (("first_special", 992), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -80), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -79), (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -76); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -78)], (0)), 100000000, 0, -77)]), 100000000, 0, -75), 0), 100000000, 0, -74), 0), 100000000, 0, -73), 0, (("odoc_sig.mli", 100, 4796, 4800), ("odoc_sig.mli", 101, 4820, 4878), 0), 0, Tag1 ("Odoc_sig", 17)), 0); (("get_comments", 993), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -72), ((("a")), 100000000, 0, -68), 0), 100000000, 0, -71), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -70), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -69), (Tag2 ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -66)], (0)), 100000000, 0, -65); (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -68)], (0)), 100000000, 0, -67)]), 100000000, 0, -64), 0), 100000000, 0, -63), 0), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("odoc_sig.mli", 107, 5187, 5191), ("odoc_sig.mli", 108, 5210, 5299), 0), 0, Tag1 ("Odoc_sig", 18)), 0)])), 0, (("odoc_sig.mli", 77, 3729, 3729), ("odoc_sig.mli", 110, 5301, 5306), 0), Tag1 ("Odoc_sig", 19)), 0); (("analyze_alerts", 975), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -8)], (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attributes"), 0, (0)), 100000000, 0, -6), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -5)], (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("odoc_sig.mli", 112, 5308, 5308), ("odoc_sig.mli", 113, 5329, 5403), 0), 0, Tag1 ("Odoc_sig", 22)), 0); Tag3 (("Analyser", 976), 0, (Tag2 ((0, ((("Info_retriever", 974)))), Tag1 ([(("file", 994), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -233)], (0)), 100000000, 0, -232), 0, (("odoc_sig.mli", 121, 5664, 5670), ("odoc_sig.mli", 121, 5664, 5691), 0), 0, Tag1 ("Odoc_sig", 23)), 0); (("file_name", 995), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -231)], (0)), 100000000, 0, -230), 0, (("odoc_sig.mli", 124, 5737, 5743), ("odoc_sig.mli", 124, 5737, 5769), 0), 0, Tag1 ("Odoc_sig", 24)), 0); (("get_string_of_file", 996), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -229), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -228), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -227), 0), 100000000, 0, -226), 0), 100000000, 0, -225), 0, (("odoc_sig.mli", 129, 6012, 6018), ("odoc_sig.mli", 129, 6012, 6063), 0), 0, Tag1 ("Odoc_sig", 25)), 0); (("prepare_file", 997), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -224), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -223), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -222), 0), 100000000, 0, -221), 0), 100000000, 0, -220), 0, (("odoc_sig.mli", 133, 6179, 6185), ("odoc_sig.mli", 133, 6179, 6228), 0), 0, Tag1 ("Odoc_sig", 26)), 0); (("preamble", 998), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -219), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -218), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -215), (Tag3 (Tag1 ((Tag2 ("Location")), "t"), 0, (0)), 100000000, 0, -217), 0), 100000000, 0, -216), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -215)], (0)), 100000000, 0, -214), (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -211); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -213)], (0)), 100000000, 0, -212)]), 100000000, 0, -210), 0), 100000000, 0, -209), 0), 100000000, 0, -208), 0), 100000000, 0, -207), 0), 100000000, 0, -206), 0, (("odoc_sig.mli", 141, 6593, 6599), ("odoc_sig.mli", 142, 6663, 6702), 0), 0, Tag1 ("Odoc_sig", 27)), 0); (("get_comments_in_class", 999), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -205), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -204), (Tag2 ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -201)], (0)), 100000000, 0, -200); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Odoc_class")), "class_element"), 0, (0)), 100000000, 0, -203)], (0)), 100000000, 0, -202)]), 100000000, 0, -199), 0), 100000000, 0, -198), 0), 100000000, 0, -197), 0, (("odoc_sig.mli", 145, 6767, 6773), ("odoc_sig.mli", 146, 6815, 6879), 0), 0, Tag1 ("Odoc_sig", 28)), 0); (("get_comments_in_module", 1000), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -196), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -195), (Tag2 ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -192)], (0)), 100000000, 0, -191); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Odoc_module")), "module_element"), 0, (0)), 100000000, 0, -194)], (0)), 100000000, 0, -193)]), 100000000, 0, -190), 0), 100000000, 0, -189), 0), 100000000, 0, -188), 0, (("odoc_sig.mli", 149, 6945, 6951), ("odoc_sig.mli", 150, 6994, 7060), 0), 0, Tag1 ("Odoc_sig", 29)), 0); (("name_comment_from_type_decl", 1001), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -187), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -186), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "type_declaration"), 0, (0)), 100000000, 0, -185), (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -179); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -182); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -184)], (0)), 100000000, 0, -183)]), 100000000, 0, -181)], (0)), 100000000, 0, -180)]), 100000000, 0, -178), 0), 100000000, 0, -177), 0), 100000000, 0, -176), 0), 100000000, 0, -175), 0, (("odoc_sig.mli", 159, 7553, 7559), ("odoc_sig.mli", 160, 7593, 7691), 0), 0, Tag1 ("Odoc_sig", 30)), 0); (("manifest_structure", 1002), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Odoc_env")), "env"), 0, (0)), 100000000, 0, -174), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -171); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -173)], (0)), 100000000, 0, -172)]), 100000000, 0, -170)], (0)), 100000000, 0, -169), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -168), (Tag3 (Tag1 ((Tag2 ("Odoc_type")), "type_manifest"), 0, (0)), 100000000, 0, -167), 0), 100000000, 0, -166), 0), 100000000, 0, -165), 0), 100000000, 0, -164), 0, (("odoc_sig.mli", 164, 7868, 7874), ("odoc_sig.mli", 166, 7967, 8021), 0), 0, Tag1 ("Odoc_sig", 31)), 0); (("get_type_kind", 1003), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Odoc_env")), "env"), 0, (0)), 100000000, 0, -163), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -160); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -162)], (0)), 100000000, 0, -161)]), 100000000, 0, -159)], (0)), 100000000, 0, -158), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_decl_kind"), 0, (0)), 100000000, 0, -157), (Tag3 (Tag1 ((Tag2 ("Odoc_type")), "type_kind"), 0, (0)), 100000000, 0, -156), 0), 100000000, 0, -155), 0), 100000000, 0, -154), 0), 100000000, 0, -153), 0, (("odoc_sig.mli", 170, 8202, 8208), ("odoc_sig.mli", 172, 8296, 8351), 0), 0, Tag1 ("Odoc_sig", 32)), 0); (("get_cstr_args", 1004), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Odoc_env")), "env"), 0, (0)), 100000000, 0, -152), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -151), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Typedtree")), "constructor_arguments"), 0, (0)), 100000000, 0, -150), (Tag3 (Tag1 ((Tag2 ("Odoc_type")), "constructor_args"), 0, (0)), 100000000, 0, -149), 0), 100000000, 0, -148), 0), 100000000, 0, -147), 0), 100000000, 0, -146), 0, (("odoc_sig.mli", 177, 8563, 8569), ("odoc_sig.mli", 179, 8654, 8688), 0), 0, Tag1 ("Odoc_sig", 36)), 0); (("merge_infos", 1005), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -145)], (0)), 100000000, 0, -144), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -143)], (0)), 100000000, 0, -142), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -141)], (0)), 100000000, 0, -140), 0), 100000000, 0, -139), 0), 100000000, 0, -138), 0, (("odoc_sig.mli", 182, 8754, 8760), ("odoc_sig.mli", 184, 8840, 8874), 0), 0, Tag1 ("Odoc_sig", 37)), 0); (("analyse_module_type_kind", 1006), ((Tag1 (Tag1 ("erased"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Odoc_name")), "Map"), "t"), [(Tag8 (([("Constrained", (((Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "with_constraint"), 0, (0)), 100000000, 0, -137)], (0)), 100000000, 0, -136)))); ("Removed", (0))], (0, 100000000, 0, -135), 1, 0, 0)), 100000000, 0, -134)], (0)), 100000000, 0, -133)], (0)), 100000000, 0, -132), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Odoc_env")), "env"), 0, (0)), 100000000, 0, -131), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Odoc_name")), "t"), 0, (0)), 100000000, 0, -130), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type"), 0, (0)), 100000000, 0, -129), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "module_type"), 0, (0)), 100000000, 0, -128), (Tag3 (Tag1 ((Tag2 ("Odoc_module")), "module_type_kind"), 0, (0)), 100000000, 0, -127), 0), 100000000, 0, -126), 0), 100000000, 0, -125), 0), 100000000, 0, -124), 0), 100000000, 0, -123), 0), 100000000, 0, -122), 0, (("odoc_sig.mli", 187, 8968, 8974), ("odoc_sig.mli", 192, 9221, 9263), 0), 0, Tag1 ("Odoc_sig", 38)), 0); (("analyse_class_type_kind", 1007), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Odoc_env")), "env"), 0, (0)), 100000000, 0, -121), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Odoc_name")), "t"), 0, (0)), 100000000, 0, -120), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -119), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type"), 0, (0)), 100000000, 0, -118), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "class_type"), 0, (0)), 100000000, 0, -117), (Tag3 (Tag1 ((Tag2 ("Odoc_class")), "class_type_kind"), 0, (0)), 100000000, 0, -116), 0), 100000000, 0, -115), 0), 100000000, 0, -114), 0), 100000000, 0, -113), 0), 100000000, 0, -112), 0), 100000000, 0, -111), 0, (("odoc_sig.mli", 196, 9373, 9379), ("odoc_sig.mli", 198, 9499, 9535), 0), 0, Tag1 ("Odoc_sig", 39)), 0); (("analyse_signature", 1008), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -110), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -109), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature"), 0, (0)), 100000000, 0, -108), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "signature"), 0, (0)), 100000000, 0, -107), (Tag3 (Tag1 ((Tag2 ("Odoc_module")), "t_module"), 0, (0)), 100000000, 0, -106), 0), 100000000, 0, -105), 0), 100000000, 0, -104), 0), 100000000, 0, -103), 0), 100000000, 0, -102), 0, (("odoc_sig.mli", 205, 9891, 9897), ("odoc_sig.mli", 207, 9949, 10019), 0), 0, Tag1 ("Odoc_sig", 40)), 0)])), 0, (("odoc_sig.mli", 117, 5524, 5524), ("odoc_sig.mli", 208, 10020, 10027), 0), Tag1 ("Odoc_sig", 41)), 0, 0)], "Odoc_sig", [("Odoc_sig", ("\171\150D8ta,\180\142)\213\225%\162\007\174")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Typedtree", ("c5z\186\175w\146\254\018V\184\031\0038\004\227")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Subst", ("\021\031\148\223\127\186\189\135\027}\145r\216\143\177\156")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Odoc_value", ("[\228\023\254\173\230\165o\154\026\024\245\180\229\015;")); ("Odoc_types", ("<k{\137\201\170z%E\221\170\147\151\127\189\015")); ("Odoc_type", ("\236\128j}\240\188\1487q\214\192oj\158\133\170")); ("Odoc_parameter", ("\194t\209\014\154<\178\\\138k\221\183w\133L\167")); ("Odoc_name", ("\248'\1872Z\r\160\146\012'\180V\240\1577f")); ("Odoc_module", ("\0308Mi\132b\017\187 \129\239\006Z#b\225")); ("Odoc_extension", ("HQjI\247\201\206b\193\166\171\167!I\191\198")); ("Odoc_exception", ("\229\177~\170m:\200\2180e\002\1504\rj\160")); ("Odoc_env", ("\163\211\226>[x0.\210\007\156\002]\148+\253")); ("Odoc_class", ("uO\148\216(=\149\159\134h\191\t\168o\245Q")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Load_path", ("\012@\228l\230\164S\172h\1726X\020\252o}")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("Env", ("\021\n\181\142x\b\169j\227\"\017\248*\178\245\223")); ("Cmi_format", ("6\177\bU\139\"\023\152=\249\135\174\b\011Cg")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216"))], [(0)])

    end
