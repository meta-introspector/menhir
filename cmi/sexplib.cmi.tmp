module Conv = Sexplib__Conv
module Conv_error = Sexplib__Conv_error
module Exn_magic = Sexplib__Exn_magic
module Lexer = Sexplib__Lexer
module Parser = Sexplib__Parser
module Parser_with_layout = Sexplib__Parser_with_layout
module Path = Sexplib__Path
module Pre_sexp = Sexplib__Pre_sexp
module Sexp = Sexplib__Sexp
module Sexp_grammar = Sexplib__Sexp_grammar
module Sexp_grammar_intf = Sexplib__Sexp_grammar_intf
module Sexp_intf = Sexplib__Sexp_intf
module Sexp_with_layout = Sexplib__Sexp_with_layout
module Src_pos = Sexplib__Src_pos
module Std = Sexplib__Std
module Type = Sexplib__Type
("DEBUG:rule", [Tag3 (("Conv", 21), 1, (Tag3 ((Tag2 ("Sexplib__Conv"))), 0, (("src/sexplib.ml-gen", 4, 56, 56), ("src/sexplib.ml-gen", 4, 56, 83), 0), Tag1 ("Sexplib", 0)), 0, 0); Tag3 (("Conv_error", 22), 1, (Tag3 ((Tag2 ("Sexplib__Conv_error"))), 0, (("src/sexplib.ml-gen", 7, 122, 122), ("src/sexplib.ml-gen", 7, 122, 161), 0), Tag1 ("Sexplib", 1)), 0, 0); Tag3 (("Exn_magic", 23), 1, (Tag3 ((Tag2 ("Sexplib__Exn_magic"))), 0, (("src/sexplib.ml-gen", 10, 199, 199), ("src/sexplib.ml-gen", 10, 199, 236), 0), Tag1 ("Sexplib", 2)), 0, 0); Tag3 (("Lexer", 24), 1, (Tag3 ((Tag2 ("Sexplib__Lexer"))), 0, (("src/sexplib.ml-gen", 13, 270, 270), ("src/sexplib.ml-gen", 13, 270, 299), 0), Tag1 ("Sexplib", 3)), 0, 0); Tag3 (("Parser", 25), 1, (Tag3 ((Tag2 ("Sexplib__Parser"))), 0, (("src/sexplib.ml-gen", 16, 334, 334), ("src/sexplib.ml-gen", 16, 334, 365), 0), Tag1 ("Sexplib", 4)), 0, 0); Tag3 (("Parser_with_layout", 26), 1, (Tag3 ((Tag2 ("Sexplib__Parser_with_layout"))), 0, (("src/sexplib.ml-gen", 19, 412, 412), ("src/sexplib.ml-gen", 19, 412, 467), 0), Tag1 ("Sexplib", 5)), 0, 0); Tag3 (("Path", 27), 1, (Tag3 ((Tag2 ("Sexplib__Path"))), 0, (("src/sexplib.ml-gen", 22, 500, 500), ("src/sexplib.ml-gen", 22, 500, 527), 0), Tag1 ("Sexplib", 6)), 0, 0); Tag3 (("Pre_sexp", 28), 1, (Tag3 ((Tag2 ("Sexplib__Pre_sexp"))), 0, (("src/sexplib.ml-gen", 25, 564, 564), ("src/sexplib.ml-gen", 25, 564, 599), 0), Tag1 ("Sexplib", 7)), 0, 0); Tag3 (("Sexp", 29), 1, (Tag3 ((Tag2 ("Sexplib__Sexp"))), 0, (("src/sexplib.ml-gen", 28, 632, 632), ("src/sexplib.ml-gen", 28, 632, 659), 0), Tag1 ("Sexplib", 8)), 0, 0); Tag3 (("Sexp_grammar", 30), 1, (Tag3 ((Tag2 ("Sexplib__Sexp_grammar"))), 0, (("src/sexplib.ml-gen", 31, 700, 700), ("src/sexplib.ml-gen", 31, 700, 743), 0), Tag1 ("Sexplib", 9)), 0, 0); Tag3 (("Sexp_grammar_intf", 31), 1, (Tag3 ((Tag2 ("Sexplib__Sexp_grammar_intf"))), 0, (("src/sexplib.ml-gen", 34, 789, 789), ("src/sexplib.ml-gen", 34, 789, 842), 0), Tag1 ("Sexplib", 10)), 0, 0); Tag3 (("Sexp_intf", 32), 1, (Tag3 ((Tag2 ("Sexplib__Sexp_intf"))), 0, (("src/sexplib.ml-gen", 37, 880, 880), ("src/sexplib.ml-gen", 37, 880, 917), 0), Tag1 ("Sexplib", 11)), 0, 0); Tag3 (("Sexp_with_layout", 33), 1, (Tag3 ((Tag2 ("Sexplib__Sexp_with_layout"))), 0, (("src/sexplib.ml-gen", 40, 962, 962), ("src/sexplib.ml-gen", 40, 962, 1013), 0), Tag1 ("Sexplib", 12)), 0, 0); Tag3 (("Src_pos", 34), 1, (Tag3 ((Tag2 ("Sexplib__Src_pos"))), 0, (("src/sexplib.ml-gen", 43, 1049, 1049), ("src/sexplib.ml-gen", 43, 1049, 1082), 0), Tag1 ("Sexplib", 13)), 0, 0); Tag3 (("Std", 35), 1, (Tag3 ((Tag2 ("Sexplib__Std"))), 0, (("src/sexplib.ml-gen", 46, 1114, 1114), ("src/sexplib.ml-gen", 46, 1114, 1139), 0), Tag1 ("Sexplib", 14)), 0, 0); Tag3 (("Type", 36), 1, (Tag3 ((Tag2 ("Sexplib__Type"))), 0, (("src/sexplib.ml-gen", 49, 1172, 1172), ("src/sexplib.ml-gen", 49, 1172, 1199), 0), Tag1 ("Sexplib", 15)), 0, 0); Tag3 (("Type_with_layout", 37), 1, (Tag3 ((Tag2 ("Sexplib__Type_with_layout"))), 0, (("src/sexplib.ml-gen", 52, 1244, 1244), ("src/sexplib.ml-gen", 52, 1244, 1295), 0), Tag1 ("Sexplib", 16)), 0, 0)], "Sexplib", [("Sexplib", ("\249\031\145\178\014\020\n\209\129\143\012\015<K\177\189")); ["Sexplib__Type_with_layout"]; ["Sexplib__Type"]; ["Sexplib__Std"]; ["Sexplib__Src_pos"]; ["Sexplib__Sexp_with_layout"]; ["Sexplib__Sexp_intf"]; ["Sexplib__Sexp_grammar_intf"]; ["Sexplib__Sexp_grammar"]; ["Sexplib__Sexp"]; ["Sexplib__Pre_sexp"]; ["Sexplib__Path"]; ["Sexplib__Parser_with_layout"]; ["Sexplib__Parser"]; ["Sexplib__Lexer"]; ["Sexplib__Exn_magic"]; ["Sexplib__Conv_error"]; ["Sexplib__Conv"]], [(0)])
module Type_with_layout = Sexplib__Type_with_layout
