module For_cst :
  sig
    type t =
        Empty
      | T_or_comment of Parsexp__.Cst.t_or_comment * t
      | Open of Parsexp__.Positions.pos * t
      | In_sexp_comment of { hash_semi_pos : Parsexp__.Positions.pos;
          rev_comments : Parsexp__.Cst.comment list; stack : t;
        }
    val empty : t
    val get_many : t -> Parsexp__.Cst.t_or_comment list
  end
module Just_positions : sig type t = unit val empty : t end
type t = Empty | Open of t | Sexp of Parsexp__.Import.Sexp.t * t
val empty : t
val get_single : t -> Parsexp__.Import.Sexp.t
("DEBUG:rule", [Tag3 (("For_cst", 314), 0, (Tag1 ([Tag1 (("t", 320), (0, 0, Tag1 ([(("Empty", 368), (0), 0, (("src/automaton_stack_intf.ml", 11, 390, 396), ("src/automaton_stack_intf.ml", 11, 390, 403), 0), 0, Tag1 ("Parsexp__Automaton_stack_intf", 1)); (("T_or_comment", 369), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Cst"), "t_or_comment"), 0, (0)), 100000000, 0, -18); (Tag3 ((("t", 320)), 0, (0)), 100000000, 0, -19)]), 0, (("src/automaton_stack_intf.ml", 12, 424, 430), ("src/automaton_stack_intf.ml", 12, 424, 468), 0), 0, Tag1 ("Parsexp__Automaton_stack_intf", 6)); (("Open", 380), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -20); (Tag3 ((("t", 320)), 0, (0)), 100000000, 0, -21)]), 0, (("src/automaton_stack_intf.ml", 13, 508, 514), ("src/automaton_stack_intf.ml", 13, 508, 541), 0), 0, Tag1 ("Parsexp__Automaton_stack_intf", 7)); (("In_sexp_comment", 401), Tag1 ([(("hash_semi_pos", 402), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -22), (("src/automaton_stack_intf.ml", 15, 600, 612), ("src/automaton_stack_intf.ml", 16, 642, 653), 0), 0, Tag1 ("Parsexp__Automaton_stack_intf", 8)); (("rev_comments", 403), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Cst"), "comment"), 0, (0)), 100000000, 0, -24)], (0)), 100000000, 0, -23), (("src/automaton_stack_intf.ml", 16, 642, 654), ("src/automaton_stack_intf.ml", 17, 686, 697), 0), 0, Tag1 ("Parsexp__Automaton_stack_intf", 9)); (("stack", 404), 0, (Tag3 ((("t", 320)), 0, (0)), 100000000, 0, -25), (("src/automaton_stack_intf.ml", 17, 686, 698), ("src/automaton_stack_intf.ml", 17, 686, 707), 0), 0, Tag1 ("Parsexp__Automaton_stack_intf", 10))]), 0, (("src/automaton_stack_intf.ml", 14, 573, 579), ("src/automaton_stack_intf.ml", 18, 708, 719), 0), 0, Tag1 ("Parsexp__Automaton_stack_intf", 11))], 0), 1, 0, 0, 0, 0, 0, (("src/automaton_stack_intf.ml", 10, 377, 381), ("src/automaton_stack_intf.ml", 18, 708, 719), 0), 0, 0, 0, Tag1 ("Parsexp__Automaton_stack_intf", 0)), 1, 0); (("empty", 321), ((Tag3 ((("t", 320)), 0, (0)), 100000000, 0, -17), 0, (("src/automaton_stack_intf.ml", 23, 952, 956), ("src/automaton_stack_intf.ml", 23, 952, 969), 0), 0, Tag1 ("Parsexp__Automaton_stack_intf", 21)), 0); (("get_many", 322), ((Tag1 (0, (Tag3 ((("t", 320)), 0, (0)), 100000000, 0, -16), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Cst"), "t_or_comment"), 0, (0)), 100000000, 0, -15)], (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("src/automaton_stack_intf.ml", 26, 1021, 1025), ("src/automaton_stack_intf.ml", 26, 1021, 1066), 0), 0, Tag1 ("Parsexp__Automaton_stack_intf", 22)), 0)]), 0, (("src/automaton_stack_intf.ml", 9, 354, 356), ("src/automaton_stack_intf.ml", 27, 1067, 1072), 0), Tag1 ("Parsexp__Automaton_stack_intf", 23)), 0, 0); Tag3 (("Just_positions", 315), 0, (Tag1 ([Tag1 (("t", 323), (0, 0, 0, 1, ((Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -27)), 0, 0, 0, 0, (("src/automaton_stack_intf.ml", 31, 1157, 1161), ("src/automaton_stack_intf.ml", 31, 1157, 1174), 0), 0, 1, 0, Tag1 ("Parsexp__Automaton_stack_intf", 24)), 1, 0); (("empty", 324), ((Tag3 ((("t", 323)), 0, (0)), 100000000, 0, -26), 0, (("src/automaton_stack_intf.ml", 33, 1176, 1180), ("src/automaton_stack_intf.ml", 33, 1176, 1193), 0), 0, Tag1 ("Parsexp__Automaton_stack_intf", 25)), 0)]), 0, (("src/automaton_stack_intf.ml", 30, 1127, 1129), ("src/automaton_stack_intf.ml", 34, 1194, 1199), 0), Tag1 ("Parsexp__Automaton_stack_intf", 26)), 0, 0); Tag1 (("t", 316), (0, 0, Tag1 ([(("Empty", 442), (0), 0, (("src/automaton_stack_intf.ml", 37, 1212, 1216), ("src/automaton_stack_intf.ml", 37, 1212, 1223), 0), 0, Tag1 ("Parsexp__Automaton_stack_intf", 28)); (("Open", 443), ([(Tag3 ((("t", 316)), 0, (0)), 100000000, 0, -10)]), 0, (("src/automaton_stack_intf.ml", 38, 1224, 1228), ("src/automaton_stack_intf.ml", 38, 1224, 1239), 0), 0, Tag1 ("Parsexp__Automaton_stack_intf", 29)); (("Sexp", 444), ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -11); (Tag3 ((("t", 316)), 0, (0)), 100000000, 0, -12)]), 0, (("src/automaton_stack_intf.ml", 39, 1240, 1244), ("src/automaton_stack_intf.ml", 39, 1240, 1264), 0), 0, Tag1 ("Parsexp__Automaton_stack_intf", 30))], 0), 1, 0, 0, 0, 0, 0, (("src/automaton_stack_intf.ml", 36, 1201, 1203), ("src/automaton_stack_intf.ml", 39, 1240, 1264), 0), 0, 0, 0, Tag1 ("Parsexp__Automaton_stack_intf", 27)), 1, 0); (("empty", 317), ((Tag3 ((("t", 316)), 0, (0)), 100000000, 0, -9), 0, (("src/automaton_stack_intf.ml", 41, 1266, 1268), ("src/automaton_stack_intf.ml", 41, 1266, 1281), 0), 0, Tag1 ("Parsexp__Automaton_stack_intf", 31)), 0); (("get_single", 318), ((Tag1 (0, (Tag3 ((("t", 316)), 0, (0)), 100000000, 0, -8), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -7), 0), 100000000, 0, -6), 0, (("src/automaton_stack_intf.ml", 44, 1340, 1342), ("src/automaton_stack_intf.ml", 44, 1340, 1370), 0), 0, Tag1 ("Parsexp__Automaton_stack_intf", 32)), 0); (("get_many", 319), ((Tag1 (0, (Tag3 ((("t", 316)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -4)], (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/automaton_stack_intf.ml", 47, 1420, 1422), ("src/automaton_stack_intf.ml", 47, 1420, 1453), 0), 0, Tag1 ("Parsexp__Automaton_stack_intf", 33)), 0)], "Parsexp__Automaton_stack", [("Parsexp__Automaton_stack", ("\246/\135\251\031)\015r\003\237\254S$\181\243\201")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("Parsexp__Positions", ("BE\135\222xW\224\233\184\004o\169\248\bH\230")); ("Parsexp__Import", ("\017\029\157\225\239\135p*0\207\146\197\020\128\195!")); ("Parsexp__Cst", (")\228;6o~\227\000pRf\153\216\244sD")); ("Parsexp__Automaton_stack_intf", ("\235\204\0296]\2449F\029\b:\006\217\162f\024")); ("Parsexp__", ("\182\180\203\030\218\020\246\196\221\171_\030GE\171\192")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val get_many : t -> Parsexp__.Import.Sexp.t list
