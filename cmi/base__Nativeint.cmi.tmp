type t = nativeint
val globalize : t -> t
val t_sexp_grammar : t Sexplib0.Sexp_grammar.t
val of_float : float -> t
val to_float : t -> float
val of_int_exn : int -> t
val to_int_exn : t -> int
val hash_fold_t : t Base__Ppx_hash_lib.hash_fold
val hash : t -> Base__Ppx_hash_lib.Std.Hash.hash_value
val t_of_sexp : Sexplib0__.Sexp.t -> t
val sexp_of_t : t -> Sexplib0__.Sexp.t
val of_string : string -> t
val to_string : t -> string
val ( >= ) : t -> t -> bool
val ( <= ) : t -> t -> bool
val ( = ) : t -> t -> bool
val ( > ) : t -> t -> bool
val ( < ) : t -> t -> bool
val ( <> ) : t -> t -> bool
val equal : t -> t -> bool
val compare : t -> t -> int
val min : t -> t -> t
val max : t -> t -> t
val ascending : t -> t -> int
val descending : t -> t -> int
val between : t -> low:t -> high:t -> bool
val clamp_exn : t -> min:t -> max:t -> t
val clamp : t -> min:t -> max:t -> t Base__.Or_error.t
type comparator_witness
val comparator : (t, comparator_witness) Base__Comparator.comparator
val pp : Base__.Formatter.t -> t -> unit
val hashable : t Base__.Hashable.t
val is_positive : t -> bool
val is_non_negative : t -> bool
val is_negative : t -> bool
val is_non_positive : t -> bool
val sign : t -> Base__Comparable_intf.Sign.t
val invariant : t Base__Invariant_intf.inv
module Hex :
  sig
    type nonrec t = t
    val t_of_sexp : Sexplib0__.Sexp.t -> t
    val sexp_of_t : t -> Sexplib0__.Sexp.t
    val t_sexp_grammar : t Sexplib0.Sexp_grammar.t
    val compare : t Base__Ppx_compare_lib.compare
    val hash_fold_t : t Base__Ppx_hash_lib.hash_fold
    val hash : t -> Base__Ppx_hash_lib.Std.Hash.hash_value
    val of_string : string -> t
    val to_string : t -> string
    val to_string_hum : ?delimiter:char -> t -> string
  end
val of_string_opt : string -> t option
val to_string_hum : ?delimiter:char -> t -> string
val zero : t
val one : t
val minus_one : t
val ( + ) : t -> t -> t
val ( - ) : t -> t -> t
val ( * ) : t -> t -> t
val ( ** ) : t -> t -> t
val neg : t -> t
val ( ~- ) : t -> t
val ( /% ) : t -> t -> t
val ( % ) : t -> t -> t
val ( / ) : t -> t -> t
val rem : t -> t -> t
val ( // ) : t -> t -> float
val ( land ) : t -> t -> t
val ( lor ) : t -> t -> t
val ( lxor ) : t -> t -> t
val lnot : t -> t
val ( lsl ) : t -> int -> t
val ( asr ) : t -> int -> t
val round :
  ?dir:[ `Down | `Nearest | `Up | `Zero ] -> t -> to_multiple_of:t -> t
val round_towards_zero : t -> to_multiple_of:t -> t
val round_down : t -> to_multiple_of:t -> t
val round_up : t -> to_multiple_of:t -> t
val round_nearest : t -> to_multiple_of:t -> t
val abs : t -> t
val succ : t -> t
val pred : t -> t
val pow : t -> t -> t
val bit_and : t -> t -> t
val bit_or : t -> t -> t
val bit_xor : t -> t -> t
val bit_not : t -> t
val popcount : t -> int
val shift_left : t -> int -> t
val shift_right : t -> int -> t
val decr : t Base__.Import.ref -> unit
val incr : t Base__.Import.ref -> unit
val of_int32_exn : int32 -> t
val to_int32_exn : t -> int32
val of_int64_exn : int64 -> t
val to_int64 : t -> int64
val of_nativeint_exn : nativeint -> t
val to_nativeint_exn : t -> nativeint
val of_float_unchecked : float -> t
val num_bits : int
val max_value : t
val min_value : t
val ( lsr ) : t -> int -> t
val shift_right_logical : t -> int -> t
val ceil_pow2 : t -> t
val floor_pow2 : t -> t
val ceil_log2 : t -> int
val floor_log2 : t -> int
val is_pow2 : t -> bool
val clz : t -> int
val ctz : t -> int
module O :
  sig
    val ( + ) : t -> t -> t
    val ( - ) : t -> t -> t
    val ( * ) : t -> t -> t
    val ( / ) : t -> t -> t
    val ( ~- ) : t -> t
    val ( ** ) : t -> t -> t
    val ( >= ) : t -> t -> bool
    val ( <= ) : t -> t -> bool
    val ( = ) : t -> t -> bool
    val ( > ) : t -> t -> bool
    val ( < ) : t -> t -> bool
    val ( <> ) : t -> t -> bool
    val abs : t -> t
    val neg : t -> t
    val zero : t
    val ( % ) : t -> t -> t
    val ( /% ) : t -> t -> t
    val ( // ) : t -> t -> float
    val ( land ) : t -> t -> t
    val ( lor ) : t -> t -> t
    val ( lxor ) : t -> t -> t
    val lnot : t -> t
    val ( lsl ) : t -> int -> t
    val ( asr ) : t -> int -> t
    val ( lsr ) : t -> int -> t
  end
val of_int : int -> t
val to_int : t -> int option
val of_int32 : int32 -> t
val to_int32 : t -> int32 option
val of_nativeint : nativeint -> t
val to_nativeint : t -> nativeint
val of_int64 : int64 -> t option
val to_int_trunc : t -> int
val to_int32_trunc : t -> int32
val of_int64_trunc : int64 -> t("DEBUG:rule", [Tag1 (("t", 2106), (0, 0, 0, 1, ((Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -410)), 0, 0, 0, 0, (("src/nativeint.mli", 5, 49, 49), ("src/nativeint.mli", 5, 49, 97), 0), [(("deriving_inline", (("src/nativeint.mli", 5, 49, 71), ("src/nativeint.mli", 5, 49, 86), 0)), ([([(((("globalize"), (("src/nativeint.mli", 5, 49, 87), ("src/nativeint.mli", 5, 49, 96), 0))), (("src/nativeint.mli", 5, 49, 87), ("src/nativeint.mli", 5, 49, 96), 0), 0, 0)], (("src/nativeint.mli", 5, 49, 87), ("src/nativeint.mli", 5, 49, 96), 0))]), (("src/nativeint.mli", 5, 49, 68), ("src/nativeint.mli", 5, 49, 97), 0))], 0, 0, Tag1 ("Base__Nativeint", 0)), 1, 0); (("globalize", 2107), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -409), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -408), 0), 100000000, 0, -407), 0, (("src/nativeint.mli", 7, 99, 99), ("src/nativeint.mli", 7, 99, 137), 0), 0, Tag1 ("Base__Nativeint", 1)), 0); (("t_sexp_grammar", 2108), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [(Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -406)], (0)), 100000000, 0, -405), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 20)), 0); (("of_float", 2109), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -404), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -403), 0), 100000000, 0, -402), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Floatable", 1)), 0); (("to_float", 2110), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -401), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -400), 0), 100000000, 0, -399), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Floatable", 2)), 0); (("of_int_exn", 2111), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -398), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -397), 0), 100000000, 0, -396), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Intable", 1)), 0); (("to_int_exn", 2112), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -395), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -394), 0), 100000000, 0, -393), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Intable", 2)), 0); (("hash_fold_t", 2113), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "hash_fold"), [(Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -392)], (0)), 100000000, 0, -391), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Ppx_hash_lib", 4)), 0); (("hash", 2114), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -390), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "Std"), "Hash"), "hash_value"), 0, (0)), 100000000, 0, -389), 0), 100000000, 0, -388), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Ppx_hash_lib", 5)), 0); (("t_of_sexp", 2115), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -387), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -386), 0), 100000000, 0, -385), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Sexplib0__Sexpable", 1)), 0); (("sexp_of_t", 2116), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -384), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -383), 0), 100000000, 0, -382), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Sexplib0__Sexpable", 2)), 0); (("of_string", 2117), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -381), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -380), 0), 100000000, 0, -379), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Stringable", 1)), 0); (("to_string", 2118), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -378), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -377), 0), 100000000, 0, -376), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Stringable", 2)), 0); ((">=", 2119), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -375), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -374), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -373), 0), 100000000, 0, -372), 0), 100000000, 0, -371), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparisons", 1)), 0); (("<=", 2120), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -370), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -369), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -368), 0), 100000000, 0, -367), 0), 100000000, 0, -366), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparisons", 2)), 0); (("=", 2121), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -365), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -364), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -363), 0), 100000000, 0, -362), 0), 100000000, 0, -361), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparisons", 3)), 0); ((">", 2122), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -360), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -359), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -358), 0), 100000000, 0, -357), 0), 100000000, 0, -356), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparisons", 4)), 0); (("<", 2123), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -355), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -354), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -353), 0), 100000000, 0, -352), 0), 100000000, 0, -351), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparisons", 5)), 0); (("<>", 2124), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -350), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -349), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -348), 0), 100000000, 0, -347), 0), 100000000, 0, -346), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparisons", 6)), 0); (("equal", 2125), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -345), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -344), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -343), 0), 100000000, 0, -342), 0), 100000000, 0, -341), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparisons", 8)), 0); (("compare", 2126), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -340), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -339), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -338), 0), 100000000, 0, -337), 0), 100000000, 0, -336), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparisons", 9)), 0); (("min", 2127), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -335), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -334), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -333), 0), 100000000, 0, -332), 0), 100000000, 0, -331), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparisons", 10)), 0); (("max", 2128), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -330), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -329), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -328), 0), 100000000, 0, -327), 0), 100000000, 0, -326), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparisons", 11)), 0); (("ascending", 2129), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -325), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -324), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -323), 0), 100000000, 0, -322), 0), 100000000, 0, -321), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparable_intf", 19)), 0); (("descending", 2130), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -320), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -319), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -318), 0), 100000000, 0, -317), 0), 100000000, 0, -316), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparable_intf", 20)), 0); (("between", 2131), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -315), (Tag1 (("low"), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -314), (Tag1 (("high"), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -313), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -312), 0), 100000000, 0, -311), 0), 100000000, 0, -310), 0), 100000000, 0, -309), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparable_intf", 21)), 0); (("clamp_exn", 2132), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -308), (Tag1 (("min"), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -307), (Tag1 (("max"), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -306), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -305), 0), 100000000, 0, -304), 0), 100000000, 0, -303), 0), 100000000, 0, -302), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparable_intf", 22)), 0); (("clamp", 2133), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -301), (Tag1 (("min"), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -300), (Tag1 (("max"), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -299), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Or_error"), "t"), [(Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -298)], (0)), 100000000, 0, -297), 0), 100000000, 0, -296), 0), 100000000, 0, -295), 0), 100000000, 0, -294), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparable_intf", 23)), 0); Tag1 (("comparator_witness", 2134), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, 0, 0, Tag1 ("Base__Comparator", 5)), 1, 0); (("comparator", 2135), ((Tag3 (Tag1 ((Tag2 ("Base__Comparator")), "comparator"), [(Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -292); (Tag3 ((("comparator_witness", 2134)), 0, (0)), 100000000, 0, -293)], (0)), 100000000, 0, -291), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparator", 6)), 0); (("pp", 2136), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Formatter"), "t"), 0, (0)), 100000000, 0, -290), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -289), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -288), 0), 100000000, 0, -287), 0), 100000000, 0, -286), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Pretty_printer", 2)), 0); (("hashable", 2137), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Hashable"), "t"), [(Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -285)], (0)), 100000000, 0, -284), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Identifiable_intf", 15)), 0); (("is_positive", 2138), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -283), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -282), 0), 100000000, 0, -281), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparable_intf", 13)), 0); (("is_non_negative", 2139), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -280), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -279), 0), 100000000, 0, -278), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparable_intf", 14)), 0); (("is_negative", 2140), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -277), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -276), 0), 100000000, 0, -275), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparable_intf", 15)), 0); (("is_non_positive", 2141), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -274), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -273), 0), 100000000, 0, -272), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparable_intf", 16)), 0); (("sign", 2142), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -271), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__Comparable_intf")), "Sign"), "t"), 0, (0)), 100000000, 0, -270), 0), 100000000, 0, -269), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparable_intf", 17)), 0); (("invariant", 2143), ((Tag3 (Tag1 ((Tag2 ("Base__Invariant_intf")), "inv"), [(Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -268)], (0)), 100000000, 0, -267), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Invariant_intf", 3)), 0); Tag3 (("Hex", 2144), 0, (Tag1 ([Tag1 (("t", 2216), (0, 0, 0, 1, ((Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -438)), 0, 0, 0, 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), [(("deriving_inline", (("src/int_intf.ml", 44, 1730, 1755), ("src/int_intf.ml", 44, 1730, 1770), 0)), ([([(Tag8 ([(((("sexp"), (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1775), 0))), (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1775), 0), 0, 0); (((("sexp_grammar"), (("src/int_intf.ml", 44, 1730, 1777), ("src/int_intf.ml", 44, 1730, 1789), 0))), (("src/int_intf.ml", 44, 1730, 1777), ("src/int_intf.ml", 44, 1730, 1789), 0), 0, 0); (((("compare"), (("src/int_intf.ml", 44, 1730, 1791), ("src/int_intf.ml", 44, 1730, 1798), 0))), (("src/int_intf.ml", 44, 1730, 1791), ("src/int_intf.ml", 44, 1730, 1798), 0), 0, 0); (((("hash"), (("src/int_intf.ml", 44, 1730, 1800), ("src/int_intf.ml", 44, 1730, 1804), 0))), (("src/int_intf.ml", 44, 1730, 1800), ("src/int_intf.ml", 44, 1730, 1804), 0), 0, 0)]), (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1804), 0), 0, 0)], (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1804), 0))]), (("src/int_intf.ml", 44, 1730, 1752), ("src/int_intf.ml", 44, 1730, 1805), 0))], 0, 0, Tag1 ("Base__Int_intf", 8)), 0, 0); (("t_of_sexp", 2217), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -437), (Tag3 ((("t", 2216)), 0, (0)), 100000000, 0, -436), 0), 100000000, 0, -435), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Sexplib0__Sexpable", 1)), 0); (("sexp_of_t", 2218), ((Tag1 (0, (Tag3 ((("t", 2216)), 0, (0)), 100000000, 0, -434), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -433), 0), 100000000, 0, -432), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Sexplib0__Sexpable", 2)), 0); (("t_sexp_grammar", 2219), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [(Tag3 ((("t", 2216)), 0, (0)), 100000000, 0, -431)], (0)), 100000000, 0, -430), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 11)), 0); (("compare", 2220), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((("t", 2216)), 0, (0)), 100000000, 0, -429)], (0)), 100000000, 0, -428), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Ppx_compare_lib", 5)), 0); (("hash_fold_t", 2221), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "hash_fold"), [(Tag3 ((("t", 2216)), 0, (0)), 100000000, 0, -427)], (0)), 100000000, 0, -426), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Ppx_hash_lib", 4)), 0); (("hash", 2222), ((Tag1 (0, (Tag3 ((("t", 2216)), 0, (0)), 100000000, 0, -425), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "Std"), "Hash"), "hash_value"), 0, (0)), 100000000, 0, -424), 0), 100000000, 0, -423), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Ppx_hash_lib", 5)), 0); (("of_string", 2223), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -422), (Tag3 ((("t", 2216)), 0, (0)), 100000000, 0, -421), 0), 100000000, 0, -420), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Stringable", 1)), 0); (("to_string", 2224), ((Tag1 (0, (Tag3 ((("t", 2216)), 0, (0)), 100000000, 0, -419), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -418), 0), 100000000, 0, -417), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Stringable", 2)), 0); (("to_string_hum", 2225), ((Tag1 (Tag1 ("delimiter"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -416)], (0)), 100000000, 0, -415), (Tag1 (0, (Tag3 ((("t", 2216)), 0, (0)), 100000000, 0, -414), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -413), 0), 100000000, 0, -412), 0), 100000000, 0, -411), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 15)), 0)]), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), Tag1 ("Base__Int_intf", 16)), 0, 0); (("of_string_opt", 2145), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -266), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -265)], (0)), 100000000, 0, -264), 0), 100000000, 0, -263), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 27)), 0); (("to_string_hum", 2146), ((Tag1 (Tag1 ("delimiter"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -262)], (0)), 100000000, 0, -261), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -260), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -259), 0), 100000000, 0, -258), 0), 100000000, 0, -257), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 28)), 0); (("zero", 2147), ((Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -256), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 29)), 0); (("one", 2148), ((Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -255), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 30)), 0); (("minus_one", 2149), ((Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -254), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 31)), 0); (("+", 2150), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -253), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -252), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -251), 0), 100000000, 0, -250), 0), 100000000, 0, -249), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 32)), 0); (("-", 2151), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -248), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -247), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -246), 0), 100000000, 0, -245), 0), 100000000, 0, -244), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 33)), 0); (("*", 2152), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -243), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -242), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -241), 0), 100000000, 0, -240), 0), 100000000, 0, -239), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 34)), 0); (("**", 2153), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -238), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -237), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -236), 0), 100000000, 0, -235), 0), 100000000, 0, -234), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 35)), 0); (("neg", 2154), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -233), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -232), 0), 100000000, 0, -231), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 36)), 0); (("~-", 2155), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -230), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -229), 0), 100000000, 0, -228), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 37)), 0); (("/%", 2156), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -227), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -226), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -225), 0), 100000000, 0, -224), 0), 100000000, 0, -223), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 38)), 0); (("%", 2157), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -222), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -221), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -220), 0), 100000000, 0, -219), 0), 100000000, 0, -218), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 39)), 0); (("/", 2158), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -217), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -216), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -215), 0), 100000000, 0, -214), 0), 100000000, 0, -213), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 40)), 0); (("rem", 2159), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -212), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -211), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -210), 0), 100000000, 0, -209), 0), 100000000, 0, -208), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 41)), 0); (("//", 2160), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -207), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -206), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -205), 0), 100000000, 0, -204), 0), 100000000, 0, -203), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 42)), 0); (("land", 2161), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -202), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -201), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -200), 0), 100000000, 0, -199), 0), 100000000, 0, -198), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 43)), 0); (("lor", 2162), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -197), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -196), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -195), 0), 100000000, 0, -194), 0), 100000000, 0, -193), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 44)), 0); (("lxor", 2163), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -192), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -191), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -190), 0), 100000000, 0, -189), 0), 100000000, 0, -188), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 45)), 0); (("lnot", 2164), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -187), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -186), 0), 100000000, 0, -185), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 46)), 0); (("lsl", 2165), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -184), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -183), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -182), 0), 100000000, 0, -181), 0), 100000000, 0, -180), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 47)), 0); (("asr", 2166), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -179), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -178), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -177), 0), 100000000, 0, -176), 0), 100000000, 0, -175), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 48)), 0); (("round", 2167), ((Tag1 (Tag1 ("dir"), (Tag3 ((Tag3 ("option", 10)), [(Tag8 (([("Down", (0)); ("Nearest", (0)); ("Up", (0)); ("Zero", (0))], (0, 100000000, 0, -174), 1, 0, 0)), 100000000, 0, -173)], (0)), 100000000, 0, -172), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -171), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -170), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -169), 0), 100000000, 0, -168), 0), 100000000, 0, -167), 0), 100000000, 0, -166), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 1)), 0); (("round_towards_zero", 2168), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -165), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -164), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -163), 0), 100000000, 0, -162), 0), 100000000, 0, -161), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 2)), 0); (("round_down", 2169), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -160), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -159), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -158), 0), 100000000, 0, -157), 0), 100000000, 0, -156), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 3)), 0); (("round_up", 2170), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -155), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -154), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -153), 0), 100000000, 0, -152), 0), 100000000, 0, -151), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 4)), 0); (("round_nearest", 2171), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -150), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -149), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -148), 0), 100000000, 0, -147), 0), 100000000, 0, -146), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 5)), 0); (("abs", 2172), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -145), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -144), 0), 100000000, 0, -143), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 50)), 0); (("succ", 2173), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -142), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -141), 0), 100000000, 0, -140), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 51)), 0); (("pred", 2174), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -139), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -138), 0), 100000000, 0, -137), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 52)), 0); (("pow", 2175), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -136), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -135), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -134), 0), 100000000, 0, -133), 0), 100000000, 0, -132), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 53)), 0); (("bit_and", 2176), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -131), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -130), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -129), 0), 100000000, 0, -128), 0), 100000000, 0, -127), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 54)), 0); (("bit_or", 2177), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -126), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -125), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -124), 0), 100000000, 0, -123), 0), 100000000, 0, -122), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 55)), 0); (("bit_xor", 2178), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -121), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -120), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -119), 0), 100000000, 0, -118), 0), 100000000, 0, -117), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 56)), 0); (("bit_not", 2179), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -116), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -115), 0), 100000000, 0, -114), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 57)), 0); (("popcount", 2180), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -113), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -112), 0), 100000000, 0, -111), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 58)), 0); (("shift_left", 2181), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -110), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -109), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 59)), 0); (("shift_right", 2182), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -105), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -104), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -103), 0), 100000000, 0, -102), 0), 100000000, 0, -101), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 60)), 0); (("decr", 2183), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import"), "ref"), [(Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -100)], (0)), 100000000, 0, -99), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -98), 0), 100000000, 0, -97), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 61)), 0); (("incr", 2184), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import"), "ref"), [(Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -96)], (0)), 100000000, 0, -95), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -94), 0), 100000000, 0, -93), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 62)), 0); (("of_int32_exn", 2185), ((Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -92), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -91), 0), 100000000, 0, -90), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 63)), 0); (("to_int32_exn", 2186), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -89), (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -88), 0), 100000000, 0, -87), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 64)), 0); (("of_int64_exn", 2187), ((Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -86), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -85), 0), 100000000, 0, -84), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 65)), 0); (("to_int64", 2188), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -83), (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -82), 0), 100000000, 0, -81), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 66)), 0); (("of_nativeint_exn", 2189), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -80), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -79), 0), 100000000, 0, -78), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 67)), 0); (("to_nativeint_exn", 2190), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -77), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -76), 0), 100000000, 0, -75), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 68)), 0); (("of_float_unchecked", 2191), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -74), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -73), 0), 100000000, 0, -72), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 69)), 0); (("num_bits", 2192), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -71), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 97)), 0); (("max_value", 2193), ((Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -70), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 98)), 0); (("min_value", 2194), ((Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -69), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 99)), 0); (("lsr", 2195), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -68), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -67), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 100)), 0); (("shift_right_logical", 2196), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -63), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -62), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -61), 0), 100000000, 0, -60), 0), 100000000, 0, -59), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 101)), 0); (("ceil_pow2", 2197), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -58), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 102)), 0); (("floor_pow2", 2198), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -55), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 103)), 0); (("ceil_log2", 2199), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -52), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -51), 0), 100000000, 0, -50), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 104)), 0); (("floor_log2", 2200), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -49), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 105)), 0); (("is_pow2", 2201), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -46), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 106)), 0); (("clz", 2202), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -43), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 107)), 0); (("ctz", 2203), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -40), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 108)), 0); Tag3 (("O", 2204), 0, (Tag1 ([(("+", 2226), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -551), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -550), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -549), 0), 100000000, 0, -548), 0), 100000000, 0, -547), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 72)), 0); (("-", 2227), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -546), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -545), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -544), 0), 100000000, 0, -543), 0), 100000000, 0, -542), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 73)), 0); (("*", 2228), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -541), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -540), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -539), 0), 100000000, 0, -538), 0), 100000000, 0, -537), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 74)), 0); (("/", 2229), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -536), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -535), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -534), 0), 100000000, 0, -533), 0), 100000000, 0, -532), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 75)), 0); (("~-", 2230), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -531), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -530), 0), 100000000, 0, -529), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 76)), 0); (("**", 2231), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -528), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -527), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -526), 0), 100000000, 0, -525), 0), 100000000, 0, -524), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 77)), 0); ((">=", 2232), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -523), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -522), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -521), 0), 100000000, 0, -520), 0), 100000000, 0, -519), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparisons", 1)), 0); (("<=", 2233), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -518), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -517), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -516), 0), 100000000, 0, -515), 0), 100000000, 0, -514), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparisons", 2)), 0); (("=", 2234), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -513), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -512), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -511), 0), 100000000, 0, -510), 0), 100000000, 0, -509), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparisons", 3)), 0); ((">", 2235), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -508), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -507), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -506), 0), 100000000, 0, -505), 0), 100000000, 0, -504), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparisons", 4)), 0); (("<", 2236), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -503), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -502), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -501), 0), 100000000, 0, -500), 0), 100000000, 0, -499), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparisons", 5)), 0); (("<>", 2237), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -498), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -497), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -496), 0), 100000000, 0, -495), 0), 100000000, 0, -494), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Comparisons", 6)), 0); (("abs", 2238), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -493), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -492), 0), 100000000, 0, -491), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 79)), 0); (("neg", 2239), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -490), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -489), 0), 100000000, 0, -488), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 80)), 0); (("zero", 2240), ((Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -487), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 81)), 0); (("%", 2241), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -486), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -485), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -484), 0), 100000000, 0, -483), 0), 100000000, 0, -482), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 82)), 0); (("/%", 2242), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -481), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -480), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -479), 0), 100000000, 0, -478), 0), 100000000, 0, -477), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 83)), 0); (("//", 2243), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -476), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -475), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -474), 0), 100000000, 0, -473), 0), 100000000, 0, -472), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 84)), 0); (("land", 2244), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -471), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -470), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -469), 0), 100000000, 0, -468), 0), 100000000, 0, -467), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 85)), 0); (("lor", 2245), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -466), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -465), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -464), 0), 100000000, 0, -463), 0), 100000000, 0, -462), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 86)), 0); (("lxor", 2246), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -461), (Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -460), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -459), 0), 100000000, 0, -458), 0), 100000000, 0, -457), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 87)), 0); (("lnot", 2247), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -456), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -455), 0), 100000000, 0, -454), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 88)), 0); (("lsl", 2248), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -453), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -452), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -451), 0), 100000000, 0, -450), 0), 100000000, 0, -449), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 89)), 0); (("asr", 2249), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -448), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -447), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -446), 0), 100000000, 0, -445), 0), 100000000, 0, -444), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 90)), 0); (("lsr", 2250), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -443), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -442), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -441), 0), 100000000, 0, -440), 0), 100000000, 0, -439), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), 0, Tag1 ("Base__Int_intf", 92)), 0)]), 0, (("src/nativeint.mli", 11, 149, 157), ("src/nativeint.mli", 11, 149, 184), 0), Tag1 ("Base__Int_intf", 110)), 0, 0); (("of_int", 2205), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -37), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("src/nativeint.mli", 15, 219, 219), ("src/nativeint.mli", 15, 219, 240), 0), 0, Tag1 ("Base__Nativeint", 3)), 0); (("to_int", 2206), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -34), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -33)], (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("src/nativeint.mli", 16, 241, 241), ("src/nativeint.mli", 16, 241, 269), 0), 0, Tag1 ("Base__Nativeint", 4)), 0); (("of_int32", 2207), ((Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -30), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("src/nativeint.mli", 17, 270, 270), ("src/nativeint.mli", 17, 270, 295), 0), 0, Tag1 ("Base__Nativeint", 5)), 0); (("to_int32", 2208), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -27), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -26)], (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("src/nativeint.mli", 18, 296, 296), ("src/nativeint.mli", 18, 296, 328), 0), 0, Tag1 ("Base__Nativeint", 6)), 0); (("of_nativeint", 2209), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -23), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("src/nativeint.mli", 19, 329, 329), ("src/nativeint.mli", 19, 329, 362), 0), 0, Tag1 ("Base__Nativeint", 7)), 0); (("to_nativeint", 2210), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -20), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("src/nativeint.mli", 20, 363, 363), ("src/nativeint.mli", 20, 363, 396), 0), 0, Tag1 ("Base__Nativeint", 8)), 0); (("of_int64", 2211), ((Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -17), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -16)], (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("src/nativeint.mli", 21, 397, 397), ("src/nativeint.mli", 21, 397, 429), 0), 0, Tag1 ("Base__Nativeint", 9)), 0); (("to_int_trunc", 2212), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -13), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("src/nativeint.mli", 28, 627, 627), ("src/nativeint.mli", 28, 627, 654), 0), 0, Tag1 ("Base__Nativeint", 10)), 0); (("to_int32_trunc", 2213), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("src/nativeint.mli", 29, 655, 655), ("src/nativeint.mli", 29, 655, 686), 0), 0, Tag1 ("Base__Nativeint", 11)), 0); (("of_int64_trunc", 2214), ((Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -7), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("src/nativeint.mli", 30, 687, 687), ("src/nativeint.mli", 30, 687, 718), 0), 0, Tag1 ("Base__Nativeint", 12)), 0); (("bswap", 2215), ((Tag1 (0, (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -4), (Tag3 ((("t", 2106)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/nativeint.mli", 37, 903, 903), ("src/nativeint.mli", 37, 903, 921), 0), 0, Tag1 ("Base__Nativeint", 13)), 0)], "Base__Nativeint", [("Base__Nativeint", ("\252/\181U\214\229\029?.\130\145\237\"qFj")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__StringLabels", ("\134F\024\226\216Is#\223\230\234\169Z\206Gc")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Printf", ("\215<\139]\021\142\224E\245m\198qc(W\229")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__MoreLabels", ("\248\232\248\254`<\230\241\161U\193U\1466J\238")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__ListLabels", ("*\194\012\191\020%\170\249m\002\180\178hk\205\220")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shadow_stdlib", ("\219zi\164\203\158e)\232\221\196\168\138x\142\018")); ("Sexplib0__Sexpable", ("\251${\207(\249/z\242\255\250^\141\156\210e")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv_error", ("kzv!\151~\198P\000\165\176d\007\251p\232")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Base_internalhash_types", ("0\148#2\226\223\018\135\173>!\020\237\017\255\149")); ("Base__T", ("+t\159\169\027\152\205\235\003\237\133\177\024\n6'")); ("Base__Sys0", ("\206z\231\154s\\\136\2364\131\005\014\031\152m3")); ("Base__Stringable", ("\170\025\162\136\234\162\n\161\1491>\145\210@\237t")); ("Base__String0", ("\212\221L\220\245\255\162P\228\224\189\216\135H\149O")); ("Base__Source_code_position0", ("_\003P6\254\029\206\005\130\136\180\019\145\230\000M")); ("Base__Sign0", ("\152\138\204\175\244\128J\165\221\165\160\150y\1305i")); ("Base__Sexp", ("\154\187\171&\209=\153[\236\250!U\174`\190T")); ("Base__Result", ("\204|\215\173FMa\2511<&\215T\194$\228")); ("Base__Printf", ("\000\196c,\214\127\226\174\220\190\253z!\242\028\250")); ("Base__Pretty_printer", ("\175\005\031\018\015a\159\220\154c'(a\239j\233")); ("Base__Ppx_hash_lib", ("\199\141\178\193\006\209L\007^\020(\131\224sn8")); ("Base__Ppx_compare_lib", ("\243\186~\233\228\199Ah\181.\223\004e\231\129S")); ("Base__Poly0", ("\230;\143\234\255.H\132KOe7\155\\\023f")); ("Base__Or_error", ("\193\133)\bO\210\2517\168*\203\148\143\200\127\177")); ("Base__Monad_intf", ("\208\203\163\152\184O\130?\012:\168\247}\018\253\155")); ("Base__Monad", ("!\244\168\2352=\137Lm\219\129K\216\199\145\\")); ("Base__Lazy", ("@`\165\196 \235)\136ANe:p\169$\185")); ("Base__Invariant_intf", ("\213\204\238\235\236[\198\145\028\2392\015\243\177S\249")); ("Base__Invariant", ("\135\153\136\\\129SD\228\202l\255\152\139\253\015\201")); ("Base__Intable", ("\028\249=Y\003]\231qd\238\172\004b\170\142\255")); ("Base__Int_intf", ("\238Q\2457\239\156\018\183J\015\240\178\193b\166@")); ("Base__Int0", ("N\1310\012\227\254\000\255_\222!\018\016\003\1779")); ("Base__Info_intf", ("\184\209'\173\251\219\167X|v\188]\190o5X")); ("Base__Info", ("-\011\149\203\248\030\2301\1907\1630\189\128\209\170")); ("Base__Import0", ("\156\129U\197Y[\\\153\017Ho\203\173\204\220\020")); ("Base__Import", ("\014\187\247\141\187\181\142g\176:s_,\181\219\209")); ("Base__Identifiable_intf", ("hK7}\187\129\022-r\233\241\192Q\161=j")); ("Base__Identifiable", ("L\020\162\189\228\217^\171\158H_\157\164c\130\242")); ("Base__Hashable_intf", ("\128\015G\244\135R\026\202\128F?)\193\004\195\181")); ("Base__Hashable", ("\027\187\158\245r}\018\193dbq\196\005\170g\252")); ("Base__Hash_intf", ("h\004P\218\1531G\127\212\208A\024\140\164iq")); ("Base__Hash", ("\206Rc\194\234{s3\248\165\024\162\203{\206\206")); ("Base__Globalize", ("<\243w~.\180\196t\159\193\174[\227\139\215G")); ("Base__Formatter", ("\193\149\030\140\154\1505b\162a`%\243\185'%")); ("Base__Floatable", ("\239\176\151\139\173ft(q\190\205\030C\170\197\177")); ("Base__Field", ("8In\234X\202\188G\186\208$\192\175\136\214v")); ("Base__Error", ("\199\218\231n\155/\159\156\146\247\148t\237\003\t\153")); ("Base__Either0", ("!9-\011n\2077eZ\212\031c\227\029\206\t")); ("Base__Comparisons", ("\196\196Y\"{\163~)\\G/\155:\004\141;")); ("Base__Comparator", ("\002\135z7b\025&\207\t\188\239&U3R\167")); ("Base__Comparable_intf", ("\252n\002\221\246\143r\235oJ\240\151\202\211\161\254")); ("Base__Comparable", (":\134'\156u#\215\225\129\191\162\229\200\185l\012")); ("Base__Bool0", ("\177f\254p\023\143&\239\020\136\206\242~\018F\251")); ("Base__Applicative_intf", ("J\176\203\159\235N(\235\027\232\198+\224\205*A")); ("Base__Applicative", ("\157\024\176\241a\165\204\133\003s3\214\007\131\244\n")); ("Base__", ("p\252\007\139\128\163W\025+\0225\001\246|P\158"))], [(0)])

val bswap : t -> t
