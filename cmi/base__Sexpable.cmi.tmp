module Of_sexpable :
  functor (Sexpable : Sexplib0.Sexpable.S)
    (M : sig
           type t
           val to_sexpable : t -> Sexpable.t
           val of_sexpable : Sexpable.t -> t
         end)
    ->
    sig
      val t_of_sexp : Sexplib0__.Sexp.t -> M.t
      val sexp_of_t : M.t -> Sexplib0__.Sexp.t
    end
module Of_sexpable1 :
  functor (Sexpable : Sexplib0.Sexpable.S1)
    (M : sig
           type 'a t
           val to_sexpable : 'a t -> 'a Sexpable.t
           val of_sexpable : 'a Sexpable.t -> 'a t
         end)
    ->
    sig
      val t_of_sexp :
        (Sexplib0__.Sexp.t -> 'a) -> Sexplib0__.Sexp.t -> 'a M.t
      val sexp_of_t :
        ('a -> Sexplib0__.Sexp.t) -> 'a M.t -> Sexplib0__.Sexp.t
    end
module Of_sexpable2 :
  functor (Sexpable : Sexplib0.Sexpable.S2)
    (M : sig
           type ('a, 'b) t
           val to_sexpable : ('a, 'b) t -> ('a, 'b) Sexpable.t
           val of_sexpable : ('a, 'b) Sexpable.t -> ('a, 'b) t
         end)
    ->
    sig
      val t_of_sexp :
        (Sexplib0__.Sexp.t -> 'a) ->
        (Sexplib0__.Sexp.t -> 'b) -> Sexplib0__.Sexp.t -> ('a, 'b) M.t
      val sexp_of_t :
        ('a -> Sexplib0__.Sexp.t) ->
        ('b -> Sexplib0__.Sexp.t) -> ('a, 'b) M.t -> Sexplib0__.Sexp.t
    end
module Of_sexpable3 :
  functor (Sexpable : Sexplib0.Sexpable.S3)
    (M : sig
           type ('a, 'b, 'c) t
           val to_sexpable : ('a, 'b, 'c) t -> ('a, 'b, 'c) Sexpable.t
           val of_sexpable : ('a, 'b, 'c) Sexpable.t -> ('a, 'b, 'c) t
         end)
    ->
    sig
      val t_of_sexp :
        (Sexplib0__.Sexp.t -> 'a) ->
        (Sexplib0__.Sexp.t -> 'b) ->
        (Sexplib0__.Sexp.t -> 'c) -> Sexplib0__.Sexp.t -> ('a, 'b, 'c) M.t
      val sexp_of_t :
        ('a -> Sexplib0__.Sexp.t) ->
        ('b -> Sexplib0__.Sexp.t) ->
        ('c -> Sexplib0__.Sexp.t) -> ('a, 'b, 'c) M.t -> Sexplib0__.Sexp.t
    end
module Of_stringable :
  functor (M : Base__.Stringable.S) ->
    sig
      val t_sexp_grammar : M.t Sexplib0.Sexp_grammar.t
      val t_of_sexp : Sexplib0__.Sexp.t -> M.t
      val sexp_of_t : M.t -> Sexplib0__.Sexp.t
    end
module type S =
  sig
    type t
    val t_of_sexp : Sexplib0__.Sexp.t -> t
    val sexp_of_t : t -> Sexplib0__.Sexp.t
  end
module type S1 =
  sig
    type 'a t
    val t_of_sexp : (Sexplib0__.Sexp.t -> 'a) -> Sexplib0__.Sexp.t -> 'a t
    val sexp_of_t : ('a -> Sexplib0__.Sexp.t) -> 'a t -> Sexplib0__.Sexp.t
  end
module type S2 =
  sig
    type ('a, 'b) t
    val t_of_sexp :
      (Sexplib0__.Sexp.t -> 'a) ->
      (Sexplib0__.Sexp.t -> 'b) -> Sexplib0__.Sexp.t -> ('a, 'b) t
    val sexp_of_t :
      ('a -> Sexplib0__.Sexp.t) ->
      ('b -> Sexplib0__.Sexp.t) -> ('a, 'b) t -> Sexplib0__.Sexp.t
  end
module type S3 =
  sig
    type ('a, 'b, 'c) t
    val t_of_sexp :
      (Sexplib0__.Sexp.t -> 'a) ->
      (Sexplib0__.Sexp.t -> 'b) ->
      (Sexplib0__.Sexp.t -> 'c) -> Sexplib0__.Sexp.t -> ('a, 'b, 'c) t
    val sexp_of_t :
      ('a -> Sexplib0__.Sexp.t) ->
      ('b -> Sexplib0__.Sexp.t) ->
      ('c -> Sexplib0__.Sexp.t) -> ('a, 'b, 'c) t -> Sexplib0__.Sexp.t("DEBUG:rule", [Tag3 (("Of_sexpable", 983), 0, (Tag2 (((("Sexpable", 999)), (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexpable"), "S"))), Tag2 (((("M", 1000)), Tag1 ([Tag1 (("t", 1001), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/sexpable.mli", 9, 248, 270), ("src/sexpable.mli", 9, 248, 276), 0), 0, 0, 0, Tag1 ("Base__Sexpable", 1)), 1, 0); (("to_sexpable", 1002), ((Tag1 (0, (Tag3 ((("t", 1001)), 0, (0)), 100000000, 0, -7), (Tag3 (Tag1 ((("Sexpable", 999)), "t"), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("src/sexpable.mli", 11, 278, 300), ("src/sexpable.mli", 11, 278, 333), 0), 0, Tag1 ("Base__Sexpable", 2)), 0); (("of_sexpable", 1003), ((Tag1 (0, (Tag3 (Tag1 ((("Sexpable", 999)), "t"), 0, (0)), 100000000, 0, -4), (Tag3 ((("t", 1001)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/sexpable.mli", 12, 334, 356), ("src/sexpable.mli", 12, 334, 389), 0), 0, Tag1 ("Base__Sexpable", 3)), 0)])), Tag1 ([(("t_of_sexp", 1004), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -13), (Tag3 (Tag1 ((("M", 1000)), "t"), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("src/sexpable.mli", 13, 390, 417), ("src/sexpable.mli", 13, 390, 437), 0), 0, Tag1 ("Sexplib0__Sexpable", 1)), 0); (("sexp_of_t", 1005), ((Tag1 (0, (Tag3 (Tag1 ((("M", 1000)), "t"), 0, (0)), 100000000, 0, -10), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("src/sexpable.mli", 13, 390, 417), ("src/sexpable.mli", 13, 390, 437), 0), 0, Tag1 ("Sexplib0__Sexpable", 2)), 0)]))), 0, (("src/sexpable.mli", 7, 201, 201), ("src/sexpable.mli", 13, 390, 437), 0), Tag1 ("Base__Sexpable", 6)), 0, 0); Tag3 (("Of_sexpable1", 984), 0, (Tag2 (((("Sexpable", 997)), (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexpable"), "S1"))), Tag2 (((("M", 998)), Tag1 ([Tag1 (("t", 1006), ([((("a")), 100000000, 0, -22)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/sexpable.mli", 17, 488, 511), ("src/sexpable.mli", 17, 488, 520), 0), 0, 0, 0, Tag1 ("Base__Sexpable", 8)), 1, 0); (("to_sexpable", 1007), ((Tag1 (0, (Tag3 ((("t", 1006)), [((("a")), 100000000, 0, -20)], (0)), 100000000, 0, -21), (Tag3 (Tag1 ((("Sexpable", 997)), "t"), [((("a")), 100000000, 0, -20)], (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("src/sexpable.mli", 19, 522, 545), ("src/sexpable.mli", 19, 522, 584), 0), 0, Tag1 ("Base__Sexpable", 9)), 0); (("of_sexpable", 1008), ((Tag1 (0, (Tag3 (Tag1 ((("Sexpable", 997)), "t"), [((("a")), 100000000, 0, -16)], (0)), 100000000, 0, -17), (Tag3 ((("t", 1006)), [((("a")), 100000000, 0, -16)], (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("src/sexpable.mli", 20, 585, 608), ("src/sexpable.mli", 20, 585, 647), 0), 0, Tag1 ("Base__Sexpable", 10)), 0)])), Tag1 ([(("t_of_sexp", 1009), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -36), ((("a")), 100000000, 0, -33), 0), 100000000, 0, -35), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -34), (Tag3 (Tag1 ((("M", 998)), "t"), [((("a")), 100000000, 0, -33)], (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("src/sexpable.mli", 21, 648, 676), ("src/sexpable.mli", 21, 648, 703), 0), 0, Tag1 ("Sexplib0__Sexpable", 5)), 0); (("sexp_of_t", 1010), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -27), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), (Tag1 (0, (Tag3 (Tag1 ((("M", 998)), "t"), [((("a")), 100000000, 0, -27)], (0)), 100000000, 0, -26), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("src/sexpable.mli", 21, 648, 676), ("src/sexpable.mli", 21, 648, 703), 0), 0, Tag1 ("Sexplib0__Sexpable", 6)), 0)]))), 0, (("src/sexpable.mli", 15, 439, 439), ("src/sexpable.mli", 21, 648, 703), 0), Tag1 ("Base__Sexpable", 13)), 0, 0); Tag3 (("Of_sexpable2", 985), 0, (Tag2 (((("Sexpable", 995)), (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexpable"), "S2"))), Tag2 (((("M", 996)), Tag1 ([Tag1 (("t", 1011), ([((("a")), 100000000, 0, -47); ((("b")), 100000000, 0, -48)], 2, 0, 1, 0, [7; 7], [2; 2], 0, 0, (("src/sexpable.mli", 25, 754, 777), ("src/sexpable.mli", 25, 754, 792), 0), 0, 0, 0, Tag1 ("Base__Sexpable", 15)), 1, 0); (("to_sexpable", 1012), ((Tag1 (0, (Tag3 ((("t", 1011)), [((("a")), 100000000, 0, -44); ((("b")), 100000000, 0, -45)], (0)), 100000000, 0, -46), (Tag3 (Tag1 ((("Sexpable", 995)), "t"), [((("a")), 100000000, 0, -44); ((("b")), 100000000, 0, -45)], (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("src/sexpable.mli", 27, 794, 817), ("src/sexpable.mli", 27, 794, 868), 0), 0, Tag1 ("Base__Sexpable", 16)), 0); (("of_sexpable", 1013), ((Tag1 (0, (Tag3 (Tag1 ((("Sexpable", 995)), "t"), [((("a")), 100000000, 0, -39); ((("b")), 100000000, 0, -40)], (0)), 100000000, 0, -41), (Tag3 ((("t", 1011)), [((("a")), 100000000, 0, -39); ((("b")), 100000000, 0, -40)], (0)), 100000000, 0, -38), 0), 100000000, 0, -37), 0, (("src/sexpable.mli", 28, 869, 892), ("src/sexpable.mli", 28, 869, 943), 0), 0, Tag1 ("Base__Sexpable", 17)), 0)])), Tag1 ([(("t_of_sexp", 1014), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -70), ((("a")), 100000000, 0, -64), 0), 100000000, 0, -69), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -68), ((("b")), 100000000, 0, -65), 0), 100000000, 0, -67), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -66), (Tag3 (Tag1 ((("M", 996)), "t"), [((("a")), 100000000, 0, -64); ((("b")), 100000000, 0, -65)], (0)), 100000000, 0, -63), 0), 100000000, 0, -62), 0), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("src/sexpable.mli", 29, 944, 972), ("src/sexpable.mli", 29, 944, 1011), 0), 0, Tag1 ("Sexplib0__Sexpable", 9)), 0); (("sexp_of_t", 1015), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -54), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -59), 0), 100000000, 0, -58), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -55), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), (Tag1 (0, (Tag3 (Tag1 ((("M", 996)), "t"), [((("a")), 100000000, 0, -54); ((("b")), 100000000, 0, -55)], (0)), 100000000, 0, -53), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0), 100000000, 0, -50), 0), 100000000, 0, -49), 0, (("src/sexpable.mli", 29, 944, 972), ("src/sexpable.mli", 29, 944, 1011), 0), 0, Tag1 ("Sexplib0__Sexpable", 10)), 0)]))), 0, (("src/sexpable.mli", 23, 705, 705), ("src/sexpable.mli", 29, 944, 1011), 0), Tag1 ("Base__Sexpable", 20)), 0, 0); Tag3 (("Of_sexpable3", 986), 0, (Tag2 (((("Sexpable", 993)), (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexpable"), "S3"))), Tag2 (((("M", 994)), Tag1 ([Tag1 (("t", 1016), ([((("a")), 100000000, 0, -83); ((("b")), 100000000, 0, -84); ((("c")), 100000000, 0, -85)], 3, 0, 1, 0, [7; 7; 7], [2; 2; 2], 0, 0, (("src/sexpable.mli", 33, 1062, 1085), ("src/sexpable.mli", 33, 1062, 1104), 0), 0, 0, 0, Tag1 ("Base__Sexpable", 22)), 1, 0); (("to_sexpable", 1017), ((Tag1 (0, (Tag3 ((("t", 1016)), [((("a")), 100000000, 0, -79); ((("b")), 100000000, 0, -80); ((("c")), 100000000, 0, -81)], (0)), 100000000, 0, -82), (Tag3 (Tag1 ((("Sexpable", 993)), "t"), [((("a")), 100000000, 0, -79); ((("b")), 100000000, 0, -80); ((("c")), 100000000, 0, -81)], (0)), 100000000, 0, -78), 0), 100000000, 0, -77), 0, (("src/sexpable.mli", 35, 1106, 1129), ("src/sexpable.mli", 35, 1106, 1188), 0), 0, Tag1 ("Base__Sexpable", 23)), 0); (("of_sexpable", 1018), ((Tag1 (0, (Tag3 (Tag1 ((("Sexpable", 993)), "t"), [((("a")), 100000000, 0, -73); ((("b")), 100000000, 0, -74); ((("c")), 100000000, 0, -75)], (0)), 100000000, 0, -76), (Tag3 ((("t", 1016)), [((("a")), 100000000, 0, -73); ((("b")), 100000000, 0, -74); ((("c")), 100000000, 0, -75)], (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0, (("src/sexpable.mli", 36, 1189, 1212), ("src/sexpable.mli", 36, 1189, 1271), 0), 0, Tag1 ("Base__Sexpable", 24)), 0)])), Tag1 ([(("t_of_sexp", 1019), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -115), ((("a")), 100000000, 0, -106), 0), 100000000, 0, -114), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -113), ((("b")), 100000000, 0, -107), 0), 100000000, 0, -112), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -111), ((("c")), 100000000, 0, -108), 0), 100000000, 0, -110), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -109), (Tag3 (Tag1 ((("M", 994)), "t"), [((("a")), 100000000, 0, -106); ((("b")), 100000000, 0, -107); ((("c")), 100000000, 0, -108)], (0)), 100000000, 0, -105), 0), 100000000, 0, -104), 0), 100000000, 0, -103), 0), 100000000, 0, -102), 0), 100000000, 0, -101), 0, (("src/sexpable.mli", 37, 1272, 1300), ("src/sexpable.mli", 37, 1272, 1347), 0), 0, Tag1 ("Sexplib0__Sexpable", 13)), 0); (("sexp_of_t", 1020), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -92), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -100), 0), 100000000, 0, -99), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -93), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -98), 0), 100000000, 0, -97), (Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -94), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -96), 0), 100000000, 0, -95), (Tag1 (0, (Tag3 (Tag1 ((("M", 994)), "t"), [((("a")), 100000000, 0, -92); ((("b")), 100000000, 0, -93); ((("c")), 100000000, 0, -94)], (0)), 100000000, 0, -91), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -90), 0), 100000000, 0, -89), 0), 100000000, 0, -88), 0), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("src/sexpable.mli", 37, 1272, 1300), ("src/sexpable.mli", 37, 1272, 1347), 0), 0, Tag1 ("Sexplib0__Sexpable", 14)), 0)]))), 0, (("src/sexpable.mli", 31, 1013, 1013), ("src/sexpable.mli", 37, 1272, 1347), 0), Tag1 ("Base__Sexpable", 27)), 0, 0); Tag3 (("Of_stringable", 987), 0, (Tag2 (((("M", 992)), (Tag1 (Tag1 ((Tag2 ("Base__")), "Stringable"), "S"))), Tag1 ([(("t_sexp_grammar", 1021), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [(Tag3 (Tag1 ((("M", 992)), "t"), 0, (0)), 100000000, 0, -123)], (0)), 100000000, 0, -122), 0, (("src/sexpable.mli", 39, 1349, 1391), ("src/sexpable.mli", 48, 1533, 1551), 0), 0, Tag1 ("Base__Sexpable", 31)), 0); (("t_of_sexp", 1022), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -121), (Tag3 (Tag1 ((("M", 992)), "t"), 0, (0)), 100000000, 0, -120), 0), 100000000, 0, -119), 0, (("src/sexpable.mli", 39, 1349, 1391), ("src/sexpable.mli", 48, 1533, 1551), 0), 0, Tag1 ("Sexplib0__Sexpable", 1)), 0); (("sexp_of_t", 1023), ((Tag1 (0, (Tag3 (Tag1 ((("M", 992)), "t"), 0, (0)), 100000000, 0, -118), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -117), 0), 100000000, 0, -116), 0, (("src/sexpable.mli", 39, 1349, 1391), ("src/sexpable.mli", 48, 1533, 1551), 0), 0, Tag1 ("Sexplib0__Sexpable", 2)), 0)])), 0, (("src/sexpable.mli", 39, 1349, 1349), ("src/sexpable.mli", 48, 1533, 1551), 0), Tag1 ("Base__Sexpable", 34)), 0, 0); Tag4 (("S", 988), ((Tag1 ([Tag1 (("t", 1024), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/sexpable.ml", 2, 20, 22), ("src/sexpable.ml", 2, 20, 28), 0), 0, 0, 0, Tag1 ("Sexplib0__Sexpable", 0)), 1, 0); (("t_of_sexp", 1025), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -129), (Tag3 ((("t", 1024)), 0, (0)), 100000000, 0, -128), 0), 100000000, 0, -127), 0, (("src/sexpable.ml", 4, 30, 32), ("src/sexpable.ml", 4, 30, 59), 0), 0, Tag1 ("Sexplib0__Sexpable", 1)), 0); (("sexp_of_t", 1026), ((Tag1 (0, (Tag3 ((("t", 1024)), 0, (0)), 100000000, 0, -126), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -125), 0), 100000000, 0, -124), 0, (("src/sexpable.ml", 5, 60, 62), ("src/sexpable.ml", 5, 60, 89), 0), 0, Tag1 ("Sexplib0__Sexpable", 2)), 0)])), 0, (("src/sexpable.ml", 1, 0, 0), ("src/sexpable.ml", 6, 90, 93), 0), Tag1 ("Sexplib0__Sexpable", 3)), 0); Tag4 (("S1", 989), ((Tag1 ([Tag1 (("t", 1027), ([((("a")), 100000000, 0, -144)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/sexpable.ml", 9, 116, 118), ("src/sexpable.ml", 9, 116, 127), 0), 0, 0, 0, Tag1 ("Sexplib0__Sexpable", 4)), 1, 0); (("t_of_sexp", 1028), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -143), ((("a")), 100000000, 0, -140), 0), 100000000, 0, -142), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -141), (Tag3 ((("t", 1027)), [((("a")), 100000000, 0, -140)], (0)), 100000000, 0, -139), 0), 100000000, 0, -138), 0), 100000000, 0, -137), 0, (("src/sexpable.ml", 11, 129, 131), ("src/sexpable.ml", 11, 129, 179), 0), 0, Tag1 ("Sexplib0__Sexpable", 5)), 0); (("sexp_of_t", 1029), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -134), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -136), 0), 100000000, 0, -135), (Tag1 (0, (Tag3 ((("t", 1027)), [((("a")), 100000000, 0, -134)], (0)), 100000000, 0, -133), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -132), 0), 100000000, 0, -131), 0), 100000000, 0, -130), 0, (("src/sexpable.ml", 12, 180, 182), ("src/sexpable.ml", 12, 180, 230), 0), 0, Tag1 ("Sexplib0__Sexpable", 6)), 0)])), 0, (("src/sexpable.ml", 8, 95, 95), ("src/sexpable.ml", 13, 231, 234), 0), Tag1 ("Sexplib0__Sexpable", 7)), 0); Tag4 (("S2", 990), ((Tag1 ([Tag1 (("t", 1030), ([((("a")), 100000000, 0, -167); ((("b")), 100000000, 0, -168)], 2, 0, 1, 0, [7; 7], [2; 2], 0, 0, (("src/sexpable.ml", 16, 257, 259), ("src/sexpable.ml", 16, 257, 274), 0), 0, 0, 0, Tag1 ("Sexplib0__Sexpable", 8)), 1, 0); (("t_of_sexp", 1031), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -166), ((("a")), 100000000, 0, -160), 0), 100000000, 0, -165), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -164), ((("b")), 100000000, 0, -161), 0), 100000000, 0, -163), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -162), (Tag3 ((("t", 1030)), [((("a")), 100000000, 0, -160); ((("b")), 100000000, 0, -161)], (0)), 100000000, 0, -159), 0), 100000000, 0, -158), 0), 100000000, 0, -157), 0), 100000000, 0, -156), 0, (("src/sexpable.ml", 18, 276, 278), ("src/sexpable.ml", 18, 276, 350), 0), 0, Tag1 ("Sexplib0__Sexpable", 9)), 0); (("sexp_of_t", 1032), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -150), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -155), 0), 100000000, 0, -154), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -151), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -153), 0), 100000000, 0, -152), (Tag1 (0, (Tag3 ((("t", 1030)), [((("a")), 100000000, 0, -150); ((("b")), 100000000, 0, -151)], (0)), 100000000, 0, -149), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -148), 0), 100000000, 0, -147), 0), 100000000, 0, -146), 0), 100000000, 0, -145), 0, (("src/sexpable.ml", 19, 351, 353), ("src/sexpable.ml", 19, 351, 425), 0), 0, Tag1 ("Sexplib0__Sexpable", 10)), 0)])), 0, (("src/sexpable.ml", 15, 236, 236), ("src/sexpable.ml", 20, 426, 429), 0), Tag1 ("Sexplib0__Sexpable", 11)), 0); Tag4 (("S3", 991), ((Tag1 ([Tag1 (("t", 1033), ([((("a")), 100000000, 0, -199); ((("b")), 100000000, 0, -200); ((("c")), 100000000, 0, -201)], 3, 0, 1, 0, [7; 7; 7], [2; 2; 2], 0, 0, (("src/sexpable.ml", 23, 452, 454), ("src/sexpable.ml", 23, 452, 473), 0), 0, 0, 0, Tag1 ("Sexplib0__Sexpable", 12)), 1, 0); (("t_of_sexp", 1034), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -198), ((("a")), 100000000, 0, -189), 0), 100000000, 0, -197), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -196), ((("b")), 100000000, 0, -190), 0), 100000000, 0, -195), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -194), ((("c")), 100000000, 0, -191), 0), 100000000, 0, -193), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -192), (Tag3 ((("t", 1033)), [((("a")), 100000000, 0, -189); ((("b")), 100000000, 0, -190); ((("c")), 100000000, 0, -191)], (0)), 100000000, 0, -188), 0), 100000000, 0, -187), 0), 100000000, 0, -186), 0), 100000000, 0, -185), 0), 100000000, 0, -184), 0, (("src/sexpable.ml", 25, 475, 477), ("src/sexpable.ml", 30, 571, 592), 0), 0, Tag1 ("Sexplib0__Sexpable", 13)), 0); (("sexp_of_t", 1035), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -175), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -183), 0), 100000000, 0, -182), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -176), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -181), 0), 100000000, 0, -180), (Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -177), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -179), 0), 100000000, 0, -178), (Tag1 (0, (Tag3 ((("t", 1033)), [((("a")), 100000000, 0, -175); ((("b")), 100000000, 0, -176); ((("c")), 100000000, 0, -177)], (0)), 100000000, 0, -174), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -173), 0), 100000000, 0, -172), 0), 100000000, 0, -171), 0), 100000000, 0, -170), 0), 100000000, 0, -169), 0, (("src/sexpable.ml", 32, 594, 596), ("src/sexpable.ml", 37, 698, 711), 0), 0, Tag1 ("Sexplib0__Sexpable", 14)), 0)])), 0, (("src/sexpable.ml", 22, 431, 431), ("src/sexpable.ml", 38, 712, 715), 0), Tag1 ("Sexplib0__Sexpable", 15)), 0)], "Base__Sexpable", [("Base__Sexpable", ("\155?\169\178\246\242*\232\206\018Y\174\203h\217i")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__MoreLabels", ("\248\232\248\254`<\230\241\161U\193U\1466J\238")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shadow_stdlib", ("\219zi\164\203\158e)\232\221\196\168\138x\142\018")); ("Sexplib0__Sexpable", ("\251${\207(\249/z\242\255\250^\141\156\210e")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Base_internalhash_types", ("0\148#2\226\223\018\135\173>!\020\237\017\255\149")); ("Base__Stringable", ("\170\025\162\136\234\162\n\161\1491>\145\210@\237t")); ("Base__Sexp", ("\154\187\171&\209=\153[\236\250!U\174`\190T")); ("Base__Ppx_hash_lib", ("\199\141\178\193\006\209L\007^\020(\131\224sn8")); ("Base__Ppx_compare_lib", ("\243\186~\233\228\199Ah\181.\223\004e\231\129S")); ("Base__Poly0", ("\230;\143\234\255.H\132KOe7\155\\\023f")); ("Base__Import0", ("\156\129U\197Y[\\\153\017Ho\203\173\204\220\020")); ("Base__Import", ("\014\187\247\141\187\181\142g\176:s_,\181\219\209")); ("Base__Hash_intf", ("h\004P\218\1531G\127\212\208A\024\140\164iq")); ("Base__Hash", ("\206Rc\194\234{s3\248\165\024\162\203{\206\206")); ("Base__Globalize", ("<\243w~.\180\196t\159\193\174[\227\139\215G")); ("Base__Bool0", ("\177f\254p\023\143&\239\020\136\206\242~\018F\251")); ("Base__", ("p\252\007\139\128\163W\025+\0225\001\246|P\158"))], [(0)])

  end
