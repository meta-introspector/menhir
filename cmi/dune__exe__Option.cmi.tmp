val defined : 'a option -> bool
val map : ('a -> 'b) -> 'a option -> 'b option
val iter : ('a -> unit) -> 'a option -> unit
val fold : ('a -> 'b -> 'b) -> 'a option -> 'b -> 'b
val force : 'a option -> 'a
val project : 'a option -> 'a
val equal : ('a -> 'b -> bool) -> 'a option -> 'b option -> bool
val hash : ('a -> int) -> 'a option -> int
val value : 'a option -> default:'a -> 'a
val first_value : 'a option list -> 'a option
("DEBUG:rule", [(("defined", 407), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -65)], (0)), 100000000, 0, -64), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -63), 0), 100000000, 0, -62), 0, (("src/option.mli", 14, 997, 997), ("src/option.mli", 14, 997, 1027), 0), 0, Tag1 ("Dune__exe__Option", 0)), 0); (("map", 408), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -60), ((("b")), 100000000, 0, -58), 0), 100000000, 0, -61), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -60)], (0)), 100000000, 0, -59), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -58)], (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0), 100000000, 0, -55), 0, (("src/option.mli", 15, 1028, 1028), ("src/option.mli", 15, 1028, 1073), 0), 0, Tag1 ("Dune__exe__Option", 1)), 0); (("iter", 409), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -52), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -52)], (0)), 100000000, 0, -51), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("src/option.mli", 16, 1074, 1074), ("src/option.mli", 16, 1074, 1117), 0), 0, Tag1 ("Dune__exe__Option", 2)), 0); (("fold", 410), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -45), (Tag1 (0, ((("b")), 100000000, 0, -43), ((("b")), 100000000, 0, -43), 0), 100000000, 0, -47), 0), 100000000, 0, -46), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -45)], (0)), 100000000, 0, -44), (Tag1 (0, ((("b")), 100000000, 0, -43), ((("b")), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("src/option.mli", 17, 1118, 1118), ("src/option.mli", 17, 1118, 1169), 0), 0, Tag1 ("Dune__exe__Option", 3)), 0); (("force", 411), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -38)], (0)), 100000000, 0, -39), ((("a")), 100000000, 0, -38), 0), 100000000, 0, -37), 0, (("src/option.mli", 18, 1170, 1170), ("src/option.mli", 18, 1170, 1196), 0), 0, Tag1 ("Dune__exe__Option", 4)), 0); (("project", 412), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -35)], (0)), 100000000, 0, -36), ((("a")), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("src/option.mli", 19, 1197, 1197), ("src/option.mli", 19, 1197, 1225), 0), 0, Tag1 ("Dune__exe__Option", 5)), 0); (("equal", 413), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -30), (Tag1 (0, ((("b")), 100000000, 0, -28), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -30)], (0)), 100000000, 0, -29), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -28)], (0)), 100000000, 0, -27), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("src/option.mli", 20, 1275, 1275), ("src/option.mli", 20, 1275, 1338), 0), 0, Tag1 ("Dune__exe__Option", 6)), 0); (("hash", 414), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -20), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -20)], (0)), 100000000, 0, -19), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("src/option.mli", 21, 1339, 1339), ("src/option.mli", 21, 1339, 1380), 0), 0, Tag1 ("Dune__exe__Option", 7)), 0); (("value", 415), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -14)], (0)), 100000000, 0, -15), (Tag1 (("default"), ((("a")), 100000000, 0, -14), ((("a")), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("src/option.mli", 22, 1381, 1381), ("src/option.mli", 22, 1381, 1421), 0), 0, Tag1 ("Dune__exe__Option", 8)), 0); (("first_value", 416), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -9)], (0)), 100000000, 0, -11)], (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -9)], (0)), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("src/option.mli", 23, 1422, 1422), ("src/option.mli", 23, 1422, 1466), 0), 0, Tag1 ("Dune__exe__Option", 9)), 0); (("simplify", 417), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -4)], (0)), 100000000, 0, -6)], (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -4)], (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/option.mli", 24, 1467, 1467), ("src/option.mli", 24, 1467, 1510), 0), 0, Tag1 ("Dune__exe__Option", 10)), 0)], "Dune__exe__Option", [("Dune__exe__Option", ("\205\176\234\180\030\005g\182\244\182\\z\208T\209\232")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("MenhirSdk", ("F\232\012\196l\143\145[\255\2193U\197\027\176\139")); ("Dune__exe", ("\137\000\197\175$\007]\218\141\248\172\212\146c\153\212")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val simplify : 'a option option -> 'a option
