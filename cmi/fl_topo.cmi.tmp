module type IdentifiedType = sig type t type id_t val id : t -> id_t end
exception Inconsistent_ordering
module type S =
  sig
    type key
    type el_t
    type t
    val create : unit -> t
    val add : t -> el_t -> unit
    val let_le : t -> key -> key -> unit
    val find : t -> key -> el_t
    val le_than : t -> key -> key -> bool
    val key : el_t -> key
    val iter_up : (el_t -> unit) -> t -> unit
    val iter_down : (el_t -> unit) -> t -> unit
    val iter_up_at : (el_t -> unit) -> t -> key list -> unit
    val iter_down_at : (el_t -> unit) -> t -> key list -> unit
    val clear : t -> unit
    val replace : t -> key -> el_t -> unit
    val delete : t -> key -> unit
    val copy : t -> t
  end
module Make :
  functor (H : IdentifiedType) ->
    sig
      type key = H.id_t
      type el_t = H.t
      type t
      val create : unit -> t
      val add : t -> el_t -> unit
      val let_le : t -> key -> key -> unit
      val find : t -> key -> el_t
      val le_than : t -> key -> key -> bool
      val key : el_t -> key
      val iter_up : (el_t -> unit) -> t -> unit
      val iter_down : (el_t -> unit) -> t -> unit
      val iter_up_at : (el_t -> unit) -> t -> key list -> unit
      val iter_down_at : (el_t -> unit) -> t -> key list -> unit
      val clear : t -> unit
      val replace : t -> key -> el_t -> unit
      val delete : t -> key -> unit
      val copy : t -> t("DEBUG:rule", [Tag4 (("IdentifiedType", 334), ((Tag1 ([Tag1 (("t", 339), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("fl_topo.mli", 12, 239, 243), ("fl_topo.mli", 12, 239, 249), 0), 0, 0, 0, Tag1 ("Fl_topo", 0)), 1, 0); Tag1 (("id_t", 340), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("fl_topo.mli", 13, 250, 254), ("fl_topo.mli", 13, 250, 263), 0), 0, 0, 0, Tag1 ("Fl_topo", 1)), 1, 0); (("id", 341), ((Tag1 (0, (Tag3 ((("t", 339)), 0, (0)), 100000000, 0, -4), (Tag3 ((("id_t", 340)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("fl_topo.mli", 14, 264, 268), ("fl_topo.mli", 14, 264, 286), 0), 0, Tag1 ("Fl_topo", 2)), 0)])), 0, (("fl_topo.mli", 10, 203, 203), ("fl_topo.mli", 15, 287, 292), 0), Tag1 ("Fl_topo", 3)), 0); Tag2 (("Inconsistent_ordering", 335), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Fl_topo", 4)), 2, 0); Tag4 (("S", 336), ((Tag1 ([Tag1 (("key", 342), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("fl_topo.mli", 21, 349, 353), ("fl_topo.mli", 21, 349, 361), 0), 0, 0, 0, Tag1 ("Fl_topo", 5)), 1, 0); Tag1 (("el_t", 343), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("fl_topo.mli", 22, 362, 366), ("fl_topo.mli", 22, 362, 375), 0), 0, 0, 0, Tag1 ("Fl_topo", 6)), 1, 0); Tag1 (("t", 344), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("fl_topo.mli", 23, 376, 380), ("fl_topo.mli", 23, 376, 386), 0), 0, 0, 0, Tag1 ("Fl_topo", 7)), 1, 0); (("create", 345), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -86), (Tag3 ((("t", 344)), 0, (0)), 100000000, 0, -85), 0), 100000000, 0, -84), 0, (("fl_topo.mli", 24, 387, 391), ("fl_topo.mli", 24, 387, 413), 0), 0, Tag1 ("Fl_topo", 8)), 0); (("add", 346), ((Tag1 (0, (Tag3 ((("t", 344)), 0, (0)), 100000000, 0, -83), (Tag1 (0, (Tag3 ((("el_t", 343)), 0, (0)), 100000000, 0, -82), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0), 100000000, 0, -79), 0, (("fl_topo.mli", 25, 414, 418), ("fl_topo.mli", 25, 414, 445), 0), 0, Tag1 ("Fl_topo", 9)), 0); (("let_le", 347), ((Tag1 (0, (Tag3 ((("t", 344)), 0, (0)), 100000000, 0, -78), (Tag1 (0, (Tag3 ((("key", 342)), 0, (0)), 100000000, 0, -77), (Tag1 (0, (Tag3 ((("key", 342)), 0, (0)), 100000000, 0, -76), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), 0), 100000000, 0, -73), 0), 100000000, 0, -72), 0, (("fl_topo.mli", 26, 446, 450), ("fl_topo.mli", 26, 446, 486), 0), 0, Tag1 ("Fl_topo", 10)), 0); (("find", 348), ((Tag1 (0, (Tag3 ((("t", 344)), 0, (0)), 100000000, 0, -71), (Tag1 (0, (Tag3 ((("key", 342)), 0, (0)), 100000000, 0, -70), (Tag3 ((("el_t", 343)), 0, (0)), 100000000, 0, -69), 0), 100000000, 0, -68), 0), 100000000, 0, -67), 0, (("fl_topo.mli", 27, 487, 491), ("fl_topo.mli", 27, 487, 518), 0), 0, Tag1 ("Fl_topo", 11)), 0); (("le_than", 349), ((Tag1 (0, (Tag3 ((("t", 344)), 0, (0)), 100000000, 0, -66), (Tag1 (0, (Tag3 ((("key", 342)), 0, (0)), 100000000, 0, -65), (Tag1 (0, (Tag3 ((("key", 342)), 0, (0)), 100000000, 0, -64), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -63), 0), 100000000, 0, -62), 0), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("fl_topo.mli", 28, 519, 523), ("fl_topo.mli", 28, 519, 560), 0), 0, Tag1 ("Fl_topo", 12)), 0); (("key", 350), ((Tag1 (0, (Tag3 ((("el_t", 343)), 0, (0)), 100000000, 0, -59), (Tag3 ((("key", 342)), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0, (("fl_topo.mli", 29, 561, 565), ("fl_topo.mli", 29, 561, 586), 0), 0, Tag1 ("Fl_topo", 13)), 0); (("iter_up", 351), ((Tag1 (0, (Tag1 (0, (Tag3 ((("el_t", 343)), 0, (0)), 100000000, 0, -56), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -55), 0), 100000000, 0, -54), (Tag1 (0, (Tag3 ((("t", 344)), 0, (0)), 100000000, 0, -53), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0), 100000000, 0, -50), 0, (("fl_topo.mli", 30, 587, 591), ("fl_topo.mli", 30, 587, 632), 0), 0, Tag1 ("Fl_topo", 14)), 0); (("iter_down", 352), ((Tag1 (0, (Tag1 (0, (Tag3 ((("el_t", 343)), 0, (0)), 100000000, 0, -49), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), (Tag1 (0, (Tag3 ((("t", 344)), 0, (0)), 100000000, 0, -46), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("fl_topo.mli", 31, 633, 637), ("fl_topo.mli", 31, 633, 680), 0), 0, Tag1 ("Fl_topo", 15)), 0); (("iter_up_at", 353), ((Tag1 (0, (Tag1 (0, (Tag3 ((("el_t", 343)), 0, (0)), 100000000, 0, -42), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), (Tag1 (0, (Tag3 ((("t", 344)), 0, (0)), 100000000, 0, -39), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("key", 342)), 0, (0)), 100000000, 0, -38)], (0)), 100000000, 0, -37), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0, (("fl_topo.mli", 32, 681, 685), ("fl_topo.mli", 32, 681, 741), 0), 0, Tag1 ("Fl_topo", 16)), 0); (("iter_down_at", 354), ((Tag1 (0, (Tag1 (0, (Tag3 ((("el_t", 343)), 0, (0)), 100000000, 0, -32), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), (Tag1 (0, (Tag3 ((("t", 344)), 0, (0)), 100000000, 0, -29), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("key", 342)), 0, (0)), 100000000, 0, -28)], (0)), 100000000, 0, -27), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("fl_topo.mli", 33, 742, 746), ("fl_topo.mli", 33, 742, 804), 0), 0, Tag1 ("Fl_topo", 17)), 0); (("clear", 355), ((Tag1 (0, (Tag3 ((("t", 344)), 0, (0)), 100000000, 0, -22), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("fl_topo.mli", 34, 805, 809), ("fl_topo.mli", 34, 805, 830), 0), 0, Tag1 ("Fl_topo", 18)), 0); (("replace", 356), ((Tag1 (0, (Tag3 ((("t", 344)), 0, (0)), 100000000, 0, -19), (Tag1 (0, (Tag3 ((("key", 342)), 0, (0)), 100000000, 0, -18), (Tag1 (0, (Tag3 ((("el_t", 343)), 0, (0)), 100000000, 0, -17), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("fl_topo.mli", 35, 831, 835), ("fl_topo.mli", 35, 831, 873), 0), 0, Tag1 ("Fl_topo", 19)), 0); (("delete", 357), ((Tag1 (0, (Tag3 ((("t", 344)), 0, (0)), 100000000, 0, -12), (Tag1 (0, (Tag3 ((("key", 342)), 0, (0)), 100000000, 0, -11), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("fl_topo.mli", 36, 874, 878), ("fl_topo.mli", 36, 874, 907), 0), 0, Tag1 ("Fl_topo", 20)), 0); (("copy", 358), ((Tag1 (0, (Tag3 ((("t", 344)), 0, (0)), 100000000, 0, -7), (Tag3 ((("t", 344)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("fl_topo.mli", 37, 908, 912), ("fl_topo.mli", 37, 908, 929), 0), 0, Tag1 ("Fl_topo", 21)), 0)])), 0, (("fl_topo.mli", 19, 327, 327), ("fl_topo.mli", 38, 930, 935), 0), Tag1 ("Fl_topo", 22)), 0); Tag3 (("Make", 337), 0, (Tag2 (((("H", 338)), ((("IdentifiedType", 334)))), Tag1 ([Tag1 (("key", 359), (0, 0, 0, 1, ((Tag3 (Tag1 ((("H", 338)), "id_t"), 0, (0)), 100000000, 0, -170)), 0, 0, 0, 0, (("fl_topo.mli", 42, 998, 1010), ("fl_topo.mli", 42, 998, 1027), 0), 0, 0, 0, Tag1 ("Fl_topo", 25)), 1, 0); Tag1 (("el_t", 360), (0, 0, 0, 1, ((Tag3 (Tag1 ((("H", 338)), "t"), 0, (0)), 100000000, 0, -169)), 0, 0, 0, 0, (("fl_topo.mli", 41, 970, 982), ("fl_topo.mli", 41, 970, 997), 0), 0, 0, 0, Tag1 ("Fl_topo", 24)), 1, 0); Tag1 (("t", 361), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("fl_topo.mli", 23, 376, 380), ("fl_topo.mli", 23, 376, 386), 0), 0, 0, 0, Tag1 ("Fl_topo", 7)), 1, 0); (("create", 362), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -168), (Tag3 ((("t", 361)), 0, (0)), 100000000, 0, -167), 0), 100000000, 0, -166), 0, (("fl_topo.mli", 24, 387, 391), ("fl_topo.mli", 24, 387, 413), 0), 0, Tag1 ("Fl_topo", 8)), 0); (("add", 363), ((Tag1 (0, (Tag3 ((("t", 361)), 0, (0)), 100000000, 0, -165), (Tag1 (0, (Tag3 ((("el_t", 360)), 0, (0)), 100000000, 0, -164), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -163), 0), 100000000, 0, -162), 0), 100000000, 0, -161), 0, (("fl_topo.mli", 25, 414, 418), ("fl_topo.mli", 25, 414, 445), 0), 0, Tag1 ("Fl_topo", 9)), 0); (("let_le", 364), ((Tag1 (0, (Tag3 ((("t", 361)), 0, (0)), 100000000, 0, -160), (Tag1 (0, (Tag3 ((("key", 359)), 0, (0)), 100000000, 0, -159), (Tag1 (0, (Tag3 ((("key", 359)), 0, (0)), 100000000, 0, -158), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -157), 0), 100000000, 0, -156), 0), 100000000, 0, -155), 0), 100000000, 0, -154), 0, (("fl_topo.mli", 26, 446, 450), ("fl_topo.mli", 26, 446, 486), 0), 0, Tag1 ("Fl_topo", 10)), 0); (("find", 365), ((Tag1 (0, (Tag3 ((("t", 361)), 0, (0)), 100000000, 0, -153), (Tag1 (0, (Tag3 ((("key", 359)), 0, (0)), 100000000, 0, -152), (Tag3 ((("el_t", 360)), 0, (0)), 100000000, 0, -151), 0), 100000000, 0, -150), 0), 100000000, 0, -149), 0, (("fl_topo.mli", 27, 487, 491), ("fl_topo.mli", 27, 487, 518), 0), 0, Tag1 ("Fl_topo", 11)), 0); (("le_than", 366), ((Tag1 (0, (Tag3 ((("t", 361)), 0, (0)), 100000000, 0, -148), (Tag1 (0, (Tag3 ((("key", 359)), 0, (0)), 100000000, 0, -147), (Tag1 (0, (Tag3 ((("key", 359)), 0, (0)), 100000000, 0, -146), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -145), 0), 100000000, 0, -144), 0), 100000000, 0, -143), 0), 100000000, 0, -142), 0, (("fl_topo.mli", 28, 519, 523), ("fl_topo.mli", 28, 519, 560), 0), 0, Tag1 ("Fl_topo", 12)), 0); (("key", 367), ((Tag1 (0, (Tag3 ((("el_t", 360)), 0, (0)), 100000000, 0, -141), (Tag3 ((("key", 359)), 0, (0)), 100000000, 0, -140), 0), 100000000, 0, -139), 0, (("fl_topo.mli", 29, 561, 565), ("fl_topo.mli", 29, 561, 586), 0), 0, Tag1 ("Fl_topo", 13)), 0); (("iter_up", 368), ((Tag1 (0, (Tag1 (0, (Tag3 ((("el_t", 360)), 0, (0)), 100000000, 0, -138), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -137), 0), 100000000, 0, -136), (Tag1 (0, (Tag3 ((("t", 361)), 0, (0)), 100000000, 0, -135), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -134), 0), 100000000, 0, -133), 0), 100000000, 0, -132), 0, (("fl_topo.mli", 30, 587, 591), ("fl_topo.mli", 30, 587, 632), 0), 0, Tag1 ("Fl_topo", 14)), 0); (("iter_down", 369), ((Tag1 (0, (Tag1 (0, (Tag3 ((("el_t", 360)), 0, (0)), 100000000, 0, -131), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -130), 0), 100000000, 0, -129), (Tag1 (0, (Tag3 ((("t", 361)), 0, (0)), 100000000, 0, -128), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -127), 0), 100000000, 0, -126), 0), 100000000, 0, -125), 0, (("fl_topo.mli", 31, 633, 637), ("fl_topo.mli", 31, 633, 680), 0), 0, Tag1 ("Fl_topo", 15)), 0); (("iter_up_at", 370), ((Tag1 (0, (Tag1 (0, (Tag3 ((("el_t", 360)), 0, (0)), 100000000, 0, -124), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -123), 0), 100000000, 0, -122), (Tag1 (0, (Tag3 ((("t", 361)), 0, (0)), 100000000, 0, -121), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("key", 359)), 0, (0)), 100000000, 0, -120)], (0)), 100000000, 0, -119), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -118), 0), 100000000, 0, -117), 0), 100000000, 0, -116), 0), 100000000, 0, -115), 0, (("fl_topo.mli", 32, 681, 685), ("fl_topo.mli", 32, 681, 741), 0), 0, Tag1 ("Fl_topo", 16)), 0); (("iter_down_at", 371), ((Tag1 (0, (Tag1 (0, (Tag3 ((("el_t", 360)), 0, (0)), 100000000, 0, -114), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -113), 0), 100000000, 0, -112), (Tag1 (0, (Tag3 ((("t", 361)), 0, (0)), 100000000, 0, -111), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("key", 359)), 0, (0)), 100000000, 0, -110)], (0)), 100000000, 0, -109), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), 0), 100000000, 0, -105), 0, (("fl_topo.mli", 33, 742, 746), ("fl_topo.mli", 33, 742, 804), 0), 0, Tag1 ("Fl_topo", 17)), 0); (("clear", 372), ((Tag1 (0, (Tag3 ((("t", 361)), 0, (0)), 100000000, 0, -104), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -103), 0), 100000000, 0, -102), 0, (("fl_topo.mli", 34, 805, 809), ("fl_topo.mli", 34, 805, 830), 0), 0, Tag1 ("Fl_topo", 18)), 0); (("replace", 373), ((Tag1 (0, (Tag3 ((("t", 361)), 0, (0)), 100000000, 0, -101), (Tag1 (0, (Tag3 ((("key", 359)), 0, (0)), 100000000, 0, -100), (Tag1 (0, (Tag3 ((("el_t", 360)), 0, (0)), 100000000, 0, -99), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -98), 0), 100000000, 0, -97), 0), 100000000, 0, -96), 0), 100000000, 0, -95), 0, (("fl_topo.mli", 35, 831, 835), ("fl_topo.mli", 35, 831, 873), 0), 0, Tag1 ("Fl_topo", 19)), 0); (("delete", 374), ((Tag1 (0, (Tag3 ((("t", 361)), 0, (0)), 100000000, 0, -94), (Tag1 (0, (Tag3 ((("key", 359)), 0, (0)), 100000000, 0, -93), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -92), 0), 100000000, 0, -91), 0), 100000000, 0, -90), 0, (("fl_topo.mli", 36, 874, 878), ("fl_topo.mli", 36, 874, 907), 0), 0, Tag1 ("Fl_topo", 20)), 0); (("copy", 375), ((Tag1 (0, (Tag3 ((("t", 361)), 0, (0)), 100000000, 0, -89), (Tag3 ((("t", 361)), 0, (0)), 100000000, 0, -88), 0), 100000000, 0, -87), 0, (("fl_topo.mli", 37, 908, 912), ("fl_topo.mli", 37, 908, 929), 0), 0, Tag1 ("Fl_topo", 21)), 0)])), 0, (("fl_topo.mli", 40, 937, 937), ("fl_topo.mli", 42, 998, 1028), 0), Tag1 ("Fl_topo", 26)), 0, 0)], "Fl_topo", [("Fl_topo", ("\164]\186QS\172<\218\028_U\201\023y\b\027")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [1; (0)])

    end
