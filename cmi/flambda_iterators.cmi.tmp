val apply_on_subexpressions :
  (Flambda.t -> unit) -> (Flambda.named -> unit) -> Flambda.t -> unit
val map_subexpressions :
  (Flambda.t -> Flambda.t) ->
  (Variable.t -> Flambda.named -> Flambda.named) -> Flambda.t -> Flambda.t
val iter :
  (Flambda.t -> unit) -> (Flambda.named -> unit) -> Flambda.t -> unit
val iter_expr : (Flambda.t -> unit) -> Flambda.t -> unit
val iter_on_named :
  (Flambda.t -> unit) -> (Flambda.named -> unit) -> Flambda.named -> unit
val iter_named : (Flambda.named -> unit) -> Flambda.t -> unit
val iter_named_on_named : (Flambda.named -> unit) -> Flambda.named -> unit
val iter_toplevel :
  (Flambda.t -> unit) -> (Flambda.named -> unit) -> Flambda.t -> unit
val iter_named_toplevel :
  (Flambda.t -> unit) -> (Flambda.named -> unit) -> Flambda.named -> unit
val iter_on_sets_of_closures :
  (Flambda.set_of_closures -> unit) -> Flambda.t -> unit
val iter_on_set_of_closures_of_program :
  Flambda.program ->
  f:(constant:bool -> Flambda.set_of_closures -> unit) -> unit
val iter_all_immutable_let_and_let_rec_bindings :
  Flambda.t -> f:(Variable.t -> Flambda.named -> unit) -> unit
val iter_all_toplevel_immutable_let_and_let_rec_bindings :
  Flambda.t -> f:(Variable.t -> Flambda.named -> unit) -> unit
val iter_exprs_at_toplevel_of_program :
  Flambda.program -> f:(Flambda.t -> unit) -> unit
val iter_named_of_program :
  Flambda.program -> f:(Flambda.named -> unit) -> unit
val iter_constant_defining_values_on_program :
  Flambda.program -> f:(Flambda.constant_defining_value -> unit) -> unit
val iter_apply_on_program :
  Flambda.program -> f:(Flambda.apply -> unit) -> unit
val map :
  (Flambda.t -> Flambda.t) ->
  (Flambda.named -> Flambda.named) -> Flambda.t -> Flambda.t
val map_expr : (Flambda.t -> Flambda.t) -> Flambda.t -> Flambda.t
val map_named : (Flambda.named -> Flambda.named) -> Flambda.t -> Flambda.t
val map_toplevel :
  (Flambda.t -> Flambda.t) ->
  (Flambda.named -> Flambda.named) -> Flambda.t -> Flambda.t
val map_toplevel_expr : (Flambda.t -> Flambda.t) -> Flambda.t -> Flambda.t
val map_toplevel_named :
  (Flambda.named -> Flambda.named) -> Flambda.t -> Flambda.t
val map_symbols : Flambda.t -> f:(Symbol.t -> Symbol.t) -> Flambda.t
val map_symbols_on_set_of_closures :
  Flambda.set_of_closures ->
  f:(Symbol.t -> Symbol.t) -> Flambda.set_of_closures
val map_toplevel_sets_of_closures :
  Flambda.t ->
  f:(Flambda.set_of_closures -> Flambda.set_of_closures) -> Flambda.t
val map_apply : Flambda.t -> f:(Flambda.apply -> Flambda.apply) -> Flambda.t
val map_function_bodies :
  Flambda.set_of_closures ->
  f:(Flambda.t -> Flambda.t) -> Flambda.set_of_closures
val map_sets_of_closures :
  Flambda.t ->
  f:(Flambda.set_of_closures -> Flambda.set_of_closures) -> Flambda.t
val map_sets_of_closures_of_program :
  Flambda.program ->
  f:(Flambda.set_of_closures -> Flambda.set_of_closures) -> Flambda.program
val map_project_var_to_expr_opt :
  Flambda.t -> f:(Flambda.project_var -> Flambda.t option) -> Flambda.t
val map_project_var_to_named_opt :
  Flambda.t -> f:(Flambda.project_var -> Flambda.named option) -> Flambda.t
val map_exprs_at_toplevel_of_program :
  Flambda.program -> f:(Flambda.t -> Flambda.t) -> Flambda.program
val map_named_of_program :
  Flambda.program ->
  f:(Variable.t -> Flambda.named -> Flambda.named) -> Flambda.program
val map_all_immutable_let_and_let_rec_bindings :
  Flambda.t -> f:(Variable.t -> Flambda.named -> Flambda.named) -> Flambda.t
val fold_function_decls_ignoring_stubs :
  Flambda.set_of_closures ->
  init:'a ->
  f:(fun_var:Variable.t ->
     function_decl:Flambda.function_declaration -> 'a -> 'a) ->("DEBUG:rule", [(("apply_on_subexpressions", 414), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -302), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -301), 0), 100000000, 0, -300), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -299), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -298), 0), 100000000, 0, -297), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -296), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -295), 0), 100000000, 0, -294), 0), 100000000, 0, -293), 0), 100000000, 0, -292), 0, (("middle_end/flambda/flambda_iterators.mli", 26, 1591, 1591), ("middle_end/flambda/flambda_iterators.mli", 30, 1688, 1697), 0), 0, Tag1 ("Flambda_iterators", 0)), 0); (("map_subexpressions", 415), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -291), (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -290), 0), 100000000, 0, -289), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Variable")), "t"), 0, (0)), 100000000, 0, -288), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -287), (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -286), 0), 100000000, 0, -285), 0), 100000000, 0, -284), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -283), (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -282), 0), 100000000, 0, -281), 0), 100000000, 0, -280), 0), 100000000, 0, -279), 0, (("middle_end/flambda/flambda_iterators.mli", 32, 1699, 1699), ("middle_end/flambda/flambda_iterators.mli", 36, 1819, 1833), 0), 0, Tag1 ("Flambda_iterators", 1)), 0); (("iter", 416), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -278), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -277), 0), 100000000, 0, -276), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -275), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -274), 0), 100000000, 0, -273), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -272), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -271), 0), 100000000, 0, -270), 0), 100000000, 0, -269), 0), 100000000, 0, -268), 0, (("middle_end/flambda/flambda_iterators.mli", 40, 1924, 1924), ("middle_end/flambda/flambda_iterators.mli", 44, 2002, 2011), 0), 0, Tag1 ("Flambda_iterators", 2)), 0); (("iter_expr", 417), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -267), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -266), 0), 100000000, 0, -265), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -264), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -263), 0), 100000000, 0, -262), 0), 100000000, 0, -261), 0, (("middle_end/flambda/flambda_iterators.mli", 46, 2013, 2013), ("middle_end/flambda/flambda_iterators.mli", 49, 2067, 2076), 0), 0, Tag1 ("Flambda_iterators", 3)), 0); (("iter_on_named", 418), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -260), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -259), 0), 100000000, 0, -258), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -257), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -256), 0), 100000000, 0, -255), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -254), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -253), 0), 100000000, 0, -252), 0), 100000000, 0, -251), 0), 100000000, 0, -250), 0, (("middle_end/flambda/flambda_iterators.mli", 51, 2078, 2078), ("middle_end/flambda/flambda_iterators.mli", 55, 2169, 2178), 0), 0, Tag1 ("Flambda_iterators", 4)), 0); (("iter_named", 419), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -249), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -248), 0), 100000000, 0, -247), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -246), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -245), 0), 100000000, 0, -244), 0), 100000000, 0, -243), 0, (("middle_end/flambda/flambda_iterators.mli", 59, 2315, 2315), ("middle_end/flambda/flambda_iterators.mli", 62, 2374, 2383), 0), 0, Tag1 ("Flambda_iterators", 5)), 0); (("iter_named_on_named", 420), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -242), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -241), 0), 100000000, 0, -240), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -239), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -238), 0), 100000000, 0, -237), 0), 100000000, 0, -236), 0, (("middle_end/flambda/flambda_iterators.mli", 68, 2539, 2539), ("middle_end/flambda/flambda_iterators.mli", 71, 2611, 2620), 0), 0, Tag1 ("Flambda_iterators", 6)), 0); (("iter_toplevel", 421), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -235), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -234), 0), 100000000, 0, -233), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -232), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -231), 0), 100000000, 0, -230), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -229), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -228), 0), 100000000, 0, -227), 0), 100000000, 0, -226), 0), 100000000, 0, -225), 0, (("middle_end/flambda/flambda_iterators.mli", 76, 2844, 2844), ("middle_end/flambda/flambda_iterators.mli", 80, 2931, 2940), 0), 0, Tag1 ("Flambda_iterators", 7)), 0); (("iter_named_toplevel", 422), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -224), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -223), 0), 100000000, 0, -222), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -221), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -220), 0), 100000000, 0, -219), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -218), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -217), 0), 100000000, 0, -216), 0), 100000000, 0, -215), 0), 100000000, 0, -214), 0, (("middle_end/flambda/flambda_iterators.mli", 82, 2942, 2942), ("middle_end/flambda/flambda_iterators.mli", 86, 3039, 3048), 0), 0, Tag1 ("Flambda_iterators", 8)), 0); (("iter_on_sets_of_closures", 423), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "set_of_closures"), 0, (0)), 100000000, 0, -213), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -212), 0), 100000000, 0, -211), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -210), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -209), 0), 100000000, 0, -208), 0), 100000000, 0, -207), 0, (("middle_end/flambda/flambda_iterators.mli", 88, 3050, 3050), ("middle_end/flambda/flambda_iterators.mli", 91, 3133, 3142), 0), 0, Tag1 ("Flambda_iterators", 9)), 0); (("iter_on_set_of_closures_of_program", 424), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "program"), 0, (0)), 100000000, 0, -206), (Tag1 (("f"), (Tag1 (("constant"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -205), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "set_of_closures"), 0, (0)), 100000000, 0, -204), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -203), 0), 100000000, 0, -202), 0), 100000000, 0, -201), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -200), 0), 100000000, 0, -199), 0), 100000000, 0, -198), 0, (("middle_end/flambda/flambda_iterators.mli", 93, 3144, 3144), ("middle_end/flambda/flambda_iterators.mli", 96, 3262, 3271), 0), 0, Tag1 ("Flambda_iterators", 10)), 0); (("iter_all_immutable_let_and_let_rec_bindings", 425), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -197), (Tag1 (("f"), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Variable")), "t"), 0, (0)), 100000000, 0, -196), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -195), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -194), 0), 100000000, 0, -193), 0), 100000000, 0, -192), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -191), 0), 100000000, 0, -190), 0), 100000000, 0, -189), 0, (("middle_end/flambda/flambda_iterators.mli", 98, 3273, 3273), ("middle_end/flambda/flambda_iterators.mli", 101, 3381, 3390), 0), 0, Tag1 ("Flambda_iterators", 11)), 0); (("iter_all_toplevel_immutable_let_and_let_rec_bindings", 426), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -188), (Tag1 (("f"), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Variable")), "t"), 0, (0)), 100000000, 0, -187), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -186), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -185), 0), 100000000, 0, -184), 0), 100000000, 0, -183), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -182), 0), 100000000, 0, -181), 0), 100000000, 0, -180), 0, (("middle_end/flambda/flambda_iterators.mli", 103, 3392, 3392), ("middle_end/flambda/flambda_iterators.mli", 106, 3509, 3518), 0), 0, Tag1 ("Flambda_iterators", 12)), 0); (("iter_exprs_at_toplevel_of_program", 427), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "program"), 0, (0)), 100000000, 0, -179), (Tag1 (("f"), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -178), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -177), 0), 100000000, 0, -176), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -175), 0), 100000000, 0, -174), 0), 100000000, 0, -173), 0, (("middle_end/flambda/flambda_iterators.mli", 108, 3520, 3520), ("middle_end/flambda/flambda_iterators.mli", 111, 3606, 3615), 0), 0, Tag1 ("Flambda_iterators", 13)), 0); (("iter_named_of_program", 428), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "program"), 0, (0)), 100000000, 0, -172), (Tag1 (("f"), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -171), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -170), 0), 100000000, 0, -169), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -168), 0), 100000000, 0, -167), 0), 100000000, 0, -166), 0, (("middle_end/flambda/flambda_iterators.mli", 113, 3617, 3617), ("middle_end/flambda/flambda_iterators.mli", 116, 3695, 3704), 0), 0, Tag1 ("Flambda_iterators", 14)), 0); (("iter_constant_defining_values_on_program", 429), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "program"), 0, (0)), 100000000, 0, -165), (Tag1 (("f"), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "constant_defining_value"), 0, (0)), 100000000, 0, -164), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -163), 0), 100000000, 0, -162), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -161), 0), 100000000, 0, -160), 0), 100000000, 0, -159), 0, (("middle_end/flambda/flambda_iterators.mli", 118, 3706, 3706), ("middle_end/flambda/flambda_iterators.mli", 121, 3820, 3829), 0), 0, Tag1 ("Flambda_iterators", 15)), 0); (("iter_apply_on_program", 430), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "program"), 0, (0)), 100000000, 0, -158), (Tag1 (("f"), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "apply"), 0, (0)), 100000000, 0, -157), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -156), 0), 100000000, 0, -155), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -154), 0), 100000000, 0, -153), 0), 100000000, 0, -152), 0, (("middle_end/flambda/flambda_iterators.mli", 123, 3831, 3831), ("middle_end/flambda/flambda_iterators.mli", 126, 3909, 3918), 0), 0, Tag1 ("Flambda_iterators", 16)), 0); (("map", 431), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -151), (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -150), 0), 100000000, 0, -149), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -148), (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -147), 0), 100000000, 0, -146), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -145), (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -144), 0), 100000000, 0, -143), 0), 100000000, 0, -142), 0), 100000000, 0, -141), 0, (("middle_end/flambda/flambda_iterators.mli", 128, 3920, 3920), ("middle_end/flambda/flambda_iterators.mli", 132, 4011, 4025), 0), 0, Tag1 ("Flambda_iterators", 17)), 0); (("map_expr", 432), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -140), (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -139), 0), 100000000, 0, -138), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -137), (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -136), 0), 100000000, 0, -135), 0), 100000000, 0, -134), 0, (("middle_end/flambda/flambda_iterators.mli", 134, 4027, 4027), ("middle_end/flambda/flambda_iterators.mli", 137, 4085, 4099), 0), 0, Tag1 ("Flambda_iterators", 18)), 0); (("map_named", 433), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -133), (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -132), 0), 100000000, 0, -131), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -130), (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -129), 0), 100000000, 0, -128), 0), 100000000, 0, -127), 0, (("middle_end/flambda/flambda_iterators.mli", 139, 4101, 4101), ("middle_end/flambda/flambda_iterators.mli", 142, 4168, 4182), 0), 0, Tag1 ("Flambda_iterators", 19)), 0); (("map_toplevel", 434), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -126), (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -125), 0), 100000000, 0, -124), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -123), (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -122), 0), 100000000, 0, -121), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -120), (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -119), 0), 100000000, 0, -118), 0), 100000000, 0, -117), 0), 100000000, 0, -116), 0, (("middle_end/flambda/flambda_iterators.mli", 144, 4184, 4184), ("middle_end/flambda/flambda_iterators.mli", 148, 4284, 4298), 0), 0, Tag1 ("Flambda_iterators", 20)), 0); (("map_toplevel_expr", 435), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -115), (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -114), 0), 100000000, 0, -113), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -112), (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -111), 0), 100000000, 0, -110), 0), 100000000, 0, -109), 0, (("middle_end/flambda/flambda_iterators.mli", 150, 4300, 4300), ("middle_end/flambda/flambda_iterators.mli", 153, 4367, 4381), 0), 0, Tag1 ("Flambda_iterators", 21)), 0); (("map_toplevel_named", 436), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -108), (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -107), 0), 100000000, 0, -106), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -105), (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -104), 0), 100000000, 0, -103), 0), 100000000, 0, -102), 0, (("middle_end/flambda/flambda_iterators.mli", 155, 4383, 4383), ("middle_end/flambda/flambda_iterators.mli", 158, 4459, 4473), 0), 0, Tag1 ("Flambda_iterators", 22)), 0); (("map_symbols", 437), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -101), (Tag1 (("f"), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Symbol")), "t"), 0, (0)), 100000000, 0, -100), (Tag3 (Tag1 ((Tag2 ("Symbol")), "t"), 0, (0)), 100000000, 0, -99), 0), 100000000, 0, -98), (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -97), 0), 100000000, 0, -96), 0), 100000000, 0, -95), 0, (("middle_end/flambda/flambda_iterators.mli", 160, 4475, 4475), ("middle_end/flambda/flambda_iterators.mli", 163, 4536, 4550), 0), 0, Tag1 ("Flambda_iterators", 23)), 0); (("map_symbols_on_set_of_closures", 438), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "set_of_closures"), 0, (0)), 100000000, 0, -94), (Tag1 (("f"), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Symbol")), "t"), 0, (0)), 100000000, 0, -93), (Tag3 (Tag1 ((Tag2 ("Symbol")), "t"), 0, (0)), 100000000, 0, -92), 0), 100000000, 0, -91), (Tag3 (Tag1 ((Tag2 ("Flambda")), "set_of_closures"), 0, (0)), 100000000, 0, -90), 0), 100000000, 0, -89), 0), 100000000, 0, -88), 0, (("middle_end/flambda/flambda_iterators.mli", 165, 4552, 4552), ("middle_end/flambda/flambda_iterators.mli", 168, 4645, 4673), 0), 0, Tag1 ("Flambda_iterators", 24)), 0); (("map_toplevel_sets_of_closures", 439), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -87), (Tag1 (("f"), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "set_of_closures"), 0, (0)), 100000000, 0, -86), (Tag3 (Tag1 ((Tag2 ("Flambda")), "set_of_closures"), 0, (0)), 100000000, 0, -85), 0), 100000000, 0, -84), (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -83), 0), 100000000, 0, -82), 0), 100000000, 0, -81), 0, (("middle_end/flambda/flambda_iterators.mli", 170, 4675, 4675), ("middle_end/flambda/flambda_iterators.mli", 173, 4784, 4798), 0), 0, Tag1 ("Flambda_iterators", 25)), 0); (("map_apply", 440), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -80), (Tag1 (("f"), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "apply"), 0, (0)), 100000000, 0, -79), (Tag3 (Tag1 ((Tag2 ("Flambda")), "apply"), 0, (0)), 100000000, 0, -78), 0), 100000000, 0, -77), (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -76), 0), 100000000, 0, -75), 0), 100000000, 0, -74), 0, (("middle_end/flambda/flambda_iterators.mli", 175, 4800, 4800), ("middle_end/flambda/flambda_iterators.mli", 178, 4869, 4883), 0), 0, Tag1 ("Flambda_iterators", 26)), 0); (("map_function_bodies", 441), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "set_of_closures"), 0, (0)), 100000000, 0, -73), (Tag1 (("f"), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -72), (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -71), 0), 100000000, 0, -70), (Tag3 (Tag1 ((Tag2 ("Flambda")), "set_of_closures"), 0, (0)), 100000000, 0, -69), 0), 100000000, 0, -68), 0), 100000000, 0, -67), 0, (("middle_end/flambda/flambda_iterators.mli", 180, 4885, 4885), ("middle_end/flambda/flambda_iterators.mli", 183, 4970, 4998), 0), 0, Tag1 ("Flambda_iterators", 27)), 0); (("map_sets_of_closures", 442), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -66), (Tag1 (("f"), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "set_of_closures"), 0, (0)), 100000000, 0, -65), (Tag3 (Tag1 ((Tag2 ("Flambda")), "set_of_closures"), 0, (0)), 100000000, 0, -64), 0), 100000000, 0, -63), (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("middle_end/flambda/flambda_iterators.mli", 185, 5000, 5000), ("middle_end/flambda/flambda_iterators.mli", 188, 5100, 5114), 0), 0, Tag1 ("Flambda_iterators", 28)), 0); (("map_sets_of_closures_of_program", 443), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "program"), 0, (0)), 100000000, 0, -59), (Tag1 (("f"), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "set_of_closures"), 0, (0)), 100000000, 0, -58), (Tag3 (Tag1 ((Tag2 ("Flambda")), "set_of_closures"), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), (Tag3 (Tag1 ((Tag2 ("Flambda")), "program"), 0, (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("middle_end/flambda/flambda_iterators.mli", 190, 5116, 5116), ("middle_end/flambda/flambda_iterators.mli", 193, 5233, 5253), 0), 0, Tag1 ("Flambda_iterators", 29)), 0); (("map_project_var_to_expr_opt", 444), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -52), (Tag1 (("f"), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "project_var"), 0, (0)), 100000000, 0, -51), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -50)], (0)), 100000000, 0, -49), 0), 100000000, 0, -48), (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -47), 0), 100000000, 0, -46), 0), 100000000, 0, -45), 0, (("middle_end/flambda/flambda_iterators.mli", 195, 5255, 5255), ("middle_end/flambda/flambda_iterators.mli", 198, 5351, 5365), 0), 0, Tag1 ("Flambda_iterators", 30)), 0); (("map_project_var_to_named_opt", 445), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -44), (Tag1 (("f"), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "project_var"), 0, (0)), 100000000, 0, -43), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -42)], (0)), 100000000, 0, -41), 0), 100000000, 0, -40), (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0), 100000000, 0, -37), 0, (("middle_end/flambda/flambda_iterators.mli", 200, 5367, 5367), ("middle_end/flambda/flambda_iterators.mli", 203, 5468, 5482), 0), 0, Tag1 ("Flambda_iterators", 31)), 0); (("map_exprs_at_toplevel_of_program", 446), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "program"), 0, (0)), 100000000, 0, -36), (Tag1 (("f"), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -35), (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -34), 0), 100000000, 0, -33), (Tag3 (Tag1 ((Tag2 ("Flambda")), "program"), 0, (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("middle_end/flambda/flambda_iterators.mli", 205, 5484, 5484), ("middle_end/flambda/flambda_iterators.mli", 208, 5574, 5594), 0), 0, Tag1 ("Flambda_iterators", 32)), 0); (("map_named_of_program", 447), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "program"), 0, (0)), 100000000, 0, -29), (Tag1 (("f"), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Variable")), "t"), 0, (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -27), (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), (Tag3 (Tag1 ((Tag2 ("Flambda")), "program"), 0, (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("middle_end/flambda/flambda_iterators.mli", 210, 5596, 5596), ("middle_end/flambda/flambda_iterators.mli", 213, 5696, 5716), 0), 0, Tag1 ("Flambda_iterators", 33)), 0); (("map_all_immutable_let_and_let_rec_bindings", 448), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -20), (Tag1 (("f"), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Variable")), "t"), 0, (0)), 100000000, 0, -19), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -18), (Tag3 (Tag1 ((Tag2 ("Flambda")), "named"), 0, (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), (Tag3 (Tag1 ((Tag2 ("Flambda")), "t"), 0, (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("middle_end/flambda/flambda_iterators.mli", 215, 5718, 5718), ("middle_end/flambda/flambda_iterators.mli", 218, 5834, 5848), 0), 0, Tag1 ("Flambda_iterators", 34)), 0); (("fold_function_decls_ignoring_stubs", 449), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "set_of_closures"), 0, (0)), 100000000, 0, -11), (Tag1 (("init"), ((("a")), 100000000, 0, -5), (Tag1 (("f"), (Tag1 (("fun_var"), (Tag3 (Tag1 ((Tag2 ("Variable")), "t"), 0, (0)), 100000000, 0, -10), (Tag1 (("function_decl"), (Tag3 (Tag1 ((Tag2 ("Flambda")), "function_declaration"), 0, (0)), 100000000, 0, -9), (Tag1 (0, ((("a")), 100000000, 0, -5), ((("a")), 100000000, 0, -5), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0), 100000000, 0, -6), ((("a")), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("middle_end/flambda/flambda_iterators.mli", 220, 5850, 5850), ("middle_end/flambda/flambda_iterators.mli", 227, 6029, 6036), 0), 0, Tag1 ("Flambda_iterators", 35)), 0)], "Flambda_iterators", [("Flambda_iterators", ("\"\202\207\b\205C\1968\227\006\131\163\192A\157\184")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Variable", ("\228'\154\1834\146\207\147+\193Aq\209h\190\220")); ("Var_within_closure", ("vQ\173\251u\026\012+}j\020C}T\151\220")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Tag", ("\252\157\132\005\195\228\232\133\246\237\233\224\012\143\192\218")); ("Symbol", ("\179q\177\031_\169\139a\192\019\188\000V\236\232\t")); ("Subst", ("\021\031\148\223\127\186\189\135\027}\145r\216\143\177\156")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Static_exception", ("2{#\175\226\185\147\146\176\140\029O\023p\024\\")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Set_of_closures_origin", ("$n\234\014\162\130\210K\171\btrA\244\254\195")); ("Set_of_closures_id", ("\178\228\011\028\027~\211\166\244\180\220-W\145_\243")); ("Projection", ("\250\207\030\021*\193\225\168\189!\224\228\192\212\236\224")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Parameter", ("*\152\238G\163\217\2377/\t\206\131\226\216K0")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Numbers", ("\004\020\227\212|\031Q6\146\217\211\156\221\234\254\195")); ("Mutable_variable", ("B^*^9`\212\152j\145_\017i.\128?")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Load_path", ("\012@\228l\230\164S\172h\1726X\020\252o}")); ("Linkage_name", ("\023\000\172\166 s\214\ns\155s\156\005\252\154\207")); ("Lambda", ("\180\1419\236'\146K$\128\006\135q\135V\029\180")); ("Internal_variable_names", ("\024|\208(\224\206\012\006\179\203\020\000\179\228\154\218")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("Flambda", ("\195J|\022>U\206!\211\212\185N\180zh\241")); ("Env", ("\021\n\181\142x\b\169j\227\"\017\248*\178\245\223")); ("Debuginfo", ("\131\251\175\217P\194M\163\022\151\002\005\006\185:\185")); ("Compilation_unit", ("\007\240\020\003jK\000\210\174\021\189.8^\028K")); ("Cmi_format", ("6\177\bU\139\"\023\152=\249\135\174\b\011Cg")); ("Closure_origin", ("G\222\200`\213\247\022M|O\1488\194\030\187\229")); ("Closure_id", ("k\221yCH\015\186G\246]\003\233\198\179\217A")); ("Closure_element", ("a\194\018\239D1\143{\156A\011\219H#\149A")); ("Clambda_primitives", ("\199\176\237Hv\205\152\14717\179\017\246\221x`")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216")); ("Allocated_const", ("\029\027.W\160\170!\199Q2\235\240\167\031,\004"))], [(0)])

  'a
