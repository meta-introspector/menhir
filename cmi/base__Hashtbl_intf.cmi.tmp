module Key :
  sig
    module type S =
      sig
        type t
        val compare : t Base__Ppx_compare_lib.compare
        val sexp_of_t : t -> Sexplib0.Sexp.t
        val hash : t -> int
      end
    type 'a t = (module S with type t = 'a)
  end
module Merge_into_action : sig type 'a t = Remove | Set_to of 'a end
module type Accessors =
  sig
    type ('a, 'b) t
    type 'a key
    val sexp_of_key : ('a, 'b) t -> 'a key -> Base__.Sexp.t
    val clear : ('a, 'b) t -> unit
    val copy : ('a, 'b) t -> ('a, 'b) t
    val fold :
      ('a, 'b) t ->
      init:'acc -> f:(key:'a key -> data:'b -> 'acc -> 'acc) -> 'acc
    val iter_keys : ('a, 'b) t -> f:('a key -> unit) -> unit
    val iter : ('a, 'b) t -> f:('b -> unit) -> unit
    val iteri : ('a, 'b) t -> f:(key:'a key -> data:'b -> unit) -> unit
    val existsi : ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> bool
    val exists : ('a, 'b) t -> f:('b -> bool) -> bool
    val for_alli : ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> bool
    val for_all : ('a, 'b) t -> f:('b -> bool) -> bool
    val counti : ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> int
    val count : ('a, 'b) t -> f:('b -> bool) -> int
    val length : ('a, 'b) t -> int
    val is_empty : ('a, 'b) t -> bool
    val mem : ('a, 'b) t -> 'a key -> bool
    val remove : ('a, 'b) t -> 'a key -> unit
    val choose : ('a, 'b) t -> ('a key * 'b) option
    val choose_exn : ('a, 'b) t -> 'a key * 'b
    val choose_randomly :
      ?random_state:Base__.Random.State.t ->
      ('a, 'b) t -> ('a key * 'b) option
    val choose_randomly_exn :
      ?random_state:Base__.Random.State.t -> ('a, 'b) t -> 'a key * 'b
    val set : ('a, 'b) t -> key:'a key -> data:'b -> unit
    val add : ('a, 'b) t -> key:'a key -> data:'b -> [ `Duplicate | `Ok ]
    val add_exn : ('a, 'b) t -> key:'a key -> data:'b -> unit
    val change : ('a, 'b) t -> 'a key -> f:('b option -> 'b option) -> unit
    val update : ('a, 'b) t -> 'a key -> f:('b option -> 'b) -> unit
    val update_and_return : ('a, 'b) t -> 'a key -> f:('b option -> 'b) -> 'b
    val map : ('a, 'b) t -> f:('b -> 'c) -> ('a, 'c) t
    val mapi : ('a, 'b) t -> f:(key:'a key -> data:'b -> 'c) -> ('a, 'c) t
    val filter_map : ('a, 'b) t -> f:('b -> 'c option) -> ('a, 'c) t
    val filter_mapi :
      ('a, 'b) t -> f:(key:'a key -> data:'b -> 'c option) -> ('a, 'c) t
    val filter_keys : ('a, 'b) t -> f:('a key -> bool) -> ('a, 'b) t
    val filter : ('a, 'b) t -> f:('b -> bool) -> ('a, 'b) t
    val filteri :
      ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> ('a, 'b) t
    val partition_map :
      ('a, 'b) t ->
      f:('b -> ('c, 'd) Base__.Either.t) -> ('a, 'c) t * ('a, 'd) t
    val partition_mapi :
      ('a, 'b) t ->
      f:(key:'a key -> data:'b -> ('c, 'd) Base__.Either.t) ->
      ('a, 'c) t * ('a, 'd) t
    val partition_tf :
      ('a, 'b) t -> f:('b -> bool) -> ('a, 'b) t * ('a, 'b) t
    val partitioni_tf :
      ('a, 'b) t ->
      f:(key:'a key -> data:'b -> bool) -> ('a, 'b) t * ('a, 'b) t
    val find_or_add : ('a, 'b) t -> 'a key -> default:(unit -> 'b) -> 'b
    val findi_or_add : ('a, 'b) t -> 'a key -> default:('a key -> 'b) -> 'b
    val find : ('a, 'b) t -> 'a key -> 'b option
    val find_exn : ('a, 'b) t -> 'a key -> 'b
    val find_and_call :
      ('a, 'b) t ->
      'a key -> if_found:('b -> 'c) -> if_not_found:('a key -> 'c) -> 'c
    val find_and_call1 :
      ('a, 'b) t ->
      'a key ->
      a:'d ->
      if_found:('b -> 'd -> 'c) -> if_not_found:('a key -> 'd -> 'c) -> 'c
    val find_and_call2 :
      ('a, 'b) t ->
      'a key ->
      a:'d ->
      b:'e ->
      if_found:('b -> 'd -> 'e -> 'c) ->
      if_not_found:('a key -> 'd -> 'e -> 'c) -> 'c
    val findi_and_call :
      ('a, 'b) t ->
      'a key ->
      if_found:(key:'a key -> data:'b -> 'c) ->
      if_not_found:('a key -> 'c) -> 'c
    val findi_and_call1 :
      ('a, 'b) t ->
      'a key ->
      a:'d ->
      if_found:(key:'a key -> data:'b -> 'd -> 'c) ->
      if_not_found:('a key -> 'd -> 'c) -> 'c
    val findi_and_call2 :
      ('a, 'b) t ->
      'a key ->
      a:'d ->
      b:'e ->
      if_found:(key:'a key -> data:'b -> 'd -> 'e -> 'c) ->
      if_not_found:('a key -> 'd -> 'e -> 'c) -> 'c
    val find_and_remove : ('a, 'b) t -> 'a key -> 'b option
    val merge :
      ('k, 'a) t ->
      ('k, 'b) t ->
      f:(key:'k key ->
         [ `Both of 'a * 'b | `Left of 'a | `Right of 'b ] -> 'c option) ->
      ('k, 'c) t
    val merge_into :
      src:('k, 'a) t ->
      dst:('k, 'b) t ->
      f:(key:'k key -> 'a -> 'b option -> 'b Merge_into_action.t) -> unit
    val keys : ('a, 'b) t -> 'a key list
    val data : ('a, 'b) t -> 'b list
    val filter_keys_inplace : ('a, 'b) t -> f:('a key -> bool) -> unit
    val filter_inplace : ('a, 'b) t -> f:('b -> bool) -> unit
    val filteri_inplace :
      ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> unit
    val map_inplace : ('a, 'b) t -> f:('b -> 'b) -> unit
    val mapi_inplace : ('a, 'b) t -> f:(key:'a key -> data:'b -> 'b) -> unit
    val filter_map_inplace : ('a, 'b) t -> f:('b -> 'b option) -> unit
    val filter_mapi_inplace :
      ('a, 'b) t -> f:(key:'a key -> data:'b -> 'b option) -> unit
    val equal : ('b -> 'b -> bool) -> ('a, 'b) t -> ('a, 'b) t -> bool
    val similar : ('b1 -> 'b2 -> bool) -> ('a, 'b1) t -> ('a, 'b2) t -> bool
    val to_alist : ('a, 'b) t -> ('a key * 'b) list
    val incr :
      ?by:int -> ?remove_if_zero:bool -> ('a, int) t -> 'a key -> unit
    val decr :
      ?by:int -> ?remove_if_zero:bool -> ('a, int) t -> 'a key -> unit
  end
module type Multi =
  sig
    type ('a, 'b) t
    type 'a key
    val add_multi : ('a, 'b list) t -> key:'a key -> data:'b -> unit
    val remove_multi : ('a, 'b list) t -> 'a key -> unit
    val find_multi : ('a, 'b list) t -> 'a key -> 'b list
  end
type ('key, 'data, 'z) create_options =
    ?growth_allowed:bool -> ?size:int -> 'key Key.t -> 'z
type ('key, 'data, 'z) create_options_without_first_class_module =
    ?growth_allowed:bool -> ?size:int -> 'z
module type Creators_generic =
  sig
    type ('a, 'b) t
    type 'a key
    type ('key, 'data, 'z) create_options
    val create : ('a key, 'b, unit -> ('a, 'b) t) create_options
    val of_alist :
      ('a key, 'b,
       ('a key * 'b) list -> [ `Duplicate_key of 'a key | `Ok of ('a, 'b) t ])
      create_options
    val of_alist_report_all_dups :
      ('a key, 'b,
       ('a key * 'b) list ->
       [ `Duplicate_keys of 'a key list | `Ok of ('a, 'b) t ])
      create_options
    val of_alist_or_error :
      ('a key, 'b, ('a key * 'b) list -> ('a, 'b) t Base__.Or_error.t)
      create_options
    val of_alist_exn :
      ('a key, 'b, ('a key * 'b) list -> ('a, 'b) t) create_options
    val of_alist_multi :
      ('a key, 'b list, ('a key * 'b) list -> ('a, 'b list) t) create_options
    val create_mapped :
      ('a key, 'b,
       get_key:('r -> 'a key) ->
       get_data:('r -> 'b) ->
       'r list -> [ `Duplicate_keys of 'a key list | `Ok of ('a, 'b) t ])
      create_options
    val create_with_key :
      ('a key, 'r,
       get_key:('r -> 'a key) ->
       'r list -> [ `Duplicate_keys of 'a key list | `Ok of ('a, 'r) t ])
      create_options
    val create_with_key_or_error :
      ('a key, 'r,
       get_key:('r -> 'a key) -> 'r list -> ('a, 'r) t Base__.Or_error.t)
      create_options
    val create_with_key_exn :
      ('a key, 'r, get_key:('r -> 'a key) -> 'r list -> ('a, 'r) t)
      create_options
    val group :
      ('a key, 'b,
       get_key:('r -> 'a key) ->
       get_data:('r -> 'b) ->
       combine:('b -> 'b -> 'b) -> 'r list -> ('a, 'b) t)
      create_options
  end
module type Creators =
  sig
    type ('a, 'b) t
    val create : ?growth_allowed:bool -> ?size:int -> 'a Key.t -> ('a, 'b) t
    val of_alist :
      ?growth_allowed:bool ->
      ?size:int ->
      'a Key.t ->
      ('a * 'b) list -> [ `Duplicate_key of 'a | `Ok of ('a, 'b) t ]
    val of_alist_report_all_dups :
      ?growth_allowed:bool ->
      ?size:int ->
      'a Key.t ->
      ('a * 'b) list -> [ `Duplicate_keys of 'a list | `Ok of ('a, 'b) t ]
    val of_alist_or_error :
      ?growth_allowed:bool ->
      ?size:int -> 'a Key.t -> ('a * 'b) list -> ('a, 'b) t Base__.Or_error.t
    val of_alist_exn :
      ?growth_allowed:bool ->
      ?size:int -> 'a Key.t -> ('a * 'b) list -> ('a, 'b) t
    val of_alist_multi :
      ?growth_allowed:bool ->
      ?size:int -> 'a Key.t -> ('a * 'b) list -> ('a, 'b list) t
    val create_mapped :
      ?growth_allowed:bool ->
      ?size:int ->
      'a Key.t ->
      get_key:('r -> 'a) ->
      get_data:('r -> 'b) ->
      'r list -> [ `Duplicate_keys of 'a list | `Ok of ('a, 'b) t ]
    val create_with_key :
      ?growth_allowed:bool ->
      ?size:int ->
      'a Key.t ->
      get_key:('r -> 'a) ->
      'r list -> [ `Duplicate_keys of 'a list | `Ok of ('a, 'r) t ]
    val create_with_key_or_error :
      ?growth_allowed:bool ->
      ?size:int ->
      'a Key.t ->
      get_key:('r -> 'a) -> 'r list -> ('a, 'r) t Base__.Or_error.t
    val create_with_key_exn :
      ?growth_allowed:bool ->
      ?size:int -> 'a Key.t -> get_key:('r -> 'a) -> 'r list -> ('a, 'r) t
    val group :
      ?growth_allowed:bool ->
      ?size:int ->
      'a Key.t ->
      get_key:('r -> 'a) ->
      get_data:('r -> 'b) ->
      combine:('b -> 'b -> 'b) -> 'r list -> ('a, 'b) t
  end
module type S_without_submodules =
  sig
    val hash : 'a -> int
    val hash_param : int -> int -> 'a -> int
    type (!'a, !'b) t
    val sexp_of_t :
      ('a -> Base__.Sexp.t) ->
      ('b -> Base__.Sexp.t) -> ('a, 'b) t -> Base__.Sexp.t
    val create : ?growth_allowed:bool -> ?size:int -> 'a Key.t -> ('a, 'b) t
    val of_alist :
      ?growth_allowed:bool ->
      ?size:int ->
      'a Key.t ->
      ('a * 'b) list -> [ `Duplicate_key of 'a | `Ok of ('a, 'b) t ]
    val of_alist_report_all_dups :
      ?growth_allowed:bool ->
      ?size:int ->
      'a Key.t ->
      ('a * 'b) list -> [ `Duplicate_keys of 'a list | `Ok of ('a, 'b) t ]
    val of_alist_or_error :
      ?growth_allowed:bool ->
      ?size:int -> 'a Key.t -> ('a * 'b) list -> ('a, 'b) t Base__.Or_error.t
    val of_alist_exn :
      ?growth_allowed:bool ->
      ?size:int -> 'a Key.t -> ('a * 'b) list -> ('a, 'b) t
    val of_alist_multi :
      ?growth_allowed:bool ->
      ?size:int -> 'a Key.t -> ('a * 'b) list -> ('a, 'b list) t
    val create_mapped :
      ?growth_allowed:bool ->
      ?size:int ->
      'a Key.t ->
      get_key:('r -> 'a) ->
      get_data:('r -> 'b) ->
      'r list -> [ `Duplicate_keys of 'a list | `Ok of ('a, 'b) t ]
    val create_with_key :
      ?growth_allowed:bool ->
      ?size:int ->
      'a Key.t ->
      get_key:('r -> 'a) ->
      'r list -> [ `Duplicate_keys of 'a list | `Ok of ('a, 'r) t ]
    val create_with_key_or_error :
      ?growth_allowed:bool ->
      ?size:int ->
      'a Key.t ->
      get_key:('r -> 'a) -> 'r list -> ('a, 'r) t Base__.Or_error.t
    val create_with_key_exn :
      ?growth_allowed:bool ->
      ?size:int -> 'a Key.t -> get_key:('r -> 'a) -> 'r list -> ('a, 'r) t
    val group :
      ?growth_allowed:bool ->
      ?size:int ->
      'a Key.t ->
      get_key:('r -> 'a) ->
      get_data:('r -> 'b) ->
      combine:('b -> 'b -> 'b) -> 'r list -> ('a, 'b) t
    type 'a key = 'a
    val sexp_of_key : ('a, 'b) t -> 'a key -> Base__.Sexp.t
    val clear : ('a, 'b) t -> unit
    val copy : ('a, 'b) t -> ('a, 'b) t
    val fold :
      ('a, 'b) t ->
      init:'acc -> f:(key:'a key -> data:'b -> 'acc -> 'acc) -> 'acc
    val iter_keys : ('a, 'b) t -> f:('a key -> unit) -> unit
    val iter : ('a, 'b) t -> f:('b -> unit) -> unit
    val iteri : ('a, 'b) t -> f:(key:'a key -> data:'b -> unit) -> unit
    val existsi : ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> bool
    val exists : ('a, 'b) t -> f:('b -> bool) -> bool
    val for_alli : ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> bool
    val for_all : ('a, 'b) t -> f:('b -> bool) -> bool
    val counti : ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> int
    val count : ('a, 'b) t -> f:('b -> bool) -> int
    val length : ('a, 'b) t -> int
    val is_empty : ('a, 'b) t -> bool
    val mem : ('a, 'b) t -> 'a key -> bool
    val remove : ('a, 'b) t -> 'a key -> unit
    val choose : ('a, 'b) t -> ('a key * 'b) option
    val choose_exn : ('a, 'b) t -> 'a key * 'b
    val choose_randomly :
      ?random_state:Base__.Random.State.t ->
      ('a, 'b) t -> ('a key * 'b) option
    val choose_randomly_exn :
      ?random_state:Base__.Random.State.t -> ('a, 'b) t -> 'a key * 'b
    val set : ('a, 'b) t -> key:'a key -> data:'b -> unit
    val add : ('a, 'b) t -> key:'a key -> data:'b -> [ `Duplicate | `Ok ]
    val add_exn : ('a, 'b) t -> key:'a key -> data:'b -> unit
    val change : ('a, 'b) t -> 'a key -> f:('b option -> 'b option) -> unit
    val update : ('a, 'b) t -> 'a key -> f:('b option -> 'b) -> unit
    val update_and_return : ('a, 'b) t -> 'a key -> f:('b option -> 'b) -> 'b
    val map : ('a, 'b) t -> f:('b -> 'c) -> ('a, 'c) t
    val mapi : ('a, 'b) t -> f:(key:'a key -> data:'b -> 'c) -> ('a, 'c) t
    val filter_map : ('a, 'b) t -> f:('b -> 'c option) -> ('a, 'c) t
    val filter_mapi :
      ('a, 'b) t -> f:(key:'a key -> data:'b -> 'c option) -> ('a, 'c) t
    val filter_keys : ('a, 'b) t -> f:('a key -> bool) -> ('a, 'b) t
    val filter : ('a, 'b) t -> f:('b -> bool) -> ('a, 'b) t
    val filteri :
      ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> ('a, 'b) t
    val partition_map :
      ('a, 'b) t ->
      f:('b -> ('c, 'd) Base__.Either.t) -> ('a, 'c) t * ('a, 'd) t
    val partition_mapi :
      ('a, 'b) t ->
      f:(key:'a key -> data:'b -> ('c, 'd) Base__.Either.t) ->
      ('a, 'c) t * ('a, 'd) t
    val partition_tf :
      ('a, 'b) t -> f:('b -> bool) -> ('a, 'b) t * ('a, 'b) t
    val partitioni_tf :
      ('a, 'b) t ->
      f:(key:'a key -> data:'b -> bool) -> ('a, 'b) t * ('a, 'b) t
    val find_or_add : ('a, 'b) t -> 'a key -> default:(unit -> 'b) -> 'b
    val findi_or_add : ('a, 'b) t -> 'a key -> default:('a key -> 'b) -> 'b
    val find : ('a, 'b) t -> 'a key -> 'b option
    val find_exn : ('a, 'b) t -> 'a key -> 'b
    val find_and_call :
      ('a, 'b) t ->
      'a key -> if_found:('b -> 'c) -> if_not_found:('a key -> 'c) -> 'c
    val find_and_call1 :
      ('a, 'b) t ->
      'a key ->
      a:'d ->
      if_found:('b -> 'd -> 'c) -> if_not_found:('a key -> 'd -> 'c) -> 'c
    val find_and_call2 :
      ('a, 'b) t ->
      'a key ->
      a:'d ->
      b:'e ->
      if_found:('b -> 'd -> 'e -> 'c) ->
      if_not_found:('a key -> 'd -> 'e -> 'c) -> 'c
    val findi_and_call :
      ('a, 'b) t ->
      'a key ->
      if_found:(key:'a key -> data:'b -> 'c) ->
      if_not_found:('a key -> 'c) -> 'c
    val findi_and_call1 :
      ('a, 'b) t ->
      'a key ->
      a:'d ->
      if_found:(key:'a key -> data:'b -> 'd -> 'c) ->
      if_not_found:('a key -> 'd -> 'c) -> 'c
    val findi_and_call2 :
      ('a, 'b) t ->
      'a key ->
      a:'d ->
      b:'e ->
      if_found:(key:'a key -> data:'b -> 'd -> 'e -> 'c) ->
      if_not_found:('a key -> 'd -> 'e -> 'c) -> 'c
    val find_and_remove : ('a, 'b) t -> 'a key -> 'b option
    val merge :
      ('k, 'a) t ->
      ('k, 'b) t ->
      f:(key:'k key ->
         [ `Both of 'a * 'b | `Left of 'a | `Right of 'b ] -> 'c option) ->
      ('k, 'c) t
    val merge_into :
      src:('k, 'a) t ->
      dst:('k, 'b) t ->
      f:(key:'k key -> 'a -> 'b option -> 'b Merge_into_action.t) -> unit
    val keys : ('a, 'b) t -> 'a key list
    val data : ('a, 'b) t -> 'b list
    val filter_keys_inplace : ('a, 'b) t -> f:('a key -> bool) -> unit
    val filter_inplace : ('a, 'b) t -> f:('b -> bool) -> unit
    val filteri_inplace :
      ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> unit
    val map_inplace : ('a, 'b) t -> f:('b -> 'b) -> unit
    val mapi_inplace : ('a, 'b) t -> f:(key:'a key -> data:'b -> 'b) -> unit
    val filter_map_inplace : ('a, 'b) t -> f:('b -> 'b option) -> unit
    val filter_mapi_inplace :
      ('a, 'b) t -> f:(key:'a key -> data:'b -> 'b option) -> unit
    val equal : ('b -> 'b -> bool) -> ('a, 'b) t -> ('a, 'b) t -> bool
    val similar : ('b1 -> 'b2 -> bool) -> ('a, 'b1) t -> ('a, 'b2) t -> bool
    val to_alist : ('a, 'b) t -> ('a key * 'b) list
    val incr :
      ?by:int -> ?remove_if_zero:bool -> ('a, int) t -> 'a key -> unit
    val decr :
      ?by:int -> ?remove_if_zero:bool -> ('a, int) t -> 'a key -> unit
    val add_multi : ('a, 'b list) t -> key:'a key -> data:'b -> unit
    val remove_multi : ('a, 'b list) t -> 'a key -> unit
    val find_multi : ('a, 'b list) t -> 'a key -> 'b list
    val hashable_s : ('key, 'a) t -> 'key Key.t
    val invariant :
      'a Base__Invariant_intf.inv ->
      'b Base__Invariant_intf.inv -> ('a, 'b) t Base__Invariant_intf.inv
  end
module type S_poly =
  sig
    type ('a, 'b) t
    val t_of_sexp :
      (Sexplib0__.Sexp.t -> 'a) ->
      (Sexplib0__.Sexp.t -> 'b) -> Sexplib0__.Sexp.t -> ('a, 'b) t
    val sexp_of_t :
      ('a -> Sexplib0__.Sexp.t) ->
      ('b -> Sexplib0__.Sexp.t) -> ('a, 'b) t -> Sexplib0__.Sexp.t
    val t_sexp_grammar :
      'a Sexplib0.Sexp_grammar.t ->
      'b Sexplib0.Sexp_grammar.t -> ('a, 'b) t Sexplib0.Sexp_grammar.t
    val hashable : 'a Base__.Hashable.t
    val invariant :
      'a Base__Invariant_intf.inv ->
      'b Base__Invariant_intf.inv -> ('a, 'b) t Base__Invariant_intf.inv
    type 'a key = 'a
    val create :
      ('a key, 'b, unit -> ('a, 'b) t)
      create_options_without_first_class_module
    val of_alist :
      ('a key, 'b,
       ('a key * 'b) list -> [ `Duplicate_key of 'a key | `Ok of ('a, 'b) t ])
      create_options_without_first_class_module
    val of_alist_report_all_dups :
      ('a key, 'b,
       ('a key * 'b) list ->
       [ `Duplicate_keys of 'a key list | `Ok of ('a, 'b) t ])
      create_options_without_first_class_module
    val of_alist_or_error :
      ('a key, 'b, ('a key * 'b) list -> ('a, 'b) t Base__.Or_error.t)
      create_options_without_first_class_module
    val of_alist_exn :
      ('a key, 'b, ('a key * 'b) list -> ('a, 'b) t)
      create_options_without_first_class_module
    val of_alist_multi :
      ('a key, 'b list, ('a key * 'b) list -> ('a, 'b list) t)
      create_options_without_first_class_module
    val create_mapped :
      ('a key, 'b,
       get_key:('r -> 'a key) ->
       get_data:('r -> 'b) ->
       'r list -> [ `Duplicate_keys of 'a key list | `Ok of ('a, 'b) t ])
      create_options_without_first_class_module
    val create_with_key :
      ('a key, 'r,
       get_key:('r -> 'a key) ->
       'r list -> [ `Duplicate_keys of 'a key list | `Ok of ('a, 'r) t ])
      create_options_without_first_class_module
    val create_with_key_or_error :
      ('a key, 'r,
       get_key:('r -> 'a key) -> 'r list -> ('a, 'r) t Base__.Or_error.t)
      create_options_without_first_class_module
    val create_with_key_exn :
      ('a key, 'r, get_key:('r -> 'a key) -> 'r list -> ('a, 'r) t)
      create_options_without_first_class_module
    val group :
      ('a key, 'b,
       get_key:('r -> 'a key) ->
       get_data:('r -> 'b) ->
       combine:('b -> 'b -> 'b) -> 'r list -> ('a, 'b) t)
      create_options_without_first_class_module
    val sexp_of_key : ('a, 'b) t -> 'a key -> Base__.Sexp.t
    val clear : ('a, 'b) t -> unit
    val copy : ('a, 'b) t -> ('a, 'b) t
    val fold :
      ('a, 'b) t ->
      init:'acc -> f:(key:'a key -> data:'b -> 'acc -> 'acc) -> 'acc
    val iter_keys : ('a, 'b) t -> f:('a key -> unit) -> unit
    val iter : ('a, 'b) t -> f:('b -> unit) -> unit
    val iteri : ('a, 'b) t -> f:(key:'a key -> data:'b -> unit) -> unit
    val existsi : ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> bool
    val exists : ('a, 'b) t -> f:('b -> bool) -> bool
    val for_alli : ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> bool
    val for_all : ('a, 'b) t -> f:('b -> bool) -> bool
    val counti : ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> int
    val count : ('a, 'b) t -> f:('b -> bool) -> int
    val length : ('a, 'b) t -> int
    val is_empty : ('a, 'b) t -> bool
    val mem : ('a, 'b) t -> 'a key -> bool
    val remove : ('a, 'b) t -> 'a key -> unit
    val choose : ('a, 'b) t -> ('a key * 'b) option
    val choose_exn : ('a, 'b) t -> 'a key * 'b
    val choose_randomly :
      ?random_state:Base__.Random.State.t ->
      ('a, 'b) t -> ('a key * 'b) option
    val choose_randomly_exn :
      ?random_state:Base__.Random.State.t -> ('a, 'b) t -> 'a key * 'b
    val set : ('a, 'b) t -> key:'a key -> data:'b -> unit
    val add : ('a, 'b) t -> key:'a key -> data:'b -> [ `Duplicate | `Ok ]
    val add_exn : ('a, 'b) t -> key:'a key -> data:'b -> unit
    val change : ('a, 'b) t -> 'a key -> f:('b option -> 'b option) -> unit
    val update : ('a, 'b) t -> 'a key -> f:('b option -> 'b) -> unit
    val update_and_return : ('a, 'b) t -> 'a key -> f:('b option -> 'b) -> 'b
    val map : ('a, 'b) t -> f:('b -> 'c) -> ('a, 'c) t
    val mapi : ('a, 'b) t -> f:(key:'a key -> data:'b -> 'c) -> ('a, 'c) t
    val filter_map : ('a, 'b) t -> f:('b -> 'c option) -> ('a, 'c) t
    val filter_mapi :
      ('a, 'b) t -> f:(key:'a key -> data:'b -> 'c option) -> ('a, 'c) t
    val filter_keys : ('a, 'b) t -> f:('a key -> bool) -> ('a, 'b) t
    val filter : ('a, 'b) t -> f:('b -> bool) -> ('a, 'b) t
    val filteri :
      ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> ('a, 'b) t
    val partition_map :
      ('a, 'b) t ->
      f:('b -> ('c, 'd) Base__.Either.t) -> ('a, 'c) t * ('a, 'd) t
    val partition_mapi :
      ('a, 'b) t ->
      f:(key:'a key -> data:'b -> ('c, 'd) Base__.Either.t) ->
      ('a, 'c) t * ('a, 'd) t
    val partition_tf :
      ('a, 'b) t -> f:('b -> bool) -> ('a, 'b) t * ('a, 'b) t
    val partitioni_tf :
      ('a, 'b) t ->
      f:(key:'a key -> data:'b -> bool) -> ('a, 'b) t * ('a, 'b) t
    val find_or_add : ('a, 'b) t -> 'a key -> default:(unit -> 'b) -> 'b
    val findi_or_add : ('a, 'b) t -> 'a key -> default:('a key -> 'b) -> 'b
    val find : ('a, 'b) t -> 'a key -> 'b option
    val find_exn : ('a, 'b) t -> 'a key -> 'b
    val find_and_call :
      ('a, 'b) t ->
      'a key -> if_found:('b -> 'c) -> if_not_found:('a key -> 'c) -> 'c
    val find_and_call1 :
      ('a, 'b) t ->
      'a key ->
      a:'d ->
      if_found:('b -> 'd -> 'c) -> if_not_found:('a key -> 'd -> 'c) -> 'c
    val find_and_call2 :
      ('a, 'b) t ->
      'a key ->
      a:'d ->
      b:'e ->
      if_found:('b -> 'd -> 'e -> 'c) ->
      if_not_found:('a key -> 'd -> 'e -> 'c) -> 'c
    val findi_and_call :
      ('a, 'b) t ->
      'a key ->
      if_found:(key:'a key -> data:'b -> 'c) ->
      if_not_found:('a key -> 'c) -> 'c
    val findi_and_call1 :
      ('a, 'b) t ->
      'a key ->
      a:'d ->
      if_found:(key:'a key -> data:'b -> 'd -> 'c) ->
      if_not_found:('a key -> 'd -> 'c) -> 'c
    val findi_and_call2 :
      ('a, 'b) t ->
      'a key ->
      a:'d ->
      b:'e ->
      if_found:(key:'a key -> data:'b -> 'd -> 'e -> 'c) ->
      if_not_found:('a key -> 'd -> 'e -> 'c) -> 'c
    val find_and_remove : ('a, 'b) t -> 'a key -> 'b option
    val merge :
      ('k, 'a) t ->
      ('k, 'b) t ->
      f:(key:'k key ->
         [ `Both of 'a * 'b | `Left of 'a | `Right of 'b ] -> 'c option) ->
      ('k, 'c) t
    val merge_into :
      src:('k, 'a) t ->
      dst:('k, 'b) t ->
      f:(key:'k key -> 'a -> 'b option -> 'b Merge_into_action.t) -> unit
    val keys : ('a, 'b) t -> 'a key list
    val data : ('a, 'b) t -> 'b list
    val filter_keys_inplace : ('a, 'b) t -> f:('a key -> bool) -> unit
    val filter_inplace : ('a, 'b) t -> f:('b -> bool) -> unit
    val filteri_inplace :
      ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> unit
    val map_inplace : ('a, 'b) t -> f:('b -> 'b) -> unit
    val mapi_inplace : ('a, 'b) t -> f:(key:'a key -> data:'b -> 'b) -> unit
    val filter_map_inplace : ('a, 'b) t -> f:('b -> 'b option) -> unit
    val filter_mapi_inplace :
      ('a, 'b) t -> f:(key:'a key -> data:'b -> 'b option) -> unit
    val equal : ('b -> 'b -> bool) -> ('a, 'b) t -> ('a, 'b) t -> bool
    val similar : ('b1 -> 'b2 -> bool) -> ('a, 'b1) t -> ('a, 'b2) t -> bool
    val to_alist : ('a, 'b) t -> ('a key * 'b) list
    val incr :
      ?by:int -> ?remove_if_zero:bool -> ('a, int) t -> 'a key -> unit
    val decr :
      ?by:int -> ?remove_if_zero:bool -> ('a, int) t -> 'a key -> unit
    val add_multi : ('a, 'b list) t -> key:'a key -> data:'b -> unit
    val remove_multi : ('a, 'b list) t -> 'a key -> unit
    val find_multi : ('a, 'b list) t -> 'a key -> 'b list
  end
module type For_deriving =
  sig
    type ('k, 'v) t
    module type Sexp_of_m =
      sig type t val sexp_of_t : t -> Sexplib0.Sexp.t end
    module type M_of_sexp =
      sig
        type t
        val t_of_sexp : Sexplib0.Sexp.t -> t
        val compare : t Base__Ppx_compare_lib.compare
        val sexp_of_t : t -> Sexplib0.Sexp.t
        val hash : t -> int
      end
    module type M_sexp_grammar =
      sig type t val t_sexp_grammar : t Sexplib0.Sexp_grammar.t end
    module type Equal_m = sig end
    val sexp_of_m__t :
      (module Sexp_of_m with type t = 'k) ->
      ('v -> Base__.Sexp.t) -> ('k, 'v) t -> Base__.Sexp.t
    val m__t_of_sexp :
      (module M_of_sexp with type t = 'k) ->
      (Base__.Sexp.t -> 'v) -> Base__.Sexp.t -> ('k, 'v) t
    val m__t_sexp_grammar :
      (module M_sexp_grammar with type t = 'k) ->
      'v Sexplib0.Sexp_grammar.t -> ('k, 'v) t Sexplib0.Sexp_grammar.t
    val equal_m__t :
      (module Equal_m) ->
      ('v -> 'v -> bool) -> ('k, 'v) t -> ('k, 'v) t -> bool
  end
module type Hashtbl =
  sig
    val hash : 'a -> int
    val hash_param : int -> int -> 'a -> int
    type (!'a, !'b) t
    val sexp_of_t :
      ('a -> Base__.Sexp.t) ->
      ('b -> Base__.Sexp.t) -> ('a, 'b) t -> Base__.Sexp.t
    val create : ?growth_allowed:bool -> ?size:int -> 'a Key.t -> ('a, 'b) t
    val of_alist :
      ?growth_allowed:bool ->
      ?size:int ->
      'a Key.t ->
      ('a * 'b) list -> [ `Duplicate_key of 'a | `Ok of ('a, 'b) t ]
    val of_alist_report_all_dups :
      ?growth_allowed:bool ->
      ?size:int ->
      'a Key.t ->
      ('a * 'b) list -> [ `Duplicate_keys of 'a list | `Ok of ('a, 'b) t ]
    val of_alist_or_error :
      ?growth_allowed:bool ->
      ?size:int -> 'a Key.t -> ('a * 'b) list -> ('a, 'b) t Base__.Or_error.t
    val of_alist_exn :
      ?growth_allowed:bool ->
      ?size:int -> 'a Key.t -> ('a * 'b) list -> ('a, 'b) t
    val of_alist_multi :
      ?growth_allowed:bool ->
      ?size:int -> 'a Key.t -> ('a * 'b) list -> ('a, 'b list) t
    val create_mapped :
      ?growth_allowed:bool ->
      ?size:int ->
      'a Key.t ->
      get_key:('r -> 'a) ->
      get_data:('r -> 'b) ->
      'r list -> [ `Duplicate_keys of 'a list | `Ok of ('a, 'b) t ]
    val create_with_key :
      ?growth_allowed:bool ->
      ?size:int ->
      'a Key.t ->
      get_key:('r -> 'a) ->
      'r list -> [ `Duplicate_keys of 'a list | `Ok of ('a, 'r) t ]
    val create_with_key_or_error :
      ?growth_allowed:bool ->
      ?size:int ->
      'a Key.t ->
      get_key:('r -> 'a) -> 'r list -> ('a, 'r) t Base__.Or_error.t
    val create_with_key_exn :
      ?growth_allowed:bool ->
      ?size:int -> 'a Key.t -> get_key:('r -> 'a) -> 'r list -> ('a, 'r) t
    val group :
      ?growth_allowed:bool ->
      ?size:int ->
      'a Key.t ->
      get_key:('r -> 'a) ->
      get_data:('r -> 'b) ->
      combine:('b -> 'b -> 'b) -> 'r list -> ('a, 'b) t
    type 'a key = 'a
    val sexp_of_key : ('a, 'b) t -> 'a key -> Base__.Sexp.t
    val clear : ('a, 'b) t -> unit
    val copy : ('a, 'b) t -> ('a, 'b) t
    val fold :
      ('a, 'b) t ->
      init:'acc -> f:(key:'a key -> data:'b -> 'acc -> 'acc) -> 'acc
    val iter_keys : ('a, 'b) t -> f:('a key -> unit) -> unit
    val iter : ('a, 'b) t -> f:('b -> unit) -> unit
    val iteri : ('a, 'b) t -> f:(key:'a key -> data:'b -> unit) -> unit
    val existsi : ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> bool
    val exists : ('a, 'b) t -> f:('b -> bool) -> bool
    val for_alli : ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> bool
    val for_all : ('a, 'b) t -> f:('b -> bool) -> bool
    val counti : ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> int
    val count : ('a, 'b) t -> f:('b -> bool) -> int
    val length : ('a, 'b) t -> int
    val is_empty : ('a, 'b) t -> bool
    val mem : ('a, 'b) t -> 'a key -> bool
    val remove : ('a, 'b) t -> 'a key -> unit
    val choose : ('a, 'b) t -> ('a key * 'b) option
    val choose_exn : ('a, 'b) t -> 'a key * 'b
    val choose_randomly :
      ?random_state:Base__.Random.State.t ->
      ('a, 'b) t -> ('a key * 'b) option
    val choose_randomly_exn :
      ?random_state:Base__.Random.State.t -> ('a, 'b) t -> 'a key * 'b
    val set : ('a, 'b) t -> key:'a key -> data:'b -> unit
    val add : ('a, 'b) t -> key:'a key -> data:'b -> [ `Duplicate | `Ok ]
    val add_exn : ('a, 'b) t -> key:'a key -> data:'b -> unit
    val change : ('a, 'b) t -> 'a key -> f:('b option -> 'b option) -> unit
    val update : ('a, 'b) t -> 'a key -> f:('b option -> 'b) -> unit
    val update_and_return : ('a, 'b) t -> 'a key -> f:('b option -> 'b) -> 'b
    val map : ('a, 'b) t -> f:('b -> 'c) -> ('a, 'c) t
    val mapi : ('a, 'b) t -> f:(key:'a key -> data:'b -> 'c) -> ('a, 'c) t
    val filter_map : ('a, 'b) t -> f:('b -> 'c option) -> ('a, 'c) t
    val filter_mapi :
      ('a, 'b) t -> f:(key:'a key -> data:'b -> 'c option) -> ('a, 'c) t
    val filter_keys : ('a, 'b) t -> f:('a key -> bool) -> ('a, 'b) t
    val filter : ('a, 'b) t -> f:('b -> bool) -> ('a, 'b) t
    val filteri :
      ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> ('a, 'b) t
    val partition_map :
      ('a, 'b) t ->
      f:('b -> ('c, 'd) Base__.Either.t) -> ('a, 'c) t * ('a, 'd) t
    val partition_mapi :
      ('a, 'b) t ->
      f:(key:'a key -> data:'b -> ('c, 'd) Base__.Either.t) ->
      ('a, 'c) t * ('a, 'd) t
    val partition_tf :
      ('a, 'b) t -> f:('b -> bool) -> ('a, 'b) t * ('a, 'b) t
    val partitioni_tf :
      ('a, 'b) t ->
      f:(key:'a key -> data:'b -> bool) -> ('a, 'b) t * ('a, 'b) t
    val find_or_add : ('a, 'b) t -> 'a key -> default:(unit -> 'b) -> 'b
    val findi_or_add : ('a, 'b) t -> 'a key -> default:('a key -> 'b) -> 'b
    val find : ('a, 'b) t -> 'a key -> 'b option
    val find_exn : ('a, 'b) t -> 'a key -> 'b
    val find_and_call :
      ('a, 'b) t ->
      'a key -> if_found:('b -> 'c) -> if_not_found:('a key -> 'c) -> 'c
    val find_and_call1 :
      ('a, 'b) t ->
      'a key ->
      a:'d ->
      if_found:('b -> 'd -> 'c) -> if_not_found:('a key -> 'd -> 'c) -> 'c
    val find_and_call2 :
      ('a, 'b) t ->
      'a key ->
      a:'d ->
      b:'e ->
      if_found:('b -> 'd -> 'e -> 'c) ->
      if_not_found:('a key -> 'd -> 'e -> 'c) -> 'c
    val findi_and_call :
      ('a, 'b) t ->
      'a key ->
      if_found:(key:'a key -> data:'b -> 'c) ->
      if_not_found:('a key -> 'c) -> 'c
    val findi_and_call1 :
      ('a, 'b) t ->
      'a key ->
      a:'d ->
      if_found:(key:'a key -> data:'b -> 'd -> 'c) ->
      if_not_found:('a key -> 'd -> 'c) -> 'c
    val findi_and_call2 :
      ('a, 'b) t ->
      'a key ->
      a:'d ->
      b:'e ->
      if_found:(key:'a key -> data:'b -> 'd -> 'e -> 'c) ->
      if_not_found:('a key -> 'd -> 'e -> 'c) -> 'c
    val find_and_remove : ('a, 'b) t -> 'a key -> 'b option
    val merge :
      ('k, 'a) t ->
      ('k, 'b) t ->
      f:(key:'k key ->
         [ `Both of 'a * 'b | `Left of 'a | `Right of 'b ] -> 'c option) ->
      ('k, 'c) t
    val merge_into :
      src:('k, 'a) t ->
      dst:('k, 'b) t ->
      f:(key:'k key -> 'a -> 'b option -> 'b Merge_into_action.t) -> unit
    val keys : ('a, 'b) t -> 'a key list
    val data : ('a, 'b) t -> 'b list
    val filter_keys_inplace : ('a, 'b) t -> f:('a key -> bool) -> unit
    val filter_inplace : ('a, 'b) t -> f:('b -> bool) -> unit
    val filteri_inplace :
      ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> unit
    val map_inplace : ('a, 'b) t -> f:('b -> 'b) -> unit
    val mapi_inplace : ('a, 'b) t -> f:(key:'a key -> data:'b -> 'b) -> unit
    val filter_map_inplace : ('a, 'b) t -> f:('b -> 'b option) -> unit
    val filter_mapi_inplace :
      ('a, 'b) t -> f:(key:'a key -> data:'b -> 'b option) -> unit
    val equal : ('b -> 'b -> bool) -> ('a, 'b) t -> ('a, 'b) t -> bool
    val similar : ('b1 -> 'b2 -> bool) -> ('a, 'b1) t -> ('a, 'b2) t -> bool
    val to_alist : ('a, 'b) t -> ('a key * 'b) list
    val incr :
      ?by:int -> ?remove_if_zero:bool -> ('a, int) t -> 'a key -> unit
    val decr :
      ?by:int -> ?remove_if_zero:bool -> ('a, int) t -> 'a key -> unit
    val add_multi : ('a, 'b list) t -> key:'a key -> data:'b -> unit
    val remove_multi : ('a, 'b list) t -> 'a key -> unit
    val find_multi : ('a, 'b list) t -> 'a key -> 'b list
    val hashable_s : ('key, 'a) t -> 'key Key.t
    val invariant :
      'a Base__Invariant_intf.inv ->
      'b Base__Invariant_intf.inv -> ('a, 'b) t Base__Invariant_intf.inv
    module type Accessors = Accessors
    module type Creators = Creators
    module type Multi = Multi
    module type S_poly = S_poly
    module type S_without_submodules = S_without_submodules
    module type For_deriving = For_deriving
    module Key = Key
    module Merge_into_action = Merge_into_action
    type nonrec ('key, 'data, 'z) create_options =
        ('key, 'data, 'z) create_options
    module Creators :
      functor (Key : sig type 'a t val hashable : 'a t Base__.Hashable.t end)
        ->
        sig
          type ('a, 'b) t_ = ('a Key.t, 'b) t
          val t_of_sexp :
            (Base__.Sexp.t -> 'a Key.t) ->
            (Base__.Sexp.t -> 'b) -> Base__.Sexp.t -> ('a, 'b) t_
          val create :
            ('a Key.t, 'b, unit -> ('a, 'b) t_)
            create_options_without_first_class_module
          val of_alist :
            ('a Key.t, 'b,
             ('a Key.t * 'b) list ->
             [ `Duplicate_key of 'a Key.t | `Ok of ('a, 'b) t_ ])
            create_options_without_first_class_module
          val of_alist_report_all_dups :
            ('a Key.t, 'b,
             ('a Key.t * 'b) list ->
             [ `Duplicate_keys of 'a Key.t list | `Ok of ('a, 'b) t_ ])
            create_options_without_first_class_module
          val of_alist_or_error :
            ('a Key.t, 'b,
             ('a Key.t * 'b) list -> ('a, 'b) t_ Base__.Or_error.t)
            create_options_without_first_class_module
          val of_alist_exn :
            ('a Key.t, 'b, ('a Key.t * 'b) list -> ('a, 'b) t_)
            create_options_without_first_class_module
          val of_alist_multi :
            ('a Key.t, 'b list, ('a Key.t * 'b) list -> ('a, 'b list) t_)
            create_options_without_first_class_module
          val create_mapped :
            ('a Key.t, 'b,
             get_key:('r -> 'a Key.t) ->
             get_data:('r -> 'b) ->
             'r list ->
             [ `Duplicate_keys of 'a Key.t list | `Ok of ('a, 'b) t_ ])
            create_options_without_first_class_module
          val create_with_key :
            ('a Key.t, 'r,
             get_key:('r -> 'a Key.t) ->
             'r list ->
             [ `Duplicate_keys of 'a Key.t list | `Ok of ('a, 'r) t_ ])
            create_options_without_first_class_module
          val create_with_key_or_error :
            ('a Key.t, 'r,
             get_key:('r -> 'a Key.t) ->
             'r list -> ('a, 'r) t_ Base__.Or_error.t)
            create_options_without_first_class_module
          val create_with_key_exn :
            ('a Key.t, 'r,
             get_key:('r -> 'a Key.t) -> 'r list -> ('a, 'r) t_)
            create_options_without_first_class_module
          val group :
            ('a Key.t, 'b,
             get_key:('r -> 'a Key.t) ->
             get_data:('r -> 'b) ->
             combine:('b -> 'b -> 'b) -> 'r list -> ('a, 'b) t_)
            create_options_without_first_class_module
        end
    module Poly :
      sig
        type ('a, 'b) t = ('a, 'b) t/2
        val t_of_sexp :
          (Sexplib0__.Sexp.t -> 'a) ->
          (Sexplib0__.Sexp.t -> 'b) -> Sexplib0__.Sexp.t -> ('a, 'b) t
        val sexp_of_t :
          ('a -> Sexplib0__.Sexp.t) ->
          ('b -> Sexplib0__.Sexp.t) -> ('a, 'b) t -> Sexplib0__.Sexp.t
        val t_sexp_grammar :
          'a Sexplib0.Sexp_grammar.t ->
          'b Sexplib0.Sexp_grammar.t -> ('a, 'b) t Sexplib0.Sexp_grammar.t
        val hashable : 'a Base__.Hashable.t
        val invariant :
          'a Base__Invariant_intf.inv ->
          'b Base__Invariant_intf.inv -> ('a, 'b) t Base__Invariant_intf.inv
        type 'a key = 'a
        val create :
          ('a key, 'b, unit -> ('a, 'b) t)
          create_options_without_first_class_module
        val of_alist :
          ('a key, 'b,
           ('a key * 'b) list ->
           [ `Duplicate_key of 'a key | `Ok of ('a, 'b) t ])
          create_options_without_first_class_module
        val of_alist_report_all_dups :
          ('a key, 'b,
           ('a key * 'b) list ->
           [ `Duplicate_keys of 'a key list | `Ok of ('a, 'b) t ])
          create_options_without_first_class_module
        val of_alist_or_error :
          ('a key, 'b, ('a key * 'b) list -> ('a, 'b) t Base__.Or_error.t)
          create_options_without_first_class_module
        val of_alist_exn :
          ('a key, 'b, ('a key * 'b) list -> ('a, 'b) t)
          create_options_without_first_class_module
        val of_alist_multi :
          ('a key, 'b list, ('a key * 'b) list -> ('a, 'b list) t)
          create_options_without_first_class_module
        val create_mapped :
          ('a key, 'b,
           get_key:('r -> 'a key) ->
           get_data:('r -> 'b) ->
           'r list -> [ `Duplicate_keys of 'a key list | `Ok of ('a, 'b) t ])
          create_options_without_first_class_module
        val create_with_key :
          ('a key, 'r,
           get_key:('r -> 'a key) ->
           'r list -> [ `Duplicate_keys of 'a key list | `Ok of ('a, 'r) t ])
          create_options_without_first_class_module
        val create_with_key_or_error :
          ('a key, 'r,
           get_key:('r -> 'a key) -> 'r list -> ('a, 'r) t Base__.Or_error.t)
          create_options_without_first_class_module
        val create_with_key_exn :
          ('a key, 'r, get_key:('r -> 'a key) -> 'r list -> ('a, 'r) t)
          create_options_without_first_class_module
        val group :
          ('a key, 'b,
           get_key:('r -> 'a key) ->
           get_data:('r -> 'b) ->
           combine:('b -> 'b -> 'b) -> 'r list -> ('a, 'b) t)
          create_options_without_first_class_module
        val sexp_of_key : ('a, 'b) t -> 'a key -> Base__.Sexp.t
        val clear : ('a, 'b) t -> unit
        val copy : ('a, 'b) t -> ('a, 'b) t
        val fold :
          ('a, 'b) t ->
          init:'acc -> f:(key:'a key -> data:'b -> 'acc -> 'acc) -> 'acc
        val iter_keys : ('a, 'b) t -> f:('a key -> unit) -> unit
        val iter : ('a, 'b) t -> f:('b -> unit) -> unit
        val iteri : ('a, 'b) t -> f:(key:'a key -> data:'b -> unit) -> unit
        val existsi : ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> bool
        val exists : ('a, 'b) t -> f:('b -> bool) -> bool
        val for_alli :
          ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> bool
        val for_all : ('a, 'b) t -> f:('b -> bool) -> bool
        val counti : ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> int
        val count : ('a, 'b) t -> f:('b -> bool) -> int
        val length : ('a, 'b) t -> int
        val is_empty : ('a, 'b) t -> bool
        val mem : ('a, 'b) t -> 'a key -> bool
        val remove : ('a, 'b) t -> 'a key -> unit
        val choose : ('a, 'b) t -> ('a key * 'b) option
        val choose_exn : ('a, 'b) t -> 'a key * 'b
        val choose_randomly :
          ?random_state:Base__.Random.State.t ->
          ('a, 'b) t -> ('a key * 'b) option
        val choose_randomly_exn :
          ?random_state:Base__.Random.State.t -> ('a, 'b) t -> 'a key * 'b
        val set : ('a, 'b) t -> key:'a key -> data:'b -> unit
        val add : ('a, 'b) t -> key:'a key -> data:'b -> [ `Duplicate | `Ok ]
        val add_exn : ('a, 'b) t -> key:'a key -> data:'b -> unit
        val change :
          ('a, 'b) t -> 'a key -> f:('b option -> 'b option) -> unit
        val update : ('a, 'b) t -> 'a key -> f:('b option -> 'b) -> unit
        val update_and_return :
          ('a, 'b) t -> 'a key -> f:('b option -> 'b) -> 'b
        val map : ('a, 'b) t -> f:('b -> 'c) -> ('a, 'c) t
        val mapi :
          ('a, 'b) t -> f:(key:'a key -> data:'b -> 'c) -> ('a, 'c) t
        val filter_map : ('a, 'b) t -> f:('b -> 'c option) -> ('a, 'c) t
        val filter_mapi :
          ('a, 'b) t -> f:(key:'a key -> data:'b -> 'c option) -> ('a, 'c) t
        val filter_keys : ('a, 'b) t -> f:('a key -> bool) -> ('a, 'b) t
        val filter : ('a, 'b) t -> f:('b -> bool) -> ('a, 'b) t
        val filteri :
          ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> ('a, 'b) t
        val partition_map :
          ('a, 'b) t ->
          f:('b -> ('c, 'd) Base__.Either.t) -> ('a, 'c) t * ('a, 'd) t
        val partition_mapi :
          ('a, 'b) t ->
          f:(key:'a key -> data:'b -> ('c, 'd) Base__.Either.t) ->
          ('a, 'c) t * ('a, 'd) t
        val partition_tf :
          ('a, 'b) t -> f:('b -> bool) -> ('a, 'b) t * ('a, 'b) t
        val partitioni_tf :
          ('a, 'b) t ->
          f:(key:'a key -> data:'b -> bool) -> ('a, 'b) t * ('a, 'b) t
        val find_or_add : ('a, 'b) t -> 'a key -> default:(unit -> 'b) -> 'b
        val findi_or_add :
          ('a, 'b) t -> 'a key -> default:('a key -> 'b) -> 'b
        val find : ('a, 'b) t -> 'a key -> 'b option
        val find_exn : ('a, 'b) t -> 'a key -> 'b
        val find_and_call :
          ('a, 'b) t ->
          'a key -> if_found:('b -> 'c) -> if_not_found:('a key -> 'c) -> 'c
        val find_and_call1 :
          ('a, 'b) t ->
          'a key ->
          a:'d ->
          if_found:('b -> 'd -> 'c) ->
          if_not_found:('a key -> 'd -> 'c) -> 'c
        val find_and_call2 :
          ('a, 'b) t ->
          'a key ->
          a:'d ->
          b:'e ->
          if_found:('b -> 'd -> 'e -> 'c) ->
          if_not_found:('a key -> 'd -> 'e -> 'c) -> 'c
        val findi_and_call :
          ('a, 'b) t ->
          'a key ->
          if_found:(key:'a key -> data:'b -> 'c) ->
          if_not_found:('a key -> 'c) -> 'c
        val findi_and_call1 :
          ('a, 'b) t ->
          'a key ->
          a:'d ->
          if_found:(key:'a key -> data:'b -> 'd -> 'c) ->
          if_not_found:('a key -> 'd -> 'c) -> 'c
        val findi_and_call2 :
          ('a, 'b) t ->
          'a key ->
          a:'d ->
          b:'e ->
          if_found:(key:'a key -> data:'b -> 'd -> 'e -> 'c) ->
          if_not_found:('a key -> 'd -> 'e -> 'c) -> 'c
        val find_and_remove : ('a, 'b) t -> 'a key -> 'b option
        val merge :
          ('k, 'a) t ->
          ('k, 'b) t ->
          f:(key:'k key ->
             [ `Both of 'a * 'b | `Left of 'a | `Right of 'b ] -> 'c option) ->
          ('k, 'c) t
        val merge_into :
          src:('k, 'a) t ->
          dst:('k, 'b) t ->
          f:(key:'k key -> 'a -> 'b option -> 'b Merge_into_action/2.t) ->
          unit
        val keys : ('a, 'b) t -> 'a key list
        val data : ('a, 'b) t -> 'b list
        val filter_keys_inplace : ('a, 'b) t -> f:('a key -> bool) -> unit
        val filter_inplace : ('a, 'b) t -> f:('b -> bool) -> unit
        val filteri_inplace :
          ('a, 'b) t -> f:(key:'a key -> data:'b -> bool) -> unit
        val map_inplace : ('a, 'b) t -> f:('b -> 'b) -> unit
        val mapi_inplace :
          ('a, 'b) t -> f:(key:'a key -> data:'b -> 'b) -> unit
        val filter_map_inplace : ('a, 'b) t -> f:('b -> 'b option) -> unit
        val filter_mapi_inplace :
          ('a, 'b) t -> f:(key:'a key -> data:'b -> 'b option) -> unit
        val equal : ('b -> 'b -> bool) -> ('a, 'b) t -> ('a, 'b) t -> bool
        val similar :
          ('b1 -> 'b2 -> bool) -> ('a, 'b1) t -> ('a, 'b2) t -> bool
        val to_alist : ('a, 'b) t -> ('a key * 'b) list
        val incr :
          ?by:int -> ?remove_if_zero:bool -> ('a, int) t -> 'a key -> unit
        val decr :
          ?by:int -> ?remove_if_zero:bool -> ('a, int) t -> 'a key -> unit
        val add_multi : ('a, 'b list) t -> key:'a key -> data:'b -> unit
        val remove_multi : ('a, 'b list) t -> 'a key -> unit
        val find_multi : ('a, 'b list) t -> 'a key -> 'b list
      end
    module M :
      functor (K : Base__.T.T) -> sig type nonrec 'v t = (K.t, 'v) t end
    module type Sexp_of_m =
      sig type t val sexp_of_t : t -> Sexplib0.Sexp.t end
    module type M_of_sexp =
      sig
        type t
        val t_of_sexp : Sexplib0.Sexp.t -> t
        val compare : t Base__Ppx_compare_lib.compare
        val sexp_of_t : t -> Sexplib0.Sexp.t
        val hash : t -> int
      end
    module type M_sexp_grammar =
      sig type t val t_sexp_grammar : t Sexplib0.Sexp_grammar.t end
    module type Equal_m = sig end
    val sexp_of_m__t :
      (module Sexp_of_m with type t = 'k) ->
      ('v -> Base__.Sexp.t) -> ('k, 'v) t -> Base__.Sexp.t
    val m__t_of_sexp :
      (module M_of_sexp with type t = 'k) ->
      (Base__.Sexp.t -> 'v) -> Base__.Sexp.t -> ('k, 'v) t
    val m__t_sexp_grammar :
      (module M_sexp_grammar with type t = 'k) ->
      'v Sexplib0.Sexp_grammar.t -> ('k, 'v) t Sexplib0.Sexp_grammar.t
    val equal_m__t :
      (module Equal_m) ->
      ('v -> 'v -> bool) -> ('k, 'v) t -> ('k, 'v) t -> bool
    module Private :
      sig
        module type Creators_generic = Creators_generic
        type nonrec ('key, 'data, 'z)
                    create_options_without_first_class_module =
            ('key, 'data, 'z) create_options_without_first_class_module
        val hashable : ('key, 'a) t -> 'key Base__.Hashable.t
      end("DEBUG:rule", [Tag3 (("Key", 3686), 0, (Tag1 ([Tag4 (("S", 3698), ((Tag1 ([Tag1 (("t", 3700), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/hashtbl_intf.ml", 6, 91, 95), ("src/hashtbl_intf.ml", 6, 91, 138), 0), [(("deriving_inline", (("src/hashtbl_intf.ml", 6, 91, 105), ("src/hashtbl_intf.ml", 6, 91, 120), 0)), ([([(Tag8 ([(((("compare"), (("src/hashtbl_intf.ml", 6, 91, 121), ("src/hashtbl_intf.ml", 6, 91, 128), 0))), (("src/hashtbl_intf.ml", 6, 91, 121), ("src/hashtbl_intf.ml", 6, 91, 128), 0), 0, 0); (((("sexp_of"), (("src/hashtbl_intf.ml", 6, 91, 130), ("src/hashtbl_intf.ml", 6, 91, 137), 0))), (("src/hashtbl_intf.ml", 6, 91, 130), ("src/hashtbl_intf.ml", 6, 91, 137), 0), 0, 0)]), (("src/hashtbl_intf.ml", 6, 91, 121), ("src/hashtbl_intf.ml", 6, 91, 137), 0), 0, 0)], (("src/hashtbl_intf.ml", 6, 91, 121), ("src/hashtbl_intf.ml", 6, 91, 137), 0))]), (("src/hashtbl_intf.ml", 6, 91, 102), ("src/hashtbl_intf.ml", 6, 91, 138), 0))], 0, 0, Tag1 ("Base__Hashtbl_intf", 0)), 1, 0); (("compare", 3701), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((("t", 3700)), 0, (0)), 100000000, 0, -31)], (0)), 100000000, 0, -30), 0, (("src/hashtbl_intf.ml", 8, 140, 152), ("src/hashtbl_intf.ml", 8, 140, 197), 0), 0, Tag1 ("Base__Ppx_compare_lib", 5)), 0); (("sexp_of_t", 3702), ((Tag1 (0, (Tag3 ((("t", 3700)), 0, (0)), 100000000, 0, -29), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("src/hashtbl_intf.ml", 10, 199, 203), ("src/hashtbl_intf.ml", 10, 199, 239), 0), 0, Tag1 ("Base__Hashtbl_intf", 2)), 0); (("hash", 3703), ((Tag1 (0, (Tag3 ((("t", 3700)), 0, (0)), 100000000, 0, -26), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("src/hashtbl_intf.ml", 16, 365, 369), ("src/hashtbl_intf.ml", 16, 365, 388), 0), 0, Tag1 ("Base__Hashtbl_intf", 3)), 0)])), 0, (("src/hashtbl_intf.ml", 5, 69, 71), ("src/hashtbl_intf.ml", 17, 389, 394), 0), Tag1 ("Base__Hashtbl_intf", 4)), 0); Tag1 (("t", 3699), ([((("a")), 100000000, 0, -23)], 1, 0, 1, ((Tag11 ((("S", 3698)), [(("t"), ((("a")), 100000000, 0, -23))]), 100000000, 0, -22)), [63], [0], 0, 0, (("src/hashtbl_intf.ml", 19, 396, 398), ("src/hashtbl_intf.ml", 19, 396, 437), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 5)), 1, 0)]), 0, (("src/hashtbl_intf.ml", 4, 49, 49), ("src/hashtbl_intf.ml", 20, 438, 441), 0), Tag1 ("Base__Hashtbl_intf", 7)), 0, 0); Tag3 (("Merge_into_action", 3687), 0, (Tag1 ([Tag1 (("t", 3704), ([((("a")), 100000000, 0, -32)], 1, Tag1 ([(("Remove", 854), (0), 0, (("src/hashtbl_intf.ml", 25, 540, 544), ("src/hashtbl_intf.ml", 25, 540, 552), 0), 0, Tag1 ("Base__Hashtbl_intf", 9)); (("Set_to", 855), ([((("a")), 100000000, 0, -32)]), 0, (("src/hashtbl_intf.ml", 26, 553, 557), ("src/hashtbl_intf.ml", 26, 553, 571), 0), 0, Tag1 ("Base__Hashtbl_intf", 10))], 0), 1, 0, [25], [0], 0, 0, (("src/hashtbl_intf.ml", 24, 526, 528), ("src/hashtbl_intf.ml", 26, 553, 571), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 8)), 1, 0)]), 0, (("src/hashtbl_intf.ml", 23, 492, 492), ("src/hashtbl_intf.ml", 27, 572, 575), 0), Tag1 ("Base__Hashtbl_intf", 11)), 0, 0); Tag4 (("Accessors", 3688), ((Tag1 ([Tag1 (("t", 3705), ([((("a")), 100000000, 0, -667); ((("b")), 100000000, 0, -668)], 2, 0, 1, 0, [7; 7], [2; 2], 0, 0, (("src/hashtbl_intf.ml", 32, 629, 631), ("src/hashtbl_intf.ml", 32, 629, 646), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 12)), 1, 0); Tag1 (("key", 3706), ([((("a")), 100000000, 0, -666)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/hashtbl_intf.ml", 33, 647, 649), ("src/hashtbl_intf.ml", 33, 647, 660), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 13)), 1, 0); (("sexp_of_key", 3707), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -663); ((0), 100000000, 0, -665)], (0)), 100000000, 0, -664), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -663)], (0)), 100000000, 0, -662), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -661), 0), 100000000, 0, -660), 0), 100000000, 0, -659), 0, (("src/hashtbl_intf.ml", 35, 662, 664), ("src/hashtbl_intf.ml", 35, 662, 711), 0), 0, Tag1 ("Base__Hashtbl_intf", 14)), 0); (("clear", 3708), ((Tag1 (0, (Tag3 ((("t", 3705)), [((0), 100000000, 0, -657); ((0), 100000000, 0, -658)], (0)), 100000000, 0, -656), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -655), 0), 100000000, 0, -654), 0, (("src/hashtbl_intf.ml", 36, 712, 714), ("src/hashtbl_intf.ml", 36, 712, 742), 0), 0, Tag1 ("Base__Hashtbl_intf", 15)), 0); (("copy", 3709), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -651); ((("b")), 100000000, 0, -652)], (0)), 100000000, 0, -653), (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -651); ((("b")), 100000000, 0, -652)], (0)), 100000000, 0, -650), 0), 100000000, 0, -649), 0, (("src/hashtbl_intf.ml", 37, 743, 745), ("src/hashtbl_intf.ml", 37, 743, 780), 0), 0, Tag1 ("Base__Hashtbl_intf", 16)), 0); (("fold", 3710), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -647); ((("b")), 100000000, 0, -645)], (0)), 100000000, 0, -648), (Tag1 (("init"), ((("acc")), 100000000, 0, -641), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -647)], (0)), 100000000, 0, -646), (Tag1 (("data"), ((("b")), 100000000, 0, -645), (Tag1 (0, ((("acc")), 100000000, 0, -641), ((("acc")), 100000000, 0, -641), 0), 100000000, 0, -644), 0), 100000000, 0, -643), 0), 100000000, 0, -642), ((("acc")), 100000000, 0, -641), 0), 100000000, 0, -640), 0), 100000000, 0, -639), 0), 100000000, 0, -638), 0, (("src/hashtbl_intf.ml", 41, 937, 939), ("src/hashtbl_intf.ml", 45, 1042, 1053), 0), 0, Tag1 ("Base__Hashtbl_intf", 17)), 0); (("iter_keys", 3711), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -635); ((0), 100000000, 0, -637)], (0)), 100000000, 0, -636), (Tag1 (("f"), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -635)], (0)), 100000000, 0, -634), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -633), 0), 100000000, 0, -632), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -631), 0), 100000000, 0, -630), 0), 100000000, 0, -629), 0, (("src/hashtbl_intf.ml", 47, 1055, 1057), ("src/hashtbl_intf.ml", 47, 1055, 1122), 0), 0, Tag1 ("Base__Hashtbl_intf", 18)), 0); (("iter", 3712), ((Tag1 (0, (Tag3 ((("t", 3705)), [((0), 100000000, 0, -628); ((("b")), 100000000, 0, -626)], (0)), 100000000, 0, -627), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -626), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -625), 0), 100000000, 0, -624), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -623), 0), 100000000, 0, -622), 0), 100000000, 0, -621), 0, (("src/hashtbl_intf.ml", 48, 1123, 1125), ("src/hashtbl_intf.ml", 48, 1123, 1181), 0), 0, Tag1 ("Base__Hashtbl_intf", 19)), 0); (("iteri", 3713), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -619); ((("b")), 100000000, 0, -617)], (0)), 100000000, 0, -620), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -619)], (0)), 100000000, 0, -618), (Tag1 (("data"), ((("b")), 100000000, 0, -617), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -616), 0), 100000000, 0, -615), 0), 100000000, 0, -614), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -613), 0), 100000000, 0, -612), 0), 100000000, 0, -611), 0, (("src/hashtbl_intf.ml", 62, 1474, 1476), ("src/hashtbl_intf.ml", 62, 1474, 1553), 0), 0, Tag1 ("Base__Hashtbl_intf", 20)), 0); (("existsi", 3714), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -609); ((("b")), 100000000, 0, -607)], (0)), 100000000, 0, -610), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -609)], (0)), 100000000, 0, -608), (Tag1 (("data"), ((("b")), 100000000, 0, -607), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -606), 0), 100000000, 0, -605), 0), 100000000, 0, -604), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -603), 0), 100000000, 0, -602), 0), 100000000, 0, -601), 0, (("src/hashtbl_intf.ml", 64, 1555, 1557), ("src/hashtbl_intf.ml", 64, 1555, 1636), 0), 0, Tag1 ("Base__Hashtbl_intf", 21)), 0); (("exists", 3715), ((Tag1 (0, (Tag3 ((("t", 3705)), [((0), 100000000, 0, -600); ((("b")), 100000000, 0, -598)], (0)), 100000000, 0, -599), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -598), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -597), 0), 100000000, 0, -596), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -595), 0), 100000000, 0, -594), 0), 100000000, 0, -593), 0, (("src/hashtbl_intf.ml", 65, 1637, 1639), ("src/hashtbl_intf.ml", 65, 1637, 1697), 0), 0, Tag1 ("Base__Hashtbl_intf", 22)), 0); (("for_alli", 3716), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -591); ((("b")), 100000000, 0, -589)], (0)), 100000000, 0, -592), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -591)], (0)), 100000000, 0, -590), (Tag1 (("data"), ((("b")), 100000000, 0, -589), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -588), 0), 100000000, 0, -587), 0), 100000000, 0, -586), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -585), 0), 100000000, 0, -584), 0), 100000000, 0, -583), 0, (("src/hashtbl_intf.ml", 66, 1698, 1700), ("src/hashtbl_intf.ml", 66, 1698, 1780), 0), 0, Tag1 ("Base__Hashtbl_intf", 23)), 0); (("for_all", 3717), ((Tag1 (0, (Tag3 ((("t", 3705)), [((0), 100000000, 0, -582); ((("b")), 100000000, 0, -580)], (0)), 100000000, 0, -581), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -580), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -579), 0), 100000000, 0, -578), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -577), 0), 100000000, 0, -576), 0), 100000000, 0, -575), 0, (("src/hashtbl_intf.ml", 67, 1781, 1783), ("src/hashtbl_intf.ml", 67, 1781, 1842), 0), 0, Tag1 ("Base__Hashtbl_intf", 24)), 0); (("counti", 3718), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -573); ((("b")), 100000000, 0, -571)], (0)), 100000000, 0, -574), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -573)], (0)), 100000000, 0, -572), (Tag1 (("data"), ((("b")), 100000000, 0, -571), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -570), 0), 100000000, 0, -569), 0), 100000000, 0, -568), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -567), 0), 100000000, 0, -566), 0), 100000000, 0, -565), 0, (("src/hashtbl_intf.ml", 68, 1843, 1845), ("src/hashtbl_intf.ml", 68, 1843, 1922), 0), 0, Tag1 ("Base__Hashtbl_intf", 25)), 0); (("count", 3719), ((Tag1 (0, (Tag3 ((("t", 3705)), [((0), 100000000, 0, -564); ((("b")), 100000000, 0, -562)], (0)), 100000000, 0, -563), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -562), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -561), 0), 100000000, 0, -560), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -559), 0), 100000000, 0, -558), 0), 100000000, 0, -557), 0, (("src/hashtbl_intf.ml", 69, 1923, 1925), ("src/hashtbl_intf.ml", 69, 1923, 1981), 0), 0, Tag1 ("Base__Hashtbl_intf", 26)), 0); (("length", 3720), ((Tag1 (0, (Tag3 ((("t", 3705)), [((0), 100000000, 0, -555); ((0), 100000000, 0, -556)], (0)), 100000000, 0, -554), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -553), 0), 100000000, 0, -552), 0, (("src/hashtbl_intf.ml", 70, 1982, 1984), ("src/hashtbl_intf.ml", 70, 1982, 2012), 0), 0, Tag1 ("Base__Hashtbl_intf", 27)), 0); (("is_empty", 3721), ((Tag1 (0, (Tag3 ((("t", 3705)), [((0), 100000000, 0, -550); ((0), 100000000, 0, -551)], (0)), 100000000, 0, -549), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -548), 0), 100000000, 0, -547), 0, (("src/hashtbl_intf.ml", 71, 2013, 2015), ("src/hashtbl_intf.ml", 71, 2013, 2046), 0), 0, Tag1 ("Base__Hashtbl_intf", 28)), 0); (("mem", 3722), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -544); ((0), 100000000, 0, -546)], (0)), 100000000, 0, -545), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -544)], (0)), 100000000, 0, -543), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -542), 0), 100000000, 0, -541), 0), 100000000, 0, -540), 0, (("src/hashtbl_intf.ml", 72, 2047, 2049), ("src/hashtbl_intf.ml", 72, 2047, 2086), 0), 0, Tag1 ("Base__Hashtbl_intf", 29)), 0); (("remove", 3723), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -537); ((0), 100000000, 0, -539)], (0)), 100000000, 0, -538), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -537)], (0)), 100000000, 0, -536), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -535), 0), 100000000, 0, -534), 0), 100000000, 0, -533), 0, (("src/hashtbl_intf.ml", 73, 2087, 2089), ("src/hashtbl_intf.ml", 73, 2087, 2129), 0), 0, Tag1 ("Base__Hashtbl_intf", 30)), 0); (("choose", 3724), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -530); ((("b")), 100000000, 0, -531)], (0)), 100000000, 0, -532), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -530)], (0)), 100000000, 0, -529); ((("b")), 100000000, 0, -531)]), 100000000, 0, -528)], (0)), 100000000, 0, -527), 0), 100000000, 0, -526), 0, (("src/hashtbl_intf.ml", 85, 2772, 2774), ("src/hashtbl_intf.ml", 85, 2772, 2821), 0), 0, Tag1 ("Base__Hashtbl_intf", 31)), 0); (("choose_exn", 3725), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -523); ((("b")), 100000000, 0, -524)], (0)), 100000000, 0, -525), (Tag2 ([(Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -523)], (0)), 100000000, 0, -522); ((("b")), 100000000, 0, -524)]), 100000000, 0, -521), 0), 100000000, 0, -520), 0, (("src/hashtbl_intf.ml", 88, 2871, 2873), ("src/hashtbl_intf.ml", 88, 2871, 2915), 0), 0, Tag1 ("Base__Hashtbl_intf", 32)), 0); (("choose_randomly", 3726), ((Tag1 (Tag1 ("random_state"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Random"), "State"), "t"), 0, (0)), 100000000, 0, -519)], (0)), 100000000, 0, -518), (Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -515); ((("b")), 100000000, 0, -516)], (0)), 100000000, 0, -517), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -515)], (0)), 100000000, 0, -514); ((("b")), 100000000, 0, -516)]), 100000000, 0, -513)], (0)), 100000000, 0, -512), 0), 100000000, 0, -511), 0), 100000000, 0, -510), 0, (("src/hashtbl_intf.ml", 98, 3410, 3412), ("src/hashtbl_intf.ml", 101, 3525, 3552), 0), 0, Tag1 ("Base__Hashtbl_intf", 33)), 0); (("choose_randomly_exn", 3727), ((Tag1 (Tag1 ("random_state"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Random"), "State"), "t"), 0, (0)), 100000000, 0, -509)], (0)), 100000000, 0, -508), (Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -505); ((("b")), 100000000, 0, -506)], (0)), 100000000, 0, -507), (Tag2 ([(Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -505)], (0)), 100000000, 0, -504); ((("b")), 100000000, 0, -506)]), 100000000, 0, -503), 0), 100000000, 0, -502), 0), 100000000, 0, -501), 0, (("src/hashtbl_intf.ml", 104, 3611, 3613), ("src/hashtbl_intf.ml", 107, 3730, 3748), 0), 0, Tag1 ("Base__Hashtbl_intf", 34)), 0); (("set", 3728), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -499); ((("b")), 100000000, 0, -497)], (0)), 100000000, 0, -500), (Tag1 (("key"), (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -499)], (0)), 100000000, 0, -498), (Tag1 (("data"), ((("b")), 100000000, 0, -497), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -496), 0), 100000000, 0, -495), 0), 100000000, 0, -494), 0), 100000000, 0, -493), 0, (("src/hashtbl_intf.ml", 110, 3791, 3793), ("src/hashtbl_intf.ml", 110, 3791, 3846), 0), 0, Tag1 ("Base__Hashtbl_intf", 35)), 0); (("add", 3729), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -491); ((("b")), 100000000, 0, -489)], (0)), 100000000, 0, -492), (Tag1 (("key"), (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -491)], (0)), 100000000, 0, -490), (Tag1 (("data"), ((("b")), 100000000, 0, -489), (Tag8 (([("Duplicate", (0)); ("Ok", (0))], (0, 100000000, 0, -488), 1, 0, 0)), 100000000, 0, -487), 0), 100000000, 0, -486), 0), 100000000, 0, -485), 0), 100000000, 0, -484), 0, (("src/hashtbl_intf.ml", 113, 3935, 3937), ("src/hashtbl_intf.ml", 113, 3935, 4006), 0), 0, Tag1 ("Base__Hashtbl_intf", 36)), 0); (("add_exn", 3730), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -482); ((("b")), 100000000, 0, -480)], (0)), 100000000, 0, -483), (Tag1 (("key"), (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -482)], (0)), 100000000, 0, -481), (Tag1 (("data"), ((("b")), 100000000, 0, -480), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -479), 0), 100000000, 0, -478), 0), 100000000, 0, -477), 0), 100000000, 0, -476), 0, (("src/hashtbl_intf.ml", 115, 4008, 4010), ("src/hashtbl_intf.ml", 115, 4008, 4067), 0), 0, Tag1 ("Base__Hashtbl_intf", 37)), 0); (("change", 3731), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -474); ((("b")), 100000000, 0, -471)], (0)), 100000000, 0, -475), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -474)], (0)), 100000000, 0, -473), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -471)], (0)), 100000000, 0, -472), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -471)], (0)), 100000000, 0, -470), 0), 100000000, 0, -469), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -468), 0), 100000000, 0, -467), 0), 100000000, 0, -466), 0), 100000000, 0, -465), 0, (("src/hashtbl_intf.ml", 118, 4150, 4152), ("src/hashtbl_intf.ml", 118, 4150, 4233), 0), 0, Tag1 ("Base__Hashtbl_intf", 38)), 0); (("update", 3732), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -463); ((("b")), 100000000, 0, -460)], (0)), 100000000, 0, -464), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -463)], (0)), 100000000, 0, -462), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -460)], (0)), 100000000, 0, -461), ((("b")), 100000000, 0, -460), 0), 100000000, 0, -459), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -458), 0), 100000000, 0, -457), 0), 100000000, 0, -456), 0), 100000000, 0, -455), 0, (("src/hashtbl_intf.ml", 121, 4306, 4308), ("src/hashtbl_intf.ml", 121, 4306, 4382), 0), 0, Tag1 ("Base__Hashtbl_intf", 39)), 0); (("update_and_return", 3733), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -453); ((("b")), 100000000, 0, -449)], (0)), 100000000, 0, -454), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -453)], (0)), 100000000, 0, -452), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -449)], (0)), 100000000, 0, -451), ((("b")), 100000000, 0, -449), 0), 100000000, 0, -450), ((("b")), 100000000, 0, -449), 0), 100000000, 0, -448), 0), 100000000, 0, -447), 0), 100000000, 0, -446), 0, (("src/hashtbl_intf.ml", 124, 4468, 4470), ("src/hashtbl_intf.ml", 124, 4468, 4553), 0), 0, Tag1 ("Base__Hashtbl_intf", 40)), 0); (("map", 3734), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -441); ((("b")), 100000000, 0, -444)], (0)), 100000000, 0, -445), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -444), ((("c")), 100000000, 0, -442), 0), 100000000, 0, -443), (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -441); ((("c")), 100000000, 0, -442)], (0)), 100000000, 0, -440), 0), 100000000, 0, -439), 0), 100000000, 0, -438), 0, (("src/hashtbl_intf.ml", 137, 4914, 4916), ("src/hashtbl_intf.ml", 137, 4914, 4976), 0), 0, Tag1 ("Base__Hashtbl_intf", 41)), 0); (("mapi", 3735), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -431); ((("b")), 100000000, 0, -435)], (0)), 100000000, 0, -437), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -431)], (0)), 100000000, 0, -436), (Tag1 (("data"), ((("b")), 100000000, 0, -435), ((("c")), 100000000, 0, -432), 0), 100000000, 0, -434), 0), 100000000, 0, -433), (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -431); ((("c")), 100000000, 0, -432)], (0)), 100000000, 0, -430), 0), 100000000, 0, -429), 0), 100000000, 0, -428), 0, (("src/hashtbl_intf.ml", 140, 5058, 5060), ("src/hashtbl_intf.ml", 140, 5058, 5140), 0), 0, Tag1 ("Base__Hashtbl_intf", 42)), 0); (("filter_map", 3736), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -422); ((("b")), 100000000, 0, -426)], (0)), 100000000, 0, -427), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -426), (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -423)], (0)), 100000000, 0, -425), 0), 100000000, 0, -424), (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -422); ((("c")), 100000000, 0, -423)], (0)), 100000000, 0, -421), 0), 100000000, 0, -420), 0), 100000000, 0, -419), 0, (("src/hashtbl_intf.ml", 154, 5610, 5612), ("src/hashtbl_intf.ml", 154, 5610, 5686), 0), 0, Tag1 ("Base__Hashtbl_intf", 43)), 0); (("filter_mapi", 3737), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -411); ((("b")), 100000000, 0, -416)], (0)), 100000000, 0, -418), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -411)], (0)), 100000000, 0, -417), (Tag1 (("data"), ((("b")), 100000000, 0, -416), (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -412)], (0)), 100000000, 0, -415), 0), 100000000, 0, -414), 0), 100000000, 0, -413), (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -411); ((("c")), 100000000, 0, -412)], (0)), 100000000, 0, -410), 0), 100000000, 0, -409), 0), 100000000, 0, -408), 0, (("src/hashtbl_intf.ml", 157, 5775, 5777), ("src/hashtbl_intf.ml", 160, 5867, 5884), 0), 0, Tag1 ("Base__Hashtbl_intf", 44)), 0); (("filter_keys", 3738), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -402); ((("b")), 100000000, 0, -403)], (0)), 100000000, 0, -407), (Tag1 (("f"), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -402)], (0)), 100000000, 0, -406), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -405), 0), 100000000, 0, -404), (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -402); ((("b")), 100000000, 0, -403)], (0)), 100000000, 0, -401), 0), 100000000, 0, -400), 0), 100000000, 0, -399), 0, (("src/hashtbl_intf.ml", 162, 5886, 5888), ("src/hashtbl_intf.ml", 162, 5886, 5962), 0), 0, Tag1 ("Base__Hashtbl_intf", 45)), 0); (("filter", 3739), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -394); ((("b")), 100000000, 0, -395)], (0)), 100000000, 0, -398), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -395), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -397), 0), 100000000, 0, -396), (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -394); ((("b")), 100000000, 0, -395)], (0)), 100000000, 0, -393), 0), 100000000, 0, -392), 0), 100000000, 0, -391), 0, (("src/hashtbl_intf.ml", 163, 5963, 5965), ("src/hashtbl_intf.ml", 163, 5963, 6030), 0), 0, Tag1 ("Base__Hashtbl_intf", 46)), 0); (("filteri", 3740), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -384); ((("b")), 100000000, 0, -385)], (0)), 100000000, 0, -390), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -384)], (0)), 100000000, 0, -389), (Tag1 (("data"), ((("b")), 100000000, 0, -385), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -388), 0), 100000000, 0, -387), 0), 100000000, 0, -386), (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -384); ((("b")), 100000000, 0, -385)], (0)), 100000000, 0, -383), 0), 100000000, 0, -382), 0), 100000000, 0, -381), 0, (("src/hashtbl_intf.ml", 164, 6031, 6033), ("src/hashtbl_intf.ml", 164, 6031, 6118), 0), 0, Tag1 ("Base__Hashtbl_intf", 47)), 0); (("partition_map", 3741), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -373); ((("b")), 100000000, 0, -379)], (0)), 100000000, 0, -380), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -379), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Either"), "t"), [((("c")), 100000000, 0, -374); ((("d")), 100000000, 0, -376)], (0)), 100000000, 0, -378), 0), 100000000, 0, -377), (Tag2 ([(Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -373); ((("c")), 100000000, 0, -374)], (0)), 100000000, 0, -372); (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -373); ((("d")), 100000000, 0, -376)], (0)), 100000000, 0, -375)]), 100000000, 0, -371), 0), 100000000, 0, -370), 0), 100000000, 0, -369), 0, (("src/hashtbl_intf.ml", 168, 6220, 6222), ("src/hashtbl_intf.ml", 171, 6303, 6333), 0), 0, Tag1 ("Base__Hashtbl_intf", 48)), 0); (("partition_mapi", 3742), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -359); ((("b")), 100000000, 0, -366)], (0)), 100000000, 0, -368), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -359)], (0)), 100000000, 0, -367), (Tag1 (("data"), ((("b")), 100000000, 0, -366), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Either"), "t"), [((("c")), 100000000, 0, -360); ((("d")), 100000000, 0, -362)], (0)), 100000000, 0, -365), 0), 100000000, 0, -364), 0), 100000000, 0, -363), (Tag2 ([(Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -359); ((("c")), 100000000, 0, -360)], (0)), 100000000, 0, -358); (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -359); ((("d")), 100000000, 0, -362)], (0)), 100000000, 0, -361)]), 100000000, 0, -357), 0), 100000000, 0, -356), 0), 100000000, 0, -355), 0, (("src/hashtbl_intf.ml", 174, 6425, 6427), ("src/hashtbl_intf.ml", 177, 6528, 6558), 0), 0, Tag1 ("Base__Hashtbl_intf", 49)), 0); (("partition_tf", 3743), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -349); ((("b")), 100000000, 0, -350)], (0)), 100000000, 0, -354), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -350), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -353), 0), 100000000, 0, -352), (Tag2 ([(Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -349); ((("b")), 100000000, 0, -350)], (0)), 100000000, 0, -348); (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -349); ((("b")), 100000000, 0, -350)], (0)), 100000000, 0, -351)]), 100000000, 0, -347), 0), 100000000, 0, -346), 0), 100000000, 0, -345), 0, (("src/hashtbl_intf.ml", 181, 6731, 6733), ("src/hashtbl_intf.ml", 181, 6731, 6817), 0), 0, Tag1 ("Base__Hashtbl_intf", 50)), 0); (("partitioni_tf", 3744), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -337); ((("b")), 100000000, 0, -338)], (0)), 100000000, 0, -344), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -337)], (0)), 100000000, 0, -343), (Tag1 (("data"), ((("b")), 100000000, 0, -338), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -342), 0), 100000000, 0, -341), 0), 100000000, 0, -340), (Tag2 ([(Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -337); ((("b")), 100000000, 0, -338)], (0)), 100000000, 0, -336); (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -337); ((("b")), 100000000, 0, -338)], (0)), 100000000, 0, -339)]), 100000000, 0, -335), 0), 100000000, 0, -334), 0), 100000000, 0, -333), 0, (("src/hashtbl_intf.ml", 184, 6908, 6910), ("src/hashtbl_intf.ml", 187, 6997, 7027), 0), 0, Tag1 ("Base__Hashtbl_intf", 51)), 0); (("find_or_add", 3745), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -331); ((("b")), 100000000, 0, -327)], (0)), 100000000, 0, -332), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -331)], (0)), 100000000, 0, -330), (Tag1 (("default"), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -329), ((("b")), 100000000, 0, -327), 0), 100000000, 0, -328), ((("b")), 100000000, 0, -327), 0), 100000000, 0, -326), 0), 100000000, 0, -325), 0), 100000000, 0, -324), 0, (("src/hashtbl_intf.ml", 191, 7201, 7203), ("src/hashtbl_intf.ml", 191, 7201, 7281), 0), 0, Tag1 ("Base__Hashtbl_intf", 52)), 0); (("findi_or_add", 3746), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -321); ((("b")), 100000000, 0, -318)], (0)), 100000000, 0, -323), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -321)], (0)), 100000000, 0, -322), (Tag1 (("default"), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -321)], (0)), 100000000, 0, -320), ((("b")), 100000000, 0, -318), 0), 100000000, 0, -319), ((("b")), 100000000, 0, -318), 0), 100000000, 0, -317), 0), 100000000, 0, -316), 0), 100000000, 0, -315), 0, (("src/hashtbl_intf.ml", 194, 7355, 7357), ("src/hashtbl_intf.ml", 194, 7355, 7438), 0), 0, Tag1 ("Base__Hashtbl_intf", 53)), 0); (("find", 3747), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -313); ((("b")), 100000000, 0, -311)], (0)), 100000000, 0, -314), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -313)], (0)), 100000000, 0, -312), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -311)], (0)), 100000000, 0, -310), 0), 100000000, 0, -309), 0), 100000000, 0, -308), 0, (("src/hashtbl_intf.ml", 198, 7555, 7557), ("src/hashtbl_intf.ml", 198, 7555, 7601), 0), 0, Tag1 ("Base__Hashtbl_intf", 54)), 0); (("find_exn", 3748), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -306); ((("b")), 100000000, 0, -304)], (0)), 100000000, 0, -307), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -306)], (0)), 100000000, 0, -305), ((("b")), 100000000, 0, -304), 0), 100000000, 0, -303), 0), 100000000, 0, -302), 0, (("src/hashtbl_intf.ml", 202, 7749, 7751), ("src/hashtbl_intf.ml", 202, 7749, 7792), 0), 0, Tag1 ("Base__Hashtbl_intf", 55)), 0); (("find_and_call", 3749), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -297); ((("b")), 100000000, 0, -299)], (0)), 100000000, 0, -301), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -297)], (0)), 100000000, 0, -300), (Tag1 (("if_found"), (Tag1 (0, ((("b")), 100000000, 0, -299), ((("c")), 100000000, 0, -294), 0), 100000000, 0, -298), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -297)], (0)), 100000000, 0, -296), ((("c")), 100000000, 0, -294), 0), 100000000, 0, -295), ((("c")), 100000000, 0, -294), 0), 100000000, 0, -293), 0), 100000000, 0, -292), 0), 100000000, 0, -291), 0), 100000000, 0, -290), 0, (("src/hashtbl_intf.ml", 211, 7998, 8000), ("src/hashtbl_intf.ml", 216, 8132, 8141), 0), 0, Tag1 ("Base__Hashtbl_intf", 56)), 0); (("find_and_call1", 3750), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -284); ((("b")), 100000000, 0, -287)], (0)), 100000000, 0, -289), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -284)], (0)), 100000000, 0, -288), (Tag1 (("a"), ((("d")), 100000000, 0, -282), (Tag1 (("if_found"), (Tag1 (0, ((("b")), 100000000, 0, -287), (Tag1 (0, ((("d")), 100000000, 0, -282), ((("c")), 100000000, 0, -279), 0), 100000000, 0, -286), 0), 100000000, 0, -285), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -284)], (0)), 100000000, 0, -283), (Tag1 (0, ((("d")), 100000000, 0, -282), ((("c")), 100000000, 0, -279), 0), 100000000, 0, -281), 0), 100000000, 0, -280), ((("c")), 100000000, 0, -279), 0), 100000000, 0, -278), 0), 100000000, 0, -277), 0), 100000000, 0, -276), 0), 100000000, 0, -275), 0), 100000000, 0, -274), 0, (("src/hashtbl_intf.ml", 222, 8459, 8461), ("src/hashtbl_intf.ml", 228, 8618, 8627), 0), 0, Tag1 ("Base__Hashtbl_intf", 57)), 0); (("find_and_call2", 3751), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -267); ((("b")), 100000000, 0, -271)], (0)), 100000000, 0, -273), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -267)], (0)), 100000000, 0, -272), (Tag1 (("a"), ((("d")), 100000000, 0, -265), (Tag1 (("b"), ((("e")), 100000000, 0, -264), (Tag1 (("if_found"), (Tag1 (0, ((("b")), 100000000, 0, -271), (Tag1 (0, ((("d")), 100000000, 0, -265), (Tag1 (0, ((("e")), 100000000, 0, -264), ((("c")), 100000000, 0, -260), 0), 100000000, 0, -270), 0), 100000000, 0, -269), 0), 100000000, 0, -268), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -267)], (0)), 100000000, 0, -266), (Tag1 (0, ((("d")), 100000000, 0, -265), (Tag1 (0, ((("e")), 100000000, 0, -264), ((("c")), 100000000, 0, -260), 0), 100000000, 0, -263), 0), 100000000, 0, -262), 0), 100000000, 0, -261), ((("c")), 100000000, 0, -260), 0), 100000000, 0, -259), 0), 100000000, 0, -258), 0), 100000000, 0, -257), 0), 100000000, 0, -256), 0), 100000000, 0, -255), 0), 100000000, 0, -254), 0, (("src/hashtbl_intf.ml", 230, 8629, 8631), ("src/hashtbl_intf.ml", 237, 8812, 8821), 0), 0, Tag1 ("Base__Hashtbl_intf", 58)), 0); (("findi_and_call", 3752), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -247); ((("b")), 100000000, 0, -250)], (0)), 100000000, 0, -253), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -247)], (0)), 100000000, 0, -252), (Tag1 (("if_found"), (Tag1 (("key"), (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -247)], (0)), 100000000, 0, -251), (Tag1 (("data"), ((("b")), 100000000, 0, -250), ((("c")), 100000000, 0, -244), 0), 100000000, 0, -249), 0), 100000000, 0, -248), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -247)], (0)), 100000000, 0, -246), ((("c")), 100000000, 0, -244), 0), 100000000, 0, -245), ((("c")), 100000000, 0, -244), 0), 100000000, 0, -243), 0), 100000000, 0, -242), 0), 100000000, 0, -241), 0), 100000000, 0, -240), 0, (("src/hashtbl_intf.ml", 239, 8823, 8825), ("src/hashtbl_intf.ml", 244, 8977, 8986), 0), 0, Tag1 ("Base__Hashtbl_intf", 59)), 0); (("findi_and_call1", 3753), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -232); ((("b")), 100000000, 0, -236)], (0)), 100000000, 0, -239), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -232)], (0)), 100000000, 0, -238), (Tag1 (("a"), ((("d")), 100000000, 0, -230), (Tag1 (("if_found"), (Tag1 (("key"), (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -232)], (0)), 100000000, 0, -237), (Tag1 (("data"), ((("b")), 100000000, 0, -236), (Tag1 (0, ((("d")), 100000000, 0, -230), ((("c")), 100000000, 0, -227), 0), 100000000, 0, -235), 0), 100000000, 0, -234), 0), 100000000, 0, -233), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -232)], (0)), 100000000, 0, -231), (Tag1 (0, ((("d")), 100000000, 0, -230), ((("c")), 100000000, 0, -227), 0), 100000000, 0, -229), 0), 100000000, 0, -228), ((("c")), 100000000, 0, -227), 0), 100000000, 0, -226), 0), 100000000, 0, -225), 0), 100000000, 0, -224), 0), 100000000, 0, -223), 0), 100000000, 0, -222), 0, (("src/hashtbl_intf.ml", 246, 8988, 8990), ("src/hashtbl_intf.ml", 252, 9167, 9176), 0), 0, Tag1 ("Base__Hashtbl_intf", 60)), 0); (("findi_and_call2", 3754), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -213); ((("b")), 100000000, 0, -218)], (0)), 100000000, 0, -221), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -213)], (0)), 100000000, 0, -220), (Tag1 (("a"), ((("d")), 100000000, 0, -211), (Tag1 (("b"), ((("e")), 100000000, 0, -210), (Tag1 (("if_found"), (Tag1 (("key"), (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -213)], (0)), 100000000, 0, -219), (Tag1 (("data"), ((("b")), 100000000, 0, -218), (Tag1 (0, ((("d")), 100000000, 0, -211), (Tag1 (0, ((("e")), 100000000, 0, -210), ((("c")), 100000000, 0, -206), 0), 100000000, 0, -217), 0), 100000000, 0, -216), 0), 100000000, 0, -215), 0), 100000000, 0, -214), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -213)], (0)), 100000000, 0, -212), (Tag1 (0, ((("d")), 100000000, 0, -211), (Tag1 (0, ((("e")), 100000000, 0, -210), ((("c")), 100000000, 0, -206), 0), 100000000, 0, -209), 0), 100000000, 0, -208), 0), 100000000, 0, -207), ((("c")), 100000000, 0, -206), 0), 100000000, 0, -205), 0), 100000000, 0, -204), 0), 100000000, 0, -203), 0), 100000000, 0, -202), 0), 100000000, 0, -201), 0), 100000000, 0, -200), 0, (("src/hashtbl_intf.ml", 254, 9178, 9180), ("src/hashtbl_intf.ml", 261, 9381, 9390), 0), 0, Tag1 ("Base__Hashtbl_intf", 61)), 0); (("find_and_remove", 3755), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -198); ((("b")), 100000000, 0, -196)], (0)), 100000000, 0, -199), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -198)], (0)), 100000000, 0, -197), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -196)], (0)), 100000000, 0, -195), 0), 100000000, 0, -194), 0), 100000000, 0, -193), 0, (("src/hashtbl_intf.ml", 265, 9525, 9527), ("src/hashtbl_intf.ml", 265, 9525, 9582), 0), 0, Tag1 ("Base__Hashtbl_intf", 62)), 0); (("merge", 3756), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("k")), 100000000, 0, -180); ((("a")), 100000000, 0, -188)], (0)), 100000000, 0, -192), (Tag1 (0, (Tag3 ((("t", 3705)), [((("k")), 100000000, 0, -180); ((("b")), 100000000, 0, -187)], (0)), 100000000, 0, -191), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3706)), [((("k")), 100000000, 0, -180)], (0)), 100000000, 0, -190), (Tag1 (0, (Tag8 (([("Both", (((Tag2 ([((("a")), 100000000, 0, -188); ((("b")), 100000000, 0, -187)]), 100000000, 0, -189)))); ("Left", ((((("a")), 100000000, 0, -188)))); ("Right", ((((("b")), 100000000, 0, -187))))], (0, 100000000, 0, -186), 1, 0, 0)), 100000000, 0, -185), (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -181)], (0)), 100000000, 0, -184), 0), 100000000, 0, -183), 0), 100000000, 0, -182), (Tag3 ((("t", 3705)), [((("k")), 100000000, 0, -180); ((("c")), 100000000, 0, -181)], (0)), 100000000, 0, -179), 0), 100000000, 0, -178), 0), 100000000, 0, -177), 0), 100000000, 0, -176), 0, (("src/hashtbl_intf.ml", 297, 10713, 10715), ("src/hashtbl_intf.ml", 303, 10880, 10897), 0), 0, Tag1 ("Base__Hashtbl_intf", 63)), 0); (("merge_into", 3757), ((Tag1 (("src"), (Tag3 ((("t", 3705)), [((("k")), 100000000, 0, -173); ((("a")), 100000000, 0, -171)], (0)), 100000000, 0, -175), (Tag1 (("dst"), (Tag3 ((("t", 3705)), [((("k")), 100000000, 0, -173); ((("b")), 100000000, 0, -169)], (0)), 100000000, 0, -174), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3706)), [((("k")), 100000000, 0, -173)], (0)), 100000000, 0, -172), (Tag1 (0, ((("a")), 100000000, 0, -171), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -169)], (0)), 100000000, 0, -170), (Tag3 (Tag1 ((("Merge_into_action", 3687)), "t"), [((("b")), 100000000, 0, -169)], (0)), 100000000, 0, -168), 0), 100000000, 0, -167), 0), 100000000, 0, -166), 0), 100000000, 0, -165), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -164), 0), 100000000, 0, -163), 0), 100000000, 0, -162), 0), 100000000, 0, -161), 0, (("src/hashtbl_intf.ml", 308, 11006, 11008), ("src/hashtbl_intf.ml", 312, 11144, 11155), 0), 0, Tag1 ("Base__Hashtbl_intf", 64)), 0); (("keys", 3758), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -158); ((0), 100000000, 0, -160)], (0)), 100000000, 0, -159), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -158)], (0)), 100000000, 0, -157)], (0)), 100000000, 0, -156), 0), 100000000, 0, -155), 0, (("src/hashtbl_intf.ml", 315, 11216, 11218), ("src/hashtbl_intf.ml", 315, 11216, 11253), 0), 0, Tag1 ("Base__Hashtbl_intf", 65)), 0); (("data", 3759), ((Tag1 (0, (Tag3 ((("t", 3705)), [((0), 100000000, 0, -154); ((("b")), 100000000, 0, -152)], (0)), 100000000, 0, -153), (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -152)], (0)), 100000000, 0, -151), 0), 100000000, 0, -150), 0, (("src/hashtbl_intf.ml", 318, 11314, 11316), ("src/hashtbl_intf.ml", 318, 11314, 11347), 0), 0, Tag1 ("Base__Hashtbl_intf", 66)), 0); (("filter_keys_inplace", 3760), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -147); ((0), 100000000, 0, -149)], (0)), 100000000, 0, -148), (Tag1 (("f"), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -147)], (0)), 100000000, 0, -146), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -145), 0), 100000000, 0, -144), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -143), 0), 100000000, 0, -142), 0), 100000000, 0, -141), 0, (("src/hashtbl_intf.ml", 321, 11438, 11440), ("src/hashtbl_intf.ml", 321, 11438, 11515), 0), 0, Tag1 ("Base__Hashtbl_intf", 67)), 0); (("filter_inplace", 3761), ((Tag1 (0, (Tag3 ((("t", 3705)), [((0), 100000000, 0, -140); ((("b")), 100000000, 0, -138)], (0)), 100000000, 0, -139), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -138), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -137), 0), 100000000, 0, -136), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -135), 0), 100000000, 0, -134), 0), 100000000, 0, -133), 0, (("src/hashtbl_intf.ml", 323, 11517, 11519), ("src/hashtbl_intf.ml", 323, 11517, 11585), 0), 0, Tag1 ("Base__Hashtbl_intf", 68)), 0); (("filteri_inplace", 3762), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -131); ((("b")), 100000000, 0, -129)], (0)), 100000000, 0, -132), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -131)], (0)), 100000000, 0, -130), (Tag1 (("data"), ((("b")), 100000000, 0, -129), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -128), 0), 100000000, 0, -127), 0), 100000000, 0, -126), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -125), 0), 100000000, 0, -124), 0), 100000000, 0, -123), 0, (("src/hashtbl_intf.ml", 324, 11586, 11588), ("src/hashtbl_intf.ml", 324, 11586, 11675), 0), 0, Tag1 ("Base__Hashtbl_intf", 69)), 0); (("map_inplace", 3763), ((Tag1 (0, (Tag3 ((("t", 3705)), [((0), 100000000, 0, -122); ((("b")), 100000000, 0, -120)], (0)), 100000000, 0, -121), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -120), ((("b")), 100000000, 0, -120), 0), 100000000, 0, -119), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -118), 0), 100000000, 0, -117), 0), 100000000, 0, -116), 0, (("src/hashtbl_intf.ml", 328, 11775, 11777), ("src/hashtbl_intf.ml", 328, 11775, 11838), 0), 0, Tag1 ("Base__Hashtbl_intf", 70)), 0); (("mapi_inplace", 3764), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -114); ((("b")), 100000000, 0, -112)], (0)), 100000000, 0, -115), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -114)], (0)), 100000000, 0, -113), (Tag1 (("data"), ((("b")), 100000000, 0, -112), ((("b")), 100000000, 0, -112), 0), 100000000, 0, -111), 0), 100000000, 0, -110), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -109), 0), 100000000, 0, -108), 0), 100000000, 0, -107), 0, (("src/hashtbl_intf.ml", 330, 11840, 11842), ("src/hashtbl_intf.ml", 330, 11840, 11924), 0), 0, Tag1 ("Base__Hashtbl_intf", 71)), 0); (("filter_map_inplace", 3765), ((Tag1 (0, (Tag3 ((("t", 3705)), [((0), 100000000, 0, -106); ((("b")), 100000000, 0, -104)], (0)), 100000000, 0, -105), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -104), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -104)], (0)), 100000000, 0, -103), 0), 100000000, 0, -102), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -101), 0), 100000000, 0, -100), 0), 100000000, 0, -99), 0, (("src/hashtbl_intf.ml", 333, 12016, 12018), ("src/hashtbl_intf.ml", 333, 12016, 12093), 0), 0, Tag1 ("Base__Hashtbl_intf", 72)), 0); (("filter_mapi_inplace", 3766), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -97); ((("b")), 100000000, 0, -95)], (0)), 100000000, 0, -98), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -97)], (0)), 100000000, 0, -96), (Tag1 (("data"), ((("b")), 100000000, 0, -95), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -95)], (0)), 100000000, 0, -94), 0), 100000000, 0, -93), 0), 100000000, 0, -92), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -91), 0), 100000000, 0, -90), 0), 100000000, 0, -89), 0, (("src/hashtbl_intf.ml", 335, 12095, 12097), ("src/hashtbl_intf.ml", 338, 12195, 12206), 0), 0, Tag1 ("Base__Hashtbl_intf", 73)), 0); (("equal", 3767), ((Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -84), (Tag1 (0, ((("b")), 100000000, 0, -84), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -88), 0), 100000000, 0, -87), 0), 100000000, 0, -86), (Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -83); ((("b")), 100000000, 0, -84)], (0)), 100000000, 0, -85), (Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -83); ((("b")), 100000000, 0, -84)], (0)), 100000000, 0, -82), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0), 100000000, 0, -79), 0), 100000000, 0, -78), 0, (("src/hashtbl_intf.ml", 343, 12431, 12433), ("src/hashtbl_intf.ml", 343, 12431, 12499), 0), 0, Tag1 ("Base__Hashtbl_intf", 74)), 0); (("similar", 3768), ((Tag1 (0, (Tag1 (0, ((("b1")), 100000000, 0, -74), (Tag1 (0, ((("b2")), 100000000, 0, -72), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0), 100000000, 0, -75), (Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -71); ((("b1")), 100000000, 0, -74)], (0)), 100000000, 0, -73), (Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -71); ((("b2")), 100000000, 0, -72)], (0)), 100000000, 0, -70), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -69), 0), 100000000, 0, -68), 0), 100000000, 0, -67), 0), 100000000, 0, -66), 0, (("src/hashtbl_intf.ml", 345, 12501, 12503), ("src/hashtbl_intf.ml", 345, 12501, 12575), 0), 0, Tag1 ("Base__Hashtbl_intf", 75)), 0); (("to_alist", 3769), ((Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -63); ((("b")), 100000000, 0, -64)], (0)), 100000000, 0, -65), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -63)], (0)), 100000000, 0, -62); ((("b")), 100000000, 0, -64)]), 100000000, 0, -61)], (0)), 100000000, 0, -60), 0), 100000000, 0, -59), 0, (("src/hashtbl_intf.ml", 348, 12649, 12651), ("src/hashtbl_intf.ml", 348, 12649, 12698), 0), 0, Tag1 ("Base__Hashtbl_intf", 76)), 0); (("incr", 3770), ((Tag1 (Tag1 ("by"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -58)], (0)), 100000000, 0, -57), (Tag1 (Tag1 ("remove_if_zero"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -56)], (0)), 100000000, 0, -55), (Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -52); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -54)], (0)), 100000000, 0, -53), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -52)], (0)), 100000000, 0, -51), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0), 100000000, 0, -48), 0), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("src/hashtbl_intf.ml", 352, 12749, 12751), ("src/hashtbl_intf.ml", 352, 12749, 12826), 0), 0, Tag1 ("Base__Hashtbl_intf", 77)), 0); (("decr", 3771), ((Tag1 (Tag1 ("by"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -45)], (0)), 100000000, 0, -44), (Tag1 (Tag1 ("remove_if_zero"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -43)], (0)), 100000000, 0, -42), (Tag1 (0, (Tag3 ((("t", 3705)), [((("a")), 100000000, 0, -39); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -41)], (0)), 100000000, 0, -40), (Tag1 (0, (Tag3 ((("key", 3706)), [((("a")), 100000000, 0, -39)], (0)), 100000000, 0, -38), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0, (("src/hashtbl_intf.ml", 354, 12828, 12830), ("src/hashtbl_intf.ml", 354, 12828, 12905), 0), 0, Tag1 ("Base__Hashtbl_intf", 78)), 0)])), 0, (("src/hashtbl_intf.ml", 29, 577, 577), ("src/hashtbl_intf.ml", 355, 12906, 12909), 0), Tag1 ("Base__Hashtbl_intf", 79)), 0); Tag4 (("Multi", 3689), ((Tag1 ([Tag1 (("t", 3772), ([((("a")), 100000000, 0, -695); ((("b")), 100000000, 0, -696)], 2, 0, 1, 0, [7; 7], [2; 2], 0, 0, (("src/hashtbl_intf.ml", 358, 12935, 12937), ("src/hashtbl_intf.ml", 358, 12935, 12952), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 80)), 1, 0); Tag1 (("key", 3773), ([((("a")), 100000000, 0, -694)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/hashtbl_intf.ml", 359, 12953, 12955), ("src/hashtbl_intf.ml", 359, 12953, 12966), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 81)), 1, 0); (("add_multi", 3774), ((Tag1 (0, (Tag3 ((("t", 3772)), [((("a")), 100000000, 0, -691); (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -689)], (0)), 100000000, 0, -693)], (0)), 100000000, 0, -692), (Tag1 (("key"), (Tag3 ((("key", 3773)), [((("a")), 100000000, 0, -691)], (0)), 100000000, 0, -690), (Tag1 (("data"), ((("b")), 100000000, 0, -689), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -688), 0), 100000000, 0, -687), 0), 100000000, 0, -686), 0), 100000000, 0, -685), 0, (("src/hashtbl_intf.ml", 363, 13119, 13121), ("src/hashtbl_intf.ml", 363, 13119, 13185), 0), 0, Tag1 ("Base__Hashtbl_intf", 82)), 0); (("remove_multi", 3775), ((Tag1 (0, (Tag3 ((("t", 3772)), [((("a")), 100000000, 0, -681); (Tag3 ((Tag3 ("list", 9)), [((0), 100000000, 0, -684)], (0)), 100000000, 0, -683)], (0)), 100000000, 0, -682), (Tag1 (0, (Tag3 ((("key", 3773)), [((("a")), 100000000, 0, -681)], (0)), 100000000, 0, -680), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -679), 0), 100000000, 0, -678), 0), 100000000, 0, -677), 0, (("src/hashtbl_intf.ml", 368, 13370, 13372), ("src/hashtbl_intf.ml", 368, 13370, 13423), 0), 0, Tag1 ("Base__Hashtbl_intf", 83)), 0); (("find_multi", 3776), ((Tag1 (0, (Tag3 ((("t", 3772)), [((("a")), 100000000, 0, -674); (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -672)], (0)), 100000000, 0, -676)], (0)), 100000000, 0, -675), (Tag1 (0, (Tag3 ((("key", 3773)), [((("a")), 100000000, 0, -674)], (0)), 100000000, 0, -673), (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -672)], (0)), 100000000, 0, -671), 0), 100000000, 0, -670), 0), 100000000, 0, -669), 0, (("src/hashtbl_intf.ml", 372, 13562, 13564), ("src/hashtbl_intf.ml", 372, 13562, 13617), 0), 0, Tag1 ("Base__Hashtbl_intf", 84)), 0)])), 0, (("src/hashtbl_intf.ml", 357, 12911, 12911), ("src/hashtbl_intf.ml", 373, 13618, 13621), 0), Tag1 ("Base__Hashtbl_intf", 85)), 0); Tag1 (("create_options", 3690), ([((("key")), 100000000, 0, -16); ((("data")), 100000000, 0, -21); ((("z")), 100000000, 0, -14)], 3, 0, 1, ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -20)], (0)), 100000000, 0, -19), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -18)], (0)), 100000000, 0, -17), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("key")), 100000000, 0, -16)], (0)), 100000000, 0, -15), ((("z")), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11)), [63; 0; 25], [0; 0; 0], 0, 0, (("src/hashtbl_intf.ml", 375, 13623, 13623), ("src/hashtbl_intf.ml", 379, 13776, 13783), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 86)), 1, 0); Tag1 (("create_options_without_first_class_module", 3691), ([((("key")), 100000000, 0, -9); ((("data")), 100000000, 0, -10); ((("z")), 100000000, 0, -4)], 3, 0, 1, ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -8)], (0)), 100000000, 0, -7), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -6)], (0)), 100000000, 0, -5), ((("z")), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2)), [0; 0; 25], [0; 0; 0], 0, 0, (("src/hashtbl_intf.ml", 381, 13785, 13785), ("src/hashtbl_intf.ml", 384, 13949, 13956), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 87)), 1, 0); Tag4 (("Creators_generic", 3692), ((Tag1 ([Tag1 (("t", 3777), ([((("a")), 100000000, 0, -831); ((("b")), 100000000, 0, -832)], 2, 0, 1, 0, [7; 7], [2; 2], 0, 0, (("src/hashtbl_intf.ml", 387, 13993, 13995), ("src/hashtbl_intf.ml", 387, 13993, 14010), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 88)), 1, 0); Tag1 (("key", 3778), ([((("a")), 100000000, 0, -830)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/hashtbl_intf.ml", 388, 14011, 14013), ("src/hashtbl_intf.ml", 388, 14011, 14024), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 89)), 1, 0); Tag1 (("create_options", 3779), ([((("key")), 100000000, 0, -827); ((("data")), 100000000, 0, -828); ((("z")), 100000000, 0, -829)], 3, 0, 1, 0, [7; 7; 7], [2; 2; 2], 0, 0, (("src/hashtbl_intf.ml", 389, 14025, 14027), ("src/hashtbl_intf.ml", 389, 14025, 14064), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 90)), 1, 0); (("create", 3780), ((Tag3 ((("create_options", 3779)), [(Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -822)], (0)), 100000000, 0, -821); ((("b")), 100000000, 0, -823); (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -826), (Tag3 ((("t", 3777)), [((("a")), 100000000, 0, -822); ((("b")), 100000000, 0, -823)], (0)), 100000000, 0, -825), 0), 100000000, 0, -824)], (0)), 100000000, 0, -820), 0, (("src/hashtbl_intf.ml", 391, 14066, 14068), ("src/hashtbl_intf.ml", 391, 14066, 14128), 0), 0, Tag1 ("Base__Hashtbl_intf", 91)), 0); (("of_alist", 3781), ((Tag3 ((("create_options", 3779)), [(Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -810)], (0)), 100000000, 0, -809); ((("b")), 100000000, 0, -811); (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -810)], (0)), 100000000, 0, -819); ((("b")), 100000000, 0, -811)]), 100000000, 0, -818)], (0)), 100000000, 0, -817), (Tag8 (([("Duplicate_key", (((Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -810)], (0)), 100000000, 0, -816)))); ("Ok", (((Tag3 ((("t", 3777)), [((("a")), 100000000, 0, -810); ((("b")), 100000000, 0, -811)], (0)), 100000000, 0, -815))))], (0, 100000000, 0, -814), 1, 0, 0)), 100000000, 0, -813), 0), 100000000, 0, -812)], (0)), 100000000, 0, -808), 0, (("src/hashtbl_intf.ml", 394, 14131, 14133), ("src/hashtbl_intf.ml", 398, 14253, 14275), 0), 0, Tag1 ("Base__Hashtbl_intf", 92)), 0); (("of_alist_report_all_dups", 3782), ((Tag3 ((("create_options", 3779)), [(Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -797)], (0)), 100000000, 0, -796); ((("b")), 100000000, 0, -798); (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -797)], (0)), 100000000, 0, -807); ((("b")), 100000000, 0, -798)]), 100000000, 0, -806)], (0)), 100000000, 0, -805), (Tag8 (([("Duplicate_keys", (((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -797)], (0)), 100000000, 0, -804)], (0)), 100000000, 0, -803)))); ("Ok", (((Tag3 ((("t", 3777)), [((("a")), 100000000, 0, -797); ((("b")), 100000000, 0, -798)], (0)), 100000000, 0, -802))))], (0, 100000000, 0, -801), 1, 0, 0)), 100000000, 0, -800), 0), 100000000, 0, -799)], (0)), 100000000, 0, -795), 0, (("src/hashtbl_intf.ml", 400, 14277, 14279), ("src/hashtbl_intf.ml", 404, 14421, 14443), 0), 0, Tag1 ("Base__Hashtbl_intf", 93)), 0); (("of_alist_or_error", 3783), ((Tag3 ((("create_options", 3779)), [(Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -787)], (0)), 100000000, 0, -786); ((("b")), 100000000, 0, -788); (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -787)], (0)), 100000000, 0, -794); ((("b")), 100000000, 0, -788)]), 100000000, 0, -793)], (0)), 100000000, 0, -792), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Or_error"), "t"), [(Tag3 ((("t", 3777)), [((("a")), 100000000, 0, -787); ((("b")), 100000000, 0, -788)], (0)), 100000000, 0, -791)], (0)), 100000000, 0, -790), 0), 100000000, 0, -789)], (0)), 100000000, 0, -785), 0, (("src/hashtbl_intf.ml", 406, 14445, 14447), ("src/hashtbl_intf.ml", 407, 14469, 14547), 0), 0, Tag1 ("Base__Hashtbl_intf", 94)), 0); (("of_alist_exn", 3784), ((Tag3 ((("create_options", 3779)), [(Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -778)], (0)), 100000000, 0, -777); ((("b")), 100000000, 0, -779); (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -778)], (0)), 100000000, 0, -784); ((("b")), 100000000, 0, -779)]), 100000000, 0, -783)], (0)), 100000000, 0, -782), (Tag3 ((("t", 3777)), [((("a")), 100000000, 0, -778); ((("b")), 100000000, 0, -779)], (0)), 100000000, 0, -781), 0), 100000000, 0, -780)], (0)), 100000000, 0, -776), 0, (("src/hashtbl_intf.ml", 409, 14549, 14551), ("src/hashtbl_intf.ml", 409, 14549, 14631), 0), 0, Tag1 ("Base__Hashtbl_intf", 95)), 0); (("of_alist_multi", 3785), ((Tag3 ((("create_options", 3779)), [(Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -767)], (0)), 100000000, 0, -766); (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -769)], (0)), 100000000, 0, -768); (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -767)], (0)), 100000000, 0, -775); ((("b")), 100000000, 0, -769)]), 100000000, 0, -774)], (0)), 100000000, 0, -773), (Tag3 ((("t", 3777)), [((("a")), 100000000, 0, -767); (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -769)], (0)), 100000000, 0, -772)], (0)), 100000000, 0, -771), 0), 100000000, 0, -770)], (0)), 100000000, 0, -765), 0, (("src/hashtbl_intf.ml", 411, 14633, 14635), ("src/hashtbl_intf.ml", 412, 14654, 14731), 0), 0, Tag1 ("Base__Hashtbl_intf", 96)), 0); (("create_mapped", 3786), ((Tag3 ((("create_options", 3779)), [(Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -750)], (0)), 100000000, 0, -749); ((("b")), 100000000, 0, -751); (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -761), (Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -750)], (0)), 100000000, 0, -764), 0), 100000000, 0, -763), (Tag1 (("get_data"), (Tag1 (0, ((("r")), 100000000, 0, -761), ((("b")), 100000000, 0, -751), 0), 100000000, 0, -762), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -761)], (0)), 100000000, 0, -760), (Tag8 (([("Duplicate_keys", (((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -750)], (0)), 100000000, 0, -759)], (0)), 100000000, 0, -758)))); ("Ok", (((Tag3 ((("t", 3777)), [((("a")), 100000000, 0, -750); ((("b")), 100000000, 0, -751)], (0)), 100000000, 0, -757))))], (0, 100000000, 0, -756), 1, 0, 0)), 100000000, 0, -755), 0), 100000000, 0, -754), 0), 100000000, 0, -753), 0), 100000000, 0, -752)], (0)), 100000000, 0, -748), 0, (("src/hashtbl_intf.ml", 417, 14868, 14870), ("src/hashtbl_intf.ml", 424, 15083, 15105), 0), 0, Tag1 ("Base__Hashtbl_intf", 97)), 0); (("create_with_key", 3787), ((Tag3 ((("create_options", 3779)), [(Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -736)], (0)), 100000000, 0, -735); ((("r")), 100000000, 0, -737); (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -737), (Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -736)], (0)), 100000000, 0, -747), 0), 100000000, 0, -746), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -737)], (0)), 100000000, 0, -745), (Tag8 (([("Duplicate_keys", (((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -736)], (0)), 100000000, 0, -744)], (0)), 100000000, 0, -743)))); ("Ok", (((Tag3 ((("t", 3777)), [((("a")), 100000000, 0, -736); ((("r")), 100000000, 0, -737)], (0)), 100000000, 0, -742))))], (0, 100000000, 0, -741), 1, 0, 0)), 100000000, 0, -740), 0), 100000000, 0, -739), 0), 100000000, 0, -738)], (0)), 100000000, 0, -734), 0, (("src/hashtbl_intf.ml", 429, 15218, 15220), ("src/hashtbl_intf.ml", 435, 15394, 15416), 0), 0, Tag1 ("Base__Hashtbl_intf", 98)), 0); (("create_with_key_or_error", 3788), ((Tag3 ((("create_options", 3779)), [(Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -725)], (0)), 100000000, 0, -724); ((("r")), 100000000, 0, -726); (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -726), (Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -725)], (0)), 100000000, 0, -733), 0), 100000000, 0, -732), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -726)], (0)), 100000000, 0, -731), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Or_error"), "t"), [(Tag3 ((("t", 3777)), [((("a")), 100000000, 0, -725); ((("r")), 100000000, 0, -726)], (0)), 100000000, 0, -730)], (0)), 100000000, 0, -729), 0), 100000000, 0, -728), 0), 100000000, 0, -727)], (0)), 100000000, 0, -723), 0, (("src/hashtbl_intf.ml", 437, 15418, 15420), ("src/hashtbl_intf.ml", 441, 15554, 15576), 0), 0, Tag1 ("Base__Hashtbl_intf", 99)), 0); (("create_with_key_exn", 3789), ((Tag3 ((("create_options", 3779)), [(Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -715)], (0)), 100000000, 0, -714); ((("r")), 100000000, 0, -716); (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -716), (Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -715)], (0)), 100000000, 0, -722), 0), 100000000, 0, -721), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -716)], (0)), 100000000, 0, -720), (Tag3 ((("t", 3777)), [((("a")), 100000000, 0, -715); ((("r")), 100000000, 0, -716)], (0)), 100000000, 0, -719), 0), 100000000, 0, -718), 0), 100000000, 0, -717)], (0)), 100000000, 0, -713), 0, (("src/hashtbl_intf.ml", 443, 15578, 15580), ("src/hashtbl_intf.ml", 447, 15698, 15720), 0), 0, Tag1 ("Base__Hashtbl_intf", 100)), 0); (("group", 3790), ((Tag3 ((("create_options", 3779)), [(Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -699)], (0)), 100000000, 0, -698); ((("b")), 100000000, 0, -700); (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -707), (Tag3 ((("key", 3778)), [((("a")), 100000000, 0, -699)], (0)), 100000000, 0, -712), 0), 100000000, 0, -711), (Tag1 (("get_data"), (Tag1 (0, ((("r")), 100000000, 0, -707), ((("b")), 100000000, 0, -700), 0), 100000000, 0, -710), (Tag1 (("combine"), (Tag1 (0, ((("b")), 100000000, 0, -700), (Tag1 (0, ((("b")), 100000000, 0, -700), ((("b")), 100000000, 0, -700), 0), 100000000, 0, -709), 0), 100000000, 0, -708), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -707)], (0)), 100000000, 0, -706), (Tag3 ((("t", 3777)), [((("a")), 100000000, 0, -699); ((("b")), 100000000, 0, -700)], (0)), 100000000, 0, -705), 0), 100000000, 0, -704), 0), 100000000, 0, -703), 0), 100000000, 0, -702), 0), 100000000, 0, -701)], (0)), 100000000, 0, -697), 0, (("src/hashtbl_intf.ml", 450, 15723, 15725), ("src/hashtbl_intf.ml", 458, 15932, 15954), 0), 0, Tag1 ("Base__Hashtbl_intf", 101)), 0)])), 0, (("src/hashtbl_intf.ml", 386, 13958, 13958), ("src/hashtbl_intf.ml", 459, 15955, 15958), 0), Tag1 ("Base__Hashtbl_intf", 102)), 0); Tag4 (("Creators", 3693), ((Tag1 ([Tag1 (("t", 3791), ([((("a")), 100000000, 0, -1012); ((("b")), 100000000, 0, -1013)], 2, 0, 1, 0, [7; 7], [2; 2], 0, 0, (("src/hashtbl_intf.ml", 462, 15987, 15989), ("src/hashtbl_intf.ml", 462, 15987, 16004), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 103)), 1, 0); (("create", 3792), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1011)], (0)), 100000000, 0, -1010), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1009)], (0)), 100000000, 0, -1008), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -1005)], (0)), 100000000, 0, -1007), (Tag3 ((("t", 3791)), [((("a")), 100000000, 0, -1005); ((("b")), 100000000, 0, -1006)], (0)), 100000000, 0, -1004), 0), 100000000, 0, -1003), 0), 100000000, 0, -1002), 0), 100000000, 0, -1001), 0, (("src/hashtbl_intf.ml", 475, 16255, 16257), ("src/hashtbl_intf.ml", 479, 16388, 16405), 0), 0, Tag1 ("Base__Hashtbl_intf", 104)), 0); (("of_alist", 3793), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1000)], (0)), 100000000, 0, -999), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -998)], (0)), 100000000, 0, -997), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -992)], (0)), 100000000, 0, -996), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([((("a")), 100000000, 0, -992); ((("b")), 100000000, 0, -993)]), 100000000, 0, -995)], (0)), 100000000, 0, -994), (Tag8 (([("Duplicate_key", ((((("a")), 100000000, 0, -992)))); ("Ok", (((Tag3 ((("t", 3791)), [((("a")), 100000000, 0, -992); ((("b")), 100000000, 0, -993)], (0)), 100000000, 0, -991))))], (0, 100000000, 0, -990), 1, 0, 0)), 100000000, 0, -989), 0), 100000000, 0, -988), 0), 100000000, 0, -987), 0), 100000000, 0, -986), 0), 100000000, 0, -985), 0, (("src/hashtbl_intf.ml", 487, 16605, 16607), ("src/hashtbl_intf.ml", 492, 16762, 16813), 0), 0, Tag1 ("Base__Hashtbl_intf", 105)), 0); (("of_alist_report_all_dups", 3794), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -984)], (0)), 100000000, 0, -983), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -982)], (0)), 100000000, 0, -981), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -975)], (0)), 100000000, 0, -980), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([((("a")), 100000000, 0, -975); ((("b")), 100000000, 0, -976)]), 100000000, 0, -979)], (0)), 100000000, 0, -978), (Tag8 (([("Duplicate_keys", (((Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -975)], (0)), 100000000, 0, -977)))); ("Ok", (((Tag3 ((("t", 3791)), [((("a")), 100000000, 0, -975); ((("b")), 100000000, 0, -976)], (0)), 100000000, 0, -974))))], (0, 100000000, 0, -973), 1, 0, 0)), 100000000, 0, -972), 0), 100000000, 0, -971), 0), 100000000, 0, -970), 0), 100000000, 0, -969), 0), 100000000, 0, -968), 0, (("src/hashtbl_intf.ml", 506, 17422, 17424), ("src/hashtbl_intf.ml", 511, 17595, 17652), 0), 0, Tag1 ("Base__Hashtbl_intf", 106)), 0); (("of_alist_or_error", 3795), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -967)], (0)), 100000000, 0, -966), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -965)], (0)), 100000000, 0, -964), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -959)], (0)), 100000000, 0, -963), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([((("a")), 100000000, 0, -959); ((("b")), 100000000, 0, -960)]), 100000000, 0, -962)], (0)), 100000000, 0, -961), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Or_error"), "t"), [(Tag3 ((("t", 3791)), [((("a")), 100000000, 0, -959); ((("b")), 100000000, 0, -960)], (0)), 100000000, 0, -958)], (0)), 100000000, 0, -957), 0), 100000000, 0, -956), 0), 100000000, 0, -955), 0), 100000000, 0, -954), 0), 100000000, 0, -953), 0, (("src/hashtbl_intf.ml", 513, 17654, 17656), ("src/hashtbl_intf.ml", 518, 17820, 17848), 0), 0, Tag1 ("Base__Hashtbl_intf", 107)), 0); (("of_alist_exn", 3796), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -952)], (0)), 100000000, 0, -951), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -950)], (0)), 100000000, 0, -949), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -944)], (0)), 100000000, 0, -948), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([((("a")), 100000000, 0, -944); ((("b")), 100000000, 0, -945)]), 100000000, 0, -947)], (0)), 100000000, 0, -946), (Tag3 ((("t", 3791)), [((("a")), 100000000, 0, -944); ((("b")), 100000000, 0, -945)], (0)), 100000000, 0, -943), 0), 100000000, 0, -942), 0), 100000000, 0, -941), 0), 100000000, 0, -940), 0), 100000000, 0, -939), 0, (("src/hashtbl_intf.ml", 520, 17850, 17852), ("src/hashtbl_intf.ml", 525, 18011, 18028), 0), 0, Tag1 ("Base__Hashtbl_intf", 108)), 0); (("of_alist_multi", 3797), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -938)], (0)), 100000000, 0, -937), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -936)], (0)), 100000000, 0, -935), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -929)], (0)), 100000000, 0, -934), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([((("a")), 100000000, 0, -929); ((("b")), 100000000, 0, -931)]), 100000000, 0, -933)], (0)), 100000000, 0, -932), (Tag3 ((("t", 3791)), [((("a")), 100000000, 0, -929); (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -931)], (0)), 100000000, 0, -930)], (0)), 100000000, 0, -928), 0), 100000000, 0, -927), 0), 100000000, 0, -926), 0), 100000000, 0, -925), 0), 100000000, 0, -924), 0, (("src/hashtbl_intf.ml", 539, 18580, 18582), ("src/hashtbl_intf.ml", 544, 18743, 18765), 0), 0, Tag1 ("Base__Hashtbl_intf", 109)), 0); (("create_mapped", 3798), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -923)], (0)), 100000000, 0, -922), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -921)], (0)), 100000000, 0, -920), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -912)], (0)), 100000000, 0, -919), (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -916), ((("a")), 100000000, 0, -912), 0), 100000000, 0, -918), (Tag1 (("get_data"), (Tag1 (0, ((("r")), 100000000, 0, -916), ((("b")), 100000000, 0, -913), 0), 100000000, 0, -917), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -916)], (0)), 100000000, 0, -915), (Tag8 (([("Duplicate_keys", (((Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -912)], (0)), 100000000, 0, -914)))); ("Ok", (((Tag3 ((("t", 3791)), [((("a")), 100000000, 0, -912); ((("b")), 100000000, 0, -913)], (0)), 100000000, 0, -911))))], (0, 100000000, 0, -910), 1, 0, 0)), 100000000, 0, -909), 0), 100000000, 0, -908), 0), 100000000, 0, -907), 0), 100000000, 0, -906), 0), 100000000, 0, -905), 0), 100000000, 0, -904), 0), 100000000, 0, -903), 0, (("src/hashtbl_intf.ml", 571, 19534, 19536), ("src/hashtbl_intf.ml", 578, 19762, 19819), 0), 0, Tag1 ("Base__Hashtbl_intf", 110)), 0); (("create_with_key", 3799), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -902)], (0)), 100000000, 0, -901), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -900)], (0)), 100000000, 0, -899), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -893)], (0)), 100000000, 0, -898), (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -894), ((("a")), 100000000, 0, -893), 0), 100000000, 0, -897), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -894)], (0)), 100000000, 0, -896), (Tag8 (([("Duplicate_keys", (((Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -893)], (0)), 100000000, 0, -895)))); ("Ok", (((Tag3 ((("t", 3791)), [((("a")), 100000000, 0, -893); ((("r")), 100000000, 0, -894)], (0)), 100000000, 0, -892))))], (0, 100000000, 0, -891), 1, 0, 0)), 100000000, 0, -890), 0), 100000000, 0, -889), 0), 100000000, 0, -888), 0), 100000000, 0, -887), 0), 100000000, 0, -886), 0), 100000000, 0, -885), 0, (("src/hashtbl_intf.ml", 582, 19931, 19933), ("src/hashtbl_intf.ml", 588, 20124, 20181), 0), 0, Tag1 ("Base__Hashtbl_intf", 111)), 0); (("create_with_key_or_error", 3800), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -884)], (0)), 100000000, 0, -883), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -882)], (0)), 100000000, 0, -881), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -876)], (0)), 100000000, 0, -880), (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -877), ((("a")), 100000000, 0, -876), 0), 100000000, 0, -879), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -877)], (0)), 100000000, 0, -878), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Or_error"), "t"), [(Tag3 ((("t", 3791)), [((("a")), 100000000, 0, -876); ((("r")), 100000000, 0, -877)], (0)), 100000000, 0, -875)], (0)), 100000000, 0, -874), 0), 100000000, 0, -873), 0), 100000000, 0, -872), 0), 100000000, 0, -871), 0), 100000000, 0, -870), 0), 100000000, 0, -869), 0, (("src/hashtbl_intf.ml", 590, 20183, 20185), ("src/hashtbl_intf.ml", 596, 20385, 20413), 0), 0, Tag1 ("Base__Hashtbl_intf", 112)), 0); (("create_with_key_exn", 3801), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -868)], (0)), 100000000, 0, -867), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -866)], (0)), 100000000, 0, -865), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -860)], (0)), 100000000, 0, -864), (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -861), ((("a")), 100000000, 0, -860), 0), 100000000, 0, -863), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -861)], (0)), 100000000, 0, -862), (Tag3 ((("t", 3791)), [((("a")), 100000000, 0, -860); ((("r")), 100000000, 0, -861)], (0)), 100000000, 0, -859), 0), 100000000, 0, -858), 0), 100000000, 0, -857), 0), 100000000, 0, -856), 0), 100000000, 0, -855), 0), 100000000, 0, -854), 0, (("src/hashtbl_intf.ml", 598, 20415, 20417), ("src/hashtbl_intf.ml", 604, 20612, 20629), 0), 0, Tag1 ("Base__Hashtbl_intf", 113)), 0); (("group", 3802), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -853)], (0)), 100000000, 0, -852), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -851)], (0)), 100000000, 0, -850), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -841)], (0)), 100000000, 0, -849), (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -844), ((("a")), 100000000, 0, -841), 0), 100000000, 0, -848), (Tag1 (("get_data"), (Tag1 (0, ((("r")), 100000000, 0, -844), ((("b")), 100000000, 0, -842), 0), 100000000, 0, -847), (Tag1 (("combine"), (Tag1 (0, ((("b")), 100000000, 0, -842), (Tag1 (0, ((("b")), 100000000, 0, -842), ((("b")), 100000000, 0, -842), 0), 100000000, 0, -846), 0), 100000000, 0, -845), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -844)], (0)), 100000000, 0, -843), (Tag3 ((("t", 3791)), [((("a")), 100000000, 0, -841); ((("b")), 100000000, 0, -842)], (0)), 100000000, 0, -840), 0), 100000000, 0, -839), 0), 100000000, 0, -838), 0), 100000000, 0, -837), 0), 100000000, 0, -836), 0), 100000000, 0, -835), 0), 100000000, 0, -834), 0), 100000000, 0, -833), 0, (("src/hashtbl_intf.ml", 623, 21336, 21338), ("src/hashtbl_intf.ml", 631, 21598, 21615), 0), 0, Tag1 ("Base__Hashtbl_intf", 114)), 0)])), 0, (("src/hashtbl_intf.ml", 461, 15960, 15960), ("src/hashtbl_intf.ml", 632, 21616, 21619), 0), Tag1 ("Base__Hashtbl_intf", 115)), 0); Tag4 (("S_without_submodules", 3694), ((Tag1 ([(("hash", 3803), ((Tag1 (0, ((("a")), 100000000, 0, -1887), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1886), 0), 100000000, 0, -1885), 0, (("src/hashtbl_intf.ml", 635, 21660, 21662), ("src/hashtbl_intf.ml", 635, 21660, 21682), 0), 0, Tag1 ("Base__Hashtbl_intf", 116)), 0); (("hash_param", 3804), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1884), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1883), (Tag1 (0, ((("a")), 100000000, 0, -1882), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1881), 0), 100000000, 0, -1880), 0), 100000000, 0, -1879), 0), 100000000, 0, -1878), 0, (("src/hashtbl_intf.ml", 636, 21683, 21685), ("src/hashtbl_intf.ml", 636, 21683, 21725), 0), 0, Tag1 ("Base__Hashtbl_intf", 117)), 0); Tag1 (("t", 3805), ([((("a")), 100000000, 0, -1876); ((("b")), 100000000, 0, -1877)], 2, 0, 1, 0, [15; 15], [2; 2], 0, 0, (("src/hashtbl_intf.ml", 638, 21727, 21729), ("src/hashtbl_intf.ml", 638, 21727, 21746), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 118)), 1, 0); (("sexp_of_t", 3806), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -1870), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -1875), 0), 100000000, 0, -1874), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -1871), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -1873), 0), 100000000, 0, -1872), (Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1870); ((("b")), 100000000, 0, -1871)], (0)), 100000000, 0, -1869), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -1868), 0), 100000000, 0, -1867), 0), 100000000, 0, -1866), 0), 100000000, 0, -1865), 0, (("src/hashtbl_intf.ml", 644, 22077, 22079), ("src/hashtbl_intf.ml", 644, 22077, 22151), 0), 0, Tag1 ("Base__Hashtbl_intf", 119)), 0); (("create", 3807), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1864)], (0)), 100000000, 0, -1863), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1862)], (0)), 100000000, 0, -1861), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -1858)], (0)), 100000000, 0, -1860), (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1858); ((("b")), 100000000, 0, -1859)], (0)), 100000000, 0, -1857), 0), 100000000, 0, -1856), 0), 100000000, 0, -1855), 0), 100000000, 0, -1854), 0, (("src/hashtbl_intf.ml", 646, 22153, 22163), ("src/hashtbl_intf.ml", 646, 22153, 22206), 0), 0, Tag1 ("Base__Hashtbl_intf", 104)), 0); (("of_alist", 3808), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1853)], (0)), 100000000, 0, -1852), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1851)], (0)), 100000000, 0, -1850), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -1845)], (0)), 100000000, 0, -1849), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([((("a")), 100000000, 0, -1845); ((("b")), 100000000, 0, -1846)]), 100000000, 0, -1848)], (0)), 100000000, 0, -1847), (Tag8 (([("Duplicate_key", ((((("a")), 100000000, 0, -1845)))); ("Ok", (((Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1845); ((("b")), 100000000, 0, -1846)], (0)), 100000000, 0, -1844))))], (0, 100000000, 0, -1843), 1, 0, 0)), 100000000, 0, -1842), 0), 100000000, 0, -1841), 0), 100000000, 0, -1840), 0), 100000000, 0, -1839), 0), 100000000, 0, -1838), 0, (("src/hashtbl_intf.ml", 646, 22153, 22163), ("src/hashtbl_intf.ml", 646, 22153, 22206), 0), 0, Tag1 ("Base__Hashtbl_intf", 105)), 0); (("of_alist_report_all_dups", 3809), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1837)], (0)), 100000000, 0, -1836), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1835)], (0)), 100000000, 0, -1834), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -1828)], (0)), 100000000, 0, -1833), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([((("a")), 100000000, 0, -1828); ((("b")), 100000000, 0, -1829)]), 100000000, 0, -1832)], (0)), 100000000, 0, -1831), (Tag8 (([("Duplicate_keys", (((Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -1828)], (0)), 100000000, 0, -1830)))); ("Ok", (((Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1828); ((("b")), 100000000, 0, -1829)], (0)), 100000000, 0, -1827))))], (0, 100000000, 0, -1826), 1, 0, 0)), 100000000, 0, -1825), 0), 100000000, 0, -1824), 0), 100000000, 0, -1823), 0), 100000000, 0, -1822), 0), 100000000, 0, -1821), 0, (("src/hashtbl_intf.ml", 646, 22153, 22163), ("src/hashtbl_intf.ml", 646, 22153, 22206), 0), 0, Tag1 ("Base__Hashtbl_intf", 106)), 0); (("of_alist_or_error", 3810), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1820)], (0)), 100000000, 0, -1819), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1818)], (0)), 100000000, 0, -1817), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -1812)], (0)), 100000000, 0, -1816), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([((("a")), 100000000, 0, -1812); ((("b")), 100000000, 0, -1813)]), 100000000, 0, -1815)], (0)), 100000000, 0, -1814), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Or_error"), "t"), [(Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1812); ((("b")), 100000000, 0, -1813)], (0)), 100000000, 0, -1811)], (0)), 100000000, 0, -1810), 0), 100000000, 0, -1809), 0), 100000000, 0, -1808), 0), 100000000, 0, -1807), 0), 100000000, 0, -1806), 0, (("src/hashtbl_intf.ml", 646, 22153, 22163), ("src/hashtbl_intf.ml", 646, 22153, 22206), 0), 0, Tag1 ("Base__Hashtbl_intf", 107)), 0); (("of_alist_exn", 3811), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1805)], (0)), 100000000, 0, -1804), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1803)], (0)), 100000000, 0, -1802), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -1797)], (0)), 100000000, 0, -1801), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([((("a")), 100000000, 0, -1797); ((("b")), 100000000, 0, -1798)]), 100000000, 0, -1800)], (0)), 100000000, 0, -1799), (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1797); ((("b")), 100000000, 0, -1798)], (0)), 100000000, 0, -1796), 0), 100000000, 0, -1795), 0), 100000000, 0, -1794), 0), 100000000, 0, -1793), 0), 100000000, 0, -1792), 0, (("src/hashtbl_intf.ml", 646, 22153, 22163), ("src/hashtbl_intf.ml", 646, 22153, 22206), 0), 0, Tag1 ("Base__Hashtbl_intf", 108)), 0); (("of_alist_multi", 3812), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1791)], (0)), 100000000, 0, -1790), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1789)], (0)), 100000000, 0, -1788), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -1782)], (0)), 100000000, 0, -1787), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([((("a")), 100000000, 0, -1782); ((("b")), 100000000, 0, -1784)]), 100000000, 0, -1786)], (0)), 100000000, 0, -1785), (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1782); (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -1784)], (0)), 100000000, 0, -1783)], (0)), 100000000, 0, -1781), 0), 100000000, 0, -1780), 0), 100000000, 0, -1779), 0), 100000000, 0, -1778), 0), 100000000, 0, -1777), 0, (("src/hashtbl_intf.ml", 646, 22153, 22163), ("src/hashtbl_intf.ml", 646, 22153, 22206), 0), 0, Tag1 ("Base__Hashtbl_intf", 109)), 0); (("create_mapped", 3813), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1776)], (0)), 100000000, 0, -1775), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1774)], (0)), 100000000, 0, -1773), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -1765)], (0)), 100000000, 0, -1772), (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -1769), ((("a")), 100000000, 0, -1765), 0), 100000000, 0, -1771), (Tag1 (("get_data"), (Tag1 (0, ((("r")), 100000000, 0, -1769), ((("b")), 100000000, 0, -1766), 0), 100000000, 0, -1770), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -1769)], (0)), 100000000, 0, -1768), (Tag8 (([("Duplicate_keys", (((Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -1765)], (0)), 100000000, 0, -1767)))); ("Ok", (((Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1765); ((("b")), 100000000, 0, -1766)], (0)), 100000000, 0, -1764))))], (0, 100000000, 0, -1763), 1, 0, 0)), 100000000, 0, -1762), 0), 100000000, 0, -1761), 0), 100000000, 0, -1760), 0), 100000000, 0, -1759), 0), 100000000, 0, -1758), 0), 100000000, 0, -1757), 0), 100000000, 0, -1756), 0, (("src/hashtbl_intf.ml", 646, 22153, 22163), ("src/hashtbl_intf.ml", 646, 22153, 22206), 0), 0, Tag1 ("Base__Hashtbl_intf", 110)), 0); (("create_with_key", 3814), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1755)], (0)), 100000000, 0, -1754), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1753)], (0)), 100000000, 0, -1752), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -1746)], (0)), 100000000, 0, -1751), (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -1747), ((("a")), 100000000, 0, -1746), 0), 100000000, 0, -1750), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -1747)], (0)), 100000000, 0, -1749), (Tag8 (([("Duplicate_keys", (((Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -1746)], (0)), 100000000, 0, -1748)))); ("Ok", (((Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1746); ((("r")), 100000000, 0, -1747)], (0)), 100000000, 0, -1745))))], (0, 100000000, 0, -1744), 1, 0, 0)), 100000000, 0, -1743), 0), 100000000, 0, -1742), 0), 100000000, 0, -1741), 0), 100000000, 0, -1740), 0), 100000000, 0, -1739), 0), 100000000, 0, -1738), 0, (("src/hashtbl_intf.ml", 646, 22153, 22163), ("src/hashtbl_intf.ml", 646, 22153, 22206), 0), 0, Tag1 ("Base__Hashtbl_intf", 111)), 0); (("create_with_key_or_error", 3815), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1737)], (0)), 100000000, 0, -1736), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1735)], (0)), 100000000, 0, -1734), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -1729)], (0)), 100000000, 0, -1733), (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -1730), ((("a")), 100000000, 0, -1729), 0), 100000000, 0, -1732), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -1730)], (0)), 100000000, 0, -1731), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Or_error"), "t"), [(Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1729); ((("r")), 100000000, 0, -1730)], (0)), 100000000, 0, -1728)], (0)), 100000000, 0, -1727), 0), 100000000, 0, -1726), 0), 100000000, 0, -1725), 0), 100000000, 0, -1724), 0), 100000000, 0, -1723), 0), 100000000, 0, -1722), 0, (("src/hashtbl_intf.ml", 646, 22153, 22163), ("src/hashtbl_intf.ml", 646, 22153, 22206), 0), 0, Tag1 ("Base__Hashtbl_intf", 112)), 0); (("create_with_key_exn", 3816), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1721)], (0)), 100000000, 0, -1720), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1719)], (0)), 100000000, 0, -1718), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -1713)], (0)), 100000000, 0, -1717), (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -1714), ((("a")), 100000000, 0, -1713), 0), 100000000, 0, -1716), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -1714)], (0)), 100000000, 0, -1715), (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1713); ((("r")), 100000000, 0, -1714)], (0)), 100000000, 0, -1712), 0), 100000000, 0, -1711), 0), 100000000, 0, -1710), 0), 100000000, 0, -1709), 0), 100000000, 0, -1708), 0), 100000000, 0, -1707), 0, (("src/hashtbl_intf.ml", 646, 22153, 22163), ("src/hashtbl_intf.ml", 646, 22153, 22206), 0), 0, Tag1 ("Base__Hashtbl_intf", 113)), 0); (("group", 3817), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1706)], (0)), 100000000, 0, -1705), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1704)], (0)), 100000000, 0, -1703), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -1694)], (0)), 100000000, 0, -1702), (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -1697), ((("a")), 100000000, 0, -1694), 0), 100000000, 0, -1701), (Tag1 (("get_data"), (Tag1 (0, ((("r")), 100000000, 0, -1697), ((("b")), 100000000, 0, -1695), 0), 100000000, 0, -1700), (Tag1 (("combine"), (Tag1 (0, ((("b")), 100000000, 0, -1695), (Tag1 (0, ((("b")), 100000000, 0, -1695), ((("b")), 100000000, 0, -1695), 0), 100000000, 0, -1699), 0), 100000000, 0, -1698), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -1697)], (0)), 100000000, 0, -1696), (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1694); ((("b")), 100000000, 0, -1695)], (0)), 100000000, 0, -1693), 0), 100000000, 0, -1692), 0), 100000000, 0, -1691), 0), 100000000, 0, -1690), 0), 100000000, 0, -1689), 0), 100000000, 0, -1688), 0), 100000000, 0, -1687), 0), 100000000, 0, -1686), 0, (("src/hashtbl_intf.ml", 646, 22153, 22163), ("src/hashtbl_intf.ml", 646, 22153, 22206), 0), 0, Tag1 ("Base__Hashtbl_intf", 114)), 0); Tag1 (("key", 3818), ([((("a")), 100000000, 0, -1685)], 1, 0, 1, (((("a")), 100000000, 0, -1685)), [25], [1], 0, 0, (("src/hashtbl_intf.ml", 648, 22223, 22283), ("src/hashtbl_intf.ml", 648, 22223, 22299), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 122)), 1, 0); (("sexp_of_key", 3819), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1682); ((0), 100000000, 0, -1684)], (0)), 100000000, 0, -1683), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1682)], (0)), 100000000, 0, -1681), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -1680), 0), 100000000, 0, -1679), 0), 100000000, 0, -1678), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 14)), 0); (("clear", 3820), ((Tag1 (0, (Tag3 ((("t", 3805)), [((0), 100000000, 0, -1676); ((0), 100000000, 0, -1677)], (0)), 100000000, 0, -1675), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1674), 0), 100000000, 0, -1673), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 15)), 0); (("copy", 3821), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1670); ((("b")), 100000000, 0, -1671)], (0)), 100000000, 0, -1672), (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1670); ((("b")), 100000000, 0, -1671)], (0)), 100000000, 0, -1669), 0), 100000000, 0, -1668), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 16)), 0); (("fold", 3822), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1666); ((("b")), 100000000, 0, -1664)], (0)), 100000000, 0, -1667), (Tag1 (("init"), ((("acc")), 100000000, 0, -1660), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1666)], (0)), 100000000, 0, -1665), (Tag1 (("data"), ((("b")), 100000000, 0, -1664), (Tag1 (0, ((("acc")), 100000000, 0, -1660), ((("acc")), 100000000, 0, -1660), 0), 100000000, 0, -1663), 0), 100000000, 0, -1662), 0), 100000000, 0, -1661), ((("acc")), 100000000, 0, -1660), 0), 100000000, 0, -1659), 0), 100000000, 0, -1658), 0), 100000000, 0, -1657), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 17)), 0); (("iter_keys", 3823), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1654); ((0), 100000000, 0, -1656)], (0)), 100000000, 0, -1655), (Tag1 (("f"), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1654)], (0)), 100000000, 0, -1653), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1652), 0), 100000000, 0, -1651), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1650), 0), 100000000, 0, -1649), 0), 100000000, 0, -1648), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 18)), 0); (("iter", 3824), ((Tag1 (0, (Tag3 ((("t", 3805)), [((0), 100000000, 0, -1647); ((("b")), 100000000, 0, -1645)], (0)), 100000000, 0, -1646), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -1645), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1644), 0), 100000000, 0, -1643), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1642), 0), 100000000, 0, -1641), 0), 100000000, 0, -1640), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 19)), 0); (("iteri", 3825), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1638); ((("b")), 100000000, 0, -1636)], (0)), 100000000, 0, -1639), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1638)], (0)), 100000000, 0, -1637), (Tag1 (("data"), ((("b")), 100000000, 0, -1636), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1635), 0), 100000000, 0, -1634), 0), 100000000, 0, -1633), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1632), 0), 100000000, 0, -1631), 0), 100000000, 0, -1630), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 20)), 0); (("existsi", 3826), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1628); ((("b")), 100000000, 0, -1626)], (0)), 100000000, 0, -1629), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1628)], (0)), 100000000, 0, -1627), (Tag1 (("data"), ((("b")), 100000000, 0, -1626), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1625), 0), 100000000, 0, -1624), 0), 100000000, 0, -1623), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1622), 0), 100000000, 0, -1621), 0), 100000000, 0, -1620), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 21)), 0); (("exists", 3827), ((Tag1 (0, (Tag3 ((("t", 3805)), [((0), 100000000, 0, -1619); ((("b")), 100000000, 0, -1617)], (0)), 100000000, 0, -1618), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -1617), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1616), 0), 100000000, 0, -1615), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1614), 0), 100000000, 0, -1613), 0), 100000000, 0, -1612), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 22)), 0); (("for_alli", 3828), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1610); ((("b")), 100000000, 0, -1608)], (0)), 100000000, 0, -1611), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1610)], (0)), 100000000, 0, -1609), (Tag1 (("data"), ((("b")), 100000000, 0, -1608), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1607), 0), 100000000, 0, -1606), 0), 100000000, 0, -1605), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1604), 0), 100000000, 0, -1603), 0), 100000000, 0, -1602), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 23)), 0); (("for_all", 3829), ((Tag1 (0, (Tag3 ((("t", 3805)), [((0), 100000000, 0, -1601); ((("b")), 100000000, 0, -1599)], (0)), 100000000, 0, -1600), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -1599), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1598), 0), 100000000, 0, -1597), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1596), 0), 100000000, 0, -1595), 0), 100000000, 0, -1594), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 24)), 0); (("counti", 3830), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1592); ((("b")), 100000000, 0, -1590)], (0)), 100000000, 0, -1593), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1592)], (0)), 100000000, 0, -1591), (Tag1 (("data"), ((("b")), 100000000, 0, -1590), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1589), 0), 100000000, 0, -1588), 0), 100000000, 0, -1587), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1586), 0), 100000000, 0, -1585), 0), 100000000, 0, -1584), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 25)), 0); (("count", 3831), ((Tag1 (0, (Tag3 ((("t", 3805)), [((0), 100000000, 0, -1583); ((("b")), 100000000, 0, -1581)], (0)), 100000000, 0, -1582), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -1581), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1580), 0), 100000000, 0, -1579), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1578), 0), 100000000, 0, -1577), 0), 100000000, 0, -1576), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 26)), 0); (("length", 3832), ((Tag1 (0, (Tag3 ((("t", 3805)), [((0), 100000000, 0, -1574); ((0), 100000000, 0, -1575)], (0)), 100000000, 0, -1573), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1572), 0), 100000000, 0, -1571), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 27)), 0); (("is_empty", 3833), ((Tag1 (0, (Tag3 ((("t", 3805)), [((0), 100000000, 0, -1569); ((0), 100000000, 0, -1570)], (0)), 100000000, 0, -1568), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1567), 0), 100000000, 0, -1566), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 28)), 0); (("mem", 3834), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1563); ((0), 100000000, 0, -1565)], (0)), 100000000, 0, -1564), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1563)], (0)), 100000000, 0, -1562), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1561), 0), 100000000, 0, -1560), 0), 100000000, 0, -1559), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 29)), 0); (("remove", 3835), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1556); ((0), 100000000, 0, -1558)], (0)), 100000000, 0, -1557), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1556)], (0)), 100000000, 0, -1555), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1554), 0), 100000000, 0, -1553), 0), 100000000, 0, -1552), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 30)), 0); (("choose", 3836), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1549); ((("b")), 100000000, 0, -1550)], (0)), 100000000, 0, -1551), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1549)], (0)), 100000000, 0, -1548); ((("b")), 100000000, 0, -1550)]), 100000000, 0, -1547)], (0)), 100000000, 0, -1546), 0), 100000000, 0, -1545), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 31)), 0); (("choose_exn", 3837), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1542); ((("b")), 100000000, 0, -1543)], (0)), 100000000, 0, -1544), (Tag2 ([(Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1542)], (0)), 100000000, 0, -1541); ((("b")), 100000000, 0, -1543)]), 100000000, 0, -1540), 0), 100000000, 0, -1539), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 32)), 0); (("choose_randomly", 3838), ((Tag1 (Tag1 ("random_state"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Random"), "State"), "t"), 0, (0)), 100000000, 0, -1538)], (0)), 100000000, 0, -1537), (Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1534); ((("b")), 100000000, 0, -1535)], (0)), 100000000, 0, -1536), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1534)], (0)), 100000000, 0, -1533); ((("b")), 100000000, 0, -1535)]), 100000000, 0, -1532)], (0)), 100000000, 0, -1531), 0), 100000000, 0, -1530), 0), 100000000, 0, -1529), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 33)), 0); (("choose_randomly_exn", 3839), ((Tag1 (Tag1 ("random_state"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Random"), "State"), "t"), 0, (0)), 100000000, 0, -1528)], (0)), 100000000, 0, -1527), (Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1524); ((("b")), 100000000, 0, -1525)], (0)), 100000000, 0, -1526), (Tag2 ([(Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1524)], (0)), 100000000, 0, -1523); ((("b")), 100000000, 0, -1525)]), 100000000, 0, -1522), 0), 100000000, 0, -1521), 0), 100000000, 0, -1520), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 34)), 0); (("set", 3840), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1518); ((("b")), 100000000, 0, -1516)], (0)), 100000000, 0, -1519), (Tag1 (("key"), (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1518)], (0)), 100000000, 0, -1517), (Tag1 (("data"), ((("b")), 100000000, 0, -1516), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1515), 0), 100000000, 0, -1514), 0), 100000000, 0, -1513), 0), 100000000, 0, -1512), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 35)), 0); (("add", 3841), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1510); ((("b")), 100000000, 0, -1508)], (0)), 100000000, 0, -1511), (Tag1 (("key"), (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1510)], (0)), 100000000, 0, -1509), (Tag1 (("data"), ((("b")), 100000000, 0, -1508), (Tag8 (([("Duplicate", (0)); ("Ok", (0))], (0, 100000000, 0, -1507), 1, 0, 0)), 100000000, 0, -1506), 0), 100000000, 0, -1505), 0), 100000000, 0, -1504), 0), 100000000, 0, -1503), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 36)), 0); (("add_exn", 3842), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1501); ((("b")), 100000000, 0, -1499)], (0)), 100000000, 0, -1502), (Tag1 (("key"), (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1501)], (0)), 100000000, 0, -1500), (Tag1 (("data"), ((("b")), 100000000, 0, -1499), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1498), 0), 100000000, 0, -1497), 0), 100000000, 0, -1496), 0), 100000000, 0, -1495), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 37)), 0); (("change", 3843), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1493); ((("b")), 100000000, 0, -1490)], (0)), 100000000, 0, -1494), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1493)], (0)), 100000000, 0, -1492), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -1490)], (0)), 100000000, 0, -1491), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -1490)], (0)), 100000000, 0, -1489), 0), 100000000, 0, -1488), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1487), 0), 100000000, 0, -1486), 0), 100000000, 0, -1485), 0), 100000000, 0, -1484), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 38)), 0); (("update", 3844), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1482); ((("b")), 100000000, 0, -1479)], (0)), 100000000, 0, -1483), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1482)], (0)), 100000000, 0, -1481), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -1479)], (0)), 100000000, 0, -1480), ((("b")), 100000000, 0, -1479), 0), 100000000, 0, -1478), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1477), 0), 100000000, 0, -1476), 0), 100000000, 0, -1475), 0), 100000000, 0, -1474), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 39)), 0); (("update_and_return", 3845), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1472); ((("b")), 100000000, 0, -1468)], (0)), 100000000, 0, -1473), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1472)], (0)), 100000000, 0, -1471), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -1468)], (0)), 100000000, 0, -1470), ((("b")), 100000000, 0, -1468), 0), 100000000, 0, -1469), ((("b")), 100000000, 0, -1468), 0), 100000000, 0, -1467), 0), 100000000, 0, -1466), 0), 100000000, 0, -1465), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 40)), 0); (("map", 3846), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1460); ((("b")), 100000000, 0, -1463)], (0)), 100000000, 0, -1464), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -1463), ((("c")), 100000000, 0, -1461), 0), 100000000, 0, -1462), (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1460); ((("c")), 100000000, 0, -1461)], (0)), 100000000, 0, -1459), 0), 100000000, 0, -1458), 0), 100000000, 0, -1457), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 41)), 0); (("mapi", 3847), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1450); ((("b")), 100000000, 0, -1454)], (0)), 100000000, 0, -1456), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1450)], (0)), 100000000, 0, -1455), (Tag1 (("data"), ((("b")), 100000000, 0, -1454), ((("c")), 100000000, 0, -1451), 0), 100000000, 0, -1453), 0), 100000000, 0, -1452), (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1450); ((("c")), 100000000, 0, -1451)], (0)), 100000000, 0, -1449), 0), 100000000, 0, -1448), 0), 100000000, 0, -1447), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 42)), 0); (("filter_map", 3848), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1441); ((("b")), 100000000, 0, -1445)], (0)), 100000000, 0, -1446), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -1445), (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -1442)], (0)), 100000000, 0, -1444), 0), 100000000, 0, -1443), (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1441); ((("c")), 100000000, 0, -1442)], (0)), 100000000, 0, -1440), 0), 100000000, 0, -1439), 0), 100000000, 0, -1438), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 43)), 0); (("filter_mapi", 3849), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1430); ((("b")), 100000000, 0, -1435)], (0)), 100000000, 0, -1437), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1430)], (0)), 100000000, 0, -1436), (Tag1 (("data"), ((("b")), 100000000, 0, -1435), (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -1431)], (0)), 100000000, 0, -1434), 0), 100000000, 0, -1433), 0), 100000000, 0, -1432), (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1430); ((("c")), 100000000, 0, -1431)], (0)), 100000000, 0, -1429), 0), 100000000, 0, -1428), 0), 100000000, 0, -1427), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 44)), 0); (("filter_keys", 3850), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1421); ((("b")), 100000000, 0, -1422)], (0)), 100000000, 0, -1426), (Tag1 (("f"), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1421)], (0)), 100000000, 0, -1425), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1424), 0), 100000000, 0, -1423), (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1421); ((("b")), 100000000, 0, -1422)], (0)), 100000000, 0, -1420), 0), 100000000, 0, -1419), 0), 100000000, 0, -1418), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 45)), 0); (("filter", 3851), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1413); ((("b")), 100000000, 0, -1414)], (0)), 100000000, 0, -1417), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -1414), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1416), 0), 100000000, 0, -1415), (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1413); ((("b")), 100000000, 0, -1414)], (0)), 100000000, 0, -1412), 0), 100000000, 0, -1411), 0), 100000000, 0, -1410), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 46)), 0); (("filteri", 3852), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1403); ((("b")), 100000000, 0, -1404)], (0)), 100000000, 0, -1409), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1403)], (0)), 100000000, 0, -1408), (Tag1 (("data"), ((("b")), 100000000, 0, -1404), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1407), 0), 100000000, 0, -1406), 0), 100000000, 0, -1405), (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1403); ((("b")), 100000000, 0, -1404)], (0)), 100000000, 0, -1402), 0), 100000000, 0, -1401), 0), 100000000, 0, -1400), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 47)), 0); (("partition_map", 3853), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1392); ((("b")), 100000000, 0, -1398)], (0)), 100000000, 0, -1399), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -1398), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Either"), "t"), [((("c")), 100000000, 0, -1393); ((("d")), 100000000, 0, -1395)], (0)), 100000000, 0, -1397), 0), 100000000, 0, -1396), (Tag2 ([(Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1392); ((("c")), 100000000, 0, -1393)], (0)), 100000000, 0, -1391); (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1392); ((("d")), 100000000, 0, -1395)], (0)), 100000000, 0, -1394)]), 100000000, 0, -1390), 0), 100000000, 0, -1389), 0), 100000000, 0, -1388), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 48)), 0); (("partition_mapi", 3854), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1378); ((("b")), 100000000, 0, -1385)], (0)), 100000000, 0, -1387), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1378)], (0)), 100000000, 0, -1386), (Tag1 (("data"), ((("b")), 100000000, 0, -1385), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Either"), "t"), [((("c")), 100000000, 0, -1379); ((("d")), 100000000, 0, -1381)], (0)), 100000000, 0, -1384), 0), 100000000, 0, -1383), 0), 100000000, 0, -1382), (Tag2 ([(Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1378); ((("c")), 100000000, 0, -1379)], (0)), 100000000, 0, -1377); (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1378); ((("d")), 100000000, 0, -1381)], (0)), 100000000, 0, -1380)]), 100000000, 0, -1376), 0), 100000000, 0, -1375), 0), 100000000, 0, -1374), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 49)), 0); (("partition_tf", 3855), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1368); ((("b")), 100000000, 0, -1369)], (0)), 100000000, 0, -1373), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -1369), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1372), 0), 100000000, 0, -1371), (Tag2 ([(Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1368); ((("b")), 100000000, 0, -1369)], (0)), 100000000, 0, -1367); (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1368); ((("b")), 100000000, 0, -1369)], (0)), 100000000, 0, -1370)]), 100000000, 0, -1366), 0), 100000000, 0, -1365), 0), 100000000, 0, -1364), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 50)), 0); (("partitioni_tf", 3856), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1356); ((("b")), 100000000, 0, -1357)], (0)), 100000000, 0, -1363), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1356)], (0)), 100000000, 0, -1362), (Tag1 (("data"), ((("b")), 100000000, 0, -1357), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1361), 0), 100000000, 0, -1360), 0), 100000000, 0, -1359), (Tag2 ([(Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1356); ((("b")), 100000000, 0, -1357)], (0)), 100000000, 0, -1355); (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1356); ((("b")), 100000000, 0, -1357)], (0)), 100000000, 0, -1358)]), 100000000, 0, -1354), 0), 100000000, 0, -1353), 0), 100000000, 0, -1352), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 51)), 0); (("find_or_add", 3857), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1350); ((("b")), 100000000, 0, -1346)], (0)), 100000000, 0, -1351), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1350)], (0)), 100000000, 0, -1349), (Tag1 (("default"), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1348), ((("b")), 100000000, 0, -1346), 0), 100000000, 0, -1347), ((("b")), 100000000, 0, -1346), 0), 100000000, 0, -1345), 0), 100000000, 0, -1344), 0), 100000000, 0, -1343), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 52)), 0); (("findi_or_add", 3858), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1340); ((("b")), 100000000, 0, -1337)], (0)), 100000000, 0, -1342), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1340)], (0)), 100000000, 0, -1341), (Tag1 (("default"), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1340)], (0)), 100000000, 0, -1339), ((("b")), 100000000, 0, -1337), 0), 100000000, 0, -1338), ((("b")), 100000000, 0, -1337), 0), 100000000, 0, -1336), 0), 100000000, 0, -1335), 0), 100000000, 0, -1334), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 53)), 0); (("find", 3859), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1332); ((("b")), 100000000, 0, -1330)], (0)), 100000000, 0, -1333), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1332)], (0)), 100000000, 0, -1331), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -1330)], (0)), 100000000, 0, -1329), 0), 100000000, 0, -1328), 0), 100000000, 0, -1327), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 54)), 0); (("find_exn", 3860), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1325); ((("b")), 100000000, 0, -1323)], (0)), 100000000, 0, -1326), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1325)], (0)), 100000000, 0, -1324), ((("b")), 100000000, 0, -1323), 0), 100000000, 0, -1322), 0), 100000000, 0, -1321), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 55)), 0); (("find_and_call", 3861), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1316); ((("b")), 100000000, 0, -1318)], (0)), 100000000, 0, -1320), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1316)], (0)), 100000000, 0, -1319), (Tag1 (("if_found"), (Tag1 (0, ((("b")), 100000000, 0, -1318), ((("c")), 100000000, 0, -1313), 0), 100000000, 0, -1317), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1316)], (0)), 100000000, 0, -1315), ((("c")), 100000000, 0, -1313), 0), 100000000, 0, -1314), ((("c")), 100000000, 0, -1313), 0), 100000000, 0, -1312), 0), 100000000, 0, -1311), 0), 100000000, 0, -1310), 0), 100000000, 0, -1309), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 56)), 0); (("find_and_call1", 3862), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1303); ((("b")), 100000000, 0, -1306)], (0)), 100000000, 0, -1308), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1303)], (0)), 100000000, 0, -1307), (Tag1 (("a"), ((("d")), 100000000, 0, -1301), (Tag1 (("if_found"), (Tag1 (0, ((("b")), 100000000, 0, -1306), (Tag1 (0, ((("d")), 100000000, 0, -1301), ((("c")), 100000000, 0, -1298), 0), 100000000, 0, -1305), 0), 100000000, 0, -1304), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1303)], (0)), 100000000, 0, -1302), (Tag1 (0, ((("d")), 100000000, 0, -1301), ((("c")), 100000000, 0, -1298), 0), 100000000, 0, -1300), 0), 100000000, 0, -1299), ((("c")), 100000000, 0, -1298), 0), 100000000, 0, -1297), 0), 100000000, 0, -1296), 0), 100000000, 0, -1295), 0), 100000000, 0, -1294), 0), 100000000, 0, -1293), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 57)), 0); (("find_and_call2", 3863), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1286); ((("b")), 100000000, 0, -1290)], (0)), 100000000, 0, -1292), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1286)], (0)), 100000000, 0, -1291), (Tag1 (("a"), ((("d")), 100000000, 0, -1284), (Tag1 (("b"), ((("e")), 100000000, 0, -1283), (Tag1 (("if_found"), (Tag1 (0, ((("b")), 100000000, 0, -1290), (Tag1 (0, ((("d")), 100000000, 0, -1284), (Tag1 (0, ((("e")), 100000000, 0, -1283), ((("c")), 100000000, 0, -1279), 0), 100000000, 0, -1289), 0), 100000000, 0, -1288), 0), 100000000, 0, -1287), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1286)], (0)), 100000000, 0, -1285), (Tag1 (0, ((("d")), 100000000, 0, -1284), (Tag1 (0, ((("e")), 100000000, 0, -1283), ((("c")), 100000000, 0, -1279), 0), 100000000, 0, -1282), 0), 100000000, 0, -1281), 0), 100000000, 0, -1280), ((("c")), 100000000, 0, -1279), 0), 100000000, 0, -1278), 0), 100000000, 0, -1277), 0), 100000000, 0, -1276), 0), 100000000, 0, -1275), 0), 100000000, 0, -1274), 0), 100000000, 0, -1273), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 58)), 0); (("findi_and_call", 3864), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1266); ((("b")), 100000000, 0, -1269)], (0)), 100000000, 0, -1272), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1266)], (0)), 100000000, 0, -1271), (Tag1 (("if_found"), (Tag1 (("key"), (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1266)], (0)), 100000000, 0, -1270), (Tag1 (("data"), ((("b")), 100000000, 0, -1269), ((("c")), 100000000, 0, -1263), 0), 100000000, 0, -1268), 0), 100000000, 0, -1267), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1266)], (0)), 100000000, 0, -1265), ((("c")), 100000000, 0, -1263), 0), 100000000, 0, -1264), ((("c")), 100000000, 0, -1263), 0), 100000000, 0, -1262), 0), 100000000, 0, -1261), 0), 100000000, 0, -1260), 0), 100000000, 0, -1259), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 59)), 0); (("findi_and_call1", 3865), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1251); ((("b")), 100000000, 0, -1255)], (0)), 100000000, 0, -1258), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1251)], (0)), 100000000, 0, -1257), (Tag1 (("a"), ((("d")), 100000000, 0, -1249), (Tag1 (("if_found"), (Tag1 (("key"), (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1251)], (0)), 100000000, 0, -1256), (Tag1 (("data"), ((("b")), 100000000, 0, -1255), (Tag1 (0, ((("d")), 100000000, 0, -1249), ((("c")), 100000000, 0, -1246), 0), 100000000, 0, -1254), 0), 100000000, 0, -1253), 0), 100000000, 0, -1252), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1251)], (0)), 100000000, 0, -1250), (Tag1 (0, ((("d")), 100000000, 0, -1249), ((("c")), 100000000, 0, -1246), 0), 100000000, 0, -1248), 0), 100000000, 0, -1247), ((("c")), 100000000, 0, -1246), 0), 100000000, 0, -1245), 0), 100000000, 0, -1244), 0), 100000000, 0, -1243), 0), 100000000, 0, -1242), 0), 100000000, 0, -1241), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 60)), 0); (("findi_and_call2", 3866), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1232); ((("b")), 100000000, 0, -1237)], (0)), 100000000, 0, -1240), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1232)], (0)), 100000000, 0, -1239), (Tag1 (("a"), ((("d")), 100000000, 0, -1230), (Tag1 (("b"), ((("e")), 100000000, 0, -1229), (Tag1 (("if_found"), (Tag1 (("key"), (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1232)], (0)), 100000000, 0, -1238), (Tag1 (("data"), ((("b")), 100000000, 0, -1237), (Tag1 (0, ((("d")), 100000000, 0, -1230), (Tag1 (0, ((("e")), 100000000, 0, -1229), ((("c")), 100000000, 0, -1225), 0), 100000000, 0, -1236), 0), 100000000, 0, -1235), 0), 100000000, 0, -1234), 0), 100000000, 0, -1233), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1232)], (0)), 100000000, 0, -1231), (Tag1 (0, ((("d")), 100000000, 0, -1230), (Tag1 (0, ((("e")), 100000000, 0, -1229), ((("c")), 100000000, 0, -1225), 0), 100000000, 0, -1228), 0), 100000000, 0, -1227), 0), 100000000, 0, -1226), ((("c")), 100000000, 0, -1225), 0), 100000000, 0, -1224), 0), 100000000, 0, -1223), 0), 100000000, 0, -1222), 0), 100000000, 0, -1221), 0), 100000000, 0, -1220), 0), 100000000, 0, -1219), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 61)), 0); (("find_and_remove", 3867), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1217); ((("b")), 100000000, 0, -1215)], (0)), 100000000, 0, -1218), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1217)], (0)), 100000000, 0, -1216), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -1215)], (0)), 100000000, 0, -1214), 0), 100000000, 0, -1213), 0), 100000000, 0, -1212), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 62)), 0); (("merge", 3868), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("k")), 100000000, 0, -1199); ((("a")), 100000000, 0, -1207)], (0)), 100000000, 0, -1211), (Tag1 (0, (Tag3 ((("t", 3805)), [((("k")), 100000000, 0, -1199); ((("b")), 100000000, 0, -1206)], (0)), 100000000, 0, -1210), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3818)), [((("k")), 100000000, 0, -1199)], (0)), 100000000, 0, -1209), (Tag1 (0, (Tag8 (([("Both", (((Tag2 ([((("a")), 100000000, 0, -1207); ((("b")), 100000000, 0, -1206)]), 100000000, 0, -1208)))); ("Left", ((((("a")), 100000000, 0, -1207)))); ("Right", ((((("b")), 100000000, 0, -1206))))], (0, 100000000, 0, -1205), 1, 0, 0)), 100000000, 0, -1204), (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -1200)], (0)), 100000000, 0, -1203), 0), 100000000, 0, -1202), 0), 100000000, 0, -1201), (Tag3 ((("t", 3805)), [((("k")), 100000000, 0, -1199); ((("c")), 100000000, 0, -1200)], (0)), 100000000, 0, -1198), 0), 100000000, 0, -1197), 0), 100000000, 0, -1196), 0), 100000000, 0, -1195), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 63)), 0); (("merge_into", 3869), ((Tag1 (("src"), (Tag3 ((("t", 3805)), [((("k")), 100000000, 0, -1192); ((("a")), 100000000, 0, -1190)], (0)), 100000000, 0, -1194), (Tag1 (("dst"), (Tag3 ((("t", 3805)), [((("k")), 100000000, 0, -1192); ((("b")), 100000000, 0, -1188)], (0)), 100000000, 0, -1193), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3818)), [((("k")), 100000000, 0, -1192)], (0)), 100000000, 0, -1191), (Tag1 (0, ((("a")), 100000000, 0, -1190), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -1188)], (0)), 100000000, 0, -1189), (Tag3 (Tag1 ((("Merge_into_action", 3687)), "t"), [((("b")), 100000000, 0, -1188)], (0)), 100000000, 0, -1187), 0), 100000000, 0, -1186), 0), 100000000, 0, -1185), 0), 100000000, 0, -1184), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1183), 0), 100000000, 0, -1182), 0), 100000000, 0, -1181), 0), 100000000, 0, -1180), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 64)), 0); (("keys", 3870), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1177); ((0), 100000000, 0, -1179)], (0)), 100000000, 0, -1178), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1177)], (0)), 100000000, 0, -1176)], (0)), 100000000, 0, -1175), 0), 100000000, 0, -1174), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 65)), 0); (("data", 3871), ((Tag1 (0, (Tag3 ((("t", 3805)), [((0), 100000000, 0, -1173); ((("b")), 100000000, 0, -1171)], (0)), 100000000, 0, -1172), (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -1171)], (0)), 100000000, 0, -1170), 0), 100000000, 0, -1169), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 66)), 0); (("filter_keys_inplace", 3872), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1166); ((0), 100000000, 0, -1168)], (0)), 100000000, 0, -1167), (Tag1 (("f"), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1166)], (0)), 100000000, 0, -1165), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1164), 0), 100000000, 0, -1163), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1162), 0), 100000000, 0, -1161), 0), 100000000, 0, -1160), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 67)), 0); (("filter_inplace", 3873), ((Tag1 (0, (Tag3 ((("t", 3805)), [((0), 100000000, 0, -1159); ((("b")), 100000000, 0, -1157)], (0)), 100000000, 0, -1158), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -1157), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1156), 0), 100000000, 0, -1155), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1154), 0), 100000000, 0, -1153), 0), 100000000, 0, -1152), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 68)), 0); (("filteri_inplace", 3874), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1150); ((("b")), 100000000, 0, -1148)], (0)), 100000000, 0, -1151), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1150)], (0)), 100000000, 0, -1149), (Tag1 (("data"), ((("b")), 100000000, 0, -1148), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1147), 0), 100000000, 0, -1146), 0), 100000000, 0, -1145), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1144), 0), 100000000, 0, -1143), 0), 100000000, 0, -1142), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 69)), 0); (("map_inplace", 3875), ((Tag1 (0, (Tag3 ((("t", 3805)), [((0), 100000000, 0, -1141); ((("b")), 100000000, 0, -1139)], (0)), 100000000, 0, -1140), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -1139), ((("b")), 100000000, 0, -1139), 0), 100000000, 0, -1138), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1137), 0), 100000000, 0, -1136), 0), 100000000, 0, -1135), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 70)), 0); (("mapi_inplace", 3876), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1133); ((("b")), 100000000, 0, -1131)], (0)), 100000000, 0, -1134), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1133)], (0)), 100000000, 0, -1132), (Tag1 (("data"), ((("b")), 100000000, 0, -1131), ((("b")), 100000000, 0, -1131), 0), 100000000, 0, -1130), 0), 100000000, 0, -1129), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1128), 0), 100000000, 0, -1127), 0), 100000000, 0, -1126), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 71)), 0); (("filter_map_inplace", 3877), ((Tag1 (0, (Tag3 ((("t", 3805)), [((0), 100000000, 0, -1125); ((("b")), 100000000, 0, -1123)], (0)), 100000000, 0, -1124), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -1123), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -1123)], (0)), 100000000, 0, -1122), 0), 100000000, 0, -1121), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1120), 0), 100000000, 0, -1119), 0), 100000000, 0, -1118), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 72)), 0); (("filter_mapi_inplace", 3878), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1116); ((("b")), 100000000, 0, -1114)], (0)), 100000000, 0, -1117), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1116)], (0)), 100000000, 0, -1115), (Tag1 (("data"), ((("b")), 100000000, 0, -1114), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -1114)], (0)), 100000000, 0, -1113), 0), 100000000, 0, -1112), 0), 100000000, 0, -1111), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1110), 0), 100000000, 0, -1109), 0), 100000000, 0, -1108), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 73)), 0); (("equal", 3879), ((Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -1103), (Tag1 (0, ((("b")), 100000000, 0, -1103), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1107), 0), 100000000, 0, -1106), 0), 100000000, 0, -1105), (Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1102); ((("b")), 100000000, 0, -1103)], (0)), 100000000, 0, -1104), (Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1102); ((("b")), 100000000, 0, -1103)], (0)), 100000000, 0, -1101), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1100), 0), 100000000, 0, -1099), 0), 100000000, 0, -1098), 0), 100000000, 0, -1097), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 74)), 0); (("similar", 3880), ((Tag1 (0, (Tag1 (0, ((("b1")), 100000000, 0, -1093), (Tag1 (0, ((("b2")), 100000000, 0, -1091), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1096), 0), 100000000, 0, -1095), 0), 100000000, 0, -1094), (Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1090); ((("b1")), 100000000, 0, -1093)], (0)), 100000000, 0, -1092), (Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1090); ((("b2")), 100000000, 0, -1091)], (0)), 100000000, 0, -1089), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1088), 0), 100000000, 0, -1087), 0), 100000000, 0, -1086), 0), 100000000, 0, -1085), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 75)), 0); (("to_alist", 3881), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1082); ((("b")), 100000000, 0, -1083)], (0)), 100000000, 0, -1084), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1082)], (0)), 100000000, 0, -1081); ((("b")), 100000000, 0, -1083)]), 100000000, 0, -1080)], (0)), 100000000, 0, -1079), 0), 100000000, 0, -1078), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 76)), 0); (("incr", 3882), ((Tag1 (Tag1 ("by"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1077)], (0)), 100000000, 0, -1076), (Tag1 (Tag1 ("remove_if_zero"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1075)], (0)), 100000000, 0, -1074), (Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1071); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1073)], (0)), 100000000, 0, -1072), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1071)], (0)), 100000000, 0, -1070), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1069), 0), 100000000, 0, -1068), 0), 100000000, 0, -1067), 0), 100000000, 0, -1066), 0), 100000000, 0, -1065), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 77)), 0); (("decr", 3883), ((Tag1 (Tag1 ("by"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1064)], (0)), 100000000, 0, -1063), (Tag1 (Tag1 ("remove_if_zero"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1062)], (0)), 100000000, 0, -1061), (Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1058); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1060)], (0)), 100000000, 0, -1059), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1058)], (0)), 100000000, 0, -1057), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1056), 0), 100000000, 0, -1055), 0), 100000000, 0, -1054), 0), 100000000, 0, -1053), 0), 100000000, 0, -1052), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 78)), 0); (("add_multi", 3884), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1049); (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -1047)], (0)), 100000000, 0, -1051)], (0)), 100000000, 0, -1050), (Tag1 (("key"), (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1049)], (0)), 100000000, 0, -1048), (Tag1 (("data"), ((("b")), 100000000, 0, -1047), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1046), 0), 100000000, 0, -1045), 0), 100000000, 0, -1044), 0), 100000000, 0, -1043), 0, (("src/hashtbl_intf.ml", 652, 22319, 22329), ("src/hashtbl_intf.ml", 652, 22319, 22396), 0), 0, Tag1 ("Base__Hashtbl_intf", 82)), 0); (("remove_multi", 3885), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1039); (Tag3 ((Tag3 ("list", 9)), [((0), 100000000, 0, -1042)], (0)), 100000000, 0, -1041)], (0)), 100000000, 0, -1040), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1039)], (0)), 100000000, 0, -1038), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1037), 0), 100000000, 0, -1036), 0), 100000000, 0, -1035), 0, (("src/hashtbl_intf.ml", 652, 22319, 22329), ("src/hashtbl_intf.ml", 652, 22319, 22396), 0), 0, Tag1 ("Base__Hashtbl_intf", 83)), 0); (("find_multi", 3886), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1032); (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -1030)], (0)), 100000000, 0, -1034)], (0)), 100000000, 0, -1033), (Tag1 (0, (Tag3 ((("key", 3818)), [((("a")), 100000000, 0, -1032)], (0)), 100000000, 0, -1031), (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -1030)], (0)), 100000000, 0, -1029), 0), 100000000, 0, -1028), 0), 100000000, 0, -1027), 0, (("src/hashtbl_intf.ml", 652, 22319, 22329), ("src/hashtbl_intf.ml", 652, 22319, 22396), 0), 0, Tag1 ("Base__Hashtbl_intf", 84)), 0); (("hashable_s", 3887), ((Tag1 (0, (Tag3 ((("t", 3805)), [((("key")), 100000000, 0, -1024); ((0), 100000000, 0, -1026)], (0)), 100000000, 0, -1025), (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("key")), 100000000, 0, -1024)], (0)), 100000000, 0, -1023), 0), 100000000, 0, -1022), 0, (("src/hashtbl_intf.ml", 655, 22415, 22417), ("src/hashtbl_intf.ml", 655, 22415, 22459), 0), 0, Tag1 ("Base__Hashtbl_intf", 125)), 0); (("invariant", 3888), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Invariant_intf")), "inv"), [((("a")), 100000000, 0, -1018)], (0)), 100000000, 0, -1021), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Invariant_intf")), "inv"), [((("b")), 100000000, 0, -1019)], (0)), 100000000, 0, -1020), (Tag3 (Tag1 ((Tag2 ("Base__Invariant_intf")), "inv"), [(Tag3 ((("t", 3805)), [((("a")), 100000000, 0, -1018); ((("b")), 100000000, 0, -1019)], (0)), 100000000, 0, -1017)], (0)), 100000000, 0, -1016), 0), 100000000, 0, -1015), 0), 100000000, 0, -1014), 0, (("src/hashtbl_intf.ml", 657, 22461, 22471), ("src/hashtbl_intf.ml", 657, 22461, 22518), 0), 0, Tag1 ("Base__Invariant_intf", 9)), 0)])), 0, (("src/hashtbl_intf.ml", 634, 21621, 21621), ("src/hashtbl_intf.ml", 658, 22519, 22522), 0), Tag1 ("Base__Hashtbl_intf", 127)), 0); Tag4 (("S_poly", 3695), ((Tag1 ([Tag1 (("t", 3889), ([((("a")), 100000000, 0, -2717); ((("b")), 100000000, 0, -2718)], 2, 0, 1, 0, [7; 7], [2; 2], 0, 0, (("src/hashtbl_intf.ml", 661, 22549, 22551), ("src/hashtbl_intf.ml", 661, 22549, 22605), 0), [(("deriving_inline", (("src/hashtbl_intf.ml", 661, 22549, 22570), ("src/hashtbl_intf.ml", 661, 22549, 22585), 0)), ([([(Tag8 ([(((("sexp"), (("src/hashtbl_intf.ml", 661, 22549, 22586), ("src/hashtbl_intf.ml", 661, 22549, 22590), 0))), (("src/hashtbl_intf.ml", 661, 22549, 22586), ("src/hashtbl_intf.ml", 661, 22549, 22590), 0), 0, 0); (((("sexp_grammar"), (("src/hashtbl_intf.ml", 661, 22549, 22592), ("src/hashtbl_intf.ml", 661, 22549, 22604), 0))), (("src/hashtbl_intf.ml", 661, 22549, 22592), ("src/hashtbl_intf.ml", 661, 22549, 22604), 0), 0, 0)]), (("src/hashtbl_intf.ml", 661, 22549, 22586), ("src/hashtbl_intf.ml", 661, 22549, 22604), 0), 0, 0)], (("src/hashtbl_intf.ml", 661, 22549, 22586), ("src/hashtbl_intf.ml", 661, 22549, 22604), 0))]), (("src/hashtbl_intf.ml", 661, 22549, 22567), ("src/hashtbl_intf.ml", 661, 22549, 22605), 0))], 0, 0, Tag1 ("Base__Hashtbl_intf", 128)), 1, 0); (("t_of_sexp", 3890), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2716), ((("a")), 100000000, 0, -2710), 0), 100000000, 0, -2715), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2714), ((("b")), 100000000, 0, -2711), 0), 100000000, 0, -2713), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2712), (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2710); ((("b")), 100000000, 0, -2711)], (0)), 100000000, 0, -2709), 0), 100000000, 0, -2708), 0), 100000000, 0, -2707), 0), 100000000, 0, -2706), 0, (("src/hashtbl_intf.ml", 663, 22607, 22617), ("src/hashtbl_intf.ml", 663, 22607, 22672), 0), 0, Tag1 ("Sexplib0__Sexpable", 9)), 0); (("sexp_of_t", 3891), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -2700), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2705), 0), 100000000, 0, -2704), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -2701), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2703), 0), 100000000, 0, -2702), (Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2700); ((("b")), 100000000, 0, -2701)], (0)), 100000000, 0, -2699), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2698), 0), 100000000, 0, -2697), 0), 100000000, 0, -2696), 0), 100000000, 0, -2695), 0, (("src/hashtbl_intf.ml", 663, 22607, 22617), ("src/hashtbl_intf.ml", 663, 22607, 22672), 0), 0, Tag1 ("Sexplib0__Sexpable", 10)), 0); (("t_sexp_grammar", 3892), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [((("a")), 100000000, 0, -2691)], (0)), 100000000, 0, -2694), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [((("b")), 100000000, 0, -2692)], (0)), 100000000, 0, -2693), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [(Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2691); ((("b")), 100000000, 0, -2692)], (0)), 100000000, 0, -2690)], (0)), 100000000, 0, -2689), 0), 100000000, 0, -2688), 0), 100000000, 0, -2687), 0, (("src/hashtbl_intf.ml", 665, 22674, 22676), ("src/hashtbl_intf.ml", 668, 22763, 22804), 0), 0, Tag1 ("Base__Hashtbl_intf", 131)), 0); (("hashable", 3893), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Hashable"), "t"), [((("a")), 100000000, 0, -2686)], (0)), 100000000, 0, -2685), 0, (("src/hashtbl_intf.ml", 672, 22818, 22820), ("src/hashtbl_intf.ml", 672, 22818, 22848), 0), 0, Tag1 ("Base__Hashtbl_intf", 132)), 0); (("invariant", 3894), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Invariant_intf")), "inv"), [((("a")), 100000000, 0, -2681)], (0)), 100000000, 0, -2684), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Invariant_intf")), "inv"), [((("b")), 100000000, 0, -2682)], (0)), 100000000, 0, -2683), (Tag3 (Tag1 ((Tag2 ("Base__Invariant_intf")), "inv"), [(Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2681); ((("b")), 100000000, 0, -2682)], (0)), 100000000, 0, -2680)], (0)), 100000000, 0, -2679), 0), 100000000, 0, -2678), 0), 100000000, 0, -2677), 0, (("src/hashtbl_intf.ml", 674, 22850, 22860), ("src/hashtbl_intf.ml", 674, 22850, 22907), 0), 0, Tag1 ("Base__Invariant_intf", 9)), 0); Tag1 (("key", 3895), ([((("a")), 100000000, 0, -2676)], 1, 0, 1, (((("a")), 100000000, 0, -2676)), [25], [1], 0, 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 135)), 1, 0); (("create", 3896), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2671)], (0)), 100000000, 0, -2670); ((("b")), 100000000, 0, -2672); (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2675), (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2671); ((("b")), 100000000, 0, -2672)], (0)), 100000000, 0, -2674), 0), 100000000, 0, -2673)], (0)), 100000000, 0, -2669), 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, Tag1 ("Base__Hashtbl_intf", 91)), 0); (("of_alist", 3897), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2659)], (0)), 100000000, 0, -2658); ((("b")), 100000000, 0, -2660); (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2659)], (0)), 100000000, 0, -2668); ((("b")), 100000000, 0, -2660)]), 100000000, 0, -2667)], (0)), 100000000, 0, -2666), (Tag8 (([("Duplicate_key", (((Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2659)], (0)), 100000000, 0, -2665)))); ("Ok", (((Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2659); ((("b")), 100000000, 0, -2660)], (0)), 100000000, 0, -2664))))], (0, 100000000, 0, -2663), 1, 0, 0)), 100000000, 0, -2662), 0), 100000000, 0, -2661)], (0)), 100000000, 0, -2657), 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, Tag1 ("Base__Hashtbl_intf", 92)), 0); (("of_alist_report_all_dups", 3898), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2646)], (0)), 100000000, 0, -2645); ((("b")), 100000000, 0, -2647); (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2646)], (0)), 100000000, 0, -2656); ((("b")), 100000000, 0, -2647)]), 100000000, 0, -2655)], (0)), 100000000, 0, -2654), (Tag8 (([("Duplicate_keys", (((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2646)], (0)), 100000000, 0, -2653)], (0)), 100000000, 0, -2652)))); ("Ok", (((Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2646); ((("b")), 100000000, 0, -2647)], (0)), 100000000, 0, -2651))))], (0, 100000000, 0, -2650), 1, 0, 0)), 100000000, 0, -2649), 0), 100000000, 0, -2648)], (0)), 100000000, 0, -2644), 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, Tag1 ("Base__Hashtbl_intf", 93)), 0); (("of_alist_or_error", 3899), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2636)], (0)), 100000000, 0, -2635); ((("b")), 100000000, 0, -2637); (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2636)], (0)), 100000000, 0, -2643); ((("b")), 100000000, 0, -2637)]), 100000000, 0, -2642)], (0)), 100000000, 0, -2641), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Or_error"), "t"), [(Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2636); ((("b")), 100000000, 0, -2637)], (0)), 100000000, 0, -2640)], (0)), 100000000, 0, -2639), 0), 100000000, 0, -2638)], (0)), 100000000, 0, -2634), 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, Tag1 ("Base__Hashtbl_intf", 94)), 0); (("of_alist_exn", 3900), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2627)], (0)), 100000000, 0, -2626); ((("b")), 100000000, 0, -2628); (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2627)], (0)), 100000000, 0, -2633); ((("b")), 100000000, 0, -2628)]), 100000000, 0, -2632)], (0)), 100000000, 0, -2631), (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2627); ((("b")), 100000000, 0, -2628)], (0)), 100000000, 0, -2630), 0), 100000000, 0, -2629)], (0)), 100000000, 0, -2625), 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, Tag1 ("Base__Hashtbl_intf", 95)), 0); (("of_alist_multi", 3901), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2616)], (0)), 100000000, 0, -2615); (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -2618)], (0)), 100000000, 0, -2617); (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2616)], (0)), 100000000, 0, -2624); ((("b")), 100000000, 0, -2618)]), 100000000, 0, -2623)], (0)), 100000000, 0, -2622), (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2616); (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -2618)], (0)), 100000000, 0, -2621)], (0)), 100000000, 0, -2620), 0), 100000000, 0, -2619)], (0)), 100000000, 0, -2614), 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, Tag1 ("Base__Hashtbl_intf", 96)), 0); (("create_mapped", 3902), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2599)], (0)), 100000000, 0, -2598); ((("b")), 100000000, 0, -2600); (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -2610), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2599)], (0)), 100000000, 0, -2613), 0), 100000000, 0, -2612), (Tag1 (("get_data"), (Tag1 (0, ((("r")), 100000000, 0, -2610), ((("b")), 100000000, 0, -2600), 0), 100000000, 0, -2611), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -2610)], (0)), 100000000, 0, -2609), (Tag8 (([("Duplicate_keys", (((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2599)], (0)), 100000000, 0, -2608)], (0)), 100000000, 0, -2607)))); ("Ok", (((Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2599); ((("b")), 100000000, 0, -2600)], (0)), 100000000, 0, -2606))))], (0, 100000000, 0, -2605), 1, 0, 0)), 100000000, 0, -2604), 0), 100000000, 0, -2603), 0), 100000000, 0, -2602), 0), 100000000, 0, -2601)], (0)), 100000000, 0, -2597), 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, Tag1 ("Base__Hashtbl_intf", 97)), 0); (("create_with_key", 3903), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2585)], (0)), 100000000, 0, -2584); ((("r")), 100000000, 0, -2586); (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -2586), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2585)], (0)), 100000000, 0, -2596), 0), 100000000, 0, -2595), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -2586)], (0)), 100000000, 0, -2594), (Tag8 (([("Duplicate_keys", (((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2585)], (0)), 100000000, 0, -2593)], (0)), 100000000, 0, -2592)))); ("Ok", (((Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2585); ((("r")), 100000000, 0, -2586)], (0)), 100000000, 0, -2591))))], (0, 100000000, 0, -2590), 1, 0, 0)), 100000000, 0, -2589), 0), 100000000, 0, -2588), 0), 100000000, 0, -2587)], (0)), 100000000, 0, -2583), 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, Tag1 ("Base__Hashtbl_intf", 98)), 0); (("create_with_key_or_error", 3904), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2574)], (0)), 100000000, 0, -2573); ((("r")), 100000000, 0, -2575); (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -2575), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2574)], (0)), 100000000, 0, -2582), 0), 100000000, 0, -2581), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -2575)], (0)), 100000000, 0, -2580), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Or_error"), "t"), [(Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2574); ((("r")), 100000000, 0, -2575)], (0)), 100000000, 0, -2579)], (0)), 100000000, 0, -2578), 0), 100000000, 0, -2577), 0), 100000000, 0, -2576)], (0)), 100000000, 0, -2572), 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, Tag1 ("Base__Hashtbl_intf", 99)), 0); (("create_with_key_exn", 3905), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2564)], (0)), 100000000, 0, -2563); ((("r")), 100000000, 0, -2565); (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -2565), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2564)], (0)), 100000000, 0, -2571), 0), 100000000, 0, -2570), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -2565)], (0)), 100000000, 0, -2569), (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2564); ((("r")), 100000000, 0, -2565)], (0)), 100000000, 0, -2568), 0), 100000000, 0, -2567), 0), 100000000, 0, -2566)], (0)), 100000000, 0, -2562), 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, Tag1 ("Base__Hashtbl_intf", 100)), 0); (("group", 3906), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2548)], (0)), 100000000, 0, -2547); ((("b")), 100000000, 0, -2549); (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -2556), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2548)], (0)), 100000000, 0, -2561), 0), 100000000, 0, -2560), (Tag1 (("get_data"), (Tag1 (0, ((("r")), 100000000, 0, -2556), ((("b")), 100000000, 0, -2549), 0), 100000000, 0, -2559), (Tag1 (("combine"), (Tag1 (0, ((("b")), 100000000, 0, -2549), (Tag1 (0, ((("b")), 100000000, 0, -2549), ((("b")), 100000000, 0, -2549), 0), 100000000, 0, -2558), 0), 100000000, 0, -2557), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -2556)], (0)), 100000000, 0, -2555), (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2548); ((("b")), 100000000, 0, -2549)], (0)), 100000000, 0, -2554), 0), 100000000, 0, -2553), 0), 100000000, 0, -2552), 0), 100000000, 0, -2551), 0), 100000000, 0, -2550)], (0)), 100000000, 0, -2546), 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, Tag1 ("Base__Hashtbl_intf", 101)), 0); (("sexp_of_key", 3907), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2543); ((0), 100000000, 0, -2545)], (0)), 100000000, 0, -2544), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2543)], (0)), 100000000, 0, -2542), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2541), 0), 100000000, 0, -2540), 0), 100000000, 0, -2539), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 14)), 0); (("clear", 3908), ((Tag1 (0, (Tag3 ((("t", 3889)), [((0), 100000000, 0, -2537); ((0), 100000000, 0, -2538)], (0)), 100000000, 0, -2536), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2535), 0), 100000000, 0, -2534), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 15)), 0); (("copy", 3909), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2531); ((("b")), 100000000, 0, -2532)], (0)), 100000000, 0, -2533), (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2531); ((("b")), 100000000, 0, -2532)], (0)), 100000000, 0, -2530), 0), 100000000, 0, -2529), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 16)), 0); (("fold", 3910), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2527); ((("b")), 100000000, 0, -2525)], (0)), 100000000, 0, -2528), (Tag1 (("init"), ((("acc")), 100000000, 0, -2521), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2527)], (0)), 100000000, 0, -2526), (Tag1 (("data"), ((("b")), 100000000, 0, -2525), (Tag1 (0, ((("acc")), 100000000, 0, -2521), ((("acc")), 100000000, 0, -2521), 0), 100000000, 0, -2524), 0), 100000000, 0, -2523), 0), 100000000, 0, -2522), ((("acc")), 100000000, 0, -2521), 0), 100000000, 0, -2520), 0), 100000000, 0, -2519), 0), 100000000, 0, -2518), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 17)), 0); (("iter_keys", 3911), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2515); ((0), 100000000, 0, -2517)], (0)), 100000000, 0, -2516), (Tag1 (("f"), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2515)], (0)), 100000000, 0, -2514), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2513), 0), 100000000, 0, -2512), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2511), 0), 100000000, 0, -2510), 0), 100000000, 0, -2509), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 18)), 0); (("iter", 3912), ((Tag1 (0, (Tag3 ((("t", 3889)), [((0), 100000000, 0, -2508); ((("b")), 100000000, 0, -2506)], (0)), 100000000, 0, -2507), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -2506), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2505), 0), 100000000, 0, -2504), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2503), 0), 100000000, 0, -2502), 0), 100000000, 0, -2501), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 19)), 0); (("iteri", 3913), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2499); ((("b")), 100000000, 0, -2497)], (0)), 100000000, 0, -2500), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2499)], (0)), 100000000, 0, -2498), (Tag1 (("data"), ((("b")), 100000000, 0, -2497), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2496), 0), 100000000, 0, -2495), 0), 100000000, 0, -2494), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2493), 0), 100000000, 0, -2492), 0), 100000000, 0, -2491), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 20)), 0); (("existsi", 3914), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2489); ((("b")), 100000000, 0, -2487)], (0)), 100000000, 0, -2490), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2489)], (0)), 100000000, 0, -2488), (Tag1 (("data"), ((("b")), 100000000, 0, -2487), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2486), 0), 100000000, 0, -2485), 0), 100000000, 0, -2484), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2483), 0), 100000000, 0, -2482), 0), 100000000, 0, -2481), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 21)), 0); (("exists", 3915), ((Tag1 (0, (Tag3 ((("t", 3889)), [((0), 100000000, 0, -2480); ((("b")), 100000000, 0, -2478)], (0)), 100000000, 0, -2479), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -2478), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2477), 0), 100000000, 0, -2476), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2475), 0), 100000000, 0, -2474), 0), 100000000, 0, -2473), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 22)), 0); (("for_alli", 3916), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2471); ((("b")), 100000000, 0, -2469)], (0)), 100000000, 0, -2472), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2471)], (0)), 100000000, 0, -2470), (Tag1 (("data"), ((("b")), 100000000, 0, -2469), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2468), 0), 100000000, 0, -2467), 0), 100000000, 0, -2466), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2465), 0), 100000000, 0, -2464), 0), 100000000, 0, -2463), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 23)), 0); (("for_all", 3917), ((Tag1 (0, (Tag3 ((("t", 3889)), [((0), 100000000, 0, -2462); ((("b")), 100000000, 0, -2460)], (0)), 100000000, 0, -2461), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -2460), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2459), 0), 100000000, 0, -2458), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2457), 0), 100000000, 0, -2456), 0), 100000000, 0, -2455), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 24)), 0); (("counti", 3918), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2453); ((("b")), 100000000, 0, -2451)], (0)), 100000000, 0, -2454), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2453)], (0)), 100000000, 0, -2452), (Tag1 (("data"), ((("b")), 100000000, 0, -2451), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2450), 0), 100000000, 0, -2449), 0), 100000000, 0, -2448), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2447), 0), 100000000, 0, -2446), 0), 100000000, 0, -2445), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 25)), 0); (("count", 3919), ((Tag1 (0, (Tag3 ((("t", 3889)), [((0), 100000000, 0, -2444); ((("b")), 100000000, 0, -2442)], (0)), 100000000, 0, -2443), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -2442), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2441), 0), 100000000, 0, -2440), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2439), 0), 100000000, 0, -2438), 0), 100000000, 0, -2437), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 26)), 0); (("length", 3920), ((Tag1 (0, (Tag3 ((("t", 3889)), [((0), 100000000, 0, -2435); ((0), 100000000, 0, -2436)], (0)), 100000000, 0, -2434), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2433), 0), 100000000, 0, -2432), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 27)), 0); (("is_empty", 3921), ((Tag1 (0, (Tag3 ((("t", 3889)), [((0), 100000000, 0, -2430); ((0), 100000000, 0, -2431)], (0)), 100000000, 0, -2429), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2428), 0), 100000000, 0, -2427), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 28)), 0); (("mem", 3922), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2424); ((0), 100000000, 0, -2426)], (0)), 100000000, 0, -2425), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2424)], (0)), 100000000, 0, -2423), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2422), 0), 100000000, 0, -2421), 0), 100000000, 0, -2420), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 29)), 0); (("remove", 3923), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2417); ((0), 100000000, 0, -2419)], (0)), 100000000, 0, -2418), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2417)], (0)), 100000000, 0, -2416), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2415), 0), 100000000, 0, -2414), 0), 100000000, 0, -2413), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 30)), 0); (("choose", 3924), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2410); ((("b")), 100000000, 0, -2411)], (0)), 100000000, 0, -2412), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2410)], (0)), 100000000, 0, -2409); ((("b")), 100000000, 0, -2411)]), 100000000, 0, -2408)], (0)), 100000000, 0, -2407), 0), 100000000, 0, -2406), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 31)), 0); (("choose_exn", 3925), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2403); ((("b")), 100000000, 0, -2404)], (0)), 100000000, 0, -2405), (Tag2 ([(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2403)], (0)), 100000000, 0, -2402); ((("b")), 100000000, 0, -2404)]), 100000000, 0, -2401), 0), 100000000, 0, -2400), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 32)), 0); (("choose_randomly", 3926), ((Tag1 (Tag1 ("random_state"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Random"), "State"), "t"), 0, (0)), 100000000, 0, -2399)], (0)), 100000000, 0, -2398), (Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2395); ((("b")), 100000000, 0, -2396)], (0)), 100000000, 0, -2397), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2395)], (0)), 100000000, 0, -2394); ((("b")), 100000000, 0, -2396)]), 100000000, 0, -2393)], (0)), 100000000, 0, -2392), 0), 100000000, 0, -2391), 0), 100000000, 0, -2390), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 33)), 0); (("choose_randomly_exn", 3927), ((Tag1 (Tag1 ("random_state"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Random"), "State"), "t"), 0, (0)), 100000000, 0, -2389)], (0)), 100000000, 0, -2388), (Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2385); ((("b")), 100000000, 0, -2386)], (0)), 100000000, 0, -2387), (Tag2 ([(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2385)], (0)), 100000000, 0, -2384); ((("b")), 100000000, 0, -2386)]), 100000000, 0, -2383), 0), 100000000, 0, -2382), 0), 100000000, 0, -2381), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 34)), 0); (("set", 3928), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2379); ((("b")), 100000000, 0, -2377)], (0)), 100000000, 0, -2380), (Tag1 (("key"), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2379)], (0)), 100000000, 0, -2378), (Tag1 (("data"), ((("b")), 100000000, 0, -2377), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2376), 0), 100000000, 0, -2375), 0), 100000000, 0, -2374), 0), 100000000, 0, -2373), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 35)), 0); (("add", 3929), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2371); ((("b")), 100000000, 0, -2369)], (0)), 100000000, 0, -2372), (Tag1 (("key"), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2371)], (0)), 100000000, 0, -2370), (Tag1 (("data"), ((("b")), 100000000, 0, -2369), (Tag8 (([("Duplicate", (0)); ("Ok", (0))], (0, 100000000, 0, -2368), 1, 0, 0)), 100000000, 0, -2367), 0), 100000000, 0, -2366), 0), 100000000, 0, -2365), 0), 100000000, 0, -2364), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 36)), 0); (("add_exn", 3930), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2362); ((("b")), 100000000, 0, -2360)], (0)), 100000000, 0, -2363), (Tag1 (("key"), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2362)], (0)), 100000000, 0, -2361), (Tag1 (("data"), ((("b")), 100000000, 0, -2360), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2359), 0), 100000000, 0, -2358), 0), 100000000, 0, -2357), 0), 100000000, 0, -2356), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 37)), 0); (("change", 3931), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2354); ((("b")), 100000000, 0, -2351)], (0)), 100000000, 0, -2355), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2354)], (0)), 100000000, 0, -2353), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -2351)], (0)), 100000000, 0, -2352), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -2351)], (0)), 100000000, 0, -2350), 0), 100000000, 0, -2349), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2348), 0), 100000000, 0, -2347), 0), 100000000, 0, -2346), 0), 100000000, 0, -2345), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 38)), 0); (("update", 3932), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2343); ((("b")), 100000000, 0, -2340)], (0)), 100000000, 0, -2344), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2343)], (0)), 100000000, 0, -2342), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -2340)], (0)), 100000000, 0, -2341), ((("b")), 100000000, 0, -2340), 0), 100000000, 0, -2339), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2338), 0), 100000000, 0, -2337), 0), 100000000, 0, -2336), 0), 100000000, 0, -2335), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 39)), 0); (("update_and_return", 3933), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2333); ((("b")), 100000000, 0, -2329)], (0)), 100000000, 0, -2334), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2333)], (0)), 100000000, 0, -2332), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -2329)], (0)), 100000000, 0, -2331), ((("b")), 100000000, 0, -2329), 0), 100000000, 0, -2330), ((("b")), 100000000, 0, -2329), 0), 100000000, 0, -2328), 0), 100000000, 0, -2327), 0), 100000000, 0, -2326), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 40)), 0); (("map", 3934), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2321); ((("b")), 100000000, 0, -2324)], (0)), 100000000, 0, -2325), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -2324), ((("c")), 100000000, 0, -2322), 0), 100000000, 0, -2323), (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2321); ((("c")), 100000000, 0, -2322)], (0)), 100000000, 0, -2320), 0), 100000000, 0, -2319), 0), 100000000, 0, -2318), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 41)), 0); (("mapi", 3935), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2311); ((("b")), 100000000, 0, -2315)], (0)), 100000000, 0, -2317), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2311)], (0)), 100000000, 0, -2316), (Tag1 (("data"), ((("b")), 100000000, 0, -2315), ((("c")), 100000000, 0, -2312), 0), 100000000, 0, -2314), 0), 100000000, 0, -2313), (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2311); ((("c")), 100000000, 0, -2312)], (0)), 100000000, 0, -2310), 0), 100000000, 0, -2309), 0), 100000000, 0, -2308), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 42)), 0); (("filter_map", 3936), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2302); ((("b")), 100000000, 0, -2306)], (0)), 100000000, 0, -2307), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -2306), (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -2303)], (0)), 100000000, 0, -2305), 0), 100000000, 0, -2304), (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2302); ((("c")), 100000000, 0, -2303)], (0)), 100000000, 0, -2301), 0), 100000000, 0, -2300), 0), 100000000, 0, -2299), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 43)), 0); (("filter_mapi", 3937), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2291); ((("b")), 100000000, 0, -2296)], (0)), 100000000, 0, -2298), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2291)], (0)), 100000000, 0, -2297), (Tag1 (("data"), ((("b")), 100000000, 0, -2296), (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -2292)], (0)), 100000000, 0, -2295), 0), 100000000, 0, -2294), 0), 100000000, 0, -2293), (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2291); ((("c")), 100000000, 0, -2292)], (0)), 100000000, 0, -2290), 0), 100000000, 0, -2289), 0), 100000000, 0, -2288), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 44)), 0); (("filter_keys", 3938), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2282); ((("b")), 100000000, 0, -2283)], (0)), 100000000, 0, -2287), (Tag1 (("f"), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2282)], (0)), 100000000, 0, -2286), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2285), 0), 100000000, 0, -2284), (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2282); ((("b")), 100000000, 0, -2283)], (0)), 100000000, 0, -2281), 0), 100000000, 0, -2280), 0), 100000000, 0, -2279), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 45)), 0); (("filter", 3939), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2274); ((("b")), 100000000, 0, -2275)], (0)), 100000000, 0, -2278), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -2275), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2277), 0), 100000000, 0, -2276), (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2274); ((("b")), 100000000, 0, -2275)], (0)), 100000000, 0, -2273), 0), 100000000, 0, -2272), 0), 100000000, 0, -2271), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 46)), 0); (("filteri", 3940), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2264); ((("b")), 100000000, 0, -2265)], (0)), 100000000, 0, -2270), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2264)], (0)), 100000000, 0, -2269), (Tag1 (("data"), ((("b")), 100000000, 0, -2265), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2268), 0), 100000000, 0, -2267), 0), 100000000, 0, -2266), (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2264); ((("b")), 100000000, 0, -2265)], (0)), 100000000, 0, -2263), 0), 100000000, 0, -2262), 0), 100000000, 0, -2261), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 47)), 0); (("partition_map", 3941), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2253); ((("b")), 100000000, 0, -2259)], (0)), 100000000, 0, -2260), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -2259), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Either"), "t"), [((("c")), 100000000, 0, -2254); ((("d")), 100000000, 0, -2256)], (0)), 100000000, 0, -2258), 0), 100000000, 0, -2257), (Tag2 ([(Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2253); ((("c")), 100000000, 0, -2254)], (0)), 100000000, 0, -2252); (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2253); ((("d")), 100000000, 0, -2256)], (0)), 100000000, 0, -2255)]), 100000000, 0, -2251), 0), 100000000, 0, -2250), 0), 100000000, 0, -2249), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 48)), 0); (("partition_mapi", 3942), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2239); ((("b")), 100000000, 0, -2246)], (0)), 100000000, 0, -2248), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2239)], (0)), 100000000, 0, -2247), (Tag1 (("data"), ((("b")), 100000000, 0, -2246), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Either"), "t"), [((("c")), 100000000, 0, -2240); ((("d")), 100000000, 0, -2242)], (0)), 100000000, 0, -2245), 0), 100000000, 0, -2244), 0), 100000000, 0, -2243), (Tag2 ([(Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2239); ((("c")), 100000000, 0, -2240)], (0)), 100000000, 0, -2238); (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2239); ((("d")), 100000000, 0, -2242)], (0)), 100000000, 0, -2241)]), 100000000, 0, -2237), 0), 100000000, 0, -2236), 0), 100000000, 0, -2235), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 49)), 0); (("partition_tf", 3943), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2229); ((("b")), 100000000, 0, -2230)], (0)), 100000000, 0, -2234), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -2230), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2233), 0), 100000000, 0, -2232), (Tag2 ([(Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2229); ((("b")), 100000000, 0, -2230)], (0)), 100000000, 0, -2228); (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2229); ((("b")), 100000000, 0, -2230)], (0)), 100000000, 0, -2231)]), 100000000, 0, -2227), 0), 100000000, 0, -2226), 0), 100000000, 0, -2225), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 50)), 0); (("partitioni_tf", 3944), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2217); ((("b")), 100000000, 0, -2218)], (0)), 100000000, 0, -2224), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2217)], (0)), 100000000, 0, -2223), (Tag1 (("data"), ((("b")), 100000000, 0, -2218), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2222), 0), 100000000, 0, -2221), 0), 100000000, 0, -2220), (Tag2 ([(Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2217); ((("b")), 100000000, 0, -2218)], (0)), 100000000, 0, -2216); (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2217); ((("b")), 100000000, 0, -2218)], (0)), 100000000, 0, -2219)]), 100000000, 0, -2215), 0), 100000000, 0, -2214), 0), 100000000, 0, -2213), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 51)), 0); (("find_or_add", 3945), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2211); ((("b")), 100000000, 0, -2207)], (0)), 100000000, 0, -2212), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2211)], (0)), 100000000, 0, -2210), (Tag1 (("default"), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2209), ((("b")), 100000000, 0, -2207), 0), 100000000, 0, -2208), ((("b")), 100000000, 0, -2207), 0), 100000000, 0, -2206), 0), 100000000, 0, -2205), 0), 100000000, 0, -2204), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 52)), 0); (("findi_or_add", 3946), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2201); ((("b")), 100000000, 0, -2198)], (0)), 100000000, 0, -2203), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2201)], (0)), 100000000, 0, -2202), (Tag1 (("default"), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2201)], (0)), 100000000, 0, -2200), ((("b")), 100000000, 0, -2198), 0), 100000000, 0, -2199), ((("b")), 100000000, 0, -2198), 0), 100000000, 0, -2197), 0), 100000000, 0, -2196), 0), 100000000, 0, -2195), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 53)), 0); (("find", 3947), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2193); ((("b")), 100000000, 0, -2191)], (0)), 100000000, 0, -2194), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2193)], (0)), 100000000, 0, -2192), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -2191)], (0)), 100000000, 0, -2190), 0), 100000000, 0, -2189), 0), 100000000, 0, -2188), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 54)), 0); (("find_exn", 3948), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2186); ((("b")), 100000000, 0, -2184)], (0)), 100000000, 0, -2187), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2186)], (0)), 100000000, 0, -2185), ((("b")), 100000000, 0, -2184), 0), 100000000, 0, -2183), 0), 100000000, 0, -2182), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 55)), 0); (("find_and_call", 3949), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2177); ((("b")), 100000000, 0, -2179)], (0)), 100000000, 0, -2181), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2177)], (0)), 100000000, 0, -2180), (Tag1 (("if_found"), (Tag1 (0, ((("b")), 100000000, 0, -2179), ((("c")), 100000000, 0, -2174), 0), 100000000, 0, -2178), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2177)], (0)), 100000000, 0, -2176), ((("c")), 100000000, 0, -2174), 0), 100000000, 0, -2175), ((("c")), 100000000, 0, -2174), 0), 100000000, 0, -2173), 0), 100000000, 0, -2172), 0), 100000000, 0, -2171), 0), 100000000, 0, -2170), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 56)), 0); (("find_and_call1", 3950), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2164); ((("b")), 100000000, 0, -2167)], (0)), 100000000, 0, -2169), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2164)], (0)), 100000000, 0, -2168), (Tag1 (("a"), ((("d")), 100000000, 0, -2162), (Tag1 (("if_found"), (Tag1 (0, ((("b")), 100000000, 0, -2167), (Tag1 (0, ((("d")), 100000000, 0, -2162), ((("c")), 100000000, 0, -2159), 0), 100000000, 0, -2166), 0), 100000000, 0, -2165), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2164)], (0)), 100000000, 0, -2163), (Tag1 (0, ((("d")), 100000000, 0, -2162), ((("c")), 100000000, 0, -2159), 0), 100000000, 0, -2161), 0), 100000000, 0, -2160), ((("c")), 100000000, 0, -2159), 0), 100000000, 0, -2158), 0), 100000000, 0, -2157), 0), 100000000, 0, -2156), 0), 100000000, 0, -2155), 0), 100000000, 0, -2154), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 57)), 0); (("find_and_call2", 3951), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2147); ((("b")), 100000000, 0, -2151)], (0)), 100000000, 0, -2153), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2147)], (0)), 100000000, 0, -2152), (Tag1 (("a"), ((("d")), 100000000, 0, -2145), (Tag1 (("b"), ((("e")), 100000000, 0, -2144), (Tag1 (("if_found"), (Tag1 (0, ((("b")), 100000000, 0, -2151), (Tag1 (0, ((("d")), 100000000, 0, -2145), (Tag1 (0, ((("e")), 100000000, 0, -2144), ((("c")), 100000000, 0, -2140), 0), 100000000, 0, -2150), 0), 100000000, 0, -2149), 0), 100000000, 0, -2148), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2147)], (0)), 100000000, 0, -2146), (Tag1 (0, ((("d")), 100000000, 0, -2145), (Tag1 (0, ((("e")), 100000000, 0, -2144), ((("c")), 100000000, 0, -2140), 0), 100000000, 0, -2143), 0), 100000000, 0, -2142), 0), 100000000, 0, -2141), ((("c")), 100000000, 0, -2140), 0), 100000000, 0, -2139), 0), 100000000, 0, -2138), 0), 100000000, 0, -2137), 0), 100000000, 0, -2136), 0), 100000000, 0, -2135), 0), 100000000, 0, -2134), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 58)), 0); (("findi_and_call", 3952), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2127); ((("b")), 100000000, 0, -2130)], (0)), 100000000, 0, -2133), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2127)], (0)), 100000000, 0, -2132), (Tag1 (("if_found"), (Tag1 (("key"), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2127)], (0)), 100000000, 0, -2131), (Tag1 (("data"), ((("b")), 100000000, 0, -2130), ((("c")), 100000000, 0, -2124), 0), 100000000, 0, -2129), 0), 100000000, 0, -2128), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2127)], (0)), 100000000, 0, -2126), ((("c")), 100000000, 0, -2124), 0), 100000000, 0, -2125), ((("c")), 100000000, 0, -2124), 0), 100000000, 0, -2123), 0), 100000000, 0, -2122), 0), 100000000, 0, -2121), 0), 100000000, 0, -2120), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 59)), 0); (("findi_and_call1", 3953), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2112); ((("b")), 100000000, 0, -2116)], (0)), 100000000, 0, -2119), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2112)], (0)), 100000000, 0, -2118), (Tag1 (("a"), ((("d")), 100000000, 0, -2110), (Tag1 (("if_found"), (Tag1 (("key"), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2112)], (0)), 100000000, 0, -2117), (Tag1 (("data"), ((("b")), 100000000, 0, -2116), (Tag1 (0, ((("d")), 100000000, 0, -2110), ((("c")), 100000000, 0, -2107), 0), 100000000, 0, -2115), 0), 100000000, 0, -2114), 0), 100000000, 0, -2113), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2112)], (0)), 100000000, 0, -2111), (Tag1 (0, ((("d")), 100000000, 0, -2110), ((("c")), 100000000, 0, -2107), 0), 100000000, 0, -2109), 0), 100000000, 0, -2108), ((("c")), 100000000, 0, -2107), 0), 100000000, 0, -2106), 0), 100000000, 0, -2105), 0), 100000000, 0, -2104), 0), 100000000, 0, -2103), 0), 100000000, 0, -2102), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 60)), 0); (("findi_and_call2", 3954), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2093); ((("b")), 100000000, 0, -2098)], (0)), 100000000, 0, -2101), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2093)], (0)), 100000000, 0, -2100), (Tag1 (("a"), ((("d")), 100000000, 0, -2091), (Tag1 (("b"), ((("e")), 100000000, 0, -2090), (Tag1 (("if_found"), (Tag1 (("key"), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2093)], (0)), 100000000, 0, -2099), (Tag1 (("data"), ((("b")), 100000000, 0, -2098), (Tag1 (0, ((("d")), 100000000, 0, -2091), (Tag1 (0, ((("e")), 100000000, 0, -2090), ((("c")), 100000000, 0, -2086), 0), 100000000, 0, -2097), 0), 100000000, 0, -2096), 0), 100000000, 0, -2095), 0), 100000000, 0, -2094), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2093)], (0)), 100000000, 0, -2092), (Tag1 (0, ((("d")), 100000000, 0, -2091), (Tag1 (0, ((("e")), 100000000, 0, -2090), ((("c")), 100000000, 0, -2086), 0), 100000000, 0, -2089), 0), 100000000, 0, -2088), 0), 100000000, 0, -2087), ((("c")), 100000000, 0, -2086), 0), 100000000, 0, -2085), 0), 100000000, 0, -2084), 0), 100000000, 0, -2083), 0), 100000000, 0, -2082), 0), 100000000, 0, -2081), 0), 100000000, 0, -2080), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 61)), 0); (("find_and_remove", 3955), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2078); ((("b")), 100000000, 0, -2076)], (0)), 100000000, 0, -2079), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2078)], (0)), 100000000, 0, -2077), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -2076)], (0)), 100000000, 0, -2075), 0), 100000000, 0, -2074), 0), 100000000, 0, -2073), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 62)), 0); (("merge", 3956), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("k")), 100000000, 0, -2060); ((("a")), 100000000, 0, -2068)], (0)), 100000000, 0, -2072), (Tag1 (0, (Tag3 ((("t", 3889)), [((("k")), 100000000, 0, -2060); ((("b")), 100000000, 0, -2067)], (0)), 100000000, 0, -2071), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3895)), [((("k")), 100000000, 0, -2060)], (0)), 100000000, 0, -2070), (Tag1 (0, (Tag8 (([("Both", (((Tag2 ([((("a")), 100000000, 0, -2068); ((("b")), 100000000, 0, -2067)]), 100000000, 0, -2069)))); ("Left", ((((("a")), 100000000, 0, -2068)))); ("Right", ((((("b")), 100000000, 0, -2067))))], (0, 100000000, 0, -2066), 1, 0, 0)), 100000000, 0, -2065), (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -2061)], (0)), 100000000, 0, -2064), 0), 100000000, 0, -2063), 0), 100000000, 0, -2062), (Tag3 ((("t", 3889)), [((("k")), 100000000, 0, -2060); ((("c")), 100000000, 0, -2061)], (0)), 100000000, 0, -2059), 0), 100000000, 0, -2058), 0), 100000000, 0, -2057), 0), 100000000, 0, -2056), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 63)), 0); (("merge_into", 3957), ((Tag1 (("src"), (Tag3 ((("t", 3889)), [((("k")), 100000000, 0, -2053); ((("a")), 100000000, 0, -2051)], (0)), 100000000, 0, -2055), (Tag1 (("dst"), (Tag3 ((("t", 3889)), [((("k")), 100000000, 0, -2053); ((("b")), 100000000, 0, -2049)], (0)), 100000000, 0, -2054), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3895)), [((("k")), 100000000, 0, -2053)], (0)), 100000000, 0, -2052), (Tag1 (0, ((("a")), 100000000, 0, -2051), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -2049)], (0)), 100000000, 0, -2050), (Tag3 (Tag1 ((("Merge_into_action", 3687)), "t"), [((("b")), 100000000, 0, -2049)], (0)), 100000000, 0, -2048), 0), 100000000, 0, -2047), 0), 100000000, 0, -2046), 0), 100000000, 0, -2045), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2044), 0), 100000000, 0, -2043), 0), 100000000, 0, -2042), 0), 100000000, 0, -2041), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 64)), 0); (("keys", 3958), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2038); ((0), 100000000, 0, -2040)], (0)), 100000000, 0, -2039), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2038)], (0)), 100000000, 0, -2037)], (0)), 100000000, 0, -2036), 0), 100000000, 0, -2035), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 65)), 0); (("data", 3959), ((Tag1 (0, (Tag3 ((("t", 3889)), [((0), 100000000, 0, -2034); ((("b")), 100000000, 0, -2032)], (0)), 100000000, 0, -2033), (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -2032)], (0)), 100000000, 0, -2031), 0), 100000000, 0, -2030), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 66)), 0); (("filter_keys_inplace", 3960), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2027); ((0), 100000000, 0, -2029)], (0)), 100000000, 0, -2028), (Tag1 (("f"), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2027)], (0)), 100000000, 0, -2026), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2025), 0), 100000000, 0, -2024), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2023), 0), 100000000, 0, -2022), 0), 100000000, 0, -2021), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 67)), 0); (("filter_inplace", 3961), ((Tag1 (0, (Tag3 ((("t", 3889)), [((0), 100000000, 0, -2020); ((("b")), 100000000, 0, -2018)], (0)), 100000000, 0, -2019), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -2018), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2017), 0), 100000000, 0, -2016), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2015), 0), 100000000, 0, -2014), 0), 100000000, 0, -2013), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 68)), 0); (("filteri_inplace", 3962), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -2011); ((("b")), 100000000, 0, -2009)], (0)), 100000000, 0, -2012), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -2011)], (0)), 100000000, 0, -2010), (Tag1 (("data"), ((("b")), 100000000, 0, -2009), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2008), 0), 100000000, 0, -2007), 0), 100000000, 0, -2006), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2005), 0), 100000000, 0, -2004), 0), 100000000, 0, -2003), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 69)), 0); (("map_inplace", 3963), ((Tag1 (0, (Tag3 ((("t", 3889)), [((0), 100000000, 0, -2002); ((("b")), 100000000, 0, -2000)], (0)), 100000000, 0, -2001), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -2000), ((("b")), 100000000, 0, -2000), 0), 100000000, 0, -1999), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1998), 0), 100000000, 0, -1997), 0), 100000000, 0, -1996), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 70)), 0); (("mapi_inplace", 3964), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -1994); ((("b")), 100000000, 0, -1992)], (0)), 100000000, 0, -1995), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -1994)], (0)), 100000000, 0, -1993), (Tag1 (("data"), ((("b")), 100000000, 0, -1992), ((("b")), 100000000, 0, -1992), 0), 100000000, 0, -1991), 0), 100000000, 0, -1990), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1989), 0), 100000000, 0, -1988), 0), 100000000, 0, -1987), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 71)), 0); (("filter_map_inplace", 3965), ((Tag1 (0, (Tag3 ((("t", 3889)), [((0), 100000000, 0, -1986); ((("b")), 100000000, 0, -1984)], (0)), 100000000, 0, -1985), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -1984), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -1984)], (0)), 100000000, 0, -1983), 0), 100000000, 0, -1982), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1981), 0), 100000000, 0, -1980), 0), 100000000, 0, -1979), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 72)), 0); (("filter_mapi_inplace", 3966), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -1977); ((("b")), 100000000, 0, -1975)], (0)), 100000000, 0, -1978), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -1977)], (0)), 100000000, 0, -1976), (Tag1 (("data"), ((("b")), 100000000, 0, -1975), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -1975)], (0)), 100000000, 0, -1974), 0), 100000000, 0, -1973), 0), 100000000, 0, -1972), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1971), 0), 100000000, 0, -1970), 0), 100000000, 0, -1969), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 73)), 0); (("equal", 3967), ((Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -1964), (Tag1 (0, ((("b")), 100000000, 0, -1964), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1968), 0), 100000000, 0, -1967), 0), 100000000, 0, -1966), (Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -1963); ((("b")), 100000000, 0, -1964)], (0)), 100000000, 0, -1965), (Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -1963); ((("b")), 100000000, 0, -1964)], (0)), 100000000, 0, -1962), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1961), 0), 100000000, 0, -1960), 0), 100000000, 0, -1959), 0), 100000000, 0, -1958), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 74)), 0); (("similar", 3968), ((Tag1 (0, (Tag1 (0, ((("b1")), 100000000, 0, -1954), (Tag1 (0, ((("b2")), 100000000, 0, -1952), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1957), 0), 100000000, 0, -1956), 0), 100000000, 0, -1955), (Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -1951); ((("b1")), 100000000, 0, -1954)], (0)), 100000000, 0, -1953), (Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -1951); ((("b2")), 100000000, 0, -1952)], (0)), 100000000, 0, -1950), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1949), 0), 100000000, 0, -1948), 0), 100000000, 0, -1947), 0), 100000000, 0, -1946), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 75)), 0); (("to_alist", 3969), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -1943); ((("b")), 100000000, 0, -1944)], (0)), 100000000, 0, -1945), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -1943)], (0)), 100000000, 0, -1942); ((("b")), 100000000, 0, -1944)]), 100000000, 0, -1941)], (0)), 100000000, 0, -1940), 0), 100000000, 0, -1939), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 76)), 0); (("incr", 3970), ((Tag1 (Tag1 ("by"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1938)], (0)), 100000000, 0, -1937), (Tag1 (Tag1 ("remove_if_zero"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1936)], (0)), 100000000, 0, -1935), (Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -1932); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1934)], (0)), 100000000, 0, -1933), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -1932)], (0)), 100000000, 0, -1931), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1930), 0), 100000000, 0, -1929), 0), 100000000, 0, -1928), 0), 100000000, 0, -1927), 0), 100000000, 0, -1926), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 77)), 0); (("decr", 3971), ((Tag1 (Tag1 ("by"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1925)], (0)), 100000000, 0, -1924), (Tag1 (Tag1 ("remove_if_zero"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1923)], (0)), 100000000, 0, -1922), (Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -1919); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1921)], (0)), 100000000, 0, -1920), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -1919)], (0)), 100000000, 0, -1918), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1917), 0), 100000000, 0, -1916), 0), 100000000, 0, -1915), 0), 100000000, 0, -1914), 0), 100000000, 0, -1913), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 78)), 0); (("add_multi", 3972), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -1910); (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -1908)], (0)), 100000000, 0, -1912)], (0)), 100000000, 0, -1911), (Tag1 (("key"), (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -1910)], (0)), 100000000, 0, -1909), (Tag1 (("data"), ((("b")), 100000000, 0, -1908), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1907), 0), 100000000, 0, -1906), 0), 100000000, 0, -1905), 0), 100000000, 0, -1904), 0, (("src/hashtbl_intf.ml", 684, 23204, 23214), ("src/hashtbl_intf.ml", 684, 23204, 23281), 0), 0, Tag1 ("Base__Hashtbl_intf", 82)), 0); (("remove_multi", 3973), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -1900); (Tag3 ((Tag3 ("list", 9)), [((0), 100000000, 0, -1903)], (0)), 100000000, 0, -1902)], (0)), 100000000, 0, -1901), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -1900)], (0)), 100000000, 0, -1899), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1898), 0), 100000000, 0, -1897), 0), 100000000, 0, -1896), 0, (("src/hashtbl_intf.ml", 684, 23204, 23214), ("src/hashtbl_intf.ml", 684, 23204, 23281), 0), 0, Tag1 ("Base__Hashtbl_intf", 83)), 0); (("find_multi", 3974), ((Tag1 (0, (Tag3 ((("t", 3889)), [((("a")), 100000000, 0, -1893); (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -1891)], (0)), 100000000, 0, -1895)], (0)), 100000000, 0, -1894), (Tag1 (0, (Tag3 ((("key", 3895)), [((("a")), 100000000, 0, -1893)], (0)), 100000000, 0, -1892), (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -1891)], (0)), 100000000, 0, -1890), 0), 100000000, 0, -1889), 0), 100000000, 0, -1888), 0, (("src/hashtbl_intf.ml", 684, 23204, 23214), ("src/hashtbl_intf.ml", 684, 23204, 23281), 0), 0, Tag1 ("Base__Hashtbl_intf", 84)), 0)])), 0, (("src/hashtbl_intf.ml", 660, 22524, 22524), ("src/hashtbl_intf.ml", 685, 23282, 23285), 0), Tag1 ("Base__Hashtbl_intf", 141)), 0); Tag4 (("For_deriving", 3696), ((Tag1 ([Tag1 (("t", 3975), ([((("k")), 100000000, 0, -2760); ((("v")), 100000000, 0, -2761)], 2, 0, 1, 0, [7; 7], [2; 2], 0, 0, (("src/hashtbl_intf.ml", 688, 23318, 23320), ("src/hashtbl_intf.ml", 688, 23318, 23335), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 142)), 1, 0); Tag4 (("Sexp_of_m", 3976), ((Tag1 ([Tag1 (("t", 3984), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/hashtbl_intf.ml", 691, 23367, 23371), ("src/hashtbl_intf.ml", 691, 23367, 23405), 0), [(("deriving_inline", (("src/hashtbl_intf.ml", 691, 23367, 23381), ("src/hashtbl_intf.ml", 691, 23367, 23396), 0)), ([([(((("sexp_of"), (("src/hashtbl_intf.ml", 691, 23367, 23397), ("src/hashtbl_intf.ml", 691, 23367, 23404), 0))), (("src/hashtbl_intf.ml", 691, 23367, 23397), ("src/hashtbl_intf.ml", 691, 23367, 23404), 0), 0, 0)], (("src/hashtbl_intf.ml", 691, 23367, 23397), ("src/hashtbl_intf.ml", 691, 23367, 23404), 0))]), (("src/hashtbl_intf.ml", 691, 23367, 23378), ("src/hashtbl_intf.ml", 691, 23367, 23405), 0))], 0, 0, Tag1 ("Base__Hashtbl_intf", 143)), 1, 0); (("sexp_of_t", 3985), ((Tag1 (0, (Tag3 ((("t", 3984)), 0, (0)), 100000000, 0, -2764), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2763), 0), 100000000, 0, -2762), 0, (("src/hashtbl_intf.ml", 693, 23407, 23411), ("src/hashtbl_intf.ml", 693, 23407, 23447), 0), 0, Tag1 ("Base__Hashtbl_intf", 144)), 0)])), 0, (("src/hashtbl_intf.ml", 690, 23337, 23339), ("src/hashtbl_intf.ml", 696, 23462, 23467), 0), Tag1 ("Base__Hashtbl_intf", 145)), 0); Tag4 (("M_of_sexp", 3977), ((Tag1 ([Tag1 (("t", 3986), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/hashtbl_intf.ml", 699, 23499, 23503), ("src/hashtbl_intf.ml", 699, 23499, 23537), 0), [(("deriving_inline", (("src/hashtbl_intf.ml", 699, 23499, 23513), ("src/hashtbl_intf.ml", 699, 23499, 23528), 0)), ([([(((("of_sexp"), (("src/hashtbl_intf.ml", 699, 23499, 23529), ("src/hashtbl_intf.ml", 699, 23499, 23536), 0))), (("src/hashtbl_intf.ml", 699, 23499, 23529), ("src/hashtbl_intf.ml", 699, 23499, 23536), 0), 0, 0)], (("src/hashtbl_intf.ml", 699, 23499, 23529), ("src/hashtbl_intf.ml", 699, 23499, 23536), 0))]), (("src/hashtbl_intf.ml", 699, 23499, 23510), ("src/hashtbl_intf.ml", 699, 23499, 23537), 0))], 0, 0, Tag1 ("Base__Hashtbl_intf", 146)), 1, 0); (("t_of_sexp", 3987), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2775), (Tag3 ((("t", 3986)), 0, (0)), 100000000, 0, -2774), 0), 100000000, 0, -2773), 0, (("src/hashtbl_intf.ml", 701, 23539, 23543), ("src/hashtbl_intf.ml", 701, 23539, 23579), 0), 0, Tag1 ("Base__Hashtbl_intf", 147)), 0); (("compare", 3988), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((("t", 3986)), 0, (0)), 100000000, 0, -2772)], (0)), 100000000, 0, -2771), 0, (("src/hashtbl_intf.ml", 705, 23595, 23607), ("src/hashtbl_intf.ml", 705, 23595, 23629), 0), 0, Tag1 ("Base__Ppx_compare_lib", 5)), 0); (("sexp_of_t", 3989), ((Tag1 (0, (Tag3 ((("t", 3986)), 0, (0)), 100000000, 0, -2770), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2769), 0), 100000000, 0, -2768), 0, (("src/hashtbl_intf.ml", 705, 23595, 23607), ("src/hashtbl_intf.ml", 705, 23595, 23629), 0), 0, Tag1 ("Base__Hashtbl_intf", 2)), 0); (("hash", 3990), ((Tag1 (0, (Tag3 ((("t", 3986)), 0, (0)), 100000000, 0, -2767), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2766), 0), 100000000, 0, -2765), 0, (("src/hashtbl_intf.ml", 705, 23595, 23607), ("src/hashtbl_intf.ml", 705, 23595, 23629), 0), 0, Tag1 ("Base__Hashtbl_intf", 3)), 0)])), 0, (("src/hashtbl_intf.ml", 698, 23469, 23471), ("src/hashtbl_intf.ml", 706, 23630, 23635), 0), Tag1 ("Base__Hashtbl_intf", 149)), 0); Tag4 (("M_sexp_grammar", 3978), ((Tag1 ([Tag1 (("t", 3991), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/hashtbl_intf.ml", 709, 23672, 23676), ("src/hashtbl_intf.ml", 709, 23672, 23715), 0), [(("deriving_inline", (("src/hashtbl_intf.ml", 709, 23672, 23686), ("src/hashtbl_intf.ml", 709, 23672, 23701), 0)), ([([(((("sexp_grammar"), (("src/hashtbl_intf.ml", 709, 23672, 23702), ("src/hashtbl_intf.ml", 709, 23672, 23714), 0))), (("src/hashtbl_intf.ml", 709, 23672, 23702), ("src/hashtbl_intf.ml", 709, 23672, 23714), 0), 0, 0)], (("src/hashtbl_intf.ml", 709, 23672, 23702), ("src/hashtbl_intf.ml", 709, 23672, 23714), 0))]), (("src/hashtbl_intf.ml", 709, 23672, 23683), ("src/hashtbl_intf.ml", 709, 23672, 23715), 0))], 0, 0, Tag1 ("Base__Hashtbl_intf", 150)), 1, 0); (("t_sexp_grammar", 3992), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [(Tag3 ((("t", 3991)), 0, (0)), 100000000, 0, -2777)], (0)), 100000000, 0, -2776), 0, (("src/hashtbl_intf.ml", 711, 23717, 23721), ("src/hashtbl_intf.ml", 711, 23717, 23767), 0), 0, Tag1 ("Base__Hashtbl_intf", 151)), 0)])), 0, (("src/hashtbl_intf.ml", 708, 23637, 23639), ("src/hashtbl_intf.ml", 714, 23782, 23787), 0), Tag1 ("Base__Hashtbl_intf", 152)), 0); Tag4 (("Equal_m", 3979), ((Tag1 (0)), 0, (("src/hashtbl_intf.ml", 716, 23789, 23791), ("src/hashtbl_intf.ml", 716, 23789, 23820), 0), Tag1 ("Base__Hashtbl_intf", 153)), 0); (("sexp_of_m__t", 3980), ((Tag1 (0, (Tag11 ((("Sexp_of_m", 3976)), [(("t"), ((("k")), 100000000, 0, -2755))]), 100000000, 0, -2759), (Tag1 (0, (Tag1 (0, ((("v")), 100000000, 0, -2756), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2758), 0), 100000000, 0, -2757), (Tag1 (0, (Tag3 ((("t", 3975)), [((("k")), 100000000, 0, -2755); ((("v")), 100000000, 0, -2756)], (0)), 100000000, 0, -2754), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2753), 0), 100000000, 0, -2752), 0), 100000000, 0, -2751), 0), 100000000, 0, -2750), 0, (("src/hashtbl_intf.ml", 718, 23822, 23824), ("src/hashtbl_intf.ml", 722, 23924, 23937), 0), 0, Tag1 ("Base__Hashtbl_intf", 155)), 0); (("m__t_of_sexp", 3981), ((Tag1 (0, (Tag11 ((("M_of_sexp", 3977)), [(("t"), ((("k")), 100000000, 0, -2744))]), 100000000, 0, -2749), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2748), ((("v")), 100000000, 0, -2745), 0), 100000000, 0, -2747), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2746), (Tag3 ((("t", 3975)), [((("k")), 100000000, 0, -2744); ((("v")), 100000000, 0, -2745)], (0)), 100000000, 0, -2743), 0), 100000000, 0, -2742), 0), 100000000, 0, -2741), 0), 100000000, 0, -2740), 0, (("src/hashtbl_intf.ml", 724, 23939, 23941), ("src/hashtbl_intf.ml", 728, 24037, 24054), 0), 0, Tag1 ("Base__Hashtbl_intf", 157)), 0); (("m__t_sexp_grammar", 3982), ((Tag1 (0, (Tag11 ((("M_sexp_grammar", 3978)), [(("t"), ((("k")), 100000000, 0, -2736))]), 100000000, 0, -2739), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [((("v")), 100000000, 0, -2737)], (0)), 100000000, 0, -2738), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [(Tag3 ((("t", 3975)), [((("k")), 100000000, 0, -2736); ((("v")), 100000000, 0, -2737)], (0)), 100000000, 0, -2735)], (0)), 100000000, 0, -2734), 0), 100000000, 0, -2733), 0), 100000000, 0, -2732), 0, (("src/hashtbl_intf.ml", 730, 24056, 24058), ("src/hashtbl_intf.ml", 733, 24162, 24203), 0), 0, Tag1 ("Base__Hashtbl_intf", 159)), 0); (("equal_m__t", 3983), ((Tag1 (0, (Tag11 ((("Equal_m", 3979)), 0), 100000000, 0, -2731), (Tag1 (0, (Tag1 (0, ((("v")), 100000000, 0, -2726), (Tag1 (0, ((("v")), 100000000, 0, -2726), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2730), 0), 100000000, 0, -2729), 0), 100000000, 0, -2728), (Tag1 (0, (Tag3 ((("t", 3975)), [((("k")), 100000000, 0, -2725); ((("v")), 100000000, 0, -2726)], (0)), 100000000, 0, -2727), (Tag1 (0, (Tag3 ((("t", 3975)), [((("k")), 100000000, 0, -2725); ((("v")), 100000000, 0, -2726)], (0)), 100000000, 0, -2724), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2723), 0), 100000000, 0, -2722), 0), 100000000, 0, -2721), 0), 100000000, 0, -2720), 0), 100000000, 0, -2719), 0, (("src/hashtbl_intf.ml", 735, 24205, 24207), ("src/hashtbl_intf.ml", 740, 24308, 24319), 0), 0, Tag1 ("Base__Hashtbl_intf", 160)), 0)])), 0, (("src/hashtbl_intf.ml", 687, 23287, 23287), ("src/hashtbl_intf.ml", 741, 24320, 24323), 0), Tag1 ("Base__Hashtbl_intf", 161)), 0); Tag4 (("Hashtbl", 3697), ((Tag1 ([(("hash", 3993), ((Tag1 (0, ((("a")), 100000000, 0, -3696), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3695), 0), 100000000, 0, -3694), 0, (("src/hashtbl_intf.ml", 635, 21660, 21662), ("src/hashtbl_intf.ml", 635, 21660, 21682), 0), 0, Tag1 ("Base__Hashtbl_intf", 116)), 0); (("hash_param", 3994), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3693), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3692), (Tag1 (0, ((("a")), 100000000, 0, -3691), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3690), 0), 100000000, 0, -3689), 0), 100000000, 0, -3688), 0), 100000000, 0, -3687), 0, (("src/hashtbl_intf.ml", 636, 21683, 21685), ("src/hashtbl_intf.ml", 636, 21683, 21725), 0), 0, Tag1 ("Base__Hashtbl_intf", 117)), 0); Tag1 (("t", 3995), ([((("a")), 100000000, 0, -3685); ((("b")), 100000000, 0, -3686)], 2, 0, 1, 0, [15; 15], [2; 2], 0, 0, (("src/hashtbl_intf.ml", 638, 21727, 21729), ("src/hashtbl_intf.ml", 638, 21727, 21746), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 118)), 1, 0); (("sexp_of_t", 3996), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -3679), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -3684), 0), 100000000, 0, -3683), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -3680), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -3682), 0), 100000000, 0, -3681), (Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3679); ((("b")), 100000000, 0, -3680)], (0)), 100000000, 0, -3678), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -3677), 0), 100000000, 0, -3676), 0), 100000000, 0, -3675), 0), 100000000, 0, -3674), 0, (("src/hashtbl_intf.ml", 644, 22077, 22079), ("src/hashtbl_intf.ml", 644, 22077, 22151), 0), 0, Tag1 ("Base__Hashtbl_intf", 119)), 0); (("create", 3997), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3673)], (0)), 100000000, 0, -3672), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3671)], (0)), 100000000, 0, -3670), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -3667)], (0)), 100000000, 0, -3669), (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3667); ((("b")), 100000000, 0, -3668)], (0)), 100000000, 0, -3666), 0), 100000000, 0, -3665), 0), 100000000, 0, -3664), 0), 100000000, 0, -3663), 0, (("src/hashtbl_intf.ml", 646, 22153, 22163), ("src/hashtbl_intf.ml", 646, 22153, 22206), 0), 0, Tag1 ("Base__Hashtbl_intf", 104)), 0); (("of_alist", 3998), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3662)], (0)), 100000000, 0, -3661), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3660)], (0)), 100000000, 0, -3659), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -3654)], (0)), 100000000, 0, -3658), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([((("a")), 100000000, 0, -3654); ((("b")), 100000000, 0, -3655)]), 100000000, 0, -3657)], (0)), 100000000, 0, -3656), (Tag8 (([("Duplicate_key", ((((("a")), 100000000, 0, -3654)))); ("Ok", (((Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3654); ((("b")), 100000000, 0, -3655)], (0)), 100000000, 0, -3653))))], (0, 100000000, 0, -3652), 1, 0, 0)), 100000000, 0, -3651), 0), 100000000, 0, -3650), 0), 100000000, 0, -3649), 0), 100000000, 0, -3648), 0), 100000000, 0, -3647), 0, (("src/hashtbl_intf.ml", 646, 22153, 22163), ("src/hashtbl_intf.ml", 646, 22153, 22206), 0), 0, Tag1 ("Base__Hashtbl_intf", 105)), 0); (("of_alist_report_all_dups", 3999), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3646)], (0)), 100000000, 0, -3645), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3644)], (0)), 100000000, 0, -3643), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -3637)], (0)), 100000000, 0, -3642), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([((("a")), 100000000, 0, -3637); ((("b")), 100000000, 0, -3638)]), 100000000, 0, -3641)], (0)), 100000000, 0, -3640), (Tag8 (([("Duplicate_keys", (((Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -3637)], (0)), 100000000, 0, -3639)))); ("Ok", (((Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3637); ((("b")), 100000000, 0, -3638)], (0)), 100000000, 0, -3636))))], (0, 100000000, 0, -3635), 1, 0, 0)), 100000000, 0, -3634), 0), 100000000, 0, -3633), 0), 100000000, 0, -3632), 0), 100000000, 0, -3631), 0), 100000000, 0, -3630), 0, (("src/hashtbl_intf.ml", 646, 22153, 22163), ("src/hashtbl_intf.ml", 646, 22153, 22206), 0), 0, Tag1 ("Base__Hashtbl_intf", 106)), 0); (("of_alist_or_error", 4000), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3629)], (0)), 100000000, 0, -3628), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3627)], (0)), 100000000, 0, -3626), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -3621)], (0)), 100000000, 0, -3625), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([((("a")), 100000000, 0, -3621); ((("b")), 100000000, 0, -3622)]), 100000000, 0, -3624)], (0)), 100000000, 0, -3623), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Or_error"), "t"), [(Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3621); ((("b")), 100000000, 0, -3622)], (0)), 100000000, 0, -3620)], (0)), 100000000, 0, -3619), 0), 100000000, 0, -3618), 0), 100000000, 0, -3617), 0), 100000000, 0, -3616), 0), 100000000, 0, -3615), 0, (("src/hashtbl_intf.ml", 646, 22153, 22163), ("src/hashtbl_intf.ml", 646, 22153, 22206), 0), 0, Tag1 ("Base__Hashtbl_intf", 107)), 0); (("of_alist_exn", 4001), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3614)], (0)), 100000000, 0, -3613), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3612)], (0)), 100000000, 0, -3611), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -3606)], (0)), 100000000, 0, -3610), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([((("a")), 100000000, 0, -3606); ((("b")), 100000000, 0, -3607)]), 100000000, 0, -3609)], (0)), 100000000, 0, -3608), (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3606); ((("b")), 100000000, 0, -3607)], (0)), 100000000, 0, -3605), 0), 100000000, 0, -3604), 0), 100000000, 0, -3603), 0), 100000000, 0, -3602), 0), 100000000, 0, -3601), 0, (("src/hashtbl_intf.ml", 646, 22153, 22163), ("src/hashtbl_intf.ml", 646, 22153, 22206), 0), 0, Tag1 ("Base__Hashtbl_intf", 108)), 0); (("of_alist_multi", 4002), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3600)], (0)), 100000000, 0, -3599), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3598)], (0)), 100000000, 0, -3597), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -3591)], (0)), 100000000, 0, -3596), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([((("a")), 100000000, 0, -3591); ((("b")), 100000000, 0, -3593)]), 100000000, 0, -3595)], (0)), 100000000, 0, -3594), (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3591); (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -3593)], (0)), 100000000, 0, -3592)], (0)), 100000000, 0, -3590), 0), 100000000, 0, -3589), 0), 100000000, 0, -3588), 0), 100000000, 0, -3587), 0), 100000000, 0, -3586), 0, (("src/hashtbl_intf.ml", 646, 22153, 22163), ("src/hashtbl_intf.ml", 646, 22153, 22206), 0), 0, Tag1 ("Base__Hashtbl_intf", 109)), 0); (("create_mapped", 4003), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3585)], (0)), 100000000, 0, -3584), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3583)], (0)), 100000000, 0, -3582), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -3574)], (0)), 100000000, 0, -3581), (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -3578), ((("a")), 100000000, 0, -3574), 0), 100000000, 0, -3580), (Tag1 (("get_data"), (Tag1 (0, ((("r")), 100000000, 0, -3578), ((("b")), 100000000, 0, -3575), 0), 100000000, 0, -3579), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -3578)], (0)), 100000000, 0, -3577), (Tag8 (([("Duplicate_keys", (((Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -3574)], (0)), 100000000, 0, -3576)))); ("Ok", (((Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3574); ((("b")), 100000000, 0, -3575)], (0)), 100000000, 0, -3573))))], (0, 100000000, 0, -3572), 1, 0, 0)), 100000000, 0, -3571), 0), 100000000, 0, -3570), 0), 100000000, 0, -3569), 0), 100000000, 0, -3568), 0), 100000000, 0, -3567), 0), 100000000, 0, -3566), 0), 100000000, 0, -3565), 0, (("src/hashtbl_intf.ml", 646, 22153, 22163), ("src/hashtbl_intf.ml", 646, 22153, 22206), 0), 0, Tag1 ("Base__Hashtbl_intf", 110)), 0); (("create_with_key", 4004), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3564)], (0)), 100000000, 0, -3563), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3562)], (0)), 100000000, 0, -3561), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -3555)], (0)), 100000000, 0, -3560), (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -3556), ((("a")), 100000000, 0, -3555), 0), 100000000, 0, -3559), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -3556)], (0)), 100000000, 0, -3558), (Tag8 (([("Duplicate_keys", (((Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -3555)], (0)), 100000000, 0, -3557)))); ("Ok", (((Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3555); ((("r")), 100000000, 0, -3556)], (0)), 100000000, 0, -3554))))], (0, 100000000, 0, -3553), 1, 0, 0)), 100000000, 0, -3552), 0), 100000000, 0, -3551), 0), 100000000, 0, -3550), 0), 100000000, 0, -3549), 0), 100000000, 0, -3548), 0), 100000000, 0, -3547), 0, (("src/hashtbl_intf.ml", 646, 22153, 22163), ("src/hashtbl_intf.ml", 646, 22153, 22206), 0), 0, Tag1 ("Base__Hashtbl_intf", 111)), 0); (("create_with_key_or_error", 4005), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3546)], (0)), 100000000, 0, -3545), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3544)], (0)), 100000000, 0, -3543), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -3538)], (0)), 100000000, 0, -3542), (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -3539), ((("a")), 100000000, 0, -3538), 0), 100000000, 0, -3541), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -3539)], (0)), 100000000, 0, -3540), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Or_error"), "t"), [(Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3538); ((("r")), 100000000, 0, -3539)], (0)), 100000000, 0, -3537)], (0)), 100000000, 0, -3536), 0), 100000000, 0, -3535), 0), 100000000, 0, -3534), 0), 100000000, 0, -3533), 0), 100000000, 0, -3532), 0), 100000000, 0, -3531), 0, (("src/hashtbl_intf.ml", 646, 22153, 22163), ("src/hashtbl_intf.ml", 646, 22153, 22206), 0), 0, Tag1 ("Base__Hashtbl_intf", 112)), 0); (("create_with_key_exn", 4006), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3530)], (0)), 100000000, 0, -3529), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3528)], (0)), 100000000, 0, -3527), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -3522)], (0)), 100000000, 0, -3526), (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -3523), ((("a")), 100000000, 0, -3522), 0), 100000000, 0, -3525), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -3523)], (0)), 100000000, 0, -3524), (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3522); ((("r")), 100000000, 0, -3523)], (0)), 100000000, 0, -3521), 0), 100000000, 0, -3520), 0), 100000000, 0, -3519), 0), 100000000, 0, -3518), 0), 100000000, 0, -3517), 0), 100000000, 0, -3516), 0, (("src/hashtbl_intf.ml", 646, 22153, 22163), ("src/hashtbl_intf.ml", 646, 22153, 22206), 0), 0, Tag1 ("Base__Hashtbl_intf", 113)), 0); (("group", 4007), ((Tag1 (Tag1 ("growth_allowed"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3515)], (0)), 100000000, 0, -3514), (Tag1 (Tag1 ("size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3513)], (0)), 100000000, 0, -3512), (Tag1 (0, (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("a")), 100000000, 0, -3503)], (0)), 100000000, 0, -3511), (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -3506), ((("a")), 100000000, 0, -3503), 0), 100000000, 0, -3510), (Tag1 (("get_data"), (Tag1 (0, ((("r")), 100000000, 0, -3506), ((("b")), 100000000, 0, -3504), 0), 100000000, 0, -3509), (Tag1 (("combine"), (Tag1 (0, ((("b")), 100000000, 0, -3504), (Tag1 (0, ((("b")), 100000000, 0, -3504), ((("b")), 100000000, 0, -3504), 0), 100000000, 0, -3508), 0), 100000000, 0, -3507), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -3506)], (0)), 100000000, 0, -3505), (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3503); ((("b")), 100000000, 0, -3504)], (0)), 100000000, 0, -3502), 0), 100000000, 0, -3501), 0), 100000000, 0, -3500), 0), 100000000, 0, -3499), 0), 100000000, 0, -3498), 0), 100000000, 0, -3497), 0), 100000000, 0, -3496), 0), 100000000, 0, -3495), 0, (("src/hashtbl_intf.ml", 646, 22153, 22163), ("src/hashtbl_intf.ml", 646, 22153, 22206), 0), 0, Tag1 ("Base__Hashtbl_intf", 114)), 0); Tag1 (("key", 4008), ([((("a")), 100000000, 0, -3494)], 1, 0, 1, (((("a")), 100000000, 0, -3494)), [25], [1], 0, 0, (("src/hashtbl_intf.ml", 648, 22223, 22283), ("src/hashtbl_intf.ml", 648, 22223, 22299), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 122)), 1, 0); (("sexp_of_key", 4009), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3491); ((0), 100000000, 0, -3493)], (0)), 100000000, 0, -3492), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3491)], (0)), 100000000, 0, -3490), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -3489), 0), 100000000, 0, -3488), 0), 100000000, 0, -3487), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 14)), 0); (("clear", 4010), ((Tag1 (0, (Tag3 ((("t", 3995)), [((0), 100000000, 0, -3485); ((0), 100000000, 0, -3486)], (0)), 100000000, 0, -3484), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3483), 0), 100000000, 0, -3482), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 15)), 0); (("copy", 4011), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3479); ((("b")), 100000000, 0, -3480)], (0)), 100000000, 0, -3481), (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3479); ((("b")), 100000000, 0, -3480)], (0)), 100000000, 0, -3478), 0), 100000000, 0, -3477), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 16)), 0); (("fold", 4012), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3475); ((("b")), 100000000, 0, -3473)], (0)), 100000000, 0, -3476), (Tag1 (("init"), ((("acc")), 100000000, 0, -3469), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3475)], (0)), 100000000, 0, -3474), (Tag1 (("data"), ((("b")), 100000000, 0, -3473), (Tag1 (0, ((("acc")), 100000000, 0, -3469), ((("acc")), 100000000, 0, -3469), 0), 100000000, 0, -3472), 0), 100000000, 0, -3471), 0), 100000000, 0, -3470), ((("acc")), 100000000, 0, -3469), 0), 100000000, 0, -3468), 0), 100000000, 0, -3467), 0), 100000000, 0, -3466), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 17)), 0); (("iter_keys", 4013), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3463); ((0), 100000000, 0, -3465)], (0)), 100000000, 0, -3464), (Tag1 (("f"), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3463)], (0)), 100000000, 0, -3462), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3461), 0), 100000000, 0, -3460), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3459), 0), 100000000, 0, -3458), 0), 100000000, 0, -3457), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 18)), 0); (("iter", 4014), ((Tag1 (0, (Tag3 ((("t", 3995)), [((0), 100000000, 0, -3456); ((("b")), 100000000, 0, -3454)], (0)), 100000000, 0, -3455), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -3454), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3453), 0), 100000000, 0, -3452), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3451), 0), 100000000, 0, -3450), 0), 100000000, 0, -3449), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 19)), 0); (("iteri", 4015), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3447); ((("b")), 100000000, 0, -3445)], (0)), 100000000, 0, -3448), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3447)], (0)), 100000000, 0, -3446), (Tag1 (("data"), ((("b")), 100000000, 0, -3445), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3444), 0), 100000000, 0, -3443), 0), 100000000, 0, -3442), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3441), 0), 100000000, 0, -3440), 0), 100000000, 0, -3439), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 20)), 0); (("existsi", 4016), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3437); ((("b")), 100000000, 0, -3435)], (0)), 100000000, 0, -3438), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3437)], (0)), 100000000, 0, -3436), (Tag1 (("data"), ((("b")), 100000000, 0, -3435), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3434), 0), 100000000, 0, -3433), 0), 100000000, 0, -3432), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3431), 0), 100000000, 0, -3430), 0), 100000000, 0, -3429), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 21)), 0); (("exists", 4017), ((Tag1 (0, (Tag3 ((("t", 3995)), [((0), 100000000, 0, -3428); ((("b")), 100000000, 0, -3426)], (0)), 100000000, 0, -3427), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -3426), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3425), 0), 100000000, 0, -3424), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3423), 0), 100000000, 0, -3422), 0), 100000000, 0, -3421), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 22)), 0); (("for_alli", 4018), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3419); ((("b")), 100000000, 0, -3417)], (0)), 100000000, 0, -3420), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3419)], (0)), 100000000, 0, -3418), (Tag1 (("data"), ((("b")), 100000000, 0, -3417), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3416), 0), 100000000, 0, -3415), 0), 100000000, 0, -3414), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3413), 0), 100000000, 0, -3412), 0), 100000000, 0, -3411), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 23)), 0); (("for_all", 4019), ((Tag1 (0, (Tag3 ((("t", 3995)), [((0), 100000000, 0, -3410); ((("b")), 100000000, 0, -3408)], (0)), 100000000, 0, -3409), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -3408), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3407), 0), 100000000, 0, -3406), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3405), 0), 100000000, 0, -3404), 0), 100000000, 0, -3403), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 24)), 0); (("counti", 4020), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3401); ((("b")), 100000000, 0, -3399)], (0)), 100000000, 0, -3402), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3401)], (0)), 100000000, 0, -3400), (Tag1 (("data"), ((("b")), 100000000, 0, -3399), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3398), 0), 100000000, 0, -3397), 0), 100000000, 0, -3396), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3395), 0), 100000000, 0, -3394), 0), 100000000, 0, -3393), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 25)), 0); (("count", 4021), ((Tag1 (0, (Tag3 ((("t", 3995)), [((0), 100000000, 0, -3392); ((("b")), 100000000, 0, -3390)], (0)), 100000000, 0, -3391), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -3390), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3389), 0), 100000000, 0, -3388), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3387), 0), 100000000, 0, -3386), 0), 100000000, 0, -3385), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 26)), 0); (("length", 4022), ((Tag1 (0, (Tag3 ((("t", 3995)), [((0), 100000000, 0, -3383); ((0), 100000000, 0, -3384)], (0)), 100000000, 0, -3382), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3381), 0), 100000000, 0, -3380), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 27)), 0); (("is_empty", 4023), ((Tag1 (0, (Tag3 ((("t", 3995)), [((0), 100000000, 0, -3378); ((0), 100000000, 0, -3379)], (0)), 100000000, 0, -3377), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3376), 0), 100000000, 0, -3375), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 28)), 0); (("mem", 4024), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3372); ((0), 100000000, 0, -3374)], (0)), 100000000, 0, -3373), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3372)], (0)), 100000000, 0, -3371), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3370), 0), 100000000, 0, -3369), 0), 100000000, 0, -3368), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 29)), 0); (("remove", 4025), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3365); ((0), 100000000, 0, -3367)], (0)), 100000000, 0, -3366), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3365)], (0)), 100000000, 0, -3364), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3363), 0), 100000000, 0, -3362), 0), 100000000, 0, -3361), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 30)), 0); (("choose", 4026), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3358); ((("b")), 100000000, 0, -3359)], (0)), 100000000, 0, -3360), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3358)], (0)), 100000000, 0, -3357); ((("b")), 100000000, 0, -3359)]), 100000000, 0, -3356)], (0)), 100000000, 0, -3355), 0), 100000000, 0, -3354), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 31)), 0); (("choose_exn", 4027), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3351); ((("b")), 100000000, 0, -3352)], (0)), 100000000, 0, -3353), (Tag2 ([(Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3351)], (0)), 100000000, 0, -3350); ((("b")), 100000000, 0, -3352)]), 100000000, 0, -3349), 0), 100000000, 0, -3348), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 32)), 0); (("choose_randomly", 4028), ((Tag1 (Tag1 ("random_state"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Random"), "State"), "t"), 0, (0)), 100000000, 0, -3347)], (0)), 100000000, 0, -3346), (Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3343); ((("b")), 100000000, 0, -3344)], (0)), 100000000, 0, -3345), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3343)], (0)), 100000000, 0, -3342); ((("b")), 100000000, 0, -3344)]), 100000000, 0, -3341)], (0)), 100000000, 0, -3340), 0), 100000000, 0, -3339), 0), 100000000, 0, -3338), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 33)), 0); (("choose_randomly_exn", 4029), ((Tag1 (Tag1 ("random_state"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Random"), "State"), "t"), 0, (0)), 100000000, 0, -3337)], (0)), 100000000, 0, -3336), (Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3333); ((("b")), 100000000, 0, -3334)], (0)), 100000000, 0, -3335), (Tag2 ([(Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3333)], (0)), 100000000, 0, -3332); ((("b")), 100000000, 0, -3334)]), 100000000, 0, -3331), 0), 100000000, 0, -3330), 0), 100000000, 0, -3329), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 34)), 0); (("set", 4030), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3327); ((("b")), 100000000, 0, -3325)], (0)), 100000000, 0, -3328), (Tag1 (("key"), (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3327)], (0)), 100000000, 0, -3326), (Tag1 (("data"), ((("b")), 100000000, 0, -3325), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3324), 0), 100000000, 0, -3323), 0), 100000000, 0, -3322), 0), 100000000, 0, -3321), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 35)), 0); (("add", 4031), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3319); ((("b")), 100000000, 0, -3317)], (0)), 100000000, 0, -3320), (Tag1 (("key"), (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3319)], (0)), 100000000, 0, -3318), (Tag1 (("data"), ((("b")), 100000000, 0, -3317), (Tag8 (([("Duplicate", (0)); ("Ok", (0))], (0, 100000000, 0, -3316), 1, 0, 0)), 100000000, 0, -3315), 0), 100000000, 0, -3314), 0), 100000000, 0, -3313), 0), 100000000, 0, -3312), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 36)), 0); (("add_exn", 4032), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3310); ((("b")), 100000000, 0, -3308)], (0)), 100000000, 0, -3311), (Tag1 (("key"), (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3310)], (0)), 100000000, 0, -3309), (Tag1 (("data"), ((("b")), 100000000, 0, -3308), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3307), 0), 100000000, 0, -3306), 0), 100000000, 0, -3305), 0), 100000000, 0, -3304), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 37)), 0); (("change", 4033), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3302); ((("b")), 100000000, 0, -3299)], (0)), 100000000, 0, -3303), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3302)], (0)), 100000000, 0, -3301), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -3299)], (0)), 100000000, 0, -3300), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -3299)], (0)), 100000000, 0, -3298), 0), 100000000, 0, -3297), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3296), 0), 100000000, 0, -3295), 0), 100000000, 0, -3294), 0), 100000000, 0, -3293), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 38)), 0); (("update", 4034), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3291); ((("b")), 100000000, 0, -3288)], (0)), 100000000, 0, -3292), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3291)], (0)), 100000000, 0, -3290), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -3288)], (0)), 100000000, 0, -3289), ((("b")), 100000000, 0, -3288), 0), 100000000, 0, -3287), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3286), 0), 100000000, 0, -3285), 0), 100000000, 0, -3284), 0), 100000000, 0, -3283), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 39)), 0); (("update_and_return", 4035), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3281); ((("b")), 100000000, 0, -3277)], (0)), 100000000, 0, -3282), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3281)], (0)), 100000000, 0, -3280), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -3277)], (0)), 100000000, 0, -3279), ((("b")), 100000000, 0, -3277), 0), 100000000, 0, -3278), ((("b")), 100000000, 0, -3277), 0), 100000000, 0, -3276), 0), 100000000, 0, -3275), 0), 100000000, 0, -3274), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 40)), 0); (("map", 4036), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3269); ((("b")), 100000000, 0, -3272)], (0)), 100000000, 0, -3273), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -3272), ((("c")), 100000000, 0, -3270), 0), 100000000, 0, -3271), (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3269); ((("c")), 100000000, 0, -3270)], (0)), 100000000, 0, -3268), 0), 100000000, 0, -3267), 0), 100000000, 0, -3266), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 41)), 0); (("mapi", 4037), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3259); ((("b")), 100000000, 0, -3263)], (0)), 100000000, 0, -3265), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3259)], (0)), 100000000, 0, -3264), (Tag1 (("data"), ((("b")), 100000000, 0, -3263), ((("c")), 100000000, 0, -3260), 0), 100000000, 0, -3262), 0), 100000000, 0, -3261), (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3259); ((("c")), 100000000, 0, -3260)], (0)), 100000000, 0, -3258), 0), 100000000, 0, -3257), 0), 100000000, 0, -3256), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 42)), 0); (("filter_map", 4038), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3250); ((("b")), 100000000, 0, -3254)], (0)), 100000000, 0, -3255), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -3254), (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -3251)], (0)), 100000000, 0, -3253), 0), 100000000, 0, -3252), (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3250); ((("c")), 100000000, 0, -3251)], (0)), 100000000, 0, -3249), 0), 100000000, 0, -3248), 0), 100000000, 0, -3247), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 43)), 0); (("filter_mapi", 4039), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3239); ((("b")), 100000000, 0, -3244)], (0)), 100000000, 0, -3246), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3239)], (0)), 100000000, 0, -3245), (Tag1 (("data"), ((("b")), 100000000, 0, -3244), (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -3240)], (0)), 100000000, 0, -3243), 0), 100000000, 0, -3242), 0), 100000000, 0, -3241), (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3239); ((("c")), 100000000, 0, -3240)], (0)), 100000000, 0, -3238), 0), 100000000, 0, -3237), 0), 100000000, 0, -3236), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 44)), 0); (("filter_keys", 4040), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3230); ((("b")), 100000000, 0, -3231)], (0)), 100000000, 0, -3235), (Tag1 (("f"), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3230)], (0)), 100000000, 0, -3234), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3233), 0), 100000000, 0, -3232), (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3230); ((("b")), 100000000, 0, -3231)], (0)), 100000000, 0, -3229), 0), 100000000, 0, -3228), 0), 100000000, 0, -3227), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 45)), 0); (("filter", 4041), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3222); ((("b")), 100000000, 0, -3223)], (0)), 100000000, 0, -3226), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -3223), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3225), 0), 100000000, 0, -3224), (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3222); ((("b")), 100000000, 0, -3223)], (0)), 100000000, 0, -3221), 0), 100000000, 0, -3220), 0), 100000000, 0, -3219), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 46)), 0); (("filteri", 4042), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3212); ((("b")), 100000000, 0, -3213)], (0)), 100000000, 0, -3218), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3212)], (0)), 100000000, 0, -3217), (Tag1 (("data"), ((("b")), 100000000, 0, -3213), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3216), 0), 100000000, 0, -3215), 0), 100000000, 0, -3214), (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3212); ((("b")), 100000000, 0, -3213)], (0)), 100000000, 0, -3211), 0), 100000000, 0, -3210), 0), 100000000, 0, -3209), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 47)), 0); (("partition_map", 4043), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3201); ((("b")), 100000000, 0, -3207)], (0)), 100000000, 0, -3208), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -3207), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Either"), "t"), [((("c")), 100000000, 0, -3202); ((("d")), 100000000, 0, -3204)], (0)), 100000000, 0, -3206), 0), 100000000, 0, -3205), (Tag2 ([(Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3201); ((("c")), 100000000, 0, -3202)], (0)), 100000000, 0, -3200); (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3201); ((("d")), 100000000, 0, -3204)], (0)), 100000000, 0, -3203)]), 100000000, 0, -3199), 0), 100000000, 0, -3198), 0), 100000000, 0, -3197), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 48)), 0); (("partition_mapi", 4044), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3187); ((("b")), 100000000, 0, -3194)], (0)), 100000000, 0, -3196), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3187)], (0)), 100000000, 0, -3195), (Tag1 (("data"), ((("b")), 100000000, 0, -3194), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Either"), "t"), [((("c")), 100000000, 0, -3188); ((("d")), 100000000, 0, -3190)], (0)), 100000000, 0, -3193), 0), 100000000, 0, -3192), 0), 100000000, 0, -3191), (Tag2 ([(Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3187); ((("c")), 100000000, 0, -3188)], (0)), 100000000, 0, -3186); (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3187); ((("d")), 100000000, 0, -3190)], (0)), 100000000, 0, -3189)]), 100000000, 0, -3185), 0), 100000000, 0, -3184), 0), 100000000, 0, -3183), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 49)), 0); (("partition_tf", 4045), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3177); ((("b")), 100000000, 0, -3178)], (0)), 100000000, 0, -3182), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -3178), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3181), 0), 100000000, 0, -3180), (Tag2 ([(Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3177); ((("b")), 100000000, 0, -3178)], (0)), 100000000, 0, -3176); (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3177); ((("b")), 100000000, 0, -3178)], (0)), 100000000, 0, -3179)]), 100000000, 0, -3175), 0), 100000000, 0, -3174), 0), 100000000, 0, -3173), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 50)), 0); (("partitioni_tf", 4046), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3165); ((("b")), 100000000, 0, -3166)], (0)), 100000000, 0, -3172), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3165)], (0)), 100000000, 0, -3171), (Tag1 (("data"), ((("b")), 100000000, 0, -3166), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3170), 0), 100000000, 0, -3169), 0), 100000000, 0, -3168), (Tag2 ([(Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3165); ((("b")), 100000000, 0, -3166)], (0)), 100000000, 0, -3164); (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3165); ((("b")), 100000000, 0, -3166)], (0)), 100000000, 0, -3167)]), 100000000, 0, -3163), 0), 100000000, 0, -3162), 0), 100000000, 0, -3161), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 51)), 0); (("find_or_add", 4047), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3159); ((("b")), 100000000, 0, -3155)], (0)), 100000000, 0, -3160), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3159)], (0)), 100000000, 0, -3158), (Tag1 (("default"), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3157), ((("b")), 100000000, 0, -3155), 0), 100000000, 0, -3156), ((("b")), 100000000, 0, -3155), 0), 100000000, 0, -3154), 0), 100000000, 0, -3153), 0), 100000000, 0, -3152), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 52)), 0); (("findi_or_add", 4048), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3149); ((("b")), 100000000, 0, -3146)], (0)), 100000000, 0, -3151), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3149)], (0)), 100000000, 0, -3150), (Tag1 (("default"), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3149)], (0)), 100000000, 0, -3148), ((("b")), 100000000, 0, -3146), 0), 100000000, 0, -3147), ((("b")), 100000000, 0, -3146), 0), 100000000, 0, -3145), 0), 100000000, 0, -3144), 0), 100000000, 0, -3143), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 53)), 0); (("find", 4049), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3141); ((("b")), 100000000, 0, -3139)], (0)), 100000000, 0, -3142), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3141)], (0)), 100000000, 0, -3140), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -3139)], (0)), 100000000, 0, -3138), 0), 100000000, 0, -3137), 0), 100000000, 0, -3136), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 54)), 0); (("find_exn", 4050), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3134); ((("b")), 100000000, 0, -3132)], (0)), 100000000, 0, -3135), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3134)], (0)), 100000000, 0, -3133), ((("b")), 100000000, 0, -3132), 0), 100000000, 0, -3131), 0), 100000000, 0, -3130), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 55)), 0); (("find_and_call", 4051), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3125); ((("b")), 100000000, 0, -3127)], (0)), 100000000, 0, -3129), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3125)], (0)), 100000000, 0, -3128), (Tag1 (("if_found"), (Tag1 (0, ((("b")), 100000000, 0, -3127), ((("c")), 100000000, 0, -3122), 0), 100000000, 0, -3126), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3125)], (0)), 100000000, 0, -3124), ((("c")), 100000000, 0, -3122), 0), 100000000, 0, -3123), ((("c")), 100000000, 0, -3122), 0), 100000000, 0, -3121), 0), 100000000, 0, -3120), 0), 100000000, 0, -3119), 0), 100000000, 0, -3118), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 56)), 0); (("find_and_call1", 4052), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3112); ((("b")), 100000000, 0, -3115)], (0)), 100000000, 0, -3117), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3112)], (0)), 100000000, 0, -3116), (Tag1 (("a"), ((("d")), 100000000, 0, -3110), (Tag1 (("if_found"), (Tag1 (0, ((("b")), 100000000, 0, -3115), (Tag1 (0, ((("d")), 100000000, 0, -3110), ((("c")), 100000000, 0, -3107), 0), 100000000, 0, -3114), 0), 100000000, 0, -3113), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3112)], (0)), 100000000, 0, -3111), (Tag1 (0, ((("d")), 100000000, 0, -3110), ((("c")), 100000000, 0, -3107), 0), 100000000, 0, -3109), 0), 100000000, 0, -3108), ((("c")), 100000000, 0, -3107), 0), 100000000, 0, -3106), 0), 100000000, 0, -3105), 0), 100000000, 0, -3104), 0), 100000000, 0, -3103), 0), 100000000, 0, -3102), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 57)), 0); (("find_and_call2", 4053), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3095); ((("b")), 100000000, 0, -3099)], (0)), 100000000, 0, -3101), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3095)], (0)), 100000000, 0, -3100), (Tag1 (("a"), ((("d")), 100000000, 0, -3093), (Tag1 (("b"), ((("e")), 100000000, 0, -3092), (Tag1 (("if_found"), (Tag1 (0, ((("b")), 100000000, 0, -3099), (Tag1 (0, ((("d")), 100000000, 0, -3093), (Tag1 (0, ((("e")), 100000000, 0, -3092), ((("c")), 100000000, 0, -3088), 0), 100000000, 0, -3098), 0), 100000000, 0, -3097), 0), 100000000, 0, -3096), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3095)], (0)), 100000000, 0, -3094), (Tag1 (0, ((("d")), 100000000, 0, -3093), (Tag1 (0, ((("e")), 100000000, 0, -3092), ((("c")), 100000000, 0, -3088), 0), 100000000, 0, -3091), 0), 100000000, 0, -3090), 0), 100000000, 0, -3089), ((("c")), 100000000, 0, -3088), 0), 100000000, 0, -3087), 0), 100000000, 0, -3086), 0), 100000000, 0, -3085), 0), 100000000, 0, -3084), 0), 100000000, 0, -3083), 0), 100000000, 0, -3082), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 58)), 0); (("findi_and_call", 4054), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3075); ((("b")), 100000000, 0, -3078)], (0)), 100000000, 0, -3081), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3075)], (0)), 100000000, 0, -3080), (Tag1 (("if_found"), (Tag1 (("key"), (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3075)], (0)), 100000000, 0, -3079), (Tag1 (("data"), ((("b")), 100000000, 0, -3078), ((("c")), 100000000, 0, -3072), 0), 100000000, 0, -3077), 0), 100000000, 0, -3076), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3075)], (0)), 100000000, 0, -3074), ((("c")), 100000000, 0, -3072), 0), 100000000, 0, -3073), ((("c")), 100000000, 0, -3072), 0), 100000000, 0, -3071), 0), 100000000, 0, -3070), 0), 100000000, 0, -3069), 0), 100000000, 0, -3068), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 59)), 0); (("findi_and_call1", 4055), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3060); ((("b")), 100000000, 0, -3064)], (0)), 100000000, 0, -3067), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3060)], (0)), 100000000, 0, -3066), (Tag1 (("a"), ((("d")), 100000000, 0, -3058), (Tag1 (("if_found"), (Tag1 (("key"), (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3060)], (0)), 100000000, 0, -3065), (Tag1 (("data"), ((("b")), 100000000, 0, -3064), (Tag1 (0, ((("d")), 100000000, 0, -3058), ((("c")), 100000000, 0, -3055), 0), 100000000, 0, -3063), 0), 100000000, 0, -3062), 0), 100000000, 0, -3061), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3060)], (0)), 100000000, 0, -3059), (Tag1 (0, ((("d")), 100000000, 0, -3058), ((("c")), 100000000, 0, -3055), 0), 100000000, 0, -3057), 0), 100000000, 0, -3056), ((("c")), 100000000, 0, -3055), 0), 100000000, 0, -3054), 0), 100000000, 0, -3053), 0), 100000000, 0, -3052), 0), 100000000, 0, -3051), 0), 100000000, 0, -3050), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 60)), 0); (("findi_and_call2", 4056), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3041); ((("b")), 100000000, 0, -3046)], (0)), 100000000, 0, -3049), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3041)], (0)), 100000000, 0, -3048), (Tag1 (("a"), ((("d")), 100000000, 0, -3039), (Tag1 (("b"), ((("e")), 100000000, 0, -3038), (Tag1 (("if_found"), (Tag1 (("key"), (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3041)], (0)), 100000000, 0, -3047), (Tag1 (("data"), ((("b")), 100000000, 0, -3046), (Tag1 (0, ((("d")), 100000000, 0, -3039), (Tag1 (0, ((("e")), 100000000, 0, -3038), ((("c")), 100000000, 0, -3034), 0), 100000000, 0, -3045), 0), 100000000, 0, -3044), 0), 100000000, 0, -3043), 0), 100000000, 0, -3042), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3041)], (0)), 100000000, 0, -3040), (Tag1 (0, ((("d")), 100000000, 0, -3039), (Tag1 (0, ((("e")), 100000000, 0, -3038), ((("c")), 100000000, 0, -3034), 0), 100000000, 0, -3037), 0), 100000000, 0, -3036), 0), 100000000, 0, -3035), ((("c")), 100000000, 0, -3034), 0), 100000000, 0, -3033), 0), 100000000, 0, -3032), 0), 100000000, 0, -3031), 0), 100000000, 0, -3030), 0), 100000000, 0, -3029), 0), 100000000, 0, -3028), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 61)), 0); (("find_and_remove", 4057), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -3026); ((("b")), 100000000, 0, -3024)], (0)), 100000000, 0, -3027), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -3026)], (0)), 100000000, 0, -3025), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -3024)], (0)), 100000000, 0, -3023), 0), 100000000, 0, -3022), 0), 100000000, 0, -3021), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 62)), 0); (("merge", 4058), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("k")), 100000000, 0, -3008); ((("a")), 100000000, 0, -3016)], (0)), 100000000, 0, -3020), (Tag1 (0, (Tag3 ((("t", 3995)), [((("k")), 100000000, 0, -3008); ((("b")), 100000000, 0, -3015)], (0)), 100000000, 0, -3019), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4008)), [((("k")), 100000000, 0, -3008)], (0)), 100000000, 0, -3018), (Tag1 (0, (Tag8 (([("Both", (((Tag2 ([((("a")), 100000000, 0, -3016); ((("b")), 100000000, 0, -3015)]), 100000000, 0, -3017)))); ("Left", ((((("a")), 100000000, 0, -3016)))); ("Right", ((((("b")), 100000000, 0, -3015))))], (0, 100000000, 0, -3014), 1, 0, 0)), 100000000, 0, -3013), (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -3009)], (0)), 100000000, 0, -3012), 0), 100000000, 0, -3011), 0), 100000000, 0, -3010), (Tag3 ((("t", 3995)), [((("k")), 100000000, 0, -3008); ((("c")), 100000000, 0, -3009)], (0)), 100000000, 0, -3007), 0), 100000000, 0, -3006), 0), 100000000, 0, -3005), 0), 100000000, 0, -3004), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 63)), 0); (("merge_into", 4059), ((Tag1 (("src"), (Tag3 ((("t", 3995)), [((("k")), 100000000, 0, -3001); ((("a")), 100000000, 0, -2999)], (0)), 100000000, 0, -3003), (Tag1 (("dst"), (Tag3 ((("t", 3995)), [((("k")), 100000000, 0, -3001); ((("b")), 100000000, 0, -2997)], (0)), 100000000, 0, -3002), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4008)), [((("k")), 100000000, 0, -3001)], (0)), 100000000, 0, -3000), (Tag1 (0, ((("a")), 100000000, 0, -2999), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -2997)], (0)), 100000000, 0, -2998), (Tag3 (Tag1 ((("Merge_into_action", 3687)), "t"), [((("b")), 100000000, 0, -2997)], (0)), 100000000, 0, -2996), 0), 100000000, 0, -2995), 0), 100000000, 0, -2994), 0), 100000000, 0, -2993), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2992), 0), 100000000, 0, -2991), 0), 100000000, 0, -2990), 0), 100000000, 0, -2989), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 64)), 0); (("keys", 4060), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -2986); ((0), 100000000, 0, -2988)], (0)), 100000000, 0, -2987), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -2986)], (0)), 100000000, 0, -2985)], (0)), 100000000, 0, -2984), 0), 100000000, 0, -2983), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 65)), 0); (("data", 4061), ((Tag1 (0, (Tag3 ((("t", 3995)), [((0), 100000000, 0, -2982); ((("b")), 100000000, 0, -2980)], (0)), 100000000, 0, -2981), (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -2980)], (0)), 100000000, 0, -2979), 0), 100000000, 0, -2978), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 66)), 0); (("filter_keys_inplace", 4062), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -2975); ((0), 100000000, 0, -2977)], (0)), 100000000, 0, -2976), (Tag1 (("f"), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -2975)], (0)), 100000000, 0, -2974), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2973), 0), 100000000, 0, -2972), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2971), 0), 100000000, 0, -2970), 0), 100000000, 0, -2969), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 67)), 0); (("filter_inplace", 4063), ((Tag1 (0, (Tag3 ((("t", 3995)), [((0), 100000000, 0, -2968); ((("b")), 100000000, 0, -2966)], (0)), 100000000, 0, -2967), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -2966), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2965), 0), 100000000, 0, -2964), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2963), 0), 100000000, 0, -2962), 0), 100000000, 0, -2961), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 68)), 0); (("filteri_inplace", 4064), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -2959); ((("b")), 100000000, 0, -2957)], (0)), 100000000, 0, -2960), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -2959)], (0)), 100000000, 0, -2958), (Tag1 (("data"), ((("b")), 100000000, 0, -2957), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2956), 0), 100000000, 0, -2955), 0), 100000000, 0, -2954), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2953), 0), 100000000, 0, -2952), 0), 100000000, 0, -2951), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 69)), 0); (("map_inplace", 4065), ((Tag1 (0, (Tag3 ((("t", 3995)), [((0), 100000000, 0, -2950); ((("b")), 100000000, 0, -2948)], (0)), 100000000, 0, -2949), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -2948), ((("b")), 100000000, 0, -2948), 0), 100000000, 0, -2947), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2946), 0), 100000000, 0, -2945), 0), 100000000, 0, -2944), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 70)), 0); (("mapi_inplace", 4066), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -2942); ((("b")), 100000000, 0, -2940)], (0)), 100000000, 0, -2943), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -2942)], (0)), 100000000, 0, -2941), (Tag1 (("data"), ((("b")), 100000000, 0, -2940), ((("b")), 100000000, 0, -2940), 0), 100000000, 0, -2939), 0), 100000000, 0, -2938), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2937), 0), 100000000, 0, -2936), 0), 100000000, 0, -2935), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 71)), 0); (("filter_map_inplace", 4067), ((Tag1 (0, (Tag3 ((("t", 3995)), [((0), 100000000, 0, -2934); ((("b")), 100000000, 0, -2932)], (0)), 100000000, 0, -2933), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -2932), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -2932)], (0)), 100000000, 0, -2931), 0), 100000000, 0, -2930), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2929), 0), 100000000, 0, -2928), 0), 100000000, 0, -2927), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 72)), 0); (("filter_mapi_inplace", 4068), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -2925); ((("b")), 100000000, 0, -2923)], (0)), 100000000, 0, -2926), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -2925)], (0)), 100000000, 0, -2924), (Tag1 (("data"), ((("b")), 100000000, 0, -2923), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -2923)], (0)), 100000000, 0, -2922), 0), 100000000, 0, -2921), 0), 100000000, 0, -2920), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2919), 0), 100000000, 0, -2918), 0), 100000000, 0, -2917), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 73)), 0); (("equal", 4069), ((Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -2912), (Tag1 (0, ((("b")), 100000000, 0, -2912), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2916), 0), 100000000, 0, -2915), 0), 100000000, 0, -2914), (Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -2911); ((("b")), 100000000, 0, -2912)], (0)), 100000000, 0, -2913), (Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -2911); ((("b")), 100000000, 0, -2912)], (0)), 100000000, 0, -2910), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2909), 0), 100000000, 0, -2908), 0), 100000000, 0, -2907), 0), 100000000, 0, -2906), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 74)), 0); (("similar", 4070), ((Tag1 (0, (Tag1 (0, ((("b1")), 100000000, 0, -2902), (Tag1 (0, ((("b2")), 100000000, 0, -2900), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2905), 0), 100000000, 0, -2904), 0), 100000000, 0, -2903), (Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -2899); ((("b1")), 100000000, 0, -2902)], (0)), 100000000, 0, -2901), (Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -2899); ((("b2")), 100000000, 0, -2900)], (0)), 100000000, 0, -2898), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2897), 0), 100000000, 0, -2896), 0), 100000000, 0, -2895), 0), 100000000, 0, -2894), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 75)), 0); (("to_alist", 4071), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -2891); ((("b")), 100000000, 0, -2892)], (0)), 100000000, 0, -2893), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -2891)], (0)), 100000000, 0, -2890); ((("b")), 100000000, 0, -2892)]), 100000000, 0, -2889)], (0)), 100000000, 0, -2888), 0), 100000000, 0, -2887), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 76)), 0); (("incr", 4072), ((Tag1 (Tag1 ("by"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2886)], (0)), 100000000, 0, -2885), (Tag1 (Tag1 ("remove_if_zero"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2884)], (0)), 100000000, 0, -2883), (Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -2880); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2882)], (0)), 100000000, 0, -2881), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -2880)], (0)), 100000000, 0, -2879), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2878), 0), 100000000, 0, -2877), 0), 100000000, 0, -2876), 0), 100000000, 0, -2875), 0), 100000000, 0, -2874), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 77)), 0); (("decr", 4073), ((Tag1 (Tag1 ("by"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2873)], (0)), 100000000, 0, -2872), (Tag1 (Tag1 ("remove_if_zero"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2871)], (0)), 100000000, 0, -2870), (Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -2867); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2869)], (0)), 100000000, 0, -2868), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -2867)], (0)), 100000000, 0, -2866), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2865), 0), 100000000, 0, -2864), 0), 100000000, 0, -2863), 0), 100000000, 0, -2862), 0), 100000000, 0, -2861), 0, (("src/hashtbl_intf.ml", 648, 22223, 22233), ("src/hashtbl_intf.ml", 648, 22223, 22277), 0), 0, Tag1 ("Base__Hashtbl_intf", 78)), 0); (("add_multi", 4074), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -2858); (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -2856)], (0)), 100000000, 0, -2860)], (0)), 100000000, 0, -2859), (Tag1 (("key"), (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -2858)], (0)), 100000000, 0, -2857), (Tag1 (("data"), ((("b")), 100000000, 0, -2856), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2855), 0), 100000000, 0, -2854), 0), 100000000, 0, -2853), 0), 100000000, 0, -2852), 0, (("src/hashtbl_intf.ml", 652, 22319, 22329), ("src/hashtbl_intf.ml", 652, 22319, 22396), 0), 0, Tag1 ("Base__Hashtbl_intf", 82)), 0); (("remove_multi", 4075), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -2848); (Tag3 ((Tag3 ("list", 9)), [((0), 100000000, 0, -2851)], (0)), 100000000, 0, -2850)], (0)), 100000000, 0, -2849), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -2848)], (0)), 100000000, 0, -2847), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2846), 0), 100000000, 0, -2845), 0), 100000000, 0, -2844), 0, (("src/hashtbl_intf.ml", 652, 22319, 22329), ("src/hashtbl_intf.ml", 652, 22319, 22396), 0), 0, Tag1 ("Base__Hashtbl_intf", 83)), 0); (("find_multi", 4076), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -2841); (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -2839)], (0)), 100000000, 0, -2843)], (0)), 100000000, 0, -2842), (Tag1 (0, (Tag3 ((("key", 4008)), [((("a")), 100000000, 0, -2841)], (0)), 100000000, 0, -2840), (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -2839)], (0)), 100000000, 0, -2838), 0), 100000000, 0, -2837), 0), 100000000, 0, -2836), 0, (("src/hashtbl_intf.ml", 652, 22319, 22329), ("src/hashtbl_intf.ml", 652, 22319, 22396), 0), 0, Tag1 ("Base__Hashtbl_intf", 84)), 0); (("hashable_s", 4077), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("key")), 100000000, 0, -2833); ((0), 100000000, 0, -2835)], (0)), 100000000, 0, -2834), (Tag3 (Tag1 ((("Key", 3686)), "t"), [((("key")), 100000000, 0, -2833)], (0)), 100000000, 0, -2832), 0), 100000000, 0, -2831), 0, (("src/hashtbl_intf.ml", 655, 22415, 22417), ("src/hashtbl_intf.ml", 655, 22415, 22459), 0), 0, Tag1 ("Base__Hashtbl_intf", 125)), 0); (("invariant", 4078), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Invariant_intf")), "inv"), [((("a")), 100000000, 0, -2827)], (0)), 100000000, 0, -2830), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Invariant_intf")), "inv"), [((("b")), 100000000, 0, -2828)], (0)), 100000000, 0, -2829), (Tag3 (Tag1 ((Tag2 ("Base__Invariant_intf")), "inv"), [(Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -2827); ((("b")), 100000000, 0, -2828)], (0)), 100000000, 0, -2826)], (0)), 100000000, 0, -2825), 0), 100000000, 0, -2824), 0), 100000000, 0, -2823), 0, (("src/hashtbl_intf.ml", 657, 22461, 22471), ("src/hashtbl_intf.ml", 657, 22461, 22518), 0), 0, Tag1 ("Base__Invariant_intf", 9)), 0); Tag4 (("Accessors", 4079), ((((("Accessors", 3688)))), 0, (("src/hashtbl_intf.ml", 820, 26619, 26621), ("src/hashtbl_intf.ml", 820, 26619, 26654), 0), Tag1 ("Base__Hashtbl_intf", 162)), 0); Tag4 (("Creators", 4080), ((((("Creators", 3693)))), 0, (("src/hashtbl_intf.ml", 821, 26655, 26657), ("src/hashtbl_intf.ml", 821, 26655, 26688), 0), Tag1 ("Base__Hashtbl_intf", 163)), 0); Tag4 (("Multi", 4081), ((((("Multi", 3689)))), 0, (("src/hashtbl_intf.ml", 822, 26689, 26691), ("src/hashtbl_intf.ml", 822, 26689, 26716), 0), Tag1 ("Base__Hashtbl_intf", 164)), 0); Tag4 (("S_poly", 4082), ((((("S_poly", 3695)))), 0, (("src/hashtbl_intf.ml", 823, 26717, 26719), ("src/hashtbl_intf.ml", 823, 26717, 26746), 0), Tag1 ("Base__Hashtbl_intf", 165)), 0); Tag4 (("S_without_submodules", 4083), ((((("S_without_submodules", 3694)))), 0, (("src/hashtbl_intf.ml", 824, 26747, 26749), ("src/hashtbl_intf.ml", 824, 26747, 26804), 0), Tag1 ("Base__Hashtbl_intf", 166)), 0); Tag4 (("For_deriving", 4084), ((((("For_deriving", 3696)))), 0, (("src/hashtbl_intf.ml", 825, 26805, 26807), ("src/hashtbl_intf.ml", 825, 26805, 26846), 0), Tag1 ("Base__Hashtbl_intf", 167)), 0); Tag3 (("Key", 4085), 1, (Tag3 ((("Key", 3686))), 0, (("src/hashtbl_intf.ml", 827, 26848, 26850), ("src/hashtbl_intf.ml", 827, 26848, 26866), 0), Tag1 ("Base__Hashtbl_intf", 168)), 0, 0); Tag3 (("Merge_into_action", 4086), 1, (Tag3 ((("Merge_into_action", 3687))), 0, (("src/hashtbl_intf.ml", 828, 26867, 26869), ("src/hashtbl_intf.ml", 828, 26867, 26913), 0), Tag1 ("Base__Hashtbl_intf", 169)), 0, 0); Tag1 (("create_options", 4087), ([((("key")), 100000000, 0, -2820); ((("data")), 100000000, 0, -2821); ((("z")), 100000000, 0, -2822)], 3, 0, 1, ((Tag3 ((("create_options", 3690)), [((("key")), 100000000, 0, -2820); ((("data")), 100000000, 0, -2821); ((("z")), 100000000, 0, -2822)], (0)), 100000000, 0, -2819)), [63; 0; 25], [0; 0; 0], 0, 0, (("src/hashtbl_intf.ml", 830, 26915, 26917), ("src/hashtbl_intf.ml", 830, 26915, 26996), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 170)), 0, 0); Tag3 (("Creators", 4088), 0, (Tag2 (((("Key", 4101)), Tag1 ([Tag1 (("t", 4102), ([((("a")), 100000000, 0, -3700)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/hashtbl_intf.ml", 833, 27027, 27033), ("src/hashtbl_intf.ml", 833, 27027, 27042), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 171)), 1, 0); (("hashable", 4103), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Hashable"), "t"), [(Tag3 ((("t", 4102)), [((("a")), 100000000, 0, -3699)], (0)), 100000000, 0, -3698)], (0)), 100000000, 0, -3697), 0, (("src/hashtbl_intf.ml", 835, 27044, 27050), ("src/hashtbl_intf.ml", 835, 27044, 27080), 0), 0, Tag1 ("Base__Hashtbl_intf", 172)), 0)])), Tag1 ([Tag1 (("t_", 4104), ([((("a")), 100000000, 0, -3845); ((("b")), 100000000, 0, -3846)], 2, 0, 1, ((Tag3 ((("t", 3995)), [(Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3845)], (0)), 100000000, 0, -3844); ((("b")), 100000000, 0, -3846)], (0)), 100000000, 0, -3843)), [7; 15], [2; 2], 0, 0, (("src/hashtbl_intf.ml", 837, 27096, 27100), ("src/hashtbl_intf.ml", 837, 27096, 27135), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 174)), 1, 0); (("t_of_sexp", 4105), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -3842), (Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3835)], (0)), 100000000, 0, -3841), 0), 100000000, 0, -3840), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -3839), ((("b")), 100000000, 0, -3836), 0), 100000000, 0, -3838), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -3837), (Tag3 ((("t_", 4104)), [((("a")), 100000000, 0, -3835); ((("b")), 100000000, 0, -3836)], (0)), 100000000, 0, -3834), 0), 100000000, 0, -3833), 0), 100000000, 0, -3832), 0), 100000000, 0, -3831), 0, (("src/hashtbl_intf.ml", 839, 27137, 27141), ("src/hashtbl_intf.ml", 839, 27137, 27220), 0), 0, Tag1 ("Base__Hashtbl_intf", 175)), 0); (("create", 4106), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3826)], (0)), 100000000, 0, -3825); ((("b")), 100000000, 0, -3827); (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3830), (Tag3 ((("t_", 4104)), [((("a")), 100000000, 0, -3826); ((("b")), 100000000, 0, -3827)], (0)), 100000000, 0, -3829), 0), 100000000, 0, -3828)], (0)), 100000000, 0, -3824), 0, (("src/hashtbl_intf.ml", 842, 27234, 27240), ("src/hashtbl_intf.ml", 846, 27386, 27453), 0), 0, Tag1 ("Base__Hashtbl_intf", 91)), 0); (("of_alist", 4107), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3814)], (0)), 100000000, 0, -3813); ((("b")), 100000000, 0, -3815); (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3814)], (0)), 100000000, 0, -3823); ((("b")), 100000000, 0, -3815)]), 100000000, 0, -3822)], (0)), 100000000, 0, -3821), (Tag8 (([("Duplicate_key", (((Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3814)], (0)), 100000000, 0, -3820)))); ("Ok", (((Tag3 ((("t_", 4104)), [((("a")), 100000000, 0, -3814); ((("b")), 100000000, 0, -3815)], (0)), 100000000, 0, -3819))))], (0, 100000000, 0, -3818), 1, 0, 0)), 100000000, 0, -3817), 0), 100000000, 0, -3816)], (0)), 100000000, 0, -3812), 0, (("src/hashtbl_intf.ml", 842, 27234, 27240), ("src/hashtbl_intf.ml", 846, 27386, 27453), 0), 0, Tag1 ("Base__Hashtbl_intf", 92)), 0); (("of_alist_report_all_dups", 4108), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3801)], (0)), 100000000, 0, -3800); ((("b")), 100000000, 0, -3802); (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3801)], (0)), 100000000, 0, -3811); ((("b")), 100000000, 0, -3802)]), 100000000, 0, -3810)], (0)), 100000000, 0, -3809), (Tag8 (([("Duplicate_keys", (((Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3801)], (0)), 100000000, 0, -3808)], (0)), 100000000, 0, -3807)))); ("Ok", (((Tag3 ((("t_", 4104)), [((("a")), 100000000, 0, -3801); ((("b")), 100000000, 0, -3802)], (0)), 100000000, 0, -3806))))], (0, 100000000, 0, -3805), 1, 0, 0)), 100000000, 0, -3804), 0), 100000000, 0, -3803)], (0)), 100000000, 0, -3799), 0, (("src/hashtbl_intf.ml", 842, 27234, 27240), ("src/hashtbl_intf.ml", 846, 27386, 27453), 0), 0, Tag1 ("Base__Hashtbl_intf", 93)), 0); (("of_alist_or_error", 4109), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3791)], (0)), 100000000, 0, -3790); ((("b")), 100000000, 0, -3792); (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3791)], (0)), 100000000, 0, -3798); ((("b")), 100000000, 0, -3792)]), 100000000, 0, -3797)], (0)), 100000000, 0, -3796), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Or_error"), "t"), [(Tag3 ((("t_", 4104)), [((("a")), 100000000, 0, -3791); ((("b")), 100000000, 0, -3792)], (0)), 100000000, 0, -3795)], (0)), 100000000, 0, -3794), 0), 100000000, 0, -3793)], (0)), 100000000, 0, -3789), 0, (("src/hashtbl_intf.ml", 842, 27234, 27240), ("src/hashtbl_intf.ml", 846, 27386, 27453), 0), 0, Tag1 ("Base__Hashtbl_intf", 94)), 0); (("of_alist_exn", 4110), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3782)], (0)), 100000000, 0, -3781); ((("b")), 100000000, 0, -3783); (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3782)], (0)), 100000000, 0, -3788); ((("b")), 100000000, 0, -3783)]), 100000000, 0, -3787)], (0)), 100000000, 0, -3786), (Tag3 ((("t_", 4104)), [((("a")), 100000000, 0, -3782); ((("b")), 100000000, 0, -3783)], (0)), 100000000, 0, -3785), 0), 100000000, 0, -3784)], (0)), 100000000, 0, -3780), 0, (("src/hashtbl_intf.ml", 842, 27234, 27240), ("src/hashtbl_intf.ml", 846, 27386, 27453), 0), 0, Tag1 ("Base__Hashtbl_intf", 95)), 0); (("of_alist_multi", 4111), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3771)], (0)), 100000000, 0, -3770); (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -3773)], (0)), 100000000, 0, -3772); (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3771)], (0)), 100000000, 0, -3779); ((("b")), 100000000, 0, -3773)]), 100000000, 0, -3778)], (0)), 100000000, 0, -3777), (Tag3 ((("t_", 4104)), [((("a")), 100000000, 0, -3771); (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -3773)], (0)), 100000000, 0, -3776)], (0)), 100000000, 0, -3775), 0), 100000000, 0, -3774)], (0)), 100000000, 0, -3769), 0, (("src/hashtbl_intf.ml", 842, 27234, 27240), ("src/hashtbl_intf.ml", 846, 27386, 27453), 0), 0, Tag1 ("Base__Hashtbl_intf", 96)), 0); (("create_mapped", 4112), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3754)], (0)), 100000000, 0, -3753); ((("b")), 100000000, 0, -3755); (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -3765), (Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3754)], (0)), 100000000, 0, -3768), 0), 100000000, 0, -3767), (Tag1 (("get_data"), (Tag1 (0, ((("r")), 100000000, 0, -3765), ((("b")), 100000000, 0, -3755), 0), 100000000, 0, -3766), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -3765)], (0)), 100000000, 0, -3764), (Tag8 (([("Duplicate_keys", (((Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3754)], (0)), 100000000, 0, -3763)], (0)), 100000000, 0, -3762)))); ("Ok", (((Tag3 ((("t_", 4104)), [((("a")), 100000000, 0, -3754); ((("b")), 100000000, 0, -3755)], (0)), 100000000, 0, -3761))))], (0, 100000000, 0, -3760), 1, 0, 0)), 100000000, 0, -3759), 0), 100000000, 0, -3758), 0), 100000000, 0, -3757), 0), 100000000, 0, -3756)], (0)), 100000000, 0, -3752), 0, (("src/hashtbl_intf.ml", 842, 27234, 27240), ("src/hashtbl_intf.ml", 846, 27386, 27453), 0), 0, Tag1 ("Base__Hashtbl_intf", 97)), 0); (("create_with_key", 4113), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3740)], (0)), 100000000, 0, -3739); ((("r")), 100000000, 0, -3741); (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -3741), (Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3740)], (0)), 100000000, 0, -3751), 0), 100000000, 0, -3750), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -3741)], (0)), 100000000, 0, -3749), (Tag8 (([("Duplicate_keys", (((Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3740)], (0)), 100000000, 0, -3748)], (0)), 100000000, 0, -3747)))); ("Ok", (((Tag3 ((("t_", 4104)), [((("a")), 100000000, 0, -3740); ((("r")), 100000000, 0, -3741)], (0)), 100000000, 0, -3746))))], (0, 100000000, 0, -3745), 1, 0, 0)), 100000000, 0, -3744), 0), 100000000, 0, -3743), 0), 100000000, 0, -3742)], (0)), 100000000, 0, -3738), 0, (("src/hashtbl_intf.ml", 842, 27234, 27240), ("src/hashtbl_intf.ml", 846, 27386, 27453), 0), 0, Tag1 ("Base__Hashtbl_intf", 98)), 0); (("create_with_key_or_error", 4114), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3729)], (0)), 100000000, 0, -3728); ((("r")), 100000000, 0, -3730); (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -3730), (Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3729)], (0)), 100000000, 0, -3737), 0), 100000000, 0, -3736), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -3730)], (0)), 100000000, 0, -3735), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Or_error"), "t"), [(Tag3 ((("t_", 4104)), [((("a")), 100000000, 0, -3729); ((("r")), 100000000, 0, -3730)], (0)), 100000000, 0, -3734)], (0)), 100000000, 0, -3733), 0), 100000000, 0, -3732), 0), 100000000, 0, -3731)], (0)), 100000000, 0, -3727), 0, (("src/hashtbl_intf.ml", 842, 27234, 27240), ("src/hashtbl_intf.ml", 846, 27386, 27453), 0), 0, Tag1 ("Base__Hashtbl_intf", 99)), 0); (("create_with_key_exn", 4115), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3719)], (0)), 100000000, 0, -3718); ((("r")), 100000000, 0, -3720); (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -3720), (Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3719)], (0)), 100000000, 0, -3726), 0), 100000000, 0, -3725), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -3720)], (0)), 100000000, 0, -3724), (Tag3 ((("t_", 4104)), [((("a")), 100000000, 0, -3719); ((("r")), 100000000, 0, -3720)], (0)), 100000000, 0, -3723), 0), 100000000, 0, -3722), 0), 100000000, 0, -3721)], (0)), 100000000, 0, -3717), 0, (("src/hashtbl_intf.ml", 842, 27234, 27240), ("src/hashtbl_intf.ml", 846, 27386, 27453), 0), 0, Tag1 ("Base__Hashtbl_intf", 100)), 0); (("group", 4116), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3703)], (0)), 100000000, 0, -3702); ((("b")), 100000000, 0, -3704); (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -3711), (Tag3 (Tag1 ((("Key", 4101)), "t"), [((("a")), 100000000, 0, -3703)], (0)), 100000000, 0, -3716), 0), 100000000, 0, -3715), (Tag1 (("get_data"), (Tag1 (0, ((("r")), 100000000, 0, -3711), ((("b")), 100000000, 0, -3704), 0), 100000000, 0, -3714), (Tag1 (("combine"), (Tag1 (0, ((("b")), 100000000, 0, -3704), (Tag1 (0, ((("b")), 100000000, 0, -3704), ((("b")), 100000000, 0, -3704), 0), 100000000, 0, -3713), 0), 100000000, 0, -3712), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -3711)], (0)), 100000000, 0, -3710), (Tag3 ((("t_", 4104)), [((("a")), 100000000, 0, -3703); ((("b")), 100000000, 0, -3704)], (0)), 100000000, 0, -3709), 0), 100000000, 0, -3708), 0), 100000000, 0, -3707), 0), 100000000, 0, -3706), 0), 100000000, 0, -3705)], (0)), 100000000, 0, -3701), 0, (("src/hashtbl_intf.ml", 842, 27234, 27240), ("src/hashtbl_intf.ml", 846, 27386, 27453), 0), 0, Tag1 ("Base__Hashtbl_intf", 101)), 0)])), 0, (("src/hashtbl_intf.ml", 832, 26998, 27000), ("src/hashtbl_intf.ml", 847, 27454, 27459), 0), Tag1 ("Base__Hashtbl_intf", 179)), 0, 0); Tag3 (("Poly", 4089), 0, (Tag1 ([Tag1 (("t", 4117), ([((("a")), 100000000, 0, -4677); ((("b")), 100000000, 0, -4678)], 2, 0, 1, ((Tag3 ((("t", 3995)), [((("a")), 100000000, 0, -4677); ((("b")), 100000000, 0, -4678)], (0)), 100000000, 0, -4676)), [15; 15], [2; 2], 0, 0, (("src/hashtbl_intf.ml", 849, 27461, 27489), ("src/hashtbl_intf.ml", 849, 27461, 27517), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 180)), 1, 0); (("t_of_sexp", 4118), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -4675), ((("a")), 100000000, 0, -4669), 0), 100000000, 0, -4674), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -4673), ((("b")), 100000000, 0, -4670), 0), 100000000, 0, -4672), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -4671), (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4669); ((("b")), 100000000, 0, -4670)], (0)), 100000000, 0, -4668), 0), 100000000, 0, -4667), 0), 100000000, 0, -4666), 0), 100000000, 0, -4665), 0, (("src/hashtbl_intf.ml", 663, 22607, 22617), ("src/hashtbl_intf.ml", 663, 22607, 22672), 0), 0, Tag1 ("Sexplib0__Sexpable", 9)), 0); (("sexp_of_t", 4119), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -4659), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -4664), 0), 100000000, 0, -4663), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -4660), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -4662), 0), 100000000, 0, -4661), (Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4659); ((("b")), 100000000, 0, -4660)], (0)), 100000000, 0, -4658), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -4657), 0), 100000000, 0, -4656), 0), 100000000, 0, -4655), 0), 100000000, 0, -4654), 0, (("src/hashtbl_intf.ml", 663, 22607, 22617), ("src/hashtbl_intf.ml", 663, 22607, 22672), 0), 0, Tag1 ("Sexplib0__Sexpable", 10)), 0); (("t_sexp_grammar", 4120), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [((("a")), 100000000, 0, -4650)], (0)), 100000000, 0, -4653), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [((("b")), 100000000, 0, -4651)], (0)), 100000000, 0, -4652), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [(Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4650); ((("b")), 100000000, 0, -4651)], (0)), 100000000, 0, -4649)], (0)), 100000000, 0, -4648), 0), 100000000, 0, -4647), 0), 100000000, 0, -4646), 0, (("src/hashtbl_intf.ml", 665, 22674, 22676), ("src/hashtbl_intf.ml", 668, 22763, 22804), 0), 0, Tag1 ("Base__Hashtbl_intf", 131)), 0); (("hashable", 4121), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Hashable"), "t"), [((("a")), 100000000, 0, -4645)], (0)), 100000000, 0, -4644), 0, (("src/hashtbl_intf.ml", 672, 22818, 22820), ("src/hashtbl_intf.ml", 672, 22818, 22848), 0), 0, Tag1 ("Base__Hashtbl_intf", 132)), 0); (("invariant", 4122), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Invariant_intf")), "inv"), [((("a")), 100000000, 0, -4640)], (0)), 100000000, 0, -4643), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Invariant_intf")), "inv"), [((("b")), 100000000, 0, -4641)], (0)), 100000000, 0, -4642), (Tag3 (Tag1 ((Tag2 ("Base__Invariant_intf")), "inv"), [(Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4640); ((("b")), 100000000, 0, -4641)], (0)), 100000000, 0, -4639)], (0)), 100000000, 0, -4638), 0), 100000000, 0, -4637), 0), 100000000, 0, -4636), 0, (("src/hashtbl_intf.ml", 674, 22850, 22860), ("src/hashtbl_intf.ml", 674, 22850, 22907), 0), 0, Tag1 ("Base__Invariant_intf", 9)), 0); Tag1 (("key", 4123), ([((("a")), 100000000, 0, -4635)], 1, 0, 1, (((("a")), 100000000, 0, -4635)), [25], [1], 0, 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 135)), 1, 0); (("create", 4124), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4630)], (0)), 100000000, 0, -4629); ((("b")), 100000000, 0, -4631); (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4634), (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4630); ((("b")), 100000000, 0, -4631)], (0)), 100000000, 0, -4633), 0), 100000000, 0, -4632)], (0)), 100000000, 0, -4628), 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, Tag1 ("Base__Hashtbl_intf", 91)), 0); (("of_alist", 4125), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4618)], (0)), 100000000, 0, -4617); ((("b")), 100000000, 0, -4619); (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4618)], (0)), 100000000, 0, -4627); ((("b")), 100000000, 0, -4619)]), 100000000, 0, -4626)], (0)), 100000000, 0, -4625), (Tag8 (([("Duplicate_key", (((Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4618)], (0)), 100000000, 0, -4624)))); ("Ok", (((Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4618); ((("b")), 100000000, 0, -4619)], (0)), 100000000, 0, -4623))))], (0, 100000000, 0, -4622), 1, 0, 0)), 100000000, 0, -4621), 0), 100000000, 0, -4620)], (0)), 100000000, 0, -4616), 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, Tag1 ("Base__Hashtbl_intf", 92)), 0); (("of_alist_report_all_dups", 4126), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4605)], (0)), 100000000, 0, -4604); ((("b")), 100000000, 0, -4606); (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4605)], (0)), 100000000, 0, -4615); ((("b")), 100000000, 0, -4606)]), 100000000, 0, -4614)], (0)), 100000000, 0, -4613), (Tag8 (([("Duplicate_keys", (((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4605)], (0)), 100000000, 0, -4612)], (0)), 100000000, 0, -4611)))); ("Ok", (((Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4605); ((("b")), 100000000, 0, -4606)], (0)), 100000000, 0, -4610))))], (0, 100000000, 0, -4609), 1, 0, 0)), 100000000, 0, -4608), 0), 100000000, 0, -4607)], (0)), 100000000, 0, -4603), 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, Tag1 ("Base__Hashtbl_intf", 93)), 0); (("of_alist_or_error", 4127), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4595)], (0)), 100000000, 0, -4594); ((("b")), 100000000, 0, -4596); (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4595)], (0)), 100000000, 0, -4602); ((("b")), 100000000, 0, -4596)]), 100000000, 0, -4601)], (0)), 100000000, 0, -4600), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Or_error"), "t"), [(Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4595); ((("b")), 100000000, 0, -4596)], (0)), 100000000, 0, -4599)], (0)), 100000000, 0, -4598), 0), 100000000, 0, -4597)], (0)), 100000000, 0, -4593), 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, Tag1 ("Base__Hashtbl_intf", 94)), 0); (("of_alist_exn", 4128), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4586)], (0)), 100000000, 0, -4585); ((("b")), 100000000, 0, -4587); (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4586)], (0)), 100000000, 0, -4592); ((("b")), 100000000, 0, -4587)]), 100000000, 0, -4591)], (0)), 100000000, 0, -4590), (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4586); ((("b")), 100000000, 0, -4587)], (0)), 100000000, 0, -4589), 0), 100000000, 0, -4588)], (0)), 100000000, 0, -4584), 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, Tag1 ("Base__Hashtbl_intf", 95)), 0); (("of_alist_multi", 4129), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4575)], (0)), 100000000, 0, -4574); (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -4577)], (0)), 100000000, 0, -4576); (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4575)], (0)), 100000000, 0, -4583); ((("b")), 100000000, 0, -4577)]), 100000000, 0, -4582)], (0)), 100000000, 0, -4581), (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4575); (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -4577)], (0)), 100000000, 0, -4580)], (0)), 100000000, 0, -4579), 0), 100000000, 0, -4578)], (0)), 100000000, 0, -4573), 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, Tag1 ("Base__Hashtbl_intf", 96)), 0); (("create_mapped", 4130), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4558)], (0)), 100000000, 0, -4557); ((("b")), 100000000, 0, -4559); (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -4569), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4558)], (0)), 100000000, 0, -4572), 0), 100000000, 0, -4571), (Tag1 (("get_data"), (Tag1 (0, ((("r")), 100000000, 0, -4569), ((("b")), 100000000, 0, -4559), 0), 100000000, 0, -4570), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -4569)], (0)), 100000000, 0, -4568), (Tag8 (([("Duplicate_keys", (((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4558)], (0)), 100000000, 0, -4567)], (0)), 100000000, 0, -4566)))); ("Ok", (((Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4558); ((("b")), 100000000, 0, -4559)], (0)), 100000000, 0, -4565))))], (0, 100000000, 0, -4564), 1, 0, 0)), 100000000, 0, -4563), 0), 100000000, 0, -4562), 0), 100000000, 0, -4561), 0), 100000000, 0, -4560)], (0)), 100000000, 0, -4556), 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, Tag1 ("Base__Hashtbl_intf", 97)), 0); (("create_with_key", 4131), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4544)], (0)), 100000000, 0, -4543); ((("r")), 100000000, 0, -4545); (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -4545), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4544)], (0)), 100000000, 0, -4555), 0), 100000000, 0, -4554), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -4545)], (0)), 100000000, 0, -4553), (Tag8 (([("Duplicate_keys", (((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4544)], (0)), 100000000, 0, -4552)], (0)), 100000000, 0, -4551)))); ("Ok", (((Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4544); ((("r")), 100000000, 0, -4545)], (0)), 100000000, 0, -4550))))], (0, 100000000, 0, -4549), 1, 0, 0)), 100000000, 0, -4548), 0), 100000000, 0, -4547), 0), 100000000, 0, -4546)], (0)), 100000000, 0, -4542), 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, Tag1 ("Base__Hashtbl_intf", 98)), 0); (("create_with_key_or_error", 4132), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4533)], (0)), 100000000, 0, -4532); ((("r")), 100000000, 0, -4534); (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -4534), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4533)], (0)), 100000000, 0, -4541), 0), 100000000, 0, -4540), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -4534)], (0)), 100000000, 0, -4539), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Or_error"), "t"), [(Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4533); ((("r")), 100000000, 0, -4534)], (0)), 100000000, 0, -4538)], (0)), 100000000, 0, -4537), 0), 100000000, 0, -4536), 0), 100000000, 0, -4535)], (0)), 100000000, 0, -4531), 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, Tag1 ("Base__Hashtbl_intf", 99)), 0); (("create_with_key_exn", 4133), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4523)], (0)), 100000000, 0, -4522); ((("r")), 100000000, 0, -4524); (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -4524), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4523)], (0)), 100000000, 0, -4530), 0), 100000000, 0, -4529), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -4524)], (0)), 100000000, 0, -4528), (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4523); ((("r")), 100000000, 0, -4524)], (0)), 100000000, 0, -4527), 0), 100000000, 0, -4526), 0), 100000000, 0, -4525)], (0)), 100000000, 0, -4521), 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, Tag1 ("Base__Hashtbl_intf", 100)), 0); (("group", 4134), ((Tag3 ((("create_options_without_first_class_module", 3691)), [(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4507)], (0)), 100000000, 0, -4506); ((("b")), 100000000, 0, -4508); (Tag1 (("get_key"), (Tag1 (0, ((("r")), 100000000, 0, -4515), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4507)], (0)), 100000000, 0, -4520), 0), 100000000, 0, -4519), (Tag1 (("get_data"), (Tag1 (0, ((("r")), 100000000, 0, -4515), ((("b")), 100000000, 0, -4508), 0), 100000000, 0, -4518), (Tag1 (("combine"), (Tag1 (0, ((("b")), 100000000, 0, -4508), (Tag1 (0, ((("b")), 100000000, 0, -4508), ((("b")), 100000000, 0, -4508), 0), 100000000, 0, -4517), 0), 100000000, 0, -4516), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -4515)], (0)), 100000000, 0, -4514), (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4507); ((("b")), 100000000, 0, -4508)], (0)), 100000000, 0, -4513), 0), 100000000, 0, -4512), 0), 100000000, 0, -4511), 0), 100000000, 0, -4510), 0), 100000000, 0, -4509)], (0)), 100000000, 0, -4505), 0, (("src/hashtbl_intf.ml", 677, 22919, 22923), ("src/hashtbl_intf.ml", 681, 23055, 23120), 0), 0, Tag1 ("Base__Hashtbl_intf", 101)), 0); (("sexp_of_key", 4135), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4502); ((0), 100000000, 0, -4504)], (0)), 100000000, 0, -4503), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4502)], (0)), 100000000, 0, -4501), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -4500), 0), 100000000, 0, -4499), 0), 100000000, 0, -4498), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 14)), 0); (("clear", 4136), ((Tag1 (0, (Tag3 ((("t", 4117)), [((0), 100000000, 0, -4496); ((0), 100000000, 0, -4497)], (0)), 100000000, 0, -4495), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4494), 0), 100000000, 0, -4493), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 15)), 0); (("copy", 4137), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4490); ((("b")), 100000000, 0, -4491)], (0)), 100000000, 0, -4492), (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4490); ((("b")), 100000000, 0, -4491)], (0)), 100000000, 0, -4489), 0), 100000000, 0, -4488), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 16)), 0); (("fold", 4138), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4486); ((("b")), 100000000, 0, -4484)], (0)), 100000000, 0, -4487), (Tag1 (("init"), ((("acc")), 100000000, 0, -4480), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4486)], (0)), 100000000, 0, -4485), (Tag1 (("data"), ((("b")), 100000000, 0, -4484), (Tag1 (0, ((("acc")), 100000000, 0, -4480), ((("acc")), 100000000, 0, -4480), 0), 100000000, 0, -4483), 0), 100000000, 0, -4482), 0), 100000000, 0, -4481), ((("acc")), 100000000, 0, -4480), 0), 100000000, 0, -4479), 0), 100000000, 0, -4478), 0), 100000000, 0, -4477), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 17)), 0); (("iter_keys", 4139), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4474); ((0), 100000000, 0, -4476)], (0)), 100000000, 0, -4475), (Tag1 (("f"), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4474)], (0)), 100000000, 0, -4473), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4472), 0), 100000000, 0, -4471), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4470), 0), 100000000, 0, -4469), 0), 100000000, 0, -4468), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 18)), 0); (("iter", 4140), ((Tag1 (0, (Tag3 ((("t", 4117)), [((0), 100000000, 0, -4467); ((("b")), 100000000, 0, -4465)], (0)), 100000000, 0, -4466), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -4465), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4464), 0), 100000000, 0, -4463), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4462), 0), 100000000, 0, -4461), 0), 100000000, 0, -4460), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 19)), 0); (("iteri", 4141), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4458); ((("b")), 100000000, 0, -4456)], (0)), 100000000, 0, -4459), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4458)], (0)), 100000000, 0, -4457), (Tag1 (("data"), ((("b")), 100000000, 0, -4456), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4455), 0), 100000000, 0, -4454), 0), 100000000, 0, -4453), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4452), 0), 100000000, 0, -4451), 0), 100000000, 0, -4450), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 20)), 0); (("existsi", 4142), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4448); ((("b")), 100000000, 0, -4446)], (0)), 100000000, 0, -4449), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4448)], (0)), 100000000, 0, -4447), (Tag1 (("data"), ((("b")), 100000000, 0, -4446), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -4445), 0), 100000000, 0, -4444), 0), 100000000, 0, -4443), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -4442), 0), 100000000, 0, -4441), 0), 100000000, 0, -4440), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 21)), 0); (("exists", 4143), ((Tag1 (0, (Tag3 ((("t", 4117)), [((0), 100000000, 0, -4439); ((("b")), 100000000, 0, -4437)], (0)), 100000000, 0, -4438), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -4437), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -4436), 0), 100000000, 0, -4435), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -4434), 0), 100000000, 0, -4433), 0), 100000000, 0, -4432), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 22)), 0); (("for_alli", 4144), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4430); ((("b")), 100000000, 0, -4428)], (0)), 100000000, 0, -4431), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4430)], (0)), 100000000, 0, -4429), (Tag1 (("data"), ((("b")), 100000000, 0, -4428), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -4427), 0), 100000000, 0, -4426), 0), 100000000, 0, -4425), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -4424), 0), 100000000, 0, -4423), 0), 100000000, 0, -4422), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 23)), 0); (("for_all", 4145), ((Tag1 (0, (Tag3 ((("t", 4117)), [((0), 100000000, 0, -4421); ((("b")), 100000000, 0, -4419)], (0)), 100000000, 0, -4420), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -4419), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -4418), 0), 100000000, 0, -4417), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -4416), 0), 100000000, 0, -4415), 0), 100000000, 0, -4414), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 24)), 0); (("counti", 4146), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4412); ((("b")), 100000000, 0, -4410)], (0)), 100000000, 0, -4413), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4412)], (0)), 100000000, 0, -4411), (Tag1 (("data"), ((("b")), 100000000, 0, -4410), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -4409), 0), 100000000, 0, -4408), 0), 100000000, 0, -4407), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -4406), 0), 100000000, 0, -4405), 0), 100000000, 0, -4404), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 25)), 0); (("count", 4147), ((Tag1 (0, (Tag3 ((("t", 4117)), [((0), 100000000, 0, -4403); ((("b")), 100000000, 0, -4401)], (0)), 100000000, 0, -4402), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -4401), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -4400), 0), 100000000, 0, -4399), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -4398), 0), 100000000, 0, -4397), 0), 100000000, 0, -4396), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 26)), 0); (("length", 4148), ((Tag1 (0, (Tag3 ((("t", 4117)), [((0), 100000000, 0, -4394); ((0), 100000000, 0, -4395)], (0)), 100000000, 0, -4393), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -4392), 0), 100000000, 0, -4391), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 27)), 0); (("is_empty", 4149), ((Tag1 (0, (Tag3 ((("t", 4117)), [((0), 100000000, 0, -4389); ((0), 100000000, 0, -4390)], (0)), 100000000, 0, -4388), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -4387), 0), 100000000, 0, -4386), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 28)), 0); (("mem", 4150), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4383); ((0), 100000000, 0, -4385)], (0)), 100000000, 0, -4384), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4383)], (0)), 100000000, 0, -4382), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -4381), 0), 100000000, 0, -4380), 0), 100000000, 0, -4379), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 29)), 0); (("remove", 4151), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4376); ((0), 100000000, 0, -4378)], (0)), 100000000, 0, -4377), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4376)], (0)), 100000000, 0, -4375), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4374), 0), 100000000, 0, -4373), 0), 100000000, 0, -4372), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 30)), 0); (("choose", 4152), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4369); ((("b")), 100000000, 0, -4370)], (0)), 100000000, 0, -4371), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4369)], (0)), 100000000, 0, -4368); ((("b")), 100000000, 0, -4370)]), 100000000, 0, -4367)], (0)), 100000000, 0, -4366), 0), 100000000, 0, -4365), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 31)), 0); (("choose_exn", 4153), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4362); ((("b")), 100000000, 0, -4363)], (0)), 100000000, 0, -4364), (Tag2 ([(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4362)], (0)), 100000000, 0, -4361); ((("b")), 100000000, 0, -4363)]), 100000000, 0, -4360), 0), 100000000, 0, -4359), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 32)), 0); (("choose_randomly", 4154), ((Tag1 (Tag1 ("random_state"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Random"), "State"), "t"), 0, (0)), 100000000, 0, -4358)], (0)), 100000000, 0, -4357), (Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4354); ((("b")), 100000000, 0, -4355)], (0)), 100000000, 0, -4356), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4354)], (0)), 100000000, 0, -4353); ((("b")), 100000000, 0, -4355)]), 100000000, 0, -4352)], (0)), 100000000, 0, -4351), 0), 100000000, 0, -4350), 0), 100000000, 0, -4349), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 33)), 0); (("choose_randomly_exn", 4155), ((Tag1 (Tag1 ("random_state"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Random"), "State"), "t"), 0, (0)), 100000000, 0, -4348)], (0)), 100000000, 0, -4347), (Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4344); ((("b")), 100000000, 0, -4345)], (0)), 100000000, 0, -4346), (Tag2 ([(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4344)], (0)), 100000000, 0, -4343); ((("b")), 100000000, 0, -4345)]), 100000000, 0, -4342), 0), 100000000, 0, -4341), 0), 100000000, 0, -4340), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 34)), 0); (("set", 4156), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4338); ((("b")), 100000000, 0, -4336)], (0)), 100000000, 0, -4339), (Tag1 (("key"), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4338)], (0)), 100000000, 0, -4337), (Tag1 (("data"), ((("b")), 100000000, 0, -4336), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4335), 0), 100000000, 0, -4334), 0), 100000000, 0, -4333), 0), 100000000, 0, -4332), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 35)), 0); (("add", 4157), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4330); ((("b")), 100000000, 0, -4328)], (0)), 100000000, 0, -4331), (Tag1 (("key"), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4330)], (0)), 100000000, 0, -4329), (Tag1 (("data"), ((("b")), 100000000, 0, -4328), (Tag8 (([("Duplicate", (0)); ("Ok", (0))], (0, 100000000, 0, -4327), 1, 0, 0)), 100000000, 0, -4326), 0), 100000000, 0, -4325), 0), 100000000, 0, -4324), 0), 100000000, 0, -4323), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 36)), 0); (("add_exn", 4158), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4321); ((("b")), 100000000, 0, -4319)], (0)), 100000000, 0, -4322), (Tag1 (("key"), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4321)], (0)), 100000000, 0, -4320), (Tag1 (("data"), ((("b")), 100000000, 0, -4319), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4318), 0), 100000000, 0, -4317), 0), 100000000, 0, -4316), 0), 100000000, 0, -4315), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 37)), 0); (("change", 4159), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4313); ((("b")), 100000000, 0, -4310)], (0)), 100000000, 0, -4314), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4313)], (0)), 100000000, 0, -4312), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -4310)], (0)), 100000000, 0, -4311), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -4310)], (0)), 100000000, 0, -4309), 0), 100000000, 0, -4308), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4307), 0), 100000000, 0, -4306), 0), 100000000, 0, -4305), 0), 100000000, 0, -4304), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 38)), 0); (("update", 4160), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4302); ((("b")), 100000000, 0, -4299)], (0)), 100000000, 0, -4303), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4302)], (0)), 100000000, 0, -4301), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -4299)], (0)), 100000000, 0, -4300), ((("b")), 100000000, 0, -4299), 0), 100000000, 0, -4298), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4297), 0), 100000000, 0, -4296), 0), 100000000, 0, -4295), 0), 100000000, 0, -4294), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 39)), 0); (("update_and_return", 4161), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4292); ((("b")), 100000000, 0, -4288)], (0)), 100000000, 0, -4293), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4292)], (0)), 100000000, 0, -4291), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -4288)], (0)), 100000000, 0, -4290), ((("b")), 100000000, 0, -4288), 0), 100000000, 0, -4289), ((("b")), 100000000, 0, -4288), 0), 100000000, 0, -4287), 0), 100000000, 0, -4286), 0), 100000000, 0, -4285), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 40)), 0); (("map", 4162), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4280); ((("b")), 100000000, 0, -4283)], (0)), 100000000, 0, -4284), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -4283), ((("c")), 100000000, 0, -4281), 0), 100000000, 0, -4282), (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4280); ((("c")), 100000000, 0, -4281)], (0)), 100000000, 0, -4279), 0), 100000000, 0, -4278), 0), 100000000, 0, -4277), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 41)), 0); (("mapi", 4163), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4270); ((("b")), 100000000, 0, -4274)], (0)), 100000000, 0, -4276), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4270)], (0)), 100000000, 0, -4275), (Tag1 (("data"), ((("b")), 100000000, 0, -4274), ((("c")), 100000000, 0, -4271), 0), 100000000, 0, -4273), 0), 100000000, 0, -4272), (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4270); ((("c")), 100000000, 0, -4271)], (0)), 100000000, 0, -4269), 0), 100000000, 0, -4268), 0), 100000000, 0, -4267), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 42)), 0); (("filter_map", 4164), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4261); ((("b")), 100000000, 0, -4265)], (0)), 100000000, 0, -4266), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -4265), (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -4262)], (0)), 100000000, 0, -4264), 0), 100000000, 0, -4263), (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4261); ((("c")), 100000000, 0, -4262)], (0)), 100000000, 0, -4260), 0), 100000000, 0, -4259), 0), 100000000, 0, -4258), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 43)), 0); (("filter_mapi", 4165), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4250); ((("b")), 100000000, 0, -4255)], (0)), 100000000, 0, -4257), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4250)], (0)), 100000000, 0, -4256), (Tag1 (("data"), ((("b")), 100000000, 0, -4255), (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -4251)], (0)), 100000000, 0, -4254), 0), 100000000, 0, -4253), 0), 100000000, 0, -4252), (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4250); ((("c")), 100000000, 0, -4251)], (0)), 100000000, 0, -4249), 0), 100000000, 0, -4248), 0), 100000000, 0, -4247), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 44)), 0); (("filter_keys", 4166), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4241); ((("b")), 100000000, 0, -4242)], (0)), 100000000, 0, -4246), (Tag1 (("f"), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4241)], (0)), 100000000, 0, -4245), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -4244), 0), 100000000, 0, -4243), (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4241); ((("b")), 100000000, 0, -4242)], (0)), 100000000, 0, -4240), 0), 100000000, 0, -4239), 0), 100000000, 0, -4238), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 45)), 0); (("filter", 4167), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4233); ((("b")), 100000000, 0, -4234)], (0)), 100000000, 0, -4237), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -4234), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -4236), 0), 100000000, 0, -4235), (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4233); ((("b")), 100000000, 0, -4234)], (0)), 100000000, 0, -4232), 0), 100000000, 0, -4231), 0), 100000000, 0, -4230), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 46)), 0); (("filteri", 4168), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4223); ((("b")), 100000000, 0, -4224)], (0)), 100000000, 0, -4229), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4223)], (0)), 100000000, 0, -4228), (Tag1 (("data"), ((("b")), 100000000, 0, -4224), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -4227), 0), 100000000, 0, -4226), 0), 100000000, 0, -4225), (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4223); ((("b")), 100000000, 0, -4224)], (0)), 100000000, 0, -4222), 0), 100000000, 0, -4221), 0), 100000000, 0, -4220), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 47)), 0); (("partition_map", 4169), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4212); ((("b")), 100000000, 0, -4218)], (0)), 100000000, 0, -4219), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -4218), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Either"), "t"), [((("c")), 100000000, 0, -4213); ((("d")), 100000000, 0, -4215)], (0)), 100000000, 0, -4217), 0), 100000000, 0, -4216), (Tag2 ([(Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4212); ((("c")), 100000000, 0, -4213)], (0)), 100000000, 0, -4211); (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4212); ((("d")), 100000000, 0, -4215)], (0)), 100000000, 0, -4214)]), 100000000, 0, -4210), 0), 100000000, 0, -4209), 0), 100000000, 0, -4208), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 48)), 0); (("partition_mapi", 4170), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4198); ((("b")), 100000000, 0, -4205)], (0)), 100000000, 0, -4207), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4198)], (0)), 100000000, 0, -4206), (Tag1 (("data"), ((("b")), 100000000, 0, -4205), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Either"), "t"), [((("c")), 100000000, 0, -4199); ((("d")), 100000000, 0, -4201)], (0)), 100000000, 0, -4204), 0), 100000000, 0, -4203), 0), 100000000, 0, -4202), (Tag2 ([(Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4198); ((("c")), 100000000, 0, -4199)], (0)), 100000000, 0, -4197); (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4198); ((("d")), 100000000, 0, -4201)], (0)), 100000000, 0, -4200)]), 100000000, 0, -4196), 0), 100000000, 0, -4195), 0), 100000000, 0, -4194), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 49)), 0); (("partition_tf", 4171), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4188); ((("b")), 100000000, 0, -4189)], (0)), 100000000, 0, -4193), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -4189), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -4192), 0), 100000000, 0, -4191), (Tag2 ([(Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4188); ((("b")), 100000000, 0, -4189)], (0)), 100000000, 0, -4187); (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4188); ((("b")), 100000000, 0, -4189)], (0)), 100000000, 0, -4190)]), 100000000, 0, -4186), 0), 100000000, 0, -4185), 0), 100000000, 0, -4184), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 50)), 0); (("partitioni_tf", 4172), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4176); ((("b")), 100000000, 0, -4177)], (0)), 100000000, 0, -4183), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4176)], (0)), 100000000, 0, -4182), (Tag1 (("data"), ((("b")), 100000000, 0, -4177), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -4181), 0), 100000000, 0, -4180), 0), 100000000, 0, -4179), (Tag2 ([(Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4176); ((("b")), 100000000, 0, -4177)], (0)), 100000000, 0, -4175); (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4176); ((("b")), 100000000, 0, -4177)], (0)), 100000000, 0, -4178)]), 100000000, 0, -4174), 0), 100000000, 0, -4173), 0), 100000000, 0, -4172), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 51)), 0); (("find_or_add", 4173), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4170); ((("b")), 100000000, 0, -4166)], (0)), 100000000, 0, -4171), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4170)], (0)), 100000000, 0, -4169), (Tag1 (("default"), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4168), ((("b")), 100000000, 0, -4166), 0), 100000000, 0, -4167), ((("b")), 100000000, 0, -4166), 0), 100000000, 0, -4165), 0), 100000000, 0, -4164), 0), 100000000, 0, -4163), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 52)), 0); (("findi_or_add", 4174), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4160); ((("b")), 100000000, 0, -4157)], (0)), 100000000, 0, -4162), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4160)], (0)), 100000000, 0, -4161), (Tag1 (("default"), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4160)], (0)), 100000000, 0, -4159), ((("b")), 100000000, 0, -4157), 0), 100000000, 0, -4158), ((("b")), 100000000, 0, -4157), 0), 100000000, 0, -4156), 0), 100000000, 0, -4155), 0), 100000000, 0, -4154), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 53)), 0); (("find", 4175), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4152); ((("b")), 100000000, 0, -4150)], (0)), 100000000, 0, -4153), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4152)], (0)), 100000000, 0, -4151), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -4150)], (0)), 100000000, 0, -4149), 0), 100000000, 0, -4148), 0), 100000000, 0, -4147), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 54)), 0); (("find_exn", 4176), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4145); ((("b")), 100000000, 0, -4143)], (0)), 100000000, 0, -4146), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4145)], (0)), 100000000, 0, -4144), ((("b")), 100000000, 0, -4143), 0), 100000000, 0, -4142), 0), 100000000, 0, -4141), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 55)), 0); (("find_and_call", 4177), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4136); ((("b")), 100000000, 0, -4138)], (0)), 100000000, 0, -4140), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4136)], (0)), 100000000, 0, -4139), (Tag1 (("if_found"), (Tag1 (0, ((("b")), 100000000, 0, -4138), ((("c")), 100000000, 0, -4133), 0), 100000000, 0, -4137), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4136)], (0)), 100000000, 0, -4135), ((("c")), 100000000, 0, -4133), 0), 100000000, 0, -4134), ((("c")), 100000000, 0, -4133), 0), 100000000, 0, -4132), 0), 100000000, 0, -4131), 0), 100000000, 0, -4130), 0), 100000000, 0, -4129), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 56)), 0); (("find_and_call1", 4178), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4123); ((("b")), 100000000, 0, -4126)], (0)), 100000000, 0, -4128), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4123)], (0)), 100000000, 0, -4127), (Tag1 (("a"), ((("d")), 100000000, 0, -4121), (Tag1 (("if_found"), (Tag1 (0, ((("b")), 100000000, 0, -4126), (Tag1 (0, ((("d")), 100000000, 0, -4121), ((("c")), 100000000, 0, -4118), 0), 100000000, 0, -4125), 0), 100000000, 0, -4124), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4123)], (0)), 100000000, 0, -4122), (Tag1 (0, ((("d")), 100000000, 0, -4121), ((("c")), 100000000, 0, -4118), 0), 100000000, 0, -4120), 0), 100000000, 0, -4119), ((("c")), 100000000, 0, -4118), 0), 100000000, 0, -4117), 0), 100000000, 0, -4116), 0), 100000000, 0, -4115), 0), 100000000, 0, -4114), 0), 100000000, 0, -4113), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 57)), 0); (("find_and_call2", 4179), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4106); ((("b")), 100000000, 0, -4110)], (0)), 100000000, 0, -4112), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4106)], (0)), 100000000, 0, -4111), (Tag1 (("a"), ((("d")), 100000000, 0, -4104), (Tag1 (("b"), ((("e")), 100000000, 0, -4103), (Tag1 (("if_found"), (Tag1 (0, ((("b")), 100000000, 0, -4110), (Tag1 (0, ((("d")), 100000000, 0, -4104), (Tag1 (0, ((("e")), 100000000, 0, -4103), ((("c")), 100000000, 0, -4099), 0), 100000000, 0, -4109), 0), 100000000, 0, -4108), 0), 100000000, 0, -4107), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4106)], (0)), 100000000, 0, -4105), (Tag1 (0, ((("d")), 100000000, 0, -4104), (Tag1 (0, ((("e")), 100000000, 0, -4103), ((("c")), 100000000, 0, -4099), 0), 100000000, 0, -4102), 0), 100000000, 0, -4101), 0), 100000000, 0, -4100), ((("c")), 100000000, 0, -4099), 0), 100000000, 0, -4098), 0), 100000000, 0, -4097), 0), 100000000, 0, -4096), 0), 100000000, 0, -4095), 0), 100000000, 0, -4094), 0), 100000000, 0, -4093), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 58)), 0); (("findi_and_call", 4180), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4086); ((("b")), 100000000, 0, -4089)], (0)), 100000000, 0, -4092), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4086)], (0)), 100000000, 0, -4091), (Tag1 (("if_found"), (Tag1 (("key"), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4086)], (0)), 100000000, 0, -4090), (Tag1 (("data"), ((("b")), 100000000, 0, -4089), ((("c")), 100000000, 0, -4083), 0), 100000000, 0, -4088), 0), 100000000, 0, -4087), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4086)], (0)), 100000000, 0, -4085), ((("c")), 100000000, 0, -4083), 0), 100000000, 0, -4084), ((("c")), 100000000, 0, -4083), 0), 100000000, 0, -4082), 0), 100000000, 0, -4081), 0), 100000000, 0, -4080), 0), 100000000, 0, -4079), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 59)), 0); (("findi_and_call1", 4181), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4071); ((("b")), 100000000, 0, -4075)], (0)), 100000000, 0, -4078), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4071)], (0)), 100000000, 0, -4077), (Tag1 (("a"), ((("d")), 100000000, 0, -4069), (Tag1 (("if_found"), (Tag1 (("key"), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4071)], (0)), 100000000, 0, -4076), (Tag1 (("data"), ((("b")), 100000000, 0, -4075), (Tag1 (0, ((("d")), 100000000, 0, -4069), ((("c")), 100000000, 0, -4066), 0), 100000000, 0, -4074), 0), 100000000, 0, -4073), 0), 100000000, 0, -4072), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4071)], (0)), 100000000, 0, -4070), (Tag1 (0, ((("d")), 100000000, 0, -4069), ((("c")), 100000000, 0, -4066), 0), 100000000, 0, -4068), 0), 100000000, 0, -4067), ((("c")), 100000000, 0, -4066), 0), 100000000, 0, -4065), 0), 100000000, 0, -4064), 0), 100000000, 0, -4063), 0), 100000000, 0, -4062), 0), 100000000, 0, -4061), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 60)), 0); (("findi_and_call2", 4182), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4052); ((("b")), 100000000, 0, -4057)], (0)), 100000000, 0, -4060), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4052)], (0)), 100000000, 0, -4059), (Tag1 (("a"), ((("d")), 100000000, 0, -4050), (Tag1 (("b"), ((("e")), 100000000, 0, -4049), (Tag1 (("if_found"), (Tag1 (("key"), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4052)], (0)), 100000000, 0, -4058), (Tag1 (("data"), ((("b")), 100000000, 0, -4057), (Tag1 (0, ((("d")), 100000000, 0, -4050), (Tag1 (0, ((("e")), 100000000, 0, -4049), ((("c")), 100000000, 0, -4045), 0), 100000000, 0, -4056), 0), 100000000, 0, -4055), 0), 100000000, 0, -4054), 0), 100000000, 0, -4053), (Tag1 (("if_not_found"), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4052)], (0)), 100000000, 0, -4051), (Tag1 (0, ((("d")), 100000000, 0, -4050), (Tag1 (0, ((("e")), 100000000, 0, -4049), ((("c")), 100000000, 0, -4045), 0), 100000000, 0, -4048), 0), 100000000, 0, -4047), 0), 100000000, 0, -4046), ((("c")), 100000000, 0, -4045), 0), 100000000, 0, -4044), 0), 100000000, 0, -4043), 0), 100000000, 0, -4042), 0), 100000000, 0, -4041), 0), 100000000, 0, -4040), 0), 100000000, 0, -4039), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 61)), 0); (("find_and_remove", 4183), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -4037); ((("b")), 100000000, 0, -4035)], (0)), 100000000, 0, -4038), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -4037)], (0)), 100000000, 0, -4036), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -4035)], (0)), 100000000, 0, -4034), 0), 100000000, 0, -4033), 0), 100000000, 0, -4032), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 62)), 0); (("merge", 4184), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("k")), 100000000, 0, -4019); ((("a")), 100000000, 0, -4027)], (0)), 100000000, 0, -4031), (Tag1 (0, (Tag3 ((("t", 4117)), [((("k")), 100000000, 0, -4019); ((("b")), 100000000, 0, -4026)], (0)), 100000000, 0, -4030), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4123)), [((("k")), 100000000, 0, -4019)], (0)), 100000000, 0, -4029), (Tag1 (0, (Tag8 (([("Both", (((Tag2 ([((("a")), 100000000, 0, -4027); ((("b")), 100000000, 0, -4026)]), 100000000, 0, -4028)))); ("Left", ((((("a")), 100000000, 0, -4027)))); ("Right", ((((("b")), 100000000, 0, -4026))))], (0, 100000000, 0, -4025), 1, 0, 0)), 100000000, 0, -4024), (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -4020)], (0)), 100000000, 0, -4023), 0), 100000000, 0, -4022), 0), 100000000, 0, -4021), (Tag3 ((("t", 4117)), [((("k")), 100000000, 0, -4019); ((("c")), 100000000, 0, -4020)], (0)), 100000000, 0, -4018), 0), 100000000, 0, -4017), 0), 100000000, 0, -4016), 0), 100000000, 0, -4015), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 63)), 0); (("merge_into", 4185), ((Tag1 (("src"), (Tag3 ((("t", 4117)), [((("k")), 100000000, 0, -4012); ((("a")), 100000000, 0, -4010)], (0)), 100000000, 0, -4014), (Tag1 (("dst"), (Tag3 ((("t", 4117)), [((("k")), 100000000, 0, -4012); ((("b")), 100000000, 0, -4008)], (0)), 100000000, 0, -4013), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4123)), [((("k")), 100000000, 0, -4012)], (0)), 100000000, 0, -4011), (Tag1 (0, ((("a")), 100000000, 0, -4010), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -4008)], (0)), 100000000, 0, -4009), (Tag3 (Tag1 ((("Merge_into_action", 3687)), "t"), [((("b")), 100000000, 0, -4008)], (0)), 100000000, 0, -4007), 0), 100000000, 0, -4006), 0), 100000000, 0, -4005), 0), 100000000, 0, -4004), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4003), 0), 100000000, 0, -4002), 0), 100000000, 0, -4001), 0), 100000000, 0, -4000), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 64)), 0); (("keys", 4186), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -3997); ((0), 100000000, 0, -3999)], (0)), 100000000, 0, -3998), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -3997)], (0)), 100000000, 0, -3996)], (0)), 100000000, 0, -3995), 0), 100000000, 0, -3994), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 65)), 0); (("data", 4187), ((Tag1 (0, (Tag3 ((("t", 4117)), [((0), 100000000, 0, -3993); ((("b")), 100000000, 0, -3991)], (0)), 100000000, 0, -3992), (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -3991)], (0)), 100000000, 0, -3990), 0), 100000000, 0, -3989), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 66)), 0); (("filter_keys_inplace", 4188), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -3986); ((0), 100000000, 0, -3988)], (0)), 100000000, 0, -3987), (Tag1 (("f"), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -3986)], (0)), 100000000, 0, -3985), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3984), 0), 100000000, 0, -3983), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3982), 0), 100000000, 0, -3981), 0), 100000000, 0, -3980), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 67)), 0); (("filter_inplace", 4189), ((Tag1 (0, (Tag3 ((("t", 4117)), [((0), 100000000, 0, -3979); ((("b")), 100000000, 0, -3977)], (0)), 100000000, 0, -3978), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -3977), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3976), 0), 100000000, 0, -3975), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3974), 0), 100000000, 0, -3973), 0), 100000000, 0, -3972), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 68)), 0); (("filteri_inplace", 4190), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -3970); ((("b")), 100000000, 0, -3968)], (0)), 100000000, 0, -3971), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -3970)], (0)), 100000000, 0, -3969), (Tag1 (("data"), ((("b")), 100000000, 0, -3968), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3967), 0), 100000000, 0, -3966), 0), 100000000, 0, -3965), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3964), 0), 100000000, 0, -3963), 0), 100000000, 0, -3962), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 69)), 0); (("map_inplace", 4191), ((Tag1 (0, (Tag3 ((("t", 4117)), [((0), 100000000, 0, -3961); ((("b")), 100000000, 0, -3959)], (0)), 100000000, 0, -3960), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -3959), ((("b")), 100000000, 0, -3959), 0), 100000000, 0, -3958), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3957), 0), 100000000, 0, -3956), 0), 100000000, 0, -3955), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 70)), 0); (("mapi_inplace", 4192), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -3953); ((("b")), 100000000, 0, -3951)], (0)), 100000000, 0, -3954), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -3953)], (0)), 100000000, 0, -3952), (Tag1 (("data"), ((("b")), 100000000, 0, -3951), ((("b")), 100000000, 0, -3951), 0), 100000000, 0, -3950), 0), 100000000, 0, -3949), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3948), 0), 100000000, 0, -3947), 0), 100000000, 0, -3946), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 71)), 0); (("filter_map_inplace", 4193), ((Tag1 (0, (Tag3 ((("t", 4117)), [((0), 100000000, 0, -3945); ((("b")), 100000000, 0, -3943)], (0)), 100000000, 0, -3944), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -3943), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -3943)], (0)), 100000000, 0, -3942), 0), 100000000, 0, -3941), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3940), 0), 100000000, 0, -3939), 0), 100000000, 0, -3938), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 72)), 0); (("filter_mapi_inplace", 4194), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -3936); ((("b")), 100000000, 0, -3934)], (0)), 100000000, 0, -3937), (Tag1 (("f"), (Tag1 (("key"), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -3936)], (0)), 100000000, 0, -3935), (Tag1 (("data"), ((("b")), 100000000, 0, -3934), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -3934)], (0)), 100000000, 0, -3933), 0), 100000000, 0, -3932), 0), 100000000, 0, -3931), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3930), 0), 100000000, 0, -3929), 0), 100000000, 0, -3928), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 73)), 0); (("equal", 4195), ((Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -3923), (Tag1 (0, ((("b")), 100000000, 0, -3923), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3927), 0), 100000000, 0, -3926), 0), 100000000, 0, -3925), (Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -3922); ((("b")), 100000000, 0, -3923)], (0)), 100000000, 0, -3924), (Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -3922); ((("b")), 100000000, 0, -3923)], (0)), 100000000, 0, -3921), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3920), 0), 100000000, 0, -3919), 0), 100000000, 0, -3918), 0), 100000000, 0, -3917), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 74)), 0); (("similar", 4196), ((Tag1 (0, (Tag1 (0, ((("b1")), 100000000, 0, -3913), (Tag1 (0, ((("b2")), 100000000, 0, -3911), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3916), 0), 100000000, 0, -3915), 0), 100000000, 0, -3914), (Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -3910); ((("b1")), 100000000, 0, -3913)], (0)), 100000000, 0, -3912), (Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -3910); ((("b2")), 100000000, 0, -3911)], (0)), 100000000, 0, -3909), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3908), 0), 100000000, 0, -3907), 0), 100000000, 0, -3906), 0), 100000000, 0, -3905), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 75)), 0); (("to_alist", 4197), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -3902); ((("b")), 100000000, 0, -3903)], (0)), 100000000, 0, -3904), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -3902)], (0)), 100000000, 0, -3901); ((("b")), 100000000, 0, -3903)]), 100000000, 0, -3900)], (0)), 100000000, 0, -3899), 0), 100000000, 0, -3898), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 76)), 0); (("incr", 4198), ((Tag1 (Tag1 ("by"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3897)], (0)), 100000000, 0, -3896), (Tag1 (Tag1 ("remove_if_zero"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3895)], (0)), 100000000, 0, -3894), (Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -3891); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3893)], (0)), 100000000, 0, -3892), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -3891)], (0)), 100000000, 0, -3890), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3889), 0), 100000000, 0, -3888), 0), 100000000, 0, -3887), 0), 100000000, 0, -3886), 0), 100000000, 0, -3885), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 77)), 0); (("decr", 4199), ((Tag1 (Tag1 ("by"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3884)], (0)), 100000000, 0, -3883), (Tag1 (Tag1 ("remove_if_zero"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3882)], (0)), 100000000, 0, -3881), (Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -3878); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3880)], (0)), 100000000, 0, -3879), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -3878)], (0)), 100000000, 0, -3877), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3876), 0), 100000000, 0, -3875), 0), 100000000, 0, -3874), 0), 100000000, 0, -3873), 0), 100000000, 0, -3872), 0, (("src/hashtbl_intf.ml", 683, 23122, 23132), ("src/hashtbl_intf.ml", 683, 23122, 23203), 0), 0, Tag1 ("Base__Hashtbl_intf", 78)), 0); (("add_multi", 4200), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -3869); (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -3867)], (0)), 100000000, 0, -3871)], (0)), 100000000, 0, -3870), (Tag1 (("key"), (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -3869)], (0)), 100000000, 0, -3868), (Tag1 (("data"), ((("b")), 100000000, 0, -3867), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3866), 0), 100000000, 0, -3865), 0), 100000000, 0, -3864), 0), 100000000, 0, -3863), 0, (("src/hashtbl_intf.ml", 684, 23204, 23214), ("src/hashtbl_intf.ml", 684, 23204, 23281), 0), 0, Tag1 ("Base__Hashtbl_intf", 82)), 0); (("remove_multi", 4201), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -3859); (Tag3 ((Tag3 ("list", 9)), [((0), 100000000, 0, -3862)], (0)), 100000000, 0, -3861)], (0)), 100000000, 0, -3860), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -3859)], (0)), 100000000, 0, -3858), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3857), 0), 100000000, 0, -3856), 0), 100000000, 0, -3855), 0, (("src/hashtbl_intf.ml", 684, 23204, 23214), ("src/hashtbl_intf.ml", 684, 23204, 23281), 0), 0, Tag1 ("Base__Hashtbl_intf", 83)), 0); (("find_multi", 4202), ((Tag1 (0, (Tag3 ((("t", 4117)), [((("a")), 100000000, 0, -3852); (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -3850)], (0)), 100000000, 0, -3854)], (0)), 100000000, 0, -3853), (Tag1 (0, (Tag3 ((("key", 4123)), [((("a")), 100000000, 0, -3852)], (0)), 100000000, 0, -3851), (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -3850)], (0)), 100000000, 0, -3849), 0), 100000000, 0, -3848), 0), 100000000, 0, -3847), 0, (("src/hashtbl_intf.ml", 684, 23204, 23214), ("src/hashtbl_intf.ml", 684, 23204, 23281), 0), 0, Tag1 ("Base__Hashtbl_intf", 84)), 0)]), 0, (("src/hashtbl_intf.ml", 849, 27461, 27463), ("src/hashtbl_intf.ml", 849, 27461, 27517), 0), Tag1 ("Base__Hashtbl_intf", 181)), 0, 0); Tag3 (("M", 4090), 0, (Tag2 (((("K", 4100)), (Tag1 (Tag1 ((Tag2 ("Base__")), "T"), "T"))), Tag1 ([Tag1 (("t", 4203), ([((("v")), 100000000, 0, -4681)], 1, 0, 1, ((Tag3 ((("t", 3995)), [(Tag3 (Tag1 ((("K", 4100)), "t"), 0, (0)), 100000000, 0, -4680); ((("v")), 100000000, 0, -4681)], (0)), 100000000, 0, -4679)), [15], [2], 0, 0, (("src/hashtbl_intf.ml", 867, 28004, 28008), ("src/hashtbl_intf.ml", 867, 28004, 28038), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 183)), 0, 0)])), 0, (("src/hashtbl_intf.ml", 866, 27977, 27979), ("src/hashtbl_intf.ml", 868, 28039, 28044), 0), Tag1 ("Base__Hashtbl_intf", 184)), 0, 0); Tag4 (("Sexp_of_m", 4091), ((Tag1 ([Tag1 (("t", 4204), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/hashtbl_intf.ml", 870, 28046, 28056), ("src/hashtbl_intf.ml", 870, 28046, 28103), 0), [(("deriving_inline", (("src/hashtbl_intf.ml", 691, 23367, 23381), ("src/hashtbl_intf.ml", 691, 23367, 23396), 0)), ([([(((("sexp_of"), (("src/hashtbl_intf.ml", 691, 23367, 23397), ("src/hashtbl_intf.ml", 691, 23367, 23404), 0))), (("src/hashtbl_intf.ml", 691, 23367, 23397), ("src/hashtbl_intf.ml", 691, 23367, 23404), 0), 0, 0)], (("src/hashtbl_intf.ml", 691, 23367, 23397), ("src/hashtbl_intf.ml", 691, 23367, 23404), 0))]), (("src/hashtbl_intf.ml", 691, 23367, 23378), ("src/hashtbl_intf.ml", 691, 23367, 23405), 0))], 0, 0, Tag1 ("Base__Hashtbl_intf", 143)), 1, 0); (("sexp_of_t", 4205), ((Tag1 (0, (Tag3 ((("t", 4204)), 0, (0)), 100000000, 0, -4684), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -4683), 0), 100000000, 0, -4682), 0, (("src/hashtbl_intf.ml", 870, 28046, 28056), ("src/hashtbl_intf.ml", 870, 28046, 28103), 0), 0, Tag1 ("Base__Hashtbl_intf", 144)), 0)])), 0, (("src/hashtbl_intf.ml", 870, 28046, 28056), ("src/hashtbl_intf.ml", 870, 28046, 28103), 0), Tag1 ("Base__Hashtbl_intf", 145)), 0); Tag4 (("M_of_sexp", 4092), ((Tag1 ([Tag1 (("t", 4206), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/hashtbl_intf.ml", 870, 28046, 28056), ("src/hashtbl_intf.ml", 870, 28046, 28103), 0), [(("deriving_inline", (("src/hashtbl_intf.ml", 699, 23499, 23513), ("src/hashtbl_intf.ml", 699, 23499, 23528), 0)), ([([(((("of_sexp"), (("src/hashtbl_intf.ml", 699, 23499, 23529), ("src/hashtbl_intf.ml", 699, 23499, 23536), 0))), (("src/hashtbl_intf.ml", 699, 23499, 23529), ("src/hashtbl_intf.ml", 699, 23499, 23536), 0), 0, 0)], (("src/hashtbl_intf.ml", 699, 23499, 23529), ("src/hashtbl_intf.ml", 699, 23499, 23536), 0))]), (("src/hashtbl_intf.ml", 699, 23499, 23510), ("src/hashtbl_intf.ml", 699, 23499, 23537), 0))], 0, 0, Tag1 ("Base__Hashtbl_intf", 146)), 1, 0); (("t_of_sexp", 4207), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -4695), (Tag3 ((("t", 4206)), 0, (0)), 100000000, 0, -4694), 0), 100000000, 0, -4693), 0, (("src/hashtbl_intf.ml", 870, 28046, 28056), ("src/hashtbl_intf.ml", 870, 28046, 28103), 0), 0, Tag1 ("Base__Hashtbl_intf", 147)), 0); (("compare", 4208), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((("t", 4206)), 0, (0)), 100000000, 0, -4692)], (0)), 100000000, 0, -4691), 0, (("src/hashtbl_intf.ml", 870, 28046, 28056), ("src/hashtbl_intf.ml", 870, 28046, 28103), 0), 0, Tag1 ("Base__Ppx_compare_lib", 5)), 0); (("sexp_of_t", 4209), ((Tag1 (0, (Tag3 ((("t", 4206)), 0, (0)), 100000000, 0, -4690), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -4689), 0), 100000000, 0, -4688), 0, (("src/hashtbl_intf.ml", 870, 28046, 28056), ("src/hashtbl_intf.ml", 870, 28046, 28103), 0), 0, Tag1 ("Base__Hashtbl_intf", 2)), 0); (("hash", 4210), ((Tag1 (0, (Tag3 ((("t", 4206)), 0, (0)), 100000000, 0, -4687), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -4686), 0), 100000000, 0, -4685), 0, (("src/hashtbl_intf.ml", 870, 28046, 28056), ("src/hashtbl_intf.ml", 870, 28046, 28103), 0), 0, Tag1 ("Base__Hashtbl_intf", 3)), 0)])), 0, (("src/hashtbl_intf.ml", 870, 28046, 28056), ("src/hashtbl_intf.ml", 870, 28046, 28103), 0), Tag1 ("Base__Hashtbl_intf", 149)), 0); Tag4 (("M_sexp_grammar", 4093), ((Tag1 ([Tag1 (("t", 4211), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/hashtbl_intf.ml", 870, 28046, 28056), ("src/hashtbl_intf.ml", 870, 28046, 28103), 0), [(("deriving_inline", (("src/hashtbl_intf.ml", 709, 23672, 23686), ("src/hashtbl_intf.ml", 709, 23672, 23701), 0)), ([([(((("sexp_grammar"), (("src/hashtbl_intf.ml", 709, 23672, 23702), ("src/hashtbl_intf.ml", 709, 23672, 23714), 0))), (("src/hashtbl_intf.ml", 709, 23672, 23702), ("src/hashtbl_intf.ml", 709, 23672, 23714), 0), 0, 0)], (("src/hashtbl_intf.ml", 709, 23672, 23702), ("src/hashtbl_intf.ml", 709, 23672, 23714), 0))]), (("src/hashtbl_intf.ml", 709, 23672, 23683), ("src/hashtbl_intf.ml", 709, 23672, 23715), 0))], 0, 0, Tag1 ("Base__Hashtbl_intf", 150)), 1, 0); (("t_sexp_grammar", 4212), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [(Tag3 ((("t", 4211)), 0, (0)), 100000000, 0, -4697)], (0)), 100000000, 0, -4696), 0, (("src/hashtbl_intf.ml", 870, 28046, 28056), ("src/hashtbl_intf.ml", 870, 28046, 28103), 0), 0, Tag1 ("Base__Hashtbl_intf", 151)), 0)])), 0, (("src/hashtbl_intf.ml", 870, 28046, 28056), ("src/hashtbl_intf.ml", 870, 28046, 28103), 0), Tag1 ("Base__Hashtbl_intf", 152)), 0); Tag4 (("Equal_m", 4094), ((Tag1 (0)), 0, (("src/hashtbl_intf.ml", 870, 28046, 28056), ("src/hashtbl_intf.ml", 870, 28046, 28103), 0), Tag1 ("Base__Hashtbl_intf", 153)), 0); (("sexp_of_m__t", 4095), ((Tag1 (0, (Tag11 ((("Sexp_of_m", 4091)), [(("t"), ((("k")), 100000000, 0, -2814))]), 100000000, 0, -2818), (Tag1 (0, (Tag1 (0, ((("v")), 100000000, 0, -2815), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2817), 0), 100000000, 0, -2816), (Tag1 (0, (Tag3 ((("t", 3995)), [((("k")), 100000000, 0, -2814); ((("v")), 100000000, 0, -2815)], (0)), 100000000, 0, -2813), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2812), 0), 100000000, 0, -2811), 0), 100000000, 0, -2810), 0), 100000000, 0, -2809), 0, (("src/hashtbl_intf.ml", 870, 28046, 28056), ("src/hashtbl_intf.ml", 870, 28046, 28103), 0), 0, Tag1 ("Base__Hashtbl_intf", 155)), 0); (("m__t_of_sexp", 4096), ((Tag1 (0, (Tag11 ((("M_of_sexp", 4092)), [(("t"), ((("k")), 100000000, 0, -2803))]), 100000000, 0, -2808), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2807), ((("v")), 100000000, 0, -2804), 0), 100000000, 0, -2806), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2805), (Tag3 ((("t", 3995)), [((("k")), 100000000, 0, -2803); ((("v")), 100000000, 0, -2804)], (0)), 100000000, 0, -2802), 0), 100000000, 0, -2801), 0), 100000000, 0, -2800), 0), 100000000, 0, -2799), 0, (("src/hashtbl_intf.ml", 870, 28046, 28056), ("src/hashtbl_intf.ml", 870, 28046, 28103), 0), 0, Tag1 ("Base__Hashtbl_intf", 157)), 0); (("m__t_sexp_grammar", 4097), ((Tag1 (0, (Tag11 ((("M_sexp_grammar", 4093)), [(("t"), ((("k")), 100000000, 0, -2795))]), 100000000, 0, -2798), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [((("v")), 100000000, 0, -2796)], (0)), 100000000, 0, -2797), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [(Tag3 ((("t", 3995)), [((("k")), 100000000, 0, -2795); ((("v")), 100000000, 0, -2796)], (0)), 100000000, 0, -2794)], (0)), 100000000, 0, -2793), 0), 100000000, 0, -2792), 0), 100000000, 0, -2791), 0, (("src/hashtbl_intf.ml", 870, 28046, 28056), ("src/hashtbl_intf.ml", 870, 28046, 28103), 0), 0, Tag1 ("Base__Hashtbl_intf", 159)), 0); (("equal_m__t", 4098), ((Tag1 (0, (Tag11 ((("Equal_m", 4094)), 0), 100000000, 0, -2790), (Tag1 (0, (Tag1 (0, ((("v")), 100000000, 0, -2785), (Tag1 (0, ((("v")), 100000000, 0, -2785), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2789), 0), 100000000, 0, -2788), 0), 100000000, 0, -2787), (Tag1 (0, (Tag3 ((("t", 3995)), [((("k")), 100000000, 0, -2784); ((("v")), 100000000, 0, -2785)], (0)), 100000000, 0, -2786), (Tag1 (0, (Tag3 ((("t", 3995)), [((("k")), 100000000, 0, -2784); ((("v")), 100000000, 0, -2785)], (0)), 100000000, 0, -2783), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2782), 0), 100000000, 0, -2781), 0), 100000000, 0, -2780), 0), 100000000, 0, -2779), 0), 100000000, 0, -2778), 0, (("src/hashtbl_intf.ml", 870, 28046, 28056), ("src/hashtbl_intf.ml", 870, 28046, 28103), 0), 0, Tag1 ("Base__Hashtbl_intf", 160)), 0); Tag3 (("Private", 4099), 0, (Tag1 ([Tag4 (("Creators_generic", 4213), ((((("Creators_generic", 3692)))), 0, (("src/hashtbl_intf.ml", 878, 28293, 28297), ("src/hashtbl_intf.ml", 878, 28293, 28344), 0), Tag1 ("Base__Hashtbl_intf", 186)), 0); Tag1 (("create_options_without_first_class_module", 4214), ([((("key")), 100000000, 0, -4704); ((("data")), 100000000, 0, -4705); ((("z")), 100000000, 0, -4706)], 3, 0, 1, ((Tag3 ((("create_options_without_first_class_module", 3691)), [((("key")), 100000000, 0, -4704); ((("data")), 100000000, 0, -4705); ((("z")), 100000000, 0, -4706)], (0)), 100000000, 0, -4703)), [0; 0; 25], [0; 0; 0], 0, 0, (("src/hashtbl_intf.ml", 880, 28346, 28350), ("src/hashtbl_intf.ml", 881, 28424, 28489), 0), 0, 0, 0, Tag1 ("Base__Hashtbl_intf", 187)), 0, 0); (("hashable", 4215), ((Tag1 (0, (Tag3 ((("t", 3995)), [((("key")), 100000000, 0, -4700); ((0), 100000000, 0, -4702)], (0)), 100000000, 0, -4701), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Hashable"), "t"), [((("key")), 100000000, 0, -4700)], (0)), 100000000, 0, -4699), 0), 100000000, 0, -4698), 0, (("src/hashtbl_intf.ml", 883, 28491, 28495), ("src/hashtbl_intf.ml", 883, 28491, 28540), 0), 0, Tag1 ("Base__Hashtbl_intf", 188)), 0)]), 0, (("src/hashtbl_intf.ml", 877, 28270, 28272), ("src/hashtbl_intf.ml", 884, 28541, 28546), 0), Tag1 ("Base__Hashtbl_intf", 189)), 0, 0)])), 0, (("src/hashtbl_intf.ml", 743, 24325, 24325), ("src/hashtbl_intf.ml", 885, 28547, 28550), 0), Tag1 ("Base__Hashtbl_intf", 190)), 0)], "Base__Hashtbl_intf", [("Base__Hashtbl_intf", ("n_\014\250>-h\129\144\243Q\184\227\229\020\021")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__StringLabels", ("\134F\024\226\216Is#\223\230\234\169Z\206Gc")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Printf", ("\215<\139]\021\142\224E\245m\198qc(W\229")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__MoreLabels", ("\248\232\248\254`<\230\241\161U\193U\1466J\238")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__ListLabels", ("*\194\012\191\020%\170\249m\002\180\178hk\205\220")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shadow_stdlib", ("\219zi\164\203\158e)\232\221\196\168\138x\142\018")); ("Sexplib0__Sexpable", ("\251${\207(\249/z\242\255\250^\141\156\210e")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv_error", ("kzv!\151~\198P\000\165\176d\007\251p\232")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Base_internalhash_types", ("0\148#2\226\223\018\135\173>!\020\237\017\255\149")); ("Base__With_return", ("S\142\136\128>E\001\1583\028\161\217I\183\1279")); ("Base__T", ("+t\159\169\027\152\205\235\003\237\133\177\024\n6'")); ("Base__Sys0", ("\206z\231\154s\\\136\2364\131\005\014\031\152m3")); ("Base__String0", ("\212\221L\220\245\255\162P\228\224\189\216\135H\149O")); ("Base__Source_code_position0", ("_\003P6\254\029\206\005\130\136\180\019\145\230\000M")); ("Base__Sexp", ("\154\187\171&\209=\153[\236\250!U\174`\190T")); ("Base__Result", ("\204|\215\173FMa\2511<&\215T\194$\228")); ("Base__Random", (" \216\153fc\243\1430\155\211\169?\022\\\231\011")); ("Base__Printf", ("\000\196c,\214\127\226\174\220\190\253z!\242\028\250")); ("Base__Ppx_hash_lib", ("\199\141\178\193\006\209L\007^\020(\131\224sn8")); ("Base__Ppx_compare_lib", ("\243\186~\233\228\199Ah\181.\223\004e\231\129S")); ("Base__Poly0", ("\230;\143\234\255.H\132KOe7\155\\\023f")); ("Base__Or_error", ("\193\133)\bO\210\2517\168*\203\148\143\200\127\177")); ("Base__Monad_intf", ("\208\203\163\152\184O\130?\012:\168\247}\018\253\155")); ("Base__Monad", ("!\244\168\2352=\137Lm\219\129K\216\199\145\\")); ("Base__Lazy", ("@`\165\196 \235)\136ANe:p\169$\185")); ("Base__Invariant_intf", ("\213\204\238\235\236[\198\145\028\2392\015\243\177S\249")); ("Base__Invariant", ("\135\153\136\\\129SD\228\202l\255\152\139\253\015\201")); ("Base__Int0", ("N\1310\012\227\254\000\255_\222!\018\016\003\1779")); ("Base__Info_intf", ("\184\209'\173\251\219\167X|v\188]\190o5X")); ("Base__Info", ("-\011\149\203\248\030\2301\1907\1630\189\128\209\170")); ("Base__Import0", ("\156\129U\197Y[\\\153\017Ho\203\173\204\220\020")); ("Base__Import", ("\014\187\247\141\187\181\142g\176:s_,\181\219\209")); ("Base__Hashable_intf", ("\128\015G\244\135R\026\202\128F?)\193\004\195\181")); ("Base__Hashable", ("\027\187\158\245r}\018\193dbq\196\005\170g\252")); ("Base__Hash_intf", ("h\004P\218\1531G\127\212\208A\024\140\164iq")); ("Base__Hash", ("\206Rc\194\234{s3\248\165\024\162\203{\206\206")); ("Base__Globalize", ("<\243w~.\180\196t\159\193\174[\227\139\215G")); ("Base__Formatter", ("\193\149\030\140\154\1505b\162a`%\243\185'%")); ("Base__Field", ("8In\234X\202\188G\186\208$\192\175\136\214v")); ("Base__Error", ("\199\218\231n\155/\159\156\146\247\148t\237\003\t\153")); ("Base__Either_intf", ("\198\253n\235\170\"\029\207\169\248\161\226`(6\182")); ("Base__Either0", ("!9-\011n\2077eZ\212\031c\227\029\206\t")); ("Base__Either", ("\011+\000L\150v\2387\\C\181\179\242\251sk")); ("Base__Comparator", ("\002\135z7b\025&\207\t\188\239&U3R\167")); ("Base__Bool0", ("\177f\254p\023\143&\239\020\136\206\242~\018F\251")); ("Base__Applicative_intf", ("J\176\203\159\235N(\235\027\232\198+\224\205*A")); ("Base__Applicative", ("\157\024\176\241a\165\204\133\003s3\214\007\131\244\n")); ("Base__", ("p\252\007\139\128\163W\025+\0225\001\246|P\158"))], [(0)])

  end
