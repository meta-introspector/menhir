external raise_notrace : exn -> 'a = "%raise_notrace"
exception Exit
exception Not_found
external ( == ) : 'a -> 'a -> bool = "%eq"
external __LOC__ : string = "%loc_LOC"
external __FILE__ : string = "%loc_FILE"
external __LINE__ : int = "%loc_LINE"
external __MODULE__ : string = "%loc_MODULE"
external __POS__ : string * int * int * int = "%loc_POS"
external __FUNCTION__ : string = "%loc_FUNCTION"
external __LOC_OF__ : 'a -> string * 'a = "%loc_LOC"
external __LINE_OF__ : 'a -> int * 'a = "%loc_LINE"
external __POS_OF__ : 'a -> (string * int * int * int) * 'a = "%loc_POS"
external ( @@ ) : ('a -> 'b) -> 'a -> 'b = "%apply"
external ( ~+ ) : int -> int = "%identity"
external succ : int -> int = "%succint"
external pred : int -> int = "%predint"
val max_int : int
val min_int : int
external ( ~+. ) : float -> float = "%identity"
external sqrt : float -> float = "caml_sqrt_float" "sqrt" [@@unboxed]
  [@@noalloc]
external exp : float -> float = "caml_exp_float" "exp" [@@unboxed]
  [@@noalloc]
external log : float -> float = "caml_log_float" "log" [@@unboxed]
  [@@noalloc]
external log10 : float -> float = "caml_log10_float" "log10" [@@unboxed]
  [@@noalloc]
external expm1 : float -> float = "caml_expm1_float" "caml_expm1" [@@unboxed]
  [@@noalloc]
external log1p : float -> float = "caml_log1p_float" "caml_log1p" [@@unboxed]
  [@@noalloc]
external cos : float -> float = "caml_cos_float" "cos" [@@unboxed]
  [@@noalloc]
external sin : float -> float = "caml_sin_float" "sin" [@@unboxed]
  [@@noalloc]
external tan : float -> float = "caml_tan_float" "tan" [@@unboxed]
  [@@noalloc]
external acos : float -> float = "caml_acos_float" "acos" [@@unboxed]
  [@@noalloc]
external asin : float -> float = "caml_asin_float" "asin" [@@unboxed]
  [@@noalloc]
external atan : float -> float = "caml_atan_float" "atan" [@@unboxed]
  [@@noalloc]
external atan2 : float -> float -> float = "caml_atan2_float" "atan2"
  [@@unboxed] [@@noalloc]
external hypot : float -> float -> float = "caml_hypot_float" "caml_hypot"
  [@@unboxed] [@@noalloc]
external cosh : float -> float = "caml_cosh_float" "cosh" [@@unboxed]
  [@@noalloc]
external sinh : float -> float = "caml_sinh_float" "sinh" [@@unboxed]
  [@@noalloc]
external tanh : float -> float = "caml_tanh_float" "tanh" [@@unboxed]
  [@@noalloc]
external acosh : float -> float = "caml_acosh_float" "caml_acosh" [@@unboxed]
  [@@noalloc]
external asinh : float -> float = "caml_asinh_float" "caml_asinh" [@@unboxed]
  [@@noalloc]
external atanh : float -> float = "caml_atanh_float" "caml_atanh" [@@unboxed]
  [@@noalloc]
external ceil : float -> float = "caml_ceil_float" "ceil" [@@unboxed]
  [@@noalloc]
external floor : float -> float = "caml_floor_float" "floor" [@@unboxed]
  [@@noalloc]
external abs_float : float -> float = "%absfloat"
external copysign : float -> float -> float = "caml_copysign_float"
  "caml_copysign" [@@unboxed] [@@noalloc]
external mod_float : float -> float -> float = "caml_fmod_float" "fmod"
  [@@unboxed] [@@noalloc]
external frexp : float -> float * int = "caml_frexp_float"
external ldexp :
  (float [@unboxed]) -> (int [@untagged]) -> (float [@unboxed])
  = "caml_ldexp_float" "caml_ldexp_float_unboxed" [@@noalloc]
external modf : float -> float * float = "caml_modf_float"
external float : int -> float = "%floatofint"
external float_of_int : int -> float = "%floatofint"
external truncate : float -> int = "%intoffloat"
external int_of_float : float -> int = "%intoffloat"
val infinity : float
val neg_infinity : float
val nan : float
val max_float : float
val min_float : float
val epsilon_float : float
type nonrec fpclass =
  fpclass =
    FP_normal
  | FP_subnormal
  | FP_zero
  | FP_infinite
  | FP_nan
external classify_float : (float [@unboxed]) -> fpclass
  = "caml_classify_float" "caml_classify_float_unboxed" [@@noalloc]
external int_of_char : char -> int = "%identity"
val char_of_int : int -> char
val string_of_bool : bool -> string
val bool_of_string_opt : string -> bool option
val bool_of_string : string -> bool
val string_of_int : int -> string
val int_of_string_opt : string -> int option
external int_of_string : string -> int = "caml_int_of_string"
val string_of_float : float -> string
val float_of_string_opt : string -> float option
type nonrec in_channel = in_channel
type nonrec out_channel = out_channel
val stdin : in_channel
val stdout : out_channel
val stderr : out_channel
val print_char : char -> unit
val print_string : string -> unit
val print_bytes : bytes -> unit
val print_int : int -> unit
val print_float : float -> unit
val print_endline : string -> unit
val print_newline : unit -> unit
val prerr_char : char -> unit
val prerr_string : string -> unit
val prerr_bytes : bytes -> unit
val prerr_int : int -> unit
val prerr_float : float -> unit
val prerr_endline : string -> unit
val prerr_newline : unit -> unit
val read_line : unit -> string
val read_int_opt : unit -> int option
val read_int : unit -> int
val read_float_opt : unit -> float option
val read_float : unit -> float
type nonrec open_flag =
  open_flag =
    Open_rdonly
  | Open_wronly
  | Open_append
  | Open_creat
  | Open_trunc
  | Open_excl
  | Open_binary
  | Open_text
  | Open_nonblock
val open_out : string -> out_channel
val open_out_bin : string -> out_channel
val open_out_gen : open_flag list -> int -> string -> out_channel
val flush : out_channel -> unit
val flush_all : unit -> unit
val output_char : out_channel -> char -> unit
val output_string : out_channel -> string -> unit
val output_bytes : out_channel -> bytes -> unit
val output : out_channel -> bytes -> int -> int -> unit
val output_substring : out_channel -> string -> int -> int -> unit
val output_byte : out_channel -> int -> unit
val output_binary_int : out_channel -> int -> unit
val output_value : out_channel -> 'a -> unit
val seek_out : out_channel -> int -> unit
val pos_out : out_channel -> int
val out_channel_length : out_channel -> int
val close_out : out_channel -> unit
val close_out_noerr : out_channel -> unit
val set_binary_mode_out : out_channel -> bool -> unit
val open_in : string -> in_channel
val open_in_bin : string -> in_channel
val open_in_gen : open_flag list -> int -> string -> in_channel
val input_char : in_channel -> char
val input_line : in_channel -> string
val input : in_channel -> bytes -> int -> int -> int
val really_input : in_channel -> bytes -> int -> int -> unit
val really_input_string : in_channel -> int -> string
val input_byte : in_channel -> int
val input_binary_int : in_channel -> int
val input_value : in_channel -> 'a
val seek_in : in_channel -> int -> unit
val pos_in : in_channel -> int
val in_channel_length : in_channel -> int
val close_in : in_channel -> unit
val close_in_noerr : in_channel -> unit
val set_binary_mode_in : in_channel -> bool -> unit
module LargeFile = LargeFile
type nonrec ('a, 'b) result = ('a, 'b) result = Ok of 'a | Error of 'b
val string_of_format : ('a, 'b, 'c, 'd, 'e, 'f) format6 -> string
external format_of_string :
  ('a, 'b, 'c, 'd, 'e, 'f) format6 -> ('a, 'b, 'c, 'd, 'e, 'f) format6
  = "%identity"
val ( ^^ ) :
  ('a, 'b, 'c, 'd, 'e, 'f) format6 ->
  ('f, 'b, 'c, 'e, 'g, 'h) format6 -> ('a, 'b, 'c, 'd, 'g, 'h) format6
val exit : int -> 'a
val at_exit : (unit -> unit) -> unit
val valid_float_lexem : string -> string
val unsafe_really_input : in_channel -> bytes -> int -> int -> unit
val do_at_exit : unit -> unit
val do_domain_local_at_exit : (unit -> unit) ref
module Arg = Arg
module ArrayLabels = ArrayLabels
module BytesLabels = BytesLabels
module Callback = Callback
module Complex = Complex
module Condition = Condition
module Digest = Digest
module Domain = Domain
module Effect = Effect
module Ephemeron = Ephemeron
module Filename = Filename
module Format = Format
module Fun = Fun
module Gc = Gc
module In_channel = In_channel
module Lexing = Lexing
module ListLabels = ListLabels
module Marshal = Marshal
module MoreLabels = MoreLabels
module Mutex = Mutex
module Obj = Obj
module Oo = Oo
module Out_channel = Out_channel
module Parsing = Parsing
module Printexc = Printexc
module Scanf = Scanf
module Semaphore = Semaphore
module Seq = Seq
module StdLabels = StdLabels
module StringLabels = StringLabels
module Type = Type
module Weak = Weak
type 'a ref = 'a ref = { mutable contents : 'a; }
module Stdlib :
  sig
    external raise : exn -> 'a = "%raise"
    external raise_notrace : exn -> 'a = "%raise_notrace"
    val invalid_arg : string -> 'a
    val failwith : string -> 'a
    exception Exit
    exception Match_failure of (string * int * int)
    exception Assert_failure of (string * int * int)
    exception Invalid_argument of string
    exception Failure of string
    exception Not_found
    exception Out_of_memory
    exception Stack_overflow
    exception Sys_error of string
    exception End_of_file
    exception Division_by_zero
    exception Sys_blocked_io
    exception Undefined_recursive_module of (string * int * int)
    external ( = ) : 'a -> 'a -> bool = "%equal"
    external ( <> ) : 'a -> 'a -> bool = "%notequal"
    external ( < ) : 'a -> 'a -> bool = "%lessthan"
    external ( > ) : 'a -> 'a -> bool = "%greaterthan"
    external ( <= ) : 'a -> 'a -> bool = "%lessequal"
    external ( >= ) : 'a -> 'a -> bool = "%greaterequal"
    external compare : 'a -> 'a -> int = "%compare"
    val min : 'a -> 'a -> 'a
    val max : 'a -> 'a -> 'a
    external ( == ) : 'a -> 'a -> bool = "%eq"
    external ( != ) : 'a -> 'a -> bool = "%noteq"
    external not : bool -> bool = "%boolnot"
    external ( && ) : bool -> bool -> bool = "%sequand"
    external ( || ) : bool -> bool -> bool = "%sequor"
    external __LOC__ : string = "%loc_LOC"
    external __FILE__ : string = "%loc_FILE"
    external __LINE__ : int = "%loc_LINE"
    external __MODULE__ : string = "%loc_MODULE"
    external __POS__ : string * int * int * int = "%loc_POS"
    external __FUNCTION__ : string = "%loc_FUNCTION"
    external __LOC_OF__ : 'a -> string * 'a = "%loc_LOC"
    external __LINE_OF__ : 'a -> int * 'a = "%loc_LINE"
    external __POS_OF__ : 'a -> (string * int * int * int) * 'a = "%loc_POS"
    external ( |> ) : 'a -> ('a -> 'b) -> 'b = "%revapply"
    external ( @@ ) : ('a -> 'b) -> 'a -> 'b = "%apply"
    external ( ~- ) : int -> int = "%negint"
    external ( ~+ ) : int -> int = "%identity"
    external succ : int -> int = "%succint"
    external pred : int -> int = "%predint"
    external ( + ) : int -> int -> int = "%addint"
    external ( - ) : int -> int -> int = "%subint"
    external ( * ) : int -> int -> int = "%mulint"
    external ( / ) : int -> int -> int = "%divint"
    external ( mod ) : int -> int -> int = "%modint"
    val abs : int -> int
    val max_int : int
    val min_int : int
    external ( land ) : int -> int -> int = "%andint"
    external ( lor ) : int -> int -> int = "%orint"
    external ( lxor ) : int -> int -> int = "%xorint"
    val lnot : int -> int
    external ( lsl ) : int -> int -> int = "%lslint"
    external ( lsr ) : int -> int -> int = "%lsrint"
    external ( asr ) : int -> int -> int = "%asrint"
    external ( ~-. ) : float -> float = "%negfloat"
    external ( ~+. ) : float -> float = "%identity"
    external ( +. ) : float -> float -> float = "%addfloat"
    external ( -. ) : float -> float -> float = "%subfloat"
    external ( *. ) : float -> float -> float = "%mulfloat"
    external ( /. ) : float -> float -> float = "%divfloat"
    external ( ** ) : float -> float -> float = "caml_power_float" "pow"
      [@@unboxed] [@@noalloc]
    external sqrt : float -> float = "caml_sqrt_float" "sqrt" [@@unboxed]
      [@@noalloc]
    external exp : float -> float = "caml_exp_float" "exp" [@@unboxed]
      [@@noalloc]
    external log : float -> float = "caml_log_float" "log" [@@unboxed]
      [@@noalloc]
    external log10 : float -> float = "caml_log10_float" "log10" [@@unboxed]
      [@@noalloc]
    external expm1 : float -> float = "caml_expm1_float" "caml_expm1"
      [@@unboxed] [@@noalloc]
    external log1p : float -> float = "caml_log1p_float" "caml_log1p"
      [@@unboxed] [@@noalloc]
    external cos : float -> float = "caml_cos_float" "cos" [@@unboxed]
      [@@noalloc]
    external sin : float -> float = "caml_sin_float" "sin" [@@unboxed]
      [@@noalloc]
    external tan : float -> float = "caml_tan_float" "tan" [@@unboxed]
      [@@noalloc]
    external acos : float -> float = "caml_acos_float" "acos" [@@unboxed]
      [@@noalloc]
    external asin : float -> float = "caml_asin_float" "asin" [@@unboxed]
      [@@noalloc]
    external atan : float -> float = "caml_atan_float" "atan" [@@unboxed]
      [@@noalloc]
    external atan2 : float -> float -> float = "caml_atan2_float" "atan2"
      [@@unboxed] [@@noalloc]
    external hypot : float -> float -> float = "caml_hypot_float"
      "caml_hypot" [@@unboxed] [@@noalloc]
    external cosh : float -> float = "caml_cosh_float" "cosh" [@@unboxed]
      [@@noalloc]
    external sinh : float -> float = "caml_sinh_float" "sinh" [@@unboxed]
      [@@noalloc]
    external tanh : float -> float = "caml_tanh_float" "tanh" [@@unboxed]
      [@@noalloc]
    external acosh : float -> float = "caml_acosh_float" "caml_acosh"
      [@@unboxed] [@@noalloc]
    external asinh : float -> float = "caml_asinh_float" "caml_asinh"
      [@@unboxed] [@@noalloc]
    external atanh : float -> float = "caml_atanh_float" "caml_atanh"
      [@@unboxed] [@@noalloc]
    external ceil : float -> float = "caml_ceil_float" "ceil" [@@unboxed]
      [@@noalloc]
    external floor : float -> float = "caml_floor_float" "floor" [@@unboxed]
      [@@noalloc]
    external abs_float : float -> float = "%absfloat"
    external copysign : float -> float -> float = "caml_copysign_float"
      "caml_copysign" [@@unboxed] [@@noalloc]
    external mod_float : float -> float -> float = "caml_fmod_float" "fmod"
      [@@unboxed] [@@noalloc]
    external frexp : float -> float * int = "caml_frexp_float"
    external ldexp :
      (float [@unboxed]) -> (int [@untagged]) -> (float [@unboxed])
      = "caml_ldexp_float" "caml_ldexp_float_unboxed" [@@noalloc]
    external modf : float -> float * float = "caml_modf_float"
    external float : int -> float = "%floatofint"
    external float_of_int : int -> float = "%floatofint"
    external truncate : float -> int = "%intoffloat"
    external int_of_float : float -> int = "%intoffloat"
    val infinity : float
    val neg_infinity : float
    val nan : float
    val max_float : float
    val min_float : float
    val epsilon_float : float
    type fpclass =
      Stdlib.fpclass =
        FP_normal
      | FP_subnormal
      | FP_zero
      | FP_infinite
      | FP_nan
    external classify_float : (float [@unboxed]) -> fpclass
      = "caml_classify_float" "caml_classify_float_unboxed" [@@noalloc]
    val ( ^ ) : string -> string -> string
    external int_of_char : char -> int = "%identity"
    val char_of_int : int -> char
    external ignore : 'a -> unit = "%ignore"
    val string_of_bool : bool -> string
    val bool_of_string_opt : string -> bool option
    val bool_of_string : string -> bool
    val string_of_int : int -> string
    val int_of_string_opt : string -> int option
    external int_of_string : string -> int = "caml_int_of_string"
    val string_of_float : float -> string
    val float_of_string_opt : string -> float option
    external float_of_string : string -> float = "caml_float_of_string"
    external fst : 'a * 'b -> 'a = "%field0"
    external snd : 'a * 'b -> 'b = "%field1"
    val ( @ ) : 'a list -> 'a list -> 'a list
    type in_channel = Stdlib.in_channel
    type out_channel = Stdlib.out_channel
    val stdin : in_channel
    val stdout : out_channel
    val stderr : out_channel
    val print_char : char -> unit
    val print_string : string -> unit
    val print_bytes : bytes -> unit
    val print_int : int -> unit
    val print_float : float -> unit
    val print_endline : string -> unit
    val print_newline : unit -> unit
    val prerr_char : char -> unit
    val prerr_string : string -> unit
    val prerr_bytes : bytes -> unit
    val prerr_int : int -> unit
    val prerr_float : float -> unit
    val prerr_endline : string -> unit
    val prerr_newline : unit -> unit
    val read_line : unit -> string
    val read_int_opt : unit -> int option
    val read_int : unit -> int
    val read_float_opt : unit -> float option
    val read_float : unit -> float
    type open_flag =
      Stdlib.open_flag =
        Open_rdonly
      | Open_wronly
      | Open_append
      | Open_creat
      | Open_trunc
      | Open_excl
      | Open_binary
      | Open_text
      | Open_nonblock
    val open_out : string -> out_channel
    val open_out_bin : string -> out_channel
    val open_out_gen : open_flag list -> int -> string -> out_channel
    val flush : out_channel -> unit
    val flush_all : unit -> unit
    val output_char : out_channel -> char -> unit
    val output_string : out_channel -> string -> unit
    val output_bytes : out_channel -> bytes -> unit
    val output : out_channel -> bytes -> int -> int -> unit
    val output_substring : out_channel -> string -> int -> int -> unit
    val output_byte : out_channel -> int -> unit
    val output_binary_int : out_channel -> int -> unit
    val output_value : out_channel -> 'a -> unit
    val seek_out : out_channel -> int -> unit
    val pos_out : out_channel -> int
    val out_channel_length : out_channel -> int
    val close_out : out_channel -> unit
    val close_out_noerr : out_channel -> unit
    val set_binary_mode_out : out_channel -> bool -> unit
    val open_in : string -> in_channel
    val open_in_bin : string -> in_channel
    val open_in_gen : open_flag list -> int -> string -> in_channel
    val input_char : in_channel -> char
    val input_line : in_channel -> string
    val input : in_channel -> bytes -> int -> int -> int
    val really_input : in_channel -> bytes -> int -> int -> unit
    val really_input_string : in_channel -> int -> string
    val input_byte : in_channel -> int
    val input_binary_int : in_channel -> int
    val input_value : in_channel -> 'a
    val seek_in : in_channel -> int -> unit
    val pos_in : in_channel -> int
    val in_channel_length : in_channel -> int
    val close_in : in_channel -> unit
    val close_in_noerr : in_channel -> unit
    val set_binary_mode_in : in_channel -> bool -> unit
    module LargeFile = Stdlib.LargeFile
    type 'a ref = 'a Stdlib.ref = { mutable contents : 'a; }
    external ref : 'a -> 'a ref = "%makemutable"
    external ( ! ) : 'a ref -> 'a = "%field0"
    external ( := ) : 'a ref -> 'a -> unit = "%setfield0"
    external incr : int ref -> unit = "%incr"
    external decr : int ref -> unit = "%decr"
    type ('a, 'b) result = ('a, 'b) Stdlib.result = Ok of 'a | Error of 'b
    type ('a, 'b, 'c, 'd, 'e, 'f) format6 =
        ('a, 'b, 'c, 'd, 'e, 'f) CamlinternalFormatBasics.format6
    type ('a, 'b, 'c, 'd) format4 = ('a, 'b, 'c, 'c, 'c, 'd) format6
    type ('a, 'b, 'c) format = ('a, 'b, 'c, 'c) format4
    val string_of_format : ('a, 'b, 'c, 'd, 'e, 'f) format6 -> string
    external format_of_string :
      ('a, 'b, 'c, 'd, 'e, 'f) format6 -> ('a, 'b, 'c, 'd, 'e, 'f) format6
      = "%identity"
    val ( ^^ ) :
      ('a, 'b, 'c, 'd, 'e, 'f) format6 ->
      ('f, 'b, 'c, 'e, 'g, 'h) format6 -> ('a, 'b, 'c, 'd, 'g, 'h) format6
    val exit : int -> 'a
    val at_exit : (unit -> unit) -> unit
    val valid_float_lexem : string -> string
    val unsafe_really_input : in_channel -> bytes -> int -> int -> unit
    val do_at_exit : unit -> unit
    val do_domain_local_at_exit : (unit -> unit) ref
    module Arg = Stdlib__Arg
    module ArrayLabels = Stdlib__ArrayLabels
    module Atomic = Stdlib__Atomic
    module Bigarray = Stdlib__Bigarray
    module Bool = Stdlib__Bool
    module Buffer = Stdlib__Buffer
    module BytesLabels = Stdlib__BytesLabels
    module Callback = Stdlib__Callback
    module Char = Stdlib__Char
    module Complex = Stdlib__Complex
    module Condition = Stdlib__Condition
    module Digest = Stdlib__Digest
    module Domain = Stdlib__Domain
    module Effect = Stdlib__Effect
    module Either = Stdlib__Either
    module Ephemeron = Stdlib__Ephemeron
    module Filename = Stdlib__Filename
    module Float = Stdlib__Float
    module Format = Stdlib__Format
    module Fun = Stdlib__Fun
    module Gc = Stdlib__Gc
    module In_channel = Stdlib__In_channel
    module Int = Stdlib__Int
    module Int32 = Stdlib__Int32
    module Int64 = Stdlib__Int64
    module Lazy = Stdlib__Lazy
    module Lexing = Stdlib__Lexing
    module ListLabels = Stdlib__ListLabels
    module Marshal = Stdlib__Marshal
    module MoreLabels = Stdlib__MoreLabels
    module Mutex = Stdlib__Mutex
    module Nativeint = Stdlib__Nativeint
    module Obj = Stdlib__Obj
    module Oo = Stdlib__Oo
    module Option = Stdlib__Option
    module Out_channel = Stdlib__Out_channel
    module Parsing = Stdlib__Parsing
    module Printexc = Stdlib__Printexc
    module Printf = Stdlib__Printf
    module Queue = Stdlib__Queue
    module Random = Stdlib__Random
    module Result = Stdlib__Result
    module Scanf = Stdlib__Scanf
    module Semaphore = Stdlib__Semaphore
    module Seq = Stdlib__Seq
    module Stack = Stdlib__Stack
    module StdLabels = Stdlib__StdLabels
    module StringLabels = Stdlib__StringLabels
    module Sys = Stdlib__Sys
    module Type = Stdlib__Type
    module Uchar = Stdlib__Uchar
    module Unit = Stdlib__Unit
    module Weak = Stdlib__Weak
    module Array = Stdlib.ArrayLabels
    module Bytes = Stdlib.BytesLabels
    module List = Stdlib.ListLabels
    module String = Stdlib.StringLabels
    module Hashtbl = Stdlib__MoreLabels.Hashtbl
    module Map = Stdlib__MoreLabels.Map
    module Set = Stdlib__MoreLabels.Set
  end
external ( |> ) : 'a -> ('a -> 'b) -> 'b = "%revapply"
external ( && ) : bool -> bool -> bool = "%sequand"
external ( || ) : bool -> bool -> bool = "%sequor"
external not : bool -> bool = "%boolnot"
val bool_to_int : bool -> int
external ignore : 'a -> unit = "%ignore"
val ( != ) : 'a -> 'a -> bool
val ( * ) : int -> int -> int
val ( ** ) : float -> float -> float
val ( *. ) : float -> float -> float
val ( + ) : int -> int -> int
val ( +. ) : float -> float -> float
val ( - ) : int -> int -> int
val ( -. ) : float -> float -> float
val ( / ) : int -> int -> int
val ( /. ) : float -> float -> float
module Poly = Base__.Poly0
module Int_replace_polymorphic_compare :
  sig
    external ( = ) : int -> int -> bool = "%equal"
    external ( <> ) : int -> int -> bool = "%notequal"
    external ( < ) : int -> int -> bool = "%lessthan"
    external ( > ) : int -> int -> bool = "%greaterthan"
    external ( <= ) : int -> int -> bool = "%lessequal"
    external ( >= ) : int -> int -> bool = "%greaterequal"
    external compare : int -> int -> int = "%compare"
    external equal : int -> int -> bool = "%equal"
    val ascending : int -> int -> int
    val descending : int -> int -> int
    val max : int -> int -> int
    val min : int -> int -> int
  end
external ( = ) : int -> int -> bool = "%equal"
external ( <> ) : int -> int -> bool = "%notequal"
external ( < ) : int -> int -> bool = "%lessthan"
external ( > ) : int -> int -> bool = "%greaterthan"
external ( <= ) : int -> int -> bool = "%lessequal"
external ( >= ) : int -> int -> bool = "%greaterequal"
external compare : int -> int -> int = "%compare"
external equal : int -> int -> bool = "%equal"
val ascending : int -> int -> int
val descending : int -> int -> int
val max : int -> int -> int
val min : int -> int -> int
module Int32_replace_polymorphic_compare :
  sig
    val ( < ) : Stdlib.Int32.t -> Stdlib.Int32.t -> bool
    val ( <= ) : Stdlib.Int32.t -> Stdlib.Int32.t -> bool
    val ( <> ) : Stdlib.Int32.t -> Stdlib.Int32.t -> bool
    val ( = ) : Stdlib.Int32.t -> Stdlib.Int32.t -> bool
    val ( > ) : Stdlib.Int32.t -> Stdlib.Int32.t -> bool
    val ( >= ) : Stdlib.Int32.t -> Stdlib.Int32.t -> bool
    val ascending : Stdlib.Int32.t -> Stdlib.Int32.t -> int
    val descending : Stdlib.Int32.t -> Stdlib.Int32.t -> int
    val compare : Stdlib.Int32.t -> Stdlib.Int32.t -> int
    val equal : Stdlib.Int32.t -> Stdlib.Int32.t -> bool
    val max : Stdlib.Int32.t -> Stdlib.Int32.t -> Stdlib.Int32.t
    val min : Stdlib.Int32.t -> Stdlib.Int32.t -> Stdlib.Int32.t
  end
module Int64_replace_polymorphic_compare :
  sig
    external ( = ) : Stdlib.Int64.t -> Stdlib.Int64.t -> bool = "%equal"
    external ( <> ) : Stdlib.Int64.t -> Stdlib.Int64.t -> bool = "%notequal"
    external ( < ) : Stdlib.Int64.t -> Stdlib.Int64.t -> bool = "%lessthan"
    external ( > ) : Stdlib.Int64.t -> Stdlib.Int64.t -> bool
      = "%greaterthan"
    external ( <= ) : Stdlib.Int64.t -> Stdlib.Int64.t -> bool = "%lessequal"
    external ( >= ) : Stdlib.Int64.t -> Stdlib.Int64.t -> bool
      = "%greaterequal"
    external compare : Stdlib.Int64.t -> Stdlib.Int64.t -> int = "%compare"
    external equal : Stdlib.Int64.t -> Stdlib.Int64.t -> bool = "%equal"
    val ascending : Stdlib.Int64.t -> Stdlib.Int64.t -> int
    val descending : Stdlib.Int64.t -> Stdlib.Int64.t -> int
    val max : Stdlib.Int64.t -> Stdlib.Int64.t -> Stdlib.Int64.t
    val min : Stdlib.Int64.t -> Stdlib.Int64.t -> Stdlib.Int64.t
  end
module Nativeint_replace_polymorphic_compare :
  sig
    val ( < ) : Stdlib.Nativeint.t -> Stdlib.Nativeint.t -> bool
    val ( <= ) : Stdlib.Nativeint.t -> Stdlib.Nativeint.t -> bool
    val ( <> ) : Stdlib.Nativeint.t -> Stdlib.Nativeint.t -> bool
    val ( = ) : Stdlib.Nativeint.t -> Stdlib.Nativeint.t -> bool
    val ( > ) : Stdlib.Nativeint.t -> Stdlib.Nativeint.t -> bool
    val ( >= ) : Stdlib.Nativeint.t -> Stdlib.Nativeint.t -> bool
    val ascending : Stdlib.Nativeint.t -> Stdlib.Nativeint.t -> int
    val descending : Stdlib.Nativeint.t -> Stdlib.Nativeint.t -> int
    val compare : Stdlib.Nativeint.t -> Stdlib.Nativeint.t -> int
    val equal : Stdlib.Nativeint.t -> Stdlib.Nativeint.t -> bool
    val max : Stdlib.Nativeint.t -> Stdlib.Nativeint.t -> Stdlib.Nativeint.t
    val min : Stdlib.Nativeint.t -> Stdlib.Nativeint.t -> Stdlib.Nativeint.t
  end
module Bool_replace_polymorphic_compare :
  sig
    val ( < ) : bool -> bool -> bool
    val ( <= ) : bool -> bool -> bool
    val ( <> ) : bool -> bool -> bool
    val ( = ) : bool -> bool -> bool
    val ( > ) : bool -> bool -> bool
    val ( >= ) : bool -> bool -> bool
    val ascending : bool -> bool -> int
    val descending : bool -> bool -> int
    val compare : bool -> bool -> int
    val equal : bool -> bool -> bool
    val max : bool -> bool -> bool
    val min : bool -> bool -> bool
  end
module Char_replace_polymorphic_compare :
  sig
    val ( < ) : char -> char -> bool
    val ( <= ) : char -> char -> bool
    val ( <> ) : char -> char -> bool
    val ( = ) : char -> char -> bool
    val ( > ) : char -> char -> bool
    val ( >= ) : char -> char -> bool
    val ascending : char -> char -> int
    val descending : char -> char -> int
    val compare : char -> char -> int
    val equal : char -> char -> bool
    val max : char -> char -> char
    val min : char -> char -> char
  end
module Uchar_replace_polymorphic_compare :
  sig
    val i : Stdlib.Uchar.t -> int
    val ( < ) : Stdlib.Uchar.t -> Stdlib.Uchar.t -> bool
    val ( <= ) : Stdlib.Uchar.t -> Stdlib.Uchar.t -> bool
    val ( <> ) : Stdlib.Uchar.t -> Stdlib.Uchar.t -> bool
    val ( = ) : Stdlib.Uchar.t -> Stdlib.Uchar.t -> bool
    val ( > ) : Stdlib.Uchar.t -> Stdlib.Uchar.t -> bool
    val ( >= ) : Stdlib.Uchar.t -> Stdlib.Uchar.t -> bool
    val ascending : Stdlib.Uchar.t -> Stdlib.Uchar.t -> int
    val descending : Stdlib.Uchar.t -> Stdlib.Uchar.t -> int
    val compare : Stdlib.Uchar.t -> Stdlib.Uchar.t -> int
    val equal : Stdlib.Uchar.t -> Stdlib.Uchar.t -> bool
    val max : Stdlib.Uchar.t -> Stdlib.Uchar.t -> Stdlib.Uchar.t
    val min : Stdlib.Uchar.t -> Stdlib.Uchar.t -> Stdlib.Uchar.t
  end
module Float_replace_polymorphic_compare :
  sig
    val ( < ) : float -> float -> bool
    val ( <= ) : float -> float -> bool
    val ( <> ) : float -> float -> bool
    val ( = ) : float -> float -> bool
    val ( > ) : float -> float -> bool
    val ( >= ) : float -> float -> bool
    val ascending : float -> float -> int
    val descending : float -> float -> int
    val compare : float -> float -> int
    val equal : float -> float -> bool
    val max : float -> float -> float
    val min : float -> float -> float
  end
module String_replace_polymorphic_compare :
  sig
    val ( < ) : string -> string -> bool
    val ( <= ) : string -> string -> bool
    val ( <> ) : string -> string -> bool
    val ( = ) : string -> string -> bool
    val ( > ) : string -> string -> bool
    val ( >= ) : string -> string -> bool
    val ascending : string -> string -> int
    val descending : string -> string -> int
    val compare : string -> string -> int
    val equal : string -> string -> bool
    val max : string -> string -> string
    val min : string -> string -> string
  end
module Bytes_replace_polymorphic_compare :
  sig
    val ( < ) : bytes -> bytes -> bool
    val ( <= ) : bytes -> bytes -> bool
    val ( <> ) : bytes -> bytes -> bool
    val ( = ) : bytes -> bytes -> bool
    val ( > ) : bytes -> bytes -> bool
    val ( >= ) : bytes -> bytes -> bool
    val ascending : bytes -> bytes -> int
    val descending : bytes -> bytes -> int
    val compare : bytes -> bytes -> int
    val equal : bytes -> bytes -> bool
    val max : bytes -> bytes -> bytes
    val min : bytes -> bytes -> bytes
  end
external ( := ) : 'a ref -> 'a -> unit = "%setfield0"
external ( ! ) : 'a ref -> 'a = "%field0"
external ref : 'a -> 'a ref = "%makemutable"
val ( @ ) : 'a list -> 'a list -> 'a list
val ( ^ ) : string -> string -> string
val ( ~- ) : int -> int
val ( ~-. ) : float -> float
val ( asr ) : int -> int -> int
val ( land ) : int -> int -> int
val lnot : int -> int
val ( lor ) : int -> int -> int
val ( lsl ) : int -> int -> int
val ( lsr ) : int -> int -> int
val ( lxor ) : int -> int -> int
val ( mod ) : int -> int -> int
val abs : int -> int
val failwith : string -> 'a
val fst : 'a * 'b -> 'a
val invalid_arg : string -> 'a
val snd : 'a * 'b -> 'b
external raise : exn -> 'a = "%raise"
val phys_equal : 'a -> 'a -> bool
external decr : int ref -> unit = "%decr"
external incr : int ref -> unit = "%incr"
val float_of_string : string -> float("DEBUG:rule", [(("raise_notrace", 17288), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -731), ((("a")), 100000000, 0, -730), 0), 100000000, 0, -729), (("%raise_notrace", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 10, 312, 315), ("shadow-stdlib/src/shadow_stdlib.mli", 10, 312, 325), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.raise_notrace] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 10, 312, 327), ("shadow-stdlib/src/shadow_stdlib.mli", 13, 468, 517), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 10, 312, 326), ("shadow-stdlib/src/shadow_stdlib.mli", 13, 468, 518), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 10, 312, 326), ("shadow-stdlib/src/shadow_stdlib.mli", 13, 468, 518), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 10, 312, 312), ("shadow-stdlib/src/shadow_stdlib.mli", 13, 468, 519), 0))], Tag1 ("Shadow_stdlib", 1)), 0); Tag2 (("Exit", 17289), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 28, 1006, 1008), ("shadow-stdlib/src/shadow_stdlib.mli", 28, 1006, 1018), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Exit instead", (("shadow-stdlib/src/shadow_stdlib.mli", 28, 1006, 1020), ("shadow-stdlib/src/shadow_stdlib.mli", 32, 1241, 1285), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 28, 1006, 1019), ("shadow-stdlib/src/shadow_stdlib.mli", 32, 1241, 1286), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 28, 1006, 1019), ("shadow-stdlib/src/shadow_stdlib.mli", 32, 1241, 1286), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 28, 1006, 1006), ("shadow-stdlib/src/shadow_stdlib.mli", 32, 1241, 1287), 0))], Tag1 ("Shadow_stdlib", 4)), 2, 0); Tag2 (("Not_found", 17290), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 35, 1309, 1311), ("shadow-stdlib/src/shadow_stdlib.mli", 35, 1309, 1321), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nInstead of raising [Not_found], consider using [raise_s] with an informative error\nmessage.  If code needs to distinguish [Not_found] from other exceptions, please change\nit to handle both [Not_found] and [Not_found_s].  Then, instead of raising [Not_found],\nraise [Not_found_s] with an informative error message.", (("shadow-stdlib/src/shadow_stdlib.mli", 35, 1309, 1323), ("shadow-stdlib/src/shadow_stdlib.mli", 40, 1653, 1707), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 35, 1309, 1322), ("shadow-stdlib/src/shadow_stdlib.mli", 40, 1653, 1708), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 35, 1309, 1322), ("shadow-stdlib/src/shadow_stdlib.mli", 40, 1653, 1708), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 35, 1309, 1309), ("shadow-stdlib/src/shadow_stdlib.mli", 40, 1653, 1709), 0))], Tag1 ("Shadow_stdlib", 5)), 2, 0); (("==", 17291), ((Tag1 (0, ((("a")), 100000000, 0, -728), (Tag1 (0, ((("a")), 100000000, 0, -728), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -727), 0), 100000000, 0, -726), 0), 100000000, 0, -725), (("%eq", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 97, 3958, 3961), ("shadow-stdlib/src/shadow_stdlib.mli", 97, 3958, 3971), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [phys_equal] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 97, 3958, 3973), ("shadow-stdlib/src/shadow_stdlib.mli", 99, 4044, 4069), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 97, 3958, 3972), ("shadow-stdlib/src/shadow_stdlib.mli", 99, 4044, 4070), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 97, 3958, 3972), ("shadow-stdlib/src/shadow_stdlib.mli", 99, 4044, 4070), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 97, 3958, 3958), ("shadow-stdlib/src/shadow_stdlib.mli", 99, 4044, 4071), 0))], Tag1 ("Shadow_stdlib", 15)), 0); (("__LOC__", 17292), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -724), (("%loc_LOC", 0, 1, "", 0, 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 125, 5030, 5033), ("shadow-stdlib/src/shadow_stdlib.mli", 125, 5030, 5043), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.__LOC__] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 125, 5030, 5045), ("shadow-stdlib/src/shadow_stdlib.mli", 128, 5186, 5229), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 125, 5030, 5044), ("shadow-stdlib/src/shadow_stdlib.mli", 128, 5186, 5230), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 125, 5030, 5044), ("shadow-stdlib/src/shadow_stdlib.mli", 128, 5186, 5230), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 125, 5030, 5030), ("shadow-stdlib/src/shadow_stdlib.mli", 128, 5186, 5231), 0))], Tag1 ("Shadow_stdlib", 20)), 0); (("__FILE__", 17293), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -723), (("%loc_FILE", 0, 1, "", 0, 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 131, 5274, 5277), ("shadow-stdlib/src/shadow_stdlib.mli", 131, 5274, 5287), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.__FILE__] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 131, 5274, 5289), ("shadow-stdlib/src/shadow_stdlib.mli", 134, 5430, 5474), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 131, 5274, 5288), ("shadow-stdlib/src/shadow_stdlib.mli", 134, 5430, 5475), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 131, 5274, 5288), ("shadow-stdlib/src/shadow_stdlib.mli", 134, 5430, 5475), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 131, 5274, 5274), ("shadow-stdlib/src/shadow_stdlib.mli", 134, 5430, 5476), 0))], Tag1 ("Shadow_stdlib", 21)), 0); (("__LINE__", 17294), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -722), (("%loc_LINE", 0, 1, "", 0, 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 137, 5516, 5519), ("shadow-stdlib/src/shadow_stdlib.mli", 137, 5516, 5529), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.__LINE__] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 137, 5516, 5531), ("shadow-stdlib/src/shadow_stdlib.mli", 140, 5672, 5716), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 137, 5516, 5530), ("shadow-stdlib/src/shadow_stdlib.mli", 140, 5672, 5717), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 137, 5516, 5530), ("shadow-stdlib/src/shadow_stdlib.mli", 140, 5672, 5717), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 137, 5516, 5516), ("shadow-stdlib/src/shadow_stdlib.mli", 140, 5672, 5718), 0))], Tag1 ("Shadow_stdlib", 22)), 0); (("__MODULE__", 17295), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -721), (("%loc_MODULE", 0, 1, "", 0, 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 143, 5765, 5768), ("shadow-stdlib/src/shadow_stdlib.mli", 143, 5765, 5778), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.__MODULE__] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 143, 5765, 5780), ("shadow-stdlib/src/shadow_stdlib.mli", 146, 5921, 5967), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 143, 5765, 5779), ("shadow-stdlib/src/shadow_stdlib.mli", 146, 5921, 5968), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 143, 5765, 5779), ("shadow-stdlib/src/shadow_stdlib.mli", 146, 5921, 5968), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 143, 5765, 5765), ("shadow-stdlib/src/shadow_stdlib.mli", 146, 5921, 5969), 0))], Tag1 ("Shadow_stdlib", 23)), 0); (("__POS__", 17296), ((Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -717); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -718); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -719); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -720)]), 100000000, 0, -716), (("%loc_POS", 0, 1, "", 0, 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 149, 6028, 6031), ("shadow-stdlib/src/shadow_stdlib.mli", 149, 6028, 6041), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.__POS__] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 149, 6028, 6043), ("shadow-stdlib/src/shadow_stdlib.mli", 152, 6184, 6227), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 149, 6028, 6042), ("shadow-stdlib/src/shadow_stdlib.mli", 152, 6184, 6228), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 149, 6028, 6042), ("shadow-stdlib/src/shadow_stdlib.mli", 152, 6184, 6228), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 149, 6028, 6028), ("shadow-stdlib/src/shadow_stdlib.mli", 152, 6184, 6229), 0))], Tag1 ("Shadow_stdlib", 24)), 0); (("__FUNCTION__", 17297), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -715), (("%loc_FUNCTION", 0, 1, "", 0, 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 155, 6280, 6283), ("shadow-stdlib/src/shadow_stdlib.mli", 155, 6280, 6293), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.__FUNCTION__] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 155, 6280, 6295), ("shadow-stdlib/src/shadow_stdlib.mli", 158, 6436, 6484), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 155, 6280, 6294), ("shadow-stdlib/src/shadow_stdlib.mli", 158, 6436, 6485), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 155, 6280, 6294), ("shadow-stdlib/src/shadow_stdlib.mli", 158, 6436, 6485), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 155, 6280, 6280), ("shadow-stdlib/src/shadow_stdlib.mli", 158, 6436, 6486), 0))], Tag1 ("Shadow_stdlib", 25)), 0); (("__LOC_OF__", 17298), ((Tag1 (0, ((("a")), 100000000, 0, -714), (Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -713); ((("a")), 100000000, 0, -714)]), 100000000, 0, -712), 0), 100000000, 0, -711), (("%loc_LOC", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 161, 6541, 6544), ("shadow-stdlib/src/shadow_stdlib.mli", 161, 6541, 6554), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.__LOC_OF__] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 161, 6541, 6556), ("shadow-stdlib/src/shadow_stdlib.mli", 164, 6697, 6743), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 161, 6541, 6555), ("shadow-stdlib/src/shadow_stdlib.mli", 164, 6697, 6744), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 161, 6541, 6555), ("shadow-stdlib/src/shadow_stdlib.mli", 164, 6697, 6744), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 161, 6541, 6541), ("shadow-stdlib/src/shadow_stdlib.mli", 164, 6697, 6745), 0))], Tag1 ("Shadow_stdlib", 26)), 0); (("__LINE_OF__", 17299), ((Tag1 (0, ((("a")), 100000000, 0, -710), (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -709); ((("a")), 100000000, 0, -710)]), 100000000, 0, -708), 0), 100000000, 0, -707), (("%loc_LINE", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 167, 6799, 6802), ("shadow-stdlib/src/shadow_stdlib.mli", 167, 6799, 6812), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.__LINE_OF__] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 167, 6799, 6814), ("shadow-stdlib/src/shadow_stdlib.mli", 170, 6955, 7002), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 167, 6799, 6813), ("shadow-stdlib/src/shadow_stdlib.mli", 170, 6955, 7003), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 167, 6799, 6813), ("shadow-stdlib/src/shadow_stdlib.mli", 170, 6955, 7003), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 167, 6799, 6799), ("shadow-stdlib/src/shadow_stdlib.mli", 170, 6955, 7004), 0))], Tag1 ("Shadow_stdlib", 27)), 0); (("__POS_OF__", 17300), ((Tag1 (0, ((("a")), 100000000, 0, -706), (Tag2 ([(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -702); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -703); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -704); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -705)]), 100000000, 0, -701); ((("a")), 100000000, 0, -706)]), 100000000, 0, -700), 0), 100000000, 0, -699), (("%loc_POS", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 173, 7079, 7082), ("shadow-stdlib/src/shadow_stdlib.mli", 173, 7079, 7092), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.__POS_OF__] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 173, 7079, 7094), ("shadow-stdlib/src/shadow_stdlib.mli", 176, 7235, 7281), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 173, 7079, 7093), ("shadow-stdlib/src/shadow_stdlib.mli", 176, 7235, 7282), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 173, 7079, 7093), ("shadow-stdlib/src/shadow_stdlib.mli", 176, 7235, 7282), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 173, 7079, 7079), ("shadow-stdlib/src/shadow_stdlib.mli", 176, 7235, 7283), 0))], Tag1 ("Shadow_stdlib", 28)), 0); (("@@", 17301), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -697), ((("b")), 100000000, 0, -696), 0), 100000000, 0, -698), (Tag1 (0, ((("a")), 100000000, 0, -697), ((("b")), 100000000, 0, -696), 0), 100000000, 0, -695), 0), 100000000, 0, -694), (("%apply", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 185, 7594, 7597), ("shadow-stdlib/src/shadow_stdlib.mli", 185, 7594, 7607), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.( @@ )] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 185, 7594, 7609), ("shadow-stdlib/src/shadow_stdlib.mli", 188, 7750, 7792), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 185, 7594, 7608), ("shadow-stdlib/src/shadow_stdlib.mli", 188, 7750, 7793), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 185, 7594, 7608), ("shadow-stdlib/src/shadow_stdlib.mli", 188, 7750, 7793), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 185, 7594, 7594), ("shadow-stdlib/src/shadow_stdlib.mli", 188, 7750, 7794), 0))], Tag1 ("Shadow_stdlib", 30)), 0); (("~+", 17302), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -693), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -692), 0), 100000000, 0, -691), (("%identity", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 197, 8082, 8085), ("shadow-stdlib/src/shadow_stdlib.mli", 197, 8082, 8095), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.( ~+ )] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 197, 8082, 8097), ("shadow-stdlib/src/shadow_stdlib.mli", 200, 8238, 8280), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 197, 8082, 8096), ("shadow-stdlib/src/shadow_stdlib.mli", 200, 8238, 8281), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 197, 8082, 8096), ("shadow-stdlib/src/shadow_stdlib.mli", 200, 8238, 8281), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 197, 8082, 8082), ("shadow-stdlib/src/shadow_stdlib.mli", 200, 8238, 8282), 0))], Tag1 ("Shadow_stdlib", 32)), 0); (("succ", 17303), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -690), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -689), 0), 100000000, 0, -688), (("%succint", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 203, 8324, 8327), ("shadow-stdlib/src/shadow_stdlib.mli", 203, 8324, 8337), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Int.succ] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 203, 8324, 8339), ("shadow-stdlib/src/shadow_stdlib.mli", 205, 8410, 8433), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 203, 8324, 8338), ("shadow-stdlib/src/shadow_stdlib.mli", 205, 8410, 8434), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 203, 8324, 8338), ("shadow-stdlib/src/shadow_stdlib.mli", 205, 8410, 8434), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 203, 8324, 8324), ("shadow-stdlib/src/shadow_stdlib.mli", 205, 8410, 8435), 0))], Tag1 ("Shadow_stdlib", 33)), 0); (("pred", 17304), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -687), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -686), 0), 100000000, 0, -685), (("%predint", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 208, 8477, 8480), ("shadow-stdlib/src/shadow_stdlib.mli", 208, 8477, 8490), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Int.pred] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 208, 8477, 8492), ("shadow-stdlib/src/shadow_stdlib.mli", 210, 8563, 8586), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 208, 8477, 8491), ("shadow-stdlib/src/shadow_stdlib.mli", 210, 8563, 8587), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 208, 8477, 8491), ("shadow-stdlib/src/shadow_stdlib.mli", 210, 8563, 8587), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 208, 8477, 8477), ("shadow-stdlib/src/shadow_stdlib.mli", 210, 8563, 8588), 0))], Tag1 ("Shadow_stdlib", 34)), 0); (("max_int", 17305), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -684), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 248, 10039, 10042), ("shadow-stdlib/src/shadow_stdlib.mli", 248, 10039, 10052), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Int.max_value] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 248, 10039, 10054), ("shadow-stdlib/src/shadow_stdlib.mli", 250, 10125, 10153), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 248, 10039, 10053), ("shadow-stdlib/src/shadow_stdlib.mli", 250, 10125, 10154), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 248, 10039, 10053), ("shadow-stdlib/src/shadow_stdlib.mli", 250, 10125, 10154), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 248, 10039, 10039), ("shadow-stdlib/src/shadow_stdlib.mli", 250, 10125, 10155), 0))], Tag1 ("Shadow_stdlib", 41)), 0); (("min_int", 17306), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -683), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 253, 10175, 10178), ("shadow-stdlib/src/shadow_stdlib.mli", 253, 10175, 10188), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Int.min_value] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 253, 10175, 10190), ("shadow-stdlib/src/shadow_stdlib.mli", 255, 10261, 10289), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 253, 10175, 10189), ("shadow-stdlib/src/shadow_stdlib.mli", 255, 10261, 10290), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 253, 10175, 10189), ("shadow-stdlib/src/shadow_stdlib.mli", 255, 10261, 10290), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 253, 10175, 10175), ("shadow-stdlib/src/shadow_stdlib.mli", 255, 10261, 10291), 0))], Tag1 ("Shadow_stdlib", 42)), 0); (("~+.", 17307), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -682), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -681), 0), 100000000, 0, -680), (("%identity", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 306, 12329, 12332), ("shadow-stdlib/src/shadow_stdlib.mli", 306, 12329, 12342), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.( ~+. )] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 306, 12329, 12344), ("shadow-stdlib/src/shadow_stdlib.mli", 309, 12485, 12528), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 306, 12329, 12343), ("shadow-stdlib/src/shadow_stdlib.mli", 309, 12485, 12529), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 306, 12329, 12343), ("shadow-stdlib/src/shadow_stdlib.mli", 309, 12485, 12529), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 306, 12329, 12329), ("shadow-stdlib/src/shadow_stdlib.mli", 309, 12485, 12530), 0))], Tag1 ("Shadow_stdlib", 51)), 0); (("sqrt", 17308), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -679), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -678), 0), 100000000, 0, -677), (("caml_sqrt_float", 1, 0, "sqrt", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 340, 13765, 13826), ("shadow-stdlib/src/shadow_stdlib.mli", 340, 13765, 13833), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 340, 13765, 13823), ("shadow-stdlib/src/shadow_stdlib.mli", 340, 13765, 13834), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 340, 13765, 13838), ("shadow-stdlib/src/shadow_stdlib.mli", 340, 13765, 13845), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 340, 13765, 13835), ("shadow-stdlib/src/shadow_stdlib.mli", 340, 13765, 13846), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 341, 13847, 13850), ("shadow-stdlib/src/shadow_stdlib.mli", 341, 13847, 13860), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.sqrt] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 341, 13847, 13862), ("shadow-stdlib/src/shadow_stdlib.mli", 343, 13933, 13958), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 341, 13847, 13861), ("shadow-stdlib/src/shadow_stdlib.mli", 343, 13933, 13959), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 341, 13847, 13861), ("shadow-stdlib/src/shadow_stdlib.mli", 343, 13933, 13959), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 341, 13847, 13847), ("shadow-stdlib/src/shadow_stdlib.mli", 343, 13933, 13960), 0))], Tag1 ("Shadow_stdlib", 57)), 0); (("exp", 17309), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -676), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -675), 0), 100000000, 0, -674), (("caml_exp_float", 1, 0, "exp", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 345, 13962, 14020), ("shadow-stdlib/src/shadow_stdlib.mli", 345, 13962, 14027), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 345, 13962, 14017), ("shadow-stdlib/src/shadow_stdlib.mli", 345, 13962, 14028), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 345, 13962, 14032), ("shadow-stdlib/src/shadow_stdlib.mli", 345, 13962, 14039), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 345, 13962, 14029), ("shadow-stdlib/src/shadow_stdlib.mli", 345, 13962, 14040), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 346, 14041, 14044), ("shadow-stdlib/src/shadow_stdlib.mli", 346, 14041, 14054), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.exp] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 346, 14041, 14056), ("shadow-stdlib/src/shadow_stdlib.mli", 348, 14127, 14151), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 346, 14041, 14055), ("shadow-stdlib/src/shadow_stdlib.mli", 348, 14127, 14152), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 346, 14041, 14055), ("shadow-stdlib/src/shadow_stdlib.mli", 348, 14127, 14152), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 346, 14041, 14041), ("shadow-stdlib/src/shadow_stdlib.mli", 348, 14127, 14153), 0))], Tag1 ("Shadow_stdlib", 58)), 0); (("log", 17310), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -673), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -672), 0), 100000000, 0, -671), (("caml_log_float", 1, 0, "log", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 350, 14155, 14213), ("shadow-stdlib/src/shadow_stdlib.mli", 350, 14155, 14220), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 350, 14155, 14210), ("shadow-stdlib/src/shadow_stdlib.mli", 350, 14155, 14221), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 350, 14155, 14225), ("shadow-stdlib/src/shadow_stdlib.mli", 350, 14155, 14232), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 350, 14155, 14222), ("shadow-stdlib/src/shadow_stdlib.mli", 350, 14155, 14233), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 351, 14234, 14237), ("shadow-stdlib/src/shadow_stdlib.mli", 351, 14234, 14247), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.log] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 351, 14234, 14249), ("shadow-stdlib/src/shadow_stdlib.mli", 353, 14320, 14344), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 351, 14234, 14248), ("shadow-stdlib/src/shadow_stdlib.mli", 353, 14320, 14345), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 351, 14234, 14248), ("shadow-stdlib/src/shadow_stdlib.mli", 353, 14320, 14345), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 351, 14234, 14234), ("shadow-stdlib/src/shadow_stdlib.mli", 353, 14320, 14346), 0))], Tag1 ("Shadow_stdlib", 59)), 0); (("log10", 17311), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -670), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -669), 0), 100000000, 0, -668), (("caml_log10_float", 1, 0, "log10", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 355, 14348, 14412), ("shadow-stdlib/src/shadow_stdlib.mli", 355, 14348, 14419), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 355, 14348, 14409), ("shadow-stdlib/src/shadow_stdlib.mli", 355, 14348, 14420), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 355, 14348, 14424), ("shadow-stdlib/src/shadow_stdlib.mli", 355, 14348, 14431), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 355, 14348, 14421), ("shadow-stdlib/src/shadow_stdlib.mli", 355, 14348, 14432), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 356, 14433, 14436), ("shadow-stdlib/src/shadow_stdlib.mli", 356, 14433, 14446), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.log10] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 356, 14433, 14448), ("shadow-stdlib/src/shadow_stdlib.mli", 358, 14519, 14545), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 356, 14433, 14447), ("shadow-stdlib/src/shadow_stdlib.mli", 358, 14519, 14546), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 356, 14433, 14447), ("shadow-stdlib/src/shadow_stdlib.mli", 358, 14519, 14546), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 356, 14433, 14433), ("shadow-stdlib/src/shadow_stdlib.mli", 358, 14519, 14547), 0))], Tag1 ("Shadow_stdlib", 60)), 0); (("expm1", 17312), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -667), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -666), 0), 100000000, 0, -665), (("caml_expm1_float", 1, 0, "caml_expm1", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 360, 14549, 14618), ("shadow-stdlib/src/shadow_stdlib.mli", 360, 14549, 14625), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 360, 14549, 14615), ("shadow-stdlib/src/shadow_stdlib.mli", 360, 14549, 14626), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 360, 14549, 14630), ("shadow-stdlib/src/shadow_stdlib.mli", 360, 14549, 14637), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 360, 14549, 14627), ("shadow-stdlib/src/shadow_stdlib.mli", 360, 14549, 14638), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 361, 14639, 14642), ("shadow-stdlib/src/shadow_stdlib.mli", 361, 14639, 14652), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.expm1] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 361, 14639, 14654), ("shadow-stdlib/src/shadow_stdlib.mli", 363, 14725, 14751), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 361, 14639, 14653), ("shadow-stdlib/src/shadow_stdlib.mli", 363, 14725, 14752), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 361, 14639, 14653), ("shadow-stdlib/src/shadow_stdlib.mli", 363, 14725, 14752), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 361, 14639, 14639), ("shadow-stdlib/src/shadow_stdlib.mli", 363, 14725, 14753), 0))], Tag1 ("Shadow_stdlib", 61)), 0); (("log1p", 17313), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -664), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -663), 0), 100000000, 0, -662), (("caml_log1p_float", 1, 0, "caml_log1p", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 365, 14755, 14824), ("shadow-stdlib/src/shadow_stdlib.mli", 365, 14755, 14831), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 365, 14755, 14821), ("shadow-stdlib/src/shadow_stdlib.mli", 365, 14755, 14832), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 365, 14755, 14836), ("shadow-stdlib/src/shadow_stdlib.mli", 365, 14755, 14843), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 365, 14755, 14833), ("shadow-stdlib/src/shadow_stdlib.mli", 365, 14755, 14844), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 366, 14845, 14848), ("shadow-stdlib/src/shadow_stdlib.mli", 366, 14845, 14858), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.log1p] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 366, 14845, 14860), ("shadow-stdlib/src/shadow_stdlib.mli", 368, 14931, 14957), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 366, 14845, 14859), ("shadow-stdlib/src/shadow_stdlib.mli", 368, 14931, 14958), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 366, 14845, 14859), ("shadow-stdlib/src/shadow_stdlib.mli", 368, 14931, 14958), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 366, 14845, 14845), ("shadow-stdlib/src/shadow_stdlib.mli", 368, 14931, 14959), 0))], Tag1 ("Shadow_stdlib", 62)), 0); (("cos", 17314), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -661), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -660), 0), 100000000, 0, -659), (("caml_cos_float", 1, 0, "cos", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 370, 14961, 15019), ("shadow-stdlib/src/shadow_stdlib.mli", 370, 14961, 15026), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 370, 14961, 15016), ("shadow-stdlib/src/shadow_stdlib.mli", 370, 14961, 15027), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 370, 14961, 15031), ("shadow-stdlib/src/shadow_stdlib.mli", 370, 14961, 15038), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 370, 14961, 15028), ("shadow-stdlib/src/shadow_stdlib.mli", 370, 14961, 15039), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 371, 15040, 15043), ("shadow-stdlib/src/shadow_stdlib.mli", 371, 15040, 15053), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.cos] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 371, 15040, 15055), ("shadow-stdlib/src/shadow_stdlib.mli", 373, 15126, 15150), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 371, 15040, 15054), ("shadow-stdlib/src/shadow_stdlib.mli", 373, 15126, 15151), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 371, 15040, 15054), ("shadow-stdlib/src/shadow_stdlib.mli", 373, 15126, 15151), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 371, 15040, 15040), ("shadow-stdlib/src/shadow_stdlib.mli", 373, 15126, 15152), 0))], Tag1 ("Shadow_stdlib", 63)), 0); (("sin", 17315), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -658), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -657), 0), 100000000, 0, -656), (("caml_sin_float", 1, 0, "sin", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 375, 15154, 15212), ("shadow-stdlib/src/shadow_stdlib.mli", 375, 15154, 15219), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 375, 15154, 15209), ("shadow-stdlib/src/shadow_stdlib.mli", 375, 15154, 15220), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 375, 15154, 15224), ("shadow-stdlib/src/shadow_stdlib.mli", 375, 15154, 15231), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 375, 15154, 15221), ("shadow-stdlib/src/shadow_stdlib.mli", 375, 15154, 15232), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 376, 15233, 15236), ("shadow-stdlib/src/shadow_stdlib.mli", 376, 15233, 15246), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.sin] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 376, 15233, 15248), ("shadow-stdlib/src/shadow_stdlib.mli", 378, 15319, 15343), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 376, 15233, 15247), ("shadow-stdlib/src/shadow_stdlib.mli", 378, 15319, 15344), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 376, 15233, 15247), ("shadow-stdlib/src/shadow_stdlib.mli", 378, 15319, 15344), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 376, 15233, 15233), ("shadow-stdlib/src/shadow_stdlib.mli", 378, 15319, 15345), 0))], Tag1 ("Shadow_stdlib", 64)), 0); (("tan", 17316), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -655), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -654), 0), 100000000, 0, -653), (("caml_tan_float", 1, 0, "tan", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 380, 15347, 15405), ("shadow-stdlib/src/shadow_stdlib.mli", 380, 15347, 15412), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 380, 15347, 15402), ("shadow-stdlib/src/shadow_stdlib.mli", 380, 15347, 15413), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 380, 15347, 15417), ("shadow-stdlib/src/shadow_stdlib.mli", 380, 15347, 15424), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 380, 15347, 15414), ("shadow-stdlib/src/shadow_stdlib.mli", 380, 15347, 15425), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 381, 15426, 15429), ("shadow-stdlib/src/shadow_stdlib.mli", 381, 15426, 15439), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.tan] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 381, 15426, 15441), ("shadow-stdlib/src/shadow_stdlib.mli", 383, 15512, 15536), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 381, 15426, 15440), ("shadow-stdlib/src/shadow_stdlib.mli", 383, 15512, 15537), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 381, 15426, 15440), ("shadow-stdlib/src/shadow_stdlib.mli", 383, 15512, 15537), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 381, 15426, 15426), ("shadow-stdlib/src/shadow_stdlib.mli", 383, 15512, 15538), 0))], Tag1 ("Shadow_stdlib", 65)), 0); (("acos", 17317), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -652), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -651), 0), 100000000, 0, -650), (("caml_acos_float", 1, 0, "acos", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 385, 15540, 15601), ("shadow-stdlib/src/shadow_stdlib.mli", 385, 15540, 15608), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 385, 15540, 15598), ("shadow-stdlib/src/shadow_stdlib.mli", 385, 15540, 15609), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 385, 15540, 15613), ("shadow-stdlib/src/shadow_stdlib.mli", 385, 15540, 15620), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 385, 15540, 15610), ("shadow-stdlib/src/shadow_stdlib.mli", 385, 15540, 15621), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 386, 15622, 15625), ("shadow-stdlib/src/shadow_stdlib.mli", 386, 15622, 15635), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.acos] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 386, 15622, 15637), ("shadow-stdlib/src/shadow_stdlib.mli", 388, 15708, 15733), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 386, 15622, 15636), ("shadow-stdlib/src/shadow_stdlib.mli", 388, 15708, 15734), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 386, 15622, 15636), ("shadow-stdlib/src/shadow_stdlib.mli", 388, 15708, 15734), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 386, 15622, 15622), ("shadow-stdlib/src/shadow_stdlib.mli", 388, 15708, 15735), 0))], Tag1 ("Shadow_stdlib", 66)), 0); (("asin", 17318), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -649), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -648), 0), 100000000, 0, -647), (("caml_asin_float", 1, 0, "asin", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 390, 15737, 15798), ("shadow-stdlib/src/shadow_stdlib.mli", 390, 15737, 15805), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 390, 15737, 15795), ("shadow-stdlib/src/shadow_stdlib.mli", 390, 15737, 15806), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 390, 15737, 15810), ("shadow-stdlib/src/shadow_stdlib.mli", 390, 15737, 15817), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 390, 15737, 15807), ("shadow-stdlib/src/shadow_stdlib.mli", 390, 15737, 15818), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 391, 15819, 15822), ("shadow-stdlib/src/shadow_stdlib.mli", 391, 15819, 15832), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.asin] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 391, 15819, 15834), ("shadow-stdlib/src/shadow_stdlib.mli", 393, 15905, 15930), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 391, 15819, 15833), ("shadow-stdlib/src/shadow_stdlib.mli", 393, 15905, 15931), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 391, 15819, 15833), ("shadow-stdlib/src/shadow_stdlib.mli", 393, 15905, 15931), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 391, 15819, 15819), ("shadow-stdlib/src/shadow_stdlib.mli", 393, 15905, 15932), 0))], Tag1 ("Shadow_stdlib", 67)), 0); (("atan", 17319), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -646), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -645), 0), 100000000, 0, -644), (("caml_atan_float", 1, 0, "atan", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 395, 15934, 15995), ("shadow-stdlib/src/shadow_stdlib.mli", 395, 15934, 16002), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 395, 15934, 15992), ("shadow-stdlib/src/shadow_stdlib.mli", 395, 15934, 16003), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 395, 15934, 16007), ("shadow-stdlib/src/shadow_stdlib.mli", 395, 15934, 16014), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 395, 15934, 16004), ("shadow-stdlib/src/shadow_stdlib.mli", 395, 15934, 16015), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 396, 16016, 16019), ("shadow-stdlib/src/shadow_stdlib.mli", 396, 16016, 16029), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.atan] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 396, 16016, 16031), ("shadow-stdlib/src/shadow_stdlib.mli", 398, 16102, 16127), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 396, 16016, 16030), ("shadow-stdlib/src/shadow_stdlib.mli", 398, 16102, 16128), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 396, 16016, 16030), ("shadow-stdlib/src/shadow_stdlib.mli", 398, 16102, 16128), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 396, 16016, 16016), ("shadow-stdlib/src/shadow_stdlib.mli", 398, 16102, 16129), 0))], Tag1 ("Shadow_stdlib", 68)), 0); (("atan2", 17320), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -643), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -642), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -641), 0), 100000000, 0, -640), 0), 100000000, 0, -639), (("caml_atan2_float", 2, 0, "atan2", [1; 1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 400, 16131, 16204), ("shadow-stdlib/src/shadow_stdlib.mli", 400, 16131, 16211), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 400, 16131, 16201), ("shadow-stdlib/src/shadow_stdlib.mli", 400, 16131, 16212), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 400, 16131, 16216), ("shadow-stdlib/src/shadow_stdlib.mli", 400, 16131, 16223), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 400, 16131, 16213), ("shadow-stdlib/src/shadow_stdlib.mli", 400, 16131, 16224), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 401, 16225, 16228), ("shadow-stdlib/src/shadow_stdlib.mli", 401, 16225, 16238), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.atan2] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 401, 16225, 16240), ("shadow-stdlib/src/shadow_stdlib.mli", 403, 16311, 16337), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 401, 16225, 16239), ("shadow-stdlib/src/shadow_stdlib.mli", 403, 16311, 16338), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 401, 16225, 16239), ("shadow-stdlib/src/shadow_stdlib.mli", 403, 16311, 16338), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 401, 16225, 16225), ("shadow-stdlib/src/shadow_stdlib.mli", 403, 16311, 16339), 0))], Tag1 ("Shadow_stdlib", 69)), 0); (("hypot", 17321), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -638), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -637), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -636), 0), 100000000, 0, -635), 0), 100000000, 0, -634), (("caml_hypot_float", 2, 0, "caml_hypot", [1; 1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 405, 16341, 16419), ("shadow-stdlib/src/shadow_stdlib.mli", 405, 16341, 16426), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 405, 16341, 16416), ("shadow-stdlib/src/shadow_stdlib.mli", 405, 16341, 16427), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 405, 16341, 16431), ("shadow-stdlib/src/shadow_stdlib.mli", 405, 16341, 16438), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 405, 16341, 16428), ("shadow-stdlib/src/shadow_stdlib.mli", 405, 16341, 16439), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 406, 16440, 16443), ("shadow-stdlib/src/shadow_stdlib.mli", 406, 16440, 16453), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.hypot] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 406, 16440, 16455), ("shadow-stdlib/src/shadow_stdlib.mli", 408, 16526, 16552), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 406, 16440, 16454), ("shadow-stdlib/src/shadow_stdlib.mli", 408, 16526, 16553), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 406, 16440, 16454), ("shadow-stdlib/src/shadow_stdlib.mli", 408, 16526, 16553), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 406, 16440, 16440), ("shadow-stdlib/src/shadow_stdlib.mli", 408, 16526, 16554), 0))], Tag1 ("Shadow_stdlib", 70)), 0); (("cosh", 17322), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -633), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -632), 0), 100000000, 0, -631), (("caml_cosh_float", 1, 0, "cosh", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 410, 16556, 16617), ("shadow-stdlib/src/shadow_stdlib.mli", 410, 16556, 16624), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 410, 16556, 16614), ("shadow-stdlib/src/shadow_stdlib.mli", 410, 16556, 16625), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 410, 16556, 16629), ("shadow-stdlib/src/shadow_stdlib.mli", 410, 16556, 16636), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 410, 16556, 16626), ("shadow-stdlib/src/shadow_stdlib.mli", 410, 16556, 16637), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 411, 16638, 16641), ("shadow-stdlib/src/shadow_stdlib.mli", 411, 16638, 16651), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.cosh] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 411, 16638, 16653), ("shadow-stdlib/src/shadow_stdlib.mli", 413, 16724, 16749), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 411, 16638, 16652), ("shadow-stdlib/src/shadow_stdlib.mli", 413, 16724, 16750), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 411, 16638, 16652), ("shadow-stdlib/src/shadow_stdlib.mli", 413, 16724, 16750), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 411, 16638, 16638), ("shadow-stdlib/src/shadow_stdlib.mli", 413, 16724, 16751), 0))], Tag1 ("Shadow_stdlib", 71)), 0); (("sinh", 17323), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -630), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -629), 0), 100000000, 0, -628), (("caml_sinh_float", 1, 0, "sinh", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 415, 16753, 16814), ("shadow-stdlib/src/shadow_stdlib.mli", 415, 16753, 16821), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 415, 16753, 16811), ("shadow-stdlib/src/shadow_stdlib.mli", 415, 16753, 16822), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 415, 16753, 16826), ("shadow-stdlib/src/shadow_stdlib.mli", 415, 16753, 16833), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 415, 16753, 16823), ("shadow-stdlib/src/shadow_stdlib.mli", 415, 16753, 16834), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 416, 16835, 16838), ("shadow-stdlib/src/shadow_stdlib.mli", 416, 16835, 16848), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.sinh] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 416, 16835, 16850), ("shadow-stdlib/src/shadow_stdlib.mli", 418, 16921, 16946), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 416, 16835, 16849), ("shadow-stdlib/src/shadow_stdlib.mli", 418, 16921, 16947), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 416, 16835, 16849), ("shadow-stdlib/src/shadow_stdlib.mli", 418, 16921, 16947), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 416, 16835, 16835), ("shadow-stdlib/src/shadow_stdlib.mli", 418, 16921, 16948), 0))], Tag1 ("Shadow_stdlib", 72)), 0); (("tanh", 17324), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -627), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -626), 0), 100000000, 0, -625), (("caml_tanh_float", 1, 0, "tanh", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 420, 16950, 17011), ("shadow-stdlib/src/shadow_stdlib.mli", 420, 16950, 17018), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 420, 16950, 17008), ("shadow-stdlib/src/shadow_stdlib.mli", 420, 16950, 17019), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 420, 16950, 17023), ("shadow-stdlib/src/shadow_stdlib.mli", 420, 16950, 17030), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 420, 16950, 17020), ("shadow-stdlib/src/shadow_stdlib.mli", 420, 16950, 17031), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 421, 17032, 17035), ("shadow-stdlib/src/shadow_stdlib.mli", 421, 17032, 17045), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.tanh] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 421, 17032, 17047), ("shadow-stdlib/src/shadow_stdlib.mli", 423, 17118, 17143), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 421, 17032, 17046), ("shadow-stdlib/src/shadow_stdlib.mli", 423, 17118, 17144), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 421, 17032, 17046), ("shadow-stdlib/src/shadow_stdlib.mli", 423, 17118, 17144), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 421, 17032, 17032), ("shadow-stdlib/src/shadow_stdlib.mli", 423, 17118, 17145), 0))], Tag1 ("Shadow_stdlib", 73)), 0); (("acosh", 17325), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -624), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -623), 0), 100000000, 0, -622), (("caml_acosh_float", 1, 0, "caml_acosh", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 425, 17147, 17216), ("shadow-stdlib/src/shadow_stdlib.mli", 425, 17147, 17223), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 425, 17147, 17213), ("shadow-stdlib/src/shadow_stdlib.mli", 425, 17147, 17224), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 425, 17147, 17228), ("shadow-stdlib/src/shadow_stdlib.mli", 425, 17147, 17235), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 425, 17147, 17225), ("shadow-stdlib/src/shadow_stdlib.mli", 425, 17147, 17236), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 426, 17237, 17240), ("shadow-stdlib/src/shadow_stdlib.mli", 426, 17237, 17250), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.acosh] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 426, 17237, 17252), ("shadow-stdlib/src/shadow_stdlib.mli", 428, 17323, 17349), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 426, 17237, 17251), ("shadow-stdlib/src/shadow_stdlib.mli", 428, 17323, 17350), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 426, 17237, 17251), ("shadow-stdlib/src/shadow_stdlib.mli", 428, 17323, 17350), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 426, 17237, 17237), ("shadow-stdlib/src/shadow_stdlib.mli", 428, 17323, 17351), 0))], Tag1 ("Shadow_stdlib", 74)), 0); (("asinh", 17326), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -621), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -620), 0), 100000000, 0, -619), (("caml_asinh_float", 1, 0, "caml_asinh", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 430, 17353, 17422), ("shadow-stdlib/src/shadow_stdlib.mli", 430, 17353, 17429), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 430, 17353, 17419), ("shadow-stdlib/src/shadow_stdlib.mli", 430, 17353, 17430), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 430, 17353, 17434), ("shadow-stdlib/src/shadow_stdlib.mli", 430, 17353, 17441), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 430, 17353, 17431), ("shadow-stdlib/src/shadow_stdlib.mli", 430, 17353, 17442), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 431, 17443, 17446), ("shadow-stdlib/src/shadow_stdlib.mli", 431, 17443, 17456), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.asinh] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 431, 17443, 17458), ("shadow-stdlib/src/shadow_stdlib.mli", 433, 17529, 17555), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 431, 17443, 17457), ("shadow-stdlib/src/shadow_stdlib.mli", 433, 17529, 17556), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 431, 17443, 17457), ("shadow-stdlib/src/shadow_stdlib.mli", 433, 17529, 17556), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 431, 17443, 17443), ("shadow-stdlib/src/shadow_stdlib.mli", 433, 17529, 17557), 0))], Tag1 ("Shadow_stdlib", 75)), 0); (("atanh", 17327), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -618), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -617), 0), 100000000, 0, -616), (("caml_atanh_float", 1, 0, "caml_atanh", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 435, 17559, 17628), ("shadow-stdlib/src/shadow_stdlib.mli", 435, 17559, 17635), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 435, 17559, 17625), ("shadow-stdlib/src/shadow_stdlib.mli", 435, 17559, 17636), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 435, 17559, 17640), ("shadow-stdlib/src/shadow_stdlib.mli", 435, 17559, 17647), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 435, 17559, 17637), ("shadow-stdlib/src/shadow_stdlib.mli", 435, 17559, 17648), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 436, 17649, 17652), ("shadow-stdlib/src/shadow_stdlib.mli", 436, 17649, 17662), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.atanh] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 436, 17649, 17664), ("shadow-stdlib/src/shadow_stdlib.mli", 438, 17735, 17761), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 436, 17649, 17663), ("shadow-stdlib/src/shadow_stdlib.mli", 438, 17735, 17762), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 436, 17649, 17663), ("shadow-stdlib/src/shadow_stdlib.mli", 438, 17735, 17762), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 436, 17649, 17649), ("shadow-stdlib/src/shadow_stdlib.mli", 438, 17735, 17763), 0))], Tag1 ("Shadow_stdlib", 76)), 0); (("ceil", 17328), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -615), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -614), 0), 100000000, 0, -613), (("caml_ceil_float", 1, 0, "ceil", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 440, 17765, 17826), ("shadow-stdlib/src/shadow_stdlib.mli", 440, 17765, 17833), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 440, 17765, 17823), ("shadow-stdlib/src/shadow_stdlib.mli", 440, 17765, 17834), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 440, 17765, 17838), ("shadow-stdlib/src/shadow_stdlib.mli", 440, 17765, 17845), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 440, 17765, 17835), ("shadow-stdlib/src/shadow_stdlib.mli", 440, 17765, 17846), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 441, 17847, 17850), ("shadow-stdlib/src/shadow_stdlib.mli", 441, 17847, 17860), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.round_up] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 441, 17847, 17862), ("shadow-stdlib/src/shadow_stdlib.mli", 443, 17933, 17962), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 441, 17847, 17861), ("shadow-stdlib/src/shadow_stdlib.mli", 443, 17933, 17963), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 441, 17847, 17861), ("shadow-stdlib/src/shadow_stdlib.mli", 443, 17933, 17963), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 441, 17847, 17847), ("shadow-stdlib/src/shadow_stdlib.mli", 443, 17933, 17964), 0))], Tag1 ("Shadow_stdlib", 77)), 0); (("floor", 17329), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -612), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -611), 0), 100000000, 0, -610), (("caml_floor_float", 1, 0, "floor", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 445, 17966, 18030), ("shadow-stdlib/src/shadow_stdlib.mli", 445, 17966, 18037), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 445, 17966, 18027), ("shadow-stdlib/src/shadow_stdlib.mli", 445, 17966, 18038), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 445, 17966, 18042), ("shadow-stdlib/src/shadow_stdlib.mli", 445, 17966, 18049), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 445, 17966, 18039), ("shadow-stdlib/src/shadow_stdlib.mli", 445, 17966, 18050), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 446, 18051, 18054), ("shadow-stdlib/src/shadow_stdlib.mli", 446, 18051, 18064), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.round_down] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 446, 18051, 18066), ("shadow-stdlib/src/shadow_stdlib.mli", 448, 18137, 18168), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 446, 18051, 18065), ("shadow-stdlib/src/shadow_stdlib.mli", 448, 18137, 18169), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 446, 18051, 18065), ("shadow-stdlib/src/shadow_stdlib.mli", 448, 18137, 18169), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 446, 18051, 18051), ("shadow-stdlib/src/shadow_stdlib.mli", 448, 18137, 18170), 0))], Tag1 ("Shadow_stdlib", 78)), 0); (("abs_float", 17330), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -609), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -608), 0), 100000000, 0, -607), (("%absfloat", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 451, 18222, 18225), ("shadow-stdlib/src/shadow_stdlib.mli", 451, 18222, 18235), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.abs_float] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 451, 18222, 18237), ("shadow-stdlib/src/shadow_stdlib.mli", 454, 18378, 18423), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 451, 18222, 18236), ("shadow-stdlib/src/shadow_stdlib.mli", 454, 18378, 18424), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 451, 18222, 18236), ("shadow-stdlib/src/shadow_stdlib.mli", 454, 18378, 18424), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 451, 18222, 18222), ("shadow-stdlib/src/shadow_stdlib.mli", 454, 18378, 18425), 0))], Tag1 ("Shadow_stdlib", 79)), 0); (("copysign", 17331), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -606), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -605), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -604), 0), 100000000, 0, -603), 0), 100000000, 0, -602), (("caml_copysign_float", 2, 0, "caml_copysign", [1; 1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 456, 18427, 18514), ("shadow-stdlib/src/shadow_stdlib.mli", 456, 18427, 18521), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 456, 18427, 18511), ("shadow-stdlib/src/shadow_stdlib.mli", 456, 18427, 18522), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 456, 18427, 18526), ("shadow-stdlib/src/shadow_stdlib.mli", 456, 18427, 18533), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 456, 18427, 18523), ("shadow-stdlib/src/shadow_stdlib.mli", 456, 18427, 18534), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 457, 18535, 18538), ("shadow-stdlib/src/shadow_stdlib.mli", 457, 18535, 18548), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.copysign] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 457, 18535, 18550), ("shadow-stdlib/src/shadow_stdlib.mli", 459, 18621, 18650), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 457, 18535, 18549), ("shadow-stdlib/src/shadow_stdlib.mli", 459, 18621, 18651), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 457, 18535, 18549), ("shadow-stdlib/src/shadow_stdlib.mli", 459, 18621, 18651), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 457, 18535, 18535), ("shadow-stdlib/src/shadow_stdlib.mli", 459, 18621, 18652), 0))], Tag1 ("Shadow_stdlib", 80)), 0); (("mod_float", 17332), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -601), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -600), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -599), 0), 100000000, 0, -598), 0), 100000000, 0, -597), (("caml_fmod_float", 2, 0, "fmod", [1; 1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 461, 18654, 18729), ("shadow-stdlib/src/shadow_stdlib.mli", 461, 18654, 18736), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 461, 18654, 18726), ("shadow-stdlib/src/shadow_stdlib.mli", 461, 18654, 18737), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 461, 18654, 18741), ("shadow-stdlib/src/shadow_stdlib.mli", 461, 18654, 18748), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 461, 18654, 18738), ("shadow-stdlib/src/shadow_stdlib.mli", 461, 18654, 18749), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 462, 18750, 18753), ("shadow-stdlib/src/shadow_stdlib.mli", 462, 18750, 18763), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.mod_float] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 462, 18750, 18765), ("shadow-stdlib/src/shadow_stdlib.mli", 464, 18836, 18866), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 462, 18750, 18764), ("shadow-stdlib/src/shadow_stdlib.mli", 464, 18836, 18867), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 462, 18750, 18764), ("shadow-stdlib/src/shadow_stdlib.mli", 464, 18836, 18867), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 462, 18750, 18750), ("shadow-stdlib/src/shadow_stdlib.mli", 464, 18836, 18868), 0))], Tag1 ("Shadow_stdlib", 81)), 0); (("frexp", 17333), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -596), (Tag2 ([(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -594); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -595)]), 100000000, 0, -593), 0), 100000000, 0, -592), (("caml_frexp_float", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 467, 18929, 18932), ("shadow-stdlib/src/shadow_stdlib.mli", 467, 18929, 18942), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.frexp] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 467, 18929, 18944), ("shadow-stdlib/src/shadow_stdlib.mli", 469, 19015, 19041), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 467, 18929, 18943), ("shadow-stdlib/src/shadow_stdlib.mli", 469, 19015, 19042), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 467, 18929, 18943), ("shadow-stdlib/src/shadow_stdlib.mli", 469, 19015, 19042), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 467, 18929, 18929), ("shadow-stdlib/src/shadow_stdlib.mli", 469, 19015, 19043), 0))], Tag1 ("Shadow_stdlib", 82)), 0); (("ldexp", 17334), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -591), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -590), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -589), 0), 100000000, 0, -588), 0), 100000000, 0, -587), (("caml_ldexp_float", 2, 0, "caml_ldexp_float_unboxed", [1; 2], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 471, 19045, 19175), ("shadow-stdlib/src/shadow_stdlib.mli", 471, 19045, 19182), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 471, 19045, 19172), ("shadow-stdlib/src/shadow_stdlib.mli", 471, 19045, 19183), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 472, 19184, 19187), ("shadow-stdlib/src/shadow_stdlib.mli", 472, 19184, 19197), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.ldexp] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 472, 19184, 19199), ("shadow-stdlib/src/shadow_stdlib.mli", 474, 19270, 19296), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 472, 19184, 19198), ("shadow-stdlib/src/shadow_stdlib.mli", 474, 19270, 19297), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 472, 19184, 19198), ("shadow-stdlib/src/shadow_stdlib.mli", 474, 19270, 19297), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 472, 19184, 19184), ("shadow-stdlib/src/shadow_stdlib.mli", 474, 19270, 19298), 0))], Tag1 ("Shadow_stdlib", 83)), 0); (("modf", 17335), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -586), (Tag2 ([(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -584); (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -585)]), 100000000, 0, -583), 0), 100000000, 0, -582), (("caml_modf_float", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 477, 19359, 19362), ("shadow-stdlib/src/shadow_stdlib.mli", 477, 19359, 19372), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.modf] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 477, 19359, 19374), ("shadow-stdlib/src/shadow_stdlib.mli", 479, 19445, 19470), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 477, 19359, 19373), ("shadow-stdlib/src/shadow_stdlib.mli", 479, 19445, 19471), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 477, 19359, 19373), ("shadow-stdlib/src/shadow_stdlib.mli", 479, 19445, 19471), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 477, 19359, 19359), ("shadow-stdlib/src/shadow_stdlib.mli", 479, 19445, 19472), 0))], Tag1 ("Shadow_stdlib", 84)), 0); (("float", 17336), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -581), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -580), 0), 100000000, 0, -579), (("%floatofint", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 482, 19520, 19523), ("shadow-stdlib/src/shadow_stdlib.mli", 482, 19520, 19533), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.of_int] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 482, 19520, 19535), ("shadow-stdlib/src/shadow_stdlib.mli", 484, 19606, 19633), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 482, 19520, 19534), ("shadow-stdlib/src/shadow_stdlib.mli", 484, 19606, 19634), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 482, 19520, 19534), ("shadow-stdlib/src/shadow_stdlib.mli", 484, 19606, 19634), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 482, 19520, 19520), ("shadow-stdlib/src/shadow_stdlib.mli", 484, 19606, 19635), 0))], Tag1 ("Shadow_stdlib", 85)), 0); (("float_of_int", 17337), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -578), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -577), 0), 100000000, 0, -576), (("%floatofint", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 487, 19690, 19693), ("shadow-stdlib/src/shadow_stdlib.mli", 487, 19690, 19703), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.of_int] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 487, 19690, 19705), ("shadow-stdlib/src/shadow_stdlib.mli", 489, 19776, 19803), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 487, 19690, 19704), ("shadow-stdlib/src/shadow_stdlib.mli", 489, 19776, 19804), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 487, 19690, 19704), ("shadow-stdlib/src/shadow_stdlib.mli", 489, 19776, 19804), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 487, 19690, 19690), ("shadow-stdlib/src/shadow_stdlib.mli", 489, 19776, 19805), 0))], Tag1 ("Shadow_stdlib", 86)), 0); (("truncate", 17338), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -575), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -574), 0), 100000000, 0, -573), (("%intoffloat", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 492, 19856, 19859), ("shadow-stdlib/src/shadow_stdlib.mli", 492, 19856, 19869), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Int.of_float] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 492, 19856, 19871), ("shadow-stdlib/src/shadow_stdlib.mli", 494, 19942, 19969), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 492, 19856, 19870), ("shadow-stdlib/src/shadow_stdlib.mli", 494, 19942, 19970), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 492, 19856, 19870), ("shadow-stdlib/src/shadow_stdlib.mli", 494, 19942, 19970), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 492, 19856, 19856), ("shadow-stdlib/src/shadow_stdlib.mli", 494, 19942, 19971), 0))], Tag1 ("Shadow_stdlib", 87)), 0); (("int_of_float", 17339), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -572), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -571), 0), 100000000, 0, -570), (("%intoffloat", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 497, 20026, 20029), ("shadow-stdlib/src/shadow_stdlib.mli", 497, 20026, 20039), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Int.of_float] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 497, 20026, 20041), ("shadow-stdlib/src/shadow_stdlib.mli", 499, 20112, 20139), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 497, 20026, 20040), ("shadow-stdlib/src/shadow_stdlib.mli", 499, 20112, 20140), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 497, 20026, 20040), ("shadow-stdlib/src/shadow_stdlib.mli", 499, 20112, 20140), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 497, 20026, 20026), ("shadow-stdlib/src/shadow_stdlib.mli", 499, 20112, 20141), 0))], Tag1 ("Shadow_stdlib", 88)), 0); (("infinity", 17340), ((Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -569), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 502, 20164, 20167), ("shadow-stdlib/src/shadow_stdlib.mli", 502, 20164, 20177), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.infinity] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 502, 20164, 20179), ("shadow-stdlib/src/shadow_stdlib.mli", 504, 20250, 20279), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 502, 20164, 20178), ("shadow-stdlib/src/shadow_stdlib.mli", 504, 20250, 20280), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 502, 20164, 20178), ("shadow-stdlib/src/shadow_stdlib.mli", 504, 20250, 20280), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 502, 20164, 20164), ("shadow-stdlib/src/shadow_stdlib.mli", 504, 20250, 20281), 0))], Tag1 ("Shadow_stdlib", 89)), 0); (("neg_infinity", 17341), ((Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -568), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 507, 20308, 20311), ("shadow-stdlib/src/shadow_stdlib.mli", 507, 20308, 20321), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.neg_infinity] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 507, 20308, 20323), ("shadow-stdlib/src/shadow_stdlib.mli", 509, 20394, 20427), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 507, 20308, 20322), ("shadow-stdlib/src/shadow_stdlib.mli", 509, 20394, 20428), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 507, 20308, 20322), ("shadow-stdlib/src/shadow_stdlib.mli", 509, 20394, 20428), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 507, 20308, 20308), ("shadow-stdlib/src/shadow_stdlib.mli", 509, 20394, 20429), 0))], Tag1 ("Shadow_stdlib", 90)), 0); (("nan", 17342), ((Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -567), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 512, 20447, 20450), ("shadow-stdlib/src/shadow_stdlib.mli", 512, 20447, 20460), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.nan] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 512, 20447, 20462), ("shadow-stdlib/src/shadow_stdlib.mli", 514, 20533, 20557), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 512, 20447, 20461), ("shadow-stdlib/src/shadow_stdlib.mli", 514, 20533, 20558), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 512, 20447, 20461), ("shadow-stdlib/src/shadow_stdlib.mli", 514, 20533, 20558), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 512, 20447, 20447), ("shadow-stdlib/src/shadow_stdlib.mli", 514, 20533, 20559), 0))], Tag1 ("Shadow_stdlib", 91)), 0); (("max_float", 17343), ((Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -566), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 517, 20583, 20586), ("shadow-stdlib/src/shadow_stdlib.mli", 517, 20583, 20596), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.max_finite_value] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 517, 20583, 20598), ("shadow-stdlib/src/shadow_stdlib.mli", 519, 20669, 20706), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 517, 20583, 20597), ("shadow-stdlib/src/shadow_stdlib.mli", 519, 20669, 20707), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 517, 20583, 20597), ("shadow-stdlib/src/shadow_stdlib.mli", 519, 20669, 20707), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 517, 20583, 20583), ("shadow-stdlib/src/shadow_stdlib.mli", 519, 20669, 20708), 0))], Tag1 ("Shadow_stdlib", 92)), 0); (("min_float", 17344), ((Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -565), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 522, 20732, 20735), ("shadow-stdlib/src/shadow_stdlib.mli", 522, 20732, 20745), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.min_positive_normal_value] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 522, 20732, 20747), ("shadow-stdlib/src/shadow_stdlib.mli", 524, 20818, 20864), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 522, 20732, 20746), ("shadow-stdlib/src/shadow_stdlib.mli", 524, 20818, 20865), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 522, 20732, 20746), ("shadow-stdlib/src/shadow_stdlib.mli", 524, 20818, 20865), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 522, 20732, 20732), ("shadow-stdlib/src/shadow_stdlib.mli", 524, 20818, 20866), 0))], Tag1 ("Shadow_stdlib", 93)), 0); (("epsilon_float", 17345), ((Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -564), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 527, 20894, 20897), ("shadow-stdlib/src/shadow_stdlib.mli", 527, 20894, 20907), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.epsilon_float] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 527, 20894, 20909), ("shadow-stdlib/src/shadow_stdlib.mli", 529, 20980, 21014), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 527, 20894, 20908), ("shadow-stdlib/src/shadow_stdlib.mli", 529, 20980, 21015), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 527, 20894, 20908), ("shadow-stdlib/src/shadow_stdlib.mli", 529, 20980, 21015), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 527, 20894, 20894), ("shadow-stdlib/src/shadow_stdlib.mli", 529, 20980, 21016), 0))], Tag1 ("Shadow_stdlib", 94)), 0); Tag1 (("fpclass", 17346), (0, 0, Tag1 ([(("FP_normal", 365), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 96)); (("FP_subnormal", 366), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 97)); (("FP_zero", 367), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 98)); (("FP_infinite", 368), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 99)); (("FP_nan", 369), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 100))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "fpclass"), 0, (0)), 100000000, 0, -563)), 0, 0, 0, 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 532, 21115, 21118), ("shadow-stdlib/src/shadow_stdlib.mli", 532, 21115, 21128), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.fpclass instead", (("shadow-stdlib/src/shadow_stdlib.mli", 532, 21115, 21130), ("shadow-stdlib/src/shadow_stdlib.mli", 536, 21351, 21398), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 532, 21115, 21129), ("shadow-stdlib/src/shadow_stdlib.mli", 536, 21351, 21399), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 532, 21115, 21129), ("shadow-stdlib/src/shadow_stdlib.mli", 536, 21351, 21399), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 532, 21115, 21115), ("shadow-stdlib/src/shadow_stdlib.mli", 536, 21351, 21400), 0))], 1, 0, Tag1 ("Shadow_stdlib", 95)), 0, 0); (("classify_float", 17347), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -562), (Tag3 ((("fpclass", 17346)), 0, (0)), 100000000, 0, -561), 0), 100000000, 0, -560), (("caml_classify_float", 1, 0, "caml_classify_float_unboxed", [1], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 538, 21402, 21515), ("shadow-stdlib/src/shadow_stdlib.mli", 538, 21402, 21522), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 538, 21402, 21512), ("shadow-stdlib/src/shadow_stdlib.mli", 538, 21402, 21523), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 539, 21524, 21527), ("shadow-stdlib/src/shadow_stdlib.mli", 539, 21524, 21537), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.classify] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 539, 21524, 21539), ("shadow-stdlib/src/shadow_stdlib.mli", 541, 21610, 21639), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 539, 21524, 21538), ("shadow-stdlib/src/shadow_stdlib.mli", 541, 21610, 21640), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 539, 21524, 21538), ("shadow-stdlib/src/shadow_stdlib.mli", 541, 21610, 21640), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 539, 21524, 21524), ("shadow-stdlib/src/shadow_stdlib.mli", 541, 21610, 21641), 0))], Tag1 ("Shadow_stdlib", 101)), 0); (("int_of_char", 17348), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -559), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -558), 0), 100000000, 0, -557), (("%identity", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 550, 21932, 21935), ("shadow-stdlib/src/shadow_stdlib.mli", 550, 21932, 21945), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Char.to_int] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 550, 21932, 21947), ("shadow-stdlib/src/shadow_stdlib.mli", 552, 22018, 22044), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 550, 21932, 21946), ("shadow-stdlib/src/shadow_stdlib.mli", 552, 22018, 22045), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 550, 21932, 21946), ("shadow-stdlib/src/shadow_stdlib.mli", 552, 22018, 22045), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 550, 21932, 21932), ("shadow-stdlib/src/shadow_stdlib.mli", 552, 22018, 22046), 0))], Tag1 ("Shadow_stdlib", 103)), 0); (("char_of_int", 17349), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -556), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -555), 0), 100000000, 0, -554), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 555, 22078, 22081), ("shadow-stdlib/src/shadow_stdlib.mli", 555, 22078, 22091), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Char.of_int_exn] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 555, 22078, 22093), ("shadow-stdlib/src/shadow_stdlib.mli", 557, 22164, 22194), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 555, 22078, 22092), ("shadow-stdlib/src/shadow_stdlib.mli", 557, 22164, 22195), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 555, 22078, 22092), ("shadow-stdlib/src/shadow_stdlib.mli", 557, 22164, 22195), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 555, 22078, 22078), ("shadow-stdlib/src/shadow_stdlib.mli", 557, 22164, 22196), 0))], Tag1 ("Shadow_stdlib", 104)), 0); (("string_of_bool", 17350), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -553), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -552), 0), 100000000, 0, -551), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 566, 22477, 22480), ("shadow-stdlib/src/shadow_stdlib.mli", 566, 22477, 22490), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Bool.to_string] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 566, 22477, 22492), ("shadow-stdlib/src/shadow_stdlib.mli", 568, 22563, 22592), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 566, 22477, 22491), ("shadow-stdlib/src/shadow_stdlib.mli", 568, 22563, 22593), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 566, 22477, 22491), ("shadow-stdlib/src/shadow_stdlib.mli", 568, 22563, 22593), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 566, 22477, 22477), ("shadow-stdlib/src/shadow_stdlib.mli", 568, 22563, 22594), 0))], Tag1 ("Shadow_stdlib", 106)), 0); (("bool_of_string_opt", 17351), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -550), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -549)], (0)), 100000000, 0, -548), 0), 100000000, 0, -547), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 571, 22643, 22646), ("shadow-stdlib/src/shadow_stdlib.mli", 571, 22643, 22656), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.bool_of_string_opt] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 571, 22643, 22658), ("shadow-stdlib/src/shadow_stdlib.mli", 574, 22799, 22853), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 571, 22643, 22657), ("shadow-stdlib/src/shadow_stdlib.mli", 574, 22799, 22854), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 571, 22643, 22657), ("shadow-stdlib/src/shadow_stdlib.mli", 574, 22799, 22854), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 571, 22643, 22643), ("shadow-stdlib/src/shadow_stdlib.mli", 574, 22799, 22855), 0))], Tag1 ("Shadow_stdlib", 107)), 0); (("bool_of_string", 17352), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -546), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -545), 0), 100000000, 0, -544), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 577, 22893, 22896), ("shadow-stdlib/src/shadow_stdlib.mli", 577, 22893, 22906), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Bool.of_string] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 577, 22893, 22908), ("shadow-stdlib/src/shadow_stdlib.mli", 579, 22979, 23008), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 577, 22893, 22907), ("shadow-stdlib/src/shadow_stdlib.mli", 579, 22979, 23009), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 577, 22893, 22907), ("shadow-stdlib/src/shadow_stdlib.mli", 579, 22979, 23009), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 577, 22893, 22893), ("shadow-stdlib/src/shadow_stdlib.mli", 579, 22979, 23010), 0))], Tag1 ("Shadow_stdlib", 108)), 0); (("string_of_int", 17353), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -543), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -542), 0), 100000000, 0, -541), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 582, 23046, 23049), ("shadow-stdlib/src/shadow_stdlib.mli", 582, 23046, 23059), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Int.to_string] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 582, 23046, 23061), ("shadow-stdlib/src/shadow_stdlib.mli", 584, 23132, 23160), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 582, 23046, 23060), ("shadow-stdlib/src/shadow_stdlib.mli", 584, 23132, 23161), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 582, 23046, 23060), ("shadow-stdlib/src/shadow_stdlib.mli", 584, 23132, 23161), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 582, 23046, 23046), ("shadow-stdlib/src/shadow_stdlib.mli", 584, 23132, 23162), 0))], Tag1 ("Shadow_stdlib", 109)), 0); (("int_of_string_opt", 17354), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -540), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -539)], (0)), 100000000, 0, -538), 0), 100000000, 0, -537), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 587, 23209, 23212), ("shadow-stdlib/src/shadow_stdlib.mli", 587, 23209, 23222), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.int_of_string_opt] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 587, 23209, 23224), ("shadow-stdlib/src/shadow_stdlib.mli", 590, 23365, 23418), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 587, 23209, 23223), ("shadow-stdlib/src/shadow_stdlib.mli", 590, 23365, 23419), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 587, 23209, 23223), ("shadow-stdlib/src/shadow_stdlib.mli", 590, 23365, 23419), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 587, 23209, 23209), ("shadow-stdlib/src/shadow_stdlib.mli", 590, 23365, 23420), 0))], Tag1 ("Shadow_stdlib", 110)), 0); (("int_of_string", 17355), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -536), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -535), 0), 100000000, 0, -534), (("caml_int_of_string", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 593, 23484, 23487), ("shadow-stdlib/src/shadow_stdlib.mli", 593, 23484, 23497), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Int.of_string] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 593, 23484, 23499), ("shadow-stdlib/src/shadow_stdlib.mli", 595, 23570, 23598), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 593, 23484, 23498), ("shadow-stdlib/src/shadow_stdlib.mli", 595, 23570, 23599), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 593, 23484, 23498), ("shadow-stdlib/src/shadow_stdlib.mli", 595, 23570, 23599), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 593, 23484, 23484), ("shadow-stdlib/src/shadow_stdlib.mli", 595, 23570, 23600), 0))], Tag1 ("Shadow_stdlib", 111)), 0); (("string_of_float", 17356), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -533), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -532), 0), 100000000, 0, -531), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 598, 23640, 23643), ("shadow-stdlib/src/shadow_stdlib.mli", 598, 23640, 23653), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.to_string] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 598, 23640, 23655), ("shadow-stdlib/src/shadow_stdlib.mli", 600, 23726, 23756), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 598, 23640, 23654), ("shadow-stdlib/src/shadow_stdlib.mli", 600, 23726, 23757), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 598, 23640, 23654), ("shadow-stdlib/src/shadow_stdlib.mli", 600, 23726, 23757), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 598, 23640, 23640), ("shadow-stdlib/src/shadow_stdlib.mli", 600, 23726, 23758), 0))], Tag1 ("Shadow_stdlib", 112)), 0); (("float_of_string_opt", 17357), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -530), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -529)], (0)), 100000000, 0, -528), 0), 100000000, 0, -527), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 603, 23809, 23812), ("shadow-stdlib/src/shadow_stdlib.mli", 603, 23809, 23822), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.float_of_string_opt] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 603, 23809, 23824), ("shadow-stdlib/src/shadow_stdlib.mli", 606, 23965, 24020), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 603, 23809, 23823), ("shadow-stdlib/src/shadow_stdlib.mli", 606, 23965, 24021), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 603, 23809, 23823), ("shadow-stdlib/src/shadow_stdlib.mli", 606, 23965, 24021), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 603, 23809, 23809), ("shadow-stdlib/src/shadow_stdlib.mli", 606, 23965, 24022), 0))], Tag1 ("Shadow_stdlib", 113)), 0); Tag1 (("in_channel", 17358), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "in_channel"), 0, (0)), 100000000, 0, -526)), 0, 0, 0, 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 632, 24978, 24981), ("shadow-stdlib/src/shadow_stdlib.mli", 632, 24978, 24991), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.t] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 632, 24978, 24993), ("shadow-stdlib/src/shadow_stdlib.mli", 634, 25064, 25097), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 632, 24978, 24992), ("shadow-stdlib/src/shadow_stdlib.mli", 634, 25064, 25098), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 632, 24978, 24992), ("shadow-stdlib/src/shadow_stdlib.mli", 634, 25064, 25098), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 632, 24978, 24978), ("shadow-stdlib/src/shadow_stdlib.mli", 634, 25064, 25099), 0))], 0, 0, Tag1 ("Shadow_stdlib", 118)), 0, 0); Tag1 (("out_channel", 17359), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -525)), 0, 0, 0, 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 637, 25146, 25149), ("shadow-stdlib/src/shadow_stdlib.mli", 637, 25146, 25159), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.t] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 637, 25146, 25161), ("shadow-stdlib/src/shadow_stdlib.mli", 639, 25232, 25266), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 637, 25146, 25160), ("shadow-stdlib/src/shadow_stdlib.mli", 639, 25232, 25267), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 637, 25146, 25160), ("shadow-stdlib/src/shadow_stdlib.mli", 639, 25232, 25267), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 637, 25146, 25146), ("shadow-stdlib/src/shadow_stdlib.mli", 639, 25232, 25268), 0))], 0, 0, Tag1 ("Shadow_stdlib", 119)), 0, 0); (("stdin", 17360), ((Tag3 ((("in_channel", 17358)), 0, (0)), 100000000, 0, -524), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 642, 25293, 25296), ("shadow-stdlib/src/shadow_stdlib.mli", 642, 25293, 25306), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.stdin] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 642, 25293, 25308), ("shadow-stdlib/src/shadow_stdlib.mli", 644, 25379, 25405), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 642, 25293, 25307), ("shadow-stdlib/src/shadow_stdlib.mli", 644, 25379, 25406), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 642, 25293, 25307), ("shadow-stdlib/src/shadow_stdlib.mli", 644, 25379, 25406), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 642, 25293, 25293), ("shadow-stdlib/src/shadow_stdlib.mli", 644, 25379, 25407), 0))], Tag1 ("Shadow_stdlib", 120)), 0); (("stdout", 17361), ((Tag3 ((("out_channel", 17359)), 0, (0)), 100000000, 0, -523), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 647, 25434, 25437), ("shadow-stdlib/src/shadow_stdlib.mli", 647, 25434, 25447), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.stdout] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 647, 25434, 25449), ("shadow-stdlib/src/shadow_stdlib.mli", 649, 25520, 25547), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 647, 25434, 25448), ("shadow-stdlib/src/shadow_stdlib.mli", 649, 25520, 25548), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 647, 25434, 25448), ("shadow-stdlib/src/shadow_stdlib.mli", 649, 25520, 25548), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 647, 25434, 25434), ("shadow-stdlib/src/shadow_stdlib.mli", 649, 25520, 25549), 0))], Tag1 ("Shadow_stdlib", 121)), 0); (("stderr", 17362), ((Tag3 ((("out_channel", 17359)), 0, (0)), 100000000, 0, -522), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 652, 25576, 25579), ("shadow-stdlib/src/shadow_stdlib.mli", 652, 25576, 25589), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.stderr] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 652, 25576, 25591), ("shadow-stdlib/src/shadow_stdlib.mli", 654, 25662, 25689), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 652, 25576, 25590), ("shadow-stdlib/src/shadow_stdlib.mli", 654, 25662, 25690), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 652, 25576, 25590), ("shadow-stdlib/src/shadow_stdlib.mli", 654, 25662, 25690), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 652, 25576, 25576), ("shadow-stdlib/src/shadow_stdlib.mli", 654, 25662, 25691), 0))], Tag1 ("Shadow_stdlib", 122)), 0); (("print_char", 17363), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -521), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -520), 0), 100000000, 0, -519), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 657, 25723, 25726), ("shadow-stdlib/src/shadow_stdlib.mli", 657, 25723, 25736), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_char Stdio.stdout] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 657, 25723, 25738), ("shadow-stdlib/src/shadow_stdlib.mli", 659, 25809, 25866), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 657, 25723, 25737), ("shadow-stdlib/src/shadow_stdlib.mli", 659, 25809, 25867), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 657, 25723, 25737), ("shadow-stdlib/src/shadow_stdlib.mli", 659, 25809, 25867), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 657, 25723, 25723), ("shadow-stdlib/src/shadow_stdlib.mli", 659, 25809, 25868), 0))], Tag1 ("Shadow_stdlib", 123)), 0); (("print_string", 17364), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -518), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -517), 0), 100000000, 0, -516), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 662, 25904, 25907), ("shadow-stdlib/src/shadow_stdlib.mli", 662, 25904, 25917), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_string Stdio.stdout] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 662, 25904, 25919), ("shadow-stdlib/src/shadow_stdlib.mli", 664, 25990, 26049), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 662, 25904, 25918), ("shadow-stdlib/src/shadow_stdlib.mli", 664, 25990, 26050), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 662, 25904, 25918), ("shadow-stdlib/src/shadow_stdlib.mli", 664, 25990, 26050), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 662, 25904, 25904), ("shadow-stdlib/src/shadow_stdlib.mli", 664, 25990, 26051), 0))], Tag1 ("Shadow_stdlib", 124)), 0); (("print_bytes", 17365), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -515), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -514), 0), 100000000, 0, -513), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 667, 26085, 26088), ("shadow-stdlib/src/shadow_stdlib.mli", 667, 26085, 26098), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_bytes Stdio.stdout] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 667, 26085, 26100), ("shadow-stdlib/src/shadow_stdlib.mli", 669, 26171, 26229), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 667, 26085, 26099), ("shadow-stdlib/src/shadow_stdlib.mli", 669, 26171, 26230), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 667, 26085, 26099), ("shadow-stdlib/src/shadow_stdlib.mli", 669, 26171, 26230), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 667, 26085, 26085), ("shadow-stdlib/src/shadow_stdlib.mli", 669, 26171, 26231), 0))], Tag1 ("Shadow_stdlib", 125)), 0); (("print_int", 17366), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -512), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -511), 0), 100000000, 0, -510), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 672, 26261, 26264), ("shadow-stdlib/src/shadow_stdlib.mli", 672, 26261, 26274), 0)), ([([(Tag5 ((((("%"), (("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26367), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26368), 0))), (("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26367), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26368), 0), 0, 0), [(0, (Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.eprintf ", (("shadow-stdlib/src/shadow_stdlib.mli", 672, 26261, 26276), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26366), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 672, 26261, 26275), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26367), 0), 0, 0)); (0, (Tag5 ((((("d"), (("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26368), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26369), 0))), (("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26368), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26369), 0), 0, 0), [(0, (Tag1 (Tag2 ("] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26370), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26380), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26369), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26381), 0), 0, 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26368), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26381), 0), 0, 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 672, 26261, 26275), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26381), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 672, 26261, 26275), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26381), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 672, 26261, 26261), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26382), 0))], Tag1 ("Shadow_stdlib", 126)), 0); (("print_float", 17367), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -509), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -508), 0), 100000000, 0, -507), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 677, 26416, 26419), ("shadow-stdlib/src/shadow_stdlib.mli", 677, 26416, 26429), 0)), ([([(Tag5 ((((("%"), (("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26522), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26523), 0))), (("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26522), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26523), 0), 0, 0), [(0, (Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.eprintf ", (("shadow-stdlib/src/shadow_stdlib.mli", 677, 26416, 26431), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26521), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 677, 26416, 26430), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26522), 0), 0, 0)); (0, (Tag5 ((((("f"), (("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26523), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26524), 0))), (("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26523), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26524), 0), 0, 0), [(0, (Tag1 (Tag2 ("] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26525), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26535), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26524), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26536), 0), 0, 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26523), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26536), 0), 0, 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 677, 26416, 26430), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26536), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 677, 26416, 26430), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26536), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 677, 26416, 26416), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26537), 0))], Tag1 ("Shadow_stdlib", 127)), 0); (("print_endline", 17368), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -506), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -505), 0), 100000000, 0, -504), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 682, 26574, 26577), ("shadow-stdlib/src/shadow_stdlib.mli", 682, 26574, 26587), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.print_endline] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 682, 26574, 26589), ("shadow-stdlib/src/shadow_stdlib.mli", 684, 26660, 26694), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 682, 26574, 26588), ("shadow-stdlib/src/shadow_stdlib.mli", 684, 26660, 26695), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 682, 26574, 26588), ("shadow-stdlib/src/shadow_stdlib.mli", 684, 26660, 26695), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 682, 26574, 26574), ("shadow-stdlib/src/shadow_stdlib.mli", 684, 26660, 26696), 0))], Tag1 ("Shadow_stdlib", 128)), 0); (("print_newline", 17369), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -503), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -502), 0), 100000000, 0, -501), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 687, 26731, 26734), ("shadow-stdlib/src/shadow_stdlib.mli", 687, 26731, 26744), 0)), ([([(Tag5 ((((("%!"), (("shadow-stdlib/src/shadow_stdlib.mli", 690, 26838, 26838), ("shadow-stdlib/src/shadow_stdlib.mli", 690, 26838, 26840), 0))), (("shadow-stdlib/src/shadow_stdlib.mli", 690, 26838, 26838), ("shadow-stdlib/src/shadow_stdlib.mli", 690, 26838, 26840), 0), 0, 0), [(0, (Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.eprintf ", (("shadow-stdlib/src/shadow_stdlib.mli", 687, 26731, 26746), ("shadow-stdlib/src/shadow_stdlib.mli", 689, 26817, 26836), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 687, 26731, 26745), ("shadow-stdlib/src/shadow_stdlib.mli", 689, 26817, 26837), 0), 0, 0)); (0, (Tag1 (Tag2 ("] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 690, 26838, 26841), ("shadow-stdlib/src/shadow_stdlib.mli", 690, 26838, 26851), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 690, 26838, 26840), ("shadow-stdlib/src/shadow_stdlib.mli", 690, 26838, 26852), 0), 0, 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 687, 26731, 26745), ("shadow-stdlib/src/shadow_stdlib.mli", 690, 26838, 26852), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 687, 26731, 26745), ("shadow-stdlib/src/shadow_stdlib.mli", 690, 26838, 26852), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 687, 26731, 26731), ("shadow-stdlib/src/shadow_stdlib.mli", 690, 26838, 26853), 0))], Tag1 ("Shadow_stdlib", 129)), 0); (("prerr_char", 17370), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -500), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -499), 0), 100000000, 0, -498), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 693, 26885, 26888), ("shadow-stdlib/src/shadow_stdlib.mli", 693, 26885, 26898), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_char Stdio.stderr] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 693, 26885, 26900), ("shadow-stdlib/src/shadow_stdlib.mli", 695, 26971, 27028), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 693, 26885, 26899), ("shadow-stdlib/src/shadow_stdlib.mli", 695, 26971, 27029), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 693, 26885, 26899), ("shadow-stdlib/src/shadow_stdlib.mli", 695, 26971, 27029), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 693, 26885, 26885), ("shadow-stdlib/src/shadow_stdlib.mli", 695, 26971, 27030), 0))], Tag1 ("Shadow_stdlib", 130)), 0); (("prerr_string", 17371), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -497), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -496), 0), 100000000, 0, -495), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 698, 27066, 27069), ("shadow-stdlib/src/shadow_stdlib.mli", 698, 27066, 27079), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_string Stdio.stderr] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 698, 27066, 27081), ("shadow-stdlib/src/shadow_stdlib.mli", 700, 27152, 27211), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 698, 27066, 27080), ("shadow-stdlib/src/shadow_stdlib.mli", 700, 27152, 27212), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 698, 27066, 27080), ("shadow-stdlib/src/shadow_stdlib.mli", 700, 27152, 27212), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 698, 27066, 27066), ("shadow-stdlib/src/shadow_stdlib.mli", 700, 27152, 27213), 0))], Tag1 ("Shadow_stdlib", 131)), 0); (("prerr_bytes", 17372), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -494), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -493), 0), 100000000, 0, -492), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 703, 27247, 27250), ("shadow-stdlib/src/shadow_stdlib.mli", 703, 27247, 27260), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_bytes Stdio.stderr] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 703, 27247, 27262), ("shadow-stdlib/src/shadow_stdlib.mli", 705, 27333, 27391), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 703, 27247, 27261), ("shadow-stdlib/src/shadow_stdlib.mli", 705, 27333, 27392), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 703, 27247, 27261), ("shadow-stdlib/src/shadow_stdlib.mli", 705, 27333, 27392), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 703, 27247, 27247), ("shadow-stdlib/src/shadow_stdlib.mli", 705, 27333, 27393), 0))], Tag1 ("Shadow_stdlib", 132)), 0); (("prerr_int", 17373), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -491), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -490), 0), 100000000, 0, -489), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 708, 27423, 27426), ("shadow-stdlib/src/shadow_stdlib.mli", 708, 27423, 27436), 0)), ([([(Tag5 ((((("%"), (("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27529), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27530), 0))), (("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27529), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27530), 0), 0, 0), [(0, (Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.eprintf ", (("shadow-stdlib/src/shadow_stdlib.mli", 708, 27423, 27438), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27528), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 708, 27423, 27437), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27529), 0), 0, 0)); (0, (Tag5 ((((("d"), (("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27530), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27531), 0))), (("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27530), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27531), 0), 0, 0), [(0, (Tag1 (Tag2 ("] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27532), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27542), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27531), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27543), 0), 0, 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27530), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27543), 0), 0, 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 708, 27423, 27437), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27543), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 708, 27423, 27437), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27543), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 708, 27423, 27423), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27544), 0))], Tag1 ("Shadow_stdlib", 133)), 0); (("prerr_float", 17374), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -488), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -487), 0), 100000000, 0, -486), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 713, 27578, 27581), ("shadow-stdlib/src/shadow_stdlib.mli", 713, 27578, 27591), 0)), ([([(Tag5 ((((("%"), (("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27684), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27685), 0))), (("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27684), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27685), 0), 0, 0), [(0, (Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.eprintf ", (("shadow-stdlib/src/shadow_stdlib.mli", 713, 27578, 27593), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27683), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 713, 27578, 27592), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27684), 0), 0, 0)); (0, (Tag5 ((((("f"), (("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27685), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27686), 0))), (("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27685), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27686), 0), 0, 0), [(0, (Tag1 (Tag2 ("] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27687), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27697), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27686), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27698), 0), 0, 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27685), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27698), 0), 0, 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 713, 27578, 27592), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27698), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 713, 27578, 27592), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27698), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 713, 27578, 27578), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27699), 0))], Tag1 ("Shadow_stdlib", 134)), 0); (("prerr_endline", 17375), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -485), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -484), 0), 100000000, 0, -483), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 718, 27736, 27739), ("shadow-stdlib/src/shadow_stdlib.mli", 718, 27736, 27749), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.prerr_endline] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 718, 27736, 27751), ("shadow-stdlib/src/shadow_stdlib.mli", 720, 27822, 27856), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 718, 27736, 27750), ("shadow-stdlib/src/shadow_stdlib.mli", 720, 27822, 27857), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 718, 27736, 27750), ("shadow-stdlib/src/shadow_stdlib.mli", 720, 27822, 27857), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 718, 27736, 27736), ("shadow-stdlib/src/shadow_stdlib.mli", 720, 27822, 27858), 0))], Tag1 ("Shadow_stdlib", 135)), 0); (("prerr_newline", 17376), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -482), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -481), 0), 100000000, 0, -480), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 723, 27893, 27896), ("shadow-stdlib/src/shadow_stdlib.mli", 723, 27893, 27906), 0)), ([([(Tag5 ((((("%!"), (("shadow-stdlib/src/shadow_stdlib.mli", 726, 28000, 28000), ("shadow-stdlib/src/shadow_stdlib.mli", 726, 28000, 28002), 0))), (("shadow-stdlib/src/shadow_stdlib.mli", 726, 28000, 28000), ("shadow-stdlib/src/shadow_stdlib.mli", 726, 28000, 28002), 0), 0, 0), [(0, (Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.eprintf ", (("shadow-stdlib/src/shadow_stdlib.mli", 723, 27893, 27908), ("shadow-stdlib/src/shadow_stdlib.mli", 725, 27979, 27998), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 723, 27893, 27907), ("shadow-stdlib/src/shadow_stdlib.mli", 725, 27979, 27999), 0), 0, 0)); (0, (Tag1 (Tag2 ("] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 726, 28000, 28003), ("shadow-stdlib/src/shadow_stdlib.mli", 726, 28000, 28013), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 726, 28000, 28002), ("shadow-stdlib/src/shadow_stdlib.mli", 726, 28000, 28014), 0), 0, 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 723, 27893, 27907), ("shadow-stdlib/src/shadow_stdlib.mli", 726, 28000, 28014), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 723, 27893, 27907), ("shadow-stdlib/src/shadow_stdlib.mli", 726, 28000, 28014), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 723, 27893, 27893), ("shadow-stdlib/src/shadow_stdlib.mli", 726, 28000, 28015), 0))], Tag1 ("Shadow_stdlib", 136)), 0); (("read_line", 17377), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -479), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -478), 0), 100000000, 0, -477), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 729, 28048, 28051), ("shadow-stdlib/src/shadow_stdlib.mli", 729, 28048, 28061), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.input_line] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 729, 28048, 28063), ("shadow-stdlib/src/shadow_stdlib.mli", 731, 28134, 28176), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 729, 28048, 28062), ("shadow-stdlib/src/shadow_stdlib.mli", 731, 28134, 28177), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 729, 28048, 28062), ("shadow-stdlib/src/shadow_stdlib.mli", 731, 28134, 28177), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 729, 28048, 28048), ("shadow-stdlib/src/shadow_stdlib.mli", 731, 28134, 28178), 0))], Tag1 ("Shadow_stdlib", 137)), 0); (("read_int_opt", 17378), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -476), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -475)], (0)), 100000000, 0, -474), 0), 100000000, 0, -473), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 734, 28218, 28221), ("shadow-stdlib/src/shadow_stdlib.mli", 734, 28218, 28231), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.read_int_opt] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 734, 28218, 28233), ("shadow-stdlib/src/shadow_stdlib.mli", 737, 28374, 28422), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 734, 28218, 28232), ("shadow-stdlib/src/shadow_stdlib.mli", 737, 28374, 28423), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 734, 28218, 28232), ("shadow-stdlib/src/shadow_stdlib.mli", 737, 28374, 28423), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 734, 28218, 28218), ("shadow-stdlib/src/shadow_stdlib.mli", 737, 28374, 28424), 0))], Tag1 ("Shadow_stdlib", 138)), 0); (("read_int", 17379), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -472), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -471), 0), 100000000, 0, -470), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 740, 28453, 28456), ("shadow-stdlib/src/shadow_stdlib.mli", 740, 28453, 28466), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.read_int] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 740, 28453, 28468), ("shadow-stdlib/src/shadow_stdlib.mli", 743, 28609, 28653), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 740, 28453, 28467), ("shadow-stdlib/src/shadow_stdlib.mli", 743, 28609, 28654), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 740, 28453, 28467), ("shadow-stdlib/src/shadow_stdlib.mli", 743, 28609, 28654), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 740, 28453, 28453), ("shadow-stdlib/src/shadow_stdlib.mli", 743, 28609, 28655), 0))], Tag1 ("Shadow_stdlib", 139)), 0); (("read_float_opt", 17380), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -469), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -468)], (0)), 100000000, 0, -467), 0), 100000000, 0, -466), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 746, 28699, 28702), ("shadow-stdlib/src/shadow_stdlib.mli", 746, 28699, 28712), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.read_float_opt] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 746, 28699, 28714), ("shadow-stdlib/src/shadow_stdlib.mli", 749, 28855, 28905), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 746, 28699, 28713), ("shadow-stdlib/src/shadow_stdlib.mli", 749, 28855, 28906), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 746, 28699, 28713), ("shadow-stdlib/src/shadow_stdlib.mli", 749, 28855, 28906), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 746, 28699, 28699), ("shadow-stdlib/src/shadow_stdlib.mli", 749, 28855, 28907), 0))], Tag1 ("Shadow_stdlib", 140)), 0); (("read_float", 17381), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -465), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -464), 0), 100000000, 0, -463), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 752, 28940, 28943), ("shadow-stdlib/src/shadow_stdlib.mli", 752, 28940, 28953), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.read_float] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 752, 28940, 28955), ("shadow-stdlib/src/shadow_stdlib.mli", 755, 29096, 29142), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 752, 28940, 28954), ("shadow-stdlib/src/shadow_stdlib.mli", 755, 29096, 29143), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 752, 28940, 28954), ("shadow-stdlib/src/shadow_stdlib.mli", 755, 29096, 29143), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 752, 28940, 28940), ("shadow-stdlib/src/shadow_stdlib.mli", 755, 29096, 29144), 0))], Tag1 ("Shadow_stdlib", 141)), 0); Tag1 (("open_flag", 17382), (0, 0, Tag1 ([(("Open_rdonly", 412), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 143)); (("Open_wronly", 413), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 144)); (("Open_append", 414), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 145)); (("Open_creat", 415), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 146)); (("Open_trunc", 416), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 147)); (("Open_excl", 417), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 148)); (("Open_binary", 418), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 149)); (("Open_text", 419), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 150)); (("Open_nonblock", 420), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 151))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "open_flag"), 0, (0)), 100000000, 0, -462)), 0, 0, 0, 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 758, 29309, 29312), ("shadow-stdlib/src/shadow_stdlib.mli", 758, 29309, 29322), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.open_flag instead", (("shadow-stdlib/src/shadow_stdlib.mli", 758, 29309, 29324), ("shadow-stdlib/src/shadow_stdlib.mli", 762, 29545, 29594), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 758, 29309, 29323), ("shadow-stdlib/src/shadow_stdlib.mli", 762, 29545, 29595), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 758, 29309, 29323), ("shadow-stdlib/src/shadow_stdlib.mli", 762, 29545, 29595), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 758, 29309, 29309), ("shadow-stdlib/src/shadow_stdlib.mli", 762, 29545, 29596), 0))], 1, 0, Tag1 ("Shadow_stdlib", 142)), 0, 0); (("open_out", 17383), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -461), (Tag3 ((("out_channel", 17359)), 0, (0)), 100000000, 0, -460), 0), 100000000, 0, -459), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 765, 29635, 29638), ("shadow-stdlib/src/shadow_stdlib.mli", 765, 29635, 29648), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.create] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 765, 29635, 29650), ("shadow-stdlib/src/shadow_stdlib.mli", 767, 29721, 29760), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 765, 29635, 29649), ("shadow-stdlib/src/shadow_stdlib.mli", 767, 29721, 29761), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 765, 29635, 29649), ("shadow-stdlib/src/shadow_stdlib.mli", 767, 29721, 29761), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 765, 29635, 29635), ("shadow-stdlib/src/shadow_stdlib.mli", 767, 29721, 29762), 0))], Tag1 ("Shadow_stdlib", 152)), 0); (("open_out_bin", 17384), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -458), (Tag3 ((("out_channel", 17359)), 0, (0)), 100000000, 0, -457), 0), 100000000, 0, -456), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 770, 29805, 29808), ("shadow-stdlib/src/shadow_stdlib.mli", 770, 29805, 29818), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.create] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 770, 29805, 29820), ("shadow-stdlib/src/shadow_stdlib.mli", 772, 29891, 29930), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 770, 29805, 29819), ("shadow-stdlib/src/shadow_stdlib.mli", 772, 29891, 29931), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 770, 29805, 29819), ("shadow-stdlib/src/shadow_stdlib.mli", 772, 29891, 29931), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 770, 29805, 29805), ("shadow-stdlib/src/shadow_stdlib.mli", 772, 29891, 29932), 0))], Tag1 ("Shadow_stdlib", 153)), 0); (("open_out_gen", 17385), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("open_flag", 17382)), 0, (0)), 100000000, 0, -455)], (0)), 100000000, 0, -454), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -453), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -452), (Tag3 ((("out_channel", 17359)), 0, (0)), 100000000, 0, -451), 0), 100000000, 0, -450), 0), 100000000, 0, -449), 0), 100000000, 0, -448), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 775, 30000, 30003), ("shadow-stdlib/src/shadow_stdlib.mli", 775, 30000, 30013), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.open_out_gen] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 775, 30000, 30015), ("shadow-stdlib/src/shadow_stdlib.mli", 778, 30156, 30204), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 775, 30000, 30014), ("shadow-stdlib/src/shadow_stdlib.mli", 778, 30156, 30205), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 775, 30000, 30014), ("shadow-stdlib/src/shadow_stdlib.mli", 778, 30156, 30205), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 775, 30000, 30000), ("shadow-stdlib/src/shadow_stdlib.mli", 778, 30156, 30206), 0))], Tag1 ("Shadow_stdlib", 154)), 0); (("flush", 17386), ((Tag1 (0, (Tag3 ((("out_channel", 17359)), 0, (0)), 100000000, 0, -447), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -446), 0), 100000000, 0, -445), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 781, 30240, 30243), ("shadow-stdlib/src/shadow_stdlib.mli", 781, 30240, 30253), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.flush] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 781, 30240, 30255), ("shadow-stdlib/src/shadow_stdlib.mli", 783, 30326, 30364), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 781, 30240, 30254), ("shadow-stdlib/src/shadow_stdlib.mli", 783, 30326, 30365), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 781, 30240, 30254), ("shadow-stdlib/src/shadow_stdlib.mli", 783, 30326, 30365), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 781, 30240, 30240), ("shadow-stdlib/src/shadow_stdlib.mli", 783, 30326, 30366), 0))], Tag1 ("Shadow_stdlib", 155)), 0); (("flush_all", 17387), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -444), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -443), 0), 100000000, 0, -442), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 786, 30397, 30400), ("shadow-stdlib/src/shadow_stdlib.mli", 786, 30397, 30410), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.flush_all] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 786, 30397, 30412), ("shadow-stdlib/src/shadow_stdlib.mli", 789, 30553, 30598), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 786, 30397, 30411), ("shadow-stdlib/src/shadow_stdlib.mli", 789, 30553, 30599), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 786, 30397, 30411), ("shadow-stdlib/src/shadow_stdlib.mli", 789, 30553, 30599), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 786, 30397, 30397), ("shadow-stdlib/src/shadow_stdlib.mli", 789, 30553, 30600), 0))], Tag1 ("Shadow_stdlib", 156)), 0); (("output_char", 17388), ((Tag1 (0, (Tag3 ((("out_channel", 17359)), 0, (0)), 100000000, 0, -441), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -440), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -439), 0), 100000000, 0, -438), 0), 100000000, 0, -437), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 792, 30648, 30651), ("shadow-stdlib/src/shadow_stdlib.mli", 792, 30648, 30661), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_char] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 792, 30648, 30663), ("shadow-stdlib/src/shadow_stdlib.mli", 794, 30734, 30778), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 792, 30648, 30662), ("shadow-stdlib/src/shadow_stdlib.mli", 794, 30734, 30779), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 792, 30648, 30662), ("shadow-stdlib/src/shadow_stdlib.mli", 794, 30734, 30779), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 792, 30648, 30648), ("shadow-stdlib/src/shadow_stdlib.mli", 794, 30734, 30780), 0))], Tag1 ("Shadow_stdlib", 157)), 0); (("output_string", 17389), ((Tag1 (0, (Tag3 ((("out_channel", 17359)), 0, (0)), 100000000, 0, -436), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -435), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -434), 0), 100000000, 0, -433), 0), 100000000, 0, -432), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 797, 30832, 30835), ("shadow-stdlib/src/shadow_stdlib.mli", 797, 30832, 30845), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_string] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 797, 30832, 30847), ("shadow-stdlib/src/shadow_stdlib.mli", 799, 30918, 30964), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 797, 30832, 30846), ("shadow-stdlib/src/shadow_stdlib.mli", 799, 30918, 30965), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 797, 30832, 30846), ("shadow-stdlib/src/shadow_stdlib.mli", 799, 30918, 30965), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 797, 30832, 30832), ("shadow-stdlib/src/shadow_stdlib.mli", 799, 30918, 30966), 0))], Tag1 ("Shadow_stdlib", 158)), 0); (("output_bytes", 17390), ((Tag1 (0, (Tag3 ((("out_channel", 17359)), 0, (0)), 100000000, 0, -431), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -430), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -429), 0), 100000000, 0, -428), 0), 100000000, 0, -427), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 802, 31016, 31019), ("shadow-stdlib/src/shadow_stdlib.mli", 802, 31016, 31029), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_bytes] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 802, 31016, 31031), ("shadow-stdlib/src/shadow_stdlib.mli", 804, 31102, 31147), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 802, 31016, 31030), ("shadow-stdlib/src/shadow_stdlib.mli", 804, 31102, 31148), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 802, 31016, 31030), ("shadow-stdlib/src/shadow_stdlib.mli", 804, 31102, 31148), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 802, 31016, 31016), ("shadow-stdlib/src/shadow_stdlib.mli", 804, 31102, 31149), 0))], Tag1 ("Shadow_stdlib", 159)), 0); (("output", 17391), ((Tag1 (0, (Tag3 ((("out_channel", 17359)), 0, (0)), 100000000, 0, -426), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -425), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -424), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -423), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -422), 0), 100000000, 0, -421), 0), 100000000, 0, -420), 0), 100000000, 0, -419), 0), 100000000, 0, -418), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 807, 31207, 31210), ("shadow-stdlib/src/shadow_stdlib.mli", 807, 31207, 31220), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 807, 31207, 31222), ("shadow-stdlib/src/shadow_stdlib.mli", 809, 31293, 31332), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 807, 31207, 31221), ("shadow-stdlib/src/shadow_stdlib.mli", 809, 31293, 31333), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 807, 31207, 31221), ("shadow-stdlib/src/shadow_stdlib.mli", 809, 31293, 31333), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 807, 31207, 31207), ("shadow-stdlib/src/shadow_stdlib.mli", 809, 31293, 31334), 0))], Tag1 ("Shadow_stdlib", 160)), 0); (("output_substring", 17392), ((Tag1 (0, (Tag3 ((("out_channel", 17359)), 0, (0)), 100000000, 0, -417), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -416), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -415), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -414), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -413), 0), 100000000, 0, -412), 0), 100000000, 0, -411), 0), 100000000, 0, -410), 0), 100000000, 0, -409), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 812, 31403, 31406), ("shadow-stdlib/src/shadow_stdlib.mli", 812, 31403, 31416), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 812, 31403, 31418), ("shadow-stdlib/src/shadow_stdlib.mli", 814, 31489, 31528), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 812, 31403, 31417), ("shadow-stdlib/src/shadow_stdlib.mli", 814, 31489, 31529), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 812, 31403, 31417), ("shadow-stdlib/src/shadow_stdlib.mli", 814, 31489, 31529), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 812, 31403, 31403), ("shadow-stdlib/src/shadow_stdlib.mli", 814, 31489, 31530), 0))], Tag1 ("Shadow_stdlib", 161)), 0); (("output_byte", 17393), ((Tag1 (0, (Tag3 ((("out_channel", 17359)), 0, (0)), 100000000, 0, -408), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -407), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -406), 0), 100000000, 0, -405), 0), 100000000, 0, -404), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 817, 31577, 31580), ("shadow-stdlib/src/shadow_stdlib.mli", 817, 31577, 31590), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_byte] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 817, 31577, 31592), ("shadow-stdlib/src/shadow_stdlib.mli", 819, 31663, 31707), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 817, 31577, 31591), ("shadow-stdlib/src/shadow_stdlib.mli", 819, 31663, 31708), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 817, 31577, 31591), ("shadow-stdlib/src/shadow_stdlib.mli", 819, 31663, 31708), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 817, 31577, 31577), ("shadow-stdlib/src/shadow_stdlib.mli", 819, 31663, 31709), 0))], Tag1 ("Shadow_stdlib", 162)), 0); (("output_binary_int", 17394), ((Tag1 (0, (Tag3 ((("out_channel", 17359)), 0, (0)), 100000000, 0, -403), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -402), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -401), 0), 100000000, 0, -400), 0), 100000000, 0, -399), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 822, 31762, 31765), ("shadow-stdlib/src/shadow_stdlib.mli", 822, 31762, 31775), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_binary_int] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 822, 31762, 31777), ("shadow-stdlib/src/shadow_stdlib.mli", 824, 31848, 31898), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 822, 31762, 31776), ("shadow-stdlib/src/shadow_stdlib.mli", 824, 31848, 31899), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 822, 31762, 31776), ("shadow-stdlib/src/shadow_stdlib.mli", 824, 31848, 31899), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 822, 31762, 31762), ("shadow-stdlib/src/shadow_stdlib.mli", 824, 31848, 31900), 0))], Tag1 ("Shadow_stdlib", 163)), 0); (("output_value", 17395), ((Tag1 (0, (Tag3 ((("out_channel", 17359)), 0, (0)), 100000000, 0, -398), (Tag1 (0, ((("a")), 100000000, 0, -397), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -396), 0), 100000000, 0, -395), 0), 100000000, 0, -394), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 827, 31947, 31950), ("shadow-stdlib/src/shadow_stdlib.mli", 827, 31947, 31960), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_value] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 827, 31947, 31962), ("shadow-stdlib/src/shadow_stdlib.mli", 829, 32033, 32078), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 827, 31947, 31961), ("shadow-stdlib/src/shadow_stdlib.mli", 829, 32033, 32079), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 827, 31947, 31961), ("shadow-stdlib/src/shadow_stdlib.mli", 829, 32033, 32079), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 827, 31947, 31947), ("shadow-stdlib/src/shadow_stdlib.mli", 829, 32033, 32080), 0))], Tag1 ("Shadow_stdlib", 164)), 0); (("seek_out", 17396), ((Tag1 (0, (Tag3 ((("out_channel", 17359)), 0, (0)), 100000000, 0, -393), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -392), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -391), 0), 100000000, 0, -390), 0), 100000000, 0, -389), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 832, 32124, 32127), ("shadow-stdlib/src/shadow_stdlib.mli", 832, 32124, 32137), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.seek] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 832, 32124, 32139), ("shadow-stdlib/src/shadow_stdlib.mli", 834, 32210, 32247), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 832, 32124, 32138), ("shadow-stdlib/src/shadow_stdlib.mli", 834, 32210, 32248), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 832, 32124, 32138), ("shadow-stdlib/src/shadow_stdlib.mli", 834, 32210, 32248), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 832, 32124, 32124), ("shadow-stdlib/src/shadow_stdlib.mli", 834, 32210, 32249), 0))], Tag1 ("Shadow_stdlib", 165)), 0); (("pos_out", 17397), ((Tag1 (0, (Tag3 ((("out_channel", 17359)), 0, (0)), 100000000, 0, -388), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -387), 0), 100000000, 0, -386), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 837, 32284, 32287), ("shadow-stdlib/src/shadow_stdlib.mli", 837, 32284, 32297), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.pos] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 837, 32284, 32299), ("shadow-stdlib/src/shadow_stdlib.mli", 839, 32370, 32406), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 837, 32284, 32298), ("shadow-stdlib/src/shadow_stdlib.mli", 839, 32370, 32407), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 837, 32284, 32298), ("shadow-stdlib/src/shadow_stdlib.mli", 839, 32370, 32407), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 837, 32284, 32284), ("shadow-stdlib/src/shadow_stdlib.mli", 839, 32370, 32408), 0))], Tag1 ("Shadow_stdlib", 166)), 0); (("out_channel_length", 17398), ((Tag1 (0, (Tag3 ((("out_channel", 17359)), 0, (0)), 100000000, 0, -385), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -384), 0), 100000000, 0, -383), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 842, 32454, 32457), ("shadow-stdlib/src/shadow_stdlib.mli", 842, 32454, 32467), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.length] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 842, 32454, 32469), ("shadow-stdlib/src/shadow_stdlib.mli", 844, 32540, 32579), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 842, 32454, 32468), ("shadow-stdlib/src/shadow_stdlib.mli", 844, 32540, 32580), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 842, 32454, 32468), ("shadow-stdlib/src/shadow_stdlib.mli", 844, 32540, 32580), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 842, 32454, 32454), ("shadow-stdlib/src/shadow_stdlib.mli", 844, 32540, 32581), 0))], Tag1 ("Shadow_stdlib", 167)), 0); (("close_out", 17399), ((Tag1 (0, (Tag3 ((("out_channel", 17359)), 0, (0)), 100000000, 0, -382), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -381), 0), 100000000, 0, -380), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 847, 32619, 32622), ("shadow-stdlib/src/shadow_stdlib.mli", 847, 32619, 32632), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.close] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 847, 32619, 32634), ("shadow-stdlib/src/shadow_stdlib.mli", 849, 32705, 32743), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 847, 32619, 32633), ("shadow-stdlib/src/shadow_stdlib.mli", 849, 32705, 32744), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 847, 32619, 32633), ("shadow-stdlib/src/shadow_stdlib.mli", 849, 32705, 32744), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 847, 32619, 32619), ("shadow-stdlib/src/shadow_stdlib.mli", 849, 32705, 32745), 0))], Tag1 ("Shadow_stdlib", 168)), 0); (("close_out_noerr", 17400), ((Tag1 (0, (Tag3 ((("out_channel", 17359)), 0, (0)), 100000000, 0, -379), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -378), 0), 100000000, 0, -377), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 852, 32789, 32792), ("shadow-stdlib/src/shadow_stdlib.mli", 852, 32789, 32802), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.close] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 852, 32789, 32804), ("shadow-stdlib/src/shadow_stdlib.mli", 854, 32875, 32913), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 852, 32789, 32803), ("shadow-stdlib/src/shadow_stdlib.mli", 854, 32875, 32914), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 852, 32789, 32803), ("shadow-stdlib/src/shadow_stdlib.mli", 854, 32875, 32914), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 852, 32789, 32789), ("shadow-stdlib/src/shadow_stdlib.mli", 854, 32875, 32915), 0))], Tag1 ("Shadow_stdlib", 169)), 0); (("set_binary_mode_out", 17401), ((Tag1 (0, (Tag3 ((("out_channel", 17359)), 0, (0)), 100000000, 0, -376), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -375), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -374), 0), 100000000, 0, -373), 0), 100000000, 0, -372), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 857, 32971, 32974), ("shadow-stdlib/src/shadow_stdlib.mli", 857, 32971, 32984), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.set_binary_mode] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 857, 32971, 32986), ("shadow-stdlib/src/shadow_stdlib.mli", 859, 33057, 33105), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 857, 32971, 32985), ("shadow-stdlib/src/shadow_stdlib.mli", 859, 33057, 33106), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 857, 32971, 32985), ("shadow-stdlib/src/shadow_stdlib.mli", 859, 33057, 33106), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 857, 32971, 32971), ("shadow-stdlib/src/shadow_stdlib.mli", 859, 33057, 33107), 0))], Tag1 ("Shadow_stdlib", 170)), 0); (("open_in", 17402), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -371), (Tag3 ((("in_channel", 17358)), 0, (0)), 100000000, 0, -370), 0), 100000000, 0, -369), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 862, 33144, 33147), ("shadow-stdlib/src/shadow_stdlib.mli", 862, 33144, 33157), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.create] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 862, 33144, 33159), ("shadow-stdlib/src/shadow_stdlib.mli", 864, 33230, 33268), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 862, 33144, 33158), ("shadow-stdlib/src/shadow_stdlib.mli", 864, 33230, 33269), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 862, 33144, 33158), ("shadow-stdlib/src/shadow_stdlib.mli", 864, 33230, 33269), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 862, 33144, 33144), ("shadow-stdlib/src/shadow_stdlib.mli", 864, 33230, 33270), 0))], Tag1 ("Shadow_stdlib", 171)), 0); (("open_in_bin", 17403), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -368), (Tag3 ((("in_channel", 17358)), 0, (0)), 100000000, 0, -367), 0), 100000000, 0, -366), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 867, 33311, 33314), ("shadow-stdlib/src/shadow_stdlib.mli", 867, 33311, 33324), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.create] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 867, 33311, 33326), ("shadow-stdlib/src/shadow_stdlib.mli", 869, 33397, 33435), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 867, 33311, 33325), ("shadow-stdlib/src/shadow_stdlib.mli", 869, 33397, 33436), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 867, 33311, 33325), ("shadow-stdlib/src/shadow_stdlib.mli", 869, 33397, 33436), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 867, 33311, 33311), ("shadow-stdlib/src/shadow_stdlib.mli", 869, 33397, 33437), 0))], Tag1 ("Shadow_stdlib", 172)), 0); (("open_in_gen", 17404), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("open_flag", 17382)), 0, (0)), 100000000, 0, -365)], (0)), 100000000, 0, -364), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -363), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -362), (Tag3 ((("in_channel", 17358)), 0, (0)), 100000000, 0, -361), 0), 100000000, 0, -360), 0), 100000000, 0, -359), 0), 100000000, 0, -358), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 872, 33503, 33506), ("shadow-stdlib/src/shadow_stdlib.mli", 872, 33503, 33516), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.open_in_gen] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 872, 33503, 33518), ("shadow-stdlib/src/shadow_stdlib.mli", 875, 33659, 33706), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 872, 33503, 33517), ("shadow-stdlib/src/shadow_stdlib.mli", 875, 33659, 33707), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 872, 33503, 33517), ("shadow-stdlib/src/shadow_stdlib.mli", 875, 33659, 33707), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 872, 33503, 33503), ("shadow-stdlib/src/shadow_stdlib.mli", 875, 33659, 33708), 0))], Tag1 ("Shadow_stdlib", 173)), 0); (("input_char", 17405), ((Tag1 (0, (Tag3 ((("in_channel", 17358)), 0, (0)), 100000000, 0, -357), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -356), 0), 100000000, 0, -355), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 878, 33746, 33749), ("shadow-stdlib/src/shadow_stdlib.mli", 878, 33746, 33759), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.input_char] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 878, 33746, 33761), ("shadow-stdlib/src/shadow_stdlib.mli", 880, 33832, 33874), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 878, 33746, 33760), ("shadow-stdlib/src/shadow_stdlib.mli", 880, 33832, 33875), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 878, 33746, 33760), ("shadow-stdlib/src/shadow_stdlib.mli", 880, 33832, 33875), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 878, 33746, 33746), ("shadow-stdlib/src/shadow_stdlib.mli", 880, 33832, 33876), 0))], Tag1 ("Shadow_stdlib", 174)), 0); (("input_line", 17406), ((Tag1 (0, (Tag3 ((("in_channel", 17358)), 0, (0)), 100000000, 0, -354), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -353), 0), 100000000, 0, -352), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 883, 33916, 33919), ("shadow-stdlib/src/shadow_stdlib.mli", 883, 33916, 33929), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.input_line] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 883, 33916, 33931), ("shadow-stdlib/src/shadow_stdlib.mli", 885, 34002, 34044), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 883, 33916, 33930), ("shadow-stdlib/src/shadow_stdlib.mli", 885, 34002, 34045), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 883, 33916, 33930), ("shadow-stdlib/src/shadow_stdlib.mli", 885, 34002, 34045), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 883, 33916, 33916), ("shadow-stdlib/src/shadow_stdlib.mli", 885, 34002, 34046), 0))], Tag1 ("Shadow_stdlib", 175)), 0); (("input", 17407), ((Tag1 (0, (Tag3 ((("in_channel", 17358)), 0, (0)), 100000000, 0, -351), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -350), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -349), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -348), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -347), 0), 100000000, 0, -346), 0), 100000000, 0, -345), 0), 100000000, 0, -344), 0), 100000000, 0, -343), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 888, 34101, 34104), ("shadow-stdlib/src/shadow_stdlib.mli", 888, 34101, 34114), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.input] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 888, 34101, 34116), ("shadow-stdlib/src/shadow_stdlib.mli", 890, 34187, 34224), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 888, 34101, 34115), ("shadow-stdlib/src/shadow_stdlib.mli", 890, 34187, 34225), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 888, 34101, 34115), ("shadow-stdlib/src/shadow_stdlib.mli", 890, 34187, 34225), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 888, 34101, 34101), ("shadow-stdlib/src/shadow_stdlib.mli", 890, 34187, 34226), 0))], Tag1 ("Shadow_stdlib", 176)), 0); (("really_input", 17408), ((Tag1 (0, (Tag3 ((("in_channel", 17358)), 0, (0)), 100000000, 0, -342), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -341), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -340), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -339), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -338), 0), 100000000, 0, -337), 0), 100000000, 0, -336), 0), 100000000, 0, -335), 0), 100000000, 0, -334), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 893, 34289, 34292), ("shadow-stdlib/src/shadow_stdlib.mli", 893, 34289, 34302), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.really_input] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 893, 34289, 34304), ("shadow-stdlib/src/shadow_stdlib.mli", 895, 34375, 34419), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 893, 34289, 34303), ("shadow-stdlib/src/shadow_stdlib.mli", 895, 34375, 34420), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 893, 34289, 34303), ("shadow-stdlib/src/shadow_stdlib.mli", 895, 34375, 34420), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 893, 34289, 34289), ("shadow-stdlib/src/shadow_stdlib.mli", 895, 34375, 34421), 0))], Tag1 ("Shadow_stdlib", 177)), 0); (("really_input_string", 17409), ((Tag1 (0, (Tag3 ((("in_channel", 17358)), 0, (0)), 100000000, 0, -333), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -332), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -331), 0), 100000000, 0, -330), 0), 100000000, 0, -329), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 898, 34477, 34480), ("shadow-stdlib/src/shadow_stdlib.mli", 898, 34477, 34490), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is no equivalent functionality in Base or Stdio but you can use\n[Stdio.In_channel] instead.\nAlternatively, if you really want to refer the stdlib you can use\n[Stdlib.really_input_string].", (("shadow-stdlib/src/shadow_stdlib.mli", 898, 34477, 34492), ("shadow-stdlib/src/shadow_stdlib.mli", 903, 34727, 34756), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 898, 34477, 34491), ("shadow-stdlib/src/shadow_stdlib.mli", 903, 34727, 34757), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 898, 34477, 34491), ("shadow-stdlib/src/shadow_stdlib.mli", 903, 34727, 34757), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 898, 34477, 34477), ("shadow-stdlib/src/shadow_stdlib.mli", 903, 34727, 34758), 0))], Tag1 ("Shadow_stdlib", 178)), 0); (("input_byte", 17410), ((Tag1 (0, (Tag3 ((("in_channel", 17358)), 0, (0)), 100000000, 0, -328), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -327), 0), 100000000, 0, -326), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 906, 34795, 34798), ("shadow-stdlib/src/shadow_stdlib.mli", 906, 34795, 34808), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.input_byte] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 906, 34795, 34810), ("shadow-stdlib/src/shadow_stdlib.mli", 908, 34881, 34923), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 906, 34795, 34809), ("shadow-stdlib/src/shadow_stdlib.mli", 908, 34881, 34924), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 906, 34795, 34809), ("shadow-stdlib/src/shadow_stdlib.mli", 908, 34881, 34924), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 906, 34795, 34795), ("shadow-stdlib/src/shadow_stdlib.mli", 908, 34881, 34925), 0))], Tag1 ("Shadow_stdlib", 179)), 0); (("input_binary_int", 17411), ((Tag1 (0, (Tag3 ((("in_channel", 17358)), 0, (0)), 100000000, 0, -325), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -324), 0), 100000000, 0, -323), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 911, 34968, 34971), ("shadow-stdlib/src/shadow_stdlib.mli", 911, 34968, 34981), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.input_binary_int] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 911, 34968, 34983), ("shadow-stdlib/src/shadow_stdlib.mli", 913, 35054, 35102), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 911, 34968, 34982), ("shadow-stdlib/src/shadow_stdlib.mli", 913, 35054, 35103), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 911, 34968, 34982), ("shadow-stdlib/src/shadow_stdlib.mli", 913, 35054, 35103), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 911, 34968, 34968), ("shadow-stdlib/src/shadow_stdlib.mli", 913, 35054, 35104), 0))], Tag1 ("Shadow_stdlib", 180)), 0); (("input_value", 17412), ((Tag1 (0, (Tag3 ((("in_channel", 17358)), 0, (0)), 100000000, 0, -322), ((("a")), 100000000, 0, -321), 0), 100000000, 0, -320), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 916, 35141, 35144), ("shadow-stdlib/src/shadow_stdlib.mli", 916, 35141, 35154), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.unsafe_input_value] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 916, 35141, 35156), ("shadow-stdlib/src/shadow_stdlib.mli", 918, 35227, 35277), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 916, 35141, 35155), ("shadow-stdlib/src/shadow_stdlib.mli", 918, 35227, 35278), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 916, 35141, 35155), ("shadow-stdlib/src/shadow_stdlib.mli", 918, 35227, 35278), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 916, 35141, 35141), ("shadow-stdlib/src/shadow_stdlib.mli", 918, 35227, 35279), 0))], Tag1 ("Shadow_stdlib", 181)), 0); (("seek_in", 17413), ((Tag1 (0, (Tag3 ((("in_channel", 17358)), 0, (0)), 100000000, 0, -319), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -318), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -317), 0), 100000000, 0, -316), 0), 100000000, 0, -315), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 921, 35321, 35324), ("shadow-stdlib/src/shadow_stdlib.mli", 921, 35321, 35334), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.seek] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 921, 35321, 35336), ("shadow-stdlib/src/shadow_stdlib.mli", 923, 35407, 35443), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 921, 35321, 35335), ("shadow-stdlib/src/shadow_stdlib.mli", 923, 35407, 35444), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 921, 35321, 35335), ("shadow-stdlib/src/shadow_stdlib.mli", 923, 35407, 35444), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 921, 35321, 35321), ("shadow-stdlib/src/shadow_stdlib.mli", 923, 35407, 35445), 0))], Tag1 ("Shadow_stdlib", 182)), 0); (("pos_in", 17414), ((Tag1 (0, (Tag3 ((("in_channel", 17358)), 0, (0)), 100000000, 0, -314), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -313), 0), 100000000, 0, -312), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 926, 35478, 35481), ("shadow-stdlib/src/shadow_stdlib.mli", 926, 35478, 35491), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.pos] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 926, 35478, 35493), ("shadow-stdlib/src/shadow_stdlib.mli", 928, 35564, 35599), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 926, 35478, 35492), ("shadow-stdlib/src/shadow_stdlib.mli", 928, 35564, 35600), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 926, 35478, 35492), ("shadow-stdlib/src/shadow_stdlib.mli", 928, 35564, 35600), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 926, 35478, 35478), ("shadow-stdlib/src/shadow_stdlib.mli", 928, 35564, 35601), 0))], Tag1 ("Shadow_stdlib", 183)), 0); (("in_channel_length", 17415), ((Tag1 (0, (Tag3 ((("in_channel", 17358)), 0, (0)), 100000000, 0, -311), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -310), 0), 100000000, 0, -309), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 931, 35645, 35648), ("shadow-stdlib/src/shadow_stdlib.mli", 931, 35645, 35658), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.length] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 931, 35645, 35660), ("shadow-stdlib/src/shadow_stdlib.mli", 933, 35731, 35769), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 931, 35645, 35659), ("shadow-stdlib/src/shadow_stdlib.mli", 933, 35731, 35770), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 931, 35645, 35659), ("shadow-stdlib/src/shadow_stdlib.mli", 933, 35731, 35770), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 931, 35645, 35645), ("shadow-stdlib/src/shadow_stdlib.mli", 933, 35731, 35771), 0))], Tag1 ("Shadow_stdlib", 184)), 0); (("close_in", 17416), ((Tag1 (0, (Tag3 ((("in_channel", 17358)), 0, (0)), 100000000, 0, -308), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -307), 0), 100000000, 0, -306), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 936, 35807, 35810), ("shadow-stdlib/src/shadow_stdlib.mli", 936, 35807, 35820), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.close] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 936, 35807, 35822), ("shadow-stdlib/src/shadow_stdlib.mli", 938, 35893, 35930), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 936, 35807, 35821), ("shadow-stdlib/src/shadow_stdlib.mli", 938, 35893, 35931), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 936, 35807, 35821), ("shadow-stdlib/src/shadow_stdlib.mli", 938, 35893, 35931), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 936, 35807, 35807), ("shadow-stdlib/src/shadow_stdlib.mli", 938, 35893, 35932), 0))], Tag1 ("Shadow_stdlib", 185)), 0); (("close_in_noerr", 17417), ((Tag1 (0, (Tag3 ((("in_channel", 17358)), 0, (0)), 100000000, 0, -305), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -304), 0), 100000000, 0, -303), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 941, 35974, 35977), ("shadow-stdlib/src/shadow_stdlib.mli", 941, 35974, 35987), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.close] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 941, 35974, 35989), ("shadow-stdlib/src/shadow_stdlib.mli", 943, 36060, 36097), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 941, 35974, 35988), ("shadow-stdlib/src/shadow_stdlib.mli", 943, 36060, 36098), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 941, 35974, 35988), ("shadow-stdlib/src/shadow_stdlib.mli", 943, 36060, 36098), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 941, 35974, 35974), ("shadow-stdlib/src/shadow_stdlib.mli", 943, 36060, 36099), 0))], Tag1 ("Shadow_stdlib", 186)), 0); (("set_binary_mode_in", 17418), ((Tag1 (0, (Tag3 ((("in_channel", 17358)), 0, (0)), 100000000, 0, -302), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -301), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -300), 0), 100000000, 0, -299), 0), 100000000, 0, -298), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 946, 36153, 36156), ("shadow-stdlib/src/shadow_stdlib.mli", 946, 36153, 36166), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.set_binary_mode] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 946, 36153, 36168), ("shadow-stdlib/src/shadow_stdlib.mli", 948, 36239, 36286), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 946, 36153, 36167), ("shadow-stdlib/src/shadow_stdlib.mli", 948, 36239, 36287), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 946, 36153, 36167), ("shadow-stdlib/src/shadow_stdlib.mli", 948, 36239, 36287), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 946, 36153, 36153), ("shadow-stdlib/src/shadow_stdlib.mli", 948, 36239, 36288), 0))], Tag1 ("Shadow_stdlib", 187)), 0); Tag3 (("LargeFile", 17419), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "LargeFile")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 951, 36326, 36329), ("shadow-stdlib/src/shadow_stdlib.mli", 951, 36326, 36339), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.LargeFile instead", (("shadow-stdlib/src/shadow_stdlib.mli", 951, 36326, 36341), ("shadow-stdlib/src/shadow_stdlib.mli", 955, 36562, 36611), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 951, 36326, 36340), ("shadow-stdlib/src/shadow_stdlib.mli", 955, 36562, 36612), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 951, 36326, 36340), ("shadow-stdlib/src/shadow_stdlib.mli", 955, 36562, 36612), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 951, 36326, 36326), ("shadow-stdlib/src/shadow_stdlib.mli", 955, 36562, 36613), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 188)), 0, 0); Tag1 (("result", 17420), ([((("a")), 100000000, 0, -296); ((("b")), 100000000, 0, -297)], 2, Tag1 ([(("Ok", 466), ([((("a")), 100000000, 0, -296)]), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 197)); (("Error", 467), ([((("b")), 100000000, 0, -297)]), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 198))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -296); ((("b")), 100000000, 0, -297)], (0)), 100000000, 0, -295)), [25; 25], [0; 0], 0, 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 993, 38093, 38096), ("shadow-stdlib/src/shadow_stdlib.mli", 993, 38093, 38106), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Result.t] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 993, 38093, 38108), ("shadow-stdlib/src/shadow_stdlib.mli", 995, 38179, 38202), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 993, 38093, 38107), ("shadow-stdlib/src/shadow_stdlib.mli", 995, 38179, 38203), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 993, 38093, 38107), ("shadow-stdlib/src/shadow_stdlib.mli", 995, 38179, 38203), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 993, 38093, 38093), ("shadow-stdlib/src/shadow_stdlib.mli", 995, 38179, 38204), 0))], 0, 0, Tag1 ("Shadow_stdlib", 196)), 0, 0); (("string_of_format", 17421), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format6"), [((("a")), 100000000, 0, -289); ((("b")), 100000000, 0, -290); ((("c")), 100000000, 0, -291); ((("d")), 100000000, 0, -292); ((("e")), 100000000, 0, -293); ((("f")), 100000000, 0, -294)], (0)), 100000000, 0, -288), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -287), 0), 100000000, 0, -286), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1019, 39351, 39354), ("shadow-stdlib/src/shadow_stdlib.mli", 1019, 39351, 39364), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.string_of_format] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1019, 39351, 39366), ("shadow-stdlib/src/shadow_stdlib.mli", 1022, 39507, 39559), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1019, 39351, 39365), ("shadow-stdlib/src/shadow_stdlib.mli", 1022, 39507, 39560), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1019, 39351, 39365), ("shadow-stdlib/src/shadow_stdlib.mli", 1022, 39507, 39560), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1019, 39351, 39351), ("shadow-stdlib/src/shadow_stdlib.mli", 1022, 39507, 39561), 0))], Tag1 ("Shadow_stdlib", 202)), 0); (("format_of_string", 17422), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format6"), [((("a")), 100000000, 0, -279); ((("b")), 100000000, 0, -280); ((("c")), 100000000, 0, -281); ((("d")), 100000000, 0, -282); ((("e")), 100000000, 0, -283); ((("f")), 100000000, 0, -284)], (0)), 100000000, 0, -285), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format6"), [((("a")), 100000000, 0, -279); ((("b")), 100000000, 0, -280); ((("c")), 100000000, 0, -281); ((("d")), 100000000, 0, -282); ((("e")), 100000000, 0, -283); ((("f")), 100000000, 0, -284)], (0)), 100000000, 0, -278), 0), 100000000, 0, -277), (("%identity", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1025, 39674, 39677), ("shadow-stdlib/src/shadow_stdlib.mli", 1025, 39674, 39687), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.format_of_string] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1025, 39674, 39689), ("shadow-stdlib/src/shadow_stdlib.mli", 1028, 39830, 39882), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1025, 39674, 39688), ("shadow-stdlib/src/shadow_stdlib.mli", 1028, 39830, 39883), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1025, 39674, 39688), ("shadow-stdlib/src/shadow_stdlib.mli", 1028, 39830, 39883), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1025, 39674, 39674), ("shadow-stdlib/src/shadow_stdlib.mli", 1028, 39830, 39884), 0))], Tag1 ("Shadow_stdlib", 203)), 0); (("^^", 17423), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format6"), [((("a")), 100000000, 0, -267); ((("b")), 100000000, 0, -268); ((("c")), 100000000, 0, -269); ((("d")), 100000000, 0, -270); ((("e")), 100000000, 0, -275); ((("f")), 100000000, 0, -274)], (0)), 100000000, 0, -276), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format6"), [((("f")), 100000000, 0, -274); ((("b")), 100000000, 0, -268); ((("c")), 100000000, 0, -269); ((("e")), 100000000, 0, -275); ((("g")), 100000000, 0, -271); ((("h")), 100000000, 0, -272)], (0)), 100000000, 0, -273), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format6"), [((("a")), 100000000, 0, -267); ((("b")), 100000000, 0, -268); ((("c")), 100000000, 0, -269); ((("d")), 100000000, 0, -270); ((("g")), 100000000, 0, -271); ((("h")), 100000000, 0, -272)], (0)), 100000000, 0, -266), 0), 100000000, 0, -265), 0), 100000000, 0, -264), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1031, 40004, 40007), ("shadow-stdlib/src/shadow_stdlib.mli", 1031, 40004, 40017), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.( ^^ )] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1031, 40004, 40019), ("shadow-stdlib/src/shadow_stdlib.mli", 1034, 40160, 40202), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1031, 40004, 40018), ("shadow-stdlib/src/shadow_stdlib.mli", 1034, 40160, 40203), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1031, 40004, 40018), ("shadow-stdlib/src/shadow_stdlib.mli", 1034, 40160, 40203), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1031, 40004, 40004), ("shadow-stdlib/src/shadow_stdlib.mli", 1034, 40160, 40204), 0))], Tag1 ("Shadow_stdlib", 204)), 0); (("exit", 17424), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -263), ((("a")), 100000000, 0, -262), 0), 100000000, 0, -261), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1037, 40227, 40230), ("shadow-stdlib/src/shadow_stdlib.mli", 1037, 40227, 40240), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.exit] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1037, 40227, 40242), ("shadow-stdlib/src/shadow_stdlib.mli", 1040, 40383, 40423), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1037, 40227, 40241), ("shadow-stdlib/src/shadow_stdlib.mli", 1040, 40383, 40424), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1037, 40227, 40241), ("shadow-stdlib/src/shadow_stdlib.mli", 1040, 40383, 40424), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1037, 40227, 40227), ("shadow-stdlib/src/shadow_stdlib.mli", 1040, 40383, 40425), 0))], Tag1 ("Shadow_stdlib", 205)), 0); (("at_exit", 17425), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -260), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -259), 0), 100000000, 0, -258), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -257), 0), 100000000, 0, -256), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1043, 40464, 40467), ("shadow-stdlib/src/shadow_stdlib.mli", 1043, 40464, 40477), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.at_exit] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1043, 40464, 40479), ("shadow-stdlib/src/shadow_stdlib.mli", 1046, 40620, 40663), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1043, 40464, 40478), ("shadow-stdlib/src/shadow_stdlib.mli", 1046, 40620, 40664), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1043, 40464, 40478), ("shadow-stdlib/src/shadow_stdlib.mli", 1046, 40620, 40664), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1043, 40464, 40464), ("shadow-stdlib/src/shadow_stdlib.mli", 1046, 40620, 40665), 0))], Tag1 ("Shadow_stdlib", 206)), 0); (("valid_float_lexem", 17426), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -255), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -254), 0), 100000000, 0, -253), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1049, 40708, 40711), ("shadow-stdlib/src/shadow_stdlib.mli", 1049, 40708, 40721), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.valid_float_lexem] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1049, 40708, 40723), ("shadow-stdlib/src/shadow_stdlib.mli", 1052, 40864, 40917), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1049, 40708, 40722), ("shadow-stdlib/src/shadow_stdlib.mli", 1052, 40864, 40918), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1049, 40708, 40722), ("shadow-stdlib/src/shadow_stdlib.mli", 1052, 40864, 40918), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1049, 40708, 40708), ("shadow-stdlib/src/shadow_stdlib.mli", 1052, 40864, 40919), 0))], Tag1 ("Shadow_stdlib", 207)), 0); (("unsafe_really_input", 17427), ((Tag1 (0, (Tag3 ((("in_channel", 17358)), 0, (0)), 100000000, 0, -252), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -251), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -250), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -249), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -248), 0), 100000000, 0, -247), 0), 100000000, 0, -246), 0), 100000000, 0, -245), 0), 100000000, 0, -244), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1055, 40989, 40992), ("shadow-stdlib/src/shadow_stdlib.mli", 1055, 40989, 41002), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.unsafe_really_input] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1055, 40989, 41004), ("shadow-stdlib/src/shadow_stdlib.mli", 1058, 41145, 41200), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1055, 40989, 41003), ("shadow-stdlib/src/shadow_stdlib.mli", 1058, 41145, 41201), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1055, 40989, 41003), ("shadow-stdlib/src/shadow_stdlib.mli", 1058, 41145, 41201), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1055, 40989, 40989), ("shadow-stdlib/src/shadow_stdlib.mli", 1058, 41145, 41202), 0))], Tag1 ("Shadow_stdlib", 208)), 0); (("do_at_exit", 17428), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -243), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -242), 0), 100000000, 0, -241), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1061, 41234, 41237), ("shadow-stdlib/src/shadow_stdlib.mli", 1061, 41234, 41247), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.do_at_exit] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1061, 41234, 41249), ("shadow-stdlib/src/shadow_stdlib.mli", 1064, 41390, 41436), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1061, 41234, 41248), ("shadow-stdlib/src/shadow_stdlib.mli", 1064, 41390, 41437), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1061, 41234, 41248), ("shadow-stdlib/src/shadow_stdlib.mli", 1064, 41390, 41437), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1061, 41234, 41234), ("shadow-stdlib/src/shadow_stdlib.mli", 1064, 41390, 41438), 0))], Tag1 ("Shadow_stdlib", 209)), 0); (("do_domain_local_at_exit", 17429), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -240), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -239), 0), 100000000, 0, -238)], (0)), 100000000, 0, -237), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1067, 41489, 41492), ("shadow-stdlib/src/shadow_stdlib.mli", 1067, 41489, 41502), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.do_domain_local_at_exit] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1067, 41489, 41504), ("shadow-stdlib/src/shadow_stdlib.mli", 1070, 41645, 41704), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1067, 41489, 41503), ("shadow-stdlib/src/shadow_stdlib.mli", 1070, 41645, 41705), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1067, 41489, 41503), ("shadow-stdlib/src/shadow_stdlib.mli", 1070, 41645, 41705), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1067, 41489, 41489), ("shadow-stdlib/src/shadow_stdlib.mli", 1070, 41645, 41706), 0))], Tag1 ("Shadow_stdlib", 210)), 0); Tag3 (("Arg", 17430), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Arg")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1073, 41733, 41736), ("shadow-stdlib/src/shadow_stdlib.mli", 1073, 41733, 41746), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Arg instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1073, 41733, 41748), ("shadow-stdlib/src/shadow_stdlib.mli", 1077, 41969, 42012), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1073, 41733, 41747), ("shadow-stdlib/src/shadow_stdlib.mli", 1077, 41969, 42013), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1073, 41733, 41747), ("shadow-stdlib/src/shadow_stdlib.mli", 1077, 41969, 42013), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1073, 41733, 41733), ("shadow-stdlib/src/shadow_stdlib.mli", 1077, 41969, 42014), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 211)), 0, 0); Tag3 (("ArrayLabels", 17431), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ArrayLabels")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1087, 42371, 42374), ("shadow-stdlib/src/shadow_stdlib.mli", 1087, 42371, 42384), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.ArrayLabels instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1087, 42371, 42386), ("shadow-stdlib/src/shadow_stdlib.mli", 1091, 42607, 42658), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1087, 42371, 42385), ("shadow-stdlib/src/shadow_stdlib.mli", 1091, 42607, 42659), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1087, 42371, 42385), ("shadow-stdlib/src/shadow_stdlib.mli", 1091, 42607, 42659), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1087, 42371, 42371), ("shadow-stdlib/src/shadow_stdlib.mli", 1091, 42607, 42660), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 213)), 0, 0); Tag3 (("BytesLabels", 17432), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "BytesLabels")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1122, 43962, 43965), ("shadow-stdlib/src/shadow_stdlib.mli", 1122, 43962, 43975), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.BytesLabels instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1122, 43962, 43977), ("shadow-stdlib/src/shadow_stdlib.mli", 1126, 44198, 44249), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1122, 43962, 43976), ("shadow-stdlib/src/shadow_stdlib.mli", 1126, 44198, 44250), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1122, 43962, 43976), ("shadow-stdlib/src/shadow_stdlib.mli", 1126, 44198, 44250), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1122, 43962, 43962), ("shadow-stdlib/src/shadow_stdlib.mli", 1126, 44198, 44251), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 218)), 0, 0); Tag3 (("Callback", 17433), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Callback")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1129, 44288, 44291), ("shadow-stdlib/src/shadow_stdlib.mli", 1129, 44288, 44301), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Callback instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1129, 44288, 44303), ("shadow-stdlib/src/shadow_stdlib.mli", 1133, 44524, 44572), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1129, 44288, 44302), ("shadow-stdlib/src/shadow_stdlib.mli", 1133, 44524, 44573), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1129, 44288, 44302), ("shadow-stdlib/src/shadow_stdlib.mli", 1133, 44524, 44573), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1129, 44288, 44288), ("shadow-stdlib/src/shadow_stdlib.mli", 1133, 44524, 44574), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 219)), 0, 0); Tag3 (("Complex", 17434), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Complex")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1143, 44920, 44923), ("shadow-stdlib/src/shadow_stdlib.mli", 1143, 44920, 44933), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Complex instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1143, 44920, 44935), ("shadow-stdlib/src/shadow_stdlib.mli", 1147, 45156, 45203), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1143, 44920, 44934), ("shadow-stdlib/src/shadow_stdlib.mli", 1147, 45156, 45204), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1143, 44920, 44934), ("shadow-stdlib/src/shadow_stdlib.mli", 1147, 45156, 45204), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1143, 44920, 44920), ("shadow-stdlib/src/shadow_stdlib.mli", 1147, 45156, 45205), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 221)), 0, 0); Tag3 (("Condition", 17435), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Condition")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1150, 45244, 45247), ("shadow-stdlib/src/shadow_stdlib.mli", 1150, 45244, 45257), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Condition instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1150, 45244, 45259), ("shadow-stdlib/src/shadow_stdlib.mli", 1154, 45480, 45529), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1150, 45244, 45258), ("shadow-stdlib/src/shadow_stdlib.mli", 1154, 45480, 45530), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1150, 45244, 45258), ("shadow-stdlib/src/shadow_stdlib.mli", 1154, 45480, 45530), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1150, 45244, 45244), ("shadow-stdlib/src/shadow_stdlib.mli", 1154, 45480, 45531), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 222)), 0, 0); Tag3 (("Digest", 17436), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Digest")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1157, 45564, 45567), ("shadow-stdlib/src/shadow_stdlib.mli", 1157, 45564, 45577), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Digest instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1157, 45564, 45579), ("shadow-stdlib/src/shadow_stdlib.mli", 1161, 45800, 45846), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1157, 45564, 45578), ("shadow-stdlib/src/shadow_stdlib.mli", 1161, 45800, 45847), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1157, 45564, 45578), ("shadow-stdlib/src/shadow_stdlib.mli", 1161, 45800, 45847), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1157, 45564, 45564), ("shadow-stdlib/src/shadow_stdlib.mli", 1161, 45800, 45848), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 223)), 0, 0); Tag3 (("Domain", 17437), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Domain")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1164, 45881, 45884), ("shadow-stdlib/src/shadow_stdlib.mli", 1164, 45881, 45894), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Domain instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1164, 45881, 45896), ("shadow-stdlib/src/shadow_stdlib.mli", 1168, 46117, 46163), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1164, 45881, 45895), ("shadow-stdlib/src/shadow_stdlib.mli", 1168, 46117, 46164), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1164, 45881, 45895), ("shadow-stdlib/src/shadow_stdlib.mli", 1168, 46117, 46164), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1164, 45881, 45881), ("shadow-stdlib/src/shadow_stdlib.mli", 1168, 46117, 46165), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 224)), 0, 0); Tag3 (("Effect", 17438), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Effect")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1171, 46198, 46201), ("shadow-stdlib/src/shadow_stdlib.mli", 1171, 46198, 46211), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Effect instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1171, 46198, 46213), ("shadow-stdlib/src/shadow_stdlib.mli", 1175, 46434, 46480), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1171, 46198, 46212), ("shadow-stdlib/src/shadow_stdlib.mli", 1175, 46434, 46481), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1171, 46198, 46212), ("shadow-stdlib/src/shadow_stdlib.mli", 1175, 46434, 46481), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1171, 46198, 46198), ("shadow-stdlib/src/shadow_stdlib.mli", 1175, 46434, 46482), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 225)), 0, 0); Tag3 (("Ephemeron", 17439), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Ephemeron")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1185, 46838, 46841), ("shadow-stdlib/src/shadow_stdlib.mli", 1185, 46838, 46851), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Ephemeron instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1185, 46838, 46853), ("shadow-stdlib/src/shadow_stdlib.mli", 1189, 47074, 47123), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1185, 46838, 46852), ("shadow-stdlib/src/shadow_stdlib.mli", 1189, 47074, 47124), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1185, 46838, 46852), ("shadow-stdlib/src/shadow_stdlib.mli", 1189, 47074, 47124), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1185, 46838, 46838), ("shadow-stdlib/src/shadow_stdlib.mli", 1189, 47074, 47125), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 227)), 0, 0); Tag3 (("Filename", 17440), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Filename")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1192, 47162, 47165), ("shadow-stdlib/src/shadow_stdlib.mli", 1192, 47162, 47175), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Filename instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1192, 47162, 47177), ("shadow-stdlib/src/shadow_stdlib.mli", 1196, 47398, 47446), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1192, 47162, 47176), ("shadow-stdlib/src/shadow_stdlib.mli", 1196, 47398, 47447), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1192, 47162, 47176), ("shadow-stdlib/src/shadow_stdlib.mli", 1196, 47398, 47447), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1192, 47162, 47162), ("shadow-stdlib/src/shadow_stdlib.mli", 1196, 47398, 47448), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 228)), 0, 0); Tag3 (("Format", 17441), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Format")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1206, 47795, 47798), ("shadow-stdlib/src/shadow_stdlib.mli", 1206, 47795, 47808), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\n[Base] doesn't export a [Format] module, although the \n[Stdlib.Format.formatter] type is available (as [Formatter.t])\nfor interaction with other libraries.", (("shadow-stdlib/src/shadow_stdlib.mli", 1206, 47795, 47810), ("shadow-stdlib/src/shadow_stdlib.mli", 1210, 47999, 48036), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1206, 47795, 47809), ("shadow-stdlib/src/shadow_stdlib.mli", 1210, 47999, 48037), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1206, 47795, 47809), ("shadow-stdlib/src/shadow_stdlib.mli", 1210, 47999, 48037), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1206, 47795, 47795), ("shadow-stdlib/src/shadow_stdlib.mli", 1210, 47999, 48038), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 230)), 0, 0); Tag3 (("Fun", 17442), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Fun")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1213, 48065, 48068), ("shadow-stdlib/src/shadow_stdlib.mli", 1213, 48065, 48078), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Fn] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 1213, 48065, 48080), ("shadow-stdlib/src/shadow_stdlib.mli", 1215, 48151, 48168), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1213, 48065, 48079), ("shadow-stdlib/src/shadow_stdlib.mli", 1215, 48151, 48169), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1213, 48065, 48079), ("shadow-stdlib/src/shadow_stdlib.mli", 1215, 48151, 48169), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1213, 48065, 48065), ("shadow-stdlib/src/shadow_stdlib.mli", 1215, 48151, 48170), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 231)), 0, 0); Tag3 (("Gc", 17443), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Gc")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1218, 48195, 48198), ("shadow-stdlib/src/shadow_stdlib.mli", 1218, 48195, 48208), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.Gc] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1218, 48195, 48210), ("shadow-stdlib/src/shadow_stdlib.mli", 1221, 48351, 48389), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1218, 48195, 48209), ("shadow-stdlib/src/shadow_stdlib.mli", 1221, 48351, 48390), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1218, 48195, 48209), ("shadow-stdlib/src/shadow_stdlib.mli", 1221, 48351, 48390), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1218, 48195, 48195), ("shadow-stdlib/src/shadow_stdlib.mli", 1221, 48351, 48391), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 232)), 0, 0); Tag3 (("In_channel", 17444), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "In_channel")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1231, 48752, 48755), ("shadow-stdlib/src/shadow_stdlib.mli", 1231, 48752, 48765), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.In_channel instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1231, 48752, 48767), ("shadow-stdlib/src/shadow_stdlib.mli", 1235, 48988, 49038), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1231, 48752, 48766), ("shadow-stdlib/src/shadow_stdlib.mli", 1235, 48988, 49039), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1231, 48752, 48766), ("shadow-stdlib/src/shadow_stdlib.mli", 1235, 48988, 49039), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1231, 48752, 48752), ("shadow-stdlib/src/shadow_stdlib.mli", 1235, 48988, 49040), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 234)), 0, 0); Tag3 (("Lexing", 17445), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Lexing")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1266, 50320, 50323), ("shadow-stdlib/src/shadow_stdlib.mli", 1266, 50320, 50333), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Lexing instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1266, 50320, 50335), ("shadow-stdlib/src/shadow_stdlib.mli", 1270, 50556, 50602), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1266, 50320, 50334), ("shadow-stdlib/src/shadow_stdlib.mli", 1270, 50556, 50603), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1266, 50320, 50334), ("shadow-stdlib/src/shadow_stdlib.mli", 1270, 50556, 50603), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1266, 50320, 50320), ("shadow-stdlib/src/shadow_stdlib.mli", 1270, 50556, 50604), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 239)), 0, 0); Tag3 (("ListLabels", 17446), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ListLabels")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1280, 50956, 50959), ("shadow-stdlib/src/shadow_stdlib.mli", 1280, 50956, 50969), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.ListLabels instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1280, 50956, 50971), ("shadow-stdlib/src/shadow_stdlib.mli", 1284, 51192, 51242), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1280, 50956, 50970), ("shadow-stdlib/src/shadow_stdlib.mli", 1284, 51192, 51243), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1280, 50956, 50970), ("shadow-stdlib/src/shadow_stdlib.mli", 1284, 51192, 51243), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1280, 50956, 50956), ("shadow-stdlib/src/shadow_stdlib.mli", 1284, 51192, 51244), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 241)), 0, 0); Tag3 (("Marshal", 17447), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Marshal")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1294, 51587, 51590), ("shadow-stdlib/src/shadow_stdlib.mli", 1294, 51587, 51600), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Marshal instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1294, 51587, 51602), ("shadow-stdlib/src/shadow_stdlib.mli", 1298, 51823, 51870), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1294, 51587, 51601), ("shadow-stdlib/src/shadow_stdlib.mli", 1298, 51823, 51871), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1294, 51587, 51601), ("shadow-stdlib/src/shadow_stdlib.mli", 1298, 51823, 51871), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1294, 51587, 51587), ("shadow-stdlib/src/shadow_stdlib.mli", 1298, 51823, 51872), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 243)), 0, 0); Tag3 (("MoreLabels", 17448), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "MoreLabels")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1301, 51913, 51916), ("shadow-stdlib/src/shadow_stdlib.mli", 1301, 51913, 51926), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.MoreLabels instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1301, 51913, 51928), ("shadow-stdlib/src/shadow_stdlib.mli", 1305, 52149, 52199), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1301, 51913, 51927), ("shadow-stdlib/src/shadow_stdlib.mli", 1305, 52149, 52200), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1301, 51913, 51927), ("shadow-stdlib/src/shadow_stdlib.mli", 1305, 52149, 52200), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1301, 51913, 51913), ("shadow-stdlib/src/shadow_stdlib.mli", 1305, 52149, 52201), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 244)), 0, 0); Tag3 (("Mutex", 17449), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Mutex")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1308, 52232, 52235), ("shadow-stdlib/src/shadow_stdlib.mli", 1308, 52232, 52245), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Mutex instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1308, 52232, 52247), ("shadow-stdlib/src/shadow_stdlib.mli", 1312, 52468, 52513), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1308, 52232, 52246), ("shadow-stdlib/src/shadow_stdlib.mli", 1312, 52468, 52514), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1308, 52232, 52246), ("shadow-stdlib/src/shadow_stdlib.mli", 1312, 52468, 52514), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1308, 52232, 52232), ("shadow-stdlib/src/shadow_stdlib.mli", 1312, 52468, 52515), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 245)), 0, 0); Tag3 (("Obj", 17450), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Obj")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1322, 52868, 52871), ("shadow-stdlib/src/shadow_stdlib.mli", 1322, 52868, 52881), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Obj instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1322, 52868, 52883), ("shadow-stdlib/src/shadow_stdlib.mli", 1326, 53104, 53147), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1322, 52868, 52882), ("shadow-stdlib/src/shadow_stdlib.mli", 1326, 53104, 53148), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1322, 52868, 52882), ("shadow-stdlib/src/shadow_stdlib.mli", 1326, 53104, 53148), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1322, 52868, 52868), ("shadow-stdlib/src/shadow_stdlib.mli", 1326, 53104, 53149), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 247)), 0, 0); Tag3 (("Oo", 17451), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Oo")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1329, 53174, 53177), ("shadow-stdlib/src/shadow_stdlib.mli", 1329, 53174, 53187), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Oo instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1329, 53174, 53189), ("shadow-stdlib/src/shadow_stdlib.mli", 1333, 53410, 53452), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1329, 53174, 53188), ("shadow-stdlib/src/shadow_stdlib.mli", 1333, 53410, 53453), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1329, 53174, 53188), ("shadow-stdlib/src/shadow_stdlib.mli", 1333, 53410, 53453), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1329, 53174, 53174), ("shadow-stdlib/src/shadow_stdlib.mli", 1333, 53410, 53454), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 248)), 0, 0); Tag3 (("Out_channel", 17452), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Out_channel")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1343, 53814, 53817), ("shadow-stdlib/src/shadow_stdlib.mli", 1343, 53814, 53827), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Out_channel instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1343, 53814, 53829), ("shadow-stdlib/src/shadow_stdlib.mli", 1347, 54050, 54101), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1343, 53814, 53828), ("shadow-stdlib/src/shadow_stdlib.mli", 1347, 54050, 54102), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1343, 53814, 53828), ("shadow-stdlib/src/shadow_stdlib.mli", 1347, 54050, 54102), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1343, 53814, 53814), ("shadow-stdlib/src/shadow_stdlib.mli", 1347, 54050, 54103), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 250)), 0, 0); Tag3 (("Parsing", 17453), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Parsing")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1350, 54138, 54141), ("shadow-stdlib/src/shadow_stdlib.mli", 1350, 54138, 54151), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Parsing instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1350, 54138, 54153), ("shadow-stdlib/src/shadow_stdlib.mli", 1354, 54374, 54421), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1350, 54138, 54152), ("shadow-stdlib/src/shadow_stdlib.mli", 1354, 54374, 54422), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1350, 54138, 54152), ("shadow-stdlib/src/shadow_stdlib.mli", 1354, 54374, 54422), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1350, 54138, 54138), ("shadow-stdlib/src/shadow_stdlib.mli", 1354, 54374, 54423), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 251)), 0, 0); Tag3 (("Printexc", 17454), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Printexc")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1357, 54460, 54463), ("shadow-stdlib/src/shadow_stdlib.mli", 1357, 54460, 54473), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Exn] or [Backtrace] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 1357, 54460, 54475), ("shadow-stdlib/src/shadow_stdlib.mli", 1359, 54546, 54579), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1357, 54460, 54474), ("shadow-stdlib/src/shadow_stdlib.mli", 1359, 54546, 54580), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1357, 54460, 54474), ("shadow-stdlib/src/shadow_stdlib.mli", 1359, 54546, 54580), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1357, 54460, 54460), ("shadow-stdlib/src/shadow_stdlib.mli", 1359, 54546, 54581), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 252)), 0, 0); Tag3 (("Scanf", 17455), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Scanf")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1390, 55877, 55880), ("shadow-stdlib/src/shadow_stdlib.mli", 1390, 55877, 55890), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Scanf instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1390, 55877, 55892), ("shadow-stdlib/src/shadow_stdlib.mli", 1394, 56113, 56158), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1390, 55877, 55891), ("shadow-stdlib/src/shadow_stdlib.mli", 1394, 56113, 56159), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1390, 55877, 55891), ("shadow-stdlib/src/shadow_stdlib.mli", 1394, 56113, 56159), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1390, 55877, 55877), ("shadow-stdlib/src/shadow_stdlib.mli", 1394, 56113, 56160), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 257)), 0, 0); Tag3 (("Semaphore", 17456), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Semaphore")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1397, 56199, 56202), ("shadow-stdlib/src/shadow_stdlib.mli", 1397, 56199, 56212), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Semaphore instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1397, 56199, 56214), ("shadow-stdlib/src/shadow_stdlib.mli", 1401, 56435, 56484), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1397, 56199, 56213), ("shadow-stdlib/src/shadow_stdlib.mli", 1401, 56435, 56485), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1397, 56199, 56213), ("shadow-stdlib/src/shadow_stdlib.mli", 1401, 56435, 56485), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1397, 56199, 56199), ("shadow-stdlib/src/shadow_stdlib.mli", 1401, 56435, 56486), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 258)), 0, 0); Tag3 (("Seq", 17457), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Seq")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1404, 56513, 56516), ("shadow-stdlib/src/shadow_stdlib.mli", 1404, 56513, 56526), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is no equivalent functionality in Base or Stdio but you can use\n[Sequence] instead.\nAlternatively, if you really want to refer the stdlib you can use\n[Stdlib.Seq].", (("shadow-stdlib/src/shadow_stdlib.mli", 1404, 56513, 56528), ("shadow-stdlib/src/shadow_stdlib.mli", 1409, 56755, 56768), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1404, 56513, 56527), ("shadow-stdlib/src/shadow_stdlib.mli", 1409, 56755, 56769), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1404, 56513, 56527), ("shadow-stdlib/src/shadow_stdlib.mli", 1409, 56755, 56769), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1404, 56513, 56513), ("shadow-stdlib/src/shadow_stdlib.mli", 1409, 56755, 56770), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 259)), 0, 0); Tag3 (("StdLabels", 17458), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "StdLabels")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1426, 57431, 57434), ("shadow-stdlib/src/shadow_stdlib.mli", 1426, 57431, 57444), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.StdLabels instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1426, 57431, 57446), ("shadow-stdlib/src/shadow_stdlib.mli", 1430, 57667, 57716), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1426, 57431, 57445), ("shadow-stdlib/src/shadow_stdlib.mli", 1430, 57667, 57717), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1426, 57431, 57445), ("shadow-stdlib/src/shadow_stdlib.mli", 1430, 57667, 57717), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1426, 57431, 57431), ("shadow-stdlib/src/shadow_stdlib.mli", 1430, 57667, 57718), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 262)), 0, 0); Tag3 (("StringLabels", 17459), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "StringLabels")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1440, 58080, 58083), ("shadow-stdlib/src/shadow_stdlib.mli", 1440, 58080, 58093), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.StringLabels instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1440, 58080, 58095), ("shadow-stdlib/src/shadow_stdlib.mli", 1444, 58316, 58368), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1440, 58080, 58094), ("shadow-stdlib/src/shadow_stdlib.mli", 1444, 58316, 58369), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1440, 58080, 58094), ("shadow-stdlib/src/shadow_stdlib.mli", 1444, 58316, 58369), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1440, 58080, 58080), ("shadow-stdlib/src/shadow_stdlib.mli", 1444, 58316, 58370), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 264)), 0, 0); Tag3 (("Type", 17460), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Type")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1454, 58707, 58710), ("shadow-stdlib/src/shadow_stdlib.mli", 1454, 58707, 58720), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Type instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1454, 58707, 58722), ("shadow-stdlib/src/shadow_stdlib.mli", 1458, 58943, 58987), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1454, 58707, 58721), ("shadow-stdlib/src/shadow_stdlib.mli", 1458, 58943, 58988), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1454, 58707, 58721), ("shadow-stdlib/src/shadow_stdlib.mli", 1458, 58943, 58988), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1454, 58707, 58707), ("shadow-stdlib/src/shadow_stdlib.mli", 1458, 58943, 58989), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 266)), 0, 0); Tag3 (("Weak", 17461), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Weak")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1475, 59643, 59646), ("shadow-stdlib/src/shadow_stdlib.mli", 1475, 59643, 59656), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Weak instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1475, 59643, 59658), ("shadow-stdlib/src/shadow_stdlib.mli", 1479, 59879, 59923), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1475, 59643, 59657), ("shadow-stdlib/src/shadow_stdlib.mli", 1479, 59879, 59924), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1475, 59643, 59657), ("shadow-stdlib/src/shadow_stdlib.mli", 1479, 59879, 59924), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1475, 59643, 59643), ("shadow-stdlib/src/shadow_stdlib.mli", 1479, 59879, 59925), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 269)), 0, 0); Tag1 (("ref", 17462), ([((("a")), 100000000, 0, -236)], 1, [[(("contents", 16107), 1, ((("a")), 100000000, 0, -236), (("src/import0.ml", 44, 1737, 1769), ("src/import0.ml", 44, 1737, 1790), 0), 0, Tag1 ("Base__Import0", 5))]], 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [((("a")), 100000000, 0, -236)], (0)), 100000000, 0, -235)), [63], [0], 0, 0, (("src/import0.ml", 44, 1737, 1737), ("src/import0.ml", 44, 1737, 1792), 0), 0, 0, 0, Tag1 ("Base__Import0", 4)), 1, 0); Tag3 (("Stdlib", 17463), 0, (Tag1 ([(("raise", 17529), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -1460), ((("a")), 100000000, 0, -1459), 0), 100000000, 0, -1458), (("%raise", 1, 1, "", [0], 0)), (("stdlib.mli", 30, 1602, 1602), ("stdlib.mli", 30, 1602, 1639), 0), 0, Tag1 ("Stdlib", 0)), 0); (("raise_notrace", 17530), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -1457), ((("a")), 100000000, 0, -1456), 0), 100000000, 0, -1455), (("%raise_notrace", 1, 1, "", [0], 0)), (("stdlib.mli", 33, 1680, 1680), ("stdlib.mli", 33, 1680, 1733), 0), 0, Tag1 ("Stdlib", 1)), 0); (("invalid_arg", 17531), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1454), ((("a")), 100000000, 0, -1453), 0), 100000000, 0, -1452), 0, (("stdlib.mli", 38, 1820, 1820), ("stdlib.mli", 38, 1820, 1850), 0), 0, Tag1 ("Stdlib", 2)), 0); (("failwith", 17532), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1451), ((("a")), 100000000, 0, -1450), 0), 100000000, 0, -1449), 0, (("stdlib.mli", 41, 1917, 1917), ("stdlib.mli", 41, 1917, 1944), 0), 0, Tag1 ("Stdlib", 3)), 0); Tag2 (("Exit", 17533), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Stdlib", 4)), 2, 0); Tag2 (("Match_failure", 17534), ((Tag3 ("exn", 7)), 0, ([(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1446); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1447); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1448)]), 100000000, 0, -1445)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), [(("ocaml.warn_on_literal_pattern", (("stdlib.mli", 49, 2179, 2183), ("stdlib.mli", 49, 2179, 2212), 0)), (0), (("stdlib.mli", 49, 2179, 2181), ("stdlib.mli", 49, 2179, 2213), 0))], Tag1 ("Stdlib", 5)), 2, 0); Tag2 (("Assert_failure", 17535), ((Tag3 ("exn", 7)), 0, ([(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1442); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1443); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1444)]), 100000000, 0, -1441)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), [(("ocaml.warn_on_literal_pattern", (("stdlib.mli", 55, 2458, 2462), ("stdlib.mli", 55, 2458, 2491), 0)), (0), (("stdlib.mli", 55, 2458, 2460), ("stdlib.mli", 55, 2458, 2492), 0))], Tag1 ("Stdlib", 6)), 2, 0); Tag2 (("Invalid_argument", 17536), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1440)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), [(("ocaml.warn_on_literal_pattern", (("stdlib.mli", 61, 2699, 2703), ("stdlib.mli", 61, 2699, 2732), 0)), (0), (("stdlib.mli", 61, 2699, 2701), ("stdlib.mli", 61, 2699, 2733), 0))], Tag1 ("Stdlib", 7)), 2, 0); Tag2 (("Failure", 17537), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1439)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), [(("ocaml.warn_on_literal_pattern", (("stdlib.mli", 69, 3065, 3069), ("stdlib.mli", 69, 3065, 3098), 0)), (0), (("stdlib.mli", 69, 3065, 3067), ("stdlib.mli", 69, 3065, 3099), 0))], Tag1 ("Stdlib", 8)), 2, 0); Tag2 (("Not_found", 17538), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Stdlib", 9)), 2, 0); Tag2 (("Out_of_memory", 17539), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Stdlib", 10)), 2, 0); Tag2 (("Stack_overflow", 17540), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Stdlib", 11)), 2, 0); Tag2 (("Sys_error", 17541), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1438)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), [(("ocaml.warn_on_literal_pattern", (("stdlib.mli", 94, 4027, 4031), ("stdlib.mli", 94, 4027, 4060), 0)), (0), (("stdlib.mli", 94, 4027, 4029), ("stdlib.mli", 94, 4027, 4061), 0))], Tag1 ("Stdlib", 12)), 2, 0); Tag2 (("End_of_file", 17542), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Stdlib", 13)), 2, 0); Tag2 (("Division_by_zero", 17543), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Stdlib", 14)), 2, 0); Tag2 (("Sys_blocked_io", 17544), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Stdlib", 15)), 2, 0); Tag2 (("Undefined_recursive_module", 17545), ((Tag3 ("exn", 7)), 0, ([(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1435); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1436); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1437)]), 100000000, 0, -1434)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), [(("ocaml.warn_on_literal_pattern", (("stdlib.mli", 114, 4788, 4792), ("stdlib.mli", 114, 4788, 4821), 0)), (0), (("stdlib.mli", 114, 4788, 4790), ("stdlib.mli", 114, 4788, 4822), 0))], Tag1 ("Stdlib", 16)), 2, 0); (("=", 17546), ((Tag1 (0, ((("a")), 100000000, 0, -1433), (Tag1 (0, ((("a")), 100000000, 0, -1433), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1432), 0), 100000000, 0, -1431), 0), 100000000, 0, -1430), (("%equal", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 121, 5049, 5049), ("stdlib.mli", 121, 5049, 5093), 0), 0, Tag1 ("Stdlib", 17)), 0); (("<>", 17547), ((Tag1 (0, ((("a")), 100000000, 0, -1429), (Tag1 (0, ((("a")), 100000000, 0, -1429), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1428), 0), 100000000, 0, -1427), 0), 100000000, 0, -1426), (("%notequal", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 130, 5557, 5557), ("stdlib.mli", 130, 5557, 5605), 0), 0, Tag1 ("Stdlib", 18)), 0); (("<", 17548), ((Tag1 (0, ((("a")), 100000000, 0, -1425), (Tag1 (0, ((("a")), 100000000, 0, -1425), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1424), 0), 100000000, 0, -1423), 0), 100000000, 0, -1422), (("%lessthan", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 135, 5719, 5719), ("stdlib.mli", 135, 5719, 5766), 0), 0, Tag1 ("Stdlib", 19)), 0); ((">", 17549), ((Tag1 (0, ((("a")), 100000000, 0, -1421), (Tag1 (0, ((("a")), 100000000, 0, -1421), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1420), 0), 100000000, 0, -1419), 0), 100000000, 0, -1418), (("%greaterthan", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 140, 5873, 5873), ("stdlib.mli", 140, 5873, 5923), 0), 0, Tag1 ("Stdlib", 20)), 0); (("<=", 17550), ((Tag1 (0, ((("a")), 100000000, 0, -1417), (Tag1 (0, ((("a")), 100000000, 0, -1417), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1416), 0), 100000000, 0, -1415), 0), 100000000, 0, -1414), (("%lessequal", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 145, 6031, 6031), ("stdlib.mli", 145, 6031, 6080), 0), 0, Tag1 ("Stdlib", 21)), 0); ((">=", 17551), ((Tag1 (0, ((("a")), 100000000, 0, -1413), (Tag1 (0, ((("a")), 100000000, 0, -1413), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1412), 0), 100000000, 0, -1411), 0), 100000000, 0, -1410), (("%greaterequal", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 150, 6188, 6188), ("stdlib.mli", 150, 6188, 6240), 0), 0, Tag1 ("Stdlib", 22)), 0); (("compare", 17552), ((Tag1 (0, ((("a")), 100000000, 0, -1409), (Tag1 (0, ((("a")), 100000000, 0, -1409), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1408), 0), 100000000, 0, -1407), 0), 100000000, 0, -1406), (("%compare", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 162, 6790, 6790), ("stdlib.mli", 162, 6790, 6837), 0), 0, Tag1 ("Stdlib", 23)), 0); (("min", 17553), ((Tag1 (0, ((("a")), 100000000, 0, -1405), (Tag1 (0, ((("a")), 100000000, 0, -1405), ((("a")), 100000000, 0, -1405), 0), 100000000, 0, -1404), 0), 100000000, 0, -1403), 0, (("stdlib.mli", 181, 7797, 7797), ("stdlib.mli", 181, 7797, 7821), 0), 0, Tag1 ("Stdlib", 24)), 0); (("max", 17554), ((Tag1 (0, ((("a")), 100000000, 0, -1402), (Tag1 (0, ((("a")), 100000000, 0, -1402), ((("a")), 100000000, 0, -1402), 0), 100000000, 0, -1401), 0), 100000000, 0, -1400), 0, (("stdlib.mli", 186, 7961, 7961), ("stdlib.mli", 186, 7961, 7985), 0), 0, Tag1 ("Stdlib", 25)), 0); (("==", 17555), ((Tag1 (0, ((("a")), 100000000, 0, -1399), (Tag1 (0, ((("a")), 100000000, 0, -1399), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1398), 0), 100000000, 0, -1397), 0), 100000000, 0, -1396), (("%eq", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 191, 8125, 8125), ("stdlib.mli", 191, 8125, 8167), 0), 0, Tag1 ("Stdlib", 26)), 0); (("!=", 17556), ((Tag1 (0, ((("a")), 100000000, 0, -1395), (Tag1 (0, ((("a")), 100000000, 0, -1395), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1394), 0), 100000000, 0, -1393), 0), 100000000, 0, -1392), (("%noteq", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 203, 8694, 8694), ("stdlib.mli", 203, 8694, 8739), 0), 0, Tag1 ("Stdlib", 27)), 0); (("not", 17557), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1391), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1390), 0), 100000000, 0, -1389), (("%boolnot", 1, 1, "", [0], 0)), (("stdlib.mli", 211, 8887, 8887), ("stdlib.mli", 211, 8887, 8927), 0), 0, Tag1 ("Stdlib", 28)), 0); (("&&", 17558), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1388), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1387), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1386), 0), 100000000, 0, -1385), 0), 100000000, 0, -1384), (("%sequand", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 214, 8958, 8958), ("stdlib.mli", 214, 8958, 9009), 0), 0, Tag1 ("Stdlib", 29)), 0); (("||", 17559), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1383), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1382), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1381), 0), 100000000, 0, -1380), 0), 100000000, 0, -1379), (("%sequor", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 221, 9258, 9258), ("stdlib.mli", 221, 9258, 9308), 0), 0, Tag1 ("Stdlib", 30)), 0); (("__LOC__", 17560), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1378), (("%loc_LOC", 0, 1, "", 0, 0)), (("stdlib.mli", 230, 9577, 9577), ("stdlib.mli", 230, 9577, 9615), 0), 0, Tag1 ("Stdlib", 31)), 0); (("__FILE__", 17561), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1377), (("%loc_FILE", 0, 1, "", 0, 0)), (("stdlib.mli", 237, 9843, 9843), ("stdlib.mli", 237, 9843, 9883), 0), 0, Tag1 ("Stdlib", 32)), 0); (("__LINE__", 17562), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1376), (("%loc_LINE", 0, 1, "", 0, 0)), (("stdlib.mli", 243, 9992, 9992), ("stdlib.mli", 243, 9992, 10029), 0), 0, Tag1 ("Stdlib", 33)), 0); (("__MODULE__", 17563), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1375), (("%loc_MODULE", 0, 1, "", 0, 0)), (("stdlib.mli", 249, 10178, 10178), ("stdlib.mli", 249, 10178, 10222), 0), 0, Tag1 ("Stdlib", 34)), 0); (("__POS__", 17564), ((Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1371); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1372); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1373); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1374)]), 100000000, 0, -1370), (("%loc_POS", 0, 1, "", 0, 0)), (("stdlib.mli", 255, 10330, 10330), ("stdlib.mli", 255, 10330, 10386), 0), 0, Tag1 ("Stdlib", 35)), 0); (("__FUNCTION__", 17565), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1369), (("%loc_FUNCTION", 0, 1, "", 0, 0)), (("stdlib.mli", 264, 10744, 10744), ("stdlib.mli", 264, 10744, 10792), 0), 0, Tag1 ("Stdlib", 36)), 0); (("__LOC_OF__", 17566), ((Tag1 (0, ((("a")), 100000000, 0, -1368), (Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1367); ((("a")), 100000000, 0, -1368)]), 100000000, 0, -1366), 0), 100000000, 0, -1365), (("%loc_LOC", 1, 1, "", [0], 0)), (("stdlib.mli", 270, 10933, 10933), ("stdlib.mli", 270, 10933, 10985), 0), 0, Tag1 ("Stdlib", 37)), 0); (("__LINE_OF__", 17567), ((Tag1 (0, ((("a")), 100000000, 0, -1364), (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1363); ((("a")), 100000000, 0, -1364)]), 100000000, 0, -1362), 0), 100000000, 0, -1361), (("%loc_LINE", 1, 1, "", [0], 0)), (("stdlib.mli", 278, 11238, 11238), ("stdlib.mli", 278, 11238, 11289), 0), 0, Tag1 ("Stdlib", 38)), 0); (("__POS_OF__", 17568), ((Tag1 (0, ((("a")), 100000000, 0, -1360), (Tag2 ([(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1356); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1357); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1358); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1359)]), 100000000, 0, -1355); ((("a")), 100000000, 0, -1360)]), 100000000, 0, -1354), 0), 100000000, 0, -1353), (("%loc_POS", 1, 1, "", [0], 0)), (("stdlib.mli", 285, 11496, 11496), ("stdlib.mli", 285, 11496, 11568), 0), 0, Tag1 ("Stdlib", 39)), 0); (("|>", 17569), ((Tag1 (0, ((("a")), 100000000, 0, -1352), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -1352), ((("b")), 100000000, 0, -1350), 0), 100000000, 0, -1351), ((("b")), 100000000, 0, -1350), 0), 100000000, 0, -1349), 0), 100000000, 0, -1348), (("%revapply", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 297, 12013, 12013), ("stdlib.mli", 297, 12013, 12067), 0), 0, Tag1 ("Stdlib", 40)), 0); (("@@", 17570), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -1346), ((("b")), 100000000, 0, -1345), 0), 100000000, 0, -1347), (Tag1 (0, ((("a")), 100000000, 0, -1346), ((("b")), 100000000, 0, -1345), 0), 100000000, 0, -1344), 0), 100000000, 0, -1343), (("%apply", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 304, 12245, 12245), ("stdlib.mli", 304, 12245, 12296), 0), 0, Tag1 ("Stdlib", 41)), 0); (("~-", 17571), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1342), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1341), 0), 100000000, 0, -1340), (("%negint", 1, 1, "", [0], 0)), (("stdlib.mli", 317, 12635, 12635), ("stdlib.mli", 317, 12635, 12675), 0), 0, Tag1 ("Stdlib", 42)), 0); (("~+", 17572), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1339), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1338), 0), 100000000, 0, -1337), (("%identity", 1, 1, "", [0], 0)), (("stdlib.mli", 323, 12810, 12810), ("stdlib.mli", 323, 12810, 12852), 0), 0, Tag1 ("Stdlib", 43)), 0); (("succ", 17573), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1336), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1335), 0), 100000000, 0, -1334), (("%succint", 1, 1, "", [0], 0)), (("stdlib.mli", 329, 13002, 13002), ("stdlib.mli", 329, 13002, 13041), 0), 0, Tag1 ("Stdlib", 44)), 0); (("pred", 17574), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1333), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1332), 0), 100000000, 0, -1331), (("%predint", 1, 1, "", [0], 0)), (("stdlib.mli", 332, 13071, 13071), ("stdlib.mli", 332, 13071, 13110), 0), 0, Tag1 ("Stdlib", 45)), 0); (("+", 17575), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1330), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1329), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1328), 0), 100000000, 0, -1327), 0), 100000000, 0, -1326), (("%addint", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 335, 13140, 13140), ("stdlib.mli", 335, 13140, 13186), 0), 0, Tag1 ("Stdlib", 46)), 0); (("-", 17576), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1325), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1324), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1323), 0), 100000000, 0, -1322), 0), 100000000, 0, -1321), (("%subint", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 340, 13289, 13289), ("stdlib.mli", 340, 13289, 13335), 0), 0, Tag1 ("Stdlib", 47)), 0); (("*", 17577), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1320), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1319), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1318), 0), 100000000, 0, -1317), 0), 100000000, 0, -1316), (("%mulint", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 345, 13443, 13443), ("stdlib.mli", 345, 13443, 13489), 0), 0, Tag1 ("Stdlib", 48)), 0); (("/", 17578), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1315), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1314), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1313), 0), 100000000, 0, -1312), 0), 100000000, 0, -1311), (("%divint", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 350, 13598, 13598), ("stdlib.mli", 350, 13598, 13644), 0), 0, Tag1 ("Stdlib", 49)), 0); (("mod", 17579), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1310), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1309), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1308), 0), 100000000, 0, -1307), 0), 100000000, 0, -1306), (("%modint", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 361, 14064, 14064), ("stdlib.mli", 361, 14064, 14112), 0), 0, Tag1 ("Stdlib", 50)), 0); (("abs", 17580), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1305), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1304), 0), 100000000, 0, -1303), 0, (("stdlib.mli", 373, 14515, 14515), ("stdlib.mli", 373, 14515, 14535), 0), 0, Tag1 ("Stdlib", 51)), 0); (("max_int", 17581), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1302), 0, (("stdlib.mli", 377, 14650, 14650), ("stdlib.mli", 377, 14650, 14667), 0), 0, Tag1 ("Stdlib", 52)), 0); (("min_int", 17582), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1301), 0, (("stdlib.mli", 380, 14712, 14712), ("stdlib.mli", 380, 14712, 14729), 0), 0, Tag1 ("Stdlib", 53)), 0); (("land", 17583), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1300), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1299), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1298), 0), 100000000, 0, -1297), 0), 100000000, 0, -1296), (("%andint", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 386, 14806, 14806), ("stdlib.mli", 386, 14806, 14855), 0), 0, Tag1 ("Stdlib", 54)), 0); (("lor", 17584), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1295), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1294), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1293), 0), 100000000, 0, -1292), 0), 100000000, 0, -1291), (("%orint", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 391, 14961, 14961), ("stdlib.mli", 391, 14961, 15008), 0), 0, Tag1 ("Stdlib", 55)), 0); (("lxor", 17585), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1290), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1289), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1288), 0), 100000000, 0, -1287), 0), 100000000, 0, -1286), (("%xorint", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 396, 15113, 15113), ("stdlib.mli", 396, 15113, 15162), 0), 0, Tag1 ("Stdlib", 56)), 0); (("lnot", 17586), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1285), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1284), 0), 100000000, 0, -1283), 0, (("stdlib.mli", 401, 15277, 15277), ("stdlib.mli", 401, 15277, 15298), 0), 0, Tag1 ("Stdlib", 57)), 0); (("lsl", 17587), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1282), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1281), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1280), 0), 100000000, 0, -1279), 0), 100000000, 0, -1278), (("%lslint", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 404, 15333, 15333), ("stdlib.mli", 404, 15333, 15381), 0), 0, Tag1 ("Stdlib", 58)), 0); (("lsr", 17588), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1277), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1276), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1275), 0), 100000000, 0, -1274), 0), 100000000, 0, -1273), (("%lsrint", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 410, 15577, 15577), ("stdlib.mli", 410, 15577, 15625), 0), 0, Tag1 ("Stdlib", 59)), 0); (("asr", 17589), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1272), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1271), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1270), 0), 100000000, 0, -1269), 0), 100000000, 0, -1268), (("%asrint", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 418, 15906, 15906), ("stdlib.mli", 418, 15906, 15954), 0), 0, Tag1 ("Stdlib", 60)), 0); (("~-.", 17590), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1267), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1266), 0), 100000000, 0, -1265), (("%negfloat", 1, 1, "", [0], 0)), (("stdlib.mli", 439, 16893, 16893), ("stdlib.mli", 439, 16893, 16940), 0), 0, Tag1 ("Stdlib", 61)), 0); (("~+.", 17591), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1264), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1263), 0), 100000000, 0, -1262), (("%identity", 1, 1, "", [0], 0)), (("stdlib.mli", 444, 17076, 17076), ("stdlib.mli", 444, 17076, 17123), 0), 0, Tag1 ("Stdlib", 62)), 0); (("+.", 17592), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1261), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1260), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1259), 0), 100000000, 0, -1258), 0), 100000000, 0, -1257), (("%addfloat", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 450, 17275, 17275), ("stdlib.mli", 450, 17275, 17330), 0), 0, Tag1 ("Stdlib", 63)), 0); (("-.", 17593), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1256), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1255), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1254), 0), 100000000, 0, -1253), 0), 100000000, 0, -1252), (("%subfloat", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 455, 17440, 17440), ("stdlib.mli", 455, 17440, 17495), 0), 0, Tag1 ("Stdlib", 64)), 0); (("*.", 17594), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1251), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1250), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1249), 0), 100000000, 0, -1248), 0), 100000000, 0, -1247), (("%mulfloat", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 460, 17608, 17608), ("stdlib.mli", 460, 17608, 17663), 0), 0, Tag1 ("Stdlib", 65)), 0); (("/.", 17595), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1246), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1245), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1244), 0), 100000000, 0, -1243), 0), 100000000, 0, -1242), (("%divfloat", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 465, 17779, 17779), ("stdlib.mli", 465, 17779, 17834), 0), 0, Tag1 ("Stdlib", 66)), 0); (("**", 17596), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1241), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1240), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1239), 0), 100000000, 0, -1238), 0), 100000000, 0, -1237), (("caml_power_float", 2, 0, "pow", [1; 1], 1)), (("stdlib.mli", 470, 17944, 17944), ("stdlib.mli", 471, 18013, 18038), 0), [(("unboxed", (("stdlib.mli", 471, 18013, 18018), ("stdlib.mli", 471, 18013, 18025), 0)), (0), (("stdlib.mli", 471, 18013, 18015), ("stdlib.mli", 471, 18013, 18026), 0)); (("noalloc", (("stdlib.mli", 471, 18013, 18030), ("stdlib.mli", 471, 18013, 18037), 0)), (0), (("stdlib.mli", 471, 18013, 18027), ("stdlib.mli", 471, 18013, 18038), 0))], Tag1 ("Stdlib", 67)), 0); (("sqrt", 17597), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1236), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1235), 0), 100000000, 0, -1234), (("caml_sqrt_float", 1, 0, "sqrt", [1], 1)), (("stdlib.mli", 476, 18140, 18140), ("stdlib.mli", 477, 18198, 18223), 0), [(("unboxed", (("stdlib.mli", 477, 18198, 18203), ("stdlib.mli", 477, 18198, 18210), 0)), (0), (("stdlib.mli", 477, 18198, 18200), ("stdlib.mli", 477, 18198, 18211), 0)); (("noalloc", (("stdlib.mli", 477, 18198, 18215), ("stdlib.mli", 477, 18198, 18222), 0)), (0), (("stdlib.mli", 477, 18198, 18212), ("stdlib.mli", 477, 18198, 18223), 0))], Tag1 ("Stdlib", 68)), 0); (("exp", 17598), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1233), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1232), 0), 100000000, 0, -1231), (("caml_exp_float", 1, 0, "exp", [1], 1)), (("stdlib.mli", 480, 18245, 18245), ("stdlib.mli", 480, 18245, 18323), 0), [(("unboxed", (("stdlib.mli", 480, 18245, 18303), ("stdlib.mli", 480, 18245, 18310), 0)), (0), (("stdlib.mli", 480, 18245, 18300), ("stdlib.mli", 480, 18245, 18311), 0)); (("noalloc", (("stdlib.mli", 480, 18245, 18315), ("stdlib.mli", 480, 18245, 18322), 0)), (0), (("stdlib.mli", 480, 18245, 18312), ("stdlib.mli", 480, 18245, 18323), 0))], Tag1 ("Stdlib", 69)), 0); (("log", 17599), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1230), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1229), 0), 100000000, 0, -1228), (("caml_log_float", 1, 0, "log", [1], 1)), (("stdlib.mli", 483, 18345, 18345), ("stdlib.mli", 483, 18345, 18423), 0), [(("unboxed", (("stdlib.mli", 483, 18345, 18403), ("stdlib.mli", 483, 18345, 18410), 0)), (0), (("stdlib.mli", 483, 18345, 18400), ("stdlib.mli", 483, 18345, 18411), 0)); (("noalloc", (("stdlib.mli", 483, 18345, 18415), ("stdlib.mli", 483, 18345, 18422), 0)), (0), (("stdlib.mli", 483, 18345, 18412), ("stdlib.mli", 483, 18345, 18423), 0))], Tag1 ("Stdlib", 70)), 0); (("log10", 17600), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1227), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1226), 0), 100000000, 0, -1225), (("caml_log10_float", 1, 0, "log10", [1], 1)), (("stdlib.mli", 486, 18451, 18451), ("stdlib.mli", 487, 18512, 18537), 0), [(("unboxed", (("stdlib.mli", 487, 18512, 18517), ("stdlib.mli", 487, 18512, 18524), 0)), (0), (("stdlib.mli", 487, 18512, 18514), ("stdlib.mli", 487, 18512, 18525), 0)); (("noalloc", (("stdlib.mli", 487, 18512, 18529), ("stdlib.mli", 487, 18512, 18536), 0)), (0), (("stdlib.mli", 487, 18512, 18526), ("stdlib.mli", 487, 18512, 18537), 0))], Tag1 ("Stdlib", 71)), 0); (("expm1", 17601), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1224), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1223), 0), 100000000, 0, -1222), (("caml_expm1_float", 1, 0, "caml_expm1", [1], 1)), (("stdlib.mli", 490, 18565, 18565), ("stdlib.mli", 491, 18631, 18656), 0), [(("unboxed", (("stdlib.mli", 491, 18631, 18636), ("stdlib.mli", 491, 18631, 18643), 0)), (0), (("stdlib.mli", 491, 18631, 18633), ("stdlib.mli", 491, 18631, 18644), 0)); (("noalloc", (("stdlib.mli", 491, 18631, 18648), ("stdlib.mli", 491, 18631, 18655), 0)), (0), (("stdlib.mli", 491, 18631, 18645), ("stdlib.mli", 491, 18631, 18656), 0))], Tag1 ("Stdlib", 72)), 0); (("log1p", 17602), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1221), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1220), 0), 100000000, 0, -1219), (("caml_log1p_float", 1, 0, "caml_log1p", [1], 1)), (("stdlib.mli", 497, 18787, 18787), ("stdlib.mli", 498, 18853, 18878), 0), [(("unboxed", (("stdlib.mli", 498, 18853, 18858), ("stdlib.mli", 498, 18853, 18865), 0)), (0), (("stdlib.mli", 498, 18853, 18855), ("stdlib.mli", 498, 18853, 18866), 0)); (("noalloc", (("stdlib.mli", 498, 18853, 18870), ("stdlib.mli", 498, 18853, 18877), 0)), (0), (("stdlib.mli", 498, 18853, 18867), ("stdlib.mli", 498, 18853, 18878), 0))], Tag1 ("Stdlib", 73)), 0); (("cos", 17603), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1218), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1217), 0), 100000000, 0, -1216), (("caml_cos_float", 1, 0, "cos", [1], 1)), (("stdlib.mli", 504, 19030, 19030), ("stdlib.mli", 504, 19030, 19108), 0), [(("unboxed", (("stdlib.mli", 504, 19030, 19088), ("stdlib.mli", 504, 19030, 19095), 0)), (0), (("stdlib.mli", 504, 19030, 19085), ("stdlib.mli", 504, 19030, 19096), 0)); (("noalloc", (("stdlib.mli", 504, 19030, 19100), ("stdlib.mli", 504, 19030, 19107), 0)), (0), (("stdlib.mli", 504, 19030, 19097), ("stdlib.mli", 504, 19030, 19108), 0))], Tag1 ("Stdlib", 74)), 0); (("sin", 17604), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1215), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1214), 0), 100000000, 0, -1213), (("caml_sin_float", 1, 0, "sin", [1], 1)), (("stdlib.mli", 507, 19150, 19150), ("stdlib.mli", 507, 19150, 19228), 0), [(("unboxed", (("stdlib.mli", 507, 19150, 19208), ("stdlib.mli", 507, 19150, 19215), 0)), (0), (("stdlib.mli", 507, 19150, 19205), ("stdlib.mli", 507, 19150, 19216), 0)); (("noalloc", (("stdlib.mli", 507, 19150, 19220), ("stdlib.mli", 507, 19150, 19227), 0)), (0), (("stdlib.mli", 507, 19150, 19217), ("stdlib.mli", 507, 19150, 19228), 0))], Tag1 ("Stdlib", 75)), 0); (("tan", 17605), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1212), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1211), 0), 100000000, 0, -1210), (("caml_tan_float", 1, 0, "tan", [1], 1)), (("stdlib.mli", 510, 19268, 19268), ("stdlib.mli", 510, 19268, 19346), 0), [(("unboxed", (("stdlib.mli", 510, 19268, 19326), ("stdlib.mli", 510, 19268, 19333), 0)), (0), (("stdlib.mli", 510, 19268, 19323), ("stdlib.mli", 510, 19268, 19334), 0)); (("noalloc", (("stdlib.mli", 510, 19268, 19338), ("stdlib.mli", 510, 19268, 19345), 0)), (0), (("stdlib.mli", 510, 19268, 19335), ("stdlib.mli", 510, 19268, 19346), 0))], Tag1 ("Stdlib", 76)), 0); (("acos", 17606), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1209), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1208), 0), 100000000, 0, -1207), (("caml_acos_float", 1, 0, "acos", [1], 1)), (("stdlib.mli", 513, 19389, 19389), ("stdlib.mli", 514, 19447, 19472), 0), [(("unboxed", (("stdlib.mli", 514, 19447, 19452), ("stdlib.mli", 514, 19447, 19459), 0)), (0), (("stdlib.mli", 514, 19447, 19449), ("stdlib.mli", 514, 19447, 19460), 0)); (("noalloc", (("stdlib.mli", 514, 19447, 19464), ("stdlib.mli", 514, 19447, 19471), 0)), (0), (("stdlib.mli", 514, 19447, 19461), ("stdlib.mli", 514, 19447, 19472), 0))], Tag1 ("Stdlib", 77)), 0); (("asin", 17607), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1206), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1205), 0), 100000000, 0, -1204), (("caml_asin_float", 1, 0, "asin", [1], 1)), (("stdlib.mli", 518, 19605, 19605), ("stdlib.mli", 519, 19663, 19688), 0), [(("unboxed", (("stdlib.mli", 519, 19663, 19668), ("stdlib.mli", 519, 19663, 19675), 0)), (0), (("stdlib.mli", 519, 19663, 19665), ("stdlib.mli", 519, 19663, 19676), 0)); (("noalloc", (("stdlib.mli", 519, 19663, 19680), ("stdlib.mli", 519, 19663, 19687), 0)), (0), (("stdlib.mli", 519, 19663, 19677), ("stdlib.mli", 519, 19663, 19688), 0))], Tag1 ("Stdlib", 78)), 0); (("atan", 17608), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1203), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1202), 0), 100000000, 0, -1201), (("caml_atan_float", 1, 0, "atan", [1], 1)), (("stdlib.mli", 523, 19823, 19823), ("stdlib.mli", 524, 19881, 19906), 0), [(("unboxed", (("stdlib.mli", 524, 19881, 19886), ("stdlib.mli", 524, 19881, 19893), 0)), (0), (("stdlib.mli", 524, 19881, 19883), ("stdlib.mli", 524, 19881, 19894), 0)); (("noalloc", (("stdlib.mli", 524, 19881, 19898), ("stdlib.mli", 524, 19881, 19905), 0)), (0), (("stdlib.mli", 524, 19881, 19895), ("stdlib.mli", 524, 19881, 19906), 0))], Tag1 ("Stdlib", 79)), 0); (("atan2", 17609), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1200), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1199), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1198), 0), 100000000, 0, -1197), 0), 100000000, 0, -1196), (("caml_atan2_float", 2, 0, "atan2", [1; 1], 1)), (("stdlib.mli", 528, 19988, 19988), ("stdlib.mli", 529, 20058, 20083), 0), [(("unboxed", (("stdlib.mli", 529, 20058, 20063), ("stdlib.mli", 529, 20058, 20070), 0)), (0), (("stdlib.mli", 529, 20058, 20060), ("stdlib.mli", 529, 20058, 20071), 0)); (("noalloc", (("stdlib.mli", 529, 20058, 20075), ("stdlib.mli", 529, 20058, 20082), 0)), (0), (("stdlib.mli", 529, 20058, 20072), ("stdlib.mli", 529, 20058, 20083), 0))], Tag1 ("Stdlib", 80)), 0); (("hypot", 17610), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1195), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1194), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1193), 0), 100000000, 0, -1192), 0), 100000000, 0, -1191), (("caml_hypot_float", 2, 0, "caml_hypot", [1; 1], 1)), (("stdlib.mli", 534, 20277, 20277), ("stdlib.mli", 535, 20352, 20377), 0), [(("unboxed", (("stdlib.mli", 535, 20352, 20357), ("stdlib.mli", 535, 20352, 20364), 0)), (0), (("stdlib.mli", 535, 20352, 20354), ("stdlib.mli", 535, 20352, 20365), 0)); (("noalloc", (("stdlib.mli", 535, 20352, 20369), ("stdlib.mli", 535, 20352, 20376), 0)), (0), (("stdlib.mli", 535, 20352, 20366), ("stdlib.mli", 535, 20352, 20377), 0))], Tag1 ("Stdlib", 81)), 0); (("cosh", 17611), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1190), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1189), 0), 100000000, 0, -1188), (("caml_cosh_float", 1, 0, "cosh", [1], 1)), (("stdlib.mli", 543, 20698, 20698), ("stdlib.mli", 544, 20756, 20781), 0), [(("unboxed", (("stdlib.mli", 544, 20756, 20761), ("stdlib.mli", 544, 20756, 20768), 0)), (0), (("stdlib.mli", 544, 20756, 20758), ("stdlib.mli", 544, 20756, 20769), 0)); (("noalloc", (("stdlib.mli", 544, 20756, 20773), ("stdlib.mli", 544, 20756, 20780), 0)), (0), (("stdlib.mli", 544, 20756, 20770), ("stdlib.mli", 544, 20756, 20781), 0))], Tag1 ("Stdlib", 82)), 0); (("sinh", 17612), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1187), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1186), 0), 100000000, 0, -1185), (("caml_sinh_float", 1, 0, "sinh", [1], 1)), (("stdlib.mli", 547, 20834, 20834), ("stdlib.mli", 548, 20892, 20917), 0), [(("unboxed", (("stdlib.mli", 548, 20892, 20897), ("stdlib.mli", 548, 20892, 20904), 0)), (0), (("stdlib.mli", 548, 20892, 20894), ("stdlib.mli", 548, 20892, 20905), 0)); (("noalloc", (("stdlib.mli", 548, 20892, 20909), ("stdlib.mli", 548, 20892, 20916), 0)), (0), (("stdlib.mli", 548, 20892, 20906), ("stdlib.mli", 548, 20892, 20917), 0))], Tag1 ("Stdlib", 83)), 0); (("tanh", 17613), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1184), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1183), 0), 100000000, 0, -1182), (("caml_tanh_float", 1, 0, "tanh", [1], 1)), (("stdlib.mli", 551, 20968, 20968), ("stdlib.mli", 552, 21026, 21051), 0), [(("unboxed", (("stdlib.mli", 552, 21026, 21031), ("stdlib.mli", 552, 21026, 21038), 0)), (0), (("stdlib.mli", 552, 21026, 21028), ("stdlib.mli", 552, 21026, 21039), 0)); (("noalloc", (("stdlib.mli", 552, 21026, 21043), ("stdlib.mli", 552, 21026, 21050), 0)), (0), (("stdlib.mli", 552, 21026, 21040), ("stdlib.mli", 552, 21026, 21051), 0))], Tag1 ("Stdlib", 84)), 0); (("acosh", 17614), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1181), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1180), 0), 100000000, 0, -1179), (("caml_acosh_float", 1, 0, "caml_acosh", [1], 1)), (("stdlib.mli", 555, 21105, 21105), ("stdlib.mli", 556, 21171, 21196), 0), [(("unboxed", (("stdlib.mli", 556, 21171, 21176), ("stdlib.mli", 556, 21171, 21183), 0)), (0), (("stdlib.mli", 556, 21171, 21173), ("stdlib.mli", 556, 21171, 21184), 0)); (("noalloc", (("stdlib.mli", 556, 21171, 21188), ("stdlib.mli", 556, 21171, 21195), 0)), (0), (("stdlib.mli", 556, 21171, 21185), ("stdlib.mli", 556, 21171, 21196), 0))], Tag1 ("Stdlib", 85)), 0); (("asinh", 17615), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1178), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1177), 0), 100000000, 0, -1176), (("caml_asinh_float", 1, 0, "caml_asinh", [1], 1)), (("stdlib.mli", 564, 21361, 21361), ("stdlib.mli", 565, 21427, 21452), 0), [(("unboxed", (("stdlib.mli", 565, 21427, 21432), ("stdlib.mli", 565, 21427, 21439), 0)), (0), (("stdlib.mli", 565, 21427, 21429), ("stdlib.mli", 565, 21427, 21440), 0)); (("noalloc", (("stdlib.mli", 565, 21427, 21444), ("stdlib.mli", 565, 21427, 21451), 0)), (0), (("stdlib.mli", 565, 21427, 21441), ("stdlib.mli", 565, 21427, 21452), 0))], Tag1 ("Stdlib", 86)), 0); (("atanh", 17616), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1175), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1174), 0), 100000000, 0, -1173), (("caml_atanh_float", 1, 0, "caml_atanh", [1], 1)), (("stdlib.mli", 573, 21587, 21587), ("stdlib.mli", 574, 21653, 21678), 0), [(("unboxed", (("stdlib.mli", 574, 21653, 21658), ("stdlib.mli", 574, 21653, 21665), 0)), (0), (("stdlib.mli", 574, 21653, 21655), ("stdlib.mli", 574, 21653, 21666), 0)); (("noalloc", (("stdlib.mli", 574, 21653, 21670), ("stdlib.mli", 574, 21653, 21677), 0)), (0), (("stdlib.mli", 574, 21653, 21667), ("stdlib.mli", 574, 21653, 21678), 0))], Tag1 ("Stdlib", 87)), 0); (("ceil", 17617), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1172), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1171), 0), 100000000, 0, -1170), (("caml_ceil_float", 1, 0, "ceil", [1], 1)), (("stdlib.mli", 582, 21851, 21851), ("stdlib.mli", 583, 21909, 21934), 0), [(("unboxed", (("stdlib.mli", 583, 21909, 21914), ("stdlib.mli", 583, 21909, 21921), 0)), (0), (("stdlib.mli", 583, 21909, 21911), ("stdlib.mli", 583, 21909, 21922), 0)); (("noalloc", (("stdlib.mli", 583, 21909, 21926), ("stdlib.mli", 583, 21909, 21933), 0)), (0), (("stdlib.mli", 583, 21909, 21923), ("stdlib.mli", 583, 21909, 21934), 0))], Tag1 ("Stdlib", 88)), 0); (("floor", 17618), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1169), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1168), 0), 100000000, 0, -1167), (("caml_floor_float", 1, 0, "floor", [1], 1)), (("stdlib.mli", 588, 22090, 22090), ("stdlib.mli", 589, 22151, 22176), 0), [(("unboxed", (("stdlib.mli", 589, 22151, 22156), ("stdlib.mli", 589, 22151, 22163), 0)), (0), (("stdlib.mli", 589, 22151, 22153), ("stdlib.mli", 589, 22151, 22164), 0)); (("noalloc", (("stdlib.mli", 589, 22151, 22168), ("stdlib.mli", 589, 22151, 22175), 0)), (0), (("stdlib.mli", 589, 22151, 22165), ("stdlib.mli", 589, 22151, 22176), 0))], Tag1 ("Stdlib", 89)), 0); (("abs_float", 17619), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1166), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1165), 0), 100000000, 0, -1164), (("%absfloat", 1, 1, "", [0], 0)), (("stdlib.mli", 595, 22337, 22337), ("stdlib.mli", 595, 22337, 22386), 0), 0, Tag1 ("Stdlib", 90)), 0); (("copysign", 17620), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1163), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1162), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1161), 0), 100000000, 0, -1160), 0), 100000000, 0, -1159), (("caml_copysign_float", 2, 0, "caml_copysign", [1; 1], 1)), (("stdlib.mli", 598, 22444, 22444), ("stdlib.mli", 600, 22546, 22587), 0), [(("unboxed", (("stdlib.mli", 600, 22546, 22567), ("stdlib.mli", 600, 22546, 22574), 0)), (0), (("stdlib.mli", 600, 22546, 22564), ("stdlib.mli", 600, 22546, 22575), 0)); (("noalloc", (("stdlib.mli", 600, 22546, 22579), ("stdlib.mli", 600, 22546, 22586), 0)), (0), (("stdlib.mli", 600, 22546, 22576), ("stdlib.mli", 600, 22546, 22587), 0))], Tag1 ("Stdlib", 91)), 0); (("mod_float", 17621), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1158), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1157), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1156), 0), 100000000, 0, -1155), 0), 100000000, 0, -1154), (("caml_fmod_float", 2, 0, "fmod", [1; 1], 1)), (("stdlib.mli", 607, 22826, 22826), ("stdlib.mli", 608, 22898, 22923), 0), [(("unboxed", (("stdlib.mli", 608, 22898, 22903), ("stdlib.mli", 608, 22898, 22910), 0)), (0), (("stdlib.mli", 608, 22898, 22900), ("stdlib.mli", 608, 22898, 22911), 0)); (("noalloc", (("stdlib.mli", 608, 22898, 22915), ("stdlib.mli", 608, 22898, 22922), 0)), (0), (("stdlib.mli", 608, 22898, 22912), ("stdlib.mli", 608, 22898, 22923), 0))], Tag1 ("Stdlib", 92)), 0); (("frexp", 17622), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1153), (Tag2 ([(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1151); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1152)]), 100000000, 0, -1150), 0), 100000000, 0, -1149), (("caml_frexp_float", 1, 1, "", [0], 0)), (("stdlib.mli", 613, 23113, 23113), ("stdlib.mli", 613, 23113, 23171), 0), 0, Tag1 ("Stdlib", 93)), 0); (("ldexp", 17623), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1148), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1147), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1146), 0), 100000000, 0, -1145), 0), 100000000, 0, -1144), (("caml_ldexp_float", 2, 0, "caml_ldexp_float_unboxed", [1; 2], 1)), (("stdlib.mli", 621, 23433, 23433), ("stdlib.mli", 622, 23514, 23573), 0), [(("noalloc", (("stdlib.mli", 622, 23514, 23565), ("stdlib.mli", 622, 23514, 23572), 0)), (0), (("stdlib.mli", 622, 23514, 23562), ("stdlib.mli", 622, 23514, 23573), 0))], Tag1 ("Stdlib", 94)), 0); (("modf", 17624), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1143), (Tag2 ([(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1141); (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1142)]), 100000000, 0, -1140), 0), 100000000, 0, -1139), (("caml_modf_float", 1, 1, "", [0], 0)), (("stdlib.mli", 625, 23617, 23617), ("stdlib.mli", 625, 23617, 23675), 0), 0, Tag1 ("Stdlib", 95)), 0); (("float", 17625), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1138), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1137), 0), 100000000, 0, -1136), (("%floatofint", 1, 1, "", [0], 0)), (("stdlib.mli", 629, 23757, 23757), ("stdlib.mli", 629, 23757, 23802), 0), 0, Tag1 ("Stdlib", 96)), 0); (("float_of_int", 17626), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1135), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1134), 0), 100000000, 0, -1133), (("%floatofint", 1, 1, "", [0], 0)), (("stdlib.mli", 632, 23843, 23843), ("stdlib.mli", 632, 23843, 23895), 0), 0, Tag1 ("Stdlib", 97)), 0); (("truncate", 17627), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1132), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1131), 0), 100000000, 0, -1130), (("%intoffloat", 1, 1, "", [0], 0)), (("stdlib.mli", 635, 23942, 23942), ("stdlib.mli", 635, 23942, 23990), 0), 0, Tag1 ("Stdlib", 98)), 0); (("int_of_float", 17628), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1129), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1128), 0), 100000000, 0, -1127), (("%intoffloat", 1, 1, "", [0], 0)), (("stdlib.mli", 638, 24031, 24031), ("stdlib.mli", 638, 24031, 24083), 0), 0, Tag1 ("Stdlib", 99)), 0); (("infinity", 17629), ((Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1126), 0, (("stdlib.mli", 643, 24259, 24259), ("stdlib.mli", 643, 24259, 24279), 0), 0, Tag1 ("Stdlib", 100)), 0); (("neg_infinity", 17630), ((Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1125), 0, (("stdlib.mli", 646, 24307, 24307), ("stdlib.mli", 646, 24307, 24331), 0), 0, Tag1 ("Stdlib", 101)), 0); (("nan", 17631), ((Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1124), 0, (("stdlib.mli", 649, 24359, 24359), ("stdlib.mli", 649, 24359, 24374), 0), 0, Tag1 ("Stdlib", 102)), 0); (("max_float", 17632), ((Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1123), 0, (("stdlib.mli", 660, 24878, 24878), ("stdlib.mli", 660, 24878, 24899), 0), 0, Tag1 ("Stdlib", 103)), 0); (("min_float", 17633), ((Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1122), 0, (("stdlib.mli", 663, 24959, 24959), ("stdlib.mli", 663, 24959, 24980), 0), 0, Tag1 ("Stdlib", 104)), 0); (("epsilon_float", 17634), ((Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1121), 0, (("stdlib.mli", 666, 25062, 25062), ("stdlib.mli", 666, 25062, 25087), 0), 0, Tag1 ("Stdlib", 105)), 0); Tag1 (("fpclass", 17635), (0, 0, Tag1 ([(("FP_normal", 111), (0), 0, (("stdlib.mli", 671, 25225, 25229), ("stdlib.mli", 671, 25225, 25238), 0), 0, Tag1 ("Stdlib", 107)); (("FP_subnormal", 112), (0), 0, (("stdlib.mli", 672, 25289, 25291), ("stdlib.mli", 672, 25289, 25305), 0), 0, Tag1 ("Stdlib", 108)); (("FP_zero", 113), (0), 0, (("stdlib.mli", 673, 25368, 25370), ("stdlib.mli", 673, 25368, 25379), 0), 0, Tag1 ("Stdlib", 109)); (("FP_infinite", 114), (0), 0, (("stdlib.mli", 674, 25421, 25423), ("stdlib.mli", 674, 25421, 25436), 0), 0, Tag1 ("Stdlib", 110)); (("FP_nan", 115), (0), 0, (("stdlib.mli", 675, 25492, 25494), ("stdlib.mli", 675, 25492, 25502), 0), 0, Tag1 ("Stdlib", 111))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "fpclass"), 0, (0)), 100000000, 0, -1120)), 0, 0, 0, 0, (("stdlib.mli", 670, 25210, 25210), ("stdlib.mli", 675, 25492, 25502), 0), 0, 1, 0, Tag1 ("Stdlib", 106)), 1, 0); (("classify_float", 17636), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1119), (Tag3 ((("fpclass", 17635)), 0, (0)), 100000000, 0, -1118), 0), 100000000, 0, -1117), (("caml_classify_float", 1, 0, "caml_classify_float_unboxed", [1], 0)), (("stdlib.mli", 679, 25681, 25681), ("stdlib.mli", 680, 25739, 25804), 0), [(("noalloc", (("stdlib.mli", 680, 25739, 25796), ("stdlib.mli", 680, 25739, 25803), 0)), (0), (("stdlib.mli", 680, 25739, 25793), ("stdlib.mli", 680, 25739, 25804), 0))], Tag1 ("Stdlib", 112)), 0); (("^", 17637), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1116), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1115), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1114), 0), 100000000, 0, -1113), 0), 100000000, 0, -1112), 0, (("stdlib.mli", 690, 26013, 26013), ("stdlib.mli", 690, 26013, 26051), 0), 0, Tag1 ("Stdlib", 113)), 0); (("int_of_char", 17638), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1111), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1110), 0), 100000000, 0, -1109), (("%identity", 1, 1, "", [0], 0)), (("stdlib.mli", 703, 26353, 26353), ("stdlib.mli", 703, 26353, 26401), 0), 0, Tag1 ("Stdlib", 114)), 0); (("char_of_int", 17639), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1108), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1107), 0), 100000000, 0, -1106), 0, (("stdlib.mli", 706, 26449, 26449), ("stdlib.mli", 706, 26449, 26478), 0), 0, Tag1 ("Stdlib", 115)), 0); (("ignore", 17640), ((Tag1 (0, ((("a")), 100000000, 0, -1105), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1104), 0), 100000000, 0, -1103), (("%ignore", 1, 1, "", [0], 0)), (("stdlib.mli", 714, 26639, 26639), ("stdlib.mli", 714, 26639, 26679), 0), 0, Tag1 ("Stdlib", 116)), 0); (("string_of_bool", 17641), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1102), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1101), 0), 100000000, 0, -1100), 0, (("stdlib.mli", 725, 27017, 27017), ("stdlib.mli", 725, 27017, 27052), 0), 0, Tag1 ("Stdlib", 117)), 0); (("bool_of_string_opt", 17642), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1099), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1098)], (0)), 100000000, 0, -1097), 0), 100000000, 0, -1096), 0, (("stdlib.mli", 730, 27191, 27191), ("stdlib.mli", 730, 27191, 27236), 0), 0, Tag1 ("Stdlib", 118)), 0); (("bool_of_string", 17643), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1095), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1094), 0), 100000000, 0, -1093), 0, (("stdlib.mli", 737, 27361, 27361), ("stdlib.mli", 737, 27361, 27396), 0), 0, Tag1 ("Stdlib", 119)), 0); (("string_of_int", 17644), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1092), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1091), 0), 100000000, 0, -1090), 0, (("stdlib.mli", 741, 27521, 27521), ("stdlib.mli", 741, 27521, 27554), 0), 0, Tag1 ("Stdlib", 120)), 0); (("int_of_string_opt", 17645), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1089), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1088)], (0)), 100000000, 0, -1087), 0), 100000000, 0, -1086), 0, (("stdlib.mli", 744, 27623, 27623), ("stdlib.mli", 744, 27623, 27666), 0), 0, Tag1 ("Stdlib", 121)), 0); (("int_of_string", 17646), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1085), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1084), 0), 100000000, 0, -1083), (("caml_int_of_string", 1, 1, "", [0], 0)), (("stdlib.mli", 765, 28431, 28431), ("stdlib.mli", 765, 28431, 28492), 0), 0, Tag1 ("Stdlib", 122)), 0); (("string_of_float", 17647), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1082), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1081), 0), 100000000, 0, -1080), 0, (("stdlib.mli", 769, 28606, 28606), ("stdlib.mli", 769, 28606, 28643), 0), 0, Tag1 ("Stdlib", 123)), 0); (("float_of_string_opt", 17648), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1079), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1078)], (0)), 100000000, 0, -1077), 0), 100000000, 0, -1076), 0, (("stdlib.mli", 775, 28852, 28852), ("stdlib.mli", 775, 28852, 28899), 0), 0, Tag1 ("Stdlib", 124)), 0); (("float_of_string", 17649), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1075), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1074), 0), 100000000, 0, -1073), (("caml_float_of_string", 1, 1, "", [0], 0)), (("stdlib.mli", 799, 29772, 29772), ("stdlib.mli", 799, 29772, 29839), 0), 0, Tag1 ("Stdlib", 125)), 0); (("fst", 17650), ((Tag1 (0, (Tag2 ([((("a")), 100000000, 0, -1070); ((("b")), 100000000, 0, -1072)]), 100000000, 0, -1071), ((("a")), 100000000, 0, -1070), 0), 100000000, 0, -1069), (("%field0", 1, 1, "", [0], 0)), (("stdlib.mli", 805, 29985, 29985), ("stdlib.mli", 805, 29985, 30025), 0), 0, Tag1 ("Stdlib", 126)), 0); (("snd", 17651), ((Tag1 (0, (Tag2 ([((("a")), 100000000, 0, -1068); ((("b")), 100000000, 0, -1066)]), 100000000, 0, -1067), ((("b")), 100000000, 0, -1066), 0), 100000000, 0, -1065), (("%field1", 1, 1, "", [0], 0)), (("stdlib.mli", 808, 30072, 30072), ("stdlib.mli", 808, 30072, 30112), 0), 0, Tag1 ("Stdlib", 127)), 0); (("@", 17652), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -1062)], (0)), 100000000, 0, -1064), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -1062)], (0)), 100000000, 0, -1063), (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -1062)], (0)), 100000000, 0, -1061), 0), 100000000, 0, -1060), 0), 100000000, 0, -1059), 0, (("stdlib.mli", 817, 30246, 30246), ("stdlib.mli", 817, 30246, 30287), 0), 0, Tag1 ("Stdlib", 128)), 0); Tag1 (("in_channel", 17653), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "in_channel"), 0, (0)), 100000000, 0, -1058)), 0, 0, 0, 0, (("stdlib.mli", 827, 30610, 30610), ("stdlib.mli", 827, 30610, 30625), 0), 0, 0, 0, Tag1 ("Stdlib", 129)), 1, 0); Tag1 (("out_channel", 17654), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -1057)), 0, 0, 0, 0, (("stdlib.mli", 830, 30661, 30661), ("stdlib.mli", 830, 30661, 30677), 0), 0, 0, 0, Tag1 ("Stdlib", 130)), 1, 0); (("stdin", 17655), ((Tag3 ((("in_channel", 17653)), 0, (0)), 100000000, 0, -1056), 0, (("stdlib.mli", 833, 30714, 30714), ("stdlib.mli", 833, 30714, 30736), 0), 0, Tag1 ("Stdlib", 131)), 0); (("stdout", 17656), ((Tag3 ((("out_channel", 17654)), 0, (0)), 100000000, 0, -1055), 0, (("stdlib.mli", 836, 30781, 30781), ("stdlib.mli", 836, 30781, 30805), 0), 0, Tag1 ("Stdlib", 132)), 0); (("stderr", 17657), ((Tag3 ((("out_channel", 17654)), 0, (0)), 100000000, 0, -1054), 0, (("stdlib.mli", 839, 30851, 30851), ("stdlib.mli", 839, 30851, 30875), 0), 0, Tag1 ("Stdlib", 133)), 0); (("print_char", 17658), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1053), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1052), 0), 100000000, 0, -1051), 0, (("stdlib.mli", 845, 30976, 30976), ("stdlib.mli", 845, 30976, 31005), 0), 0, Tag1 ("Stdlib", 134)), 0); (("print_string", 17659), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1050), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1049), 0), 100000000, 0, -1048), 0, (("stdlib.mli", 848, 31052, 31052), ("stdlib.mli", 848, 31052, 31085), 0), 0, Tag1 ("Stdlib", 135)), 0); (("print_bytes", 17660), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -1047), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1046), 0), 100000000, 0, -1045), 0, (("stdlib.mli", 851, 31129, 31129), ("stdlib.mli", 851, 31129, 31160), 0), 0, Tag1 ("Stdlib", 136)), 0); (("print_int", 17661), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1044), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1043), 0), 100000000, 0, -1042), 0, (("stdlib.mli", 855, 31226, 31226), ("stdlib.mli", 855, 31226, 31253), 0), 0, Tag1 ("Stdlib", 137)), 0); (("print_float", 17662), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1041), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1040), 0), 100000000, 0, -1039), 0, (("stdlib.mli", 858, 31312, 31312), ("stdlib.mli", 858, 31312, 31343), 0), 0, Tag1 ("Stdlib", 138)), 0); (("print_endline", 17663), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1038), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1037), 0), 100000000, 0, -1036), 0, (("stdlib.mli", 864, 31526, 31526), ("stdlib.mli", 864, 31526, 31560), 0), 0, Tag1 ("Stdlib", 139)), 0); (("print_newline", 17664), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1035), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1034), 0), 100000000, 0, -1033), 0, (("stdlib.mli", 868, 31667, 31667), ("stdlib.mli", 868, 31667, 31699), 0), 0, Tag1 ("Stdlib", 140)), 0); (("prerr_char", 17665), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1032), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1031), 0), 100000000, 0, -1030), 0, (("stdlib.mli", 876, 31899, 31899), ("stdlib.mli", 876, 31899, 31928), 0), 0, Tag1 ("Stdlib", 141)), 0); (("prerr_string", 17666), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1029), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1028), 0), 100000000, 0, -1027), 0, (("stdlib.mli", 879, 31974, 31974), ("stdlib.mli", 879, 31974, 32007), 0), 0, Tag1 ("Stdlib", 142)), 0); (("prerr_bytes", 17667), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -1026), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1025), 0), 100000000, 0, -1024), 0, (("stdlib.mli", 882, 32050, 32050), ("stdlib.mli", 882, 32050, 32081), 0), 0, Tag1 ("Stdlib", 143)), 0); (("prerr_int", 17668), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1023), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1022), 0), 100000000, 0, -1021), 0, (("stdlib.mli", 886, 32146, 32146), ("stdlib.mli", 886, 32146, 32173), 0), 0, Tag1 ("Stdlib", 144)), 0); (("prerr_float", 17669), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1020), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1019), 0), 100000000, 0, -1018), 0, (("stdlib.mli", 889, 32231, 32231), ("stdlib.mli", 889, 32231, 32262), 0), 0, Tag1 ("Stdlib", 145)), 0); (("prerr_endline", 17670), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1017), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1016), 0), 100000000, 0, -1015), 0, (("stdlib.mli", 895, 32444, 32444), ("stdlib.mli", 895, 32444, 32478), 0), 0, Tag1 ("Stdlib", 146)), 0); (("prerr_newline", 17671), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1014), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1013), 0), 100000000, 0, -1012), 0, (("stdlib.mli", 899, 32582, 32582), ("stdlib.mli", 899, 32582, 32614), 0), 0, Tag1 ("Stdlib", 147)), 0); (("read_line", 17672), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1011), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1010), 0), 100000000, 0, -1009), 0, (("stdlib.mli", 906, 32744, 32744), ("stdlib.mli", 906, 32744, 32774), 0), 0, Tag1 ("Stdlib", 148)), 0); (("read_int_opt", 17673), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1008), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1007)], (0)), 100000000, 0, -1006), 0), 100000000, 0, -1005), 0, (("stdlib.mli", 917, 33069, 33069), ("stdlib.mli", 917, 33069, 33105), 0), 0, Tag1 ("Stdlib", 149)), 0); (("read_int", 17674), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1004), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1003), 0), 100000000, 0, -1002), 0, (("stdlib.mli", 925, 33304, 33304), ("stdlib.mli", 925, 33304, 33330), 0), 0, Tag1 ("Stdlib", 150)), 0); (("read_float_opt", 17675), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1001), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1000)], (0)), 100000000, 0, -999), 0), 100000000, 0, -998), 0, (("stdlib.mli", 929, 33439, 33439), ("stdlib.mli", 929, 33439, 33479), 0), 0, Tag1 ("Stdlib", 151)), 0); (("read_float", 17676), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -997), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -996), 0), 100000000, 0, -995), 0, (("stdlib.mli", 938, 33707, 33707), ("stdlib.mli", 938, 33707, 33737), 0), 0, Tag1 ("Stdlib", 152)), 0); Tag1 (("open_flag", 17677), (0, 0, Tag1 ([(("Open_rdonly", 158), (0), 0, (("stdlib.mli", 946, 33905, 33909), ("stdlib.mli", 946, 33905, 33920), 0), 0, Tag1 ("Stdlib", 154)); (("Open_wronly", 159), (0), 0, (("stdlib.mli", 947, 33951, 33953), ("stdlib.mli", 947, 33951, 33966), 0), 0, Tag1 ("Stdlib", 155)); (("Open_append", 160), (0), 0, (("stdlib.mli", 948, 33997, 33999), ("stdlib.mli", 948, 33997, 34012), 0), 0, Tag1 ("Stdlib", 156)); (("Open_creat", 161), (0), 0, (("stdlib.mli", 949, 34074, 34076), ("stdlib.mli", 949, 34074, 34088), 0), 0, Tag1 ("Stdlib", 157)); (("Open_trunc", 162), (0), 0, (("stdlib.mli", 950, 34140, 34142), ("stdlib.mli", 950, 34140, 34154), 0), 0, Tag1 ("Stdlib", 158)); (("Open_excl", 163), (0), 0, (("stdlib.mli", 951, 34205, 34207), ("stdlib.mli", 951, 34205, 34218), 0), 0, Tag1 ("Stdlib", 159)); (("Open_binary", 164), (0), 0, (("stdlib.mli", 952, 34281, 34283), ("stdlib.mli", 952, 34281, 34296), 0), 0, Tag1 ("Stdlib", 160)); (("Open_text", 165), (0), 0, (("stdlib.mli", 953, 34346, 34348), ("stdlib.mli", 953, 34346, 34359), 0), 0, Tag1 ("Stdlib", 161)); (("Open_nonblock", 166), (0), 0, (("stdlib.mli", 954, 34419, 34421), ("stdlib.mli", 954, 34419, 34436), 0), 0, Tag1 ("Stdlib", 162))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "open_flag"), 0, (0)), 100000000, 0, -994)), 0, 0, 0, 0, (("stdlib.mli", 945, 33888, 33888), ("stdlib.mli", 954, 34419, 34436), 0), 0, 1, 0, Tag1 ("Stdlib", 153)), 1, 0); (("open_out", 17678), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -993), (Tag3 ((("out_channel", 17654)), 0, (0)), 100000000, 0, -992), 0), 100000000, 0, -991), 0, (("stdlib.mli", 958, 34552, 34552), ("stdlib.mli", 958, 34552, 34588), 0), 0, Tag1 ("Stdlib", 163)), 0); (("open_out_bin", 17679), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -990), (Tag3 ((("out_channel", 17654)), 0, (0)), 100000000, 0, -989), 0), 100000000, 0, -988), 0, (("stdlib.mli", 964, 34830, 34830), ("stdlib.mli", 964, 34830, 34870), 0), 0, Tag1 ("Stdlib", 164)), 0); (("open_out_gen", 17680), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("open_flag", 17677)), 0, (0)), 100000000, 0, -987)], (0)), 100000000, 0, -986), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -985), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -984), (Tag3 ((("out_channel", 17654)), 0, (0)), 100000000, 0, -983), 0), 100000000, 0, -982), 0), 100000000, 0, -981), 0), 100000000, 0, -980), 0, (("stdlib.mli", 970, 35132, 35132), ("stdlib.mli", 970, 35132, 35197), 0), 0, Tag1 ("Stdlib", 165)), 0); (("flush", 17681), ((Tag1 (0, (Tag3 ((("out_channel", 17654)), 0, (0)), 100000000, 0, -979), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -978), 0), 100000000, 0, -977), 0, (("stdlib.mli", 978, 35537, 35537), ("stdlib.mli", 978, 35537, 35568), 0), 0, Tag1 ("Stdlib", 166)), 0); (("flush_all", 17682), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -976), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -975), 0), 100000000, 0, -974), 0, (("stdlib.mli", 984, 35798, 35798), ("stdlib.mli", 984, 35798, 35826), 0), 0, Tag1 ("Stdlib", 167)), 0); (("output_char", 17683), ((Tag1 (0, (Tag3 ((("out_channel", 17654)), 0, (0)), 100000000, 0, -973), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -972), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -971), 0), 100000000, 0, -970), 0), 100000000, 0, -969), 0, (("stdlib.mli", 987, 35882, 35882), ("stdlib.mli", 987, 35882, 35927), 0), 0, Tag1 ("Stdlib", 168)), 0); (("output_string", 17684), ((Tag1 (0, (Tag3 ((("out_channel", 17654)), 0, (0)), 100000000, 0, -968), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -967), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -966), 0), 100000000, 0, -965), 0), 100000000, 0, -964), 0, (("stdlib.mli", 990, 35985, 35985), ("stdlib.mli", 990, 35985, 36034), 0), 0, Tag1 ("Stdlib", 169)), 0); (("output_bytes", 17685), ((Tag1 (0, (Tag3 ((("out_channel", 17654)), 0, (0)), 100000000, 0, -963), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -962), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -961), 0), 100000000, 0, -960), 0), 100000000, 0, -959), 0, (("stdlib.mli", 993, 36089, 36089), ("stdlib.mli", 993, 36089, 36136), 0), 0, Tag1 ("Stdlib", 170)), 0); (("output", 17686), ((Tag1 (0, (Tag3 ((("out_channel", 17654)), 0, (0)), 100000000, 0, -958), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -957), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -956), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -955), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -954), 0), 100000000, 0, -953), 0), 100000000, 0, -952), 0), 100000000, 0, -951), 0), 100000000, 0, -950), 0, (("stdlib.mli", 997, 36213, 36213), ("stdlib.mli", 997, 36213, 36268), 0), 0, Tag1 ("Stdlib", 171)), 0); (("output_substring", 17687), ((Tag1 (0, (Tag3 ((("out_channel", 17654)), 0, (0)), 100000000, 0, -949), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -948), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -947), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -946), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -945), 0), 100000000, 0, -944), 0), 100000000, 0, -943), 0), 100000000, 0, -942), 0), 100000000, 0, -941), 0, (("stdlib.mli", 1003, 36504, 36504), ("stdlib.mli", 1003, 36504, 36570), 0), 0, Tag1 ("Stdlib", 172)), 0); (("output_byte", 17688), ((Tag1 (0, (Tag3 ((("out_channel", 17654)), 0, (0)), 100000000, 0, -940), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -939), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -938), 0), 100000000, 0, -937), 0), 100000000, 0, -936), 0, (("stdlib.mli", 1008, 36672, 36672), ("stdlib.mli", 1008, 36672, 36716), 0), 0, Tag1 ("Stdlib", 173)), 0); (("output_binary_int", 17689), ((Tag1 (0, (Tag3 ((("out_channel", 17654)), 0, (0)), 100000000, 0, -935), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -934), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -933), 0), 100000000, 0, -932), 0), 100000000, 0, -931), 0, (("stdlib.mli", 1013, 36864, 36864), ("stdlib.mli", 1013, 36864, 36914), 0), 0, Tag1 ("Stdlib", 174)), 0); (("output_value", 17690), ((Tag1 (0, (Tag3 ((("out_channel", 17654)), 0, (0)), 100000000, 0, -930), (Tag1 (0, ((("a")), 100000000, 0, -929), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -928), 0), 100000000, 0, -927), 0), 100000000, 0, -926), 0, (("stdlib.mli", 1021, 37231, 37231), ("stdlib.mli", 1021, 37231, 37275), 0), 0, Tag1 ("Stdlib", 175)), 0); (("seek_out", 17691), ((Tag1 (0, (Tag3 ((("out_channel", 17654)), 0, (0)), 100000000, 0, -925), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -924), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -923), 0), 100000000, 0, -922), 0), 100000000, 0, -921), 0, (("stdlib.mli", 1029, 37665, 37665), ("stdlib.mli", 1029, 37665, 37706), 0), 0, Tag1 ("Stdlib", 176)), 0); (("pos_out", 17692), ((Tag1 (0, (Tag3 ((("out_channel", 17654)), 0, (0)), 100000000, 0, -920), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -919), 0), 100000000, 0, -918), 0, (("stdlib.mli", 1035, 37935, 37935), ("stdlib.mli", 1035, 37935, 37967), 0), 0, Tag1 ("Stdlib", 177)), 0); (("out_channel_length", 17693), ((Tag1 (0, (Tag3 ((("out_channel", 17654)), 0, (0)), 100000000, 0, -917), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -916), 0), 100000000, 0, -915), 0, (("stdlib.mli", 1046, 38500, 38500), ("stdlib.mli", 1046, 38500, 38543), 0), 0, Tag1 ("Stdlib", 178)), 0); (("close_out", 17694), ((Tag1 (0, (Tag3 ((("out_channel", 17654)), 0, (0)), 100000000, 0, -914), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -913), 0), 100000000, 0, -912), 0, (("stdlib.mli", 1051, 38747, 38747), ("stdlib.mli", 1051, 38747, 38782), 0), 0, Tag1 ("Stdlib", 179)), 0); (("close_out_noerr", 17695), ((Tag1 (0, (Tag3 ((("out_channel", 17654)), 0, (0)), 100000000, 0, -911), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -910), 0), 100000000, 0, -909), 0, (("stdlib.mli", 1059, 39171, 39171), ("stdlib.mli", 1059, 39171, 39212), 0), 0, Tag1 ("Stdlib", 180)), 0); (("set_binary_mode_out", 17696), ((Tag1 (0, (Tag3 ((("out_channel", 17654)), 0, (0)), 100000000, 0, -908), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -907), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -906), 0), 100000000, 0, -905), 0), 100000000, 0, -904), 0, (("stdlib.mli", 1062, 39265, 39265), ("stdlib.mli", 1062, 39265, 39318), 0), 0, Tag1 ("Stdlib", 181)), 0); (("open_in", 17697), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -903), (Tag3 ((("in_channel", 17653)), 0, (0)), 100000000, 0, -902), 0), 100000000, 0, -901), 0, (("stdlib.mli", 1075, 39839, 39839), ("stdlib.mli", 1075, 39839, 39873), 0), 0, Tag1 ("Stdlib", 182)), 0); (("open_in_bin", 17698), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -900), (Tag3 ((("in_channel", 17653)), 0, (0)), 100000000, 0, -899), 0), 100000000, 0, -898), 0, (("stdlib.mli", 1079, 40004, 40004), ("stdlib.mli", 1079, 40004, 40042), 0), 0, Tag1 ("Stdlib", 183)), 0); (("open_in_gen", 17699), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("open_flag", 17677)), 0, (0)), 100000000, 0, -897)], (0)), 100000000, 0, -896), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -895), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -894), (Tag3 ((("in_channel", 17653)), 0, (0)), 100000000, 0, -893), 0), 100000000, 0, -892), 0), 100000000, 0, -891), 0), 100000000, 0, -890), 0, (("stdlib.mli", 1085, 40301, 40301), ("stdlib.mli", 1085, 40301, 40364), 0), 0, Tag1 ("Stdlib", 184)), 0); (("input_char", 17700), ((Tag1 (0, (Tag3 ((("in_channel", 17653)), 0, (0)), 100000000, 0, -889), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -888), 0), 100000000, 0, -887), 0, (("stdlib.mli", 1092, 40637, 40637), ("stdlib.mli", 1092, 40637, 40672), 0), 0, Tag1 ("Stdlib", 185)), 0); (("input_line", 17701), ((Tag1 (0, (Tag3 ((("in_channel", 17653)), 0, (0)), 100000000, 0, -886), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -885), 0), 100000000, 0, -884), 0, (("stdlib.mli", 1096, 40793, 40793), ("stdlib.mli", 1096, 40793, 40830), 0), 0, Tag1 ("Stdlib", 186)), 0); (("input", 17702), ((Tag1 (0, (Tag3 ((("in_channel", 17653)), 0, (0)), 100000000, 0, -883), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -882), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -881), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -880), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -879), 0), 100000000, 0, -878), 0), 100000000, 0, -877), 0), 100000000, 0, -876), 0), 100000000, 0, -875), 0, (("stdlib.mli", 1103, 41102, 41102), ("stdlib.mli", 1103, 41102, 41154), 0), 0, Tag1 ("Stdlib", 187)), 0); (("really_input", 17703), ((Tag1 (0, (Tag3 ((("in_channel", 17653)), 0, (0)), 100000000, 0, -874), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -873), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -872), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -871), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -870), 0), 100000000, 0, -869), 0), 100000000, 0, -868), 0), 100000000, 0, -867), 0), 100000000, 0, -866), 0, (("stdlib.mli", 1120, 41993, 41993), ("stdlib.mli", 1120, 41993, 42053), 0), 0, Tag1 ("Stdlib", 188)), 0); (("really_input_string", 17704), ((Tag1 (0, (Tag3 ((("in_channel", 17653)), 0, (0)), 100000000, 0, -865), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -864), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -863), 0), 100000000, 0, -862), 0), 100000000, 0, -861), 0, (("stdlib.mli", 1128, 42395, 42395), ("stdlib.mli", 1128, 42395, 42448), 0), 0, Tag1 ("Stdlib", 189)), 0); (("input_byte", 17705), ((Tag1 (0, (Tag3 ((("in_channel", 17653)), 0, (0)), 100000000, 0, -860), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -859), 0), 100000000, 0, -858), 0, (("stdlib.mli", 1135, 42674, 42674), ("stdlib.mli", 1135, 42674, 42708), 0), 0, Tag1 ("Stdlib", 190)), 0); (("input_binary_int", 17706), ((Tag1 (0, (Tag3 ((("in_channel", 17653)), 0, (0)), 100000000, 0, -857), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -856), 0), 100000000, 0, -855), 0, (("stdlib.mli", 1140, 42861, 42861), ("stdlib.mli", 1140, 42861, 42901), 0), 0, Tag1 ("Stdlib", 191)), 0); (("input_value", 17707), ((Tag1 (0, (Tag3 ((("in_channel", 17653)), 0, (0)), 100000000, 0, -854), ((("a")), 100000000, 0, -853), 0), 100000000, 0, -852), 0, (("stdlib.mli", 1146, 43122, 43122), ("stdlib.mli", 1146, 43122, 43156), 0), 0, Tag1 ("Stdlib", 192)), 0); (("seek_in", 17708), ((Tag1 (0, (Tag3 ((("in_channel", 17653)), 0, (0)), 100000000, 0, -851), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -850), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -849), 0), 100000000, 0, -848), 0), 100000000, 0, -847), 0, (("stdlib.mli", 1153, 43467, 43467), ("stdlib.mli", 1153, 43467, 43506), 0), 0, Tag1 ("Stdlib", 193)), 0); (("pos_in", 17709), ((Tag1 (0, (Tag3 ((("in_channel", 17653)), 0, (0)), 100000000, 0, -846), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -845), 0), 100000000, 0, -844), 0, (("stdlib.mli", 1158, 43692, 43692), ("stdlib.mli", 1158, 43692, 43722), 0), 0, Tag1 ("Stdlib", 194)), 0); (("in_channel_length", 17710), ((Tag1 (0, (Tag3 ((("in_channel", 17653)), 0, (0)), 100000000, 0, -843), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -842), 0), 100000000, 0, -841), 0, (("stdlib.mli", 1167, 44153, 44153), ("stdlib.mli", 1167, 44153, 44194), 0), 0, Tag1 ("Stdlib", 195)), 0); (("close_in", 17711), ((Tag1 (0, (Tag3 ((("in_channel", 17653)), 0, (0)), 100000000, 0, -840), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -839), 0), 100000000, 0, -838), 0, (("stdlib.mli", 1175, 44556, 44556), ("stdlib.mli", 1175, 44556, 44589), 0), 0, Tag1 ("Stdlib", 196)), 0); (("close_in_noerr", 17712), ((Tag1 (0, (Tag3 ((("in_channel", 17653)), 0, (0)), 100000000, 0, -837), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -836), 0), 100000000, 0, -835), 0, (("stdlib.mli", 1181, 44806, 44806), ("stdlib.mli", 1181, 44806, 44845), 0), 0, Tag1 ("Stdlib", 197)), 0); (("set_binary_mode_in", 17713), ((Tag1 (0, (Tag3 ((("in_channel", 17653)), 0, (0)), 100000000, 0, -834), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -833), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -832), 0), 100000000, 0, -831), 0), 100000000, 0, -830), 0, (("stdlib.mli", 1184, 44897, 44897), ("stdlib.mli", 1184, 44897, 44948), 0), 0, Tag1 ("Stdlib", 198)), 0); Tag3 (("LargeFile", 17714), 0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "LargeFile")), 0, (("stdlib.mli", 1197, 45468, 45468), ("stdlib.mli", 1205, 45761, 45766), 0), Tag1 ("Stdlib", 205)), 0, 0); Tag1 (("ref", 17715), ([((("a")), 100000000, 0, -829)], 1, [[(("contents", 211), 1, ((("a")), 100000000, 0, -829), (("stdlib.mli", 1215, 46152, 46168), ("stdlib.mli", 1215, 46152, 46189), 0), 0, Tag1 ("Stdlib", 207))]], 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [((("a")), 100000000, 0, -829)], (0)), 100000000, 0, -828)), [63], [0], 0, 0, (("stdlib.mli", 1215, 46152, 46152), ("stdlib.mli", 1215, 46152, 46191), 0), 0, 0, 0, Tag1 ("Stdlib", 206)), 1, 0); (("ref", 17716), ((Tag1 (0, ((("a")), 100000000, 0, -827), (Tag3 ((("ref", 17715)), [((("a")), 100000000, 0, -827)], (0)), 100000000, 0, -826), 0), 100000000, 0, -825), (("%makemutable", 1, 1, "", [0], 0)), (("stdlib.mli", 1219, 46287, 46287), ("stdlib.mli", 1219, 46287, 46331), 0), 0, Tag1 ("Stdlib", 208)), 0); (("!", 17717), ((Tag1 (0, (Tag3 ((("ref", 17715)), [((("a")), 100000000, 0, -823)], (0)), 100000000, 0, -824), ((("a")), 100000000, 0, -823), 0), 100000000, 0, -822), (("%field0", 1, 1, "", [0], 0)), (("stdlib.mli", 1222, 46393, 46393), ("stdlib.mli", 1222, 46393, 46434), 0), 0, Tag1 ("Stdlib", 209)), 0); ((":=", 17718), ((Tag1 (0, (Tag3 ((("ref", 17715)), [((("a")), 100000000, 0, -820)], (0)), 100000000, 0, -821), (Tag1 (0, ((("a")), 100000000, 0, -820), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -819), 0), 100000000, 0, -818), 0), 100000000, 0, -817), (("%setfield0", 2, 1, "", [0; 0], 0)), (("stdlib.mli", 1228, 46599, 46599), ("stdlib.mli", 1228, 46599, 46652), 0), 0, Tag1 ("Stdlib", 210)), 0); (("incr", 17719), ((Tag1 (0, (Tag3 ((("ref", 17715)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -816)], (0)), 100000000, 0, -815), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -814), 0), 100000000, 0, -813), (("%incr", 1, 1, "", [0], 0)), (("stdlib.mli", 1234, 46835, 46835), ("stdlib.mli", 1234, 46835, 46876), 0), 0, Tag1 ("Stdlib", 211)), 0); (("decr", 17720), ((Tag1 (0, (Tag3 ((("ref", 17715)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -812)], (0)), 100000000, 0, -811), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -810), 0), 100000000, 0, -809), (("%decr", 1, 1, "", [0], 0)), (("stdlib.mli", 1238, 46983, 46983), ("stdlib.mli", 1238, 46983, 47024), 0), 0, Tag1 ("Stdlib", 212)), 0); Tag1 (("result", 17721), ([((("a")), 100000000, 0, -807); ((("b")), 100000000, 0, -808)], 2, Tag1 ([(("Ok", 218), ([((("a")), 100000000, 0, -807)]), 0, (("stdlib.mli", 1245, 47174, 47196), ("stdlib.mli", 1245, 47174, 47204), 0), 0, Tag1 ("Stdlib", 214)); (("Error", 219), ([((("b")), 100000000, 0, -808)]), 0, (("stdlib.mli", 1245, 47174, 47205), ("stdlib.mli", 1245, 47174, 47218), 0), 0, Tag1 ("Stdlib", 215))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -807); ((("b")), 100000000, 0, -808)], (0)), 100000000, 0, -806)), [25; 25], [0; 0], 0, 0, (("stdlib.mli", 1245, 47174, 47174), ("stdlib.mli", 1245, 47174, 47218), 0), 0, 0, 0, Tag1 ("Stdlib", 213)), 1, 0); Tag1 (("format6", 17722), ([((("a")), 100000000, 0, -800); ((("b")), 100000000, 0, -801); ((("c")), 100000000, 0, -802); ((("d")), 100000000, 0, -803); ((("e")), 100000000, 0, -804); ((("f")), 100000000, 0, -805)], 6, 0, 1, ((Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "format6"), [((("a")), 100000000, 0, -800); ((("b")), 100000000, 0, -801); ((("c")), 100000000, 0, -802); ((("d")), 100000000, 0, -803); ((("e")), 100000000, 0, -804); ((("f")), 100000000, 0, -805)], (0)), 100000000, 0, -799)), [63; 15; 15; 63; 15; 15], [0; 0; 0; 0; 0; 0], 0, 0, (("stdlib.mli", 1317, 50463, 50463), ("stdlib.mli", 1318, 50503, 50562), 0), 0, 0, 0, Tag1 ("Stdlib", 216)), 1, 0); Tag1 (("format4", 17723), ([((("a")), 100000000, 0, -795); ((("b")), 100000000, 0, -796); ((("c")), 100000000, 0, -797); ((("d")), 100000000, 0, -798)], 4, 0, 1, ((Tag3 ((("format6", 17722)), [((("a")), 100000000, 0, -795); ((("b")), 100000000, 0, -796); ((("c")), 100000000, 0, -797); ((("c")), 100000000, 0, -797); ((("c")), 100000000, 0, -797); ((("d")), 100000000, 0, -798)], (0)), 100000000, 0, -794)), [63; 15; 63; 15], [0; 0; 0; 0], 0, 0, (("stdlib.mli", 1320, 50564, 50564), ("stdlib.mli", 1320, 50564, 50628), 0), 0, 0, 0, Tag1 ("Stdlib", 217)), 1, 0); Tag1 (("format", 17724), ([((("a")), 100000000, 0, -791); ((("b")), 100000000, 0, -792); ((("c")), 100000000, 0, -793)], 3, 0, 1, ((Tag3 ((("format4", 17723)), [((("a")), 100000000, 0, -791); ((("b")), 100000000, 0, -792); ((("c")), 100000000, 0, -793); ((("c")), 100000000, 0, -793)], (0)), 100000000, 0, -790)), [63; 15; 63], [0; 0; 0], 0, 0, (("stdlib.mli", 1322, 50630, 50630), ("stdlib.mli", 1322, 50630, 50681), 0), 0, 0, 0, Tag1 ("Stdlib", 218)), 1, 0); (("string_of_format", 17725), ((Tag1 (0, (Tag3 ((("format6", 17722)), [((("a")), 100000000, 0, -784); ((("b")), 100000000, 0, -785); ((("c")), 100000000, 0, -786); ((("d")), 100000000, 0, -787); ((("e")), 100000000, 0, -788); ((("f")), 100000000, 0, -789)], (0)), 100000000, 0, -783), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -782), 0), 100000000, 0, -781), 0, (("stdlib.mli", 1324, 50683, 50683), ("stdlib.mli", 1324, 50683, 50748), 0), 0, Tag1 ("Stdlib", 219)), 0); (("format_of_string", 17726), ((Tag1 (0, (Tag3 ((("format6", 17722)), [((("a")), 100000000, 0, -774); ((("b")), 100000000, 0, -775); ((("c")), 100000000, 0, -776); ((("d")), 100000000, 0, -777); ((("e")), 100000000, 0, -778); ((("f")), 100000000, 0, -779)], (0)), 100000000, 0, -780), (Tag3 ((("format6", 17722)), [((("a")), 100000000, 0, -774); ((("b")), 100000000, 0, -775); ((("c")), 100000000, 0, -776); ((("d")), 100000000, 0, -777); ((("e")), 100000000, 0, -778); ((("f")), 100000000, 0, -779)], (0)), 100000000, 0, -773), 0), 100000000, 0, -772), (("%identity", 1, 1, "", [0], 0)), (("stdlib.mli", 1327, 50797, 50797), ("stdlib.mli", 1329, 50863, 50911), 0), 0, Tag1 ("Stdlib", 220)), 0); (("^^", 17727), ((Tag1 (0, (Tag3 ((("format6", 17722)), [((("a")), 100000000, 0, -762); ((("b")), 100000000, 0, -763); ((("c")), 100000000, 0, -764); ((("d")), 100000000, 0, -765); ((("e")), 100000000, 0, -770); ((("f")), 100000000, 0, -769)], (0)), 100000000, 0, -771), (Tag1 (0, (Tag3 ((("format6", 17722)), [((("f")), 100000000, 0, -769); ((("b")), 100000000, 0, -763); ((("c")), 100000000, 0, -764); ((("e")), 100000000, 0, -770); ((("g")), 100000000, 0, -766); ((("h")), 100000000, 0, -767)], (0)), 100000000, 0, -768), (Tag3 ((("format6", 17722)), [((("a")), 100000000, 0, -762); ((("b")), 100000000, 0, -763); ((("c")), 100000000, 0, -764); ((("d")), 100000000, 0, -765); ((("g")), 100000000, 0, -766); ((("h")), 100000000, 0, -767)], (0)), 100000000, 0, -761), 0), 100000000, 0, -760), 0), 100000000, 0, -759), 0, (("stdlib.mli", 1337, 51188, 51188), ("stdlib.mli", 1340, 51277, 51311), 0), 0, Tag1 ("Stdlib", 221)), 0); (("exit", 17728), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -758), ((("a")), 100000000, 0, -757), 0), 100000000, 0, -756), 0, (("stdlib.mli", 1351, 51752, 51752), ("stdlib.mli", 1351, 51752, 51772), 0), 0, Tag1 ("Stdlib", 222)), 0); (("at_exit", 17729), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -755), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -754), 0), 100000000, 0, -753), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -752), 0), 100000000, 0, -751), 0, (("stdlib.mli", 1362, 52315, 52315), ("stdlib.mli", 1362, 52315, 52351), 0), 0, Tag1 ("Stdlib", 223)), 0); (("valid_float_lexem", 17730), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -750), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -749), 0), 100000000, 0, -748), 0, (("stdlib.mli", 1377, 52887, 52887), ("stdlib.mli", 1377, 52887, 52927), 0), 0, Tag1 ("Stdlib", 224)), 0); (("unsafe_really_input", 17731), ((Tag1 (0, (Tag3 ((("in_channel", 17653)), 0, (0)), 100000000, 0, -747), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -746), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -745), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -744), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -743), 0), 100000000, 0, -742), 0), 100000000, 0, -741), 0), 100000000, 0, -740), 0), 100000000, 0, -739), 0, (("stdlib.mli", 1379, 52929, 52929), ("stdlib.mli", 1379, 52929, 52996), 0), 0, Tag1 ("Stdlib", 225)), 0); (("do_at_exit", 17732), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -738), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -737), 0), 100000000, 0, -736), 0, (("stdlib.mli", 1381, 52998, 52998), ("stdlib.mli", 1381, 52998, 53027), 0), 0, Tag1 ("Stdlib", 226)), 0); (("do_domain_local_at_exit", 17733), ((Tag3 ((("ref", 17715)), [(Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -735), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -734), 0), 100000000, 0, -733)], (0)), 100000000, 0, -732), 0, (("stdlib.mli", 1383, 53029, 53029), ("stdlib.mli", 1383, 53029, 53077), 0), 0, Tag1 ("Stdlib", 227)), 0); Tag3 (("Arg", 17734), 1, (Tag3 ((Tag2 ("Stdlib__Arg"))), 0, (("stdlib.mli", 1391, 53164, 53164), ("stdlib.mli", 1391, 53164, 53188), 0), Tag1 ("Stdlib", 228)), 0, 0); Tag3 (("ArrayLabels", 17735), 1, (Tag3 ((Tag2 ("Stdlib__ArrayLabels"))), 0, (("stdlib.mli", 1397, 53288, 53288), ("stdlib.mli", 1397, 53288, 53328), 0), Tag1 ("Stdlib", 230)), 0, 0); Tag3 (("Atomic", 17736), 1, (Tag3 ((Tag2 ("Stdlib__Atomic"))), 0, (("stdlib.mli", 1400, 53362, 53362), ("stdlib.mli", 1400, 53362, 53392), 0), Tag1 ("Stdlib", 231)), 0, 0); Tag3 (("Bigarray", 17737), 1, (Tag3 ((Tag2 ("Stdlib__Bigarray"))), 0, (("stdlib.mli", 1403, 53428, 53428), ("stdlib.mli", 1403, 53428, 53462), 0), Tag1 ("Stdlib", 232)), 0, 0); Tag3 (("Bool", 17738), 1, (Tag3 ((Tag2 ("Stdlib__Bool"))), 0, (("stdlib.mli", 1406, 53494, 53494), ("stdlib.mli", 1406, 53494, 53520), 0), Tag1 ("Stdlib", 233)), 0, 0); Tag3 (("Buffer", 17739), 1, (Tag3 ((Tag2 ("Stdlib__Buffer"))), 0, (("stdlib.mli", 1409, 53554, 53554), ("stdlib.mli", 1409, 53554, 53584), 0), Tag1 ("Stdlib", 234)), 0, 0); Tag3 (("BytesLabels", 17740), 1, (Tag3 ((Tag2 ("Stdlib__BytesLabels"))), 0, (("stdlib.mli", 1415, 53684, 53684), ("stdlib.mli", 1415, 53684, 53724), 0), Tag1 ("Stdlib", 236)), 0, 0); Tag3 (("Callback", 17741), 1, (Tag3 ((Tag2 ("Stdlib__Callback"))), 0, (("stdlib.mli", 1418, 53760, 53760), ("stdlib.mli", 1418, 53760, 53794), 0), Tag1 ("Stdlib", 237)), 0, 0); Tag3 (("Char", 17742), 1, (Tag3 ((Tag2 ("Stdlib__Char"))), 0, (("stdlib.mli", 1421, 53826, 53826), ("stdlib.mli", 1421, 53826, 53852), 0), Tag1 ("Stdlib", 238)), 0, 0); Tag3 (("Complex", 17743), 1, (Tag3 ((Tag2 ("Stdlib__Complex"))), 0, (("stdlib.mli", 1424, 53887, 53887), ("stdlib.mli", 1424, 53887, 53919), 0), Tag1 ("Stdlib", 239)), 0, 0); Tag3 (("Condition", 17744), 1, (Tag3 ((Tag2 ("Stdlib__Condition"))), 0, (("stdlib.mli", 1427, 53956, 53956), ("stdlib.mli", 1427, 53956, 53992), 0), Tag1 ("Stdlib", 240)), 0, 0); Tag3 (("Digest", 17745), 1, (Tag3 ((Tag2 ("Stdlib__Digest"))), 0, (("stdlib.mli", 1430, 54026, 54026), ("stdlib.mli", 1430, 54026, 54056), 0), Tag1 ("Stdlib", 241)), 0, 0); Tag3 (("Domain", 17746), 1, (Tag3 ((Tag2 ("Stdlib__Domain"))), [(("alert", (("stdlib.mli", 1434, 54121, 54124), ("stdlib.mli", 1434, 54121, 54129), 0)), ([([(Tag1 (Tag2 ("-unstable", (("stdlib.mli", 1434, 54121, 54131), ("stdlib.mli", 1434, 54121, 54140), 0), 0)), (("stdlib.mli", 1434, 54121, 54130), ("stdlib.mli", 1434, 54121, 54141), 0), 0, 0)], (("stdlib.mli", 1434, 54121, 54130), ("stdlib.mli", 1434, 54121, 54141), 0))]), (("stdlib.mli", 1434, 54121, 54121), ("stdlib.mli", 1434, 54121, 54142), 0)); (("alert", (("stdlib.mli", 1435, 54143, 54146), ("stdlib.mli", 1435, 54143, 54151), 0)), ([([(Tag5 ((((("unstable"), (("stdlib.mli", 1435, 54143, 54152), ("stdlib.mli", 1435, 54143, 54160), 0))), (("stdlib.mli", 1435, 54143, 54152), ("stdlib.mli", 1435, 54143, 54160), 0), 0, 0), [(0, (Tag1 (Tag2 ("The Domain interface may change in incompatible ways in the future.", (("stdlib.mli", 1436, 54161, 54166), ("stdlib.mli", 1436, 54161, 54233), 0), 0)), (("stdlib.mli", 1436, 54161, 54165), ("stdlib.mli", 1436, 54161, 54234), 0), 0, 0))]), (("stdlib.mli", 1435, 54143, 54152), ("stdlib.mli", 1436, 54161, 54234), 0), 0, 0)], (("stdlib.mli", 1435, 54143, 54152), ("stdlib.mli", 1436, 54161, 54234), 0))]), (("stdlib.mli", 1435, 54143, 54143), ("stdlib.mli", 1437, 54235, 54236), 0))], (("stdlib.mli", 1433, 54090, 54090), ("stdlib.mli", 1437, 54235, 54236), 0), Tag1 ("Stdlib", 242)), 0, 0); Tag3 (("Effect", 17747), 1, (Tag3 ((Tag2 ("Stdlib__Effect"))), [(("alert", (("stdlib.mli", 1441, 54301, 54304), ("stdlib.mli", 1441, 54301, 54309), 0)), ([([(Tag1 (Tag2 ("-unstable", (("stdlib.mli", 1441, 54301, 54311), ("stdlib.mli", 1441, 54301, 54320), 0), 0)), (("stdlib.mli", 1441, 54301, 54310), ("stdlib.mli", 1441, 54301, 54321), 0), 0, 0)], (("stdlib.mli", 1441, 54301, 54310), ("stdlib.mli", 1441, 54301, 54321), 0))]), (("stdlib.mli", 1441, 54301, 54301), ("stdlib.mli", 1441, 54301, 54322), 0)); (("alert", (("stdlib.mli", 1442, 54323, 54326), ("stdlib.mli", 1442, 54323, 54331), 0)), ([([(Tag5 ((((("unstable"), (("stdlib.mli", 1442, 54323, 54332), ("stdlib.mli", 1442, 54323, 54340), 0))), (("stdlib.mli", 1442, 54323, 54332), ("stdlib.mli", 1442, 54323, 54340), 0), 0, 0), [(0, (Tag1 (Tag2 ("The Effect interface may change in incompatible ways in the future.", (("stdlib.mli", 1443, 54341, 54346), ("stdlib.mli", 1443, 54341, 54413), 0), 0)), (("stdlib.mli", 1443, 54341, 54345), ("stdlib.mli", 1443, 54341, 54414), 0), 0, 0))]), (("stdlib.mli", 1442, 54323, 54332), ("stdlib.mli", 1443, 54341, 54414), 0), 0, 0)], (("stdlib.mli", 1442, 54323, 54332), ("stdlib.mli", 1443, 54341, 54414), 0))]), (("stdlib.mli", 1442, 54323, 54323), ("stdlib.mli", 1444, 54415, 54416), 0))], (("stdlib.mli", 1440, 54270, 54270), ("stdlib.mli", 1444, 54415, 54416), 0), Tag1 ("Stdlib", 243)), 0, 0); Tag3 (("Either", 17748), 1, (Tag3 ((Tag2 ("Stdlib__Either"))), 0, (("stdlib.mli", 1447, 54450, 54450), ("stdlib.mli", 1447, 54450, 54480), 0), Tag1 ("Stdlib", 244)), 0, 0); Tag3 (("Ephemeron", 17749), 1, (Tag3 ((Tag2 ("Stdlib__Ephemeron"))), 0, (("stdlib.mli", 1450, 54517, 54517), ("stdlib.mli", 1450, 54517, 54553), 0), Tag1 ("Stdlib", 245)), 0, 0); Tag3 (("Filename", 17750), 1, (Tag3 ((Tag2 ("Stdlib__Filename"))), 0, (("stdlib.mli", 1453, 54589, 54589), ("stdlib.mli", 1453, 54589, 54623), 0), Tag1 ("Stdlib", 246)), 0, 0); Tag3 (("Float", 17751), 1, (Tag3 ((Tag2 ("Stdlib__Float"))), 0, (("stdlib.mli", 1456, 54656, 54656), ("stdlib.mli", 1456, 54656, 54684), 0), Tag1 ("Stdlib", 247)), 0, 0); Tag3 (("Format", 17752), 1, (Tag3 ((Tag2 ("Stdlib__Format"))), 0, (("stdlib.mli", 1459, 54718, 54718), ("stdlib.mli", 1459, 54718, 54748), 0), Tag1 ("Stdlib", 248)), 0, 0); Tag3 (("Fun", 17753), 1, (Tag3 ((Tag2 ("Stdlib__Fun"))), 0, (("stdlib.mli", 1462, 54779, 54779), ("stdlib.mli", 1462, 54779, 54803), 0), Tag1 ("Stdlib", 249)), 0, 0); Tag3 (("Gc", 17754), 1, (Tag3 ((Tag2 ("Stdlib__Gc"))), 0, (("stdlib.mli", 1465, 54833, 54833), ("stdlib.mli", 1465, 54833, 54855), 0), Tag1 ("Stdlib", 250)), 0, 0); Tag3 (("In_channel", 17755), 1, (Tag3 ((Tag2 ("Stdlib__In_channel"))), 0, (("stdlib.mli", 1471, 54960, 54960), ("stdlib.mli", 1471, 54960, 54998), 0), Tag1 ("Stdlib", 252)), 0, 0); Tag3 (("Int", 17756), 1, (Tag3 ((Tag2 ("Stdlib__Int"))), 0, (("stdlib.mli", 1474, 55029, 55029), ("stdlib.mli", 1474, 55029, 55053), 0), Tag1 ("Stdlib", 253)), 0, 0); Tag3 (("Int32", 17757), 1, (Tag3 ((Tag2 ("Stdlib__Int32"))), 0, (("stdlib.mli", 1477, 55086, 55086), ("stdlib.mli", 1477, 55086, 55114), 0), Tag1 ("Stdlib", 254)), 0, 0); Tag3 (("Int64", 17758), 1, (Tag3 ((Tag2 ("Stdlib__Int64"))), 0, (("stdlib.mli", 1480, 55147, 55147), ("stdlib.mli", 1480, 55147, 55175), 0), Tag1 ("Stdlib", 255)), 0, 0); Tag3 (("Lazy", 17759), 1, (Tag3 ((Tag2 ("Stdlib__Lazy"))), 0, (("stdlib.mli", 1483, 55207, 55207), ("stdlib.mli", 1483, 55207, 55233), 0), Tag1 ("Stdlib", 256)), 0, 0); Tag3 (("Lexing", 17760), 1, (Tag3 ((Tag2 ("Stdlib__Lexing"))), 0, (("stdlib.mli", 1486, 55267, 55267), ("stdlib.mli", 1486, 55267, 55297), 0), Tag1 ("Stdlib", 257)), 0, 0); Tag3 (("ListLabels", 17761), 1, (Tag3 ((Tag2 ("Stdlib__ListLabels"))), 0, (("stdlib.mli", 1492, 55393, 55393), ("stdlib.mli", 1492, 55393, 55431), 0), Tag1 ("Stdlib", 259)), 0, 0); Tag3 (("Marshal", 17762), 1, (Tag3 ((Tag2 ("Stdlib__Marshal"))), 0, (("stdlib.mli", 1498, 55521, 55521), ("stdlib.mli", 1498, 55521, 55553), 0), Tag1 ("Stdlib", 261)), 0, 0); Tag3 (("MoreLabels", 17763), 1, (Tag3 ((Tag2 ("Stdlib__MoreLabels"))), 0, (("stdlib.mli", 1501, 55591, 55591), ("stdlib.mli", 1501, 55591, 55629), 0), Tag1 ("Stdlib", 262)), 0, 0); Tag3 (("Mutex", 17764), 1, (Tag3 ((Tag2 ("Stdlib__Mutex"))), 0, (("stdlib.mli", 1504, 55662, 55662), ("stdlib.mli", 1504, 55662, 55690), 0), Tag1 ("Stdlib", 263)), 0, 0); Tag3 (("Nativeint", 17765), 1, (Tag3 ((Tag2 ("Stdlib__Nativeint"))), 0, (("stdlib.mli", 1507, 55727, 55727), ("stdlib.mli", 1507, 55727, 55763), 0), Tag1 ("Stdlib", 264)), 0, 0); Tag3 (("Obj", 17766), 1, (Tag3 ((Tag2 ("Stdlib__Obj"))), 0, (("stdlib.mli", 1510, 55794, 55794), ("stdlib.mli", 1510, 55794, 55818), 0), Tag1 ("Stdlib", 265)), 0, 0); Tag3 (("Oo", 17767), 1, (Tag3 ((Tag2 ("Stdlib__Oo"))), 0, (("stdlib.mli", 1513, 55848, 55848), ("stdlib.mli", 1513, 55848, 55870), 0), Tag1 ("Stdlib", 266)), 0, 0); Tag3 (("Option", 17768), 1, (Tag3 ((Tag2 ("Stdlib__Option"))), 0, (("stdlib.mli", 1516, 55904, 55904), ("stdlib.mli", 1516, 55904, 55934), 0), Tag1 ("Stdlib", 267)), 0, 0); Tag3 (("Out_channel", 17769), 1, (Tag3 ((Tag2 ("Stdlib__Out_channel"))), 0, (("stdlib.mli", 1519, 55973, 55973), ("stdlib.mli", 1519, 55973, 56013), 0), Tag1 ("Stdlib", 268)), 0, 0); Tag3 (("Parsing", 17770), 1, (Tag3 ((Tag2 ("Stdlib__Parsing"))), 0, (("stdlib.mli", 1522, 56048, 56048), ("stdlib.mli", 1522, 56048, 56080), 0), Tag1 ("Stdlib", 269)), 0, 0); Tag3 (("Printexc", 17771), 1, (Tag3 ((Tag2 ("Stdlib__Printexc"))), 0, (("stdlib.mli", 1525, 56116, 56116), ("stdlib.mli", 1525, 56116, 56150), 0), Tag1 ("Stdlib", 270)), 0, 0); Tag3 (("Printf", 17772), 1, (Tag3 ((Tag2 ("Stdlib__Printf"))), 0, (("stdlib.mli", 1528, 56184, 56184), ("stdlib.mli", 1528, 56184, 56214), 0), Tag1 ("Stdlib", 271)), 0, 0); Tag3 (("Queue", 17773), 1, (Tag3 ((Tag2 ("Stdlib__Queue"))), 0, (("stdlib.mli", 1531, 56247, 56247), ("stdlib.mli", 1531, 56247, 56275), 0), Tag1 ("Stdlib", 272)), 0, 0); Tag3 (("Random", 17774), 1, (Tag3 ((Tag2 ("Stdlib__Random"))), 0, (("stdlib.mli", 1534, 56309, 56309), ("stdlib.mli", 1534, 56309, 56339), 0), Tag1 ("Stdlib", 273)), 0, 0); Tag3 (("Result", 17775), 1, (Tag3 ((Tag2 ("Stdlib__Result"))), 0, (("stdlib.mli", 1537, 56373, 56373), ("stdlib.mli", 1537, 56373, 56403), 0), Tag1 ("Stdlib", 274)), 0, 0); Tag3 (("Scanf", 17776), 1, (Tag3 ((Tag2 ("Stdlib__Scanf"))), 0, (("stdlib.mli", 1540, 56436, 56436), ("stdlib.mli", 1540, 56436, 56464), 0), Tag1 ("Stdlib", 275)), 0, 0); Tag3 (("Semaphore", 17777), 1, (Tag3 ((Tag2 ("Stdlib__Semaphore"))), 0, (("stdlib.mli", 1543, 56501, 56501), ("stdlib.mli", 1543, 56501, 56537), 0), Tag1 ("Stdlib", 276)), 0, 0); Tag3 (("Seq", 17778), 1, (Tag3 ((Tag2 ("Stdlib__Seq"))), 0, (("stdlib.mli", 1546, 56568, 56568), ("stdlib.mli", 1546, 56568, 56592), 0), Tag1 ("Stdlib", 277)), 0, 0); Tag3 (("Stack", 17779), 1, (Tag3 ((Tag2 ("Stdlib__Stack"))), 0, (("stdlib.mli", 1552, 56680, 56680), ("stdlib.mli", 1552, 56680, 56708), 0), Tag1 ("Stdlib", 279)), 0, 0); Tag3 (("StdLabels", 17780), 1, (Tag3 ((Tag2 ("Stdlib__StdLabels"))), 0, (("stdlib.mli", 1555, 56745, 56745), ("stdlib.mli", 1555, 56745, 56781), 0), Tag1 ("Stdlib", 280)), 0, 0); Tag3 (("StringLabels", 17781), 1, (Tag3 ((Tag2 ("Stdlib__StringLabels"))), 0, (("stdlib.mli", 1561, 56885, 56885), ("stdlib.mli", 1561, 56885, 56927), 0), Tag1 ("Stdlib", 282)), 0, 0); Tag3 (("Sys", 17782), 1, (Tag3 ((Tag2 ("Stdlib__Sys"))), 0, (("stdlib.mli", 1564, 56958, 56958), ("stdlib.mli", 1564, 56958, 56982), 0), Tag1 ("Stdlib", 283)), 0, 0); Tag3 (("Type", 17783), 1, (Tag3 ((Tag2 ("Stdlib__Type"))), 0, (("stdlib.mli", 1567, 57014, 57014), ("stdlib.mli", 1567, 57014, 57040), 0), Tag1 ("Stdlib", 284)), 0, 0); Tag3 (("Uchar", 17784), 1, (Tag3 ((Tag2 ("Stdlib__Uchar"))), 0, (("stdlib.mli", 1570, 57073, 57073), ("stdlib.mli", 1570, 57073, 57101), 0), Tag1 ("Stdlib", 285)), 0, 0); Tag3 (("Unit", 17785), 1, (Tag3 ((Tag2 ("Stdlib__Unit"))), 0, (("stdlib.mli", 1573, 57133, 57133), ("stdlib.mli", 1573, 57133, 57159), 0), Tag1 ("Stdlib", 286)), 0, 0); Tag3 (("Weak", 17786), 1, (Tag3 ((Tag2 ("Stdlib__Weak"))), 0, (("stdlib.mli", 1576, 57191, 57191), ("stdlib.mli", 1576, 57191, 57217), 0), Tag1 ("Stdlib", 287)), 0, 0); Tag3 (("Array", 17787), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ArrayLabels")), 0, (("stdLabels.mli", 33, 1569, 1569), ("stdLabels.mli", 33, 1569, 1595), 0), Tag1 ("Stdlib__StdLabels", 0)), 0, 0); Tag3 (("Bytes", 17788), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "BytesLabels")), 0, (("stdLabels.mli", 34, 1596, 1596), ("stdLabels.mli", 34, 1596, 1622), 0), Tag1 ("Stdlib__StdLabels", 1)), 0, 0); Tag3 (("List", 17789), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ListLabels")), 0, (("stdLabels.mli", 35, 1623, 1623), ("stdLabels.mli", 35, 1623, 1647), 0), Tag1 ("Stdlib__StdLabels", 2)), 0, 0); Tag3 (("String", 17790), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "StringLabels")), 0, (("stdLabels.mli", 36, 1648, 1648), ("stdLabels.mli", 36, 1648, 1676), 0), Tag1 ("Stdlib__StdLabels", 3)), 0, 0); Tag3 (("Hashtbl", 17791), 0, (Tag3 (Tag1 ((Tag2 ("Stdlib__MoreLabels")), "Hashtbl")), 0, (("moreLabels.mli", 35, 1580, 1580), ("moreLabels.mli", 664, 25818, 25821), 0), Tag1 ("Stdlib__MoreLabels", 101)), 0, 0); Tag3 (("Map", 17792), 0, (Tag3 (Tag1 ((Tag2 ("Stdlib__MoreLabels")), "Map")), 0, (("moreLabels.mli", 666, 25823, 25823), ("moreLabels.mli", 1020, 40540, 40543), 0), Tag1 ("Stdlib__MoreLabels", 155)), 0, 0); Tag3 (("Set", 17793), 0, (Tag3 (Tag1 ((Tag2 ("Stdlib__MoreLabels")), "Set")), 0, (("moreLabels.mli", 1022, 40545, 40545), ("moreLabels.mli", 1331, 52011, 52014), 0), Tag1 ("Stdlib__MoreLabels", 209)), 0, 0)]), 0, (("src/import0.ml", 47, 1878, 1878), ("src/import0.ml", 51, 1973, 1976), 0), Tag1 ("Base__Import0", 6)), 0, 0); (("|>", 17464), ((Tag1 (0, ((("a")), 100000000, 0, -234), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -234), ((("b")), 100000000, 0, -232), 0), 100000000, 0, -233), ((("b")), 100000000, 0, -232), 0), 100000000, 0, -231), 0), 100000000, 0, -230), (("%revapply", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 53, 1978, 1978), ("src/import0.ml", 53, 1978, 2046), 0), 0, Tag1 ("Base__Import0", 7)), 0); (("&&", 17465), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -229), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -228), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -227), 0), 100000000, 0, -226), 0), 100000000, 0, -225), (("%sequand", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 56, 2120, 2120), ("src/import0.ml", 56, 2120, 2199), 0), 0, Tag1 ("Base__Import0", 8)), 0); (("||", 17466), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -224), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -223), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -222), 0), 100000000, 0, -221), 0), 100000000, 0, -220), (("%sequor", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 57, 2200, 2200), ("src/import0.ml", 57, 2200, 2278), 0), 0, Tag1 ("Base__Import0", 9)), 0); (("not", 17467), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -219), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -218), 0), 100000000, 0, -217), (("%boolnot", 1, 1, "", [0], 0)), (("src/import0.ml", 58, 2279, 2279), ("src/import0.ml", 58, 2279, 2333), 0), 0, Tag1 ("Base__Import0", 10)), 0); (("bool_to_int", 17468), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -216), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -215), 0), 100000000, 0, -214), 0, (("src/import0.ml", 62, 2467, 2471), ("src/import0.ml", 62, 2467, 2482), 0), 0, Tag1 ("Base__Import0", 11)), 0); (("ignore", 17469), ((Tag1 (0, ((0), 100000000, 0, -213), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -212), 0), 100000000, 0, -211), (("%ignore", 1, 1, "", [0], 0)), (("src/import0.ml", 65, 2602, 2602), ("src/import0.ml", 65, 2602, 2641), 0), 0, Tag1 ("Base__Import0", 13)), 0); (("!=", 17470), ((Tag1 (0, ((0), 100000000, 0, -210), (Tag1 (0, ((0), 100000000, 0, -210), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -209), 0), 100000000, 0, -208), 0), 100000000, 0, -207), 0, (("src/import0.ml", 67, 2643, 2647), ("src/import0.ml", 67, 2643, 2653), 0), 0, Tag1 ("Base__Import0", 14)), 0); (("*", 17471), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -206), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -205), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -204), 0), 100000000, 0, -203), 0), 100000000, 0, -202), 0, (("src/import0.ml", 68, 2670, 2674), ("src/import0.ml", 68, 2670, 2679), 0), 0, Tag1 ("Base__Import0", 15)), 0); (("**", 17472), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -201), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -200), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -199), 0), 100000000, 0, -198), 0), 100000000, 0, -197), 0, (("src/import0.ml", 69, 2695, 2699), ("src/import0.ml", 69, 2695, 2705), 0), 0, Tag1 ("Base__Import0", 16)), 0); (("*.", 17473), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -196), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -195), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -194), 0), 100000000, 0, -193), 0), 100000000, 0, -192), 0, (("src/import0.ml", 70, 2722, 2726), ("src/import0.ml", 70, 2722, 2732), 0), 0, Tag1 ("Base__Import0", 17)), 0); (("+", 17474), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -191), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -190), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -189), 0), 100000000, 0, -188), 0), 100000000, 0, -187), 0, (("src/import0.ml", 71, 2749, 2753), ("src/import0.ml", 71, 2749, 2758), 0), 0, Tag1 ("Base__Import0", 18)), 0); (("+.", 17475), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -186), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -185), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -184), 0), 100000000, 0, -183), 0), 100000000, 0, -182), 0, (("src/import0.ml", 72, 2774, 2778), ("src/import0.ml", 72, 2774, 2784), 0), 0, Tag1 ("Base__Import0", 19)), 0); (("-", 17476), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -181), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -180), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -179), 0), 100000000, 0, -178), 0), 100000000, 0, -177), 0, (("src/import0.ml", 73, 2801, 2805), ("src/import0.ml", 73, 2801, 2810), 0), 0, Tag1 ("Base__Import0", 20)), 0); (("-.", 17477), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -176), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -175), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -174), 0), 100000000, 0, -173), 0), 100000000, 0, -172), 0, (("src/import0.ml", 74, 2826, 2830), ("src/import0.ml", 74, 2826, 2836), 0), 0, Tag1 ("Base__Import0", 21)), 0); (("/", 17478), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -171), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -170), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -169), 0), 100000000, 0, -168), 0), 100000000, 0, -167), 0, (("src/import0.ml", 75, 2853, 2857), ("src/import0.ml", 75, 2853, 2862), 0), 0, Tag1 ("Base__Import0", 22)), 0); (("/.", 17479), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -166), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -165), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -164), 0), 100000000, 0, -163), 0), 100000000, 0, -162), 0, (("src/import0.ml", 76, 2878, 2882), ("src/import0.ml", 76, 2878, 2888), 0), 0, Tag1 ("Base__Import0", 23)), 0); Tag3 (("Poly", 17480), 1, (Tag3 (Tag1 ((Tag2 ("Base__")), "Poly0")), 0, (("src/import0.ml", 78, 2906, 2906), ("src/import0.ml", 78, 2906, 2925), 0), Tag1 ("Base__Import0", 24)), 0, 0); Tag3 (("Int_replace_polymorphic_compare", 17481), 0, (Tag1 ([(("=", 17794), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1518), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1517), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1516), 0), 100000000, 0, -1515), 0), 100000000, 0, -1514), (("%equal", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 83, 3143, 3145), ("src/import0.ml", 83, 3143, 3219), 0), 0, Tag1 ("Base__Import0", 25)), 0); (("<>", 17795), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1513), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1512), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1511), 0), 100000000, 0, -1510), 0), 100000000, 0, -1509), (("%notequal", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 84, 3220, 3222), ("src/import0.ml", 84, 3220, 3300), 0), 0, Tag1 ("Base__Import0", 26)), 0); (("<", 17796), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1508), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1507), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1506), 0), 100000000, 0, -1505), 0), 100000000, 0, -1504), (("%lessthan", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 85, 3301, 3303), ("src/import0.ml", 85, 3301, 3380), 0), 0, Tag1 ("Base__Import0", 27)), 0); ((">", 17797), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1503), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1502), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1501), 0), 100000000, 0, -1500), 0), 100000000, 0, -1499), (("%greaterthan", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 86, 3381, 3383), ("src/import0.ml", 86, 3381, 3463), 0), 0, Tag1 ("Base__Import0", 28)), 0); (("<=", 17798), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1498), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1497), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1496), 0), 100000000, 0, -1495), 0), 100000000, 0, -1494), (("%lessequal", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 87, 3464, 3466), ("src/import0.ml", 87, 3464, 3545), 0), 0, Tag1 ("Base__Import0", 29)), 0); ((">=", 17799), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1493), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1492), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1491), 0), 100000000, 0, -1490), 0), 100000000, 0, -1489), (("%greaterequal", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 88, 3546, 3548), ("src/import0.ml", 88, 3546, 3630), 0), 0, Tag1 ("Base__Import0", 30)), 0); (("compare", 17800), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1488), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1487), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1486), 0), 100000000, 0, -1485), 0), 100000000, 0, -1484), (("%compare", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 89, 3631, 3633), ("src/import0.ml", 89, 3631, 3710), 0), 0, Tag1 ("Base__Import0", 31)), 0); (("equal", 17801), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1483), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1482), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1481), 0), 100000000, 0, -1480), 0), 100000000, 0, -1479), (("%equal", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 90, 3711, 3713), ("src/import0.ml", 90, 3711, 3787), 0), 0, Tag1 ("Base__Import0", 32)), 0); (("ascending", 17802), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1478), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1477), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1476), 0), 100000000, 0, -1475), 0), 100000000, 0, -1474), 0, (("src/import0.ml", 92, 3789, 3795), ("src/import0.ml", 92, 3789, 3804), 0), 0, Tag1 ("Base__Import0", 33)), 0); (("descending", 17803), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1473), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1472), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1471), 0), 100000000, 0, -1470), 0), 100000000, 0, -1469), 0, (("src/import0.ml", 93, 3831, 3837), ("src/import0.ml", 93, 3831, 3847), 0), 0, Tag1 ("Base__Import0", 36)), 0); (("max", 17804), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1468), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1467), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1467), 0), 100000000, 0, -1466), 0), 100000000, 0, -1465), 0, (("src/import0.ml", 94, 3874, 3880), ("src/import0.ml", 94, 3874, 3883), 0), 0, Tag1 ("Base__Import0", 39)), 0); (("min", 17805), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1464), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1463), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1463), 0), 100000000, 0, -1462), 0), 100000000, 0, -1461), 0, (("src/import0.ml", 95, 3924, 3930), ("src/import0.ml", 95, 3924, 3933), 0), 0, Tag1 ("Base__Import0", 42)), 0)]), 0, (("src/import0.ml", 80, 2955, 2955), ("src/import0.ml", 96, 3974, 3977), 0), Tag1 ("Base__Import0", 45)), 0, 0); (("=", 17482), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -161), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -160), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -159), 0), 100000000, 0, -158), 0), 100000000, 0, -157), (("%equal", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 83, 3143, 3145), ("src/import0.ml", 83, 3143, 3219), 0), 0, Tag1 ("Base__Import0", 25)), 0); (("<>", 17483), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -156), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -155), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -154), 0), 100000000, 0, -153), 0), 100000000, 0, -152), (("%notequal", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 84, 3220, 3222), ("src/import0.ml", 84, 3220, 3300), 0), 0, Tag1 ("Base__Import0", 26)), 0); (("<", 17484), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -151), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -150), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -149), 0), 100000000, 0, -148), 0), 100000000, 0, -147), (("%lessthan", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 85, 3301, 3303), ("src/import0.ml", 85, 3301, 3380), 0), 0, Tag1 ("Base__Import0", 27)), 0); ((">", 17485), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -146), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -145), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -144), 0), 100000000, 0, -143), 0), 100000000, 0, -142), (("%greaterthan", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 86, 3381, 3383), ("src/import0.ml", 86, 3381, 3463), 0), 0, Tag1 ("Base__Import0", 28)), 0); (("<=", 17486), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -141), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -140), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -139), 0), 100000000, 0, -138), 0), 100000000, 0, -137), (("%lessequal", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 87, 3464, 3466), ("src/import0.ml", 87, 3464, 3545), 0), 0, Tag1 ("Base__Import0", 29)), 0); ((">=", 17487), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -136), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -135), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -134), 0), 100000000, 0, -133), 0), 100000000, 0, -132), (("%greaterequal", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 88, 3546, 3548), ("src/import0.ml", 88, 3546, 3630), 0), 0, Tag1 ("Base__Import0", 30)), 0); (("compare", 17488), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -131), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -130), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -129), 0), 100000000, 0, -128), 0), 100000000, 0, -127), (("%compare", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 89, 3631, 3633), ("src/import0.ml", 89, 3631, 3710), 0), 0, Tag1 ("Base__Import0", 31)), 0); (("equal", 17489), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -126), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -125), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -124), 0), 100000000, 0, -123), 0), 100000000, 0, -122), (("%equal", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 90, 3711, 3713), ("src/import0.ml", 90, 3711, 3787), 0), 0, Tag1 ("Base__Import0", 32)), 0); (("ascending", 17490), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -121), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -120), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -119), 0), 100000000, 0, -118), 0), 100000000, 0, -117), 0, (("src/import0.ml", 92, 3789, 3795), ("src/import0.ml", 92, 3789, 3804), 0), 0, Tag1 ("Base__Import0", 33)), 0); (("descending", 17491), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -116), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -115), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -114), 0), 100000000, 0, -113), 0), 100000000, 0, -112), 0, (("src/import0.ml", 93, 3831, 3837), ("src/import0.ml", 93, 3831, 3847), 0), 0, Tag1 ("Base__Import0", 36)), 0); (("max", 17492), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -111), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -110), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -110), 0), 100000000, 0, -109), 0), 100000000, 0, -108), 0, (("src/import0.ml", 94, 3874, 3880), ("src/import0.ml", 94, 3874, 3883), 0), 0, Tag1 ("Base__Import0", 39)), 0); (("min", 17493), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -107), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -106), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -106), 0), 100000000, 0, -105), 0), 100000000, 0, -104), 0, (("src/import0.ml", 95, 3924, 3930), ("src/import0.ml", 95, 3924, 3933), 0), 0, Tag1 ("Base__Import0", 42)), 0); Tag3 (("Int32_replace_polymorphic_compare", 17494), 0, (Tag1 ([(("<", 17806), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1576), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1575), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1574), 0), 100000000, 0, -1573), 0), 100000000, 0, -1572), 0, (("src/import0.ml", 101, 4070, 4076), ("src/import0.ml", 101, 4070, 4081), 0), 0, Tag1 ("Base__Import0", 46)), 0); (("<=", 17807), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1571), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1570), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1569), 0), 100000000, 0, -1568), 0), 100000000, 0, -1567), 0, (("src/import0.ml", 102, 4122, 4128), ("src/import0.ml", 102, 4122, 4134), 0), 0, Tag1 ("Base__Import0", 49)), 0); (("<>", 17808), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1566), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1565), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1564), 0), 100000000, 0, -1563), 0), 100000000, 0, -1562), 0, (("src/import0.ml", 103, 4176, 4182), ("src/import0.ml", 103, 4176, 4188), 0), 0, Tag1 ("Base__Import0", 52)), 0); (("=", 17809), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1561), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1560), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1559), 0), 100000000, 0, -1558), 0), 100000000, 0, -1557), 0, (("src/import0.ml", 104, 4230, 4236), ("src/import0.ml", 104, 4230, 4241), 0), 0, Tag1 ("Base__Import0", 55)), 0); ((">", 17810), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1556), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1555), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1554), 0), 100000000, 0, -1553), 0), 100000000, 0, -1552), 0, (("src/import0.ml", 105, 4282, 4288), ("src/import0.ml", 105, 4282, 4293), 0), 0, Tag1 ("Base__Import0", 58)), 0); ((">=", 17811), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1551), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1550), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1549), 0), 100000000, 0, -1548), 0), 100000000, 0, -1547), 0, (("src/import0.ml", 106, 4334, 4340), ("src/import0.ml", 106, 4334, 4346), 0), 0, Tag1 ("Base__Import0", 61)), 0); (("ascending", 17812), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1546), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1545), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1544), 0), 100000000, 0, -1543), 0), 100000000, 0, -1542), 0, (("src/import0.ml", 107, 4388, 4394), ("src/import0.ml", 107, 4388, 4403), 0), 0, Tag1 ("Base__Import0", 64)), 0); (("descending", 17813), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1541), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1540), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1539), 0), 100000000, 0, -1538), 0), 100000000, 0, -1537), 0, (("src/import0.ml", 108, 4448, 4454), ("src/import0.ml", 108, 4448, 4464), 0), 0, Tag1 ("Base__Import0", 67)), 0); (("compare", 17814), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1536), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1535), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1534), 0), 100000000, 0, -1533), 0), 100000000, 0, -1532), 0, (("src/import0.ml", 109, 4510, 4516), ("src/import0.ml", 109, 4510, 4523), 0), 0, Tag1 ("Base__Import0", 70)), 0); (("equal", 17815), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1531), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1530), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1529), 0), 100000000, 0, -1528), 0), 100000000, 0, -1527), 0, (("src/import0.ml", 110, 4566, 4572), ("src/import0.ml", 110, 4566, 4577), 0), 0, Tag1 ("Base__Import0", 73)), 0); (("max", 17816), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1526), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1525), (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1525), 0), 100000000, 0, -1524), 0), 100000000, 0, -1523), 0, (("src/import0.ml", 111, 4618, 4624), ("src/import0.ml", 111, 4618, 4627), 0), 0, Tag1 ("Base__Import0", 76)), 0); (("min", 17817), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1522), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1521), (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int32"), "t"), 0, (0)), 100000000, 0, -1521), 0), 100000000, 0, -1520), 0), 100000000, 0, -1519), 0, (("src/import0.ml", 112, 4679, 4685), ("src/import0.ml", 112, 4679, 4688), 0), 0, Tag1 ("Base__Import0", 79)), 0)]), 0, (("src/import0.ml", 100, 4020, 4020), ("src/import0.ml", 113, 4740, 4743), 0), Tag1 ("Base__Import0", 82)), 0, 0); Tag3 (("Int64_replace_polymorphic_compare", 17495), 0, (Tag1 ([(("=", 17818), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1634), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1633), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1632), 0), 100000000, 0, -1631), 0), 100000000, 0, -1630), (("%equal", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 118, 4935, 4937), ("src/import0.ml", 122, 5036, 5050), 0), 0, Tag1 ("Base__Import0", 83)), 0); (("<>", 17819), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1629), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1628), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1627), 0), 100000000, 0, -1626), 0), 100000000, 0, -1625), (("%notequal", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 124, 5052, 5054), ("src/import0.ml", 128, 5154, 5171), 0), 0, Tag1 ("Base__Import0", 84)), 0); (("<", 17820), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1624), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1623), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1622), 0), 100000000, 0, -1621), 0), 100000000, 0, -1620), (("%lessthan", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 130, 5173, 5175), ("src/import0.ml", 134, 5274, 5291), 0), 0, Tag1 ("Base__Import0", 85)), 0); ((">", 17821), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1619), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1618), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1617), 0), 100000000, 0, -1616), 0), 100000000, 0, -1615), (("%greaterthan", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 136, 5293, 5295), ("src/import0.ml", 140, 5394, 5414), 0), 0, Tag1 ("Base__Import0", 86)), 0); (("<=", 17822), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1614), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1613), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1612), 0), 100000000, 0, -1611), 0), 100000000, 0, -1610), (("%lessequal", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 142, 5416, 5418), ("src/import0.ml", 146, 5518, 5536), 0), 0, Tag1 ("Base__Import0", 87)), 0); ((">=", 17823), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1609), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1608), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1607), 0), 100000000, 0, -1606), 0), 100000000, 0, -1605), (("%greaterequal", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 148, 5538, 5540), ("src/import0.ml", 152, 5640, 5661), 0), 0, Tag1 ("Base__Import0", 88)), 0); (("compare", 17824), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1604), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1603), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1602), 0), 100000000, 0, -1601), 0), 100000000, 0, -1600), (("%compare", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 154, 5663, 5665), ("src/import0.ml", 158, 5765, 5781), 0), 0, Tag1 ("Base__Import0", 89)), 0); (("equal", 17825), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1599), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1598), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1597), 0), 100000000, 0, -1596), 0), 100000000, 0, -1595), (("%equal", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 160, 5783, 5785), ("src/import0.ml", 164, 5884, 5898), 0), 0, Tag1 ("Base__Import0", 90)), 0); (("ascending", 17826), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1594), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1593), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1592), 0), 100000000, 0, -1591), 0), 100000000, 0, -1590), 0, (("src/import0.ml", 166, 5900, 5906), ("src/import0.ml", 166, 5900, 5915), 0), 0, Tag1 ("Base__Import0", 91)), 0); (("descending", 17827), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1589), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1588), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1587), 0), 100000000, 0, -1586), 0), 100000000, 0, -1585), 0, (("src/import0.ml", 167, 5960, 5966), ("src/import0.ml", 167, 5960, 5976), 0), 0, Tag1 ("Base__Import0", 94)), 0); (("max", 17828), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1584), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1583), (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1583), 0), 100000000, 0, -1582), 0), 100000000, 0, -1581), 0, (("src/import0.ml", 168, 6022, 6028), ("src/import0.ml", 168, 6022, 6031), 0), 0, Tag1 ("Base__Import0", 97)), 0); (("min", 17829), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1580), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1579), (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Int64"), "t"), 0, (0)), 100000000, 0, -1579), 0), 100000000, 0, -1578), 0), 100000000, 0, -1577), 0, (("src/import0.ml", 169, 6083, 6089), ("src/import0.ml", 169, 6083, 6092), 0), 0, Tag1 ("Base__Import0", 100)), 0)]), 0, (("src/import0.ml", 115, 4745, 4745), ("src/import0.ml", 170, 6144, 6147), 0), Tag1 ("Base__Import0", 103)), 0, 0); Tag3 (("Nativeint_replace_polymorphic_compare", 17496), 0, (Tag1 ([(("<", 17830), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1692), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1691), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1690), 0), 100000000, 0, -1689), 0), 100000000, 0, -1688), 0, (("src/import0.ml", 173, 6203, 6209), ("src/import0.ml", 173, 6203, 6214), 0), 0, Tag1 ("Base__Import0", 104)), 0); (("<=", 17831), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1687), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1686), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1685), 0), 100000000, 0, -1684), 0), 100000000, 0, -1683), 0, (("src/import0.ml", 174, 6259, 6265), ("src/import0.ml", 174, 6259, 6271), 0), 0, Tag1 ("Base__Import0", 107)), 0); (("<>", 17832), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1682), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1681), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1680), 0), 100000000, 0, -1679), 0), 100000000, 0, -1678), 0, (("src/import0.ml", 175, 6317, 6323), ("src/import0.ml", 175, 6317, 6329), 0), 0, Tag1 ("Base__Import0", 110)), 0); (("=", 17833), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1677), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1676), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1675), 0), 100000000, 0, -1674), 0), 100000000, 0, -1673), 0, (("src/import0.ml", 176, 6375, 6381), ("src/import0.ml", 176, 6375, 6386), 0), 0, Tag1 ("Base__Import0", 113)), 0); ((">", 17834), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1672), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1671), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1670), 0), 100000000, 0, -1669), 0), 100000000, 0, -1668), 0, (("src/import0.ml", 177, 6431, 6437), ("src/import0.ml", 177, 6431, 6442), 0), 0, Tag1 ("Base__Import0", 116)), 0); ((">=", 17835), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1667), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1666), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1665), 0), 100000000, 0, -1664), 0), 100000000, 0, -1663), 0, (("src/import0.ml", 178, 6487, 6493), ("src/import0.ml", 178, 6487, 6499), 0), 0, Tag1 ("Base__Import0", 119)), 0); (("ascending", 17836), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1662), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1661), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1660), 0), 100000000, 0, -1659), 0), 100000000, 0, -1658), 0, (("src/import0.ml", 179, 6545, 6551), ("src/import0.ml", 179, 6545, 6560), 0), 0, Tag1 ("Base__Import0", 122)), 0); (("descending", 17837), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1657), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1656), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1655), 0), 100000000, 0, -1654), 0), 100000000, 0, -1653), 0, (("src/import0.ml", 180, 6609, 6615), ("src/import0.ml", 180, 6609, 6625), 0), 0, Tag1 ("Base__Import0", 125)), 0); (("compare", 17838), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1652), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1651), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1650), 0), 100000000, 0, -1649), 0), 100000000, 0, -1648), 0, (("src/import0.ml", 181, 6675, 6681), ("src/import0.ml", 181, 6675, 6688), 0), 0, Tag1 ("Base__Import0", 128)), 0); (("equal", 17839), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1647), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1646), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1645), 0), 100000000, 0, -1644), 0), 100000000, 0, -1643), 0, (("src/import0.ml", 182, 6735, 6741), ("src/import0.ml", 182, 6735, 6746), 0), 0, Tag1 ("Base__Import0", 131)), 0); (("max", 17840), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1642), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1641), (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1641), 0), 100000000, 0, -1640), 0), 100000000, 0, -1639), 0, (("src/import0.ml", 183, 6791, 6797), ("src/import0.ml", 183, 6791, 6800), 0), 0, Tag1 ("Base__Import0", 134)), 0); (("min", 17841), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1638), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1637), (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Nativeint"), "t"), 0, (0)), 100000000, 0, -1637), 0), 100000000, 0, -1636), 0), 100000000, 0, -1635), 0, (("src/import0.ml", 184, 6856, 6862), ("src/import0.ml", 184, 6856, 6865), 0), 0, Tag1 ("Base__Import0", 137)), 0)]), 0, (("src/import0.ml", 172, 6149, 6149), ("src/import0.ml", 185, 6921, 6924), 0), Tag1 ("Base__Import0", 140)), 0, 0); Tag3 (("Bool_replace_polymorphic_compare", 17497), 0, (Tag1 ([(("<", 17842), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1750), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1749), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1748), 0), 100000000, 0, -1747), 0), 100000000, 0, -1746), 0, (("src/import0.ml", 188, 6975, 6981), ("src/import0.ml", 188, 6975, 6986), 0), 0, Tag1 ("Base__Import0", 141)), 0); (("<=", 17843), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1745), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1744), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1743), 0), 100000000, 0, -1742), 0), 100000000, 0, -1741), 0, (("src/import0.ml", 189, 7017, 7023), ("src/import0.ml", 189, 7017, 7029), 0), 0, Tag1 ("Base__Import0", 144)), 0); (("<>", 17844), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1740), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1739), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1738), 0), 100000000, 0, -1737), 0), 100000000, 0, -1736), 0, (("src/import0.ml", 190, 7061, 7067), ("src/import0.ml", 190, 7061, 7073), 0), 0, Tag1 ("Base__Import0", 147)), 0); (("=", 17845), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1735), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1734), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1733), 0), 100000000, 0, -1732), 0), 100000000, 0, -1731), 0, (("src/import0.ml", 191, 7105, 7111), ("src/import0.ml", 191, 7105, 7116), 0), 0, Tag1 ("Base__Import0", 150)), 0); ((">", 17846), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1730), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1729), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1728), 0), 100000000, 0, -1727), 0), 100000000, 0, -1726), 0, (("src/import0.ml", 192, 7147, 7153), ("src/import0.ml", 192, 7147, 7158), 0), 0, Tag1 ("Base__Import0", 153)), 0); ((">=", 17847), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1725), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1724), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1723), 0), 100000000, 0, -1722), 0), 100000000, 0, -1721), 0, (("src/import0.ml", 193, 7189, 7195), ("src/import0.ml", 193, 7189, 7201), 0), 0, Tag1 ("Base__Import0", 156)), 0); (("ascending", 17848), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1720), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1719), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1718), 0), 100000000, 0, -1717), 0), 100000000, 0, -1716), 0, (("src/import0.ml", 194, 7233, 7239), ("src/import0.ml", 194, 7233, 7248), 0), 0, Tag1 ("Base__Import0", 159)), 0); (("descending", 17849), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1715), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1714), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1713), 0), 100000000, 0, -1712), 0), 100000000, 0, -1711), 0, (("src/import0.ml", 195, 7283, 7289), ("src/import0.ml", 195, 7283, 7299), 0), 0, Tag1 ("Base__Import0", 162)), 0); (("compare", 17850), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1710), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1709), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1708), 0), 100000000, 0, -1707), 0), 100000000, 0, -1706), 0, (("src/import0.ml", 196, 7335, 7341), ("src/import0.ml", 196, 7335, 7348), 0), 0, Tag1 ("Base__Import0", 165)), 0); (("equal", 17851), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1705), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1704), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1703), 0), 100000000, 0, -1702), 0), 100000000, 0, -1701), 0, (("src/import0.ml", 197, 7381, 7387), ("src/import0.ml", 197, 7381, 7392), 0), 0, Tag1 ("Base__Import0", 168)), 0); (("max", 17852), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1700), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1699), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1699), 0), 100000000, 0, -1698), 0), 100000000, 0, -1697), 0, (("src/import0.ml", 198, 7423, 7429), ("src/import0.ml", 198, 7423, 7432), 0), 0, Tag1 ("Base__Import0", 171)), 0); (("min", 17853), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1696), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1695), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1695), 0), 100000000, 0, -1694), 0), 100000000, 0, -1693), 0, (("src/import0.ml", 199, 7474, 7480), ("src/import0.ml", 199, 7474, 7483), 0), 0, Tag1 ("Base__Import0", 174)), 0)]), 0, (("src/import0.ml", 187, 6926, 6926), ("src/import0.ml", 200, 7525, 7528), 0), Tag1 ("Base__Import0", 177)), 0, 0); Tag3 (("Char_replace_polymorphic_compare", 17498), 0, (Tag1 ([(("<", 17854), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1808), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1807), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1806), 0), 100000000, 0, -1805), 0), 100000000, 0, -1804), 0, (("src/import0.ml", 203, 7579, 7585), ("src/import0.ml", 203, 7579, 7590), 0), 0, Tag1 ("Base__Import0", 178)), 0); (("<=", 17855), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1803), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1802), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1801), 0), 100000000, 0, -1800), 0), 100000000, 0, -1799), 0, (("src/import0.ml", 204, 7621, 7627), ("src/import0.ml", 204, 7621, 7633), 0), 0, Tag1 ("Base__Import0", 181)), 0); (("<>", 17856), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1798), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1797), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1796), 0), 100000000, 0, -1795), 0), 100000000, 0, -1794), 0, (("src/import0.ml", 205, 7665, 7671), ("src/import0.ml", 205, 7665, 7677), 0), 0, Tag1 ("Base__Import0", 184)), 0); (("=", 17857), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1793), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1792), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1791), 0), 100000000, 0, -1790), 0), 100000000, 0, -1789), 0, (("src/import0.ml", 206, 7709, 7715), ("src/import0.ml", 206, 7709, 7720), 0), 0, Tag1 ("Base__Import0", 187)), 0); ((">", 17858), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1788), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1787), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1786), 0), 100000000, 0, -1785), 0), 100000000, 0, -1784), 0, (("src/import0.ml", 207, 7751, 7757), ("src/import0.ml", 207, 7751, 7762), 0), 0, Tag1 ("Base__Import0", 190)), 0); ((">=", 17859), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1783), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1782), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1781), 0), 100000000, 0, -1780), 0), 100000000, 0, -1779), 0, (("src/import0.ml", 208, 7793, 7799), ("src/import0.ml", 208, 7793, 7805), 0), 0, Tag1 ("Base__Import0", 193)), 0); (("ascending", 17860), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1778), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1777), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1776), 0), 100000000, 0, -1775), 0), 100000000, 0, -1774), 0, (("src/import0.ml", 209, 7837, 7843), ("src/import0.ml", 209, 7837, 7852), 0), 0, Tag1 ("Base__Import0", 196)), 0); (("descending", 17861), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1773), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1772), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1771), 0), 100000000, 0, -1770), 0), 100000000, 0, -1769), 0, (("src/import0.ml", 210, 7887, 7893), ("src/import0.ml", 210, 7887, 7903), 0), 0, Tag1 ("Base__Import0", 199)), 0); (("compare", 17862), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1768), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1767), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1766), 0), 100000000, 0, -1765), 0), 100000000, 0, -1764), 0, (("src/import0.ml", 211, 7939, 7945), ("src/import0.ml", 211, 7939, 7952), 0), 0, Tag1 ("Base__Import0", 202)), 0); (("equal", 17863), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1763), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1762), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1761), 0), 100000000, 0, -1760), 0), 100000000, 0, -1759), 0, (("src/import0.ml", 212, 7985, 7991), ("src/import0.ml", 212, 7985, 7996), 0), 0, Tag1 ("Base__Import0", 205)), 0); (("max", 17864), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1758), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1757), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1757), 0), 100000000, 0, -1756), 0), 100000000, 0, -1755), 0, (("src/import0.ml", 213, 8027, 8033), ("src/import0.ml", 213, 8027, 8036), 0), 0, Tag1 ("Base__Import0", 208)), 0); (("min", 17865), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1754), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1753), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1753), 0), 100000000, 0, -1752), 0), 100000000, 0, -1751), 0, (("src/import0.ml", 214, 8078, 8084), ("src/import0.ml", 214, 8078, 8087), 0), 0, Tag1 ("Base__Import0", 211)), 0)]), 0, (("src/import0.ml", 202, 7530, 7530), ("src/import0.ml", 215, 8129, 8132), 0), Tag1 ("Base__Import0", 214)), 0, 0); Tag3 (("Uchar_replace_polymorphic_compare", 17499), 0, (Tag1 ([(("i", 17866), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1869), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1868), 0), 100000000, 0, -1867), 0, (("src/import0.ml", 218, 8184, 8190), ("src/import0.ml", 218, 8184, 8191), 0), 0, Tag1 ("Base__Import0", 215)), 0); (("<", 17867), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1866), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1865), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1864), 0), 100000000, 0, -1863), 0), 100000000, 0, -1862), 0, (("src/import0.ml", 219, 8218, 8224), ("src/import0.ml", 219, 8218, 8229), 0), 0, Tag1 ("Base__Import0", 217)), 0); (("<=", 17868), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1861), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1860), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1859), 0), 100000000, 0, -1858), 0), 100000000, 0, -1857), 0, (("src/import0.ml", 220, 8305, 8311), ("src/import0.ml", 220, 8305, 8317), 0), 0, Tag1 ("Base__Import0", 220)), 0); (("<>", 17869), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1856), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1855), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1854), 0), 100000000, 0, -1853), 0), 100000000, 0, -1852), 0, (("src/import0.ml", 221, 8394, 8400), ("src/import0.ml", 221, 8394, 8406), 0), 0, Tag1 ("Base__Import0", 223)), 0); (("=", 17870), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1851), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1850), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1849), 0), 100000000, 0, -1848), 0), 100000000, 0, -1847), 0, (("src/import0.ml", 222, 8483, 8489), ("src/import0.ml", 222, 8483, 8494), 0), 0, Tag1 ("Base__Import0", 226)), 0); ((">", 17871), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1846), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1845), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1844), 0), 100000000, 0, -1843), 0), 100000000, 0, -1842), 0, (("src/import0.ml", 223, 8570, 8576), ("src/import0.ml", 223, 8570, 8581), 0), 0, Tag1 ("Base__Import0", 229)), 0); ((">=", 17872), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1841), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1840), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1839), 0), 100000000, 0, -1838), 0), 100000000, 0, -1837), 0, (("src/import0.ml", 224, 8657, 8663), ("src/import0.ml", 224, 8657, 8669), 0), 0, Tag1 ("Base__Import0", 232)), 0); (("ascending", 17873), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1836), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1835), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1834), 0), 100000000, 0, -1833), 0), 100000000, 0, -1832), 0, (("src/import0.ml", 226, 8747, 8753), ("src/import0.ml", 226, 8747, 8762), 0), 0, Tag1 ("Base__Import0", 235)), 0); (("descending", 17874), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1831), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1830), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1829), 0), 100000000, 0, -1828), 0), 100000000, 0, -1827), 0, (("src/import0.ml", 230, 8852, 8858), ("src/import0.ml", 230, 8852, 8868), 0), 0, Tag1 ("Base__Import0", 238)), 0); (("compare", 17875), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1826), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1825), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1824), 0), 100000000, 0, -1823), 0), 100000000, 0, -1822), 0, (("src/import0.ml", 234, 8959, 8965), ("src/import0.ml", 234, 8959, 8972), 0), 0, Tag1 ("Base__Import0", 241)), 0); (("equal", 17876), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1821), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1820), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1819), 0), 100000000, 0, -1818), 0), 100000000, 0, -1817), 0, (("src/import0.ml", 235, 9050, 9056), ("src/import0.ml", 235, 9050, 9061), 0), 0, Tag1 ("Base__Import0", 244)), 0); (("max", 17877), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1816), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1815), (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1815), 0), 100000000, 0, -1814), 0), 100000000, 0, -1813), 0, (("src/import0.ml", 236, 9137, 9143), ("src/import0.ml", 236, 9137, 9146), 0), 0, Tag1 ("Base__Import0", 247)), 0); (("min", 17878), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1812), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1811), (Tag3 (Tag1 (Tag1 ((("Stdlib", 17463)), "Uchar"), "t"), 0, (0)), 100000000, 0, -1811), 0), 100000000, 0, -1810), 0), 100000000, 0, -1809), 0, (("src/import0.ml", 237, 9198, 9204), ("src/import0.ml", 237, 9198, 9207), 0), 0, Tag1 ("Base__Import0", 250)), 0)]), 0, (("src/import0.ml", 217, 8134, 8134), ("src/import0.ml", 238, 9259, 9262), 0), Tag1 ("Base__Import0", 253)), 0, 0); Tag3 (("Float_replace_polymorphic_compare", 17500), 0, (Tag1 ([(("<", 17879), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1927), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1926), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1925), 0), 100000000, 0, -1924), 0), 100000000, 0, -1923), 0, (("src/import0.ml", 241, 9314, 9320), ("src/import0.ml", 241, 9314, 9325), 0), 0, Tag1 ("Base__Import0", 254)), 0); (("<=", 17880), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1922), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1921), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1920), 0), 100000000, 0, -1919), 0), 100000000, 0, -1918), 0, (("src/import0.ml", 242, 9357, 9363), ("src/import0.ml", 242, 9357, 9369), 0), 0, Tag1 ("Base__Import0", 257)), 0); (("<>", 17881), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1917), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1916), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1915), 0), 100000000, 0, -1914), 0), 100000000, 0, -1913), 0, (("src/import0.ml", 243, 9402, 9408), ("src/import0.ml", 243, 9402, 9414), 0), 0, Tag1 ("Base__Import0", 260)), 0); (("=", 17882), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1912), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1911), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1910), 0), 100000000, 0, -1909), 0), 100000000, 0, -1908), 0, (("src/import0.ml", 244, 9447, 9453), ("src/import0.ml", 244, 9447, 9458), 0), 0, Tag1 ("Base__Import0", 263)), 0); ((">", 17883), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1907), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1906), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1905), 0), 100000000, 0, -1904), 0), 100000000, 0, -1903), 0, (("src/import0.ml", 245, 9490, 9496), ("src/import0.ml", 245, 9490, 9501), 0), 0, Tag1 ("Base__Import0", 266)), 0); ((">=", 17884), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1902), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1901), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1900), 0), 100000000, 0, -1899), 0), 100000000, 0, -1898), 0, (("src/import0.ml", 246, 9533, 9539), ("src/import0.ml", 246, 9533, 9545), 0), 0, Tag1 ("Base__Import0", 269)), 0); (("ascending", 17885), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1897), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1896), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1895), 0), 100000000, 0, -1894), 0), 100000000, 0, -1893), 0, (("src/import0.ml", 247, 9578, 9584), ("src/import0.ml", 247, 9578, 9593), 0), 0, Tag1 ("Base__Import0", 272)), 0); (("descending", 17886), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1892), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1891), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1890), 0), 100000000, 0, -1889), 0), 100000000, 0, -1888), 0, (("src/import0.ml", 248, 9629, 9635), ("src/import0.ml", 248, 9629, 9645), 0), 0, Tag1 ("Base__Import0", 275)), 0); (("compare", 17887), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1887), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1886), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1885), 0), 100000000, 0, -1884), 0), 100000000, 0, -1883), 0, (("src/import0.ml", 249, 9682, 9688), ("src/import0.ml", 249, 9682, 9695), 0), 0, Tag1 ("Base__Import0", 278)), 0); (("equal", 17888), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1882), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1881), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1880), 0), 100000000, 0, -1879), 0), 100000000, 0, -1878), 0, (("src/import0.ml", 250, 9729, 9735), ("src/import0.ml", 250, 9729, 9740), 0), 0, Tag1 ("Base__Import0", 281)), 0); (("max", 17889), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1877), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1876), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1876), 0), 100000000, 0, -1875), 0), 100000000, 0, -1874), 0, (("src/import0.ml", 251, 9772, 9778), ("src/import0.ml", 251, 9772, 9781), 0), 0, Tag1 ("Base__Import0", 284)), 0); (("min", 17890), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1873), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1872), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1872), 0), 100000000, 0, -1871), 0), 100000000, 0, -1870), 0, (("src/import0.ml", 252, 9824, 9830), ("src/import0.ml", 252, 9824, 9833), 0), 0, Tag1 ("Base__Import0", 287)), 0)]), 0, (("src/import0.ml", 240, 9264, 9264), ("src/import0.ml", 253, 9876, 9879), 0), Tag1 ("Base__Import0", 290)), 0, 0); Tag3 (("String_replace_polymorphic_compare", 17501), 0, (Tag1 ([(("<", 17891), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1985), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1984), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1983), 0), 100000000, 0, -1982), 0), 100000000, 0, -1981), 0, (("src/import0.ml", 256, 9932, 9938), ("src/import0.ml", 256, 9932, 9943), 0), 0, Tag1 ("Base__Import0", 291)), 0); (("<=", 17892), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1980), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1979), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1978), 0), 100000000, 0, -1977), 0), 100000000, 0, -1976), 0, (("src/import0.ml", 257, 9976, 9982), ("src/import0.ml", 257, 9976, 9988), 0), 0, Tag1 ("Base__Import0", 294)), 0); (("<>", 17893), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1975), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1974), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1973), 0), 100000000, 0, -1972), 0), 100000000, 0, -1971), 0, (("src/import0.ml", 258, 10022, 10028), ("src/import0.ml", 258, 10022, 10034), 0), 0, Tag1 ("Base__Import0", 297)), 0); (("=", 17894), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1970), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1969), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1968), 0), 100000000, 0, -1967), 0), 100000000, 0, -1966), 0, (("src/import0.ml", 259, 10068, 10074), ("src/import0.ml", 259, 10068, 10079), 0), 0, Tag1 ("Base__Import0", 300)), 0); ((">", 17895), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1965), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1964), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1963), 0), 100000000, 0, -1962), 0), 100000000, 0, -1961), 0, (("src/import0.ml", 260, 10112, 10118), ("src/import0.ml", 260, 10112, 10123), 0), 0, Tag1 ("Base__Import0", 303)), 0); ((">=", 17896), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1960), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1959), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1958), 0), 100000000, 0, -1957), 0), 100000000, 0, -1956), 0, (("src/import0.ml", 261, 10156, 10162), ("src/import0.ml", 261, 10156, 10168), 0), 0, Tag1 ("Base__Import0", 306)), 0); (("ascending", 17897), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1955), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1954), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1953), 0), 100000000, 0, -1952), 0), 100000000, 0, -1951), 0, (("src/import0.ml", 262, 10202, 10208), ("src/import0.ml", 262, 10202, 10217), 0), 0, Tag1 ("Base__Import0", 309)), 0); (("descending", 17898), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1950), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1949), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1948), 0), 100000000, 0, -1947), 0), 100000000, 0, -1946), 0, (("src/import0.ml", 263, 10254, 10260), ("src/import0.ml", 263, 10254, 10270), 0), 0, Tag1 ("Base__Import0", 312)), 0); (("compare", 17899), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1945), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1944), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1943), 0), 100000000, 0, -1942), 0), 100000000, 0, -1941), 0, (("src/import0.ml", 264, 10308, 10314), ("src/import0.ml", 264, 10308, 10321), 0), 0, Tag1 ("Base__Import0", 315)), 0); (("equal", 17900), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1940), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1939), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1938), 0), 100000000, 0, -1937), 0), 100000000, 0, -1936), 0, (("src/import0.ml", 265, 10356, 10362), ("src/import0.ml", 265, 10356, 10367), 0), 0, Tag1 ("Base__Import0", 318)), 0); (("max", 17901), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1935), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1934), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1934), 0), 100000000, 0, -1933), 0), 100000000, 0, -1932), 0, (("src/import0.ml", 266, 10400, 10406), ("src/import0.ml", 266, 10400, 10409), 0), 0, Tag1 ("Base__Import0", 321)), 0); (("min", 17902), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1931), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1930), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1930), 0), 100000000, 0, -1929), 0), 100000000, 0, -1928), 0, (("src/import0.ml", 267, 10453, 10459), ("src/import0.ml", 267, 10453, 10462), 0), 0, Tag1 ("Base__Import0", 324)), 0)]), 0, (("src/import0.ml", 255, 9881, 9881), ("src/import0.ml", 268, 10506, 10509), 0), Tag1 ("Base__Import0", 327)), 0, 0); Tag3 (("Bytes_replace_polymorphic_compare", 17502), 0, (Tag1 ([(("<", 17903), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -2043), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -2042), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2041), 0), 100000000, 0, -2040), 0), 100000000, 0, -2039), 0, (("src/import0.ml", 271, 10561, 10567), ("src/import0.ml", 271, 10561, 10572), 0), 0, Tag1 ("Base__Import0", 328)), 0); (("<=", 17904), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -2038), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -2037), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2036), 0), 100000000, 0, -2035), 0), 100000000, 0, -2034), 0, (("src/import0.ml", 272, 10604, 10610), ("src/import0.ml", 272, 10604, 10616), 0), 0, Tag1 ("Base__Import0", 331)), 0); (("<>", 17905), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -2033), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -2032), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2031), 0), 100000000, 0, -2030), 0), 100000000, 0, -2029), 0, (("src/import0.ml", 273, 10649, 10655), ("src/import0.ml", 273, 10649, 10661), 0), 0, Tag1 ("Base__Import0", 334)), 0); (("=", 17906), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -2028), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -2027), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2026), 0), 100000000, 0, -2025), 0), 100000000, 0, -2024), 0, (("src/import0.ml", 274, 10694, 10700), ("src/import0.ml", 274, 10694, 10705), 0), 0, Tag1 ("Base__Import0", 337)), 0); ((">", 17907), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -2023), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -2022), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2021), 0), 100000000, 0, -2020), 0), 100000000, 0, -2019), 0, (("src/import0.ml", 275, 10737, 10743), ("src/import0.ml", 275, 10737, 10748), 0), 0, Tag1 ("Base__Import0", 340)), 0); ((">=", 17908), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -2018), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -2017), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2016), 0), 100000000, 0, -2015), 0), 100000000, 0, -2014), 0, (("src/import0.ml", 276, 10780, 10786), ("src/import0.ml", 276, 10780, 10792), 0), 0, Tag1 ("Base__Import0", 343)), 0); (("ascending", 17909), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -2013), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -2012), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2011), 0), 100000000, 0, -2010), 0), 100000000, 0, -2009), 0, (("src/import0.ml", 277, 10825, 10831), ("src/import0.ml", 277, 10825, 10840), 0), 0, Tag1 ("Base__Import0", 346)), 0); (("descending", 17910), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -2008), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -2007), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2006), 0), 100000000, 0, -2005), 0), 100000000, 0, -2004), 0, (("src/import0.ml", 278, 10876, 10882), ("src/import0.ml", 278, 10876, 10892), 0), 0, Tag1 ("Base__Import0", 349)), 0); (("compare", 17911), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -2003), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -2002), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2001), 0), 100000000, 0, -2000), 0), 100000000, 0, -1999), 0, (("src/import0.ml", 279, 10929, 10935), ("src/import0.ml", 279, 10929, 10942), 0), 0, Tag1 ("Base__Import0", 352)), 0); (("equal", 17912), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -1998), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -1997), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1996), 0), 100000000, 0, -1995), 0), 100000000, 0, -1994), 0, (("src/import0.ml", 280, 10976, 10982), ("src/import0.ml", 280, 10976, 10987), 0), 0, Tag1 ("Base__Import0", 355)), 0); (("max", 17913), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -1993), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -1992), (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -1992), 0), 100000000, 0, -1991), 0), 100000000, 0, -1990), 0, (("src/import0.ml", 281, 11019, 11025), ("src/import0.ml", 281, 11019, 11028), 0), 0, Tag1 ("Base__Import0", 358)), 0); (("min", 17914), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -1989), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -1988), (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -1988), 0), 100000000, 0, -1987), 0), 100000000, 0, -1986), 0, (("src/import0.ml", 282, 11071, 11077), ("src/import0.ml", 282, 11071, 11080), 0), 0, Tag1 ("Base__Import0", 361)), 0)]), 0, (("src/import0.ml", 270, 10511, 10511), ("src/import0.ml", 283, 11123, 11126), 0), Tag1 ("Base__Import0", 364)), 0, 0); ((":=", 17503), ((Tag1 (0, (Tag3 ((("ref", 17462)), [((("a")), 100000000, 0, -102)], (0)), 100000000, 0, -103), (Tag1 (0, ((("a")), 100000000, 0, -102), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -101), 0), 100000000, 0, -100), 0), 100000000, 0, -99), (("%setfield0", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 287, 11247, 11247), ("src/import0.ml", 287, 11247, 11314), 0), 0, Tag1 ("Base__Import0", 365)), 0); (("!", 17504), ((Tag1 (0, (Tag3 ((("ref", 17462)), [((("a")), 100000000, 0, -97)], (0)), 100000000, 0, -98), ((("a")), 100000000, 0, -97), 0), 100000000, 0, -96), (("%field0", 1, 1, "", [0], 0)), (("src/import0.ml", 291, 11411, 11411), ("src/import0.ml", 291, 11411, 11466), 0), 0, Tag1 ("Base__Import0", 366)), 0); (("ref", 17505), ((Tag1 (0, ((("a")), 100000000, 0, -95), (Tag3 ((("ref", 17462)), [((("a")), 100000000, 0, -95)], (0)), 100000000, 0, -94), 0), 100000000, 0, -93), (("%makemutable", 1, 1, "", [0], 0)), (("src/import0.ml", 292, 11467, 11467), ("src/import0.ml", 292, 11467, 11525), 0), 0, Tag1 ("Base__Import0", 367)), 0); (("@", 17506), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((0), 100000000, 0, -90)], (0)), 100000000, 0, -92), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((0), 100000000, 0, -90)], (0)), 100000000, 0, -91), (Tag3 ((Tag3 ("list", 9)), [((0), 100000000, 0, -90)], (0)), 100000000, 0, -89), 0), 100000000, 0, -88), 0), 100000000, 0, -87), 0, (("src/import0.ml", 294, 11527, 11531), ("src/import0.ml", 294, 11527, 11536), 0), 0, Tag1 ("Base__Import0", 368)), 0); (("^", 17507), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -86), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -85), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -84), 0), 100000000, 0, -83), 0), 100000000, 0, -82), 0, (("src/import0.ml", 295, 11552, 11556), ("src/import0.ml", 295, 11552, 11561), 0), 0, Tag1 ("Base__Import0", 369)), 0); (("~-", 17508), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -81), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -80), 0), 100000000, 0, -79), 0, (("src/import0.ml", 296, 11577, 11581), ("src/import0.ml", 296, 11577, 11587), 0), 0, Tag1 ("Base__Import0", 370)), 0); (("~-.", 17509), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -78), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0, (("src/import0.ml", 297, 11604, 11608), ("src/import0.ml", 297, 11604, 11615), 0), 0, Tag1 ("Base__Import0", 371)), 0); (("asr", 17510), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -75), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -74), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -73), 0), 100000000, 0, -72), 0), 100000000, 0, -71), 0, (("src/import0.ml", 298, 11633, 11637), ("src/import0.ml", 298, 11633, 11644), 0), 0, Tag1 ("Base__Import0", 372)), 0); (("land", 17511), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -70), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -69), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -68), 0), 100000000, 0, -67), 0), 100000000, 0, -66), 0, (("src/import0.ml", 299, 11662, 11666), ("src/import0.ml", 299, 11662, 11674), 0), 0, Tag1 ("Base__Import0", 373)), 0); (("lnot", 17512), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -65), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -64), 0), 100000000, 0, -63), 0, (("src/import0.ml", 300, 11693, 11697), ("src/import0.ml", 300, 11693, 11701), 0), 0, Tag1 ("Base__Import0", 374)), 0); (("lor", 17513), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -62), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -61), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -60), 0), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("src/import0.ml", 301, 11716, 11720), ("src/import0.ml", 301, 11716, 11727), 0), 0, Tag1 ("Base__Import0", 375)), 0); (("lsl", 17514), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -57), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -56), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("src/import0.ml", 302, 11745, 11749), ("src/import0.ml", 302, 11745, 11756), 0), 0, Tag1 ("Base__Import0", 376)), 0); (("lsr", 17515), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -52), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -51), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("src/import0.ml", 303, 11774, 11778), ("src/import0.ml", 303, 11774, 11785), 0), 0, Tag1 ("Base__Import0", 377)), 0); (("lxor", 17516), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -47), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -46), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("src/import0.ml", 304, 11803, 11807), ("src/import0.ml", 304, 11803, 11815), 0), 0, Tag1 ("Base__Import0", 378)), 0); (("mod", 17517), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -42), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -41), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("src/import0.ml", 305, 11834, 11838), ("src/import0.ml", 305, 11834, 11845), 0), 0, Tag1 ("Base__Import0", 379)), 0); (("abs", 17518), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -37), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("src/import0.ml", 306, 11863, 11867), ("src/import0.ml", 306, 11863, 11870), 0), 0, Tag1 ("Base__Import0", 380)), 0); (("failwith", 17519), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -34), ((0), 100000000, 0, -33), 0), 100000000, 0, -32), 0, (("src/import0.ml", 307, 11884, 11888), ("src/import0.ml", 307, 11884, 11896), 0), 0, Tag1 ("Base__Import0", 381)), 0); (("fst", 17520), ((Tag1 (0, (Tag2 ([((0), 100000000, 0, -29); ((0), 100000000, 0, -31)]), 100000000, 0, -30), ((0), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("src/import0.ml", 308, 11915, 11919), ("src/import0.ml", 308, 11915, 11922), 0), 0, Tag1 ("Base__Import0", 382)), 0); (("invalid_arg", 17521), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -27), ((0), 100000000, 0, -26), 0), 100000000, 0, -25), 0, (("src/import0.ml", 309, 11936, 11940), ("src/import0.ml", 309, 11936, 11951), 0), 0, Tag1 ("Base__Import0", 383)), 0); (("snd", 17522), ((Tag1 (0, (Tag2 ([((0), 100000000, 0, -24); ((0), 100000000, 0, -22)]), 100000000, 0, -23), ((0), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("src/import0.ml", 310, 11973, 11977), ("src/import0.ml", 310, 11973, 11980), 0), 0, Tag1 ("Base__Import0", 384)), 0); (("raise", 17523), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -20), ((0), 100000000, 0, -19), 0), 100000000, 0, -18), (("%raise", 1, 1, "", [0], 0)), (("src/import0.ml", 314, 12127, 12127), ("src/import0.ml", 314, 12127, 12163), 0), 0, Tag1 ("Base__Import0", 385)), 0); (("phys_equal", 17524), ((Tag1 (0, ((0), 100000000, 0, -17), (Tag1 (0, ((0), 100000000, 0, -17), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("src/import0.ml", 316, 12165, 12169), ("src/import0.ml", 316, 12165, 12179), 0), 0, Tag1 ("Base__Import0", 386)), 0); (("decr", 17525), ((Tag1 (0, (Tag3 ((("ref", 17462)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -13)], (0)), 100000000, 0, -12), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), (("%decr", 1, 1, "", [0], 0)), (("src/import0.ml", 318, 12197, 12197), ("src/import0.ml", 318, 12197, 12252), 0), 0, Tag1 ("Base__Import0", 387)), 0); (("incr", 17526), ((Tag1 (0, (Tag3 ((("ref", 17462)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -9)], (0)), 100000000, 0, -8), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -7), 0), 100000000, 0, -6), (("%incr", 1, 1, "", [0], 0)), (("src/import0.ml", 319, 12253, 12253), ("src/import0.ml", 319, 12253, 12308), 0), 0, Tag1 ("Base__Import0", 388)), 0); (("float_of_string", 17527), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0, (("src/import0.ml", 322, 12374, 12378), ("src/import0.ml", 322, 12374, 12393), 0), 0, Tag1 ("Base__Import0", 389)), 0); (("am_testing", 17528), ((Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2), 0, (("src/import0.ml", 330, 12801, 12805), ("src/import0.ml", 330, 12801, 12815), 0), 0, Tag1 ("Base__Import0", 391)), 0)], "Base__Import0", [("Base__Import0", ("\156\129U\197Y[\\\153\017Ho\203\173\204\220\020")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__MoreLabels", ("\248\232\248\254`<\230\241\161U\193U\1466J\238")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shadow_stdlib", ("\219zi\164\203\158e)\232\221\196\168\138x\142\018")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Base__Poly0", ("\230;\143\234\255.H\132KOe7\155\\\023f")); ("Base__Bool0", ("\177f\254p\023\143&\239\020\136\206\242~\018F\251")); ("Base__", ("p\252\007\139\128\163W\025+\0225\001\246|P\158"))], [(0)])

val am_testing : bool
