type ('a, 'e) t = ('a, 'e) result = Ok of 'a | Error of 'e
val ok : 'a -> ('a, 'e) result
val error : 'e -> ('a, 'e) result
val value : ('a, 'e) result -> default:'a -> 'a
val get_ok : ('a, 'e) result -> 'a
val get_error : ('a, 'e) result -> 'e
val bind : ('a, 'e) result -> ('a -> ('b, 'e) result) -> ('b, 'e) result
val join : (('a, 'e) result, 'e) result -> ('a, 'e) result
val map : ('a -> 'b) -> ('a, 'e) result -> ('b, 'e) result
val map_error : ('e -> 'f) -> ('a, 'e) result -> ('a, 'f) result
val fold : ok:('a -> 'c) -> error:('e -> 'c) -> ('a, 'e) result -> 'c
val iter : ('a -> unit) -> ('a, 'e) result -> unit
val iter_error : ('e -> unit) -> ('a, 'e) result -> unit
val is_ok : ('a, 'e) result -> bool
val is_error : ('a, 'e) result -> bool
val equal :
  ok:('a -> 'a -> bool) ->
  error:('e -> 'e -> bool) -> ('a, 'e) result -> ('a, 'e) result -> bool
val compare :
  ok:('a -> 'a -> int) ->
  error:('e -> 'e -> int) -> ('a, 'e) result -> ('a, 'e) result -> int
val to_option : ('a, 'e) result -> 'a option
val to_list : ('a, 'e) result -> 'a list
val to_seq : ('a, 'e) result -> 'a Seq.t
("DEBUG:rule", [Tag1 (("t", 434), ([((("a")), 100000000, 0, -138); ((("e")), 100000000, 0, -139)], 2, Tag1 ([(("Ok", 270), ([((("a")), 100000000, 0, -138)]), 0, (("result.mli", 25, 1279, 1315), ("result.mli", 25, 1279, 1323), 0), 0, Tag1 ("Stdlib__Result", 1)); (("Error", 271), ([((("e")), 100000000, 0, -139)]), 0, (("result.mli", 25, 1279, 1324), ("result.mli", 25, 1279, 1337), 0), 0, Tag1 ("Stdlib__Result", 2))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -138); ((("e")), 100000000, 0, -139)], (0)), 100000000, 0, -137)), [25; 25], [0; 0], 0, 0, (("result.mli", 25, 1279, 1279), ("result.mli", 25, 1279, 1337), 0), 0, 0, 0, Tag1 ("Stdlib__Result", 0)), 1, 0); (("ok", 435), ((Tag1 (0, ((("a")), 100000000, 0, -135), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -135); ((("e")), 100000000, 0, -136)], (0)), 100000000, 0, -134), 0), 100000000, 0, -133), 0, (("result.mli", 28, 1424, 1424), ("result.mli", 28, 1424, 1454), 0), 0, Tag1 ("Stdlib__Result", 3)), 0); (("error", 436), ((Tag1 (0, ((("e")), 100000000, 0, -132), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -131); ((("e")), 100000000, 0, -132)], (0)), 100000000, 0, -130), 0), 100000000, 0, -129), 0, (("result.mli", 31, 1481, 1481), ("result.mli", 31, 1481, 1514), 0), 0, Tag1 ("Stdlib__Result", 4)), 0); (("value", 437), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -126); ((("e")), 100000000, 0, -128)], (0)), 100000000, 0, -127), (Tag1 (("default"), ((("a")), 100000000, 0, -126), ((("a")), 100000000, 0, -126), 0), 100000000, 0, -125), 0), 100000000, 0, -124), 0, (("result.mli", 34, 1547, 1547), ("result.mli", 34, 1547, 1594), 0), 0, Tag1 ("Stdlib__Result", 5)), 0); (("get_ok", 438), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -121); ((("e")), 100000000, 0, -123)], (0)), 100000000, 0, -122), ((("a")), 100000000, 0, -121), 0), 100000000, 0, -120), 0, (("result.mli", 37, 1671, 1671), ("result.mli", 37, 1671, 1705), 0), 0, Tag1 ("Stdlib__Result", 6)), 0); (("get_error", 439), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -119); ((("e")), 100000000, 0, -117)], (0)), 100000000, 0, -118), ((("e")), 100000000, 0, -117), 0), 100000000, 0, -116), 0, (("result.mli", 42, 1820, 1820), ("result.mli", 42, 1820, 1857), 0), 0, Tag1 ("Stdlib__Result", 7)), 0); (("bind", 440), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -114); ((("e")), 100000000, 0, -111)], (0)), 100000000, 0, -115), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -114), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("b")), 100000000, 0, -110); ((("e")), 100000000, 0, -111)], (0)), 100000000, 0, -113), 0), 100000000, 0, -112), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("b")), 100000000, 0, -110); ((("e")), 100000000, 0, -111)], (0)), 100000000, 0, -109), 0), 100000000, 0, -108), 0), 100000000, 0, -107), 0, (("result.mli", 47, 1975, 1975), ("result.mli", 47, 1975, 2047), 0), 0, Tag1 ("Stdlib__Result", 8)), 0); (("join", 441), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -103); ((("e")), 100000000, 0, -104)], (0)), 100000000, 0, -106); ((("e")), 100000000, 0, -104)], (0)), 100000000, 0, -105), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -103); ((("e")), 100000000, 0, -104)], (0)), 100000000, 0, -102), 0), 100000000, 0, -101), 0, (("result.mli", 50, 2122, 2122), ("result.mli", 50, 2122, 2180), 0), 0, Tag1 ("Stdlib__Result", 9)), 0); (("map", 442), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -99), ((("b")), 100000000, 0, -96), 0), 100000000, 0, -100), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -99); ((("e")), 100000000, 0, -97)], (0)), 100000000, 0, -98), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("b")), 100000000, 0, -96); ((("e")), 100000000, 0, -97)], (0)), 100000000, 0, -95), 0), 100000000, 0, -94), 0), 100000000, 0, -93), 0, (("result.mli", 53, 2255, 2255), ("result.mli", 53, 2255, 2313), 0), 0, Tag1 ("Stdlib__Result", 10)), 0); (("map_error", 443), ((Tag1 (0, (Tag1 (0, ((("e")), 100000000, 0, -91), ((("f")), 100000000, 0, -89), 0), 100000000, 0, -92), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -88); ((("e")), 100000000, 0, -91)], (0)), 100000000, 0, -90), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -88); ((("f")), 100000000, 0, -89)], (0)), 100000000, 0, -87), 0), 100000000, 0, -86), 0), 100000000, 0, -85), 0, (("result.mli", 56, 2392, 2392), ("result.mli", 56, 2392, 2456), 0), 0, Tag1 ("Stdlib__Result", 11)), 0); (("fold", 444), ((Tag1 (("ok"), (Tag1 (0, ((("a")), 100000000, 0, -81), ((("c")), 100000000, 0, -79), 0), 100000000, 0, -84), (Tag1 (("error"), (Tag1 (0, ((("e")), 100000000, 0, -82), ((("c")), 100000000, 0, -79), 0), 100000000, 0, -83), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -81); ((("e")), 100000000, 0, -82)], (0)), 100000000, 0, -80), ((("c")), 100000000, 0, -79), 0), 100000000, 0, -78), 0), 100000000, 0, -77), 0), 100000000, 0, -76), 0, (("result.mli", 60, 2548, 2548), ("result.mli", 60, 2548, 2617), 0), 0, Tag1 ("Stdlib__Result", 12)), 0); (("iter", 445), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -72), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -72); ((("e")), 100000000, 0, -73)], (0)), 100000000, 0, -71), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("result.mli", 64, 2712, 2712), ("result.mli", 64, 2712, 2762), 0), 0, Tag1 ("Stdlib__Result", 13)), 0); (("iter_error", 446), ((Tag1 (0, (Tag1 (0, ((("e")), 100000000, 0, -65), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -67), 0), 100000000, 0, -66), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -64); ((("e")), 100000000, 0, -65)], (0)), 100000000, 0, -63), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("result.mli", 67, 2828, 2828), ("result.mli", 67, 2828, 2884), 0), 0, Tag1 ("Stdlib__Result", 14)), 0); (("is_ok", 447), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -58); ((("e")), 100000000, 0, -59)], (0)), 100000000, 0, -57), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -56), 0), 100000000, 0, -55), 0, (("result.mli", 72, 3004, 3004), ("result.mli", 72, 3004, 3039), 0), 0, Tag1 ("Stdlib__Result", 15)), 0); (("is_error", 448), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -53); ((("e")), 100000000, 0, -54)], (0)), 100000000, 0, -52), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -51), 0), 100000000, 0, -50), 0, (("result.mli", 75, 3098, 3098), ("result.mli", 75, 3098, 3136), 0), 0, Tag1 ("Stdlib__Result", 16)), 0); (("equal", 449), ((Tag1 (("ok"), (Tag1 (0, ((("a")), 100000000, 0, -41), (Tag1 (0, ((("a")), 100000000, 0, -41), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -49), 0), 100000000, 0, -48), 0), 100000000, 0, -47), (Tag1 (("error"), (Tag1 (0, ((("e")), 100000000, 0, -42), (Tag1 (0, ((("e")), 100000000, 0, -42), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -41); ((("e")), 100000000, 0, -42)], (0)), 100000000, 0, -43), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -41); ((("e")), 100000000, 0, -42)], (0)), 100000000, 0, -40), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0), 100000000, 0, -37), 0), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("result.mli", 78, 3201, 3201), ("result.mli", 80, 3287, 3312), 0), 0, Tag1 ("Stdlib__Result", 17)), 0); (("compare", 450), ((Tag1 (("ok"), (Tag1 (0, ((("a")), 100000000, 0, -26), (Tag1 (0, ((("a")), 100000000, 0, -26), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -34), 0), 100000000, 0, -33), 0), 100000000, 0, -32), (Tag1 (("error"), (Tag1 (0, ((("e")), 100000000, 0, -27), (Tag1 (0, ((("e")), 100000000, 0, -27), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -26); ((("e")), 100000000, 0, -27)], (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -26); ((("e")), 100000000, 0, -27)], (0)), 100000000, 0, -25), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("result.mli", 85, 3473, 3473), ("result.mli", 87, 3559, 3583), 0), 0, Tag1 ("Stdlib__Result", 18)), 0); (("to_option", 451), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -17); ((("e")), 100000000, 0, -19)], (0)), 100000000, 0, -18), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -17)], (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("result.mli", 94, 3824, 3824), ("result.mli", 94, 3824, 3868), 0), 0, Tag1 ("Stdlib__Result", 19)), 0); (("to_list", 452), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -12); ((("e")), 100000000, 0, -14)], (0)), 100000000, 0, -13), (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -12)], (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("result.mli", 98, 3968, 3968), ("result.mli", 98, 3968, 4008), 0), 0, Tag1 ("Stdlib__Result", 20)), 0); (("to_seq", 453), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -7); ((("e")), 100000000, 0, -9)], (0)), 100000000, 0, -8), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [((("a")), 100000000, 0, -7)], (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("result.mli", 101, 4075, 4075), ("result.mli", 101, 4075, 4115), 0), 0, Tag1 ("Stdlib__Result", 21)), 0); Tag1 (("result", 454), ([((("a")), 100000000, 0, -3); ((("b")), 100000000, 0, -4)], 2, Tag1 ([(("Ok", 310), ([((("a")), 100000000, 0, -3)]), 0, (("result-as-alias-4.08.ml", 2, 52, 102), ("result-as-alias-4.08.ml", 2, 52, 110), 0), 0, Tag1 ("Result", 1)); (("Error", 311), ([((("b")), 100000000, 0, -4)]), 0, (("result-as-alias-4.08.ml", 2, 52, 111), ("result-as-alias-4.08.ml", 2, 52, 124), 0), 0, Tag1 ("Result", 2))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Result"), "t"), [((("a")), 100000000, 0, -3); ((("b")), 100000000, 0, -4)], (0)), 100000000, 0, -2)), [25; 25], [0; 0], 0, 0, (("result-as-alias-4.08.ml", 2, 52, 52), ("result-as-alias-4.08.ml", 2, 52, 124), 0), 0, 0, 0, Tag1 ("Result", 0)), 1, 0)], "Result", [("Result", ("\225\173Z\0275W\148\2128;1\210$;\127\130")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Result", ("\247h\157\021\029a\144\199*\186Z\162\225\241\160>")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
type ('a, 'b) result = ('a, 'b) Result.t = Ok of 'a | Error of 'b
