module Lexer :
  sig
    type t
    val of_file : string -> t
    val of_string : ?pos:Lexing.position -> ?filename:string -> string -> t
    val of_channel : in_channel -> t
  end
exception Parsing_error of Js_of_ocaml_compiler.Parse_info.t
val parse : Lexer.t -> Js_of_ocaml_compiler.Javascript.program
val parse' :
  Lexer.t ->
  ((Js_of_ocaml_compiler.Js_token.Annot.t * Js_of_ocaml_compiler.Parse_info.t)
   list * Js_of_ocaml_compiler.Javascript.program)
  list * (Js_of_ocaml_compiler.Js_token.t * Js_of_ocaml_compiler.Loc.t) list
("DEBUG:rule", [Tag3 (("Lexer", 480), 0, (Tag1 ([Tag1 (("t", 485), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("compiler/lib/parse_js.mli", 21, 886, 888), ("compiler/lib/parse_js.mli", 21, 886, 894), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Parse_js", 0)), 1, 0); (("of_file", 486), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -37), (Tag3 ((("t", 485)), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("compiler/lib/parse_js.mli", 23, 896, 898), ("compiler/lib/parse_js.mli", 23, 896, 923), 0), 0, Tag1 ("Js_of_ocaml_compiler__Parse_js", 1)), 0); (("of_string", 487), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -34)], (0)), 100000000, 0, -33), (Tag1 (Tag1 ("filename"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -32)], (0)), 100000000, 0, -31), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -30), (Tag3 ((("t", 485)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("compiler/lib/parse_js.mli", 25, 925, 927), ("compiler/lib/parse_js.mli", 25, 925, 998), 0), 0, Tag1 ("Js_of_ocaml_compiler__Parse_js", 2)), 0); (("of_channel", 488), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "in_channel"), 0, (0)), 100000000, 0, -25), (Tag3 ((("t", 485)), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("compiler/lib/parse_js.mli", 27, 1000, 1002), ("compiler/lib/parse_js.mli", 27, 1000, 1034), 0), 0, Tag1 ("Js_of_ocaml_compiler__Parse_js", 3)), 0)]), 0, (("compiler/lib/parse_js.mli", 20, 867, 867), ("compiler/lib/parse_js.mli", 28, 1035, 1038), 0), Tag1 ("Js_of_ocaml_compiler__Parse_js", 4)), 0, 0); Tag2 (("Parsing_error", 481), ((Tag3 ("exn", 7)), 0, ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Parse_info"), "t"), 0, (0)), 100000000, 0, -22)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Js_of_ocaml_compiler__Parse_js", 5)), 2, 0); (("parse", 482), ((Tag1 (0, (Tag3 (Tag1 ((("Lexer", 480)), "t"), 0, (0)), 100000000, 0, -21), (Tag3 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Javascript"), "program"), 0, (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("compiler/lib/parse_js.mli", 32, 1081, 1081), ("compiler/lib/parse_js.mli", 32, 1081, 1122), 0), 0, Tag1 ("Js_of_ocaml_compiler__Parse_js", 7)), 0); (("parse'", 483), ((Tag1 (0, (Tag3 (Tag1 ((("Lexer", 480)), "t"), 0, (0)), 100000000, 0, -18), (Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Js_token"), "Annot"), "t"), 0, (0)), 100000000, 0, -11); (Tag3 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Parse_info"), "t"), 0, (0)), 100000000, 0, -12)]), 100000000, 0, -10)], (0)), 100000000, 0, -9); (Tag3 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Javascript"), "program"), 0, (0)), 100000000, 0, -13)]), 100000000, 0, -8)], (0)), 100000000, 0, -7); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Js_token"), "t"), 0, (0)), 100000000, 0, -16); (Tag3 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Loc"), "t"), 0, (0)), 100000000, 0, -17)]), 100000000, 0, -15)], (0)), 100000000, 0, -14)]), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("compiler/lib/parse_js.mli", 34, 1124, 1124), ("compiler/lib/parse_js.mli", 37, 1222, 1254), 0), 0, Tag1 ("Js_of_ocaml_compiler__Parse_js", 10)), 0); (("parse_expr", 484), ((Tag1 (0, (Tag3 (Tag1 ((("Lexer", 480)), "t"), 0, (0)), 100000000, 0, -4), (Tag3 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Javascript"), "expression"), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("compiler/lib/parse_js.mli", 39, 1256, 1256), ("compiler/lib/parse_js.mli", 39, 1256, 1305), 0), 0, Tag1 ("Js_of_ocaml_compiler__Parse_js", 11)), 0)], "Js_of_ocaml_compiler__Parse_js", [("Js_of_ocaml_compiler__Parse_js", ("\028P\137\1533\201\211\230\136n\208\235\148\195h\229")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__StringLabels", ("\134F\024\226\216Is#\223\230\234\169Z\206Gc")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Random", ("\020\005Xq\171\026\218\152X\135\254\023\133zK\200")); ("Stdlib__Printf", ("\215<\139]\021\142\224E\245m\198qc(W\229")); ("Stdlib__Printexc", ("\217u\168\235\179oi\167\235\255\025\017%d\192s")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__ListLabels", ("*\194\012\191\020%\170\249m\002\180\178hk\205\220")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Fun", ("\234t\181\000iQ\251,\b\020$\224\233\160\142\210")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Filename", ("z\163\210n\195\247\255\129\029SI\180\152\141h ")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Char", ("\1794\1468\190\138\150g\231\240\140d\191.\212e")); ("Stdlib__BytesLabels", ("\145\128\000\239\186Z.\0310^\247\201\174\\\137R")); ("Stdlib__Bytes", ("C\134\194)\175\222\137p\205\246\244\r\241\164P\209")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__ArrayLabels", ("\029\143d\025\218v\003\007\212jC\235/\205\006\198")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Js_of_ocaml_compiler__Stdlib", ("\162;P\232\137\003\012\252\217E\227\201\001\204\163j")); ("Js_of_ocaml_compiler__Primitive", ("\131\186\144\175\240\170t#\016p\219\012\\\020\211b")); ("Js_of_ocaml_compiler__Parse_info", ("`+\018\231C(v\197\016 .\222N\n\219\229")); ("Js_of_ocaml_compiler__Loc", ("\031\135\019\214\004\134\161\1832\019J\128\174\219\168\214")); ("Js_of_ocaml_compiler__Js_token", ("x\209\213\210\201\210\166u\150\014\024\249Q\184\161\216")); ("Js_of_ocaml_compiler__Javascript", ("\155\213x*\244\2451\153\243\178\151\133\019\173^:")); ("Js_of_ocaml_compiler__Code", ("\016a\196PfGPO\142UB\129\019g#\027")); ("Js_of_ocaml_compiler", ("\140\150\022\231\129$!^\139\156\170\236r\184~q")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val parse_expr : Lexer.t -> Js_of_ocaml_compiler.Javascript.expression
