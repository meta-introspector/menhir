type 'a t
val no_deps : 'a -> 'a t
val deps : 'a t -> Deps.t
val value : 'a t -> 'a
val unpack : 'a t -> Deps.t * 'a
val bind : 'a t -> ('a -> 'b t) -> 'b t
val map : 'a t -> ('a -> 'b) -> 'b t
val comm : ('a, 'b) result t -> ('a t, 'b t) result
val ( >>= ) : 'a t -> ('a -> 'b t) -> 'b t
val ( >>| ) : 'a t -> ('a -> 'b) -> 'b t
val ( <<| ) : ('a -> 'b) -> 'a t -> 'b t
val ( <*> ) : 'a t -> 'b t -> ('a * 'b) t
("DEBUG:rule", [Tag1 (("t", 299), ([((("a")), 100000000, 0, -76)], 1, 0, 1, 0, [7], [2], 0, 0, (("lib/with_deps.mli", 1, 0, 0), ("lib/with_deps.mli", 1, 0, 9), 0), 0, 0, 0, Tag1 ("With_deps", 0)), 1, 0); (("no_deps", 300), ((Tag1 (0, ((("a")), 100000000, 0, -75), (Tag3 ((("t", 299)), [((("a")), 100000000, 0, -75)], (0)), 100000000, 0, -74), 0), 100000000, 0, -73), 0, (("lib/with_deps.mli", 2, 10, 10), ("lib/with_deps.mli", 2, 10, 33), 0), 0, Tag1 ("With_deps", 1)), 0); (("deps", 301), ((Tag1 (0, (Tag3 ((("t", 299)), [((("a")), 100000000, 0, -72)], (0)), 100000000, 0, -71), (Tag3 (Tag1 ((Tag2 ("Deps")), "t"), 0, (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0, (("lib/with_deps.mli", 3, 34, 34), ("lib/with_deps.mli", 3, 34, 58), 0), 0, Tag1 ("With_deps", 2)), 0); (("value", 302), ((Tag1 (0, (Tag3 ((("t", 299)), [((("a")), 100000000, 0, -67)], (0)), 100000000, 0, -68), ((("a")), 100000000, 0, -67), 0), 100000000, 0, -66), 0, (("lib/with_deps.mli", 4, 59, 59), ("lib/with_deps.mli", 4, 59, 80), 0), 0, Tag1 ("With_deps", 3)), 0); (("unpack", 303), ((Tag1 (0, (Tag3 ((("t", 299)), [((("a")), 100000000, 0, -64)], (0)), 100000000, 0, -65), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Deps")), "t"), 0, (0)), 100000000, 0, -63); ((("a")), 100000000, 0, -64)]), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("lib/with_deps.mli", 5, 81, 81), ("lib/with_deps.mli", 5, 81, 112), 0), 0, Tag1 ("With_deps", 4)), 0); (("bind", 304), ((Tag1 (0, (Tag3 ((("t", 299)), [((("a")), 100000000, 0, -59)], (0)), 100000000, 0, -60), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -59), (Tag3 ((("t", 299)), [((("b")), 100000000, 0, -56)], (0)), 100000000, 0, -58), 0), 100000000, 0, -57), (Tag3 ((("t", 299)), [((("b")), 100000000, 0, -56)], (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("lib/with_deps.mli", 6, 113, 113), ("lib/with_deps.mli", 6, 113, 151), 0), 0, Tag1 ("With_deps", 5)), 0); (("map", 305), ((Tag1 (0, (Tag3 ((("t", 299)), [((("a")), 100000000, 0, -51)], (0)), 100000000, 0, -52), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -51), ((("b")), 100000000, 0, -49), 0), 100000000, 0, -50), (Tag3 ((("t", 299)), [((("b")), 100000000, 0, -49)], (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("lib/with_deps.mli", 7, 152, 152), ("lib/with_deps.mli", 7, 152, 187), 0), 0, Tag1 ("With_deps", 6)), 0); (("comm", 306), ((Tag1 (0, (Tag3 ((("t", 299)), [(Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -41); ((("b")), 100000000, 0, -43)], (0)), 100000000, 0, -45)], (0)), 100000000, 0, -44), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("t", 299)), [((("a")), 100000000, 0, -41)], (0)), 100000000, 0, -40); (Tag3 ((("t", 299)), [((("b")), 100000000, 0, -43)], (0)), 100000000, 0, -42)], (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("lib/with_deps.mli", 8, 188, 188), ("lib/with_deps.mli", 8, 188, 237), 0), 0, Tag1 ("With_deps", 7)), 0); ((">>=", 307), ((Tag1 (0, (Tag3 ((("t", 299)), [((("a")), 100000000, 0, -36)], (0)), 100000000, 0, -37), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -36), (Tag3 ((("t", 299)), [((("b")), 100000000, 0, -33)], (0)), 100000000, 0, -35), 0), 100000000, 0, -34), (Tag3 ((("t", 299)), [((("b")), 100000000, 0, -33)], (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("lib/with_deps.mli", 10, 239, 239), ("lib/with_deps.mli", 10, 239, 278), 0), 0, Tag1 ("With_deps", 8)), 0); ((">>|", 308), ((Tag1 (0, (Tag3 ((("t", 299)), [((("a")), 100000000, 0, -28)], (0)), 100000000, 0, -29), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -28), ((("b")), 100000000, 0, -26), 0), 100000000, 0, -27), (Tag3 ((("t", 299)), [((("b")), 100000000, 0, -26)], (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("lib/with_deps.mli", 11, 279, 279), ("lib/with_deps.mli", 11, 279, 316), 0), 0, Tag1 ("With_deps", 9)), 0); (("<<|", 309), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -21), ((("b")), 100000000, 0, -19), 0), 100000000, 0, -22), (Tag1 (0, (Tag3 ((("t", 299)), [((("a")), 100000000, 0, -21)], (0)), 100000000, 0, -20), (Tag3 ((("t", 299)), [((("b")), 100000000, 0, -19)], (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("lib/with_deps.mli", 13, 318, 318), ("lib/with_deps.mli", 13, 318, 355), 0), 0, Tag1 ("With_deps", 10)), 0); (("<*>", 310), ((Tag1 (0, (Tag3 ((("t", 299)), [((("a")), 100000000, 0, -12)], (0)), 100000000, 0, -15), (Tag1 (0, (Tag3 ((("t", 299)), [((("b")), 100000000, 0, -13)], (0)), 100000000, 0, -14), (Tag3 ((("t", 299)), [(Tag2 ([((("a")), 100000000, 0, -12); ((("b")), 100000000, 0, -13)]), 100000000, 0, -11)], (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("lib/with_deps.mli", 14, 356, 356), ("lib/with_deps.mli", 14, 356, 394), 0), 0, Tag1 ("With_deps", 11)), 0); (("<+>", 311), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Deps")), "t"), 0, (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 ((("t", 299)), [((("a")), 100000000, 0, -5)], (0)), 100000000, 0, -6), (Tag3 ((("t", 299)), [((("a")), 100000000, 0, -5)], (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("lib/with_deps.mli", 15, 395, 395), ("lib/with_deps.mli", 15, 395, 428), 0), 0, Tag1 ("With_deps", 12)), 0)], "With_deps", [("With_deps", ("I=\239\127%\252\228<to\236O\198cF\130")); ("Unitname", ("\155n\201\211\249\229\028$\220J\172\018<\249\171\158")); ("Support", ("YA;\029\006a\255\202R\137\181\133\184\209)\005")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Schematic", ("\180\179\011\178\017I\241^\235\149h\161k\b\209\142")); ("Pp", ("\167zCQ\134\167\215\2517\247\158\219\250\223.\197")); ("Pkg", ("SneaP\023\210\210\240\218\128bA\te\239")); ("Paths", ("\000\152\242H\139l\222\245\245Ndb\202P^\175")); ("Namespaced", ("%\208\253;3\161W$\236\1838K\195z\1493")); ("Name", ("4? \167\131n\184\000\214\031\017\027\153\002]^")); ("Modname", ("v\160\183\003\212\232\177\007\228-\002\145i\230\255\248")); ("Deps", ("%\164\252&\165z\218\221\023\182\235\223+\147\145\195")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val ( <+> ) : Deps.t -> 'a t -> 'a t
