module type Parsexp =
  sig
    module Conv_error = Parsexp__.Conv_error
    module Of_sexp_error = Parsexp__.Of_sexp_error
    module Old_parser_cont_state = Parsexp__.Old_parser_cont_state
    module Parse_error = Parsexp__.Parse_error
    module Positions = Parsexp__.Positions
    module Cst = Parsexp__.Cst
    module type Conv = Parsexp__.Conv.S
    module type Parser = Parsexp__.Parser.S
    module type Eager_parser = Parsexp__.Parser.S_eager
    exception Of_sexp_error of Of_sexp_error.t
    exception Parse_error of Parse_error.t
    module Single :
      sig
        type parsed_value = Parsexp__.Import.Sexp.t
        module State :
          sig
            type t =
                (unit, Parsexp__.Automaton_stack.t)
                Parsexp__.Automaton_state.t
            val create : ?pos:Parsexp__.Positions.pos -> unit -> t
            val reset : ?pos:Parsexp__.Positions.pos -> t -> unit
            val offset : t -> int
            val line : t -> int
            val column : t -> int
            val position : t -> Parsexp__.Positions.pos
            val stop : t -> unit
          end
        module Stack :
          sig type t = Parsexp__.Automaton_stack.t val empty : t end
        val feed : State.t -> char -> Stack.t -> Stack.t
        val feed_eoi : State.t -> Stack.t -> parsed_value
        val feed_string : State.t -> string -> Stack.t -> Stack.t
        val feed_substring :
          State.t -> string -> pos:int -> len:int -> Stack.t -> Stack.t
        val feed_bytes : State.t -> bytes -> Stack.t -> Stack.t
        val feed_subbytes :
          State.t -> bytes -> pos:int -> len:int -> Stack.t -> Stack.t
        val parse_string :
          string -> (parsed_value, Parsexp__.Parse_error.t) result
        val parse_string_exn : string -> parsed_value
      end
    module Many :
      sig
        type parsed_value = Parsexp__.Import.Sexp.t list
        module State :
          sig
            type t =
                (unit, Parsexp__.Automaton_stack.t)
                Parsexp__.Automaton_state.t
            val create : ?pos:Parsexp__.Positions.pos -> unit -> t
            val reset : ?pos:Parsexp__.Positions.pos -> t -> unit
            val offset : t -> int
            val line : t -> int
            val column : t -> int
            val position : t -> Parsexp__.Positions.pos
            val stop : t -> unit
          end
        module Stack :
          sig type t = Parsexp__.Automaton_stack.t val empty : t end
        val feed : State.t -> char -> Stack.t -> Stack.t
        val feed_eoi : State.t -> Stack.t -> parsed_value
        val feed_string : State.t -> string -> Stack.t -> Stack.t
        val feed_substring :
          State.t -> string -> pos:int -> len:int -> Stack.t -> Stack.t
        val feed_bytes : State.t -> bytes -> Stack.t -> Stack.t
        val feed_subbytes :
          State.t -> bytes -> pos:int -> len:int -> Stack.t -> Stack.t
        val parse_string :
          string -> (parsed_value, Parsexp__.Parse_error.t) result
        val parse_string_exn : string -> parsed_value
      end
    module Eager :
      sig
        type parsed_value = Parsexp__.Import.Sexp.t
        module State :
          sig
            type t =
                (unit, Parsexp__.Automaton_stack.t)
                Parsexp__.Automaton_state.t
            val reset : ?pos:Parsexp__.Positions.pos -> t -> unit
            val offset : t -> int
            val line : t -> int
            val column : t -> int
            val position : t -> Parsexp__.Positions.pos
            val stop : t -> unit
            module Read_only :
              sig
                type t
                val offset : t -> int
                val line : t -> int
                val column : t -> int
                val position : t -> Parsexp__.Positions.pos
              end
            val create :
              ?pos:Parsexp__.Positions.pos ->
              ?no_sexp_is_error:bool ->
              (Read_only.t -> parsed_value -> unit) -> t
            val old_parser_cont_state :
              t -> Parsexp__.Old_parser_cont_state.t
          end
        module Stack :
          sig type t = Parsexp__.Automaton_stack.t val empty : t end
        val feed : State.t -> char -> Stack.t -> Stack.t
        val feed_eoi : State.t -> Stack.t -> unit
        val feed_string : State.t -> string -> Stack.t -> Stack.t
        val feed_substring :
          State.t -> string -> pos:int -> len:int -> Stack.t -> Stack.t
        val feed_bytes : State.t -> bytes -> Stack.t -> Stack.t
        val feed_subbytes :
          State.t -> bytes -> pos:int -> len:int -> Stack.t -> Stack.t
        module Lexbuf_consumer :
          sig
            type t
            val create : unit -> t
            val parse : t -> Lexing.lexbuf -> parsed_value
            val parse_opt : t -> Lexing.lexbuf -> parsed_value option
          end
      end
    module Single_and_positions :
      sig
        type parsed_value = Parsexp__.Import.Sexp.t * Positions.t
        module State :
          sig
            type t =
                (Positions.Builder.t, Parsexp__.Automaton_stack.t)
                Parsexp__.Automaton_state.t
            val create : ?pos:Parsexp__.Positions.pos -> unit -> t
            val reset : ?pos:Parsexp__.Positions.pos -> t -> unit
            val offset : t -> int
            val line : t -> int
            val column : t -> int
            val position : t -> Parsexp__.Positions.pos
            val stop : t -> unit
          end
        module Stack :
          sig type t = Parsexp__.Automaton_stack.t val empty : t end
        val feed : State.t -> char -> Stack.t -> Stack.t
        val feed_eoi : State.t -> Stack.t -> parsed_value
        val feed_string : State.t -> string -> Stack.t -> Stack.t
        val feed_substring :
          State.t -> string -> pos:int -> len:int -> Stack.t -> Stack.t
        val feed_bytes : State.t -> bytes -> Stack.t -> Stack.t
        val feed_subbytes :
          State.t -> bytes -> pos:int -> len:int -> Stack.t -> Stack.t
        val parse_string :
          string -> (parsed_value, Parsexp__.Parse_error.t) result
        val parse_string_exn : string -> parsed_value
      end
    module Many_and_positions :
      sig
        type parsed_value = Parsexp__.Import.Sexp.t list * Positions.t
        module State :
          sig
            type t =
                (Positions.Builder.t, Parsexp__.Automaton_stack.t)
                Parsexp__.Automaton_state.t
            val create : ?pos:Parsexp__.Positions.pos -> unit -> t
            val reset : ?pos:Parsexp__.Positions.pos -> t -> unit
            val offset : t -> int
            val line : t -> int
            val column : t -> int
            val position : t -> Parsexp__.Positions.pos
            val stop : t -> unit
          end
        module Stack :
          sig type t = Parsexp__.Automaton_stack.t val empty : t end
        val feed : State.t -> char -> Stack.t -> Stack.t
        val feed_eoi : State.t -> Stack.t -> parsed_value
        val feed_string : State.t -> string -> Stack.t -> Stack.t
        val feed_substring :
          State.t -> string -> pos:int -> len:int -> Stack.t -> Stack.t
        val feed_bytes : State.t -> bytes -> Stack.t -> Stack.t
        val feed_subbytes :
          State.t -> bytes -> pos:int -> len:int -> Stack.t -> Stack.t
        val parse_string :
          string -> (parsed_value, Parsexp__.Parse_error.t) result
        val parse_string_exn : string -> parsed_value
      end
    module Eager_and_positions :
      sig
        type parsed_value = Parsexp__.Import.Sexp.t * Positions.t
        module State :
          sig
            type t =
                (Positions.Builder.t, Parsexp__.Automaton_stack.t)
                Parsexp__.Automaton_state.t
            val reset : ?pos:Parsexp__.Positions.pos -> t -> unit
            val offset : t -> int
            val line : t -> int
            val column : t -> int
            val position : t -> Parsexp__.Positions.pos
            val stop : t -> unit
            module Read_only :
              sig
                type t
                val offset : t -> int
                val line : t -> int
                val column : t -> int
                val position : t -> Parsexp__.Positions.pos
              end
            val create :
              ?pos:Parsexp__.Positions.pos ->
              ?no_sexp_is_error:bool ->
              (Read_only.t -> parsed_value -> unit) -> t
            val old_parser_cont_state :
              t -> Parsexp__.Old_parser_cont_state.t
          end
        module Stack :
          sig type t = Parsexp__.Automaton_stack.t val empty : t end
        val feed : State.t -> char -> Stack.t -> Stack.t
        val feed_eoi : State.t -> Stack.t -> unit
        val feed_string : State.t -> string -> Stack.t -> Stack.t
        val feed_substring :
          State.t -> string -> pos:int -> len:int -> Stack.t -> Stack.t
        val feed_bytes : State.t -> bytes -> Stack.t -> Stack.t
        val feed_subbytes :
          State.t -> bytes -> pos:int -> len:int -> Stack.t -> Stack.t
        module Lexbuf_consumer :
          sig
            type t
            val create : unit -> t
            val parse : t -> Lexing.lexbuf -> parsed_value
            val parse_opt : t -> Lexing.lexbuf -> parsed_value option
          end
      end
    module Single_just_positions :
      sig
        type parsed_value = Positions.t
        module State :
          sig
            type t = (Positions.Builder.t, unit) Parsexp__.Automaton_state.t
            val create : ?pos:Parsexp__.Positions.pos -> unit -> t
            val reset : ?pos:Parsexp__.Positions.pos -> t -> unit
            val offset : t -> int
            val line : t -> int
            val column : t -> int
            val position : t -> Parsexp__.Positions.pos
            val stop : t -> unit
          end
        module Stack : sig type t = unit val empty : t end
        val feed : State.t -> char -> Stack.t -> Stack.t
        val feed_eoi : State.t -> Stack.t -> parsed_value
        val feed_string : State.t -> string -> Stack.t -> Stack.t
        val feed_substring :
          State.t -> string -> pos:int -> len:int -> Stack.t -> Stack.t
        val feed_bytes : State.t -> bytes -> Stack.t -> Stack.t
        val feed_subbytes :
          State.t -> bytes -> pos:int -> len:int -> Stack.t -> Stack.t
        val parse_string :
          string -> (parsed_value, Parsexp__.Parse_error.t) result
        val parse_string_exn : string -> parsed_value
      end
    module Many_just_positions :
      sig
        type parsed_value = Positions.t
        module State :
          sig
            type t = (Positions.Builder.t, unit) Parsexp__.Automaton_state.t
            val create : ?pos:Parsexp__.Positions.pos -> unit -> t
            val reset : ?pos:Parsexp__.Positions.pos -> t -> unit
            val offset : t -> int
            val line : t -> int
            val column : t -> int
            val position : t -> Parsexp__.Positions.pos
            val stop : t -> unit
          end
        module Stack : sig type t = unit val empty : t end
        val feed : State.t -> char -> Stack.t -> Stack.t
        val feed_eoi : State.t -> Stack.t -> parsed_value
        val feed_string : State.t -> string -> Stack.t -> Stack.t
        val feed_substring :
          State.t -> string -> pos:int -> len:int -> Stack.t -> Stack.t
        val feed_bytes : State.t -> bytes -> Stack.t -> Stack.t
        val feed_subbytes :
          State.t -> bytes -> pos:int -> len:int -> Stack.t -> Stack.t
        val parse_string :
          string -> (parsed_value, Parsexp__.Parse_error.t) result
        val parse_string_exn : string -> parsed_value
      end
    module Eager_just_positions :
      sig
        type parsed_value = Positions.t
        module State :
          sig
            type t = (Positions.Builder.t, unit) Parsexp__.Automaton_state.t
            val reset : ?pos:Parsexp__.Positions.pos -> t -> unit
            val offset : t -> int
            val line : t -> int
            val column : t -> int
            val position : t -> Parsexp__.Positions.pos
            val stop : t -> unit
            module Read_only :
              sig
                type t
                val offset : t -> int
                val line : t -> int
                val column : t -> int
                val position : t -> Parsexp__.Positions.pos
              end
            val create :
              ?pos:Parsexp__.Positions.pos ->
              ?no_sexp_is_error:bool ->
              (Read_only.t -> parsed_value -> unit) -> t
            val old_parser_cont_state :
              t -> Parsexp__.Old_parser_cont_state.t
          end
        module Stack : sig type t = unit val empty : t end
        val feed : State.t -> char -> Stack.t -> Stack.t
        val feed_eoi : State.t -> Stack.t -> unit
        val feed_string : State.t -> string -> Stack.t -> Stack.t
        val feed_substring :
          State.t -> string -> pos:int -> len:int -> Stack.t -> Stack.t
        val feed_bytes : State.t -> bytes -> Stack.t -> Stack.t
        val feed_subbytes :
          State.t -> bytes -> pos:int -> len:int -> Stack.t -> Stack.t
        module Lexbuf_consumer :
          sig
            type t
            val create : unit -> t
            val parse : t -> Lexing.lexbuf -> parsed_value
            val parse_opt : t -> Lexing.lexbuf -> parsed_value option
          end
      end
    module Many_cst :
      sig
        type parsed_value = Cst.t_or_comment list
        module State :
          sig
            type t =
                (Parsexp__.Automaton_state.For_cst.t,
                 Parsexp__.Automaton_stack.For_cst.t)
                Parsexp__.Automaton_state.t
            val create : ?pos:Parsexp__.Positions.pos -> unit -> t
            val reset : ?pos:Parsexp__.Positions.pos -> t -> unit
            val offset : t -> int
            val line : t -> int
            val column : t -> int
            val position : t -> Parsexp__.Positions.pos
            val stop : t -> unit
          end
        module Stack :
          sig type t = Parsexp__.Automaton_stack.For_cst.t val empty : t end
        val feed : State.t -> char -> Stack.t -> Stack.t
        val feed_eoi : State.t -> Stack.t -> parsed_value
        val feed_string : State.t -> string -> Stack.t -> Stack.t
        val feed_substring :
          State.t -> string -> pos:int -> len:int -> Stack.t -> Stack.t
        val feed_bytes : State.t -> bytes -> Stack.t -> Stack.t
        val feed_subbytes :
          State.t -> bytes -> pos:int -> len:int -> Stack.t -> Stack.t
        val parse_string :
          string -> (parsed_value, Parsexp__.Parse_error.t) result
        val parse_string_exn : string -> parsed_value
      end
    module Eager_cst :
      sig
        type parsed_value = Cst.t_or_comment
        module State :
          sig
            type t =
                (Parsexp__.Automaton_state.For_cst.t,
                 Parsexp__.Automaton_stack.For_cst.t)
                Parsexp__.Automaton_state.t
            val reset : ?pos:Parsexp__.Positions.pos -> t -> unit
            val offset : t -> int
            val line : t -> int
            val column : t -> int
            val position : t -> Parsexp__.Positions.pos
            val stop : t -> unit
            module Read_only :
              sig
                type t
                val offset : t -> int
                val line : t -> int
                val column : t -> int
                val position : t -> Parsexp__.Positions.pos
              end
            val create :
              ?pos:Parsexp__.Positions.pos ->
              ?no_sexp_is_error:bool ->
              (Read_only.t -> parsed_value -> unit) -> t
            val old_parser_cont_state :
              t -> Parsexp__.Old_parser_cont_state.t
          end
        module Stack :
          sig type t = Parsexp__.Automaton_stack.For_cst.t val empty : t end
        val feed : State.t -> char -> Stack.t -> Stack.t
        val feed_eoi : State.t -> Stack.t -> unit
        val feed_string : State.t -> string -> Stack.t -> Stack.t
        val feed_substring :
          State.t -> string -> pos:int -> len:int -> Stack.t -> Stack.t
        val feed_bytes : State.t -> bytes -> Stack.t -> Stack.t
        val feed_subbytes :
          State.t -> bytes -> pos:int -> len:int -> Stack.t -> Stack.t
        module Lexbuf_consumer :
          sig
            type t
            val create : unit -> t
            val parse : t -> Lexing.lexbuf -> parsed_value
            val parse_opt : t -> Lexing.lexbuf -> parsed_value option
          end
      end
    type 'a id = 'a
    type sexp_list = Parsexp__.Import.Sexp.t list
    module Conv_single :
      sig
        val parse_string :
          string ->
          (Parsexp__.Import.Sexp.t -> 'a) ->
          ('a id, Parsexp__.Conv_error.t) result
        val parse_string_exn :
          string -> (Parsexp__.Import.Sexp.t -> 'a) -> 'a id
        val conv :
          Parsexp__.Import.Sexp.t * Parsexp__.Positions.t ->
          (Parsexp__.Import.Sexp.t -> 'a) ->
          ('a id, Parsexp__.Of_sexp_error.t) result
        val conv_exn :
          Parsexp__.Import.Sexp.t * Parsexp__.Positions.t ->
          (Parsexp__.Import.Sexp.t -> 'a) -> 'a id
        val conv_combine :
          (Parsexp__.Import.Sexp.t * Parsexp__.Positions.t,
           Parsexp__.Parse_error.t)
          result ->
          (Parsexp__.Import.Sexp.t -> 'a) ->
          ('a id, Parsexp__.Conv_error.t) result
      end
    module Conv_many :
      sig
        val parse_string :
          string ->
          (Parsexp__.Import.Sexp.t -> 'a) ->
          ('a list, Parsexp__.Conv_error.t) result
        val parse_string_exn :
          string -> (Parsexp__.Import.Sexp.t -> 'a) -> 'a list
        val conv :
          sexp_list * Parsexp__.Positions.t ->
          (Parsexp__.Import.Sexp.t -> 'a) ->
          ('a list, Parsexp__.Of_sexp_error.t) result
        val conv_exn :
          sexp_list * Parsexp__.Positions.t ->
          (Parsexp__.Import.Sexp.t -> 'a) -> 'a list
        val conv_combine :
          (sexp_list * Parsexp__.Positions.t, Parsexp__.Parse_error.t) result ->
          (Parsexp__.Import.Sexp.t -> 'a) ->
          ('a list, Parsexp__.Conv_error.t) result
      end
    module Conv_many_at_once :
      sig
        val parse_string :
          string ->
          (sexp_list -> 'a) -> ('a id, Parsexp__.Conv_error.t) result
        val parse_string_exn : string -> (sexp_list -> 'a) -> 'a id
        val conv :
          sexp_list * Parsexp__.Positions.t ->
          (sexp_list -> 'a) -> ('a id, Parsexp__.Of_sexp_error.t) result
        val conv_exn :
          sexp_list * Parsexp__.Positions.t -> (sexp_list -> 'a) -> 'a id
        val conv_combine :
          (sexp_list * Parsexp__.Positions.t, Parsexp__.Parse_error.t) result ->
          (sexp_list -> 'a) -> ('a id, Parsexp__.Conv_error.t) result
      end
    module Private :
      sig
        module Automaton = Parsexp__.Automaton
        module Automaton_stack = Parsexp__.Automaton_stack
        module Automaton_state = Parsexp__.Automaton_state
        module Positions = Positions
      end("DEBUG:rule", [Tag4 (("Parsexp", 1813), ((Tag1 ([Tag3 (("Conv_error", 1814), 1, (Tag3 (Tag1 ((Tag2 ("Parsexp__")), "Conv_error")), 0, (("src/parsexp_intf.ml", 6, 72, 74), ("src/parsexp_intf.ml", 6, 72, 104), 0), Tag1 ("Parsexp__Parsexp_intf", 0)), 0, 0); Tag3 (("Of_sexp_error", 1815), 1, (Tag3 (Tag1 ((Tag2 ("Parsexp__")), "Of_sexp_error")), 0, (("src/parsexp_intf.ml", 7, 105, 107), ("src/parsexp_intf.ml", 7, 105, 143), 0), Tag1 ("Parsexp__Parsexp_intf", 1)), 0, 0); Tag3 (("Old_parser_cont_state", 1816), 1, (Tag3 (Tag1 ((Tag2 ("Parsexp__")), "Old_parser_cont_state")), 0, (("src/parsexp_intf.ml", 8, 144, 146), ("src/parsexp_intf.ml", 8, 144, 198), 0), Tag1 ("Parsexp__Parsexp_intf", 2)), 0, 0); Tag3 (("Parse_error", 1817), 1, (Tag3 (Tag1 ((Tag2 ("Parsexp__")), "Parse_error")), 0, (("src/parsexp_intf.ml", 9, 199, 201), ("src/parsexp_intf.ml", 9, 199, 233), 0), Tag1 ("Parsexp__Parsexp_intf", 3)), 0, 0); Tag3 (("Positions", 1818), 1, (Tag3 (Tag1 ((Tag2 ("Parsexp__")), "Positions")), 0, (("src/parsexp_intf.ml", 10, 234, 236), ("src/parsexp_intf.ml", 10, 234, 264), 0), Tag1 ("Parsexp__Parsexp_intf", 4)), 0, 0); Tag3 (("Cst", 1819), 1, (Tag3 (Tag1 ((Tag2 ("Parsexp__")), "Cst")), 0, (("src/parsexp_intf.ml", 11, 265, 267), ("src/parsexp_intf.ml", 11, 265, 283), 0), Tag1 ("Parsexp__Parsexp_intf", 5)), 0, 0); Tag4 (("Conv", 1820), (((Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Conv"), "S"))), 0, (("src/parsexp_intf.ml", 13, 285, 287), ("src/parsexp_intf.ml", 13, 285, 312), 0), Tag1 ("Parsexp__Parsexp_intf", 6)), 0); Tag4 (("Parser", 1821), (((Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Parser"), "S"))), 0, (("src/parsexp_intf.ml", 14, 313, 315), ("src/parsexp_intf.ml", 14, 313, 344), 0), Tag1 ("Parsexp__Parsexp_intf", 7)), 0); Tag4 (("Eager_parser", 1822), (((Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Parser"), "S_eager"))), 0, (("src/parsexp_intf.ml", 15, 345, 347), ("src/parsexp_intf.ml", 15, 345, 388), 0), Tag1 ("Parsexp__Parsexp_intf", 8)), 0); Tag2 (("Of_sexp_error", 1823), ((Tag3 ("exn", 7)), 0, ([(Tag3 (Tag1 ((("Of_sexp_error", 1815)), "t"), 0, (0)), 100000000, 0, -6)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Parsexp__Parsexp_intf", 9)), 2, 0); Tag2 (("Parse_error", 1824), ((Tag3 ("exn", 7)), 0, ([(Tag3 (Tag1 ((("Parse_error", 1817)), "t"), 0, (0)), 100000000, 0, -5)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Parsexp__Parsexp_intf", 10)), 2, 0); Tag3 (("Single", 1825), 0, (Tag1 ([Tag1 (("parsed_value", 1842), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -63)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 25, 616, 625), ("src/parsexp_intf.ml", 25, 616, 651), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 11)), 1, 0); Tag3 (("State", 1843), 0, (Tag1 ([Tag1 (("t", 1853), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_state"), "t"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -92); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_stack"), "t"), 0, (0)), 100000000, 0, -93)], (0)), 100000000, 0, -91)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 26, 652, 661), ("src/parsexp_intf.ml", 26, 652, 719), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 12)), 1, 0); (("create", 1854), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -90)], (0)), 100000000, 0, -89), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -88), (Tag3 ((("t", 1853)), 0, (0)), 100000000, 0, -87), 0), 100000000, 0, -86), 0), 100000000, 0, -85), 0, (("src/parser_intf.ml", 9, 192, 194), ("src/parser_intf.ml", 9, 192, 238), 0), 0, Tag1 ("Parsexp__Parser_intf", 1)), 0); (("reset", 1855), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -84)], (0)), 100000000, 0, -83), (Tag1 (0, (Tag3 ((("t", 1853)), 0, (0)), 100000000, 0, -82), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0), 100000000, 0, -79), 0, (("src/parser_intf.ml", 18, 389, 391), ("src/parser_intf.ml", 18, 389, 434), 0), 0, Tag1 ("Parsexp__Parser_intf", 2)), 0); (("offset", 1856), ((Tag1 (0, (Tag3 ((("t", 1853)), 0, (0)), 100000000, 0, -78), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0, (("src/parser_intf.ml", 21, 484, 486), ("src/parser_intf.ml", 21, 484, 507), 0), 0, Tag1 ("Parsexp__Parser_intf", 3)), 0); (("line", 1857), ((Tag1 (0, (Tag3 ((("t", 1853)), 0, (0)), 100000000, 0, -75), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -74), 0), 100000000, 0, -73), 0, (("src/parser_intf.ml", 25, 540, 542), ("src/parser_intf.ml", 25, 540, 561), 0), 0, Tag1 ("Parsexp__Parser_intf", 4)), 0); (("column", 1858), ((Tag1 (0, (Tag3 ((("t", 1853)), 0, (0)), 100000000, 0, -72), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -71), 0), 100000000, 0, -70), 0, (("src/parser_intf.ml", 26, 562, 564), ("src/parser_intf.ml", 26, 562, 585), 0), 0, Tag1 ("Parsexp__Parser_intf", 5)), 0); (("position", 1859), ((Tag1 (0, (Tag3 ((("t", 1853)), 0, (0)), 100000000, 0, -69), (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -68), 0), 100000000, 0, -67), 0, (("src/parser_intf.ml", 27, 586, 588), ("src/parser_intf.ml", 27, 586, 621), 0), 0, Tag1 ("Parsexp__Parser_intf", 6)), 0); (("stop", 1860), ((Tag1 (0, (Tag3 ((("t", 1853)), 0, (0)), 100000000, 0, -66), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -65), 0), 100000000, 0, -64), 0, (("src/parser_intf.ml", 31, 779, 781), ("src/parser_intf.ml", 31, 779, 801), 0), 0, Tag1 ("Parsexp__Parser_intf", 7)), 0)]), 0, (("src/parser_intf.ml", 45, 1020, 1022), ("src/parser_intf.ml", 45, 1020, 1042), 0), Tag1 ("Parsexp__Parser_intf", 13)), 0, 0); Tag3 (("Stack", 1844), 0, (Tag1 ([Tag1 (("t", 1861), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_stack"), "t"), 0, (0)), 100000000, 0, -95)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 27, 720, 729), ("src/parsexp_intf.ml", 27, 720, 761), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 13)), 1, 0); (("empty", 1862), ((Tag3 ((("t", 1861)), 0, (0)), 100000000, 0, -94), 0, (("src/parser_intf.ml", 38, 919, 921), ("src/parser_intf.ml", 38, 919, 934), 0), 0, Tag1 ("Parsexp__Parser_intf", 10)), 0)]), 0, (("src/parser_intf.ml", 46, 1043, 1045), ("src/parser_intf.ml", 46, 1043, 1065), 0), Tag1 ("Parsexp__Parser_intf", 14)), 0, 0); (("feed", 1845), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1843)), "t"), 0, (0)), 100000000, 0, -62), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -61), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1844)), "t"), 0, (0)), 100000000, 0, -60), (Tag3 (Tag1 ((("Stack", 1844)), "t"), 0, (0)), 100000000, 0, -59), 0), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("src/parser_intf.ml", 49, 1152, 1154), ("src/parser_intf.ml", 49, 1152, 1202), 0), 0, Tag1 ("Parsexp__Parser_intf", 15)), 0); (("feed_eoi", 1846), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1843)), "t"), 0, (0)), 100000000, 0, -55), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1844)), "t"), 0, (0)), 100000000, 0, -54), (Tag3 ((("parsed_value", 1842)), 0, (0)), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("src/parser_intf.ml", 53, 1316, 1318), ("src/parser_intf.ml", 53, 1316, 1367), 0), 0, Tag1 ("Parsexp__Parser_intf", 16)), 0); (("feed_string", 1847), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1843)), "t"), 0, (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -49), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1844)), "t"), 0, (0)), 100000000, 0, -48), (Tag3 (Tag1 ((("Stack", 1844)), "t"), 0, (0)), 100000000, 0, -47), 0), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("src/parser_intf.ml", 57, 1405, 1407), ("src/parser_intf.ml", 57, 1405, 1464), 0), 0, Tag1 ("Parsexp__Parser_intf", 17)), 0); (("feed_substring", 1848), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1843)), "t"), 0, (0)), 100000000, 0, -43), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -42), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -41), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -40), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1844)), "t"), 0, (0)), 100000000, 0, -39), (Tag3 (Tag1 ((("Stack", 1844)), "t"), 0, (0)), 100000000, 0, -38), 0), 100000000, 0, -37), 0), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0, (("src/parser_intf.ml", 58, 1465, 1467), ("src/parser_intf.ml", 58, 1465, 1549), 0), 0, Tag1 ("Parsexp__Parser_intf", 18)), 0); (("feed_bytes", 1849), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1843)), "t"), 0, (0)), 100000000, 0, -32), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -31), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1844)), "t"), 0, (0)), 100000000, 0, -30), (Tag3 (Tag1 ((("Stack", 1844)), "t"), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("src/parser_intf.ml", 59, 1550, 1552), ("src/parser_intf.ml", 59, 1550, 1607), 0), 0, Tag1 ("Parsexp__Parser_intf", 19)), 0); (("feed_subbytes", 1850), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1843)), "t"), 0, (0)), 100000000, 0, -25), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -24), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -23), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -22), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1844)), "t"), 0, (0)), 100000000, 0, -21), (Tag3 (Tag1 ((("Stack", 1844)), "t"), 0, (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("src/parser_intf.ml", 60, 1608, 1610), ("src/parser_intf.ml", 60, 1608, 1690), 0), 0, Tag1 ("Parsexp__Parser_intf", 20)), 0); (("parse_string", 1851), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -14), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("parsed_value", 1842)), 0, (0)), 100000000, 0, -12); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Parse_error"), "t"), 0, (0)), 100000000, 0, -13)], (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("src/parser_intf.ml", 64, 1727, 1729), ("src/parser_intf.ml", 64, 1727, 1794), 0), 0, Tag1 ("Parsexp__Parser_intf", 21)), 0); (("parse_string_exn", 1852), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9), (Tag3 ((("parsed_value", 1842)), 0, (0)), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("src/parser_intf.ml", 65, 1795, 1797), ("src/parser_intf.ml", 65, 1795, 1842), 0), 0, Tag1 ("Parsexp__Parser_intf", 22)), 0)]), 0, (("src/parsexp_intf.ml", 23, 587, 589), ("src/parsexp_intf.ml", 27, 720, 761), 0), Tag1 ("Parsexp__Parsexp_intf", 14)), 0, 0); Tag3 (("Many", 1826), 0, (Tag1 ([Tag1 (("parsed_value", 1863), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -153)], (0)), 100000000, 0, -152)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 31, 790, 799), ("src/parsexp_intf.ml", 31, 790, 830), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 15)), 1, 0); Tag3 (("State", 1864), 0, (Tag1 ([Tag1 (("t", 1874), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_state"), "t"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -182); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_stack"), "t"), 0, (0)), 100000000, 0, -183)], (0)), 100000000, 0, -181)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 32, 831, 840), ("src/parsexp_intf.ml", 32, 831, 898), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 16)), 1, 0); (("create", 1875), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -180)], (0)), 100000000, 0, -179), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -178), (Tag3 ((("t", 1874)), 0, (0)), 100000000, 0, -177), 0), 100000000, 0, -176), 0), 100000000, 0, -175), 0, (("src/parser_intf.ml", 9, 192, 194), ("src/parser_intf.ml", 9, 192, 238), 0), 0, Tag1 ("Parsexp__Parser_intf", 1)), 0); (("reset", 1876), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -174)], (0)), 100000000, 0, -173), (Tag1 (0, (Tag3 ((("t", 1874)), 0, (0)), 100000000, 0, -172), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -171), 0), 100000000, 0, -170), 0), 100000000, 0, -169), 0, (("src/parser_intf.ml", 18, 389, 391), ("src/parser_intf.ml", 18, 389, 434), 0), 0, Tag1 ("Parsexp__Parser_intf", 2)), 0); (("offset", 1877), ((Tag1 (0, (Tag3 ((("t", 1874)), 0, (0)), 100000000, 0, -168), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -167), 0), 100000000, 0, -166), 0, (("src/parser_intf.ml", 21, 484, 486), ("src/parser_intf.ml", 21, 484, 507), 0), 0, Tag1 ("Parsexp__Parser_intf", 3)), 0); (("line", 1878), ((Tag1 (0, (Tag3 ((("t", 1874)), 0, (0)), 100000000, 0, -165), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -164), 0), 100000000, 0, -163), 0, (("src/parser_intf.ml", 25, 540, 542), ("src/parser_intf.ml", 25, 540, 561), 0), 0, Tag1 ("Parsexp__Parser_intf", 4)), 0); (("column", 1879), ((Tag1 (0, (Tag3 ((("t", 1874)), 0, (0)), 100000000, 0, -162), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -161), 0), 100000000, 0, -160), 0, (("src/parser_intf.ml", 26, 562, 564), ("src/parser_intf.ml", 26, 562, 585), 0), 0, Tag1 ("Parsexp__Parser_intf", 5)), 0); (("position", 1880), ((Tag1 (0, (Tag3 ((("t", 1874)), 0, (0)), 100000000, 0, -159), (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -158), 0), 100000000, 0, -157), 0, (("src/parser_intf.ml", 27, 586, 588), ("src/parser_intf.ml", 27, 586, 621), 0), 0, Tag1 ("Parsexp__Parser_intf", 6)), 0); (("stop", 1881), ((Tag1 (0, (Tag3 ((("t", 1874)), 0, (0)), 100000000, 0, -156), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -155), 0), 100000000, 0, -154), 0, (("src/parser_intf.ml", 31, 779, 781), ("src/parser_intf.ml", 31, 779, 801), 0), 0, Tag1 ("Parsexp__Parser_intf", 7)), 0)]), 0, (("src/parser_intf.ml", 45, 1020, 1022), ("src/parser_intf.ml", 45, 1020, 1042), 0), Tag1 ("Parsexp__Parser_intf", 13)), 0, 0); Tag3 (("Stack", 1865), 0, (Tag1 ([Tag1 (("t", 1882), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_stack"), "t"), 0, (0)), 100000000, 0, -185)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 33, 899, 908), ("src/parsexp_intf.ml", 33, 899, 940), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 17)), 1, 0); (("empty", 1883), ((Tag3 ((("t", 1882)), 0, (0)), 100000000, 0, -184), 0, (("src/parser_intf.ml", 38, 919, 921), ("src/parser_intf.ml", 38, 919, 934), 0), 0, Tag1 ("Parsexp__Parser_intf", 10)), 0)]), 0, (("src/parser_intf.ml", 46, 1043, 1045), ("src/parser_intf.ml", 46, 1043, 1065), 0), Tag1 ("Parsexp__Parser_intf", 14)), 0, 0); (("feed", 1866), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1864)), "t"), 0, (0)), 100000000, 0, -151), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -150), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1865)), "t"), 0, (0)), 100000000, 0, -149), (Tag3 (Tag1 ((("Stack", 1865)), "t"), 0, (0)), 100000000, 0, -148), 0), 100000000, 0, -147), 0), 100000000, 0, -146), 0), 100000000, 0, -145), 0, (("src/parser_intf.ml", 49, 1152, 1154), ("src/parser_intf.ml", 49, 1152, 1202), 0), 0, Tag1 ("Parsexp__Parser_intf", 15)), 0); (("feed_eoi", 1867), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1864)), "t"), 0, (0)), 100000000, 0, -144), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1865)), "t"), 0, (0)), 100000000, 0, -143), (Tag3 ((("parsed_value", 1863)), 0, (0)), 100000000, 0, -142), 0), 100000000, 0, -141), 0), 100000000, 0, -140), 0, (("src/parser_intf.ml", 53, 1316, 1318), ("src/parser_intf.ml", 53, 1316, 1367), 0), 0, Tag1 ("Parsexp__Parser_intf", 16)), 0); (("feed_string", 1868), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1864)), "t"), 0, (0)), 100000000, 0, -139), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -138), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1865)), "t"), 0, (0)), 100000000, 0, -137), (Tag3 (Tag1 ((("Stack", 1865)), "t"), 0, (0)), 100000000, 0, -136), 0), 100000000, 0, -135), 0), 100000000, 0, -134), 0), 100000000, 0, -133), 0, (("src/parser_intf.ml", 57, 1405, 1407), ("src/parser_intf.ml", 57, 1405, 1464), 0), 0, Tag1 ("Parsexp__Parser_intf", 17)), 0); (("feed_substring", 1869), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1864)), "t"), 0, (0)), 100000000, 0, -132), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -131), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -130), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -129), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1865)), "t"), 0, (0)), 100000000, 0, -128), (Tag3 (Tag1 ((("Stack", 1865)), "t"), 0, (0)), 100000000, 0, -127), 0), 100000000, 0, -126), 0), 100000000, 0, -125), 0), 100000000, 0, -124), 0), 100000000, 0, -123), 0), 100000000, 0, -122), 0, (("src/parser_intf.ml", 58, 1465, 1467), ("src/parser_intf.ml", 58, 1465, 1549), 0), 0, Tag1 ("Parsexp__Parser_intf", 18)), 0); (("feed_bytes", 1870), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1864)), "t"), 0, (0)), 100000000, 0, -121), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -120), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1865)), "t"), 0, (0)), 100000000, 0, -119), (Tag3 (Tag1 ((("Stack", 1865)), "t"), 0, (0)), 100000000, 0, -118), 0), 100000000, 0, -117), 0), 100000000, 0, -116), 0), 100000000, 0, -115), 0, (("src/parser_intf.ml", 59, 1550, 1552), ("src/parser_intf.ml", 59, 1550, 1607), 0), 0, Tag1 ("Parsexp__Parser_intf", 19)), 0); (("feed_subbytes", 1871), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1864)), "t"), 0, (0)), 100000000, 0, -114), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -113), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -112), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -111), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1865)), "t"), 0, (0)), 100000000, 0, -110), (Tag3 (Tag1 ((("Stack", 1865)), "t"), 0, (0)), 100000000, 0, -109), 0), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), 0), 100000000, 0, -105), 0), 100000000, 0, -104), 0, (("src/parser_intf.ml", 60, 1608, 1610), ("src/parser_intf.ml", 60, 1608, 1690), 0), 0, Tag1 ("Parsexp__Parser_intf", 20)), 0); (("parse_string", 1872), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -103), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("parsed_value", 1863)), 0, (0)), 100000000, 0, -101); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Parse_error"), "t"), 0, (0)), 100000000, 0, -102)], (0)), 100000000, 0, -100), 0), 100000000, 0, -99), 0, (("src/parser_intf.ml", 64, 1727, 1729), ("src/parser_intf.ml", 64, 1727, 1794), 0), 0, Tag1 ("Parsexp__Parser_intf", 21)), 0); (("parse_string_exn", 1873), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -98), (Tag3 ((("parsed_value", 1863)), 0, (0)), 100000000, 0, -97), 0), 100000000, 0, -96), 0, (("src/parser_intf.ml", 65, 1795, 1797), ("src/parser_intf.ml", 65, 1795, 1842), 0), 0, Tag1 ("Parsexp__Parser_intf", 22)), 0)]), 0, (("src/parsexp_intf.ml", 29, 763, 765), ("src/parsexp_intf.ml", 33, 899, 940), 0), Tag1 ("Parsexp__Parsexp_intf", 18)), 0, 0); Tag3 (("Eager", 1827), 0, (Tag1 ([Tag1 (("parsed_value", 1884), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -234)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 37, 976, 985), ("src/parsexp_intf.ml", 37, 976, 1011), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 19)), 1, 0); Tag3 (("State", 1885), 0, (Tag1 ([Tag1 (("t", 1894), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_state"), "t"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -273); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_stack"), "t"), 0, (0)), 100000000, 0, -274)], (0)), 100000000, 0, -272)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 38, 1012, 1021), ("src/parsexp_intf.ml", 38, 1012, 1079), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 20)), 1, 0); (("reset", 1895), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -271)], (0)), 100000000, 0, -270), (Tag1 (0, (Tag3 ((("t", 1894)), 0, (0)), 100000000, 0, -269), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -268), 0), 100000000, 0, -267), 0), 100000000, 0, -266), 0, (("src/parser_intf.ml", 18, 389, 391), ("src/parser_intf.ml", 18, 389, 434), 0), 0, Tag1 ("Parsexp__Parser_intf", 2)), 0); (("offset", 1896), ((Tag1 (0, (Tag3 ((("t", 1894)), 0, (0)), 100000000, 0, -265), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -264), 0), 100000000, 0, -263), 0, (("src/parser_intf.ml", 21, 484, 486), ("src/parser_intf.ml", 21, 484, 507), 0), 0, Tag1 ("Parsexp__Parser_intf", 3)), 0); (("line", 1897), ((Tag1 (0, (Tag3 ((("t", 1894)), 0, (0)), 100000000, 0, -262), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -261), 0), 100000000, 0, -260), 0, (("src/parser_intf.ml", 25, 540, 542), ("src/parser_intf.ml", 25, 540, 561), 0), 0, Tag1 ("Parsexp__Parser_intf", 4)), 0); (("column", 1898), ((Tag1 (0, (Tag3 ((("t", 1894)), 0, (0)), 100000000, 0, -259), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -258), 0), 100000000, 0, -257), 0, (("src/parser_intf.ml", 26, 562, 564), ("src/parser_intf.ml", 26, 562, 585), 0), 0, Tag1 ("Parsexp__Parser_intf", 5)), 0); (("position", 1899), ((Tag1 (0, (Tag3 ((("t", 1894)), 0, (0)), 100000000, 0, -256), (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -255), 0), 100000000, 0, -254), 0, (("src/parser_intf.ml", 27, 586, 588), ("src/parser_intf.ml", 27, 586, 621), 0), 0, Tag1 ("Parsexp__Parser_intf", 6)), 0); (("stop", 1900), ((Tag1 (0, (Tag3 ((("t", 1894)), 0, (0)), 100000000, 0, -253), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -252), 0), 100000000, 0, -251), 0, (("src/parser_intf.ml", 31, 779, 781), ("src/parser_intf.ml", 31, 779, 801), 0), 0, Tag1 ("Parsexp__Parser_intf", 7)), 0); Tag3 (("Read_only", 1901), 0, (Tag1 ([Tag1 (("t", 1904), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/parser_intf.ml", 111, 3276, 3282), ("src/parser_intf.ml", 111, 3276, 3288), 0), 0, 0, 0, Tag1 ("Parsexp__Parser_intf", 25)), 1, 0); (("offset", 1905), ((Tag1 (0, (Tag3 ((("t", 1904)), 0, (0)), 100000000, 0, -286), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -285), 0), 100000000, 0, -284), 0, (("src/parser_intf.ml", 113, 3290, 3296), ("src/parser_intf.ml", 113, 3290, 3317), 0), 0, Tag1 ("Parsexp__Parser_intf", 26)), 0); (("line", 1906), ((Tag1 (0, (Tag3 ((("t", 1904)), 0, (0)), 100000000, 0, -283), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -282), 0), 100000000, 0, -281), 0, (("src/parser_intf.ml", 114, 3318, 3324), ("src/parser_intf.ml", 114, 3318, 3343), 0), 0, Tag1 ("Parsexp__Parser_intf", 27)), 0); (("column", 1907), ((Tag1 (0, (Tag3 ((("t", 1904)), 0, (0)), 100000000, 0, -280), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -279), 0), 100000000, 0, -278), 0, (("src/parser_intf.ml", 115, 3344, 3350), ("src/parser_intf.ml", 115, 3344, 3371), 0), 0, Tag1 ("Parsexp__Parser_intf", 28)), 0); (("position", 1908), ((Tag1 (0, (Tag3 ((("t", 1904)), 0, (0)), 100000000, 0, -277), (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -276), 0), 100000000, 0, -275), 0, (("src/parser_intf.ml", 116, 3372, 3378), ("src/parser_intf.ml", 116, 3372, 3411), 0), 0, Tag1 ("Parsexp__Parser_intf", 29)), 0)]), 0, (("src/parser_intf.ml", 109, 3201, 3205), ("src/parser_intf.ml", 117, 3412, 3419), 0), Tag1 ("Parsexp__Parser_intf", 30)), 0, 0); (("create", 1902), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -250)], (0)), 100000000, 0, -249), (Tag1 (Tag1 ("no_sexp_is_error"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -248)], (0)), 100000000, 0, -247), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((("Read_only", 1901)), "t"), 0, (0)), 100000000, 0, -246), (Tag1 (0, (Tag3 ((("parsed_value", 1884)), 0, (0)), 100000000, 0, -245), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -244), 0), 100000000, 0, -243), 0), 100000000, 0, -242), (Tag3 ((("t", 1894)), 0, (0)), 100000000, 0, -241), 0), 100000000, 0, -240), 0), 100000000, 0, -239), 0), 100000000, 0, -238), 0, (("src/parser_intf.ml", 131, 4172, 4176), ("src/parser_intf.ml", 135, 4316, 4326), 0), 0, Tag1 ("Parsexp__Parser_intf", 31)), 0); (("old_parser_cont_state", 1903), ((Tag1 (0, (Tag3 ((("t", 1894)), 0, (0)), 100000000, 0, -237), (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Old_parser_cont_state"), "t"), 0, (0)), 100000000, 0, -236), 0), 100000000, 0, -235), 0, (("src/parser_intf.ml", 139, 4341, 4345), ("src/parser_intf.ml", 139, 4341, 4401), 0), 0, Tag1 ("Parsexp__Parser_intf", 32)), 0)]), 0, (("src/parser_intf.ml", 106, 3161, 3163), ("src/parser_intf.ml", 142, 4415, 4420), 0), Tag1 ("Parsexp__Parser_intf", 33)), 0, 0); Tag3 (("Stack", 1886), 0, (Tag1 ([Tag1 (("t", 1909), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_stack"), "t"), 0, (0)), 100000000, 0, -288)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 39, 1080, 1089), ("src/parsexp_intf.ml", 39, 1080, 1121), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 21)), 1, 0); (("empty", 1910), ((Tag3 ((("t", 1909)), 0, (0)), 100000000, 0, -287), 0, (("src/parser_intf.ml", 38, 919, 921), ("src/parser_intf.ml", 38, 919, 934), 0), 0, Tag1 ("Parsexp__Parser_intf", 10)), 0)]), 0, (("src/parser_intf.ml", 144, 4422, 4424), ("src/parser_intf.ml", 144, 4422, 4444), 0), Tag1 ("Parsexp__Parser_intf", 34)), 0, 0); (("feed", 1887), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1885)), "t"), 0, (0)), 100000000, 0, -233), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -232), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1886)), "t"), 0, (0)), 100000000, 0, -231), (Tag3 (Tag1 ((("Stack", 1886)), "t"), 0, (0)), 100000000, 0, -230), 0), 100000000, 0, -229), 0), 100000000, 0, -228), 0), 100000000, 0, -227), 0, (("src/parser_intf.ml", 146, 4446, 4448), ("src/parser_intf.ml", 146, 4446, 4496), 0), 0, Tag1 ("Parsexp__Parser_intf", 35)), 0); (("feed_eoi", 1888), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1885)), "t"), 0, (0)), 100000000, 0, -226), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1886)), "t"), 0, (0)), 100000000, 0, -225), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -224), 0), 100000000, 0, -223), 0), 100000000, 0, -222), 0, (("src/parser_intf.ml", 147, 4497, 4499), ("src/parser_intf.ml", 147, 4497, 4540), 0), 0, Tag1 ("Parsexp__Parser_intf", 36)), 0); (("feed_string", 1889), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1885)), "t"), 0, (0)), 100000000, 0, -221), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -220), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1886)), "t"), 0, (0)), 100000000, 0, -219), (Tag3 (Tag1 ((("Stack", 1886)), "t"), 0, (0)), 100000000, 0, -218), 0), 100000000, 0, -217), 0), 100000000, 0, -216), 0), 100000000, 0, -215), 0, (("src/parser_intf.ml", 148, 4541, 4543), ("src/parser_intf.ml", 148, 4541, 4600), 0), 0, Tag1 ("Parsexp__Parser_intf", 37)), 0); (("feed_substring", 1890), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1885)), "t"), 0, (0)), 100000000, 0, -214), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -213), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -212), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -211), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1886)), "t"), 0, (0)), 100000000, 0, -210), (Tag3 (Tag1 ((("Stack", 1886)), "t"), 0, (0)), 100000000, 0, -209), 0), 100000000, 0, -208), 0), 100000000, 0, -207), 0), 100000000, 0, -206), 0), 100000000, 0, -205), 0), 100000000, 0, -204), 0, (("src/parser_intf.ml", 149, 4601, 4603), ("src/parser_intf.ml", 149, 4601, 4685), 0), 0, Tag1 ("Parsexp__Parser_intf", 38)), 0); (("feed_bytes", 1891), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1885)), "t"), 0, (0)), 100000000, 0, -203), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -202), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1886)), "t"), 0, (0)), 100000000, 0, -201), (Tag3 (Tag1 ((("Stack", 1886)), "t"), 0, (0)), 100000000, 0, -200), 0), 100000000, 0, -199), 0), 100000000, 0, -198), 0), 100000000, 0, -197), 0, (("src/parser_intf.ml", 150, 4686, 4688), ("src/parser_intf.ml", 150, 4686, 4743), 0), 0, Tag1 ("Parsexp__Parser_intf", 39)), 0); (("feed_subbytes", 1892), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1885)), "t"), 0, (0)), 100000000, 0, -196), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -195), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -194), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -193), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1886)), "t"), 0, (0)), 100000000, 0, -192), (Tag3 (Tag1 ((("Stack", 1886)), "t"), 0, (0)), 100000000, 0, -191), 0), 100000000, 0, -190), 0), 100000000, 0, -189), 0), 100000000, 0, -188), 0), 100000000, 0, -187), 0), 100000000, 0, -186), 0, (("src/parser_intf.ml", 151, 4744, 4746), ("src/parser_intf.ml", 151, 4744, 4826), 0), 0, Tag1 ("Parsexp__Parser_intf", 40)), 0); Tag3 (("Lexbuf_consumer", 1893), 0, (Tag1 ([Tag1 (("t", 1911), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/parser_intf.ml", 154, 4859, 4863), ("src/parser_intf.ml", 154, 4859, 4869), 0), 0, 0, 0, Tag1 ("Parsexp__Parser_intf", 41)), 1, 0); (("create", 1912), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -302), (Tag3 ((("t", 1911)), 0, (0)), 100000000, 0, -301), 0), 100000000, 0, -300), 0, (("src/parser_intf.ml", 156, 4871, 4875), ("src/parser_intf.ml", 156, 4871, 4897), 0), 0, Tag1 ("Parsexp__Parser_intf", 42)), 0); (("parse", 1913), ((Tag1 (0, (Tag3 ((("t", 1911)), 0, (0)), 100000000, 0, -299), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -298), (Tag3 ((("parsed_value", 1884)), 0, (0)), 100000000, 0, -297), 0), 100000000, 0, -296), 0), 100000000, 0, -295), 0, (("src/parser_intf.ml", 159, 4972, 4976), ("src/parser_intf.ml", 159, 4972, 5022), 0), 0, Tag1 ("Parsexp__Parser_intf", 43)), 0); (("parse_opt", 1914), ((Tag1 (0, (Tag3 ((("t", 1911)), 0, (0)), 100000000, 0, -294), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -293), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("parsed_value", 1884)), 0, (0)), 100000000, 0, -292)], (0)), 100000000, 0, -291), 0), 100000000, 0, -290), 0), 100000000, 0, -289), 0, (("src/parser_intf.ml", 163, 5184, 5188), ("src/parser_intf.ml", 163, 5184, 5245), 0), 0, Tag1 ("Parsexp__Parser_intf", 44)), 0)]), 0, (("src/parser_intf.ml", 153, 4828, 4830), ("src/parser_intf.ml", 164, 5246, 5251), 0), Tag1 ("Parsexp__Parser_intf", 45)), 0, 0)]), 0, (("src/parsexp_intf.ml", 35, 942, 944), ("src/parsexp_intf.ml", 39, 1080, 1121), 0), Tag1 ("Parsexp__Parsexp_intf", 22)), 0, 0); Tag3 (("Single_and_positions", 1828), 0, (Tag1 ([Tag1 (("parsed_value", 1915), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -360); (Tag3 (Tag1 ((("Positions", 1818)), "t"), 0, (0)), 100000000, 0, -361)]), 100000000, 0, -359)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 43, 1166, 1175), ("src/parsexp_intf.ml", 43, 1166, 1215), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 23)), 1, 0); Tag3 (("State", 1916), 0, (Tag1 ([Tag1 (("t", 1926), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_state"), "t"), [(Tag3 (Tag1 (Tag1 ((("Positions", 1818)), "Builder"), "t"), 0, (0)), 100000000, 0, -390); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_stack"), "t"), 0, (0)), 100000000, 0, -391)], (0)), 100000000, 0, -389)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 44, 1216, 1225), ("src/parsexp_intf.ml", 44, 1216, 1298), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 24)), 1, 0); (("create", 1927), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -388)], (0)), 100000000, 0, -387), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -386), (Tag3 ((("t", 1926)), 0, (0)), 100000000, 0, -385), 0), 100000000, 0, -384), 0), 100000000, 0, -383), 0, (("src/parser_intf.ml", 9, 192, 194), ("src/parser_intf.ml", 9, 192, 238), 0), 0, Tag1 ("Parsexp__Parser_intf", 1)), 0); (("reset", 1928), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -382)], (0)), 100000000, 0, -381), (Tag1 (0, (Tag3 ((("t", 1926)), 0, (0)), 100000000, 0, -380), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -379), 0), 100000000, 0, -378), 0), 100000000, 0, -377), 0, (("src/parser_intf.ml", 18, 389, 391), ("src/parser_intf.ml", 18, 389, 434), 0), 0, Tag1 ("Parsexp__Parser_intf", 2)), 0); (("offset", 1929), ((Tag1 (0, (Tag3 ((("t", 1926)), 0, (0)), 100000000, 0, -376), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -375), 0), 100000000, 0, -374), 0, (("src/parser_intf.ml", 21, 484, 486), ("src/parser_intf.ml", 21, 484, 507), 0), 0, Tag1 ("Parsexp__Parser_intf", 3)), 0); (("line", 1930), ((Tag1 (0, (Tag3 ((("t", 1926)), 0, (0)), 100000000, 0, -373), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -372), 0), 100000000, 0, -371), 0, (("src/parser_intf.ml", 25, 540, 542), ("src/parser_intf.ml", 25, 540, 561), 0), 0, Tag1 ("Parsexp__Parser_intf", 4)), 0); (("column", 1931), ((Tag1 (0, (Tag3 ((("t", 1926)), 0, (0)), 100000000, 0, -370), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -369), 0), 100000000, 0, -368), 0, (("src/parser_intf.ml", 26, 562, 564), ("src/parser_intf.ml", 26, 562, 585), 0), 0, Tag1 ("Parsexp__Parser_intf", 5)), 0); (("position", 1932), ((Tag1 (0, (Tag3 ((("t", 1926)), 0, (0)), 100000000, 0, -367), (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -366), 0), 100000000, 0, -365), 0, (("src/parser_intf.ml", 27, 586, 588), ("src/parser_intf.ml", 27, 586, 621), 0), 0, Tag1 ("Parsexp__Parser_intf", 6)), 0); (("stop", 1933), ((Tag1 (0, (Tag3 ((("t", 1926)), 0, (0)), 100000000, 0, -364), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -363), 0), 100000000, 0, -362), 0, (("src/parser_intf.ml", 31, 779, 781), ("src/parser_intf.ml", 31, 779, 801), 0), 0, Tag1 ("Parsexp__Parser_intf", 7)), 0)]), 0, (("src/parser_intf.ml", 45, 1020, 1022), ("src/parser_intf.ml", 45, 1020, 1042), 0), Tag1 ("Parsexp__Parser_intf", 13)), 0, 0); Tag3 (("Stack", 1917), 0, (Tag1 ([Tag1 (("t", 1934), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_stack"), "t"), 0, (0)), 100000000, 0, -393)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 45, 1299, 1308), ("src/parsexp_intf.ml", 45, 1299, 1340), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 25)), 1, 0); (("empty", 1935), ((Tag3 ((("t", 1934)), 0, (0)), 100000000, 0, -392), 0, (("src/parser_intf.ml", 38, 919, 921), ("src/parser_intf.ml", 38, 919, 934), 0), 0, Tag1 ("Parsexp__Parser_intf", 10)), 0)]), 0, (("src/parser_intf.ml", 46, 1043, 1045), ("src/parser_intf.ml", 46, 1043, 1065), 0), Tag1 ("Parsexp__Parser_intf", 14)), 0, 0); (("feed", 1918), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1916)), "t"), 0, (0)), 100000000, 0, -358), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -357), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1917)), "t"), 0, (0)), 100000000, 0, -356), (Tag3 (Tag1 ((("Stack", 1917)), "t"), 0, (0)), 100000000, 0, -355), 0), 100000000, 0, -354), 0), 100000000, 0, -353), 0), 100000000, 0, -352), 0, (("src/parser_intf.ml", 49, 1152, 1154), ("src/parser_intf.ml", 49, 1152, 1202), 0), 0, Tag1 ("Parsexp__Parser_intf", 15)), 0); (("feed_eoi", 1919), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1916)), "t"), 0, (0)), 100000000, 0, -351), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1917)), "t"), 0, (0)), 100000000, 0, -350), (Tag3 ((("parsed_value", 1915)), 0, (0)), 100000000, 0, -349), 0), 100000000, 0, -348), 0), 100000000, 0, -347), 0, (("src/parser_intf.ml", 53, 1316, 1318), ("src/parser_intf.ml", 53, 1316, 1367), 0), 0, Tag1 ("Parsexp__Parser_intf", 16)), 0); (("feed_string", 1920), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1916)), "t"), 0, (0)), 100000000, 0, -346), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -345), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1917)), "t"), 0, (0)), 100000000, 0, -344), (Tag3 (Tag1 ((("Stack", 1917)), "t"), 0, (0)), 100000000, 0, -343), 0), 100000000, 0, -342), 0), 100000000, 0, -341), 0), 100000000, 0, -340), 0, (("src/parser_intf.ml", 57, 1405, 1407), ("src/parser_intf.ml", 57, 1405, 1464), 0), 0, Tag1 ("Parsexp__Parser_intf", 17)), 0); (("feed_substring", 1921), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1916)), "t"), 0, (0)), 100000000, 0, -339), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -338), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -337), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -336), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1917)), "t"), 0, (0)), 100000000, 0, -335), (Tag3 (Tag1 ((("Stack", 1917)), "t"), 0, (0)), 100000000, 0, -334), 0), 100000000, 0, -333), 0), 100000000, 0, -332), 0), 100000000, 0, -331), 0), 100000000, 0, -330), 0), 100000000, 0, -329), 0, (("src/parser_intf.ml", 58, 1465, 1467), ("src/parser_intf.ml", 58, 1465, 1549), 0), 0, Tag1 ("Parsexp__Parser_intf", 18)), 0); (("feed_bytes", 1922), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1916)), "t"), 0, (0)), 100000000, 0, -328), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -327), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1917)), "t"), 0, (0)), 100000000, 0, -326), (Tag3 (Tag1 ((("Stack", 1917)), "t"), 0, (0)), 100000000, 0, -325), 0), 100000000, 0, -324), 0), 100000000, 0, -323), 0), 100000000, 0, -322), 0, (("src/parser_intf.ml", 59, 1550, 1552), ("src/parser_intf.ml", 59, 1550, 1607), 0), 0, Tag1 ("Parsexp__Parser_intf", 19)), 0); (("feed_subbytes", 1923), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1916)), "t"), 0, (0)), 100000000, 0, -321), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -320), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -319), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -318), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1917)), "t"), 0, (0)), 100000000, 0, -317), (Tag3 (Tag1 ((("Stack", 1917)), "t"), 0, (0)), 100000000, 0, -316), 0), 100000000, 0, -315), 0), 100000000, 0, -314), 0), 100000000, 0, -313), 0), 100000000, 0, -312), 0), 100000000, 0, -311), 0, (("src/parser_intf.ml", 60, 1608, 1610), ("src/parser_intf.ml", 60, 1608, 1690), 0), 0, Tag1 ("Parsexp__Parser_intf", 20)), 0); (("parse_string", 1924), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -310), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("parsed_value", 1915)), 0, (0)), 100000000, 0, -308); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Parse_error"), "t"), 0, (0)), 100000000, 0, -309)], (0)), 100000000, 0, -307), 0), 100000000, 0, -306), 0, (("src/parser_intf.ml", 64, 1727, 1729), ("src/parser_intf.ml", 64, 1727, 1794), 0), 0, Tag1 ("Parsexp__Parser_intf", 21)), 0); (("parse_string_exn", 1925), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -305), (Tag3 ((("parsed_value", 1915)), 0, (0)), 100000000, 0, -304), 0), 100000000, 0, -303), 0, (("src/parser_intf.ml", 65, 1795, 1797), ("src/parser_intf.ml", 65, 1795, 1842), 0), 0, Tag1 ("Parsexp__Parser_intf", 22)), 0)]), 0, (("src/parsexp_intf.ml", 41, 1123, 1125), ("src/parsexp_intf.ml", 45, 1299, 1340), 0), Tag1 ("Parsexp__Parsexp_intf", 26)), 0, 0); Tag3 (("Many_and_positions", 1829), 0, (Tag1 ([Tag1 (("parsed_value", 1936), (0, 0, 0, 1, ((Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -452)], (0)), 100000000, 0, -451); (Tag3 (Tag1 ((("Positions", 1818)), "t"), 0, (0)), 100000000, 0, -453)]), 100000000, 0, -450)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 49, 1383, 1392), ("src/parsexp_intf.ml", 49, 1383, 1437), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 27)), 1, 0); Tag3 (("State", 1937), 0, (Tag1 ([Tag1 (("t", 1947), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_state"), "t"), [(Tag3 (Tag1 (Tag1 ((("Positions", 1818)), "Builder"), "t"), 0, (0)), 100000000, 0, -482); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_stack"), "t"), 0, (0)), 100000000, 0, -483)], (0)), 100000000, 0, -481)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 50, 1438, 1447), ("src/parsexp_intf.ml", 50, 1438, 1520), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 28)), 1, 0); (("create", 1948), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -480)], (0)), 100000000, 0, -479), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -478), (Tag3 ((("t", 1947)), 0, (0)), 100000000, 0, -477), 0), 100000000, 0, -476), 0), 100000000, 0, -475), 0, (("src/parser_intf.ml", 9, 192, 194), ("src/parser_intf.ml", 9, 192, 238), 0), 0, Tag1 ("Parsexp__Parser_intf", 1)), 0); (("reset", 1949), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -474)], (0)), 100000000, 0, -473), (Tag1 (0, (Tag3 ((("t", 1947)), 0, (0)), 100000000, 0, -472), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -471), 0), 100000000, 0, -470), 0), 100000000, 0, -469), 0, (("src/parser_intf.ml", 18, 389, 391), ("src/parser_intf.ml", 18, 389, 434), 0), 0, Tag1 ("Parsexp__Parser_intf", 2)), 0); (("offset", 1950), ((Tag1 (0, (Tag3 ((("t", 1947)), 0, (0)), 100000000, 0, -468), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -467), 0), 100000000, 0, -466), 0, (("src/parser_intf.ml", 21, 484, 486), ("src/parser_intf.ml", 21, 484, 507), 0), 0, Tag1 ("Parsexp__Parser_intf", 3)), 0); (("line", 1951), ((Tag1 (0, (Tag3 ((("t", 1947)), 0, (0)), 100000000, 0, -465), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -464), 0), 100000000, 0, -463), 0, (("src/parser_intf.ml", 25, 540, 542), ("src/parser_intf.ml", 25, 540, 561), 0), 0, Tag1 ("Parsexp__Parser_intf", 4)), 0); (("column", 1952), ((Tag1 (0, (Tag3 ((("t", 1947)), 0, (0)), 100000000, 0, -462), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -461), 0), 100000000, 0, -460), 0, (("src/parser_intf.ml", 26, 562, 564), ("src/parser_intf.ml", 26, 562, 585), 0), 0, Tag1 ("Parsexp__Parser_intf", 5)), 0); (("position", 1953), ((Tag1 (0, (Tag3 ((("t", 1947)), 0, (0)), 100000000, 0, -459), (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -458), 0), 100000000, 0, -457), 0, (("src/parser_intf.ml", 27, 586, 588), ("src/parser_intf.ml", 27, 586, 621), 0), 0, Tag1 ("Parsexp__Parser_intf", 6)), 0); (("stop", 1954), ((Tag1 (0, (Tag3 ((("t", 1947)), 0, (0)), 100000000, 0, -456), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -455), 0), 100000000, 0, -454), 0, (("src/parser_intf.ml", 31, 779, 781), ("src/parser_intf.ml", 31, 779, 801), 0), 0, Tag1 ("Parsexp__Parser_intf", 7)), 0)]), 0, (("src/parser_intf.ml", 45, 1020, 1022), ("src/parser_intf.ml", 45, 1020, 1042), 0), Tag1 ("Parsexp__Parser_intf", 13)), 0, 0); Tag3 (("Stack", 1938), 0, (Tag1 ([Tag1 (("t", 1955), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_stack"), "t"), 0, (0)), 100000000, 0, -485)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 51, 1521, 1530), ("src/parsexp_intf.ml", 51, 1521, 1562), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 29)), 1, 0); (("empty", 1956), ((Tag3 ((("t", 1955)), 0, (0)), 100000000, 0, -484), 0, (("src/parser_intf.ml", 38, 919, 921), ("src/parser_intf.ml", 38, 919, 934), 0), 0, Tag1 ("Parsexp__Parser_intf", 10)), 0)]), 0, (("src/parser_intf.ml", 46, 1043, 1045), ("src/parser_intf.ml", 46, 1043, 1065), 0), Tag1 ("Parsexp__Parser_intf", 14)), 0, 0); (("feed", 1939), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1937)), "t"), 0, (0)), 100000000, 0, -449), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -448), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1938)), "t"), 0, (0)), 100000000, 0, -447), (Tag3 (Tag1 ((("Stack", 1938)), "t"), 0, (0)), 100000000, 0, -446), 0), 100000000, 0, -445), 0), 100000000, 0, -444), 0), 100000000, 0, -443), 0, (("src/parser_intf.ml", 49, 1152, 1154), ("src/parser_intf.ml", 49, 1152, 1202), 0), 0, Tag1 ("Parsexp__Parser_intf", 15)), 0); (("feed_eoi", 1940), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1937)), "t"), 0, (0)), 100000000, 0, -442), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1938)), "t"), 0, (0)), 100000000, 0, -441), (Tag3 ((("parsed_value", 1936)), 0, (0)), 100000000, 0, -440), 0), 100000000, 0, -439), 0), 100000000, 0, -438), 0, (("src/parser_intf.ml", 53, 1316, 1318), ("src/parser_intf.ml", 53, 1316, 1367), 0), 0, Tag1 ("Parsexp__Parser_intf", 16)), 0); (("feed_string", 1941), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1937)), "t"), 0, (0)), 100000000, 0, -437), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -436), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1938)), "t"), 0, (0)), 100000000, 0, -435), (Tag3 (Tag1 ((("Stack", 1938)), "t"), 0, (0)), 100000000, 0, -434), 0), 100000000, 0, -433), 0), 100000000, 0, -432), 0), 100000000, 0, -431), 0, (("src/parser_intf.ml", 57, 1405, 1407), ("src/parser_intf.ml", 57, 1405, 1464), 0), 0, Tag1 ("Parsexp__Parser_intf", 17)), 0); (("feed_substring", 1942), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1937)), "t"), 0, (0)), 100000000, 0, -430), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -429), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -428), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -427), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1938)), "t"), 0, (0)), 100000000, 0, -426), (Tag3 (Tag1 ((("Stack", 1938)), "t"), 0, (0)), 100000000, 0, -425), 0), 100000000, 0, -424), 0), 100000000, 0, -423), 0), 100000000, 0, -422), 0), 100000000, 0, -421), 0), 100000000, 0, -420), 0, (("src/parser_intf.ml", 58, 1465, 1467), ("src/parser_intf.ml", 58, 1465, 1549), 0), 0, Tag1 ("Parsexp__Parser_intf", 18)), 0); (("feed_bytes", 1943), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1937)), "t"), 0, (0)), 100000000, 0, -419), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -418), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1938)), "t"), 0, (0)), 100000000, 0, -417), (Tag3 (Tag1 ((("Stack", 1938)), "t"), 0, (0)), 100000000, 0, -416), 0), 100000000, 0, -415), 0), 100000000, 0, -414), 0), 100000000, 0, -413), 0, (("src/parser_intf.ml", 59, 1550, 1552), ("src/parser_intf.ml", 59, 1550, 1607), 0), 0, Tag1 ("Parsexp__Parser_intf", 19)), 0); (("feed_subbytes", 1944), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1937)), "t"), 0, (0)), 100000000, 0, -412), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -411), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -410), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -409), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1938)), "t"), 0, (0)), 100000000, 0, -408), (Tag3 (Tag1 ((("Stack", 1938)), "t"), 0, (0)), 100000000, 0, -407), 0), 100000000, 0, -406), 0), 100000000, 0, -405), 0), 100000000, 0, -404), 0), 100000000, 0, -403), 0), 100000000, 0, -402), 0, (("src/parser_intf.ml", 60, 1608, 1610), ("src/parser_intf.ml", 60, 1608, 1690), 0), 0, Tag1 ("Parsexp__Parser_intf", 20)), 0); (("parse_string", 1945), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -401), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("parsed_value", 1936)), 0, (0)), 100000000, 0, -399); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Parse_error"), "t"), 0, (0)), 100000000, 0, -400)], (0)), 100000000, 0, -398), 0), 100000000, 0, -397), 0, (("src/parser_intf.ml", 64, 1727, 1729), ("src/parser_intf.ml", 64, 1727, 1794), 0), 0, Tag1 ("Parsexp__Parser_intf", 21)), 0); (("parse_string_exn", 1946), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -396), (Tag3 ((("parsed_value", 1936)), 0, (0)), 100000000, 0, -395), 0), 100000000, 0, -394), 0, (("src/parser_intf.ml", 65, 1795, 1797), ("src/parser_intf.ml", 65, 1795, 1842), 0), 0, Tag1 ("Parsexp__Parser_intf", 22)), 0)]), 0, (("src/parsexp_intf.ml", 47, 1342, 1344), ("src/parsexp_intf.ml", 51, 1521, 1562), 0), Tag1 ("Parsexp__Parsexp_intf", 30)), 0, 0); Tag3 (("Eager_and_positions", 1830), 0, (Tag1 ([Tag1 (("parsed_value", 1957), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -535); (Tag3 (Tag1 ((("Positions", 1818)), "t"), 0, (0)), 100000000, 0, -536)]), 100000000, 0, -534)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 55, 1612, 1621), ("src/parsexp_intf.ml", 55, 1612, 1661), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 31)), 1, 0); Tag3 (("State", 1958), 0, (Tag1 ([Tag1 (("t", 1967), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_state"), "t"), [(Tag3 (Tag1 (Tag1 ((("Positions", 1818)), "Builder"), "t"), 0, (0)), 100000000, 0, -575); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_stack"), "t"), 0, (0)), 100000000, 0, -576)], (0)), 100000000, 0, -574)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 56, 1662, 1671), ("src/parsexp_intf.ml", 56, 1662, 1744), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 32)), 1, 0); (("reset", 1968), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -573)], (0)), 100000000, 0, -572), (Tag1 (0, (Tag3 ((("t", 1967)), 0, (0)), 100000000, 0, -571), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -570), 0), 100000000, 0, -569), 0), 100000000, 0, -568), 0, (("src/parser_intf.ml", 18, 389, 391), ("src/parser_intf.ml", 18, 389, 434), 0), 0, Tag1 ("Parsexp__Parser_intf", 2)), 0); (("offset", 1969), ((Tag1 (0, (Tag3 ((("t", 1967)), 0, (0)), 100000000, 0, -567), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -566), 0), 100000000, 0, -565), 0, (("src/parser_intf.ml", 21, 484, 486), ("src/parser_intf.ml", 21, 484, 507), 0), 0, Tag1 ("Parsexp__Parser_intf", 3)), 0); (("line", 1970), ((Tag1 (0, (Tag3 ((("t", 1967)), 0, (0)), 100000000, 0, -564), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -563), 0), 100000000, 0, -562), 0, (("src/parser_intf.ml", 25, 540, 542), ("src/parser_intf.ml", 25, 540, 561), 0), 0, Tag1 ("Parsexp__Parser_intf", 4)), 0); (("column", 1971), ((Tag1 (0, (Tag3 ((("t", 1967)), 0, (0)), 100000000, 0, -561), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -560), 0), 100000000, 0, -559), 0, (("src/parser_intf.ml", 26, 562, 564), ("src/parser_intf.ml", 26, 562, 585), 0), 0, Tag1 ("Parsexp__Parser_intf", 5)), 0); (("position", 1972), ((Tag1 (0, (Tag3 ((("t", 1967)), 0, (0)), 100000000, 0, -558), (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -557), 0), 100000000, 0, -556), 0, (("src/parser_intf.ml", 27, 586, 588), ("src/parser_intf.ml", 27, 586, 621), 0), 0, Tag1 ("Parsexp__Parser_intf", 6)), 0); (("stop", 1973), ((Tag1 (0, (Tag3 ((("t", 1967)), 0, (0)), 100000000, 0, -555), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -554), 0), 100000000, 0, -553), 0, (("src/parser_intf.ml", 31, 779, 781), ("src/parser_intf.ml", 31, 779, 801), 0), 0, Tag1 ("Parsexp__Parser_intf", 7)), 0); Tag3 (("Read_only", 1974), 0, (Tag1 ([Tag1 (("t", 1977), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/parser_intf.ml", 111, 3276, 3282), ("src/parser_intf.ml", 111, 3276, 3288), 0), 0, 0, 0, Tag1 ("Parsexp__Parser_intf", 25)), 1, 0); (("offset", 1978), ((Tag1 (0, (Tag3 ((("t", 1977)), 0, (0)), 100000000, 0, -588), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -587), 0), 100000000, 0, -586), 0, (("src/parser_intf.ml", 113, 3290, 3296), ("src/parser_intf.ml", 113, 3290, 3317), 0), 0, Tag1 ("Parsexp__Parser_intf", 26)), 0); (("line", 1979), ((Tag1 (0, (Tag3 ((("t", 1977)), 0, (0)), 100000000, 0, -585), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -584), 0), 100000000, 0, -583), 0, (("src/parser_intf.ml", 114, 3318, 3324), ("src/parser_intf.ml", 114, 3318, 3343), 0), 0, Tag1 ("Parsexp__Parser_intf", 27)), 0); (("column", 1980), ((Tag1 (0, (Tag3 ((("t", 1977)), 0, (0)), 100000000, 0, -582), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -581), 0), 100000000, 0, -580), 0, (("src/parser_intf.ml", 115, 3344, 3350), ("src/parser_intf.ml", 115, 3344, 3371), 0), 0, Tag1 ("Parsexp__Parser_intf", 28)), 0); (("position", 1981), ((Tag1 (0, (Tag3 ((("t", 1977)), 0, (0)), 100000000, 0, -579), (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -578), 0), 100000000, 0, -577), 0, (("src/parser_intf.ml", 116, 3372, 3378), ("src/parser_intf.ml", 116, 3372, 3411), 0), 0, Tag1 ("Parsexp__Parser_intf", 29)), 0)]), 0, (("src/parser_intf.ml", 109, 3201, 3205), ("src/parser_intf.ml", 117, 3412, 3419), 0), Tag1 ("Parsexp__Parser_intf", 30)), 0, 0); (("create", 1975), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -552)], (0)), 100000000, 0, -551), (Tag1 (Tag1 ("no_sexp_is_error"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -550)], (0)), 100000000, 0, -549), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((("Read_only", 1974)), "t"), 0, (0)), 100000000, 0, -548), (Tag1 (0, (Tag3 ((("parsed_value", 1957)), 0, (0)), 100000000, 0, -547), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -546), 0), 100000000, 0, -545), 0), 100000000, 0, -544), (Tag3 ((("t", 1967)), 0, (0)), 100000000, 0, -543), 0), 100000000, 0, -542), 0), 100000000, 0, -541), 0), 100000000, 0, -540), 0, (("src/parser_intf.ml", 131, 4172, 4176), ("src/parser_intf.ml", 135, 4316, 4326), 0), 0, Tag1 ("Parsexp__Parser_intf", 31)), 0); (("old_parser_cont_state", 1976), ((Tag1 (0, (Tag3 ((("t", 1967)), 0, (0)), 100000000, 0, -539), (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Old_parser_cont_state"), "t"), 0, (0)), 100000000, 0, -538), 0), 100000000, 0, -537), 0, (("src/parser_intf.ml", 139, 4341, 4345), ("src/parser_intf.ml", 139, 4341, 4401), 0), 0, Tag1 ("Parsexp__Parser_intf", 32)), 0)]), 0, (("src/parser_intf.ml", 106, 3161, 3163), ("src/parser_intf.ml", 142, 4415, 4420), 0), Tag1 ("Parsexp__Parser_intf", 33)), 0, 0); Tag3 (("Stack", 1959), 0, (Tag1 ([Tag1 (("t", 1982), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_stack"), "t"), 0, (0)), 100000000, 0, -590)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 57, 1745, 1754), ("src/parsexp_intf.ml", 57, 1745, 1786), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 33)), 1, 0); (("empty", 1983), ((Tag3 ((("t", 1982)), 0, (0)), 100000000, 0, -589), 0, (("src/parser_intf.ml", 38, 919, 921), ("src/parser_intf.ml", 38, 919, 934), 0), 0, Tag1 ("Parsexp__Parser_intf", 10)), 0)]), 0, (("src/parser_intf.ml", 144, 4422, 4424), ("src/parser_intf.ml", 144, 4422, 4444), 0), Tag1 ("Parsexp__Parser_intf", 34)), 0, 0); (("feed", 1960), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1958)), "t"), 0, (0)), 100000000, 0, -533), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -532), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1959)), "t"), 0, (0)), 100000000, 0, -531), (Tag3 (Tag1 ((("Stack", 1959)), "t"), 0, (0)), 100000000, 0, -530), 0), 100000000, 0, -529), 0), 100000000, 0, -528), 0), 100000000, 0, -527), 0, (("src/parser_intf.ml", 146, 4446, 4448), ("src/parser_intf.ml", 146, 4446, 4496), 0), 0, Tag1 ("Parsexp__Parser_intf", 35)), 0); (("feed_eoi", 1961), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1958)), "t"), 0, (0)), 100000000, 0, -526), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1959)), "t"), 0, (0)), 100000000, 0, -525), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -524), 0), 100000000, 0, -523), 0), 100000000, 0, -522), 0, (("src/parser_intf.ml", 147, 4497, 4499), ("src/parser_intf.ml", 147, 4497, 4540), 0), 0, Tag1 ("Parsexp__Parser_intf", 36)), 0); (("feed_string", 1962), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1958)), "t"), 0, (0)), 100000000, 0, -521), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -520), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1959)), "t"), 0, (0)), 100000000, 0, -519), (Tag3 (Tag1 ((("Stack", 1959)), "t"), 0, (0)), 100000000, 0, -518), 0), 100000000, 0, -517), 0), 100000000, 0, -516), 0), 100000000, 0, -515), 0, (("src/parser_intf.ml", 148, 4541, 4543), ("src/parser_intf.ml", 148, 4541, 4600), 0), 0, Tag1 ("Parsexp__Parser_intf", 37)), 0); (("feed_substring", 1963), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1958)), "t"), 0, (0)), 100000000, 0, -514), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -513), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -512), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -511), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1959)), "t"), 0, (0)), 100000000, 0, -510), (Tag3 (Tag1 ((("Stack", 1959)), "t"), 0, (0)), 100000000, 0, -509), 0), 100000000, 0, -508), 0), 100000000, 0, -507), 0), 100000000, 0, -506), 0), 100000000, 0, -505), 0), 100000000, 0, -504), 0, (("src/parser_intf.ml", 149, 4601, 4603), ("src/parser_intf.ml", 149, 4601, 4685), 0), 0, Tag1 ("Parsexp__Parser_intf", 38)), 0); (("feed_bytes", 1964), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1958)), "t"), 0, (0)), 100000000, 0, -503), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -502), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1959)), "t"), 0, (0)), 100000000, 0, -501), (Tag3 (Tag1 ((("Stack", 1959)), "t"), 0, (0)), 100000000, 0, -500), 0), 100000000, 0, -499), 0), 100000000, 0, -498), 0), 100000000, 0, -497), 0, (("src/parser_intf.ml", 150, 4686, 4688), ("src/parser_intf.ml", 150, 4686, 4743), 0), 0, Tag1 ("Parsexp__Parser_intf", 39)), 0); (("feed_subbytes", 1965), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1958)), "t"), 0, (0)), 100000000, 0, -496), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -495), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -494), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -493), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1959)), "t"), 0, (0)), 100000000, 0, -492), (Tag3 (Tag1 ((("Stack", 1959)), "t"), 0, (0)), 100000000, 0, -491), 0), 100000000, 0, -490), 0), 100000000, 0, -489), 0), 100000000, 0, -488), 0), 100000000, 0, -487), 0), 100000000, 0, -486), 0, (("src/parser_intf.ml", 151, 4744, 4746), ("src/parser_intf.ml", 151, 4744, 4826), 0), 0, Tag1 ("Parsexp__Parser_intf", 40)), 0); Tag3 (("Lexbuf_consumer", 1966), 0, (Tag1 ([Tag1 (("t", 1984), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/parser_intf.ml", 154, 4859, 4863), ("src/parser_intf.ml", 154, 4859, 4869), 0), 0, 0, 0, Tag1 ("Parsexp__Parser_intf", 41)), 1, 0); (("create", 1985), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -604), (Tag3 ((("t", 1984)), 0, (0)), 100000000, 0, -603), 0), 100000000, 0, -602), 0, (("src/parser_intf.ml", 156, 4871, 4875), ("src/parser_intf.ml", 156, 4871, 4897), 0), 0, Tag1 ("Parsexp__Parser_intf", 42)), 0); (("parse", 1986), ((Tag1 (0, (Tag3 ((("t", 1984)), 0, (0)), 100000000, 0, -601), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -600), (Tag3 ((("parsed_value", 1957)), 0, (0)), 100000000, 0, -599), 0), 100000000, 0, -598), 0), 100000000, 0, -597), 0, (("src/parser_intf.ml", 159, 4972, 4976), ("src/parser_intf.ml", 159, 4972, 5022), 0), 0, Tag1 ("Parsexp__Parser_intf", 43)), 0); (("parse_opt", 1987), ((Tag1 (0, (Tag3 ((("t", 1984)), 0, (0)), 100000000, 0, -596), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -595), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("parsed_value", 1957)), 0, (0)), 100000000, 0, -594)], (0)), 100000000, 0, -593), 0), 100000000, 0, -592), 0), 100000000, 0, -591), 0, (("src/parser_intf.ml", 163, 5184, 5188), ("src/parser_intf.ml", 163, 5184, 5245), 0), 0, Tag1 ("Parsexp__Parser_intf", 44)), 0)]), 0, (("src/parser_intf.ml", 153, 4828, 4830), ("src/parser_intf.ml", 164, 5246, 5251), 0), Tag1 ("Parsexp__Parser_intf", 45)), 0, 0)]), 0, (("src/parsexp_intf.ml", 53, 1564, 1566), ("src/parsexp_intf.ml", 57, 1745, 1786), 0), Tag1 ("Parsexp__Parsexp_intf", 34)), 0, 0); Tag3 (("Single_just_positions", 1831), 0, (Tag1 ([Tag1 (("parsed_value", 1988), (0, 0, 0, 1, ((Tag3 (Tag1 ((("Positions", 1818)), "t"), 0, (0)), 100000000, 0, -661)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 61, 1832, 1841), ("src/parsexp_intf.ml", 61, 1832, 1872), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 35)), 1, 0); Tag3 (("State", 1989), 0, (Tag1 ([Tag1 (("t", 1999), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_state"), "t"), [(Tag3 (Tag1 (Tag1 ((("Positions", 1818)), "Builder"), "t"), 0, (0)), 100000000, 0, -690); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -691)], (0)), 100000000, 0, -689)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 62, 1873, 1882), ("src/parsexp_intf.ml", 62, 1873, 1942), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 36)), 1, 0); (("create", 2000), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -688)], (0)), 100000000, 0, -687), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -686), (Tag3 ((("t", 1999)), 0, (0)), 100000000, 0, -685), 0), 100000000, 0, -684), 0), 100000000, 0, -683), 0, (("src/parser_intf.ml", 9, 192, 194), ("src/parser_intf.ml", 9, 192, 238), 0), 0, Tag1 ("Parsexp__Parser_intf", 1)), 0); (("reset", 2001), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -682)], (0)), 100000000, 0, -681), (Tag1 (0, (Tag3 ((("t", 1999)), 0, (0)), 100000000, 0, -680), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -679), 0), 100000000, 0, -678), 0), 100000000, 0, -677), 0, (("src/parser_intf.ml", 18, 389, 391), ("src/parser_intf.ml", 18, 389, 434), 0), 0, Tag1 ("Parsexp__Parser_intf", 2)), 0); (("offset", 2002), ((Tag1 (0, (Tag3 ((("t", 1999)), 0, (0)), 100000000, 0, -676), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -675), 0), 100000000, 0, -674), 0, (("src/parser_intf.ml", 21, 484, 486), ("src/parser_intf.ml", 21, 484, 507), 0), 0, Tag1 ("Parsexp__Parser_intf", 3)), 0); (("line", 2003), ((Tag1 (0, (Tag3 ((("t", 1999)), 0, (0)), 100000000, 0, -673), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -672), 0), 100000000, 0, -671), 0, (("src/parser_intf.ml", 25, 540, 542), ("src/parser_intf.ml", 25, 540, 561), 0), 0, Tag1 ("Parsexp__Parser_intf", 4)), 0); (("column", 2004), ((Tag1 (0, (Tag3 ((("t", 1999)), 0, (0)), 100000000, 0, -670), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -669), 0), 100000000, 0, -668), 0, (("src/parser_intf.ml", 26, 562, 564), ("src/parser_intf.ml", 26, 562, 585), 0), 0, Tag1 ("Parsexp__Parser_intf", 5)), 0); (("position", 2005), ((Tag1 (0, (Tag3 ((("t", 1999)), 0, (0)), 100000000, 0, -667), (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -666), 0), 100000000, 0, -665), 0, (("src/parser_intf.ml", 27, 586, 588), ("src/parser_intf.ml", 27, 586, 621), 0), 0, Tag1 ("Parsexp__Parser_intf", 6)), 0); (("stop", 2006), ((Tag1 (0, (Tag3 ((("t", 1999)), 0, (0)), 100000000, 0, -664), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -663), 0), 100000000, 0, -662), 0, (("src/parser_intf.ml", 31, 779, 781), ("src/parser_intf.ml", 31, 779, 801), 0), 0, Tag1 ("Parsexp__Parser_intf", 7)), 0)]), 0, (("src/parser_intf.ml", 45, 1020, 1022), ("src/parser_intf.ml", 45, 1020, 1042), 0), Tag1 ("Parsexp__Parser_intf", 13)), 0, 0); Tag3 (("Stack", 1990), 0, (Tag1 ([Tag1 (("t", 2007), (0, 0, 0, 1, ((Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -693)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 63, 1943, 1952), ("src/parsexp_intf.ml", 63, 1943, 1971), 0), 0, 1, 0, Tag1 ("Parsexp__Parsexp_intf", 37)), 1, 0); (("empty", 2008), ((Tag3 ((("t", 2007)), 0, (0)), 100000000, 0, -692), 0, (("src/parser_intf.ml", 38, 919, 921), ("src/parser_intf.ml", 38, 919, 934), 0), 0, Tag1 ("Parsexp__Parser_intf", 10)), 0)]), 0, (("src/parser_intf.ml", 46, 1043, 1045), ("src/parser_intf.ml", 46, 1043, 1065), 0), Tag1 ("Parsexp__Parser_intf", 14)), 0, 0); (("feed", 1991), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1989)), "t"), 0, (0)), 100000000, 0, -660), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -659), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1990)), "t"), 0, (0)), 100000000, 0, -658), (Tag3 (Tag1 ((("Stack", 1990)), "t"), 0, (0)), 100000000, 0, -657), 0), 100000000, 0, -656), 0), 100000000, 0, -655), 0), 100000000, 0, -654), 0, (("src/parser_intf.ml", 49, 1152, 1154), ("src/parser_intf.ml", 49, 1152, 1202), 0), 0, Tag1 ("Parsexp__Parser_intf", 15)), 0); (("feed_eoi", 1992), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1989)), "t"), 0, (0)), 100000000, 0, -653), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1990)), "t"), 0, (0)), 100000000, 0, -652), (Tag3 ((("parsed_value", 1988)), 0, (0)), 100000000, 0, -651), 0), 100000000, 0, -650), 0), 100000000, 0, -649), 0, (("src/parser_intf.ml", 53, 1316, 1318), ("src/parser_intf.ml", 53, 1316, 1367), 0), 0, Tag1 ("Parsexp__Parser_intf", 16)), 0); (("feed_string", 1993), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1989)), "t"), 0, (0)), 100000000, 0, -648), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -647), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1990)), "t"), 0, (0)), 100000000, 0, -646), (Tag3 (Tag1 ((("Stack", 1990)), "t"), 0, (0)), 100000000, 0, -645), 0), 100000000, 0, -644), 0), 100000000, 0, -643), 0), 100000000, 0, -642), 0, (("src/parser_intf.ml", 57, 1405, 1407), ("src/parser_intf.ml", 57, 1405, 1464), 0), 0, Tag1 ("Parsexp__Parser_intf", 17)), 0); (("feed_substring", 1994), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1989)), "t"), 0, (0)), 100000000, 0, -641), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -640), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -639), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -638), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1990)), "t"), 0, (0)), 100000000, 0, -637), (Tag3 (Tag1 ((("Stack", 1990)), "t"), 0, (0)), 100000000, 0, -636), 0), 100000000, 0, -635), 0), 100000000, 0, -634), 0), 100000000, 0, -633), 0), 100000000, 0, -632), 0), 100000000, 0, -631), 0, (("src/parser_intf.ml", 58, 1465, 1467), ("src/parser_intf.ml", 58, 1465, 1549), 0), 0, Tag1 ("Parsexp__Parser_intf", 18)), 0); (("feed_bytes", 1995), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1989)), "t"), 0, (0)), 100000000, 0, -630), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -629), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1990)), "t"), 0, (0)), 100000000, 0, -628), (Tag3 (Tag1 ((("Stack", 1990)), "t"), 0, (0)), 100000000, 0, -627), 0), 100000000, 0, -626), 0), 100000000, 0, -625), 0), 100000000, 0, -624), 0, (("src/parser_intf.ml", 59, 1550, 1552), ("src/parser_intf.ml", 59, 1550, 1607), 0), 0, Tag1 ("Parsexp__Parser_intf", 19)), 0); (("feed_subbytes", 1996), ((Tag1 (0, (Tag3 (Tag1 ((("State", 1989)), "t"), 0, (0)), 100000000, 0, -623), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -622), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -621), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -620), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 1990)), "t"), 0, (0)), 100000000, 0, -619), (Tag3 (Tag1 ((("Stack", 1990)), "t"), 0, (0)), 100000000, 0, -618), 0), 100000000, 0, -617), 0), 100000000, 0, -616), 0), 100000000, 0, -615), 0), 100000000, 0, -614), 0), 100000000, 0, -613), 0, (("src/parser_intf.ml", 60, 1608, 1610), ("src/parser_intf.ml", 60, 1608, 1690), 0), 0, Tag1 ("Parsexp__Parser_intf", 20)), 0); (("parse_string", 1997), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -612), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("parsed_value", 1988)), 0, (0)), 100000000, 0, -610); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Parse_error"), "t"), 0, (0)), 100000000, 0, -611)], (0)), 100000000, 0, -609), 0), 100000000, 0, -608), 0, (("src/parser_intf.ml", 64, 1727, 1729), ("src/parser_intf.ml", 64, 1727, 1794), 0), 0, Tag1 ("Parsexp__Parser_intf", 21)), 0); (("parse_string_exn", 1998), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -607), (Tag3 ((("parsed_value", 1988)), 0, (0)), 100000000, 0, -606), 0), 100000000, 0, -605), 0, (("src/parser_intf.ml", 65, 1795, 1797), ("src/parser_intf.ml", 65, 1795, 1842), 0), 0, Tag1 ("Parsexp__Parser_intf", 22)), 0)]), 0, (("src/parsexp_intf.ml", 59, 1788, 1790), ("src/parsexp_intf.ml", 63, 1943, 1971), 0), Tag1 ("Parsexp__Parsexp_intf", 38)), 0, 0); Tag3 (("Many_just_positions", 1832), 0, (Tag1 ([Tag1 (("parsed_value", 2009), (0, 0, 0, 1, ((Tag3 (Tag1 ((("Positions", 1818)), "t"), 0, (0)), 100000000, 0, -750)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 67, 2015, 2024), ("src/parsexp_intf.ml", 67, 2015, 2055), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 39)), 1, 0); Tag3 (("State", 2010), 0, (Tag1 ([Tag1 (("t", 2020), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_state"), "t"), [(Tag3 (Tag1 (Tag1 ((("Positions", 1818)), "Builder"), "t"), 0, (0)), 100000000, 0, -779); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -780)], (0)), 100000000, 0, -778)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 68, 2056, 2065), ("src/parsexp_intf.ml", 68, 2056, 2125), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 40)), 1, 0); (("create", 2021), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -777)], (0)), 100000000, 0, -776), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -775), (Tag3 ((("t", 2020)), 0, (0)), 100000000, 0, -774), 0), 100000000, 0, -773), 0), 100000000, 0, -772), 0, (("src/parser_intf.ml", 9, 192, 194), ("src/parser_intf.ml", 9, 192, 238), 0), 0, Tag1 ("Parsexp__Parser_intf", 1)), 0); (("reset", 2022), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -771)], (0)), 100000000, 0, -770), (Tag1 (0, (Tag3 ((("t", 2020)), 0, (0)), 100000000, 0, -769), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -768), 0), 100000000, 0, -767), 0), 100000000, 0, -766), 0, (("src/parser_intf.ml", 18, 389, 391), ("src/parser_intf.ml", 18, 389, 434), 0), 0, Tag1 ("Parsexp__Parser_intf", 2)), 0); (("offset", 2023), ((Tag1 (0, (Tag3 ((("t", 2020)), 0, (0)), 100000000, 0, -765), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -764), 0), 100000000, 0, -763), 0, (("src/parser_intf.ml", 21, 484, 486), ("src/parser_intf.ml", 21, 484, 507), 0), 0, Tag1 ("Parsexp__Parser_intf", 3)), 0); (("line", 2024), ((Tag1 (0, (Tag3 ((("t", 2020)), 0, (0)), 100000000, 0, -762), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -761), 0), 100000000, 0, -760), 0, (("src/parser_intf.ml", 25, 540, 542), ("src/parser_intf.ml", 25, 540, 561), 0), 0, Tag1 ("Parsexp__Parser_intf", 4)), 0); (("column", 2025), ((Tag1 (0, (Tag3 ((("t", 2020)), 0, (0)), 100000000, 0, -759), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -758), 0), 100000000, 0, -757), 0, (("src/parser_intf.ml", 26, 562, 564), ("src/parser_intf.ml", 26, 562, 585), 0), 0, Tag1 ("Parsexp__Parser_intf", 5)), 0); (("position", 2026), ((Tag1 (0, (Tag3 ((("t", 2020)), 0, (0)), 100000000, 0, -756), (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -755), 0), 100000000, 0, -754), 0, (("src/parser_intf.ml", 27, 586, 588), ("src/parser_intf.ml", 27, 586, 621), 0), 0, Tag1 ("Parsexp__Parser_intf", 6)), 0); (("stop", 2027), ((Tag1 (0, (Tag3 ((("t", 2020)), 0, (0)), 100000000, 0, -753), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -752), 0), 100000000, 0, -751), 0, (("src/parser_intf.ml", 31, 779, 781), ("src/parser_intf.ml", 31, 779, 801), 0), 0, Tag1 ("Parsexp__Parser_intf", 7)), 0)]), 0, (("src/parser_intf.ml", 45, 1020, 1022), ("src/parser_intf.ml", 45, 1020, 1042), 0), Tag1 ("Parsexp__Parser_intf", 13)), 0, 0); Tag3 (("Stack", 2011), 0, (Tag1 ([Tag1 (("t", 2028), (0, 0, 0, 1, ((Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -782)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 69, 2126, 2135), ("src/parsexp_intf.ml", 69, 2126, 2154), 0), 0, 1, 0, Tag1 ("Parsexp__Parsexp_intf", 41)), 1, 0); (("empty", 2029), ((Tag3 ((("t", 2028)), 0, (0)), 100000000, 0, -781), 0, (("src/parser_intf.ml", 38, 919, 921), ("src/parser_intf.ml", 38, 919, 934), 0), 0, Tag1 ("Parsexp__Parser_intf", 10)), 0)]), 0, (("src/parser_intf.ml", 46, 1043, 1045), ("src/parser_intf.ml", 46, 1043, 1065), 0), Tag1 ("Parsexp__Parser_intf", 14)), 0, 0); (("feed", 2012), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2010)), "t"), 0, (0)), 100000000, 0, -749), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -748), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2011)), "t"), 0, (0)), 100000000, 0, -747), (Tag3 (Tag1 ((("Stack", 2011)), "t"), 0, (0)), 100000000, 0, -746), 0), 100000000, 0, -745), 0), 100000000, 0, -744), 0), 100000000, 0, -743), 0, (("src/parser_intf.ml", 49, 1152, 1154), ("src/parser_intf.ml", 49, 1152, 1202), 0), 0, Tag1 ("Parsexp__Parser_intf", 15)), 0); (("feed_eoi", 2013), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2010)), "t"), 0, (0)), 100000000, 0, -742), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2011)), "t"), 0, (0)), 100000000, 0, -741), (Tag3 ((("parsed_value", 2009)), 0, (0)), 100000000, 0, -740), 0), 100000000, 0, -739), 0), 100000000, 0, -738), 0, (("src/parser_intf.ml", 53, 1316, 1318), ("src/parser_intf.ml", 53, 1316, 1367), 0), 0, Tag1 ("Parsexp__Parser_intf", 16)), 0); (("feed_string", 2014), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2010)), "t"), 0, (0)), 100000000, 0, -737), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -736), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2011)), "t"), 0, (0)), 100000000, 0, -735), (Tag3 (Tag1 ((("Stack", 2011)), "t"), 0, (0)), 100000000, 0, -734), 0), 100000000, 0, -733), 0), 100000000, 0, -732), 0), 100000000, 0, -731), 0, (("src/parser_intf.ml", 57, 1405, 1407), ("src/parser_intf.ml", 57, 1405, 1464), 0), 0, Tag1 ("Parsexp__Parser_intf", 17)), 0); (("feed_substring", 2015), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2010)), "t"), 0, (0)), 100000000, 0, -730), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -729), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -728), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -727), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2011)), "t"), 0, (0)), 100000000, 0, -726), (Tag3 (Tag1 ((("Stack", 2011)), "t"), 0, (0)), 100000000, 0, -725), 0), 100000000, 0, -724), 0), 100000000, 0, -723), 0), 100000000, 0, -722), 0), 100000000, 0, -721), 0), 100000000, 0, -720), 0, (("src/parser_intf.ml", 58, 1465, 1467), ("src/parser_intf.ml", 58, 1465, 1549), 0), 0, Tag1 ("Parsexp__Parser_intf", 18)), 0); (("feed_bytes", 2016), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2010)), "t"), 0, (0)), 100000000, 0, -719), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -718), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2011)), "t"), 0, (0)), 100000000, 0, -717), (Tag3 (Tag1 ((("Stack", 2011)), "t"), 0, (0)), 100000000, 0, -716), 0), 100000000, 0, -715), 0), 100000000, 0, -714), 0), 100000000, 0, -713), 0, (("src/parser_intf.ml", 59, 1550, 1552), ("src/parser_intf.ml", 59, 1550, 1607), 0), 0, Tag1 ("Parsexp__Parser_intf", 19)), 0); (("feed_subbytes", 2017), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2010)), "t"), 0, (0)), 100000000, 0, -712), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -711), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -710), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -709), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2011)), "t"), 0, (0)), 100000000, 0, -708), (Tag3 (Tag1 ((("Stack", 2011)), "t"), 0, (0)), 100000000, 0, -707), 0), 100000000, 0, -706), 0), 100000000, 0, -705), 0), 100000000, 0, -704), 0), 100000000, 0, -703), 0), 100000000, 0, -702), 0, (("src/parser_intf.ml", 60, 1608, 1610), ("src/parser_intf.ml", 60, 1608, 1690), 0), 0, Tag1 ("Parsexp__Parser_intf", 20)), 0); (("parse_string", 2018), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -701), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("parsed_value", 2009)), 0, (0)), 100000000, 0, -699); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Parse_error"), "t"), 0, (0)), 100000000, 0, -700)], (0)), 100000000, 0, -698), 0), 100000000, 0, -697), 0, (("src/parser_intf.ml", 64, 1727, 1729), ("src/parser_intf.ml", 64, 1727, 1794), 0), 0, Tag1 ("Parsexp__Parser_intf", 21)), 0); (("parse_string_exn", 2019), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -696), (Tag3 ((("parsed_value", 2009)), 0, (0)), 100000000, 0, -695), 0), 100000000, 0, -694), 0, (("src/parser_intf.ml", 65, 1795, 1797), ("src/parser_intf.ml", 65, 1795, 1842), 0), 0, Tag1 ("Parsexp__Parser_intf", 22)), 0)]), 0, (("src/parsexp_intf.ml", 65, 1973, 1975), ("src/parsexp_intf.ml", 69, 2126, 2154), 0), Tag1 ("Parsexp__Parsexp_intf", 42)), 0, 0); Tag3 (("Eager_just_positions", 1833), 0, (Tag1 ([Tag1 (("parsed_value", 2030), (0, 0, 0, 1, ((Tag3 (Tag1 ((("Positions", 1818)), "t"), 0, (0)), 100000000, 0, -831)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 73, 2205, 2214), ("src/parsexp_intf.ml", 73, 2205, 2245), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 43)), 1, 0); Tag3 (("State", 2031), 0, (Tag1 ([Tag1 (("t", 2040), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_state"), "t"), [(Tag3 (Tag1 (Tag1 ((("Positions", 1818)), "Builder"), "t"), 0, (0)), 100000000, 0, -870); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -871)], (0)), 100000000, 0, -869)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 74, 2246, 2255), ("src/parsexp_intf.ml", 74, 2246, 2315), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 44)), 1, 0); (("reset", 2041), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -868)], (0)), 100000000, 0, -867), (Tag1 (0, (Tag3 ((("t", 2040)), 0, (0)), 100000000, 0, -866), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -865), 0), 100000000, 0, -864), 0), 100000000, 0, -863), 0, (("src/parser_intf.ml", 18, 389, 391), ("src/parser_intf.ml", 18, 389, 434), 0), 0, Tag1 ("Parsexp__Parser_intf", 2)), 0); (("offset", 2042), ((Tag1 (0, (Tag3 ((("t", 2040)), 0, (0)), 100000000, 0, -862), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -861), 0), 100000000, 0, -860), 0, (("src/parser_intf.ml", 21, 484, 486), ("src/parser_intf.ml", 21, 484, 507), 0), 0, Tag1 ("Parsexp__Parser_intf", 3)), 0); (("line", 2043), ((Tag1 (0, (Tag3 ((("t", 2040)), 0, (0)), 100000000, 0, -859), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -858), 0), 100000000, 0, -857), 0, (("src/parser_intf.ml", 25, 540, 542), ("src/parser_intf.ml", 25, 540, 561), 0), 0, Tag1 ("Parsexp__Parser_intf", 4)), 0); (("column", 2044), ((Tag1 (0, (Tag3 ((("t", 2040)), 0, (0)), 100000000, 0, -856), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -855), 0), 100000000, 0, -854), 0, (("src/parser_intf.ml", 26, 562, 564), ("src/parser_intf.ml", 26, 562, 585), 0), 0, Tag1 ("Parsexp__Parser_intf", 5)), 0); (("position", 2045), ((Tag1 (0, (Tag3 ((("t", 2040)), 0, (0)), 100000000, 0, -853), (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -852), 0), 100000000, 0, -851), 0, (("src/parser_intf.ml", 27, 586, 588), ("src/parser_intf.ml", 27, 586, 621), 0), 0, Tag1 ("Parsexp__Parser_intf", 6)), 0); (("stop", 2046), ((Tag1 (0, (Tag3 ((("t", 2040)), 0, (0)), 100000000, 0, -850), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -849), 0), 100000000, 0, -848), 0, (("src/parser_intf.ml", 31, 779, 781), ("src/parser_intf.ml", 31, 779, 801), 0), 0, Tag1 ("Parsexp__Parser_intf", 7)), 0); Tag3 (("Read_only", 2047), 0, (Tag1 ([Tag1 (("t", 2050), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/parser_intf.ml", 111, 3276, 3282), ("src/parser_intf.ml", 111, 3276, 3288), 0), 0, 0, 0, Tag1 ("Parsexp__Parser_intf", 25)), 1, 0); (("offset", 2051), ((Tag1 (0, (Tag3 ((("t", 2050)), 0, (0)), 100000000, 0, -883), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -882), 0), 100000000, 0, -881), 0, (("src/parser_intf.ml", 113, 3290, 3296), ("src/parser_intf.ml", 113, 3290, 3317), 0), 0, Tag1 ("Parsexp__Parser_intf", 26)), 0); (("line", 2052), ((Tag1 (0, (Tag3 ((("t", 2050)), 0, (0)), 100000000, 0, -880), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -879), 0), 100000000, 0, -878), 0, (("src/parser_intf.ml", 114, 3318, 3324), ("src/parser_intf.ml", 114, 3318, 3343), 0), 0, Tag1 ("Parsexp__Parser_intf", 27)), 0); (("column", 2053), ((Tag1 (0, (Tag3 ((("t", 2050)), 0, (0)), 100000000, 0, -877), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -876), 0), 100000000, 0, -875), 0, (("src/parser_intf.ml", 115, 3344, 3350), ("src/parser_intf.ml", 115, 3344, 3371), 0), 0, Tag1 ("Parsexp__Parser_intf", 28)), 0); (("position", 2054), ((Tag1 (0, (Tag3 ((("t", 2050)), 0, (0)), 100000000, 0, -874), (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -873), 0), 100000000, 0, -872), 0, (("src/parser_intf.ml", 116, 3372, 3378), ("src/parser_intf.ml", 116, 3372, 3411), 0), 0, Tag1 ("Parsexp__Parser_intf", 29)), 0)]), 0, (("src/parser_intf.ml", 109, 3201, 3205), ("src/parser_intf.ml", 117, 3412, 3419), 0), Tag1 ("Parsexp__Parser_intf", 30)), 0, 0); (("create", 2048), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -847)], (0)), 100000000, 0, -846), (Tag1 (Tag1 ("no_sexp_is_error"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -845)], (0)), 100000000, 0, -844), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((("Read_only", 2047)), "t"), 0, (0)), 100000000, 0, -843), (Tag1 (0, (Tag3 ((("parsed_value", 2030)), 0, (0)), 100000000, 0, -842), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -841), 0), 100000000, 0, -840), 0), 100000000, 0, -839), (Tag3 ((("t", 2040)), 0, (0)), 100000000, 0, -838), 0), 100000000, 0, -837), 0), 100000000, 0, -836), 0), 100000000, 0, -835), 0, (("src/parser_intf.ml", 131, 4172, 4176), ("src/parser_intf.ml", 135, 4316, 4326), 0), 0, Tag1 ("Parsexp__Parser_intf", 31)), 0); (("old_parser_cont_state", 2049), ((Tag1 (0, (Tag3 ((("t", 2040)), 0, (0)), 100000000, 0, -834), (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Old_parser_cont_state"), "t"), 0, (0)), 100000000, 0, -833), 0), 100000000, 0, -832), 0, (("src/parser_intf.ml", 139, 4341, 4345), ("src/parser_intf.ml", 139, 4341, 4401), 0), 0, Tag1 ("Parsexp__Parser_intf", 32)), 0)]), 0, (("src/parser_intf.ml", 106, 3161, 3163), ("src/parser_intf.ml", 142, 4415, 4420), 0), Tag1 ("Parsexp__Parser_intf", 33)), 0, 0); Tag3 (("Stack", 2032), 0, (Tag1 ([Tag1 (("t", 2055), (0, 0, 0, 1, ((Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -885)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 75, 2316, 2325), ("src/parsexp_intf.ml", 75, 2316, 2344), 0), 0, 1, 0, Tag1 ("Parsexp__Parsexp_intf", 45)), 1, 0); (("empty", 2056), ((Tag3 ((("t", 2055)), 0, (0)), 100000000, 0, -884), 0, (("src/parser_intf.ml", 38, 919, 921), ("src/parser_intf.ml", 38, 919, 934), 0), 0, Tag1 ("Parsexp__Parser_intf", 10)), 0)]), 0, (("src/parser_intf.ml", 144, 4422, 4424), ("src/parser_intf.ml", 144, 4422, 4444), 0), Tag1 ("Parsexp__Parser_intf", 34)), 0, 0); (("feed", 2033), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2031)), "t"), 0, (0)), 100000000, 0, -830), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -829), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2032)), "t"), 0, (0)), 100000000, 0, -828), (Tag3 (Tag1 ((("Stack", 2032)), "t"), 0, (0)), 100000000, 0, -827), 0), 100000000, 0, -826), 0), 100000000, 0, -825), 0), 100000000, 0, -824), 0, (("src/parser_intf.ml", 146, 4446, 4448), ("src/parser_intf.ml", 146, 4446, 4496), 0), 0, Tag1 ("Parsexp__Parser_intf", 35)), 0); (("feed_eoi", 2034), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2031)), "t"), 0, (0)), 100000000, 0, -823), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2032)), "t"), 0, (0)), 100000000, 0, -822), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -821), 0), 100000000, 0, -820), 0), 100000000, 0, -819), 0, (("src/parser_intf.ml", 147, 4497, 4499), ("src/parser_intf.ml", 147, 4497, 4540), 0), 0, Tag1 ("Parsexp__Parser_intf", 36)), 0); (("feed_string", 2035), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2031)), "t"), 0, (0)), 100000000, 0, -818), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -817), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2032)), "t"), 0, (0)), 100000000, 0, -816), (Tag3 (Tag1 ((("Stack", 2032)), "t"), 0, (0)), 100000000, 0, -815), 0), 100000000, 0, -814), 0), 100000000, 0, -813), 0), 100000000, 0, -812), 0, (("src/parser_intf.ml", 148, 4541, 4543), ("src/parser_intf.ml", 148, 4541, 4600), 0), 0, Tag1 ("Parsexp__Parser_intf", 37)), 0); (("feed_substring", 2036), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2031)), "t"), 0, (0)), 100000000, 0, -811), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -810), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -809), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -808), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2032)), "t"), 0, (0)), 100000000, 0, -807), (Tag3 (Tag1 ((("Stack", 2032)), "t"), 0, (0)), 100000000, 0, -806), 0), 100000000, 0, -805), 0), 100000000, 0, -804), 0), 100000000, 0, -803), 0), 100000000, 0, -802), 0), 100000000, 0, -801), 0, (("src/parser_intf.ml", 149, 4601, 4603), ("src/parser_intf.ml", 149, 4601, 4685), 0), 0, Tag1 ("Parsexp__Parser_intf", 38)), 0); (("feed_bytes", 2037), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2031)), "t"), 0, (0)), 100000000, 0, -800), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -799), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2032)), "t"), 0, (0)), 100000000, 0, -798), (Tag3 (Tag1 ((("Stack", 2032)), "t"), 0, (0)), 100000000, 0, -797), 0), 100000000, 0, -796), 0), 100000000, 0, -795), 0), 100000000, 0, -794), 0, (("src/parser_intf.ml", 150, 4686, 4688), ("src/parser_intf.ml", 150, 4686, 4743), 0), 0, Tag1 ("Parsexp__Parser_intf", 39)), 0); (("feed_subbytes", 2038), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2031)), "t"), 0, (0)), 100000000, 0, -793), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -792), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -791), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -790), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2032)), "t"), 0, (0)), 100000000, 0, -789), (Tag3 (Tag1 ((("Stack", 2032)), "t"), 0, (0)), 100000000, 0, -788), 0), 100000000, 0, -787), 0), 100000000, 0, -786), 0), 100000000, 0, -785), 0), 100000000, 0, -784), 0), 100000000, 0, -783), 0, (("src/parser_intf.ml", 151, 4744, 4746), ("src/parser_intf.ml", 151, 4744, 4826), 0), 0, Tag1 ("Parsexp__Parser_intf", 40)), 0); Tag3 (("Lexbuf_consumer", 2039), 0, (Tag1 ([Tag1 (("t", 2057), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/parser_intf.ml", 154, 4859, 4863), ("src/parser_intf.ml", 154, 4859, 4869), 0), 0, 0, 0, Tag1 ("Parsexp__Parser_intf", 41)), 1, 0); (("create", 2058), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -899), (Tag3 ((("t", 2057)), 0, (0)), 100000000, 0, -898), 0), 100000000, 0, -897), 0, (("src/parser_intf.ml", 156, 4871, 4875), ("src/parser_intf.ml", 156, 4871, 4897), 0), 0, Tag1 ("Parsexp__Parser_intf", 42)), 0); (("parse", 2059), ((Tag1 (0, (Tag3 ((("t", 2057)), 0, (0)), 100000000, 0, -896), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -895), (Tag3 ((("parsed_value", 2030)), 0, (0)), 100000000, 0, -894), 0), 100000000, 0, -893), 0), 100000000, 0, -892), 0, (("src/parser_intf.ml", 159, 4972, 4976), ("src/parser_intf.ml", 159, 4972, 5022), 0), 0, Tag1 ("Parsexp__Parser_intf", 43)), 0); (("parse_opt", 2060), ((Tag1 (0, (Tag3 ((("t", 2057)), 0, (0)), 100000000, 0, -891), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -890), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("parsed_value", 2030)), 0, (0)), 100000000, 0, -889)], (0)), 100000000, 0, -888), 0), 100000000, 0, -887), 0), 100000000, 0, -886), 0, (("src/parser_intf.ml", 163, 5184, 5188), ("src/parser_intf.ml", 163, 5184, 5245), 0), 0, Tag1 ("Parsexp__Parser_intf", 44)), 0)]), 0, (("src/parser_intf.ml", 153, 4828, 4830), ("src/parser_intf.ml", 164, 5246, 5251), 0), Tag1 ("Parsexp__Parser_intf", 45)), 0, 0)]), 0, (("src/parsexp_intf.ml", 71, 2156, 2158), ("src/parsexp_intf.ml", 75, 2316, 2344), 0), Tag1 ("Parsexp__Parsexp_intf", 46)), 0, 0); Tag3 (("Many_cst", 1834), 0, (Tag1 ([Tag1 (("parsed_value", 2061), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Cst", 1819)), "t_or_comment"), 0, (0)), 100000000, 0, -957)], (0)), 100000000, 0, -956)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 79, 2377, 2386), ("src/parsexp_intf.ml", 79, 2377, 2427), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 51)), 1, 0); Tag3 (("State", 2062), 0, (Tag1 ([Tag1 (("t", 2072), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_state"), "t"), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_state"), "For_cst"), "t"), 0, (0)), 100000000, 0, -986); (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_stack"), "For_cst"), "t"), 0, (0)), 100000000, 0, -987)], (0)), 100000000, 0, -985)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 80, 2428, 2437), ("src/parsexp_intf.ml", 81, 2452, 2535), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 53)), 1, 0); (("create", 2073), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -984)], (0)), 100000000, 0, -983), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -982), (Tag3 ((("t", 2072)), 0, (0)), 100000000, 0, -981), 0), 100000000, 0, -980), 0), 100000000, 0, -979), 0, (("src/parser_intf.ml", 9, 192, 194), ("src/parser_intf.ml", 9, 192, 238), 0), 0, Tag1 ("Parsexp__Parser_intf", 1)), 0); (("reset", 2074), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -978)], (0)), 100000000, 0, -977), (Tag1 (0, (Tag3 ((("t", 2072)), 0, (0)), 100000000, 0, -976), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -975), 0), 100000000, 0, -974), 0), 100000000, 0, -973), 0, (("src/parser_intf.ml", 18, 389, 391), ("src/parser_intf.ml", 18, 389, 434), 0), 0, Tag1 ("Parsexp__Parser_intf", 2)), 0); (("offset", 2075), ((Tag1 (0, (Tag3 ((("t", 2072)), 0, (0)), 100000000, 0, -972), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -971), 0), 100000000, 0, -970), 0, (("src/parser_intf.ml", 21, 484, 486), ("src/parser_intf.ml", 21, 484, 507), 0), 0, Tag1 ("Parsexp__Parser_intf", 3)), 0); (("line", 2076), ((Tag1 (0, (Tag3 ((("t", 2072)), 0, (0)), 100000000, 0, -969), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -968), 0), 100000000, 0, -967), 0, (("src/parser_intf.ml", 25, 540, 542), ("src/parser_intf.ml", 25, 540, 561), 0), 0, Tag1 ("Parsexp__Parser_intf", 4)), 0); (("column", 2077), ((Tag1 (0, (Tag3 ((("t", 2072)), 0, (0)), 100000000, 0, -966), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -965), 0), 100000000, 0, -964), 0, (("src/parser_intf.ml", 26, 562, 564), ("src/parser_intf.ml", 26, 562, 585), 0), 0, Tag1 ("Parsexp__Parser_intf", 5)), 0); (("position", 2078), ((Tag1 (0, (Tag3 ((("t", 2072)), 0, (0)), 100000000, 0, -963), (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -962), 0), 100000000, 0, -961), 0, (("src/parser_intf.ml", 27, 586, 588), ("src/parser_intf.ml", 27, 586, 621), 0), 0, Tag1 ("Parsexp__Parser_intf", 6)), 0); (("stop", 2079), ((Tag1 (0, (Tag3 ((("t", 2072)), 0, (0)), 100000000, 0, -960), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -959), 0), 100000000, 0, -958), 0, (("src/parser_intf.ml", 31, 779, 781), ("src/parser_intf.ml", 31, 779, 801), 0), 0, Tag1 ("Parsexp__Parser_intf", 7)), 0)]), 0, (("src/parser_intf.ml", 45, 1020, 1022), ("src/parser_intf.ml", 45, 1020, 1042), 0), Tag1 ("Parsexp__Parser_intf", 13)), 0, 0); Tag3 (("Stack", 2063), 0, (Tag1 ([Tag1 (("t", 2080), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_stack"), "For_cst"), "t"), 0, (0)), 100000000, 0, -989)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 82, 2536, 2545), ("src/parsexp_intf.ml", 82, 2536, 2585), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 54)), 1, 0); (("empty", 2081), ((Tag3 ((("t", 2080)), 0, (0)), 100000000, 0, -988), 0, (("src/parser_intf.ml", 38, 919, 921), ("src/parser_intf.ml", 38, 919, 934), 0), 0, Tag1 ("Parsexp__Parser_intf", 10)), 0)]), 0, (("src/parser_intf.ml", 46, 1043, 1045), ("src/parser_intf.ml", 46, 1043, 1065), 0), Tag1 ("Parsexp__Parser_intf", 14)), 0, 0); (("feed", 2064), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2062)), "t"), 0, (0)), 100000000, 0, -955), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -954), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2063)), "t"), 0, (0)), 100000000, 0, -953), (Tag3 (Tag1 ((("Stack", 2063)), "t"), 0, (0)), 100000000, 0, -952), 0), 100000000, 0, -951), 0), 100000000, 0, -950), 0), 100000000, 0, -949), 0, (("src/parser_intf.ml", 49, 1152, 1154), ("src/parser_intf.ml", 49, 1152, 1202), 0), 0, Tag1 ("Parsexp__Parser_intf", 15)), 0); (("feed_eoi", 2065), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2062)), "t"), 0, (0)), 100000000, 0, -948), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2063)), "t"), 0, (0)), 100000000, 0, -947), (Tag3 ((("parsed_value", 2061)), 0, (0)), 100000000, 0, -946), 0), 100000000, 0, -945), 0), 100000000, 0, -944), 0, (("src/parser_intf.ml", 53, 1316, 1318), ("src/parser_intf.ml", 53, 1316, 1367), 0), 0, Tag1 ("Parsexp__Parser_intf", 16)), 0); (("feed_string", 2066), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2062)), "t"), 0, (0)), 100000000, 0, -943), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -942), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2063)), "t"), 0, (0)), 100000000, 0, -941), (Tag3 (Tag1 ((("Stack", 2063)), "t"), 0, (0)), 100000000, 0, -940), 0), 100000000, 0, -939), 0), 100000000, 0, -938), 0), 100000000, 0, -937), 0, (("src/parser_intf.ml", 57, 1405, 1407), ("src/parser_intf.ml", 57, 1405, 1464), 0), 0, Tag1 ("Parsexp__Parser_intf", 17)), 0); (("feed_substring", 2067), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2062)), "t"), 0, (0)), 100000000, 0, -936), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -935), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -934), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -933), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2063)), "t"), 0, (0)), 100000000, 0, -932), (Tag3 (Tag1 ((("Stack", 2063)), "t"), 0, (0)), 100000000, 0, -931), 0), 100000000, 0, -930), 0), 100000000, 0, -929), 0), 100000000, 0, -928), 0), 100000000, 0, -927), 0), 100000000, 0, -926), 0, (("src/parser_intf.ml", 58, 1465, 1467), ("src/parser_intf.ml", 58, 1465, 1549), 0), 0, Tag1 ("Parsexp__Parser_intf", 18)), 0); (("feed_bytes", 2068), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2062)), "t"), 0, (0)), 100000000, 0, -925), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -924), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2063)), "t"), 0, (0)), 100000000, 0, -923), (Tag3 (Tag1 ((("Stack", 2063)), "t"), 0, (0)), 100000000, 0, -922), 0), 100000000, 0, -921), 0), 100000000, 0, -920), 0), 100000000, 0, -919), 0, (("src/parser_intf.ml", 59, 1550, 1552), ("src/parser_intf.ml", 59, 1550, 1607), 0), 0, Tag1 ("Parsexp__Parser_intf", 19)), 0); (("feed_subbytes", 2069), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2062)), "t"), 0, (0)), 100000000, 0, -918), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -917), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -916), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -915), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2063)), "t"), 0, (0)), 100000000, 0, -914), (Tag3 (Tag1 ((("Stack", 2063)), "t"), 0, (0)), 100000000, 0, -913), 0), 100000000, 0, -912), 0), 100000000, 0, -911), 0), 100000000, 0, -910), 0), 100000000, 0, -909), 0), 100000000, 0, -908), 0, (("src/parser_intf.ml", 60, 1608, 1610), ("src/parser_intf.ml", 60, 1608, 1690), 0), 0, Tag1 ("Parsexp__Parser_intf", 20)), 0); (("parse_string", 2070), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -907), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("parsed_value", 2061)), 0, (0)), 100000000, 0, -905); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Parse_error"), "t"), 0, (0)), 100000000, 0, -906)], (0)), 100000000, 0, -904), 0), 100000000, 0, -903), 0, (("src/parser_intf.ml", 64, 1727, 1729), ("src/parser_intf.ml", 64, 1727, 1794), 0), 0, Tag1 ("Parsexp__Parser_intf", 21)), 0); (("parse_string_exn", 2071), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -902), (Tag3 ((("parsed_value", 2061)), 0, (0)), 100000000, 0, -901), 0), 100000000, 0, -900), 0, (("src/parser_intf.ml", 65, 1795, 1797), ("src/parser_intf.ml", 65, 1795, 1842), 0), 0, Tag1 ("Parsexp__Parser_intf", 22)), 0)]), 0, (("src/parsexp_intf.ml", 77, 2346, 2348), ("src/parsexp_intf.ml", 82, 2536, 2585), 0), Tag1 ("Parsexp__Parsexp_intf", 55)), 0, 0); Tag3 (("Eager_cst", 1835), 0, (Tag1 ([Tag1 (("parsed_value", 2082), (0, 0, 0, 1, ((Tag3 (Tag1 ((("Cst", 1819)), "t_or_comment"), 0, (0)), 100000000, 0, -1038)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 86, 2625, 2634), ("src/parsexp_intf.ml", 86, 2625, 2670), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 56)), 1, 0); Tag3 (("State", 2083), 0, (Tag1 ([Tag1 (("t", 2092), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_state"), "t"), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_state"), "For_cst"), "t"), 0, (0)), 100000000, 0, -1077); (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_stack"), "For_cst"), "t"), 0, (0)), 100000000, 0, -1078)], (0)), 100000000, 0, -1076)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 87, 2671, 2680), ("src/parsexp_intf.ml", 88, 2695, 2778), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 57)), 1, 0); (("reset", 2093), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -1075)], (0)), 100000000, 0, -1074), (Tag1 (0, (Tag3 ((("t", 2092)), 0, (0)), 100000000, 0, -1073), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1072), 0), 100000000, 0, -1071), 0), 100000000, 0, -1070), 0, (("src/parser_intf.ml", 18, 389, 391), ("src/parser_intf.ml", 18, 389, 434), 0), 0, Tag1 ("Parsexp__Parser_intf", 2)), 0); (("offset", 2094), ((Tag1 (0, (Tag3 ((("t", 2092)), 0, (0)), 100000000, 0, -1069), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1068), 0), 100000000, 0, -1067), 0, (("src/parser_intf.ml", 21, 484, 486), ("src/parser_intf.ml", 21, 484, 507), 0), 0, Tag1 ("Parsexp__Parser_intf", 3)), 0); (("line", 2095), ((Tag1 (0, (Tag3 ((("t", 2092)), 0, (0)), 100000000, 0, -1066), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1065), 0), 100000000, 0, -1064), 0, (("src/parser_intf.ml", 25, 540, 542), ("src/parser_intf.ml", 25, 540, 561), 0), 0, Tag1 ("Parsexp__Parser_intf", 4)), 0); (("column", 2096), ((Tag1 (0, (Tag3 ((("t", 2092)), 0, (0)), 100000000, 0, -1063), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1062), 0), 100000000, 0, -1061), 0, (("src/parser_intf.ml", 26, 562, 564), ("src/parser_intf.ml", 26, 562, 585), 0), 0, Tag1 ("Parsexp__Parser_intf", 5)), 0); (("position", 2097), ((Tag1 (0, (Tag3 ((("t", 2092)), 0, (0)), 100000000, 0, -1060), (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -1059), 0), 100000000, 0, -1058), 0, (("src/parser_intf.ml", 27, 586, 588), ("src/parser_intf.ml", 27, 586, 621), 0), 0, Tag1 ("Parsexp__Parser_intf", 6)), 0); (("stop", 2098), ((Tag1 (0, (Tag3 ((("t", 2092)), 0, (0)), 100000000, 0, -1057), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1056), 0), 100000000, 0, -1055), 0, (("src/parser_intf.ml", 31, 779, 781), ("src/parser_intf.ml", 31, 779, 801), 0), 0, Tag1 ("Parsexp__Parser_intf", 7)), 0); Tag3 (("Read_only", 2099), 0, (Tag1 ([Tag1 (("t", 2102), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/parser_intf.ml", 111, 3276, 3282), ("src/parser_intf.ml", 111, 3276, 3288), 0), 0, 0, 0, Tag1 ("Parsexp__Parser_intf", 25)), 1, 0); (("offset", 2103), ((Tag1 (0, (Tag3 ((("t", 2102)), 0, (0)), 100000000, 0, -1090), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1089), 0), 100000000, 0, -1088), 0, (("src/parser_intf.ml", 113, 3290, 3296), ("src/parser_intf.ml", 113, 3290, 3317), 0), 0, Tag1 ("Parsexp__Parser_intf", 26)), 0); (("line", 2104), ((Tag1 (0, (Tag3 ((("t", 2102)), 0, (0)), 100000000, 0, -1087), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1086), 0), 100000000, 0, -1085), 0, (("src/parser_intf.ml", 114, 3318, 3324), ("src/parser_intf.ml", 114, 3318, 3343), 0), 0, Tag1 ("Parsexp__Parser_intf", 27)), 0); (("column", 2105), ((Tag1 (0, (Tag3 ((("t", 2102)), 0, (0)), 100000000, 0, -1084), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1083), 0), 100000000, 0, -1082), 0, (("src/parser_intf.ml", 115, 3344, 3350), ("src/parser_intf.ml", 115, 3344, 3371), 0), 0, Tag1 ("Parsexp__Parser_intf", 28)), 0); (("position", 2106), ((Tag1 (0, (Tag3 ((("t", 2102)), 0, (0)), 100000000, 0, -1081), (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -1080), 0), 100000000, 0, -1079), 0, (("src/parser_intf.ml", 116, 3372, 3378), ("src/parser_intf.ml", 116, 3372, 3411), 0), 0, Tag1 ("Parsexp__Parser_intf", 29)), 0)]), 0, (("src/parser_intf.ml", 109, 3201, 3205), ("src/parser_intf.ml", 117, 3412, 3419), 0), Tag1 ("Parsexp__Parser_intf", 30)), 0, 0); (("create", 2100), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -1054)], (0)), 100000000, 0, -1053), (Tag1 (Tag1 ("no_sexp_is_error"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1052)], (0)), 100000000, 0, -1051), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((("Read_only", 2099)), "t"), 0, (0)), 100000000, 0, -1050), (Tag1 (0, (Tag3 ((("parsed_value", 2082)), 0, (0)), 100000000, 0, -1049), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1048), 0), 100000000, 0, -1047), 0), 100000000, 0, -1046), (Tag3 ((("t", 2092)), 0, (0)), 100000000, 0, -1045), 0), 100000000, 0, -1044), 0), 100000000, 0, -1043), 0), 100000000, 0, -1042), 0, (("src/parser_intf.ml", 131, 4172, 4176), ("src/parser_intf.ml", 135, 4316, 4326), 0), 0, Tag1 ("Parsexp__Parser_intf", 31)), 0); (("old_parser_cont_state", 2101), ((Tag1 (0, (Tag3 ((("t", 2092)), 0, (0)), 100000000, 0, -1041), (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Old_parser_cont_state"), "t"), 0, (0)), 100000000, 0, -1040), 0), 100000000, 0, -1039), 0, (("src/parser_intf.ml", 139, 4341, 4345), ("src/parser_intf.ml", 139, 4341, 4401), 0), 0, Tag1 ("Parsexp__Parser_intf", 32)), 0)]), 0, (("src/parser_intf.ml", 106, 3161, 3163), ("src/parser_intf.ml", 142, 4415, 4420), 0), Tag1 ("Parsexp__Parser_intf", 33)), 0, 0); Tag3 (("Stack", 2084), 0, (Tag1 ([Tag1 (("t", 2107), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_stack"), "For_cst"), "t"), 0, (0)), 100000000, 0, -1092)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 89, 2779, 2788), ("src/parsexp_intf.ml", 89, 2779, 2828), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 58)), 1, 0); (("empty", 2108), ((Tag3 ((("t", 2107)), 0, (0)), 100000000, 0, -1091), 0, (("src/parser_intf.ml", 38, 919, 921), ("src/parser_intf.ml", 38, 919, 934), 0), 0, Tag1 ("Parsexp__Parser_intf", 10)), 0)]), 0, (("src/parser_intf.ml", 144, 4422, 4424), ("src/parser_intf.ml", 144, 4422, 4444), 0), Tag1 ("Parsexp__Parser_intf", 34)), 0, 0); (("feed", 2085), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2083)), "t"), 0, (0)), 100000000, 0, -1037), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1036), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2084)), "t"), 0, (0)), 100000000, 0, -1035), (Tag3 (Tag1 ((("Stack", 2084)), "t"), 0, (0)), 100000000, 0, -1034), 0), 100000000, 0, -1033), 0), 100000000, 0, -1032), 0), 100000000, 0, -1031), 0, (("src/parser_intf.ml", 146, 4446, 4448), ("src/parser_intf.ml", 146, 4446, 4496), 0), 0, Tag1 ("Parsexp__Parser_intf", 35)), 0); (("feed_eoi", 2086), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2083)), "t"), 0, (0)), 100000000, 0, -1030), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2084)), "t"), 0, (0)), 100000000, 0, -1029), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1028), 0), 100000000, 0, -1027), 0), 100000000, 0, -1026), 0, (("src/parser_intf.ml", 147, 4497, 4499), ("src/parser_intf.ml", 147, 4497, 4540), 0), 0, Tag1 ("Parsexp__Parser_intf", 36)), 0); (("feed_string", 2087), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2083)), "t"), 0, (0)), 100000000, 0, -1025), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1024), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2084)), "t"), 0, (0)), 100000000, 0, -1023), (Tag3 (Tag1 ((("Stack", 2084)), "t"), 0, (0)), 100000000, 0, -1022), 0), 100000000, 0, -1021), 0), 100000000, 0, -1020), 0), 100000000, 0, -1019), 0, (("src/parser_intf.ml", 148, 4541, 4543), ("src/parser_intf.ml", 148, 4541, 4600), 0), 0, Tag1 ("Parsexp__Parser_intf", 37)), 0); (("feed_substring", 2088), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2083)), "t"), 0, (0)), 100000000, 0, -1018), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1017), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1016), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1015), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2084)), "t"), 0, (0)), 100000000, 0, -1014), (Tag3 (Tag1 ((("Stack", 2084)), "t"), 0, (0)), 100000000, 0, -1013), 0), 100000000, 0, -1012), 0), 100000000, 0, -1011), 0), 100000000, 0, -1010), 0), 100000000, 0, -1009), 0), 100000000, 0, -1008), 0, (("src/parser_intf.ml", 149, 4601, 4603), ("src/parser_intf.ml", 149, 4601, 4685), 0), 0, Tag1 ("Parsexp__Parser_intf", 38)), 0); (("feed_bytes", 2089), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2083)), "t"), 0, (0)), 100000000, 0, -1007), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -1006), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2084)), "t"), 0, (0)), 100000000, 0, -1005), (Tag3 (Tag1 ((("Stack", 2084)), "t"), 0, (0)), 100000000, 0, -1004), 0), 100000000, 0, -1003), 0), 100000000, 0, -1002), 0), 100000000, 0, -1001), 0, (("src/parser_intf.ml", 150, 4686, 4688), ("src/parser_intf.ml", 150, 4686, 4743), 0), 0, Tag1 ("Parsexp__Parser_intf", 39)), 0); (("feed_subbytes", 2090), ((Tag1 (0, (Tag3 (Tag1 ((("State", 2083)), "t"), 0, (0)), 100000000, 0, -1000), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -999), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -998), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -997), (Tag1 (0, (Tag3 (Tag1 ((("Stack", 2084)), "t"), 0, (0)), 100000000, 0, -996), (Tag3 (Tag1 ((("Stack", 2084)), "t"), 0, (0)), 100000000, 0, -995), 0), 100000000, 0, -994), 0), 100000000, 0, -993), 0), 100000000, 0, -992), 0), 100000000, 0, -991), 0), 100000000, 0, -990), 0, (("src/parser_intf.ml", 151, 4744, 4746), ("src/parser_intf.ml", 151, 4744, 4826), 0), 0, Tag1 ("Parsexp__Parser_intf", 40)), 0); Tag3 (("Lexbuf_consumer", 2091), 0, (Tag1 ([Tag1 (("t", 2109), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/parser_intf.ml", 154, 4859, 4863), ("src/parser_intf.ml", 154, 4859, 4869), 0), 0, 0, 0, Tag1 ("Parsexp__Parser_intf", 41)), 1, 0); (("create", 2110), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1106), (Tag3 ((("t", 2109)), 0, (0)), 100000000, 0, -1105), 0), 100000000, 0, -1104), 0, (("src/parser_intf.ml", 156, 4871, 4875), ("src/parser_intf.ml", 156, 4871, 4897), 0), 0, Tag1 ("Parsexp__Parser_intf", 42)), 0); (("parse", 2111), ((Tag1 (0, (Tag3 ((("t", 2109)), 0, (0)), 100000000, 0, -1103), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -1102), (Tag3 ((("parsed_value", 2082)), 0, (0)), 100000000, 0, -1101), 0), 100000000, 0, -1100), 0), 100000000, 0, -1099), 0, (("src/parser_intf.ml", 159, 4972, 4976), ("src/parser_intf.ml", 159, 4972, 5022), 0), 0, Tag1 ("Parsexp__Parser_intf", 43)), 0); (("parse_opt", 2112), ((Tag1 (0, (Tag3 ((("t", 2109)), 0, (0)), 100000000, 0, -1098), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -1097), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("parsed_value", 2082)), 0, (0)), 100000000, 0, -1096)], (0)), 100000000, 0, -1095), 0), 100000000, 0, -1094), 0), 100000000, 0, -1093), 0, (("src/parser_intf.ml", 163, 5184, 5188), ("src/parser_intf.ml", 163, 5184, 5245), 0), 0, Tag1 ("Parsexp__Parser_intf", 44)), 0)]), 0, (("src/parser_intf.ml", 153, 4828, 4830), ("src/parser_intf.ml", 164, 5246, 5251), 0), Tag1 ("Parsexp__Parser_intf", 45)), 0, 0)]), 0, (("src/parsexp_intf.ml", 84, 2587, 2589), ("src/parsexp_intf.ml", 89, 2779, 2828), 0), Tag1 ("Parsexp__Parsexp_intf", 59)), 0, 0); Tag1 (("id", 1836), ([((("a")), 100000000, 0, -4)], 1, 0, 1, (((("a")), 100000000, 0, -4)), [25], [1], 0, 0, (("src/parsexp_intf.ml", 94, 2988, 2990), ("src/parsexp_intf.ml", 94, 2988, 3005), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 60)), 1, 0); Tag1 (("sexp_list", 1837), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -3)], (0)), 100000000, 0, -2)), 0, 0, 0, 0, (("src/parsexp_intf.ml", 95, 3006, 3008), ("src/parsexp_intf.ml", 95, 3006, 3036), 0), 0, 0, 0, Tag1 ("Parsexp__Parsexp_intf", 61)), 1, 0); Tag3 (("Conv_single", 1838), 0, (Tag1 ([(("parse_string", 2113), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1155), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -1154), ((("a")), 100000000, 0, -1151), 0), 100000000, 0, -1153), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("id", 1836)), [((("a")), 100000000, 0, -1151)], (0)), 100000000, 0, -1150); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Conv_error"), "t"), 0, (0)), 100000000, 0, -1152)], (0)), 100000000, 0, -1149), 0), 100000000, 0, -1148), 0), 100000000, 0, -1147), 0, (("src/parsexp_intf.ml", 98, 3061, 3065), ("src/parsexp_intf.ml", 101, 3136, 3173), 0), 0, Tag1 ("Parsexp__Conv_intf", 3)), 0); (("parse_string_exn", 2114), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1146), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -1145), ((("a")), 100000000, 0, -1143), 0), 100000000, 0, -1144), (Tag3 ((("id", 1836)), [((("a")), 100000000, 0, -1143)], (0)), 100000000, 0, -1142), 0), 100000000, 0, -1141), 0), 100000000, 0, -1140), 0, (("src/parsexp_intf.ml", 98, 3061, 3065), ("src/parsexp_intf.ml", 101, 3136, 3173), 0), 0, Tag1 ("Parsexp__Conv_intf", 4)), 0); (("conv", 2115), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -1138); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "t"), 0, (0)), 100000000, 0, -1139)]), 100000000, 0, -1137), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -1136), ((("a")), 100000000, 0, -1133), 0), 100000000, 0, -1135), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("id", 1836)), [((("a")), 100000000, 0, -1133)], (0)), 100000000, 0, -1132); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Of_sexp_error"), "t"), 0, (0)), 100000000, 0, -1134)], (0)), 100000000, 0, -1131), 0), 100000000, 0, -1130), 0), 100000000, 0, -1129), 0, (("src/parsexp_intf.ml", 98, 3061, 3065), ("src/parsexp_intf.ml", 101, 3136, 3173), 0), 0, Tag1 ("Parsexp__Conv_intf", 5)), 0); (("conv_exn", 2116), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -1127); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "t"), 0, (0)), 100000000, 0, -1128)]), 100000000, 0, -1126), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -1125), ((("a")), 100000000, 0, -1123), 0), 100000000, 0, -1124), (Tag3 ((("id", 1836)), [((("a")), 100000000, 0, -1123)], (0)), 100000000, 0, -1122), 0), 100000000, 0, -1121), 0), 100000000, 0, -1120), 0, (("src/parsexp_intf.ml", 98, 3061, 3065), ("src/parsexp_intf.ml", 101, 3136, 3173), 0), 0, Tag1 ("Parsexp__Conv_intf", 6)), 0); (("conv_combine", 2117), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag2 ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -1117); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "t"), 0, (0)), 100000000, 0, -1118)]), 100000000, 0, -1116); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Parse_error"), "t"), 0, (0)), 100000000, 0, -1119)], (0)), 100000000, 0, -1115), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -1114), ((("a")), 100000000, 0, -1111), 0), 100000000, 0, -1113), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("id", 1836)), [((("a")), 100000000, 0, -1111)], (0)), 100000000, 0, -1110); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Conv_error"), "t"), 0, (0)), 100000000, 0, -1112)], (0)), 100000000, 0, -1109), 0), 100000000, 0, -1108), 0), 100000000, 0, -1107), 0, (("src/parsexp_intf.ml", 98, 3061, 3065), ("src/parsexp_intf.ml", 101, 3136, 3173), 0), 0, Tag1 ("Parsexp__Conv_intf", 7)), 0)]), 0, (("src/parsexp_intf.ml", 97, 3038, 3040), ("src/parsexp_intf.ml", 101, 3136, 3173), 0), Tag1 ("Parsexp__Parsexp_intf", 65)), 0, 0); Tag3 (("Conv_many", 1839), 0, (Tag1 ([(("parse_string", 2118), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1204), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -1203), ((("a")), 100000000, 0, -1200), 0), 100000000, 0, -1202), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -1200)], (0)), 100000000, 0, -1199); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Conv_error"), "t"), 0, (0)), 100000000, 0, -1201)], (0)), 100000000, 0, -1198), 0), 100000000, 0, -1197), 0), 100000000, 0, -1196), 0, (("src/parsexp_intf.ml", 104, 3196, 3200), ("src/parsexp_intf.ml", 107, 3276, 3313), 0), 0, Tag1 ("Parsexp__Conv_intf", 3)), 0); (("parse_string_exn", 2119), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1195), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -1194), ((("a")), 100000000, 0, -1192), 0), 100000000, 0, -1193), (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -1192)], (0)), 100000000, 0, -1191), 0), 100000000, 0, -1190), 0), 100000000, 0, -1189), 0, (("src/parsexp_intf.ml", 104, 3196, 3200), ("src/parsexp_intf.ml", 107, 3276, 3313), 0), 0, Tag1 ("Parsexp__Conv_intf", 4)), 0); (("conv", 2120), ((Tag1 (0, (Tag2 ([(Tag3 ((("sexp_list", 1837)), 0, (0)), 100000000, 0, -1187); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "t"), 0, (0)), 100000000, 0, -1188)]), 100000000, 0, -1186), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -1185), ((("a")), 100000000, 0, -1182), 0), 100000000, 0, -1184), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -1182)], (0)), 100000000, 0, -1181); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Of_sexp_error"), "t"), 0, (0)), 100000000, 0, -1183)], (0)), 100000000, 0, -1180), 0), 100000000, 0, -1179), 0), 100000000, 0, -1178), 0, (("src/parsexp_intf.ml", 104, 3196, 3200), ("src/parsexp_intf.ml", 107, 3276, 3313), 0), 0, Tag1 ("Parsexp__Conv_intf", 5)), 0); (("conv_exn", 2121), ((Tag1 (0, (Tag2 ([(Tag3 ((("sexp_list", 1837)), 0, (0)), 100000000, 0, -1176); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "t"), 0, (0)), 100000000, 0, -1177)]), 100000000, 0, -1175), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -1174), ((("a")), 100000000, 0, -1172), 0), 100000000, 0, -1173), (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -1172)], (0)), 100000000, 0, -1171), 0), 100000000, 0, -1170), 0), 100000000, 0, -1169), 0, (("src/parsexp_intf.ml", 104, 3196, 3200), ("src/parsexp_intf.ml", 107, 3276, 3313), 0), 0, Tag1 ("Parsexp__Conv_intf", 6)), 0); (("conv_combine", 2122), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag2 ([(Tag3 ((("sexp_list", 1837)), 0, (0)), 100000000, 0, -1166); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "t"), 0, (0)), 100000000, 0, -1167)]), 100000000, 0, -1165); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Parse_error"), "t"), 0, (0)), 100000000, 0, -1168)], (0)), 100000000, 0, -1164), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -1163), ((("a")), 100000000, 0, -1160), 0), 100000000, 0, -1162), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -1160)], (0)), 100000000, 0, -1159); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Conv_error"), "t"), 0, (0)), 100000000, 0, -1161)], (0)), 100000000, 0, -1158), 0), 100000000, 0, -1157), 0), 100000000, 0, -1156), 0, (("src/parsexp_intf.ml", 104, 3196, 3200), ("src/parsexp_intf.ml", 107, 3276, 3313), 0), 0, Tag1 ("Parsexp__Conv_intf", 7)), 0)]), 0, (("src/parsexp_intf.ml", 103, 3175, 3177), ("src/parsexp_intf.ml", 107, 3276, 3313), 0), Tag1 ("Parsexp__Parsexp_intf", 69)), 0, 0); Tag3 (("Conv_many_at_once", 1840), 0, (Tag1 ([(("parse_string", 2123), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1253), (Tag1 (0, (Tag1 (0, (Tag3 ((("sexp_list", 1837)), 0, (0)), 100000000, 0, -1252), ((("a")), 100000000, 0, -1249), 0), 100000000, 0, -1251), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("id", 1836)), [((("a")), 100000000, 0, -1249)], (0)), 100000000, 0, -1248); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Conv_error"), "t"), 0, (0)), 100000000, 0, -1250)], (0)), 100000000, 0, -1247), 0), 100000000, 0, -1246), 0), 100000000, 0, -1245), 0, (("src/parsexp_intf.ml", 110, 3344, 3348), ("src/parsexp_intf.ml", 113, 3422, 3462), 0), 0, Tag1 ("Parsexp__Conv_intf", 3)), 0); (("parse_string_exn", 2124), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1244), (Tag1 (0, (Tag1 (0, (Tag3 ((("sexp_list", 1837)), 0, (0)), 100000000, 0, -1243), ((("a")), 100000000, 0, -1241), 0), 100000000, 0, -1242), (Tag3 ((("id", 1836)), [((("a")), 100000000, 0, -1241)], (0)), 100000000, 0, -1240), 0), 100000000, 0, -1239), 0), 100000000, 0, -1238), 0, (("src/parsexp_intf.ml", 110, 3344, 3348), ("src/parsexp_intf.ml", 113, 3422, 3462), 0), 0, Tag1 ("Parsexp__Conv_intf", 4)), 0); (("conv", 2125), ((Tag1 (0, (Tag2 ([(Tag3 ((("sexp_list", 1837)), 0, (0)), 100000000, 0, -1236); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "t"), 0, (0)), 100000000, 0, -1237)]), 100000000, 0, -1235), (Tag1 (0, (Tag1 (0, (Tag3 ((("sexp_list", 1837)), 0, (0)), 100000000, 0, -1234), ((("a")), 100000000, 0, -1231), 0), 100000000, 0, -1233), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("id", 1836)), [((("a")), 100000000, 0, -1231)], (0)), 100000000, 0, -1230); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Of_sexp_error"), "t"), 0, (0)), 100000000, 0, -1232)], (0)), 100000000, 0, -1229), 0), 100000000, 0, -1228), 0), 100000000, 0, -1227), 0, (("src/parsexp_intf.ml", 110, 3344, 3348), ("src/parsexp_intf.ml", 113, 3422, 3462), 0), 0, Tag1 ("Parsexp__Conv_intf", 5)), 0); (("conv_exn", 2126), ((Tag1 (0, (Tag2 ([(Tag3 ((("sexp_list", 1837)), 0, (0)), 100000000, 0, -1225); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "t"), 0, (0)), 100000000, 0, -1226)]), 100000000, 0, -1224), (Tag1 (0, (Tag1 (0, (Tag3 ((("sexp_list", 1837)), 0, (0)), 100000000, 0, -1223), ((("a")), 100000000, 0, -1221), 0), 100000000, 0, -1222), (Tag3 ((("id", 1836)), [((("a")), 100000000, 0, -1221)], (0)), 100000000, 0, -1220), 0), 100000000, 0, -1219), 0), 100000000, 0, -1218), 0, (("src/parsexp_intf.ml", 110, 3344, 3348), ("src/parsexp_intf.ml", 113, 3422, 3462), 0), 0, Tag1 ("Parsexp__Conv_intf", 6)), 0); (("conv_combine", 2127), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag2 ([(Tag3 ((("sexp_list", 1837)), 0, (0)), 100000000, 0, -1215); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "t"), 0, (0)), 100000000, 0, -1216)]), 100000000, 0, -1214); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Parse_error"), "t"), 0, (0)), 100000000, 0, -1217)], (0)), 100000000, 0, -1213), (Tag1 (0, (Tag1 (0, (Tag3 ((("sexp_list", 1837)), 0, (0)), 100000000, 0, -1212), ((("a")), 100000000, 0, -1209), 0), 100000000, 0, -1211), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("id", 1836)), [((("a")), 100000000, 0, -1209)], (0)), 100000000, 0, -1208); (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Conv_error"), "t"), 0, (0)), 100000000, 0, -1210)], (0)), 100000000, 0, -1207), 0), 100000000, 0, -1206), 0), 100000000, 0, -1205), 0, (("src/parsexp_intf.ml", 110, 3344, 3348), ("src/parsexp_intf.ml", 113, 3422, 3462), 0), 0, Tag1 ("Parsexp__Conv_intf", 7)), 0)]), 0, (("src/parsexp_intf.ml", 109, 3315, 3317), ("src/parsexp_intf.ml", 113, 3422, 3462), 0), Tag1 ("Parsexp__Parsexp_intf", 73)), 0, 0); Tag3 (("Private", 1841), 0, (Tag1 ([Tag3 (("Automaton", 2128), 1, (Tag3 (Tag1 ((Tag2 ("Parsexp__")), "Automaton")), 0, (("src/parsexp_intf.ml", 120, 3660, 3664), ("src/parsexp_intf.ml", 120, 3660, 3692), 0), Tag1 ("Parsexp__Parsexp_intf", 74)), 0, 0); Tag3 (("Automaton_stack", 2129), 1, (Tag3 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_stack")), 0, (("src/parsexp_intf.ml", 121, 3693, 3697), ("src/parsexp_intf.ml", 121, 3693, 3737), 0), Tag1 ("Parsexp__Parsexp_intf", 75)), 0, 0); Tag3 (("Automaton_state", 2130), 1, (Tag3 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_state")), 0, (("src/parsexp_intf.ml", 122, 3738, 3742), ("src/parsexp_intf.ml", 122, 3738, 3782), 0), Tag1 ("Parsexp__Parsexp_intf", 76)), 0, 0); Tag3 (("Positions", 2131), 1, (Tag3 ((("Positions", 1818))), 0, (("src/parsexp_intf.ml", 123, 3783, 3787), ("src/parsexp_intf.ml", 123, 3783, 3815), 0), Tag1 ("Parsexp__Parsexp_intf", 77)), 0, 0)]), 0, (("src/parsexp_intf.ml", 119, 3637, 3639), ("src/parsexp_intf.ml", 124, 3816, 3821), 0), Tag1 ("Parsexp__Parsexp_intf", 78)), 0, 0)])), 0, (("src/parsexp_intf.ml", 5, 46, 46), ("src/parsexp_intf.ml", 125, 3822, 3825), 0), Tag1 ("Parsexp__Parsexp_intf", 79)), 0)], "Parsexp__Parsexp_intf", [("Parsexp__Parsexp_intf", ("\006\239e\204\167\243e2&\192H\160\029XNm")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("Parsexp__Positions", ("BE\135\222xW\224\233\184\004o\169\248\bH\230")); ("Parsexp__Parser_intf", ("\154\197J\002\004\252i\162\190\241\151\210\157\024\167e")); ("Parsexp__Parser", ("n\164F;=\199\178\019\150]\2502\176\014a\165")); ("Parsexp__Parse_error_intf", ("\011\229\182\179W\161\176\160P\249\165\214ef\011\229")); ("Parsexp__Parse_error", ("*\031\166\142M\171\026\030\\K7\157Y\232\208\234")); ("Parsexp__Old_parser_cont_state", ("\2535&90\136_\154\027}Oc0\138%X")); ("Parsexp__Of_sexp_error", ("\253\171Y\150\210\218\191\255\160\211\134d/l\132\228")); ("Parsexp__Import", ("\017\029\157\225\239\135p*0\207\146\197\020\128\195!")); ("Parsexp__Cst", (")\228;6o~\227\000pRf\153\216\244sD")); ("Parsexp__Conv_intf", ("\004r\193,k\2254\168\149\229+hmw\134\228")); ("Parsexp__Conv_error", ("\195Bo\140A|\220\136\210\137\165&!\164\134\021")); ("Parsexp__Conv", ("\238|^\141\226\177\185\022$*\023\188\020\002P\229")); ("Parsexp__Automaton_state_intf", ("\196\146]2\143u|+%\027\185v2\225\r\229")); ("Parsexp__Automaton_state", ("L#\030=\218R\022 \228<\188-\r\211\157_")); ("Parsexp__Automaton_stack_intf", ("\235\204\0296]\2449F\029\b:\006\217\162f\024")); ("Parsexp__Automaton_stack", ("\246/\135\251\031)\015r\003\237\254S$\181\243\201")); ("Parsexp__", ("\182\180\203\030\218\020\246\196\221\171_\030GE\171\192")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

  end
