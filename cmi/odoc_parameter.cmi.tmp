type simple_name = {
  sn_name : string;
  sn_type : Types.type_expr;
  mutable sn_text : Odoc_types.text option;
}
type param_info =
    Simple_name of simple_name
  | Tuple of param_info list * Types.type_expr
type parameter = param_info
val complete_name : parameter -> string
val typ : parameter -> Types.type_expr
val update_parameter_text :
  (string -> Odoc_types.text option) -> parameter -> unit
val desc_by_name : parameter -> string -> Odoc_types.text option
val names : parameter -> string list
val type_by_name : parameter -> string -> Types.type_expr
val desc_from_info_opt :
  ("DEBUG:rule", [Tag1 (("simple_name", 409), (0, 0, [[(("sn_name", 270), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -43), (("odoc_parameter.mli", 21, 1195, 1197), ("odoc_parameter.mli", 21, 1195, 1214), 0), 0, Tag1 ("Odoc_parameter", 2)); (("sn_type", 377), 0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -44), (("odoc_parameter.mli", 22, 1215, 1217), ("odoc_parameter.mli", 22, 1215, 1243), 0), 0, Tag1 ("Odoc_parameter", 3)); (("sn_text", 397), 1, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -46)], (0)), 100000000, 0, -45), (("odoc_parameter.mli", 23, 1244, 1246), ("odoc_parameter.mli", 23, 1244, 1287), 0), 0, Tag1 ("Odoc_parameter", 4))]], 1, 0, 0, 0, 0, 0, (("odoc_parameter.mli", 20, 1174, 1174), ("odoc_parameter.mli", 24, 1288, 1289), 0), 0, 0, 0, Tag1 ("Odoc_parameter", 0)), 1, 0); Tag1 (("param_info", 410), (0, 0, Tag1 ([(("Simple_name", 399), ([(Tag3 ((("simple_name", 409)), 0, (0)), 100000000, 0, -39)]), 0, (("odoc_parameter.mli", 28, 1358, 1362), ("odoc_parameter.mli", 28, 1358, 1388), 0), 0, Tag1 ("Odoc_parameter", 6)); (("Tuple", 400), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("param_info", 410)), 0, (0)), 100000000, 0, -41)], (0)), 100000000, 0, -40); (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -42)]), 0, (("odoc_parameter.mli", 29, 1389, 1391), ("odoc_parameter.mli", 29, 1389, 1435), 0), 0, Tag1 ("Odoc_parameter", 7))], 0), 1, 0, 0, 0, 0, 0, (("odoc_parameter.mli", 27, 1340, 1340), ("odoc_parameter.mli", 29, 1389, 1435), 0), 0, 0, 0, Tag1 ("Odoc_parameter", 5)), 1, 0); Tag1 (("parameter", 411), (0, 0, 0, 1, ((Tag3 ((("param_info", 410)), 0, (0)), 100000000, 0, -38)), 0, 0, 0, 0, (("odoc_parameter.mli", 33, 1593, 1593), ("odoc_parameter.mli", 33, 1593, 1620), 0), 0, 0, 0, Tag1 ("Odoc_parameter", 8)), 1, 0); (("complete_name", 412), ((Tag1 (0, (Tag3 ((("parameter", 411)), 0, (0)), 100000000, 0, -37), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("odoc_parameter.mli", 38, 1680, 1680), ("odoc_parameter.mli", 38, 1680, 1719), 0), 0, Tag1 ("Odoc_parameter", 9)), 0); (("typ", 413), ((Tag1 (0, (Tag3 ((("parameter", 411)), 0, (0)), 100000000, 0, -34), (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0, (("odoc_parameter.mli", 41, 1806, 1806), ("odoc_parameter.mli", 41, 1806, 1844), 0), 0, Tag1 ("Odoc_parameter", 10)), 0); (("update_parameter_text", 414), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -31), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -30)], (0)), 100000000, 0, -29), 0), 100000000, 0, -28), (Tag1 (0, (Tag3 ((("parameter", 411)), 0, (0)), 100000000, 0, -27), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("odoc_parameter.mli", 44, 1881, 1881), ("odoc_parameter.mli", 45, 1909, 1966), 0), 0, Tag1 ("Odoc_parameter", 11)), 0); (("desc_by_name", 415), ((Tag1 (0, (Tag3 ((("parameter", 411)), 0, (0)), 100000000, 0, -23), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -22), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -21)], (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("odoc_parameter.mli", 49, 2085, 2085), ("odoc_parameter.mli", 49, 2085, 2149), 0), 0, Tag1 ("Odoc_parameter", 12)), 0); (("names", 416), ((Tag1 (0, (Tag3 ((("parameter", 411)), 0, (0)), 100000000, 0, -17), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -16)], (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("odoc_parameter.mli", 53, 2275, 2275), ("odoc_parameter.mli", 53, 2275, 2311), 0), 0, Tag1 ("Odoc_parameter", 13)), 0); (("type_by_name", 417), ((Tag1 (0, (Tag3 ((("parameter", 411)), 0, (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -12), (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("odoc_parameter.mli", 57, 2408, 2408), ("odoc_parameter.mli", 57, 2408, 2465), 0), 0, Tag1 ("Odoc_parameter", 14)), 0); (("desc_from_info_opt", 418), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -8)], (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -5)], (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("odoc_parameter.mli", 61, 2577, 2577), ("odoc_parameter.mli", 62, 2602, 2662), 0), 0, Tag1 ("Odoc_parameter", 15)), 0)], "Odoc_parameter", [("Odoc_parameter", ("\194t\209\014\154<\178\\\138k\221\183w\133L\167")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Odoc_types", ("<k{\137\201\170z%E\221\170\147\151\127\189\015")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216"))], [(0)])
Odoc_types.info option -> string -> Odoc_types.text option
