type t =
  Ppxlib__.Import.location = {
  loc_start : Lexing.position;
  loc_end : Lexing.position;
  loc_ghost : bool;
}
val in_file : string -> t
val set_filename : t -> string -> t
val none : t
val init : Lexing.lexbuf -> string -> unit
val raise_errorf :
  ?loc:t ->
  ('a, Ppxlib__.Import.Caml.Format.formatter, unit, 'b) format4 -> 'a
val of_lexbuf : Lexing.lexbuf -> t
val report_exception : Ppxlib__.Import.Caml.Format.formatter -> exn -> unit
val print : Ppxlib__.Import.Caml.Format.formatter -> t -> unit
type nonrec 'a loc = 'a Ppxlib__.Import.loc = { txt : 'a; loc : t; }
val compare_pos : Lexing.position -> Lexing.position -> int
val min_pos : Lexing.position -> Lexing.position -> Lexing.position
val max_pos : Lexing.position -> Lexing.position -> Lexing.position
val compare : t -> t -> int
module Error :
  sig
    type t
    val make : loc:t/2 -> string -> sub:(t/2 * string) list -> t
    val createf :
      loc:t/2 ->
      ('a, Ppxlib__.Import.Caml.Format.formatter, unit, t) format4 -> 'a
    val message : t -> string
    val set_message : t -> string -> t
    val register_error_of_exn : (exn -> t option) -> unit
    val of_exn : exn -> t option
    val to_extension : t -> Ppxlib__.Import.extension
    val raise : t -> 'a
    val update_loc : t -> t/2 -> t
    val get_location : t -> t/2
  end
val error_extensionf :
  loc:t ->
  ('a, Format.formatter, unit, Ppxlib__.Import.extension) format4 -> 'a
("DEBUG:rule", [Tag1 (("t", 1216), (0, 0, [[(("loc_start", 563), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -71), (("src/location.mli", 12, 355, 357), ("src/location.mli", 12, 355, 385), 0), 0, Tag1 ("Ppxlib__Location", 1)); (("loc_end", 564), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -72), (("src/location.mli", 13, 386, 388), ("src/location.mli", 13, 386, 414), 0), 0, Tag1 ("Ppxlib__Location", 2)); (("loc_ghost", 565), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -73), (("src/location.mli", 14, 415, 417), ("src/location.mli", 14, 415, 434), 0), 0, Tag1 ("Ppxlib__Location", 3))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "location"), 0, (0)), 100000000, 0, -70)), 0, 0, 0, 0, (("src/location.mli", 11, 333, 333), ("src/location.mli", 15, 435, 436), 0), 0, 0, 0, Tag1 ("Ppxlib__Location", 0)), 1, 0); (("in_file", 1217), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -69), (Tag3 ((("t", 1216)), 0, (0)), 100000000, 0, -68), 0), 100000000, 0, -67), 0, (("src/location.mli", 17, 438, 438), ("src/location.mli", 17, 438, 463), 0), 0, Tag1 ("Ppxlib__Location", 4)), 0); (("set_filename", 1218), ((Tag1 (0, (Tag3 ((("t", 1216)), 0, (0)), 100000000, 0, -66), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -65), (Tag3 ((("t", 1216)), 0, (0)), 100000000, 0, -64), 0), 100000000, 0, -63), 0), 100000000, 0, -62), 0, (("src/location.mli", 20, 525, 525), ("src/location.mli", 20, 525, 560), 0), 0, Tag1 ("Ppxlib__Location", 5)), 0); (("none", 1219), ((Tag3 ((("t", 1216)), 0, (0)), 100000000, 0, -61), 0, (("src/location.mli", 23, 646, 646), ("src/location.mli", 23, 646, 658), 0), 0, Tag1 ("Ppxlib__Location", 6)), 0); (("init", 1220), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -60), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -59), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("src/location.mli", 26, 731, 731), ("src/location.mli", 26, 731, 773), 0), 0, Tag1 ("Ppxlib__Location", 7)), 0); (("raise_errorf", 1221), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 1216)), 0, (0)), 100000000, 0, -55)], (0)), 100000000, 0, -54), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format4"), [((("a")), 100000000, 0, -49); (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "Caml"), "Format"), "formatter"), 0, (0)), 100000000, 0, -51); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -52); ((("b")), 100000000, 0, -53)], (0)), 100000000, 0, -50), ((("a")), 100000000, 0, -49), 0), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("src/location.mli", 30, 871, 871), ("src/location.mli", 30, 871, 951), 0), 0, Tag1 ("Ppxlib__Location", 8)), 0); (("of_lexbuf", 1222), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -46), (Tag3 ((("t", 1216)), 0, (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("src/location.mli", 35, 1140, 1140), ("src/location.mli", 35, 1140, 1174), 0), 0, Tag1 ("Ppxlib__Location", 9)), 0); (("report_exception", 1223), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "Caml"), "Format"), "formatter"), 0, (0)), 100000000, 0, -43), (Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -42), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("src/location.mli", 38, 1256, 1256), ("src/location.mli", 38, 1256, 1315), 0), 0, Tag1 ("Ppxlib__Location", 10)), 0); (("print", 1224), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "Caml"), "Format"), "formatter"), 0, (0)), 100000000, 0, -38), (Tag1 (0, (Tag3 ((("t", 1216)), 0, (0)), 100000000, 0, -37), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("src/location.mli", 41, 1367, 1367), ("src/location.mli", 41, 1367, 1413), 0), 0, Tag1 ("Ppxlib__Location", 11)), 0); Tag1 (("loc", 1225), ([((("a")), 100000000, 0, -32)], 1, [[(("txt", 1149), 0, ((("a")), 100000000, 0, -32), (("src/location.mli", 44, 1473, 1505), ("src/location.mli", 44, 1473, 1514), 0), 0, Tag1 ("Ppxlib__Location", 13)); (("loc", 1150), 0, (Tag3 ((("t", 1216)), 0, (0)), 100000000, 0, -33), (("src/location.mli", 44, 1473, 1515), ("src/location.mli", 44, 1473, 1522), 0), 0, Tag1 ("Ppxlib__Location", 14))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "loc"), [((("a")), 100000000, 0, -32)], (0)), 100000000, 0, -31)), [25], [0], 0, 0, (("src/location.mli", 44, 1473, 1473), ("src/location.mli", 44, 1473, 1524), 0), 0, 0, 0, Tag1 ("Ppxlib__Location", 12)), 0, 0); (("compare_pos", 1226), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -30), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -29), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("src/location.mli", 46, 1526, 1526), ("src/location.mli", 46, 1526, 1585), 0), 0, Tag1 ("Ppxlib__Location", 15)), 0); (("min_pos", 1227), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -25), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -24), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("src/location.mli", 47, 1586, 1586), ("src/location.mli", 47, 1586, 1653), 0), 0, Tag1 ("Ppxlib__Location", 16)), 0); (("max_pos", 1228), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -20), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -19), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("src/location.mli", 48, 1654, 1654), ("src/location.mli", 48, 1654, 1721), 0), 0, Tag1 ("Ppxlib__Location", 17)), 0); (("compare", 1229), ((Tag1 (0, (Tag3 ((("t", 1216)), 0, (0)), 100000000, 0, -15), (Tag1 (0, (Tag3 ((("t", 1216)), 0, (0)), 100000000, 0, -14), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("src/location.mli", 49, 1722, 1722), ("src/location.mli", 49, 1722, 1749), 0), 0, Tag1 ("Ppxlib__Location", 18)), 0); Tag3 (("Error", 1230), 0, (Tag1 ([Tag1 (("t", 1233), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/location.mli", 51, 1751, 1766), ("src/location.mli", 88, 2957, 2980), 0), 0, 0, 0, Tag1 ("Ppxlib__Location", 20)), 1, 0); (("make", 1234), ((Tag1 (("loc"), (Tag3 ((("t", 1216)), 0, (0)), 100000000, 0, -123), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -122), (Tag1 (("sub"), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("t", 1216)), 0, (0)), 100000000, 0, -120); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -121)]), 100000000, 0, -119)], (0)), 100000000, 0, -118), (Tag3 ((("t", 1233)), 0, (0)), 100000000, 0, -117), 0), 100000000, 0, -116), 0), 100000000, 0, -115), 0), 100000000, 0, -114), 0, (("src/location.mli", 51, 1751, 1766), ("src/location.mli", 88, 2957, 2980), 0), 0, Tag1 ("Ppxlib__Location", 21)), 0); (("createf", 1235), ((Tag1 (("loc"), (Tag3 ((("t", 1216)), 0, (0)), 100000000, 0, -113), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format4"), [((("a")), 100000000, 0, -108); (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "Caml"), "Format"), "formatter"), 0, (0)), 100000000, 0, -110); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -111); (Tag3 ((("t", 1233)), 0, (0)), 100000000, 0, -112)], (0)), 100000000, 0, -109), ((("a")), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), 0, (("src/location.mli", 51, 1751, 1766), ("src/location.mli", 88, 2957, 2980), 0), 0, Tag1 ("Ppxlib__Location", 22)), 0); (("message", 1236), ((Tag1 (0, (Tag3 ((("t", 1233)), 0, (0)), 100000000, 0, -105), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -104), 0), 100000000, 0, -103), 0, (("src/location.mli", 51, 1751, 1766), ("src/location.mli", 88, 2957, 2980), 0), 0, Tag1 ("Ppxlib__Location", 23)), 0); (("set_message", 1237), ((Tag1 (0, (Tag3 ((("t", 1233)), 0, (0)), 100000000, 0, -102), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -101), (Tag3 ((("t", 1233)), 0, (0)), 100000000, 0, -100), 0), 100000000, 0, -99), 0), 100000000, 0, -98), 0, (("src/location.mli", 51, 1751, 1766), ("src/location.mli", 88, 2957, 2980), 0), 0, Tag1 ("Ppxlib__Location", 24)), 0); (("register_error_of_exn", 1238), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -97), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 1233)), 0, (0)), 100000000, 0, -96)], (0)), 100000000, 0, -95), 0), 100000000, 0, -94), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -93), 0), 100000000, 0, -92), 0, (("src/location.mli", 51, 1751, 1766), ("src/location.mli", 88, 2957, 2980), 0), 0, Tag1 ("Ppxlib__Location", 25)), 0); (("of_exn", 1239), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -91), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 1233)), 0, (0)), 100000000, 0, -90)], (0)), 100000000, 0, -89), 0), 100000000, 0, -88), 0, (("src/location.mli", 51, 1751, 1766), ("src/location.mli", 88, 2957, 2980), 0), 0, Tag1 ("Ppxlib__Location", 26)), 0); (("to_extension", 1240), ((Tag1 (0, (Tag3 ((("t", 1233)), 0, (0)), 100000000, 0, -87), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "extension"), 0, (0)), 100000000, 0, -86), 0), 100000000, 0, -85), 0, (("src/location.mli", 51, 1751, 1766), ("src/location.mli", 88, 2957, 2980), 0), 0, Tag1 ("Ppxlib__Location", 27)), 0); (("raise", 1241), ((Tag1 (0, (Tag3 ((("t", 1233)), 0, (0)), 100000000, 0, -84), ((("a")), 100000000, 0, -83), 0), 100000000, 0, -82), 0, (("src/location.mli", 51, 1751, 1766), ("src/location.mli", 88, 2957, 2980), 0), 0, Tag1 ("Ppxlib__Location", 28)), 0); (("update_loc", 1242), ((Tag1 (0, (Tag3 ((("t", 1233)), 0, (0)), 100000000, 0, -81), (Tag1 (0, (Tag3 ((("t", 1216)), 0, (0)), 100000000, 0, -80), (Tag3 ((("t", 1233)), 0, (0)), 100000000, 0, -79), 0), 100000000, 0, -78), 0), 100000000, 0, -77), 0, (("src/location.mli", 51, 1751, 1766), ("src/location.mli", 88, 2957, 2980), 0), 0, Tag1 ("Ppxlib__Location", 29)), 0); (("get_location", 1243), ((Tag1 (0, (Tag3 ((("t", 1233)), 0, (0)), 100000000, 0, -76), (Tag3 ((("t", 1216)), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), 0, (("src/location.mli", 51, 1751, 1766), ("src/location.mli", 88, 2957, 2980), 0), 0, Tag1 ("Ppxlib__Location", 30)), 0)]), 0, (("src/location.mli", 51, 1751, 1751), ("src/location.mli", 88, 2957, 2980), 0), Tag1 ("Ppxlib__Location", 32)), 0, 0); (("error_extensionf", 1231), ((Tag1 (("loc"), (Tag3 ((("t", 1216)), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format4"), [((("a")), 100000000, 0, -5); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -7); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -8); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "extension"), 0, (0)), 100000000, 0, -9)], (0)), 100000000, 0, -6), ((("a")), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0, (("src/location.mli", 90, 2982, 2982), ("src/location.mli", 91, 3005, 3069), 0), 0, Tag1 ("Ppxlib__Location", 33)), 0); Tag2 (("Error", 1232), ((Tag3 ("exn", 7)), 0, ([(Tag3 (Tag1 ((("Error", 1230)), "t"), 0, (0)), 100000000, 0, -2)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ppxlib__Location", 34)), 2, 0)], "Ppxlib__Location", [("Ppxlib__Location", ("\r\139A\176n\135\029#\213\194&\153}\132\b\193")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Subst", ("\021\031\148\223\127\186\189\135\027}\145r\216\143\177\156")); ("Stdppx", ("=:\209>\156\207\149\181\248\131\161P-\254\025q")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__StringLabels", ("\134F\024\226\216Is#\223\230\234\169Z\206Gc")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__ListLabels", ("*\194\012\191\020%\170\249m\002\180\178hk\205\220")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Char", ("\1794\1468\190\138\150g\231\240\140d\191.\212e")); ("Stdlib__BytesLabels", ("\145\128\000\239\186Z.\0310^\247\201\174\\\137R")); ("Stdlib__Bytes", ("C\134\194)\175\222\137p\205\246\244\r\241\164P\209")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Arg", ("\024%=\206\198p\149Y\007\004\216,&\254#\207")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("Profile", ("\201i\132?<qM\169\011\239@\142\202\182\023,")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Ppxlib_ast__Versions", ("\005+\189\023\165C\208\138FX6X\224\005\223\t")); ("Ppxlib_ast__Import", ("\027\222\n&\137\144M\230R\150g=Y\198\007\233")); ("Ppxlib_ast__Ast", ("?\026\134=\154d\183u\023\212\177\192\b]\250E")); ("Ppxlib_ast__", ("\182{\159J6;\249\149\208}`\139\002r\020x")); ("Ppxlib_ast", ("\002y:\229,^V\247~U\236~\232\131I\154")); ("Ppxlib__Import", ("\146|\185\205\005c\141\174\165\006\1517\177}\\\241")); ("Ppxlib__", ("JQ\224\000Y\175_]O\b\254O\194|\017\237")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Ocaml_common", ("1\212\195\020\163\232\187\142G\192\221\180@\1278u")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Load_path", ("\012@\228l\230\164S\172h\1726X\020\252o}")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("Env", ("\021\n\181\142x\b\169j\227\"\017\248*\178\245\223")); ("Compmisc", ("B\127\\\174\004T\179\002\242}-C\214\152H*")); ("Cmi_format", ("6\177\bU\139\"\023\152=\249\135\174\b\011Cg")); ("Clflags", ("\162v\193G\199E|\029\023{\b\243]B\144;")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216")); ("Astlib__Parse", ("\203iQ\135d.\147$\t\207\203C\131\175\193\171")); ("Astlib__Longident", ("\n\192\233\142\177n\225\191\238\161#\150\204n\"Y")); ("Astlib__Location", ("nn\153\250\162\2239\215\129\229e\026xg\000U")); ("Astlib__Ast_501", ("\207\"A\188\024\242Q\223\153\146\239\128\168h\148&")); ("Astlib__Ast_500", ("\202\202\240\178Ep\168 [f\246\t\162T\141\254")); ("Astlib__Ast_414", ("i\179p\208\134r\2177\243\167\157nF\235\143\179")); ("Astlib__Ast_413", ("\240P\019\205\016\157\177\177O)\172\193\028\192\011\190")); ("Astlib__Ast_412", (">\181S\020\t\004\1998\163p\025\210s\216\251\169")); ("Astlib__Ast_411", ("\030\186y\191\005D\180nv\183\b@1\225\168+")); ("Astlib__Ast_410", ("\023\030O]m0\005\214X\n/\226c\201\214\232")); ("Astlib__Ast_409", ("P\147I\234\185H\181\153\207\221\003\165\139\161\150\027")); ("Astlib__Ast_408", ("\225\220%%\162\188\006W\007\252\001X\158\165,\004")); ("Astlib__Ast_407", ("\163\202\2018`\230bGY\138/\021'\148:\018")); ("Astlib__Ast_406", ("v\152\031Q\232\244\141\011p\012\161\164hy\203\151")); ("Astlib__Ast_405", ("\145;\017\238\241\127\173z\138\142Q4>\198\186\207")); ("Astlib__Ast_404", ("I\027\143Zr\250\2468\193\167uOo\029\236\148")); ("Astlib__Ast_403", ("\206M\242\247\155X\251\127\002Ly\024\154\245\153\180")); ("Astlib__Ast_402", ("\178]\161\230\193\144:\005/\\~\127'|\207\189")); ("Astlib__", ("\246\155.n\143$\1435\bi\005\019C\219\191A")); ("Astlib", ("\002*Xp\193\003\201C\234Q\143\029\232\1569\007"))], [(0)])
exception Error of Error.t
