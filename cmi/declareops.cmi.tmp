val universes_context : Declarations.universes -> Univ.AbstractContext.t
val abstract_universes :
  Entries.universes_entry ->
  Univ.universe_level_subst * Declarations.universes
val map_decl_arity :
  ('a -> 'c) ->
  ('b -> 'd) ->
  ('a, 'b) Declarations.declaration_arity ->
  ('c, 'd) Declarations.declaration_arity
val subst_const_body :
  Mod_subst.substitution ->
  Declarations.constant_body -> Declarations.constant_body
val constant_has_body : 'a Declarations.pconstant_body -> bool
val constant_polymorphic_context :
  'a Declarations.pconstant_body -> Univ.AbstractContext.t
val constant_is_polymorphic : 'a Declarations.pconstant_body -> bool
val is_opaque : 'a Declarations.pconstant_body -> bool
val eq_recarg : Declarations.recarg -> Declarations.recarg -> bool
val pp_recarg : Declarations.recarg -> Pp.t
val pp_wf_paths : Declarations.wf_paths -> Pp.t
val subst_recarg :
  Mod_subst.substitution -> Declarations.recarg -> Declarations.recarg
val mk_norec : Declarations.wf_paths
val mk_paths :
  Declarations.recarg ->
  Declarations.wf_paths list array -> Declarations.wf_paths
val dest_recarg : Declarations.wf_paths -> Declarations.recarg
val dest_subterms : Declarations.wf_paths -> Declarations.wf_paths list array
val recarg_length : Declarations.wf_paths -> int -> int
val subst_wf_paths :
  Mod_subst.substitution -> Declarations.wf_paths -> Declarations.wf_paths
val subst_mind_body :
  Mod_subst.substitution ->
  Declarations.mutual_inductive_body -> Declarations.mutual_inductive_body
val inductive_polymorphic_context :
  Declarations.mutual_inductive_body -> Univ.AbstractContext.t
val inductive_is_polymorphic : Declarations.mutual_inductive_body -> bool
val inductive_is_cumulative : Declarations.mutual_inductive_body -> bool
val inductive_make_projection :
  Names.inductive ->
  Declarations.mutual_inductive_body ->
  proj_arg:int -> Names.Projection.Repr.t
val inductive_make_projections :
  Names.inductive ->
  Declarations.mutual_inductive_body -> Names.Projection.Repr.t array option
val relevance_of_projection_repr :
  Declarations.mutual_inductive_body ->
  Names.Projection.Repr.t -> Sorts.relevance
val safe_flags : Conv_oracle.oracle -> Declarations.typing_flags
val hcons_const_body :
  'a Declarations.pconstant_body -> 'a Declarations.pconstant_body
val hcons_mind :
  Declarations.mutual_inductive_body -> Declarations.mutual_inductive_body
val hcons_module_body : Declarations.module_body -> Declarations.module_body
val hcons_module_type :
  ("DEBUG:rule", [(("universes_context", 692), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "universes"), 0, (0)), 100000000, 0, -132), (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "AbstractContext"), "t"), 0, (0)), 100000000, 0, -131), 0), 100000000, 0, -130), 0, (("kernel/declareops.mli", 18, 840, 840), ("kernel/declareops.mli", 18, 840, 894), 0), 0, Tag1 ("Declareops", 0)), 0); (("abstract_universes", 693), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Entries")), "universes_entry"), 0, (0)), 100000000, 0, -129), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Univ")), "universe_level_subst"), 0, (0)), 100000000, 0, -127); (Tag3 (Tag1 ((Tag2 ("Declarations")), "universes"), 0, (0)), 100000000, 0, -128)]), 100000000, 0, -126), 0), 100000000, 0, -125), 0, (("kernel/declareops.mli", 20, 896, 896), ("kernel/declareops.mli", 20, 896, 985), 0), 0, Tag1 ("Declareops", 1)), 0); (("map_decl_arity", 694), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -121), ((("c")), 100000000, 0, -118), 0), 100000000, 0, -124), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -122), ((("d")), 100000000, 0, -119), 0), 100000000, 0, -123), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "declaration_arity"), [((("a")), 100000000, 0, -121); ((("b")), 100000000, 0, -122)], (0)), 100000000, 0, -120), (Tag3 (Tag1 ((Tag2 ("Declarations")), "declaration_arity"), [((("c")), 100000000, 0, -118); ((("d")), 100000000, 0, -119)], (0)), 100000000, 0, -117), 0), 100000000, 0, -116), 0), 100000000, 0, -115), 0), 100000000, 0, -114), 0, (("kernel/declareops.mli", 24, 1007, 1007), ("kernel/declareops.mli", 25, 1056, 1114), 0), 0, Tag1 ("Declareops", 2)), 0); (("subst_const_body", 695), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Mod_subst")), "substitution"), 0, (0)), 100000000, 0, -113), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "constant_body"), 0, (0)), 100000000, 0, -112), (Tag3 (Tag1 ((Tag2 ("Declarations")), "constant_body"), 0, (0)), 100000000, 0, -111), 0), 100000000, 0, -110), 0), 100000000, 0, -109), 0, (("kernel/declareops.mli", 29, 1138, 1138), ("kernel/declareops.mli", 29, 1138, 1207), 0), 0, Tag1 ("Declareops", 3)), 0); (("constant_has_body", 696), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "pconstant_body"), [((("a")), 100000000, 0, -108)], (0)), 100000000, 0, -107), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -106), 0), 100000000, 0, -105), 0, (("kernel/declareops.mli", 33, 1256, 1256), ("kernel/declareops.mli", 33, 1256, 1305), 0), 0, Tag1 ("Declareops", 4)), 0); (("constant_polymorphic_context", 697), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "pconstant_body"), [((("a")), 100000000, 0, -104)], (0)), 100000000, 0, -103), (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "AbstractContext"), "t"), 0, (0)), 100000000, 0, -102), 0), 100000000, 0, -101), 0, (("kernel/declareops.mli", 35, 1307, 1307), ("kernel/declareops.mli", 35, 1307, 1380), 0), 0, Tag1 ("Declareops", 5)), 0); (("constant_is_polymorphic", 698), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "pconstant_body"), [((("a")), 100000000, 0, -100)], (0)), 100000000, 0, -99), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -98), 0), 100000000, 0, -97), 0, (("kernel/declareops.mli", 38, 1418, 1418), ("kernel/declareops.mli", 38, 1418, 1473), 0), 0, Tag1 ("Declareops", 6)), 0); (("is_opaque", 699), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "pconstant_body"), [((("a")), 100000000, 0, -96)], (0)), 100000000, 0, -95), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -94), 0), 100000000, 0, -93), 0, (("kernel/declareops.mli", 43, 1587, 1587), ("kernel/declareops.mli", 43, 1587, 1628), 0), 0, Tag1 ("Declareops", 7)), 0); (("eq_recarg", 700), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "recarg"), 0, (0)), 100000000, 0, -92), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "recarg"), 0, (0)), 100000000, 0, -91), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -90), 0), 100000000, 0, -89), 0), 100000000, 0, -88), 0, (("kernel/declareops.mli", 47, 1658, 1658), ("kernel/declareops.mli", 47, 1658, 1698), 0), 0, Tag1 ("Declareops", 8)), 0); (("pp_recarg", 701), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "recarg"), 0, (0)), 100000000, 0, -87), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -86), 0), 100000000, 0, -85), 0, (("kernel/declareops.mli", 49, 1700, 1700), ("kernel/declareops.mli", 49, 1700, 1730), 0), 0, Tag1 ("Declareops", 9)), 0); (("pp_wf_paths", 702), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "wf_paths"), 0, (0)), 100000000, 0, -84), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -83), 0), 100000000, 0, -82), 0, (("kernel/declareops.mli", 50, 1731, 1731), ("kernel/declareops.mli", 50, 1731, 1765), 0), 0, Tag1 ("Declareops", 10)), 0); (("subst_recarg", 703), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Mod_subst")), "substitution"), 0, (0)), 100000000, 0, -81), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "recarg"), 0, (0)), 100000000, 0, -80), (Tag3 (Tag1 ((Tag2 ("Declarations")), "recarg"), 0, (0)), 100000000, 0, -79), 0), 100000000, 0, -78), 0), 100000000, 0, -77), 0, (("kernel/declareops.mli", 52, 1767, 1767), ("kernel/declareops.mli", 52, 1767, 1818), 0), 0, Tag1 ("Declareops", 11)), 0); (("mk_norec", 704), ((Tag3 (Tag1 ((Tag2 ("Declarations")), "wf_paths"), 0, (0)), 100000000, 0, -76), 0, (("kernel/declareops.mli", 54, 1820, 1820), ("kernel/declareops.mli", 54, 1820, 1843), 0), 0, Tag1 ("Declareops", 12)), 0); (("mk_paths", 705), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "recarg"), 0, (0)), 100000000, 0, -75), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Declarations")), "wf_paths"), 0, (0)), 100000000, 0, -74)], (0)), 100000000, 0, -73)], (0)), 100000000, 0, -72), (Tag3 (Tag1 ((Tag2 ("Declarations")), "wf_paths"), 0, (0)), 100000000, 0, -71), 0), 100000000, 0, -70), 0), 100000000, 0, -69), 0, (("kernel/declareops.mli", 55, 1844, 1844), ("kernel/declareops.mli", 55, 1844, 1900), 0), 0, Tag1 ("Declareops", 13)), 0); (("dest_recarg", 706), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "wf_paths"), 0, (0)), 100000000, 0, -68), (Tag3 (Tag1 ((Tag2 ("Declarations")), "recarg"), 0, (0)), 100000000, 0, -67), 0), 100000000, 0, -66), 0, (("kernel/declareops.mli", 56, 1901, 1901), ("kernel/declareops.mli", 56, 1901, 1937), 0), 0, Tag1 ("Declareops", 14)), 0); (("dest_subterms", 707), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "wf_paths"), 0, (0)), 100000000, 0, -65), (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Declarations")), "wf_paths"), 0, (0)), 100000000, 0, -64)], (0)), 100000000, 0, -63)], (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("kernel/declareops.mli", 57, 1938, 1938), ("kernel/declareops.mli", 57, 1938, 1989), 0), 0, Tag1 ("Declareops", 15)), 0); (("recarg_length", 708), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "wf_paths"), 0, (0)), 100000000, 0, -60), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -59), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("kernel/declareops.mli", 58, 1990, 1990), ("kernel/declareops.mli", 58, 1990, 2032), 0), 0, Tag1 ("Declareops", 16)), 0); (("subst_wf_paths", 709), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Mod_subst")), "substitution"), 0, (0)), 100000000, 0, -55), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "wf_paths"), 0, (0)), 100000000, 0, -54), (Tag3 (Tag1 ((Tag2 ("Declarations")), "wf_paths"), 0, (0)), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("kernel/declareops.mli", 60, 2034, 2034), ("kernel/declareops.mli", 60, 2034, 2091), 0), 0, Tag1 ("Declareops", 17)), 0); (("subst_mind_body", 710), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Mod_subst")), "substitution"), 0, (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "mutual_inductive_body"), 0, (0)), 100000000, 0, -49), (Tag3 (Tag1 ((Tag2 ("Declarations")), "mutual_inductive_body"), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("kernel/declareops.mli", 62, 2093, 2093), ("kernel/declareops.mli", 62, 2093, 2177), 0), 0, Tag1 ("Declareops", 18)), 0); (("inductive_polymorphic_context", 711), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "mutual_inductive_body"), 0, (0)), 100000000, 0, -45), (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "AbstractContext"), "t"), 0, (0)), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("kernel/declareops.mli", 64, 2179, 2179), ("kernel/declareops.mli", 64, 2179, 2257), 0), 0, Tag1 ("Declareops", 19)), 0); (("inductive_is_polymorphic", 712), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "mutual_inductive_body"), 0, (0)), 100000000, 0, -42), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("kernel/declareops.mli", 67, 2296, 2296), ("kernel/declareops.mli", 67, 2296, 2356), 0), 0, Tag1 ("Declareops", 20)), 0); (("inductive_is_cumulative", 713), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "mutual_inductive_body"), 0, (0)), 100000000, 0, -39), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -38), 0), 100000000, 0, -37), 0, (("kernel/declareops.mli", 69, 2393, 2393), ("kernel/declareops.mli", 69, 2393, 2452), 0), 0, Tag1 ("Declareops", 21)), 0); (("inductive_make_projection", 714), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -36), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "mutual_inductive_body"), 0, (0)), 100000000, 0, -35), (Tag1 (("proj_arg"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -34), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Projection"), "Repr"), "t"), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("kernel/declareops.mli", 72, 2517, 2517), ("kernel/declareops.mli", 73, 2609, 2634), 0), 0, Tag1 ("Declareops", 22)), 0); (("inductive_make_projections", 715), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -29), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "mutual_inductive_body"), 0, (0)), 100000000, 0, -28), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Projection"), "Repr"), "t"), 0, (0)), 100000000, 0, -27)], (0)), 100000000, 0, -26)], (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("kernel/declareops.mli", 75, 2636, 2636), ("kernel/declareops.mli", 76, 2713, 2751), 0), 0, Tag1 ("Declareops", 23)), 0); (("relevance_of_projection_repr", 716), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "mutual_inductive_body"), 0, (0)), 100000000, 0, -22), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Projection"), "Repr"), "t"), 0, (0)), 100000000, 0, -21), (Tag3 (Tag1 ((Tag2 ("Sorts")), "relevance"), 0, (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("kernel/declareops.mli", 78, 2753, 2753), ("kernel/declareops.mli", 78, 2753, 2855), 0), 0, Tag1 ("Declareops", 24)), 0); (("safe_flags", 717), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Conv_oracle")), "oracle"), 0, (0)), 100000000, 0, -17), (Tag3 (Tag1 ((Tag2 ("Declarations")), "typing_flags"), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("kernel/declareops.mli", 83, 2943, 2943), ("kernel/declareops.mli", 83, 2943, 2994), 0), 0, Tag1 ("Declareops", 25)), 0); (("hcons_const_body", 718), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "pconstant_body"), [((("a")), 100000000, 0, -13)], (0)), 100000000, 0, -14), (Tag3 (Tag1 ((Tag2 ("Declarations")), "pconstant_body"), [((("a")), 100000000, 0, -13)], (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("kernel/declareops.mli", 91, 3178, 3178), ("kernel/declareops.mli", 91, 3178, 3239), 0), 0, Tag1 ("Declareops", 26)), 0); (("hcons_mind", 719), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "mutual_inductive_body"), 0, (0)), 100000000, 0, -10), (Tag3 (Tag1 ((Tag2 ("Declarations")), "mutual_inductive_body"), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("kernel/declareops.mli", 92, 3240, 3240), ("kernel/declareops.mli", 92, 3240, 3303), 0), 0, Tag1 ("Declareops", 27)), 0); (("hcons_module_body", 720), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "module_body"), 0, (0)), 100000000, 0, -7), (Tag3 (Tag1 ((Tag2 ("Declarations")), "module_body"), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("kernel/declareops.mli", 93, 3304, 3304), ("kernel/declareops.mli", 93, 3304, 3354), 0), 0, Tag1 ("Declareops", 28)), 0); (("hcons_module_type", 721), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "module_type_body"), 0, (0)), 100000000, 0, -4), (Tag3 (Tag1 ((Tag2 ("Declarations")), "module_type_body"), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("kernel/declareops.mli", 94, 3355, 3355), ("kernel/declareops.mli", 94, 3355, 3415), 0), 0, Tag1 ("Declareops", 29)), 0)], "Declareops", [("Declareops", ("\146U\153\216!\000\185bRC\230\192\23335\138")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
Declarations.module_type_body -> Declarations.module_type_body
