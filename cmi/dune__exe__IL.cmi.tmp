type interface = interface_item list
and interface_item =
    IIFunctor of Dune__exe.Stretch.t list * interface
  | IIExcDecls of excdef list
  | IITypeDecls of typedef list
  | IIValDecls of (string * typescheme) list
  | IIInclude of module_type
  | IIModule of string * module_type
  | IIComment of string
and module_type =
    MTNamedModuleType of string
  | MTWithType of module_type * string list * string * with_kind * typ
  | MTSigEnd of interface
and with_kind = WKNonDestructive | WKDestructive
and excdef = { excname : string; exceq : string option; }
and typedef = {
  typename : string;
  typeparams : string list;
  typerhs : typedefrhs;
  typeconstraint : (typ * typ) option;
}
and typedefrhs =
    TDefRecord of fielddef list
  | TDefSum of datadef list
  | TAbbrev of typ
and fielddef = {
  modifiable : bool;
  fieldname : string;
  fieldtype : typescheme;
}
and datadef = {
  dataname : string;
  datavalparams : typ list;
  datatypeparams : typ list option;
}
and typ =
    TypTextual of Dune__exe.Stretch.ocamltype
  | TypVar of string
  | TypApp of string * typ list
  | TypTuple of typ list
  | TypArrow of typ * typ
and typescheme = { quantifiers : string list; body : typ; }
and valdef = { valpublic : bool; valpat : pattern; valval : expr; }
and expr =
    EVar of string
  | EFun of pattern list * expr
  | EApp of expr * expr list
  | ELet of (pattern * expr) list * expr
  | EMatch of expr * branch list
  | EIfThen of expr * expr
  | EIfThenElse of expr * expr * expr
  | ERaise of expr
  | ETry of expr * branch list
  | EUnit
  | EIntConst of int
  | EStringConst of string
  | EData of string * expr list
  | ETuple of expr list
  | EAnnot of expr * typescheme
  | EMagic of expr
  | ERepr of expr
  | ERecord of (string * expr) list
  | ERecordAccess of expr * string
  | ERecordWrite of expr * string * expr
  | ETextual of Dune__exe.Stretch.t
  | EComment of string * expr
  | EPatComment of string * pattern * expr
  | EArray of expr list
  | EArrayAccess of expr * expr
and branch = { branchpat : pattern; branchbody : expr; }
and pattern =
    PWildcard
  | PVar of string
  | PVarLocated of string Dune__exe.Positions.located
  | PUnit
  | PData of string * pattern list
  | PTuple of pattern list
  | PRecord of (string * pattern) list
  | POr of pattern list
  | PAnnot of pattern * typ
and modexpr =
    MVar of string
  | MStruct of structure
  | MApp of modexpr * modexpr
and program = structure
and structure = structure_item list
and structure_item =
    SIFunctor of Dune__exe.Stretch.t list * structure
  | SIExcDefs of excdef list
  | SITypeDefs of typedef list
  | SIValDefs of bool * valdef list
  | SIStretch of Dune__exe.Stretch.t list
  | SIModuleDef of string * modexpr
  | SIInclude of modexpr
  | SIComment of string
type xparam = XVar of string | XMagic of xparam
val xvar : string -> xparam
val xmagic : xparam -> xparam
val xparam2expr : xparam -> expr
val xparam2pat : xparam -> pattern
type xparams = xparam list
val xparams2exprs : xparam list -> expr list
("DEBUG:rule", [Tag1 (("interface", 663), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("interface_item", 664)), 0, (0)), 100000000, 0, -187)], (0)), 100000000, 0, -186)), 0, 0, 0, 0, (("src/IL.ml", 18, 1073, 1073), ("src/IL.ml", 19, 1090, 1111), 0), 0, 0, 0, Tag1 ("Dune__exe__IL", 0)), 1, 0); Tag1 (("interface_item", 664), (0, 0, Tag1 ([(("IIFunctor", 450), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Stretch"), "t"), 0, (0)), 100000000, 0, -172)], (0)), 100000000, 0, -171); (Tag3 ((("interface", 663)), 0, (0)), 100000000, 0, -173)]), 0, (("src/IL.ml", 23, 1210, 1212), ("src/IL.ml", 23, 1210, 1253), 0), 0, Tag1 ("Dune__exe__IL", 19)); (("IIExcDecls", 453), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("excdef", 667)), 0, (0)), 100000000, 0, -175)], (0)), 100000000, 0, -174)]), 0, (("src/IL.ml", 25, 1288, 1290), ("src/IL.ml", 25, 1288, 1317), 0), 0, Tag1 ("Dune__exe__IL", 20)); (("IITypeDecls", 454), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("typedef", 668)), 0, (0)), 100000000, 0, -177)], (0)), 100000000, 0, -176)]), 0, (("src/IL.ml", 27, 1383, 1385), ("src/IL.ml", 27, 1383, 1414), 0), 0, Tag1 ("Dune__exe__IL", 21)); (("IIValDecls", 455), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -180); (Tag3 ((("typescheme", 673)), 0, (0)), 100000000, 0, -181)]), 100000000, 0, -179)], (0)), 100000000, 0, -178)]), 0, (("src/IL.ml", 29, 1445, 1447), ("src/IL.ml", 29, 1445, 1489), 0), 0, Tag1 ("Dune__exe__IL", 22)); (("IIInclude", 456), ([(Tag3 ((("module_type", 665)), 0, (0)), 100000000, 0, -182)]), 0, (("src/IL.ml", 31, 1519, 1521), ("src/IL.ml", 31, 1519, 1547), 0), 0, Tag1 ("Dune__exe__IL", 23)); (("IIModule", 457), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -183); (Tag3 ((("module_type", 665)), 0, (0)), 100000000, 0, -184)]), 0, (("src/IL.ml", 33, 1569, 1571), ("src/IL.ml", 33, 1569, 1605), 0), 0, Tag1 ("Dune__exe__IL", 24)); (("IIComment", 458), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -185)]), 0, (("src/IL.ml", 35, 1625, 1627), ("src/IL.ml", 35, 1625, 1648), 0), 0, Tag1 ("Dune__exe__IL", 25))], 0), 1, 0, 0, 0, 0, 0, (("src/IL.ml", 21, 1113, 1113), ("src/IL.ml", 35, 1625, 1648), 0), 0, 0, 0, Tag1 ("Dune__exe__IL", 1)), 2, 0); Tag1 (("module_type", 665), (0, 0, Tag1 ([(("MTNamedModuleType", 459), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -163)]), 0, (("src/IL.ml", 38, 1668, 1670), ("src/IL.ml", 38, 1668, 1699), 0), 0, Tag1 ("Dune__exe__IL", 26)); (("MTWithType", 460), ([(Tag3 ((("module_type", 665)), 0, (0)), 100000000, 0, -164); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -166)], (0)), 100000000, 0, -165); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -167); (Tag3 ((("with_kind", 666)), 0, (0)), 100000000, 0, -168); (Tag3 ((("typ", 672)), 0, (0)), 100000000, 0, -169)]), 0, (("src/IL.ml", 39, 1700, 1702), ("src/IL.ml", 39, 1700, 1770), 0), 0, Tag1 ("Dune__exe__IL", 27)); (("MTSigEnd", 461), ([(Tag3 ((("interface", 663)), 0, (0)), 100000000, 0, -170)]), 0, (("src/IL.ml", 40, 1771, 1773), ("src/IL.ml", 40, 1771, 1796), 0), 0, Tag1 ("Dune__exe__IL", 28))], 0), 1, 0, 0, 0, 0, 0, (("src/IL.ml", 37, 1650, 1650), ("src/IL.ml", 40, 1771, 1796), 0), 0, 0, 0, Tag1 ("Dune__exe__IL", 2)), 2, 0); Tag1 (("with_kind", 666), (0, 0, Tag1 ([(("WKNonDestructive", 462), (0), 0, (("src/IL.ml", 43, 1814, 1816), ("src/IL.ml", 43, 1814, 1834), 0), 0, Tag1 ("Dune__exe__IL", 29)); (("WKDestructive", 463), (0), 0, (("src/IL.ml", 44, 1843, 1845), ("src/IL.ml", 44, 1843, 1860), 0), 0, Tag1 ("Dune__exe__IL", 30))], 0), 1, 0, 0, 0, 0, 0, (("src/IL.ml", 42, 1798, 1798), ("src/IL.ml", 44, 1843, 1860), 0), 0, 1, 0, Tag1 ("Dune__exe__IL", 3)), 2, 0); Tag1 (("excdef", 667), (0, 0, [[(("excname", 464), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -160), (("src/IL.ml", 49, 1922, 1926), ("src/IL.ml", 49, 1922, 1942), 0), 0, Tag1 ("Dune__exe__IL", 31)); (("exceq", 465), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -162)], (0)), 100000000, 0, -161), (("src/IL.ml", 52, 1973, 1977), ("src/IL.ml", 52, 1973, 1998), 0), 0, Tag1 ("Dune__exe__IL", 32))]], 1, 0, 0, 0, 0, 0, (("src/IL.ml", 46, 1873, 1873), ("src/IL.ml", 54, 2000, 2003), 0), 0, 0, 0, Tag1 ("Dune__exe__IL", 4)), 2, 0); Tag1 (("typedef", 668), (0, 0, [[(("typename", 466), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -152), (("src/IL.ml", 59, 2065, 2069), ("src/IL.ml", 59, 2065, 2086), 0), 0, Tag1 ("Dune__exe__IL", 33)); (("typeparams", 467), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -154)], (0)), 100000000, 0, -153), (("src/IL.ml", 64, 2255, 2259), ("src/IL.ml", 64, 2255, 2283), 0), 0, Tag1 ("Dune__exe__IL", 34)); (("typerhs", 468), 0, (Tag3 ((("typedefrhs", 669)), 0, (0)), 100000000, 0, -155), (("src/IL.ml", 67, 2314, 2318), ("src/IL.ml", 67, 2314, 2338), 0), 0, Tag1 ("Dune__exe__IL", 35)); (("typeconstraint", 469), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("typ", 672)), 0, (0)), 100000000, 0, -158); (Tag3 ((("typ", 672)), 0, (0)), 100000000, 0, -159)]), 100000000, 0, -157)], (0)), 100000000, 0, -156), (("src/IL.ml", 70, 2362, 2366), ("src/IL.ml", 70, 2362, 2400), 0), 0, Tag1 ("Dune__exe__IL", 36))]], 1, 0, 0, 0, 0, 0, (("src/IL.ml", 56, 2005, 2005), ("src/IL.ml", 72, 2402, 2405), 0), 0, 0, 0, Tag1 ("Dune__exe__IL", 5)), 2, 0); Tag1 (("typedefrhs", 669), (0, 0, Tag1 ([(("TDefRecord", 470), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("fielddef", 670)), 0, (0)), 100000000, 0, -148)], (0)), 100000000, 0, -147)]), 0, (("src/IL.ml", 75, 2424, 2426), ("src/IL.ml", 75, 2424, 2455), 0), 0, Tag1 ("Dune__exe__IL", 37)); (("TDefSum", 471), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("datadef", 671)), 0, (0)), 100000000, 0, -150)], (0)), 100000000, 0, -149)]), 0, (("src/IL.ml", 76, 2456, 2458), ("src/IL.ml", 76, 2456, 2483), 0), 0, Tag1 ("Dune__exe__IL", 38)); (("TAbbrev", 472), ([(Tag3 ((("typ", 672)), 0, (0)), 100000000, 0, -151)]), 0, (("src/IL.ml", 77, 2484, 2486), ("src/IL.ml", 77, 2484, 2502), 0), 0, Tag1 ("Dune__exe__IL", 39))], 0), 1, 0, 0, 0, 0, 0, (("src/IL.ml", 74, 2407, 2407), ("src/IL.ml", 77, 2484, 2502), 0), 0, 0, 0, Tag1 ("Dune__exe__IL", 6)), 2, 0); Tag1 (("fielddef", 670), (0, 0, [[(("modifiable", 473), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -144), (("src/IL.ml", 82, 2562, 2566), ("src/IL.ml", 82, 2562, 2583), 0), 0, Tag1 ("Dune__exe__IL", 40)); (("fieldname", 474), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -145), (("src/IL.ml", 85, 2614, 2618), ("src/IL.ml", 85, 2614, 2636), 0), 0, Tag1 ("Dune__exe__IL", 41)); (("fieldtype", 475), 0, (Tag3 ((("typescheme", 673)), 0, (0)), 100000000, 0, -146), (("src/IL.ml", 88, 2667, 2671), ("src/IL.ml", 88, 2667, 2692), 0), 0, Tag1 ("Dune__exe__IL", 42))]], 1, 0, 0, 0, 0, 0, (("src/IL.ml", 79, 2504, 2504), ("src/IL.ml", 90, 2694, 2697), 0), 0, 0, 0, Tag1 ("Dune__exe__IL", 7)), 2, 0); Tag1 (("datadef", 671), (0, 0, [[(("dataname", 476), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -138), (("src/IL.ml", 95, 2756, 2760), ("src/IL.ml", 95, 2756, 2777), 0), 0, Tag1 ("Dune__exe__IL", 43)); (("datavalparams", 477), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("typ", 672)), 0, (0)), 100000000, 0, -140)], (0)), 100000000, 0, -139), (("src/IL.ml", 98, 2820, 2824), ("src/IL.ml", 98, 2820, 2848), 0), 0, Tag1 ("Dune__exe__IL", 44)); (("datatypeparams", 478), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("typ", 672)), 0, (0)), 100000000, 0, -143)], (0)), 100000000, 0, -142)], (0)), 100000000, 0, -141), (("src/IL.ml", 102, 2953, 2957), ("src/IL.ml", 102, 2953, 2989), 0), 0, Tag1 ("Dune__exe__IL", 45))]], 1, 0, 0, 0, 0, 0, (("src/IL.ml", 92, 2699, 2699), ("src/IL.ml", 104, 2991, 2994), 0), 0, 0, 0, Tag1 ("Dune__exe__IL", 8)), 2, 0); Tag1 (("typ", 672), (0, 0, Tag1 ([(("TypTextual", 479), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Stretch"), "ocamltype"), 0, (0)), 100000000, 0, -129)]), 0, (("src/IL.ml", 109, 3035, 3037), ("src/IL.ml", 109, 3035, 3070), 0), 0, Tag1 ("Dune__exe__IL", 46)); (("TypVar", 480), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -130)]), 0, (("src/IL.ml", 112, 3139, 3141), ("src/IL.ml", 112, 3139, 3159), 0), 0, Tag1 ("Dune__exe__IL", 47)); (("TypApp", 481), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -131); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("typ", 672)), 0, (0)), 100000000, 0, -133)], (0)), 100000000, 0, -132)]), 0, (("src/IL.ml", 115, 3220, 3222), ("src/IL.ml", 115, 3220, 3251), 0), 0, Tag1 ("Dune__exe__IL", 48)); (("TypTuple", 482), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("typ", 672)), 0, (0)), 100000000, 0, -135)], (0)), 100000000, 0, -134)]), 0, (("src/IL.ml", 118, 3278, 3280), ("src/IL.ml", 118, 3278, 3302), 0), 0, Tag1 ("Dune__exe__IL", 49)); (("TypArrow", 483), ([(Tag3 ((("typ", 672)), 0, (0)), 100000000, 0, -136); (Tag3 ((("typ", 672)), 0, (0)), 100000000, 0, -137)]), 0, (("src/IL.ml", 121, 3324, 3326), ("src/IL.ml", 121, 3324, 3349), 0), 0, Tag1 ("Dune__exe__IL", 50))], 0), 1, 0, 0, 0, 0, 0, (("src/IL.ml", 106, 2996, 2996), ("src/IL.ml", 121, 3324, 3349), 0), 0, 0, 0, Tag1 ("Dune__exe__IL", 9)), 2, 0); Tag1 (("typescheme", 673), (0, 0, [[(("quantifiers", 484), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -127)], (0)), 100000000, 0, -126), (("src/IL.ml", 126, 3426, 3428), ("src/IL.ml", 126, 3426, 3453), 0), 0, Tag1 ("Dune__exe__IL", 51)); (("body", 485), 0, (Tag3 ((("typ", 672)), 0, (0)), 100000000, 0, -128), (("src/IL.ml", 129, 3469, 3471), ("src/IL.ml", 129, 3469, 3481), 0), 0, Tag1 ("Dune__exe__IL", 52))]], 1, 0, 0, 0, 0, 0, (("src/IL.ml", 123, 3351, 3351), ("src/IL.ml", 131, 3483, 3486), 0), 0, 0, 0, Tag1 ("Dune__exe__IL", 10)), 2, 0); Tag1 (("valdef", 674), (0, 0, [[(("valpublic", 486), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -123), (("src/IL.ml", 139, 3651, 3653), ("src/IL.ml", 139, 3651, 3669), 0), 0, Tag1 ("Dune__exe__IL", 53)); (("valpat", 487), 0, (Tag3 ((("pattern", 677)), 0, (0)), 100000000, 0, -124), (("src/IL.ml", 142, 3708, 3710), ("src/IL.ml", 142, 3708, 3726), 0), 0, Tag1 ("Dune__exe__IL", 54)); (("valval", 488), 0, (Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -125), (("src/IL.ml", 145, 3764, 3766), ("src/IL.ml", 145, 3764, 3778), 0), 0, Tag1 ("Dune__exe__IL", 55))]], 1, 0, 0, 0, 0, 0, (("src/IL.ml", 133, 3488, 3488), ("src/IL.ml", 147, 3780, 3783), 0), 0, 0, 0, Tag1 ("Dune__exe__IL", 11)), 2, 0); Tag1 (("expr", 675), (0, 0, Tag1 ([(("EVar", 489), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -69)]), 0, (("src/IL.ml", 152, 3815, 3817), ("src/IL.ml", 152, 3815, 3833), 0), 0, Tag1 ("Dune__exe__IL", 56)); (("EFun", 490), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 677)), 0, (0)), 100000000, 0, -71)], (0)), 100000000, 0, -70); (Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -72)]), 0, (("src/IL.ml", 155, 3853, 3855), ("src/IL.ml", 155, 3853, 3884), 0), 0, Tag1 ("Dune__exe__IL", 57)); (("EApp", 491), ([(Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -73); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -75)], (0)), 100000000, 0, -74)]), 0, (("src/IL.ml", 158, 3909, 3911), ("src/IL.ml", 158, 3909, 3937), 0), 0, Tag1 ("Dune__exe__IL", 58)); (("ELet", 492), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("pattern", 677)), 0, (0)), 100000000, 0, -78); (Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -79)]), 100000000, 0, -77)], (0)), 100000000, 0, -76); (Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -80)]), 0, (("src/IL.ml", 162, 4019, 4021), ("src/IL.ml", 162, 4019, 4059), 0), 0, Tag1 ("Dune__exe__IL", 59)); (("EMatch", 493), ([(Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -81); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("branch", 676)), 0, (0)), 100000000, 0, -83)], (0)), 100000000, 0, -82)]), 0, (("src/IL.ml", 165, 4084, 4086), ("src/IL.ml", 165, 4084, 4116), 0), 0, Tag1 ("Dune__exe__IL", 60)); (("EIfThen", 494), ([(Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -84); (Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -85)]), 0, (("src/IL.ml", 166, 4117, 4119), ("src/IL.ml", 166, 4117, 4143), 0), 0, Tag1 ("Dune__exe__IL", 61)); (("EIfThenElse", 495), ([(Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -86); (Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -87); (Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -88)]), 0, (("src/IL.ml", 167, 4144, 4146), ("src/IL.ml", 167, 4144, 4181), 0), 0, Tag1 ("Dune__exe__IL", 62)); (("ERaise", 496), ([(Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -89)]), 0, (("src/IL.ml", 170, 4211, 4213), ("src/IL.ml", 170, 4211, 4229), 0), 0, Tag1 ("Dune__exe__IL", 63)); (("ETry", 497), ([(Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -90); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("branch", 676)), 0, (0)), 100000000, 0, -92)], (0)), 100000000, 0, -91)]), 0, (("src/IL.ml", 173, 4259, 4261), ("src/IL.ml", 173, 4259, 4289), 0), 0, Tag1 ("Dune__exe__IL", 64)); (("EUnit", 498), (0), 0, (("src/IL.ml", 178, 4435, 4437), ("src/IL.ml", 178, 4435, 4444), 0), 0, Tag1 ("Dune__exe__IL", 65)); (("EIntConst", 499), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -93)]), 0, (("src/IL.ml", 179, 4445, 4447), ("src/IL.ml", 179, 4445, 4465), 0), 0, Tag1 ("Dune__exe__IL", 66)); (("EStringConst", 500), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -94)]), 0, (("src/IL.ml", 180, 4466, 4468), ("src/IL.ml", 180, 4466, 4492), 0), 0, Tag1 ("Dune__exe__IL", 67)); (("EData", 501), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -95); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -97)], (0)), 100000000, 0, -96)]), 0, (("src/IL.ml", 181, 4493, 4495), ("src/IL.ml", 181, 4493, 4524), 0), 0, Tag1 ("Dune__exe__IL", 68)); (("ETuple", 502), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -99)], (0)), 100000000, 0, -98)]), 0, (("src/IL.ml", 182, 4525, 4527), ("src/IL.ml", 182, 4525, 4548), 0), 0, Tag1 ("Dune__exe__IL", 69)); (("EAnnot", 503), ([(Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -100); (Tag3 ((("typescheme", 673)), 0, (0)), 100000000, 0, -101)]), 0, (("src/IL.ml", 185, 4575, 4577), ("src/IL.ml", 185, 4575, 4606), 0), 0, Tag1 ("Dune__exe__IL", 70)); (("EMagic", 504), ([(Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -102)]), 0, (("src/IL.ml", 188, 4645, 4647), ("src/IL.ml", 188, 4645, 4663), 0), 0, Tag1 ("Dune__exe__IL", 71)); (("ERepr", 505), ([(Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -103)]), 0, (("src/IL.ml", 189, 4680, 4682), ("src/IL.ml", 189, 4680, 4697), 0), 0, Tag1 ("Dune__exe__IL", 72)); (("ERecord", 506), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -106); (Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -107)]), 100000000, 0, -105)], (0)), 100000000, 0, -104)]), 0, (("src/IL.ml", 192, 4732, 4734), ("src/IL.ml", 192, 4732, 4767), 0), 0, Tag1 ("Dune__exe__IL", 73)); (("ERecordAccess", 507), ([(Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -108); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -109)]), 0, (("src/IL.ml", 193, 4768, 4770), ("src/IL.ml", 193, 4768, 4802), 0), 0, Tag1 ("Dune__exe__IL", 74)); (("ERecordWrite", 508), ([(Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -110); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -111); (Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -112)]), 0, (("src/IL.ml", 194, 4803, 4805), ("src/IL.ml", 194, 4803, 4843), 0), 0, Tag1 ("Dune__exe__IL", 75)); (("ETextual", 509), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Stretch"), "t"), 0, (0)), 100000000, 0, -113)]), 0, (("src/IL.ml", 197, 4873, 4875), ("src/IL.ml", 197, 4873, 4898), 0), 0, Tag1 ("Dune__exe__IL", 76)); (("EComment", 510), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -114); (Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -115)]), 0, (("src/IL.ml", 200, 4918, 4920), ("src/IL.ml", 200, 4918, 4947), 0), 0, Tag1 ("Dune__exe__IL", 77)); (("EPatComment", 511), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -116); (Tag3 ((("pattern", 677)), 0, (0)), 100000000, 0, -117); (Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -118)]), 0, (("src/IL.ml", 201, 4948, 4950), ("src/IL.ml", 201, 4948, 4990), 0), 0, Tag1 ("Dune__exe__IL", 78)); (("EArray", 512), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -120)], (0)), 100000000, 0, -119)]), 0, (("src/IL.ml", 204, 5008, 5010), ("src/IL.ml", 204, 5008, 5031), 0), 0, Tag1 ("Dune__exe__IL", 79)); (("EArrayAccess", 513), ([(Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -121); (Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -122)]), 0, (("src/IL.ml", 205, 5032, 5034), ("src/IL.ml", 205, 5032, 5063), 0), 0, Tag1 ("Dune__exe__IL", 80))], 0), 1, 0, 0, 0, 0, 0, (("src/IL.ml", 149, 3785, 3785), ("src/IL.ml", 205, 5032, 5063), 0), 0, 0, 0, Tag1 ("Dune__exe__IL", 12)), 2, 0); Tag1 (("branch", 676), (0, 0, [[(("branchpat", 514), 0, (Tag3 ((("pattern", 677)), 0, (0)), 100000000, 0, -67), (("src/IL.ml", 210, 5105, 5107), ("src/IL.ml", 210, 5105, 5126), 0), 0, Tag1 ("Dune__exe__IL", 81)); (("branchbody", 515), 0, (Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -68), (("src/IL.ml", 213, 5149, 5151), ("src/IL.ml", 213, 5149, 5168), 0), 0, Tag1 ("Dune__exe__IL", 82))]], 1, 0, 0, 0, 0, 0, (("src/IL.ml", 207, 5065, 5065), ("src/IL.ml", 215, 5170, 5173), 0), 0, 0, 0, Tag1 ("Dune__exe__IL", 13)), 2, 0); Tag1 (("pattern", 677), (0, 0, Tag1 ([(("PWildcard", 516), (0), 0, (("src/IL.ml", 220, 5208, 5210), ("src/IL.ml", 220, 5208, 5221), 0), 0, Tag1 ("Dune__exe__IL", 83)); (("PVar", 517), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -51)]), 0, (("src/IL.ml", 223, 5241, 5243), ("src/IL.ml", 223, 5241, 5259), 0), 0, Tag1 ("Dune__exe__IL", 84)); (("PVarLocated", 518), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Positions"), "located"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -53)], (0)), 100000000, 0, -52)]), 0, (("src/IL.ml", 224, 5260, 5262), ("src/IL.ml", 224, 5260, 5293), 0), 0, Tag1 ("Dune__exe__IL", 85)); (("PUnit", 519), (0), 0, (("src/IL.ml", 229, 5503, 5505), ("src/IL.ml", 229, 5503, 5512), 0), 0, Tag1 ("Dune__exe__IL", 86)); (("PData", 520), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -54); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 677)), 0, (0)), 100000000, 0, -56)], (0)), 100000000, 0, -55)]), 0, (("src/IL.ml", 230, 5513, 5515), ("src/IL.ml", 230, 5513, 5547), 0), 0, Tag1 ("Dune__exe__IL", 87)); (("PTuple", 521), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 677)), 0, (0)), 100000000, 0, -58)], (0)), 100000000, 0, -57)]), 0, (("src/IL.ml", 231, 5548, 5550), ("src/IL.ml", 231, 5548, 5574), 0), 0, Tag1 ("Dune__exe__IL", 88)); (("PRecord", 522), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -61); (Tag3 ((("pattern", 677)), 0, (0)), 100000000, 0, -62)]), 100000000, 0, -60)], (0)), 100000000, 0, -59)]), 0, (("src/IL.ml", 232, 5575, 5577), ("src/IL.ml", 232, 5575, 5613), 0), 0, Tag1 ("Dune__exe__IL", 89)); (("POr", 523), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 677)), 0, (0)), 100000000, 0, -64)], (0)), 100000000, 0, -63)]), 0, (("src/IL.ml", 235, 5636, 5638), ("src/IL.ml", 235, 5636, 5659), 0), 0, Tag1 ("Dune__exe__IL", 90)); (("PAnnot", 524), ([(Tag3 ((("pattern", 677)), 0, (0)), 100000000, 0, -65); (Tag3 ((("typ", 672)), 0, (0)), 100000000, 0, -66)]), 0, (("src/IL.ml", 238, 5686, 5688), ("src/IL.ml", 238, 5686, 5713), 0), 0, Tag1 ("Dune__exe__IL", 91))], 0), 1, 0, 0, 0, 0, 0, (("src/IL.ml", 217, 5175, 5175), ("src/IL.ml", 238, 5686, 5713), 0), 0, 0, 0, Tag1 ("Dune__exe__IL", 14)), 2, 0); Tag1 (("modexpr", 678), (0, 0, Tag1 ([(("MVar", 525), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -47)]), 0, (("src/IL.ml", 243, 5756, 5760), ("src/IL.ml", 243, 5756, 5776), 0), 0, Tag1 ("Dune__exe__IL", 92)); (("MStruct", 526), ([(Tag3 ((("structure", 680)), 0, (0)), 100000000, 0, -48)]), 0, (("src/IL.ml", 244, 5777, 5781), ("src/IL.ml", 244, 5777, 5803), 0), 0, Tag1 ("Dune__exe__IL", 93)); (("MApp", 527), ([(Tag3 ((("modexpr", 678)), 0, (0)), 100000000, 0, -49); (Tag3 ((("modexpr", 678)), 0, (0)), 100000000, 0, -50)]), 0, (("src/IL.ml", 245, 5804, 5808), ("src/IL.ml", 245, 5804, 5835), 0), 0, Tag1 ("Dune__exe__IL", 94))], 0), 1, 0, 0, 0, 0, 0, (("src/IL.ml", 242, 5742, 5742), ("src/IL.ml", 245, 5804, 5835), 0), 0, 0, 0, Tag1 ("Dune__exe__IL", 15)), 2, 0); Tag1 (("program", 679), (0, 0, 0, 1, ((Tag3 ((("structure", 680)), 0, (0)), 100000000, 0, -46)), 0, 0, 0, 0, (("src/IL.ml", 249, 5856, 5856), ("src/IL.ml", 250, 5870, 5883), 0), 0, 0, 0, Tag1 ("Dune__exe__IL", 16)), 2, 0); Tag1 (("structure", 680), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("structure_item", 681)), 0, (0)), 100000000, 0, -45)], (0)), 100000000, 0, -44)), 0, 0, 0, 0, (("src/IL.ml", 252, 5885, 5885), ("src/IL.ml", 253, 5901, 5924), 0), 0, 0, 0, Tag1 ("Dune__exe__IL", 17)), 2, 0); Tag1 (("structure_item", 681), (0, 0, Tag1 ([(("SIFunctor", 528), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Stretch"), "t"), 0, (0)), 100000000, 0, -29)], (0)), 100000000, 0, -28); (Tag3 ((("structure", 680)), 0, (0)), 100000000, 0, -30)]), 0, (("src/IL.ml", 257, 6023, 6025), ("src/IL.ml", 257, 6023, 6066), 0), 0, Tag1 ("Dune__exe__IL", 95)); (("SIExcDefs", 529), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("excdef", 667)), 0, (0)), 100000000, 0, -32)], (0)), 100000000, 0, -31)]), 0, (("src/IL.ml", 259, 6100, 6102), ("src/IL.ml", 259, 6100, 6128), 0), 0, Tag1 ("Dune__exe__IL", 96)); (("SITypeDefs", 530), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("typedef", 668)), 0, (0)), 100000000, 0, -34)], (0)), 100000000, 0, -33)]), 0, (("src/IL.ml", 261, 6193, 6195), ("src/IL.ml", 261, 6193, 6223), 0), 0, Tag1 ("Dune__exe__IL", 97)); (("SIValDefs", 531), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -35); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("valdef", 674)), 0, (0)), 100000000, 0, -37)], (0)), 100000000, 0, -36)]), 0, (("src/IL.ml", 263, 6298, 6300), ("src/IL.ml", 263, 6298, 6333), 0), 0, Tag1 ("Dune__exe__IL", 98)); (("SIStretch", 532), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Stretch"), "t"), 0, (0)), 100000000, 0, -39)], (0)), 100000000, 0, -38)]), 0, (("src/IL.ml", 265, 6360, 6362), ("src/IL.ml", 265, 6360, 6391), 0), 0, Tag1 ("Dune__exe__IL", 99)); (("SIModuleDef", 533), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -40); (Tag3 ((("modexpr", 678)), 0, (0)), 100000000, 0, -41)]), 0, (("src/IL.ml", 267, 6425, 6427), ("src/IL.ml", 267, 6425, 6460), 0), 0, Tag1 ("Dune__exe__IL", 100)); (("SIInclude", 534), ([(Tag3 ((("modexpr", 678)), 0, (0)), 100000000, 0, -42)]), 0, (("src/IL.ml", 269, 6489, 6491), ("src/IL.ml", 269, 6489, 6513), 0), 0, Tag1 ("Dune__exe__IL", 101)); (("SIComment", 535), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -43)]), 0, (("src/IL.ml", 271, 6533, 6535), ("src/IL.ml", 271, 6533, 6556), 0), 0, Tag1 ("Dune__exe__IL", 102))], 0), 1, 0, 0, 0, 0, 0, (("src/IL.ml", 255, 5926, 5926), ("src/IL.ml", 271, 6533, 6556), 0), 0, 0, 0, Tag1 ("Dune__exe__IL", 18)), 2, 0); Tag1 (("xparam", 682), (0, 0, Tag1 ([(("XVar", 574), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -26)]), 0, (("src/IL.ml", 277, 6701, 6703), ("src/IL.ml", 277, 6701, 6719), 0), 0, Tag1 ("Dune__exe__IL", 104)); (("XMagic", 575), ([(Tag3 ((("xparam", 682)), 0, (0)), 100000000, 0, -27)]), 0, (("src/IL.ml", 278, 6720, 6722), ("src/IL.ml", 278, 6720, 6740), 0), 0, Tag1 ("Dune__exe__IL", 105))], 0), 1, 0, 0, 0, 0, 0, (("src/IL.ml", 276, 6687, 6687), ("src/IL.ml", 278, 6720, 6740), 0), 0, 0, 0, Tag1 ("Dune__exe__IL", 103)), 1, 0); (("xvar", 683), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -25), (Tag3 ((("xparam", 682)), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("src/IL.ml", 280, 6742, 6746), ("src/IL.ml", 280, 6742, 6750), 0), 0, Tag1 ("Dune__exe__IL", 106)), 0); (("xmagic", 684), ((Tag1 (0, (Tag3 ((("xparam", 682)), 0, (0)), 100000000, 0, -22), (Tag3 ((("xparam", 682)), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("src/IL.ml", 283, 6765, 6769), ("src/IL.ml", 283, 6765, 6775), 0), 0, Tag1 ("Dune__exe__IL", 108)), 0); (("xparam2expr", 685), ((Tag1 (0, (Tag3 ((("xparam", 682)), 0, (0)), 100000000, 0, -19), (Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("src/IL.ml", 286, 6794, 6802), ("src/IL.ml", 286, 6794, 6813), 0), 0, Tag1 ("Dune__exe__IL", 110)), 0); (("xparam2pat", 686), ((Tag1 (0, (Tag3 ((("xparam", 682)), 0, (0)), 100000000, 0, -16), (Tag3 ((("pattern", 677)), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("src/IL.ml", 292, 6900, 6908), ("src/IL.ml", 292, 6900, 6918), 0), 0, Tag1 ("Dune__exe__IL", 113)), 0); Tag1 (("xparams", 687), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("xparam", 682)), 0, (0)), 100000000, 0, -13)], (0)), 100000000, 0, -12)), 0, 0, 0, 0, (("src/IL.ml", 298, 7010, 7010), ("src/IL.ml", 299, 7025, 7038), 0), 0, 0, 0, Tag1 ("Dune__exe__IL", 116)), 1, 0); (("xparams2exprs", 688), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("xparam", 682)), 0, (0)), 100000000, 0, -11)], (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expr", 675)), 0, (0)), 100000000, 0, -9)], (0)), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("src/IL.ml", 301, 7040, 7044), ("src/IL.ml", 301, 7040, 7057), 0), 0, Tag1 ("Dune__exe__IL", 117)), 0); (("xparams2pats", 689), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("xparam", 682)), 0, (0)), 100000000, 0, -6)], (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 677)), 0, (0)), 100000000, 0, -4)], (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/IL.ml", 304, 7092, 7096), ("src/IL.ml", 304, 7092, 7108), 0), 0, Tag1 ("Dune__exe__IL", 119)), 0)], "Dune__exe__IL", [("Dune__exe__IL", ("\194\228\178\190\251\254\231\226\207\197c\133\253i\220\170")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("MenhirSdk__Keyword", ("\171\145\177^\199\189\197f\150\136y\144\252\234>\178")); ("MenhirSdk", ("F\232\012\196l\143\145[\255\2193U\197\027\176\139")); ("Dune__exe__Stretch", ("\003\145~\207\198HL&\187\195e'0\204\200\156")); ("Dune__exe__Positions", ("\137nS\236\011\187\r[\024:\162/\201\139\237}")); ("Dune__exe", ("\137\000\197\175$\007]\218\141\248\172\212\146c\153\212")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val xparams2pats : xparam list -> pattern list
