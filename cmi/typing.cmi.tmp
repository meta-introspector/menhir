val type_of :
  ?refresh:bool ->
  Environ.env ->
  Evd.evar_map -> EConstr.constr -> Evd.evar_map * EConstr.types
val sort_of :
  Environ.env ->
  Evd.evar_map -> EConstr.types -> Evd.evar_map * EConstr.ESorts.t
val check :
  Environ.env ->
  Evd.evar_map -> EConstr.constr -> EConstr.types -> Evd.evar_map
val type_of_variable : Environ.env -> Names.variable -> EConstr.types
val meta_type :
  Environ.env -> Evd.evar_map -> Constr.metavariable -> EConstr.types
val solve_evars :
  Environ.env ->
  Evd.evar_map -> EConstr.constr -> Evd.evar_map * EConstr.constr
val check_allowed_sort :
  Environ.env ->
  Evd.evar_map ->
  Constr.pinductive -> EConstr.constr -> EConstr.constr -> Sorts.relevance
val check_type_fixpoint :
  ?loc:Loc.t ->
  Environ.env ->
  Evd.evar_map ->
  Names.Name.t Context.binder_annot array ->
  EConstr.types array -> EConstr.unsafe_judgment array -> Evd.evar_map
val check_actual_type :
  Environ.env ->
  Evd.evar_map -> EConstr.unsafe_judgment -> EConstr.types -> Evd.evar_map
val type_judgment :
  Environ.env ->
  Evd.evar_map ->
  EConstr.unsafe_judgment -> Evd.evar_map * EConstr.unsafe_type_judgment
val judge_of_sprop : EConstr.unsafe_judgment
val judge_of_prop : EConstr.unsafe_judgment
val judge_of_set : EConstr.unsafe_judgment
val judge_of_variable : Environ.env -> Names.Id.t -> EConstr.unsafe_judgment
val judge_of_apply :
  Environ.env ->
  Evd.evar_map ->
  EConstr.unsafe_judgment ->
  EConstr.unsafe_judgment array -> Evd.evar_map * EConstr.unsafe_judgment
val judge_of_abstraction :
  Environ.env ->
  Evd.evar_map ->
  Names.Name.t ->
  EConstr.unsafe_type_judgment ->
  EConstr.unsafe_judgment -> EConstr.unsafe_judgment
val judge_of_product :
  Environ.env ->
  Evd.evar_map ->
  Names.Name.t ->
  EConstr.unsafe_type_judgment ->
  EConstr.unsafe_type_judgment -> EConstr.unsafe_judgment
val judge_of_projection :
  Environ.env ->
  Evd.evar_map ->
  Names.Projection.t -> EConstr.unsafe_judgment -> EConstr.unsafe_judgment
val judge_of_int : Environ.env -> Uint63.t -> EConstr.unsafe_judgment
val judge_of_float : Environ.env -> Float64.t -> EConstr.unsafe_judgment
val checked_appvect :
  Environ.env ->
  Evd.evar_map ->
  EConstr.constr -> EConstr.constr array -> Evd.evar_map * EConstr.constr
val checked_applist :
  Environ.env ->
  Evd.evar_map ->
  EConstr.constr -> EConstr.constr list -> Evd.evar_map * EConstr.constr
val recheck_against :
  Environ.env ->
  Evd.evar_map ->
  EConstr.constr -> EConstr.constr -> Evd.evar_map * EConstr.types
val bad_relevance_msg :
  (Environ.env * Evd.evar_map *
   (EConstr.constr, EConstr.types) Typeops.bad_relevance)("DEBUG:rule", [(("type_of", 1361), ((Tag1 (Tag1 ("refresh"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -202)], (0)), 100000000, 0, -201), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -200), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -199), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -198), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -196); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -197)]), 100000000, 0, -195), 0), 100000000, 0, -194), 0), 100000000, 0, -193), 0), 100000000, 0, -192), 0), 100000000, 0, -191), 0, (("pretyping/typing.mli", 22, 926, 926), ("pretyping/typing.mli", 22, 926, 1002), 0), 0, Tag1 ("Typing", 1)), 0); (("sort_of", 1362), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -190), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -189), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -188), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -186); (Tag3 (Tag1 (Tag1 ((Tag2 ("EConstr")), "ESorts"), "t"), 0, (0)), 100000000, 0, -187)]), 100000000, 0, -185), 0), 100000000, 0, -184), 0), 100000000, 0, -183), 0), 100000000, 0, -182), 0, (("pretyping/typing.mli", 25, 1048, 1048), ("pretyping/typing.mli", 25, 1048, 1109), 0), 0, Tag1 ("Typing", 2)), 0); (("check", 1363), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -181), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -180), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -179), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -178), (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -177), 0), 100000000, 0, -176), 0), 100000000, 0, -175), 0), 100000000, 0, -174), 0), 100000000, 0, -173), 0, (("pretyping/typing.mli", 28, 1178, 1178), ("pretyping/typing.mli", 28, 1178, 1236), 0), 0, Tag1 ("Typing", 3)), 0); (("type_of_variable", 1364), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -172), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "variable"), 0, (0)), 100000000, 0, -171), (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -170), 0), 100000000, 0, -169), 0), 100000000, 0, -168), 0, (("pretyping/typing.mli", 31, 1265, 1265), ("pretyping/typing.mli", 31, 1265, 1312), 0), 0, Tag1 ("Typing", 4)), 0); (("meta_type", 1365), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -167), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -166), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "metavariable"), 0, (0)), 100000000, 0, -165), (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -164), 0), 100000000, 0, -163), 0), 100000000, 0, -162), 0), 100000000, 0, -161), 0, (("pretyping/typing.mli", 34, 1369, 1369), ("pretyping/typing.mli", 34, 1369, 1425), 0), 0, Tag1 ("Typing", 5)), 0); (("solve_evars", 1366), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -160), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -159), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -158), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -156); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -157)]), 100000000, 0, -155), 0), 100000000, 0, -154), 0), 100000000, 0, -153), 0), 100000000, 0, -152), 0, (("pretyping/typing.mli", 37, 1475, 1475), ("pretyping/typing.mli", 37, 1475, 1539), 0), 0, Tag1 ("Typing", 6)), 0); (("check_allowed_sort", 1367), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -151), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -150), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pinductive"), 0, (0)), 100000000, 0, -149), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -148), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -147), (Tag3 (Tag1 ((Tag2 ("Sorts")), "relevance"), 0, (0)), 100000000, 0, -146), 0), 100000000, 0, -145), 0), 100000000, 0, -144), 0), 100000000, 0, -143), 0), 100000000, 0, -142), 0), 100000000, 0, -141), 0, (("pretyping/typing.mli", 41, 1679, 1679), ("pretyping/typing.mli", 42, 1757, 1774), 0), 0, Tag1 ("Typing", 7)), 0); (("check_type_fixpoint", 1368), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -140)], (0)), 100000000, 0, -139), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -138), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -137), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -136)], (0)), 100000000, 0, -135)], (0)), 100000000, 0, -134), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -133)], (0)), 100000000, 0, -132), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -131)], (0)), 100000000, 0, -130), (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -129), 0), 100000000, 0, -128), 0), 100000000, 0, -127), 0), 100000000, 0, -126), 0), 100000000, 0, -125), 0), 100000000, 0, -124), 0), 100000000, 0, -123), 0, (("pretyping/typing.mli", 46, 1868, 1868), ("pretyping/typing.mli", 47, 1927, 2020), 0), 0, Tag1 ("Typing", 9)), 0); (("check_actual_type", 1369), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -122), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -121), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -120), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -119), (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -118), 0), 100000000, 0, -117), 0), 100000000, 0, -116), 0), 100000000, 0, -115), 0), 100000000, 0, -114), 0, (("pretyping/typing.mli", 50, 2100, 2100), ("pretyping/typing.mli", 50, 2100, 2179), 0), 0, Tag1 ("Typing", 10)), 0); (("type_judgment", 1370), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -113), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -112), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -111), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -109); (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_type_judgment"), 0, (0)), 100000000, 0, -110)]), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), 0), 100000000, 0, -105), 0, (("pretyping/typing.mli", 52, 2181, 2181), ("pretyping/typing.mli", 52, 2181, 2270), 0), 0, Tag1 ("Typing", 11)), 0); (("judge_of_sprop", 1371), ((Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -104), 0, (("pretyping/typing.mli", 54, 2272, 2272), ("pretyping/typing.mli", 54, 2272, 2308), 0), 0, Tag1 ("Typing", 12)), 0); (("judge_of_prop", 1372), ((Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -103), 0, (("pretyping/typing.mli", 55, 2309, 2309), ("pretyping/typing.mli", 55, 2309, 2344), 0), 0, Tag1 ("Typing", 13)), 0); (("judge_of_set", 1373), ((Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -102), 0, (("pretyping/typing.mli", 56, 2345, 2345), ("pretyping/typing.mli", 56, 2345, 2379), 0), 0, Tag1 ("Typing", 14)), 0); (("judge_of_variable", 1374), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -101), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -100), (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -99), 0), 100000000, 0, -98), 0), 100000000, 0, -97), 0, (("pretyping/typing.mli", 57, 2380, 2380), ("pretyping/typing.mli", 57, 2380, 2434), 0), 0, Tag1 ("Typing", 15)), 0); (("judge_of_apply", 1375), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -96), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -95), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -94), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -93)], (0)), 100000000, 0, -92), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -90); (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -91)]), 100000000, 0, -89), 0), 100000000, 0, -88), 0), 100000000, 0, -87), 0), 100000000, 0, -86), 0), 100000000, 0, -85), 0, (("pretyping/typing.mli", 58, 2435, 2435), ("pretyping/typing.mli", 59, 2519, 2547), 0), 0, Tag1 ("Typing", 16)), 0); (("judge_of_abstraction", 1376), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -84), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -83), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -82), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_type_judgment"), 0, (0)), 100000000, 0, -81), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -80), (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -79), 0), 100000000, 0, -78), 0), 100000000, 0, -77), 0), 100000000, 0, -76), 0), 100000000, 0, -75), 0), 100000000, 0, -74), 0, (("pretyping/typing.mli", 60, 2548, 2548), ("pretyping/typing.mli", 61, 2612, 2672), 0), 0, Tag1 ("Typing", 17)), 0); (("judge_of_product", 1377), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -73), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -72), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -71), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_type_judgment"), 0, (0)), 100000000, 0, -70), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_type_judgment"), 0, (0)), 100000000, 0, -69), (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -68), 0), 100000000, 0, -67), 0), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0), 100000000, 0, -63), 0, (("pretyping/typing.mli", 62, 2673, 2673), ("pretyping/typing.mli", 63, 2733, 2798), 0), 0, Tag1 ("Typing", 18)), 0); (("judge_of_projection", 1378), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -62), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -61), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Projection"), "t"), 0, (0)), 100000000, 0, -60), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -59), (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), 0), 100000000, 0, -55), 0), 100000000, 0, -54), 0, (("pretyping/typing.mli", 64, 2799, 2799), ("pretyping/typing.mli", 64, 2799, 2894), 0), 0, Tag1 ("Typing", 19)), 0); (("judge_of_int", 1379), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -53), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Uint63")), "t"), 0, (0)), 100000000, 0, -52), (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -51), 0), 100000000, 0, -50), 0), 100000000, 0, -49), 0, (("pretyping/typing.mli", 65, 2895, 2895), ("pretyping/typing.mli", 65, 2895, 2956), 0), 0, Tag1 ("Typing", 20)), 0); (("judge_of_float", 1380), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -48), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Float64")), "t"), 0, (0)), 100000000, 0, -47), (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("pretyping/typing.mli", 66, 2957, 2957), ("pretyping/typing.mli", 66, 2957, 3021), 0), 0, Tag1 ("Typing", 21)), 0); (("checked_appvect", 1381), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -43), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -42), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -41), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -40)], (0)), 100000000, 0, -39), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -37); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -38)]), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0), 100000000, 0, -32), 0, (("pretyping/typing.mli", 68, 3023, 3023), ("pretyping/typing.mli", 68, 3023, 3107), 0), 0, Tag1 ("Typing", 22)), 0); (("checked_applist", 1382), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -31), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -30), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -29), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -28)], (0)), 100000000, 0, -27), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -25); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -26)]), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("pretyping/typing.mli", 69, 3108, 3108), ("pretyping/typing.mli", 69, 3108, 3191), 0), 0, Tag1 ("Typing", 23)), 0); (("recheck_against", 1383), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -19), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -18), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -17), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -16), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -14); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -15)]), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("pretyping/typing.mli", 72, 3205, 3205), ("pretyping/typing.mli", 72, 3205, 3290), 0), 0, Tag1 ("Typing", 24)), 0); (("bad_relevance_msg", 1384), ((Tag3 (Tag1 ((Tag2 ("CWarnings")), "msg"), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -4); (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -5); (Tag3 (Tag1 ((Tag2 ("Typeops")), "bad_relevance"), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -7); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -8)], (0)), 100000000, 0, -6)]), 100000000, 0, -3)], (0)), 100000000, 0, -2), 0, (("pretyping/typing.mli", 74, 3292, 3292), ("pretyping/typing.mli", 74, 3292, 3394), 0), 0, Tag1 ("Typing", 25)), 0)], "Typing", [("Typing", ("\176X]K\028M\174B\196\199L4[\227ns")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("UnivSubst", ("\190qu\031mc\130\181\003G]\132\"\219m)")); ("UnivProblem", ("6'\161\018\181\001.\253\000\141a6\171\1727\155")); ("UnivNames", ("%\151_\209%+JM$n\001\232\194n\178N")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UState", ("SD\203\215|\136\n\251\239\208\148\215C\n\167\005")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("Typeops", ("\254\157\018\192T\005](u\187o@D\146\195\218")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Store", ("/dT\252\145\179pq\216{\181\206\190K+U")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("Section", ("\245\207\b\021\142v=\155#w\246}\"4b\006")); ("Safe_typing", (")\250?\164\145\132\241\127\186\152h+\145\"\237l")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("Nativevalues", ("8:\007\025e\226c,\001\171\146#l\210\171\152")); ("Nativelib", ("V\239\205Y1\147E:,\176\196Hy\1483|")); ("Nativecode", ("\190\185\255\006m\012\210\163\138Rz\247\15283\183")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Monad", ("\244\171T\157\194p\187\160\149\195{\132\222\020\253\148")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hook", ("\183\194\223\003\155\169',\187\240a;E\b\1396")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Genlambda", ("\170}\024\241\141\222\136S\169\219\2212i\134KI")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evd", ("\211\205p\193\216\129r\006\239oN\142ar\196\175")); ("Evar_kinds", ("\023L\186\132\218}\254\221\185\198\220\200h\003{\021")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("EConstr", ("\201aW\156\157;N\004\201V\208\006L\166\211)")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conversion", ("\158\150&\195M\tv\127|\029\158RRK\211A")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CWarnings", ("\132\220\150\227\215\239t\217\132\220'JX\188\246c")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CDebug", ("^4\210p7\239!3\138\138\213?\239`\250\157")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])

  CWarnings.msg
