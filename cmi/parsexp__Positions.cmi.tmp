type t
val sexp_of_t : t -> Sexplib0.Sexp.t
val compare : t -> t -> int
type pos = { line : int; col : int; offset : int; }
val sexp_of_pos : pos -> Sexplib0.Sexp.t
val compare_pos : pos -> pos -> int
val beginning_of_file : pos
val shift_pos : pos -> cols:int -> pos
type range = { start_pos : pos; end_pos : pos; }
val sexp_of_range : range -> Sexplib0.Sexp.t
val compare_range : range -> range -> int
val make_range_incl : start_pos:pos -> last_pos:pos -> range
module Builder :
  sig
    type t
    val create : ?initial_pos:pos -> unit -> t
    val add : t -> offset:int -> unit
    val add_twice : t -> offset:int -> unit
    val add_newline : t -> offset:int -> unit
    val contents : t -> t/2
    val reset : t -> pos -> unit
  end
val to_list : t -> pos list
val to_array : t -> pos array
val find : t -> int -> int -> range
val find_sub_sexp_phys :
  t -> Parsexp__.Import.Sexp.t -> sub:Parsexp__.Import.Sexp.t -> range option
val find_sub_sexp_in_list_phys :
  t ->
  Parsexp__.Import.Sexp.t list -> sub:Parsexp__.Import.Sexp.t -> range option
val memory_footprint_in_bytes : t -> int
module Iterator :
  sig
    type t
    val create : t/2 -> t
    exception No_more
    val advance_exn : t -> skip:int -> pos("DEBUG:rule", [Tag1 (("t", 464), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/positions.mli", 17, 707, 707), ("src/positions.mli", 17, 707, 741), 0), [(("deriving_inline", (("src/positions.mli", 17, 707, 717), ("src/positions.mli", 17, 707, 732), 0)), ([([(((("sexp_of"), (("src/positions.mli", 17, 707, 733), ("src/positions.mli", 17, 707, 740), 0))), (("src/positions.mli", 17, 707, 733), ("src/positions.mli", 17, 707, 740), 0), 0, 0)], (("src/positions.mli", 17, 707, 733), ("src/positions.mli", 17, 707, 740), 0))]), (("src/positions.mli", 17, 707, 714), ("src/positions.mli", 17, 707, 741), 0))], 0, 0, Tag1 ("Parsexp__Positions", 0)), 1, 0); (("sexp_of_t", 465), ((Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -76), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), 0, (("src/positions.mli", 22, 783, 785), ("src/positions.mli", 22, 783, 821), 0), 0, Tag1 ("Parsexp__Positions", 1)), 0); (("compare", 466), ((Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -73), (Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -72), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -71), 0), 100000000, 0, -70), 0), 100000000, 0, -69), 0, (("src/positions.mli", 28, 861, 861), ("src/positions.mli", 28, 861, 888), 0), 0, Tag1 ("Parsexp__Positions", 2)), 0); Tag1 (("pos", 467), (0, 0, [[(("line", 404), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -66), (("src/positions.mli", 32, 942, 946), ("src/positions.mli", 33, 1022, 1025), 0), 0, Tag1 ("Parsexp__Positions", 4)); (("col", 405), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -67), (("src/positions.mli", 33, 1022, 1026), ("src/positions.mli", 34, 1101, 1104), 0), 0, Tag1 ("Parsexp__Positions", 5)); (("offset", 406), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -68), (("src/positions.mli", 34, 1101, 1105), ("src/positions.mli", 34, 1101, 1117), 0), 0, Tag1 ("Parsexp__Positions", 6))]], 1, 0, 0, 0, 0, 0, (("src/positions.mli", 31, 931, 931), ("src/positions.mli", 38, 1217, 1244), 0), [(("deriving_inline", (("src/positions.mli", 38, 1217, 1220), ("src/positions.mli", 38, 1217, 1235), 0)), ([([(((("sexp_of"), (("src/positions.mli", 38, 1217, 1236), ("src/positions.mli", 38, 1217, 1243), 0))), (("src/positions.mli", 38, 1217, 1236), ("src/positions.mli", 38, 1217, 1243), 0), 0, 0)], (("src/positions.mli", 38, 1217, 1236), ("src/positions.mli", 38, 1217, 1243), 0))]), (("src/positions.mli", 38, 1217, 1217), ("src/positions.mli", 38, 1217, 1244), 0))], 0, 0, Tag1 ("Parsexp__Positions", 3)), 1, 0); (("sexp_of_pos", 468), ((Tag1 (0, (Tag3 ((("pos", 467)), 0, (0)), 100000000, 0, -65), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -64), 0), 100000000, 0, -63), 0, (("src/positions.mli", 43, 1286, 1288), ("src/positions.mli", 43, 1286, 1328), 0), 0, Tag1 ("Parsexp__Positions", 7)), 0); (("compare_pos", 469), ((Tag1 (0, (Tag3 ((("pos", 467)), 0, (0)), 100000000, 0, -62), (Tag1 (0, (Tag3 ((("pos", 467)), 0, (0)), 100000000, 0, -61), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -60), 0), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("src/positions.mli", 49, 1368, 1368), ("src/positions.mli", 49, 1368, 1403), 0), 0, Tag1 ("Parsexp__Positions", 8)), 0); (("beginning_of_file", 470), ((Tag3 ((("pos", 467)), 0, (0)), 100000000, 0, -57), 0, (("src/positions.mli", 50, 1404, 1404), ("src/positions.mli", 50, 1404, 1431), 0), 0, Tag1 ("Parsexp__Positions", 9)), 0); (("shift_pos", 471), ((Tag1 (0, (Tag3 ((("pos", 467)), 0, (0)), 100000000, 0, -56), (Tag1 (("cols"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -55), (Tag3 ((("pos", 467)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0, (("src/positions.mli", 51, 1432, 1432), ("src/positions.mli", 51, 1432, 1470), 0), 0, Tag1 ("Parsexp__Positions", 10)), 0); Tag1 (("range", 472), (0, 0, [[(("start_pos", 413), 0, (Tag3 ((("pos", 467)), 0, (0)), 100000000, 0, -50), (("src/positions.mli", 60, 1792, 1796), ("src/positions.mli", 61, 1812, 1815), 0), 0, Tag1 ("Parsexp__Positions", 12)); (("end_pos", 414), 0, (Tag3 ((("pos", 467)), 0, (0)), 100000000, 0, -51), (("src/positions.mli", 61, 1812, 1816), ("src/positions.mli", 61, 1812, 1829), 0), 0, Tag1 ("Parsexp__Positions", 13))]], 1, 0, 0, 0, 0, 0, (("src/positions.mli", 59, 1779, 1779), ("src/positions.mli", 63, 1834, 1861), 0), [(("deriving_inline", (("src/positions.mli", 63, 1834, 1837), ("src/positions.mli", 63, 1834, 1852), 0)), ([([(((("sexp_of"), (("src/positions.mli", 63, 1834, 1853), ("src/positions.mli", 63, 1834, 1860), 0))), (("src/positions.mli", 63, 1834, 1853), ("src/positions.mli", 63, 1834, 1860), 0), 0, 0)], (("src/positions.mli", 63, 1834, 1853), ("src/positions.mli", 63, 1834, 1860), 0))]), (("src/positions.mli", 63, 1834, 1834), ("src/positions.mli", 63, 1834, 1861), 0))], 0, 0, Tag1 ("Parsexp__Positions", 11)), 1, 0); (("sexp_of_range", 473), ((Tag1 (0, (Tag3 ((("range", 472)), 0, (0)), 100000000, 0, -49), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("src/positions.mli", 68, 1903, 1905), ("src/positions.mli", 68, 1903, 1949), 0), 0, Tag1 ("Parsexp__Positions", 14)), 0); (("compare_range", 474), ((Tag1 (0, (Tag3 ((("range", 472)), 0, (0)), 100000000, 0, -46), (Tag1 (0, (Tag3 ((("range", 472)), 0, (0)), 100000000, 0, -45), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("src/positions.mli", 74, 1989, 1989), ("src/positions.mli", 74, 1989, 2030), 0), 0, Tag1 ("Parsexp__Positions", 15)), 0); (("make_range_incl", 475), ((Tag1 (("start_pos"), (Tag3 ((("pos", 467)), 0, (0)), 100000000, 0, -41), (Tag1 (("last_pos"), (Tag3 ((("pos", 467)), 0, (0)), 100000000, 0, -40), (Tag3 ((("range", 472)), 0, (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0), 100000000, 0, -37), 0, (("src/positions.mli", 79, 2270, 2270), ("src/positions.mli", 79, 2270, 2330), 0), 0, Tag1 ("Parsexp__Positions", 16)), 0); Tag3 (("Builder", 476), 0, (Tag1 ([Tag1 (("t", 484), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/positions.mli", 81, 2332, 2349), ("src/positions.mli", 101, 2833, 2857), 0), 0, 0, 0, Tag1 ("Parsexp__Positions", 18)), 1, 0); (("create", 485), ((Tag1 (Tag1 ("initial_pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pos", 467)), 0, (0)), 100000000, 0, -105)], (0)), 100000000, 0, -104), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -103), (Tag3 ((("t", 484)), 0, (0)), 100000000, 0, -102), 0), 100000000, 0, -101), 0), 100000000, 0, -100), 0, (("src/positions.mli", 81, 2332, 2349), ("src/positions.mli", 101, 2833, 2857), 0), 0, Tag1 ("Parsexp__Positions", 19)), 0); (("add", 486), ((Tag1 (0, (Tag3 ((("t", 484)), 0, (0)), 100000000, 0, -99), (Tag1 (("offset"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -98), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -97), 0), 100000000, 0, -96), 0), 100000000, 0, -95), 0, (("src/positions.mli", 81, 2332, 2349), ("src/positions.mli", 101, 2833, 2857), 0), 0, Tag1 ("Parsexp__Positions", 20)), 0); (("add_twice", 487), ((Tag1 (0, (Tag3 ((("t", 484)), 0, (0)), 100000000, 0, -94), (Tag1 (("offset"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -93), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -92), 0), 100000000, 0, -91), 0), 100000000, 0, -90), 0, (("src/positions.mli", 81, 2332, 2349), ("src/positions.mli", 101, 2833, 2857), 0), 0, Tag1 ("Parsexp__Positions", 21)), 0); (("add_newline", 488), ((Tag1 (0, (Tag3 ((("t", 484)), 0, (0)), 100000000, 0, -89), (Tag1 (("offset"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -88), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -87), 0), 100000000, 0, -86), 0), 100000000, 0, -85), 0, (("src/positions.mli", 81, 2332, 2349), ("src/positions.mli", 101, 2833, 2857), 0), 0, Tag1 ("Parsexp__Positions", 22)), 0); (("contents", 489), ((Tag1 (0, (Tag3 ((("t", 484)), 0, (0)), 100000000, 0, -84), (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -83), 0), 100000000, 0, -82), 0, (("src/positions.mli", 81, 2332, 2349), ("src/positions.mli", 101, 2833, 2857), 0), 0, Tag1 ("Parsexp__Positions", 23)), 0); (("reset", 490), ((Tag1 (0, (Tag3 ((("t", 484)), 0, (0)), 100000000, 0, -81), (Tag1 (0, (Tag3 ((("pos", 467)), 0, (0)), 100000000, 0, -80), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -79), 0), 100000000, 0, -78), 0), 100000000, 0, -77), 0, (("src/positions.mli", 81, 2332, 2349), ("src/positions.mli", 101, 2833, 2857), 0), 0, Tag1 ("Parsexp__Positions", 24)), 0)]), 0, (("src/positions.mli", 81, 2332, 2332), ("src/positions.mli", 101, 2833, 2857), 0), Tag1 ("Parsexp__Positions", 26)), 0, 0); (("to_list", 477), ((Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -36), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pos", 467)), 0, (0)), 100000000, 0, -35)], (0)), 100000000, 0, -34), 0), 100000000, 0, -33), 0, (("src/positions.mli", 104, 2906, 2906), ("src/positions.mli", 104, 2906, 2933), 0), 0, Tag1 ("Parsexp__Positions", 27)), 0); (("to_array", 478), ((Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -32), (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("pos", 467)), 0, (0)), 100000000, 0, -31)], (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("src/positions.mli", 107, 2983, 2983), ("src/positions.mli", 107, 2983, 3012), 0), 0, Tag1 ("Parsexp__Positions", 28)), 0); (("find", 479), ((Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -27), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -26), (Tag3 ((("range", 472)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("src/positions.mli", 121, 3322, 3322), ("src/positions.mli", 121, 3322, 3357), 0), 0, Tag1 ("Parsexp__Positions", 29)), 0); (("find_sub_sexp_phys", 480), ((Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -21), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -20), (Tag1 (("sub"), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -19), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("range", 472)), 0, (0)), 100000000, 0, -18)], (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("src/positions.mli", 128, 3569, 3569), ("src/positions.mli", 128, 3569, 3635), 0), 0, Tag1 ("Parsexp__Positions", 30)), 0); (("find_sub_sexp_in_list_phys", 481), ((Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -12)], (0)), 100000000, 0, -11), (Tag1 (("sub"), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("range", 472)), 0, (0)), 100000000, 0, -9)], (0)), 100000000, 0, -8), 0), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("src/positions.mli", 130, 3637, 3637), ("src/positions.mli", 130, 3637, 3716), 0), 0, Tag1 ("Parsexp__Positions", 31)), 0); (("memory_footprint_in_bytes", 482), ((Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/positions.mli", 133, 3764, 3764), ("src/positions.mli", 133, 3764, 3804), 0), 0, Tag1 ("Parsexp__Positions", 32)), 0); Tag3 (("Iterator", 483), 0, (Tag1 ([Tag1 (("t", 491), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/positions.mli", 136, 3866, 3884), ("src/positions.mli", 150, 4289, 4313), 0), 0, 0, 0, Tag1 ("Parsexp__Positions", 34)), 1, 0); (("create", 492), ((Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -113), (Tag3 ((("t", 491)), 0, (0)), 100000000, 0, -112), 0), 100000000, 0, -111), 0, (("src/positions.mli", 136, 3866, 3884), ("src/positions.mli", 150, 4289, 4313), 0), 0, Tag1 ("Parsexp__Positions", 35)), 0); Tag2 (("No_more", 493), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Parsexp__Positions", 36)), 2, 0); (("advance_exn", 494), ((Tag1 (0, (Tag3 ((("t", 491)), 0, (0)), 100000000, 0, -110), (Tag1 (("skip"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -109), (Tag3 ((("pos", 467)), 0, (0)), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), 0, (("src/positions.mli", 136, 3866, 3884), ("src/positions.mli", 150, 4289, 4313), 0), 0, Tag1 ("Parsexp__Positions", 37)), 0)]), 0, (("src/positions.mli", 136, 3866, 3866), ("src/positions.mli", 150, 4289, 4313), 0), Tag1 ("Parsexp__Positions", 39)), 0, 0)], "Parsexp__Positions", [("Parsexp__Positions", ("BE\135\222xW\224\233\184\004o\169\248\bH\230")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("Parsexp__Import", ("\017\029\157\225\239\135p*0\207\146\197\020\128\195!")); ("Parsexp__", ("\182\180\203\030\218\020\246\196\221\171_\030GE\171\192")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

  end
