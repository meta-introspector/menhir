type mutable_flag = bool
type rec_flag = bool
type redef_flag = bool
type lid = Names.Id.t
type uid = Names.Id.t
type ltac_constant = Names.KerName.t
type ltac_alias = Names.KerName.t
type ltac_notation = Names.KerName.t
type ltac_constructor = Names.KerName.t
type ltac_projection = Names.KerName.t
type type_constant = Names.KerName.t
type tacref = TacConstant of ltac_constant | TacAlias of ltac_alias
type 'a or_relid = RelId of Libnames.qualid | AbsKn of 'a
type ml_tactic_name = { mltac_plugin : string; mltac_tactic : string; }
type 'a or_tuple = Tuple of int | Other of 'a
type raw_typexpr_r =
    CTypVar of Names.Name.t
  | CTypArrow of raw_typexpr * raw_typexpr
  | CTypRef of type_constant or_tuple or_relid * raw_typexpr list
and raw_typexpr = raw_typexpr_r CAst.t
type raw_typedef =
    CTydDef of raw_typexpr option
  | CTydAlg of (uid * raw_typexpr list) list
  | CTydRec of (lid * mutable_flag * raw_typexpr) list
  | CTydOpn
type 'a glb_typexpr =
    GTypVar of 'a
  | GTypArrow of 'a glb_typexpr * 'a glb_typexpr
  | GTypRef of type_constant or_tuple * 'a glb_typexpr list
type glb_alg_type = {
  galg_constructors : (uid * int glb_typexpr list) list;
  galg_nconst : int;
  galg_nnonconst : int;
}
type glb_typedef =
    GTydDef of int glb_typexpr option
  | GTydAlg of glb_alg_type
  | GTydRec of (lid * mutable_flag * int glb_typexpr) list
  | GTydOpn
type type_scheme = int * int glb_typexpr
type raw_quant_typedef = Names.lident list * raw_typedef
type glb_quant_typedef = int * glb_typedef
type atom = AtmInt of int | AtmStr of string
type raw_patexpr_r =
    CPatVar of Names.Name.t
  | CPatAtm of atom
  | CPatRef of ltac_constructor or_tuple or_relid * raw_patexpr list
  | CPatRecord of (ltac_projection or_relid * raw_patexpr) list
  | CPatCnv of raw_patexpr * raw_typexpr
  | CPatOr of raw_patexpr list
  | CPatAs of raw_patexpr * Names.lident
and raw_patexpr = raw_patexpr_r CAst.t
type raw_tacexpr_r =
    CTacAtm of atom
  | CTacRef of tacref or_relid
  | CTacCst of ltac_constructor or_tuple or_relid
  | CTacFun of raw_patexpr list * raw_tacexpr
  | CTacApp of raw_tacexpr * raw_tacexpr list
  | CTacSyn of (raw_patexpr * raw_tacexpr) list * Names.KerName.t
  | CTacLet of rec_flag * (raw_patexpr * raw_tacexpr) list * raw_tacexpr
  | CTacCnv of raw_tacexpr * raw_typexpr
  | CTacSeq of raw_tacexpr * raw_tacexpr
  | CTacIft of raw_tacexpr * raw_tacexpr * raw_tacexpr
  | CTacCse of raw_tacexpr * raw_taccase list
  | CTacRec of raw_tacexpr option * raw_recexpr
  | CTacPrj of raw_tacexpr * ltac_projection or_relid
  | CTacSet of raw_tacexpr * ltac_projection or_relid * raw_tacexpr
  | CTacExt : ('a, 'b) Ltac2_plugin.Tac2dyn.Arg.tag * 'a -> raw_tacexpr_r
and raw_tacexpr = raw_tacexpr_r CAst.t
and raw_taccase = raw_patexpr * raw_tacexpr
and raw_recexpr = (ltac_projection or_relid * raw_tacexpr) list
type ctor_indx = Closed of int | Open of ltac_constructor
type ctor_data_for_patterns = {
  ctyp : type_constant option;
  cnargs : int;
  cindx : ctor_indx;
}
type glb_pat =
    GPatVar of Names.Name.t
  | GPatAtm of atom
  | GPatRef of ctor_data_for_patterns * glb_pat list
  | GPatOr of glb_pat list
  | GPatAs of glb_pat * Names.Id.t
module PartialPat :
  sig
    type r =
        Var of Names.Name.t
      | Atom of atom
      | Ref of ctor_data_for_patterns * t list
      | Or of t list
      | As of t * Names.Id.t
      | Extension of { example : atom option; }
    and t = r CAst.t
  end
type case_info = type_constant or_tuple
type 'a open_match = {
  opn_match : 'a;
  opn_branch : (Names.Name.t * Names.Name.t array * 'a) Names.KNmap.t;
  opn_default : Names.Name.t * 'a;
}
type glb_tacexpr =
    GTacAtm of atom
  | GTacVar of Names.Id.t
  | GTacRef of ltac_constant
  | GTacFun of Names.Name.t list * glb_tacexpr
  | GTacApp of glb_tacexpr * glb_tacexpr list
  | GTacLet of rec_flag * (Names.Name.t * glb_tacexpr) list * glb_tacexpr
  | GTacCst of case_info * int * glb_tacexpr list
  | GTacCse of glb_tacexpr * case_info * glb_tacexpr array *
      (Names.Name.t array * glb_tacexpr) array
  | GTacPrj of type_constant * glb_tacexpr * int
  | GTacSet of type_constant * glb_tacexpr * int * glb_tacexpr
  | GTacOpn of ltac_constructor * glb_tacexpr list
  | GTacWth of glb_tacexpr open_match
  | GTacFullMatch of glb_tacexpr * (glb_pat * glb_tacexpr) list
  | GTacExt : ('b, 'a) Ltac2_plugin.Tac2dyn.Arg.tag * 'a -> glb_tacexpr
  | GTacPrm of ml_tactic_name
type exp_level = E5 | E4 | E3 | E2 | E1 | E0
type sexpr =
    SexprStr of string CAst.t
  | SexprInt of int CAst.t
  | SexprRec of Loc.t * Names.Id.t option CAst.t * sexpr list
type strexpr =
    StrVal of mutable_flag * rec_flag * (Names.lname * raw_tacexpr) list
  | StrTyp of rec_flag *
      (Libnames.qualid * redef_flag * raw_quant_typedef) list
  | StrPrm of Names.lident * raw_typexpr * ml_tactic_name
  | StrMut of Libnames.qualid * Names.lident option * raw_tacexpr
type frame =
    FrLtac of ltac_constant
  | FrAnon of glb_tacexpr
  | FrPrim of ml_tactic_name
  | FrExtn : ('a, 'b) Ltac2_plugin.Tac2dyn.Arg.tag * 'b -> frame
("DEBUG:rule", [Tag1 (("mutable_flag", 691), (0, 0, 0, 1, ((Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -270)), 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 14, 702, 702), ("plugins/ltac2/tac2expr.mli", 14, 702, 726), 0), 0, 1, 0, Tag1 ("Ltac2_plugin__Tac2expr", 0)), 1, 0); Tag1 (("rec_flag", 692), (0, 0, 0, 1, ((Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -269)), 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 15, 727, 727), ("plugins/ltac2/tac2expr.mli", 15, 727, 747), 0), 0, 1, 0, Tag1 ("Ltac2_plugin__Tac2expr", 1)), 1, 0); Tag1 (("redef_flag", 693), (0, 0, 0, 1, ((Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -268)), 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 16, 748, 748), ("plugins/ltac2/tac2expr.mli", 16, 748, 770), 0), 0, 1, 0, Tag1 ("Ltac2_plugin__Tac2expr", 2)), 1, 0); Tag1 (("lid", 694), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -267)), 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 17, 771, 771), ("plugins/ltac2/tac2expr.mli", 17, 771, 786), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 3)), 1, 0); Tag1 (("uid", 695), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -266)), 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 18, 787, 787), ("plugins/ltac2/tac2expr.mli", 18, 787, 802), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 4)), 1, 0); Tag1 (("ltac_constant", 696), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -265)), 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 20, 804, 804), ("plugins/ltac2/tac2expr.mli", 20, 804, 834), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 5)), 1, 0); Tag1 (("ltac_alias", 697), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -264)), 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 21, 835, 835), ("plugins/ltac2/tac2expr.mli", 21, 835, 862), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 6)), 1, 0); Tag1 (("ltac_notation", 698), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -263)), 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 22, 863, 863), ("plugins/ltac2/tac2expr.mli", 22, 863, 893), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 7)), 1, 0); Tag1 (("ltac_constructor", 699), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -262)), 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 23, 894, 894), ("plugins/ltac2/tac2expr.mli", 23, 894, 927), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 8)), 1, 0); Tag1 (("ltac_projection", 700), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -261)), 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 24, 928, 928), ("plugins/ltac2/tac2expr.mli", 24, 928, 960), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 9)), 1, 0); Tag1 (("type_constant", 701), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -260)), 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 25, 961, 961), ("plugins/ltac2/tac2expr.mli", 25, 961, 991), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 10)), 1, 0); Tag1 (("tacref", 702), (0, 0, Tag1 ([(("TacConstant", 454), ([(Tag3 ((("ltac_constant", 696)), 0, (0)), 100000000, 0, -258)]), 0, (("plugins/ltac2/tac2expr.mli", 28, 1007, 1007), ("plugins/ltac2/tac2expr.mli", 28, 1007, 1037), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 12)); (("TacAlias", 455), ([(Tag3 ((("ltac_alias", 697)), 0, (0)), 100000000, 0, -259)]), 0, (("plugins/ltac2/tac2expr.mli", 29, 1038, 1038), ("plugins/ltac2/tac2expr.mli", 29, 1038, 1062), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 13))], 0), 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 27, 993, 993), ("plugins/ltac2/tac2expr.mli", 29, 1038, 1062), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 11)), 1, 0); Tag1 (("or_relid", 703), ([((("a")), 100000000, 0, -257)], 1, Tag1 ([(("RelId", 457), ([(Tag3 (Tag1 ((Tag2 ("Libnames")), "qualid"), 0, (0)), 100000000, 0, -256)]), 0, (("plugins/ltac2/tac2expr.mli", 32, 1083, 1083), ("plugins/ltac2/tac2expr.mli", 32, 1083, 1100), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 15)); (("AbsKn", 458), ([((("a")), 100000000, 0, -257)]), 0, (("plugins/ltac2/tac2expr.mli", 33, 1101, 1101), ("plugins/ltac2/tac2expr.mli", 33, 1101, 1114), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 16))], 0), 1, 0, [25], [0], 0, 0, (("plugins/ltac2/tac2expr.mli", 31, 1064, 1064), ("plugins/ltac2/tac2expr.mli", 33, 1101, 1114), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 14)), 1, 0); Tag1 (("ml_tactic_name", 704), (0, 0, [[(("mltac_plugin", 469), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -254), (("plugins/ltac2/tac2expr.mli", 38, 1157, 1159), ("plugins/ltac2/tac2expr.mli", 38, 1157, 1181), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 18)); (("mltac_tactic", 470), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -255), (("plugins/ltac2/tac2expr.mli", 39, 1182, 1184), ("plugins/ltac2/tac2expr.mli", 39, 1182, 1206), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 19))]], 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 37, 1133, 1133), ("plugins/ltac2/tac2expr.mli", 40, 1207, 1208), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 17)), 1, 0); Tag1 (("or_tuple", 705), ([((("a")), 100000000, 0, -253)], 1, Tag1 ([(("Tuple", 472), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -252)]), 0, (("plugins/ltac2/tac2expr.mli", 43, 1229, 1229), ("plugins/ltac2/tac2expr.mli", 43, 1229, 1243), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 21)); (("Other", 473), ([((("a")), 100000000, 0, -253)]), 0, (("plugins/ltac2/tac2expr.mli", 44, 1244, 1244), ("plugins/ltac2/tac2expr.mli", 44, 1244, 1257), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 22))], 0), 1, 0, [25], [0], 0, 0, (("plugins/ltac2/tac2expr.mli", 42, 1210, 1210), ("plugins/ltac2/tac2expr.mli", 44, 1244, 1257), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 20)), 1, 0); Tag1 (("raw_typexpr_r", 706), (0, 0, Tag1 ([(("CTypVar", 476), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -244)]), 0, (("plugins/ltac2/tac2expr.mli", 49, 1304, 1304), ("plugins/ltac2/tac2expr.mli", 49, 1304, 1323), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 25)); (("CTypArrow", 486), ([(Tag3 ((("raw_typexpr", 707)), 0, (0)), 100000000, 0, -245); (Tag3 ((("raw_typexpr", 707)), 0, (0)), 100000000, 0, -246)]), 0, (("plugins/ltac2/tac2expr.mli", 50, 1324, 1324), ("plugins/ltac2/tac2expr.mli", 50, 1324, 1364), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 26)); (("CTypRef", 487), ([(Tag3 ((("or_relid", 703)), [(Tag3 ((("or_tuple", 705)), [(Tag3 ((("type_constant", 701)), 0, (0)), 100000000, 0, -249)], (0)), 100000000, 0, -248)], (0)), 100000000, 0, -247); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("raw_typexpr", 707)), 0, (0)), 100000000, 0, -251)], (0)), 100000000, 0, -250)]), 0, (("plugins/ltac2/tac2expr.mli", 51, 1365, 1365), ("plugins/ltac2/tac2expr.mli", 51, 1365, 1428), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 27))], 0), 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 48, 1283, 1283), ("plugins/ltac2/tac2expr.mli", 51, 1365, 1428), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 23)), 1, 0); Tag1 (("raw_typexpr", 707), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("CAst")), "t"), [(Tag3 ((("raw_typexpr_r", 706)), 0, (0)), 100000000, 0, -243)], (0)), 100000000, 0, -242)), 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 53, 1430, 1430), ("plugins/ltac2/tac2expr.mli", 53, 1430, 1468), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 24)), 2, 0); Tag1 (("raw_typedef", 708), (0, 0, Tag1 ([(("CTydDef", 489), ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("raw_typexpr", 707)), 0, (0)), 100000000, 0, -231)], (0)), 100000000, 0, -230)]), 0, (("plugins/ltac2/tac2expr.mli", 56, 1489, 1489), ("plugins/ltac2/tac2expr.mli", 56, 1489, 1520), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 29)); (("CTydAlg", 490), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("uid", 695)), 0, (0)), 100000000, 0, -234); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("raw_typexpr", 707)), 0, (0)), 100000000, 0, -236)], (0)), 100000000, 0, -235)]), 100000000, 0, -233)], (0)), 100000000, 0, -232)]), 0, (("plugins/ltac2/tac2expr.mli", 57, 1521, 1521), ("plugins/ltac2/tac2expr.mli", 57, 1521, 1563), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 30)); (("CTydRec", 491), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("lid", 694)), 0, (0)), 100000000, 0, -239); (Tag3 ((("mutable_flag", 691)), 0, (0)), 100000000, 0, -240); (Tag3 ((("raw_typexpr", 707)), 0, (0)), 100000000, 0, -241)]), 100000000, 0, -238)], (0)), 100000000, 0, -237)]), 0, (("plugins/ltac2/tac2expr.mli", 58, 1564, 1564), ("plugins/ltac2/tac2expr.mli", 58, 1564, 1616), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 31)); (("CTydOpn", 492), (0), 0, (("plugins/ltac2/tac2expr.mli", 59, 1617, 1617), ("plugins/ltac2/tac2expr.mli", 59, 1617, 1626), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 32))], 0), 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 55, 1470, 1470), ("plugins/ltac2/tac2expr.mli", 59, 1617, 1626), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 28)), 1, 0); Tag1 (("glb_typexpr", 709), ([((("a")), 100000000, 0, -223)], 1, Tag1 ([(("GTypVar", 494), ([((("a")), 100000000, 0, -223)]), 0, (("plugins/ltac2/tac2expr.mli", 62, 1650, 1650), ("plugins/ltac2/tac2expr.mli", 62, 1650, 1665), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 34)); (("GTypArrow", 495), ([(Tag3 ((("glb_typexpr", 709)), [((("a")), 100000000, 0, -223)], (0)), 100000000, 0, -224); (Tag3 ((("glb_typexpr", 709)), [((("a")), 100000000, 0, -223)], (0)), 100000000, 0, -225)]), 0, (("plugins/ltac2/tac2expr.mli", 63, 1666, 1666), ("plugins/ltac2/tac2expr.mli", 63, 1666, 1712), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 35)); (("GTypRef", 496), ([(Tag3 ((("or_tuple", 705)), [(Tag3 ((("type_constant", 701)), 0, (0)), 100000000, 0, -227)], (0)), 100000000, 0, -226); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("glb_typexpr", 709)), [((("a")), 100000000, 0, -223)], (0)), 100000000, 0, -229)], (0)), 100000000, 0, -228)]), 0, (("plugins/ltac2/tac2expr.mli", 64, 1713, 1713), ("plugins/ltac2/tac2expr.mli", 64, 1713, 1770), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 36))], 0), 1, 0, [25], [0], 0, 0, (("plugins/ltac2/tac2expr.mli", 61, 1628, 1628), ("plugins/ltac2/tac2expr.mli", 64, 1713, 1770), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 33)), 1, 0); Tag1 (("glb_alg_type", 710), (0, 0, [[(("galg_constructors", 498), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("uid", 695)), 0, (0)), 100000000, 0, -217); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("glb_typexpr", 709)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -220)], (0)), 100000000, 0, -219)], (0)), 100000000, 0, -218)]), 100000000, 0, -216)], (0)), 100000000, 0, -215), (("plugins/ltac2/tac2expr.mli", 67, 1794, 1796), ("plugins/ltac2/tac2expr.mli", 67, 1794, 1850), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 38)); (("galg_nconst", 499), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -221), (("plugins/ltac2/tac2expr.mli", 69, 1895, 1897), ("plugins/ltac2/tac2expr.mli", 69, 1895, 1915), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 39)); (("galg_nnonconst", 500), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -222), (("plugins/ltac2/tac2expr.mli", 71, 1957, 1959), ("plugins/ltac2/tac2expr.mli", 71, 1957, 1980), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 40))]], 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 66, 1772, 1772), ("plugins/ltac2/tac2expr.mli", 73, 2026, 2027), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 37)), 1, 0); Tag1 (("glb_typedef", 711), (0, 0, Tag1 ([(("GTydDef", 502), ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("glb_typexpr", 709)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -207)], (0)), 100000000, 0, -206)], (0)), 100000000, 0, -205)]), 0, (("plugins/ltac2/tac2expr.mli", 76, 2048, 2048), ("plugins/ltac2/tac2expr.mli", 76, 2048, 2083), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 42)); (("GTydAlg", 503), ([(Tag3 ((("glb_alg_type", 710)), 0, (0)), 100000000, 0, -208)]), 0, (("plugins/ltac2/tac2expr.mli", 77, 2084, 2084), ("plugins/ltac2/tac2expr.mli", 77, 2084, 2109), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 43)); (("GTydRec", 504), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("lid", 694)), 0, (0)), 100000000, 0, -211); (Tag3 ((("mutable_flag", 691)), 0, (0)), 100000000, 0, -212); (Tag3 ((("glb_typexpr", 709)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -214)], (0)), 100000000, 0, -213)]), 100000000, 0, -210)], (0)), 100000000, 0, -209)]), 0, (("plugins/ltac2/tac2expr.mli", 78, 2110, 2110), ("plugins/ltac2/tac2expr.mli", 78, 2110, 2166), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 44)); (("GTydOpn", 505), (0), 0, (("plugins/ltac2/tac2expr.mli", 79, 2167, 2167), ("plugins/ltac2/tac2expr.mli", 79, 2167, 2176), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 45))], 0), 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 75, 2029, 2029), ("plugins/ltac2/tac2expr.mli", 79, 2167, 2176), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 41)), 1, 0); Tag1 (("type_scheme", 712), (0, 0, 0, 1, ((Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -202); (Tag3 ((("glb_typexpr", 709)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -204)], (0)), 100000000, 0, -203)]), 100000000, 0, -201)), 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 81, 2178, 2178), ("plugins/ltac2/tac2expr.mli", 81, 2178, 2218), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 46)), 1, 0); Tag1 (("raw_quant_typedef", 713), (0, 0, 0, 1, ((Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Names")), "lident"), 0, (0)), 100000000, 0, -199)], (0)), 100000000, 0, -198); (Tag3 ((("raw_typedef", 708)), 0, (0)), 100000000, 0, -200)]), 100000000, 0, -197)), 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 83, 2220, 2220), ("plugins/ltac2/tac2expr.mli", 83, 2220, 2276), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 47)), 1, 0); Tag1 (("glb_quant_typedef", 714), (0, 0, 0, 1, ((Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -195); (Tag3 ((("glb_typedef", 711)), 0, (0)), 100000000, 0, -196)]), 100000000, 0, -194)), 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 84, 2277, 2277), ("plugins/ltac2/tac2expr.mli", 84, 2277, 2319), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 48)), 1, 0); Tag1 (("atom", 715), (0, 0, Tag1 ([(("AtmInt", 510), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -192)]), 0, (("plugins/ltac2/tac2expr.mli", 89, 2357, 2357), ("plugins/ltac2/tac2expr.mli", 89, 2357, 2372), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 50)); (("AtmStr", 511), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -193)]), 0, (("plugins/ltac2/tac2expr.mli", 90, 2373, 2373), ("plugins/ltac2/tac2expr.mli", 90, 2373, 2391), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 51))], 0), 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 88, 2345, 2345), ("plugins/ltac2/tac2expr.mli", 90, 2373, 2391), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 49)), 1, 0); Tag1 (("raw_patexpr_r", 716), (0, 0, Tag1 ([(("CPatVar", 514), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -174)]), 0, (("plugins/ltac2/tac2expr.mli", 94, 2440, 2440), ("plugins/ltac2/tac2expr.mli", 94, 2440, 2459), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 54)); (("CPatAtm", 515), ([(Tag3 ((("atom", 715)), 0, (0)), 100000000, 0, -175)]), 0, (("plugins/ltac2/tac2expr.mli", 95, 2460, 2460), ("plugins/ltac2/tac2expr.mli", 95, 2460, 2477), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 55)); (("CPatRef", 516), ([(Tag3 ((("or_relid", 703)), [(Tag3 ((("or_tuple", 705)), [(Tag3 ((("ltac_constructor", 699)), 0, (0)), 100000000, 0, -178)], (0)), 100000000, 0, -177)], (0)), 100000000, 0, -176); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("raw_patexpr", 717)), 0, (0)), 100000000, 0, -180)], (0)), 100000000, 0, -179)]), 0, (("plugins/ltac2/tac2expr.mli", 96, 2478, 2478), ("plugins/ltac2/tac2expr.mli", 96, 2478, 2544), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 56)); (("CPatRecord", 517), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("or_relid", 703)), [(Tag3 ((("ltac_projection", 700)), 0, (0)), 100000000, 0, -184)], (0)), 100000000, 0, -183); (Tag3 ((("raw_patexpr", 717)), 0, (0)), 100000000, 0, -185)]), 100000000, 0, -182)], (0)), 100000000, 0, -181)]), 0, (("plugins/ltac2/tac2expr.mli", 97, 2545, 2545), ("plugins/ltac2/tac2expr.mli", 97, 2545, 2606), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 57)); (("CPatCnv", 518), ([(Tag3 ((("raw_patexpr", 717)), 0, (0)), 100000000, 0, -186); (Tag3 ((("raw_typexpr", 707)), 0, (0)), 100000000, 0, -187)]), 0, (("plugins/ltac2/tac2expr.mli", 98, 2607, 2607), ("plugins/ltac2/tac2expr.mli", 98, 2607, 2645), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 58)); (("CPatOr", 519), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("raw_patexpr", 717)), 0, (0)), 100000000, 0, -189)], (0)), 100000000, 0, -188)]), 0, (("plugins/ltac2/tac2expr.mli", 99, 2646, 2646), ("plugins/ltac2/tac2expr.mli", 99, 2646, 2674), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 59)); (("CPatAs", 520), ([(Tag3 ((("raw_patexpr", 717)), 0, (0)), 100000000, 0, -190); (Tag3 (Tag1 ((Tag2 ("Names")), "lident"), 0, (0)), 100000000, 0, -191)]), 0, (("plugins/ltac2/tac2expr.mli", 100, 2675, 2675), ("plugins/ltac2/tac2expr.mli", 100, 2675, 2707), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 60))], 0), 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 93, 2419, 2419), ("plugins/ltac2/tac2expr.mli", 100, 2675, 2707), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 52)), 1, 0); Tag1 (("raw_patexpr", 717), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("CAst")), "t"), [(Tag3 ((("raw_patexpr_r", 716)), 0, (0)), 100000000, 0, -173)], (0)), 100000000, 0, -172)), 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 102, 2709, 2709), ("plugins/ltac2/tac2expr.mli", 102, 2709, 2747), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 53)), 2, 0); Tag1 (("raw_tacexpr_r", 718), (0, 0, Tag1 ([(("CTacAtm", 525), ([(Tag3 ((("atom", 715)), 0, (0)), 100000000, 0, -125)]), 0, (("plugins/ltac2/tac2expr.mli", 105, 2770, 2770), ("plugins/ltac2/tac2expr.mli", 105, 2770, 2787), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 65)); (("CTacRef", 526), ([(Tag3 ((("or_relid", 703)), [(Tag3 ((("tacref", 702)), 0, (0)), 100000000, 0, -127)], (0)), 100000000, 0, -126)]), 0, (("plugins/ltac2/tac2expr.mli", 106, 2788, 2788), ("plugins/ltac2/tac2expr.mli", 106, 2788, 2816), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 66)); (("CTacCst", 527), ([(Tag3 ((("or_relid", 703)), [(Tag3 ((("or_tuple", 705)), [(Tag3 ((("ltac_constructor", 699)), 0, (0)), 100000000, 0, -130)], (0)), 100000000, 0, -129)], (0)), 100000000, 0, -128)]), 0, (("plugins/ltac2/tac2expr.mli", 107, 2817, 2817), ("plugins/ltac2/tac2expr.mli", 107, 2817, 2864), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 67)); (("CTacFun", 528), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("raw_patexpr", 717)), 0, (0)), 100000000, 0, -132)], (0)), 100000000, 0, -131); (Tag3 ((("raw_tacexpr", 719)), 0, (0)), 100000000, 0, -133)]), 0, (("plugins/ltac2/tac2expr.mli", 108, 2865, 2865), ("plugins/ltac2/tac2expr.mli", 108, 2865, 2908), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 68)); (("CTacApp", 529), ([(Tag3 ((("raw_tacexpr", 719)), 0, (0)), 100000000, 0, -134); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("raw_tacexpr", 719)), 0, (0)), 100000000, 0, -136)], (0)), 100000000, 0, -135)]), 0, (("plugins/ltac2/tac2expr.mli", 109, 2909, 2909), ("plugins/ltac2/tac2expr.mli", 109, 2909, 2952), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 69)); (("CTacSyn", 530), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("raw_patexpr", 717)), 0, (0)), 100000000, 0, -139); (Tag3 ((("raw_tacexpr", 719)), 0, (0)), 100000000, 0, -140)]), 100000000, 0, -138)], (0)), 100000000, 0, -137); (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -141)]), 0, (("plugins/ltac2/tac2expr.mli", 110, 2953, 2953), ("plugins/ltac2/tac2expr.mli", 110, 2953, 3010), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 70)); (("CTacLet", 531), ([(Tag3 ((("rec_flag", 692)), 0, (0)), 100000000, 0, -142); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("raw_patexpr", 717)), 0, (0)), 100000000, 0, -145); (Tag3 ((("raw_tacexpr", 719)), 0, (0)), 100000000, 0, -146)]), 100000000, 0, -144)], (0)), 100000000, 0, -143); (Tag3 ((("raw_tacexpr", 719)), 0, (0)), 100000000, 0, -147)]), 0, (("plugins/ltac2/tac2expr.mli", 111, 3011, 3011), ("plugins/ltac2/tac2expr.mli", 111, 3011, 3081), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 71)); (("CTacCnv", 532), ([(Tag3 ((("raw_tacexpr", 719)), 0, (0)), 100000000, 0, -148); (Tag3 ((("raw_typexpr", 707)), 0, (0)), 100000000, 0, -149)]), 0, (("plugins/ltac2/tac2expr.mli", 112, 3082, 3082), ("plugins/ltac2/tac2expr.mli", 112, 3082, 3120), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 72)); (("CTacSeq", 533), ([(Tag3 ((("raw_tacexpr", 719)), 0, (0)), 100000000, 0, -150); (Tag3 ((("raw_tacexpr", 719)), 0, (0)), 100000000, 0, -151)]), 0, (("plugins/ltac2/tac2expr.mli", 113, 3121, 3121), ("plugins/ltac2/tac2expr.mli", 113, 3121, 3159), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 73)); (("CTacIft", 534), ([(Tag3 ((("raw_tacexpr", 719)), 0, (0)), 100000000, 0, -152); (Tag3 ((("raw_tacexpr", 719)), 0, (0)), 100000000, 0, -153); (Tag3 ((("raw_tacexpr", 719)), 0, (0)), 100000000, 0, -154)]), 0, (("plugins/ltac2/tac2expr.mli", 114, 3160, 3160), ("plugins/ltac2/tac2expr.mli", 114, 3160, 3212), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 74)); (("CTacCse", 535), ([(Tag3 ((("raw_tacexpr", 719)), 0, (0)), 100000000, 0, -155); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("raw_taccase", 720)), 0, (0)), 100000000, 0, -157)], (0)), 100000000, 0, -156)]), 0, (("plugins/ltac2/tac2expr.mli", 115, 3213, 3213), ("plugins/ltac2/tac2expr.mli", 115, 3213, 3256), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 75)); (("CTacRec", 536), ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("raw_tacexpr", 719)), 0, (0)), 100000000, 0, -159)], (0)), 100000000, 0, -158); (Tag3 ((("raw_recexpr", 721)), 0, (0)), 100000000, 0, -160)]), 0, (("plugins/ltac2/tac2expr.mli", 116, 3257, 3257), ("plugins/ltac2/tac2expr.mli", 116, 3257, 3302), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 76)); (("CTacPrj", 537), ([(Tag3 ((("raw_tacexpr", 719)), 0, (0)), 100000000, 0, -161); (Tag3 ((("or_relid", 703)), [(Tag3 ((("ltac_projection", 700)), 0, (0)), 100000000, 0, -163)], (0)), 100000000, 0, -162)]), 0, (("plugins/ltac2/tac2expr.mli", 117, 3303, 3303), ("plugins/ltac2/tac2expr.mli", 117, 3303, 3354), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 77)); (("CTacSet", 538), ([(Tag3 ((("raw_tacexpr", 719)), 0, (0)), 100000000, 0, -164); (Tag3 ((("or_relid", 703)), [(Tag3 ((("ltac_projection", 700)), 0, (0)), 100000000, 0, -166)], (0)), 100000000, 0, -165); (Tag3 ((("raw_tacexpr", 719)), 0, (0)), 100000000, 0, -167)]), 0, (("plugins/ltac2/tac2expr.mli", 118, 3355, 3355), ("plugins/ltac2/tac2expr.mli", 118, 3355, 3420), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 78)); (("CTacExt", 539), ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2dyn"), "Arg"), "tag"), [((("a")), 100000000, 0, -170); ((0), 100000000, 0, -171)], (0)), 100000000, 0, -169); ((("a")), 100000000, 0, -170)]), ((Tag3 ((("raw_tacexpr_r", 718)), 0, (0)), 100000000, 0, -168)), (("plugins/ltac2/tac2expr.mli", 119, 3421, 3421), ("plugins/ltac2/tac2expr.mli", 119, 3421, 3478), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 79))], 0), 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 104, 2749, 2749), ("plugins/ltac2/tac2expr.mli", 119, 3421, 3478), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 61)), 1, 0); Tag1 (("raw_tacexpr", 719), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("CAst")), "t"), [(Tag3 ((("raw_tacexpr_r", 718)), 0, (0)), 100000000, 0, -124)], (0)), 100000000, 0, -123)), 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 121, 3480, 3480), ("plugins/ltac2/tac2expr.mli", 121, 3480, 3518), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 62)), 2, 0); Tag1 (("raw_taccase", 720), (0, 0, 0, 1, ((Tag2 ([(Tag3 ((("raw_patexpr", 717)), 0, (0)), 100000000, 0, -121); (Tag3 ((("raw_tacexpr", 719)), 0, (0)), 100000000, 0, -122)]), 100000000, 0, -120)), 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 123, 3520, 3520), ("plugins/ltac2/tac2expr.mli", 123, 3520, 3563), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 63)), 2, 0); Tag1 (("raw_recexpr", 721), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("or_relid", 703)), [(Tag3 ((("ltac_projection", 700)), 0, (0)), 100000000, 0, -118)], (0)), 100000000, 0, -117); (Tag3 ((("raw_tacexpr", 719)), 0, (0)), 100000000, 0, -119)]), 100000000, 0, -116)], (0)), 100000000, 0, -115)), 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 125, 3565, 3565), ("plugins/ltac2/tac2expr.mli", 125, 3565, 3628), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 64)), 2, 0); Tag1 (("ctor_indx", 722), (0, 0, Tag1 ([(("Closed", 562), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -113)]), 0, (("plugins/ltac2/tac2expr.mli", 130, 3802, 3804), ("plugins/ltac2/tac2expr.mli", 130, 3802, 3819), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 81)); (("Open", 563), ([(Tag3 ((("ltac_constructor", 699)), 0, (0)), 100000000, 0, -114)]), 0, (("plugins/ltac2/tac2expr.mli", 131, 3820, 3822), ("plugins/ltac2/tac2expr.mli", 131, 3820, 3848), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 82))], 0), 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 129, 3785, 3785), ("plugins/ltac2/tac2expr.mli", 131, 3820, 3848), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 80)), 1, 0); Tag1 (("ctor_data_for_patterns", 723), (0, 0, [[(("ctyp", 565), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("type_constant", 701)), 0, (0)), 100000000, 0, -110)], (0)), 100000000, 0, -109), (("plugins/ltac2/tac2expr.mli", 134, 3882, 3884), ("plugins/ltac2/tac2expr.mli", 134, 3882, 3912), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 84)); (("cnargs", 566), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -111), (("plugins/ltac2/tac2expr.mli", 135, 3970, 3972), ("plugins/ltac2/tac2expr.mli", 135, 3970, 3985), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 85)); (("cindx", 567), 0, (Tag3 ((("ctor_indx", 722)), 0, (0)), 100000000, 0, -112), (("plugins/ltac2/tac2expr.mli", 136, 3986, 3988), ("plugins/ltac2/tac2expr.mli", 136, 3986, 4006), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 86))]], 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 133, 3850, 3850), ("plugins/ltac2/tac2expr.mli", 137, 4007, 4008), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 83)), 1, 0); Tag1 (("glb_pat", 724), (0, 0, Tag1 ([(("GPatVar", 569), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -100)]), 0, (("plugins/ltac2/tac2expr.mli", 140, 4025, 4027), ("plugins/ltac2/tac2expr.mli", 140, 4025, 4046), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 88)); (("GPatAtm", 570), ([(Tag3 ((("atom", 715)), 0, (0)), 100000000, 0, -101)]), 0, (("plugins/ltac2/tac2expr.mli", 141, 4047, 4049), ("plugins/ltac2/tac2expr.mli", 141, 4047, 4066), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 89)); (("GPatRef", 571), ([(Tag3 ((("ctor_data_for_patterns", 723)), 0, (0)), 100000000, 0, -102); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("glb_pat", 724)), 0, (0)), 100000000, 0, -104)], (0)), 100000000, 0, -103)]), 0, (("plugins/ltac2/tac2expr.mli", 142, 4067, 4069), ("plugins/ltac2/tac2expr.mli", 142, 4067, 4119), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 90)); (("GPatOr", 572), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("glb_pat", 724)), 0, (0)), 100000000, 0, -106)], (0)), 100000000, 0, -105)]), 0, (("plugins/ltac2/tac2expr.mli", 143, 4120, 4122), ("plugins/ltac2/tac2expr.mli", 143, 4120, 4146), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 91)); (("GPatAs", 573), ([(Tag3 ((("glb_pat", 724)), 0, (0)), 100000000, 0, -107); (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -108)]), 0, (("plugins/ltac2/tac2expr.mli", 144, 4147, 4149), ("plugins/ltac2/tac2expr.mli", 144, 4147, 4175), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 92))], 0), 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 139, 4010, 4010), ("plugins/ltac2/tac2expr.mli", 144, 4147, 4175), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 87)), 1, 0); Tag3 (("PartialPat", 725), 0, (Tag1 ([Tag1 (("r", 734), (0, 0, Tag1 ([(("Var", 576), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -273)]), 0, (("plugins/ltac2/tac2expr.mli", 148, 4212, 4216), ("plugins/ltac2/tac2expr.mli", 148, 4212, 4231), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 95)); (("Atom", 577), ([(Tag3 ((("atom", 715)), 0, (0)), 100000000, 0, -274)]), 0, (("plugins/ltac2/tac2expr.mli", 149, 4232, 4236), ("plugins/ltac2/tac2expr.mli", 149, 4232, 4250), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 96)); (("Ref", 578), ([(Tag3 ((("ctor_data_for_patterns", 723)), 0, (0)), 100000000, 0, -275); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 735)), 0, (0)), 100000000, 0, -277)], (0)), 100000000, 0, -276)]), 0, (("plugins/ltac2/tac2expr.mli", 150, 4251, 4255), ("plugins/ltac2/tac2expr.mli", 150, 4251, 4295), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 97)); (("Or", 579), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 735)), 0, (0)), 100000000, 0, -279)], (0)), 100000000, 0, -278)]), 0, (("plugins/ltac2/tac2expr.mli", 151, 4296, 4300), ("plugins/ltac2/tac2expr.mli", 151, 4296, 4314), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 98)); (("As", 580), ([(Tag3 ((("t", 735)), 0, (0)), 100000000, 0, -280); (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -281)]), 0, (("plugins/ltac2/tac2expr.mli", 152, 4315, 4319), ("plugins/ltac2/tac2expr.mli", 152, 4315, 4335), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 99)); (("Extension", 581), Tag1 ([(("example", 582), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("atom", 715)), 0, (0)), 100000000, 0, -283)], (0)), 100000000, 0, -282), (("plugins/ltac2/tac2expr.mli", 153, 4336, 4357), ("plugins/ltac2/tac2expr.mli", 153, 4336, 4378), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 100))]), 0, (("plugins/ltac2/tac2expr.mli", 153, 4336, 4340), ("plugins/ltac2/tac2expr.mli", 153, 4336, 4380), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 101))], 0), 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 147, 4201, 4203), ("plugins/ltac2/tac2expr.mli", 153, 4336, 4380), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 93)), 1, 0); Tag1 (("t", 735), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("CAst")), "t"), [(Tag3 ((("r", 734)), 0, (0)), 100000000, 0, -272)], (0)), 100000000, 0, -271)), 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 154, 4381, 4383), ("plugins/ltac2/tac2expr.mli", 154, 4381, 4399), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 94)), 2, 0)]), 0, (("plugins/ltac2/tac2expr.mli", 146, 4177, 4177), ("plugins/ltac2/tac2expr.mli", 155, 4400, 4403), 0), Tag1 ("Ltac2_plugin__Tac2expr", 107)), 0, 0); Tag1 (("case_info", 726), (0, 0, 0, 1, ((Tag3 ((("or_tuple", 705)), [(Tag3 ((("type_constant", 701)), 0, (0)), 100000000, 0, -99)], (0)), 100000000, 0, -98)), 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 157, 4405, 4405), ("plugins/ltac2/tac2expr.mli", 157, 4405, 4444), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 108)), 1, 0); Tag1 (("open_match", 727), ([((("a")), 100000000, 0, -90)], 1, [[(("opn_match", 586), 0, ((("a")), 100000000, 0, -90), (("plugins/ltac2/tac2expr.mli", 160, 4469, 4471), ("plugins/ltac2/tac2expr.mli", 160, 4469, 4486), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 110)); (("opn_branch", 632), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KNmap"), "t"), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -93); (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -95)], (0)), 100000000, 0, -94); ((("a")), 100000000, 0, -90)]), 100000000, 0, -92)], (0)), 100000000, 0, -91), (("plugins/ltac2/tac2expr.mli", 161, 4487, 4489), ("plugins/ltac2/tac2expr.mli", 161, 4487, 4539), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 111)); (("opn_default", 633), 0, (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -97); ((("a")), 100000000, 0, -90)]), 100000000, 0, -96), (("plugins/ltac2/tac2expr.mli", 163, 4580, 4582), ("plugins/ltac2/tac2expr.mli", 163, 4580, 4608), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 112))]], 1, 0, [25], [0], 0, 0, (("plugins/ltac2/tac2expr.mli", 159, 4446, 4446), ("plugins/ltac2/tac2expr.mli", 164, 4609, 4610), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 109)), 1, 0); Tag1 (("glb_tacexpr", 728), (0, 0, Tag1 ([(("GTacAtm", 635), ([(Tag3 ((("atom", 715)), 0, (0)), 100000000, 0, -40)]), 0, (("plugins/ltac2/tac2expr.mli", 167, 4631, 4631), ("plugins/ltac2/tac2expr.mli", 167, 4631, 4648), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 114)); (("GTacVar", 636), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -41)]), 0, (("plugins/ltac2/tac2expr.mli", 168, 4649, 4649), ("plugins/ltac2/tac2expr.mli", 168, 4649, 4666), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 115)); (("GTacRef", 637), ([(Tag3 ((("ltac_constant", 696)), 0, (0)), 100000000, 0, -42)]), 0, (("plugins/ltac2/tac2expr.mli", 169, 4667, 4667), ("plugins/ltac2/tac2expr.mli", 169, 4667, 4693), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 116)); (("GTacFun", 638), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -44)], (0)), 100000000, 0, -43); (Tag3 ((("glb_tacexpr", 728)), 0, (0)), 100000000, 0, -45)]), 0, (("plugins/ltac2/tac2expr.mli", 170, 4694, 4694), ("plugins/ltac2/tac2expr.mli", 170, 4694, 4732), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 117)); (("GTacApp", 639), ([(Tag3 ((("glb_tacexpr", 728)), 0, (0)), 100000000, 0, -46); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("glb_tacexpr", 728)), 0, (0)), 100000000, 0, -48)], (0)), 100000000, 0, -47)]), 0, (("plugins/ltac2/tac2expr.mli", 171, 4733, 4733), ("plugins/ltac2/tac2expr.mli", 171, 4733, 4776), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 118)); (("GTacLet", 640), ([(Tag3 ((("rec_flag", 692)), 0, (0)), 100000000, 0, -49); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -52); (Tag3 ((("glb_tacexpr", 728)), 0, (0)), 100000000, 0, -53)]), 100000000, 0, -51)], (0)), 100000000, 0, -50); (Tag3 ((("glb_tacexpr", 728)), 0, (0)), 100000000, 0, -54)]), 0, (("plugins/ltac2/tac2expr.mli", 172, 4777, 4777), ("plugins/ltac2/tac2expr.mli", 172, 4777, 4842), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 119)); (("GTacCst", 641), ([(Tag3 ((("case_info", 726)), 0, (0)), 100000000, 0, -55); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -56); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("glb_tacexpr", 728)), 0, (0)), 100000000, 0, -58)], (0)), 100000000, 0, -57)]), 0, (("plugins/ltac2/tac2expr.mli", 173, 4843, 4843), ("plugins/ltac2/tac2expr.mli", 173, 4843, 4890), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 120)); (("GTacCse", 642), ([(Tag3 ((("glb_tacexpr", 728)), 0, (0)), 100000000, 0, -59); (Tag3 ((("case_info", 726)), 0, (0)), 100000000, 0, -60); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("glb_tacexpr", 728)), 0, (0)), 100000000, 0, -62)], (0)), 100000000, 0, -61); (Tag3 ((Tag3 ("array", 8)), [(Tag2 ([(Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -66)], (0)), 100000000, 0, -65); (Tag3 ((("glb_tacexpr", 728)), 0, (0)), 100000000, 0, -67)]), 100000000, 0, -64)], (0)), 100000000, 0, -63)]), 0, (("plugins/ltac2/tac2expr.mli", 174, 4891, 4891), ("plugins/ltac2/tac2expr.mli", 174, 4891, 4984), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 121)); (("GTacPrj", 643), ([(Tag3 ((("type_constant", 701)), 0, (0)), 100000000, 0, -68); (Tag3 ((("glb_tacexpr", 728)), 0, (0)), 100000000, 0, -69); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -70)]), 0, (("plugins/ltac2/tac2expr.mli", 175, 4985, 4985), ("plugins/ltac2/tac2expr.mli", 175, 4985, 5031), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 122)); (("GTacSet", 644), ([(Tag3 ((("type_constant", 701)), 0, (0)), 100000000, 0, -71); (Tag3 ((("glb_tacexpr", 728)), 0, (0)), 100000000, 0, -72); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -73); (Tag3 ((("glb_tacexpr", 728)), 0, (0)), 100000000, 0, -74)]), 0, (("plugins/ltac2/tac2expr.mli", 176, 5032, 5032), ("plugins/ltac2/tac2expr.mli", 176, 5032, 5092), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 123)); (("GTacOpn", 645), ([(Tag3 ((("ltac_constructor", 699)), 0, (0)), 100000000, 0, -75); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("glb_tacexpr", 728)), 0, (0)), 100000000, 0, -77)], (0)), 100000000, 0, -76)]), 0, (("plugins/ltac2/tac2expr.mli", 177, 5093, 5093), ("plugins/ltac2/tac2expr.mli", 177, 5093, 5141), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 124)); (("GTacWth", 646), ([(Tag3 ((("open_match", 727)), [(Tag3 ((("glb_tacexpr", 728)), 0, (0)), 100000000, 0, -79)], (0)), 100000000, 0, -78)]), 0, (("plugins/ltac2/tac2expr.mli", 178, 5142, 5142), ("plugins/ltac2/tac2expr.mli", 178, 5142, 5177), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 125)); (("GTacFullMatch", 647), ([(Tag3 ((("glb_tacexpr", 728)), 0, (0)), 100000000, 0, -80); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("glb_pat", 724)), 0, (0)), 100000000, 0, -83); (Tag3 ((("glb_tacexpr", 728)), 0, (0)), 100000000, 0, -84)]), 100000000, 0, -82)], (0)), 100000000, 0, -81)]), 0, (("plugins/ltac2/tac2expr.mli", 179, 5178, 5178), ("plugins/ltac2/tac2expr.mli", 179, 5178, 5239), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 126)); (("GTacExt", 648), ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2dyn"), "Arg"), "tag"), [((0), 100000000, 0, -87); ((("a")), 100000000, 0, -88)], (0)), 100000000, 0, -86); ((("a")), 100000000, 0, -88)]), ((Tag3 ((("glb_tacexpr", 728)), 0, (0)), 100000000, 0, -85)), (("plugins/ltac2/tac2expr.mli", 180, 5240, 5240), ("plugins/ltac2/tac2expr.mli", 180, 5240, 5295), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 127)); (("GTacPrm", 649), ([(Tag3 ((("ml_tactic_name", 704)), 0, (0)), 100000000, 0, -89)]), 0, (("plugins/ltac2/tac2expr.mli", 181, 5296, 5296), ("plugins/ltac2/tac2expr.mli", 181, 5296, 5323), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 128))], 0), 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 166, 4612, 4612), ("plugins/ltac2/tac2expr.mli", 181, 5296, 5323), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 113)), 1, 0); Tag1 (("exp_level", 729), (0, 0, Tag1 ([(("E5", 651), (0), 0, (("plugins/ltac2/tac2expr.mli", 186, 5373, 5373), ("plugins/ltac2/tac2expr.mli", 186, 5373, 5377), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 130)); (("E4", 652), (0), 0, (("plugins/ltac2/tac2expr.mli", 187, 5378, 5378), ("plugins/ltac2/tac2expr.mli", 187, 5378, 5382), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 131)); (("E3", 653), (0), 0, (("plugins/ltac2/tac2expr.mli", 188, 5383, 5383), ("plugins/ltac2/tac2expr.mli", 188, 5383, 5387), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 132)); (("E2", 654), (0), 0, (("plugins/ltac2/tac2expr.mli", 189, 5388, 5388), ("plugins/ltac2/tac2expr.mli", 189, 5388, 5392), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 133)); (("E1", 655), (0), 0, (("plugins/ltac2/tac2expr.mli", 190, 5393, 5393), ("plugins/ltac2/tac2expr.mli", 190, 5393, 5397), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 134)); (("E0", 656), (0), 0, (("plugins/ltac2/tac2expr.mli", 191, 5398, 5398), ("plugins/ltac2/tac2expr.mli", 191, 5398, 5402), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 135))], 0), 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 185, 5356, 5356), ("plugins/ltac2/tac2expr.mli", 191, 5398, 5402), 0), 0, 1, 0, Tag1 ("Ltac2_plugin__Tac2expr", 129)), 1, 0); Tag1 (("sexpr", 730), (0, 0, Tag1 ([(("SexprStr", 658), ([(Tag3 (Tag1 ((Tag2 ("CAst")), "t"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -31)], (0)), 100000000, 0, -30)]), 0, (("plugins/ltac2/tac2expr.mli", 194, 5417, 5417), ("plugins/ltac2/tac2expr.mli", 194, 5417, 5444), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 137)); (("SexprInt", 659), ([(Tag3 (Tag1 ((Tag2 ("CAst")), "t"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -33)], (0)), 100000000, 0, -32)]), 0, (("plugins/ltac2/tac2expr.mli", 195, 5445, 5445), ("plugins/ltac2/tac2expr.mli", 195, 5445, 5469), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 138)); (("SexprRec", 660), ([(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -34); (Tag3 (Tag1 ((Tag2 ("CAst")), "t"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -37)], (0)), 100000000, 0, -36)], (0)), 100000000, 0, -35); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("sexpr", 730)), 0, (0)), 100000000, 0, -39)], (0)), 100000000, 0, -38)]), 0, (("plugins/ltac2/tac2expr.mli", 196, 5470, 5470), ("plugins/ltac2/tac2expr.mli", 196, 5470, 5523), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 140))], 0), 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 193, 5404, 5404), ("plugins/ltac2/tac2expr.mli", 196, 5470, 5523), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 136)), 1, 0); Tag1 (("strexpr", 731), (0, 0, Tag1 ([(("StrVal", 681), ([(Tag3 ((("mutable_flag", 691)), 0, (0)), 100000000, 0, -11); (Tag3 ((("rec_flag", 692)), 0, (0)), 100000000, 0, -12); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Names")), "lname"), 0, (0)), 100000000, 0, -15); (Tag3 ((("raw_tacexpr", 719)), 0, (0)), 100000000, 0, -16)]), 100000000, 0, -14)], (0)), 100000000, 0, -13)]), 0, (("plugins/ltac2/tac2expr.mli", 201, 5572, 5572), ("plugins/ltac2/tac2expr.mli", 201, 5572, 5642), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 142)); (("StrTyp", 682), ([(Tag3 ((("rec_flag", 692)), 0, (0)), 100000000, 0, -17); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Libnames")), "qualid"), 0, (0)), 100000000, 0, -20); (Tag3 ((("redef_flag", 693)), 0, (0)), 100000000, 0, -21); (Tag3 ((("raw_quant_typedef", 713)), 0, (0)), 100000000, 0, -22)]), 100000000, 0, -19)], (0)), 100000000, 0, -18)]), 0, (("plugins/ltac2/tac2expr.mli", 203, 5668, 5668), ("plugins/ltac2/tac2expr.mli", 203, 5668, 5737), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 143)); (("StrPrm", 683), ([(Tag3 (Tag1 ((Tag2 ("Names")), "lident"), 0, (0)), 100000000, 0, -23); (Tag3 ((("raw_typexpr", 707)), 0, (0)), 100000000, 0, -24); (Tag3 ((("ml_tactic_name", 704)), 0, (0)), 100000000, 0, -25)]), 0, (("plugins/ltac2/tac2expr.mli", 205, 5763, 5763), ("plugins/ltac2/tac2expr.mli", 205, 5763, 5818), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 144)); (("StrMut", 684), ([(Tag3 (Tag1 ((Tag2 ("Libnames")), "qualid"), 0, (0)), 100000000, 0, -26); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Names")), "lident"), 0, (0)), 100000000, 0, -28)], (0)), 100000000, 0, -27); (Tag3 ((("raw_tacexpr", 719)), 0, (0)), 100000000, 0, -29)]), 0, (("plugins/ltac2/tac2expr.mli", 207, 5848, 5848), ("plugins/ltac2/tac2expr.mli", 207, 5848, 5902), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 145))], 0), 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 200, 5557, 5557), ("plugins/ltac2/tac2expr.mli", 207, 5848, 5902), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 141)), 1, 0); Tag1 (("frame", 732), (0, 0, Tag1 ([(("FrLtac", 686), ([(Tag3 ((("ltac_constant", 696)), 0, (0)), 100000000, 0, -4)]), 0, (("plugins/ltac2/tac2expr.mli", 211, 5958, 5958), ("plugins/ltac2/tac2expr.mli", 211, 5958, 5983), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 147)); (("FrAnon", 687), ([(Tag3 ((("glb_tacexpr", 728)), 0, (0)), 100000000, 0, -5)]), 0, (("plugins/ltac2/tac2expr.mli", 212, 5984, 5984), ("plugins/ltac2/tac2expr.mli", 212, 5984, 6007), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 148)); (("FrPrim", 688), ([(Tag3 ((("ml_tactic_name", 704)), 0, (0)), 100000000, 0, -6)]), 0, (("plugins/ltac2/tac2expr.mli", 213, 6008, 6008), ("plugins/ltac2/tac2expr.mli", 213, 6008, 6034), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 149)); (("FrExtn", 689), ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2dyn"), "Arg"), "tag"), [((("a")), 100000000, 0, -9); ((("b")), 100000000, 0, -10)], (0)), 100000000, 0, -8); ((("b")), 100000000, 0, -10)]), ((Tag3 ((("frame", 732)), 0, (0)), 100000000, 0, -7)), (("plugins/ltac2/tac2expr.mli", 214, 6035, 6035), ("plugins/ltac2/tac2expr.mli", 214, 6035, 6084), 0), 0, Tag1 ("Ltac2_plugin__Tac2expr", 150))], 0), 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 210, 5945, 5945), ("plugins/ltac2/tac2expr.mli", 214, 6035, 6084), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 146)), 1, 0); Tag1 (("backtrace", 733), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("frame", 732)), 0, (0)), 100000000, 0, -3)], (0)), 100000000, 0, -2)), 0, 0, 0, 0, (("plugins/ltac2/tac2expr.mli", 216, 6086, 6086), ("plugins/ltac2/tac2expr.mli", 216, 6086, 6113), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2expr", 151)), 1, 0)], "Ltac2_plugin__Tac2expr", [("Ltac2_plugin__Tac2expr", ("T\154\246\018\232\196\182\229\012\167v}\1367|\157")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Ltac2_plugin__Tac2dyn", ("\003M~\173\240\228^\184[\135\224\206\1576\163 ")); ("Ltac2_plugin", ("\165R\230\016\178\131\154\196w\014@m\191\218\194\020")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150"))], [1; (0)])
type backtrace = frame list
