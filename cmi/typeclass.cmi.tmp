type 'a class_info = {
  cls_id : Ident.t;
  cls_id_loc : string Asttypes.loc;
  cls_decl : Types.class_declaration;
  cls_ty_id : Ident.t;
  cls_ty_decl : Types.class_type_declaration;
  cls_obj_id : Ident.t;
  cls_obj_abbr : Types.type_declaration;
  cls_abbr : Types.type_declaration;
  cls_arity : int;
  cls_pub_methods : string list;
  cls_info : 'a;
}
type class_type_info = {
  clsty_ty_id : Ident.t;
  clsty_id_loc : string Asttypes.loc;
  clsty_ty_decl : Types.class_type_declaration;
  clsty_obj_id : Ident.t;
  clsty_obj_abbr : Types.type_declaration;
  clsty_abbr : Types.type_declaration;
  clsty_info : Typedtree.class_type_declaration;
}
val class_declarations :
  Env.t ->
  Parsetree.class_declaration list ->
  Typedtree.class_declaration class_info list * Env.t
val class_descriptions :
  Env.t ->
  Parsetree.class_description list ->
  Typedtree.class_description class_info list * Env.t
val class_type_declarations :
  Env.t -> Parsetree.class_description list -> class_type_info list * Env.t
val approx_class_declarations :
  Env.t -> Parsetree.class_description list -> class_type_info list * Env.t
type kind = Object | Class | Class_type
type error =
    Unconsistent_constraint of Errortrace.unification_error
  | Field_type_mismatch of string * string * Errortrace.unification_error
  | Unexpected_field of Types.type_expr * string
  | Structure_expected of Types.class_type
  | Cannot_apply of Types.class_type
  | Apply_wrong_label of Asttypes.arg_label
  | Pattern_type_clash of Types.type_expr
  | Repeated_parameter
  | Unbound_class_2 of Longident.t
  | Unbound_class_type_2 of Longident.t
  | Abbrev_type_clash of Types.type_expr * Types.type_expr * Types.type_expr
  | Constructor_type_mismatch of string * Errortrace.unification_error
  | Virtual_class of kind * string list * string list
  | Undeclared_methods of kind * string list
  | Parameter_arity_mismatch of Longident.t * int * int
  | Parameter_mismatch of Errortrace.unification_error
  | Bad_parameters of Ident.t * Types.type_expr list * Types.type_expr list
  | Bad_class_type_parameters of Ident.t * Types.type_expr list *
      Types.type_expr list
  | Class_match_failure of Ctype.class_match_failure list
  | Unbound_val of string
  | Unbound_type_var of (Format.formatter -> unit) *
      Ctype.closed_class_failure
  | Non_generalizable_class of { id : Ident.t;
      clty : Types.class_declaration; nongen_vars : Types.type_expr list;
    }
  | Cannot_coerce_self of Types.type_expr
  | Non_collapsable_conjunction of Ident.t * Types.class_declaration *
      Errortrace.unification_error
  | Self_clash of Errortrace.unification_error
  | Mutability_mismatch of string * Asttypes.mutable_flag
  | No_overriding of string * string
  | Duplicate of string * string
  | Closing_self_type of Types.class_signature
exception Error of Location.t * Env.t * error
exception Error_forward of Location.error
val report_error : Env.t -> Format.formatter -> error -> unit
val type_open_descr :
  (?used_slot:bool ref ->
   Env.t -> Parsetree.open_description -> Typedtree.open_description * Env.t)
  ref("DEBUG:rule", [Tag1 (("class_info", 1391), ([((("a")), 100000000, 0, -145)], 1, [[(("cls_id", 584), 0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -133), (("typing/typeclass.mli", 21, 1140, 1142), ("typing/typeclass.mli", 21, 1140, 1159), 0), 0, Tag1 ("Typeclass", 2)); (("cls_id_loc", 585), 0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -135)], (0)), 100000000, 0, -134), (("typing/typeclass.mli", 22, 1160, 1162), ("typing/typeclass.mli", 22, 1160, 1186), 0), 0, Tag1 ("Typeclass", 3)); (("cls_decl", 586), 0, (Tag3 (Tag1 ((Tag2 ("Types")), "class_declaration"), 0, (0)), 100000000, 0, -136), (("typing/typeclass.mli", 23, 1187, 1189), ("typing/typeclass.mli", 23, 1187, 1218), 0), 0, Tag1 ("Typeclass", 4)); (("cls_ty_id", 587), 0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -137), (("typing/typeclass.mli", 24, 1219, 1221), ("typing/typeclass.mli", 24, 1219, 1241), 0), 0, Tag1 ("Typeclass", 5)); (("cls_ty_decl", 588), 0, (Tag3 (Tag1 ((Tag2 ("Types")), "class_type_declaration"), 0, (0)), 100000000, 0, -138), (("typing/typeclass.mli", 25, 1242, 1244), ("typing/typeclass.mli", 25, 1242, 1281), 0), 0, Tag1 ("Typeclass", 6)); (("cls_obj_id", 589), 0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -139), (("typing/typeclass.mli", 26, 1282, 1284), ("typing/typeclass.mli", 26, 1282, 1305), 0), 0, Tag1 ("Typeclass", 7)); (("cls_obj_abbr", 590), 0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_declaration"), 0, (0)), 100000000, 0, -140), (("typing/typeclass.mli", 27, 1306, 1308), ("typing/typeclass.mli", 27, 1306, 1340), 0), 0, Tag1 ("Typeclass", 8)); (("cls_abbr", 591), 0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_declaration"), 0, (0)), 100000000, 0, -141), (("typing/typeclass.mli", 28, 1341, 1343), ("typing/typeclass.mli", 28, 1341, 1371), 0), 0, Tag1 ("Typeclass", 9)); (("cls_arity", 592), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -142), (("typing/typeclass.mli", 29, 1372, 1374), ("typing/typeclass.mli", 29, 1372, 1390), 0), 0, Tag1 ("Typeclass", 10)); (("cls_pub_methods", 593), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -144)], (0)), 100000000, 0, -143), (("typing/typeclass.mli", 30, 1391, 1393), ("typing/typeclass.mli", 30, 1391, 1423), 0), 0, Tag1 ("Typeclass", 11)); (("cls_info", 594), 0, ((("a")), 100000000, 0, -145), (("typing/typeclass.mli", 31, 1424, 1426), ("typing/typeclass.mli", 31, 1424, 1440), 0), 0, Tag1 ("Typeclass", 12))]], 1, 0, [25], [0], 0, 0, (("typing/typeclass.mli", 20, 1117, 1117), ("typing/typeclass.mli", 32, 1441, 1442), 0), 0, 0, 0, Tag1 ("Typeclass", 1)), 1, 0); Tag1 (("class_type_info", 1392), (0, 0, [[(("clsty_ty_id", 662), 0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -125), (("typing/typeclass.mli", 35, 1469, 1471), ("typing/typeclass.mli", 35, 1469, 1493), 0), 0, Tag1 ("Typeclass", 17)); (("clsty_id_loc", 663), 0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -127)], (0)), 100000000, 0, -126), (("typing/typeclass.mli", 36, 1494, 1496), ("typing/typeclass.mli", 36, 1494, 1522), 0), 0, Tag1 ("Typeclass", 18)); (("clsty_ty_decl", 664), 0, (Tag3 (Tag1 ((Tag2 ("Types")), "class_type_declaration"), 0, (0)), 100000000, 0, -128), (("typing/typeclass.mli", 37, 1523, 1525), ("typing/typeclass.mli", 37, 1523, 1564), 0), 0, Tag1 ("Typeclass", 19)); (("clsty_obj_id", 665), 0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -129), (("typing/typeclass.mli", 38, 1565, 1567), ("typing/typeclass.mli", 38, 1565, 1590), 0), 0, Tag1 ("Typeclass", 20)); (("clsty_obj_abbr", 666), 0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_declaration"), 0, (0)), 100000000, 0, -130), (("typing/typeclass.mli", 39, 1591, 1593), ("typing/typeclass.mli", 39, 1591, 1627), 0), 0, Tag1 ("Typeclass", 21)); (("clsty_abbr", 667), 0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_declaration"), 0, (0)), 100000000, 0, -131), (("typing/typeclass.mli", 40, 1628, 1630), ("typing/typeclass.mli", 40, 1628, 1660), 0), 0, Tag1 ("Typeclass", 22)); (("clsty_info", 767), 0, (Tag3 (Tag1 ((Tag2 ("Typedtree")), "class_type_declaration"), 0, (0)), 100000000, 0, -132), (("typing/typeclass.mli", 41, 1661, 1663), ("typing/typeclass.mli", 41, 1661, 1709), 0), 0, Tag1 ("Typeclass", 23))]], 1, 0, 0, 0, 0, 0, (("typing/typeclass.mli", 34, 1444, 1444), ("typing/typeclass.mli", 42, 1710, 1711), 0), 0, 0, 0, Tag1 ("Typeclass", 13)), 1, 0); (("class_declarations", 1393), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -124), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_declaration"), 0, (0)), 100000000, 0, -123)], (0)), 100000000, 0, -122), (Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_info", 1391)), [(Tag3 (Tag1 ((Tag2 ("Typedtree")), "class_declaration"), 0, (0)), 100000000, 0, -120)], (0)), 100000000, 0, -119)], (0)), 100000000, 0, -118); (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -121)]), 100000000, 0, -117), 0), 100000000, 0, -116), 0), 100000000, 0, -115), 0, (("typing/typeclass.mli", 44, 1713, 1713), ("typing/typeclass.mli", 46, 1784, 1837), 0), 0, Tag1 ("Typeclass", 26)), 0); (("class_descriptions", 1394), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -114), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_description"), 0, (0)), 100000000, 0, -113)], (0)), 100000000, 0, -112), (Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_info", 1391)), [(Tag3 (Tag1 ((Tag2 ("Typedtree")), "class_description"), 0, (0)), 100000000, 0, -110)], (0)), 100000000, 0, -109)], (0)), 100000000, 0, -108); (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -111)]), 100000000, 0, -107), 0), 100000000, 0, -106), 0), 100000000, 0, -105), 0, (("typing/typeclass.mli", 53, 1922, 1922), ("typing/typeclass.mli", 55, 1993, 2046), 0), 0, Tag1 ("Typeclass", 27)), 0); (("class_type_declarations", 1395), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -104), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_description"), 0, (0)), 100000000, 0, -103)], (0)), 100000000, 0, -102), (Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_info", 1392)), 0, (0)), 100000000, 0, -100)], (0)), 100000000, 0, -99); (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -101)]), 100000000, 0, -98), 0), 100000000, 0, -97), 0), 100000000, 0, -96), 0, (("typing/typeclass.mli", 62, 2112, 2112), ("typing/typeclass.mli", 63, 2141, 2216), 0), 0, Tag1 ("Typeclass", 28)), 0); (("approx_class_declarations", 1396), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -95), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_description"), 0, (0)), 100000000, 0, -94)], (0)), 100000000, 0, -93), (Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_info", 1392)), 0, (0)), 100000000, 0, -91)], (0)), 100000000, 0, -90); (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -92)]), 100000000, 0, -89), 0), 100000000, 0, -88), 0), 100000000, 0, -87), 0, (("typing/typeclass.mli", 70, 2311, 2311), ("typing/typeclass.mli", 71, 2342, 2417), 0), 0, Tag1 ("Typeclass", 29)), 0); Tag1 (("kind", 1397), (0, 0, Tag1 ([(("Object", 1014), (0), 0, (("typing/typeclass.mli", 89, 2878, 2880), ("typing/typeclass.mli", 89, 2878, 2888), 0), 0, Tag1 ("Typeclass", 31)); (("Class", 1015), (0), 0, (("typing/typeclass.mli", 90, 2889, 2891), ("typing/typeclass.mli", 90, 2889, 2898), 0), 0, Tag1 ("Typeclass", 32)); (("Class_type", 1016), (0), 0, (("typing/typeclass.mli", 91, 2899, 2901), ("typing/typeclass.mli", 91, 2899, 2913), 0), 0, Tag1 ("Typeclass", 33))], 0), 1, 0, 0, 0, 0, 0, (("typing/typeclass.mli", 88, 2866, 2866), ("typing/typeclass.mli", 91, 2899, 2913), 0), 0, 1, 0, Tag1 ("Typeclass", 30)), 1, 0); Tag1 (("error", 1398), (0, 0, Tag1 ([(("Unconsistent_constraint", 1018), ([(Tag3 (Tag1 ((Tag2 ("Errortrace")), "unification_error"), 0, (0)), 100000000, 0, -25)]), 0, (("typing/typeclass.mli", 94, 2928, 2930), ("typing/typeclass.mli", 94, 2928, 2987), 0), 0, Tag1 ("Typeclass", 36)); (("Field_type_mismatch", 1051), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -26); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -27); (Tag3 (Tag1 ((Tag2 ("Errortrace")), "unification_error"), 0, (0)), 100000000, 0, -28)]), 0, (("typing/typeclass.mli", 95, 2988, 2990), ("typing/typeclass.mli", 95, 2988, 3061), 0), 0, Tag1 ("Typeclass", 37)); (("Unexpected_field", 1052), ([(Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -29); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -30)]), 0, (("typing/typeclass.mli", 96, 3062, 3064), ("typing/typeclass.mli", 96, 3062, 3104), 0), 0, Tag1 ("Typeclass", 38)); (("Structure_expected", 1053), ([(Tag3 (Tag1 ((Tag2 ("Types")), "class_type"), 0, (0)), 100000000, 0, -31)]), 0, (("typing/typeclass.mli", 97, 3105, 3107), ("typing/typeclass.mli", 97, 3105, 3141), 0), 0, Tag1 ("Typeclass", 39)); (("Cannot_apply", 1054), ([(Tag3 (Tag1 ((Tag2 ("Types")), "class_type"), 0, (0)), 100000000, 0, -32)]), 0, (("typing/typeclass.mli", 98, 3142, 3144), ("typing/typeclass.mli", 98, 3142, 3172), 0), 0, Tag1 ("Typeclass", 40)); (("Apply_wrong_label", 1055), ([(Tag3 (Tag1 ((Tag2 ("Asttypes")), "arg_label"), 0, (0)), 100000000, 0, -33)]), 0, (("typing/typeclass.mli", 99, 3173, 3175), ("typing/typeclass.mli", 99, 3173, 3207), 0), 0, Tag1 ("Typeclass", 41)); (("Pattern_type_clash", 1056), ([(Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -34)]), 0, (("typing/typeclass.mli", 100, 3208, 3210), ("typing/typeclass.mli", 100, 3208, 3243), 0), 0, Tag1 ("Typeclass", 42)); (("Repeated_parameter", 1057), (0), 0, (("typing/typeclass.mli", 101, 3244, 3246), ("typing/typeclass.mli", 101, 3244, 3266), 0), 0, Tag1 ("Typeclass", 43)); (("Unbound_class_2", 1058), ([(Tag3 (Tag1 ((Tag2 ("Longident")), "t"), 0, (0)), 100000000, 0, -35)]), 0, (("typing/typeclass.mli", 102, 3267, 3269), ("typing/typeclass.mli", 102, 3267, 3301), 0), 0, Tag1 ("Typeclass", 44)); (("Unbound_class_type_2", 1064), ([(Tag3 (Tag1 ((Tag2 ("Longident")), "t"), 0, (0)), 100000000, 0, -36)]), 0, (("typing/typeclass.mli", 103, 3302, 3304), ("typing/typeclass.mli", 103, 3302, 3341), 0), 0, Tag1 ("Typeclass", 45)); (("Abbrev_type_clash", 1065), ([(Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -37); (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -38); (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -39)]), 0, (("typing/typeclass.mli", 104, 3342, 3344), ("typing/typeclass.mli", 104, 3342, 3400), 0), 0, Tag1 ("Typeclass", 46)); (("Constructor_type_mismatch", 1066), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -40); (Tag3 (Tag1 ((Tag2 ("Errortrace")), "unification_error"), 0, (0)), 100000000, 0, -41)]), 0, (("typing/typeclass.mli", 105, 3401, 3403), ("typing/typeclass.mli", 105, 3401, 3471), 0), 0, Tag1 ("Typeclass", 47)); (("Virtual_class", 1067), ([(Tag3 ((("kind", 1397)), 0, (0)), 100000000, 0, -42); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -44)], (0)), 100000000, 0, -43); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -46)], (0)), 100000000, 0, -45)]), 0, (("typing/typeclass.mli", 106, 3472, 3474), ("typing/typeclass.mli", 106, 3472, 3525), 0), 0, Tag1 ("Typeclass", 48)); (("Undeclared_methods", 1068), ([(Tag3 ((("kind", 1397)), 0, (0)), 100000000, 0, -47); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -49)], (0)), 100000000, 0, -48)]), 0, (("typing/typeclass.mli", 107, 3526, 3528), ("typing/typeclass.mli", 107, 3526, 3570), 0), 0, Tag1 ("Typeclass", 49)); (("Parameter_arity_mismatch", 1069), ([(Tag3 (Tag1 ((Tag2 ("Longident")), "t"), 0, (0)), 100000000, 0, -50); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -51); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -52)]), 0, (("typing/typeclass.mli", 108, 3571, 3573), ("typing/typeclass.mli", 108, 3571, 3626), 0), 0, Tag1 ("Typeclass", 50)); (("Parameter_mismatch", 1070), ([(Tag3 (Tag1 ((Tag2 ("Errortrace")), "unification_error"), 0, (0)), 100000000, 0, -53)]), 0, (("typing/typeclass.mli", 109, 3627, 3629), ("typing/typeclass.mli", 109, 3627, 3681), 0), 0, Tag1 ("Typeclass", 51)); (("Bad_parameters", 1071), ([(Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -54); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -56)], (0)), 100000000, 0, -55); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -58)], (0)), 100000000, 0, -57)]), 0, (("typing/typeclass.mli", 110, 3682, 3684), ("typing/typeclass.mli", 110, 3682, 3745), 0), 0, Tag1 ("Typeclass", 52)); (("Bad_class_type_parameters", 1072), ([(Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -59); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -61)], (0)), 100000000, 0, -60); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -63)], (0)), 100000000, 0, -62)]), 0, (("typing/typeclass.mli", 111, 3746, 3748), ("typing/typeclass.mli", 111, 3746, 3820), 0), 0, Tag1 ("Typeclass", 53)); (("Class_match_failure", 1073), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Ctype")), "class_match_failure"), 0, (0)), 100000000, 0, -65)], (0)), 100000000, 0, -64)]), 0, (("typing/typeclass.mli", 112, 3821, 3823), ("typing/typeclass.mli", 112, 3821, 3878), 0), 0, Tag1 ("Typeclass", 56)); (("Unbound_val", 1218), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -66)]), 0, (("typing/typeclass.mli", 113, 3879, 3881), ("typing/typeclass.mli", 113, 3879, 3904), 0), 0, Tag1 ("Typeclass", 57)); (("Unbound_type_var", 1219), ([(Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -69), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -68), 0), 100000000, 0, -67); (Tag3 (Tag1 ((Tag2 ("Ctype")), "closed_class_failure"), 0, (0)), 100000000, 0, -70)]), 0, (("typing/typeclass.mli", 114, 3905, 3907), ("typing/typeclass.mli", 114, 3905, 3977), 0), 0, Tag1 ("Typeclass", 58)); (("Non_generalizable_class", 1220), Tag1 ([(("id", 1221), 0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -71), (("typing/typeclass.mli", 116, 4009, 4017), ("typing/typeclass.mli", 117, 4030, 4037), 0), 0, Tag1 ("Typeclass", 59)); (("clty", 1222), 0, (Tag3 (Tag1 ((Tag2 ("Types")), "class_declaration"), 0, (0)), 100000000, 0, -72), (("typing/typeclass.mli", 117, 4030, 4038), ("typing/typeclass.mli", 118, 4069, 4076), 0), 0, Tag1 ("Typeclass", 60)); (("nongen_vars", 1223), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -74)], (0)), 100000000, 0, -73), (("typing/typeclass.mli", 118, 4069, 4077), ("typing/typeclass.mli", 118, 4069, 4105), 0), 0, Tag1 ("Typeclass", 61))]), 0, (("typing/typeclass.mli", 115, 3978, 3980), ("typing/typeclass.mli", 119, 4106, 4113), 0), 0, Tag1 ("Typeclass", 62)); (("Cannot_coerce_self", 1224), ([(Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -75)]), 0, (("typing/typeclass.mli", 120, 4114, 4116), ("typing/typeclass.mli", 120, 4114, 4149), 0), 0, Tag1 ("Typeclass", 63)); (("Non_collapsable_conjunction", 1225), ([(Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -76); (Tag3 (Tag1 ((Tag2 ("Types")), "class_declaration"), 0, (0)), 100000000, 0, -77); (Tag3 (Tag1 ((Tag2 ("Errortrace")), "unification_error"), 0, (0)), 100000000, 0, -78)]), 0, (("typing/typeclass.mli", 121, 4150, 4152), ("typing/typeclass.mli", 122, 4185, 4255), 0), 0, Tag1 ("Typeclass", 64)); (("Self_clash", 1226), ([(Tag3 (Tag1 ((Tag2 ("Errortrace")), "unification_error"), 0, (0)), 100000000, 0, -79)]), 0, (("typing/typeclass.mli", 123, 4256, 4258), ("typing/typeclass.mli", 123, 4256, 4302), 0), 0, Tag1 ("Typeclass", 65)); (("Mutability_mismatch", 1227), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -80); (Tag3 (Tag1 ((Tag2 ("Asttypes")), "mutable_flag"), 0, (0)), 100000000, 0, -81)]), 0, (("typing/typeclass.mli", 124, 4303, 4305), ("typing/typeclass.mli", 124, 4303, 4351), 0), 0, Tag1 ("Typeclass", 66)); (("No_overriding", 1228), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -82); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -83)]), 0, (("typing/typeclass.mli", 125, 4352, 4354), ("typing/typeclass.mli", 125, 4352, 4388), 0), 0, Tag1 ("Typeclass", 67)); (("Duplicate", 1229), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -84); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -85)]), 0, (("typing/typeclass.mli", 126, 4389, 4391), ("typing/typeclass.mli", 126, 4389, 4421), 0), 0, Tag1 ("Typeclass", 68)); (("Closing_self_type", 1230), ([(Tag3 (Tag1 ((Tag2 ("Types")), "class_signature"), 0, (0)), 100000000, 0, -86)]), 0, (("typing/typeclass.mli", 127, 4422, 4424), ("typing/typeclass.mli", 127, 4422, 4462), 0), 0, Tag1 ("Typeclass", 69))], 0), 1, 0, 0, 0, 0, 0, (("typing/typeclass.mli", 93, 2915, 2915), ("typing/typeclass.mli", 127, 4422, 4462), 0), 0, 0, 0, Tag1 ("Typeclass", 34)), 1, 0); Tag2 (("Error", 1399), ((Tag3 ("exn", 7)), 0, ([(Tag3 (Tag1 ((Tag2 ("Location")), "t"), 0, (0)), 100000000, 0, -22); (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -23); (Tag3 ((("error", 1398)), 0, (0)), 100000000, 0, -24)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Typeclass", 75)), 2, 0); Tag2 (("Error_forward", 1400), ((Tag3 ("exn", 7)), 0, ([(Tag3 (Tag1 ((Tag2 ("Location")), "error"), 0, (0)), 100000000, 0, -21)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Typeclass", 76)), 2, 0); (("report_error", 1401), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -20), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -19), (Tag1 (0, (Tag3 ((("error", 1398)), 0, (0)), 100000000, 0, -18), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("typing/typeclass.mli", 132, 4553, 4553), ("typing/typeclass.mli", 132, 4553, 4607), 0), 0, Tag1 ("Typeclass", 77)), 0); (("type_open_descr", 1402), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag1 (Tag1 ("used_slot"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -13)], (0)), 100000000, 0, -12)], (0)), 100000000, 0, -11), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "open_description"), 0, (0)), 100000000, 0, -9), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Typedtree")), "open_description"), 0, (0)), 100000000, 0, -7); (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -8)]), 100000000, 0, -6), 0), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3)], (0)), 100000000, 0, -2), 0, (("typing/typeclass.mli", 135, 4665, 4665), ("typing/typeclass.mli", 138, 4791, 4798), 0), 0, Tag1 ("Typeclass", 78)), 0)], "Typeclass", [("Typeclass", ("x\139r=\237\194\141V&\011_2Tq\224\012")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Typedtree", ("c5z\186\175w\146\254\018V\184\031\0038\004\227")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Subst", ("\021\031\148\223\127\186\189\135\027}\145r\216\143\177\156")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Load_path", ("\012@\228l\230\164S\172h\1726X\020\252o}")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("Errortrace", ("\238\196yV6<x\\\13126\144\141\000~\145")); ("Env", ("\021\n\181\142x\b\169j\227\"\017\248*\178\245\223")); ("Ctype", ("\027\133EB\030\017\186iN]k}\251\199\182\161")); ("Cmi_format", ("6\177\bU\139\"\023\152=\249\135\174\b\011Cg")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc")); ("Btype", ("z\012z\142\133\002\232\237\203U\142l\165\022\2209")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216"))], [(0)])

