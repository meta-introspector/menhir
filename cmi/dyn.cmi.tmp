module type ValueS = sig type 'a t end
module type MapS =
  sig
    type t
    type 'a key
    type 'a value
    val empty : t
    val add : 'a key -> 'a value -> t -> t
    val remove : 'a key -> t -> t
    val find : 'a key -> t -> 'a value
    val mem : 'a key -> t -> bool
    val modify : 'a key -> ('a value -> 'a value) -> t -> t
    type map = { map : 'a. 'a key -> 'a value -> 'a value; }
    val map : map -> t -> t
    type any = Any : 'a key * 'a value -> any
    val iter : (any -> unit) -> t -> unit
    val fold : (any -> 'r -> 'r) -> t -> 'r -> 'r
    type filter = { filter : 'a. 'a key -> 'a value -> bool; }
    val filter : filter -> t -> t
  end
module type S =
  sig
    type 'a tag
    type t = Dyn : 'a tag * 'a -> t
    val create : string -> 'a tag
    val anonymous : int -> 'a tag
    val eq : 'a tag -> 'b tag -> ('a, 'b) CSig.eq option
    val repr : 'a tag -> string
    val dump : unit -> (int * string) list
    type any = Any : 'a tag -> any
    val name : string -> any option
    module Map :
      functor (Value : ValueS) ->
        sig
          type t
          type 'a key = 'a tag
          type 'a value = 'a Value.t
          val empty : t
          val add : 'a key -> 'a value -> t -> t
          val remove : 'a key -> t -> t
          val find : 'a key -> t -> 'a value
          val mem : 'a key -> t -> bool
          val modify : 'a key -> ('a value -> 'a value) -> t -> t
          type map = { map : 'a. 'a key -> 'a value -> 'a value; }
          val map : map -> t -> t
          type any = Any : 'a key * 'a value -> any
          val iter : (any -> unit) -> t -> unit
          val fold : (any -> 'r -> 'r) -> t -> 'r -> 'r
          type filter = { filter : 'a. 'a key -> 'a value -> bool; }
          val filter : filter -> t -> t
        end
    module HMap :
      functor (V1 : ValueS) (V2 : ValueS) ->
        sig
          type map = { map : 'a. 'a tag -> 'a V1.t -> 'a V2.t; }
          val map : map -> Map(V1).t -> Map(V2).t
          type filter = { filter : 'a. 'a tag -> 'a V1.t -> bool; }
          val filter : filter -> Map(V1).t -> Map(V1).t
        end
    module Easy :
      sig
        val make_dyn_tag : string -> ('a -> t) * (t -> 'a) * 'a tag
        val make_dyn : string -> ('a -> t) * (t -> 'a)
        val inj : 'a -> 'a tag -> t
        val prj : t -> 'a tag -> 'a option
      end
  end("DEBUG:rule", [Tag4 (("ValueS", 454), ((Tag1 ([Tag1 (("t", 458), ([((("a")), 100000000, 0, -2)], 1, 0, 1, 0, [7], [2], 0, 0, (("clib/dyn.mli", 15, 734, 736), ("clib/dyn.mli", 15, 734, 745), 0), 0, 0, 0, Tag1 ("Dyn", 0)), 1, 0)])), 0, (("clib/dyn.mli", 13, 709, 709), ("clib/dyn.mli", 16, 746, 749), 0), Tag1 ("Dyn", 1)), 0); Tag4 (("MapS", 455), ((Tag1 ([Tag1 (("t", 459), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("clib/dyn.mli", 20, 774, 776), ("clib/dyn.mli", 20, 774, 782), 0), 0, 0, 0, Tag1 ("Dyn", 2)), 1, 0); Tag1 (("key", 460), ([((("a")), 100000000, 0, -84)], 1, 0, 1, 0, [7], [2], 0, 0, (("clib/dyn.mli", 21, 783, 785), ("clib/dyn.mli", 21, 783, 796), 0), 0, 0, 0, Tag1 ("Dyn", 3)), 1, 0); Tag1 (("value", 461), ([((("a")), 100000000, 0, -83)], 1, 0, 1, 0, [7], [2], 0, 0, (("clib/dyn.mli", 22, 797, 799), ("clib/dyn.mli", 22, 797, 812), 0), 0, 0, 0, Tag1 ("Dyn", 4)), 1, 0); (("empty", 462), ((Tag3 ((("t", 459)), 0, (0)), 100000000, 0, -82), 0, (("clib/dyn.mli", 23, 813, 815), ("clib/dyn.mli", 23, 813, 828), 0), 0, Tag1 ("Dyn", 5)), 0); (("add", 463), ((Tag1 (0, (Tag3 ((("key", 460)), [((("a")), 100000000, 0, -80)], (0)), 100000000, 0, -81), (Tag1 (0, (Tag3 ((("value", 461)), [((("a")), 100000000, 0, -80)], (0)), 100000000, 0, -79), (Tag1 (0, (Tag3 ((("t", 459)), 0, (0)), 100000000, 0, -78), (Tag3 ((("t", 459)), 0, (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0), 100000000, 0, -75), 0), 100000000, 0, -74), 0, (("clib/dyn.mli", 24, 829, 831), ("clib/dyn.mli", 24, 829, 869), 0), 0, Tag1 ("Dyn", 6)), 0); (("remove", 464), ((Tag1 (0, (Tag3 ((("key", 460)), [((("a")), 100000000, 0, -73)], (0)), 100000000, 0, -72), (Tag1 (0, (Tag3 ((("t", 459)), 0, (0)), 100000000, 0, -71), (Tag3 ((("t", 459)), 0, (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("clib/dyn.mli", 25, 870, 872), ("clib/dyn.mli", 25, 870, 901), 0), 0, Tag1 ("Dyn", 7)), 0); (("find", 465), ((Tag1 (0, (Tag3 ((("key", 460)), [((("a")), 100000000, 0, -65)], (0)), 100000000, 0, -67), (Tag1 (0, (Tag3 ((("t", 459)), 0, (0)), 100000000, 0, -66), (Tag3 ((("value", 461)), [((("a")), 100000000, 0, -65)], (0)), 100000000, 0, -64), 0), 100000000, 0, -63), 0), 100000000, 0, -62), 0, (("clib/dyn.mli", 26, 902, 904), ("clib/dyn.mli", 26, 902, 938), 0), 0, Tag1 ("Dyn", 8)), 0); (("mem", 466), ((Tag1 (0, (Tag3 ((("key", 460)), [((("a")), 100000000, 0, -61)], (0)), 100000000, 0, -60), (Tag1 (0, (Tag3 ((("t", 459)), 0, (0)), 100000000, 0, -59), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("clib/dyn.mli", 27, 939, 941), ("clib/dyn.mli", 27, 939, 970), 0), 0, Tag1 ("Dyn", 9)), 0); (("modify", 467), ((Tag1 (0, (Tag3 ((("key", 460)), [((("a")), 100000000, 0, -53)], (0)), 100000000, 0, -55), (Tag1 (0, (Tag1 (0, (Tag3 ((("value", 461)), [((("a")), 100000000, 0, -53)], (0)), 100000000, 0, -54), (Tag3 ((("value", 461)), [((("a")), 100000000, 0, -53)], (0)), 100000000, 0, -52), 0), 100000000, 0, -51), (Tag1 (0, (Tag3 ((("t", 459)), 0, (0)), 100000000, 0, -50), (Tag3 ((("t", 459)), 0, (0)), 100000000, 0, -49), 0), 100000000, 0, -48), 0), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("clib/dyn.mli", 28, 971, 973), ("clib/dyn.mli", 28, 971, 1028), 0), 0, Tag1 ("Dyn", 10)), 0); Tag1 (("map", 468), (0, 0, [[(("map", 281), 0, (Tag10 ((Tag1 (0, (Tag3 ((("key", 460)), [(Tag9 (("a")), 100000000, 0, -40)], (0)), 100000000, 0, -45), (Tag1 (0, (Tag3 ((("value", 461)), [(Tag9 (("a")), 100000000, 0, -40)], (0)), 100000000, 0, -44), (Tag3 ((("value", 461)), [(Tag9 (("a")), 100000000, 0, -40)], (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), [(Tag9 (("a")), 100000000, 0, -40)]), 100000000, 0, -39), (("clib/dyn.mli", 30, 1030, 1045), ("clib/dyn.mli", 30, 1030, 1085), 0), 0, Tag1 ("Dyn", 12))]], 1, 0, 0, 0, 0, 0, (("clib/dyn.mli", 30, 1030, 1032), ("clib/dyn.mli", 30, 1030, 1087), 0), 0, 0, 1, Tag1 ("Dyn", 11)), 1, 0); (("map", 469), ((Tag1 (0, (Tag3 ((("map", 468)), 0, (0)), 100000000, 0, -38), (Tag1 (0, (Tag3 ((("t", 459)), 0, (0)), 100000000, 0, -37), (Tag3 ((("t", 459)), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("clib/dyn.mli", 31, 1088, 1090), ("clib/dyn.mli", 31, 1088, 1113), 0), 0, Tag1 ("Dyn", 13)), 0); Tag1 (("any", 470), (0, 0, Tag1 ([(("Any", 284), ([(Tag3 ((("key", 460)), [((("a")), 100000000, 0, -32)], (0)), 100000000, 0, -31); (Tag3 ((("value", 461)), [((("a")), 100000000, 0, -32)], (0)), 100000000, 0, -33)]), ((Tag3 ((("any", 470)), 0, (0)), 100000000, 0, -30)), (("clib/dyn.mli", 33, 1115, 1128), ("clib/dyn.mli", 33, 1115, 1158), 0), 0, Tag1 ("Dyn", 15))], 0), 1, 0, 0, 0, 0, 0, (("clib/dyn.mli", 33, 1115, 1117), ("clib/dyn.mli", 33, 1115, 1158), 0), 0, 0, 0, Tag1 ("Dyn", 14)), 1, 0); (("iter", 471), ((Tag1 (0, (Tag1 (0, (Tag3 ((("any", 470)), 0, (0)), 100000000, 0, -29), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), (Tag1 (0, (Tag3 ((("t", 459)), 0, (0)), 100000000, 0, -26), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("clib/dyn.mli", 34, 1159, 1161), ("clib/dyn.mli", 34, 1159, 1198), 0), 0, Tag1 ("Dyn", 16)), 0); (("fold", 472), ((Tag1 (0, (Tag1 (0, (Tag3 ((("any", 470)), 0, (0)), 100000000, 0, -22), (Tag1 (0, ((("r")), 100000000, 0, -18), ((("r")), 100000000, 0, -18), 0), 100000000, 0, -21), 0), 100000000, 0, -20), (Tag1 (0, (Tag3 ((("t", 459)), 0, (0)), 100000000, 0, -19), (Tag1 (0, ((("r")), 100000000, 0, -18), ((("r")), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("clib/dyn.mli", 35, 1199, 1201), ("clib/dyn.mli", 35, 1199, 1246), 0), 0, Tag1 ("Dyn", 17)), 0); Tag1 (("filter", 473), (0, 0, [[(("filter", 288), 0, (Tag10 ((Tag1 (0, (Tag3 ((("key", 460)), [(Tag9 (("a")), 100000000, 0, -9)], (0)), 100000000, 0, -14), (Tag1 (0, (Tag3 ((("value", 461)), [(Tag9 (("a")), 100000000, 0, -9)], (0)), 100000000, 0, -13), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), [(Tag9 (("a")), 100000000, 0, -9)]), 100000000, 0, -8), (("clib/dyn.mli", 37, 1248, 1266), ("clib/dyn.mli", 37, 1248, 1305), 0), 0, Tag1 ("Dyn", 19))]], 1, 0, 0, 0, 0, 0, (("clib/dyn.mli", 37, 1248, 1250), ("clib/dyn.mli", 37, 1248, 1307), 0), 0, 0, 1, Tag1 ("Dyn", 18)), 1, 0); (("filter", 474), ((Tag1 (0, (Tag3 ((("filter", 473)), 0, (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 ((("t", 459)), 0, (0)), 100000000, 0, -6), (Tag3 ((("t", 459)), 0, (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0, (("clib/dyn.mli", 38, 1308, 1310), ("clib/dyn.mli", 38, 1308, 1339), 0), 0, Tag1 ("Dyn", 20)), 0)])), 0, (("clib/dyn.mli", 18, 751, 751), ("clib/dyn.mli", 39, 1340, 1343), 0), Tag1 ("Dyn", 21)), 0); Tag4 (("S", 456), ((Tag1 ([Tag1 (("tag", 475), ([((("a")), 100000000, 0, -121)], 1, 0, 1, 0, [7], [2], 0, 0, (("clib/dyn.mli", 43, 1365, 1367), ("clib/dyn.mli", 43, 1365, 1378), 0), 0, 0, 0, Tag1 ("Dyn", 22)), 1, 0); Tag1 (("t", 476), (0, 0, Tag1 ([(("Dyn", 293), ([(Tag3 ((("tag", 475)), [((("a")), 100000000, 0, -120)], (0)), 100000000, 0, -119); ((("a")), 100000000, 0, -120)]), ((Tag3 ((("t", 476)), 0, (0)), 100000000, 0, -118)), (("clib/dyn.mli", 46, 1410, 1421), ("clib/dyn.mli", 46, 1410, 1443), 0), 0, Tag1 ("Dyn", 24))], 0), 1, 0, 0, 0, 0, 0, (("clib/dyn.mli", 46, 1410, 1412), ("clib/dyn.mli", 46, 1410, 1443), 0), 0, 0, 0, Tag1 ("Dyn", 23)), 1, 0); (("create", 477), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -117), (Tag3 ((("tag", 475)), [((("a")), 100000000, 0, -116)], (0)), 100000000, 0, -115), 0), 100000000, 0, -114), 0, (("clib/dyn.mli", 49, 1477, 1479), ("clib/dyn.mli", 49, 1477, 1508), 0), 0, Tag1 ("Dyn", 25)), 0); (("anonymous", 478), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -113), (Tag3 ((("tag", 475)), [((("a")), 100000000, 0, -112)], (0)), 100000000, 0, -111), 0), 100000000, 0, -110), 0, (("clib/dyn.mli", 55, 1772, 1774), ("clib/dyn.mli", 55, 1772, 1803), 0), 0, Tag1 ("Dyn", 26)), 0); (("eq", 479), ((Tag1 (0, (Tag3 ((("tag", 475)), [((("a")), 100000000, 0, -106)], (0)), 100000000, 0, -109), (Tag1 (0, (Tag3 ((("tag", 475)), [((("b")), 100000000, 0, -107)], (0)), 100000000, 0, -108), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("CSig")), "eq"), [((("a")), 100000000, 0, -106); ((("b")), 100000000, 0, -107)], (0)), 100000000, 0, -105)], (0)), 100000000, 0, -104), 0), 100000000, 0, -103), 0), 100000000, 0, -102), 0, (("clib/dyn.mli", 61, 2051, 2053), ("clib/dyn.mli", 61, 2051, 2105), 0), 0, Tag1 ("Dyn", 27)), 0); (("repr", 480), ((Tag1 (0, (Tag3 ((("tag", 475)), [((("a")), 100000000, 0, -101)], (0)), 100000000, 0, -100), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -99), 0), 100000000, 0, -98), 0, (("clib/dyn.mli", 64, 2197, 2199), ("clib/dyn.mli", 64, 2197, 2226), 0), 0, Tag1 ("Dyn", 28)), 0); (("dump", 481), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -97), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -95); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -96)]), 100000000, 0, -94)], (0)), 100000000, 0, -93), 0), 100000000, 0, -92), 0, (("clib/dyn.mli", 67, 2299, 2301), ("clib/dyn.mli", 67, 2299, 2339), 0), 0, Tag1 ("Dyn", 29)), 0); Tag1 (("any", 482), (0, 0, Tag1 ([(("Any", 305), ([(Tag3 ((("tag", 475)), [((("a")), 100000000, 0, -91)], (0)), 100000000, 0, -90)]), ((Tag3 ((("any", 482)), 0, (0)), 100000000, 0, -89)), (("clib/dyn.mli", 71, 2461, 2474), ("clib/dyn.mli", 71, 2461, 2493), 0), 0, Tag1 ("Dyn", 31))], 0), 1, 0, 0, 0, 0, 0, (("clib/dyn.mli", 71, 2461, 2463), ("clib/dyn.mli", 71, 2461, 2493), 0), 0, 0, 1, Tag1 ("Dyn", 30)), 1, 0); (("name", 483), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -88), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("any", 482)), 0, (0)), 100000000, 0, -87)], (0)), 100000000, 0, -86), 0), 100000000, 0, -85), 0, (("clib/dyn.mli", 74, 2531, 2533), ("clib/dyn.mli", 74, 2531, 2564), 0), 0, Tag1 ("Dyn", 32)), 0); Tag3 (("Map", 484), 0, (Tag2 (((("Value", 489)), ((("ValueS", 454)))), Tag1 ([Tag1 (("t", 490), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("clib/dyn.mli", 20, 774, 776), ("clib/dyn.mli", 20, 774, 782), 0), 0, 0, 0, Tag1 ("Dyn", 2)), 1, 0); Tag1 (("key", 491), ([((("a")), 100000000, 0, -205)], 1, 0, 1, ((Tag3 ((("tag", 475)), [((("a")), 100000000, 0, -205)], (0)), 100000000, 0, -204)), [7], [2], 0, 0, (("clib/dyn.mli", 79, 2735, 2749), ("clib/dyn.mli", 79, 2735, 2769), 0), 0, 0, 0, Tag1 ("Dyn", 34)), 1, 0); Tag1 (("value", 492), ([((("a")), 100000000, 0, -203)], 1, 0, 1, ((Tag3 (Tag1 ((("Value", 489)), "t"), [((("a")), 100000000, 0, -203)], (0)), 100000000, 0, -202)), [7], [2], 0, 0, (("clib/dyn.mli", 79, 2735, 2774), ("clib/dyn.mli", 79, 2735, 2800), 0), 0, 0, 0, Tag1 ("Dyn", 35)), 1, 0); (("empty", 493), ((Tag3 ((("t", 490)), 0, (0)), 100000000, 0, -201), 0, (("clib/dyn.mli", 23, 813, 815), ("clib/dyn.mli", 23, 813, 828), 0), 0, Tag1 ("Dyn", 5)), 0); (("add", 494), ((Tag1 (0, (Tag3 ((("key", 491)), [((("a")), 100000000, 0, -199)], (0)), 100000000, 0, -200), (Tag1 (0, (Tag3 ((("value", 492)), [((("a")), 100000000, 0, -199)], (0)), 100000000, 0, -198), (Tag1 (0, (Tag3 ((("t", 490)), 0, (0)), 100000000, 0, -197), (Tag3 ((("t", 490)), 0, (0)), 100000000, 0, -196), 0), 100000000, 0, -195), 0), 100000000, 0, -194), 0), 100000000, 0, -193), 0, (("clib/dyn.mli", 24, 829, 831), ("clib/dyn.mli", 24, 829, 869), 0), 0, Tag1 ("Dyn", 6)), 0); (("remove", 495), ((Tag1 (0, (Tag3 ((("key", 491)), [((("a")), 100000000, 0, -192)], (0)), 100000000, 0, -191), (Tag1 (0, (Tag3 ((("t", 490)), 0, (0)), 100000000, 0, -190), (Tag3 ((("t", 490)), 0, (0)), 100000000, 0, -189), 0), 100000000, 0, -188), 0), 100000000, 0, -187), 0, (("clib/dyn.mli", 25, 870, 872), ("clib/dyn.mli", 25, 870, 901), 0), 0, Tag1 ("Dyn", 7)), 0); (("find", 496), ((Tag1 (0, (Tag3 ((("key", 491)), [((("a")), 100000000, 0, -184)], (0)), 100000000, 0, -186), (Tag1 (0, (Tag3 ((("t", 490)), 0, (0)), 100000000, 0, -185), (Tag3 ((("value", 492)), [((("a")), 100000000, 0, -184)], (0)), 100000000, 0, -183), 0), 100000000, 0, -182), 0), 100000000, 0, -181), 0, (("clib/dyn.mli", 26, 902, 904), ("clib/dyn.mli", 26, 902, 938), 0), 0, Tag1 ("Dyn", 8)), 0); (("mem", 497), ((Tag1 (0, (Tag3 ((("key", 491)), [((("a")), 100000000, 0, -180)], (0)), 100000000, 0, -179), (Tag1 (0, (Tag3 ((("t", 490)), 0, (0)), 100000000, 0, -178), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -177), 0), 100000000, 0, -176), 0), 100000000, 0, -175), 0, (("clib/dyn.mli", 27, 939, 941), ("clib/dyn.mli", 27, 939, 970), 0), 0, Tag1 ("Dyn", 9)), 0); (("modify", 498), ((Tag1 (0, (Tag3 ((("key", 491)), [((("a")), 100000000, 0, -172)], (0)), 100000000, 0, -174), (Tag1 (0, (Tag1 (0, (Tag3 ((("value", 492)), [((("a")), 100000000, 0, -172)], (0)), 100000000, 0, -173), (Tag3 ((("value", 492)), [((("a")), 100000000, 0, -172)], (0)), 100000000, 0, -171), 0), 100000000, 0, -170), (Tag1 (0, (Tag3 ((("t", 490)), 0, (0)), 100000000, 0, -169), (Tag3 ((("t", 490)), 0, (0)), 100000000, 0, -168), 0), 100000000, 0, -167), 0), 100000000, 0, -166), 0), 100000000, 0, -165), 0, (("clib/dyn.mli", 28, 971, 973), ("clib/dyn.mli", 28, 971, 1028), 0), 0, Tag1 ("Dyn", 10)), 0); Tag1 (("map", 499), (0, 0, [[(("map", 281), 0, (Tag10 ((Tag1 (0, (Tag3 ((("key", 491)), [(Tag9 (("a")), 100000000, 0, -159)], (0)), 100000000, 0, -164), (Tag1 (0, (Tag3 ((("value", 492)), [(Tag9 (("a")), 100000000, 0, -159)], (0)), 100000000, 0, -163), (Tag3 ((("value", 492)), [(Tag9 (("a")), 100000000, 0, -159)], (0)), 100000000, 0, -162), 0), 100000000, 0, -161), 0), 100000000, 0, -160), [(Tag9 (("a")), 100000000, 0, -159)]), 100000000, 0, -158), (("clib/dyn.mli", 30, 1030, 1045), ("clib/dyn.mli", 30, 1030, 1085), 0), 0, Tag1 ("Dyn", 12))]], 1, 0, 0, 0, 0, 0, (("clib/dyn.mli", 30, 1030, 1032), ("clib/dyn.mli", 30, 1030, 1087), 0), 0, 0, 1, Tag1 ("Dyn", 11)), 1, 0); (("map", 500), ((Tag1 (0, (Tag3 ((("map", 499)), 0, (0)), 100000000, 0, -157), (Tag1 (0, (Tag3 ((("t", 490)), 0, (0)), 100000000, 0, -156), (Tag3 ((("t", 490)), 0, (0)), 100000000, 0, -155), 0), 100000000, 0, -154), 0), 100000000, 0, -153), 0, (("clib/dyn.mli", 31, 1088, 1090), ("clib/dyn.mli", 31, 1088, 1113), 0), 0, Tag1 ("Dyn", 13)), 0); Tag1 (("any", 501), (0, 0, Tag1 ([(("Any", 284), ([(Tag3 ((("key", 491)), [((("a")), 100000000, 0, -151)], (0)), 100000000, 0, -150); (Tag3 ((("value", 492)), [((("a")), 100000000, 0, -151)], (0)), 100000000, 0, -152)]), ((Tag3 ((("any", 501)), 0, (0)), 100000000, 0, -149)), (("clib/dyn.mli", 33, 1115, 1128), ("clib/dyn.mli", 33, 1115, 1158), 0), 0, Tag1 ("Dyn", 15))], 0), 1, 0, 0, 0, 0, 0, (("clib/dyn.mli", 33, 1115, 1117), ("clib/dyn.mli", 33, 1115, 1158), 0), 0, 0, 0, Tag1 ("Dyn", 14)), 1, 0); (("iter", 502), ((Tag1 (0, (Tag1 (0, (Tag3 ((("any", 501)), 0, (0)), 100000000, 0, -148), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -147), 0), 100000000, 0, -146), (Tag1 (0, (Tag3 ((("t", 490)), 0, (0)), 100000000, 0, -145), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -144), 0), 100000000, 0, -143), 0), 100000000, 0, -142), 0, (("clib/dyn.mli", 34, 1159, 1161), ("clib/dyn.mli", 34, 1159, 1198), 0), 0, Tag1 ("Dyn", 16)), 0); (("fold", 503), ((Tag1 (0, (Tag1 (0, (Tag3 ((("any", 501)), 0, (0)), 100000000, 0, -141), (Tag1 (0, ((("r")), 100000000, 0, -137), ((("r")), 100000000, 0, -137), 0), 100000000, 0, -140), 0), 100000000, 0, -139), (Tag1 (0, (Tag3 ((("t", 490)), 0, (0)), 100000000, 0, -138), (Tag1 (0, ((("r")), 100000000, 0, -137), ((("r")), 100000000, 0, -137), 0), 100000000, 0, -136), 0), 100000000, 0, -135), 0), 100000000, 0, -134), 0, (("clib/dyn.mli", 35, 1199, 1201), ("clib/dyn.mli", 35, 1199, 1246), 0), 0, Tag1 ("Dyn", 17)), 0); Tag1 (("filter", 504), (0, 0, [[(("filter", 288), 0, (Tag10 ((Tag1 (0, (Tag3 ((("key", 491)), [(Tag9 (("a")), 100000000, 0, -128)], (0)), 100000000, 0, -133), (Tag1 (0, (Tag3 ((("value", 492)), [(Tag9 (("a")), 100000000, 0, -128)], (0)), 100000000, 0, -132), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -131), 0), 100000000, 0, -130), 0), 100000000, 0, -129), [(Tag9 (("a")), 100000000, 0, -128)]), 100000000, 0, -127), (("clib/dyn.mli", 37, 1248, 1266), ("clib/dyn.mli", 37, 1248, 1305), 0), 0, Tag1 ("Dyn", 19))]], 1, 0, 0, 0, 0, 0, (("clib/dyn.mli", 37, 1248, 1250), ("clib/dyn.mli", 37, 1248, 1307), 0), 0, 0, 1, Tag1 ("Dyn", 18)), 1, 0); (("filter", 505), ((Tag1 (0, (Tag3 ((("filter", 504)), 0, (0)), 100000000, 0, -126), (Tag1 (0, (Tag3 ((("t", 490)), 0, (0)), 100000000, 0, -125), (Tag3 ((("t", 490)), 0, (0)), 100000000, 0, -124), 0), 100000000, 0, -123), 0), 100000000, 0, -122), 0, (("clib/dyn.mli", 38, 1308, 1310), ("clib/dyn.mli", 38, 1308, 1339), 0), 0, Tag1 ("Dyn", 20)), 0)])), 0, (("clib/dyn.mli", 78, 2704, 2706), ("clib/dyn.mli", 79, 2735, 2800), 0), Tag1 ("Dyn", 36)), 0, 0); Tag3 (("HMap", 485), 0, (Tag2 (((("V1", 487)), ((("ValueS", 454)))), Tag2 (((("V2", 488)), ((("ValueS", 454)))), Tag1 ([Tag1 (("map", 506), (0, 0, [[(("map", 330), 0, (Tag10 ((Tag1 (0, (Tag3 ((("tag", 475)), [(Tag9 (("a")), 100000000, 0, -224)], (0)), 100000000, 0, -229), (Tag1 (0, (Tag3 (Tag1 ((("V1", 487)), "t"), [(Tag9 (("a")), 100000000, 0, -224)], (0)), 100000000, 0, -228), (Tag3 (Tag1 ((("V2", 488)), "t"), [(Tag9 (("a")), 100000000, 0, -224)], (0)), 100000000, 0, -227), 0), 100000000, 0, -226), 0), 100000000, 0, -225), [(Tag9 (("a")), 100000000, 0, -224)]), 100000000, 0, -223), (("clib/dyn.mli", 84, 2921, 2940), ("clib/dyn.mli", 84, 2921, 2978), 0), 0, Tag1 ("Dyn", 40))]], 1, 0, 0, 0, 0, 0, (("clib/dyn.mli", 84, 2921, 2927), ("clib/dyn.mli", 84, 2921, 2980), 0), 0, 0, 1, Tag1 ("Dyn", 39)), 1, 0); (("map", 507), ((Tag1 (0, (Tag3 ((("map", 506)), 0, (0)), 100000000, 0, -222), (Tag1 (0, (Tag3 (Tag1 (Tag2 ((("Map", 484)), (("V1", 487))), "t"), 0, (0)), 100000000, 0, -221), (Tag3 (Tag1 (Tag2 ((("Map", 484)), (("V2", 488))), "t"), 0, (0)), 100000000, 0, -220), 0), 100000000, 0, -219), 0), 100000000, 0, -218), 0, (("clib/dyn.mli", 85, 2981, 2987), ("clib/dyn.mli", 85, 2981, 3026), 0), 0, Tag1 ("Dyn", 41)), 0); Tag1 (("filter", 508), (0, 0, [[(("filter", 381), 0, (Tag10 ((Tag1 (0, (Tag3 ((("tag", 475)), [(Tag9 (("a")), 100000000, 0, -212)], (0)), 100000000, 0, -217), (Tag1 (0, (Tag3 (Tag1 ((("V1", 487)), "t"), [(Tag9 (("a")), 100000000, 0, -212)], (0)), 100000000, 0, -216), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -215), 0), 100000000, 0, -214), 0), 100000000, 0, -213), [(Tag9 (("a")), 100000000, 0, -212)]), 100000000, 0, -211), (("clib/dyn.mli", 87, 3028, 3050), ("clib/dyn.mli", 87, 3028, 3088), 0), 0, Tag1 ("Dyn", 43))]], 1, 0, 0, 0, 0, 0, (("clib/dyn.mli", 87, 3028, 3034), ("clib/dyn.mli", 87, 3028, 3090), 0), 0, 0, 1, Tag1 ("Dyn", 42)), 1, 0); (("filter", 509), ((Tag1 (0, (Tag3 ((("filter", 508)), 0, (0)), 100000000, 0, -210), (Tag1 (0, (Tag3 (Tag1 (Tag2 ((("Map", 484)), (("V1", 487))), "t"), 0, (0)), 100000000, 0, -209), (Tag3 (Tag1 (Tag2 ((("Map", 484)), (("V1", 487))), "t"), 0, (0)), 100000000, 0, -208), 0), 100000000, 0, -207), 0), 100000000, 0, -206), 0, (("clib/dyn.mli", 88, 3091, 3097), ("clib/dyn.mli", 88, 3091, 3142), 0), 0, Tag1 ("Dyn", 44)), 0)]))), 0, (("clib/dyn.mli", 82, 2870, 2872), ("clib/dyn.mli", 89, 3143, 3150), 0), Tag1 ("Dyn", 45)), 0, 0); Tag3 (("Easy", 486), 0, (Tag1 ([(("make_dyn_tag", 510), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -257), (Tag2 ([(Tag1 (0, ((("a")), 100000000, 0, -253), (Tag3 ((("t", 476)), 0, (0)), 100000000, 0, -252), 0), 100000000, 0, -251); (Tag1 (0, (Tag3 ((("t", 476)), 0, (0)), 100000000, 0, -255), ((("a")), 100000000, 0, -253), 0), 100000000, 0, -254); (Tag3 ((("tag", 475)), [((("a")), 100000000, 0, -253)], (0)), 100000000, 0, -256)]), 100000000, 0, -250), 0), 100000000, 0, -249), 0, (("clib/dyn.mli", 93, 3218, 3222), ("clib/dyn.mli", 93, 3218, 3281), 0), 0, Tag1 ("Dyn", 46)), 0); (("make_dyn", 511), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -248), (Tag2 ([(Tag1 (0, ((("a")), 100000000, 0, -245), (Tag3 ((("t", 476)), 0, (0)), 100000000, 0, -244), 0), 100000000, 0, -243); (Tag1 (0, (Tag3 ((("t", 476)), 0, (0)), 100000000, 0, -247), ((("a")), 100000000, 0, -245), 0), 100000000, 0, -246)]), 100000000, 0, -242), 0), 100000000, 0, -241), 0, (("clib/dyn.mli", 94, 3282, 3286), ("clib/dyn.mli", 94, 3282, 3332), 0), 0, Tag1 ("Dyn", 47)), 0); (("inj", 512), ((Tag1 (0, ((("a")), 100000000, 0, -240), (Tag1 (0, (Tag3 ((("tag", 475)), [((("a")), 100000000, 0, -240)], (0)), 100000000, 0, -239), (Tag3 ((("t", 476)), 0, (0)), 100000000, 0, -238), 0), 100000000, 0, -237), 0), 100000000, 0, -236), 0, (("clib/dyn.mli", 97, 3396, 3400), ("clib/dyn.mli", 97, 3396, 3427), 0), 0, Tag1 ("Dyn", 48)), 0); (("prj", 513), ((Tag1 (0, (Tag3 ((("t", 476)), 0, (0)), 100000000, 0, -235), (Tag1 (0, (Tag3 ((("tag", 475)), [((("a")), 100000000, 0, -233)], (0)), 100000000, 0, -234), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -233)], (0)), 100000000, 0, -232), 0), 100000000, 0, -231), 0), 100000000, 0, -230), 0, (("clib/dyn.mli", 98, 3428, 3432), ("clib/dyn.mli", 98, 3428, 3466), 0), 0, Tag1 ("Dyn", 49)), 0)]), 0, (("clib/dyn.mli", 91, 3152, 3154), ("clib/dyn.mli", 99, 3467, 3472), 0), Tag1 ("Dyn", 50)), 0, 0)])), 0, (("clib/dyn.mli", 41, 1345, 1345), ("clib/dyn.mli", 100, 3473, 3476), 0), Tag1 ("Dyn", 51)), 0); Tag3 (("Make", 457), 0, (Tag2 (0, ((("S", 456)))), 0, (("clib/dyn.mli", 102, 3478, 3478), ("clib/dyn.mli", 102, 3478, 3496), 0), Tag1 ("Dyn", 52)), 0, 0)], "Dyn", [("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t"))], [(0)])

module Make : functor () -> S
