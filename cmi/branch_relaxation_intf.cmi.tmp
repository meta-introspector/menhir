module type S =
  sig
    type distance = int
    module Cond_branch :
      sig
        type t
        val all : t list
        val max_displacement : t -> distance
        val classify_instr : Linear.instruction_desc -> t option
      end
    val offset_pc_at_branch : distance
    val instr_size : Linear.fundecl -> Linear.instruction_desc -> distance
    val relax_allocation :
      num_bytes:int ->
      dbginfo:Debuginfo.alloc_dbginfo -> Linear.instruction_desc
    val relax_poll : return_label:Cmm.label option -> Linear.instruction_desc
    val relax_intop_checkbound : unit -> Linear.instruction_desc
    val relax_intop_imm_checkbound : bound:int -> Linear.instruction_desc
    val relax_specific_op :
      Arch.specific_operation -> Linear.instruction_desc("DEBUG:rule", [Tag4 (("S", 373), ((Tag1 ([Tag1 (("distance", 374), (0, 0, 0, 1, ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -26)), 0, 0, 0, 0, (("asmcomp/branch_relaxation_intf.mli", 20, 1298, 1300), ("asmcomp/branch_relaxation_intf.mli", 20, 1298, 1319), 0), 0, 1, 0, Tag1 ("Branch_relaxation_intf", 0)), 1, 0); Tag3 (("Cond_branch", 375), 0, (Tag1 ([Tag1 (("t", 383), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("asmcomp/branch_relaxation_intf.mli", 25, 1455, 1459), ("asmcomp/branch_relaxation_intf.mli", 25, 1455, 1465), 0), 0, 0, 0, Tag1 ("Branch_relaxation_intf", 1)), 1, 0); (("all", 384), ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 383)), 0, (0)), 100000000, 0, -35)], (0)), 100000000, 0, -34), 0, (("asmcomp/branch_relaxation_intf.mli", 28, 1530, 1534), ("asmcomp/branch_relaxation_intf.mli", 28, 1530, 1550), 0), 0, Tag1 ("Branch_relaxation_intf", 2)), 0); (("max_displacement", 385), ((Tag1 (0, (Tag3 ((("t", 383)), 0, (0)), 100000000, 0, -33), (Tag3 ((("distance", 374)), 0, (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("asmcomp/branch_relaxation_intf.mli", 34, 1793, 1797), ("asmcomp/branch_relaxation_intf.mli", 34, 1793, 1833), 0), 0, Tag1 ("Branch_relaxation_intf", 3)), 0); (("classify_instr", 386), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Linear")), "instruction_desc"), 0, (0)), 100000000, 0, -30), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 383)), 0, (0)), 100000000, 0, -29)], (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("asmcomp/branch_relaxation_intf.mli", 50, 2502, 2506), ("asmcomp/branch_relaxation_intf.mli", 50, 2502, 2562), 0), 0, Tag1 ("Branch_relaxation_intf", 6)), 0)]), 0, (("asmcomp/branch_relaxation_intf.mli", 22, 1321, 1323), ("asmcomp/branch_relaxation_intf.mli", 51, 2563, 2568), 0), Tag1 ("Branch_relaxation_intf", 7)), 0, 0); (("offset_pc_at_branch", 376), ((Tag3 ((("distance", 374)), 0, (0)), 100000000, 0, -25), 0, (("asmcomp/branch_relaxation_intf.mli", 56, 2745, 2747), ("asmcomp/branch_relaxation_intf.mli", 56, 2745, 2781), 0), 0, Tag1 ("Branch_relaxation_intf", 8)), 0); (("instr_size", 377), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Linear")), "fundecl"), 0, (0)), 100000000, 0, -24), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Linear")), "instruction_desc"), 0, (0)), 100000000, 0, -23), (Tag3 ((("distance", 374)), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("asmcomp/branch_relaxation_intf.mli", 59, 2832, 2834), ("asmcomp/branch_relaxation_intf.mli", 59, 2832, 2904), 0), 0, Tag1 ("Branch_relaxation_intf", 9)), 0); (("relax_allocation", 378), ((Tag1 (("num_bytes"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -19), (Tag1 (("dbginfo"), (Tag3 (Tag1 ((Tag2 ("Debuginfo")), "alloc_dbginfo"), 0, (0)), 100000000, 0, -18), (Tag3 (Tag1 ((Tag2 ("Linear")), "instruction_desc"), 0, (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("asmcomp/branch_relaxation_intf.mli", 64, 3121, 3123), ("asmcomp/branch_relaxation_intf.mli", 67, 3204, 3234), 0), 0, Tag1 ("Branch_relaxation_intf", 10)), 0); (("relax_poll", 379), ((Tag1 (("return_label"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Cmm")), "label"), 0, (0)), 100000000, 0, -14)], (0)), 100000000, 0, -13), (Tag3 (Tag1 ((Tag2 ("Linear")), "instruction_desc"), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("asmcomp/branch_relaxation_intf.mli", 69, 3236, 3238), ("asmcomp/branch_relaxation_intf.mli", 71, 3290, 3320), 0), 0, Tag1 ("Branch_relaxation_intf", 16)), 0); (("relax_intop_checkbound", 380), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -10), (Tag3 (Tag1 ((Tag2 ("Linear")), "instruction_desc"), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("asmcomp/branch_relaxation_intf.mli", 73, 3322, 3324), ("asmcomp/branch_relaxation_intf.mli", 75, 3363, 3393), 0), 0, Tag1 ("Branch_relaxation_intf", 17)), 0); (("relax_intop_imm_checkbound", 381), ((Tag1 (("bound"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7), (Tag3 (Tag1 ((Tag2 ("Linear")), "instruction_desc"), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("asmcomp/branch_relaxation_intf.mli", 76, 3394, 3396), ("asmcomp/branch_relaxation_intf.mli", 78, 3444, 3474), 0), 0, Tag1 ("Branch_relaxation_intf", 18)), 0); (("relax_specific_op", 382), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Arch")), "specific_operation"), 0, (0)), 100000000, 0, -4), (Tag3 (Tag1 ((Tag2 ("Linear")), "instruction_desc"), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("asmcomp/branch_relaxation_intf.mli", 79, 3475, 3477), ("asmcomp/branch_relaxation_intf.mli", 79, 3475, 3551), 0), 0, Tag1 ("Branch_relaxation_intf", 19)), 0)])), 0, (("asmcomp/branch_relaxation_intf.mli", 17, 1156, 1156), ("asmcomp/branch_relaxation_intf.mli", 80, 3552, 3555), 0), Tag1 ("Branch_relaxation_intf", 20)), 0)], "Branch_relaxation_intf", [("Branch_relaxation_intf", ("\157\227\138\017\2385\228BF\250\237\175\175)\133\151")); ("X86_ast", ("_J}e\221\174\027(J\165T\180=\151\227n")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Targetint", ("\246d\193-\187\015a_\181+\n \019\246;\150")); ("Subst", ("\021\031\148\223\127\186\189\135\027}\145r\216\143\177\156")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Arg", ("\024%=\206\198p\149Y\007\004\216,&\254#\207")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Reg", ("*\173\202\2069\136\224\129\178\171\139w\215DX\154")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Mach", ("&\170\178\177#\189\191s\128\250H\146\198\206\134\167")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Load_path", ("\012@\228l\230\164S\172h\1726X\020\252o}")); ("Linear", ("%\195\240\191\217*`\216F1\029\212\248\171\223H")); ("Lambda", ("\180\1419\236'\146K$\128\006\135q\135V\029\180")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("Env", ("\021\n\181\142x\b\169j\227\"\017\248*\178\245\223")); ("Debuginfo", ("\131\251\175\217P\194M\163\022\151\002\005\006\185:\185")); ("Cmm", ("\245\177\229\137\140&\252'xF\207\167\160\025\167\223")); ("Cmi_format", ("6\177\bU\139\"\023\152=\249\135\174\b\011Cg")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc")); ("Backend_var", ("\182\144C\215j:\241\151\214\131?\204\253\002\029\151")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216")); ("Arch", ("9\221>\185\204\181\224\2279\164\221\212\213\028qT"))], [(0)])

  end
