module Mc = Micromega_plugin.Micromega
type ('prf, 'model) res = Prf of 'prf | Model of 'model | Unknown
type zres = (Mc.zArithProof, int * Mc.z list) res
type qres = (Mc.q Mc.psatz, int * Mc.q list) res
val q_cert_of_pos :
  Micromega_plugin.Sos_types.positivstellensatz -> Mc.q Mc.psatz
val z_cert_of_pos :
  Micromega_plugin.Sos_types.positivstellensatz -> Mc.z Mc.psatz
val lia : int -> (Mc.z Mc.pExpr * Mc.op1) list -> zres
val nlia : int -> (Mc.z Mc.pExpr * Mc.op1) list -> zres
val linear_prover_with_cert : int -> (Mc.q Mc.pExpr * Mc.op1) list -> qres
("DEBUG:rule", [Tag3 (("Mc", 732), 1, (Tag3 (Tag1 ((Tag2 ("Micromega_plugin")), "Micromega")), 0, (("plugins/micromega/certificate.mli", 11, 676, 676), ("plugins/micromega/certificate.mli", 11, 676, 697), 0), Tag1 ("Micromega_plugin__Certificate", 0)), 0, 0); Tag1 (("res", 733), ([((("prf")), 100000000, 0, -59); ((("model")), 100000000, 0, -60)], 2, Tag1 ([(("Prf", 286), ([((("prf")), 100000000, 0, -59)]), 0, (("plugins/micromega/certificate.mli", 13, 699, 725), ("plugins/micromega/certificate.mli", 13, 699, 736), 0), 0, Tag1 ("Micromega_plugin__Certificate", 2)); (("Model", 287), ([((("model")), 100000000, 0, -60)]), 0, (("plugins/micromega/certificate.mli", 13, 699, 737), ("plugins/micromega/certificate.mli", 13, 699, 754), 0), 0, Tag1 ("Micromega_plugin__Certificate", 3)); (("Unknown", 288), (0), 0, (("plugins/micromega/certificate.mli", 13, 699, 755), ("plugins/micromega/certificate.mli", 13, 699, 764), 0), 0, Tag1 ("Micromega_plugin__Certificate", 4))], 0), 1, 0, [25; 25], [0; 0], 0, 0, (("plugins/micromega/certificate.mli", 13, 699, 699), ("plugins/micromega/certificate.mli", 13, 699, 764), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Certificate", 1)), 1, 0); Tag1 (("zres", 734), (0, 0, 0, 1, ((Tag3 ((("res", 733)), [(Tag3 (Tag1 ((("Mc", 732)), "zArithProof"), 0, (0)), 100000000, 0, -54); (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -56); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Mc", 732)), "z"), 0, (0)), 100000000, 0, -58)], (0)), 100000000, 0, -57)]), 100000000, 0, -55)], (0)), 100000000, 0, -53)), 0, 0, 0, 0, (("plugins/micromega/certificate.mli", 14, 765, 765), ("plugins/micromega/certificate.mli", 14, 765, 814), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Certificate", 5)), 1, 0); Tag1 (("qres", 735), (0, 0, 0, 1, ((Tag3 ((("res", 733)), [(Tag3 (Tag1 ((("Mc", 732)), "psatz"), [(Tag3 (Tag1 ((("Mc", 732)), "q"), 0, (0)), 100000000, 0, -48)], (0)), 100000000, 0, -47); (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -50); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Mc", 732)), "q"), 0, (0)), 100000000, 0, -52)], (0)), 100000000, 0, -51)]), 100000000, 0, -49)], (0)), 100000000, 0, -46)), 0, 0, 0, 0, (("plugins/micromega/certificate.mli", 15, 815, 815), ("plugins/micromega/certificate.mli", 15, 815, 863), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Certificate", 6)), 1, 0); (("q_cert_of_pos", 736), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Micromega_plugin")), "Sos_types"), "positivstellensatz"), 0, (0)), 100000000, 0, -45), (Tag3 (Tag1 ((("Mc", 732)), "psatz"), [(Tag3 (Tag1 ((("Mc", 732)), "q"), 0, (0)), 100000000, 0, -44)], (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("plugins/micromega/certificate.mli", 18, 939, 939), ("plugins/micromega/certificate.mli", 18, 939, 1004), 0), 0, Tag1 ("Micromega_plugin__Certificate", 7)), 0); (("z_cert_of_pos", 737), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Micromega_plugin")), "Sos_types"), "positivstellensatz"), 0, (0)), 100000000, 0, -41), (Tag3 (Tag1 ((("Mc", 732)), "psatz"), [(Tag3 (Tag1 ((("Mc", 732)), "z"), 0, (0)), 100000000, 0, -40)], (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("plugins/micromega/certificate.mli", 21, 1080, 1080), ("plugins/micromega/certificate.mli", 21, 1080, 1145), 0), 0, Tag1 ("Micromega_plugin__Certificate", 8)), 0); (("lia", 738), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -37), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Mc", 732)), "pExpr"), [(Tag3 (Tag1 ((("Mc", 732)), "z"), 0, (0)), 100000000, 0, -35)], (0)), 100000000, 0, -34); (Tag3 (Tag1 ((("Mc", 732)), "op1"), 0, (0)), 100000000, 0, -36)]), 100000000, 0, -33)], (0)), 100000000, 0, -32), (Tag3 ((("zres", 734)), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("plugins/micromega/certificate.mli", 24, 1232, 1232), ("plugins/micromega/certificate.mli", 24, 1232, 1286), 0), 0, Tag1 ("Micromega_plugin__Certificate", 9)), 0); (("nlia", 739), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Mc", 732)), "pExpr"), [(Tag3 (Tag1 ((("Mc", 732)), "z"), 0, (0)), 100000000, 0, -26)], (0)), 100000000, 0, -25); (Tag3 (Tag1 ((("Mc", 732)), "op1"), 0, (0)), 100000000, 0, -27)]), 100000000, 0, -24)], (0)), 100000000, 0, -23), (Tag3 ((("zres", 734)), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("plugins/micromega/certificate.mli", 28, 1437, 1437), ("plugins/micromega/certificate.mli", 28, 1437, 1492), 0), 0, Tag1 ("Micromega_plugin__Certificate", 10)), 0); (("linear_prover_with_cert", 740), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -19), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Mc", 732)), "pExpr"), [(Tag3 (Tag1 ((("Mc", 732)), "q"), 0, (0)), 100000000, 0, -17)], (0)), 100000000, 0, -16); (Tag3 (Tag1 ((("Mc", 732)), "op1"), 0, (0)), 100000000, 0, -18)]), 100000000, 0, -15)], (0)), 100000000, 0, -14), (Tag3 ((("qres", 735)), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("plugins/micromega/certificate.mli", 32, 1647, 1647), ("plugins/micromega/certificate.mli", 32, 1647, 1721), 0), 0, Tag1 ("Micromega_plugin__Certificate", 11)), 0); (("nlinear_prover", 741), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Mc", 732)), "pExpr"), [(Tag3 (Tag1 ((("Mc", 732)), "q"), 0, (0)), 100000000, 0, -8)], (0)), 100000000, 0, -7); (Tag3 (Tag1 ((("Mc", 732)), "op1"), 0, (0)), 100000000, 0, -9)]), 100000000, 0, -6)], (0)), 100000000, 0, -5), (Tag3 ((("qres", 735)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("plugins/micromega/certificate.mli", 36, 1873, 1873), ("plugins/micromega/certificate.mli", 36, 1873, 1938), 0), 0, Tag1 ("Micromega_plugin__Certificate", 12)), 0)], "Micromega_plugin__Certificate", [("Micromega_plugin__Certificate", ("U^\166lxW\216\\\216k\130\141\229\149\\\236")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Micromega_plugin__Sos_types", ("3\003\150\178\148x\180\210\199\024\228d\169Y\199\132")); ("Micromega_plugin__NumCompat", ("\167R)~D\225*6\249\146\173\\\233F6m")); ("Micromega_plugin__Micromega", ("\144\132\00120\253\252S\131\160\152\240\207\228\014\024")); ("Micromega_plugin", ("-|C6\194\020\193\204\234h\242\238\191\214'\193")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val nlinear_prover : int -> (Mc.q Mc.pExpr * Mc.op1) list -> qres
