type label = Linear.label
type gc_call = {
  gc_lbl : label;
  gc_return_lbl : label;
  gc_frame_lbl : label;
}
type bound_error_call = { bd_lbl : label; bd_frame : label; }
type float_literal = { fl : int64; lbl : label; }
type int_literal = { n : nativeint; n_lbl : label; }
type offset_computation = { lbl : label; dst : label; src : label; }
type gotrel_literal = { lbl_got : label; lbl_pic : label; }
type symbol_literal = { sym : string; lbl : label; }
type per_function_env = {
  f : Linear.fundecl;
  mutable stack_offset : int;
  mutable call_gc_sites : gc_call list;
  mutable call_gc_label : label;
  mutable bound_error_sites : bound_error_call list;
  mutable bound_error_call : label option;
  mutable jumptables_lbl : label option;
  mutable jumptables : label list;
  mutable float_literals : float_literal list;
  mutable int_literals : int_literal list;("DEBUG:rule", [Tag1 (("label", 348), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Linear")), "label"), 0, (0)), 100000000, 0, -35)), 0, 0, 0, 0, (("asmcomp/emitenv.mli", 16, 1149, 1149), ("asmcomp/emitenv.mli", 16, 1149, 1174), 0), 0, 1, 0, Tag1 ("Emitenv", 0)), 1, 0); Tag1 (("gc_call", 349), (0, 0, [[(("gc_lbl", 315), 0, (Tag3 ((("label", 348)), 0, (0)), 100000000, 0, -32), (("asmcomp/emitenv.mli", 20, 1248, 1252), ("asmcomp/emitenv.mli", 20, 1248, 1266), 0), 0, Tag1 ("Emitenv", 9)); (("gc_return_lbl", 316), 0, (Tag3 ((("label", 348)), 0, (0)), 100000000, 0, -33), (("asmcomp/emitenv.mli", 21, 1306, 1310), ("asmcomp/emitenv.mli", 21, 1306, 1331), 0), 0, Tag1 ("Emitenv", 10)); (("gc_frame_lbl", 317), 0, (Tag3 ((("label", 348)), 0, (0)), 100000000, 0, -34), (("asmcomp/emitenv.mli", 22, 1377, 1381), ("asmcomp/emitenv.mli", 22, 1377, 1401), 0), 0, Tag1 ("Emitenv", 11))]], 1, 0, 0, 0, 0, 0, (("asmcomp/emitenv.mli", 19, 1233, 1233), ("asmcomp/emitenv.mli", 23, 1449, 1452), 0), 0, 0, 0, Tag1 ("Emitenv", 8)), 1, 0); Tag1 (("bound_error_call", 350), (0, 0, [[(("bd_lbl", 319), 0, (Tag3 ((("label", 348)), 0, (0)), 100000000, 0, -30), (("asmcomp/emitenv.mli", 30, 1659, 1663), ("asmcomp/emitenv.mli", 30, 1659, 1677), 0), 0, Tag1 ("Emitenv", 13)); (("bd_frame", 320), 0, (Tag3 ((("label", 348)), 0, (0)), 100000000, 0, -31), (("asmcomp/emitenv.mli", 31, 1717, 1721), ("asmcomp/emitenv.mli", 31, 1717, 1737), 0), 0, Tag1 ("Emitenv", 14))]], 1, 0, 0, 0, 0, 0, (("asmcomp/emitenv.mli", 29, 1635, 1635), ("asmcomp/emitenv.mli", 32, 1789, 1792), 0), 0, 0, 0, Tag1 ("Emitenv", 12)), 1, 0); Tag1 (("float_literal", 351), (0, 0, [[(("fl", 322), 0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -28), (("asmcomp/emitenv.mli", 37, 1857, 1861), ("asmcomp/emitenv.mli", 37, 1857, 1872), 0), 0, Tag1 ("Emitenv", 16)); (("lbl", 323), 0, (Tag3 ((("label", 348)), 0, (0)), 100000000, 0, -29), (("asmcomp/emitenv.mli", 38, 1873, 1877), ("asmcomp/emitenv.mli", 38, 1873, 1889), 0), 0, Tag1 ("Emitenv", 17))]], 1, 0, 0, 0, 0, 0, (("asmcomp/emitenv.mli", 35, 1832, 1832), ("asmcomp/emitenv.mli", 39, 1890, 1893), 0), 0, 0, 0, Tag1 ("Emitenv", 15)), 1, 0); Tag1 (("int_literal", 352), (0, 0, [[(("n", 325), 0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -26), (("asmcomp/emitenv.mli", 44, 1955, 1959), ("asmcomp/emitenv.mli", 44, 1955, 1973), 0), 0, Tag1 ("Emitenv", 19)); (("n_lbl", 326), 0, (Tag3 ((("label", 348)), 0, (0)), 100000000, 0, -27), (("asmcomp/emitenv.mli", 45, 1974, 1978), ("asmcomp/emitenv.mli", 45, 1974, 1992), 0), 0, Tag1 ("Emitenv", 20))]], 1, 0, 0, 0, 0, 0, (("asmcomp/emitenv.mli", 42, 1932, 1932), ("asmcomp/emitenv.mli", 46, 1993, 1996), 0), 0, 0, 0, Tag1 ("Emitenv", 18)), 1, 0); Tag1 (("offset_computation", 353), (0, 0, [[(("lbl", 328), 0, (Tag3 ((("label", 348)), 0, (0)), 100000000, 0, -23), (("asmcomp/emitenv.mli", 50, 2104, 2108), ("asmcomp/emitenv.mli", 50, 2104, 2120), 0), 0, Tag1 ("Emitenv", 22)); (("dst", 329), 0, (Tag3 ((("label", 348)), 0, (0)), 100000000, 0, -24), (("asmcomp/emitenv.mli", 51, 2121, 2125), ("asmcomp/emitenv.mli", 51, 2121, 2137), 0), 0, Tag1 ("Emitenv", 23)); (("src", 330), 0, (Tag3 ((("label", 348)), 0, (0)), 100000000, 0, -25), (("asmcomp/emitenv.mli", 52, 2138, 2142), ("asmcomp/emitenv.mli", 52, 2138, 2154), 0), 0, Tag1 ("Emitenv", 24))]], 1, 0, 0, 0, 0, 0, (("asmcomp/emitenv.mli", 49, 2078, 2078), ("asmcomp/emitenv.mli", 53, 2155, 2158), 0), 0, 0, 0, Tag1 ("Emitenv", 21)), 1, 0); Tag1 (("gotrel_literal", 354), (0, 0, [[(("lbl_got", 332), 0, (Tag3 ((("label", 348)), 0, (0)), 100000000, 0, -21), (("asmcomp/emitenv.mli", 57, 2243, 2247), ("asmcomp/emitenv.mli", 57, 2243, 2263), 0), 0, Tag1 ("Emitenv", 26)); (("lbl_pic", 333), 0, (Tag3 ((("label", 348)), 0, (0)), 100000000, 0, -22), (("asmcomp/emitenv.mli", 58, 2264, 2268), ("asmcomp/emitenv.mli", 58, 2264, 2284), 0), 0, Tag1 ("Emitenv", 27))]], 1, 0, 0, 0, 0, 0, (("asmcomp/emitenv.mli", 56, 2221, 2221), ("asmcomp/emitenv.mli", 59, 2285, 2288), 0), 0, 0, 0, Tag1 ("Emitenv", 25)), 1, 0); Tag1 (("symbol_literal", 355), (0, 0, [[(("sym", 335), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -19), (("asmcomp/emitenv.mli", 64, 2346, 2350), ("asmcomp/emitenv.mli", 64, 2346, 2363), 0), 0, Tag1 ("Emitenv", 29)); (("lbl", 336), 0, (Tag3 ((("label", 348)), 0, (0)), 100000000, 0, -20), (("asmcomp/emitenv.mli", 65, 2364, 2368), ("asmcomp/emitenv.mli", 65, 2364, 2380), 0), 0, Tag1 ("Emitenv", 30))]], 1, 0, 0, 0, 0, 0, (("asmcomp/emitenv.mli", 62, 2320, 2320), ("asmcomp/emitenv.mli", 66, 2381, 2384), 0), 0, 0, 0, Tag1 ("Emitenv", 28)), 1, 0); Tag1 (("per_function_env", 356), (0, 0, [[(("f", 338), 0, (Tag3 (Tag1 ((Tag2 ("Linear")), "fundecl"), 0, (0)), 100000000, 0, -2), (("asmcomp/emitenv.mli", 70, 2454, 2456), ("asmcomp/emitenv.mli", 70, 2454, 2475), 0), 0, Tag1 ("Emitenv", 32)); (("stack_offset", 339), 1, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3), (("asmcomp/emitenv.mli", 71, 2476, 2478), ("asmcomp/emitenv.mli", 71, 2476, 2505), 0), 0, Tag1 ("Emitenv", 33)); (("call_gc_sites", 340), 1, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("gc_call", 349)), 0, (0)), 100000000, 0, -5)], (0)), 100000000, 0, -4), (("asmcomp/emitenv.mli", 72, 2506, 2508), ("asmcomp/emitenv.mli", 72, 2506, 2545), 0), 0, Tag1 ("Emitenv", 34)); (("call_gc_label", 341), 1, (Tag3 ((("label", 348)), 0, (0)), 100000000, 0, -6), (("asmcomp/emitenv.mli", 73, 2586, 2588), ("asmcomp/emitenv.mli", 73, 2586, 2618), 0), 0, Tag1 ("Emitenv", 35)); (("bound_error_sites", 342), 1, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("bound_error_call", 350)), 0, (0)), 100000000, 0, -8)], (0)), 100000000, 0, -7), (("asmcomp/emitenv.mli", 74, 2666, 2668), ("asmcomp/emitenv.mli", 74, 2666, 2718), 0), 0, Tag1 ("Emitenv", 36)); (("bound_error_call", 343), 1, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("label", 348)), 0, (0)), 100000000, 0, -10)], (0)), 100000000, 0, -9), (("asmcomp/emitenv.mli", 76, 2799, 2801), ("asmcomp/emitenv.mli", 76, 2799, 2841), 0), 0, Tag1 ("Emitenv", 37)); (("jumptables_lbl", 344), 1, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("label", 348)), 0, (0)), 100000000, 0, -12)], (0)), 100000000, 0, -11), (("asmcomp/emitenv.mli", 80, 3033, 3035), ("asmcomp/emitenv.mli", 80, 3033, 3073), 0), 0, Tag1 ("Emitenv", 38)); (("jumptables", 345), 1, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label", 348)), 0, (0)), 100000000, 0, -14)], (0)), 100000000, 0, -13), (("asmcomp/emitenv.mli", 81, 3113, 3115), ("asmcomp/emitenv.mli", 81, 3113, 3147), 0), 0, Tag1 ("Emitenv", 39)); (("float_literals", 346), 1, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("float_literal", 351)), 0, (0)), 100000000, 0, -16)], (0)), 100000000, 0, -15), (("asmcomp/emitenv.mli", 84, 3197, 3199), ("asmcomp/emitenv.mli", 84, 3197, 3243), 0), 0, Tag1 ("Emitenv", 40)); (("int_literals", 347), 1, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("int_literal", 352)), 0, (0)), 100000000, 0, -18)], (0)), 100000000, 0, -17), (("asmcomp/emitenv.mli", 85, 3272, 3274), ("asmcomp/emitenv.mli", 85, 3272, 3314), 0), 0, Tag1 ("Emitenv", 41))]], 1, 0, 0, 0, 0, 0, (("asmcomp/emitenv.mli", 69, 2428, 2428), ("asmcomp/emitenv.mli", 86, 3352, 3353), 0), 0, 0, 0, Tag1 ("Emitenv", 31)), 1, 0)], "Emitenv", [("Emitenv", ("~\000\175\r\226(\027\185\215?\166O\200\203\212\213")); ("X86_ast", ("_J}e\221\174\027(J\165T\180=\151\227n")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Targetint", ("\246d\193-\187\015a_\181+\n \019\246;\150")); ("Subst", ("\021\031\148\223\127\186\189\135\027}\145r\216\143\177\156")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Arg", ("\024%=\206\198p\149Y\007\004\216,&\254#\207")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Reg", ("*\173\202\2069\136\224\129\178\171\139w\215DX\154")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Mach", ("&\170\178\177#\189\191s\128\250H\146\198\206\134\167")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Load_path", ("\012@\228l\230\164S\172h\1726X\020\252o}")); ("Linear", ("%\195\240\191\217*`\216F1\029\212\248\171\223H")); ("Lambda", ("\180\1419\236'\146K$\128\006\135q\135V\029\180")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("Env", ("\021\n\181\142x\b\169j\227\"\017\248*\178\245\223")); ("Debuginfo", ("\131\251\175\217P\194M\163\022\151\002\005\006\185:\185")); ("Cmm", ("\245\177\229\137\140&\252'xF\207\167\160\025\167\223")); ("Cmi_format", ("6\177\bU\139\"\023\152=\249\135\174\b\011Cg")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc")); ("Backend_var", ("\182\144C\215j:\241\151\214\131?\204\253\002\029\151")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216")); ("Arch", ("9\221>\185\204\181\224\2279\164\221\212\213\028qT"))], [(0)])

}
