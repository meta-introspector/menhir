module Sys = Base__.Sys0
module String :
  sig
    external get : string -> int -> char = "%string_safe_get"
    external length : string -> int = "%string_length"
    external unsafe_get : string -> int -> char = "%string_unsafe_get"
  end
external get : string -> int -> char = "%string_safe_get"
external length : string -> int = "%string_length"
external unsafe_get : string -> int -> char = "%string_unsafe_get"
val max_length : int
val ( ^ ) : string -> string -> string
val capitalize : string -> string
val compare :
  Base__.Import0.Stdlib.String.t -> Base__.Import0.Stdlib.String.t -> int
val escaped : string -> string
val lowercase : string -> string
val make : int -> char -> string
val sub : string -> pos:int -> len:int -> string
val uncapitalize : string -> string
val unsafe_blit :
  src:string -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit
val uppercase : string -> string
val split_on_char : sep:char -> string -> string list
val concat : ?sep:string -> string list -> string
("DEBUG:rule", [Tag3 (("Sys", 1277), 1, (Tag3 (Tag1 ((Tag2 ("Base__")), "Sys0")), 0, (("src/string0.ml", 19, 779, 779), ("src/string0.ml", 19, 779, 796), 0), Tag1 ("Base__String0", 0)), 0, 0); Tag3 (("String", 1278), 0, (Tag1 ([(("get", 1296), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -95), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -94), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -93), 0), 100000000, 0, -92), 0), 100000000, 0, -91), (("%string_safe_get", 2, 1, "", [0; 0], 0)), (("src/string0.ml", 22, 821, 823), ("src/string0.ml", 22, 821, 908), 0), 0, Tag1 ("Base__String0", 1)), 0); (("length", 1297), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -90), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -89), 0), 100000000, 0, -88), (("%string_length", 1, 1, "", [0], 0)), (("src/string0.ml", 23, 909, 911), ("src/string0.ml", 23, 909, 975), 0), 0, Tag1 ("Base__String0", 2)), 0); (("unsafe_get", 1298), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -87), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -86), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -85), 0), 100000000, 0, -84), 0), 100000000, 0, -83), (("%string_unsafe_get", 2, 1, "", [0; 0], 0)), (("src/string0.ml", 25, 977, 979), ("src/string0.ml", 29, 1064, 1090), 0), 0, Tag1 ("Base__String0", 3)), 0)]), 0, (("src/string0.ml", 21, 798, 798), ("src/string0.ml", 30, 1091, 1094), 0), Tag1 ("Base__String0", 4)), 0, 0); (("get", 1279), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -82), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -81), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -80), 0), 100000000, 0, -79), 0), 100000000, 0, -78), (("%string_safe_get", 2, 1, "", [0; 0], 0)), (("src/string0.ml", 22, 821, 823), ("src/string0.ml", 22, 821, 908), 0), 0, Tag1 ("Base__String0", 1)), 0); (("length", 1280), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -77), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -76), 0), 100000000, 0, -75), (("%string_length", 1, 1, "", [0], 0)), (("src/string0.ml", 23, 909, 911), ("src/string0.ml", 23, 909, 975), 0), 0, Tag1 ("Base__String0", 2)), 0); (("unsafe_get", 1281), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -74), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -73), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), (("%string_unsafe_get", 2, 1, "", [0; 0], 0)), (("src/string0.ml", 25, 977, 979), ("src/string0.ml", 29, 1064, 1090), 0), 0, Tag1 ("Base__String0", 3)), 0); (("max_length", 1282), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -69), 0, (("src/string0.ml", 34, 1112, 1116), ("src/string0.ml", 34, 1112, 1126), 0), 0, Tag1 ("Base__String0", 5)), 0); (("^", 1283), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -68), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -67), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0, (("src/string0.ml", 35, 1151, 1155), ("src/string0.ml", 35, 1151, 1160), 0), 0, Tag1 ("Base__String0", 6)), 0); (("capitalize", 1284), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -63), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("src/string0.ml", 36, 1169, 1173), ("src/string0.ml", 36, 1169, 1183), 0), 0, Tag1 ("Base__String0", 7)), 0); (("compare", 1285), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import0"), "Stdlib"), "String"), "t"), 0, (0)), 100000000, 0, -60), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import0"), "Stdlib"), "String"), "t"), 0, (0)), 100000000, 0, -59), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("src/string0.ml", 37, 1217, 1221), ("src/string0.ml", 37, 1217, 1228), 0), 0, Tag1 ("Base__String0", 8)), 0); (("escaped", 1286), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -55), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("src/string0.ml", 38, 1253, 1257), ("src/string0.ml", 38, 1253, 1264), 0), 0, Tag1 ("Base__String0", 9)), 0); (("lowercase", 1287), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -52), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -51), 0), 100000000, 0, -50), 0, (("src/string0.ml", 39, 1289, 1293), ("src/string0.ml", 39, 1289, 1302), 0), 0, Tag1 ("Base__String0", 10)), 0); (("make", 1288), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -49), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -48), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -47), 0), 100000000, 0, -46), 0), 100000000, 0, -45), 0, (("src/string0.ml", 40, 1335, 1339), ("src/string0.ml", 40, 1335, 1343), 0), 0, Tag1 ("Base__String0", 11)), 0); (("sub", 1289), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -44), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -43), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -42), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("src/string0.ml", 41, 1365, 1369), ("src/string0.ml", 41, 1365, 1372), 0), 0, Tag1 ("Base__String0", 12)), 0); (("uncapitalize", 1290), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -37), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("src/string0.ml", 42, 1393, 1397), ("src/string0.ml", 42, 1393, 1409), 0), 0, Tag1 ("Base__String0", 13)), 0); (("unsafe_blit", 1291), ((Tag1 (("src"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -34), (Tag1 (("src_pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -33), (Tag1 (("dst"), (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -32), (Tag1 (("dst_pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -31), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -30), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("src/string0.ml", 43, 1445, 1449), ("src/string0.ml", 43, 1445, 1460), 0), 0, Tag1 ("Base__String0", 14)), 0); (("uppercase", 1292), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -23), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("src/string0.ml", 44, 1489, 1493), ("src/string0.ml", 44, 1489, 1502), 0), 0, Tag1 ("Base__String0", 15)), 0); (("split_on_char", 1293), ((Tag1 (("sep"), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -20), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -19), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -18)], (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("src/string0.ml", 45, 1535, 1539), ("src/string0.ml", 45, 1535, 1552), 0), 0, Tag1 ("Base__String0", 16)), 0); (("concat", 1294), ((Tag1 (Tag1 ("sep"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -14)], (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11)], (0)), 100000000, 0, -12), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("src/string0.ml", 47, 1584, 1588), ("src/string0.ml", 47, 1584, 1594), 0), 0, Tag1 ("Base__String0", 17)), 0); (("iter", 1295), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -7), ((0), 100000000, 0, -6), (1)), 100000000, 0, -5), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/string0.ml", 55, 1786, 1790), ("src/string0.ml", 55, 1786, 1794), 0), 0, Tag1 ("Base__String0", 24)), 0)], "Base__String0", [("Base__String0", ("\212\221L\220\245\255\162P\228\224\189\216\135H\149O")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__StringLabels", ("\134F\024\226\216Is#\223\230\234\169Z\206Gc")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__MoreLabels", ("\248\232\248\254`<\230\241\161U\193U\1466J\238")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shadow_stdlib", ("\219zi\164\203\158e)\232\221\196\168\138x\142\018")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Base__Sys0", ("\206z\231\154s\\\136\2364\131\005\014\031\152m3")); ("Base__Printf", ("\000\196c,\214\127\226\174\220\190\253z!\242\028\250")); ("Base__Poly0", ("\230;\143\234\255.H\132KOe7\155\\\023f")); ("Base__Import0", ("\156\129U\197Y[\\\153\017Ho\203\173\204\220\020")); ("Base__Bool0", ("\177f\254p\023\143&\239\020\136\206\242~\018F\251")); ("Base__", ("p\252\007\139\128\163W\025+\0225\001\246|P\158"))], [(0)])
val iter : string -> f:(char -> 'a) -> unit
