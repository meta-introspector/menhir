type t = {
  s : string;
  marks : Re__.Automata.mark_infos;
  pmarks : Re__.Pmark.Set.t;
  gpos : int array;
  gcount : int;
}
val get : t -> int -> string
val get_opt : t -> int -> string option
val offset : t -> int -> int * int
val start : t -> int -> int
val stop : t -> int -> int
val all : t -> string array
val all_offset : t -> (int * int) array
val test : t -> int -> bool
val nb_groups : t -> int("DEBUG:rule", [Tag1 (("t", 592), (0, 0, [[(("s", 284), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -53), (("lib/group.mli", 3, 45, 49), ("lib/group.mli", 6, 119, 122), 0), 0, Tag1 ("Re__Group", 1)); (("marks", 320), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Re__")), "Automata"), "mark_infos"), 0, (0)), 100000000, 0, -54), (("lib/group.mli", 6, 119, 123), ("lib/group.mli", 11, 349, 352), 0), 0, Tag1 ("Re__Group", 2)); (("pmarks", 378), 0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Re__")), "Pmark"), "Set"), "t"), 0, (0)), 100000000, 0, -55), (("lib/group.mli", 11, 349, 353), ("lib/group.mli", 14, 439, 442), 0), 0, Tag1 ("Re__Group", 3)); (("gpos", 379), 0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -57)], (0)), 100000000, 0, -56), (("lib/group.mli", 14, 439, 443), ("lib/group.mli", 21, 699, 702), 0), 0, Tag1 ("Re__Group", 4)); (("gcount", 380), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -58), (("lib/group.mli", 21, 699, 703), ("lib/group.mli", 21, 699, 715), 0), 0, Tag1 ("Re__Group", 5))]], 1, 0, 0, 0, 0, 0, (("lib/group.mli", 2, 36, 36), ("lib/group.mli", 23, 789, 792), 0), 0, 0, 0, Tag1 ("Re__Group", 0)), 1, 0); (("get", 593), ((Tag1 (0, (Tag3 ((("t", 592)), 0, (0)), 100000000, 0, -52), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -51), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("lib/group.mli", 27, 839, 839), ("lib/group.mli", 27, 839, 867), 0), 0, Tag1 ("Re__Group", 6)), 0); (("get_opt", 594), ((Tag1 (0, (Tag3 ((("t", 592)), 0, (0)), 100000000, 0, -47), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -46), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -45)], (0)), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("lib/group.mli", 30, 921, 921), ("lib/group.mli", 30, 921, 960), 0), 0, Tag1 ("Re__Group", 7)), 0); (("offset", 595), ((Tag1 (0, (Tag3 ((("t", 592)), 0, (0)), 100000000, 0, -41), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -40), (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -38); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -39)]), 100000000, 0, -37), 0), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("lib/group.mli", 33, 1041, 1041), ("lib/group.mli", 33, 1041, 1075), 0), 0, Tag1 ("Re__Group", 8)), 0); (("start", 596), ((Tag1 (0, (Tag3 ((("t", 592)), 0, (0)), 100000000, 0, -34), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -33), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("lib/group.mli", 36, 1129, 1129), ("lib/group.mli", 36, 1129, 1156), 0), 0, Tag1 ("Re__Group", 9)), 0); (("stop", 597), ((Tag1 (0, (Tag3 ((("t", 592)), 0, (0)), 100000000, 0, -29), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -28), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -27), 0), 100000000, 0, -26), 0), 100000000, 0, -25), 0, (("lib/group.mli", 39, 1242, 1242), ("lib/group.mli", 39, 1242, 1268), 0), 0, Tag1 ("Re__Group", 10)), 0); (("all", 598), ((Tag1 (0, (Tag3 ((("t", 592)), 0, (0)), 100000000, 0, -24), (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -23)], (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("lib/group.mli", 42, 1352, 1352), ("lib/group.mli", 42, 1352, 1379), 0), 0, Tag1 ("Re__Group", 11)), 0); (("all_offset", 599), ((Tag1 (0, (Tag3 ((("t", 592)), 0, (0)), 100000000, 0, -20), (Tag3 ((Tag3 ("array", 8)), [(Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -18); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -19)]), 100000000, 0, -17)], (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("lib/group.mli", 45, 1447, 1447), ("lib/group.mli", 45, 1447, 1486), 0), 0, Tag1 ("Re__Group", 12)), 0); (("test", 600), ((Tag1 (0, (Tag3 ((("t", 592)), 0, (0)), 100000000, 0, -14), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -13), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("lib/group.mli", 48, 1547, 1547), ("lib/group.mli", 48, 1547, 1574), 0), 0, Tag1 ("Re__Group", 13)), 0); (("nb_groups", 601), ((Tag1 (0, (Tag3 ((("t", 592)), 0, (0)), 100000000, 0, -9), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("lib/group.mli", 51, 1612, 1612), ("lib/group.mli", 51, 1612, 1636), 0), 0, Tag1 ("Re__Group", 14)), 0); (("pp", 602), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((("t", 592)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("lib/group.mli", 55, 1741, 1741), ("lib/group.mli", 55, 1741, 1779), 0), 0, Tag1 ("Re__Group", 15)), 0)], "Re__Group", [("Re__Group", ("\169\027s\209\158LV\024\180\151\183\186\152\145\127\240")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Re__Pmark", ("\165ks<XZ[\223&\136\255\140G\016\025p")); ("Re__Cset", ("\225r\195\178\225\254S\020 \207H\235\1795\0213")); ("Re__Category", ("\212tx\171G\0000\176\132_\219\135_o\135\016")); ("Re__Automata", ("\228y\t\192\135)\001\027\154pU\252\\wv\141")); ("Re__", ("\0062t\168b\007\236c5\231\253,\210\160Z\n")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val pp : Format.formatter -> t -> unit
