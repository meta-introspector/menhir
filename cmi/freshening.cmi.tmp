type t
type subst = t
val empty : t
val is_empty : t -> bool
val activate : t -> t
val empty_preserving_activation_state : t -> t
val add_variable : t -> Variable.t -> Variable.t * t
val add_variables' : t -> Variable.t list -> Variable.t list * t
val add_variables : t -> (Variable.t * 'a) list -> (Variable.t * 'a) list * t
val add_mutable_variable : t -> Mutable_variable.t -> Mutable_variable.t * t
val add_static_exception : t -> Static_exception.t -> Static_exception.t * t
val apply_variable : t -> Variable.t -> Variable.t
val apply_mutable_variable : t -> Mutable_variable.t -> Mutable_variable.t
val apply_static_exception : t -> Static_exception.t -> Static_exception.t
val rewrite_recursive_calls_with_symbols :
  t ->
  Flambda.function_declarations ->
  make_closure_symbol:(Closure_id.t -> Symbol.t) ->
  Flambda.function_declarations
module Project_var :
  sig
    type t
    val empty : t
    val compose : earlier:t -> later:t -> t
    val apply_closure_id : t -> Closure_id.t -> Closure_id.t
    val apply_var_within_closure :
      t -> Var_within_closure.t -> Var_within_closure.t
    val print : Format.formatter -> t -> unit
  end
val apply_function_decls_and_free_vars :
  t ->
  (Flambda.specialised_to * 'a) Variable.Map.t ->
  Flambda.function_declarations ->
  only_freshen_parameters:bool ->
  (Flambda.specialised_to * 'a) Variable.Map.t *
  Flambda.function_declarations * t * Project_var.t
val does_not_freshen : t -> Variable.t list -> bool
val print : Format.formatter -> t -> unit
val freshen_projection_relation :
  Flambda.specialised_to Variable.Map.t ->
  freshening:t ->
  closure_freshening:Project_var.t -> Flambda.specialised_to Variable.Map.t
val freshen_projection_relation' :
  (Flambda.specialised_to * 'a) Variable.Map.t ->
  freshening:t ->
  closure_freshening:Project_var.t ->
  ("DEBUG:rule", [Tag1 (("t", 920), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("middle_end/flambda/freshening.mli", 22, 1319, 1319), ("middle_end/flambda/freshening.mli", 22, 1319, 1325), 0), 0, 0, 0, Tag1 ("Freshening", 0)), 1, 0); Tag1 (("subst", 921), (0, 0, 0, 1, ((Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -128)), 0, 0, 0, 0, (("middle_end/flambda/freshening.mli", 23, 1326, 1326), ("middle_end/flambda/freshening.mli", 23, 1326, 1340), 0), 0, 0, 0, Tag1 ("Freshening", 1)), 1, 0); (("empty", 922), ((Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -127), 0, (("middle_end/flambda/freshening.mli", 27, 1428, 1428), ("middle_end/flambda/freshening.mli", 27, 1428, 1441), 0), 0, Tag1 ("Freshening", 2)), 0); (("is_empty", 923), ((Tag1 (0, (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -126), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -125), 0), 100000000, 0, -124), 0, (("middle_end/flambda/freshening.mli", 29, 1443, 1443), ("middle_end/flambda/freshening.mli", 29, 1443, 1467), 0), 0, Tag1 ("Freshening", 3)), 0); (("activate", 924), ((Tag1 (0, (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -123), (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -122), 0), 100000000, 0, -121), 0, (("middle_end/flambda/freshening.mli", 34, 1672, 1672), ("middle_end/flambda/freshening.mli", 34, 1672, 1693), 0), 0, Tag1 ("Freshening", 4)), 0); (("empty_preserving_activation_state", 925), ((Tag1 (0, (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -120), (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -119), 0), 100000000, 0, -118), 0, (("middle_end/flambda/freshening.mli", 38, 1800, 1800), ("middle_end/flambda/freshening.mli", 38, 1800, 1846), 0), 0, Tag1 ("Freshening", 5)), 0); (("add_variable", 926), ((Tag1 (0, (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -117), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Variable")), "t"), 0, (0)), 100000000, 0, -116), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Variable")), "t"), 0, (0)), 100000000, 0, -114); (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -115)]), 100000000, 0, -113), 0), 100000000, 0, -112), 0), 100000000, 0, -111), 0, (("middle_end/flambda/freshening.mli", 49, 2212, 2212), ("middle_end/flambda/freshening.mli", 49, 2212, 2264), 0), 0, Tag1 ("Freshening", 6)), 0); (("add_variables'", 927), ((Tag1 (0, (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -110), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Variable")), "t"), 0, (0)), 100000000, 0, -109)], (0)), 100000000, 0, -108), (Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Variable")), "t"), 0, (0)), 100000000, 0, -106)], (0)), 100000000, 0, -105); (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -107)]), 100000000, 0, -104), 0), 100000000, 0, -103), 0), 100000000, 0, -102), 0, (("middle_end/flambda/freshening.mli", 53, 2353, 2353), ("middle_end/flambda/freshening.mli", 56, 2400, 2424), 0), 0, Tag1 ("Freshening", 7)), 0); (("add_variables", 928), ((Tag1 (0, (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -101), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Variable")), "t"), 0, (0)), 100000000, 0, -100); ((("a")), 100000000, 0, -96)]), 100000000, 0, -99)], (0)), 100000000, 0, -98), (Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Variable")), "t"), 0, (0)), 100000000, 0, -95); ((("a")), 100000000, 0, -96)]), 100000000, 0, -94)], (0)), 100000000, 0, -93); (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -97)]), 100000000, 0, -92), 0), 100000000, 0, -91), 0), 100000000, 0, -90), 0, (("middle_end/flambda/freshening.mli", 60, 2529, 2529), ("middle_end/flambda/freshening.mli", 63, 2582, 2613), 0), 0, Tag1 ("Freshening", 8)), 0); (("add_mutable_variable", 929), ((Tag1 (0, (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -89), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Mutable_variable")), "t"), 0, (0)), 100000000, 0, -88), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Mutable_variable")), "t"), 0, (0)), 100000000, 0, -86); (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -87)]), 100000000, 0, -85), 0), 100000000, 0, -84), 0), 100000000, 0, -83), 0, (("middle_end/flambda/freshening.mli", 66, 2670, 2670), ("middle_end/flambda/freshening.mli", 66, 2670, 2746), 0), 0, Tag1 ("Freshening", 9)), 0); (("add_static_exception", 930), ((Tag1 (0, (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -82), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Static_exception")), "t"), 0, (0)), 100000000, 0, -81), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Static_exception")), "t"), 0, (0)), 100000000, 0, -79); (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -80)]), 100000000, 0, -78), 0), 100000000, 0, -77), 0), 100000000, 0, -76), 0, (("middle_end/flambda/freshening.mli", 69, 2816, 2816), ("middle_end/flambda/freshening.mli", 69, 2816, 2892), 0), 0, Tag1 ("Freshening", 10)), 0); (("apply_variable", 931), ((Tag1 (0, (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -75), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Variable")), "t"), 0, (0)), 100000000, 0, -74), (Tag3 (Tag1 ((Tag2 ("Variable")), "t"), 0, (0)), 100000000, 0, -73), 0), 100000000, 0, -72), 0), 100000000, 0, -71), 0, (("middle_end/flambda/freshening.mli", 73, 3036, 3036), ("middle_end/flambda/freshening.mli", 73, 3036, 3086), 0), 0, Tag1 ("Freshening", 11)), 0); (("apply_mutable_variable", 932), ((Tag1 (0, (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -70), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Mutable_variable")), "t"), 0, (0)), 100000000, 0, -69), (Tag3 (Tag1 ((Tag2 ("Mutable_variable")), "t"), 0, (0)), 100000000, 0, -68), 0), 100000000, 0, -67), 0), 100000000, 0, -66), 0, (("middle_end/flambda/freshening.mli", 76, 3147, 3147), ("middle_end/flambda/freshening.mli", 76, 3147, 3221), 0), 0, Tag1 ("Freshening", 12)), 0); (("apply_static_exception", 933), ((Tag1 (0, (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -65), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Static_exception")), "t"), 0, (0)), 100000000, 0, -64), (Tag3 (Tag1 ((Tag2 ("Static_exception")), "t"), 0, (0)), 100000000, 0, -63), 0), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("middle_end/flambda/freshening.mli", 79, 3293, 3293), ("middle_end/flambda/freshening.mli", 79, 3293, 3367), 0), 0, Tag1 ("Freshening", 13)), 0); (("rewrite_recursive_calls_with_symbols", 934), ((Tag1 (0, (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -60), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "function_declarations"), 0, (0)), 100000000, 0, -59), (Tag1 (("make_closure_symbol"), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Closure_id")), "t"), 0, (0)), 100000000, 0, -58), (Tag3 (Tag1 ((Tag2 ("Symbol")), "t"), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), (Tag3 (Tag1 ((Tag2 ("Flambda")), "function_declarations"), 0, (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0, (("middle_end/flambda/freshening.mli", 87, 3633, 3633), ("middle_end/flambda/freshening.mli", 91, 3768, 3802), 0), 0, Tag1 ("Freshening", 14)), 0); Tag3 (("Project_var", 935), 0, (Tag1 ([Tag1 (("t", 941), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("middle_end/flambda/freshening.mli", 114, 4684, 4686), ("middle_end/flambda/freshening.mli", 114, 4684, 4692), 0), 0, 0, 0, Tag1 ("Freshening", 15)), 1, 0); (("empty", 942), ((Tag3 ((("t", 941)), 0, (0)), 100000000, 0, -149), 0, (("middle_end/flambda/freshening.mli", 117, 4736, 4738), ("middle_end/flambda/freshening.mli", 117, 4736, 4751), 0), 0, Tag1 ("Freshening", 16)), 0); (("compose", 943), ((Tag1 (("earlier"), (Tag3 ((("t", 941)), 0, (0)), 100000000, 0, -148), (Tag1 (("later"), (Tag3 ((("t", 941)), 0, (0)), 100000000, 0, -147), (Tag3 ((("t", 941)), 0, (0)), 100000000, 0, -146), 0), 100000000, 0, -145), 0), 100000000, 0, -144), 0, (("middle_end/flambda/freshening.mli", 120, 4794, 4796), ("middle_end/flambda/freshening.mli", 120, 4794, 4835), 0), 0, Tag1 ("Freshening", 17)), 0); (("apply_closure_id", 944), ((Tag1 (0, (Tag3 ((("t", 941)), 0, (0)), 100000000, 0, -143), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Closure_id")), "t"), 0, (0)), 100000000, 0, -142), (Tag3 (Tag1 ((Tag2 ("Closure_id")), "t"), 0, (0)), 100000000, 0, -141), 0), 100000000, 0, -140), 0), 100000000, 0, -139), 0, (("middle_end/flambda/freshening.mli", 128, 5117, 5119), ("middle_end/flambda/freshening.mli", 128, 5117, 5175), 0), 0, Tag1 ("Freshening", 18)), 0); (("apply_var_within_closure", 945), ((Tag1 (0, (Tag3 ((("t", 941)), 0, (0)), 100000000, 0, -138), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Var_within_closure")), "t"), 0, (0)), 100000000, 0, -137), (Tag3 (Tag1 ((Tag2 ("Var_within_closure")), "t"), 0, (0)), 100000000, 0, -136), 0), 100000000, 0, -135), 0), 100000000, 0, -134), 0, (("middle_end/flambda/freshening.mli", 131, 5246, 5248), ("middle_end/flambda/freshening.mli", 134, 5314, 5341), 0), 0, Tag1 ("Freshening", 19)), 0); (("print", 946), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -133), (Tag1 (0, (Tag3 ((("t", 941)), 0, (0)), 100000000, 0, -132), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -131), 0), 100000000, 0, -130), 0), 100000000, 0, -129), 0, (("middle_end/flambda/freshening.mli", 136, 5343, 5345), ("middle_end/flambda/freshening.mli", 136, 5343, 5386), 0), 0, Tag1 ("Freshening", 20)), 0)]), 0, (("middle_end/flambda/freshening.mli", 95, 3934, 3934), ("middle_end/flambda/freshening.mli", 137, 5387, 5390), 0), Tag1 ("Freshening", 21)), 0, 0); (("apply_function_decls_and_free_vars", 936), ((Tag1 (0, (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -51), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Variable")), "Map"), "t"), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Flambda")), "specialised_to"), 0, (0)), 100000000, 0, -50); ((("a")), 100000000, 0, -42)]), 100000000, 0, -49)], (0)), 100000000, 0, -48), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Flambda")), "function_declarations"), 0, (0)), 100000000, 0, -47), (Tag1 (("only_freshen_parameters"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -46), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Variable")), "Map"), "t"), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Flambda")), "specialised_to"), 0, (0)), 100000000, 0, -41); ((("a")), 100000000, 0, -42)]), 100000000, 0, -40)], (0)), 100000000, 0, -39); (Tag3 (Tag1 ((Tag2 ("Flambda")), "function_declarations"), 0, (0)), 100000000, 0, -43); (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -44); (Tag3 (Tag1 ((("Project_var", 935)), "t"), 0, (0)), 100000000, 0, -45)]), 100000000, 0, -38), 0), 100000000, 0, -37), 0), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("middle_end/flambda/freshening.mli", 140, 5443, 5443), ("middle_end/flambda/freshening.mli", 148, 5702, 5721), 0), 0, Tag1 ("Freshening", 22)), 0); (("does_not_freshen", 937), ((Tag1 (0, (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -33), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Variable")), "t"), 0, (0)), 100000000, 0, -32)], (0)), 100000000, 0, -31), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("middle_end/flambda/freshening.mli", 150, 5723, 5723), ("middle_end/flambda/freshening.mli", 150, 5723, 5774), 0), 0, Tag1 ("Freshening", 23)), 0); (("print", 938), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -27), (Tag1 (0, (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -26), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("middle_end/flambda/freshening.mli", 152, 5776, 5776), ("middle_end/flambda/freshening.mli", 152, 5776, 5817), 0), 0, Tag1 ("Freshening", 24)), 0); (("freshen_projection_relation", 939), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Variable")), "Map"), "t"), [(Tag3 (Tag1 ((Tag2 ("Flambda")), "specialised_to"), 0, (0)), 100000000, 0, -22)], (0)), 100000000, 0, -21), (Tag1 (("freshening"), (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -20), (Tag1 (("closure_freshening"), (Tag3 (Tag1 ((("Project_var", 935)), "t"), 0, (0)), 100000000, 0, -19), (Tag3 (Tag1 (Tag1 ((Tag2 ("Variable")), "Map"), "t"), [(Tag3 (Tag1 ((Tag2 ("Flambda")), "specialised_to"), 0, (0)), 100000000, 0, -18)], (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("middle_end/flambda/freshening.mli", 157, 5954, 5954), ("middle_end/flambda/freshening.mli", 161, 6085, 6127), 0), 0, Tag1 ("Freshening", 25)), 0); (("freshen_projection_relation'", 940), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Variable")), "Map"), "t"), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Flambda")), "specialised_to"), 0, (0)), 100000000, 0, -13); ((("a")), 100000000, 0, -8)]), 100000000, 0, -12)], (0)), 100000000, 0, -11), (Tag1 (("freshening"), (Tag3 ((("t", 920)), 0, (0)), 100000000, 0, -10), (Tag1 (("closure_freshening"), (Tag3 (Tag1 ((("Project_var", 935)), "t"), 0, (0)), 100000000, 0, -9), (Tag3 (Tag1 (Tag1 ((Tag2 ("Variable")), "Map"), "t"), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Flambda")), "specialised_to"), 0, (0)), 100000000, 0, -7); ((("a")), 100000000, 0, -8)]), 100000000, 0, -6)], (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("middle_end/flambda/freshening.mli", 163, 6129, 6129), ("middle_end/flambda/freshening.mli", 167, 6268, 6317), 0), 0, Tag1 ("Freshening", 26)), 0)], "Freshening", [("Freshening", ("@\017\191q\232\253\236\139\131\160Z\000b\223\184\228")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Variable", ("\228'\154\1834\146\207\147+\193Aq\209h\190\220")); ("Var_within_closure", ("vQ\173\251u\026\012+}j\020C}T\151\220")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Tag", ("\252\157\132\005\195\228\232\133\246\237\233\224\012\143\192\218")); ("Symbol", ("\179q\177\031_\169\139a\192\019\188\000V\236\232\t")); ("Subst", ("\021\031\148\223\127\186\189\135\027}\145r\216\143\177\156")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Static_exception", ("2{#\175\226\185\147\146\176\140\029O\023p\024\\")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Set_of_closures_origin", ("$n\234\014\162\130\210K\171\btrA\244\254\195")); ("Set_of_closures_id", ("\178\228\011\028\027~\211\166\244\180\220-W\145_\243")); ("Projection", ("\250\207\030\021*\193\225\168\189!\224\228\192\212\236\224")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Parameter", ("*\152\238G\163\217\2377/\t\206\131\226\216K0")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Numbers", ("\004\020\227\212|\031Q6\146\217\211\156\221\234\254\195")); ("Mutable_variable", ("B^*^9`\212\152j\145_\017i.\128?")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Load_path", ("\012@\228l\230\164S\172h\1726X\020\252o}")); ("Linkage_name", ("\023\000\172\166 s\214\ns\155s\156\005\252\154\207")); ("Lambda", ("\180\1419\236'\146K$\128\006\135q\135V\029\180")); ("Internal_variable_names", ("\024|\208(\224\206\012\006\179\203\020\000\179\228\154\218")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("Flambda", ("\195J|\022>U\206!\211\212\185N\180zh\241")); ("Env", ("\021\n\181\142x\b\169j\227\"\017\248*\178\245\223")); ("Debuginfo", ("\131\251\175\217P\194M\163\022\151\002\005\006\185:\185")); ("Compilation_unit", ("\007\240\020\003jK\000\210\174\021\189.8^\028K")); ("Cmi_format", ("6\177\bU\139\"\023\152=\249\135\174\b\011Cg")); ("Closure_origin", ("G\222\200`\213\247\022M|O\1488\194\030\187\229")); ("Closure_id", ("k\221yCH\015\186G\246]\003\233\198\179\217A")); ("Closure_element", ("a\194\018\239D1\143{\156A\011\219H#\149A")); ("Clambda_primitives", ("\199\176\237Hv\205\152\14717\179\017\246\221x`")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216")); ("Allocated_const", ("\029\027.W\160\170!\199Q2\235\240\167\031,\004"))], [(0)])
(Flambda.specialised_to * 'a) Variable.Map.t
