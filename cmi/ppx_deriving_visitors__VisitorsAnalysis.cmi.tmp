type tycon = string
type tyvar = string
type tyvars = tyvar list
type classification = LIDENT | UIDENT | OTHER
val classify : string -> classification
val parse : string -> Ppxlib.longident
val is_valid_mod_longident : string -> bool
val is_valid_class_longident : string -> bool
val is_valid_method_name_prefix : string -> bool
val select :
  string -> Ppxlib.Parsetree.attributes -> Ppxlib.Parsetree.attribute option
val present : string -> Ppxlib.Parsetree.attributes -> bool
type opacity = Opaque | NonOpaque
val opacity : Ppxlib.Parsetree.attributes -> opacity
val identifier : string Ppx_deriving.Arg.conv
val name : Ppxlib.Parsetree.attributes -> string option
val build : Ppxlib.Parsetree.attributes -> Ppxlib.Parsetree.expression option
val maybe : 'a option -> 'a -> 'a
val paste :
  Ppxlib.Parsetree.core_type ->
  Ppxlib.Parsetree.attributes -> Ppxlib.Parsetree.core_type
val fix :
  Ppxlib.Parsetree.label_declaration list ->
  Ppxlib.Parsetree.label_declaration list
val type_param_to_tyvar :
  Ppxlib.Parsetree.core_type *
  (Ppxlib.Asttypes.variance * Ppxlib.Asttypes.injectivity) -> tyvar
val type_params_to_tyvars :
  (Ppxlib.Parsetree.core_type *
   (Ppxlib.Asttypes.variance * Ppxlib.Asttypes.injectivity))
  list -> tyvar list
val decl_params : Ppxlib.Parsetree.type_declaration -> tyvars
val is_local :
  Ppxlib.Parsetree.type_declaration list ->
  Ppxlib.Longident.t -> Ppxlib.Parsetree.type_declaration option
exception Occurs of Ppxlib.Ast_helper.loc
val occurs_type : tyvar -> Ppxlib.Parsetree.core_type -> unit
val occurs_types : tyvar -> Ppxlib.Parsetree.core_type list -> unit
val occurs_row_field : tyvar -> Ppxlib.Parsetree.row_field -> unit
val occurs_quantifiers : tyvar -> string list -> bool
val occurs_payload : tyvar -> Ppxlib.Parsetree.payload -> unit
val unsupported : Ppxlib.Parsetree.core_type -> 'a
val at_opaque :
  (Ppxlib.Parsetree.core_type -> unit) -> Ppxlib.Parsetree.core_type -> unit
val check_poly_under_opaque :
  tyvar list -> Ppxlib.Parsetree.core_type list -> unit
type substitution = tyvar -> Ppxlib.Parsetree.core_type
type renaming = tyvar -> tyvar
val subst_type :
  substitution -> Ppxlib.Parsetree.core_type -> Ppxlib.Parsetree.core_type
val subst_types :
  substitution ->
  Ppxlib.Parsetree.core_type list -> Ppxlib.Parsetree.core_type list
val rename_type :
  ("DEBUG:rule", [Tag1 (("tycon", 2764), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -143)), 0, 0, 0, 0, (("src/VisitorsAnalysis.ml", 13, 268, 268), ("src/VisitorsAnalysis.ml", 13, 268, 287), 0), 0, 0, 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 0)), 1, 0); Tag1 (("tyvar", 2765), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -142)), 0, 0, 0, 0, (("src/VisitorsAnalysis.ml", 14, 288, 288), ("src/VisitorsAnalysis.ml", 14, 288, 307), 0), 0, 0, 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 1)), 1, 0); Tag1 (("tyvars", 2766), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("tyvar", 2765)), 0, (0)), 100000000, 0, -141)], (0)), 100000000, 0, -140)), 0, 0, 0, 0, (("src/VisitorsAnalysis.ml", 15, 308, 308), ("src/VisitorsAnalysis.ml", 15, 308, 332), 0), 0, 0, 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 2)), 1, 0); Tag1 (("classification", 2767), (0, 0, Tag1 ([(("LIDENT", 1001), (0), 0, (("src/VisitorsAnalysis.ml", 36, 1216, 1218), ("src/VisitorsAnalysis.ml", 36, 1216, 1226), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 4)); (("UIDENT", 1002), (0), 0, (("src/VisitorsAnalysis.ml", 37, 1227, 1229), ("src/VisitorsAnalysis.ml", 37, 1227, 1237), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 5)); (("OTHER", 1003), (0), 0, (("src/VisitorsAnalysis.ml", 38, 1238, 1240), ("src/VisitorsAnalysis.ml", 38, 1238, 1247), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 6))], 0), 1, 0, 0, 0, 0, 0, (("src/VisitorsAnalysis.ml", 35, 1194, 1194), ("src/VisitorsAnalysis.ml", 38, 1238, 1247), 0), 0, 1, 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 3)), 1, 0); (("classify", 2768), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -139), (Tag3 ((("classification", 2767)), 0, (0)), 100000000, 0, -138), 0), 100000000, 0, -137), 0, (("src/VisitorsAnalysis.ml", 40, 1249, 1253), ("src/VisitorsAnalysis.ml", 40, 1249, 1261), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 7)), 0); (("parse", 2769), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -136), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "longident"), 0, (0)), 100000000, 0, -135), 0), 100000000, 0, -134), 0, (("src/VisitorsAnalysis.ml", 85, 2974, 2978), ("src/VisitorsAnalysis.ml", 85, 2974, 2983), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 21)), 0); (("is_valid_mod_longident", 2770), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -133), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -132), 0), 100000000, 0, -131), 0, (("src/VisitorsAnalysis.ml", 88, 3017, 3021), ("src/VisitorsAnalysis.ml", 88, 3017, 3043), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 23)), 0); (("is_valid_class_longident", 2771), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -130), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -129), 0), 100000000, 0, -128), 0, (("src/VisitorsAnalysis.ml", 98, 3374, 3378), ("src/VisitorsAnalysis.ml", 98, 3374, 3402), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 27)), 0); (("is_valid_method_name_prefix", 2772), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -127), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -126), 0), 100000000, 0, -125), 0, (("src/VisitorsAnalysis.ml", 113, 3838, 3842), ("src/VisitorsAnalysis.ml", 113, 3838, 3869), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 33)), 0); (("select", 2773), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -124), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "attributes"), 0, (0)), 100000000, 0, -123), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "attribute"), 0, (0)), 100000000, 0, -122)], (0)), 100000000, 0, -121), 0), 100000000, 0, -120), 0), 100000000, 0, -119), 0, (("src/VisitorsAnalysis.ml", 128, 4370, 4374), ("src/VisitorsAnalysis.ml", 128, 4370, 4380), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 35)), 0); (("present", 2774), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -118), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "attributes"), 0, (0)), 100000000, 0, -117), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -116), 0), 100000000, 0, -115), 0), 100000000, 0, -114), 0, (("src/VisitorsAnalysis.ml", 134, 4592, 4596), ("src/VisitorsAnalysis.ml", 134, 4592, 4603), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 38)), 0); Tag1 (("opacity", 2775), (0, 0, Tag1 ([(("Opaque", 2329), (0), 0, (("src/VisitorsAnalysis.ml", 140, 4788, 4790), ("src/VisitorsAnalysis.ml", 140, 4788, 4798), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 42)); (("NonOpaque", 2330), (0), 0, (("src/VisitorsAnalysis.ml", 141, 4799, 4801), ("src/VisitorsAnalysis.ml", 141, 4799, 4812), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 43))], 0), 1, 0, 0, 0, 0, 0, (("src/VisitorsAnalysis.ml", 139, 4773, 4773), ("src/VisitorsAnalysis.ml", 141, 4799, 4812), 0), 0, 1, 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 41)), 1, 0); (("opacity", 2776), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "attributes"), 0, (0)), 100000000, 0, -113), (Tag3 ((("opacity", 2775)), 0, (0)), 100000000, 0, -112), 0), 100000000, 0, -111), 0, (("src/VisitorsAnalysis.ml", 143, 4814, 4818), ("src/VisitorsAnalysis.ml", 143, 4814, 4825), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 44)), 0); (("identifier", 2777), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Ppx_deriving")), "Arg"), "conv"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -110)], (0)), 100000000, 0, -109), 0, (("src/VisitorsAnalysis.ml", 151, 5161, 5165), ("src/VisitorsAnalysis.ml", 151, 5161, 5175), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 46)), 0); (("name", 2778), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "attributes"), 0, (0)), 100000000, 0, -108), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -107)], (0)), 100000000, 0, -106), 0), 100000000, 0, -105), 0, (("src/VisitorsAnalysis.ml", 163, 5413, 5417), ("src/VisitorsAnalysis.ml", 163, 5413, 5421), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 50)), 0); (("build", 2779), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "attributes"), 0, (0)), 100000000, 0, -104), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -103)], (0)), 100000000, 0, -102), 0), 100000000, 0, -101), 0, (("src/VisitorsAnalysis.ml", 169, 5656, 5660), ("src/VisitorsAnalysis.ml", 169, 5656, 5665), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 52)), 0); (("maybe", 2780), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -99)], (0)), 100000000, 0, -100), (Tag1 (0, ((("a")), 100000000, 0, -99), ((("a")), 100000000, 0, -99), 0), 100000000, 0, -98), 0), 100000000, 0, -97), 0, (("src/VisitorsAnalysis.ml", 174, 5832, 5836), ("src/VisitorsAnalysis.ml", 174, 5832, 5841), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 54)), 0); (("paste", 2781), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -96), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "attributes"), 0, (0)), 100000000, 0, -95), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -94), 0), 100000000, 0, -93), 0), 100000000, 0, -92), 0, (("src/VisitorsAnalysis.ml", 185, 6361, 6365), ("src/VisitorsAnalysis.ml", 185, 6361, 6370), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 58)), 0); (("fix", 2782), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "label_declaration"), 0, (0)), 100000000, 0, -91)], (0)), 100000000, 0, -90), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "label_declaration"), 0, (0)), 100000000, 0, -89)], (0)), 100000000, 0, -88), 0), 100000000, 0, -87), 0, (("src/VisitorsAnalysis.ml", 191, 6600, 6604), ("src/VisitorsAnalysis.ml", 191, 6600, 6607), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 63)), 0); (("type_param_to_tyvar", 2783), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -83); (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Asttypes"), "variance"), 0, (0)), 100000000, 0, -85); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Asttypes"), "injectivity"), 0, (0)), 100000000, 0, -86)]), 100000000, 0, -84)]), 100000000, 0, -82), (Tag3 ((("tyvar", 2765)), 0, (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0, (("src/VisitorsAnalysis.ml", 200, 6869, 6873), ("src/VisitorsAnalysis.ml", 200, 6869, 6892), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 64)), 0); (("type_params_to_tyvars", 2784), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -76); (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Asttypes"), "variance"), 0, (0)), 100000000, 0, -78); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Asttypes"), "injectivity"), 0, (0)), 100000000, 0, -79)]), 100000000, 0, -77)]), 100000000, 0, -75)], (0)), 100000000, 0, -74), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("tyvar", 2765)), 0, (0)), 100000000, 0, -73)], (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0, (("src/VisitorsAnalysis.ml", 213, 7367, 7371), ("src/VisitorsAnalysis.ml", 213, 7367, 7392), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 67)), 0); (("decl_params", 2785), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -70), (Tag3 ((("tyvars", 2766)), 0, (0)), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("src/VisitorsAnalysis.ml", 218, 7508, 7512), ("src/VisitorsAnalysis.ml", 218, 7508, 7523), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 68)), 0); (("is_local", 2786), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -67)], (0)), 100000000, 0, -66), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Longident"), "t"), 0, (0)), 100000000, 0, -65), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -64)], (0)), 100000000, 0, -63), 0), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("src/VisitorsAnalysis.ml", 236, 8033, 8037), ("src/VisitorsAnalysis.ml", 236, 8033, 8045), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 75)), 0); Tag2 (("Occurs", 2787), ((Tag3 ("exn", 7)), 0, ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Ast_helper"), "loc"), 0, (0)), 100000000, 0, -60)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 79)), 2, 0); (("occurs_type", 2788), ((Tag1 (0, (Tag3 ((("tyvar", 2765)), 0, (0)), 100000000, 0, -43), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -57), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("src/VisitorsAnalysis.ml", 253, 8536, 8544), ("src/VisitorsAnalysis.ml", 253, 8536, 8555), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 80)), 0); (("occurs_types", 2789), ((Tag1 (0, (Tag3 ((("tyvar", 2765)), 0, (0)), 100000000, 0, -43), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -57)], (0)), 100000000, 0, -56), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -52), 0), 100000000, 0, -55), 0), 100000000, 0, -54), 0, (("src/VisitorsAnalysis.ml", 285, 9614, 9618), ("src/VisitorsAnalysis.ml", 285, 9614, 9630), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 81)), 0); (("occurs_row_field", 2790), ((Tag1 (0, (Tag3 ((("tyvar", 2765)), 0, (0)), 100000000, 0, -43), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "row_field"), 0, (0)), 100000000, 0, -53), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0), 100000000, 0, -50), 0, (("src/VisitorsAnalysis.ml", 288, 9680, 9684), ("src/VisitorsAnalysis.ml", 288, 9680, 9700), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 82)), 0); (("occurs_quantifiers", 2791), ((Tag1 (0, (Tag3 ((("tyvar", 2765)), 0, (0)), 100000000, 0, -49), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -48)], (0)), 100000000, 0, -47), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("src/VisitorsAnalysis.ml", 293, 9799, 9803), ("src/VisitorsAnalysis.ml", 293, 9799, 9821), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 83)), 0); (("occurs_payload", 2792), ((Tag1 (0, (Tag3 ((("tyvar", 2765)), 0, (0)), 100000000, 0, -43), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "payload"), 0, (0)), 100000000, 0, -42), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("src/VisitorsAnalysis.ml", 296, 9870, 9874), ("src/VisitorsAnalysis.ml", 296, 9870, 9888), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 84)), 0); (("unsupported", 2793), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -38), ((0), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("src/VisitorsAnalysis.ml", 310, 10264, 10268), ("src/VisitorsAnalysis.ml", 310, 10264, 10279), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 108)), 0); (("at_opaque", 2794), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -35), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -34), 0), 100000000, 0, -33), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -32), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("src/VisitorsAnalysis.ml", 323, 10641, 10649), ("src/VisitorsAnalysis.ml", 323, 10641, 10658), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 111)), 0); (("check_poly_under_opaque", 2795), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("tyvar", 2765)), 0, (0)), 100000000, 0, -28)], (0)), 100000000, 0, -27), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -26)], (0)), 100000000, 0, -25), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("src/VisitorsAnalysis.ml", 348, 11434, 11438), ("src/VisitorsAnalysis.ml", 348, 11434, 11461), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 115)), 0); Tag1 (("substitution", 2796), (0, 0, 0, 1, ((Tag1 (0, (Tag3 ((("tyvar", 2765)), 0, (0)), 100000000, 0, -21), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -20), 0), 100000000, 0, -19)), 0, 0, 0, 0, (("src/VisitorsAnalysis.ml", 376, 12377, 12377), ("src/VisitorsAnalysis.ml", 377, 12397, 12417), 0), 0, 0, 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 122)), 1, 0); Tag1 (("renaming", 2797), (0, 0, 0, 1, ((Tag1 (0, (Tag3 ((("tyvar", 2765)), 0, (0)), 100000000, 0, -18), (Tag3 ((("tyvar", 2765)), 0, (0)), 100000000, 0, -17), 0), 100000000, 0, -16)), 0, 0, 0, 0, (("src/VisitorsAnalysis.ml", 379, 12419, 12419), ("src/VisitorsAnalysis.ml", 380, 12435, 12451), 0), 0, 0, 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 123)), 1, 0); (("subst_type", 2798), ((Tag1 (0, (Tag3 ((("substitution", 2796)), 0, (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -12), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("src/VisitorsAnalysis.ml", 382, 12453, 12461), ("src/VisitorsAnalysis.ml", 382, 12453, 12471), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 124)), 0); (("subst_types", 2799), ((Tag1 (0, (Tag3 ((("substitution", 2796)), 0, (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -12)], (0)), 100000000, 0, -11), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -10)], (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("src/VisitorsAnalysis.ml", 404, 13171, 13175), ("src/VisitorsAnalysis.ml", 404, 13171, 13186), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 125)), 0); (("rename_type", 2800), ((Tag1 (0, (Tag3 ((("renaming", 2797)), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -5), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/VisitorsAnalysis.ml", 407, 13234, 13238), ("src/VisitorsAnalysis.ml", 407, 13234, 13249), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsAnalysis", 134)), 0)], "Ppx_deriving_visitors__VisitorsAnalysis", [("Ppx_deriving_visitors__VisitorsAnalysis", ("`(\136\006 W0<\254\192\165*\152i\222J")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Subst", ("\021\031\148\223\127\186\189\135\027}\145r\216\143\177\156")); ("Stdppx", ("=:\209>\156\207\149\181\248\131\161P-\254\025q")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__StringLabels", ("\134F\024\226\216Is#\223\230\234\169Z\206Gc")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Result", ("\247h\157\021\029a\144\199*\186Z\162\225\241\160>")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__ListLabels", ("*\194\012\191\020%\170\249m\002\180\178hk\205\220")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Char", ("\1794\1468\190\138\150g\231\240\140d\191.\212e")); ("Stdlib__BytesLabels", ("\145\128\000\239\186Z.\0310^\247\201\174\\\137R")); ("Stdlib__Bytes", ("C\134\194)\175\222\137p\205\246\244\r\241\164P\209")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib__Arg", ("\024%=\206\198p\149Y\007\004\216,&\254#\207")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("Result", ("\225\173Z\0275W\148\2128;1\210$;\127\130")); ("Profile", ("\201i\132?<qM\169\011\239@\142\202\182\023,")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Ppxlib_traverse_builtins", ("\237\218tx\250&^T{\197#\019<\250_\r")); ("Ppxlib_ast__Versions", ("\005+\189\023\165C\208\138FX6X\224\005\223\t")); ("Ppxlib_ast__Import", ("\027\222\n&\137\144M\230R\150g=Y\198\007\233")); ("Ppxlib_ast__Ast_helper_lite", ("\182\200X/\012\170l3W`\200\143\002`\232\016")); ("Ppxlib_ast__Ast", ("?\026\134=\154d\183u\023\212\177\192\b]\250E")); ("Ppxlib_ast__", ("\182{\159J6;\249\149\208}`\139\002r\020x")); ("Ppxlib_ast", ("\002y:\229,^V\247~U\236~\232\131I\154")); ("Ppxlib__Utils", ("l\219q\2089\252\011\193\194^N&B\192T\223")); ("Ppxlib__Name", ("\202C\151nm\153EG\200\214[;s!)\140")); ("Ppxlib__Longident", ("\236#\230\012\180\203D\156\209\2282-p1H\132")); ("Ppxlib__Location", ("\r\139A\176n\135\029#\213\194&\153}\132\b\193")); ("Ppxlib__Loc", ("\183\208\004g\131\162\223\177\235#:\182\128\020\166\155")); ("Ppxlib__Import", ("\146|\185\205\005c\141\174\165\006\1517\177}\\\241")); ("Ppxlib__Expansion_context", ("\210<\144_\134\203\172\219N:6H\156{\220U")); ("Ppxlib__Common", (">S\244L\148\145\200\134\1298\249\200b\014\193\147")); ("Ppxlib__Code_path", ("\029\211r\143\213`\240\244{Na\007Ii^J")); ("Ppxlib__Attribute", ("\162~~\178\183\027\245`\231\215\181\235qHm\b")); ("Ppxlib__Ast_traverse0", ("r\177\171e\003\155\241]D\149FKy\174\023\225")); ("Ppxlib__Ast_traverse", ("B\b\r\176z\\s\1809\129\156\127?\011Qo")); ("Ppxlib__Ast_pattern_generated", (":\216\170\153\005\218jM\167\138\2111!\b\020K")); ("Ppxlib__Ast_pattern0", ("\255\203\196\229\159\201Q*\230\238\"\198(Q\154\029")); ("Ppxlib__Ast_pattern", ("\023,&Ow\159\019\144Rw\158\143\213Mo\203")); ("Ppxlib__", ("JQ\224\000Y\175_]O\b\254O\194|\017\237")); ("Ppxlib", ("\216\128\187K\006\011\165\149s\168&\180\1515\181\007")); ("Ppx_deriving_visitors__VisitorsPlugin", ("\188kHA\003\014V\209,\182\128\166`\222\209\200")); ("Ppx_deriving_visitors__VisitorsCompatibility", ("\017\167\198\004\130\005\190@\022;n#Y\233H\157")); ("Ppx_deriving_visitors", ("/!\175S+\022\138\236\145s\178S\251\157\240g")); ("Ppx_deriving", ("\025\185\015\004\002\175\183\127y_!\192\2077\234_")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Parser", ("7'\1782\253\248\214\163]8\227\231&\145\183;")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Ocaml_shadow", ("\148\171\169\197\t\188z\207\155\180N\151 \195\173\206")); ("Ocaml_common", ("1\212\195\020\163\232\187\142G\192\221\180@\1278u")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Load_path", ("\012@\228l\230\164S\172h\1726X\020\252o}")); ("Lexer", ("d\166[g\003\193p\201\147\190pL\152^\136A")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("Env", ("\021\n\181\142x\b\169j\227\"\017\248*\178\245\223")); ("Docstrings", ("\216\171\176\031*\203\162\186%\175\201qq\189\139U")); ("Compmisc", ("B\127\\\174\004T\179\002\242}-C\214\152H*")); ("Cmi_format", ("6\177\bU\139\"\023\152=\249\135\174\b\011Cg")); ("Clflags", ("\162v\193G\199E|\029\023{\b\243]B\144;")); ("CamlinternalMenhirLib", ("\171m\238\135\252\210\222v\200\202\178\241L\143\025\153")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216")); ("Astlib__Parse", ("\203iQ\135d.\147$\t\207\203C\131\175\193\171")); ("Astlib__Longident", ("\n\192\233\142\177n\225\191\238\161#\150\204n\"Y")); ("Astlib__Location", ("nn\153\250\162\2239\215\129\229e\026xg\000U")); ("Astlib__Ast_501", ("\207\"A\188\024\242Q\223\153\146\239\128\168h\148&")); ("Astlib__Ast_500", ("\202\202\240\178Ep\168 [f\246\t\162T\141\254")); ("Astlib__Ast_414", ("i\179p\208\134r\2177\243\167\157nF\235\143\179")); ("Astlib__Ast_413", ("\240P\019\205\016\157\177\177O)\172\193\028\192\011\190")); ("Astlib__Ast_412", (">\181S\020\t\004\1998\163p\025\210s\216\251\169")); ("Astlib__Ast_411", ("\030\186y\191\005D\180nv\183\b@1\225\168+")); ("Astlib__Ast_410", ("\023\030O]m0\005\214X\n/\226c\201\214\232")); ("Astlib__Ast_409", ("P\147I\234\185H\181\153\207\221\003\165\139\161\150\027")); ("Astlib__Ast_408", ("\225\220%%\162\188\006W\007\252\001X\158\165,\004")); ("Astlib__Ast_407", ("\163\202\2018`\230bGY\138/\021'\148:\018")); ("Astlib__Ast_406", ("v\152\031Q\232\244\141\011p\012\161\164hy\203\151")); ("Astlib__Ast_405", ("\145;\017\238\241\127\173z\138\142Q4>\198\186\207")); ("Astlib__Ast_404", ("I\027\143Zr\250\2468\193\167uOo\029\236\148")); ("Astlib__Ast_403", ("\206M\242\247\155X\251\127\002Ly\024\154\245\153\180")); ("Astlib__Ast_402", ("\178]\161\230\193\144:\005/\\~\127'|\207\189")); ("Astlib__", ("\246\155.n\143$\1435\bi\005\019C\219\191A")); ("Astlib", ("\002*Xp\193\003\201C\234Q\143\029\232\1569\007"))], [(0)])
renaming -> Ppxlib.Parsetree.core_type -> Ppxlib.Parsetree.core_type
