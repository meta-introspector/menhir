module Make :
  functor (F : Vendored_fix__.Sigs.FINITE_TYPE)
    (M : sig
           type key = F.t
           type 'data t
           val create : unit -> 'data t
           val add : key -> 'data -> 'data t -> unit
           val find : key -> 'data t -> 'data
         end)
    -> sig type key = F.t val tabulate : (key -> 'a) -> key -> 'a end
module ForOrderedType :
  functor (F : Vendored_fix__.Sigs.FINITE_TYPE)
    (T : sig type t = F.t val compare : t -> t -> int end) ->
    sig type key = F.t val tabulate : (key -> 'a) -> key -> 'a end
module ForHashedType :
  functor (F : Vendored_fix__.Sigs.FINITE_TYPE)
    (T : sig type t = F.t val equal : t -> t -> bool val hash : t -> int end)
    -> sig type key = F.t val tabulate : (key -> 'a) -> key -> 'a end
module ForType :
  functor (F : Vendored_fix__.Sigs.FINITE_TYPE) ->
    sig type key = F.t val tabulate : (key -> 'a) -> key -> 'a end
module ForIntSegment :
  functor (K : sig val n : int end) ->
    ("DEBUG:rule", [Tag3 (("Make", 489), 0, (Tag2 (((("F", 500)), (Tag1 (Tag1 ((Tag2 ("Vendored_fix__")), "Sigs"), "FINITE_TYPE"))), Tag2 (((("M", 501)), Tag1 ([Tag1 (("key", 502), (0, 0, 0, 1, ((Tag3 (Tag1 ((("F", 500)), "t"), 0, (0)), 100000000, 0, -19)), 0, 0, 0, 0, (("fix/src/Tabulate.mli", 24, 1272, 1308), ("fix/src/Tabulate.mli", 24, 1272, 1322), 0), 0, 0, 0, Tag1 ("Vendored_fix__Tabulate", 1)), 1, 0); Tag1 (("t", 503), ([((("data")), 100000000, 0, -18)], 1, 0, 1, 0, [7], [2], 0, 0, (("fix/src/Sigs.ml", 71, 2534, 2536), ("fix/src/Sigs.ml", 71, 2534, 2548), 0), 0, 0, 0, Tag1 ("Vendored_fix__Sigs", 15)), 1, 0); (("create", 504), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -17), (Tag3 ((("t", 503)), [((("data")), 100000000, 0, -16)], (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("fix/src/Sigs.ml", 72, 2549, 2551), ("fix/src/Sigs.ml", 72, 2549, 2578), 0), 0, Tag1 ("Vendored_fix__Sigs", 16)), 0); (("add", 505), ((Tag1 (0, (Tag3 ((("key", 502)), 0, (0)), 100000000, 0, -13), (Tag1 (0, ((("data")), 100000000, 0, -12), (Tag1 (0, (Tag3 ((("t", 503)), [((("data")), 100000000, 0, -12)], (0)), 100000000, 0, -11), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("fix/src/Sigs.ml", 73, 2579, 2581), ("fix/src/Sigs.ml", 73, 2579, 2621), 0), 0, Tag1 ("Vendored_fix__Sigs", 17)), 0); (("find", 506), ((Tag1 (0, (Tag3 ((("key", 502)), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((("t", 503)), [((("data")), 100000000, 0, -4)], (0)), 100000000, 0, -5), ((("data")), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("fix/src/Sigs.ml", 74, 2622, 2624), ("fix/src/Sigs.ml", 74, 2622, 2657), 0), 0, Tag1 ("Vendored_fix__Sigs", 18)), 0)])), Tag1 ([Tag1 (("key", 507), (0, 0, 0, 1, ((Tag3 (Tag1 ((("F", 500)), "t"), 0, (0)), 100000000, 0, -26)), 0, 0, 0, 0, (("fix/src/Tabulate.mli", 25, 1324, 1346), ("fix/src/Tabulate.mli", 25, 1324, 1360), 0), 0, 0, 0, Tag1 ("Vendored_fix__Tabulate", 3)), 1, 0); (("tabulate", 508), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 507)), 0, (0)), 100000000, 0, -25), ((("a")), 100000000, 0, -22), 0), 100000000, 0, -24), (Tag1 (0, (Tag3 ((("key", 507)), 0, (0)), 100000000, 0, -23), ((("a")), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("fix/src/Sigs.ml", 194, 7110, 7112), ("fix/src/Sigs.ml", 194, 7110, 7152), 0), 0, Tag1 ("Vendored_fix__Sigs", 46)), 0)]))), 0, (("fix/src/Tabulate.mli", 22, 1240, 1240), ("fix/src/Tabulate.mli", 25, 1324, 1360), 0), Tag1 ("Vendored_fix__Tabulate", 4)), 0, 0); Tag3 (("ForOrderedType", 490), 0, (Tag2 (((("F", 498)), (Tag1 (Tag1 ((Tag2 ("Vendored_fix__")), "Sigs"), "FINITE_TYPE"))), Tag2 (((("T", 499)), Tag1 ([Tag1 (("t", 509), (0, 0, 0, 1, ((Tag3 (Tag1 ((("F", 498)), "t"), 0, (0)), 100000000, 0, -32)), 0, 0, 0, 0, (("fix/src/Tabulate.mli", 33, 1585, 1609), ("fix/src/Tabulate.mli", 33, 1585, 1621), 0), 0, 0, 0, Tag1 ("Vendored_fix__Tabulate", 6)), 1, 0); (("compare", 510), ((Tag1 (0, (Tag3 ((("t", 509)), 0, (0)), 100000000, 0, -31), (Tag1 (0, (Tag3 ((("t", 509)), 0, (0)), 100000000, 0, -30), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("map.mli", 54, 2272, 2276), ("map.mli", 54, 2272, 2303), 0), 0, Tag1 ("Stdlib__Map", 1)), 0)])), Tag1 ([Tag1 (("key", 511), (0, 0, 0, 1, ((Tag3 (Tag1 ((("F", 498)), "t"), 0, (0)), 100000000, 0, -39)), 0, 0, 0, 0, (("fix/src/Tabulate.mli", 34, 1623, 1645), ("fix/src/Tabulate.mli", 34, 1623, 1659), 0), 0, 0, 0, Tag1 ("Vendored_fix__Tabulate", 8)), 1, 0); (("tabulate", 512), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 511)), 0, (0)), 100000000, 0, -38), ((("a")), 100000000, 0, -35), 0), 100000000, 0, -37), (Tag1 (0, (Tag3 ((("key", 511)), 0, (0)), 100000000, 0, -36), ((("a")), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0, (("fix/src/Sigs.ml", 194, 7110, 7112), ("fix/src/Sigs.ml", 194, 7110, 7152), 0), 0, Tag1 ("Vendored_fix__Sigs", 46)), 0)]))), 0, (("fix/src/Tabulate.mli", 31, 1543, 1543), ("fix/src/Tabulate.mli", 34, 1623, 1659), 0), Tag1 ("Vendored_fix__Tabulate", 9)), 0, 0); Tag3 (("ForHashedType", 491), 0, (Tag2 (((("F", 496)), (Tag1 (Tag1 ((Tag2 ("Vendored_fix__")), "Sigs"), "FINITE_TYPE"))), Tag2 (((("T", 497)), Tag1 ([Tag1 (("t", 513), (0, 0, 0, 1, ((Tag3 (Tag1 ((("F", 496)), "t"), 0, (0)), 100000000, 0, -48)), 0, 0, 0, 0, (("fix/src/Tabulate.mli", 42, 1882, 1905), ("fix/src/Tabulate.mli", 42, 1882, 1917), 0), 0, 0, 0, Tag1 ("Vendored_fix__Tabulate", 11)), 1, 0); (("equal", 514), ((Tag1 (0, (Tag3 ((("t", 513)), 0, (0)), 100000000, 0, -47), (Tag1 (0, (Tag3 ((("t", 513)), 0, (0)), 100000000, 0, -46), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("hashtbl.mli", 350, 14326, 14330), ("hashtbl.mli", 350, 14326, 14356), 0), 0, Tag1 ("Stdlib__Hashtbl", 32)), 0); (("hash", 515), ((Tag1 (0, (Tag3 ((("t", 513)), 0, (0)), 100000000, 0, -42), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("hashtbl.mli", 353, 14414, 14418), ("hashtbl.mli", 353, 14414, 14437), 0), 0, Tag1 ("Stdlib__Hashtbl", 33)), 0)])), Tag1 ([Tag1 (("key", 516), (0, 0, 0, 1, ((Tag3 (Tag1 ((("F", 496)), "t"), 0, (0)), 100000000, 0, -55)), 0, 0, 0, 0, (("fix/src/Tabulate.mli", 43, 1919, 1941), ("fix/src/Tabulate.mli", 43, 1919, 1955), 0), 0, 0, 0, Tag1 ("Vendored_fix__Tabulate", 13)), 1, 0); (("tabulate", 517), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 516)), 0, (0)), 100000000, 0, -54), ((("a")), 100000000, 0, -51), 0), 100000000, 0, -53), (Tag1 (0, (Tag3 ((("key", 516)), 0, (0)), 100000000, 0, -52), ((("a")), 100000000, 0, -51), 0), 100000000, 0, -50), 0), 100000000, 0, -49), 0, (("fix/src/Sigs.ml", 194, 7110, 7112), ("fix/src/Sigs.ml", 194, 7110, 7152), 0), 0, Tag1 ("Vendored_fix__Sigs", 46)), 0)]))), 0, (("fix/src/Tabulate.mli", 40, 1841, 1841), ("fix/src/Tabulate.mli", 43, 1919, 1955), 0), Tag1 ("Vendored_fix__Tabulate", 14)), 0, 0); Tag3 (("ForType", 492), 0, (Tag2 (((("F", 495)), (Tag1 (Tag1 ((Tag2 ("Vendored_fix__")), "Sigs"), "FINITE_TYPE"))), Tag1 ([Tag1 (("key", 518), (0, 0, 0, 1, ((Tag3 (Tag1 ((("F", 495)), "t"), 0, (0)), 100000000, 0, -62)), 0, 0, 0, 0, (("fix/src/Tabulate.mli", 50, 2174, 2196), ("fix/src/Tabulate.mli", 50, 2174, 2210), 0), 0, 0, 0, Tag1 ("Vendored_fix__Tabulate", 16)), 1, 0); (("tabulate", 519), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 518)), 0, (0)), 100000000, 0, -61), ((("a")), 100000000, 0, -58), 0), 100000000, 0, -60), (Tag1 (0, (Tag3 ((("key", 518)), 0, (0)), 100000000, 0, -59), ((("a")), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("fix/src/Sigs.ml", 194, 7110, 7112), ("fix/src/Sigs.ml", 194, 7110, 7152), 0), 0, Tag1 ("Vendored_fix__Sigs", 46)), 0)])), 0, (("fix/src/Tabulate.mli", 49, 2141, 2141), ("fix/src/Tabulate.mli", 50, 2174, 2210), 0), Tag1 ("Vendored_fix__Tabulate", 17)), 0, 0); Tag3 (("ForIntSegment", 493), 0, (Tag2 (((("K", 494)), Tag1 ([(("n", 520), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -63), 0, (("fix/src/Tabulate.mli", 56, 2353, 2364), ("fix/src/Tabulate.mli", 56, 2353, 2374), 0), 0, Tag1 ("Vendored_fix__Tabulate", 18)), 0)])), Tag1 ([Tag1 (("key", 521), (0, 0, 0, 1, ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -70)), 0, 0, 0, 0, (("fix/src/Tabulate.mli", 57, 2380, 2402), ("fix/src/Tabulate.mli", 57, 2380, 2416), 0), 0, 1, 0, Tag1 ("Vendored_fix__Tabulate", 20)), 1, 0); (("tabulate", 522), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 521)), 0, (0)), 100000000, 0, -69), ((("a")), 100000000, 0, -66), 0), 100000000, 0, -68), (Tag1 (0, (Tag3 ((("key", 521)), 0, (0)), 100000000, 0, -67), ((("a")), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0, (("fix/src/Sigs.ml", 194, 7110, 7112), ("fix/src/Sigs.ml", 194, 7110, 7152), 0), 0, Tag1 ("Vendored_fix__Sigs", 46)), 0)])), 0, (("fix/src/Tabulate.mli", 55, 2332, 2332), ("fix/src/Tabulate.mli", 57, 2380, 2416), 0), Tag1 ("Vendored_fix__Tabulate", 21)), 0, 0)], "Vendored_fix__Tabulate", [("Vendored_fix__Tabulate", ("pm\1649\150}G\004\148\127e<\144\156N\156")); ("Vendored_fix__Sigs", ("a{\193\210\184\138\163\252\132\135.\2156meu")); ("Vendored_fix__", ("\r\196g\002\180\221\139\252\200\240t\184\171.K\020")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
sig type key = int val tabulate : (key -> 'a) -> key -> 'a end
