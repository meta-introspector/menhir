type __ = Obj.t
type unit0 = Tt
val negb : bool -> bool
type nat = O | S of nat
type ('a, 'b) sum = Inl of 'a | Inr of 'b
val fst : 'a1 * 'a2 -> 'a1
val snd : 'a1 * 'a2 -> 'a2
val app : 'a1 list -> 'a1 list -> 'a1 list
type comparison = Eq | Lt | Gt
val compOpp : comparison -> comparison
val add : nat -> nat -> nat
val nth : nat -> 'a1 list -> 'a1 -> 'a1
val rev_append : 'a1 list -> 'a1 list -> 'a1 list
val map : ('a1 -> 'a2) -> 'a1 list -> 'a2 list
val fold_left : ('a1 -> 'a2 -> 'a1) -> 'a2 list -> 'a1 -> 'a1
val fold_right : ('a2 -> 'a1 -> 'a1) -> 'a1 -> 'a2 list -> 'a1
type positive = XI of positive | XO of positive | XH
type n = N0 | Npos of positive
type z = Z0 | Zpos of positive | Zneg of positive
module Pos : sig type mask = IsNul | IsPos of positive | IsNeg end
module Coq_Pos :
  sig
    val succ : positive -> positive
    val add : positive -> positive -> positive
    val add_carry : positive -> positive -> positive
    val pred_double : positive -> positive
    type mask = Pos.mask = IsNul | IsPos of positive | IsNeg
    val succ_double_mask : mask -> mask
    val double_mask : mask -> mask
    val double_pred_mask : positive -> mask
    val sub_mask : positive -> positive -> mask
    val sub_mask_carry : positive -> positive -> mask
    val sub : positive -> positive -> positive
    val mul : positive -> positive -> positive
    val iter : ('a1 -> 'a1) -> 'a1 -> positive -> 'a1
    val size_nat : positive -> nat
    val compare_cont : comparison -> positive -> positive -> comparison
    val compare : positive -> positive -> comparison
    val max : positive -> positive -> positive
    val leb : positive -> positive -> bool
    val gcdn : nat -> positive -> positive -> positive
    val gcd : positive -> positive -> positive
    val of_succ_nat : nat -> positive
  end
module N : sig val of_nat : nat -> n end
val pow_pos : ('a1 -> 'a1 -> 'a1) -> 'a1 -> positive -> 'a1
module Z :
  sig
    val double : z -> z
    val succ_double : z -> z
    val pred_double : z -> z
    val pos_sub : positive -> positive -> z
    val add : z -> z -> z
    val opp : z -> z
    val sub : z -> z -> z
    val mul : z -> z -> z
    val pow_pos : z -> positive -> z
    val pow : z -> z -> z
    val compare : z -> z -> comparison
    val leb : z -> z -> bool
    val ltb : z -> z -> bool
    val gtb : z -> z -> bool
    val max : z -> z -> z
    val abs : z -> z
    val to_N : z -> n
    val of_nat : nat -> z
    val of_N : n -> z
    val pos_div_eucl : positive -> z -> z * z
    val div_eucl : z -> z -> z * z
    val div : z -> z -> z
    val gcd : z -> z -> z
  end
val zeq_bool : z -> z -> bool
type 'c pExpr =
    PEc of 'c
  | PEX of positive
  | PEadd of 'c pExpr * 'c pExpr
  | PEsub of 'c pExpr * 'c pExpr
  | PEmul of 'c pExpr * 'c pExpr
  | PEopp of 'c pExpr
  | PEpow of 'c pExpr * n
type 'c pol =
    Pc of 'c
  | Pinj of positive * 'c pol
  | PX of 'c pol * positive * 'c pol
val p0 : 'a1 -> 'a1 pol
val p1 : 'a1 -> 'a1 pol
val peq : ('a1 -> 'a1 -> bool) -> 'a1 pol -> 'a1 pol -> bool
val mkPinj : positive -> 'a1 pol -> 'a1 pol
val mkPinj_pred : positive -> 'a1 pol -> 'a1 pol
val mkPX :
  'a1 -> ('a1 -> 'a1 -> bool) -> 'a1 pol -> positive -> 'a1 pol -> 'a1 pol
val mkXi : 'a1 -> 'a1 -> positive -> 'a1 pol
val mkX : 'a1 -> 'a1 -> 'a1 pol
val popp : ('a1 -> 'a1) -> 'a1 pol -> 'a1 pol
val paddC : ('a1 -> 'a1 -> 'a1) -> 'a1 pol -> 'a1 -> 'a1 pol
val psubC : ('a1 -> 'a1 -> 'a1) -> 'a1 pol -> 'a1 -> 'a1 pol
val paddI :
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 pol -> 'a1 pol -> 'a1 pol) ->
  'a1 pol -> positive -> 'a1 pol -> 'a1 pol
val psubI :
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1) ->
  ('a1 pol -> 'a1 pol -> 'a1 pol) ->
  'a1 pol -> positive -> 'a1 pol -> 'a1 pol
val paddX :
  'a1 ->
  ('a1 -> 'a1 -> bool) ->
  ('a1 pol -> 'a1 pol -> 'a1 pol) ->
  'a1 pol -> positive -> 'a1 pol -> 'a1 pol
val psubX :
  'a1 ->
  ('a1 -> 'a1) ->
  ('a1 -> 'a1 -> bool) ->
  ('a1 pol -> 'a1 pol -> 'a1 pol) ->
  'a1 pol -> positive -> 'a1 pol -> 'a1 pol
val padd :
  'a1 ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> bool) -> 'a1 pol -> 'a1 pol -> 'a1 pol
val psub :
  'a1 ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1) -> ('a1 -> 'a1 -> bool) -> 'a1 pol -> 'a1 pol -> 'a1 pol
val pmulC_aux :
  'a1 ->
  ('a1 -> 'a1 -> 'a1) -> ('a1 -> 'a1 -> bool) -> 'a1 pol -> 'a1 -> 'a1 pol
val pmulC :
  'a1 ->
  'a1 ->
  ('a1 -> 'a1 -> 'a1) -> ('a1 -> 'a1 -> bool) -> 'a1 pol -> 'a1 -> 'a1 pol
val pmulI :
  'a1 ->
  'a1 ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> bool) ->
  ('a1 pol -> 'a1 pol -> 'a1 pol) ->
  'a1 pol -> positive -> 'a1 pol -> 'a1 pol
val pmul :
  'a1 ->
  'a1 ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> bool) -> 'a1 pol -> 'a1 pol -> 'a1 pol
val psquare :
  'a1 ->
  'a1 ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> 'a1) -> ('a1 -> 'a1 -> bool) -> 'a1 pol -> 'a1 pol
val mk_X : 'a1 -> 'a1 -> positive -> 'a1 pol
val ppow_pos :
  'a1 ->
  'a1 ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> bool) ->
  ('a1 pol -> 'a1 pol) -> 'a1 pol -> 'a1 pol -> positive -> 'a1 pol
val ppow_N :
  'a1 ->
  'a1 ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> bool) -> ('a1 pol -> 'a1 pol) -> 'a1 pol -> n -> 'a1 pol
val norm_aux :
  'a1 ->
  'a1 ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1) -> ('a1 -> 'a1 -> bool) -> 'a1 pExpr -> 'a1 pol
type kind = IsProp | IsBool
type 'a trace = Null | Push of 'a * 'a trace | Merge of 'a trace * 'a trace
type ('tA, 'tX, 'aA, 'aF) gFormula =
    TT of kind
  | FF of kind
  | X of kind * 'tX
  | A of kind * 'tA * 'aA
  | AND of kind * ('tA, 'tX, 'aA, 'aF) gFormula *
      ('tA, 'tX, 'aA, 'aF) gFormula
  | OR of kind * ('tA, 'tX, 'aA, 'aF) gFormula *
      ('tA, 'tX, 'aA, 'aF) gFormula
  | NOT of kind * ('tA, 'tX, 'aA, 'aF) gFormula
  | IMPL of kind * ('tA, 'tX, 'aA, 'aF) gFormula * 'aF option *
      ('tA, 'tX, 'aA, 'aF) gFormula
  | IFF of kind * ('tA, 'tX, 'aA, 'aF) gFormula *
      ('tA, 'tX, 'aA, 'aF) gFormula
  | EQ of ('tA, 'tX, 'aA, 'aF) gFormula * ('tA, 'tX, 'aA, 'aF) gFormula
val mapX :
  (kind -> 'a2 -> 'a2) ->
  kind -> ('a1, 'a2, 'a3, 'a4) gFormula -> ('a1, 'a2, 'a3, 'a4) gFormula
val foldA :
  ('a5 -> 'a3 -> 'a5) -> kind -> ('a1, 'a2, 'a3, 'a4) gFormula -> 'a5 -> 'a5
val cons_id : 'a1 option -> 'a1 list -> 'a1 list
val ids_of_formula : kind -> ('a1, 'a2, 'a3, 'a4) gFormula -> 'a4 list
val collect_annot : kind -> ('a1, 'a2, 'a3, 'a4) gFormula -> 'a3 list
type rtyp = __
type eKind = __
type 'a bFormula = ('a, eKind, unit0, unit0) gFormula
val map_bformula :
  kind ->
  ('a1 -> 'a2) ->
  ('a1, 'a3, 'a4, 'a5) gFormula -> ('a2, 'a3, 'a4, 'a5) gFormula
type ('x, 'annot) clause = ('x * 'annot) list
type ('x, 'annot) cnf = ('x, 'annot) clause list
val cnf_tt : ('a1, 'a2) cnf
val cnf_ff : ('a1, 'a2) cnf
val add_term :
  ('a1 -> bool) ->
  ('a1 -> 'a1 -> 'a1 option) ->
  'a1 * 'a2 -> ('a1, 'a2) clause -> ('a1, 'a2) clause option
val or_clause :
  ('a1 -> bool) ->
  ('a1 -> 'a1 -> 'a1 option) ->
  ('a1, 'a2) clause -> ('a1, 'a2) clause -> ('a1, 'a2) clause option
val xor_clause_cnf :
  ('a1 -> bool) ->
  ('a1 -> 'a1 -> 'a1 option) ->
  ('a1, 'a2) clause -> ('a1, 'a2) cnf -> ('a1, 'a2) cnf
val or_clause_cnf :
  ('a1 -> bool) ->
  ('a1 -> 'a1 -> 'a1 option) ->
  ('a1, 'a2) clause -> ('a1, 'a2) cnf -> ('a1, 'a2) cnf
val or_cnf :
  ('a1 -> bool) ->
  ('a1 -> 'a1 -> 'a1 option) ->
  ('a1, 'a2) cnf -> ('a1, 'a2) cnf -> ('a1, 'a2) cnf
val and_cnf : ('a1, 'a2) cnf -> ('a1, 'a2) cnf -> ('a1, 'a2) cnf
type ('term, 'annot, 'tX, 'aF) tFormula = ('term, 'tX, 'annot, 'aF) gFormula
val is_cnf_tt : ('a1, 'a2) cnf -> bool
val is_cnf_ff : ('a1, 'a2) cnf -> bool
val and_cnf_opt : ('a1, 'a2) cnf -> ('a1, 'a2) cnf -> ('a1, 'a2) cnf
val or_cnf_opt :
  ('a1 -> bool) ->
  ('a1 -> 'a1 -> 'a1 option) ->
  ('a1, 'a2) cnf -> ('a1, 'a2) cnf -> ('a1, 'a2) cnf
val mk_and :
  ('a2 -> bool) ->
  ('a2 -> 'a2 -> 'a2 option) ->
  (bool -> kind -> ('a1, 'a3, 'a4, 'a5) tFormula -> ('a2, 'a3) cnf) ->
  kind ->
  bool ->
  ('a1, 'a3, 'a4, 'a5) tFormula ->
  ('a1, 'a3, 'a4, 'a5) tFormula -> ('a2, 'a3) cnf
val mk_or :
  ('a2 -> bool) ->
  ('a2 -> 'a2 -> 'a2 option) ->
  (bool -> kind -> ('a1, 'a3, 'a4, 'a5) tFormula -> ('a2, 'a3) cnf) ->
  kind ->
  bool ->
  ('a1, 'a3, 'a4, 'a5) tFormula ->
  ('a1, 'a3, 'a4, 'a5) tFormula -> ('a2, 'a3) cnf
val mk_impl :
  ('a2 -> bool) ->
  ('a2 -> 'a2 -> 'a2 option) ->
  (bool -> kind -> ('a1, 'a3, 'a4, 'a5) tFormula -> ('a2, 'a3) cnf) ->
  kind ->
  bool ->
  ('a1, 'a3, 'a4, 'a5) tFormula ->
  ('a1, 'a3, 'a4, 'a5) tFormula -> ('a2, 'a3) cnf
val mk_iff :
  ('a2 -> bool) ->
  ('a2 -> 'a2 -> 'a2 option) ->
  (bool -> kind -> ('a1, 'a3, 'a4, 'a5) tFormula -> ('a2, 'a3) cnf) ->
  kind ->
  bool ->
  ('a1, 'a3, 'a4, 'a5) tFormula ->
  ('a1, 'a3, 'a4, 'a5) tFormula -> ('a2, 'a3) cnf
val is_bool : kind -> ('a1, 'a2, 'a3, 'a4) tFormula -> bool option
val xcnf :
  ('a2 -> bool) ->
  ('a2 -> 'a2 -> 'a2 option) ->
  ('a1 -> 'a3 -> ('a2, 'a3) cnf) ->
  ('a1 -> 'a3 -> ('a2, 'a3) cnf) ->
  bool -> kind -> ('a1, 'a3, 'a4, 'a5) tFormula -> ('a2, 'a3) cnf
val radd_term :
  ('a1 -> bool) ->
  ('a1 -> 'a1 -> 'a1 option) ->
  'a1 * 'a2 -> ('a1, 'a2) clause -> (('a1, 'a2) clause, 'a2 trace) sum
val ror_clause :
  ('a1 -> bool) ->
  ('a1 -> 'a1 -> 'a1 option) ->
  ('a1 * 'a2) list -> ('a1, 'a2) clause -> (('a1, 'a2) clause, 'a2 trace) sum
val xror_clause_cnf :
  ('a1 -> bool) ->
  ('a1 -> 'a1 -> 'a1 option) ->
  ('a1 * 'a2) list ->
  ('a1, 'a2) clause list -> ('a1, 'a2) clause list * 'a2 trace
val ror_clause_cnf :
  ('a1 -> bool) ->
  ('a1 -> 'a1 -> 'a1 option) ->
  ('a1 * 'a2) list ->
  ('a1, 'a2) clause list -> ('a1, 'a2) clause list * 'a2 trace
val ror_cnf :
  ('a1 -> bool) ->
  ('a1 -> 'a1 -> 'a1 option) ->
  ('a1, 'a2) clause list ->
  ('a1, 'a2) clause list -> ('a1, 'a2) cnf * 'a2 trace
val ror_cnf_opt :
  ('a1 -> bool) ->
  ('a1 -> 'a1 -> 'a1 option) ->
  ('a1, 'a2) cnf -> ('a1, 'a2) cnf -> ('a1, 'a2) cnf * 'a2 trace
val ratom : ('a1, 'a2) cnf -> 'a2 -> ('a1, 'a2) cnf * 'a2 trace
val rxcnf_and :
  ('a2 -> bool) ->
  ('a2 -> 'a2 -> 'a2 option) ->
  (bool ->
   kind -> ('a1, 'a3, 'a4, 'a5) tFormula -> ('a2, 'a3) cnf * 'a3 trace) ->
  bool ->
  kind ->
  ('a1, 'a3, 'a4, 'a5) tFormula ->
  ('a1, 'a3, 'a4, 'a5) tFormula -> ('a2, 'a3) cnf * 'a3 trace
val rxcnf_or :
  ('a2 -> bool) ->
  ('a2 -> 'a2 -> 'a2 option) ->
  (bool ->
   kind -> ('a1, 'a3, 'a4, 'a5) tFormula -> ('a2, 'a3) cnf * 'a3 trace) ->
  bool ->
  kind ->
  ('a1, 'a3, 'a4, 'a5) tFormula ->
  ('a1, 'a3, 'a4, 'a5) tFormula -> ('a2, 'a3) cnf * 'a3 trace
val rxcnf_impl :
  ('a2 -> bool) ->
  ('a2 -> 'a2 -> 'a2 option) ->
  (bool ->
   kind -> ('a1, 'a3, 'a4, 'a5) tFormula -> ('a2, 'a3) cnf * 'a3 trace) ->
  bool ->
  kind ->
  ('a1, 'a3, 'a4, 'a5) tFormula ->
  ('a1, 'a3, 'a4, 'a5) tFormula -> ('a2, 'a3) cnf * 'a3 trace
val rxcnf_iff :
  ('a2 -> bool) ->
  ('a2 -> 'a2 -> 'a2 option) ->
  (bool ->
   kind -> ('a1, 'a3, 'a4, 'a5) tFormula -> ('a2, 'a3) cnf * 'a3 trace) ->
  bool ->
  kind ->
  ('a1, 'a3, 'a4, 'a5) tFormula ->
  ('a1, 'a3, 'a4, 'a5) tFormula -> ('a2, 'a3) cnf * 'a3 trace
val rxcnf :
  ('a2 -> bool) ->
  ('a2 -> 'a2 -> 'a2 option) ->
  ('a1 -> 'a3 -> ('a2, 'a3) cnf) ->
  ('a1 -> 'a3 -> ('a2, 'a3) cnf) ->
  bool -> kind -> ('a1, 'a3, 'a4, 'a5) tFormula -> ('a2, 'a3) cnf * 'a3 trace
type ('term, 'annot, 'tX) to_constrT = {
  mkTT : kind -> 'tX;
  mkFF : kind -> 'tX;
  mkA : kind -> 'term -> 'annot -> 'tX;
  mkAND : kind -> 'tX -> 'tX -> 'tX;
  mkOR : kind -> 'tX -> 'tX -> 'tX;
  mkIMPL : kind -> 'tX -> 'tX -> 'tX;
  mkIFF : kind -> 'tX -> 'tX -> 'tX;
  mkNOT : kind -> 'tX -> 'tX;
  mkEQ : 'tX -> 'tX -> 'tX;
}
val aformula :
  ('a1, 'a2, 'a3) to_constrT -> kind -> ('a1, 'a2, 'a3, 'a4) tFormula -> 'a3
val is_X : kind -> ('a1, 'a2, 'a3, 'a4) tFormula -> 'a3 option
val abs_and :
  ('a1, 'a2, 'a3) to_constrT ->
  kind ->
  ('a1, 'a2, 'a3, 'a4) tFormula ->
  ('a1, 'a2, 'a3, 'a4) tFormula ->
  (kind ->
   ('a1, 'a2, 'a3, 'a4) tFormula ->
   ('a1, 'a2, 'a3, 'a4) tFormula -> ('a1, 'a2, 'a3, 'a4) tFormula) ->
  ('a1, 'a3, 'a2, 'a4) gFormula
val abs_or :
  ('a1, 'a2, 'a3) to_constrT ->
  kind ->
  ('a1, 'a2, 'a3, 'a4) tFormula ->
  ('a1, 'a2, 'a3, 'a4) tFormula ->
  (kind ->
   ('a1, 'a2, 'a3, 'a4) tFormula ->
   ('a1, 'a2, 'a3, 'a4) tFormula -> ('a1, 'a2, 'a3, 'a4) tFormula) ->
  ('a1, 'a3, 'a2, 'a4) gFormula
val abs_not :
  ('a1, 'a2, 'a3) to_constrT ->
  kind ->
  ('a1, 'a2, 'a3, 'a4) tFormula ->
  (kind -> ('a1, 'a2, 'a3, 'a4) tFormula -> ('a1, 'a2, 'a3, 'a4) tFormula) ->
  ('a1, 'a3, 'a2, 'a4) gFormula
val mk_arrow :
  'a4 option ->
  kind ->
  ('a1, 'a2, 'a3, 'a4) tFormula ->
  ('a1, 'a2, 'a3, 'a4) tFormula -> ('a1, 'a2, 'a3, 'a4) tFormula
val abst_simpl :
  ('a1, 'a2, 'a3) to_constrT ->
  ('a2 -> bool) ->
  kind -> ('a1, 'a2, 'a3, 'a4) tFormula -> ('a1, 'a2, 'a3, 'a4) tFormula
val abst_and :
  ('a1, 'a2, 'a3) to_constrT ->
  (bool ->
   kind -> ('a1, 'a2, 'a3, 'a4) tFormula -> ('a1, 'a2, 'a3, 'a4) tFormula) ->
  bool ->
  kind ->
  ('a1, 'a2, 'a3, 'a4) tFormula ->
  ('a1, 'a2, 'a3, 'a4) tFormula -> ('a1, 'a2, 'a3, 'a4) tFormula
val abst_or :
  ('a1, 'a2, 'a3) to_constrT ->
  (bool ->
   kind -> ('a1, 'a2, 'a3, 'a4) tFormula -> ('a1, 'a2, 'a3, 'a4) tFormula) ->
  bool ->
  kind ->
  ('a1, 'a2, 'a3, 'a4) tFormula ->
  ('a1, 'a2, 'a3, 'a4) tFormula -> ('a1, 'a2, 'a3, 'a4) tFormula
val abst_impl :
  ('a1, 'a2, 'a3) to_constrT ->
  (bool ->
   kind -> ('a1, 'a2, 'a3, 'a4) tFormula -> ('a1, 'a2, 'a3, 'a4) tFormula) ->
  bool ->
  'a4 option ->
  kind ->
  ('a1, 'a2, 'a3, 'a4) tFormula ->
  ('a1, 'a2, 'a3, 'a4) tFormula -> ('a1, 'a2, 'a3, 'a4) tFormula
val or_is_X :
  kind ->
  ('a1, 'a2, 'a3, 'a4) tFormula -> ('a1, 'a2, 'a3, 'a4) tFormula -> bool
val abs_iff :
  ('a1, 'a2, 'a3) to_constrT ->
  kind ->
  ('a1, 'a2, 'a3, 'a4) tFormula ->
  ('a1, 'a2, 'a3, 'a4) tFormula ->
  ('a1, 'a2, 'a3, 'a4) tFormula ->
  ('a1, 'a2, 'a3, 'a4) tFormula ->
  kind -> ('a1, 'a2, 'a3, 'a4) tFormula -> ('a1, 'a2, 'a3, 'a4) tFormula
val abst_iff :
  ('a1, 'a2, 'a3) to_constrT ->
  ('a2 -> bool) ->
  (bool ->
   kind -> ('a1, 'a2, 'a3, 'a4) tFormula -> ('a1, 'a2, 'a3, 'a4) tFormula) ->
  bool ->
  kind ->
  ('a1, 'a2, 'a3, 'a4) tFormula ->
  ('a1, 'a2, 'a3, 'a4) tFormula -> ('a1, 'a2, 'a3, 'a4) tFormula
val abst_eq :
  ('a1, 'a2, 'a3) to_constrT ->
  ('a2 -> bool) ->
  (bool ->
   kind -> ('a1, 'a2, 'a3, 'a4) tFormula -> ('a1, 'a2, 'a3, 'a4) tFormula) ->
  bool ->
  ('a1, 'a2, 'a3, 'a4) tFormula ->
  ('a1, 'a2, 'a3, 'a4) tFormula -> ('a1, 'a2, 'a3, 'a4) tFormula
val abst_form :
  ('a1, 'a2, 'a3) to_constrT ->
  ('a2 -> bool) ->
  bool ->
  kind -> ('a1, 'a2, 'a3, 'a4) tFormula -> ('a1, 'a2, 'a3, 'a4) tFormula
val cnf_checker :
  (('a1 * 'a2) list -> 'a3 -> bool) -> ('a1, 'a2) cnf -> 'a3 list -> bool
val tauto_checker :
  ('a2 -> bool) ->
  ('a2 -> 'a2 -> 'a2 option) ->
  ('a1 -> 'a3 -> ('a2, 'a3) cnf) ->
  ('a1 -> 'a3 -> ('a2, 'a3) cnf) ->
  (('a2 * 'a3) list -> 'a4 -> bool) ->
  ('a1, rtyp, 'a3, unit0) gFormula -> 'a4 list -> bool
val cneqb : ('a1 -> 'a1 -> bool) -> 'a1 -> 'a1 -> bool
val cltb : ('a1 -> 'a1 -> bool) -> ('a1 -> 'a1 -> bool) -> 'a1 -> 'a1 -> bool
type 'c polC = 'c pol
type op1 = Equal | NonEqual | Strict | NonStrict
type 'c nFormula = 'c polC * op1
val opMult : op1 -> op1 -> op1 option
val opAdd : op1 -> op1 -> op1 option
type 'c psatz =
    PsatzLet of 'c psatz * 'c psatz
  | PsatzIn of nat
  | PsatzSquare of 'c polC
  | PsatzMulC of 'c polC * 'c psatz
  | PsatzMulE of 'c psatz * 'c psatz
  | PsatzAdd of 'c psatz * 'c psatz
  | PsatzC of 'c
  | PsatzZ
val map_option : ('a1 -> 'a2 option) -> 'a1 option -> 'a2 option
val map_option2 :
  ('a1 -> 'a2 -> 'a3 option) -> 'a1 option -> 'a2 option -> 'a3 option
val pexpr_times_nformula :
  'a1 ->
  'a1 ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> bool) -> 'a1 polC -> 'a1 nFormula -> 'a1 nFormula option
val nformula_times_nformula :
  'a1 ->
  'a1 ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> bool) -> 'a1 nFormula -> 'a1 nFormula -> 'a1 nFormula option
val nformula_plus_nformula :
  'a1 ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> bool) -> 'a1 nFormula -> 'a1 nFormula -> 'a1 nFormula option
val eval_Psatz :
  'a1 ->
  'a1 ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> bool) ->
  ('a1 -> 'a1 -> bool) ->
  'a1 nFormula list -> 'a1 psatz -> 'a1 nFormula option
val check_inconsistent :
  'a1 -> ('a1 -> 'a1 -> bool) -> ('a1 -> 'a1 -> bool) -> 'a1 nFormula -> bool
val check_normalised_formulas :
  'a1 ->
  'a1 ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> bool) ->
  ('a1 -> 'a1 -> bool) -> 'a1 nFormula list -> 'a1 psatz -> bool
type op2 = OpEq | OpNEq | OpLe | OpGe | OpLt | OpGt
type 't formula = { flhs : 't pExpr; fop : op2; frhs : 't pExpr; }
val norm :
  'a1 ->
  'a1 ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1) -> ('a1 -> 'a1 -> bool) -> 'a1 pExpr -> 'a1 pol
val psub0 :
  'a1 ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1) -> ('a1 -> 'a1 -> bool) -> 'a1 pol -> 'a1 pol -> 'a1 pol
val padd0 :
  'a1 ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> bool) -> 'a1 pol -> 'a1 pol -> 'a1 pol
val popp0 : ('a1 -> 'a1) -> 'a1 pol -> 'a1 pol
val normalise :
  'a1 ->
  'a1 ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1) -> ('a1 -> 'a1 -> bool) -> 'a1 formula -> 'a1 nFormula
val xnormalise : ('a1 -> 'a1) -> 'a1 nFormula -> 'a1 nFormula list
val xnegate : ('a1 -> 'a1) -> 'a1 nFormula -> 'a1 nFormula list
val cnf_of_list :
  'a1 ->
  ('a1 -> 'a1 -> bool) ->
  ('a1 -> 'a1 -> bool) -> 'a1 nFormula list -> 'a2 -> ('a1 nFormula, 'a2) cnf
val cnf_normalise :
  'a1 ->
  'a1 ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1) ->
  ('a1 -> 'a1 -> bool) ->
  ('a1 -> 'a1 -> bool) -> 'a1 formula -> 'a2 -> ('a1 nFormula, 'a2) cnf
val cnf_negate :
  'a1 ->
  'a1 ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1 -> 'a1) ->
  ('a1 -> 'a1) ->
  ('a1 -> 'a1 -> bool) ->
  ('a1 -> 'a1 -> bool) -> 'a1 formula -> 'a2 -> ('a1 nFormula, 'a2) cnf
val xdenorm : positive -> 'a1 pol -> 'a1 pExpr
val denorm : 'a1 pol -> 'a1 pExpr
val map_PExpr : ('a2 -> 'a1) -> 'a2 pExpr -> 'a1 pExpr
val map_Formula : ('a2 -> 'a1) -> 'a2 formula -> 'a1 formula
val simpl_cone :
  'a1 ->
  'a1 ->
  ('a1 -> 'a1 -> 'a1) -> ('a1 -> 'a1 -> bool) -> 'a1 psatz -> 'a1 psatz
type q = { qnum : z; qden : positive; }
val qeq_bool : q -> q -> bool
val qle_bool : q -> q -> bool
val qplus : q -> q -> q
val qmult : q -> q -> q
val qopp : q -> q
val qminus : q -> q -> q
val qinv : q -> q
val qpower_positive : q -> positive -> q
val qpower : q -> z -> q
type 'a t = Empty | Elt of 'a | Branch of 'a t * 'a * 'a t
val find : 'a1 -> 'a1 t -> positive -> 'a1
val singleton : 'a1 -> positive -> 'a1 -> 'a1 t
val vm_add : 'a1 -> positive -> 'a1 -> 'a1 t -> 'a1 t
val zeval_const : z pExpr -> z option
type zWitness = z psatz
val zWeakChecker : z nFormula list -> z psatz -> bool
val psub1 : z pol -> z pol -> z pol
val popp1 : z pol -> z pol
val padd1 : z pol -> z pol -> z pol
val normZ : z pExpr -> z pol
val zunsat : z nFormula -> bool
val zdeduce : z nFormula -> z nFormula -> z nFormula option
val xnnormalise : z formula -> z nFormula
val xnormalise0 : z nFormula -> z nFormula list
val cnf_of_list0 : 'a1 -> z nFormula list -> (z nFormula * 'a1) list list
val normalise0 : z formula -> 'a1 -> (z nFormula, 'a1) cnf
val xnegate0 : z nFormula -> z nFormula list
val negate : z formula -> 'a1 -> (z nFormula, 'a1) cnf
val cnfZ :
  kind ->
  (z formula, 'a1, 'a2, 'a3) tFormula -> (z nFormula, 'a1) cnf * 'a1 trace
val ceiling : z -> z -> z
type zArithProof =
    DoneProof
  | RatProof of zWitness * zArithProof
  | CutProof of zWitness * zArithProof
  | SplitProof of z polC * zArithProof * zArithProof
  | EnumProof of zWitness * zWitness * zArithProof list
  | ExProof of positive * zArithProof
val zgcdM : z -> z -> z
val zgcd_pol : z polC -> z * z
val zdiv_pol : z polC -> z -> z polC
val makeCuttingPlane : z polC -> z polC * z
val genCuttingPlane : z nFormula -> ((z polC * z) * op1) option
val nformula_of_cutting_plane : (z polC * z) * op1 -> z nFormula
val is_pol_Z0 : z polC -> bool
val eval_Psatz0 : z nFormula list -> zWitness -> z nFormula option
val valid_cut_sign : op1 -> bool
val bound_var : positive -> z formula
val mk_eq_pos : positive -> positive -> positive -> z formula
val max_var : positive -> z pol -> positive
val max_var_nformulae : z nFormula list -> positive
val zChecker : z nFormula list -> zArithProof -> bool
val zTautoChecker : z formula bFormula -> zArithProof list -> bool
type qWitness = q psatz
val qWeakChecker : q nFormula list -> q psatz -> bool
val qnormalise : q formula -> 'a1 -> (q nFormula, 'a1) cnf
val qnegate : q formula -> 'a1 -> (q nFormula, 'a1) cnf
val qunsat : q nFormula -> bool
val qdeduce : q nFormula -> q nFormula -> q nFormula option
val normQ : q pExpr -> q pol
val cnfQ :
  kind ->
  (q formula, 'a1, 'a2, 'a3) tFormula -> (q nFormula, 'a1) cnf * 'a1 trace
val qTautoChecker : q formula bFormula -> qWitness list -> bool
type rcst =
    C0
  | C1
  | CQ of q
  | CZ of z
  | CPlus of rcst * rcst
  | CMinus of rcst * rcst
  | CMult of rcst * rcst
  | CPow of rcst * (z, nat) sum
  | CInv of rcst
  | COpp of rcst
val z_of_exp : (z, nat) sum -> z
val q_of_Rcst : rcst -> q
type rWitness = q psatz
val rWeakChecker : q nFormula list -> q psatz -> bool
val rnormalise : q formula -> 'a1 -> (q nFormula, 'a1) cnf
val rnegate : q formula -> 'a1 -> (q nFormula, 'a1) cnf
val runsat : q nFormula -> bool
val rdeduce : q nFormula -> q nFormula -> q nFormula option
("DEBUG:rule", [Tag1 (("__", 725), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Obj"), "t"), 0, (0)), 100000000, 0, -2265)), 0, 0, 0, 0, (("plugins/micromega/micromega.mli", 2, 1, 1), ("plugins/micromega/micromega.mli", 2, 1, 16), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 0)), 1, 0); Tag1 (("unit0", 726), (0, 0, Tag1 ([(("Tt", 368), (0), 0, (("plugins/micromega/micromega.mli", 5, 31, 31), ("plugins/micromega/micromega.mli", 5, 31, 35), 0), 0, Tag1 ("Micromega_plugin__Micromega", 2))], 0), 1, 0, 0, 0, 0, 0, (("plugins/micromega/micromega.mli", 4, 18, 18), ("plugins/micromega/micromega.mli", 5, 31, 35), 0), 0, 1, 0, Tag1 ("Micromega_plugin__Micromega", 1)), 1, 0); (("negb", 727), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2264), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2263), 0), 100000000, 0, -2262), 0, (("plugins/micromega/micromega.mli", 7, 37, 37), ("plugins/micromega/micromega.mli", 7, 37, 60), 0), 0, Tag1 ("Micromega_plugin__Micromega", 3)), 0); Tag1 (("nat", 728), (0, 0, Tag1 ([(("O", 371), (0), 0, (("plugins/micromega/micromega.mli", 10, 73, 73), ("plugins/micromega/micromega.mli", 10, 73, 76), 0), 0, Tag1 ("Micromega_plugin__Micromega", 5)); (("S", 372), ([(Tag3 ((("nat", 728)), 0, (0)), 100000000, 0, -2261)]), 0, (("plugins/micromega/micromega.mli", 11, 77, 77), ("plugins/micromega/micromega.mli", 11, 77, 87), 0), 0, Tag1 ("Micromega_plugin__Micromega", 6))], 0), 1, 0, 0, 0, 0, 0, (("plugins/micromega/micromega.mli", 9, 62, 62), ("plugins/micromega/micromega.mli", 11, 77, 87), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 4)), 1, 0); Tag1 (("sum", 729), ([((("a")), 100000000, 0, -2259); ((("b")), 100000000, 0, -2260)], 2, Tag1 ([(("Inl", 374), ([((("a")), 100000000, 0, -2259)]), 0, (("plugins/micromega/micromega.mli", 14, 109, 109), ("plugins/micromega/micromega.mli", 14, 109, 120), 0), 0, Tag1 ("Micromega_plugin__Micromega", 8)); (("Inr", 375), ([((("b")), 100000000, 0, -2260)]), 0, (("plugins/micromega/micromega.mli", 15, 121, 121), ("plugins/micromega/micromega.mli", 15, 121, 132), 0), 0, Tag1 ("Micromega_plugin__Micromega", 9))], 0), 1, 0, [25; 25], [0; 0], 0, 0, (("plugins/micromega/micromega.mli", 13, 89, 89), ("plugins/micromega/micromega.mli", 15, 121, 132), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 7)), 1, 0); (("fst", 730), ((Tag1 (0, (Tag2 ([((("a1")), 100000000, 0, -2256); ((("a2")), 100000000, 0, -2258)]), 100000000, 0, -2257), ((("a1")), 100000000, 0, -2256), 0), 100000000, 0, -2255), 0, (("plugins/micromega/micromega.mli", 17, 134, 134), ("plugins/micromega/micromega.mli", 17, 134, 162), 0), 0, Tag1 ("Micromega_plugin__Micromega", 10)), 0); (("snd", 731), ((Tag1 (0, (Tag2 ([((("a1")), 100000000, 0, -2254); ((("a2")), 100000000, 0, -2252)]), 100000000, 0, -2253), ((("a2")), 100000000, 0, -2252), 0), 100000000, 0, -2251), 0, (("plugins/micromega/micromega.mli", 19, 164, 164), ("plugins/micromega/micromega.mli", 19, 164, 192), 0), 0, Tag1 ("Micromega_plugin__Micromega", 11)), 0); (("app", 732), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a1")), 100000000, 0, -2248)], (0)), 100000000, 0, -2250), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a1")), 100000000, 0, -2248)], (0)), 100000000, 0, -2249), (Tag3 ((Tag3 ("list", 9)), [((("a1")), 100000000, 0, -2248)], (0)), 100000000, 0, -2247), 0), 100000000, 0, -2246), 0), 100000000, 0, -2245), 0, (("plugins/micromega/micromega.mli", 21, 194, 194), ("plugins/micromega/micromega.mli", 21, 194, 236), 0), 0, Tag1 ("Micromega_plugin__Micromega", 12)), 0); Tag1 (("comparison", 733), (0, 0, Tag1 ([(("Eq", 380), (0), 0, (("plugins/micromega/micromega.mli", 24, 256, 256), ("plugins/micromega/micromega.mli", 24, 256, 260), 0), 0, Tag1 ("Micromega_plugin__Micromega", 14)); (("Lt", 381), (0), 0, (("plugins/micromega/micromega.mli", 25, 261, 261), ("plugins/micromega/micromega.mli", 25, 261, 265), 0), 0, Tag1 ("Micromega_plugin__Micromega", 15)); (("Gt", 382), (0), 0, (("plugins/micromega/micromega.mli", 26, 266, 266), ("plugins/micromega/micromega.mli", 26, 266, 270), 0), 0, Tag1 ("Micromega_plugin__Micromega", 16))], 0), 1, 0, 0, 0, 0, 0, (("plugins/micromega/micromega.mli", 23, 238, 238), ("plugins/micromega/micromega.mli", 26, 266, 270), 0), 0, 1, 0, Tag1 ("Micromega_plugin__Micromega", 13)), 1, 0); (("compOpp", 734), ((Tag1 (0, (Tag3 ((("comparison", 733)), 0, (0)), 100000000, 0, -2244), (Tag3 ((("comparison", 733)), 0, (0)), 100000000, 0, -2243), 0), 100000000, 0, -2242), 0, (("plugins/micromega/micromega.mli", 28, 272, 272), ("plugins/micromega/micromega.mli", 28, 272, 310), 0), 0, Tag1 ("Micromega_plugin__Micromega", 17)), 0); (("add", 735), ((Tag1 (0, (Tag3 ((("nat", 728)), 0, (0)), 100000000, 0, -2241), (Tag1 (0, (Tag3 ((("nat", 728)), 0, (0)), 100000000, 0, -2240), (Tag3 ((("nat", 728)), 0, (0)), 100000000, 0, -2239), 0), 100000000, 0, -2238), 0), 100000000, 0, -2237), 0, (("plugins/micromega/micromega.mli", 30, 312, 312), ("plugins/micromega/micromega.mli", 30, 312, 339), 0), 0, Tag1 ("Micromega_plugin__Micromega", 18)), 0); (("nth", 736), ((Tag1 (0, (Tag3 ((("nat", 728)), 0, (0)), 100000000, 0, -2236), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a1")), 100000000, 0, -2234)], (0)), 100000000, 0, -2235), (Tag1 (0, ((("a1")), 100000000, 0, -2234), ((("a1")), 100000000, 0, -2234), 0), 100000000, 0, -2233), 0), 100000000, 0, -2232), 0), 100000000, 0, -2231), 0, (("plugins/micromega/micromega.mli", 32, 341, 341), ("plugins/micromega/micromega.mli", 32, 341, 380), 0), 0, Tag1 ("Micromega_plugin__Micromega", 19)), 0); (("rev_append", 737), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a1")), 100000000, 0, -2228)], (0)), 100000000, 0, -2230), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a1")), 100000000, 0, -2228)], (0)), 100000000, 0, -2229), (Tag3 ((Tag3 ("list", 9)), [((("a1")), 100000000, 0, -2228)], (0)), 100000000, 0, -2227), 0), 100000000, 0, -2226), 0), 100000000, 0, -2225), 0, (("plugins/micromega/micromega.mli", 34, 382, 382), ("plugins/micromega/micromega.mli", 34, 382, 431), 0), 0, Tag1 ("Micromega_plugin__Micromega", 20)), 0); (("map", 738), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -2223), ((("a2")), 100000000, 0, -2221), 0), 100000000, 0, -2224), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a1")), 100000000, 0, -2223)], (0)), 100000000, 0, -2222), (Tag3 ((Tag3 ("list", 9)), [((("a2")), 100000000, 0, -2221)], (0)), 100000000, 0, -2220), 0), 100000000, 0, -2219), 0), 100000000, 0, -2218), 0, (("plugins/micromega/micromega.mli", 36, 433, 433), ("plugins/micromega/micromega.mli", 36, 433, 479), 0), 0, Tag1 ("Micromega_plugin__Micromega", 21)), 0); (("fold_left", 739), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -2213), (Tag1 (0, ((("a2")), 100000000, 0, -2215), ((("a1")), 100000000, 0, -2213), 0), 100000000, 0, -2217), 0), 100000000, 0, -2216), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a2")), 100000000, 0, -2215)], (0)), 100000000, 0, -2214), (Tag1 (0, ((("a1")), 100000000, 0, -2213), ((("a1")), 100000000, 0, -2213), 0), 100000000, 0, -2212), 0), 100000000, 0, -2211), 0), 100000000, 0, -2210), 0, (("plugins/micromega/micromega.mli", 38, 481, 481), ("plugins/micromega/micromega.mli", 38, 481, 542), 0), 0, Tag1 ("Micromega_plugin__Micromega", 22)), 0); (("fold_right", 740), ((Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -2207), (Tag1 (0, ((("a1")), 100000000, 0, -2205), ((("a1")), 100000000, 0, -2205), 0), 100000000, 0, -2209), 0), 100000000, 0, -2208), (Tag1 (0, ((("a1")), 100000000, 0, -2205), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a2")), 100000000, 0, -2207)], (0)), 100000000, 0, -2206), ((("a1")), 100000000, 0, -2205), 0), 100000000, 0, -2204), 0), 100000000, 0, -2203), 0), 100000000, 0, -2202), 0, (("plugins/micromega/micromega.mli", 40, 544, 544), ("plugins/micromega/micromega.mli", 40, 544, 606), 0), 0, Tag1 ("Micromega_plugin__Micromega", 23)), 0); Tag1 (("positive", 741), (0, 0, Tag1 ([(("XI", 391), ([(Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2200)]), 0, (("plugins/micromega/micromega.mli", 43, 624, 624), ("plugins/micromega/micromega.mli", 43, 624, 640), 0), 0, Tag1 ("Micromega_plugin__Micromega", 25)); (("XO", 392), ([(Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2201)]), 0, (("plugins/micromega/micromega.mli", 44, 641, 641), ("plugins/micromega/micromega.mli", 44, 641, 657), 0), 0, Tag1 ("Micromega_plugin__Micromega", 26)); (("XH", 393), (0), 0, (("plugins/micromega/micromega.mli", 45, 658, 658), ("plugins/micromega/micromega.mli", 45, 658, 662), 0), 0, Tag1 ("Micromega_plugin__Micromega", 27))], 0), 1, 0, 0, 0, 0, 0, (("plugins/micromega/micromega.mli", 42, 608, 608), ("plugins/micromega/micromega.mli", 45, 658, 662), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 24)), 1, 0); Tag1 (("n", 742), (0, 0, Tag1 ([(("N0", 395), (0), 0, (("plugins/micromega/micromega.mli", 48, 673, 673), ("plugins/micromega/micromega.mli", 48, 673, 677), 0), 0, Tag1 ("Micromega_plugin__Micromega", 29)); (("Npos", 396), ([(Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2199)]), 0, (("plugins/micromega/micromega.mli", 49, 678, 678), ("plugins/micromega/micromega.mli", 49, 678, 696), 0), 0, Tag1 ("Micromega_plugin__Micromega", 30))], 0), 1, 0, 0, 0, 0, 0, (("plugins/micromega/micromega.mli", 47, 664, 664), ("plugins/micromega/micromega.mli", 49, 678, 696), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 28)), 1, 0); Tag1 (("z", 743), (0, 0, Tag1 ([(("Z0", 398), (0), 0, (("plugins/micromega/micromega.mli", 52, 707, 707), ("plugins/micromega/micromega.mli", 52, 707, 711), 0), 0, Tag1 ("Micromega_plugin__Micromega", 32)); (("Zpos", 399), ([(Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2197)]), 0, (("plugins/micromega/micromega.mli", 53, 712, 712), ("plugins/micromega/micromega.mli", 53, 712, 730), 0), 0, Tag1 ("Micromega_plugin__Micromega", 33)); (("Zneg", 400), ([(Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2198)]), 0, (("plugins/micromega/micromega.mli", 54, 731, 731), ("plugins/micromega/micromega.mli", 54, 731, 749), 0), 0, Tag1 ("Micromega_plugin__Micromega", 34))], 0), 1, 0, 0, 0, 0, 0, (("plugins/micromega/micromega.mli", 51, 698, 698), ("plugins/micromega/micromega.mli", 54, 731, 749), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 31)), 1, 0); Tag3 (("Pos", 744), 0, (Tag1 ([Tag1 (("mask", 940), (0, 0, Tag1 ([(("IsNul", 402), (0), 0, (("plugins/micromega/micromega.mli", 59, 783, 785), ("plugins/micromega/micromega.mli", 59, 783, 792), 0), 0, Tag1 ("Micromega_plugin__Micromega", 36)); (("IsPos", 403), ([(Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2266)]), 0, (("plugins/micromega/micromega.mli", 60, 793, 795), ("plugins/micromega/micromega.mli", 60, 793, 814), 0), 0, Tag1 ("Micromega_plugin__Micromega", 37)); (("IsNeg", 404), (0), 0, (("plugins/micromega/micromega.mli", 61, 815, 817), ("plugins/micromega/micromega.mli", 61, 815, 824), 0), 0, Tag1 ("Micromega_plugin__Micromega", 38))], 0), 1, 0, 0, 0, 0, 0, (("plugins/micromega/micromega.mli", 58, 769, 771), ("plugins/micromega/micromega.mli", 61, 815, 824), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 35)), 1, 0)]), 0, (("plugins/micromega/micromega.mli", 56, 751, 751), ("plugins/micromega/micromega.mli", 62, 825, 829), 0), Tag1 ("Micromega_plugin__Micromega", 39)), 0, 0); Tag3 (("Coq_Pos", 745), 0, (Tag1 ([(("succ", 941), ((Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2359), (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2358), 0), 100000000, 0, -2357), 0, (("plugins/micromega/micromega.mli", 66, 853, 855), ("plugins/micromega/micromega.mli", 66, 853, 886), 0), 0, Tag1 ("Micromega_plugin__Micromega", 40)), 0); (("add", 942), ((Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2356), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2355), (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2354), 0), 100000000, 0, -2353), 0), 100000000, 0, -2352), 0, (("plugins/micromega/micromega.mli", 68, 888, 890), ("plugins/micromega/micromega.mli", 68, 888, 932), 0), 0, Tag1 ("Micromega_plugin__Micromega", 41)), 0); (("add_carry", 943), ((Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2351), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2350), (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2349), 0), 100000000, 0, -2348), 0), 100000000, 0, -2347), 0, (("plugins/micromega/micromega.mli", 70, 934, 936), ("plugins/micromega/micromega.mli", 70, 934, 984), 0), 0, Tag1 ("Micromega_plugin__Micromega", 42)), 0); (("pred_double", 944), ((Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2346), (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2345), 0), 100000000, 0, -2344), 0, (("plugins/micromega/micromega.mli", 72, 986, 988), ("plugins/micromega/micromega.mli", 72, 986, 1026), 0), 0, Tag1 ("Micromega_plugin__Micromega", 43)), 0); Tag1 (("mask", 945), (0, 0, Tag1 ([(("IsNul", 411), (0), 0, (("plugins/micromega/micromega.mli", 75, 1053, 1055), ("plugins/micromega/micromega.mli", 75, 1053, 1062), 0), 0, Tag1 ("Micromega_plugin__Micromega", 45)); (("IsPos", 412), ([(Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2343)]), 0, (("plugins/micromega/micromega.mli", 76, 1063, 1065), ("plugins/micromega/micromega.mli", 76, 1063, 1084), 0), 0, Tag1 ("Micromega_plugin__Micromega", 46)); (("IsNeg", 413), (0), 0, (("plugins/micromega/micromega.mli", 77, 1085, 1087), ("plugins/micromega/micromega.mli", 77, 1085, 1094), 0), 0, Tag1 ("Micromega_plugin__Micromega", 47))], 0), 1, ((Tag3 (Tag1 ((("Pos", 744)), "mask"), 0, (0)), 100000000, 0, -2342)), 0, 0, 0, 0, (("plugins/micromega/micromega.mli", 74, 1028, 1030), ("plugins/micromega/micromega.mli", 77, 1085, 1094), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 44)), 1, 0); (("succ_double_mask", 946), ((Tag1 (0, (Tag3 ((("mask", 945)), 0, (0)), 100000000, 0, -2341), (Tag3 ((("mask", 945)), 0, (0)), 100000000, 0, -2340), 0), 100000000, 0, -2339), 0, (("plugins/micromega/micromega.mli", 79, 1096, 1098), ("plugins/micromega/micromega.mli", 79, 1096, 1133), 0), 0, Tag1 ("Micromega_plugin__Micromega", 48)), 0); (("double_mask", 947), ((Tag1 (0, (Tag3 ((("mask", 945)), 0, (0)), 100000000, 0, -2338), (Tag3 ((("mask", 945)), 0, (0)), 100000000, 0, -2337), 0), 100000000, 0, -2336), 0, (("plugins/micromega/micromega.mli", 81, 1135, 1137), ("plugins/micromega/micromega.mli", 81, 1135, 1167), 0), 0, Tag1 ("Micromega_plugin__Micromega", 49)), 0); (("double_pred_mask", 948), ((Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2335), (Tag3 ((("mask", 945)), 0, (0)), 100000000, 0, -2334), 0), 100000000, 0, -2333), 0, (("plugins/micromega/micromega.mli", 83, 1169, 1171), ("plugins/micromega/micromega.mli", 83, 1169, 1210), 0), 0, Tag1 ("Micromega_plugin__Micromega", 50)), 0); (("sub_mask", 949), ((Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2332), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2331), (Tag3 ((("mask", 945)), 0, (0)), 100000000, 0, -2330), 0), 100000000, 0, -2329), 0), 100000000, 0, -2328), 0, (("plugins/micromega/micromega.mli", 85, 1212, 1214), ("plugins/micromega/micromega.mli", 85, 1212, 1257), 0), 0, Tag1 ("Micromega_plugin__Micromega", 51)), 0); (("sub_mask_carry", 950), ((Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2327), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2326), (Tag3 ((("mask", 945)), 0, (0)), 100000000, 0, -2325), 0), 100000000, 0, -2324), 0), 100000000, 0, -2323), 0, (("plugins/micromega/micromega.mli", 87, 1259, 1261), ("plugins/micromega/micromega.mli", 87, 1259, 1310), 0), 0, Tag1 ("Micromega_plugin__Micromega", 52)), 0); (("sub", 951), ((Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2322), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2321), (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2320), 0), 100000000, 0, -2319), 0), 100000000, 0, -2318), 0, (("plugins/micromega/micromega.mli", 89, 1312, 1314), ("plugins/micromega/micromega.mli", 89, 1312, 1356), 0), 0, Tag1 ("Micromega_plugin__Micromega", 53)), 0); (("mul", 952), ((Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2317), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2316), (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2315), 0), 100000000, 0, -2314), 0), 100000000, 0, -2313), 0, (("plugins/micromega/micromega.mli", 91, 1358, 1360), ("plugins/micromega/micromega.mli", 91, 1358, 1402), 0), 0, Tag1 ("Micromega_plugin__Micromega", 54)), 0); (("iter", 953), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -2310), ((("a1")), 100000000, 0, -2310), 0), 100000000, 0, -2312), (Tag1 (0, ((("a1")), 100000000, 0, -2310), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2311), ((("a1")), 100000000, 0, -2310), 0), 100000000, 0, -2309), 0), 100000000, 0, -2308), 0), 100000000, 0, -2307), 0, (("plugins/micromega/micromega.mli", 93, 1404, 1406), ("plugins/micromega/micromega.mli", 93, 1404, 1455), 0), 0, Tag1 ("Micromega_plugin__Micromega", 55)), 0); (("size_nat", 954), ((Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2306), (Tag3 ((("nat", 728)), 0, (0)), 100000000, 0, -2305), 0), 100000000, 0, -2304), 0, (("plugins/micromega/micromega.mli", 95, 1457, 1459), ("plugins/micromega/micromega.mli", 95, 1457, 1489), 0), 0, Tag1 ("Micromega_plugin__Micromega", 56)), 0); (("compare_cont", 955), ((Tag1 (0, (Tag3 ((("comparison", 733)), 0, (0)), 100000000, 0, -2303), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2302), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2301), (Tag3 ((("comparison", 733)), 0, (0)), 100000000, 0, -2300), 0), 100000000, 0, -2299), 0), 100000000, 0, -2298), 0), 100000000, 0, -2297), 0, (("plugins/micromega/micromega.mli", 97, 1491, 1493), ("plugins/micromega/micromega.mli", 97, 1491, 1560), 0), 0, Tag1 ("Micromega_plugin__Micromega", 57)), 0); (("compare", 956), ((Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2296), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2295), (Tag3 ((("comparison", 733)), 0, (0)), 100000000, 0, -2294), 0), 100000000, 0, -2293), 0), 100000000, 0, -2292), 0, (("plugins/micromega/micromega.mli", 99, 1562, 1564), ("plugins/micromega/micromega.mli", 99, 1562, 1612), 0), 0, Tag1 ("Micromega_plugin__Micromega", 58)), 0); (("max", 957), ((Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2291), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2290), (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2289), 0), 100000000, 0, -2288), 0), 100000000, 0, -2287), 0, (("plugins/micromega/micromega.mli", 101, 1614, 1616), ("plugins/micromega/micromega.mli", 101, 1614, 1658), 0), 0, Tag1 ("Micromega_plugin__Micromega", 59)), 0); (("leb", 958), ((Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2286), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2285), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2284), 0), 100000000, 0, -2283), 0), 100000000, 0, -2282), 0, (("plugins/micromega/micromega.mli", 103, 1660, 1662), ("plugins/micromega/micromega.mli", 103, 1660, 1700), 0), 0, Tag1 ("Micromega_plugin__Micromega", 60)), 0); (("gcdn", 959), ((Tag1 (0, (Tag3 ((("nat", 728)), 0, (0)), 100000000, 0, -2281), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2280), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2279), (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2278), 0), 100000000, 0, -2277), 0), 100000000, 0, -2276), 0), 100000000, 0, -2275), 0, (("plugins/micromega/micromega.mli", 105, 1702, 1704), ("plugins/micromega/micromega.mli", 105, 1702, 1754), 0), 0, Tag1 ("Micromega_plugin__Micromega", 61)), 0); (("gcd", 960), ((Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2274), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2273), (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2272), 0), 100000000, 0, -2271), 0), 100000000, 0, -2270), 0, (("plugins/micromega/micromega.mli", 107, 1756, 1758), ("plugins/micromega/micromega.mli", 107, 1756, 1800), 0), 0, Tag1 ("Micromega_plugin__Micromega", 62)), 0); (("of_succ_nat", 961), ((Tag1 (0, (Tag3 ((("nat", 728)), 0, (0)), 100000000, 0, -2269), (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2268), 0), 100000000, 0, -2267), 0, (("plugins/micromega/micromega.mli", 109, 1802, 1804), ("plugins/micromega/micromega.mli", 109, 1802, 1837), 0), 0, Tag1 ("Micromega_plugin__Micromega", 63)), 0)]), 0, (("plugins/micromega/micromega.mli", 64, 831, 831), ("plugins/micromega/micromega.mli", 110, 1838, 1842), 0), Tag1 ("Micromega_plugin__Micromega", 64)), 0, 0); Tag3 (("N", 746), 0, (Tag1 ([(("of_nat", 962), ((Tag1 (0, (Tag3 ((("nat", 728)), 0, (0)), 100000000, 0, -2362), (Tag3 ((("n", 742)), 0, (0)), 100000000, 0, -2361), 0), 100000000, 0, -2360), 0, (("plugins/micromega/micromega.mli", 114, 1860, 1862), ("plugins/micromega/micromega.mli", 114, 1860, 1883), 0), 0, Tag1 ("Micromega_plugin__Micromega", 65)), 0)]), 0, (("plugins/micromega/micromega.mli", 112, 1844, 1844), ("plugins/micromega/micromega.mli", 115, 1884, 1888), 0), Tag1 ("Micromega_plugin__Micromega", 66)), 0, 0); (("pow_pos", 747), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -2193), (Tag1 (0, ((("a1")), 100000000, 0, -2193), ((("a1")), 100000000, 0, -2193), 0), 100000000, 0, -2196), 0), 100000000, 0, -2195), (Tag1 (0, ((("a1")), 100000000, 0, -2193), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2194), ((("a1")), 100000000, 0, -2193), 0), 100000000, 0, -2192), 0), 100000000, 0, -2191), 0), 100000000, 0, -2190), 0, (("plugins/micromega/micromega.mli", 117, 1890, 1890), ("plugins/micromega/micromega.mli", 117, 1890, 1949), 0), 0, Tag1 ("Micromega_plugin__Micromega", 67)), 0); Tag3 (("Z", 748), 0, (Tag1 ([(("double", 963), ((Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2465), (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2464), 0), 100000000, 0, -2463), 0, (("plugins/micromega/micromega.mli", 121, 1967, 1969), ("plugins/micromega/micromega.mli", 121, 1967, 1988), 0), 0, Tag1 ("Micromega_plugin__Micromega", 68)), 0); (("succ_double", 964), ((Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2462), (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2461), 0), 100000000, 0, -2460), 0, (("plugins/micromega/micromega.mli", 123, 1990, 1992), ("plugins/micromega/micromega.mli", 123, 1990, 2016), 0), 0, Tag1 ("Micromega_plugin__Micromega", 69)), 0); (("pred_double", 965), ((Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2459), (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2458), 0), 100000000, 0, -2457), 0, (("plugins/micromega/micromega.mli", 125, 2018, 2020), ("plugins/micromega/micromega.mli", 125, 2018, 2044), 0), 0, Tag1 ("Micromega_plugin__Micromega", 70)), 0); (("pos_sub", 966), ((Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2456), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2455), (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2454), 0), 100000000, 0, -2453), 0), 100000000, 0, -2452), 0, (("plugins/micromega/micromega.mli", 127, 2046, 2048), ("plugins/micromega/micromega.mli", 127, 2046, 2087), 0), 0, Tag1 ("Micromega_plugin__Micromega", 71)), 0); (("add", 967), ((Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2451), (Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2450), (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2449), 0), 100000000, 0, -2448), 0), 100000000, 0, -2447), 0, (("plugins/micromega/micromega.mli", 129, 2089, 2091), ("plugins/micromega/micromega.mli", 129, 2089, 2112), 0), 0, Tag1 ("Micromega_plugin__Micromega", 72)), 0); (("opp", 968), ((Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2446), (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2445), 0), 100000000, 0, -2444), 0, (("plugins/micromega/micromega.mli", 131, 2114, 2116), ("plugins/micromega/micromega.mli", 131, 2114, 2132), 0), 0, Tag1 ("Micromega_plugin__Micromega", 73)), 0); (("sub", 969), ((Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2443), (Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2442), (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2441), 0), 100000000, 0, -2440), 0), 100000000, 0, -2439), 0, (("plugins/micromega/micromega.mli", 133, 2134, 2136), ("plugins/micromega/micromega.mli", 133, 2134, 2157), 0), 0, Tag1 ("Micromega_plugin__Micromega", 74)), 0); (("mul", 970), ((Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2438), (Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2437), (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2436), 0), 100000000, 0, -2435), 0), 100000000, 0, -2434), 0, (("plugins/micromega/micromega.mli", 135, 2159, 2161), ("plugins/micromega/micromega.mli", 135, 2159, 2182), 0), 0, Tag1 ("Micromega_plugin__Micromega", 75)), 0); (("pow_pos", 971), ((Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2433), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2432), (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2431), 0), 100000000, 0, -2430), 0), 100000000, 0, -2429), 0, (("plugins/micromega/micromega.mli", 137, 2184, 2186), ("plugins/micromega/micromega.mli", 137, 2184, 2218), 0), 0, Tag1 ("Micromega_plugin__Micromega", 76)), 0); (("pow", 972), ((Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2428), (Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2427), (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2426), 0), 100000000, 0, -2425), 0), 100000000, 0, -2424), 0, (("plugins/micromega/micromega.mli", 139, 2220, 2222), ("plugins/micromega/micromega.mli", 139, 2220, 2243), 0), 0, Tag1 ("Micromega_plugin__Micromega", 77)), 0); (("compare", 973), ((Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2423), (Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2422), (Tag3 ((("comparison", 733)), 0, (0)), 100000000, 0, -2421), 0), 100000000, 0, -2420), 0), 100000000, 0, -2419), 0, (("plugins/micromega/micromega.mli", 141, 2245, 2247), ("plugins/micromega/micromega.mli", 141, 2245, 2281), 0), 0, Tag1 ("Micromega_plugin__Micromega", 78)), 0); (("leb", 974), ((Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2418), (Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2417), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2416), 0), 100000000, 0, -2415), 0), 100000000, 0, -2414), 0, (("plugins/micromega/micromega.mli", 143, 2283, 2285), ("plugins/micromega/micromega.mli", 143, 2283, 2309), 0), 0, Tag1 ("Micromega_plugin__Micromega", 79)), 0); (("ltb", 975), ((Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2413), (Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2412), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2411), 0), 100000000, 0, -2410), 0), 100000000, 0, -2409), 0, (("plugins/micromega/micromega.mli", 145, 2311, 2313), ("plugins/micromega/micromega.mli", 145, 2311, 2337), 0), 0, Tag1 ("Micromega_plugin__Micromega", 80)), 0); (("gtb", 976), ((Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2408), (Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2407), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2406), 0), 100000000, 0, -2405), 0), 100000000, 0, -2404), 0, (("plugins/micromega/micromega.mli", 147, 2339, 2341), ("plugins/micromega/micromega.mli", 147, 2339, 2365), 0), 0, Tag1 ("Micromega_plugin__Micromega", 81)), 0); (("max", 977), ((Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2403), (Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2402), (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2401), 0), 100000000, 0, -2400), 0), 100000000, 0, -2399), 0, (("plugins/micromega/micromega.mli", 149, 2367, 2369), ("plugins/micromega/micromega.mli", 149, 2367, 2390), 0), 0, Tag1 ("Micromega_plugin__Micromega", 82)), 0); (("abs", 978), ((Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2398), (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2397), 0), 100000000, 0, -2396), 0, (("plugins/micromega/micromega.mli", 151, 2392, 2394), ("plugins/micromega/micromega.mli", 151, 2392, 2410), 0), 0, Tag1 ("Micromega_plugin__Micromega", 83)), 0); (("to_N", 979), ((Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2395), (Tag3 ((("n", 742)), 0, (0)), 100000000, 0, -2394), 0), 100000000, 0, -2393), 0, (("plugins/micromega/micromega.mli", 153, 2412, 2414), ("plugins/micromega/micromega.mli", 153, 2412, 2431), 0), 0, Tag1 ("Micromega_plugin__Micromega", 84)), 0); (("of_nat", 980), ((Tag1 (0, (Tag3 ((("nat", 728)), 0, (0)), 100000000, 0, -2392), (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2391), 0), 100000000, 0, -2390), 0, (("plugins/micromega/micromega.mli", 155, 2433, 2435), ("plugins/micromega/micromega.mli", 155, 2433, 2456), 0), 0, Tag1 ("Micromega_plugin__Micromega", 85)), 0); (("of_N", 981), ((Tag1 (0, (Tag3 ((("n", 742)), 0, (0)), 100000000, 0, -2389), (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2388), 0), 100000000, 0, -2387), 0, (("plugins/micromega/micromega.mli", 157, 2458, 2460), ("plugins/micromega/micromega.mli", 157, 2458, 2477), 0), 0, Tag1 ("Micromega_plugin__Micromega", 86)), 0); (("pos_div_eucl", 982), ((Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2386), (Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2385), (Tag2 ([(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2383); (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2384)]), 100000000, 0, -2382), 0), 100000000, 0, -2381), 0), 100000000, 0, -2380), 0, (("plugins/micromega/micromega.mli", 159, 2479, 2481), ("plugins/micromega/micromega.mli", 159, 2479, 2522), 0), 0, Tag1 ("Micromega_plugin__Micromega", 87)), 0); (("div_eucl", 983), ((Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2379), (Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2378), (Tag2 ([(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2376); (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2377)]), 100000000, 0, -2375), 0), 100000000, 0, -2374), 0), 100000000, 0, -2373), 0, (("plugins/micromega/micromega.mli", 161, 2524, 2526), ("plugins/micromega/micromega.mli", 161, 2524, 2556), 0), 0, Tag1 ("Micromega_plugin__Micromega", 88)), 0); (("div", 984), ((Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2372), (Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2371), (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2370), 0), 100000000, 0, -2369), 0), 100000000, 0, -2368), 0, (("plugins/micromega/micromega.mli", 163, 2558, 2560), ("plugins/micromega/micromega.mli", 163, 2558, 2581), 0), 0, Tag1 ("Micromega_plugin__Micromega", 89)), 0); (("gcd", 985), ((Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2367), (Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2366), (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2365), 0), 100000000, 0, -2364), 0), 100000000, 0, -2363), 0, (("plugins/micromega/micromega.mli", 165, 2583, 2585), ("plugins/micromega/micromega.mli", 165, 2583, 2606), 0), 0, Tag1 ("Micromega_plugin__Micromega", 90)), 0)]), 0, (("plugins/micromega/micromega.mli", 119, 1951, 1951), ("plugins/micromega/micromega.mli", 166, 2607, 2611), 0), Tag1 ("Micromega_plugin__Micromega", 91)), 0, 0); (("zeq_bool", 749), ((Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2189), (Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -2188), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2187), 0), 100000000, 0, -2186), 0), 100000000, 0, -2185), 0, (("plugins/micromega/micromega.mli", 168, 2613, 2613), ("plugins/micromega/micromega.mli", 168, 2613, 2642), 0), 0, Tag1 ("Micromega_plugin__Micromega", 92)), 0); Tag1 (("pExpr", 750), ([((("c")), 100000000, 0, -2174)], 1, Tag1 ([(("PEc", 460), ([((("c")), 100000000, 0, -2174)]), 0, (("plugins/micromega/micromega.mli", 171, 2660, 2660), ("plugins/micromega/micromega.mli", 171, 2660, 2671), 0), 0, Tag1 ("Micromega_plugin__Micromega", 94)); (("PEX", 461), ([(Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2175)]), 0, (("plugins/micromega/micromega.mli", 172, 2672, 2672), ("plugins/micromega/micromega.mli", 172, 2672, 2689), 0), 0, Tag1 ("Micromega_plugin__Micromega", 95)); (("PEadd", 462), ([(Tag3 ((("pExpr", 750)), [((("c")), 100000000, 0, -2174)], (0)), 100000000, 0, -2176); (Tag3 ((("pExpr", 750)), [((("c")), 100000000, 0, -2174)], (0)), 100000000, 0, -2177)]), 0, (("plugins/micromega/micromega.mli", 173, 2690, 2690), ("plugins/micromega/micromega.mli", 173, 2690, 2720), 0), 0, Tag1 ("Micromega_plugin__Micromega", 96)); (("PEsub", 463), ([(Tag3 ((("pExpr", 750)), [((("c")), 100000000, 0, -2174)], (0)), 100000000, 0, -2178); (Tag3 ((("pExpr", 750)), [((("c")), 100000000, 0, -2174)], (0)), 100000000, 0, -2179)]), 0, (("plugins/micromega/micromega.mli", 174, 2721, 2721), ("plugins/micromega/micromega.mli", 174, 2721, 2751), 0), 0, Tag1 ("Micromega_plugin__Micromega", 97)); (("PEmul", 464), ([(Tag3 ((("pExpr", 750)), [((("c")), 100000000, 0, -2174)], (0)), 100000000, 0, -2180); (Tag3 ((("pExpr", 750)), [((("c")), 100000000, 0, -2174)], (0)), 100000000, 0, -2181)]), 0, (("plugins/micromega/micromega.mli", 175, 2752, 2752), ("plugins/micromega/micromega.mli", 175, 2752, 2782), 0), 0, Tag1 ("Micromega_plugin__Micromega", 98)); (("PEopp", 465), ([(Tag3 ((("pExpr", 750)), [((("c")), 100000000, 0, -2174)], (0)), 100000000, 0, -2182)]), 0, (("plugins/micromega/micromega.mli", 176, 2783, 2783), ("plugins/micromega/micromega.mli", 176, 2783, 2802), 0), 0, Tag1 ("Micromega_plugin__Micromega", 99)); (("PEpow", 466), ([(Tag3 ((("pExpr", 750)), [((("c")), 100000000, 0, -2174)], (0)), 100000000, 0, -2183); (Tag3 ((("n", 742)), 0, (0)), 100000000, 0, -2184)]), 0, (("plugins/micromega/micromega.mli", 177, 2803, 2803), ("plugins/micromega/micromega.mli", 177, 2803, 2826), 0), 0, Tag1 ("Micromega_plugin__Micromega", 100))], 0), 1, 0, [25], [0], 0, 0, (("plugins/micromega/micromega.mli", 170, 2644, 2644), ("plugins/micromega/micromega.mli", 177, 2803, 2826), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 93)), 1, 0); Tag1 (("pol", 751), ([((("c")), 100000000, 0, -2168)], 1, Tag1 ([(("Pc", 468), ([((("c")), 100000000, 0, -2168)]), 0, (("plugins/micromega/micromega.mli", 180, 2842, 2842), ("plugins/micromega/micromega.mli", 180, 2842, 2852), 0), 0, Tag1 ("Micromega_plugin__Micromega", 102)); (("Pinj", 469), ([(Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2169); (Tag3 ((("pol", 751)), [((("c")), 100000000, 0, -2168)], (0)), 100000000, 0, -2170)]), 0, (("plugins/micromega/micromega.mli", 181, 2853, 2853), ("plugins/micromega/micromega.mli", 181, 2853, 2880), 0), 0, Tag1 ("Micromega_plugin__Micromega", 103)); (("PX", 470), ([(Tag3 ((("pol", 751)), [((("c")), 100000000, 0, -2168)], (0)), 100000000, 0, -2171); (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2172); (Tag3 ((("pol", 751)), [((("c")), 100000000, 0, -2168)], (0)), 100000000, 0, -2173)]), 0, (("plugins/micromega/micromega.mli", 182, 2881, 2881), ("plugins/micromega/micromega.mli", 182, 2881, 2915), 0), 0, Tag1 ("Micromega_plugin__Micromega", 104))], 0), 1, 0, [25], [0], 0, 0, (("plugins/micromega/micromega.mli", 179, 2828, 2828), ("plugins/micromega/micromega.mli", 182, 2881, 2915), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 101)), 1, 0); (("p0", 752), ((Tag1 (0, ((("a1")), 100000000, 0, -2167), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2167)], (0)), 100000000, 0, -2166), 0), 100000000, 0, -2165), 0, (("plugins/micromega/micromega.mli", 184, 2917, 2917), ("plugins/micromega/micromega.mli", 184, 2917, 2940), 0), 0, Tag1 ("Micromega_plugin__Micromega", 105)), 0); (("p1", 753), ((Tag1 (0, ((("a1")), 100000000, 0, -2164), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2164)], (0)), 100000000, 0, -2163), 0), 100000000, 0, -2162), 0, (("plugins/micromega/micromega.mli", 186, 2942, 2942), ("plugins/micromega/micromega.mli", 186, 2942, 2965), 0), 0, Tag1 ("Micromega_plugin__Micromega", 106)), 0); (("peq", 754), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -2157), (Tag1 (0, ((("a1")), 100000000, 0, -2157), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2161), 0), 100000000, 0, -2160), 0), 100000000, 0, -2159), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2157)], (0)), 100000000, 0, -2158), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2157)], (0)), 100000000, 0, -2156), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2155), 0), 100000000, 0, -2154), 0), 100000000, 0, -2153), 0), 100000000, 0, -2152), 0, (("plugins/micromega/micromega.mli", 188, 2967, 2967), ("plugins/micromega/micromega.mli", 188, 2967, 3027), 0), 0, Tag1 ("Micromega_plugin__Micromega", 107)), 0); (("mkPinj", 755), ((Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2151), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2149)], (0)), 100000000, 0, -2150), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2149)], (0)), 100000000, 0, -2148), 0), 100000000, 0, -2147), 0), 100000000, 0, -2146), 0, (("plugins/micromega/micromega.mli", 190, 3029, 3029), ("plugins/micromega/micromega.mli", 190, 3029, 3072), 0), 0, Tag1 ("Micromega_plugin__Micromega", 108)), 0); (("mkPinj_pred", 756), ((Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2145), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2143)], (0)), 100000000, 0, -2144), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2143)], (0)), 100000000, 0, -2142), 0), 100000000, 0, -2141), 0), 100000000, 0, -2140), 0, (("plugins/micromega/micromega.mli", 192, 3074, 3074), ("plugins/micromega/micromega.mli", 192, 3074, 3122), 0), 0, Tag1 ("Micromega_plugin__Micromega", 109)), 0); (("mkPX", 757), ((Tag1 (0, ((("a1")), 100000000, 0, -2133), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -2133), (Tag1 (0, ((("a1")), 100000000, 0, -2133), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2139), 0), 100000000, 0, -2138), 0), 100000000, 0, -2137), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2133)], (0)), 100000000, 0, -2136), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2135), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2133)], (0)), 100000000, 0, -2134), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2133)], (0)), 100000000, 0, -2132), 0), 100000000, 0, -2131), 0), 100000000, 0, -2130), 0), 100000000, 0, -2129), 0), 100000000, 0, -2128), 0), 100000000, 0, -2127), 0, (("plugins/micromega/micromega.mli", 194, 3124, 3124), ("plugins/micromega/micromega.mli", 194, 3124, 3207), 0), 0, Tag1 ("Micromega_plugin__Micromega", 110)), 0); (("mkXi", 758), ((Tag1 (0, ((("a1")), 100000000, 0, -2125), (Tag1 (0, ((("a1")), 100000000, 0, -2125), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2126), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2125)], (0)), 100000000, 0, -2124), 0), 100000000, 0, -2123), 0), 100000000, 0, -2122), 0), 100000000, 0, -2121), 0, (("plugins/micromega/micromega.mli", 196, 3209, 3209), ("plugins/micromega/micromega.mli", 196, 3209, 3253), 0), 0, Tag1 ("Micromega_plugin__Micromega", 111)), 0); (("mkX", 759), ((Tag1 (0, ((("a1")), 100000000, 0, -2120), (Tag1 (0, ((("a1")), 100000000, 0, -2120), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2120)], (0)), 100000000, 0, -2119), 0), 100000000, 0, -2118), 0), 100000000, 0, -2117), 0, (("plugins/micromega/micromega.mli", 198, 3255, 3255), ("plugins/micromega/micromega.mli", 198, 3255, 3286), 0), 0, Tag1 ("Micromega_plugin__Micromega", 112)), 0); (("popp", 760), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -2114), ((("a1")), 100000000, 0, -2114), 0), 100000000, 0, -2116), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2114)], (0)), 100000000, 0, -2115), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2114)], (0)), 100000000, 0, -2113), 0), 100000000, 0, -2112), 0), 100000000, 0, -2111), 0, (("plugins/micromega/micromega.mli", 200, 3288, 3288), ("plugins/micromega/micromega.mli", 200, 3288, 3333), 0), 0, Tag1 ("Micromega_plugin__Micromega", 113)), 0); (("paddC", 761), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -2107), (Tag1 (0, ((("a1")), 100000000, 0, -2107), ((("a1")), 100000000, 0, -2107), 0), 100000000, 0, -2110), 0), 100000000, 0, -2109), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2107)], (0)), 100000000, 0, -2108), (Tag1 (0, ((("a1")), 100000000, 0, -2107), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2107)], (0)), 100000000, 0, -2106), 0), 100000000, 0, -2105), 0), 100000000, 0, -2104), 0), 100000000, 0, -2103), 0, (("plugins/micromega/micromega.mli", 202, 3335, 3335), ("plugins/micromega/micromega.mli", 202, 3335, 3395), 0), 0, Tag1 ("Micromega_plugin__Micromega", 114)), 0); (("psubC", 762), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -2099), (Tag1 (0, ((("a1")), 100000000, 0, -2099), ((("a1")), 100000000, 0, -2099), 0), 100000000, 0, -2102), 0), 100000000, 0, -2101), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2099)], (0)), 100000000, 0, -2100), (Tag1 (0, ((("a1")), 100000000, 0, -2099), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2099)], (0)), 100000000, 0, -2098), 0), 100000000, 0, -2097), 0), 100000000, 0, -2096), 0), 100000000, 0, -2095), 0, (("plugins/micromega/micromega.mli", 204, 3397, 3397), ("plugins/micromega/micromega.mli", 204, 3397, 3457), 0), 0, Tag1 ("Micromega_plugin__Micromega", 115)), 0); (("paddI", 763), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -2084), (Tag1 (0, ((("a1")), 100000000, 0, -2084), ((("a1")), 100000000, 0, -2084), 0), 100000000, 0, -2094), 0), 100000000, 0, -2093), (Tag1 (0, (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2084)], (0)), 100000000, 0, -2092), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2084)], (0)), 100000000, 0, -2091), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2084)], (0)), 100000000, 0, -2090), 0), 100000000, 0, -2089), 0), 100000000, 0, -2088), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2084)], (0)), 100000000, 0, -2087), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2086), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2084)], (0)), 100000000, 0, -2085), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2084)], (0)), 100000000, 0, -2083), 0), 100000000, 0, -2082), 0), 100000000, 0, -2081), 0), 100000000, 0, -2080), 0), 100000000, 0, -2079), 0), 100000000, 0, -2078), 0, (("plugins/micromega/micromega.mli", 206, 3459, 3459), ("plugins/micromega/micromega.mli", 206, 3459, 3570), 0), 0, Tag1 ("Micromega_plugin__Micromega", 116)), 0); (("psubI", 764), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -2066), (Tag1 (0, ((("a1")), 100000000, 0, -2066), ((("a1")), 100000000, 0, -2066), 0), 100000000, 0, -2077), 0), 100000000, 0, -2076), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -2066), ((("a1")), 100000000, 0, -2066), 0), 100000000, 0, -2075), (Tag1 (0, (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2066)], (0)), 100000000, 0, -2074), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2066)], (0)), 100000000, 0, -2073), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2066)], (0)), 100000000, 0, -2072), 0), 100000000, 0, -2071), 0), 100000000, 0, -2070), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2066)], (0)), 100000000, 0, -2069), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2068), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2066)], (0)), 100000000, 0, -2067), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2066)], (0)), 100000000, 0, -2065), 0), 100000000, 0, -2064), 0), 100000000, 0, -2063), 0), 100000000, 0, -2062), 0), 100000000, 0, -2061), 0), 100000000, 0, -2060), 0), 100000000, 0, -2059), 0, (("plugins/micromega/micromega.mli", 208, 3572, 3572), ("plugins/micromega/micromega.mli", 208, 3572, 3699), 0), 0, Tag1 ("Micromega_plugin__Micromega", 117)), 0); (("paddX", 765), ((Tag1 (0, ((("a1")), 100000000, 0, -2047), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -2047), (Tag1 (0, ((("a1")), 100000000, 0, -2047), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2058), 0), 100000000, 0, -2057), 0), 100000000, 0, -2056), (Tag1 (0, (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2047)], (0)), 100000000, 0, -2055), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2047)], (0)), 100000000, 0, -2054), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2047)], (0)), 100000000, 0, -2053), 0), 100000000, 0, -2052), 0), 100000000, 0, -2051), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2047)], (0)), 100000000, 0, -2050), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2049), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2047)], (0)), 100000000, 0, -2048), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2047)], (0)), 100000000, 0, -2046), 0), 100000000, 0, -2045), 0), 100000000, 0, -2044), 0), 100000000, 0, -2043), 0), 100000000, 0, -2042), 0), 100000000, 0, -2041), 0), 100000000, 0, -2040), 0, (("plugins/micromega/micromega.mli", 210, 3701, 3701), ("plugins/micromega/micromega.mli", 210, 3701, 3820), 0), 0, Tag1 ("Micromega_plugin__Micromega", 118)), 0); (("psubX", 766), ((Tag1 (0, ((("a1")), 100000000, 0, -2027), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -2027), ((("a1")), 100000000, 0, -2027), 0), 100000000, 0, -2039), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -2027), (Tag1 (0, ((("a1")), 100000000, 0, -2027), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2038), 0), 100000000, 0, -2037), 0), 100000000, 0, -2036), (Tag1 (0, (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2027)], (0)), 100000000, 0, -2035), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2027)], (0)), 100000000, 0, -2034), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2027)], (0)), 100000000, 0, -2033), 0), 100000000, 0, -2032), 0), 100000000, 0, -2031), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2027)], (0)), 100000000, 0, -2030), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -2029), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2027)], (0)), 100000000, 0, -2028), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2027)], (0)), 100000000, 0, -2026), 0), 100000000, 0, -2025), 0), 100000000, 0, -2024), 0), 100000000, 0, -2023), 0), 100000000, 0, -2022), 0), 100000000, 0, -2021), 0), 100000000, 0, -2020), 0), 100000000, 0, -2019), 0, (("plugins/micromega/micromega.mli", 212, 3822, 3822), ("plugins/micromega/micromega.mli", 212, 3822, 3957), 0), 0, Tag1 ("Micromega_plugin__Micromega", 119)), 0); (("padd", 767), ((Tag1 (0, ((("a1")), 100000000, 0, -2011), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -2011), (Tag1 (0, ((("a1")), 100000000, 0, -2011), ((("a1")), 100000000, 0, -2011), 0), 100000000, 0, -2018), 0), 100000000, 0, -2017), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -2011), (Tag1 (0, ((("a1")), 100000000, 0, -2011), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2016), 0), 100000000, 0, -2015), 0), 100000000, 0, -2014), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2011)], (0)), 100000000, 0, -2013), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2011)], (0)), 100000000, 0, -2012), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -2011)], (0)), 100000000, 0, -2010), 0), 100000000, 0, -2009), 0), 100000000, 0, -2008), 0), 100000000, 0, -2007), 0), 100000000, 0, -2006), 0), 100000000, 0, -2005), 0, (("plugins/micromega/micromega.mli", 214, 3959, 3959), ("plugins/micromega/micromega.mli", 214, 3959, 4053), 0), 0, Tag1 ("Micromega_plugin__Micromega", 120)), 0); (("psub", 768), ((Tag1 (0, ((("a1")), 100000000, 0, -1994), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1994), (Tag1 (0, ((("a1")), 100000000, 0, -1994), ((("a1")), 100000000, 0, -1994), 0), 100000000, 0, -2004), 0), 100000000, 0, -2003), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1994), (Tag1 (0, ((("a1")), 100000000, 0, -1994), ((("a1")), 100000000, 0, -1994), 0), 100000000, 0, -2002), 0), 100000000, 0, -2001), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1994), ((("a1")), 100000000, 0, -1994), 0), 100000000, 0, -2000), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1994), (Tag1 (0, ((("a1")), 100000000, 0, -1994), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1999), 0), 100000000, 0, -1998), 0), 100000000, 0, -1997), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1994)], (0)), 100000000, 0, -1996), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1994)], (0)), 100000000, 0, -1995), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1994)], (0)), 100000000, 0, -1993), 0), 100000000, 0, -1992), 0), 100000000, 0, -1991), 0), 100000000, 0, -1990), 0), 100000000, 0, -1989), 0), 100000000, 0, -1988), 0), 100000000, 0, -1987), 0), 100000000, 0, -1986), 0, (("plugins/micromega/micromega.mli", 216, 4055, 4055), ("plugins/micromega/micromega.mli", 216, 4055, 4188), 0), 0, Tag1 ("Micromega_plugin__Micromega", 121)), 0); (("pmulC_aux", 769), ((Tag1 (0, ((("a1")), 100000000, 0, -1979), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1979), (Tag1 (0, ((("a1")), 100000000, 0, -1979), ((("a1")), 100000000, 0, -1979), 0), 100000000, 0, -1985), 0), 100000000, 0, -1984), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1979), (Tag1 (0, ((("a1")), 100000000, 0, -1979), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1983), 0), 100000000, 0, -1982), 0), 100000000, 0, -1981), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1979)], (0)), 100000000, 0, -1980), (Tag1 (0, ((("a1")), 100000000, 0, -1979), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1979)], (0)), 100000000, 0, -1978), 0), 100000000, 0, -1977), 0), 100000000, 0, -1976), 0), 100000000, 0, -1975), 0), 100000000, 0, -1974), 0), 100000000, 0, -1973), 0, (("plugins/micromega/micromega.mli", 218, 4190, 4190), ("plugins/micromega/micromega.mli", 218, 4190, 4285), 0), 0, Tag1 ("Micromega_plugin__Micromega", 122)), 0); (("pmulC", 770), ((Tag1 (0, ((("a1")), 100000000, 0, -1966), (Tag1 (0, ((("a1")), 100000000, 0, -1966), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1966), (Tag1 (0, ((("a1")), 100000000, 0, -1966), ((("a1")), 100000000, 0, -1966), 0), 100000000, 0, -1972), 0), 100000000, 0, -1971), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1966), (Tag1 (0, ((("a1")), 100000000, 0, -1966), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1970), 0), 100000000, 0, -1969), 0), 100000000, 0, -1968), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1966)], (0)), 100000000, 0, -1967), (Tag1 (0, ((("a1")), 100000000, 0, -1966), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1966)], (0)), 100000000, 0, -1965), 0), 100000000, 0, -1964), 0), 100000000, 0, -1963), 0), 100000000, 0, -1962), 0), 100000000, 0, -1961), 0), 100000000, 0, -1960), 0), 100000000, 0, -1959), 0, (("plugins/micromega/micromega.mli", 220, 4287, 4287), ("plugins/micromega/micromega.mli", 220, 4287, 4385), 0), 0, Tag1 ("Micromega_plugin__Micromega", 123)), 0); (("pmulI", 771), ((Tag1 (0, ((("a1")), 100000000, 0, -1945), (Tag1 (0, ((("a1")), 100000000, 0, -1945), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1945), (Tag1 (0, ((("a1")), 100000000, 0, -1945), ((("a1")), 100000000, 0, -1945), 0), 100000000, 0, -1958), 0), 100000000, 0, -1957), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1945), (Tag1 (0, ((("a1")), 100000000, 0, -1945), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1956), 0), 100000000, 0, -1955), 0), 100000000, 0, -1954), (Tag1 (0, (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1945)], (0)), 100000000, 0, -1953), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1945)], (0)), 100000000, 0, -1952), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1945)], (0)), 100000000, 0, -1951), 0), 100000000, 0, -1950), 0), 100000000, 0, -1949), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1945)], (0)), 100000000, 0, -1948), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -1947), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1945)], (0)), 100000000, 0, -1946), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1945)], (0)), 100000000, 0, -1944), 0), 100000000, 0, -1943), 0), 100000000, 0, -1942), 0), 100000000, 0, -1941), 0), 100000000, 0, -1940), 0), 100000000, 0, -1939), 0), 100000000, 0, -1938), 0), 100000000, 0, -1937), 0), 100000000, 0, -1936), 0, (("plugins/micromega/micromega.mli", 222, 4387, 4387), ("plugins/micromega/micromega.mli", 222, 4387, 4536), 0), 0, Tag1 ("Micromega_plugin__Micromega", 124)), 0); (("pmul", 772), ((Tag1 (0, ((("a1")), 100000000, 0, -1926), (Tag1 (0, ((("a1")), 100000000, 0, -1926), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1926), (Tag1 (0, ((("a1")), 100000000, 0, -1926), ((("a1")), 100000000, 0, -1926), 0), 100000000, 0, -1935), 0), 100000000, 0, -1934), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1926), (Tag1 (0, ((("a1")), 100000000, 0, -1926), ((("a1")), 100000000, 0, -1926), 0), 100000000, 0, -1933), 0), 100000000, 0, -1932), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1926), (Tag1 (0, ((("a1")), 100000000, 0, -1926), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1931), 0), 100000000, 0, -1930), 0), 100000000, 0, -1929), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1926)], (0)), 100000000, 0, -1928), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1926)], (0)), 100000000, 0, -1927), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1926)], (0)), 100000000, 0, -1925), 0), 100000000, 0, -1924), 0), 100000000, 0, -1923), 0), 100000000, 0, -1922), 0), 100000000, 0, -1921), 0), 100000000, 0, -1920), 0), 100000000, 0, -1919), 0), 100000000, 0, -1918), 0, (("plugins/micromega/micromega.mli", 224, 4538, 4538), ("plugins/micromega/micromega.mli", 224, 4538, 4662), 0), 0, Tag1 ("Micromega_plugin__Micromega", 125)), 0); (("psquare", 773), ((Tag1 (0, ((("a1")), 100000000, 0, -1909), (Tag1 (0, ((("a1")), 100000000, 0, -1909), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1909), (Tag1 (0, ((("a1")), 100000000, 0, -1909), ((("a1")), 100000000, 0, -1909), 0), 100000000, 0, -1917), 0), 100000000, 0, -1916), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1909), (Tag1 (0, ((("a1")), 100000000, 0, -1909), ((("a1")), 100000000, 0, -1909), 0), 100000000, 0, -1915), 0), 100000000, 0, -1914), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1909), (Tag1 (0, ((("a1")), 100000000, 0, -1909), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1913), 0), 100000000, 0, -1912), 0), 100000000, 0, -1911), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1909)], (0)), 100000000, 0, -1910), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1909)], (0)), 100000000, 0, -1908), 0), 100000000, 0, -1907), 0), 100000000, 0, -1906), 0), 100000000, 0, -1905), 0), 100000000, 0, -1904), 0), 100000000, 0, -1903), 0), 100000000, 0, -1902), 0, (("plugins/micromega/micromega.mli", 226, 4664, 4664), ("plugins/micromega/micromega.mli", 226, 4664, 4780), 0), 0, Tag1 ("Micromega_plugin__Micromega", 126)), 0); (("mk_X", 774), ((Tag1 (0, ((("a1")), 100000000, 0, -1900), (Tag1 (0, ((("a1")), 100000000, 0, -1900), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -1901), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1900)], (0)), 100000000, 0, -1899), 0), 100000000, 0, -1898), 0), 100000000, 0, -1897), 0), 100000000, 0, -1896), 0, (("plugins/micromega/micromega.mli", 228, 4782, 4782), ("plugins/micromega/micromega.mli", 228, 4782, 4826), 0), 0, Tag1 ("Micromega_plugin__Micromega", 127)), 0); (("ppow_pos", 775), ((Tag1 (0, ((("a1")), 100000000, 0, -1882), (Tag1 (0, ((("a1")), 100000000, 0, -1882), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1882), (Tag1 (0, ((("a1")), 100000000, 0, -1882), ((("a1")), 100000000, 0, -1882), 0), 100000000, 0, -1895), 0), 100000000, 0, -1894), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1882), (Tag1 (0, ((("a1")), 100000000, 0, -1882), ((("a1")), 100000000, 0, -1882), 0), 100000000, 0, -1893), 0), 100000000, 0, -1892), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1882), (Tag1 (0, ((("a1")), 100000000, 0, -1882), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1891), 0), 100000000, 0, -1890), 0), 100000000, 0, -1889), (Tag1 (0, (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1882)], (0)), 100000000, 0, -1888), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1882)], (0)), 100000000, 0, -1887), 0), 100000000, 0, -1886), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1882)], (0)), 100000000, 0, -1885), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1882)], (0)), 100000000, 0, -1884), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -1883), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1882)], (0)), 100000000, 0, -1881), 0), 100000000, 0, -1880), 0), 100000000, 0, -1879), 0), 100000000, 0, -1878), 0), 100000000, 0, -1877), 0), 100000000, 0, -1876), 0), 100000000, 0, -1875), 0), 100000000, 0, -1874), 0), 100000000, 0, -1873), 0), 100000000, 0, -1872), 0, (("plugins/micromega/micromega.mli", 230, 4828, 4828), ("plugins/micromega/micromega.mli", 231, 4843, 4994), 0), 0, Tag1 ("Micromega_plugin__Micromega", 128)), 0); (("ppow_N", 776), ((Tag1 (0, ((("a1")), 100000000, 0, -1859), (Tag1 (0, ((("a1")), 100000000, 0, -1859), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1859), (Tag1 (0, ((("a1")), 100000000, 0, -1859), ((("a1")), 100000000, 0, -1859), 0), 100000000, 0, -1871), 0), 100000000, 0, -1870), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1859), (Tag1 (0, ((("a1")), 100000000, 0, -1859), ((("a1")), 100000000, 0, -1859), 0), 100000000, 0, -1869), 0), 100000000, 0, -1868), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1859), (Tag1 (0, ((("a1")), 100000000, 0, -1859), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1867), 0), 100000000, 0, -1866), 0), 100000000, 0, -1865), (Tag1 (0, (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1859)], (0)), 100000000, 0, -1864), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1859)], (0)), 100000000, 0, -1863), 0), 100000000, 0, -1862), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1859)], (0)), 100000000, 0, -1861), (Tag1 (0, (Tag3 ((("n", 742)), 0, (0)), 100000000, 0, -1860), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1859)], (0)), 100000000, 0, -1858), 0), 100000000, 0, -1857), 0), 100000000, 0, -1856), 0), 100000000, 0, -1855), 0), 100000000, 0, -1854), 0), 100000000, 0, -1853), 0), 100000000, 0, -1852), 0), 100000000, 0, -1851), 0), 100000000, 0, -1850), 0, (("plugins/micromega/micromega.mli", 233, 4996, 4996), ("plugins/micromega/micromega.mli", 233, 4996, 5140), 0), 0, Tag1 ("Micromega_plugin__Micromega", 129)), 0); (("norm_aux", 777), ((Tag1 (0, ((("a1")), 100000000, 0, -1838), (Tag1 (0, ((("a1")), 100000000, 0, -1838), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1838), (Tag1 (0, ((("a1")), 100000000, 0, -1838), ((("a1")), 100000000, 0, -1838), 0), 100000000, 0, -1849), 0), 100000000, 0, -1848), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1838), (Tag1 (0, ((("a1")), 100000000, 0, -1838), ((("a1")), 100000000, 0, -1838), 0), 100000000, 0, -1847), 0), 100000000, 0, -1846), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1838), (Tag1 (0, ((("a1")), 100000000, 0, -1838), ((("a1")), 100000000, 0, -1838), 0), 100000000, 0, -1845), 0), 100000000, 0, -1844), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1838), ((("a1")), 100000000, 0, -1838), 0), 100000000, 0, -1843), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1838), (Tag1 (0, ((("a1")), 100000000, 0, -1838), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1842), 0), 100000000, 0, -1841), 0), 100000000, 0, -1840), (Tag1 (0, (Tag3 ((("pExpr", 750)), [((("a1")), 100000000, 0, -1838)], (0)), 100000000, 0, -1839), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -1838)], (0)), 100000000, 0, -1837), 0), 100000000, 0, -1836), 0), 100000000, 0, -1835), 0), 100000000, 0, -1834), 0), 100000000, 0, -1833), 0), 100000000, 0, -1832), 0), 100000000, 0, -1831), 0), 100000000, 0, -1830), 0), 100000000, 0, -1829), 0, (("plugins/micromega/micromega.mli", 235, 5142, 5142), ("plugins/micromega/micromega.mli", 236, 5157, 5302), 0), 0, Tag1 ("Micromega_plugin__Micromega", 130)), 0); Tag1 (("kind", 778), (0, 0, Tag1 ([(("IsProp", 498), (0), 0, (("plugins/micromega/micromega.mli", 239, 5316, 5316), ("plugins/micromega/micromega.mli", 239, 5316, 5324), 0), 0, Tag1 ("Micromega_plugin__Micromega", 132)); (("IsBool", 499), (0), 0, (("plugins/micromega/micromega.mli", 240, 5325, 5325), ("plugins/micromega/micromega.mli", 240, 5325, 5333), 0), 0, Tag1 ("Micromega_plugin__Micromega", 133))], 0), 1, 0, 0, 0, 0, 0, (("plugins/micromega/micromega.mli", 238, 5304, 5304), ("plugins/micromega/micromega.mli", 240, 5325, 5333), 0), 0, 1, 0, Tag1 ("Micromega_plugin__Micromega", 131)), 1, 0); Tag1 (("trace", 779), ([((("a")), 100000000, 0, -1825)], 1, Tag1 ([(("Null", 501), (0), 0, (("plugins/micromega/micromega.mli", 243, 5351, 5351), ("plugins/micromega/micromega.mli", 243, 5351, 5357), 0), 0, Tag1 ("Micromega_plugin__Micromega", 135)); (("Push", 502), ([((("a")), 100000000, 0, -1825); (Tag3 ((("trace", 779)), [((("a")), 100000000, 0, -1825)], (0)), 100000000, 0, -1826)]), 0, (("plugins/micromega/micromega.mli", 244, 5358, 5358), ("plugins/micromega/micromega.mli", 244, 5358, 5381), 0), 0, Tag1 ("Micromega_plugin__Micromega", 136)); (("Merge", 503), ([(Tag3 ((("trace", 779)), [((("a")), 100000000, 0, -1825)], (0)), 100000000, 0, -1827); (Tag3 ((("trace", 779)), [((("a")), 100000000, 0, -1825)], (0)), 100000000, 0, -1828)]), 0, (("plugins/micromega/micromega.mli", 245, 5382, 5382), ("plugins/micromega/micromega.mli", 245, 5382, 5412), 0), 0, Tag1 ("Micromega_plugin__Micromega", 137))], 0), 1, 0, [25], [0], 0, 0, (("plugins/micromega/micromega.mli", 242, 5335, 5335), ("plugins/micromega/micromega.mli", 245, 5382, 5412), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 134)), 1, 0); Tag1 (("gFormula", 780), ([((("tA")), 100000000, 0, -1805); ((("tX")), 100000000, 0, -1803); ((("aA")), 100000000, 0, -1806); ((("aF")), 100000000, 0, -1809)], 4, Tag1 ([(("TT", 505), ([(Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1800)]), 0, (("plugins/micromega/micromega.mli", 248, 5451, 5451), ("plugins/micromega/micromega.mli", 248, 5451, 5463), 0), 0, Tag1 ("Micromega_plugin__Micromega", 139)); (("FF", 506), ([(Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1801)]), 0, (("plugins/micromega/micromega.mli", 249, 5464, 5464), ("plugins/micromega/micromega.mli", 249, 5464, 5476), 0), 0, Tag1 ("Micromega_plugin__Micromega", 140)); (("X", 507), ([(Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1802); ((("tX")), 100000000, 0, -1803)]), 0, (("plugins/micromega/micromega.mli", 250, 5477, 5477), ("plugins/micromega/micromega.mli", 250, 5477, 5494), 0), 0, Tag1 ("Micromega_plugin__Micromega", 141)); (("A", 508), ([(Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1804); ((("tA")), 100000000, 0, -1805); ((("aA")), 100000000, 0, -1806)]), 0, (("plugins/micromega/micromega.mli", 251, 5495, 5495), ("plugins/micromega/micromega.mli", 251, 5495, 5518), 0), 0, Tag1 ("Micromega_plugin__Micromega", 142)); (("AND", 509), ([(Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1807); (Tag3 ((("gFormula", 780)), [((("tA")), 100000000, 0, -1805); ((("tX")), 100000000, 0, -1803); ((("aA")), 100000000, 0, -1806); ((("aF")), 100000000, 0, -1809)], (0)), 100000000, 0, -1808); (Tag3 ((("gFormula", 780)), [((("tA")), 100000000, 0, -1805); ((("tX")), 100000000, 0, -1803); ((("aA")), 100000000, 0, -1806); ((("aF")), 100000000, 0, -1809)], (0)), 100000000, 0, -1810)]), 0, (("plugins/micromega/micromega.mli", 252, 5519, 5519), ("plugins/micromega/micromega.mli", 252, 5519, 5596), 0), 0, Tag1 ("Micromega_plugin__Micromega", 143)); (("OR", 510), ([(Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1811); (Tag3 ((("gFormula", 780)), [((("tA")), 100000000, 0, -1805); ((("tX")), 100000000, 0, -1803); ((("aA")), 100000000, 0, -1806); ((("aF")), 100000000, 0, -1809)], (0)), 100000000, 0, -1812); (Tag3 ((("gFormula", 780)), [((("tA")), 100000000, 0, -1805); ((("tX")), 100000000, 0, -1803); ((("aA")), 100000000, 0, -1806); ((("aF")), 100000000, 0, -1809)], (0)), 100000000, 0, -1813)]), 0, (("plugins/micromega/micromega.mli", 253, 5597, 5597), ("plugins/micromega/micromega.mli", 253, 5597, 5673), 0), 0, Tag1 ("Micromega_plugin__Micromega", 144)); (("NOT", 511), ([(Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1814); (Tag3 ((("gFormula", 780)), [((("tA")), 100000000, 0, -1805); ((("tX")), 100000000, 0, -1803); ((("aA")), 100000000, 0, -1806); ((("aF")), 100000000, 0, -1809)], (0)), 100000000, 0, -1815)]), 0, (("plugins/micromega/micromega.mli", 254, 5674, 5674), ("plugins/micromega/micromega.mli", 254, 5674, 5719), 0), 0, Tag1 ("Micromega_plugin__Micromega", 145)); (("IMPL", 512), ([(Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1816); (Tag3 ((("gFormula", 780)), [((("tA")), 100000000, 0, -1805); ((("tX")), 100000000, 0, -1803); ((("aA")), 100000000, 0, -1806); ((("aF")), 100000000, 0, -1809)], (0)), 100000000, 0, -1817); (Tag3 ((Tag3 ("option", 10)), [((("aF")), 100000000, 0, -1809)], (0)), 100000000, 0, -1818); (Tag3 ((("gFormula", 780)), [((("tA")), 100000000, 0, -1805); ((("tX")), 100000000, 0, -1803); ((("aA")), 100000000, 0, -1806); ((("aF")), 100000000, 0, -1809)], (0)), 100000000, 0, -1819)]), 0, (("plugins/micromega/micromega.mli", 255, 5720, 5720), ("plugins/micromega/micromega.mli", 255, 5720, 5811), 0), 0, Tag1 ("Micromega_plugin__Micromega", 146)); (("IFF", 513), ([(Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1820); (Tag3 ((("gFormula", 780)), [((("tA")), 100000000, 0, -1805); ((("tX")), 100000000, 0, -1803); ((("aA")), 100000000, 0, -1806); ((("aF")), 100000000, 0, -1809)], (0)), 100000000, 0, -1821); (Tag3 ((("gFormula", 780)), [((("tA")), 100000000, 0, -1805); ((("tX")), 100000000, 0, -1803); ((("aA")), 100000000, 0, -1806); ((("aF")), 100000000, 0, -1809)], (0)), 100000000, 0, -1822)]), 0, (("plugins/micromega/micromega.mli", 256, 5812, 5812), ("plugins/micromega/micromega.mli", 256, 5812, 5889), 0), 0, Tag1 ("Micromega_plugin__Micromega", 147)); (("EQ", 514), ([(Tag3 ((("gFormula", 780)), [((("tA")), 100000000, 0, -1805); ((("tX")), 100000000, 0, -1803); ((("aA")), 100000000, 0, -1806); ((("aF")), 100000000, 0, -1809)], (0)), 100000000, 0, -1823); (Tag3 ((("gFormula", 780)), [((("tA")), 100000000, 0, -1805); ((("tX")), 100000000, 0, -1803); ((("aA")), 100000000, 0, -1806); ((("aF")), 100000000, 0, -1809)], (0)), 100000000, 0, -1824)]), 0, (("plugins/micromega/micromega.mli", 257, 5890, 5890), ("plugins/micromega/micromega.mli", 257, 5890, 5959), 0), 0, Tag1 ("Micromega_plugin__Micromega", 148))], 0), 1, 0, [25; 25; 25; 25], [0; 0; 0; 0], 0, 0, (("plugins/micromega/micromega.mli", 247, 5414, 5414), ("plugins/micromega/micromega.mli", 257, 5890, 5959), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 138)), 1, 0); (("mapX", 781), ((Tag1 (0, (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1799), (Tag1 (0, ((("a2")), 100000000, 0, -1792), ((("a2")), 100000000, 0, -1792), 0), 100000000, 0, -1798), 0), 100000000, 0, -1797), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1796), (Tag1 (0, (Tag3 ((("gFormula", 780)), [((("a1")), 100000000, 0, -1791); ((("a2")), 100000000, 0, -1792); ((("a3")), 100000000, 0, -1793); ((("a4")), 100000000, 0, -1794)], (0)), 100000000, 0, -1795), (Tag3 ((("gFormula", 780)), [((("a1")), 100000000, 0, -1791); ((("a2")), 100000000, 0, -1792); ((("a3")), 100000000, 0, -1793); ((("a4")), 100000000, 0, -1794)], (0)), 100000000, 0, -1790), 0), 100000000, 0, -1789), 0), 100000000, 0, -1788), 0), 100000000, 0, -1787), 0, (("plugins/micromega/micromega.mli", 259, 5961, 5961), ("plugins/micromega/micromega.mli", 259, 5961, 6066), 0), 0, Tag1 ("Micromega_plugin__Micromega", 149)), 0); (("foldA", 782), ((Tag1 (0, (Tag1 (0, ((("a5")), 100000000, 0, -1778), (Tag1 (0, ((("a3")), 100000000, 0, -1782), ((("a5")), 100000000, 0, -1778), 0), 100000000, 0, -1786), 0), 100000000, 0, -1785), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1784), (Tag1 (0, (Tag3 ((("gFormula", 780)), [((("a1")), 100000000, 0, -1780); ((("a2")), 100000000, 0, -1781); ((("a3")), 100000000, 0, -1782); ((("a4")), 100000000, 0, -1783)], (0)), 100000000, 0, -1779), (Tag1 (0, ((("a5")), 100000000, 0, -1778), ((("a5")), 100000000, 0, -1778), 0), 100000000, 0, -1777), 0), 100000000, 0, -1776), 0), 100000000, 0, -1775), 0), 100000000, 0, -1774), 0, (("plugins/micromega/micromega.mli", 261, 6068, 6068), ("plugins/micromega/micromega.mli", 261, 6068, 6154), 0), 0, Tag1 ("Micromega_plugin__Micromega", 150)), 0); (("cons_id", 783), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a1")), 100000000, 0, -1771)], (0)), 100000000, 0, -1773), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a1")), 100000000, 0, -1771)], (0)), 100000000, 0, -1772), (Tag3 ((Tag3 ("list", 9)), [((("a1")), 100000000, 0, -1771)], (0)), 100000000, 0, -1770), 0), 100000000, 0, -1769), 0), 100000000, 0, -1768), 0, (("plugins/micromega/micromega.mli", 263, 6156, 6156), ("plugins/micromega/micromega.mli", 263, 6156, 6204), 0), 0, Tag1 ("Micromega_plugin__Micromega", 151)), 0); (("ids_of_formula", 784), ((Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1767), (Tag1 (0, (Tag3 ((("gFormula", 780)), [((("a1")), 100000000, 0, -1764); ((("a2")), 100000000, 0, -1765); ((("a3")), 100000000, 0, -1766); ((("a4")), 100000000, 0, -1762)], (0)), 100000000, 0, -1763), (Tag3 ((Tag3 ("list", 9)), [((("a4")), 100000000, 0, -1762)], (0)), 100000000, 0, -1761), 0), 100000000, 0, -1760), 0), 100000000, 0, -1759), 0, (("plugins/micromega/micromega.mli", 265, 6206, 6206), ("plugins/micromega/micromega.mli", 265, 6206, 6276), 0), 0, Tag1 ("Micromega_plugin__Micromega", 152)), 0); (("collect_annot", 785), ((Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1758), (Tag1 (0, (Tag3 ((("gFormula", 780)), [((("a1")), 100000000, 0, -1755); ((("a2")), 100000000, 0, -1756); ((("a3")), 100000000, 0, -1753); ((("a4")), 100000000, 0, -1757)], (0)), 100000000, 0, -1754), (Tag3 ((Tag3 ("list", 9)), [((("a3")), 100000000, 0, -1753)], (0)), 100000000, 0, -1752), 0), 100000000, 0, -1751), 0), 100000000, 0, -1750), 0, (("plugins/micromega/micromega.mli", 267, 6278, 6278), ("plugins/micromega/micromega.mli", 267, 6278, 6347), 0), 0, Tag1 ("Micromega_plugin__Micromega", 153)), 0); Tag1 (("rtyp", 786), (0, 0, 0, 1, ((Tag3 ((("__", 725)), 0, (0)), 100000000, 0, -1749)), 0, 0, 0, 0, (("plugins/micromega/micromega.mli", 269, 6349, 6349), ("plugins/micromega/micromega.mli", 269, 6349, 6363), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 154)), 1, 0); Tag1 (("eKind", 787), (0, 0, 0, 1, ((Tag3 ((("__", 725)), 0, (0)), 100000000, 0, -1748)), 0, 0, 0, 0, (("plugins/micromega/micromega.mli", 271, 6365, 6365), ("plugins/micromega/micromega.mli", 271, 6365, 6380), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 155)), 1, 0); Tag1 (("bFormula", 788), ([((("a")), 100000000, 0, -1744)], 1, 0, 1, ((Tag3 ((("gFormula", 780)), [((("a")), 100000000, 0, -1744); (Tag3 ((("eKind", 787)), 0, (0)), 100000000, 0, -1745); (Tag3 ((("unit0", 726)), 0, (0)), 100000000, 0, -1746); (Tag3 ((("unit0", 726)), 0, (0)), 100000000, 0, -1747)], (0)), 100000000, 0, -1743)), [25], [0], 0, 0, (("plugins/micromega/micromega.mli", 273, 6382, 6382), ("plugins/micromega/micromega.mli", 273, 6382, 6435), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 156)), 1, 0); (("map_bformula", 789), ((Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1742), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1740), ((("a2")), 100000000, 0, -1735), 0), 100000000, 0, -1741), (Tag1 (0, (Tag3 ((("gFormula", 780)), [((("a1")), 100000000, 0, -1740); ((("a3")), 100000000, 0, -1736); ((("a4")), 100000000, 0, -1737); ((("a5")), 100000000, 0, -1738)], (0)), 100000000, 0, -1739), (Tag3 ((("gFormula", 780)), [((("a2")), 100000000, 0, -1735); ((("a3")), 100000000, 0, -1736); ((("a4")), 100000000, 0, -1737); ((("a5")), 100000000, 0, -1738)], (0)), 100000000, 0, -1734), 0), 100000000, 0, -1733), 0), 100000000, 0, -1732), 0), 100000000, 0, -1731), 0, (("plugins/micromega/micromega.mli", 275, 6437, 6437), ("plugins/micromega/micromega.mli", 275, 6437, 6542), 0), 0, Tag1 ("Micromega_plugin__Micromega", 157)), 0); Tag1 (("clause", 790), ([((("x")), 100000000, 0, -1729); ((("annot")), 100000000, 0, -1730)], 2, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag2 ([((("x")), 100000000, 0, -1729); ((("annot")), 100000000, 0, -1730)]), 100000000, 0, -1728)], (0)), 100000000, 0, -1727)), [25; 25], [0; 0], 0, 0, (("plugins/micromega/micromega.mli", 277, 6544, 6544), ("plugins/micromega/micromega.mli", 277, 6544, 6589), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 158)), 1, 0); Tag1 (("cnf", 791), ([((("x")), 100000000, 0, -1725); ((("annot")), 100000000, 0, -1726)], 2, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("clause", 790)), [((("x")), 100000000, 0, -1725); ((("annot")), 100000000, 0, -1726)], (0)), 100000000, 0, -1724)], (0)), 100000000, 0, -1723)), [25; 25], [0; 0], 0, 0, (("plugins/micromega/micromega.mli", 279, 6591, 6591), ("plugins/micromega/micromega.mli", 279, 6591, 6639), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 159)), 1, 0); (("cnf_tt", 792), ((Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1721); ((("a2")), 100000000, 0, -1722)], (0)), 100000000, 0, -1720), 0, (("plugins/micromega/micromega.mli", 281, 6641, 6641), ("plugins/micromega/micromega.mli", 281, 6641, 6668), 0), 0, Tag1 ("Micromega_plugin__Micromega", 160)), 0); (("cnf_ff", 793), ((Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1718); ((("a2")), 100000000, 0, -1719)], (0)), 100000000, 0, -1717), 0, (("plugins/micromega/micromega.mli", 283, 6670, 6670), ("plugins/micromega/micromega.mli", 283, 6670, 6697), 0), 0, Tag1 ("Micromega_plugin__Micromega", 161)), 0); (("add_term", 794), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1708), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1716), 0), 100000000, 0, -1715), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1708), (Tag1 (0, ((("a1")), 100000000, 0, -1708), (Tag3 ((Tag3 ("option", 10)), [((("a1")), 100000000, 0, -1708)], (0)), 100000000, 0, -1714), 0), 100000000, 0, -1713), 0), 100000000, 0, -1712), (Tag1 (0, (Tag2 ([((("a1")), 100000000, 0, -1708); ((("a2")), 100000000, 0, -1709)]), 100000000, 0, -1711), (Tag1 (0, (Tag3 ((("clause", 790)), [((("a1")), 100000000, 0, -1708); ((("a2")), 100000000, 0, -1709)], (0)), 100000000, 0, -1710), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("clause", 790)), [((("a1")), 100000000, 0, -1708); ((("a2")), 100000000, 0, -1709)], (0)), 100000000, 0, -1707)], (0)), 100000000, 0, -1706), 0), 100000000, 0, -1705), 0), 100000000, 0, -1704), 0), 100000000, 0, -1703), 0), 100000000, 0, -1702), 0, (("plugins/micromega/micromega.mli", 285, 6699, 6699), ("plugins/micromega/micromega.mli", 285, 6699, 6821), 0), 0, Tag1 ("Micromega_plugin__Micromega", 162)), 0); (("or_clause", 795), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1693), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1701), 0), 100000000, 0, -1700), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1693), (Tag1 (0, ((("a1")), 100000000, 0, -1693), (Tag3 ((Tag3 ("option", 10)), [((("a1")), 100000000, 0, -1693)], (0)), 100000000, 0, -1699), 0), 100000000, 0, -1698), 0), 100000000, 0, -1697), (Tag1 (0, (Tag3 ((("clause", 790)), [((("a1")), 100000000, 0, -1693); ((("a2")), 100000000, 0, -1694)], (0)), 100000000, 0, -1696), (Tag1 (0, (Tag3 ((("clause", 790)), [((("a1")), 100000000, 0, -1693); ((("a2")), 100000000, 0, -1694)], (0)), 100000000, 0, -1695), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("clause", 790)), [((("a1")), 100000000, 0, -1693); ((("a2")), 100000000, 0, -1694)], (0)), 100000000, 0, -1692)], (0)), 100000000, 0, -1691), 0), 100000000, 0, -1690), 0), 100000000, 0, -1689), 0), 100000000, 0, -1688), 0), 100000000, 0, -1687), 0, (("plugins/micromega/micromega.mli", 287, 6823, 6823), ("plugins/micromega/micromega.mli", 287, 6823, 6952), 0), 0, Tag1 ("Micromega_plugin__Micromega", 163)), 0); (("xor_clause_cnf", 796), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1678), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1686), 0), 100000000, 0, -1685), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1678), (Tag1 (0, ((("a1")), 100000000, 0, -1678), (Tag3 ((Tag3 ("option", 10)), [((("a1")), 100000000, 0, -1678)], (0)), 100000000, 0, -1684), 0), 100000000, 0, -1683), 0), 100000000, 0, -1682), (Tag1 (0, (Tag3 ((("clause", 790)), [((("a1")), 100000000, 0, -1678); ((("a2")), 100000000, 0, -1679)], (0)), 100000000, 0, -1681), (Tag1 (0, (Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1678); ((("a2")), 100000000, 0, -1679)], (0)), 100000000, 0, -1680), (Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1678); ((("a2")), 100000000, 0, -1679)], (0)), 100000000, 0, -1677), 0), 100000000, 0, -1676), 0), 100000000, 0, -1675), 0), 100000000, 0, -1674), 0), 100000000, 0, -1673), 0, (("plugins/micromega/micromega.mli", 289, 6954, 6954), ("plugins/micromega/micromega.mli", 289, 6954, 7075), 0), 0, Tag1 ("Micromega_plugin__Micromega", 164)), 0); (("or_clause_cnf", 797), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1664), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1672), 0), 100000000, 0, -1671), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1664), (Tag1 (0, ((("a1")), 100000000, 0, -1664), (Tag3 ((Tag3 ("option", 10)), [((("a1")), 100000000, 0, -1664)], (0)), 100000000, 0, -1670), 0), 100000000, 0, -1669), 0), 100000000, 0, -1668), (Tag1 (0, (Tag3 ((("clause", 790)), [((("a1")), 100000000, 0, -1664); ((("a2")), 100000000, 0, -1665)], (0)), 100000000, 0, -1667), (Tag1 (0, (Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1664); ((("a2")), 100000000, 0, -1665)], (0)), 100000000, 0, -1666), (Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1664); ((("a2")), 100000000, 0, -1665)], (0)), 100000000, 0, -1663), 0), 100000000, 0, -1662), 0), 100000000, 0, -1661), 0), 100000000, 0, -1660), 0), 100000000, 0, -1659), 0, (("plugins/micromega/micromega.mli", 291, 7077, 7077), ("plugins/micromega/micromega.mli", 291, 7077, 7197), 0), 0, Tag1 ("Micromega_plugin__Micromega", 165)), 0); (("or_cnf", 798), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1650), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1658), 0), 100000000, 0, -1657), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1650), (Tag1 (0, ((("a1")), 100000000, 0, -1650), (Tag3 ((Tag3 ("option", 10)), [((("a1")), 100000000, 0, -1650)], (0)), 100000000, 0, -1656), 0), 100000000, 0, -1655), 0), 100000000, 0, -1654), (Tag1 (0, (Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1650); ((("a2")), 100000000, 0, -1651)], (0)), 100000000, 0, -1653), (Tag1 (0, (Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1650); ((("a2")), 100000000, 0, -1651)], (0)), 100000000, 0, -1652), (Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1650); ((("a2")), 100000000, 0, -1651)], (0)), 100000000, 0, -1649), 0), 100000000, 0, -1648), 0), 100000000, 0, -1647), 0), 100000000, 0, -1646), 0), 100000000, 0, -1645), 0, (("plugins/micromega/micromega.mli", 293, 7199, 7199), ("plugins/micromega/micromega.mli", 293, 7199, 7309), 0), 0, Tag1 ("Micromega_plugin__Micromega", 166)), 0); (("and_cnf", 799), ((Tag1 (0, (Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1641); ((("a2")), 100000000, 0, -1642)], (0)), 100000000, 0, -1644), (Tag1 (0, (Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1641); ((("a2")), 100000000, 0, -1642)], (0)), 100000000, 0, -1643), (Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1641); ((("a2")), 100000000, 0, -1642)], (0)), 100000000, 0, -1640), 0), 100000000, 0, -1639), 0), 100000000, 0, -1638), 0, (("plugins/micromega/micromega.mli", 295, 7311, 7311), ("plugins/micromega/micromega.mli", 295, 7311, 7375), 0), 0, Tag1 ("Micromega_plugin__Micromega", 167)), 0); Tag1 (("tFormula", 800), ([((("term")), 100000000, 0, -1634); ((("annot")), 100000000, 0, -1636); ((("tX")), 100000000, 0, -1635); ((("aF")), 100000000, 0, -1637)], 4, 0, 1, ((Tag3 ((("gFormula", 780)), [((("term")), 100000000, 0, -1634); ((("tX")), 100000000, 0, -1635); ((("annot")), 100000000, 0, -1636); ((("aF")), 100000000, 0, -1637)], (0)), 100000000, 0, -1633)), [25; 25; 25; 25], [0; 0; 0; 0], 0, 0, (("plugins/micromega/micromega.mli", 297, 7377, 7377), ("plugins/micromega/micromega.mli", 297, 7377, 7453), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 168)), 1, 0); (("is_cnf_tt", 801), ((Tag1 (0, (Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1631); ((("a2")), 100000000, 0, -1632)], (0)), 100000000, 0, -1630), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1629), 0), 100000000, 0, -1628), 0, (("plugins/micromega/micromega.mli", 299, 7455, 7455), ("plugins/micromega/micromega.mli", 299, 7455, 7493), 0), 0, Tag1 ("Micromega_plugin__Micromega", 169)), 0); (("is_cnf_ff", 802), ((Tag1 (0, (Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1626); ((("a2")), 100000000, 0, -1627)], (0)), 100000000, 0, -1625), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1624), 0), 100000000, 0, -1623), 0, (("plugins/micromega/micromega.mli", 301, 7495, 7495), ("plugins/micromega/micromega.mli", 301, 7495, 7533), 0), 0, Tag1 ("Micromega_plugin__Micromega", 170)), 0); (("and_cnf_opt", 803), ((Tag1 (0, (Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1619); ((("a2")), 100000000, 0, -1620)], (0)), 100000000, 0, -1622), (Tag1 (0, (Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1619); ((("a2")), 100000000, 0, -1620)], (0)), 100000000, 0, -1621), (Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1619); ((("a2")), 100000000, 0, -1620)], (0)), 100000000, 0, -1618), 0), 100000000, 0, -1617), 0), 100000000, 0, -1616), 0, (("plugins/micromega/micromega.mli", 303, 7535, 7535), ("plugins/micromega/micromega.mli", 303, 7535, 7603), 0), 0, Tag1 ("Micromega_plugin__Micromega", 171)), 0); (("or_cnf_opt", 804), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1607), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1615), 0), 100000000, 0, -1614), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1607), (Tag1 (0, ((("a1")), 100000000, 0, -1607), (Tag3 ((Tag3 ("option", 10)), [((("a1")), 100000000, 0, -1607)], (0)), 100000000, 0, -1613), 0), 100000000, 0, -1612), 0), 100000000, 0, -1611), (Tag1 (0, (Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1607); ((("a2")), 100000000, 0, -1608)], (0)), 100000000, 0, -1610), (Tag1 (0, (Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1607); ((("a2")), 100000000, 0, -1608)], (0)), 100000000, 0, -1609), (Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1607); ((("a2")), 100000000, 0, -1608)], (0)), 100000000, 0, -1606), 0), 100000000, 0, -1605), 0), 100000000, 0, -1604), 0), 100000000, 0, -1603), 0), 100000000, 0, -1602), 0, (("plugins/micromega/micromega.mli", 305, 7605, 7605), ("plugins/micromega/micromega.mli", 305, 7605, 7719), 0), 0, Tag1 ("Micromega_plugin__Micromega", 172)), 0); (("mk_and", 805), ((Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -1581), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1601), 0), 100000000, 0, -1600), (Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -1581), (Tag1 (0, ((("a2")), 100000000, 0, -1581), (Tag3 ((Tag3 ("option", 10)), [((("a2")), 100000000, 0, -1581)], (0)), 100000000, 0, -1599), 0), 100000000, 0, -1598), 0), 100000000, 0, -1597), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1596), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1595), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1584); ((("a3")), 100000000, 0, -1582); ((("a4")), 100000000, 0, -1585); ((("a5")), 100000000, 0, -1586)], (0)), 100000000, 0, -1594), (Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -1581); ((("a3")), 100000000, 0, -1582)], (0)), 100000000, 0, -1593), 0), 100000000, 0, -1592), 0), 100000000, 0, -1591), 0), 100000000, 0, -1590), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1589), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1588), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1584); ((("a3")), 100000000, 0, -1582); ((("a4")), 100000000, 0, -1585); ((("a5")), 100000000, 0, -1586)], (0)), 100000000, 0, -1587), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1584); ((("a3")), 100000000, 0, -1582); ((("a4")), 100000000, 0, -1585); ((("a5")), 100000000, 0, -1586)], (0)), 100000000, 0, -1583), (Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -1581); ((("a3")), 100000000, 0, -1582)], (0)), 100000000, 0, -1580), 0), 100000000, 0, -1579), 0), 100000000, 0, -1578), 0), 100000000, 0, -1577), 0), 100000000, 0, -1576), 0), 100000000, 0, -1575), 0), 100000000, 0, -1574), 0), 100000000, 0, -1573), 0, (("plugins/micromega/micromega.mli", 307, 7721, 7721), ("plugins/micromega/micromega.mli", 309, 7884, 7950), 0), 0, Tag1 ("Micromega_plugin__Micromega", 173)), 0); (("mk_or", 806), ((Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -1552), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1572), 0), 100000000, 0, -1571), (Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -1552), (Tag1 (0, ((("a2")), 100000000, 0, -1552), (Tag3 ((Tag3 ("option", 10)), [((("a2")), 100000000, 0, -1552)], (0)), 100000000, 0, -1570), 0), 100000000, 0, -1569), 0), 100000000, 0, -1568), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1567), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1566), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1555); ((("a3")), 100000000, 0, -1553); ((("a4")), 100000000, 0, -1556); ((("a5")), 100000000, 0, -1557)], (0)), 100000000, 0, -1565), (Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -1552); ((("a3")), 100000000, 0, -1553)], (0)), 100000000, 0, -1564), 0), 100000000, 0, -1563), 0), 100000000, 0, -1562), 0), 100000000, 0, -1561), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1560), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1559), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1555); ((("a3")), 100000000, 0, -1553); ((("a4")), 100000000, 0, -1556); ((("a5")), 100000000, 0, -1557)], (0)), 100000000, 0, -1558), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1555); ((("a3")), 100000000, 0, -1553); ((("a4")), 100000000, 0, -1556); ((("a5")), 100000000, 0, -1557)], (0)), 100000000, 0, -1554), (Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -1552); ((("a3")), 100000000, 0, -1553)], (0)), 100000000, 0, -1551), 0), 100000000, 0, -1550), 0), 100000000, 0, -1549), 0), 100000000, 0, -1548), 0), 100000000, 0, -1547), 0), 100000000, 0, -1546), 0), 100000000, 0, -1545), 0), 100000000, 0, -1544), 0, (("plugins/micromega/micromega.mli", 311, 7952, 7952), ("plugins/micromega/micromega.mli", 313, 8114, 8180), 0), 0, Tag1 ("Micromega_plugin__Micromega", 174)), 0); (("mk_impl", 807), ((Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -1523), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1543), 0), 100000000, 0, -1542), (Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -1523), (Tag1 (0, ((("a2")), 100000000, 0, -1523), (Tag3 ((Tag3 ("option", 10)), [((("a2")), 100000000, 0, -1523)], (0)), 100000000, 0, -1541), 0), 100000000, 0, -1540), 0), 100000000, 0, -1539), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1538), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1537), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1526); ((("a3")), 100000000, 0, -1524); ((("a4")), 100000000, 0, -1527); ((("a5")), 100000000, 0, -1528)], (0)), 100000000, 0, -1536), (Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -1523); ((("a3")), 100000000, 0, -1524)], (0)), 100000000, 0, -1535), 0), 100000000, 0, -1534), 0), 100000000, 0, -1533), 0), 100000000, 0, -1532), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1531), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1530), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1526); ((("a3")), 100000000, 0, -1524); ((("a4")), 100000000, 0, -1527); ((("a5")), 100000000, 0, -1528)], (0)), 100000000, 0, -1529), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1526); ((("a3")), 100000000, 0, -1524); ((("a4")), 100000000, 0, -1527); ((("a5")), 100000000, 0, -1528)], (0)), 100000000, 0, -1525), (Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -1523); ((("a3")), 100000000, 0, -1524)], (0)), 100000000, 0, -1522), 0), 100000000, 0, -1521), 0), 100000000, 0, -1520), 0), 100000000, 0, -1519), 0), 100000000, 0, -1518), 0), 100000000, 0, -1517), 0), 100000000, 0, -1516), 0), 100000000, 0, -1515), 0, (("plugins/micromega/micromega.mli", 315, 8182, 8182), ("plugins/micromega/micromega.mli", 317, 8346, 8412), 0), 0, Tag1 ("Micromega_plugin__Micromega", 175)), 0); (("mk_iff", 808), ((Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -1494), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1514), 0), 100000000, 0, -1513), (Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -1494), (Tag1 (0, ((("a2")), 100000000, 0, -1494), (Tag3 ((Tag3 ("option", 10)), [((("a2")), 100000000, 0, -1494)], (0)), 100000000, 0, -1512), 0), 100000000, 0, -1511), 0), 100000000, 0, -1510), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1509), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1508), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1497); ((("a3")), 100000000, 0, -1495); ((("a4")), 100000000, 0, -1498); ((("a5")), 100000000, 0, -1499)], (0)), 100000000, 0, -1507), (Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -1494); ((("a3")), 100000000, 0, -1495)], (0)), 100000000, 0, -1506), 0), 100000000, 0, -1505), 0), 100000000, 0, -1504), 0), 100000000, 0, -1503), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1502), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1501), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1497); ((("a3")), 100000000, 0, -1495); ((("a4")), 100000000, 0, -1498); ((("a5")), 100000000, 0, -1499)], (0)), 100000000, 0, -1500), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1497); ((("a3")), 100000000, 0, -1495); ((("a4")), 100000000, 0, -1498); ((("a5")), 100000000, 0, -1499)], (0)), 100000000, 0, -1496), (Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -1494); ((("a3")), 100000000, 0, -1495)], (0)), 100000000, 0, -1493), 0), 100000000, 0, -1492), 0), 100000000, 0, -1491), 0), 100000000, 0, -1490), 0), 100000000, 0, -1489), 0), 100000000, 0, -1488), 0), 100000000, 0, -1487), 0), 100000000, 0, -1486), 0, (("plugins/micromega/micromega.mli", 319, 8414, 8414), ("plugins/micromega/micromega.mli", 321, 8577, 8643), 0), 0, Tag1 ("Micromega_plugin__Micromega", 176)), 0); (("is_bool", 809), ((Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1485), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1481); ((("a2")), 100000000, 0, -1482); ((("a3")), 100000000, 0, -1483); ((("a4")), 100000000, 0, -1484)], (0)), 100000000, 0, -1480), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1479)], (0)), 100000000, 0, -1478), 0), 100000000, 0, -1477), 0), 100000000, 0, -1476), 0, (("plugins/micromega/micromega.mli", 323, 8645, 8645), ("plugins/micromega/micromega.mli", 323, 8645, 8711), 0), 0, Tag1 ("Micromega_plugin__Micromega", 177)), 0); (("xcnf", 810), ((Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -1457), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1475), 0), 100000000, 0, -1474), (Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -1457), (Tag1 (0, ((("a2")), 100000000, 0, -1457), (Tag3 ((Tag3 ("option", 10)), [((("a2")), 100000000, 0, -1457)], (0)), 100000000, 0, -1473), 0), 100000000, 0, -1472), 0), 100000000, 0, -1471), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1460), (Tag1 (0, ((("a3")), 100000000, 0, -1458), (Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -1457); ((("a3")), 100000000, 0, -1458)], (0)), 100000000, 0, -1470), 0), 100000000, 0, -1469), 0), 100000000, 0, -1468), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1460), (Tag1 (0, ((("a3")), 100000000, 0, -1458), (Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -1457); ((("a3")), 100000000, 0, -1458)], (0)), 100000000, 0, -1467), 0), 100000000, 0, -1466), 0), 100000000, 0, -1465), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1464), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1463), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1460); ((("a3")), 100000000, 0, -1458); ((("a4")), 100000000, 0, -1461); ((("a5")), 100000000, 0, -1462)], (0)), 100000000, 0, -1459), (Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -1457); ((("a3")), 100000000, 0, -1458)], (0)), 100000000, 0, -1456), 0), 100000000, 0, -1455), 0), 100000000, 0, -1454), 0), 100000000, 0, -1453), 0), 100000000, 0, -1452), 0), 100000000, 0, -1451), 0), 100000000, 0, -1450), 0), 100000000, 0, -1449), 0, (("plugins/micromega/micromega.mli", 325, 8713, 8713), ("plugins/micromega/micromega.mli", 327, 8878, 8906), 0), 0, Tag1 ("Micromega_plugin__Micromega", 178)), 0); (("radd_term", 811), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1439), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1448), 0), 100000000, 0, -1447), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1439), (Tag1 (0, ((("a1")), 100000000, 0, -1439), (Tag3 ((Tag3 ("option", 10)), [((("a1")), 100000000, 0, -1439)], (0)), 100000000, 0, -1446), 0), 100000000, 0, -1445), 0), 100000000, 0, -1444), (Tag1 (0, (Tag2 ([((("a1")), 100000000, 0, -1439); ((("a2")), 100000000, 0, -1440)]), 100000000, 0, -1443), (Tag1 (0, (Tag3 ((("clause", 790)), [((("a1")), 100000000, 0, -1439); ((("a2")), 100000000, 0, -1440)], (0)), 100000000, 0, -1442), (Tag3 ((("sum", 729)), [(Tag3 ((("clause", 790)), [((("a1")), 100000000, 0, -1439); ((("a2")), 100000000, 0, -1440)], (0)), 100000000, 0, -1438); (Tag3 ((("trace", 779)), [((("a2")), 100000000, 0, -1440)], (0)), 100000000, 0, -1441)], (0)), 100000000, 0, -1437), 0), 100000000, 0, -1436), 0), 100000000, 0, -1435), 0), 100000000, 0, -1434), 0), 100000000, 0, -1433), 0, (("plugins/micromega/micromega.mli", 329, 8908, 8908), ("plugins/micromega/micromega.mli", 329, 8908, 9041), 0), 0, Tag1 ("Micromega_plugin__Micromega", 179)), 0); (("ror_clause", 812), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1422), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1432), 0), 100000000, 0, -1431), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1422), (Tag1 (0, ((("a1")), 100000000, 0, -1422), (Tag3 ((Tag3 ("option", 10)), [((("a1")), 100000000, 0, -1422)], (0)), 100000000, 0, -1430), 0), 100000000, 0, -1429), 0), 100000000, 0, -1428), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([((("a1")), 100000000, 0, -1422); ((("a2")), 100000000, 0, -1423)]), 100000000, 0, -1427)], (0)), 100000000, 0, -1426), (Tag1 (0, (Tag3 ((("clause", 790)), [((("a1")), 100000000, 0, -1422); ((("a2")), 100000000, 0, -1423)], (0)), 100000000, 0, -1425), (Tag3 ((("sum", 729)), [(Tag3 ((("clause", 790)), [((("a1")), 100000000, 0, -1422); ((("a2")), 100000000, 0, -1423)], (0)), 100000000, 0, -1421); (Tag3 ((("trace", 779)), [((("a2")), 100000000, 0, -1423)], (0)), 100000000, 0, -1424)], (0)), 100000000, 0, -1420), 0), 100000000, 0, -1419), 0), 100000000, 0, -1418), 0), 100000000, 0, -1417), 0), 100000000, 0, -1416), 0, (("plugins/micromega/micromega.mli", 331, 9043, 9043), ("plugins/micromega/micromega.mli", 331, 9043, 9182), 0), 0, Tag1 ("Micromega_plugin__Micromega", 180)), 0); (("xror_clause_cnf", 813), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1404), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1415), 0), 100000000, 0, -1414), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1404), (Tag1 (0, ((("a1")), 100000000, 0, -1404), (Tag3 ((Tag3 ("option", 10)), [((("a1")), 100000000, 0, -1404)], (0)), 100000000, 0, -1413), 0), 100000000, 0, -1412), 0), 100000000, 0, -1411), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([((("a1")), 100000000, 0, -1404); ((("a2")), 100000000, 0, -1405)]), 100000000, 0, -1410)], (0)), 100000000, 0, -1409), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("clause", 790)), [((("a1")), 100000000, 0, -1404); ((("a2")), 100000000, 0, -1405)], (0)), 100000000, 0, -1408)], (0)), 100000000, 0, -1407), (Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("clause", 790)), [((("a1")), 100000000, 0, -1404); ((("a2")), 100000000, 0, -1405)], (0)), 100000000, 0, -1403)], (0)), 100000000, 0, -1402); (Tag3 ((("trace", 779)), [((("a2")), 100000000, 0, -1405)], (0)), 100000000, 0, -1406)]), 100000000, 0, -1401), 0), 100000000, 0, -1400), 0), 100000000, 0, -1399), 0), 100000000, 0, -1398), 0), 100000000, 0, -1397), 0, (("plugins/micromega/micromega.mli", 333, 9184, 9184), ("plugins/micromega/micromega.mli", 333, 9184, 9333), 0), 0, Tag1 ("Micromega_plugin__Micromega", 181)), 0); (("ror_clause_cnf", 814), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1385), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1396), 0), 100000000, 0, -1395), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1385), (Tag1 (0, ((("a1")), 100000000, 0, -1385), (Tag3 ((Tag3 ("option", 10)), [((("a1")), 100000000, 0, -1385)], (0)), 100000000, 0, -1394), 0), 100000000, 0, -1393), 0), 100000000, 0, -1392), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([((("a1")), 100000000, 0, -1385); ((("a2")), 100000000, 0, -1386)]), 100000000, 0, -1391)], (0)), 100000000, 0, -1390), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("clause", 790)), [((("a1")), 100000000, 0, -1385); ((("a2")), 100000000, 0, -1386)], (0)), 100000000, 0, -1389)], (0)), 100000000, 0, -1388), (Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("clause", 790)), [((("a1")), 100000000, 0, -1385); ((("a2")), 100000000, 0, -1386)], (0)), 100000000, 0, -1384)], (0)), 100000000, 0, -1383); (Tag3 ((("trace", 779)), [((("a2")), 100000000, 0, -1386)], (0)), 100000000, 0, -1387)]), 100000000, 0, -1382), 0), 100000000, 0, -1381), 0), 100000000, 0, -1380), 0), 100000000, 0, -1379), 0), 100000000, 0, -1378), 0, (("plugins/micromega/micromega.mli", 335, 9335, 9335), ("plugins/micromega/micromega.mli", 335, 9335, 9483), 0), 0, Tag1 ("Micromega_plugin__Micromega", 182)), 0); (("ror_cnf", 815), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1366), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1377), 0), 100000000, 0, -1376), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1366), (Tag1 (0, ((("a1")), 100000000, 0, -1366), (Tag3 ((Tag3 ("option", 10)), [((("a1")), 100000000, 0, -1366)], (0)), 100000000, 0, -1375), 0), 100000000, 0, -1374), 0), 100000000, 0, -1373), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("clause", 790)), [((("a1")), 100000000, 0, -1366); ((("a2")), 100000000, 0, -1367)], (0)), 100000000, 0, -1372)], (0)), 100000000, 0, -1371), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("clause", 790)), [((("a1")), 100000000, 0, -1366); ((("a2")), 100000000, 0, -1367)], (0)), 100000000, 0, -1370)], (0)), 100000000, 0, -1369), (Tag2 ([(Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1366); ((("a2")), 100000000, 0, -1367)], (0)), 100000000, 0, -1365); (Tag3 ((("trace", 779)), [((("a2")), 100000000, 0, -1367)], (0)), 100000000, 0, -1368)]), 100000000, 0, -1364), 0), 100000000, 0, -1363), 0), 100000000, 0, -1362), 0), 100000000, 0, -1361), 0), 100000000, 0, -1360), 0, (("plugins/micromega/micromega.mli", 337, 9485, 9485), ("plugins/micromega/micromega.mli", 337, 9485, 9624), 0), 0, Tag1 ("Micromega_plugin__Micromega", 183)), 0); (("ror_cnf_opt", 816), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1350), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1359), 0), 100000000, 0, -1358), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1350), (Tag1 (0, ((("a1")), 100000000, 0, -1350), (Tag3 ((Tag3 ("option", 10)), [((("a1")), 100000000, 0, -1350)], (0)), 100000000, 0, -1357), 0), 100000000, 0, -1356), 0), 100000000, 0, -1355), (Tag1 (0, (Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1350); ((("a2")), 100000000, 0, -1351)], (0)), 100000000, 0, -1354), (Tag1 (0, (Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1350); ((("a2")), 100000000, 0, -1351)], (0)), 100000000, 0, -1353), (Tag2 ([(Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1350); ((("a2")), 100000000, 0, -1351)], (0)), 100000000, 0, -1349); (Tag3 ((("trace", 779)), [((("a2")), 100000000, 0, -1351)], (0)), 100000000, 0, -1352)]), 100000000, 0, -1348), 0), 100000000, 0, -1347), 0), 100000000, 0, -1346), 0), 100000000, 0, -1345), 0), 100000000, 0, -1344), 0, (("plugins/micromega/micromega.mli", 339, 9626, 9626), ("plugins/micromega/micromega.mli", 339, 9626, 9753), 0), 0, Tag1 ("Micromega_plugin__Micromega", 184)), 0); (("ratom", 817), ((Tag1 (0, (Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1340); ((("a2")), 100000000, 0, -1341)], (0)), 100000000, 0, -1343), (Tag1 (0, ((("a2")), 100000000, 0, -1341), (Tag2 ([(Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -1340); ((("a2")), 100000000, 0, -1341)], (0)), 100000000, 0, -1339); (Tag3 ((("trace", 779)), [((("a2")), 100000000, 0, -1341)], (0)), 100000000, 0, -1342)]), 100000000, 0, -1338), 0), 100000000, 0, -1337), 0), 100000000, 0, -1336), 0, (("plugins/micromega/micromega.mli", 341, 9755, 9755), ("plugins/micromega/micromega.mli", 341, 9755, 9818), 0), 0, Tag1 ("Micromega_plugin__Micromega", 185)), 0); (("rxcnf_and", 818), ((Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -1312), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1335), 0), 100000000, 0, -1334), (Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -1312), (Tag1 (0, ((("a2")), 100000000, 0, -1312), (Tag3 ((Tag3 ("option", 10)), [((("a2")), 100000000, 0, -1312)], (0)), 100000000, 0, -1333), 0), 100000000, 0, -1332), 0), 100000000, 0, -1331), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1330), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1329), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1316); ((("a3")), 100000000, 0, -1313); ((("a4")), 100000000, 0, -1317); ((("a5")), 100000000, 0, -1318)], (0)), 100000000, 0, -1328), (Tag2 ([(Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -1312); ((("a3")), 100000000, 0, -1313)], (0)), 100000000, 0, -1326); (Tag3 ((("trace", 779)), [((("a3")), 100000000, 0, -1313)], (0)), 100000000, 0, -1327)]), 100000000, 0, -1325), 0), 100000000, 0, -1324), 0), 100000000, 0, -1323), 0), 100000000, 0, -1322), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1321), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1320), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1316); ((("a3")), 100000000, 0, -1313); ((("a4")), 100000000, 0, -1317); ((("a5")), 100000000, 0, -1318)], (0)), 100000000, 0, -1319), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1316); ((("a3")), 100000000, 0, -1313); ((("a4")), 100000000, 0, -1317); ((("a5")), 100000000, 0, -1318)], (0)), 100000000, 0, -1315), (Tag2 ([(Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -1312); ((("a3")), 100000000, 0, -1313)], (0)), 100000000, 0, -1311); (Tag3 ((("trace", 779)), [((("a3")), 100000000, 0, -1313)], (0)), 100000000, 0, -1314)]), 100000000, 0, -1310), 0), 100000000, 0, -1309), 0), 100000000, 0, -1308), 0), 100000000, 0, -1307), 0), 100000000, 0, -1306), 0), 100000000, 0, -1305), 0), 100000000, 0, -1304), 0), 100000000, 0, -1303), 0, (("plugins/micromega/micromega.mli", 343, 9820, 9820), ("plugins/micromega/micromega.mli", 345, 9988, 10076), 0), 0, Tag1 ("Micromega_plugin__Micromega", 186)), 0); (("rxcnf_or", 819), ((Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -1279), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1302), 0), 100000000, 0, -1301), (Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -1279), (Tag1 (0, ((("a2")), 100000000, 0, -1279), (Tag3 ((Tag3 ("option", 10)), [((("a2")), 100000000, 0, -1279)], (0)), 100000000, 0, -1300), 0), 100000000, 0, -1299), 0), 100000000, 0, -1298), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1297), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1296), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1283); ((("a3")), 100000000, 0, -1280); ((("a4")), 100000000, 0, -1284); ((("a5")), 100000000, 0, -1285)], (0)), 100000000, 0, -1295), (Tag2 ([(Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -1279); ((("a3")), 100000000, 0, -1280)], (0)), 100000000, 0, -1293); (Tag3 ((("trace", 779)), [((("a3")), 100000000, 0, -1280)], (0)), 100000000, 0, -1294)]), 100000000, 0, -1292), 0), 100000000, 0, -1291), 0), 100000000, 0, -1290), 0), 100000000, 0, -1289), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1288), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1287), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1283); ((("a3")), 100000000, 0, -1280); ((("a4")), 100000000, 0, -1284); ((("a5")), 100000000, 0, -1285)], (0)), 100000000, 0, -1286), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1283); ((("a3")), 100000000, 0, -1280); ((("a4")), 100000000, 0, -1284); ((("a5")), 100000000, 0, -1285)], (0)), 100000000, 0, -1282), (Tag2 ([(Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -1279); ((("a3")), 100000000, 0, -1280)], (0)), 100000000, 0, -1278); (Tag3 ((("trace", 779)), [((("a3")), 100000000, 0, -1280)], (0)), 100000000, 0, -1281)]), 100000000, 0, -1277), 0), 100000000, 0, -1276), 0), 100000000, 0, -1275), 0), 100000000, 0, -1274), 0), 100000000, 0, -1273), 0), 100000000, 0, -1272), 0), 100000000, 0, -1271), 0), 100000000, 0, -1270), 0, (("plugins/micromega/micromega.mli", 347, 10078, 10078), ("plugins/micromega/micromega.mli", 349, 10245, 10333), 0), 0, Tag1 ("Micromega_plugin__Micromega", 187)), 0); (("rxcnf_impl", 820), ((Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -1246), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1269), 0), 100000000, 0, -1268), (Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -1246), (Tag1 (0, ((("a2")), 100000000, 0, -1246), (Tag3 ((Tag3 ("option", 10)), [((("a2")), 100000000, 0, -1246)], (0)), 100000000, 0, -1267), 0), 100000000, 0, -1266), 0), 100000000, 0, -1265), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1264), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1263), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1250); ((("a3")), 100000000, 0, -1247); ((("a4")), 100000000, 0, -1251); ((("a5")), 100000000, 0, -1252)], (0)), 100000000, 0, -1262), (Tag2 ([(Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -1246); ((("a3")), 100000000, 0, -1247)], (0)), 100000000, 0, -1260); (Tag3 ((("trace", 779)), [((("a3")), 100000000, 0, -1247)], (0)), 100000000, 0, -1261)]), 100000000, 0, -1259), 0), 100000000, 0, -1258), 0), 100000000, 0, -1257), 0), 100000000, 0, -1256), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1255), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1254), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1250); ((("a3")), 100000000, 0, -1247); ((("a4")), 100000000, 0, -1251); ((("a5")), 100000000, 0, -1252)], (0)), 100000000, 0, -1253), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1250); ((("a3")), 100000000, 0, -1247); ((("a4")), 100000000, 0, -1251); ((("a5")), 100000000, 0, -1252)], (0)), 100000000, 0, -1249), (Tag2 ([(Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -1246); ((("a3")), 100000000, 0, -1247)], (0)), 100000000, 0, -1245); (Tag3 ((("trace", 779)), [((("a3")), 100000000, 0, -1247)], (0)), 100000000, 0, -1248)]), 100000000, 0, -1244), 0), 100000000, 0, -1243), 0), 100000000, 0, -1242), 0), 100000000, 0, -1241), 0), 100000000, 0, -1240), 0), 100000000, 0, -1239), 0), 100000000, 0, -1238), 0), 100000000, 0, -1237), 0, (("plugins/micromega/micromega.mli", 351, 10335, 10335), ("plugins/micromega/micromega.mli", 353, 10504, 10592), 0), 0, Tag1 ("Micromega_plugin__Micromega", 188)), 0); (("rxcnf_iff", 821), ((Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -1213), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1236), 0), 100000000, 0, -1235), (Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -1213), (Tag1 (0, ((("a2")), 100000000, 0, -1213), (Tag3 ((Tag3 ("option", 10)), [((("a2")), 100000000, 0, -1213)], (0)), 100000000, 0, -1234), 0), 100000000, 0, -1233), 0), 100000000, 0, -1232), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1231), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1230), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1217); ((("a3")), 100000000, 0, -1214); ((("a4")), 100000000, 0, -1218); ((("a5")), 100000000, 0, -1219)], (0)), 100000000, 0, -1229), (Tag2 ([(Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -1213); ((("a3")), 100000000, 0, -1214)], (0)), 100000000, 0, -1227); (Tag3 ((("trace", 779)), [((("a3")), 100000000, 0, -1214)], (0)), 100000000, 0, -1228)]), 100000000, 0, -1226), 0), 100000000, 0, -1225), 0), 100000000, 0, -1224), 0), 100000000, 0, -1223), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1222), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1221), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1217); ((("a3")), 100000000, 0, -1214); ((("a4")), 100000000, 0, -1218); ((("a5")), 100000000, 0, -1219)], (0)), 100000000, 0, -1220), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1217); ((("a3")), 100000000, 0, -1214); ((("a4")), 100000000, 0, -1218); ((("a5")), 100000000, 0, -1219)], (0)), 100000000, 0, -1216), (Tag2 ([(Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -1213); ((("a3")), 100000000, 0, -1214)], (0)), 100000000, 0, -1212); (Tag3 ((("trace", 779)), [((("a3")), 100000000, 0, -1214)], (0)), 100000000, 0, -1215)]), 100000000, 0, -1211), 0), 100000000, 0, -1210), 0), 100000000, 0, -1209), 0), 100000000, 0, -1208), 0), 100000000, 0, -1207), 0), 100000000, 0, -1206), 0), 100000000, 0, -1205), 0), 100000000, 0, -1204), 0, (("plugins/micromega/micromega.mli", 355, 10594, 10594), ("plugins/micromega/micromega.mli", 357, 10762, 10850), 0), 0, Tag1 ("Micromega_plugin__Micromega", 189)), 0); (("rxcnf", 822), ((Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -1184), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1203), 0), 100000000, 0, -1202), (Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -1184), (Tag1 (0, ((("a2")), 100000000, 0, -1184), (Tag3 ((Tag3 ("option", 10)), [((("a2")), 100000000, 0, -1184)], (0)), 100000000, 0, -1201), 0), 100000000, 0, -1200), 0), 100000000, 0, -1199), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1188), (Tag1 (0, ((("a3")), 100000000, 0, -1185), (Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -1184); ((("a3")), 100000000, 0, -1185)], (0)), 100000000, 0, -1198), 0), 100000000, 0, -1197), 0), 100000000, 0, -1196), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -1188), (Tag1 (0, ((("a3")), 100000000, 0, -1185), (Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -1184); ((("a3")), 100000000, 0, -1185)], (0)), 100000000, 0, -1195), 0), 100000000, 0, -1194), 0), 100000000, 0, -1193), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1192), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1191), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1188); ((("a3")), 100000000, 0, -1185); ((("a4")), 100000000, 0, -1189); ((("a5")), 100000000, 0, -1190)], (0)), 100000000, 0, -1187), (Tag2 ([(Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -1184); ((("a3")), 100000000, 0, -1185)], (0)), 100000000, 0, -1183); (Tag3 ((("trace", 779)), [((("a3")), 100000000, 0, -1185)], (0)), 100000000, 0, -1186)]), 100000000, 0, -1182), 0), 100000000, 0, -1181), 0), 100000000, 0, -1180), 0), 100000000, 0, -1179), 0), 100000000, 0, -1178), 0), 100000000, 0, -1177), 0), 100000000, 0, -1176), 0), 100000000, 0, -1175), 0, (("plugins/micromega/micromega.mli", 359, 10852, 10852), ("plugins/micromega/micromega.mli", 361, 11018, 11058), 0), 0, Tag1 ("Micromega_plugin__Micromega", 190)), 0); Tag1 (("to_constrT", 823), ([((("term")), 100000000, 0, -1152); ((("annot")), 100000000, 0, -1151); ((("tX")), 100000000, 0, -1144)], 3, [[(("mkTT", 558), 0, (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1145), ((("tX")), 100000000, 0, -1144), 0), 100000000, 0, -1143), (("plugins/micromega/micromega.mli", 363, 11060, 11101), ("plugins/micromega/micromega.mli", 363, 11060, 11122), 0), 0, Tag1 ("Micromega_plugin__Micromega", 192)); (("mkFF", 559), 0, (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1147), ((("tX")), 100000000, 0, -1144), 0), 100000000, 0, -1146), (("plugins/micromega/micromega.mli", 363, 11060, 11123), ("plugins/micromega/micromega.mli", 363, 11060, 11144), 0), 0, Tag1 ("Micromega_plugin__Micromega", 193)); (("mkA", 560), 0, (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1153), (Tag1 (0, ((("term")), 100000000, 0, -1152), (Tag1 (0, ((("annot")), 100000000, 0, -1151), ((("tX")), 100000000, 0, -1144), 0), 100000000, 0, -1150), 0), 100000000, 0, -1149), 0), 100000000, 0, -1148), (("plugins/micromega/micromega.mli", 363, 11060, 11145), ("plugins/micromega/micromega.mli", 363, 11060, 11184), 0), 0, Tag1 ("Micromega_plugin__Micromega", 194)); (("mkAND", 561), 0, (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1157), (Tag1 (0, ((("tX")), 100000000, 0, -1144), (Tag1 (0, ((("tX")), 100000000, 0, -1144), ((("tX")), 100000000, 0, -1144), 0), 100000000, 0, -1156), 0), 100000000, 0, -1155), 0), 100000000, 0, -1154), (("plugins/micromega/micromega.mli", 364, 11185, 11226), ("plugins/micromega/micromega.mli", 364, 11185, 11262), 0), 0, Tag1 ("Micromega_plugin__Micromega", 195)); (("mkOR", 562), 0, (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1161), (Tag1 (0, ((("tX")), 100000000, 0, -1144), (Tag1 (0, ((("tX")), 100000000, 0, -1144), ((("tX")), 100000000, 0, -1144), 0), 100000000, 0, -1160), 0), 100000000, 0, -1159), 0), 100000000, 0, -1158), (("plugins/micromega/micromega.mli", 364, 11185, 11263), ("plugins/micromega/micromega.mli", 364, 11185, 11298), 0), 0, Tag1 ("Micromega_plugin__Micromega", 196)); (("mkIMPL", 563), 0, (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1165), (Tag1 (0, ((("tX")), 100000000, 0, -1144), (Tag1 (0, ((("tX")), 100000000, 0, -1144), ((("tX")), 100000000, 0, -1144), 0), 100000000, 0, -1164), 0), 100000000, 0, -1163), 0), 100000000, 0, -1162), (("plugins/micromega/micromega.mli", 364, 11185, 11299), ("plugins/micromega/micromega.mli", 364, 11185, 11336), 0), 0, Tag1 ("Micromega_plugin__Micromega", 197)); (("mkIFF", 564), 0, (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1169), (Tag1 (0, ((("tX")), 100000000, 0, -1144), (Tag1 (0, ((("tX")), 100000000, 0, -1144), ((("tX")), 100000000, 0, -1144), 0), 100000000, 0, -1168), 0), 100000000, 0, -1167), 0), 100000000, 0, -1166), (("plugins/micromega/micromega.mli", 365, 11337, 11378), ("plugins/micromega/micromega.mli", 365, 11337, 11414), 0), 0, Tag1 ("Micromega_plugin__Micromega", 198)); (("mkNOT", 565), 0, (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1172), (Tag1 (0, ((("tX")), 100000000, 0, -1144), ((("tX")), 100000000, 0, -1144), 0), 100000000, 0, -1171), 0), 100000000, 0, -1170), (("plugins/micromega/micromega.mli", 365, 11337, 11415), ("plugins/micromega/micromega.mli", 365, 11337, 11444), 0), 0, Tag1 ("Micromega_plugin__Micromega", 199)); (("mkEQ", 566), 0, (Tag1 (0, ((("tX")), 100000000, 0, -1144), (Tag1 (0, ((("tX")), 100000000, 0, -1144), ((("tX")), 100000000, 0, -1144), 0), 100000000, 0, -1174), 0), 100000000, 0, -1173), (("plugins/micromega/micromega.mli", 365, 11337, 11445), ("plugins/micromega/micromega.mli", 365, 11337, 11471), 0), 0, Tag1 ("Micromega_plugin__Micromega", 200))]], 1, 0, [46; 46; 63], [0; 0; 0], 0, 0, (("plugins/micromega/micromega.mli", 363, 11060, 11060), ("plugins/micromega/micromega.mli", 365, 11337, 11473), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 191)), 1, 0); (("aformula", 824), ((Tag1 (0, (Tag3 ((("to_constrT", 823)), [((("a1")), 100000000, 0, -1138); ((("a2")), 100000000, 0, -1139); ((("a3")), 100000000, 0, -1136)], (0)), 100000000, 0, -1142), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1141), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1138); ((("a2")), 100000000, 0, -1139); ((("a3")), 100000000, 0, -1136); ((("a4")), 100000000, 0, -1140)], (0)), 100000000, 0, -1137), ((("a3")), 100000000, 0, -1136), 0), 100000000, 0, -1135), 0), 100000000, 0, -1134), 0), 100000000, 0, -1133), 0, (("plugins/micromega/micromega.mli", 367, 11475, 11475), ("plugins/micromega/micromega.mli", 367, 11475, 11564), 0), 0, Tag1 ("Micromega_plugin__Micromega", 201)), 0); (("is_X", 825), ((Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1132), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1129); ((("a2")), 100000000, 0, -1130); ((("a3")), 100000000, 0, -1127); ((("a4")), 100000000, 0, -1131)], (0)), 100000000, 0, -1128), (Tag3 ((Tag3 ("option", 10)), [((("a3")), 100000000, 0, -1127)], (0)), 100000000, 0, -1126), 0), 100000000, 0, -1125), 0), 100000000, 0, -1124), 0, (("plugins/micromega/micromega.mli", 369, 11566, 11566), ("plugins/micromega/micromega.mli", 369, 11566, 11628), 0), 0, Tag1 ("Micromega_plugin__Micromega", 202)), 0); (("abs_and", 826), ((Tag1 (0, (Tag3 ((("to_constrT", 823)), [((("a1")), 100000000, 0, -1109); ((("a2")), 100000000, 0, -1111); ((("a3")), 100000000, 0, -1110)], (0)), 100000000, 0, -1123), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1122), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1109); ((("a2")), 100000000, 0, -1111); ((("a3")), 100000000, 0, -1110); ((("a4")), 100000000, 0, -1112)], (0)), 100000000, 0, -1121), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1109); ((("a2")), 100000000, 0, -1111); ((("a3")), 100000000, 0, -1110); ((("a4")), 100000000, 0, -1112)], (0)), 100000000, 0, -1120), (Tag1 (0, (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1119), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1109); ((("a2")), 100000000, 0, -1111); ((("a3")), 100000000, 0, -1110); ((("a4")), 100000000, 0, -1112)], (0)), 100000000, 0, -1118), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1109); ((("a2")), 100000000, 0, -1111); ((("a3")), 100000000, 0, -1110); ((("a4")), 100000000, 0, -1112)], (0)), 100000000, 0, -1117), (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1109); ((("a2")), 100000000, 0, -1111); ((("a3")), 100000000, 0, -1110); ((("a4")), 100000000, 0, -1112)], (0)), 100000000, 0, -1116), 0), 100000000, 0, -1115), 0), 100000000, 0, -1114), 0), 100000000, 0, -1113), (Tag3 ((("gFormula", 780)), [((("a1")), 100000000, 0, -1109); ((("a3")), 100000000, 0, -1110); ((("a2")), 100000000, 0, -1111); ((("a4")), 100000000, 0, -1112)], (0)), 100000000, 0, -1108), 0), 100000000, 0, -1107), 0), 100000000, 0, -1106), 0), 100000000, 0, -1105), 0), 100000000, 0, -1104), 0), 100000000, 0, -1103), 0, (("plugins/micromega/micromega.mli", 371, 11630, 11630), ("plugins/micromega/micromega.mli", 373, 11798, 11890), 0), 0, Tag1 ("Micromega_plugin__Micromega", 203)), 0); (("abs_or", 827), ((Tag1 (0, (Tag3 ((("to_constrT", 823)), [((("a1")), 100000000, 0, -1088); ((("a2")), 100000000, 0, -1090); ((("a3")), 100000000, 0, -1089)], (0)), 100000000, 0, -1102), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1101), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1088); ((("a2")), 100000000, 0, -1090); ((("a3")), 100000000, 0, -1089); ((("a4")), 100000000, 0, -1091)], (0)), 100000000, 0, -1100), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1088); ((("a2")), 100000000, 0, -1090); ((("a3")), 100000000, 0, -1089); ((("a4")), 100000000, 0, -1091)], (0)), 100000000, 0, -1099), (Tag1 (0, (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1098), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1088); ((("a2")), 100000000, 0, -1090); ((("a3")), 100000000, 0, -1089); ((("a4")), 100000000, 0, -1091)], (0)), 100000000, 0, -1097), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1088); ((("a2")), 100000000, 0, -1090); ((("a3")), 100000000, 0, -1089); ((("a4")), 100000000, 0, -1091)], (0)), 100000000, 0, -1096), (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1088); ((("a2")), 100000000, 0, -1090); ((("a3")), 100000000, 0, -1089); ((("a4")), 100000000, 0, -1091)], (0)), 100000000, 0, -1095), 0), 100000000, 0, -1094), 0), 100000000, 0, -1093), 0), 100000000, 0, -1092), (Tag3 ((("gFormula", 780)), [((("a1")), 100000000, 0, -1088); ((("a3")), 100000000, 0, -1089); ((("a2")), 100000000, 0, -1090); ((("a4")), 100000000, 0, -1091)], (0)), 100000000, 0, -1087), 0), 100000000, 0, -1086), 0), 100000000, 0, -1085), 0), 100000000, 0, -1084), 0), 100000000, 0, -1083), 0), 100000000, 0, -1082), 0, (("plugins/micromega/micromega.mli", 375, 11892, 11892), ("plugins/micromega/micromega.mli", 377, 12059, 12151), 0), 0, Tag1 ("Micromega_plugin__Micromega", 204)), 0); (("abs_not", 828), ((Tag1 (0, (Tag3 ((("to_constrT", 823)), [((("a1")), 100000000, 0, -1070); ((("a2")), 100000000, 0, -1072); ((("a3")), 100000000, 0, -1071)], (0)), 100000000, 0, -1081), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1080), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1070); ((("a2")), 100000000, 0, -1072); ((("a3")), 100000000, 0, -1071); ((("a4")), 100000000, 0, -1073)], (0)), 100000000, 0, -1079), (Tag1 (0, (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1078), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1070); ((("a2")), 100000000, 0, -1072); ((("a3")), 100000000, 0, -1071); ((("a4")), 100000000, 0, -1073)], (0)), 100000000, 0, -1077), (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1070); ((("a2")), 100000000, 0, -1072); ((("a3")), 100000000, 0, -1071); ((("a4")), 100000000, 0, -1073)], (0)), 100000000, 0, -1076), 0), 100000000, 0, -1075), 0), 100000000, 0, -1074), (Tag3 ((("gFormula", 780)), [((("a1")), 100000000, 0, -1070); ((("a3")), 100000000, 0, -1071); ((("a2")), 100000000, 0, -1072); ((("a4")), 100000000, 0, -1073)], (0)), 100000000, 0, -1069), 0), 100000000, 0, -1068), 0), 100000000, 0, -1067), 0), 100000000, 0, -1066), 0), 100000000, 0, -1065), 0, (("plugins/micromega/micromega.mli", 379, 12153, 12153), ("plugins/micromega/micromega.mli", 381, 12316, 12347), 0), 0, Tag1 ("Micromega_plugin__Micromega", 205)), 0); (("mk_arrow", 829), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a4")), 100000000, 0, -1060)], (0)), 100000000, 0, -1064), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1063), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1057); ((("a2")), 100000000, 0, -1058); ((("a3")), 100000000, 0, -1059); ((("a4")), 100000000, 0, -1060)], (0)), 100000000, 0, -1062), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1057); ((("a2")), 100000000, 0, -1058); ((("a3")), 100000000, 0, -1059); ((("a4")), 100000000, 0, -1060)], (0)), 100000000, 0, -1061), (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1057); ((("a2")), 100000000, 0, -1058); ((("a3")), 100000000, 0, -1059); ((("a4")), 100000000, 0, -1060)], (0)), 100000000, 0, -1056), 0), 100000000, 0, -1055), 0), 100000000, 0, -1054), 0), 100000000, 0, -1053), 0), 100000000, 0, -1052), 0, (("plugins/micromega/micromega.mli", 383, 12349, 12349), ("plugins/micromega/micromega.mli", 383, 12349, 12481), 0), 0, Tag1 ("Micromega_plugin__Micromega", 206)), 0); (("abst_simpl", 830), ((Tag1 (0, (Tag3 ((("to_constrT", 823)), [((("a1")), 100000000, 0, -1043); ((("a2")), 100000000, 0, -1044); ((("a3")), 100000000, 0, -1045)], (0)), 100000000, 0, -1051), (Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -1044), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1050), 0), 100000000, 0, -1049), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1048), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1043); ((("a2")), 100000000, 0, -1044); ((("a3")), 100000000, 0, -1045); ((("a4")), 100000000, 0, -1046)], (0)), 100000000, 0, -1047), (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1043); ((("a2")), 100000000, 0, -1044); ((("a3")), 100000000, 0, -1045); ((("a4")), 100000000, 0, -1046)], (0)), 100000000, 0, -1042), 0), 100000000, 0, -1041), 0), 100000000, 0, -1040), 0), 100000000, 0, -1039), 0), 100000000, 0, -1038), 0, (("plugins/micromega/micromega.mli", 385, 12483, 12483), ("plugins/micromega/micromega.mli", 385, 12483, 12617), 0), 0, Tag1 ("Micromega_plugin__Micromega", 207)), 0); (("abst_and", 831), ((Tag1 (0, (Tag3 ((("to_constrT", 823)), [((("a1")), 100000000, 0, -1022); ((("a2")), 100000000, 0, -1023); ((("a3")), 100000000, 0, -1024)], (0)), 100000000, 0, -1037), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1036), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1035), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1022); ((("a2")), 100000000, 0, -1023); ((("a3")), 100000000, 0, -1024); ((("a4")), 100000000, 0, -1025)], (0)), 100000000, 0, -1034), (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1022); ((("a2")), 100000000, 0, -1023); ((("a3")), 100000000, 0, -1024); ((("a4")), 100000000, 0, -1025)], (0)), 100000000, 0, -1033), 0), 100000000, 0, -1032), 0), 100000000, 0, -1031), 0), 100000000, 0, -1030), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1029), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1028), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1022); ((("a2")), 100000000, 0, -1023); ((("a3")), 100000000, 0, -1024); ((("a4")), 100000000, 0, -1025)], (0)), 100000000, 0, -1027), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1022); ((("a2")), 100000000, 0, -1023); ((("a3")), 100000000, 0, -1024); ((("a4")), 100000000, 0, -1025)], (0)), 100000000, 0, -1026), (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -1022); ((("a2")), 100000000, 0, -1023); ((("a3")), 100000000, 0, -1024); ((("a4")), 100000000, 0, -1025)], (0)), 100000000, 0, -1021), 0), 100000000, 0, -1020), 0), 100000000, 0, -1019), 0), 100000000, 0, -1018), 0), 100000000, 0, -1017), 0), 100000000, 0, -1016), 0), 100000000, 0, -1015), 0, (("plugins/micromega/micromega.mli", 387, 12619, 12619), ("plugins/micromega/micromega.mli", 389, 12787, 12863), 0), 0, Tag1 ("Micromega_plugin__Micromega", 208)), 0); (("abst_or", 832), ((Tag1 (0, (Tag3 ((("to_constrT", 823)), [((("a1")), 100000000, 0, -999); ((("a2")), 100000000, 0, -1000); ((("a3")), 100000000, 0, -1001)], (0)), 100000000, 0, -1014), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1013), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1012), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -999); ((("a2")), 100000000, 0, -1000); ((("a3")), 100000000, 0, -1001); ((("a4")), 100000000, 0, -1002)], (0)), 100000000, 0, -1011), (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -999); ((("a2")), 100000000, 0, -1000); ((("a3")), 100000000, 0, -1001); ((("a4")), 100000000, 0, -1002)], (0)), 100000000, 0, -1010), 0), 100000000, 0, -1009), 0), 100000000, 0, -1008), 0), 100000000, 0, -1007), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1006), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -1005), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -999); ((("a2")), 100000000, 0, -1000); ((("a3")), 100000000, 0, -1001); ((("a4")), 100000000, 0, -1002)], (0)), 100000000, 0, -1004), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -999); ((("a2")), 100000000, 0, -1000); ((("a3")), 100000000, 0, -1001); ((("a4")), 100000000, 0, -1002)], (0)), 100000000, 0, -1003), (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -999); ((("a2")), 100000000, 0, -1000); ((("a3")), 100000000, 0, -1001); ((("a4")), 100000000, 0, -1002)], (0)), 100000000, 0, -998), 0), 100000000, 0, -997), 0), 100000000, 0, -996), 0), 100000000, 0, -995), 0), 100000000, 0, -994), 0), 100000000, 0, -993), 0), 100000000, 0, -992), 0, (("plugins/micromega/micromega.mli", 391, 12865, 12865), ("plugins/micromega/micromega.mli", 393, 13032, 13108), 0), 0, Tag1 ("Micromega_plugin__Micromega", 209)), 0); (("abst_impl", 833), ((Tag1 (0, (Tag3 ((("to_constrT", 823)), [((("a1")), 100000000, 0, -975); ((("a2")), 100000000, 0, -976); ((("a3")), 100000000, 0, -977)], (0)), 100000000, 0, -991), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -990), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -989), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -975); ((("a2")), 100000000, 0, -976); ((("a3")), 100000000, 0, -977); ((("a4")), 100000000, 0, -978)], (0)), 100000000, 0, -988), (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -975); ((("a2")), 100000000, 0, -976); ((("a3")), 100000000, 0, -977); ((("a4")), 100000000, 0, -978)], (0)), 100000000, 0, -987), 0), 100000000, 0, -986), 0), 100000000, 0, -985), 0), 100000000, 0, -984), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -983), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a4")), 100000000, 0, -978)], (0)), 100000000, 0, -982), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -981), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -975); ((("a2")), 100000000, 0, -976); ((("a3")), 100000000, 0, -977); ((("a4")), 100000000, 0, -978)], (0)), 100000000, 0, -980), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -975); ((("a2")), 100000000, 0, -976); ((("a3")), 100000000, 0, -977); ((("a4")), 100000000, 0, -978)], (0)), 100000000, 0, -979), (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -975); ((("a2")), 100000000, 0, -976); ((("a3")), 100000000, 0, -977); ((("a4")), 100000000, 0, -978)], (0)), 100000000, 0, -974), 0), 100000000, 0, -973), 0), 100000000, 0, -972), 0), 100000000, 0, -971), 0), 100000000, 0, -970), 0), 100000000, 0, -969), 0), 100000000, 0, -968), 0), 100000000, 0, -967), 0, (("plugins/micromega/micromega.mli", 395, 13110, 13110), ("plugins/micromega/micromega.mli", 397, 13278, 13369), 0), 0, Tag1 ("Micromega_plugin__Micromega", 210)), 0); (("or_is_X", 834), ((Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -966), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -961); ((("a2")), 100000000, 0, -962); ((("a3")), 100000000, 0, -963); ((("a4")), 100000000, 0, -964)], (0)), 100000000, 0, -965), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -961); ((("a2")), 100000000, 0, -962); ((("a3")), 100000000, 0, -963); ((("a4")), 100000000, 0, -964)], (0)), 100000000, 0, -960), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -959), 0), 100000000, 0, -958), 0), 100000000, 0, -957), 0), 100000000, 0, -956), 0, (("plugins/micromega/micromega.mli", 399, 13371, 13371), ("plugins/micromega/micromega.mli", 399, 13371, 13463), 0), 0, Tag1 ("Micromega_plugin__Micromega", 211)), 0); (("abs_iff", 835), ((Tag1 (0, (Tag3 ((("to_constrT", 823)), [((("a1")), 100000000, 0, -944); ((("a2")), 100000000, 0, -945); ((("a3")), 100000000, 0, -946)], (0)), 100000000, 0, -955), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -954), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -944); ((("a2")), 100000000, 0, -945); ((("a3")), 100000000, 0, -946); ((("a4")), 100000000, 0, -947)], (0)), 100000000, 0, -953), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -944); ((("a2")), 100000000, 0, -945); ((("a3")), 100000000, 0, -946); ((("a4")), 100000000, 0, -947)], (0)), 100000000, 0, -952), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -944); ((("a2")), 100000000, 0, -945); ((("a3")), 100000000, 0, -946); ((("a4")), 100000000, 0, -947)], (0)), 100000000, 0, -951), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -944); ((("a2")), 100000000, 0, -945); ((("a3")), 100000000, 0, -946); ((("a4")), 100000000, 0, -947)], (0)), 100000000, 0, -950), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -949), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -944); ((("a2")), 100000000, 0, -945); ((("a3")), 100000000, 0, -946); ((("a4")), 100000000, 0, -947)], (0)), 100000000, 0, -948), (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -944); ((("a2")), 100000000, 0, -945); ((("a3")), 100000000, 0, -946); ((("a4")), 100000000, 0, -947)], (0)), 100000000, 0, -943), 0), 100000000, 0, -942), 0), 100000000, 0, -941), 0), 100000000, 0, -940), 0), 100000000, 0, -939), 0), 100000000, 0, -938), 0), 100000000, 0, -937), 0), 100000000, 0, -936), 0), 100000000, 0, -935), 0, (("plugins/micromega/micromega.mli", 401, 13465, 13465), ("plugins/micromega/micromega.mli", 403, 13629, 13723), 0), 0, Tag1 ("Micromega_plugin__Micromega", 212)), 0); (("abst_iff", 836), ((Tag1 (0, (Tag3 ((("to_constrT", 823)), [((("a1")), 100000000, 0, -917); ((("a2")), 100000000, 0, -918); ((("a3")), 100000000, 0, -919)], (0)), 100000000, 0, -934), (Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -918), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -933), 0), 100000000, 0, -932), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -931), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -930), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -917); ((("a2")), 100000000, 0, -918); ((("a3")), 100000000, 0, -919); ((("a4")), 100000000, 0, -920)], (0)), 100000000, 0, -929), (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -917); ((("a2")), 100000000, 0, -918); ((("a3")), 100000000, 0, -919); ((("a4")), 100000000, 0, -920)], (0)), 100000000, 0, -928), 0), 100000000, 0, -927), 0), 100000000, 0, -926), 0), 100000000, 0, -925), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -924), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -923), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -917); ((("a2")), 100000000, 0, -918); ((("a3")), 100000000, 0, -919); ((("a4")), 100000000, 0, -920)], (0)), 100000000, 0, -922), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -917); ((("a2")), 100000000, 0, -918); ((("a3")), 100000000, 0, -919); ((("a4")), 100000000, 0, -920)], (0)), 100000000, 0, -921), (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -917); ((("a2")), 100000000, 0, -918); ((("a3")), 100000000, 0, -919); ((("a4")), 100000000, 0, -920)], (0)), 100000000, 0, -916), 0), 100000000, 0, -915), 0), 100000000, 0, -914), 0), 100000000, 0, -913), 0), 100000000, 0, -912), 0), 100000000, 0, -911), 0), 100000000, 0, -910), 0), 100000000, 0, -909), 0, (("plugins/micromega/micromega.mli", 405, 13725, 13725), ("plugins/micromega/micromega.mli", 407, 13889, 13986), 0), 0, Tag1 ("Micromega_plugin__Micromega", 213)), 0); (("abst_eq", 837), ((Tag1 (0, (Tag3 ((("to_constrT", 823)), [((("a1")), 100000000, 0, -892); ((("a2")), 100000000, 0, -893); ((("a3")), 100000000, 0, -894)], (0)), 100000000, 0, -908), (Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -893), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -907), 0), 100000000, 0, -906), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -905), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -904), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -892); ((("a2")), 100000000, 0, -893); ((("a3")), 100000000, 0, -894); ((("a4")), 100000000, 0, -895)], (0)), 100000000, 0, -903), (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -892); ((("a2")), 100000000, 0, -893); ((("a3")), 100000000, 0, -894); ((("a4")), 100000000, 0, -895)], (0)), 100000000, 0, -902), 0), 100000000, 0, -901), 0), 100000000, 0, -900), 0), 100000000, 0, -899), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -898), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -892); ((("a2")), 100000000, 0, -893); ((("a3")), 100000000, 0, -894); ((("a4")), 100000000, 0, -895)], (0)), 100000000, 0, -897), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -892); ((("a2")), 100000000, 0, -893); ((("a3")), 100000000, 0, -894); ((("a4")), 100000000, 0, -895)], (0)), 100000000, 0, -896), (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -892); ((("a2")), 100000000, 0, -893); ((("a3")), 100000000, 0, -894); ((("a4")), 100000000, 0, -895)], (0)), 100000000, 0, -891), 0), 100000000, 0, -890), 0), 100000000, 0, -889), 0), 100000000, 0, -888), 0), 100000000, 0, -887), 0), 100000000, 0, -886), 0), 100000000, 0, -885), 0, (("plugins/micromega/micromega.mli", 409, 13988, 13988), ("plugins/micromega/micromega.mli", 411, 14154, 14240), 0), 0, Tag1 ("Micromega_plugin__Micromega", 214)), 0); (("abst_form", 838), ((Tag1 (0, (Tag3 ((("to_constrT", 823)), [((("a1")), 100000000, 0, -875); ((("a2")), 100000000, 0, -876); ((("a3")), 100000000, 0, -877)], (0)), 100000000, 0, -884), (Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -876), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -883), 0), 100000000, 0, -882), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -881), (Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -880), (Tag1 (0, (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -875); ((("a2")), 100000000, 0, -876); ((("a3")), 100000000, 0, -877); ((("a4")), 100000000, 0, -878)], (0)), 100000000, 0, -879), (Tag3 ((("tFormula", 800)), [((("a1")), 100000000, 0, -875); ((("a2")), 100000000, 0, -876); ((("a3")), 100000000, 0, -877); ((("a4")), 100000000, 0, -878)], (0)), 100000000, 0, -874), 0), 100000000, 0, -873), 0), 100000000, 0, -872), 0), 100000000, 0, -871), 0), 100000000, 0, -870), 0), 100000000, 0, -869), 0, (("plugins/micromega/micromega.mli", 413, 14242, 14242), ("plugins/micromega/micromega.mli", 413, 14242, 14383), 0), 0, Tag1 ("Micromega_plugin__Micromega", 215)), 0); (("cnf_checker", 839), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([((("a1")), 100000000, 0, -862); ((("a2")), 100000000, 0, -863)]), 100000000, 0, -868)], (0)), 100000000, 0, -867), (Tag1 (0, ((("a3")), 100000000, 0, -860), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -866), 0), 100000000, 0, -865), 0), 100000000, 0, -864), (Tag1 (0, (Tag3 ((("cnf", 791)), [((("a1")), 100000000, 0, -862); ((("a2")), 100000000, 0, -863)], (0)), 100000000, 0, -861), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a3")), 100000000, 0, -860)], (0)), 100000000, 0, -859), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -858), 0), 100000000, 0, -857), 0), 100000000, 0, -856), 0), 100000000, 0, -855), 0, (("plugins/micromega/micromega.mli", 415, 14385, 14385), ("plugins/micromega/micromega.mli", 415, 14385, 14474), 0), 0, Tag1 ("Micromega_plugin__Micromega", 216)), 0); (("tauto_checker", 840), ((Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -843), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -854), 0), 100000000, 0, -853), (Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -843), (Tag1 (0, ((("a2")), 100000000, 0, -843), (Tag3 ((Tag3 ("option", 10)), [((("a2")), 100000000, 0, -843)], (0)), 100000000, 0, -852), 0), 100000000, 0, -851), 0), 100000000, 0, -850), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -834), (Tag1 (0, ((("a3")), 100000000, 0, -836), (Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -843); ((("a3")), 100000000, 0, -836)], (0)), 100000000, 0, -849), 0), 100000000, 0, -848), 0), 100000000, 0, -847), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -834), (Tag1 (0, ((("a3")), 100000000, 0, -836), (Tag3 ((("cnf", 791)), [((("a2")), 100000000, 0, -843); ((("a3")), 100000000, 0, -836)], (0)), 100000000, 0, -846), 0), 100000000, 0, -845), 0), 100000000, 0, -844), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([((("a2")), 100000000, 0, -843); ((("a3")), 100000000, 0, -836)]), 100000000, 0, -842)], (0)), 100000000, 0, -841), (Tag1 (0, ((("a4")), 100000000, 0, -832), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -840), 0), 100000000, 0, -839), 0), 100000000, 0, -838), (Tag1 (0, (Tag3 ((("gFormula", 780)), [((("a1")), 100000000, 0, -834); (Tag3 ((("rtyp", 786)), 0, (0)), 100000000, 0, -835); ((("a3")), 100000000, 0, -836); (Tag3 ((("unit0", 726)), 0, (0)), 100000000, 0, -837)], (0)), 100000000, 0, -833), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a4")), 100000000, 0, -832)], (0)), 100000000, 0, -831), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -830), 0), 100000000, 0, -829), 0), 100000000, 0, -828), 0), 100000000, 0, -827), 0), 100000000, 0, -826), 0), 100000000, 0, -825), 0), 100000000, 0, -824), 0), 100000000, 0, -823), 0, (("plugins/micromega/micromega.mli", 417, 14476, 14476), ("plugins/micromega/micromega.mli", 419, 14650, 14704), 0), 0, Tag1 ("Micromega_plugin__Micromega", 217)), 0); (("cneqb", 841), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -819), (Tag1 (0, ((("a1")), 100000000, 0, -819), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -822), 0), 100000000, 0, -821), 0), 100000000, 0, -820), (Tag1 (0, ((("a1")), 100000000, 0, -819), (Tag1 (0, ((("a1")), 100000000, 0, -819), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -818), 0), 100000000, 0, -817), 0), 100000000, 0, -816), 0), 100000000, 0, -815), 0, (("plugins/micromega/micromega.mli", 421, 14706, 14706), ("plugins/micromega/micromega.mli", 421, 14706, 14760), 0), 0, Tag1 ("Micromega_plugin__Micromega", 218)), 0); (("cltb", 842), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -808), (Tag1 (0, ((("a1")), 100000000, 0, -808), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -814), 0), 100000000, 0, -813), 0), 100000000, 0, -812), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -808), (Tag1 (0, ((("a1")), 100000000, 0, -808), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -811), 0), 100000000, 0, -810), 0), 100000000, 0, -809), (Tag1 (0, ((("a1")), 100000000, 0, -808), (Tag1 (0, ((("a1")), 100000000, 0, -808), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -807), 0), 100000000, 0, -806), 0), 100000000, 0, -805), 0), 100000000, 0, -804), 0), 100000000, 0, -803), 0, (("plugins/micromega/micromega.mli", 423, 14762, 14762), ("plugins/micromega/micromega.mli", 423, 14762, 14839), 0), 0, Tag1 ("Micromega_plugin__Micromega", 219)), 0); Tag1 (("polC", 843), ([((("c")), 100000000, 0, -802)], 1, 0, 1, ((Tag3 ((("pol", 751)), [((("c")), 100000000, 0, -802)], (0)), 100000000, 0, -801)), [25], [0], 0, 0, (("plugins/micromega/micromega.mli", 425, 14841, 14841), ("plugins/micromega/micromega.mli", 425, 14841, 14862), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 220)), 1, 0); Tag1 (("op1", 844), (0, 0, Tag1 ([(("Equal", 588), (0), 0, (("plugins/micromega/micromega.mli", 428, 14875, 14875), ("plugins/micromega/micromega.mli", 428, 14875, 14882), 0), 0, Tag1 ("Micromega_plugin__Micromega", 222)); (("NonEqual", 589), (0), 0, (("plugins/micromega/micromega.mli", 429, 14883, 14883), ("plugins/micromega/micromega.mli", 429, 14883, 14893), 0), 0, Tag1 ("Micromega_plugin__Micromega", 223)); (("Strict", 590), (0), 0, (("plugins/micromega/micromega.mli", 430, 14894, 14894), ("plugins/micromega/micromega.mli", 430, 14894, 14902), 0), 0, Tag1 ("Micromega_plugin__Micromega", 224)); (("NonStrict", 591), (0), 0, (("plugins/micromega/micromega.mli", 431, 14903, 14903), ("plugins/micromega/micromega.mli", 431, 14903, 14914), 0), 0, Tag1 ("Micromega_plugin__Micromega", 225))], 0), 1, 0, 0, 0, 0, 0, (("plugins/micromega/micromega.mli", 427, 14864, 14864), ("plugins/micromega/micromega.mli", 431, 14903, 14914), 0), 0, 1, 0, Tag1 ("Micromega_plugin__Micromega", 221)), 1, 0); Tag1 (("nFormula", 845), ([((("c")), 100000000, 0, -799)], 1, 0, 1, ((Tag2 ([(Tag3 ((("polC", 843)), [((("c")), 100000000, 0, -799)], (0)), 100000000, 0, -798); (Tag3 ((("op1", 844)), 0, (0)), 100000000, 0, -800)]), 100000000, 0, -797)), [25], [0], 0, 0, (("plugins/micromega/micromega.mli", 433, 14916, 14916), ("plugins/micromega/micromega.mli", 433, 14916, 14948), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 226)), 1, 0); (("opMult", 846), ((Tag1 (0, (Tag3 ((("op1", 844)), 0, (0)), 100000000, 0, -796), (Tag1 (0, (Tag3 ((("op1", 844)), 0, (0)), 100000000, 0, -795), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("op1", 844)), 0, (0)), 100000000, 0, -794)], (0)), 100000000, 0, -793), 0), 100000000, 0, -792), 0), 100000000, 0, -791), 0, (("plugins/micromega/micromega.mli", 435, 14950, 14950), ("plugins/micromega/micromega.mli", 435, 14950, 14987), 0), 0, Tag1 ("Micromega_plugin__Micromega", 227)), 0); (("opAdd", 847), ((Tag1 (0, (Tag3 ((("op1", 844)), 0, (0)), 100000000, 0, -790), (Tag1 (0, (Tag3 ((("op1", 844)), 0, (0)), 100000000, 0, -789), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("op1", 844)), 0, (0)), 100000000, 0, -788)], (0)), 100000000, 0, -787), 0), 100000000, 0, -786), 0), 100000000, 0, -785), 0, (("plugins/micromega/micromega.mli", 437, 14989, 14989), ("plugins/micromega/micromega.mli", 437, 14989, 15025), 0), 0, Tag1 ("Micromega_plugin__Micromega", 228)), 0); Tag1 (("psatz", 848), ([((("c")), 100000000, 0, -775)], 1, Tag1 ([(("PsatzLet", 596), ([(Tag3 ((("psatz", 848)), [((("c")), 100000000, 0, -775)], (0)), 100000000, 0, -774); (Tag3 ((("psatz", 848)), [((("c")), 100000000, 0, -775)], (0)), 100000000, 0, -776)]), 0, (("plugins/micromega/micromega.mli", 440, 15043, 15043), ("plugins/micromega/micromega.mli", 440, 15043, 15076), 0), 0, Tag1 ("Micromega_plugin__Micromega", 230)); (("PsatzIn", 597), ([(Tag3 ((("nat", 728)), 0, (0)), 100000000, 0, -777)]), 0, (("plugins/micromega/micromega.mli", 441, 15077, 15077), ("plugins/micromega/micromega.mli", 441, 15077, 15093), 0), 0, Tag1 ("Micromega_plugin__Micromega", 231)); (("PsatzSquare", 598), ([(Tag3 ((("polC", 843)), [((("c")), 100000000, 0, -775)], (0)), 100000000, 0, -778)]), 0, (("plugins/micromega/micromega.mli", 442, 15094, 15094), ("plugins/micromega/micromega.mli", 442, 15094, 15118), 0), 0, Tag1 ("Micromega_plugin__Micromega", 232)); (("PsatzMulC", 599), ([(Tag3 ((("polC", 843)), [((("c")), 100000000, 0, -775)], (0)), 100000000, 0, -779); (Tag3 ((("psatz", 848)), [((("c")), 100000000, 0, -775)], (0)), 100000000, 0, -780)]), 0, (("plugins/micromega/micromega.mli", 443, 15119, 15119), ("plugins/micromega/micromega.mli", 443, 15119, 15152), 0), 0, Tag1 ("Micromega_plugin__Micromega", 233)); (("PsatzMulE", 600), ([(Tag3 ((("psatz", 848)), [((("c")), 100000000, 0, -775)], (0)), 100000000, 0, -781); (Tag3 ((("psatz", 848)), [((("c")), 100000000, 0, -775)], (0)), 100000000, 0, -782)]), 0, (("plugins/micromega/micromega.mli", 444, 15153, 15153), ("plugins/micromega/micromega.mli", 444, 15153, 15187), 0), 0, Tag1 ("Micromega_plugin__Micromega", 234)); (("PsatzAdd", 601), ([(Tag3 ((("psatz", 848)), [((("c")), 100000000, 0, -775)], (0)), 100000000, 0, -783); (Tag3 ((("psatz", 848)), [((("c")), 100000000, 0, -775)], (0)), 100000000, 0, -784)]), 0, (("plugins/micromega/micromega.mli", 445, 15188, 15188), ("plugins/micromega/micromega.mli", 445, 15188, 15221), 0), 0, Tag1 ("Micromega_plugin__Micromega", 235)); (("PsatzC", 602), ([((("c")), 100000000, 0, -775)]), 0, (("plugins/micromega/micromega.mli", 446, 15222, 15222), ("plugins/micromega/micromega.mli", 446, 15222, 15236), 0), 0, Tag1 ("Micromega_plugin__Micromega", 236)); (("PsatzZ", 603), (0), 0, (("plugins/micromega/micromega.mli", 447, 15237, 15237), ("plugins/micromega/micromega.mli", 447, 15237, 15245), 0), 0, Tag1 ("Micromega_plugin__Micromega", 237))], 0), 1, 0, [25], [0], 0, 0, (("plugins/micromega/micromega.mli", 439, 15027, 15027), ("plugins/micromega/micromega.mli", 447, 15237, 15245), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 229)), 1, 0); (("map_option", 849), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -771), (Tag3 ((Tag3 ("option", 10)), [((("a2")), 100000000, 0, -769)], (0)), 100000000, 0, -773), 0), 100000000, 0, -772), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a1")), 100000000, 0, -771)], (0)), 100000000, 0, -770), (Tag3 ((Tag3 ("option", 10)), [((("a2")), 100000000, 0, -769)], (0)), 100000000, 0, -768), 0), 100000000, 0, -767), 0), 100000000, 0, -766), 0, (("plugins/micromega/micromega.mli", 449, 15247, 15247), ("plugins/micromega/micromega.mli", 449, 15247, 15311), 0), 0, Tag1 ("Micromega_plugin__Micromega", 238)), 0); (("map_option2", 850), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -762), (Tag1 (0, ((("a2")), 100000000, 0, -760), (Tag3 ((Tag3 ("option", 10)), [((("a3")), 100000000, 0, -758)], (0)), 100000000, 0, -765), 0), 100000000, 0, -764), 0), 100000000, 0, -763), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a1")), 100000000, 0, -762)], (0)), 100000000, 0, -761), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a2")), 100000000, 0, -760)], (0)), 100000000, 0, -759), (Tag3 ((Tag3 ("option", 10)), [((("a3")), 100000000, 0, -758)], (0)), 100000000, 0, -757), 0), 100000000, 0, -756), 0), 100000000, 0, -755), 0), 100000000, 0, -754), 0, (("plugins/micromega/micromega.mli", 451, 15313, 15313), ("plugins/micromega/micromega.mli", 451, 15313, 15399), 0), 0, Tag1 ("Micromega_plugin__Micromega", 239)), 0); (("pexpr_times_nformula", 851), ((Tag1 (0, ((("a1")), 100000000, 0, -744), (Tag1 (0, ((("a1")), 100000000, 0, -744), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -744), (Tag1 (0, ((("a1")), 100000000, 0, -744), ((("a1")), 100000000, 0, -744), 0), 100000000, 0, -753), 0), 100000000, 0, -752), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -744), (Tag1 (0, ((("a1")), 100000000, 0, -744), ((("a1")), 100000000, 0, -744), 0), 100000000, 0, -751), 0), 100000000, 0, -750), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -744), (Tag1 (0, ((("a1")), 100000000, 0, -744), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -749), 0), 100000000, 0, -748), 0), 100000000, 0, -747), (Tag1 (0, (Tag3 ((("polC", 843)), [((("a1")), 100000000, 0, -744)], (0)), 100000000, 0, -746), (Tag1 (0, (Tag3 ((("nFormula", 845)), [((("a1")), 100000000, 0, -744)], (0)), 100000000, 0, -745), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("nFormula", 845)), [((("a1")), 100000000, 0, -744)], (0)), 100000000, 0, -743)], (0)), 100000000, 0, -742), 0), 100000000, 0, -741), 0), 100000000, 0, -740), 0), 100000000, 0, -739), 0), 100000000, 0, -738), 0), 100000000, 0, -737), 0), 100000000, 0, -736), 0), 100000000, 0, -735), 0, (("plugins/micromega/micromega.mli", 453, 15401, 15401), ("plugins/micromega/micromega.mli", 454, 15428, 15561), 0), 0, Tag1 ("Micromega_plugin__Micromega", 240)), 0); (("nformula_times_nformula", 852), ((Tag1 (0, ((("a1")), 100000000, 0, -725), (Tag1 (0, ((("a1")), 100000000, 0, -725), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -725), (Tag1 (0, ((("a1")), 100000000, 0, -725), ((("a1")), 100000000, 0, -725), 0), 100000000, 0, -734), 0), 100000000, 0, -733), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -725), (Tag1 (0, ((("a1")), 100000000, 0, -725), ((("a1")), 100000000, 0, -725), 0), 100000000, 0, -732), 0), 100000000, 0, -731), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -725), (Tag1 (0, ((("a1")), 100000000, 0, -725), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -730), 0), 100000000, 0, -729), 0), 100000000, 0, -728), (Tag1 (0, (Tag3 ((("nFormula", 845)), [((("a1")), 100000000, 0, -725)], (0)), 100000000, 0, -727), (Tag1 (0, (Tag3 ((("nFormula", 845)), [((("a1")), 100000000, 0, -725)], (0)), 100000000, 0, -726), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("nFormula", 845)), [((("a1")), 100000000, 0, -725)], (0)), 100000000, 0, -724)], (0)), 100000000, 0, -723), 0), 100000000, 0, -722), 0), 100000000, 0, -721), 0), 100000000, 0, -720), 0), 100000000, 0, -719), 0), 100000000, 0, -718), 0), 100000000, 0, -717), 0), 100000000, 0, -716), 0, (("plugins/micromega/micromega.mli", 456, 15563, 15563), ("plugins/micromega/micromega.mli", 457, 15593, 15730), 0), 0, Tag1 ("Micromega_plugin__Micromega", 241)), 0); (("nformula_plus_nformula", 853), ((Tag1 (0, ((("a1")), 100000000, 0, -708), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -708), (Tag1 (0, ((("a1")), 100000000, 0, -708), ((("a1")), 100000000, 0, -708), 0), 100000000, 0, -715), 0), 100000000, 0, -714), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -708), (Tag1 (0, ((("a1")), 100000000, 0, -708), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -713), 0), 100000000, 0, -712), 0), 100000000, 0, -711), (Tag1 (0, (Tag3 ((("nFormula", 845)), [((("a1")), 100000000, 0, -708)], (0)), 100000000, 0, -710), (Tag1 (0, (Tag3 ((("nFormula", 845)), [((("a1")), 100000000, 0, -708)], (0)), 100000000, 0, -709), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("nFormula", 845)), [((("a1")), 100000000, 0, -708)], (0)), 100000000, 0, -707)], (0)), 100000000, 0, -706), 0), 100000000, 0, -705), 0), 100000000, 0, -704), 0), 100000000, 0, -703), 0), 100000000, 0, -702), 0), 100000000, 0, -701), 0, (("plugins/micromega/micromega.mli", 459, 15732, 15732), ("plugins/micromega/micromega.mli", 459, 15732, 15866), 0), 0, Tag1 ("Micromega_plugin__Micromega", 242)), 0); (("eval_Psatz", 854), ((Tag1 (0, ((("a1")), 100000000, 0, -687), (Tag1 (0, ((("a1")), 100000000, 0, -687), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -687), (Tag1 (0, ((("a1")), 100000000, 0, -687), ((("a1")), 100000000, 0, -687), 0), 100000000, 0, -700), 0), 100000000, 0, -699), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -687), (Tag1 (0, ((("a1")), 100000000, 0, -687), ((("a1")), 100000000, 0, -687), 0), 100000000, 0, -698), 0), 100000000, 0, -697), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -687), (Tag1 (0, ((("a1")), 100000000, 0, -687), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -696), 0), 100000000, 0, -695), 0), 100000000, 0, -694), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -687), (Tag1 (0, ((("a1")), 100000000, 0, -687), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -693), 0), 100000000, 0, -692), 0), 100000000, 0, -691), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("nFormula", 845)), [((("a1")), 100000000, 0, -687)], (0)), 100000000, 0, -690)], (0)), 100000000, 0, -689), (Tag1 (0, (Tag3 ((("psatz", 848)), [((("a1")), 100000000, 0, -687)], (0)), 100000000, 0, -688), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("nFormula", 845)), [((("a1")), 100000000, 0, -687)], (0)), 100000000, 0, -686)], (0)), 100000000, 0, -685), 0), 100000000, 0, -684), 0), 100000000, 0, -683), 0), 100000000, 0, -682), 0), 100000000, 0, -681), 0), 100000000, 0, -680), 0), 100000000, 0, -679), 0), 100000000, 0, -678), 0), 100000000, 0, -677), 0, (("plugins/micromega/micromega.mli", 461, 15868, 15868), ("plugins/micromega/micromega.mli", 463, 16033, 16050), 0), 0, Tag1 ("Micromega_plugin__Micromega", 243)), 0); (("check_inconsistent", 855), ((Tag1 (0, ((("a1")), 100000000, 0, -670), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -670), (Tag1 (0, ((("a1")), 100000000, 0, -670), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -676), 0), 100000000, 0, -675), 0), 100000000, 0, -674), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -670), (Tag1 (0, ((("a1")), 100000000, 0, -670), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -673), 0), 100000000, 0, -672), 0), 100000000, 0, -671), (Tag1 (0, (Tag3 ((("nFormula", 845)), [((("a1")), 100000000, 0, -670)], (0)), 100000000, 0, -669), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -668), 0), 100000000, 0, -667), 0), 100000000, 0, -666), 0), 100000000, 0, -665), 0), 100000000, 0, -664), 0, (("plugins/micromega/micromega.mli", 465, 16052, 16052), ("plugins/micromega/micromega.mli", 465, 16052, 16152), 0), 0, Tag1 ("Micromega_plugin__Micromega", 244)), 0); (("check_normalised_formulas", 856), ((Tag1 (0, ((("a1")), 100000000, 0, -651), (Tag1 (0, ((("a1")), 100000000, 0, -651), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -651), (Tag1 (0, ((("a1")), 100000000, 0, -651), ((("a1")), 100000000, 0, -651), 0), 100000000, 0, -663), 0), 100000000, 0, -662), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -651), (Tag1 (0, ((("a1")), 100000000, 0, -651), ((("a1")), 100000000, 0, -651), 0), 100000000, 0, -661), 0), 100000000, 0, -660), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -651), (Tag1 (0, ((("a1")), 100000000, 0, -651), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -659), 0), 100000000, 0, -658), 0), 100000000, 0, -657), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -651), (Tag1 (0, ((("a1")), 100000000, 0, -651), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -656), 0), 100000000, 0, -655), 0), 100000000, 0, -654), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("nFormula", 845)), [((("a1")), 100000000, 0, -651)], (0)), 100000000, 0, -653)], (0)), 100000000, 0, -652), (Tag1 (0, (Tag3 ((("psatz", 848)), [((("a1")), 100000000, 0, -651)], (0)), 100000000, 0, -650), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -649), 0), 100000000, 0, -648), 0), 100000000, 0, -647), 0), 100000000, 0, -646), 0), 100000000, 0, -645), 0), 100000000, 0, -644), 0), 100000000, 0, -643), 0), 100000000, 0, -642), 0), 100000000, 0, -641), 0, (("plugins/micromega/micromega.mli", 467, 16154, 16154), ("plugins/micromega/micromega.mli", 468, 16186, 16334), 0), 0, Tag1 ("Micromega_plugin__Micromega", 245)), 0); Tag1 (("op2", 857), (0, 0, Tag1 ([(("OpEq", 613), (0), 0, (("plugins/micromega/micromega.mli", 471, 16347, 16347), ("plugins/micromega/micromega.mli", 471, 16347, 16353), 0), 0, Tag1 ("Micromega_plugin__Micromega", 247)); (("OpNEq", 614), (0), 0, (("plugins/micromega/micromega.mli", 472, 16354, 16354), ("plugins/micromega/micromega.mli", 472, 16354, 16361), 0), 0, Tag1 ("Micromega_plugin__Micromega", 248)); (("OpLe", 615), (0), 0, (("plugins/micromega/micromega.mli", 473, 16362, 16362), ("plugins/micromega/micromega.mli", 473, 16362, 16368), 0), 0, Tag1 ("Micromega_plugin__Micromega", 249)); (("OpGe", 616), (0), 0, (("plugins/micromega/micromega.mli", 474, 16369, 16369), ("plugins/micromega/micromega.mli", 474, 16369, 16375), 0), 0, Tag1 ("Micromega_plugin__Micromega", 250)); (("OpLt", 617), (0), 0, (("plugins/micromega/micromega.mli", 475, 16376, 16376), ("plugins/micromega/micromega.mli", 475, 16376, 16382), 0), 0, Tag1 ("Micromega_plugin__Micromega", 251)); (("OpGt", 618), (0), 0, (("plugins/micromega/micromega.mli", 476, 16383, 16383), ("plugins/micromega/micromega.mli", 476, 16383, 16389), 0), 0, Tag1 ("Micromega_plugin__Micromega", 252))], 0), 1, 0, 0, 0, 0, 0, (("plugins/micromega/micromega.mli", 470, 16336, 16336), ("plugins/micromega/micromega.mli", 476, 16383, 16389), 0), 0, 1, 0, Tag1 ("Micromega_plugin__Micromega", 246)), 1, 0); Tag1 (("formula", 858), ([((("t")), 100000000, 0, -638)], 1, [[(("flhs", 620), 0, (Tag3 ((("pExpr", 750)), [((("t")), 100000000, 0, -638)], (0)), 100000000, 0, -637), (("plugins/micromega/micromega.mli", 478, 16391, 16411), ("plugins/micromega/micromega.mli", 478, 16391, 16427), 0), 0, Tag1 ("Micromega_plugin__Micromega", 254)); (("fop", 621), 0, (Tag3 ((("op2", 857)), 0, (0)), 100000000, 0, -639), (("plugins/micromega/micromega.mli", 478, 16391, 16428), ("plugins/micromega/micromega.mli", 478, 16391, 16438), 0), 0, Tag1 ("Micromega_plugin__Micromega", 255)); (("frhs", 622), 0, (Tag3 ((("pExpr", 750)), [((("t")), 100000000, 0, -638)], (0)), 100000000, 0, -640), (("plugins/micromega/micromega.mli", 478, 16391, 16439), ("plugins/micromega/micromega.mli", 478, 16391, 16454), 0), 0, Tag1 ("Micromega_plugin__Micromega", 256))]], 1, 0, [25], [0], 0, 0, (("plugins/micromega/micromega.mli", 478, 16391, 16391), ("plugins/micromega/micromega.mli", 478, 16391, 16456), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 253)), 1, 0); (("norm", 859), ((Tag1 (0, ((("a1")), 100000000, 0, -625), (Tag1 (0, ((("a1")), 100000000, 0, -625), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -625), (Tag1 (0, ((("a1")), 100000000, 0, -625), ((("a1")), 100000000, 0, -625), 0), 100000000, 0, -636), 0), 100000000, 0, -635), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -625), (Tag1 (0, ((("a1")), 100000000, 0, -625), ((("a1")), 100000000, 0, -625), 0), 100000000, 0, -634), 0), 100000000, 0, -633), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -625), (Tag1 (0, ((("a1")), 100000000, 0, -625), ((("a1")), 100000000, 0, -625), 0), 100000000, 0, -632), 0), 100000000, 0, -631), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -625), ((("a1")), 100000000, 0, -625), 0), 100000000, 0, -630), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -625), (Tag1 (0, ((("a1")), 100000000, 0, -625), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -629), 0), 100000000, 0, -628), 0), 100000000, 0, -627), (Tag1 (0, (Tag3 ((("pExpr", 750)), [((("a1")), 100000000, 0, -625)], (0)), 100000000, 0, -626), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -625)], (0)), 100000000, 0, -624), 0), 100000000, 0, -623), 0), 100000000, 0, -622), 0), 100000000, 0, -621), 0), 100000000, 0, -620), 0), 100000000, 0, -619), 0), 100000000, 0, -618), 0), 100000000, 0, -617), 0), 100000000, 0, -616), 0, (("plugins/micromega/micromega.mli", 480, 16458, 16458), ("plugins/micromega/micromega.mli", 480, 16458, 16612), 0), 0, Tag1 ("Micromega_plugin__Micromega", 257)), 0); (("psub0", 860), ((Tag1 (0, ((("a1")), 100000000, 0, -605), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -605), (Tag1 (0, ((("a1")), 100000000, 0, -605), ((("a1")), 100000000, 0, -605), 0), 100000000, 0, -615), 0), 100000000, 0, -614), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -605), (Tag1 (0, ((("a1")), 100000000, 0, -605), ((("a1")), 100000000, 0, -605), 0), 100000000, 0, -613), 0), 100000000, 0, -612), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -605), ((("a1")), 100000000, 0, -605), 0), 100000000, 0, -611), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -605), (Tag1 (0, ((("a1")), 100000000, 0, -605), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -610), 0), 100000000, 0, -609), 0), 100000000, 0, -608), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -605)], (0)), 100000000, 0, -607), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -605)], (0)), 100000000, 0, -606), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -605)], (0)), 100000000, 0, -604), 0), 100000000, 0, -603), 0), 100000000, 0, -602), 0), 100000000, 0, -601), 0), 100000000, 0, -600), 0), 100000000, 0, -599), 0), 100000000, 0, -598), 0), 100000000, 0, -597), 0, (("plugins/micromega/micromega.mli", 482, 16614, 16614), ("plugins/micromega/micromega.mli", 482, 16614, 16748), 0), 0, Tag1 ("Micromega_plugin__Micromega", 258)), 0); (("padd0", 861), ((Tag1 (0, ((("a1")), 100000000, 0, -589), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -589), (Tag1 (0, ((("a1")), 100000000, 0, -589), ((("a1")), 100000000, 0, -589), 0), 100000000, 0, -596), 0), 100000000, 0, -595), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -589), (Tag1 (0, ((("a1")), 100000000, 0, -589), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -594), 0), 100000000, 0, -593), 0), 100000000, 0, -592), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -589)], (0)), 100000000, 0, -591), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -589)], (0)), 100000000, 0, -590), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -589)], (0)), 100000000, 0, -588), 0), 100000000, 0, -587), 0), 100000000, 0, -586), 0), 100000000, 0, -585), 0), 100000000, 0, -584), 0), 100000000, 0, -583), 0, (("plugins/micromega/micromega.mli", 484, 16750, 16750), ("plugins/micromega/micromega.mli", 484, 16750, 16845), 0), 0, Tag1 ("Micromega_plugin__Micromega", 259)), 0); (("popp0", 862), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -580), ((("a1")), 100000000, 0, -580), 0), 100000000, 0, -582), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -580)], (0)), 100000000, 0, -581), (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -580)], (0)), 100000000, 0, -579), 0), 100000000, 0, -578), 0), 100000000, 0, -577), 0, (("plugins/micromega/micromega.mli", 486, 16847, 16847), ("plugins/micromega/micromega.mli", 486, 16847, 16893), 0), 0, Tag1 ("Micromega_plugin__Micromega", 260)), 0); (("normalise", 863), ((Tag1 (0, ((("a1")), 100000000, 0, -565), (Tag1 (0, ((("a1")), 100000000, 0, -565), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -565), (Tag1 (0, ((("a1")), 100000000, 0, -565), ((("a1")), 100000000, 0, -565), 0), 100000000, 0, -576), 0), 100000000, 0, -575), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -565), (Tag1 (0, ((("a1")), 100000000, 0, -565), ((("a1")), 100000000, 0, -565), 0), 100000000, 0, -574), 0), 100000000, 0, -573), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -565), (Tag1 (0, ((("a1")), 100000000, 0, -565), ((("a1")), 100000000, 0, -565), 0), 100000000, 0, -572), 0), 100000000, 0, -571), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -565), ((("a1")), 100000000, 0, -565), 0), 100000000, 0, -570), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -565), (Tag1 (0, ((("a1")), 100000000, 0, -565), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -569), 0), 100000000, 0, -568), 0), 100000000, 0, -567), (Tag1 (0, (Tag3 ((("formula", 858)), [((("a1")), 100000000, 0, -565)], (0)), 100000000, 0, -566), (Tag3 ((("nFormula", 845)), [((("a1")), 100000000, 0, -565)], (0)), 100000000, 0, -564), 0), 100000000, 0, -563), 0), 100000000, 0, -562), 0), 100000000, 0, -561), 0), 100000000, 0, -560), 0), 100000000, 0, -559), 0), 100000000, 0, -558), 0), 100000000, 0, -557), 0), 100000000, 0, -556), 0, (("plugins/micromega/micromega.mli", 488, 16895, 16895), ("plugins/micromega/micromega.mli", 489, 16911, 17063), 0), 0, Tag1 ("Micromega_plugin__Micromega", 261)), 0); (("xnormalise", 864), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -553), ((("a1")), 100000000, 0, -553), 0), 100000000, 0, -555), (Tag1 (0, (Tag3 ((("nFormula", 845)), [((("a1")), 100000000, 0, -553)], (0)), 100000000, 0, -554), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("nFormula", 845)), [((("a1")), 100000000, 0, -553)], (0)), 100000000, 0, -552)], (0)), 100000000, 0, -551), 0), 100000000, 0, -550), 0), 100000000, 0, -549), 0, (("plugins/micromega/micromega.mli", 491, 17065, 17065), ("plugins/micromega/micromega.mli", 491, 17065, 17131), 0), 0, Tag1 ("Micromega_plugin__Micromega", 262)), 0); (("xnegate", 865), ((Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -546), ((("a1")), 100000000, 0, -546), 0), 100000000, 0, -548), (Tag1 (0, (Tag3 ((("nFormula", 845)), [((("a1")), 100000000, 0, -546)], (0)), 100000000, 0, -547), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("nFormula", 845)), [((("a1")), 100000000, 0, -546)], (0)), 100000000, 0, -545)], (0)), 100000000, 0, -544), 0), 100000000, 0, -543), 0), 100000000, 0, -542), 0, (("plugins/micromega/micromega.mli", 493, 17133, 17133), ("plugins/micromega/micromega.mli", 493, 17133, 17196), 0), 0, Tag1 ("Micromega_plugin__Micromega", 263)), 0); (("cnf_of_list", 866), ((Tag1 (0, ((("a1")), 100000000, 0, -532), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -532), (Tag1 (0, ((("a1")), 100000000, 0, -532), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -541), 0), 100000000, 0, -540), 0), 100000000, 0, -539), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -532), (Tag1 (0, ((("a1")), 100000000, 0, -532), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -538), 0), 100000000, 0, -537), 0), 100000000, 0, -536), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("nFormula", 845)), [((("a1")), 100000000, 0, -532)], (0)), 100000000, 0, -535)], (0)), 100000000, 0, -534), (Tag1 (0, ((("a2")), 100000000, 0, -533), (Tag3 ((("cnf", 791)), [(Tag3 ((("nFormula", 845)), [((("a1")), 100000000, 0, -532)], (0)), 100000000, 0, -531); ((("a2")), 100000000, 0, -533)], (0)), 100000000, 0, -530), 0), 100000000, 0, -529), 0), 100000000, 0, -528), 0), 100000000, 0, -527), 0), 100000000, 0, -526), 0), 100000000, 0, -525), 0, (("plugins/micromega/micromega.mli", 495, 17198, 17198), ("plugins/micromega/micromega.mli", 495, 17198, 17322), 0), 0, Tag1 ("Micromega_plugin__Micromega", 264)), 0); (("cnf_normalise", 867), ((Tag1 (0, ((("a1")), 100000000, 0, -509), (Tag1 (0, ((("a1")), 100000000, 0, -509), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -509), (Tag1 (0, ((("a1")), 100000000, 0, -509), ((("a1")), 100000000, 0, -509), 0), 100000000, 0, -524), 0), 100000000, 0, -523), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -509), (Tag1 (0, ((("a1")), 100000000, 0, -509), ((("a1")), 100000000, 0, -509), 0), 100000000, 0, -522), 0), 100000000, 0, -521), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -509), (Tag1 (0, ((("a1")), 100000000, 0, -509), ((("a1")), 100000000, 0, -509), 0), 100000000, 0, -520), 0), 100000000, 0, -519), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -509), ((("a1")), 100000000, 0, -509), 0), 100000000, 0, -518), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -509), (Tag1 (0, ((("a1")), 100000000, 0, -509), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -517), 0), 100000000, 0, -516), 0), 100000000, 0, -515), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -509), (Tag1 (0, ((("a1")), 100000000, 0, -509), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -514), 0), 100000000, 0, -513), 0), 100000000, 0, -512), (Tag1 (0, (Tag3 ((("formula", 858)), [((("a1")), 100000000, 0, -509)], (0)), 100000000, 0, -511), (Tag1 (0, ((("a2")), 100000000, 0, -510), (Tag3 ((("cnf", 791)), [(Tag3 ((("nFormula", 845)), [((("a1")), 100000000, 0, -509)], (0)), 100000000, 0, -508); ((("a2")), 100000000, 0, -510)], (0)), 100000000, 0, -507), 0), 100000000, 0, -506), 0), 100000000, 0, -505), 0), 100000000, 0, -504), 0), 100000000, 0, -503), 0), 100000000, 0, -502), 0), 100000000, 0, -501), 0), 100000000, 0, -500), 0), 100000000, 0, -499), 0), 100000000, 0, -498), 0), 100000000, 0, -497), 0, (("plugins/micromega/micromega.mli", 497, 17324, 17324), ("plugins/micromega/micromega.mli", 499, 17497, 17540), 0), 0, Tag1 ("Micromega_plugin__Micromega", 265)), 0); (("cnf_negate", 868), ((Tag1 (0, ((("a1")), 100000000, 0, -481), (Tag1 (0, ((("a1")), 100000000, 0, -481), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -481), (Tag1 (0, ((("a1")), 100000000, 0, -481), ((("a1")), 100000000, 0, -481), 0), 100000000, 0, -496), 0), 100000000, 0, -495), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -481), (Tag1 (0, ((("a1")), 100000000, 0, -481), ((("a1")), 100000000, 0, -481), 0), 100000000, 0, -494), 0), 100000000, 0, -493), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -481), (Tag1 (0, ((("a1")), 100000000, 0, -481), ((("a1")), 100000000, 0, -481), 0), 100000000, 0, -492), 0), 100000000, 0, -491), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -481), ((("a1")), 100000000, 0, -481), 0), 100000000, 0, -490), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -481), (Tag1 (0, ((("a1")), 100000000, 0, -481), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -489), 0), 100000000, 0, -488), 0), 100000000, 0, -487), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -481), (Tag1 (0, ((("a1")), 100000000, 0, -481), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -486), 0), 100000000, 0, -485), 0), 100000000, 0, -484), (Tag1 (0, (Tag3 ((("formula", 858)), [((("a1")), 100000000, 0, -481)], (0)), 100000000, 0, -483), (Tag1 (0, ((("a2")), 100000000, 0, -482), (Tag3 ((("cnf", 791)), [(Tag3 ((("nFormula", 845)), [((("a1")), 100000000, 0, -481)], (0)), 100000000, 0, -480); ((("a2")), 100000000, 0, -482)], (0)), 100000000, 0, -479), 0), 100000000, 0, -478), 0), 100000000, 0, -477), 0), 100000000, 0, -476), 0), 100000000, 0, -475), 0), 100000000, 0, -474), 0), 100000000, 0, -473), 0), 100000000, 0, -472), 0), 100000000, 0, -471), 0), 100000000, 0, -470), 0), 100000000, 0, -469), 0, (("plugins/micromega/micromega.mli", 501, 17542, 17542), ("plugins/micromega/micromega.mli", 503, 17712, 17755), 0), 0, Tag1 ("Micromega_plugin__Micromega", 266)), 0); (("xdenorm", 869), ((Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -468), (Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -466)], (0)), 100000000, 0, -467), (Tag3 ((("pExpr", 750)), [((("a1")), 100000000, 0, -466)], (0)), 100000000, 0, -465), 0), 100000000, 0, -464), 0), 100000000, 0, -463), 0, (("plugins/micromega/micromega.mli", 505, 17757, 17757), ("plugins/micromega/micromega.mli", 505, 17757, 17803), 0), 0, Tag1 ("Micromega_plugin__Micromega", 267)), 0); (("denorm", 870), ((Tag1 (0, (Tag3 ((("pol", 751)), [((("a1")), 100000000, 0, -461)], (0)), 100000000, 0, -462), (Tag3 ((("pExpr", 750)), [((("a1")), 100000000, 0, -461)], (0)), 100000000, 0, -460), 0), 100000000, 0, -459), 0, (("plugins/micromega/micromega.mli", 507, 17805, 17805), ("plugins/micromega/micromega.mli", 507, 17805, 17838), 0), 0, Tag1 ("Micromega_plugin__Micromega", 268)), 0); (("map_PExpr", 871), ((Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -457), ((("a1")), 100000000, 0, -455), 0), 100000000, 0, -458), (Tag1 (0, (Tag3 ((("pExpr", 750)), [((("a2")), 100000000, 0, -457)], (0)), 100000000, 0, -456), (Tag3 ((("pExpr", 750)), [((("a1")), 100000000, 0, -455)], (0)), 100000000, 0, -454), 0), 100000000, 0, -453), 0), 100000000, 0, -452), 0, (("plugins/micromega/micromega.mli", 509, 17840, 17840), ("plugins/micromega/micromega.mli", 509, 17840, 17894), 0), 0, Tag1 ("Micromega_plugin__Micromega", 269)), 0); (("map_Formula", 872), ((Tag1 (0, (Tag1 (0, ((("a2")), 100000000, 0, -450), ((("a1")), 100000000, 0, -448), 0), 100000000, 0, -451), (Tag1 (0, (Tag3 ((("formula", 858)), [((("a2")), 100000000, 0, -450)], (0)), 100000000, 0, -449), (Tag3 ((("formula", 858)), [((("a1")), 100000000, 0, -448)], (0)), 100000000, 0, -447), 0), 100000000, 0, -446), 0), 100000000, 0, -445), 0, (("plugins/micromega/micromega.mli", 511, 17896, 17896), ("plugins/micromega/micromega.mli", 511, 17896, 17956), 0), 0, Tag1 ("Micromega_plugin__Micromega", 270)), 0); (("simpl_cone", 873), ((Tag1 (0, ((("a1")), 100000000, 0, -438), (Tag1 (0, ((("a1")), 100000000, 0, -438), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -438), (Tag1 (0, ((("a1")), 100000000, 0, -438), ((("a1")), 100000000, 0, -438), 0), 100000000, 0, -444), 0), 100000000, 0, -443), (Tag1 (0, (Tag1 (0, ((("a1")), 100000000, 0, -438), (Tag1 (0, ((("a1")), 100000000, 0, -438), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -442), 0), 100000000, 0, -441), 0), 100000000, 0, -440), (Tag1 (0, (Tag3 ((("psatz", 848)), [((("a1")), 100000000, 0, -438)], (0)), 100000000, 0, -439), (Tag3 ((("psatz", 848)), [((("a1")), 100000000, 0, -438)], (0)), 100000000, 0, -437), 0), 100000000, 0, -436), 0), 100000000, 0, -435), 0), 100000000, 0, -434), 0), 100000000, 0, -433), 0), 100000000, 0, -432), 0, (("plugins/micromega/micromega.mli", 513, 17958, 17958), ("plugins/micromega/micromega.mli", 513, 17958, 18058), 0), 0, Tag1 ("Micromega_plugin__Micromega", 271)), 0); Tag1 (("q", 874), (0, 0, [[(("qnum", 639), 0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -430), (("plugins/micromega/micromega.mli", 515, 18060, 18071), ("plugins/micromega/micromega.mli", 515, 18060, 18080), 0), 0, Tag1 ("Micromega_plugin__Micromega", 273)); (("qden", 640), 0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -431), (("plugins/micromega/micromega.mli", 515, 18060, 18081), ("plugins/micromega/micromega.mli", 515, 18060, 18096), 0), 0, Tag1 ("Micromega_plugin__Micromega", 274))]], 1, 0, 0, 0, 0, 0, (("plugins/micromega/micromega.mli", 515, 18060, 18060), ("plugins/micromega/micromega.mli", 515, 18060, 18098), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 272)), 1, 0); (("qeq_bool", 875), ((Tag1 (0, (Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -429), (Tag1 (0, (Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -428), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -427), 0), 100000000, 0, -426), 0), 100000000, 0, -425), 0, (("plugins/micromega/micromega.mli", 517, 18100, 18100), ("plugins/micromega/micromega.mli", 517, 18100, 18129), 0), 0, Tag1 ("Micromega_plugin__Micromega", 275)), 0); (("qle_bool", 876), ((Tag1 (0, (Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -424), (Tag1 (0, (Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -423), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -422), 0), 100000000, 0, -421), 0), 100000000, 0, -420), 0, (("plugins/micromega/micromega.mli", 519, 18131, 18131), ("plugins/micromega/micromega.mli", 519, 18131, 18160), 0), 0, Tag1 ("Micromega_plugin__Micromega", 276)), 0); (("qplus", 877), ((Tag1 (0, (Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -419), (Tag1 (0, (Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -418), (Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -417), 0), 100000000, 0, -416), 0), 100000000, 0, -415), 0, (("plugins/micromega/micromega.mli", 521, 18162, 18162), ("plugins/micromega/micromega.mli", 521, 18162, 18185), 0), 0, Tag1 ("Micromega_plugin__Micromega", 277)), 0); (("qmult", 878), ((Tag1 (0, (Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -414), (Tag1 (0, (Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -413), (Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -412), 0), 100000000, 0, -411), 0), 100000000, 0, -410), 0, (("plugins/micromega/micromega.mli", 523, 18187, 18187), ("plugins/micromega/micromega.mli", 523, 18187, 18210), 0), 0, Tag1 ("Micromega_plugin__Micromega", 278)), 0); (("qopp", 879), ((Tag1 (0, (Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -409), (Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -408), 0), 100000000, 0, -407), 0, (("plugins/micromega/micromega.mli", 525, 18212, 18212), ("plugins/micromega/micromega.mli", 525, 18212, 18229), 0), 0, Tag1 ("Micromega_plugin__Micromega", 279)), 0); (("qminus", 880), ((Tag1 (0, (Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -406), (Tag1 (0, (Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -405), (Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -404), 0), 100000000, 0, -403), 0), 100000000, 0, -402), 0, (("plugins/micromega/micromega.mli", 527, 18231, 18231), ("plugins/micromega/micromega.mli", 527, 18231, 18255), 0), 0, Tag1 ("Micromega_plugin__Micromega", 280)), 0); (("qinv", 881), ((Tag1 (0, (Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -401), (Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -400), 0), 100000000, 0, -399), 0, (("plugins/micromega/micromega.mli", 529, 18257, 18257), ("plugins/micromega/micromega.mli", 529, 18257, 18274), 0), 0, Tag1 ("Micromega_plugin__Micromega", 281)), 0); (("qpower_positive", 882), ((Tag1 (0, (Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -398), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -397), (Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -396), 0), 100000000, 0, -395), 0), 100000000, 0, -394), 0, (("plugins/micromega/micromega.mli", 531, 18276, 18276), ("plugins/micromega/micromega.mli", 531, 18276, 18316), 0), 0, Tag1 ("Micromega_plugin__Micromega", 282)), 0); (("qpower", 883), ((Tag1 (0, (Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -393), (Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -392), (Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -391), 0), 100000000, 0, -390), 0), 100000000, 0, -389), 0, (("plugins/micromega/micromega.mli", 533, 18318, 18318), ("plugins/micromega/micromega.mli", 533, 18318, 18342), 0), 0, Tag1 ("Micromega_plugin__Micromega", 283)), 0); Tag1 (("t", 884), ([((("a")), 100000000, 0, -386)], 1, Tag1 ([(("Empty", 651), (0), 0, (("plugins/micromega/micromega.mli", 536, 18356, 18356), ("plugins/micromega/micromega.mli", 536, 18356, 18363), 0), 0, Tag1 ("Micromega_plugin__Micromega", 285)); (("Elt", 652), ([((("a")), 100000000, 0, -386)]), 0, (("plugins/micromega/micromega.mli", 537, 18364, 18364), ("plugins/micromega/micromega.mli", 537, 18364, 18375), 0), 0, Tag1 ("Micromega_plugin__Micromega", 286)); (("Branch", 653), ([(Tag3 ((("t", 884)), [((("a")), 100000000, 0, -386)], (0)), 100000000, 0, -387); ((("a")), 100000000, 0, -386); (Tag3 ((("t", 884)), [((("a")), 100000000, 0, -386)], (0)), 100000000, 0, -388)]), 0, (("plugins/micromega/micromega.mli", 538, 18376, 18376), ("plugins/micromega/micromega.mli", 538, 18376, 18404), 0), 0, Tag1 ("Micromega_plugin__Micromega", 287))], 0), 1, 0, [25], [0], 0, 0, (("plugins/micromega/micromega.mli", 535, 18344, 18344), ("plugins/micromega/micromega.mli", 538, 18376, 18404), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 284)), 1, 0); (("find", 885), ((Tag1 (0, ((("a1")), 100000000, 0, -383), (Tag1 (0, (Tag3 ((("t", 884)), [((("a1")), 100000000, 0, -383)], (0)), 100000000, 0, -385), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -384), ((("a1")), 100000000, 0, -383), 0), 100000000, 0, -382), 0), 100000000, 0, -381), 0), 100000000, 0, -380), 0, (("plugins/micromega/micromega.mli", 540, 18406, 18406), ("plugins/micromega/micromega.mli", 540, 18406, 18448), 0), 0, Tag1 ("Micromega_plugin__Micromega", 288)), 0); (("singleton", 886), ((Tag1 (0, ((("a1")), 100000000, 0, -378), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -379), (Tag1 (0, ((("a1")), 100000000, 0, -378), (Tag3 ((("t", 884)), [((("a1")), 100000000, 0, -378)], (0)), 100000000, 0, -377), 0), 100000000, 0, -376), 0), 100000000, 0, -375), 0), 100000000, 0, -374), 0, (("plugins/micromega/micromega.mli", 542, 18450, 18450), ("plugins/micromega/micromega.mli", 542, 18450, 18497), 0), 0, Tag1 ("Micromega_plugin__Micromega", 289)), 0); (("vm_add", 887), ((Tag1 (0, ((("a1")), 100000000, 0, -371), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -373), (Tag1 (0, ((("a1")), 100000000, 0, -371), (Tag1 (0, (Tag3 ((("t", 884)), [((("a1")), 100000000, 0, -371)], (0)), 100000000, 0, -372), (Tag3 ((("t", 884)), [((("a1")), 100000000, 0, -371)], (0)), 100000000, 0, -370), 0), 100000000, 0, -369), 0), 100000000, 0, -368), 0), 100000000, 0, -367), 0), 100000000, 0, -366), 0, (("plugins/micromega/micromega.mli", 544, 18499, 18499), ("plugins/micromega/micromega.mli", 544, 18499, 18552), 0), 0, Tag1 ("Micromega_plugin__Micromega", 290)), 0); (("zeval_const", 888), ((Tag1 (0, (Tag3 ((("pExpr", 750)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -365)], (0)), 100000000, 0, -364), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -363)], (0)), 100000000, 0, -362), 0), 100000000, 0, -361), 0, (("plugins/micromega/micromega.mli", 546, 18554, 18554), ("plugins/micromega/micromega.mli", 546, 18554, 18591), 0), 0, Tag1 ("Micromega_plugin__Micromega", 291)), 0); Tag1 (("zWitness", 889), (0, 0, 0, 1, ((Tag3 ((("psatz", 848)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -360)], (0)), 100000000, 0, -359)), 0, 0, 0, 0, (("plugins/micromega/micromega.mli", 548, 18593, 18593), ("plugins/micromega/micromega.mli", 548, 18593, 18616), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 292)), 1, 0); (("zWeakChecker", 890), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("nFormula", 845)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -358)], (0)), 100000000, 0, -357)], (0)), 100000000, 0, -356), (Tag1 (0, (Tag3 ((("psatz", 848)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -355)], (0)), 100000000, 0, -354), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -353), 0), 100000000, 0, -352), 0), 100000000, 0, -351), 0, (("plugins/micromega/micromega.mli", 550, 18618, 18618), ("plugins/micromega/micromega.mli", 550, 18618, 18671), 0), 0, Tag1 ("Micromega_plugin__Micromega", 293)), 0); (("psub1", 891), ((Tag1 (0, (Tag3 ((("pol", 751)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -350)], (0)), 100000000, 0, -349), (Tag1 (0, (Tag3 ((("pol", 751)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -348)], (0)), 100000000, 0, -347), (Tag3 ((("pol", 751)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -346)], (0)), 100000000, 0, -345), 0), 100000000, 0, -344), 0), 100000000, 0, -343), 0, (("plugins/micromega/micromega.mli", 552, 18673, 18673), ("plugins/micromega/micromega.mli", 552, 18673, 18708), 0), 0, Tag1 ("Micromega_plugin__Micromega", 294)), 0); (("popp1", 892), ((Tag1 (0, (Tag3 ((("pol", 751)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -342)], (0)), 100000000, 0, -341), (Tag3 ((("pol", 751)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -340)], (0)), 100000000, 0, -339), 0), 100000000, 0, -338), 0, (("plugins/micromega/micromega.mli", 554, 18710, 18710), ("plugins/micromega/micromega.mli", 554, 18710, 18736), 0), 0, Tag1 ("Micromega_plugin__Micromega", 295)), 0); (("padd1", 893), ((Tag1 (0, (Tag3 ((("pol", 751)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -337)], (0)), 100000000, 0, -336), (Tag1 (0, (Tag3 ((("pol", 751)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -335)], (0)), 100000000, 0, -334), (Tag3 ((("pol", 751)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -333)], (0)), 100000000, 0, -332), 0), 100000000, 0, -331), 0), 100000000, 0, -330), 0, (("plugins/micromega/micromega.mli", 556, 18738, 18738), ("plugins/micromega/micromega.mli", 556, 18738, 18773), 0), 0, Tag1 ("Micromega_plugin__Micromega", 296)), 0); (("normZ", 894), ((Tag1 (0, (Tag3 ((("pExpr", 750)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -329)], (0)), 100000000, 0, -328), (Tag3 ((("pol", 751)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -327)], (0)), 100000000, 0, -326), 0), 100000000, 0, -325), 0, (("plugins/micromega/micromega.mli", 558, 18775, 18775), ("plugins/micromega/micromega.mli", 558, 18775, 18803), 0), 0, Tag1 ("Micromega_plugin__Micromega", 297)), 0); (("zunsat", 895), ((Tag1 (0, (Tag3 ((("nFormula", 845)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -324)], (0)), 100000000, 0, -323), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -322), 0), 100000000, 0, -321), 0, (("plugins/micromega/micromega.mli", 560, 18805, 18805), ("plugins/micromega/micromega.mli", 560, 18805, 18836), 0), 0, Tag1 ("Micromega_plugin__Micromega", 298)), 0); (("zdeduce", 896), ((Tag1 (0, (Tag3 ((("nFormula", 845)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -320)], (0)), 100000000, 0, -319), (Tag1 (0, (Tag3 ((("nFormula", 845)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -318)], (0)), 100000000, 0, -317), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("nFormula", 845)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -316)], (0)), 100000000, 0, -315)], (0)), 100000000, 0, -314), 0), 100000000, 0, -313), 0), 100000000, 0, -312), 0, (("plugins/micromega/micromega.mli", 562, 18838, 18838), ("plugins/micromega/micromega.mli", 562, 18838, 18897), 0), 0, Tag1 ("Micromega_plugin__Micromega", 299)), 0); (("xnnormalise", 897), ((Tag1 (0, (Tag3 ((("formula", 858)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -311)], (0)), 100000000, 0, -310), (Tag3 ((("nFormula", 845)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -309)], (0)), 100000000, 0, -308), 0), 100000000, 0, -307), 0, (("plugins/micromega/micromega.mli", 564, 18899, 18899), ("plugins/micromega/micromega.mli", 564, 18899, 18940), 0), 0, Tag1 ("Micromega_plugin__Micromega", 300)), 0); (("xnormalise0", 898), ((Tag1 (0, (Tag3 ((("nFormula", 845)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -306)], (0)), 100000000, 0, -305), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("nFormula", 845)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -304)], (0)), 100000000, 0, -303)], (0)), 100000000, 0, -302), 0), 100000000, 0, -301), 0, (("plugins/micromega/micromega.mli", 566, 18942, 18942), ("plugins/micromega/micromega.mli", 566, 18942, 18989), 0), 0, Tag1 ("Micromega_plugin__Micromega", 301)), 0); (("cnf_of_list0", 899), ((Tag1 (0, ((("a1")), 100000000, 0, -297), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("nFormula", 845)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -300)], (0)), 100000000, 0, -299)], (0)), 100000000, 0, -298), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("nFormula", 845)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -296)], (0)), 100000000, 0, -295); ((("a1")), 100000000, 0, -297)]), 100000000, 0, -294)], (0)), 100000000, 0, -293)], (0)), 100000000, 0, -292), 0), 100000000, 0, -291), 0), 100000000, 0, -290), 0, (("plugins/micromega/micromega.mli", 568, 18991, 18991), ("plugins/micromega/micromega.mli", 568, 18991, 19064), 0), 0, Tag1 ("Micromega_plugin__Micromega", 302)), 0); (("normalise0", 900), ((Tag1 (0, (Tag3 ((("formula", 858)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -289)], (0)), 100000000, 0, -288), (Tag1 (0, ((("a1")), 100000000, 0, -287), (Tag3 ((("cnf", 791)), [(Tag3 ((("nFormula", 845)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -286)], (0)), 100000000, 0, -285); ((("a1")), 100000000, 0, -287)], (0)), 100000000, 0, -284), 0), 100000000, 0, -283), 0), 100000000, 0, -282), 0, (("plugins/micromega/micromega.mli", 570, 19066, 19066), ("plugins/micromega/micromega.mli", 570, 19066, 19124), 0), 0, Tag1 ("Micromega_plugin__Micromega", 303)), 0); (("xnegate0", 901), ((Tag1 (0, (Tag3 ((("nFormula", 845)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -281)], (0)), 100000000, 0, -280), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("nFormula", 845)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -279)], (0)), 100000000, 0, -278)], (0)), 100000000, 0, -277), 0), 100000000, 0, -276), 0, (("plugins/micromega/micromega.mli", 572, 19126, 19126), ("plugins/micromega/micromega.mli", 572, 19126, 19170), 0), 0, Tag1 ("Micromega_plugin__Micromega", 304)), 0); (("negate", 902), ((Tag1 (0, (Tag3 ((("formula", 858)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -275)], (0)), 100000000, 0, -274), (Tag1 (0, ((("a1")), 100000000, 0, -273), (Tag3 ((("cnf", 791)), [(Tag3 ((("nFormula", 845)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -272)], (0)), 100000000, 0, -271); ((("a1")), 100000000, 0, -273)], (0)), 100000000, 0, -270), 0), 100000000, 0, -269), 0), 100000000, 0, -268), 0, (("plugins/micromega/micromega.mli", 574, 19172, 19172), ("plugins/micromega/micromega.mli", 574, 19172, 19226), 0), 0, Tag1 ("Micromega_plugin__Micromega", 305)), 0); (("cnfZ", 903), ((Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -267), (Tag1 (0, (Tag3 ((("tFormula", 800)), [(Tag3 ((("formula", 858)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -264)], (0)), 100000000, 0, -263); ((("a1")), 100000000, 0, -260); ((("a2")), 100000000, 0, -265); ((("a3")), 100000000, 0, -266)], (0)), 100000000, 0, -262), (Tag2 ([(Tag3 ((("cnf", 791)), [(Tag3 ((("nFormula", 845)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -259)], (0)), 100000000, 0, -258); ((("a1")), 100000000, 0, -260)], (0)), 100000000, 0, -257); (Tag3 ((("trace", 779)), [((("a1")), 100000000, 0, -260)], (0)), 100000000, 0, -261)]), 100000000, 0, -256), 0), 100000000, 0, -255), 0), 100000000, 0, -254), 0, (("plugins/micromega/micromega.mli", 576, 19228, 19228), ("plugins/micromega/micromega.mli", 576, 19228, 19319), 0), 0, Tag1 ("Micromega_plugin__Micromega", 306)), 0); (("ceiling", 904), ((Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -253), (Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -252), (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -251), 0), 100000000, 0, -250), 0), 100000000, 0, -249), 0, (("plugins/micromega/micromega.mli", 578, 19321, 19321), ("plugins/micromega/micromega.mli", 578, 19321, 19346), 0), 0, Tag1 ("Micromega_plugin__Micromega", 307)), 0); Tag1 (("zArithProof", 905), (0, 0, Tag1 ([(("DoneProof", 675), (0), 0, (("plugins/micromega/micromega.mli", 581, 19367, 19367), ("plugins/micromega/micromega.mli", 581, 19367, 19378), 0), 0, Tag1 ("Micromega_plugin__Micromega", 309)); (("RatProof", 676), ([(Tag3 ((("zWitness", 889)), 0, (0)), 100000000, 0, -235); (Tag3 ((("zArithProof", 905)), 0, (0)), 100000000, 0, -236)]), 0, (("plugins/micromega/micromega.mli", 582, 19379, 19379), ("plugins/micromega/micromega.mli", 582, 19379, 19415), 0), 0, Tag1 ("Micromega_plugin__Micromega", 310)); (("CutProof", 677), ([(Tag3 ((("zWitness", 889)), 0, (0)), 100000000, 0, -237); (Tag3 ((("zArithProof", 905)), 0, (0)), 100000000, 0, -238)]), 0, (("plugins/micromega/micromega.mli", 583, 19416, 19416), ("plugins/micromega/micromega.mli", 583, 19416, 19452), 0), 0, Tag1 ("Micromega_plugin__Micromega", 311)); (("SplitProof", 678), ([(Tag3 ((("polC", 843)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -240)], (0)), 100000000, 0, -239); (Tag3 ((("zArithProof", 905)), 0, (0)), 100000000, 0, -241); (Tag3 ((("zArithProof", 905)), 0, (0)), 100000000, 0, -242)]), 0, (("plugins/micromega/micromega.mli", 584, 19453, 19453), ("plugins/micromega/micromega.mli", 584, 19453, 19503), 0), 0, Tag1 ("Micromega_plugin__Micromega", 312)); (("EnumProof", 679), ([(Tag3 ((("zWitness", 889)), 0, (0)), 100000000, 0, -243); (Tag3 ((("zWitness", 889)), 0, (0)), 100000000, 0, -244); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("zArithProof", 905)), 0, (0)), 100000000, 0, -246)], (0)), 100000000, 0, -245)]), 0, (("plugins/micromega/micromega.mli", 585, 19504, 19504), ("plugins/micromega/micromega.mli", 585, 19504, 19557), 0), 0, Tag1 ("Micromega_plugin__Micromega", 313)); (("ExProof", 680), ([(Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -247); (Tag3 ((("zArithProof", 905)), 0, (0)), 100000000, 0, -248)]), 0, (("plugins/micromega/micromega.mli", 586, 19558, 19558), ("plugins/micromega/micromega.mli", 586, 19558, 19593), 0), 0, Tag1 ("Micromega_plugin__Micromega", 314))], 0), 1, 0, 0, 0, 0, 0, (("plugins/micromega/micromega.mli", 580, 19348, 19348), ("plugins/micromega/micromega.mli", 586, 19558, 19593), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 308)), 1, 0); (("zgcdM", 906), ((Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -234), (Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -233), (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -232), 0), 100000000, 0, -231), 0), 100000000, 0, -230), 0, (("plugins/micromega/micromega.mli", 588, 19595, 19595), ("plugins/micromega/micromega.mli", 588, 19595, 19618), 0), 0, Tag1 ("Micromega_plugin__Micromega", 315)), 0); (("zgcd_pol", 907), ((Tag1 (0, (Tag3 ((("polC", 843)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -229)], (0)), 100000000, 0, -228), (Tag2 ([(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -226); (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -227)]), 100000000, 0, -225), 0), 100000000, 0, -224), 0, (("plugins/micromega/micromega.mli", 590, 19620, 19620), ("plugins/micromega/micromega.mli", 590, 19620, 19650), 0), 0, Tag1 ("Micromega_plugin__Micromega", 316)), 0); (("zdiv_pol", 908), ((Tag1 (0, (Tag3 ((("polC", 843)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -223)], (0)), 100000000, 0, -222), (Tag1 (0, (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -221), (Tag3 ((("polC", 843)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -220)], (0)), 100000000, 0, -219), 0), 100000000, 0, -218), 0), 100000000, 0, -217), 0, (("plugins/micromega/micromega.mli", 592, 19652, 19652), ("plugins/micromega/micromega.mli", 592, 19652, 19688), 0), 0, Tag1 ("Micromega_plugin__Micromega", 317)), 0); (("makeCuttingPlane", 909), ((Tag1 (0, (Tag3 ((("polC", 843)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -216)], (0)), 100000000, 0, -215), (Tag2 ([(Tag3 ((("polC", 843)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -213)], (0)), 100000000, 0, -212); (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -214)]), 100000000, 0, -211), 0), 100000000, 0, -210), 0, (("plugins/micromega/micromega.mli", 594, 19690, 19690), ("plugins/micromega/micromega.mli", 594, 19690, 19733), 0), 0, Tag1 ("Micromega_plugin__Micromega", 318)), 0); (("genCuttingPlane", 910), ((Tag1 (0, (Tag3 ((("nFormula", 845)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -209)], (0)), 100000000, 0, -208), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag2 ([(Tag3 ((("polC", 843)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -205)], (0)), 100000000, 0, -204); (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -206)]), 100000000, 0, -203); (Tag3 ((("op1", 844)), 0, (0)), 100000000, 0, -207)]), 100000000, 0, -202)], (0)), 100000000, 0, -201), 0), 100000000, 0, -200), 0, (("plugins/micromega/micromega.mli", 596, 19735, 19735), ("plugins/micromega/micromega.mli", 596, 19735, 19798), 0), 0, Tag1 ("Micromega_plugin__Micromega", 319)), 0); (("nformula_of_cutting_plane", 911), ((Tag1 (0, (Tag2 ([(Tag2 ([(Tag3 ((("polC", 843)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -197)], (0)), 100000000, 0, -196); (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -198)]), 100000000, 0, -195); (Tag3 ((("op1", 844)), 0, (0)), 100000000, 0, -199)]), 100000000, 0, -194), (Tag3 ((("nFormula", 845)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -193)], (0)), 100000000, 0, -192), 0), 100000000, 0, -191), 0, (("plugins/micromega/micromega.mli", 598, 19800, 19800), ("plugins/micromega/micromega.mli", 598, 19800, 19866), 0), 0, Tag1 ("Micromega_plugin__Micromega", 320)), 0); (("is_pol_Z0", 912), ((Tag1 (0, (Tag3 ((("polC", 843)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -190)], (0)), 100000000, 0, -189), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -188), 0), 100000000, 0, -187), 0, (("plugins/micromega/micromega.mli", 600, 19868, 19868), ("plugins/micromega/micromega.mli", 600, 19868, 19898), 0), 0, Tag1 ("Micromega_plugin__Micromega", 321)), 0); (("eval_Psatz0", 913), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("nFormula", 845)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -186)], (0)), 100000000, 0, -185)], (0)), 100000000, 0, -184), (Tag1 (0, (Tag3 ((("zWitness", 889)), 0, (0)), 100000000, 0, -183), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("nFormula", 845)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -182)], (0)), 100000000, 0, -181)], (0)), 100000000, 0, -180), 0), 100000000, 0, -179), 0), 100000000, 0, -178), 0, (("plugins/micromega/micromega.mli", 602, 19900, 19900), ("plugins/micromega/micromega.mli", 602, 19900, 19966), 0), 0, Tag1 ("Micromega_plugin__Micromega", 322)), 0); (("valid_cut_sign", 914), ((Tag1 (0, (Tag3 ((("op1", 844)), 0, (0)), 100000000, 0, -177), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -176), 0), 100000000, 0, -175), 0, (("plugins/micromega/micromega.mli", 604, 19968, 19968), ("plugins/micromega/micromega.mli", 604, 19968, 20000), 0), 0, Tag1 ("Micromega_plugin__Micromega", 323)), 0); (("bound_var", 915), ((Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -174), (Tag3 ((("formula", 858)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -173)], (0)), 100000000, 0, -172), 0), 100000000, 0, -171), 0, (("plugins/micromega/micromega.mli", 606, 20002, 20002), ("plugins/micromega/micromega.mli", 606, 20002, 20039), 0), 0, Tag1 ("Micromega_plugin__Micromega", 324)), 0); (("mk_eq_pos", 916), ((Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -170), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -169), (Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -168), (Tag3 ((("formula", 858)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -167)], (0)), 100000000, 0, -166), 0), 100000000, 0, -165), 0), 100000000, 0, -164), 0), 100000000, 0, -163), 0, (("plugins/micromega/micromega.mli", 608, 20041, 20041), ("plugins/micromega/micromega.mli", 608, 20041, 20102), 0), 0, Tag1 ("Micromega_plugin__Micromega", 325)), 0); (("max_var", 917), ((Tag1 (0, (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -162), (Tag1 (0, (Tag3 ((("pol", 751)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -161)], (0)), 100000000, 0, -160), (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -159), 0), 100000000, 0, -158), 0), 100000000, 0, -157), 0, (("plugins/micromega/micromega.mli", 610, 20104, 20104), ("plugins/micromega/micromega.mli", 610, 20104, 20147), 0), 0, Tag1 ("Micromega_plugin__Micromega", 326)), 0); (("max_var_nformulae", 918), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("nFormula", 845)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -156)], (0)), 100000000, 0, -155)], (0)), 100000000, 0, -154), (Tag3 ((("positive", 741)), 0, (0)), 100000000, 0, -153), 0), 100000000, 0, -152), 0, (("plugins/micromega/micromega.mli", 612, 20149, 20149), ("plugins/micromega/micromega.mli", 612, 20149, 20200), 0), 0, Tag1 ("Micromega_plugin__Micromega", 327)), 0); (("zChecker", 919), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("nFormula", 845)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -151)], (0)), 100000000, 0, -150)], (0)), 100000000, 0, -149), (Tag1 (0, (Tag3 ((("zArithProof", 905)), 0, (0)), 100000000, 0, -148), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -147), 0), 100000000, 0, -146), 0), 100000000, 0, -145), 0, (("plugins/micromega/micromega.mli", 614, 20202, 20202), ("plugins/micromega/micromega.mli", 614, 20202, 20255), 0), 0, Tag1 ("Micromega_plugin__Micromega", 328)), 0); (("zTautoChecker", 920), ((Tag1 (0, (Tag3 ((("bFormula", 788)), [(Tag3 ((("formula", 858)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -144)], (0)), 100000000, 0, -143)], (0)), 100000000, 0, -142), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("zArithProof", 905)), 0, (0)), 100000000, 0, -141)], (0)), 100000000, 0, -140), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -139), 0), 100000000, 0, -138), 0), 100000000, 0, -137), 0, (("plugins/micromega/micromega.mli", 616, 20257, 20257), ("plugins/micromega/micromega.mli", 616, 20257, 20323), 0), 0, Tag1 ("Micromega_plugin__Micromega", 329)), 0); Tag1 (("qWitness", 921), (0, 0, 0, 1, ((Tag3 ((("psatz", 848)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -136)], (0)), 100000000, 0, -135)), 0, 0, 0, 0, (("plugins/micromega/micromega.mli", 618, 20325, 20325), ("plugins/micromega/micromega.mli", 618, 20325, 20348), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 330)), 1, 0); (("qWeakChecker", 922), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("nFormula", 845)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -134)], (0)), 100000000, 0, -133)], (0)), 100000000, 0, -132), (Tag1 (0, (Tag3 ((("psatz", 848)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -131)], (0)), 100000000, 0, -130), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -129), 0), 100000000, 0, -128), 0), 100000000, 0, -127), 0, (("plugins/micromega/micromega.mli", 620, 20350, 20350), ("plugins/micromega/micromega.mli", 620, 20350, 20403), 0), 0, Tag1 ("Micromega_plugin__Micromega", 331)), 0); (("qnormalise", 923), ((Tag1 (0, (Tag3 ((("formula", 858)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -126)], (0)), 100000000, 0, -125), (Tag1 (0, ((("a1")), 100000000, 0, -124), (Tag3 ((("cnf", 791)), [(Tag3 ((("nFormula", 845)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -123)], (0)), 100000000, 0, -122); ((("a1")), 100000000, 0, -124)], (0)), 100000000, 0, -121), 0), 100000000, 0, -120), 0), 100000000, 0, -119), 0, (("plugins/micromega/micromega.mli", 622, 20405, 20405), ("plugins/micromega/micromega.mli", 622, 20405, 20463), 0), 0, Tag1 ("Micromega_plugin__Micromega", 332)), 0); (("qnegate", 924), ((Tag1 (0, (Tag3 ((("formula", 858)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -118)], (0)), 100000000, 0, -117), (Tag1 (0, ((("a1")), 100000000, 0, -116), (Tag3 ((("cnf", 791)), [(Tag3 ((("nFormula", 845)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -115)], (0)), 100000000, 0, -114); ((("a1")), 100000000, 0, -116)], (0)), 100000000, 0, -113), 0), 100000000, 0, -112), 0), 100000000, 0, -111), 0, (("plugins/micromega/micromega.mli", 624, 20465, 20465), ("plugins/micromega/micromega.mli", 624, 20465, 20520), 0), 0, Tag1 ("Micromega_plugin__Micromega", 333)), 0); (("qunsat", 925), ((Tag1 (0, (Tag3 ((("nFormula", 845)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -110)], (0)), 100000000, 0, -109), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -108), 0), 100000000, 0, -107), 0, (("plugins/micromega/micromega.mli", 626, 20522, 20522), ("plugins/micromega/micromega.mli", 626, 20522, 20553), 0), 0, Tag1 ("Micromega_plugin__Micromega", 334)), 0); (("qdeduce", 926), ((Tag1 (0, (Tag3 ((("nFormula", 845)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -106)], (0)), 100000000, 0, -105), (Tag1 (0, (Tag3 ((("nFormula", 845)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -104)], (0)), 100000000, 0, -103), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("nFormula", 845)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -102)], (0)), 100000000, 0, -101)], (0)), 100000000, 0, -100), 0), 100000000, 0, -99), 0), 100000000, 0, -98), 0, (("plugins/micromega/micromega.mli", 628, 20555, 20555), ("plugins/micromega/micromega.mli", 628, 20555, 20614), 0), 0, Tag1 ("Micromega_plugin__Micromega", 335)), 0); (("normQ", 927), ((Tag1 (0, (Tag3 ((("pExpr", 750)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -97)], (0)), 100000000, 0, -96), (Tag3 ((("pol", 751)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -95)], (0)), 100000000, 0, -94), 0), 100000000, 0, -93), 0, (("plugins/micromega/micromega.mli", 630, 20616, 20616), ("plugins/micromega/micromega.mli", 630, 20616, 20644), 0), 0, Tag1 ("Micromega_plugin__Micromega", 336)), 0); (("cnfQ", 928), ((Tag1 (0, (Tag3 ((("kind", 778)), 0, (0)), 100000000, 0, -92), (Tag1 (0, (Tag3 ((("tFormula", 800)), [(Tag3 ((("formula", 858)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -89)], (0)), 100000000, 0, -88); ((("a1")), 100000000, 0, -85); ((("a2")), 100000000, 0, -90); ((("a3")), 100000000, 0, -91)], (0)), 100000000, 0, -87), (Tag2 ([(Tag3 ((("cnf", 791)), [(Tag3 ((("nFormula", 845)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -84)], (0)), 100000000, 0, -83); ((("a1")), 100000000, 0, -85)], (0)), 100000000, 0, -82); (Tag3 ((("trace", 779)), [((("a1")), 100000000, 0, -85)], (0)), 100000000, 0, -86)]), 100000000, 0, -81), 0), 100000000, 0, -80), 0), 100000000, 0, -79), 0, (("plugins/micromega/micromega.mli", 632, 20646, 20646), ("plugins/micromega/micromega.mli", 632, 20646, 20737), 0), 0, Tag1 ("Micromega_plugin__Micromega", 337)), 0); (("qTautoChecker", 929), ((Tag1 (0, (Tag3 ((("bFormula", 788)), [(Tag3 ((("formula", 858)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -78)], (0)), 100000000, 0, -77)], (0)), 100000000, 0, -76), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("qWitness", 921)), 0, (0)), 100000000, 0, -75)], (0)), 100000000, 0, -74), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -73), 0), 100000000, 0, -72), 0), 100000000, 0, -71), 0, (("plugins/micromega/micromega.mli", 634, 20739, 20739), ("plugins/micromega/micromega.mli", 634, 20739, 20802), 0), 0, Tag1 ("Micromega_plugin__Micromega", 338)), 0); Tag1 (("rcst", 930), (0, 0, Tag1 ([(("C0", 706), (0), 0, (("plugins/micromega/micromega.mli", 637, 20816, 20816), ("plugins/micromega/micromega.mli", 637, 20816, 20820), 0), 0, Tag1 ("Micromega_plugin__Micromega", 340)); (("C1", 707), (0), 0, (("plugins/micromega/micromega.mli", 638, 20821, 20821), ("plugins/micromega/micromega.mli", 638, 20821, 20825), 0), 0, Tag1 ("Micromega_plugin__Micromega", 341)); (("CQ", 708), ([(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -57)]), 0, (("plugins/micromega/micromega.mli", 639, 20826, 20826), ("plugins/micromega/micromega.mli", 639, 20826, 20835), 0), 0, Tag1 ("Micromega_plugin__Micromega", 342)); (("CZ", 709), ([(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -58)]), 0, (("plugins/micromega/micromega.mli", 640, 20836, 20836), ("plugins/micromega/micromega.mli", 640, 20836, 20845), 0), 0, Tag1 ("Micromega_plugin__Micromega", 343)); (("CPlus", 710), ([(Tag3 ((("rcst", 930)), 0, (0)), 100000000, 0, -59); (Tag3 ((("rcst", 930)), 0, (0)), 100000000, 0, -60)]), 0, (("plugins/micromega/micromega.mli", 641, 20846, 20846), ("plugins/micromega/micromega.mli", 641, 20846, 20868), 0), 0, Tag1 ("Micromega_plugin__Micromega", 344)); (("CMinus", 711), ([(Tag3 ((("rcst", 930)), 0, (0)), 100000000, 0, -61); (Tag3 ((("rcst", 930)), 0, (0)), 100000000, 0, -62)]), 0, (("plugins/micromega/micromega.mli", 642, 20869, 20869), ("plugins/micromega/micromega.mli", 642, 20869, 20892), 0), 0, Tag1 ("Micromega_plugin__Micromega", 345)); (("CMult", 712), ([(Tag3 ((("rcst", 930)), 0, (0)), 100000000, 0, -63); (Tag3 ((("rcst", 930)), 0, (0)), 100000000, 0, -64)]), 0, (("plugins/micromega/micromega.mli", 643, 20893, 20893), ("plugins/micromega/micromega.mli", 643, 20893, 20915), 0), 0, Tag1 ("Micromega_plugin__Micromega", 346)); (("CPow", 713), ([(Tag3 ((("rcst", 930)), 0, (0)), 100000000, 0, -65); (Tag3 ((("sum", 729)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -67); (Tag3 ((("nat", 728)), 0, (0)), 100000000, 0, -68)], (0)), 100000000, 0, -66)]), 0, (("plugins/micromega/micromega.mli", 644, 20916, 20916), ("plugins/micromega/micromega.mli", 644, 20916, 20945), 0), 0, Tag1 ("Micromega_plugin__Micromega", 347)); (("CInv", 714), ([(Tag3 ((("rcst", 930)), 0, (0)), 100000000, 0, -69)]), 0, (("plugins/micromega/micromega.mli", 645, 20946, 20946), ("plugins/micromega/micromega.mli", 645, 20946, 20960), 0), 0, Tag1 ("Micromega_plugin__Micromega", 348)); (("COpp", 715), ([(Tag3 ((("rcst", 930)), 0, (0)), 100000000, 0, -70)]), 0, (("plugins/micromega/micromega.mli", 646, 20961, 20961), ("plugins/micromega/micromega.mli", 646, 20961, 20975), 0), 0, Tag1 ("Micromega_plugin__Micromega", 349))], 0), 1, 0, 0, 0, 0, 0, (("plugins/micromega/micromega.mli", 636, 20804, 20804), ("plugins/micromega/micromega.mli", 646, 20961, 20975), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 339)), 1, 0); (("z_of_exp", 931), ((Tag1 (0, (Tag3 ((("sum", 729)), [(Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -55); (Tag3 ((("nat", 728)), 0, (0)), 100000000, 0, -56)], (0)), 100000000, 0, -54), (Tag3 ((("z", 743)), 0, (0)), 100000000, 0, -53), 0), 100000000, 0, -52), 0, (("plugins/micromega/micromega.mli", 648, 20977, 20977), ("plugins/micromega/micromega.mli", 648, 20977, 21009), 0), 0, Tag1 ("Micromega_plugin__Micromega", 350)), 0); (("q_of_Rcst", 932), ((Tag1 (0, (Tag3 ((("rcst", 930)), 0, (0)), 100000000, 0, -51), (Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0, (("plugins/micromega/micromega.mli", 650, 21011, 21011), ("plugins/micromega/micromega.mli", 650, 21011, 21036), 0), 0, Tag1 ("Micromega_plugin__Micromega", 351)), 0); Tag1 (("rWitness", 933), (0, 0, 0, 1, ((Tag3 ((("psatz", 848)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -48)], (0)), 100000000, 0, -47)), 0, 0, 0, 0, (("plugins/micromega/micromega.mli", 652, 21038, 21038), ("plugins/micromega/micromega.mli", 652, 21038, 21061), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Micromega", 352)), 1, 0); (("rWeakChecker", 934), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("nFormula", 845)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -46)], (0)), 100000000, 0, -45)], (0)), 100000000, 0, -44), (Tag1 (0, (Tag3 ((("psatz", 848)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -43)], (0)), 100000000, 0, -42), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("plugins/micromega/micromega.mli", 654, 21063, 21063), ("plugins/micromega/micromega.mli", 654, 21063, 21116), 0), 0, Tag1 ("Micromega_plugin__Micromega", 353)), 0); (("rnormalise", 935), ((Tag1 (0, (Tag3 ((("formula", 858)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -38)], (0)), 100000000, 0, -37), (Tag1 (0, ((("a1")), 100000000, 0, -36), (Tag3 ((("cnf", 791)), [(Tag3 ((("nFormula", 845)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -35)], (0)), 100000000, 0, -34); ((("a1")), 100000000, 0, -36)], (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("plugins/micromega/micromega.mli", 656, 21118, 21118), ("plugins/micromega/micromega.mli", 656, 21118, 21176), 0), 0, Tag1 ("Micromega_plugin__Micromega", 354)), 0); (("rnegate", 936), ((Tag1 (0, (Tag3 ((("formula", 858)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -30)], (0)), 100000000, 0, -29), (Tag1 (0, ((("a1")), 100000000, 0, -28), (Tag3 ((("cnf", 791)), [(Tag3 ((("nFormula", 845)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -27)], (0)), 100000000, 0, -26); ((("a1")), 100000000, 0, -28)], (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("plugins/micromega/micromega.mli", 658, 21178, 21178), ("plugins/micromega/micromega.mli", 658, 21178, 21233), 0), 0, Tag1 ("Micromega_plugin__Micromega", 355)), 0); (("runsat", 937), ((Tag1 (0, (Tag3 ((("nFormula", 845)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -22)], (0)), 100000000, 0, -21), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("plugins/micromega/micromega.mli", 660, 21235, 21235), ("plugins/micromega/micromega.mli", 660, 21235, 21266), 0), 0, Tag1 ("Micromega_plugin__Micromega", 356)), 0); (("rdeduce", 938), ((Tag1 (0, (Tag3 ((("nFormula", 845)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -18)], (0)), 100000000, 0, -17), (Tag1 (0, (Tag3 ((("nFormula", 845)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -16)], (0)), 100000000, 0, -15), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("nFormula", 845)), [(Tag3 ((("q", 874)), 0, (0)), 100000000, 0, -14)], (0)), 100000000, 0, -13)], (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("plugins/micromega/micromega.mli", 662, 21268, 21268), ("plugins/micromega/micromega.mli", 662, 21268, 21327), 0), 0, Tag1 ("Micromega_plugin__Micromega", 357)), 0); (("rTautoChecker", 939), ((Tag1 (0, (Tag3 ((("bFormula", 788)), [(Tag3 ((("formula", 858)), [(Tag3 ((("rcst", 930)), 0, (0)), 100000000, 0, -9)], (0)), 100000000, 0, -8)], (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("rWitness", 933)), 0, (0)), 100000000, 0, -6)], (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("plugins/micromega/micromega.mli", 664, 21329, 21329), ("plugins/micromega/micromega.mli", 664, 21329, 21395), 0), 0, Tag1 ("Micromega_plugin__Micromega", 358)), 0)], "Micromega_plugin__Micromega", [("Micromega_plugin__Micromega", ("\144\132\00120\253\252S\131\160\152\240\207\228\014\024")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Micromega_plugin", ("-|C6\194\020\193\204\234h\242\238\191\214'\193")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val rTautoChecker : rcst formula bFormula -> rWitness list -> bool
