type abstract_type = { aname : string; asize : int; aalignment : int; }
type _ ocaml_type =
    String : string ocaml_type
  | Bytes : bytes ocaml_type
  | FloatArray : float array ocaml_type
type incomplete_size = { mutable isize : int; }
type structured_spec = { size : int; align : int; }
type 'a structspec =
    Incomplete of incomplete_size
  | Complete of structured_spec
type _ typ =
    Void : unit typ
  | Primitive : 'a Ctypes_primitive_types.prim -> 'a typ
  | Pointer : 'a typ -> 'a ptr typ
  | Funptr : 'a fn -> 'a static_funptr typ
  | Struct : 'a structure_type -> 'a structure typ
  | Union : 'a union_type -> 'a union typ
  | Abstract : abstract_type -> 'a abstract typ
  | View : ('a, 'b) view -> 'a typ
  | Array : 'a typ * int -> 'a carray typ
  | Bigarray : ('c, 'a, 'd) Ctypes_bigarray.t -> 'a typ
  | OCaml : 'a ocaml_type -> 'a ocaml typ
and 'a carray = { astart : 'a ptr; alength : int; }
and ('a, 'kind) structured = { structured : ('a, 'kind) structured ptr; } [@@unboxed]
and 'a union = ('a, [ `Union ]) structured
and 'a structure = ('a, [ `Struct ]) structured
and 'a abstract = ('a, [ `Abstract ]) structured
and (_, _) pointer =
    CPointer :
      (Obj.t option, 'a typ) Ctypes_ptr.Fat.t -> ('a, [ `C ]) pointer
  | OCamlRef : int * 'a * 'a ocaml_type -> ('a, [ `OCaml ]) pointer
and 'a ptr = ('a, [ `C ]) pointer
and 'a ocaml = ('a, [ `OCaml ]) pointer
and 'a static_funptr =
    Static_funptr :
      (Obj.t option, 'a fn) Ctypes_ptr.Fat.t -> 'a static_funptr
and ('a, 'b) view = {
  read : 'b -> 'a;
  write : 'a -> 'b;
  format_typ :
    ((Format.formatter -> unit) -> Format.formatter -> unit) option;
  format : (Format.formatter -> 'a -> unit) option;
  ty : 'b typ;
}
and ('a, 's) field = { ftype : 'a typ; foffset : int; fname : string; }
and 'a structure_type = {
  tag : string;
  mutable spec : 'a structspec;
  mutable fields : 'a structure boxed_field list;
}
and 'a union_type = {
  utag : string;
  mutable uspec : structured_spec option;
  mutable ufields : 'a union boxed_field list;
}
and 's boxed_field = BoxedField : ('a, 's) field -> 's boxed_field
and _ fn =
    Returns : 'a typ -> 'a fn
  | Function : 'a typ * 'b fn -> ('a -> 'b) fn
type _ bigarray_class =
    Genarray :
      < ba_repr : 'b; bigarray : ('a, 'b, 'l) Bigarray_compat.Genarray.t;
        carray : 'a carray; dims : int array; element : 'a; layout : 'l >
      bigarray_class
  | Array1 :
      < ba_repr : 'b; bigarray : ('a, 'b, 'l) Bigarray_compat.Array1.t;
        carray : 'a carray; dims : int; element : 'a; layout : 'l >
      bigarray_class
  | Array2 :
      < ba_repr : 'b; bigarray : ('a, 'b, 'l) Bigarray_compat.Array2.t;
        carray : 'a carray carray; dims : int * int; element : 'a;
        layout : 'l >
      bigarray_class
  | Array3 :
      < ba_repr : 'b; bigarray : ('a, 'b, 'l) Bigarray_compat.Array3.t;
        carray : 'a carray carray carray; dims : int * int * int;
        element : 'a; layout : 'l >
      bigarray_class
type boxed_typ = BoxedType : 'a typ -> boxed_typ
val sizeof : 'a typ -> int
val alignment : 'a typ -> int
val passable : 'a typ -> bool
val ocaml_value : 'a typ -> bool
val has_ocaml_argument : 'a fn -> bool
val void : unit typ
val char : char typ
val schar : int typ
val float : float typ
val double : float typ
val ldouble : LDouble.t typ
val complex32 : Complex.t typ
val complex64 : Complex.t typ
val complexld : ComplexL.t typ
val short : int typ
val int : int typ
val sint : Signed.sint typ
val long : Signed.long typ
val llong : Signed.llong typ
val nativeint : nativeint typ
val int8_t : int typ
val int16_t : int typ
val int32_t : Signed.Int32.t typ
val int64_t : Signed.Int64.t typ
val camlint : int typ
val uchar : Unsigned.uchar typ
val bool : bool typ
val uint8_t : Unsigned.UInt8.t typ
val uint16_t : Unsigned.UInt16.t typ
val uint32_t : Unsigned.UInt32.t typ
val uint64_t : Unsigned.UInt64.t typ
val size_t : Unsigned.size_t typ
val ushort : Unsigned.ushort typ
val uint : Unsigned.uint typ
val ulong : Unsigned.ulong typ
val ullong : Unsigned.ullong typ
val array : int -> 'a typ -> 'a carray typ
val ocaml_string : string ocaml typ
val ocaml_bytes : bytes ocaml typ
val ocaml_float_array : float array ocaml typ
val ptr : 'a typ -> 'a ptr typ
val ( @-> ) : 'a typ -> 'b fn -> ('a -> 'b) fn
val abstract : name:string -> size:int -> alignment:int -> 'a abstract typ
val view :
  ?format_typ:((Format.formatter -> unit) -> Format.formatter -> unit) ->
  ?format:(Format.formatter -> 'b -> unit) ->
  read:('a -> 'b) -> write:('b -> 'a) -> 'a typ -> 'b typ
val typedef : 'a typ -> string -> 'a typ
val bigarray :
  < ba_repr : 'c; bigarray : 'd; carray : 'e; dims : 'b; element : 'a;
    layout : Bigarray_compat.c_layout >
  bigarray_class -> 'b -> ('a, 'c) Bigarray_compat.kind -> 'd typ
val fortran_bigarray :
  < ba_repr : 'c; bigarray : 'd; carray : 'e; dims : 'b; element : 'a;
    layout : Bigarray_compat.fortran_layout >
  bigarray_class -> 'b -> ('a, 'c) Bigarray_compat.kind -> 'd typ
val returning : 'a typ -> 'a fn
val static_funptr : 'a fn -> 'a static_funptr typ
val structure : string -> 'a structure typ
val union : string -> 'a union typ
val offsetof : ('a, 'b) field -> int
val field_type : ('a, 'b) field -> 'a typ
val field_name : ('a, 'b) field -> string
exception IncompleteType
exception ModifyingSealedType of string
exception Unsupported of string
val unsupported : ('a, unit, string, 'b) format4 -> 'a
type arithmetic =
    Int8
  | Int16
  | Int32
  | Int64
  | Uint8
  | Uint16
  | Uint32
  | Uint64
  | Float("DEBUG:rule", [Tag1 (("abstract_type", 1454), (0, 0, [[(("aname", 270), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -503), (("src/ctypes/ctypes_static.mli", 11, 246, 248), ("src/ctypes/ctypes_static.mli", 11, 246, 263), 0), 0, Tag1 ("Ctypes_static", 1)); (("asize", 271), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -504), (("src/ctypes/ctypes_static.mli", 12, 264, 266), ("src/ctypes/ctypes_static.mli", 12, 264, 278), 0), 0, Tag1 ("Ctypes_static", 2)); (("aalignment", 272), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -505), (("src/ctypes/ctypes_static.mli", 13, 279, 281), ("src/ctypes/ctypes_static.mli", 13, 279, 298), 0), 0, Tag1 ("Ctypes_static", 3))]], 1, 0, 0, 0, 0, 0, (("src/ctypes/ctypes_static.mli", 10, 223, 223), ("src/ctypes/ctypes_static.mli", 14, 299, 300), 0), 0, 0, 0, Tag1 ("Ctypes_static", 0)), 1, 0); Tag1 (("ocaml_type", 1455), ([((("_")), 100000000, 0, -502)], 1, Tag1 ([(("String", 274), (0), ((Tag3 ((("ocaml_type", 1455)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -496)], (0)), 100000000, 0, -495)), (("src/ctypes/ctypes_static.mli", 17, 322, 324), ("src/ctypes/ctypes_static.mli", 17, 322, 354), 0), 0, Tag1 ("Ctypes_static", 5)); (("Bytes", 275), (0), ((Tag3 ((("ocaml_type", 1455)), [(Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -498)], (0)), 100000000, 0, -497)), (("src/ctypes/ctypes_static.mli", 18, 355, 355), ("src/ctypes/ctypes_static.mli", 18, 355, 386), 0), 0, Tag1 ("Ctypes_static", 6)); (("FloatArray", 276), (0), ((Tag3 ((("ocaml_type", 1455)), [(Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -501)], (0)), 100000000, 0, -500)], (0)), 100000000, 0, -499)), (("src/ctypes/ctypes_static.mli", 19, 387, 387), ("src/ctypes/ctypes_static.mli", 19, 387, 424), 0), 0, Tag1 ("Ctypes_static", 7))], 0), 1, 0, [63], [0], 0, 0, (("src/ctypes/ctypes_static.mli", 16, 302, 302), ("src/ctypes/ctypes_static.mli", 19, 387, 424), 0), 0, 1, 0, Tag1 ("Ctypes_static", 4)), 1, 0); Tag1 (("incomplete_size", 1456), (0, 0, [[(("isize", 278), 1, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -494), (("src/ctypes/ctypes_static.mli", 21, 426, 451), ("src/ctypes/ctypes_static.mli", 21, 426, 469), 0), 0, Tag1 ("Ctypes_static", 9))]], 1, 0, 0, 0, 0, 0, (("src/ctypes/ctypes_static.mli", 21, 426, 426), ("src/ctypes/ctypes_static.mli", 21, 426, 471), 0), 0, 0, 0, Tag1 ("Ctypes_static", 8)), 1, 0); Tag1 (("structured_spec", 1457), (0, 0, [[(("size", 280), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -492), (("src/ctypes/ctypes_static.mli", 23, 473, 498), ("src/ctypes/ctypes_static.mli", 23, 473, 508), 0), 0, Tag1 ("Ctypes_static", 11)); (("align", 281), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -493), (("src/ctypes/ctypes_static.mli", 23, 473, 509), ("src/ctypes/ctypes_static.mli", 23, 473, 520), 0), 0, Tag1 ("Ctypes_static", 12))]], 1, 0, 0, 0, 0, 0, (("src/ctypes/ctypes_static.mli", 23, 473, 473), ("src/ctypes/ctypes_static.mli", 23, 473, 522), 0), 0, 0, 0, Tag1 ("Ctypes_static", 10)), 1, 0); Tag1 (("structspec", 1458), ([((("a")), 100000000, 0, -491)], 1, Tag1 ([(("Incomplete", 283), ([(Tag3 ((("incomplete_size", 1456)), 0, (0)), 100000000, 0, -489)]), 0, (("src/ctypes/ctypes_static.mli", 26, 545, 549), ("src/ctypes/ctypes_static.mli", 26, 545, 578), 0), 0, Tag1 ("Ctypes_static", 14)); (("Complete", 284), ([(Tag3 ((("structured_spec", 1457)), 0, (0)), 100000000, 0, -490)]), 0, (("src/ctypes/ctypes_static.mli", 27, 579, 581), ("src/ctypes/ctypes_static.mli", 27, 579, 610), 0), 0, Tag1 ("Ctypes_static", 15))], 0), 1, 0, [8], [0], 0, 0, (("src/ctypes/ctypes_static.mli", 25, 524, 524), ("src/ctypes/ctypes_static.mli", 27, 579, 610), 0), 0, 0, 0, Tag1 ("Ctypes_static", 13)), 1, 0); Tag1 (("typ", 1459), ([((("_")), 100000000, 0, -488)], 1, Tag1 ([(("Void", 301), (0), ((Tag3 ((("typ", 1459)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -446)], (0)), 100000000, 0, -445)), (("src/ctypes/ctypes_static.mli", 30, 625, 629), ("src/ctypes/ctypes_static.mli", 30, 625, 677), 0), 0, Tag1 ("Ctypes_static", 32)); (("Primitive", 302), ([(Tag3 (Tag1 ((Tag2 ("Ctypes_primitive_types")), "prim"), [((("a")), 100000000, 0, -448)], (0)), 100000000, 0, -449)]), ((Tag3 ((("typ", 1459)), [((("a")), 100000000, 0, -448)], (0)), 100000000, 0, -447)), (("src/ctypes/ctypes_static.mli", 31, 678, 680), ("src/ctypes/ctypes_static.mli", 31, 678, 740), 0), 0, Tag1 ("Ctypes_static", 33)); (("Pointer", 306), ([(Tag3 ((("typ", 1459)), [((("a")), 100000000, 0, -452)], (0)), 100000000, 0, -453)]), ((Tag3 ((("typ", 1459)), [(Tag3 ((("ptr", 1466)), [((("a")), 100000000, 0, -452)], (0)), 100000000, 0, -451)], (0)), 100000000, 0, -450)), (("src/ctypes/ctypes_static.mli", 32, 741, 743), ("src/ctypes/ctypes_static.mli", 32, 741, 795), 0), 0, Tag1 ("Ctypes_static", 34)); (("Funptr", 307), ([(Tag3 ((("fn", 1474)), [((("a")), 100000000, 0, -456)], (0)), 100000000, 0, -457)]), ((Tag3 ((("typ", 1459)), [(Tag3 ((("static_funptr", 1468)), [((("a")), 100000000, 0, -456)], (0)), 100000000, 0, -455)], (0)), 100000000, 0, -454)), (("src/ctypes/ctypes_static.mli", 33, 796, 798), ("src/ctypes/ctypes_static.mli", 33, 796, 860), 0), 0, Tag1 ("Ctypes_static", 35)); (("Struct", 308), ([(Tag3 ((("structure_type", 1471)), [((("a")), 100000000, 0, -460)], (0)), 100000000, 0, -461)]), ((Tag3 ((("typ", 1459)), [(Tag3 ((("structure", 1463)), [((("a")), 100000000, 0, -460)], (0)), 100000000, 0, -459)], (0)), 100000000, 0, -458)), (("src/ctypes/ctypes_static.mli", 34, 861, 863), ("src/ctypes/ctypes_static.mli", 34, 861, 921), 0), 0, Tag1 ("Ctypes_static", 36)); (("Union", 309), ([(Tag3 ((("union_type", 1472)), [((("a")), 100000000, 0, -464)], (0)), 100000000, 0, -465)]), ((Tag3 ((("typ", 1459)), [(Tag3 ((("union", 1462)), [((("a")), 100000000, 0, -464)], (0)), 100000000, 0, -463)], (0)), 100000000, 0, -462)), (("src/ctypes/ctypes_static.mli", 35, 922, 924), ("src/ctypes/ctypes_static.mli", 35, 922, 978), 0), 0, Tag1 ("Ctypes_static", 37)); (("Abstract", 310), ([(Tag3 ((("abstract_type", 1454)), 0, (0)), 100000000, 0, -469)]), ((Tag3 ((("typ", 1459)), [(Tag3 ((("abstract", 1464)), [((("a")), 100000000, 0, -468)], (0)), 100000000, 0, -467)], (0)), 100000000, 0, -466)), (("src/ctypes/ctypes_static.mli", 36, 979, 981), ("src/ctypes/ctypes_static.mli", 36, 979, 1038), 0), 0, Tag1 ("Ctypes_static", 38)); (("View", 311), ([(Tag3 ((("view", 1469)), [((("a")), 100000000, 0, -471); ((("b")), 100000000, 0, -473)], (0)), 100000000, 0, -472)]), ((Tag3 ((("typ", 1459)), [((("a")), 100000000, 0, -471)], (0)), 100000000, 0, -470)), (("src/ctypes/ctypes_static.mli", 37, 1039, 1041), ("src/ctypes/ctypes_static.mli", 37, 1039, 1089), 0), 0, Tag1 ("Ctypes_static", 39)); (("Array", 312), ([(Tag3 ((("typ", 1459)), [((("a")), 100000000, 0, -476)], (0)), 100000000, 0, -477); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -478)]), ((Tag3 ((("typ", 1459)), [(Tag3 ((("carray", 1460)), [((("a")), 100000000, 0, -476)], (0)), 100000000, 0, -475)], (0)), 100000000, 0, -474)), (("src/ctypes/ctypes_static.mli", 38, 1090, 1092), ("src/ctypes/ctypes_static.mli", 38, 1090, 1147), 0), 0, Tag1 ("Ctypes_static", 40)); (("Bigarray", 313), ([(Tag3 (Tag1 ((Tag2 ("Ctypes_bigarray")), "t"), [((0), 100000000, 0, -482); ((("a")), 100000000, 0, -480); ((0), 100000000, 0, -483)], (0)), 100000000, 0, -481)]), ((Tag3 ((("typ", 1459)), [((("a")), 100000000, 0, -480)], (0)), 100000000, 0, -479)), (("src/ctypes/ctypes_static.mli", 39, 1148, 1150), ("src/ctypes/ctypes_static.mli", 40, 1199, 1249), 0), 0, Tag1 ("Ctypes_static", 41)); (("OCaml", 327), ([(Tag3 ((("ocaml_type", 1455)), [((("a")), 100000000, 0, -486)], (0)), 100000000, 0, -487)]), ((Tag3 ((("typ", 1459)), [(Tag3 ((("ocaml", 1467)), [((("a")), 100000000, 0, -486)], (0)), 100000000, 0, -485)], (0)), 100000000, 0, -484)), (("src/ctypes/ctypes_static.mli", 41, 1250, 1252), ("src/ctypes/ctypes_static.mli", 41, 1250, 1306), 0), 0, Tag1 ("Ctypes_static", 42))], 0), 1, 0, [63], [0], 0, 0, (("src/ctypes/ctypes_static.mli", 29, 612, 612), ("src/ctypes/ctypes_static.mli", 41, 1250, 1306), 0), 0, 0, 0, Tag1 ("Ctypes_static", 16)), 1, 0); Tag1 (("carray", 1460), ([((("a")), 100000000, 0, -443)], 1, [[(("astart", 328), 0, (Tag3 ((("ptr", 1466)), [((("a")), 100000000, 0, -443)], (0)), 100000000, 0, -442), (("src/ctypes/ctypes_static.mli", 42, 1307, 1325), ("src/ctypes/ctypes_static.mli", 42, 1307, 1341), 0), 0, Tag1 ("Ctypes_static", 43)); (("alength", 329), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -444), (("src/ctypes/ctypes_static.mli", 42, 1307, 1342), ("src/ctypes/ctypes_static.mli", 42, 1307, 1355), 0), 0, Tag1 ("Ctypes_static", 44))]], 1, 0, [63], [0], 0, 0, (("src/ctypes/ctypes_static.mli", 42, 1307, 1307), ("src/ctypes/ctypes_static.mli", 42, 1307, 1357), 0), 0, 0, 0, Tag1 ("Ctypes_static", 17)), 2, 0); Tag1 (("structured", 1461), ([((("a")), 100000000, 0, -440); ((("kind")), 100000000, 0, -441)], 2, ([(("structured", 330), 0, (Tag3 ((("ptr", 1466)), [(Tag3 ((("structured", 1461)), [((("a")), 100000000, 0, -440); ((("kind")), 100000000, 0, -441)], (0)), 100000000, 0, -439)], (0)), 100000000, 0, -438), (("src/ctypes/ctypes_static.mli", 43, 1358, 1389), ("src/ctypes/ctypes_static.mli", 43, 1358, 1428), 0), 0, Tag1 ("Ctypes_static", 45))], (0)), 1, 0, [63; 63], [0; 0], 0, 0, (("src/ctypes/ctypes_static.mli", 43, 1358, 1358), ("src/ctypes/ctypes_static.mli", 43, 1358, 1442), 0), [(("unboxed", (("src/ctypes/ctypes_static.mli", 43, 1358, 1434), ("src/ctypes/ctypes_static.mli", 43, 1358, 1441), 0)), (0), (("src/ctypes/ctypes_static.mli", 43, 1358, 1431), ("src/ctypes/ctypes_static.mli", 43, 1358, 1442), 0))], 0, 0, Tag1 ("Ctypes_static", 18)), 2, 0); Tag1 (("union", 1462), ([((("a")), 100000000, 0, -435)], 1, 0, 1, ((Tag3 ((("structured", 1461)), [((("a")), 100000000, 0, -435); (Tag8 (([("Union", (0))], (0, 100000000, 0, -437), 1, 0, 0)), 100000000, 0, -436)], (0)), 100000000, 0, -434)), [63], [0], 0, 0, (("src/ctypes/ctypes_static.mli", 44, 1443, 1443), ("src/ctypes/ctypes_static.mli", 44, 1443, 1483), 0), 0, 0, 0, Tag1 ("Ctypes_static", 19)), 2, 0); Tag1 (("structure", 1463), ([((("a")), 100000000, 0, -431)], 1, 0, 1, ((Tag3 ((("structured", 1461)), [((("a")), 100000000, 0, -431); (Tag8 (([("Struct", (0))], (0, 100000000, 0, -433), 1, 0, 0)), 100000000, 0, -432)], (0)), 100000000, 0, -430)), [63], [0], 0, 0, (("src/ctypes/ctypes_static.mli", 45, 1484, 1484), ("src/ctypes/ctypes_static.mli", 45, 1484, 1529), 0), 0, 0, 0, Tag1 ("Ctypes_static", 20)), 2, 0); Tag1 (("abstract", 1464), ([((("a")), 100000000, 0, -427)], 1, 0, 1, ((Tag3 ((("structured", 1461)), [((("a")), 100000000, 0, -427); (Tag8 (([("Abstract", (0))], (0, 100000000, 0, -429), 1, 0, 0)), 100000000, 0, -428)], (0)), 100000000, 0, -426)), [63], [0], 0, 0, (("src/ctypes/ctypes_static.mli", 46, 1530, 1530), ("src/ctypes/ctypes_static.mli", 46, 1530, 1576), 0), 0, 0, 0, Tag1 ("Ctypes_static", 21)), 2, 0); Tag1 (("pointer", 1465), ([((("_")), 100000000, 0, -424); ((("_")), 100000000, 0, -425)], 2, Tag1 ([(("CPointer", 331), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Ctypes_ptr")), "Fat"), "t"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Obj"), "t"), 0, (0)), 100000000, 0, -416)], (0)), 100000000, 0, -415); (Tag3 ((("typ", 1459)), [((("a")), 100000000, 0, -411)], (0)), 100000000, 0, -417)], (0)), 100000000, 0, -414)]), ((Tag3 ((("pointer", 1465)), [((("a")), 100000000, 0, -411); (Tag8 (([("C", (0))], (0, 100000000, 0, -413), 1, 0, 0)), 100000000, 0, -412)], (0)), 100000000, 0, -410)), (("src/ctypes/ctypes_static.mli", 48, 1598, 1600), ("src/ctypes/ctypes_static.mli", 48, 1598, 1671), 0), 0, Tag1 ("Ctypes_static", 46)); (("OCamlRef", 387), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -422); ((("a")), 100000000, 0, -419); (Tag3 ((("ocaml_type", 1455)), [((("a")), 100000000, 0, -419)], (0)), 100000000, 0, -423)]), ((Tag3 ((("pointer", 1465)), [((("a")), 100000000, 0, -419); (Tag8 (([("OCaml", (0))], (0, 100000000, 0, -421), 1, 0, 0)), 100000000, 0, -420)], (0)), 100000000, 0, -418)), (("src/ctypes/ctypes_static.mli", 49, 1672, 1672), ("src/ctypes/ctypes_static.mli", 49, 1672, 1735), 0), 0, Tag1 ("Ctypes_static", 47))], 0), 1, 0, [63; 63], [0; 0], 0, 0, (("src/ctypes/ctypes_static.mli", 47, 1577, 1577), ("src/ctypes/ctypes_static.mli", 49, 1672, 1735), 0), 0, 0, 0, Tag1 ("Ctypes_static", 22)), 2, 0); Tag1 (("ptr", 1466), ([((("a")), 100000000, 0, -407)], 1, 0, 1, ((Tag3 ((("pointer", 1465)), [((("a")), 100000000, 0, -407); (Tag8 (([("C", (0))], (0, 100000000, 0, -409), 1, 0, 0)), 100000000, 0, -408)], (0)), 100000000, 0, -406)), [63], [0], 0, 0, (("src/ctypes/ctypes_static.mli", 50, 1736, 1736), ("src/ctypes/ctypes_static.mli", 50, 1736, 1767), 0), 0, 0, 0, Tag1 ("Ctypes_static", 23)), 2, 0); Tag1 (("ocaml", 1467), ([((("a")), 100000000, 0, -403)], 1, 0, 1, ((Tag3 ((("pointer", 1465)), [((("a")), 100000000, 0, -403); (Tag8 (([("OCaml", (0))], (0, 100000000, 0, -405), 1, 0, 0)), 100000000, 0, -404)], (0)), 100000000, 0, -402)), [63], [0], 0, 0, (("src/ctypes/ctypes_static.mli", 51, 1768, 1768), ("src/ctypes/ctypes_static.mli", 51, 1768, 1805), 0), 0, 0, 0, Tag1 ("Ctypes_static", 24)), 2, 0); Tag1 (("static_funptr", 1468), ([((("a")), 100000000, 0, -401)], 1, Tag1 ([(("Static_funptr", 388), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Ctypes_ptr")), "Fat"), "t"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Obj"), "t"), 0, (0)), 100000000, 0, -399)], (0)), 100000000, 0, -398); (Tag3 ((("fn", 1474)), [((("a")), 100000000, 0, -396)], (0)), 100000000, 0, -400)], (0)), 100000000, 0, -397)]), ((Tag3 ((("static_funptr", 1468)), [((("a")), 100000000, 0, -396)], (0)), 100000000, 0, -395)), (("src/ctypes/ctypes_static.mli", 53, 1829, 1831), ("src/ctypes/ctypes_static.mli", 53, 1829, 1905), 0), 0, Tag1 ("Ctypes_static", 48))], 0), 1, 0, [15], [0], 0, 0, (("src/ctypes/ctypes_static.mli", 52, 1806, 1806), ("src/ctypes/ctypes_static.mli", 53, 1829, 1905), 0), 0, 0, 1, Tag1 ("Ctypes_static", 25)), 2, 0); Tag1 (("view", 1469), ([((("a")), 100000000, 0, -378); ((("b")), 100000000, 0, -379)], 2, [[(("read", 389), 0, (Tag1 (0, ((("b")), 100000000, 0, -379), ((("a")), 100000000, 0, -378), 0), 100000000, 0, -377), (("src/ctypes/ctypes_static.mli", 55, 1928, 1930), ("src/ctypes/ctypes_static.mli", 55, 1928, 1946), 0), 0, Tag1 ("Ctypes_static", 49)); (("write", 390), 0, (Tag1 (0, ((("a")), 100000000, 0, -378), ((("b")), 100000000, 0, -379), 0), 100000000, 0, -380), (("src/ctypes/ctypes_static.mli", 56, 1947, 1949), ("src/ctypes/ctypes_static.mli", 56, 1947, 1966), 0), 0, Tag1 ("Ctypes_static", 50)); (("format_typ", 547), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -388), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -387), 0), 100000000, 0, -386), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -385), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -384), 0), 100000000, 0, -383), 0), 100000000, 0, -382)], (0)), 100000000, 0, -381), (("src/ctypes/ctypes_static.mli", 57, 1967, 1969), ("src/ctypes/ctypes_static.mli", 57, 1967, 2045), 0), 0, Tag1 ("Ctypes_static", 51)); (("format", 548), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -393), (Tag1 (0, ((("a")), 100000000, 0, -378), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -392), 0), 100000000, 0, -391), 0), 100000000, 0, -390)], (0)), 100000000, 0, -389), (("src/ctypes/ctypes_static.mli", 58, 2046, 2048), ("src/ctypes/ctypes_static.mli", 58, 2046, 2096), 0), 0, Tag1 ("Ctypes_static", 52)); (("ty", 549), 0, (Tag3 ((("typ", 1459)), [((("b")), 100000000, 0, -379)], (0)), 100000000, 0, -394), (("src/ctypes/ctypes_static.mli", 59, 2097, 2099), ("src/ctypes/ctypes_static.mli", 59, 2097, 2110), 0), 0, Tag1 ("Ctypes_static", 53))]], 1, 0, [63; 63], [0; 0], 0, 0, (("src/ctypes/ctypes_static.mli", 54, 1906, 1906), ("src/ctypes/ctypes_static.mli", 60, 2111, 2112), 0), 0, 0, 0, Tag1 ("Ctypes_static", 26)), 2, 0); Tag1 (("field", 1470), ([((("a")), 100000000, 0, -373); ((("s")), 100000000, 0, -376)], 2, [[(("ftype", 550), 0, (Tag3 ((("typ", 1459)), [((("a")), 100000000, 0, -373)], (0)), 100000000, 0, -372), (("src/ctypes/ctypes_static.mli", 62, 2136, 2138), ("src/ctypes/ctypes_static.mli", 62, 2136, 2152), 0), 0, Tag1 ("Ctypes_static", 54)); (("foffset", 551), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -374), (("src/ctypes/ctypes_static.mli", 63, 2153, 2155), ("src/ctypes/ctypes_static.mli", 63, 2153, 2168), 0), 0, Tag1 ("Ctypes_static", 55)); (("fname", 552), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -375), (("src/ctypes/ctypes_static.mli", 64, 2169, 2171), ("src/ctypes/ctypes_static.mli", 64, 2169, 2185), 0), 0, Tag1 ("Ctypes_static", 56))]], 1, 0, [63; 8], [0; 0], 0, 0, (("src/ctypes/ctypes_static.mli", 61, 2113, 2113), ("src/ctypes/ctypes_static.mli", 65, 2186, 2187), 0), 0, 0, 0, Tag1 ("Ctypes_static", 27)), 2, 0); Tag1 (("structure_type", 1471), ([((("a")), 100000000, 0, -368)], 1, [[(("tag", 553), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -366), (("src/ctypes/ctypes_static.mli", 67, 2214, 2216), ("src/ctypes/ctypes_static.mli", 67, 2214, 2228), 0), 0, Tag1 ("Ctypes_static", 57)); (("spec", 554), 1, (Tag3 ((("structspec", 1458)), [((("a")), 100000000, 0, -368)], (0)), 100000000, 0, -367), (("src/ctypes/ctypes_static.mli", 68, 2229, 2231), ("src/ctypes/ctypes_static.mli", 68, 2229, 2259), 0), 0, Tag1 ("Ctypes_static", 58)); (("fields", 555), 1, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("boxed_field", 1473)), [(Tag3 ((("structure", 1463)), [((("a")), 100000000, 0, -368)], (0)), 100000000, 0, -371)], (0)), 100000000, 0, -370)], (0)), 100000000, 0, -369), (("src/ctypes/ctypes_static.mli", 69, 2260, 2262), ("src/ctypes/ctypes_static.mli", 69, 2260, 2309), 0), 0, Tag1 ("Ctypes_static", 59))]], 1, 0, [63], [0], 0, 0, (("src/ctypes/ctypes_static.mli", 66, 2188, 2188), ("src/ctypes/ctypes_static.mli", 70, 2310, 2311), 0), 0, 0, 0, Tag1 ("Ctypes_static", 28)), 2, 0); Tag1 (("union_type", 1472), ([((("a")), 100000000, 0, -365)], 1, [[(("utag", 556), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -359), (("src/ctypes/ctypes_static.mli", 72, 2334, 2336), ("src/ctypes/ctypes_static.mli", 72, 2334, 2349), 0), 0, Tag1 ("Ctypes_static", 60)); (("uspec", 557), 1, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("structured_spec", 1457)), 0, (0)), 100000000, 0, -361)], (0)), 100000000, 0, -360), (("src/ctypes/ctypes_static.mli", 73, 2350, 2352), ("src/ctypes/ctypes_static.mli", 73, 2350, 2390), 0), 0, Tag1 ("Ctypes_static", 61)); (("ufields", 558), 1, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("boxed_field", 1473)), [(Tag3 ((("union", 1462)), [((("a")), 100000000, 0, -365)], (0)), 100000000, 0, -364)], (0)), 100000000, 0, -363)], (0)), 100000000, 0, -362), (("src/ctypes/ctypes_static.mli", 74, 2391, 2393), ("src/ctypes/ctypes_static.mli", 74, 2391, 2437), 0), 0, Tag1 ("Ctypes_static", 62))]], 1, 0, [63], [0], 0, 0, (("src/ctypes/ctypes_static.mli", 71, 2312, 2312), ("src/ctypes/ctypes_static.mli", 75, 2438, 2439), 0), 0, 0, 0, Tag1 ("Ctypes_static", 29)), 2, 0); Tag1 (("boxed_field", 1473), ([((("s")), 100000000, 0, -358)], 1, Tag1 ([(("BoxedField", 559), ([(Tag3 ((("field", 1470)), [((("a")), 100000000, 0, -357); ((("s")), 100000000, 0, -355)], (0)), 100000000, 0, -356)]), ((Tag3 ((("boxed_field", 1473)), [((("s")), 100000000, 0, -355)], (0)), 100000000, 0, -354)), (("src/ctypes/ctypes_static.mli", 76, 2440, 2461), ("src/ctypes/ctypes_static.mli", 76, 2440, 2506), 0), 0, Tag1 ("Ctypes_static", 63))], 0), 1, 0, [15], [0], 0, 0, (("src/ctypes/ctypes_static.mli", 76, 2440, 2440), ("src/ctypes/ctypes_static.mli", 76, 2440, 2506), 0), 0, 0, 1, Tag1 ("Ctypes_static", 30)), 2, 0); Tag1 (("fn", 1474), ([((("_")), 100000000, 0, -353)], 1, Tag1 ([(("Returns", 560), ([(Tag3 ((("typ", 1459)), [((("a")), 100000000, 0, -345)], (0)), 100000000, 0, -346)]), ((Tag3 ((("fn", 1474)), [((("a")), 100000000, 0, -345)], (0)), 100000000, 0, -344)), (("src/ctypes/ctypes_static.mli", 78, 2518, 2520), ("src/ctypes/ctypes_static.mli", 78, 2518, 2550), 0), 0, Tag1 ("Ctypes_static", 64)); (("Function", 561), ([(Tag3 ((("typ", 1459)), [((("a")), 100000000, 0, -350)], (0)), 100000000, 0, -351); (Tag3 ((("fn", 1474)), [((("b")), 100000000, 0, -349)], (0)), 100000000, 0, -352)]), ((Tag3 ((("fn", 1474)), [(Tag1 (0, ((("a")), 100000000, 0, -350), ((("b")), 100000000, 0, -349), 0), 100000000, 0, -348)], (0)), 100000000, 0, -347)), (("src/ctypes/ctypes_static.mli", 79, 2551, 2553), ("src/ctypes/ctypes_static.mli", 79, 2551, 2598), 0), 0, Tag1 ("Ctypes_static", 65))], 0), 1, 0, [63], [0], 0, 0, (("src/ctypes/ctypes_static.mli", 77, 2507, 2507), ("src/ctypes/ctypes_static.mli", 79, 2551, 2598), 0), 0, 0, 0, Tag1 ("Ctypes_static", 31)), 2, 0); Tag1 (("bigarray_class", 1475), ([((("_")), 100000000, 0, -343)], 1, Tag1 ([(("Genarray", 760), (0), ((Tag3 ((("bigarray_class", 1475)), [(Tag4 ((Tag5 ("ba_repr", 1, (Tag10 (((("b")), 100000000, 0, -265), 0), 100000000, 0, -271), (Tag5 ("bigarray", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bigarray_compat")), "Genarray"), "t"), [((("a")), 100000000, 0, -264); ((("b")), 100000000, 0, -265); ((("l")), 100000000, 0, -266)], (0)), 100000000, 0, -263), 0), 100000000, 0, -262), (Tag5 ("carray", 1, (Tag10 ((Tag3 ((("carray", 1460)), [((("a")), 100000000, 0, -264)], (0)), 100000000, 0, -268), 0), 100000000, 0, -267), (Tag5 ("dims", 1, (Tag10 ((Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -261)], (0)), 100000000, 0, -260), 0), 100000000, 0, -259), (Tag5 ("element", 1, (Tag10 (((("a")), 100000000, 0, -264), 0), 100000000, 0, -270), (Tag5 ("layout", 1, (Tag10 (((("l")), 100000000, 0, -266), 0), 100000000, 0, -269), (0, 100000000, 0, -258)), 100000000, 0, 76)), 100000000, 0, 77)), 100000000, 0, 78)), 100000000, 0, 79)), 100000000, 0, 80)), 100000000, 0, -252), (0)), 100000000, 0, -251)], (0)), 100000000, 0, -250)), (("src/ctypes/ctypes_static.mli", 82, 2624, 2626), ("src/ctypes/ctypes_static.mli", 88, 2763, 2801), 0), 0, Tag1 ("Ctypes_static", 67)); (("Array1", 879), (0), ((Tag3 ((("bigarray_class", 1475)), [(Tag4 ((Tag5 ("ba_repr", 1, (Tag10 (((("b")), 100000000, 0, -286), 0), 100000000, 0, -292), (Tag5 ("bigarray", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bigarray_compat")), "Array1"), "t"), [((("a")), 100000000, 0, -285); ((("b")), 100000000, 0, -286); ((("l")), 100000000, 0, -287)], (0)), 100000000, 0, -284), 0), 100000000, 0, -283), (Tag5 ("carray", 1, (Tag10 ((Tag3 ((("carray", 1460)), [((("a")), 100000000, 0, -285)], (0)), 100000000, 0, -289), 0), 100000000, 0, -288), (Tag5 ("dims", 1, (Tag10 ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -282), 0), 100000000, 0, -281), (Tag5 ("element", 1, (Tag10 (((("a")), 100000000, 0, -285), 0), 100000000, 0, -291), (Tag5 ("layout", 1, (Tag10 (((("l")), 100000000, 0, -287), 0), 100000000, 0, -290), (0, 100000000, 0, -280)), 100000000, 0, 82)), 100000000, 0, 83)), 100000000, 0, 84)), 100000000, 0, 85)), 100000000, 0, 86)), 100000000, 0, -274), (0)), 100000000, 0, -273)], (0)), 100000000, 0, -272)), (("src/ctypes/ctypes_static.mli", 89, 2802, 2802), ("src/ctypes/ctypes_static.mli", 95, 2931, 2969), 0), 0, Tag1 ("Ctypes_static", 68)); (("Array2", 897), (0), ((Tag3 ((("bigarray_class", 1475)), [(Tag4 ((Tag5 ("ba_repr", 1, (Tag10 (((("b")), 100000000, 0, -309), 0), 100000000, 0, -316), (Tag5 ("bigarray", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bigarray_compat")), "Array2"), "t"), [((("a")), 100000000, 0, -308); ((("b")), 100000000, 0, -309); ((("l")), 100000000, 0, -310)], (0)), 100000000, 0, -307), 0), 100000000, 0, -306), (Tag5 ("carray", 1, (Tag10 ((Tag3 ((("carray", 1460)), [(Tag3 ((("carray", 1460)), [((("a")), 100000000, 0, -308)], (0)), 100000000, 0, -313)], (0)), 100000000, 0, -312), 0), 100000000, 0, -311), (Tag5 ("dims", 1, (Tag10 ((Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -304); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -305)]), 100000000, 0, -303), 0), 100000000, 0, -302), (Tag5 ("element", 1, (Tag10 (((("a")), 100000000, 0, -308), 0), 100000000, 0, -315), (Tag5 ("layout", 1, (Tag10 (((("l")), 100000000, 0, -310), 0), 100000000, 0, -314), (0, 100000000, 0, -301)), 100000000, 0, 88)), 100000000, 0, 89)), 100000000, 0, 90)), 100000000, 0, 91)), 100000000, 0, 92)), 100000000, 0, -295), (0)), 100000000, 0, -294)], (0)), 100000000, 0, -293)), (("src/ctypes/ctypes_static.mli", 96, 2970, 2970), ("src/ctypes/ctypes_static.mli", 102, 3105, 3150), 0), 0, Tag1 ("Ctypes_static", 69)); (("Array3", 918), (0), ((Tag3 ((("bigarray_class", 1475)), [(Tag4 ((Tag5 ("ba_repr", 1, (Tag10 (((("b")), 100000000, 0, -334), 0), 100000000, 0, -342), (Tag5 ("bigarray", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bigarray_compat")), "Array3"), "t"), [((("a")), 100000000, 0, -333); ((("b")), 100000000, 0, -334); ((("l")), 100000000, 0, -335)], (0)), 100000000, 0, -332), 0), 100000000, 0, -331), (Tag5 ("carray", 1, (Tag10 ((Tag3 ((("carray", 1460)), [(Tag3 ((("carray", 1460)), [(Tag3 ((("carray", 1460)), [((("a")), 100000000, 0, -333)], (0)), 100000000, 0, -339)], (0)), 100000000, 0, -338)], (0)), 100000000, 0, -337), 0), 100000000, 0, -336), (Tag5 ("dims", 1, (Tag10 ((Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -328); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -329); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -330)]), 100000000, 0, -327), 0), 100000000, 0, -326), (Tag5 ("element", 1, (Tag10 (((("a")), 100000000, 0, -333), 0), 100000000, 0, -341), (Tag5 ("layout", 1, (Tag10 (((("l")), 100000000, 0, -335), 0), 100000000, 0, -340), (0, 100000000, 0, -325)), 100000000, 0, 94)), 100000000, 0, 95)), 100000000, 0, 96)), 100000000, 0, 97)), 100000000, 0, 98)), 100000000, 0, -319), (0)), 100000000, 0, -318)], (0)), 100000000, 0, -317)), (("src/ctypes/ctypes_static.mli", 103, 3151, 3151), ("src/ctypes/ctypes_static.mli", 109, 3292, 3344), 0), 0, Tag1 ("Ctypes_static", 70))], 0), 1, 0, [63], [0], 0, 0, (("src/ctypes/ctypes_static.mli", 81, 2600, 2600), ("src/ctypes/ctypes_static.mli", 109, 3292, 3344), 0), 0, 1, 0, Tag1 ("Ctypes_static", 66)), 1, 0); Tag1 (("boxed_typ", 1476), (0, 0, Tag1 ([(("BoxedType", 1021), ([(Tag3 ((("typ", 1459)), [((("a")), 100000000, 0, -249)], (0)), 100000000, 0, -248)]), ((Tag3 ((("boxed_typ", 1476)), 0, (0)), 100000000, 0, -247)), (("src/ctypes/ctypes_static.mli", 111, 3346, 3363), ("src/ctypes/ctypes_static.mli", 111, 3346, 3394), 0), 0, Tag1 ("Ctypes_static", 72))], 0), 1, 0, 0, 0, 0, 0, (("src/ctypes/ctypes_static.mli", 111, 3346, 3346), ("src/ctypes/ctypes_static.mli", 111, 3346, 3394), 0), 0, 0, 1, Tag1 ("Ctypes_static", 71)), 1, 0); (("sizeof", 1477), ((Tag1 (0, (Tag3 ((("typ", 1459)), [((("a")), 100000000, 0, -246)], (0)), 100000000, 0, -245), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -244), 0), 100000000, 0, -243), 0, (("src/ctypes/ctypes_static.mli", 113, 3396, 3396), ("src/ctypes/ctypes_static.mli", 113, 3396, 3422), 0), 0, Tag1 ("Ctypes_static", 73)), 0); (("alignment", 1478), ((Tag1 (0, (Tag3 ((("typ", 1459)), [((("a")), 100000000, 0, -242)], (0)), 100000000, 0, -241), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -240), 0), 100000000, 0, -239), 0, (("src/ctypes/ctypes_static.mli", 114, 3423, 3423), ("src/ctypes/ctypes_static.mli", 114, 3423, 3452), 0), 0, Tag1 ("Ctypes_static", 74)), 0); (("passable", 1479), ((Tag1 (0, (Tag3 ((("typ", 1459)), [((("a")), 100000000, 0, -238)], (0)), 100000000, 0, -237), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -236), 0), 100000000, 0, -235), 0, (("src/ctypes/ctypes_static.mli", 115, 3453, 3453), ("src/ctypes/ctypes_static.mli", 115, 3453, 3482), 0), 0, Tag1 ("Ctypes_static", 75)), 0); (("ocaml_value", 1480), ((Tag1 (0, (Tag3 ((("typ", 1459)), [((("a")), 100000000, 0, -234)], (0)), 100000000, 0, -233), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -232), 0), 100000000, 0, -231), 0, (("src/ctypes/ctypes_static.mli", 116, 3483, 3483), ("src/ctypes/ctypes_static.mli", 116, 3483, 3515), 0), 0, Tag1 ("Ctypes_static", 76)), 0); (("has_ocaml_argument", 1481), ((Tag1 (0, (Tag3 ((("fn", 1474)), [((("a")), 100000000, 0, -230)], (0)), 100000000, 0, -229), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -228), 0), 100000000, 0, -227), 0, (("src/ctypes/ctypes_static.mli", 117, 3516, 3516), ("src/ctypes/ctypes_static.mli", 117, 3516, 3554), 0), 0, Tag1 ("Ctypes_static", 77)), 0); (("void", 1482), ((Tag3 ((("typ", 1459)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -226)], (0)), 100000000, 0, -225), 0, (("src/ctypes/ctypes_static.mli", 119, 3556, 3556), ("src/ctypes/ctypes_static.mli", 119, 3556, 3575), 0), 0, Tag1 ("Ctypes_static", 78)), 0); (("char", 1483), ((Tag3 ((("typ", 1459)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -224)], (0)), 100000000, 0, -223), 0, (("src/ctypes/ctypes_static.mli", 120, 3576, 3576), ("src/ctypes/ctypes_static.mli", 120, 3576, 3595), 0), 0, Tag1 ("Ctypes_static", 79)), 0); (("schar", 1484), ((Tag3 ((("typ", 1459)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -222)], (0)), 100000000, 0, -221), 0, (("src/ctypes/ctypes_static.mli", 121, 3596, 3596), ("src/ctypes/ctypes_static.mli", 121, 3596, 3615), 0), 0, Tag1 ("Ctypes_static", 80)), 0); (("float", 1485), ((Tag3 ((("typ", 1459)), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -220)], (0)), 100000000, 0, -219), 0, (("src/ctypes/ctypes_static.mli", 122, 3616, 3616), ("src/ctypes/ctypes_static.mli", 122, 3616, 3637), 0), 0, Tag1 ("Ctypes_static", 81)), 0); (("double", 1486), ((Tag3 ((("typ", 1459)), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -218)], (0)), 100000000, 0, -217), 0, (("src/ctypes/ctypes_static.mli", 123, 3638, 3638), ("src/ctypes/ctypes_static.mli", 123, 3638, 3660), 0), 0, Tag1 ("Ctypes_static", 82)), 0); (("ldouble", 1487), ((Tag3 ((("typ", 1459)), [(Tag3 (Tag1 ((Tag2 ("LDouble")), "t"), 0, (0)), 100000000, 0, -216)], (0)), 100000000, 0, -215), 0, (("src/ctypes/ctypes_static.mli", 124, 3661, 3661), ("src/ctypes/ctypes_static.mli", 124, 3661, 3688), 0), 0, Tag1 ("Ctypes_static", 83)), 0); (("complex32", 1488), ((Tag3 ((("typ", 1459)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Complex"), "t"), 0, (0)), 100000000, 0, -214)], (0)), 100000000, 0, -213), 0, (("src/ctypes/ctypes_static.mli", 125, 3689, 3689), ("src/ctypes/ctypes_static.mli", 125, 3689, 3718), 0), 0, Tag1 ("Ctypes_static", 84)), 0); (("complex64", 1489), ((Tag3 ((("typ", 1459)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Complex"), "t"), 0, (0)), 100000000, 0, -212)], (0)), 100000000, 0, -211), 0, (("src/ctypes/ctypes_static.mli", 126, 3719, 3719), ("src/ctypes/ctypes_static.mli", 126, 3719, 3748), 0), 0, Tag1 ("Ctypes_static", 85)), 0); (("complexld", 1490), ((Tag3 ((("typ", 1459)), [(Tag3 (Tag1 ((Tag2 ("ComplexL")), "t"), 0, (0)), 100000000, 0, -210)], (0)), 100000000, 0, -209), 0, (("src/ctypes/ctypes_static.mli", 127, 3749, 3749), ("src/ctypes/ctypes_static.mli", 127, 3749, 3779), 0), 0, Tag1 ("Ctypes_static", 86)), 0); (("short", 1491), ((Tag3 ((("typ", 1459)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -208)], (0)), 100000000, 0, -207), 0, (("src/ctypes/ctypes_static.mli", 128, 3780, 3780), ("src/ctypes/ctypes_static.mli", 128, 3780, 3799), 0), 0, Tag1 ("Ctypes_static", 87)), 0); (("int", 1492), ((Tag3 ((("typ", 1459)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -206)], (0)), 100000000, 0, -205), 0, (("src/ctypes/ctypes_static.mli", 129, 3800, 3800), ("src/ctypes/ctypes_static.mli", 129, 3800, 3817), 0), 0, Tag1 ("Ctypes_static", 88)), 0); (("sint", 1493), ((Tag3 ((("typ", 1459)), [(Tag3 (Tag1 ((Tag2 ("Signed")), "sint"), 0, (0)), 100000000, 0, -204)], (0)), 100000000, 0, -203), 0, (("src/ctypes/ctypes_static.mli", 130, 3818, 3818), ("src/ctypes/ctypes_static.mli", 130, 3818, 3844), 0), 0, Tag1 ("Ctypes_static", 89)), 0); (("long", 1494), ((Tag3 ((("typ", 1459)), [(Tag3 (Tag1 ((Tag2 ("Signed")), "long"), 0, (0)), 100000000, 0, -202)], (0)), 100000000, 0, -201), 0, (("src/ctypes/ctypes_static.mli", 131, 3845, 3845), ("src/ctypes/ctypes_static.mli", 131, 3845, 3871), 0), 0, Tag1 ("Ctypes_static", 90)), 0); (("llong", 1495), ((Tag3 ((("typ", 1459)), [(Tag3 (Tag1 ((Tag2 ("Signed")), "llong"), 0, (0)), 100000000, 0, -200)], (0)), 100000000, 0, -199), 0, (("src/ctypes/ctypes_static.mli", 132, 3872, 3872), ("src/ctypes/ctypes_static.mli", 132, 3872, 3900), 0), 0, Tag1 ("Ctypes_static", 91)), 0); (("nativeint", 1496), ((Tag3 ((("typ", 1459)), [(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -198)], (0)), 100000000, 0, -197), 0, (("src/ctypes/ctypes_static.mli", 133, 3901, 3901), ("src/ctypes/ctypes_static.mli", 133, 3901, 3930), 0), 0, Tag1 ("Ctypes_static", 92)), 0); (("int8_t", 1497), ((Tag3 ((("typ", 1459)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -196)], (0)), 100000000, 0, -195), 0, (("src/ctypes/ctypes_static.mli", 134, 3931, 3931), ("src/ctypes/ctypes_static.mli", 134, 3931, 3951), 0), 0, Tag1 ("Ctypes_static", 93)), 0); (("int16_t", 1498), ((Tag3 ((("typ", 1459)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -194)], (0)), 100000000, 0, -193), 0, (("src/ctypes/ctypes_static.mli", 135, 3952, 3952), ("src/ctypes/ctypes_static.mli", 135, 3952, 3973), 0), 0, Tag1 ("Ctypes_static", 94)), 0); (("int32_t", 1499), ((Tag3 ((("typ", 1459)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Signed")), "Int32"), "t"), 0, (0)), 100000000, 0, -192)], (0)), 100000000, 0, -191), 0, (("src/ctypes/ctypes_static.mli", 136, 3974, 3974), ("src/ctypes/ctypes_static.mli", 136, 3974, 4006), 0), 0, Tag1 ("Ctypes_static", 95)), 0); (("int64_t", 1500), ((Tag3 ((("typ", 1459)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Signed")), "Int64"), "t"), 0, (0)), 100000000, 0, -190)], (0)), 100000000, 0, -189), 0, (("src/ctypes/ctypes_static.mli", 137, 4007, 4007), ("src/ctypes/ctypes_static.mli", 137, 4007, 4039), 0), 0, Tag1 ("Ctypes_static", 96)), 0); (("camlint", 1501), ((Tag3 ((("typ", 1459)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -188)], (0)), 100000000, 0, -187), 0, (("src/ctypes/ctypes_static.mli", 138, 4040, 4040), ("src/ctypes/ctypes_static.mli", 138, 4040, 4061), 0), 0, Tag1 ("Ctypes_static", 97)), 0); (("uchar", 1502), ((Tag3 ((("typ", 1459)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "uchar"), 0, (0)), 100000000, 0, -186)], (0)), 100000000, 0, -185), 0, (("src/ctypes/ctypes_static.mli", 139, 4062, 4062), ("src/ctypes/ctypes_static.mli", 139, 4062, 4092), 0), 0, Tag1 ("Ctypes_static", 98)), 0); (("bool", 1503), ((Tag3 ((("typ", 1459)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -184)], (0)), 100000000, 0, -183), 0, (("src/ctypes/ctypes_static.mli", 140, 4093, 4093), ("src/ctypes/ctypes_static.mli", 140, 4093, 4112), 0), 0, Tag1 ("Ctypes_static", 99)), 0); (("uint8_t", 1504), ((Tag3 ((("typ", 1459)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Unsigned")), "UInt8"), "t"), 0, (0)), 100000000, 0, -182)], (0)), 100000000, 0, -181), 0, (("src/ctypes/ctypes_static.mli", 141, 4113, 4113), ("src/ctypes/ctypes_static.mli", 141, 4113, 4147), 0), 0, Tag1 ("Ctypes_static", 100)), 0); (("uint16_t", 1505), ((Tag3 ((("typ", 1459)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Unsigned")), "UInt16"), "t"), 0, (0)), 100000000, 0, -180)], (0)), 100000000, 0, -179), 0, (("src/ctypes/ctypes_static.mli", 142, 4148, 4148), ("src/ctypes/ctypes_static.mli", 142, 4148, 4184), 0), 0, Tag1 ("Ctypes_static", 101)), 0); (("uint32_t", 1506), ((Tag3 ((("typ", 1459)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Unsigned")), "UInt32"), "t"), 0, (0)), 100000000, 0, -178)], (0)), 100000000, 0, -177), 0, (("src/ctypes/ctypes_static.mli", 143, 4185, 4185), ("src/ctypes/ctypes_static.mli", 143, 4185, 4221), 0), 0, Tag1 ("Ctypes_static", 102)), 0); (("uint64_t", 1507), ((Tag3 ((("typ", 1459)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Unsigned")), "UInt64"), "t"), 0, (0)), 100000000, 0, -176)], (0)), 100000000, 0, -175), 0, (("src/ctypes/ctypes_static.mli", 144, 4222, 4222), ("src/ctypes/ctypes_static.mli", 144, 4222, 4258), 0), 0, Tag1 ("Ctypes_static", 103)), 0); (("size_t", 1508), ((Tag3 ((("typ", 1459)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "size_t"), 0, (0)), 100000000, 0, -174)], (0)), 100000000, 0, -173), 0, (("src/ctypes/ctypes_static.mli", 145, 4259, 4259), ("src/ctypes/ctypes_static.mli", 145, 4259, 4291), 0), 0, Tag1 ("Ctypes_static", 104)), 0); (("ushort", 1509), ((Tag3 ((("typ", 1459)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "ushort"), 0, (0)), 100000000, 0, -172)], (0)), 100000000, 0, -171), 0, (("src/ctypes/ctypes_static.mli", 146, 4292, 4292), ("src/ctypes/ctypes_static.mli", 146, 4292, 4324), 0), 0, Tag1 ("Ctypes_static", 105)), 0); (("uint", 1510), ((Tag3 ((("typ", 1459)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "uint"), 0, (0)), 100000000, 0, -170)], (0)), 100000000, 0, -169), 0, (("src/ctypes/ctypes_static.mli", 147, 4325, 4325), ("src/ctypes/ctypes_static.mli", 147, 4325, 4353), 0), 0, Tag1 ("Ctypes_static", 106)), 0); (("ulong", 1511), ((Tag3 ((("typ", 1459)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "ulong"), 0, (0)), 100000000, 0, -168)], (0)), 100000000, 0, -167), 0, (("src/ctypes/ctypes_static.mli", 148, 4354, 4354), ("src/ctypes/ctypes_static.mli", 148, 4354, 4384), 0), 0, Tag1 ("Ctypes_static", 107)), 0); (("ullong", 1512), ((Tag3 ((("typ", 1459)), [(Tag3 (Tag1 ((Tag2 ("Unsigned")), "ullong"), 0, (0)), 100000000, 0, -166)], (0)), 100000000, 0, -165), 0, (("src/ctypes/ctypes_static.mli", 149, 4385, 4385), ("src/ctypes/ctypes_static.mli", 149, 4385, 4417), 0), 0, Tag1 ("Ctypes_static", 108)), 0); (("array", 1513), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -164), (Tag1 (0, (Tag3 ((("typ", 1459)), [((("a")), 100000000, 0, -162)], (0)), 100000000, 0, -163), (Tag3 ((("typ", 1459)), [(Tag3 ((("carray", 1460)), [((("a")), 100000000, 0, -162)], (0)), 100000000, 0, -161)], (0)), 100000000, 0, -160), 0), 100000000, 0, -159), 0), 100000000, 0, -158), 0, (("src/ctypes/ctypes_static.mli", 150, 4418, 4418), ("src/ctypes/ctypes_static.mli", 150, 4418, 4460), 0), 0, Tag1 ("Ctypes_static", 109)), 0); (("ocaml_string", 1514), ((Tag3 ((("typ", 1459)), [(Tag3 ((("ocaml", 1467)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -157)], (0)), 100000000, 0, -156)], (0)), 100000000, 0, -155), 0, (("src/ctypes/ctypes_static.mli", 151, 4461, 4461), ("src/ctypes/ctypes_static.mli", 151, 4461, 4496), 0), 0, Tag1 ("Ctypes_static", 110)), 0); (("ocaml_bytes", 1515), ((Tag3 ((("typ", 1459)), [(Tag3 ((("ocaml", 1467)), [(Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -154)], (0)), 100000000, 0, -153)], (0)), 100000000, 0, -152), 0, (("src/ctypes/ctypes_static.mli", 152, 4497, 4497), ("src/ctypes/ctypes_static.mli", 152, 4497, 4530), 0), 0, Tag1 ("Ctypes_static", 111)), 0); (("ocaml_float_array", 1516), ((Tag3 ((("typ", 1459)), [(Tag3 ((("ocaml", 1467)), [(Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -151)], (0)), 100000000, 0, -150)], (0)), 100000000, 0, -149)], (0)), 100000000, 0, -148), 0, (("src/ctypes/ctypes_static.mli", 153, 4531, 4531), ("src/ctypes/ctypes_static.mli", 153, 4531, 4576), 0), 0, Tag1 ("Ctypes_static", 112)), 0); (("ptr", 1517), ((Tag1 (0, (Tag3 ((("typ", 1459)), [((("a")), 100000000, 0, -146)], (0)), 100000000, 0, -147), (Tag3 ((("typ", 1459)), [(Tag3 ((("ptr", 1466)), [((("a")), 100000000, 0, -146)], (0)), 100000000, 0, -145)], (0)), 100000000, 0, -144), 0), 100000000, 0, -143), 0, (("src/ctypes/ctypes_static.mli", 154, 4577, 4577), ("src/ctypes/ctypes_static.mli", 154, 4577, 4607), 0), 0, Tag1 ("Ctypes_static", 113)), 0); (("@->", 1518), ((Tag1 (0, (Tag3 ((("typ", 1459)), [((("a")), 100000000, 0, -140)], (0)), 100000000, 0, -142), (Tag1 (0, (Tag3 ((("fn", 1474)), [((("b")), 100000000, 0, -139)], (0)), 100000000, 0, -141), (Tag3 ((("fn", 1474)), [(Tag1 (0, ((("a")), 100000000, 0, -140), ((("b")), 100000000, 0, -139), 0), 100000000, 0, -138)], (0)), 100000000, 0, -137), 0), 100000000, 0, -136), 0), 100000000, 0, -135), 0, (("src/ctypes/ctypes_static.mli", 155, 4608, 4608), ("src/ctypes/ctypes_static.mli", 155, 4608, 4654), 0), 0, Tag1 ("Ctypes_static", 114)), 0); (("abstract", 1519), ((Tag1 (("name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -134), (Tag1 (("size"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -133), (Tag1 (("alignment"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -132), (Tag3 ((("typ", 1459)), [(Tag3 ((("abstract", 1464)), [((("a")), 100000000, 0, -131)], (0)), 100000000, 0, -130)], (0)), 100000000, 0, -129), 0), 100000000, 0, -128), 0), 100000000, 0, -127), 0), 100000000, 0, -126), 0, (("src/ctypes/ctypes_static.mli", 156, 4655, 4655), ("src/ctypes/ctypes_static.mli", 156, 4655, 4729), 0), 0, Tag1 ("Ctypes_static", 115)), 0); (("view", 1520), ((Tag1 (Tag1 ("format_typ"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -125), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -124), 0), 100000000, 0, -123), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -122), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -121), 0), 100000000, 0, -120), 0), 100000000, 0, -119)], (0)), 100000000, 0, -118), (Tag1 (Tag1 ("format"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -117), (Tag1 (0, ((("b")), 100000000, 0, -108), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -116), 0), 100000000, 0, -115), 0), 100000000, 0, -114)], (0)), 100000000, 0, -113), (Tag1 (("read"), (Tag1 (0, ((("a")), 100000000, 0, -110), ((("b")), 100000000, 0, -108), 0), 100000000, 0, -112), (Tag1 (("write"), (Tag1 (0, ((("b")), 100000000, 0, -108), ((("a")), 100000000, 0, -110), 0), 100000000, 0, -111), (Tag1 (0, (Tag3 ((("typ", 1459)), [((("a")), 100000000, 0, -110)], (0)), 100000000, 0, -109), (Tag3 ((("typ", 1459)), [((("b")), 100000000, 0, -108)], (0)), 100000000, 0, -107), 0), 100000000, 0, -106), 0), 100000000, 0, -105), 0), 100000000, 0, -104), 0), 100000000, 0, -103), 0), 100000000, 0, -102), 0, (("src/ctypes/ctypes_static.mli", 157, 4730, 4730), ("src/ctypes/ctypes_static.mli", 160, 4893, 4959), 0), 0, Tag1 ("Ctypes_static", 116)), 0); (("typedef", 1521), ((Tag1 (0, (Tag3 ((("typ", 1459)), [((("a")), 100000000, 0, -99)], (0)), 100000000, 0, -101), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -100), (Tag3 ((("typ", 1459)), [((("a")), 100000000, 0, -99)], (0)), 100000000, 0, -98), 0), 100000000, 0, -97), 0), 100000000, 0, -96), 0, (("src/ctypes/ctypes_static.mli", 161, 4960, 4960), ("src/ctypes/ctypes_static.mli", 161, 4960, 4999), 0), 0, Tag1 ("Ctypes_static", 117)), 0); (("bigarray", 1522), ((Tag1 (0, (Tag3 ((("bigarray_class", 1475)), [(Tag4 ((Tag5 ("ba_repr", 1, (Tag10 (((("c")), 100000000, 0, -77), 0), 100000000, 0, -95), (Tag5 ("bigarray", 1, (Tag10 (((("d")), 100000000, 0, -74), 0), 100000000, 0, -89), (Tag5 ("carray", 1, (Tag10 (((("e")), 100000000, 0, -91), 0), 100000000, 0, -90), (Tag5 ("dims", 1, (Tag10 (((("b")), 100000000, 0, -78), 0), 100000000, 0, -88), (Tag5 ("element", 1, (Tag10 (((("a")), 100000000, 0, -76), 0), 100000000, 0, -94), (Tag5 ("layout", 1, (Tag10 ((Tag3 (Tag1 ((Tag2 ("Bigarray_compat")), "c_layout"), 0, (0)), 100000000, 0, -93), 0), 100000000, 0, -92), (0, 100000000, 0, -87)), 100000000, 0, 107)), 100000000, 0, 108)), 100000000, 0, 109)), 100000000, 0, 110)), 100000000, 0, 111)), 100000000, 0, -81), (0)), 100000000, 0, -80)], (0)), 100000000, 0, -79), (Tag1 (0, ((("b")), 100000000, 0, -78), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Bigarray_compat")), "kind"), [((("a")), 100000000, 0, -76); ((("c")), 100000000, 0, -77)], (0)), 100000000, 0, -75), (Tag3 ((("typ", 1459)), [((("d")), 100000000, 0, -74)], (0)), 100000000, 0, -73), 0), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), 0, (("src/ctypes/ctypes_static.mli", 162, 5000, 5000), ("src/ctypes/ctypes_static.mli", 168, 5222, 5269), 0), 0, Tag1 ("Ctypes_static", 118)), 0); (("fortran_bigarray", 1523), ((Tag1 (0, (Tag3 ((("bigarray_class", 1475)), [(Tag4 ((Tag5 ("ba_repr", 1, (Tag10 (((("c")), 100000000, 0, -51), 0), 100000000, 0, -69), (Tag5 ("bigarray", 1, (Tag10 (((("d")), 100000000, 0, -48), 0), 100000000, 0, -63), (Tag5 ("carray", 1, (Tag10 (((("e")), 100000000, 0, -65), 0), 100000000, 0, -64), (Tag5 ("dims", 1, (Tag10 (((("b")), 100000000, 0, -52), 0), 100000000, 0, -62), (Tag5 ("element", 1, (Tag10 (((("a")), 100000000, 0, -50), 0), 100000000, 0, -68), (Tag5 ("layout", 1, (Tag10 ((Tag3 (Tag1 ((Tag2 ("Bigarray_compat")), "fortran_layout"), 0, (0)), 100000000, 0, -67), 0), 100000000, 0, -66), (0, 100000000, 0, -61)), 100000000, 0, 113)), 100000000, 0, 114)), 100000000, 0, 115)), 100000000, 0, 116)), 100000000, 0, 117)), 100000000, 0, -55), (0)), 100000000, 0, -54)], (0)), 100000000, 0, -53), (Tag1 (0, ((("b")), 100000000, 0, -52), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Bigarray_compat")), "kind"), [((("a")), 100000000, 0, -50); ((("c")), 100000000, 0, -51)], (0)), 100000000, 0, -49), (Tag3 ((("typ", 1459)), [((("d")), 100000000, 0, -48)], (0)), 100000000, 0, -47), 0), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("src/ctypes/ctypes_static.mli", 169, 5270, 5270), ("src/ctypes/ctypes_static.mli", 175, 5546, 5593), 0), 0, Tag1 ("Ctypes_static", 119)), 0); (("returning", 1524), ((Tag1 (0, (Tag3 ((("typ", 1459)), [((("a")), 100000000, 0, -42)], (0)), 100000000, 0, -43), (Tag3 ((("fn", 1474)), [((("a")), 100000000, 0, -42)], (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("src/ctypes/ctypes_static.mli", 176, 5594, 5594), ("src/ctypes/ctypes_static.mli", 176, 5594, 5625), 0), 0, Tag1 ("Ctypes_static", 120)), 0); (("static_funptr", 1525), ((Tag1 (0, (Tag3 ((("fn", 1474)), [((("a")), 100000000, 0, -38)], (0)), 100000000, 0, -39), (Tag3 ((("typ", 1459)), [(Tag3 ((("static_funptr", 1468)), [((("a")), 100000000, 0, -38)], (0)), 100000000, 0, -37)], (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("src/ctypes/ctypes_static.mli", 177, 5626, 5626), ("src/ctypes/ctypes_static.mli", 177, 5626, 5675), 0), 0, Tag1 ("Ctypes_static", 121)), 0); (("structure", 1526), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -34), (Tag3 ((("typ", 1459)), [(Tag3 ((("structure", 1463)), [((("a")), 100000000, 0, -33)], (0)), 100000000, 0, -32)], (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("src/ctypes/ctypes_static.mli", 178, 5676, 5676), ("src/ctypes/ctypes_static.mli", 178, 5676, 5718), 0), 0, Tag1 ("Ctypes_static", 122)), 0); (("union", 1527), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -29), (Tag3 ((("typ", 1459)), [(Tag3 ((("union", 1462)), [((("a")), 100000000, 0, -28)], (0)), 100000000, 0, -27)], (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0, (("src/ctypes/ctypes_static.mli", 179, 5719, 5719), ("src/ctypes/ctypes_static.mli", 179, 5719, 5753), 0), 0, Tag1 ("Ctypes_static", 123)), 0); (("offsetof", 1528), ((Tag1 (0, (Tag3 ((("field", 1470)), [((("a")), 100000000, 0, -23); ((("b")), 100000000, 0, -24)], (0)), 100000000, 0, -22), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("src/ctypes/ctypes_static.mli", 180, 5754, 5754), ("src/ctypes/ctypes_static.mli", 180, 5754, 5790), 0), 0, Tag1 ("Ctypes_static", 124)), 0); (("field_type", 1529), ((Tag1 (0, (Tag3 ((("field", 1470)), [((("a")), 100000000, 0, -17); ((("b")), 100000000, 0, -19)], (0)), 100000000, 0, -18), (Tag3 ((("typ", 1459)), [((("a")), 100000000, 0, -17)], (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("src/ctypes/ctypes_static.mli", 181, 5791, 5791), ("src/ctypes/ctypes_static.mli", 181, 5791, 5832), 0), 0, Tag1 ("Ctypes_static", 125)), 0); (("field_name", 1530), ((Tag1 (0, (Tag3 ((("field", 1470)), [((("a")), 100000000, 0, -13); ((("b")), 100000000, 0, -14)], (0)), 100000000, 0, -12), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("src/ctypes/ctypes_static.mli", 182, 5833, 5833), ("src/ctypes/ctypes_static.mli", 182, 5833, 5874), 0), 0, Tag1 ("Ctypes_static", 126)), 0); Tag2 (("IncompleteType", 1531), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ctypes_static", 127)), 2, 0); Tag2 (("ModifyingSealedType", 1532), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ctypes_static", 128)), 2, 0); Tag2 (("Unsupported", 1533), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ctypes_static", 129)), 2, 0); (("unsupported", 1534), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format4"), [((("a")), 100000000, 0, -3); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -5); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6); ((0), 100000000, 0, -7)], (0)), 100000000, 0, -4), ((("a")), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/ctypes/ctypes_static.mli", 188, 5974, 5974), ("src/ctypes/ctypes_static.mli", 188, 5974, 6027), 0), 0, Tag1 ("Ctypes_static", 130)), 0); Tag1 (("arithmetic", 1535), (0, 0, Tag1 ([(("Int8", 1421), (0), 0, (("src/ctypes/ctypes_static.mli", 192, 6105, 6109), ("src/ctypes/ctypes_static.mli", 192, 6105, 6113), 0), 0, Tag1 ("Ctypes_static", 132)); (("Int16", 1422), (0), 0, (("src/ctypes/ctypes_static.mli", 193, 6114, 6116), ("src/ctypes/ctypes_static.mli", 193, 6114, 6123), 0), 0, Tag1 ("Ctypes_static", 133)); (("Int32", 1423), (0), 0, (("src/ctypes/ctypes_static.mli", 194, 6124, 6126), ("src/ctypes/ctypes_static.mli", 194, 6124, 6133), 0), 0, Tag1 ("Ctypes_static", 134)); (("Int64", 1424), (0), 0, (("src/ctypes/ctypes_static.mli", 195, 6134, 6136), ("src/ctypes/ctypes_static.mli", 195, 6134, 6143), 0), 0, Tag1 ("Ctypes_static", 135)); (("Uint8", 1425), (0), 0, (("src/ctypes/ctypes_static.mli", 196, 6144, 6146), ("src/ctypes/ctypes_static.mli", 196, 6144, 6153), 0), 0, Tag1 ("Ctypes_static", 136)); (("Uint16", 1426), (0), 0, (("src/ctypes/ctypes_static.mli", 197, 6154, 6156), ("src/ctypes/ctypes_static.mli", 197, 6154, 6164), 0), 0, Tag1 ("Ctypes_static", 137)); (("Uint32", 1427), (0), 0, (("src/ctypes/ctypes_static.mli", 198, 6165, 6167), ("src/ctypes/ctypes_static.mli", 198, 6165, 6175), 0), 0, Tag1 ("Ctypes_static", 138)); (("Uint64", 1428), (0), 0, (("src/ctypes/ctypes_static.mli", 199, 6176, 6178), ("src/ctypes/ctypes_static.mli", 199, 6176, 6186), 0), 0, Tag1 ("Ctypes_static", 139)); (("Float", 1429), (0), 0, (("src/ctypes/ctypes_static.mli", 200, 6187, 6189), ("src/ctypes/ctypes_static.mli", 200, 6187, 6196), 0), 0, Tag1 ("Ctypes_static", 140)); (("Double", 1430), (0), 0, (("src/ctypes/ctypes_static.mli", 201, 6197, 6199), ("src/ctypes/ctypes_static.mli", 201, 6197, 6207), 0), 0, Tag1 ("Ctypes_static", 141))], 0), 1, 0, 0, 0, 0, 0, (("src/ctypes/ctypes_static.mli", 191, 6087, 6087), ("src/ctypes/ctypes_static.mli", 201, 6197, 6207), 0), 0, 1, 0, Tag1 ("Ctypes_static", 131)), 1, 0)], "Ctypes_static", [("Ctypes_static", ("U\030\169\129GB\138P\158'd\012\131\157\202\018")); ("Unsigned", ("cd\205\030\181\167\151\005!\134;\177\228\249\168+")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Signed", ("R\017i\"\030\024\134f\143\198\192\180>t\175\225")); ("LDouble", ("j\251\140\230^u\251\210\143\236T\207\022\147\011\211")); ("Ctypes_ptr", ("V\021o\161\007\161\245R\242\222:e\151\189\175\207")); ("Ctypes_primitive_types", ("\147\237\001\150\136\017Z\2308\137C\245\023\133\161\158")); ("Ctypes_bigarray", ("\146\0055mmn\243\187gd\185P\208J\254l")); ("ComplexL", ("\n\230\139\192\213\0226\203\176\242\200\205c\155ag")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Bigarray_compat", ("\150\219\208\188w\237\216\005\r[\152q'\006x\217"))], [(0)])

  | Double
