external raise_notrace : exn -> 'a = "%raise_notrace"
exception Exit
exception Not_found
external ( == ) : 'a -> 'a -> bool = "%eq"
external __LOC__ : string = "%loc_LOC"
external __FILE__ : string = "%loc_FILE"
external __LINE__ : int = "%loc_LINE"
external __MODULE__ : string = "%loc_MODULE"
external __POS__ : string * int * int * int = "%loc_POS"
external __FUNCTION__ : string = "%loc_FUNCTION"
external __LOC_OF__ : 'a -> string * 'a = "%loc_LOC"
external __LINE_OF__ : 'a -> int * 'a = "%loc_LINE"
external __POS_OF__ : 'a -> (string * int * int * int) * 'a = "%loc_POS"
external ( @@ ) : ('a -> 'b) -> 'a -> 'b = "%apply"
external ( ~+ ) : int -> int = "%identity"
external succ : int -> int = "%succint"
external pred : int -> int = "%predint"
val max_int : int
val min_int : int
external ( ~+. ) : float -> float = "%identity"
external sqrt : float -> float = "caml_sqrt_float" "sqrt" [@@unboxed]
  [@@noalloc]
external exp : float -> float = "caml_exp_float" "exp" [@@unboxed]
  [@@noalloc]
external log : float -> float = "caml_log_float" "log" [@@unboxed]
  [@@noalloc]
external log10 : float -> float = "caml_log10_float" "log10" [@@unboxed]
  [@@noalloc]
external expm1 : float -> float = "caml_expm1_float" "caml_expm1" [@@unboxed]
  [@@noalloc]
external log1p : float -> float = "caml_log1p_float" "caml_log1p" [@@unboxed]
  [@@noalloc]
external cos : float -> float = "caml_cos_float" "cos" [@@unboxed]
  [@@noalloc]
external sin : float -> float = "caml_sin_float" "sin" [@@unboxed]
  [@@noalloc]
external tan : float -> float = "caml_tan_float" "tan" [@@unboxed]
  [@@noalloc]
external acos : float -> float = "caml_acos_float" "acos" [@@unboxed]
  [@@noalloc]
external asin : float -> float = "caml_asin_float" "asin" [@@unboxed]
  [@@noalloc]
external atan : float -> float = "caml_atan_float" "atan" [@@unboxed]
  [@@noalloc]
external atan2 : float -> float -> float = "caml_atan2_float" "atan2"
  [@@unboxed] [@@noalloc]
external hypot : float -> float -> float = "caml_hypot_float" "caml_hypot"
  [@@unboxed] [@@noalloc]
external cosh : float -> float = "caml_cosh_float" "cosh" [@@unboxed]
  [@@noalloc]
external sinh : float -> float = "caml_sinh_float" "sinh" [@@unboxed]
  [@@noalloc]
external tanh : float -> float = "caml_tanh_float" "tanh" [@@unboxed]
  [@@noalloc]
external acosh : float -> float = "caml_acosh_float" "caml_acosh" [@@unboxed]
  [@@noalloc]
external asinh : float -> float = "caml_asinh_float" "caml_asinh" [@@unboxed]
  [@@noalloc]
external atanh : float -> float = "caml_atanh_float" "caml_atanh" [@@unboxed]
  [@@noalloc]
external ceil : float -> float = "caml_ceil_float" "ceil" [@@unboxed]
  [@@noalloc]
external floor : float -> float = "caml_floor_float" "floor" [@@unboxed]
  [@@noalloc]
external abs_float : float -> float = "%absfloat"
external copysign : float -> float -> float = "caml_copysign_float"
  "caml_copysign" [@@unboxed] [@@noalloc]
external mod_float : float -> float -> float = "caml_fmod_float" "fmod"
  [@@unboxed] [@@noalloc]
external frexp : float -> float * int = "caml_frexp_float"
external ldexp :
  (float [@unboxed]) -> (int [@untagged]) -> (float [@unboxed])
  = "caml_ldexp_float" "caml_ldexp_float_unboxed" [@@noalloc]
external modf : float -> float * float = "caml_modf_float"
external float : int -> float = "%floatofint"
external float_of_int : int -> float = "%floatofint"
external truncate : float -> int = "%intoffloat"
external int_of_float : float -> int = "%intoffloat"
val infinity : float
val neg_infinity : float
val nan : float
val max_float : float
val min_float : float
val epsilon_float : float
type nonrec fpclass =
  fpclass =
    FP_normal
  | FP_subnormal
  | FP_zero
  | FP_infinite
  | FP_nan
external classify_float : (float [@unboxed]) -> fpclass
  = "caml_classify_float" "caml_classify_float_unboxed" [@@noalloc]
external int_of_char : char -> int = "%identity"
val char_of_int : int -> char
val string_of_bool : bool -> string
val bool_of_string_opt : string -> bool option
val bool_of_string : string -> bool
val string_of_int : int -> string
val int_of_string_opt : string -> int option
external int_of_string : string -> int = "caml_int_of_string"
val string_of_float : float -> string
val float_of_string_opt : string -> float option
type nonrec in_channel = in_channel
type nonrec out_channel = out_channel
val stdin : in_channel
val stdout : out_channel
val stderr : out_channel
val print_char : char -> unit
val print_string : string -> unit
val print_bytes : bytes -> unit
val print_int : int -> unit
val print_float : float -> unit
val print_endline : string -> unit
val print_newline : unit -> unit
val prerr_char : char -> unit
val prerr_string : string -> unit
val prerr_bytes : bytes -> unit
val prerr_int : int -> unit
val prerr_float : float -> unit
val prerr_endline : string -> unit
val prerr_newline : unit -> unit
val read_line : unit -> string
val read_int_opt : unit -> int option
val read_int : unit -> int
val read_float_opt : unit -> float option
val read_float : unit -> float
type nonrec open_flag =
  open_flag =
    Open_rdonly
  | Open_wronly
  | Open_append
  | Open_creat
  | Open_trunc
  | Open_excl
  | Open_binary
  | Open_text
  | Open_nonblock
val open_out : string -> out_channel
val open_out_bin : string -> out_channel
val open_out_gen : open_flag list -> int -> string -> out_channel
val flush : out_channel -> unit
val flush_all : unit -> unit
val output_char : out_channel -> char -> unit
val output_string : out_channel -> string -> unit
val output_bytes : out_channel -> bytes -> unit
val output : out_channel -> bytes -> int -> int -> unit
val output_substring : out_channel -> string -> int -> int -> unit
val output_byte : out_channel -> int -> unit
val output_binary_int : out_channel -> int -> unit
val output_value : out_channel -> 'a -> unit
val seek_out : out_channel -> int -> unit
val pos_out : out_channel -> int
val out_channel_length : out_channel -> int
val close_out : out_channel -> unit
val close_out_noerr : out_channel -> unit
val set_binary_mode_out : out_channel -> bool -> unit
val open_in : string -> in_channel
val open_in_bin : string -> in_channel
val open_in_gen : open_flag list -> int -> string -> in_channel
val input_char : in_channel -> char
val input_line : in_channel -> string
val input : in_channel -> bytes -> int -> int -> int
val really_input : in_channel -> bytes -> int -> int -> unit
val really_input_string : in_channel -> int -> string
val input_byte : in_channel -> int
val input_binary_int : in_channel -> int
val input_value : in_channel -> 'a
val seek_in : in_channel -> int -> unit
val pos_in : in_channel -> int
val in_channel_length : in_channel -> int
val close_in : in_channel -> unit
val close_in_noerr : in_channel -> unit
val set_binary_mode_in : in_channel -> bool -> unit
module LargeFile = LargeFile
type nonrec ('a, 'b) result = ('a, 'b) result = Ok of 'a | Error of 'b
val string_of_format : ('a, 'b, 'c, 'd, 'e, 'f) format6 -> string
external format_of_string :
  ('a, 'b, 'c, 'd, 'e, 'f) format6 -> ('a, 'b, 'c, 'd, 'e, 'f) format6
  = "%identity"
val ( ^^ ) :
  ('a, 'b, 'c, 'd, 'e, 'f) format6 ->
  ('f, 'b, 'c, 'e, 'g, 'h) format6 -> ('a, 'b, 'c, 'd, 'g, 'h) format6
val exit : int -> 'a
val at_exit : (unit -> unit) -> unit
val valid_float_lexem : string -> string
val unsafe_really_input : in_channel -> bytes -> int -> int -> unit
val do_at_exit : unit -> unit
val do_domain_local_at_exit : (unit -> unit) ref
module Arg = Arg
module ArrayLabels = ArrayLabels
module BytesLabels = BytesLabels
module Callback = Callback
module Complex = Complex
module Condition = Condition
module Digest = Digest
module Domain = Domain
module Effect = Effect
module Ephemeron = Ephemeron
module Filename = Filename
module Format = Format
module Fun = Fun
module Gc = Gc
module In_channel = In_channel
module Lexing = Lexing
module ListLabels = ListLabels
module Marshal = Marshal
module MoreLabels = MoreLabels
module Mutex = Mutex
module Obj = Obj
module Oo = Oo
module Out_channel = Out_channel
module Parsing = Parsing
module Printexc = Printexc
module Scanf = Scanf
module Semaphore = Semaphore
module Seq = Seq
module StdLabels = StdLabels
module StringLabels = StringLabels
module Type = Type
module Weak = Weak
type 'a ref = 'a ref = { mutable contents : 'a; }
module Stdlib = Base__Import0.Stdlib
external ( |> ) : 'a -> ('a -> 'b) -> 'b = "%revapply"
external ( && ) : bool -> bool -> bool = "%sequand"
external ( || ) : bool -> bool -> bool = "%sequor"
external not : bool -> bool = "%boolnot"
val bool_to_int : bool -> int
val ( != ) : 'a -> 'a -> bool
val ( * ) : int -> int -> int
val ( ** ) : float -> float -> float
val ( *. ) : float -> float -> float
val ( + ) : int -> int -> int
val ( +. ) : float -> float -> float
val ( - ) : int -> int -> int
val ( -. ) : float -> float -> float
val ( / ) : int -> int -> int
val ( /. ) : float -> float -> float
module Poly = Base__.Poly0
module Int_replace_polymorphic_compare =
  Base__Import0.Int_replace_polymorphic_compare
external ( <> ) : int -> int -> bool = "%notequal"
external ( < ) : int -> int -> bool = "%lessthan"
external ( > ) : int -> int -> bool = "%greaterthan"
external ( <= ) : int -> int -> bool = "%lessequal"
external ( >= ) : int -> int -> bool = "%greaterequal"
external compare : int -> int -> int = "%compare"
external equal : int -> int -> bool = "%equal"
val ascending : int -> int -> int
val descending : int -> int -> int
val max : int -> int -> int
val min : int -> int -> int
module Int32_replace_polymorphic_compare =
  Base__Import0.Int32_replace_polymorphic_compare
module Int64_replace_polymorphic_compare =
  Base__Import0.Int64_replace_polymorphic_compare
module Nativeint_replace_polymorphic_compare =
  Base__Import0.Nativeint_replace_polymorphic_compare
module Bool_replace_polymorphic_compare =
  Base__Import0.Bool_replace_polymorphic_compare
module Char_replace_polymorphic_compare =
  Base__Import0.Char_replace_polymorphic_compare
module Uchar_replace_polymorphic_compare =
  Base__Import0.Uchar_replace_polymorphic_compare
module Float_replace_polymorphic_compare =
  Base__Import0.Float_replace_polymorphic_compare
module String_replace_polymorphic_compare =
  Base__Import0.String_replace_polymorphic_compare
module Bytes_replace_polymorphic_compare =
  Base__Import0.Bytes_replace_polymorphic_compare
external ( := ) : 'a ref -> 'a -> unit = "%setfield0"
external ( ! ) : 'a ref -> 'a = "%field0"
external ref : 'a -> 'a ref = "%makemutable"
val ( @ ) : 'a list -> 'a list -> 'a list
val ( ^ ) : string -> string -> string
val ( ~- ) : int -> int
val ( ~-. ) : float -> float
val ( asr ) : int -> int -> int
val ( land ) : int -> int -> int
val lnot : int -> int
val ( lor ) : int -> int -> int
val ( lsl ) : int -> int -> int
val ( lsr ) : int -> int -> int
val ( lxor ) : int -> int -> int
val ( mod ) : int -> int -> int
val abs : int -> int
val failwith : string -> 'a
val fst : 'a * 'b -> 'a
val invalid_arg : string -> 'a
val snd : 'a * 'b -> 'b
external raise : exn -> 'a = "%raise"
val phys_equal : 'a -> 'a -> bool
external decr : int ref -> unit = "%decr"
external incr : int ref -> unit = "%incr"
val float_of_string : string -> float
val am_testing : bool
val default_string_of_float : (float -> string) Stdlib.ref
val write_old_option_format : bool Stdlib.ref
val read_old_option_format : bool Stdlib.ref
val list_map : ('a -> 'b) -> 'a list -> 'b list
val sexp_of_unit : unit -> Sexplib0__.Sexp.t
val sexp_of_bool : bool -> Sexplib0__.Sexp.t
val sexp_of_string : string -> Sexplib0__.Sexp.t
val sexp_of_bytes : bytes -> Sexplib0__.Sexp.t
val sexp_of_char : char -> Sexplib0__.Sexp.t
val sexp_of_int : int -> Sexplib0__.Sexp.t
val sexp_of_float : float -> Sexplib0__.Sexp.t
val sexp_of_int32 : int32 -> Sexplib0__.Sexp.t
val sexp_of_int64 : int64 -> Sexplib0__.Sexp.t
val sexp_of_nativeint : nativeint -> Sexplib0__.Sexp.t
val sexp_of_ref :
  ('a -> Sexplib0__.Sexp.t) -> 'a Stdlib.ref -> Sexplib0__.Sexp.t
val sexp_of_lazy_t :
  ('a -> Sexplib0__.Sexp.t) -> 'a lazy_t -> Sexplib0__.Sexp.t
val sexp_of_option :
  ('a -> Sexplib0__.Sexp.t) -> 'a option -> Sexplib0__.Sexp.t
val sexp_of_pair :
  ('a -> Sexplib0__.Sexp.t) ->
  ('b -> Sexplib0__.Sexp.t) -> 'a * 'b -> Sexplib0__.Sexp.t
val sexp_of_triple :
  ('a -> Sexplib0__.Sexp.t) ->
  ('b -> Sexplib0__.Sexp.t) ->
  ('c -> Sexplib0__.Sexp.t) -> 'a * 'b * 'c -> Sexplib0__.Sexp.t
val sexp_of_list : ('a -> Sexplib0__.Sexp.t) -> 'a list -> Sexplib0__.Sexp.t
val sexp_of_array :
  ('a -> Sexplib0__.Sexp.t) -> 'a array -> Sexplib0__.Sexp.t
val sexp_of_hashtbl :
  ('a -> Sexplib0__.Sexp.t) ->
  ('b -> Sexplib0__.Sexp.t) -> ('a, 'b) Hashtbl.t -> Sexplib0__.Sexp.t
val sexp_of_opaque : 'a -> Sexplib0__.Sexp.t
val sexp_of_fun : ('a -> 'b) -> Sexplib0__.Sexp.t
exception Of_sexp_error of exn * Sexplib0__.Sexp.t
val record_check_extra_fields : bool Stdlib.ref
val of_sexp_error : string -> Sexplib0__.Sexp.t -> 'a
val of_sexp_error_exn : exn -> Sexplib0__.Sexp.t -> 'a
val unit_of_sexp : Sexplib0__.Sexp.t -> unit
val bool_of_sexp : Sexplib0__.Sexp.t -> bool
val string_of_sexp : Sexplib0__.Sexp.t -> string
val bytes_of_sexp : Sexplib0__.Sexp.t -> bytes
val char_of_sexp : Sexplib0__.Sexp.t -> char
val int_of_sexp : Sexplib0__.Sexp.t -> int
val float_of_sexp : Sexplib0__.Sexp.t -> float
val int32_of_sexp : Sexplib0__.Sexp.t -> int32
val int64_of_sexp : Sexplib0__.Sexp.t -> int64
val nativeint_of_sexp : Sexplib0__.Sexp.t -> nativeint
val ref_of_sexp :
  (Sexplib0__.Sexp.t -> 'a) -> Sexplib0__.Sexp.t -> 'a Stdlib.ref
val lazy_t_of_sexp :
  (Sexplib0__.Sexp.t -> 'a) -> Sexplib0__.Sexp.t -> 'a lazy_t
val option_of_sexp :
  (Sexplib0__.Sexp.t -> 'a) -> Sexplib0__.Sexp.t -> 'a option
val pair_of_sexp :
  (Sexplib0__.Sexp.t -> 'a) ->
  (Sexplib0__.Sexp.t -> 'b) -> Sexplib0__.Sexp.t -> 'a * 'b
val triple_of_sexp :
  (Sexplib0__.Sexp.t -> 'a) ->
  (Sexplib0__.Sexp.t -> 'b) ->
  (Sexplib0__.Sexp.t -> 'c) -> Sexplib0__.Sexp.t -> 'a * 'b * 'c
val list_of_sexp : (Sexplib0__.Sexp.t -> 'a) -> Sexplib0__.Sexp.t -> 'a list
val array_of_sexp :
  (Sexplib0__.Sexp.t -> 'a) -> Sexplib0__.Sexp.t -> 'a array
val hashtbl_of_sexp :
  (Sexplib0__.Sexp.t -> 'a) ->
  (Sexplib0__.Sexp.t -> 'b) -> Sexplib0__.Sexp.t -> ('a, 'b) Hashtbl.t
val opaque_of_sexp : Sexplib0__.Sexp.t -> 'a
val fun_of_sexp : Sexplib0__.Sexp.t -> 'a
val sexp_grammar_with_tags :
  Sexplib0__.Sexp_grammar.grammar ->
  tags:(string * Sexplib0__.Sexp.t) list -> Sexplib0__.Sexp_grammar.grammar
val sexp_grammar_with_tag_list :
  'a Sexplib0__.Sexp_grammar.with_tag_list ->
  tags:(string * Sexplib0__.Sexp.t) list ->
  'a Sexplib0__.Sexp_grammar.with_tag_list
val unit_sexp_grammar : unit Sexplib0__.Sexp_grammar.t
val bool_sexp_grammar : bool Sexplib0__.Sexp_grammar.t
val string_sexp_grammar : string Sexplib0__.Sexp_grammar.t
val bytes_sexp_grammar : bytes Sexplib0__.Sexp_grammar.t
val char_sexp_grammar : char Sexplib0__.Sexp_grammar.t
val int_sexp_grammar : int Sexplib0__.Sexp_grammar.t
val float_sexp_grammar : float Sexplib0__.Sexp_grammar.t
val int32_sexp_grammar : int32 Sexplib0__.Sexp_grammar.t
val int64_sexp_grammar : int64 Sexplib0__.Sexp_grammar.t
val nativeint_sexp_grammar : nativeint Sexplib0__.Sexp_grammar.t
val sexp_t_sexp_grammar : Sexplib0__.Sexp.t Sexplib0__.Sexp_grammar.t
val ref_sexp_grammar :
  'a Sexplib0__.Sexp_grammar.t -> 'a Stdlib.ref Sexplib0__.Sexp_grammar.t
val lazy_t_sexp_grammar :
  'a Sexplib0__.Sexp_grammar.t -> 'a lazy_t Sexplib0__.Sexp_grammar.t
val option_sexp_grammar :
  'a Sexplib0__.Sexp_grammar.t -> 'a option Sexplib0__.Sexp_grammar.t
val list_sexp_grammar :
  'a Sexplib0__.Sexp_grammar.t -> 'a list Sexplib0__.Sexp_grammar.t
val array_sexp_grammar :
  'a Sexplib0__.Sexp_grammar.t -> 'a array Sexplib0__.Sexp_grammar.t
val opaque_sexp_grammar : 'a Sexplib0__.Sexp_grammar.t
val fun_sexp_grammar : 'a Sexplib0__.Sexp_grammar.t
val sexp_of_exn : exn -> Sexplib0__.Sexp.t
val printexc_prefer_sexp : exn -> string
val sexp_of_exn_opt : exn -> Sexplib0__.Sexp.t option
module Exn_converter = Sexplib0__Sexp_conv.Exn_converter
external ignore : 'a -> unit = "%ignore"
external ( = ) : 'a -> 'a -> bool = "%equal"
val hash_fold_nativeint : nativeint Base__Hash.folder
val hash_fold_int64 : int64 Base__Hash.folder
val hash_fold_int32 : int32 Base__Hash.folder
val hash_fold_char : char Base__Hash.folder
val hash_fold_int : int Base__Hash.folder
val hash_fold_bool : bool Base__Hash.folder
val hash_fold_string : string Base__Hash.folder
val hash_fold_float : float Base__Hash.folder
val hash_fold_unit : unit Base__Hash.folder
val hash_fold_option : 'a Base__Hash.folder -> 'a option Base__Hash.folder
val hash_fold_list : 'a Base__Hash.folder -> 'a list Base__Hash.folder
val hash_fold_lazy_t : 'a Base__Hash.folder -> 'a lazy_t Base__Hash.folder
val hash_fold_ref_frozen :
  'a Base__Hash.folder -> 'a Base__.Import0.ref Base__Hash.folder
val hash_fold_array_frozen :
  'a Base__Hash.folder -> 'a array Base__Hash.folder
val hash_nativeint : nativeint -> Base__Hash.hash_value
val hash_int64 : int64 -> Base__Hash.hash_value
val hash_int32 : int32 -> Base__Hash.hash_value
val hash_char : char -> Base__Hash.hash_value
val hash_int : int -> Base__Hash.hash_value
val hash_bool : bool -> Base__Hash.hash_value
val hash_string : string -> Base__Hash.hash_value
val hash_float : float -> Base__Hash.hash_value
val hash_unit : unit -> Base__Hash.hash_value
val compare_bool : bool Base__Ppx_compare_lib.compare
val compare_char : char Base__Ppx_compare_lib.compare
val compare_float : float Base__Ppx_compare_lib.compare
val compare_int : int Base__Ppx_compare_lib.compare
val compare_int32 : int32 Base__Ppx_compare_lib.compare
val compare_int64 : int64 Base__Ppx_compare_lib.compare
val compare_nativeint : nativeint Base__Ppx_compare_lib.compare
val compare_string : string Base__Ppx_compare_lib.compare
val compare_unit : unit Base__Ppx_compare_lib.compare
val compare_array :
  'a Base__Ppx_compare_lib.compare -> 'a array Base__Ppx_compare_lib.compare
val compare_list :
  'a Base__Ppx_compare_lib.compare -> 'a list Base__Ppx_compare_lib.compare
val compare_option :
  'a Base__Ppx_compare_lib.compare -> 'a option Base__Ppx_compare_lib.compare
val compare_ref :
  'a Base__Ppx_compare_lib.compare ->
  'a Stdlib.ref Base__Ppx_compare_lib.compare
val equal_bool : bool Base__Ppx_compare_lib.equal
val equal_char : char Base__Ppx_compare_lib.equal
val equal_float : float Base__Ppx_compare_lib.equal
val equal_int : int Base__Ppx_compare_lib.equal
val equal_int32 : int32 Base__Ppx_compare_lib.equal
val equal_int64 : int64 Base__Ppx_compare_lib.equal
val equal_nativeint : nativeint Base__Ppx_compare_lib.equal
val equal_string : string Base__Ppx_compare_lib.equal
val equal_unit : unit Base__Ppx_compare_lib.equal
val equal_array :
  'a Base__Ppx_compare_lib.equal -> 'a array Base__Ppx_compare_lib.equal
val equal_list :
  'a Base__Ppx_compare_lib.equal -> 'a list Base__Ppx_compare_lib.equal
val equal_option :
  'a Base__Ppx_compare_lib.equal -> 'a option Base__Ppx_compare_lib.equal
val equal_ref :
  'a Base__Ppx_compare_lib.equal -> 'a Stdlib.ref Base__Ppx_compare_lib.equal
val globalize_bool : bool -> bool
val globalize_char : char -> char
val globalize_float : float -> float
val globalize_int : int -> int
val globalize_int32 : int32 -> int32
val globalize_int64 : int64 -> int64
val globalize_nativeint : nativeint -> nativeint
val globalize_bytes : bytes -> bytes
val globalize_string : string -> string
val globalize_unit : unit -> unit
val globalize_array : ('a -> 'b) -> 'a array -> 'a array
val globalize_list : ('a -> 'b) -> 'a list -> 'b list
val globalize_option : ('a -> 'b) -> 'a option -> 'b option
val globalize_result :
  ('ok -> 'ok) ->
  ('err -> 'err) -> ('ok, 'err) Stdlib.result -> ('ok, 'err) Stdlib.result
val globalize_ref : ('a -> 'b) -> 'a Stdlib.ref -> 'a Stdlib.ref
("DEBUG:rule", [(("raise_notrace", 1400), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -1269), ((("a")), 100000000, 0, -1268), 0), 100000000, 0, -1267), (("%raise_notrace", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 10, 312, 315), ("shadow-stdlib/src/shadow_stdlib.mli", 10, 312, 325), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.raise_notrace] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 10, 312, 327), ("shadow-stdlib/src/shadow_stdlib.mli", 13, 468, 517), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 10, 312, 326), ("shadow-stdlib/src/shadow_stdlib.mli", 13, 468, 518), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 10, 312, 326), ("shadow-stdlib/src/shadow_stdlib.mli", 13, 468, 518), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 10, 312, 312), ("shadow-stdlib/src/shadow_stdlib.mli", 13, 468, 519), 0))], Tag1 ("Shadow_stdlib", 1)), 0); Tag2 (("Exit", 1401), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 28, 1006, 1008), ("shadow-stdlib/src/shadow_stdlib.mli", 28, 1006, 1018), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Exit instead", (("shadow-stdlib/src/shadow_stdlib.mli", 28, 1006, 1020), ("shadow-stdlib/src/shadow_stdlib.mli", 32, 1241, 1285), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 28, 1006, 1019), ("shadow-stdlib/src/shadow_stdlib.mli", 32, 1241, 1286), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 28, 1006, 1019), ("shadow-stdlib/src/shadow_stdlib.mli", 32, 1241, 1286), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 28, 1006, 1006), ("shadow-stdlib/src/shadow_stdlib.mli", 32, 1241, 1287), 0))], Tag1 ("Shadow_stdlib", 4)), 2, 0); Tag2 (("Not_found", 1402), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 35, 1309, 1311), ("shadow-stdlib/src/shadow_stdlib.mli", 35, 1309, 1321), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nInstead of raising [Not_found], consider using [raise_s] with an informative error\nmessage.  If code needs to distinguish [Not_found] from other exceptions, please change\nit to handle both [Not_found] and [Not_found_s].  Then, instead of raising [Not_found],\nraise [Not_found_s] with an informative error message.", (("shadow-stdlib/src/shadow_stdlib.mli", 35, 1309, 1323), ("shadow-stdlib/src/shadow_stdlib.mli", 40, 1653, 1707), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 35, 1309, 1322), ("shadow-stdlib/src/shadow_stdlib.mli", 40, 1653, 1708), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 35, 1309, 1322), ("shadow-stdlib/src/shadow_stdlib.mli", 40, 1653, 1708), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 35, 1309, 1309), ("shadow-stdlib/src/shadow_stdlib.mli", 40, 1653, 1709), 0))], Tag1 ("Shadow_stdlib", 5)), 2, 0); (("==", 1403), ((Tag1 (0, ((("a")), 100000000, 0, -1266), (Tag1 (0, ((("a")), 100000000, 0, -1266), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1265), 0), 100000000, 0, -1264), 0), 100000000, 0, -1263), (("%eq", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 97, 3958, 3961), ("shadow-stdlib/src/shadow_stdlib.mli", 97, 3958, 3971), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [phys_equal] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 97, 3958, 3973), ("shadow-stdlib/src/shadow_stdlib.mli", 99, 4044, 4069), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 97, 3958, 3972), ("shadow-stdlib/src/shadow_stdlib.mli", 99, 4044, 4070), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 97, 3958, 3972), ("shadow-stdlib/src/shadow_stdlib.mli", 99, 4044, 4070), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 97, 3958, 3958), ("shadow-stdlib/src/shadow_stdlib.mli", 99, 4044, 4071), 0))], Tag1 ("Shadow_stdlib", 15)), 0); (("__LOC__", 1404), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1262), (("%loc_LOC", 0, 1, "", 0, 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 125, 5030, 5033), ("shadow-stdlib/src/shadow_stdlib.mli", 125, 5030, 5043), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.__LOC__] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 125, 5030, 5045), ("shadow-stdlib/src/shadow_stdlib.mli", 128, 5186, 5229), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 125, 5030, 5044), ("shadow-stdlib/src/shadow_stdlib.mli", 128, 5186, 5230), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 125, 5030, 5044), ("shadow-stdlib/src/shadow_stdlib.mli", 128, 5186, 5230), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 125, 5030, 5030), ("shadow-stdlib/src/shadow_stdlib.mli", 128, 5186, 5231), 0))], Tag1 ("Shadow_stdlib", 20)), 0); (("__FILE__", 1405), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1261), (("%loc_FILE", 0, 1, "", 0, 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 131, 5274, 5277), ("shadow-stdlib/src/shadow_stdlib.mli", 131, 5274, 5287), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.__FILE__] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 131, 5274, 5289), ("shadow-stdlib/src/shadow_stdlib.mli", 134, 5430, 5474), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 131, 5274, 5288), ("shadow-stdlib/src/shadow_stdlib.mli", 134, 5430, 5475), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 131, 5274, 5288), ("shadow-stdlib/src/shadow_stdlib.mli", 134, 5430, 5475), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 131, 5274, 5274), ("shadow-stdlib/src/shadow_stdlib.mli", 134, 5430, 5476), 0))], Tag1 ("Shadow_stdlib", 21)), 0); (("__LINE__", 1406), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1260), (("%loc_LINE", 0, 1, "", 0, 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 137, 5516, 5519), ("shadow-stdlib/src/shadow_stdlib.mli", 137, 5516, 5529), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.__LINE__] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 137, 5516, 5531), ("shadow-stdlib/src/shadow_stdlib.mli", 140, 5672, 5716), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 137, 5516, 5530), ("shadow-stdlib/src/shadow_stdlib.mli", 140, 5672, 5717), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 137, 5516, 5530), ("shadow-stdlib/src/shadow_stdlib.mli", 140, 5672, 5717), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 137, 5516, 5516), ("shadow-stdlib/src/shadow_stdlib.mli", 140, 5672, 5718), 0))], Tag1 ("Shadow_stdlib", 22)), 0); (("__MODULE__", 1407), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1259), (("%loc_MODULE", 0, 1, "", 0, 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 143, 5765, 5768), ("shadow-stdlib/src/shadow_stdlib.mli", 143, 5765, 5778), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.__MODULE__] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 143, 5765, 5780), ("shadow-stdlib/src/shadow_stdlib.mli", 146, 5921, 5967), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 143, 5765, 5779), ("shadow-stdlib/src/shadow_stdlib.mli", 146, 5921, 5968), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 143, 5765, 5779), ("shadow-stdlib/src/shadow_stdlib.mli", 146, 5921, 5968), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 143, 5765, 5765), ("shadow-stdlib/src/shadow_stdlib.mli", 146, 5921, 5969), 0))], Tag1 ("Shadow_stdlib", 23)), 0); (("__POS__", 1408), ((Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1255); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1256); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1257); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1258)]), 100000000, 0, -1254), (("%loc_POS", 0, 1, "", 0, 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 149, 6028, 6031), ("shadow-stdlib/src/shadow_stdlib.mli", 149, 6028, 6041), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.__POS__] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 149, 6028, 6043), ("shadow-stdlib/src/shadow_stdlib.mli", 152, 6184, 6227), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 149, 6028, 6042), ("shadow-stdlib/src/shadow_stdlib.mli", 152, 6184, 6228), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 149, 6028, 6042), ("shadow-stdlib/src/shadow_stdlib.mli", 152, 6184, 6228), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 149, 6028, 6028), ("shadow-stdlib/src/shadow_stdlib.mli", 152, 6184, 6229), 0))], Tag1 ("Shadow_stdlib", 24)), 0); (("__FUNCTION__", 1409), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1253), (("%loc_FUNCTION", 0, 1, "", 0, 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 155, 6280, 6283), ("shadow-stdlib/src/shadow_stdlib.mli", 155, 6280, 6293), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.__FUNCTION__] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 155, 6280, 6295), ("shadow-stdlib/src/shadow_stdlib.mli", 158, 6436, 6484), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 155, 6280, 6294), ("shadow-stdlib/src/shadow_stdlib.mli", 158, 6436, 6485), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 155, 6280, 6294), ("shadow-stdlib/src/shadow_stdlib.mli", 158, 6436, 6485), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 155, 6280, 6280), ("shadow-stdlib/src/shadow_stdlib.mli", 158, 6436, 6486), 0))], Tag1 ("Shadow_stdlib", 25)), 0); (("__LOC_OF__", 1410), ((Tag1 (0, ((("a")), 100000000, 0, -1252), (Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1251); ((("a")), 100000000, 0, -1252)]), 100000000, 0, -1250), 0), 100000000, 0, -1249), (("%loc_LOC", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 161, 6541, 6544), ("shadow-stdlib/src/shadow_stdlib.mli", 161, 6541, 6554), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.__LOC_OF__] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 161, 6541, 6556), ("shadow-stdlib/src/shadow_stdlib.mli", 164, 6697, 6743), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 161, 6541, 6555), ("shadow-stdlib/src/shadow_stdlib.mli", 164, 6697, 6744), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 161, 6541, 6555), ("shadow-stdlib/src/shadow_stdlib.mli", 164, 6697, 6744), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 161, 6541, 6541), ("shadow-stdlib/src/shadow_stdlib.mli", 164, 6697, 6745), 0))], Tag1 ("Shadow_stdlib", 26)), 0); (("__LINE_OF__", 1411), ((Tag1 (0, ((("a")), 100000000, 0, -1248), (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1247); ((("a")), 100000000, 0, -1248)]), 100000000, 0, -1246), 0), 100000000, 0, -1245), (("%loc_LINE", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 167, 6799, 6802), ("shadow-stdlib/src/shadow_stdlib.mli", 167, 6799, 6812), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.__LINE_OF__] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 167, 6799, 6814), ("shadow-stdlib/src/shadow_stdlib.mli", 170, 6955, 7002), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 167, 6799, 6813), ("shadow-stdlib/src/shadow_stdlib.mli", 170, 6955, 7003), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 167, 6799, 6813), ("shadow-stdlib/src/shadow_stdlib.mli", 170, 6955, 7003), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 167, 6799, 6799), ("shadow-stdlib/src/shadow_stdlib.mli", 170, 6955, 7004), 0))], Tag1 ("Shadow_stdlib", 27)), 0); (("__POS_OF__", 1412), ((Tag1 (0, ((("a")), 100000000, 0, -1244), (Tag2 ([(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1240); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1241); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1242); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1243)]), 100000000, 0, -1239); ((("a")), 100000000, 0, -1244)]), 100000000, 0, -1238), 0), 100000000, 0, -1237), (("%loc_POS", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 173, 7079, 7082), ("shadow-stdlib/src/shadow_stdlib.mli", 173, 7079, 7092), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.__POS_OF__] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 173, 7079, 7094), ("shadow-stdlib/src/shadow_stdlib.mli", 176, 7235, 7281), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 173, 7079, 7093), ("shadow-stdlib/src/shadow_stdlib.mli", 176, 7235, 7282), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 173, 7079, 7093), ("shadow-stdlib/src/shadow_stdlib.mli", 176, 7235, 7282), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 173, 7079, 7079), ("shadow-stdlib/src/shadow_stdlib.mli", 176, 7235, 7283), 0))], Tag1 ("Shadow_stdlib", 28)), 0); (("@@", 1413), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -1235), ((("b")), 100000000, 0, -1234), 0), 100000000, 0, -1236), (Tag1 (0, ((("a")), 100000000, 0, -1235), ((("b")), 100000000, 0, -1234), 0), 100000000, 0, -1233), 0), 100000000, 0, -1232), (("%apply", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 185, 7594, 7597), ("shadow-stdlib/src/shadow_stdlib.mli", 185, 7594, 7607), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.( @@ )] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 185, 7594, 7609), ("shadow-stdlib/src/shadow_stdlib.mli", 188, 7750, 7792), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 185, 7594, 7608), ("shadow-stdlib/src/shadow_stdlib.mli", 188, 7750, 7793), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 185, 7594, 7608), ("shadow-stdlib/src/shadow_stdlib.mli", 188, 7750, 7793), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 185, 7594, 7594), ("shadow-stdlib/src/shadow_stdlib.mli", 188, 7750, 7794), 0))], Tag1 ("Shadow_stdlib", 30)), 0); (("~+", 1414), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1231), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1230), 0), 100000000, 0, -1229), (("%identity", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 197, 8082, 8085), ("shadow-stdlib/src/shadow_stdlib.mli", 197, 8082, 8095), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.( ~+ )] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 197, 8082, 8097), ("shadow-stdlib/src/shadow_stdlib.mli", 200, 8238, 8280), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 197, 8082, 8096), ("shadow-stdlib/src/shadow_stdlib.mli", 200, 8238, 8281), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 197, 8082, 8096), ("shadow-stdlib/src/shadow_stdlib.mli", 200, 8238, 8281), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 197, 8082, 8082), ("shadow-stdlib/src/shadow_stdlib.mli", 200, 8238, 8282), 0))], Tag1 ("Shadow_stdlib", 32)), 0); (("succ", 1415), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1228), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1227), 0), 100000000, 0, -1226), (("%succint", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 203, 8324, 8327), ("shadow-stdlib/src/shadow_stdlib.mli", 203, 8324, 8337), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Int.succ] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 203, 8324, 8339), ("shadow-stdlib/src/shadow_stdlib.mli", 205, 8410, 8433), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 203, 8324, 8338), ("shadow-stdlib/src/shadow_stdlib.mli", 205, 8410, 8434), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 203, 8324, 8338), ("shadow-stdlib/src/shadow_stdlib.mli", 205, 8410, 8434), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 203, 8324, 8324), ("shadow-stdlib/src/shadow_stdlib.mli", 205, 8410, 8435), 0))], Tag1 ("Shadow_stdlib", 33)), 0); (("pred", 1416), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1225), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1224), 0), 100000000, 0, -1223), (("%predint", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 208, 8477, 8480), ("shadow-stdlib/src/shadow_stdlib.mli", 208, 8477, 8490), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Int.pred] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 208, 8477, 8492), ("shadow-stdlib/src/shadow_stdlib.mli", 210, 8563, 8586), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 208, 8477, 8491), ("shadow-stdlib/src/shadow_stdlib.mli", 210, 8563, 8587), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 208, 8477, 8491), ("shadow-stdlib/src/shadow_stdlib.mli", 210, 8563, 8587), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 208, 8477, 8477), ("shadow-stdlib/src/shadow_stdlib.mli", 210, 8563, 8588), 0))], Tag1 ("Shadow_stdlib", 34)), 0); (("max_int", 1417), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1222), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 248, 10039, 10042), ("shadow-stdlib/src/shadow_stdlib.mli", 248, 10039, 10052), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Int.max_value] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 248, 10039, 10054), ("shadow-stdlib/src/shadow_stdlib.mli", 250, 10125, 10153), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 248, 10039, 10053), ("shadow-stdlib/src/shadow_stdlib.mli", 250, 10125, 10154), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 248, 10039, 10053), ("shadow-stdlib/src/shadow_stdlib.mli", 250, 10125, 10154), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 248, 10039, 10039), ("shadow-stdlib/src/shadow_stdlib.mli", 250, 10125, 10155), 0))], Tag1 ("Shadow_stdlib", 41)), 0); (("min_int", 1418), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1221), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 253, 10175, 10178), ("shadow-stdlib/src/shadow_stdlib.mli", 253, 10175, 10188), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Int.min_value] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 253, 10175, 10190), ("shadow-stdlib/src/shadow_stdlib.mli", 255, 10261, 10289), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 253, 10175, 10189), ("shadow-stdlib/src/shadow_stdlib.mli", 255, 10261, 10290), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 253, 10175, 10189), ("shadow-stdlib/src/shadow_stdlib.mli", 255, 10261, 10290), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 253, 10175, 10175), ("shadow-stdlib/src/shadow_stdlib.mli", 255, 10261, 10291), 0))], Tag1 ("Shadow_stdlib", 42)), 0); (("~+.", 1419), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1220), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1219), 0), 100000000, 0, -1218), (("%identity", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 306, 12329, 12332), ("shadow-stdlib/src/shadow_stdlib.mli", 306, 12329, 12342), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.( ~+. )] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 306, 12329, 12344), ("shadow-stdlib/src/shadow_stdlib.mli", 309, 12485, 12528), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 306, 12329, 12343), ("shadow-stdlib/src/shadow_stdlib.mli", 309, 12485, 12529), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 306, 12329, 12343), ("shadow-stdlib/src/shadow_stdlib.mli", 309, 12485, 12529), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 306, 12329, 12329), ("shadow-stdlib/src/shadow_stdlib.mli", 309, 12485, 12530), 0))], Tag1 ("Shadow_stdlib", 51)), 0); (("sqrt", 1420), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1217), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1216), 0), 100000000, 0, -1215), (("caml_sqrt_float", 1, 0, "sqrt", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 340, 13765, 13826), ("shadow-stdlib/src/shadow_stdlib.mli", 340, 13765, 13833), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 340, 13765, 13823), ("shadow-stdlib/src/shadow_stdlib.mli", 340, 13765, 13834), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 340, 13765, 13838), ("shadow-stdlib/src/shadow_stdlib.mli", 340, 13765, 13845), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 340, 13765, 13835), ("shadow-stdlib/src/shadow_stdlib.mli", 340, 13765, 13846), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 341, 13847, 13850), ("shadow-stdlib/src/shadow_stdlib.mli", 341, 13847, 13860), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.sqrt] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 341, 13847, 13862), ("shadow-stdlib/src/shadow_stdlib.mli", 343, 13933, 13958), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 341, 13847, 13861), ("shadow-stdlib/src/shadow_stdlib.mli", 343, 13933, 13959), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 341, 13847, 13861), ("shadow-stdlib/src/shadow_stdlib.mli", 343, 13933, 13959), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 341, 13847, 13847), ("shadow-stdlib/src/shadow_stdlib.mli", 343, 13933, 13960), 0))], Tag1 ("Shadow_stdlib", 57)), 0); (("exp", 1421), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1214), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1213), 0), 100000000, 0, -1212), (("caml_exp_float", 1, 0, "exp", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 345, 13962, 14020), ("shadow-stdlib/src/shadow_stdlib.mli", 345, 13962, 14027), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 345, 13962, 14017), ("shadow-stdlib/src/shadow_stdlib.mli", 345, 13962, 14028), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 345, 13962, 14032), ("shadow-stdlib/src/shadow_stdlib.mli", 345, 13962, 14039), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 345, 13962, 14029), ("shadow-stdlib/src/shadow_stdlib.mli", 345, 13962, 14040), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 346, 14041, 14044), ("shadow-stdlib/src/shadow_stdlib.mli", 346, 14041, 14054), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.exp] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 346, 14041, 14056), ("shadow-stdlib/src/shadow_stdlib.mli", 348, 14127, 14151), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 346, 14041, 14055), ("shadow-stdlib/src/shadow_stdlib.mli", 348, 14127, 14152), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 346, 14041, 14055), ("shadow-stdlib/src/shadow_stdlib.mli", 348, 14127, 14152), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 346, 14041, 14041), ("shadow-stdlib/src/shadow_stdlib.mli", 348, 14127, 14153), 0))], Tag1 ("Shadow_stdlib", 58)), 0); (("log", 1422), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1211), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1210), 0), 100000000, 0, -1209), (("caml_log_float", 1, 0, "log", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 350, 14155, 14213), ("shadow-stdlib/src/shadow_stdlib.mli", 350, 14155, 14220), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 350, 14155, 14210), ("shadow-stdlib/src/shadow_stdlib.mli", 350, 14155, 14221), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 350, 14155, 14225), ("shadow-stdlib/src/shadow_stdlib.mli", 350, 14155, 14232), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 350, 14155, 14222), ("shadow-stdlib/src/shadow_stdlib.mli", 350, 14155, 14233), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 351, 14234, 14237), ("shadow-stdlib/src/shadow_stdlib.mli", 351, 14234, 14247), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.log] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 351, 14234, 14249), ("shadow-stdlib/src/shadow_stdlib.mli", 353, 14320, 14344), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 351, 14234, 14248), ("shadow-stdlib/src/shadow_stdlib.mli", 353, 14320, 14345), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 351, 14234, 14248), ("shadow-stdlib/src/shadow_stdlib.mli", 353, 14320, 14345), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 351, 14234, 14234), ("shadow-stdlib/src/shadow_stdlib.mli", 353, 14320, 14346), 0))], Tag1 ("Shadow_stdlib", 59)), 0); (("log10", 1423), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1208), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1207), 0), 100000000, 0, -1206), (("caml_log10_float", 1, 0, "log10", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 355, 14348, 14412), ("shadow-stdlib/src/shadow_stdlib.mli", 355, 14348, 14419), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 355, 14348, 14409), ("shadow-stdlib/src/shadow_stdlib.mli", 355, 14348, 14420), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 355, 14348, 14424), ("shadow-stdlib/src/shadow_stdlib.mli", 355, 14348, 14431), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 355, 14348, 14421), ("shadow-stdlib/src/shadow_stdlib.mli", 355, 14348, 14432), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 356, 14433, 14436), ("shadow-stdlib/src/shadow_stdlib.mli", 356, 14433, 14446), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.log10] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 356, 14433, 14448), ("shadow-stdlib/src/shadow_stdlib.mli", 358, 14519, 14545), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 356, 14433, 14447), ("shadow-stdlib/src/shadow_stdlib.mli", 358, 14519, 14546), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 356, 14433, 14447), ("shadow-stdlib/src/shadow_stdlib.mli", 358, 14519, 14546), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 356, 14433, 14433), ("shadow-stdlib/src/shadow_stdlib.mli", 358, 14519, 14547), 0))], Tag1 ("Shadow_stdlib", 60)), 0); (("expm1", 1424), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1205), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1204), 0), 100000000, 0, -1203), (("caml_expm1_float", 1, 0, "caml_expm1", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 360, 14549, 14618), ("shadow-stdlib/src/shadow_stdlib.mli", 360, 14549, 14625), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 360, 14549, 14615), ("shadow-stdlib/src/shadow_stdlib.mli", 360, 14549, 14626), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 360, 14549, 14630), ("shadow-stdlib/src/shadow_stdlib.mli", 360, 14549, 14637), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 360, 14549, 14627), ("shadow-stdlib/src/shadow_stdlib.mli", 360, 14549, 14638), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 361, 14639, 14642), ("shadow-stdlib/src/shadow_stdlib.mli", 361, 14639, 14652), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.expm1] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 361, 14639, 14654), ("shadow-stdlib/src/shadow_stdlib.mli", 363, 14725, 14751), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 361, 14639, 14653), ("shadow-stdlib/src/shadow_stdlib.mli", 363, 14725, 14752), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 361, 14639, 14653), ("shadow-stdlib/src/shadow_stdlib.mli", 363, 14725, 14752), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 361, 14639, 14639), ("shadow-stdlib/src/shadow_stdlib.mli", 363, 14725, 14753), 0))], Tag1 ("Shadow_stdlib", 61)), 0); (("log1p", 1425), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1202), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1201), 0), 100000000, 0, -1200), (("caml_log1p_float", 1, 0, "caml_log1p", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 365, 14755, 14824), ("shadow-stdlib/src/shadow_stdlib.mli", 365, 14755, 14831), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 365, 14755, 14821), ("shadow-stdlib/src/shadow_stdlib.mli", 365, 14755, 14832), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 365, 14755, 14836), ("shadow-stdlib/src/shadow_stdlib.mli", 365, 14755, 14843), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 365, 14755, 14833), ("shadow-stdlib/src/shadow_stdlib.mli", 365, 14755, 14844), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 366, 14845, 14848), ("shadow-stdlib/src/shadow_stdlib.mli", 366, 14845, 14858), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.log1p] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 366, 14845, 14860), ("shadow-stdlib/src/shadow_stdlib.mli", 368, 14931, 14957), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 366, 14845, 14859), ("shadow-stdlib/src/shadow_stdlib.mli", 368, 14931, 14958), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 366, 14845, 14859), ("shadow-stdlib/src/shadow_stdlib.mli", 368, 14931, 14958), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 366, 14845, 14845), ("shadow-stdlib/src/shadow_stdlib.mli", 368, 14931, 14959), 0))], Tag1 ("Shadow_stdlib", 62)), 0); (("cos", 1426), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1199), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1198), 0), 100000000, 0, -1197), (("caml_cos_float", 1, 0, "cos", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 370, 14961, 15019), ("shadow-stdlib/src/shadow_stdlib.mli", 370, 14961, 15026), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 370, 14961, 15016), ("shadow-stdlib/src/shadow_stdlib.mli", 370, 14961, 15027), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 370, 14961, 15031), ("shadow-stdlib/src/shadow_stdlib.mli", 370, 14961, 15038), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 370, 14961, 15028), ("shadow-stdlib/src/shadow_stdlib.mli", 370, 14961, 15039), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 371, 15040, 15043), ("shadow-stdlib/src/shadow_stdlib.mli", 371, 15040, 15053), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.cos] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 371, 15040, 15055), ("shadow-stdlib/src/shadow_stdlib.mli", 373, 15126, 15150), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 371, 15040, 15054), ("shadow-stdlib/src/shadow_stdlib.mli", 373, 15126, 15151), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 371, 15040, 15054), ("shadow-stdlib/src/shadow_stdlib.mli", 373, 15126, 15151), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 371, 15040, 15040), ("shadow-stdlib/src/shadow_stdlib.mli", 373, 15126, 15152), 0))], Tag1 ("Shadow_stdlib", 63)), 0); (("sin", 1427), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1196), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1195), 0), 100000000, 0, -1194), (("caml_sin_float", 1, 0, "sin", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 375, 15154, 15212), ("shadow-stdlib/src/shadow_stdlib.mli", 375, 15154, 15219), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 375, 15154, 15209), ("shadow-stdlib/src/shadow_stdlib.mli", 375, 15154, 15220), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 375, 15154, 15224), ("shadow-stdlib/src/shadow_stdlib.mli", 375, 15154, 15231), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 375, 15154, 15221), ("shadow-stdlib/src/shadow_stdlib.mli", 375, 15154, 15232), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 376, 15233, 15236), ("shadow-stdlib/src/shadow_stdlib.mli", 376, 15233, 15246), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.sin] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 376, 15233, 15248), ("shadow-stdlib/src/shadow_stdlib.mli", 378, 15319, 15343), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 376, 15233, 15247), ("shadow-stdlib/src/shadow_stdlib.mli", 378, 15319, 15344), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 376, 15233, 15247), ("shadow-stdlib/src/shadow_stdlib.mli", 378, 15319, 15344), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 376, 15233, 15233), ("shadow-stdlib/src/shadow_stdlib.mli", 378, 15319, 15345), 0))], Tag1 ("Shadow_stdlib", 64)), 0); (("tan", 1428), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1193), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1192), 0), 100000000, 0, -1191), (("caml_tan_float", 1, 0, "tan", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 380, 15347, 15405), ("shadow-stdlib/src/shadow_stdlib.mli", 380, 15347, 15412), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 380, 15347, 15402), ("shadow-stdlib/src/shadow_stdlib.mli", 380, 15347, 15413), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 380, 15347, 15417), ("shadow-stdlib/src/shadow_stdlib.mli", 380, 15347, 15424), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 380, 15347, 15414), ("shadow-stdlib/src/shadow_stdlib.mli", 380, 15347, 15425), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 381, 15426, 15429), ("shadow-stdlib/src/shadow_stdlib.mli", 381, 15426, 15439), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.tan] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 381, 15426, 15441), ("shadow-stdlib/src/shadow_stdlib.mli", 383, 15512, 15536), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 381, 15426, 15440), ("shadow-stdlib/src/shadow_stdlib.mli", 383, 15512, 15537), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 381, 15426, 15440), ("shadow-stdlib/src/shadow_stdlib.mli", 383, 15512, 15537), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 381, 15426, 15426), ("shadow-stdlib/src/shadow_stdlib.mli", 383, 15512, 15538), 0))], Tag1 ("Shadow_stdlib", 65)), 0); (("acos", 1429), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1190), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1189), 0), 100000000, 0, -1188), (("caml_acos_float", 1, 0, "acos", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 385, 15540, 15601), ("shadow-stdlib/src/shadow_stdlib.mli", 385, 15540, 15608), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 385, 15540, 15598), ("shadow-stdlib/src/shadow_stdlib.mli", 385, 15540, 15609), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 385, 15540, 15613), ("shadow-stdlib/src/shadow_stdlib.mli", 385, 15540, 15620), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 385, 15540, 15610), ("shadow-stdlib/src/shadow_stdlib.mli", 385, 15540, 15621), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 386, 15622, 15625), ("shadow-stdlib/src/shadow_stdlib.mli", 386, 15622, 15635), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.acos] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 386, 15622, 15637), ("shadow-stdlib/src/shadow_stdlib.mli", 388, 15708, 15733), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 386, 15622, 15636), ("shadow-stdlib/src/shadow_stdlib.mli", 388, 15708, 15734), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 386, 15622, 15636), ("shadow-stdlib/src/shadow_stdlib.mli", 388, 15708, 15734), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 386, 15622, 15622), ("shadow-stdlib/src/shadow_stdlib.mli", 388, 15708, 15735), 0))], Tag1 ("Shadow_stdlib", 66)), 0); (("asin", 1430), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1187), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1186), 0), 100000000, 0, -1185), (("caml_asin_float", 1, 0, "asin", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 390, 15737, 15798), ("shadow-stdlib/src/shadow_stdlib.mli", 390, 15737, 15805), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 390, 15737, 15795), ("shadow-stdlib/src/shadow_stdlib.mli", 390, 15737, 15806), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 390, 15737, 15810), ("shadow-stdlib/src/shadow_stdlib.mli", 390, 15737, 15817), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 390, 15737, 15807), ("shadow-stdlib/src/shadow_stdlib.mli", 390, 15737, 15818), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 391, 15819, 15822), ("shadow-stdlib/src/shadow_stdlib.mli", 391, 15819, 15832), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.asin] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 391, 15819, 15834), ("shadow-stdlib/src/shadow_stdlib.mli", 393, 15905, 15930), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 391, 15819, 15833), ("shadow-stdlib/src/shadow_stdlib.mli", 393, 15905, 15931), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 391, 15819, 15833), ("shadow-stdlib/src/shadow_stdlib.mli", 393, 15905, 15931), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 391, 15819, 15819), ("shadow-stdlib/src/shadow_stdlib.mli", 393, 15905, 15932), 0))], Tag1 ("Shadow_stdlib", 67)), 0); (("atan", 1431), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1184), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1183), 0), 100000000, 0, -1182), (("caml_atan_float", 1, 0, "atan", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 395, 15934, 15995), ("shadow-stdlib/src/shadow_stdlib.mli", 395, 15934, 16002), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 395, 15934, 15992), ("shadow-stdlib/src/shadow_stdlib.mli", 395, 15934, 16003), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 395, 15934, 16007), ("shadow-stdlib/src/shadow_stdlib.mli", 395, 15934, 16014), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 395, 15934, 16004), ("shadow-stdlib/src/shadow_stdlib.mli", 395, 15934, 16015), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 396, 16016, 16019), ("shadow-stdlib/src/shadow_stdlib.mli", 396, 16016, 16029), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.atan] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 396, 16016, 16031), ("shadow-stdlib/src/shadow_stdlib.mli", 398, 16102, 16127), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 396, 16016, 16030), ("shadow-stdlib/src/shadow_stdlib.mli", 398, 16102, 16128), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 396, 16016, 16030), ("shadow-stdlib/src/shadow_stdlib.mli", 398, 16102, 16128), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 396, 16016, 16016), ("shadow-stdlib/src/shadow_stdlib.mli", 398, 16102, 16129), 0))], Tag1 ("Shadow_stdlib", 68)), 0); (("atan2", 1432), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1181), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1180), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1179), 0), 100000000, 0, -1178), 0), 100000000, 0, -1177), (("caml_atan2_float", 2, 0, "atan2", [1; 1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 400, 16131, 16204), ("shadow-stdlib/src/shadow_stdlib.mli", 400, 16131, 16211), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 400, 16131, 16201), ("shadow-stdlib/src/shadow_stdlib.mli", 400, 16131, 16212), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 400, 16131, 16216), ("shadow-stdlib/src/shadow_stdlib.mli", 400, 16131, 16223), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 400, 16131, 16213), ("shadow-stdlib/src/shadow_stdlib.mli", 400, 16131, 16224), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 401, 16225, 16228), ("shadow-stdlib/src/shadow_stdlib.mli", 401, 16225, 16238), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.atan2] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 401, 16225, 16240), ("shadow-stdlib/src/shadow_stdlib.mli", 403, 16311, 16337), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 401, 16225, 16239), ("shadow-stdlib/src/shadow_stdlib.mli", 403, 16311, 16338), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 401, 16225, 16239), ("shadow-stdlib/src/shadow_stdlib.mli", 403, 16311, 16338), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 401, 16225, 16225), ("shadow-stdlib/src/shadow_stdlib.mli", 403, 16311, 16339), 0))], Tag1 ("Shadow_stdlib", 69)), 0); (("hypot", 1433), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1176), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1175), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1174), 0), 100000000, 0, -1173), 0), 100000000, 0, -1172), (("caml_hypot_float", 2, 0, "caml_hypot", [1; 1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 405, 16341, 16419), ("shadow-stdlib/src/shadow_stdlib.mli", 405, 16341, 16426), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 405, 16341, 16416), ("shadow-stdlib/src/shadow_stdlib.mli", 405, 16341, 16427), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 405, 16341, 16431), ("shadow-stdlib/src/shadow_stdlib.mli", 405, 16341, 16438), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 405, 16341, 16428), ("shadow-stdlib/src/shadow_stdlib.mli", 405, 16341, 16439), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 406, 16440, 16443), ("shadow-stdlib/src/shadow_stdlib.mli", 406, 16440, 16453), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.hypot] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 406, 16440, 16455), ("shadow-stdlib/src/shadow_stdlib.mli", 408, 16526, 16552), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 406, 16440, 16454), ("shadow-stdlib/src/shadow_stdlib.mli", 408, 16526, 16553), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 406, 16440, 16454), ("shadow-stdlib/src/shadow_stdlib.mli", 408, 16526, 16553), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 406, 16440, 16440), ("shadow-stdlib/src/shadow_stdlib.mli", 408, 16526, 16554), 0))], Tag1 ("Shadow_stdlib", 70)), 0); (("cosh", 1434), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1171), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1170), 0), 100000000, 0, -1169), (("caml_cosh_float", 1, 0, "cosh", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 410, 16556, 16617), ("shadow-stdlib/src/shadow_stdlib.mli", 410, 16556, 16624), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 410, 16556, 16614), ("shadow-stdlib/src/shadow_stdlib.mli", 410, 16556, 16625), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 410, 16556, 16629), ("shadow-stdlib/src/shadow_stdlib.mli", 410, 16556, 16636), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 410, 16556, 16626), ("shadow-stdlib/src/shadow_stdlib.mli", 410, 16556, 16637), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 411, 16638, 16641), ("shadow-stdlib/src/shadow_stdlib.mli", 411, 16638, 16651), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.cosh] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 411, 16638, 16653), ("shadow-stdlib/src/shadow_stdlib.mli", 413, 16724, 16749), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 411, 16638, 16652), ("shadow-stdlib/src/shadow_stdlib.mli", 413, 16724, 16750), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 411, 16638, 16652), ("shadow-stdlib/src/shadow_stdlib.mli", 413, 16724, 16750), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 411, 16638, 16638), ("shadow-stdlib/src/shadow_stdlib.mli", 413, 16724, 16751), 0))], Tag1 ("Shadow_stdlib", 71)), 0); (("sinh", 1435), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1168), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1167), 0), 100000000, 0, -1166), (("caml_sinh_float", 1, 0, "sinh", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 415, 16753, 16814), ("shadow-stdlib/src/shadow_stdlib.mli", 415, 16753, 16821), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 415, 16753, 16811), ("shadow-stdlib/src/shadow_stdlib.mli", 415, 16753, 16822), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 415, 16753, 16826), ("shadow-stdlib/src/shadow_stdlib.mli", 415, 16753, 16833), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 415, 16753, 16823), ("shadow-stdlib/src/shadow_stdlib.mli", 415, 16753, 16834), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 416, 16835, 16838), ("shadow-stdlib/src/shadow_stdlib.mli", 416, 16835, 16848), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.sinh] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 416, 16835, 16850), ("shadow-stdlib/src/shadow_stdlib.mli", 418, 16921, 16946), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 416, 16835, 16849), ("shadow-stdlib/src/shadow_stdlib.mli", 418, 16921, 16947), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 416, 16835, 16849), ("shadow-stdlib/src/shadow_stdlib.mli", 418, 16921, 16947), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 416, 16835, 16835), ("shadow-stdlib/src/shadow_stdlib.mli", 418, 16921, 16948), 0))], Tag1 ("Shadow_stdlib", 72)), 0); (("tanh", 1436), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1165), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1164), 0), 100000000, 0, -1163), (("caml_tanh_float", 1, 0, "tanh", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 420, 16950, 17011), ("shadow-stdlib/src/shadow_stdlib.mli", 420, 16950, 17018), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 420, 16950, 17008), ("shadow-stdlib/src/shadow_stdlib.mli", 420, 16950, 17019), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 420, 16950, 17023), ("shadow-stdlib/src/shadow_stdlib.mli", 420, 16950, 17030), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 420, 16950, 17020), ("shadow-stdlib/src/shadow_stdlib.mli", 420, 16950, 17031), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 421, 17032, 17035), ("shadow-stdlib/src/shadow_stdlib.mli", 421, 17032, 17045), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.tanh] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 421, 17032, 17047), ("shadow-stdlib/src/shadow_stdlib.mli", 423, 17118, 17143), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 421, 17032, 17046), ("shadow-stdlib/src/shadow_stdlib.mli", 423, 17118, 17144), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 421, 17032, 17046), ("shadow-stdlib/src/shadow_stdlib.mli", 423, 17118, 17144), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 421, 17032, 17032), ("shadow-stdlib/src/shadow_stdlib.mli", 423, 17118, 17145), 0))], Tag1 ("Shadow_stdlib", 73)), 0); (("acosh", 1437), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1162), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1161), 0), 100000000, 0, -1160), (("caml_acosh_float", 1, 0, "caml_acosh", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 425, 17147, 17216), ("shadow-stdlib/src/shadow_stdlib.mli", 425, 17147, 17223), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 425, 17147, 17213), ("shadow-stdlib/src/shadow_stdlib.mli", 425, 17147, 17224), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 425, 17147, 17228), ("shadow-stdlib/src/shadow_stdlib.mli", 425, 17147, 17235), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 425, 17147, 17225), ("shadow-stdlib/src/shadow_stdlib.mli", 425, 17147, 17236), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 426, 17237, 17240), ("shadow-stdlib/src/shadow_stdlib.mli", 426, 17237, 17250), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.acosh] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 426, 17237, 17252), ("shadow-stdlib/src/shadow_stdlib.mli", 428, 17323, 17349), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 426, 17237, 17251), ("shadow-stdlib/src/shadow_stdlib.mli", 428, 17323, 17350), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 426, 17237, 17251), ("shadow-stdlib/src/shadow_stdlib.mli", 428, 17323, 17350), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 426, 17237, 17237), ("shadow-stdlib/src/shadow_stdlib.mli", 428, 17323, 17351), 0))], Tag1 ("Shadow_stdlib", 74)), 0); (("asinh", 1438), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1159), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1158), 0), 100000000, 0, -1157), (("caml_asinh_float", 1, 0, "caml_asinh", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 430, 17353, 17422), ("shadow-stdlib/src/shadow_stdlib.mli", 430, 17353, 17429), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 430, 17353, 17419), ("shadow-stdlib/src/shadow_stdlib.mli", 430, 17353, 17430), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 430, 17353, 17434), ("shadow-stdlib/src/shadow_stdlib.mli", 430, 17353, 17441), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 430, 17353, 17431), ("shadow-stdlib/src/shadow_stdlib.mli", 430, 17353, 17442), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 431, 17443, 17446), ("shadow-stdlib/src/shadow_stdlib.mli", 431, 17443, 17456), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.asinh] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 431, 17443, 17458), ("shadow-stdlib/src/shadow_stdlib.mli", 433, 17529, 17555), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 431, 17443, 17457), ("shadow-stdlib/src/shadow_stdlib.mli", 433, 17529, 17556), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 431, 17443, 17457), ("shadow-stdlib/src/shadow_stdlib.mli", 433, 17529, 17556), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 431, 17443, 17443), ("shadow-stdlib/src/shadow_stdlib.mli", 433, 17529, 17557), 0))], Tag1 ("Shadow_stdlib", 75)), 0); (("atanh", 1439), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1156), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1155), 0), 100000000, 0, -1154), (("caml_atanh_float", 1, 0, "caml_atanh", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 435, 17559, 17628), ("shadow-stdlib/src/shadow_stdlib.mli", 435, 17559, 17635), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 435, 17559, 17625), ("shadow-stdlib/src/shadow_stdlib.mli", 435, 17559, 17636), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 435, 17559, 17640), ("shadow-stdlib/src/shadow_stdlib.mli", 435, 17559, 17647), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 435, 17559, 17637), ("shadow-stdlib/src/shadow_stdlib.mli", 435, 17559, 17648), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 436, 17649, 17652), ("shadow-stdlib/src/shadow_stdlib.mli", 436, 17649, 17662), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.atanh] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 436, 17649, 17664), ("shadow-stdlib/src/shadow_stdlib.mli", 438, 17735, 17761), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 436, 17649, 17663), ("shadow-stdlib/src/shadow_stdlib.mli", 438, 17735, 17762), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 436, 17649, 17663), ("shadow-stdlib/src/shadow_stdlib.mli", 438, 17735, 17762), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 436, 17649, 17649), ("shadow-stdlib/src/shadow_stdlib.mli", 438, 17735, 17763), 0))], Tag1 ("Shadow_stdlib", 76)), 0); (("ceil", 1440), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1153), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1152), 0), 100000000, 0, -1151), (("caml_ceil_float", 1, 0, "ceil", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 440, 17765, 17826), ("shadow-stdlib/src/shadow_stdlib.mli", 440, 17765, 17833), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 440, 17765, 17823), ("shadow-stdlib/src/shadow_stdlib.mli", 440, 17765, 17834), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 440, 17765, 17838), ("shadow-stdlib/src/shadow_stdlib.mli", 440, 17765, 17845), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 440, 17765, 17835), ("shadow-stdlib/src/shadow_stdlib.mli", 440, 17765, 17846), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 441, 17847, 17850), ("shadow-stdlib/src/shadow_stdlib.mli", 441, 17847, 17860), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.round_up] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 441, 17847, 17862), ("shadow-stdlib/src/shadow_stdlib.mli", 443, 17933, 17962), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 441, 17847, 17861), ("shadow-stdlib/src/shadow_stdlib.mli", 443, 17933, 17963), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 441, 17847, 17861), ("shadow-stdlib/src/shadow_stdlib.mli", 443, 17933, 17963), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 441, 17847, 17847), ("shadow-stdlib/src/shadow_stdlib.mli", 443, 17933, 17964), 0))], Tag1 ("Shadow_stdlib", 77)), 0); (("floor", 1441), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1150), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1149), 0), 100000000, 0, -1148), (("caml_floor_float", 1, 0, "floor", [1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 445, 17966, 18030), ("shadow-stdlib/src/shadow_stdlib.mli", 445, 17966, 18037), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 445, 17966, 18027), ("shadow-stdlib/src/shadow_stdlib.mli", 445, 17966, 18038), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 445, 17966, 18042), ("shadow-stdlib/src/shadow_stdlib.mli", 445, 17966, 18049), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 445, 17966, 18039), ("shadow-stdlib/src/shadow_stdlib.mli", 445, 17966, 18050), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 446, 18051, 18054), ("shadow-stdlib/src/shadow_stdlib.mli", 446, 18051, 18064), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.round_down] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 446, 18051, 18066), ("shadow-stdlib/src/shadow_stdlib.mli", 448, 18137, 18168), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 446, 18051, 18065), ("shadow-stdlib/src/shadow_stdlib.mli", 448, 18137, 18169), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 446, 18051, 18065), ("shadow-stdlib/src/shadow_stdlib.mli", 448, 18137, 18169), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 446, 18051, 18051), ("shadow-stdlib/src/shadow_stdlib.mli", 448, 18137, 18170), 0))], Tag1 ("Shadow_stdlib", 78)), 0); (("abs_float", 1442), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1147), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1146), 0), 100000000, 0, -1145), (("%absfloat", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 451, 18222, 18225), ("shadow-stdlib/src/shadow_stdlib.mli", 451, 18222, 18235), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.abs_float] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 451, 18222, 18237), ("shadow-stdlib/src/shadow_stdlib.mli", 454, 18378, 18423), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 451, 18222, 18236), ("shadow-stdlib/src/shadow_stdlib.mli", 454, 18378, 18424), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 451, 18222, 18236), ("shadow-stdlib/src/shadow_stdlib.mli", 454, 18378, 18424), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 451, 18222, 18222), ("shadow-stdlib/src/shadow_stdlib.mli", 454, 18378, 18425), 0))], Tag1 ("Shadow_stdlib", 79)), 0); (("copysign", 1443), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1144), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1143), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1142), 0), 100000000, 0, -1141), 0), 100000000, 0, -1140), (("caml_copysign_float", 2, 0, "caml_copysign", [1; 1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 456, 18427, 18514), ("shadow-stdlib/src/shadow_stdlib.mli", 456, 18427, 18521), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 456, 18427, 18511), ("shadow-stdlib/src/shadow_stdlib.mli", 456, 18427, 18522), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 456, 18427, 18526), ("shadow-stdlib/src/shadow_stdlib.mli", 456, 18427, 18533), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 456, 18427, 18523), ("shadow-stdlib/src/shadow_stdlib.mli", 456, 18427, 18534), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 457, 18535, 18538), ("shadow-stdlib/src/shadow_stdlib.mli", 457, 18535, 18548), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.copysign] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 457, 18535, 18550), ("shadow-stdlib/src/shadow_stdlib.mli", 459, 18621, 18650), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 457, 18535, 18549), ("shadow-stdlib/src/shadow_stdlib.mli", 459, 18621, 18651), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 457, 18535, 18549), ("shadow-stdlib/src/shadow_stdlib.mli", 459, 18621, 18651), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 457, 18535, 18535), ("shadow-stdlib/src/shadow_stdlib.mli", 459, 18621, 18652), 0))], Tag1 ("Shadow_stdlib", 80)), 0); (("mod_float", 1444), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1139), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1138), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1137), 0), 100000000, 0, -1136), 0), 100000000, 0, -1135), (("caml_fmod_float", 2, 0, "fmod", [1; 1], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("unboxed", (("shadow-stdlib/src/shadow_stdlib.mli", 461, 18654, 18729), ("shadow-stdlib/src/shadow_stdlib.mli", 461, 18654, 18736), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 461, 18654, 18726), ("shadow-stdlib/src/shadow_stdlib.mli", 461, 18654, 18737), 0)); (("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 461, 18654, 18741), ("shadow-stdlib/src/shadow_stdlib.mli", 461, 18654, 18748), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 461, 18654, 18738), ("shadow-stdlib/src/shadow_stdlib.mli", 461, 18654, 18749), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 462, 18750, 18753), ("shadow-stdlib/src/shadow_stdlib.mli", 462, 18750, 18763), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.mod_float] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 462, 18750, 18765), ("shadow-stdlib/src/shadow_stdlib.mli", 464, 18836, 18866), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 462, 18750, 18764), ("shadow-stdlib/src/shadow_stdlib.mli", 464, 18836, 18867), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 462, 18750, 18764), ("shadow-stdlib/src/shadow_stdlib.mli", 464, 18836, 18867), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 462, 18750, 18750), ("shadow-stdlib/src/shadow_stdlib.mli", 464, 18836, 18868), 0))], Tag1 ("Shadow_stdlib", 81)), 0); (("frexp", 1445), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1134), (Tag2 ([(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1132); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1133)]), 100000000, 0, -1131), 0), 100000000, 0, -1130), (("caml_frexp_float", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 467, 18929, 18932), ("shadow-stdlib/src/shadow_stdlib.mli", 467, 18929, 18942), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.frexp] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 467, 18929, 18944), ("shadow-stdlib/src/shadow_stdlib.mli", 469, 19015, 19041), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 467, 18929, 18943), ("shadow-stdlib/src/shadow_stdlib.mli", 469, 19015, 19042), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 467, 18929, 18943), ("shadow-stdlib/src/shadow_stdlib.mli", 469, 19015, 19042), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 467, 18929, 18929), ("shadow-stdlib/src/shadow_stdlib.mli", 469, 19015, 19043), 0))], Tag1 ("Shadow_stdlib", 82)), 0); (("ldexp", 1446), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1129), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1128), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1127), 0), 100000000, 0, -1126), 0), 100000000, 0, -1125), (("caml_ldexp_float", 2, 0, "caml_ldexp_float_unboxed", [1; 2], 1)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 471, 19045, 19175), ("shadow-stdlib/src/shadow_stdlib.mli", 471, 19045, 19182), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 471, 19045, 19172), ("shadow-stdlib/src/shadow_stdlib.mli", 471, 19045, 19183), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 472, 19184, 19187), ("shadow-stdlib/src/shadow_stdlib.mli", 472, 19184, 19197), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.ldexp] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 472, 19184, 19199), ("shadow-stdlib/src/shadow_stdlib.mli", 474, 19270, 19296), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 472, 19184, 19198), ("shadow-stdlib/src/shadow_stdlib.mli", 474, 19270, 19297), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 472, 19184, 19198), ("shadow-stdlib/src/shadow_stdlib.mli", 474, 19270, 19297), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 472, 19184, 19184), ("shadow-stdlib/src/shadow_stdlib.mli", 474, 19270, 19298), 0))], Tag1 ("Shadow_stdlib", 83)), 0); (("modf", 1447), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1124), (Tag2 ([(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1122); (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1123)]), 100000000, 0, -1121), 0), 100000000, 0, -1120), (("caml_modf_float", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 477, 19359, 19362), ("shadow-stdlib/src/shadow_stdlib.mli", 477, 19359, 19372), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.modf] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 477, 19359, 19374), ("shadow-stdlib/src/shadow_stdlib.mli", 479, 19445, 19470), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 477, 19359, 19373), ("shadow-stdlib/src/shadow_stdlib.mli", 479, 19445, 19471), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 477, 19359, 19373), ("shadow-stdlib/src/shadow_stdlib.mli", 479, 19445, 19471), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 477, 19359, 19359), ("shadow-stdlib/src/shadow_stdlib.mli", 479, 19445, 19472), 0))], Tag1 ("Shadow_stdlib", 84)), 0); (("float", 1448), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1119), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1118), 0), 100000000, 0, -1117), (("%floatofint", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 482, 19520, 19523), ("shadow-stdlib/src/shadow_stdlib.mli", 482, 19520, 19533), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.of_int] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 482, 19520, 19535), ("shadow-stdlib/src/shadow_stdlib.mli", 484, 19606, 19633), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 482, 19520, 19534), ("shadow-stdlib/src/shadow_stdlib.mli", 484, 19606, 19634), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 482, 19520, 19534), ("shadow-stdlib/src/shadow_stdlib.mli", 484, 19606, 19634), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 482, 19520, 19520), ("shadow-stdlib/src/shadow_stdlib.mli", 484, 19606, 19635), 0))], Tag1 ("Shadow_stdlib", 85)), 0); (("float_of_int", 1449), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1116), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1115), 0), 100000000, 0, -1114), (("%floatofint", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 487, 19690, 19693), ("shadow-stdlib/src/shadow_stdlib.mli", 487, 19690, 19703), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.of_int] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 487, 19690, 19705), ("shadow-stdlib/src/shadow_stdlib.mli", 489, 19776, 19803), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 487, 19690, 19704), ("shadow-stdlib/src/shadow_stdlib.mli", 489, 19776, 19804), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 487, 19690, 19704), ("shadow-stdlib/src/shadow_stdlib.mli", 489, 19776, 19804), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 487, 19690, 19690), ("shadow-stdlib/src/shadow_stdlib.mli", 489, 19776, 19805), 0))], Tag1 ("Shadow_stdlib", 86)), 0); (("truncate", 1450), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1113), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1112), 0), 100000000, 0, -1111), (("%intoffloat", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 492, 19856, 19859), ("shadow-stdlib/src/shadow_stdlib.mli", 492, 19856, 19869), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Int.of_float] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 492, 19856, 19871), ("shadow-stdlib/src/shadow_stdlib.mli", 494, 19942, 19969), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 492, 19856, 19870), ("shadow-stdlib/src/shadow_stdlib.mli", 494, 19942, 19970), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 492, 19856, 19870), ("shadow-stdlib/src/shadow_stdlib.mli", 494, 19942, 19970), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 492, 19856, 19856), ("shadow-stdlib/src/shadow_stdlib.mli", 494, 19942, 19971), 0))], Tag1 ("Shadow_stdlib", 87)), 0); (("int_of_float", 1451), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1110), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1109), 0), 100000000, 0, -1108), (("%intoffloat", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 497, 20026, 20029), ("shadow-stdlib/src/shadow_stdlib.mli", 497, 20026, 20039), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Int.of_float] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 497, 20026, 20041), ("shadow-stdlib/src/shadow_stdlib.mli", 499, 20112, 20139), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 497, 20026, 20040), ("shadow-stdlib/src/shadow_stdlib.mli", 499, 20112, 20140), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 497, 20026, 20040), ("shadow-stdlib/src/shadow_stdlib.mli", 499, 20112, 20140), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 497, 20026, 20026), ("shadow-stdlib/src/shadow_stdlib.mli", 499, 20112, 20141), 0))], Tag1 ("Shadow_stdlib", 88)), 0); (("infinity", 1452), ((Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1107), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 502, 20164, 20167), ("shadow-stdlib/src/shadow_stdlib.mli", 502, 20164, 20177), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.infinity] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 502, 20164, 20179), ("shadow-stdlib/src/shadow_stdlib.mli", 504, 20250, 20279), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 502, 20164, 20178), ("shadow-stdlib/src/shadow_stdlib.mli", 504, 20250, 20280), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 502, 20164, 20178), ("shadow-stdlib/src/shadow_stdlib.mli", 504, 20250, 20280), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 502, 20164, 20164), ("shadow-stdlib/src/shadow_stdlib.mli", 504, 20250, 20281), 0))], Tag1 ("Shadow_stdlib", 89)), 0); (("neg_infinity", 1453), ((Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1106), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 507, 20308, 20311), ("shadow-stdlib/src/shadow_stdlib.mli", 507, 20308, 20321), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.neg_infinity] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 507, 20308, 20323), ("shadow-stdlib/src/shadow_stdlib.mli", 509, 20394, 20427), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 507, 20308, 20322), ("shadow-stdlib/src/shadow_stdlib.mli", 509, 20394, 20428), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 507, 20308, 20322), ("shadow-stdlib/src/shadow_stdlib.mli", 509, 20394, 20428), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 507, 20308, 20308), ("shadow-stdlib/src/shadow_stdlib.mli", 509, 20394, 20429), 0))], Tag1 ("Shadow_stdlib", 90)), 0); (("nan", 1454), ((Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1105), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 512, 20447, 20450), ("shadow-stdlib/src/shadow_stdlib.mli", 512, 20447, 20460), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.nan] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 512, 20447, 20462), ("shadow-stdlib/src/shadow_stdlib.mli", 514, 20533, 20557), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 512, 20447, 20461), ("shadow-stdlib/src/shadow_stdlib.mli", 514, 20533, 20558), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 512, 20447, 20461), ("shadow-stdlib/src/shadow_stdlib.mli", 514, 20533, 20558), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 512, 20447, 20447), ("shadow-stdlib/src/shadow_stdlib.mli", 514, 20533, 20559), 0))], Tag1 ("Shadow_stdlib", 91)), 0); (("max_float", 1455), ((Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1104), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 517, 20583, 20586), ("shadow-stdlib/src/shadow_stdlib.mli", 517, 20583, 20596), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.max_finite_value] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 517, 20583, 20598), ("shadow-stdlib/src/shadow_stdlib.mli", 519, 20669, 20706), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 517, 20583, 20597), ("shadow-stdlib/src/shadow_stdlib.mli", 519, 20669, 20707), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 517, 20583, 20597), ("shadow-stdlib/src/shadow_stdlib.mli", 519, 20669, 20707), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 517, 20583, 20583), ("shadow-stdlib/src/shadow_stdlib.mli", 519, 20669, 20708), 0))], Tag1 ("Shadow_stdlib", 92)), 0); (("min_float", 1456), ((Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1103), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 522, 20732, 20735), ("shadow-stdlib/src/shadow_stdlib.mli", 522, 20732, 20745), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.min_positive_normal_value] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 522, 20732, 20747), ("shadow-stdlib/src/shadow_stdlib.mli", 524, 20818, 20864), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 522, 20732, 20746), ("shadow-stdlib/src/shadow_stdlib.mli", 524, 20818, 20865), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 522, 20732, 20746), ("shadow-stdlib/src/shadow_stdlib.mli", 524, 20818, 20865), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 522, 20732, 20732), ("shadow-stdlib/src/shadow_stdlib.mli", 524, 20818, 20866), 0))], Tag1 ("Shadow_stdlib", 93)), 0); (("epsilon_float", 1457), ((Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1102), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 527, 20894, 20897), ("shadow-stdlib/src/shadow_stdlib.mli", 527, 20894, 20907), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.epsilon_float] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 527, 20894, 20909), ("shadow-stdlib/src/shadow_stdlib.mli", 529, 20980, 21014), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 527, 20894, 20908), ("shadow-stdlib/src/shadow_stdlib.mli", 529, 20980, 21015), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 527, 20894, 20908), ("shadow-stdlib/src/shadow_stdlib.mli", 529, 20980, 21015), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 527, 20894, 20894), ("shadow-stdlib/src/shadow_stdlib.mli", 529, 20980, 21016), 0))], Tag1 ("Shadow_stdlib", 94)), 0); Tag1 (("fpclass", 1458), (0, 0, Tag1 ([(("FP_normal", 365), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 96)); (("FP_subnormal", 366), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 97)); (("FP_zero", 367), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 98)); (("FP_infinite", 368), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 99)); (("FP_nan", 369), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 100))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "fpclass"), 0, (0)), 100000000, 0, -1101)), 0, 0, 0, 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 532, 21115, 21118), ("shadow-stdlib/src/shadow_stdlib.mli", 532, 21115, 21128), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.fpclass instead", (("shadow-stdlib/src/shadow_stdlib.mli", 532, 21115, 21130), ("shadow-stdlib/src/shadow_stdlib.mli", 536, 21351, 21398), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 532, 21115, 21129), ("shadow-stdlib/src/shadow_stdlib.mli", 536, 21351, 21399), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 532, 21115, 21129), ("shadow-stdlib/src/shadow_stdlib.mli", 536, 21351, 21399), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 532, 21115, 21115), ("shadow-stdlib/src/shadow_stdlib.mli", 536, 21351, 21400), 0))], 1, 0, Tag1 ("Shadow_stdlib", 95)), 0, 0); (("classify_float", 1459), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1100), (Tag3 ((("fpclass", 1458)), 0, (0)), 100000000, 0, -1099), 0), 100000000, 0, -1098), (("caml_classify_float", 1, 0, "caml_classify_float_unboxed", [1], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("noalloc", (("shadow-stdlib/src/shadow_stdlib.mli", 538, 21402, 21515), ("shadow-stdlib/src/shadow_stdlib.mli", 538, 21402, 21522), 0)), (0), (("shadow-stdlib/src/shadow_stdlib.mli", 538, 21402, 21512), ("shadow-stdlib/src/shadow_stdlib.mli", 538, 21402, 21523), 0)); (("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 539, 21524, 21527), ("shadow-stdlib/src/shadow_stdlib.mli", 539, 21524, 21537), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.classify] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 539, 21524, 21539), ("shadow-stdlib/src/shadow_stdlib.mli", 541, 21610, 21639), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 539, 21524, 21538), ("shadow-stdlib/src/shadow_stdlib.mli", 541, 21610, 21640), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 539, 21524, 21538), ("shadow-stdlib/src/shadow_stdlib.mli", 541, 21610, 21640), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 539, 21524, 21524), ("shadow-stdlib/src/shadow_stdlib.mli", 541, 21610, 21641), 0))], Tag1 ("Shadow_stdlib", 101)), 0); (("int_of_char", 1460), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1097), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1096), 0), 100000000, 0, -1095), (("%identity", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 550, 21932, 21935), ("shadow-stdlib/src/shadow_stdlib.mli", 550, 21932, 21945), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Char.to_int] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 550, 21932, 21947), ("shadow-stdlib/src/shadow_stdlib.mli", 552, 22018, 22044), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 550, 21932, 21946), ("shadow-stdlib/src/shadow_stdlib.mli", 552, 22018, 22045), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 550, 21932, 21946), ("shadow-stdlib/src/shadow_stdlib.mli", 552, 22018, 22045), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 550, 21932, 21932), ("shadow-stdlib/src/shadow_stdlib.mli", 552, 22018, 22046), 0))], Tag1 ("Shadow_stdlib", 103)), 0); (("char_of_int", 1461), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1094), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1093), 0), 100000000, 0, -1092), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 555, 22078, 22081), ("shadow-stdlib/src/shadow_stdlib.mli", 555, 22078, 22091), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Char.of_int_exn] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 555, 22078, 22093), ("shadow-stdlib/src/shadow_stdlib.mli", 557, 22164, 22194), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 555, 22078, 22092), ("shadow-stdlib/src/shadow_stdlib.mli", 557, 22164, 22195), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 555, 22078, 22092), ("shadow-stdlib/src/shadow_stdlib.mli", 557, 22164, 22195), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 555, 22078, 22078), ("shadow-stdlib/src/shadow_stdlib.mli", 557, 22164, 22196), 0))], Tag1 ("Shadow_stdlib", 104)), 0); (("string_of_bool", 1462), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1091), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1090), 0), 100000000, 0, -1089), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 566, 22477, 22480), ("shadow-stdlib/src/shadow_stdlib.mli", 566, 22477, 22490), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Bool.to_string] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 566, 22477, 22492), ("shadow-stdlib/src/shadow_stdlib.mli", 568, 22563, 22592), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 566, 22477, 22491), ("shadow-stdlib/src/shadow_stdlib.mli", 568, 22563, 22593), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 566, 22477, 22491), ("shadow-stdlib/src/shadow_stdlib.mli", 568, 22563, 22593), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 566, 22477, 22477), ("shadow-stdlib/src/shadow_stdlib.mli", 568, 22563, 22594), 0))], Tag1 ("Shadow_stdlib", 106)), 0); (("bool_of_string_opt", 1463), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1088), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1087)], (0)), 100000000, 0, -1086), 0), 100000000, 0, -1085), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 571, 22643, 22646), ("shadow-stdlib/src/shadow_stdlib.mli", 571, 22643, 22656), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.bool_of_string_opt] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 571, 22643, 22658), ("shadow-stdlib/src/shadow_stdlib.mli", 574, 22799, 22853), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 571, 22643, 22657), ("shadow-stdlib/src/shadow_stdlib.mli", 574, 22799, 22854), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 571, 22643, 22657), ("shadow-stdlib/src/shadow_stdlib.mli", 574, 22799, 22854), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 571, 22643, 22643), ("shadow-stdlib/src/shadow_stdlib.mli", 574, 22799, 22855), 0))], Tag1 ("Shadow_stdlib", 107)), 0); (("bool_of_string", 1464), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1084), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1083), 0), 100000000, 0, -1082), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 577, 22893, 22896), ("shadow-stdlib/src/shadow_stdlib.mli", 577, 22893, 22906), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Bool.of_string] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 577, 22893, 22908), ("shadow-stdlib/src/shadow_stdlib.mli", 579, 22979, 23008), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 577, 22893, 22907), ("shadow-stdlib/src/shadow_stdlib.mli", 579, 22979, 23009), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 577, 22893, 22907), ("shadow-stdlib/src/shadow_stdlib.mli", 579, 22979, 23009), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 577, 22893, 22893), ("shadow-stdlib/src/shadow_stdlib.mli", 579, 22979, 23010), 0))], Tag1 ("Shadow_stdlib", 108)), 0); (("string_of_int", 1465), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1081), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1080), 0), 100000000, 0, -1079), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 582, 23046, 23049), ("shadow-stdlib/src/shadow_stdlib.mli", 582, 23046, 23059), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Int.to_string] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 582, 23046, 23061), ("shadow-stdlib/src/shadow_stdlib.mli", 584, 23132, 23160), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 582, 23046, 23060), ("shadow-stdlib/src/shadow_stdlib.mli", 584, 23132, 23161), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 582, 23046, 23060), ("shadow-stdlib/src/shadow_stdlib.mli", 584, 23132, 23161), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 582, 23046, 23046), ("shadow-stdlib/src/shadow_stdlib.mli", 584, 23132, 23162), 0))], Tag1 ("Shadow_stdlib", 109)), 0); (("int_of_string_opt", 1466), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1078), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1077)], (0)), 100000000, 0, -1076), 0), 100000000, 0, -1075), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 587, 23209, 23212), ("shadow-stdlib/src/shadow_stdlib.mli", 587, 23209, 23222), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.int_of_string_opt] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 587, 23209, 23224), ("shadow-stdlib/src/shadow_stdlib.mli", 590, 23365, 23418), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 587, 23209, 23223), ("shadow-stdlib/src/shadow_stdlib.mli", 590, 23365, 23419), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 587, 23209, 23223), ("shadow-stdlib/src/shadow_stdlib.mli", 590, 23365, 23419), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 587, 23209, 23209), ("shadow-stdlib/src/shadow_stdlib.mli", 590, 23365, 23420), 0))], Tag1 ("Shadow_stdlib", 110)), 0); (("int_of_string", 1467), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1074), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1073), 0), 100000000, 0, -1072), (("caml_int_of_string", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 593, 23484, 23487), ("shadow-stdlib/src/shadow_stdlib.mli", 593, 23484, 23497), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Int.of_string] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 593, 23484, 23499), ("shadow-stdlib/src/shadow_stdlib.mli", 595, 23570, 23598), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 593, 23484, 23498), ("shadow-stdlib/src/shadow_stdlib.mli", 595, 23570, 23599), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 593, 23484, 23498), ("shadow-stdlib/src/shadow_stdlib.mli", 595, 23570, 23599), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 593, 23484, 23484), ("shadow-stdlib/src/shadow_stdlib.mli", 595, 23570, 23600), 0))], Tag1 ("Shadow_stdlib", 111)), 0); (("string_of_float", 1468), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1071), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1070), 0), 100000000, 0, -1069), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 598, 23640, 23643), ("shadow-stdlib/src/shadow_stdlib.mli", 598, 23640, 23653), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Float.to_string] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 598, 23640, 23655), ("shadow-stdlib/src/shadow_stdlib.mli", 600, 23726, 23756), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 598, 23640, 23654), ("shadow-stdlib/src/shadow_stdlib.mli", 600, 23726, 23757), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 598, 23640, 23654), ("shadow-stdlib/src/shadow_stdlib.mli", 600, 23726, 23757), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 598, 23640, 23640), ("shadow-stdlib/src/shadow_stdlib.mli", 600, 23726, 23758), 0))], Tag1 ("Shadow_stdlib", 112)), 0); (("float_of_string_opt", 1469), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1068), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1067)], (0)), 100000000, 0, -1066), 0), 100000000, 0, -1065), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 603, 23809, 23812), ("shadow-stdlib/src/shadow_stdlib.mli", 603, 23809, 23822), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.float_of_string_opt] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 603, 23809, 23824), ("shadow-stdlib/src/shadow_stdlib.mli", 606, 23965, 24020), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 603, 23809, 23823), ("shadow-stdlib/src/shadow_stdlib.mli", 606, 23965, 24021), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 603, 23809, 23823), ("shadow-stdlib/src/shadow_stdlib.mli", 606, 23965, 24021), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 603, 23809, 23809), ("shadow-stdlib/src/shadow_stdlib.mli", 606, 23965, 24022), 0))], Tag1 ("Shadow_stdlib", 113)), 0); Tag1 (("in_channel", 1470), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "in_channel"), 0, (0)), 100000000, 0, -1064)), 0, 0, 0, 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 632, 24978, 24981), ("shadow-stdlib/src/shadow_stdlib.mli", 632, 24978, 24991), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.t] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 632, 24978, 24993), ("shadow-stdlib/src/shadow_stdlib.mli", 634, 25064, 25097), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 632, 24978, 24992), ("shadow-stdlib/src/shadow_stdlib.mli", 634, 25064, 25098), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 632, 24978, 24992), ("shadow-stdlib/src/shadow_stdlib.mli", 634, 25064, 25098), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 632, 24978, 24978), ("shadow-stdlib/src/shadow_stdlib.mli", 634, 25064, 25099), 0))], 0, 0, Tag1 ("Shadow_stdlib", 118)), 0, 0); Tag1 (("out_channel", 1471), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -1063)), 0, 0, 0, 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 637, 25146, 25149), ("shadow-stdlib/src/shadow_stdlib.mli", 637, 25146, 25159), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.t] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 637, 25146, 25161), ("shadow-stdlib/src/shadow_stdlib.mli", 639, 25232, 25266), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 637, 25146, 25160), ("shadow-stdlib/src/shadow_stdlib.mli", 639, 25232, 25267), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 637, 25146, 25160), ("shadow-stdlib/src/shadow_stdlib.mli", 639, 25232, 25267), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 637, 25146, 25146), ("shadow-stdlib/src/shadow_stdlib.mli", 639, 25232, 25268), 0))], 0, 0, Tag1 ("Shadow_stdlib", 119)), 0, 0); (("stdin", 1472), ((Tag3 ((("in_channel", 1470)), 0, (0)), 100000000, 0, -1062), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 642, 25293, 25296), ("shadow-stdlib/src/shadow_stdlib.mli", 642, 25293, 25306), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.stdin] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 642, 25293, 25308), ("shadow-stdlib/src/shadow_stdlib.mli", 644, 25379, 25405), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 642, 25293, 25307), ("shadow-stdlib/src/shadow_stdlib.mli", 644, 25379, 25406), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 642, 25293, 25307), ("shadow-stdlib/src/shadow_stdlib.mli", 644, 25379, 25406), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 642, 25293, 25293), ("shadow-stdlib/src/shadow_stdlib.mli", 644, 25379, 25407), 0))], Tag1 ("Shadow_stdlib", 120)), 0); (("stdout", 1473), ((Tag3 ((("out_channel", 1471)), 0, (0)), 100000000, 0, -1061), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 647, 25434, 25437), ("shadow-stdlib/src/shadow_stdlib.mli", 647, 25434, 25447), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.stdout] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 647, 25434, 25449), ("shadow-stdlib/src/shadow_stdlib.mli", 649, 25520, 25547), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 647, 25434, 25448), ("shadow-stdlib/src/shadow_stdlib.mli", 649, 25520, 25548), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 647, 25434, 25448), ("shadow-stdlib/src/shadow_stdlib.mli", 649, 25520, 25548), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 647, 25434, 25434), ("shadow-stdlib/src/shadow_stdlib.mli", 649, 25520, 25549), 0))], Tag1 ("Shadow_stdlib", 121)), 0); (("stderr", 1474), ((Tag3 ((("out_channel", 1471)), 0, (0)), 100000000, 0, -1060), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 652, 25576, 25579), ("shadow-stdlib/src/shadow_stdlib.mli", 652, 25576, 25589), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.stderr] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 652, 25576, 25591), ("shadow-stdlib/src/shadow_stdlib.mli", 654, 25662, 25689), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 652, 25576, 25590), ("shadow-stdlib/src/shadow_stdlib.mli", 654, 25662, 25690), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 652, 25576, 25590), ("shadow-stdlib/src/shadow_stdlib.mli", 654, 25662, 25690), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 652, 25576, 25576), ("shadow-stdlib/src/shadow_stdlib.mli", 654, 25662, 25691), 0))], Tag1 ("Shadow_stdlib", 122)), 0); (("print_char", 1475), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1059), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1058), 0), 100000000, 0, -1057), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 657, 25723, 25726), ("shadow-stdlib/src/shadow_stdlib.mli", 657, 25723, 25736), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_char Stdio.stdout] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 657, 25723, 25738), ("shadow-stdlib/src/shadow_stdlib.mli", 659, 25809, 25866), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 657, 25723, 25737), ("shadow-stdlib/src/shadow_stdlib.mli", 659, 25809, 25867), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 657, 25723, 25737), ("shadow-stdlib/src/shadow_stdlib.mli", 659, 25809, 25867), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 657, 25723, 25723), ("shadow-stdlib/src/shadow_stdlib.mli", 659, 25809, 25868), 0))], Tag1 ("Shadow_stdlib", 123)), 0); (("print_string", 1476), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1056), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1055), 0), 100000000, 0, -1054), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 662, 25904, 25907), ("shadow-stdlib/src/shadow_stdlib.mli", 662, 25904, 25917), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_string Stdio.stdout] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 662, 25904, 25919), ("shadow-stdlib/src/shadow_stdlib.mli", 664, 25990, 26049), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 662, 25904, 25918), ("shadow-stdlib/src/shadow_stdlib.mli", 664, 25990, 26050), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 662, 25904, 25918), ("shadow-stdlib/src/shadow_stdlib.mli", 664, 25990, 26050), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 662, 25904, 25904), ("shadow-stdlib/src/shadow_stdlib.mli", 664, 25990, 26051), 0))], Tag1 ("Shadow_stdlib", 124)), 0); (("print_bytes", 1477), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -1053), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1052), 0), 100000000, 0, -1051), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 667, 26085, 26088), ("shadow-stdlib/src/shadow_stdlib.mli", 667, 26085, 26098), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_bytes Stdio.stdout] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 667, 26085, 26100), ("shadow-stdlib/src/shadow_stdlib.mli", 669, 26171, 26229), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 667, 26085, 26099), ("shadow-stdlib/src/shadow_stdlib.mli", 669, 26171, 26230), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 667, 26085, 26099), ("shadow-stdlib/src/shadow_stdlib.mli", 669, 26171, 26230), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 667, 26085, 26085), ("shadow-stdlib/src/shadow_stdlib.mli", 669, 26171, 26231), 0))], Tag1 ("Shadow_stdlib", 125)), 0); (("print_int", 1478), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1050), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1049), 0), 100000000, 0, -1048), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 672, 26261, 26264), ("shadow-stdlib/src/shadow_stdlib.mli", 672, 26261, 26274), 0)), ([([(Tag5 ((((("%"), (("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26367), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26368), 0))), (("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26367), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26368), 0), 0, 0), [(0, (Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.eprintf ", (("shadow-stdlib/src/shadow_stdlib.mli", 672, 26261, 26276), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26366), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 672, 26261, 26275), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26367), 0), 0, 0)); (0, (Tag5 ((((("d"), (("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26368), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26369), 0))), (("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26368), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26369), 0), 0, 0), [(0, (Tag1 (Tag2 ("] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26370), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26380), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26369), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26381), 0), 0, 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26368), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26381), 0), 0, 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 672, 26261, 26275), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26381), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 672, 26261, 26275), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26381), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 672, 26261, 26261), ("shadow-stdlib/src/shadow_stdlib.mli", 674, 26347, 26382), 0))], Tag1 ("Shadow_stdlib", 126)), 0); (("print_float", 1479), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1047), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1046), 0), 100000000, 0, -1045), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 677, 26416, 26419), ("shadow-stdlib/src/shadow_stdlib.mli", 677, 26416, 26429), 0)), ([([(Tag5 ((((("%"), (("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26522), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26523), 0))), (("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26522), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26523), 0), 0, 0), [(0, (Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.eprintf ", (("shadow-stdlib/src/shadow_stdlib.mli", 677, 26416, 26431), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26521), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 677, 26416, 26430), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26522), 0), 0, 0)); (0, (Tag5 ((((("f"), (("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26523), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26524), 0))), (("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26523), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26524), 0), 0, 0), [(0, (Tag1 (Tag2 ("] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26525), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26535), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26524), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26536), 0), 0, 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26523), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26536), 0), 0, 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 677, 26416, 26430), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26536), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 677, 26416, 26430), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26536), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 677, 26416, 26416), ("shadow-stdlib/src/shadow_stdlib.mli", 679, 26502, 26537), 0))], Tag1 ("Shadow_stdlib", 127)), 0); (("print_endline", 1480), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1044), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1043), 0), 100000000, 0, -1042), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 682, 26574, 26577), ("shadow-stdlib/src/shadow_stdlib.mli", 682, 26574, 26587), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.print_endline] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 682, 26574, 26589), ("shadow-stdlib/src/shadow_stdlib.mli", 684, 26660, 26694), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 682, 26574, 26588), ("shadow-stdlib/src/shadow_stdlib.mli", 684, 26660, 26695), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 682, 26574, 26588), ("shadow-stdlib/src/shadow_stdlib.mli", 684, 26660, 26695), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 682, 26574, 26574), ("shadow-stdlib/src/shadow_stdlib.mli", 684, 26660, 26696), 0))], Tag1 ("Shadow_stdlib", 128)), 0); (("print_newline", 1481), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1041), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1040), 0), 100000000, 0, -1039), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 687, 26731, 26734), ("shadow-stdlib/src/shadow_stdlib.mli", 687, 26731, 26744), 0)), ([([(Tag5 ((((("%!"), (("shadow-stdlib/src/shadow_stdlib.mli", 690, 26838, 26838), ("shadow-stdlib/src/shadow_stdlib.mli", 690, 26838, 26840), 0))), (("shadow-stdlib/src/shadow_stdlib.mli", 690, 26838, 26838), ("shadow-stdlib/src/shadow_stdlib.mli", 690, 26838, 26840), 0), 0, 0), [(0, (Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.eprintf ", (("shadow-stdlib/src/shadow_stdlib.mli", 687, 26731, 26746), ("shadow-stdlib/src/shadow_stdlib.mli", 689, 26817, 26836), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 687, 26731, 26745), ("shadow-stdlib/src/shadow_stdlib.mli", 689, 26817, 26837), 0), 0, 0)); (0, (Tag1 (Tag2 ("] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 690, 26838, 26841), ("shadow-stdlib/src/shadow_stdlib.mli", 690, 26838, 26851), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 690, 26838, 26840), ("shadow-stdlib/src/shadow_stdlib.mli", 690, 26838, 26852), 0), 0, 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 687, 26731, 26745), ("shadow-stdlib/src/shadow_stdlib.mli", 690, 26838, 26852), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 687, 26731, 26745), ("shadow-stdlib/src/shadow_stdlib.mli", 690, 26838, 26852), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 687, 26731, 26731), ("shadow-stdlib/src/shadow_stdlib.mli", 690, 26838, 26853), 0))], Tag1 ("Shadow_stdlib", 129)), 0); (("prerr_char", 1482), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1038), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1037), 0), 100000000, 0, -1036), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 693, 26885, 26888), ("shadow-stdlib/src/shadow_stdlib.mli", 693, 26885, 26898), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_char Stdio.stderr] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 693, 26885, 26900), ("shadow-stdlib/src/shadow_stdlib.mli", 695, 26971, 27028), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 693, 26885, 26899), ("shadow-stdlib/src/shadow_stdlib.mli", 695, 26971, 27029), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 693, 26885, 26899), ("shadow-stdlib/src/shadow_stdlib.mli", 695, 26971, 27029), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 693, 26885, 26885), ("shadow-stdlib/src/shadow_stdlib.mli", 695, 26971, 27030), 0))], Tag1 ("Shadow_stdlib", 130)), 0); (("prerr_string", 1483), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1035), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1034), 0), 100000000, 0, -1033), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 698, 27066, 27069), ("shadow-stdlib/src/shadow_stdlib.mli", 698, 27066, 27079), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_string Stdio.stderr] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 698, 27066, 27081), ("shadow-stdlib/src/shadow_stdlib.mli", 700, 27152, 27211), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 698, 27066, 27080), ("shadow-stdlib/src/shadow_stdlib.mli", 700, 27152, 27212), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 698, 27066, 27080), ("shadow-stdlib/src/shadow_stdlib.mli", 700, 27152, 27212), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 698, 27066, 27066), ("shadow-stdlib/src/shadow_stdlib.mli", 700, 27152, 27213), 0))], Tag1 ("Shadow_stdlib", 131)), 0); (("prerr_bytes", 1484), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -1032), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1031), 0), 100000000, 0, -1030), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 703, 27247, 27250), ("shadow-stdlib/src/shadow_stdlib.mli", 703, 27247, 27260), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_bytes Stdio.stderr] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 703, 27247, 27262), ("shadow-stdlib/src/shadow_stdlib.mli", 705, 27333, 27391), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 703, 27247, 27261), ("shadow-stdlib/src/shadow_stdlib.mli", 705, 27333, 27392), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 703, 27247, 27261), ("shadow-stdlib/src/shadow_stdlib.mli", 705, 27333, 27392), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 703, 27247, 27247), ("shadow-stdlib/src/shadow_stdlib.mli", 705, 27333, 27393), 0))], Tag1 ("Shadow_stdlib", 132)), 0); (("prerr_int", 1485), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1029), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1028), 0), 100000000, 0, -1027), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 708, 27423, 27426), ("shadow-stdlib/src/shadow_stdlib.mli", 708, 27423, 27436), 0)), ([([(Tag5 ((((("%"), (("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27529), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27530), 0))), (("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27529), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27530), 0), 0, 0), [(0, (Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.eprintf ", (("shadow-stdlib/src/shadow_stdlib.mli", 708, 27423, 27438), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27528), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 708, 27423, 27437), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27529), 0), 0, 0)); (0, (Tag5 ((((("d"), (("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27530), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27531), 0))), (("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27530), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27531), 0), 0, 0), [(0, (Tag1 (Tag2 ("] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27532), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27542), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27531), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27543), 0), 0, 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27530), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27543), 0), 0, 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 708, 27423, 27437), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27543), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 708, 27423, 27437), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27543), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 708, 27423, 27423), ("shadow-stdlib/src/shadow_stdlib.mli", 710, 27509, 27544), 0))], Tag1 ("Shadow_stdlib", 133)), 0); (("prerr_float", 1486), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1026), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1025), 0), 100000000, 0, -1024), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 713, 27578, 27581), ("shadow-stdlib/src/shadow_stdlib.mli", 713, 27578, 27591), 0)), ([([(Tag5 ((((("%"), (("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27684), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27685), 0))), (("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27684), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27685), 0), 0, 0), [(0, (Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.eprintf ", (("shadow-stdlib/src/shadow_stdlib.mli", 713, 27578, 27593), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27683), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 713, 27578, 27592), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27684), 0), 0, 0)); (0, (Tag5 ((((("f"), (("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27685), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27686), 0))), (("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27685), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27686), 0), 0, 0), [(0, (Tag1 (Tag2 ("] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27687), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27697), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27686), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27698), 0), 0, 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27685), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27698), 0), 0, 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 713, 27578, 27592), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27698), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 713, 27578, 27592), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27698), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 713, 27578, 27578), ("shadow-stdlib/src/shadow_stdlib.mli", 715, 27664, 27699), 0))], Tag1 ("Shadow_stdlib", 134)), 0); (("prerr_endline", 1487), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1023), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1022), 0), 100000000, 0, -1021), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 718, 27736, 27739), ("shadow-stdlib/src/shadow_stdlib.mli", 718, 27736, 27749), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.prerr_endline] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 718, 27736, 27751), ("shadow-stdlib/src/shadow_stdlib.mli", 720, 27822, 27856), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 718, 27736, 27750), ("shadow-stdlib/src/shadow_stdlib.mli", 720, 27822, 27857), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 718, 27736, 27750), ("shadow-stdlib/src/shadow_stdlib.mli", 720, 27822, 27857), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 718, 27736, 27736), ("shadow-stdlib/src/shadow_stdlib.mli", 720, 27822, 27858), 0))], Tag1 ("Shadow_stdlib", 135)), 0); (("prerr_newline", 1488), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1020), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1019), 0), 100000000, 0, -1018), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 723, 27893, 27896), ("shadow-stdlib/src/shadow_stdlib.mli", 723, 27893, 27906), 0)), ([([(Tag5 ((((("%!"), (("shadow-stdlib/src/shadow_stdlib.mli", 726, 28000, 28000), ("shadow-stdlib/src/shadow_stdlib.mli", 726, 28000, 28002), 0))), (("shadow-stdlib/src/shadow_stdlib.mli", 726, 28000, 28000), ("shadow-stdlib/src/shadow_stdlib.mli", 726, 28000, 28002), 0), 0, 0), [(0, (Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.eprintf ", (("shadow-stdlib/src/shadow_stdlib.mli", 723, 27893, 27908), ("shadow-stdlib/src/shadow_stdlib.mli", 725, 27979, 27998), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 723, 27893, 27907), ("shadow-stdlib/src/shadow_stdlib.mli", 725, 27979, 27999), 0), 0, 0)); (0, (Tag1 (Tag2 ("] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 726, 28000, 28003), ("shadow-stdlib/src/shadow_stdlib.mli", 726, 28000, 28013), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 726, 28000, 28002), ("shadow-stdlib/src/shadow_stdlib.mli", 726, 28000, 28014), 0), 0, 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 723, 27893, 27907), ("shadow-stdlib/src/shadow_stdlib.mli", 726, 28000, 28014), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 723, 27893, 27907), ("shadow-stdlib/src/shadow_stdlib.mli", 726, 28000, 28014), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 723, 27893, 27893), ("shadow-stdlib/src/shadow_stdlib.mli", 726, 28000, 28015), 0))], Tag1 ("Shadow_stdlib", 136)), 0); (("read_line", 1489), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1017), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1016), 0), 100000000, 0, -1015), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 729, 28048, 28051), ("shadow-stdlib/src/shadow_stdlib.mli", 729, 28048, 28061), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.input_line] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 729, 28048, 28063), ("shadow-stdlib/src/shadow_stdlib.mli", 731, 28134, 28176), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 729, 28048, 28062), ("shadow-stdlib/src/shadow_stdlib.mli", 731, 28134, 28177), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 729, 28048, 28062), ("shadow-stdlib/src/shadow_stdlib.mli", 731, 28134, 28177), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 729, 28048, 28048), ("shadow-stdlib/src/shadow_stdlib.mli", 731, 28134, 28178), 0))], Tag1 ("Shadow_stdlib", 137)), 0); (("read_int_opt", 1490), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1014), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1013)], (0)), 100000000, 0, -1012), 0), 100000000, 0, -1011), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 734, 28218, 28221), ("shadow-stdlib/src/shadow_stdlib.mli", 734, 28218, 28231), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.read_int_opt] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 734, 28218, 28233), ("shadow-stdlib/src/shadow_stdlib.mli", 737, 28374, 28422), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 734, 28218, 28232), ("shadow-stdlib/src/shadow_stdlib.mli", 737, 28374, 28423), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 734, 28218, 28232), ("shadow-stdlib/src/shadow_stdlib.mli", 737, 28374, 28423), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 734, 28218, 28218), ("shadow-stdlib/src/shadow_stdlib.mli", 737, 28374, 28424), 0))], Tag1 ("Shadow_stdlib", 138)), 0); (("read_int", 1491), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1010), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1009), 0), 100000000, 0, -1008), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 740, 28453, 28456), ("shadow-stdlib/src/shadow_stdlib.mli", 740, 28453, 28466), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.read_int] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 740, 28453, 28468), ("shadow-stdlib/src/shadow_stdlib.mli", 743, 28609, 28653), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 740, 28453, 28467), ("shadow-stdlib/src/shadow_stdlib.mli", 743, 28609, 28654), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 740, 28453, 28467), ("shadow-stdlib/src/shadow_stdlib.mli", 743, 28609, 28654), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 740, 28453, 28453), ("shadow-stdlib/src/shadow_stdlib.mli", 743, 28609, 28655), 0))], Tag1 ("Shadow_stdlib", 139)), 0); (("read_float_opt", 1492), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1007), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1006)], (0)), 100000000, 0, -1005), 0), 100000000, 0, -1004), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 746, 28699, 28702), ("shadow-stdlib/src/shadow_stdlib.mli", 746, 28699, 28712), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.read_float_opt] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 746, 28699, 28714), ("shadow-stdlib/src/shadow_stdlib.mli", 749, 28855, 28905), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 746, 28699, 28713), ("shadow-stdlib/src/shadow_stdlib.mli", 749, 28855, 28906), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 746, 28699, 28713), ("shadow-stdlib/src/shadow_stdlib.mli", 749, 28855, 28906), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 746, 28699, 28699), ("shadow-stdlib/src/shadow_stdlib.mli", 749, 28855, 28907), 0))], Tag1 ("Shadow_stdlib", 140)), 0); (("read_float", 1493), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1003), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1002), 0), 100000000, 0, -1001), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 752, 28940, 28943), ("shadow-stdlib/src/shadow_stdlib.mli", 752, 28940, 28953), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.read_float] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 752, 28940, 28955), ("shadow-stdlib/src/shadow_stdlib.mli", 755, 29096, 29142), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 752, 28940, 28954), ("shadow-stdlib/src/shadow_stdlib.mli", 755, 29096, 29143), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 752, 28940, 28954), ("shadow-stdlib/src/shadow_stdlib.mli", 755, 29096, 29143), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 752, 28940, 28940), ("shadow-stdlib/src/shadow_stdlib.mli", 755, 29096, 29144), 0))], Tag1 ("Shadow_stdlib", 141)), 0); Tag1 (("open_flag", 1494), (0, 0, Tag1 ([(("Open_rdonly", 412), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 143)); (("Open_wronly", 413), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 144)); (("Open_append", 414), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 145)); (("Open_creat", 415), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 146)); (("Open_trunc", 416), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 147)); (("Open_excl", 417), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 148)); (("Open_binary", 418), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 149)); (("Open_text", 419), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 150)); (("Open_nonblock", 420), (0), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 151))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "open_flag"), 0, (0)), 100000000, 0, -1000)), 0, 0, 0, 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 758, 29309, 29312), ("shadow-stdlib/src/shadow_stdlib.mli", 758, 29309, 29322), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.open_flag instead", (("shadow-stdlib/src/shadow_stdlib.mli", 758, 29309, 29324), ("shadow-stdlib/src/shadow_stdlib.mli", 762, 29545, 29594), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 758, 29309, 29323), ("shadow-stdlib/src/shadow_stdlib.mli", 762, 29545, 29595), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 758, 29309, 29323), ("shadow-stdlib/src/shadow_stdlib.mli", 762, 29545, 29595), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 758, 29309, 29309), ("shadow-stdlib/src/shadow_stdlib.mli", 762, 29545, 29596), 0))], 1, 0, Tag1 ("Shadow_stdlib", 142)), 0, 0); (("open_out", 1495), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -999), (Tag3 ((("out_channel", 1471)), 0, (0)), 100000000, 0, -998), 0), 100000000, 0, -997), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 765, 29635, 29638), ("shadow-stdlib/src/shadow_stdlib.mli", 765, 29635, 29648), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.create] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 765, 29635, 29650), ("shadow-stdlib/src/shadow_stdlib.mli", 767, 29721, 29760), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 765, 29635, 29649), ("shadow-stdlib/src/shadow_stdlib.mli", 767, 29721, 29761), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 765, 29635, 29649), ("shadow-stdlib/src/shadow_stdlib.mli", 767, 29721, 29761), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 765, 29635, 29635), ("shadow-stdlib/src/shadow_stdlib.mli", 767, 29721, 29762), 0))], Tag1 ("Shadow_stdlib", 152)), 0); (("open_out_bin", 1496), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -996), (Tag3 ((("out_channel", 1471)), 0, (0)), 100000000, 0, -995), 0), 100000000, 0, -994), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 770, 29805, 29808), ("shadow-stdlib/src/shadow_stdlib.mli", 770, 29805, 29818), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.create] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 770, 29805, 29820), ("shadow-stdlib/src/shadow_stdlib.mli", 772, 29891, 29930), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 770, 29805, 29819), ("shadow-stdlib/src/shadow_stdlib.mli", 772, 29891, 29931), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 770, 29805, 29819), ("shadow-stdlib/src/shadow_stdlib.mli", 772, 29891, 29931), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 770, 29805, 29805), ("shadow-stdlib/src/shadow_stdlib.mli", 772, 29891, 29932), 0))], Tag1 ("Shadow_stdlib", 153)), 0); (("open_out_gen", 1497), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("open_flag", 1494)), 0, (0)), 100000000, 0, -993)], (0)), 100000000, 0, -992), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -991), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -990), (Tag3 ((("out_channel", 1471)), 0, (0)), 100000000, 0, -989), 0), 100000000, 0, -988), 0), 100000000, 0, -987), 0), 100000000, 0, -986), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 775, 30000, 30003), ("shadow-stdlib/src/shadow_stdlib.mli", 775, 30000, 30013), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.open_out_gen] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 775, 30000, 30015), ("shadow-stdlib/src/shadow_stdlib.mli", 778, 30156, 30204), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 775, 30000, 30014), ("shadow-stdlib/src/shadow_stdlib.mli", 778, 30156, 30205), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 775, 30000, 30014), ("shadow-stdlib/src/shadow_stdlib.mli", 778, 30156, 30205), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 775, 30000, 30000), ("shadow-stdlib/src/shadow_stdlib.mli", 778, 30156, 30206), 0))], Tag1 ("Shadow_stdlib", 154)), 0); (("flush", 1498), ((Tag1 (0, (Tag3 ((("out_channel", 1471)), 0, (0)), 100000000, 0, -985), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -984), 0), 100000000, 0, -983), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 781, 30240, 30243), ("shadow-stdlib/src/shadow_stdlib.mli", 781, 30240, 30253), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.flush] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 781, 30240, 30255), ("shadow-stdlib/src/shadow_stdlib.mli", 783, 30326, 30364), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 781, 30240, 30254), ("shadow-stdlib/src/shadow_stdlib.mli", 783, 30326, 30365), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 781, 30240, 30254), ("shadow-stdlib/src/shadow_stdlib.mli", 783, 30326, 30365), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 781, 30240, 30240), ("shadow-stdlib/src/shadow_stdlib.mli", 783, 30326, 30366), 0))], Tag1 ("Shadow_stdlib", 155)), 0); (("flush_all", 1499), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -982), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -981), 0), 100000000, 0, -980), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 786, 30397, 30400), ("shadow-stdlib/src/shadow_stdlib.mli", 786, 30397, 30410), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.flush_all] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 786, 30397, 30412), ("shadow-stdlib/src/shadow_stdlib.mli", 789, 30553, 30598), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 786, 30397, 30411), ("shadow-stdlib/src/shadow_stdlib.mli", 789, 30553, 30599), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 786, 30397, 30411), ("shadow-stdlib/src/shadow_stdlib.mli", 789, 30553, 30599), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 786, 30397, 30397), ("shadow-stdlib/src/shadow_stdlib.mli", 789, 30553, 30600), 0))], Tag1 ("Shadow_stdlib", 156)), 0); (("output_char", 1500), ((Tag1 (0, (Tag3 ((("out_channel", 1471)), 0, (0)), 100000000, 0, -979), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -978), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -977), 0), 100000000, 0, -976), 0), 100000000, 0, -975), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 792, 30648, 30651), ("shadow-stdlib/src/shadow_stdlib.mli", 792, 30648, 30661), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_char] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 792, 30648, 30663), ("shadow-stdlib/src/shadow_stdlib.mli", 794, 30734, 30778), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 792, 30648, 30662), ("shadow-stdlib/src/shadow_stdlib.mli", 794, 30734, 30779), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 792, 30648, 30662), ("shadow-stdlib/src/shadow_stdlib.mli", 794, 30734, 30779), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 792, 30648, 30648), ("shadow-stdlib/src/shadow_stdlib.mli", 794, 30734, 30780), 0))], Tag1 ("Shadow_stdlib", 157)), 0); (("output_string", 1501), ((Tag1 (0, (Tag3 ((("out_channel", 1471)), 0, (0)), 100000000, 0, -974), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -973), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -972), 0), 100000000, 0, -971), 0), 100000000, 0, -970), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 797, 30832, 30835), ("shadow-stdlib/src/shadow_stdlib.mli", 797, 30832, 30845), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_string] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 797, 30832, 30847), ("shadow-stdlib/src/shadow_stdlib.mli", 799, 30918, 30964), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 797, 30832, 30846), ("shadow-stdlib/src/shadow_stdlib.mli", 799, 30918, 30965), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 797, 30832, 30846), ("shadow-stdlib/src/shadow_stdlib.mli", 799, 30918, 30965), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 797, 30832, 30832), ("shadow-stdlib/src/shadow_stdlib.mli", 799, 30918, 30966), 0))], Tag1 ("Shadow_stdlib", 158)), 0); (("output_bytes", 1502), ((Tag1 (0, (Tag3 ((("out_channel", 1471)), 0, (0)), 100000000, 0, -969), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -968), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -967), 0), 100000000, 0, -966), 0), 100000000, 0, -965), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 802, 31016, 31019), ("shadow-stdlib/src/shadow_stdlib.mli", 802, 31016, 31029), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_bytes] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 802, 31016, 31031), ("shadow-stdlib/src/shadow_stdlib.mli", 804, 31102, 31147), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 802, 31016, 31030), ("shadow-stdlib/src/shadow_stdlib.mli", 804, 31102, 31148), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 802, 31016, 31030), ("shadow-stdlib/src/shadow_stdlib.mli", 804, 31102, 31148), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 802, 31016, 31016), ("shadow-stdlib/src/shadow_stdlib.mli", 804, 31102, 31149), 0))], Tag1 ("Shadow_stdlib", 159)), 0); (("output", 1503), ((Tag1 (0, (Tag3 ((("out_channel", 1471)), 0, (0)), 100000000, 0, -964), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -963), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -962), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -961), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -960), 0), 100000000, 0, -959), 0), 100000000, 0, -958), 0), 100000000, 0, -957), 0), 100000000, 0, -956), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 807, 31207, 31210), ("shadow-stdlib/src/shadow_stdlib.mli", 807, 31207, 31220), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 807, 31207, 31222), ("shadow-stdlib/src/shadow_stdlib.mli", 809, 31293, 31332), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 807, 31207, 31221), ("shadow-stdlib/src/shadow_stdlib.mli", 809, 31293, 31333), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 807, 31207, 31221), ("shadow-stdlib/src/shadow_stdlib.mli", 809, 31293, 31333), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 807, 31207, 31207), ("shadow-stdlib/src/shadow_stdlib.mli", 809, 31293, 31334), 0))], Tag1 ("Shadow_stdlib", 160)), 0); (("output_substring", 1504), ((Tag1 (0, (Tag3 ((("out_channel", 1471)), 0, (0)), 100000000, 0, -955), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -954), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -953), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -952), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -951), 0), 100000000, 0, -950), 0), 100000000, 0, -949), 0), 100000000, 0, -948), 0), 100000000, 0, -947), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 812, 31403, 31406), ("shadow-stdlib/src/shadow_stdlib.mli", 812, 31403, 31416), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 812, 31403, 31418), ("shadow-stdlib/src/shadow_stdlib.mli", 814, 31489, 31528), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 812, 31403, 31417), ("shadow-stdlib/src/shadow_stdlib.mli", 814, 31489, 31529), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 812, 31403, 31417), ("shadow-stdlib/src/shadow_stdlib.mli", 814, 31489, 31529), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 812, 31403, 31403), ("shadow-stdlib/src/shadow_stdlib.mli", 814, 31489, 31530), 0))], Tag1 ("Shadow_stdlib", 161)), 0); (("output_byte", 1505), ((Tag1 (0, (Tag3 ((("out_channel", 1471)), 0, (0)), 100000000, 0, -946), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -945), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -944), 0), 100000000, 0, -943), 0), 100000000, 0, -942), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 817, 31577, 31580), ("shadow-stdlib/src/shadow_stdlib.mli", 817, 31577, 31590), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_byte] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 817, 31577, 31592), ("shadow-stdlib/src/shadow_stdlib.mli", 819, 31663, 31707), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 817, 31577, 31591), ("shadow-stdlib/src/shadow_stdlib.mli", 819, 31663, 31708), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 817, 31577, 31591), ("shadow-stdlib/src/shadow_stdlib.mli", 819, 31663, 31708), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 817, 31577, 31577), ("shadow-stdlib/src/shadow_stdlib.mli", 819, 31663, 31709), 0))], Tag1 ("Shadow_stdlib", 162)), 0); (("output_binary_int", 1506), ((Tag1 (0, (Tag3 ((("out_channel", 1471)), 0, (0)), 100000000, 0, -941), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -940), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -939), 0), 100000000, 0, -938), 0), 100000000, 0, -937), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 822, 31762, 31765), ("shadow-stdlib/src/shadow_stdlib.mli", 822, 31762, 31775), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_binary_int] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 822, 31762, 31777), ("shadow-stdlib/src/shadow_stdlib.mli", 824, 31848, 31898), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 822, 31762, 31776), ("shadow-stdlib/src/shadow_stdlib.mli", 824, 31848, 31899), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 822, 31762, 31776), ("shadow-stdlib/src/shadow_stdlib.mli", 824, 31848, 31899), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 822, 31762, 31762), ("shadow-stdlib/src/shadow_stdlib.mli", 824, 31848, 31900), 0))], Tag1 ("Shadow_stdlib", 163)), 0); (("output_value", 1507), ((Tag1 (0, (Tag3 ((("out_channel", 1471)), 0, (0)), 100000000, 0, -936), (Tag1 (0, ((("a")), 100000000, 0, -935), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -934), 0), 100000000, 0, -933), 0), 100000000, 0, -932), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 827, 31947, 31950), ("shadow-stdlib/src/shadow_stdlib.mli", 827, 31947, 31960), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.output_value] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 827, 31947, 31962), ("shadow-stdlib/src/shadow_stdlib.mli", 829, 32033, 32078), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 827, 31947, 31961), ("shadow-stdlib/src/shadow_stdlib.mli", 829, 32033, 32079), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 827, 31947, 31961), ("shadow-stdlib/src/shadow_stdlib.mli", 829, 32033, 32079), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 827, 31947, 31947), ("shadow-stdlib/src/shadow_stdlib.mli", 829, 32033, 32080), 0))], Tag1 ("Shadow_stdlib", 164)), 0); (("seek_out", 1508), ((Tag1 (0, (Tag3 ((("out_channel", 1471)), 0, (0)), 100000000, 0, -931), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -930), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -929), 0), 100000000, 0, -928), 0), 100000000, 0, -927), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 832, 32124, 32127), ("shadow-stdlib/src/shadow_stdlib.mli", 832, 32124, 32137), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.seek] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 832, 32124, 32139), ("shadow-stdlib/src/shadow_stdlib.mli", 834, 32210, 32247), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 832, 32124, 32138), ("shadow-stdlib/src/shadow_stdlib.mli", 834, 32210, 32248), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 832, 32124, 32138), ("shadow-stdlib/src/shadow_stdlib.mli", 834, 32210, 32248), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 832, 32124, 32124), ("shadow-stdlib/src/shadow_stdlib.mli", 834, 32210, 32249), 0))], Tag1 ("Shadow_stdlib", 165)), 0); (("pos_out", 1509), ((Tag1 (0, (Tag3 ((("out_channel", 1471)), 0, (0)), 100000000, 0, -926), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -925), 0), 100000000, 0, -924), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 837, 32284, 32287), ("shadow-stdlib/src/shadow_stdlib.mli", 837, 32284, 32297), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.pos] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 837, 32284, 32299), ("shadow-stdlib/src/shadow_stdlib.mli", 839, 32370, 32406), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 837, 32284, 32298), ("shadow-stdlib/src/shadow_stdlib.mli", 839, 32370, 32407), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 837, 32284, 32298), ("shadow-stdlib/src/shadow_stdlib.mli", 839, 32370, 32407), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 837, 32284, 32284), ("shadow-stdlib/src/shadow_stdlib.mli", 839, 32370, 32408), 0))], Tag1 ("Shadow_stdlib", 166)), 0); (("out_channel_length", 1510), ((Tag1 (0, (Tag3 ((("out_channel", 1471)), 0, (0)), 100000000, 0, -923), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -922), 0), 100000000, 0, -921), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 842, 32454, 32457), ("shadow-stdlib/src/shadow_stdlib.mli", 842, 32454, 32467), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.length] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 842, 32454, 32469), ("shadow-stdlib/src/shadow_stdlib.mli", 844, 32540, 32579), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 842, 32454, 32468), ("shadow-stdlib/src/shadow_stdlib.mli", 844, 32540, 32580), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 842, 32454, 32468), ("shadow-stdlib/src/shadow_stdlib.mli", 844, 32540, 32580), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 842, 32454, 32454), ("shadow-stdlib/src/shadow_stdlib.mli", 844, 32540, 32581), 0))], Tag1 ("Shadow_stdlib", 167)), 0); (("close_out", 1511), ((Tag1 (0, (Tag3 ((("out_channel", 1471)), 0, (0)), 100000000, 0, -920), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -919), 0), 100000000, 0, -918), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 847, 32619, 32622), ("shadow-stdlib/src/shadow_stdlib.mli", 847, 32619, 32632), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.close] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 847, 32619, 32634), ("shadow-stdlib/src/shadow_stdlib.mli", 849, 32705, 32743), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 847, 32619, 32633), ("shadow-stdlib/src/shadow_stdlib.mli", 849, 32705, 32744), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 847, 32619, 32633), ("shadow-stdlib/src/shadow_stdlib.mli", 849, 32705, 32744), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 847, 32619, 32619), ("shadow-stdlib/src/shadow_stdlib.mli", 849, 32705, 32745), 0))], Tag1 ("Shadow_stdlib", 168)), 0); (("close_out_noerr", 1512), ((Tag1 (0, (Tag3 ((("out_channel", 1471)), 0, (0)), 100000000, 0, -917), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -916), 0), 100000000, 0, -915), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 852, 32789, 32792), ("shadow-stdlib/src/shadow_stdlib.mli", 852, 32789, 32802), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.close] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 852, 32789, 32804), ("shadow-stdlib/src/shadow_stdlib.mli", 854, 32875, 32913), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 852, 32789, 32803), ("shadow-stdlib/src/shadow_stdlib.mli", 854, 32875, 32914), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 852, 32789, 32803), ("shadow-stdlib/src/shadow_stdlib.mli", 854, 32875, 32914), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 852, 32789, 32789), ("shadow-stdlib/src/shadow_stdlib.mli", 854, 32875, 32915), 0))], Tag1 ("Shadow_stdlib", 169)), 0); (("set_binary_mode_out", 1513), ((Tag1 (0, (Tag3 ((("out_channel", 1471)), 0, (0)), 100000000, 0, -914), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -913), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -912), 0), 100000000, 0, -911), 0), 100000000, 0, -910), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 857, 32971, 32974), ("shadow-stdlib/src/shadow_stdlib.mli", 857, 32971, 32984), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.Out_channel.set_binary_mode] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 857, 32971, 32986), ("shadow-stdlib/src/shadow_stdlib.mli", 859, 33057, 33105), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 857, 32971, 32985), ("shadow-stdlib/src/shadow_stdlib.mli", 859, 33057, 33106), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 857, 32971, 32985), ("shadow-stdlib/src/shadow_stdlib.mli", 859, 33057, 33106), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 857, 32971, 32971), ("shadow-stdlib/src/shadow_stdlib.mli", 859, 33057, 33107), 0))], Tag1 ("Shadow_stdlib", 170)), 0); (("open_in", 1514), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -909), (Tag3 ((("in_channel", 1470)), 0, (0)), 100000000, 0, -908), 0), 100000000, 0, -907), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 862, 33144, 33147), ("shadow-stdlib/src/shadow_stdlib.mli", 862, 33144, 33157), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.create] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 862, 33144, 33159), ("shadow-stdlib/src/shadow_stdlib.mli", 864, 33230, 33268), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 862, 33144, 33158), ("shadow-stdlib/src/shadow_stdlib.mli", 864, 33230, 33269), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 862, 33144, 33158), ("shadow-stdlib/src/shadow_stdlib.mli", 864, 33230, 33269), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 862, 33144, 33144), ("shadow-stdlib/src/shadow_stdlib.mli", 864, 33230, 33270), 0))], Tag1 ("Shadow_stdlib", 171)), 0); (("open_in_bin", 1515), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -906), (Tag3 ((("in_channel", 1470)), 0, (0)), 100000000, 0, -905), 0), 100000000, 0, -904), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 867, 33311, 33314), ("shadow-stdlib/src/shadow_stdlib.mli", 867, 33311, 33324), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.create] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 867, 33311, 33326), ("shadow-stdlib/src/shadow_stdlib.mli", 869, 33397, 33435), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 867, 33311, 33325), ("shadow-stdlib/src/shadow_stdlib.mli", 869, 33397, 33436), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 867, 33311, 33325), ("shadow-stdlib/src/shadow_stdlib.mli", 869, 33397, 33436), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 867, 33311, 33311), ("shadow-stdlib/src/shadow_stdlib.mli", 869, 33397, 33437), 0))], Tag1 ("Shadow_stdlib", 172)), 0); (("open_in_gen", 1516), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("open_flag", 1494)), 0, (0)), 100000000, 0, -903)], (0)), 100000000, 0, -902), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -901), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -900), (Tag3 ((("in_channel", 1470)), 0, (0)), 100000000, 0, -899), 0), 100000000, 0, -898), 0), 100000000, 0, -897), 0), 100000000, 0, -896), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 872, 33503, 33506), ("shadow-stdlib/src/shadow_stdlib.mli", 872, 33503, 33516), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.open_in_gen] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 872, 33503, 33518), ("shadow-stdlib/src/shadow_stdlib.mli", 875, 33659, 33706), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 872, 33503, 33517), ("shadow-stdlib/src/shadow_stdlib.mli", 875, 33659, 33707), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 872, 33503, 33517), ("shadow-stdlib/src/shadow_stdlib.mli", 875, 33659, 33707), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 872, 33503, 33503), ("shadow-stdlib/src/shadow_stdlib.mli", 875, 33659, 33708), 0))], Tag1 ("Shadow_stdlib", 173)), 0); (("input_char", 1517), ((Tag1 (0, (Tag3 ((("in_channel", 1470)), 0, (0)), 100000000, 0, -895), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -894), 0), 100000000, 0, -893), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 878, 33746, 33749), ("shadow-stdlib/src/shadow_stdlib.mli", 878, 33746, 33759), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.input_char] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 878, 33746, 33761), ("shadow-stdlib/src/shadow_stdlib.mli", 880, 33832, 33874), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 878, 33746, 33760), ("shadow-stdlib/src/shadow_stdlib.mli", 880, 33832, 33875), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 878, 33746, 33760), ("shadow-stdlib/src/shadow_stdlib.mli", 880, 33832, 33875), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 878, 33746, 33746), ("shadow-stdlib/src/shadow_stdlib.mli", 880, 33832, 33876), 0))], Tag1 ("Shadow_stdlib", 174)), 0); (("input_line", 1518), ((Tag1 (0, (Tag3 ((("in_channel", 1470)), 0, (0)), 100000000, 0, -892), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -891), 0), 100000000, 0, -890), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 883, 33916, 33919), ("shadow-stdlib/src/shadow_stdlib.mli", 883, 33916, 33929), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.input_line] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 883, 33916, 33931), ("shadow-stdlib/src/shadow_stdlib.mli", 885, 34002, 34044), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 883, 33916, 33930), ("shadow-stdlib/src/shadow_stdlib.mli", 885, 34002, 34045), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 883, 33916, 33930), ("shadow-stdlib/src/shadow_stdlib.mli", 885, 34002, 34045), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 883, 33916, 33916), ("shadow-stdlib/src/shadow_stdlib.mli", 885, 34002, 34046), 0))], Tag1 ("Shadow_stdlib", 175)), 0); (("input", 1519), ((Tag1 (0, (Tag3 ((("in_channel", 1470)), 0, (0)), 100000000, 0, -889), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -888), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -887), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -886), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -885), 0), 100000000, 0, -884), 0), 100000000, 0, -883), 0), 100000000, 0, -882), 0), 100000000, 0, -881), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 888, 34101, 34104), ("shadow-stdlib/src/shadow_stdlib.mli", 888, 34101, 34114), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.input] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 888, 34101, 34116), ("shadow-stdlib/src/shadow_stdlib.mli", 890, 34187, 34224), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 888, 34101, 34115), ("shadow-stdlib/src/shadow_stdlib.mli", 890, 34187, 34225), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 888, 34101, 34115), ("shadow-stdlib/src/shadow_stdlib.mli", 890, 34187, 34225), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 888, 34101, 34101), ("shadow-stdlib/src/shadow_stdlib.mli", 890, 34187, 34226), 0))], Tag1 ("Shadow_stdlib", 176)), 0); (("really_input", 1520), ((Tag1 (0, (Tag3 ((("in_channel", 1470)), 0, (0)), 100000000, 0, -880), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -879), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -878), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -877), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -876), 0), 100000000, 0, -875), 0), 100000000, 0, -874), 0), 100000000, 0, -873), 0), 100000000, 0, -872), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 893, 34289, 34292), ("shadow-stdlib/src/shadow_stdlib.mli", 893, 34289, 34302), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.really_input] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 893, 34289, 34304), ("shadow-stdlib/src/shadow_stdlib.mli", 895, 34375, 34419), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 893, 34289, 34303), ("shadow-stdlib/src/shadow_stdlib.mli", 895, 34375, 34420), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 893, 34289, 34303), ("shadow-stdlib/src/shadow_stdlib.mli", 895, 34375, 34420), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 893, 34289, 34289), ("shadow-stdlib/src/shadow_stdlib.mli", 895, 34375, 34421), 0))], Tag1 ("Shadow_stdlib", 177)), 0); (("really_input_string", 1521), ((Tag1 (0, (Tag3 ((("in_channel", 1470)), 0, (0)), 100000000, 0, -871), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -870), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -869), 0), 100000000, 0, -868), 0), 100000000, 0, -867), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 898, 34477, 34480), ("shadow-stdlib/src/shadow_stdlib.mli", 898, 34477, 34490), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is no equivalent functionality in Base or Stdio but you can use\n[Stdio.In_channel] instead.\nAlternatively, if you really want to refer the stdlib you can use\n[Stdlib.really_input_string].", (("shadow-stdlib/src/shadow_stdlib.mli", 898, 34477, 34492), ("shadow-stdlib/src/shadow_stdlib.mli", 903, 34727, 34756), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 898, 34477, 34491), ("shadow-stdlib/src/shadow_stdlib.mli", 903, 34727, 34757), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 898, 34477, 34491), ("shadow-stdlib/src/shadow_stdlib.mli", 903, 34727, 34757), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 898, 34477, 34477), ("shadow-stdlib/src/shadow_stdlib.mli", 903, 34727, 34758), 0))], Tag1 ("Shadow_stdlib", 178)), 0); (("input_byte", 1522), ((Tag1 (0, (Tag3 ((("in_channel", 1470)), 0, (0)), 100000000, 0, -866), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -865), 0), 100000000, 0, -864), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 906, 34795, 34798), ("shadow-stdlib/src/shadow_stdlib.mli", 906, 34795, 34808), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.input_byte] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 906, 34795, 34810), ("shadow-stdlib/src/shadow_stdlib.mli", 908, 34881, 34923), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 906, 34795, 34809), ("shadow-stdlib/src/shadow_stdlib.mli", 908, 34881, 34924), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 906, 34795, 34809), ("shadow-stdlib/src/shadow_stdlib.mli", 908, 34881, 34924), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 906, 34795, 34795), ("shadow-stdlib/src/shadow_stdlib.mli", 908, 34881, 34925), 0))], Tag1 ("Shadow_stdlib", 179)), 0); (("input_binary_int", 1523), ((Tag1 (0, (Tag3 ((("in_channel", 1470)), 0, (0)), 100000000, 0, -863), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -862), 0), 100000000, 0, -861), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 911, 34968, 34971), ("shadow-stdlib/src/shadow_stdlib.mli", 911, 34968, 34981), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.input_binary_int] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 911, 34968, 34983), ("shadow-stdlib/src/shadow_stdlib.mli", 913, 35054, 35102), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 911, 34968, 34982), ("shadow-stdlib/src/shadow_stdlib.mli", 913, 35054, 35103), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 911, 34968, 34982), ("shadow-stdlib/src/shadow_stdlib.mli", 913, 35054, 35103), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 911, 34968, 34968), ("shadow-stdlib/src/shadow_stdlib.mli", 913, 35054, 35104), 0))], Tag1 ("Shadow_stdlib", 180)), 0); (("input_value", 1524), ((Tag1 (0, (Tag3 ((("in_channel", 1470)), 0, (0)), 100000000, 0, -860), ((("a")), 100000000, 0, -859), 0), 100000000, 0, -858), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 916, 35141, 35144), ("shadow-stdlib/src/shadow_stdlib.mli", 916, 35141, 35154), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.unsafe_input_value] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 916, 35141, 35156), ("shadow-stdlib/src/shadow_stdlib.mli", 918, 35227, 35277), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 916, 35141, 35155), ("shadow-stdlib/src/shadow_stdlib.mli", 918, 35227, 35278), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 916, 35141, 35155), ("shadow-stdlib/src/shadow_stdlib.mli", 918, 35227, 35278), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 916, 35141, 35141), ("shadow-stdlib/src/shadow_stdlib.mli", 918, 35227, 35279), 0))], Tag1 ("Shadow_stdlib", 181)), 0); (("seek_in", 1525), ((Tag1 (0, (Tag3 ((("in_channel", 1470)), 0, (0)), 100000000, 0, -857), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -856), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -855), 0), 100000000, 0, -854), 0), 100000000, 0, -853), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 921, 35321, 35324), ("shadow-stdlib/src/shadow_stdlib.mli", 921, 35321, 35334), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.seek] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 921, 35321, 35336), ("shadow-stdlib/src/shadow_stdlib.mli", 923, 35407, 35443), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 921, 35321, 35335), ("shadow-stdlib/src/shadow_stdlib.mli", 923, 35407, 35444), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 921, 35321, 35335), ("shadow-stdlib/src/shadow_stdlib.mli", 923, 35407, 35444), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 921, 35321, 35321), ("shadow-stdlib/src/shadow_stdlib.mli", 923, 35407, 35445), 0))], Tag1 ("Shadow_stdlib", 182)), 0); (("pos_in", 1526), ((Tag1 (0, (Tag3 ((("in_channel", 1470)), 0, (0)), 100000000, 0, -852), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -851), 0), 100000000, 0, -850), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 926, 35478, 35481), ("shadow-stdlib/src/shadow_stdlib.mli", 926, 35478, 35491), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.pos] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 926, 35478, 35493), ("shadow-stdlib/src/shadow_stdlib.mli", 928, 35564, 35599), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 926, 35478, 35492), ("shadow-stdlib/src/shadow_stdlib.mli", 928, 35564, 35600), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 926, 35478, 35492), ("shadow-stdlib/src/shadow_stdlib.mli", 928, 35564, 35600), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 926, 35478, 35478), ("shadow-stdlib/src/shadow_stdlib.mli", 928, 35564, 35601), 0))], Tag1 ("Shadow_stdlib", 183)), 0); (("in_channel_length", 1527), ((Tag1 (0, (Tag3 ((("in_channel", 1470)), 0, (0)), 100000000, 0, -849), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -848), 0), 100000000, 0, -847), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 931, 35645, 35648), ("shadow-stdlib/src/shadow_stdlib.mli", 931, 35645, 35658), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.length] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 931, 35645, 35660), ("shadow-stdlib/src/shadow_stdlib.mli", 933, 35731, 35769), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 931, 35645, 35659), ("shadow-stdlib/src/shadow_stdlib.mli", 933, 35731, 35770), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 931, 35645, 35659), ("shadow-stdlib/src/shadow_stdlib.mli", 933, 35731, 35770), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 931, 35645, 35645), ("shadow-stdlib/src/shadow_stdlib.mli", 933, 35731, 35771), 0))], Tag1 ("Shadow_stdlib", 184)), 0); (("close_in", 1528), ((Tag1 (0, (Tag3 ((("in_channel", 1470)), 0, (0)), 100000000, 0, -846), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -845), 0), 100000000, 0, -844), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 936, 35807, 35810), ("shadow-stdlib/src/shadow_stdlib.mli", 936, 35807, 35820), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.close] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 936, 35807, 35822), ("shadow-stdlib/src/shadow_stdlib.mli", 938, 35893, 35930), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 936, 35807, 35821), ("shadow-stdlib/src/shadow_stdlib.mli", 938, 35893, 35931), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 936, 35807, 35821), ("shadow-stdlib/src/shadow_stdlib.mli", 938, 35893, 35931), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 936, 35807, 35807), ("shadow-stdlib/src/shadow_stdlib.mli", 938, 35893, 35932), 0))], Tag1 ("Shadow_stdlib", 185)), 0); (("close_in_noerr", 1529), ((Tag1 (0, (Tag3 ((("in_channel", 1470)), 0, (0)), 100000000, 0, -843), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -842), 0), 100000000, 0, -841), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 941, 35974, 35977), ("shadow-stdlib/src/shadow_stdlib.mli", 941, 35974, 35987), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.close] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 941, 35974, 35989), ("shadow-stdlib/src/shadow_stdlib.mli", 943, 36060, 36097), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 941, 35974, 35988), ("shadow-stdlib/src/shadow_stdlib.mli", 943, 36060, 36098), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 941, 35974, 35988), ("shadow-stdlib/src/shadow_stdlib.mli", 943, 36060, 36098), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 941, 35974, 35974), ("shadow-stdlib/src/shadow_stdlib.mli", 943, 36060, 36099), 0))], Tag1 ("Shadow_stdlib", 186)), 0); (("set_binary_mode_in", 1530), ((Tag1 (0, (Tag3 ((("in_channel", 1470)), 0, (0)), 100000000, 0, -840), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -839), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -838), 0), 100000000, 0, -837), 0), 100000000, 0, -836), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 946, 36153, 36156), ("shadow-stdlib/src/shadow_stdlib.mli", 946, 36153, 36166), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Stdio.In_channel.set_binary_mode] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 946, 36153, 36168), ("shadow-stdlib/src/shadow_stdlib.mli", 948, 36239, 36286), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 946, 36153, 36167), ("shadow-stdlib/src/shadow_stdlib.mli", 948, 36239, 36287), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 946, 36153, 36167), ("shadow-stdlib/src/shadow_stdlib.mli", 948, 36239, 36287), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 946, 36153, 36153), ("shadow-stdlib/src/shadow_stdlib.mli", 948, 36239, 36288), 0))], Tag1 ("Shadow_stdlib", 187)), 0); Tag3 (("LargeFile", 1531), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "LargeFile")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 951, 36326, 36329), ("shadow-stdlib/src/shadow_stdlib.mli", 951, 36326, 36339), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.LargeFile instead", (("shadow-stdlib/src/shadow_stdlib.mli", 951, 36326, 36341), ("shadow-stdlib/src/shadow_stdlib.mli", 955, 36562, 36611), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 951, 36326, 36340), ("shadow-stdlib/src/shadow_stdlib.mli", 955, 36562, 36612), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 951, 36326, 36340), ("shadow-stdlib/src/shadow_stdlib.mli", 955, 36562, 36612), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 951, 36326, 36326), ("shadow-stdlib/src/shadow_stdlib.mli", 955, 36562, 36613), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 188)), 0, 0); Tag1 (("result", 1532), ([((("a")), 100000000, 0, -834); ((("b")), 100000000, 0, -835)], 2, Tag1 ([(("Ok", 466), ([((("a")), 100000000, 0, -834)]), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 197)); (("Error", 467), ([((("b")), 100000000, 0, -835)]), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), 0, Tag1 ("Shadow_stdlib", 198))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -834); ((("b")), 100000000, 0, -835)], (0)), 100000000, 0, -833)), [25; 25], [0; 0], 0, 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 993, 38093, 38096), ("shadow-stdlib/src/shadow_stdlib.mli", 993, 38093, 38106), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Result.t] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 993, 38093, 38108), ("shadow-stdlib/src/shadow_stdlib.mli", 995, 38179, 38202), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 993, 38093, 38107), ("shadow-stdlib/src/shadow_stdlib.mli", 995, 38179, 38203), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 993, 38093, 38107), ("shadow-stdlib/src/shadow_stdlib.mli", 995, 38179, 38203), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 993, 38093, 38093), ("shadow-stdlib/src/shadow_stdlib.mli", 995, 38179, 38204), 0))], 0, 0, Tag1 ("Shadow_stdlib", 196)), 0, 0); (("string_of_format", 1533), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format6"), [((("a")), 100000000, 0, -827); ((("b")), 100000000, 0, -828); ((("c")), 100000000, 0, -829); ((("d")), 100000000, 0, -830); ((("e")), 100000000, 0, -831); ((("f")), 100000000, 0, -832)], (0)), 100000000, 0, -826), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -825), 0), 100000000, 0, -824), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1019, 39351, 39354), ("shadow-stdlib/src/shadow_stdlib.mli", 1019, 39351, 39364), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.string_of_format] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1019, 39351, 39366), ("shadow-stdlib/src/shadow_stdlib.mli", 1022, 39507, 39559), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1019, 39351, 39365), ("shadow-stdlib/src/shadow_stdlib.mli", 1022, 39507, 39560), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1019, 39351, 39365), ("shadow-stdlib/src/shadow_stdlib.mli", 1022, 39507, 39560), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1019, 39351, 39351), ("shadow-stdlib/src/shadow_stdlib.mli", 1022, 39507, 39561), 0))], Tag1 ("Shadow_stdlib", 202)), 0); (("format_of_string", 1534), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format6"), [((("a")), 100000000, 0, -817); ((("b")), 100000000, 0, -818); ((("c")), 100000000, 0, -819); ((("d")), 100000000, 0, -820); ((("e")), 100000000, 0, -821); ((("f")), 100000000, 0, -822)], (0)), 100000000, 0, -823), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format6"), [((("a")), 100000000, 0, -817); ((("b")), 100000000, 0, -818); ((("c")), 100000000, 0, -819); ((("d")), 100000000, 0, -820); ((("e")), 100000000, 0, -821); ((("f")), 100000000, 0, -822)], (0)), 100000000, 0, -816), 0), 100000000, 0, -815), (("%identity", 1, 1, "", [0], 0)), (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1025, 39674, 39677), ("shadow-stdlib/src/shadow_stdlib.mli", 1025, 39674, 39687), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.format_of_string] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1025, 39674, 39689), ("shadow-stdlib/src/shadow_stdlib.mli", 1028, 39830, 39882), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1025, 39674, 39688), ("shadow-stdlib/src/shadow_stdlib.mli", 1028, 39830, 39883), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1025, 39674, 39688), ("shadow-stdlib/src/shadow_stdlib.mli", 1028, 39830, 39883), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1025, 39674, 39674), ("shadow-stdlib/src/shadow_stdlib.mli", 1028, 39830, 39884), 0))], Tag1 ("Shadow_stdlib", 203)), 0); (("^^", 1535), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format6"), [((("a")), 100000000, 0, -805); ((("b")), 100000000, 0, -806); ((("c")), 100000000, 0, -807); ((("d")), 100000000, 0, -808); ((("e")), 100000000, 0, -813); ((("f")), 100000000, 0, -812)], (0)), 100000000, 0, -814), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format6"), [((("f")), 100000000, 0, -812); ((("b")), 100000000, 0, -806); ((("c")), 100000000, 0, -807); ((("e")), 100000000, 0, -813); ((("g")), 100000000, 0, -809); ((("h")), 100000000, 0, -810)], (0)), 100000000, 0, -811), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format6"), [((("a")), 100000000, 0, -805); ((("b")), 100000000, 0, -806); ((("c")), 100000000, 0, -807); ((("d")), 100000000, 0, -808); ((("g")), 100000000, 0, -809); ((("h")), 100000000, 0, -810)], (0)), 100000000, 0, -804), 0), 100000000, 0, -803), 0), 100000000, 0, -802), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1031, 40004, 40007), ("shadow-stdlib/src/shadow_stdlib.mli", 1031, 40004, 40017), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.( ^^ )] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1031, 40004, 40019), ("shadow-stdlib/src/shadow_stdlib.mli", 1034, 40160, 40202), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1031, 40004, 40018), ("shadow-stdlib/src/shadow_stdlib.mli", 1034, 40160, 40203), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1031, 40004, 40018), ("shadow-stdlib/src/shadow_stdlib.mli", 1034, 40160, 40203), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1031, 40004, 40004), ("shadow-stdlib/src/shadow_stdlib.mli", 1034, 40160, 40204), 0))], Tag1 ("Shadow_stdlib", 204)), 0); (("exit", 1536), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -801), ((("a")), 100000000, 0, -800), 0), 100000000, 0, -799), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1037, 40227, 40230), ("shadow-stdlib/src/shadow_stdlib.mli", 1037, 40227, 40240), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.exit] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1037, 40227, 40242), ("shadow-stdlib/src/shadow_stdlib.mli", 1040, 40383, 40423), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1037, 40227, 40241), ("shadow-stdlib/src/shadow_stdlib.mli", 1040, 40383, 40424), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1037, 40227, 40241), ("shadow-stdlib/src/shadow_stdlib.mli", 1040, 40383, 40424), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1037, 40227, 40227), ("shadow-stdlib/src/shadow_stdlib.mli", 1040, 40383, 40425), 0))], Tag1 ("Shadow_stdlib", 205)), 0); (("at_exit", 1537), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -798), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -797), 0), 100000000, 0, -796), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -795), 0), 100000000, 0, -794), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1043, 40464, 40467), ("shadow-stdlib/src/shadow_stdlib.mli", 1043, 40464, 40477), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.at_exit] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1043, 40464, 40479), ("shadow-stdlib/src/shadow_stdlib.mli", 1046, 40620, 40663), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1043, 40464, 40478), ("shadow-stdlib/src/shadow_stdlib.mli", 1046, 40620, 40664), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1043, 40464, 40478), ("shadow-stdlib/src/shadow_stdlib.mli", 1046, 40620, 40664), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1043, 40464, 40464), ("shadow-stdlib/src/shadow_stdlib.mli", 1046, 40620, 40665), 0))], Tag1 ("Shadow_stdlib", 206)), 0); (("valid_float_lexem", 1538), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -793), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -792), 0), 100000000, 0, -791), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1049, 40708, 40711), ("shadow-stdlib/src/shadow_stdlib.mli", 1049, 40708, 40721), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.valid_float_lexem] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1049, 40708, 40723), ("shadow-stdlib/src/shadow_stdlib.mli", 1052, 40864, 40917), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1049, 40708, 40722), ("shadow-stdlib/src/shadow_stdlib.mli", 1052, 40864, 40918), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1049, 40708, 40722), ("shadow-stdlib/src/shadow_stdlib.mli", 1052, 40864, 40918), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1049, 40708, 40708), ("shadow-stdlib/src/shadow_stdlib.mli", 1052, 40864, 40919), 0))], Tag1 ("Shadow_stdlib", 207)), 0); (("unsafe_really_input", 1539), ((Tag1 (0, (Tag3 ((("in_channel", 1470)), 0, (0)), 100000000, 0, -790), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -789), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -788), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -787), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -786), 0), 100000000, 0, -785), 0), 100000000, 0, -784), 0), 100000000, 0, -783), 0), 100000000, 0, -782), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1055, 40989, 40992), ("shadow-stdlib/src/shadow_stdlib.mli", 1055, 40989, 41002), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.unsafe_really_input] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1055, 40989, 41004), ("shadow-stdlib/src/shadow_stdlib.mli", 1058, 41145, 41200), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1055, 40989, 41003), ("shadow-stdlib/src/shadow_stdlib.mli", 1058, 41145, 41201), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1055, 40989, 41003), ("shadow-stdlib/src/shadow_stdlib.mli", 1058, 41145, 41201), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1055, 40989, 40989), ("shadow-stdlib/src/shadow_stdlib.mli", 1058, 41145, 41202), 0))], Tag1 ("Shadow_stdlib", 208)), 0); (("do_at_exit", 1540), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -781), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -780), 0), 100000000, 0, -779), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1061, 41234, 41237), ("shadow-stdlib/src/shadow_stdlib.mli", 1061, 41234, 41247), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.do_at_exit] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1061, 41234, 41249), ("shadow-stdlib/src/shadow_stdlib.mli", 1064, 41390, 41436), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1061, 41234, 41248), ("shadow-stdlib/src/shadow_stdlib.mli", 1064, 41390, 41437), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1061, 41234, 41248), ("shadow-stdlib/src/shadow_stdlib.mli", 1064, 41390, 41437), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1061, 41234, 41234), ("shadow-stdlib/src/shadow_stdlib.mli", 1064, 41390, 41438), 0))], Tag1 ("Shadow_stdlib", 209)), 0); (("do_domain_local_at_exit", 1541), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -778), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -777), 0), 100000000, 0, -776)], (0)), 100000000, 0, -775), 0, (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1067, 41489, 41492), ("shadow-stdlib/src/shadow_stdlib.mli", 1067, 41489, 41502), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.do_domain_local_at_exit] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1067, 41489, 41504), ("shadow-stdlib/src/shadow_stdlib.mli", 1070, 41645, 41704), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1067, 41489, 41503), ("shadow-stdlib/src/shadow_stdlib.mli", 1070, 41645, 41705), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1067, 41489, 41503), ("shadow-stdlib/src/shadow_stdlib.mli", 1070, 41645, 41705), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1067, 41489, 41489), ("shadow-stdlib/src/shadow_stdlib.mli", 1070, 41645, 41706), 0))], Tag1 ("Shadow_stdlib", 210)), 0); Tag3 (("Arg", 1542), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Arg")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1073, 41733, 41736), ("shadow-stdlib/src/shadow_stdlib.mli", 1073, 41733, 41746), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Arg instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1073, 41733, 41748), ("shadow-stdlib/src/shadow_stdlib.mli", 1077, 41969, 42012), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1073, 41733, 41747), ("shadow-stdlib/src/shadow_stdlib.mli", 1077, 41969, 42013), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1073, 41733, 41747), ("shadow-stdlib/src/shadow_stdlib.mli", 1077, 41969, 42013), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1073, 41733, 41733), ("shadow-stdlib/src/shadow_stdlib.mli", 1077, 41969, 42014), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 211)), 0, 0); Tag3 (("ArrayLabels", 1543), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ArrayLabels")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1087, 42371, 42374), ("shadow-stdlib/src/shadow_stdlib.mli", 1087, 42371, 42384), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.ArrayLabels instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1087, 42371, 42386), ("shadow-stdlib/src/shadow_stdlib.mli", 1091, 42607, 42658), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1087, 42371, 42385), ("shadow-stdlib/src/shadow_stdlib.mli", 1091, 42607, 42659), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1087, 42371, 42385), ("shadow-stdlib/src/shadow_stdlib.mli", 1091, 42607, 42659), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1087, 42371, 42371), ("shadow-stdlib/src/shadow_stdlib.mli", 1091, 42607, 42660), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 213)), 0, 0); Tag3 (("BytesLabels", 1544), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "BytesLabels")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1122, 43962, 43965), ("shadow-stdlib/src/shadow_stdlib.mli", 1122, 43962, 43975), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.BytesLabels instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1122, 43962, 43977), ("shadow-stdlib/src/shadow_stdlib.mli", 1126, 44198, 44249), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1122, 43962, 43976), ("shadow-stdlib/src/shadow_stdlib.mli", 1126, 44198, 44250), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1122, 43962, 43976), ("shadow-stdlib/src/shadow_stdlib.mli", 1126, 44198, 44250), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1122, 43962, 43962), ("shadow-stdlib/src/shadow_stdlib.mli", 1126, 44198, 44251), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 218)), 0, 0); Tag3 (("Callback", 1545), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Callback")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1129, 44288, 44291), ("shadow-stdlib/src/shadow_stdlib.mli", 1129, 44288, 44301), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Callback instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1129, 44288, 44303), ("shadow-stdlib/src/shadow_stdlib.mli", 1133, 44524, 44572), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1129, 44288, 44302), ("shadow-stdlib/src/shadow_stdlib.mli", 1133, 44524, 44573), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1129, 44288, 44302), ("shadow-stdlib/src/shadow_stdlib.mli", 1133, 44524, 44573), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1129, 44288, 44288), ("shadow-stdlib/src/shadow_stdlib.mli", 1133, 44524, 44574), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 219)), 0, 0); Tag3 (("Complex", 1546), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Complex")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1143, 44920, 44923), ("shadow-stdlib/src/shadow_stdlib.mli", 1143, 44920, 44933), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Complex instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1143, 44920, 44935), ("shadow-stdlib/src/shadow_stdlib.mli", 1147, 45156, 45203), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1143, 44920, 44934), ("shadow-stdlib/src/shadow_stdlib.mli", 1147, 45156, 45204), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1143, 44920, 44934), ("shadow-stdlib/src/shadow_stdlib.mli", 1147, 45156, 45204), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1143, 44920, 44920), ("shadow-stdlib/src/shadow_stdlib.mli", 1147, 45156, 45205), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 221)), 0, 0); Tag3 (("Condition", 1547), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Condition")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1150, 45244, 45247), ("shadow-stdlib/src/shadow_stdlib.mli", 1150, 45244, 45257), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Condition instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1150, 45244, 45259), ("shadow-stdlib/src/shadow_stdlib.mli", 1154, 45480, 45529), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1150, 45244, 45258), ("shadow-stdlib/src/shadow_stdlib.mli", 1154, 45480, 45530), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1150, 45244, 45258), ("shadow-stdlib/src/shadow_stdlib.mli", 1154, 45480, 45530), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1150, 45244, 45244), ("shadow-stdlib/src/shadow_stdlib.mli", 1154, 45480, 45531), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 222)), 0, 0); Tag3 (("Digest", 1548), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Digest")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1157, 45564, 45567), ("shadow-stdlib/src/shadow_stdlib.mli", 1157, 45564, 45577), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Digest instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1157, 45564, 45579), ("shadow-stdlib/src/shadow_stdlib.mli", 1161, 45800, 45846), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1157, 45564, 45578), ("shadow-stdlib/src/shadow_stdlib.mli", 1161, 45800, 45847), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1157, 45564, 45578), ("shadow-stdlib/src/shadow_stdlib.mli", 1161, 45800, 45847), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1157, 45564, 45564), ("shadow-stdlib/src/shadow_stdlib.mli", 1161, 45800, 45848), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 223)), 0, 0); Tag3 (("Domain", 1549), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Domain")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1164, 45881, 45884), ("shadow-stdlib/src/shadow_stdlib.mli", 1164, 45881, 45894), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Domain instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1164, 45881, 45896), ("shadow-stdlib/src/shadow_stdlib.mli", 1168, 46117, 46163), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1164, 45881, 45895), ("shadow-stdlib/src/shadow_stdlib.mli", 1168, 46117, 46164), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1164, 45881, 45895), ("shadow-stdlib/src/shadow_stdlib.mli", 1168, 46117, 46164), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1164, 45881, 45881), ("shadow-stdlib/src/shadow_stdlib.mli", 1168, 46117, 46165), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 224)), 0, 0); Tag3 (("Effect", 1550), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Effect")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1171, 46198, 46201), ("shadow-stdlib/src/shadow_stdlib.mli", 1171, 46198, 46211), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Effect instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1171, 46198, 46213), ("shadow-stdlib/src/shadow_stdlib.mli", 1175, 46434, 46480), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1171, 46198, 46212), ("shadow-stdlib/src/shadow_stdlib.mli", 1175, 46434, 46481), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1171, 46198, 46212), ("shadow-stdlib/src/shadow_stdlib.mli", 1175, 46434, 46481), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1171, 46198, 46198), ("shadow-stdlib/src/shadow_stdlib.mli", 1175, 46434, 46482), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 225)), 0, 0); Tag3 (("Ephemeron", 1551), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Ephemeron")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1185, 46838, 46841), ("shadow-stdlib/src/shadow_stdlib.mli", 1185, 46838, 46851), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Ephemeron instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1185, 46838, 46853), ("shadow-stdlib/src/shadow_stdlib.mli", 1189, 47074, 47123), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1185, 46838, 46852), ("shadow-stdlib/src/shadow_stdlib.mli", 1189, 47074, 47124), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1185, 46838, 46852), ("shadow-stdlib/src/shadow_stdlib.mli", 1189, 47074, 47124), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1185, 46838, 46838), ("shadow-stdlib/src/shadow_stdlib.mli", 1189, 47074, 47125), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 227)), 0, 0); Tag3 (("Filename", 1552), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Filename")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1192, 47162, 47165), ("shadow-stdlib/src/shadow_stdlib.mli", 1192, 47162, 47175), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Filename instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1192, 47162, 47177), ("shadow-stdlib/src/shadow_stdlib.mli", 1196, 47398, 47446), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1192, 47162, 47176), ("shadow-stdlib/src/shadow_stdlib.mli", 1196, 47398, 47447), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1192, 47162, 47176), ("shadow-stdlib/src/shadow_stdlib.mli", 1196, 47398, 47447), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1192, 47162, 47162), ("shadow-stdlib/src/shadow_stdlib.mli", 1196, 47398, 47448), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 228)), 0, 0); Tag3 (("Format", 1553), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Format")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1206, 47795, 47798), ("shadow-stdlib/src/shadow_stdlib.mli", 1206, 47795, 47808), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\n[Base] doesn't export a [Format] module, although the \n[Stdlib.Format.formatter] type is available (as [Formatter.t])\nfor interaction with other libraries.", (("shadow-stdlib/src/shadow_stdlib.mli", 1206, 47795, 47810), ("shadow-stdlib/src/shadow_stdlib.mli", 1210, 47999, 48036), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1206, 47795, 47809), ("shadow-stdlib/src/shadow_stdlib.mli", 1210, 47999, 48037), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1206, 47795, 47809), ("shadow-stdlib/src/shadow_stdlib.mli", 1210, 47999, 48037), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1206, 47795, 47795), ("shadow-stdlib/src/shadow_stdlib.mli", 1210, 47999, 48038), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 230)), 0, 0); Tag3 (("Fun", 1554), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Fun")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1213, 48065, 48068), ("shadow-stdlib/src/shadow_stdlib.mli", 1213, 48065, 48078), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Fn] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 1213, 48065, 48080), ("shadow-stdlib/src/shadow_stdlib.mli", 1215, 48151, 48168), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1213, 48065, 48079), ("shadow-stdlib/src/shadow_stdlib.mli", 1215, 48151, 48169), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1213, 48065, 48079), ("shadow-stdlib/src/shadow_stdlib.mli", 1215, 48151, 48169), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1213, 48065, 48065), ("shadow-stdlib/src/shadow_stdlib.mli", 1215, 48151, 48170), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 231)), 0, 0); Tag3 (("Gc", 1555), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Gc")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1218, 48195, 48198), ("shadow-stdlib/src/shadow_stdlib.mli", 1218, 48195, 48208), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is not equivalent functionality in Base or Stdio at the moment,\nso you need to use [Stdlib.Gc] instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1218, 48195, 48210), ("shadow-stdlib/src/shadow_stdlib.mli", 1221, 48351, 48389), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1218, 48195, 48209), ("shadow-stdlib/src/shadow_stdlib.mli", 1221, 48351, 48390), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1218, 48195, 48209), ("shadow-stdlib/src/shadow_stdlib.mli", 1221, 48351, 48390), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1218, 48195, 48195), ("shadow-stdlib/src/shadow_stdlib.mli", 1221, 48351, 48391), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 232)), 0, 0); Tag3 (("In_channel", 1556), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "In_channel")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1231, 48752, 48755), ("shadow-stdlib/src/shadow_stdlib.mli", 1231, 48752, 48765), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.In_channel instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1231, 48752, 48767), ("shadow-stdlib/src/shadow_stdlib.mli", 1235, 48988, 49038), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1231, 48752, 48766), ("shadow-stdlib/src/shadow_stdlib.mli", 1235, 48988, 49039), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1231, 48752, 48766), ("shadow-stdlib/src/shadow_stdlib.mli", 1235, 48988, 49039), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1231, 48752, 48752), ("shadow-stdlib/src/shadow_stdlib.mli", 1235, 48988, 49040), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 234)), 0, 0); Tag3 (("Lexing", 1557), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Lexing")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1266, 50320, 50323), ("shadow-stdlib/src/shadow_stdlib.mli", 1266, 50320, 50333), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Lexing instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1266, 50320, 50335), ("shadow-stdlib/src/shadow_stdlib.mli", 1270, 50556, 50602), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1266, 50320, 50334), ("shadow-stdlib/src/shadow_stdlib.mli", 1270, 50556, 50603), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1266, 50320, 50334), ("shadow-stdlib/src/shadow_stdlib.mli", 1270, 50556, 50603), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1266, 50320, 50320), ("shadow-stdlib/src/shadow_stdlib.mli", 1270, 50556, 50604), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 239)), 0, 0); Tag3 (("ListLabels", 1558), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ListLabels")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1280, 50956, 50959), ("shadow-stdlib/src/shadow_stdlib.mli", 1280, 50956, 50969), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.ListLabels instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1280, 50956, 50971), ("shadow-stdlib/src/shadow_stdlib.mli", 1284, 51192, 51242), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1280, 50956, 50970), ("shadow-stdlib/src/shadow_stdlib.mli", 1284, 51192, 51243), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1280, 50956, 50970), ("shadow-stdlib/src/shadow_stdlib.mli", 1284, 51192, 51243), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1280, 50956, 50956), ("shadow-stdlib/src/shadow_stdlib.mli", 1284, 51192, 51244), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 241)), 0, 0); Tag3 (("Marshal", 1559), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Marshal")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1294, 51587, 51590), ("shadow-stdlib/src/shadow_stdlib.mli", 1294, 51587, 51600), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Marshal instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1294, 51587, 51602), ("shadow-stdlib/src/shadow_stdlib.mli", 1298, 51823, 51870), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1294, 51587, 51601), ("shadow-stdlib/src/shadow_stdlib.mli", 1298, 51823, 51871), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1294, 51587, 51601), ("shadow-stdlib/src/shadow_stdlib.mli", 1298, 51823, 51871), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1294, 51587, 51587), ("shadow-stdlib/src/shadow_stdlib.mli", 1298, 51823, 51872), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 243)), 0, 0); Tag3 (("MoreLabels", 1560), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "MoreLabels")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1301, 51913, 51916), ("shadow-stdlib/src/shadow_stdlib.mli", 1301, 51913, 51926), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.MoreLabels instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1301, 51913, 51928), ("shadow-stdlib/src/shadow_stdlib.mli", 1305, 52149, 52199), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1301, 51913, 51927), ("shadow-stdlib/src/shadow_stdlib.mli", 1305, 52149, 52200), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1301, 51913, 51927), ("shadow-stdlib/src/shadow_stdlib.mli", 1305, 52149, 52200), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1301, 51913, 51913), ("shadow-stdlib/src/shadow_stdlib.mli", 1305, 52149, 52201), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 244)), 0, 0); Tag3 (("Mutex", 1561), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Mutex")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1308, 52232, 52235), ("shadow-stdlib/src/shadow_stdlib.mli", 1308, 52232, 52245), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Mutex instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1308, 52232, 52247), ("shadow-stdlib/src/shadow_stdlib.mli", 1312, 52468, 52513), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1308, 52232, 52246), ("shadow-stdlib/src/shadow_stdlib.mli", 1312, 52468, 52514), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1308, 52232, 52246), ("shadow-stdlib/src/shadow_stdlib.mli", 1312, 52468, 52514), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1308, 52232, 52232), ("shadow-stdlib/src/shadow_stdlib.mli", 1312, 52468, 52515), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 245)), 0, 0); Tag3 (("Obj", 1562), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Obj")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1322, 52868, 52871), ("shadow-stdlib/src/shadow_stdlib.mli", 1322, 52868, 52881), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Obj instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1322, 52868, 52883), ("shadow-stdlib/src/shadow_stdlib.mli", 1326, 53104, 53147), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1322, 52868, 52882), ("shadow-stdlib/src/shadow_stdlib.mli", 1326, 53104, 53148), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1322, 52868, 52882), ("shadow-stdlib/src/shadow_stdlib.mli", 1326, 53104, 53148), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1322, 52868, 52868), ("shadow-stdlib/src/shadow_stdlib.mli", 1326, 53104, 53149), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 247)), 0, 0); Tag3 (("Oo", 1563), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Oo")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1329, 53174, 53177), ("shadow-stdlib/src/shadow_stdlib.mli", 1329, 53174, 53187), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Oo instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1329, 53174, 53189), ("shadow-stdlib/src/shadow_stdlib.mli", 1333, 53410, 53452), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1329, 53174, 53188), ("shadow-stdlib/src/shadow_stdlib.mli", 1333, 53410, 53453), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1329, 53174, 53188), ("shadow-stdlib/src/shadow_stdlib.mli", 1333, 53410, 53453), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1329, 53174, 53174), ("shadow-stdlib/src/shadow_stdlib.mli", 1333, 53410, 53454), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 248)), 0, 0); Tag3 (("Out_channel", 1564), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Out_channel")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1343, 53814, 53817), ("shadow-stdlib/src/shadow_stdlib.mli", 1343, 53814, 53827), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Out_channel instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1343, 53814, 53829), ("shadow-stdlib/src/shadow_stdlib.mli", 1347, 54050, 54101), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1343, 53814, 53828), ("shadow-stdlib/src/shadow_stdlib.mli", 1347, 54050, 54102), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1343, 53814, 53828), ("shadow-stdlib/src/shadow_stdlib.mli", 1347, 54050, 54102), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1343, 53814, 53814), ("shadow-stdlib/src/shadow_stdlib.mli", 1347, 54050, 54103), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 250)), 0, 0); Tag3 (("Parsing", 1565), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Parsing")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1350, 54138, 54141), ("shadow-stdlib/src/shadow_stdlib.mli", 1350, 54138, 54151), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Parsing instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1350, 54138, 54153), ("shadow-stdlib/src/shadow_stdlib.mli", 1354, 54374, 54421), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1350, 54138, 54152), ("shadow-stdlib/src/shadow_stdlib.mli", 1354, 54374, 54422), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1350, 54138, 54152), ("shadow-stdlib/src/shadow_stdlib.mli", 1354, 54374, 54422), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1350, 54138, 54138), ("shadow-stdlib/src/shadow_stdlib.mli", 1354, 54374, 54423), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 251)), 0, 0); Tag3 (("Printexc", 1566), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Printexc")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1357, 54460, 54463), ("shadow-stdlib/src/shadow_stdlib.mli", 1357, 54460, 54473), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nUse [Exn] or [Backtrace] instead.", (("shadow-stdlib/src/shadow_stdlib.mli", 1357, 54460, 54475), ("shadow-stdlib/src/shadow_stdlib.mli", 1359, 54546, 54579), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1357, 54460, 54474), ("shadow-stdlib/src/shadow_stdlib.mli", 1359, 54546, 54580), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1357, 54460, 54474), ("shadow-stdlib/src/shadow_stdlib.mli", 1359, 54546, 54580), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1357, 54460, 54460), ("shadow-stdlib/src/shadow_stdlib.mli", 1359, 54546, 54581), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 252)), 0, 0); Tag3 (("Scanf", 1567), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Scanf")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1390, 55877, 55880), ("shadow-stdlib/src/shadow_stdlib.mli", 1390, 55877, 55890), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Scanf instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1390, 55877, 55892), ("shadow-stdlib/src/shadow_stdlib.mli", 1394, 56113, 56158), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1390, 55877, 55891), ("shadow-stdlib/src/shadow_stdlib.mli", 1394, 56113, 56159), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1390, 55877, 55891), ("shadow-stdlib/src/shadow_stdlib.mli", 1394, 56113, 56159), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1390, 55877, 55877), ("shadow-stdlib/src/shadow_stdlib.mli", 1394, 56113, 56160), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 257)), 0, 0); Tag3 (("Semaphore", 1568), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Semaphore")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1397, 56199, 56202), ("shadow-stdlib/src/shadow_stdlib.mli", 1397, 56199, 56212), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Semaphore instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1397, 56199, 56214), ("shadow-stdlib/src/shadow_stdlib.mli", 1401, 56435, 56484), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1397, 56199, 56213), ("shadow-stdlib/src/shadow_stdlib.mli", 1401, 56435, 56485), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1397, 56199, 56213), ("shadow-stdlib/src/shadow_stdlib.mli", 1401, 56435, 56485), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1397, 56199, 56199), ("shadow-stdlib/src/shadow_stdlib.mli", 1401, 56435, 56486), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 258)), 0, 0); Tag3 (("Seq", 1569), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Seq")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1404, 56513, 56516), ("shadow-stdlib/src/shadow_stdlib.mli", 1404, 56513, 56526), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nThere is no equivalent functionality in Base or Stdio but you can use\n[Sequence] instead.\nAlternatively, if you really want to refer the stdlib you can use\n[Stdlib.Seq].", (("shadow-stdlib/src/shadow_stdlib.mli", 1404, 56513, 56528), ("shadow-stdlib/src/shadow_stdlib.mli", 1409, 56755, 56768), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1404, 56513, 56527), ("shadow-stdlib/src/shadow_stdlib.mli", 1409, 56755, 56769), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1404, 56513, 56527), ("shadow-stdlib/src/shadow_stdlib.mli", 1409, 56755, 56769), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1404, 56513, 56513), ("shadow-stdlib/src/shadow_stdlib.mli", 1409, 56755, 56770), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 259)), 0, 0); Tag3 (("StdLabels", 1570), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "StdLabels")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1426, 57431, 57434), ("shadow-stdlib/src/shadow_stdlib.mli", 1426, 57431, 57444), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.StdLabels instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1426, 57431, 57446), ("shadow-stdlib/src/shadow_stdlib.mli", 1430, 57667, 57716), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1426, 57431, 57445), ("shadow-stdlib/src/shadow_stdlib.mli", 1430, 57667, 57717), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1426, 57431, 57445), ("shadow-stdlib/src/shadow_stdlib.mli", 1430, 57667, 57717), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1426, 57431, 57431), ("shadow-stdlib/src/shadow_stdlib.mli", 1430, 57667, 57718), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 262)), 0, 0); Tag3 (("StringLabels", 1571), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "StringLabels")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1440, 58080, 58083), ("shadow-stdlib/src/shadow_stdlib.mli", 1440, 58080, 58093), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.StringLabels instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1440, 58080, 58095), ("shadow-stdlib/src/shadow_stdlib.mli", 1444, 58316, 58368), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1440, 58080, 58094), ("shadow-stdlib/src/shadow_stdlib.mli", 1444, 58316, 58369), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1440, 58080, 58094), ("shadow-stdlib/src/shadow_stdlib.mli", 1444, 58316, 58369), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1440, 58080, 58080), ("shadow-stdlib/src/shadow_stdlib.mli", 1444, 58316, 58370), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 264)), 0, 0); Tag3 (("Type", 1572), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Type")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1454, 58707, 58710), ("shadow-stdlib/src/shadow_stdlib.mli", 1454, 58707, 58720), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Type instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1454, 58707, 58722), ("shadow-stdlib/src/shadow_stdlib.mli", 1458, 58943, 58987), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1454, 58707, 58721), ("shadow-stdlib/src/shadow_stdlib.mli", 1458, 58943, 58988), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1454, 58707, 58721), ("shadow-stdlib/src/shadow_stdlib.mli", 1458, 58943, 58988), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1454, 58707, 58707), ("shadow-stdlib/src/shadow_stdlib.mli", 1458, 58943, 58989), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 266)), 0, 0); Tag3 (("Weak", 1573), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Weak")), [(("deprecated", (("shadow-stdlib/src/shadow_stdlib.mli", 1475, 59643, 59646), ("shadow-stdlib/src/shadow_stdlib.mli", 1475, 59643, 59656), 0)), ([([(Tag1 (Tag2 ("[2016-09] this element comes from the stdlib distributed with OCaml.\nReferring to the stdlib directly is discouraged by Base. You should either\nuse the equivalent functionality offered by Base, or if you really want to\nrefer to the stdlib, use Stdlib.Weak instead", (("shadow-stdlib/src/shadow_stdlib.mli", 1475, 59643, 59658), ("shadow-stdlib/src/shadow_stdlib.mli", 1479, 59879, 59923), 0), 0)), (("shadow-stdlib/src/shadow_stdlib.mli", 1475, 59643, 59657), ("shadow-stdlib/src/shadow_stdlib.mli", 1479, 59879, 59924), 0), 0, 0)], (("shadow-stdlib/src/shadow_stdlib.mli", 1475, 59643, 59657), ("shadow-stdlib/src/shadow_stdlib.mli", 1479, 59879, 59924), 0))]), (("shadow-stdlib/src/shadow_stdlib.mli", 1475, 59643, 59643), ("shadow-stdlib/src/shadow_stdlib.mli", 1479, 59879, 59925), 0))], (("src/import0.ml", 7, 216, 220), ("src/import0.ml", 41, 1670, 1710), 0), Tag1 ("Shadow_stdlib", 269)), 0, 0); Tag1 (("ref", 1574), ([((("a")), 100000000, 0, -774)], 1, [[(("contents", 16107), 1, ((("a")), 100000000, 0, -774), (("src/import0.ml", 44, 1737, 1769), ("src/import0.ml", 44, 1737, 1790), 0), 0, Tag1 ("Base__Import0", 5))]], 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [((("a")), 100000000, 0, -774)], (0)), 100000000, 0, -773)), [63], [0], 0, 0, (("src/import0.ml", 44, 1737, 1737), ("src/import0.ml", 44, 1737, 1792), 0), 0, 0, 0, Tag1 ("Base__Import0", 4)), 1, 0); Tag3 (("Stdlib", 1575), 0, (Tag3 (Tag1 ((Tag2 ("Base__Import0")), "Stdlib")), 0, (("src/import0.ml", 47, 1878, 1878), ("src/import0.ml", 51, 1973, 1976), 0), Tag1 ("Base__Import0", 6)), 0, 0); (("|>", 1576), ((Tag1 (0, ((("a")), 100000000, 0, -772), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -772), ((("b")), 100000000, 0, -770), 0), 100000000, 0, -771), ((("b")), 100000000, 0, -770), 0), 100000000, 0, -769), 0), 100000000, 0, -768), (("%revapply", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 53, 1978, 1978), ("src/import0.ml", 53, 1978, 2046), 0), 0, Tag1 ("Base__Import0", 7)), 0); (("&&", 1577), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -767), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -766), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -765), 0), 100000000, 0, -764), 0), 100000000, 0, -763), (("%sequand", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 56, 2120, 2120), ("src/import0.ml", 56, 2120, 2199), 0), 0, Tag1 ("Base__Import0", 8)), 0); (("||", 1578), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -762), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -761), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -760), 0), 100000000, 0, -759), 0), 100000000, 0, -758), (("%sequor", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 57, 2200, 2200), ("src/import0.ml", 57, 2200, 2278), 0), 0, Tag1 ("Base__Import0", 9)), 0); (("not", 1579), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -757), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -756), 0), 100000000, 0, -755), (("%boolnot", 1, 1, "", [0], 0)), (("src/import0.ml", 58, 2279, 2279), ("src/import0.ml", 58, 2279, 2333), 0), 0, Tag1 ("Base__Import0", 10)), 0); (("bool_to_int", 1580), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -754), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -753), 0), 100000000, 0, -752), 0, (("src/import0.ml", 62, 2467, 2471), ("src/import0.ml", 62, 2467, 2482), 0), 0, Tag1 ("Base__Import0", 11)), 0); (("!=", 1581), ((Tag1 (0, ((0), 100000000, 0, -751), (Tag1 (0, ((0), 100000000, 0, -751), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -750), 0), 100000000, 0, -749), 0), 100000000, 0, -748), 0, (("src/import0.ml", 67, 2643, 2647), ("src/import0.ml", 67, 2643, 2653), 0), 0, Tag1 ("Base__Import0", 14)), 0); (("*", 1582), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -747), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -746), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -745), 0), 100000000, 0, -744), 0), 100000000, 0, -743), 0, (("src/import0.ml", 68, 2670, 2674), ("src/import0.ml", 68, 2670, 2679), 0), 0, Tag1 ("Base__Import0", 15)), 0); (("**", 1583), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -742), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -741), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -740), 0), 100000000, 0, -739), 0), 100000000, 0, -738), 0, (("src/import0.ml", 69, 2695, 2699), ("src/import0.ml", 69, 2695, 2705), 0), 0, Tag1 ("Base__Import0", 16)), 0); (("*.", 1584), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -737), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -736), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -735), 0), 100000000, 0, -734), 0), 100000000, 0, -733), 0, (("src/import0.ml", 70, 2722, 2726), ("src/import0.ml", 70, 2722, 2732), 0), 0, Tag1 ("Base__Import0", 17)), 0); (("+", 1585), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -732), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -731), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -730), 0), 100000000, 0, -729), 0), 100000000, 0, -728), 0, (("src/import0.ml", 71, 2749, 2753), ("src/import0.ml", 71, 2749, 2758), 0), 0, Tag1 ("Base__Import0", 18)), 0); (("+.", 1586), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -727), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -726), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -725), 0), 100000000, 0, -724), 0), 100000000, 0, -723), 0, (("src/import0.ml", 72, 2774, 2778), ("src/import0.ml", 72, 2774, 2784), 0), 0, Tag1 ("Base__Import0", 19)), 0); (("-", 1587), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -722), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -721), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -720), 0), 100000000, 0, -719), 0), 100000000, 0, -718), 0, (("src/import0.ml", 73, 2801, 2805), ("src/import0.ml", 73, 2801, 2810), 0), 0, Tag1 ("Base__Import0", 20)), 0); (("-.", 1588), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -717), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -716), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -715), 0), 100000000, 0, -714), 0), 100000000, 0, -713), 0, (("src/import0.ml", 74, 2826, 2830), ("src/import0.ml", 74, 2826, 2836), 0), 0, Tag1 ("Base__Import0", 21)), 0); (("/", 1589), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -712), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -711), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -710), 0), 100000000, 0, -709), 0), 100000000, 0, -708), 0, (("src/import0.ml", 75, 2853, 2857), ("src/import0.ml", 75, 2853, 2862), 0), 0, Tag1 ("Base__Import0", 22)), 0); (("/.", 1590), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -707), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -706), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -705), 0), 100000000, 0, -704), 0), 100000000, 0, -703), 0, (("src/import0.ml", 76, 2878, 2882), ("src/import0.ml", 76, 2878, 2888), 0), 0, Tag1 ("Base__Import0", 23)), 0); Tag3 (("Poly", 1591), 1, (Tag3 (Tag1 ((Tag2 ("Base__")), "Poly0")), 0, (("src/import0.ml", 78, 2906, 2906), ("src/import0.ml", 78, 2906, 2925), 0), Tag1 ("Base__Import0", 24)), 0, 0); Tag3 (("Int_replace_polymorphic_compare", 1592), 0, (Tag3 (Tag1 ((Tag2 ("Base__Import0")), "Int_replace_polymorphic_compare")), 0, (("src/import0.ml", 80, 2955, 2955), ("src/import0.ml", 96, 3974, 3977), 0), Tag1 ("Base__Import0", 45)), 0, 0); (("<>", 1593), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -702), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -701), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -700), 0), 100000000, 0, -699), 0), 100000000, 0, -698), (("%notequal", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 84, 3220, 3222), ("src/import0.ml", 84, 3220, 3300), 0), 0, Tag1 ("Base__Import0", 26)), 0); (("<", 1594), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -697), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -696), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -695), 0), 100000000, 0, -694), 0), 100000000, 0, -693), (("%lessthan", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 85, 3301, 3303), ("src/import0.ml", 85, 3301, 3380), 0), 0, Tag1 ("Base__Import0", 27)), 0); ((">", 1595), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -692), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -691), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -690), 0), 100000000, 0, -689), 0), 100000000, 0, -688), (("%greaterthan", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 86, 3381, 3383), ("src/import0.ml", 86, 3381, 3463), 0), 0, Tag1 ("Base__Import0", 28)), 0); (("<=", 1596), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -687), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -686), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -685), 0), 100000000, 0, -684), 0), 100000000, 0, -683), (("%lessequal", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 87, 3464, 3466), ("src/import0.ml", 87, 3464, 3545), 0), 0, Tag1 ("Base__Import0", 29)), 0); ((">=", 1597), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -682), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -681), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -680), 0), 100000000, 0, -679), 0), 100000000, 0, -678), (("%greaterequal", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 88, 3546, 3548), ("src/import0.ml", 88, 3546, 3630), 0), 0, Tag1 ("Base__Import0", 30)), 0); (("compare", 1598), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -677), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -676), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -675), 0), 100000000, 0, -674), 0), 100000000, 0, -673), (("%compare", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 89, 3631, 3633), ("src/import0.ml", 89, 3631, 3710), 0), 0, Tag1 ("Base__Import0", 31)), 0); (("equal", 1599), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -672), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -671), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -670), 0), 100000000, 0, -669), 0), 100000000, 0, -668), (("%equal", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 90, 3711, 3713), ("src/import0.ml", 90, 3711, 3787), 0), 0, Tag1 ("Base__Import0", 32)), 0); (("ascending", 1600), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -667), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -666), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -665), 0), 100000000, 0, -664), 0), 100000000, 0, -663), 0, (("src/import0.ml", 92, 3789, 3795), ("src/import0.ml", 92, 3789, 3804), 0), 0, Tag1 ("Base__Import0", 33)), 0); (("descending", 1601), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -662), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -661), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -660), 0), 100000000, 0, -659), 0), 100000000, 0, -658), 0, (("src/import0.ml", 93, 3831, 3837), ("src/import0.ml", 93, 3831, 3847), 0), 0, Tag1 ("Base__Import0", 36)), 0); (("max", 1602), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -657), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -656), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -656), 0), 100000000, 0, -655), 0), 100000000, 0, -654), 0, (("src/import0.ml", 94, 3874, 3880), ("src/import0.ml", 94, 3874, 3883), 0), 0, Tag1 ("Base__Import0", 39)), 0); (("min", 1603), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -653), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -652), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -652), 0), 100000000, 0, -651), 0), 100000000, 0, -650), 0, (("src/import0.ml", 95, 3924, 3930), ("src/import0.ml", 95, 3924, 3933), 0), 0, Tag1 ("Base__Import0", 42)), 0); Tag3 (("Int32_replace_polymorphic_compare", 1604), 0, (Tag3 (Tag1 ((Tag2 ("Base__Import0")), "Int32_replace_polymorphic_compare")), 0, (("src/import0.ml", 100, 4020, 4020), ("src/import0.ml", 113, 4740, 4743), 0), Tag1 ("Base__Import0", 82)), 0, 0); Tag3 (("Int64_replace_polymorphic_compare", 1605), 0, (Tag3 (Tag1 ((Tag2 ("Base__Import0")), "Int64_replace_polymorphic_compare")), 0, (("src/import0.ml", 115, 4745, 4745), ("src/import0.ml", 170, 6144, 6147), 0), Tag1 ("Base__Import0", 103)), 0, 0); Tag3 (("Nativeint_replace_polymorphic_compare", 1606), 0, (Tag3 (Tag1 ((Tag2 ("Base__Import0")), "Nativeint_replace_polymorphic_compare")), 0, (("src/import0.ml", 172, 6149, 6149), ("src/import0.ml", 185, 6921, 6924), 0), Tag1 ("Base__Import0", 140)), 0, 0); Tag3 (("Bool_replace_polymorphic_compare", 1607), 0, (Tag3 (Tag1 ((Tag2 ("Base__Import0")), "Bool_replace_polymorphic_compare")), 0, (("src/import0.ml", 187, 6926, 6926), ("src/import0.ml", 200, 7525, 7528), 0), Tag1 ("Base__Import0", 177)), 0, 0); Tag3 (("Char_replace_polymorphic_compare", 1608), 0, (Tag3 (Tag1 ((Tag2 ("Base__Import0")), "Char_replace_polymorphic_compare")), 0, (("src/import0.ml", 202, 7530, 7530), ("src/import0.ml", 215, 8129, 8132), 0), Tag1 ("Base__Import0", 214)), 0, 0); Tag3 (("Uchar_replace_polymorphic_compare", 1609), 0, (Tag3 (Tag1 ((Tag2 ("Base__Import0")), "Uchar_replace_polymorphic_compare")), 0, (("src/import0.ml", 217, 8134, 8134), ("src/import0.ml", 238, 9259, 9262), 0), Tag1 ("Base__Import0", 253)), 0, 0); Tag3 (("Float_replace_polymorphic_compare", 1610), 0, (Tag3 (Tag1 ((Tag2 ("Base__Import0")), "Float_replace_polymorphic_compare")), 0, (("src/import0.ml", 240, 9264, 9264), ("src/import0.ml", 253, 9876, 9879), 0), Tag1 ("Base__Import0", 290)), 0, 0); Tag3 (("String_replace_polymorphic_compare", 1611), 0, (Tag3 (Tag1 ((Tag2 ("Base__Import0")), "String_replace_polymorphic_compare")), 0, (("src/import0.ml", 255, 9881, 9881), ("src/import0.ml", 268, 10506, 10509), 0), Tag1 ("Base__Import0", 327)), 0, 0); Tag3 (("Bytes_replace_polymorphic_compare", 1612), 0, (Tag3 (Tag1 ((Tag2 ("Base__Import0")), "Bytes_replace_polymorphic_compare")), 0, (("src/import0.ml", 270, 10511, 10511), ("src/import0.ml", 283, 11123, 11126), 0), Tag1 ("Base__Import0", 364)), 0, 0); ((":=", 1613), ((Tag1 (0, (Tag3 ((("ref", 1574)), [((("a")), 100000000, 0, -648)], (0)), 100000000, 0, -649), (Tag1 (0, ((("a")), 100000000, 0, -648), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -647), 0), 100000000, 0, -646), 0), 100000000, 0, -645), (("%setfield0", 2, 1, "", [0; 0], 0)), (("src/import0.ml", 287, 11247, 11247), ("src/import0.ml", 287, 11247, 11314), 0), 0, Tag1 ("Base__Import0", 365)), 0); (("!", 1614), ((Tag1 (0, (Tag3 ((("ref", 1574)), [((("a")), 100000000, 0, -643)], (0)), 100000000, 0, -644), ((("a")), 100000000, 0, -643), 0), 100000000, 0, -642), (("%field0", 1, 1, "", [0], 0)), (("src/import0.ml", 291, 11411, 11411), ("src/import0.ml", 291, 11411, 11466), 0), 0, Tag1 ("Base__Import0", 366)), 0); (("ref", 1615), ((Tag1 (0, ((("a")), 100000000, 0, -641), (Tag3 ((("ref", 1574)), [((("a")), 100000000, 0, -641)], (0)), 100000000, 0, -640), 0), 100000000, 0, -639), (("%makemutable", 1, 1, "", [0], 0)), (("src/import0.ml", 292, 11467, 11467), ("src/import0.ml", 292, 11467, 11525), 0), 0, Tag1 ("Base__Import0", 367)), 0); (("@", 1616), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((0), 100000000, 0, -636)], (0)), 100000000, 0, -638), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((0), 100000000, 0, -636)], (0)), 100000000, 0, -637), (Tag3 ((Tag3 ("list", 9)), [((0), 100000000, 0, -636)], (0)), 100000000, 0, -635), 0), 100000000, 0, -634), 0), 100000000, 0, -633), 0, (("src/import0.ml", 294, 11527, 11531), ("src/import0.ml", 294, 11527, 11536), 0), 0, Tag1 ("Base__Import0", 368)), 0); (("^", 1617), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -632), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -631), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -630), 0), 100000000, 0, -629), 0), 100000000, 0, -628), 0, (("src/import0.ml", 295, 11552, 11556), ("src/import0.ml", 295, 11552, 11561), 0), 0, Tag1 ("Base__Import0", 369)), 0); (("~-", 1618), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -627), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -626), 0), 100000000, 0, -625), 0, (("src/import0.ml", 296, 11577, 11581), ("src/import0.ml", 296, 11577, 11587), 0), 0, Tag1 ("Base__Import0", 370)), 0); (("~-.", 1619), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -624), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -623), 0), 100000000, 0, -622), 0, (("src/import0.ml", 297, 11604, 11608), ("src/import0.ml", 297, 11604, 11615), 0), 0, Tag1 ("Base__Import0", 371)), 0); (("asr", 1620), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -621), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -620), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -619), 0), 100000000, 0, -618), 0), 100000000, 0, -617), 0, (("src/import0.ml", 298, 11633, 11637), ("src/import0.ml", 298, 11633, 11644), 0), 0, Tag1 ("Base__Import0", 372)), 0); (("land", 1621), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -616), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -615), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -614), 0), 100000000, 0, -613), 0), 100000000, 0, -612), 0, (("src/import0.ml", 299, 11662, 11666), ("src/import0.ml", 299, 11662, 11674), 0), 0, Tag1 ("Base__Import0", 373)), 0); (("lnot", 1622), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -611), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -610), 0), 100000000, 0, -609), 0, (("src/import0.ml", 300, 11693, 11697), ("src/import0.ml", 300, 11693, 11701), 0), 0, Tag1 ("Base__Import0", 374)), 0); (("lor", 1623), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -608), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -607), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -606), 0), 100000000, 0, -605), 0), 100000000, 0, -604), 0, (("src/import0.ml", 301, 11716, 11720), ("src/import0.ml", 301, 11716, 11727), 0), 0, Tag1 ("Base__Import0", 375)), 0); (("lsl", 1624), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -603), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -602), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -601), 0), 100000000, 0, -600), 0), 100000000, 0, -599), 0, (("src/import0.ml", 302, 11745, 11749), ("src/import0.ml", 302, 11745, 11756), 0), 0, Tag1 ("Base__Import0", 376)), 0); (("lsr", 1625), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -598), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -597), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -596), 0), 100000000, 0, -595), 0), 100000000, 0, -594), 0, (("src/import0.ml", 303, 11774, 11778), ("src/import0.ml", 303, 11774, 11785), 0), 0, Tag1 ("Base__Import0", 377)), 0); (("lxor", 1626), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -593), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -592), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -591), 0), 100000000, 0, -590), 0), 100000000, 0, -589), 0, (("src/import0.ml", 304, 11803, 11807), ("src/import0.ml", 304, 11803, 11815), 0), 0, Tag1 ("Base__Import0", 378)), 0); (("mod", 1627), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -588), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -587), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -586), 0), 100000000, 0, -585), 0), 100000000, 0, -584), 0, (("src/import0.ml", 305, 11834, 11838), ("src/import0.ml", 305, 11834, 11845), 0), 0, Tag1 ("Base__Import0", 379)), 0); (("abs", 1628), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -583), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -582), 0), 100000000, 0, -581), 0, (("src/import0.ml", 306, 11863, 11867), ("src/import0.ml", 306, 11863, 11870), 0), 0, Tag1 ("Base__Import0", 380)), 0); (("failwith", 1629), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -580), ((0), 100000000, 0, -579), 0), 100000000, 0, -578), 0, (("src/import0.ml", 307, 11884, 11888), ("src/import0.ml", 307, 11884, 11896), 0), 0, Tag1 ("Base__Import0", 381)), 0); (("fst", 1630), ((Tag1 (0, (Tag2 ([((0), 100000000, 0, -575); ((0), 100000000, 0, -577)]), 100000000, 0, -576), ((0), 100000000, 0, -575), 0), 100000000, 0, -574), 0, (("src/import0.ml", 308, 11915, 11919), ("src/import0.ml", 308, 11915, 11922), 0), 0, Tag1 ("Base__Import0", 382)), 0); (("invalid_arg", 1631), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -573), ((0), 100000000, 0, -572), 0), 100000000, 0, -571), 0, (("src/import0.ml", 309, 11936, 11940), ("src/import0.ml", 309, 11936, 11951), 0), 0, Tag1 ("Base__Import0", 383)), 0); (("snd", 1632), ((Tag1 (0, (Tag2 ([((0), 100000000, 0, -570); ((0), 100000000, 0, -568)]), 100000000, 0, -569), ((0), 100000000, 0, -568), 0), 100000000, 0, -567), 0, (("src/import0.ml", 310, 11973, 11977), ("src/import0.ml", 310, 11973, 11980), 0), 0, Tag1 ("Base__Import0", 384)), 0); (("raise", 1633), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -566), ((0), 100000000, 0, -565), 0), 100000000, 0, -564), (("%raise", 1, 1, "", [0], 0)), (("src/import0.ml", 314, 12127, 12127), ("src/import0.ml", 314, 12127, 12163), 0), 0, Tag1 ("Base__Import0", 385)), 0); (("phys_equal", 1634), ((Tag1 (0, ((0), 100000000, 0, -563), (Tag1 (0, ((0), 100000000, 0, -563), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -562), 0), 100000000, 0, -561), 0), 100000000, 0, -560), 0, (("src/import0.ml", 316, 12165, 12169), ("src/import0.ml", 316, 12165, 12179), 0), 0, Tag1 ("Base__Import0", 386)), 0); (("decr", 1635), ((Tag1 (0, (Tag3 ((("ref", 1574)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -559)], (0)), 100000000, 0, -558), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -557), 0), 100000000, 0, -556), (("%decr", 1, 1, "", [0], 0)), (("src/import0.ml", 318, 12197, 12197), ("src/import0.ml", 318, 12197, 12252), 0), 0, Tag1 ("Base__Import0", 387)), 0); (("incr", 1636), ((Tag1 (0, (Tag3 ((("ref", 1574)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -555)], (0)), 100000000, 0, -554), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -553), 0), 100000000, 0, -552), (("%incr", 1, 1, "", [0], 0)), (("src/import0.ml", 319, 12253, 12253), ("src/import0.ml", 319, 12253, 12308), 0), 0, Tag1 ("Base__Import0", 388)), 0); (("float_of_string", 1637), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -551), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -550), 0), 100000000, 0, -549), 0, (("src/import0.ml", 322, 12374, 12378), ("src/import0.ml", 322, 12374, 12393), 0), 0, Tag1 ("Base__Import0", 389)), 0); (("am_testing", 1638), ((Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -548), 0, (("src/import0.ml", 330, 12801, 12805), ("src/import0.ml", 330, 12801, 12815), 0), 0, Tag1 ("Base__Import0", 391)), 0); (("default_string_of_float", 1639), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -547), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -546), 0), 100000000, 0, -545)], (0)), 100000000, 0, -544), 0, (("src/sexp_conv.mli", 9, 266, 266), ("src/sexp_conv.mli", 9, 266, 317), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 0)), 0); (("write_old_option_format", 1640), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -543)], (0)), 100000000, 0, -542), 0, (("src/sexp_conv.mli", 16, 549, 549), ("src/sexp_conv.mli", 16, 549, 587), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 1)), 0); (("read_old_option_format", 1641), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -541)], (0)), 100000000, 0, -540), 0, (("src/sexp_conv.mli", 26, 1039, 1039), ("src/sexp_conv.mli", 26, 1039, 1076), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 2)), 0); (("list_map", 1642), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -538), ((("b")), 100000000, 0, -536), 0), 100000000, 0, -539), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -538)], (0)), 100000000, 0, -537), (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -536)], (0)), 100000000, 0, -535), 0), 100000000, 0, -534), 0), 100000000, 0, -533), 0, (("src/sexp_conv.mli", 31, 1263, 1263), ("src/sexp_conv.mli", 31, 1263, 1310), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 3)), 0); (("sexp_of_unit", 1643), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -532), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -531), 0), 100000000, 0, -530), 0, (("src/sexp_conv.mli", 34, 1389, 1389), ("src/sexp_conv.mli", 34, 1389, 1422), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 4)), 0); (("sexp_of_bool", 1644), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -529), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -528), 0), 100000000, 0, -527), 0, (("src/sexp_conv.mli", 38, 1510, 1510), ("src/sexp_conv.mli", 38, 1510, 1543), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 5)), 0); (("sexp_of_string", 1645), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -526), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -525), 0), 100000000, 0, -524), 0, (("src/sexp_conv.mli", 42, 1637, 1637), ("src/sexp_conv.mli", 42, 1637, 1674), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 6)), 0); (("sexp_of_bytes", 1646), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -523), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -522), 0), 100000000, 0, -521), 0, (("src/sexp_conv.mli", 46, 1767, 1767), ("src/sexp_conv.mli", 46, 1767, 1802), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 7)), 0); (("sexp_of_char", 1647), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -520), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -519), 0), 100000000, 0, -518), 0, (("src/sexp_conv.mli", 50, 1890, 1890), ("src/sexp_conv.mli", 50, 1890, 1923), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 8)), 0); (("sexp_of_int", 1648), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -517), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -516), 0), 100000000, 0, -515), 0, (("src/sexp_conv.mli", 54, 2009, 2009), ("src/sexp_conv.mli", 54, 2009, 2040), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 9)), 0); (("sexp_of_float", 1649), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -514), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -513), 0), 100000000, 0, -512), 0, (("src/sexp_conv.mli", 58, 2130, 2130), ("src/sexp_conv.mli", 58, 2130, 2165), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 10)), 0); (("sexp_of_int32", 1650), ((Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -511), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -510), 0), 100000000, 0, -509), 0, (("src/sexp_conv.mli", 62, 2255, 2255), ("src/sexp_conv.mli", 62, 2255, 2290), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 11)), 0); (("sexp_of_int64", 1651), ((Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -508), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -507), 0), 100000000, 0, -506), 0, (("src/sexp_conv.mli", 66, 2380, 2380), ("src/sexp_conv.mli", 66, 2380, 2415), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 12)), 0); (("sexp_of_nativeint", 1652), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -505), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -504), 0), 100000000, 0, -503), 0, (("src/sexp_conv.mli", 70, 2513, 2513), ("src/sexp_conv.mli", 70, 2513, 2556), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 13)), 0); (("sexp_of_ref", 1653), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -500), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -502), 0), 100000000, 0, -501), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [((("a")), 100000000, 0, -500)], (0)), 100000000, 0, -499), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -498), 0), 100000000, 0, -497), 0), 100000000, 0, -496), 0, (("src/sexp_conv.mli", 75, 2718, 2718), ("src/sexp_conv.mli", 75, 2718, 2770), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 14)), 0); (("sexp_of_lazy_t", 1654), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -493), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -495), 0), 100000000, 0, -494), (Tag1 (0, (Tag3 ((Tag3 ("lazy_t", 14)), [((("a")), 100000000, 0, -493)], (0)), 100000000, 0, -492), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -491), 0), 100000000, 0, -490), 0), 100000000, 0, -489), 0, (("src/sexp_conv.mli", 80, 2938, 2938), ("src/sexp_conv.mli", 80, 2938, 2996), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 15)), 0); (("sexp_of_option", 1655), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -486), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -488), 0), 100000000, 0, -487), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -486)], (0)), 100000000, 0, -485), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -484), 0), 100000000, 0, -483), 0), 100000000, 0, -482), 0, (("src/sexp_conv.mli", 85, 3168, 3168), ("src/sexp_conv.mli", 85, 3168, 3226), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 16)), 0); (("sexp_of_pair", 1656), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -476), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -481), 0), 100000000, 0, -480), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -477), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -479), 0), 100000000, 0, -478), (Tag1 (0, (Tag2 ([((("a")), 100000000, 0, -476); ((("b")), 100000000, 0, -477)]), 100000000, 0, -475), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -474), 0), 100000000, 0, -473), 0), 100000000, 0, -472), 0), 100000000, 0, -471), 0, (("src/sexp_conv.mli", 90, 3447, 3447), ("src/sexp_conv.mli", 90, 3447, 3519), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 17)), 0); (("sexp_of_triple", 1657), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -462), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -470), 0), 100000000, 0, -469), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -463), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -468), 0), 100000000, 0, -467), (Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -464), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -466), 0), 100000000, 0, -465), (Tag1 (0, (Tag2 ([((("a")), 100000000, 0, -462); ((("b")), 100000000, 0, -463); ((("c")), 100000000, 0, -464)]), 100000000, 0, -461), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -460), 0), 100000000, 0, -459), 0), 100000000, 0, -458), 0), 100000000, 0, -457), 0), 100000000, 0, -456), 0, (("src/sexp_conv.mli", 95, 3676, 3676), ("src/sexp_conv.mli", 100, 3773, 3784), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 18)), 0); (("sexp_of_list", 1658), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -453), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -455), 0), 100000000, 0, -454), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -453)], (0)), 100000000, 0, -452), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -451), 0), 100000000, 0, -450), 0), 100000000, 0, -449), 0, (("src/sexp_conv.mli", 105, 3952, 3952), ("src/sexp_conv.mli", 105, 3952, 4006), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 19)), 0); (("sexp_of_array", 1659), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -446), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -448), 0), 100000000, 0, -447), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -446)], (0)), 100000000, 0, -445), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -444), 0), 100000000, 0, -443), 0), 100000000, 0, -442), 0, (("src/sexp_conv.mli", 110, 4174, 4174), ("src/sexp_conv.mli", 110, 4174, 4230), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 20)), 0); (("sexp_of_hashtbl", 1660), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -436), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -441), 0), 100000000, 0, -440), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -437), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -439), 0), 100000000, 0, -438), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Hashtbl"), "t"), [((("a")), 100000000, 0, -436); ((("b")), 100000000, 0, -437)], (0)), 100000000, 0, -435), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -434), 0), 100000000, 0, -433), 0), 100000000, 0, -432), 0), 100000000, 0, -431), 0, (("src/sexp_conv.mli", 116, 4506, 4506), ("src/sexp_conv.mli", 116, 4506, 4592), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 21)), 0); (("sexp_of_opaque", 1661), ((Tag1 (0, ((("a")), 100000000, 0, -430), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -429), 0), 100000000, 0, -428), 0, (("src/sexp_conv.mli", 121, 4774, 4774), ("src/sexp_conv.mli", 121, 4774, 4807), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 22)), 0); (("sexp_of_fun", 1662), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -427), ((("b")), 100000000, 0, -426), 0), 100000000, 0, -425), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -424), 0), 100000000, 0, -423), 0, (("src/sexp_conv.mli", 126, 5020, 5020), ("src/sexp_conv.mli", 126, 5020, 5058), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 23)), 0); Tag2 (("Of_sexp_error", 1663), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -421); (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -422)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Sexplib0__Sexp_conv", 24)), 2, 0); (("record_check_extra_fields", 1664), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -420)], (0)), 100000000, 0, -419), 0, (("src/sexp_conv.mli", 136, 5393, 5393), ("src/sexp_conv.mli", 136, 5393, 5433), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 25)), 0); (("of_sexp_error", 1665), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -418), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -417), ((("a")), 100000000, 0, -416), 0), 100000000, 0, -415), 0), 100000000, 0, -414), 0, (("src/sexp_conv.mli", 139, 5515, 5515), ("src/sexp_conv.mli", 139, 5515, 5557), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 26)), 0); (("of_sexp_error_exn", 1666), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -413), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -412), ((("a")), 100000000, 0, -411), 0), 100000000, 0, -410), 0), 100000000, 0, -409), 0, (("src/sexp_conv.mli", 142, 5625, 5625), ("src/sexp_conv.mli", 142, 5625, 5668), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 27)), 0); (("unit_of_sexp", 1667), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -408), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -407), 0), 100000000, 0, -406), 0, (("src/sexp_conv.mli", 146, 5757, 5757), ("src/sexp_conv.mli", 146, 5757, 5790), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 28)), 0); (("bool_of_sexp", 1668), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -405), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -404), 0), 100000000, 0, -403), 0, (("src/sexp_conv.mli", 150, 5879, 5879), ("src/sexp_conv.mli", 150, 5879, 5912), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 29)), 0); (("string_of_sexp", 1669), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -402), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -401), 0), 100000000, 0, -400), 0, (("src/sexp_conv.mli", 154, 6005, 6005), ("src/sexp_conv.mli", 154, 6005, 6042), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 30)), 0); (("bytes_of_sexp", 1670), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -399), (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -398), 0), 100000000, 0, -397), 0, (("src/sexp_conv.mli", 158, 6133, 6133), ("src/sexp_conv.mli", 158, 6133, 6168), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 31)), 0); (("char_of_sexp", 1671), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -396), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -395), 0), 100000000, 0, -394), 0, (("src/sexp_conv.mli", 162, 6257, 6257), ("src/sexp_conv.mli", 162, 6257, 6290), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 32)), 0); (("int_of_sexp", 1672), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -393), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -392), 0), 100000000, 0, -391), 0, (("src/sexp_conv.mli", 166, 6377, 6377), ("src/sexp_conv.mli", 166, 6377, 6408), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 33)), 0); (("float_of_sexp", 1673), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -390), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -389), 0), 100000000, 0, -388), 0, (("src/sexp_conv.mli", 170, 6499, 6499), ("src/sexp_conv.mli", 170, 6499, 6534), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 34)), 0); (("int32_of_sexp", 1674), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -387), (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -386), 0), 100000000, 0, -385), 0, (("src/sexp_conv.mli", 174, 6625, 6625), ("src/sexp_conv.mli", 174, 6625, 6660), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 35)), 0); (("int64_of_sexp", 1675), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -384), (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -383), 0), 100000000, 0, -382), 0, (("src/sexp_conv.mli", 178, 6751, 6751), ("src/sexp_conv.mli", 178, 6751, 6786), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 36)), 0); (("nativeint_of_sexp", 1676), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -381), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -380), 0), 100000000, 0, -379), 0, (("src/sexp_conv.mli", 182, 6885, 6885), ("src/sexp_conv.mli", 182, 6885, 6928), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 37)), 0); (("ref_of_sexp", 1677), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -378), ((("a")), 100000000, 0, -375), 0), 100000000, 0, -377), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -376), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [((("a")), 100000000, 0, -375)], (0)), 100000000, 0, -374), 0), 100000000, 0, -373), 0), 100000000, 0, -372), 0, (("src/sexp_conv.mli", 187, 7116, 7116), ("src/sexp_conv.mli", 187, 7116, 7168), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 38)), 0); (("lazy_t_of_sexp", 1678), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -371), ((("a")), 100000000, 0, -368), 0), 100000000, 0, -370), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -369), (Tag3 ((Tag3 ("lazy_t", 14)), [((("a")), 100000000, 0, -368)], (0)), 100000000, 0, -367), 0), 100000000, 0, -366), 0), 100000000, 0, -365), 0, (("src/sexp_conv.mli", 192, 7362, 7362), ("src/sexp_conv.mli", 192, 7362, 7420), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 39)), 0); (("option_of_sexp", 1679), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -364), ((("a")), 100000000, 0, -361), 0), 100000000, 0, -363), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -362), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -361)], (0)), 100000000, 0, -360), 0), 100000000, 0, -359), 0), 100000000, 0, -358), 0, (("src/sexp_conv.mli", 197, 7614, 7614), ("src/sexp_conv.mli", 197, 7614, 7672), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 40)), 0); (("pair_of_sexp", 1680), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -357), ((("a")), 100000000, 0, -351), 0), 100000000, 0, -356), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -355), ((("b")), 100000000, 0, -352), 0), 100000000, 0, -354), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -353), (Tag2 ([((("a")), 100000000, 0, -351); ((("b")), 100000000, 0, -352)]), 100000000, 0, -350), 0), 100000000, 0, -349), 0), 100000000, 0, -348), 0), 100000000, 0, -347), 0, (("src/sexp_conv.mli", 203, 7904, 7904), ("src/sexp_conv.mli", 203, 7904, 7976), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 41)), 0); (("triple_of_sexp", 1681), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -346), ((("a")), 100000000, 0, -337), 0), 100000000, 0, -345), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -344), ((("b")), 100000000, 0, -338), 0), 100000000, 0, -343), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -342), ((("c")), 100000000, 0, -339), 0), 100000000, 0, -341), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -340), (Tag2 ([((("a")), 100000000, 0, -337); ((("b")), 100000000, 0, -338); ((("c")), 100000000, 0, -339)]), 100000000, 0, -336), 0), 100000000, 0, -335), 0), 100000000, 0, -334), 0), 100000000, 0, -333), 0), 100000000, 0, -332), 0, (("src/sexp_conv.mli", 209, 8240, 8240), ("src/sexp_conv.mli", 214, 8331, 8348), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 42)), 0); (("list_of_sexp", 1682), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -331), ((("a")), 100000000, 0, -328), 0), 100000000, 0, -330), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -329), (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -328)], (0)), 100000000, 0, -327), 0), 100000000, 0, -326), 0), 100000000, 0, -325), 0, (("src/sexp_conv.mli", 219, 8538, 8538), ("src/sexp_conv.mli", 219, 8538, 8592), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 43)), 0); (("array_of_sexp", 1683), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -324), ((("a")), 100000000, 0, -321), 0), 100000000, 0, -323), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -322), (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -321)], (0)), 100000000, 0, -320), 0), 100000000, 0, -319), 0), 100000000, 0, -318), 0, (("src/sexp_conv.mli", 224, 8784, 8784), ("src/sexp_conv.mli", 224, 8784, 8840), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 44)), 0); (("hashtbl_of_sexp", 1684), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -317), ((("a")), 100000000, 0, -311), 0), 100000000, 0, -316), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -315), ((("b")), 100000000, 0, -312), 0), 100000000, 0, -314), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -313), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Hashtbl"), "t"), [((("a")), 100000000, 0, -311); ((("b")), 100000000, 0, -312)], (0)), 100000000, 0, -310), 0), 100000000, 0, -309), 0), 100000000, 0, -308), 0), 100000000, 0, -307), 0, (("src/sexp_conv.mli", 231, 9168, 9168), ("src/sexp_conv.mli", 231, 9168, 9254), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 45)), 0); (("opaque_of_sexp", 1685), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -306), ((("a")), 100000000, 0, -305), 0), 100000000, 0, -304), 0, (("src/sexp_conv.mli", 235, 9373, 9373), ("src/sexp_conv.mli", 235, 9373, 9406), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 46)), 0); (("fun_of_sexp", 1686), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -303), ((("a")), 100000000, 0, -302), 0), 100000000, 0, -301), 0, (("src/sexp_conv.mli", 239, 9517, 9517), ("src/sexp_conv.mli", 239, 9517, 9547), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 47)), 0); (("sexp_grammar_with_tags", 1687), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "grammar"), 0, (0)), 100000000, 0, -300), (Tag1 (("tags"), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -298); (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -299)]), 100000000, 0, -297)], (0)), 100000000, 0, -296), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "grammar"), 0, (0)), 100000000, 0, -295), 0), 100000000, 0, -294), 0), 100000000, 0, -293), 0, (("src/sexp_conv_grammar.mli", 3, 30, 30), ("src/sexp_conv_grammar.mli", 6, 116, 141), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 1)), 0); (("sexp_grammar_with_tag_list", 1688), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "with_tag_list"), [((("a")), 100000000, 0, -287)], (0)), 100000000, 0, -292), (Tag1 (("tags"), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -290); (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -291)]), 100000000, 0, -289)], (0)), 100000000, 0, -288), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "with_tag_list"), [((("a")), 100000000, 0, -287)], (0)), 100000000, 0, -286), 0), 100000000, 0, -285), 0), 100000000, 0, -284), 0, (("src/sexp_conv_grammar.mli", 8, 143, 143), ("src/sexp_conv_grammar.mli", 11, 242, 276), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 2)), 0); (("unit_sexp_grammar", 1689), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -283)], (0)), 100000000, 0, -282), 0, (("src/sexp_conv_grammar.mli", 15, 312, 312), ("src/sexp_conv_grammar.mli", 15, 312, 355), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 3)), 0); (("bool_sexp_grammar", 1690), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -281)], (0)), 100000000, 0, -280), 0, (("src/sexp_conv_grammar.mli", 16, 356, 356), ("src/sexp_conv_grammar.mli", 16, 356, 399), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 4)), 0); (("string_sexp_grammar", 1691), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -279)], (0)), 100000000, 0, -278), 0, (("src/sexp_conv_grammar.mli", 17, 400, 400), ("src/sexp_conv_grammar.mli", 17, 400, 447), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 5)), 0); (("bytes_sexp_grammar", 1692), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -277)], (0)), 100000000, 0, -276), 0, (("src/sexp_conv_grammar.mli", 18, 448, 448), ("src/sexp_conv_grammar.mli", 18, 448, 493), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 6)), 0); (("char_sexp_grammar", 1693), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -275)], (0)), 100000000, 0, -274), 0, (("src/sexp_conv_grammar.mli", 19, 494, 494), ("src/sexp_conv_grammar.mli", 19, 494, 537), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 7)), 0); (("int_sexp_grammar", 1694), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -273)], (0)), 100000000, 0, -272), 0, (("src/sexp_conv_grammar.mli", 20, 538, 538), ("src/sexp_conv_grammar.mli", 20, 538, 579), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 8)), 0); (("float_sexp_grammar", 1695), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -271)], (0)), 100000000, 0, -270), 0, (("src/sexp_conv_grammar.mli", 21, 580, 580), ("src/sexp_conv_grammar.mli", 21, 580, 625), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 9)), 0); (("int32_sexp_grammar", 1696), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -269)], (0)), 100000000, 0, -268), 0, (("src/sexp_conv_grammar.mli", 22, 626, 626), ("src/sexp_conv_grammar.mli", 22, 626, 671), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 10)), 0); (("int64_sexp_grammar", 1697), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -267)], (0)), 100000000, 0, -266), 0, (("src/sexp_conv_grammar.mli", 23, 672, 672), ("src/sexp_conv_grammar.mli", 23, 672, 717), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 11)), 0); (("nativeint_sexp_grammar", 1698), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -265)], (0)), 100000000, 0, -264), 0, (("src/sexp_conv_grammar.mli", 24, 718, 718), ("src/sexp_conv_grammar.mli", 24, 718, 771), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 12)), 0); (("sexp_t_sexp_grammar", 1699), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -263)], (0)), 100000000, 0, -262), 0, (("src/sexp_conv_grammar.mli", 25, 772, 772), ("src/sexp_conv_grammar.mli", 25, 772, 819), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 13)), 0); (("ref_sexp_grammar", 1700), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [((("a")), 100000000, 0, -260)], (0)), 100000000, 0, -261), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [((("a")), 100000000, 0, -260)], (0)), 100000000, 0, -259)], (0)), 100000000, 0, -258), 0), 100000000, 0, -257), 0, (("src/sexp_conv_grammar.mli", 26, 820, 820), ("src/sexp_conv_grammar.mli", 26, 820, 885), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 14)), 0); (("lazy_t_sexp_grammar", 1701), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [((("a")), 100000000, 0, -255)], (0)), 100000000, 0, -256), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("lazy_t", 14)), [((("a")), 100000000, 0, -255)], (0)), 100000000, 0, -254)], (0)), 100000000, 0, -253), 0), 100000000, 0, -252), 0, (("src/sexp_conv_grammar.mli", 27, 886, 886), ("src/sexp_conv_grammar.mli", 27, 886, 957), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 15)), 0); (("option_sexp_grammar", 1702), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [((("a")), 100000000, 0, -250)], (0)), 100000000, 0, -251), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -250)], (0)), 100000000, 0, -249)], (0)), 100000000, 0, -248), 0), 100000000, 0, -247), 0, (("src/sexp_conv_grammar.mli", 28, 958, 958), ("src/sexp_conv_grammar.mli", 28, 958, 1029), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 16)), 0); (("list_sexp_grammar", 1703), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [((("a")), 100000000, 0, -245)], (0)), 100000000, 0, -246), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -245)], (0)), 100000000, 0, -244)], (0)), 100000000, 0, -243), 0), 100000000, 0, -242), 0, (("src/sexp_conv_grammar.mli", 29, 1030, 1030), ("src/sexp_conv_grammar.mli", 29, 1030, 1097), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 17)), 0); (("array_sexp_grammar", 1704), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [((("a")), 100000000, 0, -240)], (0)), 100000000, 0, -241), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -240)], (0)), 100000000, 0, -239)], (0)), 100000000, 0, -238), 0), 100000000, 0, -237), 0, (("src/sexp_conv_grammar.mli", 30, 1098, 1098), ("src/sexp_conv_grammar.mli", 30, 1098, 1167), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 18)), 0); (("opaque_sexp_grammar", 1705), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [((("a")), 100000000, 0, -236)], (0)), 100000000, 0, -235), 0, (("src/sexp_conv_grammar.mli", 31, 1168, 1168), ("src/sexp_conv_grammar.mli", 31, 1168, 1211), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 19)), 0); (("fun_sexp_grammar", 1706), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [((("a")), 100000000, 0, -234)], (0)), 100000000, 0, -233), 0, (("src/sexp_conv_grammar.mli", 32, 1212, 1212), ("src/sexp_conv_grammar.mli", 32, 1212, 1252), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 20)), 0); (("sexp_of_exn", 1707), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -232), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -231), 0), 100000000, 0, -230), 0, (("src/sexp_conv.mli", 252, 9862, 9862), ("src/sexp_conv.mli", 252, 9862, 9893), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 48)), 0); (("printexc_prefer_sexp", 1708), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -229), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -228), 0), 100000000, 0, -227), 0, (("src/sexp_conv.mli", 262, 10332, 10332), ("src/sexp_conv.mli", 262, 10332, 10372), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 49)), 0); (("sexp_of_exn_opt", 1709), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -226), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -225)], (0)), 100000000, 0, -224), 0), 100000000, 0, -223), 0, (("src/sexp_conv.mli", 266, 10511, 10511), ("src/sexp_conv.mli", 266, 10511, 10553), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 50)), 0); Tag3 (("Exn_converter", 1710), 0, (Tag3 (Tag1 ((Tag2 ("Sexplib0__Sexp_conv")), "Exn_converter")), 0, (("src/sexp_conv.mli", 268, 10555, 10555), ("src/sexp_conv.mli", 284, 10999, 11002), 0), Tag1 ("Sexplib0__Sexp_conv", 54)), 0, 0); (("ignore", 1711), ((Tag1 (0, ((0), 100000000, 0, -222), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -221), 0), 100000000, 0, -220), (("%ignore", 1, 1, "", [0], 0)), (("src/sexp_conv.mli", 289, 11045, 11045), ("src/sexp_conv.mli", 289, 11045, 11084), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 55)), 0); (("=", 1712), ((Tag1 (0, ((("a")), 100000000, 0, -219), (Tag1 (0, ((("a")), 100000000, 0, -219), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -218), 0), 100000000, 0, -217), 0), 100000000, 0, -216), (("%equal", 2, 1, "", [0; 0], 0)), (("src/sexp_conv.mli", 290, 11085, 11085), ("src/sexp_conv.mli", 290, 11085, 11129), 0), 0, Tag1 ("Sexplib0__Sexp_conv", 56)), 0); (("hash_fold_nativeint", 1713), ((Tag3 (Tag1 ((Tag2 ("Base__Hash")), "folder"), [(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -215)], (0)), 100000000, 0, -214), 0, (("src/hash_intf.ml", 130, 4715, 4719), ("src/hash_intf.ml", 133, 4798, 4836), 0), 0, Tag1 ("Base__Hash_intf", 17)), 0); (("hash_fold_int64", 1714), ((Tag3 (Tag1 ((Tag2 ("Base__Hash")), "folder"), [(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -213)], (0)), 100000000, 0, -212), 0, (("src/hash_intf.ml", 130, 4715, 4719), ("src/hash_intf.ml", 133, 4798, 4836), 0), 0, Tag1 ("Base__Hash_intf", 18)), 0); (("hash_fold_int32", 1715), ((Tag3 (Tag1 ((Tag2 ("Base__Hash")), "folder"), [(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -211)], (0)), 100000000, 0, -210), 0, (("src/hash_intf.ml", 130, 4715, 4719), ("src/hash_intf.ml", 133, 4798, 4836), 0), 0, Tag1 ("Base__Hash_intf", 19)), 0); (("hash_fold_char", 1716), ((Tag3 (Tag1 ((Tag2 ("Base__Hash")), "folder"), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -209)], (0)), 100000000, 0, -208), 0, (("src/hash_intf.ml", 130, 4715, 4719), ("src/hash_intf.ml", 133, 4798, 4836), 0), 0, Tag1 ("Base__Hash_intf", 20)), 0); (("hash_fold_int", 1717), ((Tag3 (Tag1 ((Tag2 ("Base__Hash")), "folder"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -207)], (0)), 100000000, 0, -206), 0, (("src/hash_intf.ml", 130, 4715, 4719), ("src/hash_intf.ml", 133, 4798, 4836), 0), 0, Tag1 ("Base__Hash_intf", 21)), 0); (("hash_fold_bool", 1718), ((Tag3 (Tag1 ((Tag2 ("Base__Hash")), "folder"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -205)], (0)), 100000000, 0, -204), 0, (("src/hash_intf.ml", 130, 4715, 4719), ("src/hash_intf.ml", 133, 4798, 4836), 0), 0, Tag1 ("Base__Hash_intf", 22)), 0); (("hash_fold_string", 1719), ((Tag3 (Tag1 ((Tag2 ("Base__Hash")), "folder"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -203)], (0)), 100000000, 0, -202), 0, (("src/hash_intf.ml", 130, 4715, 4719), ("src/hash_intf.ml", 133, 4798, 4836), 0), 0, Tag1 ("Base__Hash_intf", 23)), 0); (("hash_fold_float", 1720), ((Tag3 (Tag1 ((Tag2 ("Base__Hash")), "folder"), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -201)], (0)), 100000000, 0, -200), 0, (("src/hash_intf.ml", 130, 4715, 4719), ("src/hash_intf.ml", 133, 4798, 4836), 0), 0, Tag1 ("Base__Hash_intf", 24)), 0); (("hash_fold_unit", 1721), ((Tag3 (Tag1 ((Tag2 ("Base__Hash")), "folder"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -199)], (0)), 100000000, 0, -198), 0, (("src/hash_intf.ml", 130, 4715, 4719), ("src/hash_intf.ml", 133, 4798, 4836), 0), 0, Tag1 ("Base__Hash_intf", 25)), 0); (("hash_fold_option", 1722), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Hash")), "folder"), [((("a")), 100000000, 0, -196)], (0)), 100000000, 0, -197), (Tag3 (Tag1 ((Tag2 ("Base__Hash")), "folder"), [(Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -196)], (0)), 100000000, 0, -195)], (0)), 100000000, 0, -194), 0), 100000000, 0, -193), 0, (("src/hash_intf.ml", 130, 4715, 4719), ("src/hash_intf.ml", 133, 4798, 4836), 0), 0, Tag1 ("Base__Hash_intf", 26)), 0); (("hash_fold_list", 1723), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Hash")), "folder"), [((("a")), 100000000, 0, -191)], (0)), 100000000, 0, -192), (Tag3 (Tag1 ((Tag2 ("Base__Hash")), "folder"), [(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -191)], (0)), 100000000, 0, -190)], (0)), 100000000, 0, -189), 0), 100000000, 0, -188), 0, (("src/hash_intf.ml", 130, 4715, 4719), ("src/hash_intf.ml", 133, 4798, 4836), 0), 0, Tag1 ("Base__Hash_intf", 27)), 0); (("hash_fold_lazy_t", 1724), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Hash")), "folder"), [((("a")), 100000000, 0, -186)], (0)), 100000000, 0, -187), (Tag3 (Tag1 ((Tag2 ("Base__Hash")), "folder"), [(Tag3 ((Tag3 ("lazy_t", 14)), [((("a")), 100000000, 0, -186)], (0)), 100000000, 0, -185)], (0)), 100000000, 0, -184), 0), 100000000, 0, -183), 0, (("src/hash_intf.ml", 130, 4715, 4719), ("src/hash_intf.ml", 133, 4798, 4836), 0), 0, Tag1 ("Base__Hash_intf", 28)), 0); (("hash_fold_ref_frozen", 1725), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Hash")), "folder"), [((("a")), 100000000, 0, -181)], (0)), 100000000, 0, -182), (Tag3 (Tag1 ((Tag2 ("Base__Hash")), "folder"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import0"), "ref"), [((("a")), 100000000, 0, -181)], (0)), 100000000, 0, -180)], (0)), 100000000, 0, -179), 0), 100000000, 0, -178), 0, (("src/hash_intf.ml", 130, 4715, 4719), ("src/hash_intf.ml", 133, 4798, 4836), 0), 0, Tag1 ("Base__Hash_intf", 29)), 0); (("hash_fold_array_frozen", 1726), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Hash")), "folder"), [((("a")), 100000000, 0, -176)], (0)), 100000000, 0, -177), (Tag3 (Tag1 ((Tag2 ("Base__Hash")), "folder"), [(Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -176)], (0)), 100000000, 0, -175)], (0)), 100000000, 0, -174), 0), 100000000, 0, -173), 0, (("src/hash_intf.ml", 130, 4715, 4719), ("src/hash_intf.ml", 133, 4798, 4836), 0), 0, Tag1 ("Base__Hash_intf", 30)), 0); (("hash_nativeint", 1727), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -172), (Tag3 (Tag1 ((Tag2 ("Base__Hash")), "hash_value"), 0, (0)), 100000000, 0, -171), 0), 100000000, 0, -170), 0, (("src/hash_intf.ml", 130, 4715, 4719), ("src/hash_intf.ml", 133, 4798, 4836), 0), 0, Tag1 ("Base__Hash_intf", 33)), 0); (("hash_int64", 1728), ((Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -169), (Tag3 (Tag1 ((Tag2 ("Base__Hash")), "hash_value"), 0, (0)), 100000000, 0, -168), 0), 100000000, 0, -167), 0, (("src/hash_intf.ml", 130, 4715, 4719), ("src/hash_intf.ml", 133, 4798, 4836), 0), 0, Tag1 ("Base__Hash_intf", 34)), 0); (("hash_int32", 1729), ((Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -166), (Tag3 (Tag1 ((Tag2 ("Base__Hash")), "hash_value"), 0, (0)), 100000000, 0, -165), 0), 100000000, 0, -164), 0, (("src/hash_intf.ml", 130, 4715, 4719), ("src/hash_intf.ml", 133, 4798, 4836), 0), 0, Tag1 ("Base__Hash_intf", 35)), 0); (("hash_char", 1730), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -163), (Tag3 (Tag1 ((Tag2 ("Base__Hash")), "hash_value"), 0, (0)), 100000000, 0, -162), 0), 100000000, 0, -161), 0, (("src/hash_intf.ml", 130, 4715, 4719), ("src/hash_intf.ml", 133, 4798, 4836), 0), 0, Tag1 ("Base__Hash_intf", 36)), 0); (("hash_int", 1731), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -160), (Tag3 (Tag1 ((Tag2 ("Base__Hash")), "hash_value"), 0, (0)), 100000000, 0, -159), 0), 100000000, 0, -158), 0, (("src/hash_intf.ml", 130, 4715, 4719), ("src/hash_intf.ml", 133, 4798, 4836), 0), 0, Tag1 ("Base__Hash_intf", 37)), 0); (("hash_bool", 1732), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -157), (Tag3 (Tag1 ((Tag2 ("Base__Hash")), "hash_value"), 0, (0)), 100000000, 0, -156), 0), 100000000, 0, -155), 0, (("src/hash_intf.ml", 130, 4715, 4719), ("src/hash_intf.ml", 133, 4798, 4836), 0), 0, Tag1 ("Base__Hash_intf", 38)), 0); (("hash_string", 1733), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -154), (Tag3 (Tag1 ((Tag2 ("Base__Hash")), "hash_value"), 0, (0)), 100000000, 0, -153), 0), 100000000, 0, -152), 0, (("src/hash_intf.ml", 130, 4715, 4719), ("src/hash_intf.ml", 133, 4798, 4836), 0), 0, Tag1 ("Base__Hash_intf", 39)), 0); (("hash_float", 1734), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -151), (Tag3 (Tag1 ((Tag2 ("Base__Hash")), "hash_value"), 0, (0)), 100000000, 0, -150), 0), 100000000, 0, -149), 0, (("src/hash_intf.ml", 130, 4715, 4719), ("src/hash_intf.ml", 133, 4798, 4836), 0), 0, Tag1 ("Base__Hash_intf", 40)), 0); (("hash_unit", 1735), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -148), (Tag3 (Tag1 ((Tag2 ("Base__Hash")), "hash_value"), 0, (0)), 100000000, 0, -147), 0), 100000000, 0, -146), 0, (("src/hash_intf.ml", 130, 4715, 4719), ("src/hash_intf.ml", 133, 4798, 4836), 0), 0, Tag1 ("Base__Hash_intf", 41)), 0); (("compare_bool", 1736), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -145)], (0)), 100000000, 0, -144), 0, (("src/ppx_compare_lib.mli", 65, 1187, 1189), ("src/ppx_compare_lib.mli", 65, 1187, 1220), 0), 0, Tag1 ("Base__Ppx_compare_lib", 30)), 0); (("compare_char", 1737), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -143)], (0)), 100000000, 0, -142), 0, (("src/ppx_compare_lib.mli", 66, 1221, 1223), ("src/ppx_compare_lib.mli", 66, 1221, 1254), 0), 0, Tag1 ("Base__Ppx_compare_lib", 31)), 0); (("compare_float", 1738), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -141)], (0)), 100000000, 0, -140), 0, (("src/ppx_compare_lib.mli", 67, 1255, 1257), ("src/ppx_compare_lib.mli", 67, 1255, 1290), 0), 0, Tag1 ("Base__Ppx_compare_lib", 32)), 0); (("compare_int", 1739), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -139)], (0)), 100000000, 0, -138), 0, (("src/ppx_compare_lib.mli", 68, 1291, 1293), ("src/ppx_compare_lib.mli", 68, 1291, 1322), 0), 0, Tag1 ("Base__Ppx_compare_lib", 33)), 0); (("compare_int32", 1740), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -137)], (0)), 100000000, 0, -136), 0, (("src/ppx_compare_lib.mli", 69, 1323, 1325), ("src/ppx_compare_lib.mli", 69, 1323, 1358), 0), 0, Tag1 ("Base__Ppx_compare_lib", 34)), 0); (("compare_int64", 1741), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -135)], (0)), 100000000, 0, -134), 0, (("src/ppx_compare_lib.mli", 70, 1359, 1361), ("src/ppx_compare_lib.mli", 70, 1359, 1394), 0), 0, Tag1 ("Base__Ppx_compare_lib", 35)), 0); (("compare_nativeint", 1742), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -133)], (0)), 100000000, 0, -132), 0, (("src/ppx_compare_lib.mli", 71, 1395, 1397), ("src/ppx_compare_lib.mli", 71, 1395, 1438), 0), 0, Tag1 ("Base__Ppx_compare_lib", 36)), 0); (("compare_string", 1743), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -131)], (0)), 100000000, 0, -130), 0, (("src/ppx_compare_lib.mli", 72, 1439, 1441), ("src/ppx_compare_lib.mli", 72, 1439, 1476), 0), 0, Tag1 ("Base__Ppx_compare_lib", 37)), 0); (("compare_unit", 1744), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -129)], (0)), 100000000, 0, -128), 0, (("src/ppx_compare_lib.mli", 73, 1477, 1479), ("src/ppx_compare_lib.mli", 73, 1477, 1510), 0), 0, Tag1 ("Base__Ppx_compare_lib", 38)), 0); (("compare_array", 1745), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [((("a")), 100000000, 0, -126)], (0)), 100000000, 0, -127), (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -126)], (0)), 100000000, 0, -125)], (0)), 100000000, 0, -124), 0), 100000000, 0, -123), 0, (("src/ppx_compare_lib.mli", 74, 1511, 1513), ("src/ppx_compare_lib.mli", 74, 1511, 1563), 0), 0, Tag1 ("Base__Ppx_compare_lib", 39)), 0); (("compare_list", 1746), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [((("a")), 100000000, 0, -121)], (0)), 100000000, 0, -122), (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -121)], (0)), 100000000, 0, -120)], (0)), 100000000, 0, -119), 0), 100000000, 0, -118), 0, (("src/ppx_compare_lib.mli", 75, 1564, 1566), ("src/ppx_compare_lib.mli", 75, 1564, 1614), 0), 0, Tag1 ("Base__Ppx_compare_lib", 40)), 0); (("compare_option", 1747), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [((("a")), 100000000, 0, -116)], (0)), 100000000, 0, -117), (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -116)], (0)), 100000000, 0, -115)], (0)), 100000000, 0, -114), 0), 100000000, 0, -113), 0, (("src/ppx_compare_lib.mli", 76, 1615, 1617), ("src/ppx_compare_lib.mli", 76, 1615, 1669), 0), 0, Tag1 ("Base__Ppx_compare_lib", 41)), 0); (("compare_ref", 1748), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [((("a")), 100000000, 0, -111)], (0)), 100000000, 0, -112), (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [((("a")), 100000000, 0, -111)], (0)), 100000000, 0, -110)], (0)), 100000000, 0, -109), 0), 100000000, 0, -108), 0, (("src/ppx_compare_lib.mli", 77, 1670, 1672), ("src/ppx_compare_lib.mli", 77, 1670, 1718), 0), 0, Tag1 ("Base__Ppx_compare_lib", 42)), 0); (("equal_bool", 1749), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "equal"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -107)], (0)), 100000000, 0, -106), 0, (("src/ppx_compare_lib.mli", 78, 1719, 1721), ("src/ppx_compare_lib.mli", 78, 1719, 1748), 0), 0, Tag1 ("Base__Ppx_compare_lib", 43)), 0); (("equal_char", 1750), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "equal"), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -105)], (0)), 100000000, 0, -104), 0, (("src/ppx_compare_lib.mli", 79, 1749, 1751), ("src/ppx_compare_lib.mli", 79, 1749, 1778), 0), 0, Tag1 ("Base__Ppx_compare_lib", 44)), 0); (("equal_float", 1751), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "equal"), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -103)], (0)), 100000000, 0, -102), 0, (("src/ppx_compare_lib.mli", 80, 1779, 1781), ("src/ppx_compare_lib.mli", 80, 1779, 1810), 0), 0, Tag1 ("Base__Ppx_compare_lib", 45)), 0); (("equal_int", 1752), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "equal"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -101)], (0)), 100000000, 0, -100), 0, (("src/ppx_compare_lib.mli", 81, 1811, 1813), ("src/ppx_compare_lib.mli", 81, 1811, 1838), 0), 0, Tag1 ("Base__Ppx_compare_lib", 46)), 0); (("equal_int32", 1753), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "equal"), [(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -99)], (0)), 100000000, 0, -98), 0, (("src/ppx_compare_lib.mli", 82, 1839, 1841), ("src/ppx_compare_lib.mli", 82, 1839, 1870), 0), 0, Tag1 ("Base__Ppx_compare_lib", 47)), 0); (("equal_int64", 1754), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "equal"), [(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -97)], (0)), 100000000, 0, -96), 0, (("src/ppx_compare_lib.mli", 83, 1871, 1873), ("src/ppx_compare_lib.mli", 83, 1871, 1902), 0), 0, Tag1 ("Base__Ppx_compare_lib", 48)), 0); (("equal_nativeint", 1755), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "equal"), [(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -95)], (0)), 100000000, 0, -94), 0, (("src/ppx_compare_lib.mli", 84, 1903, 1905), ("src/ppx_compare_lib.mli", 84, 1903, 1942), 0), 0, Tag1 ("Base__Ppx_compare_lib", 49)), 0); (("equal_string", 1756), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "equal"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -93)], (0)), 100000000, 0, -92), 0, (("src/ppx_compare_lib.mli", 85, 1943, 1945), ("src/ppx_compare_lib.mli", 85, 1943, 1976), 0), 0, Tag1 ("Base__Ppx_compare_lib", 50)), 0); (("equal_unit", 1757), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "equal"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -91)], (0)), 100000000, 0, -90), 0, (("src/ppx_compare_lib.mli", 86, 1977, 1979), ("src/ppx_compare_lib.mli", 86, 1977, 2006), 0), 0, Tag1 ("Base__Ppx_compare_lib", 51)), 0); (("equal_array", 1758), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "equal"), [((("a")), 100000000, 0, -88)], (0)), 100000000, 0, -89), (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "equal"), [(Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -88)], (0)), 100000000, 0, -87)], (0)), 100000000, 0, -86), 0), 100000000, 0, -85), 0, (("src/ppx_compare_lib.mli", 87, 2007, 2009), ("src/ppx_compare_lib.mli", 87, 2007, 2053), 0), 0, Tag1 ("Base__Ppx_compare_lib", 52)), 0); (("equal_list", 1759), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "equal"), [((("a")), 100000000, 0, -83)], (0)), 100000000, 0, -84), (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "equal"), [(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -83)], (0)), 100000000, 0, -82)], (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0, (("src/ppx_compare_lib.mli", 88, 2054, 2056), ("src/ppx_compare_lib.mli", 88, 2054, 2098), 0), 0, Tag1 ("Base__Ppx_compare_lib", 53)), 0); (("equal_option", 1760), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "equal"), [((("a")), 100000000, 0, -78)], (0)), 100000000, 0, -79), (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "equal"), [(Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -78)], (0)), 100000000, 0, -77)], (0)), 100000000, 0, -76), 0), 100000000, 0, -75), 0, (("src/ppx_compare_lib.mli", 89, 2099, 2101), ("src/ppx_compare_lib.mli", 89, 2099, 2147), 0), 0, Tag1 ("Base__Ppx_compare_lib", 54)), 0); (("equal_ref", 1761), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "equal"), [((("a")), 100000000, 0, -73)], (0)), 100000000, 0, -74), (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "equal"), [(Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [((("a")), 100000000, 0, -73)], (0)), 100000000, 0, -72)], (0)), 100000000, 0, -71), 0), 100000000, 0, -70), 0, (("src/ppx_compare_lib.mli", 90, 2148, 2150), ("src/ppx_compare_lib.mli", 90, 2148, 2190), 0), 0, Tag1 ("Base__Ppx_compare_lib", 55)), 0); (("globalize_bool", 1762), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -69), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -68), 0), 100000000, 0, -67), 0, (("src/globalize.mli", 12, 571, 571), ("src/globalize.mli", 12, 571, 614), 0), 0, Tag1 ("Base__Globalize", 0)), 0); (("globalize_char", 1763), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -66), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -65), 0), 100000000, 0, -64), 0, (("src/globalize.mli", 13, 615, 615), ("src/globalize.mli", 13, 615, 658), 0), 0, Tag1 ("Base__Globalize", 1)), 0); (("globalize_float", 1764), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -63), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("src/globalize.mli", 14, 659, 659), ("src/globalize.mli", 14, 659, 705), 0), 0, Tag1 ("Base__Globalize", 2)), 0); (("globalize_int", 1765), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -60), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("src/globalize.mli", 15, 706, 706), ("src/globalize.mli", 15, 706, 746), 0), 0, Tag1 ("Base__Globalize", 3)), 0); (("globalize_int32", 1766), ((Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -57), (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -56), 0), 100000000, 0, -55), 0, (("src/globalize.mli", 16, 747, 747), ("src/globalize.mli", 16, 747, 793), 0), 0, Tag1 ("Base__Globalize", 4)), 0); (("globalize_int64", 1767), ((Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -54), (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -53), 0), 100000000, 0, -52), 0, (("src/globalize.mli", 17, 794, 794), ("src/globalize.mli", 17, 794, 840), 0), 0, Tag1 ("Base__Globalize", 5)), 0); (("globalize_nativeint", 1768), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -51), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0, (("src/globalize.mli", 18, 841, 841), ("src/globalize.mli", 18, 841, 899), 0), 0, Tag1 ("Base__Globalize", 6)), 0); (("globalize_bytes", 1769), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -48), (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("src/globalize.mli", 19, 900, 900), ("src/globalize.mli", 19, 900, 946), 0), 0, Tag1 ("Base__Globalize", 7)), 0); (("globalize_string", 1770), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -45), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("src/globalize.mli", 20, 947, 947), ("src/globalize.mli", 20, 947, 996), 0), 0, Tag1 ("Base__Globalize", 8)), 0); (("globalize_unit", 1771), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -42), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("src/globalize.mli", 21, 997, 997), ("src/globalize.mli", 21, 997, 1040), 0), 0, Tag1 ("Base__Globalize", 9)), 0); (("globalize_array", 1772), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -36), ((("b")), 100000000, 0, -39), 0), 100000000, 0, -38), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -36)], (0)), 100000000, 0, -37), (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -36)], (0)), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0, (("src/globalize.mli", 22, 1041, 1041), ("src/globalize.mli", 22, 1041, 1117), 0), 0, Tag1 ("Base__Globalize", 10)), 0); (("globalize_list", 1773), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -31), ((("b")), 100000000, 0, -29), 0), 100000000, 0, -32), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -31)], (0)), 100000000, 0, -30), (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -29)], (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("src/globalize.mli", 23, 1118, 1118), ("src/globalize.mli", 23, 1118, 1191), 0), 0, Tag1 ("Base__Globalize", 11)), 0); (("globalize_option", 1774), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -24), ((("b")), 100000000, 0, -22), 0), 100000000, 0, -25), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -24)], (0)), 100000000, 0, -23), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -22)], (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("src/globalize.mli", 24, 1192, 1192), ("src/globalize.mli", 24, 1192, 1271), 0), 0, Tag1 ("Base__Globalize", 12)), 0); (("globalize_result", 1775), ((Tag1 (0, (Tag1 (0, ((("ok")), 100000000, 0, -14), ((("ok")), 100000000, 0, -14), 0), 100000000, 0, -18), (Tag1 (0, (Tag1 (0, ((("err")), 100000000, 0, -15), ((("err")), 100000000, 0, -15), 0), 100000000, 0, -17), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("ok")), 100000000, 0, -14); ((("err")), 100000000, 0, -15)], (0)), 100000000, 0, -16), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("ok")), 100000000, 0, -14); ((("err")), 100000000, 0, -15)], (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("src/globalize.mli", 26, 1273, 1273), ("src/globalize.mli", 30, 1404, 1427), 0), 0, Tag1 ("Base__Globalize", 13)), 0); (("globalize_ref", 1776), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -6), ((("b")), 100000000, 0, -9), 0), 100000000, 0, -8), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [((("a")), 100000000, 0, -6)], (0)), 100000000, 0, -7), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [((("a")), 100000000, 0, -6)], (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0, (("src/globalize.mli", 32, 1429, 1429), ("src/globalize.mli", 32, 1429, 1499), 0), 0, Tag1 ("Base__Globalize", 14)), 0); Tag2 (("Not_found_s", 1777), ((Tag3 ("exn", 7)), 0, ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Base__Import", 0)), 2, 0)], "Base__Import", [("Base__Import", ("\014\187\247\141\187\181\142g\176:s_,\181\219\209")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__MoreLabels", ("\248\232\248\254`<\230\241\161U\193U\1466J\238")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shadow_stdlib", ("\219zi\164\203\158e)\232\221\196\168\138x\142\018")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Base_internalhash_types", ("0\148#2\226\223\018\135\173>!\020\237\017\255\149")); ("Base__Sexp", ("\154\187\171&\209=\153[\236\250!U\174`\190T")); ("Base__Ppx_hash_lib", ("\199\141\178\193\006\209L\007^\020(\131\224sn8")); ("Base__Ppx_compare_lib", ("\243\186~\233\228\199Ah\181.\223\004e\231\129S")); ("Base__Poly0", ("\230;\143\234\255.H\132KOe7\155\\\023f")); ("Base__Import0", ("\156\129U\197Y[\\\153\017Ho\203\173\204\220\020")); ("Base__Hash_intf", ("h\004P\218\1531G\127\212\208A\024\140\164iq")); ("Base__Hash", ("\206Rc\194\234{s3\248\165\024\162\203{\206\206")); ("Base__Globalize", ("<\243w~.\180\196t\159\193\174[\227\139\215G")); ("Base__Bool0", ("\177f\254p\023\143&\239\020\136\206\242~\018F\251")); ("Base__", ("p\252\007\139\128\163W\025+\0225\001\246|P\158"))], [(0)])
exception Not_found_s of Sexplib0.Sexp.t
