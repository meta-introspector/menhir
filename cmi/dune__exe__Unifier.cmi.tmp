module type STRUCTURE =
  sig
    type 'a structure
    val map : ('a -> 'b) -> 'a structure -> 'b structure
    val iter : ('a -> unit) -> 'a structure -> unit
    exception Iter2
    val iter2 : ('a -> 'b -> unit) -> 'a structure -> 'b structure -> unit
  end
module Make :
  functor (S : STRUCTURE) ->
    sig
      type variable
      val fresh : variable S.structure option -> variable
      val structure : variable -> variable S.structure option
      exception Unify of variable * variable
      exception Occurs of variable * variable
      val unify : variable -> variable -> unit
      type term = TVar of int | TNode of term S.structure
      val decode : variable -> term("DEBUG:rule", [Tag4 (("STRUCTURE", 420), ((Tag1 ([Tag1 (("structure", 423), ([((("a")), 100000000, 0, -27)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/Unifier.mli", 25, 1407, 1409), ("src/Unifier.mli", 25, 1407, 1426), 0), 0, 0, 0, Tag1 ("Dune__exe__Unifier", 0)), 1, 0); (("map", 424), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -25), ((("b")), 100000000, 0, -23), 0), 100000000, 0, -26), (Tag1 (0, (Tag3 ((("structure", 423)), [((("a")), 100000000, 0, -25)], (0)), 100000000, 0, -24), (Tag3 ((("structure", 423)), [((("b")), 100000000, 0, -23)], (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("src/Unifier.mli", 27, 1428, 1430), ("src/Unifier.mli", 27, 1428, 1481), 0), 0, Tag1 ("Dune__exe__Unifier", 1)), 0); (("iter", 425), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -17), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), (Tag1 (0, (Tag3 ((("structure", 423)), [((("a")), 100000000, 0, -17)], (0)), 100000000, 0, -16), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("src/Unifier.mli", 29, 1483, 1485), ("src/Unifier.mli", 29, 1483, 1531), 0), 0, Tag1 ("Dune__exe__Unifier", 2)), 0); Tag2 (("Iter2", 426), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Dune__exe__Unifier", 3)), 2, 0); (("iter2", 427), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -9), (Tag1 (0, ((("b")), 100000000, 0, -7), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), (Tag1 (0, (Tag3 ((("structure", 423)), [((("a")), 100000000, 0, -9)], (0)), 100000000, 0, -8), (Tag1 (0, (Tag3 ((("structure", 423)), [((("b")), 100000000, 0, -7)], (0)), 100000000, 0, -6), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/Unifier.mli", 33, 1606, 1608), ("src/Unifier.mli", 33, 1606, 1677), 0), 0, Tag1 ("Dune__exe__Unifier", 4)), 0)])), 0, (("src/Unifier.mli", 21, 1264, 1264), ("src/Unifier.mli", 35, 1679, 1682), 0), Tag1 ("Dune__exe__Unifier", 5)), 0); Tag3 (("Make", 421), 0, (Tag2 (((("S", 422)), ((("STRUCTURE", 420)))), Tag1 ([Tag1 (("variable", 428), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Unifier.mli", 45, 1865, 1867), ("src/Unifier.mli", 45, 1865, 1880), 0), 0, 0, 0, Tag1 ("Dune__exe__Unifier", 7)), 1, 0); (("fresh", 429), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("S", 422)), "structure"), [(Tag3 ((("variable", 428)), 0, (0)), 100000000, 0, -52)], (0)), 100000000, 0, -51)], (0)), 100000000, 0, -50), (Tag3 ((("variable", 428)), 0, (0)), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("src/Unifier.mli", 49, 1958, 1960), ("src/Unifier.mli", 49, 1958, 2010), 0), 0, Tag1 ("Dune__exe__Unifier", 8)), 0); (("structure", 430), ((Tag1 (0, (Tag3 ((("variable", 428)), 0, (0)), 100000000, 0, -47), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("S", 422)), "structure"), [(Tag3 ((("variable", 428)), 0, (0)), 100000000, 0, -46)], (0)), 100000000, 0, -45)], (0)), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("src/Unifier.mli", 53, 2094, 2096), ("src/Unifier.mli", 53, 2094, 2150), 0), 0, Tag1 ("Dune__exe__Unifier", 9)), 0); Tag2 (("Unify", 431), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((("variable", 428)), 0, (0)), 100000000, 0, -41); (Tag3 ((("variable", 428)), 0, (0)), 100000000, 0, -42)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Dune__exe__Unifier", 10)), 2, 0); Tag2 (("Occurs", 432), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((("variable", 428)), 0, (0)), 100000000, 0, -39); (Tag3 ((("variable", 428)), 0, (0)), 100000000, 0, -40)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Dune__exe__Unifier", 11)), 2, 0); (("unify", 433), ((Tag1 (0, (Tag3 ((("variable", 428)), 0, (0)), 100000000, 0, -38), (Tag1 (0, (Tag3 ((("variable", 428)), 0, (0)), 100000000, 0, -37), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("src/Unifier.mli", 61, 2415, 2417), ("src/Unifier.mli", 61, 2415, 2456), 0), 0, Tag1 ("Dune__exe__Unifier", 12)), 0); Tag1 (("term", 434), (0, 0, Tag1 ([(("TVar", 410), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -31)]), 0, (("src/Unifier.mli", 66, 2536, 2540), ("src/Unifier.mli", 66, 2536, 2553), 0), 0, Tag1 ("Dune__exe__Unifier", 14)); (("TNode", 411), ([(Tag3 (Tag1 ((("S", 422)), "structure"), [(Tag3 ((("term", 434)), 0, (0)), 100000000, 0, -33)], (0)), 100000000, 0, -32)]), 0, (("src/Unifier.mli", 67, 2591, 2595), ("src/Unifier.mli", 67, 2591, 2622), 0), 0, Tag1 ("Dune__exe__Unifier", 15))], 0), 1, 0, 0, 0, 0, 0, (("src/Unifier.mli", 65, 2522, 2524), ("src/Unifier.mli", 67, 2591, 2622), 0), 0, 0, 0, Tag1 ("Dune__exe__Unifier", 13)), 1, 0); (("decode", 435), ((Tag1 (0, (Tag3 ((("variable", 428)), 0, (0)), 100000000, 0, -30), (Tag3 ((("term", 434)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("src/Unifier.mli", 73, 2791, 2793), ("src/Unifier.mli", 73, 2791, 2821), 0), 0, Tag1 ("Dune__exe__Unifier", 16)), 0)])), 0, (("src/Unifier.mli", 41, 1786, 1786), ("src/Unifier.mli", 75, 2823, 2826), 0), Tag1 ("Dune__exe__Unifier", 17)), 0, 0)], "Dune__exe__Unifier", [("Dune__exe__Unifier", ("\007\232\142c\202\137!v\241\159\231\n\005\236\000\236")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("MenhirSdk", ("F\232\012\196l\143\145[\255\2193U\197\027\176\139")); ("Dune__exe", ("\137\000\197\175$\007]\218\141\248\172\212\146c\153\212")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

    end
