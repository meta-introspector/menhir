type t = ..
type t +=
    Info
  | Notification
  | Warning
  | Error
  | Critical
  | Em
  | Loc
  | Title
  | M
val of_string : string -> t
val to_string : t -> string
val enable : Format.formatter -> unit
val with_tag :
  t -> (Format.formatter -> 'a -> unit) -> Format.formatter -> 'a -> unit
("DEBUG:rule", [Tag1 (("t", 440), (0, 0, 1, 1, 0, 0, 0, 0, 0, (("lib/format_tags.mli", 1, 0, 0), ("lib/format_tags.mli", 1, 0, 11), 0), 0, 0, 0, Tag1 ("Format_tags", 0)), 1, 0); Tag2 (("Info", 441), ((("t", 440)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Format_tags", 1)), 0, 0); Tag2 (("Notification", 442), ((("t", 440)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Format_tags", 2)), 1, 0); Tag2 (("Warning", 443), ((("t", 440)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Format_tags", 3)), 1, 0); Tag2 (("Error", 444), ((("t", 440)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Format_tags", 4)), 1, 0); Tag2 (("Critical", 445), ((("t", 440)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Format_tags", 5)), 1, 0); Tag2 (("Em", 446), ((("t", 440)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Format_tags", 6)), 1, 0); Tag2 (("Loc", 447), ((("t", 440)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Format_tags", 7)), 1, 0); Tag2 (("Title", 448), ((("t", 440)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Format_tags", 8)), 1, 0); Tag2 (("M", 449), ((("t", 440)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Format_tags", 9)), 1, 0); (("of_string", 450), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -25), (Tag3 ((("t", 440)), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("lib/format_tags.mli", 6, 101, 101), ("lib/format_tags.mli", 6, 101, 127), 0), 0, Tag1 ("Format_tags", 10)), 0); (("to_string", 451), ((Tag1 (0, (Tag3 ((("t", 440)), 0, (0)), 100000000, 0, -22), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("lib/format_tags.mli", 7, 128, 128), ("lib/format_tags.mli", 7, 128, 154), 0), 0, Tag1 ("Format_tags", 11)), 0); (("enable", 452), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -19), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("lib/format_tags.mli", 9, 156, 156), ("lib/format_tags.mli", 9, 156, 192), 0), 0, Tag1 ("Format_tags", 12)), 0); (("with_tag", 453), ((Tag1 (0, (Tag3 ((("t", 440)), 0, (0)), 100000000, 0, -16), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -15), (Tag1 (0, ((("a")), 100000000, 0, -14), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -15), (Tag1 (0, ((("a")), 100000000, 0, -14), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("lib/format_tags.mli", 10, 193, 193), ("lib/format_tags.mli", 10, 193, 256), 0), 0, Tag1 ("Format_tags", 13)), 0); (("tagged", 454), ((Tag1 (0, (Tag3 ((("t", 440)), 0, (0)), 100000000, 0, -8), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("lib/format_tags.mli", 11, 257, 257), ("lib/format_tags.mli", 11, 257, 308), 0), 0, Tag1 ("Format_tags", 14)), 0)], "Format_tags", [("Format_tags", ("_\253\022#\247\182\213#*\189H\217\011?7\235")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val tagged : t -> Format.formatter -> string -> unit
