type t = bool = false | true
val not : bool -> bool
external ( && ) : bool -> bool -> bool = "%sequand"
external ( || ) : bool -> bool -> bool = "%sequor"
val equal : bool -> bool -> bool
val compare : bool -> bool -> int
val to_int : bool -> int
val to_float : bool -> float
val to_string : bool -> string
val seeded_hash : int -> bool -> int("DEBUG:rule", [Tag1 (("t", 282), (0, 0, Tag1 ([(("false", 270), (0), 0, (("bool.mli", 22, 1147, 1163), ("bool.mli", 22, 1147, 1168), 0), 0, Tag1 ("Stdlib__Bool", 1)); (("true", 271), (0), 0, (("bool.mli", 22, 1147, 1169), ("bool.mli", 22, 1147, 1175), 0), 0, Tag1 ("Stdlib__Bool", 2))], 0), 1, ((Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -42)), 0, 0, 0, 0, (("bool.mli", 22, 1147, 1147), ("bool.mli", 22, 1147, 1175), 0), 0, 1, 0, Tag1 ("Stdlib__Bool", 0)), 1, 0); (("not", 283), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -41), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("bool.mli", 29, 1380, 1380), ("bool.mli", 29, 1380, 1402), 0), 0, Tag1 ("Stdlib__Bool", 3)), 0); (("&&", 284), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -38), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -37), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), (("%sequand", 2, 1, "", [0; 0], 0)), (("bool.mli", 32, 1451, 1451), ("bool.mli", 32, 1451, 1502), 0), 0, Tag1 ("Stdlib__Bool", 4)), 0); (("||", 285), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -33), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -32), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), (("%sequor", 2, 1, "", [0; 0], 0)), (("bool.mli", 37, 1698, 1698), ("bool.mli", 37, 1698, 1748), 0), 0, Tag1 ("Stdlib__Bool", 5)), 0); (("equal", 286), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -27), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("bool.mli", 44, 1988, 1988), ("bool.mli", 44, 1988, 2020), 0), 0, Tag1 ("Stdlib__Bool", 6)), 0); (("compare", 287), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -23), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -22), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("bool.mli", 48, 2119, 2119), ("bool.mli", 48, 2119, 2152), 0), 0, Tag1 ("Stdlib__Bool", 7)), 0); (("to_int", 288), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -18), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("bool.mli", 54, 2280, 2280), ("bool.mli", 54, 2280, 2304), 0), 0, Tag1 ("Stdlib__Bool", 8)), 0); (("to_float", 289), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -15), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("bool.mli", 57, 2375, 2375), ("bool.mli", 57, 2375, 2403), 0), 0, Tag1 ("Stdlib__Bool", 9)), 0); (("to_string", 290), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -12), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("bool.mli", 66, 2638, 2638), ("bool.mli", 66, 2638, 2668), 0), 0, Tag1 ("Stdlib__Bool", 10)), 0); (("seeded_hash", 291), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -9), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -8), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("bool.mli", 70, 2757, 2757), ("bool.mli", 70, 2757, 2793), 0), 0, Tag1 ("Stdlib__Bool", 11)), 0); (("hash", 292), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("bool.mli", 77, 3013, 3013), ("bool.mli", 77, 3013, 3035), 0), 0, Tag1 ("Stdlib__Bool", 12)), 0)], "Stdlib__Bool", [("Stdlib__Bool", ("\201h\248\253\212\002\218u!\002\027\015_\018\211\195")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val hash : bool -> int
