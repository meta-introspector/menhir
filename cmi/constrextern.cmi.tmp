type extern_env = Names.Id.Set.t * UnivNames.universe_binders
val extern_env : Environ.env -> Evd.evar_map -> extern_env
val extern_cases_pattern :
  Names.Id.Set.t ->
  'a Glob_term.cases_pattern_g -> Constrexpr.cases_pattern_expr
val extern_glob_constr :
  extern_env -> 'a Glob_term.glob_constr_g -> Constrexpr.constr_expr
val extern_glob_type :
  ?impargs:Glob_term.binding_kind list ->
  extern_env -> 'a Glob_term.glob_constr_g -> Constrexpr.constr_expr
val extern_constr_pattern :
  Termops.names_context ->
  Evd.evar_map -> Pattern.constr_pattern -> Constrexpr.constr_expr
val extern_closed_glob :
  ?goal_concl_style:bool ->
  ?inctx:bool ->
  ?scope:Notation_term.scope_name ->
  Environ.env ->
  Evd.evar_map -> Ltac_pretype.closed_glob_constr -> Constrexpr.constr_expr
val extern_constr :
  ?inctx:bool ->
  ?scope:Notation_term.scope_name ->
  Environ.env -> Evd.evar_map -> EConstr.constr -> Constrexpr.constr_expr
val extern_constr_in_scope :
  ?inctx:bool ->
  Notation_term.scope_name ->
  Environ.env -> Evd.evar_map -> EConstr.constr -> Constrexpr.constr_expr
val extern_reference :
  ?loc:Loc.t -> Names.Id.Set.t -> Names.GlobRef.t -> Libnames.qualid
val extern_type :
  ?goal_concl_style:bool ->
  Environ.env ->
  Evd.evar_map ->
  ?impargs:Glob_term.binding_kind list ->
  EConstr.types -> Constrexpr.constr_expr
val extern_sort : Evd.evar_map -> Sorts.t -> Constrexpr.sort_expr
val extern_rel_context :
  EConstr.constr option ->
  Environ.env ->
  Evd.evar_map -> EConstr.rel_context -> Constrexpr.local_binder_expr list
val print_implicits : bool ref
val print_implicits_defensive : bool ref
val print_coercions : bool ref
val print_parentheses : bool ref
val print_universes : bool ref
val print_no_symbol : bool ref
val print_projections : bool ref
val print_raw_literal : bool ref
val set_extern_reference :
  (?loc:Loc.t -> Names.Id.Set.t -> Names.GlobRef.t -> Libnames.qualid) ->
  unit
val get_extern_reference :
  unit -> ?loc:Loc.t -> Names.Id.Set.t -> Names.GlobRef.t -> Libnames.qualid
val with_universes : ('a -> 'b) -> 'a -> 'b
val without_symbols : ('a -> 'b) -> 'a -> 'b
val with_meta_as_hole : ('a -> 'b) -> 'a -> 'b
("DEBUG:rule", [Tag1 (("extern_env", 1458), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -168); (Tag3 (Tag1 ((Tag2 ("UnivNames")), "universe_binders"), 0, (0)), 100000000, 0, -169)]), 100000000, 0, -167)), 0, 0, 0, 0, (("interp/constrextern.mli", 25, 924, 924), ("interp/constrextern.mli", 25, 924, 979), 0), 0, 0, 0, Tag1 ("Constrextern", 1)), 1, 0); (("extern_env", 1459), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -166), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -165), (Tag3 ((("extern_env", 1458)), 0, (0)), 100000000, 0, -164), 0), 100000000, 0, -163), 0), 100000000, 0, -162), 0, (("interp/constrextern.mli", 26, 980, 980), ("interp/constrextern.mli", 26, 980, 1030), 0), 0, Tag1 ("Constrextern", 2)), 0); (("extern_cases_pattern", 1460), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -161), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "cases_pattern_g"), [((("a")), 100000000, 0, -160)], (0)), 100000000, 0, -159), (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "cases_pattern_expr"), 0, (0)), 100000000, 0, -158), 0), 100000000, 0, -157), 0), 100000000, 0, -156), 0, (("interp/constrextern.mli", 28, 1032, 1032), ("interp/constrextern.mli", 28, 1032, 1111), 0), 0, Tag1 ("Constrextern", 3)), 0); (("extern_glob_constr", 1461), ((Tag1 (0, (Tag3 ((("extern_env", 1458)), 0, (0)), 100000000, 0, -155), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr_g"), [((("a")), 100000000, 0, -154)], (0)), 100000000, 0, -153), (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "constr_expr"), 0, (0)), 100000000, 0, -152), 0), 100000000, 0, -151), 0), 100000000, 0, -150), 0, (("interp/constrextern.mli", 29, 1112, 1112), ("interp/constrextern.mli", 29, 1112, 1182), 0), 0, Tag1 ("Constrextern", 4)), 0); (("extern_glob_type", 1462), ((Tag1 (Tag1 ("impargs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Glob_term")), "binding_kind"), 0, (0)), 100000000, 0, -149)], (0)), 100000000, 0, -148)], (0)), 100000000, 0, -147), (Tag1 (0, (Tag3 ((("extern_env", 1458)), 0, (0)), 100000000, 0, -146), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr_g"), [((("a")), 100000000, 0, -145)], (0)), 100000000, 0, -144), (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "constr_expr"), 0, (0)), 100000000, 0, -143), 0), 100000000, 0, -142), 0), 100000000, 0, -141), 0), 100000000, 0, -140), 0, (("interp/constrextern.mli", 30, 1183, 1183), ("interp/constrextern.mli", 30, 1183, 1291), 0), 0, Tag1 ("Constrextern", 5)), 0); (("extern_constr_pattern", 1463), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Termops")), "names_context"), 0, (0)), 100000000, 0, -139), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -138), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Pattern")), "constr_pattern"), 0, (0)), 100000000, 0, -137), (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "constr_expr"), 0, (0)), 100000000, 0, -136), 0), 100000000, 0, -135), 0), 100000000, 0, -134), 0), 100000000, 0, -133), 0, (("interp/constrextern.mli", 31, 1292, 1292), ("interp/constrextern.mli", 32, 1353, 1384), 0), 0, Tag1 ("Constrextern", 6)), 0); (("extern_closed_glob", 1464), ((Tag1 (Tag1 ("goal_concl_style"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -132)], (0)), 100000000, 0, -131), (Tag1 (Tag1 ("inctx"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -130)], (0)), 100000000, 0, -129), (Tag1 (Tag1 ("scope"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Notation_term")), "scope_name"), 0, (0)), 100000000, 0, -128)], (0)), 100000000, 0, -127), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -126), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -125), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ltac_pretype")), "closed_glob_constr"), 0, (0)), 100000000, 0, -124), (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "constr_expr"), 0, (0)), 100000000, 0, -123), 0), 100000000, 0, -122), 0), 100000000, 0, -121), 0), 100000000, 0, -120), 0), 100000000, 0, -119), 0), 100000000, 0, -118), 0), 100000000, 0, -117), 0, (("interp/constrextern.mli", 33, 1385, 1385), ("interp/constrextern.mli", 34, 1472, 1530), 0), 0, Tag1 ("Constrextern", 7)), 0); (("extern_constr", 1465), ((Tag1 (Tag1 ("inctx"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -116)], (0)), 100000000, 0, -115), (Tag1 (Tag1 ("scope"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Notation_term")), "scope_name"), 0, (0)), 100000000, 0, -114)], (0)), 100000000, 0, -113), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -112), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -111), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -110), (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "constr_expr"), 0, (0)), 100000000, 0, -109), 0), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), 0), 100000000, 0, -105), 0), 100000000, 0, -104), 0, (("interp/constrextern.mli", 42, 1778, 1778), ("interp/constrextern.mli", 43, 1834, 1880), 0), 0, Tag1 ("Constrextern", 8)), 0); (("extern_constr_in_scope", 1466), ((Tag1 (Tag1 ("inctx"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -103)], (0)), 100000000, 0, -102), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Notation_term")), "scope_name"), 0, (0)), 100000000, 0, -101), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -100), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -99), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -98), (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "constr_expr"), 0, (0)), 100000000, 0, -97), 0), 100000000, 0, -96), 0), 100000000, 0, -95), 0), 100000000, 0, -94), 0), 100000000, 0, -93), 0), 100000000, 0, -92), 0, (("interp/constrextern.mli", 44, 1881, 1881), ("interp/constrextern.mli", 45, 1939, 1985), 0), 0, Tag1 ("Constrextern", 9)), 0); (("extern_reference", 1467), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -91)], (0)), 100000000, 0, -90), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -89), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -88), (Tag3 (Tag1 ((Tag2 ("Libnames")), "qualid"), 0, (0)), 100000000, 0, -87), 0), 100000000, 0, -86), 0), 100000000, 0, -85), 0), 100000000, 0, -84), 0, (("interp/constrextern.mli", 46, 1986, 1986), ("interp/constrextern.mli", 46, 1986, 2054), 0), 0, Tag1 ("Constrextern", 11)), 0); (("extern_type", 1468), ((Tag1 (Tag1 ("goal_concl_style"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -83)], (0)), 100000000, 0, -82), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -81), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -80), (Tag1 (Tag1 ("impargs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Glob_term")), "binding_kind"), 0, (0)), 100000000, 0, -79)], (0)), 100000000, 0, -78)], (0)), 100000000, 0, -77), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -76), (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "constr_expr"), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), 0), 100000000, 0, -73), 0), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), 0, (("interp/constrextern.mli", 47, 2055, 2055), ("interp/constrextern.mli", 47, 2055, 2182), 0), 0, Tag1 ("Constrextern", 12)), 0); (("extern_sort", 1469), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -69), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sorts")), "t"), 0, (0)), 100000000, 0, -68), (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "sort_expr"), 0, (0)), 100000000, 0, -67), 0), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("interp/constrextern.mli", 48, 2183, 2183), ("interp/constrextern.mli", 48, 2183, 2237), 0), 0, Tag1 ("Constrextern", 13)), 0); (("extern_rel_context", 1470), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -64)], (0)), 100000000, 0, -63), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -62), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -61), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "rel_context"), 0, (0)), 100000000, 0, -60), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Constrexpr")), "local_binder_expr"), 0, (0)), 100000000, 0, -59)], (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), 0), 100000000, 0, -55), 0), 100000000, 0, -54), 0, (("interp/constrextern.mli", 49, 2238, 2238), ("interp/constrextern.mli", 50, 2303, 2342), 0), 0, Tag1 ("Constrextern", 14)), 0); (("print_implicits", 1471), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -53)], (0)), 100000000, 0, -52), 0, (("interp/constrextern.mli", 53, 2368, 2368), ("interp/constrextern.mli", 53, 2368, 2398), 0), 0, Tag1 ("Constrextern", 15)), 0); (("print_implicits_defensive", 1472), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -51)], (0)), 100000000, 0, -50), 0, (("interp/constrextern.mli", 54, 2399, 2399), ("interp/constrextern.mli", 54, 2399, 2439), 0), 0, Tag1 ("Constrextern", 16)), 0); (("print_coercions", 1473), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -49)], (0)), 100000000, 0, -48), 0, (("interp/constrextern.mli", 55, 2440, 2440), ("interp/constrextern.mli", 55, 2440, 2470), 0), 0, Tag1 ("Constrextern", 17)), 0); (("print_parentheses", 1474), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -47)], (0)), 100000000, 0, -46), 0, (("interp/constrextern.mli", 56, 2471, 2471), ("interp/constrextern.mli", 56, 2471, 2503), 0), 0, Tag1 ("Constrextern", 18)), 0); (("print_universes", 1475), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -45)], (0)), 100000000, 0, -44), 0, (("interp/constrextern.mli", 57, 2504, 2504), ("interp/constrextern.mli", 57, 2504, 2534), 0), 0, Tag1 ("Constrextern", 19)), 0); (("print_no_symbol", 1476), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -43)], (0)), 100000000, 0, -42), 0, (("interp/constrextern.mli", 58, 2535, 2535), ("interp/constrextern.mli", 58, 2535, 2565), 0), 0, Tag1 ("Constrextern", 20)), 0); (("print_projections", 1477), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -41)], (0)), 100000000, 0, -40), 0, (("interp/constrextern.mli", 59, 2566, 2566), ("interp/constrextern.mli", 59, 2566, 2598), 0), 0, Tag1 ("Constrextern", 21)), 0); (("print_raw_literal", 1478), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -39)], (0)), 100000000, 0, -38), 0, (("interp/constrextern.mli", 60, 2599, 2599), ("interp/constrextern.mli", 60, 2599, 2631), 0), 0, Tag1 ("Constrextern", 22)), 0); (("set_extern_reference", 1479), ((Tag1 (0, (Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -37)], (0)), 100000000, 0, -36), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -35), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -34), (Tag3 (Tag1 ((Tag2 ("Libnames")), "qualid"), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("interp/constrextern.mli", 63, 2686, 2686), ("interp/constrextern.mli", 64, 2713, 2770), 0), 0, Tag1 ("Constrextern", 23)), 0); (("get_extern_reference", 1480), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -27), (Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -26)], (0)), 100000000, 0, -25), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -24), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -23), (Tag3 (Tag1 ((Tag2 ("Libnames")), "qualid"), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("interp/constrextern.mli", 65, 2771, 2771), ("interp/constrextern.mli", 66, 2798, 2855), 0), 0, Tag1 ("Constrextern", 24)), 0); (("with_universes", 1481), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -16), ((("b")), 100000000, 0, -15), 0), 100000000, 0, -17), (Tag1 (0, ((("a")), 100000000, 0, -16), ((("b")), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("interp/constrextern.mli", 82, 3282, 3282), ("interp/constrextern.mli", 82, 3282, 3325), 0), 0, Tag1 ("Constrextern", 25)), 0); (("without_symbols", 1482), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -11), ((("b")), 100000000, 0, -10), 0), 100000000, 0, -12), (Tag1 (0, ((("a")), 100000000, 0, -11), ((("b")), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("interp/constrextern.mli", 85, 3393, 3393), ("interp/constrextern.mli", 85, 3393, 3437), 0), 0, Tag1 ("Constrextern", 26)), 0); (("with_meta_as_hole", 1483), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -6), ((("b")), 100000000, 0, -5), 0), 100000000, 0, -7), (Tag1 (0, ((("a")), 100000000, 0, -6), ((("b")), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0, (("interp/constrextern.mli", 88, 3483, 3483), ("interp/constrextern.mli", 88, 3483, 3529), 0), 0, Tag1 ("Constrextern", 27)), 0); (("empty_extern_env", 1484), ((Tag3 ((("extern_env", 1458)), 0, (0)), 100000000, 0, -2), 0, (("interp/constrextern.mli", 91, 3565, 3565), ("interp/constrextern.mli", 91, 3565, 3598), 0), 0, Tag1 ("Constrextern", 28)), 0)], "Constrextern", [("Constrextern", ("\205\165\172\230r\222KG\n\165m\021Q\003\242[")); ("Z", ("\253\196\2168\027\199O\134\220\218\031'\1484\233o")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("UnivSubst", ("\190qu\031mc\130\181\003G]\132\"\219m)")); ("UnivProblem", ("6'\161\018\181\001.\253\000\141a6\171\1727\155")); ("UnivNames", ("%\151_\209%+JM$n\001\232\194n\178N")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UState", ("SD\203\215|\136\n\251\239\208\148\215C\n\167\005")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Termops", ("F\177\244\212\208\011\152\244D\234No]\129\242\185")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Store", ("/dT\252\145\179pq\216{\181\206\190K+U")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Random", ("\020\005Xq\171\026\218\152X\135\254\023\133zK\200")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("Section", ("\245\207\b\021\142v=\155#w\246}\"4b\006")); ("Safe_typing", (")\250?\164\145\132\241\127\186\152h+\145\"\237l")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Proofview_monad", ("\218\196\189S\147\216\129\221\231\224v\228O\024*\239")); ("Proofview", ("\245\140U\027\236\199\199&\242\156\199YG\250tA")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Pattern", ("\195C\140Wb=\022\222\208\227^K\003\020\215X")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("NumTok", ("vd\023^\251\244B\166\145'\156\196-0\027\169")); ("Notation_term", ("5\002\017\217b\193nc>\239\239\237\244\031\173?")); ("Nativevalues", ("8:\007\025e\226c,\001\171\146#l\210\171\152")); ("Nativelib", ("V\239\205Y1\147E:,\176\196Hy\1483|")); ("Nativecode", ("\190\185\255\006m\012\210\163\138Rz\247\15283\183")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Namegen", ("\187\222\224T\255\020\1808-\212*\164\131\177\157x")); ("Monad", ("\244\171T\157\194p\187\160\149\195{\132\222\020\253\148")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Ltac_pretype", ("\224\"\167\018i:U\172>\188\128$\r\252\020T")); ("Logic_monad", ("\130\157\160Q\163vQ\137\184\2242\209\128\024\220i")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hook", ("\183\194\223\003\155\169',\187\240a;E\b\1396")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Gramlib__Stream", ("\248\\H\205_76\253\136\146\200\031\165\021=t")); ("Gramlib", ("\154\143\210e\021i\246\176\224\194\220\217\007\145\139A")); ("Glob_term", ("\165=a\227\160\153.\021_$\232\209T\236\153O")); ("Genlambda", ("\170}\024\241\141\222\136S\169\219\2212i\134KI")); ("Geninterp", ("2S\151\191\189\159\004\188;\224d\199|U\004\028")); ("Genarg", ("\1434\015\001\152\196\005s\156\136\195\185\247\b3\t")); ("Ftactic", ("K\172\205\128\241\162\160\201\202\1561o\180L\206:")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evd", ("\211\205p\193\216\129r\006\239oN\142ar\196\175")); ("Evar_kinds", ("\023L\186\132\218}\254\221\185\198\220\200h\003{\021")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("EConstr", ("\201aW\156\157;N\004\201V\208\006L\166\211)")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("DAst", ("\224/\200)\007\184ni\134\b\139\204\241\005w\212")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conversion", ("\158\150&\195M\tv\127|\029\158RRK\211A")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constrexpr", ("p'r\245\184chL\183\249\"\213]\1741\237")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CDebug", ("^4\210p7\239!3\138\138\213?\239`\250\157")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
val empty_extern_env : extern_env
