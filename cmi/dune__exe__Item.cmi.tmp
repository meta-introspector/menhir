type t
val import : Dune__exe.Grammar.Production.index * int -> t
val export : t -> Dune__exe.Grammar.Production.index * int
val marshal : t -> int
val equal : t -> t -> bool
val def :
  t ->
  Dune__exe.Grammar.Production.index * Dune__exe.Grammar.Nonterminal.t *
  Dune__exe.Grammar.Symbol.t array * int * int
val startnt : t -> Dune__exe.Grammar.Nonterminal.t
val print : t -> string
type kind =
    Shift of Dune__exe.Grammar.Symbol.t * t
  | Reduce of Dune__exe.Grammar.Production.index
val classify : t -> kind
module Set :
  sig
    type element = t
    type t
    val empty : t
    val is_empty : t -> bool
    val singleton : element -> t
    val is_singleton : t -> bool
    val cardinal : t -> int
    val choose : t -> element
    val mem : element -> t -> bool
    val add : element -> t -> t
    val remove : element -> t -> t
    val union : t -> t -> t
    val inter : t -> t -> t
    val disjoint : t -> t -> bool
    val iter : (element -> unit) -> t -> unit
    val fold : (element -> 'b -> 'b) -> t -> 'b -> 'b
    val elements : t -> element list
    val compare : t -> t -> int
    val equal : t -> t -> bool
    val subset : t -> t -> bool
  end
module Map :
  sig
    type key = t
    type 'a t
    val empty : 'a t
    val lookup : key -> 'a t -> 'a
    val find : key -> 'a t -> 'a
    val add : key -> 'a -> 'a t -> 'a t
    exception Unchanged
    val strict_add : key -> 'a -> 'a t -> 'a t
    type 'a decision = 'a -> 'a -> 'a
    val fine_add : 'a decision -> key -> 'a -> 'a t -> 'a t
    val mem : key -> 'a t -> bool
    val singleton : key -> 'a -> 'a t
    val is_empty : 'a t -> bool
    val is_singleton : 'a t -> (key * 'a) option
    val cardinal : 'a t -> int
    val choose : 'a t -> key * 'a
    val lookup_and_remove : key -> 'a t -> 'a * 'a t
    val find_and_remove : key -> 'a t -> 'a * 'a t
    val remove : key -> 'a t -> 'a t
    val union : 'a t -> 'a t -> 'a t
    val fine_union : 'a decision -> 'a t -> 'a t -> 'a t
    val iter : (key -> 'a -> unit) -> 'a t -> unit
    val fold : (key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b
    val fold_rev : (key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b
    val filter : (key -> 'a -> bool) -> 'a t -> 'a t
    val iter2 : (key -> 'a -> 'b -> unit) -> 'a t -> 'b t -> unit
    val map : ('a -> 'b) -> 'a t -> 'b t
    val endo_map : ('a -> 'a) -> 'a t -> 'a t
    val compare : ('a -> 'a -> int) -> 'a t -> 'a t -> int
    module Domain :
      sig
        type element = key
        type t = Set.t
        val empty : t
        val is_empty : t -> bool
        val singleton : element -> t
        val is_singleton : t -> bool
        val cardinal : t -> int
        val choose : t -> element
        val mem : element -> t -> bool
        val add : element -> t -> t
        val remove : element -> t -> t
        val union : t -> t -> t
        val inter : t -> t -> t
        val disjoint : t -> t -> bool
        val iter : (element -> unit) -> t -> unit
        val fold : (element -> 'b -> 'b) -> t -> 'b -> 'b
        val elements : t -> element list
        val compare : t -> t -> int
        val equal : t -> t -> bool
        val subset : t -> t -> bool
      end
    val domain : 'a t -> Domain.t
    val lift : (key -> 'a) -> Domain.t -> 'a t
    val corestrict : 'a t -> Domain.t -> 'a t
  end
module Closure :
  functor (L : Dune__exe.Lookahead.S) ->
    ("DEBUG:rule", [Tag1 (("t", 758), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/item.mli", 20, 1164, 1164), ("src/item.mli", 20, 1164, 1170), 0), 0, 0, 0, Tag1 ("Dune__exe__Item", 0)), 1, 0); (("import", 759), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Production"), "index"), 0, (0)), 100000000, 0, -39); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -40)]), 100000000, 0, -38), (Tag3 ((("t", 758)), 0, (0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("src/item.mli", 21, 1171, 1171), ("src/item.mli", 21, 1171, 1210), 0), 0, Tag1 ("Dune__exe__Item", 1)), 0); (("export", 760), ((Tag1 (0, (Tag3 ((("t", 758)), 0, (0)), 100000000, 0, -35), (Tag2 ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Production"), "index"), 0, (0)), 100000000, 0, -33); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -34)]), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("src/item.mli", 22, 1211, 1211), ("src/item.mli", 22, 1211, 1250), 0), 0, Tag1 ("Dune__exe__Item", 2)), 0); (("marshal", 761), ((Tag1 (0, (Tag3 ((("t", 758)), 0, (0)), 100000000, 0, -30), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("src/item.mli", 28, 1420, 1420), ("src/item.mli", 28, 1420, 1441), 0), 0, Tag1 ("Dune__exe__Item", 3)), 0); (("equal", 762), ((Tag1 (0, (Tag3 ((("t", 758)), 0, (0)), 100000000, 0, -27), (Tag1 (0, (Tag3 ((("t", 758)), 0, (0)), 100000000, 0, -26), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("src/item.mli", 32, 1462, 1462), ("src/item.mli", 32, 1462, 1487), 0), 0, Tag1 ("Dune__exe__Item", 4)), 0); (("def", 763), ((Tag1 (0, (Tag3 ((("t", 758)), 0, (0)), 100000000, 0, -22), (Tag2 ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Production"), "index"), 0, (0)), 100000000, 0, -16); (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Nonterminal"), "t"), 0, (0)), 100000000, 0, -17); (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Symbol"), "t"), 0, (0)), 100000000, 0, -19)], (0)), 100000000, 0, -18); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -20); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -21)]), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("src/item.mli", 40, 1820, 1820), ("src/item.mli", 40, 1820, 1895), 0), 0, Tag1 ("Dune__exe__Item", 5)), 0); (("startnt", 764), ((Tag1 (0, (Tag3 ((("t", 758)), 0, (0)), 100000000, 0, -13), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Nonterminal"), "t"), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("src/item.mli", 45, 2007, 2007), ("src/item.mli", 45, 2007, 2038), 0), 0, Tag1 ("Dune__exe__Item", 6)), 0); (("print", 765), ((Tag1 (0, (Tag3 ((("t", 758)), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("src/item.mli", 49, 2057, 2057), ("src/item.mli", 49, 2057, 2079), 0), 0, Tag1 ("Dune__exe__Item", 7)), 0); Tag1 (("kind", 766), (0, 0, Tag1 ([(("Shift", 504), ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Symbol"), "t"), 0, (0)), 100000000, 0, -5); (Tag3 ((("t", 758)), 0, (0)), 100000000, 0, -6)]), 0, (("src/item.mli", 56, 2288, 2290), ("src/item.mli", 56, 2288, 2313), 0), 0, Tag1 ("Dune__exe__Item", 9)); (("Reduce", 505), ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Production"), "index"), 0, (0)), 100000000, 0, -7)]), 0, (("src/item.mli", 57, 2314, 2316), ("src/item.mli", 57, 2314, 2344), 0), 0, Tag1 ("Dune__exe__Item", 10))], 0), 1, 0, 0, 0, 0, 0, (("src/item.mli", 55, 2276, 2276), ("src/item.mli", 57, 2314, 2344), 0), 0, 0, 0, Tag1 ("Dune__exe__Item", 8)), 1, 0); (("classify", 767), ((Tag1 (0, (Tag3 ((("t", 758)), 0, (0)), 100000000, 0, -4), (Tag3 ((("kind", 766)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/item.mli", 59, 2346, 2346), ("src/item.mli", 59, 2346, 2369), 0), 0, Tag1 ("Dune__exe__Item", 11)), 0); Tag3 (("Set", 768), 0, (Tag1 ([Tag1 (("element", 772), (0, 0, 0, 1, ((Tag3 ((("t", 758)), 0, (0)), 100000000, 0, -121)), 0, 0, 0, 0, (("src/item.mli", 64, 2471, 2496), ("src/item.mli", 64, 2471, 2512), 0), 0, 0, 0, Tag1 ("Dune__exe__Item", 12)), 1, 0); Tag1 (("t", 773), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/gSet.ml", 25, 1233, 1235), ("src/gSet.ml", 25, 1233, 1241), 0), 0, 0, 0, Tag1 ("Dune__exe__GSet", 1)), 1, 0); (("empty", 774), ((Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -120), 0, (("src/gSet.ml", 29, 1267, 1269), ("src/gSet.ml", 29, 1267, 1281), 0), 0, Tag1 ("Dune__exe__GSet", 2)), 0); (("is_empty", 775), ((Tag1 (0, (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -119), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -118), 0), 100000000, 0, -117), 0, (("src/gSet.ml", 33, 1341, 1343), ("src/gSet.ml", 33, 1341, 1366), 0), 0, Tag1 ("Dune__exe__GSet", 3)), 0); (("singleton", 776), ((Tag1 (0, (Tag3 ((("element", 772)), 0, (0)), 100000000, 0, -116), (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -115), 0), 100000000, 0, -114), 0, (("src/gSet.ml", 38, 1456, 1458), ("src/gSet.ml", 38, 1456, 1485), 0), 0, Tag1 ("Dune__exe__GSet", 4)), 0); (("is_singleton", 777), ((Tag1 (0, (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -113), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -112), 0), 100000000, 0, -111), 0, (("src/gSet.ml", 42, 1551, 1553), ("src/gSet.ml", 42, 1551, 1580), 0), 0, Tag1 ("Dune__exe__GSet", 5)), 0); (("cardinal", 778), ((Tag1 (0, (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -110), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -109), 0), 100000000, 0, -108), 0, (("src/gSet.ml", 46, 1633, 1635), ("src/gSet.ml", 46, 1633, 1657), 0), 0, Tag1 ("Dune__exe__GSet", 6)), 0); (("choose", 779), ((Tag1 (0, (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -107), (Tag3 ((("element", 772)), 0, (0)), 100000000, 0, -106), 0), 100000000, 0, -105), 0, (("src/gSet.ml", 51, 1784, 1786), ("src/gSet.ml", 51, 1784, 1810), 0), 0, Tag1 ("Dune__exe__GSet", 7)), 0); (("mem", 780), ((Tag1 (0, (Tag3 ((("element", 772)), 0, (0)), 100000000, 0, -104), (Tag1 (0, (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -103), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -102), 0), 100000000, 0, -101), 0), 100000000, 0, -100), 0, (("src/gSet.ml", 56, 1894, 1896), ("src/gSet.ml", 56, 1894, 1925), 0), 0, Tag1 ("Dune__exe__GSet", 8)), 0); (("add", 781), ((Tag1 (0, (Tag3 ((("element", 772)), 0, (0)), 100000000, 0, -99), (Tag1 (0, (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -98), (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -97), 0), 100000000, 0, -96), 0), 100000000, 0, -95), 0, (("src/gSet.ml", 61, 2015, 2017), ("src/gSet.ml", 61, 2015, 2043), 0), 0, Tag1 ("Dune__exe__GSet", 9)), 0); (("remove", 782), ((Tag1 (0, (Tag3 ((("element", 772)), 0, (0)), 100000000, 0, -94), (Tag1 (0, (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -93), (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -92), 0), 100000000, 0, -91), 0), 100000000, 0, -90), 0, (("src/gSet.ml", 66, 2138, 2140), ("src/gSet.ml", 66, 2138, 2169), 0), 0, Tag1 ("Dune__exe__GSet", 10)), 0); (("union", 783), ((Tag1 (0, (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -89), (Tag1 (0, (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -88), (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -87), 0), 100000000, 0, -86), 0), 100000000, 0, -85), 0, (("src/gSet.ml", 70, 2239, 2241), ("src/gSet.ml", 70, 2239, 2263), 0), 0, Tag1 ("Dune__exe__GSet", 11)), 0); (("inter", 784), ((Tag1 (0, (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -84), (Tag1 (0, (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -83), (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -82), 0), 100000000, 0, -81), 0), 100000000, 0, -80), 0, (("src/gSet.ml", 75, 2356, 2358), ("src/gSet.ml", 75, 2356, 2380), 0), 0, Tag1 ("Dune__exe__GSet", 12)), 0); (("disjoint", 785), ((Tag1 (0, (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -79), (Tag1 (0, (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -78), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0), 100000000, 0, -75), 0, (("src/gSet.ml", 80, 2518, 2520), ("src/gSet.ml", 80, 2518, 2548), 0), 0, Tag1 ("Dune__exe__GSet", 13)), 0); (("iter", 786), ((Tag1 (0, (Tag1 (0, (Tag3 ((("element", 772)), 0, (0)), 100000000, 0, -74), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -73), 0), 100000000, 0, -72), (Tag1 (0, (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -71), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("src/gSet.ml", 85, 2687, 2689), ("src/gSet.ml", 85, 2687, 2729), 0), 0, Tag1 ("Dune__exe__GSet", 14)), 0); (("fold", 787), ((Tag1 (0, (Tag1 (0, (Tag3 ((("element", 772)), 0, (0)), 100000000, 0, -67), (Tag1 (0, ((("b")), 100000000, 0, -63), ((("b")), 100000000, 0, -63), 0), 100000000, 0, -66), 0), 100000000, 0, -65), (Tag1 (0, (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -64), (Tag1 (0, ((("b")), 100000000, 0, -63), ((("b")), 100000000, 0, -63), 0), 100000000, 0, -62), 0), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("src/gSet.ml", 96, 3275, 3277), ("src/gSet.ml", 96, 3275, 3325), 0), 0, Tag1 ("Dune__exe__GSet", 15)), 0); (("elements", 788), ((Tag1 (0, (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -59), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("element", 772)), 0, (0)), 100000000, 0, -58)], (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("src/gSet.ml", 100, 3391, 3393), ("src/gSet.ml", 100, 3391, 3424), 0), 0, Tag1 ("Dune__exe__GSet", 16)), 0); (("compare", 789), ((Tag1 (0, (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -55), (Tag1 (0, (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -54), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("src/gSet.ml", 104, 3471, 3473), ("src/gSet.ml", 104, 3471, 3499), 0), 0, Tag1 ("Dune__exe__GSet", 17)), 0); (("equal", 790), ((Tag1 (0, (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -49), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("src/gSet.ml", 108, 3549, 3551), ("src/gSet.ml", 108, 3549, 3576), 0), 0, Tag1 ("Dune__exe__GSet", 18)), 0); (("subset", 791), ((Tag1 (0, (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -45), (Tag1 (0, (Tag3 ((("t", 773)), 0, (0)), 100000000, 0, -44), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("src/gSet.ml", 112, 3639, 3641), ("src/gSet.ml", 112, 3639, 3669), 0), 0, Tag1 ("Dune__exe__GSet", 19)), 0)]), 0, (("src/item.mli", 64, 2471, 2471), ("src/item.mli", 64, 2471, 2512), 0), Tag1 ("Dune__exe__Item", 13)), 0, 0); Tag3 (("Map", 769), 0, (Tag1 ([Tag1 (("key", 792), (0, 0, 0, 1, ((Tag3 ((("t", 758)), 0, (0)), 100000000, 0, -316)), 0, 0, 0, 0, (("src/item.mli", 65, 2513, 2538), ("src/item.mli", 65, 2513, 2550), 0), 0, 0, 0, Tag1 ("Dune__exe__Item", 14)), 1, 0); Tag1 (("t", 793), ([((("a")), 100000000, 0, -315)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/gMap.ml", 22, 1137, 1139), ("src/gMap.ml", 22, 1137, 1148), 0), 0, 0, 0, Tag1 ("Dune__exe__GMap", 1)), 1, 0); (("empty", 794), ((Tag3 ((("t", 793)), [((("a")), 100000000, 0, -314)], (0)), 100000000, 0, -313), 0, (("src/gMap.ml", 26, 1174, 1176), ("src/gMap.ml", 26, 1174, 1191), 0), 0, Tag1 ("Dune__exe__GMap", 2)), 0); (("lookup", 795), ((Tag1 (0, (Tag3 ((("key", 792)), 0, (0)), 100000000, 0, -312), (Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -310)], (0)), 100000000, 0, -311), ((("a")), 100000000, 0, -310), 0), 100000000, 0, -309), 0), 100000000, 0, -308), 0, (("src/gMap.ml", 31, 1333, 1335), ("src/gMap.ml", 31, 1333, 1364), 0), 0, Tag1 ("Dune__exe__GMap", 3)), 0); (("find", 796), ((Tag1 (0, (Tag3 ((("key", 792)), 0, (0)), 100000000, 0, -307), (Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -305)], (0)), 100000000, 0, -306), ((("a")), 100000000, 0, -305), 0), 100000000, 0, -304), 0), 100000000, 0, -303), 0, (("src/gMap.ml", 32, 1365, 1367), ("src/gMap.ml", 32, 1365, 1394), 0), 0, Tag1 ("Dune__exe__GMap", 4)), 0); (("add", 797), ((Tag1 (0, (Tag3 ((("key", 792)), 0, (0)), 100000000, 0, -302), (Tag1 (0, ((("a")), 100000000, 0, -300), (Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -300)], (0)), 100000000, 0, -301), (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -300)], (0)), 100000000, 0, -299), 0), 100000000, 0, -298), 0), 100000000, 0, -297), 0), 100000000, 0, -296), 0, (("src/gMap.ml", 38, 1584, 1586), ("src/gMap.ml", 38, 1584, 1620), 0), 0, Tag1 ("Dune__exe__GMap", 5)), 0); Tag2 (("Unchanged", 798), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Dune__exe__GMap", 6)), 2, 0); (("strict_add", 799), ((Tag1 (0, (Tag3 ((("key", 792)), 0, (0)), 100000000, 0, -295), (Tag1 (0, ((("a")), 100000000, 0, -293), (Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -293)], (0)), 100000000, 0, -294), (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -293)], (0)), 100000000, 0, -292), 0), 100000000, 0, -291), 0), 100000000, 0, -290), 0), 100000000, 0, -289), 0, (("src/gMap.ml", 46, 1849, 1851), ("src/gMap.ml", 46, 1849, 1892), 0), 0, Tag1 ("Dune__exe__GMap", 7)), 0); Tag1 (("decision", 800), ([((("a")), 100000000, 0, -288)], 1, 0, 1, ((Tag1 (0, ((("a")), 100000000, 0, -288), (Tag1 (0, ((("a")), 100000000, 0, -288), ((("a")), 100000000, 0, -288), 0), 100000000, 0, -287), 0), 100000000, 0, -286)), [63], [0], 0, 0, (("src/gMap.ml", 53, 2159, 2161), ("src/gMap.ml", 53, 2159, 2194), 0), 0, 0, 0, Tag1 ("Dune__exe__GMap", 8)), 1, 0); (("fine_add", 801), ((Tag1 (0, (Tag3 ((("decision", 800)), [((("a")), 100000000, 0, -282)], (0)), 100000000, 0, -285), (Tag1 (0, (Tag3 ((("key", 792)), 0, (0)), 100000000, 0, -284), (Tag1 (0, ((("a")), 100000000, 0, -282), (Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -282)], (0)), 100000000, 0, -283), (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -282)], (0)), 100000000, 0, -281), 0), 100000000, 0, -280), 0), 100000000, 0, -279), 0), 100000000, 0, -278), 0), 100000000, 0, -277), 0, (("src/gMap.ml", 55, 2196, 2198), ("src/gMap.ml", 55, 2196, 2252), 0), 0, Tag1 ("Dune__exe__GMap", 9)), 0); (("mem", 802), ((Tag1 (0, (Tag3 ((("key", 792)), 0, (0)), 100000000, 0, -276), (Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -275)], (0)), 100000000, 0, -274), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -273), 0), 100000000, 0, -272), 0), 100000000, 0, -271), 0, (("src/gMap.ml", 60, 2342, 2344), ("src/gMap.ml", 60, 2342, 2372), 0), 0, Tag1 ("Dune__exe__GMap", 10)), 0); (("singleton", 803), ((Tag1 (0, (Tag3 ((("key", 792)), 0, (0)), 100000000, 0, -270), (Tag1 (0, ((("a")), 100000000, 0, -269), (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -269)], (0)), 100000000, 0, -268), 0), 100000000, 0, -267), 0), 100000000, 0, -266), 0, (("src/gMap.ml", 64, 2452, 2454), ("src/gMap.ml", 64, 2452, 2486), 0), 0, Tag1 ("Dune__exe__GMap", 11)), 0); (("is_empty", 804), ((Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -265)], (0)), 100000000, 0, -264), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -263), 0), 100000000, 0, -262), 0, (("src/gMap.ml", 69, 2585, 2587), ("src/gMap.ml", 69, 2585, 2613), 0), 0, Tag1 ("Dune__exe__GMap", 12)), 0); (("is_singleton", 805), ((Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -260)], (0)), 100000000, 0, -261), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 792)), 0, (0)), 100000000, 0, -259); ((("a")), 100000000, 0, -260)]), 100000000, 0, -258)], (0)), 100000000, 0, -257), 0), 100000000, 0, -256), 0, (("src/gMap.ml", 75, 2756, 2758), ("src/gMap.ml", 75, 2756, 2801), 0), 0, Tag1 ("Dune__exe__GMap", 13)), 0); (("cardinal", 806), ((Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -255)], (0)), 100000000, 0, -254), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -253), 0), 100000000, 0, -252), 0, (("src/gMap.ml", 80, 2940, 2942), ("src/gMap.ml", 80, 2940, 2967), 0), 0, Tag1 ("Dune__exe__GMap", 14)), 0); (("choose", 807), ((Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -250)], (0)), 100000000, 0, -251), (Tag2 ([(Tag3 ((("key", 792)), 0, (0)), 100000000, 0, -249); ((("a")), 100000000, 0, -250)]), 100000000, 0, -248), 0), 100000000, 0, -247), 0, (("src/gMap.ml", 85, 3094, 3096), ("src/gMap.ml", 85, 3094, 3124), 0), 0, Tag1 ("Dune__exe__GMap", 15)), 0); (("lookup_and_remove", 808), ((Tag1 (0, (Tag3 ((("key", 792)), 0, (0)), 100000000, 0, -246), (Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -243)], (0)), 100000000, 0, -245), (Tag2 ([((("a")), 100000000, 0, -243); (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -243)], (0)), 100000000, 0, -244)]), 100000000, 0, -242), 0), 100000000, 0, -241), 0), 100000000, 0, -240), 0, (("src/gMap.ml", 92, 3392, 3394), ("src/gMap.ml", 92, 3392, 3441), 0), 0, Tag1 ("Dune__exe__GMap", 16)), 0); (("find_and_remove", 809), ((Tag1 (0, (Tag3 ((("key", 792)), 0, (0)), 100000000, 0, -239), (Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -236)], (0)), 100000000, 0, -238), (Tag2 ([((("a")), 100000000, 0, -236); (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -236)], (0)), 100000000, 0, -237)]), 100000000, 0, -235), 0), 100000000, 0, -234), 0), 100000000, 0, -233), 0, (("src/gMap.ml", 93, 3442, 3444), ("src/gMap.ml", 93, 3442, 3489), 0), 0, Tag1 ("Dune__exe__GMap", 17)), 0); (("remove", 810), ((Tag1 (0, (Tag3 ((("key", 792)), 0, (0)), 100000000, 0, -232), (Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -230)], (0)), 100000000, 0, -231), (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -230)], (0)), 100000000, 0, -229), 0), 100000000, 0, -228), 0), 100000000, 0, -227), 0, (("src/gMap.ml", 97, 3563, 3565), ("src/gMap.ml", 97, 3563, 3596), 0), 0, Tag1 ("Dune__exe__GMap", 18)), 0); (("union", 811), ((Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -224)], (0)), 100000000, 0, -226), (Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -224)], (0)), 100000000, 0, -225), (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -224)], (0)), 100000000, 0, -223), 0), 100000000, 0, -222), 0), 100000000, 0, -221), 0, (("src/gMap.ml", 102, 3724, 3726), ("src/gMap.ml", 102, 3724, 3757), 0), 0, Tag1 ("Dune__exe__GMap", 19)), 0); (("fine_union", 812), ((Tag1 (0, (Tag3 ((("decision", 800)), [((("a")), 100000000, 0, -217)], (0)), 100000000, 0, -220), (Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -217)], (0)), 100000000, 0, -219), (Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -217)], (0)), 100000000, 0, -218), (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -217)], (0)), 100000000, 0, -216), 0), 100000000, 0, -215), 0), 100000000, 0, -214), 0), 100000000, 0, -213), 0, (("src/gMap.ml", 110, 4052, 4054), ("src/gMap.ml", 110, 4052, 4105), 0), 0, Tag1 ("Dune__exe__GMap", 20)), 0); (("iter", 813), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 792)), 0, (0)), 100000000, 0, -212), (Tag1 (0, ((("a")), 100000000, 0, -208), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -211), 0), 100000000, 0, -210), 0), 100000000, 0, -209), (Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -208)], (0)), 100000000, 0, -207), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -206), 0), 100000000, 0, -205), 0), 100000000, 0, -204), 0, (("src/gMap.ml", 116, 4271, 4273), ("src/gMap.ml", 116, 4271, 4318), 0), 0, Tag1 ("Dune__exe__GMap", 21)), 0); (("fold", 814), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 792)), 0, (0)), 100000000, 0, -203), (Tag1 (0, ((("a")), 100000000, 0, -199), (Tag1 (0, ((("b")), 100000000, 0, -197), ((("b")), 100000000, 0, -197), 0), 100000000, 0, -202), 0), 100000000, 0, -201), 0), 100000000, 0, -200), (Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -199)], (0)), 100000000, 0, -198), (Tag1 (0, ((("b")), 100000000, 0, -197), ((("b")), 100000000, 0, -197), 0), 100000000, 0, -196), 0), 100000000, 0, -195), 0), 100000000, 0, -194), 0, (("src/gMap.ml", 125, 4696, 4698), ("src/gMap.ml", 125, 4696, 4751), 0), 0, Tag1 ("Dune__exe__GMap", 22)), 0); (("fold_rev", 815), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 792)), 0, (0)), 100000000, 0, -193), (Tag1 (0, ((("a")), 100000000, 0, -189), (Tag1 (0, ((("b")), 100000000, 0, -187), ((("b")), 100000000, 0, -187), 0), 100000000, 0, -192), 0), 100000000, 0, -191), 0), 100000000, 0, -190), (Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -189)], (0)), 100000000, 0, -188), (Tag1 (0, ((("b")), 100000000, 0, -187), ((("b")), 100000000, 0, -187), 0), 100000000, 0, -186), 0), 100000000, 0, -185), 0), 100000000, 0, -184), 0, (("src/gMap.ml", 130, 4867, 4869), ("src/gMap.ml", 130, 4867, 4926), 0), 0, Tag1 ("Dune__exe__GMap", 23)), 0); (("filter", 816), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 792)), 0, (0)), 100000000, 0, -183), (Tag1 (0, ((("a")), 100000000, 0, -178), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -182), 0), 100000000, 0, -181), 0), 100000000, 0, -180), (Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -178)], (0)), 100000000, 0, -179), (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -178)], (0)), 100000000, 0, -177), 0), 100000000, 0, -176), 0), 100000000, 0, -175), 0, (("src/gMap.ml", 135, 5046, 5048), ("src/gMap.ml", 135, 5046, 5095), 0), 0, Tag1 ("Dune__exe__GMap", 24)), 0); (("iter2", 817), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 792)), 0, (0)), 100000000, 0, -174), (Tag1 (0, ((("a")), 100000000, 0, -169), (Tag1 (0, ((("b")), 100000000, 0, -167), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -173), 0), 100000000, 0, -172), 0), 100000000, 0, -171), 0), 100000000, 0, -170), (Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -169)], (0)), 100000000, 0, -168), (Tag1 (0, (Tag3 ((("t", 793)), [((("b")), 100000000, 0, -167)], (0)), 100000000, 0, -166), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -165), 0), 100000000, 0, -164), 0), 100000000, 0, -163), 0), 100000000, 0, -162), 0, (("src/gMap.ml", 142, 5360, 5362), ("src/gMap.ml", 142, 5360, 5422), 0), 0, Tag1 ("Dune__exe__GMap", 25)), 0); (("map", 818), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -160), ((("b")), 100000000, 0, -158), 0), 100000000, 0, -161), (Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -160)], (0)), 100000000, 0, -159), (Tag3 ((("t", 793)), [((("b")), 100000000, 0, -158)], (0)), 100000000, 0, -157), 0), 100000000, 0, -156), 0), 100000000, 0, -155), 0, (("src/gMap.ml", 147, 5558, 5560), ("src/gMap.ml", 147, 5558, 5595), 0), 0, Tag1 ("Dune__exe__GMap", 26)), 0); (("endo_map", 819), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -152), ((("a")), 100000000, 0, -152), 0), 100000000, 0, -154), (Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -152)], (0)), 100000000, 0, -153), (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -152)], (0)), 100000000, 0, -151), 0), 100000000, 0, -150), 0), 100000000, 0, -149), 0, (("src/gMap.ml", 153, 5761, 5763), ("src/gMap.ml", 153, 5761, 5803), 0), 0, Tag1 ("Dune__exe__GMap", 27)), 0); (("compare", 820), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -144), (Tag1 (0, ((("a")), 100000000, 0, -144), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -148), 0), 100000000, 0, -147), 0), 100000000, 0, -146), (Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -144)], (0)), 100000000, 0, -145), (Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -144)], (0)), 100000000, 0, -143), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -142), 0), 100000000, 0, -141), 0), 100000000, 0, -140), 0), 100000000, 0, -139), 0, (("src/gMap.ml", 158, 5909, 5911), ("src/gMap.ml", 158, 5909, 5964), 0), 0, Tag1 ("Dune__exe__GMap", 28)), 0); Tag3 (("Domain", 821), 0, (Tag1 ([Tag1 (("element", 825), (0, 0, 0, 1, ((Tag3 ((("key", 792)), 0, (0)), 100000000, 0, -398)), 0, 0, 0, 0, (("src/gMap.ml", 167, 6368, 6398), ("src/gMap.ml", 167, 6368, 6416), 0), 0, 0, 0, Tag1 ("Dune__exe__GMap", 29)), 1, 0); Tag1 (("t", 826), (0, 0, 0, 1, ((Tag3 (Tag1 ((("Set", 768)), "t"), 0, (0)), 100000000, 0, -397)), 0, 0, 0, 0, (("src/item.mli", 66, 2551, 2576), ("src/item.mli", 66, 2551, 2597), 0), 0, 0, 0, Tag1 ("Dune__exe__Item", 15)), 1, 0); (("empty", 827), ((Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -396), 0, (("src/gSet.ml", 29, 1267, 1269), ("src/gSet.ml", 29, 1267, 1281), 0), 0, Tag1 ("Dune__exe__GSet", 2)), 0); (("is_empty", 828), ((Tag1 (0, (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -395), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -394), 0), 100000000, 0, -393), 0, (("src/gSet.ml", 33, 1341, 1343), ("src/gSet.ml", 33, 1341, 1366), 0), 0, Tag1 ("Dune__exe__GSet", 3)), 0); (("singleton", 829), ((Tag1 (0, (Tag3 ((("element", 825)), 0, (0)), 100000000, 0, -392), (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -391), 0), 100000000, 0, -390), 0, (("src/gSet.ml", 38, 1456, 1458), ("src/gSet.ml", 38, 1456, 1485), 0), 0, Tag1 ("Dune__exe__GSet", 4)), 0); (("is_singleton", 830), ((Tag1 (0, (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -389), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -388), 0), 100000000, 0, -387), 0, (("src/gSet.ml", 42, 1551, 1553), ("src/gSet.ml", 42, 1551, 1580), 0), 0, Tag1 ("Dune__exe__GSet", 5)), 0); (("cardinal", 831), ((Tag1 (0, (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -386), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -385), 0), 100000000, 0, -384), 0, (("src/gSet.ml", 46, 1633, 1635), ("src/gSet.ml", 46, 1633, 1657), 0), 0, Tag1 ("Dune__exe__GSet", 6)), 0); (("choose", 832), ((Tag1 (0, (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -383), (Tag3 ((("element", 825)), 0, (0)), 100000000, 0, -382), 0), 100000000, 0, -381), 0, (("src/gSet.ml", 51, 1784, 1786), ("src/gSet.ml", 51, 1784, 1810), 0), 0, Tag1 ("Dune__exe__GSet", 7)), 0); (("mem", 833), ((Tag1 (0, (Tag3 ((("element", 825)), 0, (0)), 100000000, 0, -380), (Tag1 (0, (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -379), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -378), 0), 100000000, 0, -377), 0), 100000000, 0, -376), 0, (("src/gSet.ml", 56, 1894, 1896), ("src/gSet.ml", 56, 1894, 1925), 0), 0, Tag1 ("Dune__exe__GSet", 8)), 0); (("add", 834), ((Tag1 (0, (Tag3 ((("element", 825)), 0, (0)), 100000000, 0, -375), (Tag1 (0, (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -374), (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -373), 0), 100000000, 0, -372), 0), 100000000, 0, -371), 0, (("src/gSet.ml", 61, 2015, 2017), ("src/gSet.ml", 61, 2015, 2043), 0), 0, Tag1 ("Dune__exe__GSet", 9)), 0); (("remove", 835), ((Tag1 (0, (Tag3 ((("element", 825)), 0, (0)), 100000000, 0, -370), (Tag1 (0, (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -369), (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -368), 0), 100000000, 0, -367), 0), 100000000, 0, -366), 0, (("src/gSet.ml", 66, 2138, 2140), ("src/gSet.ml", 66, 2138, 2169), 0), 0, Tag1 ("Dune__exe__GSet", 10)), 0); (("union", 836), ((Tag1 (0, (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -365), (Tag1 (0, (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -364), (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -363), 0), 100000000, 0, -362), 0), 100000000, 0, -361), 0, (("src/gSet.ml", 70, 2239, 2241), ("src/gSet.ml", 70, 2239, 2263), 0), 0, Tag1 ("Dune__exe__GSet", 11)), 0); (("inter", 837), ((Tag1 (0, (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -360), (Tag1 (0, (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -359), (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -358), 0), 100000000, 0, -357), 0), 100000000, 0, -356), 0, (("src/gSet.ml", 75, 2356, 2358), ("src/gSet.ml", 75, 2356, 2380), 0), 0, Tag1 ("Dune__exe__GSet", 12)), 0); (("disjoint", 838), ((Tag1 (0, (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -355), (Tag1 (0, (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -354), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -353), 0), 100000000, 0, -352), 0), 100000000, 0, -351), 0, (("src/gSet.ml", 80, 2518, 2520), ("src/gSet.ml", 80, 2518, 2548), 0), 0, Tag1 ("Dune__exe__GSet", 13)), 0); (("iter", 839), ((Tag1 (0, (Tag1 (0, (Tag3 ((("element", 825)), 0, (0)), 100000000, 0, -350), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -349), 0), 100000000, 0, -348), (Tag1 (0, (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -347), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -346), 0), 100000000, 0, -345), 0), 100000000, 0, -344), 0, (("src/gSet.ml", 85, 2687, 2689), ("src/gSet.ml", 85, 2687, 2729), 0), 0, Tag1 ("Dune__exe__GSet", 14)), 0); (("fold", 840), ((Tag1 (0, (Tag1 (0, (Tag3 ((("element", 825)), 0, (0)), 100000000, 0, -343), (Tag1 (0, ((("b")), 100000000, 0, -339), ((("b")), 100000000, 0, -339), 0), 100000000, 0, -342), 0), 100000000, 0, -341), (Tag1 (0, (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -340), (Tag1 (0, ((("b")), 100000000, 0, -339), ((("b")), 100000000, 0, -339), 0), 100000000, 0, -338), 0), 100000000, 0, -337), 0), 100000000, 0, -336), 0, (("src/gSet.ml", 96, 3275, 3277), ("src/gSet.ml", 96, 3275, 3325), 0), 0, Tag1 ("Dune__exe__GSet", 15)), 0); (("elements", 841), ((Tag1 (0, (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -335), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("element", 825)), 0, (0)), 100000000, 0, -334)], (0)), 100000000, 0, -333), 0), 100000000, 0, -332), 0, (("src/gSet.ml", 100, 3391, 3393), ("src/gSet.ml", 100, 3391, 3424), 0), 0, Tag1 ("Dune__exe__GSet", 16)), 0); (("compare", 842), ((Tag1 (0, (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -331), (Tag1 (0, (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -330), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -329), 0), 100000000, 0, -328), 0), 100000000, 0, -327), 0, (("src/gSet.ml", 104, 3471, 3473), ("src/gSet.ml", 104, 3471, 3499), 0), 0, Tag1 ("Dune__exe__GSet", 17)), 0); (("equal", 843), ((Tag1 (0, (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -326), (Tag1 (0, (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -325), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -324), 0), 100000000, 0, -323), 0), 100000000, 0, -322), 0, (("src/gSet.ml", 108, 3549, 3551), ("src/gSet.ml", 108, 3549, 3576), 0), 0, Tag1 ("Dune__exe__GSet", 18)), 0); (("subset", 844), ((Tag1 (0, (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -321), (Tag1 (0, (Tag3 ((("t", 826)), 0, (0)), 100000000, 0, -320), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -319), 0), 100000000, 0, -318), 0), 100000000, 0, -317), 0, (("src/gSet.ml", 112, 3639, 3641), ("src/gSet.ml", 112, 3639, 3669), 0), 0, Tag1 ("Dune__exe__GSet", 19)), 0)]), 0, (("src/gMap.ml", 167, 6368, 6370), ("src/gMap.ml", 167, 6368, 6416), 0), Tag1 ("Dune__exe__GMap", 30)), 0, 0); (("domain", 822), ((Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -138)], (0)), 100000000, 0, -137), (Tag3 (Tag1 ((("Domain", 821)), "t"), 0, (0)), 100000000, 0, -136), 0), 100000000, 0, -135), 0, (("src/gMap.ml", 169, 6418, 6420), ("src/gMap.ml", 169, 6418, 6448), 0), 0, Tag1 ("Dune__exe__GMap", 31)), 0); (("lift", 823), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 792)), 0, (0)), 100000000, 0, -134), ((("a")), 100000000, 0, -131), 0), 100000000, 0, -133), (Tag1 (0, (Tag3 (Tag1 ((("Domain", 821)), "t"), 0, (0)), 100000000, 0, -132), (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -131)], (0)), 100000000, 0, -130), 0), 100000000, 0, -129), 0), 100000000, 0, -128), 0, (("src/gMap.ml", 170, 6449, 6451), ("src/gMap.ml", 170, 6449, 6492), 0), 0, Tag1 ("Dune__exe__GMap", 32)), 0); (("corestrict", 824), ((Tag1 (0, (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -125)], (0)), 100000000, 0, -127), (Tag1 (0, (Tag3 (Tag1 ((("Domain", 821)), "t"), 0, (0)), 100000000, 0, -126), (Tag3 ((("t", 793)), [((("a")), 100000000, 0, -125)], (0)), 100000000, 0, -124), 0), 100000000, 0, -123), 0), 100000000, 0, -122), 0, (("src/gMap.ml", 177, 6715, 6717), ("src/gMap.ml", 177, 6715, 6757), 0), 0, Tag1 ("Dune__exe__GMap", 33)), 0)]), 0, (("src/item.mli", 65, 2513, 2513), ("src/item.mli", 66, 2551, 2597), 0), Tag1 ("Dune__exe__Item", 16)), 0, 0); Tag3 (("Closure", 770), 0, (Tag2 (((("L", 771)), (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Lookahead"), "S"))), Tag1 ([Tag1 (("state", 845), (0, 0, 0, 1, ((Tag3 (Tag1 ((("Map", 769)), "t"), [(Tag3 (Tag1 ((("L", 771)), "t"), 0, (0)), 100000000, 0, -403)], (0)), 100000000, 0, -402)), 0, 0, 0, 0, (("src/item.mli", 77, 2936, 2938), ("src/item.mli", 77, 2936, 2960), 0), 0, 0, 0, Tag1 ("Dune__exe__Item", 18)), 1, 0); (("closure", 846), ((Tag1 (0, (Tag3 ((("state", 845)), 0, (0)), 100000000, 0, -401), (Tag3 ((("state", 845)), 0, (0)), 100000000, 0, -400), 0), 100000000, 0, -399), 0, (("src/item.mli", 81, 3038, 3040), ("src/item.mli", 81, 3038, 3067), 0), 0, Tag1 ("Dune__exe__Item", 19)), 0)])), 0, (("src/item.mli", 73, 2842, 2842), ("src/item.mli", 83, 3069, 3072), 0), Tag1 ("Dune__exe__Item", 20)), 0, 0)], "Dune__exe__Item", [("Dune__exe__Item", ("n\239\129]\161h\245\169\247_4\014>1\006D")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("MenhirSdk__Keyword", ("\171\145\177^\199\189\197f\150\136y\144\252\234>\178")); ("MenhirSdk", ("F\232\012\196l\143\145[\255\2193U\197\027\176\139")); ("Dune__exe__Syntax", ("\002\205\007\164\2347\133\182\245*x\171\004\190\178\171")); ("Dune__exe__StringSet", ("uB\206\020%\219\199\135&\196,\015\190\015^\230")); ("Dune__exe__StringMap", ("\157\157\161k*M\030\254|\006>\144X\147j\222")); ("Dune__exe__Stretch", ("\003\145~\207\198HL&\187\195e'0\204\200\156")); ("Dune__exe__Settings", ("I\214\245\150\238/\2211\219\145S\218\004a:1")); ("Dune__exe__Positions", ("\137nS\236\011\187\r[\024:\162/\201\139\237}")); ("Dune__exe__Lookahead", ("\0313\213I\026\021n\155\198!\021$\230z\234\198")); ("Dune__exe__InputFile", (",\0246\029z@\127T\235\227k~\t\138\213%")); ("Dune__exe__IL", ("\194\228\178\190\251\254\231\226\207\197c\133\253i\220\170")); ("Dune__exe__GrammarFunctor", ("\139\015m\230\161\218\014\241\156v\017\182\017=\215\030")); ("Dune__exe__Grammar", ("\206h\026\183\149X\202a=\181,\16851\132e")); ("Dune__exe__GSet", ("\246\0066\220ky~\0042_c\205p\186\249\170")); ("Dune__exe__GMap", ("z5C\250t+\028\210\224\015Z'{U-\242")); ("Dune__exe__Front", ("\148\176\180\242\232x\020\016\239\205>I\021\\n*")); ("Dune__exe__BasicSyntax", ("\219\025F6\236\222\186\020\209\135\130+\131\228\012\003")); ("Dune__exe__Action", ("c\225H \249\179\190\007`[X\019\132@\208\193")); ("Dune__exe", ("\137\000\197\175$\007]\218\141\248\172\212\146c\153\212")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
sig type state = L.t Map.t val closure : state -> state end
