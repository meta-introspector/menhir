type t
val sexp_of_t : t -> Sexplib0.Sexp.t
val user_exn : t -> exn
val sub_sexp : t -> Parsexp__.Import.Sexp.t
val location : t -> Parsexp__.Positions.range option
val report : Format.formatter -> filename:string -> t -> unit
exception Of_sexp_error of t
val raise :
  user_exn:exn ->
  sub_sexp:Parsexp__.Import.Sexp.t ->
  ("DEBUG:rule", [Tag1 (("t", 584), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/of_sexp_error.mli", 3, 14, 14), ("src/of_sexp_error.mli", 3, 14, 48), 0), [(("deriving_inline", (("src/of_sexp_error.mli", 3, 14, 24), ("src/of_sexp_error.mli", 3, 14, 39), 0)), ([([(((("sexp_of"), (("src/of_sexp_error.mli", 3, 14, 40), ("src/of_sexp_error.mli", 3, 14, 47), 0))), (("src/of_sexp_error.mli", 3, 14, 40), ("src/of_sexp_error.mli", 3, 14, 47), 0), 0, 0)], (("src/of_sexp_error.mli", 3, 14, 40), ("src/of_sexp_error.mli", 3, 14, 47), 0))]), (("src/of_sexp_error.mli", 3, 14, 21), ("src/of_sexp_error.mli", 3, 14, 48), 0))], 0, 0, Tag1 ("Parsexp__Of_sexp_error", 0)), 1, 0); (("sexp_of_t", 585), ((Tag1 (0, (Tag3 ((("t", 584)), 0, (0)), 100000000, 0, -30), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("src/of_sexp_error.mli", 8, 90, 92), ("src/of_sexp_error.mli", 8, 90, 128), 0), 0, Tag1 ("Parsexp__Of_sexp_error", 1)), 0); (("user_exn", 586), ((Tag1 (0, (Tag3 ((("t", 584)), 0, (0)), 100000000, 0, -27), (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0, (("src/of_sexp_error.mli", 15, 213, 213), ("src/of_sexp_error.mli", 15, 213, 236), 0), 0, Tag1 ("Parsexp__Of_sexp_error", 2)), 0); (("sub_sexp", 587), ((Tag1 (0, (Tag3 ((("t", 584)), 0, (0)), 100000000, 0, -24), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("src/of_sexp_error.mli", 18, 286, 286), ("src/of_sexp_error.mli", 18, 286, 312), 0), 0, Tag1 ("Parsexp__Of_sexp_error", 3)), 0); (("location", 588), ((Tag1 (0, (Tag3 ((("t", 584)), 0, (0)), 100000000, 0, -21), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "range"), 0, (0)), 100000000, 0, -20)], (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("src/of_sexp_error.mli", 21, 379, 379), ("src/of_sexp_error.mli", 21, 379, 421), 0), 0, Tag1 ("Parsexp__Of_sexp_error", 4)), 0); (("report", 589), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -17), (Tag1 (("filename"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -16), (Tag1 (0, (Tag3 ((("t", 584)), 0, (0)), 100000000, 0, -15), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("src/of_sexp_error.mli", 24, 462, 462), ("src/of_sexp_error.mli", 24, 462, 523), 0), 0, Tag1 ("Parsexp__Of_sexp_error", 5)), 0); Tag2 (("Of_sexp_error", 590), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((("t", 584)), 0, (0)), 100000000, 0, -10)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Parsexp__Of_sexp_error", 6)), 2, 0); (("raise", 591), ((Tag1 (("user_exn"), (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -9), (Tag1 (("sub_sexp"), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Import"), "Sexp"), "t"), 0, (0)), 100000000, 0, -8), (Tag1 (("location"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "range"), 0, (0)), 100000000, 0, -7)], (0)), 100000000, 0, -6), ((("a")), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/of_sexp_error.mli", 29, 609, 609), ("src/of_sexp_error.mli", 29, 609, 693), 0), 0, Tag1 ("Parsexp__Of_sexp_error", 7)), 0)], "Parsexp__Of_sexp_error", [("Parsexp__Of_sexp_error", ("\253\171Y\150\210\218\191\255\160\211\134d/l\132\228")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("Parsexp__Positions", ("BE\135\222xW\224\233\184\004o\169\248\bH\230")); ("Parsexp__Import", ("\017\029\157\225\239\135p*0\207\146\197\020\128\195!")); ("Parsexp__", ("\182\180\203\030\218\020\246\196\221\171_\030GE\171\192")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
location:Parsexp__.Positions.range option -> 'a
