module Name = Odoc_name
type t_value = {
  val_name : Name.t;
  mutable val_info : Odoc_types.info option;
  val_type : Types.type_expr;
  val_recursive : bool;
  mutable val_parameters : Odoc_parameter.parameter list;
  mutable val_code : string option;
  mutable val_loc : Odoc_types.location;
}
type t_attribute = {
  att_value : t_value;
  att_mutable : bool;
  att_virtual : bool;
}
type t_method = {
  met_value : t_value;
  met_private : bool;
  met_virtual : bool;
}
val value_parameter_text_by_name :
  t_value -> string -> Odoc_types.text option
val update_value_parameters_text : t_value -> unit
val dummy_parameter_list : Types.type_expr -> Odoc_parameter.param_info list
("DEBUG:rule", [Tag3 (("Name", 445), 1, (Tag3 ((Tag2 ("Odoc_name"))), 0, (("odoc_value.mli", 18, 1166, 1166), ("odoc_value.mli", 18, 1166, 1189), 0), Tag1 ("Odoc_value", 0)), 0, 0); Tag1 (("t_value", 446), (0, 0, [[(("val_name", 291), 0, (Tag3 (Tag1 ((("Name", 445)), "t"), 0, (0)), 100000000, 0, -24), (("odoc_value.mli", 23, 1222, 1224), ("odoc_value.mli", 23, 1222, 1242), 0), 0, Tag1 ("Odoc_value", 3)); (("val_info", 311), 1, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -26)], (0)), 100000000, 0, -25), (("odoc_value.mli", 24, 1243, 1245), ("odoc_value.mli", 24, 1243, 1287), 0), 0, Tag1 ("Odoc_value", 4)); (("val_type", 418), 0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -27), (("odoc_value.mli", 25, 1288, 1290), ("odoc_value.mli", 25, 1288, 1317), 0), 0, Tag1 ("Odoc_value", 5)); (("val_recursive", 419), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -28), (("odoc_value.mli", 26, 1318, 1320), ("odoc_value.mli", 26, 1318, 1341), 0), 0, Tag1 ("Odoc_value", 6)); (("val_parameters", 430), 1, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Odoc_parameter")), "parameter"), 0, (0)), 100000000, 0, -30)], (0)), 100000000, 0, -29), (("odoc_value.mli", 27, 1342, 1344), ("odoc_value.mli", 27, 1342, 1399), 0), 0, Tag1 ("Odoc_value", 7)); (("val_code", 431), 1, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -32)], (0)), 100000000, 0, -31), (("odoc_value.mli", 28, 1400, 1402), ("odoc_value.mli", 28, 1400, 1435), 0), 0, Tag1 ("Odoc_value", 8)); (("val_loc", 432), 1, (Tag3 (Tag1 ((Tag2 ("Odoc_types")), "location"), 0, (0)), 100000000, 0, -33), (("odoc_value.mli", 29, 1436, 1438), ("odoc_value.mli", 29, 1436, 1476), 0), 0, Tag1 ("Odoc_value", 9))]], 1, 0, 0, 0, 0, 0, (("odoc_value.mli", 22, 1205, 1205), ("odoc_value.mli", 30, 1477, 1478), 0), 0, 0, 0, Tag1 ("Odoc_value", 1)), 1, 0); Tag1 (("t_attribute", 447), (0, 0, [[(("att_value", 434), 0, (Tag3 ((("t_value", 446)), 0, (0)), 100000000, 0, -21), (("odoc_value.mli", 34, 1535, 1537), ("odoc_value.mli", 34, 1535, 1557), 0), 0, Tag1 ("Odoc_value", 11)); (("att_mutable", 435), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -22), (("odoc_value.mli", 35, 1558, 1560), ("odoc_value.mli", 35, 1558, 1579), 0), 0, Tag1 ("Odoc_value", 12)); (("att_virtual", 436), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -23), (("odoc_value.mli", 36, 1580, 1582), ("odoc_value.mli", 36, 1580, 1601), 0), 0, Tag1 ("Odoc_value", 13))]], 1, 0, 0, 0, 0, 0, (("odoc_value.mli", 33, 1514, 1514), ("odoc_value.mli", 37, 1602, 1603), 0), 0, 0, 0, Tag1 ("Odoc_value", 10)), 1, 0); Tag1 (("t_method", 448), (0, 0, [[(("met_value", 438), 0, (Tag3 ((("t_value", 446)), 0, (0)), 100000000, 0, -18), (("odoc_value.mli", 41, 1667, 1669), ("odoc_value.mli", 41, 1667, 1689), 0), 0, Tag1 ("Odoc_value", 15)); (("met_private", 439), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -19), (("odoc_value.mli", 42, 1690, 1692), ("odoc_value.mli", 42, 1690, 1711), 0), 0, Tag1 ("Odoc_value", 16)); (("met_virtual", 440), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -20), (("odoc_value.mli", 43, 1712, 1714), ("odoc_value.mli", 43, 1712, 1733), 0), 0, Tag1 ("Odoc_value", 17))]], 1, 0, 0, 0, 0, 0, (("odoc_value.mli", 40, 1649, 1649), ("odoc_value.mli", 44, 1734, 1735), 0), 0, 0, 0, Tag1 ("Odoc_value", 14)), 1, 0); (("value_parameter_text_by_name", 449), ((Tag1 (0, (Tag3 ((("t_value", 446)), 0, (0)), 100000000, 0, -17), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -16), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -15)], (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("odoc_value.mli", 49, 1796, 1796), ("odoc_value.mli", 49, 1796, 1874), 0), 0, Tag1 ("Odoc_value", 18)), 0); (("update_value_parameters_text", 450), ((Tag1 (0, (Tag3 ((("t_value", 446)), 0, (0)), 100000000, 0, -11), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("odoc_value.mli", 53, 1971, 1971), ("odoc_value.mli", 53, 1971, 2021), 0), 0, Tag1 ("Odoc_value", 19)), 0); (("dummy_parameter_list", 451), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -8), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Odoc_parameter")), "param_info"), 0, (0)), 100000000, 0, -7)], (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("odoc_value.mli", 56, 2104, 2104), ("odoc_value.mli", 56, 2104, 2180), 0), 0, Tag1 ("Odoc_value", 20)), 0); (("is_function", 452), ((Tag1 (0, (Tag3 ((("t_value", 446)), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("odoc_value.mli", 63, 2532, 2532), ("odoc_value.mli", 63, 2532, 2565), 0), 0, Tag1 ("Odoc_value", 21)), 0)], "Odoc_value", [("Odoc_value", ("[\228\023\254\173\230\165o\154\026\024\245\180\229\015;")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Odoc_types", ("<k{\137\201\170z%E\221\170\147\151\127\189\015")); ("Odoc_parameter", ("\194t\209\014\154<\178\\\138k\221\183w\133L\167")); ("Odoc_name", ("\248'\1872Z\r\160\146\012'\180V\240\1577f")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216"))], [(0)])
val is_function : t_value -> bool
