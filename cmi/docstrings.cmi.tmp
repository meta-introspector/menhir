val init : unit -> unit
val warn_bad_docstrings : unit -> unit
type docstring
val docstring : string -> Location.t -> docstring
val register : docstring -> unit
val docstring_body : docstring -> string
val docstring_loc : docstring -> Location.t
val set_pre_docstrings : Lexing.position -> docstring list -> unit
val set_post_docstrings : Lexing.position -> docstring list -> unit
val set_floating_docstrings : Lexing.position -> docstring list -> unit
val set_pre_extra_docstrings : Lexing.position -> docstring list -> unit
val set_post_extra_docstrings : Lexing.position -> docstring list -> unit
type docs = { docs_pre : docstring option; docs_post : docstring option; }
val empty_docs : docs
val docs_attr : docstring -> Parsetree.attribute
val add_docs_attrs : docs -> Parsetree.attributes -> Parsetree.attributes
val symbol_docs : unit -> docs
val symbol_docs_lazy : unit -> docs Lazy.t
val rhs_docs : int -> int -> docs
val rhs_docs_lazy : int -> int -> docs Lazy.t
val mark_symbol_docs : unit -> unit
val mark_rhs_docs : int -> int -> unit
type info = docstring option
val empty_info : info
val info_attr : docstring -> Parsetree.attribute
val add_info_attrs : info -> Parsetree.attributes -> Parsetree.attributes
val symbol_info : unit -> info
val rhs_info : int -> info
type text = docstring list
val empty_text : text
val empty_text_lazy : text Lazy.t
val text_attr : docstring -> Parsetree.attribute
val add_text_attrs : text -> Parsetree.attributes -> Parsetree.attributes
val symbol_text : unit -> text
val symbol_text_lazy : unit -> text Lazy.t
val rhs_text : int -> text
val rhs_text_lazy : int -> text Lazy.t
val symbol_pre_extra_text : unit -> text
val symbol_post_extra_text : unit -> text
val rhs_pre_extra_text : int -> text
val rhs_post_extra_text : int -> text
val rhs_post_text : int -> text
module WithMenhir :
  sig
    val symbol_docs : Lexing.position * Lexing.position -> docs
    val symbol_docs_lazy : Lexing.position * Lexing.position -> docs Lazy.t
    val rhs_docs : Lexing.position -> Lexing.position -> docs
    val rhs_docs_lazy : Lexing.position -> Lexing.position -> docs Lazy.t
    val mark_symbol_docs : Lexing.position * Lexing.position -> unit
    val mark_rhs_docs : Lexing.position -> Lexing.position -> unit
    val symbol_info : Lexing.position -> info
    val rhs_info : Lexing.position -> info
    val symbol_text : Lexing.position -> text
    val symbol_text_lazy : Lexing.position -> text Lazy.t
    val rhs_text : Lexing.position -> text
    val rhs_text_lazy : Lexing.position -> text Lazy.t
    val symbol_pre_extra_text : Lexing.position -> text
    val symbol_post_extra_text : Lexing.position -> text
    val rhs_pre_extra_text : Lexing.position -> text
    val rhs_post_extra_text : Lexing.position -> text
    val rhs_post_text : Lexing.position -> text("DEBUG:rule", [(("init", 507), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -149), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -148), 0), 100000000, 0, -147), 0, (("parsing/docstrings.mli", 24, 1240, 1240), ("parsing/docstrings.mli", 24, 1240, 1263), 0), 0, Tag1 ("Docstrings", 0)), 0); (("warn_bad_docstrings", 508), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -146), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -145), 0), 100000000, 0, -144), 0, (("parsing/docstrings.mli", 27, 1326, 1326), ("parsing/docstrings.mli", 27, 1326, 1364), 0), 0, Tag1 ("Docstrings", 1)), 0); Tag1 (("docstring", 509), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("parsing/docstrings.mli", 32, 1419, 1419), ("parsing/docstrings.mli", 32, 1419, 1433), 0), 0, 0, 0, Tag1 ("Docstrings", 2)), 1, 0); (("docstring", 510), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -143), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Location")), "t"), 0, (0)), 100000000, 0, -142), (Tag3 ((("docstring", 509)), 0, (0)), 100000000, 0, -141), 0), 100000000, 0, -140), 0), 100000000, 0, -139), 0, (("parsing/docstrings.mli", 35, 1461, 1461), ("parsing/docstrings.mli", 35, 1461, 1510), 0), 0, Tag1 ("Docstrings", 3)), 0); (("register", 511), ((Tag1 (0, (Tag3 ((("docstring", 509)), 0, (0)), 100000000, 0, -138), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -137), 0), 100000000, 0, -136), 0, (("parsing/docstrings.mli", 38, 1540, 1540), ("parsing/docstrings.mli", 38, 1540, 1572), 0), 0, Tag1 ("Docstrings", 4)), 0); (("docstring_body", 512), ((Tag1 (0, (Tag3 ((("docstring", 509)), 0, (0)), 100000000, 0, -135), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -134), 0), 100000000, 0, -133), 0, (("parsing/docstrings.mli", 41, 1609, 1609), ("parsing/docstrings.mli", 41, 1609, 1649), 0), 0, Tag1 ("Docstrings", 5)), 0); (("docstring_loc", 513), ((Tag1 (0, (Tag3 ((("docstring", 509)), 0, (0)), 100000000, 0, -132), (Tag3 (Tag1 ((Tag2 ("Location")), "t"), 0, (0)), 100000000, 0, -131), 0), 100000000, 0, -130), 0, (("parsing/docstrings.mli", 44, 1690, 1690), ("parsing/docstrings.mli", 44, 1690, 1733), 0), 0, Tag1 ("Docstrings", 6)), 0); (("set_pre_docstrings", 514), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -129), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("docstring", 509)), 0, (0)), 100000000, 0, -128)], (0)), 100000000, 0, -127), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -126), 0), 100000000, 0, -125), 0), 100000000, 0, -124), 0, (("parsing/docstrings.mli", 52, 1906, 1906), ("parsing/docstrings.mli", 52, 1906, 1972), 0), 0, Tag1 ("Docstrings", 7)), 0); (("set_post_docstrings", 515), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -123), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("docstring", 509)), 0, (0)), 100000000, 0, -122)], (0)), 100000000, 0, -121), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -120), 0), 100000000, 0, -119), 0), 100000000, 0, -118), 0, (("parsing/docstrings.mli", 55, 2022, 2022), ("parsing/docstrings.mli", 55, 2022, 2089), 0), 0, Tag1 ("Docstrings", 8)), 0); (("set_floating_docstrings", 516), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -117), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("docstring", 509)), 0, (0)), 100000000, 0, -116)], (0)), 100000000, 0, -115), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -114), 0), 100000000, 0, -113), 0), 100000000, 0, -112), 0, (("parsing/docstrings.mli", 58, 2145, 2145), ("parsing/docstrings.mli", 58, 2145, 2216), 0), 0, Tag1 ("Docstrings", 9)), 0); (("set_pre_extra_docstrings", 517), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -111), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("docstring", 509)), 0, (0)), 100000000, 0, -110)], (0)), 100000000, 0, -109), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), 0, (("parsing/docstrings.mli", 61, 2292, 2292), ("parsing/docstrings.mli", 61, 2292, 2364), 0), 0, Tag1 ("Docstrings", 10)), 0); (("set_post_extra_docstrings", 518), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -105), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("docstring", 509)), 0, (0)), 100000000, 0, -104)], (0)), 100000000, 0, -103), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -102), 0), 100000000, 0, -101), 0), 100000000, 0, -100), 0, (("parsing/docstrings.mli", 64, 2439, 2439), ("parsing/docstrings.mli", 64, 2439, 2512), 0), 0, Tag1 ("Docstrings", 11)), 0); Tag1 (("docs", 519), (0, 0, [[(("docs_pre", 372), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("docstring", 509)), 0, (0)), 100000000, 0, -97)], (0)), 100000000, 0, -96), (("parsing/docstrings.mli", 71, 2612, 2616), ("parsing/docstrings.mli", 71, 2612, 2643), 0), 0, Tag1 ("Docstrings", 13)); (("docs_post", 373), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("docstring", 509)), 0, (0)), 100000000, 0, -99)], (0)), 100000000, 0, -98), (("parsing/docstrings.mli", 72, 2644, 2648), ("parsing/docstrings.mli", 72, 2644, 2676), 0), 0, Tag1 ("Docstrings", 14))]], 1, 0, 0, 0, 0, 0, (("parsing/docstrings.mli", 70, 2600, 2600), ("parsing/docstrings.mli", 72, 2644, 2678), 0), 0, 0, 0, Tag1 ("Docstrings", 12)), 1, 0); (("empty_docs", 520), ((Tag3 ((("docs", 519)), 0, (0)), 100000000, 0, -95), 0, (("parsing/docstrings.mli", 74, 2680, 2680), ("parsing/docstrings.mli", 74, 2680, 2701), 0), 0, Tag1 ("Docstrings", 15)), 0); (("docs_attr", 521), ((Tag1 (0, (Tag3 ((("docstring", 509)), 0, (0)), 100000000, 0, -94), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attribute"), 0, (0)), 100000000, 0, -93), 0), 100000000, 0, -92), 0, (("parsing/docstrings.mli", 76, 2703, 2703), ("parsing/docstrings.mli", 76, 2703, 2751), 0), 0, Tag1 ("Docstrings", 18)), 0); (("add_docs_attrs", 522), ((Tag1 (0, (Tag3 ((("docs", 519)), 0, (0)), 100000000, 0, -91), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attributes"), 0, (0)), 100000000, 0, -90), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attributes"), 0, (0)), 100000000, 0, -89), 0), 100000000, 0, -88), 0), 100000000, 0, -87), 0, (("parsing/docstrings.mli", 80, 2839, 2839), ("parsing/docstrings.mli", 80, 2839, 2912), 0), 0, Tag1 ("Docstrings", 19)), 0); (("symbol_docs", 523), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -86), (Tag3 ((("docs", 519)), 0, (0)), 100000000, 0, -85), 0), 100000000, 0, -84), 0, (("parsing/docstrings.mli", 84, 3039, 3039), ("parsing/docstrings.mli", 84, 3039, 3069), 0), 0, Tag1 ("Docstrings", 20)), 0); (("symbol_docs_lazy", 524), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -83), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lazy"), "t"), [(Tag3 ((("docs", 519)), 0, (0)), 100000000, 0, -82)], (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0, (("parsing/docstrings.mli", 85, 3070, 3070), ("parsing/docstrings.mli", 85, 3070, 3112), 0), 0, Tag1 ("Docstrings", 21)), 0); (("rhs_docs", 525), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -79), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -78), (Tag3 ((("docs", 519)), 0, (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0), 100000000, 0, -75), 0, (("parsing/docstrings.mli", 90, 3258, 3258), ("parsing/docstrings.mli", 90, 3258, 3291), 0), 0, Tag1 ("Docstrings", 22)), 0); (("rhs_docs_lazy", 526), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -74), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -73), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lazy"), "t"), [(Tag3 ((("docs", 519)), 0, (0)), 100000000, 0, -72)], (0)), 100000000, 0, -71), 0), 100000000, 0, -70), 0), 100000000, 0, -69), 0, (("parsing/docstrings.mli", 91, 3292, 3292), ("parsing/docstrings.mli", 91, 3292, 3337), 0), 0, Tag1 ("Docstrings", 23)), 0); (("mark_symbol_docs", 527), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -68), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -67), 0), 100000000, 0, -66), 0, (("parsing/docstrings.mli", 95, 3427, 3427), ("parsing/docstrings.mli", 95, 3427, 3462), 0), 0, Tag1 ("Docstrings", 24)), 0); (("mark_rhs_docs", 528), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -65), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -64), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -63), 0), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("parsing/docstrings.mli", 99, 3580, 3580), ("parsing/docstrings.mli", 99, 3580, 3618), 0), 0, Tag1 ("Docstrings", 25)), 0); Tag1 (("info", 529), (0, 0, 0, 1, ((Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("docstring", 509)), 0, (0)), 100000000, 0, -60)], (0)), 100000000, 0, -59)), 0, 0, 0, 0, (("parsing/docstrings.mli", 106, 3743, 3743), ("parsing/docstrings.mli", 106, 3743, 3771), 0), 0, 0, 0, Tag1 ("Docstrings", 26)), 1, 0); (("empty_info", 530), ((Tag3 ((("info", 529)), 0, (0)), 100000000, 0, -58), 0, (("parsing/docstrings.mli", 108, 3773, 3773), ("parsing/docstrings.mli", 108, 3773, 3794), 0), 0, Tag1 ("Docstrings", 27)), 0); (("info_attr", 531), ((Tag1 (0, (Tag3 ((("docstring", 509)), 0, (0)), 100000000, 0, -57), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attribute"), 0, (0)), 100000000, 0, -56), 0), 100000000, 0, -55), 0, (("parsing/docstrings.mli", 110, 3796, 3796), ("parsing/docstrings.mli", 110, 3796, 3844), 0), 0, Tag1 ("Docstrings", 28)), 0); (("add_info_attrs", 532), ((Tag1 (0, (Tag3 ((("info", 529)), 0, (0)), 100000000, 0, -54), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attributes"), 0, (0)), 100000000, 0, -53), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attributes"), 0, (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0), 100000000, 0, -50), 0, (("parsing/docstrings.mli", 114, 3924, 3924), ("parsing/docstrings.mli", 114, 3924, 3997), 0), 0, Tag1 ("Docstrings", 29)), 0); (("symbol_info", 533), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -49), (Tag3 ((("info", 529)), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("parsing/docstrings.mli", 117, 4051, 4051), ("parsing/docstrings.mli", 117, 4051, 4081), 0), 0, Tag1 ("Docstrings", 30)), 0); (("rhs_info", 534), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -46), (Tag3 ((("info", 529)), 0, (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("parsing/docstrings.mli", 120, 4153, 4153), ("parsing/docstrings.mli", 120, 4153, 4179), 0), 0, Tag1 ("Docstrings", 31)), 0); Tag1 (("text", 535), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("docstring", 509)), 0, (0)), 100000000, 0, -43)], (0)), 100000000, 0, -42)), 0, 0, 0, 0, (("parsing/docstrings.mli", 127, 4299, 4299), ("parsing/docstrings.mli", 127, 4299, 4325), 0), 0, 0, 0, Tag1 ("Docstrings", 32)), 1, 0); (("empty_text", 536), ((Tag3 ((("text", 535)), 0, (0)), 100000000, 0, -41), 0, (("parsing/docstrings.mli", 129, 4327, 4327), ("parsing/docstrings.mli", 129, 4327, 4348), 0), 0, Tag1 ("Docstrings", 33)), 0); (("empty_text_lazy", 537), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lazy"), "t"), [(Tag3 ((("text", 535)), 0, (0)), 100000000, 0, -40)], (0)), 100000000, 0, -39), 0, (("parsing/docstrings.mli", 130, 4349, 4349), ("parsing/docstrings.mli", 130, 4349, 4382), 0), 0, Tag1 ("Docstrings", 34)), 0); (("text_attr", 538), ((Tag1 (0, (Tag3 ((("docstring", 509)), 0, (0)), 100000000, 0, -38), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attribute"), 0, (0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("parsing/docstrings.mli", 132, 4384, 4384), ("parsing/docstrings.mli", 132, 4384, 4432), 0), 0, Tag1 ("Docstrings", 35)), 0); (("add_text_attrs", 539), ((Tag1 (0, (Tag3 ((("text", 535)), 0, (0)), 100000000, 0, -35), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attributes"), 0, (0)), 100000000, 0, -34), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attributes"), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("parsing/docstrings.mli", 135, 4502, 4502), ("parsing/docstrings.mli", 135, 4502, 4575), 0), 0, Tag1 ("Docstrings", 36)), 0); (("symbol_text", 540), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -30), (Tag3 ((("text", 535)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("parsing/docstrings.mli", 138, 4629, 4629), ("parsing/docstrings.mli", 138, 4629, 4659), 0), 0, Tag1 ("Docstrings", 37)), 0); (("symbol_text_lazy", 541), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -27), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lazy"), "t"), [(Tag3 ((("text", 535)), 0, (0)), 100000000, 0, -26)], (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("parsing/docstrings.mli", 139, 4660, 4660), ("parsing/docstrings.mli", 139, 4660, 4702), 0), 0, Tag1 ("Docstrings", 38)), 0); (("rhs_text", 542), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -23), (Tag3 ((("text", 535)), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("parsing/docstrings.mli", 142, 4770, 4770), ("parsing/docstrings.mli", 142, 4770, 4796), 0), 0, Tag1 ("Docstrings", 39)), 0); (("rhs_text_lazy", 543), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -20), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lazy"), "t"), [(Tag3 ((("text", 535)), 0, (0)), 100000000, 0, -19)], (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("parsing/docstrings.mli", 143, 4797, 4797), ("parsing/docstrings.mli", 143, 4797, 4835), 0), 0, Tag1 ("Docstrings", 40)), 0); (("symbol_pre_extra_text", 544), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -16), (Tag3 ((("text", 535)), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("parsing/docstrings.mli", 153, 5148, 5148), ("parsing/docstrings.mli", 153, 5148, 5188), 0), 0, Tag1 ("Docstrings", 41)), 0); (("symbol_post_extra_text", 545), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -13), (Tag3 ((("text", 535)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("parsing/docstrings.mli", 156, 5248, 5248), ("parsing/docstrings.mli", 156, 5248, 5289), 0), 0, Tag1 ("Docstrings", 42)), 0); (("rhs_pre_extra_text", 546), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -10), (Tag3 ((("text", 535)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("parsing/docstrings.mli", 159, 5363, 5363), ("parsing/docstrings.mli", 159, 5363, 5399), 0), 0, Tag1 ("Docstrings", 43)), 0); (("rhs_post_extra_text", 547), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7), (Tag3 ((("text", 535)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("parsing/docstrings.mli", 162, 5473, 5473), ("parsing/docstrings.mli", 162, 5473, 5510), 0), 0, Tag1 ("Docstrings", 44)), 0); (("rhs_post_text", 548), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -4), (Tag3 ((("text", 535)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("parsing/docstrings.mli", 165, 5573, 5573), ("parsing/docstrings.mli", 165, 5573, 5604), 0), 0, Tag1 ("Docstrings", 45)), 0); Tag3 (("WithMenhir", 549), 0, (Tag1 ([(("symbol_docs", 550), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -215); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -216)]), 100000000, 0, -214), (Tag3 ((("docs", 519)), 0, (0)), 100000000, 0, -213), 0), 100000000, 0, -212), 0, (("parsing/docstrings.mli", 170, 5754, 5754), ("parsing/docstrings.mli", 170, 5754, 5813), 0), 0, Tag1 ("Docstrings", 46)), 0); (("symbol_docs_lazy", 551), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -210); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -211)]), 100000000, 0, -209), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lazy"), "t"), [(Tag3 ((("docs", 519)), 0, (0)), 100000000, 0, -208)], (0)), 100000000, 0, -207), 0), 100000000, 0, -206), 0, (("parsing/docstrings.mli", 171, 5814, 5814), ("parsing/docstrings.mli", 171, 5814, 5885), 0), 0, Tag1 ("Docstrings", 47)), 0); (("rhs_docs", 552), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -205), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -204), (Tag3 ((("docs", 519)), 0, (0)), 100000000, 0, -203), 0), 100000000, 0, -202), 0), 100000000, 0, -201), 0, (("parsing/docstrings.mli", 176, 6031, 6031), ("parsing/docstrings.mli", 176, 6031, 6088), 0), 0, Tag1 ("Docstrings", 48)), 0); (("rhs_docs_lazy", 553), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -200), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -199), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lazy"), "t"), [(Tag3 ((("docs", 519)), 0, (0)), 100000000, 0, -198)], (0)), 100000000, 0, -197), 0), 100000000, 0, -196), 0), 100000000, 0, -195), 0, (("parsing/docstrings.mli", 177, 6089, 6089), ("parsing/docstrings.mli", 177, 6089, 6158), 0), 0, Tag1 ("Docstrings", 49)), 0); (("mark_symbol_docs", 554), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -193); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -194)]), 100000000, 0, -192), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -191), 0), 100000000, 0, -190), 0, (("parsing/docstrings.mli", 181, 6248, 6248), ("parsing/docstrings.mli", 181, 6248, 6312), 0), 0, Tag1 ("Docstrings", 50)), 0); (("mark_rhs_docs", 555), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -189), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -188), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -187), 0), 100000000, 0, -186), 0), 100000000, 0, -185), 0, (("parsing/docstrings.mli", 185, 6430, 6430), ("parsing/docstrings.mli", 185, 6430, 6492), 0), 0, Tag1 ("Docstrings", 51)), 0); (("symbol_info", 556), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -184), (Tag3 ((("info", 529)), 0, (0)), 100000000, 0, -183), 0), 100000000, 0, -182), 0, (("parsing/docstrings.mli", 188, 6546, 6546), ("parsing/docstrings.mli", 188, 6546, 6587), 0), 0, Tag1 ("Docstrings", 52)), 0); (("rhs_info", 557), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -181), (Tag3 ((("info", 529)), 0, (0)), 100000000, 0, -180), 0), 100000000, 0, -179), 0, (("parsing/docstrings.mli", 191, 6659, 6659), ("parsing/docstrings.mli", 191, 6659, 6697), 0), 0, Tag1 ("Docstrings", 53)), 0); (("symbol_text", 558), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -178), (Tag3 ((("text", 535)), 0, (0)), 100000000, 0, -177), 0), 100000000, 0, -176), 0, (("parsing/docstrings.mli", 194, 6751, 6751), ("parsing/docstrings.mli", 194, 6751, 6792), 0), 0, Tag1 ("Docstrings", 54)), 0); (("symbol_text_lazy", 559), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -175), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lazy"), "t"), [(Tag3 ((("text", 535)), 0, (0)), 100000000, 0, -174)], (0)), 100000000, 0, -173), 0), 100000000, 0, -172), 0, (("parsing/docstrings.mli", 195, 6793, 6793), ("parsing/docstrings.mli", 195, 6793, 6846), 0), 0, Tag1 ("Docstrings", 55)), 0); (("rhs_text", 560), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -171), (Tag3 ((("text", 535)), 0, (0)), 100000000, 0, -170), 0), 100000000, 0, -169), 0, (("parsing/docstrings.mli", 198, 6914, 6914), ("parsing/docstrings.mli", 198, 6914, 6952), 0), 0, Tag1 ("Docstrings", 56)), 0); (("rhs_text_lazy", 561), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -168), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lazy"), "t"), [(Tag3 ((("text", 535)), 0, (0)), 100000000, 0, -167)], (0)), 100000000, 0, -166), 0), 100000000, 0, -165), 0, (("parsing/docstrings.mli", 199, 6953, 6953), ("parsing/docstrings.mli", 199, 6953, 7003), 0), 0, Tag1 ("Docstrings", 57)), 0); (("symbol_pre_extra_text", 562), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -164), (Tag3 ((("text", 535)), 0, (0)), 100000000, 0, -163), 0), 100000000, 0, -162), 0, (("parsing/docstrings.mli", 209, 7316, 7316), ("parsing/docstrings.mli", 209, 7316, 7367), 0), 0, Tag1 ("Docstrings", 58)), 0); (("symbol_post_extra_text", 563), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -161), (Tag3 ((("text", 535)), 0, (0)), 100000000, 0, -160), 0), 100000000, 0, -159), 0, (("parsing/docstrings.mli", 212, 7427, 7427), ("parsing/docstrings.mli", 212, 7427, 7479), 0), 0, Tag1 ("Docstrings", 59)), 0); (("rhs_pre_extra_text", 564), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -158), (Tag3 ((("text", 535)), 0, (0)), 100000000, 0, -157), 0), 100000000, 0, -156), 0, (("parsing/docstrings.mli", 215, 7553, 7553), ("parsing/docstrings.mli", 215, 7553, 7601), 0), 0, Tag1 ("Docstrings", 60)), 0); (("rhs_post_extra_text", 565), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -155), (Tag3 ((("text", 535)), 0, (0)), 100000000, 0, -154), 0), 100000000, 0, -153), 0, (("parsing/docstrings.mli", 218, 7675, 7675), ("parsing/docstrings.mli", 218, 7675, 7724), 0), 0, Tag1 ("Docstrings", 61)), 0); (("rhs_post_text", 566), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -152), (Tag3 ((("text", 535)), 0, (0)), 100000000, 0, -151), 0), 100000000, 0, -150), 0, (("parsing/docstrings.mli", 221, 7787, 7787), ("parsing/docstrings.mli", 221, 7787, 7830), 0), 0, Tag1 ("Docstrings", 62)), 0)]), 0, (("parsing/docstrings.mli", 167, 5606, 5606), ("parsing/docstrings.mli", 223, 7832, 7835), 0), Tag1 ("Docstrings", 63)), 0, 0)], "Docstrings", [("Docstrings", ("\216\171\176\031*\203\162\186%\175\201qq\189\139U")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216"))], [(0)])

  end
