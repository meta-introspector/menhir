type option_name = string list
type option_locality = OptDefault | OptLocal | OptExport | OptGlobal
module MakeStringTable :
  functor
    (A : sig
           val key : option_name
           val title : string
           val member_message : string -> bool -> Pp.t
         end)
    -> sig val v : unit -> CString.Set.t val active : string -> bool end
module MakeRefTable :
  functor
    (A : sig
           type t
           module Set :
             sig
               type elt = t
               type t
               val empty : t
               val is_empty : t -> bool
               val mem : elt -> t -> bool
               val add : elt -> t -> t
               val singleton : elt -> t
               val remove : elt -> t -> t
               val union : t -> t -> t
               val inter : t -> t -> t
               val diff : t -> t -> t
               val compare : t -> t -> int
               val equal : t -> t -> bool
               val subset : t -> t -> bool
               val iter : (elt -> unit) -> t -> unit
               val fold : (elt -> 'a -> 'a) -> t -> 'a -> 'a
               val for_all : (elt -> bool) -> t -> bool
               val exists : (elt -> bool) -> t -> bool
               val filter : (elt -> bool) -> t -> t
               val partition : (elt -> bool) -> t -> t * t
               val cardinal : t -> int
               val elements : t -> elt list
               val min_elt : t -> elt
               val max_elt : t -> elt
               val choose : t -> elt
               val split : elt -> t -> t * bool * t
             end
           val encode : Environ.env -> Libnames.qualid -> t
           val subst : Mod_subst.substitution -> t -> t
           val printer : t -> Pp.t
           val key : option_name
           val title : string
           val member_message : t -> bool -> Pp.t
         end)
    ->
    sig
      val v : unit -> A.Set.t
      val active : A.t -> bool
      val set : A.t -> bool -> unit
    end
type 'a option_sig = {
  optstage : Summary.Stage.t;
  optdepr : Deprecation.t option;
  optkey : option_name;
  optread : unit -> 'a;
  optwrite : 'a -> unit;
}
val declare_int_option :
  ?preprocess:(int option -> int option) -> int option option_sig -> unit
val declare_bool_option :
  ?preprocess:(bool -> bool) -> bool option_sig -> unit
val declare_string_option :
  ?preprocess:(string -> string) -> string option_sig -> unit
val declare_stringopt_option :
  ?preprocess:(string option -> string option) ->
  string option option_sig -> unit
type 'a getter = { get : unit -> 'a; }
type 'a opt_decl =
    ?stage:Summary.Stage.t ->
    ?depr:Deprecation.t -> key:option_name -> value:'a -> unit -> 'a getter
val declare_int_option_and_ref : int opt_decl
val declare_intopt_option_and_ref : int option opt_decl
val declare_nat_option_and_ref : int opt_decl
val declare_bool_option_and_ref : bool opt_decl
val declare_string_option_and_ref : string opt_decl
val declare_stringopt_option_and_ref : string option opt_decl
val declare_interpreted_string_option_and_ref :
  (string -> 'a) -> ('a -> string) -> 'a opt_decl
module OptionMap :
  sig
    type key = option_name
    type +'a t
    val empty : 'a t
    val is_empty : 'a t -> bool
    val mem : key -> 'a t -> bool
    val add : key -> 'a -> 'a t -> 'a t
    val update : key -> ('a option -> 'a option) -> 'a t -> 'a t
    val singleton : key -> 'a -> 'a t
    val remove : key -> 'a t -> 'a t
    val merge :
      (key -> 'a option -> 'b option -> 'c option) -> 'a t -> 'b t -> 'c t
    val union : (key -> 'a -> 'a -> 'a option) -> 'a t -> 'a t -> 'a t
    val compare : ('a -> 'a -> int) -> 'a t -> 'a t -> int
    val equal : ('a -> 'a -> bool) -> 'a t -> 'a t -> bool
    val iter : (key -> 'a -> unit) -> 'a t -> unit
    val fold : (key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b
    val for_all : (key -> 'a -> bool) -> 'a t -> bool
    val exists : (key -> 'a -> bool) -> 'a t -> bool
    val filter : (key -> 'a -> bool) -> 'a t -> 'a t
    val partition : (key -> 'a -> bool) -> 'a t -> 'a t * 'a t
    val cardinal : 'a t -> int
    val bindings : 'a t -> (key * 'a) list
    val min_binding : 'a t -> key * 'a
    val max_binding : 'a t -> key * 'a
    val choose : 'a t -> key * 'a
    val choose_opt : 'a t -> (key * 'a) option
    val split : key -> 'a t -> 'a t * 'a option * 'a t
    val find : key -> 'a t -> 'a
    val find_opt : key -> 'a t -> 'a option
    val map : ('a -> 'b) -> 'a t -> 'b t
    val mapi : (key -> 'a -> 'b) -> 'a t -> 'b t
  end
type 'a table_of_A = {
  add : Environ.env -> 'a -> unit;
  remove : Environ.env -> 'a -> unit;
  mem : Environ.env -> 'a -> unit;
  print : unit -> unit;
}
val get_string_table : option_name -> string table_of_A
val get_ref_table : option_name -> Libnames.qualid table_of_A
val set_int_option_value_gen :
  ?locality:option_locality ->
  ?stage:Summary.Stage.t -> option_name -> int option -> unit
val set_bool_option_value_gen :
  ?locality:option_locality ->
  ?stage:Summary.Stage.t -> option_name -> bool -> unit
val set_string_option_value_gen :
  ?locality:option_locality ->
  ?stage:Summary.Stage.t -> option_name -> string -> unit
val set_string_option_append_value_gen :
  ?locality:option_locality ->
  ?stage:Summary.Stage.t -> option_name -> string -> unit
val unset_option_value_gen :
  ?locality:option_locality -> ?stage:Summary.Stage.t -> option_name -> unit
val set_int_option_value :
  ?stage:Summary.Stage.t -> option_name -> int option -> unit
val set_bool_option_value :
  ?stage:Summary.Stage.t -> option_name -> bool -> unit
val set_string_option_value :
  ?stage:Summary.Stage.t -> option_name -> string -> unit
val print_option_value : option_name -> unit
type option_value =
    BoolValue of bool
  | IntValue of int option
  | StringValue of string
  | StringOptValue of string option
type table_value =
    StringRefValue of string
  | QualidRefValue of Libnames.qualid
val get_option_value : option_name -> (unit -> option_value) option
val set_option_value :
  ?locality:option_locality ->
  ?stage:Summary.Stage.t ->
  ('a -> option_value -> option_value) -> option_name -> 'a -> unit
type option_state = {
  opt_depr : Deprecation.t option;
  opt_value : option_value;
}
val get_tables : unit -> option_state OptionMap.t
val print_tables : unit -> Pp.t
type iter_table_aux = {
  aux : 'a. 'a table_of_A -> Environ.env -> 'a -> unit;
}
val iter_table :
  Environ.env -> iter_table_aux -> option_name -> table_value list -> unit
("DEBUG:rule", [Tag1 (("option_name", 963), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -259)], (0)), 100000000, 0, -258)), 0, 0, 0, 0, (("library/goptions.mli", 48, 2025, 2025), ("library/goptions.mli", 48, 2025, 2055), 0), 0, 0, 0, Tag1 ("Goptions", 0)), 1, 0); Tag1 (("option_locality", 964), (0, 0, Tag1 ([(("OptDefault", 271), (0), 0, (("library/goptions.mli", 50, 2057, 2080), ("library/goptions.mli", 50, 2057, 2090), 0), 0, Tag1 ("Goptions", 2)); (("OptLocal", 272), (0), 0, (("library/goptions.mli", 50, 2057, 2091), ("library/goptions.mli", 50, 2057, 2101), 0), 0, Tag1 ("Goptions", 3)); (("OptExport", 273), (0), 0, (("library/goptions.mli", 50, 2057, 2102), ("library/goptions.mli", 50, 2057, 2113), 0), 0, Tag1 ("Goptions", 4)); (("OptGlobal", 274), (0), 0, (("library/goptions.mli", 50, 2057, 2114), ("library/goptions.mli", 50, 2057, 2125), 0), 0, Tag1 ("Goptions", 5))], 0), 1, 0, 0, 0, 0, 0, (("library/goptions.mli", 50, 2057, 2057), ("library/goptions.mli", 50, 2057, 2125), 0), 0, 1, 0, Tag1 ("Goptions", 1)), 1, 0); Tag3 (("MakeStringTable", 965), 0, (Tag2 (((("A", 1005)), Tag1 ([(("key", 1006), ((Tag3 ((("option_name", 963)), 0, (0)), 100000000, 0, -266), 0, (("library/goptions.mli", 65, 2662, 2669), ("library/goptions.mli", 65, 2662, 2690), 0), 0, Tag1 ("Goptions", 6)), 0); (("title", 1007), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -265), 0, (("library/goptions.mli", 66, 2691, 2698), ("library/goptions.mli", 66, 2691, 2716), 0), 0, Tag1 ("Goptions", 7)), 0); (("member_message", 1008), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -264), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -263), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -262), 0), 100000000, 0, -261), 0), 100000000, 0, -260), 0, (("library/goptions.mli", 67, 2717, 2724), ("library/goptions.mli", 67, 2717, 2767), 0), 0, Tag1 ("Goptions", 8)), 0)])), Tag1 ([(("v", 1009), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -272), (Tag3 (Tag1 (Tag1 ((Tag2 ("CString")), "Set"), "t"), 0, (0)), 100000000, 0, -271), 0), 100000000, 0, -270), 0, (("library/goptions.mli", 70, 2785, 2787), ("library/goptions.mli", 70, 2785, 2816), 0), 0, Tag1 ("Goptions", 10)), 0); (("active", 1010), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -269), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -268), 0), 100000000, 0, -267), 0, (("library/goptions.mli", 71, 2817, 2819), ("library/goptions.mli", 71, 2817, 2846), 0), 0, Tag1 ("Goptions", 11)), 0)])), 0, (("library/goptions.mli", 62, 2614, 2614), ("library/goptions.mli", 72, 2847, 2850), 0), Tag1 ("Goptions", 12)), 0, 0); Tag3 (("MakeRefTable", 966), 0, (Tag2 (((("A", 1004)), Tag1 ([Tag1 (("t", 1011), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("library/goptions.mli", 87, 3477, 3484), ("library/goptions.mli", 87, 3477, 3490), 0), 0, 0, 0, Tag1 ("Goptions", 13)), 1, 0); Tag3 (("Set", 1012), 0, (Tag1 ([Tag1 (("elt", 1019), (0, 0, 0, 1, ((Tag3 ((("t", 1011)), 0, (0)), 100000000, 0, -414)), 0, 0, 0, 0, (("library/goptions.mli", 88, 3491, 3526), ("library/goptions.mli", 88, 3491, 3538), 0), 0, 0, 0, Tag1 ("Goptions", 14)), 1, 0); Tag1 (("t", 1020), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("clib/cSig.mli", 24, 947, 951), ("clib/cSig.mli", 24, 947, 957), 0), 0, 0, 0, Tag1 ("CSig", 9)), 1, 0); (("empty", 1021), ((Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -413), 0, (("clib/cSig.mli", 25, 958, 962), ("clib/cSig.mli", 25, 958, 974), 0), 0, Tag1 ("CSig", 10)), 0); (("is_empty", 1022), ((Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -412), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -411), 0), 100000000, 0, -410), 0, (("clib/cSig.mli", 26, 975, 979), ("clib/cSig.mli", 26, 975, 1002), 0), 0, Tag1 ("CSig", 11)), 0); (("mem", 1023), ((Tag1 (0, (Tag3 ((("elt", 1019)), 0, (0)), 100000000, 0, -409), (Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -408), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -407), 0), 100000000, 0, -406), 0), 100000000, 0, -405), 0, (("clib/cSig.mli", 27, 1003, 1007), ("clib/cSig.mli", 27, 1003, 1032), 0), 0, Tag1 ("CSig", 12)), 0); (("add", 1024), ((Tag1 (0, (Tag3 ((("elt", 1019)), 0, (0)), 100000000, 0, -404), (Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -403), (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -402), 0), 100000000, 0, -401), 0), 100000000, 0, -400), 0, (("clib/cSig.mli", 28, 1033, 1037), ("clib/cSig.mli", 28, 1033, 1059), 0), 0, Tag1 ("CSig", 13)), 0); (("singleton", 1025), ((Tag1 (0, (Tag3 ((("elt", 1019)), 0, (0)), 100000000, 0, -399), (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -398), 0), 100000000, 0, -397), 0, (("clib/cSig.mli", 29, 1060, 1064), ("clib/cSig.mli", 29, 1060, 1087), 0), 0, Tag1 ("CSig", 14)), 0); (("remove", 1026), ((Tag1 (0, (Tag3 ((("elt", 1019)), 0, (0)), 100000000, 0, -396), (Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -395), (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -394), 0), 100000000, 0, -393), 0), 100000000, 0, -392), 0, (("clib/cSig.mli", 30, 1088, 1092), ("clib/cSig.mli", 30, 1088, 1117), 0), 0, Tag1 ("CSig", 15)), 0); (("union", 1027), ((Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -391), (Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -390), (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -389), 0), 100000000, 0, -388), 0), 100000000, 0, -387), 0, (("clib/cSig.mli", 31, 1118, 1122), ("clib/cSig.mli", 31, 1118, 1144), 0), 0, Tag1 ("CSig", 16)), 0); (("inter", 1028), ((Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -386), (Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -385), (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -384), 0), 100000000, 0, -383), 0), 100000000, 0, -382), 0, (("clib/cSig.mli", 32, 1145, 1149), ("clib/cSig.mli", 32, 1145, 1171), 0), 0, Tag1 ("CSig", 17)), 0); (("diff", 1029), ((Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -381), (Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -380), (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -379), 0), 100000000, 0, -378), 0), 100000000, 0, -377), 0, (("clib/cSig.mli", 33, 1172, 1176), ("clib/cSig.mli", 33, 1172, 1197), 0), 0, Tag1 ("CSig", 18)), 0); (("compare", 1030), ((Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -376), (Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -375), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -374), 0), 100000000, 0, -373), 0), 100000000, 0, -372), 0, (("clib/cSig.mli", 34, 1198, 1202), ("clib/cSig.mli", 34, 1198, 1228), 0), 0, Tag1 ("CSig", 19)), 0); (("equal", 1031), ((Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -371), (Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -370), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -369), 0), 100000000, 0, -368), 0), 100000000, 0, -367), 0, (("clib/cSig.mli", 35, 1229, 1233), ("clib/cSig.mli", 35, 1229, 1258), 0), 0, Tag1 ("CSig", 20)), 0); (("subset", 1032), ((Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -366), (Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -365), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -364), 0), 100000000, 0, -363), 0), 100000000, 0, -362), 0, (("clib/cSig.mli", 36, 1259, 1263), ("clib/cSig.mli", 36, 1259, 1289), 0), 0, Tag1 ("CSig", 21)), 0); (("iter", 1033), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 1019)), 0, (0)), 100000000, 0, -361), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -360), 0), 100000000, 0, -359), (Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -358), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -357), 0), 100000000, 0, -356), 0), 100000000, 0, -355), 0, (("clib/cSig.mli", 37, 1290, 1294), ("clib/cSig.mli", 37, 1290, 1330), 0), 0, Tag1 ("CSig", 22)), 0); (("fold", 1034), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 1019)), 0, (0)), 100000000, 0, -354), (Tag1 (0, ((("a")), 100000000, 0, -350), ((("a")), 100000000, 0, -350), 0), 100000000, 0, -353), 0), 100000000, 0, -352), (Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -351), (Tag1 (0, ((("a")), 100000000, 0, -350), ((("a")), 100000000, 0, -350), 0), 100000000, 0, -349), 0), 100000000, 0, -348), 0), 100000000, 0, -347), 0, (("clib/cSig.mli", 38, 1331, 1335), ("clib/cSig.mli", 38, 1331, 1379), 0), 0, Tag1 ("CSig", 23)), 0); (("for_all", 1035), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 1019)), 0, (0)), 100000000, 0, -346), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -345), 0), 100000000, 0, -344), (Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -343), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -342), 0), 100000000, 0, -341), 0), 100000000, 0, -340), 0, (("clib/cSig.mli", 39, 1380, 1384), ("clib/cSig.mli", 39, 1380, 1423), 0), 0, Tag1 ("CSig", 24)), 0); (("exists", 1036), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 1019)), 0, (0)), 100000000, 0, -339), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -338), 0), 100000000, 0, -337), (Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -336), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -335), 0), 100000000, 0, -334), 0), 100000000, 0, -333), 0, (("clib/cSig.mli", 40, 1424, 1428), ("clib/cSig.mli", 40, 1424, 1466), 0), 0, Tag1 ("CSig", 25)), 0); (("filter", 1037), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 1019)), 0, (0)), 100000000, 0, -332), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -331), 0), 100000000, 0, -330), (Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -329), (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -328), 0), 100000000, 0, -327), 0), 100000000, 0, -326), 0, (("clib/cSig.mli", 41, 1467, 1471), ("clib/cSig.mli", 41, 1467, 1506), 0), 0, Tag1 ("CSig", 26)), 0); (("partition", 1038), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 1019)), 0, (0)), 100000000, 0, -325), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -324), 0), 100000000, 0, -323), (Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -322), (Tag2 ([(Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -320); (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -321)]), 100000000, 0, -319), 0), 100000000, 0, -318), 0), 100000000, 0, -317), 0, (("clib/cSig.mli", 42, 1507, 1511), ("clib/cSig.mli", 42, 1507, 1553), 0), 0, Tag1 ("CSig", 27)), 0); (("cardinal", 1039), ((Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -316), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -315), 0), 100000000, 0, -314), 0, (("clib/cSig.mli", 43, 1554, 1558), ("clib/cSig.mli", 43, 1554, 1580), 0), 0, Tag1 ("CSig", 28)), 0); (("elements", 1040), ((Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -313), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("elt", 1019)), 0, (0)), 100000000, 0, -312)], (0)), 100000000, 0, -311), 0), 100000000, 0, -310), 0, (("clib/cSig.mli", 44, 1581, 1585), ("clib/cSig.mli", 44, 1581, 1612), 0), 0, Tag1 ("CSig", 29)), 0); (("min_elt", 1041), ((Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -309), (Tag3 ((("elt", 1019)), 0, (0)), 100000000, 0, -308), 0), 100000000, 0, -307), 0, (("clib/cSig.mli", 45, 1613, 1617), ("clib/cSig.mli", 45, 1613, 1638), 0), 0, Tag1 ("CSig", 30)), 0); (("max_elt", 1042), ((Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -306), (Tag3 ((("elt", 1019)), 0, (0)), 100000000, 0, -305), 0), 100000000, 0, -304), 0, (("clib/cSig.mli", 46, 1639, 1643), ("clib/cSig.mli", 46, 1639, 1664), 0), 0, Tag1 ("CSig", 31)), 0); (("choose", 1043), ((Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -303), (Tag3 ((("elt", 1019)), 0, (0)), 100000000, 0, -302), 0), 100000000, 0, -301), 0, (("clib/cSig.mli", 47, 1665, 1669), ("clib/cSig.mli", 47, 1665, 1689), 0), 0, Tag1 ("CSig", 32)), 0); (("split", 1044), ((Tag1 (0, (Tag3 ((("elt", 1019)), 0, (0)), 100000000, 0, -300), (Tag1 (0, (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -299), (Tag2 ([(Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -296); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -297); (Tag3 ((("t", 1020)), 0, (0)), 100000000, 0, -298)]), 100000000, 0, -295), 0), 100000000, 0, -294), 0), 100000000, 0, -293), 0, (("clib/cSig.mli", 48, 1690, 1694), ("clib/cSig.mli", 48, 1690, 1729), 0), 0, Tag1 ("CSig", 33)), 0)]), 0, (("library/goptions.mli", 88, 3491, 3498), ("library/goptions.mli", 88, 3491, 3538), 0), Tag1 ("Goptions", 15)), 0, 0); (("encode", 1013), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -292), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Libnames")), "qualid"), 0, (0)), 100000000, 0, -291), (Tag3 ((("t", 1011)), 0, (0)), 100000000, 0, -290), 0), 100000000, 0, -289), 0), 100000000, 0, -288), 0, (("library/goptions.mli", 89, 3539, 3546), ("library/goptions.mli", 89, 3539, 3594), 0), 0, Tag1 ("Goptions", 16)), 0); (("subst", 1014), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Mod_subst")), "substitution"), 0, (0)), 100000000, 0, -287), (Tag1 (0, (Tag3 ((("t", 1011)), 0, (0)), 100000000, 0, -286), (Tag3 ((("t", 1011)), 0, (0)), 100000000, 0, -285), 0), 100000000, 0, -284), 0), 100000000, 0, -283), 0, (("library/goptions.mli", 90, 3595, 3602), ("library/goptions.mli", 90, 3595, 3646), 0), 0, Tag1 ("Goptions", 17)), 0); (("printer", 1015), ((Tag1 (0, (Tag3 ((("t", 1011)), 0, (0)), 100000000, 0, -282), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -281), 0), 100000000, 0, -280), 0, (("library/goptions.mli", 91, 3647, 3654), ("library/goptions.mli", 91, 3647, 3677), 0), 0, Tag1 ("Goptions", 18)), 0); (("key", 1016), ((Tag3 ((("option_name", 963)), 0, (0)), 100000000, 0, -279), 0, (("library/goptions.mli", 92, 3678, 3685), ("library/goptions.mli", 92, 3678, 3706), 0), 0, Tag1 ("Goptions", 19)), 0); (("title", 1017), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -278), 0, (("library/goptions.mli", 93, 3707, 3714), ("library/goptions.mli", 93, 3707, 3732), 0), 0, Tag1 ("Goptions", 20)), 0); (("member_message", 1018), ((Tag1 (0, (Tag3 ((("t", 1011)), 0, (0)), 100000000, 0, -277), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -276), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -275), 0), 100000000, 0, -274), 0), 100000000, 0, -273), 0, (("library/goptions.mli", 94, 3733, 3740), ("library/goptions.mli", 94, 3733, 3778), 0), 0, Tag1 ("Goptions", 21)), 0)])), Tag1 ([(("v", 1045), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -425), (Tag3 (Tag1 (Tag1 ((("A", 1004)), "Set"), "t"), 0, (0)), 100000000, 0, -424), 0), 100000000, 0, -423), 0, (("library/goptions.mli", 97, 3796, 3798), ("library/goptions.mli", 97, 3796, 3821), 0), 0, Tag1 ("Goptions", 23)), 0); (("active", 1046), ((Tag1 (0, (Tag3 (Tag1 ((("A", 1004)), "t"), 0, (0)), 100000000, 0, -422), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -421), 0), 100000000, 0, -420), 0, (("library/goptions.mli", 98, 3822, 3824), ("library/goptions.mli", 98, 3822, 3848), 0), 0, Tag1 ("Goptions", 24)), 0); (("set", 1047), ((Tag1 (0, (Tag3 (Tag1 ((("A", 1004)), "t"), 0, (0)), 100000000, 0, -419), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -418), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -417), 0), 100000000, 0, -416), 0), 100000000, 0, -415), 0, (("library/goptions.mli", 99, 3849, 3851), ("library/goptions.mli", 99, 3849, 3880), 0), 0, Tag1 ("Goptions", 25)), 0)])), 0, (("library/goptions.mli", 84, 3432, 3432), ("library/goptions.mli", 100, 3881, 3884), 0), Tag1 ("Goptions", 26)), 0, 0); Tag1 (("option_sig", 967), ([((("a")), 100000000, 0, -254)], 1, [[(("optstage", 795), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Summary")), "Stage"), "t"), 0, (0)), 100000000, 0, -249), (("library/goptions.mli", 116, 4420, 4422), ("library/goptions.mli", 116, 4420, 4451), 0), 0, Tag1 ("Goptions", 28)); (("optdepr", 800), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Deprecation")), "t"), 0, (0)), 100000000, 0, -251)], (0)), 100000000, 0, -250), (("library/goptions.mli", 117, 4452, 4454), ("library/goptions.mli", 117, 4452, 4488), 0), 0, Tag1 ("Goptions", 29)); (("optkey", 801), 0, (Tag3 ((("option_name", 963)), 0, (0)), 100000000, 0, -252), (("library/goptions.mli", 119, 4531, 4533), ("library/goptions.mli", 119, 4531, 4558), 0), 0, Tag1 ("Goptions", 30)); (("optread", 802), 0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -255), ((("a")), 100000000, 0, -254), 0), 100000000, 0, -253), (("library/goptions.mli", 121, 4602, 4604), ("library/goptions.mli", 121, 4602, 4628), 0), 0, Tag1 ("Goptions", 31)); (("optwrite", 803), 0, (Tag1 (0, ((("a")), 100000000, 0, -254), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -257), 0), 100000000, 0, -256), (("library/goptions.mli", 122, 4629, 4631), ("library/goptions.mli", 122, 4629, 4654), 0), 0, Tag1 ("Goptions", 32))]], 1, 0, [63], [0], 0, 0, (("library/goptions.mli", 115, 4397, 4397), ("library/goptions.mli", 123, 4655, 4656), 0), 0, 0, 0, Tag1 ("Goptions", 27)), 1, 0); (("declare_int_option", 968), ((Tag1 (Tag1 ("preprocess"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -248)], (0)), 100000000, 0, -247), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -246)], (0)), 100000000, 0, -245), 0), 100000000, 0, -244)], (0)), 100000000, 0, -243), (Tag1 (0, (Tag3 ((("option_sig", 967)), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -242)], (0)), 100000000, 0, -241)], (0)), 100000000, 0, -240), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -239), 0), 100000000, 0, -238), 0), 100000000, 0, -237), 0, (("library/goptions.mli", 132, 4986, 4986), ("library/goptions.mli", 133, 5055, 5111), 0), 0, Tag1 ("Goptions", 33)), 0); (("declare_bool_option", 969), ((Tag1 (Tag1 ("preprocess"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -236), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -235), 0), 100000000, 0, -234)], (0)), 100000000, 0, -233), (Tag1 (0, (Tag3 ((("option_sig", 967)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -232)], (0)), 100000000, 0, -231), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -230), 0), 100000000, 0, -229), 0), 100000000, 0, -228), 0, (("library/goptions.mli", 134, 5112, 5112), ("library/goptions.mli", 135, 5169, 5221), 0), 0, Tag1 ("Goptions", 34)), 0); (("declare_string_option", 970), ((Tag1 (Tag1 ("preprocess"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -227), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -226), 0), 100000000, 0, -225)], (0)), 100000000, 0, -224), (Tag1 (0, (Tag3 ((("option_sig", 967)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -223)], (0)), 100000000, 0, -222), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -221), 0), 100000000, 0, -220), 0), 100000000, 0, -219), 0, (("library/goptions.mli", 136, 5222, 5222), ("library/goptions.mli", 137, 5283, 5335), 0), 0, Tag1 ("Goptions", 35)), 0); (("declare_stringopt_option", 971), ((Tag1 (Tag1 ("preprocess"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -218)], (0)), 100000000, 0, -217), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -216)], (0)), 100000000, 0, -215), 0), 100000000, 0, -214)], (0)), 100000000, 0, -213), (Tag1 (0, (Tag3 ((("option_sig", 967)), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -212)], (0)), 100000000, 0, -211)], (0)), 100000000, 0, -210), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -209), 0), 100000000, 0, -208), 0), 100000000, 0, -207), 0, (("library/goptions.mli", 138, 5336, 5336), ("library/goptions.mli", 139, 5414, 5476), 0), 0, Tag1 ("Goptions", 36)), 0); Tag1 (("getter", 972), ([((("a")), 100000000, 0, -205)], 1, [[(("get", 809), 0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -206), ((("a")), 100000000, 0, -205), 0), 100000000, 0, -204), (("library/goptions.mli", 145, 5673, 5692), ("library/goptions.mli", 145, 5673, 5708), 0), 0, Tag1 ("Goptions", 38))]], 1, 0, [25], [0], 0, 0, (("library/goptions.mli", 145, 5673, 5673), ("library/goptions.mli", 145, 5673, 5710), 0), 0, 0, 1, Tag1 ("Goptions", 37)), 1, 0); Tag1 (("opt_decl", 973), ([((("a")), 100000000, 0, -197)], 1, 0, 1, ((Tag1 (Tag1 ("stage"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Summary")), "Stage"), "t"), 0, (0)), 100000000, 0, -203)], (0)), 100000000, 0, -202), (Tag1 (Tag1 ("depr"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Deprecation")), "t"), 0, (0)), 100000000, 0, -201)], (0)), 100000000, 0, -200), (Tag1 (("key"), (Tag3 ((("option_name", 963)), 0, (0)), 100000000, 0, -199), (Tag1 (("value"), ((("a")), 100000000, 0, -197), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -198), (Tag3 ((("getter", 972)), [((("a")), 100000000, 0, -197)], (0)), 100000000, 0, -196), 0), 100000000, 0, -195), 0), 100000000, 0, -194), 0), 100000000, 0, -193), 0), 100000000, 0, -192), 0), 100000000, 0, -191)), [63], [0], 0, 0, (("library/goptions.mli", 147, 5712, 5712), ("library/goptions.mli", 147, 5712, 5828), 0), 0, 0, 0, Tag1 ("Goptions", 39)), 1, 0); (("declare_int_option_and_ref", 974), ((Tag3 ((("opt_decl", 973)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -190)], (0)), 100000000, 0, -189), 0, (("library/goptions.mli", 149, 5830, 5830), ("library/goptions.mli", 149, 5830, 5875), 0), 0, Tag1 ("Goptions", 40)), 0); (("declare_intopt_option_and_ref", 975), ((Tag3 ((("opt_decl", 973)), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -188)], (0)), 100000000, 0, -187)], (0)), 100000000, 0, -186), 0, (("library/goptions.mli", 150, 5876, 5876), ("library/goptions.mli", 150, 5876, 5931), 0), 0, Tag1 ("Goptions", 41)), 0); (("declare_nat_option_and_ref", 976), ((Tag3 ((("opt_decl", 973)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -185)], (0)), 100000000, 0, -184), 0, (("library/goptions.mli", 151, 5932, 5932), ("library/goptions.mli", 151, 5932, 5977), 0), 0, Tag1 ("Goptions", 42)), 0); (("declare_bool_option_and_ref", 977), ((Tag3 ((("opt_decl", 973)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -183)], (0)), 100000000, 0, -182), 0, (("library/goptions.mli", 152, 5978, 5978), ("library/goptions.mli", 152, 5978, 6025), 0), 0, Tag1 ("Goptions", 43)), 0); (("declare_string_option_and_ref", 978), ((Tag3 ((("opt_decl", 973)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -181)], (0)), 100000000, 0, -180), 0, (("library/goptions.mli", 153, 6026, 6026), ("library/goptions.mli", 153, 6026, 6077), 0), 0, Tag1 ("Goptions", 44)), 0); (("declare_stringopt_option_and_ref", 979), ((Tag3 ((("opt_decl", 973)), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -179)], (0)), 100000000, 0, -178)], (0)), 100000000, 0, -177), 0, (("library/goptions.mli", 154, 6078, 6078), ("library/goptions.mli", 154, 6078, 6139), 0), 0, Tag1 ("Goptions", 45)), 0); (("declare_interpreted_string_option_and_ref", 980), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -176), ((("a")), 100000000, 0, -172), 0), 100000000, 0, -175), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -172), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -174), 0), 100000000, 0, -173), (Tag3 ((("opt_decl", 973)), [((("a")), 100000000, 0, -172)], (0)), 100000000, 0, -171), 0), 100000000, 0, -170), 0), 100000000, 0, -169), 0, (("library/goptions.mli", 155, 6140, 6140), ("library/goptions.mli", 155, 6140, 6235), 0), 0, Tag1 ("Goptions", 46)), 0); Tag3 (("OptionMap", 981), 0, (Tag1 ([Tag1 (("key", 1048), (0, 0, 0, 1, ((Tag3 ((("option_name", 963)), 0, (0)), 100000000, 0, -639)), 0, 0, 0, 0, (("library/goptions.mli", 159, 6313, 6347), ("library/goptions.mli", 159, 6313, 6369), 0), 0, 0, 0, Tag1 ("Goptions", 47)), 1, 0); Tag1 (("t", 1049), ([((("a")), 100000000, 0, -638)], 1, 0, 1, 0, [1], [2], 0, 0, (("clib/cSig.mli", 56, 1893, 1897), ("clib/cSig.mli", 56, 1893, 1909), 0), 0, 0, 0, Tag1 ("CSig", 36)), 1, 0); (("empty", 1050), ((Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -637)], (0)), 100000000, 0, -636), 0, (("clib/cSig.mli", 57, 1910, 1914), ("clib/cSig.mli", 57, 1910, 1929), 0), 0, Tag1 ("CSig", 37)), 0); (("is_empty", 1051), ((Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -635)], (0)), 100000000, 0, -634), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -633), 0), 100000000, 0, -632), 0, (("clib/cSig.mli", 58, 1930, 1934), ("clib/cSig.mli", 58, 1930, 1960), 0), 0, Tag1 ("CSig", 38)), 0); (("mem", 1052), ((Tag1 (0, (Tag3 ((("key", 1048)), 0, (0)), 100000000, 0, -631), (Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -630)], (0)), 100000000, 0, -629), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -628), 0), 100000000, 0, -627), 0), 100000000, 0, -626), 0, (("clib/cSig.mli", 59, 1961, 1965), ("clib/cSig.mli", 59, 1961, 1993), 0), 0, Tag1 ("CSig", 39)), 0); (("add", 1053), ((Tag1 (0, (Tag3 ((("key", 1048)), 0, (0)), 100000000, 0, -625), (Tag1 (0, ((("a")), 100000000, 0, -623), (Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -623)], (0)), 100000000, 0, -624), (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -623)], (0)), 100000000, 0, -622), 0), 100000000, 0, -621), 0), 100000000, 0, -620), 0), 100000000, 0, -619), 0, (("clib/cSig.mli", 60, 1994, 1998), ("clib/cSig.mli", 60, 1994, 2032), 0), 0, Tag1 ("CSig", 40)), 0); (("update", 1054), ((Tag1 (0, (Tag3 ((("key", 1048)), 0, (0)), 100000000, 0, -618), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -613)], (0)), 100000000, 0, -617), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -613)], (0)), 100000000, 0, -616), 0), 100000000, 0, -615), (Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -613)], (0)), 100000000, 0, -614), (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -613)], (0)), 100000000, 0, -612), 0), 100000000, 0, -611), 0), 100000000, 0, -610), 0), 100000000, 0, -609), 0, (("clib/cSig.mli", 61, 2033, 2037), ("clib/cSig.mli", 61, 2033, 2097), 0), 0, Tag1 ("CSig", 41)), 0); (("singleton", 1055), ((Tag1 (0, (Tag3 ((("key", 1048)), 0, (0)), 100000000, 0, -608), (Tag1 (0, ((("a")), 100000000, 0, -607), (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -607)], (0)), 100000000, 0, -606), 0), 100000000, 0, -605), 0), 100000000, 0, -604), 0, (("clib/cSig.mli", 62, 2098, 2102), ("clib/cSig.mli", 62, 2098, 2134), 0), 0, Tag1 ("CSig", 42)), 0); (("remove", 1056), ((Tag1 (0, (Tag3 ((("key", 1048)), 0, (0)), 100000000, 0, -603), (Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -601)], (0)), 100000000, 0, -602), (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -601)], (0)), 100000000, 0, -600), 0), 100000000, 0, -599), 0), 100000000, 0, -598), 0, (("clib/cSig.mli", 63, 2135, 2139), ("clib/cSig.mli", 63, 2135, 2170), 0), 0, Tag1 ("CSig", 43)), 0); (("merge", 1057), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1048)), 0, (0)), 100000000, 0, -597), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -590)], (0)), 100000000, 0, -596), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -588)], (0)), 100000000, 0, -595), (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -586)], (0)), 100000000, 0, -594), 0), 100000000, 0, -593), 0), 100000000, 0, -592), 0), 100000000, 0, -591), (Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -590)], (0)), 100000000, 0, -589), (Tag1 (0, (Tag3 ((("t", 1049)), [((("b")), 100000000, 0, -588)], (0)), 100000000, 0, -587), (Tag3 ((("t", 1049)), [((("c")), 100000000, 0, -586)], (0)), 100000000, 0, -585), 0), 100000000, 0, -584), 0), 100000000, 0, -583), 0), 100000000, 0, -582), 0, (("clib/cSig.mli", 64, 2171, 2175), ("clib/cSig.mli", 65, 2186, 2263), 0), 0, Tag1 ("CSig", 44)), 0); (("union", 1058), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1048)), 0, (0)), 100000000, 0, -581), (Tag1 (0, ((("a")), 100000000, 0, -574), (Tag1 (0, ((("a")), 100000000, 0, -574), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -574)], (0)), 100000000, 0, -580), 0), 100000000, 0, -579), 0), 100000000, 0, -578), 0), 100000000, 0, -577), (Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -574)], (0)), 100000000, 0, -576), (Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -574)], (0)), 100000000, 0, -575), (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -574)], (0)), 100000000, 0, -573), 0), 100000000, 0, -572), 0), 100000000, 0, -571), 0), 100000000, 0, -570), 0, (("clib/cSig.mli", 66, 2264, 2268), ("clib/cSig.mli", 67, 2279, 2339), 0), 0, Tag1 ("CSig", 45)), 0); (("compare", 1059), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -565), (Tag1 (0, ((("a")), 100000000, 0, -565), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -569), 0), 100000000, 0, -568), 0), 100000000, 0, -567), (Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -565)], (0)), 100000000, 0, -566), (Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -565)], (0)), 100000000, 0, -564), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -563), 0), 100000000, 0, -562), 0), 100000000, 0, -561), 0), 100000000, 0, -560), 0, (("clib/cSig.mli", 68, 2340, 2344), ("clib/cSig.mli", 68, 2340, 2397), 0), 0, Tag1 ("CSig", 46)), 0); (("equal", 1060), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -555), (Tag1 (0, ((("a")), 100000000, 0, -555), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -559), 0), 100000000, 0, -558), 0), 100000000, 0, -557), (Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -555)], (0)), 100000000, 0, -556), (Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -555)], (0)), 100000000, 0, -554), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -553), 0), 100000000, 0, -552), 0), 100000000, 0, -551), 0), 100000000, 0, -550), 0, (("clib/cSig.mli", 69, 2398, 2402), ("clib/cSig.mli", 69, 2398, 2455), 0), 0, Tag1 ("CSig", 47)), 0); (("iter", 1061), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1048)), 0, (0)), 100000000, 0, -549), (Tag1 (0, ((("a")), 100000000, 0, -545), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -548), 0), 100000000, 0, -547), 0), 100000000, 0, -546), (Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -545)], (0)), 100000000, 0, -544), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -543), 0), 100000000, 0, -542), 0), 100000000, 0, -541), 0, (("clib/cSig.mli", 70, 2456, 2460), ("clib/cSig.mli", 70, 2456, 2505), 0), 0, Tag1 ("CSig", 48)), 0); (("fold", 1062), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1048)), 0, (0)), 100000000, 0, -540), (Tag1 (0, ((("a")), 100000000, 0, -536), (Tag1 (0, ((("b")), 100000000, 0, -534), ((("b")), 100000000, 0, -534), 0), 100000000, 0, -539), 0), 100000000, 0, -538), 0), 100000000, 0, -537), (Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -536)], (0)), 100000000, 0, -535), (Tag1 (0, ((("b")), 100000000, 0, -534), ((("b")), 100000000, 0, -534), 0), 100000000, 0, -533), 0), 100000000, 0, -532), 0), 100000000, 0, -531), 0, (("clib/cSig.mli", 71, 2506, 2510), ("clib/cSig.mli", 71, 2506, 2563), 0), 0, Tag1 ("CSig", 49)), 0); (("for_all", 1063), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1048)), 0, (0)), 100000000, 0, -530), (Tag1 (0, ((("a")), 100000000, 0, -526), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -529), 0), 100000000, 0, -528), 0), 100000000, 0, -527), (Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -526)], (0)), 100000000, 0, -525), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -524), 0), 100000000, 0, -523), 0), 100000000, 0, -522), 0, (("clib/cSig.mli", 72, 2564, 2568), ("clib/cSig.mli", 72, 2564, 2616), 0), 0, Tag1 ("CSig", 50)), 0); (("exists", 1064), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1048)), 0, (0)), 100000000, 0, -521), (Tag1 (0, ((("a")), 100000000, 0, -517), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -520), 0), 100000000, 0, -519), 0), 100000000, 0, -518), (Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -517)], (0)), 100000000, 0, -516), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -515), 0), 100000000, 0, -514), 0), 100000000, 0, -513), 0, (("clib/cSig.mli", 73, 2617, 2621), ("clib/cSig.mli", 73, 2617, 2668), 0), 0, Tag1 ("CSig", 51)), 0); (("filter", 1065), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1048)), 0, (0)), 100000000, 0, -512), (Tag1 (0, ((("a")), 100000000, 0, -507), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -511), 0), 100000000, 0, -510), 0), 100000000, 0, -509), (Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -507)], (0)), 100000000, 0, -508), (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -507)], (0)), 100000000, 0, -506), 0), 100000000, 0, -505), 0), 100000000, 0, -504), 0, (("clib/cSig.mli", 74, 2669, 2673), ("clib/cSig.mli", 74, 2669, 2720), 0), 0, Tag1 ("CSig", 52)), 0); (("partition", 1066), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1048)), 0, (0)), 100000000, 0, -503), (Tag1 (0, ((("a")), 100000000, 0, -497), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -502), 0), 100000000, 0, -501), 0), 100000000, 0, -500), (Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -497)], (0)), 100000000, 0, -499), (Tag2 ([(Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -497)], (0)), 100000000, 0, -496); (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -497)], (0)), 100000000, 0, -498)]), 100000000, 0, -495), 0), 100000000, 0, -494), 0), 100000000, 0, -493), 0, (("clib/cSig.mli", 75, 2721, 2725), ("clib/cSig.mli", 75, 2721, 2782), 0), 0, Tag1 ("CSig", 53)), 0); (("cardinal", 1067), ((Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -492)], (0)), 100000000, 0, -491), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -490), 0), 100000000, 0, -489), 0, (("clib/cSig.mli", 76, 2783, 2787), ("clib/cSig.mli", 76, 2783, 2812), 0), 0, Tag1 ("CSig", 54)), 0); (("bindings", 1068), ((Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -487)], (0)), 100000000, 0, -488), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 1048)), 0, (0)), 100000000, 0, -486); ((("a")), 100000000, 0, -487)]), 100000000, 0, -485)], (0)), 100000000, 0, -484), 0), 100000000, 0, -483), 0, (("clib/cSig.mli", 77, 2813, 2817), ("clib/cSig.mli", 77, 2813, 2854), 0), 0, Tag1 ("CSig", 55)), 0); (("min_binding", 1069), ((Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -481)], (0)), 100000000, 0, -482), (Tag2 ([(Tag3 ((("key", 1048)), 0, (0)), 100000000, 0, -480); ((("a")), 100000000, 0, -481)]), 100000000, 0, -479), 0), 100000000, 0, -478), 0, (("clib/cSig.mli", 78, 2855, 2859), ("clib/cSig.mli", 78, 2855, 2894), 0), 0, Tag1 ("CSig", 56)), 0); (("max_binding", 1070), ((Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -476)], (0)), 100000000, 0, -477), (Tag2 ([(Tag3 ((("key", 1048)), 0, (0)), 100000000, 0, -475); ((("a")), 100000000, 0, -476)]), 100000000, 0, -474), 0), 100000000, 0, -473), 0, (("clib/cSig.mli", 79, 2895, 2899), ("clib/cSig.mli", 79, 2895, 2934), 0), 0, Tag1 ("CSig", 57)), 0); (("choose", 1071), ((Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -471)], (0)), 100000000, 0, -472), (Tag2 ([(Tag3 ((("key", 1048)), 0, (0)), 100000000, 0, -470); ((("a")), 100000000, 0, -471)]), 100000000, 0, -469), 0), 100000000, 0, -468), 0, (("clib/cSig.mli", 80, 2935, 2939), ("clib/cSig.mli", 80, 2935, 2969), 0), 0, Tag1 ("CSig", 58)), 0); (("choose_opt", 1072), ((Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -466)], (0)), 100000000, 0, -467), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 1048)), 0, (0)), 100000000, 0, -465); ((("a")), 100000000, 0, -466)]), 100000000, 0, -464)], (0)), 100000000, 0, -463), 0), 100000000, 0, -462), 0, (("clib/cSig.mli", 81, 2970, 2974), ("clib/cSig.mli", 81, 2970, 3015), 0), 0, Tag1 ("CSig", 59)), 0); (("split", 1073), ((Tag1 (0, (Tag3 ((("key", 1048)), 0, (0)), 100000000, 0, -461), (Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -457)], (0)), 100000000, 0, -460), (Tag2 ([(Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -457)], (0)), 100000000, 0, -456); (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -457)], (0)), 100000000, 0, -458); (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -457)], (0)), 100000000, 0, -459)]), 100000000, 0, -455), 0), 100000000, 0, -454), 0), 100000000, 0, -453), 0, (("clib/cSig.mli", 82, 3016, 3020), ("clib/cSig.mli", 82, 3016, 3069), 0), 0, Tag1 ("CSig", 60)), 0); (("find", 1074), ((Tag1 (0, (Tag3 ((("key", 1048)), 0, (0)), 100000000, 0, -452), (Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -450)], (0)), 100000000, 0, -451), ((("a")), 100000000, 0, -450), 0), 100000000, 0, -449), 0), 100000000, 0, -448), 0, (("clib/cSig.mli", 83, 3070, 3074), ("clib/cSig.mli", 83, 3070, 3101), 0), 0, Tag1 ("CSig", 61)), 0); (("find_opt", 1075), ((Tag1 (0, (Tag3 ((("key", 1048)), 0, (0)), 100000000, 0, -447), (Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -445)], (0)), 100000000, 0, -446), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -445)], (0)), 100000000, 0, -444), 0), 100000000, 0, -443), 0), 100000000, 0, -442), 0, (("clib/cSig.mli", 84, 3102, 3106), ("clib/cSig.mli", 84, 3102, 3145), 0), 0, Tag1 ("CSig", 62)), 0); (("map", 1076), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -440), ((("b")), 100000000, 0, -438), 0), 100000000, 0, -441), (Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -440)], (0)), 100000000, 0, -439), (Tag3 ((("t", 1049)), [((("b")), 100000000, 0, -438)], (0)), 100000000, 0, -437), 0), 100000000, 0, -436), 0), 100000000, 0, -435), 0, (("clib/cSig.mli", 85, 3146, 3150), ("clib/cSig.mli", 85, 3146, 3185), 0), 0, Tag1 ("CSig", 63)), 0); (("mapi", 1077), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1048)), 0, (0)), 100000000, 0, -434), (Tag1 (0, ((("a")), 100000000, 0, -431), ((("b")), 100000000, 0, -429), 0), 100000000, 0, -433), 0), 100000000, 0, -432), (Tag1 (0, (Tag3 ((("t", 1049)), [((("a")), 100000000, 0, -431)], (0)), 100000000, 0, -430), (Tag3 ((("t", 1049)), [((("b")), 100000000, 0, -429)], (0)), 100000000, 0, -428), 0), 100000000, 0, -427), 0), 100000000, 0, -426), 0, (("clib/cSig.mli", 86, 3186, 3190), ("clib/cSig.mli", 86, 3186, 3233), 0), 0, Tag1 ("CSig", 64)), 0)]), 0, (("library/goptions.mli", 159, 6313, 6313), ("library/goptions.mli", 159, 6313, 6369), 0), Tag1 ("Goptions", 48)), 0, 0); Tag1 (("table_of_A", 982), ([((("a")), 100000000, 0, -156)], 1, [[(("add", 881), 0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -157), (Tag1 (0, ((("a")), 100000000, 0, -156), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -155), 0), 100000000, 0, -154), 0), 100000000, 0, -153), (("library/goptions.mli", 162, 6395, 6397), ("library/goptions.mli", 162, 6395, 6429), 0), 0, Tag1 ("Goptions", 50)); (("remove", 882), 0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -161), (Tag1 (0, ((("a")), 100000000, 0, -156), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -160), 0), 100000000, 0, -159), 0), 100000000, 0, -158), (("library/goptions.mli", 163, 6430, 6432), ("library/goptions.mli", 163, 6430, 6467), 0), 0, Tag1 ("Goptions", 51)); (("mem", 883), 0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -165), (Tag1 (0, ((("a")), 100000000, 0, -156), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -164), 0), 100000000, 0, -163), 0), 100000000, 0, -162), (("library/goptions.mli", 164, 6468, 6470), ("library/goptions.mli", 164, 6468, 6502), 0), 0, Tag1 ("Goptions", 52)); (("print", 884), 0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -168), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -167), 0), 100000000, 0, -166), (("library/goptions.mli", 165, 6503, 6505), ("library/goptions.mli", 165, 6503, 6526), 0), 0, Tag1 ("Goptions", 53))]], 1, 0, [46], [0], 0, 0, (("library/goptions.mli", 161, 6371, 6371), ("library/goptions.mli", 166, 6527, 6528), 0), 0, 0, 0, Tag1 ("Goptions", 49)), 1, 0); (("get_string_table", 983), ((Tag1 (0, (Tag3 ((("option_name", 963)), 0, (0)), 100000000, 0, -152), (Tag3 ((("table_of_A", 982)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -151)], (0)), 100000000, 0, -150), 0), 100000000, 0, -149), 0, (("library/goptions.mli", 168, 6530, 6530), ("library/goptions.mli", 169, 6553, 6587), 0), 0, Tag1 ("Goptions", 54)), 0); (("get_ref_table", 984), ((Tag1 (0, (Tag3 ((("option_name", 963)), 0, (0)), 100000000, 0, -148), (Tag3 ((("table_of_A", 982)), [(Tag3 (Tag1 ((Tag2 ("Libnames")), "qualid"), 0, (0)), 100000000, 0, -147)], (0)), 100000000, 0, -146), 0), 100000000, 0, -145), 0, (("library/goptions.mli", 170, 6588, 6588), ("library/goptions.mli", 171, 6608, 6651), 0), 0, Tag1 ("Goptions", 55)), 0); (("set_int_option_value_gen", 985), ((Tag1 (Tag1 ("locality"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("option_locality", 964)), 0, (0)), 100000000, 0, -144)], (0)), 100000000, 0, -143), (Tag1 (Tag1 ("stage"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Summary")), "Stage"), "t"), 0, (0)), 100000000, 0, -142)], (0)), 100000000, 0, -141), (Tag1 (0, (Tag3 ((("option_name", 963)), 0, (0)), 100000000, 0, -140), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -139)], (0)), 100000000, 0, -138), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -137), 0), 100000000, 0, -136), 0), 100000000, 0, -135), 0), 100000000, 0, -134), 0), 100000000, 0, -133), 0, (("library/goptions.mli", 176, 6850, 6850), ("library/goptions.mli", 176, 6850, 6972), 0), 0, Tag1 ("Goptions", 56)), 0); (("set_bool_option_value_gen", 986), ((Tag1 (Tag1 ("locality"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("option_locality", 964)), 0, (0)), 100000000, 0, -132)], (0)), 100000000, 0, -131), (Tag1 (Tag1 ("stage"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Summary")), "Stage"), "t"), 0, (0)), 100000000, 0, -130)], (0)), 100000000, 0, -129), (Tag1 (0, (Tag3 ((("option_name", 963)), 0, (0)), 100000000, 0, -128), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -127), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -126), 0), 100000000, 0, -125), 0), 100000000, 0, -124), 0), 100000000, 0, -123), 0), 100000000, 0, -122), 0, (("library/goptions.mli", 177, 6973, 6973), ("library/goptions.mli", 177, 6973, 7091), 0), 0, Tag1 ("Goptions", 57)), 0); (("set_string_option_value_gen", 987), ((Tag1 (Tag1 ("locality"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("option_locality", 964)), 0, (0)), 100000000, 0, -121)], (0)), 100000000, 0, -120), (Tag1 (Tag1 ("stage"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Summary")), "Stage"), "t"), 0, (0)), 100000000, 0, -119)], (0)), 100000000, 0, -118), (Tag1 (0, (Tag3 ((("option_name", 963)), 0, (0)), 100000000, 0, -117), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -116), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -115), 0), 100000000, 0, -114), 0), 100000000, 0, -113), 0), 100000000, 0, -112), 0), 100000000, 0, -111), 0, (("library/goptions.mli", 178, 7092, 7092), ("library/goptions.mli", 178, 7092, 7210), 0), 0, Tag1 ("Goptions", 58)), 0); (("set_string_option_append_value_gen", 988), ((Tag1 (Tag1 ("locality"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("option_locality", 964)), 0, (0)), 100000000, 0, -110)], (0)), 100000000, 0, -109), (Tag1 (Tag1 ("stage"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Summary")), "Stage"), "t"), 0, (0)), 100000000, 0, -108)], (0)), 100000000, 0, -107), (Tag1 (0, (Tag3 ((("option_name", 963)), 0, (0)), 100000000, 0, -106), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -105), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -104), 0), 100000000, 0, -103), 0), 100000000, 0, -102), 0), 100000000, 0, -101), 0), 100000000, 0, -100), 0, (("library/goptions.mli", 179, 7211, 7211), ("library/goptions.mli", 179, 7211, 7336), 0), 0, Tag1 ("Goptions", 59)), 0); (("unset_option_value_gen", 989), ((Tag1 (Tag1 ("locality"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("option_locality", 964)), 0, (0)), 100000000, 0, -99)], (0)), 100000000, 0, -98), (Tag1 (Tag1 ("stage"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Summary")), "Stage"), "t"), 0, (0)), 100000000, 0, -97)], (0)), 100000000, 0, -96), (Tag1 (0, (Tag3 ((("option_name", 963)), 0, (0)), 100000000, 0, -95), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -94), 0), 100000000, 0, -93), 0), 100000000, 0, -92), 0), 100000000, 0, -91), 0, (("library/goptions.mli", 180, 7337, 7337), ("library/goptions.mli", 180, 7337, 7440), 0), 0, Tag1 ("Goptions", 60)), 0); (("set_int_option_value", 990), ((Tag1 (Tag1 ("stage"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Summary")), "Stage"), "t"), 0, (0)), 100000000, 0, -90)], (0)), 100000000, 0, -89), (Tag1 (0, (Tag3 ((("option_name", 963)), 0, (0)), 100000000, 0, -88), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -87)], (0)), 100000000, 0, -86), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -85), 0), 100000000, 0, -84), 0), 100000000, 0, -83), 0), 100000000, 0, -82), 0, (("library/goptions.mli", 182, 7442, 7442), ("library/goptions.mli", 182, 7442, 7531), 0), 0, Tag1 ("Goptions", 61)), 0); (("set_bool_option_value", 991), ((Tag1 (Tag1 ("stage"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Summary")), "Stage"), "t"), 0, (0)), 100000000, 0, -81)], (0)), 100000000, 0, -80), (Tag1 (0, (Tag3 ((("option_name", 963)), 0, (0)), 100000000, 0, -79), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -78), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0), 100000000, 0, -75), 0), 100000000, 0, -74), 0, (("library/goptions.mli", 183, 7532, 7532), ("library/goptions.mli", 183, 7532, 7617), 0), 0, Tag1 ("Goptions", 62)), 0); (("set_string_option_value", 992), ((Tag1 (Tag1 ("stage"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Summary")), "Stage"), "t"), 0, (0)), 100000000, 0, -73)], (0)), 100000000, 0, -72), (Tag1 (0, (Tag3 ((("option_name", 963)), 0, (0)), 100000000, 0, -71), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -70), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -69), 0), 100000000, 0, -68), 0), 100000000, 0, -67), 0), 100000000, 0, -66), 0, (("library/goptions.mli", 184, 7618, 7618), ("library/goptions.mli", 184, 7618, 7703), 0), 0, Tag1 ("Goptions", 63)), 0); (("print_option_value", 993), ((Tag1 (0, (Tag3 ((("option_name", 963)), 0, (0)), 100000000, 0, -65), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -64), 0), 100000000, 0, -63), 0, (("library/goptions.mli", 186, 7705, 7705), ("library/goptions.mli", 186, 7705, 7749), 0), 0, Tag1 ("Goptions", 64)), 0); Tag1 (("option_value", 994), (0, 0, Tag1 ([(("BoolValue", 897), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -57)]), 0, (("library/goptions.mli", 189, 7771, 7773), ("library/goptions.mli", 189, 7771, 7794), 0), 0, Tag1 ("Goptions", 66)); (("IntValue", 898), ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -59)], (0)), 100000000, 0, -58)]), 0, (("library/goptions.mli", 190, 7795, 7797), ("library/goptions.mli", 190, 7795, 7824), 0), 0, Tag1 ("Goptions", 67)); (("StringValue", 899), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -60)]), 0, (("library/goptions.mli", 191, 7825, 7827), ("library/goptions.mli", 191, 7825, 7850), 0), 0, Tag1 ("Goptions", 68)); (("StringOptValue", 900), ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -62)], (0)), 100000000, 0, -61)]), 0, (("library/goptions.mli", 192, 7851, 7853), ("library/goptions.mli", 192, 7851, 7886), 0), 0, Tag1 ("Goptions", 69))], 0), 1, 0, 0, 0, 0, 0, (("library/goptions.mli", 188, 7751, 7751), ("library/goptions.mli", 192, 7851, 7886), 0), 0, 0, 0, Tag1 ("Goptions", 65)), 1, 0); Tag1 (("table_value", 995), (0, 0, Tag1 ([(("StringRefValue", 902), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -55)]), 0, (("library/goptions.mli", 195, 7907, 7909), ("library/goptions.mli", 195, 7907, 7935), 0), 0, Tag1 ("Goptions", 71)); (("QualidRefValue", 903), ([(Tag3 (Tag1 ((Tag2 ("Libnames")), "qualid"), 0, (0)), 100000000, 0, -56)]), 0, (("library/goptions.mli", 196, 7936, 7938), ("library/goptions.mli", 196, 7936, 7973), 0), 0, Tag1 ("Goptions", 72))], 0), 1, 0, 0, 0, 0, 0, (("library/goptions.mli", 194, 7888, 7888), ("library/goptions.mli", 196, 7936, 7973), 0), 0, 0, 0, Tag1 ("Goptions", 70)), 1, 0); (("get_option_value", 996), ((Tag1 (0, (Tag3 ((("option_name", 963)), 0, (0)), 100000000, 0, -54), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -53), (Tag3 ((("option_value", 994)), 0, (0)), 100000000, 0, -52), 0), 100000000, 0, -51)], (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0, (("library/goptions.mli", 199, 8061, 8061), ("library/goptions.mli", 199, 8061, 8128), 0), 0, Tag1 ("Goptions", 73)), 0); (("set_option_value", 997), ((Tag1 (Tag1 ("locality"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("option_locality", 964)), 0, (0)), 100000000, 0, -48)], (0)), 100000000, 0, -47), (Tag1 (Tag1 ("stage"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Summary")), "Stage"), "t"), 0, (0)), 100000000, 0, -46)], (0)), 100000000, 0, -45), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -39), (Tag1 (0, (Tag3 ((("option_value", 994)), 0, (0)), 100000000, 0, -44), (Tag3 ((("option_value", 994)), 0, (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), (Tag1 (0, (Tag3 ((("option_name", 963)), 0, (0)), 100000000, 0, -40), (Tag1 (0, ((("a")), 100000000, 0, -39), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -38), 0), 100000000, 0, -37), 0), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0, (("library/goptions.mli", 201, 8130, 8130), ("library/goptions.mli", 202, 8208, 8275), 0), 0, Tag1 ("Goptions", 74)), 0); Tag1 (("option_state", 998), (0, 0, [[(("opt_depr", 916), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Deprecation")), "t"), 0, (0)), 100000000, 0, -31)], (0)), 100000000, 0, -30), (("library/goptions.mli", 211, 8631, 8633), ("library/goptions.mli", 211, 8631, 8666), 0), 0, Tag1 ("Goptions", 76)); (("opt_value", 917), 0, (Tag3 ((("option_value", 994)), 0, (0)), 100000000, 0, -32), (("library/goptions.mli", 212, 8667, 8669), ("library/goptions.mli", 212, 8667, 8694), 0), 0, Tag1 ("Goptions", 77))]], 1, 0, 0, 0, 0, 0, (("library/goptions.mli", 210, 8609, 8609), ("library/goptions.mli", 213, 8695, 8696), 0), 0, 0, 0, Tag1 ("Goptions", 75)), 1, 0); (("get_tables", 999), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -29), (Tag3 (Tag1 ((("OptionMap", 981)), "t"), [(Tag3 ((("option_state", 998)), 0, (0)), 100000000, 0, -28)], (0)), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("library/goptions.mli", 215, 8698, 8698), ("library/goptions.mli", 215, 8698, 8747), 0), 0, Tag1 ("Goptions", 78)), 0); (("print_tables", 1000), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -25), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("library/goptions.mli", 216, 8748, 8748), ("library/goptions.mli", 216, 8748, 8779), 0), 0, Tag1 ("Goptions", 79)), 0); Tag1 (("iter_table_aux", 1001), (0, 0, [[(("aux", 921), 0, (Tag10 ((Tag1 (0, (Tag3 ((("table_of_A", 982)), [(Tag9 (("a")), 100000000, 0, -16)], (0)), 100000000, 0, -22), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -21), (Tag1 (0, (Tag9 (("a")), 100000000, 0, -16), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), [(Tag9 (("a")), 100000000, 0, -16)]), 100000000, 0, -15), (("library/goptions.mli", 218, 8781, 8805), ("library/goptions.mli", 218, 8781, 8857), 0), 0, Tag1 ("Goptions", 81))]], 1, 0, 0, 0, 0, 0, (("library/goptions.mli", 218, 8781, 8781), ("library/goptions.mli", 218, 8781, 8859), 0), 0, 0, 1, Tag1 ("Goptions", 80)), 1, 0); (("iter_table", 1002), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -14), (Tag1 (0, (Tag3 ((("iter_table_aux", 1001)), 0, (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 ((("option_name", 963)), 0, (0)), 100000000, 0, -12), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("table_value", 995)), 0, (0)), 100000000, 0, -11)], (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("library/goptions.mli", 219, 8860, 8860), ("library/goptions.mli", 219, 8860, 8949), 0), 0, Tag1 ("Goptions", 82)), 0); (("error_undeclared_key", 1003), ((Tag1 (0, (Tag3 ((("option_name", 963)), 0, (0)), 100000000, 0, -4), ((("a")), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("library/goptions.mli", 221, 8951, 8951), ("library/goptions.mli", 221, 8951, 8995), 0), 0, Tag1 ("Goptions", 83)), 0)], "Goptions", [("Goptions", ("i>Rt=\183g\153\190\144\235u\248\247*e")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Deprecation", ("\226:\146\245\190;\1929\254@\247a\218\244\134\189")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CWarnings", ("\132\220\150\227\215\239t\217\132\220'JX\188\246c")); ("CString", ("\243~4C\023~\169\148x\206\165\207\195\177Q\184")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
val error_undeclared_key : option_name -> 'a
