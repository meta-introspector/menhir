val is_in_char_set : CamlinternalFormatBasics.char_set -> char -> bool
val rev_char_set :
  CamlinternalFormatBasics.char_set -> CamlinternalFormatBasics.char_set
type mutable_char_set = bytes
val create_char_set : unit -> mutable_char_set
val add_in_char_set : mutable_char_set -> char -> unit
val freeze_char_set : mutable_char_set -> CamlinternalFormatBasics.char_set
type ('a, 'b, 'c, 'd, 'e, 'f) param_format_ebb =
    Param_format_EBB :
      ('x -> 'a, 'b, 'c, 'd, 'e, 'f) CamlinternalFormatBasics.fmt -> 
      ('a, 'b, 'c, 'd, 'e, 'f) param_format_ebb
val param_format_of_ignored_format :
  ('a, 'b, 'c, 'd, 'y, 'x) CamlinternalFormatBasics.ignored ->
  ('x, 'b, 'c, 'y, 'e, 'f) CamlinternalFormatBasics.fmt ->
  ('a, 'b, 'c, 'd, 'e, 'f) param_format_ebb
type ('b, 'c) acc_formatting_gen =
    Acc_open_tag of ('b, 'c) acc
  | Acc_open_box of ('b, 'c) acc
and ('b, 'c) acc =
    Acc_formatting_lit of ('b, 'c) acc *
      CamlinternalFormatBasics.formatting_lit
  | Acc_formatting_gen of ('b, 'c) acc * ('b, 'c) acc_formatting_gen
  | Acc_string_literal of ('b, 'c) acc * string
  | Acc_char_literal of ('b, 'c) acc * char
  | Acc_data_string of ('b, 'c) acc * string
  | Acc_data_char of ('b, 'c) acc * char
  | Acc_delay of ('b, 'c) acc * ('b -> 'c)
  | Acc_flush of ('b, 'c) acc
  | Acc_invalid_arg of ('b, 'c) acc * string
  | End_of_acc
type ('a, 'b) heter_list =
    Cons : 'c * ('a, 'b) heter_list -> ('c -> 'a, 'b) heter_list
  | Nil : ('b, 'b) heter_list
type ('b, 'c, 'e, 'f) fmt_ebb =
    Fmt_EBB :
      ('a, 'b, 'c, 'd, 'e, 'f) CamlinternalFormatBasics.fmt -> ('b, 'c, 'e,
                                                                'f)
                                                               fmt_ebb
val make_printf :
  (('b, 'c) acc -> 'd) ->
  ('b, 'c) acc -> ('a, 'b, 'c, 'c, 'c, 'd) CamlinternalFormatBasics.fmt -> 'a
val make_iprintf :
  ('s -> 'f) ->
  's -> ('a, 'b, 'c, 'd, 'e, 'f) CamlinternalFormatBasics.fmt -> 'a
val output_acc : out_channel -> (out_channel, unit) acc -> unit
val bufput_acc : Buffer.t -> (Buffer.t, unit) acc -> unit
val strput_acc : Buffer.t -> (unit, string) acc -> unit
val type_format :
  ('x, 'b, 'c, 't, 'u, 'v) CamlinternalFormatBasics.fmt ->
  ('a, 'b, 'c, 'd, 'e, 'f) CamlinternalFormatBasics.fmtty ->
  ('a, 'b, 'c, 'd, 'e, 'f) CamlinternalFormatBasics.fmt
val fmt_ebb_of_string :
  ?legacy_behavior:bool -> string -> ('b, 'c, 'e, 'f) fmt_ebb
val format_of_string_fmtty :
  string ->
  ('a, 'b, 'c, 'd, 'e, 'f) CamlinternalFormatBasics.fmtty ->
  ('a, 'b, 'c, 'd, 'e, 'f) CamlinternalFormatBasics.format6
val format_of_string_format :
  string ->
  ('a, 'b, 'c, 'd, 'e, 'f) CamlinternalFormatBasics.format6 ->
  ('a, 'b, 'c, 'd, 'e, 'f) CamlinternalFormatBasics.format6
val char_of_iconv : CamlinternalFormatBasics.int_conv -> char
val string_of_formatting_lit :
  CamlinternalFormatBasics.formatting_lit -> string
val string_of_fmtty :
  ('a, 'b, 'c, 'd, 'e, 'f) CamlinternalFormatBasics.fmtty -> string
val string_of_fmt :
  ('a, 'b, 'c, 'd, 'e, 'f) CamlinternalFormatBasics.fmt -> string
val open_box_of_string : string -> int * CamlinternalFormatBasics.block_type
val symm :
  ('a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'a2, 'b2, 'c2, 'd2, 'e2, 'f2)
  CamlinternalFormatBasics.fmtty_rel ->
  ('a2, 'b2, 'c2, 'd2, 'e2, 'f2, 'a1, 'b1, 'c1, 'd1, 'e1, 'f1)
  CamlinternalFormatBasics.fmtty_rel
val trans :
  ('a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'a2, 'b2, 'c2, 'd2, 'e2, 'f2)
  CamlinternalFormatBasics.fmtty_rel ->
  ('a2, 'b2, 'c2, 'd2, 'e2, 'f2, 'a3, 'b3, 'c3, 'd3, 'e3, 'f3)
  CamlinternalFormatBasics.fmtty_rel ->
  ('a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'a3, 'b3, 'c3, 'd3, 'e3, 'f3)
  CamlinternalFormatBasics.fmtty_rel
val recast :
  ('a1, 'b1, 'c1, 'd1, 'e1, 'f1) CamlinternalFormatBasics.fmt ->
  ('a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'a2, 'b2, 'c2, 'd2, 'e2, 'f2)
  CamlinternalFormatBasics.fmtty_rel ->
  ("DEBUG:rule", [(("is_in_char_set", 378), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "char_set"), 0, (0)), 100000000, 0, -270), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -269), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -268), 0), 100000000, 0, -267), 0), 100000000, 0, -266), 0, (("camlinternalFormat.mli", 20, 1162, 1162), ("camlinternalFormat.mli", 20, 1162, 1207), 0), 0, Tag1 ("CamlinternalFormat", 0)), 0); (("rev_char_set", 379), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "char_set"), 0, (0)), 100000000, 0, -265), (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "char_set"), 0, (0)), 100000000, 0, -264), 0), 100000000, 0, -263), 0, (("camlinternalFormat.mli", 21, 1208, 1208), ("camlinternalFormat.mli", 21, 1208, 1247), 0), 0, Tag1 ("CamlinternalFormat", 1)), 0); Tag1 (("mutable_char_set", 380), (0, 0, 0, 1, ((Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -262)), 0, 0, 0, 0, (("camlinternalFormat.mli", 23, 1249, 1249), ("camlinternalFormat.mli", 23, 1249, 1278), 0), 0, 0, 0, Tag1 ("CamlinternalFormat", 2)), 1, 0); (("create_char_set", 381), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -261), (Tag3 ((("mutable_char_set", 380)), 0, (0)), 100000000, 0, -260), 0), 100000000, 0, -259), 0, (("camlinternalFormat.mli", 24, 1279, 1279), ("camlinternalFormat.mli", 24, 1279, 1325), 0), 0, Tag1 ("CamlinternalFormat", 3)), 0); (("add_in_char_set", 382), ((Tag1 (0, (Tag3 ((("mutable_char_set", 380)), 0, (0)), 100000000, 0, -258), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -257), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -256), 0), 100000000, 0, -255), 0), 100000000, 0, -254), 0, (("camlinternalFormat.mli", 25, 1326, 1326), ("camlinternalFormat.mli", 25, 1326, 1380), 0), 0, Tag1 ("CamlinternalFormat", 4)), 0); (("freeze_char_set", 383), ((Tag1 (0, (Tag3 ((("mutable_char_set", 380)), 0, (0)), 100000000, 0, -253), (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "char_set"), 0, (0)), 100000000, 0, -252), 0), 100000000, 0, -251), 0, (("camlinternalFormat.mli", 26, 1381, 1381), ("camlinternalFormat.mli", 26, 1381, 1431), 0), 0, Tag1 ("CamlinternalFormat", 5)), 0); Tag1 (("param_format_ebb", 384), ([((("a")), 100000000, 0, -245); ((("b")), 100000000, 0, -246); ((("c")), 100000000, 0, -247); ((("d")), 100000000, 0, -248); ((("e")), 100000000, 0, -249); ((("f")), 100000000, 0, -250)], 6, Tag1 ([(("Param_format_EBB", 299), ([(Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "fmt"), [(Tag1 (0, ((("x")), 100000000, 0, -244), ((("a")), 100000000, 0, -236), 0), 100000000, 0, -243); ((("b")), 100000000, 0, -237); ((("c")), 100000000, 0, -238); ((("d")), 100000000, 0, -239); ((("e")), 100000000, 0, -240); ((("f")), 100000000, 0, -241)], (0)), 100000000, 0, -242)]), ((Tag3 ((("param_format_ebb", 384)), [((("a")), 100000000, 0, -236); ((("b")), 100000000, 0, -237); ((("c")), 100000000, 0, -238); ((("d")), 100000000, 0, -239); ((("e")), 100000000, 0, -240); ((("f")), 100000000, 0, -241)], (0)), 100000000, 0, -235)), (("camlinternalFormat.mli", 28, 1433, 1482), ("camlinternalFormat.mli", 30, 1544, 1590), 0), 0, Tag1 ("CamlinternalFormat", 7))], 0), 1, 0, [63; 15; 15; 63; 15; 15], [0; 0; 0; 0; 0; 0], 0, 0, (("camlinternalFormat.mli", 28, 1433, 1433), ("camlinternalFormat.mli", 30, 1544, 1590), 0), 0, 0, 1, Tag1 ("CamlinternalFormat", 6)), 1, 0); (("param_format_of_ignored_format", 385), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "ignored"), [((("a")), 100000000, 0, -225); ((("b")), 100000000, 0, -226); ((("c")), 100000000, 0, -227); ((("d")), 100000000, 0, -228); ((("y")), 100000000, 0, -233); ((("x")), 100000000, 0, -232)], (0)), 100000000, 0, -234), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "fmt"), [((("x")), 100000000, 0, -232); ((("b")), 100000000, 0, -226); ((("c")), 100000000, 0, -227); ((("y")), 100000000, 0, -233); ((("e")), 100000000, 0, -229); ((("f")), 100000000, 0, -230)], (0)), 100000000, 0, -231), (Tag3 ((("param_format_ebb", 384)), [((("a")), 100000000, 0, -225); ((("b")), 100000000, 0, -226); ((("c")), 100000000, 0, -227); ((("d")), 100000000, 0, -228); ((("e")), 100000000, 0, -229); ((("f")), 100000000, 0, -230)], (0)), 100000000, 0, -224), 0), 100000000, 0, -223), 0), 100000000, 0, -222), 0, (("camlinternalFormat.mli", 32, 1592, 1592), ("camlinternalFormat.mli", 34, 1699, 1742), 0), 0, Tag1 ("CamlinternalFormat", 8)), 0); Tag1 (("acc_formatting_gen", 386), ([((("b")), 100000000, 0, -219); ((("c")), 100000000, 0, -220)], 2, Tag1 ([(("Acc_open_tag", 303), ([(Tag3 ((("acc", 387)), [((("b")), 100000000, 0, -219); ((("c")), 100000000, 0, -220)], (0)), 100000000, 0, -218)]), 0, (("camlinternalFormat.mli", 37, 1779, 1781), ("camlinternalFormat.mli", 37, 1779, 1811), 0), 0, Tag1 ("CamlinternalFormat", 11)); (("Acc_open_box", 304), ([(Tag3 ((("acc", 387)), [((("b")), 100000000, 0, -219); ((("c")), 100000000, 0, -220)], (0)), 100000000, 0, -221)]), 0, (("camlinternalFormat.mli", 38, 1812, 1814), ("camlinternalFormat.mli", 38, 1812, 1844), 0), 0, Tag1 ("CamlinternalFormat", 12))], 0), 1, 0, [46; 25], [0; 0], 0, 0, (("camlinternalFormat.mli", 36, 1744, 1744), ("camlinternalFormat.mli", 38, 1812, 1844), 0), 0, 0, 0, Tag1 ("CamlinternalFormat", 9)), 1, 0); Tag1 (("acc", 387), ([((("b")), 100000000, 0, -200); ((("c")), 100000000, 0, -201)], 2, Tag1 ([(("Acc_formatting_lit", 305), ([(Tag3 ((("acc", 387)), [((("b")), 100000000, 0, -200); ((("c")), 100000000, 0, -201)], (0)), 100000000, 0, -199); (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "formatting_lit"), 0, (0)), 100000000, 0, -202)]), 0, (("camlinternalFormat.mli", 41, 1865, 1867), ("camlinternalFormat.mli", 41, 1865, 1920), 0), 0, Tag1 ("CamlinternalFormat", 13)); (("Acc_formatting_gen", 306), ([(Tag3 ((("acc", 387)), [((("b")), 100000000, 0, -200); ((("c")), 100000000, 0, -201)], (0)), 100000000, 0, -203); (Tag3 ((("acc_formatting_gen", 386)), [((("b")), 100000000, 0, -200); ((("c")), 100000000, 0, -201)], (0)), 100000000, 0, -204)]), 0, (("camlinternalFormat.mli", 42, 1921, 1923), ("camlinternalFormat.mli", 42, 1921, 1989), 0), 0, Tag1 ("CamlinternalFormat", 14)); (("Acc_string_literal", 307), ([(Tag3 ((("acc", 387)), [((("b")), 100000000, 0, -200); ((("c")), 100000000, 0, -201)], (0)), 100000000, 0, -205); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -206)]), 0, (("camlinternalFormat.mli", 43, 1990, 1992), ("camlinternalFormat.mli", 43, 1990, 2037), 0), 0, Tag1 ("CamlinternalFormat", 15)); (("Acc_char_literal", 308), ([(Tag3 ((("acc", 387)), [((("b")), 100000000, 0, -200); ((("c")), 100000000, 0, -201)], (0)), 100000000, 0, -207); (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -208)]), 0, (("camlinternalFormat.mli", 44, 2038, 2040), ("camlinternalFormat.mli", 44, 2038, 2083), 0), 0, Tag1 ("CamlinternalFormat", 16)); (("Acc_data_string", 309), ([(Tag3 ((("acc", 387)), [((("b")), 100000000, 0, -200); ((("c")), 100000000, 0, -201)], (0)), 100000000, 0, -209); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -210)]), 0, (("camlinternalFormat.mli", 45, 2084, 2086), ("camlinternalFormat.mli", 45, 2084, 2131), 0), 0, Tag1 ("CamlinternalFormat", 17)); (("Acc_data_char", 310), ([(Tag3 ((("acc", 387)), [((("b")), 100000000, 0, -200); ((("c")), 100000000, 0, -201)], (0)), 100000000, 0, -211); (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -212)]), 0, (("camlinternalFormat.mli", 46, 2132, 2134), ("camlinternalFormat.mli", 46, 2132, 2177), 0), 0, Tag1 ("CamlinternalFormat", 18)); (("Acc_delay", 311), ([(Tag3 ((("acc", 387)), [((("b")), 100000000, 0, -200); ((("c")), 100000000, 0, -201)], (0)), 100000000, 0, -213); (Tag1 (0, ((("b")), 100000000, 0, -200), ((("c")), 100000000, 0, -201), 0), 100000000, 0, -214)]), 0, (("camlinternalFormat.mli", 47, 2178, 2180), ("camlinternalFormat.mli", 47, 2178, 2229), 0), 0, Tag1 ("CamlinternalFormat", 19)); (("Acc_flush", 312), ([(Tag3 ((("acc", 387)), [((("b")), 100000000, 0, -200); ((("c")), 100000000, 0, -201)], (0)), 100000000, 0, -215)]), 0, (("camlinternalFormat.mli", 48, 2230, 2232), ("camlinternalFormat.mli", 48, 2230, 2268), 0), 0, Tag1 ("CamlinternalFormat", 20)); (("Acc_invalid_arg", 313), ([(Tag3 ((("acc", 387)), [((("b")), 100000000, 0, -200); ((("c")), 100000000, 0, -201)], (0)), 100000000, 0, -216); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -217)]), 0, (("camlinternalFormat.mli", 49, 2269, 2271), ("camlinternalFormat.mli", 49, 2269, 2316), 0), 0, Tag1 ("CamlinternalFormat", 21)); (("End_of_acc", 314), (0), 0, (("camlinternalFormat.mli", 50, 2317, 2319), ("camlinternalFormat.mli", 50, 2317, 2331), 0), 0, Tag1 ("CamlinternalFormat", 22))], 0), 1, 0, [46; 25], [0; 0], 0, 0, (("camlinternalFormat.mli", 40, 1846, 1846), ("camlinternalFormat.mli", 50, 2317, 2331), 0), 0, 0, 0, Tag1 ("CamlinternalFormat", 10)), 2, 0); Tag1 (("heter_list", 388), ([((("a")), 100000000, 0, -197); ((("b")), 100000000, 0, -198)], 2, Tag1 ([(("Cons", 316), ([((("c")), 100000000, 0, -192); (Tag3 ((("heter_list", 388)), [((("a")), 100000000, 0, -191); ((("b")), 100000000, 0, -193)], (0)), 100000000, 0, -194)]), ((Tag3 ((("heter_list", 388)), [(Tag1 (0, ((("c")), 100000000, 0, -192), ((("a")), 100000000, 0, -191), 0), 100000000, 0, -190); ((("b")), 100000000, 0, -193)], (0)), 100000000, 0, -189)), (("camlinternalFormat.mli", 53, 2360, 2362), ("camlinternalFormat.mli", 53, 2360, 2424), 0), 0, Tag1 ("CamlinternalFormat", 24)); (("Nil", 317), (0), ((Tag3 ((("heter_list", 388)), [((("b")), 100000000, 0, -196); ((("b")), 100000000, 0, -196)], (0)), 100000000, 0, -195)), (("camlinternalFormat.mli", 54, 2425, 2427), ("camlinternalFormat.mli", 54, 2425, 2454), 0), 0, Tag1 ("CamlinternalFormat", 25))], 0), 1, 0, [63; 15], [0; 0], 0, 0, (("camlinternalFormat.mli", 52, 2333, 2333), ("camlinternalFormat.mli", 54, 2425, 2454), 0), 0, 0, 0, Tag1 ("CamlinternalFormat", 23)), 1, 0); Tag1 (("fmt_ebb", 389), ([((("b")), 100000000, 0, -185); ((("c")), 100000000, 0, -186); ((("e")), 100000000, 0, -187); ((("f")), 100000000, 0, -188)], 4, Tag1 ([(("Fmt_EBB", 319), ([(Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "fmt"), [((("a")), 100000000, 0, -183); ((("b")), 100000000, 0, -178); ((("c")), 100000000, 0, -179); ((("d")), 100000000, 0, -184); ((("e")), 100000000, 0, -180); ((("f")), 100000000, 0, -181)], (0)), 100000000, 0, -182)]), ((Tag3 ((("fmt_ebb", 389)), [((("b")), 100000000, 0, -178); ((("c")), 100000000, 0, -179); ((("e")), 100000000, 0, -180); ((("f")), 100000000, 0, -181)], (0)), 100000000, 0, -177)), (("camlinternalFormat.mli", 56, 2456, 2488), ("camlinternalFormat.mli", 58, 2560, 2589), 0), 0, Tag1 ("CamlinternalFormat", 27))], 0), 1, 0, [15; 15; 15; 15], [0; 0; 0; 0], 0, 0, (("camlinternalFormat.mli", 56, 2456, 2456), ("camlinternalFormat.mli", 58, 2560, 2589), 0), 0, 0, 1, Tag1 ("CamlinternalFormat", 26)), 1, 0); (("make_printf", 390), ((Tag1 (0, (Tag1 (0, (Tag3 ((("acc", 387)), [((("b")), 100000000, 0, -171); ((("c")), 100000000, 0, -172)], (0)), 100000000, 0, -176), ((("d")), 100000000, 0, -173), 0), 100000000, 0, -175), (Tag1 (0, (Tag3 ((("acc", 387)), [((("b")), 100000000, 0, -171); ((("c")), 100000000, 0, -172)], (0)), 100000000, 0, -174), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "fmt"), [((("a")), 100000000, 0, -169); ((("b")), 100000000, 0, -171); ((("c")), 100000000, 0, -172); ((("c")), 100000000, 0, -172); ((("c")), 100000000, 0, -172); ((("d")), 100000000, 0, -173)], (0)), 100000000, 0, -170), ((("a")), 100000000, 0, -169), 0), 100000000, 0, -168), 0), 100000000, 0, -167), 0), 100000000, 0, -166), 0, (("camlinternalFormat.mli", 60, 2591, 2591), ("camlinternalFormat.mli", 62, 2651, 2712), 0), 0, Tag1 ("CamlinternalFormat", 28)), 0); (("make_iprintf", 391), ((Tag1 (0, (Tag1 (0, ((("s")), 100000000, 0, -164), ((("f")), 100000000, 0, -163), 0), 100000000, 0, -165), (Tag1 (0, ((("s")), 100000000, 0, -164), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "fmt"), [((("a")), 100000000, 0, -157); ((("b")), 100000000, 0, -159); ((("c")), 100000000, 0, -160); ((("d")), 100000000, 0, -161); ((("e")), 100000000, 0, -162); ((("f")), 100000000, 0, -163)], (0)), 100000000, 0, -158), ((("a")), 100000000, 0, -157), 0), 100000000, 0, -156), 0), 100000000, 0, -155), 0), 100000000, 0, -154), 0, (("camlinternalFormat.mli", 64, 2714, 2714), ("camlinternalFormat.mli", 64, 2714, 2787), 0), 0, Tag1 ("CamlinternalFormat", 29)), 0); (("output_acc", 392), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -153), (Tag1 (0, (Tag3 ((("acc", 387)), [(Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -151); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -152)], (0)), 100000000, 0, -150), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -149), 0), 100000000, 0, -148), 0), 100000000, 0, -147), 0, (("camlinternalFormat.mli", 66, 2789, 2789), ("camlinternalFormat.mli", 66, 2789, 2852), 0), 0, Tag1 ("CamlinternalFormat", 30)), 0); (("bufput_acc", 393), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Buffer"), "t"), 0, (0)), 100000000, 0, -146), (Tag1 (0, (Tag3 ((("acc", 387)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Buffer"), "t"), 0, (0)), 100000000, 0, -144); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -145)], (0)), 100000000, 0, -143), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -142), 0), 100000000, 0, -141), 0), 100000000, 0, -140), 0, (("camlinternalFormat.mli", 67, 2853, 2853), ("camlinternalFormat.mli", 67, 2853, 2910), 0), 0, Tag1 ("CamlinternalFormat", 31)), 0); (("strput_acc", 394), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Buffer"), "t"), 0, (0)), 100000000, 0, -139), (Tag1 (0, (Tag3 ((("acc", 387)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -137); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -138)], (0)), 100000000, 0, -136), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -135), 0), 100000000, 0, -134), 0), 100000000, 0, -133), 0, (("camlinternalFormat.mli", 68, 2911, 2911), ("camlinternalFormat.mli", 68, 2911, 2966), 0), 0, Tag1 ("CamlinternalFormat", 32)), 0); (("type_format", 395), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "fmt"), [((("x")), 100000000, 0, -129); ((("b")), 100000000, 0, -122); ((("c")), 100000000, 0, -123); ((("t")), 100000000, 0, -130); ((("u")), 100000000, 0, -131); ((("v")), 100000000, 0, -132)], (0)), 100000000, 0, -128), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "fmtty"), [((("a")), 100000000, 0, -121); ((("b")), 100000000, 0, -122); ((("c")), 100000000, 0, -123); ((("d")), 100000000, 0, -124); ((("e")), 100000000, 0, -125); ((("f")), 100000000, 0, -126)], (0)), 100000000, 0, -127), (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "fmt"), [((("a")), 100000000, 0, -121); ((("b")), 100000000, 0, -122); ((("c")), 100000000, 0, -123); ((("d")), 100000000, 0, -124); ((("e")), 100000000, 0, -125); ((("f")), 100000000, 0, -126)], (0)), 100000000, 0, -120), 0), 100000000, 0, -119), 0), 100000000, 0, -118), 0, (("camlinternalFormat.mli", 70, 2968, 2968), ("camlinternalFormat.mli", 73, 3106, 3161), 0), 0, Tag1 ("CamlinternalFormat", 33)), 0); (("fmt_ebb_of_string", 396), ((Tag1 (Tag1 ("legacy_behavior"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -117)], (0)), 100000000, 0, -116), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -115), (Tag3 ((("fmt_ebb", 389)), [((("b")), 100000000, 0, -111); ((("c")), 100000000, 0, -112); ((("e")), 100000000, 0, -113); ((("f")), 100000000, 0, -114)], (0)), 100000000, 0, -110), 0), 100000000, 0, -109), 0), 100000000, 0, -108), 0, (("camlinternalFormat.mli", 75, 3163, 3163), ("camlinternalFormat.mli", 76, 3187, 3248), 0), 0, Tag1 ("CamlinternalFormat", 34)), 0); (("format_of_string_fmtty", 397), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -107), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "fmtty"), [((("a")), 100000000, 0, -100); ((("b")), 100000000, 0, -101); ((("c")), 100000000, 0, -102); ((("d")), 100000000, 0, -103); ((("e")), 100000000, 0, -104); ((("f")), 100000000, 0, -105)], (0)), 100000000, 0, -106), (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "format6"), [((("a")), 100000000, 0, -100); ((("b")), 100000000, 0, -101); ((("c")), 100000000, 0, -102); ((("d")), 100000000, 0, -103); ((("e")), 100000000, 0, -104); ((("f")), 100000000, 0, -105)], (0)), 100000000, 0, -99), 0), 100000000, 0, -98), 0), 100000000, 0, -97), 0, (("camlinternalFormat.mli", 82, 3446, 3446), ("camlinternalFormat.mli", 85, 3548, 3607), 0), 0, Tag1 ("CamlinternalFormat", 35)), 0); (("format_of_string_format", 398), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -96), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "format6"), [((("a")), 100000000, 0, -89); ((("b")), 100000000, 0, -90); ((("c")), 100000000, 0, -91); ((("d")), 100000000, 0, -92); ((("e")), 100000000, 0, -93); ((("f")), 100000000, 0, -94)], (0)), 100000000, 0, -95), (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "format6"), [((("a")), 100000000, 0, -89); ((("b")), 100000000, 0, -90); ((("c")), 100000000, 0, -91); ((("d")), 100000000, 0, -92); ((("e")), 100000000, 0, -93); ((("f")), 100000000, 0, -94)], (0)), 100000000, 0, -88), 0), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("camlinternalFormat.mli", 87, 3609, 3609), ("camlinternalFormat.mli", 90, 3714, 3773), 0), 0, Tag1 ("CamlinternalFormat", 36)), 0); (("char_of_iconv", 399), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "int_conv"), 0, (0)), 100000000, 0, -85), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -84), 0), 100000000, 0, -83), 0, (("camlinternalFormat.mli", 92, 3775, 3775), ("camlinternalFormat.mli", 92, 3775, 3836), 0), 0, Tag1 ("CamlinternalFormat", 37)), 0); (("string_of_formatting_lit", 400), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "formatting_lit"), 0, (0)), 100000000, 0, -82), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0, (("camlinternalFormat.mli", 93, 3837, 3837), ("camlinternalFormat.mli", 93, 3837, 3917), 0), 0, Tag1 ("CamlinternalFormat", 38)), 0); (("string_of_fmtty", 401), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "fmtty"), [((("a")), 100000000, 0, -74); ((("b")), 100000000, 0, -75); ((("c")), 100000000, 0, -76); ((("d")), 100000000, 0, -77); ((("e")), 100000000, 0, -78); ((("f")), 100000000, 0, -79)], (0)), 100000000, 0, -73), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0, (("camlinternalFormat.mli", 95, 3919, 3919), ("camlinternalFormat.mli", 96, 3941, 4008), 0), 0, Tag1 ("CamlinternalFormat", 39)), 0); (("string_of_fmt", 402), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "fmt"), [((("a")), 100000000, 0, -65); ((("b")), 100000000, 0, -66); ((("c")), 100000000, 0, -67); ((("d")), 100000000, 0, -68); ((("e")), 100000000, 0, -69); ((("f")), 100000000, 0, -70)], (0)), 100000000, 0, -64), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -63), 0), 100000000, 0, -62), 0, (("camlinternalFormat.mli", 97, 4009, 4009), ("camlinternalFormat.mli", 98, 4029, 4094), 0), 0, Tag1 ("CamlinternalFormat", 40)), 0); (("open_box_of_string", 403), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -61), (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -59); (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "block_type"), 0, (0)), 100000000, 0, -60)]), 100000000, 0, -58), 0), 100000000, 0, -57), 0, (("camlinternalFormat.mli", 100, 4096, 4096), ("camlinternalFormat.mli", 100, 4096, 4147), 0), 0, Tag1 ("CamlinternalFormat", 41)), 0); (("symm", 404), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "fmtty_rel"), [((("a1")), 100000000, 0, -50); ((("b1")), 100000000, 0, -51); ((("c1")), 100000000, 0, -52); ((("d1")), 100000000, 0, -53); ((("e1")), 100000000, 0, -54); ((("f1")), 100000000, 0, -55); ((("a2")), 100000000, 0, -44); ((("b2")), 100000000, 0, -45); ((("c2")), 100000000, 0, -46); ((("d2")), 100000000, 0, -47); ((("e2")), 100000000, 0, -48); ((("f2")), 100000000, 0, -49)], (0)), 100000000, 0, -56), (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "fmtty_rel"), [((("a2")), 100000000, 0, -44); ((("b2")), 100000000, 0, -45); ((("c2")), 100000000, 0, -46); ((("d2")), 100000000, 0, -47); ((("e2")), 100000000, 0, -48); ((("f2")), 100000000, 0, -49); ((("a1")), 100000000, 0, -50); ((("b1")), 100000000, 0, -51); ((("c1")), 100000000, 0, -52); ((("d1")), 100000000, 0, -53); ((("e1")), 100000000, 0, -54); ((("f1")), 100000000, 0, -55)], (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("camlinternalFormat.mli", 102, 4149, 4149), ("camlinternalFormat.mli", 106, 4272, 4315), 0), 0, Tag1 ("CamlinternalFormat", 42)), 0); (("trans", 405), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "fmtty_rel"), [((("a1")), 100000000, 0, -22); ((("b1")), 100000000, 0, -23); ((("c1")), 100000000, 0, -24); ((("d1")), 100000000, 0, -25); ((("e1")), 100000000, 0, -26); ((("f1")), 100000000, 0, -27); ((("a2")), 100000000, 0, -35); ((("b2")), 100000000, 0, -36); ((("c2")), 100000000, 0, -37); ((("d2")), 100000000, 0, -38); ((("e2")), 100000000, 0, -39); ((("f2")), 100000000, 0, -40)], (0)), 100000000, 0, -41), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "fmtty_rel"), [((("a2")), 100000000, 0, -35); ((("b2")), 100000000, 0, -36); ((("c2")), 100000000, 0, -37); ((("d2")), 100000000, 0, -38); ((("e2")), 100000000, 0, -39); ((("f2")), 100000000, 0, -40); ((("a3")), 100000000, 0, -28); ((("b3")), 100000000, 0, -29); ((("c3")), 100000000, 0, -30); ((("d3")), 100000000, 0, -31); ((("e3")), 100000000, 0, -32); ((("f3")), 100000000, 0, -33)], (0)), 100000000, 0, -34), (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "fmtty_rel"), [((("a1")), 100000000, 0, -22); ((("b1")), 100000000, 0, -23); ((("c1")), 100000000, 0, -24); ((("d1")), 100000000, 0, -25); ((("e1")), 100000000, 0, -26); ((("f1")), 100000000, 0, -27); ((("a3")), 100000000, 0, -28); ((("b3")), 100000000, 0, -29); ((("c3")), 100000000, 0, -30); ((("d3")), 100000000, 0, -31); ((("e3")), 100000000, 0, -32); ((("f3")), 100000000, 0, -33)], (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("camlinternalFormat.mli", 108, 4317, 4317), ("camlinternalFormat.mli", 114, 4519, 4562), 0), 0, Tag1 ("CamlinternalFormat", 43)), 0); (("recast", 406), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "fmt"), [((("a1")), 100000000, 0, -12); ((("b1")), 100000000, 0, -13); ((("c1")), 100000000, 0, -14); ((("d1")), 100000000, 0, -15); ((("e1")), 100000000, 0, -16); ((("f1")), 100000000, 0, -17)], (0)), 100000000, 0, -18), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "fmtty_rel"), [((("a1")), 100000000, 0, -12); ((("b1")), 100000000, 0, -13); ((("c1")), 100000000, 0, -14); ((("d1")), 100000000, 0, -15); ((("e1")), 100000000, 0, -16); ((("f1")), 100000000, 0, -17); ((("a2")), 100000000, 0, -5); ((("b2")), 100000000, 0, -6); ((("c2")), 100000000, 0, -7); ((("d2")), 100000000, 0, -8); ((("e2")), 100000000, 0, -9); ((("f2")), 100000000, 0, -10)], (0)), 100000000, 0, -11), (Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "fmt"), [((("a2")), 100000000, 0, -5); ((("b2")), 100000000, 0, -6); ((("c2")), 100000000, 0, -7); ((("d2")), 100000000, 0, -8); ((("e2")), 100000000, 0, -9); ((("f2")), 100000000, 0, -10)], (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("camlinternalFormat.mli", 116, 4564, 4564), ("camlinternalFormat.mli", 120, 4693, 4730), 0), 0, Tag1 ("CamlinternalFormat", 44)), 0)], "CamlinternalFormat", [("CamlinternalFormat", ("Q\224\002y\180\215\t\148n4\202y\025(\239\186")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
('a2, 'b2, 'c2, 'd2, 'e2, 'f2) CamlinternalFormatBasics.fmt
