type t = char
val lowercase_ascii : char -> char
val uppercase_ascii : char -> char
val equal : t -> t -> bool
external code : char -> int = "%identity"
val chr : int -> char
val escaped : char -> string
val compare : t -> t -> int("DEBUG:rule", [Tag1 (("t", 288), (0, 0, 0, 1, ((Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -30)), 0, 0, 0, 0, (("stdcompat__char_s.mli", 2, 20, 20), ("stdcompat__char_s.mli", 2, 20, 33), 0), 0, 1, 0, Tag1 ("Stdcompat__char_s", 0)), 1, 0); (("lowercase_ascii", 289), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -29), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("stdcompat__char_s.mli", 5, 62, 62), ("stdcompat__char_s.mli", 5, 62, 96), 0), 0, Tag1 ("Stdcompat__char_s", 1)), 0); (("uppercase_ascii", 290), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -26), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("stdcompat__char_s.mli", 8, 155, 155), ("stdcompat__char_s.mli", 8, 155, 189), 0), 0, Tag1 ("Stdcompat__char_s", 2)), 0); (("equal", 291), ((Tag1 (0, (Tag3 ((("t", 288)), 0, (0)), 100000000, 0, -23), (Tag1 (0, (Tag3 ((("t", 288)), 0, (0)), 100000000, 0, -22), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("stdcompat__char_s.mli", 11, 248, 248), ("stdcompat__char_s.mli", 11, 248, 274), 0), 0, Tag1 ("Stdcompat__char_s", 3)), 0); (("code", 292), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -18), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -17), 0), 100000000, 0, -16), (("%identity", 1, 1, "", [0], 0)), (("stdcompat__char_s.mli", 14, 325, 325), ("stdcompat__char_s.mli", 14, 325, 366), 0), 0, Tag1 ("Stdcompat__char_s", 4)), 0); (("chr", 293), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -15), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("stdcompat__char_s.mli", 17, 398, 398), ("stdcompat__char_s.mli", 17, 398, 419), 0), 0, Tag1 ("Stdcompat__char_s", 5)), 0); (("escaped", 294), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -12), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("stdcompat__char_s.mli", 20, 450, 450), ("stdcompat__char_s.mli", 20, 450, 478), 0), 0, Tag1 ("Stdcompat__char_s", 6)), 0); (("compare", 295), ((Tag1 (0, (Tag3 ((("t", 288)), 0, (0)), 100000000, 0, -9), (Tag1 (0, (Tag3 ((("t", 288)), 0, (0)), 100000000, 0, -8), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("stdcompat__char_s.mli", 23, 513, 513), ("stdcompat__char_s.mli", 23, 513, 540), 0), 0, Tag1 ("Stdcompat__char_s", 7)), 0); (("unsafe_chr", 296), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), (("%identity", 1, 1, "", [0], 0)), (("stdcompat__char_s.mli", 26, 575, 575), ("stdcompat__char_s.mli", 26, 575, 622), 0), 0, Tag1 ("Stdcompat__char_s", 8)), 0)], "Stdcompat__char", [("Stdcompat__char", ("\014\232\158\204R\015#\168\\\181~\155\240\158\023B")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stdcompat__char_s", ("\131T\134\020\175\167V\t\140\235\202\153\019k\023\132")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

external unsafe_chr : int -> char = "%identity"
