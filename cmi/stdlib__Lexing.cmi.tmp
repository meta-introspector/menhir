type position = {
  pos_fname : string;
  pos_lnum : int;
  pos_bol : int;
  pos_cnum : int;
}
val dummy_pos : position
type lexbuf = {
  refill_buff : lexbuf -> unit;
  mutable lex_buffer : bytes;
  mutable lex_buffer_len : int;
  mutable lex_abs_pos : int;
  mutable lex_start_pos : int;
  mutable lex_curr_pos : int;
  mutable lex_last_pos : int;
  mutable lex_last_action : int;
  mutable lex_eof_reached : bool;
  mutable lex_mem : int array;
  mutable lex_start_p : position;
  mutable lex_curr_p : position;
}
val from_channel : ?with_positions:bool -> in_channel -> lexbuf
val from_string : ?with_positions:bool -> string -> lexbuf
val from_function : ?with_positions:bool -> (bytes -> int -> int) -> lexbuf
val set_position : lexbuf -> position -> unit
val set_filename : lexbuf -> string -> unit
val with_positions : lexbuf -> bool
val lexeme : lexbuf -> string
val lexeme_char : lexbuf -> int -> char
val lexeme_start : lexbuf -> int
val lexeme_end : lexbuf -> int
val lexeme_start_p : lexbuf -> position
val lexeme_end_p : lexbuf -> position
val new_line : lexbuf -> unit
val flush_input : lexbuf -> unit
val sub_lexeme : lexbuf -> int -> int -> string
val sub_lexeme_opt : lexbuf -> int -> int -> string option
val sub_lexeme_char : lexbuf -> int -> char
val sub_lexeme_char_opt : lexbuf -> int -> char option
type lex_tables = {
  lex_base : string;
  lex_backtrk : string;
  lex_default : string;
  lex_trans : string;
  lex_check : string;
  lex_base_code : string;
  lex_backtrk_code : string;
  lex_default_code : string;
  lex_trans_code : string;
  lex_check_code : string;
  lex_code : string;
}
val engine : lex_tables -> int -> lexbuf -> int
("DEBUG:rule", [Tag1 (("position", 320), (0, 0, [[(("pos_fname", 270), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -130), (("lexing.mli", 21, 1184, 1186), ("lexing.mli", 21, 1184, 1205), 0), 0, Tag1 ("Stdlib__Lexing", 1)); (("pos_lnum", 271), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -131), (("lexing.mli", 22, 1206, 1208), ("lexing.mli", 22, 1206, 1223), 0), 0, Tag1 ("Stdlib__Lexing", 2)); (("pos_bol", 272), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -132), (("lexing.mli", 23, 1224, 1226), ("lexing.mli", 23, 1224, 1240), 0), 0, Tag1 ("Stdlib__Lexing", 3)); (("pos_cnum", 273), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -133), (("lexing.mli", 24, 1241, 1243), ("lexing.mli", 24, 1241, 1258), 0), 0, Tag1 ("Stdlib__Lexing", 4))]], 1, 0, 0, 0, 0, 0, (("lexing.mli", 20, 1166, 1166), ("lexing.mli", 25, 1259, 1260), 0), 0, 0, 0, Tag1 ("Stdlib__Lexing", 0)), 1, 0); (("dummy_pos", 321), ((Tag3 ((("position", 320)), 0, (0)), 100000000, 0, -129), 0, (("lexing.mli", 40, 1950, 1950), ("lexing.mli", 40, 1950, 1974), 0), 0, Tag1 ("Stdlib__Lexing", 5)), 0); Tag1 (("lexbuf", 322), (0, 0, [[(("refill_buff", 276), 0, (Tag1 (0, (Tag3 ((("lexbuf", 322)), 0, (0)), 100000000, 0, -116), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -115), 0), 100000000, 0, -114), (("lexing.mli", 50, 2109, 2113), ("lexing.mli", 50, 2109, 2142), 0), 0, Tag1 ("Stdlib__Lexing", 7)); (("lex_buffer", 277), 1, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -117), (("lexing.mli", 51, 2143, 2147), ("lexing.mli", 51, 2143, 2174), 0), 0, Tag1 ("Stdlib__Lexing", 8)); (("lex_buffer_len", 278), 1, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -118), (("lexing.mli", 52, 2175, 2179), ("lexing.mli", 52, 2175, 2208), 0), 0, Tag1 ("Stdlib__Lexing", 9)); (("lex_abs_pos", 279), 1, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -119), (("lexing.mli", 53, 2209, 2213), ("lexing.mli", 53, 2209, 2239), 0), 0, Tag1 ("Stdlib__Lexing", 10)); (("lex_start_pos", 280), 1, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -120), (("lexing.mli", 54, 2240, 2244), ("lexing.mli", 54, 2240, 2272), 0), 0, Tag1 ("Stdlib__Lexing", 11)); (("lex_curr_pos", 281), 1, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -121), (("lexing.mli", 55, 2273, 2277), ("lexing.mli", 55, 2273, 2304), 0), 0, Tag1 ("Stdlib__Lexing", 12)); (("lex_last_pos", 282), 1, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -122), (("lexing.mli", 56, 2305, 2309), ("lexing.mli", 56, 2305, 2336), 0), 0, Tag1 ("Stdlib__Lexing", 13)); (("lex_last_action", 283), 1, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -123), (("lexing.mli", 57, 2337, 2341), ("lexing.mli", 57, 2337, 2371), 0), 0, Tag1 ("Stdlib__Lexing", 14)); (("lex_eof_reached", 284), 1, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -124), (("lexing.mli", 58, 2372, 2376), ("lexing.mli", 58, 2372, 2407), 0), 0, Tag1 ("Stdlib__Lexing", 15)); (("lex_mem", 285), 1, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -126)], (0)), 100000000, 0, -125), (("lexing.mli", 59, 2408, 2412), ("lexing.mli", 59, 2408, 2440), 0), 0, Tag1 ("Stdlib__Lexing", 16)); (("lex_start_p", 286), 1, (Tag3 ((("position", 320)), 0, (0)), 100000000, 0, -127), (("lexing.mli", 60, 2441, 2445), ("lexing.mli", 60, 2441, 2476), 0), 0, Tag1 ("Stdlib__Lexing", 17)); (("lex_curr_p", 287), 1, (Tag3 ((("position", 320)), 0, (0)), 100000000, 0, -128), (("lexing.mli", 61, 2477, 2481), ("lexing.mli", 61, 2477, 2511), 0), 0, Tag1 ("Stdlib__Lexing", 18))]], 1, 0, 0, 0, 0, 0, (("lexing.mli", 49, 2095, 2095), ("lexing.mli", 62, 2512, 2515), 0), 0, 0, 0, Tag1 ("Stdlib__Lexing", 6)), 1, 0); (("from_channel", 323), ((Tag1 (Tag1 ("with_positions"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -113)], (0)), 100000000, 0, -112), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "in_channel"), 0, (0)), 100000000, 0, -111), (Tag3 ((("lexbuf", 322)), 0, (0)), 100000000, 0, -110), 0), 100000000, 0, -109), 0), 100000000, 0, -108), 0, (("lexing.mli", 92, 4163, 4163), ("lexing.mli", 92, 4163, 4226), 0), 0, Tag1 ("Stdlib__Lexing", 19)), 0); (("from_string", 324), ((Tag1 (Tag1 ("with_positions"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -107)], (0)), 100000000, 0, -106), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -105), (Tag3 ((("lexbuf", 322)), 0, (0)), 100000000, 0, -104), 0), 100000000, 0, -103), 0), 100000000, 0, -102), 0, (("lexing.mli", 97, 4421, 4421), ("lexing.mli", 97, 4421, 4479), 0), 0, Tag1 ("Stdlib__Lexing", 20)), 0); (("from_function", 325), ((Tag1 (Tag1 ("with_positions"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -101)], (0)), 100000000, 0, -100), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -99), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -98), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -97), 0), 100000000, 0, -96), 0), 100000000, 0, -95), (Tag3 ((("lexbuf", 322)), 0, (0)), 100000000, 0, -94), 0), 100000000, 0, -93), 0), 100000000, 0, -92), 0, (("lexing.mli", 103, 4687, 4687), ("lexing.mli", 103, 4687, 4762), 0), 0, Tag1 ("Stdlib__Lexing", 21)), 0); (("set_position", 326), ((Tag1 (0, (Tag3 ((("lexbuf", 322)), 0, (0)), 100000000, 0, -91), (Tag1 (0, (Tag3 ((("position", 320)), 0, (0)), 100000000, 0, -90), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -89), 0), 100000000, 0, -88), 0), 100000000, 0, -87), 0, (("lexing.mli", 111, 5133, 5133), ("lexing.mli", 111, 5133, 5178), 0), 0, Tag1 ("Stdlib__Lexing", 22)), 0); (("set_filename", 327), ((Tag1 (0, (Tag3 ((("lexbuf", 322)), 0, (0)), 100000000, 0, -86), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -85), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -84), 0), 100000000, 0, -83), 0), 100000000, 0, -82), 0, (("lexing.mli", 116, 5342, 5342), ("lexing.mli", 116, 5342, 5384), 0), 0, Tag1 ("Stdlib__Lexing", 23)), 0); (("with_positions", 328), ((Tag1 (0, (Tag3 ((("lexbuf", 322)), 0, (0)), 100000000, 0, -81), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -80), 0), 100000000, 0, -79), 0, (("lexing.mli", 121, 5479, 5479), ("lexing.mli", 121, 5479, 5514), 0), 0, Tag1 ("Stdlib__Lexing", 24)), 0); (("lexeme", 329), ((Tag1 (0, (Tag3 ((("lexbuf", 322)), 0, (0)), 100000000, 0, -78), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0, (("lexing.mli", 145, 6465, 6465), ("lexing.mli", 145, 6465, 6494), 0), 0, Tag1 ("Stdlib__Lexing", 25)), 0); (("lexeme_char", 330), ((Tag1 (0, (Tag3 ((("lexbuf", 322)), 0, (0)), 100000000, 0, -75), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -74), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -73), 0), 100000000, 0, -72), 0), 100000000, 0, -71), 0, (("lexing.mli", 149, 6591, 6591), ("lexing.mli", 149, 6591, 6630), 0), 0, Tag1 ("Stdlib__Lexing", 26)), 0); (("lexeme_start", 331), ((Tag1 (0, (Tag3 ((("lexbuf", 322)), 0, (0)), 100000000, 0, -70), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("lexing.mli", 153, 6724, 6724), ("lexing.mli", 153, 6724, 6756), 0), 0, Tag1 ("Stdlib__Lexing", 27)), 0); (("lexeme_end", 332), ((Tag1 (0, (Tag3 ((("lexbuf", 322)), 0, (0)), 100000000, 0, -67), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("lexing.mli", 158, 6933, 6933), ("lexing.mli", 158, 6933, 6963), 0), 0, Tag1 ("Stdlib__Lexing", 28)), 0); (("lexeme_start_p", 333), ((Tag1 (0, (Tag3 ((("lexbuf", 322)), 0, (0)), 100000000, 0, -64), (Tag3 ((("position", 320)), 0, (0)), 100000000, 0, -63), 0), 100000000, 0, -62), 0, (("lexing.mli", 163, 7161, 7161), ("lexing.mli", 163, 7161, 7200), 0), 0, Tag1 ("Stdlib__Lexing", 29)), 0); (("lexeme_end_p", 334), ((Tag1 (0, (Tag3 ((("lexbuf", 322)), 0, (0)), 100000000, 0, -61), (Tag3 ((("position", 320)), 0, (0)), 100000000, 0, -60), 0), 100000000, 0, -59), 0, (("lexing.mli", 168, 7364, 7364), ("lexing.mli", 168, 7364, 7401), 0), 0, Tag1 ("Stdlib__Lexing", 30)), 0); (("new_line", 335), ((Tag1 (0, (Tag3 ((("lexbuf", 322)), 0, (0)), 100000000, 0, -58), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("lexing.mli", 173, 7563, 7563), ("lexing.mli", 173, 7563, 7592), 0), 0, Tag1 ("Stdlib__Lexing", 31)), 0); (("flush_input", 336), ((Tag1 (0, (Tag3 ((("lexbuf", 322)), 0, (0)), 100000000, 0, -55), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("lexing.mli", 183, 7911, 7911), ("lexing.mli", 183, 7911, 7943), 0), 0, Tag1 ("Stdlib__Lexing", 32)), 0); (("sub_lexeme", 337), ((Tag1 (0, (Tag3 ((("lexbuf", 322)), 0, (0)), 100000000, 0, -52), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -51), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -50), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -49), 0), 100000000, 0, -48), 0), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("lexing.mli", 193, 8230, 8230), ("lexing.mli", 193, 8230, 8277), 0), 0, Tag1 ("Stdlib__Lexing", 33)), 0); (("sub_lexeme_opt", 338), ((Tag1 (0, (Tag3 ((("lexbuf", 322)), 0, (0)), 100000000, 0, -45), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -44), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -43), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -42)], (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("lexing.mli", 194, 8278, 8278), ("lexing.mli", 194, 8278, 8336), 0), 0, Tag1 ("Stdlib__Lexing", 34)), 0); (("sub_lexeme_char", 339), ((Tag1 (0, (Tag3 ((("lexbuf", 322)), 0, (0)), 100000000, 0, -37), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -36), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0, (("lexing.mli", 195, 8337, 8337), ("lexing.mli", 195, 8337, 8380), 0), 0, Tag1 ("Stdlib__Lexing", 35)), 0); (("sub_lexeme_char_opt", 340), ((Tag1 (0, (Tag3 ((("lexbuf", 322)), 0, (0)), 100000000, 0, -32), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -31), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -30)], (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("lexing.mli", 196, 8381, 8381), ("lexing.mli", 196, 8381, 8435), 0), 0, Tag1 ("Stdlib__Lexing", 36)), 0); Tag1 (("lex_tables", 341), (0, 0, [[(("lex_base", 307), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -16), (("lexing.mli", 199, 8455, 8459), ("lexing.mli", 199, 8455, 8477), 0), 0, Tag1 ("Stdlib__Lexing", 38)); (("lex_backtrk", 308), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -17), (("lexing.mli", 200, 8478, 8482), ("lexing.mli", 200, 8478, 8503), 0), 0, Tag1 ("Stdlib__Lexing", 39)); (("lex_default", 309), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -18), (("lexing.mli", 201, 8504, 8508), ("lexing.mli", 201, 8504, 8529), 0), 0, Tag1 ("Stdlib__Lexing", 40)); (("lex_trans", 310), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -19), (("lexing.mli", 202, 8530, 8534), ("lexing.mli", 202, 8530, 8553), 0), 0, Tag1 ("Stdlib__Lexing", 41)); (("lex_check", 311), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -20), (("lexing.mli", 203, 8554, 8558), ("lexing.mli", 203, 8554, 8577), 0), 0, Tag1 ("Stdlib__Lexing", 42)); (("lex_base_code", 312), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -21), (("lexing.mli", 204, 8578, 8582), ("lexing.mli", 204, 8578, 8605), 0), 0, Tag1 ("Stdlib__Lexing", 43)); (("lex_backtrk_code", 313), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -22), (("lexing.mli", 205, 8606, 8610), ("lexing.mli", 205, 8606, 8636), 0), 0, Tag1 ("Stdlib__Lexing", 44)); (("lex_default_code", 314), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -23), (("lexing.mli", 206, 8637, 8641), ("lexing.mli", 206, 8637, 8667), 0), 0, Tag1 ("Stdlib__Lexing", 45)); (("lex_trans_code", 315), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -24), (("lexing.mli", 207, 8668, 8672), ("lexing.mli", 207, 8668, 8696), 0), 0, Tag1 ("Stdlib__Lexing", 46)); (("lex_check_code", 316), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -25), (("lexing.mli", 208, 8697, 8701), ("lexing.mli", 208, 8697, 8725), 0), 0, Tag1 ("Stdlib__Lexing", 47)); (("lex_code", 317), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -26), (("lexing.mli", 209, 8726, 8730), ("lexing.mli", 209, 8726, 8747), 0), 0, Tag1 ("Stdlib__Lexing", 48))]], 1, 0, 0, 0, 0, 0, (("lexing.mli", 198, 8437, 8437), ("lexing.mli", 209, 8726, 8748), 0), 0, 0, 0, Tag1 ("Stdlib__Lexing", 37)), 1, 0); (("engine", 342), ((Tag1 (0, (Tag3 ((("lex_tables", 341)), 0, (0)), 100000000, 0, -15), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -14), (Tag1 (0, (Tag3 ((("lexbuf", 322)), 0, (0)), 100000000, 0, -13), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("lexing.mli", 211, 8750, 8750), ("lexing.mli", 211, 8750, 8797), 0), 0, Tag1 ("Stdlib__Lexing", 49)), 0); (("new_engine", 343), ((Tag1 (0, (Tag3 ((("lex_tables", 341)), 0, (0)), 100000000, 0, -8), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 ((("lexbuf", 322)), 0, (0)), 100000000, 0, -6), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("lexing.mli", 212, 8798, 8798), ("lexing.mli", 212, 8798, 8849), 0), 0, Tag1 ("Stdlib__Lexing", 50)), 0)], "Stdlib__Lexing", [("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val new_engine : lex_tables -> int -> lexbuf -> int
