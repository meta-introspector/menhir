type ('a, _) thunk =
    Value : 'a -> ('a, 'b) thunk
  | Thunk : 'a Lazy.t -> ('a, [ `thunk ]) thunk
type ('a, 'b) t = ('a, 'b) thunk CAst.t
val get : ('a, 'b) t -> 'a
val get_thunk : ('a, 'b) thunk -> 'a
val make : ?loc:Loc.t -> 'a -> ('a, 'b) t
val delay : ?loc:Loc.t -> (unit -> 'a) -> ('a, [ `thunk ]) t
val force : ('a, 'b) t -> ('a, 'b) t
val map : ('a -> 'b) -> ('a, 'c) t -> ('b, 'c) t
val map_with_loc : (?loc:Loc.t -> 'a -> 'b) -> ('a, 'c) t -> ('b, 'c) t
val map_from_loc : (?loc:Loc.t -> 'a -> 'b) -> 'a Loc.located -> ('b, 'c) t
val with_val : ('a -> 'b) -> ('a, 'c) t -> 'b
("DEBUG:rule", [Tag1 (("thunk", 324), ([((("a")), 100000000, 0, -91); ((("_")), 100000000, 0, -92)], 2, Tag1 ([(("Value", 270), ([((("a")), 100000000, 0, -84)]), ((Tag3 ((("thunk", 324)), [((("a")), 100000000, 0, -84); ((("b")), 100000000, 0, -85)], (0)), 100000000, 0, -83)), (("lib/dAst.mli", 14, 769, 769), ("lib/dAst.mli", 14, 769, 799), 0), 0, Tag1 ("DAst", 1)); (("Thunk", 271), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lazy"), "t"), [((("a")), 100000000, 0, -87)], (0)), 100000000, 0, -90)]), ((Tag3 ((("thunk", 324)), [((("a")), 100000000, 0, -87); (Tag8 (([("thunk", (0))], (0, 100000000, 0, -89), 1, 0, 0)), 100000000, 0, -88)], (0)), 100000000, 0, -86)), (("lib/dAst.mli", 15, 800, 800), ("lib/dAst.mli", 15, 800, 845), 0), 0, Tag1 ("DAst", 2))], 0), 1, 0, [31; 63], [0; 0], 0, 0, (("lib/dAst.mli", 13, 748, 748), ("lib/dAst.mli", 15, 800, 845), 0), 0, 0, 0, Tag1 ("DAst", 0)), 1, 0); Tag1 (("t", 325), ([((("a")), 100000000, 0, -81); ((("b")), 100000000, 0, -82)], 2, 0, 1, ((Tag3 (Tag1 ((Tag2 ("CAst")), "t"), [(Tag3 ((("thunk", 324)), [((("a")), 100000000, 0, -81); ((("b")), 100000000, 0, -82)], (0)), 100000000, 0, -80)], (0)), 100000000, 0, -79)), [31; 63], [0; 0], 0, 0, (("lib/dAst.mli", 17, 847, 847), ("lib/dAst.mli", 17, 847, 886), 0), 0, 0, 0, Tag1 ("DAst", 3)), 1, 0); (("get", 326), ((Tag1 (0, (Tag3 ((("t", 325)), [((("a")), 100000000, 0, -76); ((("b")), 100000000, 0, -78)], (0)), 100000000, 0, -77), ((("a")), 100000000, 0, -76), 0), 100000000, 0, -75), 0, (("lib/dAst.mli", 19, 888, 888), ("lib/dAst.mli", 19, 888, 914), 0), 0, Tag1 ("DAst", 4)), 0); (("get_thunk", 327), ((Tag1 (0, (Tag3 ((("thunk", 324)), [((("a")), 100000000, 0, -72); ((("b")), 100000000, 0, -74)], (0)), 100000000, 0, -73), ((("a")), 100000000, 0, -72), 0), 100000000, 0, -71), 0, (("lib/dAst.mli", 20, 915, 915), ("lib/dAst.mli", 20, 915, 951), 0), 0, Tag1 ("DAst", 5)), 0); (("make", 328), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -70)], (0)), 100000000, 0, -69), (Tag1 (0, ((("a")), 100000000, 0, -67), (Tag3 ((("t", 325)), [((("a")), 100000000, 0, -67); ((("b")), 100000000, 0, -68)], (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0, (("lib/dAst.mli", 22, 953, 953), ("lib/dAst.mli", 22, 953, 994), 0), 0, Tag1 ("DAst", 7)), 0); (("delay", 329), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -63)], (0)), 100000000, 0, -62), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -61), ((("a")), 100000000, 0, -57), 0), 100000000, 0, -60), (Tag3 ((("t", 325)), [((("a")), 100000000, 0, -57); (Tag8 (([("thunk", (0))], (0, 100000000, 0, -59), 1, 0, 0)), 100000000, 0, -58)], (0)), 100000000, 0, -56), 0), 100000000, 0, -55), 0), 100000000, 0, -54), 0, (("lib/dAst.mli", 23, 995, 995), ("lib/dAst.mli", 23, 995, 1055), 0), 0, Tag1 ("DAst", 8)), 0); (("force", 330), ((Tag1 (0, (Tag3 ((("t", 325)), [((("a")), 100000000, 0, -51); ((("b")), 100000000, 0, -52)], (0)), 100000000, 0, -53), (Tag3 ((("t", 325)), [((("a")), 100000000, 0, -51); ((("b")), 100000000, 0, -52)], (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0, (("lib/dAst.mli", 24, 1056, 1056), ("lib/dAst.mli", 24, 1056, 1092), 0), 0, Tag1 ("DAst", 9)), 0); (("map", 331), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -47), ((("b")), 100000000, 0, -44), 0), 100000000, 0, -48), (Tag1 (0, (Tag3 ((("t", 325)), [((("a")), 100000000, 0, -47); ((("c")), 100000000, 0, -45)], (0)), 100000000, 0, -46), (Tag3 ((("t", 325)), [((("b")), 100000000, 0, -44); ((("c")), 100000000, 0, -45)], (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("lib/dAst.mli", 26, 1094, 1094), ("lib/dAst.mli", 26, 1094, 1142), 0), 0, Tag1 ("DAst", 10)), 0); (("map_with_loc", 332), ((Tag1 (0, (Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -40)], (0)), 100000000, 0, -39), (Tag1 (0, ((("a")), 100000000, 0, -36), ((("b")), 100000000, 0, -33), 0), 100000000, 0, -38), 0), 100000000, 0, -37), (Tag1 (0, (Tag3 ((("t", 325)), [((("a")), 100000000, 0, -36); ((("c")), 100000000, 0, -34)], (0)), 100000000, 0, -35), (Tag3 ((("t", 325)), [((("b")), 100000000, 0, -33); ((("c")), 100000000, 0, -34)], (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("lib/dAst.mli", 27, 1143, 1143), ("lib/dAst.mli", 27, 1143, 1214), 0), 0, Tag1 ("DAst", 11)), 0); (("map_from_loc", 333), ((Tag1 (0, (Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -29)], (0)), 100000000, 0, -28), (Tag1 (0, ((("a")), 100000000, 0, -25), ((("b")), 100000000, 0, -22), 0), 100000000, 0, -27), 0), 100000000, 0, -26), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Loc")), "located"), [((("a")), 100000000, 0, -25)], (0)), 100000000, 0, -24), (Tag3 ((("t", 325)), [((("b")), 100000000, 0, -22); ((("c")), 100000000, 0, -23)], (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("lib/dAst.mli", 28, 1215, 1215), ("lib/dAst.mli", 28, 1215, 1290), 0), 0, Tag1 ("DAst", 12)), 0); (("with_val", 334), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -16), ((("b")), 100000000, 0, -14), 0), 100000000, 0, -18), (Tag1 (0, (Tag3 ((("t", 325)), [((("a")), 100000000, 0, -16); ((("c")), 100000000, 0, -17)], (0)), 100000000, 0, -15), ((("b")), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("lib/dAst.mli", 30, 1292, 1292), ("lib/dAst.mli", 30, 1292, 1337), 0), 0, Tag1 ("DAst", 13)), 0); (("with_loc_val", 335), ((Tag1 (0, (Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -11)], (0)), 100000000, 0, -10), (Tag1 (0, ((("a")), 100000000, 0, -6), ((("b")), 100000000, 0, -4), 0), 100000000, 0, -9), 0), 100000000, 0, -8), (Tag1 (0, (Tag3 ((("t", 325)), [((("a")), 100000000, 0, -6); ((("c")), 100000000, 0, -7)], (0)), 100000000, 0, -5), ((("b")), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("lib/dAst.mli", 31, 1338, 1338), ("lib/dAst.mli", 31, 1338, 1401), 0), 0, Tag1 ("DAst", 14)), 0)], "DAst", [("DAst", ("\224/\200)\007\184ni\134\b\139\204\241\005w\212")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152"))], [(0)])
val with_loc_val : (?loc:Loc.t -> 'a -> 'b) -> ('a, 'c) t -> 'b
