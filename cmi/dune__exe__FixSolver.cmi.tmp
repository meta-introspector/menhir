module Make :
  functor (M : Dune__exe.Fix.IMPERATIVE_MAPS)
    (P : Dune__exe.Fix.MINIMAL_SEMI_LATTICE) ->
    sig
      type variable = M.key
      type property = P.property
      val record_ConVar : property -> variable -> unit
      val record_VarVar : variable -> variable -> unit
      module Solve :
        functor () ->
          sig
            type variable = variable/2
            type property = property/2 option
            val solution : variable -> property
          end("DEBUG:rule", [Tag3 (("Make", 541), 0, (Tag2 (((("M", 542)), (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Fix"), "IMPERATIVE_MAPS"))), Tag2 (((("P", 543)), (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Fix"), "MINIMAL_SEMI_LATTICE"))), Tag1 ([Tag1 (("variable", 544), (0, 0, 0, 1, ((Tag3 (Tag1 ((("M", 542)), "key"), 0, (0)), 100000000, 0, -13)), 0, 0, 0, 0, (("src/FixSolver.mli", 21, 1078, 1080), ("src/FixSolver.mli", 22, 1096, 1105), 0), 0, 0, 0, Tag1 ("Dune__exe__FixSolver", 2)), 1, 0); Tag1 (("property", 545), (0, 0, 0, 1, ((Tag3 (Tag1 ((("P", 543)), "property"), 0, (0)), 100000000, 0, -12)), 0, 0, 0, 0, (("src/FixSolver.mli", 24, 1107, 1109), ("src/FixSolver.mli", 25, 1125, 1139), 0), 0, 0, 0, Tag1 ("Dune__exe__FixSolver", 3)), 1, 0); (("record_ConVar", 546), ((Tag1 (0, (Tag3 ((("property", 545)), 0, (0)), 100000000, 0, -11), (Tag1 (0, (Tag3 ((("variable", 544)), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("src/FixSolver.mli", 30, 1232, 1234), ("src/FixSolver.mli", 30, 1232, 1281), 0), 0, Tag1 ("Dune__exe__FixSolver", 4)), 0); (("record_VarVar", 547), ((Tag1 (0, (Tag3 ((("variable", 544)), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((("variable", 544)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/FixSolver.mli", 34, 1357, 1359), ("src/FixSolver.mli", 34, 1357, 1406), 0), 0, Tag1 ("Dune__exe__FixSolver", 5)), 0); Tag3 (("Solve", 548), 0, (Tag2 (0, Tag1 ([Tag1 (("variable", 549), (0, 0, 0, 1, ((Tag3 ((("variable", 544)), 0, (0)), 100000000, 0, -19)), 0, 0, 0, 0, (("src/FixSolver.mli", 41, 1559, 1568), ("src/FixSolver.mli", 41, 1559, 1592), 0), 0, 0, 0, Tag1 ("Dune__exe__FixSolver", 6)), 1, 0); Tag1 (("property", 550), (0, 0, 0, 1, ((Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("property", 545)), 0, (0)), 100000000, 0, -18)], (0)), 100000000, 0, -17)), 0, 0, 0, 0, (("src/FixSolver.mli", 42, 1593, 1602), ("src/FixSolver.mli", 42, 1593, 1633), 0), 0, 0, 0, Tag1 ("Dune__exe__FixSolver", 7)), 1, 0); (("solution", 551), ((Tag1 (0, (Tag3 ((("variable", 549)), 0, (0)), 100000000, 0, -16), (Tag3 ((("property", 550)), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("fix/src/Sigs.ml", 246, 8898, 8900), ("fix/src/Sigs.ml", 246, 8898, 8934), 0), 0, Tag1 ("Vendored_fix__Sigs", 57)), 0)])), 0, (("src/FixSolver.mli", 39, 1526, 1528), ("src/FixSolver.mli", 42, 1593, 1633), 0), Tag1 ("Dune__exe__FixSolver", 8)), 0, 0)]))), 0, (("src/FixSolver.mli", 16, 1010, 1010), ("src/FixSolver.mli", 44, 1635, 1638), 0), Tag1 ("Dune__exe__FixSolver", 9)), 0, 0)], "Dune__exe__FixSolver", [("Dune__exe__FixSolver", ("\192\207\232%\202\028\0177\189\205C\n\159\138G\006")); ("Vendored_fix__Sigs", ("a{\193\210\184\138\163\252\132\135.\2156meu")); ("Vendored_fix__Set", ("#\017\234a}\187\202\206\012\134\207\129$\021\139\204")); ("Vendored_fix__Option", ("\185\131\152+\006QZ\148\188/\198#\220M\188\016")); ("Vendored_fix__Core", ("\214\127\018A\245\025\b\249\146\254pi\185\243\149\133")); ("Vendored_fix__", ("\r\196g\002\180\221\139\252\200\240t\184\171.K\020")); ("Vendored_fix", ("\012!\239\029\209\204\252\027\214>p\249;\128\184\191")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("MenhirSdk", ("F\232\012\196l\143\145[\255\2193U\197\027\176\139")); ("Dune__exe__Fix", ("\136\220e\127\151\133P\213x\197\137\216\247\006\184U")); ("Dune__exe", ("\137\000\197\175$\007]\218\141\248\172\212\146c\153\212")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

    end
