type index = int
type length = int
type 'a segment = 'a array * index * length
type 'a segments = ('a segment -> unit) -> unit
type ('a1, 'a2) segments2 = ('a1 segment -> 'a2 segment -> unit) -> unit
type capacity = int
type depth = int("DEBUG:rule", [Tag1 (("index", 296), (0, 0, 0, 1, ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -26)), 0, 0, 0, 0, (("src/PublicTypeAbbreviations.ml", 22, 1289, 1289), ("src/PublicTypeAbbreviations.ml", 22, 1289, 1305), 0), 0, 1, 0, Tag1 ("Sek__PublicTypeAbbreviations", 0)), 1, 0); Tag1 (("length", 297), (0, 0, 0, 1, ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -25)), 0, 0, 0, 0, (("src/PublicTypeAbbreviations.ml", 25, 1365, 1365), ("src/PublicTypeAbbreviations.ml", 25, 1365, 1382), 0), 0, 1, 0, Tag1 ("Sek__PublicTypeAbbreviations", 1)), 1, 0); Tag1 (("segment", 298), ([((("a")), 100000000, 0, -22)], 1, 0, 1, ((Tag2 ([(Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -22)], (0)), 100000000, 0, -21); (Tag3 ((("index", 296)), 0, (0)), 100000000, 0, -23); (Tag3 ((("length", 297)), 0, (0)), 100000000, 0, -24)]), 100000000, 0, -20)), [63], [0], 0, 0, (("src/PublicTypeAbbreviations.ml", 29, 1491, 1491), ("src/PublicTypeAbbreviations.ml", 30, 1509, 1536), 0), 0, 0, 0, Tag1 ("Sek__PublicTypeAbbreviations", 2)), 1, 0); Tag1 (("segments", 299), ([((("a")), 100000000, 0, -19)], 1, 0, 1, ((Tag1 (0, (Tag1 (0, (Tag3 ((("segment", 298)), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -18), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -17), 0), 100000000, 0, -16), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14)), [63], [0], 0, 0, (("src/PublicTypeAbbreviations.ml", 33, 1617, 1617), ("src/PublicTypeAbbreviations.ml", 34, 1636, 1666), 0), 0, 0, 0, Tag1 ("Sek__PublicTypeAbbreviations", 3)), 1, 0); Tag1 (("segments2", 300), ([((("a1")), 100000000, 0, -13); ((("a2")), 100000000, 0, -11)], 2, 0, 1, ((Tag1 (0, (Tag1 (0, (Tag3 ((("segment", 298)), [((("a1")), 100000000, 0, -13)], (0)), 100000000, 0, -12), (Tag1 (0, (Tag3 ((("segment", 298)), [((("a2")), 100000000, 0, -11)], (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5)), [63; 63], [0; 0], 0, 0, (("src/PublicTypeAbbreviations.ml", 38, 1780, 1780), ("src/PublicTypeAbbreviations.ml", 39, 1808, 1854), 0), 0, 0, 0, Tag1 ("Sek__PublicTypeAbbreviations", 4)), 1, 0); Tag1 (("capacity", 301), (0, 0, 0, 1, ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -4)), 0, 0, 0, 0, (("src/PublicTypeAbbreviations.ml", 42, 1913, 1913), ("src/PublicTypeAbbreviations.ml", 42, 1913, 1932), 0), 0, 1, 0, Tag1 ("Sek__PublicTypeAbbreviations", 5)), 1, 0); Tag1 (("depth", 302), (0, 0, 0, 1, ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3)), 0, 0, 0, 0, (("src/PublicTypeAbbreviations.ml", 45, 1988, 1988), ("src/PublicTypeAbbreviations.ml", 45, 1988, 2004), 0), 0, 1, 0, Tag1 ("Sek__PublicTypeAbbreviations", 6)), 1, 0); Tag1 (("comparison", 303), (0, 0, 0, 1, ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2)), 0, 0, 0, 0, (("src/PublicTypeAbbreviations.ml", 50, 2175, 2175), ("src/PublicTypeAbbreviations.ml", 50, 2175, 2196), 0), 0, 1, 0, Tag1 ("Sek__PublicTypeAbbreviations", 7)), 1, 0)], "Sek__PublicTypeAbbreviations", [("Sek__PublicTypeAbbreviations", ("\201\251\244\167\199\157\227\233\251\227b\132\146]>\232")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sek__", ("b\188\017\179d|~L\019\214\028\188\145y\210\250")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

type comparison = int
