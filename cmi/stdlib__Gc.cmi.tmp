type stat = {
  minor_words : float;
  promoted_words : float;
  major_words : float;
  minor_collections : int;
  major_collections : int;
  heap_words : int;
  heap_chunks : int;
  live_words : int;
  live_blocks : int;
  free_words : int;
  free_blocks : int;
  largest_free : int;
  fragments : int;
  compactions : int;
  top_heap_words : int;
  stack_size : int;
  forced_major_collections : int;
}
type control = {
  minor_heap_size : int;
  major_heap_increment : int;
  space_overhead : int;
  verbose : int;
  max_overhead : int;
  stack_limit : int;
  allocation_policy : int;
  window_size : int;
  custom_major_ratio : int;
  custom_minor_ratio : int;
  custom_minor_max_size : int;
}
external stat : unit -> stat = "caml_gc_stat"
external quick_stat : unit -> stat = "caml_gc_quick_stat"
external counters : unit -> float * float * float = "caml_gc_counters"
external minor_words : unit -> (float [@unboxed]) = "caml_gc_minor_words"
  "caml_gc_minor_words_unboxed"
external get : unit -> control = "caml_gc_get"
external set : control -> unit = "caml_gc_set"
external minor : unit -> unit = "caml_gc_minor"
external major_slice : int -> int = "caml_gc_major_slice"
external major : unit -> unit = "caml_gc_major"
external full_major : unit -> unit = "caml_gc_full_major"
external compact : unit -> unit = "caml_gc_compaction"
val print_stat : out_channel -> unit
val allocated_bytes : unit -> float
external get_minor_free : unit -> int = "caml_get_minor_free"
val finalise : ('a -> unit) -> 'a -> unit
val finalise_last : (unit -> unit) -> 'a -> unit
val finalise_release : unit -> unit
type alarm
val create_alarm : (unit -> unit) -> alarm
val delete_alarm : alarm -> unit
val eventlog_pause : unit -> unit
val eventlog_resume : unit -> unit
module Memprof :
  sig
    type allocation_source = Normal | Marshal | Custom
    type allocation = private {
      n_samples : int;
      size : int;
      source : allocation_source;
      callstack : Printexc.raw_backtrace;
    }
    type ('minor, 'major) tracker = {
      alloc_minor : allocation -> 'minor option;
      alloc_major : allocation -> 'major option;
      promote : 'minor -> 'major option;
      dealloc_minor : 'minor -> unit;
      dealloc_major : 'major -> unit;
    }
    val null_tracker : ('minor, 'major) tracker
    val start :
      sampling_rate:float ->
      ?callstack_size:int -> ('minor, 'major) tracker -> unit
    val stop : unit -> unit("DEBUG:rule", [Tag1 (("stat", 408), (0, 0, [[(("minor_words", 270), 0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -88), (("gc.mli", 20, 1236, 1240), ("gc.mli", 20, 1236, 1260), 0), 0, Tag1 ("Stdlib__Gc", 1)); (("promoted_words", 271), 0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -89), (("gc.mli", 24, 1355, 1359), ("gc.mli", 24, 1355, 1382), 0), 0, Tag1 ("Stdlib__Gc", 2)); (("major_words", 272), 0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -90), (("gc.mli", 29, 1550, 1554), ("gc.mli", 29, 1550, 1574), 0), 0, Tag1 ("Stdlib__Gc", 3)); (("minor_collections", 273), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -91), (("gc.mli", 33, 1700, 1704), ("gc.mli", 33, 1700, 1728), 0), 0, Tag1 ("Stdlib__Gc", 4)); (("major_collections", 274), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -92), (("gc.mli", 36, 1800, 1804), ("gc.mli", 36, 1800, 1828), 0), 0, Tag1 ("Stdlib__Gc", 5)); (("heap_words", 275), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -93), (("gc.mli", 40, 1924, 1928), ("gc.mli", 40, 1924, 1945), 0), 0, Tag1 ("Stdlib__Gc", 6)); (("heap_chunks", 276), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -94), (("gc.mli", 43, 1998, 2002), ("gc.mli", 43, 1998, 2020), 0), 0, Tag1 ("Stdlib__Gc", 7)); (("live_words", 277), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -95), (("gc.mli", 48, 2199, 2203), ("gc.mli", 48, 2199, 2220), 0), 0, Tag1 ("Stdlib__Gc", 8)); (("live_blocks", 278), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -96), (("gc.mli", 64, 3042, 3046), ("gc.mli", 64, 3042, 3064), 0), 0, Tag1 ("Stdlib__Gc", 9)); (("free_words", 279), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -97), (("gc.mli", 69, 3182, 3186), ("gc.mli", 69, 3182, 3203), 0), 0, Tag1 ("Stdlib__Gc", 10)); (("free_blocks", 280), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -98), (("gc.mli", 72, 3250, 3254), ("gc.mli", 72, 3250, 3272), 0), 0, Tag1 ("Stdlib__Gc", 11)); (("largest_free", 281), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -99), (("gc.mli", 77, 3419, 3423), ("gc.mli", 77, 3419, 3442), 0), 0, Tag1 ("Stdlib__Gc", 12)); (("fragments", 282), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -100), (("gc.mli", 82, 3609, 3613), ("gc.mli", 82, 3609, 3629), 0), 0, Tag1 ("Stdlib__Gc", 13)); (("compactions", 283), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -101), (("gc.mli", 87, 3804, 3808), ("gc.mli", 87, 3804, 3826), 0), 0, Tag1 ("Stdlib__Gc", 14)); (("top_heap_words", 284), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -102), (("gc.mli", 90, 3897, 3901), ("gc.mli", 90, 3897, 3922), 0), 0, Tag1 ("Stdlib__Gc", 15)); (("stack_size", 285), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -103), (("gc.mli", 93, 3985, 3989), ("gc.mli", 93, 3985, 4005), 0), 0, Tag1 ("Stdlib__Gc", 16)); (("forced_major_collections", 286), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -104), (("gc.mli", 99, 4174, 4178), ("gc.mli", 99, 4174, 4208), 0), 0, Tag1 ("Stdlib__Gc", 17))]], 1, 0, 0, 0, 0, 0, (("gc.mli", 19, 1224, 1224), ("gc.mli", 103, 4329, 4330), 0), 0, 0, 0, Tag1 ("Stdlib__Gc", 0)), 1, 0); Tag1 (("control", 409), (0, 0, [[(("minor_heap_size", 288), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -77), (("gc.mli", 114, 4719, 4723), ("gc.mli", 114, 4719, 4745), 0), 0, Tag1 ("Stdlib__Gc", 19)); (("major_heap_increment", 289), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -78), (("gc.mli", 120, 4997, 5001), ("gc.mli", 120, 4997, 5028), 0), 0, Tag1 ("Stdlib__Gc", 20)); (("space_overhead", 290), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -79), (("gc.mli", 127, 5386, 5390), ("gc.mli", 127, 5386, 5411), 0), 0, Tag1 ("Stdlib__Gc", 21)); (("verbose", 291), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -80), (("gc.mli", 136, 5810, 5814), ("gc.mli", 136, 5810, 5828), 0), 0, Tag1 ("Stdlib__Gc", 22)); (("max_overhead", 292), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -81), (("gc.mli", 153, 6623, 6627), ("gc.mli", 153, 6623, 6646), 0), 0, Tag1 ("Stdlib__Gc", 23)); (("stack_limit", 293), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -82), (("gc.mli", 164, 7174, 7178), ("gc.mli", 164, 7174, 7196), 0), 0, Tag1 ("Stdlib__Gc", 24)); (("allocation_policy", 294), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -83), (("gc.mli", 168, 7281, 7285), ("gc.mli", 168, 7281, 7309), 0), 0, Tag1 ("Stdlib__Gc", 25)); (("window_size", 295), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -84), (("gc.mli", 204, 8670, 8674), ("gc.mli", 204, 8670, 8692), 0), 0, Tag1 ("Stdlib__Gc", 26)); (("custom_major_ratio", 296), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -85), (("gc.mli", 211, 8888, 8892), ("gc.mli", 211, 8888, 8917), 0), 0, Tag1 ("Stdlib__Gc", 27)); (("custom_minor_ratio", 297), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -86), (("gc.mli", 224, 9498, 9502), ("gc.mli", 224, 9498, 9527), 0), 0, Tag1 ("Stdlib__Gc", 28)); (("custom_minor_max_size", 298), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -87), (("gc.mli", 234, 9947, 9951), ("gc.mli", 234, 9947, 9979), 0), 0, Tag1 ("Stdlib__Gc", 29))]], 1, 0, 0, 0, 0, 0, (("gc.mli", 113, 4704, 4704), ("gc.mli", 242, 10335, 10338), 0), 0, 0, 0, Tag1 ("Stdlib__Gc", 18)), 1, 0); (("stat", 410), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -76), (Tag3 ((("stat", 408)), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), (("caml_gc_stat", 1, 1, "", [0], 0)), (("gc.mli", 248, 10551, 10551), ("gc.mli", 248, 10551, 10596), 0), 0, Tag1 ("Stdlib__Gc", 30)), 0); (("quick_stat", 411), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -73), (Tag3 ((("stat", 408)), 0, (0)), 100000000, 0, -72), 0), 100000000, 0, -71), (("caml_gc_quick_stat", 1, 1, "", [0], 0)), (("gc.mli", 253, 10785, 10785), ("gc.mli", 253, 10785, 10842), 0), 0, Tag1 ("Stdlib__Gc", 31)), 0); (("counters", 412), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -70), (Tag2 ([(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -67); (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -68); (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -69)]), 100000000, 0, -66), 0), 100000000, 0, -65), (("caml_gc_counters", 1, 1, "", [0], 0)), (("gc.mli", 261, 11231, 11231), ("gc.mli", 261, 11231, 11301), 0), 0, Tag1 ("Stdlib__Gc", 32)), 0); (("minor_words", 413), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -64), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -63), 0), 100000000, 0, -62), (("caml_gc_minor_words", 1, 1, "caml_gc_minor_words_unboxed", [0], 1)), (("gc.mli", 266, 11469, 11469), ("gc.mli", 267, 11519, 11574), 0), 0, Tag1 ("Stdlib__Gc", 33)), 0); (("get", 414), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -61), (Tag3 ((("control", 409)), 0, (0)), 100000000, 0, -60), 0), 100000000, 0, -59), (("caml_gc_get", 1, 1, "", [0], 0)), (("gc.mli", 276, 11863, 11863), ("gc.mli", 279, 11989, 11990), 0), [(("alert", (("gc.mli", 277, 11910, 11913), ("gc.mli", 277, 11910, 11918), 0)), ([([(Tag5 ((((("unsynchronized_access"), (("gc.mli", 277, 11910, 11919), ("gc.mli", 277, 11910, 11940), 0))), (("gc.mli", 277, 11910, 11919), ("gc.mli", 277, 11910, 11940), 0), 0, 0), [(0, (Tag1 (Tag2 ("GC parameters are a mutable global state.", (("gc.mli", 278, 11941, 11946), ("gc.mli", 278, 11941, 11987), 0), 0)), (("gc.mli", 278, 11941, 11945), ("gc.mli", 278, 11941, 11988), 0), 0, 0))]), (("gc.mli", 277, 11910, 11919), ("gc.mli", 278, 11941, 11988), 0), 0, 0)], (("gc.mli", 277, 11910, 11919), ("gc.mli", 278, 11941, 11988), 0))]), (("gc.mli", 277, 11910, 11910), ("gc.mli", 279, 11989, 11990), 0))], Tag1 ("Stdlib__Gc", 34)), 0); (("set", 415), ((Tag1 (0, (Tag3 ((("control", 409)), 0, (0)), 100000000, 0, -58), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), (("caml_gc_set", 1, 1, "", [0], 0)), (("gc.mli", 282, 12069, 12069), ("gc.mli", 285, 12195, 12196), 0), [(("alert", (("gc.mli", 283, 12116, 12119), ("gc.mli", 283, 12116, 12124), 0)), ([([(Tag5 ((((("unsynchronized_access"), (("gc.mli", 283, 12116, 12125), ("gc.mli", 283, 12116, 12146), 0))), (("gc.mli", 283, 12116, 12125), ("gc.mli", 283, 12116, 12146), 0), 0, 0), [(0, (Tag1 (Tag2 ("GC parameters are a mutable global state.", (("gc.mli", 284, 12147, 12152), ("gc.mli", 284, 12147, 12193), 0), 0)), (("gc.mli", 284, 12147, 12151), ("gc.mli", 284, 12147, 12194), 0), 0, 0))]), (("gc.mli", 283, 12116, 12125), ("gc.mli", 284, 12147, 12194), 0), 0, 0)], (("gc.mli", 283, 12116, 12125), ("gc.mli", 284, 12147, 12194), 0))]), (("gc.mli", 283, 12116, 12116), ("gc.mli", 285, 12195, 12196), 0))], Tag1 ("Stdlib__Gc", 35)), 0); (("minor", 416), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -55), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), (("caml_gc_minor", 1, 1, "", [0], 0)), (("gc.mli", 289, 12351, 12351), ("gc.mli", 289, 12351, 12398), 0), 0, Tag1 ("Stdlib__Gc", 36)), 0); (("major_slice", 417), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -52), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -51), 0), 100000000, 0, -50), (("caml_gc_major_slice", 1, 1, "", [0], 0)), (("gc.mli", 292, 12435, 12435), ("gc.mli", 292, 12435, 12492), 0), 0, Tag1 ("Stdlib__Gc", 37)), 0); (("major", 418), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -49), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), (("caml_gc_major", 1, 1, "", [0], 0)), (("gc.mli", 300, 12857, 12857), ("gc.mli", 300, 12857, 12904), 0), 0, Tag1 ("Stdlib__Gc", 38)), 0); (("full_major", 419), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -46), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -45), 0), 100000000, 0, -44), (("caml_gc_full_major", 1, 1, "", [0], 0)), (("gc.mli", 303, 12982, 12982), ("gc.mli", 303, 12982, 13039), 0), 0, Tag1 ("Stdlib__Gc", 39)), 0); (("compact", 420), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -43), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -42), 0), 100000000, 0, -41), (("caml_gc_compaction", 1, 1, "", [0], 0)), (("gc.mli", 308, 13207, 13207), ("gc.mli", 308, 13207, 13261), 0), 0, Tag1 ("Stdlib__Gc", 40)), 0); (("print_stat", 421), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -40), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("gc.mli", 312, 13378, 13378), ("gc.mli", 312, 13378, 13414), 0), 0, Tag1 ("Stdlib__Gc", 41)), 0); (("allocated_bytes", 422), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -37), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("gc.mli", 316, 13558, 13558), ("gc.mli", 316, 13558, 13593), 0), 0, Tag1 ("Stdlib__Gc", 42)), 0); (("get_minor_free", 423), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -34), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), (("caml_get_minor_free", 1, 1, "", [0], 0)), (("gc.mli", 321, 13781, 13781), ("gc.mli", 321, 13781, 13842), 0), 0, Tag1 ("Stdlib__Gc", 43)), 0); (("finalise", 424), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -29), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), (Tag1 (0, ((("a")), 100000000, 0, -29), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("gc.mli", 327, 13951, 13951), ("gc.mli", 327, 13951, 13992), 0), 0, Tag1 ("Stdlib__Gc", 44)), 0); (("finalise_last", 425), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -25), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), (Tag1 (0, ((("a")), 100000000, 0, -22), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("gc.mli", 393, 17272, 17272), ("gc.mli", 393, 17272, 17320), 0), 0, Tag1 ("Stdlib__Gc", 45)), 0); (("finalise_release", 426), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -18), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("gc.mli", 408, 18014, 18014), ("gc.mli", 408, 18014, 18049), 0), 0, Tag1 ("Stdlib__Gc", 46)), 0); Tag1 (("alarm", 427), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("gc.mli", 413, 18230, 18230), ("gc.mli", 413, 18230, 18240), 0), 0, 0, 0, Tag1 ("Stdlib__Gc", 47)), 1, 0); (("create_alarm", 428), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -15), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -14), 0), 100000000, 0, -13), (Tag3 ((("alarm", 427)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("gc.mli", 418, 18412, 18412), ("gc.mli", 418, 18412, 18454), 0), 0, Tag1 ("Stdlib__Gc", 48)), 0); (("delete_alarm", 429), ((Tag1 (0, (Tag3 ((("alarm", 427)), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("gc.mli", 425, 18713, 18713), ("gc.mli", 425, 18713, 18745), 0), 0, Tag1 ("Stdlib__Gc", 49)), 0); (("eventlog_pause", 430), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("gc.mli", 429, 18875, 18875), ("gc.mli", 430, 18909, 18965), 0), [(("ocaml.deprecated", (("gc.mli", 430, 18909, 18912), ("gc.mli", 430, 18909, 18928), 0)), ([([(Tag1 (Tag2 ("Use Runtime_events.pause instead.", (("gc.mli", 430, 18909, 18930), ("gc.mli", 430, 18909, 18963), 0), 0)), (("gc.mli", 430, 18909, 18929), ("gc.mli", 430, 18909, 18964), 0), 0, 0)], (("gc.mli", 430, 18909, 18929), ("gc.mli", 430, 18909, 18964), 0))]), (("gc.mli", 430, 18909, 18909), ("gc.mli", 430, 18909, 18965), 0))], Tag1 ("Stdlib__Gc", 50)), 0); (("eventlog_resume", 431), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("gc.mli", 432, 18967, 18967), ("gc.mli", 433, 19002, 19059), 0), [(("ocaml.deprecated", (("gc.mli", 433, 19002, 19005), ("gc.mli", 433, 19002, 19021), 0)), ([([(Tag1 (Tag2 ("Use Runtime_events.resume instead.", (("gc.mli", 433, 19002, 19023), ("gc.mli", 433, 19002, 19057), 0), 0)), (("gc.mli", 433, 19002, 19022), ("gc.mli", 433, 19002, 19058), 0), 0, 0)], (("gc.mli", 433, 19002, 19022), ("gc.mli", 433, 19002, 19058), 0))]), (("gc.mli", 433, 19002, 19002), ("gc.mli", 433, 19002, 19059), 0))], Tag1 ("Stdlib__Gc", 51)), 0); Tag3 (("Memprof", 432), 0, (Tag1 ([Tag1 (("allocation_source", 433), (0, 0, Tag1 ([(("Normal", 322), (0), 0, (("gc.mli", 454, 19881, 19910), ("gc.mli", 454, 19881, 19916), 0), 0, Tag1 ("Stdlib__Gc", 53)); (("Marshal", 323), (0), 0, (("gc.mli", 454, 19881, 19917), ("gc.mli", 454, 19881, 19926), 0), 0, Tag1 ("Stdlib__Gc", 54)); (("Custom", 324), (0), 0, (("gc.mli", 454, 19881, 19927), ("gc.mli", 454, 19881, 19935), 0), 0, Tag1 ("Stdlib__Gc", 55))], 0), 1, 0, 0, 0, 0, 0, (("gc.mli", 454, 19881, 19885), ("gc.mli", 454, 19881, 19935), 0), 0, 1, 0, Tag1 ("Stdlib__Gc", 52)), 1, 0); Tag1 (("allocation", 434), (0, 0, [[(("n_samples", 326), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -135), (("gc.mli", 456, 19966, 19974), ("gc.mli", 456, 19966, 19990), 0), 0, Tag1 ("Stdlib__Gc", 57)); (("size", 327), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -136), (("gc.mli", 459, 20051, 20059), ("gc.mli", 459, 20051, 20070), 0), 0, Tag1 ("Stdlib__Gc", 58)); (("source", 328), 0, (Tag3 ((("allocation_source", 433)), 0, (0)), 100000000, 0, -137), (("gc.mli", 462, 20142, 20150), ("gc.mli", 462, 20142, 20177), 0), 0, Tag1 ("Stdlib__Gc", 59)); (("callstack", 363), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Printexc"), "raw_backtrace"), 0, (0)), 100000000, 0, -138), (("gc.mli", 465, 20222, 20230), ("gc.mli", 465, 20222, 20264), 0), 0, Tag1 ("Stdlib__Gc", 60))]], 0, 0, 0, 0, 0, 0, (("gc.mli", 455, 19936, 19940), ("gc.mli", 467, 20314, 20321), 0), 0, 0, 0, Tag1 ("Stdlib__Gc", 56)), 1, 0); Tag1 (("tracker", 435), ([((("minor")), 100000000, 0, -123); ((("major")), 100000000, 0, -127)], 2, [[(("alloc_minor", 399), 0, (Tag1 (0, (Tag3 ((("allocation", 434)), 0, (0)), 100000000, 0, -124), (Tag3 ((Tag3 ("option", 10)), [((("minor")), 100000000, 0, -123)], (0)), 100000000, 0, -122), 0), 100000000, 0, -121), (("gc.mli", 473, 20531, 20537), ("gc.mli", 473, 20531, 20578), 0), 0, Tag1 ("Stdlib__Gc", 62)); (("alloc_major", 400), 0, (Tag1 (0, (Tag3 ((("allocation", 434)), 0, (0)), 100000000, 0, -128), (Tag3 ((Tag3 ("option", 10)), [((("major")), 100000000, 0, -127)], (0)), 100000000, 0, -126), 0), 100000000, 0, -125), (("gc.mli", 474, 20579, 20585), ("gc.mli", 474, 20579, 20626), 0), 0, Tag1 ("Stdlib__Gc", 63)); (("promote", 401), 0, (Tag1 (0, ((("minor")), 100000000, 0, -123), (Tag3 ((Tag3 ("option", 10)), [((("major")), 100000000, 0, -127)], (0)), 100000000, 0, -130), 0), 100000000, 0, -129), (("gc.mli", 475, 20627, 20633), ("gc.mli", 475, 20627, 20666), 0), 0, Tag1 ("Stdlib__Gc", 64)); (("dealloc_minor", 402), 0, (Tag1 (0, ((("minor")), 100000000, 0, -123), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -132), 0), 100000000, 0, -131), (("gc.mli", 476, 20667, 20673), ("gc.mli", 476, 20667, 20703), 0), 0, Tag1 ("Stdlib__Gc", 65)); (("dealloc_major", 403), 0, (Tag1 (0, ((("major")), 100000000, 0, -127), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -134), 0), 100000000, 0, -133), (("gc.mli", 477, 20704, 20710), ("gc.mli", 477, 20704, 20740), 0), 0, Tag1 ("Stdlib__Gc", 66))]], 1, 0, [63; 63], [0; 0], 0, 0, (("gc.mli", 472, 20493, 20497), ("gc.mli", 478, 20741, 20746), 0), 0, 0, 0, Tag1 ("Stdlib__Gc", 61)), 1, 0); (("null_tracker", 436), ((Tag3 ((("tracker", 435)), [((("minor")), 100000000, 0, -119); ((("major")), 100000000, 0, -120)], (0)), 100000000, 0, -118), 0, (("gc.mli", 493, 21346, 21350), ("gc.mli", 493, 21346, 21392), 0), 0, Tag1 ("Stdlib__Gc", 67)), 0); (("start", 437), ((Tag1 (("sampling_rate"), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -117), (Tag1 (Tag1 ("callstack_size"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -116)], (0)), 100000000, 0, -115), (Tag1 (0, (Tag3 ((("tracker", 435)), [((("minor")), 100000000, 0, -113); ((("major")), 100000000, 0, -114)], (0)), 100000000, 0, -112), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -111), 0), 100000000, 0, -110), 0), 100000000, 0, -109), 0), 100000000, 0, -108), 0, (("gc.mli", 496, 21452, 21456), ("gc.mli", 500, 21560, 21570), 0), 0, Tag1 ("Stdlib__Gc", 68)), 0); (("stop", 438), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -107), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -106), 0), 100000000, 0, -105), 0, (("gc.mli", 525, 22720, 22724), ("gc.mli", 525, 22720, 22747), 0), 0, Tag1 ("Stdlib__Gc", 69)), 0)]), 0, (("gc.mli", 452, 19858, 19858), ("gc.mli", 535, 23120, 23123), 0), Tag1 ("Stdlib__Gc", 70)), 0, 0)], "Stdlib__Gc", [("Stdlib__Gc", ("^\181<\145\206\015)\224\028\247\003\188\b\241\246\239")); ("Stdlib__Printexc", ("\217u\168\235\179oi\167\235\255\025\017%d\192s")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

  end
