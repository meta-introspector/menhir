type error =
    Truncated_file
  | Unrecognized of string
  | Unsupported of string * int64
  | Out_of_range of string
val error_to_string : error -> string
type t
val read : string -> (t, error) Result.t
val defines_symbol : t -> string -> bool
("DEBUG:rule", [Tag1 (("error", 299), (0, 0, Tag1 ([(("Truncated_file", 270), (0), 0, (("utils/binutils.mli", 17, 1092, 1094), ("utils/binutils.mli", 17, 1092, 1110), 0), 0, Tag1 ("Binutils", 1)); (("Unrecognized", 271), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -21)]), 0, (("utils/binutils.mli", 18, 1111, 1113), ("utils/binutils.mli", 18, 1111, 1137), 0), 0, Tag1 ("Binutils", 2)); (("Unsupported", 272), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -22); (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -23)]), 0, (("utils/binutils.mli", 19, 1138, 1140), ("utils/binutils.mli", 19, 1138, 1171), 0), 0, Tag1 ("Binutils", 3)); (("Out_of_range", 273), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -24)]), 0, (("utils/binutils.mli", 20, 1172, 1174), ("utils/binutils.mli", 20, 1172, 1198), 0), 0, Tag1 ("Binutils", 4))], 0), 1, 0, 0, 0, 0, 0, (("utils/binutils.mli", 16, 1079, 1079), ("utils/binutils.mli", 20, 1172, 1198), 0), 0, 0, 0, Tag1 ("Binutils", 0)), 1, 0); (("error_to_string", 300), ((Tag1 (0, (Tag3 ((("error", 299)), 0, (0)), 100000000, 0, -20), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("utils/binutils.mli", 22, 1200, 1200), ("utils/binutils.mli", 22, 1200, 1236), 0), 0, Tag1 ("Binutils", 5)), 0); Tag1 (("t", 301), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("utils/binutils.mli", 24, 1238, 1238), ("utils/binutils.mli", 24, 1238, 1244), 0), 0, 0, 0, Tag1 ("Binutils", 6)), 1, 0); (("read", 302), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -17), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Result"), "t"), [(Tag3 ((("t", 301)), 0, (0)), 100000000, 0, -15); (Tag3 ((("error", 299)), 0, (0)), 100000000, 0, -16)], (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("utils/binutils.mli", 26, 1246, 1246), ("utils/binutils.mli", 26, 1246, 1285), 0), 0, Tag1 ("Binutils", 7)), 0); (("defines_symbol", 303), ((Tag1 (0, (Tag3 ((("t", 301)), 0, (0)), 100000000, 0, -12), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("utils/binutils.mli", 28, 1287, 1287), ("utils/binutils.mli", 28, 1287, 1326), 0), 0, Tag1 ("Binutils", 8)), 0); (("symbol_offset", 304), ((Tag1 (0, (Tag3 ((("t", 301)), 0, (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -5)], (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("utils/binutils.mli", 30, 1328, 1328), ("utils/binutils.mli", 30, 1328, 1374), 0), 0, Tag1 ("Binutils", 9)), 0)], "Binutils", [("Binutils", ("q\128>\239\026\225\167W\229\224\173q\144\165O\132")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Result", ("\247h\157\021\029a\144\199*\186Z\162\225\241\160>")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val symbol_offset : t -> string -> int64 option
