exception Parsing_error of string
type arg_source = CmdLine | ProjectFile
type 'a sourced = { thing : 'a; source : arg_source; }
type meta_file = Absent | Present of string | Generate of string
type project = {
  project_file : string option;
  makefile : string option;
  native_compiler : native_compiler option;
  docroot : string option;
  files : string sourced list;
  cmd_line_files : string sourced list;
  meta_file : meta_file;
  ml_includes : path sourced list;
  r_includes : (path * logic_path) sourced list;
  q_includes : (path * logic_path) sourced list;
  extra_args : string sourced list;
  defs : (string * string) sourced list;
}
and logic_path = string
and path = { path : string; canonical_path : string; }
and native_compiler = NativeYes | NativeNo | NativeOndemand
val cmdline_args_to_project :
  warning_fn:(string -> unit) -> curdir:string -> string list -> project
exception UnableToOpenProjectFile of string
val read_project_file : warning_fn:(string -> unit) -> string -> project
val coqtop_args_from_project : project -> string list
val find_project_file : from:string -> projfile_name:string -> string option
val all_files : project -> string sourced list
val files_by_suffix :
  string sourced list -> string list -> string sourced list
val map_sourced_list : ('a -> 'b) -> 'a sourced list -> 'b list
val map_cmdline : ('a -> 'b) -> 'a sourced list -> 'b list
("DEBUG:rule", [Tag2 (("Parsing_error", 311), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -107)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("CoqProject_file", 0)), 2, 0); Tag1 (("arg_source", 312), (0, 0, Tag1 ([(("CmdLine", 271), (0), 0, (("lib/coqProject_file.mli", 13, 711, 729), ("lib/coqProject_file.mli", 13, 711, 736), 0), 0, Tag1 ("CoqProject_file", 2)); (("ProjectFile", 272), (0), 0, (("lib/coqProject_file.mli", 13, 711, 737), ("lib/coqProject_file.mli", 13, 711, 750), 0), 0, Tag1 ("CoqProject_file", 3))], 0), 1, 0, 0, 0, 0, 0, (("lib/coqProject_file.mli", 13, 711, 711), ("lib/coqProject_file.mli", 13, 711, 750), 0), 0, 1, 0, Tag1 ("CoqProject_file", 1)), 1, 0); Tag1 (("sourced", 313), ([((("a")), 100000000, 0, -105)], 1, [[(("thing", 274), 0, ((("a")), 100000000, 0, -105), (("lib/coqProject_file.mli", 15, 752, 772), ("lib/coqProject_file.mli", 15, 752, 783), 0), 0, Tag1 ("CoqProject_file", 5)); (("source", 275), 0, (Tag3 ((("arg_source", 312)), 0, (0)), 100000000, 0, -106), (("lib/coqProject_file.mli", 15, 752, 784), ("lib/coqProject_file.mli", 15, 752, 803), 0), 0, Tag1 ("CoqProject_file", 6))]], 1, 0, [25], [0], 0, 0, (("lib/coqProject_file.mli", 15, 752, 752), ("lib/coqProject_file.mli", 15, 752, 805), 0), 0, 0, 0, Tag1 ("CoqProject_file", 4)), 1, 0); Tag1 (("meta_file", 314), (0, 0, Tag1 ([(("Absent", 277), (0), 0, (("lib/coqProject_file.mli", 17, 807, 824), ("lib/coqProject_file.mli", 17, 807, 830), 0), 0, Tag1 ("CoqProject_file", 8)); (("Present", 278), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -103)]), 0, (("lib/coqProject_file.mli", 17, 807, 831), ("lib/coqProject_file.mli", 17, 807, 850), 0), 0, Tag1 ("CoqProject_file", 9)); (("Generate", 279), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -104)]), 0, (("lib/coqProject_file.mli", 17, 807, 851), ("lib/coqProject_file.mli", 17, 807, 871), 0), 0, Tag1 ("CoqProject_file", 10))], 0), 1, 0, 0, 0, 0, 0, (("lib/coqProject_file.mli", 17, 807, 807), ("lib/coqProject_file.mli", 17, 807, 871), 0), 0, 0, 0, Tag1 ("CoqProject_file", 7)), 1, 0); Tag1 (("project", 315), (0, 0, [[(("project_file", 284), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -68)], (0)), 100000000, 0, -67), (("lib/coqProject_file.mli", 20, 890, 892), ("lib/coqProject_file.mli", 20, 890, 922), 0), 0, Tag1 ("CoqProject_file", 15)); (("makefile", 285), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -70)], (0)), 100000000, 0, -69), (("lib/coqProject_file.mli", 21, 923, 925), ("lib/coqProject_file.mli", 21, 923, 950), 0), 0, Tag1 ("CoqProject_file", 16)); (("native_compiler", 286), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("native_compiler", 318)), 0, (0)), 100000000, 0, -72)], (0)), 100000000, 0, -71), (("lib/coqProject_file.mli", 22, 951, 953), ("lib/coqProject_file.mli", 22, 951, 994), 0), 0, Tag1 ("CoqProject_file", 17)); (("docroot", 287), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -74)], (0)), 100000000, 0, -73), (("lib/coqProject_file.mli", 25, 1105, 1107), ("lib/coqProject_file.mli", 25, 1105, 1131), 0), 0, Tag1 ("CoqProject_file", 18)); (("files", 288), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("sourced", 313)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -77)], (0)), 100000000, 0, -76)], (0)), 100000000, 0, -75), (("lib/coqProject_file.mli", 27, 1133, 1135), ("lib/coqProject_file.mli", 27, 1133, 1163), 0), 0, Tag1 ("CoqProject_file", 19)); (("cmd_line_files", 289), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("sourced", 313)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -80)], (0)), 100000000, 0, -79)], (0)), 100000000, 0, -78), (("lib/coqProject_file.mli", 28, 1213, 1215), ("lib/coqProject_file.mli", 28, 1213, 1252), 0), 0, Tag1 ("CoqProject_file", 20)); (("meta_file", 290), 0, (Tag3 ((("meta_file", 314)), 0, (0)), 100000000, 0, -81), (("lib/coqProject_file.mli", 29, 1253, 1255), ("lib/coqProject_file.mli", 29, 1253, 1277), 0), 0, Tag1 ("CoqProject_file", 21)); (("ml_includes", 291), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("sourced", 313)), [(Tag3 ((("path", 317)), 0, (0)), 100000000, 0, -84)], (0)), 100000000, 0, -83)], (0)), 100000000, 0, -82), (("lib/coqProject_file.mli", 31, 1279, 1281), ("lib/coqProject_file.mli", 31, 1279, 1313), 0), 0, Tag1 ("CoqProject_file", 22)); (("r_includes", 292), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("sourced", 313)), [(Tag2 ([(Tag3 ((("path", 317)), 0, (0)), 100000000, 0, -88); (Tag3 ((("logic_path", 316)), 0, (0)), 100000000, 0, -89)]), 100000000, 0, -87)], (0)), 100000000, 0, -86)], (0)), 100000000, 0, -85), (("lib/coqProject_file.mli", 32, 1314, 1316), ("lib/coqProject_file.mli", 32, 1314, 1363), 0), 0, Tag1 ("CoqProject_file", 23)); (("q_includes", 293), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("sourced", 313)), [(Tag2 ([(Tag3 ((("path", 317)), 0, (0)), 100000000, 0, -93); (Tag3 ((("logic_path", 316)), 0, (0)), 100000000, 0, -94)]), 100000000, 0, -92)], (0)), 100000000, 0, -91)], (0)), 100000000, 0, -90), (("lib/coqProject_file.mli", 33, 1364, 1366), ("lib/coqProject_file.mli", 33, 1364, 1413), 0), 0, Tag1 ("CoqProject_file", 24)); (("extra_args", 294), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("sourced", 313)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -97)], (0)), 100000000, 0, -96)], (0)), 100000000, 0, -95), (("lib/coqProject_file.mli", 34, 1414, 1416), ("lib/coqProject_file.mli", 34, 1414, 1449), 0), 0, Tag1 ("CoqProject_file", 25)); (("defs", 295), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("sourced", 313)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -101); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -102)]), 100000000, 0, -100)], (0)), 100000000, 0, -99)], (0)), 100000000, 0, -98), (("lib/coqProject_file.mli", 35, 1450, 1452), ("lib/coqProject_file.mli", 35, 1450, 1490), 0), 0, Tag1 ("CoqProject_file", 26))]], 1, 0, 0, 0, 0, 0, (("lib/coqProject_file.mli", 19, 873, 873), ("lib/coqProject_file.mli", 36, 1491, 1492), 0), 0, 0, 0, Tag1 ("CoqProject_file", 11)), 1, 0); Tag1 (("logic_path", 316), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -66)), 0, 0, 0, 0, (("lib/coqProject_file.mli", 37, 1493, 1493), ("lib/coqProject_file.mli", 37, 1493, 1516), 0), 0, 0, 0, Tag1 ("CoqProject_file", 12)), 2, 0); Tag1 (("path", 317), (0, 0, [[(("path", 296), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -64), (("lib/coqProject_file.mli", 38, 1517, 1530), ("lib/coqProject_file.mli", 38, 1517, 1544), 0), 0, Tag1 ("CoqProject_file", 27)); (("canonical_path", 297), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -65), (("lib/coqProject_file.mli", 38, 1517, 1545), ("lib/coqProject_file.mli", 38, 1517, 1568), 0), 0, Tag1 ("CoqProject_file", 28))]], 1, 0, 0, 0, 0, 0, (("lib/coqProject_file.mli", 38, 1517, 1517), ("lib/coqProject_file.mli", 38, 1517, 1570), 0), 0, 0, 0, Tag1 ("CoqProject_file", 13)), 2, 0); Tag1 (("native_compiler", 318), (0, 0, Tag1 ([(("NativeYes", 298), (0), 0, (("lib/coqProject_file.mli", 40, 1593, 1593), ("lib/coqProject_file.mli", 40, 1593, 1604), 0), 0, Tag1 ("CoqProject_file", 29)); (("NativeNo", 299), (0), 0, (("lib/coqProject_file.mli", 41, 1605, 1605), ("lib/coqProject_file.mli", 41, 1605, 1615), 0), 0, Tag1 ("CoqProject_file", 30)); (("NativeOndemand", 300), (0), 0, (("lib/coqProject_file.mli", 42, 1616, 1616), ("lib/coqProject_file.mli", 42, 1616, 1632), 0), 0, Tag1 ("CoqProject_file", 31))], 0), 1, 0, 0, 0, 0, 0, (("lib/coqProject_file.mli", 39, 1571, 1571), ("lib/coqProject_file.mli", 42, 1616, 1632), 0), 0, 1, 0, Tag1 ("CoqProject_file", 14)), 2, 0); (("cmdline_args_to_project", 319), ((Tag1 (("warning_fn"), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -63), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -62), 0), 100000000, 0, -61), (Tag1 (("curdir"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -60), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -59)], (0)), 100000000, 0, -58), (Tag3 ((("project", 315)), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0), 100000000, 0, -55), 0), 100000000, 0, -54), 0, (("lib/coqProject_file.mli", 44, 1634, 1634), ("lib/coqProject_file.mli", 44, 1634, 1734), 0), 0, Tag1 ("CoqProject_file", 32)), 0); Tag2 (("UnableToOpenProjectFile", 320), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -53)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("CoqProject_file", 33)), 2, 0); (("read_project_file", 321), ((Tag1 (("warning_fn"), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -52), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -51), 0), 100000000, 0, -50), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -49), (Tag3 ((("project", 315)), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("lib/coqProject_file.mli", 48, 1781, 1781), ("lib/coqProject_file.mli", 48, 1781, 1853), 0), 0, Tag1 ("CoqProject_file", 34)), 0); (("coqtop_args_from_project", 322), ((Tag1 (0, (Tag3 ((("project", 315)), 0, (0)), 100000000, 0, -45), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -44)], (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("lib/coqProject_file.mli", 55, 2157, 2157), ("lib/coqProject_file.mli", 55, 2157, 2210), 0), 0, Tag1 ("CoqProject_file", 35)), 0); (("find_project_file", 323), ((Tag1 (("from"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -41), (Tag1 (("projfile_name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -40), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -39)], (0)), 100000000, 0, -38), 0), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("lib/coqProject_file.mli", 56, 2211, 2211), ("lib/coqProject_file.mli", 56, 2211, 2287), 0), 0, Tag1 ("CoqProject_file", 36)), 0); (("all_files", 324), ((Tag1 (0, (Tag3 ((("project", 315)), 0, (0)), 100000000, 0, -35), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("sourced", 313)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -34)], (0)), 100000000, 0, -33)], (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("lib/coqProject_file.mli", 58, 2289, 2289), ("lib/coqProject_file.mli", 58, 2289, 2335), 0), 0, Tag1 ("CoqProject_file", 37)), 0); (("files_by_suffix", 325), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("sourced", 313)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -30)], (0)), 100000000, 0, -29)], (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -27)], (0)), 100000000, 0, -26), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("sourced", 313)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -25)], (0)), 100000000, 0, -24)], (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("lib/coqProject_file.mli", 59, 2336, 2336), ("lib/coqProject_file.mli", 59, 2336, 2415), 0), 0, Tag1 ("CoqProject_file", 38)), 0); (("map_sourced_list", 326), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -19), ((("b")), 100000000, 0, -16), 0), 100000000, 0, -20), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("sourced", 313)), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -18)], (0)), 100000000, 0, -17), (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -16)], (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("lib/coqProject_file.mli", 61, 2417, 2417), ("lib/coqProject_file.mli", 61, 2417, 2480), 0), 0, Tag1 ("CoqProject_file", 39)), 0); (("map_cmdline", 327), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -11), ((("b")), 100000000, 0, -8), 0), 100000000, 0, -12), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("sourced", 313)), [((("a")), 100000000, 0, -11)], (0)), 100000000, 0, -10)], (0)), 100000000, 0, -9), (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -8)], (0)), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("lib/coqProject_file.mli", 64, 2532, 2532), ("lib/coqProject_file.mli", 64, 2532, 2590), 0), 0, Tag1 ("CoqProject_file", 40)), 0); (("forget_source", 328), ((Tag1 (0, (Tag3 ((("sourced", 313)), [((("a")), 100000000, 0, -3)], (0)), 100000000, 0, -4), ((("a")), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("lib/coqProject_file.mli", 66, 2592, 2592), ("lib/coqProject_file.mli", 66, 2592, 2628), 0), 0, Tag1 ("CoqProject_file", 41)), 0)], "CoqProject_file", [("CoqProject_file", ("\026e\228\208T\250\023Jp\130\208\211\006\202{\229")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val forget_source : 'a sourced -> 'a
