type map =
    Gen of { gen_line : int; gen_col : int; }
  | Gen_Ori of { gen_line : int; gen_col : int; ori_source : int;
      ori_line : int; ori_col : int;
    }
  | Gen_Ori_Name of { gen_line : int; gen_col : int; ori_source : int;
      ori_line : int; ori_col : int; ori_name : int;
    }
type mapping = map list
type t = {
  version : int;
  file : string;
  sourceroot : string option;
  sources : string list;
  sources_content : string option list option;
  names : string list;
  mappings : mapping;
}
val filter_map : t -> f:(int -> int option) -> t
val merge : t list -> t option
val mapping_of_string : string -> mapping
val string_of_mapping : mapping -> string("DEBUG:rule", [Tag1 (("map", 367), (0, 0, Tag1 ([(("Gen", 337), Tag1 ([(("gen_line", 338), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -39), (("compiler/lib/source_map.mli", 22, 889, 897), ("compiler/lib/source_map.mli", 23, 912, 919), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 1)); (("gen_col", 339), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -40), (("compiler/lib/source_map.mli", 23, 912, 920), ("compiler/lib/source_map.mli", 23, 912, 933), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 2))]), 0, (("compiler/lib/source_map.mli", 21, 878, 880), ("compiler/lib/source_map.mli", 24, 934, 941), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 3)); (("Gen_Ori", 340), Tag1 ([(("gen_line", 341), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -41), (("compiler/lib/source_map.mli", 26, 957, 965), ("compiler/lib/source_map.mli", 27, 980, 987), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 4)); (("gen_col", 342), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -42), (("compiler/lib/source_map.mli", 27, 980, 988), ("compiler/lib/source_map.mli", 28, 1002, 1009), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 5)); (("ori_source", 343), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -43), (("compiler/lib/source_map.mli", 28, 1002, 1010), ("compiler/lib/source_map.mli", 29, 1027, 1034), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 6)); (("ori_line", 344), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -44), (("compiler/lib/source_map.mli", 29, 1027, 1035), ("compiler/lib/source_map.mli", 30, 1050, 1057), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 7)); (("ori_col", 345), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -45), (("compiler/lib/source_map.mli", 30, 1050, 1058), ("compiler/lib/source_map.mli", 30, 1050, 1071), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 8))]), 0, (("compiler/lib/source_map.mli", 25, 942, 944), ("compiler/lib/source_map.mli", 31, 1072, 1079), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 9)); (("Gen_Ori_Name", 346), Tag1 ([(("gen_line", 347), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -46), (("compiler/lib/source_map.mli", 33, 1100, 1108), ("compiler/lib/source_map.mli", 34, 1123, 1130), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 10)); (("gen_col", 348), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -47), (("compiler/lib/source_map.mli", 34, 1123, 1131), ("compiler/lib/source_map.mli", 35, 1145, 1152), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 11)); (("ori_source", 349), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -48), (("compiler/lib/source_map.mli", 35, 1145, 1153), ("compiler/lib/source_map.mli", 36, 1170, 1177), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 12)); (("ori_line", 350), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -49), (("compiler/lib/source_map.mli", 36, 1170, 1178), ("compiler/lib/source_map.mli", 37, 1193, 1200), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 13)); (("ori_col", 351), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -50), (("compiler/lib/source_map.mli", 37, 1193, 1201), ("compiler/lib/source_map.mli", 38, 1215, 1222), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 14)); (("ori_name", 352), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -51), (("compiler/lib/source_map.mli", 38, 1215, 1223), ("compiler/lib/source_map.mli", 38, 1215, 1237), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 15))]), 0, (("compiler/lib/source_map.mli", 32, 1080, 1082), ("compiler/lib/source_map.mli", 39, 1238, 1245), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 16))], 0), 1, 0, 0, 0, 0, 0, (("compiler/lib/source_map.mli", 20, 867, 867), ("compiler/lib/source_map.mli", 39, 1238, 1245), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 0)), 1, 0); Tag1 (("mapping", 368), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("map", 367)), 0, (0)), 100000000, 0, -38)], (0)), 100000000, 0, -37)), 0, 0, 0, 0, (("compiler/lib/source_map.mli", 41, 1247, 1247), ("compiler/lib/source_map.mli", 41, 1247, 1270), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 32)), 1, 0); Tag1 (("t", 369), (0, 0, [[(("version", 355), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -24), (("compiler/lib/source_map.mli", 44, 1281, 1285), ("compiler/lib/source_map.mli", 45, 1299, 1302), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 34)); (("file", 356), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -25), (("compiler/lib/source_map.mli", 45, 1299, 1303), ("compiler/lib/source_map.mli", 46, 1317, 1320), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 35)); (("sourceroot", 357), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -27)], (0)), 100000000, 0, -26), (("compiler/lib/source_map.mli", 46, 1317, 1321), ("compiler/lib/source_map.mli", 47, 1348, 1351), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 36)); (("sources", 358), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -29)], (0)), 100000000, 0, -28), (("compiler/lib/source_map.mli", 47, 1348, 1352), ("compiler/lib/source_map.mli", 48, 1374, 1377), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 37)); (("sources_content", 359), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -33)], (0)), 100000000, 0, -32)], (0)), 100000000, 0, -31)], (0)), 100000000, 0, -30), (("compiler/lib/source_map.mli", 48, 1374, 1378), ("compiler/lib/source_map.mli", 49, 1422, 1425), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 38)); (("names", 360), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -35)], (0)), 100000000, 0, -34), (("compiler/lib/source_map.mli", 49, 1422, 1426), ("compiler/lib/source_map.mli", 50, 1446, 1449), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 39)); (("mappings", 361), 0, (Tag3 ((("mapping", 368)), 0, (0)), 100000000, 0, -36), (("compiler/lib/source_map.mli", 50, 1446, 1450), ("compiler/lib/source_map.mli", 50, 1446, 1468), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 40))]], 1, 0, 0, 0, 0, 0, (("compiler/lib/source_map.mli", 43, 1272, 1272), ("compiler/lib/source_map.mli", 51, 1469, 1472), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 33)), 1, 0); (("filter_map", 370), ((Tag1 (0, (Tag3 ((("t", 369)), 0, (0)), 100000000, 0, -23), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -22), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -21)], (0)), 100000000, 0, -20), 0), 100000000, 0, -19), (Tag3 ((("t", 369)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("compiler/lib/source_map.mli", 53, 1474, 1474), ("compiler/lib/source_map.mli", 53, 1474, 1522), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 41)), 0); (("merge", 371), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 369)), 0, (0)), 100000000, 0, -15)], (0)), 100000000, 0, -14), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 369)), 0, (0)), 100000000, 0, -13)], (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("compiler/lib/source_map.mli", 55, 1524, 1524), ("compiler/lib/source_map.mli", 55, 1524, 1554), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 42)), 0); (("mapping_of_string", 372), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10), (Tag3 ((("mapping", 368)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("compiler/lib/source_map.mli", 57, 1556, 1556), ("compiler/lib/source_map.mli", 57, 1556, 1597), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 43)), 0); (("string_of_mapping", 373), ((Tag1 (0, (Tag3 ((("mapping", 368)), 0, (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("compiler/lib/source_map.mli", 59, 1599, 1599), ("compiler/lib/source_map.mli", 59, 1599, 1640), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 44)), 0); (("empty", 374), ((Tag1 (("filename"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4), (Tag3 ((("t", 369)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("compiler/lib/source_map.mli", 61, 1642, 1642), ("compiler/lib/source_map.mli", 61, 1642, 1674), 0), 0, Tag1 ("Js_of_ocaml_compiler__Source_map", 45)), 0)], "Js_of_ocaml_compiler__Source_map", [("Js_of_ocaml_compiler__Source_map", ("\160\134?\150\031,\209\r\197\141~vKt\204c")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Js_of_ocaml_compiler", ("\140\150\022\231\129$!^\139\156\170\236r\184~q")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val empty : filename:string -> t
