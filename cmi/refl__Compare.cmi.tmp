module Comparer : sig type ('a, 'b) t = 'a -> 'b -> int end
module Comparers :
  sig
    type ('a, 'b, 'occurrence) item =
      ('a, 'b, 'occurrence) Refl__Tools.BinaryVector(Comparer).item =
        None : ('c, 'd, [ `Absent ]) item
      | Some : ('a, 'b) Comparer.t -> ('a, 'b, 'e) item
    type ('a, 'b, 'occurrences) t =
      ('a, 'b, 'occurrences) Refl__Tools.BinaryVector(Comparer).t =
        [] : (unit, unit, unit) t
      | (::) : ('head_a, 'head_b, 'occurrence) item *
          ('tail_a, 'tail_b, 'occurrences) t -> ('head_a * 'tail_a,
                                                 'head_b * 'tail_b,
                                                 'occurrence * 'occurrences)
                                                t
    val get :
      ('index, 'a, 'value_a, 'positive, 'occurrences) Refl__.Desc.variable ->
      ('index, 'b, 'value_b, 'positive, 'occurrences) Refl__.Desc.variable ->
      ('a, 'b, 'occurrences) t -> ('value_a, 'value_b) Comparer.t
    val make_transfer :
      ('source, 'sub, 'arg) Refl__.Desc.transfer_arguments ->
      ('a, 'b, 'source) t ->
      (('a, 'b, 'arg) t, ('sub, [ `Absent ]) Refl__.Desc.eq) result
    type ('arity_a, 'arity_b, 'rec_group, 'kinds, 'gadt_a, 'gadt_b) make =
      ('arity_a, 'arity_b, 'rec_group, 'kinds, 'gadt_a, 'gadt_b)
      Refl__Tools.BinaryVector(Comparer).make = {
      f :
        'a 'b 'structure 'ap 'an 'ad.
          ('a, 'structure, 'arity_a, 'rec_group, 'kinds, 'ap, 'an, 'ad,
           'gadt_a)
          Refl__.Desc.desc ->
          ('b, 'structure, 'arity_b, 'rec_group, 'kinds, 'ap, 'an, 'ad,
           'gadt_b)
          Refl__.Desc.desc ->
          ('arity_a, 'arity_b, 'ad) t -> ('a, 'b) Comparer.t;
    }
    val make_transfer_vector :
      ('arity_a, 'arity_b, 'rec_group, 'kinds, 'gadt_a, 'gadt_b) make ->
      ('types_a, 'structures, 'arity_a, 'rec_group, 'kinds, 'arguments,
       'gadt_a)
      Refl__.Desc.vector ->
      ('types_b, 'structures, 'arity_b, 'rec_group, 'kinds, 'arguments,
       'gadt_b)
      Refl__.Desc.vector ->
      ('positive, 'negative, 'direct, 'subpositive, 'subnegative, 'subdirect,
       'arguments)
      Refl__.Desc.transfer ->
      ('arity_a, 'arity_b, 'direct) t -> ('types_a, 'types_b, 'subdirect) t
    val skip :
      ('variables, 'skip_variables) Refl__.Desc.skip_vector ->
      ('a, 'b, 'variables) t -> ('a, 'b, 'skip_variables) t
    val make :
      ('a, 'b, 'c, 'd, 'e, 'f) make ->
      ('g, 'h, 'a, 'c, 'd, 'i, 'e) Refl__.Desc.vector ->
      ('j, 'h, 'b, 'c, 'd, 'i, 'f) Refl__.Desc.vector ->
      ('k, 'l, 'm, 'n, 'o, 'p, 'i) Refl__.Desc.transfer_skip ->
      ('a, 'b, 'm) t -> ('g, 'j, 'p) t
    type 'presence any =
      'presence Refl__Tools.BinaryVector(Comparer).any =
        None : [ `Absent ] any
      | Some : { item : 'a 'b. ('a, 'b) Comparer.t; } -> 'c any
    val append :
      'presence any ->
      ('presence, 'directs) Refl__.Desc.presences ->
      ('count, 'directs) Refl__.Desc.length ->
      ('directs, 'direct, 'subdirect) Refl__.Desc.append ->
      ('count, 'types_a) Refl__.Desc.length ->
      ('types_a, 'a, 'sub_a) Refl__.Desc.append ->
      ('count, 'types_b) Refl__.Desc.length ->
      ('types_b, 'b, 'sub_b) Refl__.Desc.append ->
      ('a, 'b, 'direct) t -> ('sub_a, 'sub_b, 'subdirect) t
  end
type ('a, 'b) hook_fun =
    'a Refl__.Desc.refl ->
    'b Refl__.Desc.refl ->
    (?hook:hook -> ('a, 'b) Comparer.t) -> ('a, 'b) Comparer.t
and hook = { hook : 'a 'b. ('a, 'b) hook_fun; }
type ('a, 'arity, 'b) Refl__.Desc.typed_attribute_kind +=
    Attribute_compare :
      ('a, 'arity, ('a, 'a) Comparer.t) Refl__.Desc.typed_attribute_kind
type ('arity_a, 'gadt_a, 'arity_b, 'gadt_b) poly =
    Poly
  | Mono of { converters : ('arity_a, 'arity_b) Refl__.Convert.converters;
      eq_gadt : ('gadt_a, 'gadt_b) Refl__.Desc.eq;
    }
val compare_gen :
  ?hook:hook ->
  ('a, 'structure, 'arity_a, 'rec_group,
   [< Refl__.Desc.Kinds.comparable
    > `Array `Attributes `Bool `Bytes `Char `Constr `Exists `Float `Int
      `Int32 `Int64 `Lazy `MapOpaque `Nativeint `Object `Opaque `Record
      `String `Tuple `Variable `Variant ]
   as 'c, 'positive, 'negative, 'direct, 'gadt_a)
  Refl__.Desc.desc ->
  ('b, 'structure, 'arity_b, 'rec_group, 'c, 'positive, 'negative, 'direct,
   'gadt_b)
  Refl__.Desc.desc ->
  ('arity_a, 'gadt_a, 'arity_b, 'gadt_b) poly ->
  ('arity_a, 'arity_b, 'direct) Comparers.t -> ('a, 'b) Comparer.t
val compare_poly :
  ?hook:hook ->
  ('a, 'b, 'c, 'd,
   [< Refl__.Desc.Kinds.comparable
    > `Array `Attributes `Bool `Bytes `Char `Constr `Exists `Float `Int
      `Int32 `Int64 `Lazy `MapOpaque `Nativeint `Object `Opaque `Record
      `String `Tuple `Variable `Variant ]
   as 'e, 'f, 'g, 'h, 'i)
  Refl__.Desc.desc ->
  ('j, 'b, 'k, 'd, 'e, 'f, 'g, 'h, 'l) Refl__.Desc.desc ->
  ('c, 'k, 'h) Comparers.t -> ('a, 'j) Comparer.t
val compare :
  ?hook:hook ->
  ('a, 'b, 'c, 'd,
   [< Refl__.Desc.Kinds.comparable
    > `Array `Attributes `Bool `Bytes `Char `Constr `Exists `Float `Int
      `Int32 `Int64 `Lazy `MapOpaque `Nativeint `Object `Opaque `Record
      `String `Tuple `Variable `Variant ],
   'e, 'f, 'g, 'h)
  Refl__.Desc.desc ->("DEBUG:rule", [Tag3 (("Comparer", 15382), 0, (Tag1 ([Tag1 (("t", 15391), ([((("a")), 100000000, 0, -101); ((("b")), 100000000, 0, -100)], 2, 0, 1, ((Tag1 (0, ((("a")), 100000000, 0, -101), (Tag1 (0, ((("b")), 100000000, 0, -100), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -99), 0), 100000000, 0, -98), 0), 100000000, 0, -97)), [46; 46], [0; 0], 0, 0, (("runtime/compare.ml", 6, 48, 50), ("runtime/compare.ml", 6, 48, 83), 0), 0, 0, 0, Tag1 ("Refl__Compare", 37)), 1, 0)]), 0, (("runtime/compare.ml", 5, 23, 23), ("runtime/compare.ml", 7, 84, 87), 0), Tag1 ("Refl__Compare", 38)), 0, 0); Tag3 (("Comparers", 15383), 0, (Tag1 ([Tag1 (("item", 15392), ([((("a")), 100000000, 0, -276); ((("b")), 100000000, 0, -277); ((("occurrence")), 100000000, 0, -278)], 3, Tag1 ([(("None", 1219), (0), ((Tag3 ((("item", 15392)), [((0), 100000000, 0, -280); ((0), 100000000, 0, -281); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -283), 1, 0, 0)), 100000000, 0, -282)], (0)), 100000000, 0, -279)), (("runtime/tools.ml", 413, 13459, 13463), ("runtime/tools.ml", 413, 13459, 13494), 0), 0, Tag1 ("Refl__Tools", 1299)); (("Some", 1220), ([(Tag3 (Tag1 ((("Comparer", 15382)), "t"), [((("a")), 100000000, 0, -285); ((("b")), 100000000, 0, -286)], (0)), 100000000, 0, -288)]), ((Tag3 ((("item", 15392)), [((("a")), 100000000, 0, -285); ((("b")), 100000000, 0, -286); ((0), 100000000, 0, -287)], (0)), 100000000, 0, -284)), (("runtime/tools.ml", 414, 13495, 13499), ("runtime/tools.ml", 414, 13495, 13540), 0), 0, Tag1 ("Refl__Tools", 1300))], 0), 1, ((Tag3 (Tag1 (Tag2 (Tag1 ((Tag2 ("Refl__Tools")), "BinaryVector"), (("Comparer", 15382))), "item"), [((("a")), 100000000, 0, -276); ((("b")), 100000000, 0, -277); ((("occurrence")), 100000000, 0, -278)], (0)), 100000000, 0, -275)), [15; 15; 63], [0; 0; 0], 0, 0, (("runtime/tools.ml", 412, 13423, 13425), ("runtime/tools.ml", 414, 13495, 13540), 0), 0, 0, 0, Tag1 ("Refl__Tools", 1298)), 1, 0); Tag1 (("t", 15393), ([((("a")), 100000000, 0, -256); ((("b")), 100000000, 0, -257); ((("occurrences")), 100000000, 0, -258)], 3, Tag1 ([(("[]", 1222), (0), ((Tag3 ((("t", 15393)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -260); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -261); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -262)], (0)), 100000000, 0, -259)), (("runtime/tools.ml", 417, 13576, 13580), ("runtime/tools.ml", 417, 13576, 13607), 0), 0, Tag1 ("Refl__Tools", 1302)); (("::", 1223), ([(Tag3 ((("item", 15392)), [((("head_a")), 100000000, 0, -265); ((("head_b")), 100000000, 0, -268); ((("occurrence")), 100000000, 0, -271)], (0)), 100000000, 0, -273); (Tag3 ((("t", 15393)), [((("tail_a")), 100000000, 0, -266); ((("tail_b")), 100000000, 0, -269); ((("occurrences")), 100000000, 0, -272)], (0)), 100000000, 0, -274)]), ((Tag3 ((("t", 15393)), [(Tag2 ([((("head_a")), 100000000, 0, -265); ((("tail_a")), 100000000, 0, -266)]), 100000000, 0, -264); (Tag2 ([((("head_b")), 100000000, 0, -268); ((("tail_b")), 100000000, 0, -269)]), 100000000, 0, -267); (Tag2 ([((("occurrence")), 100000000, 0, -271); ((("occurrences")), 100000000, 0, -272)]), 100000000, 0, -270)], (0)), 100000000, 0, -263)), (("runtime/tools.ml", 418, 13608, 13612), ("runtime/tools.ml", 420, 13706, 13782), 0), 0, Tag1 ("Refl__Tools", 1303))], 0), 1, ((Tag3 (Tag1 (Tag2 (Tag1 ((Tag2 ("Refl__Tools")), "BinaryVector"), (("Comparer", 15382))), "t"), [((("a")), 100000000, 0, -256); ((("b")), 100000000, 0, -257); ((("occurrences")), 100000000, 0, -258)], (0)), 100000000, 0, -255)), [63; 63; 63], [0; 0; 0], 0, 0, (("runtime/tools.ml", 416, 13542, 13544), ("runtime/tools.ml", 420, 13706, 13782), 0), 0, 0, 0, Tag1 ("Refl__Tools", 1301)), 1, 0); (("get", 15394), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variable"), [((("index")), 100000000, 0, -252); ((("a")), 100000000, 0, -248); ((("value_a")), 100000000, 0, -245); ((("positive")), 100000000, 0, -253); ((("occurrences")), 100000000, 0, -250)], (0)), 100000000, 0, -254), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variable"), [((("index")), 100000000, 0, -252); ((("b")), 100000000, 0, -249); ((("value_b")), 100000000, 0, -246); ((("positive")), 100000000, 0, -253); ((("occurrences")), 100000000, 0, -250)], (0)), 100000000, 0, -251), (Tag1 (0, (Tag3 ((("t", 15393)), [((("a")), 100000000, 0, -248); ((("b")), 100000000, 0, -249); ((("occurrences")), 100000000, 0, -250)], (0)), 100000000, 0, -247), (Tag3 (Tag1 ((("Comparer", 15382)), "t"), [((("value_a")), 100000000, 0, -245); ((("value_b")), 100000000, 0, -246)], (0)), 100000000, 0, -244), 0), 100000000, 0, -243), 0), 100000000, 0, -242), 0), 100000000, 0, -241), 0, (("runtime/tools.ml", 422, 13784, 13794), ("runtime/tools.ml", 422, 13784, 13797), 0), 0, Tag1 ("Refl__Tools", 1304)), 0); (("make_transfer", 15395), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_arguments"), [((("source")), 100000000, 0, -239); ((("sub")), 100000000, 0, -235); ((("arg")), 100000000, 0, -233)], (0)), 100000000, 0, -240), (Tag1 (0, (Tag3 ((("t", 15393)), [((("a")), 100000000, 0, -231); ((("b")), 100000000, 0, -232); ((("source")), 100000000, 0, -239)], (0)), 100000000, 0, -238), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("t", 15393)), [((("a")), 100000000, 0, -231); ((("b")), 100000000, 0, -232); ((("arg")), 100000000, 0, -233)], (0)), 100000000, 0, -230); (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "eq"), [((("sub")), 100000000, 0, -235); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -237), 1, 0, 0)), 100000000, 0, -236)], (0)), 100000000, 0, -234)], (0)), 100000000, 0, -229), 0), 100000000, 0, -228), 0), 100000000, 0, -227), 0, (("runtime/tools.ml", 432, 14226, 14236), ("runtime/tools.ml", 432, 14226, 14249), 0), 0, Tag1 ("Refl__Tools", 1407)), 0); Tag1 (("make", 15396), ([((("arity_a")), 100000000, 0, -207); ((("arity_b")), 100000000, 0, -208); ((("rec_group")), 100000000, 0, -209); ((("kinds")), 100000000, 0, -210); ((("gadt_a")), 100000000, 0, -211); ((("gadt_b")), 100000000, 0, -212)], 6, [[(("f", 1345), 0, (Tag10 ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [(Tag9 (("a")), 100000000, 0, -214); (Tag9 (("structure")), 100000000, 0, -216); ((("arity_a")), 100000000, 0, -207); ((("rec_group")), 100000000, 0, -209); ((("kinds")), 100000000, 0, -210); (Tag9 (("ap")), 100000000, 0, -217); (Tag9 (("an")), 100000000, 0, -218); (Tag9 (("ad")), 100000000, 0, -219); ((("gadt_a")), 100000000, 0, -211)], (0)), 100000000, 0, -226), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [(Tag9 (("b")), 100000000, 0, -215); (Tag9 (("structure")), 100000000, 0, -216); ((("arity_b")), 100000000, 0, -208); ((("rec_group")), 100000000, 0, -209); ((("kinds")), 100000000, 0, -210); (Tag9 (("ap")), 100000000, 0, -217); (Tag9 (("an")), 100000000, 0, -218); (Tag9 (("ad")), 100000000, 0, -219); ((("gadt_b")), 100000000, 0, -212)], (0)), 100000000, 0, -225), (Tag1 (0, (Tag3 ((("t", 15393)), [((("arity_a")), 100000000, 0, -207); ((("arity_b")), 100000000, 0, -208); (Tag9 (("ad")), 100000000, 0, -219)], (0)), 100000000, 0, -224), (Tag3 (Tag1 ((("Comparer", 15382)), "t"), [(Tag9 (("a")), 100000000, 0, -214); (Tag9 (("b")), 100000000, 0, -215)], (0)), 100000000, 0, -223), 0), 100000000, 0, -222), 0), 100000000, 0, -221), 0), 100000000, 0, -220), [(Tag9 (("a")), 100000000, 0, -214); (Tag9 (("b")), 100000000, 0, -215); (Tag9 (("structure")), 100000000, 0, -216); (Tag9 (("ap")), 100000000, 0, -217); (Tag9 (("an")), 100000000, 0, -218); (Tag9 (("ad")), 100000000, 0, -219)]), 100000000, 0, -213), (("runtime/tools.ml", 453, 15037, 15043), ("runtime/tools.ml", 457, 15254, 15316), 0), 0, Tag1 ("Refl__Tools", 1502))]], 1, ((Tag3 (Tag1 (Tag2 (Tag1 ((Tag2 ("Refl__Tools")), "BinaryVector"), (("Comparer", 15382))), "make"), [((("arity_a")), 100000000, 0, -207); ((("arity_b")), 100000000, 0, -208); ((("rec_group")), 100000000, 0, -209); ((("kinds")), 100000000, 0, -210); ((("gadt_a")), 100000000, 0, -211); ((("gadt_b")), 100000000, 0, -212)], (0)), 100000000, 0, -206)), [63; 63; 15; 63; 15; 15], [0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 452, 14962, 14964), ("runtime/tools.ml", 458, 15317, 15322), 0), 0, 0, 1, Tag1 ("Refl__Tools", 1501)), 1, 0); (("make_transfer_vector", 15397), ((Tag1 (0, (Tag3 ((("make", 15396)), [((("arity_a")), 100000000, 0, -189); ((("arity_b")), 100000000, 0, -190); ((("rec_group")), 100000000, 0, -200); ((("kinds")), 100000000, 0, -201); ((("gadt_a")), 100000000, 0, -204); ((("gadt_b")), 100000000, 0, -202)], (0)), 100000000, 0, -205), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((("types_a")), 100000000, 0, -185); ((("structures")), 100000000, 0, -199); ((("arity_a")), 100000000, 0, -189); ((("rec_group")), 100000000, 0, -200); ((("kinds")), 100000000, 0, -201); ((("arguments")), 100000000, 0, -197); ((("gadt_a")), 100000000, 0, -204)], (0)), 100000000, 0, -203), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((("types_b")), 100000000, 0, -186); ((("structures")), 100000000, 0, -199); ((("arity_b")), 100000000, 0, -190); ((("rec_group")), 100000000, 0, -200); ((("kinds")), 100000000, 0, -201); ((("arguments")), 100000000, 0, -197); ((("gadt_b")), 100000000, 0, -202)], (0)), 100000000, 0, -198), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer"), [((("positive")), 100000000, 0, -193); ((("negative")), 100000000, 0, -194); ((("direct")), 100000000, 0, -191); ((("subpositive")), 100000000, 0, -195); ((("subnegative")), 100000000, 0, -196); ((("subdirect")), 100000000, 0, -187); ((("arguments")), 100000000, 0, -197)], (0)), 100000000, 0, -192), (Tag1 (0, (Tag3 ((("t", 15393)), [((("arity_a")), 100000000, 0, -189); ((("arity_b")), 100000000, 0, -190); ((("direct")), 100000000, 0, -191)], (0)), 100000000, 0, -188), (Tag3 ((("t", 15393)), [((("types_a")), 100000000, 0, -185); ((("types_b")), 100000000, 0, -186); ((("subdirect")), 100000000, 0, -187)], (0)), 100000000, 0, -184), 0), 100000000, 0, -183), 0), 100000000, 0, -182), 0), 100000000, 0, -181), 0), 100000000, 0, -180), 0), 100000000, 0, -179), 0, (("runtime/tools.ml", 460, 15324, 15334), ("runtime/tools.ml", 460, 15324, 15354), 0), 0, Tag1 ("Refl__Tools", 1503)), 0); (("skip", 15398), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "skip_vector"), [((("variables")), 100000000, 0, -177); ((("skip_variables")), 100000000, 0, -175)], (0)), 100000000, 0, -178), (Tag1 (0, (Tag3 ((("t", 15393)), [((("a")), 100000000, 0, -173); ((("b")), 100000000, 0, -174); ((("variables")), 100000000, 0, -177)], (0)), 100000000, 0, -176), (Tag3 ((("t", 15393)), [((("a")), 100000000, 0, -173); ((("b")), 100000000, 0, -174); ((("skip_variables")), 100000000, 0, -175)], (0)), 100000000, 0, -172), 0), 100000000, 0, -171), 0), 100000000, 0, -170), 0, (("runtime/tools.ml", 485, 16403, 16413), ("runtime/tools.ml", 485, 16403, 16417), 0), 0, Tag1 ("Refl__Tools", 1608)), 0); (("make", 15399), ((Tag1 (0, (Tag3 ((("make", 15396)), [((0), 100000000, 0, -153); ((0), 100000000, 0, -154); ((0), 100000000, 0, -164); ((0), 100000000, 0, -165); ((0), 100000000, 0, -168); ((0), 100000000, 0, -166)], (0)), 100000000, 0, -169), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((0), 100000000, 0, -149); ((0), 100000000, 0, -163); ((0), 100000000, 0, -153); ((0), 100000000, 0, -164); ((0), 100000000, 0, -165); ((0), 100000000, 0, -161); ((0), 100000000, 0, -168)], (0)), 100000000, 0, -167), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((0), 100000000, 0, -150); ((0), 100000000, 0, -163); ((0), 100000000, 0, -154); ((0), 100000000, 0, -164); ((0), 100000000, 0, -165); ((0), 100000000, 0, -161); ((0), 100000000, 0, -166)], (0)), 100000000, 0, -162), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_skip"), [((0), 100000000, 0, -157); ((0), 100000000, 0, -158); ((0), 100000000, 0, -155); ((0), 100000000, 0, -159); ((0), 100000000, 0, -160); ((0), 100000000, 0, -151); ((0), 100000000, 0, -161)], (0)), 100000000, 0, -156), (Tag1 (0, (Tag3 ((("t", 15393)), [((0), 100000000, 0, -153); ((0), 100000000, 0, -154); ((0), 100000000, 0, -155)], (0)), 100000000, 0, -152), (Tag3 ((("t", 15393)), [((0), 100000000, 0, -149); ((0), 100000000, 0, -150); ((0), 100000000, 0, -151)], (0)), 100000000, 0, -148), 0), 100000000, 0, -147), 0), 100000000, 0, -146), 0), 100000000, 0, -145), 0), 100000000, 0, -144), 0), 100000000, 0, -143), 0, (("runtime/tools.ml", 497, 16769, 16775), ("runtime/tools.ml", 497, 16769, 16779), 0), 0, Tag1 ("Refl__Tools", 1655)), 0); Tag1 (("any", 15400), ([((("presence")), 100000000, 0, -133)], 1, Tag1 ([(("None", 1456), (0), ((Tag3 ((("any", 15400)), [(Tag8 (([("Absent", (0))], (0, 100000000, 0, -136), 1, 0, 0)), 100000000, 0, -135)], (0)), 100000000, 0, -134)), (("runtime/tools.ml", 503, 16986, 16990), ("runtime/tools.ml", 503, 16986, 17012), 0), 0, Tag1 ("Refl__Tools", 1667)); (("Some", 1457), Tag1 ([(("item", 1458), 0, (Tag10 ((Tag3 (Tag1 ((("Comparer", 15382)), "t"), [(Tag9 (("a")), 100000000, 0, -140); (Tag9 (("b")), 100000000, 0, -141)], (0)), 100000000, 0, -142), [(Tag9 (("a")), 100000000, 0, -140); (Tag9 (("b")), 100000000, 0, -141)]), 100000000, 0, -139), (("runtime/tools.ml", 505, 17028, 17038), ("runtime/tools.ml", 505, 17028, 17066), 0), 0, Tag1 ("Refl__Tools", 1668))]), ((Tag3 ((("any", 15400)), [((0), 100000000, 0, -138)], (0)), 100000000, 0, -137)), (("runtime/tools.ml", 504, 17013, 17017), ("runtime/tools.ml", 506, 17067, 17085), 0), 0, Tag1 ("Refl__Tools", 1669))], 0), 1, ((Tag3 (Tag1 (Tag2 (Tag1 ((Tag2 ("Refl__Tools")), "BinaryVector"), (("Comparer", 15382))), "any"), [((("presence")), 100000000, 0, -133)], (0)), 100000000, 0, -132)), [63], [0], 0, 0, (("runtime/tools.ml", 502, 16963, 16965), ("runtime/tools.ml", 506, 17067, 17085), 0), 0, 0, 0, Tag1 ("Refl__Tools", 1666)), 1, 0); (("append", 15401), ((Tag1 (0, (Tag3 ((("any", 15400)), [((("presence")), 100000000, 0, -130)], (0)), 100000000, 0, -131), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "presences"), [((("presence")), 100000000, 0, -130); ((("directs")), 100000000, 0, -127)], (0)), 100000000, 0, -129), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -122); ((("directs")), 100000000, 0, -127)], (0)), 100000000, 0, -128), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("directs")), 100000000, 0, -127); ((("direct")), 100000000, 0, -118); ((("subdirect")), 100000000, 0, -114)], (0)), 100000000, 0, -126), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -122); ((("types_a")), 100000000, 0, -124)], (0)), 100000000, 0, -125), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("types_a")), 100000000, 0, -124); ((("a")), 100000000, 0, -116); ((("sub_a")), 100000000, 0, -112)], (0)), 100000000, 0, -123), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -122); ((("types_b")), 100000000, 0, -120)], (0)), 100000000, 0, -121), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("types_b")), 100000000, 0, -120); ((("b")), 100000000, 0, -117); ((("sub_b")), 100000000, 0, -113)], (0)), 100000000, 0, -119), (Tag1 (0, (Tag3 ((("t", 15393)), [((("a")), 100000000, 0, -116); ((("b")), 100000000, 0, -117); ((("direct")), 100000000, 0, -118)], (0)), 100000000, 0, -115), (Tag3 ((("t", 15393)), [((("sub_a")), 100000000, 0, -112); ((("sub_b")), 100000000, 0, -113); ((("subdirect")), 100000000, 0, -114)], (0)), 100000000, 0, -111), 0), 100000000, 0, -110), 0), 100000000, 0, -109), 0), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), 0), 100000000, 0, -105), 0), 100000000, 0, -104), 0), 100000000, 0, -103), 0), 100000000, 0, -102), 0, (("runtime/tools.ml", 508, 17087, 17097), ("runtime/tools.ml", 508, 17087, 17103), 0), 0, Tag1 ("Refl__Tools", 1676)), 0)]), 0, (("runtime/compare.ml", 9, 89, 89), ("runtime/compare.ml", 9, 89, 131), 0), Tag1 ("Refl__Compare", 41)), 0, 0); Tag1 (("hook_fun", 15384), ([((("a")), 100000000, 0, -89); ((("b")), 100000000, 0, -90)], 2, 0, 1, ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "refl"), [((("a")), 100000000, 0, -89)], (0)), 100000000, 0, -96), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "refl"), [((("b")), 100000000, 0, -90)], (0)), 100000000, 0, -95), (Tag1 (0, (Tag1 (Tag1 ("hook"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("hook", 15385)), 0, (0)), 100000000, 0, -94)], (0)), 100000000, 0, -93), (Tag3 (Tag1 ((("Comparer", 15382)), "t"), [((("a")), 100000000, 0, -89); ((("b")), 100000000, 0, -90)], (0)), 100000000, 0, -92), 0), 100000000, 0, -91), (Tag3 (Tag1 ((("Comparer", 15382)), "t"), [((("a")), 100000000, 0, -89); ((("b")), 100000000, 0, -90)], (0)), 100000000, 0, -88), 0), 100000000, 0, -87), 0), 100000000, 0, -86), 0), 100000000, 0, -85)), [63; 63], [0; 0], 0, 0, (("runtime/compare.ml", 11, 133, 133), ("runtime/compare.ml", 13, 225, 250), 0), 0, 0, 0, Tag1 ("Refl__Compare", 42)), 1, 0); Tag1 (("hook", 15385), (0, 0, [[(("hook", 461), 0, (Tag10 ((Tag3 ((("hook_fun", 15384)), [(Tag9 (("a")), 100000000, 0, -82); (Tag9 (("b")), 100000000, 0, -83)], (0)), 100000000, 0, -84), [(Tag9 (("a")), 100000000, 0, -82); (Tag9 (("b")), 100000000, 0, -83)]), 100000000, 0, -81), (("runtime/compare.ml", 14, 251, 264), ("runtime/compare.ml", 14, 251, 296), 0), 0, Tag1 ("Refl__Compare", 44))]], 1, 0, 0, 0, 0, 0, (("runtime/compare.ml", 14, 251, 251), ("runtime/compare.ml", 14, 251, 298), 0), 0, 0, 1, Tag1 ("Refl__Compare", 43)), 2, 0); Tag2 (("Attribute_compare", 15386), (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "typed_attribute_kind"), [((("a")), 100000000, 0, -78); ((("arity")), 100000000, 0, -79); ((("b")), 100000000, 0, -80)], (0), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "typed_attribute_kind"), [((("a")), 100000000, 0, -75); ((("arity")), 100000000, 0, -76); (Tag3 (Tag1 ((("Comparer", 15382)), "t"), [((("a")), 100000000, 0, -75); ((("a")), 100000000, 0, -75)], (0)), 100000000, 0, -77)], (0)), 100000000, 0, -74)), 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Refl__Compare", 80)), 0, 0); Tag1 (("poly", 15387), ([((("arity_a")), 100000000, 0, -69); ((("gadt_a")), 100000000, 0, -72); ((("arity_b")), 100000000, 0, -70); ((("gadt_b")), 100000000, 0, -73)], 4, Tag1 ([(("Poly", 516), (0), 0, (("runtime/compare.ml", 20, 477, 479), ("runtime/compare.ml", 20, 477, 485), 0), 0, Tag1 ("Refl__Compare", 82)); (("Mono", 517), Tag1 ([(("converters", 532), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Convert"), "converters"), [((("arity_a")), 100000000, 0, -69); ((("arity_b")), 100000000, 0, -70)], (0)), 100000000, 0, -68), (("runtime/compare.ml", 22, 500, 506), ("runtime/compare.ml", 22, 500, 559), 0), 0, Tag1 ("Refl__Compare", 84)); (("eq_gadt", 533), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "eq"), [((("gadt_a")), 100000000, 0, -72); ((("gadt_b")), 100000000, 0, -73)], (0)), 100000000, 0, -71), (("runtime/compare.ml", 23, 560, 566), ("runtime/compare.ml", 23, 560, 598), 0), 0, Tag1 ("Refl__Compare", 85))]), 0, (("runtime/compare.ml", 21, 486, 488), ("runtime/compare.ml", 24, 599, 604), 0), 0, Tag1 ("Refl__Compare", 86))], 0), 1, 0, [63; 15; 63; 15], [0; 0; 0; 0], 0, 0, (("runtime/compare.ml", 19, 426, 426), ("runtime/compare.ml", 24, 599, 604), 0), 0, 0, 0, Tag1 ("Refl__Compare", 81)), 1, 0); (("compare_gen", 15388), ((Tag1 (Tag1 ("hook"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("hook", 15385)), 0, (0)), 100000000, 0, -67)], (0)), 100000000, 0, -66), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [((("a")), 100000000, 0, -49); ((("structure")), 100000000, 0, -59); ((("arity_a")), 100000000, 0, -52); ((("rec_group")), 100000000, 0, -60); (Tag8 (([("Absent", Tag1 (1, 0, 0, (1))); ("Array", (0)); ("Attributes", (0)); ("Bool", (0)); ("Bytes", (0)); ("Char", (0)); ("Constr", (0)); ("Exists", (0)); ("Float", (0)); ("GADT", Tag1 (1, 0, 0, (1))); ("Int", (0)); ("Int32", (0)); ("Int64", (0)); ("Lazy", (0)); ("MapOpaque", (0)); ("Name", Tag1 (1, 0, 0, (1))); ("Nativeint", (0)); ("Object", (0)); ("Opaque", (0)); ("Record", (0)); ("String", (0)); ("Tuple", (0)); ("Unit", Tag1 (1, 0, 0, (1))); ("Variable", (0)); ("Variant", (0))], ((0), 100000000, 0, -62), 1, 0, ([Tag1 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "Kinds"), "comparable")]))), 100000000, 0, -61); ((("positive")), 100000000, 0, -63); ((("negative")), 100000000, 0, -64); ((("direct")), 100000000, 0, -54); ((("gadt_a")), 100000000, 0, -56)], (0)), 100000000, 0, -65), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [((("b")), 100000000, 0, -50); ((("structure")), 100000000, 0, -59); ((("arity_b")), 100000000, 0, -53); ((("rec_group")), 100000000, 0, -60); (Tag8 (([("Absent", Tag1 (1, 0, 0, (1))); ("Array", (0)); ("Attributes", (0)); ("Bool", (0)); ("Bytes", (0)); ("Char", (0)); ("Constr", (0)); ("Exists", (0)); ("Float", (0)); ("GADT", Tag1 (1, 0, 0, (1))); ("Int", (0)); ("Int32", (0)); ("Int64", (0)); ("Lazy", (0)); ("MapOpaque", (0)); ("Name", Tag1 (1, 0, 0, (1))); ("Nativeint", (0)); ("Object", (0)); ("Opaque", (0)); ("Record", (0)); ("String", (0)); ("Tuple", (0)); ("Unit", Tag1 (1, 0, 0, (1))); ("Variable", (0)); ("Variant", (0))], ((0), 100000000, 0, -62), 1, 0, ([Tag1 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "Kinds"), "comparable")]))), 100000000, 0, -61); ((("positive")), 100000000, 0, -63); ((("negative")), 100000000, 0, -64); ((("direct")), 100000000, 0, -54); ((("gadt_b")), 100000000, 0, -57)], (0)), 100000000, 0, -58), (Tag1 (0, (Tag3 ((("poly", 15387)), [((("arity_a")), 100000000, 0, -52); ((("gadt_a")), 100000000, 0, -56); ((("arity_b")), 100000000, 0, -53); ((("gadt_b")), 100000000, 0, -57)], (0)), 100000000, 0, -55), (Tag1 (0, (Tag3 (Tag1 ((("Comparers", 15383)), "t"), [((("arity_a")), 100000000, 0, -52); ((("arity_b")), 100000000, 0, -53); ((("direct")), 100000000, 0, -54)], (0)), 100000000, 0, -51), (Tag3 (Tag1 ((("Comparer", 15382)), "t"), [((("a")), 100000000, 0, -49); ((("b")), 100000000, 0, -50)], (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("runtime/compare.ml", 26, 606, 614), ("runtime/compare.ml", 26, 606, 625), 0), 0, Tag1 ("Refl__Compare", 95)), 0); (("compare_poly", 15389), ((Tag1 (Tag1 ("hook"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("hook", 15385)), 0, (0)), 100000000, 0, -42)], (0)), 100000000, 0, -41), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [((0), 100000000, 0, -25); ((0), 100000000, 0, -32); ((0), 100000000, 0, -28); ((0), 100000000, 0, -33); (Tag8 (([("Absent", Tag1 (1, 0, 0, (1))); ("Array", (0)); ("Attributes", (0)); ("Bool", (0)); ("Bytes", (0)); ("Char", (0)); ("Constr", (0)); ("Exists", (0)); ("Float", (0)); ("GADT", Tag1 (1, 0, 0, (1))); ("Int", (0)); ("Int32", (0)); ("Int64", (0)); ("Lazy", (0)); ("MapOpaque", (0)); ("Name", Tag1 (1, 0, 0, (1))); ("Nativeint", (0)); ("Object", (0)); ("Opaque", (0)); ("Record", (0)); ("String", (0)); ("Tuple", (0)); ("Unit", Tag1 (1, 0, 0, (1))); ("Variable", (0)); ("Variant", (0))], ((0), 100000000, 0, -35), 1, 0, ([Tag1 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "Kinds"), "comparable")]))), 100000000, 0, -34); ((0), 100000000, 0, -36); ((0), 100000000, 0, -37); ((0), 100000000, 0, -30); ((0), 100000000, 0, -40)], (0)), 100000000, 0, -39), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [((0), 100000000, 0, -26); ((0), 100000000, 0, -32); ((0), 100000000, 0, -29); ((0), 100000000, 0, -33); (Tag8 (([("Absent", Tag1 (1, 0, 0, (1))); ("Array", (0)); ("Attributes", (0)); ("Bool", (0)); ("Bytes", (0)); ("Char", (0)); ("Constr", (0)); ("Exists", (0)); ("Float", (0)); ("GADT", Tag1 (1, 0, 0, (1))); ("Int", (0)); ("Int32", (0)); ("Int64", (0)); ("Lazy", (0)); ("MapOpaque", (0)); ("Name", Tag1 (1, 0, 0, (1))); ("Nativeint", (0)); ("Object", (0)); ("Opaque", (0)); ("Record", (0)); ("String", (0)); ("Tuple", (0)); ("Unit", Tag1 (1, 0, 0, (1))); ("Variable", (0)); ("Variant", (0))], ((0), 100000000, 0, -35), 1, 0, ([Tag1 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "Kinds"), "comparable")]))), 100000000, 0, -34); ((0), 100000000, 0, -36); ((0), 100000000, 0, -37); ((0), 100000000, 0, -30); ((0), 100000000, 0, -38)], (0)), 100000000, 0, -31), (Tag1 (0, (Tag3 (Tag1 ((("Comparers", 15383)), "t"), [((0), 100000000, 0, -28); ((0), 100000000, 0, -29); ((0), 100000000, 0, -30)], (0)), 100000000, 0, -27), (Tag3 (Tag1 ((("Comparer", 15382)), "t"), [((0), 100000000, 0, -25); ((0), 100000000, 0, -26)], (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("runtime/compare.ml", 248, 9649, 9653), ("runtime/compare.ml", 248, 9649, 9665), 0), 0, Tag1 ("Refl__Compare", 16434)), 0); (("compare", 15390), ((Tag1 (Tag1 ("hook"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("hook", 15385)), 0, (0)), 100000000, 0, -19)], (0)), 100000000, 0, -18), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [((0), 100000000, 0, -6); ((0), 100000000, 0, -11); ((0), 100000000, 0, -8); ((0), 100000000, 0, -12); (Tag8 (([("Absent", Tag1 (1, 0, 0, (1))); ("Array", (0)); ("Attributes", (0)); ("Bool", (0)); ("Bytes", (0)); ("Char", (0)); ("Constr", (0)); ("Exists", (0)); ("Float", (0)); ("GADT", Tag1 (1, 0, 0, (1))); ("Int", (0)); ("Int32", (0)); ("Int64", (0)); ("Lazy", (0)); ("MapOpaque", (0)); ("Name", Tag1 (1, 0, 0, (1))); ("Nativeint", (0)); ("Object", (0)); ("Opaque", (0)); ("Record", (0)); ("String", (0)); ("Tuple", (0)); ("Unit", Tag1 (1, 0, 0, (1))); ("Variable", (0)); ("Variant", (0))], ((0), 100000000, 0, -14), 1, 0, ([Tag1 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "Kinds"), "comparable")]))), 100000000, 0, -13); ((0), 100000000, 0, -15); ((0), 100000000, 0, -16); ((0), 100000000, 0, -9); ((0), 100000000, 0, -17)], (0)), 100000000, 0, -10), (Tag1 (0, (Tag3 (Tag1 ((("Comparers", 15383)), "t"), [((0), 100000000, 0, -8); ((0), 100000000, 0, -8); ((0), 100000000, 0, -9)], (0)), 100000000, 0, -7), (Tag3 (Tag1 ((("Comparer", 15382)), "t"), [((0), 100000000, 0, -6); ((0), 100000000, 0, -6)], (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("runtime/compare.ml", 251, 9748, 9752), ("runtime/compare.ml", 251, 9748, 9759), 0), 0, Tag1 ("Refl__Compare", 16439)), 0)], "Refl__Compare", [("Refl__Compare", ("\239\237\162\183\159\027\247~J\142\238\137um2\223")); ("Traverse__Values", ("}\239\001\023\024&\227\167Sl\002\148\026\190\180\025")); ("Traverse__Modules", ("=\175q\026#\242\139\b\202\252\139\207\195\170\254\202")); ("Traverse__Interface", ("\252\146\219\195\199\167\234\143+\145l\200\254\244s}")); ("Traverse__", ("y\220\011\221C%Ob7%t,\252N21")); ("Traverse", ("\019\209\190\177II\1552 \b\174\006\b\1643\152")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Printf", ("\215<\139]\021\142\224E\245m\198qc(W\229")); ("Stdlib__Oo", ("\171\243\248\026\217y\205\024\145\173k|\254x3\005")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Fun", ("\234t\181\000iQ\251,\b\020$\224\233\160\142\210")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stdcompat__stdlib_s", ("?\143\027\238\145\138\139e`\216P\248\156\178=\206")); ("Stdcompat__init", ("r\254q\255\217]\232\239'\192d\165\222\016\157\133")); ("Stdcompat", ("\139\1989\181:\137\230\132\240\223\206\210Y\135S\\")); ("Refl__Tools", ("i\215\207\166d\225\190DU\241\194\224\137P\158e")); ("Refl__Desc", ("\221\150mt\149.2\132\189\244\007\164&\203\225\172")); ("Refl__Convert", ("\1441\157\139\143\018\003\200:\012kp\r\163\135\250")); ("Refl__", ("i\003\196\150\161\159\229g\157\181\149\015g%\221\240")); ("CamlinternalOO", ("\161\236\205-\150\171\185\243\146\139if:\146\170q")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
 ('c, 'c, 'g) Comparers.t -> ('a, 'a) Comparer.t
