val longident : Format.formatter -> Longident.t -> unit
val ident : Format.formatter -> Ident.t -> unit
val namespaced_ident : Shape.Sig_component_kind.t -> Ident.t -> string
val tree_of_path : Path.t -> Outcometree.out_ident
val path : Format.formatter -> Path.t -> unit
val string_of_path : Path.t -> string
val type_path : Format.formatter -> Path.t -> unit
module Out_name :
  sig
    val create : string -> Outcometree.out_name
    val print : Outcometree.out_name -> string
  end
val strings_of_paths :
  Shape.Sig_component_kind.t option -> Path.t list -> string list
val raw_type_expr : Format.formatter -> Types.type_expr -> unit
val string_of_label : Asttypes.arg_label -> string
val wrap_printing_env : error:bool -> Env.t -> (unit -> 'a) -> 'a
module Naming_context : sig val enable : bool -> unit end
module Conflicts :
  sig
    val exists : unit -> bool
    type explanation = {
      kind : Shape.Sig_component_kind.t;
      name : string;
      root_name : string;
      location : Location.t;
    }
    val list_explanations : unit -> explanation list
    val print_located_explanations :
      Format.formatter -> explanation list -> unit
    val print_explanations : Format.formatter -> unit
    val reset : unit -> unit
  end
val reset : unit -> unit
val type_expr : Format.formatter -> Types.type_expr -> unit
val prepare_for_printing : Types.type_expr list -> unit
val add_type_to_preparation : Types.type_expr -> unit
val prepared_type_expr : Format.formatter -> Types.type_expr -> unit
val constructor_arguments :
  Format.formatter -> Types.constructor_arguments -> unit
val tree_of_type_scheme : Types.type_expr -> Outcometree.out_type
val type_scheme : Format.formatter -> Types.type_expr -> unit
val prepared_type_scheme : Format.formatter -> Types.type_expr -> unit
val shared_type_scheme : Format.formatter -> Types.type_expr -> unit
val tree_of_value_description :
  Ident.t -> Types.value_description -> Outcometree.out_sig_item
val value_description :
  Ident.t -> Format.formatter -> Types.value_description -> unit
val label : Format.formatter -> Types.label_declaration -> unit
val add_constructor_to_preparation : Types.constructor_declaration -> unit
val prepared_constructor :
  Format.formatter -> Types.constructor_declaration -> unit
val constructor : Format.formatter -> Types.constructor_declaration -> unit
val tree_of_type_declaration :
  Ident.t ->
  Types.type_declaration -> Types.rec_status -> Outcometree.out_sig_item
val add_type_declaration_to_preparation :
  Ident.t -> Types.type_declaration -> unit
val prepared_type_declaration :
  Ident.t -> Format.formatter -> Types.type_declaration -> unit
val type_declaration :
  Ident.t -> Format.formatter -> Types.type_declaration -> unit
val tree_of_extension_constructor :
  Ident.t ->
  Types.extension_constructor -> Types.ext_status -> Outcometree.out_sig_item
val add_extension_constructor_to_preparation :
  Types.extension_constructor -> unit
val prepared_extension_constructor :
  Ident.t -> Format.formatter -> Types.extension_constructor -> unit
val extension_constructor :
  Ident.t -> Format.formatter -> Types.extension_constructor -> unit
val extension_only_constructor :
  Ident.t -> Format.formatter -> Types.extension_constructor -> unit
val tree_of_module :
  Ident.t ->
  ?ellipsis:bool ->
  Types.module_type -> Types.rec_status -> Outcometree.out_sig_item
val modtype : Format.formatter -> Types.module_type -> unit
val signature : Format.formatter -> Types.signature -> unit
val tree_of_modtype : Types.module_type -> Outcometree.out_module_type
val tree_of_modtype_declaration :
  Ident.t -> Types.modtype_declaration -> Outcometree.out_sig_item
val functor_parameters :
  sep:(Format.formatter -> unit -> unit) ->
  ('b -> Format.formatter -> unit) ->
  (Ident.t option * 'b) list -> Format.formatter -> unit
type type_or_scheme = Type | Type_scheme
val tree_of_signature : Types.signature -> Outcometree.out_sig_item list
val tree_of_typexp :
  type_or_scheme -> Types.type_expr -> Outcometree.out_type
val modtype_declaration :
  Ident.t -> Format.formatter -> Types.modtype_declaration -> unit
val class_type : Format.formatter -> Types.class_type -> unit
val tree_of_class_declaration :
  Ident.t ->
  Types.class_declaration -> Types.rec_status -> Outcometree.out_sig_item
val class_declaration :
  Ident.t -> Format.formatter -> Types.class_declaration -> unit
val tree_of_cltype_declaration :
  Ident.t ->
  Types.class_type_declaration ->
  Types.rec_status -> Outcometree.out_sig_item
val cltype_declaration :
  Ident.t -> Format.formatter -> Types.class_type_declaration -> unit
val type_expansion :
  type_or_scheme -> Format.formatter -> Errortrace.expanded_type -> unit
val prepare_expansion : Errortrace.expanded_type -> Errortrace.expanded_type
val report_ambiguous_type_error :
  Format.formatter ->
  Env.t ->
  Path.t * Path.t ->
  (Path.t * Path.t) list ->
  (Format.formatter -> unit) ->
  (Format.formatter -> unit) -> (Format.formatter -> unit) -> unit
val report_unification_error :
  Format.formatter ->
  Env.t ->
  Errortrace.unification_error ->
  ?type_expected_explanation:(Format.formatter -> unit) ->
  (Format.formatter -> unit) -> (Format.formatter -> unit) -> unit
val report_equality_error :
  Format.formatter ->
  type_or_scheme ->
  Env.t ->
  Errortrace.equality_error ->
  (Format.formatter -> unit) -> (Format.formatter -> unit) -> unit
val report_moregen_error :
  Format.formatter ->
  type_or_scheme ->
  Env.t ->
  Errortrace.moregen_error ->
  (Format.formatter -> unit) -> (Format.formatter -> unit) -> unit
val report_comparison_error :
  Format.formatter ->
  type_or_scheme ->
  Env.t ->
  Errortrace.comparison_error ->
  (Format.formatter -> unit) -> (Format.formatter -> unit) -> unit
module Subtype :
  sig
    val report_error :
      Format.formatter -> Env.t -> Errortrace.Subtype.error -> string -> unit
  end
val print_items :
  (Env.t -> Types.signature_item -> 'a option) ->
  Env.t ->
  Types.signature_item list -> (Outcometree.out_sig_item * 'a option) list
val rewrite_double_underscore_paths : Env.t -> Path.t -> Path.t
("DEBUG:rule", [(("longident", 1047), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -418), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Longident")), "t"), 0, (0)), 100000000, 0, -417), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -416), 0), 100000000, 0, -415), 0), 100000000, 0, -414), 0, (("typing/printtyp.mli", 22, 1146, 1146), ("typing/printtyp.mli", 22, 1146, 1193), 0), 0, Tag1 ("Printtyp", 3)), 0); (("ident", 1048), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -413), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -412), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -411), 0), 100000000, 0, -410), 0), 100000000, 0, -409), 0, (("typing/printtyp.mli", 23, 1194, 1194), ("typing/printtyp.mli", 23, 1194, 1233), 0), 0, Tag1 ("Printtyp", 4)), 0); (("namespaced_ident", 1049), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Shape")), "Sig_component_kind"), "t"), 0, (0)), 100000000, 0, -408), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -407), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -406), 0), 100000000, 0, -405), 0), 100000000, 0, -404), 0, (("typing/printtyp.mli", 24, 1234, 1234), ("typing/printtyp.mli", 24, 1234, 1303), 0), 0, Tag1 ("Printtyp", 5)), 0); (("tree_of_path", 1050), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -403), (Tag3 (Tag1 ((Tag2 ("Outcometree")), "out_ident"), 0, (0)), 100000000, 0, -402), 0), 100000000, 0, -401), 0, (("typing/printtyp.mli", 25, 1304, 1304), ("typing/printtyp.mli", 25, 1304, 1341), 0), 0, Tag1 ("Printtyp", 6)), 0); (("path", 1051), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -400), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -399), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -398), 0), 100000000, 0, -397), 0), 100000000, 0, -396), 0, (("typing/printtyp.mli", 26, 1342, 1342), ("typing/printtyp.mli", 26, 1342, 1379), 0), 0, Tag1 ("Printtyp", 7)), 0); (("string_of_path", 1052), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -395), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -394), 0), 100000000, 0, -393), 0, (("typing/printtyp.mli", 27, 1380, 1380), ("typing/printtyp.mli", 27, 1380, 1416), 0), 0, Tag1 ("Printtyp", 8)), 0); (("type_path", 1053), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -392), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -391), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -390), 0), 100000000, 0, -389), 0), 100000000, 0, -388), 0, (("typing/printtyp.mli", 29, 1418, 1418), ("typing/printtyp.mli", 29, 1418, 1460), 0), 0, Tag1 ("Printtyp", 9)), 0); Tag3 (("Out_name", 1054), 0, (Tag1 ([(("create", 1112), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -424), (Tag3 (Tag1 ((Tag2 ("Outcometree")), "out_name"), 0, (0)), 100000000, 0, -423), 0), 100000000, 0, -422), 0, (("typing/printtyp.mli", 34, 1590, 1592), ("typing/printtyp.mli", 34, 1590, 1622), 0), 0, Tag1 ("Printtyp", 10)), 0); (("print", 1113), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Outcometree")), "out_name"), 0, (0)), 100000000, 0, -421), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -420), 0), 100000000, 0, -419), 0, (("typing/printtyp.mli", 35, 1623, 1625), ("typing/printtyp.mli", 35, 1623, 1654), 0), 0, Tag1 ("Printtyp", 11)), 0)]), 0, (("typing/printtyp.mli", 33, 1569, 1569), ("typing/printtyp.mli", 36, 1655, 1658), 0), Tag1 ("Printtyp", 12)), 0, 0); (("strings_of_paths", 1055), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Shape")), "Sig_component_kind"), "t"), 0, (0)), 100000000, 0, -387)], (0)), 100000000, 0, -386), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -385)], (0)), 100000000, 0, -384), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -383)], (0)), 100000000, 0, -382), 0), 100000000, 0, -381), 0), 100000000, 0, -380), 0, (("typing/printtyp.mli", 40, 1713, 1713), ("typing/printtyp.mli", 40, 1713, 1774), 0), 0, Tag1 ("Printtyp", 14)), 0); (("raw_type_expr", 1056), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -379), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -378), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -377), 0), 100000000, 0, -376), 0), 100000000, 0, -375), 0, (("typing/printtyp.mli", 44, 1873, 1873), ("typing/printtyp.mli", 44, 1873, 1922), 0), 0, Tag1 ("Printtyp", 15)), 0); (("string_of_label", 1057), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "arg_label"), 0, (0)), 100000000, 0, -374), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -373), 0), 100000000, 0, -372), 0, (("typing/printtyp.mli", 45, 1923, 1923), ("typing/printtyp.mli", 45, 1923, 1972), 0), 0, Tag1 ("Printtyp", 16)), 0); (("wrap_printing_env", 1058), ((Tag1 (("error"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -371), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -370), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -369), ((("a")), 100000000, 0, -367), 0), 100000000, 0, -368), ((("a")), 100000000, 0, -367), 0), 100000000, 0, -366), 0), 100000000, 0, -365), 0), 100000000, 0, -364), 0, (("typing/printtyp.mli", 47, 1974, 1974), ("typing/printtyp.mli", 47, 1974, 2038), 0), 0, Tag1 ("Printtyp", 17)), 0); Tag3 (("Naming_context", 1059), 0, (Tag1 ([(("enable", 1114), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -427), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -426), 0), 100000000, 0, -425), 0, (("typing/printtyp.mli", 53, 2265, 2267), ("typing/printtyp.mli", 53, 2265, 2291), 0), 0, Tag1 ("Printtyp", 18)), 0)]), 0, (("typing/printtyp.mli", 52, 2238, 2238), ("typing/printtyp.mli", 56, 2413, 2416), 0), Tag1 ("Printtyp", 19)), 0, 0); Tag3 (("Conflicts", 1060), 0, (Tag1 ([(("exists", 1115), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -450), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -449), 0), 100000000, 0, -448), 0, (("typing/printtyp.mli", 62, 2637, 2639), ("typing/printtyp.mli", 62, 2637, 2663), 0), 0, Tag1 ("Printtyp", 20)), 0); Tag1 (("explanation", 1116), (0, 0, [[(("kind", 841), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Shape")), "Sig_component_kind"), "t"), 0, (0)), 100000000, 0, -444), (("typing/printtyp.mli", 67, 2805, 2811), ("typing/printtyp.mli", 67, 2805, 2844), 0), 0, Tag1 ("Printtyp", 22)); (("name", 842), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -445), (("typing/printtyp.mli", 68, 2845, 2851), ("typing/printtyp.mli", 68, 2845, 2863), 0), 0, Tag1 ("Printtyp", 23)); (("root_name", 843), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -446), (("typing/printtyp.mli", 69, 2864, 2870), ("typing/printtyp.mli", 69, 2864, 2887), 0), 0, Tag1 ("Printtyp", 24)); (("location", 910), 0, (Tag3 (Tag1 ((Tag2 ("Location")), "t"), 0, (0)), 100000000, 0, -447), (("typing/printtyp.mli", 70, 2888, 2894), ("typing/printtyp.mli", 70, 2888, 2913), 0), 0, Tag1 ("Printtyp", 25))]], 1, 0, 0, 0, 0, 0, (("typing/printtyp.mli", 66, 2784, 2786), ("typing/printtyp.mli", 71, 2914, 2919), 0), 0, 0, 0, Tag1 ("Printtyp", 21)), 1, 0); (("list_explanations", 1117), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -443), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("explanation", 1116)), 0, (0)), 100000000, 0, -442)], (0)), 100000000, 0, -441), 0), 100000000, 0, -440), 0, (("typing/printtyp.mli", 73, 2921, 2923), ("typing/printtyp.mli", 73, 2921, 2970), 0), 0, Tag1 ("Printtyp", 26)), 0); (("print_located_explanations", 1118), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -439), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("explanation", 1116)), 0, (0)), 100000000, 0, -438)], (0)), 100000000, 0, -437), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -436), 0), 100000000, 0, -435), 0), 100000000, 0, -434), 0, (("typing/printtyp.mli", 78, 3123, 3125), ("typing/printtyp.mli", 79, 3157, 3205), 0), 0, Tag1 ("Printtyp", 27)), 0); (("print_explanations", 1119), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -433), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -432), 0), 100000000, 0, -431), 0, (("typing/printtyp.mli", 81, 3207, 3209), ("typing/printtyp.mli", 81, 3207, 3257), 0), 0, Tag1 ("Printtyp", 28)), 0); (("reset", 1120), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -430), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -429), 0), 100000000, 0, -428), 0, (("typing/printtyp.mli", 84, 3327, 3329), ("typing/printtyp.mli", 84, 3327, 3352), 0), 0, Tag1 ("Printtyp", 29)), 0)]), 0, (("typing/printtyp.mli", 61, 2615, 2615), ("typing/printtyp.mli", 85, 3353, 3356), 0), Tag1 ("Printtyp", 30)), 0, 0); (("reset", 1061), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -363), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -362), 0), 100000000, 0, -361), 0, (("typing/printtyp.mli", 87, 3358, 3358), ("typing/printtyp.mli", 87, 3358, 3381), 0), 0, Tag1 ("Printtyp", 31)), 0); (("type_expr", 1062), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -360), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -359), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -358), 0), 100000000, 0, -357), 0), 100000000, 0, -356), 0, (("typing/printtyp.mli", 95, 3796, 3796), ("typing/printtyp.mli", 95, 3796, 3841), 0), 0, Tag1 ("Printtyp", 32)), 0); (("prepare_for_printing", 1063), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -355)], (0)), 100000000, 0, -354), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -353), 0), 100000000, 0, -352), 0, (("typing/printtyp.mli", 101, 4157, 4157), ("typing/printtyp.mli", 101, 4157, 4205), 0), 0, Tag1 ("Printtyp", 33)), 0); (("add_type_to_preparation", 1064), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -351), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -350), 0), 100000000, 0, -349), 0, (("typing/printtyp.mli", 106, 4321, 4321), ("typing/printtyp.mli", 106, 4321, 4367), 0), 0, Tag1 ("Printtyp", 34)), 0); (("prepared_type_expr", 1065), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -348), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -347), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -346), 0), 100000000, 0, -345), 0), 100000000, 0, -344), 0, (("typing/printtyp.mli", 108, 4369, 4369), ("typing/printtyp.mli", 108, 4369, 4423), 0), 0, Tag1 ("Printtyp", 35)), 0); (("constructor_arguments", 1066), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -343), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "constructor_arguments"), 0, (0)), 100000000, 0, -342), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -341), 0), 100000000, 0, -340), 0), 100000000, 0, -339), 0, (("typing/printtyp.mli", 119, 5060, 5060), ("typing/printtyp.mli", 119, 5060, 5129), 0), 0, Tag1 ("Printtyp", 36)), 0); (("tree_of_type_scheme", 1067), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -338), (Tag3 (Tag1 ((Tag2 ("Outcometree")), "out_type"), 0, (0)), 100000000, 0, -337), 0), 100000000, 0, -336), 0, (("typing/printtyp.mli", 120, 5130, 5130), ("typing/printtyp.mli", 120, 5130, 5176), 0), 0, Tag1 ("Printtyp", 37)), 0); (("type_scheme", 1068), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -335), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -334), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -333), 0), 100000000, 0, -332), 0), 100000000, 0, -331), 0, (("typing/printtyp.mli", 121, 5177, 5177), ("typing/printtyp.mli", 121, 5177, 5224), 0), 0, Tag1 ("Printtyp", 38)), 0); (("prepared_type_scheme", 1069), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -330), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -329), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -328), 0), 100000000, 0, -327), 0), 100000000, 0, -326), 0, (("typing/printtyp.mli", 122, 5225, 5225), ("typing/printtyp.mli", 122, 5225, 5281), 0), 0, Tag1 ("Printtyp", 39)), 0); (("shared_type_scheme", 1070), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -325), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -324), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -323), 0), 100000000, 0, -322), 0), 100000000, 0, -321), 0, (("typing/printtyp.mli", 123, 5282, 5282), ("typing/printtyp.mli", 123, 5282, 5336), 0), 0, Tag1 ("Printtyp", 40)), 0); (("tree_of_value_description", 1071), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -320), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "value_description"), 0, (0)), 100000000, 0, -319), (Tag3 (Tag1 ((Tag2 ("Outcometree")), "out_sig_item"), 0, (0)), 100000000, 0, -318), 0), 100000000, 0, -317), 0), 100000000, 0, -316), 0, (("typing/printtyp.mli", 130, 5700, 5700), ("typing/printtyp.mli", 130, 5700, 5775), 0), 0, Tag1 ("Printtyp", 41)), 0); (("value_description", 1072), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -315), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -314), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "value_description"), 0, (0)), 100000000, 0, -313), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -312), 0), 100000000, 0, -311), 0), 100000000, 0, -310), 0), 100000000, 0, -309), 0, (("typing/printtyp.mli", 131, 5776, 5776), ("typing/printtyp.mli", 131, 5776, 5848), 0), 0, Tag1 ("Printtyp", 42)), 0); (("label", 1073), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -308), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "label_declaration"), 0, (0)), 100000000, 0, -307), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -306), 0), 100000000, 0, -305), 0), 100000000, 0, -304), 0, (("typing/printtyp.mli", 132, 5849, 5849), ("typing/printtyp.mli", 132, 5849, 5899), 0), 0, Tag1 ("Printtyp", 43)), 0); (("add_constructor_to_preparation", 1074), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "constructor_declaration"), 0, (0)), 100000000, 0, -303), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -302), 0), 100000000, 0, -301), 0, (("typing/printtyp.mli", 133, 5900, 5900), ("typing/printtyp.mli", 133, 5900, 5968), 0), 0, Tag1 ("Printtyp", 44)), 0); (("prepared_constructor", 1075), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -300), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "constructor_declaration"), 0, (0)), 100000000, 0, -299), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -298), 0), 100000000, 0, -297), 0), 100000000, 0, -296), 0, (("typing/printtyp.mli", 134, 5969, 5969), ("typing/printtyp.mli", 134, 5969, 6040), 0), 0, Tag1 ("Printtyp", 45)), 0); (("constructor", 1076), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -295), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "constructor_declaration"), 0, (0)), 100000000, 0, -294), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -293), 0), 100000000, 0, -292), 0), 100000000, 0, -291), 0, (("typing/printtyp.mli", 135, 6041, 6041), ("typing/printtyp.mli", 135, 6041, 6103), 0), 0, Tag1 ("Printtyp", 46)), 0); (("tree_of_type_declaration", 1077), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -290), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_declaration"), 0, (0)), 100000000, 0, -289), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "rec_status"), 0, (0)), 100000000, 0, -288), (Tag3 (Tag1 ((Tag2 ("Outcometree")), "out_sig_item"), 0, (0)), 100000000, 0, -287), 0), 100000000, 0, -286), 0), 100000000, 0, -285), 0), 100000000, 0, -284), 0, (("typing/printtyp.mli", 136, 6104, 6104), ("typing/printtyp.mli", 137, 6134, 6195), 0), 0, Tag1 ("Printtyp", 47)), 0); (("add_type_declaration_to_preparation", 1078), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -283), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_declaration"), 0, (0)), 100000000, 0, -282), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -281), 0), 100000000, 0, -280), 0), 100000000, 0, -279), 0, (("typing/printtyp.mli", 138, 6196, 6196), ("typing/printtyp.mli", 139, 6238, 6275), 0), 0, Tag1 ("Printtyp", 48)), 0); (("prepared_type_declaration", 1079), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -278), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -277), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_declaration"), 0, (0)), 100000000, 0, -276), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -275), 0), 100000000, 0, -274), 0), 100000000, 0, -273), 0), 100000000, 0, -272), 0, (("typing/printtyp.mli", 140, 6276, 6276), ("typing/printtyp.mli", 140, 6276, 6355), 0), 0, Tag1 ("Printtyp", 49)), 0); (("type_declaration", 1080), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -271), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -270), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_declaration"), 0, (0)), 100000000, 0, -269), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -268), 0), 100000000, 0, -267), 0), 100000000, 0, -266), 0), 100000000, 0, -265), 0, (("typing/printtyp.mli", 141, 6356, 6356), ("typing/printtyp.mli", 141, 6356, 6426), 0), 0, Tag1 ("Printtyp", 50)), 0); (("tree_of_extension_constructor", 1081), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -264), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "extension_constructor"), 0, (0)), 100000000, 0, -263), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "ext_status"), 0, (0)), 100000000, 0, -262), (Tag3 (Tag1 ((Tag2 ("Outcometree")), "out_sig_item"), 0, (0)), 100000000, 0, -261), 0), 100000000, 0, -260), 0), 100000000, 0, -259), 0), 100000000, 0, -258), 0, (("typing/printtyp.mli", 142, 6427, 6427), ("typing/printtyp.mli", 143, 6462, 6528), 0), 0, Tag1 ("Printtyp", 51)), 0); (("add_extension_constructor_to_preparation", 1082), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "extension_constructor"), 0, (0)), 100000000, 0, -257), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -256), 0), 100000000, 0, -255), 0, (("typing/printtyp.mli", 144, 6529, 6529), ("typing/printtyp.mli", 145, 6576, 6609), 0), 0, Tag1 ("Printtyp", 52)), 0); (("prepared_extension_constructor", 1083), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -254), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -253), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "extension_constructor"), 0, (0)), 100000000, 0, -252), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -251), 0), 100000000, 0, -250), 0), 100000000, 0, -249), 0), 100000000, 0, -248), 0, (("typing/printtyp.mli", 146, 6610, 6610), ("typing/printtyp.mli", 147, 6646, 6703), 0), 0, Tag1 ("Printtyp", 53)), 0); (("extension_constructor", 1084), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -247), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -246), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "extension_constructor"), 0, (0)), 100000000, 0, -245), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -244), 0), 100000000, 0, -243), 0), 100000000, 0, -242), 0), 100000000, 0, -241), 0, (("typing/printtyp.mli", 148, 6704, 6704), ("typing/printtyp.mli", 149, 6731, 6788), 0), 0, Tag1 ("Printtyp", 54)), 0); (("extension_only_constructor", 1085), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -240), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -239), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "extension_constructor"), 0, (0)), 100000000, 0, -238), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -237), 0), 100000000, 0, -236), 0), 100000000, 0, -235), 0), 100000000, 0, -234), 0, (("typing/printtyp.mli", 154, 6887, 6887), ("typing/printtyp.mli", 155, 6919, 6976), 0), 0, Tag1 ("Printtyp", 55)), 0); (("tree_of_module", 1086), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -233), (Tag1 (Tag1 ("ellipsis"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -232)], (0)), 100000000, 0, -231), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "module_type"), 0, (0)), 100000000, 0, -230), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "rec_status"), 0, (0)), 100000000, 0, -229), (Tag3 (Tag1 ((Tag2 ("Outcometree")), "out_sig_item"), 0, (0)), 100000000, 0, -228), 0), 100000000, 0, -227), 0), 100000000, 0, -226), 0), 100000000, 0, -225), 0), 100000000, 0, -224), 0, (("typing/printtyp.mli", 160, 7058, 7058), ("typing/printtyp.mli", 161, 7078, 7152), 0), 0, Tag1 ("Printtyp", 56)), 0); (("modtype", 1087), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -223), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "module_type"), 0, (0)), 100000000, 0, -222), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -221), 0), 100000000, 0, -220), 0), 100000000, 0, -219), 0, (("typing/printtyp.mli", 162, 7153, 7153), ("typing/printtyp.mli", 162, 7153, 7198), 0), 0, Tag1 ("Printtyp", 57)), 0); (("signature", 1088), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -218), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "signature"), 0, (0)), 100000000, 0, -217), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -216), 0), 100000000, 0, -215), 0), 100000000, 0, -214), 0, (("typing/printtyp.mli", 163, 7199, 7199), ("typing/printtyp.mli", 163, 7199, 7244), 0), 0, Tag1 ("Printtyp", 58)), 0); (("tree_of_modtype", 1089), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "module_type"), 0, (0)), 100000000, 0, -213), (Tag3 (Tag1 ((Tag2 ("Outcometree")), "out_module_type"), 0, (0)), 100000000, 0, -212), 0), 100000000, 0, -211), 0, (("typing/printtyp.mli", 164, 7245, 7245), ("typing/printtyp.mli", 164, 7245, 7296), 0), 0, Tag1 ("Printtyp", 59)), 0); (("tree_of_modtype_declaration", 1090), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -210), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "modtype_declaration"), 0, (0)), 100000000, 0, -209), (Tag3 (Tag1 ((Tag2 ("Outcometree")), "out_sig_item"), 0, (0)), 100000000, 0, -208), 0), 100000000, 0, -207), 0), 100000000, 0, -206), 0, (("typing/printtyp.mli", 165, 7297, 7297), ("typing/printtyp.mli", 166, 7330, 7380), 0), 0, Tag1 ("Printtyp", 60)), 0); (("functor_parameters", 1091), ((Tag1 (("sep"), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -205), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -204), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -203), 0), 100000000, 0, -202), 0), 100000000, 0, -201), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -196), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -200), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -199), 0), 100000000, 0, -198), 0), 100000000, 0, -197), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -195)], (0)), 100000000, 0, -194); ((("b")), 100000000, 0, -196)]), 100000000, 0, -193)], (0)), 100000000, 0, -192), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -191), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -190), 0), 100000000, 0, -189), 0), 100000000, 0, -188), 0), 100000000, 0, -187), 0), 100000000, 0, -186), 0, (("typing/printtyp.mli", 178, 7819, 7819), ("typing/printtyp.mli", 181, 7925, 7981), 0), 0, Tag1 ("Printtyp", 61)), 0); Tag1 (("type_or_scheme", 1092), (0, 0, Tag1 ([(("Type", 975), (0), 0, (("typing/printtyp.mli", 183, 7983, 8005), ("typing/printtyp.mli", 183, 7983, 8009), 0), 0, Tag1 ("Printtyp", 63)); (("Type_scheme", 976), (0), 0, (("typing/printtyp.mli", 183, 7983, 8010), ("typing/printtyp.mli", 183, 7983, 8023), 0), 0, Tag1 ("Printtyp", 64))], 0), 1, 0, 0, 0, 0, 0, (("typing/printtyp.mli", 183, 7983, 7983), ("typing/printtyp.mli", 183, 7983, 8023), 0), 0, 1, 0, Tag1 ("Printtyp", 62)), 1, 0); (("tree_of_signature", 1093), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "signature"), 0, (0)), 100000000, 0, -185), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Outcometree")), "out_sig_item"), 0, (0)), 100000000, 0, -184)], (0)), 100000000, 0, -183), 0), 100000000, 0, -182), 0, (("typing/printtyp.mli", 185, 8025, 8025), ("typing/printtyp.mli", 185, 8025, 8084), 0), 0, Tag1 ("Printtyp", 65)), 0); (("tree_of_typexp", 1094), ((Tag1 (0, (Tag3 ((("type_or_scheme", 1092)), 0, (0)), 100000000, 0, -181), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -180), (Tag3 (Tag1 ((Tag2 ("Outcometree")), "out_type"), 0, (0)), 100000000, 0, -179), 0), 100000000, 0, -178), 0), 100000000, 0, -177), 0, (("typing/printtyp.mli", 186, 8085, 8085), ("typing/printtyp.mli", 186, 8085, 8144), 0), 0, Tag1 ("Printtyp", 66)), 0); (("modtype_declaration", 1095), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -176), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -175), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "modtype_declaration"), 0, (0)), 100000000, 0, -174), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -173), 0), 100000000, 0, -172), 0), 100000000, 0, -171), 0), 100000000, 0, -170), 0, (("typing/printtyp.mli", 187, 8145, 8145), ("typing/printtyp.mli", 187, 8145, 8221), 0), 0, Tag1 ("Printtyp", 67)), 0); (("class_type", 1096), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -169), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "class_type"), 0, (0)), 100000000, 0, -168), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -167), 0), 100000000, 0, -166), 0), 100000000, 0, -165), 0, (("typing/printtyp.mli", 188, 8222, 8222), ("typing/printtyp.mli", 188, 8222, 8269), 0), 0, Tag1 ("Printtyp", 68)), 0); (("tree_of_class_declaration", 1097), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -164), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "class_declaration"), 0, (0)), 100000000, 0, -163), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "rec_status"), 0, (0)), 100000000, 0, -162), (Tag3 (Tag1 ((Tag2 ("Outcometree")), "out_sig_item"), 0, (0)), 100000000, 0, -161), 0), 100000000, 0, -160), 0), 100000000, 0, -159), 0), 100000000, 0, -158), 0, (("typing/printtyp.mli", 189, 8270, 8270), ("typing/printtyp.mli", 190, 8301, 8363), 0), 0, Tag1 ("Printtyp", 69)), 0); (("class_declaration", 1098), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -157), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -156), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "class_declaration"), 0, (0)), 100000000, 0, -155), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -154), 0), 100000000, 0, -153), 0), 100000000, 0, -152), 0), 100000000, 0, -151), 0, (("typing/printtyp.mli", 191, 8364, 8364), ("typing/printtyp.mli", 191, 8364, 8436), 0), 0, Tag1 ("Printtyp", 70)), 0); (("tree_of_cltype_declaration", 1099), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -150), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "class_type_declaration"), 0, (0)), 100000000, 0, -149), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "rec_status"), 0, (0)), 100000000, 0, -148), (Tag3 (Tag1 ((Tag2 ("Outcometree")), "out_sig_item"), 0, (0)), 100000000, 0, -147), 0), 100000000, 0, -146), 0), 100000000, 0, -145), 0), 100000000, 0, -144), 0, (("typing/printtyp.mli", 192, 8437, 8437), ("typing/printtyp.mli", 193, 8469, 8536), 0), 0, Tag1 ("Printtyp", 71)), 0); (("cltype_declaration", 1100), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -143), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -142), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "class_type_declaration"), 0, (0)), 100000000, 0, -141), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -140), 0), 100000000, 0, -139), 0), 100000000, 0, -138), 0), 100000000, 0, -137), 0, (("typing/printtyp.mli", 194, 8537, 8537), ("typing/printtyp.mli", 194, 8537, 8615), 0), 0, Tag1 ("Printtyp", 72)), 0); (("type_expansion", 1101), ((Tag1 (0, (Tag3 ((("type_or_scheme", 1092)), 0, (0)), 100000000, 0, -136), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -135), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Errortrace")), "expanded_type"), 0, (0)), 100000000, 0, -134), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -133), 0), 100000000, 0, -132), 0), 100000000, 0, -131), 0), 100000000, 0, -130), 0, (("typing/printtyp.mli", 195, 8616, 8616), ("typing/printtyp.mli", 196, 8637, 8709), 0), 0, Tag1 ("Printtyp", 74)), 0); (("prepare_expansion", 1102), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Errortrace")), "expanded_type"), 0, (0)), 100000000, 0, -129), (Tag3 (Tag1 ((Tag2 ("Errortrace")), "expanded_type"), 0, (0)), 100000000, 0, -128), 0), 100000000, 0, -127), 0, (("typing/printtyp.mli", 197, 8710, 8710), ("typing/printtyp.mli", 197, 8710, 8785), 0), 0, Tag1 ("Printtyp", 75)), 0); (("report_ambiguous_type_error", 1103), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -126), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -125), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -123); (Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -124)]), 100000000, 0, -122), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -120); (Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -121)]), 100000000, 0, -119)], (0)), 100000000, 0, -118), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -117), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -116), 0), 100000000, 0, -115), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -114), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -113), 0), 100000000, 0, -112), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -111), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -110), 0), 100000000, 0, -109), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), 0), 100000000, 0, -105), 0), 100000000, 0, -104), 0), 100000000, 0, -103), 0), 100000000, 0, -102), 0), 100000000, 0, -101), 0, (("typing/printtyp.mli", 198, 8786, 8786), ("typing/printtyp.mli", 200, 8892, 8969), 0), 0, Tag1 ("Printtyp", 76)), 0); (("report_unification_error", 1104), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -100), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -99), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Errortrace")), "unification_error"), 0, (0)), 100000000, 0, -98), (Tag1 (Tag1 ("type_expected_explanation"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -97), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -96), 0), 100000000, 0, -95)], (0)), 100000000, 0, -94), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -93), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -92), 0), 100000000, 0, -91), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -90), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -89), 0), 100000000, 0, -88), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -87), 0), 100000000, 0, -86), 0), 100000000, 0, -85), 0), 100000000, 0, -84), 0), 100000000, 0, -83), 0), 100000000, 0, -82), 0), 100000000, 0, -81), 0, (("typing/printtyp.mli", 202, 8971, 8971), ("typing/printtyp.mli", 207, 9160, 9166), 0), 0, Tag1 ("Printtyp", 77)), 0); (("report_equality_error", 1105), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -80), (Tag1 (0, (Tag3 ((("type_or_scheme", 1092)), 0, (0)), 100000000, 0, -79), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -78), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Errortrace")), "equality_error"), 0, (0)), 100000000, 0, -77), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -76), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -73), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -72), 0), 100000000, 0, -71), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0), 100000000, 0, -68), 0), 100000000, 0, -67), 0), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0, (("typing/printtyp.mli", 209, 9168, 9168), ("typing/printtyp.mli", 214, 9319, 9325), 0), 0, Tag1 ("Printtyp", 78)), 0); (("report_moregen_error", 1106), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -63), (Tag1 (0, (Tag3 ((("type_or_scheme", 1092)), 0, (0)), 100000000, 0, -62), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -61), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Errortrace")), "moregen_error"), 0, (0)), 100000000, 0, -60), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -59), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -56), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -55), 0), 100000000, 0, -54), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0), 100000000, 0, -50), 0), 100000000, 0, -49), 0), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("typing/printtyp.mli", 216, 9327, 9327), ("typing/printtyp.mli", 221, 9476, 9482), 0), 0, Tag1 ("Printtyp", 79)), 0); (("report_comparison_error", 1107), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -46), (Tag1 (0, (Tag3 ((("type_or_scheme", 1092)), 0, (0)), 100000000, 0, -45), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -44), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Errortrace")), "comparison_error"), 0, (0)), 100000000, 0, -43), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -42), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -39), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -38), 0), 100000000, 0, -37), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("typing/printtyp.mli", 223, 9484, 9484), ("typing/printtyp.mli", 228, 9639, 9645), 0), 0, Tag1 ("Printtyp", 80)), 0); Tag3 (("Subtype", 1108), 0, (Tag1 ([(("report_error", 1121), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -459), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -458), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Errortrace")), "Subtype"), "error"), 0, (0)), 100000000, 0, -457), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -456), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -455), 0), 100000000, 0, -454), 0), 100000000, 0, -453), 0), 100000000, 0, -452), 0), 100000000, 0, -451), 0, (("typing/printtyp.mli", 231, 9668, 9670), ("typing/printtyp.mli", 236, 9765, 9773), 0), 0, Tag1 ("Printtyp", 81)), 0)]), 0, (("typing/printtyp.mli", 230, 9647, 9647), ("typing/printtyp.mli", 237, 9774, 9777), 0), Tag1 ("Printtyp", 82)), 0, 0); (("print_items", 1109), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -29), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "signature_item"), 0, (0)), 100000000, 0, -28), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -21)], (0)), 100000000, 0, -27), 0), 100000000, 0, -26), 0), 100000000, 0, -25), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -24), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Types")), "signature_item"), 0, (0)), 100000000, 0, -23)], (0)), 100000000, 0, -22), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Outcometree")), "out_sig_item"), 0, (0)), 100000000, 0, -19); (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -21)], (0)), 100000000, 0, -20)]), 100000000, 0, -18)], (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("typing/printtyp.mli", 240, 9797, 9797), ("typing/printtyp.mli", 241, 9856, 9921), 0), 0, Tag1 ("Printtyp", 83)), 0); (("rewrite_double_underscore_paths", 1110), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -12), (Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("typing/printtyp.mli", 245, 10059, 10059), ("typing/printtyp.mli", 245, 10059, 10121), 0), 0, Tag1 ("Printtyp", 84)), 0); (("printed_signature", 1111), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "signature"), 0, (0)), 100000000, 0, -6), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("typing/printtyp.mli", 249, 10257, 10257), ("typing/printtyp.mli", 249, 10257, 10320), 0), 0, Tag1 ("Printtyp", 85)), 0)], "Printtyp", [("Printtyp", ("z\016\208<\1368O_B\131~\175\250*\233\176")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Subst", ("\021\031\148\223\127\186\189\135\027}\145r\216\143\177\156")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Load_path", ("\012@\228l\230\164S\172h\1726X\020\252o}")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("Errortrace", ("\238\196yV6<x\\\13126\144\141\000~\145")); ("Env", ("\021\n\181\142x\b\169j\227\"\017\248*\178\245\223")); ("Cmi_format", ("6\177\bU\139\"\023\152=\249\135\174\b\011Cg")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216"))], [(0)])
val printed_signature : string -> Format.formatter -> Types.signature -> unit
