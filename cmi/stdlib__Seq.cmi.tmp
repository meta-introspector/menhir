type 'a t = unit -> 'a node
and 'a node = Nil | Cons of 'a * 'a t
val is_empty : 'a t -> bool
val uncons : 'a t -> ('a * 'a t) option
val length : 'a t -> int
val iter : ('a -> unit) -> 'a t -> unit
val fold_left : ('acc -> 'a -> 'acc) -> 'acc -> 'a t -> 'acc
val iteri : (int -> 'a -> unit) -> 'a t -> unit
val fold_lefti : ('acc -> int -> 'a -> 'acc) -> 'acc -> 'a t -> 'acc
val for_all : ('a -> bool) -> 'a t -> bool
val exists : ('a -> bool) -> 'a t -> bool
val find : ('a -> bool) -> 'a t -> 'a option
val find_index : ('a -> bool) -> 'a t -> int option
val find_map : ('a -> 'b option) -> 'a t -> 'b option
val find_mapi : (int -> 'a -> 'b option) -> 'a t -> 'b option
val iter2 : ('a -> 'b -> unit) -> 'a t -> 'b t -> unit
val fold_left2 : ('acc -> 'a -> 'b -> 'acc) -> 'acc -> 'a t -> 'b t -> 'acc
val for_all2 : ('a -> 'b -> bool) -> 'a t -> 'b t -> bool
val exists2 : ('a -> 'b -> bool) -> 'a t -> 'b t -> bool
val equal : ('a -> 'b -> bool) -> 'a t -> 'b t -> bool
val compare : ('a -> 'b -> int) -> 'a t -> 'b t -> int
val empty : 'a t
val return : 'a -> 'a t
val cons : 'a -> 'a t -> 'a t
val init : int -> (int -> 'a) -> 'a t
val unfold : ('b -> ('a * 'b) option) -> 'b -> 'a t
val repeat : 'a -> 'a t
val forever : (unit -> 'a) -> 'a t
val cycle : 'a t -> 'a t
val iterate : ('a -> 'a) -> 'a -> 'a t
val map : ('a -> 'b) -> 'a t -> 'b t
val mapi : (int -> 'a -> 'b) -> 'a t -> 'b t
val filter : ('a -> bool) -> 'a t -> 'a t
val filter_map : ('a -> 'b option) -> 'a t -> 'b t
val scan : ('b -> 'a -> 'b) -> 'b -> 'a t -> 'b t
val take : int -> 'a t -> 'a t
val drop : int -> 'a t -> 'a t
val take_while : ('a -> bool) -> 'a t -> 'a t
val drop_while : ('a -> bool) -> 'a t -> 'a t
val group : ('a -> 'a -> bool) -> 'a t -> 'a t t
val memoize : 'a t -> 'a t
exception Forced_twice
val once : 'a t -> 'a t
val transpose : 'a t t -> 'a t t
val append : 'a t -> 'a t -> 'a t
val concat : 'a t t -> 'a t
val flat_map : ('a -> 'b t) -> 'a t -> 'b t
val concat_map : ('a -> 'b t) -> 'a t -> 'b t
val zip : 'a t -> 'b t -> ('a * 'b) t
val map2 : ('a -> 'b -> 'c) -> 'a t -> 'b t -> 'c t
val interleave : 'a t -> 'a t -> 'a t
val sorted_merge : ('a -> 'a -> int) -> 'a t -> 'a t -> 'a t
val product : 'a t -> 'b t -> ('a * 'b) t
val map_product : ('a -> 'b -> 'c) -> 'a t -> 'b t -> 'c t
val unzip : ('a * 'b) t -> 'a t * 'b t
val split : ('a * 'b) t -> 'a t * 'b t
val partition_map : ('a -> ('b, 'c) Either.t) -> 'a t -> 'b t * 'c t
val partition : ('a -> bool) -> 'a t -> 'a t * 'a t
val of_dispenser : (unit -> 'a option) -> 'a t
val to_dispenser : 'a t -> unit -> 'a option("DEBUG:rule", [Tag1 (("t", 362), ([((("a")), 100000000, 0, -432)], 1, 0, 1, ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -433), (Tag3 ((("node", 363)), [((("a")), 100000000, 0, -432)], (0)), 100000000, 0, -431), 0), 100000000, 0, -430)), [25], [0], 0, 0, (("seq.mli", 90, 4787, 4787), ("seq.mli", 90, 4787, 4814), 0), 0, 0, 0, Tag1 ("Stdlib__Seq", 0)), 1, 0); Tag1 (("node", 363), ([((("a")), 100000000, 0, -428)], 1, Tag1 ([(("Nil", 271), (0), 0, (("seq.mli", 98, 5172, 5174), ("seq.mli", 98, 5172, 5179), 0), 0, Tag1 ("Stdlib__Seq", 2)); (("Cons", 272), ([((("a")), 100000000, 0, -428); (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -428)], (0)), 100000000, 0, -429)]), 0, (("seq.mli", 99, 5180, 5182), ("seq.mli", 99, 5180, 5201), 0), 0, Tag1 ("Stdlib__Seq", 3))], 0), 1, 0, [25], [0], 0, 0, (("seq.mli", 97, 5157, 5157), ("seq.mli", 99, 5180, 5201), 0), 0, 0, 0, Tag1 ("Stdlib__Seq", 1)), 2, 0); (("is_empty", 364), ((Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -427)], (0)), 100000000, 0, -426), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -425), 0), 100000000, 0, -424), 0, (("seq.mli", 132, 6723, 6723), ("seq.mli", 132, 6723, 6750), 0), 0, Tag1 ("Stdlib__Seq", 4)), 0); (("uncons", 365), ((Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -421)], (0)), 100000000, 0, -423), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([((("a")), 100000000, 0, -421); (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -421)], (0)), 100000000, 0, -422)]), 100000000, 0, -420)], (0)), 100000000, 0, -419), 0), 100000000, 0, -418), 0, (("seq.mli", 142, 7083, 7083), ("seq.mli", 142, 7083, 7122), 0), 0, Tag1 ("Stdlib__Seq", 5)), 0); (("length", 366), ((Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -417)], (0)), 100000000, 0, -416), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -415), 0), 100000000, 0, -414), 0, (("seq.mli", 150, 7316, 7316), ("seq.mli", 150, 7316, 7340), 0), 0, Tag1 ("Stdlib__Seq", 6)), 0); (("iter", 367), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -411), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -413), 0), 100000000, 0, -412), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -411)], (0)), 100000000, 0, -410), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -409), 0), 100000000, 0, -408), 0), 100000000, 0, -407), 0, (("seq.mli", 157, 7453, 7453), ("seq.mli", 157, 7453, 7492), 0), 0, Tag1 ("Stdlib__Seq", 7)), 0); (("fold_left", 368), ((Tag1 (0, (Tag1 (0, ((("acc")), 100000000, 0, -402), (Tag1 (0, ((("a")), 100000000, 0, -404), ((("acc")), 100000000, 0, -402), 0), 100000000, 0, -406), 0), 100000000, 0, -405), (Tag1 (0, ((("acc")), 100000000, 0, -402), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -404)], (0)), 100000000, 0, -403), ((("acc")), 100000000, 0, -402), 0), 100000000, 0, -401), 0), 100000000, 0, -400), 0), 100000000, 0, -399), 0, (("seq.mli", 164, 7668, 7668), ("seq.mli", 164, 7668, 7728), 0), 0, Tag1 ("Stdlib__Seq", 8)), 0); (("iteri", 369), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -398), (Tag1 (0, ((("a")), 100000000, 0, -394), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -397), 0), 100000000, 0, -396), 0), 100000000, 0, -395), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -394)], (0)), 100000000, 0, -393), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -392), 0), 100000000, 0, -391), 0), 100000000, 0, -390), 0, (("seq.mli", 173, 7984, 7984), ("seq.mli", 173, 7984, 8031), 0), 0, Tag1 ("Stdlib__Seq", 9)), 0); (("fold_lefti", 370), ((Tag1 (0, (Tag1 (0, ((("acc")), 100000000, 0, -383), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -389), (Tag1 (0, ((("a")), 100000000, 0, -385), ((("acc")), 100000000, 0, -383), 0), 100000000, 0, -388), 0), 100000000, 0, -387), 0), 100000000, 0, -386), (Tag1 (0, ((("acc")), 100000000, 0, -383), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -385)], (0)), 100000000, 0, -384), ((("acc")), 100000000, 0, -383), 0), 100000000, 0, -382), 0), 100000000, 0, -381), 0), 100000000, 0, -380), 0, (("seq.mli", 184, 8311, 8311), ("seq.mli", 184, 8311, 8379), 0), 0, Tag1 ("Stdlib__Seq", 10)), 0); (("for_all", 371), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -377), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -379), 0), 100000000, 0, -378), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -377)], (0)), 100000000, 0, -376), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -375), 0), 100000000, 0, -374), 0), 100000000, 0, -373), 0, (("seq.mli", 197, 8769, 8769), ("seq.mli", 197, 8769, 8811), 0), 0, Tag1 ("Stdlib__Seq", 11)), 0); (("exists", 372), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -370), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -372), 0), 100000000, 0, -371), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -370)], (0)), 100000000, 0, -369), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -368), 0), 100000000, 0, -367), 0), 100000000, 0, -366), 0, (("seq.mli", 205, 8967, 8967), ("seq.mli", 205, 8967, 9008), 0), 0, Tag1 ("Stdlib__Seq", 12)), 0); (("find", 373), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -362), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -365), 0), 100000000, 0, -364), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -362)], (0)), 100000000, 0, -363), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -362)], (0)), 100000000, 0, -361), 0), 100000000, 0, -360), 0), 100000000, 0, -359), 0, (("seq.mli", 213, 9173, 9173), ("seq.mli", 213, 9173, 9217), 0), 0, Tag1 ("Stdlib__Seq", 13)), 0); (("find_index", 374), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -356), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -358), 0), 100000000, 0, -357), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -356)], (0)), 100000000, 0, -355), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -354)], (0)), 100000000, 0, -353), 0), 100000000, 0, -352), 0), 100000000, 0, -351), 0, (("seq.mli", 223, 9471, 9471), ("seq.mli", 223, 9471, 9522), 0), 0, Tag1 ("Stdlib__Seq", 14)), 0); (("find_map", 375), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -348), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -346)], (0)), 100000000, 0, -350), 0), 100000000, 0, -349), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -348)], (0)), 100000000, 0, -347), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -346)], (0)), 100000000, 0, -345), 0), 100000000, 0, -344), 0), 100000000, 0, -343), 0, (("seq.mli", 234, 9798, 9798), ("seq.mli", 234, 9798, 9851), 0), 0, Tag1 ("Stdlib__Seq", 15)), 0); (("find_mapi", 376), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -342), (Tag1 (0, ((("a")), 100000000, 0, -338), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -336)], (0)), 100000000, 0, -341), 0), 100000000, 0, -340), 0), 100000000, 0, -339), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -338)], (0)), 100000000, 0, -337), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -336)], (0)), 100000000, 0, -335), 0), 100000000, 0, -334), 0), 100000000, 0, -333), 0, (("seq.mli", 245, 10161, 10161), ("seq.mli", 245, 10161, 10222), 0), 0, Tag1 ("Stdlib__Seq", 16)), 0); (("iter2", 377), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -329), (Tag1 (0, ((("b")), 100000000, 0, -327), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -332), 0), 100000000, 0, -331), 0), 100000000, 0, -330), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -329)], (0)), 100000000, 0, -328), (Tag1 (0, (Tag3 ((("t", 362)), [((("b")), 100000000, 0, -327)], (0)), 100000000, 0, -326), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -325), 0), 100000000, 0, -324), 0), 100000000, 0, -323), 0), 100000000, 0, -322), 0, (("seq.mli", 254, 10447, 10447), ("seq.mli", 254, 10447, 10501), 0), 0, Tag1 ("Stdlib__Seq", 17)), 0); (("fold_left2", 378), ((Tag1 (0, (Tag1 (0, ((("acc")), 100000000, 0, -314), (Tag1 (0, ((("a")), 100000000, 0, -318), (Tag1 (0, ((("b")), 100000000, 0, -316), ((("acc")), 100000000, 0, -314), 0), 100000000, 0, -321), 0), 100000000, 0, -320), 0), 100000000, 0, -319), (Tag1 (0, ((("acc")), 100000000, 0, -314), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -318)], (0)), 100000000, 0, -317), (Tag1 (0, (Tag3 ((("t", 362)), [((("b")), 100000000, 0, -316)], (0)), 100000000, 0, -315), ((("acc")), 100000000, 0, -314), 0), 100000000, 0, -313), 0), 100000000, 0, -312), 0), 100000000, 0, -311), 0), 100000000, 0, -310), 0, (("seq.mli", 270, 11025, 11025), ("seq.mli", 270, 11025, 11100), 0), 0, Tag1 ("Stdlib__Seq", 18)), 0); (("for_all2", 379), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -306), (Tag1 (0, ((("b")), 100000000, 0, -304), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -309), 0), 100000000, 0, -308), 0), 100000000, 0, -307), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -306)], (0)), 100000000, 0, -305), (Tag1 (0, (Tag3 ((("t", 362)), [((("b")), 100000000, 0, -304)], (0)), 100000000, 0, -303), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -302), 0), 100000000, 0, -301), 0), 100000000, 0, -300), 0), 100000000, 0, -299), 0, (("seq.mli", 289, 11733, 11733), ("seq.mli", 289, 11733, 11790), 0), 0, Tag1 ("Stdlib__Seq", 19)), 0); (("exists2", 380), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -295), (Tag1 (0, ((("b")), 100000000, 0, -293), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -298), 0), 100000000, 0, -297), 0), 100000000, 0, -296), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -295)], (0)), 100000000, 0, -294), (Tag1 (0, (Tag3 ((("t", 362)), [((("b")), 100000000, 0, -293)], (0)), 100000000, 0, -292), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -291), 0), 100000000, 0, -290), 0), 100000000, 0, -289), 0), 100000000, 0, -288), 0, (("seq.mli", 307, 12494, 12494), ("seq.mli", 307, 12494, 12550), 0), 0, Tag1 ("Stdlib__Seq", 20)), 0); (("equal", 381), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -284), (Tag1 (0, ((("b")), 100000000, 0, -282), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -287), 0), 100000000, 0, -286), 0), 100000000, 0, -285), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -284)], (0)), 100000000, 0, -283), (Tag1 (0, (Tag3 ((("t", 362)), [((("b")), 100000000, 0, -282)], (0)), 100000000, 0, -281), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -280), 0), 100000000, 0, -279), 0), 100000000, 0, -278), 0), 100000000, 0, -277), 0, (("seq.mli", 321, 13049, 13049), ("seq.mli", 321, 13049, 13103), 0), 0, Tag1 ("Stdlib__Seq", 21)), 0); (("compare", 382), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -273), (Tag1 (0, ((("b")), 100000000, 0, -271), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -276), 0), 100000000, 0, -275), 0), 100000000, 0, -274), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -273)], (0)), 100000000, 0, -272), (Tag1 (0, (Tag3 ((("t", 362)), [((("b")), 100000000, 0, -271)], (0)), 100000000, 0, -270), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -269), 0), 100000000, 0, -268), 0), 100000000, 0, -267), 0), 100000000, 0, -266), 0, (("seq.mli", 330, 13347, 13347), ("seq.mli", 330, 13347, 13401), 0), 0, Tag1 ("Stdlib__Seq", 22)), 0); (("empty", 383), ((Tag3 ((("t", 362)), [((("a")), 100000000, 0, -265)], (0)), 100000000, 0, -264), 0, (("seq.mli", 346, 13890, 13890), ("seq.mli", 346, 13890, 13906), 0), 0, Tag1 ("Stdlib__Seq", 23)), 0); (("return", 384), ((Tag1 (0, ((("a")), 100000000, 0, -263), (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -263)], (0)), 100000000, 0, -262), 0), 100000000, 0, -261), 0, (("seq.mli", 350, 13987, 13987), ("seq.mli", 350, 13987, 14010), 0), 0, Tag1 ("Stdlib__Seq", 24)), 0); (("cons", 385), ((Tag1 (0, ((("a")), 100000000, 0, -259), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -259)], (0)), 100000000, 0, -260), (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -259)], (0)), 100000000, 0, -258), 0), 100000000, 0, -257), 0), 100000000, 0, -256), 0, (("seq.mli", 354, 14094, 14094), ("seq.mli", 354, 14094, 14123), 0), 0, Tag1 ("Stdlib__Seq", 25)), 0); (("init", 386), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -255), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -254), ((("a")), 100000000, 0, -252), 0), 100000000, 0, -253), (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -252)], (0)), 100000000, 0, -251), 0), 100000000, 0, -250), 0), 100000000, 0, -249), 0, (("seq.mli", 365, 14458, 14458), ("seq.mli", 365, 14458, 14495), 0), 0, Tag1 ("Stdlib__Seq", 26)), 0); (("unfold", 387), ((Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -245), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([((("a")), 100000000, 0, -244); ((("b")), 100000000, 0, -245)]), 100000000, 0, -248)], (0)), 100000000, 0, -247), 0), 100000000, 0, -246), (Tag1 (0, ((("b")), 100000000, 0, -245), (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -244)], (0)), 100000000, 0, -243), 0), 100000000, 0, -242), 0), 100000000, 0, -241), 0, (("seq.mli", 377, 14748, 14748), ("seq.mli", 377, 14748, 14799), 0), 0, Tag1 ("Stdlib__Seq", 27)), 0); (("repeat", 388), ((Tag1 (0, ((("a")), 100000000, 0, -240), (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -240)], (0)), 100000000, 0, -239), 0), 100000000, 0, -238), 0, (("seq.mli", 391, 15189, 15189), ("seq.mli", 391, 15189, 15212), 0), 0, Tag1 ("Stdlib__Seq", 28)), 0); (("forever", 389), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -237), ((("a")), 100000000, 0, -235), 0), 100000000, 0, -236), (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -235)], (0)), 100000000, 0, -234), 0), 100000000, 0, -233), 0, (("seq.mli", 399, 15379, 15379), ("seq.mli", 399, 15379, 15413), 0), 0, Tag1 ("Stdlib__Seq", 29)), 0); (("cycle", 390), ((Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -231)], (0)), 100000000, 0, -232), (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -231)], (0)), 100000000, 0, -230), 0), 100000000, 0, -229), 0, (("seq.mli", 410, 15691, 15691), ("seq.mli", 410, 15691, 15715), 0), 0, Tag1 ("Stdlib__Seq", 30)), 0); (("iterate", 391), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -227), ((("a")), 100000000, 0, -227), 0), 100000000, 0, -228), (Tag1 (0, ((("a")), 100000000, 0, -227), (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -227)], (0)), 100000000, 0, -226), 0), 100000000, 0, -225), 0), 100000000, 0, -224), 0, (("seq.mli", 423, 16088, 16088), ("seq.mli", 423, 16088, 16126), 0), 0, Tag1 ("Stdlib__Seq", 31)), 0); (("map", 392), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -222), ((("b")), 100000000, 0, -220), 0), 100000000, 0, -223), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -222)], (0)), 100000000, 0, -221), (Tag3 ((("t", 362)), [((("b")), 100000000, 0, -220)], (0)), 100000000, 0, -219), 0), 100000000, 0, -218), 0), 100000000, 0, -217), 0, (("seq.mli", 437, 16493, 16493), ("seq.mli", 437, 16493, 16529), 0), 0, Tag1 ("Stdlib__Seq", 32)), 0); (("mapi", 393), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -216), (Tag1 (0, ((("a")), 100000000, 0, -213), ((("b")), 100000000, 0, -211), 0), 100000000, 0, -215), 0), 100000000, 0, -214), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -213)], (0)), 100000000, 0, -212), (Tag3 ((("t", 362)), [((("b")), 100000000, 0, -211)], (0)), 100000000, 0, -210), 0), 100000000, 0, -209), 0), 100000000, 0, -208), 0, (("seq.mli", 444, 16717, 16717), ("seq.mli", 444, 16717, 16761), 0), 0, Tag1 ("Stdlib__Seq", 33)), 0); (("filter", 394), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -204), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -207), 0), 100000000, 0, -206), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -204)], (0)), 100000000, 0, -205), (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -204)], (0)), 100000000, 0, -203), 0), 100000000, 0, -202), 0), 100000000, 0, -201), 0, (("seq.mli", 452, 16934, 16934), ("seq.mli", 452, 16934, 16975), 0), 0, Tag1 ("Stdlib__Seq", 34)), 0); (("filter_map", 395), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -198), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -196)], (0)), 100000000, 0, -200), 0), 100000000, 0, -199), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -198)], (0)), 100000000, 0, -197), (Tag3 ((("t", 362)), [((("b")), 100000000, 0, -196)], (0)), 100000000, 0, -195), 0), 100000000, 0, -194), 0), 100000000, 0, -193), 0, (("seq.mli", 459, 17182, 17182), ("seq.mli", 459, 17182, 17232), 0), 0, Tag1 ("Stdlib__Seq", 35)), 0); (("scan", 396), ((Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -188), (Tag1 (0, ((("a")), 100000000, 0, -190), ((("b")), 100000000, 0, -188), 0), 100000000, 0, -192), 0), 100000000, 0, -191), (Tag1 (0, ((("b")), 100000000, 0, -188), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -190)], (0)), 100000000, 0, -189), (Tag3 ((("t", 362)), [((("b")), 100000000, 0, -188)], (0)), 100000000, 0, -187), 0), 100000000, 0, -186), 0), 100000000, 0, -185), 0), 100000000, 0, -184), 0, (("seq.mli", 466, 17450, 17450), ("seq.mli", 466, 17450, 17499), 0), 0, Tag1 ("Stdlib__Seq", 36)), 0); (("take", 397), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -183), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -181)], (0)), 100000000, 0, -182), (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -181)], (0)), 100000000, 0, -180), 0), 100000000, 0, -179), 0), 100000000, 0, -178), 0, (("seq.mli", 485, 18108, 18108), ("seq.mli", 485, 18108, 18138), 0), 0, Tag1 ("Stdlib__Seq", 37)), 0); (("drop", 398), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -177), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -175)], (0)), 100000000, 0, -176), (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -175)], (0)), 100000000, 0, -174), 0), 100000000, 0, -173), 0), 100000000, 0, -172), 0, (("seq.mli", 497, 18392, 18392), ("seq.mli", 497, 18392, 18422), 0), 0, Tag1 ("Stdlib__Seq", 38)), 0); (("take_while", 399), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -168), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -171), 0), 100000000, 0, -170), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -168)], (0)), 100000000, 0, -169), (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -168)], (0)), 100000000, 0, -167), 0), 100000000, 0, -166), 0), 100000000, 0, -165), 0, (("seq.mli", 514, 18915, 18915), ("seq.mli", 514, 18915, 18960), 0), 0, Tag1 ("Stdlib__Seq", 39)), 0); (("drop_while", 400), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -161), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -164), 0), 100000000, 0, -163), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -161)], (0)), 100000000, 0, -162), (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -161)], (0)), 100000000, 0, -160), 0), 100000000, 0, -159), 0), 100000000, 0, -158), 0, (("seq.mli", 520, 19092, 19092), ("seq.mli", 520, 19092, 19137), 0), 0, Tag1 ("Stdlib__Seq", 40)), 0); (("group", 401), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -153), (Tag1 (0, ((("a")), 100000000, 0, -153), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -157), 0), 100000000, 0, -156), 0), 100000000, 0, -155), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -153)], (0)), 100000000, 0, -154), (Tag3 ((("t", 362)), [(Tag3 ((("t", 362)), [((("a")), 100000000, 0, -153)], (0)), 100000000, 0, -152)], (0)), 100000000, 0, -151), 0), 100000000, 0, -150), 0), 100000000, 0, -149), 0, (("seq.mli", 526, 19249, 19249), ("seq.mli", 526, 19249, 19297), 0), 0, Tag1 ("Stdlib__Seq", 41)), 0); (("memoize", 402), ((Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -147)], (0)), 100000000, 0, -148), (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -147)], (0)), 100000000, 0, -146), 0), 100000000, 0, -145), 0, (("seq.mli", 541, 19802, 19802), ("seq.mli", 541, 19802, 19828), 0), 0, Tag1 ("Stdlib__Seq", 42)), 0); Tag2 (("Forced_twice", 403), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Stdlib__Seq", 43)), 2, 0); (("once", 404), ((Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -143)], (0)), 100000000, 0, -144), (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -143)], (0)), 100000000, 0, -142), 0), 100000000, 0, -141), 0, (("seq.mli", 561, 20513, 20513), ("seq.mli", 561, 20513, 20536), 0), 0, Tag1 ("Stdlib__Seq", 44)), 0); (("transpose", 405), ((Tag1 (0, (Tag3 ((("t", 362)), [(Tag3 ((("t", 362)), [((("a")), 100000000, 0, -138)], (0)), 100000000, 0, -140)], (0)), 100000000, 0, -139), (Tag3 ((("t", 362)), [(Tag3 ((("t", 362)), [((("a")), 100000000, 0, -138)], (0)), 100000000, 0, -137)], (0)), 100000000, 0, -136), 0), 100000000, 0, -135), 0, (("seq.mli", 575, 21067, 21067), ("seq.mli", 575, 21067, 21099), 0), 0, Tag1 ("Stdlib__Seq", 45)), 0); (("append", 406), ((Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -132)], (0)), 100000000, 0, -134), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -132)], (0)), 100000000, 0, -133), (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -132)], (0)), 100000000, 0, -131), 0), 100000000, 0, -130), 0), 100000000, 0, -129), 0, (("seq.mli", 589, 21469, 21469), ("seq.mli", 589, 21469, 21502), 0), 0, Tag1 ("Stdlib__Seq", 46)), 0); (("concat", 407), ((Tag1 (0, (Tag3 ((("t", 362)), [(Tag3 ((("t", 362)), [((("a")), 100000000, 0, -126)], (0)), 100000000, 0, -128)], (0)), 100000000, 0, -127), (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -126)], (0)), 100000000, 0, -125), 0), 100000000, 0, -124), 0, (("seq.mli", 596, 21674, 21674), ("seq.mli", 596, 21674, 21701), 0), 0, Tag1 ("Stdlib__Seq", 47)), 0); (("flat_map", 408), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -121), (Tag3 ((("t", 362)), [((("b")), 100000000, 0, -119)], (0)), 100000000, 0, -123), 0), 100000000, 0, -122), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -121)], (0)), 100000000, 0, -120), (Tag3 ((("t", 362)), [((("b")), 100000000, 0, -119)], (0)), 100000000, 0, -118), 0), 100000000, 0, -117), 0), 100000000, 0, -116), 0, (("seq.mli", 605, 21911, 21911), ("seq.mli", 605, 21911, 21954), 0), 0, Tag1 ("Stdlib__Seq", 48)), 0); (("concat_map", 409), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -113), (Tag3 ((("t", 362)), [((("b")), 100000000, 0, -111)], (0)), 100000000, 0, -115), 0), 100000000, 0, -114), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -113)], (0)), 100000000, 0, -112), (Tag3 ((("t", 362)), [((("b")), 100000000, 0, -111)], (0)), 100000000, 0, -110), 0), 100000000, 0, -109), 0), 100000000, 0, -108), 0, (("seq.mli", 608, 22017, 22017), ("seq.mli", 608, 22017, 22062), 0), 0, Tag1 ("Stdlib__Seq", 49)), 0); (("zip", 410), ((Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -104)], (0)), 100000000, 0, -107), (Tag1 (0, (Tag3 ((("t", 362)), [((("b")), 100000000, 0, -105)], (0)), 100000000, 0, -106), (Tag3 ((("t", 362)), [(Tag2 ([((("a")), 100000000, 0, -104); ((("b")), 100000000, 0, -105)]), 100000000, 0, -103)], (0)), 100000000, 0, -102), 0), 100000000, 0, -101), 0), 100000000, 0, -100), 0, (("seq.mli", 615, 22190, 22190), ("seq.mli", 615, 22190, 22227), 0), 0, Tag1 ("Stdlib__Seq", 50)), 0); (("map2", 411), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -97), (Tag1 (0, ((("b")), 100000000, 0, -95), ((("c")), 100000000, 0, -93), 0), 100000000, 0, -99), 0), 100000000, 0, -98), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -97)], (0)), 100000000, 0, -96), (Tag1 (0, (Tag3 ((("t", 362)), [((("b")), 100000000, 0, -95)], (0)), 100000000, 0, -94), (Tag3 ((("t", 362)), [((("c")), 100000000, 0, -93)], (0)), 100000000, 0, -92), 0), 100000000, 0, -91), 0), 100000000, 0, -90), 0), 100000000, 0, -89), 0, (("seq.mli", 627, 22609, 22609), ("seq.mli", 627, 22609, 22660), 0), 0, Tag1 ("Stdlib__Seq", 51)), 0); (("interleave", 412), ((Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -86)], (0)), 100000000, 0, -88), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -86)], (0)), 100000000, 0, -87), (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -86)], (0)), 100000000, 0, -85), 0), 100000000, 0, -84), 0), 100000000, 0, -83), 0, (("seq.mli", 640, 23095, 23095), ("seq.mli", 640, 23095, 23132), 0), 0, Tag1 ("Stdlib__Seq", 52)), 0); (("sorted_merge", 413), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -77), (Tag1 (0, ((("a")), 100000000, 0, -77), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -82), 0), 100000000, 0, -81), 0), 100000000, 0, -80), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -77)], (0)), 100000000, 0, -79), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -77)], (0)), 100000000, 0, -78), (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -77)], (0)), 100000000, 0, -76), 0), 100000000, 0, -75), 0), 100000000, 0, -74), 0), 100000000, 0, -73), 0, (("seq.mli", 649, 23423, 23423), ("seq.mli", 649, 23423, 23483), 0), 0, Tag1 ("Stdlib__Seq", 53)), 0); (("product", 414), ((Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -69)], (0)), 100000000, 0, -72), (Tag1 (0, (Tag3 ((("t", 362)), [((("b")), 100000000, 0, -70)], (0)), 100000000, 0, -71), (Tag3 ((("t", 362)), [(Tag2 ([((("a")), 100000000, 0, -69); ((("b")), 100000000, 0, -70)]), 100000000, 0, -68)], (0)), 100000000, 0, -67), 0), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("seq.mli", 658, 23766, 23766), ("seq.mli", 658, 23766, 23807), 0), 0, Tag1 ("Stdlib__Seq", 54)), 0); (("map_product", 415), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -62), (Tag1 (0, ((("b")), 100000000, 0, -60), ((("c")), 100000000, 0, -58), 0), 100000000, 0, -64), 0), 100000000, 0, -63), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -62)], (0)), 100000000, 0, -61), (Tag1 (0, (Tag3 ((("t", 362)), [((("b")), 100000000, 0, -60)], (0)), 100000000, 0, -59), (Tag3 ((("t", 362)), [((("c")), 100000000, 0, -58)], (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0), 100000000, 0, -55), 0), 100000000, 0, -54), 0, (("seq.mli", 672, 24219, 24219), ("seq.mli", 672, 24219, 24277), 0), 0, Tag1 ("Stdlib__Seq", 55)), 0); (("unzip", 416), ((Tag1 (0, (Tag3 ((("t", 362)), [(Tag2 ([((("a")), 100000000, 0, -49); ((("b")), 100000000, 0, -51)]), 100000000, 0, -53)], (0)), 100000000, 0, -52), (Tag2 ([(Tag3 ((("t", 362)), [((("a")), 100000000, 0, -49)], (0)), 100000000, 0, -48); (Tag3 ((("t", 362)), [((("b")), 100000000, 0, -51)], (0)), 100000000, 0, -50)]), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("seq.mli", 692, 24895, 24895), ("seq.mli", 692, 24895, 24933), 0), 0, Tag1 ("Stdlib__Seq", 56)), 0); (("split", 417), ((Tag1 (0, (Tag3 ((("t", 362)), [(Tag2 ([((("a")), 100000000, 0, -41); ((("b")), 100000000, 0, -43)]), 100000000, 0, -45)], (0)), 100000000, 0, -44), (Tag2 ([(Tag3 ((("t", 362)), [((("a")), 100000000, 0, -41)], (0)), 100000000, 0, -40); (Tag3 ((("t", 362)), [((("b")), 100000000, 0, -43)], (0)), 100000000, 0, -42)]), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("seq.mli", 706, 25351, 25351), ("seq.mli", 706, 25351, 25389), 0), 0, Tag1 ("Stdlib__Seq", 57)), 0); (("partition_map", 418), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -35), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Either"), "t"), [((("b")), 100000000, 0, -31); ((("c")), 100000000, 0, -33)], (0)), 100000000, 0, -37), 0), 100000000, 0, -36), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -35)], (0)), 100000000, 0, -34), (Tag2 ([(Tag3 ((("t", 362)), [((("b")), 100000000, 0, -31)], (0)), 100000000, 0, -30); (Tag3 ((("t", 362)), [((("c")), 100000000, 0, -33)], (0)), 100000000, 0, -32)]), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("seq.mli", 711, 25448, 25448), ("seq.mli", 711, 25448, 25516), 0), 0, Tag1 ("Stdlib__Seq", 58)), 0); (("partition", 419), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -22), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), (Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -22)], (0)), 100000000, 0, -24), (Tag2 ([(Tag3 ((("t", 362)), [((("a")), 100000000, 0, -22)], (0)), 100000000, 0, -21); (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -22)], (0)), 100000000, 0, -23)]), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("seq.mli", 733, 26262, 26262), ("seq.mli", 733, 26262, 26313), 0), 0, Tag1 ("Stdlib__Seq", 59)), 0); (("of_dispenser", 420), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -17), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -14)], (0)), 100000000, 0, -16), 0), 100000000, 0, -15), (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -14)], (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("seq.mli", 759, 27375, 27375), ("seq.mli", 759, 27375, 27421), 0), 0, Tag1 ("Stdlib__Seq", 60)), 0); (("to_dispenser", 421), ((Tag1 (0, (Tag3 ((("t", 362)), [((("a")), 100000000, 0, -9)], (0)), 100000000, 0, -11), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -9)], (0)), 100000000, 0, -8), 0), 100000000, 0, -7), 0), 100000000, 0, -6), 0, (("seq.mli", 767, 27672, 27672), ("seq.mli", 767, 27672, 27718), 0), 0, Tag1 ("Stdlib__Seq", 61)), 0); (("ints", 422), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -5), (Tag3 ((("t", 362)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -4)], (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("seq.mli", 778, 27986, 27986), ("seq.mli", 778, 27986, 28009), 0), 0, Tag1 ("Stdlib__Seq", 62)), 0)], "Stdlib__Seq", [("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val ints : int -> int t
