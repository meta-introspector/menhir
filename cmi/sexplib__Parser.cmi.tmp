type token = STRING of string | LPAREN | RPAREN | EOF | HASH_SEMI
val sexp : (Lexing.lexbuf -> token) -> Lexing.lexbuf -> Sexplib.Type.t
val sexp_opt :
  (Lexing.lexbuf -> token) -> Lexing.lexbuf -> Sexplib.Type.t option
val sexps : (Lexing.lexbuf -> token) -> Lexing.lexbuf -> Sexplib.Type.t list
val rev_sexps :
  ("DEBUG:rule", [Tag1 (("token", 321), (0, 0, Tag1 ([(("STRING", 287), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -33)]), 0, (("src/parser.mli", 2, 13, 15), ("src/parser.mli", 6, 87, 88), 0), 0, Tag1 ("Sexplib__Parser", 1)); (("LPAREN", 288), (0), 0, (("src/parser.mli", 7, 89, 91), ("src/parser.mli", 7, 89, 99), 0), 0, Tag1 ("Sexplib__Parser", 2)); (("RPAREN", 289), (0), 0, (("src/parser.mli", 8, 100, 102), ("src/parser.mli", 8, 100, 110), 0), 0, Tag1 ("Sexplib__Parser", 3)); (("EOF", 290), (0), 0, (("src/parser.mli", 9, 111, 113), ("src/parser.mli", 9, 111, 118), 0), 0, Tag1 ("Sexplib__Parser", 4)); (("HASH_SEMI", 291), (0), 0, (("src/parser.mli", 10, 119, 121), ("src/parser.mli", 10, 119, 132), 0), 0, Tag1 ("Sexplib__Parser", 5))], 0), 1, 0, 0, 0, 0, 0, (("src/parser.mli", 1, 0, 0), ("src/parser.mli", 10, 119, 132), 0), 0, 0, 0, Tag1 ("Sexplib__Parser", 0)), 1, 0); (("sexp", 322), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -32), (Tag3 ((("token", 321)), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -29), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Type"), "t"), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("src/parser.mli", 12, 134, 134), ("src/parser.mli", 13, 145, 199), 0), 0, Tag1 ("Sexplib__Parser", 6)), 0); (("sexp_opt", 323), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -25), (Tag3 ((("token", 321)), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -22), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Type"), "t"), 0, (0)), 100000000, 0, -21)], (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("src/parser.mli", 14, 200, 200), ("src/parser.mli", 15, 215, 276), 0), 0, Tag1 ("Sexplib__Parser", 7)), 0); (("sexps", 324), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -17), (Tag3 ((("token", 321)), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -14), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Type"), "t"), 0, (0)), 100000000, 0, -13)], (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("src/parser.mli", 16, 277, 277), ("src/parser.mli", 17, 289, 348), 0), 0, Tag1 ("Sexplib__Parser", 8)), 0); (("rev_sexps", 325), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -9), (Tag3 ((("token", 321)), 0, (0)), 100000000, 0, -8), 0), 100000000, 0, -7), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -6), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Type"), "t"), 0, (0)), 100000000, 0, -5)], (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/parser.mli", 18, 349, 349), ("src/parser.mli", 19, 365, 424), 0), 0, Tag1 ("Sexplib__Parser", 9)), 0)], "Sexplib__Parser", [("Sexplib__Parser", ("\203&3\188\178\148:\254\176\140\127\227\029jQL")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sexplib__Type", ("\147\252\252\167_\149\137\235\001d\241\255`\173Cs")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("Sexplib", ("\249\031\145\178\014\020\n\209\129\143\012\015<K\177\189")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
(Lexing.lexbuf -> token) -> Lexing.lexbuf -> Sexplib.Type.t list
