module type OrderedType = sig type t val compare : t -> t -> int end
module type S = Set.S
module Make :
  functor (M : OrderedType) ->
    sig
      type elt = M.t
      type t = Set.Make(M).t
      val empty : t
      val add : elt -> t -> t
      val singleton : elt -> t
      val remove : elt -> t -> t
      val union : t -> t -> t
      val inter : t -> t -> t
      val disjoint : t -> t -> bool
      val diff : t -> t -> t
      val cardinal : t -> int
      val elements : t -> elt list
      val min_elt : t -> elt
      val min_elt_opt : t -> elt option
      val max_elt : t -> elt
      val max_elt_opt : t -> elt option
      val choose : t -> elt
      val choose_opt : t -> elt option
      val find : elt -> t -> elt
      val find_opt : elt -> t -> elt option
      val find_first : (elt -> bool) -> t -> elt
      val find_first_opt : (elt -> bool) -> t -> elt option
      val find_last : (elt -> bool) -> t -> elt
      val find_last_opt : (elt -> bool) -> t -> elt option
      val iter : (elt -> unit) -> t -> unit
      val fold : (elt -> 'acc -> 'acc) -> t -> 'acc -> 'acc
      val map : (elt -> elt) -> t -> t
      val filter : (elt -> bool) -> t -> t
      val filter_map : (elt -> elt option) -> t -> t
      val partition : (elt -> bool) -> t -> t * t
      val split : elt -> t -> t * bool * t
      val is_empty : t -> bool
      val mem : elt -> t -> bool
      val equal : t -> t -> bool
      val compare : t -> t -> int
      val subset : t -> t -> bool
      val for_all : (elt -> bool) -> t -> bool
      val exists : (elt -> bool) -> t -> bool
      val to_list : t -> elt list
      val of_list : elt list -> t
      val to_seq_from : elt -> t -> elt Seq.t
      val to_seq : t -> elt Seq.t
      val to_rev_seq : t -> elt Seq.t
      val add_seq : elt Seq.t -> t -> t
      val of_seq : elt Seq.t -> t
    end
module type HashedType = sig type t val hash : t -> int end
module Hashcons :
  functor (M : OrderedType) (H : sig type t = M.t val hash : t -> int end) ->
    sig
      type t = Set.Make(M).t
      type u = M.t -> M.t
      type table
      val generate : u -> table
      val hcons : table -> t -> t
      val stats : table -> Hashset.statistics("DEBUG:rule", [Tag4 (("OrderedType", 858), ((Tag1 ([Tag1 (("t", 866), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("clib/cSet.mli", 13, 706, 708), ("clib/cSet.mli", 13, 706, 714), 0), 0, 0, 0, Tag1 ("CSet", 0)), 1, 0); (("compare", 867), ((Tag1 (0, (Tag3 ((("t", 866)), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((("t", 866)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("clib/cSet.mli", 14, 715, 717), ("clib/cSet.mli", 14, 715, 744), 0), 0, Tag1 ("CSet", 1)), 0)])), 0, (("clib/cSet.mli", 11, 676, 676), ("clib/cSet.mli", 15, 745, 748), 0), Tag1 ("CSet", 2)), 0); Tag4 (("S", 859), (((Tag1 (Tag1 ((Tag2 ("Stdlib")), "Set"), "S"))), 0, (("clib/cSet.mli", 17, 750, 750), ("clib/cSet.mli", 17, 750, 771), 0), Tag1 ("CSet", 3)), 0); Tag3 (("Make", 860), 0, (Tag2 (((("M", 865)), ((("OrderedType", 858)))), Tag1 ([Tag1 (("elt", 868), (0, 0, 0, 1, ((Tag3 (Tag1 ((("M", 865)), "t"), 0, (0)), 100000000, 0, -234)), 0, 0, 0, 0, (("clib/cSet.mli", 20, 806, 813), ("clib/cSet.mli", 20, 806, 827), 0), 0, 0, 0, Tag1 ("CSet", 5)), 1, 0); Tag1 (("t", 869), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag2 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Set"), "Make"), (("M", 865))), "t"), 0, (0)), 100000000, 0, -233)), 0, 0, 0, 0, (("clib/cSet.mli", 21, 828, 834), ("clib/cSet.mli", 21, 828, 856), 0), 0, 0, 0, Tag1 ("CSet", 6)), 1, 0); (("empty", 870), ((Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -232), 0, (("set.mli", 77, 2942, 2946), ("set.mli", 77, 2942, 2958), 0), 0, Tag1 ("Stdlib__Set", 5)), 0); (("add", 871), ((Tag1 (0, (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -231), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -230), (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -229), 0), 100000000, 0, -228), 0), 100000000, 0, -227), 0, (("set.mli", 80, 2986, 2990), ("set.mli", 80, 2986, 3012), 0), 0, Tag1 ("Stdlib__Set", 6)), 0); (("singleton", 872), ((Tag1 (0, (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -226), (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -225), 0), 100000000, 0, -224), 0, (("set.mli", 86, 3278, 3282), ("set.mli", 86, 3278, 3305), 0), 0, Tag1 ("Stdlib__Set", 7)), 0); (("remove", 873), ((Tag1 (0, (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -223), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -222), (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -221), 0), 100000000, 0, -220), 0), 100000000, 0, -219), 0, (("set.mli", 89, 3381, 3385), ("set.mli", 89, 3381, 3410), 0), 0, Tag1 ("Stdlib__Set", 8)), 0); (("union", 874), ((Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -218), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -217), (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -216), 0), 100000000, 0, -215), 0), 100000000, 0, -214), 0, (("set.mli", 95, 3677, 3681), ("set.mli", 95, 3677, 3703), 0), 0, Tag1 ("Stdlib__Set", 9)), 0); (("inter", 875), ((Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -213), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -212), (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -211), 0), 100000000, 0, -210), 0), 100000000, 0, -209), 0, (("set.mli", 98, 3727, 3731), ("set.mli", 98, 3727, 3753), 0), 0, Tag1 ("Stdlib__Set", 10)), 0); (("disjoint", 876), ((Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -208), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -207), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -206), 0), 100000000, 0, -205), 0), 100000000, 0, -204), 0, (("set.mli", 101, 3784, 3788), ("set.mli", 101, 3784, 3816), 0), 0, Tag1 ("Stdlib__Set", 11)), 0); (("diff", 877), ((Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -203), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -202), (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -201), 0), 100000000, 0, -200), 0), 100000000, 0, -199), 0, (("set.mli", 105, 3880, 3884), ("set.mli", 105, 3880, 3905), 0), 0, Tag1 ("Stdlib__Set", 12)), 0); (("cardinal", 878), ((Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -198), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -197), 0), 100000000, 0, -196), 0, (("set.mli", 109, 4007, 4011), ("set.mli", 109, 4007, 4033), 0), 0, Tag1 ("Stdlib__Set", 13)), 0); (("elements", 879), ((Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -195), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -194)], (0)), 100000000, 0, -193), 0), 100000000, 0, -192), 0, (("set.mli", 114, 4120, 4124), ("set.mli", 114, 4120, 4151), 0), 0, Tag1 ("Stdlib__Set", 14)), 0); (("min_elt", 880), ((Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -191), (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -190), 0), 100000000, 0, -189), 0, (("set.mli", 120, 4380, 4384), ("set.mli", 120, 4380, 4405), 0), 0, Tag1 ("Stdlib__Set", 15)), 0); (("min_elt_opt", 881), ((Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -188), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -187)], (0)), 100000000, 0, -186), 0), 100000000, 0, -185), 0, (("set.mli", 125, 4567, 4571), ("set.mli", 125, 4567, 4603), 0), 0, Tag1 ("Stdlib__Set", 16)), 0); (("max_elt", 882), ((Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -184), (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -183), 0), 100000000, 0, -182), 0, (("set.mli", 131, 4774, 4778), ("set.mli", 131, 4774, 4799), 0), 0, Tag1 ("Stdlib__Set", 17)), 0); (("max_elt_opt", 883), ((Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -181), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -180)], (0)), 100000000, 0, -179), 0), 100000000, 0, -178), 0, (("set.mli", 135, 4890, 4894), ("set.mli", 135, 4890, 4926), 0), 0, Tag1 ("Stdlib__Set", 18)), 0); (("choose", 884), ((Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -177), (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -176), 0), 100000000, 0, -175), 0, (("set.mli", 140, 5041, 5045), ("set.mli", 140, 5041, 5065), 0), 0, Tag1 ("Stdlib__Set", 19)), 0); (("choose_opt", 885), ((Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -174), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -173)], (0)), 100000000, 0, -172), 0), 100000000, 0, -171), 0, (("set.mli", 145, 5263, 5267), ("set.mli", 145, 5263, 5298), 0), 0, Tag1 ("Stdlib__Set", 20)), 0); (("find", 886), ((Tag1 (0, (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -170), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -169), (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -168), 0), 100000000, 0, -167), 0), 100000000, 0, -166), 0, (("set.mli", 153, 5541, 5549), ("set.mli", 153, 5541, 5574), 0), 0, Tag1 ("Stdlib__Set", 21)), 0); (("find_opt", 887), ((Tag1 (0, (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -165), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -164), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -163)], (0)), 100000000, 0, -162), 0), 100000000, 0, -161), 0), 100000000, 0, -160), 0, (("set.mli", 159, 5752, 5756), ("set.mli", 159, 5752, 5792), 0), 0, Tag1 ("Stdlib__Set", 22)), 0); (("find_first", 888), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -159), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -158), 0), 100000000, 0, -157), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -156), (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -155), 0), 100000000, 0, -154), 0), 100000000, 0, -153), 0, (("set.mli", 165, 5963, 5967), ("set.mli", 165, 5963, 6008), 0), 0, Tag1 ("Stdlib__Set", 23)), 0); (("find_first_opt", 889), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -152), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -151), 0), 100000000, 0, -150), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -149), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -148)], (0)), 100000000, 0, -147), 0), 100000000, 0, -146), 0), 100000000, 0, -145), 0, (("set.mli", 177, 6482, 6486), ("set.mli", 177, 6482, 6538), 0), 0, Tag1 ("Stdlib__Set", 24)), 0); (("find_last", 890), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -144), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -143), 0), 100000000, 0, -142), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -141), (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -140), 0), 100000000, 0, -139), 0), 100000000, 0, -138), 0, (("set.mli", 184, 6779, 6783), ("set.mli", 184, 6779, 6823), 0), 0, Tag1 ("Stdlib__Set", 25)), 0); (("find_last_opt", 891), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -137), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -136), 0), 100000000, 0, -135), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -134), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -133)], (0)), 100000000, 0, -132), 0), 100000000, 0, -131), 0), 100000000, 0, -130), 0, (("set.mli", 190, 7044, 7048), ("set.mli", 190, 7044, 7099), 0), 0, Tag1 ("Stdlib__Set", 26)), 0); (("iter", 892), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -129), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -128), 0), 100000000, 0, -127), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -126), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -125), 0), 100000000, 0, -124), 0), 100000000, 0, -123), 0, (("set.mli", 198, 7371, 7375), ("set.mli", 198, 7371, 7411), 0), 0, Tag1 ("Stdlib__Set", 27)), 0); (("fold", 893), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -122), (Tag1 (0, ((("acc")), 100000000, 0, -118), ((("acc")), 100000000, 0, -118), 0), 100000000, 0, -121), 0), 100000000, 0, -120), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -119), (Tag1 (0, ((("acc")), 100000000, 0, -118), ((("acc")), 100000000, 0, -118), 0), 100000000, 0, -117), 0), 100000000, 0, -116), 0), 100000000, 0, -115), 0, (("set.mli", 203, 7616, 7620), ("set.mli", 203, 7616, 7672), 0), 0, Tag1 ("Stdlib__Set", 28)), 0); (("map", 894), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -114), (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -113), 0), 100000000, 0, -112), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -111), (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -110), 0), 100000000, 0, -109), 0), 100000000, 0, -108), 0, (("set.mli", 209, 7860, 7864), ("set.mli", 209, 7860, 7895), 0), 0, Tag1 ("Stdlib__Set", 29)), 0); (("filter", 895), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -107), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -106), 0), 100000000, 0, -105), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -104), (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -103), 0), 100000000, 0, -102), 0), 100000000, 0, -101), 0, (("set.mli", 221, 8372, 8376), ("set.mli", 221, 8372, 8411), 0), 0, Tag1 ("Stdlib__Set", 30)), 0); (("filter_map", 896), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -100), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -99)], (0)), 100000000, 0, -98), 0), 100000000, 0, -97), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -96), (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -95), 0), 100000000, 0, -94), 0), 100000000, 0, -93), 0, (("set.mli", 228, 8710, 8714), ("set.mli", 228, 8710, 8759), 0), 0, Tag1 ("Stdlib__Set", 31)), 0); (("partition", 897), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -92), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -91), 0), 100000000, 0, -90), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -89), (Tag2 ([(Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -87); (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -88)]), 100000000, 0, -86), 0), 100000000, 0, -85), 0), 100000000, 0, -84), 0, (("set.mli", 243, 9275, 9279), ("set.mli", 243, 9275, 9321), 0), 0, Tag1 ("Stdlib__Set", 32)), 0); (("split", 898), ((Tag1 (0, (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -83), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -82), (Tag2 ([(Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -79); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -80); (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -81)]), 100000000, 0, -78), 0), 100000000, 0, -77), 0), 100000000, 0, -76), 0, (("set.mli", 249, 9562, 9566), ("set.mli", 249, 9562, 9601), 0), 0, Tag1 ("Stdlib__Set", 33)), 0); (("is_empty", 899), ((Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -75), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -74), 0), 100000000, 0, -73), 0, (("set.mli", 260, 10020, 10024), ("set.mli", 260, 10020, 10047), 0), 0, Tag1 ("Stdlib__Set", 34)), 0); (("mem", 900), ((Tag1 (0, (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -72), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -71), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("set.mli", 263, 10096, 10100), ("set.mli", 263, 10096, 10125), 0), 0, Tag1 ("Stdlib__Set", 35)), 0); (("equal", 901), ((Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -67), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -66), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -65), 0), 100000000, 0, -64), 0), 100000000, 0, -63), 0, (("set.mli", 266, 10190, 10194), ("set.mli", 266, 10190, 10219), 0), 0, Tag1 ("Stdlib__Set", 36)), 0); (("compare", 902), ((Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -62), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -61), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -60), 0), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("set.mli", 270, 10335, 10339), ("set.mli", 270, 10335, 10365), 0), 0, Tag1 ("Stdlib__Set", 37)), 0); (("subset", 903), ((Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -57), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -56), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("set.mli", 274, 10476, 10480), ("set.mli", 274, 10476, 10506), 0), 0, Tag1 ("Stdlib__Set", 38)), 0); (("for_all", 904), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -52), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -51), 0), 100000000, 0, -50), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -49), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("set.mli", 278, 10598, 10602), ("set.mli", 278, 10598, 10641), 0), 0, Tag1 ("Stdlib__Set", 39)), 0); (("exists", 905), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -45), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -44), 0), 100000000, 0, -43), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -42), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("set.mli", 282, 10737, 10741), ("set.mli", 282, 10737, 10779), 0), 0, Tag1 ("Stdlib__Set", 40)), 0); (("to_list", 906), ((Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -38), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -37)], (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("set.mli", 288, 10922, 10926), ("set.mli", 288, 10922, 10953), 0), 0, Tag1 ("Stdlib__Set", 41)), 0); (("of_list", 907), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -34)], (0)), 100000000, 0, -33), (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("set.mli", 292, 11017, 11021), ("set.mli", 292, 11017, 11047), 0), 0, Tag1 ("Stdlib__Set", 42)), 0); (("to_seq_from", 908), ((Tag1 (0, (Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -30), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -29), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -28)], (0)), 100000000, 0, -27), 0), 100000000, 0, -26), 0), 100000000, 0, -25), 0, (("set.mli", 298, 11268, 11272), ("set.mli", 298, 11268, 11311), 0), 0, Tag1 ("Stdlib__Set", 43)), 0); (("to_seq", 909), ((Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -24), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -23)], (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("set.mli", 303, 11453, 11457), ("set.mli", 303, 11453, 11484), 0), 0, Tag1 ("Stdlib__Set", 44)), 0); (("to_rev_seq", 910), ((Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -20), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -19)], (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("set.mli", 307, 11562, 11566), ("set.mli", 307, 11562, 11597), 0), 0, Tag1 ("Stdlib__Set", 45)), 0); (("add_seq", 911), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -16)], (0)), 100000000, 0, -15), (Tag1 (0, (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -14), (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("set.mli", 311, 11676, 11680), ("set.mli", 311, 11676, 11713), 0), 0, Tag1 ("Stdlib__Set", 46)), 0); (("of_seq", 912), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((("elt", 868)), 0, (0)), 100000000, 0, -10)], (0)), 100000000, 0, -9), (Tag3 ((("t", 869)), 0, (0)), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("set.mli", 315, 11791, 11795), ("set.mli", 315, 11791, 11822), 0), 0, Tag1 ("Stdlib__Set", 47)), 0)])), 0, (("clib/cSet.mli", 19, 773, 773), ("clib/cSet.mli", 21, 828, 856), 0), Tag1 ("CSet", 7)), 0, 0); Tag4 (("HashedType", 861), ((Tag1 ([Tag1 (("t", 913), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("clib/cSet.mli", 25, 887, 889), ("clib/cSet.mli", 25, 887, 895), 0), 0, 0, 0, Tag1 ("CSet", 8)), 1, 0); (("hash", 914), ((Tag1 (0, (Tag3 ((("t", 913)), 0, (0)), 100000000, 0, -237), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -236), 0), 100000000, 0, -235), 0, (("clib/cSet.mli", 26, 896, 898), ("clib/cSet.mli", 26, 896, 917), 0), 0, Tag1 ("CSet", 9)), 0)])), 0, (("clib/cSet.mli", 23, 858, 858), ("clib/cSet.mli", 27, 918, 921), 0), Tag1 ("CSet", 10)), 0); Tag3 (("Hashcons", 862), 0, (Tag2 (((("M", 863)), ((("OrderedType", 858)))), Tag2 (((("H", 864)), Tag1 ([Tag1 (("t", 915), (0, 0, 0, 1, ((Tag3 (Tag1 ((("M", 863)), "t"), 0, (0)), 100000000, 0, -241)), 0, 0, 0, 0, (("clib/cSet.mli", 29, 923, 978), ("clib/cSet.mli", 29, 923, 990), 0), 0, 0, 0, Tag1 ("CSet", 12)), 1, 0); (("hash", 916), ((Tag1 (0, (Tag3 ((("t", 915)), 0, (0)), 100000000, 0, -240), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -239), 0), 100000000, 0, -238), 0, (("clib/cSet.mli", 26, 896, 898), ("clib/cSet.mli", 26, 896, 917), 0), 0, Tag1 ("CSet", 9)), 0)])), Tag1 ([Tag1 (("t", 917), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag2 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Set"), "Make"), (("M", 863))), "t"), 0, (0)), 100000000, 0, -256)), 0, 0, 0, 0, (("clib/cSet.mli", 30, 1010, 1012), ("clib/cSet.mli", 30, 1010, 1034), 0), 0, 0, 0, Tag1 ("CSet", 14)), 1, 0); Tag1 (("u", 918), (0, 0, 0, 1, ((Tag1 (0, (Tag3 (Tag1 ((("M", 863)), "t"), 0, (0)), 100000000, 0, -255), (Tag3 (Tag1 ((("M", 863)), "t"), 0, (0)), 100000000, 0, -254), 0), 100000000, 0, -253)), 0, 0, 0, 0, (("clib/cSet.mli", 31, 1035, 1041), ("clib/cSet.mli", 31, 1035, 1060), 0), 0, 0, 0, Tag1 ("CSet", 15)), 1, 0); Tag1 (("table", 919), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("clib/hashcons.mli", 61, 2402, 2406), ("clib/hashcons.mli", 61, 2402, 2416), 0), 0, 0, 0, Tag1 ("Hashcons", 8)), 1, 0); (("generate", 920), ((Tag1 (0, (Tag3 ((("u", 918)), 0, (0)), 100000000, 0, -252), (Tag3 ((("table", 919)), 0, (0)), 100000000, 0, -251), 0), 100000000, 0, -250), 0, (("clib/hashcons.mli", 64, 2456, 2460), ("clib/hashcons.mli", 64, 2456, 2485), 0), 0, Tag1 ("Hashcons", 9)), 0); (("hcons", 921), ((Tag1 (0, (Tag3 ((("table", 919)), 0, (0)), 100000000, 0, -249), (Tag1 (0, (Tag3 ((("t", 917)), 0, (0)), 100000000, 0, -248), (Tag3 ((("t", 917)), 0, (0)), 100000000, 0, -247), 0), 100000000, 0, -246), 0), 100000000, 0, -245), 0, (("clib/hashcons.mli", 67, 2549, 2553), ("clib/hashcons.mli", 67, 2549, 2580), 0), 0, Tag1 ("Hashcons", 10)), 0); (("stats", 922), ((Tag1 (0, (Tag3 ((("table", 919)), 0, (0)), 100000000, 0, -244), (Tag3 (Tag1 ((Tag2 ("Hashset")), "statistics"), 0, (0)), 100000000, 0, -243), 0), 100000000, 0, -242), 0, (("clib/hashcons.mli", 70, 2655, 2659), ("clib/hashcons.mli", 70, 2655, 2698), 0), 0, Tag1 ("Hashcons", 11)), 0)]))), 0, (("clib/cSet.mli", 29, 923, 923), ("clib/cSet.mli", 31, 1035, 1060), 0), Tag1 ("CSet", 16)), 0, 0)], "CSet", [("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

    end
