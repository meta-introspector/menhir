module type S =
  sig
    type t = in_channel
    type open_flag =
      In_channel.open_flag =
        Open_rdonly
      | Open_wronly
      | Open_append
      | Open_creat
      | Open_trunc
      | Open_excl
      | Open_binary
      | Open_text
      | Open_nonblock
    val stdin : t
    val open_bin : string -> t
    val open_text : string -> t
    val open_gen : open_flag list -> int -> string -> t
    val with_open_bin : string -> (t -> 'a) -> 'a
    val with_open_text : string -> (t -> 'a) -> 'a
    val with_open_gen : open_flag list -> int -> string -> (t -> 'a) -> 'a
    val seek : t -> int64 -> unit
    val pos : t -> int64
    val length : t -> int64
    val close : t -> unit
    val close_noerr : t -> unit
    val input_char : t -> char option
    val input_byte : t -> int option
    val input_line : t -> string option
    val input : t -> bytes -> int -> int -> int
    val really_input : t -> bytes -> int -> int -> unit option
    val really_input_string : t -> int -> string option
    val input_all : t -> string
    val set_binary_mode : t -> bool -> unit("DEBUG:rule", [Tag4 (("S", 348), ((Tag1 ([Tag1 (("t", 349), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "in_channel"), 0, (0)), 100000000, 0, -103)), 0, 0, 0, 0, (("stdcompat__in_channel_s.mli", 3, 21, 21), ("stdcompat__in_channel_s.mli", 3, 21, 40), 0), 0, 0, 0, Tag1 ("Stdcompat__in_channel_s", 0)), 1, 0); Tag1 (("open_flag", 350), (0, 0, Tag1 ([(("Open_rdonly", 271), (0), 0, (("stdcompat__in_channel_s.mli", 13, 153, 155), ("stdcompat__in_channel_s.mli", 13, 153, 168), 0), 0, Tag1 ("Stdcompat__in_channel_s", 2)); (("Open_wronly", 272), (0), 0, (("stdcompat__in_channel_s.mli", 14, 170, 172), ("stdcompat__in_channel_s.mli", 14, 170, 185), 0), 0, Tag1 ("Stdcompat__in_channel_s", 3)); (("Open_append", 273), (0), 0, (("stdcompat__in_channel_s.mli", 15, 187, 189), ("stdcompat__in_channel_s.mli", 15, 187, 202), 0), 0, Tag1 ("Stdcompat__in_channel_s", 4)); (("Open_creat", 274), (0), 0, (("stdcompat__in_channel_s.mli", 16, 204, 206), ("stdcompat__in_channel_s.mli", 16, 204, 218), 0), 0, Tag1 ("Stdcompat__in_channel_s", 5)); (("Open_trunc", 275), (0), 0, (("stdcompat__in_channel_s.mli", 17, 220, 222), ("stdcompat__in_channel_s.mli", 17, 220, 234), 0), 0, Tag1 ("Stdcompat__in_channel_s", 6)); (("Open_excl", 276), (0), 0, (("stdcompat__in_channel_s.mli", 18, 236, 238), ("stdcompat__in_channel_s.mli", 18, 236, 249), 0), 0, Tag1 ("Stdcompat__in_channel_s", 7)); (("Open_binary", 277), (0), 0, (("stdcompat__in_channel_s.mli", 19, 251, 253), ("stdcompat__in_channel_s.mli", 19, 251, 266), 0), 0, Tag1 ("Stdcompat__in_channel_s", 8)); (("Open_text", 278), (0), 0, (("stdcompat__in_channel_s.mli", 20, 268, 270), ("stdcompat__in_channel_s.mli", 20, 268, 281), 0), 0, Tag1 ("Stdcompat__in_channel_s", 9)); (("Open_nonblock", 279), (0), 0, (("stdcompat__in_channel_s.mli", 21, 283, 285), ("stdcompat__in_channel_s.mli", 21, 283, 300), 0), 0, Tag1 ("Stdcompat__in_channel_s", 10))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "In_channel"), "open_flag"), 0, (0)), 100000000, 0, -102)), 0, 0, 0, 0, (("stdcompat__in_channel_s.mli", 12, 113, 113), ("stdcompat__in_channel_s.mli", 21, 283, 300), 0), 0, 1, 0, Tag1 ("Stdcompat__in_channel_s", 1)), 1, 0); (("stdin", 351), ((Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -101), 0, (("stdcompat__in_channel_s.mli", 48, 728, 728), ("stdcompat__in_channel_s.mli", 48, 728, 741), 0), 0, Tag1 ("Stdcompat__in_channel_s", 11)), 0); (("open_bin", 352), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -100), (Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -99), 0), 100000000, 0, -98), 0, (("stdcompat__in_channel_s.mli", 51, 779, 779), ("stdcompat__in_channel_s.mli", 51, 779, 805), 0), 0, Tag1 ("Stdcompat__in_channel_s", 12)), 0); (("open_text", 353), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -97), (Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -96), 0), 100000000, 0, -95), 0, (("stdcompat__in_channel_s.mli", 54, 856, 856), ("stdcompat__in_channel_s.mli", 54, 856, 883), 0), 0, Tag1 ("Stdcompat__in_channel_s", 13)), 0); (("open_gen", 354), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("open_flag", 350)), 0, (0)), 100000000, 0, -94)], (0)), 100000000, 0, -93), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -92), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -91), (Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -90), 0), 100000000, 0, -89), 0), 100000000, 0, -88), 0), 100000000, 0, -87), 0, (("stdcompat__in_channel_s.mli", 57, 935, 935), ("stdcompat__in_channel_s.mli", 57, 935, 986), 0), 0, Tag1 ("Stdcompat__in_channel_s", 14)), 0); (("with_open_bin", 355), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -86), (Tag1 (0, (Tag1 (0, (Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -85), ((("a")), 100000000, 0, -83), 0), 100000000, 0, -84), ((("a")), 100000000, 0, -83), 0), 100000000, 0, -82), 0), 100000000, 0, -81), 0, (("stdcompat__in_channel_s.mli", 60, 1062, 1062), ("stdcompat__in_channel_s.mli", 60, 1062, 1107), 0), 0, Tag1 ("Stdcompat__in_channel_s", 15)), 0); (("with_open_text", 356), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -80), (Tag1 (0, (Tag1 (0, (Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -79), ((("a")), 100000000, 0, -77), 0), 100000000, 0, -78), ((("a")), 100000000, 0, -77), 0), 100000000, 0, -76), 0), 100000000, 0, -75), 0, (("stdcompat__in_channel_s.mli", 63, 1177, 1177), ("stdcompat__in_channel_s.mli", 63, 1177, 1223), 0), 0, Tag1 ("Stdcompat__in_channel_s", 16)), 0); (("with_open_gen", 357), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("open_flag", 350)), 0, (0)), 100000000, 0, -74)], (0)), 100000000, 0, -73), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -72), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -71), (Tag1 (0, (Tag1 (0, (Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -70), ((("a")), 100000000, 0, -68), 0), 100000000, 0, -69), ((("a")), 100000000, 0, -68), 0), 100000000, 0, -67), 0), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0, (("stdcompat__in_channel_s.mli", 66, 1294, 1294), ("stdcompat__in_channel_s.mli", 66, 1294, 1364), 0), 0, Tag1 ("Stdcompat__in_channel_s", 17)), 0); (("seek", 358), ((Tag1 (0, (Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -63), (Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -62), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -61), 0), 100000000, 0, -60), 0), 100000000, 0, -59), 0, (("stdcompat__in_channel_s.mli", 70, 1463, 1463), ("stdcompat__in_channel_s.mli", 70, 1463, 1492), 0), 0, Tag1 ("Stdcompat__in_channel_s", 18)), 0); (("pos", 359), ((Tag1 (0, (Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -58), (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("stdcompat__in_channel_s.mli", 73, 1546, 1546), ("stdcompat__in_channel_s.mli", 73, 1546, 1566), 0), 0, Tag1 ("Stdcompat__in_channel_s", 19)), 0); (("length", 360), ((Tag1 (0, (Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -55), (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("stdcompat__in_channel_s.mli", 76, 1611, 1611), ("stdcompat__in_channel_s.mli", 76, 1611, 1634), 0), 0, Tag1 ("Stdcompat__in_channel_s", 20)), 0); (("close", 361), ((Tag1 (0, (Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -52), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -51), 0), 100000000, 0, -50), 0, (("stdcompat__in_channel_s.mli", 79, 1682, 1682), ("stdcompat__in_channel_s.mli", 79, 1682, 1703), 0), 0, Tag1 ("Stdcompat__in_channel_s", 21)), 0); (("close_noerr", 362), ((Tag1 (0, (Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -49), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("stdcompat__in_channel_s.mli", 82, 1749, 1749), ("stdcompat__in_channel_s.mli", 82, 1749, 1776), 0), 0, Tag1 ("Stdcompat__in_channel_s", 22)), 0); (("input_char", 363), ((Tag1 (0, (Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -46), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -45)], (0)), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("stdcompat__in_channel_s.mli", 85, 1828, 1828), ("stdcompat__in_channel_s.mli", 85, 1828, 1861), 0), 0, Tag1 ("Stdcompat__in_channel_s", 23)), 0); (("input_byte", 364), ((Tag1 (0, (Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -42), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -41)], (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("stdcompat__in_channel_s.mli", 88, 1919, 1919), ("stdcompat__in_channel_s.mli", 88, 1919, 1951), 0), 0, Tag1 ("Stdcompat__in_channel_s", 24)), 0); (("input_line", 365), ((Tag1 (0, (Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -38), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -37)], (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("stdcompat__in_channel_s.mli", 91, 2008, 2008), ("stdcompat__in_channel_s.mli", 91, 2008, 2043), 0), 0, Tag1 ("Stdcompat__in_channel_s", 25)), 0); (("input", 366), ((Tag1 (0, (Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -34), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -33), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -32), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -31), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("stdcompat__in_channel_s.mli", 95, 2104, 2104), ("stdcompat__in_channel_s.mli", 95, 2104, 2147), 0), 0, Tag1 ("Stdcompat__in_channel_s", 26)), 0); (("really_input", 367), ((Tag1 (0, (Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -25), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -24), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -23), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -22), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -21)], (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("stdcompat__in_channel_s.mli", 104, 2284, 2284), ("stdcompat__in_channel_s.mli", 104, 2284, 2342), 0), 0, Tag1 ("Stdcompat__in_channel_s", 27)), 0); (("really_input_string", 368), ((Tag1 (0, (Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -15), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -14), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -13)], (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("stdcompat__in_channel_s.mli", 112, 2508, 2508), ("stdcompat__in_channel_s.mli", 112, 2508, 2559), 0), 0, Tag1 ("Stdcompat__in_channel_s", 28)), 0); (("input_all", 369), ((Tag1 (0, (Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -9), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("stdcompat__in_channel_s.mli", 115, 2635, 2635), ("stdcompat__in_channel_s.mli", 115, 2635, 2662), 0), 0, Tag1 ("Stdcompat__in_channel_s", 29)), 0); (("set_binary_mode", 370), ((Tag1 (0, (Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("stdcompat__in_channel_s.mli", 118, 2714, 2714), ("stdcompat__in_channel_s.mli", 118, 2714, 2753), 0), 0, Tag1 ("Stdcompat__in_channel_s", 30)), 0)])), 0, (("stdcompat__in_channel_s.mli", 1, 0, 0), ("stdcompat__in_channel_s.mli", 121, 2817, 2820), 0), Tag1 ("Stdcompat__in_channel_s", 31)), 0)], "Stdcompat__in_channel_s", [("Stdcompat__in_channel_s", ("\1919\162A='\005\149E\209\244\194\195<\228\228")); ("Stdlib__In_channel", ("\216\014|\224\0009\168DH\133P?\151\142\187a")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

  end
