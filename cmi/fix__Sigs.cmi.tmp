module type TYPE = sig type t end
module type OrderedType = Map.OrderedType
module type HashedType = Hashtbl.HashedType
module type FINITE_TYPE = sig type t val foreach : (t -> unit) -> unit end
module type PERSISTENT_MAPS =
  sig
    type key
    type 'data t
    val empty : 'data t
    val add : key -> 'data -> 'data t -> 'data t
    val find : key -> 'data t -> 'data
    val iter : (key -> 'data -> unit) -> 'data t -> unit
  end
module type MINIMAL_IMPERATIVE_MAPS =
  sig
    type key
    type 'data t
    val create : unit -> 'data t
    val add : key -> 'data -> 'data t -> unit
    val find : key -> 'data t -> 'data
  end
module type IMPERATIVE_MAPS =
  sig
    type key
    type 'data t
    val create : unit -> 'data t
    val add : key -> 'data -> 'data t -> unit
    val find : key -> 'data t -> 'data
    val clear : 'data t -> unit
    val iter : (key -> 'data -> unit) -> 'data t -> unit
  end
module type ARRAY =
  sig
    type key
    type value
    val get : key -> value
    val set : key -> value -> unit
  end
module type PROPERTY =
  sig
    type property
    val bottom : property
    val equal : property -> property -> bool
    val is_maximal : property -> bool
  end
module type SEMI_LATTICE =
  sig
    type property
    val leq : property -> property -> bool
    val join : property -> property -> property
  end
module type MINIMAL_SEMI_LATTICE =
  sig type property val leq_join : property -> property -> property end
type 'a fix = ('a -> 'a) -> 'a
module type MEMOIZER =
  sig
    type key
    val memoize : (key -> 'a) -> key -> 'a
    type 'a t
    val visibly_memoize : (key -> 'a) -> (key -> 'a) * 'a t
    val fix : (key -> 'a) fix
    exception Cycle of key list * key
    val defensive_fix : (key -> 'a) fix
    val curried : ('a * 'b -> 'c) fix -> ('a -> 'b -> 'c) fix
  end
module type TABULATOR =
  sig type key val tabulate : (key -> 'a) -> key -> 'a end
module type SOLVER =
  sig
    type variable
    type property
    type valuation = variable -> property
    type rhs = valuation -> property
    type equations = variable -> rhs
    val lfp : equations -> valuation
  end
module type SOLUTION =
  sig type variable type property val solution : variable -> property end
module type GRAPH =
  sig
    type t
    val foreach_root : (t -> unit) -> unit
    val foreach_successor : t -> (t -> unit) -> unit
  end
module type DATA_FLOW_GRAPH =
  sig
    type variable
    type property
    val foreach_root : (variable -> property -> unit) -> unit
    val foreach_successor :
      variable -> property -> (variable -> property -> unit) -> unit
  end
module type ONGOING_NUMBERING =
  sig
    type t
    val encode : t -> int
    val current : unit -> int
    val has_been_encoded : t -> bool
  end
module type NUMBERING =
  sig type t val n : int val encode : t -> int val decode : int -> t end
module type TWO_PHASE_NUMBERING =
  sig
    type t
    val encode : t -> int
    val current : unit -> int
    val has_been_encoded : t -> bool
    module Done :
      functor () ->
        sig
          type t = t/2
          val n : int
          val encode : t -> int
          val decode : int -> t
        end
  end("DEBUG:rule", [Tag4 (("TYPE", 562), ((Tag1 ([Tag1 (("t", 584), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 17, 1018, 1020), ("src/Sigs.ml", 17, 1018, 1026), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 0)), 1, 0)])), 0, (("src/Sigs.ml", 16, 995, 995), ("src/Sigs.ml", 18, 1027, 1030), 0), Tag1 ("Fix__Sigs", 1)), 0); Tag4 (("OrderedType", 563), (((Tag1 (Tag1 ((Tag2 ("Stdlib")), "Map"), "OrderedType"))), 0, (("src/Sigs.ml", 23, 1137, 1137), ("src/Sigs.ml", 24, 1163, 1180), 0), Tag1 ("Fix__Sigs", 2)), 0); Tag4 (("HashedType", 564), (((Tag1 (Tag1 ((Tag2 ("Stdlib")), "Hashtbl"), "HashedType"))), 0, (("src/Sigs.ml", 27, 1203, 1203), ("src/Sigs.ml", 28, 1228, 1248), 0), Tag1 ("Fix__Sigs", 3)), 0); Tag4 (("FINITE_TYPE", 565), ((Tag1 ([Tag1 (("t", 585), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 34, 1409, 1411), ("src/Sigs.ml", 34, 1409, 1417), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 4)), 1, 0); (("foreach", 586), ((Tag1 (0, (Tag1 (0, (Tag3 ((("t", 585)), 0, (0)), 100000000, 0, -9), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -8), 0), 100000000, 0, -7), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("src/Sigs.ml", 35, 1418, 1420), ("src/Sigs.ml", 35, 1418, 1452), 0), 0, Tag1 ("Fix__Sigs", 5)), 0)])), 0, (("src/Sigs.ml", 33, 1379, 1379), ("src/Sigs.ml", 36, 1453, 1456), 0), Tag1 ("Fix__Sigs", 6)), 0); Tag4 (("PERSISTENT_MAPS", 566), ((Tag1 ([Tag1 (("key", 587), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 46, 1700, 1702), ("src/Sigs.ml", 46, 1700, 1710), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 7)), 1, 0); Tag1 (("t", 588), ([((("data")), 100000000, 0, -33)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/Sigs.ml", 49, 1750, 1752), ("src/Sigs.ml", 49, 1750, 1764), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 8)), 1, 0); (("empty", 589), ((Tag3 ((("t", 588)), [((("data")), 100000000, 0, -32)], (0)), 100000000, 0, -31), 0, (("src/Sigs.ml", 52, 1789, 1791), ("src/Sigs.ml", 52, 1789, 1809), 0), 0, Tag1 ("Fix__Sigs", 9)), 0); (("add", 590), ((Tag1 (0, (Tag3 ((("key", 587)), 0, (0)), 100000000, 0, -30), (Tag1 (0, ((("data")), 100000000, 0, -28), (Tag1 (0, (Tag3 ((("t", 588)), [((("data")), 100000000, 0, -28)], (0)), 100000000, 0, -29), (Tag3 ((("t", 588)), [((("data")), 100000000, 0, -28)], (0)), 100000000, 0, -27), 0), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("src/Sigs.ml", 55, 1877, 1879), ("src/Sigs.ml", 55, 1877, 1922), 0), 0, Tag1 ("Fix__Sigs", 10)), 0); (("find", 591), ((Tag1 (0, (Tag3 ((("key", 587)), 0, (0)), 100000000, 0, -23), (Tag1 (0, (Tag3 ((("t", 588)), [((("data")), 100000000, 0, -21)], (0)), 100000000, 0, -22), ((("data")), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("src/Sigs.ml", 59, 2008, 2010), ("src/Sigs.ml", 59, 2008, 2043), 0), 0, Tag1 ("Fix__Sigs", 11)), 0); (("iter", 592), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 587)), 0, (0)), 100000000, 0, -18), (Tag1 (0, ((("data")), 100000000, 0, -14), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), (Tag1 (0, (Tag3 ((("t", 588)), [((("data")), 100000000, 0, -14)], (0)), 100000000, 0, -13), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("src/Sigs.ml", 62, 2088, 2090), ("src/Sigs.ml", 62, 2088, 2141), 0), 0, Tag1 ("Fix__Sigs", 12)), 0)])), 0, (("src/Sigs.ml", 43, 1639, 1639), ("src/Sigs.ml", 64, 2143, 2146), 0), Tag1 ("Fix__Sigs", 13)), 0); Tag4 (("MINIMAL_IMPERATIVE_MAPS", 567), ((Tag1 ([Tag1 (("key", 593), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 69, 2217, 2219), ("src/Sigs.ml", 69, 2217, 2227), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 14)), 1, 0); Tag1 (("t", 594), ([((("data")), 100000000, 0, -50)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/Sigs.ml", 72, 2267, 2269), ("src/Sigs.ml", 72, 2267, 2281), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 15)), 1, 0); (("create", 595), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -49), (Tag3 ((("t", 594)), [((("data")), 100000000, 0, -48)], (0)), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("src/Sigs.ml", 75, 2329, 2331), ("src/Sigs.ml", 75, 2329, 2358), 0), 0, Tag1 ("Fix__Sigs", 16)), 0); (("add", 596), ((Tag1 (0, (Tag3 ((("key", 593)), 0, (0)), 100000000, 0, -45), (Tag1 (0, ((("data")), 100000000, 0, -44), (Tag1 (0, (Tag3 ((("t", 594)), [((("data")), 100000000, 0, -44)], (0)), 100000000, 0, -43), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -42), 0), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("src/Sigs.ml", 79, 2460, 2462), ("src/Sigs.ml", 79, 2460, 2502), 0), 0, Tag1 ("Fix__Sigs", 17)), 0); (("find", 597), ((Tag1 (0, (Tag3 ((("key", 593)), 0, (0)), 100000000, 0, -38), (Tag1 (0, (Tag3 ((("t", 594)), [((("data")), 100000000, 0, -36)], (0)), 100000000, 0, -37), ((("data")), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("src/Sigs.ml", 83, 2588, 2590), ("src/Sigs.ml", 83, 2588, 2623), 0), 0, Tag1 ("Fix__Sigs", 18)), 0)])), 0, (("src/Sigs.ml", 66, 2148, 2148), ("src/Sigs.ml", 85, 2625, 2628), 0), Tag1 ("Fix__Sigs", 19)), 0); Tag4 (("IMPERATIVE_MAPS", 568), ((Tag1 ([Tag1 (("key", 598), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 69, 2217, 2219), ("src/Sigs.ml", 69, 2217, 2227), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 14)), 1, 0); Tag1 (("t", 599), ([((("data")), 100000000, 0, -80)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/Sigs.ml", 72, 2267, 2269), ("src/Sigs.ml", 72, 2267, 2281), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 15)), 1, 0); (("create", 600), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -79), (Tag3 ((("t", 599)), [((("data")), 100000000, 0, -78)], (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0, (("src/Sigs.ml", 75, 2329, 2331), ("src/Sigs.ml", 75, 2329, 2358), 0), 0, Tag1 ("Fix__Sigs", 16)), 0); (("add", 601), ((Tag1 (0, (Tag3 ((("key", 598)), 0, (0)), 100000000, 0, -75), (Tag1 (0, ((("data")), 100000000, 0, -74), (Tag1 (0, (Tag3 ((("t", 599)), [((("data")), 100000000, 0, -74)], (0)), 100000000, 0, -73), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), 0), 100000000, 0, -69), 0, (("src/Sigs.ml", 79, 2460, 2462), ("src/Sigs.ml", 79, 2460, 2502), 0), 0, Tag1 ("Fix__Sigs", 17)), 0); (("find", 602), ((Tag1 (0, (Tag3 ((("key", 598)), 0, (0)), 100000000, 0, -68), (Tag1 (0, (Tag3 ((("t", 599)), [((("data")), 100000000, 0, -66)], (0)), 100000000, 0, -67), ((("data")), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0, (("src/Sigs.ml", 83, 2588, 2590), ("src/Sigs.ml", 83, 2588, 2623), 0), 0, Tag1 ("Fix__Sigs", 18)), 0); (("clear", 603), ((Tag1 (0, (Tag3 ((("t", 599)), [((("data")), 100000000, 0, -63)], (0)), 100000000, 0, -62), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("src/Sigs.ml", 92, 2732, 2734), ("src/Sigs.ml", 92, 2732, 2760), 0), 0, Tag1 ("Fix__Sigs", 20)), 0); (("iter", 604), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 598)), 0, (0)), 100000000, 0, -59), (Tag1 (0, ((("data")), 100000000, 0, -55), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), (Tag1 (0, (Tag3 ((("t", 599)), [((("data")), 100000000, 0, -55)], (0)), 100000000, 0, -54), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("src/Sigs.ml", 95, 2805, 2807), ("src/Sigs.ml", 95, 2805, 2858), 0), 0, Tag1 ("Fix__Sigs", 21)), 0)])), 0, (("src/Sigs.ml", 87, 2630, 2630), ("src/Sigs.ml", 97, 2860, 2863), 0), Tag1 ("Fix__Sigs", 22)), 0); Tag4 (("ARRAY", 569), ((Tag1 ([Tag1 (("key", 605), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 110, 3289, 3291), ("src/Sigs.ml", 110, 3289, 3299), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 23)), 1, 0); Tag1 (("value", 606), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 113, 3329, 3331), ("src/Sigs.ml", 113, 3329, 3341), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 24)), 1, 0); (("get", 607), ((Tag1 (0, (Tag3 ((("key", 605)), 0, (0)), 100000000, 0, -88), (Tag3 ((("value", 606)), 0, (0)), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("src/Sigs.ml", 116, 3405, 3407), ("src/Sigs.ml", 116, 3405, 3429), 0), 0, Tag1 ("Fix__Sigs", 25)), 0); (("set", 608), ((Tag1 (0, (Tag3 ((("key", 605)), 0, (0)), 100000000, 0, -85), (Tag1 (0, (Tag3 ((("value", 606)), 0, (0)), 100000000, 0, -84), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -83), 0), 100000000, 0, -82), 0), 100000000, 0, -81), 0, (("src/Sigs.ml", 119, 3481, 3483), ("src/Sigs.ml", 119, 3481, 3513), 0), 0, Tag1 ("Fix__Sigs", 26)), 0)])), 0, (("src/Sigs.ml", 107, 3238, 3238), ("src/Sigs.ml", 121, 3515, 3518), 0), Tag1 ("Fix__Sigs", 27)), 0); Tag4 (("PROPERTY", 570), ((Tag1 ([Tag1 (("property", 609), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 135, 4081, 4083), ("src/Sigs.ml", 135, 4081, 4096), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 28)), 1, 0); (("bottom", 610), ((Tag3 ((("property", 609)), 0, (0)), 100000000, 0, -97), 0, (("src/Sigs.ml", 138, 4139, 4141), ("src/Sigs.ml", 138, 4139, 4161), 0), 0, Tag1 ("Fix__Sigs", 29)), 0); (("equal", 611), ((Tag1 (0, (Tag3 ((("property", 609)), 0, (0)), 100000000, 0, -96), (Tag1 (0, (Tag3 ((("property", 609)), 0, (0)), 100000000, 0, -95), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -94), 0), 100000000, 0, -93), 0), 100000000, 0, -92), 0, (("src/Sigs.ml", 143, 4333, 4335), ("src/Sigs.ml", 143, 4333, 4374), 0), 0, Tag1 ("Fix__Sigs", 30)), 0); (("is_maximal", 612), ((Tag1 (0, (Tag3 ((("property", 609)), 0, (0)), 100000000, 0, -91), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -90), 0), 100000000, 0, -89), 0, (("src/Sigs.ml", 151, 4789, 4791), ("src/Sigs.ml", 151, 4789, 4823), 0), 0, Tag1 ("Fix__Sigs", 31)), 0)])), 0, (("src/Sigs.ml", 127, 3706, 3706), ("src/Sigs.ml", 153, 4825, 4828), 0), Tag1 ("Fix__Sigs", 32)), 0); Tag4 (("SEMI_LATTICE", 571), ((Tag1 ([Tag1 (("property", 613), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 165, 5317, 5319), ("src/Sigs.ml", 165, 5317, 5332), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 33)), 1, 0); (("leq", 614), ((Tag1 (0, (Tag3 ((("property", 613)), 0, (0)), 100000000, 0, -107), (Tag1 (0, (Tag3 ((("property", 613)), 0, (0)), 100000000, 0, -106), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -105), 0), 100000000, 0, -104), 0), 100000000, 0, -103), 0, (("src/Sigs.ml", 168, 5387, 5389), ("src/Sigs.ml", 168, 5387, 5426), 0), 0, Tag1 ("Fix__Sigs", 34)), 0); (("join", 615), ((Tag1 (0, (Tag3 ((("property", 613)), 0, (0)), 100000000, 0, -102), (Tag1 (0, (Tag3 ((("property", 613)), 0, (0)), 100000000, 0, -101), (Tag3 ((("property", 613)), 0, (0)), 100000000, 0, -100), 0), 100000000, 0, -99), 0), 100000000, 0, -98), 0, (("src/Sigs.ml", 171, 5503, 5505), ("src/Sigs.ml", 171, 5503, 5547), 0), 0, Tag1 ("Fix__Sigs", 35)), 0)])), 0, (("src/Sigs.ml", 160, 5118, 5118), ("src/Sigs.ml", 173, 5549, 5552), 0), Tag1 ("Fix__Sigs", 36)), 0); Tag4 (("MINIMAL_SEMI_LATTICE", 572), ((Tag1 ([Tag1 (("property", 616), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 182, 5848, 5850), ("src/Sigs.ml", 182, 5848, 5863), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 37)), 1, 0); (("leq_join", 617), ((Tag1 (0, (Tag3 ((("property", 616)), 0, (0)), 100000000, 0, -112), (Tag1 (0, (Tag3 ((("property", 616)), 0, (0)), 100000000, 0, -111), (Tag3 ((("property", 616)), 0, (0)), 100000000, 0, -110), 0), 100000000, 0, -109), 0), 100000000, 0, -108), 0, (("src/Sigs.ml", 187, 6080, 6082), ("src/Sigs.ml", 187, 6080, 6128), 0), 0, Tag1 ("Fix__Sigs", 38)), 0)])), 0, (("src/Sigs.ml", 177, 5641, 5641), ("src/Sigs.ml", 189, 6130, 6133), 0), Tag1 ("Fix__Sigs", 39)), 0); Tag1 (("fix", 573), ([((("a")), 100000000, 0, -3)], 1, 0, 1, ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -3), ((("a")), 100000000, 0, -3), 0), 100000000, 0, -4), ((("a")), 100000000, 0, -3), 0), 100000000, 0, -2)), [63], [0], 0, 0, (("src/Sigs.ml", 195, 6313, 6313), ("src/Sigs.ml", 196, 6327, 6345), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 40)), 1, 0); Tag4 (("MEMOIZER", 574), ((Tag1 ([Tag1 (("key", 618), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 204, 6564, 6566), ("src/Sigs.ml", 204, 6564, 6574), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 41)), 1, 0); (("memoize", 619), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 618)), 0, (0)), 100000000, 0, -148), ((("a")), 100000000, 0, -145), 0), 100000000, 0, -147), (Tag1 (0, (Tag3 ((("key", 618)), 0, (0)), 100000000, 0, -146), ((("a")), 100000000, 0, -145), 0), 100000000, 0, -144), 0), 100000000, 0, -143), 0, (("src/Sigs.ml", 209, 6763, 6765), ("src/Sigs.ml", 209, 6763, 6804), 0), 0, Tag1 ("Fix__Sigs", 42)), 0); Tag1 (("t", 620), ([((("a")), 100000000, 0, -142)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/Sigs.ml", 212, 6846, 6848), ("src/Sigs.ml", 212, 6846, 6857), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 43)), 1, 0); (("visibly_memoize", 621), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 618)), 0, (0)), 100000000, 0, -141), ((("a")), 100000000, 0, -137), 0), 100000000, 0, -140), (Tag2 ([(Tag1 (0, (Tag3 ((("key", 618)), 0, (0)), 100000000, 0, -138), ((("a")), 100000000, 0, -137), 0), 100000000, 0, -136); (Tag3 ((("t", 620)), [((("a")), 100000000, 0, -137)], (0)), 100000000, 0, -139)]), 100000000, 0, -135), 0), 100000000, 0, -134), 0, (("src/Sigs.ml", 217, 7066, 7068), ("src/Sigs.ml", 217, 7066, 7122), 0), 0, Tag1 ("Fix__Sigs", 44)), 0); (("fix", 622), ((Tag3 ((("fix", 573)), [(Tag1 (0, (Tag3 ((("key", 618)), 0, (0)), 100000000, 0, -133), ((("a")), 100000000, 0, -132), 0), 100000000, 0, -131)], (0)), 100000000, 0, -130), 0, (("src/Sigs.ml", 220, 7182, 7184), ("src/Sigs.ml", 220, 7182, 7208), 0), 0, Tag1 ("Fix__Sigs", 45)), 0); Tag2 (("Cycle", 623), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("key", 618)), 0, (0)), 100000000, 0, -128)], (0)), 100000000, 0, -127); (Tag3 ((("key", 618)), 0, (0)), 100000000, 0, -129)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Fix__Sigs", 46)), 2, 0); (("defensive_fix", 624), ((Tag3 ((("fix", 573)), [(Tag1 (0, (Tag3 ((("key", 618)), 0, (0)), 100000000, 0, -126), ((("a")), 100000000, 0, -125), 0), 100000000, 0, -124)], (0)), 100000000, 0, -123), 0, (("src/Sigs.ml", 235, 7958, 7960), ("src/Sigs.ml", 235, 7958, 7994), 0), 0, Tag1 ("Fix__Sigs", 47)), 0); (("curried", 625), ((Tag1 (0, (Tag3 ((("fix", 573)), [(Tag1 (0, (Tag2 ([((("a")), 100000000, 0, -119); ((("b")), 100000000, 0, -118)]), 100000000, 0, -122), ((("c")), 100000000, 0, -117), 0), 100000000, 0, -121)], (0)), 100000000, 0, -120), (Tag3 ((("fix", 573)), [(Tag1 (0, ((("a")), 100000000, 0, -119), (Tag1 (0, ((("b")), 100000000, 0, -118), ((("c")), 100000000, 0, -117), 0), 100000000, 0, -116), 0), 100000000, 0, -115)], (0)), 100000000, 0, -114), 0), 100000000, 0, -113), 0, (("src/Sigs.ml", 240, 8163, 8165), ("src/Sigs.ml", 240, 8163, 8221), 0), 0, Tag1 ("Fix__Sigs", 48)), 0)])), 0, (("src/Sigs.ml", 201, 6510, 6510), ("src/Sigs.ml", 242, 8223, 8226), 0), Tag1 ("Fix__Sigs", 49)), 0); Tag4 (("TABULATOR", 575), ((Tag1 ([Tag1 (("key", 626), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 251, 8450, 8452), ("src/Sigs.ml", 251, 8450, 8460), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 50)), 1, 0); (("tabulate", 627), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 626)), 0, (0)), 100000000, 0, -154), ((("a")), 100000000, 0, -151), 0), 100000000, 0, -153), (Tag1 (0, (Tag3 ((("key", 626)), 0, (0)), 100000000, 0, -152), ((("a")), 100000000, 0, -151), 0), 100000000, 0, -150), 0), 100000000, 0, -149), 0, (("src/Sigs.ml", 262, 9019, 9021), ("src/Sigs.ml", 262, 9019, 9061), 0), 0, Tag1 ("Fix__Sigs", 51)), 0)])), 0, (("src/Sigs.ml", 248, 8395, 8395), ("src/Sigs.ml", 264, 9063, 9066), 0), Tag1 ("Fix__Sigs", 52)), 0); Tag4 (("SOLVER", 576), ((Tag1 ([Tag1 (("variable", 628), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 273, 9320, 9322), ("src/Sigs.ml", 273, 9320, 9335), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 53)), 1, 0); Tag1 (("property", 629), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 276, 9369, 9371), ("src/Sigs.ml", 276, 9369, 9384), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 54)), 1, 0); Tag1 (("valuation", 630), (0, 0, 0, 1, ((Tag1 (0, (Tag3 ((("variable", 628)), 0, (0)), 100000000, 0, -166), (Tag3 ((("property", 629)), 0, (0)), 100000000, 0, -165), 0), 100000000, 0, -164)), 0, 0, 0, 0, (("src/Sigs.ml", 279, 9447, 9449), ("src/Sigs.ml", 279, 9447, 9486), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 55)), 1, 0); Tag1 (("rhs", 631), (0, 0, 0, 1, ((Tag1 (0, (Tag3 ((("valuation", 630)), 0, (0)), 100000000, 0, -163), (Tag3 ((("property", 629)), 0, (0)), 100000000, 0, -162), 0), 100000000, 0, -161)), 0, 0, 0, 0, (("src/Sigs.ml", 285, 9714, 9716), ("src/Sigs.ml", 285, 9714, 9748), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 56)), 1, 0); Tag1 (("equations", 632), (0, 0, 0, 1, ((Tag1 (0, (Tag3 ((("variable", 628)), 0, (0)), 100000000, 0, -160), (Tag3 ((("rhs", 631)), 0, (0)), 100000000, 0, -159), 0), 100000000, 0, -158)), 0, 0, 0, 0, (("src/Sigs.ml", 289, 9832, 9834), ("src/Sigs.ml", 289, 9832, 9866), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 57)), 1, 0); (("lfp", 633), ((Tag1 (0, (Tag3 ((("equations", 632)), 0, (0)), 100000000, 0, -157), (Tag3 ((("valuation", 630)), 0, (0)), 100000000, 0, -156), 0), 100000000, 0, -155), 0, (("src/Sigs.ml", 304, 10603, 10605), ("src/Sigs.ml", 304, 10603, 10636), 0), 0, Tag1 ("Fix__Sigs", 58)), 0)])), 0, (("src/Sigs.ml", 270, 9263, 9263), ("src/Sigs.ml", 306, 10638, 10641), 0), Tag1 ("Fix__Sigs", 59)), 0); Tag4 (("SOLUTION", 577), ((Tag1 ([Tag1 (("variable", 634), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 315, 10871, 10873), ("src/Sigs.ml", 315, 10871, 10886), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 60)), 1, 0); Tag1 (("property", 635), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 318, 10920, 10922), ("src/Sigs.ml", 318, 10920, 10935), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 61)), 1, 0); (("solution", 636), ((Tag1 (0, (Tag3 ((("variable", 634)), 0, (0)), 100000000, 0, -169), (Tag3 ((("property", 635)), 0, (0)), 100000000, 0, -168), 0), 100000000, 0, -167), 0, (("src/Sigs.ml", 321, 11001, 11003), ("src/Sigs.ml", 321, 11001, 11037), 0), 0, Tag1 ("Fix__Sigs", 62)), 0)])), 0, (("src/Sigs.ml", 312, 10812, 10812), ("src/Sigs.ml", 323, 11039, 11042), 0), Tag1 ("Fix__Sigs", 63)), 0); Tag4 (("GRAPH", 578), ((Tag1 ([Tag1 (("t", 637), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 332, 11299, 11301), ("src/Sigs.ml", 332, 11299, 11307), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 64)), 1, 0); (("foreach_root", 638), ((Tag1 (0, (Tag1 (0, (Tag3 ((("t", 637)), 0, (0)), 100000000, 0, -181), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -180), 0), 100000000, 0, -179), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -178), 0), 100000000, 0, -177), 0, (("src/Sigs.ml", 337, 11520, 11522), ("src/Sigs.ml", 337, 11520, 11559), 0), 0, Tag1 ("Fix__Sigs", 65)), 0); (("foreach_successor", 639), ((Tag1 (0, (Tag3 ((("t", 637)), 0, (0)), 100000000, 0, -176), (Tag1 (0, (Tag1 (0, (Tag3 ((("t", 637)), 0, (0)), 100000000, 0, -175), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -174), 0), 100000000, 0, -173), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -172), 0), 100000000, 0, -171), 0), 100000000, 0, -170), 0, (("src/Sigs.ml", 341, 11695, 11697), ("src/Sigs.ml", 341, 11695, 11744), 0), 0, Tag1 ("Fix__Sigs", 66)), 0)])), 0, (("src/Sigs.ml", 329, 11244, 11244), ("src/Sigs.ml", 343, 11746, 11749), 0), Tag1 ("Fix__Sigs", 67)), 0); Tag4 (("DATA_FLOW_GRAPH", 579), ((Tag1 ([Tag1 (("variable", 640), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 352, 12044, 12046), ("src/Sigs.ml", 352, 12044, 12059), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 68)), 1, 0); Tag1 (("property", 641), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 355, 12093, 12095), ("src/Sigs.ml", 355, 12093, 12108), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 69)), 1, 0); (("foreach_root", 642), ((Tag1 (0, (Tag1 (0, (Tag3 ((("variable", 640)), 0, (0)), 100000000, 0, -199), (Tag1 (0, (Tag3 ((("property", 641)), 0, (0)), 100000000, 0, -198), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -197), 0), 100000000, 0, -196), 0), 100000000, 0, -195), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -194), 0), 100000000, 0, -193), 0, (("src/Sigs.ml", 362, 12453, 12455), ("src/Sigs.ml", 363, 12473, 12515), 0), 0, Tag1 ("Fix__Sigs", 70)), 0); (("foreach_successor", 643), ((Tag1 (0, (Tag3 ((("variable", 640)), 0, (0)), 100000000, 0, -192), (Tag1 (0, (Tag3 ((("property", 641)), 0, (0)), 100000000, 0, -191), (Tag1 (0, (Tag1 (0, (Tag3 ((("variable", 640)), 0, (0)), 100000000, 0, -190), (Tag1 (0, (Tag3 ((("property", 641)), 0, (0)), 100000000, 0, -189), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -188), 0), 100000000, 0, -187), 0), 100000000, 0, -186), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -185), 0), 100000000, 0, -184), 0), 100000000, 0, -183), 0), 100000000, 0, -182), 0, (("src/Sigs.ml", 369, 12814, 12816), ("src/Sigs.ml", 371, 12867, 12909), 0), 0, Tag1 ("Fix__Sigs", 71)), 0)])), 0, (("src/Sigs.ml", 349, 11959, 11959), ("src/Sigs.ml", 373, 12911, 12914), 0), Tag1 ("Fix__Sigs", 72)), 0); Tag4 (("ONGOING_NUMBERING", 580), ((Tag1 ([Tag1 (("t", 644), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 381, 13136, 13138), ("src/Sigs.ml", 381, 13136, 13144), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 73)), 1, 0); (("encode", 645), ((Tag1 (0, (Tag3 ((("t", 644)), 0, (0)), 100000000, 0, -208), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -207), 0), 100000000, 0, -206), 0, (("src/Sigs.ml", 387, 13379, 13381), ("src/Sigs.ml", 387, 13379, 13401), 0), 0, Tag1 ("Fix__Sigs", 74)), 0); (("current", 646), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -205), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -204), 0), 100000000, 0, -203), 0, (("src/Sigs.ml", 391, 13527, 13529), ("src/Sigs.ml", 391, 13527, 13553), 0), 0, Tag1 ("Fix__Sigs", 75)), 0); (("has_been_encoded", 647), ((Tag1 (0, (Tag3 ((("t", 644)), 0, (0)), 100000000, 0, -202), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -201), 0), 100000000, 0, -200), 0, (("src/Sigs.ml", 395, 13648, 13650), ("src/Sigs.ml", 395, 13648, 13681), 0), 0, Tag1 ("Fix__Sigs", 76)), 0)])), 0, (("src/Sigs.ml", 378, 13054, 13054), ("src/Sigs.ml", 397, 13683, 13686), 0), Tag1 ("Fix__Sigs", 77)), 0); Tag4 (("NUMBERING", 581), ((Tag1 ([Tag1 (("t", 648), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 403, 13815, 13817), ("src/Sigs.ml", 403, 13815, 13823), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 78)), 1, 0); (("n", 649), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -215), 0, (("src/Sigs.ml", 408, 14023, 14025), ("src/Sigs.ml", 408, 14023, 14035), 0), 0, Tag1 ("Fix__Sigs", 79)), 0); (("encode", 650), ((Tag1 (0, (Tag3 ((("t", 648)), 0, (0)), 100000000, 0, -214), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -213), 0), 100000000, 0, -212), 0, (("src/Sigs.ml", 412, 14132, 14134), ("src/Sigs.ml", 412, 14132, 14154), 0), 0, Tag1 ("Fix__Sigs", 80)), 0); (("decode", 651), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -211), (Tag3 ((("t", 648)), 0, (0)), 100000000, 0, -210), 0), 100000000, 0, -209), 0, (("src/Sigs.ml", 416, 14256, 14258), ("src/Sigs.ml", 416, 14256, 14278), 0), 0, Tag1 ("Fix__Sigs", 81)), 0)])), 0, (("src/Sigs.ml", 400, 13741, 13741), ("src/Sigs.ml", 418, 14280, 14283), 0), Tag1 ("Fix__Sigs", 82)), 0); Tag4 (("TWO_PHASE_NUMBERING", 582), ((Tag1 ([Tag1 (("t", 652), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 381, 13136, 13138), ("src/Sigs.ml", 381, 13136, 13144), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 73)), 1, 0); (("encode", 653), ((Tag1 (0, (Tag3 ((("t", 652)), 0, (0)), 100000000, 0, -224), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -223), 0), 100000000, 0, -222), 0, (("src/Sigs.ml", 387, 13379, 13381), ("src/Sigs.ml", 387, 13379, 13401), 0), 0, Tag1 ("Fix__Sigs", 74)), 0); (("current", 654), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -221), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -220), 0), 100000000, 0, -219), 0, (("src/Sigs.ml", 391, 13527, 13529), ("src/Sigs.ml", 391, 13527, 13553), 0), 0, Tag1 ("Fix__Sigs", 75)), 0); (("has_been_encoded", 655), ((Tag1 (0, (Tag3 ((("t", 652)), 0, (0)), 100000000, 0, -218), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -217), 0), 100000000, 0, -216), 0, (("src/Sigs.ml", 395, 13648, 13650), ("src/Sigs.ml", 395, 13648, 13681), 0), 0, Tag1 ("Fix__Sigs", 76)), 0); Tag3 (("Done", 656), 0, (Tag2 (0, Tag1 ([Tag1 (("t", 657), (0, 0, 0, 1, ((Tag3 ((("t", 652)), 0, (0)), 100000000, 0, -232)), 0, 0, 0, 0, (("src/Sigs.ml", 432, 14884, 14918), ("src/Sigs.ml", 432, 14884, 14928), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 83)), 1, 0); (("n", 658), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -231), 0, (("src/Sigs.ml", 408, 14023, 14025), ("src/Sigs.ml", 408, 14023, 14035), 0), 0, Tag1 ("Fix__Sigs", 79)), 0); (("encode", 659), ((Tag1 (0, (Tag3 ((("t", 657)), 0, (0)), 100000000, 0, -230), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -229), 0), 100000000, 0, -228), 0, (("src/Sigs.ml", 412, 14132, 14134), ("src/Sigs.ml", 412, 14132, 14154), 0), 0, Tag1 ("Fix__Sigs", 80)), 0); (("decode", 660), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -227), (Tag3 ((("t", 657)), 0, (0)), 100000000, 0, -226), 0), 100000000, 0, -225), 0, (("src/Sigs.ml", 416, 14256, 14258), ("src/Sigs.ml", 416, 14256, 14278), 0), 0, Tag1 ("Fix__Sigs", 81)), 0)])), 0, (("src/Sigs.ml", 432, 14884, 14886), ("src/Sigs.ml", 432, 14884, 14928), 0), Tag1 ("Fix__Sigs", 84)), 0, 0)])), 0, (("src/Sigs.ml", 427, 14760, 14760), ("src/Sigs.ml", 434, 14930, 14933), 0), Tag1 ("Fix__Sigs", 85)), 0); Tag4 (("INJECTION", 583), ((Tag1 ([Tag1 (("t", 661), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 442, 15130, 15132), ("src/Sigs.ml", 442, 15130, 15138), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 86)), 1, 0); Tag1 (("u", 662), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Sigs.ml", 445, 15187, 15189), ("src/Sigs.ml", 445, 15187, 15195), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 87)), 1, 0); (("encode", 663), ((Tag1 (0, (Tag3 ((("t", 661)), 0, (0)), 100000000, 0, -235), (Tag3 ((("u", 662)), 0, (0)), 100000000, 0, -234), 0), 100000000, 0, -233), 0, (("src/Sigs.ml", 450, 15393, 15395), ("src/Sigs.ml", 450, 15393, 15413), 0), 0, Tag1 ("Fix__Sigs", 88)), 0)])), 0, (("src/Sigs.ml", 439, 15059, 15059), ("src/Sigs.ml", 452, 15415, 15418), 0), Tag1 ("Fix__Sigs", 89)), 0)], "Fix__Sigs", [("Fix__Sigs", (")\t\216|\023F\223*n\133c\172iG\005\154")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Fix__", ("\229-\006A\166\175\208\201Y\246\249k\r\n\155i")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

module type INJECTION = sig type t type u val encode : t -> u end
