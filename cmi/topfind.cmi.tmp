val predicates : string list ref
val add_predicates : string list -> unit
val syntax : string -> unit
val standard_syntax : unit -> unit
val revised_syntax : unit -> unit
val don't_load : string list -> unit
val don't_load_deeply : string list -> unit
val load : string list -> unit
val load_deeply : string list -> unit
val reset : unit -> unit
val announce : unit -> unit("DEBUG:rule", [(("predicates", 281), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -43)], (0)), 100000000, 0, -42)], (0)), 100000000, 0, -41), 0, (("topfind.mli", 71, 2408, 2408), ("topfind.mli", 71, 2408, 2440), 0), 0, Tag1 ("Topfind", 0)), 0); (("add_predicates", 282), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -40)], (0)), 100000000, 0, -39), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -38), 0), 100000000, 0, -37), 0, (("topfind.mli", 74, 2499, 2499), ("topfind.mli", 74, 2499, 2539), 0), 0, Tag1 ("Topfind", 1)), 0); (("syntax", 283), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -36), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("topfind.mli", 77, 2592, 2592), ("topfind.mli", 77, 2592, 2619), 0), 0, Tag1 ("Topfind", 2)), 0); (("standard_syntax", 284), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -33), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("topfind.mli", 80, 2660, 2660), ("topfind.mli", 80, 2660, 2694), 0), 0, Tag1 ("Topfind", 3)), 0); (("revised_syntax", 285), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -30), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("topfind.mli", 85, 2789, 2789), ("topfind.mli", 85, 2789, 2822), 0), 0, Tag1 ("Topfind", 4)), 0); (("don't_load", 286), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -27)], (0)), 100000000, 0, -26), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("topfind.mli", 90, 2918, 2918), ("topfind.mli", 90, 2918, 2954), 0), 0, Tag1 ("Topfind", 5)), 0); (("don't_load_deeply", 287), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -23)], (0)), 100000000, 0, -22), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("topfind.mli", 95, 3063, 3063), ("topfind.mli", 95, 3063, 3106), 0), 0, Tag1 ("Topfind", 6)), 0); (("load", 288), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -19)], (0)), 100000000, 0, -18), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("topfind.mli", 100, 3253, 3253), ("topfind.mli", 100, 3253, 3283), 0), 0, Tag1 ("Topfind", 7)), 0); (("load_deeply", 289), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -15)], (0)), 100000000, 0, -14), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("topfind.mli", 105, 3433, 3433), ("topfind.mli", 105, 3433, 3470), 0), 0, Tag1 ("Topfind", 8)), 0); (("reset", 290), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -11), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("topfind.mli", 111, 3660, 3660), ("topfind.mli", 111, 3660, 3684), 0), 0, Tag1 ("Topfind", 9)), 0); (("announce", 291), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -8), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -7), 0), 100000000, 0, -6), 0, (("topfind.mli", 118, 3954, 3954), ("topfind.mli", 118, 3954, 3981), 0), 0, Tag1 ("Topfind", 10)), 0); (("log", 292), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3)], (0)), 100000000, 0, -2), 0, (("topfind.mli", 121, 4019, 4019), ("topfind.mli", 121, 4019, 4049), 0), 0, Tag1 ("Topfind", 11)), 0)], "Topfind", [("Topfind", ("\249P\015\r\227\210\225\1365\222M\152\187\201,\133")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [1; (0)])

val log : (string -> unit) ref
