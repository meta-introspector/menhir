exception Timeout
val enable_thread_delay : bool ref
val interrupt : bool ref
val check_for_interrupt : unit -> unit
val timeout : float -> ('a -> 'b) -> 'a -> 'b option
type timeout = { timeout : 'a 'b. float -> ('a -> 'b) -> 'a -> 'b option; }
val set_timeout : timeout -> unit
("DEBUG:rule", [Tag2 (("Timeout", 278), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Control", 0)), 2, 0); (("enable_thread_delay", 279), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -33)], (0)), 100000000, 0, -32), 0, (("lib/control.mli", 17, 831, 831), ("lib/control.mli", 17, 831, 865), 0), 0, Tag1 ("Control", 1)), 0); (("interrupt", 280), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -31)], (0)), 100000000, 0, -30), 0, (("lib/control.mli", 19, 867, 867), ("lib/control.mli", 19, 867, 891), 0), 0, Tag1 ("Control", 2)), 0); (("check_for_interrupt", 281), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -29), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("lib/control.mli", 23, 1027, 1027), ("lib/control.mli", 23, 1027, 1065), 0), 0, Tag1 ("Control", 3)), 0); (("timeout", 282), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -26), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -24), ((("b")), 100000000, 0, -23), 0), 100000000, 0, -25), (Tag1 (0, ((("a")), 100000000, 0, -24), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -23)], (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("lib/control.mli", 27, 1184, 1184), ("lib/control.mli", 27, 1184, 1236), 0), 0, Tag1 ("Control", 4)), 0); Tag1 (("timeout", 283), (0, 0, [[(("timeout", 275), 0, (Tag10 ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -18), (Tag1 (0, (Tag1 (0, (Tag9 (("a")), 100000000, 0, -11), (Tag9 (("b")), 100000000, 0, -12), 0), 100000000, 0, -17), (Tag1 (0, (Tag9 (("a")), 100000000, 0, -11), (Tag3 ((Tag3 ("option", 10)), [(Tag9 (("b")), 100000000, 0, -12)], (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), [(Tag9 (("a")), 100000000, 0, -11); (Tag9 (("b")), 100000000, 0, -12)]), 100000000, 0, -10), (("lib/control.mli", 33, 1475, 1492), ("lib/control.mli", 33, 1475, 1547), 0), 0, Tag1 ("Control", 6))]], 1, 0, 0, 0, 0, 0, (("lib/control.mli", 33, 1475, 1475), ("lib/control.mli", 33, 1475, 1549), 0), 0, 0, 1, Tag1 ("Control", 5)), 1, 0); (("set_timeout", 284), ((Tag1 (0, (Tag3 ((("timeout", 283)), 0, (0)), 100000000, 0, -9), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("lib/control.mli", 34, 1550, 1550), ("lib/control.mli", 34, 1550, 1583), 0), 0, Tag1 ("Control", 7)), 0); (("protect_sigalrm", 285), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -5), ((("b")), 100000000, 0, -4), 0), 100000000, 0, -6), (Tag1 (0, ((("a")), 100000000, 0, -5), ((("b")), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("lib/control.mli", 45, 1984, 1984), ("lib/control.mli", 45, 1984, 2028), 0), 0, Tag1 ("Control", 8)), 0)], "Control", [("Control", ("\141\152\220\161G\142\240k\232I\208\129\157\011L]")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val protect_sigalrm : ('a -> 'b) -> 'a -> 'b
