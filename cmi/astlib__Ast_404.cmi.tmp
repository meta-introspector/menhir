module Asttypes :
  sig
    type constant =
        Const_int of int
      | Const_char of char
      | Const_string of string * string option
      | Const_float of string
      | Const_int32 of int32
      | Const_int64 of int64
      | Const_nativeint of nativeint
    type rec_flag = Nonrecursive | Recursive
    type direction_flag = Upto | Downto
    type private_flag = Private | Public
    type mutable_flag = Immutable | Mutable
    type virtual_flag = Virtual | Concrete
    type override_flag = Override | Fresh
    type closed_flag = Closed | Open
    type label = string
    type arg_label = Nolabel | Labelled of string | Optional of string
    type 'a loc =
      'a Astlib__.Location.loc = {
      txt : 'a;
      loc : Astlib__.Location.t;
    }
    type variance = Covariant | Contravariant | Invariant
  end
module Parsetree :
  sig
    type constant =
        Pconst_integer of string * char option
      | Pconst_char of char
      | Pconst_string of string * string option
      | Pconst_float of string * char option
    type attribute = string Asttypes.loc * payload
    and extension = string Asttypes.loc * payload
    and attributes = attribute list
    and payload =
        PStr of structure
      | PSig of signature
      | PTyp of core_type
      | PPat of pattern * expression option
    and core_type = {
      ptyp_desc : core_type_desc;
      ptyp_loc : Astlib__.Location.t;
      ptyp_attributes : attributes;
    }
    and core_type_desc =
        Ptyp_any
      | Ptyp_var of string
      | Ptyp_arrow of Asttypes.arg_label * core_type * core_type
      | Ptyp_tuple of core_type list
      | Ptyp_constr of Astlib__.Longident.t Asttypes.loc * core_type list
      | Ptyp_object of (string * attributes * core_type) list *
          Asttypes.closed_flag
      | Ptyp_class of Astlib__.Longident.t Asttypes.loc * core_type list
      | Ptyp_alias of core_type * string
      | Ptyp_variant of row_field list * Asttypes.closed_flag *
          Asttypes.label list option
      | Ptyp_poly of string list * core_type
      | Ptyp_package of package_type
      | Ptyp_extension of extension
    and package_type =
        Astlib__.Longident.t Asttypes.loc *
        (Astlib__.Longident.t Asttypes.loc * core_type) list
    and row_field =
        Rtag of Asttypes.label * attributes * bool * core_type list
      | Rinherit of core_type
    and pattern = {
      ppat_desc : pattern_desc;
      ppat_loc : Astlib__.Location.t;
      ppat_attributes : attributes;
    }
    and pattern_desc =
        Ppat_any
      | Ppat_var of string Asttypes.loc
      | Ppat_alias of pattern * string Asttypes.loc
      | Ppat_constant of constant
      | Ppat_interval of constant * constant
      | Ppat_tuple of pattern list
      | Ppat_construct of Astlib__.Longident.t Asttypes.loc * pattern option
      | Ppat_variant of Asttypes.label * pattern option
      | Ppat_record of (Astlib__.Longident.t Asttypes.loc * pattern) list *
          Asttypes.closed_flag
      | Ppat_array of pattern list
      | Ppat_or of pattern * pattern
      | Ppat_constraint of pattern * core_type
      | Ppat_type of Astlib__.Longident.t Asttypes.loc
      | Ppat_lazy of pattern
      | Ppat_unpack of string Asttypes.loc
      | Ppat_exception of pattern
      | Ppat_extension of extension
      | Ppat_open of Astlib__.Longident.t Asttypes.loc * pattern
    and expression = {
      pexp_desc : expression_desc;
      pexp_loc : Astlib__.Location.t;
      pexp_attributes : attributes;
    }
    and expression_desc =
        Pexp_ident of Astlib__.Longident.t Asttypes.loc
      | Pexp_constant of constant
      | Pexp_let of Asttypes.rec_flag * value_binding list * expression
      | Pexp_function of case list
      | Pexp_fun of Asttypes.arg_label * expression option * pattern *
          expression
      | Pexp_apply of expression * (Asttypes.arg_label * expression) list
      | Pexp_match of expression * case list
      | Pexp_try of expression * case list
      | Pexp_tuple of expression list
      | Pexp_construct of Astlib__.Longident.t Asttypes.loc *
          expression option
      | Pexp_variant of Asttypes.label * expression option
      | Pexp_record of
          (Astlib__.Longident.t Asttypes.loc * expression) list *
          expression option
      | Pexp_field of expression * Astlib__.Longident.t Asttypes.loc
      | Pexp_setfield of expression * Astlib__.Longident.t Asttypes.loc *
          expression
      | Pexp_array of expression list
      | Pexp_ifthenelse of expression * expression * expression option
      | Pexp_sequence of expression * expression
      | Pexp_while of expression * expression
      | Pexp_for of pattern * expression * expression *
          Asttypes.direction_flag * expression
      | Pexp_constraint of expression * core_type
      | Pexp_coerce of expression * core_type option * core_type
      | Pexp_send of expression * string
      | Pexp_new of Astlib__.Longident.t Asttypes.loc
      | Pexp_setinstvar of string Asttypes.loc * expression
      | Pexp_override of (string Asttypes.loc * expression) list
      | Pexp_letmodule of string Asttypes.loc * module_expr * expression
      | Pexp_letexception of extension_constructor * expression
      | Pexp_assert of expression
      | Pexp_lazy of expression
      | Pexp_poly of expression * core_type option
      | Pexp_object of class_structure
      | Pexp_newtype of string * expression
      | Pexp_pack of module_expr
      | Pexp_open of Asttypes.override_flag *
          Astlib__.Longident.t Asttypes.loc * expression
      | Pexp_extension of extension
      | Pexp_unreachable
    and case = {
      pc_lhs : pattern;
      pc_guard : expression option;
      pc_rhs : expression;
    }
    and value_description = {
      pval_name : string Asttypes.loc;
      pval_type : core_type;
      pval_prim : string list;
      pval_attributes : attributes;
      pval_loc : Astlib__.Location.t;
    }
    and type_declaration = {
      ptype_name : string Asttypes.loc;
      ptype_params : (core_type * Asttypes.variance) list;
      ptype_cstrs : (core_type * core_type * Astlib__.Location.t) list;
      ptype_kind : type_kind;
      ptype_private : Asttypes.private_flag;
      ptype_manifest : core_type option;
      ptype_attributes : attributes;
      ptype_loc : Astlib__.Location.t;
    }
    and type_kind =
        Ptype_abstract
      | Ptype_variant of constructor_declaration list
      | Ptype_record of label_declaration list
      | Ptype_open
    and label_declaration = {
      pld_name : string Asttypes.loc;
      pld_mutable : Asttypes.mutable_flag;
      pld_type : core_type;
      pld_loc : Astlib__.Location.t;
      pld_attributes : attributes;
    }
    and constructor_declaration = {
      pcd_name : string Asttypes.loc;
      pcd_args : constructor_arguments;
      pcd_res : core_type option;
      pcd_loc : Astlib__.Location.t;
      pcd_attributes : attributes;
    }
    and constructor_arguments =
        Pcstr_tuple of core_type list
      | Pcstr_record of label_declaration list
    and type_extension = {
      ptyext_path : Astlib__.Longident.t Asttypes.loc;
      ptyext_params : (core_type * Asttypes.variance) list;
      ptyext_constructors : extension_constructor list;
      ptyext_private : Asttypes.private_flag;
      ptyext_attributes : attributes;
    }
    and extension_constructor = {
      pext_name : string Asttypes.loc;
      pext_kind : extension_constructor_kind;
      pext_loc : Astlib__.Location.t;
      pext_attributes : attributes;
    }
    and extension_constructor_kind =
        Pext_decl of constructor_arguments * core_type option
      | Pext_rebind of Astlib__.Longident.t Asttypes.loc
    and class_type = {
      pcty_desc : class_type_desc;
      pcty_loc : Astlib__.Location.t;
      pcty_attributes : attributes;
    }
    and class_type_desc =
        Pcty_constr of Astlib__.Longident.t Asttypes.loc * core_type list
      | Pcty_signature of class_signature
      | Pcty_arrow of Asttypes.arg_label * core_type * class_type
      | Pcty_extension of extension
    and class_signature = {
      pcsig_self : core_type;
      pcsig_fields : class_type_field list;
    }
    and class_type_field = {
      pctf_desc : class_type_field_desc;
      pctf_loc : Astlib__.Location.t;
      pctf_attributes : attributes;
    }
    and class_type_field_desc =
        Pctf_inherit of class_type
      | Pctf_val of
          (string * Asttypes.mutable_flag * Asttypes.virtual_flag * core_type)
      | Pctf_method of
          (string * Asttypes.private_flag * Asttypes.virtual_flag * core_type)
      | Pctf_constraint of (core_type * core_type)
      | Pctf_attribute of attribute
      | Pctf_extension of extension
    and 'a class_infos = {
      pci_virt : Asttypes.virtual_flag;
      pci_params : (core_type * Asttypes.variance) list;
      pci_name : string Asttypes.loc;
      pci_expr : 'a;
      pci_loc : Astlib__.Location.t;
      pci_attributes : attributes;
    }
    and class_description = class_type class_infos
    and class_type_declaration = class_type class_infos
    and class_expr = {
      pcl_desc : class_expr_desc;
      pcl_loc : Astlib__.Location.t;
      pcl_attributes : attributes;
    }
    and class_expr_desc =
        Pcl_constr of Astlib__.Longident.t Asttypes.loc * core_type list
      | Pcl_structure of class_structure
      | Pcl_fun of Asttypes.arg_label * expression option * pattern *
          class_expr
      | Pcl_apply of class_expr * (Asttypes.arg_label * expression) list
      | Pcl_let of Asttypes.rec_flag * value_binding list * class_expr
      | Pcl_constraint of class_expr * class_type
      | Pcl_extension of extension
    and class_structure = {
      pcstr_self : pattern;
      pcstr_fields : class_field list;
    }
    and class_field = {
      pcf_desc : class_field_desc;
      pcf_loc : Astlib__.Location.t;
      pcf_attributes : attributes;
    }
    and class_field_desc =
        Pcf_inherit of Asttypes.override_flag * class_expr * string option
      | Pcf_val of
          (string Asttypes.loc * Asttypes.mutable_flag * class_field_kind)
      | Pcf_method of
          (string Asttypes.loc * Asttypes.private_flag * class_field_kind)
      | Pcf_constraint of (core_type * core_type)
      | Pcf_initializer of expression
      | Pcf_attribute of attribute
      | Pcf_extension of extension
    and class_field_kind =
        Cfk_virtual of core_type
      | Cfk_concrete of Asttypes.override_flag * expression
    and class_declaration = class_expr class_infos
    and module_type = {
      pmty_desc : module_type_desc;
      pmty_loc : Astlib__.Location.t;
      pmty_attributes : attributes;
    }
    and module_type_desc =
        Pmty_ident of Astlib__.Longident.t Asttypes.loc
      | Pmty_signature of signature
      | Pmty_functor of string Asttypes.loc * module_type option *
          module_type
      | Pmty_with of module_type * with_constraint list
      | Pmty_typeof of module_expr
      | Pmty_extension of extension
      | Pmty_alias of Astlib__.Longident.t Asttypes.loc
    and signature = signature_item list
    and signature_item = {
      psig_desc : signature_item_desc;
      psig_loc : Astlib__.Location.t;
    }
    and signature_item_desc =
        Psig_value of value_description
      | Psig_type of Asttypes.rec_flag * type_declaration list
      | Psig_typext of type_extension
      | Psig_exception of extension_constructor
      | Psig_module of module_declaration
      | Psig_recmodule of module_declaration list
      | Psig_modtype of module_type_declaration
      | Psig_open of open_description
      | Psig_include of include_description
      | Psig_class of class_description list
      | Psig_class_type of class_type_declaration list
      | Psig_attribute of attribute
      | Psig_extension of extension * attributes
    and module_declaration = {
      pmd_name : string Asttypes.loc;
      pmd_type : module_type;
      pmd_attributes : attributes;
      pmd_loc : Astlib__.Location.t;
    }
    and module_type_declaration = {
      pmtd_name : string Asttypes.loc;
      pmtd_type : module_type option;
      pmtd_attributes : attributes;
      pmtd_loc : Astlib__.Location.t;
    }
    and open_description = {
      popen_lid : Astlib__.Longident.t Asttypes.loc;
      popen_override : Asttypes.override_flag;
      popen_loc : Astlib__.Location.t;
      popen_attributes : attributes;
    }
    and 'a include_infos = {
      pincl_mod : 'a;
      pincl_loc : Astlib__.Location.t;
      pincl_attributes : attributes;
    }
    and include_description = module_type include_infos
    and include_declaration = module_expr include_infos
    and with_constraint =
        Pwith_type of Astlib__.Longident.t Asttypes.loc * type_declaration
      | Pwith_module of Astlib__.Longident.t Asttypes.loc *
          Astlib__.Longident.t Asttypes.loc
      | Pwith_typesubst of type_declaration
      | Pwith_modsubst of string Asttypes.loc *
          Astlib__.Longident.t Asttypes.loc
    and module_expr = {
      pmod_desc : module_expr_desc;
      pmod_loc : Astlib__.Location.t;
      pmod_attributes : attributes;
    }
    and module_expr_desc =
        Pmod_ident of Astlib__.Longident.t Asttypes.loc
      | Pmod_structure of structure
      | Pmod_functor of string Asttypes.loc * module_type option *
          module_expr
      | Pmod_apply of module_expr * module_expr
      | Pmod_constraint of module_expr * module_type
      | Pmod_unpack of expression
      | Pmod_extension of extension
    and structure = structure_item list
    and structure_item = {
      pstr_desc : structure_item_desc;
      pstr_loc : Astlib__.Location.t;
    }
    and structure_item_desc =
        Pstr_eval of expression * attributes
      | Pstr_value of Asttypes.rec_flag * value_binding list
      | Pstr_primitive of value_description
      | Pstr_type of Asttypes.rec_flag * type_declaration list
      | Pstr_typext of type_extension
      | Pstr_exception of extension_constructor
      | Pstr_module of module_binding
      | Pstr_recmodule of module_binding list
      | Pstr_modtype of module_type_declaration
      | Pstr_open of open_description
      | Pstr_class of class_declaration list
      | Pstr_class_type of class_type_declaration list
      | Pstr_include of include_declaration
      | Pstr_attribute of attribute
      | Pstr_extension of extension * attributes
    and value_binding = {
      pvb_pat : pattern;
      pvb_expr : expression;
      pvb_attributes : attributes;
      pvb_loc : Astlib__.Location.t;
    }
    and module_binding = {
      pmb_name : string Asttypes.loc;
      pmb_expr : module_expr;
      pmb_attributes : attributes;
      pmb_loc : Astlib__.Location.t;
    }
    type toplevel_phrase =
        Ptop_def of structure
      | Ptop_dir of string * directive_argument
    and directive_argument =
        Pdir_none
      | Pdir_string of string
      | Pdir_int of string * char option
      | Pdir_ident of Astlib__.Longident.t
      | Pdir_bool of bool
  end
module Config :
  sig
    val ast_impl_magic_number : string
    val ast_intf_magic_number : string("DEBUG:rule", [Tag3 (("Asttypes", 980), 0, (Tag1 ([Tag1 (("constant", 983), (0, 0, Tag1 ([(("Const_int", 321), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -8)]), 0, (("astlib/ast_404.ml", 24, 1557, 1563), ("astlib/ast_404.ml", 24, 1557, 1579), 0), 0, Tag1 ("Astlib__Ast_404", 1)); (("Const_char", 322), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -9)]), 0, (("astlib/ast_404.ml", 25, 1580, 1584), ("astlib/ast_404.ml", 25, 1580, 1604), 0), 0, Tag1 ("Astlib__Ast_404", 2)); (("Const_string", 323), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -12)], (0)), 100000000, 0, -11)]), 0, (("astlib/ast_404.ml", 26, 1605, 1609), ("astlib/ast_404.ml", 26, 1605, 1649), 0), 0, Tag1 ("Astlib__Ast_404", 3)); (("Const_float", 324), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -13)]), 0, (("astlib/ast_404.ml", 27, 1650, 1654), ("astlib/ast_404.ml", 27, 1650, 1677), 0), 0, Tag1 ("Astlib__Ast_404", 4)); (("Const_int32", 325), ([(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -14)]), 0, (("astlib/ast_404.ml", 28, 1678, 1682), ("astlib/ast_404.ml", 28, 1678, 1704), 0), 0, Tag1 ("Astlib__Ast_404", 5)); (("Const_int64", 326), ([(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -15)]), 0, (("astlib/ast_404.ml", 29, 1705, 1709), ("astlib/ast_404.ml", 29, 1705, 1731), 0), 0, Tag1 ("Astlib__Ast_404", 6)); (("Const_nativeint", 327), ([(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -16)]), 0, (("astlib/ast_404.ml", 30, 1732, 1736), ("astlib/ast_404.ml", 30, 1732, 1766), 0), 0, Tag1 ("Astlib__Ast_404", 7))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 23, 1503, 1505), ("astlib/ast_404.ml", 30, 1732, 1766), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 0)), 1, 0); Tag1 (("rec_flag", 984), (0, 0, Tag1 ([(("Nonrecursive", 329), (0), 0, (("astlib/ast_404.ml", 32, 1768, 1822), ("astlib/ast_404.ml", 32, 1768, 1834), 0), 0, Tag1 ("Astlib__Ast_404", 9)); (("Recursive", 330), (0), 0, (("astlib/ast_404.ml", 32, 1768, 1835), ("astlib/ast_404.ml", 32, 1768, 1846), 0), 0, Tag1 ("Astlib__Ast_404", 10))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 32, 1768, 1770), ("astlib/ast_404.ml", 32, 1768, 1846), 0), 0, 1, 0, Tag1 ("Astlib__Ast_404", 8)), 1, 0); Tag1 (("direction_flag", 985), (0, 0, Tag1 ([(("Upto", 332), (0), 0, (("astlib/ast_404.ml", 34, 1848, 1914), ("astlib/ast_404.ml", 34, 1848, 1918), 0), 0, Tag1 ("Astlib__Ast_404", 12)); (("Downto", 333), (0), 0, (("astlib/ast_404.ml", 34, 1848, 1919), ("astlib/ast_404.ml", 34, 1848, 1927), 0), 0, Tag1 ("Astlib__Ast_404", 13))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 34, 1848, 1850), ("astlib/ast_404.ml", 34, 1848, 1927), 0), 0, 1, 0, Tag1 ("Astlib__Ast_404", 11)), 1, 0); Tag1 (("private_flag", 986), (0, 0, Tag1 ([(("Private", 335), (0), 0, (("astlib/ast_404.ml", 37, 1983, 2045), ("astlib/ast_404.ml", 37, 1983, 2052), 0), 0, Tag1 ("Astlib__Ast_404", 15)); (("Public", 336), (0), 0, (("astlib/ast_404.ml", 37, 1983, 2053), ("astlib/ast_404.ml", 37, 1983, 2061), 0), 0, Tag1 ("Astlib__Ast_404", 16))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 37, 1983, 1985), ("astlib/ast_404.ml", 37, 1983, 2061), 0), 0, 1, 0, Tag1 ("Astlib__Ast_404", 14)), 1, 0); Tag1 (("mutable_flag", 987), (0, 0, Tag1 ([(("Immutable", 338), (0), 0, (("astlib/ast_404.ml", 39, 2063, 2125), ("astlib/ast_404.ml", 39, 2063, 2134), 0), 0, Tag1 ("Astlib__Ast_404", 18)); (("Mutable", 339), (0), 0, (("astlib/ast_404.ml", 39, 2063, 2135), ("astlib/ast_404.ml", 39, 2063, 2144), 0), 0, Tag1 ("Astlib__Ast_404", 19))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 39, 2063, 2065), ("astlib/ast_404.ml", 39, 2063, 2144), 0), 0, 1, 0, Tag1 ("Astlib__Ast_404", 17)), 1, 0); Tag1 (("virtual_flag", 988), (0, 0, Tag1 ([(("Virtual", 341), (0), 0, (("astlib/ast_404.ml", 41, 2146, 2208), ("astlib/ast_404.ml", 41, 2146, 2215), 0), 0, Tag1 ("Astlib__Ast_404", 21)); (("Concrete", 342), (0), 0, (("astlib/ast_404.ml", 41, 2146, 2216), ("astlib/ast_404.ml", 41, 2146, 2226), 0), 0, Tag1 ("Astlib__Ast_404", 22))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 41, 2146, 2148), ("astlib/ast_404.ml", 41, 2146, 2226), 0), 0, 1, 0, Tag1 ("Astlib__Ast_404", 20)), 1, 0); Tag1 (("override_flag", 989), (0, 0, Tag1 ([(("Override", 344), (0), 0, (("astlib/ast_404.ml", 43, 2228, 2292), ("astlib/ast_404.ml", 43, 2228, 2300), 0), 0, Tag1 ("Astlib__Ast_404", 24)); (("Fresh", 345), (0), 0, (("astlib/ast_404.ml", 43, 2228, 2301), ("astlib/ast_404.ml", 43, 2228, 2308), 0), 0, Tag1 ("Astlib__Ast_404", 25))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 43, 2228, 2230), ("astlib/ast_404.ml", 43, 2228, 2308), 0), 0, 1, 0, Tag1 ("Astlib__Ast_404", 23)), 1, 0); Tag1 (("closed_flag", 990), (0, 0, Tag1 ([(("Closed", 347), (0), 0, (("astlib/ast_404.ml", 45, 2310, 2370), ("astlib/ast_404.ml", 45, 2310, 2376), 0), 0, Tag1 ("Astlib__Ast_404", 27)); (("Open", 348), (0), 0, (("astlib/ast_404.ml", 45, 2310, 2377), ("astlib/ast_404.ml", 45, 2310, 2383), 0), 0, Tag1 ("Astlib__Ast_404", 28))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 45, 2310, 2312), ("astlib/ast_404.ml", 45, 2310, 2383), 0), 0, 1, 0, Tag1 ("Astlib__Ast_404", 26)), 1, 0); Tag1 (("label", 991), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7)), 0, 0, 0, 0, (("astlib/ast_404.ml", 47, 2385, 2387), ("astlib/ast_404.ml", 47, 2385, 2406), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 29)), 1, 0); Tag1 (("arg_label", 992), (0, 0, Tag1 ([(("Nolabel", 351), (0), 0, (("astlib/ast_404.ml", 50, 2464, 2470), ("astlib/ast_404.ml", 50, 2464, 2477), 0), 0, Tag1 ("Astlib__Ast_404", 31)); (("Labelled", 352), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5)]), 0, (("astlib/ast_404.ml", 51, 2478, 2482), ("astlib/ast_404.ml", 51, 2478, 2502), 0), 0, Tag1 ("Astlib__Ast_404", 32)); (("Optional", 353), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6)]), 0, (("astlib/ast_404.ml", 52, 2525, 2529), ("astlib/ast_404.ml", 52, 2525, 2549), 0), 0, Tag1 ("Astlib__Ast_404", 33))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 49, 2408, 2410), ("astlib/ast_404.ml", 52, 2525, 2549), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 30)), 1, 0); Tag1 (("loc", 993), ([((("a")), 100000000, 0, -3)], 1, [[(("txt", 355), 0, ((("a")), 100000000, 0, -3), (("astlib/ast_404.ml", 55, 2609, 2613), ("astlib/ast_404.ml", 55, 2609, 2622), 0), 0, Tag1 ("Astlib__Ast_404", 35)); (("loc", 365), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4), (("astlib/ast_404.ml", 56, 2623, 2627), ("astlib/ast_404.ml", 56, 2623, 2644), 0), 0, Tag1 ("Astlib__Ast_404", 36))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "loc"), [((("a")), 100000000, 0, -3)], (0)), 100000000, 0, -2)), [25], [0], 0, 0, (("astlib/ast_404.ml", 54, 2573, 2575), ("astlib/ast_404.ml", 57, 2645, 2648), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 34)), 1, 0); Tag1 (("variance", 994), (0, 0, Tag1 ([(("Covariant", 638), (0), 0, (("astlib/ast_404.ml", 61, 2705, 2709), ("astlib/ast_404.ml", 61, 2705, 2720), 0), 0, Tag1 ("Astlib__Ast_404", 38)); (("Contravariant", 639), (0), 0, (("astlib/ast_404.ml", 62, 2721, 2725), ("astlib/ast_404.ml", 62, 2721, 2740), 0), 0, Tag1 ("Astlib__Ast_404", 39)); (("Invariant", 640), (0), 0, (("astlib/ast_404.ml", 63, 2741, 2745), ("astlib/ast_404.ml", 63, 2741, 2756), 0), 0, Tag1 ("Astlib__Ast_404", 40))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 60, 2651, 2653), ("astlib/ast_404.ml", 63, 2741, 2756), 0), 0, 1, 0, Tag1 ("Astlib__Ast_404", 37)), 1, 0)]), 0, (("astlib/ast_404.ml", 20, 1415, 1415), ("astlib/ast_404.ml", 64, 2757, 2760), 0), Tag1 ("Astlib__Ast_404", 41)), 0, 0); Tag3 (("Parsetree", 981), 0, (Tag1 ([Tag1 (("constant", 995), (0, 0, Tag1 ([(("Pconst_integer", 643), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -541); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -543)], (0)), 100000000, 0, -542)]), 0, (("astlib/ast_404.ml", 72, 2911, 2917), ("astlib/ast_404.ml", 72, 2911, 2955), 0), 0, Tag1 ("Astlib__Ast_404", 43)); (("Pconst_char", 644), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -544)]), 0, (("astlib/ast_404.ml", 78, 3109, 3113), ("astlib/ast_404.ml", 78, 3109, 3134), 0), 0, Tag1 ("Astlib__Ast_404", 44)); (("Pconst_string", 645), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -545); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -547)], (0)), 100000000, 0, -546)]), 0, (("astlib/ast_404.ml", 80, 3149, 3153), ("astlib/ast_404.ml", 80, 3149, 3194), 0), 0, Tag1 ("Astlib__Ast_404", 45)); (("Pconst_float", 646), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -548); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -550)], (0)), 100000000, 0, -549)]), 0, (("astlib/ast_404.ml", 84, 3256, 3260), ("astlib/ast_404.ml", 84, 3256, 3298), 0), 0, Tag1 ("Astlib__Ast_404", 46))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 71, 2856, 2858), ("astlib/ast_404.ml", 84, 3256, 3298), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 42)), 1, 0); Tag1 (("attribute", 996), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -539)], (0)), 100000000, 0, -538); (Tag3 ((("payload", 999)), 0, (0)), 100000000, 0, -540)]), 100000000, 0, -537)), 0, 0, 0, 0, (("astlib/ast_404.ml", 93, 3465, 3467), ("astlib/ast_404.ml", 93, 3465, 3504), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 47)), 1, 0); Tag1 (("extension", 997), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -535)], (0)), 100000000, 0, -534); (Tag3 ((("payload", 999)), 0, (0)), 100000000, 0, -536)]), 100000000, 0, -533)), 0, 0, 0, 0, (("astlib/ast_404.ml", 101, 3679, 3681), ("astlib/ast_404.ml", 101, 3679, 3717), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 48)), 2, 0); Tag1 (("attributes", 998), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("attribute", 996)), 0, (0)), 100000000, 0, -532)], (0)), 100000000, 0, -531)), 0, 0, 0, 0, (("astlib/ast_404.ml", 108, 3842, 3844), ("astlib/ast_404.ml", 108, 3842, 3875), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 49)), 2, 0); Tag1 (("payload", 999), (0, 0, Tag1 ([(("PStr", 703), ([(Tag3 ((("structure", 1047)), 0, (0)), 100000000, 0, -525)]), 0, (("astlib/ast_404.ml", 111, 3929, 3933), ("astlib/ast_404.ml", 111, 3929, 3952), 0), 0, Tag1 ("Astlib__Ast_404", 103)); (("PSig", 704), ([(Tag3 ((("signature", 1035)), 0, (0)), 100000000, 0, -526)]), 0, (("astlib/ast_404.ml", 112, 3953, 3957), ("astlib/ast_404.ml", 112, 3953, 3976), 0), 0, Tag1 ("Astlib__Ast_404", 104)); (("PTyp", 705), ([(Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -527)]), 0, (("astlib/ast_404.ml", 113, 3989, 3993), ("astlib/ast_404.ml", 113, 3989, 4012), 0), 0, Tag1 ("Astlib__Ast_404", 105)); (("PPat", 706), ([(Tag3 ((("pattern", 1004)), 0, (0)), 100000000, 0, -528); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -530)], (0)), 100000000, 0, -529)]), 0, (("astlib/ast_404.ml", 114, 4024, 4028), ("astlib/ast_404.ml", 114, 4024, 4065), 0), 0, Tag1 ("Astlib__Ast_404", 106))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 110, 3877, 3879), ("astlib/ast_404.ml", 114, 4024, 4065), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 50)), 2, 0); Tag1 (("core_type", 1000), (0, 0, [[(("ptyp_desc", 707), 0, (Tag3 ((("core_type_desc", 1001)), 0, (0)), 100000000, 0, -522), (("astlib/ast_404.ml", 122, 4212, 4219), ("astlib/ast_404.ml", 122, 4212, 4245), 0), 0, Tag1 ("Astlib__Ast_404", 107)); (("ptyp_loc", 708), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -523), (("astlib/ast_404.ml", 123, 4246, 4253), ("astlib/ast_404.ml", 123, 4246, 4274), 0), 0, Tag1 ("Astlib__Ast_404", 108)); (("ptyp_attributes", 709), 0, (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -524), (("astlib/ast_404.ml", 124, 4275, 4282), ("astlib/ast_404.ml", 124, 4275, 4310), 0), 0, Tag1 ("Astlib__Ast_404", 109))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 120, 4148, 4150), ("astlib/ast_404.ml", 125, 4335, 4342), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 51)), 2, 0); Tag1 (("core_type_desc", 1001), (0, 0, Tag1 ([(("Ptyp_any", 710), (0), 0, (("astlib/ast_404.ml", 128, 4410, 4414), ("astlib/ast_404.ml", 128, 4410, 4424), 0), 0, Tag1 ("Astlib__Ast_404", 110)); (("Ptyp_var", 711), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -489)]), 0, (("astlib/ast_404.ml", 130, 4444, 4448), ("astlib/ast_404.ml", 130, 4444, 4468), 0), 0, Tag1 ("Astlib__Ast_404", 111)); (("Ptyp_arrow", 712), ([(Tag3 (Tag1 ((("Asttypes", 980)), "arg_label"), 0, (0)), 100000000, 0, -490); (Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -491); (Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -492)]), 0, (("astlib/ast_404.ml", 132, 4488, 4492), ("astlib/ast_404.ml", 132, 4488, 4541), 0), 0, Tag1 ("Astlib__Ast_404", 112)); (("Ptyp_tuple", 713), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -494)], (0)), 100000000, 0, -493)]), 0, (("astlib/ast_404.ml", 137, 4664, 4668), ("astlib/ast_404.ml", 137, 4664, 4698), 0), 0, Tag1 ("Astlib__Ast_404", 113)); (("Ptyp_constr", 714), ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -496)], (0)), 100000000, 0, -495); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -498)], (0)), 100000000, 0, -497)]), 0, (("astlib/ast_404.ml", 142, 4771, 4775), ("astlib/ast_404.ml", 142, 4771, 4824), 0), 0, Tag1 ("Astlib__Ast_404", 114)); (("Ptyp_object", 718), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -501); (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -502); (Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -503)]), 100000000, 0, -500)], (0)), 100000000, 0, -499); (Tag3 (Tag1 ((("Asttypes", 980)), "closed_flag"), 0, (0)), 100000000, 0, -504)]), 0, (("astlib/ast_404.ml", 147, 4918, 4922), ("astlib/ast_404.ml", 147, 4918, 4991), 0), 0, Tag1 ("Astlib__Ast_404", 115)); (("Ptyp_class", 719), ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -506)], (0)), 100000000, 0, -505); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -508)], (0)), 100000000, 0, -507)]), 0, (("astlib/ast_404.ml", 151, 5114, 5118), ("astlib/ast_404.ml", 151, 5114, 5166), 0), 0, Tag1 ("Astlib__Ast_404", 116)); (("Ptyp_alias", 720), ([(Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -509); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -510)]), 0, (("astlib/ast_404.ml", 156, 5263, 5267), ("astlib/ast_404.ml", 156, 5263, 5301), 0), 0, Tag1 ("Astlib__Ast_404", 117)); (("Ptyp_variant", 721), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("row_field", 1003)), 0, (0)), 100000000, 0, -512)], (0)), 100000000, 0, -511); (Tag3 (Tag1 ((("Asttypes", 980)), "closed_flag"), 0, (0)), 100000000, 0, -513); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 980)), "label"), 0, (0)), 100000000, 0, -516)], (0)), 100000000, 0, -515)], (0)), 100000000, 0, -514)]), 0, (("astlib/ast_404.ml", 158, 5326, 5330), ("astlib/ast_404.ml", 158, 5326, 5396), 0), 0, Tag1 ("Astlib__Ast_404", 118)); (("Ptyp_poly", 722), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -518)], (0)), 100000000, 0, -517); (Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -519)]), 0, (("astlib/ast_404.ml", 164, 5672, 5676), ("astlib/ast_404.ml", 164, 5672, 5714), 0), 0, Tag1 ("Astlib__Ast_404", 119)); (("Ptyp_package", 723), ([(Tag3 ((("package_type", 1002)), 0, (0)), 100000000, 0, -520)]), 0, (("astlib/ast_404.ml", 184, 6268, 6272), ("astlib/ast_404.ml", 184, 6268, 6302), 0), 0, Tag1 ("Astlib__Ast_404", 120)); (("Ptyp_extension", 724), ([(Tag3 ((("extension", 997)), 0, (0)), 100000000, 0, -521)]), 0, (("astlib/ast_404.ml", 186, 6330, 6334), ("astlib/ast_404.ml", 186, 6330, 6363), 0), 0, Tag1 ("Astlib__Ast_404", 121))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 127, 4344, 4346), ("astlib/ast_404.ml", 186, 6330, 6363), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 52)), 2, 0); Tag1 (("package_type", 1002), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -483)], (0)), 100000000, 0, -482); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -487)], (0)), 100000000, 0, -486); (Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -488)]), 100000000, 0, -485)], (0)), 100000000, 0, -484)]), 100000000, 0, -481)), 0, 0, 0, 0, (("astlib/ast_404.ml", 189, 6387, 6389), ("astlib/ast_404.ml", 189, 6387, 6460), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 53)), 2, 0); Tag1 (("row_field", 1003), (0, 0, Tag1 ([(("Rtag", 725), ([(Tag3 (Tag1 ((("Asttypes", 980)), "label"), 0, (0)), 100000000, 0, -475); (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -476); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -477); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -479)], (0)), 100000000, 0, -478)]), 0, (("astlib/ast_404.ml", 196, 6621, 6625), ("astlib/ast_404.ml", 196, 6621, 6677), 0), 0, Tag1 ("Astlib__Ast_404", 122)); (("Rinherit", 726), ([(Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -480)]), 0, (("astlib/ast_404.ml", 209, 7201, 7205), ("astlib/ast_404.ml", 209, 7201, 7228), 0), 0, Tag1 ("Astlib__Ast_404", 123))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 195, 6565, 6567), ("astlib/ast_404.ml", 209, 7201, 7228), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 54)), 2, 0); Tag1 (("pattern", 1004), (0, 0, [[(("ppat_desc", 727), 0, (Tag3 ((("pattern_desc", 1005)), 0, (0)), 100000000, 0, -472), (("astlib/ast_404.ml", 216, 7330, 7337), ("astlib/ast_404.ml", 216, 7330, 7361), 0), 0, Tag1 ("Astlib__Ast_404", 124)); (("ppat_loc", 728), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -473), (("astlib/ast_404.ml", 217, 7362, 7369), ("astlib/ast_404.ml", 217, 7362, 7390), 0), 0, Tag1 ("Astlib__Ast_404", 125)); (("ppat_attributes", 729), 0, (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -474), (("astlib/ast_404.ml", 218, 7391, 7398), ("astlib/ast_404.ml", 218, 7391, 7426), 0), 0, Tag1 ("Astlib__Ast_404", 126))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 214, 7270, 7272), ("astlib/ast_404.ml", 219, 7451, 7458), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 55)), 2, 0); Tag1 (("pattern_desc", 1005), (0, 0, Tag1 ([(("Ppat_any", 730), (0), 0, (("astlib/ast_404.ml", 222, 7522, 7526), ("astlib/ast_404.ml", 222, 7522, 7536), 0), 0, Tag1 ("Astlib__Ast_404", 127)); (("Ppat_var", 731), ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -434)], (0)), 100000000, 0, -433)]), 0, (("astlib/ast_404.ml", 224, 7555, 7559), ("astlib/ast_404.ml", 224, 7555, 7583), 0), 0, Tag1 ("Astlib__Ast_404", 128)); (("Ppat_alias", 732), ([(Tag3 ((("pattern", 1004)), 0, (0)), 100000000, 0, -435); (Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -437)], (0)), 100000000, 0, -436)]), 0, (("astlib/ast_404.ml", 226, 7602, 7606), ("astlib/ast_404.ml", 226, 7602, 7642), 0), 0, Tag1 ("Astlib__Ast_404", 129)); (("Ppat_constant", 733), ([(Tag3 ((("constant", 995)), 0, (0)), 100000000, 0, -438)]), 0, (("astlib/ast_404.ml", 228, 7667, 7671), ("astlib/ast_404.ml", 228, 7667, 7698), 0), 0, Tag1 ("Astlib__Ast_404", 130)); (("Ppat_interval", 734), ([(Tag3 ((("constant", 995)), 0, (0)), 100000000, 0, -439); (Tag3 ((("constant", 995)), 0, (0)), 100000000, 0, -440)]), 0, (("astlib/ast_404.ml", 230, 7747, 7751), ("astlib/ast_404.ml", 230, 7747, 7789), 0), 0, Tag1 ("Astlib__Ast_404", 131)); (("Ppat_tuple", 735), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 1004)), 0, (0)), 100000000, 0, -442)], (0)), 100000000, 0, -441)]), 0, (("astlib/ast_404.ml", 235, 7929, 7933), ("astlib/ast_404.ml", 235, 7929, 7961), 0), 0, Tag1 ("Astlib__Ast_404", 132)); (("Ppat_construct", 736), ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -444)], (0)), 100000000, 0, -443); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 1004)), 0, (0)), 100000000, 0, -446)], (0)), 100000000, 0, -445)]), 0, (("astlib/ast_404.ml", 240, 8034, 8038), ("astlib/ast_404.ml", 240, 8034, 8090), 0), 0, Tag1 ("Astlib__Ast_404", 133)); (("Ppat_variant", 737), ([(Tag3 (Tag1 ((("Asttypes", 980)), "label"), 0, (0)), 100000000, 0, -447); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 1004)), 0, (0)), 100000000, 0, -449)], (0)), 100000000, 0, -448)]), 0, (("astlib/ast_404.ml", 245, 8239, 8243), ("astlib/ast_404.ml", 245, 8239, 8283), 0), 0, Tag1 ("Astlib__Ast_404", 134)); (("Ppat_record", 738), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -453)], (0)), 100000000, 0, -452); (Tag3 ((("pattern", 1004)), 0, (0)), 100000000, 0, -454)]), 100000000, 0, -451)], (0)), 100000000, 0, -450); (Tag3 (Tag1 ((("Asttypes", 980)), "closed_flag"), 0, (0)), 100000000, 0, -455)]), 0, (("astlib/ast_404.ml", 249, 8370, 8374), ("astlib/ast_404.ml", 249, 8370, 8437), 0), 0, Tag1 ("Astlib__Ast_404", 135)); (("Ppat_array", 739), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 1004)), 0, (0)), 100000000, 0, -457)], (0)), 100000000, 0, -456)]), 0, (("astlib/ast_404.ml", 255, 8591, 8595), ("astlib/ast_404.ml", 255, 8591, 8623), 0), 0, Tag1 ("Astlib__Ast_404", 136)); (("Ppat_or", 740), ([(Tag3 ((("pattern", 1004)), 0, (0)), 100000000, 0, -458); (Tag3 ((("pattern", 1004)), 0, (0)), 100000000, 0, -459)]), 0, (("astlib/ast_404.ml", 257, 8658, 8662), ("astlib/ast_404.ml", 257, 8658, 8692), 0), 0, Tag1 ("Astlib__Ast_404", 137)); (("Ppat_constraint", 741), ([(Tag3 ((("pattern", 1004)), 0, (0)), 100000000, 0, -460); (Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -461)]), 0, (("astlib/ast_404.ml", 259, 8717, 8721), ("astlib/ast_404.ml", 259, 8717, 8761), 0), 0, Tag1 ("Astlib__Ast_404", 138)); (("Ppat_type", 742), ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -463)], (0)), 100000000, 0, -462)]), 0, (("astlib/ast_404.ml", 261, 8786, 8790), ("astlib/ast_404.ml", 261, 8786, 8820), 0), 0, Tag1 ("Astlib__Ast_404", 139)); (("Ppat_lazy", 743), ([(Tag3 ((("pattern", 1004)), 0, (0)), 100000000, 0, -464)]), 0, (("astlib/ast_404.ml", 263, 8845, 8849), ("astlib/ast_404.ml", 263, 8845, 8871), 0), 0, Tag1 ("Astlib__Ast_404", 140)); (("Ppat_unpack", 744), ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -466)], (0)), 100000000, 0, -465)]), 0, (("astlib/ast_404.ml", 265, 8895, 8899), ("astlib/ast_404.ml", 265, 8895, 8926), 0), 0, Tag1 ("Astlib__Ast_404", 141)); (("Ppat_exception", 745), ([(Tag3 ((("pattern", 1004)), 0, (0)), 100000000, 0, -467)]), 0, (("astlib/ast_404.ml", 270, 9073, 9077), ("astlib/ast_404.ml", 270, 9073, 9104), 0), 0, Tag1 ("Astlib__Ast_404", 142)); (("Ppat_extension", 746), ([(Tag3 ((("extension", 997)), 0, (0)), 100000000, 0, -468)]), 0, (("astlib/ast_404.ml", 272, 9133, 9137), ("astlib/ast_404.ml", 272, 9133, 9166), 0), 0, Tag1 ("Astlib__Ast_404", 143)); (("Ppat_open", 747), ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -470)], (0)), 100000000, 0, -469); (Tag3 ((("pattern", 1004)), 0, (0)), 100000000, 0, -471)]), 0, (("astlib/ast_404.ml", 274, 9189, 9193), ("astlib/ast_404.ml", 274, 9189, 9233), 0), 0, Tag1 ("Astlib__Ast_404", 144))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 221, 7460, 7462), ("astlib/ast_404.ml", 274, 9189, 9233), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 56)), 2, 0); Tag1 (("expression", 1006), (0, 0, [[(("pexp_desc", 748), 0, (Tag3 ((("expression_desc", 1007)), 0, (0)), 100000000, 0, -430), (("astlib/ast_404.ml", 280, 9328, 9335), ("astlib/ast_404.ml", 280, 9328, 9362), 0), 0, Tag1 ("Astlib__Ast_404", 145)); (("pexp_loc", 749), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -431), (("astlib/ast_404.ml", 281, 9363, 9370), ("astlib/ast_404.ml", 281, 9363, 9391), 0), 0, Tag1 ("Astlib__Ast_404", 146)); (("pexp_attributes", 750), 0, (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -432), (("astlib/ast_404.ml", 282, 9392, 9399), ("astlib/ast_404.ml", 282, 9392, 9427), 0), 0, Tag1 ("Astlib__Ast_404", 147))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 278, 9262, 9264), ("astlib/ast_404.ml", 283, 9452, 9459), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 57)), 2, 0); Tag1 (("expression_desc", 1007), (0, 0, Tag1 ([(("Pexp_ident", 751), ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -330)], (0)), 100000000, 0, -329)]), 0, (("astlib/ast_404.ml", 286, 9529, 9533), ("astlib/ast_404.ml", 286, 9529, 9564), 0), 0, Tag1 ("Astlib__Ast_404", 148)); (("Pexp_constant", 752), ([(Tag3 ((("constant", 995)), 0, (0)), 100000000, 0, -331)]), 0, (("astlib/ast_404.ml", 290, 9611, 9615), ("astlib/ast_404.ml", 290, 9611, 9642), 0), 0, Tag1 ("Astlib__Ast_404", 149)); (("Pexp_let", 753), ([(Tag3 (Tag1 ((("Asttypes", 980)), "rec_flag"), 0, (0)), 100000000, 0, -332); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 1050)), 0, (0)), 100000000, 0, -334)], (0)), 100000000, 0, -333); (Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -335)]), 0, (("astlib/ast_404.ml", 292, 9691, 9695), ("astlib/ast_404.ml", 292, 9691, 9751), 0), 0, Tag1 ("Astlib__Ast_404", 150)); (("Pexp_function", 754), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 1008)), 0, (0)), 100000000, 0, -337)], (0)), 100000000, 0, -336)]), 0, (("astlib/ast_404.ml", 296, 9919, 9923), ("astlib/ast_404.ml", 296, 9919, 9951), 0), 0, Tag1 ("Astlib__Ast_404", 151)); (("Pexp_fun", 755), ([(Tag3 (Tag1 ((("Asttypes", 980)), "arg_label"), 0, (0)), 100000000, 0, -338); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -340)], (0)), 100000000, 0, -339); (Tag3 ((("pattern", 1004)), 0, (0)), 100000000, 0, -341); (Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -342)]), 0, (("astlib/ast_404.ml", 298, 10003, 10007), ("astlib/ast_404.ml", 298, 10003, 10073), 0), 0, Tag1 ("Astlib__Ast_404", 152)); (("Pexp_apply", 756), ([(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -343); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 980)), "arg_label"), 0, (0)), 100000000, 0, -346); (Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -347)]), 100000000, 0, -345)], (0)), 100000000, 0, -344)]), 0, (("astlib/ast_404.ml", 309, 10578, 10582), ("astlib/ast_404.ml", 309, 10578, 10640), 0), 0, Tag1 ("Astlib__Ast_404", 153)); (("Pexp_match", 757), ([(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -348); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 1008)), 0, (0)), 100000000, 0, -350)], (0)), 100000000, 0, -349)]), 0, (("astlib/ast_404.ml", 316, 10824, 10828), ("astlib/ast_404.ml", 316, 10824, 10866), 0), 0, Tag1 ("Astlib__Ast_404", 154)); (("Pexp_try", 758), ([(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -351); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 1008)), 0, (0)), 100000000, 0, -353)], (0)), 100000000, 0, -352)]), 0, (("astlib/ast_404.ml", 318, 10923, 10927), ("astlib/ast_404.ml", 318, 10923, 10963), 0), 0, Tag1 ("Astlib__Ast_404", 155)); (("Pexp_tuple", 759), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -355)], (0)), 100000000, 0, -354)]), 0, (("astlib/ast_404.ml", 320, 11018, 11022), ("astlib/ast_404.ml", 320, 11018, 11053), 0), 0, Tag1 ("Astlib__Ast_404", 156)); (("Pexp_construct", 760), ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -357)], (0)), 100000000, 0, -356); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -359)], (0)), 100000000, 0, -358)]), 0, (("astlib/ast_404.ml", 325, 11126, 11130), ("astlib/ast_404.ml", 325, 11126, 11185), 0), 0, Tag1 ("Astlib__Ast_404", 157)); (("Pexp_variant", 761), ([(Tag3 (Tag1 ((("Asttypes", 980)), "label"), 0, (0)), 100000000, 0, -360); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -362)], (0)), 100000000, 0, -361)]), 0, (("astlib/ast_404.ml", 330, 11330, 11334), ("astlib/ast_404.ml", 330, 11330, 11377), 0), 0, Tag1 ("Astlib__Ast_404", 158)); (("Pexp_record", 762), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -366)], (0)), 100000000, 0, -365); (Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -367)]), 100000000, 0, -364)], (0)), 100000000, 0, -363); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -369)], (0)), 100000000, 0, -368)]), 0, (("astlib/ast_404.ml", 334, 11464, 11468), ("astlib/ast_404.ml", 334, 11464, 11540), 0), 0, Tag1 ("Astlib__Ast_404", 159)); (("Pexp_field", 763), ([(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -370); (Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -372)], (0)), 100000000, 0, -371)]), 0, (("astlib/ast_404.ml", 340, 11687, 11691), ("astlib/ast_404.ml", 340, 11687, 11735), 0), 0, Tag1 ("Astlib__Ast_404", 160)); (("Pexp_setfield", 764), ([(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -373); (Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -375)], (0)), 100000000, 0, -374); (Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -376)]), 0, (("astlib/ast_404.ml", 342, 11756, 11760), ("astlib/ast_404.ml", 342, 11756, 11820), 0), 0, Tag1 ("Astlib__Ast_404", 161)); (("Pexp_array", 765), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -378)], (0)), 100000000, 0, -377)]), 0, (("astlib/ast_404.ml", 344, 11848, 11852), ("astlib/ast_404.ml", 344, 11848, 11883), 0), 0, Tag1 ("Astlib__Ast_404", 162)); (("Pexp_ifthenelse", 766), ([(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -379); (Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -380); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -382)], (0)), 100000000, 0, -381)]), 0, (("astlib/ast_404.ml", 346, 11918, 11922), ("astlib/ast_404.ml", 346, 11918, 11986), 0), 0, Tag1 ("Astlib__Ast_404", 163)); (("Pexp_sequence", 767), ([(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -383); (Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -384)]), 0, (("astlib/ast_404.ml", 348, 12025, 12029), ("astlib/ast_404.ml", 348, 12025, 12071), 0), 0, Tag1 ("Astlib__Ast_404", 164)); (("Pexp_while", 768), ([(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -385); (Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -386)]), 0, (("astlib/ast_404.ml", 350, 12095, 12099), ("astlib/ast_404.ml", 350, 12095, 12138), 0), 0, Tag1 ("Astlib__Ast_404", 165)); (("Pexp_for", 769), ([(Tag3 ((("pattern", 1004)), 0, (0)), 100000000, 0, -387); (Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -388); (Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -389); (Tag3 (Tag1 ((("Asttypes", 980)), "direction_flag"), 0, (0)), 100000000, 0, -390); (Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -391)]), 0, (("astlib/ast_404.ml", 352, 12175, 12179), ("astlib/ast_404.ml", 353, 12193, 12265), 0), 0, Tag1 ("Astlib__Ast_404", 166)); (("Pexp_constraint", 770), ([(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -392); (Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -393)]), 0, (("astlib/ast_404.ml", 357, 12402, 12406), ("astlib/ast_404.ml", 357, 12402, 12449), 0), 0, Tag1 ("Astlib__Ast_404", 167)); (("Pexp_coerce", 771), ([(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -394); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -396)], (0)), 100000000, 0, -395); (Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -397)]), 0, (("astlib/ast_404.ml", 359, 12474, 12478), ("astlib/ast_404.ml", 359, 12474, 12536), 0), 0, Tag1 ("Astlib__Ast_404", 168)); (("Pexp_send", 772), ([(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -398); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -399)]), 0, (("astlib/ast_404.ml", 363, 12632, 12636), ("astlib/ast_404.ml", 363, 12632, 12670), 0), 0, Tag1 ("Astlib__Ast_404", 169)); (("Pexp_new", 773), ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -401)], (0)), 100000000, 0, -400)]), 0, (("astlib/ast_404.ml", 365, 12694, 12698), ("astlib/ast_404.ml", 365, 12694, 12727), 0), 0, Tag1 ("Astlib__Ast_404", 170)); (("Pexp_setinstvar", 774), ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -403)], (0)), 100000000, 0, -402); (Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -404)]), 0, (("astlib/ast_404.ml", 367, 12752, 12756), ("astlib/ast_404.ml", 367, 12752, 12800), 0), 0, Tag1 ("Astlib__Ast_404", 171)); (("Pexp_override", 775), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -408)], (0)), 100000000, 0, -407); (Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -409)]), 100000000, 0, -406)], (0)), 100000000, 0, -405)]), 0, (("astlib/ast_404.ml", 369, 12824, 12828), ("astlib/ast_404.ml", 369, 12824, 12877), 0), 0, Tag1 ("Astlib__Ast_404", 172)); (("Pexp_letmodule", 776), ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -411)], (0)), 100000000, 0, -410); (Tag3 ((("module_expr", 1045)), 0, (0)), 100000000, 0, -412); (Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -413)]), 0, (("astlib/ast_404.ml", 371, 12922, 12926), ("astlib/ast_404.ml", 371, 12922, 12983), 0), 0, Tag1 ("Astlib__Ast_404", 173)); (("Pexp_letexception", 777), ([(Tag3 ((("extension_constructor", 1016)), 0, (0)), 100000000, 0, -414); (Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -415)]), 0, (("astlib/ast_404.ml", 373, 13023, 13027), ("astlib/ast_404.ml", 373, 13023, 13084), 0), 0, Tag1 ("Astlib__Ast_404", 174)); (("Pexp_assert", 778), ([(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -416)]), 0, (("astlib/ast_404.ml", 375, 13122, 13126), ("astlib/ast_404.ml", 375, 13122, 13153), 0), 0, Tag1 ("Astlib__Ast_404", 175)); (("Pexp_lazy", 779), ([(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -417)]), 0, (("astlib/ast_404.ml", 379, 13275, 13279), ("astlib/ast_404.ml", 379, 13275, 13304), 0), 0, Tag1 ("Astlib__Ast_404", 176)); (("Pexp_poly", 780), ([(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -418); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -420)], (0)), 100000000, 0, -419)]), 0, (("astlib/ast_404.ml", 381, 13328, 13332), ("astlib/ast_404.ml", 381, 13328, 13376), 0), 0, Tag1 ("Astlib__Ast_404", 177)); (("Pexp_object", 781), ([(Tag3 ((("class_structure", 1028)), 0, (0)), 100000000, 0, -421)]), 0, (("astlib/ast_404.ml", 386, 13524, 13528), ("astlib/ast_404.ml", 386, 13524, 13560), 0), 0, Tag1 ("Astlib__Ast_404", 178)); (("Pexp_newtype", 782), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -422); (Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -423)]), 0, (("astlib/ast_404.ml", 388, 13592, 13596), ("astlib/ast_404.ml", 388, 13592, 13633), 0), 0, Tag1 ("Astlib__Ast_404", 179)); (("Pexp_pack", 783), ([(Tag3 ((("module_expr", 1045)), 0, (0)), 100000000, 0, -424)]), 0, (("astlib/ast_404.ml", 390, 13668, 13672), ("astlib/ast_404.ml", 390, 13668, 13698), 0), 0, Tag1 ("Astlib__Ast_404", 180)); (("Pexp_open", 784), ([(Tag3 (Tag1 ((("Asttypes", 980)), "override_flag"), 0, (0)), 100000000, 0, -425); (Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -427)], (0)), 100000000, 0, -426); (Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -428)]), 0, (("astlib/ast_404.ml", 395, 13831, 13835), ("astlib/ast_404.ml", 395, 13831, 13894), 0), 0, Tag1 ("Astlib__Ast_404", 181)); (("Pexp_extension", 785), ([(Tag3 ((("extension", 997)), 0, (0)), 100000000, 0, -429)]), 0, (("astlib/ast_404.ml", 399, 13967, 13971), ("astlib/ast_404.ml", 399, 13967, 14000), 0), 0, Tag1 ("Astlib__Ast_404", 182)); (("Pexp_unreachable", 786), (0), 0, (("astlib/ast_404.ml", 401, 14023, 14027), ("astlib/ast_404.ml", 401, 14023, 14045), 0), 0, Tag1 ("Astlib__Ast_404", 183))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 285, 9461, 9463), ("astlib/ast_404.ml", 401, 14023, 14045), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 58)), 2, 0); Tag1 (("case", 1008), (0, 0, [[(("pc_lhs", 787), 0, (Tag3 ((("pattern", 1004)), 0, (0)), 100000000, 0, -325), (("astlib/ast_404.ml", 406, 14156, 14163), ("astlib/ast_404.ml", 406, 14156, 14179), 0), 0, Tag1 ("Astlib__Ast_404", 184)); (("pc_guard", 788), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -327)], (0)), 100000000, 0, -326), (("astlib/ast_404.ml", 407, 14180, 14187), ("astlib/ast_404.ml", 407, 14180, 14215), 0), 0, Tag1 ("Astlib__Ast_404", 185)); (("pc_rhs", 789), 0, (Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -328), (("astlib/ast_404.ml", 408, 14216, 14223), ("astlib/ast_404.ml", 408, 14216, 14242), 0), 0, Tag1 ("Astlib__Ast_404", 186))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 404, 14065, 14067), ("astlib/ast_404.ml", 409, 14243, 14250), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 59)), 2, 0); Tag1 (("value_description", 1009), (0, 0, [[(("pval_name", 790), 0, (Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -319)], (0)), 100000000, 0, -318), (("astlib/ast_404.ml", 415, 14360, 14367), ("astlib/ast_404.ml", 415, 14360, 14389), 0), 0, Tag1 ("Astlib__Ast_404", 187)); (("pval_type", 791), 0, (Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -320), (("astlib/ast_404.ml", 416, 14390, 14397), ("astlib/ast_404.ml", 416, 14390, 14418), 0), 0, Tag1 ("Astlib__Ast_404", 188)); (("pval_prim", 792), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -322)], (0)), 100000000, 0, -321), (("astlib/ast_404.ml", 417, 14419, 14426), ("astlib/ast_404.ml", 417, 14419, 14449), 0), 0, Tag1 ("Astlib__Ast_404", 189)); (("pval_attributes", 793), 0, (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -323), (("astlib/ast_404.ml", 418, 14450, 14457), ("astlib/ast_404.ml", 418, 14450, 14485), 0), 0, Tag1 ("Astlib__Ast_404", 190)); (("pval_loc", 794), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -324), (("astlib/ast_404.ml", 419, 14513, 14520), ("astlib/ast_404.ml", 419, 14513, 14541), 0), 0, Tag1 ("Astlib__Ast_404", 191))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 413, 14280, 14282), ("astlib/ast_404.ml", 420, 14542, 14549), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 60)), 2, 0); Tag1 (("type_declaration", 1010), (0, 0, [[(("ptype_name", 795), 0, (Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -302)], (0)), 100000000, 0, -301), (("astlib/ast_404.ml", 431, 14783, 14790), ("astlib/ast_404.ml", 431, 14783, 14813), 0), 0, Tag1 ("Astlib__Ast_404", 192)); (("ptype_params", 796), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -305); (Tag3 (Tag1 ((("Asttypes", 980)), "variance"), 0, (0)), 100000000, 0, -306)]), 100000000, 0, -304)], (0)), 100000000, 0, -303), (("astlib/ast_404.ml", 432, 14814, 14821), ("astlib/ast_404.ml", 432, 14814, 14863), 0), 0, Tag1 ("Astlib__Ast_404", 193)); (("ptype_cstrs", 797), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -309); (Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -310); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -311)]), 100000000, 0, -308)], (0)), 100000000, 0, -307), (("astlib/ast_404.ml", 434, 14917, 14924), ("astlib/ast_404.ml", 434, 14917, 14979), 0), 0, Tag1 ("Astlib__Ast_404", 194)); (("ptype_kind", 798), 0, (Tag3 ((("type_kind", 1011)), 0, (0)), 100000000, 0, -312), (("astlib/ast_404.ml", 436, 15044, 15051), ("astlib/ast_404.ml", 436, 15044, 15073), 0), 0, Tag1 ("Astlib__Ast_404", 195)); (("ptype_private", 799), 0, (Tag3 (Tag1 ((("Asttypes", 980)), "private_flag"), 0, (0)), 100000000, 0, -313), (("astlib/ast_404.ml", 437, 15074, 15081), ("astlib/ast_404.ml", 437, 15074, 15109), 0), 0, Tag1 ("Astlib__Ast_404", 196)); (("ptype_manifest", 800), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -315)], (0)), 100000000, 0, -314), (("astlib/ast_404.ml", 438, 15132, 15139), ("astlib/ast_404.ml", 438, 15132, 15172), 0), 0, Tag1 ("Astlib__Ast_404", 197)); (("ptype_attributes", 801), 0, (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -316), (("astlib/ast_404.ml", 439, 15184, 15191), ("astlib/ast_404.ml", 439, 15184, 15220), 0), 0, Tag1 ("Astlib__Ast_404", 198)); (("ptype_loc", 802), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -317), (("astlib/ast_404.ml", 440, 15249, 15256), ("astlib/ast_404.ml", 440, 15249, 15278), 0), 0, Tag1 ("Astlib__Ast_404", 199))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 429, 14705, 14707), ("astlib/ast_404.ml", 441, 15279, 15286), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 61)), 2, 0); Tag1 (("type_kind", 1011), (0, 0, Tag1 ([(("Ptype_abstract", 803), (0), 0, (("astlib/ast_404.ml", 454, 15740, 15744), ("astlib/ast_404.ml", 454, 15740, 15760), 0), 0, Tag1 ("Astlib__Ast_404", 200)); (("Ptype_variant", 804), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("constructor_declaration", 1013)), 0, (0)), 100000000, 0, -298)], (0)), 100000000, 0, -297)]), 0, (("astlib/ast_404.ml", 455, 15761, 15765), ("astlib/ast_404.ml", 455, 15761, 15812), 0), 0, Tag1 ("Astlib__Ast_404", 201)); (("Ptype_record", 805), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 1012)), 0, (0)), 100000000, 0, -300)], (0)), 100000000, 0, -299)]), 0, (("astlib/ast_404.ml", 457, 15855, 15859), ("astlib/ast_404.ml", 457, 15855, 15899), 0), 0, Tag1 ("Astlib__Ast_404", 202)); (("Ptype_open", 806), (0), 0, (("astlib/ast_404.ml", 459, 15942, 15946), ("astlib/ast_404.ml", 459, 15942, 15958), 0), 0, Tag1 ("Astlib__Ast_404", 203))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 453, 15684, 15686), ("astlib/ast_404.ml", 459, 15942, 15958), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 62)), 2, 0); Tag1 (("label_declaration", 1012), (0, 0, [[(("pld_name", 807), 0, (Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -292)], (0)), 100000000, 0, -291), (("astlib/ast_404.ml", 463, 16040, 16047), ("astlib/ast_404.ml", 463, 16040, 16068), 0), 0, Tag1 ("Astlib__Ast_404", 204)); (("pld_mutable", 808), 0, (Tag3 (Tag1 ((("Asttypes", 980)), "mutable_flag"), 0, (0)), 100000000, 0, -293), (("astlib/ast_404.ml", 464, 16069, 16076), ("astlib/ast_404.ml", 464, 16069, 16102), 0), 0, Tag1 ("Astlib__Ast_404", 205)); (("pld_type", 809), 0, (Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -294), (("astlib/ast_404.ml", 465, 16103, 16110), ("astlib/ast_404.ml", 465, 16103, 16130), 0), 0, Tag1 ("Astlib__Ast_404", 206)); (("pld_loc", 810), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -295), (("astlib/ast_404.ml", 466, 16131, 16138), ("astlib/ast_404.ml", 466, 16131, 16158), 0), 0, Tag1 ("Astlib__Ast_404", 207)); (("pld_attributes", 811), 0, (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -296), (("astlib/ast_404.ml", 467, 16159, 16166), ("astlib/ast_404.ml", 467, 16159, 16193), 0), 0, Tag1 ("Astlib__Ast_404", 208))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 461, 15960, 15962), ("astlib/ast_404.ml", 468, 16220, 16227), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 63)), 2, 0); Tag1 (("constructor_declaration", 1013), (0, 0, [[(("pcd_name", 812), 0, (Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -285)], (0)), 100000000, 0, -284), (("astlib/ast_404.ml", 478, 16472, 16479), ("astlib/ast_404.ml", 478, 16472, 16500), 0), 0, Tag1 ("Astlib__Ast_404", 209)); (("pcd_args", 813), 0, (Tag3 ((("constructor_arguments", 1014)), 0, (0)), 100000000, 0, -286), (("astlib/ast_404.ml", 479, 16501, 16508), ("astlib/ast_404.ml", 479, 16501, 16540), 0), 0, Tag1 ("Astlib__Ast_404", 210)); (("pcd_res", 814), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -288)], (0)), 100000000, 0, -287), (("astlib/ast_404.ml", 480, 16541, 16548), ("astlib/ast_404.ml", 480, 16541, 16574), 0), 0, Tag1 ("Astlib__Ast_404", 211)); (("pcd_loc", 815), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -289), (("astlib/ast_404.ml", 481, 16575, 16582), ("astlib/ast_404.ml", 481, 16575, 16602), 0), 0, Tag1 ("Astlib__Ast_404", 212)); (("pcd_attributes", 816), 0, (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -290), (("astlib/ast_404.ml", 482, 16603, 16610), ("astlib/ast_404.ml", 482, 16603, 16637), 0), 0, Tag1 ("Astlib__Ast_404", 213))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 476, 16380, 16382), ("astlib/ast_404.ml", 483, 16667, 16674), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 64)), 2, 0); Tag1 (("constructor_arguments", 1014), (0, 0, Tag1 ([(("Pcstr_tuple", 817), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -281)], (0)), 100000000, 0, -280)]), 0, (("astlib/ast_404.ml", 486, 16756, 16760), ("astlib/ast_404.ml", 486, 16756, 16791), 0), 0, Tag1 ("Astlib__Ast_404", 214)); (("Pcstr_record", 818), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 1012)), 0, (0)), 100000000, 0, -283)], (0)), 100000000, 0, -282)]), 0, (("astlib/ast_404.ml", 487, 16792, 16796), ("astlib/ast_404.ml", 487, 16792, 16836), 0), 0, Tag1 ("Astlib__Ast_404", 215))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 485, 16676, 16678), ("astlib/ast_404.ml", 487, 16792, 16836), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 65)), 2, 0); Tag1 (("type_extension", 1015), (0, 0, [[(("ptyext_path", 819), 0, (Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -271)], (0)), 100000000, 0, -270), (("astlib/ast_404.ml", 500, 17310, 17317), ("astlib/ast_404.ml", 500, 17310, 17346), 0), 0, Tag1 ("Astlib__Ast_404", 216)); (("ptyext_params", 820), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -274); (Tag3 (Tag1 ((("Asttypes", 980)), "variance"), 0, (0)), 100000000, 0, -275)]), 100000000, 0, -273)], (0)), 100000000, 0, -272), (("astlib/ast_404.ml", 501, 17347, 17354), ("astlib/ast_404.ml", 501, 17347, 17397), 0), 0, Tag1 ("Astlib__Ast_404", 217)); (("ptyext_constructors", 821), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("extension_constructor", 1016)), 0, (0)), 100000000, 0, -277)], (0)), 100000000, 0, -276), (("astlib/ast_404.ml", 502, 17398, 17405), ("astlib/ast_404.ml", 502, 17398, 17453), 0), 0, Tag1 ("Astlib__Ast_404", 218)); (("ptyext_private", 822), 0, (Tag3 (Tag1 ((("Asttypes", 980)), "private_flag"), 0, (0)), 100000000, 0, -278), (("astlib/ast_404.ml", 503, 17454, 17461), ("astlib/ast_404.ml", 503, 17454, 17490), 0), 0, Tag1 ("Astlib__Ast_404", 219)); (("ptyext_attributes", 823), 0, (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -279), (("astlib/ast_404.ml", 504, 17491, 17498), ("astlib/ast_404.ml", 504, 17491, 17528), 0), 0, Tag1 ("Astlib__Ast_404", 220))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 498, 17236, 17238), ("astlib/ast_404.ml", 505, 17557, 17564), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 66)), 2, 0); Tag1 (("extension_constructor", 1016), (0, 0, [[(("pext_name", 824), 0, (Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -266)], (0)), 100000000, 0, -265), (("astlib/ast_404.ml", 512, 17682, 17689), ("astlib/ast_404.ml", 512, 17682, 17711), 0), 0, Tag1 ("Astlib__Ast_404", 221)); (("pext_kind", 825), 0, (Tag3 ((("extension_constructor_kind", 1017)), 0, (0)), 100000000, 0, -267), (("astlib/ast_404.ml", 513, 17712, 17719), ("astlib/ast_404.ml", 513, 17712, 17758), 0), 0, Tag1 ("Astlib__Ast_404", 222)); (("pext_loc", 826), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -268), (("astlib/ast_404.ml", 514, 17759, 17766), ("astlib/ast_404.ml", 514, 17759, 17788), 0), 0, Tag1 ("Astlib__Ast_404", 223)); (("pext_attributes", 827), 0, (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -269), (("astlib/ast_404.ml", 515, 17789, 17796), ("astlib/ast_404.ml", 515, 17789, 17824), 0), 0, Tag1 ("Astlib__Ast_404", 224))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 510, 17594, 17596), ("astlib/ast_404.ml", 516, 17854, 17861), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 67)), 2, 0); Tag1 (("extension_constructor_kind", 1017), (0, 0, Tag1 ([(("Pext_decl", 828), ([(Tag3 ((("constructor_arguments", 1014)), 0, (0)), 100000000, 0, -260); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -262)], (0)), 100000000, 0, -261)]), 0, (("astlib/ast_404.ml", 519, 17953, 17959), ("astlib/ast_404.ml", 519, 17953, 18012), 0), 0, Tag1 ("Astlib__Ast_404", 225)); (("Pext_rebind", 829), ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -264)], (0)), 100000000, 0, -263)]), 0, (("astlib/ast_404.ml", 525, 18205, 18209), ("astlib/ast_404.ml", 525, 18205, 18241), 0), 0, Tag1 ("Astlib__Ast_404", 226))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 518, 17863, 17865), ("astlib/ast_404.ml", 525, 18205, 18241), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 68)), 2, 0); Tag1 (("class_type", 1018), (0, 0, [[(("pcty_desc", 830), 0, (Tag3 ((("class_type_desc", 1019)), 0, (0)), 100000000, 0, -257), (("astlib/ast_404.ml", 536, 18429, 18436), ("astlib/ast_404.ml", 536, 18429, 18463), 0), 0, Tag1 ("Astlib__Ast_404", 227)); (("pcty_loc", 831), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -258), (("astlib/ast_404.ml", 537, 18464, 18471), ("astlib/ast_404.ml", 537, 18464, 18492), 0), 0, Tag1 ("Astlib__Ast_404", 228)); (("pcty_attributes", 832), 0, (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -259), (("astlib/ast_404.ml", 538, 18493, 18500), ("astlib/ast_404.ml", 538, 18493, 18528), 0), 0, Tag1 ("Astlib__Ast_404", 229))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 534, 18363, 18365), ("astlib/ast_404.ml", 539, 18553, 18560), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 69)), 2, 0); Tag1 (("class_type_desc", 1019), (0, 0, Tag1 ([(("Pcty_constr", 833), ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -249)], (0)), 100000000, 0, -248); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -251)], (0)), 100000000, 0, -250)]), 0, (("astlib/ast_404.ml", 542, 18630, 18634), ("astlib/ast_404.ml", 542, 18630, 18683), 0), 0, Tag1 ("Astlib__Ast_404", 230)); (("Pcty_signature", 834), ([(Tag3 ((("class_signature", 1020)), 0, (0)), 100000000, 0, -252)]), 0, (("astlib/ast_404.ml", 545, 18733, 18737), ("astlib/ast_404.ml", 545, 18733, 18772), 0), 0, Tag1 ("Astlib__Ast_404", 231)); (("Pcty_arrow", 835), ([(Tag3 (Tag1 ((("Asttypes", 980)), "arg_label"), 0, (0)), 100000000, 0, -253); (Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -254); (Tag3 ((("class_type", 1018)), 0, (0)), 100000000, 0, -255)]), 0, (("astlib/ast_404.ml", 547, 18804, 18808), ("astlib/ast_404.ml", 547, 18804, 18858), 0), 0, Tag1 ("Astlib__Ast_404", 232)); (("Pcty_extension", 836), ([(Tag3 ((("extension", 997)), 0, (0)), 100000000, 0, -256)]), 0, (("astlib/ast_404.ml", 552, 18983, 18987), ("astlib/ast_404.ml", 552, 18983, 19016), 0), 0, Tag1 ("Astlib__Ast_404", 233))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 541, 18562, 18564), ("astlib/ast_404.ml", 552, 18983, 19016), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 70)), 2, 0); Tag1 (("class_signature", 1020), (0, 0, [[(("pcsig_self", 837), 0, (Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -245), (("astlib/ast_404.ml", 557, 19116, 19123), ("astlib/ast_404.ml", 557, 19116, 19145), 0), 0, Tag1 ("Astlib__Ast_404", 234)); (("pcsig_fields", 838), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_field", 1021)), 0, (0)), 100000000, 0, -247)], (0)), 100000000, 0, -246), (("astlib/ast_404.ml", 558, 19146, 19153), ("astlib/ast_404.ml", 558, 19146, 19189), 0), 0, Tag1 ("Astlib__Ast_404", 235))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 555, 19040, 19042), ("astlib/ast_404.ml", 559, 19190, 19197), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 71)), 2, 0); Tag1 (("class_type_field", 1021), (0, 0, [[(("pctf_desc", 839), 0, (Tag3 ((("class_type_field_desc", 1022)), 0, (0)), 100000000, 0, -242), (("astlib/ast_404.ml", 566, 19363, 19370), ("astlib/ast_404.ml", 566, 19363, 19403), 0), 0, Tag1 ("Astlib__Ast_404", 236)); (("pctf_loc", 840), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -243), (("astlib/ast_404.ml", 567, 19404, 19411), ("astlib/ast_404.ml", 567, 19404, 19432), 0), 0, Tag1 ("Astlib__Ast_404", 237)); (("pctf_attributes", 841), 0, (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -244), (("astlib/ast_404.ml", 568, 19433, 19440), ("astlib/ast_404.ml", 568, 19433, 19468), 0), 0, Tag1 ("Astlib__Ast_404", 238))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 564, 19285, 19287), ("astlib/ast_404.ml", 569, 19495, 19502), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 72)), 2, 0); Tag1 (("class_type_field_desc", 1022), (0, 0, Tag1 ([(("Pctf_inherit", 842), ([(Tag3 ((("class_type", 1018)), 0, (0)), 100000000, 0, -226)]), 0, (("astlib/ast_404.ml", 572, 19584, 19588), ("astlib/ast_404.ml", 572, 19584, 19616), 0), 0, Tag1 ("Astlib__Ast_404", 239)); (("Pctf_val", 843), ([(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -228); (Tag3 (Tag1 ((("Asttypes", 980)), "mutable_flag"), 0, (0)), 100000000, 0, -229); (Tag3 (Tag1 ((("Asttypes", 980)), "virtual_flag"), 0, (0)), 100000000, 0, -230); (Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -231)]), 100000000, 0, -227)]), 0, (("astlib/ast_404.ml", 574, 19644, 19648), ("astlib/ast_404.ml", 574, 19644, 19712), 0), 0, Tag1 ("Astlib__Ast_404", 240)); (("Pctf_method", 844), ([(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -233); (Tag3 (Tag1 ((("Asttypes", 980)), "private_flag"), 0, (0)), 100000000, 0, -234); (Tag3 (Tag1 ((("Asttypes", 980)), "virtual_flag"), 0, (0)), 100000000, 0, -235); (Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -236)]), 100000000, 0, -232)]), 0, (("astlib/ast_404.ml", 576, 19738, 19742), ("astlib/ast_404.ml", 576, 19738, 19810), 0), 0, Tag1 ("Astlib__Ast_404", 241)); (("Pctf_constraint", 845), ([(Tag2 ([(Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -238); (Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -239)]), 100000000, 0, -237)]), 0, (("astlib/ast_404.ml", 581, 19892, 19896), ("astlib/ast_404.ml", 581, 19892, 19941), 0), 0, Tag1 ("Astlib__Ast_404", 242)); (("Pctf_attribute", 846), ([(Tag3 ((("attribute", 996)), 0, (0)), 100000000, 0, -240)]), 0, (("astlib/ast_404.ml", 583, 19977, 19981), ("astlib/ast_404.ml", 583, 19977, 20010), 0), 0, Tag1 ("Astlib__Ast_404", 243)); (("Pctf_extension", 847), ([(Tag3 ((("extension", 997)), 0, (0)), 100000000, 0, -241)]), 0, (("astlib/ast_404.ml", 585, 20035, 20039), ("astlib/ast_404.ml", 585, 20035, 20068), 0), 0, Tag1 ("Astlib__Ast_404", 244))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 571, 19504, 19506), ("astlib/ast_404.ml", 585, 20035, 20068), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 73)), 2, 0); Tag1 (("class_infos", 1023), ([((("a")), 100000000, 0, -223)], 1, [[(("pci_virt", 848), 0, (Tag3 (Tag1 ((("Asttypes", 980)), "virtual_flag"), 0, (0)), 100000000, 0, -216), (("astlib/ast_404.ml", 590, 20167, 20174), ("astlib/ast_404.ml", 590, 20167, 20197), 0), 0, Tag1 ("Astlib__Ast_404", 245)); (("pci_params", 849), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -219); (Tag3 (Tag1 ((("Asttypes", 980)), "variance"), 0, (0)), 100000000, 0, -220)]), 100000000, 0, -218)], (0)), 100000000, 0, -217), (("astlib/ast_404.ml", 591, 20198, 20205), ("astlib/ast_404.ml", 591, 20198, 20245), 0), 0, Tag1 ("Astlib__Ast_404", 246)); (("pci_name", 850), 0, (Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -222)], (0)), 100000000, 0, -221), (("astlib/ast_404.ml", 592, 20246, 20253), ("astlib/ast_404.ml", 592, 20246, 20274), 0), 0, Tag1 ("Astlib__Ast_404", 247)); (("pci_expr", 851), 0, ((("a")), 100000000, 0, -223), (("astlib/ast_404.ml", 593, 20275, 20282), ("astlib/ast_404.ml", 593, 20275, 20295), 0), 0, Tag1 ("Astlib__Ast_404", 248)); (("pci_loc", 852), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -224), (("astlib/ast_404.ml", 594, 20296, 20303), ("astlib/ast_404.ml", 594, 20296, 20323), 0), 0, Tag1 ("Astlib__Ast_404", 249)); (("pci_attributes", 853), 0, (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -225), (("astlib/ast_404.ml", 595, 20324, 20331), ("astlib/ast_404.ml", 595, 20324, 20358), 0), 0, Tag1 ("Astlib__Ast_404", 250))]], 1, 0, [25], [0], 0, 0, (("astlib/ast_404.ml", 588, 20093, 20095), ("astlib/ast_404.ml", 596, 20386, 20393), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 74)), 2, 0); Tag1 (("class_description", 1024), (0, 0, 0, 1, ((Tag3 ((("class_infos", 1023)), [(Tag3 ((("class_type", 1018)), 0, (0)), 100000000, 0, -215)], (0)), 100000000, 0, -214)), 0, 0, 0, 0, (("astlib/ast_404.ml", 604, 20525, 20527), ("astlib/ast_404.ml", 604, 20525, 20573), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 75)), 2, 0); Tag1 (("class_type_declaration", 1025), (0, 0, 0, 1, ((Tag3 ((("class_infos", 1023)), [(Tag3 ((("class_type", 1018)), 0, (0)), 100000000, 0, -213)], (0)), 100000000, 0, -212)), 0, 0, 0, 0, (("astlib/ast_404.ml", 606, 20575, 20577), ("astlib/ast_404.ml", 606, 20575, 20628), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 76)), 2, 0); Tag1 (("class_expr", 1026), (0, 0, [[(("pcl_desc", 854), 0, (Tag3 ((("class_expr_desc", 1027)), 0, (0)), 100000000, 0, -209), (("astlib/ast_404.ml", 612, 20746, 20753), ("astlib/ast_404.ml", 612, 20746, 20779), 0), 0, Tag1 ("Astlib__Ast_404", 251)); (("pcl_loc", 855), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -210), (("astlib/ast_404.ml", 613, 20780, 20787), ("astlib/ast_404.ml", 613, 20780, 20807), 0), 0, Tag1 ("Astlib__Ast_404", 252)); (("pcl_attributes", 856), 0, (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -211), (("astlib/ast_404.ml", 614, 20808, 20815), ("astlib/ast_404.ml", 614, 20808, 20842), 0), 0, Tag1 ("Astlib__Ast_404", 253))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 610, 20680, 20682), ("astlib/ast_404.ml", 615, 20867, 20874), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 77)), 2, 0); Tag1 (("class_expr_desc", 1027), (0, 0, Tag1 ([(("Pcl_constr", 857), ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -188)], (0)), 100000000, 0, -187); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -190)], (0)), 100000000, 0, -189)]), 0, (("astlib/ast_404.ml", 618, 20944, 20948), ("astlib/ast_404.ml", 618, 20944, 20996), 0), 0, Tag1 ("Astlib__Ast_404", 254)); (("Pcl_structure", 858), ([(Tag3 ((("class_structure", 1028)), 0, (0)), 100000000, 0, -191)]), 0, (("astlib/ast_404.ml", 621, 21046, 21050), ("astlib/ast_404.ml", 621, 21046, 21084), 0), 0, Tag1 ("Astlib__Ast_404", 255)); (("Pcl_fun", 859), ([(Tag3 (Tag1 ((("Asttypes", 980)), "arg_label"), 0, (0)), 100000000, 0, -192); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -194)], (0)), 100000000, 0, -193); (Tag3 ((("pattern", 1004)), 0, (0)), 100000000, 0, -195); (Tag3 ((("class_expr", 1026)), 0, (0)), 100000000, 0, -196)]), 0, (("astlib/ast_404.ml", 623, 21116, 21120), ("astlib/ast_404.ml", 623, 21116, 21185), 0), 0, Tag1 ("Astlib__Ast_404", 256)); (("Pcl_apply", 860), ([(Tag3 ((("class_expr", 1026)), 0, (0)), 100000000, 0, -197); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 980)), "arg_label"), 0, (0)), 100000000, 0, -200); (Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -201)]), 100000000, 0, -199)], (0)), 100000000, 0, -198)]), 0, (("astlib/ast_404.ml", 629, 21475, 21479), ("astlib/ast_404.ml", 629, 21475, 21536), 0), 0, Tag1 ("Astlib__Ast_404", 257)); (("Pcl_let", 861), ([(Tag3 (Tag1 ((("Asttypes", 980)), "rec_flag"), 0, (0)), 100000000, 0, -202); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 1050)), 0, (0)), 100000000, 0, -204)], (0)), 100000000, 0, -203); (Tag3 ((("class_expr", 1026)), 0, (0)), 100000000, 0, -205)]), 0, (("astlib/ast_404.ml", 636, 21720, 21724), ("astlib/ast_404.ml", 636, 21720, 21779), 0), 0, Tag1 ("Astlib__Ast_404", 258)); (("Pcl_constraint", 862), ([(Tag3 ((("class_expr", 1026)), 0, (0)), 100000000, 0, -206); (Tag3 ((("class_type", 1018)), 0, (0)), 100000000, 0, -207)]), 0, (("astlib/ast_404.ml", 640, 21947, 21951), ("astlib/ast_404.ml", 640, 21947, 21994), 0), 0, Tag1 ("Astlib__Ast_404", 259)); (("Pcl_extension", 863), ([(Tag3 ((("extension", 997)), 0, (0)), 100000000, 0, -208)]), 0, (("astlib/ast_404.ml", 642, 22021, 22025), ("astlib/ast_404.ml", 642, 22021, 22053), 0), 0, Tag1 ("Astlib__Ast_404", 260))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 617, 20876, 20878), ("astlib/ast_404.ml", 642, 22021, 22053), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 78)), 2, 0); Tag1 (("class_structure", 1028), (0, 0, [[(("pcstr_self", 864), 0, (Tag3 ((("pattern", 1004)), 0, (0)), 100000000, 0, -184), (("astlib/ast_404.ml", 647, 22153, 22160), ("astlib/ast_404.ml", 647, 22153, 22180), 0), 0, Tag1 ("Astlib__Ast_404", 261)); (("pcstr_fields", 865), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_field", 1029)), 0, (0)), 100000000, 0, -186)], (0)), 100000000, 0, -185), (("astlib/ast_404.ml", 648, 22181, 22188), ("astlib/ast_404.ml", 648, 22181, 22219), 0), 0, Tag1 ("Astlib__Ast_404", 262))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 645, 22077, 22079), ("astlib/ast_404.ml", 649, 22220, 22227), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 79)), 2, 0); Tag1 (("class_field", 1029), (0, 0, [[(("pcf_desc", 866), 0, (Tag3 ((("class_field_desc", 1030)), 0, (0)), 100000000, 0, -181), (("astlib/ast_404.ml", 656, 22380, 22387), ("astlib/ast_404.ml", 656, 22380, 22414), 0), 0, Tag1 ("Astlib__Ast_404", 263)); (("pcf_loc", 867), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -182), (("astlib/ast_404.ml", 657, 22415, 22422), ("astlib/ast_404.ml", 657, 22415, 22442), 0), 0, Tag1 ("Astlib__Ast_404", 264)); (("pcf_attributes", 868), 0, (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -183), (("astlib/ast_404.ml", 658, 22443, 22450), ("astlib/ast_404.ml", 658, 22443, 22477), 0), 0, Tag1 ("Astlib__Ast_404", 265))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 654, 22312, 22314), ("astlib/ast_404.ml", 659, 22504, 22511), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 80)), 2, 0); Tag1 (("class_field_desc", 1030), (0, 0, Tag1 ([(("Pcf_inherit", 869), ([(Tag3 (Tag1 ((("Asttypes", 980)), "override_flag"), 0, (0)), 100000000, 0, -161); (Tag3 ((("class_expr", 1026)), 0, (0)), 100000000, 0, -162); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -164)], (0)), 100000000, 0, -163)]), 0, (("astlib/ast_404.ml", 662, 22583, 22587), ("astlib/ast_404.ml", 662, 22583, 22646), 0), 0, Tag1 ("Astlib__Ast_404", 266)); (("Pcf_val", 870), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -167)], (0)), 100000000, 0, -166); (Tag3 (Tag1 ((("Asttypes", 980)), "mutable_flag"), 0, (0)), 100000000, 0, -168); (Tag3 ((("class_field_kind", 1031)), 0, (0)), 100000000, 0, -169)]), 100000000, 0, -165)]), 0, (("astlib/ast_404.ml", 668, 22769, 22773), ("astlib/ast_404.ml", 668, 22769, 22832), 0), 0, Tag1 ("Astlib__Ast_404", 267)); (("Pcf_method", 871), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -172)], (0)), 100000000, 0, -171); (Tag3 (Tag1 ((("Asttypes", 980)), "private_flag"), 0, (0)), 100000000, 0, -173); (Tag3 ((("class_field_kind", 1031)), 0, (0)), 100000000, 0, -174)]), 100000000, 0, -170)]), 0, (("astlib/ast_404.ml", 672, 22900, 22904), ("astlib/ast_404.ml", 672, 22900, 22966), 0), 0, Tag1 ("Astlib__Ast_404", 268)); (("Pcf_constraint", 872), ([(Tag2 ([(Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -176); (Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -177)]), 100000000, 0, -175)]), 0, (("astlib/ast_404.ml", 676, 23101, 23105), ("astlib/ast_404.ml", 676, 23101, 23148), 0), 0, Tag1 ("Astlib__Ast_404", 269)); (("Pcf_initializer", 873), ([(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -178)]), 0, (("astlib/ast_404.ml", 678, 23184, 23188), ("astlib/ast_404.ml", 678, 23184, 23219), 0), 0, Tag1 ("Astlib__Ast_404", 270)); (("Pcf_attribute", 874), ([(Tag3 ((("attribute", 996)), 0, (0)), 100000000, 0, -179)]), 0, (("astlib/ast_404.ml", 680, 23250, 23254), ("astlib/ast_404.ml", 680, 23250, 23282), 0), 0, Tag1 ("Astlib__Ast_404", 271)); (("Pcf_extension", 875), ([(Tag3 ((("extension", 997)), 0, (0)), 100000000, 0, -180)]), 0, (("astlib/ast_404.ml", 682, 23307, 23311), ("astlib/ast_404.ml", 682, 23307, 23339), 0), 0, Tag1 ("Astlib__Ast_404", 272))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 661, 22513, 22515), ("astlib/ast_404.ml", 682, 23307, 23339), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 81)), 2, 0); Tag1 (("class_field_kind", 1031), (0, 0, Tag1 ([(("Cfk_virtual", 876), ([(Tag3 ((("core_type", 1000)), 0, (0)), 100000000, 0, -158)]), 0, (("astlib/ast_404.ml", 686, 23434, 23438), ("astlib/ast_404.ml", 686, 23434, 23464), 0), 0, Tag1 ("Astlib__Ast_404", 273)); (("Cfk_concrete", 877), ([(Tag3 (Tag1 ((("Asttypes", 980)), "override_flag"), 0, (0)), 100000000, 0, -159); (Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -160)]), 0, (("astlib/ast_404.ml", 687, 23465, 23469), ("astlib/ast_404.ml", 687, 23465, 23513), 0), 0, Tag1 ("Astlib__Ast_404", 274))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 685, 23364, 23366), ("astlib/ast_404.ml", 687, 23465, 23513), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 82)), 2, 0); Tag1 (("class_declaration", 1032), (0, 0, 0, 1, ((Tag3 ((("class_infos", 1023)), [(Tag3 ((("class_expr", 1026)), 0, (0)), 100000000, 0, -157)], (0)), 100000000, 0, -156)), 0, 0, 0, 0, (("astlib/ast_404.ml", 689, 23515, 23517), ("astlib/ast_404.ml", 689, 23515, 23563), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 83)), 2, 0); Tag1 (("module_type", 1033), (0, 0, [[(("pmty_desc", 878), 0, (Tag3 ((("module_type_desc", 1034)), 0, (0)), 100000000, 0, -153), (("astlib/ast_404.ml", 697, 23713, 23720), ("astlib/ast_404.ml", 697, 23713, 23748), 0), 0, Tag1 ("Astlib__Ast_404", 275)); (("pmty_loc", 879), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -154), (("astlib/ast_404.ml", 698, 23749, 23756), ("astlib/ast_404.ml", 698, 23749, 23777), 0), 0, Tag1 ("Astlib__Ast_404", 276)); (("pmty_attributes", 880), 0, (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -155), (("astlib/ast_404.ml", 699, 23778, 23785), ("astlib/ast_404.ml", 699, 23778, 23813), 0), 0, Tag1 ("Astlib__Ast_404", 277))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 695, 23645, 23647), ("astlib/ast_404.ml", 700, 23838, 23845), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 84)), 2, 0); Tag1 (("module_type_desc", 1034), (0, 0, Tag1 ([(("Pmty_ident", 881), ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -139)], (0)), 100000000, 0, -138)]), 0, (("astlib/ast_404.ml", 703, 23917, 23921), ("astlib/ast_404.ml", 703, 23917, 23952), 0), 0, Tag1 ("Astlib__Ast_404", 278)); (("Pmty_signature", 882), ([(Tag3 ((("signature", 1035)), 0, (0)), 100000000, 0, -140)]), 0, (("astlib/ast_404.ml", 705, 23971, 23975), ("astlib/ast_404.ml", 705, 23971, 24004), 0), 0, Tag1 ("Astlib__Ast_404", 279)); (("Pmty_functor", 883), ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -142)], (0)), 100000000, 0, -141); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 1033)), 0, (0)), 100000000, 0, -144)], (0)), 100000000, 0, -143); (Tag3 ((("module_type", 1033)), 0, (0)), 100000000, 0, -145)]), 0, (("astlib/ast_404.ml", 707, 24033, 24037), ("astlib/ast_404.ml", 707, 24033, 24100), 0), 0, Tag1 ("Astlib__Ast_404", 280)); (("Pmty_with", 884), ([(Tag3 ((("module_type", 1033)), 0, (0)), 100000000, 0, -146); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("with_constraint", 1044)), 0, (0)), 100000000, 0, -148)], (0)), 100000000, 0, -147)]), 0, (("astlib/ast_404.ml", 709, 24141, 24145), ("astlib/ast_404.ml", 709, 24141, 24194), 0), 0, Tag1 ("Astlib__Ast_404", 281)); (("Pmty_typeof", 885), ([(Tag3 ((("module_expr", 1045)), 0, (0)), 100000000, 0, -149)]), 0, (("astlib/ast_404.ml", 711, 24223, 24227), ("astlib/ast_404.ml", 711, 24223, 24255), 0), 0, Tag1 ("Astlib__Ast_404", 282)); (("Pmty_extension", 886), ([(Tag3 ((("extension", 997)), 0, (0)), 100000000, 0, -150)]), 0, (("astlib/ast_404.ml", 713, 24290, 24294), ("astlib/ast_404.ml", 713, 24290, 24323), 0), 0, Tag1 ("Astlib__Ast_404", 283)); (("Pmty_alias", 887), ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -152)], (0)), 100000000, 0, -151)]), 0, (("astlib/ast_404.ml", 715, 24346, 24350), ("astlib/ast_404.ml", 715, 24346, 24381), 0), 0, Tag1 ("Astlib__Ast_404", 284))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 702, 23847, 23849), ("astlib/ast_404.ml", 715, 24346, 24381), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 85)), 2, 0); Tag1 (("signature", 1035), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("signature_item", 1036)), 0, (0)), 100000000, 0, -137)], (0)), 100000000, 0, -136)), 0, 0, 0, 0, (("astlib/ast_404.ml", 718, 24410, 24412), ("astlib/ast_404.ml", 718, 24410, 24447), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 86)), 2, 0); Tag1 (("signature_item", 1036), (0, 0, [[(("psig_desc", 888), 0, (Tag3 ((("signature_item_desc", 1037)), 0, (0)), 100000000, 0, -134), (("astlib/ast_404.ml", 722, 24523, 24530), ("astlib/ast_404.ml", 722, 24523, 24561), 0), 0, Tag1 ("Astlib__Ast_404", 285)); (("psig_loc", 889), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -135), (("astlib/ast_404.ml", 723, 24562, 24569), ("astlib/ast_404.ml", 723, 24562, 24590), 0), 0, Tag1 ("Astlib__Ast_404", 286))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 720, 24449, 24451), ("astlib/ast_404.ml", 724, 24591, 24598), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 87)), 2, 0); Tag1 (("signature_item_desc", 1037), (0, 0, Tag1 ([(("Psig_value", 890), ([(Tag3 ((("value_description", 1009)), 0, (0)), 100000000, 0, -115)]), 0, (("astlib/ast_404.ml", 727, 24676, 24680), ("astlib/ast_404.ml", 727, 24676, 24713), 0), 0, Tag1 ("Astlib__Ast_404", 287)); (("Psig_type", 891), ([(Tag3 (Tag1 ((("Asttypes", 980)), "rec_flag"), 0, (0)), 100000000, 0, -116); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 1010)), 0, (0)), 100000000, 0, -118)], (0)), 100000000, 0, -117)]), 0, (("astlib/ast_404.ml", 732, 24804, 24808), ("astlib/ast_404.ml", 732, 24804, 24855), 0), 0, Tag1 ("Astlib__Ast_404", 288)); (("Psig_typext", 892), ([(Tag3 ((("type_extension", 1015)), 0, (0)), 100000000, 0, -119)]), 0, (("astlib/ast_404.ml", 734, 24907, 24911), ("astlib/ast_404.ml", 734, 24907, 24942), 0), 0, Tag1 ("Astlib__Ast_404", 289)); (("Psig_exception", 893), ([(Tag3 ((("extension_constructor", 1016)), 0, (0)), 100000000, 0, -120)]), 0, (("astlib/ast_404.ml", 736, 24974, 24978), ("astlib/ast_404.ml", 736, 24974, 25019), 0), 0, Tag1 ("Astlib__Ast_404", 290)); (("Psig_module", 894), ([(Tag3 ((("module_declaration", 1038)), 0, (0)), 100000000, 0, -121)]), 0, (("astlib/ast_404.ml", 738, 25053, 25057), ("astlib/ast_404.ml", 738, 25053, 25092), 0), 0, Tag1 ("Astlib__Ast_404", 291)); (("Psig_recmodule", 895), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_declaration", 1038)), 0, (0)), 100000000, 0, -123)], (0)), 100000000, 0, -122)]), 0, (("astlib/ast_404.ml", 740, 25123, 25127), ("astlib/ast_404.ml", 740, 25123, 25170), 0), 0, Tag1 ("Astlib__Ast_404", 292)); (("Psig_modtype", 896), ([(Tag3 ((("module_type_declaration", 1039)), 0, (0)), 100000000, 0, -124)]), 0, (("astlib/ast_404.ml", 742, 25228, 25232), ("astlib/ast_404.ml", 742, 25228, 25273), 0), 0, Tag1 ("Astlib__Ast_404", 293)); (("Psig_open", 897), ([(Tag3 ((("open_description", 1040)), 0, (0)), 100000000, 0, -125)]), 0, (("astlib/ast_404.ml", 745, 25336, 25340), ("astlib/ast_404.ml", 745, 25336, 25371), 0), 0, Tag1 ("Astlib__Ast_404", 294)); (("Psig_include", 898), ([(Tag3 ((("include_description", 1042)), 0, (0)), 100000000, 0, -126)]), 0, (("astlib/ast_404.ml", 747, 25395, 25399), ("astlib/ast_404.ml", 747, 25395, 25436), 0), 0, Tag1 ("Astlib__Ast_404", 295)); (("Psig_class", 899), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_description", 1024)), 0, (0)), 100000000, 0, -128)], (0)), 100000000, 0, -127)]), 0, (("astlib/ast_404.ml", 749, 25464, 25468), ("astlib/ast_404.ml", 749, 25464, 25506), 0), 0, Tag1 ("Astlib__Ast_404", 296)); (("Psig_class_type", 900), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 1025)), 0, (0)), 100000000, 0, -130)], (0)), 100000000, 0, -129)]), 0, (("astlib/ast_404.ml", 751, 25559, 25563), ("astlib/ast_404.ml", 751, 25559, 25611), 0), 0, Tag1 ("Astlib__Ast_404", 297)); (("Psig_attribute", 901), ([(Tag3 ((("attribute", 996)), 0, (0)), 100000000, 0, -131)]), 0, (("astlib/ast_404.ml", 753, 25671, 25675), ("astlib/ast_404.ml", 753, 25671, 25704), 0), 0, Tag1 ("Astlib__Ast_404", 298)); (("Psig_extension", 902), ([(Tag3 ((("extension", 997)), 0, (0)), 100000000, 0, -132); (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -133)]), 0, (("astlib/ast_404.ml", 755, 25729, 25733), ("astlib/ast_404.ml", 755, 25729, 25775), 0), 0, Tag1 ("Astlib__Ast_404", 299))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 726, 24600, 24602), ("astlib/ast_404.ml", 755, 25729, 25775), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 88)), 2, 0); Tag1 (("module_declaration", 1038), (0, 0, [[(("pmd_name", 903), 0, (Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -111)], (0)), 100000000, 0, -110), (("astlib/ast_404.ml", 760, 25882, 25889), ("astlib/ast_404.ml", 760, 25882, 25910), 0), 0, Tag1 ("Astlib__Ast_404", 300)); (("pmd_type", 904), 0, (Tag3 ((("module_type", 1033)), 0, (0)), 100000000, 0, -112), (("astlib/ast_404.ml", 761, 25911, 25918), ("astlib/ast_404.ml", 761, 25911, 25940), 0), 0, Tag1 ("Astlib__Ast_404", 301)); (("pmd_attributes", 905), 0, (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -113), (("astlib/ast_404.ml", 762, 25941, 25948), ("astlib/ast_404.ml", 762, 25941, 25975), 0), 0, Tag1 ("Astlib__Ast_404", 302)); (("pmd_loc", 906), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -114), (("astlib/ast_404.ml", 763, 26002, 26009), ("astlib/ast_404.ml", 763, 26002, 26029), 0), 0, Tag1 ("Astlib__Ast_404", 303))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 758, 25800, 25802), ("astlib/ast_404.ml", 764, 26030, 26037), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 89)), 2, 0); Tag1 (("module_type_declaration", 1039), (0, 0, [[(("pmtd_name", 907), 0, (Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -105)], (0)), 100000000, 0, -104), (("astlib/ast_404.ml", 769, 26146, 26153), ("astlib/ast_404.ml", 769, 26146, 26175), 0), 0, Tag1 ("Astlib__Ast_404", 304)); (("pmtd_type", 908), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 1033)), 0, (0)), 100000000, 0, -107)], (0)), 100000000, 0, -106), (("astlib/ast_404.ml", 770, 26176, 26183), ("astlib/ast_404.ml", 770, 26176, 26213), 0), 0, Tag1 ("Astlib__Ast_404", 305)); (("pmtd_attributes", 909), 0, (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -108), (("astlib/ast_404.ml", 771, 26214, 26221), ("astlib/ast_404.ml", 771, 26214, 26249), 0), 0, Tag1 ("Astlib__Ast_404", 306)); (("pmtd_loc", 910), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -109), (("astlib/ast_404.ml", 772, 26276, 26283), ("astlib/ast_404.ml", 772, 26276, 26304), 0), 0, Tag1 ("Astlib__Ast_404", 307))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 767, 26054, 26056), ("astlib/ast_404.ml", 773, 26305, 26312), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 90)), 2, 0); Tag1 (("open_description", 1040), (0, 0, [[(("popen_lid", 911), 0, (Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -100)], (0)), 100000000, 0, -99), (("astlib/ast_404.ml", 780, 26475, 26482), ("astlib/ast_404.ml", 780, 26475, 26509), 0), 0, Tag1 ("Astlib__Ast_404", 308)); (("popen_override", 912), 0, (Tag3 (Tag1 ((("Asttypes", 980)), "override_flag"), 0, (0)), 100000000, 0, -101), (("astlib/ast_404.ml", 781, 26510, 26517), ("astlib/ast_404.ml", 781, 26510, 26547), 0), 0, Tag1 ("Astlib__Ast_404", 309)); (("popen_loc", 913), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -102), (("astlib/ast_404.ml", 782, 26548, 26555), ("astlib/ast_404.ml", 782, 26548, 26577), 0), 0, Tag1 ("Astlib__Ast_404", 310)); (("popen_attributes", 914), 0, (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -103), (("astlib/ast_404.ml", 783, 26578, 26585), ("astlib/ast_404.ml", 783, 26578, 26614), 0), 0, Tag1 ("Astlib__Ast_404", 311))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 778, 26397, 26399), ("astlib/ast_404.ml", 784, 26615, 26622), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 91)), 2, 0); Tag1 (("include_infos", 1041), ([((("a")), 100000000, 0, -96)], 1, [[(("pincl_mod", 915), 0, ((("a")), 100000000, 0, -96), (("astlib/ast_404.ml", 792, 26870, 26877), ("astlib/ast_404.ml", 792, 26870, 26891), 0), 0, Tag1 ("Astlib__Ast_404", 312)); (("pincl_loc", 916), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -97), (("astlib/ast_404.ml", 793, 26892, 26899), ("astlib/ast_404.ml", 793, 26892, 26921), 0), 0, Tag1 ("Astlib__Ast_404", 313)); (("pincl_attributes", 917), 0, (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -98), (("astlib/ast_404.ml", 794, 26922, 26929), ("astlib/ast_404.ml", 794, 26922, 26958), 0), 0, Tag1 ("Astlib__Ast_404", 314))]], 1, 0, [25], [0], 0, 0, (("astlib/ast_404.ml", 790, 26792, 26794), ("astlib/ast_404.ml", 795, 26959, 26966), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 92)), 2, 0); Tag1 (("include_description", 1042), (0, 0, 0, 1, ((Tag3 ((("include_infos", 1041)), [(Tag3 ((("module_type", 1033)), 0, (0)), 100000000, 0, -95)], (0)), 100000000, 0, -94)), 0, 0, 0, 0, (("astlib/ast_404.ml", 797, 26968, 26970), ("astlib/ast_404.ml", 797, 26968, 27021), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 93)), 2, 0); Tag1 (("include_declaration", 1043), (0, 0, 0, 1, ((Tag3 ((("include_infos", 1041)), [(Tag3 ((("module_expr", 1045)), 0, (0)), 100000000, 0, -93)], (0)), 100000000, 0, -92)), 0, 0, 0, 0, (("astlib/ast_404.ml", 800, 27042, 27044), ("astlib/ast_404.ml", 800, 27042, 27095), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 94)), 2, 0); Tag1 (("with_constraint", 1044), (0, 0, Tag1 ([(("Pwith_type", 918), ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -81)], (0)), 100000000, 0, -80); (Tag3 ((("type_declaration", 1010)), 0, (0)), 100000000, 0, -82)]), 0, (("astlib/ast_404.ml", 804, 27184, 27188), ("astlib/ast_404.ml", 804, 27184, 27238), 0), 0, Tag1 ("Astlib__Ast_404", 315)); (("Pwith_module", 919), ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -84)], (0)), 100000000, 0, -83); (Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -86)], (0)), 100000000, 0, -85)]), 0, (("astlib/ast_404.ml", 809, 27389, 27393), ("astlib/ast_404.ml", 809, 27389, 27444), 0), 0, Tag1 ("Astlib__Ast_404", 316)); (("Pwith_typesubst", 920), ([(Tag3 ((("type_declaration", 1010)), 0, (0)), 100000000, 0, -87)]), 0, (("astlib/ast_404.ml", 811, 27481, 27485), ("astlib/ast_404.ml", 811, 27481, 27522), 0), 0, Tag1 ("Astlib__Ast_404", 317)); (("Pwith_modsubst", 921), ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -89)], (0)), 100000000, 0, -88); (Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -91)], (0)), 100000000, 0, -90)]), 0, (("astlib/ast_404.ml", 813, 27558, 27562), ("astlib/ast_404.ml", 813, 27558, 27610), 0), 0, Tag1 ("Astlib__Ast_404", 318))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 803, 27116, 27118), ("astlib/ast_404.ml", 813, 27558, 27610), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 95)), 2, 0); Tag1 (("module_expr", 1045), (0, 0, [[(("pmod_desc", 922), 0, (Tag3 ((("module_expr_desc", 1046)), 0, (0)), 100000000, 0, -77), (("astlib/ast_404.ml", 820, 27766, 27773), ("astlib/ast_404.ml", 820, 27766, 27801), 0), 0, Tag1 ("Astlib__Ast_404", 319)); (("pmod_loc", 923), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -78), (("astlib/ast_404.ml", 821, 27802, 27809), ("astlib/ast_404.ml", 821, 27802, 27830), 0), 0, Tag1 ("Astlib__Ast_404", 320)); (("pmod_attributes", 924), 0, (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -79), (("astlib/ast_404.ml", 822, 27831, 27838), ("astlib/ast_404.ml", 822, 27831, 27866), 0), 0, Tag1 ("Astlib__Ast_404", 321))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 818, 27698, 27700), ("astlib/ast_404.ml", 823, 27891, 27898), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 96)), 2, 0); Tag1 (("module_expr_desc", 1046), (0, 0, Tag1 ([(("Pmod_ident", 925), ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -64)], (0)), 100000000, 0, -63)]), 0, (("astlib/ast_404.ml", 826, 27970, 27974), ("astlib/ast_404.ml", 826, 27970, 28005), 0), 0, Tag1 ("Astlib__Ast_404", 322)); (("Pmod_structure", 926), ([(Tag3 ((("structure", 1047)), 0, (0)), 100000000, 0, -65)]), 0, (("astlib/ast_404.ml", 828, 28024, 28028), ("astlib/ast_404.ml", 828, 28024, 28057), 0), 0, Tag1 ("Astlib__Ast_404", 323)); (("Pmod_functor", 927), ([(Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -67)], (0)), 100000000, 0, -66); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 1033)), 0, (0)), 100000000, 0, -69)], (0)), 100000000, 0, -68); (Tag3 ((("module_expr", 1045)), 0, (0)), 100000000, 0, -70)]), 0, (("astlib/ast_404.ml", 830, 28089, 28093), ("astlib/ast_404.ml", 830, 28089, 28156), 0), 0, Tag1 ("Astlib__Ast_404", 324)); (("Pmod_apply", 928), ([(Tag3 ((("module_expr", 1045)), 0, (0)), 100000000, 0, -71); (Tag3 ((("module_expr", 1045)), 0, (0)), 100000000, 0, -72)]), 0, (("astlib/ast_404.ml", 832, 28196, 28200), ("astlib/ast_404.ml", 832, 28196, 28241), 0), 0, Tag1 ("Astlib__Ast_404", 325)); (("Pmod_constraint", 929), ([(Tag3 ((("module_expr", 1045)), 0, (0)), 100000000, 0, -73); (Tag3 ((("module_type", 1033)), 0, (0)), 100000000, 0, -74)]), 0, (("astlib/ast_404.ml", 834, 28267, 28271), ("astlib/ast_404.ml", 834, 28267, 28317), 0), 0, Tag1 ("Astlib__Ast_404", 326)); (("Pmod_unpack", 930), ([(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -75)]), 0, (("astlib/ast_404.ml", 836, 28344, 28348), ("astlib/ast_404.ml", 836, 28344, 28375), 0), 0, Tag1 ("Astlib__Ast_404", 327)); (("Pmod_extension", 931), ([(Tag3 ((("extension", 997)), 0, (0)), 100000000, 0, -76)]), 0, (("astlib/ast_404.ml", 838, 28400, 28404), ("astlib/ast_404.ml", 838, 28400, 28433), 0), 0, Tag1 ("Astlib__Ast_404", 328))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 825, 27900, 27902), ("astlib/ast_404.ml", 838, 28400, 28433), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 97)), 2, 0); Tag1 (("structure", 1047), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("structure_item", 1048)), 0, (0)), 100000000, 0, -62)], (0)), 100000000, 0, -61)), 0, 0, 0, 0, (("astlib/ast_404.ml", 841, 28457, 28459), ("astlib/ast_404.ml", 841, 28457, 28494), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 98)), 2, 0); Tag1 (("structure_item", 1048), (0, 0, [[(("pstr_desc", 932), 0, (Tag3 ((("structure_item_desc", 1049)), 0, (0)), 100000000, 0, -59), (("astlib/ast_404.ml", 845, 28570, 28577), ("astlib/ast_404.ml", 845, 28570, 28608), 0), 0, Tag1 ("Astlib__Ast_404", 329)); (("pstr_loc", 933), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -60), (("astlib/ast_404.ml", 846, 28609, 28616), ("astlib/ast_404.ml", 846, 28609, 28637), 0), 0, Tag1 ("Astlib__Ast_404", 330))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 843, 28496, 28498), ("astlib/ast_404.ml", 847, 28638, 28645), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 99)), 2, 0); Tag1 (("structure_item_desc", 1049), (0, 0, Tag1 ([(("Pstr_eval", 934), ([(Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -35); (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -36)]), 0, (("astlib/ast_404.ml", 850, 28723, 28727), ("astlib/ast_404.ml", 850, 28723, 28765), 0), 0, Tag1 ("Astlib__Ast_404", 331)); (("Pstr_value", 935), ([(Tag3 (Tag1 ((("Asttypes", 980)), "rec_flag"), 0, (0)), 100000000, 0, -37); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 1050)), 0, (0)), 100000000, 0, -39)], (0)), 100000000, 0, -38)]), 0, (("astlib/ast_404.ml", 852, 28784, 28788), ("astlib/ast_404.ml", 852, 28784, 28833), 0), 0, Tag1 ("Astlib__Ast_404", 332)); (("Pstr_primitive", 936), ([(Tag3 ((("value_description", 1009)), 0, (0)), 100000000, 0, -40)]), 0, (("astlib/ast_404.ml", 856, 28991, 28995), ("astlib/ast_404.ml", 856, 28991, 29032), 0), 0, Tag1 ("Astlib__Ast_404", 333)); (("Pstr_type", 937), ([(Tag3 (Tag1 ((("Asttypes", 980)), "rec_flag"), 0, (0)), 100000000, 0, -41); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 1010)), 0, (0)), 100000000, 0, -43)], (0)), 100000000, 0, -42)]), 0, (("astlib/ast_404.ml", 859, 29103, 29107), ("astlib/ast_404.ml", 859, 29103, 29154), 0), 0, Tag1 ("Astlib__Ast_404", 334)); (("Pstr_typext", 938), ([(Tag3 ((("type_extension", 1015)), 0, (0)), 100000000, 0, -44)]), 0, (("astlib/ast_404.ml", 861, 29206, 29210), ("astlib/ast_404.ml", 861, 29206, 29241), 0), 0, Tag1 ("Astlib__Ast_404", 335)); (("Pstr_exception", 939), ([(Tag3 ((("extension_constructor", 1016)), 0, (0)), 100000000, 0, -45)]), 0, (("astlib/ast_404.ml", 863, 29273, 29277), ("astlib/ast_404.ml", 863, 29273, 29318), 0), 0, Tag1 ("Astlib__Ast_404", 336)); (("Pstr_module", 940), ([(Tag3 ((("module_binding", 1051)), 0, (0)), 100000000, 0, -46)]), 0, (("astlib/ast_404.ml", 866, 29383, 29387), ("astlib/ast_404.ml", 866, 29383, 29418), 0), 0, Tag1 ("Astlib__Ast_404", 337)); (("Pstr_recmodule", 941), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_binding", 1051)), 0, (0)), 100000000, 0, -48)], (0)), 100000000, 0, -47)]), 0, (("astlib/ast_404.ml", 868, 29449, 29453), ("astlib/ast_404.ml", 868, 29449, 29492), 0), 0, Tag1 ("Astlib__Ast_404", 338)); (("Pstr_modtype", 942), ([(Tag3 ((("module_type_declaration", 1039)), 0, (0)), 100000000, 0, -49)]), 0, (("astlib/ast_404.ml", 870, 29550, 29554), ("astlib/ast_404.ml", 870, 29550, 29595), 0), 0, Tag1 ("Astlib__Ast_404", 339)); (("Pstr_open", 943), ([(Tag3 ((("open_description", 1040)), 0, (0)), 100000000, 0, -50)]), 0, (("astlib/ast_404.ml", 872, 29631, 29635), ("astlib/ast_404.ml", 872, 29631, 29666), 0), 0, Tag1 ("Astlib__Ast_404", 340)); (("Pstr_class", 944), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_declaration", 1032)), 0, (0)), 100000000, 0, -52)], (0)), 100000000, 0, -51)]), 0, (("astlib/ast_404.ml", 874, 29690, 29694), ("astlib/ast_404.ml", 874, 29690, 29732), 0), 0, Tag1 ("Astlib__Ast_404", 341)); (("Pstr_class_type", 945), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 1025)), 0, (0)), 100000000, 0, -54)], (0)), 100000000, 0, -53)]), 0, (("astlib/ast_404.ml", 876, 29785, 29789), ("astlib/ast_404.ml", 876, 29785, 29837), 0), 0, Tag1 ("Astlib__Ast_404", 342)); (("Pstr_include", 946), ([(Tag3 ((("include_declaration", 1043)), 0, (0)), 100000000, 0, -55)]), 0, (("astlib/ast_404.ml", 878, 29897, 29901), ("astlib/ast_404.ml", 878, 29897, 29938), 0), 0, Tag1 ("Astlib__Ast_404", 343)); (("Pstr_attribute", 947), ([(Tag3 ((("attribute", 996)), 0, (0)), 100000000, 0, -56)]), 0, (("astlib/ast_404.ml", 880, 29966, 29970), ("astlib/ast_404.ml", 880, 29966, 29999), 0), 0, Tag1 ("Astlib__Ast_404", 344)); (("Pstr_extension", 948), ([(Tag3 ((("extension", 997)), 0, (0)), 100000000, 0, -57); (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -58)]), 0, (("astlib/ast_404.ml", 882, 30024, 30028), ("astlib/ast_404.ml", 882, 30024, 30070), 0), 0, Tag1 ("Astlib__Ast_404", 345))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 849, 28647, 28649), ("astlib/ast_404.ml", 882, 30024, 30070), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 100)), 2, 0); Tag1 (("value_binding", 1050), (0, 0, [[(("pvb_pat", 949), 0, (Tag3 ((("pattern", 1004)), 0, (0)), 100000000, 0, -31), (("astlib/ast_404.ml", 887, 30165, 30171), ("astlib/ast_404.ml", 887, 30165, 30188), 0), 0, Tag1 ("Astlib__Ast_404", 346)); (("pvb_expr", 950), 0, (Tag3 ((("expression", 1006)), 0, (0)), 100000000, 0, -32), (("astlib/ast_404.ml", 888, 30189, 30195), ("astlib/ast_404.ml", 888, 30189, 30216), 0), 0, Tag1 ("Astlib__Ast_404", 347)); (("pvb_attributes", 951), 0, (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -33), (("astlib/ast_404.ml", 889, 30217, 30223), ("astlib/ast_404.ml", 889, 30217, 30250), 0), 0, Tag1 ("Astlib__Ast_404", 348)); (("pvb_loc", 952), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -34), (("astlib/ast_404.ml", 890, 30251, 30257), ("astlib/ast_404.ml", 890, 30251, 30277), 0), 0, Tag1 ("Astlib__Ast_404", 349))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 885, 30095, 30097), ("astlib/ast_404.ml", 891, 30278, 30283), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 101)), 2, 0); Tag1 (("module_binding", 1051), (0, 0, [[(("pmb_name", 953), 0, (Tag3 (Tag1 ((("Asttypes", 980)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -27)], (0)), 100000000, 0, -26), (("astlib/ast_404.ml", 895, 30359, 30366), ("astlib/ast_404.ml", 895, 30359, 30387), 0), 0, Tag1 ("Astlib__Ast_404", 350)); (("pmb_expr", 954), 0, (Tag3 ((("module_expr", 1045)), 0, (0)), 100000000, 0, -28), (("astlib/ast_404.ml", 896, 30388, 30395), ("astlib/ast_404.ml", 896, 30388, 30417), 0), 0, Tag1 ("Astlib__Ast_404", 351)); (("pmb_attributes", 955), 0, (Tag3 ((("attributes", 998)), 0, (0)), 100000000, 0, -29), (("astlib/ast_404.ml", 897, 30418, 30425), ("astlib/ast_404.ml", 897, 30418, 30452), 0), 0, Tag1 ("Astlib__Ast_404", 352)); (("pmb_loc", 956), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -30), (("astlib/ast_404.ml", 898, 30453, 30460), ("astlib/ast_404.ml", 898, 30453, 30480), 0), 0, Tag1 ("Astlib__Ast_404", 353))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 893, 30285, 30287), ("astlib/ast_404.ml", 899, 30481, 30488), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 102)), 2, 0); Tag1 (("toplevel_phrase", 1052), (0, 0, Tag1 ([(("Ptop_def", 969), ([(Tag3 ((("structure", 1047)), 0, (0)), 100000000, 0, -23)]), 0, (("astlib/ast_404.ml", 907, 30623, 30627), ("astlib/ast_404.ml", 907, 30623, 30650), 0), 0, Tag1 ("Astlib__Ast_404", 356)); (("Ptop_dir", 970), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -24); (Tag3 ((("directive_argument", 1053)), 0, (0)), 100000000, 0, -25)]), 0, (("astlib/ast_404.ml", 908, 30651, 30655), ("astlib/ast_404.ml", 908, 30651, 30696), 0), 0, Tag1 ("Astlib__Ast_404", 357))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 906, 30554, 30556), ("astlib/ast_404.ml", 908, 30651, 30696), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 354)), 1, 0); Tag1 (("directive_argument", 1053), (0, 0, Tag1 ([(("Pdir_none", 971), (0), 0, (("astlib/ast_404.ml", 912, 30801, 30805), ("astlib/ast_404.ml", 912, 30801, 30816), 0), 0, Tag1 ("Astlib__Ast_404", 358)); (("Pdir_string", 972), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -17)]), 0, (("astlib/ast_404.ml", 913, 30817, 30821), ("astlib/ast_404.ml", 913, 30817, 30844), 0), 0, Tag1 ("Astlib__Ast_404", 359)); (("Pdir_int", 973), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -18); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -20)], (0)), 100000000, 0, -19)]), 0, (("astlib/ast_404.ml", 914, 30845, 30849), ("astlib/ast_404.ml", 914, 30845, 30883), 0), 0, Tag1 ("Astlib__Ast_404", 360)); (("Pdir_ident", 974), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -21)]), 0, (("astlib/ast_404.ml", 915, 30884, 30888), ("astlib/ast_404.ml", 915, 30884, 30915), 0), 0, Tag1 ("Astlib__Ast_404", 361)); (("Pdir_bool", 975), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -22)]), 0, (("astlib/ast_404.ml", 916, 30916, 30920), ("astlib/ast_404.ml", 916, 30916, 30939), 0), 0, Tag1 ("Astlib__Ast_404", 362))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_404.ml", 911, 30727, 30729), ("astlib/ast_404.ml", 916, 30916, 30939), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 355)), 2, 0)]), 0, (("astlib/ast_404.ml", 66, 2762, 2762), ("astlib/ast_404.ml", 917, 30940, 30943), 0), Tag1 ("Astlib__Ast_404", 363)), 0, 0); Tag3 (("Config", 982), 0, (Tag1 ([(("ast_impl_magic_number", 1054), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -552), 0, (("astlib/ast_404.ml", 920, 30968, 30974), ("astlib/ast_404.ml", 920, 30968, 30995), 0), 0, Tag1 ("Astlib__Ast_404", 364)), 0); (("ast_intf_magic_number", 1055), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -551), 0, (("astlib/ast_404.ml", 921, 31013, 31019), ("astlib/ast_404.ml", 921, 31013, 31040), 0), 0, Tag1 ("Astlib__Ast_404", 365)), 0)]), 0, (("astlib/ast_404.ml", 919, 30945, 30945), ("astlib/ast_404.ml", 922, 31058, 31061), 0), Tag1 ("Astlib__Ast_404", 366)), 0, 0)], "Astlib__Ast_404", [("Astlib__Ast_404", ("I\027\143Zr\250\2468\193\167uOo\029\236\148")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Ocaml_common", ("1\212\195\020\163\232\187\142G\192\221\180@\1278u")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Astlib__Longident", ("\n\192\233\142\177n\225\191\238\161#\150\204n\"Y")); ("Astlib__Location", ("nn\153\250\162\2239\215\129\229e\026xg\000U")); ("Astlib__", ("\246\155.n\143$\1435\bi\005\019C\219\191A"))], [(0)])

  end
