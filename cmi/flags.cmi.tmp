val async_proofs_worker_id : string ref
val async_proofs_is_worker : unit -> bool
val load_vos_libraries : bool ref
val xml_debug : bool ref
val in_debugger : bool ref
val in_toplevel : bool ref
val in_synterp_phase : bool ref
val raw_print : bool ref
val beautify : bool ref
val beautify_file : bool ref
val quiet : bool ref
val silently : ('a -> 'b) -> 'a -> 'b
val verbosely : ('a -> 'b) -> 'a -> 'b
val if_silent : ('a -> unit) -> 'a -> unit
val if_verbose : ('a -> unit) -> 'a -> unit
val warn : bool ref
val make_warn : bool -> unit
val if_warn : ('a -> unit) -> 'a -> unit
val with_modified_ref : 'c ref -> ('c -> 'c) -> ('a -> 'b) -> 'a -> 'b
val with_option : bool ref -> ('a -> 'b) -> 'a -> 'b
val with_options : bool ref list -> ('a -> 'b) -> 'a -> 'b
val without_option : bool ref -> ('a -> 'b) -> 'a -> 'b
val with_extra_values : 'c list ref -> 'c list -> ('a -> 'b) -> 'a -> 'b
val set_inline_level : int -> unit
val get_inline_level : unit -> int
val default_inline_level : int
val profile_ltac : bool ref("DEBUG:rule", [(("async_proofs_worker_id", 297), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -114)], (0)), 100000000, 0, -113), 0, (("lib/flags.mli", 35, 1535, 1535), ("lib/flags.mli", 35, 1535, 1574), 0), 0, Tag1 ("Flags", 0)), 0); (("async_proofs_is_worker", 298), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -112), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -111), 0), 100000000, 0, -110), 0, (("lib/flags.mli", 36, 1575, 1575), ("lib/flags.mli", 36, 1575, 1616), 0), 0, Tag1 ("Flags", 1)), 0); (("load_vos_libraries", 299), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -109)], (0)), 100000000, 0, -108), 0, (("lib/flags.mli", 40, 1749, 1749), ("lib/flags.mli", 40, 1749, 1782), 0), 0, Tag1 ("Flags", 2)), 0); (("xml_debug", 300), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -107)], (0)), 100000000, 0, -106), 0, (("lib/flags.mli", 43, 1803, 1803), ("lib/flags.mli", 43, 1803, 1827), 0), 0, Tag1 ("Flags", 3)), 0); (("in_debugger", 301), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -105)], (0)), 100000000, 0, -104), 0, (("lib/flags.mli", 44, 1828, 1828), ("lib/flags.mli", 44, 1828, 1854), 0), 0, Tag1 ("Flags", 4)), 0); (("in_toplevel", 302), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -103)], (0)), 100000000, 0, -102), 0, (("lib/flags.mli", 45, 1855, 1855), ("lib/flags.mli", 45, 1855, 1881), 0), 0, Tag1 ("Flags", 5)), 0); (("in_synterp_phase", 303), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -101)], (0)), 100000000, 0, -100), 0, (("lib/flags.mli", 48, 1930, 1930), ("lib/flags.mli", 48, 1930, 1961), 0), 0, Tag1 ("Flags", 6)), 0); (("raw_print", 304), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -99)], (0)), 100000000, 0, -98), 0, (("lib/flags.mli", 51, 2028, 2028), ("lib/flags.mli", 51, 2028, 2052), 0), 0, Tag1 ("Flags", 7)), 0); (("beautify", 305), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -97)], (0)), 100000000, 0, -96), 0, (("lib/flags.mli", 54, 2114, 2114), ("lib/flags.mli", 54, 2114, 2137), 0), 0, Tag1 ("Flags", 8)), 0); (("beautify_file", 306), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -95)], (0)), 100000000, 0, -94), 0, (("lib/flags.mli", 55, 2138, 2138), ("lib/flags.mli", 55, 2138, 2166), 0), 0, Tag1 ("Flags", 9)), 0); (("quiet", 307), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -93)], (0)), 100000000, 0, -92), 0, (("lib/flags.mli", 59, 2306, 2306), ("lib/flags.mli", 59, 2306, 2326), 0), 0, Tag1 ("Flags", 10)), 0); (("silently", 308), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -90), ((("b")), 100000000, 0, -89), 0), 100000000, 0, -91), (Tag1 (0, ((("a")), 100000000, 0, -90), ((("b")), 100000000, 0, -89), 0), 100000000, 0, -88), 0), 100000000, 0, -87), 0, (("lib/flags.mli", 60, 2327, 2327), ("lib/flags.mli", 60, 2327, 2364), 0), 0, Tag1 ("Flags", 11)), 0); (("verbosely", 309), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -85), ((("b")), 100000000, 0, -84), 0), 100000000, 0, -86), (Tag1 (0, ((("a")), 100000000, 0, -85), ((("b")), 100000000, 0, -84), 0), 100000000, 0, -83), 0), 100000000, 0, -82), 0, (("lib/flags.mli", 61, 2365, 2365), ("lib/flags.mli", 61, 2365, 2403), 0), 0, Tag1 ("Flags", 12)), 0); (("if_silent", 310), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -79), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -81), 0), 100000000, 0, -80), (Tag1 (0, ((("a")), 100000000, 0, -79), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -78), 0), 100000000, 0, -77), 0), 100000000, 0, -76), 0, (("lib/flags.mli", 62, 2404, 2404), ("lib/flags.mli", 62, 2404, 2446), 0), 0, Tag1 ("Flags", 13)), 0); (("if_verbose", 311), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -73), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), (Tag1 (0, ((("a")), 100000000, 0, -73), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), 0, (("lib/flags.mli", 63, 2447, 2447), ("lib/flags.mli", 63, 2447, 2490), 0), 0, Tag1 ("Flags", 14)), 0); (("warn", 312), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -69)], (0)), 100000000, 0, -68), 0, (("lib/flags.mli", 65, 2492, 2492), ("lib/flags.mli", 65, 2492, 2511), 0), 0, Tag1 ("Flags", 15)), 0); (("make_warn", 313), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -67), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("lib/flags.mli", 66, 2512, 2512), ("lib/flags.mli", 66, 2512, 2540), 0), 0, Tag1 ("Flags", 16)), 0); (("if_warn", 314), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -62), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -64), 0), 100000000, 0, -63), (Tag1 (0, ((("a")), 100000000, 0, -62), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -61), 0), 100000000, 0, -60), 0), 100000000, 0, -59), 0, (("lib/flags.mli", 67, 2541, 2541), ("lib/flags.mli", 67, 2541, 2581), 0), 0, Tag1 ("Flags", 17)), 0); (("with_modified_ref", 315), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [((("c")), 100000000, 0, -57)], (0)), 100000000, 0, -58), (Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -57), ((("c")), 100000000, 0, -57), 0), 100000000, 0, -56), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -54), ((("b")), 100000000, 0, -53), 0), 100000000, 0, -55), (Tag1 (0, ((("a")), 100000000, 0, -54), ((("b")), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0), 100000000, 0, -50), 0), 100000000, 0, -49), 0, (("lib/flags.mli", 76, 2849, 2849), ("lib/flags.mli", 76, 2849, 2919), 0), 0, Tag1 ("Flags", 18)), 0); (("with_option", 316), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -48)], (0)), 100000000, 0, -47), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -45), ((("b")), 100000000, 0, -44), 0), 100000000, 0, -46), (Tag1 (0, ((("a")), 100000000, 0, -45), ((("b")), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("lib/flags.mli", 80, 3031, 3031), ("lib/flags.mli", 80, 3031, 3083), 0), 0, Tag1 ("Flags", 19)), 0); (("with_options", 317), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -40)], (0)), 100000000, 0, -39)], (0)), 100000000, 0, -38), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -36), ((("b")), 100000000, 0, -35), 0), 100000000, 0, -37), (Tag1 (0, ((("a")), 100000000, 0, -36), ((("b")), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0), 100000000, 0, -32), 0, (("lib/flags.mli", 83, 3132, 3132), ("lib/flags.mli", 83, 3132, 3190), 0), 0, Tag1 ("Flags", 20)), 0); (("without_option", 318), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -31)], (0)), 100000000, 0, -30), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -28), ((("b")), 100000000, 0, -27), 0), 100000000, 0, -29), (Tag1 (0, ((("a")), 100000000, 0, -28), ((("b")), 100000000, 0, -27), 0), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("lib/flags.mli", 86, 3232, 3232), ("lib/flags.mli", 86, 3232, 3287), 0), 0, Tag1 ("Flags", 21)), 0); (("with_extra_values", 319), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("list", 9)), [((("c")), 100000000, 0, -21)], (0)), 100000000, 0, -23)], (0)), 100000000, 0, -22), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("c")), 100000000, 0, -21)], (0)), 100000000, 0, -20), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -18), ((("b")), 100000000, 0, -17), 0), 100000000, 0, -19), (Tag1 (0, ((("a")), 100000000, 0, -18), ((("b")), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("lib/flags.mli", 89, 3340, 3340), ("lib/flags.mli", 89, 3340, 3412), 0), 0, Tag1 ("Flags", 22)), 0); (("set_inline_level", 320), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -12), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("lib/flags.mli", 92, 3468, 3468), ("lib/flags.mli", 92, 3468, 3502), 0), 0, Tag1 ("Flags", 23)), 0); (("get_inline_level", 321), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -9), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("lib/flags.mli", 93, 3503, 3503), ("lib/flags.mli", 93, 3503, 3537), 0), 0, Tag1 ("Flags", 24)), 0); (("default_inline_level", 322), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -6), 0, (("lib/flags.mli", 94, 3538, 3538), ("lib/flags.mli", 94, 3538, 3568), 0), 0, Tag1 ("Flags", 25)), 0); (("profile_ltac", 323), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -5)], (0)), 100000000, 0, -4), 0, (("lib/flags.mli", 97, 3603, 3603), ("lib/flags.mli", 97, 3603, 3630), 0), 0, Tag1 ("Flags", 26)), 0); (("profile_ltac_cutoff", 324), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -3)], (0)), 100000000, 0, -2), 0, (("lib/flags.mli", 98, 3631, 3631), ("lib/flags.mli", 98, 3631, 3666), 0), 0, Tag1 ("Flags", 27)), 0)], "Flags", [("Flags", ("\230F\143\160`l\250\178\"\139*\175\163\213t\235")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val profile_ltac_cutoff : float ref
