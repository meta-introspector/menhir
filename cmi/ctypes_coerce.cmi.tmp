type uncoercible_info
exception Uncoercible of uncoercible_info
val coerce : 'a Ctypes_static.typ -> 'b Ctypes_static.typ -> 'a -> 'b
("DEBUG:rule", [Tag1 (("uncoercible_info", 355), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/ctypes/ctypes_coerce.mli", 8, 149, 149), ("src/ctypes/ctypes_coerce.mli", 8, 149, 170), 0), 0, 0, 0, Tag1 ("Ctypes_coerce", 0)), 1, 0); Tag2 (("Uncoercible", 356), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((("uncoercible_info", 355)), 0, (0)), 100000000, 0, -16)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ctypes_coerce", 1)), 2, 0); (("coerce", 357), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ctypes_static")), "typ"), [((("a")), 100000000, 0, -13)], (0)), 100000000, 0, -15), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ctypes_static")), "typ"), [((("b")), 100000000, 0, -12)], (0)), 100000000, 0, -14), (Tag1 (0, ((("a")), 100000000, 0, -13), ((("b")), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("src/ctypes/ctypes_coerce.mli", 12, 215, 215), ("src/ctypes/ctypes_coerce.mli", 12, 215, 284), 0), 0, Tag1 ("Ctypes_coerce", 2)), 0); (("coerce_fn", 358), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ctypes_static")), "fn"), [((("a")), 100000000, 0, -6)], (0)), 100000000, 0, -8), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ctypes_static")), "fn"), [((("b")), 100000000, 0, -5)], (0)), 100000000, 0, -7), (Tag1 (0, ((("a")), 100000000, 0, -6), ((("b")), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/ctypes/ctypes_coerce.mli", 14, 286, 286), ("src/ctypes/ctypes_coerce.mli", 14, 286, 356), 0), 0, Tag1 ("Ctypes_coerce", 3)), 0)], "Ctypes_coerce", [("Ctypes_coerce", ("\183~2\232\183\177\194\138\000\205\151\245\191\028?\"")); ("Unsigned", ("cd\205\030\181\167\151\005!\134;\177\228\249\168+")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Signed", ("R\017i\"\030\024\134f\143\198\192\180>t\175\225")); ("LDouble", ("j\251\140\230^u\251\210\143\236T\207\022\147\011\211")); ("Ctypes_static", ("U\030\169\129GB\138P\158'd\012\131\157\202\018")); ("Ctypes_ptr", ("V\021o\161\007\161\245R\242\222:e\151\189\175\207")); ("Ctypes_primitive_types", ("\147\237\001\150\136\017Z\2308\137C\245\023\133\161\158")); ("Ctypes_bigarray", ("\146\0055mmn\243\187gd\185P\208J\254l")); ("ComplexL", ("\n\230\139\192\213\0226\203\176\242\200\205c\155ag")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Bigarray_compat", ("\150\219\208\188w\237\216\005\r[\152q'\006x\217"))], [(0)])
val coerce_fn : 'a Ctypes_static.fn -> 'b Ctypes_static.fn -> 'a -> 'b
