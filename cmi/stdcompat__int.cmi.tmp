type t = int
val zero : int
val one : int
val minus_one : int
external neg : int -> int = "%negint"
external add : int -> int -> int = "%addint"
external sub : int -> int -> int = "%subint"
external mul : int -> int -> int = "%mulint"
external div : int -> int -> int = "%divint"
external rem : int -> int -> int = "%modint"
external succ : int -> int = "%succint"
external pred : int -> int = "%predint"
val abs : int -> int
val max_int : int
val min_int : int
external logand : int -> int -> int = "%andint"
external logor : int -> int -> int = "%orint"
external logxor : int -> int -> int = "%xorint"
val lognot : int -> int
external shift_left : int -> int -> int = "%lslint"
external shift_right : int -> int -> int = "%asrint"
external shift_right_logical : int -> int -> int = "%lsrint"
val equal : int -> int -> bool
val compare : int -> int -> int
external to_float : int -> float = "%floatofint"
external of_float : float -> int = "%intoffloat"
("DEBUG:rule", [Tag1 (("t", 324), (0, 0, 0, 1, ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -96)), 0, 0, 0, 0, (("stdcompat__int_s.mli", 2, 20, 22), ("stdcompat__int_s.mli", 2, 20, 34), 0), 0, 1, 0, Tag1 ("Stdcompat__int_s", 0)), 1, 0); (("zero", 325), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -95), 0, (("stdcompat__int_s.mli", 3, 35, 37), ("stdcompat__int_s.mli", 3, 35, 51), 0), 0, Tag1 ("Stdcompat__int_s", 1)), 0); (("one", 326), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -94), 0, (("stdcompat__int_s.mli", 4, 52, 54), ("stdcompat__int_s.mli", 4, 52, 67), 0), 0, Tag1 ("Stdcompat__int_s", 2)), 0); (("minus_one", 327), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -93), 0, (("stdcompat__int_s.mli", 5, 68, 70), ("stdcompat__int_s.mli", 5, 68, 89), 0), 0, Tag1 ("Stdcompat__int_s", 3)), 0); (("neg", 328), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -92), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -91), 0), 100000000, 0, -90), (("%negint", 1, 1, "", [0], 0)), (("stdcompat__int_s.mli", 6, 90, 92), ("stdcompat__int_s.mli", 6, 90, 129), 0), 0, Tag1 ("Stdcompat__int_s", 4)), 0); (("add", 329), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -89), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -88), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -87), 0), 100000000, 0, -86), 0), 100000000, 0, -85), (("%addint", 2, 1, "", [0; 0], 0)), (("stdcompat__int_s.mli", 7, 130, 132), ("stdcompat__int_s.mli", 7, 130, 176), 0), 0, Tag1 ("Stdcompat__int_s", 5)), 0); (("sub", 330), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -84), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -83), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -82), 0), 100000000, 0, -81), 0), 100000000, 0, -80), (("%subint", 2, 1, "", [0; 0], 0)), (("stdcompat__int_s.mli", 8, 177, 179), ("stdcompat__int_s.mli", 8, 177, 223), 0), 0, Tag1 ("Stdcompat__int_s", 6)), 0); (("mul", 331), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -79), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -78), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0), 100000000, 0, -75), (("%mulint", 2, 1, "", [0; 0], 0)), (("stdcompat__int_s.mli", 9, 224, 226), ("stdcompat__int_s.mli", 9, 224, 270), 0), 0, Tag1 ("Stdcompat__int_s", 7)), 0); (("div", 332), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -74), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -73), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), (("%divint", 2, 1, "", [0; 0], 0)), (("stdcompat__int_s.mli", 10, 271, 273), ("stdcompat__int_s.mli", 10, 271, 317), 0), 0, Tag1 ("Stdcompat__int_s", 8)), 0); (("rem", 333), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -69), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -68), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -67), 0), 100000000, 0, -66), 0), 100000000, 0, -65), (("%modint", 2, 1, "", [0; 0], 0)), (("stdcompat__int_s.mli", 11, 318, 320), ("stdcompat__int_s.mli", 11, 318, 364), 0), 0, Tag1 ("Stdcompat__int_s", 9)), 0); (("succ", 334), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -64), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -63), 0), 100000000, 0, -62), (("%succint", 1, 1, "", [0], 0)), (("stdcompat__int_s.mli", 12, 365, 367), ("stdcompat__int_s.mli", 12, 365, 406), 0), 0, Tag1 ("Stdcompat__int_s", 10)), 0); (("pred", 335), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -61), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -60), 0), 100000000, 0, -59), (("%predint", 1, 1, "", [0], 0)), (("stdcompat__int_s.mli", 13, 407, 409), ("stdcompat__int_s.mli", 13, 407, 448), 0), 0, Tag1 ("Stdcompat__int_s", 11)), 0); (("abs", 336), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -58), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("stdcompat__int_s.mli", 14, 449, 451), ("stdcompat__int_s.mli", 14, 449, 471), 0), 0, Tag1 ("Stdcompat__int_s", 12)), 0); (("max_int", 337), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -55), 0, (("stdcompat__int_s.mli", 15, 472, 474), ("stdcompat__int_s.mli", 15, 472, 491), 0), 0, Tag1 ("Stdcompat__int_s", 13)), 0); (("min_int", 338), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -54), 0, (("stdcompat__int_s.mli", 16, 492, 494), ("stdcompat__int_s.mli", 16, 492, 511), 0), 0, Tag1 ("Stdcompat__int_s", 14)), 0); (("logand", 339), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -53), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -52), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -51), 0), 100000000, 0, -50), 0), 100000000, 0, -49), (("%andint", 2, 1, "", [0; 0], 0)), (("stdcompat__int_s.mli", 17, 512, 514), ("stdcompat__int_s.mli", 17, 512, 561), 0), 0, Tag1 ("Stdcompat__int_s", 15)), 0); (("logor", 340), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -48), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -47), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), (("%orint", 2, 1, "", [0; 0], 0)), (("stdcompat__int_s.mli", 18, 562, 564), ("stdcompat__int_s.mli", 18, 562, 609), 0), 0, Tag1 ("Stdcompat__int_s", 16)), 0); (("logxor", 341), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -43), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -42), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), (("%xorint", 2, 1, "", [0; 0], 0)), (("stdcompat__int_s.mli", 19, 610, 612), ("stdcompat__int_s.mli", 19, 610, 659), 0), 0, Tag1 ("Stdcompat__int_s", 17)), 0); (("lognot", 342), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -38), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("stdcompat__int_s.mli", 20, 660, 662), ("stdcompat__int_s.mli", 20, 660, 685), 0), 0, Tag1 ("Stdcompat__int_s", 18)), 0); (("shift_left", 343), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -35), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -34), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), (("%lslint", 2, 1, "", [0; 0], 0)), (("stdcompat__int_s.mli", 21, 686, 688), ("stdcompat__int_s.mli", 21, 686, 739), 0), 0, Tag1 ("Stdcompat__int_s", 19)), 0); (("shift_right", 344), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -30), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -29), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), (("%asrint", 2, 1, "", [0; 0], 0)), (("stdcompat__int_s.mli", 22, 740, 742), ("stdcompat__int_s.mli", 22, 740, 794), 0), 0, Tag1 ("Stdcompat__int_s", 20)), 0); (("shift_right_logical", 345), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -25), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -24), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), (("%lsrint", 2, 1, "", [0; 0], 0)), (("stdcompat__int_s.mli", 23, 795, 797), ("stdcompat__int_s.mli", 23, 795, 857), 0), 0, Tag1 ("Stdcompat__int_s", 21)), 0); (("equal", 346), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -20), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -19), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("stdcompat__int_s.mli", 24, 858, 860), ("stdcompat__int_s.mli", 24, 858, 890), 0), 0, Tag1 ("Stdcompat__int_s", 22)), 0); (("compare", 347), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -15), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -14), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("stdcompat__int_s.mli", 25, 891, 893), ("stdcompat__int_s.mli", 25, 891, 924), 0), 0, Tag1 ("Stdcompat__int_s", 23)), 0); (("to_float", 348), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), (("%floatofint", 1, 1, "", [0], 0)), (("stdcompat__int_s.mli", 26, 925, 927), ("stdcompat__int_s.mli", 26, 925, 975), 0), 0, Tag1 ("Stdcompat__int_s", 24)), 0); (("of_float", 349), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), (("%intoffloat", 1, 1, "", [0], 0)), (("stdcompat__int_s.mli", 27, 976, 978), ("stdcompat__int_s.mli", 27, 976, 1026), 0), 0, Tag1 ("Stdcompat__int_s", 25)), 0); (("to_string", 350), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("stdcompat__int_s.mli", 28, 1027, 1029), ("stdcompat__int_s.mli", 28, 1027, 1058), 0), 0, Tag1 ("Stdcompat__int_s", 26)), 0)], "Stdcompat__int", [("Stdcompat__int", ("\245\226\127\005\197\201\141\011\143D\216\209|\133\179\203")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stdcompat__int_s", ("*^\2337\151`\172\139C\018YQ\012D\233#")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val to_string : int -> string
