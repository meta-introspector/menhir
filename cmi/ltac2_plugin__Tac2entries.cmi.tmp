val register_ltac :
  ?deprecation:Deprecation.t ->
  ?local:bool ->
  ?mut:bool ->
  Ltac2_plugin.Tac2expr.rec_flag ->
  (Names.lname * Ltac2_plugin.Tac2expr.raw_tacexpr) list -> unit
val register_type :
  ?local:bool ->
  Ltac2_plugin.Tac2expr.rec_flag ->
  (Libnames.qualid * Ltac2_plugin.Tac2expr.redef_flag *
   Ltac2_plugin.Tac2expr.raw_quant_typedef)
  list -> unit
val register_primitive :
  ?deprecation:Deprecation.t ->
  ?local:bool ->
  Names.lident ->
  Ltac2_plugin.Tac2expr.raw_typexpr ->
  Ltac2_plugin.Tac2expr.ml_tactic_name -> unit
val register_struct :
  Attributes.vernac_flags -> Ltac2_plugin.Tac2expr.strexpr -> unit
type notation_interpretation_data
val register_notation :
  Attributes.vernac_flags ->
  Ltac2_plugin.Tac2expr.sexpr list ->
  int option ->
  Ltac2_plugin.Tac2expr.raw_tacexpr -> notation_interpretation_data
val register_notation_interpretation : notation_interpretation_data -> unit
val perform_eval :
  pstate:Declare.Proof.t option -> Ltac2_plugin.Tac2expr.raw_tacexpr -> unit
type scope_rule =
    ScopeRule : (Ltac2_plugin.Tac2expr.raw_tacexpr, 'b, 'a) Pcoq.Symbol.t *
      ('a -> Ltac2_plugin.Tac2expr.raw_tacexpr) -> scope_rule
type scope_interpretation = Ltac2_plugin.Tac2expr.sexpr list -> scope_rule
val register_scope : Names.Id.t -> scope_interpretation -> unit
val parse_scope : Ltac2_plugin.Tac2expr.sexpr -> scope_rule
val print_located_tactic : Libnames.qualid -> unit
val print_ltac2 : Libnames.qualid -> unit
val print_signatures : unit -> unit
val call :
  pstate:Declare.Proof.t ->
  Goal_select.t option ->
  with_end_tac:bool -> Ltac2_plugin.Tac2expr.raw_tacexpr -> Declare.Proof.t
val call_par :
  pstate:Declare.Proof.t ->
  with_end_tac:bool -> Ltac2_plugin.Tac2expr.raw_tacexpr -> Declare.Proof.t
module Pltac :
  sig
    val ltac2_expr : Ltac2_plugin.Tac2expr.raw_tacexpr Pcoq.Entry.t
    val tac2expr_in_env :
      (Names.Id.t CAst.t list * Ltac2_plugin.Tac2expr.raw_tacexpr)
      Pcoq.Entry.t
    val q_ident :
      Names.Id.t CAst.t Ltac2_plugin.Tac2qexpr.or_anti Pcoq.Entry.t
    val q_bindings : Ltac2_plugin.Tac2qexpr.bindings Pcoq.Entry.t
    val q_with_bindings : Ltac2_plugin.Tac2qexpr.bindings Pcoq.Entry.t
    val q_intropattern : Ltac2_plugin.Tac2qexpr.intro_pattern Pcoq.Entry.t
    val q_intropatterns :
      Ltac2_plugin.Tac2qexpr.intro_pattern list CAst.t Pcoq.Entry.t
    val q_destruction_arg :
      Ltac2_plugin.Tac2qexpr.destruction_arg Pcoq.Entry.t
    val q_induction_clause :
      Ltac2_plugin.Tac2qexpr.induction_clause Pcoq.Entry.t
    val q_conversion : Ltac2_plugin.Tac2qexpr.conversion Pcoq.Entry.t
    val q_rewriting : Ltac2_plugin.Tac2qexpr.rewriting Pcoq.Entry.t
    val q_clause : Ltac2_plugin.Tac2qexpr.clause Pcoq.Entry.t
    val q_dispatch : Ltac2_plugin.Tac2qexpr.dispatch Pcoq.Entry.t
    val q_occurrences : Ltac2_plugin.Tac2qexpr.occurrences Pcoq.Entry.t
    val q_reference :
      Ltac2_plugin.Tac2qexpr.reference Ltac2_plugin.Tac2qexpr.or_anti
      Pcoq.Entry.t
    val q_strategy_flag : Ltac2_plugin.Tac2qexpr.strategy_flag Pcoq.Entry.t
    val q_constr_matching :
      Ltac2_plugin.Tac2qexpr.constr_matching Pcoq.Entry.t
    val q_goal_matching : Ltac2_plugin.Tac2qexpr.goal_matching Pcoq.Entry.t
    val q_hintdb : Ltac2_plugin.Tac2qexpr.hintdb Pcoq.Entry.t
    val q_move_location : Ltac2_plugin.Tac2qexpr.move_location Pcoq.Entry.t
    val q_pose : Ltac2_plugin.Tac2qexpr.pose Pcoq.Entry.t
    val q_assert : Ltac2_plugin.Tac2qexpr.assertion Pcoq.Entry.t("DEBUG:rule", [(("register_ltac", 847), ((Tag1 (Tag1 ("deprecation"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Deprecation")), "t"), 0, (0)), 100000000, 0, -113)], (0)), 100000000, 0, -112), (Tag1 (Tag1 ("local"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -111)], (0)), 100000000, 0, -110), (Tag1 (Tag1 ("mut"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -109)], (0)), 100000000, 0, -108), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "rec_flag"), 0, (0)), 100000000, 0, -107), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Names")), "lname"), 0, (0)), 100000000, 0, -105); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "raw_tacexpr"), 0, (0)), 100000000, 0, -106)]), 100000000, 0, -104)], (0)), 100000000, 0, -103), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -102), 0), 100000000, 0, -101), 0), 100000000, 0, -100), 0), 100000000, 0, -99), 0), 100000000, 0, -98), 0), 100000000, 0, -97), 0, (("plugins/ltac2/tac2entries.mli", 17, 749, 749), ("plugins/ltac2/tac2entries.mli", 18, 839, 881), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 0)), 0); (("register_type", 848), ((Tag1 (Tag1 ("local"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -96)], (0)), 100000000, 0, -95), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "rec_flag"), 0, (0)), 100000000, 0, -94), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Libnames")), "qualid"), 0, (0)), 100000000, 0, -91); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "redef_flag"), 0, (0)), 100000000, 0, -92); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "raw_quant_typedef"), 0, (0)), 100000000, 0, -93)]), 100000000, 0, -90)], (0)), 100000000, 0, -89), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -88), 0), 100000000, 0, -87), 0), 100000000, 0, -86), 0), 100000000, 0, -85), 0, (("plugins/ltac2/tac2entries.mli", 20, 883, 883), ("plugins/ltac2/tac2entries.mli", 21, 930, 986), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 1)), 0); (("register_primitive", 849), ((Tag1 (Tag1 ("deprecation"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Deprecation")), "t"), 0, (0)), 100000000, 0, -84)], (0)), 100000000, 0, -83), (Tag1 (Tag1 ("local"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -82)], (0)), 100000000, 0, -81), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "lident"), 0, (0)), 100000000, 0, -80), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "raw_typexpr"), 0, (0)), 100000000, 0, -79), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "ml_tactic_name"), 0, (0)), 100000000, 0, -78), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0), 100000000, 0, -75), 0), 100000000, 0, -74), 0), 100000000, 0, -73), 0), 100000000, 0, -72), 0, (("plugins/ltac2/tac2entries.mli", 23, 988, 988), ("plugins/ltac2/tac2entries.mli", 24, 1058, 1113), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 2)), 0); (("register_struct", 850), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Attributes")), "vernac_flags"), 0, (0)), 100000000, 0, -71), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "strexpr"), 0, (0)), 100000000, 0, -70), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -69), 0), 100000000, 0, -68), 0), 100000000, 0, -67), 0, (("plugins/ltac2/tac2entries.mli", 26, 1115, 1115), ("plugins/ltac2/tac2entries.mli", 26, 1115, 1179), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 3)), 0); Tag1 (("notation_interpretation_data", 851), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2entries.mli", 28, 1181, 1181), ("plugins/ltac2/tac2entries.mli", 28, 1181, 1214), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2entries", 4)), 1, 0); (("register_notation", 852), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Attributes")), "vernac_flags"), 0, (0)), 100000000, 0, -66), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "sexpr"), 0, (0)), 100000000, 0, -65)], (0)), 100000000, 0, -64), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -63)], (0)), 100000000, 0, -62), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "raw_tacexpr"), 0, (0)), 100000000, 0, -61), (Tag3 ((("notation_interpretation_data", 851)), 0, (0)), 100000000, 0, -60), 0), 100000000, 0, -59), 0), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("plugins/ltac2/tac2entries.mli", 30, 1216, 1216), ("plugins/ltac2/tac2entries.mli", 31, 1281, 1340), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 5)), 0); (("register_notation_interpretation", 853), ((Tag1 (0, (Tag3 ((("notation_interpretation_data", 851)), 0, (0)), 100000000, 0, -55), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("plugins/ltac2/tac2entries.mli", 33, 1342, 1342), ("plugins/ltac2/tac2entries.mli", 33, 1342, 1417), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 6)), 0); (("perform_eval", 854), ((Tag1 (("pstate"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Declare")), "Proof"), "t"), 0, (0)), 100000000, 0, -52)], (0)), 100000000, 0, -51), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "raw_tacexpr"), 0, (0)), 100000000, 0, -50), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -49), 0), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("plugins/ltac2/tac2entries.mli", 35, 1419, 1419), ("plugins/ltac2/tac2entries.mli", 35, 1419, 1490), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 7)), 0); Tag1 (("scope_rule", 855), (0, 0, Tag1 ([(("ScopeRule", 575), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Symbol"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "raw_tacexpr"), 0, (0)), 100000000, 0, -42); ((0), 100000000, 0, -43); ((("a")), 100000000, 0, -44)], (0)), 100000000, 0, -41); (Tag1 (0, ((("a")), 100000000, 0, -44), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "raw_tacexpr"), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45)]), ((Tag3 ((("scope_rule", 855)), 0, (0)), 100000000, 0, -40)), (("plugins/ltac2/tac2entries.mli", 40, 1532, 1532), ("plugins/ltac2/tac2entries.mli", 40, 1532, 1616), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 9))], 0), 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2entries.mli", 39, 1514, 1514), ("plugins/ltac2/tac2entries.mli", 40, 1532, 1616), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2entries", 8)), 1, 0); Tag1 (("scope_interpretation", 856), (0, 0, 0, 1, ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "sexpr"), 0, (0)), 100000000, 0, -39)], (0)), 100000000, 0, -38), (Tag3 ((("scope_rule", 855)), 0, (0)), 100000000, 0, -37), 0), 100000000, 0, -36)), 0, 0, 0, 0, (("plugins/ltac2/tac2entries.mli", 42, 1618, 1618), ("plugins/ltac2/tac2entries.mli", 42, 1618, 1670), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2entries", 10)), 1, 0); (("register_scope", 857), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -35), (Tag1 (0, (Tag3 ((("scope_interpretation", 856)), 0, (0)), 100000000, 0, -34), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("plugins/ltac2/tac2entries.mli", 44, 1672, 1672), ("plugins/ltac2/tac2entries.mli", 44, 1672, 1729), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 11)), 0); (("parse_scope", 858), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "sexpr"), 0, (0)), 100000000, 0, -30), (Tag3 ((("scope_rule", 855)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("plugins/ltac2/tac2entries.mli", 47, 1780, 1780), ("plugins/ltac2/tac2entries.mli", 47, 1780, 1817), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 12)), 0); (("print_located_tactic", 859), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Libnames")), "qualid"), 0, (0)), 100000000, 0, -27), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0, (("plugins/ltac2/tac2entries.mli", 52, 1914, 1914), ("plugins/ltac2/tac2entries.mli", 52, 1914, 1964), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 13)), 0); (("print_ltac2", 860), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Libnames")), "qualid"), 0, (0)), 100000000, 0, -24), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("plugins/ltac2/tac2entries.mli", 55, 2012, 2012), ("plugins/ltac2/tac2entries.mli", 55, 2012, 2053), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 14)), 0); (("print_signatures", 861), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -21), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("plugins/ltac2/tac2entries.mli", 58, 2098, 2098), ("plugins/ltac2/tac2entries.mli", 58, 2098, 2133), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 15)), 0); (("call", 862), ((Tag1 (("pstate"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Declare")), "Proof"), "t"), 0, (0)), 100000000, 0, -18), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Goal_select")), "t"), 0, (0)), 100000000, 0, -17)], (0)), 100000000, 0, -16), (Tag1 (("with_end_tac"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -15), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "raw_tacexpr"), 0, (0)), 100000000, 0, -14), (Tag3 (Tag1 (Tag1 ((Tag2 ("Declare")), "Proof"), "t"), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("plugins/ltac2/tac2entries.mli", 64, 2268, 2268), ("plugins/ltac2/tac2entries.mli", 65, 2362, 2382), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 16)), 0); (("call_par", 863), ((Tag1 (("pstate"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Declare")), "Proof"), "t"), 0, (0)), 100000000, 0, -8), (Tag1 (("with_end_tac"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "raw_tacexpr"), 0, (0)), 100000000, 0, -6), (Tag3 (Tag1 (Tag1 ((Tag2 ("Declare")), "Proof"), "t"), 0, (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("plugins/ltac2/tac2entries.mli", 67, 2384, 2384), ("plugins/ltac2/tac2entries.mli", 68, 2458, 2478), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 17)), 0); Tag3 (("Pltac", 864), 0, (Tag1 ([(("ltac2_expr", 865), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "raw_tacexpr"), 0, (0)), 100000000, 0, -166)], (0)), 100000000, 0, -165), 0, (("plugins/ltac2/tac2entries.mli", 74, 2527, 2527), ("plugins/ltac2/tac2entries.mli", 74, 2527, 2568), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 18)), 0); (("tac2expr_in_env", 866), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [(Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("CAst")), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -163)], (0)), 100000000, 0, -162)], (0)), 100000000, 0, -161); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "raw_tacexpr"), 0, (0)), 100000000, 0, -164)]), 100000000, 0, -160)], (0)), 100000000, 0, -159), 0, (("plugins/ltac2/tac2entries.mli", 75, 2569, 2569), ("plugins/ltac2/tac2entries.mli", 75, 2569, 2636), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 19)), 0); (("q_ident", 867), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2qexpr"), "or_anti"), [(Tag3 (Tag1 ((Tag2 ("CAst")), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -158)], (0)), 100000000, 0, -157)], (0)), 100000000, 0, -156)], (0)), 100000000, 0, -155), 0, (("plugins/ltac2/tac2entries.mli", 81, 2712, 2712), ("plugins/ltac2/tac2entries.mli", 81, 2712, 2758), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 20)), 0); (("q_bindings", 868), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2qexpr"), "bindings"), 0, (0)), 100000000, 0, -154)], (0)), 100000000, 0, -153), 0, (("plugins/ltac2/tac2entries.mli", 82, 2759, 2759), ("plugins/ltac2/tac2entries.mli", 82, 2759, 2797), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 21)), 0); (("q_with_bindings", 869), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2qexpr"), "bindings"), 0, (0)), 100000000, 0, -152)], (0)), 100000000, 0, -151), 0, (("plugins/ltac2/tac2entries.mli", 83, 2798, 2798), ("plugins/ltac2/tac2entries.mli", 83, 2798, 2841), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 22)), 0); (("q_intropattern", 870), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2qexpr"), "intro_pattern"), 0, (0)), 100000000, 0, -150)], (0)), 100000000, 0, -149), 0, (("plugins/ltac2/tac2entries.mli", 84, 2842, 2842), ("plugins/ltac2/tac2entries.mli", 84, 2842, 2889), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 23)), 0); (("q_intropatterns", 871), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [(Tag3 (Tag1 ((Tag2 ("CAst")), "t"), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2qexpr"), "intro_pattern"), 0, (0)), 100000000, 0, -148)], (0)), 100000000, 0, -147)], (0)), 100000000, 0, -146)], (0)), 100000000, 0, -145), 0, (("plugins/ltac2/tac2entries.mli", 85, 2890, 2890), ("plugins/ltac2/tac2entries.mli", 85, 2890, 2950), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 24)), 0); (("q_destruction_arg", 872), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2qexpr"), "destruction_arg"), 0, (0)), 100000000, 0, -144)], (0)), 100000000, 0, -143), 0, (("plugins/ltac2/tac2entries.mli", 86, 2951, 2951), ("plugins/ltac2/tac2entries.mli", 86, 2951, 3003), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 25)), 0); (("q_induction_clause", 873), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2qexpr"), "induction_clause"), 0, (0)), 100000000, 0, -142)], (0)), 100000000, 0, -141), 0, (("plugins/ltac2/tac2entries.mli", 87, 3004, 3004), ("plugins/ltac2/tac2entries.mli", 87, 3004, 3058), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 26)), 0); (("q_conversion", 874), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2qexpr"), "conversion"), 0, (0)), 100000000, 0, -140)], (0)), 100000000, 0, -139), 0, (("plugins/ltac2/tac2entries.mli", 88, 3059, 3059), ("plugins/ltac2/tac2entries.mli", 88, 3059, 3101), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 27)), 0); (("q_rewriting", 875), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2qexpr"), "rewriting"), 0, (0)), 100000000, 0, -138)], (0)), 100000000, 0, -137), 0, (("plugins/ltac2/tac2entries.mli", 89, 3102, 3102), ("plugins/ltac2/tac2entries.mli", 89, 3102, 3142), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 28)), 0); (("q_clause", 876), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2qexpr"), "clause"), 0, (0)), 100000000, 0, -136)], (0)), 100000000, 0, -135), 0, (("plugins/ltac2/tac2entries.mli", 90, 3143, 3143), ("plugins/ltac2/tac2entries.mli", 90, 3143, 3177), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 29)), 0); (("q_dispatch", 877), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2qexpr"), "dispatch"), 0, (0)), 100000000, 0, -134)], (0)), 100000000, 0, -133), 0, (("plugins/ltac2/tac2entries.mli", 91, 3178, 3178), ("plugins/ltac2/tac2entries.mli", 91, 3178, 3216), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 30)), 0); (("q_occurrences", 878), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2qexpr"), "occurrences"), 0, (0)), 100000000, 0, -132)], (0)), 100000000, 0, -131), 0, (("plugins/ltac2/tac2entries.mli", 92, 3217, 3217), ("plugins/ltac2/tac2entries.mli", 92, 3217, 3261), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 31)), 0); (("q_reference", 879), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2qexpr"), "or_anti"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2qexpr"), "reference"), 0, (0)), 100000000, 0, -130)], (0)), 100000000, 0, -129)], (0)), 100000000, 0, -128), 0, (("plugins/ltac2/tac2entries.mli", 93, 3262, 3262), ("plugins/ltac2/tac2entries.mli", 93, 3262, 3310), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 32)), 0); (("q_strategy_flag", 880), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2qexpr"), "strategy_flag"), 0, (0)), 100000000, 0, -127)], (0)), 100000000, 0, -126), 0, (("plugins/ltac2/tac2entries.mli", 94, 3311, 3311), ("plugins/ltac2/tac2entries.mli", 94, 3311, 3359), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 33)), 0); (("q_constr_matching", 881), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2qexpr"), "constr_matching"), 0, (0)), 100000000, 0, -125)], (0)), 100000000, 0, -124), 0, (("plugins/ltac2/tac2entries.mli", 95, 3360, 3360), ("plugins/ltac2/tac2entries.mli", 95, 3360, 3412), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 34)), 0); (("q_goal_matching", 882), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2qexpr"), "goal_matching"), 0, (0)), 100000000, 0, -123)], (0)), 100000000, 0, -122), 0, (("plugins/ltac2/tac2entries.mli", 96, 3413, 3413), ("plugins/ltac2/tac2entries.mli", 96, 3413, 3461), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 35)), 0); (("q_hintdb", 883), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2qexpr"), "hintdb"), 0, (0)), 100000000, 0, -121)], (0)), 100000000, 0, -120), 0, (("plugins/ltac2/tac2entries.mli", 97, 3462, 3462), ("plugins/ltac2/tac2entries.mli", 97, 3462, 3496), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 36)), 0); (("q_move_location", 884), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2qexpr"), "move_location"), 0, (0)), 100000000, 0, -119)], (0)), 100000000, 0, -118), 0, (("plugins/ltac2/tac2entries.mli", 98, 3497, 3497), ("plugins/ltac2/tac2entries.mli", 98, 3497, 3545), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 37)), 0); (("q_pose", 885), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2qexpr"), "pose"), 0, (0)), 100000000, 0, -117)], (0)), 100000000, 0, -116), 0, (("plugins/ltac2/tac2entries.mli", 99, 3546, 3546), ("plugins/ltac2/tac2entries.mli", 99, 3546, 3576), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 38)), 0); (("q_assert", 886), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2qexpr"), "assertion"), 0, (0)), 100000000, 0, -115)], (0)), 100000000, 0, -114), 0, (("plugins/ltac2/tac2entries.mli", 100, 3577, 3577), ("plugins/ltac2/tac2entries.mli", 100, 3577, 3614), 0), 0, Tag1 ("Ltac2_plugin__Tac2entries", 39)), 0)]), 0, (("plugins/ltac2/tac2entries.mli", 72, 2508, 2508), ("plugins/ltac2/tac2entries.mli", 101, 3615, 3618), 0), Tag1 ("Ltac2_plugin__Tac2entries", 40)), 0, 0)], "Ltac2_plugin__Tac2entries", [("Ltac2_plugin__Tac2entries", ("_\255uw+\186\243\014\242\169h\207<'\203c")); ("Z", ("\253\196\2168\027\199O\134\220\218\031'\1484\233o")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Vernacexpr", ("Lu|g\028\024j\193\000\234\175\209&\211]\137")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("UnivSubst", ("\190qu\031mc\130\181\003G]\132\"\219m)")); ("UnivProblem", ("6'\161\018\181\001.\253\000\141a6\171\1727\155")); ("UnivNames", ("%\151_\209%+JM$n\001\232\194n\178N")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Unification", ("\017\027\157=\255\1914L\020\213h\154.\219\005\170")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UState", ("SD\203\215|\136\n\251\239\208\148\215C\n\167\005")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("Typeclasses", ("KO\1297x\192\210\231\001\1824l\135\192\160|")); ("Type_errors", ("7\157\162-\214M\206\196\228\191\005v\134\177\144\134")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Tok", ("\162\196\180\135\219\014\184\165;\207\025\215\176g\188\225")); ("Tactypes", ("\143E\135*\195\151\144H\151M\011($\017\159\203")); ("Tacred", ("\133d\143\1310z\030\237\232\002\001\025\147\140\215:")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Store", ("/dT\252\145\179pq\216{\181\206\190K+U")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Random", ("\020\005Xq\171\026\218\152X\135\254\023\133zK\200")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stateid", ("\183\165\247\166~\005\017.\179f.\178n\255(\137")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("Section", ("\245\207\b\021\142v=\155#w\246}\"4b\006")); ("Safe_typing", (")\250?\164\145\132\241\127\186\152h+\145\"\237l")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("RetrieveObl", ("\181(\0225\214z\024#d\246.M\015.i\210")); ("Reductionops", ("\179\023P\218\146Uh\014IS\196C\031q~#")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Proofview_monad", ("\218\196\189S\147\216\129\221\231\224v\228O\024*\239")); ("Proofview", ("\245\140U\027\236\199\199&\242\156\199YG\250tA")); ("Proof_using", ("\015\162\022\031Y\152\208\231;\015\140;\163\177\251\196")); ("Proof_bullet", ("\249\179=\253g\211\149\212\t\217_0\179\197k\179")); ("Proof", ("\249\030\200g\248\164o&\tS\132\rTl\1736")); ("Primred", ("\158G\192\182\224\196\144*\174y_E\165\012\137C")); ("Pretyping", ("\151\160\191\149\149Ff\195\171g\189\156\r\166n\189")); ("Pretype_errors", ("\155\229\201\176\163\234\203C\127\227\141\174j\199\200H")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Pcoq", ("\231\158\223M\188\002_J\154\240\176\002\022p\243\154")); ("Pattern", ("\195C\140Wb=\022\222\208\227^K\003\020\215X")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("NumTok", ("vd\023^\251\244B\166\145'\156\196-0\027\169")); ("Notationextern", ("\000\022b5`t\134]\192f4\131\187\192\152\160")); ("Notation_term", ("5\002\017\217b\193nc>\239\239\237\244\031\173?")); ("Notation", ("\243\219),\220\160v\230\t$\246\188\252\172\152\147")); ("Nativevalues", ("8:\007\025e\226c,\001\171\146#l\210\171\152")); ("Nativelib", ("V\239\205Y1\147E:,\176\196Hy\1483|")); ("Nativecode", ("\190\185\255\006m\012\210\163\138Rz\247\15283\183")); ("Nametab", ("1\018\163\254\225\2178\025DI\0271Q\198\134\140")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Namegen", ("\187\222\224T\255\020\1808-\212*\164\131\177\157x")); ("Monad", ("\244\171T\157\194p\187\160\149\195{\132\222\020\253\148")); ("Modintern", ("F\222V\246R\143{\n\240\004;;;\011\026\223")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Metasyntax", ("\177D\147\n?i\139\193\238 \018\030)\\\244\\")); ("Ltac_pretype", ("\224\"\167\018i:U\172>\188\128$\r\252\020T")); ("Ltac2_plugin__Tac2qexpr", ("\215\137\163\233\241P\212#\198\182\130\138\014\246\026\205")); ("Ltac2_plugin__Tac2expr", ("T\154\246\018\232\196\182\229\012\167v}\1367|\157")); ("Ltac2_plugin__Tac2dyn", ("\003M~\173\240\228^\184[\135\224\206\1576\163 ")); ("Ltac2_plugin", ("\165R\230\016\178\131\154\196w\014@m\191\218\194\020")); ("Logic_monad", ("\130\157\160Q\163vQ\137\184\2242\209\128\024\220i")); ("Locus", ("_\002\003W\246\181\225\242Uf\139\226\176\174\192I")); ("Locality", ("\204\134r\227\235'\016\197\215r\210\133\242\226U%")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libobject", ("\132}t\226hl\213L\210\172\167pc\012~\129")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Lib", ("8\018\021\210\020\136$\149\164=\007\002\218\026RX")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Impargs", ("\021\197\1992>\rm\185\141\"iHY\133\138/")); ("Hook", ("\183\194\223\003\155\169',\187\240a;E\b\1396")); ("Hints", ("\007\130]H\\t(\131\000}\205\137H\148\250\166")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Gramlib__Stream", ("\248\\H\205_76\253\136\146\200\031\165\021=t")); ("Gramlib__Plexing", ("\028\200j\003G\198\183\184f\243\148a\020\011\160\171")); ("Gramlib__LStream", ("B\143\148\148@\016M\192w\155\223\189\218\224\002\004")); ("Gramlib__Grammar", ("zuU\178r\159\234NC\015_hKT\240\151")); ("Gramlib__Gramext", ("B\171oA\172\212\187>\175\233Q\145\"\176TM")); ("Gramlib", ("\154\143\210e\021i\246\176\224\194\220\217\007\145\139A")); ("Goptions", ("i>Rt=\183g\153\190\144\235u\248\247*e")); ("Goal_select", ("\235$\175\023t\178\194.Ivlz\005\211\173\n")); ("Globnames", ("W\004\172T\214\181H\220\232\160LSW\006\130\226")); ("Glob_term", ("\165=a\227\160\153.\021_$\232\209T\236\153O")); ("GlobEnv", ("(\152\019ok\006R\183\193\145\137\133<\171\005\231")); ("Genredexpr", ("rz\204\143\007`VgI\195P\168sO\198\012")); ("Genlambda", ("\170}\024\241\141\222\136S\169\219\2212i\134KI")); ("Geninterp", ("2S\151\191\189\159\004\188;\224d\199|U\004\028")); ("Genintern", ("\152Ac\019=n\235\197\141\224T\162\192\148eg")); ("Genarg", ("\1434\015\001\152\196\005s\156\136\195\185\247\b3\t")); ("Future", ("\158b\028\190\203\016U\128\195O\140\249\240\129\252s")); ("Ftactic", ("K\172\205\128\241\162\160\201\202\1561o\180L\206:")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Extend", ("\179&!W\163V\006\245\018\168\021\001\224s\168\234")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evd", ("\211\205p\193\216\129r\006\239oN\142ar\196\175")); ("Evarutil", ("\005\175\132e\164O\223svi \252\232\138\022\137")); ("Evarsolve", ("\000&\228\016}j\199\t\229\173\127\024\219\199\184\178")); ("Evardefine", ("\178\167R\199\158\242\001Y\215<\151\020\206\153\227\019")); ("Evar_kinds", ("\023L\186\132\218}\254\221\185\198\220\200h\003{\021")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("EConstr", ("\201aW\156\157;N\004\201V\208\006L\166\211)")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Deprecation", ("\226:\146\245\190;\1929\254@\247a\218\244\134\189")); ("Decls", ("\140C{$\142?\215\153\180\186h;\153\139\187\129")); ("Declaremods", ("\019d|\168<\144\239o\017\222\248K^\157\198\179")); ("Declare", ("\ndh\139\180\185\245\190\133\240\127A\190b\197\023")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("DAst", ("\224/\200)\007\184ni\134\b\139\204\241\005w\212")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conversion", ("\158\150&\195M\tv\127|\029\158RRK\211A")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constrintern", ("\221\031i\248\218\212\161/UQA\147\1348GM")); ("Constrexpr", ("p'r\245\184chL\183\249\"\213]\1741\237")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("Coercionops", ("\238\240\220\191\201\bMazv\159\227\236?\147>")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CWarnings", ("\132\220\150\227\215\239t\217\132\220'JX\188\246c")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu")); ("CString", ("\243~4C\023~\169\148x\206\165\207\195\177Q\184")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CLexer", ("\158\155\242\159%gC\237\011\196\158\255\163\217\239G")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CDebug", ("^4\210p7\239!3\138\138\213?\239`\250\157")); ("CClosure", ("\167\b\022\241V-\r\253\b\002\000j]\223%\142")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("Attributes", ("\2145\146P\224\163B1\135\232\204SD\129^\141")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])

  end
