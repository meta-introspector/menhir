type input_file
val new_input_file : string -> unit
val get_input_file : unit -> input_file
val get_input_file_name : unit -> string
val builtin_input_file : input_file
val same_input_file : input_file -> input_file -> bool
val compare_input_files : input_file -> input_file -> int
val with_file_contents : string -> (unit -> 'a) -> 'a
("DEBUG:rule", [Tag1 (("input_file", 429), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/InputFile.mli", 22, 1350, 1350), ("src/InputFile.mli", 22, 1350, 1365), 0), 0, 0, 0, Tag1 ("Dune__exe__InputFile", 0)), 1, 0); (("new_input_file", 430), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -32), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("src/InputFile.mli", 27, 1461, 1461), ("src/InputFile.mli", 27, 1461, 1495), 0), 0, Tag1 ("Dune__exe__InputFile", 1)), 0); (("get_input_file", 431), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -29), (Tag3 ((("input_file", 429)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("src/InputFile.mli", 32, 1628, 1628), ("src/InputFile.mli", 32, 1628, 1666), 0), 0, Tag1 ("Dune__exe__InputFile", 2)), 0); (("get_input_file_name", 432), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -26), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("src/InputFile.mli", 33, 1667, 1667), ("src/InputFile.mli", 33, 1667, 1706), 0), 0, Tag1 ("Dune__exe__InputFile", 3)), 0); (("builtin_input_file", 433), ((Tag3 ((("input_file", 429)), 0, (0)), 100000000, 0, -23), 0, (("src/InputFile.mli", 38, 1859, 1859), ("src/InputFile.mli", 38, 1859, 1893), 0), 0, Tag1 ("Dune__exe__InputFile", 4)), 0); (("same_input_file", 434), ((Tag1 (0, (Tag3 ((("input_file", 429)), 0, (0)), 100000000, 0, -22), (Tag1 (0, (Tag3 ((("input_file", 429)), 0, (0)), 100000000, 0, -21), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("src/InputFile.mli", 43, 2027, 2027), ("src/InputFile.mli", 43, 2027, 2080), 0), 0, Tag1 ("Dune__exe__InputFile", 5)), 0); (("compare_input_files", 435), ((Tag1 (0, (Tag3 ((("input_file", 429)), 0, (0)), 100000000, 0, -17), (Tag1 (0, (Tag3 ((("input_file", 429)), 0, (0)), 100000000, 0, -16), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("src/InputFile.mli", 48, 2203, 2203), ("src/InputFile.mli", 48, 2203, 2259), 0), 0, Tag1 ("Dune__exe__InputFile", 6)), 0); (("with_file_contents", 436), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -12), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -11), ((("a")), 100000000, 0, -9), 0), 100000000, 0, -10), ((("a")), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("src/InputFile.mli", 58, 2621, 2621), ("src/InputFile.mli", 58, 2621, 2673), 0), 0, Tag1 ("Dune__exe__InputFile", 7)), 0); (("chunk", 437), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -5); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -6)]), 100000000, 0, -4), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/InputFile.mli", 63, 2797, 2797), ("src/InputFile.mli", 63, 2797, 2853), 0), 0, Tag1 ("Dune__exe__InputFile", 8)), 0)], "Dune__exe__InputFile", [("Dune__exe__InputFile", (",\0246\029z@\127T\235\227k~\t\138\213%")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("MenhirSdk", ("F\232\012\196l\143\145[\255\2193U\197\027\176\139")); ("Dune__exe", ("\137\000\197\175$\007]\218\141\248\172\212\146c\153\212")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [1; (0)])
val chunk : Lexing.position * Lexing.position -> string
