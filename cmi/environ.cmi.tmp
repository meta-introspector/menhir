type link_info = Linked of string | NotLinked
type key = int CEphemeron.key option ref
type constant_key = Declarations.constant_body * (link_info ref * key)
type mind_key = Declarations.mutual_inductive_body * link_info ref
module Globals :
  sig
    type t
    type view = {
      constants : constant_key Names.Cmap_env.t;
      inductives : mind_key Names.Mindmap_env.t;
      modules : Declarations.module_body Names.MPmap.t;
      modtypes : Declarations.module_type_body Names.MPmap.t;
    }
    val view : t -> view
  end
type named_context_val = private {
  env_named_ctx : Constr.named_context;
  env_named_map : Constr.named_declaration Names.Id.Map.t;
  env_named_idx : Constr.named_declaration Range.t;
}
type rel_context_val = private {
  env_rel_ctx : Constr.rel_context;
  env_rel_map : Constr.rel_declaration Range.t;
}
type env = private {
  env_globals : Globals.t;
  env_named_context : named_context_val;
  env_rel_context : rel_context_val;
  env_nb_rel : int;
  env_universes : UGraph.t;
  env_universes_lbound : UGraph.Bound.t;
  irr_constants : Names.Cset_env.t;
  irr_inds : Names.Indset_env.t;
  env_typing_flags : Declarations.typing_flags;
  retroknowledge : Retroknowledge.retroknowledge;
}
val oracle : env -> Conv_oracle.oracle
val set_oracle : env -> Conv_oracle.oracle -> env
val eq_named_context_val : named_context_val -> named_context_val -> bool
val empty_env : env
val universes : env -> UGraph.t
val universes_lbound : env -> UGraph.Bound.t
val set_universes_lbound : env -> UGraph.Bound.t -> env
val rel_context : env -> Constr.rel_context
val named_context : env -> Constr.named_context
val named_context_val : env -> named_context_val
val set_universes : UGraph.t -> env -> env
val typing_flags : env -> Declarations.typing_flags
val is_impredicative_set : env -> bool
val type_in_type : env -> bool
val deactivated_guard : env -> bool
val indices_matter : env -> bool
val is_impredicative_sort : env -> Sorts.t -> bool
val is_impredicative_family : env -> Sorts.family -> bool
val empty_context : env -> bool
val nb_rel : env -> int
val push_rel : Constr.rel_declaration -> env -> env
val push_rel_context : Constr.rel_context -> env -> env
val push_rec_types : Constr.rec_declaration -> env -> env
val push_rel_context_val :
  Constr.rel_declaration -> rel_context_val -> rel_context_val
val set_rel_context_val : rel_context_val -> env -> env
val empty_rel_context_val : rel_context_val
val lookup_rel : int -> env -> Constr.rel_declaration
val evaluable_rel : int -> env -> bool
val env_of_rel : int -> env -> env
val fold_rel_context :
  (env -> Constr.rel_declaration -> 'a -> 'a) -> env -> init:'a -> 'a
val named_context_of_val : named_context_val -> Constr.named_context
val val_of_named_context : Constr.named_context -> named_context_val
val empty_named_context_val : named_context_val
val ids_of_named_context_val : named_context_val -> Names.Id.Set.t
val map_named_val :
  (Constr.named_declaration -> Constr.named_declaration) ->
  named_context_val -> named_context_val
val push_named : Constr.named_declaration -> env -> env
val push_named_context : Constr.named_context -> env -> env
val push_named_context_val :
  Constr.named_declaration -> named_context_val -> named_context_val
val lookup_named : Names.variable -> env -> Constr.named_declaration
val lookup_named_ctxt :
  Names.variable -> named_context_val -> Constr.named_declaration
val evaluable_named : Names.variable -> env -> bool
val named_type : Names.variable -> env -> Constr.types
val named_body : Names.variable -> env -> Constr.constr option
val fold_named_context :
  (env -> Constr.named_declaration -> 'a -> 'a) -> env -> init:'a -> 'a
val match_named_context_val :
  named_context_val -> (Constr.named_declaration * named_context_val) option
val fold_named_context_reverse :
  ('a -> Constr.named_declaration -> 'a) -> init:'a -> env -> 'a
val reset_context : env -> env
val reset_with_named_context : named_context_val -> env -> env
val pop_rel_context : int -> env -> env
val fold_constants :
  (Names.Constant.t -> Declarations.constant_body -> 'a -> 'a) ->
  env -> 'a -> 'a
val fold_inductives :
  (Names.MutInd.t -> Declarations.mutual_inductive_body -> 'a -> 'a) ->
  env -> 'a -> 'a
val add_constant :
  Names.Constant.t -> Declarations.constant_body -> env -> env
val add_constant_key :
  Names.Constant.t -> Declarations.constant_body -> link_info -> env -> env
val lookup_constant_key : Names.Constant.t -> env -> constant_key
val lookup_constant : Names.Constant.t -> env -> Declarations.constant_body
val evaluable_constant : Names.Constant.t -> env -> bool
val mem_constant : Names.Constant.t -> env -> bool
val polymorphic_constant : Names.Constant.t -> env -> bool
val polymorphic_pconstant : Constr.pconstant -> env -> bool
val type_in_type_constant : Names.Constant.t -> env -> bool
type const_evaluation_result =
    NoBody
  | Opaque
  | IsPrimitive of Univ.Instance.t * CPrimitives.t
exception NotEvaluableConst of const_evaluation_result
val constant_type :
  env -> Names.Constant.t Univ.puniverses -> Constr.types Univ.constrained
val constant_value_and_type :
  env ->
  Names.Constant.t Univ.puniverses ->
  Constr.constr option * Constr.types * Univ.Constraints.t
val constant_context : env -> Names.Constant.t -> Univ.AbstractContext.t
val constant_value_in :
  env -> Names.Constant.t Univ.puniverses -> Constr.constr
val constant_type_in :
  env -> Names.Constant.t Univ.puniverses -> Constr.types
val constant_opt_value_in :
  env -> Names.Constant.t Univ.puniverses -> Constr.constr option
val is_primitive : env -> Names.Constant.t -> bool
val get_primitive : env -> Names.Constant.t -> CPrimitives.t option
val is_array_type : env -> Names.Constant.t -> bool
val is_int63_type : env -> Names.Constant.t -> bool
val is_float64_type : env -> Names.Constant.t -> bool
val is_primitive_type : env -> Names.Constant.t -> bool
val lookup_projection : Names.Projection.t -> env -> Constr.types
val get_projection :
  env -> Names.inductive -> proj_arg:int -> Names.Projection.Repr.t
val get_projections :
  env -> Names.inductive -> Names.Projection.Repr.t array option
val lookup_mind_key : Names.MutInd.t -> env -> mind_key
val add_mind_key : Names.MutInd.t -> mind_key -> env -> env
val add_mind :
  Names.MutInd.t -> Declarations.mutual_inductive_body -> env -> env
val lookup_mind : Names.MutInd.t -> env -> Declarations.mutual_inductive_body
val mem_mind : Names.MutInd.t -> env -> bool
val mind_context : env -> Names.MutInd.t -> Univ.AbstractContext.t
val polymorphic_ind : Names.inductive -> env -> bool
val polymorphic_pind : Constr.pinductive -> env -> bool
val type_in_type_ind : Names.inductive -> env -> bool
val template_polymorphic_ind : Names.inductive -> env -> bool
val template_polymorphic_variables :
  Names.inductive -> env -> Univ.Level.t list
val template_polymorphic_pind : Constr.pinductive -> env -> bool
module type QNameS =
  sig
    type t
    val equal : env -> t -> t -> bool
    val compare : env -> t -> t -> int
    val hash : env -> t -> int
  end
module QConstant :
  sig
    type t = Names.Constant.t
    val equal : env -> t -> t -> bool
    val compare : env -> t -> t -> int
    val hash : env -> t -> int
  end
module QMutInd :
  sig
    type t = Names.MutInd.t
    val equal : env -> t -> t -> bool
    val compare : env -> t -> t -> int
    val hash : env -> t -> int
  end
module QInd :
  sig
    type t = Names.Ind.t
    val equal : env -> t -> t -> bool
    val compare : env -> t -> t -> int
    val hash : env -> t -> int
  end
module QConstruct :
  sig
    type t = Names.Construct.t
    val equal : env -> t -> t -> bool
    val compare : env -> t -> t -> int
    val hash : env -> t -> int
  end
module QProjection :
  sig
    type t = Names.Projection.t
    val equal : env -> t -> t -> bool
    val compare : env -> t -> t -> int
    val hash : env -> t -> int
    module Repr :
      sig
        type t = Names.Projection.Repr.t
        val equal : env -> t -> t -> bool
        val compare : env -> t -> t -> int
        val hash : env -> t -> int
      end
  end
module QGlobRef :
  sig
    type t = Names.GlobRef.t
    val equal : env -> t -> t -> bool
    val compare : env -> t -> t -> int
    val hash : env -> t -> int
  end
val add_modtype : Declarations.module_type_body -> env -> env
val shallow_add_module : Declarations.module_body -> env -> env
val lookup_module : Names.ModPath.t -> env -> Declarations.module_body
val lookup_modtype : Names.ModPath.t -> env -> Declarations.module_type_body
val add_constraints : Univ.Constraints.t -> env -> env
val check_constraints : Univ.Constraints.t -> env -> bool
val push_context : ?strict:bool -> Univ.UContext.t -> env -> env
val push_context_set : ?strict:bool -> Univ.ContextSet.t -> env -> env
val push_subgraph : Univ.ContextSet.t -> env -> env
val set_typing_flags : Declarations.typing_flags -> env -> env
val set_impredicative_set : bool -> env -> env
val set_type_in_type : bool -> env -> env
val set_allow_sprop : bool -> env -> env
val sprop_allowed : env -> bool
val same_flags :
  Declarations.typing_flags -> Declarations.typing_flags -> bool
val update_typing_flags :
  ?typing_flags:Declarations.typing_flags -> env -> env
val universes_of_global : env -> Names.GlobRef.t -> Univ.AbstractContext.t
val global_vars_set : env -> Constr.constr -> Names.Id.Set.t
val vars_of_global : env -> Names.GlobRef.t -> Names.Id.Set.t
val really_needed : env -> Names.Id.Set.t -> Names.Id.Set.t
val keep_hyps : env -> Names.Id.Set.t -> Constr.named_context
type ('constr, 'types) punsafe_judgment = {
  uj_val : 'constr;
  uj_type : 'types;
}
val on_judgment :
  ('a -> 'b) -> ('a, 'a) punsafe_judgment -> ('b, 'b) punsafe_judgment
val on_judgment_value :
  ('c -> 'c) -> ('c, 't) punsafe_judgment -> ('c, 't) punsafe_judgment
val on_judgment_type :
  ('t -> 't) -> ('c, 't) punsafe_judgment -> ('c, 't) punsafe_judgment
type unsafe_judgment = (Constr.constr, Constr.types) punsafe_judgment
val make_judge : 'constr -> 'types -> ('constr, 'types) punsafe_judgment
val j_val : ('constr, 'types) punsafe_judgment -> 'constr
val j_type : ('constr, 'types) punsafe_judgment -> 'types
type ('types, 'sorts) punsafe_type_judgment = {
  utj_val : 'types;
  utj_type : 'sorts;
}
type unsafe_type_judgment = (Constr.types, Sorts.t) punsafe_type_judgment
exception Hyp_not_found
val apply_to_hyp :
  named_context_val ->
  Names.variable ->
  (Constr.named_context ->
   Constr.named_declaration ->
   Constr.named_context -> Constr.named_declaration) ->
  named_context_val
val remove_hyps :
  Names.Id.Set.t ->
  (Constr.named_declaration -> Constr.named_declaration) ->
  named_context_val -> named_context_val
val is_polymorphic : env -> Names.GlobRef.t -> bool
val is_template_polymorphic : env -> Names.GlobRef.t -> bool
val get_template_polymorphic_variables :
  env -> Names.GlobRef.t -> Univ.Level.t list
val is_type_in_type : env -> Names.GlobRef.t -> bool
val no_link_info : link_info
("DEBUG:rule", [Tag1 (("link_info", 1597), (0, 0, Tag1 ([(("Linked", 600), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -683)]), 0, (("kernel/environ.mli", 33, 1496, 1498), ("kernel/environ.mli", 33, 1496, 1516), 0), 0, Tag1 ("Environ", 2)); (("NotLinked", 601), (0), 0, (("kernel/environ.mli", 34, 1517, 1519), ("kernel/environ.mli", 34, 1517, 1530), 0), 0, Tag1 ("Environ", 3))], 0), 1, 0, 0, 0, 0, 0, (("kernel/environ.mli", 32, 1479, 1479), ("kernel/environ.mli", 34, 1517, 1530), 0), 0, 0, 0, Tag1 ("Environ", 1)), 1, 0); Tag1 (("key", 1598), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("CEphemeron")), "key"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -682)], (0)), 100000000, 0, -681)], (0)), 100000000, 0, -680)], (0)), 100000000, 0, -679)), 0, 0, 0, 0, (("kernel/environ.mli", 36, 1532, 1532), ("kernel/environ.mli", 36, 1532, 1572), 0), 0, 0, 0, Tag1 ("Environ", 4)), 1, 0); Tag1 (("constant_key", 1599), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((Tag2 ("Declarations")), "constant_body"), 0, (0)), 100000000, 0, -674); (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((("link_info", 1597)), 0, (0)), 100000000, 0, -677)], (0)), 100000000, 0, -676); (Tag3 ((("key", 1598)), 0, (0)), 100000000, 0, -678)]), 100000000, 0, -675)]), 100000000, 0, -673)), 0, 0, 0, 0, (("kernel/environ.mli", 38, 1574, 1574), ("kernel/environ.mli", 38, 1574, 1631), 0), 0, 0, 0, Tag1 ("Environ", 5)), 1, 0); Tag1 (("mind_key", 1600), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((Tag2 ("Declarations")), "mutual_inductive_body"), 0, (0)), 100000000, 0, -670); (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((("link_info", 1597)), 0, (0)), 100000000, 0, -672)], (0)), 100000000, 0, -671)]), 100000000, 0, -669)), 0, 0, 0, 0, (("kernel/environ.mli", 40, 1633, 1633), ("kernel/environ.mli", 40, 1633, 1686), 0), 0, 0, 0, Tag1 ("Environ", 6)), 1, 0); Tag3 (("Globals", 1601), 0, (Tag1 ([Tag1 (("t", 1741), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("kernel/environ.mli", 43, 1709, 1711), ("kernel/environ.mli", 43, 1709, 1717), 0), 0, 0, 0, Tag1 ("Environ", 7)), 1, 0); Tag1 (("view", 1742), (0, 0, [[(("constants", 671), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Cmap_env"), "t"), [(Tag3 ((("constant_key", 1599)), 0, (0)), 100000000, 0, -688)], (0)), 100000000, 0, -687), (("kernel/environ.mli", 46, 1733, 1739), ("kernel/environ.mli", 47, 1775, 1780), 0), 0, Tag1 ("Environ", 9)); (("inductives", 718), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Mindmap_env"), "t"), [(Tag3 ((("mind_key", 1600)), 0, (0)), 100000000, 0, -690)], (0)), 100000000, 0, -689), (("kernel/environ.mli", 47, 1775, 1781), ("kernel/environ.mli", 48, 1817, 1822), 0), 0, Tag1 ("Environ", 10)); (("modules", 764), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MPmap"), "t"), [(Tag3 (Tag1 ((Tag2 ("Declarations")), "module_body"), 0, (0)), 100000000, 0, -692)], (0)), 100000000, 0, -691), (("kernel/environ.mli", 48, 1817, 1823), ("kernel/environ.mli", 49, 1853, 1858), 0), 0, Tag1 ("Environ", 11)); (("modtypes", 765), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MPmap"), "t"), [(Tag3 (Tag1 ((Tag2 ("Declarations")), "module_type_body"), 0, (0)), 100000000, 0, -694)], (0)), 100000000, 0, -693), (("kernel/environ.mli", 49, 1853, 1859), ("kernel/environ.mli", 49, 1853, 1894), 0), 0, Tag1 ("Environ", 12))]], 1, 0, 0, 0, 0, 0, (("kernel/environ.mli", 45, 1719, 1721), ("kernel/environ.mli", 50, 1895, 1900), 0), 0, 0, 0, Tag1 ("Environ", 8)), 1, 0); (("view", 1743), ((Tag1 (0, (Tag3 ((("t", 1741)), 0, (0)), 100000000, 0, -686), (Tag3 ((("view", 1742)), 0, (0)), 100000000, 0, -685), 0), 100000000, 0, -684), 0, (("kernel/environ.mli", 52, 1902, 1904), ("kernel/environ.mli", 52, 1902, 1924), 0), 0, Tag1 ("Environ", 13)), 0)]), 0, (("kernel/environ.mli", 42, 1688, 1688), ("kernel/environ.mli", 53, 1925, 1928), 0), Tag1 ("Environ", 14)), 0, 0); Tag1 (("named_context_val", 1602), (0, 0, [[(("env_named_ctx", 769), 0, (Tag3 (Tag1 ((Tag2 ("Constr")), "named_context"), 0, (0)), 100000000, 0, -664), (("kernel/environ.mli", 56, 1965, 1967), ("kernel/environ.mli", 56, 1965, 2004), 0), 0, Tag1 ("Environ", 16)); (("env_named_map", 831), 0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Map"), "t"), [(Tag3 (Tag1 ((Tag2 ("Constr")), "named_declaration"), 0, (0)), 100000000, 0, -666)], (0)), 100000000, 0, -665), (("kernel/environ.mli", 57, 2005, 2007), ("kernel/environ.mli", 57, 2005, 2057), 0), 0, Tag1 ("Environ", 17)); (("env_named_idx", 844), 0, (Tag3 (Tag1 ((Tag2 ("Range")), "t"), [(Tag3 (Tag1 ((Tag2 ("Constr")), "named_declaration"), 0, (0)), 100000000, 0, -668)], (0)), 100000000, 0, -667), (("kernel/environ.mli", 59, 2113, 2115), ("kernel/environ.mli", 59, 2113, 2164), 0), 0, Tag1 ("Environ", 18))]], 0, 0, 0, 0, 0, 0, (("kernel/environ.mli", 55, 1930, 1930), ("kernel/environ.mli", 61, 2225, 2226), 0), 0, 0, 0, Tag1 ("Environ", 15)), 1, 0); Tag1 (("rel_context_val", 1603), (0, 0, [[(("env_rel_ctx", 900), 0, (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -661), (("kernel/environ.mli", 64, 2261, 2263), ("kernel/environ.mli", 64, 2261, 2296), 0), 0, Tag1 ("Environ", 20)); (("env_rel_map", 901), 0, (Tag3 (Tag1 ((Tag2 ("Range")), "t"), [(Tag3 (Tag1 ((Tag2 ("Constr")), "rel_declaration"), 0, (0)), 100000000, 0, -663)], (0)), 100000000, 0, -662), (("kernel/environ.mli", 65, 2297, 2299), ("kernel/environ.mli", 65, 2297, 2344), 0), 0, Tag1 ("Environ", 21))]], 0, 0, 0, 0, 0, 0, (("kernel/environ.mli", 63, 2228, 2228), ("kernel/environ.mli", 66, 2345, 2346), 0), 0, 0, 0, Tag1 ("Environ", 19)), 1, 0); Tag1 (("env", 1604), (0, 0, [[(("env_globals", 947), 0, (Tag3 (Tag1 ((("Globals", 1601)), "t"), 0, (0)), 100000000, 0, -651), (("kernel/environ.mli", 69, 2369, 2371), ("kernel/environ.mli", 69, 2369, 2401), 0), 0, Tag1 ("Environ", 23)); (("env_named_context", 948), 0, (Tag3 ((("named_context_val", 1602)), 0, (0)), 100000000, 0, -652), (("kernel/environ.mli", 70, 2402, 2404), ("kernel/environ.mli", 70, 2402, 2442), 0), 0, Tag1 ("Environ", 24)); (("env_rel_context", 949), 0, (Tag3 ((("rel_context_val", 1603)), 0, (0)), 100000000, 0, -653), (("kernel/environ.mli", 71, 2467, 2469), ("kernel/environ.mli", 71, 2467, 2505), 0), 0, Tag1 ("Environ", 25)); (("env_nb_rel", 950), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -654), (("kernel/environ.mli", 72, 2506, 2508), ("kernel/environ.mli", 72, 2506, 2532), 0), 0, Tag1 ("Environ", 26)); (("env_universes", 988), 0, (Tag3 (Tag1 ((Tag2 ("UGraph")), "t"), 0, (0)), 100000000, 0, -655), (("kernel/environ.mli", 73, 2533, 2535), ("kernel/environ.mli", 73, 2533, 2560), 0), 0, Tag1 ("Environ", 27)); (("env_universes_lbound", 990), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("UGraph")), "Bound"), "t"), 0, (0)), 100000000, 0, -656), (("kernel/environ.mli", 74, 2561, 2563), ("kernel/environ.mli", 74, 2561, 2601), 0), 0, Tag1 ("Environ", 28)); (("irr_constants", 1017), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Cset_env"), "t"), 0, (0)), 100000000, 0, -657), (("kernel/environ.mli", 75, 2602, 2604), ("kernel/environ.mli", 75, 2602, 2631), 0), 0, Tag1 ("Environ", 29)); (("irr_inds", 1063), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Indset_env"), "t"), 0, (0)), 100000000, 0, -658), (("kernel/environ.mli", 76, 2632, 2634), ("kernel/environ.mli", 76, 2632, 2658), 0), 0, Tag1 ("Environ", 30)); (("env_typing_flags", 1064), 0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "typing_flags"), 0, (0)), 100000000, 0, -659), (("kernel/environ.mli", 77, 2659, 2661), ("kernel/environ.mli", 77, 2659, 2694), 0), 0, Tag1 ("Environ", 31)); (("retroknowledge", 1068), 0, (Tag3 (Tag1 ((Tag2 ("Retroknowledge")), "retroknowledge"), 0, (0)), 100000000, 0, -660), (("kernel/environ.mli", 78, 2695, 2697), ("kernel/environ.mli", 78, 2695, 2744), 0), 0, Tag1 ("Environ", 32))]], 0, 0, 0, 0, 0, 0, (("kernel/environ.mli", 68, 2348, 2348), ("kernel/environ.mli", 79, 2745, 2746), 0), 0, 0, 0, Tag1 ("Environ", 22)), 1, 0); (("oracle", 1605), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -650), (Tag3 (Tag1 ((Tag2 ("Conv_oracle")), "oracle"), 0, (0)), 100000000, 0, -649), 0), 100000000, 0, -648), 0, (("kernel/environ.mli", 81, 2748, 2748), ("kernel/environ.mli", 81, 2748, 2786), 0), 0, Tag1 ("Environ", 33)), 0); (("set_oracle", 1606), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -647), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Conv_oracle")), "oracle"), 0, (0)), 100000000, 0, -646), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -645), 0), 100000000, 0, -644), 0), 100000000, 0, -643), 0, (("kernel/environ.mli", 82, 2787, 2787), ("kernel/environ.mli", 82, 2787, 2836), 0), 0, Tag1 ("Environ", 34)), 0); (("eq_named_context_val", 1607), ((Tag1 (0, (Tag3 ((("named_context_val", 1602)), 0, (0)), 100000000, 0, -642), (Tag1 (0, (Tag3 ((("named_context_val", 1602)), 0, (0)), 100000000, 0, -641), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -640), 0), 100000000, 0, -639), 0), 100000000, 0, -638), 0, (("kernel/environ.mli", 84, 2838, 2838), ("kernel/environ.mli", 84, 2838, 2911), 0), 0, Tag1 ("Environ", 35)), 0); (("empty_env", 1608), ((Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -637), 0, (("kernel/environ.mli", 86, 2913, 2913), ("kernel/environ.mli", 86, 2913, 2932), 0), 0, Tag1 ("Environ", 36)), 0); (("universes", 1609), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -636), (Tag3 (Tag1 ((Tag2 ("UGraph")), "t"), 0, (0)), 100000000, 0, -635), 0), 100000000, 0, -634), 0, (("kernel/environ.mli", 88, 2934, 2934), ("kernel/environ.mli", 88, 2934, 2969), 0), 0, Tag1 ("Environ", 37)), 0); (("universes_lbound", 1610), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -633), (Tag3 (Tag1 (Tag1 ((Tag2 ("UGraph")), "Bound"), "t"), 0, (0)), 100000000, 0, -632), 0), 100000000, 0, -631), 0, (("kernel/environ.mli", 89, 2970, 2970), ("kernel/environ.mli", 89, 2970, 3014), 0), 0, Tag1 ("Environ", 38)), 0); (("set_universes_lbound", 1611), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -630), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("UGraph")), "Bound"), "t"), 0, (0)), 100000000, 0, -629), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -628), 0), 100000000, 0, -627), 0), 100000000, 0, -626), 0, (("kernel/environ.mli", 90, 3015, 3015), ("kernel/environ.mli", 90, 3015, 3070), 0), 0, Tag1 ("Environ", 39)), 0); (("rel_context", 1612), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -625), (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -624), 0), 100000000, 0, -623), 0, (("kernel/environ.mli", 91, 3071, 3071), ("kernel/environ.mli", 91, 3071, 3116), 0), 0, Tag1 ("Environ", 40)), 0); (("named_context", 1613), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -622), (Tag3 (Tag1 ((Tag2 ("Constr")), "named_context"), 0, (0)), 100000000, 0, -621), 0), 100000000, 0, -620), 0, (("kernel/environ.mli", 92, 3117, 3117), ("kernel/environ.mli", 92, 3117, 3164), 0), 0, Tag1 ("Environ", 41)), 0); (("named_context_val", 1614), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -619), (Tag3 ((("named_context_val", 1602)), 0, (0)), 100000000, 0, -618), 0), 100000000, 0, -617), 0, (("kernel/environ.mli", 93, 3165, 3165), ("kernel/environ.mli", 93, 3165, 3213), 0), 0, Tag1 ("Environ", 42)), 0); (("set_universes", 1615), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("UGraph")), "t"), 0, (0)), 100000000, 0, -616), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -615), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -614), 0), 100000000, 0, -613), 0), 100000000, 0, -612), 0, (("kernel/environ.mli", 95, 3215, 3215), ("kernel/environ.mli", 95, 3215, 3257), 0), 0, Tag1 ("Environ", 43)), 0); (("typing_flags", 1616), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -611), (Tag3 (Tag1 ((Tag2 ("Declarations")), "typing_flags"), 0, (0)), 100000000, 0, -610), 0), 100000000, 0, -609), 0, (("kernel/environ.mli", 97, 3259, 3259), ("kernel/environ.mli", 97, 3259, 3300), 0), 0, Tag1 ("Environ", 44)), 0); (("is_impredicative_set", 1617), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -608), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -607), 0), 100000000, 0, -606), 0, (("kernel/environ.mli", 98, 3301, 3301), ("kernel/environ.mli", 98, 3301, 3339), 0), 0, Tag1 ("Environ", 45)), 0); (("type_in_type", 1618), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -605), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -604), 0), 100000000, 0, -603), 0, (("kernel/environ.mli", 99, 3340, 3340), ("kernel/environ.mli", 99, 3340, 3370), 0), 0, Tag1 ("Environ", 46)), 0); (("deactivated_guard", 1619), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -602), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -601), 0), 100000000, 0, -600), 0, (("kernel/environ.mli", 100, 3371, 3371), ("kernel/environ.mli", 100, 3371, 3406), 0), 0, Tag1 ("Environ", 47)), 0); (("indices_matter", 1620), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -599), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -598), 0), 100000000, 0, -597), 0, (("kernel/environ.mli", 101, 3407, 3407), ("kernel/environ.mli", 101, 3407, 3439), 0), 0, Tag1 ("Environ", 48)), 0); (("is_impredicative_sort", 1621), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -596), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sorts")), "t"), 0, (0)), 100000000, 0, -595), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -594), 0), 100000000, 0, -593), 0), 100000000, 0, -592), 0, (("kernel/environ.mli", 103, 3441, 3441), ("kernel/environ.mli", 103, 3441, 3491), 0), 0, Tag1 ("Environ", 49)), 0); (("is_impredicative_family", 1622), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -591), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sorts")), "family"), 0, (0)), 100000000, 0, -590), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -589), 0), 100000000, 0, -588), 0), 100000000, 0, -587), 0, (("kernel/environ.mli", 104, 3492, 3492), ("kernel/environ.mli", 104, 3492, 3549), 0), 0, Tag1 ("Environ", 50)), 0); (("empty_context", 1623), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -586), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -585), 0), 100000000, 0, -584), 0, (("kernel/environ.mli", 107, 3585, 3585), ("kernel/environ.mli", 107, 3585, 3616), 0), 0, Tag1 ("Environ", 51)), 0); (("nb_rel", 1624), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -583), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -582), 0), 100000000, 0, -581), 0, (("kernel/environ.mli", 111, 3678, 3678), ("kernel/environ.mli", 111, 3678, 3711), 0), 0, Tag1 ("Environ", 52)), 0); (("push_rel", 1625), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_declaration"), 0, (0)), 100000000, 0, -580), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -579), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -578), 0), 100000000, 0, -577), 0), 100000000, 0, -576), 0, (("kernel/environ.mli", 112, 3712, 3712), ("kernel/environ.mli", 112, 3712, 3771), 0), 0, Tag1 ("Environ", 53)), 0); (("push_rel_context", 1626), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -575), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -574), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -573), 0), 100000000, 0, -572), 0), 100000000, 0, -571), 0, (("kernel/environ.mli", 113, 3772, 3772), ("kernel/environ.mli", 113, 3772, 3827), 0), 0, Tag1 ("Environ", 54)), 0); (("push_rec_types", 1627), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "rec_declaration"), 0, (0)), 100000000, 0, -570), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -569), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -568), 0), 100000000, 0, -567), 0), 100000000, 0, -566), 0, (("kernel/environ.mli", 114, 3828, 3828), ("kernel/environ.mli", 114, 3828, 3880), 0), 0, Tag1 ("Environ", 55)), 0); (("push_rel_context_val", 1628), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_declaration"), 0, (0)), 100000000, 0, -565), (Tag1 (0, (Tag3 ((("rel_context_val", 1603)), 0, (0)), 100000000, 0, -564), (Tag3 ((("rel_context_val", 1603)), 0, (0)), 100000000, 0, -563), 0), 100000000, 0, -562), 0), 100000000, 0, -561), 0, (("kernel/environ.mli", 116, 3882, 3882), ("kernel/environ.mli", 116, 3882, 3969), 0), 0, Tag1 ("Environ", 56)), 0); (("set_rel_context_val", 1629), ((Tag1 (0, (Tag3 ((("rel_context_val", 1603)), 0, (0)), 100000000, 0, -560), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -559), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -558), 0), 100000000, 0, -557), 0), 100000000, 0, -556), 0, (("kernel/environ.mli", 117, 3970, 3970), ("kernel/environ.mli", 117, 3970, 4025), 0), 0, Tag1 ("Environ", 57)), 0); (("empty_rel_context_val", 1630), ((Tag3 ((("rel_context_val", 1603)), 0, (0)), 100000000, 0, -555), 0, (("kernel/environ.mli", 118, 4026, 4026), ("kernel/environ.mli", 118, 4026, 4069), 0), 0, Tag1 ("Environ", 58)), 0); (("lookup_rel", 1631), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -554), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -553), (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_declaration"), 0, (0)), 100000000, 0, -552), 0), 100000000, 0, -551), 0), 100000000, 0, -550), 0, (("kernel/environ.mli", 122, 4212, 4212), ("kernel/environ.mli", 122, 4212, 4268), 0), 0, Tag1 ("Environ", 59)), 0); (("evaluable_rel", 1632), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -549), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -548), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -547), 0), 100000000, 0, -546), 0), 100000000, 0, -545), 0, (("kernel/environ.mli", 123, 4269, 4269), ("kernel/environ.mli", 123, 4269, 4307), 0), 0, Tag1 ("Environ", 60)), 0); (("env_of_rel", 1633), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -544), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -543), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -542), 0), 100000000, 0, -541), 0), 100000000, 0, -540), 0, (("kernel/environ.mli", 124, 4308, 4308), ("kernel/environ.mli", 124, 4308, 4346), 0), 0, Tag1 ("Environ", 61)), 0); (("fold_rel_context", 1634), ((Tag1 (0, (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -539), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_declaration"), 0, (0)), 100000000, 0, -538), (Tag1 (0, ((("a")), 100000000, 0, -533), ((("a")), 100000000, 0, -533), 0), 100000000, 0, -537), 0), 100000000, 0, -536), 0), 100000000, 0, -535), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -534), (Tag1 (("init"), ((("a")), 100000000, 0, -533), ((("a")), 100000000, 0, -533), 0), 100000000, 0, -532), 0), 100000000, 0, -531), 0), 100000000, 0, -530), 0, (("kernel/environ.mli", 128, 4389, 4389), ("kernel/environ.mli", 129, 4412, 4481), 0), 0, Tag1 ("Environ", 62)), 0); (("named_context_of_val", 1635), ((Tag1 (0, (Tag3 ((("named_context_val", 1602)), 0, (0)), 100000000, 0, -529), (Tag3 (Tag1 ((Tag2 ("Constr")), "named_context"), 0, (0)), 100000000, 0, -528), 0), 100000000, 0, -527), 0, (("kernel/environ.mli", 133, 4558, 4558), ("kernel/environ.mli", 133, 4558, 4626), 0), 0, Tag1 ("Environ", 63)), 0); (("val_of_named_context", 1636), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "named_context"), 0, (0)), 100000000, 0, -526), (Tag3 ((("named_context_val", 1602)), 0, (0)), 100000000, 0, -525), 0), 100000000, 0, -524), 0, (("kernel/environ.mli", 134, 4627, 4627), ("kernel/environ.mli", 134, 4627, 4695), 0), 0, Tag1 ("Environ", 64)), 0); (("empty_named_context_val", 1637), ((Tag3 ((("named_context_val", 1602)), 0, (0)), 100000000, 0, -523), 0, (("kernel/environ.mli", 135, 4696, 4696), ("kernel/environ.mli", 135, 4696, 4743), 0), 0, Tag1 ("Environ", 65)), 0); (("ids_of_named_context_val", 1638), ((Tag1 (0, (Tag3 ((("named_context_val", 1602)), 0, (0)), 100000000, 0, -522), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -521), 0), 100000000, 0, -520), 0, (("kernel/environ.mli", 136, 4744, 4744), ("kernel/environ.mli", 136, 4744, 4804), 0), 0, Tag1 ("Environ", 66)), 0); (("map_named_val", 1639), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "named_declaration"), 0, (0)), 100000000, 0, -519), (Tag3 (Tag1 ((Tag2 ("Constr")), "named_declaration"), 0, (0)), 100000000, 0, -518), 0), 100000000, 0, -517), (Tag1 (0, (Tag3 ((("named_context_val", 1602)), 0, (0)), 100000000, 0, -516), (Tag3 ((("named_context_val", 1602)), 0, (0)), 100000000, 0, -515), 0), 100000000, 0, -514), 0), 100000000, 0, -513), 0, (("kernel/environ.mli", 142, 4972, 4972), ("kernel/environ.mli", 143, 4992, 5077), 0), 0, Tag1 ("Environ", 67)), 0); (("push_named", 1640), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "named_declaration"), 0, (0)), 100000000, 0, -512), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -511), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -510), 0), 100000000, 0, -509), 0), 100000000, 0, -508), 0, (("kernel/environ.mli", 145, 5079, 5079), ("kernel/environ.mli", 145, 5079, 5134), 0), 0, Tag1 ("Environ", 68)), 0); (("push_named_context", 1641), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "named_context"), 0, (0)), 100000000, 0, -507), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -506), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -505), 0), 100000000, 0, -504), 0), 100000000, 0, -503), 0, (("kernel/environ.mli", 146, 5135, 5135), ("kernel/environ.mli", 146, 5135, 5194), 0), 0, Tag1 ("Environ", 69)), 0); (("push_named_context_val", 1642), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "named_declaration"), 0, (0)), 100000000, 0, -502), (Tag1 (0, (Tag3 ((("named_context_val", 1602)), 0, (0)), 100000000, 0, -501), (Tag3 ((("named_context_val", 1602)), 0, (0)), 100000000, 0, -500), 0), 100000000, 0, -499), 0), 100000000, 0, -498), 0, (("kernel/environ.mli", 147, 5195, 5195), ("kernel/environ.mli", 148, 5225, 5295), 0), 0, Tag1 ("Environ", 70)), 0); (("lookup_named", 1643), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "variable"), 0, (0)), 100000000, 0, -497), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -496), (Tag3 (Tag1 ((Tag2 ("Constr")), "named_declaration"), 0, (0)), 100000000, 0, -495), 0), 100000000, 0, -494), 0), 100000000, 0, -493), 0, (("kernel/environ.mli", 155, 5428, 5428), ("kernel/environ.mli", 155, 5428, 5494), 0), 0, Tag1 ("Environ", 71)), 0); (("lookup_named_ctxt", 1644), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "variable"), 0, (0)), 100000000, 0, -492), (Tag1 (0, (Tag3 ((("named_context_val", 1602)), 0, (0)), 100000000, 0, -491), (Tag3 (Tag1 ((Tag2 ("Constr")), "named_declaration"), 0, (0)), 100000000, 0, -490), 0), 100000000, 0, -489), 0), 100000000, 0, -488), 0, (("kernel/environ.mli", 156, 5495, 5495), ("kernel/environ.mli", 156, 5495, 5576), 0), 0, Tag1 ("Environ", 72)), 0); (("evaluable_named", 1645), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "variable"), 0, (0)), 100000000, 0, -487), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -486), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -485), 0), 100000000, 0, -484), 0), 100000000, 0, -483), 0, (("kernel/environ.mli", 157, 5577, 5577), ("kernel/environ.mli", 157, 5577, 5623), 0), 0, Tag1 ("Environ", 73)), 0); (("named_type", 1646), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "variable"), 0, (0)), 100000000, 0, -482), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -481), (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -480), 0), 100000000, 0, -479), 0), 100000000, 0, -478), 0, (("kernel/environ.mli", 158, 5624, 5624), ("kernel/environ.mli", 158, 5624, 5665), 0), 0, Tag1 ("Environ", 74)), 0); (("named_body", 1647), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "variable"), 0, (0)), 100000000, 0, -477), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -476), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -475)], (0)), 100000000, 0, -474), 0), 100000000, 0, -473), 0), 100000000, 0, -472), 0, (("kernel/environ.mli", 159, 5666, 5666), ("kernel/environ.mli", 159, 5666, 5715), 0), 0, Tag1 ("Environ", 75)), 0); (("fold_named_context", 1648), ((Tag1 (0, (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -471), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "named_declaration"), 0, (0)), 100000000, 0, -470), (Tag1 (0, ((("a")), 100000000, 0, -465), ((("a")), 100000000, 0, -465), 0), 100000000, 0, -469), 0), 100000000, 0, -468), 0), 100000000, 0, -467), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -466), (Tag1 (("init"), ((("a")), 100000000, 0, -465), ((("a")), 100000000, 0, -465), 0), 100000000, 0, -464), 0), 100000000, 0, -463), 0), 100000000, 0, -462), 0, (("kernel/environ.mli", 163, 5796, 5796), ("kernel/environ.mli", 164, 5821, 5892), 0), 0, Tag1 ("Environ", 76)), 0); (("match_named_context_val", 1649), ((Tag1 (0, (Tag3 ((("named_context_val", 1602)), 0, (0)), 100000000, 0, -461), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Constr")), "named_declaration"), 0, (0)), 100000000, 0, -459); (Tag3 ((("named_context_val", 1602)), 0, (0)), 100000000, 0, -460)]), 100000000, 0, -458)], (0)), 100000000, 0, -457), 0), 100000000, 0, -456), 0, (("kernel/environ.mli", 166, 5894, 5894), ("kernel/environ.mli", 166, 5894, 5991), 0), 0, Tag1 ("Environ", 77)), 0); (("fold_named_context_reverse", 1650), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -451), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "named_declaration"), 0, (0)), 100000000, 0, -455), ((("a")), 100000000, 0, -451), 0), 100000000, 0, -454), 0), 100000000, 0, -453), (Tag1 (("init"), ((("a")), 100000000, 0, -451), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -452), ((("a")), 100000000, 0, -451), 0), 100000000, 0, -450), 0), 100000000, 0, -449), 0), 100000000, 0, -448), 0, (("kernel/environ.mli", 169, 6057, 6057), ("kernel/environ.mli", 170, 6090, 6154), 0), 0, Tag1 ("Environ", 78)), 0); (("reset_context", 1651), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -447), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -446), 0), 100000000, 0, -445), 0, (("kernel/environ.mli", 173, 6199, 6199), ("kernel/environ.mli", 173, 6199, 6229), 0), 0, Tag1 ("Environ", 79)), 0); (("reset_with_named_context", 1652), ((Tag1 (0, (Tag3 ((("named_context_val", 1602)), 0, (0)), 100000000, 0, -444), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -443), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -442), 0), 100000000, 0, -441), 0), 100000000, 0, -440), 0, (("kernel/environ.mli", 176, 6292, 6292), ("kernel/environ.mli", 176, 6292, 6354), 0), 0, Tag1 ("Environ", 80)), 0); (("pop_rel_context", 1653), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -439), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -438), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -437), 0), 100000000, 0, -436), 0), 100000000, 0, -435), 0, (("kernel/environ.mli", 179, 6423, 6423), ("kernel/environ.mli", 179, 6423, 6462), 0), 0, Tag1 ("Environ", 81)), 0); (("fold_constants", 1654), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -434), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "constant_body"), 0, (0)), 100000000, 0, -433), (Tag1 (0, ((("a")), 100000000, 0, -428), ((("a")), 100000000, 0, -428), 0), 100000000, 0, -432), 0), 100000000, 0, -431), 0), 100000000, 0, -430), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -429), (Tag1 (0, ((("a")), 100000000, 0, -428), ((("a")), 100000000, 0, -428), 0), 100000000, 0, -427), 0), 100000000, 0, -426), 0), 100000000, 0, -425), 0, (("kernel/environ.mli", 182, 6491, 6491), ("kernel/environ.mli", 182, 6491, 6572), 0), 0, Tag1 ("Environ", 82)), 0); (("fold_inductives", 1655), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MutInd"), "t"), 0, (0)), 100000000, 0, -424), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "mutual_inductive_body"), 0, (0)), 100000000, 0, -423), (Tag1 (0, ((("a")), 100000000, 0, -418), ((("a")), 100000000, 0, -418), 0), 100000000, 0, -422), 0), 100000000, 0, -421), 0), 100000000, 0, -420), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -419), (Tag1 (0, ((("a")), 100000000, 0, -418), ((("a")), 100000000, 0, -418), 0), 100000000, 0, -417), 0), 100000000, 0, -416), 0), 100000000, 0, -415), 0, (("kernel/environ.mli", 183, 6573, 6573), ("kernel/environ.mli", 183, 6573, 6674), 0), 0, Tag1 ("Environ", 83)), 0); (("add_constant", 1656), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -414), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "constant_body"), 0, (0)), 100000000, 0, -413), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -412), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -411), 0), 100000000, 0, -410), 0), 100000000, 0, -409), 0), 100000000, 0, -408), 0, (("kernel/environ.mli", 188, 6747, 6747), ("kernel/environ.mli", 188, 6747, 6807), 0), 0, Tag1 ("Environ", 84)), 0); (("add_constant_key", 1657), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -407), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "constant_body"), 0, (0)), 100000000, 0, -406), (Tag1 (0, (Tag3 ((("link_info", 1597)), 0, (0)), 100000000, 0, -405), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -404), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -403), 0), 100000000, 0, -402), 0), 100000000, 0, -401), 0), 100000000, 0, -400), 0), 100000000, 0, -399), 0, (("kernel/environ.mli", 189, 6808, 6808), ("kernel/environ.mli", 190, 6875, 6887), 0), 0, Tag1 ("Environ", 85)), 0); (("lookup_constant_key", 1658), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -398), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -397), (Tag3 ((("constant_key", 1599)), 0, (0)), 100000000, 0, -396), 0), 100000000, 0, -395), 0), 100000000, 0, -394), 0, (("kernel/environ.mli", 191, 6888, 6888), ("kernel/environ.mli", 191, 6888, 6948), 0), 0, Tag1 ("Environ", 86)), 0); (("lookup_constant", 1659), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -393), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -392), (Tag3 (Tag1 ((Tag2 ("Declarations")), "constant_body"), 0, (0)), 100000000, 0, -391), 0), 100000000, 0, -390), 0), 100000000, 0, -389), 0, (("kernel/environ.mli", 195, 7061, 7061), ("kernel/environ.mli", 195, 7061, 7120), 0), 0, Tag1 ("Environ", 87)), 0); (("evaluable_constant", 1660), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -388), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -387), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -386), 0), 100000000, 0, -385), 0), 100000000, 0, -384), 0, (("kernel/environ.mli", 196, 7121, 7121), ("kernel/environ.mli", 196, 7121, 7171), 0), 0, Tag1 ("Environ", 88)), 0); (("mem_constant", 1661), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -383), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -382), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -381), 0), 100000000, 0, -380), 0), 100000000, 0, -379), 0, (("kernel/environ.mli", 198, 7173, 7173), ("kernel/environ.mli", 198, 7173, 7217), 0), 0, Tag1 ("Environ", 89)), 0); (("polymorphic_constant", 1662), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -378), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -377), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -376), 0), 100000000, 0, -375), 0), 100000000, 0, -374), 0, (("kernel/environ.mli", 201, 7249, 7249), ("kernel/environ.mli", 201, 7249, 7302), 0), 0, Tag1 ("Environ", 90)), 0); (("polymorphic_pconstant", 1663), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pconstant"), 0, (0)), 100000000, 0, -373), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -372), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -371), 0), 100000000, 0, -370), 0), 100000000, 0, -369), 0, (("kernel/environ.mli", 202, 7303, 7303), ("kernel/environ.mli", 202, 7303, 7355), 0), 0, Tag1 ("Environ", 91)), 0); (("type_in_type_constant", 1664), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -368), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -367), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -366), 0), 100000000, 0, -365), 0), 100000000, 0, -364), 0, (("kernel/environ.mli", 203, 7356, 7356), ("kernel/environ.mli", 203, 7356, 7409), 0), 0, Tag1 ("Environ", 92)), 0); Tag1 (("const_evaluation_result", 1665), (0, 0, Tag1 ([(("NoBody", 1253), (0), 0, (("kernel/environ.mli", 213, 7755, 7757), ("kernel/environ.mli", 213, 7755, 7765), 0), 0, Tag1 ("Environ", 94)); (("Opaque", 1254), (0), 0, (("kernel/environ.mli", 214, 7766, 7768), ("kernel/environ.mli", 214, 7766, 7776), 0), 0, Tag1 ("Environ", 95)); (("IsPrimitive", 1255), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Instance"), "t"), 0, (0)), 100000000, 0, -362); (Tag3 (Tag1 ((Tag2 ("CPrimitives")), "t"), 0, (0)), 100000000, 0, -363)]), 0, (("kernel/environ.mli", 215, 7777, 7779), ("kernel/environ.mli", 215, 7777, 7827), 0), 0, Tag1 ("Environ", 96))], 0), 1, 0, 0, 0, 0, 0, (("kernel/environ.mli", 212, 7724, 7724), ("kernel/environ.mli", 215, 7777, 7827), 0), 0, 0, 0, Tag1 ("Environ", 93)), 1, 0); Tag2 (("NotEvaluableConst", 1666), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((("const_evaluation_result", 1665)), 0, (0)), 100000000, 0, -361)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Environ", 97)), 2, 0); (("constant_type", 1667), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -360), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Univ")), "puniverses"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -359)], (0)), 100000000, 0, -358), (Tag3 (Tag1 ((Tag2 ("Univ")), "constrained"), [(Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -357)], (0)), 100000000, 0, -356), 0), 100000000, 0, -355), 0), 100000000, 0, -354), 0, (("kernel/environ.mli", 218, 7884, 7884), ("kernel/environ.mli", 218, 7884, 7953), 0), 0, Tag1 ("Environ", 98)), 0); (("constant_value_and_type", 1668), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -353), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Univ")), "puniverses"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -352)], (0)), 100000000, 0, -351), (Tag2 ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -348)], (0)), 100000000, 0, -347); (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -349); (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Constraints"), "t"), 0, (0)), 100000000, 0, -350)]), 100000000, 0, -346), 0), 100000000, 0, -345), 0), 100000000, 0, -344), 0, (("kernel/environ.mli", 220, 7955, 7955), ("kernel/environ.mli", 221, 8017, 8061), 0), 0, Tag1 ("Environ", 99)), 0); (("constant_context", 1669), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -343), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -342), (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "AbstractContext"), "t"), 0, (0)), 100000000, 0, -341), 0), 100000000, 0, -340), 0), 100000000, 0, -339), 0, (("kernel/environ.mli", 224, 8147, 8147), ("kernel/environ.mli", 224, 8147, 8213), 0), 0, Tag1 ("Environ", 100)), 0); (("constant_value_in", 1670), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -338), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Univ")), "puniverses"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -337)], (0)), 100000000, 0, -336), (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -335), 0), 100000000, 0, -334), 0), 100000000, 0, -333), 0, (("kernel/environ.mli", 229, 8367, 8367), ("kernel/environ.mli", 229, 8367, 8429), 0), 0, Tag1 ("Environ", 101)), 0); (("constant_type_in", 1671), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -332), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Univ")), "puniverses"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -331)], (0)), 100000000, 0, -330), (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -329), 0), 100000000, 0, -328), 0), 100000000, 0, -327), 0, (("kernel/environ.mli", 230, 8430, 8430), ("kernel/environ.mli", 230, 8430, 8490), 0), 0, Tag1 ("Environ", 102)), 0); (("constant_opt_value_in", 1672), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -326), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Univ")), "puniverses"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -325)], (0)), 100000000, 0, -324), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -323)], (0)), 100000000, 0, -322), 0), 100000000, 0, -321), 0), 100000000, 0, -320), 0, (("kernel/environ.mli", 231, 8491, 8491), ("kernel/environ.mli", 231, 8491, 8564), 0), 0, Tag1 ("Environ", 103)), 0); (("is_primitive", 1673), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -319), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -318), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -317), 0), 100000000, 0, -316), 0), 100000000, 0, -315), 0, (("kernel/environ.mli", 233, 8566, 8566), ("kernel/environ.mli", 233, 8566, 8610), 0), 0, Tag1 ("Environ", 104)), 0); (("get_primitive", 1674), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -314), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -313), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("CPrimitives")), "t"), 0, (0)), 100000000, 0, -312)], (0)), 100000000, 0, -311), 0), 100000000, 0, -310), 0), 100000000, 0, -309), 0, (("kernel/environ.mli", 234, 8611, 8611), ("kernel/environ.mli", 234, 8611, 8672), 0), 0, Tag1 ("Environ", 105)), 0); (("is_array_type", 1675), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -308), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -307), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -306), 0), 100000000, 0, -305), 0), 100000000, 0, -304), 0, (("kernel/environ.mli", 236, 8674, 8674), ("kernel/environ.mli", 236, 8674, 8719), 0), 0, Tag1 ("Environ", 106)), 0); (("is_int63_type", 1676), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -303), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -302), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -301), 0), 100000000, 0, -300), 0), 100000000, 0, -299), 0, (("kernel/environ.mli", 237, 8720, 8720), ("kernel/environ.mli", 237, 8720, 8765), 0), 0, Tag1 ("Environ", 107)), 0); (("is_float64_type", 1677), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -298), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -297), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -296), 0), 100000000, 0, -295), 0), 100000000, 0, -294), 0, (("kernel/environ.mli", 238, 8766, 8766), ("kernel/environ.mli", 238, 8766, 8813), 0), 0, Tag1 ("Environ", 108)), 0); (("is_primitive_type", 1678), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -293), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -292), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -291), 0), 100000000, 0, -290), 0), 100000000, 0, -289), 0, (("kernel/environ.mli", 239, 8814, 8814), ("kernel/environ.mli", 239, 8814, 8863), 0), 0, Tag1 ("Environ", 109)), 0); (("lookup_projection", 1679), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Projection"), "t"), 0, (0)), 100000000, 0, -288), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -287), (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -286), 0), 100000000, 0, -285), 0), 100000000, 0, -284), 0, (("kernel/environ.mli", 245, 8956, 8956), ("kernel/environ.mli", 245, 8956, 9014), 0), 0, Tag1 ("Environ", 110)), 0); (("get_projection", 1680), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -283), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -282), (Tag1 (("proj_arg"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -281), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Projection"), "Repr"), "t"), 0, (0)), 100000000, 0, -280), 0), 100000000, 0, -279), 0), 100000000, 0, -278), 0), 100000000, 0, -277), 0, (("kernel/environ.mli", 248, 9080, 9080), ("kernel/environ.mli", 248, 9080, 9160), 0), 0, Tag1 ("Environ", 111)), 0); (("get_projections", 1681), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -276), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -275), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Projection"), "Repr"), "t"), 0, (0)), 100000000, 0, -274)], (0)), 100000000, 0, -273)], (0)), 100000000, 0, -272), 0), 100000000, 0, -271), 0), 100000000, 0, -270), 0, (("kernel/environ.mli", 250, 9162, 9162), ("kernel/environ.mli", 250, 9162, 9240), 0), 0, Tag1 ("Environ", 112)), 0); (("lookup_mind_key", 1682), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MutInd"), "t"), 0, (0)), 100000000, 0, -269), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -268), (Tag3 ((("mind_key", 1600)), 0, (0)), 100000000, 0, -267), 0), 100000000, 0, -266), 0), 100000000, 0, -265), 0, (("kernel/environ.mli", 253, 9270, 9270), ("kernel/environ.mli", 253, 9270, 9319), 0), 0, Tag1 ("Environ", 113)), 0); (("add_mind_key", 1683), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MutInd"), "t"), 0, (0)), 100000000, 0, -264), (Tag1 (0, (Tag3 ((("mind_key", 1600)), 0, (0)), 100000000, 0, -263), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -262), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -261), 0), 100000000, 0, -260), 0), 100000000, 0, -259), 0), 100000000, 0, -258), 0, (("kernel/environ.mli", 254, 9320, 9320), ("kernel/environ.mli", 254, 9320, 9373), 0), 0, Tag1 ("Environ", 114)), 0); (("add_mind", 1684), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MutInd"), "t"), 0, (0)), 100000000, 0, -257), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "mutual_inductive_body"), 0, (0)), 100000000, 0, -256), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -255), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -254), 0), 100000000, 0, -253), 0), 100000000, 0, -252), 0), 100000000, 0, -251), 0, (("kernel/environ.mli", 255, 9374, 9374), ("kernel/environ.mli", 255, 9374, 9436), 0), 0, Tag1 ("Environ", 115)), 0); (("lookup_mind", 1685), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MutInd"), "t"), 0, (0)), 100000000, 0, -250), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -249), (Tag3 (Tag1 ((Tag2 ("Declarations")), "mutual_inductive_body"), 0, (0)), 100000000, 0, -248), 0), 100000000, 0, -247), 0), 100000000, 0, -246), 0, (("kernel/environ.mli", 259, 9550, 9550), ("kernel/environ.mli", 259, 9550, 9608), 0), 0, Tag1 ("Environ", 116)), 0); (("mem_mind", 1686), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MutInd"), "t"), 0, (0)), 100000000, 0, -245), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -244), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -243), 0), 100000000, 0, -242), 0), 100000000, 0, -241), 0, (("kernel/environ.mli", 261, 9610, 9610), ("kernel/environ.mli", 261, 9610, 9648), 0), 0, Tag1 ("Environ", 117)), 0); (("mind_context", 1687), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -240), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MutInd"), "t"), 0, (0)), 100000000, 0, -239), (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "AbstractContext"), "t"), 0, (0)), 100000000, 0, -238), 0), 100000000, 0, -237), 0), 100000000, 0, -236), 0, (("kernel/environ.mli", 265, 9736, 9736), ("kernel/environ.mli", 265, 9736, 9796), 0), 0, Tag1 ("Environ", 118)), 0); (("polymorphic_ind", 1688), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -235), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -234), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -233), 0), 100000000, 0, -232), 0), 100000000, 0, -231), 0, (("kernel/environ.mli", 268, 9828, 9828), ("kernel/environ.mli", 268, 9828, 9875), 0), 0, Tag1 ("Environ", 119)), 0); (("polymorphic_pind", 1689), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pinductive"), 0, (0)), 100000000, 0, -230), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -229), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -228), 0), 100000000, 0, -227), 0), 100000000, 0, -226), 0, (("kernel/environ.mli", 269, 9876, 9876), ("kernel/environ.mli", 269, 9876, 9924), 0), 0, Tag1 ("Environ", 120)), 0); (("type_in_type_ind", 1690), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -225), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -224), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -223), 0), 100000000, 0, -222), 0), 100000000, 0, -221), 0, (("kernel/environ.mli", 270, 9925, 9925), ("kernel/environ.mli", 270, 9925, 9972), 0), 0, Tag1 ("Environ", 121)), 0); (("template_polymorphic_ind", 1691), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -220), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -219), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -218), 0), 100000000, 0, -217), 0), 100000000, 0, -216), 0, (("kernel/environ.mli", 273, 10004, 10004), ("kernel/environ.mli", 273, 10004, 10059), 0), 0, Tag1 ("Environ", 122)), 0); (("template_polymorphic_variables", 1692), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -215), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -214), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Level"), "t"), 0, (0)), 100000000, 0, -213)], (0)), 100000000, 0, -212), 0), 100000000, 0, -211), 0), 100000000, 0, -210), 0, (("kernel/environ.mli", 274, 10060, 10060), ("kernel/environ.mli", 274, 10060, 10134), 0), 0, Tag1 ("Environ", 123)), 0); (("template_polymorphic_pind", 1693), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pinductive"), 0, (0)), 100000000, 0, -209), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -208), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -207), 0), 100000000, 0, -206), 0), 100000000, 0, -205), 0, (("kernel/environ.mli", 275, 10135, 10135), ("kernel/environ.mli", 275, 10135, 10192), 0), 0, Tag1 ("Environ", 124)), 0); Tag4 (("QNameS", 1694), ((Tag1 ([Tag1 (("t", 1744), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("kernel/environ.mli", 281, 10246, 10248), ("kernel/environ.mli", 281, 10246, 10254), 0), 0, 0, 0, Tag1 ("Environ", 125)), 1, 0); (("equal", 1745), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -713), (Tag1 (0, (Tag3 ((("t", 1744)), 0, (0)), 100000000, 0, -712), (Tag1 (0, (Tag3 ((("t", 1744)), 0, (0)), 100000000, 0, -711), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -710), 0), 100000000, 0, -709), 0), 100000000, 0, -708), 0), 100000000, 0, -707), 0, (("kernel/environ.mli", 282, 10255, 10257), ("kernel/environ.mli", 282, 10255, 10290), 0), 0, Tag1 ("Environ", 126)), 0); (("compare", 1746), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -706), (Tag1 (0, (Tag3 ((("t", 1744)), 0, (0)), 100000000, 0, -705), (Tag1 (0, (Tag3 ((("t", 1744)), 0, (0)), 100000000, 0, -704), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -703), 0), 100000000, 0, -702), 0), 100000000, 0, -701), 0), 100000000, 0, -700), 0, (("kernel/environ.mli", 283, 10291, 10293), ("kernel/environ.mli", 283, 10291, 10327), 0), 0, Tag1 ("Environ", 127)), 0); (("hash", 1747), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -699), (Tag1 (0, (Tag3 ((("t", 1744)), 0, (0)), 100000000, 0, -698), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -697), 0), 100000000, 0, -696), 0), 100000000, 0, -695), 0, (("kernel/environ.mli", 284, 10328, 10330), ("kernel/environ.mli", 284, 10328, 10356), 0), 0, Tag1 ("Environ", 128)), 0)])), 0, (("kernel/environ.mli", 279, 10221, 10221), ("kernel/environ.mli", 285, 10357, 10360), 0), Tag1 ("Environ", 129)), 0); Tag3 (("QConstant", 1695), 0, (Tag1 ([Tag1 (("t", 1748), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -733)), 0, 0, 0, 0, (("kernel/environ.mli", 287, 10362, 10393), ("kernel/environ.mli", 287, 10362, 10412), 0), 0, 0, 0, Tag1 ("Environ", 130)), 1, 0); (("equal", 1749), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -732), (Tag1 (0, (Tag3 ((("t", 1748)), 0, (0)), 100000000, 0, -731), (Tag1 (0, (Tag3 ((("t", 1748)), 0, (0)), 100000000, 0, -730), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -729), 0), 100000000, 0, -728), 0), 100000000, 0, -727), 0), 100000000, 0, -726), 0, (("kernel/environ.mli", 282, 10255, 10257), ("kernel/environ.mli", 282, 10255, 10290), 0), 0, Tag1 ("Environ", 126)), 0); (("compare", 1750), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -725), (Tag1 (0, (Tag3 ((("t", 1748)), 0, (0)), 100000000, 0, -724), (Tag1 (0, (Tag3 ((("t", 1748)), 0, (0)), 100000000, 0, -723), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -722), 0), 100000000, 0, -721), 0), 100000000, 0, -720), 0), 100000000, 0, -719), 0, (("kernel/environ.mli", 283, 10291, 10293), ("kernel/environ.mli", 283, 10291, 10327), 0), 0, Tag1 ("Environ", 127)), 0); (("hash", 1751), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -718), (Tag1 (0, (Tag3 ((("t", 1748)), 0, (0)), 100000000, 0, -717), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -716), 0), 100000000, 0, -715), 0), 100000000, 0, -714), 0, (("kernel/environ.mli", 284, 10328, 10330), ("kernel/environ.mli", 284, 10328, 10356), 0), 0, Tag1 ("Environ", 128)), 0)]), 0, (("kernel/environ.mli", 287, 10362, 10362), ("kernel/environ.mli", 287, 10362, 10412), 0), Tag1 ("Environ", 131)), 0, 0); Tag3 (("QMutInd", 1696), 0, (Tag1 ([Tag1 (("t", 1752), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MutInd"), "t"), 0, (0)), 100000000, 0, -753)), 0, 0, 0, 0, (("kernel/environ.mli", 289, 10414, 10443), ("kernel/environ.mli", 289, 10414, 10460), 0), 0, 0, 0, Tag1 ("Environ", 132)), 1, 0); (("equal", 1753), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -752), (Tag1 (0, (Tag3 ((("t", 1752)), 0, (0)), 100000000, 0, -751), (Tag1 (0, (Tag3 ((("t", 1752)), 0, (0)), 100000000, 0, -750), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -749), 0), 100000000, 0, -748), 0), 100000000, 0, -747), 0), 100000000, 0, -746), 0, (("kernel/environ.mli", 282, 10255, 10257), ("kernel/environ.mli", 282, 10255, 10290), 0), 0, Tag1 ("Environ", 126)), 0); (("compare", 1754), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -745), (Tag1 (0, (Tag3 ((("t", 1752)), 0, (0)), 100000000, 0, -744), (Tag1 (0, (Tag3 ((("t", 1752)), 0, (0)), 100000000, 0, -743), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -742), 0), 100000000, 0, -741), 0), 100000000, 0, -740), 0), 100000000, 0, -739), 0, (("kernel/environ.mli", 283, 10291, 10293), ("kernel/environ.mli", 283, 10291, 10327), 0), 0, Tag1 ("Environ", 127)), 0); (("hash", 1755), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -738), (Tag1 (0, (Tag3 ((("t", 1752)), 0, (0)), 100000000, 0, -737), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -736), 0), 100000000, 0, -735), 0), 100000000, 0, -734), 0, (("kernel/environ.mli", 284, 10328, 10330), ("kernel/environ.mli", 284, 10328, 10356), 0), 0, Tag1 ("Environ", 128)), 0)]), 0, (("kernel/environ.mli", 289, 10414, 10414), ("kernel/environ.mli", 289, 10414, 10460), 0), Tag1 ("Environ", 133)), 0, 0); Tag3 (("QInd", 1697), 0, (Tag1 ([Tag1 (("t", 1756), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Ind"), "t"), 0, (0)), 100000000, 0, -773)), 0, 0, 0, 0, (("kernel/environ.mli", 291, 10462, 10488), ("kernel/environ.mli", 291, 10462, 10502), 0), 0, 0, 0, Tag1 ("Environ", 134)), 1, 0); (("equal", 1757), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -772), (Tag1 (0, (Tag3 ((("t", 1756)), 0, (0)), 100000000, 0, -771), (Tag1 (0, (Tag3 ((("t", 1756)), 0, (0)), 100000000, 0, -770), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -769), 0), 100000000, 0, -768), 0), 100000000, 0, -767), 0), 100000000, 0, -766), 0, (("kernel/environ.mli", 282, 10255, 10257), ("kernel/environ.mli", 282, 10255, 10290), 0), 0, Tag1 ("Environ", 126)), 0); (("compare", 1758), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -765), (Tag1 (0, (Tag3 ((("t", 1756)), 0, (0)), 100000000, 0, -764), (Tag1 (0, (Tag3 ((("t", 1756)), 0, (0)), 100000000, 0, -763), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -762), 0), 100000000, 0, -761), 0), 100000000, 0, -760), 0), 100000000, 0, -759), 0, (("kernel/environ.mli", 283, 10291, 10293), ("kernel/environ.mli", 283, 10291, 10327), 0), 0, Tag1 ("Environ", 127)), 0); (("hash", 1759), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -758), (Tag1 (0, (Tag3 ((("t", 1756)), 0, (0)), 100000000, 0, -757), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -756), 0), 100000000, 0, -755), 0), 100000000, 0, -754), 0, (("kernel/environ.mli", 284, 10328, 10330), ("kernel/environ.mli", 284, 10328, 10356), 0), 0, Tag1 ("Environ", 128)), 0)]), 0, (("kernel/environ.mli", 291, 10462, 10462), ("kernel/environ.mli", 291, 10462, 10502), 0), Tag1 ("Environ", 135)), 0, 0); Tag3 (("QConstruct", 1698), 0, (Tag1 ([Tag1 (("t", 1760), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Construct"), "t"), 0, (0)), 100000000, 0, -793)), 0, 0, 0, 0, (("kernel/environ.mli", 293, 10504, 10536), ("kernel/environ.mli", 293, 10504, 10556), 0), 0, 0, 0, Tag1 ("Environ", 136)), 1, 0); (("equal", 1761), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -792), (Tag1 (0, (Tag3 ((("t", 1760)), 0, (0)), 100000000, 0, -791), (Tag1 (0, (Tag3 ((("t", 1760)), 0, (0)), 100000000, 0, -790), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -789), 0), 100000000, 0, -788), 0), 100000000, 0, -787), 0), 100000000, 0, -786), 0, (("kernel/environ.mli", 282, 10255, 10257), ("kernel/environ.mli", 282, 10255, 10290), 0), 0, Tag1 ("Environ", 126)), 0); (("compare", 1762), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -785), (Tag1 (0, (Tag3 ((("t", 1760)), 0, (0)), 100000000, 0, -784), (Tag1 (0, (Tag3 ((("t", 1760)), 0, (0)), 100000000, 0, -783), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -782), 0), 100000000, 0, -781), 0), 100000000, 0, -780), 0), 100000000, 0, -779), 0, (("kernel/environ.mli", 283, 10291, 10293), ("kernel/environ.mli", 283, 10291, 10327), 0), 0, Tag1 ("Environ", 127)), 0); (("hash", 1763), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -778), (Tag1 (0, (Tag3 ((("t", 1760)), 0, (0)), 100000000, 0, -777), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -776), 0), 100000000, 0, -775), 0), 100000000, 0, -774), 0, (("kernel/environ.mli", 284, 10328, 10330), ("kernel/environ.mli", 284, 10328, 10356), 0), 0, Tag1 ("Environ", 128)), 0)]), 0, (("kernel/environ.mli", 293, 10504, 10504), ("kernel/environ.mli", 293, 10504, 10556), 0), Tag1 ("Environ", 137)), 0, 0); Tag3 (("QProjection", 1699), 0, (Tag1 ([Tag1 (("t", 1764), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Projection"), "t"), 0, (0)), 100000000, 0, -813)), 0, 0, 0, 0, (("kernel/environ.mli", 297, 10583, 10605), ("kernel/environ.mli", 297, 10583, 10626), 0), 0, 0, 0, Tag1 ("Environ", 138)), 1, 0); (("equal", 1765), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -812), (Tag1 (0, (Tag3 ((("t", 1764)), 0, (0)), 100000000, 0, -811), (Tag1 (0, (Tag3 ((("t", 1764)), 0, (0)), 100000000, 0, -810), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -809), 0), 100000000, 0, -808), 0), 100000000, 0, -807), 0), 100000000, 0, -806), 0, (("kernel/environ.mli", 282, 10255, 10257), ("kernel/environ.mli", 282, 10255, 10290), 0), 0, Tag1 ("Environ", 126)), 0); (("compare", 1766), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -805), (Tag1 (0, (Tag3 ((("t", 1764)), 0, (0)), 100000000, 0, -804), (Tag1 (0, (Tag3 ((("t", 1764)), 0, (0)), 100000000, 0, -803), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -802), 0), 100000000, 0, -801), 0), 100000000, 0, -800), 0), 100000000, 0, -799), 0, (("kernel/environ.mli", 283, 10291, 10293), ("kernel/environ.mli", 283, 10291, 10327), 0), 0, Tag1 ("Environ", 127)), 0); (("hash", 1767), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -798), (Tag1 (0, (Tag3 ((("t", 1764)), 0, (0)), 100000000, 0, -797), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -796), 0), 100000000, 0, -795), 0), 100000000, 0, -794), 0, (("kernel/environ.mli", 284, 10328, 10330), ("kernel/environ.mli", 284, 10328, 10356), 0), 0, Tag1 ("Environ", 128)), 0); Tag3 (("Repr", 1768), 0, (Tag1 ([Tag1 (("t", 1769), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Projection"), "Repr"), "t"), 0, (0)), 100000000, 0, -833)), 0, 0, 0, 0, (("kernel/environ.mli", 298, 10627, 10655), ("kernel/environ.mli", 298, 10627, 10681), 0), 0, 0, 0, Tag1 ("Environ", 139)), 1, 0); (("equal", 1770), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -832), (Tag1 (0, (Tag3 ((("t", 1769)), 0, (0)), 100000000, 0, -831), (Tag1 (0, (Tag3 ((("t", 1769)), 0, (0)), 100000000, 0, -830), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -829), 0), 100000000, 0, -828), 0), 100000000, 0, -827), 0), 100000000, 0, -826), 0, (("kernel/environ.mli", 282, 10255, 10257), ("kernel/environ.mli", 282, 10255, 10290), 0), 0, Tag1 ("Environ", 126)), 0); (("compare", 1771), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -825), (Tag1 (0, (Tag3 ((("t", 1769)), 0, (0)), 100000000, 0, -824), (Tag1 (0, (Tag3 ((("t", 1769)), 0, (0)), 100000000, 0, -823), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -822), 0), 100000000, 0, -821), 0), 100000000, 0, -820), 0), 100000000, 0, -819), 0, (("kernel/environ.mli", 283, 10291, 10293), ("kernel/environ.mli", 283, 10291, 10327), 0), 0, Tag1 ("Environ", 127)), 0); (("hash", 1772), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -818), (Tag1 (0, (Tag3 ((("t", 1769)), 0, (0)), 100000000, 0, -817), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -816), 0), 100000000, 0, -815), 0), 100000000, 0, -814), 0, (("kernel/environ.mli", 284, 10328, 10330), ("kernel/environ.mli", 284, 10328, 10356), 0), 0, Tag1 ("Environ", 128)), 0)]), 0, (("kernel/environ.mli", 298, 10627, 10629), ("kernel/environ.mli", 298, 10627, 10681), 0), Tag1 ("Environ", 140)), 0, 0)]), 0, (("kernel/environ.mli", 295, 10558, 10558), ("kernel/environ.mli", 299, 10682, 10685), 0), Tag1 ("Environ", 141)), 0, 0); Tag3 (("QGlobRef", 1700), 0, (Tag1 ([Tag1 (("t", 1773), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -853)), 0, 0, 0, 0, (("kernel/environ.mli", 301, 10687, 10717), ("kernel/environ.mli", 301, 10687, 10735), 0), 0, 0, 0, Tag1 ("Environ", 142)), 1, 0); (("equal", 1774), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -852), (Tag1 (0, (Tag3 ((("t", 1773)), 0, (0)), 100000000, 0, -851), (Tag1 (0, (Tag3 ((("t", 1773)), 0, (0)), 100000000, 0, -850), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -849), 0), 100000000, 0, -848), 0), 100000000, 0, -847), 0), 100000000, 0, -846), 0, (("kernel/environ.mli", 282, 10255, 10257), ("kernel/environ.mli", 282, 10255, 10290), 0), 0, Tag1 ("Environ", 126)), 0); (("compare", 1775), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -845), (Tag1 (0, (Tag3 ((("t", 1773)), 0, (0)), 100000000, 0, -844), (Tag1 (0, (Tag3 ((("t", 1773)), 0, (0)), 100000000, 0, -843), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -842), 0), 100000000, 0, -841), 0), 100000000, 0, -840), 0), 100000000, 0, -839), 0, (("kernel/environ.mli", 283, 10291, 10293), ("kernel/environ.mli", 283, 10291, 10327), 0), 0, Tag1 ("Environ", 127)), 0); (("hash", 1776), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -838), (Tag1 (0, (Tag3 ((("t", 1773)), 0, (0)), 100000000, 0, -837), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -836), 0), 100000000, 0, -835), 0), 100000000, 0, -834), 0, (("kernel/environ.mli", 284, 10328, 10330), ("kernel/environ.mli", 284, 10328, 10356), 0), 0, Tag1 ("Environ", 128)), 0)]), 0, (("kernel/environ.mli", 301, 10687, 10687), ("kernel/environ.mli", 301, 10687, 10735), 0), Tag1 ("Environ", 143)), 0, 0); (("add_modtype", 1701), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "module_type_body"), 0, (0)), 100000000, 0, -204), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -203), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -202), 0), 100000000, 0, -201), 0), 100000000, 0, -200), 0, (("kernel/environ.mli", 305, 10758, 10758), ("kernel/environ.mli", 305, 10758, 10806), 0), 0, Tag1 ("Environ", 144)), 0); (("shallow_add_module", 1702), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "module_body"), 0, (0)), 100000000, 0, -199), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -198), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -197), 0), 100000000, 0, -196), 0), 100000000, 0, -195), 0, (("kernel/environ.mli", 308, 10867, 10867), ("kernel/environ.mli", 308, 10867, 10917), 0), 0, Tag1 ("Environ", 145)), 0); (("lookup_module", 1703), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -194), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -193), (Tag3 (Tag1 ((Tag2 ("Declarations")), "module_body"), 0, (0)), 100000000, 0, -192), 0), 100000000, 0, -191), 0), 100000000, 0, -190), 0, (("kernel/environ.mli", 310, 10919, 10919), ("kernel/environ.mli", 310, 10919, 10970), 0), 0, Tag1 ("Environ", 146)), 0); (("lookup_modtype", 1704), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -189), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -188), (Tag3 (Tag1 ((Tag2 ("Declarations")), "module_type_body"), 0, (0)), 100000000, 0, -187), 0), 100000000, 0, -186), 0), 100000000, 0, -185), 0, (("kernel/environ.mli", 311, 10971, 10971), ("kernel/environ.mli", 311, 10971, 11028), 0), 0, Tag1 ("Environ", 147)), 0); (("add_constraints", 1705), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Constraints"), "t"), 0, (0)), 100000000, 0, -184), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -183), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -182), 0), 100000000, 0, -181), 0), 100000000, 0, -180), 0, (("kernel/environ.mli", 315, 11064, 11064), ("kernel/environ.mli", 315, 11064, 11118), 0), 0, Tag1 ("Environ", 148)), 0); (("check_constraints", 1706), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Constraints"), "t"), 0, (0)), 100000000, 0, -179), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -178), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -177), 0), 100000000, 0, -176), 0), 100000000, 0, -175), 0, (("kernel/environ.mli", 319, 11206, 11206), ("kernel/environ.mli", 319, 11206, 11263), 0), 0, Tag1 ("Environ", 149)), 0); (("push_context", 1707), ((Tag1 (Tag1 ("strict"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -174)], (0)), 100000000, 0, -173), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "UContext"), "t"), 0, (0)), 100000000, 0, -172), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -171), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -170), 0), 100000000, 0, -169), 0), 100000000, 0, -168), 0), 100000000, 0, -167), 0, (("kernel/environ.mli", 322, 11325, 11325), ("kernel/environ.mli", 322, 11325, 11389), 0), 0, Tag1 ("Environ", 150)), 0); (("push_context_set", 1708), ((Tag1 (Tag1 ("strict"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -166)], (0)), 100000000, 0, -165), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "ContextSet"), "t"), 0, (0)), 100000000, 0, -164), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -163), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -162), 0), 100000000, 0, -161), 0), 100000000, 0, -160), 0), 100000000, 0, -159), 0, (("kernel/environ.mli", 326, 11564, 11564), ("kernel/environ.mli", 326, 11564, 11634), 0), 0, Tag1 ("Environ", 151)), 0); (("push_subgraph", 1709), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "ContextSet"), "t"), 0, (0)), 100000000, 0, -158), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -157), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -156), 0), 100000000, 0, -155), 0), 100000000, 0, -154), 0, (("kernel/environ.mli", 331, 11813, 11813), ("kernel/environ.mli", 331, 11813, 11864), 0), 0, Tag1 ("Environ", 152)), 0); (("set_typing_flags", 1710), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "typing_flags"), 0, (0)), 100000000, 0, -153), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -152), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -151), 0), 100000000, 0, -150), 0), 100000000, 0, -149), 0, (("kernel/environ.mli", 337, 12117, 12117), ("kernel/environ.mli", 337, 12117, 12166), 0), 0, Tag1 ("Environ", 153)), 0); (("set_impredicative_set", 1711), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -148), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -147), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -146), 0), 100000000, 0, -145), 0), 100000000, 0, -144), 0, (("kernel/environ.mli", 338, 12167, 12167), ("kernel/environ.mli", 338, 12167, 12213), 0), 0, Tag1 ("Environ", 154)), 0); (("set_type_in_type", 1712), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -143), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -142), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -141), 0), 100000000, 0, -140), 0), 100000000, 0, -139), 0, (("kernel/environ.mli", 339, 12214, 12214), ("kernel/environ.mli", 339, 12214, 12255), 0), 0, Tag1 ("Environ", 155)), 0); (("set_allow_sprop", 1713), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -138), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -137), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -136), 0), 100000000, 0, -135), 0), 100000000, 0, -134), 0, (("kernel/environ.mli", 340, 12256, 12256), ("kernel/environ.mli", 340, 12256, 12296), 0), 0, Tag1 ("Environ", 156)), 0); (("sprop_allowed", 1714), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -133), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -132), 0), 100000000, 0, -131), 0, (("kernel/environ.mli", 341, 12297, 12297), ("kernel/environ.mli", 341, 12297, 12328), 0), 0, Tag1 ("Environ", 157)), 0); (("same_flags", 1715), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "typing_flags"), 0, (0)), 100000000, 0, -130), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "typing_flags"), 0, (0)), 100000000, 0, -129), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -128), 0), 100000000, 0, -127), 0), 100000000, 0, -126), 0, (("kernel/environ.mli", 343, 12330, 12330), ("kernel/environ.mli", 343, 12330, 12383), 0), 0, Tag1 ("Environ", 158)), 0); (("update_typing_flags", 1716), ((Tag1 (Tag1 ("typing_flags"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Declarations")), "typing_flags"), 0, (0)), 100000000, 0, -125)], (0)), 100000000, 0, -124), (Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -123), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -122), 0), 100000000, 0, -121), 0), 100000000, 0, -120), 0, (("kernel/environ.mli", 346, 12470, 12470), ("kernel/environ.mli", 346, 12470, 12536), 0), 0, Tag1 ("Environ", 159)), 0); (("universes_of_global", 1717), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -119), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -118), (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "AbstractContext"), "t"), 0, (0)), 100000000, 0, -117), 0), 100000000, 0, -116), 0), 100000000, 0, -115), 0, (("kernel/environ.mli", 348, 12538, 12538), ("kernel/environ.mli", 348, 12538, 12601), 0), 0, Tag1 ("Environ", 160)), 0); (("global_vars_set", 1718), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -114), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -113), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -112), 0), 100000000, 0, -111), 0), 100000000, 0, -110), 0, (("kernel/environ.mli", 355, 12841, 12841), ("kernel/environ.mli", 355, 12841, 12888), 0), 0, Tag1 ("Environ", 161)), 0); (("vars_of_global", 1719), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -109), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -108), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -107), 0), 100000000, 0, -106), 0), 100000000, 0, -105), 0, (("kernel/environ.mli", 357, 12890, 12890), ("kernel/environ.mli", 357, 12890, 12939), 0), 0, Tag1 ("Environ", 162)), 0); (("really_needed", 1720), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -104), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -103), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -102), 0), 100000000, 0, -101), 0), 100000000, 0, -100), 0, (("kernel/environ.mli", 360, 12994, 12994), ("kernel/environ.mli", 360, 12994, 13041), 0), 0, Tag1 ("Environ", 163)), 0); (("keep_hyps", 1721), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -99), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -98), (Tag3 (Tag1 ((Tag2 ("Constr")), "named_context"), 0, (0)), 100000000, 0, -97), 0), 100000000, 0, -96), 0), 100000000, 0, -95), 0, (("kernel/environ.mli", 363, 13113, 13113), ("kernel/environ.mli", 363, 13113, 13168), 0), 0, Tag1 ("Environ", 164)), 0); Tag1 (("punsafe_judgment", 1722), ([((("constr")), 100000000, 0, -93); ((("types")), 100000000, 0, -94)], 2, [[(("uj_val", 1567), 0, ((("constr")), 100000000, 0, -93), (("kernel/environ.mli", 371, 13388, 13390), ("kernel/environ.mli", 371, 13388, 13407), 0), 0, Tag1 ("Environ", 166)); (("uj_type", 1568), 0, ((("types")), 100000000, 0, -94), (("kernel/environ.mli", 372, 13408, 13410), ("kernel/environ.mli", 372, 13408, 13426), 0), 0, Tag1 ("Environ", 167))]], 1, 0, [25; 25], [0; 0], 0, 0, (("kernel/environ.mli", 370, 13344, 13344), ("kernel/environ.mli", 372, 13408, 13428), 0), 0, 0, 0, Tag1 ("Environ", 165)), 1, 0); (("on_judgment", 1723), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -91), ((("b")), 100000000, 0, -89), 0), 100000000, 0, -92), (Tag1 (0, (Tag3 ((("punsafe_judgment", 1722)), [((("a")), 100000000, 0, -91); ((("a")), 100000000, 0, -91)], (0)), 100000000, 0, -90), (Tag3 ((("punsafe_judgment", 1722)), [((("b")), 100000000, 0, -89); ((("b")), 100000000, 0, -89)], (0)), 100000000, 0, -88), 0), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("kernel/environ.mli", 374, 13430, 13430), ("kernel/environ.mli", 374, 13430, 13522), 0), 0, Tag1 ("Environ", 168)), 0); (("on_judgment_value", 1724), ((Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -82), ((("c")), 100000000, 0, -82), 0), 100000000, 0, -85), (Tag1 (0, (Tag3 ((("punsafe_judgment", 1722)), [((("c")), 100000000, 0, -82); ((("t")), 100000000, 0, -83)], (0)), 100000000, 0, -84), (Tag3 ((("punsafe_judgment", 1722)), [((("c")), 100000000, 0, -82); ((("t")), 100000000, 0, -83)], (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0), 100000000, 0, -79), 0, (("kernel/environ.mli", 375, 13523, 13523), ("kernel/environ.mli", 375, 13523, 13615), 0), 0, Tag1 ("Environ", 169)), 0); (("on_judgment_type", 1725), ((Tag1 (0, (Tag1 (0, ((("t")), 100000000, 0, -76), ((("t")), 100000000, 0, -76), 0), 100000000, 0, -78), (Tag1 (0, (Tag3 ((("punsafe_judgment", 1722)), [((("c")), 100000000, 0, -75); ((("t")), 100000000, 0, -76)], (0)), 100000000, 0, -77), (Tag3 ((("punsafe_judgment", 1722)), [((("c")), 100000000, 0, -75); ((("t")), 100000000, 0, -76)], (0)), 100000000, 0, -74), 0), 100000000, 0, -73), 0), 100000000, 0, -72), 0, (("kernel/environ.mli", 376, 13616, 13616), ("kernel/environ.mli", 376, 13616, 13708), 0), 0, Tag1 ("Environ", 170)), 0); Tag1 (("unsafe_judgment", 1726), (0, 0, 0, 1, ((Tag3 ((("punsafe_judgment", 1722)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -70); (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -71)], (0)), 100000000, 0, -69)), 0, 0, 0, 0, (("kernel/environ.mli", 378, 13710, 13710), ("kernel/environ.mli", 378, 13710, 13765), 0), 0, 0, 0, Tag1 ("Environ", 171)), 1, 0); (("make_judge", 1727), ((Tag1 (0, ((("constr")), 100000000, 0, -67), (Tag1 (0, ((("types")), 100000000, 0, -68), (Tag3 ((("punsafe_judgment", 1722)), [((("constr")), 100000000, 0, -67); ((("types")), 100000000, 0, -68)], (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0, (("kernel/environ.mli", 380, 13767, 13767), ("kernel/environ.mli", 380, 13767, 13839), 0), 0, Tag1 ("Environ", 172)), 0); (("j_val", 1728), ((Tag1 (0, (Tag3 ((("punsafe_judgment", 1722)), [((("constr")), 100000000, 0, -61); ((("types")), 100000000, 0, -63)], (0)), 100000000, 0, -62), ((("constr")), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("kernel/environ.mli", 381, 13840, 13840), ("kernel/environ.mli", 381, 13840, 13898), 0), 0, Tag1 ("Environ", 173)), 0); (("j_type", 1729), ((Tag1 (0, (Tag3 ((("punsafe_judgment", 1722)), [((("constr")), 100000000, 0, -59); ((("types")), 100000000, 0, -57)], (0)), 100000000, 0, -58), ((("types")), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("kernel/environ.mli", 382, 13899, 13899), ("kernel/environ.mli", 382, 13899, 13956), 0), 0, Tag1 ("Environ", 174)), 0); Tag1 (("punsafe_type_judgment", 1730), ([((("types")), 100000000, 0, -54); ((("sorts")), 100000000, 0, -55)], 2, [[(("utj_val", 1577), 0, ((("types")), 100000000, 0, -54), (("kernel/environ.mli", 385, 14006, 14008), ("kernel/environ.mli", 385, 14006, 14025), 0), 0, Tag1 ("Environ", 176)); (("utj_type", 1578), 0, ((("sorts")), 100000000, 0, -55), (("kernel/environ.mli", 386, 14026, 14028), ("kernel/environ.mli", 386, 14026, 14045), 0), 0, Tag1 ("Environ", 177))]], 1, 0, [25; 25], [0; 0], 0, 0, (("kernel/environ.mli", 384, 13958, 13958), ("kernel/environ.mli", 386, 14026, 14047), 0), 0, 0, 0, Tag1 ("Environ", 175)), 1, 0); Tag1 (("unsafe_type_judgment", 1731), (0, 0, 0, 1, ((Tag3 ((("punsafe_type_judgment", 1730)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -52); (Tag3 (Tag1 ((Tag2 ("Sorts")), "t"), 0, (0)), 100000000, 0, -53)], (0)), 100000000, 0, -51)), 0, 0, 0, 0, (("kernel/environ.mli", 388, 14049, 14049), ("kernel/environ.mli", 388, 14049, 14115), 0), 0, 0, 0, Tag1 ("Environ", 178)), 1, 0); Tag2 (("Hyp_not_found", 1732), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Environ", 179)), 2, 0); (("apply_to_hyp", 1733), ((Tag1 (0, (Tag3 ((("named_context_val", 1602)), 0, (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "variable"), 0, (0)), 100000000, 0, -49), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "named_context"), 0, (0)), 100000000, 0, -48), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "named_declaration"), 0, (0)), 100000000, 0, -47), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "named_context"), 0, (0)), 100000000, 0, -46), (Tag3 (Tag1 ((Tag2 ("Constr")), "named_declaration"), 0, (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), (Tag3 ((("named_context_val", 1602)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("kernel/environ.mli", 395, 14321, 14321), ("kernel/environ.mli", 397, 14481, 14502), 0), 0, Tag1 ("Environ", 180)), 0); (("remove_hyps", 1734), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -37), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "named_declaration"), 0, (0)), 100000000, 0, -36), (Tag3 (Tag1 ((Tag2 ("Constr")), "named_declaration"), 0, (0)), 100000000, 0, -35), 0), 100000000, 0, -34), (Tag1 (0, (Tag3 ((("named_context_val", 1602)), 0, (0)), 100000000, 0, -33), (Tag3 ((("named_context_val", 1602)), 0, (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("kernel/environ.mli", 399, 14504, 14504), ("kernel/environ.mli", 399, 14504, 14630), 0), 0, Tag1 ("Environ", 181)), 0); (("is_polymorphic", 1735), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -27), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("kernel/environ.mli", 401, 14632, 14632), ("kernel/environ.mli", 401, 14632, 14683), 0), 0, Tag1 ("Environ", 182)), 0); (("is_template_polymorphic", 1736), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -23), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -22), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("kernel/environ.mli", 402, 14684, 14684), ("kernel/environ.mli", 402, 14684, 14738), 0), 0, Tag1 ("Environ", 183)), 0); (("get_template_polymorphic_variables", 1737), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -18), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -17), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Level"), "t"), 0, (0)), 100000000, 0, -16)], (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("kernel/environ.mli", 403, 14739, 14739), ("kernel/environ.mli", 403, 14739, 14817), 0), 0, Tag1 ("Environ", 184)), 0); (("is_type_in_type", 1738), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -12), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -11), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("kernel/environ.mli", 404, 14818, 14818), ("kernel/environ.mli", 404, 14818, 14864), 0), 0, Tag1 ("Environ", 185)), 0); (("no_link_info", 1739), ((Tag3 ((("link_info", 1597)), 0, (0)), 100000000, 0, -7), 0, (("kernel/environ.mli", 407, 14889, 14889), ("kernel/environ.mli", 407, 14889, 14917), 0), 0, Tag1 ("Environ", 186)), 0); (("set_retroknowledge", 1740), ((Tag1 (0, (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Retroknowledge")), "retroknowledge"), 0, (0)), 100000000, 0, -5), (Tag3 ((("env", 1604)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("kernel/environ.mli", 410, 14937, 14937), ("kernel/environ.mli", 410, 14937, 15005), 0), 0, Tag1 ("Environ", 187)), 0)], "Environ", [("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
val set_retroknowledge : env -> Retroknowledge.retroknowledge -> env
