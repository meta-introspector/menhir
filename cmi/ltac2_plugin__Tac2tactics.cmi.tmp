val intros_patterns :
  Ltac2_plugin.Tac2types.evars_flag ->
  Ltac2_plugin.Tac2types.intro_pattern list -> unit Proofview.tactic
val apply :
  Ltac2_plugin.Tac2types.advanced_flag ->
  Ltac2_plugin.Tac2types.evars_flag ->
  Ltac2_plugin.Tac2types.constr_with_bindings Ltac2_plugin.Tac2types.thunk
  list ->
  (Names.Id.t * Ltac2_plugin.Tac2types.intro_pattern option) option ->
  unit Proofview.tactic
val induction_destruct :
  Ltac2_plugin.Tac2expr.rec_flag ->
  Ltac2_plugin.Tac2types.evars_flag ->
  Ltac2_plugin.Tac2types.induction_clause list ->
  Ltac2_plugin.Tac2types.constr_with_bindings option -> unit Proofview.tactic
val elim :
  Ltac2_plugin.Tac2types.evars_flag ->
  Ltac2_plugin.Tac2types.constr_with_bindings ->
  Ltac2_plugin.Tac2types.constr_with_bindings option -> unit Proofview.tactic
val general_case_analysis :
  Ltac2_plugin.Tac2types.evars_flag ->
  Ltac2_plugin.Tac2types.constr_with_bindings -> unit Proofview.tactic
val generalize :
  (EConstr.constr * Ltac2_plugin.Tac2types.occurrences * Names.Name.t) list ->
  unit Proofview.tactic
val constructor_tac :
  Ltac2_plugin.Tac2types.evars_flag ->
  int option ->
  int -> Ltac2_plugin.Tac2types.bindings -> unit Proofview.tactic
val left_with_bindings :
  Ltac2_plugin.Tac2types.evars_flag ->
  Ltac2_plugin.Tac2types.bindings -> unit Proofview.tactic
val right_with_bindings :
  Ltac2_plugin.Tac2types.evars_flag ->
  Ltac2_plugin.Tac2types.bindings -> unit Proofview.tactic
val split_with_bindings :
  Ltac2_plugin.Tac2types.evars_flag ->
  Ltac2_plugin.Tac2types.bindings -> unit Proofview.tactic
val specialize :
  Ltac2_plugin.Tac2types.constr_with_bindings ->
  Ltac2_plugin.Tac2types.intro_pattern option -> unit Proofview.tactic
val change :
  Pattern.constr_pattern option ->
  (EConstr.constr array, EConstr.constr) Ltac2_plugin.Tac2ffi.fun1 ->
  Ltac2_plugin.Tac2types.clause -> unit Proofview.tactic
val rewrite :
  Ltac2_plugin.Tac2types.evars_flag ->
  Ltac2_plugin.Tac2types.rewriting list ->
  Ltac2_plugin.Tac2types.clause ->
  unit Ltac2_plugin.Tac2types.thunk option -> unit Proofview.tactic
val symmetry : Ltac2_plugin.Tac2types.clause -> unit Proofview.tactic
val forward :
  bool ->
  unit Proofview.tactic option option ->
  Ltac2_plugin.Tac2types.intro_pattern option ->
  EConstr.constr -> unit Proofview.tactic
val assert_ : Ltac2_plugin.Tac2types.assertion -> unit Proofview.tactic
val letin_pat_tac :
  Ltac2_plugin.Tac2types.evars_flag ->
  (bool * Ltac2_plugin.Tac2types.intro_pattern_naming) option ->
  Names.Name.t ->
  Evd.evar_map option * EConstr.constr ->
  Ltac2_plugin.Tac2types.clause -> unit Proofview.tactic
val reduce :
  Redexpr.red_expr -> Ltac2_plugin.Tac2types.clause -> unit Proofview.tactic
val simpl :
  Names.GlobRef.t Genredexpr.glob_red_flag ->
  (Pattern.constr_pattern * Ltac2_plugin.Tac2types.occurrences) option ->
  Ltac2_plugin.Tac2types.clause -> unit Proofview.tactic
val cbv :
  Names.GlobRef.t Genredexpr.glob_red_flag ->
  Ltac2_plugin.Tac2types.clause -> unit Proofview.tactic
val cbn :
  Names.GlobRef.t Genredexpr.glob_red_flag ->
  Ltac2_plugin.Tac2types.clause -> unit Proofview.tactic
val lazy_ :
  Names.GlobRef.t Genredexpr.glob_red_flag ->
  Ltac2_plugin.Tac2types.clause -> unit Proofview.tactic
val unfold :
  (Names.GlobRef.t * Ltac2_plugin.Tac2types.occurrences) list ->
  Ltac2_plugin.Tac2types.clause -> unit Proofview.tactic
val pattern :
  (EConstr.constr * Ltac2_plugin.Tac2types.occurrences) list ->
  Ltac2_plugin.Tac2types.clause -> unit Proofview.tactic
val vm :
  (Pattern.constr_pattern * Ltac2_plugin.Tac2types.occurrences) option ->
  Ltac2_plugin.Tac2types.clause -> unit Proofview.tactic
val native :
  (Pattern.constr_pattern * Ltac2_plugin.Tac2types.occurrences) option ->
  Ltac2_plugin.Tac2types.clause -> unit Proofview.tactic
val eval_red : EConstr.constr -> EConstr.constr Proofview.tactic
val eval_hnf : EConstr.constr -> EConstr.constr Proofview.tactic
val eval_simpl :
  Names.GlobRef.t Genredexpr.glob_red_flag ->
  (Pattern.constr_pattern * Ltac2_plugin.Tac2types.occurrences) option ->
  EConstr.constr -> EConstr.constr Proofview.tactic
val eval_cbv :
  Names.GlobRef.t Genredexpr.glob_red_flag ->
  EConstr.constr -> EConstr.constr Proofview.tactic
val eval_cbn :
  Names.GlobRef.t Genredexpr.glob_red_flag ->
  EConstr.constr -> EConstr.constr Proofview.tactic
val eval_lazy :
  Names.GlobRef.t Genredexpr.glob_red_flag ->
  EConstr.constr -> EConstr.constr Proofview.tactic
val eval_unfold :
  (Names.GlobRef.t * Ltac2_plugin.Tac2types.occurrences) list ->
  EConstr.constr -> EConstr.constr Proofview.tactic
val eval_fold :
  EConstr.constr list -> EConstr.constr -> EConstr.constr Proofview.tactic
val eval_pattern :
  (EConstr.t * Ltac2_plugin.Tac2types.occurrences) list ->
  EConstr.constr -> EConstr.constr Proofview.tactic
val eval_vm :
  (Pattern.constr_pattern * Ltac2_plugin.Tac2types.occurrences) option ->
  EConstr.constr -> EConstr.constr Proofview.tactic
val eval_native :
  (Pattern.constr_pattern * Ltac2_plugin.Tac2types.occurrences) option ->
  EConstr.constr -> EConstr.constr Proofview.tactic
val discriminate :
  Ltac2_plugin.Tac2types.evars_flag ->
  Ltac2_plugin.Tac2types.destruction_arg option -> unit Proofview.tactic
val injection :
  Ltac2_plugin.Tac2types.evars_flag ->
  Ltac2_plugin.Tac2types.intro_pattern list option ->
  Ltac2_plugin.Tac2types.destruction_arg option -> unit Proofview.tactic
val autorewrite :
  all:bool ->
  unit Ltac2_plugin.Tac2types.thunk option ->
  Names.Id.t list -> Ltac2_plugin.Tac2types.clause -> unit Proofview.tactic
val trivial :
  Hints.debug ->
  EConstr.constr Ltac2_plugin.Tac2types.thunk list ->
  Names.Id.t list option -> unit Proofview.tactic
val auto :
  Hints.debug ->
  int option ->
  EConstr.constr Ltac2_plugin.Tac2types.thunk list ->
  Names.Id.t list option -> unit Proofview.tactic
val eauto :
  Hints.debug ->
  int option ->
  EConstr.constr Ltac2_plugin.Tac2types.thunk list ->
  Names.Id.t list option -> unit Proofview.tactic
val typeclasses_eauto :
  Class_tactics.search_strategy option ->
  int option -> Names.Id.t list option -> unit Proofview.tactic
val unify : EConstr.constr -> EConstr.constr -> unit Proofview.tactic
val inversion :
  Inv.inversion_kind ->
  Ltac2_plugin.Tac2types.destruction_arg ->
  Ltac2_plugin.Tac2types.intro_pattern option ->
  Names.Id.t list option -> unit Proofview.tactic
val contradiction :
  ("DEBUG:rule", [(("intros_patterns", 1360), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "evars_flag"), 0, (0)), 100000000, 0, -428), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "intro_pattern"), 0, (0)), 100000000, 0, -427)], (0)), 100000000, 0, -426), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -425)], (0)), 100000000, 0, -424), 0), 100000000, 0, -423), 0), 100000000, 0, -422), 0, (("plugins/ltac2/tac2tactics.mli", 20, 822, 822), ("plugins/ltac2/tac2tactics.mli", 20, 822, 891), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 0)), 0); (("apply", 1361), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "advanced_flag"), 0, (0)), 100000000, 0, -421), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "evars_flag"), 0, (0)), 100000000, 0, -420), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "thunk"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "constr_with_bindings"), 0, (0)), 100000000, 0, -419)], (0)), 100000000, 0, -418)], (0)), 100000000, 0, -417), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -414); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "intro_pattern"), 0, (0)), 100000000, 0, -416)], (0)), 100000000, 0, -415)]), 100000000, 0, -413)], (0)), 100000000, 0, -412), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -411)], (0)), 100000000, 0, -410), 0), 100000000, 0, -409), 0), 100000000, 0, -408), 0), 100000000, 0, -407), 0), 100000000, 0, -406), 0, (("plugins/ltac2/tac2tactics.mli", 22, 893, 893), ("plugins/ltac2/tac2tactics.mli", 24, 973, 1026), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 1)), 0); (("induction_destruct", 1362), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "rec_flag"), 0, (0)), 100000000, 0, -405), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "evars_flag"), 0, (0)), 100000000, 0, -404), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "induction_clause"), 0, (0)), 100000000, 0, -403)], (0)), 100000000, 0, -402), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "constr_with_bindings"), 0, (0)), 100000000, 0, -401)], (0)), 100000000, 0, -400), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -399)], (0)), 100000000, 0, -398), 0), 100000000, 0, -397), 0), 100000000, 0, -396), 0), 100000000, 0, -395), 0), 100000000, 0, -394), 0, (("plugins/ltac2/tac2tactics.mli", 26, 1028, 1028), ("plugins/ltac2/tac2tactics.mli", 27, 1079, 1148), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 2)), 0); (("elim", 1363), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "evars_flag"), 0, (0)), 100000000, 0, -393), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "constr_with_bindings"), 0, (0)), 100000000, 0, -392), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "constr_with_bindings"), 0, (0)), 100000000, 0, -391)], (0)), 100000000, 0, -390), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -389)], (0)), 100000000, 0, -388), 0), 100000000, 0, -387), 0), 100000000, 0, -386), 0), 100000000, 0, -385), 0, (("plugins/ltac2/tac2tactics.mli", 29, 1150, 1150), ("plugins/ltac2/tac2tactics.mli", 30, 1230, 1243), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 3)), 0); (("general_case_analysis", 1364), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "evars_flag"), 0, (0)), 100000000, 0, -384), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "constr_with_bindings"), 0, (0)), 100000000, 0, -383), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -382)], (0)), 100000000, 0, -381), 0), 100000000, 0, -380), 0), 100000000, 0, -379), 0, (("plugins/ltac2/tac2tactics.mli", 32, 1245, 1245), ("plugins/ltac2/tac2tactics.mli", 32, 1245, 1323), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 4)), 0); (("generalize", 1365), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -376); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "occurrences"), 0, (0)), 100000000, 0, -377); (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -378)]), 100000000, 0, -375)], (0)), 100000000, 0, -374), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -373)], (0)), 100000000, 0, -372), 0), 100000000, 0, -371), 0, (("plugins/ltac2/tac2tactics.mli", 34, 1325, 1325), ("plugins/ltac2/tac2tactics.mli", 34, 1325, 1393), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 5)), 0); (("constructor_tac", 1366), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "evars_flag"), 0, (0)), 100000000, 0, -370), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -369)], (0)), 100000000, 0, -368), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -367), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "bindings"), 0, (0)), 100000000, 0, -366), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -365)], (0)), 100000000, 0, -364), 0), 100000000, 0, -363), 0), 100000000, 0, -362), 0), 100000000, 0, -361), 0), 100000000, 0, -360), 0, (("plugins/ltac2/tac2tactics.mli", 36, 1395, 1395), ("plugins/ltac2/tac2tactics.mli", 36, 1395, 1475), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 6)), 0); (("left_with_bindings", 1367), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "evars_flag"), 0, (0)), 100000000, 0, -359), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "bindings"), 0, (0)), 100000000, 0, -358), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -357)], (0)), 100000000, 0, -356), 0), 100000000, 0, -355), 0), 100000000, 0, -354), 0, (("plugins/ltac2/tac2tactics.mli", 38, 1477, 1477), ("plugins/ltac2/tac2tactics.mli", 38, 1477, 1540), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 7)), 0); (("right_with_bindings", 1368), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "evars_flag"), 0, (0)), 100000000, 0, -353), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "bindings"), 0, (0)), 100000000, 0, -352), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -351)], (0)), 100000000, 0, -350), 0), 100000000, 0, -349), 0), 100000000, 0, -348), 0, (("plugins/ltac2/tac2tactics.mli", 39, 1541, 1541), ("plugins/ltac2/tac2tactics.mli", 39, 1541, 1604), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 8)), 0); (("split_with_bindings", 1369), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "evars_flag"), 0, (0)), 100000000, 0, -347), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "bindings"), 0, (0)), 100000000, 0, -346), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -345)], (0)), 100000000, 0, -344), 0), 100000000, 0, -343), 0), 100000000, 0, -342), 0, (("plugins/ltac2/tac2tactics.mli", 40, 1605, 1605), ("plugins/ltac2/tac2tactics.mli", 40, 1605, 1668), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 9)), 0); (("specialize", 1370), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "constr_with_bindings"), 0, (0)), 100000000, 0, -341), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "intro_pattern"), 0, (0)), 100000000, 0, -340)], (0)), 100000000, 0, -339), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -338)], (0)), 100000000, 0, -337), 0), 100000000, 0, -336), 0), 100000000, 0, -335), 0, (("plugins/ltac2/tac2tactics.mli", 42, 1670, 1670), ("plugins/ltac2/tac2tactics.mli", 42, 1670, 1746), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 10)), 0); (("change", 1371), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Pattern")), "constr_pattern"), 0, (0)), 100000000, 0, -334)], (0)), 100000000, 0, -333), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2ffi"), "fun1"), [(Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -331)], (0)), 100000000, 0, -330); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -332)], (0)), 100000000, 0, -329), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "clause"), 0, (0)), 100000000, 0, -328), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -327)], (0)), 100000000, 0, -326), 0), 100000000, 0, -325), 0), 100000000, 0, -324), 0), 100000000, 0, -323), 0, (("plugins/ltac2/tac2tactics.mli", 44, 1748, 1748), ("plugins/ltac2/tac2tactics.mli", 44, 1748, 1854), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 11)), 0); (("rewrite", 1372), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "evars_flag"), 0, (0)), 100000000, 0, -322), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "rewriting"), 0, (0)), 100000000, 0, -321)], (0)), 100000000, 0, -320), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "clause"), 0, (0)), 100000000, 0, -319), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "thunk"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -318)], (0)), 100000000, 0, -317)], (0)), 100000000, 0, -316), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -315)], (0)), 100000000, 0, -314), 0), 100000000, 0, -313), 0), 100000000, 0, -312), 0), 100000000, 0, -311), 0), 100000000, 0, -310), 0, (("plugins/ltac2/tac2tactics.mli", 46, 1856, 1856), ("plugins/ltac2/tac2tactics.mli", 47, 1870, 1946), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 12)), 0); (("symmetry", 1373), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "clause"), 0, (0)), 100000000, 0, -309), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -308)], (0)), 100000000, 0, -307), 0), 100000000, 0, -306), 0, (("plugins/ltac2/tac2tactics.mli", 49, 1948, 1948), ("plugins/ltac2/tac2tactics.mli", 49, 1948, 1984), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 13)), 0); (("forward", 1374), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -305), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -304)], (0)), 100000000, 0, -303)], (0)), 100000000, 0, -302)], (0)), 100000000, 0, -301), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "intro_pattern"), 0, (0)), 100000000, 0, -300)], (0)), 100000000, 0, -299), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -298), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -297)], (0)), 100000000, 0, -296), 0), 100000000, 0, -295), 0), 100000000, 0, -294), 0), 100000000, 0, -293), 0), 100000000, 0, -292), 0, (("plugins/ltac2/tac2tactics.mli", 51, 1986, 1986), ("plugins/ltac2/tac2tactics.mli", 52, 2037, 2084), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 14)), 0); (("assert_", 1375), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "assertion"), 0, (0)), 100000000, 0, -291), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -290)], (0)), 100000000, 0, -289), 0), 100000000, 0, -288), 0, (("plugins/ltac2/tac2tactics.mli", 54, 2086, 2086), ("plugins/ltac2/tac2tactics.mli", 54, 2086, 2124), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 15)), 0); (("letin_pat_tac", 1376), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "evars_flag"), 0, (0)), 100000000, 0, -287), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -285); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "intro_pattern_naming"), 0, (0)), 100000000, 0, -286)]), 100000000, 0, -284)], (0)), 100000000, 0, -283), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -282), (Tag1 (0, (Tag2 ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -280)], (0)), 100000000, 0, -279); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -281)]), 100000000, 0, -278), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "clause"), 0, (0)), 100000000, 0, -277), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -276)], (0)), 100000000, 0, -275), 0), 100000000, 0, -274), 0), 100000000, 0, -273), 0), 100000000, 0, -272), 0), 100000000, 0, -271), 0), 100000000, 0, -270), 0, (("plugins/ltac2/tac2tactics.mli", 56, 2126, 2126), ("plugins/ltac2/tac2tactics.mli", 57, 2200, 2267), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 16)), 0); (("reduce", 1377), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Redexpr")), "red_expr"), 0, (0)), 100000000, 0, -269), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "clause"), 0, (0)), 100000000, 0, -268), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -267)], (0)), 100000000, 0, -266), 0), 100000000, 0, -265), 0), 100000000, 0, -264), 0, (("plugins/ltac2/tac2tactics.mli", 59, 2269, 2269), ("plugins/ltac2/tac2tactics.mli", 59, 2269, 2323), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 17)), 0); (("simpl", 1378), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Genredexpr")), "glob_red_flag"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -263)], (0)), 100000000, 0, -262), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Pattern")), "constr_pattern"), 0, (0)), 100000000, 0, -260); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "occurrences"), 0, (0)), 100000000, 0, -261)]), 100000000, 0, -259)], (0)), 100000000, 0, -258), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "clause"), 0, (0)), 100000000, 0, -257), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -256)], (0)), 100000000, 0, -255), 0), 100000000, 0, -254), 0), 100000000, 0, -253), 0), 100000000, 0, -252), 0, (("plugins/ltac2/tac2tactics.mli", 61, 2325, 2325), ("plugins/ltac2/tac2tactics.mli", 62, 2364, 2436), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 18)), 0); (("cbv", 1379), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Genredexpr")), "glob_red_flag"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -251)], (0)), 100000000, 0, -250), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "clause"), 0, (0)), 100000000, 0, -249), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -248)], (0)), 100000000, 0, -247), 0), 100000000, 0, -246), 0), 100000000, 0, -245), 0, (("plugins/ltac2/tac2tactics.mli", 64, 2438, 2438), ("plugins/ltac2/tac2tactics.mli", 64, 2438, 2496), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 19)), 0); (("cbn", 1380), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Genredexpr")), "glob_red_flag"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -244)], (0)), 100000000, 0, -243), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "clause"), 0, (0)), 100000000, 0, -242), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -241)], (0)), 100000000, 0, -240), 0), 100000000, 0, -239), 0), 100000000, 0, -238), 0, (("plugins/ltac2/tac2tactics.mli", 66, 2498, 2498), ("plugins/ltac2/tac2tactics.mli", 66, 2498, 2556), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 20)), 0); (("lazy_", 1381), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Genredexpr")), "glob_red_flag"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -237)], (0)), 100000000, 0, -236), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "clause"), 0, (0)), 100000000, 0, -235), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -234)], (0)), 100000000, 0, -233), 0), 100000000, 0, -232), 0), 100000000, 0, -231), 0, (("plugins/ltac2/tac2tactics.mli", 68, 2558, 2558), ("plugins/ltac2/tac2tactics.mli", 68, 2558, 2618), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 21)), 0); (("unfold", 1382), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -229); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "occurrences"), 0, (0)), 100000000, 0, -230)]), 100000000, 0, -228)], (0)), 100000000, 0, -227), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "clause"), 0, (0)), 100000000, 0, -226), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -225)], (0)), 100000000, 0, -224), 0), 100000000, 0, -223), 0), 100000000, 0, -222), 0, (("plugins/ltac2/tac2tactics.mli", 70, 2620, 2620), ("plugins/ltac2/tac2tactics.mli", 70, 2620, 2688), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 22)), 0); (("pattern", 1383), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -220); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "occurrences"), 0, (0)), 100000000, 0, -221)]), 100000000, 0, -219)], (0)), 100000000, 0, -218), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "clause"), 0, (0)), 100000000, 0, -217), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -216)], (0)), 100000000, 0, -215), 0), 100000000, 0, -214), 0), 100000000, 0, -213), 0, (("plugins/ltac2/tac2tactics.mli", 72, 2690, 2690), ("plugins/ltac2/tac2tactics.mli", 72, 2690, 2756), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 23)), 0); (("vm", 1384), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Pattern")), "constr_pattern"), 0, (0)), 100000000, 0, -211); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "occurrences"), 0, (0)), 100000000, 0, -212)]), 100000000, 0, -210)], (0)), 100000000, 0, -209), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "clause"), 0, (0)), 100000000, 0, -208), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -207)], (0)), 100000000, 0, -206), 0), 100000000, 0, -205), 0), 100000000, 0, -204), 0, (("plugins/ltac2/tac2tactics.mli", 74, 2758, 2758), ("plugins/ltac2/tac2tactics.mli", 74, 2758, 2837), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 24)), 0); (("native", 1385), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Pattern")), "constr_pattern"), 0, (0)), 100000000, 0, -202); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "occurrences"), 0, (0)), 100000000, 0, -203)]), 100000000, 0, -201)], (0)), 100000000, 0, -200), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "clause"), 0, (0)), 100000000, 0, -199), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -198)], (0)), 100000000, 0, -197), 0), 100000000, 0, -196), 0), 100000000, 0, -195), 0, (("plugins/ltac2/tac2tactics.mli", 76, 2839, 2839), ("plugins/ltac2/tac2tactics.mli", 76, 2839, 2922), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 25)), 0); (("eval_red", 1386), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -194), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -193)], (0)), 100000000, 0, -192), 0), 100000000, 0, -191), 0, (("plugins/ltac2/tac2tactics.mli", 78, 2924, 2924), ("plugins/ltac2/tac2tactics.mli", 78, 2924, 2962), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 26)), 0); (("eval_hnf", 1387), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -190), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -189)], (0)), 100000000, 0, -188), 0), 100000000, 0, -187), 0, (("plugins/ltac2/tac2tactics.mli", 80, 2964, 2964), ("plugins/ltac2/tac2tactics.mli", 80, 2964, 3002), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 27)), 0); (("eval_simpl", 1388), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Genredexpr")), "glob_red_flag"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -186)], (0)), 100000000, 0, -185), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Pattern")), "constr_pattern"), 0, (0)), 100000000, 0, -183); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "occurrences"), 0, (0)), 100000000, 0, -184)]), 100000000, 0, -182)], (0)), 100000000, 0, -181), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -180), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -179)], (0)), 100000000, 0, -178), 0), 100000000, 0, -177), 0), 100000000, 0, -176), 0), 100000000, 0, -175), 0, (("plugins/ltac2/tac2tactics.mli", 82, 3004, 3004), ("plugins/ltac2/tac2tactics.mli", 83, 3048, 3122), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 28)), 0); (("eval_cbv", 1389), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Genredexpr")), "glob_red_flag"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -174)], (0)), 100000000, 0, -173), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -172), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -171)], (0)), 100000000, 0, -170), 0), 100000000, 0, -169), 0), 100000000, 0, -168), 0, (("plugins/ltac2/tac2tactics.mli", 85, 3124, 3124), ("plugins/ltac2/tac2tactics.mli", 85, 3124, 3189), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 29)), 0); (("eval_cbn", 1390), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Genredexpr")), "glob_red_flag"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -167)], (0)), 100000000, 0, -166), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -165), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -164)], (0)), 100000000, 0, -163), 0), 100000000, 0, -162), 0), 100000000, 0, -161), 0, (("plugins/ltac2/tac2tactics.mli", 87, 3191, 3191), ("plugins/ltac2/tac2tactics.mli", 87, 3191, 3256), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 30)), 0); (("eval_lazy", 1391), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Genredexpr")), "glob_red_flag"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -160)], (0)), 100000000, 0, -159), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -158), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -157)], (0)), 100000000, 0, -156), 0), 100000000, 0, -155), 0), 100000000, 0, -154), 0, (("plugins/ltac2/tac2tactics.mli", 89, 3258, 3258), ("plugins/ltac2/tac2tactics.mli", 89, 3258, 3324), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 31)), 0); (("eval_unfold", 1392), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -152); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "occurrences"), 0, (0)), 100000000, 0, -153)]), 100000000, 0, -151)], (0)), 100000000, 0, -150), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -149), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -148)], (0)), 100000000, 0, -147), 0), 100000000, 0, -146), 0), 100000000, 0, -145), 0, (("plugins/ltac2/tac2tactics.mli", 91, 3326, 3326), ("plugins/ltac2/tac2tactics.mli", 91, 3326, 3401), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 32)), 0); (("eval_fold", 1393), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -144)], (0)), 100000000, 0, -143), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -142), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -141)], (0)), 100000000, 0, -140), 0), 100000000, 0, -139), 0), 100000000, 0, -138), 0, (("plugins/ltac2/tac2tactics.mli", 93, 3403, 3403), ("plugins/ltac2/tac2tactics.mli", 93, 3403, 3457), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 33)), 0); (("eval_pattern", 1394), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("EConstr")), "t"), 0, (0)), 100000000, 0, -136); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "occurrences"), 0, (0)), 100000000, 0, -137)]), 100000000, 0, -135)], (0)), 100000000, 0, -134), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -133), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -132)], (0)), 100000000, 0, -131), 0), 100000000, 0, -130), 0), 100000000, 0, -129), 0, (("plugins/ltac2/tac2tactics.mli", 95, 3459, 3459), ("plugins/ltac2/tac2tactics.mli", 95, 3459, 3535), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 34)), 0); (("eval_vm", 1395), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Pattern")), "constr_pattern"), 0, (0)), 100000000, 0, -127); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "occurrences"), 0, (0)), 100000000, 0, -128)]), 100000000, 0, -126)], (0)), 100000000, 0, -125), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -124), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -123)], (0)), 100000000, 0, -122), 0), 100000000, 0, -121), 0), 100000000, 0, -120), 0, (("plugins/ltac2/tac2tactics.mli", 97, 3537, 3537), ("plugins/ltac2/tac2tactics.mli", 97, 3537, 3623), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 35)), 0); (("eval_native", 1396), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Pattern")), "constr_pattern"), 0, (0)), 100000000, 0, -118); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "occurrences"), 0, (0)), 100000000, 0, -119)]), 100000000, 0, -117)], (0)), 100000000, 0, -116), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -115), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -114)], (0)), 100000000, 0, -113), 0), 100000000, 0, -112), 0), 100000000, 0, -111), 0, (("plugins/ltac2/tac2tactics.mli", 99, 3625, 3625), ("plugins/ltac2/tac2tactics.mli", 99, 3625, 3715), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 36)), 0); (("discriminate", 1397), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "evars_flag"), 0, (0)), 100000000, 0, -110), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "destruction_arg"), 0, (0)), 100000000, 0, -109)], (0)), 100000000, 0, -108), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -107)], (0)), 100000000, 0, -106), 0), 100000000, 0, -105), 0), 100000000, 0, -104), 0, (("plugins/ltac2/tac2tactics.mli", 101, 3717, 3717), ("plugins/ltac2/tac2tactics.mli", 101, 3717, 3787), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 37)), 0); (("injection", 1398), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "evars_flag"), 0, (0)), 100000000, 0, -103), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "intro_pattern"), 0, (0)), 100000000, 0, -102)], (0)), 100000000, 0, -101)], (0)), 100000000, 0, -100), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "destruction_arg"), 0, (0)), 100000000, 0, -99)], (0)), 100000000, 0, -98), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -97)], (0)), 100000000, 0, -96), 0), 100000000, 0, -95), 0), 100000000, 0, -94), 0), 100000000, 0, -93), 0, (("plugins/ltac2/tac2tactics.mli", 103, 3789, 3789), ("plugins/ltac2/tac2tactics.mli", 103, 3789, 3885), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 38)), 0); (("autorewrite", 1399), ((Tag1 (("all"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -92), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "thunk"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -91)], (0)), 100000000, 0, -90)], (0)), 100000000, 0, -89), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -88)], (0)), 100000000, 0, -87), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "clause"), 0, (0)), 100000000, 0, -86), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -85)], (0)), 100000000, 0, -84), 0), 100000000, 0, -83), 0), 100000000, 0, -82), 0), 100000000, 0, -81), 0), 100000000, 0, -80), 0, (("plugins/ltac2/tac2tactics.mli", 105, 3887, 3887), ("plugins/ltac2/tac2tactics.mli", 105, 3887, 3972), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 39)), 0); (("trivial", 1400), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Hints")), "debug"), 0, (0)), 100000000, 0, -79), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "thunk"), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -78)], (0)), 100000000, 0, -77)], (0)), 100000000, 0, -76), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -75)], (0)), 100000000, 0, -74)], (0)), 100000000, 0, -73), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -72)], (0)), 100000000, 0, -71), 0), 100000000, 0, -70), 0), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("plugins/ltac2/tac2tactics.mli", 107, 3974, 3974), ("plugins/ltac2/tac2tactics.mli", 108, 4044, 4067), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 40)), 0); (("auto", 1401), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Hints")), "debug"), 0, (0)), 100000000, 0, -67), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -66)], (0)), 100000000, 0, -65), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "thunk"), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -64)], (0)), 100000000, 0, -63)], (0)), 100000000, 0, -62), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -61)], (0)), 100000000, 0, -60)], (0)), 100000000, 0, -59), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -58)], (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("plugins/ltac2/tac2tactics.mli", 110, 4069, 4069), ("plugins/ltac2/tac2tactics.mli", 111, 4130, 4173), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 41)), 0); (("eauto", 1402), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Hints")), "debug"), 0, (0)), 100000000, 0, -52), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -51)], (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "thunk"), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -49)], (0)), 100000000, 0, -48)], (0)), 100000000, 0, -47), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -46)], (0)), 100000000, 0, -45)], (0)), 100000000, 0, -44), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -43)], (0)), 100000000, 0, -42), 0), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("plugins/ltac2/tac2tactics.mli", 113, 4175, 4175), ("plugins/ltac2/tac2tactics.mli", 114, 4237, 4280), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 42)), 0); (("typeclasses_eauto", 1403), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Class_tactics")), "search_strategy"), 0, (0)), 100000000, 0, -37)], (0)), 100000000, 0, -36), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -35)], (0)), 100000000, 0, -34), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -33)], (0)), 100000000, 0, -32)], (0)), 100000000, 0, -31), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -30)], (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("plugins/ltac2/tac2tactics.mli", 116, 4282, 4282), ("plugins/ltac2/tac2tactics.mli", 117, 4360, 4403), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 43)), 0); (("unify", 1404), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -25), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -24), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -23)], (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("plugins/ltac2/tac2tactics.mli", 119, 4405, 4405), ("plugins/ltac2/tac2tactics.mli", 119, 4405, 4448), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 44)), 0); (("inversion", 1405), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Inv")), "inversion_kind"), 0, (0)), 100000000, 0, -19), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "destruction_arg"), 0, (0)), 100000000, 0, -18), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "intro_pattern"), 0, (0)), 100000000, 0, -17)], (0)), 100000000, 0, -16), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -15)], (0)), 100000000, 0, -14)], (0)), 100000000, 0, -13), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -12)], (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("plugins/ltac2/tac2tactics.mli", 121, 4450, 4450), ("plugins/ltac2/tac2tactics.mli", 121, 4450, 4562), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 45)), 0); (("contradiction", 1406), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2types"), "constr_with_bindings"), 0, (0)), 100000000, 0, -6)], (0)), 100000000, 0, -5), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4)], (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("plugins/ltac2/tac2tactics.mli", 123, 4564, 4564), ("plugins/ltac2/tac2tactics.mli", 123, 4564, 4626), 0), 0, Tag1 ("Ltac2_plugin__Tac2tactics", 46)), 0)], "Ltac2_plugin__Tac2tactics", [("Ltac2_plugin__Tac2tactics", ("\139\197\233\244-\223\168<\161@\173 \226\242PI")); ("Z", ("\253\196\2168\027\199O\134\220\218\031'\1484\233o")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("UnivSubst", ("\190qu\031mc\130\181\003G]\132\"\219m)")); ("UnivProblem", ("6'\161\018\181\001.\253\000\141a6\171\1727\155")); ("UnivNames", ("%\151_\209%+JM$n\001\232\194n\178N")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Unification", ("\017\027\157=\255\1914L\020\213h\154.\219\005\170")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UState", ("SD\203\215|\136\n\251\239\208\148\215C\n\167\005")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("Typeclasses", ("KO\1297x\192\210\231\001\1824l\135\192\160|")); ("Type_errors", ("7\157\162-\214M\206\196\228\191\005v\134\177\144\134")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Tactypes", ("\143E\135*\195\151\144H\151M\011($\017\159\203")); ("Tactics", ("7\154?u\169\241\190R\245\187\153\020GE\029\215")); ("Tacred", ("\133d\143\1310z\030\237\232\002\001\025\147\140\215:")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Store", ("/dT\252\145\179pq\216{\181\206\190K+U")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Random", ("\020\005Xq\171\026\218\152X\135\254\023\133zK\200")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Bytes", ("C\134\194)\175\222\137p\205\246\244\r\241\164P\209")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("Section", ("\245\207\b\021\142v=\155#w\246}\"4b\006")); ("Safe_typing", (")\250?\164\145\132\241\127\186\152h+\145\"\237l")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Reductionops", ("\179\023P\218\146Uh\014IS\196C\031q~#")); ("Redexpr", ("\181\250o\134\007\001\242+$\149)\204\226\"\0240")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Proofview_monad", ("\218\196\189S\147\216\129\221\231\224v\228O\024*\239")); ("Proofview", ("\245\140U\027\236\199\199&\242\156\199YG\250tA")); ("Proof", ("\249\030\200g\248\164o&\tS\132\rTl\1736")); ("Primred", ("\158G\192\182\224\196\144*\174y_E\165\012\137C")); ("Pretyping", ("\151\160\191\149\149Ff\195\171g\189\156\r\166n\189")); ("Pretype_errors", ("\155\229\201\176\163\234\203C\127\227\141\174j\199\200H")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Pattern", ("\195C\140Wb=\022\222\208\227^K\003\020\215X")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("NumTok", ("vd\023^\251\244B\166\145'\156\196-0\027\169")); ("Notation_term", ("5\002\017\217b\193nc>\239\239\237\244\031\173?")); ("Nativevalues", ("8:\007\025e\226c,\001\171\146#l\210\171\152")); ("Nativelib", ("V\239\205Y1\147E:,\176\196Hy\1483|")); ("Nativecode", ("\190\185\255\006m\012\210\163\138Rz\247\15283\183")); ("Nametab", ("1\018\163\254\225\2178\025DI\0271Q\198\134\140")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Namegen", ("\187\222\224T\255\020\1808-\212*\164\131\177\157x")); ("Monad", ("\244\171T\157\194p\187\160\149\195{\132\222\020\253\148")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Ltac_pretype", ("\224\"\167\018i:U\172>\188\128$\r\252\020T")); ("Ltac2_plugin__Tac2types", ("\132B3\005k8\219\153\175\249\026Q\006'\173y")); ("Ltac2_plugin__Tac2ffi", ("\169\b=\\W\215`\141b}Ub\245\190f]")); ("Ltac2_plugin__Tac2expr", ("T\154\246\018\232\196\182\229\012\167v}\1367|\157")); ("Ltac2_plugin__Tac2dyn", ("\003M~\173\240\228^\184[\135\224\206\1576\163 ")); ("Ltac2_plugin", ("\165R\230\016\178\131\154\196w\014@m\191\218\194\020")); ("Logic_monad", ("\130\157\160Q\163vQ\137\184\2242\209\128\024\220i")); ("Logic", ("\214\234\234\223\014\197\147\165\158f.$\163\164\245Z")); ("Locus", ("_\002\003W\246\181\225\242Uf\139\226\176\174\192I")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libobject", ("\132}t\226hl\213L\210\172\167pc\012~\129")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Inv", ("\249\160_\012\n1\202C\204\171\024\017$\025\226\138")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Ind_tables", ("\1586xu\131C\135\176\222\242\178r\031D,\196")); ("IStream", ("#\199\192\148>\207Y\174\203(:\b5\177]\170")); ("Hook", ("\183\194\223\003\155\169',\187\240a;E\b\1396")); ("Hints", ("\007\130]H\\t(\131\000}\205\137H\148\250\166")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Gramlib__Stream", ("\248\\H\205_76\253\136\146\200\031\165\021=t")); ("Gramlib", ("\154\143\210e\021i\246\176\224\194\220\217\007\145\139A")); ("Goal_select", ("\235$\175\023t\178\194.Ivlz\005\211\173\n")); ("Globnames", ("W\004\172T\214\181H\220\232\160LSW\006\130\226")); ("Glob_term", ("\165=a\227\160\153.\021_$\232\209T\236\153O")); ("GlobEnv", ("(\152\019ok\006R\183\193\145\137\133<\171\005\231")); ("Genredexpr", ("rz\204\143\007`VgI\195P\168sO\198\012")); ("Genlambda", ("\170}\024\241\141\222\136S\169\219\2212i\134KI")); ("Geninterp", ("2S\151\191\189\159\004\188;\224d\199|U\004\028")); ("Genintern", ("\152Ac\019=n\235\197\141\224T\162\192\148eg")); ("Genarg", ("\1434\015\001\152\196\005s\156\136\195\185\247\b3\t")); ("Ftactic", ("K\172\205\128\241\162\160\201\202\1561o\180L\206:")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evd", ("\211\205p\193\216\129r\006\239oN\142ar\196\175")); ("Evarutil", ("\005\175\132e\164O\223svi \252\232\138\022\137")); ("Evarsolve", ("\000&\228\016}j\199\t\229\173\127\024\219\199\184\178")); ("Evardefine", ("\178\167R\199\158\242\001Y\215<\151\020\206\153\227\019")); ("Evar_kinds", ("\023L\186\132\218}\254\221\185\198\220\200h\003{\021")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Equality", ("M\157\199R]=\020;\029s@\210\1789y\163")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("EConstr", ("\201aW\156\157;N\004\201V\208\006L\166\211)")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Deprecation", ("\226:\146\245\190;\1929\254@\247a\218\244\134\189")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("DAst", ("\224/\200)\007\184ni\134\b\139\204\241\005w\212")); ("Coqlib", ("'\226\164\143\129\221\158\224\247\247\160\190~\171\191\198")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conversion", ("\158\150&\195M\tv\127|\029\158RRK\211A")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constrexpr", ("p'r\245\184chL\183\249\"\213]\1741\237")); ("Constr_matching", ("\135\145\197fVk`\131U\213\181\222\1666\133\248")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("Class_tactics", ("v\025\b\225\176\178\234\187\233\242\233\194\176)\223\183")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CWarnings", ("\132\220\150\227\215\239t\217\132\220'JX\188\246c")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu")); ("CString", ("\243~4C\023~\169\148x\206\165\207\195\177Q\184")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CDebug", ("^4\210p7\239!3\138\138\213?\239`\250\157")); ("CClosure", ("\167\b\022\241V-\r\253\b\002\000j]\223%\142")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
Ltac2_plugin.Tac2types.constr_with_bindings option -> unit Proofview.tactic
