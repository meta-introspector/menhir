exception Empty
type 'a document
type id = Stateid.t
val create : unit -> 'a document
val tip : 'a document -> id
val tip_data : 'a document -> 'a
val push : 'a document -> 'a -> unit
val pop : 'a document -> 'a
val assign_tip_id : 'a document -> id -> unit
val cut_at : 'a document -> id -> 'a list
val find_id : 'a document -> (id -> 'a -> bool) -> id * bool
val find : 'a document -> (bool -> id option -> 'a -> bool) -> 'a
val find_map : 'a document -> (bool -> id option -> 'a -> 'b option) -> 'b
val focus :
  'a document ->
  cond_top:(id -> 'a -> bool) -> cond_bot:(id -> 'a -> bool) -> unit
val unfocus : 'a document -> unit
val focused : 'a document -> bool
val is_empty : 'a document -> bool
val before_tip : 'a document -> id * bool
val is_in_focus : 'a document -> id -> bool
val fold_all :
  'a document -> 'c -> ('c -> bool -> id option -> 'a -> 'c) -> 'c
val context : 'a document -> (id * 'a) list * (id * 'a) list
val print : 'a document -> (bool -> id option -> 'a -> Pp.t) -> Pp.t
class type ['a] signals =
  object
    method popped :
      callback:('a -> ('a list * 'a list) option -> unit) -> unit
    method pushed :
      callback:('a -> ('a list * 'a list) option -> unit) -> unit
  end("DEBUG:rule", [Tag2 (("Empty", 376), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Document", 0)), 2, 0); Tag1 (("document", 377), ([((("a")), 100000000, 0, -178)], 1, 0, 1, 0, [7], [2], 0, 0, (("ide/coqide/document.mli", 32, 1703, 1703), ("ide/coqide/document.mli", 32, 1703, 1719), 0), 0, 0, 0, Tag1 ("Document", 1)), 1, 0); Tag1 (("id", 378), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Stateid")), "t"), 0, (0)), 100000000, 0, -177)), 0, 0, 0, 0, (("ide/coqide/document.mli", 33, 1720, 1720), ("ide/coqide/document.mli", 33, 1720, 1739), 0), 0, 0, 0, Tag1 ("Document", 2)), 1, 0); (("create", 379), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -176), (Tag3 ((("document", 377)), [((("a")), 100000000, 0, -175)], (0)), 100000000, 0, -174), 0), 100000000, 0, -173), 0, (("ide/coqide/document.mli", 35, 1741, 1741), ("ide/coqide/document.mli", 35, 1741, 1773), 0), 0, Tag1 ("Document", 3)), 0); (("tip", 380), ((Tag1 (0, (Tag3 ((("document", 377)), [((("a")), 100000000, 0, -172)], (0)), 100000000, 0, -171), (Tag3 ((("id", 378)), 0, (0)), 100000000, 0, -170), 0), 100000000, 0, -169), 0, (("ide/coqide/document.mli", 42, 1947, 1947), ("ide/coqide/document.mli", 42, 1947, 1980), 0), 0, Tag1 ("Document", 4)), 0); (("tip_data", 381), ((Tag1 (0, (Tag3 ((("document", 377)), [((("a")), 100000000, 0, -167)], (0)), 100000000, 0, -168), ((("a")), 100000000, 0, -167), 0), 100000000, 0, -166), 0, (("ide/coqide/document.mli", 46, 2025, 2025), ("ide/coqide/document.mli", 46, 2025, 2058), 0), 0, Tag1 ("Document", 5)), 0); (("push", 382), ((Tag1 (0, (Tag3 ((("document", 377)), [((("a")), 100000000, 0, -164)], (0)), 100000000, 0, -165), (Tag1 (0, ((("a")), 100000000, 0, -164), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -163), 0), 100000000, 0, -162), 0), 100000000, 0, -161), 0, (("ide/coqide/document.mli", 49, 2112, 2112), ("ide/coqide/document.mli", 49, 2112, 2148), 0), 0, Tag1 ("Document", 6)), 0); (("pop", 383), ((Tag1 (0, (Tag3 ((("document", 377)), [((("a")), 100000000, 0, -159)], (0)), 100000000, 0, -160), ((("a")), 100000000, 0, -159), 0), 100000000, 0, -158), 0, (("ide/coqide/document.mli", 53, 2198, 2198), ("ide/coqide/document.mli", 53, 2198, 2225), 0), 0, Tag1 ("Document", 7)), 0); (("assign_tip_id", 384), ((Tag1 (0, (Tag3 ((("document", 377)), [((("a")), 100000000, 0, -157)], (0)), 100000000, 0, -156), (Tag1 (0, (Tag3 ((("id", 378)), 0, (0)), 100000000, 0, -155), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -154), 0), 100000000, 0, -153), 0), 100000000, 0, -152), 0, (("ide/coqide/document.mli", 57, 2283, 2283), ("ide/coqide/document.mli", 57, 2283, 2328), 0), 0, Tag1 ("Document", 8)), 0); (("cut_at", 385), ((Tag1 (0, (Tag3 ((("document", 377)), [((("a")), 100000000, 0, -149)], (0)), 100000000, 0, -151), (Tag1 (0, (Tag3 ((("id", 378)), 0, (0)), 100000000, 0, -150), (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -149)], (0)), 100000000, 0, -148), 0), 100000000, 0, -147), 0), 100000000, 0, -146), 0, (("ide/coqide/document.mli", 62, 2468, 2468), ("ide/coqide/document.mli", 62, 2468, 2509), 0), 0, Tag1 ("Document", 9)), 0); (("find_id", 386), ((Tag1 (0, (Tag3 ((("document", 377)), [((("a")), 100000000, 0, -143)], (0)), 100000000, 0, -145), (Tag1 (0, (Tag1 (0, (Tag3 ((("id", 378)), 0, (0)), 100000000, 0, -144), (Tag1 (0, ((("a")), 100000000, 0, -143), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -142), 0), 100000000, 0, -141), 0), 100000000, 0, -140), (Tag2 ([(Tag3 ((("id", 378)), 0, (0)), 100000000, 0, -138); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -139)]), 100000000, 0, -137), 0), 100000000, 0, -136), 0), 100000000, 0, -135), 0, (("ide/coqide/document.mli", 70, 2783, 2783), ("ide/coqide/document.mli", 70, 2783, 2843), 0), 0, Tag1 ("Document", 10)), 0); (("find", 387), ((Tag1 (0, (Tag3 ((("document", 377)), [((("a")), 100000000, 0, -126)], (0)), 100000000, 0, -134), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -133), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("id", 378)), 0, (0)), 100000000, 0, -132)], (0)), 100000000, 0, -131), (Tag1 (0, ((("a")), 100000000, 0, -126), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -130), 0), 100000000, 0, -129), 0), 100000000, 0, -128), 0), 100000000, 0, -127), ((("a")), 100000000, 0, -126), 0), 100000000, 0, -125), 0), 100000000, 0, -124), 0, (("ide/coqide/document.mli", 75, 2994, 2994), ("ide/coqide/document.mli", 75, 2994, 3059), 0), 0, Tag1 ("Document", 11)), 0); (("find_map", 388), ((Tag1 (0, (Tag3 ((("document", 377)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -123), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -122), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("id", 378)), 0, (0)), 100000000, 0, -121)], (0)), 100000000, 0, -120), (Tag1 (0, ((("a")), 100000000, 0, -119), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -114)], (0)), 100000000, 0, -118), 0), 100000000, 0, -117), 0), 100000000, 0, -116), 0), 100000000, 0, -115), ((("b")), 100000000, 0, -114), 0), 100000000, 0, -113), 0), 100000000, 0, -112), 0, (("ide/coqide/document.mli", 76, 3060, 3060), ("ide/coqide/document.mli", 76, 3060, 3134), 0), 0, Tag1 ("Document", 12)), 0); (("focus", 389), ((Tag1 (0, (Tag3 ((("document", 377)), [((("a")), 100000000, 0, -105)], (0)), 100000000, 0, -111), (Tag1 (("cond_top"), (Tag1 (0, (Tag3 ((("id", 378)), 0, (0)), 100000000, 0, -110), (Tag1 (0, ((("a")), 100000000, 0, -105), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -109), 0), 100000000, 0, -108), 0), 100000000, 0, -107), (Tag1 (("cond_bot"), (Tag1 (0, (Tag3 ((("id", 378)), 0, (0)), 100000000, 0, -106), (Tag1 (0, ((("a")), 100000000, 0, -105), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -104), 0), 100000000, 0, -103), 0), 100000000, 0, -102), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -101), 0), 100000000, 0, -100), 0), 100000000, 0, -99), 0), 100000000, 0, -98), 0, (("ide/coqide/document.mli", 82, 3403, 3403), ("ide/coqide/document.mli", 84, 3432, 3502), 0), 0, Tag1 ("Document", 13)), 0); (("unfocus", 390), ((Tag1 (0, (Tag3 ((("document", 377)), [((("a")), 100000000, 0, -97)], (0)), 100000000, 0, -96), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -95), 0), 100000000, 0, -94), 0, (("ide/coqide/document.mli", 88, 3602, 3602), ("ide/coqide/document.mli", 88, 3602, 3635), 0), 0, Tag1 ("Document", 14)), 0); (("focused", 391), ((Tag1 (0, (Tag3 ((("document", 377)), [((("a")), 100000000, 0, -93)], (0)), 100000000, 0, -92), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -91), 0), 100000000, 0, -90), 0, (("ide/coqide/document.mli", 91, 3668, 3668), ("ide/coqide/document.mli", 91, 3668, 3701), 0), 0, Tag1 ("Document", 15)), 0); (("is_empty", 392), ((Tag1 (0, (Tag3 ((("document", 377)), [((("a")), 100000000, 0, -89)], (0)), 100000000, 0, -88), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("ide/coqide/document.mli", 94, 3730, 3730), ("ide/coqide/document.mli", 94, 3730, 3764), 0), 0, Tag1 ("Document", 16)), 0); (("before_tip", 393), ((Tag1 (0, (Tag3 ((("document", 377)), [((("a")), 100000000, 0, -85)], (0)), 100000000, 0, -84), (Tag2 ([(Tag3 ((("id", 378)), 0, (0)), 100000000, 0, -82); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -83)]), 100000000, 0, -81), 0), 100000000, 0, -80), 0, (("ide/coqide/document.mli", 98, 3870, 3870), ("ide/coqide/document.mli", 98, 3870, 3911), 0), 0, Tag1 ("Document", 17)), 0); (("is_in_focus", 394), ((Tag1 (0, (Tag3 ((("document", 377)), [((("a")), 100000000, 0, -79)], (0)), 100000000, 0, -78), (Tag1 (0, (Tag3 ((("id", 378)), 0, (0)), 100000000, 0, -77), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -76), 0), 100000000, 0, -75), 0), 100000000, 0, -74), 0, (("ide/coqide/document.mli", 101, 3951, 3951), ("ide/coqide/document.mli", 101, 3951, 3994), 0), 0, Tag1 ("Document", 18)), 0); (("fold_all", 395), ((Tag1 (0, (Tag3 ((("document", 377)), [((("a")), 100000000, 0, -69)], (0)), 100000000, 0, -73), (Tag1 (0, ((("c")), 100000000, 0, -64), (Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -64), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -72), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("id", 378)), 0, (0)), 100000000, 0, -71)], (0)), 100000000, 0, -70), (Tag1 (0, ((("a")), 100000000, 0, -69), ((("c")), 100000000, 0, -64), 0), 100000000, 0, -68), 0), 100000000, 0, -67), 0), 100000000, 0, -66), 0), 100000000, 0, -65), ((("c")), 100000000, 0, -64), 0), 100000000, 0, -63), 0), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("ide/coqide/document.mli", 105, 4091, 4091), ("ide/coqide/document.mli", 106, 4106, 4172), 0), 0, Tag1 ("Document", 19)), 0); (("context", 396), ((Tag1 (0, (Tag3 ((("document", 377)), [((("a")), 100000000, 0, -56)], (0)), 100000000, 0, -60), (Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("id", 378)), 0, (0)), 100000000, 0, -55); ((("a")), 100000000, 0, -56)]), 100000000, 0, -54)], (0)), 100000000, 0, -53); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("id", 378)), 0, (0)), 100000000, 0, -59); ((("a")), 100000000, 0, -56)]), 100000000, 0, -58)], (0)), 100000000, 0, -57)]), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("ide/coqide/document.mli", 111, 4310, 4310), ("ide/coqide/document.mli", 111, 4310, 4370), 0), 0, Tag1 ("Document", 20)), 0); (("print", 397), ((Tag1 (0, (Tag3 ((("document", 377)), [((("a")), 100000000, 0, -46)], (0)), 100000000, 0, -50), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -49), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("id", 378)), 0, (0)), 100000000, 0, -48)], (0)), 100000000, 0, -47), (Tag1 (0, ((("a")), 100000000, 0, -46), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("ide/coqide/document.mli", 114, 4391, 4391), ("ide/coqide/document.mli", 115, 4403, 4462), 0), 0, Tag1 ("Document", 21)), 0); Tag6 (("signals", 398), ([((("a")), 100000000, 0, -19)], Tag1 (((Tag4 ((Tag5 ("popped", 1, (Tag10 ((Tag1 (("callback"), (Tag1 (0, ((("a")), 100000000, 0, -19), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -29); (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -30)]), 100000000, 0, -28)], (0)), 100000000, 0, -27), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), (Tag5 ("pushed", 1, (Tag10 ((Tag1 (("callback"), (Tag1 (0, ((("a")), 100000000, 0, -19), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -18); (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -20)]), 100000000, 0, -17)], (0)), 100000000, 0, -16), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), ((0), 100000000, 0, -35)), 100000000, 0, -38)), 100000000, 0, -37), (([(("signals", 399)); ((0), 100000000, 0, -35); ((("a")), 100000000, 0, -19)]))), 100000000, 0, -36), ((0), 100000000, 0, -35), 0, (0, "popped", (0, 1, (Tag10 ((Tag1 (("callback"), (Tag1 (0, ((("a")), 100000000, 0, -19), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -29); (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -30)]), 100000000, 0, -28)], (0)), 100000000, 0, -27), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21)), (0, "pushed", (0, 1, (Tag10 ((Tag1 (("callback"), (Tag1 (0, ((("a")), 100000000, 0, -19), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -18); (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -20)]), 100000000, 0, -17)], (0)), 100000000, 0, -16), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10)), 0, 1), 2))), (("signals", 399)), ([((("a")), 100000000, 0, -19)], 1, 0, 1, ((Tag4 ((Tag5 ("popped", 1, (Tag10 ((Tag1 (("callback"), (Tag1 (0, ((("a")), 100000000, 0, -19), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -29); (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -30)]), 100000000, 0, -28)], (0)), 100000000, 0, -27), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), (Tag5 ("pushed", 1, (Tag10 ((Tag1 (("callback"), (Tag1 (0, ((("a")), 100000000, 0, -19), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -18); (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -20)]), 100000000, 0, -17)], (0)), 100000000, 0, -16), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), ((0), 100000000, 0, -34)), 100000000, 0, -33)), 100000000, 0, -32), (([(("signals", 399)); ((0), 100000000, 0, -34); ((("a")), 100000000, 0, -19)]))), 100000000, 0, -31)), [29], [2], 0, 0, (("ide/coqide/document.mli", 119, 4495, 4495), ("ide/coqide/document.mli", 123, 4690, 4695), 0), 0, 0, 0, Tag1 ("Document", 22)), [29], (("ide/coqide/document.mli", 119, 4495, 4495), ("ide/coqide/document.mli", 123, 4690, 4695), 0), 0, Tag1 ("Document", 22)), 1, 0); Tag1 (("signals", 399), ([((("a")), 100000000, 0, -19)], 1, 0, 1, ((Tag4 ((Tag5 ("popped", 1, (Tag10 ((Tag1 (("callback"), (Tag1 (0, ((("a")), 100000000, 0, -19), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -29); (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -30)]), 100000000, 0, -28)], (0)), 100000000, 0, -27), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), (Tag5 ("pushed", 1, (Tag10 ((Tag1 (("callback"), (Tag1 (0, ((("a")), 100000000, 0, -19), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -18); (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -20)]), 100000000, 0, -17)], (0)), 100000000, 0, -16), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), (0, 100000000, 0, -9)), 100000000, 0, -8)), 100000000, 0, -7), (0)), 100000000, 0, -6)), [29], [2], 0, 0, (("ide/coqide/document.mli", 119, 4495, 4495), ("ide/coqide/document.mli", 123, 4690, 4695), 0), 0, 0, 0, Tag1 ("Document", 22)), 1, 0); (("connect", 400), ((Tag1 (0, (Tag3 ((("document", 377)), [((("a")), 100000000, 0, -4)], (0)), 100000000, 0, -5), (Tag3 ((("signals", 399)), [((("a")), 100000000, 0, -4)], (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("ide/coqide/document.mli", 125, 4697, 4697), ("ide/coqide/document.mli", 125, 4697, 4736), 0), 0, Tag1 ("Document", 23)), 0)], "Document", [("Document", ("\182!\191!/\225\006\215$o\181\020R\007\012\r")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stateid", ("\183\165\247\166~\005\017.\179f.\178n\255(\137")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val connect : 'a document -> 'a signals
