module type S = Base__Queue_intf.S
type 'a t
val compare :
  'a Base__Ppx_compare_lib.compare -> 'a t Base__Ppx_compare_lib.compare
val t_of_sexp : (Sexplib0__.Sexp.t -> 'a) -> Sexplib0__.Sexp.t -> 'a t
val sexp_of_t : ('a -> Sexplib0__.Sexp.t) -> 'a t -> Sexplib0__.Sexp.t
val t_sexp_grammar :
  'a Sexplib0.Sexp_grammar.t -> 'a t Sexplib0.Sexp_grammar.t
val mem : 'a t -> 'a -> equal:('a -> 'a -> bool) -> bool
val length : 'a t -> int
val is_empty : 'a t -> bool
val iter : 'a t -> f:('a -> unit) -> unit
val fold : 'a t -> init:'acc -> f:('acc -> 'a -> 'acc) -> 'acc
val fold_result :
  'a t ->
  init:'acc ->
  f:('acc -> 'a -> ('acc, 'e) Base__.Result.t) -> ('acc, 'e) Base__.Result.t
val fold_until :
  'a t ->
  init:'acc ->
  f:('acc -> 'a -> ('acc, 'final) Base__Container_intf.Continue_or_stop.t) ->
  finish:('acc -> 'final) -> 'final
val exists : 'a t -> f:('a -> bool) -> bool
val for_all : 'a t -> f:('a -> bool) -> bool
val count : 'a t -> f:('a -> bool) -> int
val sum :
  (module Base__Container_intf.Summable with type t = 'sum) ->
  'a t -> f:('a -> 'sum) -> 'sum
val find : 'a t -> f:('a -> bool) -> 'a option
val find_map : 'a t -> f:('a -> 'b option) -> 'b option
val to_list : 'a t -> 'a list
val to_array : 'a t -> 'a array
val min_elt : 'a t -> compare:('a -> 'a -> int) -> 'a option
val max_elt : 'a t -> compare:('a -> 'a -> int) -> 'a option
val foldi : ('a t, 'a, 'b) Base__Indexed_container_intf.foldi
val iteri : ('a t, 'a) Base__Indexed_container_intf.iteri
val existsi : 'a t -> f:(int -> 'a -> bool) -> bool
val for_alli : 'a t -> f:(int -> 'a -> bool) -> bool
val counti : 'a t -> f:(int -> 'a -> bool) -> int
val findi : 'a t -> f:(int -> 'a -> bool) -> (int * 'a) option
val find_mapi : 'a t -> f:(int -> 'a -> 'b option) -> 'b option
val singleton : 'a -> 'a t
val of_list : 'a list -> 'a t
val of_array : 'a array -> 'a t
val init : int -> f:(int -> 'a) -> 'a t
val enqueue : 'a t -> 'a -> unit
val enqueue_all : 'a t -> 'a list -> unit
val dequeue : 'a t -> 'a option
val dequeue_exn : 'a t -> 'a
val dequeue_and_ignore_exn : 'a t -> unit
val peek : 'a t -> 'a option
val peek_exn : 'a t -> 'a
val clear : 'a t -> unit
val copy : 'a t -> 'a t
val map : 'a t -> f:('a -> 'b) -> 'b t
val mapi : 'a t -> f:(int -> 'a -> 'b) -> 'b t
val concat_map : 'a t -> f:('a -> 'b list) -> 'b t
val concat_mapi : 'a t -> f:(int -> 'a -> 'b list) -> 'b t
val filter_map : 'a t -> f:('a -> 'b option) -> 'b t
val filter_mapi : 'a t -> f:(int -> 'a -> 'b option) -> 'b t
val filter : 'a t -> f:('a -> bool) -> 'a t
val filteri : 'a t -> f:(int -> 'a -> bool) -> 'a t
val filter_inplace : 'a t -> f:('a -> bool) -> unit
val filteri_inplace : 'a t -> f:(int -> 'a -> bool) -> unit
val equal : 'a Base__Equal.equal -> 'a t Base__Equal.equal
val invariant : 'a Base__Invariant_intf.inv -> 'a t Base__Invariant_intf.inv
val create : ?capacity:int -> unit -> 'a t
val last : 'a t -> 'a option
val last_exn : 'a t -> 'a
val blit_transfer : src:'a t -> dst:'a t -> ?len:int -> unit -> unit
val get : 'a t -> int -> 'a
val set : 'a t -> int -> 'a -> unit
val capacity : 'a t -> int("DEBUG:rule", [Tag4 (("S", 1576), (((Tag1 ((Tag2 ("Base__Queue_intf")), "S"))), 0, (("src/queue_intf.ml", 95, 3371, 3373), ("src/queue_intf.ml", 95, 3371, 3390), 0), Tag1 ("Base__Queue_intf", 29)), 0); Tag1 (("t", 1577), ([((("a")), 100000000, 0, -400)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/queue_intf.ml", 97, 3392, 3394), ("src/queue_intf.ml", 97, 3392, 3431), 0), [(("deriving_inline", (("src/queue_intf.ml", 97, 3392, 3407), ("src/queue_intf.ml", 97, 3392, 3422), 0)), ([([(((("compare"), (("src/queue_intf.ml", 97, 3392, 3423), ("src/queue_intf.ml", 97, 3392, 3430), 0))), (("src/queue_intf.ml", 97, 3392, 3423), ("src/queue_intf.ml", 97, 3392, 3430), 0), 0, 0)], (("src/queue_intf.ml", 97, 3392, 3423), ("src/queue_intf.ml", 97, 3392, 3430), 0))]), (("src/queue_intf.ml", 97, 3392, 3404), ("src/queue_intf.ml", 97, 3392, 3431), 0))], 0, 0, Tag1 ("Base__Queue_intf", 30)), 1, 0); (("compare", 1578), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [((("a")), 100000000, 0, -398)], (0)), 100000000, 0, -399), (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -398)], (0)), 100000000, 0, -397)], (0)), 100000000, 0, -396), 0), 100000000, 0, -395), 0, (("src/queue_intf.ml", 99, 3433, 3443), ("src/queue_intf.ml", 99, 3433, 3495), 0), 0, Tag1 ("Base__Ppx_compare_lib", 8)), 0); (("t_of_sexp", 1579), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -394), ((("a")), 100000000, 0, -391), 0), 100000000, 0, -393), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -392), (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -391)], (0)), 100000000, 0, -390), 0), 100000000, 0, -389), 0), 100000000, 0, -388), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Sexplib0__Sexpable", 5)), 0); (("sexp_of_t", 1580), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -385), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -387), 0), 100000000, 0, -386), (Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -385)], (0)), 100000000, 0, -384), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -383), 0), 100000000, 0, -382), 0), 100000000, 0, -381), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Sexplib0__Sexpable", 6)), 0); (("t_sexp_grammar", 1581), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [((("a")), 100000000, 0, -379)], (0)), 100000000, 0, -380), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [(Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -379)], (0)), 100000000, 0, -378)], (0)), 100000000, 0, -377), 0), 100000000, 0, -376), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 3)), 0); (("mem", 1582), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -374)], (0)), 100000000, 0, -375), (Tag1 (0, ((("a")), 100000000, 0, -374), (Tag1 (("equal"), (Tag1 (0, ((("a")), 100000000, 0, -374), (Tag1 (0, ((("a")), 100000000, 0, -374), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -373), 0), 100000000, 0, -372), 0), 100000000, 0, -371), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -370), 0), 100000000, 0, -369), 0), 100000000, 0, -368), 0), 100000000, 0, -367), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Container_intf", 52)), 0); (("length", 1583), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -366)], (0)), 100000000, 0, -365), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -364), 0), 100000000, 0, -363), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Container_intf", 53)), 0); (("is_empty", 1584), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -362)], (0)), 100000000, 0, -361), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -360), 0), 100000000, 0, -359), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Container_intf", 54)), 0); (("iter", 1585), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -357)], (0)), 100000000, 0, -358), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -357), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -356), 0), 100000000, 0, -355), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -354), 0), 100000000, 0, -353), 0), 100000000, 0, -352), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Container_intf", 55)), 0); (("fold", 1586), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -350)], (0)), 100000000, 0, -351), (Tag1 (("init"), ((("acc")), 100000000, 0, -347), (Tag1 (("f"), (Tag1 (0, ((("acc")), 100000000, 0, -347), (Tag1 (0, ((("a")), 100000000, 0, -350), ((("acc")), 100000000, 0, -347), 0), 100000000, 0, -349), 0), 100000000, 0, -348), ((("acc")), 100000000, 0, -347), 0), 100000000, 0, -346), 0), 100000000, 0, -345), 0), 100000000, 0, -344), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Container_intf", 56)), 0); (("fold_result", 1587), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -342)], (0)), 100000000, 0, -343), (Tag1 (("init"), ((("acc")), 100000000, 0, -337), (Tag1 (("f"), (Tag1 (0, ((("acc")), 100000000, 0, -337), (Tag1 (0, ((("a")), 100000000, 0, -342), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Result"), "t"), [((("acc")), 100000000, 0, -337); ((("e")), 100000000, 0, -338)], (0)), 100000000, 0, -341), 0), 100000000, 0, -340), 0), 100000000, 0, -339), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Result"), "t"), [((("acc")), 100000000, 0, -337); ((("e")), 100000000, 0, -338)], (0)), 100000000, 0, -336), 0), 100000000, 0, -335), 0), 100000000, 0, -334), 0), 100000000, 0, -333), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Container_intf", 57)), 0); (("fold_until", 1588), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -331)], (0)), 100000000, 0, -332), (Tag1 (("init"), ((("acc")), 100000000, 0, -327), (Tag1 (("f"), (Tag1 (0, ((("acc")), 100000000, 0, -327), (Tag1 (0, ((("a")), 100000000, 0, -331), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__Container_intf")), "Continue_or_stop"), "t"), [((("acc")), 100000000, 0, -327); ((("final")), 100000000, 0, -325)], (0)), 100000000, 0, -330), 0), 100000000, 0, -329), 0), 100000000, 0, -328), (Tag1 (("finish"), (Tag1 (0, ((("acc")), 100000000, 0, -327), ((("final")), 100000000, 0, -325), 0), 100000000, 0, -326), ((("final")), 100000000, 0, -325), 0), 100000000, 0, -324), 0), 100000000, 0, -323), 0), 100000000, 0, -322), 0), 100000000, 0, -321), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Container_intf", 58)), 0); (("exists", 1589), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -319)], (0)), 100000000, 0, -320), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -319), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -318), 0), 100000000, 0, -317), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -316), 0), 100000000, 0, -315), 0), 100000000, 0, -314), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Container_intf", 59)), 0); (("for_all", 1590), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -312)], (0)), 100000000, 0, -313), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -312), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -311), 0), 100000000, 0, -310), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -309), 0), 100000000, 0, -308), 0), 100000000, 0, -307), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Container_intf", 60)), 0); (("count", 1591), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -305)], (0)), 100000000, 0, -306), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -305), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -304), 0), 100000000, 0, -303), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -302), 0), 100000000, 0, -301), 0), 100000000, 0, -300), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Container_intf", 61)), 0); (("sum", 1592), ((Tag1 (0, (Tag11 (Tag1 ((Tag2 ("Base__Container_intf")), "Summable"), [(("t"), ((("sum")), 100000000, 0, -295))]), 100000000, 0, -299), (Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -297)], (0)), 100000000, 0, -298), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -297), ((("sum")), 100000000, 0, -295), 0), 100000000, 0, -296), ((("sum")), 100000000, 0, -295), 0), 100000000, 0, -294), 0), 100000000, 0, -293), 0), 100000000, 0, -292), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Container_intf", 63)), 0); (("find", 1593), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -288)], (0)), 100000000, 0, -291), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -288), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -290), 0), 100000000, 0, -289), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -288)], (0)), 100000000, 0, -287), 0), 100000000, 0, -286), 0), 100000000, 0, -285), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Container_intf", 64)), 0); (("find_map", 1594), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -283)], (0)), 100000000, 0, -284), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -283), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -280)], (0)), 100000000, 0, -282), 0), 100000000, 0, -281), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -280)], (0)), 100000000, 0, -279), 0), 100000000, 0, -278), 0), 100000000, 0, -277), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Container_intf", 65)), 0); (("to_list", 1595), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -275)], (0)), 100000000, 0, -276), (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -275)], (0)), 100000000, 0, -274), 0), 100000000, 0, -273), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Container_intf", 66)), 0); (("to_array", 1596), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -271)], (0)), 100000000, 0, -272), (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -271)], (0)), 100000000, 0, -270), 0), 100000000, 0, -269), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Container_intf", 67)), 0); (("min_elt", 1597), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -264)], (0)), 100000000, 0, -268), (Tag1 (("compare"), (Tag1 (0, ((("a")), 100000000, 0, -264), (Tag1 (0, ((("a")), 100000000, 0, -264), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -267), 0), 100000000, 0, -266), 0), 100000000, 0, -265), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -264)], (0)), 100000000, 0, -263), 0), 100000000, 0, -262), 0), 100000000, 0, -261), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Container_intf", 68)), 0); (("max_elt", 1598), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -256)], (0)), 100000000, 0, -260), (Tag1 (("compare"), (Tag1 (0, ((("a")), 100000000, 0, -256), (Tag1 (0, ((("a")), 100000000, 0, -256), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -259), 0), 100000000, 0, -258), 0), 100000000, 0, -257), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -256)], (0)), 100000000, 0, -255), 0), 100000000, 0, -254), 0), 100000000, 0, -253), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Container_intf", 69)), 0); (("foldi", 1599), ((Tag3 (Tag1 ((Tag2 ("Base__Indexed_container_intf")), "foldi"), [(Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -251)], (0)), 100000000, 0, -250); ((("a")), 100000000, 0, -251); ((0), 100000000, 0, -252)], (0)), 100000000, 0, -249), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Indexed_container_intf", 11)), 0); (("iteri", 1600), ((Tag3 (Tag1 ((Tag2 ("Base__Indexed_container_intf")), "iteri"), [(Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -248)], (0)), 100000000, 0, -247); ((("a")), 100000000, 0, -248)], (0)), 100000000, 0, -246), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Indexed_container_intf", 12)), 0); (("existsi", 1601), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -243)], (0)), 100000000, 0, -245), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -244), (Tag1 (0, ((("a")), 100000000, 0, -243), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -242), 0), 100000000, 0, -241), 0), 100000000, 0, -240), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -239), 0), 100000000, 0, -238), 0), 100000000, 0, -237), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Indexed_container_intf", 13)), 0); (("for_alli", 1602), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -234)], (0)), 100000000, 0, -236), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -235), (Tag1 (0, ((("a")), 100000000, 0, -234), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -233), 0), 100000000, 0, -232), 0), 100000000, 0, -231), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -230), 0), 100000000, 0, -229), 0), 100000000, 0, -228), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Indexed_container_intf", 14)), 0); (("counti", 1603), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -225)], (0)), 100000000, 0, -227), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -226), (Tag1 (0, ((("a")), 100000000, 0, -225), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -224), 0), 100000000, 0, -223), 0), 100000000, 0, -222), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -221), 0), 100000000, 0, -220), 0), 100000000, 0, -219), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Indexed_container_intf", 15)), 0); (("findi", 1604), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -213)], (0)), 100000000, 0, -218), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -217), (Tag1 (0, ((("a")), 100000000, 0, -213), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -216), 0), 100000000, 0, -215), 0), 100000000, 0, -214), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -212); ((("a")), 100000000, 0, -213)]), 100000000, 0, -211)], (0)), 100000000, 0, -210), 0), 100000000, 0, -209), 0), 100000000, 0, -208), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Indexed_container_intf", 16)), 0); (("find_mapi", 1605), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -205)], (0)), 100000000, 0, -207), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -206), (Tag1 (0, ((("a")), 100000000, 0, -205), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -201)], (0)), 100000000, 0, -204), 0), 100000000, 0, -203), 0), 100000000, 0, -202), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -201)], (0)), 100000000, 0, -200), 0), 100000000, 0, -199), 0), 100000000, 0, -198), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Indexed_container_intf", 17)), 0); (("singleton", 1606), ((Tag1 (0, ((("a")), 100000000, 0, -197), (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -197)], (0)), 100000000, 0, -196), 0), 100000000, 0, -195), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 5)), 0); (("of_list", 1607), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -193)], (0)), 100000000, 0, -194), (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -193)], (0)), 100000000, 0, -192), 0), 100000000, 0, -191), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 6)), 0); (("of_array", 1608), ((Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -189)], (0)), 100000000, 0, -190), (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -189)], (0)), 100000000, 0, -188), 0), 100000000, 0, -187), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 7)), 0); (("init", 1609), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -186), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -185), ((("a")), 100000000, 0, -183), 0), 100000000, 0, -184), (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -183)], (0)), 100000000, 0, -182), 0), 100000000, 0, -181), 0), 100000000, 0, -180), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 8)), 0); (("enqueue", 1610), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -178)], (0)), 100000000, 0, -179), (Tag1 (0, ((("a")), 100000000, 0, -178), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -177), 0), 100000000, 0, -176), 0), 100000000, 0, -175), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 9)), 0); (("enqueue_all", 1611), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -173)], (0)), 100000000, 0, -174), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -173)], (0)), 100000000, 0, -172), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -171), 0), 100000000, 0, -170), 0), 100000000, 0, -169), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 10)), 0); (("dequeue", 1612), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -167)], (0)), 100000000, 0, -168), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -167)], (0)), 100000000, 0, -166), 0), 100000000, 0, -165), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 11)), 0); (("dequeue_exn", 1613), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -163)], (0)), 100000000, 0, -164), ((("a")), 100000000, 0, -163), 0), 100000000, 0, -162), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 12)), 0); (("dequeue_and_ignore_exn", 1614), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -161)], (0)), 100000000, 0, -160), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -159), 0), 100000000, 0, -158), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 13)), 0); (("peek", 1615), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -156)], (0)), 100000000, 0, -157), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -156)], (0)), 100000000, 0, -155), 0), 100000000, 0, -154), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 14)), 0); (("peek_exn", 1616), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -152)], (0)), 100000000, 0, -153), ((("a")), 100000000, 0, -152), 0), 100000000, 0, -151), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 15)), 0); (("clear", 1617), ((Tag1 (0, (Tag3 ((("t", 1577)), [((0), 100000000, 0, -150)], (0)), 100000000, 0, -149), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -148), 0), 100000000, 0, -147), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 16)), 0); (("copy", 1618), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -145)], (0)), 100000000, 0, -146), (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -145)], (0)), 100000000, 0, -144), 0), 100000000, 0, -143), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 17)), 0); (("map", 1619), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -141)], (0)), 100000000, 0, -142), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -141), ((("b")), 100000000, 0, -139), 0), 100000000, 0, -140), (Tag3 ((("t", 1577)), [((("b")), 100000000, 0, -139)], (0)), 100000000, 0, -138), 0), 100000000, 0, -137), 0), 100000000, 0, -136), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 18)), 0); (("mapi", 1620), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -133)], (0)), 100000000, 0, -135), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -134), (Tag1 (0, ((("a")), 100000000, 0, -133), ((("b")), 100000000, 0, -130), 0), 100000000, 0, -132), 0), 100000000, 0, -131), (Tag3 ((("t", 1577)), [((("b")), 100000000, 0, -130)], (0)), 100000000, 0, -129), 0), 100000000, 0, -128), 0), 100000000, 0, -127), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 19)), 0); (("concat_map", 1621), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -125)], (0)), 100000000, 0, -126), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -125), (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -122)], (0)), 100000000, 0, -124), 0), 100000000, 0, -123), (Tag3 ((("t", 1577)), [((("b")), 100000000, 0, -122)], (0)), 100000000, 0, -121), 0), 100000000, 0, -120), 0), 100000000, 0, -119), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 20)), 0); (("concat_mapi", 1622), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -116)], (0)), 100000000, 0, -118), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -117), (Tag1 (0, ((("a")), 100000000, 0, -116), (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -112)], (0)), 100000000, 0, -115), 0), 100000000, 0, -114), 0), 100000000, 0, -113), (Tag3 ((("t", 1577)), [((("b")), 100000000, 0, -112)], (0)), 100000000, 0, -111), 0), 100000000, 0, -110), 0), 100000000, 0, -109), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 21)), 0); (("filter_map", 1623), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -107)], (0)), 100000000, 0, -108), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -107), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -104)], (0)), 100000000, 0, -106), 0), 100000000, 0, -105), (Tag3 ((("t", 1577)), [((("b")), 100000000, 0, -104)], (0)), 100000000, 0, -103), 0), 100000000, 0, -102), 0), 100000000, 0, -101), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 22)), 0); (("filter_mapi", 1624), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -98)], (0)), 100000000, 0, -100), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -99), (Tag1 (0, ((("a")), 100000000, 0, -98), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -94)], (0)), 100000000, 0, -97), 0), 100000000, 0, -96), 0), 100000000, 0, -95), (Tag3 ((("t", 1577)), [((("b")), 100000000, 0, -94)], (0)), 100000000, 0, -93), 0), 100000000, 0, -92), 0), 100000000, 0, -91), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 23)), 0); (("filter", 1625), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -87)], (0)), 100000000, 0, -90), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -87), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -89), 0), 100000000, 0, -88), (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -87)], (0)), 100000000, 0, -86), 0), 100000000, 0, -85), 0), 100000000, 0, -84), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 24)), 0); (("filteri", 1626), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -78)], (0)), 100000000, 0, -83), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -82), (Tag1 (0, ((("a")), 100000000, 0, -78), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0), 100000000, 0, -79), (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -78)], (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0), 100000000, 0, -75), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 25)), 0); (("filter_inplace", 1627), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -73)], (0)), 100000000, 0, -74), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -73), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -72), 0), 100000000, 0, -71), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 26)), 0); (("filteri_inplace", 1628), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -65)], (0)), 100000000, 0, -67), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -66), (Tag1 (0, ((("a")), 100000000, 0, -65), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -64), 0), 100000000, 0, -63), 0), 100000000, 0, -62), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -61), 0), 100000000, 0, -60), 0), 100000000, 0, -59), 0, (("src/queue_intf.ml", 103, 3509, 3519), ("src/queue_intf.ml", 103, 3509, 3543), 0), 0, Tag1 ("Base__Queue_intf", 27)), 0); (("equal", 1629), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Equal")), "equal"), [((("a")), 100000000, 0, -57)], (0)), 100000000, 0, -58), (Tag3 (Tag1 ((Tag2 ("Base__Equal")), "equal"), [(Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -57)], (0)), 100000000, 0, -56)], (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0, (("src/queue_intf.ml", 104, 3544, 3554), ("src/queue_intf.ml", 104, 3544, 3585), 0), 0, Tag1 ("Base__Equal", 6)), 0); (("invariant", 1630), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Invariant_intf")), "inv"), [((("a")), 100000000, 0, -52)], (0)), 100000000, 0, -53), (Tag3 (Tag1 ((Tag2 ("Base__Invariant_intf")), "inv"), [(Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -52)], (0)), 100000000, 0, -51)], (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0, (("src/queue_intf.ml", 105, 3586, 3596), ("src/queue_intf.ml", 105, 3586, 3631), 0), 0, Tag1 ("Base__Invariant_intf", 6)), 0); (("create", 1631), ((Tag1 (Tag1 ("capacity"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -48)], (0)), 100000000, 0, -47), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -46), (Tag3 ((("t", 1577)), [((0), 100000000, 0, -45)], (0)), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("src/queue_intf.ml", 108, 3665, 3667), ("src/queue_intf.ml", 108, 3665, 3731), 0), 0, Tag1 ("Base__Queue_intf", 35)), 0); (("last", 1632), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -40)], (0)), 100000000, 0, -41), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -40)], (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("src/queue_intf.ml", 111, 3810, 3812), ("src/queue_intf.ml", 111, 3810, 3840), 0), 0, Tag1 ("Base__Queue_intf", 36)), 0); (("last_exn", 1633), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -36)], (0)), 100000000, 0, -37), ((("a")), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("src/queue_intf.ml", 113, 3842, 3844), ("src/queue_intf.ml", 113, 3842, 3869), 0), 0, Tag1 ("Base__Queue_intf", 37)), 0); (("blit_transfer", 1634), ((Tag1 (("src"), (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -33)], (0)), 100000000, 0, -34), (Tag1 (("dst"), (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -33)], (0)), 100000000, 0, -32), (Tag1 (Tag1 ("len"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -31)], (0)), 100000000, 0, -30), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -29), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("src/queue_intf.ml", 119, 4098, 4100), ("src/queue_intf.ml", 124, 4209, 4220), 0), 0, Tag1 ("Base__Queue_intf", 38)), 0); (("get", 1635), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -21)], (0)), 100000000, 0, -23), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -22), ((("a")), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("src/queue_intf.ml", 128, 4375, 4377), ("src/queue_intf.ml", 128, 4375, 4404), 0), 0, Tag1 ("Base__Queue_intf", 39)), 0); (("set", 1636), ((Tag1 (0, (Tag3 ((("t", 1577)), [((("a")), 100000000, 0, -16)], (0)), 100000000, 0, -18), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -17), (Tag1 (0, ((("a")), 100000000, 0, -16), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("src/queue_intf.ml", 130, 4406, 4408), ("src/queue_intf.ml", 130, 4406, 4443), 0), 0, Tag1 ("Base__Queue_intf", 40)), 0); (("capacity", 1637), ((Tag1 (0, (Tag3 ((("t", 1577)), [((0), 100000000, 0, -11)], (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("src/queue_intf.ml", 133, 4503, 4505), ("src/queue_intf.ml", 133, 4503, 4530), 0), 0, Tag1 ("Base__Queue_intf", 41)), 0); (("set_capacity", 1638), ((Tag1 (0, (Tag3 ((("t", 1577)), [((0), 100000000, 0, -7)], (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/queue_intf.ml", 139, 4837, 4839), ("src/queue_intf.ml", 139, 4837, 4876), 0), 0, Tag1 ("Base__Queue_intf", 42)), 0)], "Base__Queue", [("Base__Queue", ("H\202m\011\254\1772\171r\160\229\194\163T\162\132")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__StringLabels", ("\134F\024\226\216Is#\223\230\234\169Z\206Gc")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Printf", ("\215<\139]\021\142\224E\245m\198qc(W\229")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__MoreLabels", ("\248\232\248\254`<\230\241\161U\193U\1466J\238")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__ListLabels", ("*\194\012\191\020%\170\249m\002\180\178hk\205\220")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shadow_stdlib", ("\219zi\164\203\158e)\232\221\196\168\138x\142\018")); ("Sexplib0__Sexpable", ("\251${\207(\249/z\242\255\250^\141\156\210e")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv_error", ("kzv!\151~\198P\000\165\176d\007\251p\232")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Base_internalhash_types", ("0\148#2\226\223\018\135\173>!\020\237\017\255\149")); ("Base__Sys0", ("\206z\231\154s\\\136\2364\131\005\014\031\152m3")); ("Base__String0", ("\212\221L\220\245\255\162P\228\224\189\216\135H\149O")); ("Base__Source_code_position0", ("_\003P6\254\029\206\005\130\136\180\019\145\230\000M")); ("Base__Sexp", ("\154\187\171&\209=\153[\236\250!U\174`\190T")); ("Base__Result", ("\204|\215\173FMa\2511<&\215T\194$\228")); ("Base__Queue_intf", ("\203y\r\155\"\205 \230\241\235\190\210\195\232-?")); ("Base__Printf", ("\000\196c,\214\127\226\174\220\190\253z!\242\028\250")); ("Base__Ppx_hash_lib", ("\199\141\178\193\006\209L\007^\020(\131\224sn8")); ("Base__Ppx_compare_lib", ("\243\186~\233\228\199Ah\181.\223\004e\231\129S")); ("Base__Poly0", ("\230;\143\234\255.H\132KOe7\155\\\023f")); ("Base__Monad_intf", ("\208\203\163\152\184O\130?\012:\168\247}\018\253\155")); ("Base__Monad", ("!\244\168\2352=\137Lm\219\129K\216\199\145\\")); ("Base__Invariant_intf", ("\213\204\238\235\236[\198\145\028\2392\015\243\177S\249")); ("Base__Invariant", ("\135\153\136\\\129SD\228\202l\255\152\139\253\015\201")); ("Base__Int0", ("N\1310\012\227\254\000\255_\222!\018\016\003\1779")); ("Base__Indexed_container_intf", ("\179\2213\145j\\\136\tl2\240\006\188j$r")); ("Base__Indexed_container", ("\196\246\213\141\196d\130\002\232\162\144y\149\236\145\218")); ("Base__Import0", ("\156\129U\197Y[\\\153\017Ho\203\173\204\220\020")); ("Base__Import", ("\014\187\247\141\187\181\142g\176:s_,\181\219\209")); ("Base__Hash_intf", ("h\004P\218\1531G\127\212\208A\024\140\164iq")); ("Base__Hash", ("\206Rc\194\234{s3\248\165\024\162\203{\206\206")); ("Base__Globalize", ("<\243w~.\180\196t\159\193\174[\227\139\215G")); ("Base__Field", ("8In\234X\202\188G\186\208$\192\175\136\214v")); ("Base__Equal", ("\193\217Z\127he\141N\000\1447\030\236%\131\b")); ("Base__Either0", ("!9-\011n\2077eZ\212\031c\227\029\206\t")); ("Base__Container_intf", ("\170vo*\208\209\141\219\196\168\236l\016\246\012c")); ("Base__Container", ("\191|>_\153W\235M\180uKz\214w`q")); ("Base__Comparator", ("\002\135z7b\025&\207\t\188\239&U3R\167")); ("Base__Bool0", ("\177f\254p\023\143&\239\020\136\206\242~\018F\251")); ("Base__", ("p\252\007\139\128\163W\025+\0225\001\246|P\158"))], [(0)])

val set_capacity : 'a t -> int -> unit
