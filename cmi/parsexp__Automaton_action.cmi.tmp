val raise_error :
  ('a, 'b) Parsexp__.Automaton_state.t ->
  at_eof:bool -> Parsexp__.Parse_error.Private.Reason.t -> 'c
type context = Parsexp__.Automaton_state.Context.t = Sexp_comment | Sexp
val context : ('a, 'b) Parsexp__.Automaton_state.t -> context
val set_automaton_state : ('u, 's) Parsexp__.Automaton_state.t -> int -> unit
val advance : ('u, 's) Parsexp__.Automaton_state.t -> unit
val advance_eol : ('u, 's) Parsexp__.Automaton_state.t -> unit
val block_comment_depth : ('u, 's) Parsexp__.Automaton_state.t -> int
type ('u, 's) t = ('u, 's) Parsexp__.Automaton_state.t -> char -> 's -> 's
module Poly : sig type nonrec t = { f : 'u 's. ('u, 's) t; } [@@unboxed] end
module Epsilon :
  sig
    type ('u, 's) t = ('u, 's) Parsexp__.Automaton_state.t -> 's -> 's
    module Poly :
      sig type nonrec t = { f : 'u 's. ('u, 's) t; } [@@unboxed] end
  end
val add_atom_char : ('a, 'b) t
val add_quoted_atom_char : ('a, 'b) t
val add_escaped : ('a, 'b) t
val add_dec_escape_char : ('a, 'b) t
val add_last_dec_escape_char : ('a, 'b) t
val comment_add_last_dec_escape_char : ('a, 'b) t
val add_hex_escape_char : ('a, 'b) t
val add_last_hex_escape_char : ('a, 'b) t
val start_sexp_comment : ('a, 'b) t
val add_first_char : ('a, 'b) t
val start_quoted_string : ('a, 'b) t
val add_token_char : ('a, 'b) t
val opening : ('a, 'b) t
val closing : ('a, 'b) t
val push_quoted_atom : ('a, 'b) t
val start_block_comment : ('a, 'b) t
val end_block_comment : ('a, 'b) t
val start_line_comment : ('a, 'b) t
val end_line_comment : ('a, 'b) Epsilon.t
val eps_push_atom : ('a, 'b) Epsilon.t
val eps_add_first_char_hash : ('a, 'b) Epsilon.t
val eps_eoi_check : ('a, 'b) Epsilon.t
("DEBUG:rule", [(("raise_error", 457), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_state"), "t"), [((0), 100000000, 0, -113); ((0), 100000000, 0, -114)], (0)), 100000000, 0, -112), (Tag1 (("at_eof"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -111), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Parse_error"), "Private"), "Reason"), "t"), 0, (0)), 100000000, 0, -110), ((0), 100000000, 0, -109), 0), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), 0, (("src/automaton_action.mli", 5, 96, 96), ("src/automaton_action.mli", 5, 96, 185), 0), 0, Tag1 ("Parsexp__Automaton_action", 0)), 0); Tag1 (("context", 458), (0, 0, Tag1 ([(("Sexp_comment", 407), (0), 0, (("src/automaton_action.mli", 8, 230, 232), ("src/automaton_action.mli", 8, 230, 246), 0), 0, Tag1 ("Parsexp__Automaton_action", 2)); (("Sexp", 408), (0), 0, (("src/automaton_action.mli", 9, 247, 249), ("src/automaton_action.mli", 9, 247, 255), 0), 0, Tag1 ("Parsexp__Automaton_action", 3))], 0), 1, ((Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_state"), "Context"), "t"), 0, (0)), 100000000, 0, -105)), 0, 0, 0, 0, (("src/automaton_action.mli", 7, 187, 187), ("src/automaton_action.mli", 9, 247, 255), 0), 0, 1, 0, Tag1 ("Parsexp__Automaton_action", 1)), 1, 0); (("context", 459), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_state"), "t"), [((0), 100000000, 0, -103); ((0), 100000000, 0, -104)], (0)), 100000000, 0, -102), (Tag3 ((("context", 458)), 0, (0)), 100000000, 0, -101), 0), 100000000, 0, -100), 0, (("src/automaton_action.mli", 11, 257, 257), ("src/automaton_action.mli", 11, 257, 301), 0), 0, Tag1 ("Parsexp__Automaton_action", 4)), 0); (("set_automaton_state", 460), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_state"), "t"), [((("u")), 100000000, 0, -98); ((("s")), 100000000, 0, -99)], (0)), 100000000, 0, -97), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -96), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -95), 0), 100000000, 0, -94), 0), 100000000, 0, -93), 0, (("src/automaton_action.mli", 12, 302, 302), ("src/automaton_action.mli", 12, 302, 369), 0), 0, Tag1 ("Parsexp__Automaton_action", 5)), 0); (("advance", 461), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_state"), "t"), [((("u")), 100000000, 0, -91); ((("s")), 100000000, 0, -92)], (0)), 100000000, 0, -90), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -89), 0), 100000000, 0, -88), 0, (("src/automaton_action.mli", 16, 468, 468), ("src/automaton_action.mli", 16, 468, 516), 0), 0, Tag1 ("Parsexp__Automaton_action", 6)), 0); (("advance_eol", 462), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_state"), "t"), [((("u")), 100000000, 0, -86); ((("s")), 100000000, 0, -87)], (0)), 100000000, 0, -85), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -84), 0), 100000000, 0, -83), 0, (("src/automaton_action.mli", 18, 518, 518), ("src/automaton_action.mli", 18, 518, 570), 0), 0, Tag1 ("Parsexp__Automaton_action", 7)), 0); (("block_comment_depth", 463), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_state"), "t"), [((("u")), 100000000, 0, -81); ((("s")), 100000000, 0, -82)], (0)), 100000000, 0, -80), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -79), 0), 100000000, 0, -78), 0, (("src/automaton_action.mli", 21, 599, 599), ("src/automaton_action.mli", 21, 599, 658), 0), 0, Tag1 ("Parsexp__Automaton_action", 8)), 0); Tag1 (("t", 464), ([((("u")), 100000000, 0, -77); ((("s")), 100000000, 0, -74)], 2, 0, 1, ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_state"), "t"), [((("u")), 100000000, 0, -77); ((("s")), 100000000, 0, -74)], (0)), 100000000, 0, -76), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -75), (Tag1 (0, ((("s")), 100000000, 0, -74), ((("s")), 100000000, 0, -74), 0), 100000000, 0, -73), 0), 100000000, 0, -72), 0), 100000000, 0, -71)), [63; 63], [0; 0], 0, 0, (("src/automaton_action.mli", 23, 660, 660), ("src/automaton_action.mli", 23, 660, 724), 0), 0, 0, 0, Tag1 ("Parsexp__Automaton_action", 9)), 1, 0); Tag3 (("Poly", 465), 0, (Tag1 ([Tag1 (("t", 490), (0, 0, ([(("f", 426), 0, (Tag10 ((Tag3 ((("t", 464)), [(Tag9 (("u")), 100000000, 0, -116); (Tag9 (("s")), 100000000, 0, -117)], (0)), 100000000, 0, -118), [(Tag9 (("u")), 100000000, 0, -116); (Tag9 (("s")), 100000000, 0, -117)]), 100000000, 0, -115), (("src/automaton_action.mli", 26, 744, 764), ("src/automaton_action.mli", 26, 744, 785), 0), 0, Tag1 ("Parsexp__Automaton_action", 11))], (0)), 1, 0, 0, 0, 0, 0, (("src/automaton_action.mli", 26, 744, 746), ("src/automaton_action.mli", 26, 744, 799), 0), [(("unboxed", (("src/automaton_action.mli", 26, 744, 791), ("src/automaton_action.mli", 26, 744, 798), 0)), (0), (("src/automaton_action.mli", 26, 744, 788), ("src/automaton_action.mli", 26, 744, 799), 0))], 0, 0, Tag1 ("Parsexp__Automaton_action", 10)), 0, 0)]), 0, (("src/automaton_action.mli", 25, 726, 726), ("src/automaton_action.mli", 27, 800, 803), 0), Tag1 ("Parsexp__Automaton_action", 12)), 0, 0); Tag3 (("Epsilon", 466), 0, (Tag1 ([Tag1 (("t", 491), ([((("u")), 100000000, 0, -123); ((("s")), 100000000, 0, -121)], 2, 0, 1, ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Automaton_state"), "t"), [((("u")), 100000000, 0, -123); ((("s")), 100000000, 0, -121)], (0)), 100000000, 0, -122), (Tag1 (0, ((("s")), 100000000, 0, -121), ((("s")), 100000000, 0, -121), 0), 100000000, 0, -120), 0), 100000000, 0, -119)), [63; 63], [0; 0], 0, 0, (("src/automaton_action.mli", 30, 826, 828), ("src/automaton_action.mli", 30, 826, 884), 0), 0, 0, 0, Tag1 ("Parsexp__Automaton_action", 13)), 1, 0); Tag3 (("Poly", 492), 0, (Tag1 ([Tag1 (("t", 493), (0, 0, ([(("f", 430), 0, (Tag10 ((Tag3 ((("t", 491)), [(Tag9 (("u")), 100000000, 0, -125); (Tag9 (("s")), 100000000, 0, -126)], (0)), 100000000, 0, -127), [(Tag9 (("u")), 100000000, 0, -125); (Tag9 (("s")), 100000000, 0, -126)]), 100000000, 0, -124), (("src/automaton_action.mli", 33, 906, 928), ("src/automaton_action.mli", 33, 906, 949), 0), 0, Tag1 ("Parsexp__Automaton_action", 15))], (0)), 1, 0, 0, 0, 0, 0, (("src/automaton_action.mli", 33, 906, 910), ("src/automaton_action.mli", 33, 906, 963), 0), [(("unboxed", (("src/automaton_action.mli", 33, 906, 955), ("src/automaton_action.mli", 33, 906, 962), 0)), (0), (("src/automaton_action.mli", 33, 906, 952), ("src/automaton_action.mli", 33, 906, 963), 0))], 0, 0, Tag1 ("Parsexp__Automaton_action", 14)), 0, 0)]), 0, (("src/automaton_action.mli", 32, 886, 888), ("src/automaton_action.mli", 34, 964, 969), 0), Tag1 ("Parsexp__Automaton_action", 16)), 0, 0)]), 0, (("src/automaton_action.mli", 29, 805, 805), ("src/automaton_action.mli", 35, 970, 973), 0), Tag1 ("Parsexp__Automaton_action", 17)), 0, 0); (("add_atom_char", 467), ((Tag3 ((("t", 464)), [((0), 100000000, 0, -69); ((0), 100000000, 0, -70)], (0)), 100000000, 0, -68), 0, (("src/automaton_action.mli", 39, 1076, 1076), ("src/automaton_action.mli", 39, 1076, 1099), 0), 0, Tag1 ("Parsexp__Automaton_action", 18)), 0); (("add_quoted_atom_char", 468), ((Tag3 ((("t", 464)), [((0), 100000000, 0, -66); ((0), 100000000, 0, -67)], (0)), 100000000, 0, -65), 0, (("src/automaton_action.mli", 41, 1101, 1101), ("src/automaton_action.mli", 41, 1101, 1131), 0), 0, Tag1 ("Parsexp__Automaton_action", 19)), 0); (("add_escaped", 469), ((Tag3 ((("t", 464)), [((0), 100000000, 0, -63); ((0), 100000000, 0, -64)], (0)), 100000000, 0, -62), 0, (("src/automaton_action.mli", 44, 1215, 1215), ("src/automaton_action.mli", 44, 1215, 1236), 0), 0, Tag1 ("Parsexp__Automaton_action", 20)), 0); (("add_dec_escape_char", 470), ((Tag3 ((("t", 464)), [((0), 100000000, 0, -60); ((0), 100000000, 0, -61)], (0)), 100000000, 0, -59), 0, (("src/automaton_action.mli", 54, 1591, 1591), ("src/automaton_action.mli", 54, 1591, 1620), 0), 0, Tag1 ("Parsexp__Automaton_action", 21)), 0); (("add_last_dec_escape_char", 471), ((Tag3 ((("t", 464)), [((0), 100000000, 0, -57); ((0), 100000000, 0, -58)], (0)), 100000000, 0, -56), 0, (("src/automaton_action.mli", 56, 1622, 1622), ("src/automaton_action.mli", 56, 1622, 1656), 0), 0, Tag1 ("Parsexp__Automaton_action", 22)), 0); (("comment_add_last_dec_escape_char", 472), ((Tag3 ((("t", 464)), [((0), 100000000, 0, -54); ((0), 100000000, 0, -55)], (0)), 100000000, 0, -53), 0, (("src/automaton_action.mli", 59, 1738, 1738), ("src/automaton_action.mli", 59, 1738, 1780), 0), 0, Tag1 ("Parsexp__Automaton_action", 23)), 0); (("add_hex_escape_char", 473), ((Tag3 ((("t", 464)), [((0), 100000000, 0, -51); ((0), 100000000, 0, -52)], (0)), 100000000, 0, -50), 0, (("src/automaton_action.mli", 62, 1856, 1856), ("src/automaton_action.mli", 62, 1856, 1885), 0), 0, Tag1 ("Parsexp__Automaton_action", 24)), 0); (("add_last_hex_escape_char", 474), ((Tag3 ((("t", 464)), [((0), 100000000, 0, -48); ((0), 100000000, 0, -49)], (0)), 100000000, 0, -47), 0, (("src/automaton_action.mli", 64, 1887, 1887), ("src/automaton_action.mli", 64, 1887, 1921), 0), 0, Tag1 ("Parsexp__Automaton_action", 25)), 0); (("start_sexp_comment", 475), ((Tag3 ((("t", 464)), [((0), 100000000, 0, -45); ((0), 100000000, 0, -46)], (0)), 100000000, 0, -44), 0, (("src/automaton_action.mli", 67, 1964, 1964), ("src/automaton_action.mli", 67, 1964, 1992), 0), 0, Tag1 ("Parsexp__Automaton_action", 26)), 0); (("add_first_char", 476), ((Tag3 ((("t", 464)), [((0), 100000000, 0, -42); ((0), 100000000, 0, -43)], (0)), 100000000, 0, -41), 0, (("src/automaton_action.mli", 70, 2041, 2041), ("src/automaton_action.mli", 70, 2041, 2065), 0), 0, Tag1 ("Parsexp__Automaton_action", 27)), 0); (("start_quoted_string", 477), ((Tag3 ((("t", 464)), [((0), 100000000, 0, -39); ((0), 100000000, 0, -40)], (0)), 100000000, 0, -38), 0, (("src/automaton_action.mli", 72, 2067, 2067), ("src/automaton_action.mli", 72, 2067, 2096), 0), 0, Tag1 ("Parsexp__Automaton_action", 28)), 0); (("add_token_char", 478), ((Tag3 ((("t", 464)), [((0), 100000000, 0, -36); ((0), 100000000, 0, -37)], (0)), 100000000, 0, -35), 0, (("src/automaton_action.mli", 79, 2448, 2448), ("src/automaton_action.mli", 79, 2448, 2472), 0), 0, Tag1 ("Parsexp__Automaton_action", 29)), 0); (("opening", 479), ((Tag3 ((("t", 464)), [((0), 100000000, 0, -33); ((0), 100000000, 0, -34)], (0)), 100000000, 0, -32), 0, (("src/automaton_action.mli", 81, 2474, 2474), ("src/automaton_action.mli", 81, 2474, 2491), 0), 0, Tag1 ("Parsexp__Automaton_action", 30)), 0); (("closing", 480), ((Tag3 ((("t", 464)), [((0), 100000000, 0, -30); ((0), 100000000, 0, -31)], (0)), 100000000, 0, -29), 0, (("src/automaton_action.mli", 82, 2492, 2492), ("src/automaton_action.mli", 82, 2492, 2509), 0), 0, Tag1 ("Parsexp__Automaton_action", 31)), 0); (("push_quoted_atom", 481), ((Tag3 ((("t", 464)), [((0), 100000000, 0, -27); ((0), 100000000, 0, -28)], (0)), 100000000, 0, -26), 0, (("src/automaton_action.mli", 83, 2510, 2510), ("src/automaton_action.mli", 83, 2510, 2536), 0), 0, Tag1 ("Parsexp__Automaton_action", 32)), 0); (("start_block_comment", 482), ((Tag3 ((("t", 464)), [((0), 100000000, 0, -24); ((0), 100000000, 0, -25)], (0)), 100000000, 0, -23), 0, (("src/automaton_action.mli", 84, 2537, 2537), ("src/automaton_action.mli", 84, 2537, 2566), 0), 0, Tag1 ("Parsexp__Automaton_action", 33)), 0); (("end_block_comment", 483), ((Tag3 ((("t", 464)), [((0), 100000000, 0, -21); ((0), 100000000, 0, -22)], (0)), 100000000, 0, -20), 0, (("src/automaton_action.mli", 85, 2567, 2567), ("src/automaton_action.mli", 85, 2567, 2594), 0), 0, Tag1 ("Parsexp__Automaton_action", 34)), 0); (("start_line_comment", 484), ((Tag3 ((("t", 464)), [((0), 100000000, 0, -18); ((0), 100000000, 0, -19)], (0)), 100000000, 0, -17), 0, (("src/automaton_action.mli", 86, 2595, 2595), ("src/automaton_action.mli", 86, 2595, 2623), 0), 0, Tag1 ("Parsexp__Automaton_action", 35)), 0); (("end_line_comment", 485), ((Tag3 (Tag1 ((("Epsilon", 466)), "t"), [((0), 100000000, 0, -15); ((0), 100000000, 0, -16)], (0)), 100000000, 0, -14), 0, (("src/automaton_action.mli", 87, 2624, 2624), ("src/automaton_action.mli", 87, 2624, 2658), 0), 0, Tag1 ("Parsexp__Automaton_action", 36)), 0); (("eps_push_atom", 486), ((Tag3 (Tag1 ((("Epsilon", 466)), "t"), [((0), 100000000, 0, -12); ((0), 100000000, 0, -13)], (0)), 100000000, 0, -11), 0, (("src/automaton_action.mli", 88, 2659, 2659), ("src/automaton_action.mli", 88, 2659, 2690), 0), 0, Tag1 ("Parsexp__Automaton_action", 37)), 0); (("eps_add_first_char_hash", 487), ((Tag3 (Tag1 ((("Epsilon", 466)), "t"), [((0), 100000000, 0, -9); ((0), 100000000, 0, -10)], (0)), 100000000, 0, -8), 0, (("src/automaton_action.mli", 89, 2691, 2691), ("src/automaton_action.mli", 89, 2691, 2732), 0), 0, Tag1 ("Parsexp__Automaton_action", 38)), 0); (("eps_eoi_check", 488), ((Tag3 (Tag1 ((("Epsilon", 466)), "t"), [((0), 100000000, 0, -6); ((0), 100000000, 0, -7)], (0)), 100000000, 0, -5), 0, (("src/automaton_action.mli", 90, 2733, 2733), ("src/automaton_action.mli", 90, 2733, 2764), 0), 0, Tag1 ("Parsexp__Automaton_action", 39)), 0); (("eps_add_escaped_cr", 489), ((Tag3 (Tag1 ((("Epsilon", 466)), "t"), [((0), 100000000, 0, -3); ((0), 100000000, 0, -4)], (0)), 100000000, 0, -2), 0, (("src/automaton_action.mli", 91, 2765, 2765), ("src/automaton_action.mli", 91, 2765, 2801), 0), 0, Tag1 ("Parsexp__Automaton_action", 40)), 0)], "Parsexp__Automaton_action", [("Parsexp__Automaton_action", ("x&\138\169\213\200\133t\216\003w:)z\006\187")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("Parsexp__Positions", ("BE\135\222xW\224\233\184\004o\169\248\bH\230")); ("Parsexp__Parse_error_intf", ("\011\229\182\179W\161\176\160P\249\165\214ef\011\229")); ("Parsexp__Parse_error", ("*\031\166\142M\171\026\030\\K7\157Y\232\208\234")); ("Parsexp__Import", ("\017\029\157\225\239\135p*0\207\146\197\020\128\195!")); ("Parsexp__Cst", (")\228;6o~\227\000pRf\153\216\244sD")); ("Parsexp__Automaton_state_intf", ("\196\146]2\143u|+%\027\185v2\225\r\229")); ("Parsexp__Automaton_state", ("L#\030=\218R\022 \228<\188-\r\211\157_")); ("Parsexp__Automaton_stack_intf", ("\235\204\0296]\2449F\029\b:\006\217\162f\024")); ("Parsexp__Automaton_stack", ("\246/\135\251\031)\015r\003\237\254S$\181\243\201")); ("Parsexp__", ("\182\180\203\030\218\020\246\196\221\171_\030GE\171\192")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val eps_add_escaped_cr : ('a, 'b) Epsilon.t
