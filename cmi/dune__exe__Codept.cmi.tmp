val tool_name : string
val version : float
val stderr : Format.formatter
val std : Format.formatter
val io : Io.t
val out : Format.formatter("DEBUG:rule", [(("tool_name", 882), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10), 0, (("full/codept.ml", 3, 48, 52), ("full/codept.ml", 3, 48, 61), 0), 0, Tag1 ("Dune__exe__Codept", 0)), 0); (("version", 883), ((Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -9), 0, (("full/codept.ml", 4, 73, 77), ("full/codept.ml", 4, 73, 84), 0), 0, Tag1 ("Dune__exe__Codept", 1)), 0); (("stderr", 884), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -8), 0, (("full/codept.ml", 5, 92, 96), ("full/codept.ml", 5, 92, 102), 0), 0, Tag1 ("Dune__exe__Codept", 2)), 0); (("std", 885), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -7), 0, (("full/codept.ml", 6, 125, 129), ("full/codept.ml", 6, 125, 132), 0), 0, Tag1 ("Dune__exe__Codept", 3)), 0); (("io", 886), ((Tag3 (Tag1 ((Tag2 ("Io")), "t"), 0, (0)), 100000000, 0, -6), 0, (("full/codept.ml", 8, 157, 161), ("full/codept.ml", 8, 157, 163), 0), 0, Tag1 ("Dune__exe__Codept", 4)), 0); (("out", 887), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -5), 0, (("full/codept.ml", 9, 176, 180), ("full/codept.ml", 9, 176, 183), 0), 0, Tag1 ("Dune__exe__Codept", 5)), 0); (("main", 888), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("full/codept.ml", 10, 193, 197), ("full/codept.ml", 10, 193, 201), 0), 0, Tag1 ("Dune__exe__Codept", 6)), 0)], "Dune__exe__Codept", [("Dune__exe__Codept", ("\022{\240_F\248\019\253R\180\024@\197\166\253\255")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Unitname", ("\155n\201\211\249\229\028$\220J\172\018<\249\171\158")); ("Unit", ("\012`/\204$\176\199(O\017F\167@\231@\242")); ("Uloc", ("\172\208h 6@\178[\156\249\206\172%\133\167\239")); ("Transforms", ("\247\177\132M&\202\192\164\018Ng6Wu\007\018")); ("Syntaxerr", ("\219y W\156\199S\188\018+\196\144>\187\159f")); ("Support", ("YA;\029\006a\255\202R\137\181\133\184\209)\005")); ("Summary", ("\243\022s.\187>\205\012\161)\1369wh\247p")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Arg", ("\024%=\206\198p\149Y\007\004\216,&\254#\207")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stage", ("\224\018\196\1757\168\209wr\235\232\015z\144\206V")); ("Single", ("A\000\174q5n\160h\129\194r\159\149eo\020")); ("Schematic", ("\180\179\011\178\017I\241^\235\149h\161k\b\209\142")); ("Read", ("\252*\146t'\236>\158\170\160=\012nNp\144")); ("Profile", ("\201i\132?<qM\169\011\239@\142\202\182\023,")); ("Pp", ("\167zCQ\134\167\215\2517\247\158\219\250\223.\197")); ("Pkg", ("SneaP\023\210\210\240\218\128bA\te\239")); ("Paths", ("\000\152\242H\139l\222\245\245Ndb\202P^\175")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Parser", ("7'\1782\253\248\214\163]8\227\231&\145\183;")); ("Params", ("3\184\019g\146&\246\151\137\193\253aW\227Q\166")); ("Namespaced", ("%\208\253;3\161W$\236\1838K\195z\1493")); ("Name", ("4? \167\131n\184\000\214\031\017\027\153\002]^")); ("Module", ("2_s\200\188\137\247\158>\168\195\023\195\n\011V")); ("Modname", ("v\160\183\003\212\232\177\007\228-\002\145i\230\255\248")); ("Modes", ("\198\178\136\149\0065\031\168\150)\158\219C\172l\198")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Makefile", ("\213\228\147\183l\166wd\026\168 \246'\226\166y")); ("M2l", ("\208\241\201a\199\212\172v;\135t\185\027\196~\029")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Loc", ("ax\213\152\006\175?\212%\0014\238\021S\218=")); ("Lexer", ("d\166[g\003\193p\201\147\190pL\152^\136A")); ("Io", ("ON\202f?;1\160\1714{M;\140D\193")); ("Id", ("w\207`(\179n\181\161\155\252\243\195\006\139NO")); ("Format_tags", ("_\253\022#\247\182\213#*\189H\217\011?7\235")); ("Findlib", ("\011\234\164\220\235\189\218\r\022\216\002\196\250,\138/")); ("Fault", ("\232\144\144(K\139\181-h!\017\212@?\127\199")); ("Docstrings", ("\216\171\176\031*\203\162\186%\175\201qq\189\139U")); ("Deps", ("%\164\252&\165z\218\221\023\182\235\223+\147\145\195")); ("Compenv", ("L\003\028\t\255\192/\255\238\252kIP\239\174\174")); ("Common", ("\142K\127m\162\172Ac\028XFp(\185\181\007")); ("Clflags", ("\162v\193G\199E|\029\023{\b\243]B\144;")); ("CamlinternalMenhirLib", ("\171m\238\135\252\210\222v\200\202\178\241L\143\025\153")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216")); ("Args", ("\196-\226\153\020\146\233\nI\180Pu\020c_e")); ("Analysis", ("a\168c\169G\176+\007\240C\171\243\229\017\168\239"))], [(0)])

val main : unit -> unit
