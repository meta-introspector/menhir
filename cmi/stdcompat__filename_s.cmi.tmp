module type S =
  sig
    val null : string
    val quote_command :
      string ->
      ?stdin:string ->
      ?stdout:string -> ?stderr:string -> string list -> string
    val chop_suffix_opt : suffix:string -> string -> string option
    val extension : string -> string
    val remove_extension : string -> string
    val open_temp_file :
      ?mode:open_flag list ->
      ?perms:int ->
      ?temp_dir:string -> string -> string -> string * out_channel
    val get_temp_dir_name : unit -> string
    val set_temp_dir_name : string -> unit
    val dir_sep : string
    val temp_file : ?temp_dir:string -> string -> string -> string
    val current_dir_name : string
    val parent_dir_name : string
    val concat : string -> string -> string
    val is_relative : string -> bool
    val is_implicit : string -> bool
    val check_suffix : string -> string -> bool
    val chop_suffix : string -> string -> string
    val chop_extension : string -> string
    val basename : string -> string
    val dirname : string -> string
    val quote : string -> string("DEBUG:rule", [Tag4 (("S", 312), ((Tag1 ([(("null", 313), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -96), 0, (("stdcompat__filename_s.mli", 2, 20, 20), ("stdcompat__filename_s.mli", 2, 20, 37), 0), 0, Tag1 ("Stdcompat__filename_s", 0)), 0); (("quote_command", 314), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -95), (Tag1 (Tag1 ("stdin"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -94)], (0)), 100000000, 0, -93), (Tag1 (Tag1 ("stdout"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -92)], (0)), 100000000, 0, -91), (Tag1 (Tag1 ("stderr"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -90)], (0)), 100000000, 0, -89), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -88)], (0)), 100000000, 0, -87), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -86), 0), 100000000, 0, -85), 0), 100000000, 0, -84), 0), 100000000, 0, -83), 0), 100000000, 0, -82), 0), 100000000, 0, -81), 0, (("stdcompat__filename_s.mli", 5, 79, 79), ("stdcompat__filename_s.mli", 8, 132, 195), 0), 0, Tag1 ("Stdcompat__filename_s", 1)), 0); (("chop_suffix_opt", 315), ((Tag1 (("suffix"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -80), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -79), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -78)], (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0), 100000000, 0, -75), 0, (("stdcompat__filename_s.mli", 15, 352, 352), ("stdcompat__filename_s.mli", 15, 352, 414), 0), 0, Tag1 ("Stdcompat__filename_s", 2)), 0); (("extension", 316), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -74), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -73), 0), 100000000, 0, -72), 0, (("stdcompat__filename_s.mli", 19, 505, 505), ("stdcompat__filename_s.mli", 19, 505, 537), 0), 0, Tag1 ("Stdcompat__filename_s", 3)), 0); (("remove_extension", 317), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -71), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0, (("stdcompat__filename_s.mli", 22, 594, 594), ("stdcompat__filename_s.mli", 22, 594, 633), 0), 0, Tag1 ("Stdcompat__filename_s", 4)), 0); (("open_temp_file", 318), ((Tag1 (Tag1 ("mode"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Stdlib")), "open_flag"), 0, (0)), 100000000, 0, -68)], (0)), 100000000, 0, -67)], (0)), 100000000, 0, -66), (Tag1 (Tag1 ("perms"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -65)], (0)), 100000000, 0, -64), (Tag1 (Tag1 ("temp_dir"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -63)], (0)), 100000000, 0, -62), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -61), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -60), (Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -58); (Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -59)]), 100000000, 0, -57), 0), 100000000, 0, -56), 0), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0, (("stdcompat__filename_s.mli", 25, 697, 697), ("stdcompat__filename_s.mli", 28, 762, 830), 0), 0, Tag1 ("Stdcompat__filename_s", 5)), 0); (("get_temp_dir_name", 319), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -51), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0, (("stdcompat__filename_s.mli", 35, 1004, 1004), ("stdcompat__filename_s.mli", 35, 1004, 1042), 0), 0, Tag1 ("Stdcompat__filename_s", 6)), 0); (("set_temp_dir_name", 320), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -48), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("stdcompat__filename_s.mli", 38, 1105, 1105), ("stdcompat__filename_s.mli", 38, 1105, 1143), 0), 0, Tag1 ("Stdcompat__filename_s", 7)), 0); (("dir_sep", 321), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -45), 0, (("stdcompat__filename_s.mli", 41, 1206, 1206), ("stdcompat__filename_s.mli", 41, 1206, 1226), 0), 0, Tag1 ("Stdcompat__filename_s", 8)), 0); (("temp_file", 322), ((Tag1 (Tag1 ("temp_dir"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -44)], (0)), 100000000, 0, -43), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -42), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -41), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0), 100000000, 0, -37), 0, (("stdcompat__filename_s.mli", 44, 1271, 1271), ("stdcompat__filename_s.mli", 44, 1271, 1333), 0), 0, Tag1 ("Stdcompat__filename_s", 9)), 0); (("current_dir_name", 323), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -36), 0, (("stdcompat__filename_s.mli", 48, 1424, 1424), ("stdcompat__filename_s.mli", 48, 1424, 1453), 0), 0, Tag1 ("Stdcompat__filename_s", 10)), 0); (("parent_dir_name", 324), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -35), 0, (("stdcompat__filename_s.mli", 51, 1501, 1501), ("stdcompat__filename_s.mli", 51, 1501, 1529), 0), 0, Tag1 ("Stdcompat__filename_s", 11)), 0); (("concat", 325), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -34), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -33), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("stdcompat__filename_s.mli", 54, 1576, 1576), ("stdcompat__filename_s.mli", 54, 1576, 1615), 0), 0, Tag1 ("Stdcompat__filename_s", 12)), 0); (("is_relative", 326), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -29), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("stdcompat__filename_s.mli", 57, 1653, 1653), ("stdcompat__filename_s.mli", 57, 1653, 1685), 0), 0, Tag1 ("Stdcompat__filename_s", 13)), 0); (("is_implicit", 327), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -26), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("stdcompat__filename_s.mli", 60, 1728, 1728), ("stdcompat__filename_s.mli", 60, 1728, 1760), 0), 0, Tag1 ("Stdcompat__filename_s", 14)), 0); (("check_suffix", 328), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -23), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -22), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("stdcompat__filename_s.mli", 63, 1803, 1803), ("stdcompat__filename_s.mli", 63, 1803, 1846), 0), 0, Tag1 ("Stdcompat__filename_s", 15)), 0); (("chop_suffix", 329), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -18), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -17), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("stdcompat__filename_s.mli", 66, 1890, 1890), ("stdcompat__filename_s.mli", 66, 1890, 1934), 0), 0, Tag1 ("Stdcompat__filename_s", 16)), 0); (("chop_extension", 330), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -13), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("stdcompat__filename_s.mli", 69, 1977, 1977), ("stdcompat__filename_s.mli", 69, 1977, 2014), 0), 0, Tag1 ("Stdcompat__filename_s", 17)), 0); (("basename", 331), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("stdcompat__filename_s.mli", 72, 2060, 2060), ("stdcompat__filename_s.mli", 72, 2060, 2091), 0), 0, Tag1 ("Stdcompat__filename_s", 18)), 0); (("dirname", 332), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("stdcompat__filename_s.mli", 75, 2131, 2131), ("stdcompat__filename_s.mli", 75, 2131, 2161), 0), 0, Tag1 ("Stdcompat__filename_s", 19)), 0); (("quote", 333), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("stdcompat__filename_s.mli", 78, 2200, 2200), ("stdcompat__filename_s.mli", 78, 2200, 2228), 0), 0, Tag1 ("Stdcompat__filename_s", 20)), 0)])), 0, (("stdcompat__filename_s.mli", 1, 0, 0), ("stdcompat__filename_s.mli", 81, 2265, 2268), 0), Tag1 ("Stdcompat__filename_s", 21)), 0)], "Stdcompat__filename_s", [("Stdcompat__filename_s", ("G\018\253+\016\235\1284g\255\r.\193\026/\206")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

  end
