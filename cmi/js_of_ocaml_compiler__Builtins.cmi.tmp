module File :
  sig
    type t
    val name : t -> string
    val content : t -> string
    val fragments : t -> string option
    val create : name:string -> content:string -> t
  end
val find : string -> File.t option
val all : unit -> File.t list
val register :
  ("DEBUG:rule", [Tag3 (("File", 345), 0, (Tag1 ([Tag1 (("t", 349), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("compiler/lib/builtins.mli", 21, 885, 887), ("compiler/lib/builtins.mli", 21, 885, 893), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Builtins", 0)), 1, 0); (("name", 350), ((Tag1 (0, (Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -32), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("compiler/lib/builtins.mli", 23, 895, 897), ("compiler/lib/builtins.mli", 23, 895, 919), 0), 0, Tag1 ("Js_of_ocaml_compiler__Builtins", 1)), 0); (("content", 351), ((Tag1 (0, (Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -29), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("compiler/lib/builtins.mli", 25, 921, 923), ("compiler/lib/builtins.mli", 25, 921, 948), 0), 0, Tag1 ("Js_of_ocaml_compiler__Builtins", 2)), 0); (("fragments", 352), ((Tag1 (0, (Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -26), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -25)], (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("compiler/lib/builtins.mli", 27, 950, 952), ("compiler/lib/builtins.mli", 27, 950, 986), 0), 0, Tag1 ("Js_of_ocaml_compiler__Builtins", 3)), 0); (("create", 353), ((Tag1 (("name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -22), (Tag1 (("content"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -21), (Tag3 ((("t", 349)), 0, (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("compiler/lib/builtins.mli", 29, 988, 990), ("compiler/lib/builtins.mli", 29, 988, 1037), 0), 0, Tag1 ("Js_of_ocaml_compiler__Builtins", 4)), 0)]), 0, (("compiler/lib/builtins.mli", 20, 867, 867), ("compiler/lib/builtins.mli", 30, 1038, 1041), 0), Tag1 ("Js_of_ocaml_compiler__Builtins", 5)), 0, 0); (("find", 346), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -17), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("File", 345)), "t"), 0, (0)), 100000000, 0, -16)], (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("compiler/lib/builtins.mli", 32, 1043, 1043), ("compiler/lib/builtins.mli", 32, 1043, 1077), 0), 0, Tag1 ("Js_of_ocaml_compiler__Builtins", 6)), 0); (("all", 347), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -13), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("File", 345)), "t"), 0, (0)), 100000000, 0, -12)], (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("compiler/lib/builtins.mli", 34, 1079, 1079), ("compiler/lib/builtins.mli", 34, 1079, 1108), 0), 0, Tag1 ("Js_of_ocaml_compiler__Builtins", 7)), 0); (("register", 348), ((Tag1 (("name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9), (Tag1 (("content"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8), (Tag1 (("fragments"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7)], (0)), 100000000, 0, -6), (Tag3 (Tag1 ((("File", 345)), "t"), 0, (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("compiler/lib/builtins.mli", 36, 1110, 1110), ("compiler/lib/builtins.mli", 36, 1110, 1191), 0), 0, Tag1 ("Js_of_ocaml_compiler__Builtins", 8)), 0)], "Js_of_ocaml_compiler__Builtins", [("Js_of_ocaml_compiler__Builtins", ("h\236\000\018\144\217C\235\189\141M[f\159\196\r")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Js_of_ocaml_compiler", ("\140\150\022\231\129$!^\139\156\170\236r\184~q")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
name:string -> content:string -> fragments:string option -> File.t
