module Certificate = Micromega_plugin__Certificate
module Coq_micromega = Micromega_plugin__Coq_micromega
module G_micromega = Micromega_plugin__G_micromega
module Itv = Micromega_plugin__Itv
module Linsolve = Micromega_plugin__Linsolve
module Micromega = Micromega_plugin__Micromega
module Mutils = Micromega_plugin__Mutils
module NumCompat = Micromega_plugin__NumCompat
module Persistent_cache = Micromega_plugin__Persistent_cache
module Polynomial = Micromega_plugin__Polynomial
module Simplex = Micromega_plugin__Simplex
module Sos = Micromega_plugin__Sos
module Sos_lib = Micromega_plugin__Sos_lib
module Sos_types = Micromega_plugin__Sos_types
("DEBUG:rule", [Tag3 (("Certificate", 19), 1, (Tag3 ((Tag2 ("Micromega_plugin__Certificate"))), 0, (("plugins/micromega/micromega_plugin.ml-gen", 4, 72, 72), ("plugins/micromega/micromega_plugin.ml-gen", 4, 72, 122), 0), Tag1 ("Micromega_plugin", 0)), 0, 0); Tag3 (("Coq_micromega", 20), 1, (Tag3 ((Tag2 ("Micromega_plugin__Coq_micromega"))), 0, (("plugins/micromega/micromega_plugin.ml-gen", 7, 173, 173), ("plugins/micromega/micromega_plugin.ml-gen", 7, 173, 227), 0), Tag1 ("Micromega_plugin", 1)), 0, 0); Tag3 (("G_micromega", 21), 1, (Tag3 ((Tag2 ("Micromega_plugin__G_micromega"))), 0, (("plugins/micromega/micromega_plugin.ml-gen", 10, 276, 276), ("plugins/micromega/micromega_plugin.ml-gen", 10, 276, 326), 0), Tag1 ("Micromega_plugin", 2)), 0, 0); Tag3 (("Itv", 22), 1, (Tag3 ((Tag2 ("Micromega_plugin__Itv"))), 0, (("plugins/micromega/micromega_plugin.ml-gen", 13, 367, 367), ("plugins/micromega/micromega_plugin.ml-gen", 13, 367, 401), 0), Tag1 ("Micromega_plugin", 3)), 0, 0); Tag3 (("Linsolve", 23), 1, (Tag3 ((Tag2 ("Micromega_plugin__Linsolve"))), 0, (("plugins/micromega/micromega_plugin.ml-gen", 16, 447, 447), ("plugins/micromega/micromega_plugin.ml-gen", 16, 447, 491), 0), Tag1 ("Micromega_plugin", 4)), 0, 0); Tag3 (("Micromega", 24), 1, (Tag3 ((Tag2 ("Micromega_plugin__Micromega"))), 0, (("plugins/micromega/micromega_plugin.ml-gen", 19, 538, 538), ("plugins/micromega/micromega_plugin.ml-gen", 19, 538, 584), 0), Tag1 ("Micromega_plugin", 5)), 0, 0); Tag3 (("Mutils", 25), 1, (Tag3 ((Tag2 ("Micromega_plugin__Mutils"))), 0, (("plugins/micromega/micromega_plugin.ml-gen", 22, 628, 628), ("plugins/micromega/micromega_plugin.ml-gen", 22, 628, 668), 0), Tag1 ("Micromega_plugin", 6)), 0, 0); Tag3 (("NumCompat", 26), 1, (Tag3 ((Tag2 ("Micromega_plugin__NumCompat"))), 0, (("plugins/micromega/micromega_plugin.ml-gen", 25, 715, 715), ("plugins/micromega/micromega_plugin.ml-gen", 25, 715, 761), 0), Tag1 ("Micromega_plugin", 7)), 0, 0); Tag3 (("Persistent_cache", 27), 1, (Tag3 ((Tag2 ("Micromega_plugin__Persistent_cache"))), 0, (("plugins/micromega/micromega_plugin.ml-gen", 28, 815, 815), ("plugins/micromega/micromega_plugin.ml-gen", 28, 815, 875), 0), Tag1 ("Micromega_plugin", 8)), 0, 0); Tag3 (("Polynomial", 28), 1, (Tag3 ((Tag2 ("Micromega_plugin__Polynomial"))), 0, (("plugins/micromega/micromega_plugin.ml-gen", 31, 923, 923), ("plugins/micromega/micromega_plugin.ml-gen", 31, 923, 971), 0), Tag1 ("Micromega_plugin", 9)), 0, 0); Tag3 (("Simplex", 29), 1, (Tag3 ((Tag2 ("Micromega_plugin__Simplex"))), 0, (("plugins/micromega/micromega_plugin.ml-gen", 34, 1016, 1016), ("plugins/micromega/micromega_plugin.ml-gen", 34, 1016, 1058), 0), Tag1 ("Micromega_plugin", 10)), 0, 0); Tag3 (("Sos", 30), 1, (Tag3 ((Tag2 ("Micromega_plugin__Sos"))), 0, (("plugins/micromega/micromega_plugin.ml-gen", 37, 1099, 1099), ("plugins/micromega/micromega_plugin.ml-gen", 37, 1099, 1133), 0), Tag1 ("Micromega_plugin", 11)), 0, 0); Tag3 (("Sos_lib", 31), 1, (Tag3 ((Tag2 ("Micromega_plugin__Sos_lib"))), 0, (("plugins/micromega/micromega_plugin.ml-gen", 40, 1178, 1178), ("plugins/micromega/micromega_plugin.ml-gen", 40, 1178, 1220), 0), Tag1 ("Micromega_plugin", 12)), 0, 0); Tag3 (("Sos_types", 32), 1, (Tag3 ((Tag2 ("Micromega_plugin__Sos_types"))), 0, (("plugins/micromega/micromega_plugin.ml-gen", 43, 1267, 1267), ("plugins/micromega/micromega_plugin.ml-gen", 43, 1267, 1313), 0), Tag1 ("Micromega_plugin", 13)), 0, 0); Tag3 (("Vect", 33), 1, (Tag3 ((Tag2 ("Micromega_plugin__Vect"))), 0, (("plugins/micromega/micromega_plugin.ml-gen", 46, 1355, 1355), ("plugins/micromega/micromega_plugin.ml-gen", 46, 1355, 1391), 0), Tag1 ("Micromega_plugin", 14)), 0, 0)], "Micromega_plugin", [("Micromega_plugin", ("-|C6\194\020\193\204\234h\242\238\191\214'\193")); ["Micromega_plugin__Vect"]; ["Micromega_plugin__Sos_types"]; ["Micromega_plugin__Sos_lib"]; ["Micromega_plugin__Sos"]; ["Micromega_plugin__Simplex"]; ["Micromega_plugin__Polynomial"]; ["Micromega_plugin__Persistent_cache"]; ["Micromega_plugin__NumCompat"]; ["Micromega_plugin__Mutils"]; ["Micromega_plugin__Micromega"]; ["Micromega_plugin__Linsolve"]; ["Micromega_plugin__Itv"]; ["Micromega_plugin__G_micromega"]; ["Micromega_plugin__Coq_micromega"]; ["Micromega_plugin__Certificate"]], [(0)])
module Vect = Micromega_plugin__Vect
