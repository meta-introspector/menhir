val xlra_Q : unit Proofview.tactic -> unit Proofview.tactic
val xlra_R : unit Proofview.tactic -> unit Proofview.tactic
val xlia : unit Proofview.tactic -> unit Proofview.tactic
val xnra_Q : unit Proofview.tactic -> unit Proofview.tactic
val xnra_R : unit Proofview.tactic -> unit Proofview.tactic
val xnia : unit Proofview.tactic -> unit Proofview.tactic
val xsos_Q : unit Proofview.tactic -> unit Proofview.tactic
val xsos_R : unit Proofview.tactic -> unit Proofview.tactic
val xsos_Z : unit Proofview.tactic -> unit Proofview.tactic
val xpsatz_Q : int -> unit Proofview.tactic -> unit Proofview.tactic
val xpsatz_R : int -> unit Proofview.tactic -> unit Proofview.tactic
val xpsatz_Z : int -> unit Proofview.tactic -> unit Proofview.tactic
val print_lia_profile : unit -> unit
val wlra_Q : Names.Id.t -> EConstr.t -> unit Proofview.tactic
val wlia : Names.Id.t -> EConstr.t -> unit Proofview.tactic
val wnra_Q : Names.Id.t -> EConstr.t -> unit Proofview.tactic
val wnia : Names.Id.t -> EConstr.t -> unit Proofview.tactic
val wsos_Q : Names.Id.t -> EConstr.t -> unit Proofview.tactic
val wsos_Z : Names.Id.t -> EConstr.t -> unit Proofview.tactic
val wpsatz_Q : int -> Names.Id.t -> EConstr.t -> unit Proofview.tactic
val wpsatz_Z : int -> Names.Id.t -> EConstr.t -> unit Proofview.tactic
("DEBUG:rule", [(("xlra_Q", 901), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -125)], (0)), 100000000, 0, -124), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -123)], (0)), 100000000, 0, -122), 0), 100000000, 0, -121), 0, (("plugins/micromega/coq_micromega.mli", 11, 676, 676), ("plugins/micromega/coq_micromega.mli", 11, 676, 735), 0), 0, Tag1 ("Micromega_plugin__Coq_micromega", 0)), 0); (("xlra_R", 902), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -120)], (0)), 100000000, 0, -119), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -118)], (0)), 100000000, 0, -117), 0), 100000000, 0, -116), 0, (("plugins/micromega/coq_micromega.mli", 12, 736, 736), ("plugins/micromega/coq_micromega.mli", 12, 736, 795), 0), 0, Tag1 ("Micromega_plugin__Coq_micromega", 1)), 0); (("xlia", 903), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -115)], (0)), 100000000, 0, -114), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -113)], (0)), 100000000, 0, -112), 0), 100000000, 0, -111), 0, (("plugins/micromega/coq_micromega.mli", 13, 796, 796), ("plugins/micromega/coq_micromega.mli", 13, 796, 853), 0), 0, Tag1 ("Micromega_plugin__Coq_micromega", 2)), 0); (("xnra_Q", 904), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -110)], (0)), 100000000, 0, -109), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -108)], (0)), 100000000, 0, -107), 0), 100000000, 0, -106), 0, (("plugins/micromega/coq_micromega.mli", 14, 854, 854), ("plugins/micromega/coq_micromega.mli", 14, 854, 913), 0), 0, Tag1 ("Micromega_plugin__Coq_micromega", 3)), 0); (("xnra_R", 905), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -105)], (0)), 100000000, 0, -104), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -103)], (0)), 100000000, 0, -102), 0), 100000000, 0, -101), 0, (("plugins/micromega/coq_micromega.mli", 15, 914, 914), ("plugins/micromega/coq_micromega.mli", 15, 914, 973), 0), 0, Tag1 ("Micromega_plugin__Coq_micromega", 4)), 0); (("xnia", 906), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -100)], (0)), 100000000, 0, -99), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -98)], (0)), 100000000, 0, -97), 0), 100000000, 0, -96), 0, (("plugins/micromega/coq_micromega.mli", 16, 974, 974), ("plugins/micromega/coq_micromega.mli", 16, 974, 1031), 0), 0, Tag1 ("Micromega_plugin__Coq_micromega", 5)), 0); (("xsos_Q", 907), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -95)], (0)), 100000000, 0, -94), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -93)], (0)), 100000000, 0, -92), 0), 100000000, 0, -91), 0, (("plugins/micromega/coq_micromega.mli", 17, 1032, 1032), ("plugins/micromega/coq_micromega.mli", 17, 1032, 1091), 0), 0, Tag1 ("Micromega_plugin__Coq_micromega", 6)), 0); (("xsos_R", 908), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -90)], (0)), 100000000, 0, -89), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -88)], (0)), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("plugins/micromega/coq_micromega.mli", 18, 1092, 1092), ("plugins/micromega/coq_micromega.mli", 18, 1092, 1151), 0), 0, Tag1 ("Micromega_plugin__Coq_micromega", 7)), 0); (("xsos_Z", 909), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -85)], (0)), 100000000, 0, -84), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -83)], (0)), 100000000, 0, -82), 0), 100000000, 0, -81), 0, (("plugins/micromega/coq_micromega.mli", 19, 1152, 1152), ("plugins/micromega/coq_micromega.mli", 19, 1152, 1211), 0), 0, Tag1 ("Micromega_plugin__Coq_micromega", 8)), 0); (("xpsatz_Q", 910), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -80), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -79)], (0)), 100000000, 0, -78), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -77)], (0)), 100000000, 0, -76), 0), 100000000, 0, -75), 0), 100000000, 0, -74), 0, (("plugins/micromega/coq_micromega.mli", 20, 1212, 1212), ("plugins/micromega/coq_micromega.mli", 20, 1212, 1280), 0), 0, Tag1 ("Micromega_plugin__Coq_micromega", 9)), 0); (("xpsatz_R", 911), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -73), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -72)], (0)), 100000000, 0, -71), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -70)], (0)), 100000000, 0, -69), 0), 100000000, 0, -68), 0), 100000000, 0, -67), 0, (("plugins/micromega/coq_micromega.mli", 21, 1281, 1281), ("plugins/micromega/coq_micromega.mli", 21, 1281, 1349), 0), 0, Tag1 ("Micromega_plugin__Coq_micromega", 10)), 0); (("xpsatz_Z", 912), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -66), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -65)], (0)), 100000000, 0, -64), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -63)], (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("plugins/micromega/coq_micromega.mli", 22, 1350, 1350), ("plugins/micromega/coq_micromega.mli", 22, 1350, 1418), 0), 0, Tag1 ("Micromega_plugin__Coq_micromega", 11)), 0); (("print_lia_profile", 913), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -59), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0, (("plugins/micromega/coq_micromega.mli", 23, 1419, 1419), ("plugins/micromega/coq_micromega.mli", 23, 1419, 1455), 0), 0, Tag1 ("Micromega_plugin__Coq_micromega", 12)), 0); (("wlra_Q", 914), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -56), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "t"), 0, (0)), 100000000, 0, -55), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -54)], (0)), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("plugins/micromega/coq_micromega.mli", 29, 1655, 1655), ("plugins/micromega/coq_micromega.mli", 29, 1655, 1716), 0), 0, Tag1 ("Micromega_plugin__Coq_micromega", 13)), 0); (("wlia", 915), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "t"), 0, (0)), 100000000, 0, -49), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -48)], (0)), 100000000, 0, -47), 0), 100000000, 0, -46), 0), 100000000, 0, -45), 0, (("plugins/micromega/coq_micromega.mli", 33, 1863, 1863), ("plugins/micromega/coq_micromega.mli", 33, 1863, 1922), 0), 0, Tag1 ("Micromega_plugin__Coq_micromega", 14)), 0); (("wnra_Q", 916), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -44), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "t"), 0, (0)), 100000000, 0, -43), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -42)], (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("plugins/micromega/coq_micromega.mli", 37, 2058, 2058), ("plugins/micromega/coq_micromega.mli", 37, 2058, 2119), 0), 0, Tag1 ("Micromega_plugin__Coq_micromega", 15)), 0); (("wnia", 917), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -38), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "t"), 0, (0)), 100000000, 0, -37), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -36)], (0)), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0, (("plugins/micromega/coq_micromega.mli", 41, 2266, 2266), ("plugins/micromega/coq_micromega.mli", 41, 2266, 2325), 0), 0, Tag1 ("Micromega_plugin__Coq_micromega", 16)), 0); (("wsos_Q", 918), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -32), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "t"), 0, (0)), 100000000, 0, -31), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -30)], (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("plugins/micromega/coq_micromega.mli", 45, 2461, 2461), ("plugins/micromega/coq_micromega.mli", 45, 2461, 2522), 0), 0, Tag1 ("Micromega_plugin__Coq_micromega", 17)), 0); (("wsos_Z", 919), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -26), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "t"), 0, (0)), 100000000, 0, -25), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -24)], (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("plugins/micromega/coq_micromega.mli", 49, 2671, 2671), ("plugins/micromega/coq_micromega.mli", 49, 2671, 2732), 0), 0, Tag1 ("Micromega_plugin__Coq_micromega", 18)), 0); (("wpsatz_Q", 920), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -20), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -19), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "t"), 0, (0)), 100000000, 0, -18), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -17)], (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("plugins/micromega/coq_micromega.mli", 53, 2872, 2872), ("plugins/micromega/coq_micromega.mli", 53, 2872, 2942), 0), 0, Tag1 ("Micromega_plugin__Coq_micromega", 19)), 0); (("wpsatz_Z", 921), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -12), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -11), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "t"), 0, (0)), 100000000, 0, -10), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -9)], (0)), 100000000, 0, -8), 0), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("plugins/micromega/coq_micromega.mli", 57, 3095, 3095), ("plugins/micromega/coq_micromega.mli", 57, 3095, 3165), 0), 0, Tag1 ("Micromega_plugin__Coq_micromega", 20)), 0); (("dump_proof_term", 922), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Micromega_plugin")), "Micromega"), "zArithProof"), 0, (0)), 100000000, 0, -4), (Tag3 (Tag1 ((Tag2 ("EConstr")), "t"), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("plugins/micromega/coq_micromega.mli", 62, 3309, 3309), ("plugins/micromega/coq_micromega.mli", 62, 3309, 3365), 0), 0, Tag1 ("Micromega_plugin__Coq_micromega", 21)), 0)], "Micromega_plugin__Coq_micromega", [("Micromega_plugin__Coq_micromega", ("\245T\019|\017l\190\216\219\255\189#\140 \160T")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("UnivSubst", ("\190qu\031mc\130\181\003G]\132\"\219m)")); ("UnivProblem", ("6'\161\018\181\001.\253\000\141a6\171\1727\155")); ("UnivNames", ("%\151_\209%+JM$n\001\232\194n\178N")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UState", ("SD\203\215|\136\n\251\239\208\148\215C\n\167\005")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Store", ("/dT\252\145\179pq\216{\181\206\190K+U")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("Section", ("\245\207\b\021\142v=\155#w\246}\"4b\006")); ("Safe_typing", (")\250?\164\145\132\241\127\186\152h+\145\"\237l")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Proofview_monad", ("\218\196\189S\147\216\129\221\231\224v\228O\024*\239")); ("Proofview", ("\245\140U\027\236\199\199&\242\156\199YG\250tA")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("Nativevalues", ("8:\007\025e\226c,\001\171\146#l\210\171\152")); ("Nativelib", ("V\239\205Y1\147E:,\176\196Hy\1483|")); ("Nativecode", ("\190\185\255\006m\012\210\163\138Rz\247\15283\183")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Monad", ("\244\171T\157\194p\187\160\149\195{\132\222\020\253\148")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Micromega_plugin__Micromega", ("\144\132\00120\253\252S\131\160\152\240\207\228\014\024")); ("Micromega_plugin", ("-|C6\194\020\193\204\234h\242\238\191\214'\193")); ("Logic_monad", ("\130\157\160Q\163vQ\137\184\2242\209\128\024\220i")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hook", ("\183\194\223\003\155\169',\187\240a;E\b\1396")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Genlambda", ("\170}\024\241\141\222\136S\169\219\2212i\134KI")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evd", ("\211\205p\193\216\129r\006\239oN\142ar\196\175")); ("Evar_kinds", ("\023L\186\132\218}\254\221\185\198\220\200h\003{\021")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("EConstr", ("\201aW\156\157;N\004\201V\208\006L\166\211)")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conversion", ("\158\150&\195M\tv\127|\029\158RRK\211A")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CDebug", ("^4\210p7\239!3\138\138\213?\239`\250\157")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
val dump_proof_term : Micromega_plugin.Micromega.zArithProof -> EConstr.t
