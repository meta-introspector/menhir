module Mapper : sig type ('a, 'b) t = 'a -> 'b end
module Mappers :
  sig
    type ('a, 'b, 'positive, 'negative) item =
      ('a, 'b, 'positive, 'negative) Refl__Tools.SignedVector(Mapper).item =
        None : ('a, 'b, [ `Absent ], [ `Absent ]) item
      | P : ('a, 'b) Mapper.t -> ('a, 'b, 'c, [ `Absent ]) item
      | N : ('b, 'a) Mapper.t -> ('a, 'b, [ `Absent ], 'd) item
      | PN : (('a, 'b) Mapper.t * ('b, 'a) Mapper.t) -> ('a, 'b, 'e, 'f) item
    type ('a, 'b, 'positive, 'negative) t =
      ('a, 'b, 'positive, 'negative) Refl__Tools.SignedVector(Mapper).t =
        [] : (unit, unit, unit, unit) t
      | (::) : ('a, 'b, 'positive, 'negative) item *
          ('aa, 'bb, 'positive_tail, 'negative_tail) t -> ('a * 'aa,
                                                           'b * 'bb,
                                                           'positive *
                                                           'positive_tail,
                                                           'negative *
                                                           'negative_tail)
                                                          t
    val reverse_item :
      ('a, 'b, 'positive, 'negative) item ->
      ('b, 'a, 'negative, 'positive) item
    val pos : ('a, 'b, [ `Present ], 'negative) item -> ('a, 'b) Mapper.t
    val get :
      ('index, 'a, 'a_value, 'positive, 'direct) Refl__.Desc.variable ->
      ('index, 'b, 'b_value, 'positive, 'direct) Refl__.Desc.variable ->
      ('a, 'b, 'positive, 'negative) t -> ('a_value, 'b_value) Mapper.t
    val reverse :
      ('a, 'b, 'positive, 'negative) t -> ('b, 'a, 'negative, 'positive) t
    type ('a, 'b, 'positive, 'negative) symmetric_item =
      ('a, 'b, 'positive, 'negative)
      Refl__Tools.SignedVector(Mapper).symmetric_item =
        SNone : ('a, 'b, [ `Absent ], [ `Absent ]) symmetric_item
      | SPN :
          (('a, 'b) Mapper.t * ('b, 'a) Mapper.t) -> ('a, 'b, 'c, 'd)
                                                     symmetric_item
    type ('a, 'b, 'positive, 'negative) symmetric =
      ('a, 'b, 'positive, 'negative)
      Refl__Tools.SignedVector(Mapper).symmetric =
        [] : (unit, unit, unit, unit) symmetric
      | (::) : ('a, 'b, 'positive, 'negative) symmetric_item *
          ('aa, 'bb, 'positive_tail, 'negative_tail) symmetric -> ('a * 'aa,
                                                                   'b * 'bb,
                                                                   'positive *
                                                                   'positive_tail,
                                                                   'negative *
                                                                   'negative_tail)
                                                                  symmetric
    type ('a, 'b, 'sp, 'sn, 'ap, 'an) make_transfer =
      ('a, 'b, 'sp, 'sn, 'ap, 'an)
      Refl__Tools.SignedVector(Mapper).make_transfer =
        TNone : ('a, 'b, [ `Absent ], [ `Absent ], 'ap, 'an) make_transfer
      | TP :
          ('a, 'b, 'ap, 'an) t -> ('a, 'b, 'c, [ `Absent ], 'ap, 'an)
                                  make_transfer
      | TN :
          ('a, 'b, 'an, 'ap) t -> ('a, 'b, [ `Absent ], 'd, 'ap, 'an)
                                  make_transfer
      | TPN :
          ('a, 'b, 'an, 'ap) symmetric -> ('a, 'b, 'e, 'f, 'an, 'ap)
                                          make_transfer
    val reverse_of_symmetric :
      ('a, 'b, 'positive, 'negative) symmetric ->
      ('a, 'b, 'negative, 'positive) symmetric
    val p_of_symmetric : ('a, 'b, 'ap, 'an) symmetric -> ('a, 'b, 'ap, 'an) t
    val n_of_symmetric : ('a, 'b, 'ap, 'an) symmetric -> ('a, 'b, 'an, 'ap) t
    val make_transfer :
      ('p, 'n, 'sp, 'sn, 'ap, 'an) Refl__.Desc.transfer_matrix ->
      ('a, 'b, 'p, 'n) t -> ('a, 'b, 'sp, 'sn, 'ap, 'an) make_transfer
    type ('rec_group, 'a_kinds, 'b_kinds) make =
      ('rec_group, 'a_kinds, 'b_kinds) Refl__Tools.SignedVector(Mapper).make = {
      f :
        'a 'b 'structure 'a_arity 'b_arity 'ap 'an 'ad 'gadt.
          ('a, 'structure, 'a_arity, 'rec_group, 'a_kinds, 'ap, 'an, 'ad,
           'gadt)
          Refl__.Desc.desc ->
          ('b, 'structure, 'b_arity, 'rec_group, 'b_kinds, 'ap, 'an, 'ad,
           'gadt)
          Refl__.Desc.desc ->
          ('a_arity, 'b_arity, 'ap, 'an) t -> ('a, 'b) Mapper.t;
    }
    val make_transfer_vector :
      ('rec_group, 'a_kinds, 'a_kinds) make ->
      ('a_types, 'structures, 'a_arity, 'rec_group, 'a_kinds, 'arguments,
       'gadt)
      Refl__.Desc.vector ->
      ('b_types, 'structures, 'b_arity, 'rec_group, 'a_kinds, 'arguments,
       'gadt)
      Refl__.Desc.vector ->
      ('positive, 'negative, 'direct, 'subpositive, 'subnegative, 'subdirect,
       'arguments)
      Refl__.Desc.transfer ->
      ('a_arity, 'b_arity, 'positive, 'negative) t ->
      ('a_types, 'b_types, 'subpositive, 'subnegative) t
    val skip :
      ('positive, 'skip_positive) Refl__.Desc.skip_vector ->
      ('negative, 'skip_negative) Refl__.Desc.skip_vector ->
      ('a, 'b, 'positive, 'negative) t ->
      ('a, 'b, 'skip_positive, 'skip_negative) t
    val make :
      ('a, 'b, 'b) make ->
      ('c, 'd, 'e, 'a, 'b, 'f, 'g) Refl__.Desc.vector ->
      ('h, 'd, 'i, 'a, 'b, 'f, 'g) Refl__.Desc.vector ->
      ('j, 'k, 'l, 'm, 'n, 'o, 'f) Refl__.Desc.transfer_skip ->
      ('e, 'i, 'j, 'k) t -> ('c, 'h, 'm, 'n) t
  end
val map :
  ('a_struct, 'structure, 'a_arity, 'rec_group, 'kinds, 'positive, 'negative,
   'direct, 'gadt)
  Refl__.Desc.desc ->
  ('b_struct, 'structure, 'b_arity, 'rec_group, 'kinds, 'positive, 'negative,
   'direct, 'gadt)
  Refl__.Desc.desc ->
  ('a_arity, 'b_arity, 'positive, 'negative) Mappers.t ->
  ("DEBUG:rule", [Tag3 (("Mapper", 57709), 0, (Tag1 ([Tag1 (("t", 57712), ([((("a")), 100000000, 0, -22); ((("b")), 100000000, 0, -21)], 2, 0, 1, ((Tag1 (0, ((("a")), 100000000, 0, -22), ((("b")), 100000000, 0, -21), 0), 100000000, 0, -20)), [46; 25], [0; 0], 0, 0, (("runtime/map.ml", 6, 46, 48), ("runtime/map.ml", 6, 46, 74), 0), 0, 0, 0, Tag1 ("Refl__Map", 37)), 1, 0)]), 0, (("runtime/map.ml", 5, 23, 23), ("runtime/map.ml", 7, 75, 78), 0), Tag1 ("Refl__Map", 38)), 0, 0); Tag3 (("Mappers", 57710), 0, (Tag1 ([Tag1 (("item", 57713), ([((("a")), 100000000, 0, -293); ((("b")), 100000000, 0, -294); ((("positive")), 100000000, 0, -295); ((("negative")), 100000000, 0, -296)], 4, Tag1 ([(("None", 1668), (0), ((Tag3 ((("item", 57713)), [((("a")), 100000000, 0, -298); ((("b")), 100000000, 0, -299); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -301), 1, 0, 0)), 100000000, 0, -300); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -303), 1, 0, 0)), 100000000, 0, -302)], (0)), 100000000, 0, -297)), (("runtime/tools.ml", 571, 19185, 19189), ("runtime/tools.ml", 571, 19185, 19234), 0), 0, Tag1 ("Refl__Tools", 1935)); (("P", 1669), ([(Tag3 (Tag1 ((("Mapper", 57709)), "t"), [((("a")), 100000000, 0, -305); ((("b")), 100000000, 0, -306)], (0)), 100000000, 0, -310)]), ((Tag3 ((("item", 57713)), [((("a")), 100000000, 0, -305); ((("b")), 100000000, 0, -306); ((0), 100000000, 0, -307); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -309), 1, 0, 0)), 100000000, 0, -308)], (0)), 100000000, 0, -304)), (("runtime/tools.ml", 572, 19235, 19239), ("runtime/tools.ml", 572, 19235, 19288), 0), 0, Tag1 ("Refl__Tools", 1936)); (("N", 1670), ([(Tag3 (Tag1 ((("Mapper", 57709)), "t"), [((("b")), 100000000, 0, -313); ((("a")), 100000000, 0, -312)], (0)), 100000000, 0, -317)]), ((Tag3 ((("item", 57713)), [((("a")), 100000000, 0, -312); ((("b")), 100000000, 0, -313); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -315), 1, 0, 0)), 100000000, 0, -314); ((0), 100000000, 0, -316)], (0)), 100000000, 0, -311)), (("runtime/tools.ml", 573, 19289, 19293), ("runtime/tools.ml", 573, 19289, 19341), 0), 0, Tag1 ("Refl__Tools", 1937)); (("PN", 1671), ([(Tag2 ([(Tag3 (Tag1 ((("Mapper", 57709)), "t"), [((("a")), 100000000, 0, -319); ((("b")), 100000000, 0, -320)], (0)), 100000000, 0, -324); (Tag3 (Tag1 ((("Mapper", 57709)), "t"), [((("b")), 100000000, 0, -320); ((("a")), 100000000, 0, -319)], (0)), 100000000, 0, -325)]), 100000000, 0, -323)]), ((Tag3 ((("item", 57713)), [((("a")), 100000000, 0, -319); ((("b")), 100000000, 0, -320); ((0), 100000000, 0, -321); ((0), 100000000, 0, -322)], (0)), 100000000, 0, -318)), (("runtime/tools.ml", 574, 19342, 19346), ("runtime/tools.ml", 574, 19342, 19405), 0), 0, Tag1 ("Refl__Tools", 1938))], 0), 1, ((Tag3 (Tag1 (Tag2 (Tag1 ((Tag2 ("Refl__Tools")), "SignedVector"), (("Mapper", 57709))), "item"), [((("a")), 100000000, 0, -293); ((("b")), 100000000, 0, -294); ((("positive")), 100000000, 0, -295); ((("negative")), 100000000, 0, -296)], (0)), 100000000, 0, -292)), [15; 15; 63; 63], [0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 570, 19140, 19142), ("runtime/tools.ml", 574, 19342, 19405), 0), 0, 0, 0, Tag1 ("Refl__Tools", 1934)), 1, 0); Tag1 (("t", 57714), ([((("a")), 100000000, 0, -268); ((("b")), 100000000, 0, -269); ((("positive")), 100000000, 0, -270); ((("negative")), 100000000, 0, -271)], 4, Tag1 ([(("[]", 1673), (0), ((Tag3 ((("t", 57714)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -273); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -274); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -275); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -276)], (0)), 100000000, 0, -272)), (("runtime/tools.ml", 577, 19449, 19453), ("runtime/tools.ml", 577, 19449, 19486), 0), 0, Tag1 ("Refl__Tools", 1940)); (("::", 1674), ([(Tag3 ((("item", 57713)), [((("a")), 100000000, 0, -279); ((("b")), 100000000, 0, -282); ((("positive")), 100000000, 0, -285); ((("negative")), 100000000, 0, -288)], (0)), 100000000, 0, -290); (Tag3 ((("t", 57714)), [((("aa")), 100000000, 0, -280); ((("bb")), 100000000, 0, -283); ((("positive_tail")), 100000000, 0, -286); ((("negative_tail")), 100000000, 0, -289)], (0)), 100000000, 0, -291)]), ((Tag3 ((("t", 57714)), [(Tag2 ([((("a")), 100000000, 0, -279); ((("aa")), 100000000, 0, -280)]), 100000000, 0, -278); (Tag2 ([((("b")), 100000000, 0, -282); ((("bb")), 100000000, 0, -283)]), 100000000, 0, -281); (Tag2 ([((("positive")), 100000000, 0, -285); ((("positive_tail")), 100000000, 0, -286)]), 100000000, 0, -284); (Tag2 ([((("negative")), 100000000, 0, -288); ((("negative_tail")), 100000000, 0, -289)]), 100000000, 0, -287)], (0)), 100000000, 0, -277)), (("runtime/tools.ml", 578, 19487, 19491), ("runtime/tools.ml", 581, 19651, 19690), 0), 0, Tag1 ("Refl__Tools", 1941))], 0), 1, ((Tag3 (Tag1 (Tag2 (Tag1 ((Tag2 ("Refl__Tools")), "SignedVector"), (("Mapper", 57709))), "t"), [((("a")), 100000000, 0, -268); ((("b")), 100000000, 0, -269); ((("positive")), 100000000, 0, -270); ((("negative")), 100000000, 0, -271)], (0)), 100000000, 0, -267)), [63; 63; 63; 63], [0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 576, 19407, 19409), ("runtime/tools.ml", 581, 19651, 19690), 0), 0, 0, 0, Tag1 ("Refl__Tools", 1939)), 1, 0); (("reverse_item", 57715), ((Tag1 (0, (Tag3 ((("item", 57713)), [((("a")), 100000000, 0, -263); ((("b")), 100000000, 0, -262); ((("positive")), 100000000, 0, -265); ((("negative")), 100000000, 0, -264)], (0)), 100000000, 0, -266), (Tag3 ((("item", 57713)), [((("b")), 100000000, 0, -262); ((("a")), 100000000, 0, -263); ((("negative")), 100000000, 0, -264); ((("positive")), 100000000, 0, -265)], (0)), 100000000, 0, -261), 0), 100000000, 0, -260), 0, (("runtime/tools.ml", 583, 19692, 19698), ("runtime/tools.ml", 583, 19692, 19710), 0), 0, Tag1 ("Refl__Tools", 1942)), 0); (("pos", 57716), ((Tag1 (0, (Tag3 ((("item", 57713)), [((("a")), 100000000, 0, -254); ((("b")), 100000000, 0, -255); (Tag8 (([("Present", (0))], (0, 100000000, 0, -258), 1, 0, 0)), 100000000, 0, -257); ((("negative")), 100000000, 0, -259)], (0)), 100000000, 0, -256), (Tag3 (Tag1 ((("Mapper", 57709)), "t"), [((("a")), 100000000, 0, -254); ((("b")), 100000000, 0, -255)], (0)), 100000000, 0, -253), 0), 100000000, 0, -252), 0, (("runtime/tools.ml", 592, 19915, 19921), ("runtime/tools.ml", 592, 19915, 19924), 0), 0, Tag1 ("Refl__Tools", 1953)), 0); (("get", 57717), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variable"), [((("index")), 100000000, 0, -249); ((("a")), 100000000, 0, -244); ((("a_value")), 100000000, 0, -241); ((("positive")), 100000000, 0, -246); ((("direct")), 100000000, 0, -250)], (0)), 100000000, 0, -251), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variable"), [((("index")), 100000000, 0, -249); ((("b")), 100000000, 0, -245); ((("b_value")), 100000000, 0, -242); ((("positive")), 100000000, 0, -246); ((("direct")), 100000000, 0, -250)], (0)), 100000000, 0, -248), (Tag1 (0, (Tag3 ((("t", 57714)), [((("a")), 100000000, 0, -244); ((("b")), 100000000, 0, -245); ((("positive")), 100000000, 0, -246); ((("negative")), 100000000, 0, -247)], (0)), 100000000, 0, -243), (Tag3 (Tag1 ((("Mapper", 57709)), "t"), [((("a_value")), 100000000, 0, -241); ((("b_value")), 100000000, 0, -242)], (0)), 100000000, 0, -240), 0), 100000000, 0, -239), 0), 100000000, 0, -238), 0), 100000000, 0, -237), 0, (("runtime/tools.ml", 597, 20051, 20061), ("runtime/tools.ml", 597, 20051, 20064), 0), 0, Tag1 ("Refl__Tools", 1958)), 0); (("reverse", 57718), ((Tag1 (0, (Tag3 ((("t", 57714)), [((("a")), 100000000, 0, -233); ((("b")), 100000000, 0, -232); ((("positive")), 100000000, 0, -235); ((("negative")), 100000000, 0, -234)], (0)), 100000000, 0, -236), (Tag3 ((("t", 57714)), [((("b")), 100000000, 0, -232); ((("a")), 100000000, 0, -233); ((("negative")), 100000000, 0, -234); ((("positive")), 100000000, 0, -235)], (0)), 100000000, 0, -231), 0), 100000000, 0, -230), 0, (("runtime/tools.ml", 607, 20491, 20501), ("runtime/tools.ml", 607, 20491, 20508), 0), 0, Tag1 ("Refl__Tools", 2055)), 0); Tag1 (("symmetric_item", 57719), ([((("a")), 100000000, 0, -211); ((("b")), 100000000, 0, -212); ((("positive")), 100000000, 0, -213); ((("negative")), 100000000, 0, -214)], 4, Tag1 ([(("SNone", 1769), (0), ((Tag3 ((("symmetric_item", 57719)), [((("a")), 100000000, 0, -216); ((("b")), 100000000, 0, -217); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -219), 1, 0, 0)), 100000000, 0, -218); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -221), 1, 0, 0)), 100000000, 0, -220)], (0)), 100000000, 0, -215)), (("runtime/tools.ml", 616, 20745, 20749), ("runtime/tools.ml", 616, 20745, 20805), 0), 0, Tag1 ("Refl__Tools", 2079)); (("SPN", 1770), ([(Tag2 ([(Tag3 (Tag1 ((("Mapper", 57709)), "t"), [((("a")), 100000000, 0, -223); ((("b")), 100000000, 0, -224)], (0)), 100000000, 0, -228); (Tag3 (Tag1 ((("Mapper", 57709)), "t"), [((("b")), 100000000, 0, -224); ((("a")), 100000000, 0, -223)], (0)), 100000000, 0, -229)]), 100000000, 0, -227)]), ((Tag3 ((("symmetric_item", 57719)), [((("a")), 100000000, 0, -223); ((("b")), 100000000, 0, -224); ((0), 100000000, 0, -225); ((0), 100000000, 0, -226)], (0)), 100000000, 0, -222)), (("runtime/tools.ml", 617, 20806, 20810), ("runtime/tools.ml", 617, 20806, 20880), 0), 0, Tag1 ("Refl__Tools", 2080))], 0), 1, ((Tag3 (Tag1 (Tag2 (Tag1 ((Tag2 ("Refl__Tools")), "SignedVector"), (("Mapper", 57709))), "symmetric_item"), [((("a")), 100000000, 0, -211); ((("b")), 100000000, 0, -212); ((("positive")), 100000000, 0, -213); ((("negative")), 100000000, 0, -214)], (0)), 100000000, 0, -210)), [15; 15; 63; 63], [0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 615, 20690, 20692), ("runtime/tools.ml", 617, 20806, 20880), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2078)), 1, 0); Tag1 (("symmetric", 57720), ([((("a")), 100000000, 0, -186); ((("b")), 100000000, 0, -187); ((("positive")), 100000000, 0, -188); ((("negative")), 100000000, 0, -189)], 4, Tag1 ([(("[]", 1772), (0), ((Tag3 ((("symmetric", 57720)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -191); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -192); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -193); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -194)], (0)), 100000000, 0, -190)), (("runtime/tools.ml", 620, 20932, 20936), ("runtime/tools.ml", 620, 20932, 20977), 0), 0, Tag1 ("Refl__Tools", 2082)); (("::", 1773), ([(Tag3 ((("symmetric_item", 57719)), [((("a")), 100000000, 0, -197); ((("b")), 100000000, 0, -200); ((("positive")), 100000000, 0, -203); ((("negative")), 100000000, 0, -206)], (0)), 100000000, 0, -208); (Tag3 ((("symmetric", 57720)), [((("aa")), 100000000, 0, -198); ((("bb")), 100000000, 0, -201); ((("positive_tail")), 100000000, 0, -204); ((("negative_tail")), 100000000, 0, -207)], (0)), 100000000, 0, -209)]), ((Tag3 ((("symmetric", 57720)), [(Tag2 ([((("a")), 100000000, 0, -197); ((("aa")), 100000000, 0, -198)]), 100000000, 0, -196); (Tag2 ([((("b")), 100000000, 0, -200); ((("bb")), 100000000, 0, -201)]), 100000000, 0, -199); (Tag2 ([((("positive")), 100000000, 0, -203); ((("positive_tail")), 100000000, 0, -204)]), 100000000, 0, -202); (Tag2 ([((("negative")), 100000000, 0, -206); ((("negative_tail")), 100000000, 0, -207)]), 100000000, 0, -205)], (0)), 100000000, 0, -195)), (("runtime/tools.ml", 621, 20978, 20982), ("runtime/tools.ml", 624, 21160, 21207), 0), 0, Tag1 ("Refl__Tools", 2083))], 0), 1, ((Tag3 (Tag1 (Tag2 (Tag1 ((Tag2 ("Refl__Tools")), "SignedVector"), (("Mapper", 57709))), "symmetric"), [((("a")), 100000000, 0, -186); ((("b")), 100000000, 0, -187); ((("positive")), 100000000, 0, -188); ((("negative")), 100000000, 0, -189)], (0)), 100000000, 0, -185)), [63; 63; 63; 63], [0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 619, 20882, 20884), ("runtime/tools.ml", 624, 21160, 21207), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2081)), 1, 0); Tag1 (("make_transfer", 57721), ([((("a")), 100000000, 0, -144); ((("b")), 100000000, 0, -145); ((("sp")), 100000000, 0, -146); ((("sn")), 100000000, 0, -147); ((("ap")), 100000000, 0, -148); ((("an")), 100000000, 0, -149)], 6, Tag1 ([(("TNone", 1775), (0), ((Tag3 ((("make_transfer", 57721)), [((("a")), 100000000, 0, -151); ((("b")), 100000000, 0, -152); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -154), 1, 0, 0)), 100000000, 0, -153); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -156), 1, 0, 0)), 100000000, 0, -155); ((("ap")), 100000000, 0, -157); ((("an")), 100000000, 0, -158)], (0)), 100000000, 0, -150)), (("runtime/tools.ml", 627, 21261, 21265), ("runtime/tools.ml", 627, 21261, 21329), 0), 0, Tag1 ("Refl__Tools", 2085)); (("TP", 1776), ([(Tag3 ((("t", 57714)), [((("a")), 100000000, 0, -160); ((("b")), 100000000, 0, -161); ((("ap")), 100000000, 0, -165); ((("an")), 100000000, 0, -166)], (0)), 100000000, 0, -167)]), ((Tag3 ((("make_transfer", 57721)), [((("a")), 100000000, 0, -160); ((("b")), 100000000, 0, -161); ((0), 100000000, 0, -162); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -164), 1, 0, 0)), 100000000, 0, -163); ((("ap")), 100000000, 0, -165); ((("an")), 100000000, 0, -166)], (0)), 100000000, 0, -159)), (("runtime/tools.ml", 628, 21330, 21334), ("runtime/tools.ml", 629, 21341, 21419), 0), 0, Tag1 ("Refl__Tools", 2086)); (("TN", 1777), ([(Tag3 ((("t", 57714)), [((("a")), 100000000, 0, -169); ((("b")), 100000000, 0, -170); ((("an")), 100000000, 0, -175); ((("ap")), 100000000, 0, -174)], (0)), 100000000, 0, -176)]), ((Tag3 ((("make_transfer", 57721)), [((("a")), 100000000, 0, -169); ((("b")), 100000000, 0, -170); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -172), 1, 0, 0)), 100000000, 0, -171); ((0), 100000000, 0, -173); ((("ap")), 100000000, 0, -174); ((("an")), 100000000, 0, -175)], (0)), 100000000, 0, -168)), (("runtime/tools.ml", 630, 21420, 21424), ("runtime/tools.ml", 631, 21431, 21509), 0), 0, Tag1 ("Refl__Tools", 2087)); (("TPN", 1778), ([(Tag3 ((("symmetric", 57720)), [((("a")), 100000000, 0, -178); ((("b")), 100000000, 0, -179); ((("an")), 100000000, 0, -182); ((("ap")), 100000000, 0, -183)], (0)), 100000000, 0, -184)]), ((Tag3 ((("make_transfer", 57721)), [((("a")), 100000000, 0, -178); ((("b")), 100000000, 0, -179); ((0), 100000000, 0, -180); ((0), 100000000, 0, -181); ((("an")), 100000000, 0, -182); ((("ap")), 100000000, 0, -183)], (0)), 100000000, 0, -177)), (("runtime/tools.ml", 632, 21510, 21514), ("runtime/tools.ml", 634, 21587, 21610), 0), 0, Tag1 ("Refl__Tools", 2088))], 0), 1, ((Tag3 (Tag1 (Tag2 (Tag1 ((Tag2 ("Refl__Tools")), "SignedVector"), (("Mapper", 57709))), "make_transfer"), [((("a")), 100000000, 0, -144); ((("b")), 100000000, 0, -145); ((("sp")), 100000000, 0, -146); ((("sn")), 100000000, 0, -147); ((("ap")), 100000000, 0, -148); ((("an")), 100000000, 0, -149)], (0)), 100000000, 0, -143)), [63; 63; 63; 63; 63; 63], [0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 626, 21209, 21211), ("runtime/tools.ml", 634, 21587, 21610), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2084)), 1, 0); (("reverse_of_symmetric", 57722), ((Tag1 (0, (Tag3 ((("symmetric", 57720)), [((("a")), 100000000, 0, -138); ((("b")), 100000000, 0, -139); ((("positive")), 100000000, 0, -141); ((("negative")), 100000000, 0, -140)], (0)), 100000000, 0, -142), (Tag3 ((("symmetric", 57720)), [((("a")), 100000000, 0, -138); ((("b")), 100000000, 0, -139); ((("negative")), 100000000, 0, -140); ((("positive")), 100000000, 0, -141)], (0)), 100000000, 0, -137), 0), 100000000, 0, -136), 0, (("runtime/tools.ml", 636, 21612, 21622), ("runtime/tools.ml", 636, 21612, 21642), 0), 0, Tag1 ("Refl__Tools", 2089)), 0); (("p_of_symmetric", 57723), ((Tag1 (0, (Tag3 ((("symmetric", 57720)), [((("a")), 100000000, 0, -131); ((("b")), 100000000, 0, -132); ((("ap")), 100000000, 0, -133); ((("an")), 100000000, 0, -134)], (0)), 100000000, 0, -135), (Tag3 ((("t", 57714)), [((("a")), 100000000, 0, -131); ((("b")), 100000000, 0, -132); ((("ap")), 100000000, 0, -133); ((("an")), 100000000, 0, -134)], (0)), 100000000, 0, -130), 0), 100000000, 0, -129), 0, (("runtime/tools.ml", 645, 21910, 21920), ("runtime/tools.ml", 645, 21910, 21934), 0), 0, Tag1 ("Refl__Tools", 2128)), 0); (("n_of_symmetric", 57724), ((Tag1 (0, (Tag3 ((("symmetric", 57720)), [((("a")), 100000000, 0, -124); ((("b")), 100000000, 0, -125); ((("ap")), 100000000, 0, -127); ((("an")), 100000000, 0, -126)], (0)), 100000000, 0, -128), (Tag3 ((("t", 57714)), [((("a")), 100000000, 0, -124); ((("b")), 100000000, 0, -125); ((("an")), 100000000, 0, -126); ((("ap")), 100000000, 0, -127)], (0)), 100000000, 0, -123), 0), 100000000, 0, -122), 0, (("runtime/tools.ml", 654, 22176, 22186), ("runtime/tools.ml", 654, 22176, 22200), 0), 0, Tag1 ("Refl__Tools", 2168)), 0); (("make_transfer", 57725), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_matrix"), [((("p")), 100000000, 0, -119); ((("n")), 100000000, 0, -120); ((("sp")), 100000000, 0, -114); ((("sn")), 100000000, 0, -115); ((("ap")), 100000000, 0, -116); ((("an")), 100000000, 0, -117)], (0)), 100000000, 0, -121), (Tag1 (0, (Tag3 ((("t", 57714)), [((("a")), 100000000, 0, -112); ((("b")), 100000000, 0, -113); ((("p")), 100000000, 0, -119); ((("n")), 100000000, 0, -120)], (0)), 100000000, 0, -118), (Tag3 ((("make_transfer", 57721)), [((("a")), 100000000, 0, -112); ((("b")), 100000000, 0, -113); ((("sp")), 100000000, 0, -114); ((("sn")), 100000000, 0, -115); ((("ap")), 100000000, 0, -116); ((("an")), 100000000, 0, -117)], (0)), 100000000, 0, -111), 0), 100000000, 0, -110), 0), 100000000, 0, -109), 0, (("runtime/tools.ml", 663, 22442, 22452), ("runtime/tools.ml", 663, 22442, 22465), 0), 0, Tag1 ("Refl__Tools", 2208)), 0); Tag1 (("make", 57726), ([((("rec_group")), 100000000, 0, -89); ((("a_kinds")), 100000000, 0, -90); ((("b_kinds")), 100000000, 0, -91)], 3, [[(("f", 1947), 0, (Tag10 ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [(Tag9 (("a")), 100000000, 0, -93); (Tag9 (("structure")), 100000000, 0, -95); (Tag9 (("a_arity")), 100000000, 0, -96); ((("rec_group")), 100000000, 0, -89); ((("a_kinds")), 100000000, 0, -90); (Tag9 (("ap")), 100000000, 0, -98); (Tag9 (("an")), 100000000, 0, -99); (Tag9 (("ad")), 100000000, 0, -100); (Tag9 (("gadt")), 100000000, 0, -101)], (0)), 100000000, 0, -108), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [(Tag9 (("b")), 100000000, 0, -94); (Tag9 (("structure")), 100000000, 0, -95); (Tag9 (("b_arity")), 100000000, 0, -97); ((("rec_group")), 100000000, 0, -89); ((("b_kinds")), 100000000, 0, -91); (Tag9 (("ap")), 100000000, 0, -98); (Tag9 (("an")), 100000000, 0, -99); (Tag9 (("ad")), 100000000, 0, -100); (Tag9 (("gadt")), 100000000, 0, -101)], (0)), 100000000, 0, -107), (Tag1 (0, (Tag3 ((("t", 57714)), [(Tag9 (("a_arity")), 100000000, 0, -96); (Tag9 (("b_arity")), 100000000, 0, -97); (Tag9 (("ap")), 100000000, 0, -98); (Tag9 (("an")), 100000000, 0, -99)], (0)), 100000000, 0, -106), (Tag3 (Tag1 ((("Mapper", 57709)), "t"), [(Tag9 (("a")), 100000000, 0, -93); (Tag9 (("b")), 100000000, 0, -94)], (0)), 100000000, 0, -105), 0), 100000000, 0, -104), 0), 100000000, 0, -103), 0), 100000000, 0, -102), [(Tag9 (("a")), 100000000, 0, -93); (Tag9 (("b")), 100000000, 0, -94); (Tag9 (("structure")), 100000000, 0, -95); (Tag9 (("a_arity")), 100000000, 0, -96); (Tag9 (("b_arity")), 100000000, 0, -97); (Tag9 (("ap")), 100000000, 0, -98); (Tag9 (("an")), 100000000, 0, -99); (Tag9 (("ad")), 100000000, 0, -100); (Tag9 (("gadt")), 100000000, 0, -101)]), 100000000, 0, -92), (("runtime/tools.ml", 718, 25186, 25192), ("runtime/tools.ml", 723, 25445, 25504), 0), 0, Tag1 ("Refl__Tools", 2474))]], 1, ((Tag3 (Tag1 (Tag2 (Tag1 ((Tag2 ("Refl__Tools")), "SignedVector"), (("Mapper", 57709))), "make"), [((("rec_group")), 100000000, 0, -89); ((("a_kinds")), 100000000, 0, -90); ((("b_kinds")), 100000000, 0, -91)], (0)), 100000000, 0, -88)), [15; 63; 63], [0; 0; 0], 0, 0, (("runtime/tools.ml", 717, 25137, 25139), ("runtime/tools.ml", 724, 25505, 25510), 0), 0, 0, 1, Tag1 ("Refl__Tools", 2473)), 1, 0); (("make_transfer_vector", 57727), ((Tag1 (0, (Tag3 ((("make", 57726)), [((("rec_group")), 100000000, 0, -83); ((("a_kinds")), 100000000, 0, -84); ((("a_kinds")), 100000000, 0, -84)], (0)), 100000000, 0, -87), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((("a_types")), 100000000, 0, -68); ((("structures")), 100000000, 0, -82); ((("a_arity")), 100000000, 0, -73); ((("rec_group")), 100000000, 0, -83); ((("a_kinds")), 100000000, 0, -84); ((("arguments")), 100000000, 0, -80); ((("gadt")), 100000000, 0, -85)], (0)), 100000000, 0, -86), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((("b_types")), 100000000, 0, -69); ((("structures")), 100000000, 0, -82); ((("b_arity")), 100000000, 0, -74); ((("rec_group")), 100000000, 0, -83); ((("a_kinds")), 100000000, 0, -84); ((("arguments")), 100000000, 0, -80); ((("gadt")), 100000000, 0, -85)], (0)), 100000000, 0, -81), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer"), [((("positive")), 100000000, 0, -75); ((("negative")), 100000000, 0, -76); ((("direct")), 100000000, 0, -78); ((("subpositive")), 100000000, 0, -70); ((("subnegative")), 100000000, 0, -71); ((("subdirect")), 100000000, 0, -79); ((("arguments")), 100000000, 0, -80)], (0)), 100000000, 0, -77), (Tag1 (0, (Tag3 ((("t", 57714)), [((("a_arity")), 100000000, 0, -73); ((("b_arity")), 100000000, 0, -74); ((("positive")), 100000000, 0, -75); ((("negative")), 100000000, 0, -76)], (0)), 100000000, 0, -72), (Tag3 ((("t", 57714)), [((("a_types")), 100000000, 0, -68); ((("b_types")), 100000000, 0, -69); ((("subpositive")), 100000000, 0, -70); ((("subnegative")), 100000000, 0, -71)], (0)), 100000000, 0, -67), 0), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0), 100000000, 0, -63), 0), 100000000, 0, -62), 0, (("runtime/tools.ml", 726, 25512, 25522), ("runtime/tools.ml", 726, 25512, 25542), 0), 0, Tag1 ("Refl__Tools", 2475)), 0); (("skip", 57728), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "skip_vector"), [((("positive")), 100000000, 0, -58); ((("skip_positive")), 100000000, 0, -55)], (0)), 100000000, 0, -61), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "skip_vector"), [((("negative")), 100000000, 0, -59); ((("skip_negative")), 100000000, 0, -56)], (0)), 100000000, 0, -60), (Tag1 (0, (Tag3 ((("t", 57714)), [((("a")), 100000000, 0, -53); ((("b")), 100000000, 0, -54); ((("positive")), 100000000, 0, -58); ((("negative")), 100000000, 0, -59)], (0)), 100000000, 0, -57), (Tag3 ((("t", 57714)), [((("a")), 100000000, 0, -53); ((("b")), 100000000, 0, -54); ((("skip_positive")), 100000000, 0, -55); ((("skip_negative")), 100000000, 0, -56)], (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0), 100000000, 0, -50), 0), 100000000, 0, -49), 0, (("runtime/tools.ml", 761, 27127, 27137), ("runtime/tools.ml", 761, 27127, 27141), 0), 0, Tag1 ("Refl__Tools", 2589)), 0); (("make", 57729), ((Tag1 (0, (Tag3 ((("make", 57726)), [((0), 100000000, 0, -44); ((0), 100000000, 0, -45); ((0), 100000000, 0, -45)], (0)), 100000000, 0, -48), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((0), 100000000, 0, -29); ((0), 100000000, 0, -43); ((0), 100000000, 0, -34); ((0), 100000000, 0, -44); ((0), 100000000, 0, -45); ((0), 100000000, 0, -41); ((0), 100000000, 0, -46)], (0)), 100000000, 0, -47), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((0), 100000000, 0, -30); ((0), 100000000, 0, -43); ((0), 100000000, 0, -35); ((0), 100000000, 0, -44); ((0), 100000000, 0, -45); ((0), 100000000, 0, -41); ((0), 100000000, 0, -46)], (0)), 100000000, 0, -42), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_skip"), [((0), 100000000, 0, -36); ((0), 100000000, 0, -37); ((0), 100000000, 0, -39); ((0), 100000000, 0, -31); ((0), 100000000, 0, -32); ((0), 100000000, 0, -40); ((0), 100000000, 0, -41)], (0)), 100000000, 0, -38), (Tag1 (0, (Tag3 ((("t", 57714)), [((0), 100000000, 0, -34); ((0), 100000000, 0, -35); ((0), 100000000, 0, -36); ((0), 100000000, 0, -37)], (0)), 100000000, 0, -33), (Tag3 ((("t", 57714)), [((0), 100000000, 0, -29); ((0), 100000000, 0, -30); ((0), 100000000, 0, -31); ((0), 100000000, 0, -32)], (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("runtime/tools.ml", 785, 28135, 28141), ("runtime/tools.ml", 785, 28135, 28145), 0), 0, Tag1 ("Refl__Tools", 2799)), 0)]), 0, (("runtime/map.ml", 9, 80, 80), ("runtime/map.ml", 9, 80, 118), 0), Tag1 ("Refl__Map", 41)), 0, 0); (("map", 57711), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [((("a_struct")), 100000000, 0, -6); ((("structure")), 100000000, 0, -14); ((("a_arity")), 100000000, 0, -9); ((("rec_group")), 100000000, 0, -15); ((("kinds")), 100000000, 0, -16); ((("positive")), 100000000, 0, -11); ((("negative")), 100000000, 0, -12); ((("direct")), 100000000, 0, -17); ((("gadt")), 100000000, 0, -18)], (0)), 100000000, 0, -19), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [((("b_struct")), 100000000, 0, -7); ((("structure")), 100000000, 0, -14); ((("b_arity")), 100000000, 0, -10); ((("rec_group")), 100000000, 0, -15); ((("kinds")), 100000000, 0, -16); ((("positive")), 100000000, 0, -11); ((("negative")), 100000000, 0, -12); ((("direct")), 100000000, 0, -17); ((("gadt")), 100000000, 0, -18)], (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 (Tag1 ((("Mappers", 57710)), "t"), [((("a_arity")), 100000000, 0, -9); ((("b_arity")), 100000000, 0, -10); ((("positive")), 100000000, 0, -11); ((("negative")), 100000000, 0, -12)], (0)), 100000000, 0, -8), (Tag3 (Tag1 ((("Mapper", 57709)), "t"), [((("a_struct")), 100000000, 0, -6); ((("b_struct")), 100000000, 0, -7)], (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("runtime/map.ml", 11, 120, 128), ("runtime/map.ml", 11, 120, 131), 0), 0, Tag1 ("Refl__Map", 42)), 0)], "Refl__Map", [("Refl__Map", ("\149,\025\000h\234\180\228Q\001\018\"\230\151\018_")); ("Traverse__Values", ("}\239\001\023\024&\227\167Sl\002\148\026\190\180\025")); ("Traverse__Modules", ("=\175q\026#\242\139\b\202\252\139\207\195\170\254\202")); ("Traverse__Interface", ("\252\146\219\195\199\167\234\143+\145l\200\254\244s}")); ("Traverse__", ("y\220\011\221C%Ob7%t,\252N21")); ("Traverse", ("\019\209\190\177II\1552 \b\174\006\b\1643\152")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Fun", ("\234t\181\000iQ\251,\b\020$\224\233\160\142\210")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stdcompat__stdlib_s", ("?\143\027\238\145\138\139e`\216P\248\156\178=\206")); ("Stdcompat__init", ("r\254q\255\217]\232\239'\192d\165\222\016\157\133")); ("Stdcompat", ("\139\1989\181:\137\230\132\240\223\206\210Y\135S\\")); ("Refl__Tools", ("i\215\207\166d\225\190DU\241\194\224\137P\158e")); ("Refl__Desc", ("\221\150mt\149.2\132\189\244\007\164&\203\225\172")); ("Refl__", ("i\003\196\150\161\159\229g\157\181\149\015g%\221\240")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
('a_struct, 'b_struct) Mapper.t
