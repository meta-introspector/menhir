type substitutivity = Dispose | Substitute | Keep | Anticipate
type object_name = Libnames.full_path * Names.KerName.t
type open_filter
type ('a, 'b) object_declaration = {
  object_name : string;
  object_stage : Summary.Stage.t;
  cache_function : 'b -> unit;
  load_function : int -> 'b -> unit;
  open_function : open_filter -> int -> 'b -> unit;
  classify_function : 'a -> substitutivity;
  subst_function : Mod_subst.substitution * 'a -> 'a;
  discharge_function : 'a -> 'a option;
  rebuild_function : 'a -> 'a;
}
val unfiltered : open_filter
val make_filter : finite:bool -> string CAst.t list -> open_filter
type category
val create_category : string -> category
val in_filter : cat:category option -> open_filter -> bool
val simple_open :
  ?cat:category -> ('i -> 'a -> unit) -> open_filter -> 'i -> 'a -> unit
val filter_and : open_filter -> open_filter -> open_filter option
val filter_or : open_filter -> open_filter -> open_filter
val default_object : string -> ('a, 'b) object_declaration
val ident_subst_function : Mod_subst.substitution * 'a -> 'a
module Dyn : Dyn.S
type obj = Dyn.t
type algebraic_objects =
    Objs of t list
  | Ref of Names.ModPath.t * Mod_subst.substitution
and t =
    ModuleObject of Names.Id.t * substitutive_objects
  | ModuleTypeObject of Names.Id.t * substitutive_objects
  | IncludeObject of algebraic_objects
  | KeepObject of Names.Id.t * t list
  | ExportObject of { mpl : (open_filter * Names.ModPath.t) list; }
  | AtomicObject of obj
and substitutive_objects = Names.MBId.t list * algebraic_objects
val declare_object : ('a, 'a) object_declaration -> 'a -> obj
val declare_object_full :
  ('a, Nametab.object_prefix * 'a) object_declaration -> 'a Dyn.tag
val declare_named_object_full :
  ('a, object_name * 'a) object_declaration -> (Names.Id.t * 'a) Dyn.tag
val declare_named_object :
  ('a, object_name * 'a) object_declaration -> Names.Id.t -> 'a -> obj
val declare_named_object_gen :
  ('a, Nametab.object_prefix * 'a) object_declaration -> 'a -> obj
val cache_object : Nametab.object_prefix * obj -> unit
val load_object : int -> Nametab.object_prefix * obj -> unit
val open_object : open_filter -> int -> Nametab.object_prefix * obj -> unit
val subst_object : Mod_subst.substitution * obj -> obj
val classify_object : obj -> substitutivity
val discharge_object : obj -> obj option
val rebuild_object : obj -> obj
val object_stage : obj -> Summary.Stage.t
val local_object :
  string ->
  cache:('a -> unit) ->
  discharge:('a -> 'a option) -> ('a, 'a) object_declaration
val local_object_nodischarge :
  string -> cache:('a -> unit) -> ('a, 'a) object_declaration
val global_object :
  ?cat:category ->
  string ->
  cache:('a -> unit) ->
  subst:(Mod_subst.substitution * 'a -> 'a) option ->
  discharge:('a -> 'a option) -> ('a, 'a) object_declaration
val global_object_nodischarge :
  ?cat:category ->
  string ->
  cache:('a -> unit) ->
  subst:(Mod_subst.substitution * 'a -> 'a) option ->
  ('a, 'a) object_declaration
val superglobal_object :
  string ->
  cache:('a -> unit) ->
  subst:(Mod_subst.substitution * 'a -> 'a) option ->
  discharge:('a -> 'a option) -> ('a, 'a) object_declaration
val superglobal_object_nodischarge :
  string ->
  cache:('a -> unit) ->
  subst:(Mod_subst.substitution * 'a -> 'a) option ->
  ('a, 'a) object_declaration("DEBUG:rule", [Tag1 (("substitutivity", 663), (0, 0, Tag1 ([(("Dispose", 466), (0), 0, (("library/libobject.mli", 67, 3046, 3068), ("library/libobject.mli", 67, 3046, 3075), 0), 0, Tag1 ("Libobject", 1)); (("Substitute", 467), (0), 0, (("library/libobject.mli", 67, 3046, 3076), ("library/libobject.mli", 67, 3046, 3088), 0), 0, Tag1 ("Libobject", 2)); (("Keep", 468), (0), 0, (("library/libobject.mli", 67, 3046, 3089), ("library/libobject.mli", 67, 3046, 3095), 0), 0, Tag1 ("Libobject", 3)); (("Anticipate", 469), (0), 0, (("library/libobject.mli", 67, 3046, 3096), ("library/libobject.mli", 67, 3046, 3108), 0), 0, Tag1 ("Libobject", 4))], 0), 1, 0, 0, 0, 0, 0, (("library/libobject.mli", 67, 3046, 3046), ("library/libobject.mli", 67, 3046, 3108), 0), 0, 1, 0, Tag1 ("Libobject", 0)), 1, 0); Tag1 (("object_name", 664), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((Tag2 ("Libnames")), "full_path"), 0, (0)), 100000000, 0, -257); (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -258)]), 100000000, 0, -256)), 0, 0, 0, 0, (("library/libobject.mli", 73, 3259, 3259), ("library/libobject.mli", 73, 3259, 3308), 0), 0, 0, 0, Tag1 ("Libobject", 5)), 1, 0); Tag1 (("open_filter", 665), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("library/libobject.mli", 75, 3310, 3310), ("library/libobject.mli", 75, 3310, 3326), 0), 0, 0, 0, Tag1 ("Libobject", 6)), 1, 0); Tag1 (("object_declaration", 666), ([((("a")), 100000000, 0, -249); ((("b")), 100000000, 0, -236)], 2, [[(("object_name", 526), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -232), (("library/libobject.mli", 78, 3364, 3366), ("library/libobject.mli", 78, 3364, 3387), 0), 0, Tag1 ("Libobject", 8)); (("object_stage", 543), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Summary")), "Stage"), "t"), 0, (0)), 100000000, 0, -233), (("library/libobject.mli", 79, 3388, 3390), ("library/libobject.mli", 79, 3388, 3421), 0), 0, Tag1 ("Libobject", 9)); (("cache_function", 544), 0, (Tag1 (0, ((("b")), 100000000, 0, -236), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -235), 0), 100000000, 0, -234), (("library/libobject.mli", 80, 3422, 3424), ("library/libobject.mli", 80, 3422, 3452), 0), 0, Tag1 ("Libobject", 10)); (("load_function", 545), 0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -240), (Tag1 (0, ((("b")), 100000000, 0, -236), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -239), 0), 100000000, 0, -238), 0), 100000000, 0, -237), (("library/libobject.mli", 81, 3453, 3455), ("library/libobject.mli", 81, 3453, 3489), 0), 0, Tag1 ("Libobject", 11)); (("open_function", 546), 0, (Tag1 (0, (Tag3 ((("open_filter", 665)), 0, (0)), 100000000, 0, -246), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -245), (Tag1 (0, ((("b")), 100000000, 0, -236), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -244), 0), 100000000, 0, -243), 0), 100000000, 0, -242), 0), 100000000, 0, -241), (("library/libobject.mli", 82, 3490, 3492), ("library/libobject.mli", 82, 3490, 3541), 0), 0, Tag1 ("Libobject", 12)); (("classify_function", 547), 0, (Tag1 (0, ((("a")), 100000000, 0, -249), (Tag3 ((("substitutivity", 663)), 0, (0)), 100000000, 0, -248), 0), 100000000, 0, -247), (("library/libobject.mli", 83, 3542, 3544), ("library/libobject.mli", 83, 3542, 3585), 0), 0, Tag1 ("Libobject", 13)); (("subst_function", 548), 0, (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Mod_subst")), "substitution"), 0, (0)), 100000000, 0, -252); ((("a")), 100000000, 0, -249)]), 100000000, 0, -251), ((("a")), 100000000, 0, -249), 0), 100000000, 0, -250), (("library/libobject.mli", 84, 3586, 3588), ("library/libobject.mli", 84, 3586, 3630), 0), 0, Tag1 ("Libobject", 14)); (("discharge_function", 549), 0, (Tag1 (0, ((("a")), 100000000, 0, -249), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -249)], (0)), 100000000, 0, -254), 0), 100000000, 0, -253), (("library/libobject.mli", 85, 3631, 3633), ("library/libobject.mli", 85, 3631, 3670), 0), 0, Tag1 ("Libobject", 15)); (("rebuild_function", 550), 0, (Tag1 (0, ((("a")), 100000000, 0, -249), ((("a")), 100000000, 0, -249), 0), 100000000, 0, -255), (("library/libobject.mli", 86, 3671, 3673), ("library/libobject.mli", 86, 3671, 3701), 0), 0, Tag1 ("Libobject", 16))]], 1, 0, [63; 46], [0; 0], 0, 0, (("library/libobject.mli", 77, 3328, 3328), ("library/libobject.mli", 87, 3702, 3703), 0), 0, 0, 0, Tag1 ("Libobject", 7)), 1, 0); (("unfiltered", 667), ((Tag3 ((("open_filter", 665)), 0, (0)), 100000000, 0, -231), 0, (("library/libobject.mli", 89, 3705, 3705), ("library/libobject.mli", 89, 3705, 3733), 0), 0, Tag1 ("Libobject", 17)), 0); (("make_filter", 668), ((Tag1 (("finite"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -230), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("CAst")), "t"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -229)], (0)), 100000000, 0, -228)], (0)), 100000000, 0, -227), (Tag3 ((("open_filter", 665)), 0, (0)), 100000000, 0, -226), 0), 100000000, 0, -225), 0), 100000000, 0, -224), 0, (("library/libobject.mli", 91, 3735, 3735), ("library/libobject.mli", 91, 3735, 3801), 0), 0, Tag1 ("Libobject", 18)), 0); Tag1 (("category", 669), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("library/libobject.mli", 94, 3842, 3842), ("library/libobject.mli", 94, 3842, 3855), 0), 0, 0, 0, Tag1 ("Libobject", 19)), 1, 0); (("create_category", 670), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -223), (Tag3 ((("category", 669)), 0, (0)), 100000000, 0, -222), 0), 100000000, 0, -221), 0, (("library/libobject.mli", 96, 3857, 3857), ("library/libobject.mli", 96, 3857, 3897), 0), 0, Tag1 ("Libobject", 20)), 0); (("in_filter", 671), ((Tag1 (("cat"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("category", 669)), 0, (0)), 100000000, 0, -220)], (0)), 100000000, 0, -219), (Tag1 (0, (Tag3 ((("open_filter", 665)), 0, (0)), 100000000, 0, -218), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -217), 0), 100000000, 0, -216), 0), 100000000, 0, -215), 0, (("library/libobject.mli", 99, 3959, 3959), ("library/libobject.mli", 99, 3959, 4017), 0), 0, Tag1 ("Libobject", 21)), 0); (("simple_open", 672), ((Tag1 (Tag1 ("cat"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("category", 669)), 0, (0)), 100000000, 0, -214)], (0)), 100000000, 0, -213), (Tag1 (0, (Tag1 (0, ((("i")), 100000000, 0, -208), (Tag1 (0, ((("a")), 100000000, 0, -207), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -212), 0), 100000000, 0, -211), 0), 100000000, 0, -210), (Tag1 (0, (Tag3 ((("open_filter", 665)), 0, (0)), 100000000, 0, -209), (Tag1 (0, ((("i")), 100000000, 0, -208), (Tag1 (0, ((("a")), 100000000, 0, -207), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -206), 0), 100000000, 0, -205), 0), 100000000, 0, -204), 0), 100000000, 0, -203), 0), 100000000, 0, -202), 0), 100000000, 0, -201), 0, (("library/libobject.mli", 106, 4218, 4218), ("library/libobject.mli", 107, 4275, 4308), 0), 0, Tag1 ("Libobject", 22)), 0); (("filter_and", 673), ((Tag1 (0, (Tag3 ((("open_filter", 665)), 0, (0)), 100000000, 0, -200), (Tag1 (0, (Tag3 ((("open_filter", 665)), 0, (0)), 100000000, 0, -199), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("open_filter", 665)), 0, (0)), 100000000, 0, -198)], (0)), 100000000, 0, -197), 0), 100000000, 0, -196), 0), 100000000, 0, -195), 0, (("library/libobject.mli", 112, 4484, 4484), ("library/libobject.mli", 112, 4484, 4549), 0), 0, Tag1 ("Libobject", 23)), 0); (("filter_or", 674), ((Tag1 (0, (Tag3 ((("open_filter", 665)), 0, (0)), 100000000, 0, -194), (Tag1 (0, (Tag3 ((("open_filter", 665)), 0, (0)), 100000000, 0, -193), (Tag3 ((("open_filter", 665)), 0, (0)), 100000000, 0, -192), 0), 100000000, 0, -191), 0), 100000000, 0, -190), 0, (("library/libobject.mli", 115, 4605, 4605), ("library/libobject.mli", 115, 4605, 4663), 0), 0, Tag1 ("Libobject", 24)), 0); (("default_object", 675), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -189), (Tag3 ((("object_declaration", 666)), [((("a")), 100000000, 0, -187); ((("b")), 100000000, 0, -188)], (0)), 100000000, 0, -186), 0), 100000000, 0, -185), 0, (("library/libobject.mli", 126, 4927, 4927), ("library/libobject.mli", 126, 4927, 4984), 0), 0, Tag1 ("Libobject", 25)), 0); (("ident_subst_function", 676), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Mod_subst")), "substitution"), 0, (0)), 100000000, 0, -184); ((("a")), 100000000, 0, -182)]), 100000000, 0, -183), ((("a")), 100000000, 0, -182), 0), 100000000, 0, -181), 0, (("library/libobject.mli", 129, 5028, 5028), ("library/libobject.mli", 129, 5028, 5078), 0), 0, Tag1 ("Libobject", 26)), 0); Tag3 (("Dyn", 677), 0, ((Tag1 ((Tag2 ("Dyn")), "S")), 0, (("library/libobject.mli", 136, 5286, 5286), ("library/libobject.mli", 136, 5286, 5304), 0), Tag1 ("Libobject", 27)), 0, 0); Tag1 (("obj", 678), (0, 0, 0, 1, ((Tag3 (Tag1 ((("Dyn", 677)), "t"), 0, (0)), 100000000, 0, -180)), 0, 0, 0, 0, (("library/libobject.mli", 138, 5306, 5306), ("library/libobject.mli", 138, 5306, 5322), 0), 0, 0, 0, Tag1 ("Libobject", 28)), 1, 0); Tag1 (("algebraic_objects", 679), (0, 0, Tag1 ([(("Objs", 597), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 680)), 0, (0)), 100000000, 0, -177)], (0)), 100000000, 0, -176)]), 0, (("library/libobject.mli", 141, 5349, 5351), ("library/libobject.mli", 141, 5349, 5367), 0), 0, Tag1 ("Libobject", 32)); (("Ref", 598), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -178); (Tag3 (Tag1 ((Tag2 ("Mod_subst")), "substitution"), 0, (0)), 100000000, 0, -179)]), 0, (("library/libobject.mli", 142, 5368, 5370), ("library/libobject.mli", 142, 5368, 5413), 0), 0, Tag1 ("Libobject", 33))], 0), 1, 0, 0, 0, 0, 0, (("library/libobject.mli", 140, 5324, 5324), ("library/libobject.mli", 142, 5368, 5413), 0), 0, 0, 0, Tag1 ("Libobject", 29)), 1, 0); Tag1 (("t", 680), (0, 0, Tag1 ([(("ModuleObject", 608), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -163); (Tag3 ((("substitutive_objects", 681)), 0, (0)), 100000000, 0, -164)]), 0, (("library/libobject.mli", 145, 5423, 5425), ("library/libobject.mli", 145, 5423, 5470), 0), 0, Tag1 ("Libobject", 34)); (("ModuleTypeObject", 625), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -165); (Tag3 ((("substitutive_objects", 681)), 0, (0)), 100000000, 0, -166)]), 0, (("library/libobject.mli", 146, 5471, 5473), ("library/libobject.mli", 146, 5471, 5522), 0), 0, Tag1 ("Libobject", 35)); (("IncludeObject", 626), ([(Tag3 ((("algebraic_objects", 679)), 0, (0)), 100000000, 0, -167)]), 0, (("library/libobject.mli", 147, 5523, 5525), ("library/libobject.mli", 147, 5523, 5561), 0), 0, Tag1 ("Libobject", 36)); (("KeepObject", 627), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -168); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 680)), 0, (0)), 100000000, 0, -170)], (0)), 100000000, 0, -169)]), 0, (("library/libobject.mli", 148, 5562, 5564), ("library/libobject.mli", 148, 5562, 5593), 0), 0, Tag1 ("Libobject", 37)); (("ExportObject", 628), Tag1 ([(("mpl", 629), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("open_filter", 665)), 0, (0)), 100000000, 0, -173); (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -174)]), 100000000, 0, -172)], (0)), 100000000, 0, -171), (("library/libobject.mli", 149, 5594, 5616), ("library/libobject.mli", 149, 5594, 5652), 0), 0, Tag1 ("Libobject", 38))]), 0, (("library/libobject.mli", 149, 5594, 5596), ("library/libobject.mli", 149, 5594, 5654), 0), 0, Tag1 ("Libobject", 39)); (("AtomicObject", 630), ([(Tag3 ((("obj", 678)), 0, (0)), 100000000, 0, -175)]), 0, (("library/libobject.mli", 150, 5655, 5657), ("library/libobject.mli", 150, 5655, 5678), 0), 0, Tag1 ("Libobject", 40))], 0), 1, 0, 0, 0, 0, 0, (("library/libobject.mli", 144, 5415, 5415), ("library/libobject.mli", 150, 5655, 5678), 0), 0, 0, 0, Tag1 ("Libobject", 30)), 2, 0); Tag1 (("substitutive_objects", 681), (0, 0, 0, 1, ((Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MBId"), "t"), 0, (0)), 100000000, 0, -161)], (0)), 100000000, 0, -160); (Tag3 ((("algebraic_objects", 679)), 0, (0)), 100000000, 0, -162)]), 100000000, 0, -159)), 0, 0, 0, 0, (("library/libobject.mli", 152, 5680, 5680), ("library/libobject.mli", 152, 5680, 5738), 0), 0, 0, 0, Tag1 ("Libobject", 31)), 2, 0); (("declare_object", 682), ((Tag1 (0, (Tag3 ((("object_declaration", 666)), [((("a")), 100000000, 0, -157); ((("a")), 100000000, 0, -157)], (0)), 100000000, 0, -158), (Tag1 (0, ((("a")), 100000000, 0, -157), (Tag3 ((("obj", 678)), 0, (0)), 100000000, 0, -156), 0), 100000000, 0, -155), 0), 100000000, 0, -154), 0, (("library/libobject.mli", 167, 6220, 6220), ("library/libobject.mli", 168, 6241, 6284), 0), 0, Tag1 ("Libobject", 46)), 0); (("declare_object_full", 683), ((Tag1 (0, (Tag3 ((("object_declaration", 666)), [((("a")), 100000000, 0, -150); (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -153); ((("a")), 100000000, 0, -150)]), 100000000, 0, -152)], (0)), 100000000, 0, -151), (Tag3 (Tag1 ((("Dyn", 677)), "tag"), [((("a")), 100000000, 0, -150)], (0)), 100000000, 0, -149), 0), 100000000, 0, -148), 0, (("library/libobject.mli", 170, 6286, 6286), ("library/libobject.mli", 171, 6312, 6370), 0), 0, Tag1 ("Libobject", 47)), 0); (("declare_named_object_full", 684), ((Tag1 (0, (Tag3 ((("object_declaration", 666)), [((("a")), 100000000, 0, -144); (Tag2 ([(Tag3 ((("object_name", 664)), 0, (0)), 100000000, 0, -147); ((("a")), 100000000, 0, -144)]), 100000000, 0, -146)], (0)), 100000000, 0, -145), (Tag3 (Tag1 ((("Dyn", 677)), "tag"), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -143); ((("a")), 100000000, 0, -144)]), 100000000, 0, -142)], (0)), 100000000, 0, -141), 0), 100000000, 0, -140), 0, (("library/libobject.mli", 173, 6372, 6372), ("library/libobject.mli", 174, 6404, 6469), 0), 0, Tag1 ("Libobject", 48)), 0); (("declare_named_object", 685), ((Tag1 (0, (Tag3 ((("object_declaration", 666)), [((("a")), 100000000, 0, -135); (Tag2 ([(Tag3 ((("object_name", 664)), 0, (0)), 100000000, 0, -139); ((("a")), 100000000, 0, -135)]), 100000000, 0, -138)], (0)), 100000000, 0, -137), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -136), (Tag1 (0, ((("a")), 100000000, 0, -135), (Tag3 ((("obj", 678)), 0, (0)), 100000000, 0, -134), 0), 100000000, 0, -133), 0), 100000000, 0, -132), 0), 100000000, 0, -131), 0, (("library/libobject.mli", 176, 6471, 6471), ("library/libobject.mli", 177, 6498, 6563), 0), 0, Tag1 ("Libobject", 49)), 0); (("declare_named_object_gen", 686), ((Tag1 (0, (Tag3 ((("object_declaration", 666)), [((("a")), 100000000, 0, -127); (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -130); ((("a")), 100000000, 0, -127)]), 100000000, 0, -129)], (0)), 100000000, 0, -128), (Tag1 (0, ((("a")), 100000000, 0, -127), (Tag3 ((("obj", 678)), 0, (0)), 100000000, 0, -126), 0), 100000000, 0, -125), 0), 100000000, 0, -124), 0, (("library/libobject.mli", 179, 6565, 6565), ("library/libobject.mli", 180, 6596, 6655), 0), 0, Tag1 ("Libobject", 50)), 0); (("cache_object", 687), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -122); (Tag3 ((("obj", 678)), 0, (0)), 100000000, 0, -123)]), 100000000, 0, -121), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -120), 0), 100000000, 0, -119), 0, (("library/libobject.mli", 182, 6657, 6657), ("library/libobject.mli", 182, 6657, 6703), 0), 0, Tag1 ("Libobject", 51)), 0); (("load_object", 688), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -118), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -116); (Tag3 ((("obj", 678)), 0, (0)), 100000000, 0, -117)]), 100000000, 0, -115), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -114), 0), 100000000, 0, -113), 0), 100000000, 0, -112), 0, (("library/libobject.mli", 183, 6704, 6704), ("library/libobject.mli", 183, 6704, 6756), 0), 0, Tag1 ("Libobject", 52)), 0); (("open_object", 689), ((Tag1 (0, (Tag3 ((("open_filter", 665)), 0, (0)), 100000000, 0, -111), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -110), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Nametab")), "object_prefix"), 0, (0)), 100000000, 0, -108); (Tag3 ((("obj", 678)), 0, (0)), 100000000, 0, -109)]), 100000000, 0, -107), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -106), 0), 100000000, 0, -105), 0), 100000000, 0, -104), 0), 100000000, 0, -103), 0, (("library/libobject.mli", 184, 6757, 6757), ("library/libobject.mli", 184, 6757, 6824), 0), 0, Tag1 ("Libobject", 53)), 0); (("subst_object", 690), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Mod_subst")), "substitution"), 0, (0)), 100000000, 0, -101); (Tag3 ((("obj", 678)), 0, (0)), 100000000, 0, -102)]), 100000000, 0, -100), (Tag3 ((("obj", 678)), 0, (0)), 100000000, 0, -99), 0), 100000000, 0, -98), 0, (("library/libobject.mli", 185, 6825, 6825), ("library/libobject.mli", 185, 6825, 6869), 0), 0, Tag1 ("Libobject", 54)), 0); (("classify_object", 691), ((Tag1 (0, (Tag3 ((("obj", 678)), 0, (0)), 100000000, 0, -97), (Tag3 ((("substitutivity", 663)), 0, (0)), 100000000, 0, -96), 0), 100000000, 0, -95), 0, (("library/libobject.mli", 186, 6870, 6870), ("library/libobject.mli", 186, 6870, 6913), 0), 0, Tag1 ("Libobject", 55)), 0); (("discharge_object", 692), ((Tag1 (0, (Tag3 ((("obj", 678)), 0, (0)), 100000000, 0, -94), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("obj", 678)), 0, (0)), 100000000, 0, -93)], (0)), 100000000, 0, -92), 0), 100000000, 0, -91), 0, (("library/libobject.mli", 187, 6914, 6914), ("library/libobject.mli", 187, 6914, 6954), 0), 0, Tag1 ("Libobject", 56)), 0); (("rebuild_object", 693), ((Tag1 (0, (Tag3 ((("obj", 678)), 0, (0)), 100000000, 0, -90), (Tag3 ((("obj", 678)), 0, (0)), 100000000, 0, -89), 0), 100000000, 0, -88), 0, (("library/libobject.mli", 188, 6955, 6955), ("library/libobject.mli", 188, 6955, 6986), 0), 0, Tag1 ("Libobject", 57)), 0); (("object_stage", 694), ((Tag1 (0, (Tag3 ((("obj", 678)), 0, (0)), 100000000, 0, -87), (Tag3 (Tag1 (Tag1 ((Tag2 ("Summary")), "Stage"), "t"), 0, (0)), 100000000, 0, -86), 0), 100000000, 0, -85), 0, (("library/libobject.mli", 189, 6987, 6987), ("library/libobject.mli", 189, 6987, 7028), 0), 0, Tag1 ("Libobject", 58)), 0); (("local_object", 695), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -84), (Tag1 (("cache"), (Tag1 (0, ((("a")), 100000000, 0, -79), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -83), 0), 100000000, 0, -82), (Tag1 (("discharge"), (Tag1 (0, ((("a")), 100000000, 0, -79), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -79)], (0)), 100000000, 0, -81), 0), 100000000, 0, -80), (Tag3 ((("object_declaration", 666)), [((("a")), 100000000, 0, -79); ((("a")), 100000000, 0, -79)], (0)), 100000000, 0, -78), 0), 100000000, 0, -77), 0), 100000000, 0, -76), 0), 100000000, 0, -75), 0, (("library/libobject.mli", 205, 7593, 7593), ("library/libobject.mli", 208, 7679, 7707), 0), 0, Tag1 ("Libobject", 59)), 0); (("local_object_nodischarge", 696), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -74), (Tag1 (("cache"), (Tag1 (0, ((("a")), 100000000, 0, -71), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -73), 0), 100000000, 0, -72), (Tag3 ((("object_declaration", 666)), [((("a")), 100000000, 0, -71); ((("a")), 100000000, 0, -71)], (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("library/libobject.mli", 210, 7709, 7709), ("library/libobject.mli", 212, 7774, 7802), 0), 0, Tag1 ("Libobject", 60)), 0); (("global_object", 697), ((Tag1 (Tag1 ("cat"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("category", 669)), 0, (0)), 100000000, 0, -67)], (0)), 100000000, 0, -66), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -65), (Tag1 (("cache"), (Tag1 (0, ((("a")), 100000000, 0, -56), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -64), 0), 100000000, 0, -63), (Tag1 (("subst"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Mod_subst")), "substitution"), 0, (0)), 100000000, 0, -62); ((("a")), 100000000, 0, -56)]), 100000000, 0, -61), ((("a")), 100000000, 0, -56), 0), 100000000, 0, -60)], (0)), 100000000, 0, -59), (Tag1 (("discharge"), (Tag1 (0, ((("a")), 100000000, 0, -56), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -56)], (0)), 100000000, 0, -58), 0), 100000000, 0, -57), (Tag3 ((("object_declaration", 666)), [((("a")), 100000000, 0, -56); ((("a")), 100000000, 0, -56)], (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0), 100000000, 0, -50), 0, (("library/libobject.mli", 214, 7804, 7804), ("library/libobject.mli", 218, 7962, 7990), 0), 0, Tag1 ("Libobject", 61)), 0); (("global_object_nodischarge", 698), ((Tag1 (Tag1 ("cat"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("category", 669)), 0, (0)), 100000000, 0, -49)], (0)), 100000000, 0, -48), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -47), (Tag1 (("cache"), (Tag1 (0, ((("a")), 100000000, 0, -40), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), (Tag1 (("subst"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Mod_subst")), "substitution"), 0, (0)), 100000000, 0, -44); ((("a")), 100000000, 0, -40)]), 100000000, 0, -43), ((("a")), 100000000, 0, -40), 0), 100000000, 0, -42)], (0)), 100000000, 0, -41), (Tag3 ((("object_declaration", 666)), [((("a")), 100000000, 0, -40); ((("a")), 100000000, 0, -40)], (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0), 100000000, 0, -37), 0), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("library/libobject.mli", 220, 7992, 7992), ("library/libobject.mli", 223, 8129, 8157), 0), 0, Tag1 ("Libobject", 62)), 0); (("superglobal_object", 699), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -34), (Tag1 (("cache"), (Tag1 (0, ((("a")), 100000000, 0, -25), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), (Tag1 (("subst"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Mod_subst")), "substitution"), 0, (0)), 100000000, 0, -31); ((("a")), 100000000, 0, -25)]), 100000000, 0, -30), ((("a")), 100000000, 0, -25), 0), 100000000, 0, -29)], (0)), 100000000, 0, -28), (Tag1 (("discharge"), (Tag1 (0, ((("a")), 100000000, 0, -25), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -25)], (0)), 100000000, 0, -27), 0), 100000000, 0, -26), (Tag3 ((("object_declaration", 666)), [((("a")), 100000000, 0, -25); ((("a")), 100000000, 0, -25)], (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("library/libobject.mli", 225, 8159, 8159), ("library/libobject.mli", 229, 8305, 8333), 0), 0, Tag1 ("Libobject", 63)), 0); (("superglobal_object_nodischarge", 700), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -19), (Tag1 (("cache"), (Tag1 (0, ((("a")), 100000000, 0, -12), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), (Tag1 (("subst"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Mod_subst")), "substitution"), 0, (0)), 100000000, 0, -16); ((("a")), 100000000, 0, -12)]), 100000000, 0, -15), ((("a")), 100000000, 0, -12), 0), 100000000, 0, -14)], (0)), 100000000, 0, -13), (Tag3 ((("object_declaration", 666)), [((("a")), 100000000, 0, -12); ((("a")), 100000000, 0, -12)], (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("library/libobject.mli", 231, 8335, 8335), ("library/libobject.mli", 234, 8460, 8488), 0), 0, Tag1 ("Libobject", 64)), 0); (("dump", 701), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -5); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6)]), 100000000, 0, -4)], (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("library/libobject.mli", 238, 8508, 8508), ("library/libobject.mli", 238, 8508, 8546), 0), 0, Tag1 ("Libobject", 65)), 0)], "Libobject", [("Libobject", ("\132}t\226hl\213L\210\172\167pc\012~\129")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Nametab", ("1\018\163\254\225\2178\025DI\0271Q\198\134\140")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Globnames", ("W\004\172T\214\181H\220\232\160LSW\006\130\226")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Deprecation", ("\226:\146\245\190;\1929\254@\247a\218\244\134\189")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CWarnings", ("\132\220\150\227\215\239t\217\132\220'JX\188\246c")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])

val dump : unit -> (int * string) list
