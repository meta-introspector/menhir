type t = { re : float; im : float; }
val zero : t
val one : t
val i : t
val neg : t -> t
val conj : t -> t
val add : t -> t -> t
val sub : t -> t -> t
val mul : t -> t -> t
val inv : t -> t
val div : t -> t -> t
val sqrt : t -> t
val norm2 : t -> float
val norm : t -> float
val arg : t -> float
val polar : float -> float -> t
val exp : t -> t
val log : t -> t("DEBUG:rule", [Tag1 (("t", 290), (0, 0, ([(("re", 270), 0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -62), (("complex.mli", 23, 1366, 1377), ("complex.mli", 23, 1366, 1387), 0), 0, Tag1 ("Stdlib__Complex", 1)); (("im", 271), 0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -63), (("complex.mli", 23, 1366, 1388), ("complex.mli", 23, 1366, 1397), 0), 0, Tag1 ("Stdlib__Complex", 2))], 1), 1, 0, 0, 0, 0, 0, (("complex.mli", 23, 1366, 1366), ("complex.mli", 23, 1366, 1399), 0), 0, 0, 0, Tag1 ("Stdlib__Complex", 0)), 1, 0); (("zero", 291), ((Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -61), 0, (("complex.mli", 27, 1493, 1493), ("complex.mli", 27, 1493, 1504), 0), 0, Tag1 ("Stdlib__Complex", 3)), 0); (("one", 292), ((Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -60), 0, (("complex.mli", 30, 1537, 1537), ("complex.mli", 30, 1537, 1547), 0), 0, Tag1 ("Stdlib__Complex", 4)), 0); (("i", 293), ((Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -59), 0, (("complex.mli", 33, 1580, 1580), ("complex.mli", 33, 1580, 1588), 0), 0, Tag1 ("Stdlib__Complex", 5)), 0); (("neg", 294), ((Tag1 (0, (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -58), (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("complex.mli", 36, 1621, 1621), ("complex.mli", 36, 1621, 1636), 0), 0, Tag1 ("Stdlib__Complex", 6)), 0); (("conj", 295), ((Tag1 (0, (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -55), (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("complex.mli", 39, 1661, 1661), ("complex.mli", 39, 1661, 1677), 0), 0, Tag1 ("Stdlib__Complex", 7)), 0); (("add", 296), ((Tag1 (0, (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -52), (Tag1 (0, (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -51), (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("complex.mli", 42, 1745, 1745), ("complex.mli", 42, 1745, 1765), 0), 0, Tag1 ("Stdlib__Complex", 8)), 0); (("sub", 297), ((Tag1 (0, (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -47), (Tag1 (0, (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -46), (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("complex.mli", 45, 1783, 1783), ("complex.mli", 45, 1783, 1803), 0), 0, Tag1 ("Stdlib__Complex", 9)), 0); (("mul", 298), ((Tag1 (0, (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -42), (Tag1 (0, (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -41), (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("complex.mli", 48, 1824, 1824), ("complex.mli", 48, 1824, 1844), 0), 0, Tag1 ("Stdlib__Complex", 10)), 0); (("inv", 299), ((Tag1 (0, (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -37), (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("complex.mli", 51, 1868, 1868), ("complex.mli", 51, 1868, 1883), 0), 0, Tag1 ("Stdlib__Complex", 11)), 0); (("div", 300), ((Tag1 (0, (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -34), (Tag1 (0, (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -33), (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("complex.mli", 54, 1924, 1924), ("complex.mli", 54, 1924, 1944), 0), 0, Tag1 ("Stdlib__Complex", 12)), 0); (("sqrt", 301), ((Tag1 (0, (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -29), (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("complex.mli", 57, 1962, 1962), ("complex.mli", 57, 1962, 1978), 0), 0, Tag1 ("Stdlib__Complex", 13)), 0); (("norm2", 302), ((Tag1 (0, (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -26), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("complex.mli", 62, 2140, 2140), ("complex.mli", 62, 2140, 2161), 0), 0, Tag1 ("Stdlib__Complex", 14)), 0); (("norm", 303), ((Tag1 (0, (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -23), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("complex.mli", 65, 2222, 2222), ("complex.mli", 65, 2222, 2242), 0), 0, Tag1 ("Stdlib__Complex", 15)), 0); (("arg", 304), ((Tag1 (0, (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -20), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("complex.mli", 68, 2301, 2301), ("complex.mli", 68, 2301, 2320), 0), 0, Tag1 ("Stdlib__Complex", 16)), 0); (("polar", 305), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -17), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -16), (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("complex.mli", 75, 2606, 2606), ("complex.mli", 75, 2606, 2636), 0), 0, Tag1 ("Stdlib__Complex", 17)), 0); (("exp", 306), ((Tag1 (0, (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -12), (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("complex.mli", 79, 2725, 2725), ("complex.mli", 79, 2725, 2740), 0), 0, Tag1 ("Stdlib__Complex", 18)), 0); (("log", 307), ((Tag1 (0, (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -9), (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("complex.mli", 82, 2804, 2804), ("complex.mli", 82, 2804, 2819), 0), 0, Tag1 ("Stdlib__Complex", 19)), 0); (("pow", 308), ((Tag1 (0, (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -5), (Tag3 ((("t", 290)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("complex.mli", 85, 2861, 2861), ("complex.mli", 85, 2861, 2881), 0), 0, Tag1 ("Stdlib__Complex", 20)), 0)], "Stdlib__Complex", [("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val pow : t -> t -> t
