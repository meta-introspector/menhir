type nat
external create_nat : int -> nat = "create_nat"
val make_nat : int -> nat
external set_to_zero_nat : nat -> int -> int -> unit = "set_to_zero_nat"
external blit_nat : nat -> int -> nat -> int -> int -> unit = "blit_nat"
val copy_nat : nat -> int -> int -> nat
external set_digit_nat : nat -> int -> int -> unit = "set_digit_nat"
external nth_digit_nat : nat -> int -> int = "nth_digit_nat"
external set_digit_nat_native : nat -> int -> nativeint -> unit
  = "set_digit_nat_native"
external nth_digit_nat_native : nat -> int -> nativeint
  = "nth_digit_nat_native"
val length_nat : nat -> int
external num_digits_nat : nat -> int -> int -> int = "num_digits_nat"
external num_leading_zero_bits_in_digit : nat -> int -> int
  = "num_leading_zero_bits_in_digit"
external is_digit_int : nat -> int -> bool = "is_digit_int"
external is_digit_zero : nat -> int -> bool = "is_digit_zero"
external is_digit_normalized : nat -> int -> bool = "is_digit_normalized"
external is_digit_odd : nat -> int -> bool = "is_digit_odd"
val is_zero_nat : nat -> int -> int -> bool
val is_nat_int : nat -> int -> int -> bool
val int_of_nat : nat -> int
val nat_of_int : int -> nat
external incr_nat : nat -> int -> int -> int -> int = "incr_nat"
external add_nat : nat -> int -> int -> nat -> int -> int -> int -> int
  = "add_nat" "add_nat_native"
external complement_nat : nat -> int -> int -> unit = "complement_nat"
external decr_nat : nat -> int -> int -> int -> int = "decr_nat"
external sub_nat : nat -> int -> int -> nat -> int -> int -> int -> int
  = "sub_nat" "sub_nat_native"
external mult_digit_nat :
  nat -> int -> int -> nat -> int -> int -> nat -> int -> int
  = "mult_digit_nat" "mult_digit_nat_native"
external mult_nat :
  nat -> int -> int -> nat -> int -> int -> nat -> int -> int -> int
  = "mult_nat" "mult_nat_native"
external square_nat : nat -> int -> int -> nat -> int -> int -> int
  = "square_nat" "square_nat_native"
external shift_left_nat : nat -> int -> int -> nat -> int -> int -> unit
  = "shift_left_nat" "shift_left_nat_native"
external div_digit_nat :
  nat -> int -> nat -> int -> nat -> int -> int -> nat -> int -> unit
  = "div_digit_nat" "div_digit_nat_native"
external div_nat : nat -> int -> int -> nat -> int -> int -> unit = "div_nat"
  "div_nat_native"
external shift_right_nat : nat -> int -> int -> nat -> int -> int -> unit
  = "shift_right_nat" "shift_right_nat_native"
external compare_digits_nat : nat -> int -> nat -> int -> int
  = "compare_digits_nat"
external compare_nat : nat -> int -> int -> nat -> int -> int -> int
  = "compare_nat" "compare_nat_native"
val eq_nat : nat -> int -> int -> nat -> int -> int -> bool
val le_nat : nat -> int -> int -> nat -> int -> int -> bool
val lt_nat : nat -> int -> int -> nat -> int -> int -> bool
val ge_nat : nat -> int -> int -> nat -> int -> int -> bool
val gt_nat : nat -> int -> int -> nat -> int -> int -> bool
external land_digit_nat : nat -> int -> nat -> int -> unit = "land_digit_nat"
external lor_digit_nat : nat -> int -> nat -> int -> unit = "lor_digit_nat"
external lxor_digit_nat : nat -> int -> nat -> int -> unit = "lxor_digit_nat"
val gcd_nat : nat -> int -> int -> nat -> int -> int -> int
val sqrt_nat : nat -> int -> int -> nat
val string_of_nat : nat -> string
val nat_of_string : string -> nat
val sys_nat_of_string : int -> string -> int -> int -> nat
val float_of_nat : nat -> float
val make_power_base : int -> nat -> int * int
val power_base_int : int -> int -> nat("DEBUG:rule", [Tag1 (("nat", 321), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("nat.mli", 18, 1130, 1130), ("nat.mli", 18, 1130, 1138), 0), 0, 0, 0, Tag1 ("Nat", 0)), 1, 0); (("create_nat", 322), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -438), (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -437), 0), 100000000, 0, -436), (("create_nat", 1, 1, "", [0], 0)), (("nat.mli", 23, 1268, 1268), ("nat.mli", 23, 1268, 1314), 0), 0, Tag1 ("Nat", 1)), 0); (("make_nat", 323), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -435), (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -434), 0), 100000000, 0, -433), 0, (("nat.mli", 24, 1315, 1315), ("nat.mli", 24, 1315, 1339), 0), 0, Tag1 ("Nat", 2)), 0); (("set_to_zero_nat", 324), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -432), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -431), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -430), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -429), 0), 100000000, 0, -428), 0), 100000000, 0, -427), 0), 100000000, 0, -426), (("set_to_zero_nat", 3, 1, "", [0; 0; 0], 0)), (("nat.mli", 25, 1340, 1340), ("nat.mli", 25, 1340, 1411), 0), 0, Tag1 ("Nat", 3)), 0); (("blit_nat", 325), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -425), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -424), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -423), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -422), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -421), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -420), 0), 100000000, 0, -419), 0), 100000000, 0, -418), 0), 100000000, 0, -417), 0), 100000000, 0, -416), 0), 100000000, 0, -415), (("blit_nat", 5, 1, "", [0; 0; 0; 0; 0], 0)), (("nat.mli", 26, 1412, 1412), ("nat.mli", 26, 1412, 1483), 0), 0, Tag1 ("Nat", 4)), 0); (("copy_nat", 326), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -414), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -413), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -412), (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -411), 0), 100000000, 0, -410), 0), 100000000, 0, -409), 0), 100000000, 0, -408), 0, (("nat.mli", 27, 1484, 1484), ("nat.mli", 27, 1484, 1522), 0), 0, Tag1 ("Nat", 5)), 0); (("set_digit_nat", 327), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -407), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -406), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -405), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -404), 0), 100000000, 0, -403), 0), 100000000, 0, -402), 0), 100000000, 0, -401), (("set_digit_nat", 3, 1, "", [0; 0; 0], 0)), (("nat.mli", 28, 1523, 1523), ("nat.mli", 28, 1523, 1590), 0), 0, Tag1 ("Nat", 6)), 0); (("nth_digit_nat", 328), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -400), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -399), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -398), 0), 100000000, 0, -397), 0), 100000000, 0, -396), (("nth_digit_nat", 2, 1, "", [0; 0], 0)), (("nat.mli", 29, 1591, 1591), ("nat.mli", 29, 1591, 1650), 0), 0, Tag1 ("Nat", 7)), 0); (("set_digit_nat_native", 329), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -395), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -394), (Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -393), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -392), 0), 100000000, 0, -391), 0), 100000000, 0, -390), 0), 100000000, 0, -389), (("set_digit_nat_native", 3, 1, "", [0; 0; 0], 0)), (("nat.mli", 30, 1651, 1651), ("nat.mli", 31, 1714, 1767), 0), 0, Tag1 ("Nat", 8)), 0); (("nth_digit_nat_native", 330), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -388), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -387), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -386), 0), 100000000, 0, -385), 0), 100000000, 0, -384), (("nth_digit_nat_native", 2, 1, "", [0; 0], 0)), (("nat.mli", 32, 1768, 1768), ("nat.mli", 32, 1768, 1847), 0), 0, Tag1 ("Nat", 9)), 0); (("length_nat", 331), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -383), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -382), 0), 100000000, 0, -381), 0, (("nat.mli", 33, 1848, 1848), ("nat.mli", 33, 1848, 1875), 0), 0, Tag1 ("Nat", 10)), 0); (("num_digits_nat", 332), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -380), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -379), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -378), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -377), 0), 100000000, 0, -376), 0), 100000000, 0, -375), 0), 100000000, 0, -374), (("num_digits_nat", 3, 1, "", [0; 0; 0], 0)), (("nat.mli", 34, 1876, 1876), ("nat.mli", 34, 1876, 1944), 0), 0, Tag1 ("Nat", 11)), 0); (("num_leading_zero_bits_in_digit", 333), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -373), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -372), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -371), 0), 100000000, 0, -370), 0), 100000000, 0, -369), (("num_leading_zero_bits_in_digit", 2, 1, "", [0; 0], 0)), (("nat.mli", 35, 1945, 1945), ("nat.mli", 36, 2004, 2077), 0), 0, Tag1 ("Nat", 12)), 0); (("is_digit_int", 334), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -368), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -367), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -366), 0), 100000000, 0, -365), 0), 100000000, 0, -364), (("is_digit_int", 2, 1, "", [0; 0], 0)), (("nat.mli", 37, 2078, 2078), ("nat.mli", 37, 2078, 2136), 0), 0, Tag1 ("Nat", 13)), 0); (("is_digit_zero", 335), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -363), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -362), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -361), 0), 100000000, 0, -360), 0), 100000000, 0, -359), (("is_digit_zero", 2, 1, "", [0; 0], 0)), (("nat.mli", 38, 2137, 2137), ("nat.mli", 38, 2137, 2197), 0), 0, Tag1 ("Nat", 14)), 0); (("is_digit_normalized", 336), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -358), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -357), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -356), 0), 100000000, 0, -355), 0), 100000000, 0, -354), (("is_digit_normalized", 2, 1, "", [0; 0], 0)), (("nat.mli", 39, 2198, 2198), ("nat.mli", 39, 2198, 2270), 0), 0, Tag1 ("Nat", 15)), 0); (("is_digit_odd", 337), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -353), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -352), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -351), 0), 100000000, 0, -350), 0), 100000000, 0, -349), (("is_digit_odd", 2, 1, "", [0; 0], 0)), (("nat.mli", 40, 2271, 2271), ("nat.mli", 40, 2271, 2329), 0), 0, Tag1 ("Nat", 16)), 0); (("is_zero_nat", 338), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -348), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -347), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -346), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -345), 0), 100000000, 0, -344), 0), 100000000, 0, -343), 0), 100000000, 0, -342), 0, (("nat.mli", 41, 2330, 2330), ("nat.mli", 41, 2330, 2372), 0), 0, Tag1 ("Nat", 17)), 0); (("is_nat_int", 339), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -341), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -340), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -339), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -338), 0), 100000000, 0, -337), 0), 100000000, 0, -336), 0), 100000000, 0, -335), 0, (("nat.mli", 42, 2373, 2373), ("nat.mli", 42, 2373, 2414), 0), 0, Tag1 ("Nat", 18)), 0); (("int_of_nat", 340), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -334), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -333), 0), 100000000, 0, -332), 0, (("nat.mli", 43, 2415, 2415), ("nat.mli", 43, 2415, 2441), 0), 0, Tag1 ("Nat", 19)), 0); (("nat_of_int", 341), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -331), (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -330), 0), 100000000, 0, -329), 0, (("nat.mli", 44, 2442, 2442), ("nat.mli", 44, 2442, 2468), 0), 0, Tag1 ("Nat", 20)), 0); (("incr_nat", 342), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -328), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -327), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -326), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -325), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -324), 0), 100000000, 0, -323), 0), 100000000, 0, -322), 0), 100000000, 0, -321), 0), 100000000, 0, -320), (("incr_nat", 4, 1, "", [0; 0; 0; 0], 0)), (("nat.mli", 45, 2469, 2469), ("nat.mli", 45, 2469, 2532), 0), 0, Tag1 ("Nat", 21)), 0); (("add_nat", 343), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -319), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -318), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -317), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -316), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -315), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -314), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -313), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -312), 0), 100000000, 0, -311), 0), 100000000, 0, -310), 0), 100000000, 0, -309), 0), 100000000, 0, -308), 0), 100000000, 0, -307), 0), 100000000, 0, -306), 0), 100000000, 0, -305), (("add_nat", 7, 1, "add_nat_native", [0; 0; 0; 0; 0; 0; 0], 0)), (("nat.mli", 46, 2533, 2533), ("nat.mli", 47, 2604, 2648), 0), 0, Tag1 ("Nat", 22)), 0); (("complement_nat", 344), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -304), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -303), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -302), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -301), 0), 100000000, 0, -300), 0), 100000000, 0, -299), 0), 100000000, 0, -298), (("complement_nat", 3, 1, "", [0; 0; 0], 0)), (("nat.mli", 48, 2649, 2649), ("nat.mli", 48, 2649, 2718), 0), 0, Tag1 ("Nat", 23)), 0); (("decr_nat", 345), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -297), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -296), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -295), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -294), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -293), 0), 100000000, 0, -292), 0), 100000000, 0, -291), 0), 100000000, 0, -290), 0), 100000000, 0, -289), (("decr_nat", 4, 1, "", [0; 0; 0; 0], 0)), (("nat.mli", 49, 2719, 2719), ("nat.mli", 49, 2719, 2782), 0), 0, Tag1 ("Nat", 24)), 0); (("sub_nat", 346), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -288), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -287), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -286), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -285), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -284), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -283), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -282), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -281), 0), 100000000, 0, -280), 0), 100000000, 0, -279), 0), 100000000, 0, -278), 0), 100000000, 0, -277), 0), 100000000, 0, -276), 0), 100000000, 0, -275), 0), 100000000, 0, -274), (("sub_nat", 7, 1, "sub_nat_native", [0; 0; 0; 0; 0; 0; 0], 0)), (("nat.mli", 50, 2783, 2783), ("nat.mli", 51, 2854, 2898), 0), 0, Tag1 ("Nat", 25)), 0); (("mult_digit_nat", 347), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -273), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -272), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -271), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -270), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -269), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -268), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -267), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -266), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -265), 0), 100000000, 0, -264), 0), 100000000, 0, -263), 0), 100000000, 0, -262), 0), 100000000, 0, -261), 0), 100000000, 0, -260), 0), 100000000, 0, -259), 0), 100000000, 0, -258), 0), 100000000, 0, -257), (("mult_digit_nat", 8, 1, "mult_digit_nat_native", [0; 0; 0; 0; 0; 0; 0; 0], 0)), (("nat.mli", 52, 2899, 2899), ("nat.mli", 54, 2988, 3032), 0), 0, Tag1 ("Nat", 26)), 0); (("mult_nat", 348), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -256), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -255), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -254), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -253), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -252), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -251), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -250), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -249), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -248), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -247), 0), 100000000, 0, -246), 0), 100000000, 0, -245), 0), 100000000, 0, -244), 0), 100000000, 0, -243), 0), 100000000, 0, -242), 0), 100000000, 0, -241), 0), 100000000, 0, -240), 0), 100000000, 0, -239), 0), 100000000, 0, -238), (("mult_nat", 9, 1, "mult_nat_native", [0; 0; 0; 0; 0; 0; 0; 0; 0], 0)), (("nat.mli", 55, 3033, 3033), ("nat.mli", 57, 3123, 3155), 0), 0, Tag1 ("Nat", 27)), 0); (("square_nat", 349), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -237), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -236), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -235), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -234), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -233), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -232), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -231), 0), 100000000, 0, -230), 0), 100000000, 0, -229), 0), 100000000, 0, -228), 0), 100000000, 0, -227), 0), 100000000, 0, -226), 0), 100000000, 0, -225), (("square_nat", 6, 1, "square_nat_native", [0; 0; 0; 0; 0; 0], 0)), (("nat.mli", 58, 3156, 3156), ("nat.mli", 59, 3223, 3276), 0), 0, Tag1 ("Nat", 28)), 0); (("shift_left_nat", 350), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -224), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -223), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -222), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -221), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -220), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -219), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -218), 0), 100000000, 0, -217), 0), 100000000, 0, -216), 0), 100000000, 0, -215), 0), 100000000, 0, -214), 0), 100000000, 0, -213), 0), 100000000, 0, -212), (("shift_left_nat", 6, 1, "shift_left_nat_native", [0; 0; 0; 0; 0; 0], 0)), (("nat.mli", 60, 3277, 3277), ("nat.mli", 61, 3349, 3414), 0), 0, Tag1 ("Nat", 29)), 0); (("div_digit_nat", 351), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -211), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -210), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -209), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -208), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -207), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -206), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -205), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -204), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -203), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -202), 0), 100000000, 0, -201), 0), 100000000, 0, -200), 0), 100000000, 0, -199), 0), 100000000, 0, -198), 0), 100000000, 0, -197), 0), 100000000, 0, -196), 0), 100000000, 0, -195), 0), 100000000, 0, -194), 0), 100000000, 0, -193), (("div_digit_nat", 9, 1, "div_digit_nat_native", [0; 0; 0; 0; 0; 0; 0; 0; 0], 0)), (("nat.mli", 62, 3415, 3415), ("nat.mli", 64, 3511, 3553), 0), 0, Tag1 ("Nat", 30)), 0); (("div_nat", 352), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -192), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -191), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -190), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -189), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -188), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -187), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -186), 0), 100000000, 0, -185), 0), 100000000, 0, -184), 0), 100000000, 0, -183), 0), 100000000, 0, -182), 0), 100000000, 0, -181), 0), 100000000, 0, -180), (("div_nat", 6, 1, "div_nat_native", [0; 0; 0; 0; 0; 0], 0)), (("nat.mli", 65, 3554, 3554), ("nat.mli", 66, 3619, 3663), 0), 0, Tag1 ("Nat", 31)), 0); (("shift_right_nat", 353), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -179), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -178), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -177), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -176), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -175), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -174), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -173), 0), 100000000, 0, -172), 0), 100000000, 0, -171), 0), 100000000, 0, -170), 0), 100000000, 0, -169), 0), 100000000, 0, -168), 0), 100000000, 0, -167), (("shift_right_nat", 6, 1, "shift_right_nat_native", [0; 0; 0; 0; 0; 0], 0)), (("nat.mli", 67, 3664, 3664), ("nat.mli", 68, 3737, 3805), 0), 0, Tag1 ("Nat", 32)), 0); (("compare_digits_nat", 354), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -166), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -165), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -164), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -163), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -162), 0), 100000000, 0, -161), 0), 100000000, 0, -160), 0), 100000000, 0, -159), 0), 100000000, 0, -158), (("compare_digits_nat", 4, 1, "", [0; 0; 0; 0], 0)), (("nat.mli", 69, 3806, 3806), ("nat.mli", 70, 3867, 3916), 0), 0, Tag1 ("Nat", 33)), 0); (("compare_nat", 355), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -157), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -156), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -155), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -154), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -153), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -152), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -151), 0), 100000000, 0, -150), 0), 100000000, 0, -149), 0), 100000000, 0, -148), 0), 100000000, 0, -147), 0), 100000000, 0, -146), 0), 100000000, 0, -145), (("compare_nat", 6, 1, "compare_nat_native", [0; 0; 0; 0; 0; 0], 0)), (("nat.mli", 71, 3917, 3917), ("nat.mli", 72, 3985, 4041), 0), 0, Tag1 ("Nat", 34)), 0); (("eq_nat", 356), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -144), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -143), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -142), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -141), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -140), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -139), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -138), 0), 100000000, 0, -137), 0), 100000000, 0, -136), 0), 100000000, 0, -135), 0), 100000000, 0, -134), 0), 100000000, 0, -133), 0), 100000000, 0, -132), 0, (("nat.mli", 73, 4042, 4042), ("nat.mli", 73, 4042, 4101), 0), 0, Tag1 ("Nat", 35)), 0); (("le_nat", 357), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -131), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -130), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -129), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -128), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -127), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -126), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -125), 0), 100000000, 0, -124), 0), 100000000, 0, -123), 0), 100000000, 0, -122), 0), 100000000, 0, -121), 0), 100000000, 0, -120), 0), 100000000, 0, -119), 0, (("nat.mli", 74, 4102, 4102), ("nat.mli", 74, 4102, 4161), 0), 0, Tag1 ("Nat", 36)), 0); (("lt_nat", 358), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -118), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -117), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -116), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -115), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -114), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -113), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -112), 0), 100000000, 0, -111), 0), 100000000, 0, -110), 0), 100000000, 0, -109), 0), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), 0, (("nat.mli", 75, 4162, 4162), ("nat.mli", 75, 4162, 4221), 0), 0, Tag1 ("Nat", 37)), 0); (("ge_nat", 359), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -105), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -104), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -103), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -102), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -101), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -100), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -99), 0), 100000000, 0, -98), 0), 100000000, 0, -97), 0), 100000000, 0, -96), 0), 100000000, 0, -95), 0), 100000000, 0, -94), 0), 100000000, 0, -93), 0, (("nat.mli", 76, 4222, 4222), ("nat.mli", 76, 4222, 4281), 0), 0, Tag1 ("Nat", 38)), 0); (("gt_nat", 360), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -92), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -91), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -90), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -89), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -88), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -87), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -86), 0), 100000000, 0, -85), 0), 100000000, 0, -84), 0), 100000000, 0, -83), 0), 100000000, 0, -82), 0), 100000000, 0, -81), 0), 100000000, 0, -80), 0, (("nat.mli", 77, 4282, 4282), ("nat.mli", 77, 4282, 4341), 0), 0, Tag1 ("Nat", 39)), 0); (("land_digit_nat", 361), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -79), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -78), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -77), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -76), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), 0), 100000000, 0, -73), 0), 100000000, 0, -72), 0), 100000000, 0, -71), (("land_digit_nat", 4, 1, "", [0; 0; 0; 0], 0)), (("nat.mli", 78, 4342, 4342), ("nat.mli", 78, 4342, 4418), 0), 0, Tag1 ("Nat", 40)), 0); (("lor_digit_nat", 362), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -70), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -69), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -68), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -67), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0), 100000000, 0, -63), 0), 100000000, 0, -62), (("lor_digit_nat", 4, 1, "", [0; 0; 0; 0], 0)), (("nat.mli", 79, 4419, 4419), ("nat.mli", 79, 4419, 4493), 0), 0, Tag1 ("Nat", 41)), 0); (("lxor_digit_nat", 363), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -61), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -60), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -59), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -58), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), (("lxor_digit_nat", 4, 1, "", [0; 0; 0; 0], 0)), (("nat.mli", 80, 4494, 4494), ("nat.mli", 80, 4494, 4570), 0), 0, Tag1 ("Nat", 42)), 0); (("gcd_nat", 364), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -52), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -51), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -49), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -48), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -47), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("nat.mli", 81, 4571, 4571), ("nat.mli", 81, 4571, 4630), 0), 0, Tag1 ("Nat", 43)), 0); (("sqrt_nat", 365), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -39), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -38), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -37), (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0, (("nat.mli", 82, 4631, 4631), ("nat.mli", 82, 4631, 4670), 0), 0, Tag1 ("Nat", 44)), 0); (("string_of_nat", 366), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -32), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("nat.mli", 83, 4671, 4671), ("nat.mli", 83, 4671, 4704), 0), 0, Tag1 ("Nat", 45)), 0); (("nat_of_string", 367), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -29), (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("nat.mli", 84, 4705, 4705), ("nat.mli", 84, 4705, 4738), 0), 0, Tag1 ("Nat", 46)), 0); (("sys_nat_of_string", 368), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -26), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -25), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -24), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -23), (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("nat.mli", 85, 4739, 4739), ("nat.mli", 85, 4739, 4797), 0), 0, Tag1 ("Nat", 47)), 0); (("float_of_nat", 369), ((Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -17), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("nat.mli", 86, 4798, 4798), ("nat.mli", 86, 4798, 4829), 0), 0, Tag1 ("Nat", 48)), 0); (("make_power_base", 370), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -14), (Tag1 (0, (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -13), (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -11); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -12)]), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("nat.mli", 87, 4830, 4830), ("nat.mli", 87, 4830, 4876), 0), 0, Tag1 ("Nat", 49)), 0); (("power_base_int", 371), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -6), (Tag3 ((("nat", 321)), 0, (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0, (("nat.mli", 88, 4877, 4877), ("nat.mli", 88, 4877, 4915), 0), 0, Tag1 ("Nat", 50)), 0); (("length_of_digit", 372), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2), 0, (("nat.mli", 89, 4916, 4916), ("nat.mli", 89, 4916, 4940), 0), 0, Tag1 ("Nat", 51)), 0)], "Nat", [("Nat", ("\158\218\202\184\174E)\133)>\025\209\140\204/Z")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val length_of_digit : int
