val register : pass_name:string -> unit
val with_dump :
  ppf_dump:Format.formatter ->
  pass_name:string ->
  f:(unit -> 'b option) ->
  input:'a ->
  print_input:(Format.formatter -> 'a -> unit) ->
  ("DEBUG:rule", [(("register", 427), ((Tag1 (("pass_name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -26), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("middle_end/flambda/pass_wrapper.mli", 17, 1156, 1156), ("middle_end/flambda/pass_wrapper.mli", 17, 1156, 1195), 0), 0, Tag1 ("Pass_wrapper", 0)), 0); (("with_dump", 428), ((Tag1 (("ppf_dump"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -23), (Tag1 (("pass_name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -22), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -21), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -9)], (0)), 100000000, 0, -20), 0), 100000000, 0, -19), (Tag1 (("input"), ((("a")), 100000000, 0, -17), (Tag1 (("print_input"), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -18), (Tag1 (0, ((("a")), 100000000, 0, -17), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), (Tag1 (("print_output"), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -13), (Tag1 (0, ((("b")), 100000000, 0, -9), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -9)], (0)), 100000000, 0, -8), 0), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("middle_end/flambda/pass_wrapper.mli", 19, 1197, 1197), ("middle_end/flambda/pass_wrapper.mli", 26, 1406, 1420), 0), 0, Tag1 ("Pass_wrapper", 1)), 0)], "Pass_wrapper", [("Pass_wrapper", ("\140L\"\002<\238\184\212\184[vd\243\223'f")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
print_output:(Format.formatter -> 'b -> unit) -> 'b option
