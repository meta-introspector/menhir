type delta_resolver
val empty_delta_resolver : delta_resolver
val add_mp_delta_resolver :
  Names.ModPath.t -> Names.ModPath.t -> delta_resolver -> delta_resolver
val add_kn_delta_resolver :
  Names.KerName.t -> Names.KerName.t -> delta_resolver -> delta_resolver
val add_inline_delta_resolver :
  Names.KerName.t ->
  int * Constr.constr Univ.univ_abstracted option ->
  delta_resolver -> delta_resolver
val add_delta_resolver : delta_resolver -> delta_resolver -> delta_resolver
val mp_of_delta : delta_resolver -> Names.ModPath.t -> Names.ModPath.t
val kn_of_delta : delta_resolver -> Names.KerName.t -> Names.KerName.t
val constant_of_delta_kn :
  delta_resolver -> Names.KerName.t -> Names.Constant.t
val constant_of_deltas_kn :
  delta_resolver -> delta_resolver -> Names.KerName.t -> Names.Constant.t
val mind_of_delta_kn : delta_resolver -> Names.KerName.t -> Names.MutInd.t
val mind_of_deltas_kn :
  delta_resolver -> delta_resolver -> Names.KerName.t -> Names.MutInd.t
val inline_of_delta :
  int option -> delta_resolver -> (int * Names.KerName.t) list
val mp_in_delta : Names.ModPath.t -> delta_resolver -> bool
val con_in_delta : Names.Constant.t -> delta_resolver -> bool
val mind_in_delta : Names.MutInd.t -> delta_resolver -> bool
type substitution
val empty_subst : substitution
val is_empty_subst : substitution -> bool
val add_mbid :
  Names.MBId.t ->
  Names.ModPath.t -> delta_resolver -> substitution -> substitution
val add_mp :
  Names.ModPath.t ->
  Names.ModPath.t -> delta_resolver -> substitution -> substitution
val map_mbid :
  Names.MBId.t -> Names.ModPath.t -> delta_resolver -> substitution
val map_mp :
  Names.ModPath.t -> Names.ModPath.t -> delta_resolver -> substitution
val join : substitution -> substitution -> substitution
val subst_dom_delta_resolver :
  substitution -> delta_resolver -> delta_resolver
val subst_codom_delta_resolver :
  substitution -> delta_resolver -> delta_resolver
val subst_dom_codom_delta_resolver :
  substitution -> delta_resolver -> delta_resolver
val debug_string_of_subst : substitution -> string
val debug_pr_subst : substitution -> Pp.t
val debug_string_of_delta : delta_resolver -> string
val debug_pr_delta : delta_resolver -> Pp.t
val subst_mp : substitution -> Names.ModPath.t -> Names.ModPath.t
val subst_mind : substitution -> Names.MutInd.t -> Names.MutInd.t
val subst_ind : substitution -> Names.inductive -> Names.inductive
val subst_constructor :
  substitution -> Names.constructor -> Names.constructor
val subst_pind : substitution -> Constr.pinductive -> Constr.pinductive
val subst_kn : substitution -> Names.KerName.t -> Names.KerName.t
val subst_con :
  substitution ->
  Names.Constant.t ->
  Names.Constant.t * Constr.constr Univ.univ_abstracted option
val subst_pcon : substitution -> Constr.pconstant -> Constr.pconstant
val subst_constant : substitution -> Names.Constant.t -> Names.Constant.t
val subst_proj_repr :
  substitution -> Names.Projection.Repr.t -> Names.Projection.Repr.t
val subst_proj : substitution -> Names.Projection.t -> Names.Projection.t
val subst_retro_action :
  substitution -> Retroknowledge.action -> Retroknowledge.action
val replace_mp_in_kn :
  Names.ModPath.t -> Names.ModPath.t -> Names.KerName.t -> Names.KerName.t
("DEBUG:rule", [Tag1 (("delta_resolver", 785), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("kernel/mod_subst.mli", 20, 843, 843), ("kernel/mod_subst.mli", 20, 843, 862), 0), 0, 0, 0, Tag1 ("Mod_subst", 1)), 1, 0); (("empty_delta_resolver", 786), ((Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -234), 0, (("kernel/mod_subst.mli", 22, 864, 864), ("kernel/mod_subst.mli", 22, 864, 905), 0), 0, Tag1 ("Mod_subst", 2)), 0); (("add_mp_delta_resolver", 787), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -233), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -232), (Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -231), (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -230), 0), 100000000, 0, -229), 0), 100000000, 0, -228), 0), 100000000, 0, -227), 0, (("kernel/mod_subst.mli", 24, 907, 907), ("kernel/mod_subst.mli", 25, 935, 995), 0), 0, Tag1 ("Mod_subst", 3)), 0); (("add_kn_delta_resolver", 788), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -226), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -225), (Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -224), (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -223), 0), 100000000, 0, -222), 0), 100000000, 0, -221), 0), 100000000, 0, -220), 0, (("kernel/mod_subst.mli", 27, 997, 997), ("kernel/mod_subst.mli", 28, 1025, 1085), 0), 0, Tag1 ("Mod_subst", 4)), 0); (("add_inline_delta_resolver", 789), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -219), (Tag1 (0, (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -215); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Univ")), "univ_abstracted"), [(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -218)], (0)), 100000000, 0, -217)], (0)), 100000000, 0, -216)]), 100000000, 0, -214), (Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -213), (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -212), 0), 100000000, 0, -211), 0), 100000000, 0, -210), 0), 100000000, 0, -209), 0, (("kernel/mod_subst.mli", 30, 1087, 1087), ("kernel/mod_subst.mli", 31, 1119, 1212), 0), 0, Tag1 ("Mod_subst", 5)), 0); (("add_delta_resolver", 790), ((Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -208), (Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -207), (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -206), 0), 100000000, 0, -205), 0), 100000000, 0, -204), 0, (("kernel/mod_subst.mli", 33, 1214, 1214), ("kernel/mod_subst.mli", 33, 1214, 1289), 0), 0, Tag1 ("Mod_subst", 6)), 0); (("mp_of_delta", 791), ((Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -203), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -202), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -201), 0), 100000000, 0, -200), 0), 100000000, 0, -199), 0, (("kernel/mod_subst.mli", 37, 1363, 1363), ("kernel/mod_subst.mli", 37, 1363, 1421), 0), 0, Tag1 ("Mod_subst", 7)), 0); (("kn_of_delta", 792), ((Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -198), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -197), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -196), 0), 100000000, 0, -195), 0), 100000000, 0, -194), 0, (("kernel/mod_subst.mli", 38, 1422, 1422), ("kernel/mod_subst.mli", 38, 1422, 1480), 0), 0, Tag1 ("Mod_subst", 8)), 0); (("constant_of_delta_kn", 793), ((Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -193), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -192), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -191), 0), 100000000, 0, -190), 0), 100000000, 0, -189), 0, (("kernel/mod_subst.mli", 42, 1555, 1555), ("kernel/mod_subst.mli", 42, 1555, 1623), 0), 0, Tag1 ("Mod_subst", 9)), 0); (("constant_of_deltas_kn", 794), ((Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -188), (Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -187), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -186), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -185), 0), 100000000, 0, -184), 0), 100000000, 0, -183), 0), 100000000, 0, -182), 0, (("kernel/mod_subst.mli", 46, 1696, 1696), ("kernel/mod_subst.mli", 47, 1724, 1785), 0), 0, Tag1 ("Mod_subst", 10)), 0); (("mind_of_delta_kn", 795), ((Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -181), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -180), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MutInd"), "t"), 0, (0)), 100000000, 0, -179), 0), 100000000, 0, -178), 0), 100000000, 0, -177), 0, (("kernel/mod_subst.mli", 51, 1820, 1820), ("kernel/mod_subst.mli", 51, 1820, 1882), 0), 0, Tag1 ("Mod_subst", 11)), 0); (("mind_of_deltas_kn", 796), ((Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -176), (Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -175), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -174), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MutInd"), "t"), 0, (0)), 100000000, 0, -173), 0), 100000000, 0, -172), 0), 100000000, 0, -171), 0), 100000000, 0, -170), 0, (("kernel/mod_subst.mli", 52, 1883, 1883), ("kernel/mod_subst.mli", 53, 1907, 1966), 0), 0, Tag1 ("Mod_subst", 12)), 0); (("inline_of_delta", 797), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -169)], (0)), 100000000, 0, -168), (Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -167), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -165); (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -166)]), 100000000, 0, -164)], (0)), 100000000, 0, -163), 0), 100000000, 0, -162), 0), 100000000, 0, -161), 0, (("kernel/mod_subst.mli", 56, 2027, 2027), ("kernel/mod_subst.mli", 56, 2027, 2103), 0), 0, Tag1 ("Mod_subst", 13)), 0); (("mp_in_delta", 798), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -160), (Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -159), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -158), 0), 100000000, 0, -157), 0), 100000000, 0, -156), 0, (("kernel/mod_subst.mli", 60, 2181, 2181), ("kernel/mod_subst.mli", 60, 2181, 2234), 0), 0, Tag1 ("Mod_subst", 14)), 0); (("con_in_delta", 799), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -155), (Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -154), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -153), 0), 100000000, 0, -152), 0), 100000000, 0, -151), 0, (("kernel/mod_subst.mli", 61, 2235, 2235), ("kernel/mod_subst.mli", 61, 2235, 2290), 0), 0, Tag1 ("Mod_subst", 15)), 0); (("mind_in_delta", 800), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MutInd"), "t"), 0, (0)), 100000000, 0, -150), (Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -149), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -148), 0), 100000000, 0, -147), 0), 100000000, 0, -146), 0, (("kernel/mod_subst.mli", 62, 2291, 2291), ("kernel/mod_subst.mli", 62, 2291, 2345), 0), 0, Tag1 ("Mod_subst", 16)), 0); Tag1 (("substitution", 801), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("kernel/mod_subst.mli", 67, 2373, 2373), ("kernel/mod_subst.mli", 67, 2373, 2390), 0), 0, 0, 0, Tag1 ("Mod_subst", 17)), 1, 0); (("empty_subst", 802), ((Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -145), 0, (("kernel/mod_subst.mli", 69, 2392, 2392), ("kernel/mod_subst.mli", 69, 2392, 2422), 0), 0, Tag1 ("Mod_subst", 18)), 0); (("is_empty_subst", 803), ((Tag1 (0, (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -144), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -143), 0), 100000000, 0, -142), 0, (("kernel/mod_subst.mli", 71, 2424, 2424), ("kernel/mod_subst.mli", 71, 2424, 2465), 0), 0, Tag1 ("Mod_subst", 19)), 0); (("add_mbid", 804), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MBId"), "t"), 0, (0)), 100000000, 0, -141), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -140), (Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -139), (Tag1 (0, (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -138), (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -137), 0), 100000000, 0, -136), 0), 100000000, 0, -135), 0), 100000000, 0, -134), 0), 100000000, 0, -133), 0, (("kernel/mod_subst.mli", 76, 2665, 2665), ("kernel/mod_subst.mli", 77, 2680, 2752), 0), 0, Tag1 ("Mod_subst", 20)), 0); (("add_mp", 805), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -132), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -131), (Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -130), (Tag1 (0, (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -129), (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -128), 0), 100000000, 0, -127), 0), 100000000, 0, -126), 0), 100000000, 0, -125), 0), 100000000, 0, -124), 0, (("kernel/mod_subst.mli", 78, 2753, 2753), ("kernel/mod_subst.mli", 79, 2766, 2840), 0), 0, Tag1 ("Mod_subst", 21)), 0); (("map_mbid", 806), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MBId"), "t"), 0, (0)), 100000000, 0, -123), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -122), (Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -121), (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -120), 0), 100000000, 0, -119), 0), 100000000, 0, -118), 0), 100000000, 0, -117), 0, (("kernel/mod_subst.mli", 82, 2901, 2901), ("kernel/mod_subst.mli", 83, 2916, 2971), 0), 0, Tag1 ("Mod_subst", 22)), 0); (("map_mp", 807), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -116), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -115), (Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -114), (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -113), 0), 100000000, 0, -112), 0), 100000000, 0, -111), 0), 100000000, 0, -110), 0, (("kernel/mod_subst.mli", 84, 2972, 2972), ("kernel/mod_subst.mli", 85, 2985, 3043), 0), 0, Tag1 ("Mod_subst", 23)), 0); (("join", 808), ((Tag1 (0, (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -109), (Tag1 (0, (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -108), (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -107), 0), 100000000, 0, -106), 0), 100000000, 0, -105), 0, (("kernel/mod_subst.mli", 90, 3149, 3149), ("kernel/mod_subst.mli", 90, 3149, 3204), 0), 0, Tag1 ("Mod_subst", 24)), 0); (("subst_dom_delta_resolver", 809), ((Tag1 (0, (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -104), (Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -103), (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -102), 0), 100000000, 0, -101), 0), 100000000, 0, -100), 0, (("kernel/mod_subst.mli", 94, 3268, 3268), ("kernel/mod_subst.mli", 94, 3268, 3347), 0), 0, Tag1 ("Mod_subst", 25)), 0); (("subst_codom_delta_resolver", 810), ((Tag1 (0, (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -99), (Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -98), (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -97), 0), 100000000, 0, -96), 0), 100000000, 0, -95), 0, (("kernel/mod_subst.mli", 97, 3412, 3412), ("kernel/mod_subst.mli", 98, 3445, 3495), 0), 0, Tag1 ("Mod_subst", 26)), 0); (("subst_dom_codom_delta_resolver", 811), ((Tag1 (0, (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -94), (Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -93), (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -92), 0), 100000000, 0, -91), 0), 100000000, 0, -90), 0, (("kernel/mod_subst.mli", 100, 3497, 3497), ("kernel/mod_subst.mli", 101, 3534, 3584), 0), 0, Tag1 ("Mod_subst", 27)), 0); (("debug_string_of_subst", 812), ((Tag1 (0, (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -89), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -88), 0), 100000000, 0, -87), 0, (("kernel/mod_subst.mli", 106, 3611, 3611), ("kernel/mod_subst.mli", 106, 3611, 3661), 0), 0, Tag1 ("Mod_subst", 28)), 0); (("debug_pr_subst", 813), ((Tag1 (0, (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -86), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -85), 0), 100000000, 0, -84), 0, (("kernel/mod_subst.mli", 107, 3662, 3662), ("kernel/mod_subst.mli", 107, 3662, 3703), 0), 0, Tag1 ("Mod_subst", 29)), 0); (("debug_string_of_delta", 814), ((Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -83), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -82), 0), 100000000, 0, -81), 0, (("kernel/mod_subst.mli", 108, 3704, 3704), ("kernel/mod_subst.mli", 108, 3704, 3756), 0), 0, Tag1 ("Mod_subst", 30)), 0); (("debug_pr_delta", 815), ((Tag1 (0, (Tag3 ((("delta_resolver", 785)), 0, (0)), 100000000, 0, -80), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -79), 0), 100000000, 0, -78), 0, (("kernel/mod_subst.mli", 109, 3757, 3757), ("kernel/mod_subst.mli", 109, 3757, 3800), 0), 0, Tag1 ("Mod_subst", 31)), 0); (("subst_mp", 816), ((Tag1 (0, (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -77), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -76), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), 0), 100000000, 0, -73), 0, (("kernel/mod_subst.mli", 116, 3963, 3963), ("kernel/mod_subst.mli", 117, 3978, 4018), 0), 0, Tag1 ("Mod_subst", 32)), 0); (("subst_mind", 817), ((Tag1 (0, (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -72), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MutInd"), "t"), 0, (0)), 100000000, 0, -71), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MutInd"), "t"), 0, (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("kernel/mod_subst.mli", 119, 4020, 4020), ("kernel/mod_subst.mli", 120, 4037, 4075), 0), 0, Tag1 ("Mod_subst", 33)), 0); (("subst_ind", 818), ((Tag1 (0, (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -67), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -66), (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -65), 0), 100000000, 0, -64), 0), 100000000, 0, -63), 0, (("kernel/mod_subst.mli", 122, 4077, 4077), ("kernel/mod_subst.mli", 123, 4093, 4133), 0), 0, Tag1 ("Mod_subst", 34)), 0); (("subst_constructor", 819), ((Tag1 (0, (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -62), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "constructor"), 0, (0)), 100000000, 0, -61), (Tag3 (Tag1 ((Tag2 ("Names")), "constructor"), 0, (0)), 100000000, 0, -60), 0), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("kernel/mod_subst.mli", 125, 4135, 4135), ("kernel/mod_subst.mli", 126, 4159, 4203), 0), 0, Tag1 ("Mod_subst", 35)), 0); (("subst_pind", 820), ((Tag1 (0, (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -57), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pinductive"), 0, (0)), 100000000, 0, -56), (Tag3 (Tag1 ((Tag2 ("Constr")), "pinductive"), 0, (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("kernel/mod_subst.mli", 128, 4205, 4205), ("kernel/mod_subst.mli", 128, 4205, 4262), 0), 0, Tag1 ("Mod_subst", 36)), 0); (("subst_kn", 821), ((Tag1 (0, (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -52), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -51), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("kernel/mod_subst.mli", 130, 4264, 4264), ("kernel/mod_subst.mli", 131, 4279, 4319), 0), 0, Tag1 ("Mod_subst", 37)), 0); (("subst_con", 822), ((Tag1 (0, (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -47), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -46), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -42); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Univ")), "univ_abstracted"), [(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -45)], (0)), 100000000, 0, -44)], (0)), 100000000, 0, -43)]), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("kernel/mod_subst.mli", 133, 4321, 4321), ("kernel/mod_subst.mli", 134, 4337, 4416), 0), 0, Tag1 ("Mod_subst", 38)), 0); (("subst_pcon", 823), ((Tag1 (0, (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -38), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pconstant"), 0, (0)), 100000000, 0, -37), (Tag3 (Tag1 ((Tag2 ("Constr")), "pconstant"), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("kernel/mod_subst.mli", 136, 4418, 4418), ("kernel/mod_subst.mli", 137, 4435, 4475), 0), 0, Tag1 ("Mod_subst", 39)), 0); (("subst_constant", 824), ((Tag1 (0, (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -33), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -32), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("kernel/mod_subst.mli", 139, 4477, 4477), ("kernel/mod_subst.mli", 140, 4498, 4540), 0), 0, Tag1 ("Mod_subst", 40)), 0); (("subst_proj_repr", 825), ((Tag1 (0, (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Projection"), "Repr"), "t"), 0, (0)), 100000000, 0, -27), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Projection"), "Repr"), "t"), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("kernel/mod_subst.mli", 142, 4542, 4542), ("kernel/mod_subst.mli", 142, 4542, 4618), 0), 0, Tag1 ("Mod_subst", 41)), 0); (("subst_proj", 826), ((Tag1 (0, (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -23), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Projection"), "t"), 0, (0)), 100000000, 0, -22), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Projection"), "t"), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("kernel/mod_subst.mli", 143, 4619, 4619), ("kernel/mod_subst.mli", 143, 4619, 4680), 0), 0, Tag1 ("Mod_subst", 42)), 0); (("subst_retro_action", 827), ((Tag1 (0, (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -18), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Retroknowledge")), "action"), 0, (0)), 100000000, 0, -17), (Tag3 (Tag1 ((Tag2 ("Retroknowledge")), "action"), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("kernel/mod_subst.mli", 145, 4682, 4682), ("kernel/mod_subst.mli", 145, 4682, 4769), 0), 0, Tag1 ("Mod_subst", 43)), 0); (("replace_mp_in_kn", 828), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -12), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -11), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("kernel/mod_subst.mli", 148, 4843, 4843), ("kernel/mod_subst.mli", 148, 4843, 4914), 0), 0, Tag1 ("Mod_subst", 44)), 0); (("subst_mps", 829), ((Tag1 (0, (Tag3 ((("substitution", 801)), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -5), (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("kernel/mod_subst.mli", 152, 5013, 5013), ("kernel/mod_subst.mli", 152, 5013, 5061), 0), 0, Tag1 ("Mod_subst", 45)), 0)], "Mod_subst", [("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
val subst_mps : substitution -> Constr.constr -> Constr.constr
