type 'a with_loc = 'a Location.loc
type loc = Location.t
type lid = Longident.t with_loc
type str = string with_loc
type str_opt = string option with_loc
type attrs = Parsetree.attribute list
val default_loc : loc ref
val with_default_loc : loc -> (unit -> 'a) -> 'a
module Const :
  sig
    val char : char -> Parsetree.constant
    val string :
      ?quotation_delimiter:string ->
      ?loc:Location.t -> string -> Parsetree.constant
    val integer : ?suffix:char -> string -> Parsetree.constant
    val int : ?suffix:char -> int -> Parsetree.constant
    val int32 : ?suffix:char -> int32 -> Parsetree.constant
    val int64 : ?suffix:char -> int64 -> Parsetree.constant
    val nativeint : ?suffix:char -> nativeint -> Parsetree.constant
    val float : ?suffix:char -> string -> Parsetree.constant
  end
module Attr :
  sig
    val mk : ?loc:loc -> str -> Parsetree.payload -> Parsetree.attribute
  end
module Typ :
  sig
    val mk :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.core_type_desc -> Parsetree.core_type
    val attr :
      Parsetree.core_type -> Parsetree.attribute -> Parsetree.core_type
    val any : ?loc:loc -> ?attrs:attrs -> unit -> Parsetree.core_type
    val var : ?loc:loc -> ?attrs:attrs -> string -> Parsetree.core_type
    val arrow :
      ?loc:loc ->
      ?attrs:attrs ->
      Asttypes.arg_label ->
      Parsetree.core_type -> Parsetree.core_type -> Parsetree.core_type
    val tuple :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.core_type list -> Parsetree.core_type
    val constr :
      ?loc:loc ->
      ?attrs:attrs -> lid -> Parsetree.core_type list -> Parsetree.core_type
    val object_ :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.object_field list ->
      Asttypes.closed_flag -> Parsetree.core_type
    val class_ :
      ?loc:loc ->
      ?attrs:attrs -> lid -> Parsetree.core_type list -> Parsetree.core_type
    val alias :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.core_type -> string -> Parsetree.core_type
    val variant :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.row_field list ->
      Asttypes.closed_flag ->
      Asttypes.label list option -> Parsetree.core_type
    val poly :
      ?loc:loc ->
      ?attrs:attrs -> str list -> Parsetree.core_type -> Parsetree.core_type
    val package :
      ?loc:loc ->
      ?attrs:attrs ->
      lid -> (lid * Parsetree.core_type) list -> Parsetree.core_type
    val extension :
      ?loc:loc -> ?attrs:attrs -> Parsetree.extension -> Parsetree.core_type
    val force_poly : Parsetree.core_type -> Parsetree.core_type
    val varify_constructors :
      str list -> Parsetree.core_type -> Parsetree.core_type
  end
module Pat :
  sig
    val mk :
      ?loc:loc -> ?attrs:attrs -> Parsetree.pattern_desc -> Parsetree.pattern
    val attr : Parsetree.pattern -> Parsetree.attribute -> Parsetree.pattern
    val any : ?loc:loc -> ?attrs:attrs -> unit -> Parsetree.pattern
    val var : ?loc:loc -> ?attrs:attrs -> str -> Parsetree.pattern
    val alias :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.pattern -> str -> Parsetree.pattern
    val constant :
      ?loc:loc -> ?attrs:attrs -> Parsetree.constant -> Parsetree.pattern
    val interval :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.constant -> Parsetree.constant -> Parsetree.pattern
    val tuple :
      ?loc:loc -> ?attrs:attrs -> Parsetree.pattern list -> Parsetree.pattern
    val construct :
      ?loc:loc ->
      ?attrs:attrs ->
      lid -> (str list * Parsetree.pattern) option -> Parsetree.pattern
    val variant :
      ?loc:loc ->
      ?attrs:attrs ->
      Asttypes.label -> Parsetree.pattern option -> Parsetree.pattern
    val record :
      ?loc:loc ->
      ?attrs:attrs ->
      (lid * Parsetree.pattern) list ->
      Asttypes.closed_flag -> Parsetree.pattern
    val array :
      ?loc:loc -> ?attrs:attrs -> Parsetree.pattern list -> Parsetree.pattern
    val or_ :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.pattern -> Parsetree.pattern -> Parsetree.pattern
    val constraint_ :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.pattern -> Parsetree.core_type -> Parsetree.pattern
    val type_ : ?loc:loc -> ?attrs:attrs -> lid -> Parsetree.pattern
    val lazy_ :
      ?loc:loc -> ?attrs:attrs -> Parsetree.pattern -> Parsetree.pattern
    val unpack : ?loc:loc -> ?attrs:attrs -> str_opt -> Parsetree.pattern
    val open_ :
      ?loc:loc ->
      ?attrs:attrs -> lid -> Parsetree.pattern -> Parsetree.pattern
    val exception_ :
      ?loc:loc -> ?attrs:attrs -> Parsetree.pattern -> Parsetree.pattern
    val extension :
      ?loc:loc -> ?attrs:attrs -> Parsetree.extension -> Parsetree.pattern
  end
module Exp :
  sig
    val mk :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.expression_desc -> Parsetree.expression
    val attr :
      Parsetree.expression -> Parsetree.attribute -> Parsetree.expression
    val ident : ?loc:loc -> ?attrs:attrs -> lid -> Parsetree.expression
    val constant :
      ?loc:loc -> ?attrs:attrs -> Parsetree.constant -> Parsetree.expression
    val let_ :
      ?loc:loc ->
      ?attrs:attrs ->
      Asttypes.rec_flag ->
      Parsetree.value_binding list ->
      Parsetree.expression -> Parsetree.expression
    val fun_ :
      ?loc:loc ->
      ?attrs:attrs ->
      Asttypes.arg_label ->
      Parsetree.expression option ->
      Parsetree.pattern -> Parsetree.expression -> Parsetree.expression
    val function_ :
      ?loc:loc -> ?attrs:attrs -> Parsetree.case list -> Parsetree.expression
    val apply :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.expression ->
      (Asttypes.arg_label * Parsetree.expression) list ->
      Parsetree.expression
    val match_ :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.expression -> Parsetree.case list -> Parsetree.expression
    val try_ :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.expression -> Parsetree.case list -> Parsetree.expression
    val tuple :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.expression list -> Parsetree.expression
    val construct :
      ?loc:loc ->
      ?attrs:attrs ->
      lid -> Parsetree.expression option -> Parsetree.expression
    val variant :
      ?loc:loc ->
      ?attrs:attrs ->
      Asttypes.label -> Parsetree.expression option -> Parsetree.expression
    val record :
      ?loc:loc ->
      ?attrs:attrs ->
      (lid * Parsetree.expression) list ->
      Parsetree.expression option -> Parsetree.expression
    val field :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.expression -> lid -> Parsetree.expression
    val setfield :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.expression ->
      lid -> Parsetree.expression -> Parsetree.expression
    val array :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.expression list -> Parsetree.expression
    val ifthenelse :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.expression ->
      Parsetree.expression ->
      Parsetree.expression option -> Parsetree.expression
    val sequence :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.expression -> Parsetree.expression -> Parsetree.expression
    val while_ :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.expression -> Parsetree.expression -> Parsetree.expression
    val for_ :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.pattern ->
      Parsetree.expression ->
      Parsetree.expression ->
      Asttypes.direction_flag -> Parsetree.expression -> Parsetree.expression
    val coerce :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.expression ->
      Parsetree.core_type option ->
      Parsetree.core_type -> Parsetree.expression
    val constraint_ :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.expression -> Parsetree.core_type -> Parsetree.expression
    val send :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.expression -> str -> Parsetree.expression
    val new_ : ?loc:loc -> ?attrs:attrs -> lid -> Parsetree.expression
    val setinstvar :
      ?loc:loc ->
      ?attrs:attrs -> str -> Parsetree.expression -> Parsetree.expression
    val override :
      ?loc:loc ->
      ?attrs:attrs ->
      (str * Parsetree.expression) list -> Parsetree.expression
    val letmodule :
      ?loc:loc ->
      ?attrs:attrs ->
      str_opt ->
      Parsetree.module_expr -> Parsetree.expression -> Parsetree.expression
    val letexception :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.extension_constructor ->
      Parsetree.expression -> Parsetree.expression
    val assert_ :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.expression -> Parsetree.expression
    val lazy_ :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.expression -> Parsetree.expression
    val poly :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.expression ->
      Parsetree.core_type option -> Parsetree.expression
    val object_ :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.class_structure -> Parsetree.expression
    val newtype :
      ?loc:loc ->
      ?attrs:attrs -> str -> Parsetree.expression -> Parsetree.expression
    val pack :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.module_expr -> Parsetree.expression
    val open_ :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.open_declaration ->
      Parsetree.expression -> Parsetree.expression
    val letop :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.binding_op ->
      Parsetree.binding_op list ->
      Parsetree.expression -> Parsetree.expression
    val extension :
      ?loc:loc -> ?attrs:attrs -> Parsetree.extension -> Parsetree.expression
    val unreachable :
      ?loc:loc -> ?attrs:attrs -> unit -> Parsetree.expression
    val case :
      Parsetree.pattern ->
      ?guard:Parsetree.expression -> Parsetree.expression -> Parsetree.case
    val binding_op :
      str ->
      Parsetree.pattern ->
      Parsetree.expression -> loc -> Parsetree.binding_op
  end
module Val :
  sig
    val mk :
      ?loc:loc ->
      ?attrs:attrs ->
      ?docs:Docstrings.docs ->
      ?prim:string list ->
      str -> Parsetree.core_type -> Parsetree.value_description
  end
module Type :
  sig
    val mk :
      ?loc:loc ->
      ?attrs:attrs ->
      ?docs:Docstrings.docs ->
      ?text:Docstrings.text ->
      ?params:(Parsetree.core_type *
               (Asttypes.variance * Asttypes.injectivity))
              list ->
      ?cstrs:(Parsetree.core_type * Parsetree.core_type * loc) list ->
      ?kind:Parsetree.type_kind ->
      ?priv:Asttypes.private_flag ->
      ?manifest:Parsetree.core_type -> str -> Parsetree.type_declaration
    val constructor :
      ?loc:loc ->
      ?attrs:attrs ->
      ?info:Docstrings.info ->
      ?vars:str list ->
      ?args:Parsetree.constructor_arguments ->
      ?res:Parsetree.core_type -> str -> Parsetree.constructor_declaration
    val field :
      ?loc:loc ->
      ?attrs:attrs ->
      ?info:Docstrings.info ->
      ?mut:Asttypes.mutable_flag ->
      str -> Parsetree.core_type -> Parsetree.label_declaration
  end
module Te :
  sig
    val mk :
      ?loc:loc ->
      ?attrs:attrs ->
      ?docs:Docstrings.docs ->
      ?params:(Parsetree.core_type *
               (Asttypes.variance * Asttypes.injectivity))
              list ->
      ?priv:Asttypes.private_flag ->
      lid -> Parsetree.extension_constructor list -> Parsetree.type_extension
    val mk_exception :
      ?loc:loc ->
      ?attrs:attrs ->
      ?docs:Docstrings.docs ->
      Parsetree.extension_constructor -> Parsetree.type_exception
    val constructor :
      ?loc:loc ->
      ?attrs:attrs ->
      ?docs:Docstrings.docs ->
      ?info:Docstrings.info ->
      str ->
      Parsetree.extension_constructor_kind -> Parsetree.extension_constructor
    val decl :
      ?loc:loc ->
      ?attrs:attrs ->
      ?docs:Docstrings.docs ->
      ?info:Docstrings.info ->
      ?vars:str list ->
      ?args:Parsetree.constructor_arguments ->
      ?res:Parsetree.core_type -> str -> Parsetree.extension_constructor
    val rebind :
      ?loc:loc ->
      ?attrs:attrs ->
      ?docs:Docstrings.docs ->
      ?info:Docstrings.info -> str -> lid -> Parsetree.extension_constructor
  end
module Mty :
  sig
    val mk :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.module_type_desc -> Parsetree.module_type
    val attr :
      Parsetree.module_type -> Parsetree.attribute -> Parsetree.module_type
    val ident : ?loc:loc -> ?attrs:attrs -> lid -> Parsetree.module_type
    val alias : ?loc:loc -> ?attrs:attrs -> lid -> Parsetree.module_type
    val signature :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.signature -> Parsetree.module_type
    val functor_ :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.functor_parameter ->
      Parsetree.module_type -> Parsetree.module_type
    val with_ :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.module_type ->
      Parsetree.with_constraint list -> Parsetree.module_type
    val typeof_ :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.module_expr -> Parsetree.module_type
    val extension :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.extension -> Parsetree.module_type
  end
module Mod :
  sig
    val mk :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.module_expr_desc -> Parsetree.module_expr
    val attr :
      Parsetree.module_expr -> Parsetree.attribute -> Parsetree.module_expr
    val ident : ?loc:loc -> ?attrs:attrs -> lid -> Parsetree.module_expr
    val structure :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.structure -> Parsetree.module_expr
    val functor_ :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.functor_parameter ->
      Parsetree.module_expr -> Parsetree.module_expr
    val apply :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.module_expr -> Parsetree.module_expr -> Parsetree.module_expr
    val apply_unit :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.module_expr -> Parsetree.module_expr
    val constraint_ :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.module_expr -> Parsetree.module_type -> Parsetree.module_expr
    val unpack :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.expression -> Parsetree.module_expr
    val extension :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.extension -> Parsetree.module_expr
  end
module Sig :
  sig
    val mk :
      ?loc:loc -> Parsetree.signature_item_desc -> Parsetree.signature_item
    val value :
      ?loc:loc -> Parsetree.value_description -> Parsetree.signature_item
    val type_ :
      ?loc:loc ->
      Asttypes.rec_flag ->
      Parsetree.type_declaration list -> Parsetree.signature_item
    val type_subst :
      ?loc:loc -> Parsetree.type_declaration list -> Parsetree.signature_item
    val type_extension :
      ?loc:loc -> Parsetree.type_extension -> Parsetree.signature_item
    val exception_ :
      ?loc:loc -> Parsetree.type_exception -> Parsetree.signature_item
    val module_ :
      ?loc:loc -> Parsetree.module_declaration -> Parsetree.signature_item
    val mod_subst :
      ?loc:loc -> Parsetree.module_substitution -> Parsetree.signature_item
    val rec_module :
      ?loc:loc ->
      Parsetree.module_declaration list -> Parsetree.signature_item
    val modtype :
      ?loc:loc ->
      Parsetree.module_type_declaration -> Parsetree.signature_item
    val modtype_subst :
      ?loc:loc ->
      Parsetree.module_type_declaration -> Parsetree.signature_item
    val open_ :
      ?loc:loc -> Parsetree.open_description -> Parsetree.signature_item
    val include_ :
      ?loc:loc -> Parsetree.include_description -> Parsetree.signature_item
    val class_ :
      ?loc:loc ->
      Parsetree.class_description list -> Parsetree.signature_item
    val class_type :
      ?loc:loc ->
      Parsetree.class_type_declaration list -> Parsetree.signature_item
    val extension :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.extension -> Parsetree.signature_item
    val attribute :
      ?loc:loc -> Parsetree.attribute -> Parsetree.signature_item
    val text : Docstrings.text -> Parsetree.signature_item list
  end
module Str :
  sig
    val mk :
      ?loc:loc -> Parsetree.structure_item_desc -> Parsetree.structure_item
    val eval :
      ?loc:loc ->
      ?attrs:Parsetree.attributes ->
      Parsetree.expression -> Parsetree.structure_item
    val value :
      ?loc:loc ->
      Asttypes.rec_flag ->
      Parsetree.value_binding list -> Parsetree.structure_item
    val primitive :
      ?loc:loc -> Parsetree.value_description -> Parsetree.structure_item
    val type_ :
      ?loc:loc ->
      Asttypes.rec_flag ->
      Parsetree.type_declaration list -> Parsetree.structure_item
    val type_extension :
      ?loc:loc -> Parsetree.type_extension -> Parsetree.structure_item
    val exception_ :
      ?loc:loc -> Parsetree.type_exception -> Parsetree.structure_item
    val module_ :
      ?loc:loc -> Parsetree.module_binding -> Parsetree.structure_item
    val rec_module :
      ?loc:loc -> Parsetree.module_binding list -> Parsetree.structure_item
    val modtype :
      ?loc:loc ->
      Parsetree.module_type_declaration -> Parsetree.structure_item
    val open_ :
      ?loc:loc -> Parsetree.open_declaration -> Parsetree.structure_item
    val class_ :
      ?loc:loc ->
      Parsetree.class_declaration list -> Parsetree.structure_item
    val class_type :
      ?loc:loc ->
      Parsetree.class_type_declaration list -> Parsetree.structure_item
    val include_ :
      ?loc:loc -> Parsetree.include_declaration -> Parsetree.structure_item
    val extension :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.extension -> Parsetree.structure_item
    val attribute :
      ?loc:loc -> Parsetree.attribute -> Parsetree.structure_item
    val text : Docstrings.text -> Parsetree.structure_item list
  end
module Md :
  sig
    val mk :
      ?loc:loc ->
      ?attrs:attrs ->
      ?docs:Docstrings.docs ->
      ?text:Docstrings.text ->
      str_opt -> Parsetree.module_type -> Parsetree.module_declaration
  end
module Ms :
  sig
    val mk :
      ?loc:loc ->
      ?attrs:attrs ->
      ?docs:Docstrings.docs ->
      ?text:Docstrings.text -> str -> lid -> Parsetree.module_substitution
  end
module Mtd :
  sig
    val mk :
      ?loc:loc ->
      ?attrs:attrs ->
      ?docs:Docstrings.docs ->
      ?text:Docstrings.text ->
      ?typ:Parsetree.module_type -> str -> Parsetree.module_type_declaration
  end
module Mb :
  sig
    val mk :
      ?loc:loc ->
      ?attrs:attrs ->
      ?docs:Docstrings.docs ->
      ?text:Docstrings.text ->
      str_opt -> Parsetree.module_expr -> Parsetree.module_binding
  end
module Opn :
  sig
    val mk :
      ?loc:loc ->
      ?attrs:attrs ->
      ?docs:Docstrings.docs ->
      ?override:Asttypes.override_flag -> 'a -> 'a Parsetree.open_infos
  end
module Incl :
  sig
    val mk :
      ?loc:loc ->
      ?attrs:attrs ->
      ?docs:Docstrings.docs -> 'a -> 'a Parsetree.include_infos
  end
module Vb :
  sig
    val mk :
      ?loc:loc ->
      ?attrs:attrs ->
      ?docs:Docstrings.docs ->
      ?text:Docstrings.text ->
      ?value_constraint:Parsetree.value_constraint ->
      Parsetree.pattern -> Parsetree.expression -> Parsetree.value_binding
  end
module Cty :
  sig
    val mk :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.class_type_desc -> Parsetree.class_type
    val attr :
      Parsetree.class_type -> Parsetree.attribute -> Parsetree.class_type
    val constr :
      ?loc:loc ->
      ?attrs:attrs -> lid -> Parsetree.core_type list -> Parsetree.class_type
    val signature :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.class_signature -> Parsetree.class_type
    val arrow :
      ?loc:loc ->
      ?attrs:attrs ->
      Asttypes.arg_label ->
      Parsetree.core_type -> Parsetree.class_type -> Parsetree.class_type
    val extension :
      ?loc:loc -> ?attrs:attrs -> Parsetree.extension -> Parsetree.class_type
    val open_ :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.open_description ->
      Parsetree.class_type -> Parsetree.class_type
  end
module Ctf :
  sig
    val mk :
      ?loc:loc ->
      ?attrs:attrs ->
      ?docs:Docstrings.docs ->
      Parsetree.class_type_field_desc -> Parsetree.class_type_field
    val attr :
      Parsetree.class_type_field ->
      Parsetree.attribute -> Parsetree.class_type_field
    val inherit_ :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.class_type -> Parsetree.class_type_field
    val val_ :
      ?loc:loc ->
      ?attrs:attrs ->
      str ->
      Asttypes.mutable_flag ->
      Asttypes.virtual_flag ->
      Parsetree.core_type -> Parsetree.class_type_field
    val method_ :
      ?loc:loc ->
      ?attrs:attrs ->
      str ->
      Asttypes.private_flag ->
      Asttypes.virtual_flag ->
      Parsetree.core_type -> Parsetree.class_type_field
    val constraint_ :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.core_type ->
      Parsetree.core_type -> Parsetree.class_type_field
    val extension :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.extension -> Parsetree.class_type_field
    val attribute :
      ?loc:loc -> Parsetree.attribute -> Parsetree.class_type_field
    val text : Docstrings.text -> Parsetree.class_type_field list
  end
module Cl :
  sig
    val mk :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.class_expr_desc -> Parsetree.class_expr
    val attr :
      Parsetree.class_expr -> Parsetree.attribute -> Parsetree.class_expr
    val constr :
      ?loc:loc ->
      ?attrs:attrs -> lid -> Parsetree.core_type list -> Parsetree.class_expr
    val structure :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.class_structure -> Parsetree.class_expr
    val fun_ :
      ?loc:loc ->
      ?attrs:attrs ->
      Asttypes.arg_label ->
      Parsetree.expression option ->
      Parsetree.pattern -> Parsetree.class_expr -> Parsetree.class_expr
    val apply :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.class_expr ->
      (Asttypes.arg_label * Parsetree.expression) list ->
      Parsetree.class_expr
    val let_ :
      ?loc:loc ->
      ?attrs:attrs ->
      Asttypes.rec_flag ->
      Parsetree.value_binding list ->
      Parsetree.class_expr -> Parsetree.class_expr
    val constraint_ :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.class_expr -> Parsetree.class_type -> Parsetree.class_expr
    val extension :
      ?loc:loc -> ?attrs:attrs -> Parsetree.extension -> Parsetree.class_expr
    val open_ :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.open_description ->
      Parsetree.class_expr -> Parsetree.class_expr
  end
module Cf :
  sig
    val mk :
      ?loc:loc ->
      ?attrs:attrs ->
      ?docs:Docstrings.docs ->
      Parsetree.class_field_desc -> Parsetree.class_field
    val attr :
      Parsetree.class_field -> Parsetree.attribute -> Parsetree.class_field
    val inherit_ :
      ?loc:loc ->
      ?attrs:attrs ->
      Asttypes.override_flag ->
      Parsetree.class_expr -> str option -> Parsetree.class_field
    val val_ :
      ?loc:loc ->
      ?attrs:attrs ->
      str ->
      Asttypes.mutable_flag ->
      Parsetree.class_field_kind -> Parsetree.class_field
    val method_ :
      ?loc:loc ->
      ?attrs:attrs ->
      str ->
      Asttypes.private_flag ->
      Parsetree.class_field_kind -> Parsetree.class_field
    val constraint_ :
      ?loc:loc ->
      ?attrs:attrs ->
      Parsetree.core_type -> Parsetree.core_type -> Parsetree.class_field
    val initializer_ :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.expression -> Parsetree.class_field
    val extension :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.extension -> Parsetree.class_field
    val attribute : ?loc:loc -> Parsetree.attribute -> Parsetree.class_field
    val text : Docstrings.text -> Parsetree.class_field list
    val virtual_ : Parsetree.core_type -> Parsetree.class_field_kind
    val concrete :
      Asttypes.override_flag ->
      Parsetree.expression -> Parsetree.class_field_kind
  end
module Ci :
  sig
    val mk :
      ?loc:loc ->
      ?attrs:attrs ->
      ?docs:Docstrings.docs ->
      ?text:Docstrings.text ->
      ?virt:Asttypes.virtual_flag ->
      ?params:(Parsetree.core_type *
               (Asttypes.variance * Asttypes.injectivity))
              list ->
      str -> 'a -> 'a Parsetree.class_infos
  end
module Csig :
  sig
    val mk :
      Parsetree.core_type ->
      Parsetree.class_type_field list -> Parsetree.class_signature
  end
module Cstr :
  sig
    val mk :
      Parsetree.pattern ->
      Parsetree.class_field list -> Parsetree.class_structure
  end
module Rf :
  sig
    val mk :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.row_field_desc -> Parsetree.row_field
    val tag :
      ?loc:loc ->
      ?attrs:attrs ->
      Asttypes.label with_loc ->
      bool -> Parsetree.core_type list -> Parsetree.row_field
    val inherit_ : ?loc:loc -> Parsetree.core_type -> Parsetree.row_field
  end
module Of :
  sig
    val mk :
      ?loc:loc ->
      ?attrs:attrs -> Parsetree.object_field_desc -> Parsetree.object_field
    val tag :
      ?loc:loc ->
      ?attrs:attrs ->
      Asttypes.label with_loc ->
      Parsetree.core_type -> Parsetree.object_field
    val inherit_ : ?loc:loc -> Parsetree.core_type -> Parsetree.object_field
  end("DEBUG:rule", [Tag1 (("with_loc", 735), ([((("a")), 100000000, 0, -21)], 1, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Location")), "loc"), [((("a")), 100000000, 0, -21)], (0)), 100000000, 0, -20)), [25], [0], 0, 0, (("parsing/ast_helper.mli", 27, 1259, 1259), ("parsing/ast_helper.mli", 27, 1259, 1293), 0), 0, 0, 0, Tag1 ("Ast_helper", 2)), 1, 0); Tag1 (("loc", 736), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Location")), "t"), 0, (0)), 100000000, 0, -19)), 0, 0, 0, 0, (("parsing/ast_helper.mli", 28, 1294, 1294), ("parsing/ast_helper.mli", 28, 1294, 1315), 0), 0, 0, 0, Tag1 ("Ast_helper", 3)), 1, 0); Tag1 (("lid", 737), (0, 0, 0, 1, ((Tag3 ((("with_loc", 735)), [(Tag3 (Tag1 ((Tag2 ("Longident")), "t"), 0, (0)), 100000000, 0, -18)], (0)), 100000000, 0, -17)), 0, 0, 0, 0, (("parsing/ast_helper.mli", 30, 1317, 1317), ("parsing/ast_helper.mli", 30, 1317, 1348), 0), 0, 0, 0, Tag1 ("Ast_helper", 4)), 1, 0); Tag1 (("str", 738), (0, 0, 0, 1, ((Tag3 ((("with_loc", 735)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -16)], (0)), 100000000, 0, -15)), 0, 0, 0, 0, (("parsing/ast_helper.mli", 31, 1349, 1349), ("parsing/ast_helper.mli", 31, 1349, 1375), 0), 0, 0, 0, Tag1 ("Ast_helper", 5)), 1, 0); Tag1 (("str_opt", 739), (0, 0, 0, 1, ((Tag3 ((("with_loc", 735)), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -14)], (0)), 100000000, 0, -13)], (0)), 100000000, 0, -12)), 0, 0, 0, 0, (("parsing/ast_helper.mli", 32, 1376, 1376), ("parsing/ast_helper.mli", 32, 1376, 1413), 0), 0, 0, 0, Tag1 ("Ast_helper", 6)), 1, 0); Tag1 (("attrs", 740), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "attribute"), 0, (0)), 100000000, 0, -11)], (0)), 100000000, 0, -10)), 0, 0, 0, 0, (("parsing/ast_helper.mli", 33, 1414, 1414), ("parsing/ast_helper.mli", 33, 1414, 1441), 0), 0, 0, 0, Tag1 ("Ast_helper", 7)), 1, 0); (("default_loc", 741), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -9)], (0)), 100000000, 0, -8), 0, (("parsing/ast_helper.mli", 37, 1473, 1473), ("parsing/ast_helper.mli", 37, 1473, 1497), 0), 0, Tag1 ("Ast_helper", 8)), 0); (("with_default_loc", 742), ((Tag1 (0, (Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -7), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -6), ((("a")), 100000000, 0, -4), 0), 100000000, 0, -5), ((("a")), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("parsing/ast_helper.mli", 40, 1561, 1561), ("parsing/ast_helper.mli", 40, 1561, 1608), 0), 0, Tag1 ("Ast_helper", 9)), 0); Tag3 (("Const", 743), 0, (Tag1 ([(("char", 771), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -69), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "constant"), 0, (0)), 100000000, 0, -68), 0), 100000000, 0, -67), 0, (("parsing/ast_helper.mli", 47, 1752, 1754), ("parsing/ast_helper.mli", 47, 1752, 1781), 0), 0, Tag1 ("Ast_helper", 10)), 0); (("string", 772), ((Tag1 (Tag1 ("quotation_delimiter"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -66)], (0)), 100000000, 0, -65), (Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Location")), "t"), 0, (0)), 100000000, 0, -64)], (0)), 100000000, 0, -63), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -62), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "constant"), 0, (0)), 100000000, 0, -61), 0), 100000000, 0, -60), 0), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("parsing/ast_helper.mli", 48, 1782, 1784), ("parsing/ast_helper.mli", 49, 1797, 1869), 0), 0, Tag1 ("Ast_helper", 11)), 0); (("integer", 773), ((Tag1 (Tag1 ("suffix"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -57)], (0)), 100000000, 0, -56), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -55), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "constant"), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0, (("parsing/ast_helper.mli", 50, 1870, 1872), ("parsing/ast_helper.mli", 50, 1870, 1920), 0), 0, Tag1 ("Ast_helper", 12)), 0); (("int", 774), ((Tag1 (Tag1 ("suffix"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -51)], (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -49), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "constant"), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("parsing/ast_helper.mli", 51, 1921, 1923), ("parsing/ast_helper.mli", 51, 1921, 1964), 0), 0, Tag1 ("Ast_helper", 13)), 0); (("int32", 775), ((Tag1 (Tag1 ("suffix"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -45)], (0)), 100000000, 0, -44), (Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -43), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "constant"), 0, (0)), 100000000, 0, -42), 0), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("parsing/ast_helper.mli", 52, 1965, 1967), ("parsing/ast_helper.mli", 52, 1965, 2012), 0), 0, Tag1 ("Ast_helper", 14)), 0); (("int64", 776), ((Tag1 (Tag1 ("suffix"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -39)], (0)), 100000000, 0, -38), (Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -37), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "constant"), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("parsing/ast_helper.mli", 53, 2013, 2015), ("parsing/ast_helper.mli", 53, 2013, 2060), 0), 0, Tag1 ("Ast_helper", 15)), 0); (("nativeint", 777), ((Tag1 (Tag1 ("suffix"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -33)], (0)), 100000000, 0, -32), (Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -31), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "constant"), 0, (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("parsing/ast_helper.mli", 54, 2061, 2063), ("parsing/ast_helper.mli", 54, 2061, 2116), 0), 0, Tag1 ("Ast_helper", 16)), 0); (("float", 778), ((Tag1 (Tag1 ("suffix"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -27)], (0)), 100000000, 0, -26), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -25), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "constant"), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("parsing/ast_helper.mli", 55, 2117, 2119), ("parsing/ast_helper.mli", 55, 2117, 2165), 0), 0, Tag1 ("Ast_helper", 17)), 0)]), 0, (("parsing/ast_helper.mli", 46, 1733, 1733), ("parsing/ast_helper.mli", 56, 2166, 2169), 0), Tag1 ("Ast_helper", 18)), 0, 0); Tag3 (("Attr", 744), 0, (Tag1 ([(("mk", 779), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -77)], (0)), 100000000, 0, -76), (Tag1 (0, (Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -75), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "payload"), 0, (0)), 100000000, 0, -74), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attribute"), 0, (0)), 100000000, 0, -73), 0), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), 0, (("parsing/ast_helper.mli", 60, 2211, 2213), ("parsing/ast_helper.mli", 60, 2211, 2260), 0), 0, Tag1 ("Ast_helper", 19)), 0)]), 0, (("parsing/ast_helper.mli", 59, 2193, 2193), ("parsing/ast_helper.mli", 61, 2261, 2264), 0), Tag1 ("Ast_helper", 20)), 0, 0); Tag3 (("Typ", 745), 0, (Tag1 ([(("mk", 780), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -239)], (0)), 100000000, 0, -238), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -237)], (0)), 100000000, 0, -236), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type_desc"), 0, (0)), 100000000, 0, -235), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -234), 0), 100000000, 0, -233), 0), 100000000, 0, -232), 0), 100000000, 0, -231), 0, (("parsing/ast_helper.mli", 68, 2335, 2339), ("parsing/ast_helper.mli", 68, 2335, 2402), 0), 0, Tag1 ("Ast_helper", 21)), 0); (("attr", 781), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -230), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attribute"), 0, (0)), 100000000, 0, -229), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -228), 0), 100000000, 0, -227), 0), 100000000, 0, -226), 0, (("parsing/ast_helper.mli", 69, 2403, 2407), ("parsing/ast_helper.mli", 69, 2403, 2452), 0), 0, Tag1 ("Ast_helper", 22)), 0); (("any", 782), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -225)], (0)), 100000000, 0, -224), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -223)], (0)), 100000000, 0, -222), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -221), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -220), 0), 100000000, 0, -219), 0), 100000000, 0, -218), 0), 100000000, 0, -217), 0, (("parsing/ast_helper.mli", 71, 2454, 2458), ("parsing/ast_helper.mli", 71, 2454, 2512), 0), 0, Tag1 ("Ast_helper", 23)), 0); (("var", 783), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -216)], (0)), 100000000, 0, -215), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -214)], (0)), 100000000, 0, -213), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -212), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -211), 0), 100000000, 0, -210), 0), 100000000, 0, -209), 0), 100000000, 0, -208), 0, (("parsing/ast_helper.mli", 72, 2513, 2517), ("parsing/ast_helper.mli", 72, 2513, 2573), 0), 0, Tag1 ("Ast_helper", 24)), 0); (("arrow", 784), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -207)], (0)), 100000000, 0, -206), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -205)], (0)), 100000000, 0, -204), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "arg_label"), 0, (0)), 100000000, 0, -203), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -202), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -201), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -200), 0), 100000000, 0, -199), 0), 100000000, 0, -198), 0), 100000000, 0, -197), 0), 100000000, 0, -196), 0), 100000000, 0, -195), 0, (("parsing/ast_helper.mli", 73, 2574, 2578), ("parsing/ast_helper.mli", 74, 2653, 2680), 0), 0, Tag1 ("Ast_helper", 25)), 0); (("tuple", 785), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -194)], (0)), 100000000, 0, -193), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -192)], (0)), 100000000, 0, -191), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -190)], (0)), 100000000, 0, -189), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -188), 0), 100000000, 0, -187), 0), 100000000, 0, -186), 0), 100000000, 0, -185), 0, (("parsing/ast_helper.mli", 75, 2681, 2685), ("parsing/ast_helper.mli", 75, 2681, 2751), 0), 0, Tag1 ("Ast_helper", 26)), 0); (("constr", 786), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -184)], (0)), 100000000, 0, -183), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -182)], (0)), 100000000, 0, -181), (Tag1 (0, (Tag3 ((("lid", 737)), 0, (0)), 100000000, 0, -180), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -179)], (0)), 100000000, 0, -178), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -177), 0), 100000000, 0, -176), 0), 100000000, 0, -175), 0), 100000000, 0, -174), 0), 100000000, 0, -173), 0, (("parsing/ast_helper.mli", 76, 2752, 2756), ("parsing/ast_helper.mli", 76, 2752, 2830), 0), 0, Tag1 ("Ast_helper", 27)), 0); (("object_", 787), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -172)], (0)), 100000000, 0, -171), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -170)], (0)), 100000000, 0, -169), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "object_field"), 0, (0)), 100000000, 0, -168)], (0)), 100000000, 0, -167), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "closed_flag"), 0, (0)), 100000000, 0, -166), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -165), 0), 100000000, 0, -164), 0), 100000000, 0, -163), 0), 100000000, 0, -162), 0), 100000000, 0, -161), 0, (("parsing/ast_helper.mli", 77, 2831, 2835), ("parsing/ast_helper.mli", 78, 2894, 2940), 0), 0, Tag1 ("Ast_helper", 28)), 0); (("class_", 788), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -160)], (0)), 100000000, 0, -159), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -158)], (0)), 100000000, 0, -157), (Tag1 (0, (Tag3 ((("lid", 737)), 0, (0)), 100000000, 0, -156), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -155)], (0)), 100000000, 0, -154), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -153), 0), 100000000, 0, -152), 0), 100000000, 0, -151), 0), 100000000, 0, -150), 0), 100000000, 0, -149), 0, (("parsing/ast_helper.mli", 79, 2941, 2945), ("parsing/ast_helper.mli", 79, 2941, 3019), 0), 0, Tag1 ("Ast_helper", 29)), 0); (("alias", 789), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -148)], (0)), 100000000, 0, -147), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -146)], (0)), 100000000, 0, -145), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -144), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -143), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -142), 0), 100000000, 0, -141), 0), 100000000, 0, -140), 0), 100000000, 0, -139), 0), 100000000, 0, -138), 0, (("parsing/ast_helper.mli", 80, 3020, 3024), ("parsing/ast_helper.mli", 80, 3020, 3095), 0), 0, Tag1 ("Ast_helper", 30)), 0); (("variant", 790), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -137)], (0)), 100000000, 0, -136), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -135)], (0)), 100000000, 0, -134), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "row_field"), 0, (0)), 100000000, 0, -133)], (0)), 100000000, 0, -132), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "closed_flag"), 0, (0)), 100000000, 0, -131), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Asttypes")), "label"), 0, (0)), 100000000, 0, -130)], (0)), 100000000, 0, -129)], (0)), 100000000, 0, -128), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -127), 0), 100000000, 0, -126), 0), 100000000, 0, -125), 0), 100000000, 0, -124), 0), 100000000, 0, -123), 0), 100000000, 0, -122), 0, (("parsing/ast_helper.mli", 81, 3096, 3100), ("parsing/ast_helper.mli", 82, 3171, 3221), 0), 0, Tag1 ("Ast_helper", 31)), 0); (("poly", 791), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -121)], (0)), 100000000, 0, -120), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -119)], (0)), 100000000, 0, -118), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -117)], (0)), 100000000, 0, -116), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -115), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -114), 0), 100000000, 0, -113), 0), 100000000, 0, -112), 0), 100000000, 0, -111), 0), 100000000, 0, -110), 0, (("parsing/ast_helper.mli", 83, 3222, 3226), ("parsing/ast_helper.mli", 83, 3222, 3298), 0), 0, Tag1 ("Ast_helper", 32)), 0); (("package", 792), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -109)], (0)), 100000000, 0, -108), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -107)], (0)), 100000000, 0, -106), (Tag1 (0, (Tag3 ((("lid", 737)), 0, (0)), 100000000, 0, -105), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("lid", 737)), 0, (0)), 100000000, 0, -103); (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -104)]), 100000000, 0, -102)], (0)), 100000000, 0, -101), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -100), 0), 100000000, 0, -99), 0), 100000000, 0, -98), 0), 100000000, 0, -97), 0), 100000000, 0, -96), 0, (("parsing/ast_helper.mli", 84, 3299, 3303), ("parsing/ast_helper.mli", 85, 3374, 3403), 0), 0, Tag1 ("Ast_helper", 33)), 0); (("extension", 793), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -95)], (0)), 100000000, 0, -94), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -93)], (0)), 100000000, 0, -92), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "extension"), 0, (0)), 100000000, 0, -91), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -90), 0), 100000000, 0, -89), 0), 100000000, 0, -88), 0), 100000000, 0, -87), 0, (("parsing/ast_helper.mli", 86, 3404, 3408), ("parsing/ast_helper.mli", 86, 3404, 3473), 0), 0, Tag1 ("Ast_helper", 34)), 0); (("force_poly", 794), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -86), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -85), 0), 100000000, 0, -84), 0, (("parsing/ast_helper.mli", 88, 3475, 3479), ("parsing/ast_helper.mli", 88, 3475, 3517), 0), 0, Tag1 ("Ast_helper", 35)), 0); (("varify_constructors", 795), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -83)], (0)), 100000000, 0, -82), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -81), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -80), 0), 100000000, 0, -79), 0), 100000000, 0, -78), 0, (("parsing/ast_helper.mli", 90, 3519, 3523), ("parsing/ast_helper.mli", 90, 3519, 3582), 0), 0, Tag1 ("Ast_helper", 36)), 0)]), 0, (("parsing/ast_helper.mli", 66, 2316, 2316), ("parsing/ast_helper.mli", 98, 3933, 3938), 0), Tag1 ("Ast_helper", 37)), 0, 0); Tag3 (("Pat", 746), 0, (Tag1 ([(("mk", 796), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -441)], (0)), 100000000, 0, -440), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -439)], (0)), 100000000, 0, -438), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern_desc"), 0, (0)), 100000000, 0, -437), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -436), 0), 100000000, 0, -435), 0), 100000000, 0, -434), 0), 100000000, 0, -433), 0, (("parsing/ast_helper.mli", 103, 3974, 3978), ("parsing/ast_helper.mli", 103, 3974, 4037), 0), 0, Tag1 ("Ast_helper", 38)), 0); (("attr", 797), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -432), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attribute"), 0, (0)), 100000000, 0, -431), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -430), 0), 100000000, 0, -429), 0), 100000000, 0, -428), 0, (("parsing/ast_helper.mli", 104, 4038, 4042), ("parsing/ast_helper.mli", 104, 4038, 4082), 0), 0, Tag1 ("Ast_helper", 39)), 0); (("any", 798), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -427)], (0)), 100000000, 0, -426), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -425)], (0)), 100000000, 0, -424), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -423), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -422), 0), 100000000, 0, -421), 0), 100000000, 0, -420), 0), 100000000, 0, -419), 0, (("parsing/ast_helper.mli", 106, 4084, 4088), ("parsing/ast_helper.mli", 106, 4084, 4140), 0), 0, Tag1 ("Ast_helper", 40)), 0); (("var", 799), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -418)], (0)), 100000000, 0, -417), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -416)], (0)), 100000000, 0, -415), (Tag1 (0, (Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -414), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -413), 0), 100000000, 0, -412), 0), 100000000, 0, -411), 0), 100000000, 0, -410), 0, (("parsing/ast_helper.mli", 107, 4141, 4145), ("parsing/ast_helper.mli", 107, 4141, 4196), 0), 0, Tag1 ("Ast_helper", 41)), 0); (("alias", 800), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -409)], (0)), 100000000, 0, -408), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -407)], (0)), 100000000, 0, -406), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -405), (Tag1 (0, (Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -404), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -403), 0), 100000000, 0, -402), 0), 100000000, 0, -401), 0), 100000000, 0, -400), 0), 100000000, 0, -399), 0, (("parsing/ast_helper.mli", 108, 4197, 4201), ("parsing/ast_helper.mli", 108, 4197, 4265), 0), 0, Tag1 ("Ast_helper", 42)), 0); (("constant", 801), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -398)], (0)), 100000000, 0, -397), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -396)], (0)), 100000000, 0, -395), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "constant"), 0, (0)), 100000000, 0, -394), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -393), 0), 100000000, 0, -392), 0), 100000000, 0, -391), 0), 100000000, 0, -390), 0, (("parsing/ast_helper.mli", 109, 4266, 4270), ("parsing/ast_helper.mli", 109, 4266, 4331), 0), 0, Tag1 ("Ast_helper", 43)), 0); (("interval", 802), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -389)], (0)), 100000000, 0, -388), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -387)], (0)), 100000000, 0, -386), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "constant"), 0, (0)), 100000000, 0, -385), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "constant"), 0, (0)), 100000000, 0, -384), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -383), 0), 100000000, 0, -382), 0), 100000000, 0, -381), 0), 100000000, 0, -380), 0), 100000000, 0, -379), 0, (("parsing/ast_helper.mli", 110, 4332, 4336), ("parsing/ast_helper.mli", 110, 4332, 4409), 0), 0, Tag1 ("Ast_helper", 44)), 0); (("tuple", 803), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -378)], (0)), 100000000, 0, -377), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -376)], (0)), 100000000, 0, -375), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -374)], (0)), 100000000, 0, -373), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -372), 0), 100000000, 0, -371), 0), 100000000, 0, -370), 0), 100000000, 0, -369), 0, (("parsing/ast_helper.mli", 111, 4410, 4414), ("parsing/ast_helper.mli", 111, 4410, 4476), 0), 0, Tag1 ("Ast_helper", 45)), 0); (("construct", 804), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -368)], (0)), 100000000, 0, -367), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -366)], (0)), 100000000, 0, -365), (Tag1 (0, (Tag3 ((("lid", 737)), 0, (0)), 100000000, 0, -364), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -362)], (0)), 100000000, 0, -361); (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -363)]), 100000000, 0, -360)], (0)), 100000000, 0, -359), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -358), 0), 100000000, 0, -357), 0), 100000000, 0, -356), 0), 100000000, 0, -355), 0), 100000000, 0, -354), 0, (("parsing/ast_helper.mli", 112, 4477, 4481), ("parsing/ast_helper.mli", 113, 4524, 4575), 0), 0, Tag1 ("Ast_helper", 46)), 0); (("variant", 805), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -353)], (0)), 100000000, 0, -352), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -351)], (0)), 100000000, 0, -350), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "label"), 0, (0)), 100000000, 0, -349), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -348)], (0)), 100000000, 0, -347), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -346), 0), 100000000, 0, -345), 0), 100000000, 0, -344), 0), 100000000, 0, -343), 0), 100000000, 0, -342), 0, (("parsing/ast_helper.mli", 114, 4576, 4580), ("parsing/ast_helper.mli", 114, 4576, 4655), 0), 0, Tag1 ("Ast_helper", 47)), 0); (("record", 806), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -341)], (0)), 100000000, 0, -340), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -339)], (0)), 100000000, 0, -338), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("lid", 737)), 0, (0)), 100000000, 0, -336); (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -337)]), 100000000, 0, -335)], (0)), 100000000, 0, -334), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "closed_flag"), 0, (0)), 100000000, 0, -333), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -332), 0), 100000000, 0, -331), 0), 100000000, 0, -330), 0), 100000000, 0, -329), 0), 100000000, 0, -328), 0, (("parsing/ast_helper.mli", 115, 4656, 4660), ("parsing/ast_helper.mli", 116, 4736, 4762), 0), 0, Tag1 ("Ast_helper", 48)), 0); (("array", 807), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -327)], (0)), 100000000, 0, -326), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -325)], (0)), 100000000, 0, -324), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -323)], (0)), 100000000, 0, -322), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -321), 0), 100000000, 0, -320), 0), 100000000, 0, -319), 0), 100000000, 0, -318), 0, (("parsing/ast_helper.mli", 117, 4763, 4767), ("parsing/ast_helper.mli", 117, 4763, 4829), 0), 0, Tag1 ("Ast_helper", 49)), 0); (("or_", 808), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -317)], (0)), 100000000, 0, -316), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -315)], (0)), 100000000, 0, -314), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -313), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -312), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -311), 0), 100000000, 0, -310), 0), 100000000, 0, -309), 0), 100000000, 0, -308), 0), 100000000, 0, -307), 0, (("parsing/ast_helper.mli", 118, 4830, 4834), ("parsing/ast_helper.mli", 118, 4830, 4900), 0), 0, Tag1 ("Ast_helper", 50)), 0); (("constraint_", 809), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -306)], (0)), 100000000, 0, -305), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -304)], (0)), 100000000, 0, -303), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -302), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -301), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -300), 0), 100000000, 0, -299), 0), 100000000, 0, -298), 0), 100000000, 0, -297), 0), 100000000, 0, -296), 0, (("parsing/ast_helper.mli", 119, 4901, 4905), ("parsing/ast_helper.mli", 119, 4901, 4981), 0), 0, Tag1 ("Ast_helper", 51)), 0); (("type_", 810), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -295)], (0)), 100000000, 0, -294), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -293)], (0)), 100000000, 0, -292), (Tag1 (0, (Tag3 ((("lid", 737)), 0, (0)), 100000000, 0, -291), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -290), 0), 100000000, 0, -289), 0), 100000000, 0, -288), 0), 100000000, 0, -287), 0, (("parsing/ast_helper.mli", 120, 4982, 4986), ("parsing/ast_helper.mli", 120, 4982, 5039), 0), 0, Tag1 ("Ast_helper", 52)), 0); (("lazy_", 811), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -286)], (0)), 100000000, 0, -285), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -284)], (0)), 100000000, 0, -283), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -282), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -281), 0), 100000000, 0, -280), 0), 100000000, 0, -279), 0), 100000000, 0, -278), 0, (("parsing/ast_helper.mli", 121, 5040, 5044), ("parsing/ast_helper.mli", 121, 5040, 5101), 0), 0, Tag1 ("Ast_helper", 53)), 0); (("unpack", 812), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -277)], (0)), 100000000, 0, -276), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -275)], (0)), 100000000, 0, -274), (Tag1 (0, (Tag3 ((("str_opt", 739)), 0, (0)), 100000000, 0, -273), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -272), 0), 100000000, 0, -271), 0), 100000000, 0, -270), 0), 100000000, 0, -269), 0, (("parsing/ast_helper.mli", 122, 5102, 5106), ("parsing/ast_helper.mli", 122, 5102, 5164), 0), 0, Tag1 ("Ast_helper", 54)), 0); (("open_", 813), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -268)], (0)), 100000000, 0, -267), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -266)], (0)), 100000000, 0, -265), (Tag1 (0, (Tag3 ((("lid", 737)), 0, (0)), 100000000, 0, -264), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -263), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -262), 0), 100000000, 0, -261), 0), 100000000, 0, -260), 0), 100000000, 0, -259), 0), 100000000, 0, -258), 0, (("parsing/ast_helper.mli", 123, 5165, 5169), ("parsing/ast_helper.mli", 123, 5165, 5234), 0), 0, Tag1 ("Ast_helper", 55)), 0); (("exception_", 814), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -257)], (0)), 100000000, 0, -256), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -255)], (0)), 100000000, 0, -254), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -253), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -252), 0), 100000000, 0, -251), 0), 100000000, 0, -250), 0), 100000000, 0, -249), 0, (("parsing/ast_helper.mli", 124, 5235, 5239), ("parsing/ast_helper.mli", 124, 5235, 5301), 0), 0, Tag1 ("Ast_helper", 56)), 0); (("extension", 815), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -248)], (0)), 100000000, 0, -247), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -246)], (0)), 100000000, 0, -245), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "extension"), 0, (0)), 100000000, 0, -244), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -243), 0), 100000000, 0, -242), 0), 100000000, 0, -241), 0), 100000000, 0, -240), 0, (("parsing/ast_helper.mli", 125, 5302, 5306), ("parsing/ast_helper.mli", 125, 5302, 5369), 0), 0, Tag1 ("Ast_helper", 57)), 0)]), 0, (("parsing/ast_helper.mli", 101, 3956, 3956), ("parsing/ast_helper.mli", 126, 5370, 5375), 0), Tag1 ("Ast_helper", 58)), 0, 0); Tag3 (("Exp", 747), 0, (Tag1 ([(("mk", 816), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -898)], (0)), 100000000, 0, -897), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -896)], (0)), 100000000, 0, -895), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression_desc"), 0, (0)), 100000000, 0, -894), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -893), 0), 100000000, 0, -892), 0), 100000000, 0, -891), 0), 100000000, 0, -890), 0, (("parsing/ast_helper.mli", 131, 5414, 5418), ("parsing/ast_helper.mli", 131, 5414, 5483), 0), 0, Tag1 ("Ast_helper", 59)), 0); (("attr", 817), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -889), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attribute"), 0, (0)), 100000000, 0, -888), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -887), 0), 100000000, 0, -886), 0), 100000000, 0, -885), 0, (("parsing/ast_helper.mli", 132, 5484, 5488), ("parsing/ast_helper.mli", 132, 5484, 5535), 0), 0, Tag1 ("Ast_helper", 60)), 0); (("ident", 818), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -884)], (0)), 100000000, 0, -883), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -882)], (0)), 100000000, 0, -881), (Tag1 (0, (Tag3 ((("lid", 737)), 0, (0)), 100000000, 0, -880), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -879), 0), 100000000, 0, -878), 0), 100000000, 0, -877), 0), 100000000, 0, -876), 0, (("parsing/ast_helper.mli", 134, 5537, 5541), ("parsing/ast_helper.mli", 134, 5537, 5597), 0), 0, Tag1 ("Ast_helper", 61)), 0); (("constant", 819), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -875)], (0)), 100000000, 0, -874), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -873)], (0)), 100000000, 0, -872), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "constant"), 0, (0)), 100000000, 0, -871), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -870), 0), 100000000, 0, -869), 0), 100000000, 0, -868), 0), 100000000, 0, -867), 0, (("parsing/ast_helper.mli", 135, 5598, 5602), ("parsing/ast_helper.mli", 135, 5598, 5666), 0), 0, Tag1 ("Ast_helper", 62)), 0); (("let_", 820), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -866)], (0)), 100000000, 0, -865), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -864)], (0)), 100000000, 0, -863), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "rec_flag"), 0, (0)), 100000000, 0, -862), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "value_binding"), 0, (0)), 100000000, 0, -861)], (0)), 100000000, 0, -860), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -859), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -858), 0), 100000000, 0, -857), 0), 100000000, 0, -856), 0), 100000000, 0, -855), 0), 100000000, 0, -854), 0), 100000000, 0, -853), 0, (("parsing/ast_helper.mli", 136, 5667, 5671), ("parsing/ast_helper.mli", 137, 5740, 5781), 0), 0, Tag1 ("Ast_helper", 63)), 0); (("fun_", 821), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -852)], (0)), 100000000, 0, -851), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -850)], (0)), 100000000, 0, -849), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "arg_label"), 0, (0)), 100000000, 0, -848), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -847)], (0)), 100000000, 0, -846), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -845), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -844), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -843), 0), 100000000, 0, -842), 0), 100000000, 0, -841), 0), 100000000, 0, -840), 0), 100000000, 0, -839), 0), 100000000, 0, -838), 0), 100000000, 0, -837), 0, (("parsing/ast_helper.mli", 138, 5782, 5786), ("parsing/ast_helper.mli", 139, 5855, 5907), 0), 0, Tag1 ("Ast_helper", 64)), 0); (("function_", 822), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -836)], (0)), 100000000, 0, -835), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -834)], (0)), 100000000, 0, -833), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "case"), 0, (0)), 100000000, 0, -832)], (0)), 100000000, 0, -831), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -830), 0), 100000000, 0, -829), 0), 100000000, 0, -828), 0), 100000000, 0, -827), 0, (("parsing/ast_helper.mli", 140, 5908, 5912), ("parsing/ast_helper.mli", 140, 5908, 5978), 0), 0, Tag1 ("Ast_helper", 65)), 0); (("apply", 823), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -826)], (0)), 100000000, 0, -825), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -824)], (0)), 100000000, 0, -823), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -822), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Asttypes")), "arg_label"), 0, (0)), 100000000, 0, -820); (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -821)]), 100000000, 0, -819)], (0)), 100000000, 0, -818), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -817), 0), 100000000, 0, -816), 0), 100000000, 0, -815), 0), 100000000, 0, -814), 0), 100000000, 0, -813), 0, (("parsing/ast_helper.mli", 141, 5979, 5983), ("parsing/ast_helper.mli", 142, 6033, 6094), 0), 0, Tag1 ("Ast_helper", 66)), 0); (("match_", 824), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -812)], (0)), 100000000, 0, -811), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -810)], (0)), 100000000, 0, -809), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -808), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "case"), 0, (0)), 100000000, 0, -807)], (0)), 100000000, 0, -806), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -805), 0), 100000000, 0, -804), 0), 100000000, 0, -803), 0), 100000000, 0, -802), 0), 100000000, 0, -801), 0, (("parsing/ast_helper.mli", 143, 6095, 6099), ("parsing/ast_helper.mli", 144, 6163, 6192), 0), 0, Tag1 ("Ast_helper", 67)), 0); (("try_", 825), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -800)], (0)), 100000000, 0, -799), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -798)], (0)), 100000000, 0, -797), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -796), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "case"), 0, (0)), 100000000, 0, -795)], (0)), 100000000, 0, -794), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -793), 0), 100000000, 0, -792), 0), 100000000, 0, -791), 0), 100000000, 0, -790), 0), 100000000, 0, -789), 0, (("parsing/ast_helper.mli", 145, 6193, 6197), ("parsing/ast_helper.mli", 145, 6193, 6272), 0), 0, Tag1 ("Ast_helper", 68)), 0); (("tuple", 826), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -788)], (0)), 100000000, 0, -787), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -786)], (0)), 100000000, 0, -785), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -784)], (0)), 100000000, 0, -783), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -782), 0), 100000000, 0, -781), 0), 100000000, 0, -780), 0), 100000000, 0, -779), 0, (("parsing/ast_helper.mli", 146, 6273, 6277), ("parsing/ast_helper.mli", 146, 6273, 6345), 0), 0, Tag1 ("Ast_helper", 69)), 0); (("construct", 827), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -778)], (0)), 100000000, 0, -777), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -776)], (0)), 100000000, 0, -775), (Tag1 (0, (Tag3 ((("lid", 737)), 0, (0)), 100000000, 0, -774), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -773)], (0)), 100000000, 0, -772), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -771), 0), 100000000, 0, -770), 0), 100000000, 0, -769), 0), 100000000, 0, -768), 0), 100000000, 0, -767), 0, (("parsing/ast_helper.mli", 147, 6346, 6350), ("parsing/ast_helper.mli", 148, 6418, 6450), 0), 0, Tag1 ("Ast_helper", 70)), 0); (("variant", 828), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -766)], (0)), 100000000, 0, -765), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -764)], (0)), 100000000, 0, -763), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "label"), 0, (0)), 100000000, 0, -762), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -761)], (0)), 100000000, 0, -760), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -759), 0), 100000000, 0, -758), 0), 100000000, 0, -757), 0), 100000000, 0, -756), 0), 100000000, 0, -755), 0, (("parsing/ast_helper.mli", 149, 6451, 6455), ("parsing/ast_helper.mli", 150, 6523, 6553), 0), 0, Tag1 ("Ast_helper", 71)), 0); (("record", 829), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -754)], (0)), 100000000, 0, -753), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -752)], (0)), 100000000, 0, -751), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("lid", 737)), 0, (0)), 100000000, 0, -749); (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -750)]), 100000000, 0, -748)], (0)), 100000000, 0, -747), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -746)], (0)), 100000000, 0, -745), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -744), 0), 100000000, 0, -743), 0), 100000000, 0, -742), 0), 100000000, 0, -741), 0), 100000000, 0, -740), 0, (("parsing/ast_helper.mli", 151, 6554, 6558), ("parsing/ast_helper.mli", 152, 6622, 6672), 0), 0, Tag1 ("Ast_helper", 72)), 0); (("field", 830), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -739)], (0)), 100000000, 0, -738), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -737)], (0)), 100000000, 0, -736), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -735), (Tag1 (0, (Tag3 ((("lid", 737)), 0, (0)), 100000000, 0, -734), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -733), 0), 100000000, 0, -732), 0), 100000000, 0, -731), 0), 100000000, 0, -730), 0), 100000000, 0, -729), 0, (("parsing/ast_helper.mli", 153, 6673, 6677), ("parsing/ast_helper.mli", 153, 6673, 6747), 0), 0, Tag1 ("Ast_helper", 73)), 0); (("setfield", 831), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -728)], (0)), 100000000, 0, -727), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -726)], (0)), 100000000, 0, -725), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -724), (Tag1 (0, (Tag3 ((("lid", 737)), 0, (0)), 100000000, 0, -723), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -722), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -721), 0), 100000000, 0, -720), 0), 100000000, 0, -719), 0), 100000000, 0, -718), 0), 100000000, 0, -717), 0), 100000000, 0, -716), 0, (("parsing/ast_helper.mli", 154, 6748, 6752), ("parsing/ast_helper.mli", 155, 6826, 6857), 0), 0, Tag1 ("Ast_helper", 74)), 0); (("array", 832), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -715)], (0)), 100000000, 0, -714), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -713)], (0)), 100000000, 0, -712), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -711)], (0)), 100000000, 0, -710), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -709), 0), 100000000, 0, -708), 0), 100000000, 0, -707), 0), 100000000, 0, -706), 0, (("parsing/ast_helper.mli", 156, 6858, 6862), ("parsing/ast_helper.mli", 156, 6858, 6930), 0), 0, Tag1 ("Ast_helper", 75)), 0); (("ifthenelse", 833), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -705)], (0)), 100000000, 0, -704), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -703)], (0)), 100000000, 0, -702), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -701), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -700), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -699)], (0)), 100000000, 0, -698), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -697), 0), 100000000, 0, -696), 0), 100000000, 0, -695), 0), 100000000, 0, -694), 0), 100000000, 0, -693), 0), 100000000, 0, -692), 0, (("parsing/ast_helper.mli", 157, 6931, 6935), ("parsing/ast_helper.mli", 158, 7004, 7058), 0), 0, Tag1 ("Ast_helper", 76)), 0); (("sequence", 834), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -691)], (0)), 100000000, 0, -690), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -689)], (0)), 100000000, 0, -688), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -687), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -686), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -685), 0), 100000000, 0, -684), 0), 100000000, 0, -683), 0), 100000000, 0, -682), 0), 100000000, 0, -681), 0, (("parsing/ast_helper.mli", 159, 7059, 7063), ("parsing/ast_helper.mli", 160, 7130, 7161), 0), 0, Tag1 ("Ast_helper", 77)), 0); (("while_", 835), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -680)], (0)), 100000000, 0, -679), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -678)], (0)), 100000000, 0, -677), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -676), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -675), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -674), 0), 100000000, 0, -673), 0), 100000000, 0, -672), 0), 100000000, 0, -671), 0), 100000000, 0, -670), 0, (("parsing/ast_helper.mli", 161, 7162, 7166), ("parsing/ast_helper.mli", 162, 7231, 7260), 0), 0, Tag1 ("Ast_helper", 78)), 0); (("for_", 836), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -669)], (0)), 100000000, 0, -668), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -667)], (0)), 100000000, 0, -666), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -665), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -664), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -663), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "direction_flag"), 0, (0)), 100000000, 0, -662), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -661), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -660), 0), 100000000, 0, -659), 0), 100000000, 0, -658), 0), 100000000, 0, -657), 0), 100000000, 0, -656), 0), 100000000, 0, -655), 0), 100000000, 0, -654), 0), 100000000, 0, -653), 0, (("parsing/ast_helper.mli", 163, 7261, 7265), ("parsing/ast_helper.mli", 164, 7339, 7398), 0), 0, Tag1 ("Ast_helper", 79)), 0); (("coerce", 837), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -652)], (0)), 100000000, 0, -651), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -650)], (0)), 100000000, 0, -649), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -648), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -647)], (0)), 100000000, 0, -646), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -645), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -644), 0), 100000000, 0, -643), 0), 100000000, 0, -642), 0), 100000000, 0, -641), 0), 100000000, 0, -640), 0), 100000000, 0, -639), 0, (("parsing/ast_helper.mli", 165, 7399, 7403), ("parsing/ast_helper.mli", 166, 7474, 7516), 0), 0, Tag1 ("Ast_helper", 80)), 0); (("constraint_", 838), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -638)], (0)), 100000000, 0, -637), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -636)], (0)), 100000000, 0, -635), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -634), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -633), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -632), 0), 100000000, 0, -631), 0), 100000000, 0, -630), 0), 100000000, 0, -629), 0), 100000000, 0, -628), 0, (("parsing/ast_helper.mli", 167, 7517, 7521), ("parsing/ast_helper.mli", 168, 7590, 7624), 0), 0, Tag1 ("Ast_helper", 81)), 0); (("send", 839), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -627)], (0)), 100000000, 0, -626), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -625)], (0)), 100000000, 0, -624), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -623), (Tag1 (0, (Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -622), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -621), 0), 100000000, 0, -620), 0), 100000000, 0, -619), 0), 100000000, 0, -618), 0), 100000000, 0, -617), 0, (("parsing/ast_helper.mli", 169, 7625, 7629), ("parsing/ast_helper.mli", 169, 7625, 7698), 0), 0, Tag1 ("Ast_helper", 82)), 0); (("new_", 840), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -616)], (0)), 100000000, 0, -615), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -614)], (0)), 100000000, 0, -613), (Tag1 (0, (Tag3 ((("lid", 737)), 0, (0)), 100000000, 0, -612), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -611), 0), 100000000, 0, -610), 0), 100000000, 0, -609), 0), 100000000, 0, -608), 0, (("parsing/ast_helper.mli", 170, 7699, 7703), ("parsing/ast_helper.mli", 170, 7699, 7758), 0), 0, Tag1 ("Ast_helper", 83)), 0); (("setinstvar", 841), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -607)], (0)), 100000000, 0, -606), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -605)], (0)), 100000000, 0, -604), (Tag1 (0, (Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -603), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -602), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -601), 0), 100000000, 0, -600), 0), 100000000, 0, -599), 0), 100000000, 0, -598), 0), 100000000, 0, -597), 0, (("parsing/ast_helper.mli", 171, 7759, 7763), ("parsing/ast_helper.mli", 171, 7759, 7838), 0), 0, Tag1 ("Ast_helper", 84)), 0); (("override", 842), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -596)], (0)), 100000000, 0, -595), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -594)], (0)), 100000000, 0, -593), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -591); (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -592)]), 100000000, 0, -590)], (0)), 100000000, 0, -589), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -588), 0), 100000000, 0, -587), 0), 100000000, 0, -586), 0), 100000000, 0, -585), 0, (("parsing/ast_helper.mli", 172, 7839, 7843), ("parsing/ast_helper.mli", 173, 7909, 7940), 0), 0, Tag1 ("Ast_helper", 85)), 0); (("letmodule", 843), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -584)], (0)), 100000000, 0, -583), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -582)], (0)), 100000000, 0, -581), (Tag1 (0, (Tag3 ((("str_opt", 739)), 0, (0)), 100000000, 0, -580), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr"), 0, (0)), 100000000, 0, -579), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -578), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -577), 0), 100000000, 0, -576), 0), 100000000, 0, -575), 0), 100000000, 0, -574), 0), 100000000, 0, -573), 0), 100000000, 0, -572), 0, (("parsing/ast_helper.mli", 174, 7941, 7945), ("parsing/ast_helper.mli", 175, 8011, 8057), 0), 0, Tag1 ("Ast_helper", 86)), 0); (("letexception", 844), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -571)], (0)), 100000000, 0, -570), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -569)], (0)), 100000000, 0, -568), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "extension_constructor"), 0, (0)), 100000000, 0, -567), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -566), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -565), 0), 100000000, 0, -564), 0), 100000000, 0, -563), 0), 100000000, 0, -562), 0), 100000000, 0, -561), 0, (("parsing/ast_helper.mli", 176, 8058, 8062), ("parsing/ast_helper.mli", 178, 8150, 8169), 0), 0, Tag1 ("Ast_helper", 87)), 0); (("assert_", 845), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -560)], (0)), 100000000, 0, -559), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -558)], (0)), 100000000, 0, -557), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -556), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -555), 0), 100000000, 0, -554), 0), 100000000, 0, -553), 0), 100000000, 0, -552), 0, (("parsing/ast_helper.mli", 179, 8170, 8174), ("parsing/ast_helper.mli", 179, 8170, 8239), 0), 0, Tag1 ("Ast_helper", 88)), 0); (("lazy_", 846), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -551)], (0)), 100000000, 0, -550), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -549)], (0)), 100000000, 0, -548), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -547), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -546), 0), 100000000, 0, -545), 0), 100000000, 0, -544), 0), 100000000, 0, -543), 0, (("parsing/ast_helper.mli", 180, 8240, 8244), ("parsing/ast_helper.mli", 180, 8240, 8307), 0), 0, Tag1 ("Ast_helper", 89)), 0); (("poly", 847), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -542)], (0)), 100000000, 0, -541), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -540)], (0)), 100000000, 0, -539), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -538), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -537)], (0)), 100000000, 0, -536), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -535), 0), 100000000, 0, -534), 0), 100000000, 0, -533), 0), 100000000, 0, -532), 0), 100000000, 0, -531), 0, (("parsing/ast_helper.mli", 181, 8308, 8312), ("parsing/ast_helper.mli", 182, 8381, 8408), 0), 0, Tag1 ("Ast_helper", 90)), 0); (("object_", 848), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -530)], (0)), 100000000, 0, -529), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -528)], (0)), 100000000, 0, -527), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_structure"), 0, (0)), 100000000, 0, -526), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -525), 0), 100000000, 0, -524), 0), 100000000, 0, -523), 0), 100000000, 0, -522), 0, (("parsing/ast_helper.mli", 183, 8409, 8413), ("parsing/ast_helper.mli", 183, 8409, 8483), 0), 0, Tag1 ("Ast_helper", 91)), 0); (("newtype", 849), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -521)], (0)), 100000000, 0, -520), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -519)], (0)), 100000000, 0, -518), (Tag1 (0, (Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -517), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -516), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -515), 0), 100000000, 0, -514), 0), 100000000, 0, -513), 0), 100000000, 0, -512), 0), 100000000, 0, -511), 0, (("parsing/ast_helper.mli", 184, 8484, 8488), ("parsing/ast_helper.mli", 184, 8484, 8560), 0), 0, Tag1 ("Ast_helper", 92)), 0); (("pack", 850), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -510)], (0)), 100000000, 0, -509), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -508)], (0)), 100000000, 0, -507), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr"), 0, (0)), 100000000, 0, -506), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -505), 0), 100000000, 0, -504), 0), 100000000, 0, -503), 0), 100000000, 0, -502), 0, (("parsing/ast_helper.mli", 185, 8561, 8565), ("parsing/ast_helper.mli", 185, 8561, 8628), 0), 0, Tag1 ("Ast_helper", 93)), 0); (("open_", 851), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -501)], (0)), 100000000, 0, -500), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -499)], (0)), 100000000, 0, -498), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "open_declaration"), 0, (0)), 100000000, 0, -497), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -496), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -495), 0), 100000000, 0, -494), 0), 100000000, 0, -493), 0), 100000000, 0, -492), 0), 100000000, 0, -491), 0, (("parsing/ast_helper.mli", 186, 8629, 8633), ("parsing/ast_helper.mli", 187, 8703, 8731), 0), 0, Tag1 ("Ast_helper", 94)), 0); (("letop", 852), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -490)], (0)), 100000000, 0, -489), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -488)], (0)), 100000000, 0, -487), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "binding_op"), 0, (0)), 100000000, 0, -486), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "binding_op"), 0, (0)), 100000000, 0, -485)], (0)), 100000000, 0, -484), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -483), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -482), 0), 100000000, 0, -481), 0), 100000000, 0, -480), 0), 100000000, 0, -479), 0), 100000000, 0, -478), 0), 100000000, 0, -477), 0, (("parsing/ast_helper.mli", 188, 8732, 8736), ("parsing/ast_helper.mli", 189, 8786, 8847), 0), 0, Tag1 ("Ast_helper", 95)), 0); (("extension", 853), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -476)], (0)), 100000000, 0, -475), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -474)], (0)), 100000000, 0, -473), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "extension"), 0, (0)), 100000000, 0, -472), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -471), 0), 100000000, 0, -470), 0), 100000000, 0, -469), 0), 100000000, 0, -468), 0, (("parsing/ast_helper.mli", 190, 8848, 8852), ("parsing/ast_helper.mli", 190, 8848, 8918), 0), 0, Tag1 ("Ast_helper", 96)), 0); (("unreachable", 854), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -467)], (0)), 100000000, 0, -466), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -465)], (0)), 100000000, 0, -464), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -463), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -462), 0), 100000000, 0, -461), 0), 100000000, 0, -460), 0), 100000000, 0, -459), 0, (("parsing/ast_helper.mli", 191, 8919, 8923), ("parsing/ast_helper.mli", 191, 8919, 8986), 0), 0, Tag1 ("Ast_helper", 97)), 0); (("case", 855), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -458), (Tag1 (Tag1 ("guard"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -457)], (0)), 100000000, 0, -456), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -455), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "case"), 0, (0)), 100000000, 0, -454), 0), 100000000, 0, -453), 0), 100000000, 0, -452), 0), 100000000, 0, -451), 0, (("parsing/ast_helper.mli", 193, 8988, 8992), ("parsing/ast_helper.mli", 193, 8988, 9052), 0), 0, Tag1 ("Ast_helper", 98)), 0); (("binding_op", 856), ((Tag1 (0, (Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -450), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -449), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -448), (Tag1 (0, (Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -447), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "binding_op"), 0, (0)), 100000000, 0, -446), 0), 100000000, 0, -445), 0), 100000000, 0, -444), 0), 100000000, 0, -443), 0), 100000000, 0, -442), 0, (("parsing/ast_helper.mli", 194, 9053, 9057), ("parsing/ast_helper.mli", 194, 9053, 9122), 0), 0, Tag1 ("Ast_helper", 99)), 0)]), 0, (("parsing/ast_helper.mli", 129, 5396, 5396), ("parsing/ast_helper.mli", 195, 9123, 9128), 0), Tag1 ("Ast_helper", 100)), 0, 0); Tag3 (("Val", 748), 0, (Tag1 ([(("mk", 857), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -916)], (0)), 100000000, 0, -915), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -914)], (0)), 100000000, 0, -913), (Tag1 (Tag1 ("docs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "docs"), 0, (0)), 100000000, 0, -912)], (0)), 100000000, 0, -911), (Tag1 (Tag1 ("prim"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -910)], (0)), 100000000, 0, -909)], (0)), 100000000, 0, -908), (Tag1 (0, (Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -907), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -906), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "value_description"), 0, (0)), 100000000, 0, -905), 0), 100000000, 0, -904), 0), 100000000, 0, -903), 0), 100000000, 0, -902), 0), 100000000, 0, -901), 0), 100000000, 0, -900), 0), 100000000, 0, -899), 0, (("parsing/ast_helper.mli", 200, 9174, 9178), ("parsing/ast_helper.mli", 201, 9228, 9292), 0), 0, Tag1 ("Ast_helper", 101)), 0)]), 0, (("parsing/ast_helper.mli", 198, 9156, 9156), ("parsing/ast_helper.mli", 202, 9293, 9298), 0), Tag1 ("Ast_helper", 102)), 0, 0); Tag3 (("Type", 749), 0, (Tag1 ([(("mk", 858), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -994)], (0)), 100000000, 0, -993), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -992)], (0)), 100000000, 0, -991), (Tag1 (Tag1 ("docs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "docs"), 0, (0)), 100000000, 0, -990)], (0)), 100000000, 0, -989), (Tag1 (Tag1 ("text"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "text"), 0, (0)), 100000000, 0, -988)], (0)), 100000000, 0, -987), (Tag1 (Tag1 ("params"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -983); (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Asttypes")), "variance"), 0, (0)), 100000000, 0, -985); (Tag3 (Tag1 ((Tag2 ("Asttypes")), "injectivity"), 0, (0)), 100000000, 0, -986)]), 100000000, 0, -984)]), 100000000, 0, -982)], (0)), 100000000, 0, -981)], (0)), 100000000, 0, -980), (Tag1 (Tag1 ("cstrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -977); (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -978); (Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -979)]), 100000000, 0, -976)], (0)), 100000000, 0, -975)], (0)), 100000000, 0, -974), (Tag1 (Tag1 ("kind"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "type_kind"), 0, (0)), 100000000, 0, -973)], (0)), 100000000, 0, -972), (Tag1 (Tag1 ("priv"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Asttypes")), "private_flag"), 0, (0)), 100000000, 0, -971)], (0)), 100000000, 0, -970), (Tag1 (Tag1 ("manifest"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -969)], (0)), 100000000, 0, -968), (Tag1 (0, (Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -967), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "type_declaration"), 0, (0)), 100000000, 0, -966), 0), 100000000, 0, -965), 0), 100000000, 0, -964), 0), 100000000, 0, -963), 0), 100000000, 0, -962), 0), 100000000, 0, -961), 0), 100000000, 0, -960), 0), 100000000, 0, -959), 0), 100000000, 0, -958), 0), 100000000, 0, -957), 0), 100000000, 0, -956), 0, (("parsing/ast_helper.mli", 207, 9344, 9348), ("parsing/ast_helper.mli", 211, 9601, 9623), 0), 0, Tag1 ("Ast_helper", 103)), 0); (("constructor", 859), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -955)], (0)), 100000000, 0, -954), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -953)], (0)), 100000000, 0, -952), (Tag1 (Tag1 ("info"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "info"), 0, (0)), 100000000, 0, -951)], (0)), 100000000, 0, -950), (Tag1 (Tag1 ("vars"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -949)], (0)), 100000000, 0, -948)], (0)), 100000000, 0, -947), (Tag1 (Tag1 ("args"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "constructor_arguments"), 0, (0)), 100000000, 0, -946)], (0)), 100000000, 0, -945), (Tag1 (Tag1 ("res"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -944)], (0)), 100000000, 0, -943), (Tag1 (0, (Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -942), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "constructor_declaration"), 0, (0)), 100000000, 0, -941), 0), 100000000, 0, -940), 0), 100000000, 0, -939), 0), 100000000, 0, -938), 0), 100000000, 0, -937), 0), 100000000, 0, -936), 0), 100000000, 0, -935), 0), 100000000, 0, -934), 0, (("parsing/ast_helper.mli", 213, 9625, 9629), ("parsing/ast_helper.mli", 216, 9774, 9803), 0), 0, Tag1 ("Ast_helper", 104)), 0); (("field", 860), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -933)], (0)), 100000000, 0, -932), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -931)], (0)), 100000000, 0, -930), (Tag1 (Tag1 ("info"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "info"), 0, (0)), 100000000, 0, -929)], (0)), 100000000, 0, -928), (Tag1 (Tag1 ("mut"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Asttypes")), "mutable_flag"), 0, (0)), 100000000, 0, -927)], (0)), 100000000, 0, -926), (Tag1 (0, (Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -925), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -924), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "label_declaration"), 0, (0)), 100000000, 0, -923), 0), 100000000, 0, -922), 0), 100000000, 0, -921), 0), 100000000, 0, -920), 0), 100000000, 0, -919), 0), 100000000, 0, -918), 0), 100000000, 0, -917), 0, (("parsing/ast_helper.mli", 217, 9804, 9808), ("parsing/ast_helper.mli", 218, 9861, 9925), 0), 0, Tag1 ("Ast_helper", 105)), 0)]), 0, (("parsing/ast_helper.mli", 205, 9325, 9325), ("parsing/ast_helper.mli", 219, 9926, 9931), 0), Tag1 ("Ast_helper", 106)), 0, 0); Tag3 (("Te", 750), 0, (Tag1 ([(("mk", 861), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1091)], (0)), 100000000, 0, -1090), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1089)], (0)), 100000000, 0, -1088), (Tag1 (Tag1 ("docs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "docs"), 0, (0)), 100000000, 0, -1087)], (0)), 100000000, 0, -1086), (Tag1 (Tag1 ("params"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -1082); (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Asttypes")), "variance"), 0, (0)), 100000000, 0, -1084); (Tag3 (Tag1 ((Tag2 ("Asttypes")), "injectivity"), 0, (0)), 100000000, 0, -1085)]), 100000000, 0, -1083)]), 100000000, 0, -1081)], (0)), 100000000, 0, -1080)], (0)), 100000000, 0, -1079), (Tag1 (Tag1 ("priv"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Asttypes")), "private_flag"), 0, (0)), 100000000, 0, -1078)], (0)), 100000000, 0, -1077), (Tag1 (0, (Tag3 ((("lid", 737)), 0, (0)), 100000000, 0, -1076), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "extension_constructor"), 0, (0)), 100000000, 0, -1075)], (0)), 100000000, 0, -1074), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "type_extension"), 0, (0)), 100000000, 0, -1073), 0), 100000000, 0, -1072), 0), 100000000, 0, -1071), 0), 100000000, 0, -1070), 0), 100000000, 0, -1069), 0), 100000000, 0, -1068), 0), 100000000, 0, -1067), 0), 100000000, 0, -1066), 0, (("parsing/ast_helper.mli", 224, 9973, 9977), ("parsing/ast_helper.mli", 226, 10088, 10167), 0), 0, Tag1 ("Ast_helper", 107)), 0); (("mk_exception", 862), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1065)], (0)), 100000000, 0, -1064), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1063)], (0)), 100000000, 0, -1062), (Tag1 (Tag1 ("docs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "docs"), 0, (0)), 100000000, 0, -1061)], (0)), 100000000, 0, -1060), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "extension_constructor"), 0, (0)), 100000000, 0, -1059), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "type_exception"), 0, (0)), 100000000, 0, -1058), 0), 100000000, 0, -1057), 0), 100000000, 0, -1056), 0), 100000000, 0, -1055), 0), 100000000, 0, -1054), 0, (("parsing/ast_helper.mli", 228, 10169, 10173), ("parsing/ast_helper.mli", 229, 10233, 10278), 0), 0, Tag1 ("Ast_helper", 108)), 0); (("constructor", 863), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1053)], (0)), 100000000, 0, -1052), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1051)], (0)), 100000000, 0, -1050), (Tag1 (Tag1 ("docs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "docs"), 0, (0)), 100000000, 0, -1049)], (0)), 100000000, 0, -1048), (Tag1 (Tag1 ("info"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "info"), 0, (0)), 100000000, 0, -1047)], (0)), 100000000, 0, -1046), (Tag1 (0, (Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -1045), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "extension_constructor_kind"), 0, (0)), 100000000, 0, -1044), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "extension_constructor"), 0, (0)), 100000000, 0, -1043), 0), 100000000, 0, -1042), 0), 100000000, 0, -1041), 0), 100000000, 0, -1040), 0), 100000000, 0, -1039), 0), 100000000, 0, -1038), 0), 100000000, 0, -1037), 0, (("parsing/ast_helper.mli", 231, 10280, 10284), ("parsing/ast_helper.mli", 232, 10357, 10421), 0), 0, Tag1 ("Ast_helper", 109)), 0); (("decl", 864), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1036)], (0)), 100000000, 0, -1035), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1034)], (0)), 100000000, 0, -1033), (Tag1 (Tag1 ("docs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "docs"), 0, (0)), 100000000, 0, -1032)], (0)), 100000000, 0, -1031), (Tag1 (Tag1 ("info"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "info"), 0, (0)), 100000000, 0, -1030)], (0)), 100000000, 0, -1029), (Tag1 (Tag1 ("vars"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -1028)], (0)), 100000000, 0, -1027)], (0)), 100000000, 0, -1026), (Tag1 (Tag1 ("args"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "constructor_arguments"), 0, (0)), 100000000, 0, -1025)], (0)), 100000000, 0, -1024), (Tag1 (Tag1 ("res"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -1023)], (0)), 100000000, 0, -1022), (Tag1 (0, (Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -1021), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "extension_constructor"), 0, (0)), 100000000, 0, -1020), 0), 100000000, 0, -1019), 0), 100000000, 0, -1018), 0), 100000000, 0, -1017), 0), 100000000, 0, -1016), 0), 100000000, 0, -1015), 0), 100000000, 0, -1014), 0), 100000000, 0, -1013), 0), 100000000, 0, -1012), 0, (("parsing/ast_helper.mli", 234, 10423, 10427), ("parsing/ast_helper.mli", 237, 10579, 10606), 0), 0, Tag1 ("Ast_helper", 110)), 0); (("rebind", 865), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1011)], (0)), 100000000, 0, -1010), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1009)], (0)), 100000000, 0, -1008), (Tag1 (Tag1 ("docs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "docs"), 0, (0)), 100000000, 0, -1007)], (0)), 100000000, 0, -1006), (Tag1 (Tag1 ("info"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "info"), 0, (0)), 100000000, 0, -1005)], (0)), 100000000, 0, -1004), (Tag1 (0, (Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -1003), (Tag1 (0, (Tag3 ((("lid", 737)), 0, (0)), 100000000, 0, -1002), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "extension_constructor"), 0, (0)), 100000000, 0, -1001), 0), 100000000, 0, -1000), 0), 100000000, 0, -999), 0), 100000000, 0, -998), 0), 100000000, 0, -997), 0), 100000000, 0, -996), 0), 100000000, 0, -995), 0, (("parsing/ast_helper.mli", 238, 10607, 10611), ("parsing/ast_helper.mli", 239, 10679, 10720), 0), 0, Tag1 ("Ast_helper", 111)), 0)]), 0, (("parsing/ast_helper.mli", 222, 9956, 9956), ("parsing/ast_helper.mli", 240, 10721, 10726), 0), Tag1 ("Ast_helper", 112)), 0, 0); Tag3 (("Mty", 751), 0, (Tag1 ([(("mk", 866), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1173)], (0)), 100000000, 0, -1172), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1171)], (0)), 100000000, 0, -1170), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type_desc"), 0, (0)), 100000000, 0, -1169), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type"), 0, (0)), 100000000, 0, -1168), 0), 100000000, 0, -1167), 0), 100000000, 0, -1166), 0), 100000000, 0, -1165), 0, (("parsing/ast_helper.mli", 247, 10805, 10809), ("parsing/ast_helper.mli", 247, 10805, 10876), 0), 0, Tag1 ("Ast_helper", 113)), 0); (("attr", 867), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type"), 0, (0)), 100000000, 0, -1164), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attribute"), 0, (0)), 100000000, 0, -1163), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type"), 0, (0)), 100000000, 0, -1162), 0), 100000000, 0, -1161), 0), 100000000, 0, -1160), 0, (("parsing/ast_helper.mli", 248, 10877, 10881), ("parsing/ast_helper.mli", 248, 10877, 10930), 0), 0, Tag1 ("Ast_helper", 114)), 0); (("ident", 868), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1159)], (0)), 100000000, 0, -1158), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1157)], (0)), 100000000, 0, -1156), (Tag1 (0, (Tag3 ((("lid", 737)), 0, (0)), 100000000, 0, -1155), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type"), 0, (0)), 100000000, 0, -1154), 0), 100000000, 0, -1153), 0), 100000000, 0, -1152), 0), 100000000, 0, -1151), 0, (("parsing/ast_helper.mli", 250, 10932, 10936), ("parsing/ast_helper.mli", 250, 10932, 10993), 0), 0, Tag1 ("Ast_helper", 115)), 0); (("alias", 869), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1150)], (0)), 100000000, 0, -1149), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1148)], (0)), 100000000, 0, -1147), (Tag1 (0, (Tag3 ((("lid", 737)), 0, (0)), 100000000, 0, -1146), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type"), 0, (0)), 100000000, 0, -1145), 0), 100000000, 0, -1144), 0), 100000000, 0, -1143), 0), 100000000, 0, -1142), 0, (("parsing/ast_helper.mli", 251, 10994, 10998), ("parsing/ast_helper.mli", 251, 10994, 11055), 0), 0, Tag1 ("Ast_helper", 116)), 0); (("signature", 870), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1141)], (0)), 100000000, 0, -1140), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1139)], (0)), 100000000, 0, -1138), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature"), 0, (0)), 100000000, 0, -1137), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type"), 0, (0)), 100000000, 0, -1136), 0), 100000000, 0, -1135), 0), 100000000, 0, -1134), 0), 100000000, 0, -1133), 0, (("parsing/ast_helper.mli", 252, 11056, 11060), ("parsing/ast_helper.mli", 252, 11056, 11127), 0), 0, Tag1 ("Ast_helper", 117)), 0); (("functor_", 871), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1132)], (0)), 100000000, 0, -1131), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1130)], (0)), 100000000, 0, -1129), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "functor_parameter"), 0, (0)), 100000000, 0, -1128), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type"), 0, (0)), 100000000, 0, -1127), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type"), 0, (0)), 100000000, 0, -1126), 0), 100000000, 0, -1125), 0), 100000000, 0, -1124), 0), 100000000, 0, -1123), 0), 100000000, 0, -1122), 0, (("parsing/ast_helper.mli", 253, 11128, 11132), ("parsing/ast_helper.mli", 254, 11174, 11227), 0), 0, Tag1 ("Ast_helper", 118)), 0); (("with_", 872), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1121)], (0)), 100000000, 0, -1120), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1119)], (0)), 100000000, 0, -1118), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type"), 0, (0)), 100000000, 0, -1117), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "with_constraint"), 0, (0)), 100000000, 0, -1116)], (0)), 100000000, 0, -1115), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type"), 0, (0)), 100000000, 0, -1114), 0), 100000000, 0, -1113), 0), 100000000, 0, -1112), 0), 100000000, 0, -1111), 0), 100000000, 0, -1110), 0, (("parsing/ast_helper.mli", 255, 11228, 11232), ("parsing/ast_helper.mli", 256, 11286, 11327), 0), 0, Tag1 ("Ast_helper", 119)), 0); (("typeof_", 873), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1109)], (0)), 100000000, 0, -1108), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1107)], (0)), 100000000, 0, -1106), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr"), 0, (0)), 100000000, 0, -1105), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type"), 0, (0)), 100000000, 0, -1104), 0), 100000000, 0, -1103), 0), 100000000, 0, -1102), 0), 100000000, 0, -1101), 0, (("parsing/ast_helper.mli", 257, 11328, 11332), ("parsing/ast_helper.mli", 257, 11328, 11399), 0), 0, Tag1 ("Ast_helper", 120)), 0); (("extension", 874), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1100)], (0)), 100000000, 0, -1099), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1098)], (0)), 100000000, 0, -1097), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "extension"), 0, (0)), 100000000, 0, -1096), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type"), 0, (0)), 100000000, 0, -1095), 0), 100000000, 0, -1094), 0), 100000000, 0, -1093), 0), 100000000, 0, -1092), 0, (("parsing/ast_helper.mli", 258, 11400, 11404), ("parsing/ast_helper.mli", 258, 11400, 11471), 0), 0, Tag1 ("Ast_helper", 121)), 0)]), 0, (("parsing/ast_helper.mli", 245, 10787, 10787), ("parsing/ast_helper.mli", 259, 11472, 11477), 0), Tag1 ("Ast_helper", 122)), 0, 0); Tag3 (("Mod", 752), 0, (Tag1 ([(("mk", 875), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1265)], (0)), 100000000, 0, -1264), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1263)], (0)), 100000000, 0, -1262), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr_desc"), 0, (0)), 100000000, 0, -1261), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr"), 0, (0)), 100000000, 0, -1260), 0), 100000000, 0, -1259), 0), 100000000, 0, -1258), 0), 100000000, 0, -1257), 0, (("parsing/ast_helper.mli", 264, 11523, 11527), ("parsing/ast_helper.mli", 264, 11523, 11594), 0), 0, Tag1 ("Ast_helper", 123)), 0); (("attr", 876), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr"), 0, (0)), 100000000, 0, -1256), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attribute"), 0, (0)), 100000000, 0, -1255), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr"), 0, (0)), 100000000, 0, -1254), 0), 100000000, 0, -1253), 0), 100000000, 0, -1252), 0, (("parsing/ast_helper.mli", 265, 11595, 11599), ("parsing/ast_helper.mli", 265, 11595, 11648), 0), 0, Tag1 ("Ast_helper", 124)), 0); (("ident", 877), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1251)], (0)), 100000000, 0, -1250), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1249)], (0)), 100000000, 0, -1248), (Tag1 (0, (Tag3 ((("lid", 737)), 0, (0)), 100000000, 0, -1247), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr"), 0, (0)), 100000000, 0, -1246), 0), 100000000, 0, -1245), 0), 100000000, 0, -1244), 0), 100000000, 0, -1243), 0, (("parsing/ast_helper.mli", 267, 11650, 11654), ("parsing/ast_helper.mli", 267, 11650, 11711), 0), 0, Tag1 ("Ast_helper", 125)), 0); (("structure", 878), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1242)], (0)), 100000000, 0, -1241), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1240)], (0)), 100000000, 0, -1239), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure"), 0, (0)), 100000000, 0, -1238), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr"), 0, (0)), 100000000, 0, -1237), 0), 100000000, 0, -1236), 0), 100000000, 0, -1235), 0), 100000000, 0, -1234), 0, (("parsing/ast_helper.mli", 268, 11712, 11716), ("parsing/ast_helper.mli", 268, 11712, 11783), 0), 0, Tag1 ("Ast_helper", 126)), 0); (("functor_", 879), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1233)], (0)), 100000000, 0, -1232), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1231)], (0)), 100000000, 0, -1230), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "functor_parameter"), 0, (0)), 100000000, 0, -1229), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr"), 0, (0)), 100000000, 0, -1228), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr"), 0, (0)), 100000000, 0, -1227), 0), 100000000, 0, -1226), 0), 100000000, 0, -1225), 0), 100000000, 0, -1224), 0), 100000000, 0, -1223), 0, (("parsing/ast_helper.mli", 269, 11784, 11788), ("parsing/ast_helper.mli", 270, 11830, 11883), 0), 0, Tag1 ("Ast_helper", 127)), 0); (("apply", 880), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1222)], (0)), 100000000, 0, -1221), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1220)], (0)), 100000000, 0, -1219), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr"), 0, (0)), 100000000, 0, -1218), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr"), 0, (0)), 100000000, 0, -1217), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr"), 0, (0)), 100000000, 0, -1216), 0), 100000000, 0, -1215), 0), 100000000, 0, -1214), 0), 100000000, 0, -1213), 0), 100000000, 0, -1212), 0, (("parsing/ast_helper.mli", 271, 11884, 11888), ("parsing/ast_helper.mli", 272, 11957, 11974), 0), 0, Tag1 ("Ast_helper", 128)), 0); (("apply_unit", 881), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1211)], (0)), 100000000, 0, -1210), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1209)], (0)), 100000000, 0, -1208), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr"), 0, (0)), 100000000, 0, -1207), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr"), 0, (0)), 100000000, 0, -1206), 0), 100000000, 0, -1205), 0), 100000000, 0, -1204), 0), 100000000, 0, -1203), 0, (("parsing/ast_helper.mli", 273, 11975, 11979), ("parsing/ast_helper.mli", 273, 11975, 12049), 0), 0, Tag1 ("Ast_helper", 129)), 0); (("constraint_", 882), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1202)], (0)), 100000000, 0, -1201), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1200)], (0)), 100000000, 0, -1199), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr"), 0, (0)), 100000000, 0, -1198), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type"), 0, (0)), 100000000, 0, -1197), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr"), 0, (0)), 100000000, 0, -1196), 0), 100000000, 0, -1195), 0), 100000000, 0, -1194), 0), 100000000, 0, -1193), 0), 100000000, 0, -1192), 0, (("parsing/ast_helper.mli", 274, 12050, 12054), ("parsing/ast_helper.mli", 275, 12129, 12146), 0), 0, Tag1 ("Ast_helper", 130)), 0); (("unpack", 883), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1191)], (0)), 100000000, 0, -1190), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1189)], (0)), 100000000, 0, -1188), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -1187), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr"), 0, (0)), 100000000, 0, -1186), 0), 100000000, 0, -1185), 0), 100000000, 0, -1184), 0), 100000000, 0, -1183), 0, (("parsing/ast_helper.mli", 276, 12147, 12151), ("parsing/ast_helper.mli", 276, 12147, 12216), 0), 0, Tag1 ("Ast_helper", 131)), 0); (("extension", 884), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1182)], (0)), 100000000, 0, -1181), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1180)], (0)), 100000000, 0, -1179), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "extension"), 0, (0)), 100000000, 0, -1178), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr"), 0, (0)), 100000000, 0, -1177), 0), 100000000, 0, -1176), 0), 100000000, 0, -1175), 0), 100000000, 0, -1174), 0, (("parsing/ast_helper.mli", 277, 12217, 12221), ("parsing/ast_helper.mli", 277, 12217, 12288), 0), 0, Tag1 ("Ast_helper", 132)), 0)]), 0, (("parsing/ast_helper.mli", 262, 11505, 11505), ("parsing/ast_helper.mli", 278, 12289, 12294), 0), Tag1 ("Ast_helper", 133)), 0, 0); Tag3 (("Sig", 753), 0, (Tag1 ([(("mk", 885), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1381)], (0)), 100000000, 0, -1380), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item_desc"), 0, (0)), 100000000, 0, -1379), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item"), 0, (0)), 100000000, 0, -1378), 0), 100000000, 0, -1377), 0), 100000000, 0, -1376), 0, (("parsing/ast_helper.mli", 283, 12337, 12341), ("parsing/ast_helper.mli", 283, 12337, 12398), 0), 0, Tag1 ("Ast_helper", 134)), 0); (("value", 886), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1375)], (0)), 100000000, 0, -1374), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "value_description"), 0, (0)), 100000000, 0, -1373), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item"), 0, (0)), 100000000, 0, -1372), 0), 100000000, 0, -1371), 0), 100000000, 0, -1370), 0, (("parsing/ast_helper.mli", 285, 12400, 12404), ("parsing/ast_helper.mli", 285, 12400, 12462), 0), 0, Tag1 ("Ast_helper", 135)), 0); (("type_", 887), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1369)], (0)), 100000000, 0, -1368), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "rec_flag"), 0, (0)), 100000000, 0, -1367), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "type_declaration"), 0, (0)), 100000000, 0, -1366)], (0)), 100000000, 0, -1365), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item"), 0, (0)), 100000000, 0, -1364), 0), 100000000, 0, -1363), 0), 100000000, 0, -1362), 0), 100000000, 0, -1361), 0, (("parsing/ast_helper.mli", 286, 12463, 12467), ("parsing/ast_helper.mli", 286, 12463, 12541), 0), 0, Tag1 ("Ast_helper", 136)), 0); (("type_subst", 888), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1360)], (0)), 100000000, 0, -1359), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "type_declaration"), 0, (0)), 100000000, 0, -1358)], (0)), 100000000, 0, -1357), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item"), 0, (0)), 100000000, 0, -1356), 0), 100000000, 0, -1355), 0), 100000000, 0, -1354), 0, (("parsing/ast_helper.mli", 287, 12542, 12546), ("parsing/ast_helper.mli", 287, 12542, 12613), 0), 0, Tag1 ("Ast_helper", 137)), 0); (("type_extension", 889), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1353)], (0)), 100000000, 0, -1352), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "type_extension"), 0, (0)), 100000000, 0, -1351), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item"), 0, (0)), 100000000, 0, -1350), 0), 100000000, 0, -1349), 0), 100000000, 0, -1348), 0, (("parsing/ast_helper.mli", 288, 12614, 12618), ("parsing/ast_helper.mli", 288, 12614, 12682), 0), 0, Tag1 ("Ast_helper", 138)), 0); (("exception_", 890), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1347)], (0)), 100000000, 0, -1346), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "type_exception"), 0, (0)), 100000000, 0, -1345), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item"), 0, (0)), 100000000, 0, -1344), 0), 100000000, 0, -1343), 0), 100000000, 0, -1342), 0, (("parsing/ast_helper.mli", 289, 12683, 12687), ("parsing/ast_helper.mli", 289, 12683, 12747), 0), 0, Tag1 ("Ast_helper", 139)), 0); (("module_", 891), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1341)], (0)), 100000000, 0, -1340), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_declaration"), 0, (0)), 100000000, 0, -1339), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item"), 0, (0)), 100000000, 0, -1338), 0), 100000000, 0, -1337), 0), 100000000, 0, -1336), 0, (("parsing/ast_helper.mli", 290, 12748, 12752), ("parsing/ast_helper.mli", 290, 12748, 12813), 0), 0, Tag1 ("Ast_helper", 140)), 0); (("mod_subst", 892), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1335)], (0)), 100000000, 0, -1334), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_substitution"), 0, (0)), 100000000, 0, -1333), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item"), 0, (0)), 100000000, 0, -1332), 0), 100000000, 0, -1331), 0), 100000000, 0, -1330), 0, (("parsing/ast_helper.mli", 291, 12814, 12818), ("parsing/ast_helper.mli", 291, 12814, 12882), 0), 0, Tag1 ("Ast_helper", 141)), 0); (("rec_module", 893), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1329)], (0)), 100000000, 0, -1328), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_declaration"), 0, (0)), 100000000, 0, -1327)], (0)), 100000000, 0, -1326), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item"), 0, (0)), 100000000, 0, -1325), 0), 100000000, 0, -1324), 0), 100000000, 0, -1323), 0, (("parsing/ast_helper.mli", 292, 12883, 12887), ("parsing/ast_helper.mli", 292, 12883, 12956), 0), 0, Tag1 ("Ast_helper", 142)), 0); (("modtype", 894), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1322)], (0)), 100000000, 0, -1321), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type_declaration"), 0, (0)), 100000000, 0, -1320), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item"), 0, (0)), 100000000, 0, -1319), 0), 100000000, 0, -1318), 0), 100000000, 0, -1317), 0, (("parsing/ast_helper.mli", 293, 12957, 12961), ("parsing/ast_helper.mli", 293, 12957, 13027), 0), 0, Tag1 ("Ast_helper", 143)), 0); (("modtype_subst", 895), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1316)], (0)), 100000000, 0, -1315), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type_declaration"), 0, (0)), 100000000, 0, -1314), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item"), 0, (0)), 100000000, 0, -1313), 0), 100000000, 0, -1312), 0), 100000000, 0, -1311), 0, (("parsing/ast_helper.mli", 294, 13028, 13032), ("parsing/ast_helper.mli", 294, 13028, 13104), 0), 0, Tag1 ("Ast_helper", 144)), 0); (("open_", 896), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1310)], (0)), 100000000, 0, -1309), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "open_description"), 0, (0)), 100000000, 0, -1308), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item"), 0, (0)), 100000000, 0, -1307), 0), 100000000, 0, -1306), 0), 100000000, 0, -1305), 0, (("parsing/ast_helper.mli", 295, 13105, 13109), ("parsing/ast_helper.mli", 295, 13105, 13166), 0), 0, Tag1 ("Ast_helper", 145)), 0); (("include_", 897), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1304)], (0)), 100000000, 0, -1303), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "include_description"), 0, (0)), 100000000, 0, -1302), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item"), 0, (0)), 100000000, 0, -1301), 0), 100000000, 0, -1300), 0), 100000000, 0, -1299), 0, (("parsing/ast_helper.mli", 296, 13167, 13171), ("parsing/ast_helper.mli", 296, 13167, 13234), 0), 0, Tag1 ("Ast_helper", 146)), 0); (("class_", 898), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1298)], (0)), 100000000, 0, -1297), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_description"), 0, (0)), 100000000, 0, -1296)], (0)), 100000000, 0, -1295), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item"), 0, (0)), 100000000, 0, -1294), 0), 100000000, 0, -1293), 0), 100000000, 0, -1292), 0, (("parsing/ast_helper.mli", 297, 13235, 13239), ("parsing/ast_helper.mli", 297, 13235, 13303), 0), 0, Tag1 ("Ast_helper", 147)), 0); (("class_type", 899), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1291)], (0)), 100000000, 0, -1290), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type_declaration"), 0, (0)), 100000000, 0, -1289)], (0)), 100000000, 0, -1288), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item"), 0, (0)), 100000000, 0, -1287), 0), 100000000, 0, -1286), 0), 100000000, 0, -1285), 0, (("parsing/ast_helper.mli", 298, 13304, 13308), ("parsing/ast_helper.mli", 298, 13304, 13381), 0), 0, Tag1 ("Ast_helper", 148)), 0); (("extension", 900), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1284)], (0)), 100000000, 0, -1283), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1282)], (0)), 100000000, 0, -1281), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "extension"), 0, (0)), 100000000, 0, -1280), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item"), 0, (0)), 100000000, 0, -1279), 0), 100000000, 0, -1278), 0), 100000000, 0, -1277), 0), 100000000, 0, -1276), 0, (("parsing/ast_helper.mli", 299, 13382, 13386), ("parsing/ast_helper.mli", 299, 13382, 13456), 0), 0, Tag1 ("Ast_helper", 149)), 0); (("attribute", 901), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1275)], (0)), 100000000, 0, -1274), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attribute"), 0, (0)), 100000000, 0, -1273), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item"), 0, (0)), 100000000, 0, -1272), 0), 100000000, 0, -1271), 0), 100000000, 0, -1270), 0, (("parsing/ast_helper.mli", 300, 13457, 13461), ("parsing/ast_helper.mli", 300, 13457, 13515), 0), 0, Tag1 ("Ast_helper", 150)), 0); (("text", 902), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Docstrings")), "text"), 0, (0)), 100000000, 0, -1269), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item"), 0, (0)), 100000000, 0, -1268)], (0)), 100000000, 0, -1267), 0), 100000000, 0, -1266), 0, (("parsing/ast_helper.mli", 301, 13516, 13520), ("parsing/ast_helper.mli", 301, 13516, 13557), 0), 0, Tag1 ("Ast_helper", 151)), 0)]), 0, (("parsing/ast_helper.mli", 281, 12319, 12319), ("parsing/ast_helper.mli", 302, 13558, 13563), 0), Tag1 ("Ast_helper", 152)), 0, 0); Tag3 (("Str", 754), 0, (Tag1 ([(("mk", 903), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1496)], (0)), 100000000, 0, -1495), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure_item_desc"), 0, (0)), 100000000, 0, -1494), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure_item"), 0, (0)), 100000000, 0, -1493), 0), 100000000, 0, -1492), 0), 100000000, 0, -1491), 0, (("parsing/ast_helper.mli", 307, 13606, 13610), ("parsing/ast_helper.mli", 307, 13606, 13667), 0), 0, Tag1 ("Ast_helper", 153)), 0); (("eval", 904), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1490)], (0)), 100000000, 0, -1489), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "attributes"), 0, (0)), 100000000, 0, -1488)], (0)), 100000000, 0, -1487), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -1486), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure_item"), 0, (0)), 100000000, 0, -1485), 0), 100000000, 0, -1484), 0), 100000000, 0, -1483), 0), 100000000, 0, -1482), 0, (("parsing/ast_helper.mli", 309, 13669, 13673), ("parsing/ast_helper.mli", 309, 13669, 13744), 0), 0, Tag1 ("Ast_helper", 154)), 0); (("value", 905), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1481)], (0)), 100000000, 0, -1480), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "rec_flag"), 0, (0)), 100000000, 0, -1479), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "value_binding"), 0, (0)), 100000000, 0, -1478)], (0)), 100000000, 0, -1477), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure_item"), 0, (0)), 100000000, 0, -1476), 0), 100000000, 0, -1475), 0), 100000000, 0, -1474), 0), 100000000, 0, -1473), 0, (("parsing/ast_helper.mli", 310, 13745, 13749), ("parsing/ast_helper.mli", 310, 13745, 13820), 0), 0, Tag1 ("Ast_helper", 155)), 0); (("primitive", 906), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1472)], (0)), 100000000, 0, -1471), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "value_description"), 0, (0)), 100000000, 0, -1470), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure_item"), 0, (0)), 100000000, 0, -1469), 0), 100000000, 0, -1468), 0), 100000000, 0, -1467), 0, (("parsing/ast_helper.mli", 311, 13821, 13825), ("parsing/ast_helper.mli", 311, 13821, 13887), 0), 0, Tag1 ("Ast_helper", 156)), 0); (("type_", 907), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1466)], (0)), 100000000, 0, -1465), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "rec_flag"), 0, (0)), 100000000, 0, -1464), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "type_declaration"), 0, (0)), 100000000, 0, -1463)], (0)), 100000000, 0, -1462), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure_item"), 0, (0)), 100000000, 0, -1461), 0), 100000000, 0, -1460), 0), 100000000, 0, -1459), 0), 100000000, 0, -1458), 0, (("parsing/ast_helper.mli", 312, 13888, 13892), ("parsing/ast_helper.mli", 312, 13888, 13966), 0), 0, Tag1 ("Ast_helper", 157)), 0); (("type_extension", 908), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1457)], (0)), 100000000, 0, -1456), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "type_extension"), 0, (0)), 100000000, 0, -1455), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure_item"), 0, (0)), 100000000, 0, -1454), 0), 100000000, 0, -1453), 0), 100000000, 0, -1452), 0, (("parsing/ast_helper.mli", 313, 13967, 13971), ("parsing/ast_helper.mli", 313, 13967, 14035), 0), 0, Tag1 ("Ast_helper", 158)), 0); (("exception_", 909), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1451)], (0)), 100000000, 0, -1450), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "type_exception"), 0, (0)), 100000000, 0, -1449), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure_item"), 0, (0)), 100000000, 0, -1448), 0), 100000000, 0, -1447), 0), 100000000, 0, -1446), 0, (("parsing/ast_helper.mli", 314, 14036, 14040), ("parsing/ast_helper.mli", 314, 14036, 14100), 0), 0, Tag1 ("Ast_helper", 159)), 0); (("module_", 910), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1445)], (0)), 100000000, 0, -1444), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_binding"), 0, (0)), 100000000, 0, -1443), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure_item"), 0, (0)), 100000000, 0, -1442), 0), 100000000, 0, -1441), 0), 100000000, 0, -1440), 0, (("parsing/ast_helper.mli", 315, 14101, 14105), ("parsing/ast_helper.mli", 315, 14101, 14162), 0), 0, Tag1 ("Ast_helper", 160)), 0); (("rec_module", 911), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1439)], (0)), 100000000, 0, -1438), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_binding"), 0, (0)), 100000000, 0, -1437)], (0)), 100000000, 0, -1436), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure_item"), 0, (0)), 100000000, 0, -1435), 0), 100000000, 0, -1434), 0), 100000000, 0, -1433), 0, (("parsing/ast_helper.mli", 316, 14163, 14167), ("parsing/ast_helper.mli", 316, 14163, 14232), 0), 0, Tag1 ("Ast_helper", 161)), 0); (("modtype", 912), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1432)], (0)), 100000000, 0, -1431), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type_declaration"), 0, (0)), 100000000, 0, -1430), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure_item"), 0, (0)), 100000000, 0, -1429), 0), 100000000, 0, -1428), 0), 100000000, 0, -1427), 0, (("parsing/ast_helper.mli", 317, 14233, 14237), ("parsing/ast_helper.mli", 317, 14233, 14303), 0), 0, Tag1 ("Ast_helper", 162)), 0); (("open_", 913), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1426)], (0)), 100000000, 0, -1425), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "open_declaration"), 0, (0)), 100000000, 0, -1424), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure_item"), 0, (0)), 100000000, 0, -1423), 0), 100000000, 0, -1422), 0), 100000000, 0, -1421), 0, (("parsing/ast_helper.mli", 318, 14304, 14308), ("parsing/ast_helper.mli", 318, 14304, 14365), 0), 0, Tag1 ("Ast_helper", 163)), 0); (("class_", 914), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1420)], (0)), 100000000, 0, -1419), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_declaration"), 0, (0)), 100000000, 0, -1418)], (0)), 100000000, 0, -1417), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure_item"), 0, (0)), 100000000, 0, -1416), 0), 100000000, 0, -1415), 0), 100000000, 0, -1414), 0, (("parsing/ast_helper.mli", 319, 14366, 14370), ("parsing/ast_helper.mli", 319, 14366, 14434), 0), 0, Tag1 ("Ast_helper", 164)), 0); (("class_type", 915), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1413)], (0)), 100000000, 0, -1412), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type_declaration"), 0, (0)), 100000000, 0, -1411)], (0)), 100000000, 0, -1410), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure_item"), 0, (0)), 100000000, 0, -1409), 0), 100000000, 0, -1408), 0), 100000000, 0, -1407), 0, (("parsing/ast_helper.mli", 320, 14435, 14439), ("parsing/ast_helper.mli", 320, 14435, 14512), 0), 0, Tag1 ("Ast_helper", 165)), 0); (("include_", 916), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1406)], (0)), 100000000, 0, -1405), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "include_declaration"), 0, (0)), 100000000, 0, -1404), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure_item"), 0, (0)), 100000000, 0, -1403), 0), 100000000, 0, -1402), 0), 100000000, 0, -1401), 0, (("parsing/ast_helper.mli", 321, 14513, 14517), ("parsing/ast_helper.mli", 321, 14513, 14580), 0), 0, Tag1 ("Ast_helper", 166)), 0); (("extension", 917), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1400)], (0)), 100000000, 0, -1399), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1398)], (0)), 100000000, 0, -1397), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "extension"), 0, (0)), 100000000, 0, -1396), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure_item"), 0, (0)), 100000000, 0, -1395), 0), 100000000, 0, -1394), 0), 100000000, 0, -1393), 0), 100000000, 0, -1392), 0, (("parsing/ast_helper.mli", 322, 14581, 14585), ("parsing/ast_helper.mli", 322, 14581, 14655), 0), 0, Tag1 ("Ast_helper", 167)), 0); (("attribute", 918), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1391)], (0)), 100000000, 0, -1390), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attribute"), 0, (0)), 100000000, 0, -1389), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure_item"), 0, (0)), 100000000, 0, -1388), 0), 100000000, 0, -1387), 0), 100000000, 0, -1386), 0, (("parsing/ast_helper.mli", 323, 14656, 14660), ("parsing/ast_helper.mli", 323, 14656, 14714), 0), 0, Tag1 ("Ast_helper", 168)), 0); (("text", 919), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Docstrings")), "text"), 0, (0)), 100000000, 0, -1385), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure_item"), 0, (0)), 100000000, 0, -1384)], (0)), 100000000, 0, -1383), 0), 100000000, 0, -1382), 0, (("parsing/ast_helper.mli", 324, 14715, 14719), ("parsing/ast_helper.mli", 324, 14715, 14756), 0), 0, Tag1 ("Ast_helper", 169)), 0)]), 0, (("parsing/ast_helper.mli", 305, 13588, 13588), ("parsing/ast_helper.mli", 325, 14757, 14762), 0), Tag1 ("Ast_helper", 170)), 0, 0); Tag3 (("Md", 755), 0, (Tag1 ([(("mk", 920), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1513)], (0)), 100000000, 0, -1512), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1511)], (0)), 100000000, 0, -1510), (Tag1 (Tag1 ("docs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "docs"), 0, (0)), 100000000, 0, -1509)], (0)), 100000000, 0, -1508), (Tag1 (Tag1 ("text"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "text"), 0, (0)), 100000000, 0, -1507)], (0)), 100000000, 0, -1506), (Tag1 (0, (Tag3 ((("str_opt", 739)), 0, (0)), 100000000, 0, -1505), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type"), 0, (0)), 100000000, 0, -1504), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_declaration"), 0, (0)), 100000000, 0, -1503), 0), 100000000, 0, -1502), 0), 100000000, 0, -1501), 0), 100000000, 0, -1500), 0), 100000000, 0, -1499), 0), 100000000, 0, -1498), 0), 100000000, 0, -1497), 0, (("parsing/ast_helper.mli", 330, 14808, 14812), ("parsing/ast_helper.mli", 331, 14876, 14926), 0), 0, Tag1 ("Ast_helper", 171)), 0)]), 0, (("parsing/ast_helper.mli", 328, 14791, 14791), ("parsing/ast_helper.mli", 332, 14927, 14932), 0), Tag1 ("Ast_helper", 172)), 0, 0); Tag3 (("Ms", 756), 0, (Tag1 ([(("mk", 921), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1530)], (0)), 100000000, 0, -1529), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1528)], (0)), 100000000, 0, -1527), (Tag1 (Tag1 ("docs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "docs"), 0, (0)), 100000000, 0, -1526)], (0)), 100000000, 0, -1525), (Tag1 (Tag1 ("text"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "text"), 0, (0)), 100000000, 0, -1524)], (0)), 100000000, 0, -1523), (Tag1 (0, (Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -1522), (Tag1 (0, (Tag3 ((("lid", 737)), 0, (0)), 100000000, 0, -1521), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_substitution"), 0, (0)), 100000000, 0, -1520), 0), 100000000, 0, -1519), 0), 100000000, 0, -1518), 0), 100000000, 0, -1517), 0), 100000000, 0, -1516), 0), 100000000, 0, -1515), 0), 100000000, 0, -1514), 0, (("parsing/ast_helper.mli", 337, 14979, 14983), ("parsing/ast_helper.mli", 338, 15047, 15086), 0), 0, Tag1 ("Ast_helper", 173)), 0)]), 0, (("parsing/ast_helper.mli", 335, 14962, 14962), ("parsing/ast_helper.mli", 339, 15087, 15092), 0), Tag1 ("Ast_helper", 174)), 0, 0); Tag3 (("Mtd", 757), 0, (Tag1 ([(("mk", 922), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1548)], (0)), 100000000, 0, -1547), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1546)], (0)), 100000000, 0, -1545), (Tag1 (Tag1 ("docs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "docs"), 0, (0)), 100000000, 0, -1544)], (0)), 100000000, 0, -1543), (Tag1 (Tag1 ("text"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "text"), 0, (0)), 100000000, 0, -1542)], (0)), 100000000, 0, -1541), (Tag1 (Tag1 ("typ"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type"), 0, (0)), 100000000, 0, -1540)], (0)), 100000000, 0, -1539), (Tag1 (0, (Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -1538), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type_declaration"), 0, (0)), 100000000, 0, -1537), 0), 100000000, 0, -1536), 0), 100000000, 0, -1535), 0), 100000000, 0, -1534), 0), 100000000, 0, -1533), 0), 100000000, 0, -1532), 0), 100000000, 0, -1531), 0, (("parsing/ast_helper.mli", 344, 15144, 15148), ("parsing/ast_helper.mli", 345, 15212, 15268), 0), 0, Tag1 ("Ast_helper", 175)), 0)]), 0, (("parsing/ast_helper.mli", 342, 15126, 15126), ("parsing/ast_helper.mli", 346, 15269, 15274), 0), Tag1 ("Ast_helper", 176)), 0, 0); Tag3 (("Mb", 758), 0, (Tag1 ([(("mk", 923), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1565)], (0)), 100000000, 0, -1564), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1563)], (0)), 100000000, 0, -1562), (Tag1 (Tag1 ("docs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "docs"), 0, (0)), 100000000, 0, -1561)], (0)), 100000000, 0, -1560), (Tag1 (Tag1 ("text"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "text"), 0, (0)), 100000000, 0, -1559)], (0)), 100000000, 0, -1558), (Tag1 (0, (Tag3 ((("str_opt", 739)), 0, (0)), 100000000, 0, -1557), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr"), 0, (0)), 100000000, 0, -1556), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_binding"), 0, (0)), 100000000, 0, -1555), 0), 100000000, 0, -1554), 0), 100000000, 0, -1553), 0), 100000000, 0, -1552), 0), 100000000, 0, -1551), 0), 100000000, 0, -1550), 0), 100000000, 0, -1549), 0, (("parsing/ast_helper.mli", 351, 15316, 15320), ("parsing/ast_helper.mli", 352, 15384, 15430), 0), 0, Tag1 ("Ast_helper", 177)), 0)]), 0, (("parsing/ast_helper.mli", 349, 15299, 15299), ("parsing/ast_helper.mli", 353, 15431, 15436), 0), Tag1 ("Ast_helper", 178)), 0, 0); Tag3 (("Opn", 759), 0, (Tag1 ([(("mk", 924), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1580)], (0)), 100000000, 0, -1579), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1578)], (0)), 100000000, 0, -1577), (Tag1 (Tag1 ("docs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "docs"), 0, (0)), 100000000, 0, -1576)], (0)), 100000000, 0, -1575), (Tag1 (Tag1 ("override"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Asttypes")), "override_flag"), 0, (0)), 100000000, 0, -1574)], (0)), 100000000, 0, -1573), (Tag1 (0, ((("a")), 100000000, 0, -1572), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "open_infos"), [((("a")), 100000000, 0, -1572)], (0)), 100000000, 0, -1571), 0), 100000000, 0, -1570), 0), 100000000, 0, -1569), 0), 100000000, 0, -1568), 0), 100000000, 0, -1567), 0), 100000000, 0, -1566), 0, (("parsing/ast_helper.mli", 358, 15469, 15473), ("parsing/ast_helper.mli", 359, 15524, 15576), 0), 0, Tag1 ("Ast_helper", 179)), 0)]), 0, (("parsing/ast_helper.mli", 356, 15451, 15451), ("parsing/ast_helper.mli", 360, 15577, 15582), 0), Tag1 ("Ast_helper", 180)), 0, 0); Tag3 (("Incl", 760), 0, (Tag1 ([(("mk", 925), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1592)], (0)), 100000000, 0, -1591), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1590)], (0)), 100000000, 0, -1589), (Tag1 (Tag1 ("docs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "docs"), 0, (0)), 100000000, 0, -1588)], (0)), 100000000, 0, -1587), (Tag1 (0, ((("a")), 100000000, 0, -1586), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "include_infos"), [((("a")), 100000000, 0, -1586)], (0)), 100000000, 0, -1585), 0), 100000000, 0, -1584), 0), 100000000, 0, -1583), 0), 100000000, 0, -1582), 0), 100000000, 0, -1581), 0, (("parsing/ast_helper.mli", 365, 15619, 15623), ("parsing/ast_helper.mli", 365, 15619, 15696), 0), 0, Tag1 ("Ast_helper", 181)), 0)]), 0, (("parsing/ast_helper.mli", 363, 15600, 15600), ("parsing/ast_helper.mli", 366, 15697, 15702), 0), Tag1 ("Ast_helper", 182)), 0, 0); Tag3 (("Vb", 761), 0, (Tag1 ([(("mk", 926), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1612)], (0)), 100000000, 0, -1611), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1610)], (0)), 100000000, 0, -1609), (Tag1 (Tag1 ("docs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "docs"), 0, (0)), 100000000, 0, -1608)], (0)), 100000000, 0, -1607), (Tag1 (Tag1 ("text"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "text"), 0, (0)), 100000000, 0, -1606)], (0)), 100000000, 0, -1605), (Tag1 (Tag1 ("value_constraint"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "value_constraint"), 0, (0)), 100000000, 0, -1604)], (0)), 100000000, 0, -1603), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -1602), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -1601), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "value_binding"), 0, (0)), 100000000, 0, -1600), 0), 100000000, 0, -1599), 0), 100000000, 0, -1598), 0), 100000000, 0, -1597), 0), 100000000, 0, -1596), 0), 100000000, 0, -1595), 0), 100000000, 0, -1594), 0), 100000000, 0, -1593), 0, (("parsing/ast_helper.mli", 371, 15743, 15747), ("parsing/ast_helper.mli", 373, 15881, 15900), 0), 0, Tag1 ("Ast_helper", 183)), 0)]), 0, (("parsing/ast_helper.mli", 369, 15726, 15726), ("parsing/ast_helper.mli", 374, 15901, 15906), 0), Tag1 ("Ast_helper", 184)), 0, 0); Tag3 (("Cty", 762), 0, (Tag1 ([(("mk", 927), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1680)], (0)), 100000000, 0, -1679), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1678)], (0)), 100000000, 0, -1677), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type_desc"), 0, (0)), 100000000, 0, -1676), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type"), 0, (0)), 100000000, 0, -1675), 0), 100000000, 0, -1674), 0), 100000000, 0, -1673), 0), 100000000, 0, -1672), 0, (("parsing/ast_helper.mli", 382, 15984, 15988), ("parsing/ast_helper.mli", 382, 15984, 16053), 0), 0, Tag1 ("Ast_helper", 185)), 0); (("attr", 928), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type"), 0, (0)), 100000000, 0, -1671), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attribute"), 0, (0)), 100000000, 0, -1670), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type"), 0, (0)), 100000000, 0, -1669), 0), 100000000, 0, -1668), 0), 100000000, 0, -1667), 0, (("parsing/ast_helper.mli", 383, 16054, 16058), ("parsing/ast_helper.mli", 383, 16054, 16105), 0), 0, Tag1 ("Ast_helper", 186)), 0); (("constr", 929), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1666)], (0)), 100000000, 0, -1665), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1664)], (0)), 100000000, 0, -1663), (Tag1 (0, (Tag3 ((("lid", 737)), 0, (0)), 100000000, 0, -1662), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -1661)], (0)), 100000000, 0, -1660), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type"), 0, (0)), 100000000, 0, -1659), 0), 100000000, 0, -1658), 0), 100000000, 0, -1657), 0), 100000000, 0, -1656), 0), 100000000, 0, -1655), 0, (("parsing/ast_helper.mli", 385, 16107, 16111), ("parsing/ast_helper.mli", 385, 16107, 16186), 0), 0, Tag1 ("Ast_helper", 187)), 0); (("signature", 930), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1654)], (0)), 100000000, 0, -1653), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1652)], (0)), 100000000, 0, -1651), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_signature"), 0, (0)), 100000000, 0, -1650), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type"), 0, (0)), 100000000, 0, -1649), 0), 100000000, 0, -1648), 0), 100000000, 0, -1647), 0), 100000000, 0, -1646), 0, (("parsing/ast_helper.mli", 386, 16187, 16191), ("parsing/ast_helper.mli", 386, 16187, 16263), 0), 0, Tag1 ("Ast_helper", 188)), 0); (("arrow", 931), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1645)], (0)), 100000000, 0, -1644), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1643)], (0)), 100000000, 0, -1642), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "arg_label"), 0, (0)), 100000000, 0, -1641), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -1640), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type"), 0, (0)), 100000000, 0, -1639), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type"), 0, (0)), 100000000, 0, -1638), 0), 100000000, 0, -1637), 0), 100000000, 0, -1636), 0), 100000000, 0, -1635), 0), 100000000, 0, -1634), 0), 100000000, 0, -1633), 0, (("parsing/ast_helper.mli", 387, 16264, 16268), ("parsing/ast_helper.mli", 388, 16333, 16363), 0), 0, Tag1 ("Ast_helper", 189)), 0); (("extension", 932), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1632)], (0)), 100000000, 0, -1631), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1630)], (0)), 100000000, 0, -1629), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "extension"), 0, (0)), 100000000, 0, -1628), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type"), 0, (0)), 100000000, 0, -1627), 0), 100000000, 0, -1626), 0), 100000000, 0, -1625), 0), 100000000, 0, -1624), 0, (("parsing/ast_helper.mli", 389, 16364, 16368), ("parsing/ast_helper.mli", 389, 16364, 16434), 0), 0, Tag1 ("Ast_helper", 190)), 0); (("open_", 933), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1623)], (0)), 100000000, 0, -1622), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1621)], (0)), 100000000, 0, -1620), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "open_description"), 0, (0)), 100000000, 0, -1619), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type"), 0, (0)), 100000000, 0, -1618), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type"), 0, (0)), 100000000, 0, -1617), 0), 100000000, 0, -1616), 0), 100000000, 0, -1615), 0), 100000000, 0, -1614), 0), 100000000, 0, -1613), 0, (("parsing/ast_helper.mli", 390, 16435, 16439), ("parsing/ast_helper.mli", 391, 16509, 16537), 0), 0, Tag1 ("Ast_helper", 191)), 0)]), 0, (("parsing/ast_helper.mli", 380, 15966, 15966), ("parsing/ast_helper.mli", 392, 16538, 16543), 0), Tag1 ("Ast_helper", 192)), 0, 0); Tag3 (("Ctf", 763), 0, (Tag1 ([(("mk", 934), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1766)], (0)), 100000000, 0, -1765), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1764)], (0)), 100000000, 0, -1763), (Tag1 (Tag1 ("docs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "docs"), 0, (0)), 100000000, 0, -1762)], (0)), 100000000, 0, -1761), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type_field_desc"), 0, (0)), 100000000, 0, -1760), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type_field"), 0, (0)), 100000000, 0, -1759), 0), 100000000, 0, -1758), 0), 100000000, 0, -1757), 0), 100000000, 0, -1756), 0), 100000000, 0, -1755), 0, (("parsing/ast_helper.mli", 397, 16588, 16592), ("parsing/ast_helper.mli", 398, 16642, 16689), 0), 0, Tag1 ("Ast_helper", 193)), 0); (("attr", 935), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type_field"), 0, (0)), 100000000, 0, -1754), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attribute"), 0, (0)), 100000000, 0, -1753), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type_field"), 0, (0)), 100000000, 0, -1752), 0), 100000000, 0, -1751), 0), 100000000, 0, -1750), 0, (("parsing/ast_helper.mli", 399, 16690, 16694), ("parsing/ast_helper.mli", 399, 16690, 16753), 0), 0, Tag1 ("Ast_helper", 194)), 0); (("inherit_", 936), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1749)], (0)), 100000000, 0, -1748), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1747)], (0)), 100000000, 0, -1746), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type"), 0, (0)), 100000000, 0, -1745), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type_field"), 0, (0)), 100000000, 0, -1744), 0), 100000000, 0, -1743), 0), 100000000, 0, -1742), 0), 100000000, 0, -1741), 0, (("parsing/ast_helper.mli", 401, 16755, 16759), ("parsing/ast_helper.mli", 401, 16755, 16831), 0), 0, Tag1 ("Ast_helper", 195)), 0); (("val_", 937), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1740)], (0)), 100000000, 0, -1739), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1738)], (0)), 100000000, 0, -1737), (Tag1 (0, (Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -1736), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "mutable_flag"), 0, (0)), 100000000, 0, -1735), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "virtual_flag"), 0, (0)), 100000000, 0, -1734), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -1733), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type_field"), 0, (0)), 100000000, 0, -1732), 0), 100000000, 0, -1731), 0), 100000000, 0, -1730), 0), 100000000, 0, -1729), 0), 100000000, 0, -1728), 0), 100000000, 0, -1727), 0), 100000000, 0, -1726), 0, (("parsing/ast_helper.mli", 402, 16832, 16836), ("parsing/ast_helper.mli", 403, 16897, 16948), 0), 0, Tag1 ("Ast_helper", 196)), 0); (("method_", 938), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1725)], (0)), 100000000, 0, -1724), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1723)], (0)), 100000000, 0, -1722), (Tag1 (0, (Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -1721), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "private_flag"), 0, (0)), 100000000, 0, -1720), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "virtual_flag"), 0, (0)), 100000000, 0, -1719), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -1718), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type_field"), 0, (0)), 100000000, 0, -1717), 0), 100000000, 0, -1716), 0), 100000000, 0, -1715), 0), 100000000, 0, -1714), 0), 100000000, 0, -1713), 0), 100000000, 0, -1712), 0), 100000000, 0, -1711), 0, (("parsing/ast_helper.mli", 404, 16949, 16953), ("parsing/ast_helper.mli", 405, 17017, 17068), 0), 0, Tag1 ("Ast_helper", 197)), 0); (("constraint_", 939), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1710)], (0)), 100000000, 0, -1709), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1708)], (0)), 100000000, 0, -1707), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -1706), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -1705), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type_field"), 0, (0)), 100000000, 0, -1704), 0), 100000000, 0, -1703), 0), 100000000, 0, -1702), 0), 100000000, 0, -1701), 0), 100000000, 0, -1700), 0, (("parsing/ast_helper.mli", 406, 17069, 17073), ("parsing/ast_helper.mli", 407, 17144, 17166), 0), 0, Tag1 ("Ast_helper", 198)), 0); (("extension", 940), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1699)], (0)), 100000000, 0, -1698), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1697)], (0)), 100000000, 0, -1696), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "extension"), 0, (0)), 100000000, 0, -1695), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type_field"), 0, (0)), 100000000, 0, -1694), 0), 100000000, 0, -1693), 0), 100000000, 0, -1692), 0), 100000000, 0, -1691), 0, (("parsing/ast_helper.mli", 408, 17167, 17171), ("parsing/ast_helper.mli", 408, 17167, 17243), 0), 0, Tag1 ("Ast_helper", 199)), 0); (("attribute", 941), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1690)], (0)), 100000000, 0, -1689), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attribute"), 0, (0)), 100000000, 0, -1688), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type_field"), 0, (0)), 100000000, 0, -1687), 0), 100000000, 0, -1686), 0), 100000000, 0, -1685), 0, (("parsing/ast_helper.mli", 409, 17244, 17248), ("parsing/ast_helper.mli", 409, 17244, 17304), 0), 0, Tag1 ("Ast_helper", 200)), 0); (("text", 942), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Docstrings")), "text"), 0, (0)), 100000000, 0, -1684), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type_field"), 0, (0)), 100000000, 0, -1683)], (0)), 100000000, 0, -1682), 0), 100000000, 0, -1681), 0, (("parsing/ast_helper.mli", 410, 17305, 17309), ("parsing/ast_helper.mli", 410, 17305, 17348), 0), 0, Tag1 ("Ast_helper", 201)), 0)]), 0, (("parsing/ast_helper.mli", 395, 16570, 16570), ("parsing/ast_helper.mli", 411, 17349, 17354), 0), Tag1 ("Ast_helper", 202)), 0, 0); Tag3 (("Cl", 764), 0, (Tag1 ([(("mk", 943), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1876)], (0)), 100000000, 0, -1875), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1874)], (0)), 100000000, 0, -1873), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_expr_desc"), 0, (0)), 100000000, 0, -1872), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_expr"), 0, (0)), 100000000, 0, -1871), 0), 100000000, 0, -1870), 0), 100000000, 0, -1869), 0), 100000000, 0, -1868), 0, (("parsing/ast_helper.mli", 416, 17398, 17402), ("parsing/ast_helper.mli", 416, 17398, 17467), 0), 0, Tag1 ("Ast_helper", 203)), 0); (("attr", 944), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_expr"), 0, (0)), 100000000, 0, -1867), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attribute"), 0, (0)), 100000000, 0, -1866), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_expr"), 0, (0)), 100000000, 0, -1865), 0), 100000000, 0, -1864), 0), 100000000, 0, -1863), 0, (("parsing/ast_helper.mli", 417, 17468, 17472), ("parsing/ast_helper.mli", 417, 17468, 17519), 0), 0, Tag1 ("Ast_helper", 204)), 0); (("constr", 945), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1862)], (0)), 100000000, 0, -1861), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1860)], (0)), 100000000, 0, -1859), (Tag1 (0, (Tag3 ((("lid", 737)), 0, (0)), 100000000, 0, -1858), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -1857)], (0)), 100000000, 0, -1856), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_expr"), 0, (0)), 100000000, 0, -1855), 0), 100000000, 0, -1854), 0), 100000000, 0, -1853), 0), 100000000, 0, -1852), 0), 100000000, 0, -1851), 0, (("parsing/ast_helper.mli", 419, 17521, 17525), ("parsing/ast_helper.mli", 419, 17521, 17600), 0), 0, Tag1 ("Ast_helper", 205)), 0); (("structure", 946), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1850)], (0)), 100000000, 0, -1849), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1848)], (0)), 100000000, 0, -1847), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_structure"), 0, (0)), 100000000, 0, -1846), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_expr"), 0, (0)), 100000000, 0, -1845), 0), 100000000, 0, -1844), 0), 100000000, 0, -1843), 0), 100000000, 0, -1842), 0, (("parsing/ast_helper.mli", 420, 17601, 17605), ("parsing/ast_helper.mli", 420, 17601, 17677), 0), 0, Tag1 ("Ast_helper", 206)), 0); (("fun_", 947), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1841)], (0)), 100000000, 0, -1840), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1839)], (0)), 100000000, 0, -1838), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "arg_label"), 0, (0)), 100000000, 0, -1837), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -1836)], (0)), 100000000, 0, -1835), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -1834), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_expr"), 0, (0)), 100000000, 0, -1833), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_expr"), 0, (0)), 100000000, 0, -1832), 0), 100000000, 0, -1831), 0), 100000000, 0, -1830), 0), 100000000, 0, -1829), 0), 100000000, 0, -1828), 0), 100000000, 0, -1827), 0), 100000000, 0, -1826), 0, (("parsing/ast_helper.mli", 421, 17678, 17682), ("parsing/ast_helper.mli", 422, 17754, 17795), 0), 0, Tag1 ("Ast_helper", 207)), 0); (("apply", 948), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1825)], (0)), 100000000, 0, -1824), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1823)], (0)), 100000000, 0, -1822), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_expr"), 0, (0)), 100000000, 0, -1821), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Asttypes")), "arg_label"), 0, (0)), 100000000, 0, -1819); (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -1820)]), 100000000, 0, -1818)], (0)), 100000000, 0, -1817), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_expr"), 0, (0)), 100000000, 0, -1816), 0), 100000000, 0, -1815), 0), 100000000, 0, -1814), 0), 100000000, 0, -1813), 0), 100000000, 0, -1812), 0, (("parsing/ast_helper.mli", 423, 17796, 17800), ("parsing/ast_helper.mli", 424, 17853, 17902), 0), 0, Tag1 ("Ast_helper", 208)), 0); (("let_", 949), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1811)], (0)), 100000000, 0, -1810), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1809)], (0)), 100000000, 0, -1808), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "rec_flag"), 0, (0)), 100000000, 0, -1807), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "value_binding"), 0, (0)), 100000000, 0, -1806)], (0)), 100000000, 0, -1805), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_expr"), 0, (0)), 100000000, 0, -1804), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_expr"), 0, (0)), 100000000, 0, -1803), 0), 100000000, 0, -1802), 0), 100000000, 0, -1801), 0), 100000000, 0, -1800), 0), 100000000, 0, -1799), 0), 100000000, 0, -1798), 0, (("parsing/ast_helper.mli", 425, 17903, 17907), ("parsing/ast_helper.mli", 426, 17979, 18009), 0), 0, Tag1 ("Ast_helper", 209)), 0); (("constraint_", 950), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1797)], (0)), 100000000, 0, -1796), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1795)], (0)), 100000000, 0, -1794), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_expr"), 0, (0)), 100000000, 0, -1793), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type"), 0, (0)), 100000000, 0, -1792), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_expr"), 0, (0)), 100000000, 0, -1791), 0), 100000000, 0, -1790), 0), 100000000, 0, -1789), 0), 100000000, 0, -1788), 0), 100000000, 0, -1787), 0, (("parsing/ast_helper.mli", 427, 18010, 18014), ("parsing/ast_helper.mli", 428, 18087, 18103), 0), 0, Tag1 ("Ast_helper", 210)), 0); (("extension", 951), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1786)], (0)), 100000000, 0, -1785), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1784)], (0)), 100000000, 0, -1783), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "extension"), 0, (0)), 100000000, 0, -1782), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_expr"), 0, (0)), 100000000, 0, -1781), 0), 100000000, 0, -1780), 0), 100000000, 0, -1779), 0), 100000000, 0, -1778), 0, (("parsing/ast_helper.mli", 429, 18104, 18108), ("parsing/ast_helper.mli", 429, 18104, 18174), 0), 0, Tag1 ("Ast_helper", 211)), 0); (("open_", 952), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1777)], (0)), 100000000, 0, -1776), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1775)], (0)), 100000000, 0, -1774), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "open_description"), 0, (0)), 100000000, 0, -1773), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_expr"), 0, (0)), 100000000, 0, -1772), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_expr"), 0, (0)), 100000000, 0, -1771), 0), 100000000, 0, -1770), 0), 100000000, 0, -1769), 0), 100000000, 0, -1768), 0), 100000000, 0, -1767), 0, (("parsing/ast_helper.mli", 430, 18175, 18179), ("parsing/ast_helper.mli", 431, 18249, 18277), 0), 0, Tag1 ("Ast_helper", 212)), 0)]), 0, (("parsing/ast_helper.mli", 414, 17381, 17381), ("parsing/ast_helper.mli", 432, 18278, 18283), 0), Tag1 ("Ast_helper", 213)), 0, 0); Tag3 (("Cf", 765), 0, (Tag1 ([(("mk", 953), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1980)], (0)), 100000000, 0, -1979), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1978)], (0)), 100000000, 0, -1977), (Tag1 (Tag1 ("docs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "docs"), 0, (0)), 100000000, 0, -1976)], (0)), 100000000, 0, -1975), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_field_desc"), 0, (0)), 100000000, 0, -1974), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_field"), 0, (0)), 100000000, 0, -1973), 0), 100000000, 0, -1972), 0), 100000000, 0, -1971), 0), 100000000, 0, -1970), 0), 100000000, 0, -1969), 0, (("parsing/ast_helper.mli", 437, 18322, 18326), ("parsing/ast_helper.mli", 438, 18396, 18413), 0), 0, Tag1 ("Ast_helper", 214)), 0); (("attr", 954), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_field"), 0, (0)), 100000000, 0, -1968), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attribute"), 0, (0)), 100000000, 0, -1967), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_field"), 0, (0)), 100000000, 0, -1966), 0), 100000000, 0, -1965), 0), 100000000, 0, -1964), 0, (("parsing/ast_helper.mli", 439, 18414, 18418), ("parsing/ast_helper.mli", 439, 18414, 18467), 0), 0, Tag1 ("Ast_helper", 215)), 0); (("inherit_", 955), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1963)], (0)), 100000000, 0, -1962), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1961)], (0)), 100000000, 0, -1960), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "override_flag"), 0, (0)), 100000000, 0, -1959), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_expr"), 0, (0)), 100000000, 0, -1958), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -1957)], (0)), 100000000, 0, -1956), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_field"), 0, (0)), 100000000, 0, -1955), 0), 100000000, 0, -1954), 0), 100000000, 0, -1953), 0), 100000000, 0, -1952), 0), 100000000, 0, -1951), 0), 100000000, 0, -1950), 0, (("parsing/ast_helper.mli", 441, 18469, 18473), ("parsing/ast_helper.mli", 442, 18546, 18577), 0), 0, Tag1 ("Ast_helper", 216)), 0); (("val_", 956), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1949)], (0)), 100000000, 0, -1948), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1947)], (0)), 100000000, 0, -1946), (Tag1 (0, (Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -1945), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "mutable_flag"), 0, (0)), 100000000, 0, -1944), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_field_kind"), 0, (0)), 100000000, 0, -1943), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_field"), 0, (0)), 100000000, 0, -1942), 0), 100000000, 0, -1941), 0), 100000000, 0, -1940), 0), 100000000, 0, -1939), 0), 100000000, 0, -1938), 0), 100000000, 0, -1937), 0, (("parsing/ast_helper.mli", 443, 18578, 18582), ("parsing/ast_helper.mli", 444, 18643, 18680), 0), 0, Tag1 ("Ast_helper", 217)), 0); (("method_", 957), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1936)], (0)), 100000000, 0, -1935), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1934)], (0)), 100000000, 0, -1933), (Tag1 (0, (Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -1932), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "private_flag"), 0, (0)), 100000000, 0, -1931), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_field_kind"), 0, (0)), 100000000, 0, -1930), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_field"), 0, (0)), 100000000, 0, -1929), 0), 100000000, 0, -1928), 0), 100000000, 0, -1927), 0), 100000000, 0, -1926), 0), 100000000, 0, -1925), 0), 100000000, 0, -1924), 0, (("parsing/ast_helper.mli", 445, 18681, 18685), ("parsing/ast_helper.mli", 446, 18749, 18786), 0), 0, Tag1 ("Ast_helper", 218)), 0); (("constraint_", 958), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1923)], (0)), 100000000, 0, -1922), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1921)], (0)), 100000000, 0, -1920), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -1919), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -1918), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_field"), 0, (0)), 100000000, 0, -1917), 0), 100000000, 0, -1916), 0), 100000000, 0, -1915), 0), 100000000, 0, -1914), 0), 100000000, 0, -1913), 0, (("parsing/ast_helper.mli", 447, 18787, 18791), ("parsing/ast_helper.mli", 448, 18862, 18879), 0), 0, Tag1 ("Ast_helper", 219)), 0); (("initializer_", 959), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1912)], (0)), 100000000, 0, -1911), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1910)], (0)), 100000000, 0, -1909), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -1908), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_field"), 0, (0)), 100000000, 0, -1907), 0), 100000000, 0, -1906), 0), 100000000, 0, -1905), 0), 100000000, 0, -1904), 0, (("parsing/ast_helper.mli", 449, 18880, 18884), ("parsing/ast_helper.mli", 449, 18880, 18955), 0), 0, Tag1 ("Ast_helper", 220)), 0); (("extension", 960), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1903)], (0)), 100000000, 0, -1902), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -1901)], (0)), 100000000, 0, -1900), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "extension"), 0, (0)), 100000000, 0, -1899), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_field"), 0, (0)), 100000000, 0, -1898), 0), 100000000, 0, -1897), 0), 100000000, 0, -1896), 0), 100000000, 0, -1895), 0, (("parsing/ast_helper.mli", 450, 18956, 18960), ("parsing/ast_helper.mli", 450, 18956, 19027), 0), 0, Tag1 ("Ast_helper", 221)), 0); (("attribute", 961), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -1894)], (0)), 100000000, 0, -1893), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attribute"), 0, (0)), 100000000, 0, -1892), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_field"), 0, (0)), 100000000, 0, -1891), 0), 100000000, 0, -1890), 0), 100000000, 0, -1889), 0, (("parsing/ast_helper.mli", 451, 19028, 19032), ("parsing/ast_helper.mli", 451, 19028, 19083), 0), 0, Tag1 ("Ast_helper", 222)), 0); (("text", 962), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Docstrings")), "text"), 0, (0)), 100000000, 0, -1888), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_field"), 0, (0)), 100000000, 0, -1887)], (0)), 100000000, 0, -1886), 0), 100000000, 0, -1885), 0, (("parsing/ast_helper.mli", 452, 19084, 19088), ("parsing/ast_helper.mli", 452, 19084, 19122), 0), 0, Tag1 ("Ast_helper", 223)), 0); (("virtual_", 963), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -1884), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_field_kind"), 0, (0)), 100000000, 0, -1883), 0), 100000000, 0, -1882), 0, (("parsing/ast_helper.mli", 454, 19124, 19128), ("parsing/ast_helper.mli", 454, 19124, 19171), 0), 0, Tag1 ("Ast_helper", 224)), 0); (("concrete", 964), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "override_flag"), 0, (0)), 100000000, 0, -1881), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -1880), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_field_kind"), 0, (0)), 100000000, 0, -1879), 0), 100000000, 0, -1878), 0), 100000000, 0, -1877), 0, (("parsing/ast_helper.mli", 455, 19172, 19176), ("parsing/ast_helper.mli", 455, 19172, 19237), 0), 0, Tag1 ("Ast_helper", 225)), 0)]), 0, (("parsing/ast_helper.mli", 435, 18305, 18305), ("parsing/ast_helper.mli", 457, 19239, 19244), 0), Tag1 ("Ast_helper", 226)), 0, 0); Tag3 (("Ci", 766), 0, (Tag1 ([(("mk", 965), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -2008)], (0)), 100000000, 0, -2007), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -2006)], (0)), 100000000, 0, -2005), (Tag1 (Tag1 ("docs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "docs"), 0, (0)), 100000000, 0, -2004)], (0)), 100000000, 0, -2003), (Tag1 (Tag1 ("text"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Docstrings")), "text"), 0, (0)), 100000000, 0, -2002)], (0)), 100000000, 0, -2001), (Tag1 (Tag1 ("virt"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Asttypes")), "virtual_flag"), 0, (0)), 100000000, 0, -2000)], (0)), 100000000, 0, -1999), (Tag1 (Tag1 ("params"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -1995); (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Asttypes")), "variance"), 0, (0)), 100000000, 0, -1997); (Tag3 (Tag1 ((Tag2 ("Asttypes")), "injectivity"), 0, (0)), 100000000, 0, -1998)]), 100000000, 0, -1996)]), 100000000, 0, -1994)], (0)), 100000000, 0, -1993)], (0)), 100000000, 0, -1992), (Tag1 (0, (Tag3 ((("str", 738)), 0, (0)), 100000000, 0, -1991), (Tag1 (0, ((("a")), 100000000, 0, -1990), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_infos"), [((("a")), 100000000, 0, -1990)], (0)), 100000000, 0, -1989), 0), 100000000, 0, -1988), 0), 100000000, 0, -1987), 0), 100000000, 0, -1986), 0), 100000000, 0, -1985), 0), 100000000, 0, -1984), 0), 100000000, 0, -1983), 0), 100000000, 0, -1982), 0), 100000000, 0, -1981), 0, (("parsing/ast_helper.mli", 462, 19278, 19282), ("parsing/ast_helper.mli", 465, 19435, 19468), 0), 0, Tag1 ("Ast_helper", 227)), 0)]), 0, (("parsing/ast_helper.mli", 460, 19261, 19261), ("parsing/ast_helper.mli", 466, 19469, 19474), 0), Tag1 ("Ast_helper", 228)), 0, 0); Tag3 (("Csig", 767), 0, (Tag1 ([(("mk", 966), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -2014), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type_field"), 0, (0)), 100000000, 0, -2013)], (0)), 100000000, 0, -2012), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_signature"), 0, (0)), 100000000, 0, -2011), 0), 100000000, 0, -2010), 0), 100000000, 0, -2009), 0, (("parsing/ast_helper.mli", 471, 19519, 19523), ("parsing/ast_helper.mli", 471, 19519, 19584), 0), 0, Tag1 ("Ast_helper", 229)), 0)]), 0, (("parsing/ast_helper.mli", 469, 19500, 19500), ("parsing/ast_helper.mli", 472, 19585, 19590), 0), Tag1 ("Ast_helper", 230)), 0, 0); Tag3 (("Cstr", 768), 0, (Tag1 ([(("mk", 967), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -2020), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_field"), 0, (0)), 100000000, 0, -2019)], (0)), 100000000, 0, -2018), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_structure"), 0, (0)), 100000000, 0, -2017), 0), 100000000, 0, -2016), 0), 100000000, 0, -2015), 0, (("parsing/ast_helper.mli", 477, 19635, 19639), ("parsing/ast_helper.mli", 477, 19635, 19693), 0), 0, Tag1 ("Ast_helper", 231)), 0)]), 0, (("parsing/ast_helper.mli", 475, 19616, 19616), ("parsing/ast_helper.mli", 478, 19694, 19699), 0), Tag1 ("Ast_helper", 232)), 0, 0); Tag3 (("Rf", 769), 0, (Tag1 ([(("mk", 968), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -2050)], (0)), 100000000, 0, -2049), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -2048)], (0)), 100000000, 0, -2047), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "row_field_desc"), 0, (0)), 100000000, 0, -2046), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "row_field"), 0, (0)), 100000000, 0, -2045), 0), 100000000, 0, -2044), 0), 100000000, 0, -2043), 0), 100000000, 0, -2042), 0, (("parsing/ast_helper.mli", 483, 19736, 19740), ("parsing/ast_helper.mli", 483, 19736, 19803), 0), 0, Tag1 ("Ast_helper", 233)), 0); (("tag", 969), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -2041)], (0)), 100000000, 0, -2040), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -2039)], (0)), 100000000, 0, -2038), (Tag1 (0, (Tag3 ((("with_loc", 735)), [(Tag3 (Tag1 ((Tag2 ("Asttypes")), "label"), 0, (0)), 100000000, 0, -2037)], (0)), 100000000, 0, -2036), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2035), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -2034)], (0)), 100000000, 0, -2033), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "row_field"), 0, (0)), 100000000, 0, -2032), 0), 100000000, 0, -2031), 0), 100000000, 0, -2030), 0), 100000000, 0, -2029), 0), 100000000, 0, -2028), 0), 100000000, 0, -2027), 0, (("parsing/ast_helper.mli", 484, 19804, 19808), ("parsing/ast_helper.mli", 485, 19845, 19904), 0), 0, Tag1 ("Ast_helper", 234)), 0); (("inherit_", 970), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -2026)], (0)), 100000000, 0, -2025), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -2024), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "row_field"), 0, (0)), 100000000, 0, -2023), 0), 100000000, 0, -2022), 0), 100000000, 0, -2021), 0, (("parsing/ast_helper.mli", 486, 19905, 19909), ("parsing/ast_helper.mli", 486, 19905, 19957), 0), 0, Tag1 ("Ast_helper", 235)), 0)]), 0, (("parsing/ast_helper.mli", 481, 19719, 19719), ("parsing/ast_helper.mli", 487, 19958, 19963), 0), Tag1 ("Ast_helper", 236)), 0, 0); Tag3 (("Of", 770), 0, (Tag1 ([(("mk", 971), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -2077)], (0)), 100000000, 0, -2076), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -2075)], (0)), 100000000, 0, -2074), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "object_field_desc"), 0, (0)), 100000000, 0, -2073), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "object_field"), 0, (0)), 100000000, 0, -2072), 0), 100000000, 0, -2071), 0), 100000000, 0, -2070), 0), 100000000, 0, -2069), 0, (("parsing/ast_helper.mli", 492, 20003, 20007), ("parsing/ast_helper.mli", 493, 20043, 20082), 0), 0, Tag1 ("Ast_helper", 237)), 0); (("tag", 972), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -2068)], (0)), 100000000, 0, -2067), (Tag1 (Tag1 ("attrs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("attrs", 740)), 0, (0)), 100000000, 0, -2066)], (0)), 100000000, 0, -2065), (Tag1 (0, (Tag3 ((("with_loc", 735)), [(Tag3 (Tag1 ((Tag2 ("Asttypes")), "label"), 0, (0)), 100000000, 0, -2064)], (0)), 100000000, 0, -2063), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -2062), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "object_field"), 0, (0)), 100000000, 0, -2061), 0), 100000000, 0, -2060), 0), 100000000, 0, -2059), 0), 100000000, 0, -2058), 0), 100000000, 0, -2057), 0, (("parsing/ast_helper.mli", 494, 20083, 20087), ("parsing/ast_helper.mli", 495, 20124, 20173), 0), 0, Tag1 ("Ast_helper", 238)), 0); (("inherit_", 973), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("loc", 736)), 0, (0)), 100000000, 0, -2056)], (0)), 100000000, 0, -2055), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -2054), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "object_field"), 0, (0)), 100000000, 0, -2053), 0), 100000000, 0, -2052), 0), 100000000, 0, -2051), 0, (("parsing/ast_helper.mli", 496, 20174, 20178), ("parsing/ast_helper.mli", 496, 20174, 20229), 0), 0, Tag1 ("Ast_helper", 239)), 0)]), 0, (("parsing/ast_helper.mli", 490, 19986, 19986), ("parsing/ast_helper.mli", 497, 20230, 20235), 0), Tag1 ("Ast_helper", 240)), 0, 0)], "Ast_helper", [("Ast_helper", ("\242\224\238/\155\176+\170\014\015\024\006\147\133f1")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Docstrings", ("\216\171\176\031*\203\162\186%\175\201qq\189\139U")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216"))], [(0)])

