val reporter :
  ?pp_header:(Logs.level * string option) Fmt.t ->
  ?app:Format.formatter -> ?dst:Format.formatter -> unit -> Logs.reporter
val app_style : Fmt.style
val err_style : Fmt.style
val warn_style : Fmt.style
val info_style : Fmt.style
val debug_style : Fmt.style
("DEBUG:rule", [(("reporter", 577), ((Tag1 (Tag1 ("pp_header"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Fmt")), "t"), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Logs")), "level"), 0, (0)), 100000000, 0, -25); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -27)], (0)), 100000000, 0, -26)]), 100000000, 0, -24)], (0)), 100000000, 0, -23)], (0)), 100000000, 0, -22), (Tag1 (Tag1 ("app"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -21)], (0)), 100000000, 0, -20), (Tag1 (Tag1 ("dst"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -19)], (0)), 100000000, 0, -18), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -17), (Tag3 (Tag1 ((Tag2 ("Logs")), "reporter"), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("src/logs_fmt.mli", 14, 449, 449), ("src/logs_fmt.mli", 17, 542, 590), 0), 0, Tag1 ("Logs_fmt", 0)), 0); (("app_style", 578), ((Tag3 (Tag1 ((Tag2 ("Fmt")), "style"), 0, (0)), 100000000, 0, -11), 0, (("src/logs_fmt.mli", 26, 906, 906), ("src/logs_fmt.mli", 26, 906, 931), 0), 0, Tag1 ("Logs_fmt", 1)), 0); (("err_style", 579), ((Tag3 (Tag1 ((Tag2 ("Fmt")), "style"), 0, (0)), 100000000, 0, -10), 0, (("src/logs_fmt.mli", 29, 1002, 1002), ("src/logs_fmt.mli", 29, 1002, 1027), 0), 0, Tag1 ("Logs_fmt", 2)), 0); (("warn_style", 580), ((Tag3 (Tag1 ((Tag2 ("Fmt")), "style"), 0, (0)), 100000000, 0, -9), 0, (("src/logs_fmt.mli", 32, 1100, 1100), ("src/logs_fmt.mli", 32, 1100, 1126), 0), 0, Tag1 ("Logs_fmt", 3)), 0); (("info_style", 581), ((Tag3 (Tag1 ((Tag2 ("Fmt")), "style"), 0, (0)), 100000000, 0, -8), 0, (("src/logs_fmt.mli", 35, 1202, 1202), ("src/logs_fmt.mli", 35, 1202, 1228), 0), 0, Tag1 ("Logs_fmt", 4)), 0); (("debug_style", 582), ((Tag3 (Tag1 ((Tag2 ("Fmt")), "style"), 0, (0)), 100000000, 0, -7), 0, (("src/logs_fmt.mli", 38, 1301, 1301), ("src/logs_fmt.mli", 38, 1301, 1328), 0), 0, Tag1 ("Logs_fmt", 5)), 0); (("pp_header", 583), ((Tag3 (Tag1 ((Tag2 ("Fmt")), "t"), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Logs")), "level"), 0, (0)), 100000000, 0, -4); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6)], (0)), 100000000, 0, -5)]), 100000000, 0, -3)], (0)), 100000000, 0, -2), 0, (("src/logs_fmt.mli", 41, 1403, 1403), ("src/logs_fmt.mli", 41, 1403, 1453), 0), 0, Tag1 ("Logs_fmt", 6)), 0)], "Logs_fmt", [("Logs_fmt", ("w\166\004\154{}\183\140\186\252\178@\189\007\135|")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Stack", ("M\151\017\159\208\222\164[\025\219g\175\160\242T\229")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Queue", ("E\187(\001]E;(\021\n~\137\191\026\\\152")); ("Stdlib__Printexc", ("\217u\168\235\179oi\167\235\255\025\017%d\192s")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Logs", ("\225\211\226\007\217\232.\007\207\246Z\146\164\004\234}")); ("Fmt", ("I\228\239\131\1484\017Q\171\227C\149\246\174\149\247")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val pp_header : (Logs.level * string option) Fmt.t
