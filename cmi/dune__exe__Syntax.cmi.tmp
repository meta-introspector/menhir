type 'a located = 'a Dune__exe.Positions.located
type terminal = string
type nonterminal = string
type symbol = string
type alias = string option
type identifier = string
type filename = string
type postlude = Dune__exe.Stretch.t
type action = Dune__exe.Action.t
type attribute = string located * Dune__exe.Stretch.t
type attributes = attribute list
type token_associativity = LeftAssoc | RightAssoc | NonAssoc | UndefinedAssoc
type precedence_level =
    UndefinedPrecedence
  | PrecedenceLevel of Dune__exe.InputFile.input_file * int *
      Lexing.position * Lexing.position
type token_properties = {
  tk_filename : filename;
  tk_ocamltype : Dune__exe.Stretch.ocamltype option;
  tk_position : Dune__exe.Positions.t;
  tk_alias : alias;
  tk_attributes : attributes;
  mutable tk_associativity : token_associativity;
  mutable tk_precedence : precedence_level;
  mutable tk_is_declared : bool;
}
type branch_prec_annotation = symbol located option
type branch_production_level =
    ProductionLevel of Dune__exe.InputFile.input_file * int
type on_error_reduce_level = branch_production_level
type parameter =
    ParameterVar of symbol located
  | ParameterApp of symbol located * parameters
  | ParameterAnonymous of parameterized_branch list located
and parameters = parameter list
and producer = identifier located * parameter * attributes
and parameterized_branch = {
  pr_branch_position : Dune__exe.Positions.t;
  pr_producers : producer list;
  pr_action : action;
  pr_branch_prec_annotation : branch_prec_annotation;
  pr_branch_production_level : branch_production_level;
}
type parameterized_rule = {
  pr_public_flag : bool;
  pr_inline_flag : bool;
  pr_nt : nonterminal;
  pr_positions : Dune__exe.Positions.t list;
  pr_attributes : attributes;
  pr_parameters : symbol list;
  pr_branches : parameterized_branch list;
}
type pattern =
    SemPatVar of identifier located
  | SemPatWildcard
  | SemPatTilde of Dune__exe.Positions.t
  | SemPatTuple of pattern list
type raw_action =
    Dune__exe.Settings.dollars -> identifier option array -> action
type expression = choice_expression located
and choice_expression = EChoice of branch list
and branch = Branch of seq_expression * branch_production_level
and seq_expression = raw_seq_expression located
and raw_seq_expression =
    ECons of pattern * symbol_expression * seq_expression
  | ESingleton of symbol_expression
  | EAction of extended_action * branch_prec_annotation
and symbol_expression =
    ESymbol of symbol located * expression list * attributes
and extended_action =
    XATraditional of raw_action
  | XAPointFree of Dune__exe.Stretch.t option
type rule = {
  rule_public : bool;
  rule_inline : bool;
  rule_lhs : symbol located;
  rule_attributes : attributes;
  rule_formals : symbol located list;
  rule_rhs : expression;
}
type declaration =
    DCode of Dune__exe.Stretch.t
  | DParameter of Dune__exe.Stretch.ocamltype
  | DToken of Dune__exe.Stretch.ocamltype option * terminal * alias *
      attributes
  | DStart of nonterminal
  | DTokenProperties of terminal * token_associativity * precedence_level
  | DType of Dune__exe.Stretch.ocamltype * parameter
  | DGrammarAttribute of attribute
  | DSymbolAttributes of parameter list * attributes
  | DOnErrorReduce of parameter * on_error_reduce_level
type partial_grammar = {
  pg_filename : filename;
  pg_postlude : postlude option;
  pg_declarations : declaration located list;
  pg_rules : parameterized_rule list;
}
type grammar = {
  p_preludes : Dune__exe.Stretch.t list;
  p_postludes : postlude list;
  p_parameters : Dune__exe.Stretch.t list;
  p_start_symbols : Dune__exe.Positions.t Dune__exe.StringMap.t;
  p_types : (parameter * Dune__exe.Stretch.ocamltype located) list;
  p_tokens : token_properties Dune__exe.StringMap.t;
  p_on_error_reduce : (parameter * on_error_reduce_level) list;
  p_grammar_attributes : attributes;
  p_symbol_attributes : (parameter list * attributes) list;
  p_rules : parameterized_rule Dune__exe.StringMap.t;("DEBUG:rule", [Tag1 (("located", 1654), ([((("a")), 100000000, 0, -165)], 1, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Positions"), "located"), [((("a")), 100000000, 0, -165)], (0)), 100000000, 0, -164)), [25], [0], 0, 0, (("src/syntax.ml", 22, 1403, 1403), ("src/syntax.ml", 23, 1421, 1445), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 0)), 1, 0); Tag1 (("terminal", 1655), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -163)), 0, 0, 0, 0, (("src/syntax.ml", 29, 1581, 1581), ("src/syntax.ml", 30, 1597, 1607), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 1)), 1, 0); Tag1 (("nonterminal", 1656), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -162)), 0, 0, 0, 0, (("src/syntax.ml", 32, 1609, 1609), ("src/syntax.ml", 33, 1628, 1638), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 2)), 1, 0); Tag1 (("symbol", 1657), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -161)), 0, 0, 0, 0, (("src/syntax.ml", 35, 1640, 1640), ("src/syntax.ml", 36, 1654, 1664), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 3)), 1, 0); Tag1 (("alias", 1658), (0, 0, 0, 1, ((Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -160)], (0)), 100000000, 0, -159)), 0, 0, 0, 0, (("src/syntax.ml", 52, 2369, 2369), ("src/syntax.ml", 53, 2382, 2399), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 4)), 1, 0); Tag1 (("identifier", 1659), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -158)), 0, 0, 0, 0, (("src/syntax.ml", 58, 2491, 2491), ("src/syntax.ml", 59, 2509, 2519), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 5)), 1, 0); Tag1 (("filename", 1660), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -157)), 0, 0, 0, 0, (("src/syntax.ml", 63, 2553, 2553), ("src/syntax.ml", 64, 2569, 2579), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 6)), 1, 0); Tag1 (("postlude", 1661), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Stretch"), "t"), 0, (0)), 100000000, 0, -156)), 0, 0, 0, 0, (("src/syntax.ml", 70, 2706, 2706), ("src/syntax.ml", 71, 2722, 2735), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 7)), 1, 0); Tag1 (("action", 1662), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Action"), "t"), 0, (0)), 100000000, 0, -155)), 0, 0, 0, 0, (("src/syntax.ml", 77, 2877, 2877), ("src/syntax.ml", 78, 2891, 2903), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 8)), 1, 0); Tag1 (("attribute", 1663), (0, 0, 0, 1, ((Tag2 ([(Tag3 ((("located", 1654)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -153)], (0)), 100000000, 0, -152); (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Stretch"), "t"), 0, (0)), 100000000, 0, -154)]), 100000000, 0, -151)), 0, 0, 0, 0, (("src/syntax.ml", 85, 3120, 3120), ("src/syntax.ml", 86, 3137, 3167), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 9)), 1, 0); Tag1 (("attributes", 1664), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("attribute", 1663)), 0, (0)), 100000000, 0, -150)], (0)), 100000000, 0, -149)), 0, 0, 0, 0, (("src/syntax.ml", 88, 3169, 3169), ("src/syntax.ml", 89, 3187, 3205), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 10)), 1, 0); Tag1 (("token_associativity", 1665), (0, 0, Tag1 ([(("LeftAssoc", 1278), (0), 0, (("src/syntax.ml", 110, 3995, 3999), ("src/syntax.ml", 110, 3995, 4008), 0), 0, Tag1 ("Dune__exe__Syntax", 12)); (("RightAssoc", 1279), (0), 0, (("src/syntax.ml", 111, 4009, 4011), ("src/syntax.ml", 111, 4009, 4023), 0), 0, Tag1 ("Dune__exe__Syntax", 13)); (("NonAssoc", 1280), (0), 0, (("src/syntax.ml", 112, 4024, 4026), ("src/syntax.ml", 112, 4024, 4036), 0), 0, Tag1 ("Dune__exe__Syntax", 14)); (("UndefinedAssoc", 1281), (0), 0, (("src/syntax.ml", 113, 4037, 4039), ("src/syntax.ml", 113, 4037, 4055), 0), 0, Tag1 ("Dune__exe__Syntax", 15))], 0), 1, 0, 0, 0, 0, 0, (("src/syntax.ml", 109, 3968, 3968), ("src/syntax.ml", 113, 4037, 4055), 0), 0, 1, 0, Tag1 ("Dune__exe__Syntax", 11)), 1, 0); Tag1 (("precedence_level", 1666), (0, 0, Tag1 ([(("UndefinedPrecedence", 1283), (0), 0, (("src/syntax.ml", 116, 4081, 4085), ("src/syntax.ml", 116, 4081, 4104), 0), 0, Tag1 ("Dune__exe__Syntax", 17)); (("PrecedenceLevel", 1284), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "InputFile"), "input_file"), 0, (0)), 100000000, 0, -145); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -146); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -147); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -148)]), 0, (("src/syntax.ml", 122, 4300, 4302), ("src/syntax.ml", 122, 4300, 4385), 0), 0, Tag1 ("Dune__exe__Syntax", 18))], 0), 1, 0, 0, 0, 0, 0, (("src/syntax.ml", 115, 4057, 4057), ("src/syntax.ml", 122, 4300, 4385), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 16)), 1, 0); Tag1 (("token_properties", 1667), (0, 0, [[(("tk_filename", 1352), 0, (Tag3 ((("filename", 1660)), 0, (0)), 100000000, 0, -136), (("src/syntax.ml", 126, 4417, 4432), ("src/syntax.ml", 126, 4417, 4460), 0), 0, Tag1 ("Dune__exe__Syntax", 20)); (("tk_ocamltype", 1353), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Stretch"), "ocamltype"), 0, (0)), 100000000, 0, -138)], (0)), 100000000, 0, -137), (("src/syntax.ml", 127, 4461, 4476), ("src/syntax.ml", 127, 4461, 4520), 0), 0, Tag1 ("Dune__exe__Syntax", 21)); (("tk_position", 1354), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Positions"), "t"), 0, (0)), 100000000, 0, -139), (("src/syntax.ml", 128, 4521, 4536), ("src/syntax.ml", 128, 4521, 4567), 0), 0, Tag1 ("Dune__exe__Syntax", 22)); (("tk_alias", 1355), 0, (Tag3 ((("alias", 1658)), 0, (0)), 100000000, 0, -140), (("src/syntax.ml", 129, 4568, 4583), ("src/syntax.ml", 129, 4568, 4608), 0), 0, Tag1 ("Dune__exe__Syntax", 23)); (("tk_attributes", 1356), 0, (Tag3 ((("attributes", 1664)), 0, (0)), 100000000, 0, -141), (("src/syntax.ml", 130, 4609, 4624), ("src/syntax.ml", 130, 4609, 4654), 0), 0, Tag1 ("Dune__exe__Syntax", 24)); (("tk_associativity", 1357), 1, (Tag3 ((("token_associativity", 1665)), 0, (0)), 100000000, 0, -142), (("src/syntax.ml", 131, 4655, 4661), ("src/syntax.ml", 131, 4655, 4709), 0), 0, Tag1 ("Dune__exe__Syntax", 25)); (("tk_precedence", 1358), 1, (Tag3 ((("precedence_level", 1666)), 0, (0)), 100000000, 0, -143), (("src/syntax.ml", 132, 4710, 4716), ("src/syntax.ml", 132, 4710, 4761), 0), 0, Tag1 ("Dune__exe__Syntax", 26)); (("tk_is_declared", 1359), 1, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -144), (("src/syntax.ml", 133, 4762, 4768), ("src/syntax.ml", 133, 4762, 4801), 0), 0, Tag1 ("Dune__exe__Syntax", 27))]], 1, 0, 0, 0, 0, 0, (("src/syntax.ml", 124, 4387, 4387), ("src/syntax.ml", 134, 4802, 4807), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 19)), 1, 0); Tag1 (("branch_prec_annotation", 1668), (0, 0, 0, 1, ((Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("located", 1654)), [(Tag3 ((("symbol", 1657)), 0, (0)), 100000000, 0, -135)], (0)), 100000000, 0, -134)], (0)), 100000000, 0, -133)), 0, 0, 0, 0, (("src/syntax.ml", 141, 5024, 5024), ("src/syntax.ml", 142, 5054, 5079), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 28)), 1, 0); Tag1 (("branch_production_level", 1669), (0, 0, Tag1 ([(("ProductionLevel", 1362), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "InputFile"), "input_file"), 0, (0)), 100000000, 0, -131); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -132)]), 0, (("src/syntax.ml", 150, 5341, 5343), ("src/syntax.ml", 150, 5341, 5390), 0), 0, Tag1 ("Dune__exe__Syntax", 30))], 0), 1, 0, 0, 0, 0, 0, (("src/syntax.ml", 149, 5310, 5310), ("src/syntax.ml", 150, 5341, 5390), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 29)), 1, 0); Tag1 (("on_error_reduce_level", 1670), (0, 0, 0, 1, ((Tag3 ((("branch_production_level", 1669)), 0, (0)), 100000000, 0, -130)), 0, 0, 0, 0, (("src/syntax.ml", 158, 5643, 5643), ("src/syntax.ml", 159, 5672, 5697), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 31)), 1, 0); Tag1 (("parameter", 1671), (0, 0, Tag1 ([(("ParameterVar", 1368), ([(Tag3 ((("located", 1654)), [(Tag3 ((("symbol", 1657)), 0, (0)), 100000000, 0, -123)], (0)), 100000000, 0, -122)]), 0, (("src/syntax.ml", 172, 6257, 6259), ("src/syntax.ml", 172, 6257, 6291), 0), 0, Tag1 ("Dune__exe__Syntax", 36)); (("ParameterApp", 1369), ([(Tag3 ((("located", 1654)), [(Tag3 ((("symbol", 1657)), 0, (0)), 100000000, 0, -125)], (0)), 100000000, 0, -124); (Tag3 ((("parameters", 1672)), 0, (0)), 100000000, 0, -126)]), 0, (("src/syntax.ml", 173, 6292, 6294), ("src/syntax.ml", 173, 6292, 6339), 0), 0, Tag1 ("Dune__exe__Syntax", 37)); (("ParameterAnonymous", 1370), ([(Tag3 ((("located", 1654)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("parameterized_branch", 1674)), 0, (0)), 100000000, 0, -129)], (0)), 100000000, 0, -128)], (0)), 100000000, 0, -127)]), 0, (("src/syntax.ml", 174, 6340, 6342), ("src/syntax.ml", 174, 6340, 6399), 0), 0, Tag1 ("Dune__exe__Syntax", 38))], 0), 1, 0, 0, 0, 0, 0, (("src/syntax.ml", 171, 6240, 6240), ("src/syntax.ml", 174, 6340, 6399), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 32)), 1, 0); Tag1 (("parameters", 1672), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("parameter", 1671)), 0, (0)), 100000000, 0, -121)], (0)), 100000000, 0, -120)), 0, 0, 0, 0, (("src/syntax.ml", 176, 6401, 6401), ("src/syntax.ml", 177, 6418, 6436), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 33)), 2, 0); Tag1 (("producer", 1673), (0, 0, 0, 1, ((Tag2 ([(Tag3 ((("located", 1654)), [(Tag3 ((("identifier", 1659)), 0, (0)), 100000000, 0, -117)], (0)), 100000000, 0, -116); (Tag3 ((("parameter", 1671)), 0, (0)), 100000000, 0, -118); (Tag3 ((("attributes", 1664)), 0, (0)), 100000000, 0, -119)]), 100000000, 0, -115)), 0, 0, 0, 0, (("src/syntax.ml", 187, 6851, 6851), ("src/syntax.ml", 188, 6866, 6913), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 34)), 2, 0); Tag1 (("parameterized_branch", 1674), (0, 0, [[(("pr_branch_position", 1371), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Positions"), "t"), 0, (0)), 100000000, 0, -109), (("src/syntax.ml", 196, 7098, 7104), ("src/syntax.ml", 196, 7098, 7147), 0), 0, Tag1 ("Dune__exe__Syntax", 39)); (("pr_producers", 1372), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("producer", 1673)), 0, (0)), 100000000, 0, -111)], (0)), 100000000, 0, -110), (("src/syntax.ml", 197, 7148, 7154), ("src/syntax.ml", 197, 7148, 7199), 0), 0, Tag1 ("Dune__exe__Syntax", 40)); (("pr_action", 1373), 0, (Tag3 ((("action", 1662)), 0, (0)), 100000000, 0, -112), (("src/syntax.ml", 198, 7200, 7206), ("src/syntax.ml", 198, 7200, 7244), 0), 0, Tag1 ("Dune__exe__Syntax", 41)); (("pr_branch_prec_annotation", 1374), 0, (Tag3 ((("branch_prec_annotation", 1668)), 0, (0)), 100000000, 0, -113), (("src/syntax.ml", 199, 7245, 7251), ("src/syntax.ml", 199, 7245, 7305), 0), 0, Tag1 ("Dune__exe__Syntax", 42)); (("pr_branch_production_level", 1375), 0, (Tag3 ((("branch_production_level", 1669)), 0, (0)), 100000000, 0, -114), (("src/syntax.ml", 200, 7306, 7312), ("src/syntax.ml", 200, 7306, 7366), 0), 0, Tag1 ("Dune__exe__Syntax", 43))]], 1, 0, 0, 0, 0, 0, (("src/syntax.ml", 194, 7065, 7065), ("src/syntax.ml", 201, 7367, 7372), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 35)), 2, 0); Tag1 (("parameterized_rule", 1675), (0, 0, [[(("pr_public_flag", 1377), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -99), (("src/syntax.ml", 209, 7535, 7541), ("src/syntax.ml", 209, 7535, 7569), 0), 0, Tag1 ("Dune__exe__Syntax", 45)); (("pr_inline_flag", 1378), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -100), (("src/syntax.ml", 210, 7570, 7576), ("src/syntax.ml", 210, 7570, 7604), 0), 0, Tag1 ("Dune__exe__Syntax", 46)); (("pr_nt", 1379), 0, (Tag3 ((("nonterminal", 1656)), 0, (0)), 100000000, 0, -101), (("src/syntax.ml", 211, 7605, 7611), ("src/syntax.ml", 211, 7605, 7646), 0), 0, Tag1 ("Dune__exe__Syntax", 47)); (("pr_positions", 1380), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Positions"), "t"), 0, (0)), 100000000, 0, -103)], (0)), 100000000, 0, -102), (("src/syntax.ml", 212, 7647, 7653), ("src/syntax.ml", 212, 7647, 7693), 0), 0, Tag1 ("Dune__exe__Syntax", 48)); (("pr_attributes", 1381), 0, (Tag3 ((("attributes", 1664)), 0, (0)), 100000000, 0, -104), (("src/syntax.ml", 213, 7694, 7700), ("src/syntax.ml", 213, 7694, 7734), 0), 0, Tag1 ("Dune__exe__Syntax", 49)); (("pr_parameters", 1382), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("symbol", 1657)), 0, (0)), 100000000, 0, -106)], (0)), 100000000, 0, -105), (("src/syntax.ml", 214, 7735, 7741), ("src/syntax.ml", 214, 7735, 7776), 0), 0, Tag1 ("Dune__exe__Syntax", 50)); (("pr_branches", 1383), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("parameterized_branch", 1674)), 0, (0)), 100000000, 0, -108)], (0)), 100000000, 0, -107), (("src/syntax.ml", 215, 7777, 7783), ("src/syntax.ml", 215, 7777, 7832), 0), 0, Tag1 ("Dune__exe__Syntax", 51))]], 1, 0, 0, 0, 0, 0, (("src/syntax.ml", 207, 7503, 7503), ("src/syntax.ml", 216, 7833, 7838), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 44)), 1, 0); Tag1 (("pattern", 1676), (0, 0, Tag1 ([(("SemPatVar", 1385), ([(Tag3 ((("located", 1654)), [(Tag3 ((("identifier", 1659)), 0, (0)), 100000000, 0, -95)], (0)), 100000000, 0, -94)]), 0, (("src/syntax.ml", 231, 8368, 8370), ("src/syntax.ml", 231, 8368, 8403), 0), 0, Tag1 ("Dune__exe__Syntax", 53)); (("SemPatWildcard", 1386), (0), 0, (("src/syntax.ml", 232, 8404, 8406), ("src/syntax.ml", 232, 8404, 8422), 0), 0, Tag1 ("Dune__exe__Syntax", 54)); (("SemPatTilde", 1387), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Positions"), "t"), 0, (0)), 100000000, 0, -96)]), 0, (("src/syntax.ml", 233, 8423, 8425), ("src/syntax.ml", 233, 8423, 8453), 0), 0, Tag1 ("Dune__exe__Syntax", 55)); (("SemPatTuple", 1388), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 1676)), 0, (0)), 100000000, 0, -98)], (0)), 100000000, 0, -97)]), 0, (("src/syntax.ml", 234, 8454, 8456), ("src/syntax.ml", 234, 8454, 8485), 0), 0, Tag1 ("Dune__exe__Syntax", 56))], 0), 1, 0, 0, 0, 0, 0, (("src/syntax.ml", 230, 8353, 8353), ("src/syntax.ml", 234, 8454, 8485), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 52)), 1, 0); Tag1 (("raw_action", 1677), (0, 0, 0, 1, ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Settings"), "dollars"), 0, (0)), 100000000, 0, -93), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("identifier", 1659)), 0, (0)), 100000000, 0, -92)], (0)), 100000000, 0, -91)], (0)), 100000000, 0, -90), (Tag3 ((("action", 1662)), 0, (0)), 100000000, 0, -89), 0), 100000000, 0, -88), 0), 100000000, 0, -87)), 0, 0, 0, 0, (("src/syntax.ml", 237, 8523, 8523), ("src/syntax.ml", 238, 8541, 8596), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 57)), 1, 0); Tag1 (("expression", 1678), (0, 0, 0, 1, ((Tag3 ((("located", 1654)), [(Tag3 ((("choice_expression", 1679)), 0, (0)), 100000000, 0, -86)], (0)), 100000000, 0, -85)), 0, 0, 0, 0, (("src/syntax.ml", 241, 8659, 8659), ("src/syntax.ml", 242, 8677, 8704), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 58)), 1, 0); Tag1 (("choice_expression", 1679), (0, 0, Tag1 ([(("EChoice", 1517), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("branch", 1680)), 0, (0)), 100000000, 0, -84)], (0)), 100000000, 0, -83)]), 0, (("src/syntax.ml", 246, 8784, 8786), ("src/syntax.ml", 246, 8784, 8810), 0), 0, Tag1 ("Dune__exe__Syntax", 65))], 0), 1, 0, 0, 0, 0, 0, (("src/syntax.ml", 245, 8760, 8760), ("src/syntax.ml", 246, 8784, 8810), 0), 0, 0, 1, Tag1 ("Dune__exe__Syntax", 59)), 2, 0); Tag1 (("branch", 1680), (0, 0, Tag1 ([(("Branch", 1518), ([(Tag3 ((("seq_expression", 1681)), 0, (0)), 100000000, 0, -81); (Tag3 ((("branch_production_level", 1669)), 0, (0)), 100000000, 0, -82)]), 0, (("src/syntax.ml", 250, 8876, 8878), ("src/syntax.ml", 250, 8876, 8930), 0), 0, Tag1 ("Dune__exe__Syntax", 66))], 0), 1, 0, 0, 0, 0, 0, (("src/syntax.ml", 249, 8863, 8863), ("src/syntax.ml", 250, 8876, 8930), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 60)), 2, 0); Tag1 (("seq_expression", 1681), (0, 0, 0, 1, ((Tag3 ((("located", 1654)), [(Tag3 ((("raw_seq_expression", 1682)), 0, (0)), 100000000, 0, -80)], (0)), 100000000, 0, -79)), 0, 0, 0, 0, (("src/syntax.ml", 254, 9020, 9020), ("src/syntax.ml", 255, 9041, 9069), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 61)), 2, 0); Tag1 (("raw_seq_expression", 1682), (0, 0, Tag1 ([(("ECons", 1519), ([(Tag3 ((("pattern", 1676)), 0, (0)), 100000000, 0, -73); (Tag3 ((("symbol_expression", 1683)), 0, (0)), 100000000, 0, -74); (Tag3 ((("seq_expression", 1681)), 0, (0)), 100000000, 0, -75)]), 0, (("src/syntax.ml", 258, 9096, 9098), ("src/syntax.ml", 258, 9096, 9153), 0), 0, Tag1 ("Dune__exe__Syntax", 67)); (("ESingleton", 1520), ([(Tag3 ((("symbol_expression", 1683)), 0, (0)), 100000000, 0, -76)]), 0, (("src/syntax.ml", 259, 9154, 9156), ("src/syntax.ml", 259, 9154, 9189), 0), 0, Tag1 ("Dune__exe__Syntax", 68)); (("EAction", 1521), ([(Tag3 ((("extended_action", 1684)), 0, (0)), 100000000, 0, -77); (Tag3 ((("branch_prec_annotation", 1668)), 0, (0)), 100000000, 0, -78)]), 0, (("src/syntax.ml", 260, 9190, 9192), ("src/syntax.ml", 260, 9190, 9245), 0), 0, Tag1 ("Dune__exe__Syntax", 69))], 0), 1, 0, 0, 0, 0, 0, (("src/syntax.ml", 257, 9071, 9071), ("src/syntax.ml", 260, 9190, 9245), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 62)), 2, 0); Tag1 (("symbol_expression", 1683), (0, 0, Tag1 ([(("ESymbol", 1522), ([(Tag3 ((("located", 1654)), [(Tag3 ((("symbol", 1657)), 0, (0)), 100000000, 0, -69)], (0)), 100000000, 0, -68); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 1678)), 0, (0)), 100000000, 0, -71)], (0)), 100000000, 0, -70); (Tag3 ((("attributes", 1664)), 0, (0)), 100000000, 0, -72)]), 0, (("src/syntax.ml", 266, 9384, 9386), ("src/syntax.ml", 266, 9384, 9444), 0), 0, Tag1 ("Dune__exe__Syntax", 70))], 0), 1, 0, 0, 0, 0, 0, (("src/syntax.ml", 265, 9360, 9360), ("src/syntax.ml", 266, 9384, 9444), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 63)), 2, 0); Tag1 (("extended_action", 1684), (0, 0, Tag1 ([(("XATraditional", 1523), ([(Tag3 ((("raw_action", 1677)), 0, (0)), 100000000, 0, -65)]), 0, (("src/syntax.ml", 271, 9574, 9576), ("src/syntax.ml", 271, 9574, 9605), 0), 0, Tag1 ("Dune__exe__Syntax", 71)); (("XAPointFree", 1524), ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Stretch"), "t"), 0, (0)), 100000000, 0, -67)], (0)), 100000000, 0, -66)]), 0, (("src/syntax.ml", 272, 9606, 9608), ("src/syntax.ml", 272, 9606, 9641), 0), 0, Tag1 ("Dune__exe__Syntax", 72))], 0), 1, 0, 0, 0, 0, 0, (("src/syntax.ml", 270, 9552, 9552), ("src/syntax.ml", 272, 9606, 9641), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 64)), 2, 0); Tag1 (("rule", 1685), (0, 0, [[(("rule_public", 1526), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -56), (("src/syntax.ml", 279, 9845, 9849), ("src/syntax.ml", 279, 9845, 9867), 0), 0, Tag1 ("Dune__exe__Syntax", 74)); (("rule_inline", 1527), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -57), (("src/syntax.ml", 280, 9868, 9872), ("src/syntax.ml", 280, 9868, 9890), 0), 0, Tag1 ("Dune__exe__Syntax", 75)); (("rule_lhs", 1528), 0, (Tag3 ((("located", 1654)), [(Tag3 ((("symbol", 1657)), 0, (0)), 100000000, 0, -59)], (0)), 100000000, 0, -58), (("src/syntax.ml", 281, 9891, 9895), ("src/syntax.ml", 281, 9891, 9920), 0), 0, Tag1 ("Dune__exe__Syntax", 76)); (("rule_attributes", 1529), 0, (Tag3 ((("attributes", 1664)), 0, (0)), 100000000, 0, -60), (("src/syntax.ml", 282, 9921, 9925), ("src/syntax.ml", 282, 9921, 9953), 0), 0, Tag1 ("Dune__exe__Syntax", 77)); (("rule_formals", 1530), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("located", 1654)), [(Tag3 ((("symbol", 1657)), 0, (0)), 100000000, 0, -63)], (0)), 100000000, 0, -62)], (0)), 100000000, 0, -61), (("src/syntax.ml", 283, 9954, 9958), ("src/syntax.ml", 283, 9954, 9992), 0), 0, Tag1 ("Dune__exe__Syntax", 78)); (("rule_rhs", 1531), 0, (Tag3 ((("expression", 1678)), 0, (0)), 100000000, 0, -64), (("src/syntax.ml", 284, 9993, 9997), ("src/syntax.ml", 284, 9993, 10018), 0), 0, Tag1 ("Dune__exe__Syntax", 79))]], 1, 0, 0, 0, 0, 0, (("src/syntax.ml", 277, 9829, 9829), ("src/syntax.ml", 285, 10019, 10022), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 73)), 1, 0); Tag1 (("declaration", 1686), (0, 0, Tag1 ([(("DCode", 1533), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Stretch"), "t"), 0, (0)), 100000000, 0, -37)]), 0, (("src/syntax.ml", 296, 10275, 10277), ("src/syntax.ml", 296, 10275, 10297), 0), 0, Tag1 ("Dune__exe__Syntax", 81)); (("DParameter", 1534), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Stretch"), "ocamltype"), 0, (0)), 100000000, 0, -38)]), 0, (("src/syntax.ml", 300, 10339, 10341), ("src/syntax.ml", 300, 10339, 10374), 0), 0, Tag1 ("Dune__exe__Syntax", 82)); (("DToken", 1535), ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Stretch"), "ocamltype"), 0, (0)), 100000000, 0, -40)], (0)), 100000000, 0, -39); (Tag3 ((("terminal", 1655)), 0, (0)), 100000000, 0, -41); (Tag3 ((("alias", 1658)), 0, (0)), 100000000, 0, -42); (Tag3 ((("attributes", 1664)), 0, (0)), 100000000, 0, -43)]), 0, (("src/syntax.ml", 304, 10447, 10449), ("src/syntax.ml", 304, 10447, 10517), 0), 0, Tag1 ("Dune__exe__Syntax", 83)); (("DStart", 1536), ([(Tag3 ((("nonterminal", 1656)), 0, (0)), 100000000, 0, -44)]), 0, (("src/syntax.ml", 308, 10556, 10558), ("src/syntax.ml", 308, 10556, 10581), 0), 0, Tag1 ("Dune__exe__Syntax", 84)); (("DTokenProperties", 1537), ([(Tag3 ((("terminal", 1655)), 0, (0)), 100000000, 0, -45); (Tag3 ((("token_associativity", 1665)), 0, (0)), 100000000, 0, -46); (Tag3 ((("precedence_level", 1666)), 0, (0)), 100000000, 0, -47)]), 0, (("src/syntax.ml", 312, 10634, 10636), ("src/syntax.ml", 312, 10634, 10707), 0), 0, Tag1 ("Dune__exe__Syntax", 85)); (("DType", 1538), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Stretch"), "ocamltype"), 0, (0)), 100000000, 0, -48); (Tag3 ((("parameter", 1671)), 0, (0)), 100000000, 0, -49)]), 0, (("src/syntax.ml", 316, 10738, 10740), ("src/syntax.ml", 316, 10738, 10780), 0), 0, Tag1 ("Dune__exe__Syntax", 86)); (("DGrammarAttribute", 1539), ([(Tag3 ((("attribute", 1663)), 0, (0)), 100000000, 0, -50)]), 0, (("src/syntax.ml", 320, 10830, 10832), ("src/syntax.ml", 320, 10830, 10864), 0), 0, Tag1 ("Dune__exe__Syntax", 87)); (("DSymbolAttributes", 1540), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("parameter", 1671)), 0, (0)), 100000000, 0, -52)], (0)), 100000000, 0, -51); (Tag3 ((("attributes", 1664)), 0, (0)), 100000000, 0, -53)]), 0, (("src/syntax.ml", 324, 10939, 10941), ("src/syntax.ml", 324, 10939, 10991), 0), 0, Tag1 ("Dune__exe__Syntax", 88)); (("DOnErrorReduce", 1541), ([(Tag3 ((("parameter", 1671)), 0, (0)), 100000000, 0, -54); (Tag3 ((("on_error_reduce_level", 1670)), 0, (0)), 100000000, 0, -55)]), 0, (("src/syntax.ml", 328, 11033, 11035), ("src/syntax.ml", 328, 11033, 11088), 0), 0, Tag1 ("Dune__exe__Syntax", 89))], 0), 1, 0, 0, 0, 0, 0, (("src/syntax.ml", 292, 10228, 10228), ("src/syntax.ml", 328, 11033, 11088), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 80)), 1, 0); Tag1 (("partial_grammar", 1687), (0, 0, [[(("pg_filename", 1543), 0, (Tag3 ((("filename", 1660)), 0, (0)), 100000000, 0, -29), (("src/syntax.ml", 336, 11248, 11254), ("src/syntax.ml", 336, 11248, 11286), 0), 0, Tag1 ("Dune__exe__Syntax", 91)); (("pg_postlude", 1544), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("postlude", 1661)), 0, (0)), 100000000, 0, -31)], (0)), 100000000, 0, -30), (("src/syntax.ml", 337, 11287, 11293), ("src/syntax.ml", 337, 11287, 11332), 0), 0, Tag1 ("Dune__exe__Syntax", 92)); (("pg_declarations", 1545), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("located", 1654)), [(Tag3 ((("declaration", 1686)), 0, (0)), 100000000, 0, -34)], (0)), 100000000, 0, -33)], (0)), 100000000, 0, -32), (("src/syntax.ml", 338, 11333, 11339), ("src/syntax.ml", 338, 11333, 11387), 0), 0, Tag1 ("Dune__exe__Syntax", 93)); (("pg_rules", 1546), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("parameterized_rule", 1675)), 0, (0)), 100000000, 0, -36)], (0)), 100000000, 0, -35), (("src/syntax.ml", 339, 11388, 11394), ("src/syntax.ml", 339, 11388, 11441), 0), 0, Tag1 ("Dune__exe__Syntax", 94))]], 1, 0, 0, 0, 0, 0, (("src/syntax.ml", 334, 11219, 11219), ("src/syntax.ml", 340, 11442, 11447), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 90)), 1, 0); Tag1 (("grammar", 1688), (0, 0, [[(("p_preludes", 1548), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Stretch"), "t"), 0, (0)), 100000000, 0, -3)], (0)), 100000000, 0, -2), (("src/syntax.ml", 358, 12184, 12190), ("src/syntax.ml", 358, 12184, 12228), 0), 0, Tag1 ("Dune__exe__Syntax", 96)); (("p_postludes", 1549), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("postlude", 1661)), 0, (0)), 100000000, 0, -5)], (0)), 100000000, 0, -4), (("src/syntax.ml", 359, 12229, 12235), ("src/syntax.ml", 359, 12229, 12272), 0), 0, Tag1 ("Dune__exe__Syntax", 97)); (("p_parameters", 1550), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Stretch"), "t"), 0, (0)), 100000000, 0, -7)], (0)), 100000000, 0, -6), (("src/syntax.ml", 360, 12273, 12279), ("src/syntax.ml", 360, 12273, 12317), 0), 0, Tag1 ("Dune__exe__Syntax", 98)); (("p_start_symbols", 1599), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "StringMap"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Positions"), "t"), 0, (0)), 100000000, 0, -9)], (0)), 100000000, 0, -8), (("src/syntax.ml", 361, 12318, 12324), ("src/syntax.ml", 361, 12318, 12371), 0), 0, Tag1 ("Dune__exe__Syntax", 99)); (("p_types", 1600), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("parameter", 1671)), 0, (0)), 100000000, 0, -12); (Tag3 ((("located", 1654)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Stretch"), "ocamltype"), 0, (0)), 100000000, 0, -14)], (0)), 100000000, 0, -13)]), 100000000, 0, -11)], (0)), 100000000, 0, -10), (("src/syntax.ml", 362, 12372, 12378), ("src/syntax.ml", 362, 12372, 12446), 0), 0, Tag1 ("Dune__exe__Syntax", 100)); (("p_tokens", 1601), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "StringMap"), "t"), [(Tag3 ((("token_properties", 1667)), 0, (0)), 100000000, 0, -16)], (0)), 100000000, 0, -15), (("src/syntax.ml", 363, 12447, 12453), ("src/syntax.ml", 363, 12447, 12505), 0), 0, Tag1 ("Dune__exe__Syntax", 101)); (("p_on_error_reduce", 1602), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("parameter", 1671)), 0, (0)), 100000000, 0, -19); (Tag3 ((("on_error_reduce_level", 1670)), 0, (0)), 100000000, 0, -20)]), 100000000, 0, -18)], (0)), 100000000, 0, -17), (("src/syntax.ml", 364, 12506, 12512), ("src/syntax.ml", 364, 12506, 12576), 0), 0, Tag1 ("Dune__exe__Syntax", 102)); (("p_grammar_attributes", 1603), 0, (Tag3 ((("attributes", 1664)), 0, (0)), 100000000, 0, -21), (("src/syntax.ml", 365, 12577, 12583), ("src/syntax.ml", 365, 12577, 12617), 0), 0, Tag1 ("Dune__exe__Syntax", 103)); (("p_symbol_attributes", 1604), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("parameter", 1671)), 0, (0)), 100000000, 0, -25)], (0)), 100000000, 0, -24); (Tag3 ((("attributes", 1664)), 0, (0)), 100000000, 0, -26)]), 100000000, 0, -23)], (0)), 100000000, 0, -22), (("src/syntax.ml", 366, 12618, 12624), ("src/syntax.ml", 366, 12618, 12682), 0), 0, Tag1 ("Dune__exe__Syntax", 104)); (("p_rules", 1605), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "StringMap"), "t"), [(Tag3 ((("parameterized_rule", 1675)), 0, (0)), 100000000, 0, -28)], (0)), 100000000, 0, -27), (("src/syntax.ml", 367, 12683, 12689), ("src/syntax.ml", 367, 12683, 12743), 0), 0, Tag1 ("Dune__exe__Syntax", 105))]], 1, 0, 0, 0, 0, 0, (("src/syntax.ml", 356, 12162, 12163), ("src/syntax.ml", 368, 12744, 12749), 0), 0, 0, 0, Tag1 ("Dune__exe__Syntax", 95)), 1, 0)], "Dune__exe__Syntax", [("Dune__exe__Syntax", ("\169\210\177ImC\167\1826I\176k\156\243`\229")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__StringLabels", ("\134F\024\226\216Is#\223\230\234\169Z\206Gc")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Printf", ("\215<\139]\021\142\224E\245m\198qc(W\229")); ("Stdlib__Printexc", ("\217u\168\235\179oi\167\235\255\025\017%d\192s")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__MoreLabels", ("\248\232\248\254`<\230\241\161U\193U\1466J\238")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__ListLabels", ("*\194\012\191\020%\170\249m\002\180\178hk\205\220")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shadow_stdlib", ("\219zi\164\203\158e)\232\221\196\168\138x\142\018")); ("Sexplib0__Sexpable", ("\251${\207(\249/z\242\255\250^\141\156\210e")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv_error", ("kzv!\151~\198P\000\165\176d\007\251p\232")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("Ppx_module_timer_runtime", ("\255\014\002\221+\150\189o\025\158\233y\t7\000\001")); ("MenhirSdk__Keyword", ("\140\184mC\002M1\250_J\005'\254\253\198\158")); ("MenhirSdk", ("F\232\012\196l\143\145[\255\2193U\197\027\176\139")); ("Dune__exe__StringSet", ("uB\206\020%\219\199\135&\196,\015\190\015^\230")); ("Dune__exe__StringMap", ("\157\157\161k*M\030\254|\006>\144X\147j\222")); ("Dune__exe__Stretch", ("`1\021p\160\rm\2294\182\183\018!\r\150N")); ("Dune__exe__Settings", ("M\162\137\147^\213\201 \247\137>q\024\145j\029")); ("Dune__exe__Positions", ("\137nS\236\011\187\r[\024:\162/\201\139\237}")); ("Dune__exe__InputFile", (",\0246\029z@\127T\235\227k~\t\138\213%")); ("Dune__exe__IL", ("Y\233a\233\211\171OQ\195\015\017\030j\226.\186")); ("Dune__exe__Action", ("c\225H \249\179\190\007`[X\019\132@\208\193")); ("Dune__exe", ("\137\000\197\175$\007]\218\141\248\172\212\146c\153\212")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Base_internalhash_types", ("0\148#2\226\223\018\135\173>!\020\237\017\255\149")); ("Base__Unit", ("\247\n\178\171]m\169\231\139\171\148\189\254\236l'")); ("Base__T", ("+t\159\169\027\152\205\235\003\237\133\177\024\n6'")); ("Base__Sys0", ("\206z\231\154s\\\136\2364\131\005\014\031\152m3")); ("Base__Stringable", ("\170\025\162\136\234\162\n\161\1491>\145\210@\237t")); ("Base__String0", ("\212\221L\220\245\255\162P\228\224\189\216\135H\149O")); ("Base__String", ("|q\181\r\14787\130\127\191\025\137\203\217\250\196")); ("Base__Staged", ("\203J\011+\249\0115\1338\023\209\142\159\240V.")); ("Base__Source_code_position0", ("_\003P6\254\029\206\005\130\136\180\019\145\230\000M")); ("Base__Sign_or_nan", ("\2287\251,\197\017qf\179Y\025h\190\131W%")); ("Base__Sign0", ("\152\138\204\175\244\128J\165\221\165\160\150y\1305i")); ("Base__Sign", ("^\255.Q;\215fi\134\192\182\241Z\2425l")); ("Base__Sexpable", ("\155?\169\178\246\242*\232\206\018Y\174\203h\217i")); ("Base__Sexp_with_comparable", ("\171\173\137y\1855\006y\146\248\141@@\191[W")); ("Base__Sexp", ("\154\187\171&\209=\153[\236\250!U\174`\190T")); ("Base__Sequence", ("{L\140\211\223\183\000\030\151\247FnY\196\210\201")); ("Base__Result", ("\204|\215\173FMa\2511<&\215T\194$\228")); ("Base__Ref", ("\250\254R\158s\203c\0025\029I6\149\179s\158")); ("Base__Random", (" \216\153fc\243\1430\155\211\169?\022\\\231\011")); ("Base__Printf", ("\000\196c,\214\127\226\174\220\190\253z!\242\028\250")); ("Base__Pretty_printer", ("\175\005\031\018\015a\159\220\154c'(a\239j\233")); ("Base__Ppx_hash_lib", ("\199\141\178\193\006\209L\007^\020(\131\224sn8")); ("Base__Ppx_enumerate_lib", ("G\171\178\012Em\142\235@\152fg\020\140~(")); ("Base__Ppx_compare_lib", ("\243\186~\233\228\199Ah\181.\223\004e\231\129S")); ("Base__Poly0", ("\230;\143\234\255.H\132KOe7\155\\\023f")); ("Base__Or_error", ("\193\133)\bO\210\2517\168*\203\148\143\200\127\177")); ("Base__Option", ("\242!\176\142\168\247\163Jg\0254\180\224\\A\210")); ("Base__Nativeint", ("\252/\181U\214\229\029?.\130\145\237\"qFj")); ("Base__Monad_intf", ("\208\203\163\152\184O\130?\012:\168\247}\018\253\155")); ("Base__Monad", ("!\244\168\2352=\137Lm\219\129K\216\199\145\\")); ("Base__List", ("}\029h\158/\153\229\161]0\224Y\003Z\250\210")); ("Base__Lazy", ("@`\165\196 \235)\136ANe:p\169$\185")); ("Base__Invariant_intf", ("\213\204\238\235\236[\198\145\028\2392\015\243\177S\249")); ("Base__Invariant", ("\135\153\136\\\129SD\228\202l\255\152\139\253\015\201")); ("Base__Intable", ("\028\249=Y\003]\231qd\238\172\004b\170\142\255")); ("Base__Int_intf", ("\238Q\2457\239\156\018\183J\015\240\178\193b\166@")); ("Base__Int64", ("\252B\186\239\245\155\209\227\136CIX@\189\003\029")); ("Base__Int63_emul", ("'\210s\232\177\204\254\024C\215\014\231\210\227n\235")); ("Base__Int63", ("\165\016\236\214m\014a\226A{\191\235@O\1695")); ("Base__Int32", ("\244*\172\133\227\025$@\180\027\024\132\195yO\027")); ("Base__Int0", ("N\1310\012\227\254\000\255_\222!\018\016\003\1779")); ("Base__Int", ("\165Z\179\140\230$\131\175\209\172\214\"\170\214{\250")); ("Base__Info_intf", ("\184\209'\173\251\219\167X|v\188]\190o5X")); ("Base__Info", ("-\011\149\203\248\030\2301\1907\1630\189\128\209\170")); ("Base__Indexed_container_intf", ("\179\2213\145j\\\136\tl2\240\006\188j$r")); ("Base__Indexed_container", ("\196\246\213\141\196d\130\002\232\162\144y\149\236\145\218")); ("Base__Import0", ("\156\129U\197Y[\\\153\017Ho\203\173\204\220\020")); ("Base__Import", ("\014\187\247\141\187\181\142g\176:s_,\181\219\209")); ("Base__Identifiable_intf", ("hK7}\187\129\022-r\233\241\192Q\161=j")); ("Base__Identifiable", ("L\020\162\189\228\217^\171\158H_\157\164c\130\242")); ("Base__Hashable_intf", ("\128\015G\244\135R\026\202\128F?)\193\004\195\181")); ("Base__Hashable", ("\027\187\158\245r}\018\193dbq\196\005\170g\252")); ("Base__Hash_intf", ("h\004P\218\1531G\127\212\208A\024\140\164iq")); ("Base__Hash", ("\206Rc\194\234{s3\248\165\024\162\203{\206\206")); ("Base__Globalize", ("<\243w~.\180\196t\159\193\174[\227\139\215G")); ("Base__Formatter", ("\193\149\030\140\154\1505b\162a`%\243\185'%")); ("Base__Floatable", ("\239\176\151\139\173ft(q\190\205\030C\170\197\177")); ("Base__Float", ("tR$\252\165\134g\024>\127\254\245\212-\018\141")); ("Base__Field", ("8In\234X\202\188G\186\208$\192\175\136\214v")); ("Base__Exn", ("?\191\202\221\228\185\154\127\240\191o\134\020\186b\173")); ("Base__Error", ("\199\218\231n\155/\159\156\146\247\148t\237\003\t\153")); ("Base__Equal", ("\193\217Z\127he\141N\000\1447\030\236%\131\b")); ("Base__Either0", ("!9-\011n\2077eZ\212\031c\227\029\206\t")); ("Base__Container_intf", ("\170vo*\208\209\141\219\196\168\236l\016\246\012c")); ("Base__Container", ("\191|>_\153W\235M\180uKz\214w`q")); ("Base__Comparisons", ("\196\196Y\"{\163~)\\G/\155:\004\141;")); ("Base__Comparator", ("\002\135z7b\025&\207\t\188\239&U3R\167")); ("Base__Comparable_intf", ("\252n\002\221\246\143r\235oJ\240\151\202\211\161\254")); ("Base__Comparable", (":\134'\156u#\215\225\129\191\162\229\200\185l\012")); ("Base__Char", ("\206\224\186\000'\157$\023\023\190\198{\250\141a\216")); ("Base__Bytes", ("\028\001\232X(\240\139\227s\152\156\138\023\030\r\188")); ("Base__Bool0", ("\177f\254p\023\143&\239\020\136\206\242~\018F\251")); ("Base__Bool", ("\162+\012Rx\183c\226\131\190@Z\016q\138@")); ("Base__Blit_intf", ("\171\129\t\214\130\131O\210\251F\228.\168\004Vo")); ("Base__Blit", ("}g\242\161\000\216\132\220\195\230C\002jg\234j")); ("Base__Binary_searchable_intf", ("/\213\237\209\200\192$w\158\234\169\148\012\221W\019")); ("Base__Binary_searchable", ("V\022B_\233\194\145K\248\233\025\175U\155i\197")); ("Base__Backtrace", ("\212~\253E\024|\228\141\015\169\012\006\022\0065\181")); ("Base__Array", ("P\252F\172\242{\241\226#uu\207\2068\218\015")); ("Base__Applicative_intf", ("J\176\203\159\235N(\235\027\232\198+\224\205*A")); ("Base__Applicative", ("\157\024\176\241a\165\204\133\003s3\214\007\131\244\n")); ("Base__", ("p\252\007\139\128\163W\025+\0225\001\246|P\158")); ("Base", ("\167SY\027Q9E\005r,\198\164\161\023\170\151"))], [1; (0)])

}
