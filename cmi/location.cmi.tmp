type t =
  Warnings.loc = {
  loc_start : Lexing.position;
  loc_end : Lexing.position;
  loc_ghost : bool;
}
val none : t
val is_none : t -> bool
val in_file : string -> t
val init : Lexing.lexbuf -> string -> unit
val curr : Lexing.lexbuf -> t
val symbol_rloc : unit -> t
val symbol_gloc : unit -> t
val rhs_loc : int -> t
val rhs_interval : int -> int -> t
val get_pos_info : Lexing.position -> string * int * int
type 'a loc = { txt : 'a; loc : t; }
val mknoloc : 'a -> 'a loc
val mkloc : 'a -> t -> 'a loc
val input_name : string ref
val input_lexbuf : Lexing.lexbuf option ref
val input_phrase_buffer : Buffer.t option ref
val echo_eof : unit -> unit
val separate_new_message : Format.formatter -> unit
val reset : unit -> unit
val rewrite_absolute_path : string -> string
val rewrite_find_first_existing : string -> string option
val rewrite_find_all_existing_dirs : string -> string list
val absolute_path : string -> string
val show_filename : string -> string
val print_filename : Format.formatter -> string -> unit
val print_loc : Format.formatter -> t -> unit
val print_locs : Format.formatter -> t list -> unit
val highlight_terminfo : Lexing.lexbuf -> Format.formatter -> t list -> unit
type msg = (Format.formatter -> unit) loc
val msg : ?loc:t -> ('a, Format.formatter, unit, msg) format4 -> 'a
type report_kind =
    Report_error
  | Report_warning of string
  | Report_warning_as_error of string
  | Report_alert of string
  | Report_alert_as_error of string
type report = { kind : report_kind; main : msg; sub : msg list; }
type report_printer = {
  pp : report_printer -> Format.formatter -> report -> unit;
  pp_report_kind :
    report_printer -> report -> Format.formatter -> report_kind -> unit;
  pp_main_loc : report_printer -> report -> Format.formatter -> t -> unit;
  pp_main_txt :
    report_printer ->
    report -> Format.formatter -> (Format.formatter -> unit) -> unit;
  pp_submsgs :
    report_printer -> report -> Format.formatter -> msg list -> unit;
  pp_submsg : report_printer -> report -> Format.formatter -> msg -> unit;
  pp_submsg_loc : report_printer -> report -> Format.formatter -> t -> unit;
  pp_submsg_txt :
    report_printer ->
    report -> Format.formatter -> (Format.formatter -> unit) -> unit;
}
val batch_mode_printer : report_printer
val terminfo_toplevel_printer : Lexing.lexbuf -> report_printer
val best_toplevel_printer : unit -> report_printer
val print_report : Format.formatter -> report -> unit
val report_printer : (unit -> report_printer) ref
val default_report_printer : unit -> report_printer
val report_warning : t -> Warnings.t -> report option
val warning_reporter : (t -> Warnings.t -> report option) ref
val default_warning_reporter : t -> Warnings.t -> report option
val formatter_for_warnings : Format.formatter ref
val print_warning : t -> Format.formatter -> Warnings.t -> unit
val prerr_warning : t -> Warnings.t -> unit
val report_alert : t -> Warnings.alert -> report option
val alert_reporter : (t -> Warnings.alert -> report option) ref
val default_alert_reporter : t -> Warnings.alert -> report option
val print_alert : t -> Format.formatter -> Warnings.alert -> unit
val prerr_alert : t -> Warnings.alert -> unit
val deprecated : ?def:t -> ?use:t -> t -> string -> unit
val alert : ?def:t -> ?use:t -> kind:string -> t -> string -> unit
val auto_include_alert : string -> unit
val deprecated_script_alert : string -> unit
type error = report
val error : ?loc:t -> ?sub:msg list -> string -> error
val errorf :
  ?loc:t ->
  ?sub:msg list -> ('a, Format.formatter, unit, error) format4 -> 'a
val error_of_printer :
  ?loc:t -> ?sub:msg list -> (Format.formatter -> 'a -> unit) -> 'a -> error
val error_of_printer_file : (Format.formatter -> 'a -> unit) -> 'a -> error
val register_error_of_exn : (exn -> error option) -> unit
val error_of_exn : exn -> [ `Already_displayed | `Ok of error ] option
exception Error of error
exception Already_displayed_error
val raise_errorf :
  ?loc:t -> ?sub:msg list -> ('a, Format.formatter, unit, 'b) format4 -> 'a
("DEBUG:rule", [Tag1 (("t", 807), (0, 0, [[(("loc_start", 450), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -393), (("parsing/location.mli", 26, 1278, 1280), ("parsing/location.mli", 26, 1278, 1307), 0), 0, Tag1 ("Location", 1)); (("loc_end", 451), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -394), (("parsing/location.mli", 27, 1308, 1310), ("parsing/location.mli", 27, 1308, 1335), 0), 0, Tag1 ("Location", 2)); (("loc_ghost", 452), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -395), (("parsing/location.mli", 28, 1336, 1338), ("parsing/location.mli", 28, 1336, 1354), 0), 0, Tag1 ("Location", 3))]], 1, ((Tag3 (Tag1 ((Tag2 ("Warnings")), "loc"), 0, (0)), 100000000, 0, -392)), 0, 0, 0, 0, (("parsing/location.mli", 25, 1252, 1252), ("parsing/location.mli", 29, 1355, 1356), 0), 0, 0, 0, Tag1 ("Location", 0)), 1, 0); (("none", 808), ((Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -391), 0, (("parsing/location.mli", 38, 1629, 1629), ("parsing/location.mli", 38, 1629, 1641), 0), 0, Tag1 ("Location", 4)), 0); (("is_none", 809), ((Tag1 (0, (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -390), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -389), 0), 100000000, 0, -388), 0, (("parsing/location.mli", 41, 1714, 1714), ("parsing/location.mli", 41, 1714, 1737), 0), 0, Tag1 ("Location", 5)), 0); (("in_file", 810), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -387), (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -386), 0), 100000000, 0, -385), 0, (("parsing/location.mli", 44, 1797, 1797), ("parsing/location.mli", 44, 1797, 1822), 0), 0, Tag1 ("Location", 6)), 0); (("init", 811), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -384), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -383), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -382), 0), 100000000, 0, -381), 0), 100000000, 0, -380), 0, (("parsing/location.mli", 47, 1884, 1884), ("parsing/location.mli", 47, 1884, 1926), 0), 0, Tag1 ("Location", 7)), 0); (("curr", 812), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -379), (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -378), 0), 100000000, 0, -377), 0, (("parsing/location.mli", 51, 2024, 2024), ("parsing/location.mli", 51, 2024, 2053), 0), 0, Tag1 ("Location", 8)), 0); (("symbol_rloc", 813), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -376), (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -375), 0), 100000000, 0, -374), 0, (("parsing/location.mli", 54, 2119, 2119), ("parsing/location.mli", 54, 2119, 2145), 0), 0, Tag1 ("Location", 9)), 0); (("symbol_gloc", 814), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -373), (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -372), 0), 100000000, 0, -371), 0, (("parsing/location.mli", 55, 2146, 2146), ("parsing/location.mli", 55, 2146, 2172), 0), 0, Tag1 ("Location", 10)), 0); (("rhs_loc", 815), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -370), (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -369), 0), 100000000, 0, -368), 0, (("parsing/location.mli", 59, 2290, 2290), ("parsing/location.mli", 59, 2290, 2311), 0), 0, Tag1 ("Location", 11)), 0); (("rhs_interval", 816), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -367), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -366), (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -365), 0), 100000000, 0, -364), 0), 100000000, 0, -363), 0, (("parsing/location.mli", 61, 2313, 2313), ("parsing/location.mli", 61, 2313, 2346), 0), 0, Tag1 ("Location", 12)), 0); (("get_pos_info", 817), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -362), (Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -359); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -360); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -361)]), 100000000, 0, -358), 0), 100000000, 0, -357), 0, (("parsing/location.mli", 63, 2348, 2348), ("parsing/location.mli", 63, 2348, 2403), 0), 0, Tag1 ("Location", 13)), 0); Tag1 (("loc", 818), ([((("a")), 100000000, 0, -355)], 1, [[(("txt", 515), 0, ((("a")), 100000000, 0, -355), (("parsing/location.mli", 67, 2445, 2447), ("parsing/location.mli", 67, 2445, 2456), 0), 0, Tag1 ("Location", 15)); (("loc", 516), 0, (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -356), (("parsing/location.mli", 68, 2457, 2459), ("parsing/location.mli", 68, 2457, 2467), 0), 0, Tag1 ("Location", 16))]], 1, 0, [25], [0], 0, 0, (("parsing/location.mli", 66, 2429, 2429), ("parsing/location.mli", 69, 2468, 2469), 0), 0, 0, 0, Tag1 ("Location", 14)), 1, 0); (("mknoloc", 819), ((Tag1 (0, ((("a")), 100000000, 0, -354), (Tag3 ((("loc", 818)), [((("a")), 100000000, 0, -354)], (0)), 100000000, 0, -353), 0), 100000000, 0, -352), 0, (("parsing/location.mli", 71, 2471, 2471), ("parsing/location.mli", 71, 2471, 2497), 0), 0, Tag1 ("Location", 17)), 0); (("mkloc", 820), ((Tag1 (0, ((("a")), 100000000, 0, -350), (Tag1 (0, (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -351), (Tag3 ((("loc", 818)), [((("a")), 100000000, 0, -350)], (0)), 100000000, 0, -349), 0), 100000000, 0, -348), 0), 100000000, 0, -347), 0, (("parsing/location.mli", 72, 2498, 2498), ("parsing/location.mli", 72, 2498, 2527), 0), 0, Tag1 ("Location", 18)), 0); (("input_name", 821), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -346)], (0)), 100000000, 0, -345), 0, (("parsing/location.mli", 77, 2553, 2553), ("parsing/location.mli", 77, 2553, 2579), 0), 0, Tag1 ("Location", 19)), 0); (("input_lexbuf", 822), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -344)], (0)), 100000000, 0, -343)], (0)), 100000000, 0, -342), 0, (("parsing/location.mli", 78, 2580, 2580), ("parsing/location.mli", 78, 2580, 2622), 0), 0, Tag1 ("Location", 20)), 0); (("input_phrase_buffer", 823), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Buffer"), "t"), 0, (0)), 100000000, 0, -341)], (0)), 100000000, 0, -340)], (0)), 100000000, 0, -339), 0, (("parsing/location.mli", 85, 2868, 2868), ("parsing/location.mli", 85, 2868, 2912), 0), 0, Tag1 ("Location", 21)), 0); (("echo_eof", 824), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -338), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -337), 0), 100000000, 0, -336), 0, (("parsing/location.mli", 90, 2955, 2955), ("parsing/location.mli", 90, 2955, 2981), 0), 0, Tag1 ("Location", 22)), 0); (("separate_new_message", 825), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -335), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -334), 0), 100000000, 0, -333), 0, (("parsing/location.mli", 91, 2982, 2982), ("parsing/location.mli", 91, 2982, 3025), 0), 0, Tag1 ("Location", 23)), 0); (("reset", 826), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -332), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -331), 0), 100000000, 0, -330), 0, (("parsing/location.mli", 92, 3026, 3026), ("parsing/location.mli", 92, 3026, 3049), 0), 0, Tag1 ("Location", 24)), 0); (("rewrite_absolute_path", 827), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -329), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -328), 0), 100000000, 0, -327), 0, (("parsing/location.mli", 97, 3080, 3080), ("parsing/location.mli", 97, 3080, 3123), 0), 0, Tag1 ("Location", 25)), 0); (("rewrite_find_first_existing", 828), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -326), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -325)], (0)), 100000000, 0, -324), 0), 100000000, 0, -323), 0, (("parsing/location.mli", 111, 3628, 3628), ("parsing/location.mli", 111, 3628, 3684), 0), 0, Tag1 ("Location", 26)), 0); (("rewrite_find_all_existing_dirs", 829), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -322), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -321)], (0)), 100000000, 0, -320), 0), 100000000, 0, -319), 0, (("parsing/location.mli", 133, 4688, 4688), ("parsing/location.mli", 133, 4688, 4745), 0), 0, Tag1 ("Location", 27)), 0); (("absolute_path", 830), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -318), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -317), 0), 100000000, 0, -316), 0, (("parsing/location.mli", 159, 5913, 5913), ("parsing/location.mli", 159, 5913, 5948), 0), 0, Tag1 ("Location", 28)), 0); (("show_filename", 831), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -315), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -314), 0), 100000000, 0, -313), 0, (("parsing/location.mli", 168, 6273, 6273), ("parsing/location.mli", 168, 6273, 6308), 0), 0, Tag1 ("Location", 29)), 0); (("print_filename", 832), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -312), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -311), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -310), 0), 100000000, 0, -309), 0), 100000000, 0, -308), 0, (("parsing/location.mli", 172, 6434, 6434), ("parsing/location.mli", 172, 6434, 6481), 0), 0, Tag1 ("Location", 30)), 0); (("print_loc", 833), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -307), (Tag1 (0, (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -306), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -305), 0), 100000000, 0, -304), 0), 100000000, 0, -303), 0, (("parsing/location.mli", 174, 6483, 6483), ("parsing/location.mli", 174, 6483, 6520), 0), 0, Tag1 ("Location", 31)), 0); (("print_locs", 834), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -302), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -301)], (0)), 100000000, 0, -300), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -299), 0), 100000000, 0, -298), 0), 100000000, 0, -297), 0, (("parsing/location.mli", 175, 6521, 6521), ("parsing/location.mli", 175, 6521, 6564), 0), 0, Tag1 ("Location", 32)), 0); (("highlight_terminfo", 835), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -296), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -295), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -294)], (0)), 100000000, 0, -293), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -292), 0), 100000000, 0, -291), 0), 100000000, 0, -290), 0), 100000000, 0, -289), 0, (("parsing/location.mli", 180, 6619, 6619), ("parsing/location.mli", 181, 6643, 6689), 0), 0, Tag1 ("Location", 33)), 0); Tag1 (("msg", 836), (0, 0, 0, 1, ((Tag3 ((("loc", 818)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -288), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -287), 0), 100000000, 0, -286)], (0)), 100000000, 0, -285)), 0, 0, 0, 0, (("parsing/location.mli", 188, 6786, 6786), ("parsing/location.mli", 188, 6786, 6827), 0), 0, 0, 0, Tag1 ("Location", 34)), 1, 0); (("msg", 837), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -284)], (0)), 100000000, 0, -283), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format4"), [((("a")), 100000000, 0, -278); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -280); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -281); (Tag3 ((("msg", 836)), 0, (0)), 100000000, 0, -282)], (0)), 100000000, 0, -279), ((("a")), 100000000, 0, -278), 0), 100000000, 0, -277), 0), 100000000, 0, -276), 0, (("parsing/location.mli", 190, 6829, 6829), ("parsing/location.mli", 190, 6829, 6895), 0), 0, Tag1 ("Location", 35)), 0); Tag1 (("report_kind", 838), (0, 0, Tag1 ([(("Report_error", 734), (0), 0, (("parsing/location.mli", 193, 6916, 6918), ("parsing/location.mli", 193, 6916, 6932), 0), 0, Tag1 ("Location", 37)); (("Report_warning", 735), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -272)]), 0, (("parsing/location.mli", 194, 6933, 6935), ("parsing/location.mli", 194, 6933, 6961), 0), 0, Tag1 ("Location", 38)); (("Report_warning_as_error", 736), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -273)]), 0, (("parsing/location.mli", 195, 6962, 6964), ("parsing/location.mli", 195, 6962, 6999), 0), 0, Tag1 ("Location", 39)); (("Report_alert", 737), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -274)]), 0, (("parsing/location.mli", 196, 7000, 7002), ("parsing/location.mli", 196, 7000, 7026), 0), 0, Tag1 ("Location", 40)); (("Report_alert_as_error", 738), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -275)]), 0, (("parsing/location.mli", 197, 7027, 7029), ("parsing/location.mli", 197, 7027, 7062), 0), 0, Tag1 ("Location", 41))], 0), 1, 0, 0, 0, 0, 0, (("parsing/location.mli", 192, 6897, 6897), ("parsing/location.mli", 197, 7027, 7062), 0), 0, 0, 0, Tag1 ("Location", 36)), 1, 0); Tag1 (("report", 839), (0, 0, [[(("kind", 740), 0, (Tag3 ((("report_kind", 838)), 0, (0)), 100000000, 0, -268), (("parsing/location.mli", 200, 7080, 7082), ("parsing/location.mli", 200, 7080, 7101), 0), 0, Tag1 ("Location", 43)); (("main", 741), 0, (Tag3 ((("msg", 836)), 0, (0)), 100000000, 0, -269), (("parsing/location.mli", 201, 7102, 7104), ("parsing/location.mli", 201, 7102, 7115), 0), 0, Tag1 ("Location", 44)); (("sub", 742), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("msg", 836)), 0, (0)), 100000000, 0, -271)], (0)), 100000000, 0, -270), (("parsing/location.mli", 202, 7116, 7118), ("parsing/location.mli", 202, 7116, 7133), 0), 0, Tag1 ("Location", 45))]], 1, 0, 0, 0, 0, 0, (("parsing/location.mli", 199, 7064, 7064), ("parsing/location.mli", 203, 7134, 7135), 0), 0, 0, 0, Tag1 ("Location", 42)), 1, 0); Tag1 (("report_printer", 840), (0, 0, [[(("pp", 744), 0, (Tag1 (0, (Tag3 ((("report_printer", 840)), 0, (0)), 100000000, 0, -199), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -198), (Tag1 (0, (Tag3 ((("report", 839)), 0, (0)), 100000000, 0, -197), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -196), 0), 100000000, 0, -195), 0), 100000000, 0, -194), 0), 100000000, 0, -193), (("parsing/location.mli", 207, 7185, 7187), ("parsing/location.mli", 208, 7210, 7249), 0), 0, Tag1 ("Location", 47)); (("pp_report_kind", 745), 0, (Tag1 (0, (Tag3 ((("report_printer", 840)), 0, (0)), 100000000, 0, -208), (Tag1 (0, (Tag3 ((("report", 839)), 0, (0)), 100000000, 0, -207), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -206), (Tag1 (0, (Tag3 ((("report_kind", 838)), 0, (0)), 100000000, 0, -205), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -204), 0), 100000000, 0, -203), 0), 100000000, 0, -202), 0), 100000000, 0, -201), 0), 100000000, 0, -200), (("parsing/location.mli", 210, 7251, 7253), ("parsing/location.mli", 211, 7298, 7342), 0), 0, Tag1 ("Location", 48)); (("pp_main_loc", 746), 0, (Tag1 (0, (Tag3 ((("report_printer", 840)), 0, (0)), 100000000, 0, -217), (Tag1 (0, (Tag3 ((("report", 839)), 0, (0)), 100000000, 0, -216), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -215), (Tag1 (0, (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -214), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -213), 0), 100000000, 0, -212), 0), 100000000, 0, -211), 0), 100000000, 0, -210), 0), 100000000, 0, -209), (("parsing/location.mli", 212, 7343, 7345), ("parsing/location.mli", 213, 7387, 7421), 0), 0, Tag1 ("Location", 49)); (("pp_main_txt", 747), 0, (Tag1 (0, (Tag3 ((("report_printer", 840)), 0, (0)), 100000000, 0, -228), (Tag1 (0, (Tag3 ((("report", 839)), 0, (0)), 100000000, 0, -227), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -226), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -225), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -224), 0), 100000000, 0, -223), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -222), 0), 100000000, 0, -221), 0), 100000000, 0, -220), 0), 100000000, 0, -219), 0), 100000000, 0, -218), (("parsing/location.mli", 214, 7422, 7424), ("parsing/location.mli", 215, 7466, 7525), 0), 0, Tag1 ("Location", 50)); (("pp_submsgs", 748), 0, (Tag1 (0, (Tag3 ((("report_printer", 840)), 0, (0)), 100000000, 0, -238), (Tag1 (0, (Tag3 ((("report", 839)), 0, (0)), 100000000, 0, -237), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -236), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("msg", 836)), 0, (0)), 100000000, 0, -235)], (0)), 100000000, 0, -234), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -233), 0), 100000000, 0, -232), 0), 100000000, 0, -231), 0), 100000000, 0, -230), 0), 100000000, 0, -229), (("parsing/location.mli", 216, 7526, 7528), ("parsing/location.mli", 217, 7569, 7610), 0), 0, Tag1 ("Location", 51)); (("pp_submsg", 749), 0, (Tag1 (0, (Tag3 ((("report_printer", 840)), 0, (0)), 100000000, 0, -247), (Tag1 (0, (Tag3 ((("report", 839)), 0, (0)), 100000000, 0, -246), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -245), (Tag1 (0, (Tag3 ((("msg", 836)), 0, (0)), 100000000, 0, -244), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -243), 0), 100000000, 0, -242), 0), 100000000, 0, -241), 0), 100000000, 0, -240), 0), 100000000, 0, -239), (("parsing/location.mli", 218, 7611, 7613), ("parsing/location.mli", 219, 7653, 7689), 0), 0, Tag1 ("Location", 52)); (("pp_submsg_loc", 750), 0, (Tag1 (0, (Tag3 ((("report_printer", 840)), 0, (0)), 100000000, 0, -256), (Tag1 (0, (Tag3 ((("report", 839)), 0, (0)), 100000000, 0, -255), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -254), (Tag1 (0, (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -253), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -252), 0), 100000000, 0, -251), 0), 100000000, 0, -250), 0), 100000000, 0, -249), 0), 100000000, 0, -248), (("parsing/location.mli", 220, 7690, 7692), ("parsing/location.mli", 221, 7736, 7770), 0), 0, Tag1 ("Location", 53)); (("pp_submsg_txt", 751), 0, (Tag1 (0, (Tag3 ((("report_printer", 840)), 0, (0)), 100000000, 0, -267), (Tag1 (0, (Tag3 ((("report", 839)), 0, (0)), 100000000, 0, -266), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -265), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -264), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -263), 0), 100000000, 0, -262), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -261), 0), 100000000, 0, -260), 0), 100000000, 0, -259), 0), 100000000, 0, -258), 0), 100000000, 0, -257), (("parsing/location.mli", 222, 7771, 7773), ("parsing/location.mli", 223, 7817, 7876), 0), 0, Tag1 ("Location", 54))]], 1, 0, 0, 0, 0, 0, (("parsing/location.mli", 205, 7137, 7137), ("parsing/location.mli", 224, 7877, 7878), 0), 0, 0, 0, Tag1 ("Location", 46)), 1, 0); (("batch_mode_printer", 841), ((Tag3 ((("report_printer", 840)), 0, (0)), 100000000, 0, -192), 0, (("parsing/location.mli", 232, 8087, 8087), ("parsing/location.mli", 232, 8087, 8125), 0), 0, Tag1 ("Location", 55)), 0); (("terminfo_toplevel_printer", 842), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -191), (Tag3 ((("report_printer", 840)), 0, (0)), 100000000, 0, -190), 0), 100000000, 0, -189), 0, (("parsing/location.mli", 234, 8127, 8127), ("parsing/location.mli", 234, 8127, 8189), 0), 0, Tag1 ("Location", 56)), 0); (("best_toplevel_printer", 843), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -188), (Tag3 ((("report_printer", 840)), 0, (0)), 100000000, 0, -187), 0), 100000000, 0, -186), 0, (("parsing/location.mli", 236, 8191, 8191), ("parsing/location.mli", 236, 8191, 8240), 0), 0, Tag1 ("Location", 57)), 0); (("print_report", 844), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -185), (Tag1 (0, (Tag3 ((("report", 839)), 0, (0)), 100000000, 0, -184), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -183), 0), 100000000, 0, -182), 0), 100000000, 0, -181), 0, (("parsing/location.mli", 241, 8347, 8347), ("parsing/location.mli", 241, 8347, 8392), 0), 0, Tag1 ("Location", 58)), 0); (("report_printer", 845), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -180), (Tag3 ((("report_printer", 840)), 0, (0)), 100000000, 0, -179), 0), 100000000, 0, -178)], (0)), 100000000, 0, -177), 0, (("parsing/location.mli", 244, 8437, 8437), ("parsing/location.mli", 244, 8437, 8485), 0), 0, Tag1 ("Location", 59)), 0); (("default_report_printer", 846), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -176), (Tag3 ((("report_printer", 840)), 0, (0)), 100000000, 0, -175), 0), 100000000, 0, -174), 0, (("parsing/location.mli", 251, 8745, 8745), ("parsing/location.mli", 251, 8745, 8795), 0), 0, Tag1 ("Location", 60)), 0); (("report_warning", 847), ((Tag1 (0, (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -173), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Warnings")), "t"), 0, (0)), 100000000, 0, -172), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("report", 839)), 0, (0)), 100000000, 0, -171)], (0)), 100000000, 0, -170), 0), 100000000, 0, -169), 0), 100000000, 0, -168), 0, (("parsing/location.mli", 259, 8932, 8932), ("parsing/location.mli", 259, 8932, 8984), 0), 0, Tag1 ("Location", 61)), 0); (("warning_reporter", 848), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag1 (0, (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -167), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Warnings")), "t"), 0, (0)), 100000000, 0, -166), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("report", 839)), 0, (0)), 100000000, 0, -165)], (0)), 100000000, 0, -164), 0), 100000000, 0, -163), 0), 100000000, 0, -162)], (0)), 100000000, 0, -161), 0, (("parsing/location.mli", 263, 9111, 9111), ("parsing/location.mli", 263, 9111, 9171), 0), 0, Tag1 ("Location", 62)), 0); (("default_warning_reporter", 849), ((Tag1 (0, (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -160), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Warnings")), "t"), 0, (0)), 100000000, 0, -159), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("report", 839)), 0, (0)), 100000000, 0, -158)], (0)), 100000000, 0, -157), 0), 100000000, 0, -156), 0), 100000000, 0, -155), 0, (("parsing/location.mli", 266, 9212, 9212), ("parsing/location.mli", 266, 9212, 9274), 0), 0, Tag1 ("Location", 63)), 0); (("formatter_for_warnings", 850), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -154)], (0)), 100000000, 0, -153), 0, (("parsing/location.mli", 271, 9357, 9357), ("parsing/location.mli", 271, 9357, 9399), 0), 0, Tag1 ("Location", 64)), 0); (("print_warning", 851), ((Tag1 (0, (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -152), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -151), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Warnings")), "t"), 0, (0)), 100000000, 0, -150), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -149), 0), 100000000, 0, -148), 0), 100000000, 0, -147), 0), 100000000, 0, -146), 0, (("parsing/location.mli", 273, 9401, 9401), ("parsing/location.mli", 273, 9401, 9456), 0), 0, Tag1 ("Location", 65)), 0); (("prerr_warning", 852), ((Tag1 (0, (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -145), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Warnings")), "t"), 0, (0)), 100000000, 0, -144), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -143), 0), 100000000, 0, -142), 0), 100000000, 0, -141), 0, (("parsing/location.mli", 277, 9557, 9557), ("parsing/location.mli", 277, 9557, 9599), 0), 0, Tag1 ("Location", 66)), 0); (("report_alert", 853), ((Tag1 (0, (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -140), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Warnings")), "alert"), 0, (0)), 100000000, 0, -139), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("report", 839)), 0, (0)), 100000000, 0, -138)], (0)), 100000000, 0, -137), 0), 100000000, 0, -136), 0), 100000000, 0, -135), 0, (("parsing/location.mli", 285, 9773, 9773), ("parsing/location.mli", 285, 9773, 9827), 0), 0, Tag1 ("Location", 67)), 0); (("alert_reporter", 854), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag1 (0, (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -134), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Warnings")), "alert"), 0, (0)), 100000000, 0, -133), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("report", 839)), 0, (0)), 100000000, 0, -132)], (0)), 100000000, 0, -131), 0), 100000000, 0, -130), 0), 100000000, 0, -129)], (0)), 100000000, 0, -128), 0, (("parsing/location.mli", 289, 9948, 9948), ("parsing/location.mli", 289, 9948, 10010), 0), 0, Tag1 ("Location", 68)), 0); (("default_alert_reporter", 855), ((Tag1 (0, (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -127), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Warnings")), "alert"), 0, (0)), 100000000, 0, -126), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("report", 839)), 0, (0)), 100000000, 0, -125)], (0)), 100000000, 0, -124), 0), 100000000, 0, -123), 0), 100000000, 0, -122), 0, (("parsing/location.mli", 292, 10049, 10049), ("parsing/location.mli", 292, 10049, 10113), 0), 0, Tag1 ("Location", 69)), 0); (("print_alert", 856), ((Tag1 (0, (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -121), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -120), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Warnings")), "alert"), 0, (0)), 100000000, 0, -119), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -118), 0), 100000000, 0, -117), 0), 100000000, 0, -116), 0), 100000000, 0, -115), 0, (("parsing/location.mli", 297, 10192, 10192), ("parsing/location.mli", 297, 10192, 10249), 0), 0, Tag1 ("Location", 70)), 0); (("prerr_alert", 857), ((Tag1 (0, (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -114), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Warnings")), "alert"), 0, (0)), 100000000, 0, -113), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -112), 0), 100000000, 0, -111), 0), 100000000, 0, -110), 0, (("parsing/location.mli", 301, 10347, 10347), ("parsing/location.mli", 301, 10347, 10391), 0), 0, Tag1 ("Location", 71)), 0); (("deprecated", 858), ((Tag1 (Tag1 ("def"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -109)], (0)), 100000000, 0, -108), (Tag1 (Tag1 ("use"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -107)], (0)), 100000000, 0, -106), (Tag1 (0, (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -105), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -104), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -103), 0), 100000000, 0, -102), 0), 100000000, 0, -101), 0), 100000000, 0, -100), 0), 100000000, 0, -99), 0, (("parsing/location.mli", 305, 10482, 10482), ("parsing/location.mli", 305, 10482, 10537), 0), 0, Tag1 ("Location", 72)), 0); (("alert", 859), ((Tag1 (Tag1 ("def"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -98)], (0)), 100000000, 0, -97), (Tag1 (Tag1 ("use"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -96)], (0)), 100000000, 0, -95), (Tag1 (("kind"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -94), (Tag1 (0, (Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -93), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -92), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -91), 0), 100000000, 0, -90), 0), 100000000, 0, -89), 0), 100000000, 0, -88), 0), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("parsing/location.mli", 308, 10574, 10574), ("parsing/location.mli", 308, 10574, 10639), 0), 0, Tag1 ("Location", 73)), 0); (("auto_include_alert", 860), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -85), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -84), 0), 100000000, 0, -83), 0, (("parsing/location.mli", 311, 10675, 10675), ("parsing/location.mli", 311, 10675, 10713), 0), 0, Tag1 ("Location", 74)), 0); (("deprecated_script_alert", 861), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -82), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0, (("parsing/location.mli", 315, 10801, 10801), ("parsing/location.mli", 315, 10801, 10844), 0), 0, Tag1 ("Location", 75)), 0); Tag1 (("error", 862), (0, 0, 0, 1, ((Tag3 ((("report", 839)), 0, (0)), 100000000, 0, -79)), 0, 0, 0, 0, (("parsing/location.mli", 321, 11004, 11004), ("parsing/location.mli", 321, 11004, 11023), 0), 0, 0, 0, Tag1 ("Location", 76)), 1, 0); (("error", 863), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -78)], (0)), 100000000, 0, -77), (Tag1 (Tag1 ("sub"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("msg", 836)), 0, (0)), 100000000, 0, -76)], (0)), 100000000, 0, -75)], (0)), 100000000, 0, -74), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -73), (Tag3 ((("error", 862)), 0, (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), 0), 100000000, 0, -69), 0, (("parsing/location.mli", 324, 11101, 11101), ("parsing/location.mli", 324, 11101, 11154), 0), 0, Tag1 ("Location", 77)), 0); (("errorf", 864), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -68)], (0)), 100000000, 0, -67), (Tag1 (Tag1 ("sub"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("msg", 836)), 0, (0)), 100000000, 0, -66)], (0)), 100000000, 0, -65)], (0)), 100000000, 0, -64), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format4"), [((("a")), 100000000, 0, -59); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -61); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -62); (Tag3 ((("error", 862)), 0, (0)), 100000000, 0, -63)], (0)), 100000000, 0, -60), ((("a")), 100000000, 0, -59), 0), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("parsing/location.mli", 326, 11156, 11156), ("parsing/location.mli", 327, 11195, 11246), 0), 0, Tag1 ("Location", 78)), 0); (("error_of_printer", 865), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -55)], (0)), 100000000, 0, -54), (Tag1 (Tag1 ("sub"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("msg", 836)), 0, (0)), 100000000, 0, -53)], (0)), 100000000, 0, -52)], (0)), 100000000, 0, -51), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -50), (Tag1 (0, ((("a")), 100000000, 0, -46), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -49), 0), 100000000, 0, -48), 0), 100000000, 0, -47), (Tag1 (0, ((("a")), 100000000, 0, -46), (Tag3 ((("error", 862)), 0, (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("parsing/location.mli", 329, 11248, 11248), ("parsing/location.mli", 330, 11297, 11339), 0), 0, Tag1 ("Location", 79)), 0); (("error_of_printer_file", 866), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -40), (Tag1 (0, ((("a")), 100000000, 0, -36), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0), 100000000, 0, -37), (Tag1 (0, ((("a")), 100000000, 0, -36), (Tag3 ((("error", 862)), 0, (0)), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0, (("parsing/location.mli", 332, 11341, 11341), ("parsing/location.mli", 332, 11341, 11408), 0), 0, Tag1 ("Location", 80)), 0); (("register_error_of_exn", 867), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -32), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("error", 862)), 0, (0)), 100000000, 0, -31)], (0)), 100000000, 0, -30), 0), 100000000, 0, -29), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("parsing/location.mli", 337, 11476, 11476), ("parsing/location.mli", 337, 11476, 11532), 0), 0, Tag1 ("Location", 81)), 0); (("error_of_exn", 868), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -26), (Tag3 ((Tag3 ("option", 10)), [(Tag8 (([("Already_displayed", (0)); ("Ok", (((Tag3 ((("error", 862)), 0, (0)), 100000000, 0, -25))))], (0, 100000000, 0, -24), 1, 0, 0)), 100000000, 0, -23)], (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("parsing/location.mli", 345, 11889, 11889), ("parsing/location.mli", 345, 11889, 11958), 0), 0, Tag1 ("Location", 82)), 0); Tag2 (("Error", 869), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((("error", 862)), 0, (0)), 100000000, 0, -20)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Location", 83)), 2, 0); Tag2 (("Already_displayed_error", 870), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Location", 84)), 2, 0); (("raise_errorf", 871), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 807)), 0, (0)), 100000000, 0, -19)], (0)), 100000000, 0, -18), (Tag1 (Tag1 ("sub"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("msg", 836)), 0, (0)), 100000000, 0, -17)], (0)), 100000000, 0, -16)], (0)), 100000000, 0, -15), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format4"), [((("a")), 100000000, 0, -10); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -12); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -13); ((("b")), 100000000, 0, -14)], (0)), 100000000, 0, -11), ((("a")), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("parsing/location.mli", 355, 12282, 12282), ("parsing/location.mli", 356, 12327, 12375), 0), 0, Tag1 ("Location", 85)), 0); (("report_exception", 872), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("parsing/location.mli", 358, 12377, 12377), ("parsing/location.mli", 358, 12377, 12423), 0), 0, Tag1 ("Location", 86)), 0)], "Location", [("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val report_exception : Format.formatter -> exn -> unit
