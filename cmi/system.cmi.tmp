type unix_path = string
type file_kind = FileDir of unix_path * string | FileRegular of string
val ( // ) : unix_path -> string -> unix_path
val exists_dir : unix_path -> bool
val exclude_directory : unix_path -> unit
val process_directory : (file_kind -> unit) -> unix_path -> unit
val process_subdirectories :
  (unix_path -> string -> unit) -> unix_path -> unit
val all_subdirs :
  unix_path:string -> (CUnix.physical_path * string list) list
val is_in_path : CUnix.load_path -> string -> bool
val is_in_system_path : string -> bool
val where_in_path :
  ?warn:bool -> CUnix.load_path -> string -> CUnix.physical_path * string
val find_file_in_path :
  ?warn:bool -> CUnix.load_path -> string -> CUnix.physical_path * string
val all_in_path :
  (CUnix.physical_path * 'a) list -> string -> ('a * string) list
val trust_file_cache : bool ref
val file_exists_respecting_case : string -> string -> bool
type magic_number_error = {
  filename : string;
  actual : int32;
  expected : int32;
}
exception Bad_magic_number of magic_number_error
exception Bad_version_number of magic_number_error
val with_magic_number_check : ('a -> 'b) -> 'a -> 'b
val input_int32 : in_channel -> int32
val input_int64 : in_channel -> int64
val output_int32 : out_channel -> int32 -> unit
val output_int64 : out_channel -> int64 -> unit
val marshal_out : out_channel -> 'a -> unit
val marshal_in : string -> in_channel -> 'a
val check_caml_version : caml:string -> file:string -> unit
type time
type duration
val get_time : unit -> time
val time_difference : time -> time -> float
val duration_between : start:time -> stop:time -> duration
val duration_add : duration -> duration -> duration
val duration_real : duration -> float
val fmt_time_difference : time -> time -> Pp.t
val fmt_duration : duration -> Pp.t
type 'a transaction_result =
    ('a * duration, Exninfo.iexn * duration) Result.t
val measure_duration : ('a -> 'b) -> 'a -> 'b transaction_result
val fmt_transaction_result : 'a transaction_result -> Pp.t
("DEBUG:rule", [Tag1 (("unix_path", 427), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -177)), 0, 0, 0, 0, (("lib/system.mli", 15, 745, 745), ("lib/system.mli", 15, 745, 768), 0), 0, 0, 0, Tag1 ("System", 0)), 1, 0); Tag1 (("file_kind", 428), (0, 0, Tag1 ([(("FileDir", 271), ([(Tag3 ((("unix_path", 427)), 0, (0)), 100000000, 0, -174); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -175)]), 0, (("lib/system.mli", 18, 832, 834), ("lib/system.mli", 18, 832, 889), 0), 0, Tag1 ("System", 2)); (("FileRegular", 272), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -176)]), 0, (("lib/system.mli", 19, 890, 892), ("lib/system.mli", 19, 890, 915), 0), 0, Tag1 ("System", 3))], 0), 1, 0, 0, 0, 0, 0, (("lib/system.mli", 17, 815, 815), ("lib/system.mli", 19, 890, 915), 0), 0, 0, 0, Tag1 ("System", 1)), 1, 0); (("//", 429), ((Tag1 (0, (Tag3 ((("unix_path", 427)), 0, (0)), 100000000, 0, -173), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -172), (Tag3 ((("unix_path", 427)), 0, (0)), 100000000, 0, -171), 0), 100000000, 0, -170), 0), 100000000, 0, -169), 0, (("lib/system.mli", 21, 940, 940), ("lib/system.mli", 21, 940, 983), 0), 0, Tag1 ("System", 4)), 0); (("exists_dir", 430), ((Tag1 (0, (Tag3 ((("unix_path", 427)), 0, (0)), 100000000, 0, -168), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -167), 0), 100000000, 0, -166), 0, (("lib/system.mli", 23, 985, 985), ("lib/system.mli", 23, 985, 1019), 0), 0, Tag1 ("System", 5)), 0); (("exclude_directory", 431), ((Tag1 (0, (Tag3 ((("unix_path", 427)), 0, (0)), 100000000, 0, -165), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -164), 0), 100000000, 0, -163), 0, (("lib/system.mli", 28, 1110, 1110), ("lib/system.mli", 28, 1110, 1151), 0), 0, Tag1 ("System", 6)), 0); (("process_directory", 432), ((Tag1 (0, (Tag1 (0, (Tag3 ((("file_kind", 428)), 0, (0)), 100000000, 0, -162), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -161), 0), 100000000, 0, -160), (Tag1 (0, (Tag3 ((("unix_path", 427)), 0, (0)), 100000000, 0, -159), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -158), 0), 100000000, 0, -157), 0), 100000000, 0, -156), 0, (("lib/system.mli", 34, 1336, 1336), ("lib/system.mli", 34, 1336, 1400), 0), 0, Tag1 ("System", 7)), 0); (("process_subdirectories", 433), ((Tag1 (0, (Tag1 (0, (Tag3 ((("unix_path", 427)), 0, (0)), 100000000, 0, -155), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -154), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -153), 0), 100000000, 0, -152), 0), 100000000, 0, -151), (Tag1 (0, (Tag3 ((("unix_path", 427)), 0, (0)), 100000000, 0, -150), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -149), 0), 100000000, 0, -148), 0), 100000000, 0, -147), 0, (("lib/system.mli", 40, 1611, 1611), ("lib/system.mli", 40, 1611, 1690), 0), 0, Tag1 ("System", 8)), 0); (("all_subdirs", 434), ((Tag1 (("unix_path"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -146), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("CUnix")), "physical_path"), 0, (0)), 100000000, 0, -143); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -145)], (0)), 100000000, 0, -144)]), 100000000, 0, -142)], (0)), 100000000, 0, -141), 0), 100000000, 0, -140), 0, (("lib/system.mli", 48, 1913, 1913), ("lib/system.mli", 48, 1913, 1991), 0), 0, Tag1 ("System", 9)), 0); (("is_in_path", 435), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CUnix")), "load_path"), 0, (0)), 100000000, 0, -139), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -138), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -137), 0), 100000000, 0, -136), 0), 100000000, 0, -135), 0, (("lib/system.mli", 49, 1992, 1992), ("lib/system.mli", 49, 1992, 2042), 0), 0, Tag1 ("System", 10)), 0); (("is_in_system_path", 436), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -134), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -133), 0), 100000000, 0, -132), 0, (("lib/system.mli", 50, 2043, 2043), ("lib/system.mli", 50, 2043, 2081), 0), 0, Tag1 ("System", 11)), 0); (("where_in_path", 437), ((Tag1 (Tag1 ("warn"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -131)], (0)), 100000000, 0, -130), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CUnix")), "load_path"), 0, (0)), 100000000, 0, -129), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -128), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("CUnix")), "physical_path"), 0, (0)), 100000000, 0, -126); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -127)]), 100000000, 0, -125), 0), 100000000, 0, -124), 0), 100000000, 0, -123), 0), 100000000, 0, -122), 0, (("lib/system.mli", 51, 2082, 2082), ("lib/system.mli", 52, 2102, 2175), 0), 0, Tag1 ("System", 12)), 0); (("find_file_in_path", 438), ((Tag1 (Tag1 ("warn"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -121)], (0)), 100000000, 0, -120), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CUnix")), "load_path"), 0, (0)), 100000000, 0, -119), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -118), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("CUnix")), "physical_path"), 0, (0)), 100000000, 0, -116); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -117)]), 100000000, 0, -115), 0), 100000000, 0, -114), 0), 100000000, 0, -113), 0), 100000000, 0, -112), 0, (("lib/system.mli", 61, 2560, 2560), ("lib/system.mli", 62, 2584, 2657), 0), 0, Tag1 ("System", 13)), 0); (("all_in_path", 439), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("CUnix")), "physical_path"), 0, (0)), 100000000, 0, -111); ((("a")), 100000000, 0, -106)]), 100000000, 0, -110)], (0)), 100000000, 0, -109), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -108), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([((("a")), 100000000, 0, -106); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -107)]), 100000000, 0, -105)], (0)), 100000000, 0, -104), 0), 100000000, 0, -103), 0), 100000000, 0, -102), 0, (("lib/system.mli", 67, 2862, 2862), ("lib/system.mli", 68, 2880, 2945), 0), 0, Tag1 ("System", 14)), 0); (("trust_file_cache", 440), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -101)], (0)), 100000000, 0, -100), 0, (("lib/system.mli", 70, 2947, 2947), ("lib/system.mli", 70, 2947, 2978), 0), 0, Tag1 ("System", 15)), 0); (("file_exists_respecting_case", 441), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -99), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -98), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -97), 0), 100000000, 0, -96), 0), 100000000, 0, -95), 0, (("lib/system.mli", 76, 3216, 3216), ("lib/system.mli", 76, 3216, 3274), 0), 0, Tag1 ("System", 16)), 0); Tag1 (("magic_number_error", 442), (0, 0, [[(("filename", 304), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -92), (("lib/system.mli", 84, 3541, 3568), ("lib/system.mli", 84, 3541, 3585), 0), 0, Tag1 ("System", 18)); (("actual", 305), 0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -93), (("lib/system.mli", 84, 3541, 3586), ("lib/system.mli", 84, 3541, 3600), 0), 0, Tag1 ("System", 19)); (("expected", 306), 0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -94), (("lib/system.mli", 84, 3541, 3601), ("lib/system.mli", 84, 3541, 3616), 0), 0, Tag1 ("System", 20))]], 1, 0, 0, 0, 0, 0, (("lib/system.mli", 84, 3541, 3541), ("lib/system.mli", 84, 3541, 3617), 0), 0, 0, 0, Tag1 ("System", 17)), 1, 0); Tag2 (("Bad_magic_number", 443), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((("magic_number_error", 442)), 0, (0)), 100000000, 0, -91)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("System", 21)), 2, 0); Tag2 (("Bad_version_number", 444), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((("magic_number_error", 442)), 0, (0)), 100000000, 0, -90)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("System", 22)), 2, 0); (("with_magic_number_check", 445), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -88), ((("b")), 100000000, 0, -87), 0), 100000000, 0, -89), (Tag1 (0, ((("a")), 100000000, 0, -88), ((("b")), 100000000, 0, -87), 0), 100000000, 0, -86), 0), 100000000, 0, -85), 0, (("lib/system.mli", 88, 3719, 3719), ("lib/system.mli", 88, 3719, 3771), 0), 0, Tag1 ("System", 23)), 0); (("input_int32", 446), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "in_channel"), 0, (0)), 100000000, 0, -84), (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -83), 0), 100000000, 0, -82), 0, (("lib/system.mli", 92, 3853, 3853), ("lib/system.mli", 92, 3853, 3890), 0), 0, Tag1 ("System", 24)), 0); (("input_int64", 447), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "in_channel"), 0, (0)), 100000000, 0, -81), (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -80), 0), 100000000, 0, -79), 0, (("lib/system.mli", 94, 3892, 3892), ("lib/system.mli", 94, 3892, 3929), 0), 0, Tag1 ("System", 25)), 0); (("output_int32", 448), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -78), (Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -77), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -76), 0), 100000000, 0, -75), 0), 100000000, 0, -74), 0, (("lib/system.mli", 96, 3931, 3931), ("lib/system.mli", 96, 3931, 3978), 0), 0, Tag1 ("System", 26)), 0); (("output_int64", 449), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -73), (Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -72), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -71), 0), 100000000, 0, -70), 0), 100000000, 0, -69), 0, (("lib/system.mli", 98, 3980, 3980), ("lib/system.mli", 98, 3980, 4027), 0), 0, Tag1 ("System", 27)), 0); (("marshal_out", 450), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -68), (Tag1 (0, ((("a")), 100000000, 0, -67), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0, (("lib/system.mli", 103, 4134, 4134), ("lib/system.mli", 103, 4134, 4177), 0), 0, Tag1 ("System", 28)), 0); (("marshal_in", 451), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -63), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "in_channel"), 0, (0)), 100000000, 0, -62), ((("a")), 100000000, 0, -61), 0), 100000000, 0, -60), 0), 100000000, 0, -59), 0, (("lib/system.mli", 104, 4178, 4178), ("lib/system.mli", 104, 4178, 4221), 0), 0, Tag1 ("System", 29)), 0); (("check_caml_version", 452), ((Tag1 (("caml"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -58), (Tag1 (("file"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -57), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -56), 0), 100000000, 0, -55), 0), 100000000, 0, -54), 0, (("lib/system.mli", 106, 4223, 4223), ("lib/system.mli", 106, 4223, 4282), 0), 0, Tag1 ("System", 30)), 0); Tag1 (("time", 453), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/system.mli", 110, 4309, 4309), ("lib/system.mli", 110, 4309, 4318), 0), 0, 0, 0, Tag1 ("System", 31)), 1, 0); Tag1 (("duration", 454), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/system.mli", 111, 4319, 4319), ("lib/system.mli", 111, 4319, 4332), 0), 0, 0, 0, Tag1 ("System", 32)), 1, 0); (("get_time", 455), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -53), (Tag3 ((("time", 453)), 0, (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("lib/system.mli", 113, 4334, 4334), ("lib/system.mli", 113, 4334, 4361), 0), 0, Tag1 ("System", 33)), 0); (("time_difference", 456), ((Tag1 (0, (Tag3 ((("time", 453)), 0, (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 ((("time", 453)), 0, (0)), 100000000, 0, -49), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("lib/system.mli", 114, 4362, 4362), ("lib/system.mli", 114, 4362, 4405), 0), 0, Tag1 ("System", 34)), 0); (("duration_between", 457), ((Tag1 (("start"), (Tag3 ((("time", 453)), 0, (0)), 100000000, 0, -45), (Tag1 (("stop"), (Tag3 ((("time", 453)), 0, (0)), 100000000, 0, -44), (Tag3 ((("duration", 454)), 0, (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("lib/system.mli", 116, 4425, 4425), ("lib/system.mli", 116, 4425, 4483), 0), 0, Tag1 ("System", 35)), 0); (("duration_add", 458), ((Tag1 (0, (Tag3 ((("duration", 454)), 0, (0)), 100000000, 0, -40), (Tag1 (0, (Tag3 ((("duration", 454)), 0, (0)), 100000000, 0, -39), (Tag3 ((("duration", 454)), 0, (0)), 100000000, 0, -38), 0), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("lib/system.mli", 117, 4484, 4484), ("lib/system.mli", 117, 4484, 4535), 0), 0, Tag1 ("System", 36)), 0); (("duration_real", 459), ((Tag1 (0, (Tag3 ((("duration", 454)), 0, (0)), 100000000, 0, -35), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -34), 0), 100000000, 0, -33), 0, (("lib/system.mli", 118, 4536, 4536), ("lib/system.mli", 118, 4536, 4573), 0), 0, Tag1 ("System", 37)), 0); (("fmt_time_difference", 460), ((Tag1 (0, (Tag3 ((("time", 453)), 0, (0)), 100000000, 0, -32), (Tag1 (0, (Tag3 ((("time", 453)), 0, (0)), 100000000, 0, -31), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("lib/system.mli", 120, 4575, 4575), ("lib/system.mli", 120, 4575, 4621), 0), 0, Tag1 ("System", 38)), 0); (("fmt_duration", 461), ((Tag1 (0, (Tag3 ((("duration", 454)), 0, (0)), 100000000, 0, -27), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0, (("lib/system.mli", 121, 4622, 4622), ("lib/system.mli", 121, 4622, 4657), 0), 0, Tag1 ("System", 39)), 0); Tag1 (("transaction_result", 462), ([((("a")), 100000000, 0, -20)], 1, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Result"), "t"), [(Tag2 ([((("a")), 100000000, 0, -20); (Tag3 ((("duration", 454)), 0, (0)), 100000000, 0, -21)]), 100000000, 0, -19); (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Exninfo")), "iexn"), 0, (0)), 100000000, 0, -23); (Tag3 ((("duration", 454)), 0, (0)), 100000000, 0, -24)]), 100000000, 0, -22)], (0)), 100000000, 0, -18)), [25], [0], 0, 0, (("lib/system.mli", 123, 4659, 4659), ("lib/system.mli", 123, 4659, 4741), 0), 0, 0, 0, Tag1 ("System", 40)), 1, 0); (("measure_duration", 463), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -16), ((("b")), 100000000, 0, -15), 0), 100000000, 0, -17), (Tag1 (0, ((("a")), 100000000, 0, -16), (Tag3 ((("transaction_result", 462)), [((("b")), 100000000, 0, -15)], (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("lib/system.mli", 124, 4742, 4742), ("lib/system.mli", 124, 4742, 4806), 0), 0, Tag1 ("System", 41)), 0); (("fmt_transaction_result", 464), ((Tag1 (0, (Tag3 ((("transaction_result", 462)), [((("a")), 100000000, 0, -11)], (0)), 100000000, 0, -10), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("lib/system.mli", 125, 4807, 4807), ("lib/system.mli", 125, 4807, 4865), 0), 0, Tag1 ("System", 42)), 0); (("get_toplevel_path", 465), ((Tag1 (Tag1 ("byte"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -7)], (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("lib/system.mli", 143, 5624, 5624), ("lib/system.mli", 143, 5624, 5678), 0), 0, Tag1 ("System", 43)), 0)], "System", [("System", ("q\188\133!\021\022\187\170z\001\015I\244\181\2488")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Result", ("\247h\157\021\029a\144\199*\186Z\162\225\241\160>")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu"))], [(0)])
val get_toplevel_path : ?byte:bool -> string -> string
