val implementation : Lexing.lexbuf -> Parsetree.structure
val interface : Lexing.lexbuf -> Parsetree.signature
val toplevel_phrase : Lexing.lexbuf -> Parsetree.toplevel_phrase
val use_file : Lexing.lexbuf -> Parsetree.toplevel_phrase list
val core_type : Lexing.lexbuf -> Parsetree.core_type
val expression : Lexing.lexbuf -> Parsetree.expression
val pattern : Lexing.lexbuf -> Parsetree.pattern
val module_type : Lexing.lexbuf -> Parsetree.module_type
val module_expr : Lexing.lexbuf -> Parsetree.module_expr
val longident : Lexing.lexbuf -> Longident.t
val val_ident : Lexing.lexbuf -> Longident.t
val constr_ident : Lexing.lexbuf -> Longident.t
val simple_module_path : Lexing.lexbuf -> Longident.t
val extended_module_path : Lexing.lexbuf -> Longident.t
("DEBUG:rule", [(("implementation", 386), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -47), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure"), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0, (("parsing/parse.mli", 23, 1202, 1202), ("parsing/parse.mli", 23, 1202, 1259), 0), 0, Tag1 ("Parse", 2)), 0); (("interface", 387), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -44), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature"), 0, (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("parsing/parse.mli", 24, 1260, 1260), ("parsing/parse.mli", 24, 1260, 1312), 0), 0, Tag1 ("Parse", 3)), 0); (("toplevel_phrase", 388), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -41), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "toplevel_phrase"), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("parsing/parse.mli", 25, 1313, 1313), ("parsing/parse.mli", 25, 1313, 1377), 0), 0, Tag1 ("Parse", 4)), 0); (("use_file", 389), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -38), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "toplevel_phrase"), 0, (0)), 100000000, 0, -37)], (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("parsing/parse.mli", 26, 1378, 1378), ("parsing/parse.mli", 26, 1378, 1440), 0), 0, Tag1 ("Parse", 5)), 0); (("core_type", 390), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -34), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0, (("parsing/parse.mli", 27, 1441, 1441), ("parsing/parse.mli", 27, 1441, 1493), 0), 0, Tag1 ("Parse", 6)), 0); (("expression", 391), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -31), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("parsing/parse.mli", 28, 1494, 1494), ("parsing/parse.mli", 28, 1494, 1548), 0), 0, Tag1 ("Parse", 7)), 0); (("pattern", 392), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -28), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("parsing/parse.mli", 29, 1549, 1549), ("parsing/parse.mli", 29, 1549, 1597), 0), 0, Tag1 ("Parse", 8)), 0); (("module_type", 393), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -25), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type"), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("parsing/parse.mli", 30, 1598, 1598), ("parsing/parse.mli", 30, 1598, 1654), 0), 0, Tag1 ("Parse", 9)), 0); (("module_expr", 394), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -22), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr"), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("parsing/parse.mli", 31, 1655, 1655), ("parsing/parse.mli", 31, 1655, 1711), 0), 0, Tag1 ("Parse", 10)), 0); (("longident", 395), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -19), (Tag3 (Tag1 ((Tag2 ("Longident")), "t"), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("parsing/parse.mli", 35, 1780, 1780), ("parsing/parse.mli", 35, 1780, 1823), 0), 0, Tag1 ("Parse", 11)), 0); (("val_ident", 396), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -16), (Tag3 (Tag1 ((Tag2 ("Longident")), "t"), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("parsing/parse.mli", 54, 2639, 2639), ("parsing/parse.mli", 54, 2639, 2682), 0), 0, Tag1 ("Parse", 12)), 0); (("constr_ident", 397), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -13), (Tag3 (Tag1 ((Tag2 ("Longident")), "t"), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("parsing/parse.mli", 65, 3048, 3048), ("parsing/parse.mli", 65, 3048, 3094), 0), 0, Tag1 ("Parse", 13)), 0); (("simple_module_path", 398), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -10), (Tag3 (Tag1 ((Tag2 ("Longident")), "t"), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("parsing/parse.mli", 80, 3605, 3605), ("parsing/parse.mli", 80, 3605, 3657), 0), 0, Tag1 ("Parse", 14)), 0); (("extended_module_path", 399), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -7), (Tag3 (Tag1 ((Tag2 ("Longident")), "t"), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("parsing/parse.mli", 91, 3949, 3949), ("parsing/parse.mli", 91, 3949, 4003), 0), 0, Tag1 ("Parse", 15)), 0); (("type_ident", 400), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -4), (Tag3 (Tag1 ((Tag2 ("Longident")), "t"), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("parsing/parse.mli", 101, 4244, 4244), ("parsing/parse.mli", 101, 4244, 4288), 0), 0, Tag1 ("Parse", 16)), 0)], "Parse", [("Parse", ("\219\207HB\206\197\1471\158\226\246\183@\140\018G")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216"))], [(0)])
val type_ident : Lexing.lexbuf -> Longident.t
