val print_goal_tag_opt_name : string list
val pr_constr_env :
  ?inctx:bool ->
  ?scope:Notation_term.scope_name ->
  Environ.env -> Evd.evar_map -> Constr.constr -> Pp.t
val pr_lconstr_env :
  ?inctx:bool ->
  ?scope:Notation_term.scope_name ->
  Environ.env -> Evd.evar_map -> Constr.constr -> Pp.t
val pr_constr_n_env :
  ?inctx:bool ->
  ?scope:Notation_term.scope_name ->
  Environ.env ->
  Evd.evar_map -> Constrexpr.entry_relative_level -> Constr.constr -> Pp.t
val safe_pr_constr_env : Environ.env -> Evd.evar_map -> Constr.constr -> Pp.t
val safe_pr_lconstr_env :
  Environ.env -> Evd.evar_map -> Constr.constr -> Pp.t
val pr_econstr_env :
  ?inctx:bool ->
  ?scope:Notation_term.scope_name ->
  Environ.env -> Evd.evar_map -> EConstr.t -> Pp.t
val pr_leconstr_env :
  ?inctx:bool ->
  ?scope:Notation_term.scope_name ->
  Environ.env -> Evd.evar_map -> EConstr.t -> Pp.t
val pr_econstr_n_env :
  ?inctx:bool ->
  ?scope:Notation_term.scope_name ->
  Environ.env ->
  Evd.evar_map -> Constrexpr.entry_relative_level -> EConstr.t -> Pp.t
val pr_etype_env :
  ?goal_concl_style:bool ->
  Environ.env -> Evd.evar_map -> EConstr.types -> Pp.t
val pr_letype_env :
  ?goal_concl_style:bool ->
  Environ.env ->
  Evd.evar_map ->
  ?impargs:Glob_term.binding_kind list -> EConstr.types -> Pp.t
val pr_open_constr_env :
  ?inctx:bool ->
  ?scope:Notation_term.scope_name ->
  Environ.env -> Evd.evar_map -> Evd.open_constr -> Pp.t
val pr_open_lconstr_env :
  ?inctx:bool ->
  ?scope:Notation_term.scope_name ->
  Environ.env -> Evd.evar_map -> Evd.open_constr -> Pp.t
val pr_constr_under_binders_env :
  Environ.env -> Evd.evar_map -> Ltac_pretype.constr_under_binders -> Pp.t
val pr_lconstr_under_binders_env :
  Environ.env -> Evd.evar_map -> Ltac_pretype.constr_under_binders -> Pp.t
val pr_ltype_env :
  ?goal_concl_style:bool ->
  Environ.env ->
  Evd.evar_map ->
  ?impargs:Glob_term.binding_kind list -> Constr.types -> Pp.t
val pr_type_env :
  ?goal_concl_style:bool ->
  Environ.env -> Evd.evar_map -> Constr.types -> Pp.t
val pr_closed_glob_n_env :
  ?goal_concl_style:bool ->
  ?inctx:bool ->
  ?scope:Notation_term.scope_name ->
  Environ.env ->
  Evd.evar_map ->
  Constrexpr.entry_relative_level -> Ltac_pretype.closed_glob_constr -> Pp.t
val pr_closed_glob_env :
  ?goal_concl_style:bool ->
  ?inctx:bool ->
  ?scope:Notation_term.scope_name ->
  Environ.env -> Evd.evar_map -> Ltac_pretype.closed_glob_constr -> Pp.t
val pr_ljudge_env :
  Environ.env -> Evd.evar_map -> EConstr.unsafe_judgment -> Pp.t * Pp.t
val pr_lglob_constr_env :
  Environ.env -> Evd.evar_map -> 'a Glob_term.glob_constr_g -> Pp.t
val pr_glob_constr_env :
  Environ.env -> Evd.evar_map -> 'a Glob_term.glob_constr_g -> Pp.t
val pr_lconstr_pattern_env :
  Environ.env -> Evd.evar_map -> Pattern.constr_pattern -> Pp.t
val pr_constr_pattern_env :
  Environ.env -> Evd.evar_map -> Pattern.constr_pattern -> Pp.t
val pr_cases_pattern : Glob_term.cases_pattern -> Pp.t
val pr_sort : Evd.evar_map -> Sorts.t -> Pp.t
val pr_universe_instance : Evd.evar_map -> Univ.Instance.t -> Pp.t
val pr_universe_instance_constraints :
  Evd.evar_map -> Univ.Instance.t -> Univ.Constraints.t -> Pp.t
val pr_universe_ctx :
  Evd.evar_map -> ?variance:Univ.Variance.t array -> Univ.UContext.t -> Pp.t
val pr_abstract_universe_ctx :
  Evd.evar_map ->
  ?variance:Univ.Variance.t array ->
  ?priv:Univ.ContextSet.t -> Univ.AbstractContext.t -> Pp.t
val pr_universe_ctx_set : Evd.evar_map -> Univ.ContextSet.t -> Pp.t
val pr_universes :
  Evd.evar_map ->
  ?variance:Univ.Variance.t array ->
  ?priv:Univ.ContextSet.t -> Declarations.universes -> Pp.t
val universe_binders_with_opt_names :
  Univ.AbstractContext.t ->
  UnivNames.univ_name_list option ->
  UnivNames.universe_binders * Names.Id.t Univ.Level.Map.t
val pr_global_env : Names.Id.Set.t -> Names.GlobRef.t -> Pp.t
val pr_global : Names.GlobRef.t -> Pp.t
val pr_constant : Environ.env -> Names.Constant.t -> Pp.t
val pr_existential_key : Environ.env -> Evd.evar_map -> Evar.t -> Pp.t
val pr_existential :
  Environ.env -> Evd.evar_map -> Constr.existential -> Pp.t
val pr_constructor : Environ.env -> Names.constructor -> Pp.t
val pr_inductive : Environ.env -> Names.inductive -> Pp.t
val pr_evaluable_reference : Tacred.evaluable_global_reference -> Pp.t
val pr_pconstant : Environ.env -> Evd.evar_map -> Constr.pconstant -> Pp.t
val pr_pinductive : Environ.env -> Evd.evar_map -> Constr.pinductive -> Pp.t
val pr_pconstructor :
  Environ.env -> Evd.evar_map -> Constr.pconstructor -> Pp.t
val set_compact_context : bool -> unit
val get_compact_context : unit -> bool
val pr_context_unlimited : Environ.env -> Evd.evar_map -> Pp.t
val pr_ne_context_of : Pp.t -> Environ.env -> Evd.evar_map -> Pp.t
val pr_named_decl :
  Environ.env -> Evd.evar_map -> Constr.named_declaration -> Pp.t
val pr_compacted_decl :
  Environ.env -> Evd.evar_map -> Constr.compacted_declaration -> Pp.t
val pr_rel_decl :
  Environ.env -> Evd.evar_map -> Constr.rel_declaration -> Pp.t
val pr_enamed_decl :
  Environ.env -> Evd.evar_map -> EConstr.named_declaration -> Pp.t
val pr_ecompacted_decl :
  Environ.env -> Evd.evar_map -> EConstr.compacted_declaration -> Pp.t
val pr_erel_decl :
  Environ.env -> Evd.evar_map -> EConstr.rel_declaration -> Pp.t
val pr_named_context :
  Environ.env -> Evd.evar_map -> Constr.named_context -> Pp.t
val pr_named_context_of : Environ.env -> Evd.evar_map -> Pp.t
val pr_rel_context :
  Environ.env -> Evd.evar_map -> Constr.rel_context -> Pp.t
val pr_rel_context_of : Environ.env -> Evd.evar_map -> Pp.t
val pr_context_of : Environ.env -> Evd.evar_map -> Pp.t
val pr_predicate : ('a -> Pp.t) -> bool * 'a list -> Pp.t
val pr_cpred : Names.Cpred.t -> Pp.t
val pr_idpred : Names.Id.Pred.t -> Pp.t
val pr_transparent_state : TransparentState.t -> Pp.t
val pr_open_subgoals :
  ?quiet:bool -> ?diffs:Proof.t option -> Proof.t -> Pp.t
val pr_nth_open_subgoal : proof:Proof.t -> int -> Pp.t
val pr_evar : Evd.evar_map -> Evar.t * Evd.undefined Evd.evar_info -> Pp.t
val pr_evars_int :
  Evd.evar_map ->
  shelf:Evar.t list ->
  given_up:Evar.t list ->
  int -> Evd.undefined Evd.evar_info Evar.Map.t -> Pp.t
val pr_ne_evar_set : Pp.t -> Pp.t -> Evd.evar_map -> Evar.Set.t -> Pp.t
type axiom =
    Constant of Names.Constant.t
  | Positive of Names.MutInd.t
  | Guarded of Names.GlobRef.t
  | TypeInType of Names.GlobRef.t
  | UIP of Names.MutInd.t
type context_object =
    Variable of Names.Id.t
  | Axiom of axiom * (Names.Label.t * Constr.rel_context * Constr.types) list
  | Opaque of Names.Constant.t
  | Transparent of Names.Constant.t
module ContextObjectSet :
  sig
    type elt = context_object
    type t
    val empty : t
    val add : elt -> t -> t
    val singleton : elt -> t
    val remove : elt -> t -> t
    val union : t -> t -> t
    val inter : t -> t -> t
    val disjoint : t -> t -> bool
    val diff : t -> t -> t
    val cardinal : t -> int
    val elements : t -> elt list
    val min_elt : t -> elt
    val min_elt_opt : t -> elt option
    val max_elt : t -> elt
    val max_elt_opt : t -> elt option
    val choose : t -> elt
    val choose_opt : t -> elt option
    val find : elt -> t -> elt
    val find_opt : elt -> t -> elt option
    val find_first : (elt -> bool) -> t -> elt
    val find_first_opt : (elt -> bool) -> t -> elt option
    val find_last : (elt -> bool) -> t -> elt
    val find_last_opt : (elt -> bool) -> t -> elt option
    val iter : (elt -> unit) -> t -> unit
    val fold : (elt -> 'acc -> 'acc) -> t -> 'acc -> 'acc
    val map : (elt -> elt) -> t -> t
    val filter : (elt -> bool) -> t -> t
    val filter_map : (elt -> elt option) -> t -> t
    val partition : (elt -> bool) -> t -> t * t
    val split : elt -> t -> t * bool * t
    val is_empty : t -> bool
    val mem : elt -> t -> bool
    val equal : t -> t -> bool
    val compare : t -> t -> int
    val subset : t -> t -> bool
    val for_all : (elt -> bool) -> t -> bool
    val exists : (elt -> bool) -> t -> bool
    val to_list : t -> elt list
    val of_list : elt list -> t
    val to_seq_from : elt -> t -> elt Seq.t
    val to_seq : t -> elt Seq.t
    val to_rev_seq : t -> elt Seq.t
    val add_seq : elt Seq.t -> t -> t
    val of_seq : elt Seq.t -> t
  end
module ContextObjectMap :
  sig
    type key = context_object
    type +'a t
    val empty : 'a t
    val is_empty : 'a t -> bool
    val mem : key -> 'a t -> bool
    val add : key -> 'a -> 'a t -> 'a t
    val update : key -> ('a option -> 'a option) -> 'a t -> 'a t
    val singleton : key -> 'a -> 'a t
    val remove : key -> 'a t -> 'a t
    val merge :
      (key -> 'a option -> 'b option -> 'c option) -> 'a t -> 'b t -> 'c t
    val union : (key -> 'a -> 'a -> 'a option) -> 'a t -> 'a t -> 'a t
    val compare : ('a -> 'a -> int) -> 'a t -> 'a t -> int
    val equal : ('a -> 'a -> bool) -> 'a t -> 'a t -> bool
    val iter : (key -> 'a -> unit) -> 'a t -> unit
    val fold : (key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b
    val for_all : (key -> 'a -> bool) -> 'a t -> bool
    val exists : (key -> 'a -> bool) -> 'a t -> bool
    val filter : (key -> 'a -> bool) -> 'a t -> 'a t
    val partition : (key -> 'a -> bool) -> 'a t -> 'a t * 'a t
    val cardinal : 'a t -> int
    val bindings : 'a t -> (key * 'a) list
    val min_binding : 'a t -> key * 'a
    val max_binding : 'a t -> key * 'a
    val choose : 'a t -> key * 'a
    val choose_opt : 'a t -> (key * 'a) option
    val split : key -> 'a t -> 'a t * 'a option * 'a t
    val find : key -> 'a t -> 'a
    val find_opt : key -> 'a t -> 'a option
    val map : ('a -> 'b) -> 'a t -> 'b t
    val mapi : (key -> 'a -> 'b) -> 'a t -> 'b t
    val get : key -> 'a t -> 'a
    val set : key -> 'a -> 'a t -> 'a t
    val modify : key -> (key -> 'a -> 'a) -> 'a t -> 'a t
    val domain : 'a t -> ContextObjectSet.t
    val bind : (key -> 'a) -> ContextObjectSet.t -> 'a t
    val fold_left : (key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b
    val fold_right : (key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b
    val height : 'a t -> int
    val filter_range : (key -> int) -> 'a t -> 'a t
    val of_list : (key * 'a) list -> 'a t
    val symmetric_diff_fold :
      (key -> 'a option -> 'a option -> 'b -> 'b) -> 'a t -> 'a t -> 'b -> 'b
    module Smart :
      sig
        val map : ('a -> 'a) -> 'a t -> 'a t
        val mapi : (key -> 'a -> 'a) -> 'a t -> 'a t
      end
    module Monad :
      functor (M : CMap.MonadS) ->
        sig
          val fold : (key -> 'a -> 'b -> 'b M.t) -> 'a t -> 'b -> 'b M.t
          val fold_left : (key -> 'a -> 'b -> 'b M.t) -> 'a t -> 'b -> 'b M.t
          val fold_right :
            (key -> 'a -> 'b -> 'b M.t) -> 'a t -> 'b -> 'b M.t
          val mapi : (key -> 'a -> 'b M.t) -> 'a t -> 'b t M.t
        end
  end
val pr_assumptionset :
  Environ.env -> Evd.evar_map -> Constr.types ContextObjectMap.t -> Pp.t
val pr_goal_by_id : proof:Proof.t -> Names.Id.t -> Pp.t
val pr_goal_emacs : proof:Proof.t option -> int -> int -> Pp.t
val pr_typing_flags : Declarations.typing_flags -> Pp.t
val print_goal_names : unit -> bool
("DEBUG:rule", [(("print_goal_tag_opt_name", 2564), ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -583)], (0)), 100000000, 0, -582), 0, (("printing/printer.mli", 22, 860, 860), ("printing/printer.mli", 22, 860, 901), 0), 0, Tag1 ("Printer", 2)), 0); (("pr_constr_env", 2565), ((Tag1 (Tag1 ("inctx"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -581)], (0)), 100000000, 0, -580), (Tag1 (Tag1 ("scope"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Notation_term")), "scope_name"), 0, (0)), 100000000, 0, -579)], (0)), 100000000, 0, -578), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -577), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -576), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -575), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -574), 0), 100000000, 0, -573), 0), 100000000, 0, -572), 0), 100000000, 0, -571), 0), 100000000, 0, -570), 0), 100000000, 0, -569), 0, (("printing/printer.mli", 52, 2033, 2033), ("printing/printer.mli", 52, 2033, 2131), 0), 0, Tag1 ("Printer", 3)), 0); (("pr_lconstr_env", 2566), ((Tag1 (Tag1 ("inctx"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -568)], (0)), 100000000, 0, -567), (Tag1 (Tag1 ("scope"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Notation_term")), "scope_name"), 0, (0)), 100000000, 0, -566)], (0)), 100000000, 0, -565), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -564), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -563), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -562), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -561), 0), 100000000, 0, -560), 0), 100000000, 0, -559), 0), 100000000, 0, -558), 0), 100000000, 0, -557), 0), 100000000, 0, -556), 0, (("printing/printer.mli", 53, 2132, 2132), ("printing/printer.mli", 53, 2132, 2230), 0), 0, Tag1 ("Printer", 4)), 0); (("pr_constr_n_env", 2567), ((Tag1 (Tag1 ("inctx"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -555)], (0)), 100000000, 0, -554), (Tag1 (Tag1 ("scope"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Notation_term")), "scope_name"), 0, (0)), 100000000, 0, -553)], (0)), 100000000, 0, -552), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -551), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -550), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "entry_relative_level"), 0, (0)), 100000000, 0, -549), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -548), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -547), 0), 100000000, 0, -546), 0), 100000000, 0, -545), 0), 100000000, 0, -544), 0), 100000000, 0, -543), 0), 100000000, 0, -542), 0), 100000000, 0, -541), 0, (("printing/printer.mli", 55, 2232, 2232), ("printing/printer.mli", 55, 2232, 2365), 0), 0, Tag1 ("Printer", 5)), 0); (("safe_pr_constr_env", 2568), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -540), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -539), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -538), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -537), 0), 100000000, 0, -536), 0), 100000000, 0, -535), 0), 100000000, 0, -534), 0, (("printing/printer.mli", 61, 2570, 2570), ("printing/printer.mli", 61, 2570, 2629), 0), 0, Tag1 ("Printer", 6)), 0); (("safe_pr_lconstr_env", 2569), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -533), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -532), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -531), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -530), 0), 100000000, 0, -529), 0), 100000000, 0, -528), 0), 100000000, 0, -527), 0, (("printing/printer.mli", 62, 2630, 2630), ("printing/printer.mli", 62, 2630, 2689), 0), 0, Tag1 ("Printer", 7)), 0); (("pr_econstr_env", 2570), ((Tag1 (Tag1 ("inctx"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -526)], (0)), 100000000, 0, -525), (Tag1 (Tag1 ("scope"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Notation_term")), "scope_name"), 0, (0)), 100000000, 0, -524)], (0)), 100000000, 0, -523), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -522), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -521), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "t"), 0, (0)), 100000000, 0, -520), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -519), 0), 100000000, 0, -518), 0), 100000000, 0, -517), 0), 100000000, 0, -516), 0), 100000000, 0, -515), 0), 100000000, 0, -514), 0, (("printing/printer.mli", 64, 2691, 2691), ("printing/printer.mli", 64, 2691, 2789), 0), 0, Tag1 ("Printer", 8)), 0); (("pr_leconstr_env", 2571), ((Tag1 (Tag1 ("inctx"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -513)], (0)), 100000000, 0, -512), (Tag1 (Tag1 ("scope"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Notation_term")), "scope_name"), 0, (0)), 100000000, 0, -511)], (0)), 100000000, 0, -510), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -509), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -508), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "t"), 0, (0)), 100000000, 0, -507), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -506), 0), 100000000, 0, -505), 0), 100000000, 0, -504), 0), 100000000, 0, -503), 0), 100000000, 0, -502), 0), 100000000, 0, -501), 0, (("printing/printer.mli", 65, 2790, 2790), ("printing/printer.mli", 65, 2790, 2888), 0), 0, Tag1 ("Printer", 9)), 0); (("pr_econstr_n_env", 2572), ((Tag1 (Tag1 ("inctx"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -500)], (0)), 100000000, 0, -499), (Tag1 (Tag1 ("scope"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Notation_term")), "scope_name"), 0, (0)), 100000000, 0, -498)], (0)), 100000000, 0, -497), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -496), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -495), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "entry_relative_level"), 0, (0)), 100000000, 0, -494), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "t"), 0, (0)), 100000000, 0, -493), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -492), 0), 100000000, 0, -491), 0), 100000000, 0, -490), 0), 100000000, 0, -489), 0), 100000000, 0, -488), 0), 100000000, 0, -487), 0), 100000000, 0, -486), 0, (("printing/printer.mli", 67, 2890, 2890), ("printing/printer.mli", 67, 2890, 3023), 0), 0, Tag1 ("Printer", 10)), 0); (("pr_etype_env", 2573), ((Tag1 (Tag1 ("goal_concl_style"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -485)], (0)), 100000000, 0, -484), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -483), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -482), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -481), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -480), 0), 100000000, 0, -479), 0), 100000000, 0, -478), 0), 100000000, 0, -477), 0), 100000000, 0, -476), 0, (("printing/printer.mli", 69, 3025, 3025), ("printing/printer.mli", 69, 3025, 3117), 0), 0, Tag1 ("Printer", 11)), 0); (("pr_letype_env", 2574), ((Tag1 (Tag1 ("goal_concl_style"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -475)], (0)), 100000000, 0, -474), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -473), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -472), (Tag1 (Tag1 ("impargs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Glob_term")), "binding_kind"), 0, (0)), 100000000, 0, -471)], (0)), 100000000, 0, -470)], (0)), 100000000, 0, -469), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -468), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -467), 0), 100000000, 0, -466), 0), 100000000, 0, -465), 0), 100000000, 0, -464), 0), 100000000, 0, -463), 0), 100000000, 0, -462), 0, (("printing/printer.mli", 70, 3118, 3118), ("printing/printer.mli", 70, 3118, 3250), 0), 0, Tag1 ("Printer", 12)), 0); (("pr_open_constr_env", 2575), ((Tag1 (Tag1 ("inctx"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -461)], (0)), 100000000, 0, -460), (Tag1 (Tag1 ("scope"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Notation_term")), "scope_name"), 0, (0)), 100000000, 0, -459)], (0)), 100000000, 0, -458), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -457), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -456), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "open_constr"), 0, (0)), 100000000, 0, -455), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -454), 0), 100000000, 0, -453), 0), 100000000, 0, -452), 0), 100000000, 0, -451), 0), 100000000, 0, -450), 0), 100000000, 0, -449), 0, (("printing/printer.mli", 72, 3252, 3252), ("printing/printer.mli", 72, 3252, 3352), 0), 0, Tag1 ("Printer", 13)), 0); (("pr_open_lconstr_env", 2576), ((Tag1 (Tag1 ("inctx"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -448)], (0)), 100000000, 0, -447), (Tag1 (Tag1 ("scope"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Notation_term")), "scope_name"), 0, (0)), 100000000, 0, -446)], (0)), 100000000, 0, -445), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -444), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -443), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "open_constr"), 0, (0)), 100000000, 0, -442), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -441), 0), 100000000, 0, -440), 0), 100000000, 0, -439), 0), 100000000, 0, -438), 0), 100000000, 0, -437), 0), 100000000, 0, -436), 0, (("printing/printer.mli", 73, 3353, 3353), ("printing/printer.mli", 73, 3353, 3453), 0), 0, Tag1 ("Printer", 14)), 0); (("pr_constr_under_binders_env", 2577), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -435), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -434), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ltac_pretype")), "constr_under_binders"), 0, (0)), 100000000, 0, -433), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -432), 0), 100000000, 0, -431), 0), 100000000, 0, -430), 0), 100000000, 0, -429), 0, (("printing/printer.mli", 75, 3455, 3455), ("printing/printer.mli", 75, 3455, 3537), 0), 0, Tag1 ("Printer", 15)), 0); (("pr_lconstr_under_binders_env", 2578), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -428), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -427), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ltac_pretype")), "constr_under_binders"), 0, (0)), 100000000, 0, -426), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -425), 0), 100000000, 0, -424), 0), 100000000, 0, -423), 0), 100000000, 0, -422), 0, (("printing/printer.mli", 77, 3539, 3539), ("printing/printer.mli", 77, 3539, 3621), 0), 0, Tag1 ("Printer", 16)), 0); (("pr_ltype_env", 2579), ((Tag1 (Tag1 ("goal_concl_style"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -421)], (0)), 100000000, 0, -420), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -419), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -418), (Tag1 (Tag1 ("impargs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Glob_term")), "binding_kind"), 0, (0)), 100000000, 0, -417)], (0)), 100000000, 0, -416)], (0)), 100000000, 0, -415), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -414), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -413), 0), 100000000, 0, -412), 0), 100000000, 0, -411), 0), 100000000, 0, -410), 0), 100000000, 0, -409), 0), 100000000, 0, -408), 0, (("printing/printer.mli", 100, 4705, 4705), ("printing/printer.mli", 100, 4705, 4832), 0), 0, Tag1 ("Printer", 17)), 0); (("pr_type_env", 2580), ((Tag1 (Tag1 ("goal_concl_style"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -407)], (0)), 100000000, 0, -406), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -405), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -404), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -403), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -402), 0), 100000000, 0, -401), 0), 100000000, 0, -400), 0), 100000000, 0, -399), 0), 100000000, 0, -398), 0, (("printing/printer.mli", 101, 4833, 4833), ("printing/printer.mli", 101, 4833, 4920), 0), 0, Tag1 ("Printer", 18)), 0); (("pr_closed_glob_n_env", 2581), ((Tag1 (Tag1 ("goal_concl_style"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -397)], (0)), 100000000, 0, -396), (Tag1 (Tag1 ("inctx"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -395)], (0)), 100000000, 0, -394), (Tag1 (Tag1 ("scope"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Notation_term")), "scope_name"), 0, (0)), 100000000, 0, -393)], (0)), 100000000, 0, -392), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -391), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -390), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "entry_relative_level"), 0, (0)), 100000000, 0, -389), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ltac_pretype")), "closed_glob_constr"), 0, (0)), 100000000, 0, -388), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -387), 0), 100000000, 0, -386), 0), 100000000, 0, -385), 0), 100000000, 0, -384), 0), 100000000, 0, -383), 0), 100000000, 0, -382), 0), 100000000, 0, -381), 0), 100000000, 0, -380), 0, (("printing/printer.mli", 103, 4922, 4922), ("printing/printer.mli", 103, 4922, 5093), 0), 0, Tag1 ("Printer", 19)), 0); (("pr_closed_glob_env", 2582), ((Tag1 (Tag1 ("goal_concl_style"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -379)], (0)), 100000000, 0, -378), (Tag1 (Tag1 ("inctx"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -377)], (0)), 100000000, 0, -376), (Tag1 (Tag1 ("scope"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Notation_term")), "scope_name"), 0, (0)), 100000000, 0, -375)], (0)), 100000000, 0, -374), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -373), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -372), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ltac_pretype")), "closed_glob_constr"), 0, (0)), 100000000, 0, -371), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -370), 0), 100000000, 0, -369), 0), 100000000, 0, -368), 0), 100000000, 0, -367), 0), 100000000, 0, -366), 0), 100000000, 0, -365), 0), 100000000, 0, -364), 0, (("printing/printer.mli", 104, 5094, 5094), ("printing/printer.mli", 104, 5094, 5230), 0), 0, Tag1 ("Printer", 20)), 0); (("pr_ljudge_env", 2583), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -363), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -362), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -361), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -359); (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -360)]), 100000000, 0, -358), 0), 100000000, 0, -357), 0), 100000000, 0, -356), 0), 100000000, 0, -355), 0, (("printing/printer.mli", 106, 5232, 5232), ("printing/printer.mli", 106, 5232, 5318), 0), 0, Tag1 ("Printer", 21)), 0); (("pr_lglob_constr_env", 2584), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -354), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -353), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr_g"), [((("a")), 100000000, 0, -352)], (0)), 100000000, 0, -351), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -350), 0), 100000000, 0, -349), 0), 100000000, 0, -348), 0), 100000000, 0, -347), 0, (("printing/printer.mli", 108, 5320, 5320), ("printing/printer.mli", 108, 5320, 5392), 0), 0, Tag1 ("Printer", 22)), 0); (("pr_glob_constr_env", 2585), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -346), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -345), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr_g"), [((("a")), 100000000, 0, -344)], (0)), 100000000, 0, -343), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -342), 0), 100000000, 0, -341), 0), 100000000, 0, -340), 0), 100000000, 0, -339), 0, (("printing/printer.mli", 110, 5394, 5394), ("printing/printer.mli", 110, 5394, 5466), 0), 0, Tag1 ("Printer", 23)), 0); (("pr_lconstr_pattern_env", 2586), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -338), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -337), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Pattern")), "constr_pattern"), 0, (0)), 100000000, 0, -336), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -335), 0), 100000000, 0, -334), 0), 100000000, 0, -333), 0), 100000000, 0, -332), 0, (("printing/printer.mli", 112, 5468, 5468), ("printing/printer.mli", 112, 5468, 5538), 0), 0, Tag1 ("Printer", 24)), 0); (("pr_constr_pattern_env", 2587), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -331), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -330), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Pattern")), "constr_pattern"), 0, (0)), 100000000, 0, -329), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -328), 0), 100000000, 0, -327), 0), 100000000, 0, -326), 0), 100000000, 0, -325), 0, (("printing/printer.mli", 114, 5540, 5540), ("printing/printer.mli", 114, 5540, 5610), 0), 0, Tag1 ("Printer", 25)), 0); (("pr_cases_pattern", 2588), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "cases_pattern"), 0, (0)), 100000000, 0, -324), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -323), 0), 100000000, 0, -322), 0, (("printing/printer.mli", 116, 5612, 5612), ("printing/printer.mli", 116, 5612, 5662), 0), 0, Tag1 ("Printer", 26)), 0); (("pr_sort", 2589), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -321), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sorts")), "t"), 0, (0)), 100000000, 0, -320), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -319), 0), 100000000, 0, -318), 0), 100000000, 0, -317), 0, (("printing/printer.mli", 118, 5664, 5664), ("printing/printer.mli", 118, 5664, 5720), 0), 0, Tag1 ("Printer", 27)), 0); (("pr_universe_instance", 2590), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -316), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Instance"), "t"), 0, (0)), 100000000, 0, -315), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -314), 0), 100000000, 0, -313), 0), 100000000, 0, -312), 0, (("printing/printer.mli", 122, 5751, 5751), ("printing/printer.mli", 122, 5751, 5815), 0), 0, Tag1 ("Printer", 28)), 0); (("pr_universe_instance_constraints", 2591), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -311), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Instance"), "t"), 0, (0)), 100000000, 0, -310), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Constraints"), "t"), 0, (0)), 100000000, 0, -309), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -308), 0), 100000000, 0, -307), 0), 100000000, 0, -306), 0), 100000000, 0, -305), 0, (("printing/printer.mli", 123, 5816, 5816), ("printing/printer.mli", 123, 5816, 5912), 0), 0, Tag1 ("Printer", 29)), 0); (("pr_universe_ctx", 2592), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -304), (Tag1 (Tag1 ("variance"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Variance"), "t"), 0, (0)), 100000000, 0, -303)], (0)), 100000000, 0, -302)], (0)), 100000000, 0, -301), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "UContext"), "t"), 0, (0)), 100000000, 0, -300), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -299), 0), 100000000, 0, -298), 0), 100000000, 0, -297), 0), 100000000, 0, -296), 0, (("printing/printer.mli", 124, 5913, 5913), ("printing/printer.mli", 125, 5989, 6014), 0), 0, Tag1 ("Printer", 30)), 0); (("pr_abstract_universe_ctx", 2593), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -295), (Tag1 (Tag1 ("variance"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Variance"), "t"), 0, (0)), 100000000, 0, -294)], (0)), 100000000, 0, -293)], (0)), 100000000, 0, -292), (Tag1 (Tag1 ("priv"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "ContextSet"), "t"), 0, (0)), 100000000, 0, -291)], (0)), 100000000, 0, -290), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "AbstractContext"), "t"), 0, (0)), 100000000, 0, -289), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -288), 0), 100000000, 0, -287), 0), 100000000, 0, -286), 0), 100000000, 0, -285), 0), 100000000, 0, -284), 0, (("printing/printer.mli", 126, 6015, 6015), ("printing/printer.mli", 127, 6093, 6152), 0), 0, Tag1 ("Printer", 31)), 0); (("pr_universe_ctx_set", 2594), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -283), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "ContextSet"), "t"), 0, (0)), 100000000, 0, -282), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -281), 0), 100000000, 0, -280), 0), 100000000, 0, -279), 0, (("printing/printer.mli", 128, 6153, 6153), ("printing/printer.mli", 128, 6153, 6219), 0), 0, Tag1 ("Printer", 32)), 0); (("pr_universes", 2595), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -278), (Tag1 (Tag1 ("variance"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Variance"), "t"), 0, (0)), 100000000, 0, -277)], (0)), 100000000, 0, -276)], (0)), 100000000, 0, -275), (Tag1 (Tag1 ("priv"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "ContextSet"), "t"), 0, (0)), 100000000, 0, -274)], (0)), 100000000, 0, -273), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "universes"), 0, (0)), 100000000, 0, -272), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -271), 0), 100000000, 0, -270), 0), 100000000, 0, -269), 0), 100000000, 0, -268), 0), 100000000, 0, -267), 0, (("printing/printer.mli", 129, 6220, 6220), ("printing/printer.mli", 131, 6316, 6348), 0), 0, Tag1 ("Printer", 33)), 0); (("universe_binders_with_opt_names", 2596), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "AbstractContext"), "t"), 0, (0)), 100000000, 0, -266), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("UnivNames")), "univ_name_list"), 0, (0)), 100000000, 0, -265)], (0)), 100000000, 0, -264), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("UnivNames")), "universe_binders"), 0, (0)), 100000000, 0, -261); (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Univ")), "Level"), "Map"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -263)], (0)), 100000000, 0, -262)]), 100000000, 0, -260), 0), 100000000, 0, -259), 0), 100000000, 0, -258), 0, (("printing/printer.mli", 142, 6700, 6700), ("printing/printer.mli", 143, 6764, 6851), 0), 0, Tag1 ("Printer", 34)), 0); (("pr_global_env", 2597), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -257), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -256), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -255), 0), 100000000, 0, -254), 0), 100000000, 0, -253), 0, (("printing/printer.mli", 147, 6921, 6921), ("printing/printer.mli", 147, 6921, 6979), 0), 0, Tag1 ("Printer", 35)), 0); (("pr_global", 2598), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -252), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -251), 0), 100000000, 0, -250), 0, (("printing/printer.mli", 148, 6980, 6980), ("printing/printer.mli", 148, 6980, 7026), 0), 0, Tag1 ("Printer", 36)), 0); (("pr_constant", 2599), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -249), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -248), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -247), 0), 100000000, 0, -246), 0), 100000000, 0, -245), 0, (("printing/printer.mli", 150, 7028, 7028), ("printing/printer.mli", 150, 7028, 7082), 0), 0, Tag1 ("Printer", 37)), 0); (("pr_existential_key", 2600), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -244), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -243), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -242), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -241), 0), 100000000, 0, -240), 0), 100000000, 0, -239), 0), 100000000, 0, -238), 0, (("printing/printer.mli", 151, 7083, 7083), ("printing/printer.mli", 151, 7083, 7145), 0), 0, Tag1 ("Printer", 38)), 0); (("pr_existential", 2601), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -237), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -236), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "existential"), 0, (0)), 100000000, 0, -235), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -234), 0), 100000000, 0, -233), 0), 100000000, 0, -232), 0), 100000000, 0, -231), 0, (("printing/printer.mli", 152, 7146, 7146), ("printing/printer.mli", 152, 7146, 7213), 0), 0, Tag1 ("Printer", 39)), 0); (("pr_constructor", 2602), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -230), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "constructor"), 0, (0)), 100000000, 0, -229), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -228), 0), 100000000, 0, -227), 0), 100000000, 0, -226), 0, (("printing/printer.mli", 153, 7214, 7214), ("printing/printer.mli", 153, 7214, 7269), 0), 0, Tag1 ("Printer", 40)), 0); (("pr_inductive", 2603), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -225), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -224), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -223), 0), 100000000, 0, -222), 0), 100000000, 0, -221), 0, (("printing/printer.mli", 154, 7270, 7270), ("printing/printer.mli", 154, 7270, 7323), 0), 0, Tag1 ("Printer", 41)), 0); (("pr_evaluable_reference", 2604), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Tacred")), "evaluable_global_reference"), 0, (0)), 100000000, 0, -220), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -219), 0), 100000000, 0, -218), 0, (("printing/printer.mli", 155, 7324, 7324), ("printing/printer.mli", 155, 7324, 7394), 0), 0, Tag1 ("Printer", 42)), 0); (("pr_pconstant", 2605), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -217), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -216), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pconstant"), 0, (0)), 100000000, 0, -215), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -214), 0), 100000000, 0, -213), 0), 100000000, 0, -212), 0), 100000000, 0, -211), 0, (("printing/printer.mli", 157, 7396, 7396), ("printing/printer.mli", 157, 7396, 7451), 0), 0, Tag1 ("Printer", 43)), 0); (("pr_pinductive", 2606), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -210), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -209), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pinductive"), 0, (0)), 100000000, 0, -208), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -207), 0), 100000000, 0, -206), 0), 100000000, 0, -205), 0), 100000000, 0, -204), 0, (("printing/printer.mli", 158, 7452, 7452), ("printing/printer.mli", 158, 7452, 7509), 0), 0, Tag1 ("Printer", 44)), 0); (("pr_pconstructor", 2607), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -203), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -202), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pconstructor"), 0, (0)), 100000000, 0, -201), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -200), 0), 100000000, 0, -199), 0), 100000000, 0, -198), 0), 100000000, 0, -197), 0, (("printing/printer.mli", 159, 7510, 7510), ("printing/printer.mli", 159, 7510, 7571), 0), 0, Tag1 ("Printer", 45)), 0); (("set_compact_context", 2608), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -196), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -195), 0), 100000000, 0, -194), 0, (("printing/printer.mli", 165, 7663, 7663), ("printing/printer.mli", 165, 7663, 7701), 0), 0, Tag1 ("Printer", 46)), 0); (("get_compact_context", 2609), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -193), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -192), 0), 100000000, 0, -191), 0, (("printing/printer.mli", 166, 7702, 7702), ("printing/printer.mli", 166, 7702, 7740), 0), 0, Tag1 ("Printer", 47)), 0); (("pr_context_unlimited", 2610), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -190), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -189), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -188), 0), 100000000, 0, -187), 0), 100000000, 0, -186), 0, (("printing/printer.mli", 168, 7742, 7742), ("printing/printer.mli", 168, 7742, 7794), 0), 0, Tag1 ("Printer", 48)), 0); (("pr_ne_context_of", 2611), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -185), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -184), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -183), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -182), 0), 100000000, 0, -181), 0), 100000000, 0, -180), 0), 100000000, 0, -179), 0, (("printing/printer.mli", 169, 7795, 7795), ("printing/printer.mli", 169, 7795, 7855), 0), 0, Tag1 ("Printer", 49)), 0); (("pr_named_decl", 2612), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -178), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -177), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "named_declaration"), 0, (0)), 100000000, 0, -176), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -175), 0), 100000000, 0, -174), 0), 100000000, 0, -173), 0), 100000000, 0, -172), 0, (("printing/printer.mli", 171, 7857, 7857), ("printing/printer.mli", 171, 7857, 7937), 0), 0, Tag1 ("Printer", 50)), 0); (("pr_compacted_decl", 2613), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -171), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -170), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "compacted_declaration"), 0, (0)), 100000000, 0, -169), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -168), 0), 100000000, 0, -167), 0), 100000000, 0, -166), 0), 100000000, 0, -165), 0, (("printing/printer.mli", 172, 7938, 7938), ("printing/printer.mli", 172, 7938, 8022), 0), 0, Tag1 ("Printer", 51)), 0); (("pr_rel_decl", 2614), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -164), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -163), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_declaration"), 0, (0)), 100000000, 0, -162), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -161), 0), 100000000, 0, -160), 0), 100000000, 0, -159), 0), 100000000, 0, -158), 0, (("printing/printer.mli", 173, 8023, 8023), ("printing/printer.mli", 173, 8023, 8101), 0), 0, Tag1 ("Printer", 52)), 0); (("pr_enamed_decl", 2615), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -157), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -156), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "named_declaration"), 0, (0)), 100000000, 0, -155), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -154), 0), 100000000, 0, -153), 0), 100000000, 0, -152), 0), 100000000, 0, -151), 0, (("printing/printer.mli", 175, 8103, 8103), ("printing/printer.mli", 175, 8103, 8185), 0), 0, Tag1 ("Printer", 53)), 0); (("pr_ecompacted_decl", 2616), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -150), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -149), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "compacted_declaration"), 0, (0)), 100000000, 0, -148), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -147), 0), 100000000, 0, -146), 0), 100000000, 0, -145), 0), 100000000, 0, -144), 0, (("printing/printer.mli", 176, 8186, 8186), ("printing/printer.mli", 176, 8186, 8272), 0), 0, Tag1 ("Printer", 54)), 0); (("pr_erel_decl", 2617), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -143), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -142), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "rel_declaration"), 0, (0)), 100000000, 0, -141), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -140), 0), 100000000, 0, -139), 0), 100000000, 0, -138), 0), 100000000, 0, -137), 0, (("printing/printer.mli", 177, 8273, 8273), ("printing/printer.mli", 177, 8273, 8353), 0), 0, Tag1 ("Printer", 55)), 0); (("pr_named_context", 2618), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -136), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -135), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "named_context"), 0, (0)), 100000000, 0, -134), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -133), 0), 100000000, 0, -132), 0), 100000000, 0, -131), 0), 100000000, 0, -130), 0, (("printing/printer.mli", 179, 8355, 8355), ("printing/printer.mli", 179, 8355, 8431), 0), 0, Tag1 ("Printer", 56)), 0); (("pr_named_context_of", 2619), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -129), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -128), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -127), 0), 100000000, 0, -126), 0), 100000000, 0, -125), 0, (("printing/printer.mli", 180, 8432, 8432), ("printing/printer.mli", 180, 8432, 8484), 0), 0, Tag1 ("Printer", 57)), 0); (("pr_rel_context", 2620), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -124), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -123), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -122), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -121), 0), 100000000, 0, -120), 0), 100000000, 0, -119), 0), 100000000, 0, -118), 0, (("printing/printer.mli", 181, 8485, 8485), ("printing/printer.mli", 181, 8485, 8559), 0), 0, Tag1 ("Printer", 58)), 0); (("pr_rel_context_of", 2621), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -117), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -116), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -115), 0), 100000000, 0, -114), 0), 100000000, 0, -113), 0, (("printing/printer.mli", 182, 8560, 8560), ("printing/printer.mli", 182, 8560, 8612), 0), 0, Tag1 ("Printer", 59)), 0); (("pr_context_of", 2622), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -112), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -111), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -110), 0), 100000000, 0, -109), 0), 100000000, 0, -108), 0, (("printing/printer.mli", 183, 8613, 8613), ("printing/printer.mli", 183, 8613, 8665), 0), 0, Tag1 ("Printer", 60)), 0); (("pr_predicate", 2623), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -105), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -107), 0), 100000000, 0, -106), (Tag1 (0, (Tag2 ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -103); (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -105)], (0)), 100000000, 0, -104)]), 100000000, 0, -102), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -101), 0), 100000000, 0, -100), 0), 100000000, 0, -99), 0, (("printing/printer.mli", 187, 8686, 8686), ("printing/printer.mli", 187, 8686, 8755), 0), 0, Tag1 ("Printer", 61)), 0); (("pr_cpred", 2624), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Cpred"), "t"), 0, (0)), 100000000, 0, -98), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -97), 0), 100000000, 0, -96), 0, (("printing/printer.mli", 188, 8756, 8756), ("printing/printer.mli", 188, 8756, 8800), 0), 0, Tag1 ("Printer", 62)), 0); (("pr_idpred", 2625), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Pred"), "t"), 0, (0)), 100000000, 0, -95), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -94), 0), 100000000, 0, -93), 0, (("printing/printer.mli", 189, 8801, 8801), ("printing/printer.mli", 189, 8801, 8847), 0), 0, Tag1 ("Printer", 63)), 0); (("pr_transparent_state", 2626), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("TransparentState")), "t"), 0, (0)), 100000000, 0, -92), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -91), 0), 100000000, 0, -90), 0, (("printing/printer.mli", 190, 8848, 8848), ("printing/printer.mli", 190, 8848, 8903), 0), 0, Tag1 ("Printer", 64)), 0); (("pr_open_subgoals", 2627), ((Tag1 (Tag1 ("quiet"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -89)], (0)), 100000000, 0, -88), (Tag1 (Tag1 ("diffs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Proof")), "t"), 0, (0)), 100000000, 0, -87)], (0)), 100000000, 0, -86)], (0)), 100000000, 0, -85), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Proof")), "t"), 0, (0)), 100000000, 0, -84), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -83), 0), 100000000, 0, -82), 0), 100000000, 0, -81), 0), 100000000, 0, -80), 0, (("printing/printer.mli", 199, 9383, 9383), ("printing/printer.mli", 199, 9383, 9467), 0), 0, Tag1 ("Printer", 65)), 0); (("pr_nth_open_subgoal", 2628), ((Tag1 (("proof"), (Tag3 (Tag1 ((Tag2 ("Proof")), "t"), 0, (0)), 100000000, 0, -79), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -78), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0), 100000000, 0, -75), 0, (("printing/printer.mli", 200, 9468, 9468), ("printing/printer.mli", 200, 9468, 9525), 0), 0, Tag1 ("Printer", 66)), 0); (("pr_evar", 2629), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -74), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -71); (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_info"), [(Tag3 (Tag1 ((Tag2 ("Evd")), "undefined"), 0, (0)), 100000000, 0, -73)], (0)), 100000000, 0, -72)]), 100000000, 0, -70), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -69), 0), 100000000, 0, -68), 0), 100000000, 0, -67), 0, (("printing/printer.mli", 201, 9526, 9526), ("printing/printer.mli", 201, 9526, 9605), 0), 0, Tag1 ("Printer", 67)), 0); (("pr_evars_int", 2630), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -66), (Tag1 (("shelf"), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -65)], (0)), 100000000, 0, -64), (Tag1 (("given_up"), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -63)], (0)), 100000000, 0, -62), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -61), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Evar")), "Map"), "t"), [(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_info"), [(Tag3 (Tag1 ((Tag2 ("Evd")), "undefined"), 0, (0)), 100000000, 0, -60)], (0)), 100000000, 0, -59)], (0)), 100000000, 0, -58), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0, (("printing/printer.mli", 202, 9606, 9606), ("printing/printer.mli", 202, 9606, 9737), 0), 0, Tag1 ("Printer", 68)), 0); (("pr_ne_evar_set", 2631), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -51), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -49), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Evar")), "Set"), "t"), 0, (0)), 100000000, 0, -48), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -47), 0), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("printing/printer.mli", 203, 9738, 9738), ("printing/printer.mli", 204, 9795, 9815), 0), 0, Tag1 ("Printer", 69)), 0); Tag1 (("axiom", 2632), (0, 0, Tag1 ([(("Constant", 1896), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -38)]), 0, (("printing/printer.mli", 208, 9885, 9887), ("printing/printer.mli", 208, 9885, 9911), 0), 0, Tag1 ("Printer", 71)); (("Positive", 1897), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MutInd"), "t"), 0, (0)), 100000000, 0, -39)]), 0, (("printing/printer.mli", 209, 9942, 9944), ("printing/printer.mli", 209, 9942, 9966), 0), 0, Tag1 ("Printer", 72)); (("Guarded", 1915), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -40)]), 0, (("printing/printer.mli", 210, 10038, 10040), ("printing/printer.mli", 210, 10038, 10062), 0), 0, Tag1 ("Printer", 73)); (("TypeInType", 1916), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -41)]), 0, (("printing/printer.mli", 211, 10132, 10134), ("printing/printer.mli", 211, 10132, 10159), 0), 0, Tag1 ("Printer", 74)); (("UIP", 1917), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MutInd"), "t"), 0, (0)), 100000000, 0, -42)]), 0, (("printing/printer.mli", 212, 10206, 10208), ("printing/printer.mli", 212, 10206, 10225), 0), 0, Tag1 ("Printer", 75))], 0), 1, 0, 0, 0, 0, 0, (("printing/printer.mli", 207, 9872, 9872), ("printing/printer.mli", 212, 10206, 10225), 0), 0, 0, 0, Tag1 ("Printer", 70)), 1, 0); Tag1 (("context_object", 2633), (0, 0, Tag1 ([(("Variable", 1919), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -29)]), 0, (("printing/printer.mli", 215, 10302, 10304), ("printing/printer.mli", 215, 10302, 10322), 0), 0, Tag1 ("Printer", 77)); (("Axiom", 1920), ([(Tag3 ((("axiom", 2632)), 0, (0)), 100000000, 0, -30); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Label"), "t"), 0, (0)), 100000000, 0, -33); (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -34); (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -35)]), 100000000, 0, -32)], (0)), 100000000, 0, -31)]), 0, (("printing/printer.mli", 216, 10368, 10370), ("printing/printer.mli", 216, 10368, 10432), 0), 0, Tag1 ("Printer", 78)); (("Opaque", 1933), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -36)]), 0, (("printing/printer.mli", 217, 10433, 10435), ("printing/printer.mli", 217, 10433, 10457), 0), 0, Tag1 ("Printer", 79)); (("Transparent", 1934), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -37)]), 0, (("printing/printer.mli", 218, 10488, 10490), ("printing/printer.mli", 218, 10488, 10517), 0), 0, Tag1 ("Printer", 80))], 0), 1, 0, 0, 0, 0, 0, (("printing/printer.mli", 214, 10280, 10280), ("printing/printer.mli", 218, 10488, 10517), 0), 0, 0, 0, Tag1 ("Printer", 76)), 1, 0); Tag3 (("ContextObjectSet", 2634), 0, (Tag1 ([Tag1 (("elt", 2642), (0, 0, 0, 1, ((Tag3 ((("context_object", 2633)), 0, (0)), 100000000, 0, -810)), 0, 0, 0, 0, (("printing/printer.mli", 220, 10519, 10556), ("printing/printer.mli", 220, 10519, 10581), 0), 0, 0, 0, Tag1 ("Printer", 81)), 1, 0); Tag1 (("t", 2643), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("set.mli", 74, 2901, 2905), ("set.mli", 74, 2901, 2911), 0), 0, 0, 0, Tag1 ("Stdlib__Set", 4)), 1, 0); (("empty", 2644), ((Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -809), 0, (("set.mli", 77, 2942, 2946), ("set.mli", 77, 2942, 2958), 0), 0, Tag1 ("Stdlib__Set", 5)), 0); (("add", 2645), ((Tag1 (0, (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -808), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -807), (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -806), 0), 100000000, 0, -805), 0), 100000000, 0, -804), 0, (("set.mli", 80, 2986, 2990), ("set.mli", 80, 2986, 3012), 0), 0, Tag1 ("Stdlib__Set", 6)), 0); (("singleton", 2646), ((Tag1 (0, (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -803), (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -802), 0), 100000000, 0, -801), 0, (("set.mli", 86, 3278, 3282), ("set.mli", 86, 3278, 3305), 0), 0, Tag1 ("Stdlib__Set", 7)), 0); (("remove", 2647), ((Tag1 (0, (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -800), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -799), (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -798), 0), 100000000, 0, -797), 0), 100000000, 0, -796), 0, (("set.mli", 89, 3381, 3385), ("set.mli", 89, 3381, 3410), 0), 0, Tag1 ("Stdlib__Set", 8)), 0); (("union", 2648), ((Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -795), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -794), (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -793), 0), 100000000, 0, -792), 0), 100000000, 0, -791), 0, (("set.mli", 95, 3677, 3681), ("set.mli", 95, 3677, 3703), 0), 0, Tag1 ("Stdlib__Set", 9)), 0); (("inter", 2649), ((Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -790), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -789), (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -788), 0), 100000000, 0, -787), 0), 100000000, 0, -786), 0, (("set.mli", 98, 3727, 3731), ("set.mli", 98, 3727, 3753), 0), 0, Tag1 ("Stdlib__Set", 10)), 0); (("disjoint", 2650), ((Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -785), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -784), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -783), 0), 100000000, 0, -782), 0), 100000000, 0, -781), 0, (("set.mli", 101, 3784, 3788), ("set.mli", 101, 3784, 3816), 0), 0, Tag1 ("Stdlib__Set", 11)), 0); (("diff", 2651), ((Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -780), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -779), (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -778), 0), 100000000, 0, -777), 0), 100000000, 0, -776), 0, (("set.mli", 105, 3880, 3884), ("set.mli", 105, 3880, 3905), 0), 0, Tag1 ("Stdlib__Set", 12)), 0); (("cardinal", 2652), ((Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -775), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -774), 0), 100000000, 0, -773), 0, (("set.mli", 109, 4007, 4011), ("set.mli", 109, 4007, 4033), 0), 0, Tag1 ("Stdlib__Set", 13)), 0); (("elements", 2653), ((Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -772), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -771)], (0)), 100000000, 0, -770), 0), 100000000, 0, -769), 0, (("set.mli", 114, 4120, 4124), ("set.mli", 114, 4120, 4151), 0), 0, Tag1 ("Stdlib__Set", 14)), 0); (("min_elt", 2654), ((Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -768), (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -767), 0), 100000000, 0, -766), 0, (("set.mli", 120, 4380, 4384), ("set.mli", 120, 4380, 4405), 0), 0, Tag1 ("Stdlib__Set", 15)), 0); (("min_elt_opt", 2655), ((Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -765), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -764)], (0)), 100000000, 0, -763), 0), 100000000, 0, -762), 0, (("set.mli", 125, 4567, 4571), ("set.mli", 125, 4567, 4603), 0), 0, Tag1 ("Stdlib__Set", 16)), 0); (("max_elt", 2656), ((Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -761), (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -760), 0), 100000000, 0, -759), 0, (("set.mli", 131, 4774, 4778), ("set.mli", 131, 4774, 4799), 0), 0, Tag1 ("Stdlib__Set", 17)), 0); (("max_elt_opt", 2657), ((Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -758), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -757)], (0)), 100000000, 0, -756), 0), 100000000, 0, -755), 0, (("set.mli", 135, 4890, 4894), ("set.mli", 135, 4890, 4926), 0), 0, Tag1 ("Stdlib__Set", 18)), 0); (("choose", 2658), ((Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -754), (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -753), 0), 100000000, 0, -752), 0, (("set.mli", 140, 5041, 5045), ("set.mli", 140, 5041, 5065), 0), 0, Tag1 ("Stdlib__Set", 19)), 0); (("choose_opt", 2659), ((Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -751), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -750)], (0)), 100000000, 0, -749), 0), 100000000, 0, -748), 0, (("set.mli", 145, 5263, 5267), ("set.mli", 145, 5263, 5298), 0), 0, Tag1 ("Stdlib__Set", 20)), 0); (("find", 2660), ((Tag1 (0, (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -747), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -746), (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -745), 0), 100000000, 0, -744), 0), 100000000, 0, -743), 0, (("set.mli", 153, 5541, 5549), ("set.mli", 153, 5541, 5574), 0), 0, Tag1 ("Stdlib__Set", 21)), 0); (("find_opt", 2661), ((Tag1 (0, (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -742), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -741), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -740)], (0)), 100000000, 0, -739), 0), 100000000, 0, -738), 0), 100000000, 0, -737), 0, (("set.mli", 159, 5752, 5756), ("set.mli", 159, 5752, 5792), 0), 0, Tag1 ("Stdlib__Set", 22)), 0); (("find_first", 2662), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -736), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -735), 0), 100000000, 0, -734), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -733), (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -732), 0), 100000000, 0, -731), 0), 100000000, 0, -730), 0, (("set.mli", 165, 5963, 5967), ("set.mli", 165, 5963, 6008), 0), 0, Tag1 ("Stdlib__Set", 23)), 0); (("find_first_opt", 2663), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -729), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -728), 0), 100000000, 0, -727), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -726), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -725)], (0)), 100000000, 0, -724), 0), 100000000, 0, -723), 0), 100000000, 0, -722), 0, (("set.mli", 177, 6482, 6486), ("set.mli", 177, 6482, 6538), 0), 0, Tag1 ("Stdlib__Set", 24)), 0); (("find_last", 2664), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -721), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -720), 0), 100000000, 0, -719), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -718), (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -717), 0), 100000000, 0, -716), 0), 100000000, 0, -715), 0, (("set.mli", 184, 6779, 6783), ("set.mli", 184, 6779, 6823), 0), 0, Tag1 ("Stdlib__Set", 25)), 0); (("find_last_opt", 2665), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -714), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -713), 0), 100000000, 0, -712), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -711), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -710)], (0)), 100000000, 0, -709), 0), 100000000, 0, -708), 0), 100000000, 0, -707), 0, (("set.mli", 190, 7044, 7048), ("set.mli", 190, 7044, 7099), 0), 0, Tag1 ("Stdlib__Set", 26)), 0); (("iter", 2666), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -706), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -705), 0), 100000000, 0, -704), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -703), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -702), 0), 100000000, 0, -701), 0), 100000000, 0, -700), 0, (("set.mli", 198, 7371, 7375), ("set.mli", 198, 7371, 7411), 0), 0, Tag1 ("Stdlib__Set", 27)), 0); (("fold", 2667), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -699), (Tag1 (0, ((("acc")), 100000000, 0, -695), ((("acc")), 100000000, 0, -695), 0), 100000000, 0, -698), 0), 100000000, 0, -697), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -696), (Tag1 (0, ((("acc")), 100000000, 0, -695), ((("acc")), 100000000, 0, -695), 0), 100000000, 0, -694), 0), 100000000, 0, -693), 0), 100000000, 0, -692), 0, (("set.mli", 203, 7616, 7620), ("set.mli", 203, 7616, 7672), 0), 0, Tag1 ("Stdlib__Set", 28)), 0); (("map", 2668), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -691), (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -690), 0), 100000000, 0, -689), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -688), (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -687), 0), 100000000, 0, -686), 0), 100000000, 0, -685), 0, (("set.mli", 209, 7860, 7864), ("set.mli", 209, 7860, 7895), 0), 0, Tag1 ("Stdlib__Set", 29)), 0); (("filter", 2669), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -684), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -683), 0), 100000000, 0, -682), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -681), (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -680), 0), 100000000, 0, -679), 0), 100000000, 0, -678), 0, (("set.mli", 221, 8372, 8376), ("set.mli", 221, 8372, 8411), 0), 0, Tag1 ("Stdlib__Set", 30)), 0); (("filter_map", 2670), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -677), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -676)], (0)), 100000000, 0, -675), 0), 100000000, 0, -674), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -673), (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -672), 0), 100000000, 0, -671), 0), 100000000, 0, -670), 0, (("set.mli", 228, 8710, 8714), ("set.mli", 228, 8710, 8759), 0), 0, Tag1 ("Stdlib__Set", 31)), 0); (("partition", 2671), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -669), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -668), 0), 100000000, 0, -667), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -666), (Tag2 ([(Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -664); (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -665)]), 100000000, 0, -663), 0), 100000000, 0, -662), 0), 100000000, 0, -661), 0, (("set.mli", 243, 9275, 9279), ("set.mli", 243, 9275, 9321), 0), 0, Tag1 ("Stdlib__Set", 32)), 0); (("split", 2672), ((Tag1 (0, (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -660), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -659), (Tag2 ([(Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -656); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -657); (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -658)]), 100000000, 0, -655), 0), 100000000, 0, -654), 0), 100000000, 0, -653), 0, (("set.mli", 249, 9562, 9566), ("set.mli", 249, 9562, 9601), 0), 0, Tag1 ("Stdlib__Set", 33)), 0); (("is_empty", 2673), ((Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -652), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -651), 0), 100000000, 0, -650), 0, (("set.mli", 260, 10020, 10024), ("set.mli", 260, 10020, 10047), 0), 0, Tag1 ("Stdlib__Set", 34)), 0); (("mem", 2674), ((Tag1 (0, (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -649), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -648), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -647), 0), 100000000, 0, -646), 0), 100000000, 0, -645), 0, (("set.mli", 263, 10096, 10100), ("set.mli", 263, 10096, 10125), 0), 0, Tag1 ("Stdlib__Set", 35)), 0); (("equal", 2675), ((Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -644), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -643), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -642), 0), 100000000, 0, -641), 0), 100000000, 0, -640), 0, (("set.mli", 266, 10190, 10194), ("set.mli", 266, 10190, 10219), 0), 0, Tag1 ("Stdlib__Set", 36)), 0); (("compare", 2676), ((Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -639), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -638), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -637), 0), 100000000, 0, -636), 0), 100000000, 0, -635), 0, (("set.mli", 270, 10335, 10339), ("set.mli", 270, 10335, 10365), 0), 0, Tag1 ("Stdlib__Set", 37)), 0); (("subset", 2677), ((Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -634), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -633), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -632), 0), 100000000, 0, -631), 0), 100000000, 0, -630), 0, (("set.mli", 274, 10476, 10480), ("set.mli", 274, 10476, 10506), 0), 0, Tag1 ("Stdlib__Set", 38)), 0); (("for_all", 2678), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -629), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -628), 0), 100000000, 0, -627), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -626), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -625), 0), 100000000, 0, -624), 0), 100000000, 0, -623), 0, (("set.mli", 278, 10598, 10602), ("set.mli", 278, 10598, 10641), 0), 0, Tag1 ("Stdlib__Set", 39)), 0); (("exists", 2679), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -622), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -621), 0), 100000000, 0, -620), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -619), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -618), 0), 100000000, 0, -617), 0), 100000000, 0, -616), 0, (("set.mli", 282, 10737, 10741), ("set.mli", 282, 10737, 10779), 0), 0, Tag1 ("Stdlib__Set", 40)), 0); (("to_list", 2680), ((Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -615), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -614)], (0)), 100000000, 0, -613), 0), 100000000, 0, -612), 0, (("set.mli", 288, 10922, 10926), ("set.mli", 288, 10922, 10953), 0), 0, Tag1 ("Stdlib__Set", 41)), 0); (("of_list", 2681), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -611)], (0)), 100000000, 0, -610), (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -609), 0), 100000000, 0, -608), 0, (("set.mli", 292, 11017, 11021), ("set.mli", 292, 11017, 11047), 0), 0, Tag1 ("Stdlib__Set", 42)), 0); (("to_seq_from", 2682), ((Tag1 (0, (Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -607), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -606), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -605)], (0)), 100000000, 0, -604), 0), 100000000, 0, -603), 0), 100000000, 0, -602), 0, (("set.mli", 298, 11268, 11272), ("set.mli", 298, 11268, 11311), 0), 0, Tag1 ("Stdlib__Set", 43)), 0); (("to_seq", 2683), ((Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -601), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -600)], (0)), 100000000, 0, -599), 0), 100000000, 0, -598), 0, (("set.mli", 303, 11453, 11457), ("set.mli", 303, 11453, 11484), 0), 0, Tag1 ("Stdlib__Set", 44)), 0); (("to_rev_seq", 2684), ((Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -597), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -596)], (0)), 100000000, 0, -595), 0), 100000000, 0, -594), 0, (("set.mli", 307, 11562, 11566), ("set.mli", 307, 11562, 11597), 0), 0, Tag1 ("Stdlib__Set", 45)), 0); (("add_seq", 2685), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -593)], (0)), 100000000, 0, -592), (Tag1 (0, (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -591), (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -590), 0), 100000000, 0, -589), 0), 100000000, 0, -588), 0, (("set.mli", 311, 11676, 11680), ("set.mli", 311, 11676, 11713), 0), 0, Tag1 ("Stdlib__Set", 46)), 0); (("of_seq", 2686), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((("elt", 2642)), 0, (0)), 100000000, 0, -587)], (0)), 100000000, 0, -586), (Tag3 ((("t", 2643)), 0, (0)), 100000000, 0, -585), 0), 100000000, 0, -584), 0, (("set.mli", 315, 11791, 11795), ("set.mli", 315, 11791, 11822), 0), 0, Tag1 ("Stdlib__Set", 47)), 0)]), 0, (("printing/printer.mli", 220, 10519, 10519), ("printing/printer.mli", 220, 10519, 10581), 0), Tag1 ("Printer", 82)), 0, 0); Tag3 (("ContextObjectMap", 2635), 0, (Tag1 ([Tag1 (("key", 2687), (0, 0, 0, 1, ((Tag3 ((("context_object", 2633)), 0, (0)), 100000000, 0, -1110)), 0, 0, 0, 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, 0, 0, Tag1 ("Printer", 83)), 1, 0); Tag1 (("t", 2688), ([((("a")), 100000000, 0, -1109)], 1, 0, 1, 0, [1], [2], 0, 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, 0, 0, Tag1 ("CSig", 36)), 1, 0); (("empty", 2689), ((Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1108)], (0)), 100000000, 0, -1107), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 37)), 0); (("is_empty", 2690), ((Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1106)], (0)), 100000000, 0, -1105), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1104), 0), 100000000, 0, -1103), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 38)), 0); (("mem", 2691), ((Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -1102), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1101)], (0)), 100000000, 0, -1100), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1099), 0), 100000000, 0, -1098), 0), 100000000, 0, -1097), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 39)), 0); (("add", 2692), ((Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -1096), (Tag1 (0, ((("a")), 100000000, 0, -1094), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1094)], (0)), 100000000, 0, -1095), (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1094)], (0)), 100000000, 0, -1093), 0), 100000000, 0, -1092), 0), 100000000, 0, -1091), 0), 100000000, 0, -1090), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 40)), 0); (("update", 2693), ((Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -1089), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -1084)], (0)), 100000000, 0, -1088), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -1084)], (0)), 100000000, 0, -1087), 0), 100000000, 0, -1086), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1084)], (0)), 100000000, 0, -1085), (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1084)], (0)), 100000000, 0, -1083), 0), 100000000, 0, -1082), 0), 100000000, 0, -1081), 0), 100000000, 0, -1080), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 41)), 0); (("singleton", 2694), ((Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -1079), (Tag1 (0, ((("a")), 100000000, 0, -1078), (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1078)], (0)), 100000000, 0, -1077), 0), 100000000, 0, -1076), 0), 100000000, 0, -1075), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 42)), 0); (("remove", 2695), ((Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -1074), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1072)], (0)), 100000000, 0, -1073), (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1072)], (0)), 100000000, 0, -1071), 0), 100000000, 0, -1070), 0), 100000000, 0, -1069), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 43)), 0); (("merge", 2696), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -1068), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -1061)], (0)), 100000000, 0, -1067), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -1059)], (0)), 100000000, 0, -1066), (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -1057)], (0)), 100000000, 0, -1065), 0), 100000000, 0, -1064), 0), 100000000, 0, -1063), 0), 100000000, 0, -1062), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1061)], (0)), 100000000, 0, -1060), (Tag1 (0, (Tag3 ((("t", 2688)), [((("b")), 100000000, 0, -1059)], (0)), 100000000, 0, -1058), (Tag3 ((("t", 2688)), [((("c")), 100000000, 0, -1057)], (0)), 100000000, 0, -1056), 0), 100000000, 0, -1055), 0), 100000000, 0, -1054), 0), 100000000, 0, -1053), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 44)), 0); (("union", 2697), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -1052), (Tag1 (0, ((("a")), 100000000, 0, -1045), (Tag1 (0, ((("a")), 100000000, 0, -1045), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -1045)], (0)), 100000000, 0, -1051), 0), 100000000, 0, -1050), 0), 100000000, 0, -1049), 0), 100000000, 0, -1048), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1045)], (0)), 100000000, 0, -1047), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1045)], (0)), 100000000, 0, -1046), (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1045)], (0)), 100000000, 0, -1044), 0), 100000000, 0, -1043), 0), 100000000, 0, -1042), 0), 100000000, 0, -1041), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 45)), 0); (("compare", 2698), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -1036), (Tag1 (0, ((("a")), 100000000, 0, -1036), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1040), 0), 100000000, 0, -1039), 0), 100000000, 0, -1038), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1036)], (0)), 100000000, 0, -1037), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1036)], (0)), 100000000, 0, -1035), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1034), 0), 100000000, 0, -1033), 0), 100000000, 0, -1032), 0), 100000000, 0, -1031), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 46)), 0); (("equal", 2699), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -1026), (Tag1 (0, ((("a")), 100000000, 0, -1026), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1030), 0), 100000000, 0, -1029), 0), 100000000, 0, -1028), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1026)], (0)), 100000000, 0, -1027), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1026)], (0)), 100000000, 0, -1025), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1024), 0), 100000000, 0, -1023), 0), 100000000, 0, -1022), 0), 100000000, 0, -1021), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 47)), 0); (("iter", 2700), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -1020), (Tag1 (0, ((("a")), 100000000, 0, -1016), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1019), 0), 100000000, 0, -1018), 0), 100000000, 0, -1017), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1016)], (0)), 100000000, 0, -1015), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1014), 0), 100000000, 0, -1013), 0), 100000000, 0, -1012), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 48)), 0); (("fold", 2701), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -1011), (Tag1 (0, ((("a")), 100000000, 0, -1007), (Tag1 (0, ((("b")), 100000000, 0, -1005), ((("b")), 100000000, 0, -1005), 0), 100000000, 0, -1010), 0), 100000000, 0, -1009), 0), 100000000, 0, -1008), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1007)], (0)), 100000000, 0, -1006), (Tag1 (0, ((("b")), 100000000, 0, -1005), ((("b")), 100000000, 0, -1005), 0), 100000000, 0, -1004), 0), 100000000, 0, -1003), 0), 100000000, 0, -1002), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 49)), 0); (("for_all", 2702), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -1001), (Tag1 (0, ((("a")), 100000000, 0, -997), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1000), 0), 100000000, 0, -999), 0), 100000000, 0, -998), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -997)], (0)), 100000000, 0, -996), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -995), 0), 100000000, 0, -994), 0), 100000000, 0, -993), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 50)), 0); (("exists", 2703), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -992), (Tag1 (0, ((("a")), 100000000, 0, -988), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -991), 0), 100000000, 0, -990), 0), 100000000, 0, -989), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -988)], (0)), 100000000, 0, -987), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -986), 0), 100000000, 0, -985), 0), 100000000, 0, -984), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 51)), 0); (("filter", 2704), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -983), (Tag1 (0, ((("a")), 100000000, 0, -978), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -982), 0), 100000000, 0, -981), 0), 100000000, 0, -980), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -978)], (0)), 100000000, 0, -979), (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -978)], (0)), 100000000, 0, -977), 0), 100000000, 0, -976), 0), 100000000, 0, -975), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 52)), 0); (("partition", 2705), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -974), (Tag1 (0, ((("a")), 100000000, 0, -968), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -973), 0), 100000000, 0, -972), 0), 100000000, 0, -971), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -968)], (0)), 100000000, 0, -970), (Tag2 ([(Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -968)], (0)), 100000000, 0, -967); (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -968)], (0)), 100000000, 0, -969)]), 100000000, 0, -966), 0), 100000000, 0, -965), 0), 100000000, 0, -964), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 53)), 0); (("cardinal", 2706), ((Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -963)], (0)), 100000000, 0, -962), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -961), 0), 100000000, 0, -960), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 54)), 0); (("bindings", 2707), ((Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -958)], (0)), 100000000, 0, -959), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -957); ((("a")), 100000000, 0, -958)]), 100000000, 0, -956)], (0)), 100000000, 0, -955), 0), 100000000, 0, -954), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 55)), 0); (("min_binding", 2708), ((Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -952)], (0)), 100000000, 0, -953), (Tag2 ([(Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -951); ((("a")), 100000000, 0, -952)]), 100000000, 0, -950), 0), 100000000, 0, -949), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 56)), 0); (("max_binding", 2709), ((Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -947)], (0)), 100000000, 0, -948), (Tag2 ([(Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -946); ((("a")), 100000000, 0, -947)]), 100000000, 0, -945), 0), 100000000, 0, -944), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 57)), 0); (("choose", 2710), ((Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -942)], (0)), 100000000, 0, -943), (Tag2 ([(Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -941); ((("a")), 100000000, 0, -942)]), 100000000, 0, -940), 0), 100000000, 0, -939), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 58)), 0); (("choose_opt", 2711), ((Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -937)], (0)), 100000000, 0, -938), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -936); ((("a")), 100000000, 0, -937)]), 100000000, 0, -935)], (0)), 100000000, 0, -934), 0), 100000000, 0, -933), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 59)), 0); (("split", 2712), ((Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -932), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -928)], (0)), 100000000, 0, -931), (Tag2 ([(Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -928)], (0)), 100000000, 0, -927); (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -928)], (0)), 100000000, 0, -929); (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -928)], (0)), 100000000, 0, -930)]), 100000000, 0, -926), 0), 100000000, 0, -925), 0), 100000000, 0, -924), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 60)), 0); (("find", 2713), ((Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -923), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -921)], (0)), 100000000, 0, -922), ((("a")), 100000000, 0, -921), 0), 100000000, 0, -920), 0), 100000000, 0, -919), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 61)), 0); (("find_opt", 2714), ((Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -918), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -916)], (0)), 100000000, 0, -917), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -916)], (0)), 100000000, 0, -915), 0), 100000000, 0, -914), 0), 100000000, 0, -913), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 62)), 0); (("map", 2715), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -911), ((("b")), 100000000, 0, -909), 0), 100000000, 0, -912), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -911)], (0)), 100000000, 0, -910), (Tag3 ((("t", 2688)), [((("b")), 100000000, 0, -909)], (0)), 100000000, 0, -908), 0), 100000000, 0, -907), 0), 100000000, 0, -906), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 63)), 0); (("mapi", 2716), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -905), (Tag1 (0, ((("a")), 100000000, 0, -902), ((("b")), 100000000, 0, -900), 0), 100000000, 0, -904), 0), 100000000, 0, -903), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -902)], (0)), 100000000, 0, -901), (Tag3 ((("t", 2688)), [((("b")), 100000000, 0, -900)], (0)), 100000000, 0, -899), 0), 100000000, 0, -898), 0), 100000000, 0, -897), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CSig", 64)), 0); (("get", 2717), ((Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -896), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -894)], (0)), 100000000, 0, -895), ((("a")), 100000000, 0, -894), 0), 100000000, 0, -893), 0), 100000000, 0, -892), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CMap", 10)), 0); (("set", 2718), ((Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -891), (Tag1 (0, ((("a")), 100000000, 0, -889), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -889)], (0)), 100000000, 0, -890), (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -889)], (0)), 100000000, 0, -888), 0), 100000000, 0, -887), 0), 100000000, 0, -886), 0), 100000000, 0, -885), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CMap", 11)), 0); (("modify", 2719), ((Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -884), (Tag1 (0, (Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -883), (Tag1 (0, ((("a")), 100000000, 0, -879), ((("a")), 100000000, 0, -879), 0), 100000000, 0, -882), 0), 100000000, 0, -881), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -879)], (0)), 100000000, 0, -880), (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -879)], (0)), 100000000, 0, -878), 0), 100000000, 0, -877), 0), 100000000, 0, -876), 0), 100000000, 0, -875), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CMap", 12)), 0); (("domain", 2720), ((Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -874)], (0)), 100000000, 0, -873), (Tag3 (Tag1 ((("ContextObjectSet", 2634)), "t"), 0, (0)), 100000000, 0, -872), 0), 100000000, 0, -871), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CMap", 13)), 0); (("bind", 2721), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -870), ((("a")), 100000000, 0, -867), 0), 100000000, 0, -869), (Tag1 (0, (Tag3 (Tag1 ((("ContextObjectSet", 2634)), "t"), 0, (0)), 100000000, 0, -868), (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -867)], (0)), 100000000, 0, -866), 0), 100000000, 0, -865), 0), 100000000, 0, -864), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CMap", 14)), 0); (("fold_left", 2722), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -863), (Tag1 (0, ((("a")), 100000000, 0, -859), (Tag1 (0, ((("b")), 100000000, 0, -857), ((("b")), 100000000, 0, -857), 0), 100000000, 0, -862), 0), 100000000, 0, -861), 0), 100000000, 0, -860), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -859)], (0)), 100000000, 0, -858), (Tag1 (0, ((("b")), 100000000, 0, -857), ((("b")), 100000000, 0, -857), 0), 100000000, 0, -856), 0), 100000000, 0, -855), 0), 100000000, 0, -854), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CMap", 15)), 0); (("fold_right", 2723), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -853), (Tag1 (0, ((("a")), 100000000, 0, -849), (Tag1 (0, ((("b")), 100000000, 0, -847), ((("b")), 100000000, 0, -847), 0), 100000000, 0, -852), 0), 100000000, 0, -851), 0), 100000000, 0, -850), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -849)], (0)), 100000000, 0, -848), (Tag1 (0, ((("b")), 100000000, 0, -847), ((("b")), 100000000, 0, -847), 0), 100000000, 0, -846), 0), 100000000, 0, -845), 0), 100000000, 0, -844), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CMap", 16)), 0); (("height", 2724), ((Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -843)], (0)), 100000000, 0, -842), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -841), 0), 100000000, 0, -840), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CMap", 17)), 0); (("filter_range", 2725), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -839), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -838), 0), 100000000, 0, -837), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -835)], (0)), 100000000, 0, -836), (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -835)], (0)), 100000000, 0, -834), 0), 100000000, 0, -833), 0), 100000000, 0, -832), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CMap", 18)), 0); (("of_list", 2726), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -831); ((("a")), 100000000, 0, -828)]), 100000000, 0, -830)], (0)), 100000000, 0, -829), (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -828)], (0)), 100000000, 0, -827), 0), 100000000, 0, -826), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CMap", 19)), 0); (("symmetric_diff_fold", 2727), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -825), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -817)], (0)), 100000000, 0, -824), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -817)], (0)), 100000000, 0, -823), (Tag1 (0, ((("b")), 100000000, 0, -815), ((("b")), 100000000, 0, -815), 0), 100000000, 0, -822), 0), 100000000, 0, -821), 0), 100000000, 0, -820), 0), 100000000, 0, -819), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -817)], (0)), 100000000, 0, -818), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -817)], (0)), 100000000, 0, -816), (Tag1 (0, ((("b")), 100000000, 0, -815), ((("b")), 100000000, 0, -815), 0), 100000000, 0, -814), 0), 100000000, 0, -813), 0), 100000000, 0, -812), 0), 100000000, 0, -811), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CMap", 20)), 0); Tag3 (("Smart", 2728), 0, (Tag1 ([(("map", 2731), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -1122), ((("a")), 100000000, 0, -1122), 0), 100000000, 0, -1124), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1122)], (0)), 100000000, 0, -1123), (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1122)], (0)), 100000000, 0, -1121), 0), 100000000, 0, -1120), 0), 100000000, 0, -1119), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CMap", 21)), 0); (("mapi", 2732), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -1118), (Tag1 (0, ((("a")), 100000000, 0, -1114), ((("a")), 100000000, 0, -1114), 0), 100000000, 0, -1117), 0), 100000000, 0, -1116), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1114)], (0)), 100000000, 0, -1115), (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1114)], (0)), 100000000, 0, -1113), 0), 100000000, 0, -1112), 0), 100000000, 0, -1111), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CMap", 22)), 0)]), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), Tag1 ("CMap", 23)), 0, 0); Tag3 (("Monad", 2729), 0, (Tag2 (((("M", 2730)), (Tag1 ((Tag2 ("CMap")), "MonadS"))), Tag1 ([(("fold", 2733), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -1171), (Tag1 (0, ((("a")), 100000000, 0, -1166), (Tag1 (0, ((("b")), 100000000, 0, -1164), (Tag3 (Tag1 ((("M", 2730)), "t"), [((("b")), 100000000, 0, -1164)], (0)), 100000000, 0, -1170), 0), 100000000, 0, -1169), 0), 100000000, 0, -1168), 0), 100000000, 0, -1167), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1166)], (0)), 100000000, 0, -1165), (Tag1 (0, ((("b")), 100000000, 0, -1164), (Tag3 (Tag1 ((("M", 2730)), "t"), [((("b")), 100000000, 0, -1164)], (0)), 100000000, 0, -1163), 0), 100000000, 0, -1162), 0), 100000000, 0, -1161), 0), 100000000, 0, -1160), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CMap", 25)), 0); (("fold_left", 2734), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -1159), (Tag1 (0, ((("a")), 100000000, 0, -1154), (Tag1 (0, ((("b")), 100000000, 0, -1152), (Tag3 (Tag1 ((("M", 2730)), "t"), [((("b")), 100000000, 0, -1152)], (0)), 100000000, 0, -1158), 0), 100000000, 0, -1157), 0), 100000000, 0, -1156), 0), 100000000, 0, -1155), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1154)], (0)), 100000000, 0, -1153), (Tag1 (0, ((("b")), 100000000, 0, -1152), (Tag3 (Tag1 ((("M", 2730)), "t"), [((("b")), 100000000, 0, -1152)], (0)), 100000000, 0, -1151), 0), 100000000, 0, -1150), 0), 100000000, 0, -1149), 0), 100000000, 0, -1148), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CMap", 26)), 0); (("fold_right", 2735), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -1147), (Tag1 (0, ((("a")), 100000000, 0, -1142), (Tag1 (0, ((("b")), 100000000, 0, -1140), (Tag3 (Tag1 ((("M", 2730)), "t"), [((("b")), 100000000, 0, -1140)], (0)), 100000000, 0, -1146), 0), 100000000, 0, -1145), 0), 100000000, 0, -1144), 0), 100000000, 0, -1143), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1142)], (0)), 100000000, 0, -1141), (Tag1 (0, ((("b")), 100000000, 0, -1140), (Tag3 (Tag1 ((("M", 2730)), "t"), [((("b")), 100000000, 0, -1140)], (0)), 100000000, 0, -1139), 0), 100000000, 0, -1138), 0), 100000000, 0, -1137), 0), 100000000, 0, -1136), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CMap", 27)), 0); (("mapi", 2736), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 2687)), 0, (0)), 100000000, 0, -1135), (Tag1 (0, ((("a")), 100000000, 0, -1131), (Tag3 (Tag1 ((("M", 2730)), "t"), [((("b")), 100000000, 0, -1129)], (0)), 100000000, 0, -1134), 0), 100000000, 0, -1133), 0), 100000000, 0, -1132), (Tag1 (0, (Tag3 ((("t", 2688)), [((("a")), 100000000, 0, -1131)], (0)), 100000000, 0, -1130), (Tag3 (Tag1 ((("M", 2730)), "t"), [(Tag3 ((("t", 2688)), [((("b")), 100000000, 0, -1129)], (0)), 100000000, 0, -1128)], (0)), 100000000, 0, -1127), 0), 100000000, 0, -1126), 0), 100000000, 0, -1125), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), 0, Tag1 ("CMap", 28)), 0)])), 0, (("printing/printer.mli", 221, 10582, 10608), ("printing/printer.mli", 222, 10618, 10685), 0), Tag1 ("CMap", 29)), 0, 0)]), 0, (("printing/printer.mli", 221, 10582, 10582), ("printing/printer.mli", 222, 10618, 10685), 0), Tag1 ("Printer", 84)), 0, 0); (("pr_assumptionset", 2636), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -27), (Tag1 (0, (Tag3 (Tag1 ((("ContextObjectMap", 2635)), "t"), [(Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -26)], (0)), 100000000, 0, -25), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("printing/printer.mli", 224, 10687, 10687), ("printing/printer.mli", 224, 10687, 10761), 0), 0, Tag1 ("Printer", 85)), 0); (("pr_goal_by_id", 2637), ((Tag1 (("proof"), (Tag3 (Tag1 ((Tag2 ("Proof")), "t"), 0, (0)), 100000000, 0, -20), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -19), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("printing/printer.mli", 226, 10763, 10763), ("printing/printer.mli", 226, 10763, 10812), 0), 0, Tag1 ("Printer", 86)), 0); (("pr_goal_emacs", 2638), ((Tag1 (("proof"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Proof")), "t"), 0, (0)), 100000000, 0, -15)], (0)), 100000000, 0, -14), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -12), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("printing/printer.mli", 227, 10813, 10813), ("printing/printer.mli", 227, 10813, 10875), 0), 0, Tag1 ("Printer", 87)), 0); (("pr_typing_flags", 2639), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "typing_flags"), 0, (0)), 100000000, 0, -7), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("printing/printer.mli", 229, 10877, 10877), ("printing/printer.mli", 229, 10877, 10932), 0), 0, Tag1 ("Printer", 88)), 0); (("print_goal_names", 2640), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("printing/printer.mli", 232, 10990, 10990), ("printing/printer.mli", 232, 10990, 11025), 0), 0, Tag1 ("Printer", 89)), 0); Tag3 (("Debug", 2641), 0, (Tag1 ([(("pr_goal", 2737), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Proofview")), "Goal"), "t"), 0, (0)), 100000000, 0, -1174), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -1173), 0), 100000000, 0, -1172), 0, (("printing/printer.mli", 237, 11047, 11047), ("printing/printer.mli", 237, 11047, 11085), 0), 0, Tag1 ("Printer", 90)), 0)]), 0, (("printing/printer.mli", 234, 11027, 11027), ("printing/printer.mli", 239, 11087, 11090), 0), Tag1 ("Printer", 91)), 0, 0)], "Printer", [("Printer", ("\181\185\146L\170~\225,o\154X\151\017Z\222\005")); ("Z", ("\253\196\2168\027\199O\134\220\218\031'\1484\233o")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("UnivSubst", ("\190qu\031mc\130\181\003G]\132\"\219m)")); ("UnivProblem", ("6'\161\018\181\001.\253\000\141a6\171\1727\155")); ("UnivNames", ("%\151_\209%+JM$n\001\232\194n\178N")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UState", ("SD\203\215|\136\n\251\239\208\148\215C\n\167\005")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("Type_errors", ("7\157\162-\214M\206\196\228\191\005v\134\177\144\134")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Tacred", ("\133d\143\1310z\030\237\232\002\001\025\147\140\215:")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Store", ("/dT\252\145\179pq\216{\181\206\190K+U")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Random", ("\020\005Xq\171\026\218\152X\135\254\023\133zK\200")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("Section", ("\245\207\b\021\142v=\155#w\246}\"4b\006")); ("Safe_typing", (")\250?\164\145\132\241\127\186\152h+\145\"\237l")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Reductionops", ("\179\023P\218\146Uh\014IS\196C\031q~#")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Proofview_monad", ("\218\196\189S\147\216\129\221\231\224v\228O\024*\239")); ("Proofview", ("\245\140U\027\236\199\199&\242\156\199YG\250tA")); ("Proof", ("\249\030\200g\248\164o&\tS\132\rTl\1736")); ("Primred", ("\158G\192\182\224\196\144*\174y_E\165\012\137C")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Pattern", ("\195C\140Wb=\022\222\208\227^K\003\020\215X")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("NumTok", ("vd\023^\251\244B\166\145'\156\196-0\027\169")); ("Notation_term", ("5\002\017\217b\193nc>\239\239\237\244\031\173?")); ("Nativevalues", ("8:\007\025e\226c,\001\171\146#l\210\171\152")); ("Nativelib", ("V\239\205Y1\147E:,\176\196Hy\1483|")); ("Nativecode", ("\190\185\255\006m\012\210\163\138Rz\247\15283\183")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Namegen", ("\187\222\224T\255\020\1808-\212*\164\131\177\157x")); ("Monad", ("\244\171T\157\194p\187\160\149\195{\132\222\020\253\148")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Ltac_pretype", ("\224\"\167\018i:U\172>\188\128$\r\252\020T")); ("Logic_monad", ("\130\157\160Q\163vQ\137\184\2242\209\128\024\220i")); ("Locus", ("_\002\003W\246\181\225\242Uf\139\226\176\174\192I")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hook", ("\183\194\223\003\155\169',\187\240a;E\b\1396")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Gramlib__Stream", ("\248\\H\205_76\253\136\146\200\031\165\021=t")); ("Gramlib", ("\154\143\210e\021i\246\176\224\194\220\217\007\145\139A")); ("Goal_select", ("\235$\175\023t\178\194.Ivlz\005\211\173\n")); ("Glob_term", ("\165=a\227\160\153.\021_$\232\209T\236\153O")); ("Genlambda", ("\170}\024\241\141\222\136S\169\219\2212i\134KI")); ("Geninterp", ("2S\151\191\189\159\004\188;\224d\199|U\004\028")); ("Genarg", ("\1434\015\001\152\196\005s\156\136\195\185\247\b3\t")); ("Ftactic", ("K\172\205\128\241\162\160\201\202\1561o\180L\206:")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evd", ("\211\205p\193\216\129r\006\239oN\142ar\196\175")); ("Evar_kinds", ("\023L\186\132\218}\254\221\185\198\220\200h\003{\021")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("EConstr", ("\201aW\156\157;N\004\201V\208\006L\166\211)")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("DAst", ("\224/\200)\007\184ni\134\b\139\204\241\005w\212")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conversion", ("\158\150&\195M\tv\127|\029\158RRK\211A")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constrexpr", ("p'r\245\184chL\183\249\"\213]\1741\237")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CDebug", ("^4\210p7\239!3\138\138\213?\239`\250\157")); ("CClosure", ("\167\b\022\241V-\r\253\b\002\000j]\223%\142")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
module Debug : sig val pr_goal : Proofview.Goal.t -> Pp.t end
