val add_arg :
  Ppxlib__.Import.Caml.Arg.key ->
  Ppxlib__.Import.Caml.Arg.spec -> doc:string -> unit
module Lint_error :
  sig type t val of_string : Ppxlib__.Location.t -> string -> t end
module Cookies :
  sig
    type t
    val get :
      t ->
      string ->
      (Ppxlib__.Import.expression, 'a -> 'a, 'b) Ppxlib__.Ast_pattern.t ->
      'b option
    val get_res :
      t ->
      string ->
      (Ppxlib__.Import.expression, 'a -> 'a, 'b) Ppxlib__.Ast_pattern.t ->
      ('b option, Ppxlib__.Location.Error.t Ppxlib__.Import.NonEmptyList.t)
      result
    val set : t -> string -> Ppxlib__.Import.expression -> unit
    val add_handler : (t -> unit) -> unit
    val add_simple_handler :
      string ->
      (Ppxlib__.Import.expression, 'a -> 'a, 'b) Ppxlib__.Ast_pattern.t ->
      f:('b option -> unit) -> unit
    val add_post_handler : (t -> unit) -> unit
  end
module Instrument :
  sig
    type t
    type pos = Before | After
    val make :
      (Ppxlib__.Import.Parsetree.structure ->
       Ppxlib__.Import.Parsetree.structure) ->
      position:pos -> t
    module V2 :
      sig
        val make :
          (Ppxlib__.Expansion_context.Base.t ->
           Ppxlib__.Import.Parsetree.structure ->
           Ppxlib__.Import.Parsetree.structure) ->
          position:pos -> t
      end
  end
val register_transformation :
  ?extensions:Ppxlib__.Extension.t list ->
  ?rules:Ppxlib__.Context_free.Rule.t list ->
  ?enclose_impl:(Ppxlib__.Location.t option ->
                 Ppxlib__.Import.structure * Ppxlib__.Import.structure) ->
  ?enclose_intf:(Ppxlib__.Location.t option ->
                 Ppxlib__.Import.signature * Ppxlib__.Import.signature) ->
  ?impl:(Ppxlib__.Import.structure -> Ppxlib__.Import.structure) ->
  ?intf:(Ppxlib__.Import.signature -> Ppxlib__.Import.signature) ->
  ?lint_impl:(Ppxlib__.Import.structure -> Lint_error.t list) ->
  ?lint_intf:(Ppxlib__.Import.signature -> Lint_error.t list) ->
  ?preprocess_impl:(Ppxlib__.Import.structure -> Ppxlib__.Import.structure) ->
  ?preprocess_intf:(Ppxlib__.Import.signature -> Ppxlib__.Import.signature) ->
  ?instrument:Instrument.t -> ?aliases:string list -> string -> unit
val register_transformation_using_ocaml_current_ast :
  ?impl:(Ppxlib__.Import.Compiler_version.Ast.Parsetree.structure ->
         Ppxlib__.Import.Compiler_version.Ast.Parsetree.structure) ->
  ?intf:(Ppxlib__.Import.Compiler_version.Ast.Parsetree.signature ->
         Ppxlib__.Import.Compiler_version.Ast.Parsetree.signature) ->
  ?aliases:string list -> string -> unit
val register_code_transformation :
  name:string ->
  ?aliases:string list ->
  impl:(Ppxlib__.Import.structure -> Ppxlib__.Import.structure) ->
  intf:(Ppxlib__.Import.signature -> Ppxlib__.Import.signature) -> unit
val register_correction : loc:Ppxlib__.Location.t -> repl:string -> unit
val register_process_file_hook : (unit -> unit) -> unit
module V2 :
  sig
    val register_transformation :
      ?extensions:Ppxlib__.Extension.t list ->
      ?rules:Ppxlib__.Context_free.Rule.t list ->
      ?enclose_impl:(Ppxlib__.Expansion_context.Base.t ->
                     Ppxlib__.Location.t option ->
                     Ppxlib__.Import.structure * Ppxlib__.Import.structure) ->
      ?enclose_intf:(Ppxlib__.Expansion_context.Base.t ->
                     Ppxlib__.Location.t option ->
                     Ppxlib__.Import.signature * Ppxlib__.Import.signature) ->
      ?impl:(Ppxlib__.Expansion_context.Base.t ->
             Ppxlib__.Import.structure -> Ppxlib__.Import.structure) ->
      ?intf:(Ppxlib__.Expansion_context.Base.t ->
             Ppxlib__.Import.signature -> Ppxlib__.Import.signature) ->
      ?lint_impl:(Ppxlib__.Expansion_context.Base.t ->
                  Ppxlib__.Import.structure -> Lint_error.t list) ->
      ?lint_intf:(Ppxlib__.Expansion_context.Base.t ->
                  Ppxlib__.Import.signature -> Lint_error.t list) ->
      ?preprocess_impl:(Ppxlib__.Expansion_context.Base.t ->
                        Ppxlib__.Import.structure ->
                        Ppxlib__.Import.structure) ->
      ?preprocess_intf:(Ppxlib__.Expansion_context.Base.t ->
                        Ppxlib__.Import.signature ->
                        Ppxlib__.Import.signature) ->
      ?instrument:Instrument.t -> ?aliases:string list -> string -> unit
    val register_transformation_using_ocaml_current_ast :
      ?impl:(Ppxlib__.Expansion_context.Base.t ->
             Ppxlib__.Import.Compiler_version.Ast.Parsetree.structure ->
             Ppxlib__.Import.Compiler_version.Ast.Parsetree.structure) ->
      ?intf:(Ppxlib__.Expansion_context.Base.t ->
             Ppxlib__.Import.Compiler_version.Ast.Parsetree.signature ->
             Ppxlib__.Import.Compiler_version.Ast.Parsetree.signature) ->
      ?aliases:string list -> string -> unit
  end
module Create_file_property :
  functor (Name : sig val name : string end) (T : Ppxlib__.Import.Sexpable.S)
    -> sig val set : T.t -> unit end
val standalone : unit -> unit
val run_as_ppx_rewriter : unit -> unit
val pretty : unit -> bool
val map_structure : Ppxlib__.Import.structure -> Ppxlib__.Import.structure
val map_signature : Ppxlib__.Import.signature -> Ppxlib__.Import.signature
val enable_checks : unit -> unit
val enable_location_check : unit -> unit
("DEBUG:rule", [(("add_arg", 1964), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "Caml"), "Arg"), "key"), 0, (0)), 100000000, 0, -140), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "Caml"), "Arg"), "spec"), 0, (0)), 100000000, 0, -139), (Tag1 (("doc"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -138), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -137), 0), 100000000, 0, -136), 0), 100000000, 0, -135), 0), 100000000, 0, -134), 0, (("src/driver.mli", 9, 208, 208), ("src/driver.mli", 9, 208, 273), 0), 0, Tag1 ("Ppxlib__Driver", 0)), 0); Tag3 (("Lint_error", 1965), 0, (Tag1 ([Tag1 (("t", 1985), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/driver.mli", 14, 376, 378), ("src/driver.mli", 14, 376, 384), 0), 0, 0, 0, Tag1 ("Ppxlib__Driver", 1)), 1, 0); (("of_string", 1986), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -145), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -144), (Tag3 ((("t", 1985)), 0, (0)), 100000000, 0, -143), 0), 100000000, 0, -142), 0), 100000000, 0, -141), 0, (("src/driver.mli", 16, 386, 388), ("src/driver.mli", 16, 386, 429), 0), 0, Tag1 ("Ppxlib__Driver", 2)), 0)]), 0, (("src/driver.mli", 13, 352, 352), ("src/driver.mli", 17, 430, 433), 0), Tag1 ("Ppxlib__Driver", 3)), 0, 0); Tag3 (("Cookies", 1966), 0, (Tag1 ([Tag1 (("t", 1987), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/driver.mli", 20, 456, 458), ("src/driver.mli", 20, 456, 464), 0), 0, 0, 0, Tag1 ("Ppxlib__Driver", 4)), 1, 0); (("get", 1988), ((Tag1 (0, (Tag3 ((("t", 1987)), 0, (0)), 100000000, 0, -200), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -199), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Ast_pattern"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "expression"), 0, (0)), 100000000, 0, -196); (Tag1 (0, ((("a")), 100000000, 0, -198), ((("a")), 100000000, 0, -198), 0), 100000000, 0, -197); ((("b")), 100000000, 0, -194)], (0)), 100000000, 0, -195), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -194)], (0)), 100000000, 0, -193), 0), 100000000, 0, -192), 0), 100000000, 0, -191), 0), 100000000, 0, -190), 0, (("src/driver.mli", 22, 466, 468), ("src/driver.mli", 22, 466, 546), 0), 0, Tag1 ("Ppxlib__Driver", 5)), 0); (("get_res", 1989), ((Tag1 (0, (Tag3 ((("t", 1987)), 0, (0)), 100000000, 0, -189), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -188), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Ast_pattern"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "expression"), 0, (0)), 100000000, 0, -185); (Tag1 (0, ((("a")), 100000000, 0, -187), ((("a")), 100000000, 0, -187), 0), 100000000, 0, -186); ((("b")), 100000000, 0, -181)], (0)), 100000000, 0, -184), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -181)], (0)), 100000000, 0, -180); (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "NonEmptyList"), "t"), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Location"), "Error"), "t"), 0, (0)), 100000000, 0, -183)], (0)), 100000000, 0, -182)], (0)), 100000000, 0, -179), 0), 100000000, 0, -178), 0), 100000000, 0, -177), 0), 100000000, 0, -176), 0, (("src/driver.mli", 26, 680, 682), ("src/driver.mli", 30, 767, 822), 0), 0, Tag1 ("Ppxlib__Driver", 6)), 0); (("set", 1990), ((Tag1 (0, (Tag3 ((("t", 1987)), 0, (0)), 100000000, 0, -175), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -174), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "expression"), 0, (0)), 100000000, 0, -173), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -172), 0), 100000000, 0, -171), 0), 100000000, 0, -170), 0), 100000000, 0, -169), 0, (("src/driver.mli", 35, 997, 999), ("src/driver.mli", 35, 997, 1042), 0), 0, Tag1 ("Ppxlib__Driver", 7)), 0); (("add_handler", 1991), ((Tag1 (0, (Tag1 (0, (Tag3 ((("t", 1987)), 0, (0)), 100000000, 0, -168), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -167), 0), 100000000, 0, -166), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -165), 0), 100000000, 0, -164), 0, (("src/driver.mli", 38, 1106, 1108), ("src/driver.mli", 38, 1106, 1145), 0), 0, Tag1 ("Ppxlib__Driver", 8)), 0); (("add_simple_handler", 1992), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -163), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Ast_pattern"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "expression"), 0, (0)), 100000000, 0, -160); (Tag1 (0, ((("a")), 100000000, 0, -162), ((("a")), 100000000, 0, -162), 0), 100000000, 0, -161); ((("b")), 100000000, 0, -158)], (0)), 100000000, 0, -159), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -158)], (0)), 100000000, 0, -157), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -156), 0), 100000000, 0, -155), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -154), 0), 100000000, 0, -153), 0), 100000000, 0, -152), 0), 100000000, 0, -151), 0, (("src/driver.mli", 45, 1450, 1452), ("src/driver.mli", 49, 1568, 1576), 0), 0, Tag1 ("Ppxlib__Driver", 9)), 0); (("add_post_handler", 1993), ((Tag1 (0, (Tag1 (0, (Tag3 ((("t", 1987)), 0, (0)), 100000000, 0, -150), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -149), 0), 100000000, 0, -148), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -147), 0), 100000000, 0, -146), 0, (("src/driver.mli", 52, 1650, 1652), ("src/driver.mli", 52, 1650, 1694), 0), 0, Tag1 ("Ppxlib__Driver", 10)), 0)]), 0, (("src/driver.mli", 19, 435, 435), ("src/driver.mli", 55, 1836, 1839), 0), Tag1 ("Ppxlib__Driver", 11)), 0, 0); Tag3 (("Instrument", 1967), 0, (Tag1 ([Tag1 (("t", 1994), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/driver.mli", 58, 1865, 1867), ("src/driver.mli", 58, 1865, 1873), 0), 0, 0, 0, Tag1 ("Ppxlib__Driver", 12)), 1, 0); Tag1 (("pos", 1995), (0, 0, Tag1 ([(("Before", 1329), (0), 0, (("src/driver.mli", 59, 1874, 1887), ("src/driver.mli", 59, 1874, 1893), 0), 0, Tag1 ("Ppxlib__Driver", 14)); (("After", 1330), (0), 0, (("src/driver.mli", 59, 1874, 1894), ("src/driver.mli", 59, 1874, 1901), 0), 0, Tag1 ("Ppxlib__Driver", 15))], 0), 1, 0, 0, 0, 0, 0, (("src/driver.mli", 59, 1874, 1876), ("src/driver.mli", 59, 1874, 1901), 0), 0, 1, 0, Tag1 ("Ppxlib__Driver", 13)), 1, 0); (("make", 1996), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -207), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -206), 0), 100000000, 0, -205), (Tag1 (("position"), (Tag3 ((("pos", 1995)), 0, (0)), 100000000, 0, -204), (Tag3 ((("t", 1994)), 0, (0)), 100000000, 0, -203), 0), 100000000, 0, -202), 0), 100000000, 0, -201), 0, (("src/driver.mli", 61, 1903, 1905), ("src/driver.mli", 61, 1903, 1981), 0), 0, Tag1 ("Ppxlib__Driver", 16)), 0); Tag3 (("V2", 1997), 0, (Tag1 ([(("make", 1998), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Expansion_context"), "Base"), "t"), 0, (0)), 100000000, 0, -216), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -215), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -214), 0), 100000000, 0, -213), 0), 100000000, 0, -212), (Tag1 (("position"), (Tag3 ((("pos", 1995)), 0, (0)), 100000000, 0, -211), (Tag3 ((("t", 1994)), 0, (0)), 100000000, 0, -210), 0), 100000000, 0, -209), 0), 100000000, 0, -208), 0, (("src/driver.mli", 69, 2383, 2387), ("src/driver.mli", 72, 2502, 2509), 0), 0, Tag1 ("Ppxlib__Driver", 17)), 0)]), 0, (("src/driver.mli", 68, 2365, 2367), ("src/driver.mli", 76, 2692, 2697), 0), Tag1 ("Ppxlib__Driver", 18)), 0, 0)]), 0, (("src/driver.mli", 57, 1841, 1841), ("src/driver.mli", 77, 2698, 2701), 0), Tag1 ("Ppxlib__Driver", 19)), 0, 0); (("register_transformation", 1968), ((Tag1 (Tag1 ("extensions"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Extension"), "t"), 0, (0)), 100000000, 0, -133)], (0)), 100000000, 0, -132)], (0)), 100000000, 0, -131), (Tag1 (Tag1 ("rules"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Context_free"), "Rule"), "t"), 0, (0)), 100000000, 0, -130)], (0)), 100000000, 0, -129)], (0)), 100000000, 0, -128), (Tag1 (Tag1 ("enclose_impl"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -127)], (0)), 100000000, 0, -126), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "structure"), 0, (0)), 100000000, 0, -124); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "structure"), 0, (0)), 100000000, 0, -125)]), 100000000, 0, -123), 0), 100000000, 0, -122)], (0)), 100000000, 0, -121), (Tag1 (Tag1 ("enclose_intf"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -120)], (0)), 100000000, 0, -119), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "signature"), 0, (0)), 100000000, 0, -117); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "signature"), 0, (0)), 100000000, 0, -118)]), 100000000, 0, -116), 0), 100000000, 0, -115)], (0)), 100000000, 0, -114), (Tag1 (Tag1 ("impl"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "structure"), 0, (0)), 100000000, 0, -113), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "structure"), 0, (0)), 100000000, 0, -112), 0), 100000000, 0, -111)], (0)), 100000000, 0, -110), (Tag1 (Tag1 ("intf"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "signature"), 0, (0)), 100000000, 0, -109), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "signature"), 0, (0)), 100000000, 0, -108), 0), 100000000, 0, -107)], (0)), 100000000, 0, -106), (Tag1 (Tag1 ("lint_impl"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "structure"), 0, (0)), 100000000, 0, -105), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Lint_error", 1965)), "t"), 0, (0)), 100000000, 0, -104)], (0)), 100000000, 0, -103), 0), 100000000, 0, -102)], (0)), 100000000, 0, -101), (Tag1 (Tag1 ("lint_intf"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "signature"), 0, (0)), 100000000, 0, -100), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Lint_error", 1965)), "t"), 0, (0)), 100000000, 0, -99)], (0)), 100000000, 0, -98), 0), 100000000, 0, -97)], (0)), 100000000, 0, -96), (Tag1 (Tag1 ("preprocess_impl"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "structure"), 0, (0)), 100000000, 0, -95), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "structure"), 0, (0)), 100000000, 0, -94), 0), 100000000, 0, -93)], (0)), 100000000, 0, -92), (Tag1 (Tag1 ("preprocess_intf"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "signature"), 0, (0)), 100000000, 0, -91), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "signature"), 0, (0)), 100000000, 0, -90), 0), 100000000, 0, -89)], (0)), 100000000, 0, -88), (Tag1 (Tag1 ("instrument"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Instrument", 1967)), "t"), 0, (0)), 100000000, 0, -87)], (0)), 100000000, 0, -86), (Tag1 (Tag1 ("aliases"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -85)], (0)), 100000000, 0, -84)], (0)), 100000000, 0, -83), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -82), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0), 100000000, 0, -79), 0), 100000000, 0, -78), 0), 100000000, 0, -77), 0), 100000000, 0, -76), 0), 100000000, 0, -75), 0), 100000000, 0, -74), 0), 100000000, 0, -73), 0), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), 0), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("src/driver.mli", 79, 2703, 2703), ("src/driver.mli", 93, 3301, 3307), 0), 0, Tag1 ("Ppxlib__Driver", 20)), 0); (("register_transformation_using_ocaml_current_ast", 1969), ((Tag1 (Tag1 ("impl"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "Compiler_version"), "Ast"), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -67), (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "Compiler_version"), "Ast"), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65)], (0)), 100000000, 0, -64), (Tag1 (Tag1 ("intf"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "Compiler_version"), "Ast"), "Parsetree"), "signature"), 0, (0)), 100000000, 0, -63), (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "Compiler_version"), "Ast"), "Parsetree"), "signature"), 0, (0)), 100000000, 0, -62), 0), 100000000, 0, -61)], (0)), 100000000, 0, -60), (Tag1 (Tag1 ("aliases"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -59)], (0)), 100000000, 0, -58)], (0)), 100000000, 0, -57), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -56), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("src/driver.mli", 129, 5155, 5155), ("src/driver.mli", 138, 5461, 5467), 0), 0, Tag1 ("Ppxlib__Driver", 23)), 0); (("register_code_transformation", 1970), ((Tag1 (("name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -50), (Tag1 (Tag1 ("aliases"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -49)], (0)), 100000000, 0, -48)], (0)), 100000000, 0, -47), (Tag1 (("impl"), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "structure"), 0, (0)), 100000000, 0, -46), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "structure"), 0, (0)), 100000000, 0, -45), 0), 100000000, 0, -44), (Tag1 (("intf"), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "signature"), 0, (0)), 100000000, 0, -43), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "signature"), 0, (0)), 100000000, 0, -42), 0), 100000000, 0, -41), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("src/driver.mli", 146, 5750, 5750), ("src/driver.mli", 152, 5905, 5975), 0), [(("deprecated", (("src/driver.mli", 152, 5905, 5910), ("src/driver.mli", 152, 5905, 5920), 0)), ([([(Tag1 (Tag2 ("[since 2015-11] use register_transformation instead", (("src/driver.mli", 152, 5905, 5922), ("src/driver.mli", 152, 5905, 5973), 0), 0)), (("src/driver.mli", 152, 5905, 5921), ("src/driver.mli", 152, 5905, 5974), 0), 0, 0)], (("src/driver.mli", 152, 5905, 5921), ("src/driver.mli", 152, 5905, 5974), 0))]), (("src/driver.mli", 152, 5905, 5907), ("src/driver.mli", 152, 5905, 5975), 0))], Tag1 ("Ppxlib__Driver", 24)), 0); (("register_correction", 1971), ((Tag1 (("loc"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -35), (Tag1 (("repl"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -34), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("src/driver.mli", 159, 6059, 6059), ("src/driver.mli", 159, 6059, 6122), 0), 0, Tag1 ("Ppxlib__Driver", 25)), 0); (("register_process_file_hook", 1972), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -30), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("src/driver.mli", 166, 6431, 6431), ("src/driver.mli", 166, 6431, 6486), 0), 0, Tag1 ("Ppxlib__Driver", 26)), 0); Tag3 (("V2", 1973), 0, (Tag1 ([(("register_transformation", 1999), ((Tag1 (Tag1 ("extensions"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Extension"), "t"), 0, (0)), 100000000, 0, -319)], (0)), 100000000, 0, -318)], (0)), 100000000, 0, -317), (Tag1 (Tag1 ("rules"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Context_free"), "Rule"), "t"), 0, (0)), 100000000, 0, -316)], (0)), 100000000, 0, -315)], (0)), 100000000, 0, -314), (Tag1 (Tag1 ("enclose_impl"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Expansion_context"), "Base"), "t"), 0, (0)), 100000000, 0, -313), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -312)], (0)), 100000000, 0, -311), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "structure"), 0, (0)), 100000000, 0, -309); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "structure"), 0, (0)), 100000000, 0, -310)]), 100000000, 0, -308), 0), 100000000, 0, -307), 0), 100000000, 0, -306)], (0)), 100000000, 0, -305), (Tag1 (Tag1 ("enclose_intf"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Expansion_context"), "Base"), "t"), 0, (0)), 100000000, 0, -304), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -303)], (0)), 100000000, 0, -302), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "signature"), 0, (0)), 100000000, 0, -300); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "signature"), 0, (0)), 100000000, 0, -301)]), 100000000, 0, -299), 0), 100000000, 0, -298), 0), 100000000, 0, -297)], (0)), 100000000, 0, -296), (Tag1 (Tag1 ("impl"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Expansion_context"), "Base"), "t"), 0, (0)), 100000000, 0, -295), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "structure"), 0, (0)), 100000000, 0, -294), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "structure"), 0, (0)), 100000000, 0, -293), 0), 100000000, 0, -292), 0), 100000000, 0, -291)], (0)), 100000000, 0, -290), (Tag1 (Tag1 ("intf"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Expansion_context"), "Base"), "t"), 0, (0)), 100000000, 0, -289), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "signature"), 0, (0)), 100000000, 0, -288), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "signature"), 0, (0)), 100000000, 0, -287), 0), 100000000, 0, -286), 0), 100000000, 0, -285)], (0)), 100000000, 0, -284), (Tag1 (Tag1 ("lint_impl"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Expansion_context"), "Base"), "t"), 0, (0)), 100000000, 0, -283), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "structure"), 0, (0)), 100000000, 0, -282), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Lint_error", 1965)), "t"), 0, (0)), 100000000, 0, -281)], (0)), 100000000, 0, -280), 0), 100000000, 0, -279), 0), 100000000, 0, -278)], (0)), 100000000, 0, -277), (Tag1 (Tag1 ("lint_intf"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Expansion_context"), "Base"), "t"), 0, (0)), 100000000, 0, -276), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "signature"), 0, (0)), 100000000, 0, -275), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Lint_error", 1965)), "t"), 0, (0)), 100000000, 0, -274)], (0)), 100000000, 0, -273), 0), 100000000, 0, -272), 0), 100000000, 0, -271)], (0)), 100000000, 0, -270), (Tag1 (Tag1 ("preprocess_impl"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Expansion_context"), "Base"), "t"), 0, (0)), 100000000, 0, -269), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "structure"), 0, (0)), 100000000, 0, -268), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "structure"), 0, (0)), 100000000, 0, -267), 0), 100000000, 0, -266), 0), 100000000, 0, -265)], (0)), 100000000, 0, -264), (Tag1 (Tag1 ("preprocess_intf"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Expansion_context"), "Base"), "t"), 0, (0)), 100000000, 0, -263), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "signature"), 0, (0)), 100000000, 0, -262), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "signature"), 0, (0)), 100000000, 0, -261), 0), 100000000, 0, -260), 0), 100000000, 0, -259)], (0)), 100000000, 0, -258), (Tag1 (Tag1 ("instrument"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Instrument", 1967)), "t"), 0, (0)), 100000000, 0, -257)], (0)), 100000000, 0, -256), (Tag1 (Tag1 ("aliases"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -255)], (0)), 100000000, 0, -254)], (0)), 100000000, 0, -253), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -252), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -251), 0), 100000000, 0, -250), 0), 100000000, 0, -249), 0), 100000000, 0, -248), 0), 100000000, 0, -247), 0), 100000000, 0, -246), 0), 100000000, 0, -245), 0), 100000000, 0, -244), 0), 100000000, 0, -243), 0), 100000000, 0, -242), 0), 100000000, 0, -241), 0), 100000000, 0, -240), 0), 100000000, 0, -239), 0), 100000000, 0, -238), 0, (("src/driver.mli", 170, 6548, 6550), ("src/driver.mli", 186, 7412, 7420), 0), 0, Tag1 ("Ppxlib__Driver", 27)), 0); (("register_transformation_using_ocaml_current_ast", 2000), ((Tag1 (Tag1 ("impl"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Expansion_context"), "Base"), "t"), 0, (0)), 100000000, 0, -237), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "Compiler_version"), "Ast"), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -236), (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "Compiler_version"), "Ast"), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -235), 0), 100000000, 0, -234), 0), 100000000, 0, -233)], (0)), 100000000, 0, -232), (Tag1 (Tag1 ("intf"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Expansion_context"), "Base"), "t"), 0, (0)), 100000000, 0, -231), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "Compiler_version"), "Ast"), "Parsetree"), "signature"), 0, (0)), 100000000, 0, -230), (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "Compiler_version"), "Ast"), "Parsetree"), "signature"), 0, (0)), 100000000, 0, -229), 0), 100000000, 0, -228), 0), 100000000, 0, -227)], (0)), 100000000, 0, -226), (Tag1 (Tag1 ("aliases"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -225)], (0)), 100000000, 0, -224)], (0)), 100000000, 0, -223), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -222), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -221), 0), 100000000, 0, -220), 0), 100000000, 0, -219), 0), 100000000, 0, -218), 0), 100000000, 0, -217), 0, (("src/driver.mli", 191, 7658, 7660), ("src/driver.mli", 202, 8050, 8058), 0), 0, Tag1 ("Ppxlib__Driver", 28)), 0)]), 0, (("src/driver.mli", 169, 6532, 6532), ("src/driver.mli", 205, 8215, 8218), 0), Tag1 ("Ppxlib__Driver", 29)), 0, 0); Tag3 (("Create_file_property", 1974), 0, (Tag2 (((("Name", 1983)), Tag1 ([(("name", 2001), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -320), 0, (("src/driver.mli", 221, 8893, 8895), ("src/driver.mli", 221, 8893, 8912), 0), 0, Tag1 ("Ppxlib__Driver", 30)), 0)])), Tag2 (((("T", 1984)), (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "Sexpable"), "S"))), Tag1 ([(("set", 2002), ((Tag1 (0, (Tag3 (Tag1 ((("T", 1984)), "t"), 0, (0)), 100000000, 0, -323), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -322), 0), 100000000, 0, -321), 0, (("src/driver.mli", 224, 8941, 8943), ("src/driver.mli", 224, 8941, 8964), 0), 0, Tag1 ("Ppxlib__Driver", 33)), 0)]))), 0, (("src/driver.mli", 220, 8853, 8853), ("src/driver.mli", 225, 8965, 8968), 0), Tag1 ("Ppxlib__Driver", 34)), 0, 0); (("standalone", 1975), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -25), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("src/driver.mli", 227, 8970, 8970), ("src/driver.mli", 227, 8970, 8999), 0), 0, Tag1 ("Ppxlib__Driver", 35)), 0); (("run_as_ppx_rewriter", 1976), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -22), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("src/driver.mli", 233, 9169, 9169), ("src/driver.mli", 233, 9169, 9207), 0), 0, Tag1 ("Ppxlib__Driver", 36)), 0); (("pretty", 1977), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -19), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("src/driver.mli", 236, 9269, 9269), ("src/driver.mli", 236, 9269, 9294), 0), 0, Tag1 ("Ppxlib__Driver", 37)), 0); (("map_structure", 1978), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "structure"), 0, (0)), 100000000, 0, -16), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "structure"), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("src/driver.mli", 242, 9441, 9441), ("src/driver.mli", 242, 9441, 9483), 0), 0, Tag1 ("Ppxlib__Driver", 38)), 0); (("map_signature", 1979), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "signature"), 0, (0)), 100000000, 0, -13), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "signature"), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("src/driver.mli", 243, 9484, 9484), ("src/driver.mli", 243, 9484, 9526), 0), 0, Tag1 ("Ppxlib__Driver", 39)), 0); (("enable_checks", 1980), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("src/driver.mli", 244, 9527, 9527), ("src/driver.mli", 244, 9527, 9559), 0), 0, Tag1 ("Ppxlib__Driver", 40)), 0); (("enable_location_check", 1981), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("src/driver.mli", 245, 9560, 9560), ("src/driver.mli", 245, 9560, 9600), 0), 0, Tag1 ("Ppxlib__Driver", 41)), 0); (("disable_location_check", 1982), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/driver.mli", 246, 9601, 9601), ("src/driver.mli", 246, 9601, 9642), 0), 0, Tag1 ("Ppxlib__Driver", 42)), 0)], "Ppxlib__Driver", [("Ppxlib__Driver", ("\151\218\243F O\149\166\253Mu\194S\195\251\154")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Subst", ("\021\031\148\223\127\186\189\135\027}\145r\216\143\177\156")); ("Stdppx", ("=:\209>\156\207\149\181\248\131\161P-\254\025q")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__StringLabels", ("\134F\024\226\216Is#\223\230\234\169Z\206Gc")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__ListLabels", ("*\194\012\191\020%\170\249m\002\180\178hk\205\220")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Char", ("\1794\1468\190\138\150g\231\240\140d\191.\212e")); ("Stdlib__BytesLabels", ("\145\128\000\239\186Z.\0310^\247\201\174\\\137R")); ("Stdlib__Bytes", ("C\134\194)\175\222\137p\205\246\244\r\241\164P\209")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib__Arg", ("\024%=\206\198p\149Y\007\004\216,&\254#\207")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Sexplib0__Sexpable", ("\251${\207(\249/z\242\255\250^\141\156\210e")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("Profile", ("\201i\132?<qM\169\011\239@\142\202\182\023,")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Ppxlib_traverse_builtins", ("\237\218tx\250&^T{\197#\019<\250_\r")); ("Ppxlib_ast__Versions", ("\005+\189\023\165C\208\138FX6X\224\005\223\t")); ("Ppxlib_ast__Import", ("\027\222\n&\137\144M\230R\150g=Y\198\007\233")); ("Ppxlib_ast__Ast", ("?\026\134=\154d\183u\023\212\177\192\b]\250E")); ("Ppxlib_ast__", ("\182{\159J6;\249\149\208}`\139\002r\020x")); ("Ppxlib_ast", ("\002y:\229,^V\247~U\236~\232\131I\154")); ("Ppxlib__Longident", ("\236#\230\012\180\203D\156\209\2282-p1H\132")); ("Ppxlib__Location", ("\r\139A\176n\135\029#\213\194&\153}\132\b\193")); ("Ppxlib__Loc", ("\183\208\004g\131\162\223\177\235#:\182\128\020\166\155")); ("Ppxlib__Import", ("\146|\185\205\005c\141\174\165\006\1517\177}\\\241")); ("Ppxlib__Extension", ("?\173T\140\189$\188\211\208U\164\238\218\149\031\210")); ("Ppxlib__Expansion_context", ("\210<\144_\134\203\172\219N:6H\156{\220U")); ("Ppxlib__Context_free", ("\027\250\233\241:\136\188\2484\233d\163\239qp7")); ("Ppxlib__Common", (">S\244L\148\145\200\134\1298\249\200b\014\193\147")); ("Ppxlib__Code_path", ("\029\211r\143\213`\240\244{Na\007Ii^J")); ("Ppxlib__Attribute", ("\162~~\178\183\027\245`\231\215\181\235qHm\b")); ("Ppxlib__Ast_traverse0", ("r\177\171e\003\155\241]D\149FKy\174\023\225")); ("Ppxlib__Ast_traverse", ("B\b\r\176z\\s\1809\129\156\127?\011Qo")); ("Ppxlib__Ast_pattern_generated", (":\216\170\153\005\218jM\167\138\2111!\b\020K")); ("Ppxlib__Ast_pattern0", ("\255\203\196\229\159\201Q*\230\238\"\198(Q\154\029")); ("Ppxlib__Ast_pattern", ("\023,&Ow\159\019\144Rw\158\143\213Mo\203")); ("Ppxlib__", ("JQ\224\000Y\175_]O\b\254O\194|\017\237")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Ocaml_common", ("1\212\195\020\163\232\187\142G\192\221\180@\1278u")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Load_path", ("\012@\228l\230\164S\172h\1726X\020\252o}")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("Env", ("\021\n\181\142x\b\169j\227\"\017\248*\178\245\223")); ("Compmisc", ("B\127\\\174\004T\179\002\242}-C\214\152H*")); ("Cmi_format", ("6\177\bU\139\"\023\152=\249\135\174\b\011Cg")); ("Clflags", ("\162v\193G\199E|\029\023{\b\243]B\144;")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216")); ("Astlib__Parse", ("\203iQ\135d.\147$\t\207\203C\131\175\193\171")); ("Astlib__Longident", ("\n\192\233\142\177n\225\191\238\161#\150\204n\"Y")); ("Astlib__Location", ("nn\153\250\162\2239\215\129\229e\026xg\000U")); ("Astlib__Ast_501", ("\207\"A\188\024\242Q\223\153\146\239\128\168h\148&")); ("Astlib__Ast_500", ("\202\202\240\178Ep\168 [f\246\t\162T\141\254")); ("Astlib__Ast_414", ("i\179p\208\134r\2177\243\167\157nF\235\143\179")); ("Astlib__Ast_413", ("\240P\019\205\016\157\177\177O)\172\193\028\192\011\190")); ("Astlib__Ast_412", (">\181S\020\t\004\1998\163p\025\210s\216\251\169")); ("Astlib__Ast_411", ("\030\186y\191\005D\180nv\183\b@1\225\168+")); ("Astlib__Ast_410", ("\023\030O]m0\005\214X\n/\226c\201\214\232")); ("Astlib__Ast_409", ("P\147I\234\185H\181\153\207\221\003\165\139\161\150\027")); ("Astlib__Ast_408", ("\225\220%%\162\188\006W\007\252\001X\158\165,\004")); ("Astlib__Ast_407", ("\163\202\2018`\230bGY\138/\021'\148:\018")); ("Astlib__Ast_406", ("v\152\031Q\232\244\141\011p\012\161\164hy\203\151")); ("Astlib__Ast_405", ("\145;\017\238\241\127\173z\138\142Q4>\198\186\207")); ("Astlib__Ast_404", ("I\027\143Zr\250\2468\193\167uOo\029\236\148")); ("Astlib__Ast_403", ("\206M\242\247\155X\251\127\002Ly\024\154\245\153\180")); ("Astlib__Ast_402", ("\178]\161\230\193\144:\005/\\~\127'|\207\189")); ("Astlib__", ("\246\155.n\143$\1435\bi\005\019C\219\191A")); ("Astlib", ("\002*Xp\193\003\201C\234Q\143\029\232\1569\007"))], [(0)])
val disable_location_check : unit -> unit
