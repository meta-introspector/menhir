module Std :
  sig
    module Choose_tag = Expect_test_matcher__.Choose_tag
    module Cst = Expect_test_matcher__.Cst
    module Fmt = Expect_test_matcher__.Fmt
    module Lexer = Expect_test_matcher__.Lexer
    module Matcher = Expect_test_matcher__.Matcher
    module Reconcile = Expect_test_matcher__.Reconcile
  end
module Choose_tag = Expect_test_matcher__.Choose_tag
module Cst = Expect_test_matcher__.Cst
module Fmt = Expect_test_matcher__.Fmt
module Lexer = Expect_test_matcher__.Lexer
module Matcher = Expect_test_matcher__.Matcher
("DEBUG:rule", [Tag3 (("Std", 289), 0, (Tag1 ([Tag3 (("Choose_tag", 296), 1, (Tag3 (Tag1 ((Tag2 ("Expect_test_matcher__")), "Choose_tag")), 0, (("matcher/expect_test_matcher.ml", 2, 20, 22), ("matcher/expect_test_matcher.ml", 2, 20, 52), 0), Tag1 ("Expect_test_matcher", 0)), 0, 0); Tag3 (("Cst", 297), 1, (Tag3 (Tag1 ((Tag2 ("Expect_test_matcher__")), "Cst")), 0, (("matcher/expect_test_matcher.ml", 3, 53, 55), ("matcher/expect_test_matcher.ml", 3, 53, 71), 0), Tag1 ("Expect_test_matcher", 1)), 0, 0); Tag3 (("Fmt", 298), 1, (Tag3 (Tag1 ((Tag2 ("Expect_test_matcher__")), "Fmt")), 0, (("matcher/expect_test_matcher.ml", 4, 72, 74), ("matcher/expect_test_matcher.ml", 4, 72, 90), 0), Tag1 ("Expect_test_matcher", 2)), 0, 0); Tag3 (("Lexer", 299), 1, (Tag3 (Tag1 ((Tag2 ("Expect_test_matcher__")), "Lexer")), 0, (("matcher/expect_test_matcher.ml", 5, 91, 93), ("matcher/expect_test_matcher.ml", 5, 91, 113), 0), Tag1 ("Expect_test_matcher", 3)), 0, 0); Tag3 (("Matcher", 300), 1, (Tag3 (Tag1 ((Tag2 ("Expect_test_matcher__")), "Matcher")), 0, (("matcher/expect_test_matcher.ml", 6, 114, 116), ("matcher/expect_test_matcher.ml", 6, 114, 140), 0), Tag1 ("Expect_test_matcher", 4)), 0, 0); Tag3 (("Reconcile", 301), 1, (Tag3 (Tag1 ((Tag2 ("Expect_test_matcher__")), "Reconcile")), 0, (("matcher/expect_test_matcher.ml", 7, 141, 143), ("matcher/expect_test_matcher.ml", 7, 141, 171), 0), Tag1 ("Expect_test_matcher", 5)), 0, 0)]), [(("deprecated", (("matcher/expect_test_matcher.ml", 9, 176, 179), ("matcher/expect_test_matcher.ml", 9, 176, 189), 0)), ([([(Tag1 (Tag2 ("[since 2020-03] use [Expect_test_matcher] instead", (("matcher/expect_test_matcher.ml", 9, 176, 191), ("matcher/expect_test_matcher.ml", 9, 176, 240), 0), 0)), (("matcher/expect_test_matcher.ml", 9, 176, 190), ("matcher/expect_test_matcher.ml", 9, 176, 241), 0), 0, 0)], (("matcher/expect_test_matcher.ml", 9, 176, 190), ("matcher/expect_test_matcher.ml", 9, 176, 241), 0))]), (("matcher/expect_test_matcher.ml", 9, 176, 176), ("matcher/expect_test_matcher.ml", 9, 176, 242), 0))], (("matcher/expect_test_matcher.ml", 1, 0, 0), ("matcher/expect_test_matcher.ml", 9, 176, 242), 0), Tag1 ("Expect_test_matcher", 6)), 0, 0); Tag3 (("Choose_tag", 290), 1, (Tag3 (Tag1 ((Tag2 ("Expect_test_matcher__")), "Choose_tag")), 0, (("matcher/expect_test_matcher.ml", 2, 20, 22), ("matcher/expect_test_matcher.ml", 2, 20, 52), 0), Tag1 ("Expect_test_matcher", 0)), 0, 0); Tag3 (("Cst", 291), 1, (Tag3 (Tag1 ((Tag2 ("Expect_test_matcher__")), "Cst")), 0, (("matcher/expect_test_matcher.ml", 3, 53, 55), ("matcher/expect_test_matcher.ml", 3, 53, 71), 0), Tag1 ("Expect_test_matcher", 1)), 0, 0); Tag3 (("Fmt", 292), 1, (Tag3 (Tag1 ((Tag2 ("Expect_test_matcher__")), "Fmt")), 0, (("matcher/expect_test_matcher.ml", 4, 72, 74), ("matcher/expect_test_matcher.ml", 4, 72, 90), 0), Tag1 ("Expect_test_matcher", 2)), 0, 0); Tag3 (("Lexer", 293), 1, (Tag3 (Tag1 ((Tag2 ("Expect_test_matcher__")), "Lexer")), 0, (("matcher/expect_test_matcher.ml", 5, 91, 93), ("matcher/expect_test_matcher.ml", 5, 91, 113), 0), Tag1 ("Expect_test_matcher", 3)), 0, 0); Tag3 (("Matcher", 294), 1, (Tag3 (Tag1 ((Tag2 ("Expect_test_matcher__")), "Matcher")), 0, (("matcher/expect_test_matcher.ml", 6, 114, 116), ("matcher/expect_test_matcher.ml", 6, 114, 140), 0), Tag1 ("Expect_test_matcher", 4)), 0, 0); Tag3 (("Reconcile", 295), 1, (Tag3 (Tag1 ((Tag2 ("Expect_test_matcher__")), "Reconcile")), 0, (("matcher/expect_test_matcher.ml", 7, 141, 143), ("matcher/expect_test_matcher.ml", 7, 141, 171), 0), Tag1 ("Expect_test_matcher", 5)), 0, 0)], "Expect_test_matcher", [("Expect_test_matcher", ("\241\019\208\181\235\198o\207G\161\254F\179\137\011\151")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Expect_test_matcher__", ("\023\189+K\163r\2336\196\t\221\027\174\r\160\227")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
module Reconcile = Expect_test_matcher__.Reconcile
