module type VisitorS =
  sig
    module Applicative : Traverse.Applicative.S
    val hook :
      'a Refl__.Desc.refl ->
      ('a -> 'a Applicative.t) -> 'a -> 'a Applicative.t
  end
module type VisitS =
  sig
    module Visitor : Refl__.Desc.UnaryTypeS
    module Visitors :
      sig
        module T : sig type 'a t = 'a Visitor.t end
        type ('a, 'occurrence) item =
            None : ('b, [ `Absent ]) item
          | Some : 'a T.t -> ('a, 'c) item
        type ('sequence, 'occurrences) t =
            [] : (unit, unit) t
          | (::) : ('head, 'occurrence) item *
              ('tail, 'occurrences) t -> ('head * 'tail,
                                          'occurrence * 'occurrences)
                                         t
        val get :
          ('index, 'sequence, 'value, 'positive, 'occurrences)
          Refl__.Desc.variable -> ('sequence, 'occurrences) t -> 'value T.t
        val make_transfer :
          ('source, 'sub, 'arg) Refl__.Desc.transfer_arguments ->
          ('sequence, 'source) t ->
          (('sequence, 'arg) t, ('sub, [ `Absent ]) Refl__.Desc.eq) result
        type ('arity, 'rec_group, 'kinds) make = {
          f :
            'a 'structure 'ap 'an 'ad 'gadt.
              ('a, 'structure, 'arity, 'rec_group, 'kinds, 'ap, 'an, 'ad,
               'gadt)
              Refl__.Desc.desc -> ('arity, 'ad) t -> 'a T.t;
        }
        val make :
          ('arity, 'rec_group, 'kinds) make ->
          ('types, 'structures, 'arity, 'rec_group, 'kinds, 'arguments,
           'gadt)
          Refl__.Desc.vector ->
          ('positive, 'negative, 'direct, 'subpositive, 'subnegative,
           'subdirect, 'arguments)
          Refl__.Desc.transfer_skip ->
          ('arity, 'direct) t -> ('types, 'subdirect) t
        type 'presence any =
            None : [ `Absent ] any
          | Some : { item : 'a. 'a T.t; } -> 'b any
        val append :
          'presence any ->
          ('presence, 'directs) Refl__.Desc.presences ->
          ('count, 'directs) Refl__.Desc.length ->
          ('directs, 'direct, 'subdirect) Refl__.Desc.append ->
          ('count, 'types) Refl__.Desc.length ->
          ('types, 'arity, 'subarity) Refl__.Desc.append ->
          ('arity, 'direct) t -> ('subarity, 'subdirect) t
        val to_sequence :
          [ `Present ] any ->
          ('sequence, 'occurrences) t -> 'sequence Refl__.Desc.Sequence(T).t
      end
    val visit :
      ('a, 'structure, 'arity, 'rec_group, Refl__.Desc.Kinds.visitable,
       'positive, 'negative, 'direct, 'gadt)
      Refl__.Desc.desc -> ('arity, 'direct) Visitors.t -> 'a Visitor.t
  end
module Make :
  functor (V : VisitorS) ->
    sig
      module Visitor : sig type 'a t = 'a -> 'a V.Applicative.t end
      module Visitors :
        sig
          module T : sig type 'a t = 'a Visitor.t end
          type ('a, 'occurrence) item =
              None : ('b, [ `Absent ]) item
            | Some : 'a T.t -> ('a, 'c) item
          type ('sequence, 'occurrences) t =
              [] : (unit, unit) t
            | (::) : ('head, 'occurrence) item *
                ('tail, 'occurrences) t -> ('head * 'tail,
                                            'occurrence * 'occurrences)
                                           t
          val get :
            ('index, 'sequence, 'value, 'positive, 'occurrences)
            Refl__.Desc.variable -> ('sequence, 'occurrences) t -> 'value T.t
          val make_transfer :
            ('source, 'sub, 'arg) Refl__.Desc.transfer_arguments ->
            ('sequence, 'source) t ->
            (('sequence, 'arg) t, ('sub, [ `Absent ]) Refl__.Desc.eq) result
          type ('arity, 'rec_group, 'kinds) make = {
            f :
              'a 'structure 'ap 'an 'ad 'gadt.
                ('a, 'structure, 'arity, 'rec_group, 'kinds, 'ap, 'an, 'ad,
                 'gadt)
                Refl__.Desc.desc -> ('arity, 'ad) t -> 'a T.t;
          }
          val make :
            ('arity, 'rec_group, 'kinds) make ->
            ('types, 'structures, 'arity, 'rec_group, 'kinds, 'arguments,
             'gadt)
            Refl__.Desc.vector ->
            ('positive, 'negative, 'direct, 'subpositive, 'subnegative,
             'subdirect, 'arguments)
            Refl__.Desc.transfer_skip ->
            ('arity, 'direct) t -> ('types, 'subdirect) t
          type 'presence any =
              None : [ `Absent ] any
            | Some : { item : 'a. 'a T.t; } -> 'b any
          val append :
            'presence any ->
            ('presence, 'directs) Refl__.Desc.presences ->
            ('count, 'directs) Refl__.Desc.length ->
            ('directs, 'direct, 'subdirect) Refl__.Desc.append ->
            ('count, 'types) Refl__.Desc.length ->
            ('types, 'arity, 'subarity) Refl__.Desc.append ->
            ('arity, 'direct) t -> ('subarity, 'subdirect) t
          val to_sequence :
            [ `Present ] any ->
            ('sequence, 'occurrences) t ->
            'sequence Refl__.Desc.Sequence(T).t
        end
      val visit :
        ('a, 'structure, 'arity, 'rec_group, Refl__.Desc.Kinds.visitable,
         'positive, 'negative, 'direct, 'gadt)
        Refl__.Desc.desc -> ('arity, 'direct) Visitors.t -> 'a Visitor.t("DEBUG:rule", [Tag4 (("VisitorS", 1497), ((Tag1 ([Tag3 (("Applicative", 1501), 0, ((Tag1 (Tag1 ((Tag2 ("Traverse")), "Applicative"), "S")), 0, (("runtime/visit.ml", 6, 50, 52), ("runtime/visit.ml", 6, 50, 95), 0), Tag1 ("Refl__Visit", 37)), 0, 0); (("hook", 1502), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "refl"), [((("a")), 100000000, 0, -6)], (0)), 100000000, 0, -9), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -6), (Tag3 (Tag1 ((("Applicative", 1501)), "t"), [((("a")), 100000000, 0, -6)], (0)), 100000000, 0, -8), 0), 100000000, 0, -7), (Tag1 (0, ((("a")), 100000000, 0, -6), (Tag3 (Tag1 ((("Applicative", 1501)), "t"), [((("a")), 100000000, 0, -6)], (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("runtime/visit.ml", 8, 97, 99), ("runtime/visit.ml", 8, 97, 171), 0), 0, Tag1 ("Refl__Visit", 38)), 0)])), 0, (("runtime/visit.ml", 5, 23, 23), ("runtime/visit.ml", 9, 172, 175), 0), Tag1 ("Refl__Visit", 39)), 0); Tag4 (("VisitS", 1498), ((Tag1 ([Tag3 (("Visitor", 1503), 0, ((Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "UnaryTypeS")), 0, (("runtime/visit.ml", 12, 202, 204), ("runtime/visit.ml", 12, 202, 231), 0), Tag1 ("Refl__Visit", 40)), 0, 0); Tag3 (("Visitors", 1504), 0, (Tag1 ([Tag3 (("T", 1506), 0, (Tag1 ([Tag1 (("t", 1516), ([((("a")), 100000000, 0, -150)], 1, 0, 1, ((Tag3 (Tag1 ((("Visitor", 1503)), "t"), [((("a")), 100000000, 0, -150)], (0)), 100000000, 0, -149)), [7], [2], 0, 0, (("runtime/visit.ml", 14, 233, 266), ("runtime/visit.ml", 14, 233, 292), 0), 0, 0, 0, Tag1 ("Refl__Visit", 79)), 1, 0)]), 0, (("runtime/tools.ml", 223, 7159, 7161), ("runtime/tools.ml", 223, 7159, 7182), 0), Tag1 ("Refl__Tools", 627)), 0, 0); Tag1 (("item", 1507), ([((("a")), 100000000, 0, -147); ((("occurrence")), 100000000, 0, -148)], 2, Tag1 ([(("None", 804), (0), ((Tag3 ((("item", 1507)), [((0), 100000000, 0, -140); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -142), 1, 0, 0)), 100000000, 0, -141)], (0)), 100000000, 0, -139)), (("runtime/tools.ml", 226, 7216, 7220), ("runtime/tools.ml", 226, 7216, 7248), 0), 0, Tag1 ("Refl__Tools", 629)); (("Some", 805), ([(Tag3 (Tag1 ((("T", 1506)), "t"), [((("a")), 100000000, 0, -144)], (0)), 100000000, 0, -146)]), ((Tag3 ((("item", 1507)), [((("a")), 100000000, 0, -144); ((0), 100000000, 0, -145)], (0)), 100000000, 0, -143)), (("runtime/tools.ml", 227, 7249, 7253), ("runtime/tools.ml", 227, 7249, 7284), 0), 0, Tag1 ("Refl__Tools", 630))], 0), 1, 0, [15; 63], [0; 0], 0, 0, (("runtime/tools.ml", 225, 7184, 7186), ("runtime/tools.ml", 227, 7249, 7284), 0), 0, 0, 0, Tag1 ("Refl__Tools", 628)), 1, 0); Tag1 (("t", 1508), ([((("sequence")), 100000000, 0, -137); ((("occurrences")), 100000000, 0, -138)], 2, Tag1 ([(("[]", 808), (0), ((Tag3 ((("t", 1508)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -126); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -127)], (0)), 100000000, 0, -125)), (("runtime/tools.ml", 230, 7323, 7327), ("runtime/tools.ml", 230, 7323, 7348), 0), 0, Tag1 ("Refl__Tools", 632)); (("::", 809), ([(Tag3 ((("item", 1507)), [((("head")), 100000000, 0, -130); ((("occurrence")), 100000000, 0, -133)], (0)), 100000000, 0, -135); (Tag3 ((("t", 1508)), [((("tail")), 100000000, 0, -131); ((("occurrences")), 100000000, 0, -134)], (0)), 100000000, 0, -136)]), ((Tag3 ((("t", 1508)), [(Tag2 ([((("head")), 100000000, 0, -130); ((("tail")), 100000000, 0, -131)]), 100000000, 0, -129); (Tag2 ([((("occurrence")), 100000000, 0, -133); ((("occurrences")), 100000000, 0, -134)]), 100000000, 0, -132)], (0)), 100000000, 0, -128)), (("runtime/tools.ml", 231, 7349, 7353), ("runtime/tools.ml", 232, 7417, 7470), 0), 0, Tag1 ("Refl__Tools", 633))], 0), 1, 0, [63; 63], [0; 0], 0, 0, (("runtime/tools.ml", 229, 7286, 7288), ("runtime/tools.ml", 232, 7417, 7470), 0), 0, 0, 0, Tag1 ("Refl__Tools", 631)), 1, 0); (("get", 1509), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variable"), [((("index")), 100000000, 0, -123); ((("sequence")), 100000000, 0, -120); ((("value")), 100000000, 0, -118); ((("positive")), 100000000, 0, -124); ((("occurrences")), 100000000, 0, -121)], (0)), 100000000, 0, -122), (Tag1 (0, (Tag3 ((("t", 1508)), [((("sequence")), 100000000, 0, -120); ((("occurrences")), 100000000, 0, -121)], (0)), 100000000, 0, -119), (Tag3 (Tag1 ((("T", 1506)), "t"), [((("value")), 100000000, 0, -118)], (0)), 100000000, 0, -117), 0), 100000000, 0, -116), 0), 100000000, 0, -115), 0, (("runtime/tools.ml", 234, 7472, 7474), ("runtime/tools.ml", 236, 7553, 7600), 0), 0, Tag1 ("Refl__Tools", 634)), 0); (("make_transfer", 1510), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_arguments"), [((("source")), 100000000, 0, -113); ((("sub")), 100000000, 0, -109); ((("arg")), 100000000, 0, -107)], (0)), 100000000, 0, -114), (Tag1 (0, (Tag3 ((("t", 1508)), [((("sequence")), 100000000, 0, -106); ((("source")), 100000000, 0, -113)], (0)), 100000000, 0, -112), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("t", 1508)), [((("sequence")), 100000000, 0, -106); ((("arg")), 100000000, 0, -107)], (0)), 100000000, 0, -105); (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "eq"), [((("sub")), 100000000, 0, -109); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -111), 1, 0, 0)), 100000000, 0, -110)], (0)), 100000000, 0, -108)], (0)), 100000000, 0, -104), 0), 100000000, 0, -103), 0), 100000000, 0, -102), 0, (("runtime/tools.ml", 238, 7602, 7604), ("runtime/tools.ml", 240, 7698, 7752), 0), 0, Tag1 ("Refl__Tools", 635)), 0); Tag1 (("make", 1511), ([((("arity")), 100000000, 0, -98); ((("rec_group")), 100000000, 0, -100); ((("kinds")), 100000000, 0, -101)], 3, [[(("f", 813), 0, (Tag10 ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [(Tag9 (("a")), 100000000, 0, -88); (Tag9 (("structure")), 100000000, 0, -89); ((("arity")), 100000000, 0, -98); ((("rec_group")), 100000000, 0, -100); ((("kinds")), 100000000, 0, -101); (Tag9 (("ap")), 100000000, 0, -90); (Tag9 (("an")), 100000000, 0, -91); (Tag9 (("ad")), 100000000, 0, -92); (Tag9 (("gadt")), 100000000, 0, -93)], (0)), 100000000, 0, -99), (Tag1 (0, (Tag3 ((("t", 1508)), [((("arity")), 100000000, 0, -98); (Tag9 (("ad")), 100000000, 0, -92)], (0)), 100000000, 0, -97), (Tag3 (Tag1 ((("T", 1506)), "t"), [(Tag9 (("a")), 100000000, 0, -88)], (0)), 100000000, 0, -96), 0), 100000000, 0, -95), 0), 100000000, 0, -94), [(Tag9 (("a")), 100000000, 0, -88); (Tag9 (("structure")), 100000000, 0, -89); (Tag9 (("ap")), 100000000, 0, -90); (Tag9 (("an")), 100000000, 0, -91); (Tag9 (("ad")), 100000000, 0, -92); (Tag9 (("gadt")), 100000000, 0, -93)]), 100000000, 0, -87), (("runtime/tools.ml", 243, 7799, 7805), ("runtime/tools.ml", 245, 7918, 7962), 0), 0, Tag1 ("Refl__Tools", 637))]], 1, 0, [63; 15; 63], [0; 0; 0], 0, 0, (("runtime/tools.ml", 242, 7754, 7756), ("runtime/tools.ml", 246, 7963, 7968), 0), 0, 0, 1, Tag1 ("Refl__Tools", 636)), 1, 0); (("make", 1512), ((Tag1 (0, (Tag3 ((("make", 1511)), [((("arity")), 100000000, 0, -73); ((("rec_group")), 100000000, 0, -83); ((("kinds")), 100000000, 0, -84)], (0)), 100000000, 0, -86), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((("types")), 100000000, 0, -70); ((("structures")), 100000000, 0, -82); ((("arity")), 100000000, 0, -73); ((("rec_group")), 100000000, 0, -83); ((("kinds")), 100000000, 0, -84); ((("arguments")), 100000000, 0, -80); ((("gadt")), 100000000, 0, -85)], (0)), 100000000, 0, -81), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_skip"), [((("positive")), 100000000, 0, -76); ((("negative")), 100000000, 0, -77); ((("direct")), 100000000, 0, -74); ((("subpositive")), 100000000, 0, -78); ((("subnegative")), 100000000, 0, -79); ((("subdirect")), 100000000, 0, -71); ((("arguments")), 100000000, 0, -80)], (0)), 100000000, 0, -75), (Tag1 (0, (Tag3 ((("t", 1508)), [((("arity")), 100000000, 0, -73); ((("direct")), 100000000, 0, -74)], (0)), 100000000, 0, -72), (Tag3 ((("t", 1508)), [((("types")), 100000000, 0, -70); ((("subdirect")), 100000000, 0, -71)], (0)), 100000000, 0, -69), 0), 100000000, 0, -68), 0), 100000000, 0, -67), 0), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("runtime/tools.ml", 248, 7970, 7972), ("runtime/tools.ml", 255, 8251, 8277), 0), 0, Tag1 ("Refl__Tools", 638)), 0); Tag1 (("any", 1513), ([((("presence")), 100000000, 0, -64)], 1, Tag1 ([(("None", 816), (0), ((Tag3 ((("any", 1513)), [(Tag8 (([("Absent", (0))], (0, 100000000, 0, -58), 1, 0, 0)), 100000000, 0, -57)], (0)), 100000000, 0, -56)), (("runtime/tools.ml", 258, 8302, 8306), ("runtime/tools.ml", 258, 8302, 8328), 0), 0, Tag1 ("Refl__Tools", 640)); (("Some", 817), Tag1 ([(("item", 818), 0, (Tag10 ((Tag3 (Tag1 ((("T", 1506)), "t"), [(Tag9 (("a")), 100000000, 0, -62)], (0)), 100000000, 0, -63), [(Tag9 (("a")), 100000000, 0, -62)]), 100000000, 0, -61), (("runtime/tools.ml", 260, 8344, 8354), ("runtime/tools.ml", 260, 8344, 8373), 0), 0, Tag1 ("Refl__Tools", 641))]), ((Tag3 ((("any", 1513)), [((0), 100000000, 0, -60)], (0)), 100000000, 0, -59)), (("runtime/tools.ml", 259, 8329, 8333), ("runtime/tools.ml", 261, 8374, 8392), 0), 0, Tag1 ("Refl__Tools", 642))], 0), 1, 0, [63], [0], 0, 0, (("runtime/tools.ml", 257, 8279, 8281), ("runtime/tools.ml", 261, 8374, 8392), 0), 0, 0, 0, Tag1 ("Refl__Tools", 639)), 1, 0); (("append", 1514), ((Tag1 (0, (Tag3 ((("any", 1513)), [((("presence")), 100000000, 0, -54)], (0)), 100000000, 0, -55), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "presences"), [((("presence")), 100000000, 0, -54); ((("directs")), 100000000, 0, -51)], (0)), 100000000, 0, -53), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -49); ((("directs")), 100000000, 0, -51)], (0)), 100000000, 0, -52), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("directs")), 100000000, 0, -51); ((("direct")), 100000000, 0, -45); ((("subdirect")), 100000000, 0, -42)], (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -49); ((("types")), 100000000, 0, -47)], (0)), 100000000, 0, -48), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("types")), 100000000, 0, -47); ((("arity")), 100000000, 0, -44); ((("subarity")), 100000000, 0, -41)], (0)), 100000000, 0, -46), (Tag1 (0, (Tag3 ((("t", 1508)), [((("arity")), 100000000, 0, -44); ((("direct")), 100000000, 0, -45)], (0)), 100000000, 0, -43), (Tag3 ((("t", 1508)), [((("subarity")), 100000000, 0, -41); ((("subdirect")), 100000000, 0, -42)], (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0), 100000000, 0, -37), 0), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0, (("runtime/tools.ml", 263, 8394, 8396), ("runtime/tools.ml", 271, 8649, 8678), 0), 0, Tag1 ("Refl__Tools", 649)), 0); (("to_sequence", 1515), ((Tag1 (0, (Tag3 ((("any", 1513)), [(Tag8 (([("Present", (0))], (0, 100000000, 0, -32), 1, 0, 0)), 100000000, 0, -31)], (0)), 100000000, 0, -30), (Tag1 (0, (Tag3 ((("t", 1508)), [((("sequence")), 100000000, 0, -27); ((("occurrences")), 100000000, 0, -29)], (0)), 100000000, 0, -28), (Tag3 (Tag1 (Tag2 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "Sequence"), (("T", 1506))), "t"), [((("sequence")), 100000000, 0, -27)], (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("runtime/tools.ml", 273, 8680, 8682), ("runtime/tools.ml", 274, 8700, 8776), 0), 0, Tag1 ("Refl__Tools", 650)), 0)]), 0, (("runtime/visit.ml", 14, 233, 235), ("runtime/visit.ml", 14, 233, 292), 0), Tag1 ("Refl__Visit", 80)), 0, 0); (("visit", 1505), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [((("a")), 100000000, 0, -13); ((("structure")), 100000000, 0, -18); ((("arity")), 100000000, 0, -15); ((("rec_group")), 100000000, 0, -19); (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "Kinds"), "visitable"), 0, (0)), 100000000, 0, -20); ((("positive")), 100000000, 0, -21); ((("negative")), 100000000, 0, -22); ((("direct")), 100000000, 0, -16); ((("gadt")), 100000000, 0, -23)], (0)), 100000000, 0, -17), (Tag1 (0, (Tag3 (Tag1 ((("Visitors", 1504)), "t"), [((("arity")), 100000000, 0, -15); ((("direct")), 100000000, 0, -16)], (0)), 100000000, 0, -14), (Tag3 (Tag1 ((("Visitor", 1503)), "t"), [((("a")), 100000000, 0, -13)], (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("runtime/visit.ml", 16, 294, 296), ("runtime/visit.ml", 19, 454, 472), 0), 0, Tag1 ("Refl__Visit", 82)), 0)])), 0, (("runtime/visit.ml", 11, 177, 177), ("runtime/visit.ml", 20, 473, 476), 0), Tag1 ("Refl__Visit", 83)), 0); Tag3 (("Make", 1499), 0, (Tag2 (((("V", 1500)), ((("VisitorS", 1497)))), Tag1 ([Tag3 (("Visitor", 1517), 0, (Tag1 ([Tag1 (("t", 1520), ([((("a")), 100000000, 0, -167)], 1, 0, 1, ((Tag1 (0, ((("a")), 100000000, 0, -167), (Tag3 (Tag1 (Tag1 ((("V", 1500)), "Applicative"), "t"), [((("a")), 100000000, 0, -167)], (0)), 100000000, 0, -166), 0), 100000000, 0, -165)), [47], [0], 0, 0, (("runtime/visit.ml", 23, 514, 519), ("runtime/visit.ml", 23, 514, 563), 0), 0, 0, 0, Tag1 ("Refl__Visit", 430)), 1, 0)]), 0, (("runtime/visit.ml", 12, 202, 204), ("runtime/visit.ml", 12, 202, 231), 0), Tag1 ("Refl__Visit", 40)), 0, 0); Tag3 (("Visitors", 1518), 0, (Tag1 ([Tag3 (("T", 1521), 0, (Tag1 ([Tag1 (("t", 1531), ([((("a")), 100000000, 0, -294)], 1, 0, 1, ((Tag3 (Tag1 ((("Visitor", 1517)), "t"), [((("a")), 100000000, 0, -294)], (0)), 100000000, 0, -293)), [7], [2], 0, 0, (("runtime/visit.ml", 14, 233, 266), ("runtime/visit.ml", 14, 233, 292), 0), 0, 0, 0, Tag1 ("Refl__Visit", 79)), 1, 0)]), 0, (("runtime/tools.ml", 223, 7159, 7161), ("runtime/tools.ml", 223, 7159, 7182), 0), Tag1 ("Refl__Tools", 627)), 0, 0); Tag1 (("item", 1522), ([((("a")), 100000000, 0, -291); ((("occurrence")), 100000000, 0, -292)], 2, Tag1 ([(("None", 804), (0), ((Tag3 ((("item", 1522)), [((0), 100000000, 0, -284); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -286), 1, 0, 0)), 100000000, 0, -285)], (0)), 100000000, 0, -283)), (("runtime/tools.ml", 226, 7216, 7220), ("runtime/tools.ml", 226, 7216, 7248), 0), 0, Tag1 ("Refl__Tools", 629)); (("Some", 805), ([(Tag3 (Tag1 ((("T", 1521)), "t"), [((("a")), 100000000, 0, -288)], (0)), 100000000, 0, -290)]), ((Tag3 ((("item", 1522)), [((("a")), 100000000, 0, -288); ((0), 100000000, 0, -289)], (0)), 100000000, 0, -287)), (("runtime/tools.ml", 227, 7249, 7253), ("runtime/tools.ml", 227, 7249, 7284), 0), 0, Tag1 ("Refl__Tools", 630))], 0), 1, 0, [15; 63], [0; 0], 0, 0, (("runtime/tools.ml", 225, 7184, 7186), ("runtime/tools.ml", 227, 7249, 7284), 0), 0, 0, 0, Tag1 ("Refl__Tools", 628)), 1, 0); Tag1 (("t", 1523), ([((("sequence")), 100000000, 0, -281); ((("occurrences")), 100000000, 0, -282)], 2, Tag1 ([(("[]", 808), (0), ((Tag3 ((("t", 1523)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -270); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -271)], (0)), 100000000, 0, -269)), (("runtime/tools.ml", 230, 7323, 7327), ("runtime/tools.ml", 230, 7323, 7348), 0), 0, Tag1 ("Refl__Tools", 632)); (("::", 809), ([(Tag3 ((("item", 1522)), [((("head")), 100000000, 0, -274); ((("occurrence")), 100000000, 0, -277)], (0)), 100000000, 0, -279); (Tag3 ((("t", 1523)), [((("tail")), 100000000, 0, -275); ((("occurrences")), 100000000, 0, -278)], (0)), 100000000, 0, -280)]), ((Tag3 ((("t", 1523)), [(Tag2 ([((("head")), 100000000, 0, -274); ((("tail")), 100000000, 0, -275)]), 100000000, 0, -273); (Tag2 ([((("occurrence")), 100000000, 0, -277); ((("occurrences")), 100000000, 0, -278)]), 100000000, 0, -276)], (0)), 100000000, 0, -272)), (("runtime/tools.ml", 231, 7349, 7353), ("runtime/tools.ml", 232, 7417, 7470), 0), 0, Tag1 ("Refl__Tools", 633))], 0), 1, 0, [63; 63], [0; 0], 0, 0, (("runtime/tools.ml", 229, 7286, 7288), ("runtime/tools.ml", 232, 7417, 7470), 0), 0, 0, 0, Tag1 ("Refl__Tools", 631)), 1, 0); (("get", 1524), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variable"), [((("index")), 100000000, 0, -267); ((("sequence")), 100000000, 0, -264); ((("value")), 100000000, 0, -262); ((("positive")), 100000000, 0, -268); ((("occurrences")), 100000000, 0, -265)], (0)), 100000000, 0, -266), (Tag1 (0, (Tag3 ((("t", 1523)), [((("sequence")), 100000000, 0, -264); ((("occurrences")), 100000000, 0, -265)], (0)), 100000000, 0, -263), (Tag3 (Tag1 ((("T", 1521)), "t"), [((("value")), 100000000, 0, -262)], (0)), 100000000, 0, -261), 0), 100000000, 0, -260), 0), 100000000, 0, -259), 0, (("runtime/tools.ml", 234, 7472, 7474), ("runtime/tools.ml", 236, 7553, 7600), 0), 0, Tag1 ("Refl__Tools", 634)), 0); (("make_transfer", 1525), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_arguments"), [((("source")), 100000000, 0, -257); ((("sub")), 100000000, 0, -253); ((("arg")), 100000000, 0, -251)], (0)), 100000000, 0, -258), (Tag1 (0, (Tag3 ((("t", 1523)), [((("sequence")), 100000000, 0, -250); ((("source")), 100000000, 0, -257)], (0)), 100000000, 0, -256), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("t", 1523)), [((("sequence")), 100000000, 0, -250); ((("arg")), 100000000, 0, -251)], (0)), 100000000, 0, -249); (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "eq"), [((("sub")), 100000000, 0, -253); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -255), 1, 0, 0)), 100000000, 0, -254)], (0)), 100000000, 0, -252)], (0)), 100000000, 0, -248), 0), 100000000, 0, -247), 0), 100000000, 0, -246), 0, (("runtime/tools.ml", 238, 7602, 7604), ("runtime/tools.ml", 240, 7698, 7752), 0), 0, Tag1 ("Refl__Tools", 635)), 0); Tag1 (("make", 1526), ([((("arity")), 100000000, 0, -242); ((("rec_group")), 100000000, 0, -244); ((("kinds")), 100000000, 0, -245)], 3, [[(("f", 813), 0, (Tag10 ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [(Tag9 (("a")), 100000000, 0, -232); (Tag9 (("structure")), 100000000, 0, -233); ((("arity")), 100000000, 0, -242); ((("rec_group")), 100000000, 0, -244); ((("kinds")), 100000000, 0, -245); (Tag9 (("ap")), 100000000, 0, -234); (Tag9 (("an")), 100000000, 0, -235); (Tag9 (("ad")), 100000000, 0, -236); (Tag9 (("gadt")), 100000000, 0, -237)], (0)), 100000000, 0, -243), (Tag1 (0, (Tag3 ((("t", 1523)), [((("arity")), 100000000, 0, -242); (Tag9 (("ad")), 100000000, 0, -236)], (0)), 100000000, 0, -241), (Tag3 (Tag1 ((("T", 1521)), "t"), [(Tag9 (("a")), 100000000, 0, -232)], (0)), 100000000, 0, -240), 0), 100000000, 0, -239), 0), 100000000, 0, -238), [(Tag9 (("a")), 100000000, 0, -232); (Tag9 (("structure")), 100000000, 0, -233); (Tag9 (("ap")), 100000000, 0, -234); (Tag9 (("an")), 100000000, 0, -235); (Tag9 (("ad")), 100000000, 0, -236); (Tag9 (("gadt")), 100000000, 0, -237)]), 100000000, 0, -231), (("runtime/tools.ml", 243, 7799, 7805), ("runtime/tools.ml", 245, 7918, 7962), 0), 0, Tag1 ("Refl__Tools", 637))]], 1, 0, [63; 15; 63], [0; 0; 0], 0, 0, (("runtime/tools.ml", 242, 7754, 7756), ("runtime/tools.ml", 246, 7963, 7968), 0), 0, 0, 1, Tag1 ("Refl__Tools", 636)), 1, 0); (("make", 1527), ((Tag1 (0, (Tag3 ((("make", 1526)), [((("arity")), 100000000, 0, -217); ((("rec_group")), 100000000, 0, -227); ((("kinds")), 100000000, 0, -228)], (0)), 100000000, 0, -230), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((("types")), 100000000, 0, -214); ((("structures")), 100000000, 0, -226); ((("arity")), 100000000, 0, -217); ((("rec_group")), 100000000, 0, -227); ((("kinds")), 100000000, 0, -228); ((("arguments")), 100000000, 0, -224); ((("gadt")), 100000000, 0, -229)], (0)), 100000000, 0, -225), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_skip"), [((("positive")), 100000000, 0, -220); ((("negative")), 100000000, 0, -221); ((("direct")), 100000000, 0, -218); ((("subpositive")), 100000000, 0, -222); ((("subnegative")), 100000000, 0, -223); ((("subdirect")), 100000000, 0, -215); ((("arguments")), 100000000, 0, -224)], (0)), 100000000, 0, -219), (Tag1 (0, (Tag3 ((("t", 1523)), [((("arity")), 100000000, 0, -217); ((("direct")), 100000000, 0, -218)], (0)), 100000000, 0, -216), (Tag3 ((("t", 1523)), [((("types")), 100000000, 0, -214); ((("subdirect")), 100000000, 0, -215)], (0)), 100000000, 0, -213), 0), 100000000, 0, -212), 0), 100000000, 0, -211), 0), 100000000, 0, -210), 0), 100000000, 0, -209), 0, (("runtime/tools.ml", 248, 7970, 7972), ("runtime/tools.ml", 255, 8251, 8277), 0), 0, Tag1 ("Refl__Tools", 638)), 0); Tag1 (("any", 1528), ([((("presence")), 100000000, 0, -208)], 1, Tag1 ([(("None", 816), (0), ((Tag3 ((("any", 1528)), [(Tag8 (([("Absent", (0))], (0, 100000000, 0, -202), 1, 0, 0)), 100000000, 0, -201)], (0)), 100000000, 0, -200)), (("runtime/tools.ml", 258, 8302, 8306), ("runtime/tools.ml", 258, 8302, 8328), 0), 0, Tag1 ("Refl__Tools", 640)); (("Some", 817), Tag1 ([(("item", 818), 0, (Tag10 ((Tag3 (Tag1 ((("T", 1521)), "t"), [(Tag9 (("a")), 100000000, 0, -206)], (0)), 100000000, 0, -207), [(Tag9 (("a")), 100000000, 0, -206)]), 100000000, 0, -205), (("runtime/tools.ml", 260, 8344, 8354), ("runtime/tools.ml", 260, 8344, 8373), 0), 0, Tag1 ("Refl__Tools", 641))]), ((Tag3 ((("any", 1528)), [((0), 100000000, 0, -204)], (0)), 100000000, 0, -203)), (("runtime/tools.ml", 259, 8329, 8333), ("runtime/tools.ml", 261, 8374, 8392), 0), 0, Tag1 ("Refl__Tools", 642))], 0), 1, 0, [63], [0], 0, 0, (("runtime/tools.ml", 257, 8279, 8281), ("runtime/tools.ml", 261, 8374, 8392), 0), 0, 0, 0, Tag1 ("Refl__Tools", 639)), 1, 0); (("append", 1529), ((Tag1 (0, (Tag3 ((("any", 1528)), [((("presence")), 100000000, 0, -198)], (0)), 100000000, 0, -199), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "presences"), [((("presence")), 100000000, 0, -198); ((("directs")), 100000000, 0, -195)], (0)), 100000000, 0, -197), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -193); ((("directs")), 100000000, 0, -195)], (0)), 100000000, 0, -196), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("directs")), 100000000, 0, -195); ((("direct")), 100000000, 0, -189); ((("subdirect")), 100000000, 0, -186)], (0)), 100000000, 0, -194), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -193); ((("types")), 100000000, 0, -191)], (0)), 100000000, 0, -192), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("types")), 100000000, 0, -191); ((("arity")), 100000000, 0, -188); ((("subarity")), 100000000, 0, -185)], (0)), 100000000, 0, -190), (Tag1 (0, (Tag3 ((("t", 1523)), [((("arity")), 100000000, 0, -188); ((("direct")), 100000000, 0, -189)], (0)), 100000000, 0, -187), (Tag3 ((("t", 1523)), [((("subarity")), 100000000, 0, -185); ((("subdirect")), 100000000, 0, -186)], (0)), 100000000, 0, -184), 0), 100000000, 0, -183), 0), 100000000, 0, -182), 0), 100000000, 0, -181), 0), 100000000, 0, -180), 0), 100000000, 0, -179), 0), 100000000, 0, -178), 0), 100000000, 0, -177), 0, (("runtime/tools.ml", 263, 8394, 8396), ("runtime/tools.ml", 271, 8649, 8678), 0), 0, Tag1 ("Refl__Tools", 649)), 0); (("to_sequence", 1530), ((Tag1 (0, (Tag3 ((("any", 1528)), [(Tag8 (([("Present", (0))], (0, 100000000, 0, -176), 1, 0, 0)), 100000000, 0, -175)], (0)), 100000000, 0, -174), (Tag1 (0, (Tag3 ((("t", 1523)), [((("sequence")), 100000000, 0, -171); ((("occurrences")), 100000000, 0, -173)], (0)), 100000000, 0, -172), (Tag3 (Tag1 (Tag2 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "Sequence"), (("T", 1521))), "t"), [((("sequence")), 100000000, 0, -171)], (0)), 100000000, 0, -170), 0), 100000000, 0, -169), 0), 100000000, 0, -168), 0, (("runtime/tools.ml", 273, 8680, 8682), ("runtime/tools.ml", 274, 8700, 8776), 0), 0, Tag1 ("Refl__Tools", 650)), 0)]), 0, (("runtime/visit.ml", 14, 233, 235), ("runtime/visit.ml", 14, 233, 292), 0), Tag1 ("Refl__Visit", 80)), 0, 0); (("visit", 1519), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [((("a")), 100000000, 0, -154); ((("structure")), 100000000, 0, -159); ((("arity")), 100000000, 0, -156); ((("rec_group")), 100000000, 0, -160); (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "Kinds"), "visitable"), 0, (0)), 100000000, 0, -161); ((("positive")), 100000000, 0, -162); ((("negative")), 100000000, 0, -163); ((("direct")), 100000000, 0, -157); ((("gadt")), 100000000, 0, -164)], (0)), 100000000, 0, -158), (Tag1 (0, (Tag3 (Tag1 ((("Visitors", 1518)), "t"), [((("arity")), 100000000, 0, -156); ((("direct")), 100000000, 0, -157)], (0)), 100000000, 0, -155), (Tag3 (Tag1 ((("Visitor", 1517)), "t"), [((("a")), 100000000, 0, -154)], (0)), 100000000, 0, -153), 0), 100000000, 0, -152), 0), 100000000, 0, -151), 0, (("runtime/visit.ml", 16, 294, 296), ("runtime/visit.ml", 19, 454, 472), 0), 0, Tag1 ("Refl__Visit", 82)), 0)])), 0, (("runtime/visit.ml", 22, 478, 478), ("runtime/visit.ml", 158, 5469, 5472), 0), Tag1 ("Refl__Visit", 433)), 0, 0)], "Refl__Visit", [("Refl__Visit", ("\164|\142\175\019i\157PK\180\210=\243\t\202\134")); ("Traverse__Values", ("}\239\001\023\024&\227\167Sl\002\148\026\190\180\025")); ("Traverse__Primitives", ("d\176\236}\2197\159\007\231,\000/p\138M\003")); ("Traverse__Modules", ("=\175q\026#\242\139\b\202\252\139\207\195\170\254\202")); ("Traverse__Interface", ("\252\146\219\195\199\167\234\143+\145l\200\254\244s}")); ("Traverse__", ("y\220\011\221C%Ob7%t,\252N21")); ("Traverse", ("\019\209\190\177II\1552 \b\174\006\b\1643\152")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Result", ("\247h\157\021\029a\144\199*\186Z\162\225\241\160>")); ("Stdlib__Option", ("^R\130\196\247\161\173\178\160\143)K\129\026\142\183")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stdcompat__stdlib_s", ("?\143\027\238\145\138\139e`\216P\248\156\178=\206")); ("Stdcompat__init", ("r\254q\255\217]\232\239'\192d\165\222\016\157\133")); ("Stdcompat", ("\139\1989\181:\137\230\132\240\223\206\210Y\135S\\")); ("Refl__Tools", ("i\215\207\166d\225\190DU\241\194\224\137P\158e")); ("Refl__Desc", ("\221\150mt\149.2\132\189\244\007\164&\203\225\172")); ("Refl__", ("i\003\196\150\161\159\229g\157\181\149\015g%\221\240")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

    end
