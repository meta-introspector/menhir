type formatter
val pp_open_box : formatter -> int -> unit
val open_box : int -> unit
val pp_close_box : formatter -> unit -> unit
val close_box : unit -> unit
val pp_open_hbox : formatter -> unit -> unit
val open_hbox : unit -> unit
val pp_open_vbox : formatter -> int -> unit
val open_vbox : int -> unit
val pp_open_hvbox : formatter -> int -> unit
val open_hvbox : int -> unit
val pp_open_hovbox : formatter -> int -> unit
val open_hovbox : int -> unit
val pp_print_string : formatter -> string -> unit
val print_string : string -> unit
val pp_print_bytes : formatter -> bytes -> unit
val print_bytes : bytes -> unit
val pp_print_as : formatter -> int -> string -> unit
val print_as : int -> string -> unit
val pp_print_int : formatter -> int -> unit
val print_int : int -> unit
val pp_print_float : formatter -> float -> unit
val print_float : float -> unit
val pp_print_char : formatter -> char -> unit
val print_char : char -> unit
val pp_print_bool : formatter -> bool -> unit
val print_bool : bool -> unit
val pp_print_space : formatter -> unit -> unit
val print_space : unit -> unit
val pp_print_cut : formatter -> unit -> unit
val print_cut : unit -> unit
val pp_print_break : formatter -> int -> int -> unit
val print_break : int -> int -> unit
val pp_print_custom_break :
  formatter ->
  fits:string * int * string -> breaks:string * int * string -> unit
val pp_force_newline : formatter -> unit -> unit
val force_newline : unit -> unit
val pp_print_if_newline : formatter -> unit -> unit
val print_if_newline : unit -> unit
val pp_print_flush : formatter -> unit -> unit
val print_flush : unit -> unit
val pp_print_newline : formatter -> unit -> unit
val print_newline : unit -> unit
val pp_set_margin : formatter -> int -> unit
val set_margin : int -> unit
val pp_get_margin : formatter -> unit -> int
val get_margin : unit -> int
val pp_set_max_indent : formatter -> int -> unit
val set_max_indent : int -> unit
val pp_get_max_indent : formatter -> unit -> int
val get_max_indent : unit -> int
type geometry = { max_indent : int; margin : int; }
val check_geometry : geometry -> bool
val pp_set_geometry : formatter -> max_indent:int -> margin:int -> unit
val set_geometry : max_indent:int -> margin:int -> unit
val pp_safe_set_geometry : formatter -> max_indent:int -> margin:int -> unit
val safe_set_geometry : max_indent:int -> margin:int -> unit
val pp_update_geometry : formatter -> (geometry -> geometry) -> unit
val update_geometry : (geometry -> geometry) -> unit
val pp_get_geometry : formatter -> unit -> geometry
val get_geometry : unit -> geometry
val pp_set_max_boxes : formatter -> int -> unit
val set_max_boxes : int -> unit
val pp_get_max_boxes : formatter -> unit -> int
val get_max_boxes : unit -> int
val pp_over_max_boxes : formatter -> unit -> bool
val over_max_boxes : unit -> bool
val pp_open_tbox : formatter -> unit -> unit
val open_tbox : unit -> unit
val pp_close_tbox : formatter -> unit -> unit
val close_tbox : unit -> unit
val pp_set_tab : formatter -> unit -> unit
val set_tab : unit -> unit
val pp_print_tab : formatter -> unit -> unit
val print_tab : unit -> unit
val pp_print_tbreak : formatter -> int -> int -> unit
val print_tbreak : int -> int -> unit
val pp_set_ellipsis_text : formatter -> string -> unit
val set_ellipsis_text : string -> unit
val pp_get_ellipsis_text : formatter -> unit -> string
val get_ellipsis_text : unit -> string
type stag = ..
type tag = string
type stag += String_tag of tag
val pp_open_stag : formatter -> stag -> unit
val open_stag : stag -> unit
val pp_close_stag : formatter -> unit -> unit
val close_stag : unit -> unit
val pp_set_tags : formatter -> bool -> unit
val set_tags : bool -> unit
val pp_set_print_tags : formatter -> bool -> unit
val set_print_tags : bool -> unit
val pp_set_mark_tags : formatter -> bool -> unit
val set_mark_tags : bool -> unit
val pp_get_print_tags : formatter -> unit -> bool
val get_print_tags : unit -> bool
val pp_get_mark_tags : formatter -> unit -> bool
val get_mark_tags : unit -> bool
val pp_set_formatter_out_channel : formatter -> out_channel -> unit
val set_formatter_out_channel : out_channel -> unit
val pp_set_formatter_output_functions :
  formatter -> (string -> int -> int -> unit) -> (unit -> unit) -> unit
val set_formatter_output_functions :
  (string -> int -> int -> unit) -> (unit -> unit) -> unit
val pp_get_formatter_output_functions :
  formatter -> unit -> (string -> int -> int -> unit) * (unit -> unit)
val get_formatter_output_functions :
  unit -> (string -> int -> int -> unit) * (unit -> unit)
type formatter_out_functions = {
  out_string : string -> int -> int -> unit;
  out_flush : unit -> unit;
  out_newline : unit -> unit;
  out_spaces : int -> unit;
  out_indent : int -> unit;
}
val pp_set_formatter_out_functions :
  formatter -> formatter_out_functions -> unit
val set_formatter_out_functions : formatter_out_functions -> unit
val pp_get_formatter_out_functions :
  formatter -> unit -> formatter_out_functions
val get_formatter_out_functions : unit -> formatter_out_functions
type formatter_stag_functions = {
  mark_open_stag : stag -> string;
  mark_close_stag : stag -> string;
  print_open_stag : stag -> unit;
  print_close_stag : stag -> unit;
}
val pp_set_formatter_stag_functions :
  formatter -> formatter_stag_functions -> unit
val set_formatter_stag_functions : formatter_stag_functions -> unit
val pp_get_formatter_stag_functions :
  formatter -> unit -> formatter_stag_functions
val get_formatter_stag_functions : unit -> formatter_stag_functions
val formatter_of_out_channel : out_channel -> formatter
val synchronized_formatter_of_out_channel :
  out_channel -> formatter Domain.DLS.key
val std_formatter : formatter
val get_std_formatter : unit -> formatter
val err_formatter : formatter
val get_err_formatter : unit -> formatter
val formatter_of_buffer : Buffer.t -> formatter
val stdbuf : Buffer.t
val get_stdbuf : unit -> Buffer.t
val str_formatter : formatter
val get_str_formatter : unit -> formatter
val flush_str_formatter : unit -> string
val make_formatter :
  (string -> int -> int -> unit) -> (unit -> unit) -> formatter
val make_synchronized_formatter :
  (string -> int -> int -> unit) ->
  (unit -> unit) -> formatter Domain.DLS.key
val formatter_of_out_functions : formatter_out_functions -> formatter
type symbolic_output_item =
    Output_flush
  | Output_newline
  | Output_string of string
  | Output_spaces of int
  | Output_indent of int
type symbolic_output_buffer
val make_symbolic_output_buffer : unit -> symbolic_output_buffer
val clear_symbolic_output_buffer : symbolic_output_buffer -> unit
val get_symbolic_output_buffer :
  symbolic_output_buffer -> symbolic_output_item list
val flush_symbolic_output_buffer :
  symbolic_output_buffer -> symbolic_output_item list
val add_symbolic_output_item :
  symbolic_output_buffer -> symbolic_output_item -> unit
val formatter_of_symbolic_output_buffer : symbolic_output_buffer -> formatter
val pp_print_iter :
  ?pp_sep:(formatter -> unit -> unit) ->
  (('a -> unit) -> 'b -> unit) ->
  (formatter -> 'a -> unit) -> formatter -> 'b -> unit
val pp_print_list :
  ?pp_sep:(formatter -> unit -> unit) ->
  (formatter -> 'a -> unit) -> formatter -> 'a list -> unit
val pp_print_array :
  ?pp_sep:(formatter -> unit -> unit) ->
  (formatter -> 'a -> unit) -> formatter -> 'a array -> unit
val pp_print_seq :
  ?pp_sep:(formatter -> unit -> unit) ->
  (formatter -> 'a -> unit) -> formatter -> 'a Seq.t -> unit
val pp_print_text : formatter -> string -> unit
val pp_print_option :
  ?none:(formatter -> unit -> unit) ->
  (formatter -> 'a -> unit) -> formatter -> 'a option -> unit
val pp_print_result :
  ok:(formatter -> 'a -> unit) ->
  error:(formatter -> 'e -> unit) -> formatter -> ('a, 'e) result -> unit
val pp_print_either :
  left:(formatter -> 'a -> unit) ->
  right:(formatter -> 'b -> unit) -> formatter -> ('a, 'b) Either.t -> unit
val fprintf : formatter -> ('a, formatter, unit) format -> 'a
val printf : ('a, formatter, unit) format -> 'a
val eprintf : ('a, formatter, unit) format -> 'a
val sprintf : ('a, unit, string) format -> 'a
val asprintf : ('a, formatter, unit, string) format4 -> 'a
val dprintf : ('a, formatter, unit, formatter -> unit) format4 -> 'a
val ifprintf : formatter -> ('a, formatter, unit) format -> 'a
val kfprintf :
  (formatter -> 'a) -> formatter -> ('b, formatter, unit, 'a) format4 -> 'b
val kdprintf :
  ((formatter -> unit) -> 'a) -> ('b, formatter, unit, 'a) format4 -> 'b
val ikfprintf :
  (formatter -> 'a) -> formatter -> ('b, formatter, unit, 'a) format4 -> 'b
val ksprintf : (string -> 'a) -> ('b, unit, string, 'a) format4 -> 'b
("DEBUG:rule", [Tag1 (("formatter", 689), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("format.mli", 123, 6128, 6128), ("format.mli", 123, 6128, 6142), 0), 0, 0, 0, Tag1 ("Stdlib__Format", 0)), 1, 0); (("pp_open_box", 690), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -845), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -844), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -843), 0), 100000000, 0, -842), 0), 100000000, 0, -841), 0, (("format.mli", 155, 7460, 7460), ("format.mli", 155, 7460, 7502), 0), 0, Tag1 ("Stdlib__Format", 1)), 0); (("open_box", 691), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -840), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -839), 0), 100000000, 0, -838), 0, (("format.mli", 156, 7503, 7503), ("format.mli", 156, 7503, 7529), 0), 0, Tag1 ("Stdlib__Format", 2)), 0); (("pp_close_box", 692), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -837), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -836), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -835), 0), 100000000, 0, -834), 0), 100000000, 0, -833), 0, (("format.mli", 179, 8304, 8304), ("format.mli", 179, 8304, 8348), 0), 0, Tag1 ("Stdlib__Format", 3)), 0); (("close_box", 693), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -832), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -831), 0), 100000000, 0, -830), 0, (("format.mli", 180, 8349, 8349), ("format.mli", 180, 8349, 8377), 0), 0, Tag1 ("Stdlib__Format", 4)), 0); (("pp_open_hbox", 694), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -829), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -828), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -827), 0), 100000000, 0, -826), 0), 100000000, 0, -825), 0, (("format.mli", 183, 8437, 8437), ("format.mli", 183, 8437, 8481), 0), 0, Tag1 ("Stdlib__Format", 5)), 0); (("open_hbox", 695), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -824), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -823), 0), 100000000, 0, -822), 0, (("format.mli", 184, 8482, 8482), ("format.mli", 184, 8482, 8510), 0), 0, Tag1 ("Stdlib__Format", 6)), 0); (("pp_open_vbox", 696), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -821), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -820), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -819), 0), 100000000, 0, -818), 0), 100000000, 0, -817), 0, (("format.mli", 193, 8753, 8753), ("format.mli", 193, 8753, 8796), 0), 0, Tag1 ("Stdlib__Format", 7)), 0); (("open_vbox", 697), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -816), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -815), 0), 100000000, 0, -814), 0, (("format.mli", 194, 8797, 8797), ("format.mli", 194, 8797, 8824), 0), 0, Tag1 ("Stdlib__Format", 8)), 0); (("pp_open_hvbox", 698), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -813), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -812), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -811), 0), 100000000, 0, -810), 0), 100000000, 0, -809), 0, (("format.mli", 206, 9139, 9139), ("format.mli", 206, 9139, 9183), 0), 0, Tag1 ("Stdlib__Format", 9)), 0); (("open_hvbox", 699), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -808), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -807), 0), 100000000, 0, -806), 0, (("format.mli", 207, 9184, 9184), ("format.mli", 207, 9184, 9212), 0), 0, Tag1 ("Stdlib__Format", 10)), 0); (("pp_open_hovbox", 700), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -805), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -804), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -803), 0), 100000000, 0, -802), 0), 100000000, 0, -801), 0, (("format.mli", 218, 9524, 9524), ("format.mli", 218, 9524, 9569), 0), 0, Tag1 ("Stdlib__Format", 11)), 0); (("open_hovbox", 701), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -800), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -799), 0), 100000000, 0, -798), 0, (("format.mli", 219, 9570, 9570), ("format.mli", 219, 9570, 9599), 0), 0, Tag1 ("Stdlib__Format", 12)), 0); (("pp_print_string", 702), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -797), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -796), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -795), 0), 100000000, 0, -794), 0), 100000000, 0, -793), 0, (("format.mli", 234, 10005, 10005), ("format.mli", 234, 10005, 10054), 0), 0, Tag1 ("Stdlib__Format", 13)), 0); (("print_string", 703), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -792), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -791), 0), 100000000, 0, -790), 0, (("format.mli", 235, 10055, 10055), ("format.mli", 235, 10055, 10088), 0), 0, Tag1 ("Stdlib__Format", 14)), 0); (("pp_print_bytes", 704), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -789), (Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -788), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -787), 0), 100000000, 0, -786), 0), 100000000, 0, -785), 0, (("format.mli", 238, 10168, 10168), ("format.mli", 238, 10168, 10215), 0), 0, Tag1 ("Stdlib__Format", 15)), 0); (("print_bytes", 705), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -784), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -783), 0), 100000000, 0, -782), 0, (("format.mli", 239, 10216, 10216), ("format.mli", 239, 10216, 10247), 0), 0, Tag1 ("Stdlib__Format", 16)), 0); (("pp_print_as", 706), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -781), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -780), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -779), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -778), 0), 100000000, 0, -777), 0), 100000000, 0, -776), 0), 100000000, 0, -775), 0, (("format.mli", 244, 10342, 10342), ("format.mli", 244, 10342, 10394), 0), 0, Tag1 ("Stdlib__Format", 17)), 0); (("print_as", 707), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -774), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -773), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -772), 0), 100000000, 0, -771), 0), 100000000, 0, -770), 0, (("format.mli", 245, 10395, 10395), ("format.mli", 245, 10395, 10431), 0), 0, Tag1 ("Stdlib__Format", 18)), 0); (("pp_print_int", 708), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -769), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -768), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -767), 0), 100000000, 0, -766), 0), 100000000, 0, -765), 0, (("format.mli", 250, 10575, 10575), ("format.mli", 250, 10575, 10618), 0), 0, Tag1 ("Stdlib__Format", 19)), 0); (("print_int", 709), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -764), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -763), 0), 100000000, 0, -762), 0, (("format.mli", 251, 10619, 10619), ("format.mli", 251, 10619, 10646), 0), 0, Tag1 ("Stdlib__Format", 20)), 0); (("pp_print_float", 710), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -761), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -760), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -759), 0), 100000000, 0, -758), 0), 100000000, 0, -757), 0, (("format.mli", 254, 10708, 10708), ("format.mli", 254, 10708, 10755), 0), 0, Tag1 ("Stdlib__Format", 21)), 0); (("print_float", 711), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -756), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -755), 0), 100000000, 0, -754), 0, (("format.mli", 255, 10756, 10756), ("format.mli", 255, 10756, 10787), 0), 0, Tag1 ("Stdlib__Format", 22)), 0); (("pp_print_char", 712), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -753), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -752), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -751), 0), 100000000, 0, -750), 0), 100000000, 0, -749), 0, (("format.mli", 258, 10862, 10862), ("format.mli", 258, 10862, 10907), 0), 0, Tag1 ("Stdlib__Format", 23)), 0); (("print_char", 713), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -748), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -747), 0), 100000000, 0, -746), 0, (("format.mli", 259, 10908, 10908), ("format.mli", 259, 10908, 10937), 0), 0, Tag1 ("Stdlib__Format", 24)), 0); (("pp_print_bool", 714), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -745), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -744), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -743), 0), 100000000, 0, -742), 0), 100000000, 0, -741), 0, (("format.mli", 262, 11000, 11000), ("format.mli", 262, 11000, 11045), 0), 0, Tag1 ("Stdlib__Format", 25)), 0); (("print_bool", 715), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -740), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -739), 0), 100000000, 0, -738), 0, (("format.mli", 263, 11046, 11046), ("format.mli", 263, 11046, 11075), 0), 0, Tag1 ("Stdlib__Format", 26)), 0); (("pp_print_space", 716), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -737), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -736), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -735), 0), 100000000, 0, -734), 0), 100000000, 0, -733), 0, (("format.mli", 287, 11989, 11989), ("format.mli", 287, 11989, 12035), 0), 0, Tag1 ("Stdlib__Format", 27)), 0); (("print_space", 717), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -732), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -731), 0), 100000000, 0, -730), 0, (("format.mli", 288, 12036, 12036), ("format.mli", 288, 12036, 12066), 0), 0, Tag1 ("Stdlib__Format", 28)), 0); (("pp_print_cut", 718), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -729), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -728), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -727), 0), 100000000, 0, -726), 0), 100000000, 0, -725), 0, (("format.mli", 296, 12285, 12285), ("format.mli", 296, 12285, 12329), 0), 0, Tag1 ("Stdlib__Format", 29)), 0); (("print_cut", 719), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -724), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -723), 0), 100000000, 0, -722), 0, (("format.mli", 297, 12330, 12330), ("format.mli", 297, 12330, 12358), 0), 0, Tag1 ("Stdlib__Format", 30)), 0); (("pp_print_break", 720), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -721), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -720), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -719), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -718), 0), 100000000, 0, -717), 0), 100000000, 0, -716), 0), 100000000, 0, -715), 0, (("format.mli", 305, 12569, 12569), ("format.mli", 305, 12569, 12621), 0), 0, Tag1 ("Stdlib__Format", 31)), 0); (("print_break", 721), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -714), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -713), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -712), 0), 100000000, 0, -711), 0), 100000000, 0, -710), 0, (("format.mli", 306, 12622, 12622), ("format.mli", 306, 12622, 12658), 0), 0, Tag1 ("Stdlib__Format", 32)), 0); (("pp_print_custom_break", 722), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -709), (Tag1 (("fits"), (Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -706); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -707); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -708)]), 100000000, 0, -705), (Tag1 (("breaks"), (Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -702); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -703); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -704)]), 100000000, 0, -701), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -700), 0), 100000000, 0, -699), 0), 100000000, 0, -698), 0), 100000000, 0, -697), 0, (("format.mli", 315, 12915, 12915), ("format.mli", 319, 13028, 13034), 0), 0, Tag1 ("Stdlib__Format", 33)), 0); (("pp_force_newline", 723), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -696), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -695), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -694), 0), 100000000, 0, -693), 0), 100000000, 0, -692), 0, (("format.mli", 357, 14202, 14202), ("format.mli", 357, 14202, 14250), 0), 0, Tag1 ("Stdlib__Format", 34)), 0); (("force_newline", 724), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -691), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -690), 0), 100000000, 0, -689), 0, (("format.mli", 358, 14251, 14251), ("format.mli", 358, 14251, 14283), 0), 0, Tag1 ("Stdlib__Format", 35)), 0); (("pp_print_if_newline", 725), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -688), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -687), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -686), 0), 100000000, 0, -685), 0), 100000000, 0, -684), 0, (("format.mli", 369, 14625, 14625), ("format.mli", 369, 14625, 14676), 0), 0, Tag1 ("Stdlib__Format", 36)), 0); (("print_if_newline", 726), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -683), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -682), 0), 100000000, 0, -681), 0, (("format.mli", 370, 14677, 14677), ("format.mli", 370, 14677, 14712), 0), 0, Tag1 ("Stdlib__Format", 37)), 0); (("pp_print_flush", 727), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -680), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -679), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -678), 0), 100000000, 0, -677), 0), 100000000, 0, -676), 0, (("format.mli", 378, 14891, 14891), ("format.mli", 378, 14891, 14937), 0), 0, Tag1 ("Stdlib__Format", 38)), 0); (("print_flush", 728), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -675), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -674), 0), 100000000, 0, -673), 0, (("format.mli", 379, 14938, 14938), ("format.mli", 379, 14938, 14968), 0), 0, Tag1 ("Stdlib__Format", 39)), 0); (("pp_print_newline", 729), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -672), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -671), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -670), 0), 100000000, 0, -669), 0), 100000000, 0, -668), 0, (("format.mli", 404, 16114, 16114), ("format.mli", 404, 16114, 16162), 0), 0, Tag1 ("Stdlib__Format", 40)), 0); (("print_newline", 730), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -667), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -666), 0), 100000000, 0, -665), 0, (("format.mli", 405, 16163, 16163), ("format.mli", 405, 16163, 16195), 0), 0, Tag1 ("Stdlib__Format", 41)), 0); (("pp_set_margin", 731), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -664), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -663), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -662), 0), 100000000, 0, -661), 0), 100000000, 0, -660), 0, (("format.mli", 421, 16712, 16712), ("format.mli", 421, 16712, 16756), 0), 0, Tag1 ("Stdlib__Format", 42)), 0); (("set_margin", 732), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -659), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -658), 0), 100000000, 0, -657), 0, (("format.mli", 422, 16757, 16757), ("format.mli", 422, 16757, 16785), 0), 0, Tag1 ("Stdlib__Format", 43)), 0); (("pp_get_margin", 733), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -656), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -655), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -654), 0), 100000000, 0, -653), 0), 100000000, 0, -652), 0, (("format.mli", 439, 17509, 17509), ("format.mli", 439, 17509, 17553), 0), 0, Tag1 ("Stdlib__Format", 44)), 0); (("get_margin", 734), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -651), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -650), 0), 100000000, 0, -649), 0, (("format.mli", 440, 17554, 17554), ("format.mli", 440, 17554, 17582), 0), 0, Tag1 ("Stdlib__Format", 45)), 0); (("pp_set_max_indent", 735), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -648), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -647), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -646), 0), 100000000, 0, -645), 0), 100000000, 0, -644), 0, (("format.mli", 445, 17681, 17681), ("format.mli", 445, 17681, 17729), 0), 0, Tag1 ("Stdlib__Format", 46)), 0); (("set_max_indent", 736), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -643), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -642), 0), 100000000, 0, -641), 0, (("format.mli", 446, 17730, 17730), ("format.mli", 446, 17730, 17762), 0), 0, Tag1 ("Stdlib__Format", 47)), 0); (("pp_get_max_indent", 737), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -640), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -639), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -638), 0), 100000000, 0, -637), 0), 100000000, 0, -636), 0, (("format.mli", 485, 19338, 19338), ("format.mli", 485, 19338, 19386), 0), 0, Tag1 ("Stdlib__Format", 48)), 0); (("get_max_indent", 738), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -635), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -634), 0), 100000000, 0, -633), 0, (("format.mli", 486, 19387, 19387), ("format.mli", 486, 19387, 19419), 0), 0, Tag1 ("Stdlib__Format", 49)), 0); Tag1 (("geometry", 739), (0, 0, [[(("max_indent", 320), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -631), (("format.mli", 496, 19628, 19646), ("format.mli", 496, 19628, 19661), 0), 0, Tag1 ("Stdlib__Format", 51)); (("margin", 321), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -632), (("format.mli", 496, 19628, 19662), ("format.mli", 496, 19628, 19673), 0), 0, Tag1 ("Stdlib__Format", 52))]], 1, 0, 0, 0, 0, 0, (("format.mli", 496, 19628, 19628), ("format.mli", 496, 19628, 19674), 0), 0, 0, 0, Tag1 ("Stdlib__Format", 50)), 1, 0); (("check_geometry", 740), ((Tag1 (0, (Tag3 ((("geometry", 739)), 0, (0)), 100000000, 0, -630), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -629), 0), 100000000, 0, -628), 0, (("format.mli", 499, 19695, 19695), ("format.mli", 499, 19695, 19731), 0), 0, Tag1 ("Stdlib__Format", 53)), 0); (("pp_set_geometry", 741), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -627), (Tag1 (("max_indent"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -626), (Tag1 (("margin"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -625), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -624), 0), 100000000, 0, -623), 0), 100000000, 0, -622), 0), 100000000, 0, -621), 0, (("format.mli", 503, 19824, 19824), ("format.mli", 503, 19824, 19895), 0), 0, Tag1 ("Stdlib__Format", 54)), 0); (("set_geometry", 742), ((Tag1 (("max_indent"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -620), (Tag1 (("margin"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -619), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -618), 0), 100000000, 0, -617), 0), 100000000, 0, -616), 0, (("format.mli", 504, 19896, 19896), ("format.mli", 504, 19896, 19951), 0), 0, Tag1 ("Stdlib__Format", 55)), 0); (("pp_safe_set_geometry", 743), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -615), (Tag1 (("max_indent"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -614), (Tag1 (("margin"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -613), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -612), 0), 100000000, 0, -611), 0), 100000000, 0, -610), 0), 100000000, 0, -609), 0, (("format.mli", 505, 19952, 19952), ("format.mli", 505, 19952, 20028), 0), 0, Tag1 ("Stdlib__Format", 56)), 0); (("safe_set_geometry", 744), ((Tag1 (("max_indent"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -608), (Tag1 (("margin"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -607), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -606), 0), 100000000, 0, -605), 0), 100000000, 0, -604), 0, (("format.mli", 506, 20029, 20029), ("format.mli", 506, 20029, 20089), 0), 0, Tag1 ("Stdlib__Format", 57)), 0); (("pp_update_geometry", 745), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -603), (Tag1 (0, (Tag1 (0, (Tag3 ((("geometry", 739)), 0, (0)), 100000000, 0, -602), (Tag3 ((("geometry", 739)), 0, (0)), 100000000, 0, -601), 0), 100000000, 0, -600), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -599), 0), 100000000, 0, -598), 0), 100000000, 0, -597), 0, (("format.mli", 534, 20931, 20931), ("format.mli", 534, 20931, 20999), 0), 0, Tag1 ("Stdlib__Format", 58)), 0); (("update_geometry", 746), ((Tag1 (0, (Tag1 (0, (Tag3 ((("geometry", 739)), 0, (0)), 100000000, 0, -596), (Tag3 ((("geometry", 739)), 0, (0)), 100000000, 0, -595), 0), 100000000, 0, -594), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -593), 0), 100000000, 0, -592), 0, (("format.mli", 535, 21000, 21000), ("format.mli", 535, 21000, 21052), 0), 0, Tag1 ("Stdlib__Format", 59)), 0); (("pp_get_geometry", 747), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -591), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -590), (Tag3 ((("geometry", 739)), 0, (0)), 100000000, 0, -589), 0), 100000000, 0, -588), 0), 100000000, 0, -587), 0, (("format.mli", 537, 21054, 21054), ("format.mli", 537, 21054, 21104), 0), 0, Tag1 ("Stdlib__Format", 60)), 0); (("get_geometry", 748), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -586), (Tag3 ((("geometry", 739)), 0, (0)), 100000000, 0, -585), 0), 100000000, 0, -584), 0, (("format.mli", 538, 21105, 21105), ("format.mli", 538, 21105, 21139), 0), 0, Tag1 ("Stdlib__Format", 61)), 0); (("pp_set_max_boxes", 749), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -583), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -582), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -581), 0), 100000000, 0, -580), 0), 100000000, 0, -579), 0, (("format.mli", 555, 21491, 21491), ("format.mli", 555, 21491, 21538), 0), 0, Tag1 ("Stdlib__Format", 62)), 0); (("set_max_boxes", 750), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -578), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -577), 0), 100000000, 0, -576), 0, (("format.mli", 556, 21539, 21539), ("format.mli", 556, 21539, 21570), 0), 0, Tag1 ("Stdlib__Format", 63)), 0); (("pp_get_max_boxes", 751), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -575), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -574), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -573), 0), 100000000, 0, -572), 0), 100000000, 0, -571), 0, (("format.mli", 566, 21862, 21862), ("format.mli", 566, 21862, 21909), 0), 0, Tag1 ("Stdlib__Format", 64)), 0); (("get_max_boxes", 752), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -570), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -569), 0), 100000000, 0, -568), 0, (("format.mli", 567, 21910, 21910), ("format.mli", 567, 21910, 21941), 0), 0, Tag1 ("Stdlib__Format", 65)), 0); (("pp_over_max_boxes", 753), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -567), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -566), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -565), 0), 100000000, 0, -564), 0), 100000000, 0, -563), 0, (("format.mli", 572, 22029, 22029), ("format.mli", 572, 22029, 22078), 0), 0, Tag1 ("Stdlib__Format", 66)), 0); (("over_max_boxes", 754), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -562), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -561), 0), 100000000, 0, -560), 0, (("format.mli", 573, 22079, 22079), ("format.mli", 573, 22079, 22112), 0), 0, Tag1 ("Stdlib__Format", 67)), 0); (("pp_open_tbox", 755), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -559), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -558), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -557), 0), 100000000, 0, -556), 0), 100000000, 0, -555), 0, (("format.mli", 596, 22855, 22855), ("format.mli", 596, 22855, 22899), 0), 0, Tag1 ("Stdlib__Format", 68)), 0); (("open_tbox", 756), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -554), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -553), 0), 100000000, 0, -552), 0, (("format.mli", 597, 22900, 22900), ("format.mli", 597, 22900, 22928), 0), 0, Tag1 ("Stdlib__Format", 69)), 0); (("pp_close_tbox", 757), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -551), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -550), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -549), 0), 100000000, 0, -548), 0), 100000000, 0, -547), 0, (("format.mli", 611, 23435, 23435), ("format.mli", 611, 23435, 23480), 0), 0, Tag1 ("Stdlib__Format", 70)), 0); (("close_tbox", 758), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -546), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -545), 0), 100000000, 0, -544), 0, (("format.mli", 612, 23481, 23481), ("format.mli", 612, 23481, 23510), 0), 0, Tag1 ("Stdlib__Format", 71)), 0); (("pp_set_tab", 759), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -543), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -542), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -541), 0), 100000000, 0, -540), 0), 100000000, 0, -539), 0, (("format.mli", 615, 23567, 23567), ("format.mli", 615, 23567, 23609), 0), 0, Tag1 ("Stdlib__Format", 72)), 0); (("set_tab", 760), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -538), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -537), 0), 100000000, 0, -536), 0, (("format.mli", 616, 23610, 23610), ("format.mli", 616, 23610, 23636), 0), 0, Tag1 ("Stdlib__Format", 73)), 0); (("pp_print_tab", 761), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -535), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -534), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -533), 0), 100000000, 0, -532), 0), 100000000, 0, -531), 0, (("format.mli", 619, 23698, 23698), ("format.mli", 619, 23698, 23742), 0), 0, Tag1 ("Stdlib__Format", 74)), 0); (("print_tab", 762), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -530), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -529), 0), 100000000, 0, -528), 0, (("format.mli", 620, 23743, 23743), ("format.mli", 620, 23743, 23771), 0), 0, Tag1 ("Stdlib__Format", 75)), 0); (("pp_print_tbreak", 763), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -527), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -526), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -525), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -524), 0), 100000000, 0, -523), 0), 100000000, 0, -522), 0), 100000000, 0, -521), 0, (("format.mli", 628, 24095, 24095), ("format.mli", 628, 24095, 24148), 0), 0, Tag1 ("Stdlib__Format", 76)), 0); (("print_tbreak", 764), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -520), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -519), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -518), 0), 100000000, 0, -517), 0), 100000000, 0, -516), 0, (("format.mli", 629, 24149, 24149), ("format.mli", 629, 24149, 24186), 0), 0, Tag1 ("Stdlib__Format", 77)), 0); (("pp_set_ellipsis_text", 765), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -515), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -514), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -513), 0), 100000000, 0, -512), 0), 100000000, 0, -511), 0, (("format.mli", 646, 24724, 24724), ("format.mli", 646, 24724, 24778), 0), 0, Tag1 ("Stdlib__Format", 78)), 0); (("set_ellipsis_text", 766), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -510), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -509), 0), 100000000, 0, -508), 0, (("format.mli", 647, 24779, 24779), ("format.mli", 647, 24779, 24817), 0), 0, Tag1 ("Stdlib__Format", 79)), 0); (("pp_get_ellipsis_text", 767), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -507), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -506), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -505), 0), 100000000, 0, -504), 0), 100000000, 0, -503), 0, (("format.mli", 652, 24943, 24943), ("format.mli", 652, 24943, 24997), 0), 0, Tag1 ("Stdlib__Format", 80)), 0); (("get_ellipsis_text", 768), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -502), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -501), 0), 100000000, 0, -500), 0, (("format.mli", 653, 24998, 24998), ("format.mli", 653, 24998, 25036), 0), 0, Tag1 ("Stdlib__Format", 81)), 0); Tag1 (("stag", 769), (0, 0, 1, 1, 0, 0, 0, 0, 0, (("format.mli", 658, 25109, 25109), ("format.mli", 658, 25109, 25123), 0), 0, 0, 0, Tag1 ("Stdlib__Format", 82)), 1, 0); Tag1 (("tag", 770), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -499)), 0, 0, 0, 0, (("format.mli", 736, 29075, 29075), ("format.mli", 736, 29075, 29092), 0), 0, 0, 0, Tag1 ("Stdlib__Format", 83)), 1, 0); Tag2 (("String_tag", 771), ((("stag", 769)), 0, ([(Tag3 ((("tag", 770)), 0, (0)), 100000000, 0, -498)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Stdlib__Format", 84)), 0, 0); (("pp_open_stag", 772), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -497), (Tag1 (0, (Tag3 ((("stag", 769)), 0, (0)), 100000000, 0, -496), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -495), 0), 100000000, 0, -494), 0), 100000000, 0, -493), 0, (("format.mli", 745, 29335, 29335), ("format.mli", 745, 29335, 29379), 0), 0, Tag1 ("Stdlib__Format", 85)), 0); (("open_stag", 773), ((Tag1 (0, (Tag3 ((("stag", 769)), 0, (0)), 100000000, 0, -492), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -491), 0), 100000000, 0, -490), 0, (("format.mli", 746, 29380, 29380), ("format.mli", 746, 29380, 29408), 0), 0, Tag1 ("Stdlib__Format", 86)), 0); (("pp_close_stag", 774), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -489), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -488), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -487), 0), 100000000, 0, -486), 0), 100000000, 0, -485), 0, (("format.mli", 756, 29708, 29708), ("format.mli", 756, 29708, 29753), 0), 0, Tag1 ("Stdlib__Format", 87)), 0); (("close_stag", 775), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -484), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -483), 0), 100000000, 0, -482), 0, (("format.mli", 757, 29754, 29754), ("format.mli", 757, 29754, 29783), 0), 0, Tag1 ("Stdlib__Format", 88)), 0); (("pp_set_tags", 776), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -481), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -480), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -479), 0), 100000000, 0, -478), 0), 100000000, 0, -477), 0, (("format.mli", 767, 30095, 30095), ("format.mli", 767, 30095, 30138), 0), 0, Tag1 ("Stdlib__Format", 89)), 0); (("set_tags", 777), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -476), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -475), 0), 100000000, 0, -474), 0, (("format.mli", 768, 30139, 30139), ("format.mli", 768, 30139, 30166), 0), 0, Tag1 ("Stdlib__Format", 90)), 0); (("pp_set_print_tags", 778), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -473), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -472), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -471), 0), 100000000, 0, -470), 0), 100000000, 0, -469), 0, (("format.mli", 773, 30262, 30262), ("format.mli", 773, 30262, 30311), 0), 0, Tag1 ("Stdlib__Format", 91)), 0); (("set_print_tags", 779), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -468), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -467), 0), 100000000, 0, -466), 0, (("format.mli", 774, 30312, 30312), ("format.mli", 774, 30312, 30345), 0), 0, Tag1 ("Stdlib__Format", 92)), 0); (("pp_set_mark_tags", 780), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -465), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -464), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -463), 0), 100000000, 0, -462), 0), 100000000, 0, -461), 0, (("format.mli", 777, 30425, 30425), ("format.mli", 777, 30425, 30473), 0), 0, Tag1 ("Stdlib__Format", 93)), 0); (("set_mark_tags", 781), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -460), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -459), 0), 100000000, 0, -458), 0, (("format.mli", 778, 30474, 30474), ("format.mli", 778, 30474, 30506), 0), 0, Tag1 ("Stdlib__Format", 94)), 0); (("pp_get_print_tags", 782), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -457), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -456), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -455), 0), 100000000, 0, -454), 0), 100000000, 0, -453), 0, (("format.mli", 781, 30584, 30584), ("format.mli", 781, 30584, 30633), 0), 0, Tag1 ("Stdlib__Format", 95)), 0); (("get_print_tags", 783), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -452), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -451), 0), 100000000, 0, -450), 0, (("format.mli", 782, 30634, 30634), ("format.mli", 782, 30634, 30667), 0), 0, Tag1 ("Stdlib__Format", 96)), 0); (("pp_get_mark_tags", 784), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -449), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -448), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -447), 0), 100000000, 0, -446), 0), 100000000, 0, -445), 0, (("format.mli", 785, 30730, 30730), ("format.mli", 785, 30730, 30778), 0), 0, Tag1 ("Stdlib__Format", 97)), 0); (("get_mark_tags", 785), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -444), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -443), 0), 100000000, 0, -442), 0, (("format.mli", 786, 30779, 30779), ("format.mli", 786, 30779, 30811), 0), 0, Tag1 ("Stdlib__Format", 98)), 0); (("pp_set_formatter_out_channel", 786), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -441), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -440), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -439), 0), 100000000, 0, -438), 0), 100000000, 0, -437), 0, (("format.mli", 790, 30926, 30926), ("format.mli", 791, 30961, 31002), 0), 0, Tag1 ("Stdlib__Format", 99)), 0); (("set_formatter_out_channel", 787), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -436), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -435), 0), 100000000, 0, -434), 0, (("format.mli", 792, 31003, 31003), ("format.mli", 792, 31003, 31061), 0), 0, Tag1 ("Stdlib__Format", 100)), 0); (("pp_set_formatter_output_functions", 788), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -433), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -432), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -431), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -430), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -429), 0), 100000000, 0, -428), 0), 100000000, 0, -427), 0), 100000000, 0, -426), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -425), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -424), 0), 100000000, 0, -423), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -422), 0), 100000000, 0, -421), 0), 100000000, 0, -420), 0), 100000000, 0, -419), 0, (("format.mli", 801, 31364, 31364), ("format.mli", 802, 31404, 31475), 0), 0, Tag1 ("Stdlib__Format", 101)), 0); (("set_formatter_output_functions", 789), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -418), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -417), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -416), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -415), 0), 100000000, 0, -414), 0), 100000000, 0, -413), 0), 100000000, 0, -412), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -411), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -410), 0), 100000000, 0, -409), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -408), 0), 100000000, 0, -407), 0), 100000000, 0, -406), 0, (("format.mli", 803, 31476, 31476), ("format.mli", 804, 31513, 31571), 0), 0, Tag1 ("Stdlib__Format", 102)), 0); (("pp_get_formatter_output_functions", 790), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -405), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -404), (Tag2 ([(Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -400), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -399), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -398), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -397), 0), 100000000, 0, -396), 0), 100000000, 0, -395), 0), 100000000, 0, -394); (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -403), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -402), 0), 100000000, 0, -401)]), 100000000, 0, -393), 0), 100000000, 0, -392), 0), 100000000, 0, -391), 0, (("format.mli", 819, 32157, 32157), ("format.mli", 820, 32197, 32267), 0), 0, Tag1 ("Stdlib__Format", 103)), 0); (("get_formatter_output_functions", 791), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -390), (Tag2 ([(Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -386), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -385), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -384), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -383), 0), 100000000, 0, -382), 0), 100000000, 0, -381), 0), 100000000, 0, -380); (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -389), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -388), 0), 100000000, 0, -387)]), 100000000, 0, -379), 0), 100000000, 0, -378), 0, (("format.mli", 821, 32268, 32268), ("format.mli", 822, 32305, 32362), 0), 0, Tag1 ("Stdlib__Format", 104)), 0); Tag1 (("formatter_out_functions", 792), (0, 0, [[(("out_string", 375), 0, (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -365), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -364), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -363), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -362), 0), 100000000, 0, -361), 0), 100000000, 0, -360), 0), 100000000, 0, -359), (("format.mli", 836, 32837, 32839), ("format.mli", 836, 32837, 32881), 0), 0, Tag1 ("Stdlib__Format", 106)); (("out_flush", 376), 0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -368), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -367), 0), 100000000, 0, -366), (("format.mli", 837, 32882, 32884), ("format.mli", 837, 32882, 32909), 0), 0, Tag1 ("Stdlib__Format", 107)); (("out_newline", 377), 0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -371), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -370), 0), 100000000, 0, -369), (("format.mli", 838, 32910, 32912), ("format.mli", 838, 32910, 32939), 0), 0, Tag1 ("Stdlib__Format", 108)); (("out_spaces", 378), 0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -374), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -373), 0), 100000000, 0, -372), (("format.mli", 839, 32940, 32942), ("format.mli", 839, 32940, 32967), 0), 0, Tag1 ("Stdlib__Format", 109)); (("out_indent", 379), 0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -377), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -376), 0), 100000000, 0, -375), (("format.mli", 840, 32968, 32970), ("format.mli", 840, 32968, 32995), 0), 0, Tag1 ("Stdlib__Format", 110))]], 1, 0, 0, 0, 0, 0, (("format.mli", 835, 32804, 32804), ("format.mli", 841, 33014, 33015), 0), 0, 0, 0, Tag1 ("Stdlib__Format", 105)), 1, 0); (("pp_set_formatter_out_functions", 793), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -358), (Tag1 (0, (Tag3 ((("formatter_out_functions", 792)), 0, (0)), 100000000, 0, -357), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -356), 0), 100000000, 0, -355), 0), 100000000, 0, -354), 0, (("format.mli", 867, 34206, 34206), ("format.mli", 868, 34243, 34289), 0), 0, Tag1 ("Stdlib__Format", 111)), 0); (("set_formatter_out_functions", 794), ((Tag1 (0, (Tag3 ((("formatter_out_functions", 792)), 0, (0)), 100000000, 0, -353), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -352), 0), 100000000, 0, -351), 0, (("format.mli", 869, 34290, 34290), ("format.mli", 869, 34290, 34355), 0), 0, Tag1 ("Stdlib__Format", 112)), 0); (("pp_get_formatter_out_functions", 795), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -350), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -349), (Tag3 ((("formatter_out_functions", 792)), 0, (0)), 100000000, 0, -348), 0), 100000000, 0, -347), 0), 100000000, 0, -346), 0, (("format.mli", 885, 34929, 34929), ("format.mli", 886, 34966, 35012), 0), 0, Tag1 ("Stdlib__Format", 113)), 0); (("get_formatter_out_functions", 796), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -345), (Tag3 ((("formatter_out_functions", 792)), 0, (0)), 100000000, 0, -344), 0), 100000000, 0, -343), 0, (("format.mli", 887, 35013, 35013), ("format.mli", 887, 35013, 35078), 0), 0, Tag1 ("Stdlib__Format", 114)), 0); Tag1 (("formatter_stag_functions", 797), (0, 0, [[(("mark_open_stag", 385), 0, (Tag1 (0, (Tag3 ((("stag", 769)), 0, (0)), 100000000, 0, -333), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -332), 0), 100000000, 0, -331), (("format.mli", 897, 35373, 35375), ("format.mli", 897, 35373, 35407), 0), 0, Tag1 ("Stdlib__Format", 116)); (("mark_close_stag", 386), 0, (Tag1 (0, (Tag3 ((("stag", 769)), 0, (0)), 100000000, 0, -336), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -335), 0), 100000000, 0, -334), (("format.mli", 898, 35408, 35410), ("format.mli", 898, 35408, 35443), 0), 0, Tag1 ("Stdlib__Format", 117)); (("print_open_stag", 387), 0, (Tag1 (0, (Tag3 ((("stag", 769)), 0, (0)), 100000000, 0, -339), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -338), 0), 100000000, 0, -337), (("format.mli", 899, 35444, 35446), ("format.mli", 899, 35444, 35477), 0), 0, Tag1 ("Stdlib__Format", 118)); (("print_close_stag", 388), 0, (Tag1 (0, (Tag3 ((("stag", 769)), 0, (0)), 100000000, 0, -342), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -341), 0), 100000000, 0, -340), (("format.mli", 900, 35478, 35480), ("format.mli", 900, 35478, 35512), 0), 0, Tag1 ("Stdlib__Format", 119))]], 1, 0, 0, 0, 0, 0, (("format.mli", 896, 35339, 35339), ("format.mli", 901, 35513, 35514), 0), 0, 0, 0, Tag1 ("Stdlib__Format", 115)), 1, 0); (("pp_set_formatter_stag_functions", 798), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -330), (Tag1 (0, (Tag3 ((("formatter_stag_functions", 797)), 0, (0)), 100000000, 0, -329), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -328), 0), 100000000, 0, -327), 0), 100000000, 0, -326), 0, (("format.mli", 912, 35934, 35934), ("format.mli", 913, 35972, 36019), 0), 0, Tag1 ("Stdlib__Format", 120)), 0); (("set_formatter_stag_functions", 799), ((Tag1 (0, (Tag3 ((("formatter_stag_functions", 797)), 0, (0)), 100000000, 0, -325), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -324), 0), 100000000, 0, -323), 0, (("format.mli", 914, 36020, 36020), ("format.mli", 914, 36020, 36087), 0), 0, Tag1 ("Stdlib__Format", 121)), 0); (("pp_get_formatter_stag_functions", 800), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -322), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -321), (Tag3 ((("formatter_stag_functions", 797)), 0, (0)), 100000000, 0, -320), 0), 100000000, 0, -319), 0), 100000000, 0, -318), 0, (("format.mli", 934, 36929, 36929), ("format.mli", 935, 36967, 37014), 0), 0, Tag1 ("Stdlib__Format", 122)), 0); (("get_formatter_stag_functions", 801), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -317), (Tag3 ((("formatter_stag_functions", 797)), 0, (0)), 100000000, 0, -316), 0), 100000000, 0, -315), 0, (("format.mli", 936, 37015, 37015), ("format.mli", 936, 37015, 37082), 0), 0, Tag1 ("Stdlib__Format", 123)), 0); (("formatter_of_out_channel", 802), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -314), (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -313), 0), 100000000, 0, -312), 0, (("format.mli", 962, 38103, 38103), ("format.mli", 962, 38103, 38158), 0), 0, Tag1 ("Stdlib__Format", 124)), 0); (("synchronized_formatter_of_out_channel", 803), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -311), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Domain"), "DLS"), "key"), [(Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -310)], (0)), 100000000, 0, -309), 0), 100000000, 0, -308), 0, (("format.mli", 967, 38275, 38275), ("format.mli", 969, 38361, 38400), 0), [(("alert", (("format.mli", 969, 38361, 38364), ("format.mli", 969, 38361, 38369), 0)), ([([(((("unstable"), (("format.mli", 969, 38361, 38370), ("format.mli", 969, 38361, 38378), 0))), (("format.mli", 969, 38361, 38370), ("format.mli", 969, 38361, 38378), 0), 0, 0)], (("format.mli", 969, 38361, 38370), ("format.mli", 969, 38361, 38378), 0))]), (("format.mli", 969, 38361, 38361), ("format.mli", 969, 38361, 38379), 0)); (("alert", (("format.mli", 969, 38361, 38382), ("format.mli", 969, 38361, 38387), 0)), ([([(Tag1 (Tag2 ("-unstable", (("format.mli", 969, 38361, 38389), ("format.mli", 969, 38361, 38398), 0), 0)), (("format.mli", 969, 38361, 38388), ("format.mli", 969, 38361, 38399), 0), 0, 0)], (("format.mli", 969, 38361, 38388), ("format.mli", 969, 38361, 38399), 0))]), (("format.mli", 969, 38361, 38379), ("format.mli", 969, 38361, 38400), 0))], Tag1 ("Stdlib__Format", 125)), 0); (("std_formatter", 804), ((Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -307), 0, (("format.mli", 980, 38793, 38793), ("format.mli", 980, 38793, 38822), 0), 0, Tag1 ("Stdlib__Format", 126)), 0); (("get_std_formatter", 805), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -306), (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -305), 0), 100000000, 0, -304), 0, (("format.mli", 986, 38966, 38966), ("format.mli", 986, 38966, 39007), 0), 0, Tag1 ("Stdlib__Format", 127)), 0); (("err_formatter", 806), ((Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -303), 0, (("format.mli", 992, 39140, 39140), ("format.mli", 992, 39140, 39169), 0), 0, Tag1 ("Stdlib__Format", 128)), 0); (("get_err_formatter", 807), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -302), (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -301), 0), 100000000, 0, -300), 0, (("format.mli", 998, 39303, 39303), ("format.mli", 998, 39303, 39344), 0), 0, Tag1 ("Stdlib__Format", 129)), 0); (("formatter_of_buffer", 808), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Buffer"), "t"), 0, (0)), 100000000, 0, -299), (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -298), 0), 100000000, 0, -297), 0, (("format.mli", 1004, 39465, 39465), ("format.mli", 1004, 39465, 39512), 0), 0, Tag1 ("Stdlib__Format", 130)), 0); (("stdbuf", 809), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Buffer"), "t"), 0, (0)), 100000000, 0, -296), 0, (("format.mli", 1011, 39758, 39758), ("format.mli", 1011, 39758, 39779), 0), 0, Tag1 ("Stdlib__Format", 131)), 0); (("get_stdbuf", 810), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -295), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Buffer"), "t"), 0, (0)), 100000000, 0, -294), 0), 100000000, 0, -293), 0, (("format.mli", 1014, 39856, 39856), ("format.mli", 1014, 39856, 39889), 0), 0, Tag1 ("Stdlib__Format", 132)), 0); (("str_formatter", 811), ((Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -292), 0, (("format.mli", 1019, 40031, 40031), ("format.mli", 1019, 40031, 40060), 0), 0, Tag1 ("Stdlib__Format", 133)), 0); (("get_str_formatter", 812), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -291), (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -290), 0), 100000000, 0, -289), 0, (("format.mli", 1025, 40209, 40209), ("format.mli", 1025, 40209, 40250), 0), 0, Tag1 ("Stdlib__Format", 134)), 0); (("flush_str_formatter", 813), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -288), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -287), 0), 100000000, 0, -286), 0, (("format.mli", 1031, 40357, 40357), ("format.mli", 1031, 40357, 40397), 0), 0, Tag1 ("Stdlib__Format", 135)), 0); (("make_formatter", 814), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -285), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -284), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -283), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -282), 0), 100000000, 0, -281), 0), 100000000, 0, -280), 0), 100000000, 0, -279), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -278), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -277), 0), 100000000, 0, -276), (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -275), 0), 100000000, 0, -274), 0), 100000000, 0, -273), 0, (("format.mli", 1036, 40542, 40542), ("format.mli", 1037, 40563, 40626), 0), 0, Tag1 ("Stdlib__Format", 136)), 0); (("make_synchronized_formatter", 815), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -272), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -271), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -270), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -269), 0), 100000000, 0, -268), 0), 100000000, 0, -267), 0), 100000000, 0, -266), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -265), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -264), 0), 100000000, 0, -263), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Domain"), "DLS"), "key"), [(Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -262)], (0)), 100000000, 0, -261), 0), 100000000, 0, -260), 0), 100000000, 0, -259), 0, (("format.mli", 1050, 40919, 40919), ("format.mli", 1052, 41032, 41071), 0), [(("alert", (("format.mli", 1052, 41032, 41035), ("format.mli", 1052, 41032, 41040), 0)), ([([(((("unstable"), (("format.mli", 1052, 41032, 41041), ("format.mli", 1052, 41032, 41049), 0))), (("format.mli", 1052, 41032, 41041), ("format.mli", 1052, 41032, 41049), 0), 0, 0)], (("format.mli", 1052, 41032, 41041), ("format.mli", 1052, 41032, 41049), 0))]), (("format.mli", 1052, 41032, 41032), ("format.mli", 1052, 41032, 41050), 0)); (("alert", (("format.mli", 1052, 41032, 41053), ("format.mli", 1052, 41032, 41058), 0)), ([([(Tag1 (Tag2 ("-unstable", (("format.mli", 1052, 41032, 41060), ("format.mli", 1052, 41032, 41069), 0), 0)), (("format.mli", 1052, 41032, 41059), ("format.mli", 1052, 41032, 41070), 0), 0, 0)], (("format.mli", 1052, 41032, 41059), ("format.mli", 1052, 41032, 41070), 0))]), (("format.mli", 1052, 41032, 41050), ("format.mli", 1052, 41032, 41071), 0))], Tag1 ("Stdlib__Format", 137)), 0); (("formatter_of_out_functions", 816), ((Tag1 (0, (Tag3 ((("formatter_out_functions", 792)), 0, (0)), 100000000, 0, -258), (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -257), 0), 100000000, 0, -256), 0, (("format.mli", 1063, 41490, 41490), ("format.mli", 1064, 41523, 41561), 0), 0, Tag1 ("Stdlib__Format", 138)), 0); Tag1 (("symbolic_output_item", 817), (0, 0, Tag1 ([(("Output_flush", 478), (0), 0, (("format.mli", 1099, 42726, 42728), ("format.mli", 1099, 42726, 42742), 0), 0, Tag1 ("Stdlib__Format", 140)); (("Output_newline", 479), (0), 0, (("format.mli", 1100, 42773, 42775), ("format.mli", 1100, 42773, 42791), 0), 0, Tag1 ("Stdlib__Format", 141)); (("Output_string", 480), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -253)]), 0, (("format.mli", 1101, 42824, 42826), ("format.mli", 1101, 42824, 42851), 0), 0, Tag1 ("Stdlib__Format", 142)); (("Output_spaces", 481), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -254)]), 0, (("format.mli", 1103, 42910, 42912), ("format.mli", 1103, 42910, 42934), 0), 0, Tag1 ("Stdlib__Format", 143)); (("Output_indent", 482), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -255)]), 0, (("format.mli", 1105, 43001, 43003), ("format.mli", 1105, 43001, 43025), 0), 0, Tag1 ("Stdlib__Format", 144))], 0), 1, 0, 0, 0, 0, 0, (("format.mli", 1098, 42698, 42698), ("format.mli", 1105, 43001, 43025), 0), 0, 0, 0, Tag1 ("Stdlib__Format", 139)), 1, 0); Tag1 (("symbolic_output_buffer", 818), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("format.mli", 1111, 43154, 43154), ("format.mli", 1111, 43154, 43181), 0), 0, 0, 0, Tag1 ("Stdlib__Format", 145)), 1, 0); (("make_symbolic_output_buffer", 819), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -252), (Tag3 ((("symbolic_output_buffer", 818)), 0, (0)), 100000000, 0, -251), 0), 100000000, 0, -250), 0, (("format.mli", 1118, 43255, 43255), ("format.mli", 1118, 43255, 43319), 0), 0, Tag1 ("Stdlib__Format", 146)), 0); (("clear_symbolic_output_buffer", 820), ((Tag1 (0, (Tag3 ((("symbolic_output_buffer", 818)), 0, (0)), 100000000, 0, -249), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -248), 0), 100000000, 0, -247), 0, (("format.mli", 1125, 43422, 43422), ("format.mli", 1125, 43422, 43487), 0), 0, Tag1 ("Stdlib__Format", 147)), 0); (("get_symbolic_output_buffer", 821), ((Tag1 (0, (Tag3 ((("symbolic_output_buffer", 818)), 0, (0)), 100000000, 0, -246), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("symbolic_output_item", 817)), 0, (0)), 100000000, 0, -245)], (0)), 100000000, 0, -244), 0), 100000000, 0, -243), 0, (("format.mli", 1131, 43567, 43567), ("format.mli", 1132, 43600, 43653), 0), 0, Tag1 ("Stdlib__Format", 148)), 0); (("flush_symbolic_output_buffer", 822), ((Tag1 (0, (Tag3 ((("symbolic_output_buffer", 818)), 0, (0)), 100000000, 0, -242), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("symbolic_output_item", 817)), 0, (0)), 100000000, 0, -241)], (0)), 100000000, 0, -240), 0), 100000000, 0, -239), 0, (("format.mli", 1138, 43748, 43748), ("format.mli", 1139, 43783, 43836), 0), 0, Tag1 ("Stdlib__Format", 149)), 0); (("add_symbolic_output_item", 823), ((Tag1 (0, (Tag3 ((("symbolic_output_buffer", 818)), 0, (0)), 100000000, 0, -238), (Tag1 (0, (Tag3 ((("symbolic_output_item", 817)), 0, (0)), 100000000, 0, -237), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -236), 0), 100000000, 0, -235), 0), 100000000, 0, -234), 0, (("format.mli", 1149, 44106, 44106), ("format.mli", 1150, 44137, 44193), 0), 0, Tag1 ("Stdlib__Format", 150)), 0); (("formatter_of_symbolic_output_buffer", 824), ((Tag1 (0, (Tag3 ((("symbolic_output_buffer", 818)), 0, (0)), 100000000, 0, -233), (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -232), 0), 100000000, 0, -231), 0, (("format.mli", 1156, 44285, 44285), ("format.mli", 1156, 44285, 44362), 0), 0, Tag1 ("Stdlib__Format", 151)), 0); (("pp_print_iter", 825), ((Tag1 (Tag1 ("pp_sep"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -230), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -229), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -228), 0), 100000000, 0, -227), 0), 100000000, 0, -226)], (0)), 100000000, 0, -225), (Tag1 (0, (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -218), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -224), 0), 100000000, 0, -223), (Tag1 (0, ((("b")), 100000000, 0, -213), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -222), 0), 100000000, 0, -221), 0), 100000000, 0, -220), (Tag1 (0, (Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -219), (Tag1 (0, ((("a")), 100000000, 0, -218), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -217), 0), 100000000, 0, -216), 0), 100000000, 0, -215), (Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -214), (Tag1 (0, ((("b")), 100000000, 0, -213), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -212), 0), 100000000, 0, -211), 0), 100000000, 0, -210), 0), 100000000, 0, -209), 0), 100000000, 0, -208), 0), 100000000, 0, -207), 0, (("format.mli", 1165, 44553, 44553), ("format.mli", 1168, 44648, 44702), 0), 0, Tag1 ("Stdlib__Format", 152)), 0); (("pp_print_list", 826), ((Tag1 (Tag1 ("pp_sep"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -206), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -205), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -204), 0), 100000000, 0, -203), 0), 100000000, 0, -202)], (0)), 100000000, 0, -201), (Tag1 (0, (Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -200), (Tag1 (0, ((("a")), 100000000, 0, -195), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -199), 0), 100000000, 0, -198), 0), 100000000, 0, -197), (Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -196), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -195)], (0)), 100000000, 0, -194), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -193), 0), 100000000, 0, -192), 0), 100000000, 0, -191), 0), 100000000, 0, -190), 0), 100000000, 0, -189), 0, (("format.mli", 1176, 44925, 44925), ("format.mli", 1178, 44985, 45046), 0), 0, Tag1 ("Stdlib__Format", 153)), 0); (("pp_print_array", 827), ((Tag1 (Tag1 ("pp_sep"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -188), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -187), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -186), 0), 100000000, 0, -185), 0), 100000000, 0, -184)], (0)), 100000000, 0, -183), (Tag1 (0, (Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -182), (Tag1 (0, ((("a")), 100000000, 0, -177), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -181), 0), 100000000, 0, -180), 0), 100000000, 0, -179), (Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -178), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -177)], (0)), 100000000, 0, -176), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -175), 0), 100000000, 0, -174), 0), 100000000, 0, -173), 0), 100000000, 0, -172), 0), 100000000, 0, -171), 0, (("format.mli", 1187, 45274, 45274), ("format.mli", 1189, 45335, 45397), 0), 0, Tag1 ("Stdlib__Format", 154)), 0); (("pp_print_seq", 828), ((Tag1 (Tag1 ("pp_sep"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -170), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -169), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -168), 0), 100000000, 0, -167), 0), 100000000, 0, -166)], (0)), 100000000, 0, -165), (Tag1 (0, (Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -164), (Tag1 (0, ((("a")), 100000000, 0, -159), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -163), 0), 100000000, 0, -162), 0), 100000000, 0, -161), (Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -160), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [((("a")), 100000000, 0, -159)], (0)), 100000000, 0, -158), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -157), 0), 100000000, 0, -156), 0), 100000000, 0, -155), 0), 100000000, 0, -154), 0), 100000000, 0, -153), 0, (("format.mli", 1202, 45813, 45813), ("format.mli", 1204, 45872, 45934), 0), 0, Tag1 ("Stdlib__Format", 155)), 0); (("pp_print_text", 829), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -152), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -151), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -150), 0), 100000000, 0, -149), 0), 100000000, 0, -148), 0, (("format.mli", 1215, 46227, 46227), ("format.mli", 1215, 46227, 46274), 0), 0, Tag1 ("Stdlib__Format", 156)), 0); (("pp_print_option", 830), ((Tag1 (Tag1 ("none"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -147), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -146), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -145), 0), 100000000, 0, -144), 0), 100000000, 0, -143)], (0)), 100000000, 0, -142), (Tag1 (0, (Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -141), (Tag1 (0, ((("a")), 100000000, 0, -136), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -140), 0), 100000000, 0, -139), 0), 100000000, 0, -138), (Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -137), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -136)], (0)), 100000000, 0, -135), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -134), 0), 100000000, 0, -133), 0), 100000000, 0, -132), 0), 100000000, 0, -131), 0), 100000000, 0, -130), 0, (("format.mli", 1222, 46428, 46428), ("format.mli", 1224, 46489, 46552), 0), 0, Tag1 ("Stdlib__Format", 157)), 0); (("pp_print_result", 831), ((Tag1 (("ok"), (Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -129), (Tag1 (0, ((("a")), 100000000, 0, -119), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -128), 0), 100000000, 0, -127), 0), 100000000, 0, -126), (Tag1 (("error"), (Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -125), (Tag1 (0, ((("e")), 100000000, 0, -120), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -124), 0), 100000000, 0, -123), 0), 100000000, 0, -122), (Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -121), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -119); ((("e")), 100000000, 0, -120)], (0)), 100000000, 0, -118), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -117), 0), 100000000, 0, -116), 0), 100000000, 0, -115), 0), 100000000, 0, -114), 0), 100000000, 0, -113), 0, (("format.mli", 1231, 46735, 46735), ("format.mli", 1233, 46826, 46864), 0), 0, Tag1 ("Stdlib__Format", 158)), 0); (("pp_print_either", 832), ((Tag1 (("left"), (Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -112), (Tag1 (0, ((("a")), 100000000, 0, -102), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -111), 0), 100000000, 0, -110), 0), 100000000, 0, -109), (Tag1 (("right"), (Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -108), (Tag1 (0, ((("b")), 100000000, 0, -103), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -107), 0), 100000000, 0, -106), 0), 100000000, 0, -105), (Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -104), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Either"), "t"), [((("a")), 100000000, 0, -102); ((("b")), 100000000, 0, -103)], (0)), 100000000, 0, -101), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -100), 0), 100000000, 0, -99), 0), 100000000, 0, -98), 0), 100000000, 0, -97), 0), 100000000, 0, -96), 0, (("format.mli", 1239, 47010, 47010), ("format.mli", 1241, 47068, 47143), 0), 0, Tag1 ("Stdlib__Format", 159)), 0); (("fprintf", 833), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -95), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format"), [((("a")), 100000000, 0, -91); (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -93); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -94)], (0)), 100000000, 0, -92), ((("a")), 100000000, 0, -91), 0), 100000000, 0, -90), 0), 100000000, 0, -89), 0, (("format.mli", 1262, 47816, 47816), ("format.mli", 1262, 47816, 47877), 0), 0, Tag1 ("Stdlib__Format", 160)), 0); (("printf", 834), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format"), [((("a")), 100000000, 0, -85); (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -87); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -88)], (0)), 100000000, 0, -86), ((("a")), 100000000, 0, -85), 0), 100000000, 0, -84), 0, (("format.mli", 1335, 51604, 51604), ("format.mli", 1335, 51604, 51651), 0), 0, Tag1 ("Stdlib__Format", 161)), 0); (("eprintf", 835), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format"), [((("a")), 100000000, 0, -80); (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -82); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -83)], (0)), 100000000, 0, -81), ((("a")), 100000000, 0, -80), 0), 100000000, 0, -79), 0, (("format.mli", 1345, 52095, 52095), ("format.mli", 1345, 52095, 52143), 0), 0, Tag1 ("Stdlib__Format", 162)), 0); (("sprintf", 836), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format"), [((("a")), 100000000, 0, -75); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -77); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -78)], (0)), 100000000, 0, -76), ((("a")), 100000000, 0, -75), 0), 100000000, 0, -74), 0, (("format.mli", 1355, 52587, 52587), ("format.mli", 1355, 52587, 52632), 0), 0, Tag1 ("Stdlib__Format", 163)), 0); (("asprintf", 837), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format4"), [((("a")), 100000000, 0, -69); (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -71); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -72); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -73)], (0)), 100000000, 0, -70), ((("a")), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("format.mli", 1372, 53382, 53382), ("format.mli", 1372, 53382, 53440), 0), 0, Tag1 ("Stdlib__Format", 164)), 0); (("dprintf", 838), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format4"), [((("a")), 100000000, 0, -61); (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -63); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -64); (Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -67), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65)], (0)), 100000000, 0, -62), ((("a")), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("format.mli", 1381, 53685, 53685), ("format.mli", 1382, 53699, 53755), 0), 0, Tag1 ("Stdlib__Format", 165)), 0); (("ifprintf", 839), ((Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -59), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format"), [((("a")), 100000000, 0, -55); (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -57); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -58)], (0)), 100000000, 0, -56), ((("a")), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("format.mli", 1404, 54417, 54417), ("format.mli", 1404, 54417, 54479), 0), 0, Tag1 ("Stdlib__Format", 166)), 0); (("kfprintf", 840), ((Tag1 (0, (Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -52), ((("a")), 100000000, 0, -49), 0), 100000000, 0, -51), (Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format4"), [((("b")), 100000000, 0, -45); (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -47); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -48); ((("a")), 100000000, 0, -49)], (0)), 100000000, 0, -46), ((("b")), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("format.mli", 1413, 54673, 54673), ("format.mli", 1415, 54724, 54765), 0), 0, Tag1 ("Stdlib__Format", 167)), 0); (("kdprintf", 841), ((Tag1 (0, (Tag1 (0, (Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -41), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), ((("a")), 100000000, 0, -37), 0), 100000000, 0, -38), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format4"), [((("b")), 100000000, 0, -33); (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -35); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -36); ((("a")), 100000000, 0, -37)], (0)), 100000000, 0, -34), ((("b")), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("format.mli", 1419, 54906, 54906), ("format.mli", 1421, 54954, 54995), 0), 0, Tag1 ("Stdlib__Format", 168)), 0); (("ikfprintf", 842), ((Tag1 (0, (Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -30), ((("a")), 100000000, 0, -27), 0), 100000000, 0, -29), (Tag1 (0, (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format4"), [((("b")), 100000000, 0, -23); (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -25); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -26); ((("a")), 100000000, 0, -27)], (0)), 100000000, 0, -24), ((("b")), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("format.mli", 1428, 55160, 55160), ("format.mli", 1430, 55212, 55253), 0), 0, Tag1 ("Stdlib__Format", 169)), 0); (("ksprintf", 843), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -19), ((("a")), 100000000, 0, -17), 0), 100000000, 0, -18), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format4"), [((("b")), 100000000, 0, -13); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -15); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -16); ((("a")), 100000000, 0, -17)], (0)), 100000000, 0, -14), ((("b")), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("format.mli", 1437, 55394, 55394), ("format.mli", 1437, 55394, 55463), 0), 0, Tag1 ("Stdlib__Format", 170)), 0); (("kasprintf", 844), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10), ((("a")), 100000000, 0, -8), 0), 100000000, 0, -9), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format4"), [((("b")), 100000000, 0, -4); (Tag3 ((("formatter", 689)), 0, (0)), 100000000, 0, -6); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -7); ((("a")), 100000000, 0, -8)], (0)), 100000000, 0, -5), ((("b")), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("format.mli", 1441, 55569, 55569), ("format.mli", 1441, 55569, 55642), 0), 0, Tag1 ("Stdlib__Format", 171)), 0)], "Stdlib__Format", [("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val kasprintf : (string -> 'a) -> ('b, formatter, unit, 'a) format4 -> 'b
