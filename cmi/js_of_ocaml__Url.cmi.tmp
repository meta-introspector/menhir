val urldecode : string -> string
val urlencode : ?with_plus:bool -> string -> string
type http_url = {
  hu_host : string;
  hu_port : int;
  hu_path : string list;
  hu_path_string : string;
  hu_arguments : (string * string) list;
  hu_fragment : string;
}
type file_url = {
  fu_path : string list;
  fu_path_string : string;
  fu_arguments : (string * string) list;
  fu_fragment : string;
}
type url = Http of http_url | Https of http_url | File of file_url
val default_http_port : int
val default_https_port : int
val path_of_path_string : string -> string list
val encode_arguments : (string * string) list -> string
val decode_arguments : string -> (string * string) list
val url_of_string : string -> url option
val string_of_url : url -> string
module Current :
  sig
    val host : string
    val port : int option
    val protocol : string
    val path_string : string
    val path : string list
    val arguments : (string * string) list
    val get_fragment : unit -> string
    val set_fragment : string -> unit
    val get : unit -> url option
    val set : url -> unit
    val as_string : string("DEBUG:rule", [(("urldecode", 335), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -56), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0, (("lib/js_of_ocaml/url.mli", 28, 1233, 1233), ("lib/js_of_ocaml/url.mli", 28, 1233, 1265), 0), 0, Tag1 ("Js_of_ocaml__Url", 0)), 0); (("urlencode", 336), ((Tag1 (Tag1 ("with_plus"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -53)], (0)), 100000000, 0, -52), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -51), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("lib/js_of_ocaml/url.mli", 32, 1358, 1358), ("lib/js_of_ocaml/url.mli", 32, 1358, 1409), 0), 0, Tag1 ("Js_of_ocaml__Url", 1)), 0); Tag1 (("http_url", 337), (0, 0, [[(("hu_host", 301), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -38), (("lib/js_of_ocaml/url.mli", 39, 1693, 1697), ("lib/js_of_ocaml/url.mli", 40, 1748, 1751), 0), 0, Tag1 ("Js_of_ocaml__Url", 3)); (("hu_port", 302), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -39), (("lib/js_of_ocaml/url.mli", 40, 1748, 1752), ("lib/js_of_ocaml/url.mli", 41, 1810, 1813), 0), 0, Tag1 ("Js_of_ocaml__Url", 4)); (("hu_path", 303), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -41)], (0)), 100000000, 0, -40), (("lib/js_of_ocaml/url.mli", 41, 1810, 1814), ("lib/js_of_ocaml/url.mli", 42, 1880, 1883), 0), 0, Tag1 ("Js_of_ocaml__Url", 5)); (("hu_path_string", 304), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -42), (("lib/js_of_ocaml/url.mli", 42, 1880, 1884), ("lib/js_of_ocaml/url.mli", 43, 1942, 1945), 0), 0, Tag1 ("Js_of_ocaml__Url", 6)); (("hu_arguments", 305), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -45); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -46)]), 100000000, 0, -44)], (0)), 100000000, 0, -43), (("lib/js_of_ocaml/url.mli", 43, 1942, 1946), ("lib/js_of_ocaml/url.mli", 46, 2088, 2091), 0), 0, Tag1 ("Js_of_ocaml__Url", 7)); (("hu_fragment", 306), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -47), (("lib/js_of_ocaml/url.mli", 46, 2088, 2092), ("lib/js_of_ocaml/url.mli", 46, 2088, 2112), 0), 0, Tag1 ("Js_of_ocaml__Url", 8))]], 1, 0, 0, 0, 0, 0, (("lib/js_of_ocaml/url.mli", 38, 1677, 1677), ("lib/js_of_ocaml/url.mli", 47, 2168, 2171), 0), 0, 0, 0, Tag1 ("Js_of_ocaml__Url", 2)), 1, 0); Tag1 (("file_url", 338), (0, 0, [[(("fu_path", 308), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -31)], (0)), 100000000, 0, -30), (("lib/js_of_ocaml/url.mli", 51, 2222, 2226), ("lib/js_of_ocaml/url.mli", 52, 2248, 2251), 0), 0, Tag1 ("Js_of_ocaml__Url", 10)); (("fu_path_string", 309), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -32), (("lib/js_of_ocaml/url.mli", 52, 2248, 2252), ("lib/js_of_ocaml/url.mli", 53, 2276, 2279), 0), 0, Tag1 ("Js_of_ocaml__Url", 11)); (("fu_arguments", 310), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -35); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -36)]), 100000000, 0, -34)], (0)), 100000000, 0, -33), (("lib/js_of_ocaml/url.mli", 53, 2276, 2280), ("lib/js_of_ocaml/url.mli", 54, 2318, 2321), 0), 0, Tag1 ("Js_of_ocaml__Url", 12)); (("fu_fragment", 311), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -37), (("lib/js_of_ocaml/url.mli", 54, 2318, 2322), ("lib/js_of_ocaml/url.mli", 54, 2318, 2342), 0), 0, Tag1 ("Js_of_ocaml__Url", 13))]], 1, 0, 0, 0, 0, 0, (("lib/js_of_ocaml/url.mli", 50, 2206, 2206), ("lib/js_of_ocaml/url.mli", 55, 2343, 2346), 0), 0, 0, 0, Tag1 ("Js_of_ocaml__Url", 9)), 1, 0); Tag1 (("url", 339), (0, 0, Tag1 ([(("Http", 313), ([(Tag3 ((("http_url", 337)), 0, (0)), 100000000, 0, -27)]), 0, (("lib/js_of_ocaml/url.mli", 60, 2422, 2424), ("lib/js_of_ocaml/url.mli", 60, 2422, 2442), 0), 0, Tag1 ("Js_of_ocaml__Url", 15)); (("Https", 314), ([(Tag3 ((("http_url", 337)), 0, (0)), 100000000, 0, -28)]), 0, (("lib/js_of_ocaml/url.mli", 61, 2470, 2472), ("lib/js_of_ocaml/url.mli", 61, 2470, 2491), 0), 0, Tag1 ("Js_of_ocaml__Url", 16)); (("File", 315), ([(Tag3 ((("file_url", 338)), 0, (0)), 100000000, 0, -29)]), 0, (("lib/js_of_ocaml/url.mli", 62, 2516, 2518), ("lib/js_of_ocaml/url.mli", 62, 2516, 2536), 0), 0, Tag1 ("Js_of_ocaml__Url", 17))], 0), 1, 0, 0, 0, 0, 0, (("lib/js_of_ocaml/url.mli", 59, 2411, 2411), ("lib/js_of_ocaml/url.mli", 62, 2516, 2536), 0), 0, 0, 0, Tag1 ("Js_of_ocaml__Url", 14)), 1, 0); (("default_http_port", 340), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -26), 0, (("lib/js_of_ocaml/url.mli", 64, 2556, 2556), ("lib/js_of_ocaml/url.mli", 64, 2556, 2583), 0), 0, Tag1 ("Js_of_ocaml__Url", 18)), 0); (("default_https_port", 341), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -25), 0, (("lib/js_of_ocaml/url.mli", 67, 2641, 2641), ("lib/js_of_ocaml/url.mli", 67, 2641, 2669), 0), 0, Tag1 ("Js_of_ocaml__Url", 19)), 0); (("path_of_path_string", 342), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -24), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -23)], (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("lib/js_of_ocaml/url.mli", 70, 2729, 2729), ("lib/js_of_ocaml/url.mli", 70, 2729, 2776), 0), 0, Tag1 ("Js_of_ocaml__Url", 20)), 0); (("encode_arguments", 343), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -19); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -20)]), 100000000, 0, -18)], (0)), 100000000, 0, -17), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("lib/js_of_ocaml/url.mli", 73, 2845, 2845), ("lib/js_of_ocaml/url.mli", 73, 2845, 2900), 0), 0, Tag1 ("Js_of_ocaml__Url", 21)), 0); (("decode_arguments", 344), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -14), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -12); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -13)]), 100000000, 0, -11)], (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("lib/js_of_ocaml/url.mli", 78, 3072, 3072), ("lib/js_of_ocaml/url.mli", 78, 3072, 3127), 0), 0, Tag1 ("Js_of_ocaml__Url", 22)), 0); (("url_of_string", 345), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("url", 339)), 0, (0)), 100000000, 0, -7)], (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("lib/js_of_ocaml/url.mli", 86, 3408, 3408), ("lib/js_of_ocaml/url.mli", 86, 3408, 3448), 0), 0, Tag1 ("Js_of_ocaml__Url", 23)), 0); (("string_of_url", 346), ((Tag1 (0, (Tag3 ((("url", 339)), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("lib/js_of_ocaml/url.mli", 90, 3576, 3576), ("lib/js_of_ocaml/url.mli", 90, 3576, 3609), 0), 0, Tag1 ("Js_of_ocaml__Url", 24)), 0); Tag3 (("Current", 347), 0, (Tag1 ([(("host", 348), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -81), 0, (("lib/js_of_ocaml/url.mli", 98, 3944, 3946), ("lib/js_of_ocaml/url.mli", 98, 3944, 3963), 0), 0, Tag1 ("Js_of_ocaml__Url", 25)), 0); (("port", 349), ((Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -80)], (0)), 100000000, 0, -79), 0, (("lib/js_of_ocaml/url.mli", 101, 4008, 4010), ("lib/js_of_ocaml/url.mli", 101, 4008, 4031), 0), 0, Tag1 ("Js_of_ocaml__Url", 26)), 0); (("protocol", 350), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -78), 0, (("lib/js_of_ocaml/url.mli", 104, 4071, 4073), ("lib/js_of_ocaml/url.mli", 104, 4071, 4094), 0), 0, Tag1 ("Js_of_ocaml__Url", 27)), 0); (("path_string", 351), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -77), 0, (("lib/js_of_ocaml/url.mli", 107, 4138, 4140), ("lib/js_of_ocaml/url.mli", 107, 4138, 4164), 0), 0, Tag1 ("Js_of_ocaml__Url", 28)), 0); (("path", 352), ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -76)], (0)), 100000000, 0, -75), 0, (("lib/js_of_ocaml/url.mli", 110, 4223, 4225), ("lib/js_of_ocaml/url.mli", 110, 4223, 4247), 0), 0, Tag1 ("Js_of_ocaml__Url", 29)), 0); (("arguments", 353), ((Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -73); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -74)]), 100000000, 0, -72)], (0)), 100000000, 0, -71), 0, (("lib/js_of_ocaml/url.mli", 113, 4313, 4315), ("lib/js_of_ocaml/url.mli", 113, 4313, 4353), 0), 0, Tag1 ("Js_of_ocaml__Url", 30)), 0); (("get_fragment", 354), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -70), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("lib/js_of_ocaml/url.mli", 116, 4421, 4423), ("lib/js_of_ocaml/url.mli", 116, 4421, 4456), 0), 0, Tag1 ("Js_of_ocaml__Url", 31)), 0); (("set_fragment", 355), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -67), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("lib/js_of_ocaml/url.mli", 120, 4590, 4592), ("lib/js_of_ocaml/url.mli", 120, 4590, 4625), 0), 0, Tag1 ("Js_of_ocaml__Url", 32)), 0); (("get", 356), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -64), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("url", 339)), 0, (0)), 100000000, 0, -63)], (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("lib/js_of_ocaml/url.mli", 123, 4691, 4693), ("lib/js_of_ocaml/url.mli", 123, 4691, 4721), 0), 0, Tag1 ("Js_of_ocaml__Url", 33)), 0); (("set", 357), ((Tag1 (0, (Tag3 ((("url", 339)), 0, (0)), 100000000, 0, -60), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("lib/js_of_ocaml/url.mli", 127, 4833, 4835), ("lib/js_of_ocaml/url.mli", 127, 4833, 4856), 0), 0, Tag1 ("Js_of_ocaml__Url", 34)), 0); (("as_string", 358), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -57), 0, (("lib/js_of_ocaml/url.mli", 131, 4961, 4963), ("lib/js_of_ocaml/url.mli", 131, 4961, 4985), 0), 0, Tag1 ("Js_of_ocaml__Url", 35)), 0)]), 0, (("lib/js_of_ocaml/url.mli", 97, 3923, 3923), ("lib/js_of_ocaml/url.mli", 135, 5184, 5187), 0), Tag1 ("Js_of_ocaml__Url", 36)), 0, 0)], "Js_of_ocaml__Url", [("Js_of_ocaml__Url", (":T#\142\131\133\028\245B\1332yS\232\168y")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Js_of_ocaml__", ("\247\221\028\193\134N(\198\240\023\194\209$\158]\194")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

  end
