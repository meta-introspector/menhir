type 'a binder_annot = {
  binder_name : 'a;
  binder_relevance : Sorts.relevance;
}
val eq_annot :
  ('a -> 'a -> bool) -> 'a binder_annot -> 'a binder_annot -> bool
val hash_annot : ('a -> int) -> 'a binder_annot -> int
val map_annot : ('a -> 'b) -> 'a binder_annot -> 'b binder_annot
val make_annot : 'a -> Sorts.relevance -> 'a binder_annot
val binder_name : 'a binder_annot -> 'a
val binder_relevance : 'a binder_annot -> Sorts.relevance
val annotR : 'a -> 'a binder_annot
val nameR : Names.Id.t -> Names.Name.t binder_annot
val anonR : Names.Name.t binder_annot
module Rel :
  sig
    module Declaration :
      sig
        type ('constr, 'types) pt =
            LocalAssum of Names.Name.t binder_annot * 'types
          | LocalDef of Names.Name.t binder_annot * 'constr * 'types
        val get_annot : ('a, 'b) pt -> Names.Name.t binder_annot
        val get_name : ('c, 't) pt -> Names.Name.t
        val get_value : ('c, 't) pt -> 'c option
        val get_type : ('c, 't) pt -> 't
        val get_relevance : ('c, 't) pt -> Sorts.relevance
        val set_annot :
          Names.Name.t binder_annot -> ('c, 't) pt -> ('c, 't) pt
        val set_name : Names.Name.t -> ('c, 't) pt -> ('c, 't) pt
        val set_type : 't -> ('c, 't) pt -> ('c, 't) pt
        val is_local_assum : ('c, 't) pt -> bool
        val is_local_def : ('c, 't) pt -> bool
        val exists : ('c -> bool) -> ('c, 'c) pt -> bool
        val for_all : ('c -> bool) -> ('c, 'c) pt -> bool
        val equal : ('c -> 'c -> bool) -> ('c, 'c) pt -> ('c, 'c) pt -> bool
        val map_name :
          (Names.Name.t -> Names.Name.t) -> ('c, 't) pt -> ('c, 't) pt
        val map_value : ('c -> 'c) -> ('c, 't) pt -> ('c, 't) pt
        val map_type : ('t -> 't) -> ('c, 't) pt -> ('c, 't) pt
        val map_constr : ('c -> 'c) -> ('c, 'c) pt -> ('c, 'c) pt
        val map_constr_het : ('a -> 'b) -> ('a, 'a) pt -> ('b, 'b) pt
        val iter_constr : ('c -> unit) -> ('c, 'c) pt -> unit
        val fold_constr : ('c -> 'a -> 'a) -> ('c, 'c) pt -> 'a -> 'a
        val to_tuple :
          ('c, 't) pt -> Names.Name.t binder_annot * 'c option * 't
        val drop_body : ('c, 't) pt -> ('c, 't) pt
      end
    type ('constr, 'types) pt = ('constr, 'types) Declaration.pt list
    val empty : ('c, 't) pt
    val add : ('c, 't) Declaration.pt -> ('c, 't) pt -> ('c, 't) pt
    val length : ('c, 't) pt -> int
    val equal : ('c -> 'c -> bool) -> ('c, 'c) pt -> ('c, 'c) pt -> bool
    val nhyps : ('c, 't) pt -> int
    val lookup : int -> ('c, 't) pt -> ('c, 't) Declaration.pt
    val map : ('c -> 'c) -> ('c, 'c) pt -> ('c, 'c) pt
    val map_with_binders : (int -> 'c -> 'c) -> ('c, 'c) pt -> ('c, 'c) pt
    val iter : ('c -> unit) -> ('c, 'c) pt -> unit
    val fold_inside :
      ('a -> ('c, 't) Declaration.pt -> 'a) -> init:'a -> ('c, 't) pt -> 'a
    val fold_outside :
      (('c, 't) Declaration.pt -> 'a -> 'a) -> ('c, 't) pt -> init:'a -> 'a
    val to_vars : ('c, 't) pt -> Names.Id.Set.t
    val to_tags : ('c, 't) pt -> bool list
    val drop_bodies : ('c, 't) pt -> ('c, 't) pt
    val chop_nhyps : int -> ('c, 't) pt -> ('c, 't) pt * ('c, 't) pt
    val instance : (int -> 'r) -> int -> ('c, 't) pt -> 'r array
    val instance_list : (int -> 'r) -> int -> ('c, 't) pt -> 'r list
    val to_extended_vect : (int -> 'r) -> int -> ('c, 't) pt -> 'r array
    val to_extended_list : (int -> 'r) -> int -> ('c, 't) pt -> 'r list
  end
module Named :
  sig
    module Declaration :
      sig
        type ('constr, 'types) pt =
            LocalAssum of Names.Id.t binder_annot * 'types
          | LocalDef of Names.Id.t binder_annot * 'constr * 'types
        val get_annot : ('a, 'b) pt -> Names.Id.t binder_annot
        val get_id : ('c, 't) pt -> Names.Id.t
        val get_value : ('c, 't) pt -> 'c option
        val get_type : ('c, 't) pt -> 't
        val get_relevance : ('c, 't) pt -> Sorts.relevance
        val set_id : Names.Id.t -> ('c, 't) pt -> ('c, 't) pt
        val set_type : 't -> ('c, 't) pt -> ('c, 't) pt
        val is_local_assum : ('c, 't) pt -> bool
        val is_local_def : ('c, 't) pt -> bool
        val exists : ('c -> bool) -> ('c, 'c) pt -> bool
        val for_all : ('c -> bool) -> ('c, 'c) pt -> bool
        val equal : ('c -> 'c -> bool) -> ('c, 'c) pt -> ('c, 'c) pt -> bool
        val map_id : (Names.Id.t -> Names.Id.t) -> ('c, 't) pt -> ('c, 't) pt
        val map_value : ('c -> 'c) -> ('c, 't) pt -> ('c, 't) pt
        val map_type : ('t -> 't) -> ('c, 't) pt -> ('c, 't) pt
        val map_constr : ('c -> 'c) -> ('c, 'c) pt -> ('c, 'c) pt
        val map_constr_het : ('a -> 'b) -> ('a, 'a) pt -> ('b, 'b) pt
        val iter_constr : ('c -> unit) -> ('c, 'c) pt -> unit
        val fold_constr : ('c -> 'a -> 'a) -> ('c, 'c) pt -> 'a -> 'a
        val to_tuple :
          ('c, 't) pt -> Names.Id.t binder_annot * 'c option * 't
        val of_tuple :
          Names.Id.t binder_annot * 'c option * 't -> ('c, 't) pt
        val drop_body : ('c, 't) pt -> ('c, 't) pt
        val of_rel_decl :
          (Names.Name.t -> Names.Id.t) ->
          ('c, 't) Rel.Declaration.pt -> ('c, 't) pt
        val to_rel_decl : ('c, 't) pt -> ('c, 't) Rel.Declaration.pt
      end
    type ('constr, 'types) pt = ('constr, 'types) Declaration.pt list
    val empty : ('c, 't) pt
    val add : ('c, 't) Declaration.pt -> ('c, 't) pt -> ('c, 't) pt
    val length : ('c, 't) pt -> int
    val lookup : Names.Id.t -> ('c, 't) pt -> ('c, 't) Declaration.pt
    val equal : ('c -> 'c -> bool) -> ('c, 'c) pt -> ('c, 'c) pt -> bool
    val map : ('c -> 'c) -> ('c, 'c) pt -> ('c, 'c) pt
    val iter : ('c -> unit) -> ('c, 'c) pt -> unit
    val fold_inside :
      ('a -> ('c, 't) Declaration.pt -> 'a) -> init:'a -> ('c, 't) pt -> 'a
    val fold_outside :
      (('c, 't) Declaration.pt -> 'a -> 'a) -> ('c, 't) pt -> init:'a -> 'a
    val to_vars : ('c, 't) pt -> Names.Id.Set.t
    val drop_bodies : ('c, 't) pt -> ('c, 't) pt
    val to_instance : (Names.Id.t -> 'r) -> ('c, 't) pt -> 'r list
    val instance : (Names.Id.t -> 'r) -> ('c, 't) pt -> 'r array
    val instance_list : (Names.Id.t -> 'r) -> ('c, 't) pt -> 'r list
  end
module Compacted :
  sig
    module Declaration :
      sig
        type ('constr, 'types) pt =
            LocalAssum of Names.Id.t binder_annot list * 'types
          | LocalDef of Names.Id.t binder_annot list * 'constr * 'types
        val map_constr : ('c -> 'c) -> ('c, 'c) pt -> ('c, 'c) pt
        val of_named_decl : ('c, 't) Named.Declaration.pt -> ('c, 't) pt
        val to_named_context : ('c, 't) pt -> ('c, 't) Named.pt
      end
    type ('constr, 'types) pt = ('constr, 'types) Declaration.pt list
    val fold :
      (('c, 't) Declaration.pt -> 'a -> 'a) -> ('c, 't) pt -> init:'a -> 'a
  end("DEBUG:rule", [Tag1 (("binder_annot", 621), ([((("a")), 100000000, 0, -47)], 1, [[(("binder_name", 355), 0, ((("a")), 100000000, 0, -47), (("kernel/context.mli", 27, 1200, 1225), ("kernel/context.mli", 27, 1200, 1242), 0), 0, Tag1 ("Context", 1)); (("binder_relevance", 388), 0, (Tag3 (Tag1 ((Tag2 ("Sorts")), "relevance"), 0, (0)), 100000000, 0, -48), (("kernel/context.mli", 27, 1200, 1243), ("kernel/context.mli", 27, 1200, 1277), 0), 0, Tag1 ("Context", 2))]], 1, 0, [25], [0], 0, 0, (("kernel/context.mli", 27, 1200, 1200), ("kernel/context.mli", 27, 1200, 1279), 0), 0, 0, 0, Tag1 ("Context", 0)), 1, 0); (("eq_annot", 622), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -42), (Tag1 (0, ((("a")), 100000000, 0, -42), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), (Tag1 (0, (Tag3 ((("binder_annot", 621)), [((("a")), 100000000, 0, -42)], (0)), 100000000, 0, -43), (Tag1 (0, (Tag3 ((("binder_annot", 621)), [((("a")), 100000000, 0, -42)], (0)), 100000000, 0, -41), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0), 100000000, 0, -37), 0, (("kernel/context.mli", 28, 1280, 1280), ("kernel/context.mli", 28, 1280, 1359), 0), 0, Tag1 ("Context", 3)), 0); (("hash_annot", 623), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -34), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), (Tag1 (0, (Tag3 ((("binder_annot", 621)), [((("a")), 100000000, 0, -34)], (0)), 100000000, 0, -33), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("kernel/context.mli", 30, 1361, 1361), ("kernel/context.mli", 30, 1361, 1415), 0), 0, Tag1 ("Context", 4)), 0); (("map_annot", 624), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -28), ((("b")), 100000000, 0, -26), 0), 100000000, 0, -29), (Tag1 (0, (Tag3 ((("binder_annot", 621)), [((("a")), 100000000, 0, -28)], (0)), 100000000, 0, -27), (Tag3 ((("binder_annot", 621)), [((("b")), 100000000, 0, -26)], (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("kernel/context.mli", 32, 1417, 1417), ("kernel/context.mli", 32, 1417, 1481), 0), 0, Tag1 ("Context", 5)), 0); (("make_annot", 625), ((Tag1 (0, ((("a")), 100000000, 0, -21), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sorts")), "relevance"), 0, (0)), 100000000, 0, -22), (Tag3 ((("binder_annot", 621)), [((("a")), 100000000, 0, -21)], (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("kernel/context.mli", 34, 1483, 1483), ("kernel/context.mli", 34, 1483, 1540), 0), 0, Tag1 ("Context", 6)), 0); (("binder_name", 626), ((Tag1 (0, (Tag3 ((("binder_annot", 621)), [((("a")), 100000000, 0, -16)], (0)), 100000000, 0, -17), ((("a")), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("kernel/context.mli", 36, 1542, 1542), ("kernel/context.mli", 36, 1542, 1581), 0), 0, Tag1 ("Context", 7)), 0); (("binder_relevance", 627), ((Tag1 (0, (Tag3 ((("binder_annot", 621)), [((("a")), 100000000, 0, -14)], (0)), 100000000, 0, -13), (Tag3 (Tag1 ((Tag2 ("Sorts")), "relevance"), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("kernel/context.mli", 37, 1582, 1582), ("kernel/context.mli", 37, 1582, 1639), 0), 0, Tag1 ("Context", 8)), 0); (("annotR", 628), ((Tag1 (0, ((("a")), 100000000, 0, -10), (Tag3 ((("binder_annot", 621)), [((("a")), 100000000, 0, -10)], (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("kernel/context.mli", 39, 1641, 1641), ("kernel/context.mli", 39, 1641, 1675), 0), 0, Tag1 ("Context", 9)), 0); (("nameR", 629), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -7), (Tag3 ((("binder_annot", 621)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -6)], (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0, (("kernel/context.mli", 42, 1700, 1700), ("kernel/context.mli", 42, 1700, 1739), 0), 0, Tag1 ("Context", 10)), 0); (("anonR", 630), ((Tag3 ((("binder_annot", 621)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -3)], (0)), 100000000, 0, -2), 0, (("kernel/context.mli", 45, 1764, 1764), ("kernel/context.mli", 45, 1764, 1795), 0), 0, Tag1 ("Context", 11)), 0); Tag3 (("Rel", 631), 0, (Tag1 ([Tag3 (("Declaration", 634), 0, (Tag1 ([Tag1 (("pt", 655), ([((("constr")), 100000000, 0, -349); ((("types")), 100000000, 0, -346)], 2, Tag1 ([(("LocalAssum", 424), ([(Tag3 ((("binder_annot", 621)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -345)], (0)), 100000000, 0, -344); ((("types")), 100000000, 0, -346)]), 0, (("kernel/context.mli", 56, 2098, 2102), ("kernel/context.mli", 56, 2098, 2146), 0), 0, Tag1 ("Context", 13)); (("LocalDef", 425), ([(Tag3 ((("binder_annot", 621)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -348)], (0)), 100000000, 0, -347); ((("constr")), 100000000, 0, -349); ((("types")), 100000000, 0, -346)]), 0, (("kernel/context.mli", 57, 2176, 2180), ("kernel/context.mli", 57, 2176, 2232), 0), 0, Tag1 ("Context", 14))], 0), 1, 0, [25; 25], [0; 0], 0, 0, (("kernel/context.mli", 55, 2066, 2070), ("kernel/context.mli", 57, 2176, 2232), 0), 0, 0, 0, Tag1 ("Context", 12)), 1, 0); (("get_annot", 656), ((Tag1 (0, (Tag3 ((("pt", 655)), [((0), 100000000, 0, -342); ((0), 100000000, 0, -343)], (0)), 100000000, 0, -341), (Tag3 ((("binder_annot", 621)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -340)], (0)), 100000000, 0, -339), 0), 100000000, 0, -338), 0, (("kernel/context.mli", 59, 2261, 2265), ("kernel/context.mli", 59, 2261, 2308), 0), 0, Tag1 ("Context", 15)), 0); (("get_name", 657), ((Tag1 (0, (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -336); ((("t")), 100000000, 0, -337)], (0)), 100000000, 0, -335), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -334), 0), 100000000, 0, -333), 0, (("kernel/context.mli", 62, 2367, 2371), ("kernel/context.mli", 62, 2367, 2407), 0), 0, Tag1 ("Context", 16)), 0); (("get_value", 658), ((Tag1 (0, (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -330); ((("t")), 100000000, 0, -332)], (0)), 100000000, 0, -331), (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -330)], (0)), 100000000, 0, -329), 0), 100000000, 0, -328), 0, (("kernel/context.mli", 65, 2497, 2501), ("kernel/context.mli", 65, 2497, 2541), 0), 0, Tag1 ("Context", 17)), 0); (("get_type", 659), ((Tag1 (0, (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -327); ((("t")), 100000000, 0, -325)], (0)), 100000000, 0, -326), ((("t")), 100000000, 0, -325), 0), 100000000, 0, -324), 0, (("kernel/context.mli", 68, 2612, 2616), ("kernel/context.mli", 68, 2612, 2648), 0), 0, Tag1 ("Context", 18)), 0); (("get_relevance", 660), ((Tag1 (0, (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -322); ((("t")), 100000000, 0, -323)], (0)), 100000000, 0, -321), (Tag3 (Tag1 ((Tag2 ("Sorts")), "relevance"), 0, (0)), 100000000, 0, -320), 0), 100000000, 0, -319), 0, (("kernel/context.mli", 70, 2650, 2654), ("kernel/context.mli", 70, 2650, 2704), 0), 0, Tag1 ("Context", 19)), 0); (("set_annot", 661), ((Tag1 (0, (Tag3 ((("binder_annot", 621)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -318)], (0)), 100000000, 0, -317), (Tag1 (0, (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -314); ((("t")), 100000000, 0, -315)], (0)), 100000000, 0, -316), (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -314); ((("t")), 100000000, 0, -315)], (0)), 100000000, 0, -313), 0), 100000000, 0, -312), 0), 100000000, 0, -311), 0, (("kernel/context.mli", 72, 2706, 2710), ("kernel/context.mli", 72, 2706, 2775), 0), 0, Tag1 ("Context", 20)), 0); (("set_name", 662), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -310), (Tag1 (0, (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -307); ((("t")), 100000000, 0, -308)], (0)), 100000000, 0, -309), (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -307); ((("t")), 100000000, 0, -308)], (0)), 100000000, 0, -306), 0), 100000000, 0, -305), 0), 100000000, 0, -304), 0, (("kernel/context.mli", 75, 2839, 2843), ("kernel/context.mli", 75, 2839, 2894), 0), 0, Tag1 ("Context", 21)), 0); (("set_type", 663), ((Tag1 (0, ((("t")), 100000000, 0, -302), (Tag1 (0, (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -301); ((("t")), 100000000, 0, -302)], (0)), 100000000, 0, -303), (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -301); ((("t")), 100000000, 0, -302)], (0)), 100000000, 0, -300), 0), 100000000, 0, -299), 0), 100000000, 0, -298), 0, (("kernel/context.mli", 78, 2966, 2970), ("kernel/context.mli", 78, 2966, 3017), 0), 0, Tag1 ("Context", 22)), 0); (("is_local_assum", 664), ((Tag1 (0, (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -296); ((("t")), 100000000, 0, -297)], (0)), 100000000, 0, -295), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -294), 0), 100000000, 0, -293), 0, (("kernel/context.mli", 81, 3091, 3095), ("kernel/context.mli", 81, 3091, 3135), 0), 0, Tag1 ("Context", 23)), 0); (("is_local_def", 665), ((Tag1 (0, (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -291); ((("t")), 100000000, 0, -292)], (0)), 100000000, 0, -290), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -289), 0), 100000000, 0, -288), 0, (("kernel/context.mli", 84, 3209, 3213), ("kernel/context.mli", 84, 3209, 3251), 0), 0, Tag1 ("Context", 24)), 0); (("exists", 666), ((Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -285), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -287), 0), 100000000, 0, -286), (Tag1 (0, (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -285); ((("c")), 100000000, 0, -285)], (0)), 100000000, 0, -284), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -283), 0), 100000000, 0, -282), 0), 100000000, 0, -281), 0, (("kernel/context.mli", 87, 3339, 3343), ("kernel/context.mli", 87, 3339, 3391), 0), 0, Tag1 ("Context", 25)), 0); (("for_all", 667), ((Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -278), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -280), 0), 100000000, 0, -279), (Tag1 (0, (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -278); ((("c")), 100000000, 0, -278)], (0)), 100000000, 0, -277), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -276), 0), 100000000, 0, -275), 0), 100000000, 0, -274), 0, (("kernel/context.mli", 90, 3478, 3482), ("kernel/context.mli", 90, 3478, 3531), 0), 0, Tag1 ("Context", 26)), 0); (("equal", 668), ((Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -269), (Tag1 (0, ((("c")), 100000000, 0, -269), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -273), 0), 100000000, 0, -272), 0), 100000000, 0, -271), (Tag1 (0, (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -269); ((("c")), 100000000, 0, -269)], (0)), 100000000, 0, -270), (Tag1 (0, (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -269); ((("c")), 100000000, 0, -269)], (0)), 100000000, 0, -268), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -267), 0), 100000000, 0, -266), 0), 100000000, 0, -265), 0), 100000000, 0, -264), 0, (("kernel/context.mli", 93, 3596, 3600), ("kernel/context.mli", 93, 3596, 3668), 0), 0, Tag1 ("Context", 27)), 0); (("map_name", 669), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -263), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -262), 0), 100000000, 0, -261), (Tag1 (0, (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -258); ((("t")), 100000000, 0, -259)], (0)), 100000000, 0, -260), (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -258); ((("t")), 100000000, 0, -259)], (0)), 100000000, 0, -257), 0), 100000000, 0, -256), 0), 100000000, 0, -255), 0, (("kernel/context.mli", 96, 3724, 3728), ("kernel/context.mli", 96, 3724, 3791), 0), 0, Tag1 ("Context", 28)), 0); (("map_value", 670), ((Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -251), ((("c")), 100000000, 0, -251), 0), 100000000, 0, -254), (Tag1 (0, (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -251); ((("t")), 100000000, 0, -252)], (0)), 100000000, 0, -253), (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -251); ((("t")), 100000000, 0, -252)], (0)), 100000000, 0, -250), 0), 100000000, 0, -249), 0), 100000000, 0, -248), 0, (("kernel/context.mli", 100, 3966, 3970), ("kernel/context.mli", 100, 3966, 4026), 0), 0, Tag1 ("Context", 29)), 0); (("map_type", 671), ((Tag1 (0, (Tag1 (0, ((("t")), 100000000, 0, -245), ((("t")), 100000000, 0, -245), 0), 100000000, 0, -247), (Tag1 (0, (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -244); ((("t")), 100000000, 0, -245)], (0)), 100000000, 0, -246), (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -244); ((("t")), 100000000, 0, -245)], (0)), 100000000, 0, -243), 0), 100000000, 0, -242), 0), 100000000, 0, -241), 0, (("kernel/context.mli", 103, 4094, 4098), ("kernel/context.mli", 103, 4094, 4153), 0), 0, Tag1 ("Context", 30)), 0); (("map_constr", 672), ((Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -238), ((("c")), 100000000, 0, -238), 0), 100000000, 0, -240), (Tag1 (0, (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -238); ((("c")), 100000000, 0, -238)], (0)), 100000000, 0, -239), (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -238); ((("c")), 100000000, 0, -238)], (0)), 100000000, 0, -237), 0), 100000000, 0, -236), 0), 100000000, 0, -235), 0, (("kernel/context.mli", 106, 4204, 4208), ("kernel/context.mli", 106, 4204, 4265), 0), 0, Tag1 ("Context", 31)), 0); (("map_constr_het", 673), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -233), ((("b")), 100000000, 0, -231), 0), 100000000, 0, -234), (Tag1 (0, (Tag3 ((("pt", 655)), [((("a")), 100000000, 0, -233); ((("a")), 100000000, 0, -233)], (0)), 100000000, 0, -232), (Tag3 ((("pt", 655)), [((("b")), 100000000, 0, -231); ((("b")), 100000000, 0, -231)], (0)), 100000000, 0, -230), 0), 100000000, 0, -229), 0), 100000000, 0, -228), 0, (("kernel/context.mli", 109, 4325, 4329), ("kernel/context.mli", 109, 4325, 4390), 0), 0, Tag1 ("Context", 32)), 0); (("iter_constr", 674), ((Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -225), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -227), 0), 100000000, 0, -226), (Tag1 (0, (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -225); ((("c")), 100000000, 0, -225)], (0)), 100000000, 0, -224), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -223), 0), 100000000, 0, -222), 0), 100000000, 0, -221), 0, (("kernel/context.mli", 112, 4463, 4467), ("kernel/context.mli", 112, 4463, 4520), 0), 0, Tag1 ("Context", 33)), 0); (("fold_constr", 675), ((Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -218), (Tag1 (0, ((("a")), 100000000, 0, -216), ((("a")), 100000000, 0, -216), 0), 100000000, 0, -220), 0), 100000000, 0, -219), (Tag1 (0, (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -218); ((("c")), 100000000, 0, -218)], (0)), 100000000, 0, -217), (Tag1 (0, ((("a")), 100000000, 0, -216), ((("a")), 100000000, 0, -216), 0), 100000000, 0, -215), 0), 100000000, 0, -214), 0), 100000000, 0, -213), 0, (("kernel/context.mli", 115, 4592, 4596), ("kernel/context.mli", 115, 4592, 4657), 0), 0, Tag1 ("Context", 34)), 0); (("to_tuple", 676), ((Tag1 (0, (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -210); ((("t")), 100000000, 0, -211)], (0)), 100000000, 0, -212), (Tag2 ([(Tag3 ((("binder_annot", 621)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -208)], (0)), 100000000, 0, -207); (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -210)], (0)), 100000000, 0, -209); ((("t")), 100000000, 0, -211)]), 100000000, 0, -206), 0), 100000000, 0, -205), 0, (("kernel/context.mli", 117, 4659, 4663), ("kernel/context.mli", 117, 4659, 4729), 0), 0, Tag1 ("Context", 35)), 0); (("drop_body", 677), ((Tag1 (0, (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -202); ((("t")), 100000000, 0, -203)], (0)), 100000000, 0, -204), (Tag3 ((("pt", 655)), [((("c")), 100000000, 0, -202); ((("t")), 100000000, 0, -203)], (0)), 100000000, 0, -201), 0), 100000000, 0, -200), 0, (("kernel/context.mli", 120, 4797, 4801), ("kernel/context.mli", 120, 4797, 4843), 0), 0, Tag1 ("Context", 36)), 0)]), 0, (("kernel/context.mli", 52, 2009, 2011), ("kernel/context.mli", 121, 4844, 4849), 0), Tag1 ("Context", 37)), 0, 0); Tag1 (("pt", 635), ([((("constr")), 100000000, 0, -198); ((("types")), 100000000, 0, -199)], 2, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Declaration", 634)), "pt"), [((("constr")), 100000000, 0, -198); ((("types")), 100000000, 0, -199)], (0)), 100000000, 0, -197)], (0)), 100000000, 0, -196)), [25; 25], [0; 0], 0, 0, (("kernel/context.mli", 126, 5036, 5038), ("kernel/context.mli", 126, 5036, 5103), 0), 0, 0, 0, Tag1 ("Context", 38)), 1, 0); (("empty", 636), ((Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -194); ((("t")), 100000000, 0, -195)], (0)), 100000000, 0, -193), 0, (("kernel/context.mli", 129, 5132, 5134), ("kernel/context.mli", 129, 5132, 5157), 0), 0, Tag1 ("Context", 39)), 0); (("add", 637), ((Tag1 (0, (Tag3 (Tag1 ((("Declaration", 634)), "pt"), [((("c")), 100000000, 0, -189); ((("t")), 100000000, 0, -190)], (0)), 100000000, 0, -192), (Tag1 (0, (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -189); ((("t")), 100000000, 0, -190)], (0)), 100000000, 0, -191), (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -189); ((("t")), 100000000, 0, -190)], (0)), 100000000, 0, -188), 0), 100000000, 0, -187), 0), 100000000, 0, -186), 0, (("kernel/context.mli", 132, 5242, 5244), ("kernel/context.mli", 132, 5242, 5307), 0), 0, Tag1 ("Context", 40)), 0); (("length", 638), ((Tag1 (0, (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -184); ((("t")), 100000000, 0, -185)], (0)), 100000000, 0, -183), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -182), 0), 100000000, 0, -181), 0, (("kernel/context.mli", 135, 5386, 5388), ("kernel/context.mli", 135, 5386, 5419), 0), 0, Tag1 ("Context", 41)), 0); (("equal", 639), ((Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -176), (Tag1 (0, ((("c")), 100000000, 0, -176), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -180), 0), 100000000, 0, -179), 0), 100000000, 0, -178), (Tag1 (0, (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -176); ((("c")), 100000000, 0, -176)], (0)), 100000000, 0, -177), (Tag1 (0, (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -176); ((("c")), 100000000, 0, -176)], (0)), 100000000, 0, -175), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -174), 0), 100000000, 0, -173), 0), 100000000, 0, -172), 0), 100000000, 0, -171), 0, (("kernel/context.mli", 138, 5478, 5480), ("kernel/context.mli", 138, 5478, 5548), 0), 0, Tag1 ("Context", 42)), 0); (("nhyps", 640), ((Tag1 (0, (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -169); ((("t")), 100000000, 0, -170)], (0)), 100000000, 0, -168), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -167), 0), 100000000, 0, -166), 0, (("kernel/context.mli", 141, 5626, 5628), ("kernel/context.mli", 141, 5626, 5658), 0), 0, Tag1 ("Context", 43)), 0); (("lookup", 641), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -165), (Tag1 (0, (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -162); ((("t")), 100000000, 0, -163)], (0)), 100000000, 0, -164), (Tag3 (Tag1 ((("Declaration", 634)), "pt"), [((("c")), 100000000, 0, -162); ((("t")), 100000000, 0, -163)], (0)), 100000000, 0, -161), 0), 100000000, 0, -160), 0), 100000000, 0, -159), 0, (("kernel/context.mli", 145, 5805, 5807), ("kernel/context.mli", 145, 5805, 5865), 0), 0, Tag1 ("Context", 44)), 0); (("map", 642), ((Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -156), ((("c")), 100000000, 0, -156), 0), 100000000, 0, -158), (Tag1 (0, (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -156); ((("c")), 100000000, 0, -156)], (0)), 100000000, 0, -157), (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -156); ((("c")), 100000000, 0, -156)], (0)), 100000000, 0, -155), 0), 100000000, 0, -154), 0), 100000000, 0, -153), 0, (("kernel/context.mli", 148, 5914, 5916), ("kernel/context.mli", 148, 5914, 5966), 0), 0, Tag1 ("Context", 45)), 0); (("map_with_binders", 643), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -152), (Tag1 (0, ((("c")), 100000000, 0, -148), ((("c")), 100000000, 0, -148), 0), 100000000, 0, -151), 0), 100000000, 0, -150), (Tag1 (0, (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -148); ((("c")), 100000000, 0, -148)], (0)), 100000000, 0, -149), (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -148); ((("c")), 100000000, 0, -148)], (0)), 100000000, 0, -147), 0), 100000000, 0, -146), 0), 100000000, 0, -145), 0, (("kernel/context.mli", 152, 6097, 6099), ("kernel/context.mli", 152, 6097, 6169), 0), 0, Tag1 ("Context", 46)), 0); (("iter", 644), ((Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -142), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -144), 0), 100000000, 0, -143), (Tag1 (0, (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -142); ((("c")), 100000000, 0, -142)], (0)), 100000000, 0, -141), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -140), 0), 100000000, 0, -139), 0), 100000000, 0, -138), 0, (("kernel/context.mli", 155, 6248, 6250), ("kernel/context.mli", 155, 6248, 6296), 0), 0, Tag1 ("Context", 47)), 0); (("fold_inside", 645), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -131), (Tag1 (0, (Tag3 (Tag1 ((("Declaration", 634)), "pt"), [((("c")), 100000000, 0, -133); ((("t")), 100000000, 0, -134)], (0)), 100000000, 0, -137), ((("a")), 100000000, 0, -131), 0), 100000000, 0, -136), 0), 100000000, 0, -135), (Tag1 (("init"), ((("a")), 100000000, 0, -131), (Tag1 (0, (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -133); ((("t")), 100000000, 0, -134)], (0)), 100000000, 0, -132), ((("a")), 100000000, 0, -131), 0), 100000000, 0, -130), 0), 100000000, 0, -129), 0), 100000000, 0, -128), 0, (("kernel/context.mli", 159, 6416, 6418), ("kernel/context.mli", 159, 6416, 6505), 0), 0, Tag1 ("Context", 48)), 0); (("fold_outside", 646), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((("Declaration", 634)), "pt"), [((("c")), 100000000, 0, -123); ((("t")), 100000000, 0, -124)], (0)), 100000000, 0, -127), (Tag1 (0, ((("a")), 100000000, 0, -121), ((("a")), 100000000, 0, -121), 0), 100000000, 0, -126), 0), 100000000, 0, -125), (Tag1 (0, (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -123); ((("t")), 100000000, 0, -124)], (0)), 100000000, 0, -122), (Tag1 (("init"), ((("a")), 100000000, 0, -121), ((("a")), 100000000, 0, -121), 0), 100000000, 0, -120), 0), 100000000, 0, -119), 0), 100000000, 0, -118), 0, (("kernel/context.mli", 163, 6625, 6627), ("kernel/context.mli", 163, 6625, 6715), 0), 0, Tag1 ("Context", 49)), 0); (("to_vars", 647), ((Tag1 (0, (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -116); ((("t")), 100000000, 0, -117)], (0)), 100000000, 0, -115), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -114), 0), 100000000, 0, -113), 0, (("kernel/context.mli", 166, 6794, 6796), ("kernel/context.mli", 166, 6794, 6833), 0), 0, Tag1 ("Context", 50)), 0); (("to_tags", 648), ((Tag1 (0, (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -111); ((("t")), 100000000, 0, -112)], (0)), 100000000, 0, -110), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -109)], (0)), 100000000, 0, -108), 0), 100000000, 0, -107), 0, (("kernel/context.mli", 172, 7093, 7095), ("kernel/context.mli", 172, 7093, 7133), 0), 0, Tag1 ("Context", 51)), 0); (("drop_bodies", 649), ((Tag1 (0, (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -104); ((("t")), 100000000, 0, -105)], (0)), 100000000, 0, -106), (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -104); ((("t")), 100000000, 0, -105)], (0)), 100000000, 0, -103), 0), 100000000, 0, -102), 0, (("kernel/context.mli", 175, 7213, 7215), ("kernel/context.mli", 175, 7213, 7259), 0), 0, Tag1 ("Context", 52)), 0); (("chop_nhyps", 650), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -101), (Tag1 (0, (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -97); ((("t")), 100000000, 0, -98)], (0)), 100000000, 0, -100), (Tag2 ([(Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -97); ((("t")), 100000000, 0, -98)], (0)), 100000000, 0, -96); (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -97); ((("t")), 100000000, 0, -98)], (0)), 100000000, 0, -99)]), 100000000, 0, -95), 0), 100000000, 0, -94), 0), 100000000, 0, -93), 0, (("kernel/context.mli", 183, 7653, 7655), ("kernel/context.mli", 183, 7653, 7719), 0), 0, Tag1 ("Context", 53)), 0); (("instance", 651), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -92), ((("r")), 100000000, 0, -86), 0), 100000000, 0, -91), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -90), (Tag1 (0, (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -88); ((("t")), 100000000, 0, -89)], (0)), 100000000, 0, -87), (Tag3 ((Tag3 ("array", 8)), [((("r")), 100000000, 0, -86)], (0)), 100000000, 0, -85), 0), 100000000, 0, -84), 0), 100000000, 0, -83), 0), 100000000, 0, -82), 0, (("kernel/context.mli", 189, 8019, 8021), ("kernel/context.mli", 189, 8019, 8081), 0), 0, Tag1 ("Context", 54)), 0); (("instance_list", 652), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -81), ((("r")), 100000000, 0, -75), 0), 100000000, 0, -80), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -79), (Tag1 (0, (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -77); ((("t")), 100000000, 0, -78)], (0)), 100000000, 0, -76), (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -75)], (0)), 100000000, 0, -74), 0), 100000000, 0, -73), 0), 100000000, 0, -72), 0), 100000000, 0, -71), 0, (("kernel/context.mli", 192, 8149, 8151), ("kernel/context.mli", 192, 8149, 8215), 0), 0, Tag1 ("Context", 55)), 0); (("to_extended_vect", 653), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -70), ((("r")), 100000000, 0, -64), 0), 100000000, 0, -69), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -68), (Tag1 (0, (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -66); ((("t")), 100000000, 0, -67)], (0)), 100000000, 0, -65), (Tag3 ((Tag3 ("array", 8)), [((("r")), 100000000, 0, -64)], (0)), 100000000, 0, -63), 0), 100000000, 0, -62), 0), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("kernel/context.mli", 194, 8217, 8219), ("kernel/context.mli", 195, 8288, 8352), 0), [(("ocaml.deprecated", (("kernel/context.mli", 195, 8288, 8295), ("kernel/context.mli", 195, 8288, 8311), 0)), ([([(Tag1 (Tag2 ("Use synonymous [Context.Rel.instance]", (("kernel/context.mli", 195, 8288, 8313), ("kernel/context.mli", 195, 8288, 8350), 0), 0)), (("kernel/context.mli", 195, 8288, 8312), ("kernel/context.mli", 195, 8288, 8351), 0), 0, 0)], (("kernel/context.mli", 195, 8288, 8312), ("kernel/context.mli", 195, 8288, 8351), 0))]), (("kernel/context.mli", 195, 8288, 8292), ("kernel/context.mli", 195, 8288, 8352), 0))], Tag1 ("Context", 56)), 0); (("to_extended_list", 654), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -59), ((("r")), 100000000, 0, -53), 0), 100000000, 0, -58), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -57), (Tag1 (0, (Tag3 ((("pt", 635)), [((("c")), 100000000, 0, -55); ((("t")), 100000000, 0, -56)], (0)), 100000000, 0, -54), (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -53)], (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0), 100000000, 0, -50), 0), 100000000, 0, -49), 0, (("kernel/context.mli", 197, 8354, 8356), ("kernel/context.mli", 198, 8424, 8493), 0), [(("ocaml.deprecated", (("kernel/context.mli", 198, 8424, 8431), ("kernel/context.mli", 198, 8424, 8447), 0)), ([([(Tag1 (Tag2 ("Use synonymous [Context.Rel.instance_list]", (("kernel/context.mli", 198, 8424, 8449), ("kernel/context.mli", 198, 8424, 8491), 0), 0)), (("kernel/context.mli", 198, 8424, 8448), ("kernel/context.mli", 198, 8424, 8492), 0), 0, 0)], (("kernel/context.mli", 198, 8424, 8448), ("kernel/context.mli", 198, 8424, 8492), 0))]), (("kernel/context.mli", 198, 8424, 8428), ("kernel/context.mli", 198, 8424, 8493), 0))], Tag1 ("Context", 57)), 0)]), 0, (("kernel/context.mli", 50, 1992, 1992), ("kernel/context.mli", 199, 8494, 8497), 0), Tag1 ("Context", 58)), 0, 0); Tag3 (("Named", 632), 0, (Tag1 ([Tag3 (("Declaration", 678), 0, (Tag1 ([Tag1 (("pt", 694), ([((("constr")), 100000000, 0, -619); ((("types")), 100000000, 0, -616)], 2, Tag1 ([(("LocalAssum", 516), ([(Tag3 ((("binder_annot", 621)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -615)], (0)), 100000000, 0, -614); ((("types")), 100000000, 0, -616)]), 0, (("kernel/context.mli", 209, 8789, 8795), ("kernel/context.mli", 209, 8789, 8837), 0), 0, Tag1 ("Context", 60)); (("LocalDef", 517), ([(Tag3 ((("binder_annot", 621)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -618)], (0)), 100000000, 0, -617); ((("constr")), 100000000, 0, -619); ((("types")), 100000000, 0, -616)]), 0, (("kernel/context.mli", 210, 8874, 8880), ("kernel/context.mli", 210, 8874, 8930), 0), 0, Tag1 ("Context", 61))], 0), 1, 0, [25; 25], [0; 0], 0, 0, (("kernel/context.mli", 208, 8757, 8761), ("kernel/context.mli", 210, 8874, 8930), 0), 0, 0, 0, Tag1 ("Context", 59)), 1, 0); (("get_annot", 695), ((Tag1 (0, (Tag3 ((("pt", 694)), [((0), 100000000, 0, -612); ((0), 100000000, 0, -613)], (0)), 100000000, 0, -611), (Tag3 ((("binder_annot", 621)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -610)], (0)), 100000000, 0, -609), 0), 100000000, 0, -608), 0, (("kernel/context.mli", 212, 8966, 8970), ("kernel/context.mli", 212, 8966, 9011), 0), 0, Tag1 ("Context", 62)), 0); (("get_id", 696), ((Tag1 (0, (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -606); ((("t")), 100000000, 0, -607)], (0)), 100000000, 0, -605), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -604), 0), 100000000, 0, -603), 0, (("kernel/context.mli", 215, 9076, 9080), ("kernel/context.mli", 215, 9076, 9112), 0), 0, Tag1 ("Context", 63)), 0); (("get_value", 697), ((Tag1 (0, (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -600); ((("t")), 100000000, 0, -602)], (0)), 100000000, 0, -601), (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -600)], (0)), 100000000, 0, -599), 0), 100000000, 0, -598), 0, (("kernel/context.mli", 218, 9202, 9206), ("kernel/context.mli", 218, 9202, 9246), 0), 0, Tag1 ("Context", 64)), 0); (("get_type", 698), ((Tag1 (0, (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -597); ((("t")), 100000000, 0, -595)], (0)), 100000000, 0, -596), ((("t")), 100000000, 0, -595), 0), 100000000, 0, -594), 0, (("kernel/context.mli", 221, 9317, 9321), ("kernel/context.mli", 221, 9317, 9353), 0), 0, Tag1 ("Context", 65)), 0); (("get_relevance", 699), ((Tag1 (0, (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -592); ((("t")), 100000000, 0, -593)], (0)), 100000000, 0, -591), (Tag3 (Tag1 ((Tag2 ("Sorts")), "relevance"), 0, (0)), 100000000, 0, -590), 0), 100000000, 0, -589), 0, (("kernel/context.mli", 223, 9355, 9359), ("kernel/context.mli", 223, 9355, 9409), 0), 0, Tag1 ("Context", 66)), 0); (("set_id", 700), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -588), (Tag1 (0, (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -585); ((("t")), 100000000, 0, -586)], (0)), 100000000, 0, -587), (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -585); ((("t")), 100000000, 0, -586)], (0)), 100000000, 0, -584), 0), 100000000, 0, -583), 0), 100000000, 0, -582), 0, (("kernel/context.mli", 226, 9479, 9483), ("kernel/context.mli", 226, 9479, 9530), 0), 0, Tag1 ("Context", 67)), 0); (("set_type", 701), ((Tag1 (0, ((("t")), 100000000, 0, -580), (Tag1 (0, (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -579); ((("t")), 100000000, 0, -580)], (0)), 100000000, 0, -581), (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -579); ((("t")), 100000000, 0, -580)], (0)), 100000000, 0, -578), 0), 100000000, 0, -577), 0), 100000000, 0, -576), 0, (("kernel/context.mli", 229, 9602, 9606), ("kernel/context.mli", 229, 9602, 9653), 0), 0, Tag1 ("Context", 68)), 0); (("is_local_assum", 702), ((Tag1 (0, (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -574); ((("t")), 100000000, 0, -575)], (0)), 100000000, 0, -573), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -572), 0), 100000000, 0, -571), 0, (("kernel/context.mli", 232, 9727, 9731), ("kernel/context.mli", 232, 9727, 9771), 0), 0, Tag1 ("Context", 69)), 0); (("is_local_def", 703), ((Tag1 (0, (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -569); ((("t")), 100000000, 0, -570)], (0)), 100000000, 0, -568), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -567), 0), 100000000, 0, -566), 0, (("kernel/context.mli", 235, 9845, 9849), ("kernel/context.mli", 235, 9845, 9887), 0), 0, Tag1 ("Context", 70)), 0); (("exists", 704), ((Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -563), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -565), 0), 100000000, 0, -564), (Tag1 (0, (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -563); ((("c")), 100000000, 0, -563)], (0)), 100000000, 0, -562), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -561), 0), 100000000, 0, -560), 0), 100000000, 0, -559), 0, (("kernel/context.mli", 238, 9975, 9979), ("kernel/context.mli", 238, 9975, 10027), 0), 0, Tag1 ("Context", 71)), 0); (("for_all", 705), ((Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -556), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -558), 0), 100000000, 0, -557), (Tag1 (0, (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -556); ((("c")), 100000000, 0, -556)], (0)), 100000000, 0, -555), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -554), 0), 100000000, 0, -553), 0), 100000000, 0, -552), 0, (("kernel/context.mli", 241, 10114, 10118), ("kernel/context.mli", 241, 10114, 10167), 0), 0, Tag1 ("Context", 72)), 0); (("equal", 706), ((Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -547), (Tag1 (0, ((("c")), 100000000, 0, -547), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -551), 0), 100000000, 0, -550), 0), 100000000, 0, -549), (Tag1 (0, (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -547); ((("c")), 100000000, 0, -547)], (0)), 100000000, 0, -548), (Tag1 (0, (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -547); ((("c")), 100000000, 0, -547)], (0)), 100000000, 0, -546), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -545), 0), 100000000, 0, -544), 0), 100000000, 0, -543), 0), 100000000, 0, -542), 0, (("kernel/context.mli", 244, 10232, 10236), ("kernel/context.mli", 244, 10232, 10304), 0), 0, Tag1 ("Context", 73)), 0); (("map_id", 707), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -541), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -540), 0), 100000000, 0, -539), (Tag1 (0, (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -536); ((("t")), 100000000, 0, -537)], (0)), 100000000, 0, -538), (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -536); ((("t")), 100000000, 0, -537)], (0)), 100000000, 0, -535), 0), 100000000, 0, -534), 0), 100000000, 0, -533), 0, (("kernel/context.mli", 247, 10366, 10370), ("kernel/context.mli", 247, 10366, 10427), 0), 0, Tag1 ("Context", 74)), 0); (("map_value", 708), ((Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -529), ((("c")), 100000000, 0, -529), 0), 100000000, 0, -532), (Tag1 (0, (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -529); ((("t")), 100000000, 0, -530)], (0)), 100000000, 0, -531), (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -529); ((("t")), 100000000, 0, -530)], (0)), 100000000, 0, -528), 0), 100000000, 0, -527), 0), 100000000, 0, -526), 0, (("kernel/context.mli", 251, 10602, 10606), ("kernel/context.mli", 251, 10602, 10662), 0), 0, Tag1 ("Context", 75)), 0); (("map_type", 709), ((Tag1 (0, (Tag1 (0, ((("t")), 100000000, 0, -523), ((("t")), 100000000, 0, -523), 0), 100000000, 0, -525), (Tag1 (0, (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -522); ((("t")), 100000000, 0, -523)], (0)), 100000000, 0, -524), (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -522); ((("t")), 100000000, 0, -523)], (0)), 100000000, 0, -521), 0), 100000000, 0, -520), 0), 100000000, 0, -519), 0, (("kernel/context.mli", 254, 10730, 10734), ("kernel/context.mli", 254, 10730, 10789), 0), 0, Tag1 ("Context", 76)), 0); (("map_constr", 710), ((Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -516), ((("c")), 100000000, 0, -516), 0), 100000000, 0, -518), (Tag1 (0, (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -516); ((("c")), 100000000, 0, -516)], (0)), 100000000, 0, -517), (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -516); ((("c")), 100000000, 0, -516)], (0)), 100000000, 0, -515), 0), 100000000, 0, -514), 0), 100000000, 0, -513), 0, (("kernel/context.mli", 257, 10840, 10844), ("kernel/context.mli", 257, 10840, 10901), 0), 0, Tag1 ("Context", 77)), 0); (("map_constr_het", 711), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -511), ((("b")), 100000000, 0, -509), 0), 100000000, 0, -512), (Tag1 (0, (Tag3 ((("pt", 694)), [((("a")), 100000000, 0, -511); ((("a")), 100000000, 0, -511)], (0)), 100000000, 0, -510), (Tag3 ((("pt", 694)), [((("b")), 100000000, 0, -509); ((("b")), 100000000, 0, -509)], (0)), 100000000, 0, -508), 0), 100000000, 0, -507), 0), 100000000, 0, -506), 0, (("kernel/context.mli", 260, 10961, 10965), ("kernel/context.mli", 260, 10961, 11026), 0), 0, Tag1 ("Context", 78)), 0); (("iter_constr", 712), ((Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -503), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -505), 0), 100000000, 0, -504), (Tag1 (0, (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -503); ((("c")), 100000000, 0, -503)], (0)), 100000000, 0, -502), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -501), 0), 100000000, 0, -500), 0), 100000000, 0, -499), 0, (("kernel/context.mli", 263, 11099, 11103), ("kernel/context.mli", 263, 11099, 11156), 0), 0, Tag1 ("Context", 79)), 0); (("fold_constr", 713), ((Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -496), (Tag1 (0, ((("a")), 100000000, 0, -494), ((("a")), 100000000, 0, -494), 0), 100000000, 0, -498), 0), 100000000, 0, -497), (Tag1 (0, (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -496); ((("c")), 100000000, 0, -496)], (0)), 100000000, 0, -495), (Tag1 (0, ((("a")), 100000000, 0, -494), ((("a")), 100000000, 0, -494), 0), 100000000, 0, -493), 0), 100000000, 0, -492), 0), 100000000, 0, -491), 0, (("kernel/context.mli", 266, 11228, 11232), ("kernel/context.mli", 266, 11228, 11293), 0), 0, Tag1 ("Context", 80)), 0); (("to_tuple", 714), ((Tag1 (0, (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -488); ((("t")), 100000000, 0, -489)], (0)), 100000000, 0, -490), (Tag2 ([(Tag3 ((("binder_annot", 621)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -486)], (0)), 100000000, 0, -485); (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -488)], (0)), 100000000, 0, -487); ((("t")), 100000000, 0, -489)]), 100000000, 0, -484), 0), 100000000, 0, -483), 0, (("kernel/context.mli", 268, 11295, 11299), ("kernel/context.mli", 268, 11295, 11363), 0), 0, Tag1 ("Context", 81)), 0); (("of_tuple", 715), ((Tag1 (0, (Tag2 ([(Tag3 ((("binder_annot", 621)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -481)], (0)), 100000000, 0, -480); (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -477)], (0)), 100000000, 0, -482); ((("t")), 100000000, 0, -478)]), 100000000, 0, -479), (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -477); ((("t")), 100000000, 0, -478)], (0)), 100000000, 0, -476), 0), 100000000, 0, -475), 0, (("kernel/context.mli", 269, 11364, 11368), ("kernel/context.mli", 269, 11364, 11432), 0), 0, Tag1 ("Context", 82)), 0); (("drop_body", 716), ((Tag1 (0, (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -472); ((("t")), 100000000, 0, -473)], (0)), 100000000, 0, -474), (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -472); ((("t")), 100000000, 0, -473)], (0)), 100000000, 0, -471), 0), 100000000, 0, -470), 0, (("kernel/context.mli", 272, 11500, 11504), ("kernel/context.mli", 272, 11500, 11546), 0), 0, Tag1 ("Context", 83)), 0); (("of_rel_decl", 717), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -469), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -468), 0), 100000000, 0, -467), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Rel", 631)), "Declaration"), "pt"), [((("c")), 100000000, 0, -464); ((("t")), 100000000, 0, -465)], (0)), 100000000, 0, -466), (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -464); ((("t")), 100000000, 0, -465)], (0)), 100000000, 0, -463), 0), 100000000, 0, -462), 0), 100000000, 0, -461), 0, (("kernel/context.mli", 276, 11742, 11746), ("kernel/context.mli", 276, 11742, 11826), 0), 0, Tag1 ("Context", 84)), 0); (("to_rel_decl", 718), ((Tag1 (0, (Tag3 ((("pt", 694)), [((("c")), 100000000, 0, -458); ((("t")), 100000000, 0, -459)], (0)), 100000000, 0, -460), (Tag3 (Tag1 (Tag1 ((("Rel", 631)), "Declaration"), "pt"), [((("c")), 100000000, 0, -458); ((("t")), 100000000, 0, -459)], (0)), 100000000, 0, -457), 0), 100000000, 0, -456), 0, (("kernel/context.mli", 280, 12015, 12019), ("kernel/context.mli", 280, 12015, 12079), 0), 0, Tag1 ("Context", 85)), 0)]), 0, (("kernel/context.mli", 206, 8728, 8730), ("kernel/context.mli", 281, 12080, 12085), 0), Tag1 ("Context", 86)), 0, 0); Tag1 (("pt", 679), ([((("constr")), 100000000, 0, -454); ((("types")), 100000000, 0, -455)], 2, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Declaration", 678)), "pt"), [((("constr")), 100000000, 0, -454); ((("types")), 100000000, 0, -455)], (0)), 100000000, 0, -453)], (0)), 100000000, 0, -452)), [25; 25], [0; 0], 0, 0, (("kernel/context.mli", 286, 12274, 12276), ("kernel/context.mli", 286, 12274, 12341), 0), 0, 0, 0, Tag1 ("Context", 87)), 1, 0); (("empty", 680), ((Tag3 ((("pt", 679)), [((("c")), 100000000, 0, -450); ((("t")), 100000000, 0, -451)], (0)), 100000000, 0, -449), 0, (("kernel/context.mli", 289, 12372, 12374), ("kernel/context.mli", 289, 12372, 12397), 0), 0, Tag1 ("Context", 88)), 0); (("add", 681), ((Tag1 (0, (Tag3 (Tag1 ((("Declaration", 678)), "pt"), [((("c")), 100000000, 0, -445); ((("t")), 100000000, 0, -446)], (0)), 100000000, 0, -448), (Tag1 (0, (Tag3 ((("pt", 679)), [((("c")), 100000000, 0, -445); ((("t")), 100000000, 0, -446)], (0)), 100000000, 0, -447), (Tag3 ((("pt", 679)), [((("c")), 100000000, 0, -445); ((("t")), 100000000, 0, -446)], (0)), 100000000, 0, -444), 0), 100000000, 0, -443), 0), 100000000, 0, -442), 0, (("kernel/context.mli", 292, 12484, 12486), ("kernel/context.mli", 292, 12484, 12549), 0), 0, Tag1 ("Context", 89)), 0); (("length", 682), ((Tag1 (0, (Tag3 ((("pt", 679)), [((("c")), 100000000, 0, -440); ((("t")), 100000000, 0, -441)], (0)), 100000000, 0, -439), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -438), 0), 100000000, 0, -437), 0, (("kernel/context.mli", 295, 12630, 12632), ("kernel/context.mli", 295, 12630, 12663), 0), 0, Tag1 ("Context", 90)), 0); (("lookup", 683), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -436), (Tag1 (0, (Tag3 ((("pt", 679)), [((("c")), 100000000, 0, -433); ((("t")), 100000000, 0, -434)], (0)), 100000000, 0, -435), (Tag3 (Tag1 ((("Declaration", 678)), "pt"), [((("c")), 100000000, 0, -433); ((("t")), 100000000, 0, -434)], (0)), 100000000, 0, -432), 0), 100000000, 0, -431), 0), 100000000, 0, -430), 0, (("kernel/context.mli", 299, 12857, 12859), ("kernel/context.mli", 299, 12857, 12918), 0), 0, Tag1 ("Context", 91)), 0); (("equal", 684), ((Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -425), (Tag1 (0, ((("c")), 100000000, 0, -425), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -429), 0), 100000000, 0, -428), 0), 100000000, 0, -427), (Tag1 (0, (Tag3 ((("pt", 679)), [((("c")), 100000000, 0, -425); ((("c")), 100000000, 0, -425)], (0)), 100000000, 0, -426), (Tag1 (0, (Tag3 ((("pt", 679)), [((("c")), 100000000, 0, -425); ((("c")), 100000000, 0, -425)], (0)), 100000000, 0, -424), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -423), 0), 100000000, 0, -422), 0), 100000000, 0, -421), 0), 100000000, 0, -420), 0, (("kernel/context.mli", 302, 12979, 12981), ("kernel/context.mli", 302, 12979, 13049), 0), 0, Tag1 ("Context", 92)), 0); (("map", 685), ((Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -417), ((("c")), 100000000, 0, -417), 0), 100000000, 0, -419), (Tag1 (0, (Tag3 ((("pt", 679)), [((("c")), 100000000, 0, -417); ((("c")), 100000000, 0, -417)], (0)), 100000000, 0, -418), (Tag3 ((("pt", 679)), [((("c")), 100000000, 0, -417); ((("c")), 100000000, 0, -417)], (0)), 100000000, 0, -416), 0), 100000000, 0, -415), 0), 100000000, 0, -414), 0, (("kernel/context.mli", 305, 13100, 13102), ("kernel/context.mli", 305, 13100, 13152), 0), 0, Tag1 ("Context", 93)), 0); (("iter", 686), ((Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -411), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -413), 0), 100000000, 0, -412), (Tag1 (0, (Tag3 ((("pt", 679)), [((("c")), 100000000, 0, -411); ((("c")), 100000000, 0, -411)], (0)), 100000000, 0, -410), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -409), 0), 100000000, 0, -408), 0), 100000000, 0, -407), 0, (("kernel/context.mli", 308, 13233, 13235), ("kernel/context.mli", 308, 13233, 13281), 0), 0, Tag1 ("Context", 94)), 0); (("fold_inside", 687), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -400), (Tag1 (0, (Tag3 (Tag1 ((("Declaration", 678)), "pt"), [((("c")), 100000000, 0, -402); ((("t")), 100000000, 0, -403)], (0)), 100000000, 0, -406), ((("a")), 100000000, 0, -400), 0), 100000000, 0, -405), 0), 100000000, 0, -404), (Tag1 (("init"), ((("a")), 100000000, 0, -400), (Tag1 (0, (Tag3 ((("pt", 679)), [((("c")), 100000000, 0, -402); ((("t")), 100000000, 0, -403)], (0)), 100000000, 0, -401), ((("a")), 100000000, 0, -400), 0), 100000000, 0, -399), 0), 100000000, 0, -398), 0), 100000000, 0, -397), 0, (("kernel/context.mli", 312, 13403, 13405), ("kernel/context.mli", 312, 13403, 13492), 0), 0, Tag1 ("Context", 95)), 0); (("fold_outside", 688), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((("Declaration", 678)), "pt"), [((("c")), 100000000, 0, -392); ((("t")), 100000000, 0, -393)], (0)), 100000000, 0, -396), (Tag1 (0, ((("a")), 100000000, 0, -390), ((("a")), 100000000, 0, -390), 0), 100000000, 0, -395), 0), 100000000, 0, -394), (Tag1 (0, (Tag3 ((("pt", 679)), [((("c")), 100000000, 0, -392); ((("t")), 100000000, 0, -393)], (0)), 100000000, 0, -391), (Tag1 (("init"), ((("a")), 100000000, 0, -390), ((("a")), 100000000, 0, -390), 0), 100000000, 0, -389), 0), 100000000, 0, -388), 0), 100000000, 0, -387), 0, (("kernel/context.mli", 316, 13614, 13616), ("kernel/context.mli", 316, 13614, 13704), 0), 0, Tag1 ("Context", 96)), 0); (("to_vars", 689), ((Tag1 (0, (Tag3 ((("pt", 679)), [((("c")), 100000000, 0, -385); ((("t")), 100000000, 0, -386)], (0)), 100000000, 0, -384), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -383), 0), 100000000, 0, -382), 0, (("kernel/context.mli", 319, 13781, 13783), ("kernel/context.mli", 319, 13781, 13820), 0), 0, Tag1 ("Context", 97)), 0); (("drop_bodies", 690), ((Tag1 (0, (Tag3 ((("pt", 679)), [((("c")), 100000000, 0, -379); ((("t")), 100000000, 0, -380)], (0)), 100000000, 0, -381), (Tag3 ((("pt", 679)), [((("c")), 100000000, 0, -379); ((("t")), 100000000, 0, -380)], (0)), 100000000, 0, -378), 0), 100000000, 0, -377), 0, (("kernel/context.mli", 322, 13900, 13902), ("kernel/context.mli", 322, 13900, 13946), 0), 0, Tag1 ("Context", 98)), 0); (("to_instance", 691), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -376), ((("r")), 100000000, 0, -371), 0), 100000000, 0, -375), (Tag1 (0, (Tag3 ((("pt", 679)), [((("c")), 100000000, 0, -373); ((("t")), 100000000, 0, -374)], (0)), 100000000, 0, -372), (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -371)], (0)), 100000000, 0, -370), 0), 100000000, 0, -369), 0), 100000000, 0, -368), 0, (("kernel/context.mli", 328, 14237, 14239), ("kernel/context.mli", 329, 14296, 14500), 0), [(("ocaml.deprecated", (("kernel/context.mli", 329, 14296, 14303), ("kernel/context.mli", 329, 14296, 14319), 0)), ([([(Tag1 (Tag2 ("[to_instance] was missing a [List.rev] to comply to its specification; rely on [instance] for the correct specification or use [List.rev (instance ...)] for strict compatibility", (("kernel/context.mli", 329, 14296, 14321), ("kernel/context.mli", 329, 14296, 14498), 0), 0)), (("kernel/context.mli", 329, 14296, 14320), ("kernel/context.mli", 329, 14296, 14499), 0), 0, 0)], (("kernel/context.mli", 329, 14296, 14320), ("kernel/context.mli", 329, 14296, 14499), 0))]), (("kernel/context.mli", 329, 14296, 14300), ("kernel/context.mli", 329, 14296, 14500), 0))], Tag1 ("Context", 99)), 0); (("instance", 692), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -367), ((("r")), 100000000, 0, -362), 0), 100000000, 0, -366), (Tag1 (0, (Tag3 ((("pt", 679)), [((("c")), 100000000, 0, -364); ((("t")), 100000000, 0, -365)], (0)), 100000000, 0, -363), (Tag3 ((Tag3 ("array", 8)), [((("r")), 100000000, 0, -362)], (0)), 100000000, 0, -361), 0), 100000000, 0, -360), 0), 100000000, 0, -359), 0, (("kernel/context.mli", 337, 14862, 14864), ("kernel/context.mli", 337, 14862, 14918), 0), 0, Tag1 ("Context", 100)), 0); (("instance_list", 693), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -358), ((("r")), 100000000, 0, -353), 0), 100000000, 0, -357), (Tag1 (0, (Tag3 ((("pt", 679)), [((("c")), 100000000, 0, -355); ((("t")), 100000000, 0, -356)], (0)), 100000000, 0, -354), (Tag3 ((Tag3 ("list", 9)), [((("r")), 100000000, 0, -353)], (0)), 100000000, 0, -352), 0), 100000000, 0, -351), 0), 100000000, 0, -350), 0, (("kernel/context.mli", 340, 14986, 14988), ("kernel/context.mli", 340, 14986, 15046), 0), 0, Tag1 ("Context", 101)), 0)]), 0, (("kernel/context.mli", 203, 8658, 8658), ("kernel/context.mli", 341, 15047, 15050), 0), Tag1 ("Context", 102)), 0, 0); Tag3 (("Compacted", 633), 0, (Tag1 ([Tag3 (("Declaration", 719), 0, (Tag1 ([Tag1 (("pt", 722), ([((("constr")), 100000000, 0, -657); ((("types")), 100000000, 0, -653)], 2, Tag1 ([(("LocalAssum", 560), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("binder_annot", 621)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -652)], (0)), 100000000, 0, -651)], (0)), 100000000, 0, -650); ((("types")), 100000000, 0, -653)]), 0, (("kernel/context.mli", 348, 15136, 15142), ("kernel/context.mli", 348, 15136, 15189), 0), 0, Tag1 ("Context", 104)); (("LocalDef", 561), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("binder_annot", 621)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -656)], (0)), 100000000, 0, -655)], (0)), 100000000, 0, -654); ((("constr")), 100000000, 0, -657); ((("types")), 100000000, 0, -653)]), 0, (("kernel/context.mli", 349, 15190, 15196), ("kernel/context.mli", 349, 15190, 15251), 0), 0, Tag1 ("Context", 105))], 0), 1, 0, [25; 25], [0; 0], 0, 0, (("kernel/context.mli", 347, 15104, 15108), ("kernel/context.mli", 349, 15190, 15251), 0), 0, 0, 0, Tag1 ("Context", 103)), 1, 0); (("map_constr", 723), ((Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -647), ((("c")), 100000000, 0, -647), 0), 100000000, 0, -649), (Tag1 (0, (Tag3 ((("pt", 722)), [((("c")), 100000000, 0, -647); ((("c")), 100000000, 0, -647)], (0)), 100000000, 0, -648), (Tag3 ((("pt", 722)), [((("c")), 100000000, 0, -647); ((("c")), 100000000, 0, -647)], (0)), 100000000, 0, -646), 0), 100000000, 0, -645), 0), 100000000, 0, -644), 0, (("kernel/context.mli", 351, 15253, 15257), ("kernel/context.mli", 351, 15253, 15314), 0), 0, Tag1 ("Context", 106)), 0); (("of_named_decl", 724), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Named", 632)), "Declaration"), "pt"), [((("c")), 100000000, 0, -641); ((("t")), 100000000, 0, -642)], (0)), 100000000, 0, -643), (Tag3 ((("pt", 722)), [((("c")), 100000000, 0, -641); ((("t")), 100000000, 0, -642)], (0)), 100000000, 0, -640), 0), 100000000, 0, -639), 0, (("kernel/context.mli", 352, 15315, 15319), ("kernel/context.mli", 352, 15315, 15383), 0), 0, Tag1 ("Context", 107)), 0); (("to_named_context", 725), ((Tag1 (0, (Tag3 ((("pt", 722)), [((("c")), 100000000, 0, -636); ((("t")), 100000000, 0, -637)], (0)), 100000000, 0, -638), (Tag3 (Tag1 ((("Named", 632)), "pt"), [((("c")), 100000000, 0, -636); ((("t")), 100000000, 0, -637)], (0)), 100000000, 0, -635), 0), 100000000, 0, -634), 0, (("kernel/context.mli", 353, 15384, 15388), ("kernel/context.mli", 353, 15384, 15443), 0), 0, Tag1 ("Context", 108)), 0)]), 0, (("kernel/context.mli", 345, 15075, 15077), ("kernel/context.mli", 354, 15444, 15449), 0), Tag1 ("Context", 109)), 0, 0); Tag1 (("pt", 720), ([((("constr")), 100000000, 0, -632); ((("types")), 100000000, 0, -633)], 2, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Declaration", 719)), "pt"), [((("constr")), 100000000, 0, -632); ((("types")), 100000000, 0, -633)], (0)), 100000000, 0, -631)], (0)), 100000000, 0, -630)), [25; 25], [0; 0], 0, 0, (("kernel/context.mli", 356, 15451, 15453), ("kernel/context.mli", 356, 15451, 15518), 0), 0, 0, 0, Tag1 ("Context", 110)), 1, 0); (("fold", 721), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((("Declaration", 719)), "pt"), [((("c")), 100000000, 0, -625); ((("t")), 100000000, 0, -626)], (0)), 100000000, 0, -629), (Tag1 (0, ((("a")), 100000000, 0, -623), ((("a")), 100000000, 0, -623), 0), 100000000, 0, -628), 0), 100000000, 0, -627), (Tag1 (0, (Tag3 ((("pt", 720)), [((("c")), 100000000, 0, -625); ((("t")), 100000000, 0, -626)], (0)), 100000000, 0, -624), (Tag1 (("init"), ((("a")), 100000000, 0, -623), ((("a")), 100000000, 0, -623), 0), 100000000, 0, -622), 0), 100000000, 0, -621), 0), 100000000, 0, -620), 0, (("kernel/context.mli", 358, 15520, 15522), ("kernel/context.mli", 358, 15520, 15602), 0), 0, Tag1 ("Context", 111)), 0)]), 0, (("kernel/context.mli", 343, 15052, 15052), ("kernel/context.mli", 359, 15603, 15606), 0), Tag1 ("Context", 112)), 0, 0)], "Context", [("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])

