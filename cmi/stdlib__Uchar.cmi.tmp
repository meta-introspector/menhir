type t [@@immediate]
val min : t
val max : t
val bom : t
val rep : t
val succ : t -> t
val pred : t -> t
val is_valid : int -> bool
val of_int : int -> t
val unsafe_of_int : int -> t
val to_int : t -> int
val is_char : t -> bool
val of_char : char -> t
val to_char : t -> char
val unsafe_to_char : t -> char
val equal : t -> t -> bool
val compare : t -> t -> int
val hash : t -> int
type utf_decode [@@immediate]
val utf_decode_is_valid : utf_decode -> bool
val utf_decode_uchar : utf_decode -> t
val utf_decode_length : utf_decode -> int
val utf_decode : int -> t -> utf_decode
val utf_decode_invalid : int -> utf_decode
val utf_8_byte_length : t -> int("DEBUG:rule", [Tag1 (("t", 295), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("uchar.mli", 20, 1124, 1124), ("uchar.mli", 21, 1131, 1144), 0), [(("immediate", (("uchar.mli", 21, 1131, 1134), ("uchar.mli", 21, 1131, 1143), 0)), (0), (("uchar.mli", 21, 1131, 1131), ("uchar.mli", 21, 1131, 1144), 0))], 1, 0, Tag1 ("Stdlib__Uchar", 0)), 1, 0); (("min", 296), ((Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -71), 0, (("uchar.mli", 29, 1392, 1392), ("uchar.mli", 29, 1392, 1403), 0), 0, Tag1 ("Stdlib__Uchar", 1)), 0); (("max", 297), ((Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -70), 0, (("uchar.mli", 32, 1429, 1429), ("uchar.mli", 32, 1429, 1440), 0), 0, Tag1 ("Stdlib__Uchar", 2)), 0); (("bom", 298), ((Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -69), 0, (("uchar.mli", 35, 1468, 1468), ("uchar.mli", 35, 1468, 1479), 0), 0, Tag1 ("Stdlib__Uchar", 3)), 0); (("rep", 299), ((Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -68), 0, (("uchar.mli", 42, 1616, 1616), ("uchar.mli", 42, 1616, 1627), 0), 0, Tag1 ("Stdlib__Uchar", 4)), 0); (("succ", 300), ((Tag1 (0, (Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -67), (Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("uchar.mli", 49, 1760, 1760), ("uchar.mli", 49, 1760, 1777), 0), 0, Tag1 ("Stdlib__Uchar", 5)), 0); (("pred", 301), ((Tag1 (0, (Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -64), (Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -63), 0), 100000000, 0, -62), 0, (("uchar.mli", 55, 1913, 1913), ("uchar.mli", 55, 1913, 1930), 0), 0, Tag1 ("Stdlib__Uchar", 6)), 0); (("is_valid", 302), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -61), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -60), 0), 100000000, 0, -59), 0, (("uchar.mli", 61, 2067, 2067), ("uchar.mli", 61, 2067, 2093), 0), 0, Tag1 ("Stdlib__Uchar", 7)), 0); (("of_int", 303), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -58), (Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("uchar.mli", 65, 2240, 2240), ("uchar.mli", 65, 2240, 2261), 0), 0, Tag1 ("Stdlib__Uchar", 8)), 0); (("unsafe_of_int", 304), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -55), (Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("uchar.mli", 71, 2386, 2386), ("uchar.mli", 71, 2386, 2414), 0), 0, Tag1 ("Stdlib__Uchar", 9)), 0); (("to_int", 305), ((Tag1 (0, (Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -52), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -51), 0), 100000000, 0, -50), 0, (("uchar.mli", 74, 2424, 2424), ("uchar.mli", 74, 2424, 2445), 0), 0, Tag1 ("Stdlib__Uchar", 10)), 0); (("is_char", 306), ((Tag1 (0, (Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -49), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("uchar.mli", 77, 2487, 2487), ("uchar.mli", 77, 2487, 2510), 0), 0, Tag1 ("Stdlib__Uchar", 11)), 0); (("of_char", 307), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -46), (Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("uchar.mli", 80, 2589, 2589), ("uchar.mli", 80, 2589, 2612), 0), 0, Tag1 ("Stdlib__Uchar", 12)), 0); (("to_char", 308), ((Tag1 (0, (Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -43), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("uchar.mli", 83, 2664, 2664), ("uchar.mli", 83, 2664, 2687), 0), 0, Tag1 ("Stdlib__Uchar", 13)), 0); (("unsafe_to_char", 309), ((Tag1 (0, (Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -40), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("uchar.mli", 89, 2818, 2818), ("uchar.mli", 89, 2818, 2848), 0), 0, Tag1 ("Stdlib__Uchar", 14)), 0); (("equal", 310), ((Tag1 (0, (Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -37), (Tag1 (0, (Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -36), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0, (("uchar.mli", 92, 2858, 2858), ("uchar.mli", 92, 2858, 2884), 0), 0, Tag1 ("Stdlib__Uchar", 15)), 0); (("compare", 311), ((Tag1 (0, (Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -32), (Tag1 (0, (Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -31), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("uchar.mli", 95, 2919, 2919), ("uchar.mli", 95, 2919, 2946), 0), 0, Tag1 ("Stdlib__Uchar", 16)), 0); (("hash", 312), ((Tag1 (0, (Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -27), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0, (("uchar.mli", 98, 2996, 2996), ("uchar.mli", 98, 2996, 3015), 0), 0, Tag1 ("Stdlib__Uchar", 17)), 0); Tag1 (("utf_decode", 313), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("uchar.mli", 105, 3125, 3125), ("uchar.mli", 105, 3125, 3154), 0), [(("immediate", (("uchar.mli", 105, 3125, 3144), ("uchar.mli", 105, 3125, 3153), 0)), (0), (("uchar.mli", 105, 3125, 3141), ("uchar.mli", 105, 3125, 3154), 0))], 1, 0, Tag1 ("Stdlib__Uchar", 18)), 1, 0); (("utf_decode_is_valid", 314), ((Tag1 (0, (Tag3 ((("utf_decode", 313)), 0, (0)), 100000000, 0, -24), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("uchar.mli", 109, 3294, 3294), ("uchar.mli", 109, 3294, 3338), 0), 0, Tag1 ("Stdlib__Uchar", 19)), 0); (("utf_decode_uchar", 315), ((Tag1 (0, (Tag3 ((("utf_decode", 313)), 0, (0)), 100000000, 0, -21), (Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("uchar.mli", 113, 3426, 3426), ("uchar.mli", 113, 3426, 3464), 0), 0, Tag1 ("Stdlib__Uchar", 20)), 0); (("utf_decode_length", 316), ((Tag1 (0, (Tag3 ((("utf_decode", 313)), 0, (0)), 100000000, 0, -18), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("uchar.mli", 117, 3603, 3603), ("uchar.mli", 117, 3603, 3644), 0), 0, Tag1 ("Stdlib__Uchar", 21)), 0); (("utf_decode", 317), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -15), (Tag1 (0, (Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -14), (Tag3 ((("utf_decode", 313)), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("uchar.mli", 124, 3981, 3981), ("uchar.mli", 124, 3981, 4020), 0), 0, Tag1 ("Stdlib__Uchar", 22)), 0); (("utf_decode_invalid", 318), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -10), (Tag3 ((("utf_decode", 313)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("uchar.mli", 129, 4227, 4227), ("uchar.mli", 129, 4227, 4269), 0), 0, Tag1 ("Stdlib__Uchar", 23)), 0); (("utf_8_byte_length", 319), ((Tag1 (0, (Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("uchar.mli", 135, 4543, 4543), ("uchar.mli", 135, 4543, 4575), 0), 0, Tag1 ("Stdlib__Uchar", 24)), 0); (("utf_16_byte_length", 320), ((Tag1 (0, (Tag3 ((("t", 295)), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("uchar.mli", 139, 4664, 4664), ("uchar.mli", 139, 4664, 4697), 0), 0, Tag1 ("Stdlib__Uchar", 25)), 0)], "Stdlib__Uchar", [("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val utf_16_byte_length : t -> int
