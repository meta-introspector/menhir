type status = Disabled | Enabled | AsError
type category
val all : category
type warning
type 'a msg
val warn : 'a msg -> ?loc:Loc.t -> 'a -> unit
val create_category : ?from:category list -> name:string -> unit -> category
val create_warning :
  ?from:category list -> ?default:status -> name:string -> unit -> warning
val create_hybrid :
  ?from:category list ->
  ?default:status -> name:string -> unit -> category * warning
val create_msg : warning -> unit -> 'a msg
val create_in : warning -> ('a -> Pp.t) -> ?loc:Loc.t -> 'a -> unit
val register_printer : 'a msg -> ('a -> Pp.t) -> unit
val create :
  name:string ->
  ?category:category ->
  ?default:status -> ('a -> Pp.t) -> ?loc:Loc.t -> 'a -> unit
val get_flags : unit -> string
val set_flags : string -> unit
type 'a elt = There of 'a | NotThere | OtherType
val get_category : string -> category elt
val get_warning : string -> warning elt
val warning_status : warning -> status
val get_status : name:string -> status
val normalize_flags_string : string -> string
val with_warn : string -> ('b -> 'a) -> 'b -> 'a
val check_unknown_warnings : string -> unit
val override_unknown_warning : bool ref
module CoreCategories :
  sig
    val automation : category
    val bytecode_compiler : category
    val coercions : category
    val deprecated : category
    val extraction : category
    val filesystem : category
    val fixpoints : category
    val fragile : category
    val funind : category
    val implicits : category
    val ltac : category
    val ltac2 : category
    val native_compiler : category
    val numbers : category
    val parsing : category
    val pedantic : category
    val records : category
    val ssr : category
    val syntax : category
    val tactics : category
    val vernacular : category("DEBUG:rule", [Tag1 (("status", 402), (0, 0, Tag1 ([(("Disabled", 270), (0), 0, (("lib/cWarnings.mli", 11, 676, 690), ("lib/cWarnings.mli", 11, 676, 698), 0), 0, Tag1 ("CWarnings", 1)); (("Enabled", 271), (0), 0, (("lib/cWarnings.mli", 11, 676, 699), ("lib/cWarnings.mli", 11, 676, 708), 0), 0, Tag1 ("CWarnings", 2)); (("AsError", 272), (0), 0, (("lib/cWarnings.mli", 11, 676, 709), ("lib/cWarnings.mli", 11, 676, 718), 0), 0, Tag1 ("CWarnings", 3))], 0), 1, 0, 0, 0, 0, 0, (("lib/cWarnings.mli", 11, 676, 676), ("lib/cWarnings.mli", 11, 676, 718), 0), 0, 1, 0, Tag1 ("CWarnings", 0)), 1, 0); Tag1 (("category", 403), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/cWarnings.mli", 13, 720, 720), ("lib/cWarnings.mli", 13, 720, 733), 0), 0, 0, 0, Tag1 ("CWarnings", 4)), 1, 0); (("all", 404), ((Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -123), 0, (("lib/cWarnings.mli", 16, 830, 830), ("lib/cWarnings.mli", 16, 830, 848), 0), 0, Tag1 ("CWarnings", 5)), 0); Tag1 (("warning", 405), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/cWarnings.mli", 18, 850, 850), ("lib/cWarnings.mli", 18, 850, 862), 0), 0, 0, 0, Tag1 ("CWarnings", 6)), 1, 0); Tag1 (("msg", 406), ([((("a")), 100000000, 0, -122)], 1, 0, 1, 0, [7], [2], 0, 0, (("lib/cWarnings.mli", 23, 1070, 1070), ("lib/cWarnings.mli", 23, 1070, 1081), 0), 0, 0, 0, Tag1 ("CWarnings", 7)), 1, 0); (("warn", 407), ((Tag1 (0, (Tag3 ((("msg", 406)), [((("a")), 100000000, 0, -118)], (0)), 100000000, 0, -121), (Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -120)], (0)), 100000000, 0, -119), (Tag1 (0, ((("a")), 100000000, 0, -118), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -117), 0), 100000000, 0, -116), 0), 100000000, 0, -115), 0), 100000000, 0, -114), 0, (("lib/cWarnings.mli", 26, 1122, 1122), ("lib/cWarnings.mli", 26, 1122, 1167), 0), 0, Tag1 ("CWarnings", 9)), 0); (("create_category", 408), ((Tag1 (Tag1 ("from"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -113)], (0)), 100000000, 0, -112)], (0)), 100000000, 0, -111), (Tag1 (("name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -110), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -109), (Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), 0), 100000000, 0, -105), 0, (("lib/cWarnings.mli", 34, 1321, 1321), ("lib/cWarnings.mli", 34, 1321, 1397), 0), 0, Tag1 ("CWarnings", 10)), 0); (("create_warning", 409), ((Tag1 (Tag1 ("from"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -104)], (0)), 100000000, 0, -103)], (0)), 100000000, 0, -102), (Tag1 (Tag1 ("default"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("status", 402)), 0, (0)), 100000000, 0, -101)], (0)), 100000000, 0, -100), (Tag1 (("name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -99), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -98), (Tag3 ((("warning", 405)), 0, (0)), 100000000, 0, -97), 0), 100000000, 0, -96), 0), 100000000, 0, -95), 0), 100000000, 0, -94), 0), 100000000, 0, -93), 0, (("lib/cWarnings.mli", 38, 1533, 1533), ("lib/cWarnings.mli", 38, 1533, 1626), 0), 0, Tag1 ("CWarnings", 11)), 0); (("create_hybrid", 410), ((Tag1 (Tag1 ("from"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -92)], (0)), 100000000, 0, -91)], (0)), 100000000, 0, -90), (Tag1 (Tag1 ("default"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("status", 402)), 0, (0)), 100000000, 0, -89)], (0)), 100000000, 0, -88), (Tag1 (("name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -87), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -86), (Tag2 ([(Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -84); (Tag3 ((("warning", 405)), 0, (0)), 100000000, 0, -85)]), 100000000, 0, -83), 0), 100000000, 0, -82), 0), 100000000, 0, -81), 0), 100000000, 0, -80), 0), 100000000, 0, -79), 0, (("lib/cWarnings.mli", 43, 1802, 1802), ("lib/cWarnings.mli", 43, 1802, 1905), 0), 0, Tag1 ("CWarnings", 12)), 0); (("create_msg", 411), ((Tag1 (0, (Tag3 ((("warning", 405)), 0, (0)), 100000000, 0, -78), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -77), (Tag3 ((("msg", 406)), [((("a")), 100000000, 0, -76)], (0)), 100000000, 0, -75), 0), 100000000, 0, -74), 0), 100000000, 0, -73), 0, (("lib/cWarnings.mli", 46, 2006, 2006), ("lib/cWarnings.mli", 46, 2006, 2048), 0), 0, Tag1 ("CWarnings", 13)), 0); (("create_in", 412), ((Tag1 (0, (Tag3 ((("warning", 405)), 0, (0)), 100000000, 0, -72), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -67), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -71), 0), 100000000, 0, -70), (Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -69)], (0)), 100000000, 0, -68), (Tag1 (0, ((("a")), 100000000, 0, -67), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0), 100000000, 0, -63), 0), 100000000, 0, -62), 0, (("lib/cWarnings.mli", 49, 2104, 2104), ("lib/cWarnings.mli", 49, 2104, 2171), 0), 0, Tag1 ("CWarnings", 14)), 0); (("register_printer", 413), ((Tag1 (0, (Tag3 ((("msg", 406)), [((("a")), 100000000, 0, -60)], (0)), 100000000, 0, -61), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -60), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -59), 0), 100000000, 0, -58), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0), 100000000, 0, -55), 0, (("lib/cWarnings.mli", 52, 2218, 2218), ("lib/cWarnings.mli", 52, 2218, 2271), 0), 0, Tag1 ("CWarnings", 15)), 0); (("create", 414), ((Tag1 (("name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -54), (Tag1 (Tag1 ("category"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -53)], (0)), 100000000, 0, -52), (Tag1 (Tag1 ("default"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("status", 402)), 0, (0)), 100000000, 0, -51)], (0)), 100000000, 0, -50), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -45), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -49), 0), 100000000, 0, -48), (Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -47)], (0)), 100000000, 0, -46), (Tag1 (0, ((("a")), 100000000, 0, -45), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("lib/cWarnings.mli", 55, 2373, 2373), ("lib/cWarnings.mli", 56, 2442, 2484), 0), 0, Tag1 ("CWarnings", 16)), 0); (("get_flags", 415), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -37), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("lib/cWarnings.mli", 61, 2568, 2568), ("lib/cWarnings.mli", 61, 2568, 2598), 0), 0, Tag1 ("CWarnings", 17)), 0); (("set_flags", 416), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -34), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0, (("lib/cWarnings.mli", 62, 2599, 2599), ("lib/cWarnings.mli", 62, 2599, 2629), 0), 0, Tag1 ("CWarnings", 18)), 0); Tag1 (("elt", 417), ([((("a")), 100000000, 0, -31)], 1, Tag1 ([(("There", 369), ([((("a")), 100000000, 0, -31)]), 0, (("lib/cWarnings.mli", 65, 2645, 2647), ("lib/cWarnings.mli", 65, 2645, 2660), 0), 0, Tag1 ("CWarnings", 20)); (("NotThere", 370), (0), 0, (("lib/cWarnings.mli", 66, 2661, 2663), ("lib/cWarnings.mli", 66, 2661, 2673), 0), 0, Tag1 ("CWarnings", 21)); (("OtherType", 371), (0), 0, (("lib/cWarnings.mli", 67, 2674, 2676), ("lib/cWarnings.mli", 67, 2674, 2687), 0), 0, Tag1 ("CWarnings", 22))], 0), 1, 0, [25], [0], 0, 0, (("lib/cWarnings.mli", 64, 2631, 2631), ("lib/cWarnings.mli", 67, 2674, 2687), 0), 0, 0, 0, Tag1 ("CWarnings", 19)), 1, 0); (("get_category", 418), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -30), (Tag3 ((("elt", 417)), [(Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -29)], (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("lib/cWarnings.mli", 69, 2689, 2689), ("lib/cWarnings.mli", 69, 2689, 2730), 0), 0, Tag1 ("CWarnings", 23)), 0); (("get_warning", 419), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -26), (Tag3 ((("elt", 417)), [(Tag3 ((("warning", 405)), 0, (0)), 100000000, 0, -25)], (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("lib/cWarnings.mli", 72, 2773, 2773), ("lib/cWarnings.mli", 72, 2773, 2812), 0), 0, Tag1 ("CWarnings", 24)), 0); (("warning_status", 420), ((Tag1 (0, (Tag3 ((("warning", 405)), 0, (0)), 100000000, 0, -22), (Tag3 ((("status", 402)), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("lib/cWarnings.mli", 75, 2854, 2854), ("lib/cWarnings.mli", 75, 2854, 2892), 0), 0, Tag1 ("CWarnings", 25)), 0); (("get_status", 421), ((Tag1 (("name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -19), (Tag3 ((("status", 402)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("lib/cWarnings.mli", 78, 2932, 2932), ("lib/cWarnings.mli", 78, 2932, 2970), 0), 0, Tag1 ("CWarnings", 26)), 0); (("normalize_flags_string", 422), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -16), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("lib/cWarnings.mli", 81, 3032, 3032), ("lib/cWarnings.mli", 81, 3032, 3077), 0), 0, Tag1 ("CWarnings", 27)), 0); (("with_warn", 423), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -13), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -11), ((("a")), 100000000, 0, -10), 0), 100000000, 0, -12), (Tag1 (0, ((("b")), 100000000, 0, -11), ((("a")), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("lib/cWarnings.mli", 85, 3231, 3231), ("lib/cWarnings.mli", 85, 3231, 3278), 0), 0, Tag1 ("CWarnings", 28)), 0); (("check_unknown_warnings", 424), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0, (("lib/cWarnings.mli", 92, 3588, 3588), ("lib/cWarnings.mli", 92, 3588, 3631), 0), 0, Tag1 ("CWarnings", 29)), 0); (("override_unknown_warning", 425), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3)], (0)), 100000000, 0, -2), 0, (("lib/cWarnings.mli", 96, 3740, 3740), ("lib/cWarnings.mli", 97, 3780, 3824), 0), [(("ocaml.deprecated", (("lib/cWarnings.mli", 97, 3780, 3783), ("lib/cWarnings.mli", 97, 3780, 3799), 0)), ([([(Tag1 (Tag2 ("Do not use, internal.", (("lib/cWarnings.mli", 97, 3780, 3801), ("lib/cWarnings.mli", 97, 3780, 3822), 0), 0)), (("lib/cWarnings.mli", 97, 3780, 3800), ("lib/cWarnings.mli", 97, 3780, 3823), 0), 0, 0)], (("lib/cWarnings.mli", 97, 3780, 3800), ("lib/cWarnings.mli", 97, 3780, 3823), 0))]), (("lib/cWarnings.mli", 97, 3780, 3780), ("lib/cWarnings.mli", 97, 3780, 3824), 0))], Tag1 ("CWarnings", 30)), 0); Tag3 (("CoreCategories", 426), 0, (Tag1 ([(("automation", 427), ((Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -144), 0, (("lib/cWarnings.mli", 104, 4028, 4030), ("lib/cWarnings.mli", 104, 4028, 4055), 0), 0, Tag1 ("CWarnings", 31)), 0); (("bytecode_compiler", 428), ((Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -143), 0, (("lib/cWarnings.mli", 105, 4056, 4058), ("lib/cWarnings.mli", 105, 4056, 4090), 0), 0, Tag1 ("CWarnings", 32)), 0); (("coercions", 429), ((Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -142), 0, (("lib/cWarnings.mli", 106, 4091, 4093), ("lib/cWarnings.mli", 106, 4091, 4117), 0), 0, Tag1 ("CWarnings", 33)), 0); (("deprecated", 430), ((Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -141), 0, (("lib/cWarnings.mli", 107, 4118, 4120), ("lib/cWarnings.mli", 107, 4118, 4145), 0), 0, Tag1 ("CWarnings", 34)), 0); (("extraction", 431), ((Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -140), 0, (("lib/cWarnings.mli", 108, 4146, 4148), ("lib/cWarnings.mli", 108, 4146, 4173), 0), 0, Tag1 ("CWarnings", 35)), 0); (("filesystem", 432), ((Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -139), 0, (("lib/cWarnings.mli", 109, 4174, 4176), ("lib/cWarnings.mli", 109, 4174, 4201), 0), 0, Tag1 ("CWarnings", 36)), 0); (("fixpoints", 433), ((Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -138), 0, (("lib/cWarnings.mli", 110, 4202, 4204), ("lib/cWarnings.mli", 110, 4202, 4228), 0), 0, Tag1 ("CWarnings", 37)), 0); (("fragile", 434), ((Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -137), 0, (("lib/cWarnings.mli", 111, 4229, 4231), ("lib/cWarnings.mli", 111, 4229, 4253), 0), 0, Tag1 ("CWarnings", 38)), 0); (("funind", 435), ((Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -136), 0, (("lib/cWarnings.mli", 112, 4254, 4256), ("lib/cWarnings.mli", 112, 4254, 4277), 0), 0, Tag1 ("CWarnings", 39)), 0); (("implicits", 436), ((Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -135), 0, (("lib/cWarnings.mli", 113, 4278, 4280), ("lib/cWarnings.mli", 113, 4278, 4304), 0), 0, Tag1 ("CWarnings", 40)), 0); (("ltac", 437), ((Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -134), 0, (("lib/cWarnings.mli", 114, 4305, 4307), ("lib/cWarnings.mli", 114, 4305, 4326), 0), 0, Tag1 ("CWarnings", 41)), 0); (("ltac2", 438), ((Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -133), 0, (("lib/cWarnings.mli", 115, 4327, 4329), ("lib/cWarnings.mli", 115, 4327, 4349), 0), 0, Tag1 ("CWarnings", 42)), 0); (("native_compiler", 439), ((Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -132), 0, (("lib/cWarnings.mli", 116, 4350, 4352), ("lib/cWarnings.mli", 116, 4350, 4382), 0), 0, Tag1 ("CWarnings", 43)), 0); (("numbers", 440), ((Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -131), 0, (("lib/cWarnings.mli", 117, 4383, 4385), ("lib/cWarnings.mli", 117, 4383, 4407), 0), 0, Tag1 ("CWarnings", 44)), 0); (("parsing", 441), ((Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -130), 0, (("lib/cWarnings.mli", 118, 4408, 4410), ("lib/cWarnings.mli", 118, 4408, 4432), 0), 0, Tag1 ("CWarnings", 45)), 0); (("pedantic", 442), ((Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -129), 0, (("lib/cWarnings.mli", 119, 4433, 4435), ("lib/cWarnings.mli", 119, 4433, 4458), 0), 0, Tag1 ("CWarnings", 46)), 0); (("records", 443), ((Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -128), 0, (("lib/cWarnings.mli", 120, 4459, 4461), ("lib/cWarnings.mli", 120, 4459, 4483), 0), 0, Tag1 ("CWarnings", 47)), 0); (("ssr", 444), ((Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -127), 0, (("lib/cWarnings.mli", 121, 4484, 4486), ("lib/cWarnings.mli", 121, 4484, 4504), 0), 0, Tag1 ("CWarnings", 48)), 0); (("syntax", 445), ((Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -126), 0, (("lib/cWarnings.mli", 122, 4505, 4507), ("lib/cWarnings.mli", 122, 4505, 4528), 0), 0, Tag1 ("CWarnings", 49)), 0); (("tactics", 446), ((Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -125), 0, (("lib/cWarnings.mli", 123, 4529, 4531), ("lib/cWarnings.mli", 123, 4529, 4553), 0), 0, Tag1 ("CWarnings", 50)), 0); (("vernacular", 447), ((Tag3 ((("category", 403)), 0, (0)), 100000000, 0, -124), 0, (("lib/cWarnings.mli", 124, 4554, 4556), ("lib/cWarnings.mli", 124, 4554, 4581), 0), 0, Tag1 ("CWarnings", 51)), 0)]), 0, (("lib/cWarnings.mli", 101, 3936, 3936), ("lib/cWarnings.mli", 126, 4583, 4586), 0), Tag1 ("CWarnings", 52)), 0, 0)], "CWarnings", [("CWarnings", ("\132\220\150\227\215\239t\217\132\220'JX\188\246c")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

  end
