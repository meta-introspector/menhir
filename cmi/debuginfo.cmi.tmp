module Scoped_location :
  sig
    type scopes
    val string_of_scopes : scopes -> string
    val empty_scopes : scopes
    val enter_anonymous_function : scopes:scopes -> scopes
    val enter_value_definition : scopes:scopes -> Ident.t -> scopes
    val enter_module_definition : scopes:scopes -> Ident.t -> scopes
    val enter_class_definition : scopes:scopes -> Ident.t -> scopes
    val enter_method_definition : scopes:scopes -> Asttypes.label -> scopes
    type t =
        Loc_unknown
      | Loc_known of { loc : Location.t; scopes : scopes; }
    val of_location : scopes:scopes -> Location.t -> t
    val to_location : t -> Location.t
    val string_of_scoped_location : t -> string
  end
type item = private {
  dinfo_file : string;
  dinfo_line : int;
  dinfo_char_start : int;
  dinfo_char_end : int;
  dinfo_start_bol : int;
  dinfo_end_bol : int;
  dinfo_end_line : int;
  dinfo_scopes : Scoped_location.scopes;
}
type t = item list
type alloc_dbginfo_item = { alloc_words : int; alloc_dbg : t; }
type alloc_dbginfo = alloc_dbginfo_item list
val none : t
val is_none : t -> bool
val to_string : t -> string
val from_location : Scoped_location.t -> t
val to_location : t -> Location.t
val inline : t -> t -> t
val compare : t -> t -> int
val hash : t -> int("DEBUG:rule", [Tag3 (("Scoped_location", 610), 0, (Tag1 ([Tag1 (("scopes", 624), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lambda/debuginfo.mli", 17, 1108, 1110), ("lambda/debuginfo.mli", 17, 1108, 1121), 0), 0, 0, 0, Tag1 ("Debuginfo", 0)), 1, 0); (("string_of_scopes", 625), ((Tag1 (0, (Tag3 ((("scopes", 624)), 0, (0)), 100000000, 0, -86), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -85), 0), 100000000, 0, -84), 0, (("lambda/debuginfo.mli", 18, 1122, 1124), ("lambda/debuginfo.mli", 18, 1122, 1163), 0), 0, Tag1 ("Debuginfo", 1)), 0); (("empty_scopes", 626), ((Tag3 ((("scopes", 624)), 0, (0)), 100000000, 0, -83), 0, (("lambda/debuginfo.mli", 20, 1165, 1167), ("lambda/debuginfo.mli", 20, 1165, 1192), 0), 0, Tag1 ("Debuginfo", 2)), 0); (("enter_anonymous_function", 627), ((Tag1 (("scopes"), (Tag3 ((("scopes", 624)), 0, (0)), 100000000, 0, -82), (Tag3 ((("scopes", 624)), 0, (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0, (("lambda/debuginfo.mli", 21, 1193, 1195), ("lambda/debuginfo.mli", 21, 1193, 1249), 0), 0, Tag1 ("Debuginfo", 3)), 0); (("enter_value_definition", 628), ((Tag1 (("scopes"), (Tag3 ((("scopes", 624)), 0, (0)), 100000000, 0, -79), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -78), (Tag3 ((("scopes", 624)), 0, (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0), 100000000, 0, -75), 0, (("lambda/debuginfo.mli", 22, 1250, 1252), ("lambda/debuginfo.mli", 22, 1250, 1315), 0), 0, Tag1 ("Debuginfo", 4)), 0); (("enter_module_definition", 629), ((Tag1 (("scopes"), (Tag3 ((("scopes", 624)), 0, (0)), 100000000, 0, -74), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -73), (Tag3 ((("scopes", 624)), 0, (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), 0, (("lambda/debuginfo.mli", 23, 1316, 1318), ("lambda/debuginfo.mli", 23, 1316, 1382), 0), 0, Tag1 ("Debuginfo", 5)), 0); (("enter_class_definition", 630), ((Tag1 (("scopes"), (Tag3 ((("scopes", 624)), 0, (0)), 100000000, 0, -69), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -68), (Tag3 ((("scopes", 624)), 0, (0)), 100000000, 0, -67), 0), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("lambda/debuginfo.mli", 24, 1383, 1385), ("lambda/debuginfo.mli", 24, 1383, 1448), 0), 0, Tag1 ("Debuginfo", 6)), 0); (("enter_method_definition", 631), ((Tag1 (("scopes"), (Tag3 ((("scopes", 624)), 0, (0)), 100000000, 0, -64), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "label"), 0, (0)), 100000000, 0, -63), (Tag3 ((("scopes", 624)), 0, (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("lambda/debuginfo.mli", 25, 1449, 1451), ("lambda/debuginfo.mli", 25, 1449, 1522), 0), 0, Tag1 ("Debuginfo", 7)), 0); Tag1 (("t", 632), (0, 0, Tag1 ([(("Loc_unknown", 330), (0), 0, (("lambda/debuginfo.mli", 28, 1535, 1539), ("lambda/debuginfo.mli", 28, 1535, 1552), 0), 0, Tag1 ("Debuginfo", 9)); (("Loc_known", 331), Tag1 ([(("loc", 398), 0, (Tag3 (Tag1 ((Tag2 ("Location")), "t"), 0, (0)), 100000000, 0, -58), (("lambda/debuginfo.mli", 30, 1572, 1582), ("lambda/debuginfo.mli", 30, 1572, 1599), 0), 0, Tag1 ("Debuginfo", 10)); (("scopes", 399), 0, (Tag3 ((("scopes", 624)), 0, (0)), 100000000, 0, -59), (("lambda/debuginfo.mli", 31, 1600, 1610), ("lambda/debuginfo.mli", 31, 1600, 1626), 0), 0, Tag1 ("Debuginfo", 11))]), 0, (("lambda/debuginfo.mli", 29, 1553, 1557), ("lambda/debuginfo.mli", 31, 1600, 1628), 0), 0, Tag1 ("Debuginfo", 12))], 0), 1, 0, 0, 0, 0, 0, (("lambda/debuginfo.mli", 27, 1524, 1526), ("lambda/debuginfo.mli", 31, 1600, 1628), 0), 0, 0, 0, Tag1 ("Debuginfo", 8)), 1, 0); (("of_location", 633), ((Tag1 (("scopes"), (Tag3 ((("scopes", 624)), 0, (0)), 100000000, 0, -57), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Location")), "t"), 0, (0)), 100000000, 0, -56), (Tag3 ((("t", 632)), 0, (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("lambda/debuginfo.mli", 33, 1630, 1632), ("lambda/debuginfo.mli", 33, 1630, 1682), 0), 0, Tag1 ("Debuginfo", 18)), 0); (("to_location", 634), ((Tag1 (0, (Tag3 ((("t", 632)), 0, (0)), 100000000, 0, -52), (Tag3 (Tag1 ((Tag2 ("Location")), "t"), 0, (0)), 100000000, 0, -51), 0), 100000000, 0, -50), 0, (("lambda/debuginfo.mli", 34, 1683, 1685), ("lambda/debuginfo.mli", 34, 1683, 1718), 0), 0, Tag1 ("Debuginfo", 19)), 0); (("string_of_scoped_location", 635), ((Tag1 (0, (Tag3 ((("t", 632)), 0, (0)), 100000000, 0, -49), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("lambda/debuginfo.mli", 35, 1719, 1721), ("lambda/debuginfo.mli", 35, 1719, 1764), 0), 0, Tag1 ("Debuginfo", 20)), 0)]), 0, (("lambda/debuginfo.mli", 16, 1079, 1079), ("lambda/debuginfo.mli", 36, 1765, 1768), 0), Tag1 ("Debuginfo", 21)), 0, 0); Tag1 (("item", 611), (0, 0, [[(("dinfo_file", 432), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -39), (("lambda/debuginfo.mli", 39, 1792, 1794), ("lambda/debuginfo.mli", 39, 1792, 1813), 0), 0, Tag1 ("Debuginfo", 24)); (("dinfo_line", 433), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -40), (("lambda/debuginfo.mli", 40, 1814, 1816), ("lambda/debuginfo.mli", 40, 1814, 1832), 0), 0, Tag1 ("Debuginfo", 25)); (("dinfo_char_start", 434), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -41), (("lambda/debuginfo.mli", 41, 1833, 1835), ("lambda/debuginfo.mli", 41, 1833, 1857), 0), 0, Tag1 ("Debuginfo", 26)); (("dinfo_char_end", 435), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -42), (("lambda/debuginfo.mli", 42, 1858, 1860), ("lambda/debuginfo.mli", 42, 1858, 1880), 0), 0, Tag1 ("Debuginfo", 27)); (("dinfo_start_bol", 436), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -43), (("lambda/debuginfo.mli", 43, 1881, 1883), ("lambda/debuginfo.mli", 43, 1881, 1904), 0), 0, Tag1 ("Debuginfo", 28)); (("dinfo_end_bol", 437), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -44), (("lambda/debuginfo.mli", 44, 1905, 1907), ("lambda/debuginfo.mli", 44, 1905, 1926), 0), 0, Tag1 ("Debuginfo", 29)); (("dinfo_end_line", 438), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -45), (("lambda/debuginfo.mli", 45, 1927, 1929), ("lambda/debuginfo.mli", 45, 1927, 1949), 0), 0, Tag1 ("Debuginfo", 30)); (("dinfo_scopes", 439), 0, (Tag3 (Tag1 ((("Scoped_location", 610)), "scopes"), 0, (0)), 100000000, 0, -46), (("lambda/debuginfo.mli", 46, 1950, 1952), ("lambda/debuginfo.mli", 46, 1950, 1989), 0), 0, Tag1 ("Debuginfo", 31))]], 0, 0, 0, 0, 0, 0, (("lambda/debuginfo.mli", 38, 1770, 1770), ("lambda/debuginfo.mli", 47, 1990, 1991), 0), 0, 0, 0, Tag1 ("Debuginfo", 22)), 1, 0); Tag1 (("t", 612), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("item", 611)), 0, (0)), 100000000, 0, -38)], (0)), 100000000, 0, -37)), 0, 0, 0, 0, (("lambda/debuginfo.mli", 49, 1993, 1993), ("lambda/debuginfo.mli", 49, 1993, 2011), 0), 0, 0, 0, Tag1 ("Debuginfo", 32)), 1, 0); Tag1 (("alloc_dbginfo_item", 613), (0, 0, [[(("alloc_words", 442), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -35), (("lambda/debuginfo.mli", 52, 2039, 2043), ("lambda/debuginfo.mli", 52, 2039, 2061), 0), 0, Tag1 ("Debuginfo", 34)); (("alloc_dbg", 443), 0, (Tag3 ((("t", 612)), 0, (0)), 100000000, 0, -36), (("lambda/debuginfo.mli", 53, 2062, 2066), ("lambda/debuginfo.mli", 53, 2062, 2079), 0), 0, Tag1 ("Debuginfo", 35))]], 1, 0, 0, 0, 0, 0, (("lambda/debuginfo.mli", 51, 2013, 2013), ("lambda/debuginfo.mli", 53, 2062, 2081), 0), 0, 0, 0, Tag1 ("Debuginfo", 33)), 1, 0); Tag1 (("alloc_dbginfo", 614), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("alloc_dbginfo_item", 613)), 0, (0)), 100000000, 0, -34)], (0)), 100000000, 0, -33)), 0, 0, 0, 0, (("lambda/debuginfo.mli", 60, 2447, 2447), ("lambda/debuginfo.mli", 60, 2447, 2491), 0), 0, 0, 0, Tag1 ("Debuginfo", 36)), 1, 0); (("none", 615), ((Tag3 ((("t", 612)), 0, (0)), 100000000, 0, -32), 0, (("lambda/debuginfo.mli", 62, 2493, 2493), ("lambda/debuginfo.mli", 62, 2493, 2505), 0), 0, Tag1 ("Debuginfo", 37)), 0); (("is_none", 616), ((Tag1 (0, (Tag3 ((("t", 612)), 0, (0)), 100000000, 0, -31), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("lambda/debuginfo.mli", 64, 2507, 2507), ("lambda/debuginfo.mli", 64, 2507, 2530), 0), 0, Tag1 ("Debuginfo", 38)), 0); (("to_string", 617), ((Tag1 (0, (Tag3 ((("t", 612)), 0, (0)), 100000000, 0, -28), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("lambda/debuginfo.mli", 66, 2532, 2532), ("lambda/debuginfo.mli", 66, 2532, 2559), 0), 0, Tag1 ("Debuginfo", 39)), 0); (("from_location", 618), ((Tag1 (0, (Tag3 (Tag1 ((("Scoped_location", 610)), "t"), 0, (0)), 100000000, 0, -25), (Tag3 ((("t", 612)), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("lambda/debuginfo.mli", 68, 2561, 2561), ("lambda/debuginfo.mli", 68, 2561, 2603), 0), 0, Tag1 ("Debuginfo", 40)), 0); (("to_location", 619), ((Tag1 (0, (Tag3 ((("t", 612)), 0, (0)), 100000000, 0, -22), (Tag3 (Tag1 ((Tag2 ("Location")), "t"), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("lambda/debuginfo.mli", 70, 2605, 2605), ("lambda/debuginfo.mli", 70, 2605, 2638), 0), 0, Tag1 ("Debuginfo", 41)), 0); (("inline", 620), ((Tag1 (0, (Tag3 ((("t", 612)), 0, (0)), 100000000, 0, -19), (Tag1 (0, (Tag3 ((("t", 612)), 0, (0)), 100000000, 0, -18), (Tag3 ((("t", 612)), 0, (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("lambda/debuginfo.mli", 72, 2640, 2640), ("lambda/debuginfo.mli", 72, 2640, 2664), 0), 0, Tag1 ("Debuginfo", 42)), 0); (("compare", 621), ((Tag1 (0, (Tag3 ((("t", 612)), 0, (0)), 100000000, 0, -14), (Tag1 (0, (Tag3 ((("t", 612)), 0, (0)), 100000000, 0, -13), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("lambda/debuginfo.mli", 74, 2666, 2666), ("lambda/debuginfo.mli", 74, 2666, 2693), 0), 0, Tag1 ("Debuginfo", 43)), 0); (("hash", 622), ((Tag1 (0, (Tag3 ((("t", 612)), 0, (0)), 100000000, 0, -9), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("lambda/debuginfo.mli", 76, 2695, 2695), ("lambda/debuginfo.mli", 76, 2695, 2714), 0), 0, Tag1 ("Debuginfo", 44)), 0); (("print_compact", 623), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((("t", 612)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("lambda/debuginfo.mli", 78, 2716, 2716), ("lambda/debuginfo.mli", 78, 2716, 2765), 0), 0, Tag1 ("Debuginfo", 45)), 0)], "Debuginfo", [("Debuginfo", ("\131\251\175\217P\194M\163\022\151\002\005\006\185:\185")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216"))], [(0)])

val print_compact : Format.formatter -> t -> unit
