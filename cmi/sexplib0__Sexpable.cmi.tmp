module type S =
  sig
    type t
    val t_of_sexp : Sexplib0__.Sexp.t -> t
    val sexp_of_t : t -> Sexplib0__.Sexp.t
  end
module type S1 =
  sig
    type 'a t
    val t_of_sexp : (Sexplib0__.Sexp.t -> 'a) -> Sexplib0__.Sexp.t -> 'a t
    val sexp_of_t : ('a -> Sexplib0__.Sexp.t) -> 'a t -> Sexplib0__.Sexp.t
  end
module type S2 =
  sig
    type ('a, 'b) t
    val t_of_sexp :
      (Sexplib0__.Sexp.t -> 'a) ->
      (Sexplib0__.Sexp.t -> 'b) -> Sexplib0__.Sexp.t -> ('a, 'b) t
    val sexp_of_t :
      ('a -> Sexplib0__.Sexp.t) ->
      ('b -> Sexplib0__.Sexp.t) -> ('a, 'b) t -> Sexplib0__.Sexp.t
  end
module type S3 =
  sig
    type ('a, 'b, 'c) t
    val t_of_sexp :
      (Sexplib0__.Sexp.t -> 'a) ->
      (Sexplib0__.Sexp.t -> 'b) ->
      (Sexplib0__.Sexp.t -> 'c) -> Sexplib0__.Sexp.t -> ('a, 'b, 'c) t
    val sexp_of_t :
      ('a -> Sexplib0__.Sexp.t) ->
      ('b -> Sexplib0__.Sexp.t) ->
      ('c -> Sexplib0__.Sexp.t) -> ('a, 'b, 'c) t -> Sexplib0__.Sexp.t("DEBUG:rule", [Tag4 (("S", 323), ((Tag1 ([Tag1 (("t", 327), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/sexpable.ml", 2, 20, 22), ("src/sexpable.ml", 2, 20, 28), 0), 0, 0, 0, Tag1 ("Sexplib0__Sexpable", 0)), 1, 0); (("t_of_sexp", 328), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -7), (Tag3 ((("t", 327)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("src/sexpable.ml", 4, 30, 32), ("src/sexpable.ml", 4, 30, 59), 0), 0, Tag1 ("Sexplib0__Sexpable", 1)), 0); (("sexp_of_t", 329), ((Tag1 (0, (Tag3 ((("t", 327)), 0, (0)), 100000000, 0, -4), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/sexpable.ml", 5, 60, 62), ("src/sexpable.ml", 5, 60, 89), 0), 0, Tag1 ("Sexplib0__Sexpable", 2)), 0)])), 0, (("src/sexpable.ml", 1, 0, 0), ("src/sexpable.ml", 6, 90, 93), 0), Tag1 ("Sexplib0__Sexpable", 3)), 0); Tag4 (("S1", 324), ((Tag1 ([Tag1 (("t", 330), ([((("a")), 100000000, 0, -22)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/sexpable.ml", 9, 116, 118), ("src/sexpable.ml", 9, 116, 127), 0), 0, 0, 0, Tag1 ("Sexplib0__Sexpable", 4)), 1, 0); (("t_of_sexp", 331), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -21), ((("a")), 100000000, 0, -18), 0), 100000000, 0, -20), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -19), (Tag3 ((("t", 330)), [((("a")), 100000000, 0, -18)], (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("src/sexpable.ml", 11, 129, 131), ("src/sexpable.ml", 11, 129, 179), 0), 0, Tag1 ("Sexplib0__Sexpable", 5)), 0); (("sexp_of_t", 332), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -12), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -14), 0), 100000000, 0, -13), (Tag1 (0, (Tag3 ((("t", 330)), [((("a")), 100000000, 0, -12)], (0)), 100000000, 0, -11), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("src/sexpable.ml", 12, 180, 182), ("src/sexpable.ml", 12, 180, 230), 0), 0, Tag1 ("Sexplib0__Sexpable", 6)), 0)])), 0, (("src/sexpable.ml", 8, 95, 95), ("src/sexpable.ml", 13, 231, 234), 0), Tag1 ("Sexplib0__Sexpable", 7)), 0); Tag4 (("S2", 325), ((Tag1 ([Tag1 (("t", 333), ([((("a")), 100000000, 0, -45); ((("b")), 100000000, 0, -46)], 2, 0, 1, 0, [7; 7], [2; 2], 0, 0, (("src/sexpable.ml", 16, 257, 259), ("src/sexpable.ml", 16, 257, 274), 0), 0, 0, 0, Tag1 ("Sexplib0__Sexpable", 8)), 1, 0); (("t_of_sexp", 334), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -44), ((("a")), 100000000, 0, -38), 0), 100000000, 0, -43), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -42), ((("b")), 100000000, 0, -39), 0), 100000000, 0, -41), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -40), (Tag3 ((("t", 333)), [((("a")), 100000000, 0, -38); ((("b")), 100000000, 0, -39)], (0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("src/sexpable.ml", 18, 276, 278), ("src/sexpable.ml", 18, 276, 350), 0), 0, Tag1 ("Sexplib0__Sexpable", 9)), 0); (("sexp_of_t", 335), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -28), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -29), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), (Tag1 (0, (Tag3 ((("t", 333)), [((("a")), 100000000, 0, -28); ((("b")), 100000000, 0, -29)], (0)), 100000000, 0, -27), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("src/sexpable.ml", 19, 351, 353), ("src/sexpable.ml", 19, 351, 425), 0), 0, Tag1 ("Sexplib0__Sexpable", 10)), 0)])), 0, (("src/sexpable.ml", 15, 236, 236), ("src/sexpable.ml", 20, 426, 429), 0), Tag1 ("Sexplib0__Sexpable", 11)), 0); Tag4 (("S3", 326), ((Tag1 ([Tag1 (("t", 336), ([((("a")), 100000000, 0, -77); ((("b")), 100000000, 0, -78); ((("c")), 100000000, 0, -79)], 3, 0, 1, 0, [7; 7; 7], [2; 2; 2], 0, 0, (("src/sexpable.ml", 23, 452, 454), ("src/sexpable.ml", 23, 452, 473), 0), 0, 0, 0, Tag1 ("Sexplib0__Sexpable", 12)), 1, 0); (("t_of_sexp", 337), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -76), ((("a")), 100000000, 0, -67), 0), 100000000, 0, -75), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -74), ((("b")), 100000000, 0, -68), 0), 100000000, 0, -73), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -72), ((("c")), 100000000, 0, -69), 0), 100000000, 0, -71), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -70), (Tag3 ((("t", 336)), [((("a")), 100000000, 0, -67); ((("b")), 100000000, 0, -68); ((("c")), 100000000, 0, -69)], (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0), 100000000, 0, -63), 0), 100000000, 0, -62), 0, (("src/sexpable.ml", 25, 475, 477), ("src/sexpable.ml", 30, 571, 592), 0), 0, Tag1 ("Sexplib0__Sexpable", 13)), 0); (("sexp_of_t", 338), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -53), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -61), 0), 100000000, 0, -60), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -54), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -59), 0), 100000000, 0, -58), (Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -55), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), (Tag1 (0, (Tag3 ((("t", 336)), [((("a")), 100000000, 0, -53); ((("b")), 100000000, 0, -54); ((("c")), 100000000, 0, -55)], (0)), 100000000, 0, -52), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -51), 0), 100000000, 0, -50), 0), 100000000, 0, -49), 0), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("src/sexpable.ml", 32, 594, 596), ("src/sexpable.ml", 37, 698, 711), 0), 0, Tag1 ("Sexplib0__Sexpable", 14)), 0)])), 0, (("src/sexpable.ml", 22, 431, 431), ("src/sexpable.ml", 38, 712, 715), 0), Tag1 ("Sexplib0__Sexpable", 15)), 0)], "Sexplib0__Sexpable", [("Sexplib0__Sexpable", ("\251${\207(\249/z\242\255\250^\141\156\210e")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

  end
