type 'a t
val make : ((int * int) * 'a) list -> 'a t("DEBUG:rule", [Tag1 (("t", 272), ([((("a")), 100000000, 0, -15)], 1, 0, 1, 0, [7], [2], 0, 0, (("clib/segmenttree.mli", 18, 949, 949), ("clib/segmenttree.mli", 18, 949, 958), 0), 0, 0, 0, Tag1 ("Segmenttree", 0)), 1, 0); (("make", 273), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -13); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -14)]), 100000000, 0, -12); ((("a")), 100000000, 0, -9)]), 100000000, 0, -11)], (0)), 100000000, 0, -10), (Tag3 ((("t", 272)), [((("a")), 100000000, 0, -9)], (0)), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("clib/segmenttree.mli", 24, 1190, 1190), ("clib/segmenttree.mli", 24, 1190, 1232), 0), 0, Tag1 ("Segmenttree", 1)), 0); (("lookup", 274), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((("t", 272)), [((("a")), 100000000, 0, -4)], (0)), 100000000, 0, -5), ((("a")), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("clib/segmenttree.mli", 28, 1346, 1346), ("clib/segmenttree.mli", 28, 1346, 1376), 0), 0, Tag1 ("Segmenttree", 2)), 0)], "Segmenttree", [("Segmenttree", ("3UG\b\177m\134\253H\199\219\178\214G\253G")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val lookup : int -> 'a t -> 'a
