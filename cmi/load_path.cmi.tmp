val add_dir : string -> unit
val remove_dir : string -> unit
val reset : unit -> unit
module Dir :
  sig
    type t
    val create : string -> t
    val path : t -> string
    val files : t -> string list
    val find : t -> string -> string option
    val find_uncap : t -> string -> string option
  end
type auto_include_callback =
    (Dir.t -> string -> string option) -> string -> string
val no_auto_include : auto_include_callback
val init : auto_include:auto_include_callback -> string list -> unit
val auto_include_otherlibs : (string -> unit) -> auto_include_callback
val get_paths : unit -> string list
val find : string -> string
val find_uncap : string -> string
val add : Dir.t -> unit
val append_dir : Dir.t -> unit
val prepend_dir : Dir.t -> unit("DEBUG:rule", [(("add_dir", 290), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -55), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("utils/load_path.mli", 25, 1341, 1341), ("utils/load_path.mli", 25, 1341, 1369), 0), 0, Tag1 ("Load_path", 0)), 0); (("remove_dir", 291), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -52), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -51), 0), 100000000, 0, -50), 0, (("utils/load_path.mli", 28, 1449, 1449), ("utils/load_path.mli", 28, 1449, 1480), 0), 0, Tag1 ("Load_path", 1)), 0); (("reset", 292), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -49), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("utils/load_path.mli", 31, 1527, 1527), ("utils/load_path.mli", 31, 1527, 1551), 0), 0, Tag1 ("Load_path", 2)), 0); Tag3 (("Dir", 293), 0, (Tag1 ([Tag1 (("t", 305), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("utils/load_path.mli", 35, 1600, 1602), ("utils/load_path.mli", 35, 1600, 1608), 0), 0, 0, 0, Tag1 ("Load_path", 3)), 1, 0); (("create", 306), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -77), (Tag3 ((("t", 305)), 0, (0)), 100000000, 0, -76), 0), 100000000, 0, -75), 0, (("utils/load_path.mli", 38, 1661, 1663), ("utils/load_path.mli", 38, 1661, 1687), 0), 0, Tag1 ("Load_path", 4)), 0); (("path", 307), ((Tag1 (0, (Tag3 ((("t", 305)), 0, (0)), 100000000, 0, -74), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -73), 0), 100000000, 0, -72), 0, (("utils/load_path.mli", 40, 1689, 1691), ("utils/load_path.mli", 40, 1689, 1713), 0), 0, Tag1 ("Load_path", 5)), 0); (("files", 308), ((Tag1 (0, (Tag3 ((("t", 305)), 0, (0)), 100000000, 0, -71), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -70)], (0)), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("utils/load_path.mli", 42, 1715, 1717), ("utils/load_path.mli", 42, 1715, 1745), 0), 0, Tag1 ("Load_path", 6)), 0); (("find", 309), ((Tag1 (0, (Tag3 ((("t", 305)), 0, (0)), 100000000, 0, -67), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -66), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -65)], (0)), 100000000, 0, -64), 0), 100000000, 0, -63), 0), 100000000, 0, -62), 0, (("utils/load_path.mli", 46, 1860, 1862), ("utils/load_path.mli", 46, 1860, 1901), 0), 0, Tag1 ("Load_path", 7)), 0); (("find_uncap", 310), ((Tag1 (0, (Tag3 ((("t", 305)), 0, (0)), 100000000, 0, -61), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -60), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -59)], (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("utils/load_path.mli", 49, 1966, 1968), ("utils/load_path.mli", 49, 1966, 2013), 0), 0, Tag1 ("Load_path", 8)), 0)]), 0, (("utils/load_path.mli", 34, 1583, 1583), ("utils/load_path.mli", 52, 2158, 2161), 0), Tag1 ("Load_path", 9)), 0, 0); Tag1 (("auto_include_callback", 294), (0, 0, 0, 1, ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((("Dir", 293)), "t"), 0, (0)), 100000000, 0, -46), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -45), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -44)], (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -40), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0), 100000000, 0, -37)), 0, 0, 0, 0, (("utils/load_path.mli", 54, 2163, 2163), ("utils/load_path.mli", 55, 2192, 2248), 0), 0, 0, 0, Tag1 ("Load_path", 10)), 1, 0); (("no_auto_include", 295), ((Tag3 ((("auto_include_callback", 294)), 0, (0)), 100000000, 0, -36), 0, (("utils/load_path.mli", 58, 2316, 2316), ("utils/load_path.mli", 58, 2316, 2359), 0), 0, Tag1 ("Load_path", 11)), 0); (("init", 296), ((Tag1 (("auto_include"), (Tag3 ((("auto_include_callback", 294)), 0, (0)), 100000000, 0, -35), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -34)], (0)), 100000000, 0, -33), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("utils/load_path.mli", 62, 2459, 2459), ("utils/load_path.mli", 62, 2459, 2527), 0), 0, Tag1 ("Load_path", 12)), 0); (("auto_include_otherlibs", 297), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -29), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), (Tag3 ((("auto_include_callback", 294)), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0, (("utils/load_path.mli", 65, 2603, 2603), ("utils/load_path.mli", 66, 2632, 2675), 0), 0, Tag1 ("Load_path", 13)), 0); (("get_paths", 298), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -24), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -23)], (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("utils/load_path.mli", 71, 2857, 2857), ("utils/load_path.mli", 71, 2857, 2892), 0), 0, Tag1 ("Load_path", 14)), 0); (("find", 299), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -20), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("utils/load_path.mli", 74, 2960, 2960), ("utils/load_path.mli", 74, 2960, 2987), 0), 0, Tag1 ("Load_path", 15)), 0); (("find_uncap", 300), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -17), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("utils/load_path.mli", 80, 3205, 3205), ("utils/load_path.mli", 80, 3205, 3238), 0), 0, Tag1 ("Load_path", 16)), 0); (("add", 301), ((Tag1 (0, (Tag3 (Tag1 ((("Dir", 293)), "t"), 0, (0)), 100000000, 0, -14), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("utils/load_path.mli", 84, 3378, 3378), ("utils/load_path.mli", 84, 3378, 3414), 0), [(("deprecated", (("utils/load_path.mli", 84, 3378, 3383), ("utils/load_path.mli", 84, 3378, 3393), 0)), (0), (("utils/load_path.mli", 84, 3378, 3381), ("utils/load_path.mli", 84, 3378, 3394), 0))], Tag1 ("Load_path", 17)), 0); (("append_dir", 302), ((Tag1 (0, (Tag3 (Tag1 ((("Dir", 293)), "t"), 0, (0)), 100000000, 0, -11), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("utils/load_path.mli", 87, 3450, 3450), ("utils/load_path.mli", 87, 3450, 3480), 0), 0, Tag1 ("Load_path", 18)), 0); (("prepend_dir", 303), ((Tag1 (0, (Tag3 (Tag1 ((("Dir", 293)), "t"), 0, (0)), 100000000, 0, -8), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -7), 0), 100000000, 0, -6), 0, (("utils/load_path.mli", 91, 3571, 3571), ("utils/load_path.mli", 91, 3571, 3602), 0), 0, Tag1 ("Load_path", 19)), 0); (("get", 304), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Dir", 293)), "t"), 0, (0)), 100000000, 0, -4)], (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("utils/load_path.mli", 95, 3697, 3697), ("utils/load_path.mli", 95, 3697, 3725), 0), 0, Tag1 ("Load_path", 20)), 0)], "Load_path", [("Load_path", ("\012@\228l\230\164S\172h\1726X\020\252o}")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val get : unit -> Dir.t list
