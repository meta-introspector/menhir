type 'a t = 'a Queue.t
exception Empty
val take_opt : 'a t -> 'a option
val peek_opt : 'a t -> 'a option
val to_seq : 'a t -> 'a Seq.t
val add_seq : 'a t -> 'a Seq.t -> unit
val of_seq : 'a Seq.t -> 'a t
val create : unit -> 'a t
val add : 'a -> 'a t -> unit
val push : 'a -> 'a t -> unit
val take : 'a t -> 'a
val pop : 'a t -> 'a
val peek : 'a t -> 'a
val top : 'a t -> 'a
val clear : 'a t -> unit
val copy : 'a t -> 'a t
val is_empty : 'a t -> bool
val length : 'a t -> int
val iter : ('a -> unit) -> 'a t -> unit
val fold : ('b -> 'a -> 'b) -> 'b -> 'a t -> 'b
("DEBUG:rule", [Tag1 (("t", 476), ([((("a")), 100000000, 0, -88)], 1, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Queue"), "t"), [((("a")), 100000000, 0, -88)], (0)), 100000000, 0, -87)), [15], [2], 0, 0, (("stdcompat__queue_s.mli", 3, 21, 21), ("stdcompat__queue_s.mli", 3, 21, 44), 0), 0, 0, 0, Tag1 ("Stdcompat__queue_s", 0)), 1, 0); Tag2 (("Empty", 477), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Stdcompat__queue_s", 1)), 2, 0); (("take_opt", 478), ((Tag1 (0, (Tag3 ((("t", 476)), [((("a")), 100000000, 0, -85)], (0)), 100000000, 0, -86), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -85)], (0)), 100000000, 0, -84), 0), 100000000, 0, -83), 0, (("stdcompat__queue_s.mli", 14, 155, 155), ("stdcompat__queue_s.mli", 14, 155, 187), 0), 0, Tag1 ("Stdcompat__queue_s", 2)), 0); (("peek_opt", 479), ((Tag1 (0, (Tag3 ((("t", 476)), [((("a")), 100000000, 0, -81)], (0)), 100000000, 0, -82), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -81)], (0)), 100000000, 0, -80), 0), 100000000, 0, -79), 0, (("stdcompat__queue_s.mli", 17, 244, 244), ("stdcompat__queue_s.mli", 17, 244, 276), 0), 0, Tag1 ("Stdcompat__queue_s", 3)), 0); (("to_seq", 480), ((Tag1 (0, (Tag3 ((("t", 476)), [((("a")), 100000000, 0, -77)], (0)), 100000000, 0, -78), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [((("a")), 100000000, 0, -77)], (0)), 100000000, 0, -76), 0), 100000000, 0, -75), 0, (("stdcompat__queue_s.mli", 21, 334, 334), ("stdcompat__queue_s.mli", 21, 334, 363), 0), 0, Tag1 ("Stdcompat__queue_s", 4)), 0); (("add_seq", 481), ((Tag1 (0, (Tag3 ((("t", 476)), [((("a")), 100000000, 0, -73)], (0)), 100000000, 0, -74), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [((("a")), 100000000, 0, -73)], (0)), 100000000, 0, -72), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -71), 0), 100000000, 0, -70), 0), 100000000, 0, -69), 0, (("stdcompat__queue_s.mli", 30, 467, 467), ("stdcompat__queue_s.mli", 30, 467, 505), 0), 0, Tag1 ("Stdcompat__queue_s", 5)), 0); (("of_seq", 482), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [((("a")), 100000000, 0, -67)], (0)), 100000000, 0, -68), (Tag3 ((("t", 476)), [((("a")), 100000000, 0, -67)], (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("stdcompat__queue_s.mli", 39, 627, 627), ("stdcompat__queue_s.mli", 39, 627, 656), 0), 0, Tag1 ("Stdcompat__queue_s", 6)), 0); (("create", 483), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -64), (Tag3 ((("t", 476)), [((("a")), 100000000, 0, -63)], (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("stdcompat__queue_s.mli", 47, 759, 759), ("stdcompat__queue_s.mli", 47, 759, 784), 0), 0, Tag1 ("Stdcompat__queue_s", 7)), 0); (("add", 484), ((Tag1 (0, ((("a")), 100000000, 0, -60), (Tag1 (0, (Tag3 ((("t", 476)), [((("a")), 100000000, 0, -60)], (0)), 100000000, 0, -59), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("stdcompat__queue_s.mli", 50, 819, 819), ("stdcompat__queue_s.mli", 50, 819, 847), 0), 0, Tag1 ("Stdcompat__queue_s", 8)), 0); (("push", 485), ((Tag1 (0, ((("a")), 100000000, 0, -55), (Tag1 (0, (Tag3 ((("t", 476)), [((("a")), 100000000, 0, -55)], (0)), 100000000, 0, -54), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("stdcompat__queue_s.mli", 53, 879, 879), ("stdcompat__queue_s.mli", 53, 879, 908), 0), 0, Tag1 ("Stdcompat__queue_s", 9)), 0); (("take", 486), ((Tag1 (0, (Tag3 ((("t", 476)), [((("a")), 100000000, 0, -49)], (0)), 100000000, 0, -50), ((("a")), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("stdcompat__queue_s.mli", 56, 941, 941), ("stdcompat__queue_s.mli", 56, 941, 962), 0), 0, Tag1 ("Stdcompat__queue_s", 10)), 0); (("pop", 487), ((Tag1 (0, (Tag3 ((("t", 476)), [((("a")), 100000000, 0, -46)], (0)), 100000000, 0, -47), ((("a")), 100000000, 0, -46), 0), 100000000, 0, -45), 0, (("stdcompat__queue_s.mli", 59, 995, 995), ("stdcompat__queue_s.mli", 59, 995, 1015), 0), 0, Tag1 ("Stdcompat__queue_s", 11)), 0); (("peek", 488), ((Tag1 (0, (Tag3 ((("t", 476)), [((("a")), 100000000, 0, -43)], (0)), 100000000, 0, -44), ((("a")), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("stdcompat__queue_s.mli", 62, 1047, 1047), ("stdcompat__queue_s.mli", 62, 1047, 1068), 0), 0, Tag1 ("Stdcompat__queue_s", 12)), 0); (("top", 489), ((Tag1 (0, (Tag3 ((("t", 476)), [((("a")), 100000000, 0, -40)], (0)), 100000000, 0, -41), ((("a")), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("stdcompat__queue_s.mli", 65, 1101, 1101), ("stdcompat__queue_s.mli", 65, 1101, 1121), 0), 0, Tag1 ("Stdcompat__queue_s", 13)), 0); (("clear", 490), ((Tag1 (0, (Tag3 ((("t", 476)), [((("a")), 100000000, 0, -38)], (0)), 100000000, 0, -37), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("stdcompat__queue_s.mli", 68, 1153, 1153), ("stdcompat__queue_s.mli", 68, 1153, 1177), 0), 0, Tag1 ("Stdcompat__queue_s", 14)), 0); (("copy", 491), ((Tag1 (0, (Tag3 ((("t", 476)), [((("a")), 100000000, 0, -33)], (0)), 100000000, 0, -34), (Tag3 ((("t", 476)), [((("a")), 100000000, 0, -33)], (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("stdcompat__queue_s.mli", 71, 1211, 1211), ("stdcompat__queue_s.mli", 71, 1211, 1234), 0), 0, Tag1 ("Stdcompat__queue_s", 15)), 0); (("is_empty", 492), ((Tag1 (0, (Tag3 ((("t", 476)), [((("a")), 100000000, 0, -30)], (0)), 100000000, 0, -29), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("stdcompat__queue_s.mli", 74, 1267, 1267), ("stdcompat__queue_s.mli", 74, 1267, 1294), 0), 0, Tag1 ("Stdcompat__queue_s", 16)), 0); (("length", 493), ((Tag1 (0, (Tag3 ((("t", 476)), [((("a")), 100000000, 0, -26)], (0)), 100000000, 0, -25), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("stdcompat__queue_s.mli", 77, 1331, 1331), ("stdcompat__queue_s.mli", 77, 1331, 1355), 0), 0, Tag1 ("Stdcompat__queue_s", 17)), 0); (("iter", 494), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -20), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), (Tag1 (0, (Tag3 ((("t", 476)), [((("a")), 100000000, 0, -20)], (0)), 100000000, 0, -19), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("stdcompat__queue_s.mli", 80, 1390, 1390), ("stdcompat__queue_s.mli", 80, 1390, 1429), 0), 0, Tag1 ("Stdcompat__queue_s", 18)), 0); (("fold", 495), ((Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -11), (Tag1 (0, ((("a")), 100000000, 0, -13), ((("b")), 100000000, 0, -11), 0), 100000000, 0, -15), 0), 100000000, 0, -14), (Tag1 (0, ((("b")), 100000000, 0, -11), (Tag1 (0, (Tag3 ((("t", 476)), [((("a")), 100000000, 0, -13)], (0)), 100000000, 0, -12), ((("b")), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("stdcompat__queue_s.mli", 84, 1463, 1463), ("stdcompat__queue_s.mli", 84, 1463, 1510), 0), 0, Tag1 ("Stdcompat__queue_s", 19)), 0); (("transfer", 496), ((Tag1 (0, (Tag3 ((("t", 476)), [((("a")), 100000000, 0, -6)], (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 ((("t", 476)), [((("a")), 100000000, 0, -6)], (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("stdcompat__queue_s.mli", 93, 1701, 1701), ("stdcompat__queue_s.mli", 93, 1701, 1736), 0), 0, Tag1 ("Stdcompat__queue_s", 20)), 0)], "Stdcompat__queue", [("Stdcompat__queue", ("\249\189\176\182\192\185\184\249K\190\017\025\026\196\r\245")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Queue", ("E\187(\001]E;(\021\n~\137\191\026\\\152")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stdcompat__queue_s", ("a\198,\179\133\003\137%T\028\b\149\146\205\251\204")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val transfer : 'a t -> 'a t -> unit
