module type TypeS = Traverse.TypeS
module type BinaryTypeS = sig type ('a, 'b) t end
val cast : ('a, 'b) Refl__.Desc.eq -> 'a -> 'b
val eq_symmetric : ('a, 'b) Refl__.Desc.eq -> ('b, 'a) Refl__.Desc.eq
val sub_gadt_functional :
  ('a, 'b) Refl__.Desc.sub_gadt ->
  ('a, 'c) Refl__.Desc.sub_gadt -> ('b, 'c) Refl__.Desc.eq
type 'types selection_of_choice =
    SelectionOfChoice : {
      index : ([ `Succ of 'index ], 'types, 'a, 'b) Refl__.Desc.selection;
      item : 'a;
    } -> 'types selection_of_choice
val equal_binary_choice :
  'cases Refl__.Desc.binary_choice ->
  'cases Refl__.Desc.binary_choice -> bool
val selection_of_choice :
  'types Refl__.Desc.choice -> 'types selection_of_choice
val variable_functional :
  ('index, 'arity, 'a, 'positive_a, 'direct_a) Refl__.Desc.variable ->
  ('index, 'arity, 'b, 'positive_b, 'direct_b) Refl__.Desc.variable ->
  ('a, 'b) Refl__.Desc.eq
type ('index, 'index') compare =
    LessThan
  | Equal of ('index, 'index') Refl__.Desc.eq
  | GreaterThan
val compare_length :
  ('count_a, 'types_a) Refl__.Desc.length ->
  ('count_b, 'types_b) Refl__.Desc.length -> ('count_a, 'count_b) compare
val compare_selection :
  ('index, 'sequence, 'head, 'tail) Refl__.Desc.selection ->
  ('index', 'sequence', 'head', 'tail') Refl__.Desc.selection ->
  ('index, 'index') compare
val int_of_selection :
  ?start:int ->
  ('index, 'sequence, 'head, 'tail) Refl__.Desc.selection -> int
val int_of_binary_selection :
  ?start:int ->
  ('index, 'sequence, 'head, 'tail) Refl__.Desc.binary_selection -> int
val selection_functional_tail :
  ('index, 'sequence, 'head, 'tail) Refl__.Desc.selection ->
  ('index, 'sequence, 'head', 'tail') Refl__.Desc.selection ->
  ('tail, 'tail') Refl__.Desc.eq
val selection_functional_head :
  ([ `Succ of 'index ], 'sequence, 'head, 'tail) Refl__.Desc.selection ->
  ([ `Succ of 'index ], 'sequence, 'head', 'tail') Refl__.Desc.selection ->
  ('head, 'head') Refl__.Desc.eq
val compare_binary_selection :
  ('index, 'sequence, 'head, 'tail) Refl__.Desc.binary_selection ->
  ('index', 'sequence', 'head', 'tail') Refl__.Desc.binary_selection ->
  ('index, 'index') compare
val binary_selection_functional_tail :
  ('index, 'sequence, 'head, 'tail) Refl__.Desc.binary_selection ->
  ('index, 'sequence, 'head', 'tail') Refl__.Desc.binary_selection ->
  ('tail, 'tail') Refl__.Desc.eq
val binary_selection_functional_head :
  ([ `Select of 'index ], 'sequence, 'head, 'tail)
  Refl__.Desc.binary_selection ->
  ([ `Select of 'index ], 'sequence, 'head', 'tail')
  Refl__.Desc.binary_selection -> ('head, 'head') Refl__.Desc.eq
val equal_variable :
  ('index_a, 'arity_a, 'a, 'positive_a, 'direct_a) Refl__.Desc.variable ->
  ('index_b, 'arity_b, 'b, 'positive_b, 'direct_b) Refl__.Desc.variable ->
  (('index_a, 'index_b) Refl__.Desc.eq, unit) result
val attributes_empty :
  ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h) Refl__.Desc.attributes
module type VectorS =
  sig
    module T : Refl__.Desc.UnaryTypeS
    type ('a, 'occurrence) item =
        None : ('b, [ `Absent ]) item
      | Some : 'a T.t -> ('a, 'c) item
    type ('sequence, 'occurrences) t =
        [] : (unit, unit) t
      | (::) : ('head, 'occurrence) item *
          ('tail, 'occurrences) t -> ('head * 'tail,
                                      'occurrence * 'occurrences)
                                     t
    val get :
      ('index, 'sequence, 'value, 'positive, 'occurrences)
      Refl__.Desc.variable -> ('sequence, 'occurrences) t -> 'value T.t
    val make_transfer :
      ('source, 'sub, 'arg) Refl__.Desc.transfer_arguments ->
      ('sequence, 'source) t ->
      (('sequence, 'arg) t, ('sub, [ `Absent ]) Refl__.Desc.eq) result
    type ('arity, 'rec_group, 'kinds) make = {
      f :
        'a 'structure 'ap 'an 'ad 'gadt.
          ('a, 'structure, 'arity, 'rec_group, 'kinds, 'ap, 'an, 'ad, 'gadt)
          Refl__.Desc.desc -> ('arity, 'ad) t -> 'a T.t;
    }
    val make :
      ('arity, 'rec_group, 'kinds) make ->
      ('types, 'structures, 'arity, 'rec_group, 'kinds, 'arguments, 'gadt)
      Refl__.Desc.vector ->
      ('positive, 'negative, 'direct, 'subpositive, 'subnegative, 'subdirect,
       'arguments)
      Refl__.Desc.transfer_skip ->
      ('arity, 'direct) t -> ('types, 'subdirect) t
    type 'presence any =
        None : [ `Absent ] any
      | Some : { item : 'a. 'a T.t; } -> 'b any
    val append :
      'presence any ->
      ('presence, 'directs) Refl__.Desc.presences ->
      ('count, 'directs) Refl__.Desc.length ->
      ('directs, 'direct, 'subdirect) Refl__.Desc.append ->
      ('count, 'types) Refl__.Desc.length ->
      ('types, 'arity, 'subarity) Refl__.Desc.append ->
      ('arity, 'direct) t -> ('subarity, 'subdirect) t
    val to_sequence :
      [ `Present ] any ->
      ('sequence, 'occurrences) t -> 'sequence Refl__.Desc.Sequence(T).t
  end
module Vector :
  functor (T : Refl__.Desc.UnaryTypeS) ->
    sig
      module T : sig type 'a t = 'a T.t end
      type ('a, 'occurrence) item =
          None : ('b, [ `Absent ]) item
        | Some : 'a T.t -> ('a, 'c) item
      type ('sequence, 'occurrences) t =
          [] : (unit, unit) t
        | (::) : ('head, 'occurrence) item *
            ('tail, 'occurrences) t -> ('head * 'tail,
                                        'occurrence * 'occurrences)
                                       t
      val get :
        ('index, 'sequence, 'value, 'positive, 'occurrences)
        Refl__.Desc.variable -> ('sequence, 'occurrences) t -> 'value T.t
      val make_transfer :
        ('source, 'sub, 'arg) Refl__.Desc.transfer_arguments ->
        ('sequence, 'source) t ->
        (('sequence, 'arg) t, ('sub, [ `Absent ]) Refl__.Desc.eq) result
      type ('arity, 'rec_group, 'kinds) make = {
        f :
          'a 'structure 'ap 'an 'ad 'gadt.
            ('a, 'structure, 'arity, 'rec_group, 'kinds, 'ap, 'an, 'ad,
             'gadt)
            Refl__.Desc.desc -> ('arity, 'ad) t -> 'a T.t;
      }
      val make :
        ('arity, 'rec_group, 'kinds) make ->
        ('types, 'structures, 'arity, 'rec_group, 'kinds, 'arguments, 'gadt)
        Refl__.Desc.vector ->
        ('positive, 'negative, 'direct, 'subpositive, 'subnegative,
         'subdirect, 'arguments)
        Refl__.Desc.transfer_skip ->
        ('arity, 'direct) t -> ('types, 'subdirect) t
      type 'presence any =
          None : [ `Absent ] any
        | Some : { item : 'a. 'a T.t; } -> 'b any
      val append :
        'presence any ->
        ('presence, 'directs) Refl__.Desc.presences ->
        ('count, 'directs) Refl__.Desc.length ->
        ('directs, 'direct, 'subdirect) Refl__.Desc.append ->
        ('count, 'types) Refl__.Desc.length ->
        ('types, 'arity, 'subarity) Refl__.Desc.append ->
        ('arity, 'direct) t -> ('subarity, 'subdirect) t
      val to_sequence :
        [ `Present ] any ->
        ('sequence, 'occurrences) t -> 'sequence Refl__.Desc.Sequence(T).t
    end
module BinaryVector :
  functor (T : BinaryTypeS) ->
    sig
      type ('a, 'b, 'occurrence) item =
          None : ('c, 'd, [ `Absent ]) item
        | Some : ('a, 'b) T.t -> ('a, 'b, 'e) item
      type ('a, 'b, 'occurrences) t =
          [] : (unit, unit, unit) t
        | (::) : ('head_a, 'head_b, 'occurrence) item *
            ('tail_a, 'tail_b, 'occurrences) t -> ('head_a * 'tail_a,
                                                   'head_b * 'tail_b,
                                                   'occurrence * 'occurrences)
                                                  t
      val get :
        ('index, 'a, 'value_a, 'positive, 'occurrences) Refl__.Desc.variable ->
        ('index, 'b, 'value_b, 'positive, 'occurrences) Refl__.Desc.variable ->
        ('a, 'b, 'occurrences) t -> ('value_a, 'value_b) T.t
      val make_transfer :
        ('source, 'sub, 'arg) Refl__.Desc.transfer_arguments ->
        ('a, 'b, 'source) t ->
        (('a, 'b, 'arg) t, ('sub, [ `Absent ]) Refl__.Desc.eq) result
      type ('arity_a, 'arity_b, 'rec_group, 'kinds, 'gadt_a, 'gadt_b) make = {
        f :
          'a 'b 'structure 'ap 'an 'ad.
            ('a, 'structure, 'arity_a, 'rec_group, 'kinds, 'ap, 'an, 'ad,
             'gadt_a)
            Refl__.Desc.desc ->
            ('b, 'structure, 'arity_b, 'rec_group, 'kinds, 'ap, 'an, 'ad,
             'gadt_b)
            Refl__.Desc.desc -> ('arity_a, 'arity_b, 'ad) t -> ('a, 'b) T.t;
      }
      val make_transfer_vector :
        ('arity_a, 'arity_b, 'rec_group, 'kinds, 'gadt_a, 'gadt_b) make ->
        ('types_a, 'structures, 'arity_a, 'rec_group, 'kinds, 'arguments,
         'gadt_a)
        Refl__.Desc.vector ->
        ('types_b, 'structures, 'arity_b, 'rec_group, 'kinds, 'arguments,
         'gadt_b)
        Refl__.Desc.vector ->
        ('positive, 'negative, 'direct, 'subpositive, 'subnegative,
         'subdirect, 'arguments)
        Refl__.Desc.transfer ->
        ('arity_a, 'arity_b, 'direct) t -> ('types_a, 'types_b, 'subdirect) t
      val skip :
        ('variables, 'skip_variables) Refl__.Desc.skip_vector ->
        ('a, 'b, 'variables) t -> ('a, 'b, 'skip_variables) t
      val make :
        ('a, 'b, 'c, 'd, 'e, 'f) make ->
        ('g, 'h, 'a, 'c, 'd, 'i, 'e) Refl__.Desc.vector ->
        ('j, 'h, 'b, 'c, 'd, 'i, 'f) Refl__.Desc.vector ->
        ('k, 'l, 'm, 'n, 'o, 'p, 'i) Refl__.Desc.transfer_skip ->
        ('a, 'b, 'm) t -> ('g, 'j, 'p) t
      type 'presence any =
          None : [ `Absent ] any
        | Some : { item : 'a 'b. ('a, 'b) T.t; } -> 'c any
      val append :
        'presence any ->
        ('presence, 'directs) Refl__.Desc.presences ->
        ('count, 'directs) Refl__.Desc.length ->
        ('directs, 'direct, 'subdirect) Refl__.Desc.append ->
        ('count, 'types_a) Refl__.Desc.length ->
        ('types_a, 'a, 'sub_a) Refl__.Desc.append ->
        ('count, 'types_b) Refl__.Desc.length ->
        ('types_b, 'b, 'sub_b) Refl__.Desc.append ->
        ('a, 'b, 'direct) t -> ('sub_a, 'sub_b, 'subdirect) t
    end
module ParameterizedVector :
  functor (T : BinaryTypeS) ->
    sig
      type ('a, 'b, 'occurrence) item =
          None : ('c, 'd, [ `Absent ]) item
        | Some : ('a, 'b) T.t -> ('a, 'b, 'e) item
      type ('sequence, 'b, 'occurrences) t =
          [] : (unit, 'a, unit) t
        | (::) : ('head, 'b, 'occurrence) item *
            ('tail, 'b, 'occurrences) t -> ('head * 'tail, 'b,
                                            'occurrence * 'occurrences)
                                           t
      module Unary :
        functor (U : TypeS) ->
          sig
            module Item : sig type 'a t = ('a, U.t) T.t end
            module Unary :
              sig
                module T : sig type 'a t = 'a Item.t end
                type ('a, 'occurrence) item =
                  ('a, 'occurrence) Vector(Item).item =
                    None : ('b, [ `Absent ]) item
                  | Some : 'a T.t -> ('a, 'c) item
                type ('sequence, 'occurrences) t =
                  ('sequence, 'occurrences) Vector(Item).t =
                    [] : (unit, unit) t
                  | (::) : ('head, 'occurrence) item *
                      ('tail, 'occurrences) t -> ('head * 'tail,
                                                  'occurrence * 'occurrences)
                                                 t
                val get :
                  ('index, 'sequence, 'value, 'positive, 'occurrences)
                  Refl__.Desc.variable ->
                  ('sequence, 'occurrences) t -> 'value T.t
                val make_transfer :
                  ('source, 'sub, 'arg) Refl__.Desc.transfer_arguments ->
                  ('sequence, 'source) t ->
                  (('sequence, 'arg) t, ('sub, [ `Absent ]) Refl__.Desc.eq)
                  result
                type ('arity, 'rec_group, 'kinds) make =
                  ('arity, 'rec_group, 'kinds) Vector(Item).make = {
                  f :
                    'a 'structure 'ap 'an 'ad 'gadt.
                      ('a, 'structure, 'arity, 'rec_group, 'kinds, 'ap, 'an,
                       'ad, 'gadt)
                      Refl__.Desc.desc -> ('arity, 'ad) t -> 'a T.t;
                }
                val make :
                  ('arity, 'rec_group, 'kinds) make ->
                  ('types, 'structures, 'arity, 'rec_group, 'kinds,
                   'arguments, 'gadt)
                  Refl__.Desc.vector ->
                  ('positive, 'negative, 'direct, 'subpositive, 'subnegative,
                   'subdirect, 'arguments)
                  Refl__.Desc.transfer_skip ->
                  ('arity, 'direct) t -> ('types, 'subdirect) t
                type 'presence any =
                  'presence Vector(Item).any =
                    None : [ `Absent ] any
                  | Some : { item : 'a. 'a T.t; } -> 'b any
                val append :
                  'presence any ->
                  ('presence, 'directs) Refl__.Desc.presences ->
                  ('count, 'directs) Refl__.Desc.length ->
                  ('directs, 'direct, 'subdirect) Refl__.Desc.append ->
                  ('count, 'types) Refl__.Desc.length ->
                  ('types, 'arity, 'subarity) Refl__.Desc.append ->
                  ('arity, 'direct) t -> ('subarity, 'subdirect) t
                val to_sequence :
                  [ `Present ] any ->
                  ('sequence, 'occurrences) t ->
                  'sequence Refl__.Desc.Sequence(T).t
              end
            val to_unary :
              ('sequence, U.t, 'occurrences) t ->
              ('sequence, 'occurrences) Unary.t
            module T = Unary.T
            type ('a, 'occurrence) item =
              ('a, 'occurrence) Vector(Item).item =
                None : ('b, [ `Absent ]) item
              | Some : 'a T.t -> ('a, 'c) item
            type ('sequence, 'occurrences) t =
              ('sequence, 'occurrences) Vector(Item).t =
                [] : (unit, unit) t
              | (::) : ('head, 'occurrence) item *
                  ('tail, 'occurrences) t -> ('head * 'tail,
                                              'occurrence * 'occurrences)
                                             t
            val get :
              ('index, 'sequence, 'value, 'positive, 'occurrences)
              Refl__.Desc.variable ->
              ('sequence, 'occurrences) t -> 'value T.t
            val make_transfer :
              ('source, 'sub, 'arg) Refl__.Desc.transfer_arguments ->
              ('sequence, 'source) t ->
              (('sequence, 'arg) t, ('sub, [ `Absent ]) Refl__.Desc.eq)
              result
            type ('arity, 'rec_group, 'kinds) make =
              ('arity, 'rec_group, 'kinds) Vector(Item).make = {
              f :
                'a 'structure 'ap 'an 'ad 'gadt.
                  ('a, 'structure, 'arity, 'rec_group, 'kinds, 'ap, 'an, 'ad,
                   'gadt)
                  Refl__.Desc.desc -> ('arity, 'ad) t -> 'a T.t;
            }
            val make :
              ('arity, 'rec_group, 'kinds) make ->
              ('types, 'structures, 'arity, 'rec_group, 'kinds, 'arguments,
               'gadt)
              Refl__.Desc.vector ->
              ('positive, 'negative, 'direct, 'subpositive, 'subnegative,
               'subdirect, 'arguments)
              Refl__.Desc.transfer_skip ->
              ('arity, 'direct) t -> ('types, 'subdirect) t
            type 'presence any =
              'presence Vector(Item).any =
                None : [ `Absent ] any
              | Some : { item : 'a. 'a T.t; } -> 'b any
            val append :
              'presence any ->
              ('presence, 'directs) Refl__.Desc.presences ->
              ('count, 'directs) Refl__.Desc.length ->
              ('directs, 'direct, 'subdirect) Refl__.Desc.append ->
              ('count, 'types) Refl__.Desc.length ->
              ('types, 'arity, 'subarity) Refl__.Desc.append ->
              ('arity, 'direct) t -> ('subarity, 'subdirect) t
            val to_sequence :
              [ `Present ] any ->
              ('sequence, 'occurrences) t ->
              'sequence Refl__.Desc.Sequence(T).t
          end
    end
module SignedVector :
  functor (T : BinaryTypeS) ->
    sig
      type ('a, 'b, 'positive, 'negative) item =
          None : ('a, 'b, [ `Absent ], [ `Absent ]) item
        | P : ('a, 'b) T.t -> ('a, 'b, 'c, [ `Absent ]) item
        | N : ('b, 'a) T.t -> ('a, 'b, [ `Absent ], 'd) item
        | PN : (('a, 'b) T.t * ('b, 'a) T.t) -> ('a, 'b, 'e, 'f) item
      type ('a, 'b, 'positive, 'negative) t =
          [] : (unit, unit, unit, unit) t
        | (::) : ('a, 'b, 'positive, 'negative) item *
            ('aa, 'bb, 'positive_tail, 'negative_tail) t -> ('a * 'aa,
                                                             'b * 'bb,
                                                             'positive *
                                                             'positive_tail,
                                                             'negative *
                                                             'negative_tail)
                                                            t
      val reverse_item :
        ('a, 'b, 'positive, 'negative) item ->
        ('b, 'a, 'negative, 'positive) item
      val pos : ('a, 'b, [ `Present ], 'negative) item -> ('a, 'b) T.t
      val get :
        ('index, 'a, 'a_value, 'positive, 'direct) Refl__.Desc.variable ->
        ('index, 'b, 'b_value, 'positive, 'direct) Refl__.Desc.variable ->
        ('a, 'b, 'positive, 'negative) t -> ('a_value, 'b_value) T.t
      val reverse :
        ('a, 'b, 'positive, 'negative) t -> ('b, 'a, 'negative, 'positive) t
      type ('a, 'b, 'positive, 'negative) symmetric_item =
          SNone : ('a, 'b, [ `Absent ], [ `Absent ]) symmetric_item
        | SPN :
            (('a, 'b) T.t * ('b, 'a) T.t) -> ('a, 'b, 'c, 'd) symmetric_item
      type ('a, 'b, 'positive, 'negative) symmetric =
          [] : (unit, unit, unit, unit) symmetric
        | (::) : ('a, 'b, 'positive, 'negative) symmetric_item *
            ('aa, 'bb, 'positive_tail, 'negative_tail) symmetric -> ('a * 'aa,
                                                                    'b * 'bb,
                                                                    'positive *
                                                                    'positive_tail,
                                                                    'negative *
                                                                    'negative_tail)
                                                                    symmetric
      type ('a, 'b, 'sp, 'sn, 'ap, 'an) make_transfer =
          TNone : ('a, 'b, [ `Absent ], [ `Absent ], 'ap, 'an) make_transfer
        | TP :
            ('a, 'b, 'ap, 'an) t -> ('a, 'b, 'c, [ `Absent ], 'ap, 'an)
                                    make_transfer
        | TN :
            ('a, 'b, 'an, 'ap) t -> ('a, 'b, [ `Absent ], 'd, 'ap, 'an)
                                    make_transfer
        | TPN :
            ('a, 'b, 'an, 'ap) symmetric -> ('a, 'b, 'e, 'f, 'an, 'ap)
                                            make_transfer
      val reverse_of_symmetric :
        ('a, 'b, 'positive, 'negative) symmetric ->
        ('a, 'b, 'negative, 'positive) symmetric
      val p_of_symmetric :
        ('a, 'b, 'ap, 'an) symmetric -> ('a, 'b, 'ap, 'an) t
      val n_of_symmetric :
        ('a, 'b, 'ap, 'an) symmetric -> ('a, 'b, 'an, 'ap) t
      val make_transfer :
        ('p, 'n, 'sp, 'sn, 'ap, 'an) Refl__.Desc.transfer_matrix ->
        ('a, 'b, 'p, 'n) t -> ('a, 'b, 'sp, 'sn, 'ap, 'an) make_transfer
      type ('rec_group, 'a_kinds, 'b_kinds) make = {
        f :
          'a 'b 'structure 'a_arity 'b_arity 'ap 'an 'ad 'gadt.
            ('a, 'structure, 'a_arity, 'rec_group, 'a_kinds, 'ap, 'an, 'ad,
             'gadt)
            Refl__.Desc.desc ->
            ('b, 'structure, 'b_arity, 'rec_group, 'b_kinds, 'ap, 'an, 'ad,
             'gadt)
            Refl__.Desc.desc ->
            ('a_arity, 'b_arity, 'ap, 'an) t -> ('a, 'b) T.t;
      }
      val make_transfer_vector :
        ('rec_group, 'a_kinds, 'a_kinds) make ->
        ('a_types, 'structures, 'a_arity, 'rec_group, 'a_kinds, 'arguments,
         'gadt)
        Refl__.Desc.vector ->
        ('b_types, 'structures, 'b_arity, 'rec_group, 'a_kinds, 'arguments,
         'gadt)
        Refl__.Desc.vector ->
        ('positive, 'negative, 'direct, 'subpositive, 'subnegative,
         'subdirect, 'arguments)
        Refl__.Desc.transfer ->
        ('a_arity, 'b_arity, 'positive, 'negative) t ->
        ('a_types, 'b_types, 'subpositive, 'subnegative) t
      val skip :
        ('positive, 'skip_positive) Refl__.Desc.skip_vector ->
        ('negative, 'skip_negative) Refl__.Desc.skip_vector ->
        ('a, 'b, 'positive, 'negative) t ->
        ('a, 'b, 'skip_positive, 'skip_negative) t
      val make :
        ('a, 'b, 'b) make ->
        ('c, 'd, 'e, 'a, 'b, 'f, 'g) Refl__.Desc.vector ->
        ('h, 'd, 'i, 'a, 'b, 'f, 'g) Refl__.Desc.vector ->
        ('j, 'k, 'l, 'm, 'n, 'o, 'f) Refl__.Desc.transfer_skip ->
        ('e, 'i, 'j, 'k) t -> ('c, 'h, 'm, 'n) t
    end
module type Desc_type =
  sig
    type ('a, 'structure, 'arity, 'rec_group, 'kinds, 'positive, 'negative,
          'direct, 'gadt)
         t
  end
module Desc_vector :
  functor (T : Desc_type) ->
    sig
      type ('sequence, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
            'negative, 'direct, 'gadts)
           t =
          [] :
            (unit, 'structure, unit, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadts)
            t
        | (::) :
            ('head, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadt)
            T.t *
            ('tail, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadts)
            t -> ('head * 'tail, 'structure, 'arity * 'arities, 'rec_group,
                  'kinds, 'positive, 'negative, 'direct, 'gadt * 'gadts)
                 t
    end
module Section :
  sig
    type ('index, 'sequences, 'sequence, 'subsequences) t =
        [] : ('a, unit, unit, unit) t
      | (::) : ('index, 'head, 'item, 'first) Refl__.Desc.selection *
          ('index, 'tail, 'items, 'others) t -> ('index, 'head * 'tail,
                                                 'item * 'items,
                                                 'first * 'others)
                                                t
    type ('index, 'sequences, 'subsequences) some =
        Some :
          ('index, 'sequences, 'sequence, 'subsequences) t -> ('index,
                                                               'sequences,
                                                               'subsequences)
                                                              some
  end
type ('a_arity, 'b_arity, 'rec_group, 'kinds_a, 'kinds_b, 'positive,
      'negative, 'direct, 'gadt)
     map = {
  f :
    'a 'b 'structure.
      ('a, 'structure, 'a_arity, 'rec_group, 'kinds_a, 'positive, 'negative,
       'direct, 'gadt)
      Refl__.Desc.desc ->
      ('b, 'structure, 'b_arity, 'rec_group, 'kinds_b, 'positive, 'negative,
       'direct, 'gadt)
      Refl__.Desc.desc -> 'a -> 'b;
}
module type Mapper =
  sig
    type positive
    type negative
    type rec_group
    type gadt
    type a_arity
    type b_arity
    type ('a_arity, 'b_arity, 'positive, 'negative) t
    val initial : (a_arity, b_arity, positive, negative) t
    val grow :
      ('a_arity, 'b_arity, 'positive, 'negative) t ->
      ('a * 'a_arity, 'a * 'b_arity, 'b * 'positive, 'c * 'negative) t
    val map :
      ('a_arity, 'b_arity, 'positive, 'negative) t ->
      ('a, 'structure, 'a_arity, rec_group, 'kinds, 'positive, 'negative,
       'direct, gadt)
      Refl__.Desc.desc ->
      ('b, 'structure, 'b_arity, rec_group, 'kinds, 'positive, 'negative,
       'direct, gadt)
      Refl__.Desc.desc -> 'a -> 'b
  end
type 'count map_length =
    MapLength : { length : ('count, 'a) Refl__.Desc.length;
    } -> 'count map_length
type ('types, 'tail) make_append =
    MakeAppend :
      ('types, 'tail, 'append) Refl__.Desc.append -> ('types, 'tail)
                                                     make_append
val make_append :
  ('count, 'types) Refl__.Desc.length -> ('types, 'tail) make_append
module MapperTools :
  functor (M : Mapper) ->
    sig
      type ('types, 'arity_a, 'arity_b, 'subpositive, 'subnegative)
           make_variables =
          MakeVariables : {
            subarity_a : ('types, 'arity_a, 'subarity_a) Refl__.Desc.append;
            subarity_b : ('types, 'arity_b, 'subarity_b) Refl__.Desc.append;
            mapper :
              ('subarity_a, 'subarity_b, 'subpositive, 'subnegative) M.t;
          } -> ('types, 'arity_a, 'arity_b, 'subpositive, 'subnegative)
               make_variables
      val make_variables_aux :
        ('count, 'types) Refl__.Desc.length ->
        ('count, 'positives) Refl__.Desc.length ->
        ('positives, 'positive, 'subpositive) Refl__.Desc.append ->
        ('count, 'negatives) Refl__.Desc.length ->
        ('negatives, 'negative, 'subnegative) Refl__.Desc.append ->
        ('arity_a, 'arity_b, 'positive, 'negative) M.t ->
        ('types, 'arity_a, 'arity_b, 'subpositive, 'subnegative)
        make_variables
      val make_variables :
        ('a, 'b) Refl__.Desc.length ->
        ('a, 'c, 'd, 'e, 'f, 'g, 'h, 'i, 'j, 'k, 'l) Refl__.Desc.subvariables ->
        ('m, 'n, 'd, 'e) M.t -> ('b, 'm, 'n, 'j, 'k) make_variables
    end
val append_functional :
  ('prefix, 'suffix, 'result1) Refl__.Desc.append ->
  ('prefix, 'suffix, 'result2) Refl__.Desc.append ->
  ('result1, 'result2) Refl__.Desc.eq
module Tuple :
  sig
    module Tuple :
      sig
        type ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
              'negative, 'direct, 'gadt)
             structure =
            [] :
              (unit, unit, 'arity, 'rec_group, 'kinds, 'positive, 'negative,
               'direct, 'gadt)
              structure
          | (::) :
              ('a, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
               'negative, 'direct, 'gadt)
              Refl__.Desc.desc *
              ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
               'negative, 'direct, 'gadt)
              structure -> ('a * 'types, 'structure * 'structures, 'arity,
                            'rec_group, 'kinds, 'positive, 'negative,
                            'direct, 'gadt)
                           structure
        val of_desc :
          ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
           'negative, 'direct, 'gadt)
          Refl__.Desc.tuple_structure ->
          ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
           'negative, 'direct, 'gadt)
          structure
        type ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
              'negative, 'direct, 'gadt)
             t = {
          structure :
            ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadt)
            structure;
          values : 'types;
        }
      end
    type ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
          'negative, 'direct, 'gadt)
         structure =
      ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive, 'negative,
       'direct, 'gadt)
      Tuple.structure =
        [] :
          (unit, unit, 'arity, 'rec_group, 'kinds, 'positive, 'negative,
           'direct, 'gadt)
          structure
      | (::) :
          ('a, 'structure, 'arity, 'rec_group, 'kinds, 'positive, 'negative,
           'direct, 'gadt)
          Refl__.Desc.desc *
          ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
           'negative, 'direct, 'gadt)
          structure -> ('a * 'types, 'structure * 'structures, 'arity,
                        'rec_group, 'kinds, 'positive, 'negative, 'direct,
                        'gadt)
                       structure
    val of_desc :
      ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive, 'negative,
       'direct, 'gadt)
      Refl__.Desc.tuple_structure ->
      ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive, 'negative,
       'direct, 'gadt)
      structure
    type ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
          'negative, 'direct, 'gadt)
         t =
      ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive, 'negative,
       'direct, 'gadt)
      Tuple.t = {
      structure :
        ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
         'negative, 'direct, 'gadt)
        structure;
      values : 'types;
    }
    module Item :
      sig
        type ('a, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
              'negative, 'direct, 'gadt)
             t = {
          desc :
            ('a, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadt)
            Refl__.Desc.desc;
          value : 'a;
        }
      end
    val map :
      ('a_arity, 'b_arity, 'rec_group, 'kinds_a, 'kinds_b, 'positive,
       'negative, 'direct, 'gadt)
      map ->
      ('a_types, 'structures, 'a_arity, 'rec_group, 'kinds_a, 'positive,
       'negative, 'direct, 'gadt)
      Refl__.Desc.tuple_structure ->
      ('b_types, 'structures, 'b_arity, 'rec_group, 'kinds_b, 'positive,
       'negative, 'direct, 'gadt)
      Refl__.Desc.tuple_structure -> 'a_types -> 'b_types
    type ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
          'negative, 'direct, 'gadt)
         fold =
        Fold : {
          index : ([ `Succ of 'index ], 'types, 'a, 'b) Refl__.Desc.selection;
          index_structure :
            ([ `Succ of 'index ], 'structures, 'structure, 'c)
            Refl__.Desc.selection;
          desc :
            ('a, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadt)
            Refl__.Desc.desc;
          value : 'a;
        } -> ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
              'negative, 'direct, 'gadt)
             fold
    val fold :
      (('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
        'negative, 'direct, 'gadt)
       fold -> 'acc -> 'acc) ->
      ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive, 'negative,
       'direct, 'gadt)
      t -> 'acc -> 'acc
    module Items :
      sig
        type ('sequence, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
              'negative, 'direct, 'gadts)
             t =
          ('sequence, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
           'negative, 'direct, 'gadts)
          Desc_vector(Item).t =
            [] :
              (unit, 'structure, unit, 'rec_group, 'kinds, 'positive,
               'negative, 'direct, 'gadts)
              t
          | (::) :
              ('head, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
               'negative, 'direct, 'gadt)
              Item.t *
              ('tail, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
               'negative, 'direct, 'gadts)
              t -> ('head * 'tail, 'structure, 'arity * 'arities, 'rec_group,
                    'kinds, 'positive, 'negative, 'direct, 'gadt * 'gadts)
                   t
      end
    module Tuples :
      sig
        type ('sequence, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
              'negative, 'direct, 'gadts)
             t =
          ('sequence, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
           'negative, 'direct, 'gadts)
          Desc_vector(Tuple).t =
            [] :
              (unit, 'structure, unit, 'rec_group, 'kinds, 'positive,
               'negative, 'direct, 'gadts)
              t
          | (::) :
              ('head, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
               'negative, 'direct, 'gadt)
              Tuple.t *
              ('tail, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
               'negative, 'direct, 'gadts)
              t -> ('head * 'tail, 'structure, 'arity * 'arities, 'rec_group,
                    'kinds, 'positive, 'negative, 'direct, 'gadt * 'gadts)
                   t
      end
    type ('index, 'structure, 'structures, 'arities, 'tuples, 'rec_group,
          'kinds, 'positive, 'negative, 'direct, 'gadts)
         structure_find =
        Structure_find : {
          section :
            ([ `Succ of 'index ], 'tuples, 'section, 'others) Section.t;
          items :
            ('section, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadts)
            Items.t;
          others :
            ('others, 'structures, 'arities, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadts)
            Tuples.t;
        } -> ('index, 'structure, 'structures, 'arities, 'tuples, 'rec_group,
              'kinds, 'positive, 'negative, 'direct, 'gadts)
             structure_find
    type ('tuples, 'structures, 'arities, 'rec_group, 'kinds, 'positive,
          'negative, 'direct, 'gadts)
         find =
        Find : {
          index :
            ([ `Succ of 'index ], 'structures, 'structure, 'a)
            Refl__.Desc.selection;
          section : ([ `Succ of 'index ], 'tuples, 'section, 'b) Section.t;
          items :
            ('section, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadts)
            Items.t;
        } -> ('tuples, 'structures, 'arities, 'rec_group, 'kinds, 'positive,
              'negative, 'direct, 'gadts)
             find
    val find :
      ('tuple * 'tuples, 'structures, 'arities, 'rec_group, 'kinds,
       'positive, 'negative, 'direct, 'gadts)
      Tuples.t ->
      (('tuple * 'tuples, 'structures, 'arities, 'rec_group, 'kinds,
        'positive, 'negative, 'direct, 'gadts)
       find -> 'a option) ->
      'a option
  end
module Record :
  sig
    module Record :
      sig
        type ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
              'negative, 'direct, 'gadt)
             t = {
          structure :
            ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadt)
            Refl__.Desc.record_structure;
          values : 'types;
        }
      end
    module Field :
      sig
        type ('a, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
              'negative, 'direct, 'gadt)
             t = {
          field :
            ('a, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadt)
            Refl__.Desc.record_field;
          value : 'a;
        }
      end
    type ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
          'negative, 'direct, 'gadt)
         t =
      ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive, 'negative,
       'direct, 'gadt)
      Record.t = {
      structure :
        ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
         'negative, 'direct, 'gadt)
        Refl__.Desc.record_structure;
      values : 'types;
    }
    val map :
      ('a_arity, 'b_arity, 'rec_group, [> `Poly of unit ] as 'a, 'kinds_b,
       'positive, 'negative, 'direct, 'gadt)
      map ->
      ('a_types, 'structures, 'a_arity, 'rec_group, 'a, 'positive, 'negative,
       'direct, 'gadt)
      Refl__.Desc.record_structure ->
      ('b_types, 'structures, 'b_arity, 'rec_group, 'kinds_b, 'positive,
       'negative, 'direct, 'gadt)
      Refl__.Desc.record_structure -> 'a_types -> 'b_types
    module Map :
      functor (M : Mapper) ->
        sig
          module Tools :
            sig
              type ('types, 'arity_a, 'arity_b, 'subpositive, 'subnegative)
                   make_variables =
                ('types, 'arity_a, 'arity_b, 'subpositive, 'subnegative)
                MapperTools(M).make_variables =
                  MakeVariables : {
                    subarity_a :
                      ('types, 'arity_a, 'subarity_a) Refl__.Desc.append;
                    subarity_b :
                      ('types, 'arity_b, 'subarity_b) Refl__.Desc.append;
                    mapper :
                      ('subarity_a, 'subarity_b, 'subpositive, 'subnegative)
                      M.t;
                  } -> ('types, 'arity_a, 'arity_b, 'subpositive,
                        'subnegative)
                       make_variables
              val make_variables_aux :
                ('count, 'types) Refl__.Desc.length ->
                ('count, 'positives) Refl__.Desc.length ->
                ('positives, 'positive, 'subpositive) Refl__.Desc.append ->
                ('count, 'negatives) Refl__.Desc.length ->
                ('negatives, 'negative, 'subnegative) Refl__.Desc.append ->
                ('arity_a, 'arity_b, 'positive, 'negative) M.t ->
                ('types, 'arity_a, 'arity_b, 'subpositive, 'subnegative)
                make_variables
              val make_variables :
                ('a, 'b) Refl__.Desc.length ->
                ('a, 'c, 'd, 'e, 'f, 'g, 'h, 'i, 'j, 'k, 'l)
                Refl__.Desc.subvariables ->
                ('m, 'n, 'd, 'e) M.t -> ('b, 'm, 'n, 'j, 'k) make_variables
            end
          val map_poly :
            ('arity_a, 'arity_b, 'positive, 'negative) M.t ->
            ('count, [ `Absent ], 'positive, 'negative, 'direct, 'positives,
             'negatives, 'directs, 'subpositive, 'subnegative, 'subdirect)
            Refl__.Desc.subvariables ->
            ('a, 'structure, 'arity_a, M.rec_group, 'kinds, 'subpositive,
             'subnegative, 'subdirect, M.gadt, 'count)
            Refl__.Desc.forall_destruct ->
            (('b, 'structure, 'arity_b, M.rec_group, 'kinds, 'subpositive,
              'subnegative, 'subdirect, M.gadt, 'count)
             Refl__.Desc.forall_construct -> 'b) ->
            'a -> 'b
          val map_with :
            ('arity_a, 'arity_b, 'positive, 'negative) M.t ->
            ('types_a, 'structure, 'arity_a, M.rec_group, 'kinds, 'positive,
             'negative, 'direct, M.gadt)
            Refl__.Desc.record_structure ->
            ('types_b, 'structure, 'arity_b, M.rec_group, 'kinds, 'positive,
             'negative, 'direct, M.gadt)
            Refl__.Desc.record_structure -> 'types_a -> 'types_b
          val map :
            ('a, 'b, M.a_arity, M.rec_group, 'c, M.positive, M.negative, 'd,
             M.gadt)
            Refl__.Desc.record_structure ->
            ('e, 'b, M.b_arity, M.rec_group, 'c, M.positive, M.negative, 'd,
             M.gadt)
            Refl__.Desc.record_structure -> 'a -> 'e
        end
    type ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
          'negative, 'direct, 'gadt)
         fold =
        Fold : {
          index : ([ `Succ of 'index ], 'types, 'a, 'b) Refl__.Desc.selection;
          index_structure :
            ([ `Succ of 'index ], 'structures, 'structure, 'c)
            Refl__.Desc.selection;
          field :
            ('a, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadt)
            Refl__.Desc.record_field;
          value : 'a;
        } -> ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
              'negative, 'direct, 'gadt)
             fold
    val fold :
      (('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
        'negative, 'direct, 'gadt)
       fold -> 'acc -> 'acc) ->
      ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive, 'negative,
       'direct, 'gadt)
      t -> 'acc -> 'acc
    module Fields :
      sig
        type ('sequence, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
              'negative, 'direct, 'gadts)
             t =
          ('sequence, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
           'negative, 'direct, 'gadts)
          Desc_vector(Field).t =
            [] :
              (unit, 'structure, unit, 'rec_group, 'kinds, 'positive,
               'negative, 'direct, 'gadts)
              t
          | (::) :
              ('head, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
               'negative, 'direct, 'gadt)
              Field.t *
              ('tail, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
               'negative, 'direct, 'gadts)
              t -> ('head * 'tail, 'structure, 'arity * 'arities, 'rec_group,
                    'kinds, 'positive, 'negative, 'direct, 'gadt * 'gadts)
                   t
      end
    module Records :
      sig
        type ('sequence, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
              'negative, 'direct, 'gadts)
             t =
          ('sequence, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
           'negative, 'direct, 'gadts)
          Desc_vector(Record).t =
            [] :
              (unit, 'structure, unit, 'rec_group, 'kinds, 'positive,
               'negative, 'direct, 'gadts)
              t
          | (::) :
              ('head, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
               'negative, 'direct, 'gadt)
              Record.t *
              ('tail, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
               'negative, 'direct, 'gadts)
              t -> ('head * 'tail, 'structure, 'arity * 'arities, 'rec_group,
                    'kinds, 'positive, 'negative, 'direct, 'gadt * 'gadts)
                   t
      end
    type ('index, 'structure, 'structures, 'arities, 'records, 'rec_group,
          'kinds, 'positive, 'negative, 'direct, 'gadts)
         structure_find =
        Structure_find : {
          section :
            ([ `Succ of 'index ], 'records, 'section, 'others) Section.t;
          items :
            ('section, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadts)
            Fields.t;
          others :
            ('others, 'structures, 'arities, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadts)
            Records.t;
        } -> ('index, 'structure, 'structures, 'arities, 'records,
              'rec_group, 'kinds, 'positive, 'negative, 'direct, 'gadts)
             structure_find
    type ('records, 'structures, 'arities, 'rec_group, 'kinds, 'positive,
          'negative, 'direct, 'gadts)
         find =
        Find : {
          index :
            ([ `Succ of 'index ], 'structures, 'structure, 'a)
            Refl__.Desc.selection;
          section : ([ `Succ of 'index ], 'records, 'section, 'b) Section.t;
          items :
            ('section, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadts)
            Fields.t;
        } -> ('records, 'structures, 'arities, 'rec_group, 'kinds, 'positive,
              'negative, 'direct, 'gadts)
             find
    val find :
      ('record * 'records, 'structures, 'arities, 'rec_group, 'kinds,
       'positive, 'negative, 'direct, 'gadts)
      Records.t ->
      (('record * 'records, 'structures, 'arities, 'rec_group, 'kinds,
        'positive, 'negative, 'direct, 'gadts)
       find -> 'a option) ->
      'a option
  end
module Constructor :
  sig
    val map_eqs :
      ('a_eqs, 'structure_eqs, 'kinds_a, 'gadt) Refl__.Desc.constructor_eqs ->
      ('b_eqs, 'structure_eqs, 'kinds_b, 'gadt) Refl__.Desc.constructor_eqs ->
      'a_eqs -> 'b_eqs
    val map_choice :
      ('a_arity, 'b_arity, 'rec_group,
       [> `Exists of unit | `Poly of unit ] as 'a, 'kinds_b, 'positive,
       'negative, 'direct, 'gadt)
      map ->
      ('a_cases, 'structures, 'a_arity, 'rec_group, 'a, 'positive, 'negative,
       'direct, 'gadt)
      Refl__.Desc.constructors ->
      ('b_cases, 'structures, 'b_arity, 'rec_group, 'kinds_b, 'positive,
       'negative, 'direct, 'gadt)
      Refl__.Desc.constructors ->
      'a_cases Refl__.Desc.binary_choice ->
      'b_cases Refl__.Desc.binary_choice
    module Map :
      functor (M : Mapper) ->
        sig
          module Tools :
            sig
              type ('types, 'arity_a, 'arity_b, 'subpositive, 'subnegative)
                   make_variables =
                ('types, 'arity_a, 'arity_b, 'subpositive, 'subnegative)
                MapperTools(M).make_variables =
                  MakeVariables : {
                    subarity_a :
                      ('types, 'arity_a, 'subarity_a) Refl__.Desc.append;
                    subarity_b :
                      ('types, 'arity_b, 'subarity_b) Refl__.Desc.append;
                    mapper :
                      ('subarity_a, 'subarity_b, 'subpositive, 'subnegative)
                      M.t;
                  } -> ('types, 'arity_a, 'arity_b, 'subpositive,
                        'subnegative)
                       make_variables
              val make_variables_aux :
                ('count, 'types) Refl__.Desc.length ->
                ('count, 'positives) Refl__.Desc.length ->
                ('positives, 'positive, 'subpositive) Refl__.Desc.append ->
                ('count, 'negatives) Refl__.Desc.length ->
                ('negatives, 'negative, 'subnegative) Refl__.Desc.append ->
                ('arity_a, 'arity_b, 'positive, 'negative) M.t ->
                ('types, 'arity_a, 'arity_b, 'subpositive, 'subnegative)
                make_variables
              val make_variables :
                ('a, 'b) Refl__.Desc.length ->
                ('a, 'c, 'd, 'e, 'f, 'g, 'h, 'i, 'j, 'k, 'l)
                Refl__.Desc.subvariables ->
                ('m, 'n, 'd, 'e) M.t -> ('b, 'm, 'n, 'j, 'k) make_variables
            end
          module RecordMap :
            sig
              module Tools :
                sig
                  type ('types, 'arity_a, 'arity_b, 'subpositive,
                        'subnegative)
                       make_variables =
                    ('types, 'arity_a, 'arity_b, 'subpositive, 'subnegative)
                    MapperTools(M).make_variables =
                      MakeVariables : {
                        subarity_a :
                          ('types, 'arity_a, 'subarity_a) Refl__.Desc.append;
                        subarity_b :
                          ('types, 'arity_b, 'subarity_b) Refl__.Desc.append;
                        mapper :
                          ('subarity_a, 'subarity_b, 'subpositive,
                           'subnegative)
                          M.t;
                      } -> ('types, 'arity_a, 'arity_b, 'subpositive,
                            'subnegative)
                           make_variables
                  val make_variables_aux :
                    ('count, 'types) Refl__.Desc.length ->
                    ('count, 'positives) Refl__.Desc.length ->
                    ('positives, 'positive, 'subpositive) Refl__.Desc.append ->
                    ('count, 'negatives) Refl__.Desc.length ->
                    ('negatives, 'negative, 'subnegative) Refl__.Desc.append ->
                    ('arity_a, 'arity_b, 'positive, 'negative) M.t ->
                    ('types, 'arity_a, 'arity_b, 'subpositive, 'subnegative)
                    make_variables
                  val make_variables :
                    ('a, 'b) Refl__.Desc.length ->
                    ('a, 'c, 'd, 'e, 'f, 'g, 'h, 'i, 'j, 'k, 'l)
                    Refl__.Desc.subvariables ->
                    ('m, 'n, 'd, 'e) M.t ->
                    ('b, 'm, 'n, 'j, 'k) make_variables
                end
              val map_poly :
                ('arity_a, 'arity_b, 'positive, 'negative) M.t ->
                ('count, [ `Absent ], 'positive, 'negative, 'direct,
                 'positives, 'negatives, 'directs, 'subpositive,
                 'subnegative, 'subdirect)
                Refl__.Desc.subvariables ->
                ('a, 'structure, 'arity_a, M.rec_group, 'kinds, 'subpositive,
                 'subnegative, 'subdirect, M.gadt, 'count)
                Refl__.Desc.forall_destruct ->
                (('b, 'structure, 'arity_b, M.rec_group, 'kinds,
                  'subpositive, 'subnegative, 'subdirect, M.gadt, 'count)
                 Refl__.Desc.forall_construct -> 'b) ->
                'a -> 'b
              val map_with :
                ('arity_a, 'arity_b, 'positive, 'negative) M.t ->
                ('types_a, 'structure, 'arity_a, M.rec_group, 'kinds,
                 'positive, 'negative, 'direct, M.gadt)
                Refl__.Desc.record_structure ->
                ('types_b, 'structure, 'arity_b, M.rec_group, 'kinds,
                 'positive, 'negative, 'direct, M.gadt)
                Refl__.Desc.record_structure -> 'types_a -> 'types_b
              val map :
                ('a, 'b, M.a_arity, M.rec_group, 'c, M.positive, M.negative,
                 'd, M.gadt)
                Refl__.Desc.record_structure ->
                ('e, 'b, M.b_arity, M.rec_group, 'c, M.positive, M.negative,
                 'd, M.gadt)
                Refl__.Desc.record_structure -> 'a -> 'e
            end
          val map_kind :
            ('a_arity, 'b_arity, 'subpositive, 'subnegative) M.t ->
            ('types_a, 'structure, 'a_arity, M.rec_group, 'kinds,
             'subpositive, 'subnegative, 'subdirect, M.gadt)
            Refl__.Desc.constructor_kind ->
            ('types_b, 'structure, 'b_arity, M.rec_group, 'kinds,
             'subpositive, 'subnegative, 'subdirect, M.gadt)
            Refl__.Desc.constructor_kind -> 'types_a -> 'types_b
          val map_choice :
            ('a_cases, 'structures, M.a_arity, M.rec_group, 'kinds,
             M.positive, M.negative, 'direct, M.gadt)
            Refl__.Desc.constructors ->
            ('b_cases, 'structures, M.b_arity, M.rec_group, 'kinds,
             M.positive, M.negative, 'direct, M.gadt)
            Refl__.Desc.constructors ->
            'a_cases Refl__.Desc.binary_choice ->
            'b_cases Refl__.Desc.binary_choice
        end
    type ('types, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
          'negative, 'direct, 'gadt)
         kind =
        Tuple :
          ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
           'negative, 'direct, 'gadt)
          Tuple.t -> ('types, [ `Tuple of 'structures ], 'arity, 'rec_group,
                      'kinds, 'positive, 'negative, 'direct, 'gadt)
                     kind
      | Record :
          ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
           'negative, 'direct, 'gadt)
          Record.t -> ('types, [ `Record of 'structures ], 'arity,
                       'rec_group, 'kinds, 'positive, 'negative, 'direct,
                       'gadt)
                      kind
    type ('value, 'constructor, 'arity, 'positive, 'negative, 'direct,
          'values, 'structure, 'subarity, 'subpositive, 'subnegative,
          'subdirect, 'kinds)
         link =
        Constructor :
          ('values * 'eqs, [ `Constructor of 'structure * 'structure_eq ],
           'arity, 'positive, 'negative, 'direct, 'values, 'structure,
           'arity, 'positive, 'negative, 'direct, 'kinds)
          link
      | Exists : { presence : ('kinds, 'local) Refl__.Desc.presence;
          exists_count : ('count, 'exists) Refl__.Desc.length;
          variables :
            ('count, 'local, 'positive, 'negative, 'direct, 'positives,
             'negatives, 'directs, 'subpositive, 'subnegative, 'subdirect)
            Refl__.Desc.subvariables;
          constraints : ('constraints, 'exists) Refl__.Desc.gadt_constraints;
          exists : ('exists, 'arity, 'subarity) Refl__.Desc.append;
        } -> ('a,
              [ `Exists of
                  'index * 'count * 'structure * 'local * 'positives *
                  'negatives * 'directs ],
              'arity, 'positive, 'negative, 'direct, 'b, 'structure,
              'subarity, 'subpositive, 'subnegative, 'subdirect,
              [> `Exists ] as 'kinds)
             link
    type ('cases, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
          'negative, 'direct, 'gadt)
         destruct =
        Destruct : {
          constructors :
            ('cases, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadt)
            Refl__.Desc.constructors;
          index :
            ([ `Select of 'index ], 'cases, 'value, 'a)
            Refl__.Desc.binary_selection;
          index_desc :
            ([ `Select of 'index ], 'structures, 'constructor, 'b)
            Refl__.Desc.binary_selection;
          constructor :
            ('value, 'constructor, 'arity, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadt)
            Refl__.Desc.constructor;
          link :
            ('value, 'constructor, 'arity, 'positive, 'negative, 'direct,
             'values, 'structure, 'subarity, 'subpositive, 'subnegative,
             'subdirect, 'kinds)
            link;
          values : 'values; name : string;
          kind :
            ('values, 'structure, 'subarity, 'rec_group, 'kinds,
             'subpositive, 'subnegative, 'subdirect, 'gadt)
            kind;
        } -> ('cases, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
              'negative, 'direct, 'gadt)
             destruct
    val destruct_choice :
      ('cases, 'structures, 'arity, 'rec_group, 'kinds, 'positive, 'negative,
       'direct, 'gadt)
      Refl__.Desc.constructors ->
      ('index, 'cases, 'types, 'tail_cases) Refl__.Desc.binary_selection ->
      ('index, 'structures, 'structure, 'tail_structures)
      Refl__.Desc.binary_selection ->
      ('tail_cases, 'tail_structures, 'arity, 'rec_group, 'kinds, 'positive,
       'negative, 'direct, 'gadt)
      Refl__.Desc.constructors ->
      'tail_cases Refl__.Desc.binary_choice ->
      ('cases, 'structures, 'arity, 'rec_group, 'kinds, 'positive, 'negative,
       'direct, 'gadt)
      destruct
    val destruct :
      ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h, 'i) Refl__.Desc.constructors ->
      'a Refl__.Desc.binary_choice ->
      ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h, 'i) destruct
  end
module Variant :
  sig
    type ('types, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
          'negative, 'direct, 'gadt)
         argument =
        None :
          (unit, unit, 'arity, 'rec_group, 'kinds, 'positive, 'negative,
           'direct, 'gadt)
          argument
      | Some : {
          desc :
            ('a, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadt)
            Refl__.Desc.desc;
          value : 'a;
        } -> ('a * unit, 'structure * unit, 'arity, 'rec_group, 'kinds,
              'positive, 'negative, 'direct, 'gadt)
             argument
    val map_choice :
      ('a_arity, 'b_arity, 'rec_group, 'kinds_a, 'kinds_b, 'positive,
       'negative, 'direct, 'gadt)
      map ->
      ('a_cases, 'structures, 'a_arity, 'rec_group, 'kinds_a, 'positive,
       'negative, 'direct, 'gadt)
      Refl__.Desc.variant_constructors ->
      ('b_cases, 'structures, 'b_arity, 'rec_group, 'kinds_b, 'positive,
       'negative, 'direct, 'gadt)
      Refl__.Desc.variant_constructors ->
      'a_cases Refl__.Desc.choice -> 'b_cases Refl__.Desc.choice
    type ('types, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
          'negative, 'direct, 'gadt)
         kind =
        Constructor : { name : string;
          argument :
            ('types, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadt)
            argument;
        } -> ('types, [ `Constr of 'structure ], 'arity, 'rec_group, 'kinds,
              'positive, 'negative, 'direct, 'gadt)
             kind
      | Inherit : {
          desc :
            ('a, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadt)
            Refl__.Desc.desc;
          value : 'a;
        } -> ('a, [ `Inherit of 'structure ], 'arity, 'rec_group, 'kinds,
              'positive, 'negative, 'direct, 'gadt)
             kind
    type ('cases, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
          'negative, 'direct, 'gadt)
         destruct =
        Destruct : {
          constructors :
            ('cases, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadt)
            Refl__.Desc.variant_constructors;
          index :
            ([ `Succ of 'index ], 'cases, 'types, 'a) Refl__.Desc.selection;
          index_desc :
            ([ `Succ of 'index ], 'structures, 'structure, 'b)
            Refl__.Desc.selection;
          constructor :
            ('types, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadt)
            Refl__.Desc.variant_constructor;
          kind :
            ('types, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadt)
            kind;
        } -> ('cases, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
              'negative, 'direct, 'gadt)
             destruct
    val destruct_choice :
      ('cases, 'structures, 'arity, 'rec_group, 'kinds, 'positive, 'negative,
       'direct, 'gadt)
      Refl__.Desc.variant_constructors ->
      ('index, 'cases, 'types, 'tail_cases) Refl__.Desc.selection ->
      ('index, 'structures, 'structure, 'tail_structures)
      Refl__.Desc.selection ->
      ('tail_cases, 'tail_structures, 'arity, 'rec_group, 'kinds, 'positive,
       'negative, 'direct, 'gadt)
      Refl__.Desc.variant_constructors ->
      'tail_cases Refl__.Desc.choice ->
      ('cases, 'structures, 'arity, 'rec_group, 'kinds, 'positive, 'negative,
       'direct, 'gadt)
      destruct
    val destruct :
      ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h, 'i) Refl__.Desc.variant_constructors ->
      'a Refl__.Desc.choice -> ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h, 'i) destruct
  end
module Object :
  sig
    module Object :
      sig
        type ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
              'negative, 'direct, 'gadt)
             t = {
          structure :
            ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadt)
            Refl__.Desc.object_methods;
          methods : 'types Refl__.Desc.Delays.t;
        }
      end
    type ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
          'negative, 'direct, 'gadt)
         t =
      ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive, 'negative,
       'direct, 'gadt)
      Object.t = {
      structure :
        ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
         'negative, 'direct, 'gadt)
        Refl__.Desc.object_methods;
      methods : 'types Refl__.Desc.Delays.t;
    }
    val map :
      ('a_arity, 'b_arity, 'rec_group, 'kinds_a, 'kinds_b, 'positive,
       'negative, 'direct, 'gadt)
      map ->
      ('methods_a, 'structures, 'a_arity, 'rec_group, 'kinds_a, 'positive,
       'negative, 'direct, 'gadt)
      Refl__.Desc.object_methods ->
      ('methods_b, 'structures, 'b_arity, 'rec_group, 'kinds_b, 'positive,
       'negative, 'direct, 'gadt)
      Refl__.Desc.object_methods ->
      'methods_a Refl__.Desc.Delays.t -> 'methods_b Refl__.Desc.Delays.t
    type ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
          'negative, 'direct, 'gadt)
         fold =
        Fold : {
          index : ([ `Succ of 'index ], 'types, 'a, 'b) Refl__.Desc.selection;
          index_structure :
            ([ `Succ of 'index ], 'structures, [ `Method of 'structure ], 'c)
            Refl__.Desc.selection;
          name : string;
          desc :
            ('a, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadt)
            Refl__.Desc.desc;
          method_ : unit -> 'a;
        } -> ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
              'negative, 'direct, 'gadt)
             fold
    val fold :
      (('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive,
        'negative, 'direct, 'gadt)
       fold -> 'acc -> 'acc) ->
      ('types, 'structures, 'arity, 'rec_group, 'kinds, 'positive, 'negative,
       'direct, 'gadt)
      t -> 'acc -> 'acc
    module Method :
      sig
        type ('a, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
              'negative, 'direct, 'gadt)
             t = {
          structure :
            ('a, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadt)
            Refl__.Desc.object_method;
          value : unit -> 'a;
        }
      end
    module Methods :
      sig
        type ('sequence, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
              'negative, 'direct, 'gadts)
             t =
          ('sequence, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
           'negative, 'direct, 'gadts)
          Desc_vector(Method).t =
            [] :
              (unit, 'structure, unit, 'rec_group, 'kinds, 'positive,
               'negative, 'direct, 'gadts)
              t
          | (::) :
              ('head, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
               'negative, 'direct, 'gadt)
              Method.t *
              ('tail, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
               'negative, 'direct, 'gadts)
              t -> ('head * 'tail, 'structure, 'arity * 'arities, 'rec_group,
                    'kinds, 'positive, 'negative, 'direct, 'gadt * 'gadts)
                   t
      end
    module Objects :
      sig
        type ('sequence, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
              'negative, 'direct, 'gadts)
             t =
          ('sequence, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
           'negative, 'direct, 'gadts)
          Desc_vector(Object).t =
            [] :
              (unit, 'structure, unit, 'rec_group, 'kinds, 'positive,
               'negative, 'direct, 'gadts)
              t
          | (::) :
              ('head, 'structure, 'arity, 'rec_group, 'kinds, 'positive,
               'negative, 'direct, 'gadt)
              Object.t *
              ('tail, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
               'negative, 'direct, 'gadts)
              t -> ('head * 'tail, 'structure, 'arity * 'arities, 'rec_group,
                    'kinds, 'positive, 'negative, 'direct, 'gadt * 'gadts)
                   t
      end
    type ('index, 'structure, 'structures, 'arities, 'tuples, 'rec_group,
          'kinds, 'positive, 'negative, 'direct, 'gadts)
         structure_find =
        Structure_find : {
          section :
            ([ `Succ of 'index ], 'tuples, 'section, 'others) Section.t;
          methods :
            ('section, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadts)
            Methods.t;
          others :
            ('others, 'structures, 'arities, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadts)
            Objects.t;
        } -> ('index, 'structure, 'structures, 'arities, 'tuples, 'rec_group,
              'kinds, 'positive, 'negative, 'direct, 'gadts)
             structure_find
    type ('tuples, 'structures, 'arities, 'rec_group, 'kinds, 'positive,
          'negative, 'direct, 'gadts)
         find =
        Find : {
          index :
            ([ `Succ of 'index ], 'structures, 'structure, 'a)
            Refl__.Desc.selection;
          section : ([ `Succ of 'index ], 'tuples, 'section, 'b) Section.t;
          methods :
            ('section, 'structure, 'arities, 'rec_group, 'kinds, 'positive,
             'negative, 'direct, 'gadts)
            Methods.t;
        } -> ('tuples, 'structures, 'arities, 'rec_group, 'kinds, 'positive,
              'negative, 'direct, 'gadts)
             find
    val find :
      ('tuple * 'tuples, 'structures, 'arities, 'rec_group, 'kinds,
       'positive, 'negative, 'direct, 'gadts)
      Objects.t ->
      (('tuple * 'tuples, 'structures, 'arities, 'rec_group, 'kinds,
        'positive, 'negative, 'direct, 'gadts)
       find -> 'a option) ->
      'a option("DEBUG:rule", [Tag4 (("TypeS", 8730), (((Tag1 ((Tag2 ("Traverse")), "TypeS"))), 0, (("runtime/tools.ml", 3, 11, 11), ("runtime/tools.ml", 3, 11, 45), 0), Tag1 ("Refl__Tools", 35)), 0); Tag4 (("BinaryTypeS", 8731), ((Tag1 ([Tag1 (("t", 8777), ([((("a")), 100000000, 0, -233); ((("b")), 100000000, 0, -234)], 2, 0, 1, 0, [7; 7], [2; 2], 0, 0, (("runtime/tools.ml", 6, 77, 79), ("runtime/tools.ml", 6, 77, 94), 0), 0, 0, 0, Tag1 ("Refl__Tools", 36)), 1, 0)])), 0, (("runtime/tools.ml", 5, 47, 47), ("runtime/tools.ml", 7, 95, 98), 0), Tag1 ("Refl__Tools", 37)), 0); (("cast", 8732), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "eq"), [((("a")), 100000000, 0, -231); ((("b")), 100000000, 0, -230)], (0)), 100000000, 0, -232), (Tag1 (0, ((("a")), 100000000, 0, -231), ((("b")), 100000000, 0, -230), 0), 100000000, 0, -229), 0), 100000000, 0, -228), 0, (("runtime/tools.ml", 9, 100, 104), ("runtime/tools.ml", 9, 100, 108), 0), 0, Tag1 ("Refl__Tools", 38)), 0); (("eq_symmetric", 8733), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "eq"), [((("a")), 100000000, 0, -226); ((("b")), 100000000, 0, -225)], (0)), 100000000, 0, -227), (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "eq"), [((("b")), 100000000, 0, -225); ((("a")), 100000000, 0, -226)], (0)), 100000000, 0, -224), 0), 100000000, 0, -223), 0, (("runtime/tools.ml", 11, 159, 163), ("runtime/tools.ml", 11, 159, 175), 0), 0, Tag1 ("Refl__Tools", 78)), 0); (("sub_gadt_functional", 8734), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "sub_gadt"), [((0), 100000000, 0, -221); ((0), 100000000, 0, -218)], (0)), 100000000, 0, -222), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "sub_gadt"), [((0), 100000000, 0, -221); ((0), 100000000, 0, -219)], (0)), 100000000, 0, -220), (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "eq"), [((0), 100000000, 0, -218); ((0), 100000000, 0, -219)], (0)), 100000000, 0, -217), 0), 100000000, 0, -216), 0), 100000000, 0, -215), 0, (("runtime/tools.ml", 13, 228, 232), ("runtime/tools.ml", 13, 228, 251), 0), 0, Tag1 ("Refl__Tools", 82)), 0); Tag1 (("selection_of_choice", 8735), ([((("types")), 100000000, 0, -214)], 1, Tag1 ([(("SelectionOfChoice", 419), Tag1 ([(("index", 420), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "selection"), [(Tag8 (([("Succ", ((((("index")), 100000000, 0, -211))))], (0, 100000000, 0, -210), 1, 0, 0)), 100000000, 0, -209); ((("types")), 100000000, 0, -207); ((("a")), 100000000, 0, -212); ((0), 100000000, 0, -213)], (0)), 100000000, 0, -208), (("runtime/tools.ml", 18, 385, 391), ("runtime/tools.ml", 18, 385, 444), 0), 0, Tag1 ("Refl__Tools", 86)); (("item", 421), 0, ((("a")), 100000000, 0, -212), (("runtime/tools.ml", 19, 445, 451), ("runtime/tools.ml", 19, 445, 461), 0), 0, Tag1 ("Refl__Tools", 87))]), ((Tag3 ((("selection_of_choice", 8735)), [((("types")), 100000000, 0, -207)], (0)), 100000000, 0, -206)), (("runtime/tools.ml", 17, 359, 361), ("runtime/tools.ml", 20, 462, 497), 0), 0, Tag1 ("Refl__Tools", 88))], 0), 1, 0, [15], [0], 0, 0, (("runtime/tools.ml", 16, 325, 325), ("runtime/tools.ml", 20, 462, 497), 0), 0, 0, 0, Tag1 ("Refl__Tools", 85)), 1, 0); (("equal_binary_choice", 8736), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "binary_choice"), [((("cases")), 100000000, 0, -204)], (0)), 100000000, 0, -205), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "binary_choice"), [((("cases")), 100000000, 0, -204)], (0)), 100000000, 0, -203), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -202), 0), 100000000, 0, -201), 0), 100000000, 0, -200), 0, (("runtime/tools.ml", 22, 499, 507), ("runtime/tools.ml", 22, 499, 526), 0), 0, Tag1 ("Refl__Tools", 95)), 0); (("selection_of_choice", 8737), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "choice"), [((("types")), 100000000, 0, -198)], (0)), 100000000, 0, -199), (Tag3 ((("selection_of_choice", 8735)), [((("types")), 100000000, 0, -198)], (0)), 100000000, 0, -197), 0), 100000000, 0, -196), 0, (("runtime/tools.ml", 31, 769, 773), ("runtime/tools.ml", 31, 769, 792), 0), 0, Tag1 ("Refl__Tools", 111)), 0); (("variable_functional", 8738), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variable"), [((("index")), 100000000, 0, -189); ((("arity")), 100000000, 0, -190); ((("a")), 100000000, 0, -186); ((("positive_a")), 100000000, 0, -194); ((("direct_a")), 100000000, 0, -195)], (0)), 100000000, 0, -193), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variable"), [((("index")), 100000000, 0, -189); ((("arity")), 100000000, 0, -190); ((("b")), 100000000, 0, -187); ((("positive_b")), 100000000, 0, -191); ((("direct_b")), 100000000, 0, -192)], (0)), 100000000, 0, -188), (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "eq"), [((("a")), 100000000, 0, -186); ((("b")), 100000000, 0, -187)], (0)), 100000000, 0, -185), 0), 100000000, 0, -184), 0), 100000000, 0, -183), 0, (("runtime/tools.ml", 46, 1205, 1213), ("runtime/tools.ml", 46, 1205, 1232), 0), 0, Tag1 ("Refl__Tools", 129)), 0); Tag1 (("compare", 8739), ([((("index")), 100000000, 0, -181); ((("index'")), 100000000, 0, -182)], 2, Tag1 ([(("LessThan", 495), (0), 0, (("runtime/tools.ml", 59, 1633, 1635), ("runtime/tools.ml", 59, 1633, 1645), 0), 0, Tag1 ("Refl__Tools", 196)); (("Equal", 496), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "eq"), [((("index")), 100000000, 0, -181); ((("index'")), 100000000, 0, -182)], (0)), 100000000, 0, -180)]), 0, (("runtime/tools.ml", 60, 1646, 1648), ("runtime/tools.ml", 60, 1646, 1679), 0), 0, Tag1 ("Refl__Tools", 197)); (("GreaterThan", 497), (0), 0, (("runtime/tools.ml", 61, 1680, 1682), ("runtime/tools.ml", 61, 1680, 1695), 0), 0, Tag1 ("Refl__Tools", 198))], 0), 1, 0, [15; 15], [0; 0], 0, 0, (("runtime/tools.ml", 58, 1600, 1600), ("runtime/tools.ml", 61, 1680, 1695), 0), 0, 0, 0, Tag1 ("Refl__Tools", 195)), 1, 0); (("compare_length", 8740), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count_a")), 100000000, 0, -174); ((("types_a")), 100000000, 0, -179)], (0)), 100000000, 0, -178), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count_b")), 100000000, 0, -175); ((("types_b")), 100000000, 0, -177)], (0)), 100000000, 0, -176), (Tag3 ((("compare", 8739)), [((("count_a")), 100000000, 0, -174); ((("count_b")), 100000000, 0, -175)], (0)), 100000000, 0, -173), 0), 100000000, 0, -172), 0), 100000000, 0, -171), 0, (("runtime/tools.ml", 63, 1697, 1705), ("runtime/tools.ml", 63, 1697, 1719), 0), 0, Tag1 ("Refl__Tools", 199)), 0); (("compare_selection", 8741), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "selection"), [((("index")), 100000000, 0, -161); ((("sequence")), 100000000, 0, -168); ((("head")), 100000000, 0, -169); ((("tail")), 100000000, 0, -170)], (0)), 100000000, 0, -167), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "selection"), [((("index'")), 100000000, 0, -162); ((("sequence'")), 100000000, 0, -164); ((("head'")), 100000000, 0, -165); ((("tail'")), 100000000, 0, -166)], (0)), 100000000, 0, -163), (Tag3 ((("compare", 8739)), [((("index")), 100000000, 0, -161); ((("index'")), 100000000, 0, -162)], (0)), 100000000, 0, -160), 0), 100000000, 0, -159), 0), 100000000, 0, -158), 0, (("runtime/tools.ml", 80, 2197, 2205), ("runtime/tools.ml", 80, 2197, 2222), 0), 0, Tag1 ("Refl__Tools", 237)), 0); (("int_of_selection", 8742), ((Tag1 (Tag1 ("start"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -157)], (0)), 100000000, 0, -156), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "selection"), [((("index")), 100000000, 0, -152); ((("sequence")), 100000000, 0, -153); ((("head")), 100000000, 0, -154); ((("tail")), 100000000, 0, -155)], (0)), 100000000, 0, -151), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -150), 0), 100000000, 0, -149), 0), 100000000, 0, -148), 0, (("runtime/tools.ml", 97, 2755, 2763), ("runtime/tools.ml", 97, 2755, 2779), 0), 0, Tag1 ("Refl__Tools", 271)), 0); (("int_of_binary_selection", 8743), ((Tag1 (Tag1 ("start"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -147)], (0)), 100000000, 0, -146), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "binary_selection"), [((("index")), 100000000, 0, -142); ((("sequence")), 100000000, 0, -143); ((("head")), 100000000, 0, -144); ((("tail")), 100000000, 0, -145)], (0)), 100000000, 0, -141), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -140), 0), 100000000, 0, -139), 0), 100000000, 0, -138), 0, (("runtime/tools.ml", 105, 3023, 3031), ("runtime/tools.ml", 105, 3023, 3054), 0), 0, Tag1 ("Refl__Tools", 286)), 0); (("selection_functional_tail", 8744), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "selection"), [((("index")), 100000000, 0, -133); ((("sequence")), 100000000, 0, -134); ((("head")), 100000000, 0, -137); ((("tail")), 100000000, 0, -130)], (0)), 100000000, 0, -136), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "selection"), [((("index")), 100000000, 0, -133); ((("sequence")), 100000000, 0, -134); ((("head'")), 100000000, 0, -135); ((("tail'")), 100000000, 0, -131)], (0)), 100000000, 0, -132), (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "eq"), [((("tail")), 100000000, 0, -130); ((("tail'")), 100000000, 0, -131)], (0)), 100000000, 0, -129), 0), 100000000, 0, -128), 0), 100000000, 0, -127), 0, (("runtime/tools.ml", 118, 3478, 3486), ("runtime/tools.ml", 118, 3478, 3511), 0), 0, Tag1 ("Refl__Tools", 312)), 0); (("selection_functional_head", 8745), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "selection"), [(Tag8 (([("Succ", ((((("index")), 100000000, 0, -120))))], (0, 100000000, 0, -125), 1, 0, 0)), 100000000, 0, -124); ((("sequence")), 100000000, 0, -121); ((("head")), 100000000, 0, -115); ((("tail")), 100000000, 0, -126)], (0)), 100000000, 0, -123), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "selection"), [(Tag8 (([("Succ", ((((("index")), 100000000, 0, -120))))], (0, 100000000, 0, -119), 1, 0, 0)), 100000000, 0, -118); ((("sequence")), 100000000, 0, -121); ((("head'")), 100000000, 0, -116); ((("tail'")), 100000000, 0, -122)], (0)), 100000000, 0, -117), (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "eq"), [((("head")), 100000000, 0, -115); ((("head'")), 100000000, 0, -116)], (0)), 100000000, 0, -114), 0), 100000000, 0, -113), 0), 100000000, 0, -112), 0, (("runtime/tools.ml", 130, 3881, 3885), ("runtime/tools.ml", 130, 3881, 3910), 0), 0, Tag1 ("Refl__Tools", 339)), 0); (("compare_binary_selection", 8746), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "binary_selection"), [((("index")), 100000000, 0, -102); ((("sequence")), 100000000, 0, -109); ((("head")), 100000000, 0, -110); ((("tail")), 100000000, 0, -111)], (0)), 100000000, 0, -108), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "binary_selection"), [((("index'")), 100000000, 0, -103); ((("sequence'")), 100000000, 0, -105); ((("head'")), 100000000, 0, -106); ((("tail'")), 100000000, 0, -107)], (0)), 100000000, 0, -104), (Tag3 ((("compare", 8739)), [((("index")), 100000000, 0, -102); ((("index'")), 100000000, 0, -103)], (0)), 100000000, 0, -101), 0), 100000000, 0, -100), 0), 100000000, 0, -99), 0, (("runtime/tools.ml", 141, 4278, 4286), ("runtime/tools.ml", 141, 4278, 4310), 0), 0, Tag1 ("Refl__Tools", 360)), 0); (("binary_selection_functional_tail", 8747), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "binary_selection"), [((("index")), 100000000, 0, -94); ((("sequence")), 100000000, 0, -95); ((("head")), 100000000, 0, -98); ((("tail")), 100000000, 0, -91)], (0)), 100000000, 0, -97), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "binary_selection"), [((("index")), 100000000, 0, -94); ((("sequence")), 100000000, 0, -95); ((("head'")), 100000000, 0, -96); ((("tail'")), 100000000, 0, -92)], (0)), 100000000, 0, -93), (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "eq"), [((("tail")), 100000000, 0, -91); ((("tail'")), 100000000, 0, -92)], (0)), 100000000, 0, -90), 0), 100000000, 0, -89), 0), 100000000, 0, -88), 0, (("runtime/tools.ml", 174, 5439, 5447), ("runtime/tools.ml", 174, 5439, 5479), 0), 0, Tag1 ("Refl__Tools", 436)), 0); (("binary_selection_functional_head", 8748), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "binary_selection"), [(Tag8 (([("Select", ((((("index")), 100000000, 0, -81))))], (0, 100000000, 0, -86), 1, 0, 0)), 100000000, 0, -85); ((("sequence")), 100000000, 0, -82); ((("head")), 100000000, 0, -76); ((("tail")), 100000000, 0, -87)], (0)), 100000000, 0, -84), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "binary_selection"), [(Tag8 (([("Select", ((((("index")), 100000000, 0, -81))))], (0, 100000000, 0, -80), 1, 0, 0)), 100000000, 0, -79); ((("sequence")), 100000000, 0, -82); ((("head'")), 100000000, 0, -77); ((("tail'")), 100000000, 0, -83)], (0)), 100000000, 0, -78), (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "eq"), [((("head")), 100000000, 0, -76); ((("head'")), 100000000, 0, -77)], (0)), 100000000, 0, -75), 0), 100000000, 0, -74), 0), 100000000, 0, -73), 0, (("runtime/tools.ml", 192, 6124, 6128), ("runtime/tools.ml", 192, 6124, 6160), 0), 0, Tag1 ("Refl__Tools", 515)), 0); (("equal_variable", 8749), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variable"), [((("index_a")), 100000000, 0, -60); ((("arity_a")), 100000000, 0, -69); ((("a")), 100000000, 0, -70); ((("positive_a")), 100000000, 0, -71); ((("direct_a")), 100000000, 0, -72)], (0)), 100000000, 0, -68), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variable"), [((("index_b")), 100000000, 0, -61); ((("arity_b")), 100000000, 0, -64); ((("b")), 100000000, 0, -65); ((("positive_b")), 100000000, 0, -66); ((("direct_b")), 100000000, 0, -67)], (0)), 100000000, 0, -63), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "eq"), [((("index_a")), 100000000, 0, -60); ((("index_b")), 100000000, 0, -61)], (0)), 100000000, 0, -59); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -62)], (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("runtime/tools.ml", 203, 6557, 6565), ("runtime/tools.ml", 203, 6557, 6579), 0), 0, Tag1 ("Refl__Tools", 570)), 0); (("attributes_empty", 8750), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "attributes"), [((0), 100000000, 0, -48); ((0), 100000000, 0, -49); ((0), 100000000, 0, -50); ((0), 100000000, 0, -51); ((0), 100000000, 0, -52); ((0), 100000000, 0, -53); ((0), 100000000, 0, -54); ((0), 100000000, 0, -55)], (0)), 100000000, 0, -47), 0, (("runtime/tools.ml", 218, 7078, 7082), ("runtime/tools.ml", 218, 7078, 7098), 0), 0, Tag1 ("Refl__Tools", 626)), 0); Tag4 (("VectorS", 8751), ((Tag1 ([Tag3 (("T", 8778), 0, ((Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "UnaryTypeS")), 0, (("runtime/tools.ml", 223, 7159, 7161), ("runtime/tools.ml", 223, 7159, 7182), 0), Tag1 ("Refl__Tools", 627)), 0, 0); Tag1 (("item", 8779), ([((("a")), 100000000, 0, -358); ((("occurrence")), 100000000, 0, -359)], 2, Tag1 ([(("None", 804), (0), ((Tag3 ((("item", 8779)), [((0), 100000000, 0, -351); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -353), 1, 0, 0)), 100000000, 0, -352)], (0)), 100000000, 0, -350)), (("runtime/tools.ml", 226, 7216, 7220), ("runtime/tools.ml", 226, 7216, 7248), 0), 0, Tag1 ("Refl__Tools", 629)); (("Some", 805), ([(Tag3 (Tag1 ((("T", 8778)), "t"), [((("a")), 100000000, 0, -355)], (0)), 100000000, 0, -357)]), ((Tag3 ((("item", 8779)), [((("a")), 100000000, 0, -355); ((0), 100000000, 0, -356)], (0)), 100000000, 0, -354)), (("runtime/tools.ml", 227, 7249, 7253), ("runtime/tools.ml", 227, 7249, 7284), 0), 0, Tag1 ("Refl__Tools", 630))], 0), 1, 0, [15; 63], [0; 0], 0, 0, (("runtime/tools.ml", 225, 7184, 7186), ("runtime/tools.ml", 227, 7249, 7284), 0), 0, 0, 0, Tag1 ("Refl__Tools", 628)), 1, 0); Tag1 (("t", 8780), ([((("sequence")), 100000000, 0, -348); ((("occurrences")), 100000000, 0, -349)], 2, Tag1 ([(("[]", 808), (0), ((Tag3 ((("t", 8780)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -337); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -338)], (0)), 100000000, 0, -336)), (("runtime/tools.ml", 230, 7323, 7327), ("runtime/tools.ml", 230, 7323, 7348), 0), 0, Tag1 ("Refl__Tools", 632)); (("::", 809), ([(Tag3 ((("item", 8779)), [((("head")), 100000000, 0, -341); ((("occurrence")), 100000000, 0, -344)], (0)), 100000000, 0, -346); (Tag3 ((("t", 8780)), [((("tail")), 100000000, 0, -342); ((("occurrences")), 100000000, 0, -345)], (0)), 100000000, 0, -347)]), ((Tag3 ((("t", 8780)), [(Tag2 ([((("head")), 100000000, 0, -341); ((("tail")), 100000000, 0, -342)]), 100000000, 0, -340); (Tag2 ([((("occurrence")), 100000000, 0, -344); ((("occurrences")), 100000000, 0, -345)]), 100000000, 0, -343)], (0)), 100000000, 0, -339)), (("runtime/tools.ml", 231, 7349, 7353), ("runtime/tools.ml", 232, 7417, 7470), 0), 0, Tag1 ("Refl__Tools", 633))], 0), 1, 0, [63; 63], [0; 0], 0, 0, (("runtime/tools.ml", 229, 7286, 7288), ("runtime/tools.ml", 232, 7417, 7470), 0), 0, 0, 0, Tag1 ("Refl__Tools", 631)), 1, 0); (("get", 8781), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variable"), [((("index")), 100000000, 0, -334); ((("sequence")), 100000000, 0, -331); ((("value")), 100000000, 0, -329); ((("positive")), 100000000, 0, -335); ((("occurrences")), 100000000, 0, -332)], (0)), 100000000, 0, -333), (Tag1 (0, (Tag3 ((("t", 8780)), [((("sequence")), 100000000, 0, -331); ((("occurrences")), 100000000, 0, -332)], (0)), 100000000, 0, -330), (Tag3 (Tag1 ((("T", 8778)), "t"), [((("value")), 100000000, 0, -329)], (0)), 100000000, 0, -328), 0), 100000000, 0, -327), 0), 100000000, 0, -326), 0, (("runtime/tools.ml", 234, 7472, 7474), ("runtime/tools.ml", 236, 7553, 7600), 0), 0, Tag1 ("Refl__Tools", 634)), 0); (("make_transfer", 8782), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_arguments"), [((("source")), 100000000, 0, -324); ((("sub")), 100000000, 0, -320); ((("arg")), 100000000, 0, -318)], (0)), 100000000, 0, -325), (Tag1 (0, (Tag3 ((("t", 8780)), [((("sequence")), 100000000, 0, -317); ((("source")), 100000000, 0, -324)], (0)), 100000000, 0, -323), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("t", 8780)), [((("sequence")), 100000000, 0, -317); ((("arg")), 100000000, 0, -318)], (0)), 100000000, 0, -316); (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "eq"), [((("sub")), 100000000, 0, -320); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -322), 1, 0, 0)), 100000000, 0, -321)], (0)), 100000000, 0, -319)], (0)), 100000000, 0, -315), 0), 100000000, 0, -314), 0), 100000000, 0, -313), 0, (("runtime/tools.ml", 238, 7602, 7604), ("runtime/tools.ml", 240, 7698, 7752), 0), 0, Tag1 ("Refl__Tools", 635)), 0); Tag1 (("make", 8783), ([((("arity")), 100000000, 0, -309); ((("rec_group")), 100000000, 0, -311); ((("kinds")), 100000000, 0, -312)], 3, [[(("f", 813), 0, (Tag10 ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [(Tag9 (("a")), 100000000, 0, -299); (Tag9 (("structure")), 100000000, 0, -300); ((("arity")), 100000000, 0, -309); ((("rec_group")), 100000000, 0, -311); ((("kinds")), 100000000, 0, -312); (Tag9 (("ap")), 100000000, 0, -301); (Tag9 (("an")), 100000000, 0, -302); (Tag9 (("ad")), 100000000, 0, -303); (Tag9 (("gadt")), 100000000, 0, -304)], (0)), 100000000, 0, -310), (Tag1 (0, (Tag3 ((("t", 8780)), [((("arity")), 100000000, 0, -309); (Tag9 (("ad")), 100000000, 0, -303)], (0)), 100000000, 0, -308), (Tag3 (Tag1 ((("T", 8778)), "t"), [(Tag9 (("a")), 100000000, 0, -299)], (0)), 100000000, 0, -307), 0), 100000000, 0, -306), 0), 100000000, 0, -305), [(Tag9 (("a")), 100000000, 0, -299); (Tag9 (("structure")), 100000000, 0, -300); (Tag9 (("ap")), 100000000, 0, -301); (Tag9 (("an")), 100000000, 0, -302); (Tag9 (("ad")), 100000000, 0, -303); (Tag9 (("gadt")), 100000000, 0, -304)]), 100000000, 0, -298), (("runtime/tools.ml", 243, 7799, 7805), ("runtime/tools.ml", 245, 7918, 7962), 0), 0, Tag1 ("Refl__Tools", 637))]], 1, 0, [63; 15; 63], [0; 0; 0], 0, 0, (("runtime/tools.ml", 242, 7754, 7756), ("runtime/tools.ml", 246, 7963, 7968), 0), 0, 0, 1, Tag1 ("Refl__Tools", 636)), 1, 0); (("make", 8784), ((Tag1 (0, (Tag3 ((("make", 8783)), [((("arity")), 100000000, 0, -284); ((("rec_group")), 100000000, 0, -294); ((("kinds")), 100000000, 0, -295)], (0)), 100000000, 0, -297), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((("types")), 100000000, 0, -281); ((("structures")), 100000000, 0, -293); ((("arity")), 100000000, 0, -284); ((("rec_group")), 100000000, 0, -294); ((("kinds")), 100000000, 0, -295); ((("arguments")), 100000000, 0, -291); ((("gadt")), 100000000, 0, -296)], (0)), 100000000, 0, -292), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_skip"), [((("positive")), 100000000, 0, -287); ((("negative")), 100000000, 0, -288); ((("direct")), 100000000, 0, -285); ((("subpositive")), 100000000, 0, -289); ((("subnegative")), 100000000, 0, -290); ((("subdirect")), 100000000, 0, -282); ((("arguments")), 100000000, 0, -291)], (0)), 100000000, 0, -286), (Tag1 (0, (Tag3 ((("t", 8780)), [((("arity")), 100000000, 0, -284); ((("direct")), 100000000, 0, -285)], (0)), 100000000, 0, -283), (Tag3 ((("t", 8780)), [((("types")), 100000000, 0, -281); ((("subdirect")), 100000000, 0, -282)], (0)), 100000000, 0, -280), 0), 100000000, 0, -279), 0), 100000000, 0, -278), 0), 100000000, 0, -277), 0), 100000000, 0, -276), 0, (("runtime/tools.ml", 248, 7970, 7972), ("runtime/tools.ml", 255, 8251, 8277), 0), 0, Tag1 ("Refl__Tools", 638)), 0); Tag1 (("any", 8785), ([((("presence")), 100000000, 0, -275)], 1, Tag1 ([(("None", 816), (0), ((Tag3 ((("any", 8785)), [(Tag8 (([("Absent", (0))], (0, 100000000, 0, -269), 1, 0, 0)), 100000000, 0, -268)], (0)), 100000000, 0, -267)), (("runtime/tools.ml", 258, 8302, 8306), ("runtime/tools.ml", 258, 8302, 8328), 0), 0, Tag1 ("Refl__Tools", 640)); (("Some", 817), Tag1 ([(("item", 818), 0, (Tag10 ((Tag3 (Tag1 ((("T", 8778)), "t"), [(Tag9 (("a")), 100000000, 0, -273)], (0)), 100000000, 0, -274), [(Tag9 (("a")), 100000000, 0, -273)]), 100000000, 0, -272), (("runtime/tools.ml", 260, 8344, 8354), ("runtime/tools.ml", 260, 8344, 8373), 0), 0, Tag1 ("Refl__Tools", 641))]), ((Tag3 ((("any", 8785)), [((0), 100000000, 0, -271)], (0)), 100000000, 0, -270)), (("runtime/tools.ml", 259, 8329, 8333), ("runtime/tools.ml", 261, 8374, 8392), 0), 0, Tag1 ("Refl__Tools", 642))], 0), 1, 0, [63], [0], 0, 0, (("runtime/tools.ml", 257, 8279, 8281), ("runtime/tools.ml", 261, 8374, 8392), 0), 0, 0, 0, Tag1 ("Refl__Tools", 639)), 1, 0); (("append", 8786), ((Tag1 (0, (Tag3 ((("any", 8785)), [((("presence")), 100000000, 0, -265)], (0)), 100000000, 0, -266), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "presences"), [((("presence")), 100000000, 0, -265); ((("directs")), 100000000, 0, -262)], (0)), 100000000, 0, -264), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -260); ((("directs")), 100000000, 0, -262)], (0)), 100000000, 0, -263), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("directs")), 100000000, 0, -262); ((("direct")), 100000000, 0, -256); ((("subdirect")), 100000000, 0, -253)], (0)), 100000000, 0, -261), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -260); ((("types")), 100000000, 0, -258)], (0)), 100000000, 0, -259), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("types")), 100000000, 0, -258); ((("arity")), 100000000, 0, -255); ((("subarity")), 100000000, 0, -252)], (0)), 100000000, 0, -257), (Tag1 (0, (Tag3 ((("t", 8780)), [((("arity")), 100000000, 0, -255); ((("direct")), 100000000, 0, -256)], (0)), 100000000, 0, -254), (Tag3 ((("t", 8780)), [((("subarity")), 100000000, 0, -252); ((("subdirect")), 100000000, 0, -253)], (0)), 100000000, 0, -251), 0), 100000000, 0, -250), 0), 100000000, 0, -249), 0), 100000000, 0, -248), 0), 100000000, 0, -247), 0), 100000000, 0, -246), 0), 100000000, 0, -245), 0), 100000000, 0, -244), 0, (("runtime/tools.ml", 263, 8394, 8396), ("runtime/tools.ml", 271, 8649, 8678), 0), 0, Tag1 ("Refl__Tools", 649)), 0); (("to_sequence", 8787), ((Tag1 (0, (Tag3 ((("any", 8785)), [(Tag8 (([("Present", (0))], (0, 100000000, 0, -243), 1, 0, 0)), 100000000, 0, -242)], (0)), 100000000, 0, -241), (Tag1 (0, (Tag3 ((("t", 8780)), [((("sequence")), 100000000, 0, -238); ((("occurrences")), 100000000, 0, -240)], (0)), 100000000, 0, -239), (Tag3 (Tag1 (Tag2 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "Sequence"), (("T", 8778))), "t"), [((("sequence")), 100000000, 0, -238)], (0)), 100000000, 0, -237), 0), 100000000, 0, -236), 0), 100000000, 0, -235), 0, (("runtime/tools.ml", 273, 8680, 8682), ("runtime/tools.ml", 274, 8700, 8776), 0), 0, Tag1 ("Refl__Tools", 650)), 0)])), 0, (("runtime/tools.ml", 222, 7133, 7133), ("runtime/tools.ml", 275, 8777, 8780), 0), Tag1 ("Refl__Tools", 651)), 0); Tag3 (("Vector", 8752), 0, (Tag2 (((("T", 8776)), (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "UnaryTypeS"))), Tag1 ([Tag3 (("T", 8788), 0, (Tag1 ([Tag1 (("t", 8798), ([((("a")), 100000000, 0, -486)], 1, 0, 1, ((Tag3 (Tag1 ((("T", 8776)), "t"), [((("a")), 100000000, 0, -486)], (0)), 100000000, 0, -485)), [7], [2], 0, 0, (("runtime/desc.ml", 45, 1724, 1726), ("runtime/desc.ml", 45, 1724, 1735), 0), 0, 0, 0, Tag1 ("Refl__Desc", 27)), 1, 0)]), 0, (("runtime/tools.ml", 277, 8782, 8797), ("runtime/tools.ml", 277, 8782, 8798), 0), Tag1 ("Refl__Tools", 652)), 0, 0); Tag1 (("item", 8789), ([((("a")), 100000000, 0, -483); ((("occurrence")), 100000000, 0, -484)], 2, Tag1 ([(("None", 804), (0), ((Tag3 ((("item", 8789)), [((0), 100000000, 0, -476); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -478), 1, 0, 0)), 100000000, 0, -477)], (0)), 100000000, 0, -475)), (("runtime/tools.ml", 226, 7216, 7220), ("runtime/tools.ml", 226, 7216, 7248), 0), 0, Tag1 ("Refl__Tools", 629)); (("Some", 805), ([(Tag3 (Tag1 ((("T", 8788)), "t"), [((("a")), 100000000, 0, -480)], (0)), 100000000, 0, -482)]), ((Tag3 ((("item", 8789)), [((("a")), 100000000, 0, -480); ((0), 100000000, 0, -481)], (0)), 100000000, 0, -479)), (("runtime/tools.ml", 227, 7249, 7253), ("runtime/tools.ml", 227, 7249, 7284), 0), 0, Tag1 ("Refl__Tools", 630))], 0), 1, 0, [15; 63], [0; 0], 0, 0, (("runtime/tools.ml", 225, 7184, 7186), ("runtime/tools.ml", 227, 7249, 7284), 0), 0, 0, 0, Tag1 ("Refl__Tools", 628)), 1, 0); Tag1 (("t", 8790), ([((("sequence")), 100000000, 0, -473); ((("occurrences")), 100000000, 0, -474)], 2, Tag1 ([(("[]", 808), (0), ((Tag3 ((("t", 8790)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -462); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -463)], (0)), 100000000, 0, -461)), (("runtime/tools.ml", 230, 7323, 7327), ("runtime/tools.ml", 230, 7323, 7348), 0), 0, Tag1 ("Refl__Tools", 632)); (("::", 809), ([(Tag3 ((("item", 8789)), [((("head")), 100000000, 0, -466); ((("occurrence")), 100000000, 0, -469)], (0)), 100000000, 0, -471); (Tag3 ((("t", 8790)), [((("tail")), 100000000, 0, -467); ((("occurrences")), 100000000, 0, -470)], (0)), 100000000, 0, -472)]), ((Tag3 ((("t", 8790)), [(Tag2 ([((("head")), 100000000, 0, -466); ((("tail")), 100000000, 0, -467)]), 100000000, 0, -465); (Tag2 ([((("occurrence")), 100000000, 0, -469); ((("occurrences")), 100000000, 0, -470)]), 100000000, 0, -468)], (0)), 100000000, 0, -464)), (("runtime/tools.ml", 231, 7349, 7353), ("runtime/tools.ml", 232, 7417, 7470), 0), 0, Tag1 ("Refl__Tools", 633))], 0), 1, 0, [63; 63], [0; 0], 0, 0, (("runtime/tools.ml", 229, 7286, 7288), ("runtime/tools.ml", 232, 7417, 7470), 0), 0, 0, 0, Tag1 ("Refl__Tools", 631)), 1, 0); (("get", 8791), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variable"), [((("index")), 100000000, 0, -459); ((("sequence")), 100000000, 0, -456); ((("value")), 100000000, 0, -454); ((("positive")), 100000000, 0, -460); ((("occurrences")), 100000000, 0, -457)], (0)), 100000000, 0, -458), (Tag1 (0, (Tag3 ((("t", 8790)), [((("sequence")), 100000000, 0, -456); ((("occurrences")), 100000000, 0, -457)], (0)), 100000000, 0, -455), (Tag3 (Tag1 ((("T", 8788)), "t"), [((("value")), 100000000, 0, -454)], (0)), 100000000, 0, -453), 0), 100000000, 0, -452), 0), 100000000, 0, -451), 0, (("runtime/tools.ml", 234, 7472, 7474), ("runtime/tools.ml", 236, 7553, 7600), 0), 0, Tag1 ("Refl__Tools", 634)), 0); (("make_transfer", 8792), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_arguments"), [((("source")), 100000000, 0, -449); ((("sub")), 100000000, 0, -445); ((("arg")), 100000000, 0, -443)], (0)), 100000000, 0, -450), (Tag1 (0, (Tag3 ((("t", 8790)), [((("sequence")), 100000000, 0, -442); ((("source")), 100000000, 0, -449)], (0)), 100000000, 0, -448), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("t", 8790)), [((("sequence")), 100000000, 0, -442); ((("arg")), 100000000, 0, -443)], (0)), 100000000, 0, -441); (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "eq"), [((("sub")), 100000000, 0, -445); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -447), 1, 0, 0)), 100000000, 0, -446)], (0)), 100000000, 0, -444)], (0)), 100000000, 0, -440), 0), 100000000, 0, -439), 0), 100000000, 0, -438), 0, (("runtime/tools.ml", 238, 7602, 7604), ("runtime/tools.ml", 240, 7698, 7752), 0), 0, Tag1 ("Refl__Tools", 635)), 0); Tag1 (("make", 8793), ([((("arity")), 100000000, 0, -434); ((("rec_group")), 100000000, 0, -436); ((("kinds")), 100000000, 0, -437)], 3, [[(("f", 813), 0, (Tag10 ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [(Tag9 (("a")), 100000000, 0, -424); (Tag9 (("structure")), 100000000, 0, -425); ((("arity")), 100000000, 0, -434); ((("rec_group")), 100000000, 0, -436); ((("kinds")), 100000000, 0, -437); (Tag9 (("ap")), 100000000, 0, -426); (Tag9 (("an")), 100000000, 0, -427); (Tag9 (("ad")), 100000000, 0, -428); (Tag9 (("gadt")), 100000000, 0, -429)], (0)), 100000000, 0, -435), (Tag1 (0, (Tag3 ((("t", 8790)), [((("arity")), 100000000, 0, -434); (Tag9 (("ad")), 100000000, 0, -428)], (0)), 100000000, 0, -433), (Tag3 (Tag1 ((("T", 8788)), "t"), [(Tag9 (("a")), 100000000, 0, -424)], (0)), 100000000, 0, -432), 0), 100000000, 0, -431), 0), 100000000, 0, -430), [(Tag9 (("a")), 100000000, 0, -424); (Tag9 (("structure")), 100000000, 0, -425); (Tag9 (("ap")), 100000000, 0, -426); (Tag9 (("an")), 100000000, 0, -427); (Tag9 (("ad")), 100000000, 0, -428); (Tag9 (("gadt")), 100000000, 0, -429)]), 100000000, 0, -423), (("runtime/tools.ml", 243, 7799, 7805), ("runtime/tools.ml", 245, 7918, 7962), 0), 0, Tag1 ("Refl__Tools", 637))]], 1, 0, [63; 15; 63], [0; 0; 0], 0, 0, (("runtime/tools.ml", 242, 7754, 7756), ("runtime/tools.ml", 246, 7963, 7968), 0), 0, 0, 1, Tag1 ("Refl__Tools", 636)), 1, 0); (("make", 8794), ((Tag1 (0, (Tag3 ((("make", 8793)), [((("arity")), 100000000, 0, -409); ((("rec_group")), 100000000, 0, -419); ((("kinds")), 100000000, 0, -420)], (0)), 100000000, 0, -422), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((("types")), 100000000, 0, -406); ((("structures")), 100000000, 0, -418); ((("arity")), 100000000, 0, -409); ((("rec_group")), 100000000, 0, -419); ((("kinds")), 100000000, 0, -420); ((("arguments")), 100000000, 0, -416); ((("gadt")), 100000000, 0, -421)], (0)), 100000000, 0, -417), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_skip"), [((("positive")), 100000000, 0, -412); ((("negative")), 100000000, 0, -413); ((("direct")), 100000000, 0, -410); ((("subpositive")), 100000000, 0, -414); ((("subnegative")), 100000000, 0, -415); ((("subdirect")), 100000000, 0, -407); ((("arguments")), 100000000, 0, -416)], (0)), 100000000, 0, -411), (Tag1 (0, (Tag3 ((("t", 8790)), [((("arity")), 100000000, 0, -409); ((("direct")), 100000000, 0, -410)], (0)), 100000000, 0, -408), (Tag3 ((("t", 8790)), [((("types")), 100000000, 0, -406); ((("subdirect")), 100000000, 0, -407)], (0)), 100000000, 0, -405), 0), 100000000, 0, -404), 0), 100000000, 0, -403), 0), 100000000, 0, -402), 0), 100000000, 0, -401), 0, (("runtime/tools.ml", 248, 7970, 7972), ("runtime/tools.ml", 255, 8251, 8277), 0), 0, Tag1 ("Refl__Tools", 638)), 0); Tag1 (("any", 8795), ([((("presence")), 100000000, 0, -400)], 1, Tag1 ([(("None", 816), (0), ((Tag3 ((("any", 8795)), [(Tag8 (([("Absent", (0))], (0, 100000000, 0, -394), 1, 0, 0)), 100000000, 0, -393)], (0)), 100000000, 0, -392)), (("runtime/tools.ml", 258, 8302, 8306), ("runtime/tools.ml", 258, 8302, 8328), 0), 0, Tag1 ("Refl__Tools", 640)); (("Some", 817), Tag1 ([(("item", 818), 0, (Tag10 ((Tag3 (Tag1 ((("T", 8788)), "t"), [(Tag9 (("a")), 100000000, 0, -398)], (0)), 100000000, 0, -399), [(Tag9 (("a")), 100000000, 0, -398)]), 100000000, 0, -397), (("runtime/tools.ml", 260, 8344, 8354), ("runtime/tools.ml", 260, 8344, 8373), 0), 0, Tag1 ("Refl__Tools", 641))]), ((Tag3 ((("any", 8795)), [((0), 100000000, 0, -396)], (0)), 100000000, 0, -395)), (("runtime/tools.ml", 259, 8329, 8333), ("runtime/tools.ml", 261, 8374, 8392), 0), 0, Tag1 ("Refl__Tools", 642))], 0), 1, 0, [63], [0], 0, 0, (("runtime/tools.ml", 257, 8279, 8281), ("runtime/tools.ml", 261, 8374, 8392), 0), 0, 0, 0, Tag1 ("Refl__Tools", 639)), 1, 0); (("append", 8796), ((Tag1 (0, (Tag3 ((("any", 8795)), [((("presence")), 100000000, 0, -390)], (0)), 100000000, 0, -391), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "presences"), [((("presence")), 100000000, 0, -390); ((("directs")), 100000000, 0, -387)], (0)), 100000000, 0, -389), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -385); ((("directs")), 100000000, 0, -387)], (0)), 100000000, 0, -388), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("directs")), 100000000, 0, -387); ((("direct")), 100000000, 0, -381); ((("subdirect")), 100000000, 0, -378)], (0)), 100000000, 0, -386), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -385); ((("types")), 100000000, 0, -383)], (0)), 100000000, 0, -384), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("types")), 100000000, 0, -383); ((("arity")), 100000000, 0, -380); ((("subarity")), 100000000, 0, -377)], (0)), 100000000, 0, -382), (Tag1 (0, (Tag3 ((("t", 8790)), [((("arity")), 100000000, 0, -380); ((("direct")), 100000000, 0, -381)], (0)), 100000000, 0, -379), (Tag3 ((("t", 8790)), [((("subarity")), 100000000, 0, -377); ((("subdirect")), 100000000, 0, -378)], (0)), 100000000, 0, -376), 0), 100000000, 0, -375), 0), 100000000, 0, -374), 0), 100000000, 0, -373), 0), 100000000, 0, -372), 0), 100000000, 0, -371), 0), 100000000, 0, -370), 0), 100000000, 0, -369), 0, (("runtime/tools.ml", 263, 8394, 8396), ("runtime/tools.ml", 271, 8649, 8678), 0), 0, Tag1 ("Refl__Tools", 649)), 0); (("to_sequence", 8797), ((Tag1 (0, (Tag3 ((("any", 8795)), [(Tag8 (([("Present", (0))], (0, 100000000, 0, -368), 1, 0, 0)), 100000000, 0, -367)], (0)), 100000000, 0, -366), (Tag1 (0, (Tag3 ((("t", 8790)), [((("sequence")), 100000000, 0, -363); ((("occurrences")), 100000000, 0, -365)], (0)), 100000000, 0, -364), (Tag3 (Tag1 (Tag2 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "Sequence"), (("T", 8788))), "t"), [((("sequence")), 100000000, 0, -363)], (0)), 100000000, 0, -362), 0), 100000000, 0, -361), 0), 100000000, 0, -360), 0, (("runtime/tools.ml", 273, 8680, 8682), ("runtime/tools.ml", 274, 8700, 8776), 0), 0, Tag1 ("Refl__Tools", 650)), 0)])), 0, (("runtime/tools.ml", 277, 8782, 8782), ("runtime/tools.ml", 409, 13371, 13374), 0), Tag1 ("Refl__Tools", 1296)), 0, 0); Tag3 (("BinaryVector", 8753), 0, (Tag2 (((("T", 8775)), ((("BinaryTypeS", 8731)))), Tag1 ([Tag1 (("item", 8799), ([((("a")), 100000000, 0, -667); ((("b")), 100000000, 0, -668); ((("occurrence")), 100000000, 0, -669)], 3, Tag1 ([(("None", 1219), (0), ((Tag3 ((("item", 8799)), [((0), 100000000, 0, -658); ((0), 100000000, 0, -659); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -661), 1, 0, 0)), 100000000, 0, -660)], (0)), 100000000, 0, -657)), (("runtime/tools.ml", 413, 13459, 13463), ("runtime/tools.ml", 413, 13459, 13494), 0), 0, Tag1 ("Refl__Tools", 1299)); (("Some", 1220), ([(Tag3 (Tag1 ((("T", 8775)), "t"), [((("a")), 100000000, 0, -663); ((("b")), 100000000, 0, -664)], (0)), 100000000, 0, -666)]), ((Tag3 ((("item", 8799)), [((("a")), 100000000, 0, -663); ((("b")), 100000000, 0, -664); ((0), 100000000, 0, -665)], (0)), 100000000, 0, -662)), (("runtime/tools.ml", 414, 13495, 13499), ("runtime/tools.ml", 414, 13495, 13540), 0), 0, Tag1 ("Refl__Tools", 1300))], 0), 1, 0, [15; 15; 63], [0; 0; 0], 0, 0, (("runtime/tools.ml", 412, 13423, 13425), ("runtime/tools.ml", 414, 13495, 13540), 0), 0, 0, 0, Tag1 ("Refl__Tools", 1298)), 1, 0); Tag1 (("t", 8800), ([((("a")), 100000000, 0, -654); ((("b")), 100000000, 0, -655); ((("occurrences")), 100000000, 0, -656)], 3, Tag1 ([(("[]", 1222), (0), ((Tag3 ((("t", 8800)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -639); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -640); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -641)], (0)), 100000000, 0, -638)), (("runtime/tools.ml", 417, 13576, 13580), ("runtime/tools.ml", 417, 13576, 13607), 0), 0, Tag1 ("Refl__Tools", 1302)); (("::", 1223), ([(Tag3 ((("item", 8799)), [((("head_a")), 100000000, 0, -644); ((("head_b")), 100000000, 0, -647); ((("occurrence")), 100000000, 0, -650)], (0)), 100000000, 0, -652); (Tag3 ((("t", 8800)), [((("tail_a")), 100000000, 0, -645); ((("tail_b")), 100000000, 0, -648); ((("occurrences")), 100000000, 0, -651)], (0)), 100000000, 0, -653)]), ((Tag3 ((("t", 8800)), [(Tag2 ([((("head_a")), 100000000, 0, -644); ((("tail_a")), 100000000, 0, -645)]), 100000000, 0, -643); (Tag2 ([((("head_b")), 100000000, 0, -647); ((("tail_b")), 100000000, 0, -648)]), 100000000, 0, -646); (Tag2 ([((("occurrence")), 100000000, 0, -650); ((("occurrences")), 100000000, 0, -651)]), 100000000, 0, -649)], (0)), 100000000, 0, -642)), (("runtime/tools.ml", 418, 13608, 13612), ("runtime/tools.ml", 420, 13706, 13782), 0), 0, Tag1 ("Refl__Tools", 1303))], 0), 1, 0, [63; 63; 63], [0; 0; 0], 0, 0, (("runtime/tools.ml", 416, 13542, 13544), ("runtime/tools.ml", 420, 13706, 13782), 0), 0, 0, 0, Tag1 ("Refl__Tools", 1301)), 1, 0); (("get", 8801), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variable"), [((("index")), 100000000, 0, -635); ((("a")), 100000000, 0, -631); ((("value_a")), 100000000, 0, -628); ((("positive")), 100000000, 0, -636); ((("occurrences")), 100000000, 0, -633)], (0)), 100000000, 0, -637), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variable"), [((("index")), 100000000, 0, -635); ((("b")), 100000000, 0, -632); ((("value_b")), 100000000, 0, -629); ((("positive")), 100000000, 0, -636); ((("occurrences")), 100000000, 0, -633)], (0)), 100000000, 0, -634), (Tag1 (0, (Tag3 ((("t", 8800)), [((("a")), 100000000, 0, -631); ((("b")), 100000000, 0, -632); ((("occurrences")), 100000000, 0, -633)], (0)), 100000000, 0, -630), (Tag3 (Tag1 ((("T", 8775)), "t"), [((("value_a")), 100000000, 0, -628); ((("value_b")), 100000000, 0, -629)], (0)), 100000000, 0, -627), 0), 100000000, 0, -626), 0), 100000000, 0, -625), 0), 100000000, 0, -624), 0, (("runtime/tools.ml", 422, 13784, 13794), ("runtime/tools.ml", 422, 13784, 13797), 0), 0, Tag1 ("Refl__Tools", 1304)), 0); (("make_transfer", 8802), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_arguments"), [((("source")), 100000000, 0, -622); ((("sub")), 100000000, 0, -618); ((("arg")), 100000000, 0, -616)], (0)), 100000000, 0, -623), (Tag1 (0, (Tag3 ((("t", 8800)), [((("a")), 100000000, 0, -614); ((("b")), 100000000, 0, -615); ((("source")), 100000000, 0, -622)], (0)), 100000000, 0, -621), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("t", 8800)), [((("a")), 100000000, 0, -614); ((("b")), 100000000, 0, -615); ((("arg")), 100000000, 0, -616)], (0)), 100000000, 0, -613); (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "eq"), [((("sub")), 100000000, 0, -618); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -620), 1, 0, 0)), 100000000, 0, -619)], (0)), 100000000, 0, -617)], (0)), 100000000, 0, -612), 0), 100000000, 0, -611), 0), 100000000, 0, -610), 0, (("runtime/tools.ml", 432, 14226, 14236), ("runtime/tools.ml", 432, 14226, 14249), 0), 0, Tag1 ("Refl__Tools", 1407)), 0); Tag1 (("make", 8803), ([((("arity_a")), 100000000, 0, -602); ((("arity_b")), 100000000, 0, -603); ((("rec_group")), 100000000, 0, -605); ((("kinds")), 100000000, 0, -606); ((("gadt_a")), 100000000, 0, -609); ((("gadt_b")), 100000000, 0, -607)], 6, [[(("f", 1345), 0, (Tag10 ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [(Tag9 (("a")), 100000000, 0, -591); (Tag9 (("structure")), 100000000, 0, -593); ((("arity_a")), 100000000, 0, -602); ((("rec_group")), 100000000, 0, -605); ((("kinds")), 100000000, 0, -606); (Tag9 (("ap")), 100000000, 0, -594); (Tag9 (("an")), 100000000, 0, -595); (Tag9 (("ad")), 100000000, 0, -596); ((("gadt_a")), 100000000, 0, -609)], (0)), 100000000, 0, -608), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [(Tag9 (("b")), 100000000, 0, -592); (Tag9 (("structure")), 100000000, 0, -593); ((("arity_b")), 100000000, 0, -603); ((("rec_group")), 100000000, 0, -605); ((("kinds")), 100000000, 0, -606); (Tag9 (("ap")), 100000000, 0, -594); (Tag9 (("an")), 100000000, 0, -595); (Tag9 (("ad")), 100000000, 0, -596); ((("gadt_b")), 100000000, 0, -607)], (0)), 100000000, 0, -604), (Tag1 (0, (Tag3 ((("t", 8800)), [((("arity_a")), 100000000, 0, -602); ((("arity_b")), 100000000, 0, -603); (Tag9 (("ad")), 100000000, 0, -596)], (0)), 100000000, 0, -601), (Tag3 (Tag1 ((("T", 8775)), "t"), [(Tag9 (("a")), 100000000, 0, -591); (Tag9 (("b")), 100000000, 0, -592)], (0)), 100000000, 0, -600), 0), 100000000, 0, -599), 0), 100000000, 0, -598), 0), 100000000, 0, -597), [(Tag9 (("a")), 100000000, 0, -591); (Tag9 (("b")), 100000000, 0, -592); (Tag9 (("structure")), 100000000, 0, -593); (Tag9 (("ap")), 100000000, 0, -594); (Tag9 (("an")), 100000000, 0, -595); (Tag9 (("ad")), 100000000, 0, -596)]), 100000000, 0, -590), (("runtime/tools.ml", 453, 15037, 15043), ("runtime/tools.ml", 457, 15254, 15316), 0), 0, Tag1 ("Refl__Tools", 1502))]], 1, 0, [63; 63; 15; 63; 15; 15], [0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 452, 14962, 14964), ("runtime/tools.ml", 458, 15317, 15322), 0), 0, 0, 1, Tag1 ("Refl__Tools", 1501)), 1, 0); (("make_transfer_vector", 8804), ((Tag1 (0, (Tag3 ((("make", 8803)), [((("arity_a")), 100000000, 0, -573); ((("arity_b")), 100000000, 0, -574); ((("rec_group")), 100000000, 0, -584); ((("kinds")), 100000000, 0, -585); ((("gadt_a")), 100000000, 0, -588); ((("gadt_b")), 100000000, 0, -586)], (0)), 100000000, 0, -589), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((("types_a")), 100000000, 0, -569); ((("structures")), 100000000, 0, -583); ((("arity_a")), 100000000, 0, -573); ((("rec_group")), 100000000, 0, -584); ((("kinds")), 100000000, 0, -585); ((("arguments")), 100000000, 0, -581); ((("gadt_a")), 100000000, 0, -588)], (0)), 100000000, 0, -587), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((("types_b")), 100000000, 0, -570); ((("structures")), 100000000, 0, -583); ((("arity_b")), 100000000, 0, -574); ((("rec_group")), 100000000, 0, -584); ((("kinds")), 100000000, 0, -585); ((("arguments")), 100000000, 0, -581); ((("gadt_b")), 100000000, 0, -586)], (0)), 100000000, 0, -582), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer"), [((("positive")), 100000000, 0, -577); ((("negative")), 100000000, 0, -578); ((("direct")), 100000000, 0, -575); ((("subpositive")), 100000000, 0, -579); ((("subnegative")), 100000000, 0, -580); ((("subdirect")), 100000000, 0, -571); ((("arguments")), 100000000, 0, -581)], (0)), 100000000, 0, -576), (Tag1 (0, (Tag3 ((("t", 8800)), [((("arity_a")), 100000000, 0, -573); ((("arity_b")), 100000000, 0, -574); ((("direct")), 100000000, 0, -575)], (0)), 100000000, 0, -572), (Tag3 ((("t", 8800)), [((("types_a")), 100000000, 0, -569); ((("types_b")), 100000000, 0, -570); ((("subdirect")), 100000000, 0, -571)], (0)), 100000000, 0, -568), 0), 100000000, 0, -567), 0), 100000000, 0, -566), 0), 100000000, 0, -565), 0), 100000000, 0, -564), 0), 100000000, 0, -563), 0, (("runtime/tools.ml", 460, 15324, 15334), ("runtime/tools.ml", 460, 15324, 15354), 0), 0, Tag1 ("Refl__Tools", 1503)), 0); (("skip", 8805), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "skip_vector"), [((("variables")), 100000000, 0, -561); ((("skip_variables")), 100000000, 0, -559)], (0)), 100000000, 0, -562), (Tag1 (0, (Tag3 ((("t", 8800)), [((("a")), 100000000, 0, -557); ((("b")), 100000000, 0, -558); ((("variables")), 100000000, 0, -561)], (0)), 100000000, 0, -560), (Tag3 ((("t", 8800)), [((("a")), 100000000, 0, -557); ((("b")), 100000000, 0, -558); ((("skip_variables")), 100000000, 0, -559)], (0)), 100000000, 0, -556), 0), 100000000, 0, -555), 0), 100000000, 0, -554), 0, (("runtime/tools.ml", 485, 16403, 16413), ("runtime/tools.ml", 485, 16403, 16417), 0), 0, Tag1 ("Refl__Tools", 1608)), 0); (("make", 8806), ((Tag1 (0, (Tag3 ((("make", 8803)), [((0), 100000000, 0, -537); ((0), 100000000, 0, -538); ((0), 100000000, 0, -548); ((0), 100000000, 0, -549); ((0), 100000000, 0, -552); ((0), 100000000, 0, -550)], (0)), 100000000, 0, -553), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((0), 100000000, 0, -533); ((0), 100000000, 0, -547); ((0), 100000000, 0, -537); ((0), 100000000, 0, -548); ((0), 100000000, 0, -549); ((0), 100000000, 0, -545); ((0), 100000000, 0, -552)], (0)), 100000000, 0, -551), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((0), 100000000, 0, -534); ((0), 100000000, 0, -547); ((0), 100000000, 0, -538); ((0), 100000000, 0, -548); ((0), 100000000, 0, -549); ((0), 100000000, 0, -545); ((0), 100000000, 0, -550)], (0)), 100000000, 0, -546), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_skip"), [((0), 100000000, 0, -541); ((0), 100000000, 0, -542); ((0), 100000000, 0, -539); ((0), 100000000, 0, -543); ((0), 100000000, 0, -544); ((0), 100000000, 0, -535); ((0), 100000000, 0, -545)], (0)), 100000000, 0, -540), (Tag1 (0, (Tag3 ((("t", 8800)), [((0), 100000000, 0, -537); ((0), 100000000, 0, -538); ((0), 100000000, 0, -539)], (0)), 100000000, 0, -536), (Tag3 ((("t", 8800)), [((0), 100000000, 0, -533); ((0), 100000000, 0, -534); ((0), 100000000, 0, -535)], (0)), 100000000, 0, -532), 0), 100000000, 0, -531), 0), 100000000, 0, -530), 0), 100000000, 0, -529), 0), 100000000, 0, -528), 0), 100000000, 0, -527), 0, (("runtime/tools.ml", 497, 16769, 16775), ("runtime/tools.ml", 497, 16769, 16779), 0), 0, Tag1 ("Refl__Tools", 1655)), 0); Tag1 (("any", 8807), ([((("presence")), 100000000, 0, -526)], 1, Tag1 ([(("None", 1456), (0), ((Tag3 ((("any", 8807)), [(Tag8 (([("Absent", (0))], (0, 100000000, 0, -519), 1, 0, 0)), 100000000, 0, -518)], (0)), 100000000, 0, -517)), (("runtime/tools.ml", 503, 16986, 16990), ("runtime/tools.ml", 503, 16986, 17012), 0), 0, Tag1 ("Refl__Tools", 1667)); (("Some", 1457), Tag1 ([(("item", 1458), 0, (Tag10 ((Tag3 (Tag1 ((("T", 8775)), "t"), [(Tag9 (("a")), 100000000, 0, -523); (Tag9 (("b")), 100000000, 0, -524)], (0)), 100000000, 0, -525), [(Tag9 (("a")), 100000000, 0, -523); (Tag9 (("b")), 100000000, 0, -524)]), 100000000, 0, -522), (("runtime/tools.ml", 505, 17028, 17038), ("runtime/tools.ml", 505, 17028, 17066), 0), 0, Tag1 ("Refl__Tools", 1668))]), ((Tag3 ((("any", 8807)), [((0), 100000000, 0, -521)], (0)), 100000000, 0, -520)), (("runtime/tools.ml", 504, 17013, 17017), ("runtime/tools.ml", 506, 17067, 17085), 0), 0, Tag1 ("Refl__Tools", 1669))], 0), 1, 0, [63], [0], 0, 0, (("runtime/tools.ml", 502, 16963, 16965), ("runtime/tools.ml", 506, 17067, 17085), 0), 0, 0, 0, Tag1 ("Refl__Tools", 1666)), 1, 0); (("append", 8808), ((Tag1 (0, (Tag3 ((("any", 8807)), [((("presence")), 100000000, 0, -515)], (0)), 100000000, 0, -516), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "presences"), [((("presence")), 100000000, 0, -515); ((("directs")), 100000000, 0, -512)], (0)), 100000000, 0, -514), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -507); ((("directs")), 100000000, 0, -512)], (0)), 100000000, 0, -513), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("directs")), 100000000, 0, -512); ((("direct")), 100000000, 0, -503); ((("subdirect")), 100000000, 0, -499)], (0)), 100000000, 0, -511), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -507); ((("types_a")), 100000000, 0, -509)], (0)), 100000000, 0, -510), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("types_a")), 100000000, 0, -509); ((("a")), 100000000, 0, -501); ((("sub_a")), 100000000, 0, -497)], (0)), 100000000, 0, -508), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -507); ((("types_b")), 100000000, 0, -505)], (0)), 100000000, 0, -506), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("types_b")), 100000000, 0, -505); ((("b")), 100000000, 0, -502); ((("sub_b")), 100000000, 0, -498)], (0)), 100000000, 0, -504), (Tag1 (0, (Tag3 ((("t", 8800)), [((("a")), 100000000, 0, -501); ((("b")), 100000000, 0, -502); ((("direct")), 100000000, 0, -503)], (0)), 100000000, 0, -500), (Tag3 ((("t", 8800)), [((("sub_a")), 100000000, 0, -497); ((("sub_b")), 100000000, 0, -498); ((("subdirect")), 100000000, 0, -499)], (0)), 100000000, 0, -496), 0), 100000000, 0, -495), 0), 100000000, 0, -494), 0), 100000000, 0, -493), 0), 100000000, 0, -492), 0), 100000000, 0, -491), 0), 100000000, 0, -490), 0), 100000000, 0, -489), 0), 100000000, 0, -488), 0), 100000000, 0, -487), 0, (("runtime/tools.ml", 508, 17087, 17097), ("runtime/tools.ml", 508, 17087, 17103), 0), 0, Tag1 ("Refl__Tools", 1676)), 0)])), 0, (("runtime/tools.ml", 411, 13376, 13376), ("runtime/tools.ml", 536, 18246, 18249), 0), Tag1 ("Refl__Tools", 1894)), 0, 0); Tag3 (("ParameterizedVector", 8754), 0, (Tag2 (((("T", 8774)), ((("BinaryTypeS", 8731)))), Tag1 ([Tag1 (("item", 8809), ([((("a")), 100000000, 0, -697); ((("b")), 100000000, 0, -698); ((("occurrence")), 100000000, 0, -699)], 3, Tag1 ([(("None", 1586), (0), ((Tag3 ((("item", 8809)), [((0), 100000000, 0, -688); ((0), 100000000, 0, -689); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -691), 1, 0, 0)), 100000000, 0, -690)], (0)), 100000000, 0, -687)), (("runtime/tools.ml", 540, 18341, 18345), ("runtime/tools.ml", 540, 18341, 18376), 0), 0, Tag1 ("Refl__Tools", 1897)); (("Some", 1587), ([(Tag3 (Tag1 ((("T", 8774)), "t"), [((("a")), 100000000, 0, -693); ((("b")), 100000000, 0, -694)], (0)), 100000000, 0, -696)]), ((Tag3 ((("item", 8809)), [((("a")), 100000000, 0, -693); ((("b")), 100000000, 0, -694); ((0), 100000000, 0, -695)], (0)), 100000000, 0, -692)), (("runtime/tools.ml", 541, 18377, 18381), ("runtime/tools.ml", 541, 18377, 18422), 0), 0, Tag1 ("Refl__Tools", 1898))], 0), 1, 0, [15; 15; 63], [0; 0; 0], 0, 0, (("runtime/tools.ml", 539, 18305, 18307), ("runtime/tools.ml", 541, 18377, 18422), 0), 0, 0, 0, Tag1 ("Refl__Tools", 1896)), 1, 0); Tag1 (("t", 8810), ([((("sequence")), 100000000, 0, -684); ((("b")), 100000000, 0, -685); ((("occurrences")), 100000000, 0, -686)], 3, Tag1 ([(("[]", 1589), (0), ((Tag3 ((("t", 8810)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -671); ((0), 100000000, 0, -672); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -673)], (0)), 100000000, 0, -670)), (("runtime/tools.ml", 544, 18465, 18469), ("runtime/tools.ml", 544, 18465, 18493), 0), 0, Tag1 ("Refl__Tools", 1900)); (("::", 1590), ([(Tag3 ((("item", 8809)), [((("head")), 100000000, 0, -676); ((("b")), 100000000, 0, -678); ((("occurrence")), 100000000, 0, -680)], (0)), 100000000, 0, -682); (Tag3 ((("t", 8810)), [((("tail")), 100000000, 0, -677); ((("b")), 100000000, 0, -678); ((("occurrences")), 100000000, 0, -681)], (0)), 100000000, 0, -683)]), ((Tag3 ((("t", 8810)), [(Tag2 ([((("head")), 100000000, 0, -676); ((("tail")), 100000000, 0, -677)]), 100000000, 0, -675); ((("b")), 100000000, 0, -678); (Tag2 ([((("occurrence")), 100000000, 0, -680); ((("occurrences")), 100000000, 0, -681)]), 100000000, 0, -679)], (0)), 100000000, 0, -674)), (("runtime/tools.ml", 545, 18494, 18498), ("runtime/tools.ml", 546, 18570, 18627), 0), 0, Tag1 ("Refl__Tools", 1901))], 0), 1, 0, [63; 15; 63], [0; 0; 0], 0, 0, (("runtime/tools.ml", 543, 18424, 18426), ("runtime/tools.ml", 546, 18570, 18627), 0), 0, 0, 0, Tag1 ("Refl__Tools", 1899)), 1, 0); Tag3 (("Unary", 8811), 0, (Tag2 (((("U", 8812)), ((("TypeS", 8730)))), Tag1 ([Tag3 (("Item", 8813), 0, (Tag1 ([Tag1 (("t", 8826), ([((("a")), 100000000, 0, -836)], 1, 0, 1, ((Tag3 (Tag1 ((("T", 8774)), "t"), [((("a")), 100000000, 0, -836); (Tag3 (Tag1 ((("U", 8812)), "t"), 0, (0)), 100000000, 0, -837)], (0)), 100000000, 0, -835)), [7], [2], 0, 0, (("runtime/tools.ml", 550, 18690, 18696), ("runtime/tools.ml", 550, 18690, 18721), 0), 0, 0, 0, Tag1 ("Refl__Tools", 1903)), 1, 0)]), 0, (("runtime/tools.ml", 549, 18665, 18669), ("runtime/tools.ml", 551, 18722, 18729), 0), Tag1 ("Refl__Tools", 1904)), 0, 0); Tag3 (("Unary", 8814), 0, (Tag1 ([Tag3 (("T", 8827), 0, (Tag1 ([Tag1 (("t", 8837), ([((("a")), 100000000, 0, -968)], 1, 0, 1, ((Tag3 (Tag1 ((("Item", 8813)), "t"), [((("a")), 100000000, 0, -968)], (0)), 100000000, 0, -967)), [7], [2], 0, 0, (("runtime/desc.ml", 45, 1724, 1726), ("runtime/desc.ml", 45, 1724, 1735), 0), 0, 0, 0, Tag1 ("Refl__Desc", 27)), 1, 0)]), 0, (("runtime/tools.ml", 277, 8782, 8797), ("runtime/tools.ml", 277, 8782, 8798), 0), Tag1 ("Refl__Tools", 652)), 0, 0); Tag1 (("item", 8828), ([((("a")), 100000000, 0, -957); ((("occurrence")), 100000000, 0, -958)], 2, Tag1 ([(("None", 804), (0), ((Tag3 ((("item", 8828)), [((0), 100000000, 0, -960); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -962), 1, 0, 0)), 100000000, 0, -961)], (0)), 100000000, 0, -959)), (("runtime/tools.ml", 226, 7216, 7220), ("runtime/tools.ml", 226, 7216, 7248), 0), 0, Tag1 ("Refl__Tools", 629)); (("Some", 805), ([(Tag3 (Tag1 ((("T", 8827)), "t"), [((("a")), 100000000, 0, -964)], (0)), 100000000, 0, -966)]), ((Tag3 ((("item", 8828)), [((("a")), 100000000, 0, -964); ((0), 100000000, 0, -965)], (0)), 100000000, 0, -963)), (("runtime/tools.ml", 227, 7249, 7253), ("runtime/tools.ml", 227, 7249, 7284), 0), 0, Tag1 ("Refl__Tools", 630))], 0), 1, ((Tag3 (Tag1 (Tag2 ((("Vector", 8752)), (("Item", 8813))), "item"), [((("a")), 100000000, 0, -957); ((("occurrence")), 100000000, 0, -958)], (0)), 100000000, 0, -956)), [15; 63], [0; 0], 0, 0, (("runtime/tools.ml", 225, 7184, 7186), ("runtime/tools.ml", 227, 7249, 7284), 0), 0, 0, 0, Tag1 ("Refl__Tools", 628)), 1, 0); Tag1 (("t", 8829), ([((("sequence")), 100000000, 0, -942); ((("occurrences")), 100000000, 0, -943)], 2, Tag1 ([(("[]", 808), (0), ((Tag3 ((("t", 8829)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -945); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -946)], (0)), 100000000, 0, -944)), (("runtime/tools.ml", 230, 7323, 7327), ("runtime/tools.ml", 230, 7323, 7348), 0), 0, Tag1 ("Refl__Tools", 632)); (("::", 809), ([(Tag3 ((("item", 8828)), [((("head")), 100000000, 0, -949); ((("occurrence")), 100000000, 0, -952)], (0)), 100000000, 0, -954); (Tag3 ((("t", 8829)), [((("tail")), 100000000, 0, -950); ((("occurrences")), 100000000, 0, -953)], (0)), 100000000, 0, -955)]), ((Tag3 ((("t", 8829)), [(Tag2 ([((("head")), 100000000, 0, -949); ((("tail")), 100000000, 0, -950)]), 100000000, 0, -948); (Tag2 ([((("occurrence")), 100000000, 0, -952); ((("occurrences")), 100000000, 0, -953)]), 100000000, 0, -951)], (0)), 100000000, 0, -947)), (("runtime/tools.ml", 231, 7349, 7353), ("runtime/tools.ml", 232, 7417, 7470), 0), 0, Tag1 ("Refl__Tools", 633))], 0), 1, ((Tag3 (Tag1 (Tag2 ((("Vector", 8752)), (("Item", 8813))), "t"), [((("sequence")), 100000000, 0, -942); ((("occurrences")), 100000000, 0, -943)], (0)), 100000000, 0, -941)), [63; 63], [0; 0], 0, 0, (("runtime/tools.ml", 229, 7286, 7288), ("runtime/tools.ml", 232, 7417, 7470), 0), 0, 0, 0, Tag1 ("Refl__Tools", 631)), 1, 0); (("get", 8830), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variable"), [((("index")), 100000000, 0, -939); ((("sequence")), 100000000, 0, -936); ((("value")), 100000000, 0, -934); ((("positive")), 100000000, 0, -940); ((("occurrences")), 100000000, 0, -937)], (0)), 100000000, 0, -938), (Tag1 (0, (Tag3 ((("t", 8829)), [((("sequence")), 100000000, 0, -936); ((("occurrences")), 100000000, 0, -937)], (0)), 100000000, 0, -935), (Tag3 (Tag1 ((("T", 8827)), "t"), [((("value")), 100000000, 0, -934)], (0)), 100000000, 0, -933), 0), 100000000, 0, -932), 0), 100000000, 0, -931), 0, (("runtime/tools.ml", 234, 7472, 7474), ("runtime/tools.ml", 236, 7553, 7600), 0), 0, Tag1 ("Refl__Tools", 634)), 0); (("make_transfer", 8831), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_arguments"), [((("source")), 100000000, 0, -929); ((("sub")), 100000000, 0, -925); ((("arg")), 100000000, 0, -923)], (0)), 100000000, 0, -930), (Tag1 (0, (Tag3 ((("t", 8829)), [((("sequence")), 100000000, 0, -922); ((("source")), 100000000, 0, -929)], (0)), 100000000, 0, -928), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("t", 8829)), [((("sequence")), 100000000, 0, -922); ((("arg")), 100000000, 0, -923)], (0)), 100000000, 0, -921); (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "eq"), [((("sub")), 100000000, 0, -925); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -927), 1, 0, 0)), 100000000, 0, -926)], (0)), 100000000, 0, -924)], (0)), 100000000, 0, -920), 0), 100000000, 0, -919), 0), 100000000, 0, -918), 0, (("runtime/tools.ml", 238, 7602, 7604), ("runtime/tools.ml", 240, 7698, 7752), 0), 0, Tag1 ("Refl__Tools", 635)), 0); Tag1 (("make", 8832), ([((("arity")), 100000000, 0, -903); ((("rec_group")), 100000000, 0, -904); ((("kinds")), 100000000, 0, -905)], 3, [[(("f", 813), 0, (Tag10 ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [(Tag9 (("a")), 100000000, 0, -907); (Tag9 (("structure")), 100000000, 0, -908); ((("arity")), 100000000, 0, -903); ((("rec_group")), 100000000, 0, -904); ((("kinds")), 100000000, 0, -905); (Tag9 (("ap")), 100000000, 0, -909); (Tag9 (("an")), 100000000, 0, -910); (Tag9 (("ad")), 100000000, 0, -911); (Tag9 (("gadt")), 100000000, 0, -912)], (0)), 100000000, 0, -917), (Tag1 (0, (Tag3 ((("t", 8829)), [((("arity")), 100000000, 0, -903); (Tag9 (("ad")), 100000000, 0, -911)], (0)), 100000000, 0, -916), (Tag3 (Tag1 ((("T", 8827)), "t"), [(Tag9 (("a")), 100000000, 0, -907)], (0)), 100000000, 0, -915), 0), 100000000, 0, -914), 0), 100000000, 0, -913), [(Tag9 (("a")), 100000000, 0, -907); (Tag9 (("structure")), 100000000, 0, -908); (Tag9 (("ap")), 100000000, 0, -909); (Tag9 (("an")), 100000000, 0, -910); (Tag9 (("ad")), 100000000, 0, -911); (Tag9 (("gadt")), 100000000, 0, -912)]), 100000000, 0, -906), (("runtime/tools.ml", 243, 7799, 7805), ("runtime/tools.ml", 245, 7918, 7962), 0), 0, Tag1 ("Refl__Tools", 637))]], 1, ((Tag3 (Tag1 (Tag2 ((("Vector", 8752)), (("Item", 8813))), "make"), [((("arity")), 100000000, 0, -903); ((("rec_group")), 100000000, 0, -904); ((("kinds")), 100000000, 0, -905)], (0)), 100000000, 0, -902)), [63; 15; 63], [0; 0; 0], 0, 0, (("runtime/tools.ml", 242, 7754, 7756), ("runtime/tools.ml", 246, 7963, 7968), 0), 0, 0, 1, Tag1 ("Refl__Tools", 636)), 1, 0); (("make", 8833), ((Tag1 (0, (Tag3 ((("make", 8832)), [((("arity")), 100000000, 0, -888); ((("rec_group")), 100000000, 0, -898); ((("kinds")), 100000000, 0, -899)], (0)), 100000000, 0, -901), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((("types")), 100000000, 0, -885); ((("structures")), 100000000, 0, -897); ((("arity")), 100000000, 0, -888); ((("rec_group")), 100000000, 0, -898); ((("kinds")), 100000000, 0, -899); ((("arguments")), 100000000, 0, -895); ((("gadt")), 100000000, 0, -900)], (0)), 100000000, 0, -896), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_skip"), [((("positive")), 100000000, 0, -891); ((("negative")), 100000000, 0, -892); ((("direct")), 100000000, 0, -889); ((("subpositive")), 100000000, 0, -893); ((("subnegative")), 100000000, 0, -894); ((("subdirect")), 100000000, 0, -886); ((("arguments")), 100000000, 0, -895)], (0)), 100000000, 0, -890), (Tag1 (0, (Tag3 ((("t", 8829)), [((("arity")), 100000000, 0, -888); ((("direct")), 100000000, 0, -889)], (0)), 100000000, 0, -887), (Tag3 ((("t", 8829)), [((("types")), 100000000, 0, -885); ((("subdirect")), 100000000, 0, -886)], (0)), 100000000, 0, -884), 0), 100000000, 0, -883), 0), 100000000, 0, -882), 0), 100000000, 0, -881), 0), 100000000, 0, -880), 0, (("runtime/tools.ml", 248, 7970, 7972), ("runtime/tools.ml", 255, 8251, 8277), 0), 0, Tag1 ("Refl__Tools", 638)), 0); Tag1 (("any", 8834), ([((("presence")), 100000000, 0, -871)], 1, Tag1 ([(("None", 816), (0), ((Tag3 ((("any", 8834)), [(Tag8 (([("Absent", (0))], (0, 100000000, 0, -874), 1, 0, 0)), 100000000, 0, -873)], (0)), 100000000, 0, -872)), (("runtime/tools.ml", 258, 8302, 8306), ("runtime/tools.ml", 258, 8302, 8328), 0), 0, Tag1 ("Refl__Tools", 640)); (("Some", 817), Tag1 ([(("item", 818), 0, (Tag10 ((Tag3 (Tag1 ((("T", 8827)), "t"), [(Tag9 (("a")), 100000000, 0, -878)], (0)), 100000000, 0, -879), [(Tag9 (("a")), 100000000, 0, -878)]), 100000000, 0, -877), (("runtime/tools.ml", 260, 8344, 8354), ("runtime/tools.ml", 260, 8344, 8373), 0), 0, Tag1 ("Refl__Tools", 641))]), ((Tag3 ((("any", 8834)), [((0), 100000000, 0, -876)], (0)), 100000000, 0, -875)), (("runtime/tools.ml", 259, 8329, 8333), ("runtime/tools.ml", 261, 8374, 8392), 0), 0, Tag1 ("Refl__Tools", 642))], 0), 1, ((Tag3 (Tag1 (Tag2 ((("Vector", 8752)), (("Item", 8813))), "any"), [((("presence")), 100000000, 0, -871)], (0)), 100000000, 0, -870)), [63], [0], 0, 0, (("runtime/tools.ml", 257, 8279, 8281), ("runtime/tools.ml", 261, 8374, 8392), 0), 0, 0, 0, Tag1 ("Refl__Tools", 639)), 1, 0); (("append", 8835), ((Tag1 (0, (Tag3 ((("any", 8834)), [((("presence")), 100000000, 0, -868)], (0)), 100000000, 0, -869), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "presences"), [((("presence")), 100000000, 0, -868); ((("directs")), 100000000, 0, -865)], (0)), 100000000, 0, -867), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -863); ((("directs")), 100000000, 0, -865)], (0)), 100000000, 0, -866), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("directs")), 100000000, 0, -865); ((("direct")), 100000000, 0, -859); ((("subdirect")), 100000000, 0, -856)], (0)), 100000000, 0, -864), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -863); ((("types")), 100000000, 0, -861)], (0)), 100000000, 0, -862), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("types")), 100000000, 0, -861); ((("arity")), 100000000, 0, -858); ((("subarity")), 100000000, 0, -855)], (0)), 100000000, 0, -860), (Tag1 (0, (Tag3 ((("t", 8829)), [((("arity")), 100000000, 0, -858); ((("direct")), 100000000, 0, -859)], (0)), 100000000, 0, -857), (Tag3 ((("t", 8829)), [((("subarity")), 100000000, 0, -855); ((("subdirect")), 100000000, 0, -856)], (0)), 100000000, 0, -854), 0), 100000000, 0, -853), 0), 100000000, 0, -852), 0), 100000000, 0, -851), 0), 100000000, 0, -850), 0), 100000000, 0, -849), 0), 100000000, 0, -848), 0), 100000000, 0, -847), 0, (("runtime/tools.ml", 263, 8394, 8396), ("runtime/tools.ml", 271, 8649, 8678), 0), 0, Tag1 ("Refl__Tools", 649)), 0); (("to_sequence", 8836), ((Tag1 (0, (Tag3 ((("any", 8834)), [(Tag8 (([("Present", (0))], (0, 100000000, 0, -846), 1, 0, 0)), 100000000, 0, -845)], (0)), 100000000, 0, -844), (Tag1 (0, (Tag3 ((("t", 8829)), [((("sequence")), 100000000, 0, -841); ((("occurrences")), 100000000, 0, -843)], (0)), 100000000, 0, -842), (Tag3 (Tag1 (Tag2 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "Sequence"), (("T", 8827))), "t"), [((("sequence")), 100000000, 0, -841)], (0)), 100000000, 0, -840), 0), 100000000, 0, -839), 0), 100000000, 0, -838), 0, (("runtime/tools.ml", 273, 8680, 8682), ("runtime/tools.ml", 274, 8700, 8776), 0), 0, Tag1 ("Refl__Tools", 650)), 0)]), 0, (("runtime/tools.ml", 553, 18731, 18735), ("runtime/tools.ml", 553, 18731, 18763), 0), Tag1 ("Refl__Tools", 1905)), 0, 0); (("to_unary", 8815), ((Tag1 (0, (Tag3 ((("t", 8810)), [((("sequence")), 100000000, 0, -831); (Tag3 (Tag1 ((("U", 8812)), "t"), 0, (0)), 100000000, 0, -834); ((("occurrences")), 100000000, 0, -832)], (0)), 100000000, 0, -833), (Tag3 (Tag1 ((("Unary", 8814)), "t"), [((("sequence")), 100000000, 0, -831); ((("occurrences")), 100000000, 0, -832)], (0)), 100000000, 0, -830), 0), 100000000, 0, -829), 0, (("runtime/tools.ml", 555, 18765, 18777), ("runtime/tools.ml", 555, 18765, 18785), 0), 0, Tag1 ("Refl__Tools", 1907)), 0); Tag3 (("T", 8816), 0, (Tag3 (Tag1 ((("Unary", 8814)), "T")), 0, (("runtime/tools.ml", 277, 8782, 8797), ("runtime/tools.ml", 277, 8782, 8798), 0), Tag1 ("Refl__Tools", 652)), 0, 0); Tag1 (("item", 8817), ([((("a")), 100000000, 0, -819); ((("occurrence")), 100000000, 0, -820)], 2, Tag1 ([(("None", 804), (0), ((Tag3 ((("item", 8817)), [((0), 100000000, 0, -822); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -824), 1, 0, 0)), 100000000, 0, -823)], (0)), 100000000, 0, -821)), (("runtime/tools.ml", 226, 7216, 7220), ("runtime/tools.ml", 226, 7216, 7248), 0), 0, Tag1 ("Refl__Tools", 629)); (("Some", 805), ([(Tag3 (Tag1 ((("T", 8816)), "t"), [((("a")), 100000000, 0, -826)], (0)), 100000000, 0, -828)]), ((Tag3 ((("item", 8817)), [((("a")), 100000000, 0, -826); ((0), 100000000, 0, -827)], (0)), 100000000, 0, -825)), (("runtime/tools.ml", 227, 7249, 7253), ("runtime/tools.ml", 227, 7249, 7284), 0), 0, Tag1 ("Refl__Tools", 630))], 0), 1, ((Tag3 (Tag1 (Tag2 ((("Vector", 8752)), (("Item", 8813))), "item"), [((("a")), 100000000, 0, -819); ((("occurrence")), 100000000, 0, -820)], (0)), 100000000, 0, -818)), [15; 63], [0; 0], 0, 0, (("runtime/tools.ml", 225, 7184, 7186), ("runtime/tools.ml", 227, 7249, 7284), 0), 0, 0, 0, Tag1 ("Refl__Tools", 628)), 1, 0); Tag1 (("t", 8818), ([((("sequence")), 100000000, 0, -804); ((("occurrences")), 100000000, 0, -805)], 2, Tag1 ([(("[]", 808), (0), ((Tag3 ((("t", 8818)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -807); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -808)], (0)), 100000000, 0, -806)), (("runtime/tools.ml", 230, 7323, 7327), ("runtime/tools.ml", 230, 7323, 7348), 0), 0, Tag1 ("Refl__Tools", 632)); (("::", 809), ([(Tag3 ((("item", 8817)), [((("head")), 100000000, 0, -811); ((("occurrence")), 100000000, 0, -814)], (0)), 100000000, 0, -816); (Tag3 ((("t", 8818)), [((("tail")), 100000000, 0, -812); ((("occurrences")), 100000000, 0, -815)], (0)), 100000000, 0, -817)]), ((Tag3 ((("t", 8818)), [(Tag2 ([((("head")), 100000000, 0, -811); ((("tail")), 100000000, 0, -812)]), 100000000, 0, -810); (Tag2 ([((("occurrence")), 100000000, 0, -814); ((("occurrences")), 100000000, 0, -815)]), 100000000, 0, -813)], (0)), 100000000, 0, -809)), (("runtime/tools.ml", 231, 7349, 7353), ("runtime/tools.ml", 232, 7417, 7470), 0), 0, Tag1 ("Refl__Tools", 633))], 0), 1, ((Tag3 (Tag1 (Tag2 ((("Vector", 8752)), (("Item", 8813))), "t"), [((("sequence")), 100000000, 0, -804); ((("occurrences")), 100000000, 0, -805)], (0)), 100000000, 0, -803)), [63; 63], [0; 0], 0, 0, (("runtime/tools.ml", 229, 7286, 7288), ("runtime/tools.ml", 232, 7417, 7470), 0), 0, 0, 0, Tag1 ("Refl__Tools", 631)), 1, 0); (("get", 8819), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variable"), [((("index")), 100000000, 0, -801); ((("sequence")), 100000000, 0, -798); ((("value")), 100000000, 0, -796); ((("positive")), 100000000, 0, -802); ((("occurrences")), 100000000, 0, -799)], (0)), 100000000, 0, -800), (Tag1 (0, (Tag3 ((("t", 8818)), [((("sequence")), 100000000, 0, -798); ((("occurrences")), 100000000, 0, -799)], (0)), 100000000, 0, -797), (Tag3 (Tag1 ((("T", 8816)), "t"), [((("value")), 100000000, 0, -796)], (0)), 100000000, 0, -795), 0), 100000000, 0, -794), 0), 100000000, 0, -793), 0, (("runtime/tools.ml", 234, 7472, 7474), ("runtime/tools.ml", 236, 7553, 7600), 0), 0, Tag1 ("Refl__Tools", 634)), 0); (("make_transfer", 8820), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_arguments"), [((("source")), 100000000, 0, -791); ((("sub")), 100000000, 0, -787); ((("arg")), 100000000, 0, -785)], (0)), 100000000, 0, -792), (Tag1 (0, (Tag3 ((("t", 8818)), [((("sequence")), 100000000, 0, -784); ((("source")), 100000000, 0, -791)], (0)), 100000000, 0, -790), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("t", 8818)), [((("sequence")), 100000000, 0, -784); ((("arg")), 100000000, 0, -785)], (0)), 100000000, 0, -783); (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "eq"), [((("sub")), 100000000, 0, -787); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -789), 1, 0, 0)), 100000000, 0, -788)], (0)), 100000000, 0, -786)], (0)), 100000000, 0, -782), 0), 100000000, 0, -781), 0), 100000000, 0, -780), 0, (("runtime/tools.ml", 238, 7602, 7604), ("runtime/tools.ml", 240, 7698, 7752), 0), 0, Tag1 ("Refl__Tools", 635)), 0); Tag1 (("make", 8821), ([((("arity")), 100000000, 0, -765); ((("rec_group")), 100000000, 0, -766); ((("kinds")), 100000000, 0, -767)], 3, [[(("f", 813), 0, (Tag10 ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [(Tag9 (("a")), 100000000, 0, -769); (Tag9 (("structure")), 100000000, 0, -770); ((("arity")), 100000000, 0, -765); ((("rec_group")), 100000000, 0, -766); ((("kinds")), 100000000, 0, -767); (Tag9 (("ap")), 100000000, 0, -771); (Tag9 (("an")), 100000000, 0, -772); (Tag9 (("ad")), 100000000, 0, -773); (Tag9 (("gadt")), 100000000, 0, -774)], (0)), 100000000, 0, -779), (Tag1 (0, (Tag3 ((("t", 8818)), [((("arity")), 100000000, 0, -765); (Tag9 (("ad")), 100000000, 0, -773)], (0)), 100000000, 0, -778), (Tag3 (Tag1 ((("T", 8816)), "t"), [(Tag9 (("a")), 100000000, 0, -769)], (0)), 100000000, 0, -777), 0), 100000000, 0, -776), 0), 100000000, 0, -775), [(Tag9 (("a")), 100000000, 0, -769); (Tag9 (("structure")), 100000000, 0, -770); (Tag9 (("ap")), 100000000, 0, -771); (Tag9 (("an")), 100000000, 0, -772); (Tag9 (("ad")), 100000000, 0, -773); (Tag9 (("gadt")), 100000000, 0, -774)]), 100000000, 0, -768), (("runtime/tools.ml", 243, 7799, 7805), ("runtime/tools.ml", 245, 7918, 7962), 0), 0, Tag1 ("Refl__Tools", 637))]], 1, ((Tag3 (Tag1 (Tag2 ((("Vector", 8752)), (("Item", 8813))), "make"), [((("arity")), 100000000, 0, -765); ((("rec_group")), 100000000, 0, -766); ((("kinds")), 100000000, 0, -767)], (0)), 100000000, 0, -764)), [63; 15; 63], [0; 0; 0], 0, 0, (("runtime/tools.ml", 242, 7754, 7756), ("runtime/tools.ml", 246, 7963, 7968), 0), 0, 0, 1, Tag1 ("Refl__Tools", 636)), 1, 0); (("make", 8822), ((Tag1 (0, (Tag3 ((("make", 8821)), [((("arity")), 100000000, 0, -750); ((("rec_group")), 100000000, 0, -760); ((("kinds")), 100000000, 0, -761)], (0)), 100000000, 0, -763), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((("types")), 100000000, 0, -747); ((("structures")), 100000000, 0, -759); ((("arity")), 100000000, 0, -750); ((("rec_group")), 100000000, 0, -760); ((("kinds")), 100000000, 0, -761); ((("arguments")), 100000000, 0, -757); ((("gadt")), 100000000, 0, -762)], (0)), 100000000, 0, -758), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_skip"), [((("positive")), 100000000, 0, -753); ((("negative")), 100000000, 0, -754); ((("direct")), 100000000, 0, -751); ((("subpositive")), 100000000, 0, -755); ((("subnegative")), 100000000, 0, -756); ((("subdirect")), 100000000, 0, -748); ((("arguments")), 100000000, 0, -757)], (0)), 100000000, 0, -752), (Tag1 (0, (Tag3 ((("t", 8818)), [((("arity")), 100000000, 0, -750); ((("direct")), 100000000, 0, -751)], (0)), 100000000, 0, -749), (Tag3 ((("t", 8818)), [((("types")), 100000000, 0, -747); ((("subdirect")), 100000000, 0, -748)], (0)), 100000000, 0, -746), 0), 100000000, 0, -745), 0), 100000000, 0, -744), 0), 100000000, 0, -743), 0), 100000000, 0, -742), 0, (("runtime/tools.ml", 248, 7970, 7972), ("runtime/tools.ml", 255, 8251, 8277), 0), 0, Tag1 ("Refl__Tools", 638)), 0); Tag1 (("any", 8823), ([((("presence")), 100000000, 0, -733)], 1, Tag1 ([(("None", 816), (0), ((Tag3 ((("any", 8823)), [(Tag8 (([("Absent", (0))], (0, 100000000, 0, -736), 1, 0, 0)), 100000000, 0, -735)], (0)), 100000000, 0, -734)), (("runtime/tools.ml", 258, 8302, 8306), ("runtime/tools.ml", 258, 8302, 8328), 0), 0, Tag1 ("Refl__Tools", 640)); (("Some", 817), Tag1 ([(("item", 818), 0, (Tag10 ((Tag3 (Tag1 ((("T", 8816)), "t"), [(Tag9 (("a")), 100000000, 0, -740)], (0)), 100000000, 0, -741), [(Tag9 (("a")), 100000000, 0, -740)]), 100000000, 0, -739), (("runtime/tools.ml", 260, 8344, 8354), ("runtime/tools.ml", 260, 8344, 8373), 0), 0, Tag1 ("Refl__Tools", 641))]), ((Tag3 ((("any", 8823)), [((0), 100000000, 0, -738)], (0)), 100000000, 0, -737)), (("runtime/tools.ml", 259, 8329, 8333), ("runtime/tools.ml", 261, 8374, 8392), 0), 0, Tag1 ("Refl__Tools", 642))], 0), 1, ((Tag3 (Tag1 (Tag2 ((("Vector", 8752)), (("Item", 8813))), "any"), [((("presence")), 100000000, 0, -733)], (0)), 100000000, 0, -732)), [63], [0], 0, 0, (("runtime/tools.ml", 257, 8279, 8281), ("runtime/tools.ml", 261, 8374, 8392), 0), 0, 0, 0, Tag1 ("Refl__Tools", 639)), 1, 0); (("append", 8824), ((Tag1 (0, (Tag3 ((("any", 8823)), [((("presence")), 100000000, 0, -730)], (0)), 100000000, 0, -731), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "presences"), [((("presence")), 100000000, 0, -730); ((("directs")), 100000000, 0, -727)], (0)), 100000000, 0, -729), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -725); ((("directs")), 100000000, 0, -727)], (0)), 100000000, 0, -728), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("directs")), 100000000, 0, -727); ((("direct")), 100000000, 0, -721); ((("subdirect")), 100000000, 0, -718)], (0)), 100000000, 0, -726), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -725); ((("types")), 100000000, 0, -723)], (0)), 100000000, 0, -724), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("types")), 100000000, 0, -723); ((("arity")), 100000000, 0, -720); ((("subarity")), 100000000, 0, -717)], (0)), 100000000, 0, -722), (Tag1 (0, (Tag3 ((("t", 8818)), [((("arity")), 100000000, 0, -720); ((("direct")), 100000000, 0, -721)], (0)), 100000000, 0, -719), (Tag3 ((("t", 8818)), [((("subarity")), 100000000, 0, -717); ((("subdirect")), 100000000, 0, -718)], (0)), 100000000, 0, -716), 0), 100000000, 0, -715), 0), 100000000, 0, -714), 0), 100000000, 0, -713), 0), 100000000, 0, -712), 0), 100000000, 0, -711), 0), 100000000, 0, -710), 0), 100000000, 0, -709), 0, (("runtime/tools.ml", 263, 8394, 8396), ("runtime/tools.ml", 271, 8649, 8678), 0), 0, Tag1 ("Refl__Tools", 649)), 0); (("to_sequence", 8825), ((Tag1 (0, (Tag3 ((("any", 8823)), [(Tag8 (([("Present", (0))], (0, 100000000, 0, -708), 1, 0, 0)), 100000000, 0, -707)], (0)), 100000000, 0, -706), (Tag1 (0, (Tag3 ((("t", 8818)), [((("sequence")), 100000000, 0, -703); ((("occurrences")), 100000000, 0, -705)], (0)), 100000000, 0, -704), (Tag3 (Tag1 (Tag2 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "Sequence"), (("T", 8816))), "t"), [((("sequence")), 100000000, 0, -703)], (0)), 100000000, 0, -702), 0), 100000000, 0, -701), 0), 100000000, 0, -700), 0, (("runtime/tools.ml", 273, 8680, 8682), ("runtime/tools.ml", 274, 8700, 8776), 0), 0, Tag1 ("Refl__Tools", 650)), 0)])), 0, (("runtime/tools.ml", 548, 18629, 18631), ("runtime/tools.ml", 566, 19082, 19087), 0), Tag1 ("Refl__Tools", 1931)), 0, 0)])), 0, (("runtime/tools.ml", 538, 18251, 18251), ("runtime/tools.ml", 567, 19088, 19091), 0), Tag1 ("Refl__Tools", 1932)), 0, 0); Tag3 (("SignedVector", 8755), 0, (Tag2 (((("T", 8773)), ((("BinaryTypeS", 8731)))), Tag1 ([Tag1 (("item", 8838), ([((("a")), 100000000, 0, -1262); ((("b")), 100000000, 0, -1263); ((("positive")), 100000000, 0, -1264); ((("negative")), 100000000, 0, -1265)], 4, Tag1 ([(("None", 1668), (0), ((Tag3 ((("item", 8838)), [((("a")), 100000000, 0, -1234); ((("b")), 100000000, 0, -1235); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -1237), 1, 0, 0)), 100000000, 0, -1236); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -1239), 1, 0, 0)), 100000000, 0, -1238)], (0)), 100000000, 0, -1233)), (("runtime/tools.ml", 571, 19185, 19189), ("runtime/tools.ml", 571, 19185, 19234), 0), 0, Tag1 ("Refl__Tools", 1935)); (("P", 1669), ([(Tag3 (Tag1 ((("T", 8773)), "t"), [((("a")), 100000000, 0, -1241); ((("b")), 100000000, 0, -1242)], (0)), 100000000, 0, -1246)]), ((Tag3 ((("item", 8838)), [((("a")), 100000000, 0, -1241); ((("b")), 100000000, 0, -1242); ((0), 100000000, 0, -1243); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -1245), 1, 0, 0)), 100000000, 0, -1244)], (0)), 100000000, 0, -1240)), (("runtime/tools.ml", 572, 19235, 19239), ("runtime/tools.ml", 572, 19235, 19288), 0), 0, Tag1 ("Refl__Tools", 1936)); (("N", 1670), ([(Tag3 (Tag1 ((("T", 8773)), "t"), [((("b")), 100000000, 0, -1249); ((("a")), 100000000, 0, -1248)], (0)), 100000000, 0, -1253)]), ((Tag3 ((("item", 8838)), [((("a")), 100000000, 0, -1248); ((("b")), 100000000, 0, -1249); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -1251), 1, 0, 0)), 100000000, 0, -1250); ((0), 100000000, 0, -1252)], (0)), 100000000, 0, -1247)), (("runtime/tools.ml", 573, 19289, 19293), ("runtime/tools.ml", 573, 19289, 19341), 0), 0, Tag1 ("Refl__Tools", 1937)); (("PN", 1671), ([(Tag2 ([(Tag3 (Tag1 ((("T", 8773)), "t"), [((("a")), 100000000, 0, -1255); ((("b")), 100000000, 0, -1256)], (0)), 100000000, 0, -1260); (Tag3 (Tag1 ((("T", 8773)), "t"), [((("b")), 100000000, 0, -1256); ((("a")), 100000000, 0, -1255)], (0)), 100000000, 0, -1261)]), 100000000, 0, -1259)]), ((Tag3 ((("item", 8838)), [((("a")), 100000000, 0, -1255); ((("b")), 100000000, 0, -1256); ((0), 100000000, 0, -1257); ((0), 100000000, 0, -1258)], (0)), 100000000, 0, -1254)), (("runtime/tools.ml", 574, 19342, 19346), ("runtime/tools.ml", 574, 19342, 19405), 0), 0, Tag1 ("Refl__Tools", 1938))], 0), 1, 0, [15; 15; 63; 63], [0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 570, 19140, 19142), ("runtime/tools.ml", 574, 19342, 19405), 0), 0, 0, 0, Tag1 ("Refl__Tools", 1934)), 1, 0); Tag1 (("t", 8839), ([((("a")), 100000000, 0, -1229); ((("b")), 100000000, 0, -1230); ((("positive")), 100000000, 0, -1231); ((("negative")), 100000000, 0, -1232)], 4, Tag1 ([(("[]", 1673), (0), ((Tag3 ((("t", 8839)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1210); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1211); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1212); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1213)], (0)), 100000000, 0, -1209)), (("runtime/tools.ml", 577, 19449, 19453), ("runtime/tools.ml", 577, 19449, 19486), 0), 0, Tag1 ("Refl__Tools", 1940)); (("::", 1674), ([(Tag3 ((("item", 8838)), [((("a")), 100000000, 0, -1216); ((("b")), 100000000, 0, -1219); ((("positive")), 100000000, 0, -1222); ((("negative")), 100000000, 0, -1225)], (0)), 100000000, 0, -1227); (Tag3 ((("t", 8839)), [((("aa")), 100000000, 0, -1217); ((("bb")), 100000000, 0, -1220); ((("positive_tail")), 100000000, 0, -1223); ((("negative_tail")), 100000000, 0, -1226)], (0)), 100000000, 0, -1228)]), ((Tag3 ((("t", 8839)), [(Tag2 ([((("a")), 100000000, 0, -1216); ((("aa")), 100000000, 0, -1217)]), 100000000, 0, -1215); (Tag2 ([((("b")), 100000000, 0, -1219); ((("bb")), 100000000, 0, -1220)]), 100000000, 0, -1218); (Tag2 ([((("positive")), 100000000, 0, -1222); ((("positive_tail")), 100000000, 0, -1223)]), 100000000, 0, -1221); (Tag2 ([((("negative")), 100000000, 0, -1225); ((("negative_tail")), 100000000, 0, -1226)]), 100000000, 0, -1224)], (0)), 100000000, 0, -1214)), (("runtime/tools.ml", 578, 19487, 19491), ("runtime/tools.ml", 581, 19651, 19690), 0), 0, Tag1 ("Refl__Tools", 1941))], 0), 1, 0, [63; 63; 63; 63], [0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 576, 19407, 19409), ("runtime/tools.ml", 581, 19651, 19690), 0), 0, 0, 0, Tag1 ("Refl__Tools", 1939)), 1, 0); (("reverse_item", 8840), ((Tag1 (0, (Tag3 ((("item", 8838)), [((("a")), 100000000, 0, -1205); ((("b")), 100000000, 0, -1204); ((("positive")), 100000000, 0, -1207); ((("negative")), 100000000, 0, -1206)], (0)), 100000000, 0, -1208), (Tag3 ((("item", 8838)), [((("b")), 100000000, 0, -1204); ((("a")), 100000000, 0, -1205); ((("negative")), 100000000, 0, -1206); ((("positive")), 100000000, 0, -1207)], (0)), 100000000, 0, -1203), 0), 100000000, 0, -1202), 0, (("runtime/tools.ml", 583, 19692, 19698), ("runtime/tools.ml", 583, 19692, 19710), 0), 0, Tag1 ("Refl__Tools", 1942)), 0); (("pos", 8841), ((Tag1 (0, (Tag3 ((("item", 8838)), [((("a")), 100000000, 0, -1196); ((("b")), 100000000, 0, -1197); (Tag8 (([("Present", (0))], (0, 100000000, 0, -1200), 1, 0, 0)), 100000000, 0, -1199); ((("negative")), 100000000, 0, -1201)], (0)), 100000000, 0, -1198), (Tag3 (Tag1 ((("T", 8773)), "t"), [((("a")), 100000000, 0, -1196); ((("b")), 100000000, 0, -1197)], (0)), 100000000, 0, -1195), 0), 100000000, 0, -1194), 0, (("runtime/tools.ml", 592, 19915, 19921), ("runtime/tools.ml", 592, 19915, 19924), 0), 0, Tag1 ("Refl__Tools", 1953)), 0); (("get", 8842), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variable"), [((("index")), 100000000, 0, -1191); ((("a")), 100000000, 0, -1186); ((("a_value")), 100000000, 0, -1183); ((("positive")), 100000000, 0, -1188); ((("direct")), 100000000, 0, -1192)], (0)), 100000000, 0, -1193), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variable"), [((("index")), 100000000, 0, -1191); ((("b")), 100000000, 0, -1187); ((("b_value")), 100000000, 0, -1184); ((("positive")), 100000000, 0, -1188); ((("direct")), 100000000, 0, -1192)], (0)), 100000000, 0, -1190), (Tag1 (0, (Tag3 ((("t", 8839)), [((("a")), 100000000, 0, -1186); ((("b")), 100000000, 0, -1187); ((("positive")), 100000000, 0, -1188); ((("negative")), 100000000, 0, -1189)], (0)), 100000000, 0, -1185), (Tag3 (Tag1 ((("T", 8773)), "t"), [((("a_value")), 100000000, 0, -1183); ((("b_value")), 100000000, 0, -1184)], (0)), 100000000, 0, -1182), 0), 100000000, 0, -1181), 0), 100000000, 0, -1180), 0), 100000000, 0, -1179), 0, (("runtime/tools.ml", 597, 20051, 20061), ("runtime/tools.ml", 597, 20051, 20064), 0), 0, Tag1 ("Refl__Tools", 1958)), 0); (("reverse", 8843), ((Tag1 (0, (Tag3 ((("t", 8839)), [((("a")), 100000000, 0, -1175); ((("b")), 100000000, 0, -1174); ((("positive")), 100000000, 0, -1177); ((("negative")), 100000000, 0, -1176)], (0)), 100000000, 0, -1178), (Tag3 ((("t", 8839)), [((("b")), 100000000, 0, -1174); ((("a")), 100000000, 0, -1175); ((("negative")), 100000000, 0, -1176); ((("positive")), 100000000, 0, -1177)], (0)), 100000000, 0, -1173), 0), 100000000, 0, -1172), 0, (("runtime/tools.ml", 607, 20491, 20501), ("runtime/tools.ml", 607, 20491, 20508), 0), 0, Tag1 ("Refl__Tools", 2055)), 0); Tag1 (("symmetric_item", 8844), ([((("a")), 100000000, 0, -1168); ((("b")), 100000000, 0, -1169); ((("positive")), 100000000, 0, -1170); ((("negative")), 100000000, 0, -1171)], 4, Tag1 ([(("SNone", 1769), (0), ((Tag3 ((("symmetric_item", 8844)), [((("a")), 100000000, 0, -1154); ((("b")), 100000000, 0, -1155); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -1157), 1, 0, 0)), 100000000, 0, -1156); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -1159), 1, 0, 0)), 100000000, 0, -1158)], (0)), 100000000, 0, -1153)), (("runtime/tools.ml", 616, 20745, 20749), ("runtime/tools.ml", 616, 20745, 20805), 0), 0, Tag1 ("Refl__Tools", 2079)); (("SPN", 1770), ([(Tag2 ([(Tag3 (Tag1 ((("T", 8773)), "t"), [((("a")), 100000000, 0, -1161); ((("b")), 100000000, 0, -1162)], (0)), 100000000, 0, -1166); (Tag3 (Tag1 ((("T", 8773)), "t"), [((("b")), 100000000, 0, -1162); ((("a")), 100000000, 0, -1161)], (0)), 100000000, 0, -1167)]), 100000000, 0, -1165)]), ((Tag3 ((("symmetric_item", 8844)), [((("a")), 100000000, 0, -1161); ((("b")), 100000000, 0, -1162); ((0), 100000000, 0, -1163); ((0), 100000000, 0, -1164)], (0)), 100000000, 0, -1160)), (("runtime/tools.ml", 617, 20806, 20810), ("runtime/tools.ml", 617, 20806, 20880), 0), 0, Tag1 ("Refl__Tools", 2080))], 0), 1, 0, [15; 15; 63; 63], [0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 615, 20690, 20692), ("runtime/tools.ml", 617, 20806, 20880), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2078)), 1, 0); Tag1 (("symmetric", 8845), ([((("a")), 100000000, 0, -1149); ((("b")), 100000000, 0, -1150); ((("positive")), 100000000, 0, -1151); ((("negative")), 100000000, 0, -1152)], 4, Tag1 ([(("[]", 1772), (0), ((Tag3 ((("symmetric", 8845)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1130); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1131); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1132); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1133)], (0)), 100000000, 0, -1129)), (("runtime/tools.ml", 620, 20932, 20936), ("runtime/tools.ml", 620, 20932, 20977), 0), 0, Tag1 ("Refl__Tools", 2082)); (("::", 1773), ([(Tag3 ((("symmetric_item", 8844)), [((("a")), 100000000, 0, -1136); ((("b")), 100000000, 0, -1139); ((("positive")), 100000000, 0, -1142); ((("negative")), 100000000, 0, -1145)], (0)), 100000000, 0, -1147); (Tag3 ((("symmetric", 8845)), [((("aa")), 100000000, 0, -1137); ((("bb")), 100000000, 0, -1140); ((("positive_tail")), 100000000, 0, -1143); ((("negative_tail")), 100000000, 0, -1146)], (0)), 100000000, 0, -1148)]), ((Tag3 ((("symmetric", 8845)), [(Tag2 ([((("a")), 100000000, 0, -1136); ((("aa")), 100000000, 0, -1137)]), 100000000, 0, -1135); (Tag2 ([((("b")), 100000000, 0, -1139); ((("bb")), 100000000, 0, -1140)]), 100000000, 0, -1138); (Tag2 ([((("positive")), 100000000, 0, -1142); ((("positive_tail")), 100000000, 0, -1143)]), 100000000, 0, -1141); (Tag2 ([((("negative")), 100000000, 0, -1145); ((("negative_tail")), 100000000, 0, -1146)]), 100000000, 0, -1144)], (0)), 100000000, 0, -1134)), (("runtime/tools.ml", 621, 20978, 20982), ("runtime/tools.ml", 624, 21160, 21207), 0), 0, Tag1 ("Refl__Tools", 2083))], 0), 1, 0, [63; 63; 63; 63], [0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 619, 20882, 20884), ("runtime/tools.ml", 624, 21160, 21207), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2081)), 1, 0); Tag1 (("make_transfer", 8846), ([((("a")), 100000000, 0, -1123); ((("b")), 100000000, 0, -1124); ((("sp")), 100000000, 0, -1125); ((("sn")), 100000000, 0, -1126); ((("ap")), 100000000, 0, -1127); ((("an")), 100000000, 0, -1128)], 6, Tag1 ([(("TNone", 1775), (0), ((Tag3 ((("make_transfer", 8846)), [((("a")), 100000000, 0, -1089); ((("b")), 100000000, 0, -1090); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -1092), 1, 0, 0)), 100000000, 0, -1091); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -1094), 1, 0, 0)), 100000000, 0, -1093); ((("ap")), 100000000, 0, -1095); ((("an")), 100000000, 0, -1096)], (0)), 100000000, 0, -1088)), (("runtime/tools.ml", 627, 21261, 21265), ("runtime/tools.ml", 627, 21261, 21329), 0), 0, Tag1 ("Refl__Tools", 2085)); (("TP", 1776), ([(Tag3 ((("t", 8839)), [((("a")), 100000000, 0, -1098); ((("b")), 100000000, 0, -1099); ((("ap")), 100000000, 0, -1103); ((("an")), 100000000, 0, -1104)], (0)), 100000000, 0, -1105)]), ((Tag3 ((("make_transfer", 8846)), [((("a")), 100000000, 0, -1098); ((("b")), 100000000, 0, -1099); ((0), 100000000, 0, -1100); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -1102), 1, 0, 0)), 100000000, 0, -1101); ((("ap")), 100000000, 0, -1103); ((("an")), 100000000, 0, -1104)], (0)), 100000000, 0, -1097)), (("runtime/tools.ml", 628, 21330, 21334), ("runtime/tools.ml", 629, 21341, 21419), 0), 0, Tag1 ("Refl__Tools", 2086)); (("TN", 1777), ([(Tag3 ((("t", 8839)), [((("a")), 100000000, 0, -1107); ((("b")), 100000000, 0, -1108); ((("an")), 100000000, 0, -1113); ((("ap")), 100000000, 0, -1112)], (0)), 100000000, 0, -1114)]), ((Tag3 ((("make_transfer", 8846)), [((("a")), 100000000, 0, -1107); ((("b")), 100000000, 0, -1108); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -1110), 1, 0, 0)), 100000000, 0, -1109); ((0), 100000000, 0, -1111); ((("ap")), 100000000, 0, -1112); ((("an")), 100000000, 0, -1113)], (0)), 100000000, 0, -1106)), (("runtime/tools.ml", 630, 21420, 21424), ("runtime/tools.ml", 631, 21431, 21509), 0), 0, Tag1 ("Refl__Tools", 2087)); (("TPN", 1778), ([(Tag3 ((("symmetric", 8845)), [((("a")), 100000000, 0, -1116); ((("b")), 100000000, 0, -1117); ((("an")), 100000000, 0, -1120); ((("ap")), 100000000, 0, -1121)], (0)), 100000000, 0, -1122)]), ((Tag3 ((("make_transfer", 8846)), [((("a")), 100000000, 0, -1116); ((("b")), 100000000, 0, -1117); ((0), 100000000, 0, -1118); ((0), 100000000, 0, -1119); ((("an")), 100000000, 0, -1120); ((("ap")), 100000000, 0, -1121)], (0)), 100000000, 0, -1115)), (("runtime/tools.ml", 632, 21510, 21514), ("runtime/tools.ml", 634, 21587, 21610), 0), 0, Tag1 ("Refl__Tools", 2088))], 0), 1, 0, [63; 63; 63; 63; 63; 63], [0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 626, 21209, 21211), ("runtime/tools.ml", 634, 21587, 21610), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2084)), 1, 0); (("reverse_of_symmetric", 8847), ((Tag1 (0, (Tag3 ((("symmetric", 8845)), [((("a")), 100000000, 0, -1083); ((("b")), 100000000, 0, -1084); ((("positive")), 100000000, 0, -1086); ((("negative")), 100000000, 0, -1085)], (0)), 100000000, 0, -1087), (Tag3 ((("symmetric", 8845)), [((("a")), 100000000, 0, -1083); ((("b")), 100000000, 0, -1084); ((("negative")), 100000000, 0, -1085); ((("positive")), 100000000, 0, -1086)], (0)), 100000000, 0, -1082), 0), 100000000, 0, -1081), 0, (("runtime/tools.ml", 636, 21612, 21622), ("runtime/tools.ml", 636, 21612, 21642), 0), 0, Tag1 ("Refl__Tools", 2089)), 0); (("p_of_symmetric", 8848), ((Tag1 (0, (Tag3 ((("symmetric", 8845)), [((("a")), 100000000, 0, -1076); ((("b")), 100000000, 0, -1077); ((("ap")), 100000000, 0, -1078); ((("an")), 100000000, 0, -1079)], (0)), 100000000, 0, -1080), (Tag3 ((("t", 8839)), [((("a")), 100000000, 0, -1076); ((("b")), 100000000, 0, -1077); ((("ap")), 100000000, 0, -1078); ((("an")), 100000000, 0, -1079)], (0)), 100000000, 0, -1075), 0), 100000000, 0, -1074), 0, (("runtime/tools.ml", 645, 21910, 21920), ("runtime/tools.ml", 645, 21910, 21934), 0), 0, Tag1 ("Refl__Tools", 2128)), 0); (("n_of_symmetric", 8849), ((Tag1 (0, (Tag3 ((("symmetric", 8845)), [((("a")), 100000000, 0, -1069); ((("b")), 100000000, 0, -1070); ((("ap")), 100000000, 0, -1072); ((("an")), 100000000, 0, -1071)], (0)), 100000000, 0, -1073), (Tag3 ((("t", 8839)), [((("a")), 100000000, 0, -1069); ((("b")), 100000000, 0, -1070); ((("an")), 100000000, 0, -1071); ((("ap")), 100000000, 0, -1072)], (0)), 100000000, 0, -1068), 0), 100000000, 0, -1067), 0, (("runtime/tools.ml", 654, 22176, 22186), ("runtime/tools.ml", 654, 22176, 22200), 0), 0, Tag1 ("Refl__Tools", 2168)), 0); (("make_transfer", 8850), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_matrix"), [((("p")), 100000000, 0, -1064); ((("n")), 100000000, 0, -1065); ((("sp")), 100000000, 0, -1059); ((("sn")), 100000000, 0, -1060); ((("ap")), 100000000, 0, -1061); ((("an")), 100000000, 0, -1062)], (0)), 100000000, 0, -1066), (Tag1 (0, (Tag3 ((("t", 8839)), [((("a")), 100000000, 0, -1057); ((("b")), 100000000, 0, -1058); ((("p")), 100000000, 0, -1064); ((("n")), 100000000, 0, -1065)], (0)), 100000000, 0, -1063), (Tag3 ((("make_transfer", 8846)), [((("a")), 100000000, 0, -1057); ((("b")), 100000000, 0, -1058); ((("sp")), 100000000, 0, -1059); ((("sn")), 100000000, 0, -1060); ((("ap")), 100000000, 0, -1061); ((("an")), 100000000, 0, -1062)], (0)), 100000000, 0, -1056), 0), 100000000, 0, -1055), 0), 100000000, 0, -1054), 0, (("runtime/tools.ml", 663, 22442, 22452), ("runtime/tools.ml", 663, 22442, 22465), 0), 0, Tag1 ("Refl__Tools", 2208)), 0); Tag1 (("make", 8851), ([((("rec_group")), 100000000, 0, -1050); ((("a_kinds")), 100000000, 0, -1053); ((("b_kinds")), 100000000, 0, -1051)], 3, [[(("f", 1947), 0, (Tag10 ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [(Tag9 (("a")), 100000000, 0, -1035); (Tag9 (("structure")), 100000000, 0, -1037); (Tag9 (("a_arity")), 100000000, 0, -1038); ((("rec_group")), 100000000, 0, -1050); ((("a_kinds")), 100000000, 0, -1053); (Tag9 (("ap")), 100000000, 0, -1040); (Tag9 (("an")), 100000000, 0, -1041); (Tag9 (("ad")), 100000000, 0, -1042); (Tag9 (("gadt")), 100000000, 0, -1043)], (0)), 100000000, 0, -1052), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [(Tag9 (("b")), 100000000, 0, -1036); (Tag9 (("structure")), 100000000, 0, -1037); (Tag9 (("b_arity")), 100000000, 0, -1039); ((("rec_group")), 100000000, 0, -1050); ((("b_kinds")), 100000000, 0, -1051); (Tag9 (("ap")), 100000000, 0, -1040); (Tag9 (("an")), 100000000, 0, -1041); (Tag9 (("ad")), 100000000, 0, -1042); (Tag9 (("gadt")), 100000000, 0, -1043)], (0)), 100000000, 0, -1049), (Tag1 (0, (Tag3 ((("t", 8839)), [(Tag9 (("a_arity")), 100000000, 0, -1038); (Tag9 (("b_arity")), 100000000, 0, -1039); (Tag9 (("ap")), 100000000, 0, -1040); (Tag9 (("an")), 100000000, 0, -1041)], (0)), 100000000, 0, -1048), (Tag3 (Tag1 ((("T", 8773)), "t"), [(Tag9 (("a")), 100000000, 0, -1035); (Tag9 (("b")), 100000000, 0, -1036)], (0)), 100000000, 0, -1047), 0), 100000000, 0, -1046), 0), 100000000, 0, -1045), 0), 100000000, 0, -1044), [(Tag9 (("a")), 100000000, 0, -1035); (Tag9 (("b")), 100000000, 0, -1036); (Tag9 (("structure")), 100000000, 0, -1037); (Tag9 (("a_arity")), 100000000, 0, -1038); (Tag9 (("b_arity")), 100000000, 0, -1039); (Tag9 (("ap")), 100000000, 0, -1040); (Tag9 (("an")), 100000000, 0, -1041); (Tag9 (("ad")), 100000000, 0, -1042); (Tag9 (("gadt")), 100000000, 0, -1043)]), 100000000, 0, -1034), (("runtime/tools.ml", 718, 25186, 25192), ("runtime/tools.ml", 723, 25445, 25504), 0), 0, Tag1 ("Refl__Tools", 2474))]], 1, 0, [15; 63; 63], [0; 0; 0], 0, 0, (("runtime/tools.ml", 717, 25137, 25139), ("runtime/tools.ml", 724, 25505, 25510), 0), 0, 0, 1, Tag1 ("Refl__Tools", 2473)), 1, 0); (("make_transfer_vector", 8852), ((Tag1 (0, (Tag3 ((("make", 8851)), [((("rec_group")), 100000000, 0, -1029); ((("a_kinds")), 100000000, 0, -1030); ((("a_kinds")), 100000000, 0, -1030)], (0)), 100000000, 0, -1033), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((("a_types")), 100000000, 0, -1014); ((("structures")), 100000000, 0, -1028); ((("a_arity")), 100000000, 0, -1019); ((("rec_group")), 100000000, 0, -1029); ((("a_kinds")), 100000000, 0, -1030); ((("arguments")), 100000000, 0, -1026); ((("gadt")), 100000000, 0, -1031)], (0)), 100000000, 0, -1032), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((("b_types")), 100000000, 0, -1015); ((("structures")), 100000000, 0, -1028); ((("b_arity")), 100000000, 0, -1020); ((("rec_group")), 100000000, 0, -1029); ((("a_kinds")), 100000000, 0, -1030); ((("arguments")), 100000000, 0, -1026); ((("gadt")), 100000000, 0, -1031)], (0)), 100000000, 0, -1027), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer"), [((("positive")), 100000000, 0, -1021); ((("negative")), 100000000, 0, -1022); ((("direct")), 100000000, 0, -1024); ((("subpositive")), 100000000, 0, -1016); ((("subnegative")), 100000000, 0, -1017); ((("subdirect")), 100000000, 0, -1025); ((("arguments")), 100000000, 0, -1026)], (0)), 100000000, 0, -1023), (Tag1 (0, (Tag3 ((("t", 8839)), [((("a_arity")), 100000000, 0, -1019); ((("b_arity")), 100000000, 0, -1020); ((("positive")), 100000000, 0, -1021); ((("negative")), 100000000, 0, -1022)], (0)), 100000000, 0, -1018), (Tag3 ((("t", 8839)), [((("a_types")), 100000000, 0, -1014); ((("b_types")), 100000000, 0, -1015); ((("subpositive")), 100000000, 0, -1016); ((("subnegative")), 100000000, 0, -1017)], (0)), 100000000, 0, -1013), 0), 100000000, 0, -1012), 0), 100000000, 0, -1011), 0), 100000000, 0, -1010), 0), 100000000, 0, -1009), 0), 100000000, 0, -1008), 0, (("runtime/tools.ml", 726, 25512, 25522), ("runtime/tools.ml", 726, 25512, 25542), 0), 0, Tag1 ("Refl__Tools", 2475)), 0); (("skip", 8853), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "skip_vector"), [((("positive")), 100000000, 0, -1004); ((("skip_positive")), 100000000, 0, -1001)], (0)), 100000000, 0, -1007), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "skip_vector"), [((("negative")), 100000000, 0, -1005); ((("skip_negative")), 100000000, 0, -1002)], (0)), 100000000, 0, -1006), (Tag1 (0, (Tag3 ((("t", 8839)), [((("a")), 100000000, 0, -999); ((("b")), 100000000, 0, -1000); ((("positive")), 100000000, 0, -1004); ((("negative")), 100000000, 0, -1005)], (0)), 100000000, 0, -1003), (Tag3 ((("t", 8839)), [((("a")), 100000000, 0, -999); ((("b")), 100000000, 0, -1000); ((("skip_positive")), 100000000, 0, -1001); ((("skip_negative")), 100000000, 0, -1002)], (0)), 100000000, 0, -998), 0), 100000000, 0, -997), 0), 100000000, 0, -996), 0), 100000000, 0, -995), 0, (("runtime/tools.ml", 761, 27127, 27137), ("runtime/tools.ml", 761, 27127, 27141), 0), 0, Tag1 ("Refl__Tools", 2589)), 0); (("make", 8854), ((Tag1 (0, (Tag3 ((("make", 8851)), [((0), 100000000, 0, -990); ((0), 100000000, 0, -991); ((0), 100000000, 0, -991)], (0)), 100000000, 0, -994), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((0), 100000000, 0, -975); ((0), 100000000, 0, -989); ((0), 100000000, 0, -980); ((0), 100000000, 0, -990); ((0), 100000000, 0, -991); ((0), 100000000, 0, -987); ((0), 100000000, 0, -992)], (0)), 100000000, 0, -993), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((0), 100000000, 0, -976); ((0), 100000000, 0, -989); ((0), 100000000, 0, -981); ((0), 100000000, 0, -990); ((0), 100000000, 0, -991); ((0), 100000000, 0, -987); ((0), 100000000, 0, -992)], (0)), 100000000, 0, -988), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_skip"), [((0), 100000000, 0, -982); ((0), 100000000, 0, -983); ((0), 100000000, 0, -985); ((0), 100000000, 0, -977); ((0), 100000000, 0, -978); ((0), 100000000, 0, -986); ((0), 100000000, 0, -987)], (0)), 100000000, 0, -984), (Tag1 (0, (Tag3 ((("t", 8839)), [((0), 100000000, 0, -980); ((0), 100000000, 0, -981); ((0), 100000000, 0, -982); ((0), 100000000, 0, -983)], (0)), 100000000, 0, -979), (Tag3 ((("t", 8839)), [((0), 100000000, 0, -975); ((0), 100000000, 0, -976); ((0), 100000000, 0, -977); ((0), 100000000, 0, -978)], (0)), 100000000, 0, -974), 0), 100000000, 0, -973), 0), 100000000, 0, -972), 0), 100000000, 0, -971), 0), 100000000, 0, -970), 0), 100000000, 0, -969), 0, (("runtime/tools.ml", 785, 28135, 28141), ("runtime/tools.ml", 785, 28135, 28145), 0), 0, Tag1 ("Refl__Tools", 2799)), 0)])), 0, (("runtime/tools.ml", 569, 19093, 19093), ("runtime/tools.ml", 790, 28371, 28374), 0), Tag1 ("Refl__Tools", 2811)), 0, 0); Tag4 (("Desc_type", 8756), ((Tag1 ([Tag1 (("t", 8855), ([((("a")), 100000000, 0, -1266); ((("structure")), 100000000, 0, -1267); ((("arity")), 100000000, 0, -1268); ((("rec_group")), 100000000, 0, -1269); ((("kinds")), 100000000, 0, -1270); ((("positive")), 100000000, 0, -1271); ((("negative")), 100000000, 0, -1272); ((("direct")), 100000000, 0, -1273); ((("gadt")), 100000000, 0, -1274)], 9, 0, 1, 0, [7; 7; 7; 7; 7; 7; 7; 7; 7], [2; 2; 2; 2; 2; 2; 2; 2; 2], 0, 0, (("runtime/tools.ml", 793, 28404, 28406), ("runtime/tools.ml", 794, 28478, 28499), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2812)), 1, 0)])), 0, (("runtime/tools.ml", 792, 28376, 28376), ("runtime/tools.ml", 795, 28500, 28503), 0), Tag1 ("Refl__Tools", 2813)), 0); Tag3 (("Desc_vector", 8757), 0, (Tag2 (((("T", 8772)), ((("Desc_type", 8756)))), Tag1 ([Tag1 (("t", 8856), ([((("sequence")), 100000000, 0, -1303); ((("structure")), 100000000, 0, -1304); ((("arities")), 100000000, 0, -1305); ((("rec_group")), 100000000, 0, -1306); ((("kinds")), 100000000, 0, -1307); ((("positive")), 100000000, 0, -1308); ((("negative")), 100000000, 0, -1309); ((("direct")), 100000000, 0, -1310); ((("gadts")), 100000000, 0, -1311)], 9, Tag1 ([(("[]", 2144), (0), ((Tag3 ((("t", 8856)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1276); ((("structure")), 100000000, 0, -1277); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1278); ((("rec_group")), 100000000, 0, -1279); ((("kinds")), 100000000, 0, -1280); ((("positive")), 100000000, 0, -1281); ((("negative")), 100000000, 0, -1282); ((("direct")), 100000000, 0, -1283); ((("gadts")), 100000000, 0, -1284)], (0)), 100000000, 0, -1275)), (("runtime/tools.ml", 800, 28662, 28666), ("runtime/tools.ml", 802, 28748, 28776), 0), 0, Tag1 ("Refl__Tools", 2816)); (("::", 2145), ([(Tag3 (Tag1 ((("T", 8772)), "t"), [((("head")), 100000000, 0, -1287); ((("structure")), 100000000, 0, -1289); ((("arity")), 100000000, 0, -1291); ((("rec_group")), 100000000, 0, -1293); ((("kinds")), 100000000, 0, -1294); ((("positive")), 100000000, 0, -1295); ((("negative")), 100000000, 0, -1296); ((("direct")), 100000000, 0, -1297); ((("gadt")), 100000000, 0, -1299)], (0)), 100000000, 0, -1301); (Tag3 ((("t", 8856)), [((("tail")), 100000000, 0, -1288); ((("structure")), 100000000, 0, -1289); ((("arities")), 100000000, 0, -1292); ((("rec_group")), 100000000, 0, -1293); ((("kinds")), 100000000, 0, -1294); ((("positive")), 100000000, 0, -1295); ((("negative")), 100000000, 0, -1296); ((("direct")), 100000000, 0, -1297); ((("gadts")), 100000000, 0, -1300)], (0)), 100000000, 0, -1302)]), ((Tag3 ((("t", 8856)), [(Tag2 ([((("head")), 100000000, 0, -1287); ((("tail")), 100000000, 0, -1288)]), 100000000, 0, -1286); ((("structure")), 100000000, 0, -1289); (Tag2 ([((("arity")), 100000000, 0, -1291); ((("arities")), 100000000, 0, -1292)]), 100000000, 0, -1290); ((("rec_group")), 100000000, 0, -1293); ((("kinds")), 100000000, 0, -1294); ((("positive")), 100000000, 0, -1295); ((("negative")), 100000000, 0, -1296); ((("direct")), 100000000, 0, -1297); (Tag2 ([((("gadt")), 100000000, 0, -1299); ((("gadts")), 100000000, 0, -1300)]), 100000000, 0, -1298)], (0)), 100000000, 0, -1285)), (("runtime/tools.ml", 803, 28777, 28781), ("runtime/tools.ml", 809, 29081, 29149), 0), 0, Tag1 ("Refl__Tools", 2817))], 0), 1, 0, [63; 15; 63; 15; 15; 15; 15; 15; 63], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 798, 28549, 28551), ("runtime/tools.ml", 809, 29081, 29149), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2815)), 1, 0)])), 0, (("runtime/tools.ml", 797, 28505, 28505), ("runtime/tools.ml", 810, 29150, 29153), 0), Tag1 ("Refl__Tools", 2818)), 0, 0); Tag3 (("Section", 8758), 0, (Tag1 ([Tag1 (("t", 8857), ([((("index")), 100000000, 0, -1339); ((("sequences")), 100000000, 0, -1340); ((("sequence")), 100000000, 0, -1341); ((("subsequences")), 100000000, 0, -1342)], 4, Tag1 ([(("[]", 2148), (0), ((Tag3 ((("t", 8857)), [((0), 100000000, 0, -1322); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1323); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1324); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1325)], (0)), 100000000, 0, -1321)), (("runtime/tools.ml", 814, 29237, 29241), ("runtime/tools.ml", 814, 29237, 29271), 0), 0, Tag1 ("Refl__Tools", 2820)); (("::", 2149), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "selection"), [((("index")), 100000000, 0, -1327); ((("head")), 100000000, 0, -1329); ((("item")), 100000000, 0, -1332); ((("first")), 100000000, 0, -1335)], (0)), 100000000, 0, -1337); (Tag3 ((("t", 8857)), [((("index")), 100000000, 0, -1327); ((("tail")), 100000000, 0, -1330); ((("items")), 100000000, 0, -1333); ((("others")), 100000000, 0, -1336)], (0)), 100000000, 0, -1338)]), ((Tag3 ((("t", 8857)), [((("index")), 100000000, 0, -1327); (Tag2 ([((("head")), 100000000, 0, -1329); ((("tail")), 100000000, 0, -1330)]), 100000000, 0, -1328); (Tag2 ([((("item")), 100000000, 0, -1332); ((("items")), 100000000, 0, -1333)]), 100000000, 0, -1331); (Tag2 ([((("first")), 100000000, 0, -1335); ((("others")), 100000000, 0, -1336)]), 100000000, 0, -1334)], (0)), 100000000, 0, -1326)), (("runtime/tools.ml", 815, 29272, 29276), ("runtime/tools.ml", 818, 29382, 29451), 0), 0, Tag1 ("Refl__Tools", 2821))], 0), 1, 0, [63; 63; 63; 63], [0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 813, 29179, 29181), ("runtime/tools.ml", 818, 29382, 29451), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2819)), 1, 0); Tag1 (("some", 8858), ([((("index")), 100000000, 0, -1318); ((("sequences")), 100000000, 0, -1319); ((("subsequences")), 100000000, 0, -1320)], 3, Tag1 ([(("Some", 2151), ([(Tag3 ((("t", 8857)), [((("index")), 100000000, 0, -1313); ((("sequences")), 100000000, 0, -1314); ((("sequence")), 100000000, 0, -1317); ((("subsequences")), 100000000, 0, -1315)], (0)), 100000000, 0, -1316)]), ((Tag3 ((("some", 8858)), [((("index")), 100000000, 0, -1313); ((("sequences")), 100000000, 0, -1314); ((("subsequences")), 100000000, 0, -1315)], (0)), 100000000, 0, -1312)), (("runtime/tools.ml", 821, 29503, 29507), ("runtime/tools.ml", 823, 29576, 29626), 0), 0, Tag1 ("Refl__Tools", 2823))], 0), 1, 0, [63; 63; 63], [0; 0; 0], 0, 0, (("runtime/tools.ml", 820, 29453, 29455), ("runtime/tools.ml", 823, 29576, 29626), 0), 0, 0, 1, Tag1 ("Refl__Tools", 2822)), 1, 0)]), 0, (("runtime/tools.ml", 812, 29155, 29155), ("runtime/tools.ml", 824, 29627, 29630), 0), Tag1 ("Refl__Tools", 2824)), 0, 0); Tag1 (("map", 8759), ([((("a_arity")), 100000000, 0, -45); ((("b_arity")), 100000000, 0, -37); ((("rec_group")), 100000000, 0, -38); ((("kinds_a")), 100000000, 0, -46); ((("kinds_b")), 100000000, 0, -39); ((("positive")), 100000000, 0, -40); ((("negative")), 100000000, 0, -41); ((("direct")), 100000000, 0, -42); ((("gadt")), 100000000, 0, -43)], 9, [[(("f", 2154), 0, (Tag10 ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [(Tag9 (("a")), 100000000, 0, -30); (Tag9 (("structure")), 100000000, 0, -32); ((("a_arity")), 100000000, 0, -45); ((("rec_group")), 100000000, 0, -38); ((("kinds_a")), 100000000, 0, -46); ((("positive")), 100000000, 0, -40); ((("negative")), 100000000, 0, -41); ((("direct")), 100000000, 0, -42); ((("gadt")), 100000000, 0, -43)], (0)), 100000000, 0, -44), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [(Tag9 (("b")), 100000000, 0, -31); (Tag9 (("structure")), 100000000, 0, -32); ((("b_arity")), 100000000, 0, -37); ((("rec_group")), 100000000, 0, -38); ((("kinds_b")), 100000000, 0, -39); ((("positive")), 100000000, 0, -40); ((("negative")), 100000000, 0, -41); ((("direct")), 100000000, 0, -42); ((("gadt")), 100000000, 0, -43)], (0)), 100000000, 0, -36), (Tag1 (0, (Tag9 (("a")), 100000000, 0, -30), (Tag9 (("b")), 100000000, 0, -31), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), [(Tag9 (("a")), 100000000, 0, -30); (Tag9 (("b")), 100000000, 0, -31); (Tag9 (("structure")), 100000000, 0, -32)]), 100000000, 0, -29), (("runtime/tools.ml", 828, 29743, 29747), ("runtime/tools.ml", 832, 29956, 29996), 0), 0, Tag1 ("Refl__Tools", 2826))]], 1, 0, [63; 63; 15; 63; 63; 63; 63; 63; 15], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 826, 29632, 29632), ("runtime/tools.ml", 833, 29997, 30000), 0), 0, 0, 1, Tag1 ("Refl__Tools", 2825)), 1, 0); Tag4 (("Mapper", 8760), ((Tag1 ([Tag1 (("positive", 8859), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("runtime/tools.ml", 836, 30027, 30029), ("runtime/tools.ml", 836, 30027, 30042), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2827)), 1, 0); Tag1 (("negative", 8860), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("runtime/tools.ml", 838, 30044, 30046), ("runtime/tools.ml", 838, 30044, 30059), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2828)), 1, 0); Tag1 (("rec_group", 8861), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("runtime/tools.ml", 840, 30061, 30063), ("runtime/tools.ml", 840, 30061, 30077), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2829)), 1, 0); Tag1 (("gadt", 8862), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("runtime/tools.ml", 842, 30079, 30081), ("runtime/tools.ml", 842, 30079, 30090), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2830)), 1, 0); Tag1 (("a_arity", 8863), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("runtime/tools.ml", 844, 30092, 30094), ("runtime/tools.ml", 844, 30092, 30106), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2831)), 1, 0); Tag1 (("b_arity", 8864), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("runtime/tools.ml", 846, 30108, 30110), ("runtime/tools.ml", 846, 30108, 30122), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2832)), 1, 0); Tag1 (("t", 8865), ([((("a_arity")), 100000000, 0, -1382); ((("b_arity")), 100000000, 0, -1383); ((("positive")), 100000000, 0, -1384); ((("negative")), 100000000, 0, -1385)], 4, 0, 1, 0, [7; 7; 7; 7], [2; 2; 2; 2], 0, 0, (("runtime/tools.ml", 848, 30124, 30126), ("runtime/tools.ml", 848, 30124, 30175), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2833)), 1, 0); (("initial", 8866), ((Tag3 ((("t", 8865)), [(Tag3 ((("a_arity", 8863)), 0, (0)), 100000000, 0, -1378); (Tag3 ((("b_arity", 8864)), 0, (0)), 100000000, 0, -1379); (Tag3 ((("positive", 8859)), 0, (0)), 100000000, 0, -1380); (Tag3 ((("negative", 8860)), 0, (0)), 100000000, 0, -1381)], (0)), 100000000, 0, -1377), 0, (("runtime/tools.ml", 850, 30177, 30179), ("runtime/tools.ml", 850, 30177, 30233), 0), 0, Tag1 ("Refl__Tools", 2834)), 0); (("grow", 8867), ((Tag1 (0, (Tag3 ((("t", 8865)), [((("a_arity")), 100000000, 0, -1367); ((("b_arity")), 100000000, 0, -1369); ((("positive")), 100000000, 0, -1372); ((("negative")), 100000000, 0, -1375)], (0)), 100000000, 0, -1376), (Tag3 ((("t", 8865)), [(Tag2 ([((("a")), 100000000, 0, -1366); ((("a_arity")), 100000000, 0, -1367)]), 100000000, 0, -1365); (Tag2 ([((("a")), 100000000, 0, -1366); ((("b_arity")), 100000000, 0, -1369)]), 100000000, 0, -1368); (Tag2 ([((0), 100000000, 0, -1371); ((("positive")), 100000000, 0, -1372)]), 100000000, 0, -1370); (Tag2 ([((0), 100000000, 0, -1374); ((("negative")), 100000000, 0, -1375)]), 100000000, 0, -1373)], (0)), 100000000, 0, -1364), 0), 100000000, 0, -1363), 0, (("runtime/tools.ml", 852, 30235, 30237), ("runtime/tools.ml", 855, 30356, 30382), 0), 0, Tag1 ("Refl__Tools", 2835)), 0); (("map", 8868), ((Tag1 (0, (Tag3 ((("t", 8865)), [((("a_arity")), 100000000, 0, -1359); ((("b_arity")), 100000000, 0, -1351); ((("positive")), 100000000, 0, -1354); ((("negative")), 100000000, 0, -1355)], (0)), 100000000, 0, -1362), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [((("a")), 100000000, 0, -1348); ((("structure")), 100000000, 0, -1350); ((("a_arity")), 100000000, 0, -1359); (Tag3 ((("rec_group", 8861)), 0, (0)), 100000000, 0, -1360); ((("kinds")), 100000000, 0, -1353); ((("positive")), 100000000, 0, -1354); ((("negative")), 100000000, 0, -1355); ((("direct")), 100000000, 0, -1356); (Tag3 ((("gadt", 8862)), 0, (0)), 100000000, 0, -1361)], (0)), 100000000, 0, -1358), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [((("b")), 100000000, 0, -1347); ((("structure")), 100000000, 0, -1350); ((("b_arity")), 100000000, 0, -1351); (Tag3 ((("rec_group", 8861)), 0, (0)), 100000000, 0, -1352); ((("kinds")), 100000000, 0, -1353); ((("positive")), 100000000, 0, -1354); ((("negative")), 100000000, 0, -1355); ((("direct")), 100000000, 0, -1356); (Tag3 ((("gadt", 8862)), 0, (0)), 100000000, 0, -1357)], (0)), 100000000, 0, -1349), (Tag1 (0, ((("a")), 100000000, 0, -1348), ((("b")), 100000000, 0, -1347), 0), 100000000, 0, -1346), 0), 100000000, 0, -1345), 0), 100000000, 0, -1344), 0), 100000000, 0, -1343), 0, (("runtime/tools.ml", 857, 30384, 30386), ("runtime/tools.ml", 862, 30618, 30668), 0), 0, Tag1 ("Refl__Tools", 2836)), 0)])), 0, (("runtime/tools.ml", 835, 30002, 30002), ("runtime/tools.ml", 863, 30669, 30672), 0), Tag1 ("Refl__Tools", 2837)), 0); Tag1 (("map_length", 8761), ([((("count")), 100000000, 0, -28)], 1, Tag1 ([(("MapLength", 2167), Tag1 ([(("length", 2168), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -25); ((0), 100000000, 0, -27)], (0)), 100000000, 0, -26), (("runtime/tools.ml", 867, 30717, 30723), ("runtime/tools.ml", 867, 30717, 30751), 0), 0, Tag1 ("Refl__Tools", 2839))]), ((Tag3 ((("map_length", 8761)), [((("count")), 100000000, 0, -25)], (0)), 100000000, 0, -24)), (("runtime/tools.ml", 866, 30699, 30701), ("runtime/tools.ml", 869, 30761, 30784), 0), 0, Tag1 ("Refl__Tools", 2840))], 0), 1, 0, [63], [0], 0, 0, (("runtime/tools.ml", 865, 30674, 30674), ("runtime/tools.ml", 869, 30761, 30784), 0), 0, 0, 1, Tag1 ("Refl__Tools", 2838)), 1, 0); Tag1 (("make_append", 8762), ([((("types")), 100000000, 0, -22); ((("tail")), 100000000, 0, -23)], 2, Tag1 ([(("MakeAppend", 2170), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("types")), 100000000, 0, -18); ((("tail")), 100000000, 0, -19); ((("append")), 100000000, 0, -21)], (0)), 100000000, 0, -20)]), ((Tag3 ((("make_append", 8762)), [((("types")), 100000000, 0, -18); ((("tail")), 100000000, 0, -19)], (0)), 100000000, 0, -17)), (("runtime/tools.ml", 872, 30821, 30823), ("runtime/tools.ml", 873, 30873, 30906), 0), 0, Tag1 ("Refl__Tools", 2848))], 0), 1, 0, [63; 15], [0; 0], 0, 0, (("runtime/tools.ml", 871, 30786, 30786), ("runtime/tools.ml", 873, 30873, 30906), 0), 0, 0, 1, Tag1 ("Refl__Tools", 2847)), 1, 0); (("make_append", 8763), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -16); ((("types")), 100000000, 0, -13)], (0)), 100000000, 0, -15), (Tag3 ((("make_append", 8762)), [((("types")), 100000000, 0, -13); ((("tail")), 100000000, 0, -14)], (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("runtime/tools.ml", 875, 30908, 30916), ("runtime/tools.ml", 875, 30908, 30927), 0), 0, Tag1 ("Refl__Tools", 2849)), 0); Tag3 (("MapperTools", 8764), 0, (Tag2 (((("M", 8771)), ((("Mapper", 8760)))), Tag1 ([Tag1 (("make_variables", 8869), ([((("types")), 100000000, 0, -1441); ((("arity_a")), 100000000, 0, -1442); ((("arity_b")), 100000000, 0, -1443); ((("subpositive")), 100000000, 0, -1444); ((("subnegative")), 100000000, 0, -1445)], 5, Tag1 ([(("MakeVariables", 2183), Tag1 ([(("subarity_a", 2184), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("types")), 100000000, 0, -1431); ((("arity_a")), 100000000, 0, -1432); ((("subarity_a")), 100000000, 0, -1437)], (0)), 100000000, 0, -1436), (("runtime/tools.ml", 889, 31330, 31338), ("runtime/tools.ml", 889, 31330, 31390), 0), 0, Tag1 ("Refl__Tools", 2865)); (("subarity_b", 2185), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("types")), 100000000, 0, -1431); ((("arity_b")), 100000000, 0, -1433); ((("subarity_b")), 100000000, 0, -1439)], (0)), 100000000, 0, -1438), (("runtime/tools.ml", 890, 31391, 31399), ("runtime/tools.ml", 890, 31391, 31451), 0), 0, Tag1 ("Refl__Tools", 2866)); (("mapper", 2186), 0, (Tag3 (Tag1 ((("M", 8771)), "t"), [((("subarity_a")), 100000000, 0, -1437); ((("subarity_b")), 100000000, 0, -1439); ((("subpositive")), 100000000, 0, -1434); ((("subnegative")), 100000000, 0, -1435)], (0)), 100000000, 0, -1440), (("runtime/tools.ml", 891, 31452, 31460), ("runtime/tools.ml", 892, 31469, 31538), 0), 0, Tag1 ("Refl__Tools", 2867))]), ((Tag3 ((("make_variables", 8869)), [((("types")), 100000000, 0, -1431); ((("arity_a")), 100000000, 0, -1432); ((("arity_b")), 100000000, 0, -1433); ((("subpositive")), 100000000, 0, -1434); ((("subnegative")), 100000000, 0, -1435)], (0)), 100000000, 0, -1430)), (("runtime/tools.ml", 888, 31306, 31310), ("runtime/tools.ml", 894, 31550, 31629), 0), 0, Tag1 ("Refl__Tools", 2868))], 0), 1, 0, [63; 15; 15; 15; 15], [0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 887, 31225, 31227), ("runtime/tools.ml", 894, 31550, 31629), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2864)), 1, 0); (("make_variables_aux", 8870), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -1425); ((("types")), 100000000, 0, -1414)], (0)), 100000000, 0, -1429), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -1425); ((("positives")), 100000000, 0, -1427)], (0)), 100000000, 0, -1428), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("positives")), 100000000, 0, -1427); ((("positive")), 100000000, 0, -1420); ((("subpositive")), 100000000, 0, -1417)], (0)), 100000000, 0, -1426), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -1425); ((("negatives")), 100000000, 0, -1423)], (0)), 100000000, 0, -1424), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("negatives")), 100000000, 0, -1423); ((("negative")), 100000000, 0, -1421); ((("subnegative")), 100000000, 0, -1418)], (0)), 100000000, 0, -1422), (Tag1 (0, (Tag3 (Tag1 ((("M", 8771)), "t"), [((("arity_a")), 100000000, 0, -1415); ((("arity_b")), 100000000, 0, -1416); ((("positive")), 100000000, 0, -1420); ((("negative")), 100000000, 0, -1421)], (0)), 100000000, 0, -1419), (Tag3 ((("make_variables", 8869)), [((("types")), 100000000, 0, -1414); ((("arity_a")), 100000000, 0, -1415); ((("arity_b")), 100000000, 0, -1416); ((("subpositive")), 100000000, 0, -1417); ((("subnegative")), 100000000, 0, -1418)], (0)), 100000000, 0, -1413), 0), 100000000, 0, -1412), 0), 100000000, 0, -1411), 0), 100000000, 0, -1410), 0), 100000000, 0, -1409), 0), 100000000, 0, -1408), 0), 100000000, 0, -1407), 0, (("runtime/tools.ml", 896, 31631, 31641), ("runtime/tools.ml", 896, 31631, 31659), 0), 0, Tag1 ("Refl__Tools", 2875)), 0); (("make_variables", 8871), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((0), 100000000, 0, -1399); ((0), 100000000, 0, -1390)], (0)), 100000000, 0, -1406), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "subvariables"), [((0), 100000000, 0, -1399); ((0), 100000000, 0, -1400); ((0), 100000000, 0, -1396); ((0), 100000000, 0, -1397); ((0), 100000000, 0, -1401); ((0), 100000000, 0, -1402); ((0), 100000000, 0, -1403); ((0), 100000000, 0, -1404); ((0), 100000000, 0, -1393); ((0), 100000000, 0, -1394); ((0), 100000000, 0, -1405)], (0)), 100000000, 0, -1398), (Tag1 (0, (Tag3 (Tag1 ((("M", 8771)), "t"), [((0), 100000000, 0, -1391); ((0), 100000000, 0, -1392); ((0), 100000000, 0, -1396); ((0), 100000000, 0, -1397)], (0)), 100000000, 0, -1395), (Tag3 ((("make_variables", 8869)), [((0), 100000000, 0, -1390); ((0), 100000000, 0, -1391); ((0), 100000000, 0, -1392); ((0), 100000000, 0, -1393); ((0), 100000000, 0, -1394)], (0)), 100000000, 0, -1389), 0), 100000000, 0, -1388), 0), 100000000, 0, -1387), 0), 100000000, 0, -1386), 0, (("runtime/tools.ml", 922, 32755, 32761), ("runtime/tools.ml", 922, 32755, 32775), 0), 0, Tag1 ("Refl__Tools", 2979)), 0)])), 0, (("runtime/tools.ml", 886, 31184, 31184), ("runtime/tools.ml", 927, 32980, 32983), 0), Tag1 ("Refl__Tools", 2987)), 0, 0); (("append_functional", 8765), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("prefix")), 100000000, 0, -8); ((("suffix")), 100000000, 0, -9); ((("result1")), 100000000, 0, -5)], (0)), 100000000, 0, -10), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("prefix")), 100000000, 0, -8); ((("suffix")), 100000000, 0, -9); ((("result2")), 100000000, 0, -6)], (0)), 100000000, 0, -7), (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "eq"), [((("result1")), 100000000, 0, -5); ((("result2")), 100000000, 0, -6)], (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("runtime/tools.ml", 929, 32985, 32993), ("runtime/tools.ml", 929, 32985, 33010), 0), 0, Tag1 ("Refl__Tools", 2988)), 0); Tag3 (("Tuple", 8766), 0, (Tag1 ([Tag3 (("Tuple", 8872), 0, (Tag1 ([Tag1 (("structure", 8885), ([((("types")), 100000000, 0, -1701); ((("structures")), 100000000, 0, -1702); ((("arity")), 100000000, 0, -1703); ((("rec_group")), 100000000, 0, -1704); ((("kinds")), 100000000, 0, -1705); ((("positive")), 100000000, 0, -1706); ((("negative")), 100000000, 0, -1707); ((("direct")), 100000000, 0, -1708); ((("gadt")), 100000000, 0, -1709)], 9, Tag1 ([(("[]", 2280), (0), ((Tag3 ((("structure", 8885)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1676); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1677); ((("arity")), 100000000, 0, -1678); ((("rec_group")), 100000000, 0, -1679); ((("kinds")), 100000000, 0, -1680); ((("positive")), 100000000, 0, -1681); ((("negative")), 100000000, 0, -1682); ((("direct")), 100000000, 0, -1683); ((("gadt")), 100000000, 0, -1684)], (0)), 100000000, 0, -1675)), (("runtime/tools.ml", 945, 33481, 33485), ("runtime/tools.ml", 947, 33572, 33598), 0), 0, Tag1 ("Refl__Tools", 3018)); (("::", 2281), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [((("a")), 100000000, 0, -1687); ((("structure")), 100000000, 0, -1690); ((("arity")), 100000000, 0, -1692); ((("rec_group")), 100000000, 0, -1693); ((("kinds")), 100000000, 0, -1694); ((("positive")), 100000000, 0, -1695); ((("negative")), 100000000, 0, -1696); ((("direct")), 100000000, 0, -1697); ((("gadt")), 100000000, 0, -1698)], (0)), 100000000, 0, -1699); (Tag3 ((("structure", 8885)), [((("types")), 100000000, 0, -1688); ((("structures")), 100000000, 0, -1691); ((("arity")), 100000000, 0, -1692); ((("rec_group")), 100000000, 0, -1693); ((("kinds")), 100000000, 0, -1694); ((("positive")), 100000000, 0, -1695); ((("negative")), 100000000, 0, -1696); ((("direct")), 100000000, 0, -1697); ((("gadt")), 100000000, 0, -1698)], (0)), 100000000, 0, -1700)]), ((Tag3 ((("structure", 8885)), [(Tag2 ([((("a")), 100000000, 0, -1687); ((("types")), 100000000, 0, -1688)]), 100000000, 0, -1686); (Tag2 ([((("structure")), 100000000, 0, -1690); ((("structures")), 100000000, 0, -1691)]), 100000000, 0, -1689); ((("arity")), 100000000, 0, -1692); ((("rec_group")), 100000000, 0, -1693); ((("kinds")), 100000000, 0, -1694); ((("positive")), 100000000, 0, -1695); ((("negative")), 100000000, 0, -1696); ((("direct")), 100000000, 0, -1697); ((("gadt")), 100000000, 0, -1698)], (0)), 100000000, 0, -1685)), (("runtime/tools.ml", 948, 33599, 33603), ("runtime/tools.ml", 954, 33909, 33974), 0), 0, Tag1 ("Refl__Tools", 3019))], 0), 1, 0, [63; 63; 63; 15; 63; 63; 63; 63; 15], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 943, 33366, 33370), ("runtime/tools.ml", 954, 33909, 33974), 0), 0, 0, 0, Tag1 ("Refl__Tools", 3017)), 1, 0); (("of_desc", 8886), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "tuple_structure"), [((("types")), 100000000, 0, -1665); ((("structures")), 100000000, 0, -1666); ((("arity")), 100000000, 0, -1667); ((("rec_group")), 100000000, 0, -1668); ((("kinds")), 100000000, 0, -1669); ((("positive")), 100000000, 0, -1670); ((("negative")), 100000000, 0, -1671); ((("direct")), 100000000, 0, -1672); ((("gadt")), 100000000, 0, -1673)], (0)), 100000000, 0, -1674), (Tag3 ((("structure", 8885)), [((("types")), 100000000, 0, -1665); ((("structures")), 100000000, 0, -1666); ((("arity")), 100000000, 0, -1667); ((("rec_group")), 100000000, 0, -1668); ((("kinds")), 100000000, 0, -1669); ((("positive")), 100000000, 0, -1670); ((("negative")), 100000000, 0, -1671); ((("direct")), 100000000, 0, -1672); ((("gadt")), 100000000, 0, -1673)], (0)), 100000000, 0, -1664), 0), 100000000, 0, -1663), 0, (("runtime/tools.ml", 956, 33976, 33988), ("runtime/tools.ml", 956, 33976, 33995), 0), 0, Tag1 ("Refl__Tools", 3020)), 0); Tag1 (("t", 8887), ([((("types")), 100000000, 0, -1654); ((("structures")), 100000000, 0, -1655); ((("arity")), 100000000, 0, -1656); ((("rec_group")), 100000000, 0, -1657); ((("kinds")), 100000000, 0, -1658); ((("positive")), 100000000, 0, -1659); ((("negative")), 100000000, 0, -1660); ((("direct")), 100000000, 0, -1661); ((("gadt")), 100000000, 0, -1662)], 9, [[(("structure", 2293), 0, (Tag3 ((("structure", 8885)), [((("types")), 100000000, 0, -1654); ((("structures")), 100000000, 0, -1655); ((("arity")), 100000000, 0, -1656); ((("rec_group")), 100000000, 0, -1657); ((("kinds")), 100000000, 0, -1658); ((("positive")), 100000000, 0, -1659); ((("negative")), 100000000, 0, -1660); ((("direct")), 100000000, 0, -1661); ((("gadt")), 100000000, 0, -1662)], (0)), 100000000, 0, -1653), (("runtime/tools.ml", 969, 34486, 34494), ("runtime/tools.ml", 971, 34577, 34626), 0), 0, Tag1 ("Refl__Tools", 3035)); (("values", 2294), 0, ((("types")), 100000000, 0, -1654), (("runtime/tools.ml", 972, 34627, 34635), ("runtime/tools.ml", 972, 34627, 34651), 0), 0, Tag1 ("Refl__Tools", 3036))]], 1, 0, [63; 63; 63; 15; 63; 63; 63; 63; 15], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 967, 34372, 34376), ("runtime/tools.ml", 973, 34652, 34659), 0), 0, 0, 0, Tag1 ("Refl__Tools", 3034)), 1, 0)]), 0, (("runtime/tools.ml", 942, 33342, 33344), ("runtime/tools.ml", 974, 34660, 34665), 0), Tag1 ("Refl__Tools", 3037)), 0, 0); Tag1 (("structure", 8873), ([((("types")), 100000000, 0, -1618); ((("structures")), 100000000, 0, -1619); ((("arity")), 100000000, 0, -1620); ((("rec_group")), 100000000, 0, -1621); ((("kinds")), 100000000, 0, -1622); ((("positive")), 100000000, 0, -1623); ((("negative")), 100000000, 0, -1624); ((("direct")), 100000000, 0, -1625); ((("gadt")), 100000000, 0, -1626)], 9, Tag1 ([(("[]", 2280), (0), ((Tag3 ((("structure", 8873)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1628); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1629); ((("arity")), 100000000, 0, -1630); ((("rec_group")), 100000000, 0, -1631); ((("kinds")), 100000000, 0, -1632); ((("positive")), 100000000, 0, -1633); ((("negative")), 100000000, 0, -1634); ((("direct")), 100000000, 0, -1635); ((("gadt")), 100000000, 0, -1636)], (0)), 100000000, 0, -1627)), (("runtime/tools.ml", 945, 33481, 33485), ("runtime/tools.ml", 947, 33572, 33598), 0), 0, Tag1 ("Refl__Tools", 3018)); (("::", 2281), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [((("a")), 100000000, 0, -1639); ((("structure")), 100000000, 0, -1642); ((("arity")), 100000000, 0, -1644); ((("rec_group")), 100000000, 0, -1645); ((("kinds")), 100000000, 0, -1646); ((("positive")), 100000000, 0, -1647); ((("negative")), 100000000, 0, -1648); ((("direct")), 100000000, 0, -1649); ((("gadt")), 100000000, 0, -1650)], (0)), 100000000, 0, -1651); (Tag3 ((("structure", 8873)), [((("types")), 100000000, 0, -1640); ((("structures")), 100000000, 0, -1643); ((("arity")), 100000000, 0, -1644); ((("rec_group")), 100000000, 0, -1645); ((("kinds")), 100000000, 0, -1646); ((("positive")), 100000000, 0, -1647); ((("negative")), 100000000, 0, -1648); ((("direct")), 100000000, 0, -1649); ((("gadt")), 100000000, 0, -1650)], (0)), 100000000, 0, -1652)]), ((Tag3 ((("structure", 8873)), [(Tag2 ([((("a")), 100000000, 0, -1639); ((("types")), 100000000, 0, -1640)]), 100000000, 0, -1638); (Tag2 ([((("structure")), 100000000, 0, -1642); ((("structures")), 100000000, 0, -1643)]), 100000000, 0, -1641); ((("arity")), 100000000, 0, -1644); ((("rec_group")), 100000000, 0, -1645); ((("kinds")), 100000000, 0, -1646); ((("positive")), 100000000, 0, -1647); ((("negative")), 100000000, 0, -1648); ((("direct")), 100000000, 0, -1649); ((("gadt")), 100000000, 0, -1650)], (0)), 100000000, 0, -1637)), (("runtime/tools.ml", 948, 33599, 33603), ("runtime/tools.ml", 954, 33909, 33974), 0), 0, Tag1 ("Refl__Tools", 3019))], 0), 1, ((Tag3 (Tag1 ((("Tuple", 8872)), "structure"), [((("types")), 100000000, 0, -1618); ((("structures")), 100000000, 0, -1619); ((("arity")), 100000000, 0, -1620); ((("rec_group")), 100000000, 0, -1621); ((("kinds")), 100000000, 0, -1622); ((("positive")), 100000000, 0, -1623); ((("negative")), 100000000, 0, -1624); ((("direct")), 100000000, 0, -1625); ((("gadt")), 100000000, 0, -1626)], (0)), 100000000, 0, -1617)), [63; 63; 63; 15; 63; 63; 63; 63; 15], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 943, 33366, 33370), ("runtime/tools.ml", 954, 33909, 33974), 0), 0, 0, 0, Tag1 ("Refl__Tools", 3017)), 1, 0); (("of_desc", 8874), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "tuple_structure"), [((("types")), 100000000, 0, -1607); ((("structures")), 100000000, 0, -1608); ((("arity")), 100000000, 0, -1609); ((("rec_group")), 100000000, 0, -1610); ((("kinds")), 100000000, 0, -1611); ((("positive")), 100000000, 0, -1612); ((("negative")), 100000000, 0, -1613); ((("direct")), 100000000, 0, -1614); ((("gadt")), 100000000, 0, -1615)], (0)), 100000000, 0, -1616), (Tag3 ((("structure", 8873)), [((("types")), 100000000, 0, -1607); ((("structures")), 100000000, 0, -1608); ((("arity")), 100000000, 0, -1609); ((("rec_group")), 100000000, 0, -1610); ((("kinds")), 100000000, 0, -1611); ((("positive")), 100000000, 0, -1612); ((("negative")), 100000000, 0, -1613); ((("direct")), 100000000, 0, -1614); ((("gadt")), 100000000, 0, -1615)], (0)), 100000000, 0, -1606), 0), 100000000, 0, -1605), 0, (("runtime/tools.ml", 956, 33976, 33988), ("runtime/tools.ml", 956, 33976, 33995), 0), 0, Tag1 ("Refl__Tools", 3020)), 0); Tag1 (("t", 8875), ([((("types")), 100000000, 0, -1595); ((("structures")), 100000000, 0, -1596); ((("arity")), 100000000, 0, -1597); ((("rec_group")), 100000000, 0, -1598); ((("kinds")), 100000000, 0, -1599); ((("positive")), 100000000, 0, -1600); ((("negative")), 100000000, 0, -1601); ((("direct")), 100000000, 0, -1602); ((("gadt")), 100000000, 0, -1603)], 9, [[(("structure", 2293), 0, (Tag3 ((("structure", 8873)), [((("types")), 100000000, 0, -1595); ((("structures")), 100000000, 0, -1596); ((("arity")), 100000000, 0, -1597); ((("rec_group")), 100000000, 0, -1598); ((("kinds")), 100000000, 0, -1599); ((("positive")), 100000000, 0, -1600); ((("negative")), 100000000, 0, -1601); ((("direct")), 100000000, 0, -1602); ((("gadt")), 100000000, 0, -1603)], (0)), 100000000, 0, -1604), (("runtime/tools.ml", 969, 34486, 34494), ("runtime/tools.ml", 971, 34577, 34626), 0), 0, Tag1 ("Refl__Tools", 3035)); (("values", 2294), 0, ((("types")), 100000000, 0, -1595), (("runtime/tools.ml", 972, 34627, 34635), ("runtime/tools.ml", 972, 34627, 34651), 0), 0, Tag1 ("Refl__Tools", 3036))]], 1, ((Tag3 (Tag1 ((("Tuple", 8872)), "t"), [((("types")), 100000000, 0, -1595); ((("structures")), 100000000, 0, -1596); ((("arity")), 100000000, 0, -1597); ((("rec_group")), 100000000, 0, -1598); ((("kinds")), 100000000, 0, -1599); ((("positive")), 100000000, 0, -1600); ((("negative")), 100000000, 0, -1601); ((("direct")), 100000000, 0, -1602); ((("gadt")), 100000000, 0, -1603)], (0)), 100000000, 0, -1594)), [63; 63; 63; 15; 63; 63; 63; 63; 15], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 967, 34372, 34376), ("runtime/tools.ml", 973, 34652, 34659), 0), 0, 0, 0, Tag1 ("Refl__Tools", 3034)), 1, 0); Tag3 (("Item", 8876), 0, (Tag1 ([Tag1 (("t", 8888), ([((("a")), 100000000, 0, -1711); ((("structure")), 100000000, 0, -1712); ((("arity")), 100000000, 0, -1713); ((("rec_group")), 100000000, 0, -1714); ((("kinds")), 100000000, 0, -1715); ((("positive")), 100000000, 0, -1716); ((("negative")), 100000000, 0, -1717); ((("direct")), 100000000, 0, -1718); ((("gadt")), 100000000, 0, -1719)], 9, [[(("desc", 2300), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [((("a")), 100000000, 0, -1711); ((("structure")), 100000000, 0, -1712); ((("arity")), 100000000, 0, -1713); ((("rec_group")), 100000000, 0, -1714); ((("kinds")), 100000000, 0, -1715); ((("positive")), 100000000, 0, -1716); ((("negative")), 100000000, 0, -1717); ((("direct")), 100000000, 0, -1718); ((("gadt")), 100000000, 0, -1719)], (0)), 100000000, 0, -1710), (("runtime/tools.ml", 981, 34811, 34819), ("runtime/tools.ml", 983, 34903, 34936), 0), 0, Tag1 ("Refl__Tools", 3039)); (("value", 2301), 0, ((("a")), 100000000, 0, -1711), (("runtime/tools.ml", 984, 34937, 34945), ("runtime/tools.ml", 984, 34937, 34956), 0), 0, Tag1 ("Refl__Tools", 3040))]], 1, 0, [63; 63; 63; 15; 63; 63; 63; 63; 15], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 979, 34707, 34711), ("runtime/tools.ml", 985, 34957, 34964), 0), 0, 0, 0, Tag1 ("Refl__Tools", 3038)), 1, 0)]), 0, (("runtime/tools.ml", 978, 34684, 34686), ("runtime/tools.ml", 986, 34965, 34970), 0), Tag1 ("Refl__Tools", 3041)), 0, 0); (("map", 8877), ((Tag1 (0, (Tag3 ((("map", 8759)), [((("a_arity")), 100000000, 0, -1591); ((("b_arity")), 100000000, 0, -1583); ((("rec_group")), 100000000, 0, -1584); ((("kinds_a")), 100000000, 0, -1592); ((("kinds_b")), 100000000, 0, -1585); ((("positive")), 100000000, 0, -1586); ((("negative")), 100000000, 0, -1587); ((("direct")), 100000000, 0, -1588); ((("gadt")), 100000000, 0, -1589)], (0)), 100000000, 0, -1593), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "tuple_structure"), [((("a_types")), 100000000, 0, -1580); ((("structures")), 100000000, 0, -1582); ((("a_arity")), 100000000, 0, -1591); ((("rec_group")), 100000000, 0, -1584); ((("kinds_a")), 100000000, 0, -1592); ((("positive")), 100000000, 0, -1586); ((("negative")), 100000000, 0, -1587); ((("direct")), 100000000, 0, -1588); ((("gadt")), 100000000, 0, -1589)], (0)), 100000000, 0, -1590), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "tuple_structure"), [((("b_types")), 100000000, 0, -1579); ((("structures")), 100000000, 0, -1582); ((("b_arity")), 100000000, 0, -1583); ((("rec_group")), 100000000, 0, -1584); ((("kinds_b")), 100000000, 0, -1585); ((("positive")), 100000000, 0, -1586); ((("negative")), 100000000, 0, -1587); ((("direct")), 100000000, 0, -1588); ((("gadt")), 100000000, 0, -1589)], (0)), 100000000, 0, -1581), (Tag1 (0, ((("a_types")), 100000000, 0, -1580), ((("b_types")), 100000000, 0, -1579), 0), 100000000, 0, -1578), 0), 100000000, 0, -1577), 0), 100000000, 0, -1576), 0), 100000000, 0, -1575), 0, (("runtime/tools.ml", 988, 34972, 34982), ("runtime/tools.ml", 988, 34972, 34985), 0), 0, Tag1 ("Refl__Tools", 3042)), 0); Tag1 (("fold", 8878), ([((("types")), 100000000, 0, -1566); ((("structures")), 100000000, 0, -1567); ((("arity")), 100000000, 0, -1568); ((("rec_group")), 100000000, 0, -1569); ((("kinds")), 100000000, 0, -1570); ((("positive")), 100000000, 0, -1571); ((("negative")), 100000000, 0, -1572); ((("direct")), 100000000, 0, -1573); ((("gadt")), 100000000, 0, -1574)], 9, Tag1 ([(("Fold", 2480), Tag1 ([(("index", 2481), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "selection"), [(Tag8 (([("Succ", ((((("index")), 100000000, 0, -1557))))], (0, 100000000, 0, -1556), 1, 0, 0)), 100000000, 0, -1555); ((("types")), 100000000, 0, -1545); ((("a")), 100000000, 0, -1558); ((0), 100000000, 0, -1559)], (0)), 100000000, 0, -1554), (("runtime/tools.ml", 1009, 35819, 35829), ("runtime/tools.ml", 1009, 35819, 35882), 0), 0, Tag1 ("Refl__Tools", 3361)); (("index_structure", 2482), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "selection"), [(Tag8 (([("Succ", ((((("index")), 100000000, 0, -1557))))], (0, 100000000, 0, -1562), 1, 0, 0)), 100000000, 0, -1561); ((("structures")), 100000000, 0, -1546); ((("structure")), 100000000, 0, -1563); ((0), 100000000, 0, -1564)], (0)), 100000000, 0, -1560), (("runtime/tools.ml", 1010, 35883, 35893), ("runtime/tools.ml", 1011, 35911, 35981), 0), 0, Tag1 ("Refl__Tools", 3362)); (("desc", 2483), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [((("a")), 100000000, 0, -1558); ((("structure")), 100000000, 0, -1563); ((("arity")), 100000000, 0, -1547); ((("rec_group")), 100000000, 0, -1548); ((("kinds")), 100000000, 0, -1549); ((("positive")), 100000000, 0, -1550); ((("negative")), 100000000, 0, -1551); ((("direct")), 100000000, 0, -1552); ((("gadt")), 100000000, 0, -1553)], (0)), 100000000, 0, -1565), (("runtime/tools.ml", 1012, 35982, 35992), ("runtime/tools.ml", 1014, 36078, 36113), 0), 0, Tag1 ("Refl__Tools", 3363)); (("value", 2484), 0, ((("a")), 100000000, 0, -1558), (("runtime/tools.ml", 1015, 36114, 36124), ("runtime/tools.ml", 1015, 36114, 36135), 0), 0, Tag1 ("Refl__Tools", 3364))]), ((Tag3 ((("fold", 8878)), [((("types")), 100000000, 0, -1545); ((("structures")), 100000000, 0, -1546); ((("arity")), 100000000, 0, -1547); ((("rec_group")), 100000000, 0, -1548); ((("kinds")), 100000000, 0, -1549); ((("positive")), 100000000, 0, -1550); ((("negative")), 100000000, 0, -1551); ((("direct")), 100000000, 0, -1552); ((("gadt")), 100000000, 0, -1553)], (0)), 100000000, 0, -1544)), (("runtime/tools.ml", 1008, 35804, 35808), ("runtime/tools.ml", 1018, 36220, 36263), 0), 0, Tag1 ("Refl__Tools", 3365))], 0), 1, 0, [15; 15; 63; 15; 63; 63; 63; 63; 15], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 1006, 35693, 35695), ("runtime/tools.ml", 1018, 36220, 36263), 0), 0, 0, 0, Tag1 ("Refl__Tools", 3360)), 1, 0); (("fold", 8879), ((Tag1 (0, (Tag1 (0, (Tag3 ((("fold", 8878)), [((("types")), 100000000, 0, -1532); ((("structures")), 100000000, 0, -1533); ((("arity")), 100000000, 0, -1534); ((("rec_group")), 100000000, 0, -1535); ((("kinds")), 100000000, 0, -1536); ((("positive")), 100000000, 0, -1537); ((("negative")), 100000000, 0, -1538); ((("direct")), 100000000, 0, -1539); ((("gadt")), 100000000, 0, -1540)], (0)), 100000000, 0, -1543), (Tag1 (0, ((("acc")), 100000000, 0, -1530), ((("acc")), 100000000, 0, -1530), 0), 100000000, 0, -1542), 0), 100000000, 0, -1541), (Tag1 (0, (Tag3 ((("t", 8875)), [((("types")), 100000000, 0, -1532); ((("structures")), 100000000, 0, -1533); ((("arity")), 100000000, 0, -1534); ((("rec_group")), 100000000, 0, -1535); ((("kinds")), 100000000, 0, -1536); ((("positive")), 100000000, 0, -1537); ((("negative")), 100000000, 0, -1538); ((("direct")), 100000000, 0, -1539); ((("gadt")), 100000000, 0, -1540)], (0)), 100000000, 0, -1531), (Tag1 (0, ((("acc")), 100000000, 0, -1530), ((("acc")), 100000000, 0, -1530), 0), 100000000, 0, -1529), 0), 100000000, 0, -1528), 0), 100000000, 0, -1527), 0, (("runtime/tools.ml", 1020, 36265, 36271), ("runtime/tools.ml", 1020, 36265, 36275), 0), 0, Tag1 ("Refl__Tools", 3372)), 0); Tag3 (("Items", 8880), 0, (Tag1 ([Tag1 (("t", 8889), ([((("sequence")), 100000000, 0, -1721); ((("structure")), 100000000, 0, -1722); ((("arities")), 100000000, 0, -1723); ((("rec_group")), 100000000, 0, -1724); ((("kinds")), 100000000, 0, -1725); ((("positive")), 100000000, 0, -1726); ((("negative")), 100000000, 0, -1727); ((("direct")), 100000000, 0, -1728); ((("gadts")), 100000000, 0, -1729)], 9, Tag1 ([(("[]", 2144), (0), ((Tag3 ((("t", 8889)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1731); ((("structure")), 100000000, 0, -1732); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1733); ((("rec_group")), 100000000, 0, -1734); ((("kinds")), 100000000, 0, -1735); ((("positive")), 100000000, 0, -1736); ((("negative")), 100000000, 0, -1737); ((("direct")), 100000000, 0, -1738); ((("gadts")), 100000000, 0, -1739)], (0)), 100000000, 0, -1730)), (("runtime/tools.ml", 800, 28662, 28666), ("runtime/tools.ml", 802, 28748, 28776), 0), 0, Tag1 ("Refl__Tools", 2816)); (("::", 2145), ([(Tag3 (Tag1 ((("Item", 8876)), "t"), [((("head")), 100000000, 0, -1742); ((("structure")), 100000000, 0, -1744); ((("arity")), 100000000, 0, -1746); ((("rec_group")), 100000000, 0, -1748); ((("kinds")), 100000000, 0, -1749); ((("positive")), 100000000, 0, -1750); ((("negative")), 100000000, 0, -1751); ((("direct")), 100000000, 0, -1752); ((("gadt")), 100000000, 0, -1754)], (0)), 100000000, 0, -1756); (Tag3 ((("t", 8889)), [((("tail")), 100000000, 0, -1743); ((("structure")), 100000000, 0, -1744); ((("arities")), 100000000, 0, -1747); ((("rec_group")), 100000000, 0, -1748); ((("kinds")), 100000000, 0, -1749); ((("positive")), 100000000, 0, -1750); ((("negative")), 100000000, 0, -1751); ((("direct")), 100000000, 0, -1752); ((("gadts")), 100000000, 0, -1755)], (0)), 100000000, 0, -1757)]), ((Tag3 ((("t", 8889)), [(Tag2 ([((("head")), 100000000, 0, -1742); ((("tail")), 100000000, 0, -1743)]), 100000000, 0, -1741); ((("structure")), 100000000, 0, -1744); (Tag2 ([((("arity")), 100000000, 0, -1746); ((("arities")), 100000000, 0, -1747)]), 100000000, 0, -1745); ((("rec_group")), 100000000, 0, -1748); ((("kinds")), 100000000, 0, -1749); ((("positive")), 100000000, 0, -1750); ((("negative")), 100000000, 0, -1751); ((("direct")), 100000000, 0, -1752); (Tag2 ([((("gadt")), 100000000, 0, -1754); ((("gadts")), 100000000, 0, -1755)]), 100000000, 0, -1753)], (0)), 100000000, 0, -1740)), (("runtime/tools.ml", 803, 28777, 28781), ("runtime/tools.ml", 809, 29081, 29149), 0), 0, Tag1 ("Refl__Tools", 2817))], 0), 1, ((Tag3 (Tag1 (Tag2 ((("Desc_vector", 8757)), (("Item", 8876))), "t"), [((("sequence")), 100000000, 0, -1721); ((("structure")), 100000000, 0, -1722); ((("arities")), 100000000, 0, -1723); ((("rec_group")), 100000000, 0, -1724); ((("kinds")), 100000000, 0, -1725); ((("positive")), 100000000, 0, -1726); ((("negative")), 100000000, 0, -1727); ((("direct")), 100000000, 0, -1728); ((("gadts")), 100000000, 0, -1729)], (0)), 100000000, 0, -1720)), [63; 15; 63; 15; 15; 15; 15; 15; 63], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 798, 28549, 28551), ("runtime/tools.ml", 809, 29081, 29149), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2815)), 1, 0)]), 0, (("runtime/tools.ml", 1044, 37328, 37330), ("runtime/tools.ml", 1044, 37328, 37363), 0), Tag1 ("Refl__Tools", 3402)), 0, 0); Tag3 (("Tuples", 8881), 0, (Tag1 ([Tag1 (("t", 8890), ([((("sequence")), 100000000, 0, -1759); ((("structure")), 100000000, 0, -1760); ((("arities")), 100000000, 0, -1761); ((("rec_group")), 100000000, 0, -1762); ((("kinds")), 100000000, 0, -1763); ((("positive")), 100000000, 0, -1764); ((("negative")), 100000000, 0, -1765); ((("direct")), 100000000, 0, -1766); ((("gadts")), 100000000, 0, -1767)], 9, Tag1 ([(("[]", 2144), (0), ((Tag3 ((("t", 8890)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1769); ((("structure")), 100000000, 0, -1770); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1771); ((("rec_group")), 100000000, 0, -1772); ((("kinds")), 100000000, 0, -1773); ((("positive")), 100000000, 0, -1774); ((("negative")), 100000000, 0, -1775); ((("direct")), 100000000, 0, -1776); ((("gadts")), 100000000, 0, -1777)], (0)), 100000000, 0, -1768)), (("runtime/tools.ml", 800, 28662, 28666), ("runtime/tools.ml", 802, 28748, 28776), 0), 0, Tag1 ("Refl__Tools", 2816)); (("::", 2145), ([(Tag3 (Tag1 ((("Tuple", 8872)), "t"), [((("head")), 100000000, 0, -1780); ((("structure")), 100000000, 0, -1782); ((("arity")), 100000000, 0, -1784); ((("rec_group")), 100000000, 0, -1786); ((("kinds")), 100000000, 0, -1787); ((("positive")), 100000000, 0, -1788); ((("negative")), 100000000, 0, -1789); ((("direct")), 100000000, 0, -1790); ((("gadt")), 100000000, 0, -1792)], (0)), 100000000, 0, -1794); (Tag3 ((("t", 8890)), [((("tail")), 100000000, 0, -1781); ((("structure")), 100000000, 0, -1782); ((("arities")), 100000000, 0, -1785); ((("rec_group")), 100000000, 0, -1786); ((("kinds")), 100000000, 0, -1787); ((("positive")), 100000000, 0, -1788); ((("negative")), 100000000, 0, -1789); ((("direct")), 100000000, 0, -1790); ((("gadts")), 100000000, 0, -1793)], (0)), 100000000, 0, -1795)]), ((Tag3 ((("t", 8890)), [(Tag2 ([((("head")), 100000000, 0, -1780); ((("tail")), 100000000, 0, -1781)]), 100000000, 0, -1779); ((("structure")), 100000000, 0, -1782); (Tag2 ([((("arity")), 100000000, 0, -1784); ((("arities")), 100000000, 0, -1785)]), 100000000, 0, -1783); ((("rec_group")), 100000000, 0, -1786); ((("kinds")), 100000000, 0, -1787); ((("positive")), 100000000, 0, -1788); ((("negative")), 100000000, 0, -1789); ((("direct")), 100000000, 0, -1790); (Tag2 ([((("gadt")), 100000000, 0, -1792); ((("gadts")), 100000000, 0, -1793)]), 100000000, 0, -1791)], (0)), 100000000, 0, -1778)), (("runtime/tools.ml", 803, 28777, 28781), ("runtime/tools.ml", 809, 29081, 29149), 0), 0, Tag1 ("Refl__Tools", 2817))], 0), 1, ((Tag3 (Tag1 (Tag2 ((("Desc_vector", 8757)), (("Tuple", 8872))), "t"), [((("sequence")), 100000000, 0, -1759); ((("structure")), 100000000, 0, -1760); ((("arities")), 100000000, 0, -1761); ((("rec_group")), 100000000, 0, -1762); ((("kinds")), 100000000, 0, -1763); ((("positive")), 100000000, 0, -1764); ((("negative")), 100000000, 0, -1765); ((("direct")), 100000000, 0, -1766); ((("gadts")), 100000000, 0, -1767)], (0)), 100000000, 0, -1758)), [63; 15; 63; 15; 15; 15; 15; 15; 63], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 798, 28549, 28551), ("runtime/tools.ml", 809, 29081, 29149), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2815)), 1, 0)]), 0, (("runtime/tools.ml", 1046, 37365, 37367), ("runtime/tools.ml", 1046, 37365, 37402), 0), Tag1 ("Refl__Tools", 3403)), 0, 0); Tag1 (("structure_find", 8882), ([((("index")), 100000000, 0, -1516); ((("structure")), 100000000, 0, -1517); ((("structures")), 100000000, 0, -1518); ((("arities")), 100000000, 0, -1519); ((("tuples")), 100000000, 0, -1520); ((("rec_group")), 100000000, 0, -1521); ((("kinds")), 100000000, 0, -1522); ((("positive")), 100000000, 0, -1523); ((("negative")), 100000000, 0, -1524); ((("direct")), 100000000, 0, -1525); ((("gadts")), 100000000, 0, -1526)], 11, Tag1 ([(("Structure_find", 2517), Tag1 ([(("section", 2518), 0, (Tag3 (Tag1 ((("Section", 8758)), "t"), [(Tag8 (([("Succ", ((((("index")), 100000000, 0, -1498))))], (0, 100000000, 0, -1511), 1, 0, 0)), 100000000, 0, -1510); ((("tuples")), 100000000, 0, -1502); ((("section")), 100000000, 0, -1512); ((("others")), 100000000, 0, -1513)], (0)), 100000000, 0, -1509), (("runtime/tools.ml", 1052, 37583, 37593), ("runtime/tools.ml", 1052, 37583, 37661), 0), 0, Tag1 ("Refl__Tools", 3405)); (("items", 2519), 0, (Tag3 (Tag1 ((("Items", 8880)), "t"), [((("section")), 100000000, 0, -1512); ((("structure")), 100000000, 0, -1499); ((("arities")), 100000000, 0, -1501); ((("rec_group")), 100000000, 0, -1503); ((("kinds")), 100000000, 0, -1504); ((("positive")), 100000000, 0, -1505); ((("negative")), 100000000, 0, -1506); ((("direct")), 100000000, 0, -1507); ((("gadts")), 100000000, 0, -1508)], (0)), 100000000, 0, -1514), (("runtime/tools.ml", 1053, 37662, 37672), ("runtime/tools.ml", 1055, 37756, 37806), 0), 0, Tag1 ("Refl__Tools", 3406)); (("others", 2520), 0, (Tag3 (Tag1 ((("Tuples", 8881)), "t"), [((("others")), 100000000, 0, -1513); ((("structures")), 100000000, 0, -1500); ((("arities")), 100000000, 0, -1501); ((("rec_group")), 100000000, 0, -1503); ((("kinds")), 100000000, 0, -1504); ((("positive")), 100000000, 0, -1505); ((("negative")), 100000000, 0, -1506); ((("direct")), 100000000, 0, -1507); ((("gadts")), 100000000, 0, -1508)], (0)), 100000000, 0, -1515), (("runtime/tools.ml", 1056, 37807, 37817), ("runtime/tools.ml", 1058, 37902, 37952), 0), 0, Tag1 ("Refl__Tools", 3407))]), ((Tag3 ((("structure_find", 8882)), [((("index")), 100000000, 0, -1498); ((("structure")), 100000000, 0, -1499); ((("structures")), 100000000, 0, -1500); ((("arities")), 100000000, 0, -1501); ((("tuples")), 100000000, 0, -1502); ((("rec_group")), 100000000, 0, -1503); ((("kinds")), 100000000, 0, -1504); ((("positive")), 100000000, 0, -1505); ((("negative")), 100000000, 0, -1506); ((("direct")), 100000000, 0, -1507); ((("gadts")), 100000000, 0, -1508)], (0)), 100000000, 0, -1497)), (("runtime/tools.ml", 1051, 37558, 37562), ("runtime/tools.ml", 1062, 38100, 38126), 0), 0, Tag1 ("Refl__Tools", 3408))], 0), 1, 0, [63; 15; 15; 63; 63; 15; 15; 15; 15; 15; 63], [0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 1048, 37404, 37406), ("runtime/tools.ml", 1062, 38100, 38126), 0), 0, 0, 0, Tag1 ("Refl__Tools", 3404)), 1, 0); Tag1 (("find", 8883), ([((("tuples")), 100000000, 0, -1488); ((("structures")), 100000000, 0, -1489); ((("arities")), 100000000, 0, -1490); ((("rec_group")), 100000000, 0, -1491); ((("kinds")), 100000000, 0, -1492); ((("positive")), 100000000, 0, -1493); ((("negative")), 100000000, 0, -1494); ((("direct")), 100000000, 0, -1495); ((("gadts")), 100000000, 0, -1496)], 9, Tag1 ([(("Find", 2525), Tag1 ([(("index", 2526), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "selection"), [(Tag8 (([("Succ", ((((("index")), 100000000, 0, -1479))))], (0, 100000000, 0, -1478), 1, 0, 0)), 100000000, 0, -1477); ((("structures")), 100000000, 0, -1468); ((("structure")), 100000000, 0, -1480); ((0), 100000000, 0, -1481)], (0)), 100000000, 0, -1476), (("runtime/tools.ml", 1067, 38257, 38267), ("runtime/tools.ml", 1068, 38275, 38345), 0), 0, Tag1 ("Refl__Tools", 3416)); (("section", 2527), 0, (Tag3 (Tag1 ((("Section", 8758)), "t"), [(Tag8 (([("Succ", ((((("index")), 100000000, 0, -1479))))], (0, 100000000, 0, -1484), 1, 0, 0)), 100000000, 0, -1483); ((("tuples")), 100000000, 0, -1467); ((("section")), 100000000, 0, -1485); ((0), 100000000, 0, -1486)], (0)), 100000000, 0, -1482), (("runtime/tools.ml", 1069, 38346, 38356), ("runtime/tools.ml", 1069, 38346, 38418), 0), 0, Tag1 ("Refl__Tools", 3417)); (("items", 2528), 0, (Tag3 (Tag1 ((("Items", 8880)), "t"), [((("section")), 100000000, 0, -1485); ((("structure")), 100000000, 0, -1480); ((("arities")), 100000000, 0, -1469); ((("rec_group")), 100000000, 0, -1470); ((("kinds")), 100000000, 0, -1471); ((("positive")), 100000000, 0, -1472); ((("negative")), 100000000, 0, -1473); ((("direct")), 100000000, 0, -1474); ((("gadts")), 100000000, 0, -1475)], (0)), 100000000, 0, -1487), (("runtime/tools.ml", 1070, 38419, 38429), ("runtime/tools.ml", 1072, 38513, 38563), 0), 0, Tag1 ("Refl__Tools", 3418))]), ((Tag3 ((("find", 8883)), [((("tuples")), 100000000, 0, -1467); ((("structures")), 100000000, 0, -1468); ((("arities")), 100000000, 0, -1469); ((("rec_group")), 100000000, 0, -1470); ((("kinds")), 100000000, 0, -1471); ((("positive")), 100000000, 0, -1472); ((("negative")), 100000000, 0, -1473); ((("direct")), 100000000, 0, -1474); ((("gadts")), 100000000, 0, -1475)], (0)), 100000000, 0, -1466)), (("runtime/tools.ml", 1066, 38242, 38246), ("runtime/tools.ml", 1075, 38645, 38687), 0), 0, Tag1 ("Refl__Tools", 3419))], 0), 1, 0, [63; 15; 63; 15; 15; 15; 15; 15; 63], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 1064, 38128, 38130), ("runtime/tools.ml", 1075, 38645, 38687), 0), 0, 0, 0, Tag1 ("Refl__Tools", 3415)), 1, 0); (("find", 8884), ((Tag1 (0, (Tag3 (Tag1 ((("Tuples", 8881)), "t"), [(Tag2 ([((("tuple")), 100000000, 0, -1454); ((("tuples")), 100000000, 0, -1455)]), 100000000, 0, -1465); ((("structures")), 100000000, 0, -1456); ((("arities")), 100000000, 0, -1457); ((("rec_group")), 100000000, 0, -1458); ((("kinds")), 100000000, 0, -1459); ((("positive")), 100000000, 0, -1460); ((("negative")), 100000000, 0, -1461); ((("direct")), 100000000, 0, -1462); ((("gadts")), 100000000, 0, -1463)], (0)), 100000000, 0, -1464), (Tag1 (0, (Tag1 (0, (Tag3 ((("find", 8883)), [(Tag2 ([((("tuple")), 100000000, 0, -1454); ((("tuples")), 100000000, 0, -1455)]), 100000000, 0, -1453); ((("structures")), 100000000, 0, -1456); ((("arities")), 100000000, 0, -1457); ((("rec_group")), 100000000, 0, -1458); ((("kinds")), 100000000, 0, -1459); ((("positive")), 100000000, 0, -1460); ((("negative")), 100000000, 0, -1461); ((("direct")), 100000000, 0, -1462); ((("gadts")), 100000000, 0, -1463)], (0)), 100000000, 0, -1452), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -1449)], (0)), 100000000, 0, -1451), 0), 100000000, 0, -1450), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -1449)], (0)), 100000000, 0, -1448), 0), 100000000, 0, -1447), 0), 100000000, 0, -1446), 0, (("runtime/tools.ml", 1077, 38689, 38695), ("runtime/tools.ml", 1077, 38689, 38699), 0), 0, Tag1 ("Refl__Tools", 3426)), 0)]), 0, (("runtime/tools.ml", 941, 33320, 33320), ("runtime/tools.ml", 1160, 42272, 42275), 0), Tag1 ("Refl__Tools", 3549)), 0, 0); Tag3 (("Record", 8767), 0, (Tag1 ([Tag3 (("Record", 8891), 0, (Tag1 ([Tag1 (("t", 8904), ([((("types")), 100000000, 0, -1958); ((("structures")), 100000000, 0, -1959); ((("arity")), 100000000, 0, -1960); ((("rec_group")), 100000000, 0, -1961); ((("kinds")), 100000000, 0, -1962); ((("positive")), 100000000, 0, -1963); ((("negative")), 100000000, 0, -1964); ((("direct")), 100000000, 0, -1965); ((("gadt")), 100000000, 0, -1966)], 9, [[(("structure", 2632), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "record_structure"), [((("types")), 100000000, 0, -1958); ((("structures")), 100000000, 0, -1959); ((("arity")), 100000000, 0, -1960); ((("rec_group")), 100000000, 0, -1961); ((("kinds")), 100000000, 0, -1962); ((("positive")), 100000000, 0, -1963); ((("negative")), 100000000, 0, -1964); ((("direct")), 100000000, 0, -1965); ((("gadt")), 100000000, 0, -1966)], (0)), 100000000, 0, -1957), (("runtime/tools.ml", 1166, 42439, 42447), ("runtime/tools.ml", 1168, 42530, 42586), 0), 0, Tag1 ("Refl__Tools", 3551)); (("values", 2633), 0, ((("types")), 100000000, 0, -1958), (("runtime/tools.ml", 1169, 42587, 42595), ("runtime/tools.ml", 1169, 42587, 42611), 0), 0, Tag1 ("Refl__Tools", 3552))]], 1, 0, [63; 63; 63; 15; 63; 63; 63; 63; 15], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 1164, 42325, 42329), ("runtime/tools.ml", 1170, 42612, 42619), 0), 0, 0, 0, Tag1 ("Refl__Tools", 3550)), 1, 0)]), 0, (("runtime/tools.ml", 1163, 42300, 42302), ("runtime/tools.ml", 1171, 42620, 42625), 0), Tag1 ("Refl__Tools", 3553)), 0, 0); Tag3 (("Field", 8892), 0, (Tag1 ([Tag1 (("t", 8905), ([((("a")), 100000000, 0, -1968); ((("structure")), 100000000, 0, -1969); ((("arity")), 100000000, 0, -1970); ((("rec_group")), 100000000, 0, -1971); ((("kinds")), 100000000, 0, -1972); ((("positive")), 100000000, 0, -1973); ((("negative")), 100000000, 0, -1974); ((("direct")), 100000000, 0, -1975); ((("gadt")), 100000000, 0, -1976)], 9, [[(("field", 2636), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "record_field"), [((("a")), 100000000, 0, -1968); ((("structure")), 100000000, 0, -1969); ((("arity")), 100000000, 0, -1970); ((("rec_group")), 100000000, 0, -1971); ((("kinds")), 100000000, 0, -1972); ((("positive")), 100000000, 0, -1973); ((("negative")), 100000000, 0, -1974); ((("direct")), 100000000, 0, -1975); ((("gadt")), 100000000, 0, -1976)], (0)), 100000000, 0, -1967), (("runtime/tools.ml", 1176, 42755, 42763), ("runtime/tools.ml", 1178, 42848, 42889), 0), 0, Tag1 ("Refl__Tools", 3555)); (("value", 2637), 0, ((("a")), 100000000, 0, -1968), (("runtime/tools.ml", 1179, 42890, 42898), ("runtime/tools.ml", 1179, 42890, 42909), 0), 0, Tag1 ("Refl__Tools", 3556))]], 1, 0, [63; 63; 63; 15; 63; 63; 63; 63; 15], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 1174, 42651, 42655), ("runtime/tools.ml", 1180, 42910, 42917), 0), 0, 0, 0, Tag1 ("Refl__Tools", 3554)), 1, 0)]), 0, (("runtime/tools.ml", 1173, 42627, 42629), ("runtime/tools.ml", 1181, 42918, 42923), 0), Tag1 ("Refl__Tools", 3557)), 0, 0); Tag1 (("t", 8893), ([((("types")), 100000000, 0, -1947); ((("structures")), 100000000, 0, -1948); ((("arity")), 100000000, 0, -1949); ((("rec_group")), 100000000, 0, -1950); ((("kinds")), 100000000, 0, -1951); ((("positive")), 100000000, 0, -1952); ((("negative")), 100000000, 0, -1953); ((("direct")), 100000000, 0, -1954); ((("gadt")), 100000000, 0, -1955)], 9, [[(("structure", 2632), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "record_structure"), [((("types")), 100000000, 0, -1947); ((("structures")), 100000000, 0, -1948); ((("arity")), 100000000, 0, -1949); ((("rec_group")), 100000000, 0, -1950); ((("kinds")), 100000000, 0, -1951); ((("positive")), 100000000, 0, -1952); ((("negative")), 100000000, 0, -1953); ((("direct")), 100000000, 0, -1954); ((("gadt")), 100000000, 0, -1955)], (0)), 100000000, 0, -1956), (("runtime/tools.ml", 1166, 42439, 42447), ("runtime/tools.ml", 1168, 42530, 42586), 0), 0, Tag1 ("Refl__Tools", 3551)); (("values", 2633), 0, ((("types")), 100000000, 0, -1947), (("runtime/tools.ml", 1169, 42587, 42595), ("runtime/tools.ml", 1169, 42587, 42611), 0), 0, Tag1 ("Refl__Tools", 3552))]], 1, ((Tag3 (Tag1 ((("Record", 8891)), "t"), [((("types")), 100000000, 0, -1947); ((("structures")), 100000000, 0, -1948); ((("arity")), 100000000, 0, -1949); ((("rec_group")), 100000000, 0, -1950); ((("kinds")), 100000000, 0, -1951); ((("positive")), 100000000, 0, -1952); ((("negative")), 100000000, 0, -1953); ((("direct")), 100000000, 0, -1954); ((("gadt")), 100000000, 0, -1955)], (0)), 100000000, 0, -1946)), [63; 63; 63; 15; 63; 63; 63; 63; 15], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 1164, 42325, 42329), ("runtime/tools.ml", 1170, 42612, 42619), 0), 0, 0, 0, Tag1 ("Refl__Tools", 3550)), 1, 0); (("map", 8894), ((Tag1 (0, (Tag3 ((("map", 8759)), [((("a_arity")), 100000000, 0, -1941); ((("b_arity")), 100000000, 0, -1933); ((("rec_group")), 100000000, 0, -1934); (Tag8 (([("Poly", (((Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1944))))], ((0), 100000000, 0, -1943), 0, 0, 0)), 100000000, 0, -1942); ((("kinds_b")), 100000000, 0, -1935); ((("positive")), 100000000, 0, -1936); ((("negative")), 100000000, 0, -1937); ((("direct")), 100000000, 0, -1938); ((("gadt")), 100000000, 0, -1939)], (0)), 100000000, 0, -1945), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "record_structure"), [((("a_types")), 100000000, 0, -1930); ((("structures")), 100000000, 0, -1932); ((("a_arity")), 100000000, 0, -1941); ((("rec_group")), 100000000, 0, -1934); (Tag8 (([("Poly", (((Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1944))))], ((0), 100000000, 0, -1943), 0, 0, 0)), 100000000, 0, -1942); ((("positive")), 100000000, 0, -1936); ((("negative")), 100000000, 0, -1937); ((("direct")), 100000000, 0, -1938); ((("gadt")), 100000000, 0, -1939)], (0)), 100000000, 0, -1940), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "record_structure"), [((("b_types")), 100000000, 0, -1929); ((("structures")), 100000000, 0, -1932); ((("b_arity")), 100000000, 0, -1933); ((("rec_group")), 100000000, 0, -1934); ((("kinds_b")), 100000000, 0, -1935); ((("positive")), 100000000, 0, -1936); ((("negative")), 100000000, 0, -1937); ((("direct")), 100000000, 0, -1938); ((("gadt")), 100000000, 0, -1939)], (0)), 100000000, 0, -1931), (Tag1 (0, ((("a_types")), 100000000, 0, -1930), ((("b_types")), 100000000, 0, -1929), 0), 100000000, 0, -1928), 0), 100000000, 0, -1927), 0), 100000000, 0, -1926), 0), 100000000, 0, -1925), 0, (("runtime/tools.ml", 1185, 42943, 42953), ("runtime/tools.ml", 1185, 42943, 42956), 0), 0, Tag1 ("Refl__Tools", 3558)), 0); Tag3 (("Map", 8895), 0, (Tag2 (((("M", 8903)), ((("Mapper", 8760)))), Tag1 ([Tag3 (("Tools", 8906), 0, (Tag1 ([Tag1 (("make_variables", 8910), ([((("types")), 100000000, 0, -2091); ((("arity_a")), 100000000, 0, -2092); ((("arity_b")), 100000000, 0, -2093); ((("subpositive")), 100000000, 0, -2094); ((("subnegative")), 100000000, 0, -2095)], 5, Tag1 ([(("MakeVariables", 2183), Tag1 ([(("subarity_a", 2184), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("types")), 100000000, 0, -2097); ((("arity_a")), 100000000, 0, -2098); ((("subarity_a")), 100000000, 0, -2103)], (0)), 100000000, 0, -2102), (("runtime/tools.ml", 889, 31330, 31338), ("runtime/tools.ml", 889, 31330, 31390), 0), 0, Tag1 ("Refl__Tools", 2865)); (("subarity_b", 2185), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("types")), 100000000, 0, -2097); ((("arity_b")), 100000000, 0, -2099); ((("subarity_b")), 100000000, 0, -2105)], (0)), 100000000, 0, -2104), (("runtime/tools.ml", 890, 31391, 31399), ("runtime/tools.ml", 890, 31391, 31451), 0), 0, Tag1 ("Refl__Tools", 2866)); (("mapper", 2186), 0, (Tag3 (Tag1 ((("M", 8903)), "t"), [((("subarity_a")), 100000000, 0, -2103); ((("subarity_b")), 100000000, 0, -2105); ((("subpositive")), 100000000, 0, -2100); ((("subnegative")), 100000000, 0, -2101)], (0)), 100000000, 0, -2106), (("runtime/tools.ml", 891, 31452, 31460), ("runtime/tools.ml", 892, 31469, 31538), 0), 0, Tag1 ("Refl__Tools", 2867))]), ((Tag3 ((("make_variables", 8910)), [((("types")), 100000000, 0, -2097); ((("arity_a")), 100000000, 0, -2098); ((("arity_b")), 100000000, 0, -2099); ((("subpositive")), 100000000, 0, -2100); ((("subnegative")), 100000000, 0, -2101)], (0)), 100000000, 0, -2096)), (("runtime/tools.ml", 888, 31306, 31310), ("runtime/tools.ml", 894, 31550, 31629), 0), 0, Tag1 ("Refl__Tools", 2868))], 0), 1, ((Tag3 (Tag1 (Tag2 ((("MapperTools", 8764)), (("M", 8903))), "make_variables"), [((("types")), 100000000, 0, -2091); ((("arity_a")), 100000000, 0, -2092); ((("arity_b")), 100000000, 0, -2093); ((("subpositive")), 100000000, 0, -2094); ((("subnegative")), 100000000, 0, -2095)], (0)), 100000000, 0, -2090)), [63; 15; 15; 15; 15], [0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 887, 31225, 31227), ("runtime/tools.ml", 894, 31550, 31629), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2864)), 1, 0); (("make_variables_aux", 8911), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -2085); ((("types")), 100000000, 0, -2074)], (0)), 100000000, 0, -2089), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -2085); ((("positives")), 100000000, 0, -2087)], (0)), 100000000, 0, -2088), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("positives")), 100000000, 0, -2087); ((("positive")), 100000000, 0, -2080); ((("subpositive")), 100000000, 0, -2077)], (0)), 100000000, 0, -2086), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -2085); ((("negatives")), 100000000, 0, -2083)], (0)), 100000000, 0, -2084), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("negatives")), 100000000, 0, -2083); ((("negative")), 100000000, 0, -2081); ((("subnegative")), 100000000, 0, -2078)], (0)), 100000000, 0, -2082), (Tag1 (0, (Tag3 (Tag1 ((("M", 8903)), "t"), [((("arity_a")), 100000000, 0, -2075); ((("arity_b")), 100000000, 0, -2076); ((("positive")), 100000000, 0, -2080); ((("negative")), 100000000, 0, -2081)], (0)), 100000000, 0, -2079), (Tag3 ((("make_variables", 8910)), [((("types")), 100000000, 0, -2074); ((("arity_a")), 100000000, 0, -2075); ((("arity_b")), 100000000, 0, -2076); ((("subpositive")), 100000000, 0, -2077); ((("subnegative")), 100000000, 0, -2078)], (0)), 100000000, 0, -2073), 0), 100000000, 0, -2072), 0), 100000000, 0, -2071), 0), 100000000, 0, -2070), 0), 100000000, 0, -2069), 0), 100000000, 0, -2068), 0), 100000000, 0, -2067), 0, (("runtime/tools.ml", 896, 31631, 31641), ("runtime/tools.ml", 896, 31631, 31659), 0), 0, Tag1 ("Refl__Tools", 2875)), 0); (("make_variables", 8912), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((0), 100000000, 0, -2059); ((0), 100000000, 0, -2050)], (0)), 100000000, 0, -2066), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "subvariables"), [((0), 100000000, 0, -2059); ((0), 100000000, 0, -2060); ((0), 100000000, 0, -2056); ((0), 100000000, 0, -2057); ((0), 100000000, 0, -2061); ((0), 100000000, 0, -2062); ((0), 100000000, 0, -2063); ((0), 100000000, 0, -2064); ((0), 100000000, 0, -2053); ((0), 100000000, 0, -2054); ((0), 100000000, 0, -2065)], (0)), 100000000, 0, -2058), (Tag1 (0, (Tag3 (Tag1 ((("M", 8903)), "t"), [((0), 100000000, 0, -2051); ((0), 100000000, 0, -2052); ((0), 100000000, 0, -2056); ((0), 100000000, 0, -2057)], (0)), 100000000, 0, -2055), (Tag3 ((("make_variables", 8910)), [((0), 100000000, 0, -2050); ((0), 100000000, 0, -2051); ((0), 100000000, 0, -2052); ((0), 100000000, 0, -2053); ((0), 100000000, 0, -2054)], (0)), 100000000, 0, -2049), 0), 100000000, 0, -2048), 0), 100000000, 0, -2047), 0), 100000000, 0, -2046), 0, (("runtime/tools.ml", 922, 32755, 32761), ("runtime/tools.ml", 922, 32755, 32775), 0), 0, Tag1 ("Refl__Tools", 2979)), 0)]), 0, (("runtime/tools.ml", 1204, 43746, 43750), ("runtime/tools.ml", 1204, 43746, 43780), 0), Tag1 ("Refl__Tools", 4584)), 0, 0); (("map_poly", 8907), ((Tag1 (0, (Tag3 (Tag1 ((("M", 8903)), "t"), [((("arity_a")), 100000000, 0, -2034); ((("arity_b")), 100000000, 0, -2025); ((("positive")), 100000000, 0, -2039); ((("negative")), 100000000, 0, -2040)], (0)), 100000000, 0, -2045), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "subvariables"), [((("count")), 100000000, 0, -2032); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -2038), 1, 0, 0)), 100000000, 0, -2037); ((("positive")), 100000000, 0, -2039); ((("negative")), 100000000, 0, -2040); ((("direct")), 100000000, 0, -2041); ((("positives")), 100000000, 0, -2042); ((("negatives")), 100000000, 0, -2043); ((("directs")), 100000000, 0, -2044); ((("subpositive")), 100000000, 0, -2028); ((("subnegative")), 100000000, 0, -2029); ((("subdirect")), 100000000, 0, -2030)], (0)), 100000000, 0, -2036), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "forall_destruct"), [((("a")), 100000000, 0, -2021); ((("structure")), 100000000, 0, -2024); ((("arity_a")), 100000000, 0, -2034); (Tag3 (Tag1 ((("M", 8903)), "rec_group"), 0, (0)), 100000000, 0, -2026); ((("kinds")), 100000000, 0, -2027); ((("subpositive")), 100000000, 0, -2028); ((("subnegative")), 100000000, 0, -2029); ((("subdirect")), 100000000, 0, -2030); (Tag3 (Tag1 ((("M", 8903)), "gadt"), 0, (0)), 100000000, 0, -2035); ((("count")), 100000000, 0, -2032)], (0)), 100000000, 0, -2033), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "forall_construct"), [((("b")), 100000000, 0, -2020); ((("structure")), 100000000, 0, -2024); ((("arity_b")), 100000000, 0, -2025); (Tag3 (Tag1 ((("M", 8903)), "rec_group"), 0, (0)), 100000000, 0, -2026); ((("kinds")), 100000000, 0, -2027); ((("subpositive")), 100000000, 0, -2028); ((("subnegative")), 100000000, 0, -2029); ((("subdirect")), 100000000, 0, -2030); (Tag3 (Tag1 ((("M", 8903)), "gadt"), 0, (0)), 100000000, 0, -2031); ((("count")), 100000000, 0, -2032)], (0)), 100000000, 0, -2023), ((("b")), 100000000, 0, -2020), 0), 100000000, 0, -2022), (Tag1 (0, ((("a")), 100000000, 0, -2021), ((("b")), 100000000, 0, -2020), 0), 100000000, 0, -2019), 0), 100000000, 0, -2018), 0), 100000000, 0, -2017), 0), 100000000, 0, -2016), 0), 100000000, 0, -2015), 0, (("runtime/tools.ml", 1206, 43782, 43790), ("runtime/tools.ml", 1206, 43782, 43798), 0), 0, Tag1 ("Refl__Tools", 4585)), 0); (("map_with", 8908), ((Tag1 (0, (Tag3 (Tag1 ((("M", 8903)), "t"), [((("arity_a")), 100000000, 0, -2011); ((("arity_b")), 100000000, 0, -2003); ((("positive")), 100000000, 0, -2006); ((("negative")), 100000000, 0, -2007)], (0)), 100000000, 0, -2014), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "record_structure"), [((("types_a")), 100000000, 0, -2000); ((("structure")), 100000000, 0, -2002); ((("arity_a")), 100000000, 0, -2011); (Tag3 (Tag1 ((("M", 8903)), "rec_group"), 0, (0)), 100000000, 0, -2012); ((("kinds")), 100000000, 0, -2005); ((("positive")), 100000000, 0, -2006); ((("negative")), 100000000, 0, -2007); ((("direct")), 100000000, 0, -2008); (Tag3 (Tag1 ((("M", 8903)), "gadt"), 0, (0)), 100000000, 0, -2013)], (0)), 100000000, 0, -2010), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "record_structure"), [((("types_b")), 100000000, 0, -1999); ((("structure")), 100000000, 0, -2002); ((("arity_b")), 100000000, 0, -2003); (Tag3 (Tag1 ((("M", 8903)), "rec_group"), 0, (0)), 100000000, 0, -2004); ((("kinds")), 100000000, 0, -2005); ((("positive")), 100000000, 0, -2006); ((("negative")), 100000000, 0, -2007); ((("direct")), 100000000, 0, -2008); (Tag3 (Tag1 ((("M", 8903)), "gadt"), 0, (0)), 100000000, 0, -2009)], (0)), 100000000, 0, -2001), (Tag1 (0, ((("types_a")), 100000000, 0, -2000), ((("types_b")), 100000000, 0, -1999), 0), 100000000, 0, -1998), 0), 100000000, 0, -1997), 0), 100000000, 0, -1996), 0), 100000000, 0, -1995), 0, (("runtime/tools.ml", 1235, 45175, 45187), ("runtime/tools.ml", 1235, 45175, 45195), 0), 0, Tag1 ("Refl__Tools", 4612)), 0); (("map", 8909), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "record_structure"), [((0), 100000000, 0, -1981); ((0), 100000000, 0, -1983); (Tag3 (Tag1 ((("M", 8903)), "a_arity"), 0, (0)), 100000000, 0, -1992); (Tag3 (Tag1 ((("M", 8903)), "rec_group"), 0, (0)), 100000000, 0, -1993); ((0), 100000000, 0, -1986); (Tag3 (Tag1 ((("M", 8903)), "positive"), 0, (0)), 100000000, 0, -1987); (Tag3 (Tag1 ((("M", 8903)), "negative"), 0, (0)), 100000000, 0, -1988); ((0), 100000000, 0, -1989); (Tag3 (Tag1 ((("M", 8903)), "gadt"), 0, (0)), 100000000, 0, -1994)], (0)), 100000000, 0, -1991), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "record_structure"), [((0), 100000000, 0, -1980); ((0), 100000000, 0, -1983); (Tag3 (Tag1 ((("M", 8903)), "b_arity"), 0, (0)), 100000000, 0, -1984); (Tag3 (Tag1 ((("M", 8903)), "rec_group"), 0, (0)), 100000000, 0, -1985); ((0), 100000000, 0, -1986); (Tag3 (Tag1 ((("M", 8903)), "positive"), 0, (0)), 100000000, 0, -1987); (Tag3 (Tag1 ((("M", 8903)), "negative"), 0, (0)), 100000000, 0, -1988); ((0), 100000000, 0, -1989); (Tag3 (Tag1 ((("M", 8903)), "gadt"), 0, (0)), 100000000, 0, -1990)], (0)), 100000000, 0, -1982), (Tag1 (0, ((0), 100000000, 0, -1981), ((0), 100000000, 0, -1980), 0), 100000000, 0, -1979), 0), 100000000, 0, -1978), 0), 100000000, 0, -1977), 0, (("runtime/tools.ml", 1262, 46373, 46381), ("runtime/tools.ml", 1262, 46373, 46384), 0), 0, Tag1 ("Refl__Tools", 4731)), 0)])), 0, (("runtime/tools.ml", 1203, 43711, 43713), ("runtime/tools.ml", 1264, 46464, 46469), 0), Tag1 ("Refl__Tools", 4735)), 0, 0); Tag1 (("fold", 8896), ([((("types")), 100000000, 0, -1916); ((("structures")), 100000000, 0, -1917); ((("arity")), 100000000, 0, -1918); ((("rec_group")), 100000000, 0, -1919); ((("kinds")), 100000000, 0, -1920); ((("positive")), 100000000, 0, -1921); ((("negative")), 100000000, 0, -1922); ((("direct")), 100000000, 0, -1923); ((("gadt")), 100000000, 0, -1924)], 9, Tag1 ([(("Fold", 3484), Tag1 ([(("index", 3485), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "selection"), [(Tag8 (([("Succ", ((((("index")), 100000000, 0, -1907))))], (0, 100000000, 0, -1906), 1, 0, 0)), 100000000, 0, -1905); ((("types")), 100000000, 0, -1895); ((("a")), 100000000, 0, -1908); ((0), 100000000, 0, -1909)], (0)), 100000000, 0, -1904), (("runtime/tools.ml", 1269, 46597, 46607), ("runtime/tools.ml", 1269, 46597, 46660), 0), 0, Tag1 ("Refl__Tools", 4737)); (("index_structure", 3486), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "selection"), [(Tag8 (([("Succ", ((((("index")), 100000000, 0, -1907))))], (0, 100000000, 0, -1912), 1, 0, 0)), 100000000, 0, -1911); ((("structures")), 100000000, 0, -1896); ((("structure")), 100000000, 0, -1913); ((0), 100000000, 0, -1914)], (0)), 100000000, 0, -1910), (("runtime/tools.ml", 1270, 46661, 46671), ("runtime/tools.ml", 1271, 46689, 46759), 0), 0, Tag1 ("Refl__Tools", 4738)); (("field", 3487), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "record_field"), [((("a")), 100000000, 0, -1908); ((("structure")), 100000000, 0, -1913); ((("arity")), 100000000, 0, -1897); ((("rec_group")), 100000000, 0, -1898); ((("kinds")), 100000000, 0, -1899); ((("positive")), 100000000, 0, -1900); ((("negative")), 100000000, 0, -1901); ((("direct")), 100000000, 0, -1902); ((("gadt")), 100000000, 0, -1903)], (0)), 100000000, 0, -1915), (("runtime/tools.ml", 1272, 46760, 46770), ("runtime/tools.ml", 1274, 46857, 46900), 0), 0, Tag1 ("Refl__Tools", 4739)); (("value", 3488), 0, ((("a")), 100000000, 0, -1908), (("runtime/tools.ml", 1275, 46901, 46911), ("runtime/tools.ml", 1275, 46901, 46922), 0), 0, Tag1 ("Refl__Tools", 4740))]), ((Tag3 ((("fold", 8896)), [((("types")), 100000000, 0, -1895); ((("structures")), 100000000, 0, -1896); ((("arity")), 100000000, 0, -1897); ((("rec_group")), 100000000, 0, -1898); ((("kinds")), 100000000, 0, -1899); ((("positive")), 100000000, 0, -1900); ((("negative")), 100000000, 0, -1901); ((("direct")), 100000000, 0, -1902); ((("gadt")), 100000000, 0, -1903)], (0)), 100000000, 0, -1894)), (("runtime/tools.ml", 1268, 46582, 46586), ("runtime/tools.ml", 1278, 47007, 47050), 0), 0, Tag1 ("Refl__Tools", 4741))], 0), 1, 0, [15; 15; 63; 15; 63; 63; 63; 63; 15], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 1266, 46471, 46473), ("runtime/tools.ml", 1278, 47007, 47050), 0), 0, 0, 0, Tag1 ("Refl__Tools", 4736)), 1, 0); (("fold", 8897), ((Tag1 (0, (Tag1 (0, (Tag3 ((("fold", 8896)), [((("types")), 100000000, 0, -1882); ((("structures")), 100000000, 0, -1883); ((("arity")), 100000000, 0, -1884); ((("rec_group")), 100000000, 0, -1885); ((("kinds")), 100000000, 0, -1886); ((("positive")), 100000000, 0, -1887); ((("negative")), 100000000, 0, -1888); ((("direct")), 100000000, 0, -1889); ((("gadt")), 100000000, 0, -1890)], (0)), 100000000, 0, -1893), (Tag1 (0, ((("acc")), 100000000, 0, -1880), ((("acc")), 100000000, 0, -1880), 0), 100000000, 0, -1892), 0), 100000000, 0, -1891), (Tag1 (0, (Tag3 ((("t", 8893)), [((("types")), 100000000, 0, -1882); ((("structures")), 100000000, 0, -1883); ((("arity")), 100000000, 0, -1884); ((("rec_group")), 100000000, 0, -1885); ((("kinds")), 100000000, 0, -1886); ((("positive")), 100000000, 0, -1887); ((("negative")), 100000000, 0, -1888); ((("direct")), 100000000, 0, -1889); ((("gadt")), 100000000, 0, -1890)], (0)), 100000000, 0, -1881), (Tag1 (0, ((("acc")), 100000000, 0, -1880), ((("acc")), 100000000, 0, -1880), 0), 100000000, 0, -1879), 0), 100000000, 0, -1878), 0), 100000000, 0, -1877), 0, (("runtime/tools.ml", 1280, 47052, 47058), ("runtime/tools.ml", 1280, 47052, 47062), 0), 0, Tag1 ("Refl__Tools", 4748)), 0); Tag3 (("Fields", 8898), 0, (Tag1 ([Tag1 (("t", 8913), ([((("sequence")), 100000000, 0, -2108); ((("structure")), 100000000, 0, -2109); ((("arities")), 100000000, 0, -2110); ((("rec_group")), 100000000, 0, -2111); ((("kinds")), 100000000, 0, -2112); ((("positive")), 100000000, 0, -2113); ((("negative")), 100000000, 0, -2114); ((("direct")), 100000000, 0, -2115); ((("gadts")), 100000000, 0, -2116)], 9, Tag1 ([(("[]", 2144), (0), ((Tag3 ((("t", 8913)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2118); ((("structure")), 100000000, 0, -2119); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2120); ((("rec_group")), 100000000, 0, -2121); ((("kinds")), 100000000, 0, -2122); ((("positive")), 100000000, 0, -2123); ((("negative")), 100000000, 0, -2124); ((("direct")), 100000000, 0, -2125); ((("gadts")), 100000000, 0, -2126)], (0)), 100000000, 0, -2117)), (("runtime/tools.ml", 800, 28662, 28666), ("runtime/tools.ml", 802, 28748, 28776), 0), 0, Tag1 ("Refl__Tools", 2816)); (("::", 2145), ([(Tag3 (Tag1 ((("Field", 8892)), "t"), [((("head")), 100000000, 0, -2129); ((("structure")), 100000000, 0, -2131); ((("arity")), 100000000, 0, -2133); ((("rec_group")), 100000000, 0, -2135); ((("kinds")), 100000000, 0, -2136); ((("positive")), 100000000, 0, -2137); ((("negative")), 100000000, 0, -2138); ((("direct")), 100000000, 0, -2139); ((("gadt")), 100000000, 0, -2141)], (0)), 100000000, 0, -2143); (Tag3 ((("t", 8913)), [((("tail")), 100000000, 0, -2130); ((("structure")), 100000000, 0, -2131); ((("arities")), 100000000, 0, -2134); ((("rec_group")), 100000000, 0, -2135); ((("kinds")), 100000000, 0, -2136); ((("positive")), 100000000, 0, -2137); ((("negative")), 100000000, 0, -2138); ((("direct")), 100000000, 0, -2139); ((("gadts")), 100000000, 0, -2142)], (0)), 100000000, 0, -2144)]), ((Tag3 ((("t", 8913)), [(Tag2 ([((("head")), 100000000, 0, -2129); ((("tail")), 100000000, 0, -2130)]), 100000000, 0, -2128); ((("structure")), 100000000, 0, -2131); (Tag2 ([((("arity")), 100000000, 0, -2133); ((("arities")), 100000000, 0, -2134)]), 100000000, 0, -2132); ((("rec_group")), 100000000, 0, -2135); ((("kinds")), 100000000, 0, -2136); ((("positive")), 100000000, 0, -2137); ((("negative")), 100000000, 0, -2138); ((("direct")), 100000000, 0, -2139); (Tag2 ([((("gadt")), 100000000, 0, -2141); ((("gadts")), 100000000, 0, -2142)]), 100000000, 0, -2140)], (0)), 100000000, 0, -2127)), (("runtime/tools.ml", 803, 28777, 28781), ("runtime/tools.ml", 809, 29081, 29149), 0), 0, Tag1 ("Refl__Tools", 2817))], 0), 1, ((Tag3 (Tag1 (Tag2 ((("Desc_vector", 8757)), (("Field", 8892))), "t"), [((("sequence")), 100000000, 0, -2108); ((("structure")), 100000000, 0, -2109); ((("arities")), 100000000, 0, -2110); ((("rec_group")), 100000000, 0, -2111); ((("kinds")), 100000000, 0, -2112); ((("positive")), 100000000, 0, -2113); ((("negative")), 100000000, 0, -2114); ((("direct")), 100000000, 0, -2115); ((("gadts")), 100000000, 0, -2116)], (0)), 100000000, 0, -2107)), [63; 15; 63; 15; 15; 15; 15; 15; 63], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 798, 28549, 28551), ("runtime/tools.ml", 809, 29081, 29149), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2815)), 1, 0)]), 0, (("runtime/tools.ml", 1304, 48151, 48153), ("runtime/tools.ml", 1304, 48151, 48188), 0), Tag1 ("Refl__Tools", 4778)), 0, 0); Tag3 (("Records", 8899), 0, (Tag1 ([Tag1 (("t", 8914), ([((("sequence")), 100000000, 0, -2146); ((("structure")), 100000000, 0, -2147); ((("arities")), 100000000, 0, -2148); ((("rec_group")), 100000000, 0, -2149); ((("kinds")), 100000000, 0, -2150); ((("positive")), 100000000, 0, -2151); ((("negative")), 100000000, 0, -2152); ((("direct")), 100000000, 0, -2153); ((("gadts")), 100000000, 0, -2154)], 9, Tag1 ([(("[]", 2144), (0), ((Tag3 ((("t", 8914)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2156); ((("structure")), 100000000, 0, -2157); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2158); ((("rec_group")), 100000000, 0, -2159); ((("kinds")), 100000000, 0, -2160); ((("positive")), 100000000, 0, -2161); ((("negative")), 100000000, 0, -2162); ((("direct")), 100000000, 0, -2163); ((("gadts")), 100000000, 0, -2164)], (0)), 100000000, 0, -2155)), (("runtime/tools.ml", 800, 28662, 28666), ("runtime/tools.ml", 802, 28748, 28776), 0), 0, Tag1 ("Refl__Tools", 2816)); (("::", 2145), ([(Tag3 (Tag1 ((("Record", 8891)), "t"), [((("head")), 100000000, 0, -2167); ((("structure")), 100000000, 0, -2169); ((("arity")), 100000000, 0, -2171); ((("rec_group")), 100000000, 0, -2173); ((("kinds")), 100000000, 0, -2174); ((("positive")), 100000000, 0, -2175); ((("negative")), 100000000, 0, -2176); ((("direct")), 100000000, 0, -2177); ((("gadt")), 100000000, 0, -2179)], (0)), 100000000, 0, -2181); (Tag3 ((("t", 8914)), [((("tail")), 100000000, 0, -2168); ((("structure")), 100000000, 0, -2169); ((("arities")), 100000000, 0, -2172); ((("rec_group")), 100000000, 0, -2173); ((("kinds")), 100000000, 0, -2174); ((("positive")), 100000000, 0, -2175); ((("negative")), 100000000, 0, -2176); ((("direct")), 100000000, 0, -2177); ((("gadts")), 100000000, 0, -2180)], (0)), 100000000, 0, -2182)]), ((Tag3 ((("t", 8914)), [(Tag2 ([((("head")), 100000000, 0, -2167); ((("tail")), 100000000, 0, -2168)]), 100000000, 0, -2166); ((("structure")), 100000000, 0, -2169); (Tag2 ([((("arity")), 100000000, 0, -2171); ((("arities")), 100000000, 0, -2172)]), 100000000, 0, -2170); ((("rec_group")), 100000000, 0, -2173); ((("kinds")), 100000000, 0, -2174); ((("positive")), 100000000, 0, -2175); ((("negative")), 100000000, 0, -2176); ((("direct")), 100000000, 0, -2177); (Tag2 ([((("gadt")), 100000000, 0, -2179); ((("gadts")), 100000000, 0, -2180)]), 100000000, 0, -2178)], (0)), 100000000, 0, -2165)), (("runtime/tools.ml", 803, 28777, 28781), ("runtime/tools.ml", 809, 29081, 29149), 0), 0, Tag1 ("Refl__Tools", 2817))], 0), 1, ((Tag3 (Tag1 (Tag2 ((("Desc_vector", 8757)), (("Record", 8891))), "t"), [((("sequence")), 100000000, 0, -2146); ((("structure")), 100000000, 0, -2147); ((("arities")), 100000000, 0, -2148); ((("rec_group")), 100000000, 0, -2149); ((("kinds")), 100000000, 0, -2150); ((("positive")), 100000000, 0, -2151); ((("negative")), 100000000, 0, -2152); ((("direct")), 100000000, 0, -2153); ((("gadts")), 100000000, 0, -2154)], (0)), 100000000, 0, -2145)), [63; 15; 63; 15; 15; 15; 15; 15; 63], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 798, 28549, 28551), ("runtime/tools.ml", 809, 29081, 29149), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2815)), 1, 0)]), 0, (("runtime/tools.ml", 1306, 48190, 48192), ("runtime/tools.ml", 1306, 48190, 48229), 0), Tag1 ("Refl__Tools", 4779)), 0, 0); Tag1 (("structure_find", 8900), ([((("index")), 100000000, 0, -1866); ((("structure")), 100000000, 0, -1867); ((("structures")), 100000000, 0, -1868); ((("arities")), 100000000, 0, -1869); ((("records")), 100000000, 0, -1870); ((("rec_group")), 100000000, 0, -1871); ((("kinds")), 100000000, 0, -1872); ((("positive")), 100000000, 0, -1873); ((("negative")), 100000000, 0, -1874); ((("direct")), 100000000, 0, -1875); ((("gadts")), 100000000, 0, -1876)], 11, Tag1 ([(("Structure_find", 3521), Tag1 ([(("section", 3522), 0, (Tag3 (Tag1 ((("Section", 8758)), "t"), [(Tag8 (([("Succ", ((((("index")), 100000000, 0, -1848))))], (0, 100000000, 0, -1861), 1, 0, 0)), 100000000, 0, -1860); ((("records")), 100000000, 0, -1852); ((("section")), 100000000, 0, -1862); ((("others")), 100000000, 0, -1863)], (0)), 100000000, 0, -1859), (("runtime/tools.ml", 1312, 48411, 48421), ("runtime/tools.ml", 1312, 48411, 48490), 0), 0, Tag1 ("Refl__Tools", 4781)); (("items", 3523), 0, (Tag3 (Tag1 ((("Fields", 8898)), "t"), [((("section")), 100000000, 0, -1862); ((("structure")), 100000000, 0, -1849); ((("arities")), 100000000, 0, -1851); ((("rec_group")), 100000000, 0, -1853); ((("kinds")), 100000000, 0, -1854); ((("positive")), 100000000, 0, -1855); ((("negative")), 100000000, 0, -1856); ((("direct")), 100000000, 0, -1857); ((("gadts")), 100000000, 0, -1858)], (0)), 100000000, 0, -1864), (("runtime/tools.ml", 1313, 48491, 48501), ("runtime/tools.ml", 1315, 48585, 48636), 0), 0, Tag1 ("Refl__Tools", 4782)); (("others", 3524), 0, (Tag3 (Tag1 ((("Records", 8899)), "t"), [((("others")), 100000000, 0, -1863); ((("structures")), 100000000, 0, -1850); ((("arities")), 100000000, 0, -1851); ((("rec_group")), 100000000, 0, -1853); ((("kinds")), 100000000, 0, -1854); ((("positive")), 100000000, 0, -1855); ((("negative")), 100000000, 0, -1856); ((("direct")), 100000000, 0, -1857); ((("gadts")), 100000000, 0, -1858)], (0)), 100000000, 0, -1865), (("runtime/tools.ml", 1316, 48637, 48647), ("runtime/tools.ml", 1318, 48732, 48783), 0), 0, Tag1 ("Refl__Tools", 4783))]), ((Tag3 ((("structure_find", 8900)), [((("index")), 100000000, 0, -1848); ((("structure")), 100000000, 0, -1849); ((("structures")), 100000000, 0, -1850); ((("arities")), 100000000, 0, -1851); ((("records")), 100000000, 0, -1852); ((("rec_group")), 100000000, 0, -1853); ((("kinds")), 100000000, 0, -1854); ((("positive")), 100000000, 0, -1855); ((("negative")), 100000000, 0, -1856); ((("direct")), 100000000, 0, -1857); ((("gadts")), 100000000, 0, -1858)], (0)), 100000000, 0, -1847)), (("runtime/tools.ml", 1311, 48386, 48390), ("runtime/tools.ml", 1322, 48932, 48958), 0), 0, Tag1 ("Refl__Tools", 4784))], 0), 1, 0, [63; 15; 15; 63; 63; 15; 15; 15; 15; 15; 63], [0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 1308, 48231, 48233), ("runtime/tools.ml", 1322, 48932, 48958), 0), 0, 0, 0, Tag1 ("Refl__Tools", 4780)), 1, 0); Tag1 (("find", 8901), ([((("records")), 100000000, 0, -1838); ((("structures")), 100000000, 0, -1839); ((("arities")), 100000000, 0, -1840); ((("rec_group")), 100000000, 0, -1841); ((("kinds")), 100000000, 0, -1842); ((("positive")), 100000000, 0, -1843); ((("negative")), 100000000, 0, -1844); ((("direct")), 100000000, 0, -1845); ((("gadts")), 100000000, 0, -1846)], 9, Tag1 ([(("Find", 3528), Tag1 ([(("index", 3529), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "selection"), [(Tag8 (([("Succ", ((((("index")), 100000000, 0, -1829))))], (0, 100000000, 0, -1828), 1, 0, 0)), 100000000, 0, -1827); ((("structures")), 100000000, 0, -1818); ((("structure")), 100000000, 0, -1830); ((0), 100000000, 0, -1831)], (0)), 100000000, 0, -1826), (("runtime/tools.ml", 1327, 49090, 49100), ("runtime/tools.ml", 1328, 49108, 49178), 0), 0, Tag1 ("Refl__Tools", 4792)); (("section", 3530), 0, (Tag3 (Tag1 ((("Section", 8758)), "t"), [(Tag8 (([("Succ", ((((("index")), 100000000, 0, -1829))))], (0, 100000000, 0, -1834), 1, 0, 0)), 100000000, 0, -1833); ((("records")), 100000000, 0, -1817); ((("section")), 100000000, 0, -1835); ((0), 100000000, 0, -1836)], (0)), 100000000, 0, -1832), (("runtime/tools.ml", 1329, 49179, 49189), ("runtime/tools.ml", 1329, 49179, 49252), 0), 0, Tag1 ("Refl__Tools", 4793)); (("items", 3531), 0, (Tag3 (Tag1 ((("Fields", 8898)), "t"), [((("section")), 100000000, 0, -1835); ((("structure")), 100000000, 0, -1830); ((("arities")), 100000000, 0, -1819); ((("rec_group")), 100000000, 0, -1820); ((("kinds")), 100000000, 0, -1821); ((("positive")), 100000000, 0, -1822); ((("negative")), 100000000, 0, -1823); ((("direct")), 100000000, 0, -1824); ((("gadts")), 100000000, 0, -1825)], (0)), 100000000, 0, -1837), (("runtime/tools.ml", 1330, 49253, 49263), ("runtime/tools.ml", 1332, 49347, 49398), 0), 0, Tag1 ("Refl__Tools", 4794))]), ((Tag3 ((("find", 8901)), [((("records")), 100000000, 0, -1817); ((("structures")), 100000000, 0, -1818); ((("arities")), 100000000, 0, -1819); ((("rec_group")), 100000000, 0, -1820); ((("kinds")), 100000000, 0, -1821); ((("positive")), 100000000, 0, -1822); ((("negative")), 100000000, 0, -1823); ((("direct")), 100000000, 0, -1824); ((("gadts")), 100000000, 0, -1825)], (0)), 100000000, 0, -1816)), (("runtime/tools.ml", 1326, 49075, 49079), ("runtime/tools.ml", 1335, 49481, 49523), 0), 0, Tag1 ("Refl__Tools", 4795))], 0), 1, 0, [63; 15; 63; 15; 15; 15; 15; 15; 63], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 1324, 48960, 48962), ("runtime/tools.ml", 1335, 49481, 49523), 0), 0, 0, 0, Tag1 ("Refl__Tools", 4791)), 1, 0); (("find", 8902), ((Tag1 (0, (Tag3 (Tag1 ((("Records", 8899)), "t"), [(Tag2 ([((("record")), 100000000, 0, -1804); ((("records")), 100000000, 0, -1805)]), 100000000, 0, -1815); ((("structures")), 100000000, 0, -1806); ((("arities")), 100000000, 0, -1807); ((("rec_group")), 100000000, 0, -1808); ((("kinds")), 100000000, 0, -1809); ((("positive")), 100000000, 0, -1810); ((("negative")), 100000000, 0, -1811); ((("direct")), 100000000, 0, -1812); ((("gadts")), 100000000, 0, -1813)], (0)), 100000000, 0, -1814), (Tag1 (0, (Tag1 (0, (Tag3 ((("find", 8901)), [(Tag2 ([((("record")), 100000000, 0, -1804); ((("records")), 100000000, 0, -1805)]), 100000000, 0, -1803); ((("structures")), 100000000, 0, -1806); ((("arities")), 100000000, 0, -1807); ((("rec_group")), 100000000, 0, -1808); ((("kinds")), 100000000, 0, -1809); ((("positive")), 100000000, 0, -1810); ((("negative")), 100000000, 0, -1811); ((("direct")), 100000000, 0, -1812); ((("gadts")), 100000000, 0, -1813)], (0)), 100000000, 0, -1802), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -1799)], (0)), 100000000, 0, -1801), 0), 100000000, 0, -1800), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -1799)], (0)), 100000000, 0, -1798), 0), 100000000, 0, -1797), 0), 100000000, 0, -1796), 0, (("runtime/tools.ml", 1337, 49525, 49531), ("runtime/tools.ml", 1337, 49525, 49535), 0), 0, Tag1 ("Refl__Tools", 4802)), 0)]), 0, (("runtime/tools.ml", 1162, 42277, 42277), ("runtime/tools.ml", 1420, 53194, 53197), 0), Tag1 ("Refl__Tools", 4925)), 0, 0); Tag3 (("Constructor", 8768), 0, (Tag1 ([(("map_eqs", 8915), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "constructor_eqs"), [((("a_eqs")), 100000000, 0, -2383); ((("structure_eqs")), 100000000, 0, -2385); ((("kinds_a")), 100000000, 0, -2389); ((("gadt")), 100000000, 0, -2387)], (0)), 100000000, 0, -2388), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "constructor_eqs"), [((("b_eqs")), 100000000, 0, -2382); ((("structure_eqs")), 100000000, 0, -2385); ((("kinds_b")), 100000000, 0, -2386); ((("gadt")), 100000000, 0, -2387)], (0)), 100000000, 0, -2384), (Tag1 (0, ((("a_eqs")), 100000000, 0, -2383), ((("b_eqs")), 100000000, 0, -2382), 0), 100000000, 0, -2381), 0), 100000000, 0, -2380), 0), 100000000, 0, -2379), 0, (("runtime/tools.ml", 1423, 53227, 53237), ("runtime/tools.ml", 1423, 53227, 53244), 0), 0, Tag1 ("Refl__Tools", 4926)), 0); (("map_choice", 8916), ((Tag1 (0, (Tag3 ((("map", 8759)), [((("a_arity")), 100000000, 0, -2373); ((("b_arity")), 100000000, 0, -2365); ((("rec_group")), 100000000, 0, -2366); (Tag8 (([("Exists", (((Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2376)))); ("Poly", (((Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2377))))], ((0), 100000000, 0, -2375), 0, 0, 0)), 100000000, 0, -2374); ((("kinds_b")), 100000000, 0, -2367); ((("positive")), 100000000, 0, -2368); ((("negative")), 100000000, 0, -2369); ((("direct")), 100000000, 0, -2370); ((("gadt")), 100000000, 0, -2371)], (0)), 100000000, 0, -2378), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "constructors"), [((("a_cases")), 100000000, 0, -2362); ((("structures")), 100000000, 0, -2364); ((("a_arity")), 100000000, 0, -2373); ((("rec_group")), 100000000, 0, -2366); (Tag8 (([("Exists", (((Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2376)))); ("Poly", (((Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2377))))], ((0), 100000000, 0, -2375), 0, 0, 0)), 100000000, 0, -2374); ((("positive")), 100000000, 0, -2368); ((("negative")), 100000000, 0, -2369); ((("direct")), 100000000, 0, -2370); ((("gadt")), 100000000, 0, -2371)], (0)), 100000000, 0, -2372), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "constructors"), [((("b_cases")), 100000000, 0, -2360); ((("structures")), 100000000, 0, -2364); ((("b_arity")), 100000000, 0, -2365); ((("rec_group")), 100000000, 0, -2366); ((("kinds_b")), 100000000, 0, -2367); ((("positive")), 100000000, 0, -2368); ((("negative")), 100000000, 0, -2369); ((("direct")), 100000000, 0, -2370); ((("gadt")), 100000000, 0, -2371)], (0)), 100000000, 0, -2363), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "binary_choice"), [((("a_cases")), 100000000, 0, -2362)], (0)), 100000000, 0, -2361), (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "binary_choice"), [((("b_cases")), 100000000, 0, -2360)], (0)), 100000000, 0, -2359), 0), 100000000, 0, -2358), 0), 100000000, 0, -2357), 0), 100000000, 0, -2356), 0), 100000000, 0, -2355), 0, (("runtime/tools.ml", 1437, 53750, 53760), ("runtime/tools.ml", 1437, 53750, 53770), 0), 0, Tag1 ("Refl__Tools", 4978)), 0); Tag3 (("Map", 8917), 0, (Tag2 (((("M", 8923)), ((("Mapper", 8760)))), Tag1 ([Tag3 (("Tools", 8924), 0, (Tag1 ([Tag1 (("make_variables", 8928), ([((("types")), 100000000, 0, -2477); ((("arity_a")), 100000000, 0, -2478); ((("arity_b")), 100000000, 0, -2479); ((("subpositive")), 100000000, 0, -2480); ((("subnegative")), 100000000, 0, -2481)], 5, Tag1 ([(("MakeVariables", 2183), Tag1 ([(("subarity_a", 2184), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("types")), 100000000, 0, -2483); ((("arity_a")), 100000000, 0, -2484); ((("subarity_a")), 100000000, 0, -2489)], (0)), 100000000, 0, -2488), (("runtime/tools.ml", 889, 31330, 31338), ("runtime/tools.ml", 889, 31330, 31390), 0), 0, Tag1 ("Refl__Tools", 2865)); (("subarity_b", 2185), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("types")), 100000000, 0, -2483); ((("arity_b")), 100000000, 0, -2485); ((("subarity_b")), 100000000, 0, -2491)], (0)), 100000000, 0, -2490), (("runtime/tools.ml", 890, 31391, 31399), ("runtime/tools.ml", 890, 31391, 31451), 0), 0, Tag1 ("Refl__Tools", 2866)); (("mapper", 2186), 0, (Tag3 (Tag1 ((("M", 8923)), "t"), [((("subarity_a")), 100000000, 0, -2489); ((("subarity_b")), 100000000, 0, -2491); ((("subpositive")), 100000000, 0, -2486); ((("subnegative")), 100000000, 0, -2487)], (0)), 100000000, 0, -2492), (("runtime/tools.ml", 891, 31452, 31460), ("runtime/tools.ml", 892, 31469, 31538), 0), 0, Tag1 ("Refl__Tools", 2867))]), ((Tag3 ((("make_variables", 8928)), [((("types")), 100000000, 0, -2483); ((("arity_a")), 100000000, 0, -2484); ((("arity_b")), 100000000, 0, -2485); ((("subpositive")), 100000000, 0, -2486); ((("subnegative")), 100000000, 0, -2487)], (0)), 100000000, 0, -2482)), (("runtime/tools.ml", 888, 31306, 31310), ("runtime/tools.ml", 894, 31550, 31629), 0), 0, Tag1 ("Refl__Tools", 2868))], 0), 1, ((Tag3 (Tag1 (Tag2 ((("MapperTools", 8764)), (("M", 8923))), "make_variables"), [((("types")), 100000000, 0, -2477); ((("arity_a")), 100000000, 0, -2478); ((("arity_b")), 100000000, 0, -2479); ((("subpositive")), 100000000, 0, -2480); ((("subnegative")), 100000000, 0, -2481)], (0)), 100000000, 0, -2476)), [63; 15; 15; 15; 15], [0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 887, 31225, 31227), ("runtime/tools.ml", 894, 31550, 31629), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2864)), 1, 0); (("make_variables_aux", 8929), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -2471); ((("types")), 100000000, 0, -2460)], (0)), 100000000, 0, -2475), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -2471); ((("positives")), 100000000, 0, -2473)], (0)), 100000000, 0, -2474), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("positives")), 100000000, 0, -2473); ((("positive")), 100000000, 0, -2466); ((("subpositive")), 100000000, 0, -2463)], (0)), 100000000, 0, -2472), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -2471); ((("negatives")), 100000000, 0, -2469)], (0)), 100000000, 0, -2470), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("negatives")), 100000000, 0, -2469); ((("negative")), 100000000, 0, -2467); ((("subnegative")), 100000000, 0, -2464)], (0)), 100000000, 0, -2468), (Tag1 (0, (Tag3 (Tag1 ((("M", 8923)), "t"), [((("arity_a")), 100000000, 0, -2461); ((("arity_b")), 100000000, 0, -2462); ((("positive")), 100000000, 0, -2466); ((("negative")), 100000000, 0, -2467)], (0)), 100000000, 0, -2465), (Tag3 ((("make_variables", 8928)), [((("types")), 100000000, 0, -2460); ((("arity_a")), 100000000, 0, -2461); ((("arity_b")), 100000000, 0, -2462); ((("subpositive")), 100000000, 0, -2463); ((("subnegative")), 100000000, 0, -2464)], (0)), 100000000, 0, -2459), 0), 100000000, 0, -2458), 0), 100000000, 0, -2457), 0), 100000000, 0, -2456), 0), 100000000, 0, -2455), 0), 100000000, 0, -2454), 0), 100000000, 0, -2453), 0, (("runtime/tools.ml", 896, 31631, 31641), ("runtime/tools.ml", 896, 31631, 31659), 0), 0, Tag1 ("Refl__Tools", 2875)), 0); (("make_variables", 8930), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((0), 100000000, 0, -2445); ((0), 100000000, 0, -2436)], (0)), 100000000, 0, -2452), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "subvariables"), [((0), 100000000, 0, -2445); ((0), 100000000, 0, -2446); ((0), 100000000, 0, -2442); ((0), 100000000, 0, -2443); ((0), 100000000, 0, -2447); ((0), 100000000, 0, -2448); ((0), 100000000, 0, -2449); ((0), 100000000, 0, -2450); ((0), 100000000, 0, -2439); ((0), 100000000, 0, -2440); ((0), 100000000, 0, -2451)], (0)), 100000000, 0, -2444), (Tag1 (0, (Tag3 (Tag1 ((("M", 8923)), "t"), [((0), 100000000, 0, -2437); ((0), 100000000, 0, -2438); ((0), 100000000, 0, -2442); ((0), 100000000, 0, -2443)], (0)), 100000000, 0, -2441), (Tag3 ((("make_variables", 8928)), [((0), 100000000, 0, -2436); ((0), 100000000, 0, -2437); ((0), 100000000, 0, -2438); ((0), 100000000, 0, -2439); ((0), 100000000, 0, -2440)], (0)), 100000000, 0, -2435), 0), 100000000, 0, -2434), 0), 100000000, 0, -2433), 0), 100000000, 0, -2432), 0, (("runtime/tools.ml", 922, 32755, 32761), ("runtime/tools.ml", 922, 32755, 32775), 0), 0, Tag1 ("Refl__Tools", 2979)), 0)]), 0, (("runtime/tools.ml", 1472, 55285, 55289), ("runtime/tools.ml", 1472, 55285, 55319), 0), Tag1 ("Refl__Tools", 5485)), 0, 0); Tag3 (("RecordMap", 8925), 0, (Tag1 ([Tag3 (("Tools", 8931), 0, (Tag1 ([Tag1 (("make_variables", 8935), ([((("types")), 100000000, 0, -2607); ((("arity_a")), 100000000, 0, -2608); ((("arity_b")), 100000000, 0, -2609); ((("subpositive")), 100000000, 0, -2610); ((("subnegative")), 100000000, 0, -2611)], 5, Tag1 ([(("MakeVariables", 2183), Tag1 ([(("subarity_a", 2184), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("types")), 100000000, 0, -2613); ((("arity_a")), 100000000, 0, -2614); ((("subarity_a")), 100000000, 0, -2619)], (0)), 100000000, 0, -2618), (("runtime/tools.ml", 889, 31330, 31338), ("runtime/tools.ml", 889, 31330, 31390), 0), 0, Tag1 ("Refl__Tools", 2865)); (("subarity_b", 2185), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("types")), 100000000, 0, -2613); ((("arity_b")), 100000000, 0, -2615); ((("subarity_b")), 100000000, 0, -2621)], (0)), 100000000, 0, -2620), (("runtime/tools.ml", 890, 31391, 31399), ("runtime/tools.ml", 890, 31391, 31451), 0), 0, Tag1 ("Refl__Tools", 2866)); (("mapper", 2186), 0, (Tag3 (Tag1 ((("M", 8923)), "t"), [((("subarity_a")), 100000000, 0, -2619); ((("subarity_b")), 100000000, 0, -2621); ((("subpositive")), 100000000, 0, -2616); ((("subnegative")), 100000000, 0, -2617)], (0)), 100000000, 0, -2622), (("runtime/tools.ml", 891, 31452, 31460), ("runtime/tools.ml", 892, 31469, 31538), 0), 0, Tag1 ("Refl__Tools", 2867))]), ((Tag3 ((("make_variables", 8935)), [((("types")), 100000000, 0, -2613); ((("arity_a")), 100000000, 0, -2614); ((("arity_b")), 100000000, 0, -2615); ((("subpositive")), 100000000, 0, -2616); ((("subnegative")), 100000000, 0, -2617)], (0)), 100000000, 0, -2612)), (("runtime/tools.ml", 888, 31306, 31310), ("runtime/tools.ml", 894, 31550, 31629), 0), 0, Tag1 ("Refl__Tools", 2868))], 0), 1, ((Tag3 (Tag1 (Tag2 ((("MapperTools", 8764)), (("M", 8923))), "make_variables"), [((("types")), 100000000, 0, -2607); ((("arity_a")), 100000000, 0, -2608); ((("arity_b")), 100000000, 0, -2609); ((("subpositive")), 100000000, 0, -2610); ((("subnegative")), 100000000, 0, -2611)], (0)), 100000000, 0, -2606)), [63; 15; 15; 15; 15], [0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 887, 31225, 31227), ("runtime/tools.ml", 894, 31550, 31629), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2864)), 1, 0); (("make_variables_aux", 8936), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -2601); ((("types")), 100000000, 0, -2590)], (0)), 100000000, 0, -2605), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -2601); ((("positives")), 100000000, 0, -2603)], (0)), 100000000, 0, -2604), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("positives")), 100000000, 0, -2603); ((("positive")), 100000000, 0, -2596); ((("subpositive")), 100000000, 0, -2593)], (0)), 100000000, 0, -2602), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -2601); ((("negatives")), 100000000, 0, -2599)], (0)), 100000000, 0, -2600), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("negatives")), 100000000, 0, -2599); ((("negative")), 100000000, 0, -2597); ((("subnegative")), 100000000, 0, -2594)], (0)), 100000000, 0, -2598), (Tag1 (0, (Tag3 (Tag1 ((("M", 8923)), "t"), [((("arity_a")), 100000000, 0, -2591); ((("arity_b")), 100000000, 0, -2592); ((("positive")), 100000000, 0, -2596); ((("negative")), 100000000, 0, -2597)], (0)), 100000000, 0, -2595), (Tag3 ((("make_variables", 8935)), [((("types")), 100000000, 0, -2590); ((("arity_a")), 100000000, 0, -2591); ((("arity_b")), 100000000, 0, -2592); ((("subpositive")), 100000000, 0, -2593); ((("subnegative")), 100000000, 0, -2594)], (0)), 100000000, 0, -2589), 0), 100000000, 0, -2588), 0), 100000000, 0, -2587), 0), 100000000, 0, -2586), 0), 100000000, 0, -2585), 0), 100000000, 0, -2584), 0), 100000000, 0, -2583), 0, (("runtime/tools.ml", 896, 31631, 31641), ("runtime/tools.ml", 896, 31631, 31659), 0), 0, Tag1 ("Refl__Tools", 2875)), 0); (("make_variables", 8937), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((0), 100000000, 0, -2575); ((0), 100000000, 0, -2566)], (0)), 100000000, 0, -2582), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "subvariables"), [((0), 100000000, 0, -2575); ((0), 100000000, 0, -2576); ((0), 100000000, 0, -2572); ((0), 100000000, 0, -2573); ((0), 100000000, 0, -2577); ((0), 100000000, 0, -2578); ((0), 100000000, 0, -2579); ((0), 100000000, 0, -2580); ((0), 100000000, 0, -2569); ((0), 100000000, 0, -2570); ((0), 100000000, 0, -2581)], (0)), 100000000, 0, -2574), (Tag1 (0, (Tag3 (Tag1 ((("M", 8923)), "t"), [((0), 100000000, 0, -2567); ((0), 100000000, 0, -2568); ((0), 100000000, 0, -2572); ((0), 100000000, 0, -2573)], (0)), 100000000, 0, -2571), (Tag3 ((("make_variables", 8935)), [((0), 100000000, 0, -2566); ((0), 100000000, 0, -2567); ((0), 100000000, 0, -2568); ((0), 100000000, 0, -2569); ((0), 100000000, 0, -2570)], (0)), 100000000, 0, -2565), 0), 100000000, 0, -2564), 0), 100000000, 0, -2563), 0), 100000000, 0, -2562), 0, (("runtime/tools.ml", 922, 32755, 32761), ("runtime/tools.ml", 922, 32755, 32775), 0), 0, Tag1 ("Refl__Tools", 2979)), 0)]), 0, (("runtime/tools.ml", 1204, 43746, 43750), ("runtime/tools.ml", 1204, 43746, 43780), 0), Tag1 ("Refl__Tools", 4584)), 0, 0); (("map_poly", 8932), ((Tag1 (0, (Tag3 (Tag1 ((("M", 8923)), "t"), [((("arity_a")), 100000000, 0, -2550); ((("arity_b")), 100000000, 0, -2541); ((("positive")), 100000000, 0, -2555); ((("negative")), 100000000, 0, -2556)], (0)), 100000000, 0, -2561), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "subvariables"), [((("count")), 100000000, 0, -2548); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -2554), 1, 0, 0)), 100000000, 0, -2553); ((("positive")), 100000000, 0, -2555); ((("negative")), 100000000, 0, -2556); ((("direct")), 100000000, 0, -2557); ((("positives")), 100000000, 0, -2558); ((("negatives")), 100000000, 0, -2559); ((("directs")), 100000000, 0, -2560); ((("subpositive")), 100000000, 0, -2544); ((("subnegative")), 100000000, 0, -2545); ((("subdirect")), 100000000, 0, -2546)], (0)), 100000000, 0, -2552), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "forall_destruct"), [((("a")), 100000000, 0, -2537); ((("structure")), 100000000, 0, -2540); ((("arity_a")), 100000000, 0, -2550); (Tag3 (Tag1 ((("M", 8923)), "rec_group"), 0, (0)), 100000000, 0, -2542); ((("kinds")), 100000000, 0, -2543); ((("subpositive")), 100000000, 0, -2544); ((("subnegative")), 100000000, 0, -2545); ((("subdirect")), 100000000, 0, -2546); (Tag3 (Tag1 ((("M", 8923)), "gadt"), 0, (0)), 100000000, 0, -2551); ((("count")), 100000000, 0, -2548)], (0)), 100000000, 0, -2549), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "forall_construct"), [((("b")), 100000000, 0, -2536); ((("structure")), 100000000, 0, -2540); ((("arity_b")), 100000000, 0, -2541); (Tag3 (Tag1 ((("M", 8923)), "rec_group"), 0, (0)), 100000000, 0, -2542); ((("kinds")), 100000000, 0, -2543); ((("subpositive")), 100000000, 0, -2544); ((("subnegative")), 100000000, 0, -2545); ((("subdirect")), 100000000, 0, -2546); (Tag3 (Tag1 ((("M", 8923)), "gadt"), 0, (0)), 100000000, 0, -2547); ((("count")), 100000000, 0, -2548)], (0)), 100000000, 0, -2539), ((("b")), 100000000, 0, -2536), 0), 100000000, 0, -2538), (Tag1 (0, ((("a")), 100000000, 0, -2537), ((("b")), 100000000, 0, -2536), 0), 100000000, 0, -2535), 0), 100000000, 0, -2534), 0), 100000000, 0, -2533), 0), 100000000, 0, -2532), 0), 100000000, 0, -2531), 0, (("runtime/tools.ml", 1206, 43782, 43790), ("runtime/tools.ml", 1206, 43782, 43798), 0), 0, Tag1 ("Refl__Tools", 4585)), 0); (("map_with", 8933), ((Tag1 (0, (Tag3 (Tag1 ((("M", 8923)), "t"), [((("arity_a")), 100000000, 0, -2527); ((("arity_b")), 100000000, 0, -2519); ((("positive")), 100000000, 0, -2522); ((("negative")), 100000000, 0, -2523)], (0)), 100000000, 0, -2530), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "record_structure"), [((("types_a")), 100000000, 0, -2516); ((("structure")), 100000000, 0, -2518); ((("arity_a")), 100000000, 0, -2527); (Tag3 (Tag1 ((("M", 8923)), "rec_group"), 0, (0)), 100000000, 0, -2528); ((("kinds")), 100000000, 0, -2521); ((("positive")), 100000000, 0, -2522); ((("negative")), 100000000, 0, -2523); ((("direct")), 100000000, 0, -2524); (Tag3 (Tag1 ((("M", 8923)), "gadt"), 0, (0)), 100000000, 0, -2529)], (0)), 100000000, 0, -2526), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "record_structure"), [((("types_b")), 100000000, 0, -2515); ((("structure")), 100000000, 0, -2518); ((("arity_b")), 100000000, 0, -2519); (Tag3 (Tag1 ((("M", 8923)), "rec_group"), 0, (0)), 100000000, 0, -2520); ((("kinds")), 100000000, 0, -2521); ((("positive")), 100000000, 0, -2522); ((("negative")), 100000000, 0, -2523); ((("direct")), 100000000, 0, -2524); (Tag3 (Tag1 ((("M", 8923)), "gadt"), 0, (0)), 100000000, 0, -2525)], (0)), 100000000, 0, -2517), (Tag1 (0, ((("types_a")), 100000000, 0, -2516), ((("types_b")), 100000000, 0, -2515), 0), 100000000, 0, -2514), 0), 100000000, 0, -2513), 0), 100000000, 0, -2512), 0), 100000000, 0, -2511), 0, (("runtime/tools.ml", 1235, 45175, 45187), ("runtime/tools.ml", 1235, 45175, 45195), 0), 0, Tag1 ("Refl__Tools", 4612)), 0); (("map", 8934), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "record_structure"), [((0), 100000000, 0, -2497); ((0), 100000000, 0, -2499); (Tag3 (Tag1 ((("M", 8923)), "a_arity"), 0, (0)), 100000000, 0, -2508); (Tag3 (Tag1 ((("M", 8923)), "rec_group"), 0, (0)), 100000000, 0, -2509); ((0), 100000000, 0, -2502); (Tag3 (Tag1 ((("M", 8923)), "positive"), 0, (0)), 100000000, 0, -2503); (Tag3 (Tag1 ((("M", 8923)), "negative"), 0, (0)), 100000000, 0, -2504); ((0), 100000000, 0, -2505); (Tag3 (Tag1 ((("M", 8923)), "gadt"), 0, (0)), 100000000, 0, -2510)], (0)), 100000000, 0, -2507), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "record_structure"), [((0), 100000000, 0, -2496); ((0), 100000000, 0, -2499); (Tag3 (Tag1 ((("M", 8923)), "b_arity"), 0, (0)), 100000000, 0, -2500); (Tag3 (Tag1 ((("M", 8923)), "rec_group"), 0, (0)), 100000000, 0, -2501); ((0), 100000000, 0, -2502); (Tag3 (Tag1 ((("M", 8923)), "positive"), 0, (0)), 100000000, 0, -2503); (Tag3 (Tag1 ((("M", 8923)), "negative"), 0, (0)), 100000000, 0, -2504); ((0), 100000000, 0, -2505); (Tag3 (Tag1 ((("M", 8923)), "gadt"), 0, (0)), 100000000, 0, -2506)], (0)), 100000000, 0, -2498), (Tag1 (0, ((0), 100000000, 0, -2497), ((0), 100000000, 0, -2496), 0), 100000000, 0, -2495), 0), 100000000, 0, -2494), 0), 100000000, 0, -2493), 0, (("runtime/tools.ml", 1262, 46373, 46381), ("runtime/tools.ml", 1262, 46373, 46384), 0), 0, Tag1 ("Refl__Tools", 4731)), 0)]), 0, (("runtime/tools.ml", 1474, 55321, 55325), ("runtime/tools.ml", 1474, 55321, 55358), 0), Tag1 ("Refl__Tools", 5486)), 0, 0); (("map_kind", 8926), ((Tag1 (0, (Tag3 (Tag1 ((("M", 8923)), "t"), [((("a_arity")), 100000000, 0, -2428); ((("b_arity")), 100000000, 0, -2420); ((("subpositive")), 100000000, 0, -2423); ((("subnegative")), 100000000, 0, -2424)], (0)), 100000000, 0, -2431), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "constructor_kind"), [((("types_a")), 100000000, 0, -2417); ((("structure")), 100000000, 0, -2419); ((("a_arity")), 100000000, 0, -2428); (Tag3 (Tag1 ((("M", 8923)), "rec_group"), 0, (0)), 100000000, 0, -2429); ((("kinds")), 100000000, 0, -2422); ((("subpositive")), 100000000, 0, -2423); ((("subnegative")), 100000000, 0, -2424); ((("subdirect")), 100000000, 0, -2425); (Tag3 (Tag1 ((("M", 8923)), "gadt"), 0, (0)), 100000000, 0, -2430)], (0)), 100000000, 0, -2427), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "constructor_kind"), [((("types_b")), 100000000, 0, -2416); ((("structure")), 100000000, 0, -2419); ((("b_arity")), 100000000, 0, -2420); (Tag3 (Tag1 ((("M", 8923)), "rec_group"), 0, (0)), 100000000, 0, -2421); ((("kinds")), 100000000, 0, -2422); ((("subpositive")), 100000000, 0, -2423); ((("subnegative")), 100000000, 0, -2424); ((("subdirect")), 100000000, 0, -2425); (Tag3 (Tag1 ((("M", 8923)), "gadt"), 0, (0)), 100000000, 0, -2426)], (0)), 100000000, 0, -2418), (Tag1 (0, ((("types_a")), 100000000, 0, -2417), ((("types_b")), 100000000, 0, -2416), 0), 100000000, 0, -2415), 0), 100000000, 0, -2414), 0), 100000000, 0, -2413), 0), 100000000, 0, -2412), 0, (("runtime/tools.ml", 1476, 55360, 55368), ("runtime/tools.ml", 1476, 55360, 55376), 0), 0, Tag1 ("Refl__Tools", 5487)), 0); (("map_choice", 8927), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "constructors"), [((("a_cases")), 100000000, 0, -2396); ((("structures")), 100000000, 0, -2398); (Tag3 (Tag1 ((("M", 8923)), "a_arity"), 0, (0)), 100000000, 0, -2407); (Tag3 (Tag1 ((("M", 8923)), "rec_group"), 0, (0)), 100000000, 0, -2408); ((("kinds")), 100000000, 0, -2401); (Tag3 (Tag1 ((("M", 8923)), "positive"), 0, (0)), 100000000, 0, -2409); (Tag3 (Tag1 ((("M", 8923)), "negative"), 0, (0)), 100000000, 0, -2410); ((("direct")), 100000000, 0, -2404); (Tag3 (Tag1 ((("M", 8923)), "gadt"), 0, (0)), 100000000, 0, -2411)], (0)), 100000000, 0, -2406), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "constructors"), [((("b_cases")), 100000000, 0, -2394); ((("structures")), 100000000, 0, -2398); (Tag3 (Tag1 ((("M", 8923)), "b_arity"), 0, (0)), 100000000, 0, -2399); (Tag3 (Tag1 ((("M", 8923)), "rec_group"), 0, (0)), 100000000, 0, -2400); ((("kinds")), 100000000, 0, -2401); (Tag3 (Tag1 ((("M", 8923)), "positive"), 0, (0)), 100000000, 0, -2402); (Tag3 (Tag1 ((("M", 8923)), "negative"), 0, (0)), 100000000, 0, -2403); ((("direct")), 100000000, 0, -2404); (Tag3 (Tag1 ((("M", 8923)), "gadt"), 0, (0)), 100000000, 0, -2405)], (0)), 100000000, 0, -2397), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "binary_choice"), [((("a_cases")), 100000000, 0, -2396)], (0)), 100000000, 0, -2395), (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "binary_choice"), [((("b_cases")), 100000000, 0, -2394)], (0)), 100000000, 0, -2393), 0), 100000000, 0, -2392), 0), 100000000, 0, -2391), 0), 100000000, 0, -2390), 0, (("runtime/tools.ml", 1491, 56043, 56055), ("runtime/tools.ml", 1491, 56043, 56065), 0), 0, Tag1 ("Refl__Tools", 5509)), 0)])), 0, (("runtime/tools.ml", 1471, 55250, 55252), ("runtime/tools.ml", 1534, 58020, 58025), 0), Tag1 ("Refl__Tools", 6662)), 0, 0); Tag1 (("kind", 8918), ([((("types")), 100000000, 0, -2346); ((("structure")), 100000000, 0, -2347); ((("arity")), 100000000, 0, -2348); ((("rec_group")), 100000000, 0, -2349); ((("kinds")), 100000000, 0, -2350); ((("positive")), 100000000, 0, -2351); ((("negative")), 100000000, 0, -2352); ((("direct")), 100000000, 0, -2353); ((("gadt")), 100000000, 0, -2354)], 9, Tag1 ([(("Tuple", 4850), ([(Tag3 (Tag1 ((("Tuple", 8766)), "t"), [((("types")), 100000000, 0, -2321); ((("structures")), 100000000, 0, -2324); ((("arity")), 100000000, 0, -2325); ((("rec_group")), 100000000, 0, -2326); ((("kinds")), 100000000, 0, -2327); ((("positive")), 100000000, 0, -2328); ((("negative")), 100000000, 0, -2329); ((("direct")), 100000000, 0, -2330); ((("gadt")), 100000000, 0, -2331)], (0)), 100000000, 0, -2332)]), ((Tag3 ((("kind", 8918)), [((("types")), 100000000, 0, -2321); (Tag8 (([("Tuple", ((((("structures")), 100000000, 0, -2324))))], (0, 100000000, 0, -2323), 1, 0, 0)), 100000000, 0, -2322); ((("arity")), 100000000, 0, -2325); ((("rec_group")), 100000000, 0, -2326); ((("kinds")), 100000000, 0, -2327); ((("positive")), 100000000, 0, -2328); ((("negative")), 100000000, 0, -2329); ((("direct")), 100000000, 0, -2330); ((("gadt")), 100000000, 0, -2331)], (0)), 100000000, 0, -2320)), (("runtime/tools.ml", 1538, 58136, 58140), ("runtime/tools.ml", 1542, 58339, 58393), 0), 0, Tag1 ("Refl__Tools", 6664)); (("Record", 4851), ([(Tag3 (Tag1 ((("Record", 8767)), "t"), [((("types")), 100000000, 0, -2334); ((("structures")), 100000000, 0, -2337); ((("arity")), 100000000, 0, -2338); ((("rec_group")), 100000000, 0, -2339); ((("kinds")), 100000000, 0, -2340); ((("positive")), 100000000, 0, -2341); ((("negative")), 100000000, 0, -2342); ((("direct")), 100000000, 0, -2343); ((("gadt")), 100000000, 0, -2344)], (0)), 100000000, 0, -2345)]), ((Tag3 ((("kind", 8918)), [((("types")), 100000000, 0, -2334); (Tag8 (([("Record", ((((("structures")), 100000000, 0, -2337))))], (0, 100000000, 0, -2336), 1, 0, 0)), 100000000, 0, -2335); ((("arity")), 100000000, 0, -2338); ((("rec_group")), 100000000, 0, -2339); ((("kinds")), 100000000, 0, -2340); ((("positive")), 100000000, 0, -2341); ((("negative")), 100000000, 0, -2342); ((("direct")), 100000000, 0, -2343); ((("gadt")), 100000000, 0, -2344)], (0)), 100000000, 0, -2333)), (("runtime/tools.ml", 1543, 58394, 58398), ("runtime/tools.ml", 1547, 58600, 58654), 0), 0, Tag1 ("Refl__Tools", 6665))], 0), 1, 0, [63; 63; 63; 15; 63; 63; 63; 63; 15], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 1536, 58027, 58029), ("runtime/tools.ml", 1547, 58600, 58654), 0), 0, 0, 0, Tag1 ("Refl__Tools", 6663)), 1, 0); Tag1 (("link", 8919), ([((("value")), 100000000, 0, -2307); ((("constructor")), 100000000, 0, -2308); ((("arity")), 100000000, 0, -2309); ((("positive")), 100000000, 0, -2310); ((("negative")), 100000000, 0, -2311); ((("direct")), 100000000, 0, -2312); ((("values")), 100000000, 0, -2313); ((("structure")), 100000000, 0, -2314); ((("subarity")), 100000000, 0, -2315); ((("subpositive")), 100000000, 0, -2316); ((("subnegative")), 100000000, 0, -2317); ((("subdirect")), 100000000, 0, -2318); ((("kinds")), 100000000, 0, -2319)], 13, Tag1 ([(("Constructor", 4853), (0), ((Tag3 ((("link", 8919)), [(Tag2 ([((("values")), 100000000, 0, -2265); ((("eqs")), 100000000, 0, -2266)]), 100000000, 0, -2264); (Tag8 (([("Constructor", (((Tag2 ([((("structure")), 100000000, 0, -2270); ((("structure_eq")), 100000000, 0, -2271)]), 100000000, 0, -2269))))], (0, 100000000, 0, -2268), 1, 0, 0)), 100000000, 0, -2267); ((("arity")), 100000000, 0, -2272); ((("positive")), 100000000, 0, -2273); ((("negative")), 100000000, 0, -2274); ((("direct")), 100000000, 0, -2275); ((("values")), 100000000, 0, -2265); ((("structure")), 100000000, 0, -2270); ((("arity")), 100000000, 0, -2272); ((("positive")), 100000000, 0, -2273); ((("negative")), 100000000, 0, -2274); ((("direct")), 100000000, 0, -2275); ((("kinds")), 100000000, 0, -2276)], (0)), 100000000, 0, -2263)), (("runtime/tools.ml", 1552, 58830, 58834), ("runtime/tools.ml", 1555, 58999, 59052), 0), 0, Tag1 ("Refl__Tools", 6667)); (("Exists", 4854), Tag1 ([(("presence", 4855), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "presence"), [(Tag8 (([("Exists", (0))], ((("kinds")), 100000000, 0, -2299), 0, 0, 0)), 100000000, 0, -2298); ((("local")), 100000000, 0, -2285)], (0)), 100000000, 0, -2300), (("runtime/tools.ml", 1557, 59070, 59080), ("runtime/tools.ml", 1557, 59070, 59117), 0), 0, Tag1 ("Refl__Tools", 6668)); (("exists_count", 4856), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -2283); ((("exists")), 100000000, 0, -2302)], (0)), 100000000, 0, -2301), (("runtime/tools.ml", 1558, 59118, 59128), ("runtime/tools.ml", 1558, 59118, 59168), 0), 0, Tag1 ("Refl__Tools", 6669)); (("variables", 4857), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "subvariables"), [((("count")), 100000000, 0, -2283); ((("local")), 100000000, 0, -2285); ((("positive")), 100000000, 0, -2290); ((("negative")), 100000000, 0, -2291); ((("direct")), 100000000, 0, -2292); ((("positives")), 100000000, 0, -2286); ((("negatives")), 100000000, 0, -2287); ((("directs")), 100000000, 0, -2288); ((("subpositive")), 100000000, 0, -2295); ((("subnegative")), 100000000, 0, -2296); ((("subdirect")), 100000000, 0, -2297)], (0)), 100000000, 0, -2303), (("runtime/tools.ml", 1559, 59169, 59179), ("runtime/tools.ml", 1561, 59313, 59350), 0), 0, Tag1 ("Refl__Tools", 6670)); (("constraints", 4858), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "gadt_constraints"), [((("constraints")), 100000000, 0, -2305); ((("exists")), 100000000, 0, -2302)], (0)), 100000000, 0, -2304), (("runtime/tools.ml", 1562, 59351, 59361), ("runtime/tools.ml", 1562, 59351, 59416), 0), 0, Tag1 ("Refl__Tools", 6671)); (("exists", 4859), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("exists")), 100000000, 0, -2302); ((("arity")), 100000000, 0, -2289); ((("subarity")), 100000000, 0, -2294)], (0)), 100000000, 0, -2306), (("runtime/tools.ml", 1563, 59417, 59427), ("runtime/tools.ml", 1563, 59417, 59472), 0), 0, Tag1 ("Refl__Tools", 6672))]), ((Tag3 ((("link", 8919)), [((0), 100000000, 0, -2278); (Tag8 (([("Exists", (((Tag2 ([((("index")), 100000000, 0, -2282); ((("count")), 100000000, 0, -2283); ((("structure")), 100000000, 0, -2284); ((("local")), 100000000, 0, -2285); ((("positives")), 100000000, 0, -2286); ((("negatives")), 100000000, 0, -2287); ((("directs")), 100000000, 0, -2288)]), 100000000, 0, -2281))))], (0, 100000000, 0, -2280), 1, 0, 0)), 100000000, 0, -2279); ((("arity")), 100000000, 0, -2289); ((("positive")), 100000000, 0, -2290); ((("negative")), 100000000, 0, -2291); ((("direct")), 100000000, 0, -2292); ((0), 100000000, 0, -2293); ((("structure")), 100000000, 0, -2284); ((("subarity")), 100000000, 0, -2294); ((("subpositive")), 100000000, 0, -2295); ((("subnegative")), 100000000, 0, -2296); ((("subdirect")), 100000000, 0, -2297); (Tag8 (([("Exists", (0))], ((("kinds")), 100000000, 0, -2299), 0, 0, 0)), 100000000, 0, -2298)], (0)), 100000000, 0, -2277)), (("runtime/tools.ml", 1556, 59053, 59057), ("runtime/tools.ml", 1571, 59756, 59795), 0), 0, Tag1 ("Refl__Tools", 6673))], 0), 1, 0, [63; 63; 15; 15; 15; 15; 15; 15; 63; 63; 63; 63; 63], [0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 1549, 58656, 58658), ("runtime/tools.ml", 1571, 59756, 59795), 0), 0, 0, 0, Tag1 ("Refl__Tools", 6666)), 1, 0); Tag1 (("destruct", 8920), ([((("cases")), 100000000, 0, -2254); ((("structures")), 100000000, 0, -2255); ((("arity")), 100000000, 0, -2256); ((("rec_group")), 100000000, 0, -2257); ((("kinds")), 100000000, 0, -2258); ((("positive")), 100000000, 0, -2259); ((("negative")), 100000000, 0, -2260); ((("direct")), 100000000, 0, -2261); ((("gadt")), 100000000, 0, -2262)], 9, Tag1 ([(("Destruct", 4861), Tag1 ([(("constructors", 4862), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "constructors"), [((("cases")), 100000000, 0, -2223); ((("structures")), 100000000, 0, -2224); ((("arity")), 100000000, 0, -2225); ((("rec_group")), 100000000, 0, -2226); ((("kinds")), 100000000, 0, -2227); ((("positive")), 100000000, 0, -2228); ((("negative")), 100000000, 0, -2229); ((("direct")), 100000000, 0, -2230); ((("gadt")), 100000000, 0, -2231)], (0)), 100000000, 0, -2232), (("runtime/tools.ml", 1576, 59930, 59940), ("runtime/tools.ml", 1578, 60028, 60082), 0), 0, Tag1 ("Refl__Tools", 6681)); (("index", 4863), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "binary_selection"), [(Tag8 (([("Select", ((((("index")), 100000000, 0, -2236))))], (0, 100000000, 0, -2235), 1, 0, 0)), 100000000, 0, -2234); ((("cases")), 100000000, 0, -2223); ((("value")), 100000000, 0, -2237); ((0), 100000000, 0, -2238)], (0)), 100000000, 0, -2233), (("runtime/tools.ml", 1579, 60083, 60093), ("runtime/tools.ml", 1579, 60083, 60159), 0), 0, Tag1 ("Refl__Tools", 6682)); (("index_desc", 4864), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "binary_selection"), [(Tag8 (([("Select", ((((("index")), 100000000, 0, -2236))))], (0, 100000000, 0, -2241), 1, 0, 0)), 100000000, 0, -2240); ((("structures")), 100000000, 0, -2224); ((("constructor")), 100000000, 0, -2242); ((0), 100000000, 0, -2243)], (0)), 100000000, 0, -2239), (("runtime/tools.ml", 1580, 60160, 60170), ("runtime/tools.ml", 1582, 60247, 60278), 0), 0, Tag1 ("Refl__Tools", 6683)); (("constructor", 4865), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "constructor"), [((("value")), 100000000, 0, -2237); ((("constructor")), 100000000, 0, -2242); ((("arity")), 100000000, 0, -2225); ((("rec_group")), 100000000, 0, -2226); ((("kinds")), 100000000, 0, -2227); ((("positive")), 100000000, 0, -2228); ((("negative")), 100000000, 0, -2229); ((("direct")), 100000000, 0, -2230); ((("gadt")), 100000000, 0, -2231)], (0)), 100000000, 0, -2244), (("runtime/tools.ml", 1583, 60279, 60289), ("runtime/tools.ml", 1585, 60358, 60430), 0), 0, Tag1 ("Refl__Tools", 6684)); (("link", 4866), 0, (Tag3 ((("link", 8919)), [((("value")), 100000000, 0, -2237); ((("constructor")), 100000000, 0, -2242); ((("arity")), 100000000, 0, -2225); ((("positive")), 100000000, 0, -2228); ((("negative")), 100000000, 0, -2229); ((("direct")), 100000000, 0, -2230); ((("values")), 100000000, 0, -2246); ((("structure")), 100000000, 0, -2247); ((("subarity")), 100000000, 0, -2248); ((("subpositive")), 100000000, 0, -2249); ((("subnegative")), 100000000, 0, -2250); ((("subdirect")), 100000000, 0, -2251); ((("kinds")), 100000000, 0, -2227)], (0)), 100000000, 0, -2245), (("runtime/tools.ml", 1586, 60431, 60441), ("runtime/tools.ml", 1589, 60596, 60635), 0), 0, Tag1 ("Refl__Tools", 6685)); (("values", 4867), 0, ((("values")), 100000000, 0, -2246), (("runtime/tools.ml", 1590, 60636, 60646), ("runtime/tools.ml", 1590, 60636, 60663), 0), 0, Tag1 ("Refl__Tools", 6686)); (("name", 4868), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2252), (("runtime/tools.ml", 1591, 60664, 60674), ("runtime/tools.ml", 1591, 60664, 60688), 0), 0, Tag1 ("Refl__Tools", 6687)); (("kind", 4869), 0, (Tag3 ((("kind", 8918)), [((("values")), 100000000, 0, -2246); ((("structure")), 100000000, 0, -2247); ((("subarity")), 100000000, 0, -2248); ((("rec_group")), 100000000, 0, -2226); ((("kinds")), 100000000, 0, -2227); ((("subpositive")), 100000000, 0, -2249); ((("subnegative")), 100000000, 0, -2250); ((("subdirect")), 100000000, 0, -2251); ((("gadt")), 100000000, 0, -2231)], (0)), 100000000, 0, -2253), (("runtime/tools.ml", 1592, 60689, 60699), ("runtime/tools.ml", 1594, 60785, 60837), 0), 0, Tag1 ("Refl__Tools", 6688))]), ((Tag3 ((("destruct", 8920)), [((("cases")), 100000000, 0, -2223); ((("structures")), 100000000, 0, -2224); ((("arity")), 100000000, 0, -2225); ((("rec_group")), 100000000, 0, -2226); ((("kinds")), 100000000, 0, -2227); ((("positive")), 100000000, 0, -2228); ((("negative")), 100000000, 0, -2229); ((("direct")), 100000000, 0, -2230); ((("gadt")), 100000000, 0, -2231)], (0)), 100000000, 0, -2222)), (("runtime/tools.ml", 1575, 59911, 59915), ("runtime/tools.ml", 1597, 60924, 60973), 0), 0, Tag1 ("Refl__Tools", 6689))], 0), 1, 0, [63; 63; 63; 15; 63; 63; 63; 63; 15], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 1573, 59797, 59799), ("runtime/tools.ml", 1597, 60924, 60973), 0), 0, 0, 0, Tag1 ("Refl__Tools", 6680)), 1, 0); (("destruct_choice", 8921), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "constructors"), [((("cases")), 100000000, 0, -2203); ((("structures")), 100000000, 0, -2204); ((("arity")), 100000000, 0, -2205); ((("rec_group")), 100000000, 0, -2206); ((("kinds")), 100000000, 0, -2207); ((("positive")), 100000000, 0, -2208); ((("negative")), 100000000, 0, -2209); ((("direct")), 100000000, 0, -2210); ((("gadt")), 100000000, 0, -2211)], (0)), 100000000, 0, -2221), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "binary_selection"), [((("index")), 100000000, 0, -2217); ((("cases")), 100000000, 0, -2203); ((("types")), 100000000, 0, -2220); ((("tail_cases")), 100000000, 0, -2213)], (0)), 100000000, 0, -2219), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "binary_selection"), [((("index")), 100000000, 0, -2217); ((("structures")), 100000000, 0, -2204); ((("structure")), 100000000, 0, -2218); ((("tail_structures")), 100000000, 0, -2215)], (0)), 100000000, 0, -2216), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "constructors"), [((("tail_cases")), 100000000, 0, -2213); ((("tail_structures")), 100000000, 0, -2215); ((("arity")), 100000000, 0, -2205); ((("rec_group")), 100000000, 0, -2206); ((("kinds")), 100000000, 0, -2207); ((("positive")), 100000000, 0, -2208); ((("negative")), 100000000, 0, -2209); ((("direct")), 100000000, 0, -2210); ((("gadt")), 100000000, 0, -2211)], (0)), 100000000, 0, -2214), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "binary_choice"), [((("tail_cases")), 100000000, 0, -2213)], (0)), 100000000, 0, -2212), (Tag3 ((("destruct", 8920)), [((("cases")), 100000000, 0, -2203); ((("structures")), 100000000, 0, -2204); ((("arity")), 100000000, 0, -2205); ((("rec_group")), 100000000, 0, -2206); ((("kinds")), 100000000, 0, -2207); ((("positive")), 100000000, 0, -2208); ((("negative")), 100000000, 0, -2209); ((("direct")), 100000000, 0, -2210); ((("gadt")), 100000000, 0, -2211)], (0)), 100000000, 0, -2202), 0), 100000000, 0, -2201), 0), 100000000, 0, -2200), 0), 100000000, 0, -2199), 0), 100000000, 0, -2198), 0), 100000000, 0, -2197), 0, (("runtime/tools.ml", 1599, 60975, 60985), ("runtime/tools.ml", 1599, 60975, 61000), 0), 0, Tag1 ("Refl__Tools", 6696)), 0); (("destruct", 8922), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "constructors"), [((0), 100000000, 0, -2186); ((0), 100000000, 0, -2187); ((0), 100000000, 0, -2188); ((0), 100000000, 0, -2189); ((0), 100000000, 0, -2190); ((0), 100000000, 0, -2191); ((0), 100000000, 0, -2192); ((0), 100000000, 0, -2193); ((0), 100000000, 0, -2194)], (0)), 100000000, 0, -2196), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "binary_choice"), [((0), 100000000, 0, -2186)], (0)), 100000000, 0, -2195), (Tag3 ((("destruct", 8920)), [((0), 100000000, 0, -2186); ((0), 100000000, 0, -2187); ((0), 100000000, 0, -2188); ((0), 100000000, 0, -2189); ((0), 100000000, 0, -2190); ((0), 100000000, 0, -2191); ((0), 100000000, 0, -2192); ((0), 100000000, 0, -2193); ((0), 100000000, 0, -2194)], (0)), 100000000, 0, -2185), 0), 100000000, 0, -2184), 0), 100000000, 0, -2183), 0, (("runtime/tools.ml", 1647, 63280, 63286), ("runtime/tools.ml", 1647, 63280, 63294), 0), 0, Tag1 ("Refl__Tools", 6866)), 0)]), 0, (("runtime/tools.ml", 1422, 53199, 53199), ("runtime/tools.ml", 1649, 63384, 63387), 0), Tag1 ("Refl__Tools", 6869)), 0, 0); Tag3 (("Variant", 8769), 0, (Tag1 ([Tag1 (("argument", 8938), ([((("types")), 100000000, 0, -2777); ((("structure")), 100000000, 0, -2778); ((("arity")), 100000000, 0, -2779); ((("rec_group")), 100000000, 0, -2780); ((("kinds")), 100000000, 0, -2781); ((("positive")), 100000000, 0, -2782); ((("negative")), 100000000, 0, -2783); ((("direct")), 100000000, 0, -2784); ((("gadt")), 100000000, 0, -2785)], 9, Tag1 ([(("None", 5013), (0), ((Tag3 ((("argument", 8938)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2753); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2754); ((("arity")), 100000000, 0, -2755); ((("rec_group")), 100000000, 0, -2756); ((("kinds")), 100000000, 0, -2757); ((("positive")), 100000000, 0, -2758); ((("negative")), 100000000, 0, -2759); ((("direct")), 100000000, 0, -2760); ((("gadt")), 100000000, 0, -2761)], (0)), 100000000, 0, -2752)), (("runtime/tools.ml", 1654, 63526, 63530), ("runtime/tools.ml", 1657, 63636, 63654), 0), 0, Tag1 ("Refl__Tools", 6871)); (("Some", 5014), Tag1 ([(("desc", 5015), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [((("a")), 100000000, 0, -2764); ((("structure")), 100000000, 0, -2767); ((("arity")), 100000000, 0, -2769); ((("rec_group")), 100000000, 0, -2770); ((("kinds")), 100000000, 0, -2771); ((("positive")), 100000000, 0, -2772); ((("negative")), 100000000, 0, -2773); ((("direct")), 100000000, 0, -2774); ((("gadt")), 100000000, 0, -2775)], (0)), 100000000, 0, -2776), (("runtime/tools.ml", 1659, 63670, 63680), ("runtime/tools.ml", 1661, 63766, 63801), 0), 0, Tag1 ("Refl__Tools", 6872)); (("value", 5016), 0, ((("a")), 100000000, 0, -2764), (("runtime/tools.ml", 1662, 63802, 63812), ("runtime/tools.ml", 1662, 63802, 63823), 0), 0, Tag1 ("Refl__Tools", 6873))]), ((Tag3 ((("argument", 8938)), [(Tag2 ([((("a")), 100000000, 0, -2764); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2765)]), 100000000, 0, -2763); (Tag2 ([((("structure")), 100000000, 0, -2767); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2768)]), 100000000, 0, -2766); ((("arity")), 100000000, 0, -2769); ((("rec_group")), 100000000, 0, -2770); ((("kinds")), 100000000, 0, -2771); ((("positive")), 100000000, 0, -2772); ((("negative")), 100000000, 0, -2773); ((("direct")), 100000000, 0, -2774); ((("gadt")), 100000000, 0, -2775)], (0)), 100000000, 0, -2762)), (("runtime/tools.ml", 1658, 63655, 63659), ("runtime/tools.ml", 1665, 63917, 63964), 0), 0, Tag1 ("Refl__Tools", 6874))], 0), 1, 0, [63; 63; 63; 15; 63; 63; 63; 63; 15], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 1652, 63413, 63415), ("runtime/tools.ml", 1665, 63917, 63964), 0), 0, 0, 0, Tag1 ("Refl__Tools", 6870)), 1, 0); (("map_choice", 8939), ((Tag1 (0, (Tag3 ((("map", 8759)), [((("a_arity")), 100000000, 0, -2749); ((("b_arity")), 100000000, 0, -2741); ((("rec_group")), 100000000, 0, -2742); ((("kinds_a")), 100000000, 0, -2750); ((("kinds_b")), 100000000, 0, -2743); ((("positive")), 100000000, 0, -2744); ((("negative")), 100000000, 0, -2745); ((("direct")), 100000000, 0, -2746); ((("gadt")), 100000000, 0, -2747)], (0)), 100000000, 0, -2751), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variant_constructors"), [((("a_cases")), 100000000, 0, -2738); ((("structures")), 100000000, 0, -2740); ((("a_arity")), 100000000, 0, -2749); ((("rec_group")), 100000000, 0, -2742); ((("kinds_a")), 100000000, 0, -2750); ((("positive")), 100000000, 0, -2744); ((("negative")), 100000000, 0, -2745); ((("direct")), 100000000, 0, -2746); ((("gadt")), 100000000, 0, -2747)], (0)), 100000000, 0, -2748), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variant_constructors"), [((("b_cases")), 100000000, 0, -2736); ((("structures")), 100000000, 0, -2740); ((("b_arity")), 100000000, 0, -2741); ((("rec_group")), 100000000, 0, -2742); ((("kinds_b")), 100000000, 0, -2743); ((("positive")), 100000000, 0, -2744); ((("negative")), 100000000, 0, -2745); ((("direct")), 100000000, 0, -2746); ((("gadt")), 100000000, 0, -2747)], (0)), 100000000, 0, -2739), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "choice"), [((("a_cases")), 100000000, 0, -2738)], (0)), 100000000, 0, -2737), (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "choice"), [((("b_cases")), 100000000, 0, -2736)], (0)), 100000000, 0, -2735), 0), 100000000, 0, -2734), 0), 100000000, 0, -2733), 0), 100000000, 0, -2732), 0), 100000000, 0, -2731), 0, (("runtime/tools.ml", 1667, 63966, 63976), ("runtime/tools.ml", 1667, 63966, 63986), 0), 0, Tag1 ("Refl__Tools", 6881)), 0); Tag1 (("kind", 8940), ([((("types")), 100000000, 0, -2722); ((("structure")), 100000000, 0, -2723); ((("arity")), 100000000, 0, -2724); ((("rec_group")), 100000000, 0, -2725); ((("kinds")), 100000000, 0, -2726); ((("positive")), 100000000, 0, -2727); ((("negative")), 100000000, 0, -2728); ((("direct")), 100000000, 0, -2729); ((("gadt")), 100000000, 0, -2730)], 9, Tag1 ([(("Constructor", 5645), Tag1 ([(("name", 5646), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2707), (("runtime/tools.ml", 1699, 65417, 65427), ("runtime/tools.ml", 1699, 65417, 65441), 0), 0, Tag1 ("Refl__Tools", 7956)); (("argument", 5647), 0, (Tag3 ((("argument", 8938)), [((("types")), 100000000, 0, -2696); ((("structure")), 100000000, 0, -2699); ((("arity")), 100000000, 0, -2700); ((("rec_group")), 100000000, 0, -2701); ((("kinds")), 100000000, 0, -2702); ((("positive")), 100000000, 0, -2703); ((("negative")), 100000000, 0, -2704); ((("direct")), 100000000, 0, -2705); ((("gadt")), 100000000, 0, -2706)], (0)), 100000000, 0, -2708), (("runtime/tools.ml", 1700, 65442, 65452), ("runtime/tools.ml", 1702, 65535, 65585), 0), 0, Tag1 ("Refl__Tools", 7957))]), ((Tag3 ((("kind", 8940)), [((("types")), 100000000, 0, -2696); (Tag8 (([("Constr", ((((("structure")), 100000000, 0, -2699))))], (0, 100000000, 0, -2698), 1, 0, 0)), 100000000, 0, -2697); ((("arity")), 100000000, 0, -2700); ((("rec_group")), 100000000, 0, -2701); ((("kinds")), 100000000, 0, -2702); ((("positive")), 100000000, 0, -2703); ((("negative")), 100000000, 0, -2704); ((("direct")), 100000000, 0, -2705); ((("gadt")), 100000000, 0, -2706)], (0)), 100000000, 0, -2695)), (("runtime/tools.ml", 1698, 65395, 65399), ("runtime/tools.ml", 1705, 65671, 65725), 0), 0, Tag1 ("Refl__Tools", 7958)); (("Inherit", 5648), Tag1 ([(("desc", 5649), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [((("a")), 100000000, 0, -2710); ((("structure")), 100000000, 0, -2713); ((("arity")), 100000000, 0, -2714); ((("rec_group")), 100000000, 0, -2715); ((("kinds")), 100000000, 0, -2716); ((("positive")), 100000000, 0, -2717); ((("negative")), 100000000, 0, -2718); ((("direct")), 100000000, 0, -2719); ((("gadt")), 100000000, 0, -2720)], (0)), 100000000, 0, -2721), (("runtime/tools.ml", 1707, 65744, 65754), ("runtime/tools.ml", 1709, 65840, 65875), 0), 0, Tag1 ("Refl__Tools", 7959)); (("value", 5650), 0, ((("a")), 100000000, 0, -2710), (("runtime/tools.ml", 1710, 65876, 65886), ("runtime/tools.ml", 1710, 65876, 65897), 0), 0, Tag1 ("Refl__Tools", 7960))]), ((Tag3 ((("kind", 8940)), [((("a")), 100000000, 0, -2710); (Tag8 (([("Inherit", ((((("structure")), 100000000, 0, -2713))))], (0, 100000000, 0, -2712), 1, 0, 0)), 100000000, 0, -2711); ((("arity")), 100000000, 0, -2714); ((("rec_group")), 100000000, 0, -2715); ((("kinds")), 100000000, 0, -2716); ((("positive")), 100000000, 0, -2717); ((("negative")), 100000000, 0, -2718); ((("direct")), 100000000, 0, -2719); ((("gadt")), 100000000, 0, -2720)], (0)), 100000000, 0, -2709)), (("runtime/tools.ml", 1706, 65726, 65730), ("runtime/tools.ml", 1713, 65980, 66034), 0), 0, Tag1 ("Refl__Tools", 7961))], 0), 1, 0, [63; 63; 63; 15; 63; 63; 63; 63; 15], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 1696, 65286, 65288), ("runtime/tools.ml", 1713, 65980, 66034), 0), 0, 0, 0, Tag1 ("Refl__Tools", 7955)), 1, 0); Tag1 (("destruct", 8941), ([((("cases")), 100000000, 0, -2686); ((("structures")), 100000000, 0, -2687); ((("arity")), 100000000, 0, -2688); ((("rec_group")), 100000000, 0, -2689); ((("kinds")), 100000000, 0, -2690); ((("positive")), 100000000, 0, -2691); ((("negative")), 100000000, 0, -2692); ((("direct")), 100000000, 0, -2693); ((("gadt")), 100000000, 0, -2694)], 9, Tag1 ([(("Destruct", 5652), Tag1 ([(("constructors", 5653), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variant_constructors"), [((("cases")), 100000000, 0, -2663); ((("structures")), 100000000, 0, -2664); ((("arity")), 100000000, 0, -2665); ((("rec_group")), 100000000, 0, -2666); ((("kinds")), 100000000, 0, -2667); ((("positive")), 100000000, 0, -2668); ((("negative")), 100000000, 0, -2669); ((("direct")), 100000000, 0, -2670); ((("gadt")), 100000000, 0, -2671)], (0)), 100000000, 0, -2672), (("runtime/tools.ml", 1718, 66169, 66179), ("runtime/tools.ml", 1720, 66267, 66329), 0), 0, Tag1 ("Refl__Tools", 7975)); (("index", 5654), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "selection"), [(Tag8 (([("Succ", ((((("index")), 100000000, 0, -2676))))], (0, 100000000, 0, -2675), 1, 0, 0)), 100000000, 0, -2674); ((("cases")), 100000000, 0, -2663); ((("types")), 100000000, 0, -2677); ((0), 100000000, 0, -2678)], (0)), 100000000, 0, -2673), (("runtime/tools.ml", 1721, 66330, 66340), ("runtime/tools.ml", 1721, 66330, 66397), 0), 0, Tag1 ("Refl__Tools", 7976)); (("index_desc", 5655), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "selection"), [(Tag8 (([("Succ", ((((("index")), 100000000, 0, -2676))))], (0, 100000000, 0, -2681), 1, 0, 0)), 100000000, 0, -2680); ((("structures")), 100000000, 0, -2664); ((("structure")), 100000000, 0, -2682); ((0), 100000000, 0, -2683)], (0)), 100000000, 0, -2679), (("runtime/tools.ml", 1722, 66398, 66408), ("runtime/tools.ml", 1723, 66421, 66491), 0), 0, Tag1 ("Refl__Tools", 7977)); (("constructor", 5656), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variant_constructor"), [((("types")), 100000000, 0, -2677); ((("structure")), 100000000, 0, -2682); ((("arity")), 100000000, 0, -2665); ((("rec_group")), 100000000, 0, -2666); ((("kinds")), 100000000, 0, -2667); ((("positive")), 100000000, 0, -2668); ((("negative")), 100000000, 0, -2669); ((("direct")), 100000000, 0, -2670); ((("gadt")), 100000000, 0, -2671)], (0)), 100000000, 0, -2684), (("runtime/tools.ml", 1724, 66492, 66502), ("runtime/tools.ml", 1726, 66588, 66649), 0), 0, Tag1 ("Refl__Tools", 7978)); (("kind", 5657), 0, (Tag3 ((("kind", 8940)), [((("types")), 100000000, 0, -2677); ((("structure")), 100000000, 0, -2682); ((("arity")), 100000000, 0, -2665); ((("rec_group")), 100000000, 0, -2666); ((("kinds")), 100000000, 0, -2667); ((("positive")), 100000000, 0, -2668); ((("negative")), 100000000, 0, -2669); ((("direct")), 100000000, 0, -2670); ((("gadt")), 100000000, 0, -2671)], (0)), 100000000, 0, -2685), (("runtime/tools.ml", 1727, 66650, 66660), ("runtime/tools.ml", 1729, 66739, 66785), 0), 0, Tag1 ("Refl__Tools", 7979))]), ((Tag3 ((("destruct", 8941)), [((("cases")), 100000000, 0, -2663); ((("structures")), 100000000, 0, -2664); ((("arity")), 100000000, 0, -2665); ((("rec_group")), 100000000, 0, -2666); ((("kinds")), 100000000, 0, -2667); ((("positive")), 100000000, 0, -2668); ((("negative")), 100000000, 0, -2669); ((("direct")), 100000000, 0, -2670); ((("gadt")), 100000000, 0, -2671)], (0)), 100000000, 0, -2662)), (("runtime/tools.ml", 1717, 66150, 66154), ("runtime/tools.ml", 1732, 66872, 66921), 0), 0, Tag1 ("Refl__Tools", 7980))], 0), 1, 0, [63; 63; 63; 15; 63; 63; 63; 63; 15], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 1715, 66036, 66038), ("runtime/tools.ml", 1732, 66872, 66921), 0), 0, 0, 0, Tag1 ("Refl__Tools", 7974)), 1, 0); (("destruct_choice", 8942), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variant_constructors"), [((("cases")), 100000000, 0, -2643); ((("structures")), 100000000, 0, -2644); ((("arity")), 100000000, 0, -2645); ((("rec_group")), 100000000, 0, -2646); ((("kinds")), 100000000, 0, -2647); ((("positive")), 100000000, 0, -2648); ((("negative")), 100000000, 0, -2649); ((("direct")), 100000000, 0, -2650); ((("gadt")), 100000000, 0, -2651)], (0)), 100000000, 0, -2661), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "selection"), [((("index")), 100000000, 0, -2657); ((("cases")), 100000000, 0, -2643); ((("types")), 100000000, 0, -2660); ((("tail_cases")), 100000000, 0, -2653)], (0)), 100000000, 0, -2659), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "selection"), [((("index")), 100000000, 0, -2657); ((("structures")), 100000000, 0, -2644); ((("structure")), 100000000, 0, -2658); ((("tail_structures")), 100000000, 0, -2655)], (0)), 100000000, 0, -2656), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variant_constructors"), [((("tail_cases")), 100000000, 0, -2653); ((("tail_structures")), 100000000, 0, -2655); ((("arity")), 100000000, 0, -2645); ((("rec_group")), 100000000, 0, -2646); ((("kinds")), 100000000, 0, -2647); ((("positive")), 100000000, 0, -2648); ((("negative")), 100000000, 0, -2649); ((("direct")), 100000000, 0, -2650); ((("gadt")), 100000000, 0, -2651)], (0)), 100000000, 0, -2654), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "choice"), [((("tail_cases")), 100000000, 0, -2653)], (0)), 100000000, 0, -2652), (Tag3 ((("destruct", 8941)), [((("cases")), 100000000, 0, -2643); ((("structures")), 100000000, 0, -2644); ((("arity")), 100000000, 0, -2645); ((("rec_group")), 100000000, 0, -2646); ((("kinds")), 100000000, 0, -2647); ((("positive")), 100000000, 0, -2648); ((("negative")), 100000000, 0, -2649); ((("direct")), 100000000, 0, -2650); ((("gadt")), 100000000, 0, -2651)], (0)), 100000000, 0, -2642), 0), 100000000, 0, -2641), 0), 100000000, 0, -2640), 0), 100000000, 0, -2639), 0), 100000000, 0, -2638), 0), 100000000, 0, -2637), 0, (("runtime/tools.ml", 1734, 66923, 66933), ("runtime/tools.ml", 1734, 66923, 66948), 0), 0, Tag1 ("Refl__Tools", 7987)), 0); (("destruct", 8943), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variant_constructors"), [((0), 100000000, 0, -2626); ((0), 100000000, 0, -2627); ((0), 100000000, 0, -2628); ((0), 100000000, 0, -2629); ((0), 100000000, 0, -2630); ((0), 100000000, 0, -2631); ((0), 100000000, 0, -2632); ((0), 100000000, 0, -2633); ((0), 100000000, 0, -2634)], (0)), 100000000, 0, -2636), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "choice"), [((0), 100000000, 0, -2626)], (0)), 100000000, 0, -2635), (Tag3 ((("destruct", 8941)), [((0), 100000000, 0, -2626); ((0), 100000000, 0, -2627); ((0), 100000000, 0, -2628); ((0), 100000000, 0, -2629); ((0), 100000000, 0, -2630); ((0), 100000000, 0, -2631); ((0), 100000000, 0, -2632); ((0), 100000000, 0, -2633); ((0), 100000000, 0, -2634)], (0)), 100000000, 0, -2625), 0), 100000000, 0, -2624), 0), 100000000, 0, -2623), 0, (("runtime/tools.ml", 1769, 68646, 68652), ("runtime/tools.ml", 1769, 68646, 68660), 0), 0, Tag1 ("Refl__Tools", 8038)), 0)]), 0, (("runtime/tools.ml", 1651, 63389, 63389), ("runtime/tools.ml", 1771, 68738, 68741), 0), Tag1 ("Refl__Tools", 8041)), 0, 0); Tag3 (("Object", 8770), 0, (Tag1 ([Tag3 (("Object", 8944), 0, (Tag1 ([Tag1 (("t", 8955), ([((("types")), 100000000, 0, -2954); ((("structures")), 100000000, 0, -2955); ((("arity")), 100000000, 0, -2956); ((("rec_group")), 100000000, 0, -2957); ((("kinds")), 100000000, 0, -2958); ((("positive")), 100000000, 0, -2959); ((("negative")), 100000000, 0, -2960); ((("direct")), 100000000, 0, -2961); ((("gadt")), 100000000, 0, -2962)], 9, [[(("structure", 5702), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "object_methods"), [((("types")), 100000000, 0, -2954); ((("structures")), 100000000, 0, -2955); ((("arity")), 100000000, 0, -2956); ((("rec_group")), 100000000, 0, -2957); ((("kinds")), 100000000, 0, -2958); ((("positive")), 100000000, 0, -2959); ((("negative")), 100000000, 0, -2960); ((("direct")), 100000000, 0, -2961); ((("gadt")), 100000000, 0, -2962)], (0)), 100000000, 0, -2953), (("runtime/tools.ml", 1777, 68905, 68913), ("runtime/tools.ml", 1779, 68996, 69050), 0), 0, Tag1 ("Refl__Tools", 8043)); (("methods", 5704), 0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "Delays"), "t"), [((("types")), 100000000, 0, -2954)], (0)), 100000000, 0, -2963), (("runtime/tools.ml", 1780, 69051, 69059), ("runtime/tools.ml", 1780, 69051, 69085), 0), 0, Tag1 ("Refl__Tools", 8044))]], 1, 0, [63; 63; 63; 15; 63; 63; 63; 63; 15], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 1775, 68791, 68795), ("runtime/tools.ml", 1781, 69086, 69093), 0), 0, 0, 0, Tag1 ("Refl__Tools", 8042)), 1, 0)]), 0, (("runtime/tools.ml", 1774, 68766, 68768), ("runtime/tools.ml", 1782, 69094, 69099), 0), Tag1 ("Refl__Tools", 8045)), 0, 0); Tag1 (("t", 8945), ([((("types")), 100000000, 0, -2942); ((("structures")), 100000000, 0, -2943); ((("arity")), 100000000, 0, -2944); ((("rec_group")), 100000000, 0, -2945); ((("kinds")), 100000000, 0, -2946); ((("positive")), 100000000, 0, -2947); ((("negative")), 100000000, 0, -2948); ((("direct")), 100000000, 0, -2949); ((("gadt")), 100000000, 0, -2950)], 9, [[(("structure", 5702), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "object_methods"), [((("types")), 100000000, 0, -2942); ((("structures")), 100000000, 0, -2943); ((("arity")), 100000000, 0, -2944); ((("rec_group")), 100000000, 0, -2945); ((("kinds")), 100000000, 0, -2946); ((("positive")), 100000000, 0, -2947); ((("negative")), 100000000, 0, -2948); ((("direct")), 100000000, 0, -2949); ((("gadt")), 100000000, 0, -2950)], (0)), 100000000, 0, -2951), (("runtime/tools.ml", 1777, 68905, 68913), ("runtime/tools.ml", 1779, 68996, 69050), 0), 0, Tag1 ("Refl__Tools", 8043)); (("methods", 5704), 0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "Delays"), "t"), [((("types")), 100000000, 0, -2942)], (0)), 100000000, 0, -2952), (("runtime/tools.ml", 1780, 69051, 69059), ("runtime/tools.ml", 1780, 69051, 69085), 0), 0, Tag1 ("Refl__Tools", 8044))]], 1, ((Tag3 (Tag1 ((("Object", 8944)), "t"), [((("types")), 100000000, 0, -2942); ((("structures")), 100000000, 0, -2943); ((("arity")), 100000000, 0, -2944); ((("rec_group")), 100000000, 0, -2945); ((("kinds")), 100000000, 0, -2946); ((("positive")), 100000000, 0, -2947); ((("negative")), 100000000, 0, -2948); ((("direct")), 100000000, 0, -2949); ((("gadt")), 100000000, 0, -2950)], (0)), 100000000, 0, -2941)), [63; 63; 63; 15; 63; 63; 63; 63; 15], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 1775, 68791, 68795), ("runtime/tools.ml", 1781, 69086, 69093), 0), 0, 0, 0, Tag1 ("Refl__Tools", 8042)), 1, 0); (("map", 8946), ((Tag1 (0, (Tag3 ((("map", 8759)), [((("a_arity")), 100000000, 0, -2938); ((("b_arity")), 100000000, 0, -2930); ((("rec_group")), 100000000, 0, -2931); ((("kinds_a")), 100000000, 0, -2939); ((("kinds_b")), 100000000, 0, -2932); ((("positive")), 100000000, 0, -2933); ((("negative")), 100000000, 0, -2934); ((("direct")), 100000000, 0, -2935); ((("gadt")), 100000000, 0, -2936)], (0)), 100000000, 0, -2940), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "object_methods"), [((("methods_a")), 100000000, 0, -2927); ((("structures")), 100000000, 0, -2929); ((("a_arity")), 100000000, 0, -2938); ((("rec_group")), 100000000, 0, -2931); ((("kinds_a")), 100000000, 0, -2939); ((("positive")), 100000000, 0, -2933); ((("negative")), 100000000, 0, -2934); ((("direct")), 100000000, 0, -2935); ((("gadt")), 100000000, 0, -2936)], (0)), 100000000, 0, -2937), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "object_methods"), [((("methods_b")), 100000000, 0, -2925); ((("structures")), 100000000, 0, -2929); ((("b_arity")), 100000000, 0, -2930); ((("rec_group")), 100000000, 0, -2931); ((("kinds_b")), 100000000, 0, -2932); ((("positive")), 100000000, 0, -2933); ((("negative")), 100000000, 0, -2934); ((("direct")), 100000000, 0, -2935); ((("gadt")), 100000000, 0, -2936)], (0)), 100000000, 0, -2928), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "Delays"), "t"), [((("methods_a")), 100000000, 0, -2927)], (0)), 100000000, 0, -2926), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "Delays"), "t"), [((("methods_b")), 100000000, 0, -2925)], (0)), 100000000, 0, -2924), 0), 100000000, 0, -2923), 0), 100000000, 0, -2922), 0), 100000000, 0, -2921), 0), 100000000, 0, -2920), 0, (("runtime/tools.ml", 1786, 69119, 69129), ("runtime/tools.ml", 1786, 69119, 69132), 0), 0, Tag1 ("Refl__Tools", 8046)), 0); Tag1 (("fold", 8947), ([((("types")), 100000000, 0, -2911); ((("structures")), 100000000, 0, -2912); ((("arity")), 100000000, 0, -2913); ((("rec_group")), 100000000, 0, -2914); ((("kinds")), 100000000, 0, -2915); ((("positive")), 100000000, 0, -2916); ((("negative")), 100000000, 0, -2917); ((("direct")), 100000000, 0, -2918); ((("gadt")), 100000000, 0, -2919)], 9, Tag1 ([(("Fold", 8316), Tag1 ([(("index", 8317), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "selection"), [(Tag8 (([("Succ", ((((("index")), 100000000, 0, -2897))))], (0, 100000000, 0, -2896), 1, 0, 0)), 100000000, 0, -2895); ((("types")), 100000000, 0, -2885); ((("a")), 100000000, 0, -2898); ((0), 100000000, 0, -2899)], (0)), 100000000, 0, -2894), (("runtime/tools.ml", 1808, 70060, 70070), ("runtime/tools.ml", 1808, 70060, 70123), 0), 0, Tag1 ("Refl__Tools", 11199)); (("index_structure", 8318), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "selection"), [(Tag8 (([("Succ", ((((("index")), 100000000, 0, -2897))))], (0, 100000000, 0, -2902), 1, 0, 0)), 100000000, 0, -2901); ((("structures")), 100000000, 0, -2886); (Tag8 (([("Method", ((((("structure")), 100000000, 0, -2905))))], (0, 100000000, 0, -2904), 1, 0, 0)), 100000000, 0, -2903); ((0), 100000000, 0, -2906)], (0)), 100000000, 0, -2900), (("runtime/tools.ml", 1809, 70124, 70134), ("runtime/tools.ml", 1811, 70225, 70249), 0), 0, Tag1 ("Refl__Tools", 11200)); (("name", 8319), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2907), (("runtime/tools.ml", 1812, 70250, 70260), ("runtime/tools.ml", 1812, 70250, 70274), 0), 0, Tag1 ("Refl__Tools", 11201)); (("desc", 8320), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [((("a")), 100000000, 0, -2898); ((("structure")), 100000000, 0, -2905); ((("arity")), 100000000, 0, -2887); ((("rec_group")), 100000000, 0, -2888); ((("kinds")), 100000000, 0, -2889); ((("positive")), 100000000, 0, -2890); ((("negative")), 100000000, 0, -2891); ((("direct")), 100000000, 0, -2892); ((("gadt")), 100000000, 0, -2893)], (0)), 100000000, 0, -2908), (("runtime/tools.ml", 1813, 70275, 70285), ("runtime/tools.ml", 1815, 70371, 70406), 0), 0, Tag1 ("Refl__Tools", 11202)); (("method_", 8321), 0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2910), ((("a")), 100000000, 0, -2898), 0), 100000000, 0, -2909), (("runtime/tools.ml", 1816, 70407, 70417), ("runtime/tools.ml", 1816, 70407, 70438), 0), 0, Tag1 ("Refl__Tools", 11203))]), ((Tag3 ((("fold", 8947)), [((("types")), 100000000, 0, -2885); ((("structures")), 100000000, 0, -2886); ((("arity")), 100000000, 0, -2887); ((("rec_group")), 100000000, 0, -2888); ((("kinds")), 100000000, 0, -2889); ((("positive")), 100000000, 0, -2890); ((("negative")), 100000000, 0, -2891); ((("direct")), 100000000, 0, -2892); ((("gadt")), 100000000, 0, -2893)], (0)), 100000000, 0, -2884)), (("runtime/tools.ml", 1807, 70045, 70049), ("runtime/tools.ml", 1819, 70523, 70566), 0), 0, Tag1 ("Refl__Tools", 11204))], 0), 1, 0, [15; 15; 63; 15; 63; 63; 63; 63; 15], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 1805, 69934, 69936), ("runtime/tools.ml", 1819, 70523, 70566), 0), 0, 0, 0, Tag1 ("Refl__Tools", 11198)), 1, 0); (("fold", 8948), ((Tag1 (0, (Tag1 (0, (Tag3 ((("fold", 8947)), [((("types")), 100000000, 0, -2872); ((("structures")), 100000000, 0, -2873); ((("arity")), 100000000, 0, -2874); ((("rec_group")), 100000000, 0, -2875); ((("kinds")), 100000000, 0, -2876); ((("positive")), 100000000, 0, -2877); ((("negative")), 100000000, 0, -2878); ((("direct")), 100000000, 0, -2879); ((("gadt")), 100000000, 0, -2880)], (0)), 100000000, 0, -2883), (Tag1 (0, ((("acc")), 100000000, 0, -2870), ((("acc")), 100000000, 0, -2870), 0), 100000000, 0, -2882), 0), 100000000, 0, -2881), (Tag1 (0, (Tag3 ((("t", 8945)), [((("types")), 100000000, 0, -2872); ((("structures")), 100000000, 0, -2873); ((("arity")), 100000000, 0, -2874); ((("rec_group")), 100000000, 0, -2875); ((("kinds")), 100000000, 0, -2876); ((("positive")), 100000000, 0, -2877); ((("negative")), 100000000, 0, -2878); ((("direct")), 100000000, 0, -2879); ((("gadt")), 100000000, 0, -2880)], (0)), 100000000, 0, -2871), (Tag1 (0, ((("acc")), 100000000, 0, -2870), ((("acc")), 100000000, 0, -2870), 0), 100000000, 0, -2869), 0), 100000000, 0, -2868), 0), 100000000, 0, -2867), 0, (("runtime/tools.ml", 1821, 70568, 70574), ("runtime/tools.ml", 1821, 70568, 70578), 0), 0, Tag1 ("Refl__Tools", 11211)), 0); Tag3 (("Method", 8949), 0, (Tag1 ([Tag1 (("t", 8956), ([((("a")), 100000000, 0, -2965); ((("structure")), 100000000, 0, -2966); ((("arity")), 100000000, 0, -2967); ((("rec_group")), 100000000, 0, -2968); ((("kinds")), 100000000, 0, -2969); ((("positive")), 100000000, 0, -2970); ((("negative")), 100000000, 0, -2971); ((("direct")), 100000000, 0, -2972); ((("gadt")), 100000000, 0, -2973)], 9, [[(("structure", 8358), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "object_method"), [((("a")), 100000000, 0, -2965); ((("structure")), 100000000, 0, -2966); ((("arity")), 100000000, 0, -2967); ((("rec_group")), 100000000, 0, -2968); ((("kinds")), 100000000, 0, -2969); ((("positive")), 100000000, 0, -2970); ((("negative")), 100000000, 0, -2971); ((("direct")), 100000000, 0, -2972); ((("gadt")), 100000000, 0, -2973)], (0)), 100000000, 0, -2964), (("runtime/tools.ml", 1850, 71878, 71886), ("runtime/tools.ml", 1852, 71975, 72017), 0), 0, Tag1 ("Refl__Tools", 11256)); (("value", 8359), 0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2975), ((("a")), 100000000, 0, -2965), 0), 100000000, 0, -2974), (("runtime/tools.ml", 1853, 72018, 72026), ("runtime/tools.ml", 1853, 72018, 72045), 0), 0, Tag1 ("Refl__Tools", 11257))]], 1, 0, [63; 63; 63; 15; 63; 63; 63; 63; 15], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 1848, 71774, 71778), ("runtime/tools.ml", 1854, 72046, 72053), 0), 0, 0, 0, Tag1 ("Refl__Tools", 11255)), 1, 0)]), 0, (("runtime/tools.ml", 1847, 71749, 71751), ("runtime/tools.ml", 1855, 72054, 72059), 0), Tag1 ("Refl__Tools", 11258)), 0, 0); Tag3 (("Methods", 8950), 0, (Tag1 ([Tag1 (("t", 8957), ([((("sequence")), 100000000, 0, -2977); ((("structure")), 100000000, 0, -2978); ((("arities")), 100000000, 0, -2979); ((("rec_group")), 100000000, 0, -2980); ((("kinds")), 100000000, 0, -2981); ((("positive")), 100000000, 0, -2982); ((("negative")), 100000000, 0, -2983); ((("direct")), 100000000, 0, -2984); ((("gadts")), 100000000, 0, -2985)], 9, Tag1 ([(("[]", 2144), (0), ((Tag3 ((("t", 8957)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2987); ((("structure")), 100000000, 0, -2988); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2989); ((("rec_group")), 100000000, 0, -2990); ((("kinds")), 100000000, 0, -2991); ((("positive")), 100000000, 0, -2992); ((("negative")), 100000000, 0, -2993); ((("direct")), 100000000, 0, -2994); ((("gadts")), 100000000, 0, -2995)], (0)), 100000000, 0, -2986)), (("runtime/tools.ml", 800, 28662, 28666), ("runtime/tools.ml", 802, 28748, 28776), 0), 0, Tag1 ("Refl__Tools", 2816)); (("::", 2145), ([(Tag3 (Tag1 ((("Method", 8949)), "t"), [((("head")), 100000000, 0, -2998); ((("structure")), 100000000, 0, -3000); ((("arity")), 100000000, 0, -3002); ((("rec_group")), 100000000, 0, -3004); ((("kinds")), 100000000, 0, -3005); ((("positive")), 100000000, 0, -3006); ((("negative")), 100000000, 0, -3007); ((("direct")), 100000000, 0, -3008); ((("gadt")), 100000000, 0, -3010)], (0)), 100000000, 0, -3012); (Tag3 ((("t", 8957)), [((("tail")), 100000000, 0, -2999); ((("structure")), 100000000, 0, -3000); ((("arities")), 100000000, 0, -3003); ((("rec_group")), 100000000, 0, -3004); ((("kinds")), 100000000, 0, -3005); ((("positive")), 100000000, 0, -3006); ((("negative")), 100000000, 0, -3007); ((("direct")), 100000000, 0, -3008); ((("gadts")), 100000000, 0, -3011)], (0)), 100000000, 0, -3013)]), ((Tag3 ((("t", 8957)), [(Tag2 ([((("head")), 100000000, 0, -2998); ((("tail")), 100000000, 0, -2999)]), 100000000, 0, -2997); ((("structure")), 100000000, 0, -3000); (Tag2 ([((("arity")), 100000000, 0, -3002); ((("arities")), 100000000, 0, -3003)]), 100000000, 0, -3001); ((("rec_group")), 100000000, 0, -3004); ((("kinds")), 100000000, 0, -3005); ((("positive")), 100000000, 0, -3006); ((("negative")), 100000000, 0, -3007); ((("direct")), 100000000, 0, -3008); (Tag2 ([((("gadt")), 100000000, 0, -3010); ((("gadts")), 100000000, 0, -3011)]), 100000000, 0, -3009)], (0)), 100000000, 0, -2996)), (("runtime/tools.ml", 803, 28777, 28781), ("runtime/tools.ml", 809, 29081, 29149), 0), 0, Tag1 ("Refl__Tools", 2817))], 0), 1, ((Tag3 (Tag1 (Tag2 ((("Desc_vector", 8757)), (("Method", 8949))), "t"), [((("sequence")), 100000000, 0, -2977); ((("structure")), 100000000, 0, -2978); ((("arities")), 100000000, 0, -2979); ((("rec_group")), 100000000, 0, -2980); ((("kinds")), 100000000, 0, -2981); ((("positive")), 100000000, 0, -2982); ((("negative")), 100000000, 0, -2983); ((("direct")), 100000000, 0, -2984); ((("gadts")), 100000000, 0, -2985)], (0)), 100000000, 0, -2976)), [63; 15; 63; 15; 15; 15; 15; 15; 63], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 798, 28549, 28551), ("runtime/tools.ml", 809, 29081, 29149), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2815)), 1, 0)]), 0, (("runtime/tools.ml", 1857, 72061, 72063), ("runtime/tools.ml", 1857, 72061, 72100), 0), Tag1 ("Refl__Tools", 11259)), 0, 0); Tag3 (("Objects", 8951), 0, (Tag1 ([Tag1 (("t", 8958), ([((("sequence")), 100000000, 0, -3015); ((("structure")), 100000000, 0, -3016); ((("arities")), 100000000, 0, -3017); ((("rec_group")), 100000000, 0, -3018); ((("kinds")), 100000000, 0, -3019); ((("positive")), 100000000, 0, -3020); ((("negative")), 100000000, 0, -3021); ((("direct")), 100000000, 0, -3022); ((("gadts")), 100000000, 0, -3023)], 9, Tag1 ([(("[]", 2144), (0), ((Tag3 ((("t", 8958)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3025); ((("structure")), 100000000, 0, -3026); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3027); ((("rec_group")), 100000000, 0, -3028); ((("kinds")), 100000000, 0, -3029); ((("positive")), 100000000, 0, -3030); ((("negative")), 100000000, 0, -3031); ((("direct")), 100000000, 0, -3032); ((("gadts")), 100000000, 0, -3033)], (0)), 100000000, 0, -3024)), (("runtime/tools.ml", 800, 28662, 28666), ("runtime/tools.ml", 802, 28748, 28776), 0), 0, Tag1 ("Refl__Tools", 2816)); (("::", 2145), ([(Tag3 (Tag1 ((("Object", 8944)), "t"), [((("head")), 100000000, 0, -3036); ((("structure")), 100000000, 0, -3038); ((("arity")), 100000000, 0, -3040); ((("rec_group")), 100000000, 0, -3042); ((("kinds")), 100000000, 0, -3043); ((("positive")), 100000000, 0, -3044); ((("negative")), 100000000, 0, -3045); ((("direct")), 100000000, 0, -3046); ((("gadt")), 100000000, 0, -3048)], (0)), 100000000, 0, -3050); (Tag3 ((("t", 8958)), [((("tail")), 100000000, 0, -3037); ((("structure")), 100000000, 0, -3038); ((("arities")), 100000000, 0, -3041); ((("rec_group")), 100000000, 0, -3042); ((("kinds")), 100000000, 0, -3043); ((("positive")), 100000000, 0, -3044); ((("negative")), 100000000, 0, -3045); ((("direct")), 100000000, 0, -3046); ((("gadts")), 100000000, 0, -3049)], (0)), 100000000, 0, -3051)]), ((Tag3 ((("t", 8958)), [(Tag2 ([((("head")), 100000000, 0, -3036); ((("tail")), 100000000, 0, -3037)]), 100000000, 0, -3035); ((("structure")), 100000000, 0, -3038); (Tag2 ([((("arity")), 100000000, 0, -3040); ((("arities")), 100000000, 0, -3041)]), 100000000, 0, -3039); ((("rec_group")), 100000000, 0, -3042); ((("kinds")), 100000000, 0, -3043); ((("positive")), 100000000, 0, -3044); ((("negative")), 100000000, 0, -3045); ((("direct")), 100000000, 0, -3046); (Tag2 ([((("gadt")), 100000000, 0, -3048); ((("gadts")), 100000000, 0, -3049)]), 100000000, 0, -3047)], (0)), 100000000, 0, -3034)), (("runtime/tools.ml", 803, 28777, 28781), ("runtime/tools.ml", 809, 29081, 29149), 0), 0, Tag1 ("Refl__Tools", 2817))], 0), 1, ((Tag3 (Tag1 (Tag2 ((("Desc_vector", 8757)), (("Object", 8944))), "t"), [((("sequence")), 100000000, 0, -3015); ((("structure")), 100000000, 0, -3016); ((("arities")), 100000000, 0, -3017); ((("rec_group")), 100000000, 0, -3018); ((("kinds")), 100000000, 0, -3019); ((("positive")), 100000000, 0, -3020); ((("negative")), 100000000, 0, -3021); ((("direct")), 100000000, 0, -3022); ((("gadts")), 100000000, 0, -3023)], (0)), 100000000, 0, -3014)), [63; 15; 63; 15; 15; 15; 15; 15; 63], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 798, 28549, 28551), ("runtime/tools.ml", 809, 29081, 29149), 0), 0, 0, 0, Tag1 ("Refl__Tools", 2815)), 1, 0)]), 0, (("runtime/tools.ml", 1859, 72102, 72104), ("runtime/tools.ml", 1859, 72102, 72141), 0), Tag1 ("Refl__Tools", 11260)), 0, 0); Tag1 (("structure_find", 8952), ([((("index")), 100000000, 0, -2856); ((("structure")), 100000000, 0, -2857); ((("structures")), 100000000, 0, -2858); ((("arities")), 100000000, 0, -2859); ((("tuples")), 100000000, 0, -2860); ((("rec_group")), 100000000, 0, -2861); ((("kinds")), 100000000, 0, -2862); ((("positive")), 100000000, 0, -2863); ((("negative")), 100000000, 0, -2864); ((("direct")), 100000000, 0, -2865); ((("gadts")), 100000000, 0, -2866)], 11, Tag1 ([(("Structure_find", 8366), Tag1 ([(("section", 8367), 0, (Tag3 (Tag1 ((("Section", 8758)), "t"), [(Tag8 (([("Succ", ((((("index")), 100000000, 0, -2838))))], (0, 100000000, 0, -2851), 1, 0, 0)), 100000000, 0, -2850); ((("tuples")), 100000000, 0, -2842); ((("section")), 100000000, 0, -2852); ((("others")), 100000000, 0, -2853)], (0)), 100000000, 0, -2849), (("runtime/tools.ml", 1865, 72322, 72332), ("runtime/tools.ml", 1865, 72322, 72400), 0), 0, Tag1 ("Refl__Tools", 11262)); (("methods", 8368), 0, (Tag3 (Tag1 ((("Methods", 8950)), "t"), [((("section")), 100000000, 0, -2852); ((("structure")), 100000000, 0, -2839); ((("arities")), 100000000, 0, -2841); ((("rec_group")), 100000000, 0, -2843); ((("kinds")), 100000000, 0, -2844); ((("positive")), 100000000, 0, -2845); ((("negative")), 100000000, 0, -2846); ((("direct")), 100000000, 0, -2847); ((("gadts")), 100000000, 0, -2848)], (0)), 100000000, 0, -2854), (("runtime/tools.ml", 1866, 72401, 72411), ("runtime/tools.ml", 1868, 72497, 72549), 0), 0, Tag1 ("Refl__Tools", 11263)); (("others", 8369), 0, (Tag3 (Tag1 ((("Objects", 8951)), "t"), [((("others")), 100000000, 0, -2853); ((("structures")), 100000000, 0, -2840); ((("arities")), 100000000, 0, -2841); ((("rec_group")), 100000000, 0, -2843); ((("kinds")), 100000000, 0, -2844); ((("positive")), 100000000, 0, -2845); ((("negative")), 100000000, 0, -2846); ((("direct")), 100000000, 0, -2847); ((("gadts")), 100000000, 0, -2848)], (0)), 100000000, 0, -2855), (("runtime/tools.ml", 1869, 72550, 72560), ("runtime/tools.ml", 1871, 72645, 72696), 0), 0, Tag1 ("Refl__Tools", 11264))]), ((Tag3 ((("structure_find", 8952)), [((("index")), 100000000, 0, -2838); ((("structure")), 100000000, 0, -2839); ((("structures")), 100000000, 0, -2840); ((("arities")), 100000000, 0, -2841); ((("tuples")), 100000000, 0, -2842); ((("rec_group")), 100000000, 0, -2843); ((("kinds")), 100000000, 0, -2844); ((("positive")), 100000000, 0, -2845); ((("negative")), 100000000, 0, -2846); ((("direct")), 100000000, 0, -2847); ((("gadts")), 100000000, 0, -2848)], (0)), 100000000, 0, -2837)), (("runtime/tools.ml", 1864, 72297, 72301), ("runtime/tools.ml", 1875, 72844, 72870), 0), 0, Tag1 ("Refl__Tools", 11265))], 0), 1, 0, [63; 15; 15; 63; 63; 15; 15; 15; 15; 15; 63], [0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 1861, 72143, 72145), ("runtime/tools.ml", 1875, 72844, 72870), 0), 0, 0, 0, Tag1 ("Refl__Tools", 11261)), 1, 0); Tag1 (("find", 8953), ([((("tuples")), 100000000, 0, -2828); ((("structures")), 100000000, 0, -2829); ((("arities")), 100000000, 0, -2830); ((("rec_group")), 100000000, 0, -2831); ((("kinds")), 100000000, 0, -2832); ((("positive")), 100000000, 0, -2833); ((("negative")), 100000000, 0, -2834); ((("direct")), 100000000, 0, -2835); ((("gadts")), 100000000, 0, -2836)], 9, Tag1 ([(("Find", 8373), Tag1 ([(("index", 8374), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "selection"), [(Tag8 (([("Succ", ((((("index")), 100000000, 0, -2819))))], (0, 100000000, 0, -2818), 1, 0, 0)), 100000000, 0, -2817); ((("structures")), 100000000, 0, -2808); ((("structure")), 100000000, 0, -2820); ((0), 100000000, 0, -2821)], (0)), 100000000, 0, -2816), (("runtime/tools.ml", 1880, 73001, 73011), ("runtime/tools.ml", 1881, 73019, 73089), 0), 0, Tag1 ("Refl__Tools", 11273)); (("section", 8375), 0, (Tag3 (Tag1 ((("Section", 8758)), "t"), [(Tag8 (([("Succ", ((((("index")), 100000000, 0, -2819))))], (0, 100000000, 0, -2824), 1, 0, 0)), 100000000, 0, -2823); ((("tuples")), 100000000, 0, -2807); ((("section")), 100000000, 0, -2825); ((0), 100000000, 0, -2826)], (0)), 100000000, 0, -2822), (("runtime/tools.ml", 1882, 73090, 73100), ("runtime/tools.ml", 1882, 73090, 73162), 0), 0, Tag1 ("Refl__Tools", 11274)); (("methods", 8376), 0, (Tag3 (Tag1 ((("Methods", 8950)), "t"), [((("section")), 100000000, 0, -2825); ((("structure")), 100000000, 0, -2820); ((("arities")), 100000000, 0, -2809); ((("rec_group")), 100000000, 0, -2810); ((("kinds")), 100000000, 0, -2811); ((("positive")), 100000000, 0, -2812); ((("negative")), 100000000, 0, -2813); ((("direct")), 100000000, 0, -2814); ((("gadts")), 100000000, 0, -2815)], (0)), 100000000, 0, -2827), (("runtime/tools.ml", 1883, 73163, 73173), ("runtime/tools.ml", 1885, 73259, 73311), 0), 0, Tag1 ("Refl__Tools", 11275))]), ((Tag3 ((("find", 8953)), [((("tuples")), 100000000, 0, -2807); ((("structures")), 100000000, 0, -2808); ((("arities")), 100000000, 0, -2809); ((("rec_group")), 100000000, 0, -2810); ((("kinds")), 100000000, 0, -2811); ((("positive")), 100000000, 0, -2812); ((("negative")), 100000000, 0, -2813); ((("direct")), 100000000, 0, -2814); ((("gadts")), 100000000, 0, -2815)], (0)), 100000000, 0, -2806)), (("runtime/tools.ml", 1879, 72986, 72990), ("runtime/tools.ml", 1888, 73393, 73435), 0), 0, Tag1 ("Refl__Tools", 11276))], 0), 1, 0, [63; 15; 63; 15; 15; 15; 15; 15; 63], [0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("runtime/tools.ml", 1877, 72872, 72874), ("runtime/tools.ml", 1888, 73393, 73435), 0), 0, 0, 0, Tag1 ("Refl__Tools", 11272)), 1, 0); (("find", 8954), ((Tag1 (0, (Tag3 (Tag1 ((("Objects", 8951)), "t"), [(Tag2 ([((("tuple")), 100000000, 0, -2794); ((("tuples")), 100000000, 0, -2795)]), 100000000, 0, -2805); ((("structures")), 100000000, 0, -2796); ((("arities")), 100000000, 0, -2797); ((("rec_group")), 100000000, 0, -2798); ((("kinds")), 100000000, 0, -2799); ((("positive")), 100000000, 0, -2800); ((("negative")), 100000000, 0, -2801); ((("direct")), 100000000, 0, -2802); ((("gadts")), 100000000, 0, -2803)], (0)), 100000000, 0, -2804), (Tag1 (0, (Tag1 (0, (Tag3 ((("find", 8953)), [(Tag2 ([((("tuple")), 100000000, 0, -2794); ((("tuples")), 100000000, 0, -2795)]), 100000000, 0, -2793); ((("structures")), 100000000, 0, -2796); ((("arities")), 100000000, 0, -2797); ((("rec_group")), 100000000, 0, -2798); ((("kinds")), 100000000, 0, -2799); ((("positive")), 100000000, 0, -2800); ((("negative")), 100000000, 0, -2801); ((("direct")), 100000000, 0, -2802); ((("gadts")), 100000000, 0, -2803)], (0)), 100000000, 0, -2792), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -2789)], (0)), 100000000, 0, -2791), 0), 100000000, 0, -2790), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -2789)], (0)), 100000000, 0, -2788), 0), 100000000, 0, -2787), 0), 100000000, 0, -2786), 0, (("runtime/tools.ml", 1890, 73437, 73443), ("runtime/tools.ml", 1890, 73437, 73447), 0), 0, Tag1 ("Refl__Tools", 11283)), 0)]), 0, (("runtime/tools.ml", 1773, 68743, 68743), ("runtime/tools.ml", 1978, 77260, 77263), 0), Tag1 ("Refl__Tools", 11416)), 0, 0)], "Refl__Tools", [("Refl__Tools", ("i\215\207\166d\225\190DU\241\194\224\137P\158e")); ("Traverse__Values", ("}\239\001\023\024&\227\167Sl\002\148\026\190\180\025")); ("Traverse__Modules", ("=\175q\026#\242\139\b\202\252\139\207\195\170\254\202")); ("Traverse__Interface", ("\252\146\219\195\199\167\234\143+\145l\200\254\244s}")); ("Traverse__", ("y\220\011\221C%Ob7%t,\252N21")); ("Traverse", ("\019\209\190\177II\1552 \b\174\006\b\1643\152")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stdcompat__stdlib_s", ("?\143\027\238\145\138\139e`\216P\248\156\178=\206")); ("Stdcompat__init", ("r\254q\255\217]\232\239'\192d\165\222\016\157\133")); ("Stdcompat", ("\139\1989\181:\137\230\132\240\223\206\210Y\135S\\")); ("Refl__Desc", ("\221\150mt\149.2\132\189\244\007\164&\203\225\172")); ("Refl__", ("i\003\196\150\161\159\229g\157\181\149\015g%\221\240")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

  end
