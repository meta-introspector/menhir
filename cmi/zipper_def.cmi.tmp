type ('a, 'b) pair = { backbone : 'a; user : 'b; }
type a = Paths.Expr.t * (Loc.t * Deps.Edge.t)
module Arg = Module.Arg
module type tree =
  sig
    type path
    type module_expr
    type access
    type minor
    type minors
    type module_type
    type with_constraints
    type m2l
    type expr
    type bind_rec
    type ext
    type path_expr
    type path_expr_args
    type opens
  end
type state_diff = Zipper_skeleton.state_diff
module type fold =
  sig
    type path
    type module_expr
    type access
    type minor
    type minors
    type module_type
    type with_constraints
    type m2l
    type expr
    type bind_rec
    type ext
    type path_expr
    type path_expr_args
    type opens
    val path : Zipper_skeleton.query -> path
    val abstract : module_expr
    val alias : path -> module_type
    val access_add : path_expr -> Uloc.t -> Deps.Edge.t -> access -> access
    val access_init : access
    val access : access -> minor
    val pack : module_expr -> minor
    val minor_ext : loc:Uloc.t -> string -> ext -> minor
    val local_open : module_expr -> minors -> minor
    val local_bind : Name.t option -> module_expr -> minors -> minor
    val empty_minors : minors
    val add_minor : minor -> minors -> minors
    val apply : Uloc.t -> module_expr -> module_expr -> module_expr
    val bind : Name.t option -> module_expr -> expr
    val bind_alias : Name.t option -> Paths.S.t -> expr
    val bind_rec : bind_rec -> expr
    val bind_rec_add : Name.t option -> module_expr -> bind_rec -> bind_rec
    val bind_rec_init : bind_rec
    val bind_sig : Name.t option -> module_type -> expr
    val expr_ext : string -> ext -> expr
    val expr_include : loc:Uloc.t -> module_expr -> expr
    val expr_open : loc:Uloc.t -> module_expr -> expr
    val ext_module : m2l -> ext
    val ext_val : minors -> ext
    val m2l_add : Uloc.t -> expr -> m2l -> m2l
    val m2l_init : m2l
    val m2l : m2l -> m2l
    val me_constraint : module_expr -> module_type -> module_expr
    val me_ext : loc:Uloc.t -> string -> ext -> module_expr
    val me_fun : module_type Arg.t option -> module_expr -> module_expr
    val me_ident : path -> module_expr
    val me_val : minors -> module_expr
    val minor : minors -> expr
    val mt_ext : loc:Uloc.t -> string -> ext -> module_type
    val mt_fun : module_type Arg.t option -> module_type -> module_type
    val mt_ident : path_expr -> module_type
    val mt_of : module_expr -> module_type
    val mt_sig : m2l -> module_type
    val mt_with : module_type -> with_constraints -> module_type
    val with_init : with_constraints
    val with_type : minors -> with_constraints -> with_constraints
    val with_lhs : path -> with_constraints -> with_constraints
    val with_module :
      delete:bool ->
      lhs:Paths.S.t ->
      rhs:module_expr -> with_constraints -> with_constraints
    val with_module_type :
      delete:bool ->
      lhs:Paths.S.t ->
      rhs:module_type -> with_constraints -> with_constraints
    val open_add : path -> opens -> opens
    val open_init : opens
    val open_me : opens -> module_expr -> module_expr
    val path_expr_pure : path -> path_expr
    val path_expr_app : path_expr -> path_expr -> path_expr
    val path_expr_proj : path_expr -> Paths.S.t -> path -> path_expr
    val sig_abstract : module_type
    val sig_include : loc:Uloc.t -> module_type -> expr
    val str : m2l -> module_expr
    val unpacked : module_expr
  end
module type s =
  sig
    module T : tree
    module Abbrevs :
      sig
        type path = (Zipper_skeleton.path, T.path) pair
        type module_expr = (Zipper_skeleton.module_like, T.module_expr) pair
        type access = T.access
        type minor = T.minor
        type minors = T.minors
        type module_type = (Zipper_skeleton.module_like, T.module_type) pair
        type with_constraints =
            (Zipper_skeleton.module_like, T.with_constraints) pair
        type m2l = (Zipper_skeleton.m2l, T.m2l) pair
        type bind_rec = (state_diff, T.bind_rec) pair
        type path_expr_t = (Zipper_skeleton.module_like, T.path_expr) pair
        type opens = T.opens
        type path_in_context = Zipper_skeleton.path_in_context
      end
    type waccess = W of Abbrevs.access [@@unboxed]
    type 'focus expr =
        Open : M2l.module_expr expr
      | Include : M2l.module_expr expr
      | SigInclude : M2l.module_type expr
      | Bind : Name.t option -> M2l.module_expr expr
      | Bind_sig : Name.t option -> M2l.module_type expr
      | Bind_rec_sig : { diff : state_diff;
          left : (Name.t option * T.module_type * M2l.module_expr) list;
          name : Name.t option; expr : M2l.module_expr;
          right : M2l.module_expr M2l.bind list;
        } -> M2l.module_type expr
      | Bind_rec : { left : Abbrevs.bind_rec; name : Name.t option;
          mt : T.module_type;
          right : (Name.t option * T.module_type * M2l.module_expr) list;
        } -> M2l.module_expr expr
      | Minors : M2l.minor list expr
      | Extension_node : string -> M2l.extension_core expr
    type 'focus minor =
        Access : waccess minor
      | Pack : M2l.module_expr minor
      | Extension_node : Name.t -> M2l.extension_core minor
      | Local_open_left : state_diff * Loc.t *
          M2l.minor list -> M2l.module_expr minor
      | Local_open_right : state_diff *
          Abbrevs.module_expr -> M2l.minor list minor
      | Local_bind_left : state_diff * Name.t option *
          M2l.minor list -> M2l.module_expr minor
      | Local_bind_right : state_diff * Name.t option *
          Abbrevs.module_expr -> M2l.minor list minor
    type acc = { left : Abbrevs.access; right : a list; }
    type 'f path_expr =
        Simple : Abbrevs.path_in_context path_expr
      | App_f : Paths.Expr.t *
          (Module.level * Deps.Edge.t * Paths.S.t) option -> Paths.Expr.t
                                                             path_expr
      | App_x : Abbrevs.path_expr_t *
          (Module.level * Deps.Edge.t * Paths.S.t) option -> Paths.Expr.t
                                                             path_expr
      | Proj : Abbrevs.path_expr_t *
          Paths.S.t -> Abbrevs.path_in_context path_expr
    type 'focus me =
        Ident : Abbrevs.path_in_context me
      | Apply_left : M2l.module_expr -> M2l.module_expr me
      | Apply_right : Abbrevs.module_expr -> M2l.module_expr me
      | Fun_left : { name : Name.t option; diff : state_diff;
          body : M2l.module_expr;
        } -> M2l.module_type me
      | Fun_right :
          (Abbrevs.module_type Arg.t * state_diff) option -> M2l.module_expr
                                                             me
      | Constraint_left : M2l.module_type -> M2l.module_expr me
      | Constraint_right : Abbrevs.module_expr -> M2l.module_type me
      | Str : M2l.m2l me
      | Val : M2l.minor list me
      | Extension_node : string -> M2l.extension_core me
      | Open_me_left : { left : Abbrevs.opens;
          right : Paths.S.t Loc.ext list; diff : state_diff; loc : Loc.t;
          expr : M2l.module_expr;
        } -> Abbrevs.path_in_context me
      | Open_me_right : { opens : Abbrevs.opens; state : state_diff;
        } -> M2l.module_expr me
    type 'focus mt =
        Alias : Abbrevs.path_in_context mt
      | Ident : Paths.Expr.t mt
      | Sig : M2l.m2l mt
      | Fun_left : { name : Name.t option; diff : state_diff;
          body : M2l.module_type;
        } -> M2l.module_type mt
      | Fun_right :
          (Abbrevs.module_type Arg.t * state_diff) option -> M2l.module_type
                                                             mt
      | With_constraints : { original_body : Abbrevs.module_type;
          right : M2l.with_constraint list;
        } -> M2l.with_constraint mt
      | With_body : M2l.with_constraint list -> M2l.module_type mt
      | Of : M2l.module_expr mt
      | Extension_node : string -> M2l.extension_core mt
    type 'focus with_constraint =
        With_lhs : { body : Abbrevs.with_constraints; delete : bool;
          lhs : Paths.S.t; rhs : M2l.with_rhs;
        } -> Abbrevs.path_in_context with_constraint
      | With_type :
          Abbrevs.with_constraints -> M2l.minor list with_constraint
      | With_module : { body : Abbrevs.with_constraints; lhs : Paths.S.t;
          delete : bool;
        } -> Abbrevs.path_in_context with_constraint
      | With_module_type : { body : Abbrevs.with_constraints;
          lhs : Paths.S.t; delete : bool;
        } -> M2l.module_type with_constraint
    type 'focus ext = Mod : M2l.m2l ext | Val : M2l.minor list ext
    type ('elt, 'from) elt =
        M2l : { left : Abbrevs.m2l; loc : Uloc.t; state : state_diff;
          right : M2l.m2l;
        } -> (M2l.expression, M2l.m2l) elt
      | Expr : 'elt expr -> ('elt, M2l.expression) elt
      | Minor : 'elt minor -> ('elt, M2l.minor) elt
      | Minors : { left : Abbrevs.minors; right : M2l.minor list;
        } -> (M2l.minor, M2l.minor list) elt
      | Me : 'elt me -> ('elt, M2l.module_expr) elt
      | Mt : 'elt mt -> ('elt, M2l.module_type) elt
      | With_constraint :
          'elt with_constraint -> ('elt, M2l.with_constraint) elt
      | Access : acc -> (Paths.Expr.t, waccess) elt
      | Ext : 'elt ext -> ('elt, M2l.extension_core) elt
      | Path_expr : 'elt path_expr -> ('elt, Paths.Expr.t) elt
    type 'f t =
        [] : M2l.m2l t
      | (::) : ('focus, 'from) elt * 'from t -> 'focus t
    type 'result zipper = { path : 'result t; focus : 'result; }("DEBUG:rule", [Tag1 (("pair", 804), ([((("a")), 100000000, 0, -8); ((("b")), 100000000, 0, -9)], 2, [[(("backbone", 270), 0, ((("a")), 100000000, 0, -8), (("lib/zipper_def.ml", 2, 1, 23), ("lib/zipper_def.ml", 2, 1, 35), 0), 0, Tag1 ("Zipper_def", 1)); (("user", 271), 0, ((("b")), 100000000, 0, -9), (("lib/zipper_def.ml", 2, 1, 36), ("lib/zipper_def.ml", 2, 1, 43), 0), 0, Tag1 ("Zipper_def", 2))]], 1, 0, [25; 25], [0; 0], 0, 0, (("lib/zipper_def.ml", 2, 1, 1), ("lib/zipper_def.ml", 2, 1, 45), 0), 0, 0, 0, Tag1 ("Zipper_def", 0)), 1, 0); Tag1 (("a", 805), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "Expr"), "t"), 0, (0)), 100000000, 0, -4); (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -6); (Tag3 (Tag1 (Tag1 ((Tag2 ("Deps")), "Edge"), "t"), 0, (0)), 100000000, 0, -7)]), 100000000, 0, -5)]), 100000000, 0, -3)), 0, 0, 0, 0, (("lib/zipper_def.ml", 4, 47, 47), ("lib/zipper_def.ml", 4, 47, 92), 0), 0, 0, 0, Tag1 ("Zipper_def", 3)), 1, 0); Tag3 (("Arg", 806), 1, (Tag3 (Tag1 ((Tag2 ("Module")), "Arg")), 0, (("lib/zipper_def.ml", 5, 93, 93), ("lib/zipper_def.ml", 5, 93, 116), 0), Tag1 ("Zipper_def", 9)), 0, 0); Tag4 (("tree", 807), ((Tag1 ([Tag1 (("path", 811), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 9, 142, 144), ("lib/zipper_def.ml", 9, 142, 153), 0), 0, 0, 0, Tag1 ("Zipper_def", 10)), 1, 0); Tag1 (("module_expr", 812), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 10, 154, 156), ("lib/zipper_def.ml", 10, 154, 172), 0), 0, 0, 0, Tag1 ("Zipper_def", 11)), 1, 0); Tag1 (("access", 813), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 11, 173, 175), ("lib/zipper_def.ml", 11, 173, 186), 0), 0, 0, 0, Tag1 ("Zipper_def", 12)), 1, 0); Tag1 (("minor", 814), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 12, 187, 189), ("lib/zipper_def.ml", 12, 187, 199), 0), 0, 0, 0, Tag1 ("Zipper_def", 13)), 1, 0); Tag1 (("minors", 815), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 13, 200, 202), ("lib/zipper_def.ml", 13, 200, 213), 0), 0, 0, 0, Tag1 ("Zipper_def", 14)), 1, 0); Tag1 (("module_type", 816), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 14, 214, 216), ("lib/zipper_def.ml", 14, 214, 232), 0), 0, 0, 0, Tag1 ("Zipper_def", 15)), 1, 0); Tag1 (("with_constraints", 817), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 15, 233, 235), ("lib/zipper_def.ml", 15, 233, 256), 0), 0, 0, 0, Tag1 ("Zipper_def", 16)), 1, 0); Tag1 (("m2l", 818), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 16, 257, 259), ("lib/zipper_def.ml", 16, 257, 267), 0), 0, 0, 0, Tag1 ("Zipper_def", 17)), 1, 0); Tag1 (("expr", 819), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 17, 268, 270), ("lib/zipper_def.ml", 17, 268, 279), 0), 0, 0, 0, Tag1 ("Zipper_def", 18)), 1, 0); Tag1 (("bind_rec", 820), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 18, 280, 282), ("lib/zipper_def.ml", 18, 280, 295), 0), 0, 0, 0, Tag1 ("Zipper_def", 19)), 1, 0); Tag1 (("ext", 821), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 19, 296, 298), ("lib/zipper_def.ml", 19, 296, 306), 0), 0, 0, 0, Tag1 ("Zipper_def", 20)), 1, 0); Tag1 (("path_expr", 822), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 20, 307, 309), ("lib/zipper_def.ml", 20, 307, 323), 0), 0, 0, 0, Tag1 ("Zipper_def", 21)), 1, 0); Tag1 (("path_expr_args", 823), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 21, 324, 326), ("lib/zipper_def.ml", 21, 324, 345), 0), 0, 0, 0, Tag1 ("Zipper_def", 22)), 1, 0); Tag1 (("opens", 824), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 22, 346, 348), ("lib/zipper_def.ml", 22, 346, 358), 0), 0, 0, 0, Tag1 ("Zipper_def", 23)), 1, 0)])), 0, (("lib/zipper_def.ml", 8, 119, 119), ("lib/zipper_def.ml", 23, 359, 362), 0), Tag1 ("Zipper_def", 24)), 0); Tag1 (("state_diff", 808), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Zipper_skeleton")), "state_diff"), 0, (0)), 100000000, 0, -2)), 0, 0, 0, 0, (("lib/zipper_def.ml", 25, 364, 364), ("lib/zipper_def.ml", 25, 364, 408), 0), 0, 0, 0, Tag1 ("Zipper_def", 25)), 1, 0); Tag4 (("fold", 809), ((Tag1 ([Tag1 (("path", 825), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 9, 142, 144), ("lib/zipper_def.ml", 9, 142, 153), 0), 0, 0, 0, Tag1 ("Zipper_def", 10)), 1, 0); Tag1 (("module_expr", 826), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 10, 154, 156), ("lib/zipper_def.ml", 10, 154, 172), 0), 0, 0, 0, Tag1 ("Zipper_def", 11)), 1, 0); Tag1 (("access", 827), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 11, 173, 175), ("lib/zipper_def.ml", 11, 173, 186), 0), 0, 0, 0, Tag1 ("Zipper_def", 12)), 1, 0); Tag1 (("minor", 828), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 12, 187, 189), ("lib/zipper_def.ml", 12, 187, 199), 0), 0, 0, 0, Tag1 ("Zipper_def", 13)), 1, 0); Tag1 (("minors", 829), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 13, 200, 202), ("lib/zipper_def.ml", 13, 200, 213), 0), 0, 0, 0, Tag1 ("Zipper_def", 14)), 1, 0); Tag1 (("module_type", 830), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 14, 214, 216), ("lib/zipper_def.ml", 14, 214, 232), 0), 0, 0, 0, Tag1 ("Zipper_def", 15)), 1, 0); Tag1 (("with_constraints", 831), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 15, 233, 235), ("lib/zipper_def.ml", 15, 233, 256), 0), 0, 0, 0, Tag1 ("Zipper_def", 16)), 1, 0); Tag1 (("m2l", 832), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 16, 257, 259), ("lib/zipper_def.ml", 16, 257, 267), 0), 0, 0, 0, Tag1 ("Zipper_def", 17)), 1, 0); Tag1 (("expr", 833), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 17, 268, 270), ("lib/zipper_def.ml", 17, 268, 279), 0), 0, 0, 0, Tag1 ("Zipper_def", 18)), 1, 0); Tag1 (("bind_rec", 834), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 18, 280, 282), ("lib/zipper_def.ml", 18, 280, 295), 0), 0, 0, 0, Tag1 ("Zipper_def", 19)), 1, 0); Tag1 (("ext", 835), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 19, 296, 298), ("lib/zipper_def.ml", 19, 296, 306), 0), 0, 0, 0, Tag1 ("Zipper_def", 20)), 1, 0); Tag1 (("path_expr", 836), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 20, 307, 309), ("lib/zipper_def.ml", 20, 307, 323), 0), 0, 0, 0, Tag1 ("Zipper_def", 21)), 1, 0); Tag1 (("path_expr_args", 837), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 21, 324, 326), ("lib/zipper_def.ml", 21, 324, 345), 0), 0, 0, 0, Tag1 ("Zipper_def", 22)), 1, 0); Tag1 (("opens", 838), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 22, 346, 348), ("lib/zipper_def.ml", 22, 346, 358), 0), 0, 0, 0, Tag1 ("Zipper_def", 23)), 1, 0); (("path", 839), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Zipper_skeleton")), "query"), 0, (0)), 100000000, 0, -248), (Tag3 ((("path", 825)), 0, (0)), 100000000, 0, -247), 0), 100000000, 0, -246), 0, (("lib/zipper_def.ml", 29, 448, 450), ("lib/zipper_def.ml", 29, 448, 490), 0), 0, Tag1 ("Zipper_def", 26)), 0); (("abstract", 840), ((Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -245), 0, (("lib/zipper_def.ml", 30, 491, 493), ("lib/zipper_def.ml", 30, 491, 519), 0), 0, Tag1 ("Zipper_def", 27)), 0); (("alias", 841), ((Tag1 (0, (Tag3 ((("path", 825)), 0, (0)), 100000000, 0, -244), (Tag3 ((("module_type", 830)), 0, (0)), 100000000, 0, -243), 0), 100000000, 0, -242), 0, (("lib/zipper_def.ml", 31, 520, 522), ("lib/zipper_def.ml", 31, 520, 553), 0), 0, Tag1 ("Zipper_def", 28)), 0); (("access_add", 842), ((Tag1 (0, (Tag3 ((("path_expr", 836)), 0, (0)), 100000000, 0, -241), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Uloc")), "t"), 0, (0)), 100000000, 0, -240), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Deps")), "Edge"), "t"), 0, (0)), 100000000, 0, -239), (Tag1 (0, (Tag3 ((("access", 827)), 0, (0)), 100000000, 0, -238), (Tag3 ((("access", 827)), 0, (0)), 100000000, 0, -237), 0), 100000000, 0, -236), 0), 100000000, 0, -235), 0), 100000000, 0, -234), 0), 100000000, 0, -233), 0, (("lib/zipper_def.ml", 33, 555, 557), ("lib/zipper_def.ml", 34, 574, 632), 0), 0, Tag1 ("Zipper_def", 29)), 0); (("access_init", 843), ((Tag3 ((("access", 827)), 0, (0)), 100000000, 0, -232), 0, (("lib/zipper_def.ml", 35, 633, 635), ("lib/zipper_def.ml", 35, 633, 659), 0), 0, Tag1 ("Zipper_def", 30)), 0); (("access", 844), ((Tag1 (0, (Tag3 ((("access", 827)), 0, (0)), 100000000, 0, -231), (Tag3 ((("minor", 828)), 0, (0)), 100000000, 0, -230), 0), 100000000, 0, -229), 0, (("lib/zipper_def.ml", 36, 660, 662), ("lib/zipper_def.ml", 36, 660, 690), 0), 0, Tag1 ("Zipper_def", 31)), 0); (("pack", 845), ((Tag1 (0, (Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -228), (Tag3 ((("minor", 828)), 0, (0)), 100000000, 0, -227), 0), 100000000, 0, -226), 0, (("lib/zipper_def.ml", 37, 691, 693), ("lib/zipper_def.ml", 37, 691, 723), 0), 0, Tag1 ("Zipper_def", 32)), 0); (("minor_ext", 846), ((Tag1 (("loc"), (Tag3 (Tag1 ((Tag2 ("Uloc")), "t"), 0, (0)), 100000000, 0, -225), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -224), (Tag1 (0, (Tag3 ((("ext", 835)), 0, (0)), 100000000, 0, -223), (Tag3 ((("minor", 828)), 0, (0)), 100000000, 0, -222), 0), 100000000, 0, -221), 0), 100000000, 0, -220), 0), 100000000, 0, -219), 0, (("lib/zipper_def.ml", 38, 724, 726), ("lib/zipper_def.ml", 38, 724, 777), 0), 0, Tag1 ("Zipper_def", 33)), 0); (("local_open", 847), ((Tag1 (0, (Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -218), (Tag1 (0, (Tag3 ((("minors", 829)), 0, (0)), 100000000, 0, -217), (Tag3 ((("minor", 828)), 0, (0)), 100000000, 0, -216), 0), 100000000, 0, -215), 0), 100000000, 0, -214), 0, (("lib/zipper_def.ml", 39, 778, 780), ("lib/zipper_def.ml", 39, 778, 826), 0), 0, Tag1 ("Zipper_def", 34)), 0); (("local_bind", 848), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Name")), "t"), 0, (0)), 100000000, 0, -213)], (0)), 100000000, 0, -212), (Tag1 (0, (Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -211), (Tag1 (0, (Tag3 ((("minors", 829)), 0, (0)), 100000000, 0, -210), (Tag3 ((("minor", 828)), 0, (0)), 100000000, 0, -209), 0), 100000000, 0, -208), 0), 100000000, 0, -207), 0), 100000000, 0, -206), 0, (("lib/zipper_def.ml", 40, 827, 829), ("lib/zipper_def.ml", 40, 827, 892), 0), 0, Tag1 ("Zipper_def", 35)), 0); (("empty_minors", 849), ((Tag3 ((("minors", 829)), 0, (0)), 100000000, 0, -205), 0, (("lib/zipper_def.ml", 41, 893, 895), ("lib/zipper_def.ml", 41, 893, 919), 0), 0, Tag1 ("Zipper_def", 36)), 0); (("add_minor", 850), ((Tag1 (0, (Tag3 ((("minor", 828)), 0, (0)), 100000000, 0, -204), (Tag1 (0, (Tag3 ((("minors", 829)), 0, (0)), 100000000, 0, -203), (Tag3 ((("minors", 829)), 0, (0)), 100000000, 0, -202), 0), 100000000, 0, -201), 0), 100000000, 0, -200), 0, (("lib/zipper_def.ml", 42, 920, 922), ("lib/zipper_def.ml", 42, 920, 962), 0), 0, Tag1 ("Zipper_def", 37)), 0); (("apply", 851), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Uloc")), "t"), 0, (0)), 100000000, 0, -199), (Tag1 (0, (Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -198), (Tag1 (0, (Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -197), (Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -196), 0), 100000000, 0, -195), 0), 100000000, 0, -194), 0), 100000000, 0, -193), 0, (("lib/zipper_def.ml", 44, 964, 966), ("lib/zipper_def.ml", 44, 964, 1029), 0), 0, Tag1 ("Zipper_def", 38)), 0); (("bind", 852), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Name")), "t"), 0, (0)), 100000000, 0, -192)], (0)), 100000000, 0, -191), (Tag1 (0, (Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -190), (Tag3 ((("expr", 833)), 0, (0)), 100000000, 0, -189), 0), 100000000, 0, -188), 0), 100000000, 0, -187), 0, (("lib/zipper_def.ml", 46, 1031, 1033), ("lib/zipper_def.ml", 46, 1031, 1080), 0), 0, Tag1 ("Zipper_def", 39)), 0); (("bind_alias", 853), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Name")), "t"), 0, (0)), 100000000, 0, -186)], (0)), 100000000, 0, -185), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "S"), "t"), 0, (0)), 100000000, 0, -184), (Tag3 ((("expr", 833)), 0, (0)), 100000000, 0, -183), 0), 100000000, 0, -182), 0), 100000000, 0, -181), 0, (("lib/zipper_def.ml", 47, 1081, 1083), ("lib/zipper_def.ml", 47, 1081, 1133), 0), 0, Tag1 ("Zipper_def", 40)), 0); (("bind_rec", 854), ((Tag1 (0, (Tag3 ((("bind_rec", 834)), 0, (0)), 100000000, 0, -180), (Tag3 ((("expr", 833)), 0, (0)), 100000000, 0, -179), 0), 100000000, 0, -178), 0, (("lib/zipper_def.ml", 48, 1134, 1136), ("lib/zipper_def.ml", 48, 1134, 1167), 0), 0, Tag1 ("Zipper_def", 41)), 0); (("bind_rec_add", 855), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Name")), "t"), 0, (0)), 100000000, 0, -177)], (0)), 100000000, 0, -176), (Tag1 (0, (Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -175), (Tag1 (0, (Tag3 ((("bind_rec", 834)), 0, (0)), 100000000, 0, -174), (Tag3 ((("bind_rec", 834)), 0, (0)), 100000000, 0, -173), 0), 100000000, 0, -172), 0), 100000000, 0, -171), 0), 100000000, 0, -170), 0, (("lib/zipper_def.ml", 49, 1168, 1170), ("lib/zipper_def.ml", 50, 1189, 1245), 0), 0, Tag1 ("Zipper_def", 42)), 0); (("bind_rec_init", 856), ((Tag3 ((("bind_rec", 834)), 0, (0)), 100000000, 0, -169), 0, (("lib/zipper_def.ml", 51, 1246, 1248), ("lib/zipper_def.ml", 51, 1246, 1276), 0), 0, Tag1 ("Zipper_def", 43)), 0); (("bind_sig", 857), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Name")), "t"), 0, (0)), 100000000, 0, -168)], (0)), 100000000, 0, -167), (Tag1 (0, (Tag3 ((("module_type", 830)), 0, (0)), 100000000, 0, -166), (Tag3 ((("expr", 833)), 0, (0)), 100000000, 0, -165), 0), 100000000, 0, -164), 0), 100000000, 0, -163), 0, (("lib/zipper_def.ml", 52, 1277, 1279), ("lib/zipper_def.ml", 52, 1277, 1330), 0), 0, Tag1 ("Zipper_def", 44)), 0); (("expr_ext", 858), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -162), (Tag1 (0, (Tag3 ((("ext", 835)), 0, (0)), 100000000, 0, -161), (Tag3 ((("expr", 833)), 0, (0)), 100000000, 0, -160), 0), 100000000, 0, -159), 0), 100000000, 0, -158), 0, (("lib/zipper_def.ml", 54, 1332, 1334), ("lib/zipper_def.ml", 54, 1332, 1370), 0), 0, Tag1 ("Zipper_def", 45)), 0); (("expr_include", 859), ((Tag1 (("loc"), (Tag3 (Tag1 ((Tag2 ("Uloc")), "t"), 0, (0)), 100000000, 0, -157), (Tag1 (0, (Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -156), (Tag3 ((("expr", 833)), 0, (0)), 100000000, 0, -155), 0), 100000000, 0, -154), 0), 100000000, 0, -153), 0, (("lib/zipper_def.ml", 55, 1371, 1373), ("lib/zipper_def.ml", 55, 1371, 1425), 0), 0, Tag1 ("Zipper_def", 46)), 0); (("expr_open", 860), ((Tag1 (("loc"), (Tag3 (Tag1 ((Tag2 ("Uloc")), "t"), 0, (0)), 100000000, 0, -152), (Tag1 (0, (Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -151), (Tag3 ((("expr", 833)), 0, (0)), 100000000, 0, -150), 0), 100000000, 0, -149), 0), 100000000, 0, -148), 0, (("lib/zipper_def.ml", 56, 1426, 1428), ("lib/zipper_def.ml", 56, 1426, 1477), 0), 0, Tag1 ("Zipper_def", 47)), 0); (("ext_module", 861), ((Tag1 (0, (Tag3 ((("m2l", 832)), 0, (0)), 100000000, 0, -147), (Tag3 ((("ext", 835)), 0, (0)), 100000000, 0, -146), 0), 100000000, 0, -145), 0, (("lib/zipper_def.ml", 57, 1478, 1480), ("lib/zipper_def.ml", 57, 1478, 1507), 0), 0, Tag1 ("Zipper_def", 48)), 0); (("ext_val", 862), ((Tag1 (0, (Tag3 ((("minors", 829)), 0, (0)), 100000000, 0, -144), (Tag3 ((("ext", 835)), 0, (0)), 100000000, 0, -143), 0), 100000000, 0, -142), 0, (("lib/zipper_def.ml", 58, 1508, 1510), ("lib/zipper_def.ml", 58, 1508, 1537), 0), 0, Tag1 ("Zipper_def", 49)), 0); (("m2l_add", 863), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Uloc")), "t"), 0, (0)), 100000000, 0, -141), (Tag1 (0, (Tag3 ((("expr", 833)), 0, (0)), 100000000, 0, -140), (Tag1 (0, (Tag3 ((("m2l", 832)), 0, (0)), 100000000, 0, -139), (Tag3 ((("m2l", 832)), 0, (0)), 100000000, 0, -138), 0), 100000000, 0, -137), 0), 100000000, 0, -136), 0), 100000000, 0, -135), 0, (("lib/zipper_def.ml", 60, 1539, 1541), ("lib/zipper_def.ml", 60, 1539, 1583), 0), 0, Tag1 ("Zipper_def", 50)), 0); (("m2l_init", 864), ((Tag3 ((("m2l", 832)), 0, (0)), 100000000, 0, -134), 0, (("lib/zipper_def.ml", 61, 1584, 1586), ("lib/zipper_def.ml", 61, 1584, 1604), 0), 0, Tag1 ("Zipper_def", 51)), 0); (("m2l", 865), ((Tag1 (0, (Tag3 ((("m2l", 832)), 0, (0)), 100000000, 0, -133), (Tag3 ((("m2l", 832)), 0, (0)), 100000000, 0, -132), 0), 100000000, 0, -131), 0, (("lib/zipper_def.ml", 62, 1605, 1607), ("lib/zipper_def.ml", 62, 1605, 1627), 0), 0, Tag1 ("Zipper_def", 52)), 0); (("me_constraint", 866), ((Tag1 (0, (Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -130), (Tag1 (0, (Tag3 ((("module_type", 830)), 0, (0)), 100000000, 0, -129), (Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -128), 0), 100000000, 0, -127), 0), 100000000, 0, -126), 0, (("lib/zipper_def.ml", 64, 1629, 1631), ("lib/zipper_def.ml", 64, 1629, 1692), 0), 0, Tag1 ("Zipper_def", 53)), 0); (("me_ext", 867), ((Tag1 (("loc"), (Tag3 (Tag1 ((Tag2 ("Uloc")), "t"), 0, (0)), 100000000, 0, -125), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -124), (Tag1 (0, (Tag3 ((("ext", 835)), 0, (0)), 100000000, 0, -123), (Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -122), 0), 100000000, 0, -121), 0), 100000000, 0, -120), 0), 100000000, 0, -119), 0, (("lib/zipper_def.ml", 65, 1693, 1695), ("lib/zipper_def.ml", 65, 1693, 1750), 0), 0, Tag1 ("Zipper_def", 54)), 0); (("me_fun", 868), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Arg", 806)), "t"), [(Tag3 ((("module_type", 830)), 0, (0)), 100000000, 0, -118)], (0)), 100000000, 0, -117)], (0)), 100000000, 0, -116), (Tag1 (0, (Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -115), (Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -114), 0), 100000000, 0, -113), 0), 100000000, 0, -112), 0, (("lib/zipper_def.ml", 66, 1751, 1753), ("lib/zipper_def.ml", 67, 1766, 1824), 0), 0, Tag1 ("Zipper_def", 55)), 0); (("me_ident", 869), ((Tag1 (0, (Tag3 ((("path", 825)), 0, (0)), 100000000, 0, -111), (Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -110), 0), 100000000, 0, -109), 0, (("lib/zipper_def.ml", 68, 1825, 1827), ("lib/zipper_def.ml", 68, 1825, 1861), 0), 0, Tag1 ("Zipper_def", 56)), 0); (("me_val", 870), ((Tag1 (0, (Tag3 ((("minors", 829)), 0, (0)), 100000000, 0, -108), (Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -107), 0), 100000000, 0, -106), 0, (("lib/zipper_def.ml", 69, 1862, 1864), ("lib/zipper_def.ml", 69, 1862, 1898), 0), 0, Tag1 ("Zipper_def", 57)), 0); (("minor", 871), ((Tag1 (0, (Tag3 ((("minors", 829)), 0, (0)), 100000000, 0, -105), (Tag3 ((("expr", 833)), 0, (0)), 100000000, 0, -104), 0), 100000000, 0, -103), 0, (("lib/zipper_def.ml", 70, 1899, 1901), ("lib/zipper_def.ml", 70, 1899, 1927), 0), 0, Tag1 ("Zipper_def", 58)), 0); (("mt_ext", 872), ((Tag1 (("loc"), (Tag3 (Tag1 ((Tag2 ("Uloc")), "t"), 0, (0)), 100000000, 0, -102), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -101), (Tag1 (0, (Tag3 ((("ext", 835)), 0, (0)), 100000000, 0, -100), (Tag3 ((("module_type", 830)), 0, (0)), 100000000, 0, -99), 0), 100000000, 0, -98), 0), 100000000, 0, -97), 0), 100000000, 0, -96), 0, (("lib/zipper_def.ml", 72, 1929, 1931), ("lib/zipper_def.ml", 72, 1929, 1986), 0), 0, Tag1 ("Zipper_def", 59)), 0); (("mt_fun", 873), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Arg", 806)), "t"), [(Tag3 ((("module_type", 830)), 0, (0)), 100000000, 0, -95)], (0)), 100000000, 0, -94)], (0)), 100000000, 0, -93), (Tag1 (0, (Tag3 ((("module_type", 830)), 0, (0)), 100000000, 0, -92), (Tag3 ((("module_type", 830)), 0, (0)), 100000000, 0, -91), 0), 100000000, 0, -90), 0), 100000000, 0, -89), 0, (("lib/zipper_def.ml", 73, 1987, 1989), ("lib/zipper_def.ml", 74, 2002, 2060), 0), 0, Tag1 ("Zipper_def", 60)), 0); (("mt_ident", 874), ((Tag1 (0, (Tag3 ((("path_expr", 836)), 0, (0)), 100000000, 0, -88), (Tag3 ((("module_type", 830)), 0, (0)), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("lib/zipper_def.ml", 75, 2061, 2063), ("lib/zipper_def.ml", 75, 2061, 2102), 0), 0, Tag1 ("Zipper_def", 61)), 0); (("mt_of", 875), ((Tag1 (0, (Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -85), (Tag3 ((("module_type", 830)), 0, (0)), 100000000, 0, -84), 0), 100000000, 0, -83), 0, (("lib/zipper_def.ml", 76, 2103, 2105), ("lib/zipper_def.ml", 76, 2103, 2143), 0), 0, Tag1 ("Zipper_def", 62)), 0); (("mt_sig", 876), ((Tag1 (0, (Tag3 ((("m2l", 832)), 0, (0)), 100000000, 0, -82), (Tag3 ((("module_type", 830)), 0, (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0, (("lib/zipper_def.ml", 77, 2144, 2146), ("lib/zipper_def.ml", 77, 2144, 2177), 0), 0, Tag1 ("Zipper_def", 63)), 0); (("mt_with", 877), ((Tag1 (0, (Tag3 ((("module_type", 830)), 0, (0)), 100000000, 0, -79), (Tag1 (0, (Tag3 ((("with_constraints", 831)), 0, (0)), 100000000, 0, -78), (Tag3 ((("module_type", 830)), 0, (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0), 100000000, 0, -75), 0, (("lib/zipper_def.ml", 78, 2178, 2180), ("lib/zipper_def.ml", 78, 2178, 2240), 0), 0, Tag1 ("Zipper_def", 64)), 0); (("with_init", 878), ((Tag3 ((("with_constraints", 831)), 0, (0)), 100000000, 0, -74), 0, (("lib/zipper_def.ml", 80, 2242, 2244), ("lib/zipper_def.ml", 80, 2242, 2275), 0), 0, Tag1 ("Zipper_def", 65)), 0); (("with_type", 879), ((Tag1 (0, (Tag3 ((("minors", 829)), 0, (0)), 100000000, 0, -73), (Tag1 (0, (Tag3 ((("with_constraints", 831)), 0, (0)), 100000000, 0, -72), (Tag3 ((("with_constraints", 831)), 0, (0)), 100000000, 0, -71), 0), 100000000, 0, -70), 0), 100000000, 0, -69), 0, (("lib/zipper_def.ml", 81, 2276, 2278), ("lib/zipper_def.ml", 81, 2276, 2339), 0), 0, Tag1 ("Zipper_def", 66)), 0); (("with_lhs", 880), ((Tag1 (0, (Tag3 ((("path", 825)), 0, (0)), 100000000, 0, -68), (Tag1 (0, (Tag3 ((("with_constraints", 831)), 0, (0)), 100000000, 0, -67), (Tag3 ((("with_constraints", 831)), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0, (("lib/zipper_def.ml", 82, 2340, 2342), ("lib/zipper_def.ml", 82, 2340, 2400), 0), 0, Tag1 ("Zipper_def", 67)), 0); (("with_module", 881), ((Tag1 (("delete"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -63), (Tag1 (("lhs"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "S"), "t"), 0, (0)), 100000000, 0, -62), (Tag1 (("rhs"), (Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -61), (Tag1 (0, (Tag3 ((("with_constraints", 831)), 0, (0)), 100000000, 0, -60), (Tag3 ((("with_constraints", 831)), 0, (0)), 100000000, 0, -59), 0), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), 0), 100000000, 0, -55), 0, (("lib/zipper_def.ml", 83, 2401, 2403), ("lib/zipper_def.ml", 84, 2420, 2511), 0), 0, Tag1 ("Zipper_def", 68)), 0); (("with_module_type", 882), ((Tag1 (("delete"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -54), (Tag1 (("lhs"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "S"), "t"), 0, (0)), 100000000, 0, -53), (Tag1 (("rhs"), (Tag3 ((("module_type", 830)), 0, (0)), 100000000, 0, -52), (Tag1 (0, (Tag3 ((("with_constraints", 831)), 0, (0)), 100000000, 0, -51), (Tag3 ((("with_constraints", 831)), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0), 100000000, 0, -48), 0), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("lib/zipper_def.ml", 85, 2512, 2514), ("lib/zipper_def.ml", 86, 2536, 2627), 0), 0, Tag1 ("Zipper_def", 69)), 0); (("open_add", 883), ((Tag1 (0, (Tag3 ((("path", 825)), 0, (0)), 100000000, 0, -45), (Tag1 (0, (Tag3 ((("opens", 838)), 0, (0)), 100000000, 0, -44), (Tag3 ((("opens", 838)), 0, (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("lib/zipper_def.ml", 88, 2629, 2631), ("lib/zipper_def.ml", 89, 2646, 2672), 0), 0, Tag1 ("Zipper_def", 70)), 0); (("open_init", 884), ((Tag3 ((("opens", 838)), 0, (0)), 100000000, 0, -40), 0, (("lib/zipper_def.ml", 90, 2673, 2675), ("lib/zipper_def.ml", 90, 2673, 2696), 0), 0, Tag1 ("Zipper_def", 71)), 0); (("open_me", 885), ((Tag1 (0, (Tag3 ((("opens", 838)), 0, (0)), 100000000, 0, -39), (Tag1 (0, (Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -38), (Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("lib/zipper_def.ml", 91, 2697, 2699), ("lib/zipper_def.ml", 91, 2697, 2748), 0), 0, Tag1 ("Zipper_def", 72)), 0); (("path_expr_pure", 886), ((Tag1 (0, (Tag3 ((("path", 825)), 0, (0)), 100000000, 0, -34), (Tag3 ((("path_expr", 836)), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0, (("lib/zipper_def.ml", 93, 2750, 2752), ("lib/zipper_def.ml", 93, 2750, 2790), 0), 0, Tag1 ("Zipper_def", 73)), 0); (("path_expr_app", 887), ((Tag1 (0, (Tag3 ((("path_expr", 836)), 0, (0)), 100000000, 0, -31), (Tag1 (0, (Tag3 ((("path_expr", 836)), 0, (0)), 100000000, 0, -30), (Tag3 ((("path_expr", 836)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("lib/zipper_def.ml", 94, 2791, 2793), ("lib/zipper_def.ml", 94, 2791, 2848), 0), 0, Tag1 ("Zipper_def", 74)), 0); (("path_expr_proj", 888), ((Tag1 (0, (Tag3 ((("path_expr", 836)), 0, (0)), 100000000, 0, -26), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "S"), "t"), 0, (0)), 100000000, 0, -25), (Tag1 (0, (Tag3 ((("path", 825)), 0, (0)), 100000000, 0, -24), (Tag3 ((("path_expr", 836)), 0, (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("lib/zipper_def.ml", 95, 2849, 2851), ("lib/zipper_def.ml", 95, 2849, 2914), 0), 0, Tag1 ("Zipper_def", 75)), 0); (("sig_abstract", 889), ((Tag3 ((("module_type", 830)), 0, (0)), 100000000, 0, -19), 0, (("lib/zipper_def.ml", 97, 2916, 2918), ("lib/zipper_def.ml", 97, 2916, 2948), 0), 0, Tag1 ("Zipper_def", 76)), 0); (("sig_include", 890), ((Tag1 (("loc"), (Tag3 (Tag1 ((Tag2 ("Uloc")), "t"), 0, (0)), 100000000, 0, -18), (Tag1 (0, (Tag3 ((("module_type", 830)), 0, (0)), 100000000, 0, -17), (Tag3 ((("expr", 833)), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("lib/zipper_def.ml", 98, 2949, 2951), ("lib/zipper_def.ml", 98, 2949, 3002), 0), 0, Tag1 ("Zipper_def", 77)), 0); (("str", 891), ((Tag1 (0, (Tag3 ((("m2l", 832)), 0, (0)), 100000000, 0, -13), (Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("lib/zipper_def.ml", 99, 3003, 3005), ("lib/zipper_def.ml", 99, 3003, 3033), 0), 0, Tag1 ("Zipper_def", 78)), 0); (("unpacked", 892), ((Tag3 ((("module_expr", 826)), 0, (0)), 100000000, 0, -10), 0, (("lib/zipper_def.ml", 100, 3034, 3036), ("lib/zipper_def.ml", 100, 3034, 3062), 0), 0, Tag1 ("Zipper_def", 79)), 0)])), 0, (("lib/zipper_def.ml", 27, 410, 410), ("lib/zipper_def.ml", 102, 3064, 3067), 0), Tag1 ("Zipper_def", 80)), 0); Tag4 (("s", 810), ((Tag1 ([Tag3 (("T", 893), 0, (((("tree", 807))), 0, (("lib/zipper_def.ml", 105, 3089, 3091), ("lib/zipper_def.ml", 105, 3089, 3106), 0), Tag1 ("Zipper_def", 81)), 0, 0); Tag3 (("Abbrevs", 894), 0, (Tag1 ([Tag1 (("path", 907), (0, 0, 0, 1, ((Tag3 ((("pair", 804)), [(Tag3 (Tag1 ((Tag2 ("Zipper_skeleton")), "path"), 0, (0)), 100000000, 0, -549); (Tag3 (Tag1 ((("T", 893)), "path"), 0, (0)), 100000000, 0, -550)], (0)), 100000000, 0, -548)), 0, 0, 0, 0, (("lib/zipper_def.ml", 107, 3129, 3133), ("lib/zipper_def.ml", 107, 3129, 3180), 0), 0, 0, 0, Tag1 ("Zipper_def", 82)), 1, 0); Tag1 (("module_expr", 908), (0, 0, 0, 1, ((Tag3 ((("pair", 804)), [(Tag3 (Tag1 ((Tag2 ("Zipper_skeleton")), "module_like"), 0, (0)), 100000000, 0, -546); (Tag3 (Tag1 ((("T", 893)), "module_expr"), 0, (0)), 100000000, 0, -547)], (0)), 100000000, 0, -545)), 0, 0, 0, 0, (("lib/zipper_def.ml", 108, 3181, 3185), ("lib/zipper_def.ml", 108, 3181, 3253), 0), 0, 0, 0, Tag1 ("Zipper_def", 83)), 1, 0); Tag1 (("access", 909), (0, 0, 0, 1, ((Tag3 (Tag1 ((("T", 893)), "access"), 0, (0)), 100000000, 0, -544)), 0, 0, 0, 0, (("lib/zipper_def.ml", 109, 3254, 3258), ("lib/zipper_def.ml", 109, 3254, 3280), 0), 0, 0, 0, Tag1 ("Zipper_def", 84)), 1, 0); Tag1 (("minor", 910), (0, 0, 0, 1, ((Tag3 (Tag1 ((("T", 893)), "minor"), 0, (0)), 100000000, 0, -543)), 0, 0, 0, 0, (("lib/zipper_def.ml", 110, 3281, 3285), ("lib/zipper_def.ml", 110, 3281, 3305), 0), 0, 0, 0, Tag1 ("Zipper_def", 85)), 1, 0); Tag1 (("minors", 911), (0, 0, 0, 1, ((Tag3 (Tag1 ((("T", 893)), "minors"), 0, (0)), 100000000, 0, -542)), 0, 0, 0, 0, (("lib/zipper_def.ml", 111, 3306, 3310), ("lib/zipper_def.ml", 111, 3306, 3332), 0), 0, 0, 0, Tag1 ("Zipper_def", 86)), 1, 0); Tag1 (("module_type", 912), (0, 0, 0, 1, ((Tag3 ((("pair", 804)), [(Tag3 (Tag1 ((Tag2 ("Zipper_skeleton")), "module_like"), 0, (0)), 100000000, 0, -540); (Tag3 (Tag1 ((("T", 893)), "module_type"), 0, (0)), 100000000, 0, -541)], (0)), 100000000, 0, -539)), 0, 0, 0, 0, (("lib/zipper_def.ml", 112, 3333, 3337), ("lib/zipper_def.ml", 112, 3333, 3405), 0), 0, 0, 0, Tag1 ("Zipper_def", 87)), 1, 0); Tag1 (("with_constraints", 913), (0, 0, 0, 1, ((Tag3 ((("pair", 804)), [(Tag3 (Tag1 ((Tag2 ("Zipper_skeleton")), "module_like"), 0, (0)), 100000000, 0, -537); (Tag3 (Tag1 ((("T", 893)), "with_constraints"), 0, (0)), 100000000, 0, -538)], (0)), 100000000, 0, -536)), 0, 0, 0, 0, (("lib/zipper_def.ml", 113, 3406, 3410), ("lib/zipper_def.ml", 113, 3406, 3488), 0), 0, 0, 0, Tag1 ("Zipper_def", 88)), 1, 0); Tag1 (("m2l", 914), (0, 0, 0, 1, ((Tag3 ((("pair", 804)), [(Tag3 (Tag1 ((Tag2 ("Zipper_skeleton")), "m2l"), 0, (0)), 100000000, 0, -534); (Tag3 (Tag1 ((("T", 893)), "m2l"), 0, (0)), 100000000, 0, -535)], (0)), 100000000, 0, -533)), 0, 0, 0, 0, (("lib/zipper_def.ml", 114, 3489, 3493), ("lib/zipper_def.ml", 114, 3489, 3537), 0), 0, 0, 0, Tag1 ("Zipper_def", 89)), 1, 0); Tag1 (("bind_rec", 915), (0, 0, 0, 1, ((Tag3 ((("pair", 804)), [(Tag3 ((("state_diff", 808)), 0, (0)), 100000000, 0, -531); (Tag3 (Tag1 ((("T", 893)), "bind_rec"), 0, (0)), 100000000, 0, -532)], (0)), 100000000, 0, -530)), 0, 0, 0, 0, (("lib/zipper_def.ml", 115, 3538, 3542), ("lib/zipper_def.ml", 115, 3538, 3587), 0), 0, 0, 0, Tag1 ("Zipper_def", 90)), 1, 0); Tag1 (("path_expr_t", 916), (0, 0, 0, 1, ((Tag3 ((("pair", 804)), [(Tag3 (Tag1 ((Tag2 ("Zipper_skeleton")), "module_like"), 0, (0)), 100000000, 0, -528); (Tag3 (Tag1 ((("T", 893)), "path_expr"), 0, (0)), 100000000, 0, -529)], (0)), 100000000, 0, -527)), 0, 0, 0, 0, (("lib/zipper_def.ml", 116, 3588, 3592), ("lib/zipper_def.ml", 116, 3588, 3658), 0), 0, 0, 0, Tag1 ("Zipper_def", 91)), 1, 0); Tag1 (("opens", 917), (0, 0, 0, 1, ((Tag3 (Tag1 ((("T", 893)), "opens"), 0, (0)), 100000000, 0, -526)), 0, 0, 0, 0, (("lib/zipper_def.ml", 117, 3659, 3663), ("lib/zipper_def.ml", 117, 3659, 3683), 0), 0, 0, 0, Tag1 ("Zipper_def", 92)), 1, 0); Tag1 (("path_in_context", 918), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Zipper_skeleton")), "path_in_context"), 0, (0)), 100000000, 0, -525)), 0, 0, 0, 0, (("lib/zipper_def.ml", 118, 3684, 3688), ("lib/zipper_def.ml", 118, 3684, 3742), 0), 0, 0, 0, Tag1 ("Zipper_def", 93)), 1, 0)]), 0, (("lib/zipper_def.ml", 106, 3107, 3109), ("lib/zipper_def.ml", 119, 3743, 3748), 0), Tag1 ("Zipper_def", 94)), 0, 0); Tag1 (("waccess", 895), (0, 0, Tag1 ([(("W", 547), ([(Tag3 (Tag1 ((("Abbrevs", 894)), "access"), 0, (0)), 100000000, 0, -524)]), 0, (("lib/zipper_def.ml", 123, 3766, 3783), ("lib/zipper_def.ml", 123, 3766, 3794), 0), 0, Tag1 ("Zipper_def", 96))], 1), 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 123, 3766, 3768), ("lib/zipper_def.ml", 123, 3766, 3806), 0), [(("unboxed", (("lib/zipper_def.ml", 123, 3766, 3798), ("lib/zipper_def.ml", 123, 3766, 3805), 0)), (0), (("lib/zipper_def.ml", 123, 3766, 3795), ("lib/zipper_def.ml", 123, 3766, 3806), 0))], 0, 0, Tag1 ("Zipper_def", 95)), 1, 0); Tag1 (("expr", 896), ([((("focus")), 100000000, 0, -523)], 1, Tag1 ([(("Open", 549), (0), ((Tag3 ((("expr", 896)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "module_expr"), 0, (0)), 100000000, 0, -477)], (0)), 100000000, 0, -476)), (("lib/zipper_def.ml", 126, 3829, 3833), ("lib/zipper_def.ml", 126, 3829, 3861), 0), 0, Tag1 ("Zipper_def", 101)); (("Include", 576), (0), ((Tag3 ((("expr", 896)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "module_expr"), 0, (0)), 100000000, 0, -479)], (0)), 100000000, 0, -478)), (("lib/zipper_def.ml", 127, 3862, 3866), ("lib/zipper_def.ml", 127, 3862, 3898), 0), 0, Tag1 ("Zipper_def", 102)); (("SigInclude", 577), (0), ((Tag3 ((("expr", 896)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "module_type"), 0, (0)), 100000000, 0, -481)], (0)), 100000000, 0, -480)), (("lib/zipper_def.ml", 128, 3899, 3903), ("lib/zipper_def.ml", 128, 3899, 3938), 0), 0, Tag1 ("Zipper_def", 103)); (("Bind", 578), ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Name")), "t"), 0, (0)), 100000000, 0, -485)], (0)), 100000000, 0, -484)]), ((Tag3 ((("expr", 896)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "module_expr"), 0, (0)), 100000000, 0, -483)], (0)), 100000000, 0, -482)), (("lib/zipper_def.ml", 129, 3939, 3943), ("lib/zipper_def.ml", 129, 3939, 3989), 0), 0, Tag1 ("Zipper_def", 104)); (("Bind_sig", 579), ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Name")), "t"), 0, (0)), 100000000, 0, -489)], (0)), 100000000, 0, -488)]), ((Tag3 ((("expr", 896)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "module_type"), 0, (0)), 100000000, 0, -487)], (0)), 100000000, 0, -486)), (("lib/zipper_def.ml", 130, 3990, 3994), ("lib/zipper_def.ml", 130, 3990, 4043), 0), 0, Tag1 ("Zipper_def", 105)); (("Bind_rec_sig", 580), Tag1 ([(("diff", 581), 0, (Tag3 ((("state_diff", 808)), 0, (0)), 100000000, 0, -492), (("lib/zipper_def.ml", 133, 4074, 4084), ("lib/zipper_def.ml", 133, 4074, 4101), 0), 0, Tag1 ("Zipper_def", 106)); (("left", 582), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Name")), "t"), 0, (0)), 100000000, 0, -496)], (0)), 100000000, 0, -495); (Tag3 (Tag1 ((("T", 893)), "module_type"), 0, (0)), 100000000, 0, -497); (Tag3 (Tag1 ((Tag2 ("M2l")), "module_expr"), 0, (0)), 100000000, 0, -498)]), 100000000, 0, -494)], (0)), 100000000, 0, -493), (("lib/zipper_def.ml", 134, 4102, 4112), ("lib/zipper_def.ml", 134, 4102, 4173), 0), 0, Tag1 ("Zipper_def", 107)); (("name", 583), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Name")), "t"), 0, (0)), 100000000, 0, -500)], (0)), 100000000, 0, -499), (("lib/zipper_def.ml", 135, 4174, 4184), ("lib/zipper_def.ml", 135, 4174, 4204), 0), 0, Tag1 ("Zipper_def", 108)); (("expr", 584), 0, (Tag3 (Tag1 ((Tag2 ("M2l")), "module_expr"), 0, (0)), 100000000, 0, -501), (("lib/zipper_def.ml", 136, 4205, 4215), ("lib/zipper_def.ml", 136, 4205, 4237), 0), 0, Tag1 ("Zipper_def", 109)); (("right", 585), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "bind"), [(Tag3 (Tag1 ((Tag2 ("M2l")), "module_expr"), 0, (0)), 100000000, 0, -504)], (0)), 100000000, 0, -503)], (0)), 100000000, 0, -502), (("lib/zipper_def.ml", 137, 4238, 4248), ("lib/zipper_def.ml", 137, 4238, 4284), 0), 0, Tag1 ("Zipper_def", 110))]), ((Tag3 ((("expr", 896)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "module_type"), 0, (0)), 100000000, 0, -491)], (0)), 100000000, 0, -490)), (("lib/zipper_def.ml", 131, 4044, 4048), ("lib/zipper_def.ml", 138, 4285, 4318), 0), 0, Tag1 ("Zipper_def", 111)); (("Bind_rec", 586), Tag1 ([(("left", 587), 0, (Tag3 (Tag1 ((("Abbrevs", 894)), "bind_rec"), 0, (0)), 100000000, 0, -507), (("lib/zipper_def.ml", 141, 4345, 4355), ("lib/zipper_def.ml", 141, 4345, 4370), 0), 0, Tag1 ("Zipper_def", 112)); (("name", 588), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Name")), "t"), 0, (0)), 100000000, 0, -509)], (0)), 100000000, 0, -508), (("lib/zipper_def.ml", 142, 4371, 4381), ("lib/zipper_def.ml", 142, 4371, 4400), 0), 0, Tag1 ("Zipper_def", 113)); (("mt", 589), 0, (Tag3 (Tag1 ((("T", 893)), "module_type"), 0, (0)), 100000000, 0, -510), (("lib/zipper_def.ml", 143, 4401, 4411), ("lib/zipper_def.ml", 143, 4401, 4429), 0), 0, Tag1 ("Zipper_def", 114)); (("right", 590), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Name")), "t"), 0, (0)), 100000000, 0, -514)], (0)), 100000000, 0, -513); (Tag3 (Tag1 ((("T", 893)), "module_type"), 0, (0)), 100000000, 0, -515); (Tag3 (Tag1 ((Tag2 ("M2l")), "module_expr"), 0, (0)), 100000000, 0, -516)]), 100000000, 0, -512)], (0)), 100000000, 0, -511), (("lib/zipper_def.ml", 144, 4430, 4440), ("lib/zipper_def.ml", 144, 4430, 4502), 0), 0, Tag1 ("Zipper_def", 115))]), ((Tag3 ((("expr", 896)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "module_expr"), 0, (0)), 100000000, 0, -506)], (0)), 100000000, 0, -505)), (("lib/zipper_def.ml", 139, 4319, 4323), ("lib/zipper_def.ml", 145, 4503, 4536), 0), 0, Tag1 ("Zipper_def", 116)); (("Minors", 591), (0), ((Tag3 ((("expr", 896)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "minor"), 0, (0)), 100000000, 0, -519)], (0)), 100000000, 0, -518)], (0)), 100000000, 0, -517)), (("lib/zipper_def.ml", 146, 4537, 4541), ("lib/zipper_def.ml", 146, 4537, 4570), 0), 0, Tag1 ("Zipper_def", 117)); (("Extension_node", 592), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -522)]), ((Tag3 ((("expr", 896)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "extension_core"), 0, (0)), 100000000, 0, -521)], (0)), 100000000, 0, -520)), (("lib/zipper_def.ml", 147, 4571, 4575), ("lib/zipper_def.ml", 147, 4571, 4627), 0), 0, Tag1 ("Zipper_def", 118))], 0), 1, 0, [63], [0], 0, 0, (("lib/zipper_def.ml", 125, 3808, 3810), ("lib/zipper_def.ml", 147, 4571, 4627), 0), 0, 0, 0, Tag1 ("Zipper_def", 97)), 1, 0); Tag1 (("minor", 897), ([((("focus")), 100000000, 0, -475)], 1, Tag1 ([(("Access", 594), (0), ((Tag3 ((("minor", 897)), [(Tag3 ((("waccess", 895)), 0, (0)), 100000000, 0, -444)], (0)), 100000000, 0, -443)), (("lib/zipper_def.ml", 150, 4651, 4655), ("lib/zipper_def.ml", 150, 4651, 4679), 0), 0, Tag1 ("Zipper_def", 132)); (("Pack", 595), (0), ((Tag3 ((("minor", 897)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "module_expr"), 0, (0)), 100000000, 0, -446)], (0)), 100000000, 0, -445)), (("lib/zipper_def.ml", 151, 4680, 4684), ("lib/zipper_def.ml", 151, 4680, 4714), 0), 0, Tag1 ("Zipper_def", 133)); (("Extension_node", 596), ([(Tag3 (Tag1 ((Tag2 ("Name")), "t"), 0, (0)), 100000000, 0, -449)]), ((Tag3 ((("minor", 897)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "extension_core"), 0, (0)), 100000000, 0, -448)], (0)), 100000000, 0, -447)), (("lib/zipper_def.ml", 152, 4715, 4719), ("lib/zipper_def.ml", 152, 4715, 4772), 0), 0, Tag1 ("Zipper_def", 134)); (("Local_open_left", 597), ([(Tag3 ((("state_diff", 808)), 0, (0)), 100000000, 0, -452); (Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -453); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "minor"), 0, (0)), 100000000, 0, -455)], (0)), 100000000, 0, -454)]), ((Tag3 ((("minor", 897)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "module_expr"), 0, (0)), 100000000, 0, -451)], (0)), 100000000, 0, -450)), (("lib/zipper_def.ml", 154, 4774, 4778), ("lib/zipper_def.ml", 154, 4774, 4858), 0), 0, Tag1 ("Zipper_def", 135)); (("Local_open_right", 598), ([(Tag3 ((("state_diff", 808)), 0, (0)), 100000000, 0, -459); (Tag3 (Tag1 ((("Abbrevs", 894)), "module_expr"), 0, (0)), 100000000, 0, -460)]), ((Tag3 ((("minor", 897)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "minor"), 0, (0)), 100000000, 0, -458)], (0)), 100000000, 0, -457)], (0)), 100000000, 0, -456)), (("lib/zipper_def.ml", 155, 4859, 4863), ("lib/zipper_def.ml", 155, 4859, 4931), 0), 0, Tag1 ("Zipper_def", 136)); (("Local_bind_left", 599), ([(Tag3 ((("state_diff", 808)), 0, (0)), 100000000, 0, -463); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Name")), "t"), 0, (0)), 100000000, 0, -465)], (0)), 100000000, 0, -464); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "minor"), 0, (0)), 100000000, 0, -467)], (0)), 100000000, 0, -466)]), ((Tag3 ((("minor", 897)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "module_expr"), 0, (0)), 100000000, 0, -462)], (0)), 100000000, 0, -461)), (("lib/zipper_def.ml", 157, 4933, 4937), ("lib/zipper_def.ml", 157, 4933, 5024), 0), 0, Tag1 ("Zipper_def", 137)); (("Local_bind_right", 600), ([(Tag3 ((("state_diff", 808)), 0, (0)), 100000000, 0, -471); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Name")), "t"), 0, (0)), 100000000, 0, -473)], (0)), 100000000, 0, -472); (Tag3 (Tag1 ((("Abbrevs", 894)), "module_expr"), 0, (0)), 100000000, 0, -474)]), ((Tag3 ((("minor", 897)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "minor"), 0, (0)), 100000000, 0, -470)], (0)), 100000000, 0, -469)], (0)), 100000000, 0, -468)), (("lib/zipper_def.ml", 158, 5025, 5029), ("lib/zipper_def.ml", 158, 5025, 5113), 0), 0, Tag1 ("Zipper_def", 138))], 0), 1, 0, [63], [0], 0, 0, (("lib/zipper_def.ml", 149, 4629, 4631), ("lib/zipper_def.ml", 158, 5025, 5113), 0), 0, 0, 0, Tag1 ("Zipper_def", 131)), 1, 0); Tag1 (("acc", 898), (0, 0, [[(("left", 602), 0, (Tag3 (Tag1 ((("Abbrevs", 894)), "access"), 0, (0)), 100000000, 0, -440), (("lib/zipper_def.ml", 161, 5128, 5133), ("lib/zipper_def.ml", 161, 5128, 5146), 0), 0, Tag1 ("Zipper_def", 140)); (("right", 603), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("a", 805)), 0, (0)), 100000000, 0, -442)], (0)), 100000000, 0, -441), (("lib/zipper_def.ml", 162, 5147, 5152), ("lib/zipper_def.ml", 162, 5147, 5164), 0), 0, Tag1 ("Zipper_def", 141))]], 1, 0, 0, 0, 0, 0, (("lib/zipper_def.ml", 160, 5115, 5117), ("lib/zipper_def.ml", 163, 5165, 5170), 0), 0, 0, 0, Tag1 ("Zipper_def", 139)), 1, 0); Tag1 (("path_expr", 899), ([((("f")), 100000000, 0, -439)], 1, Tag1 ([(("Simple", 605), (0), ((Tag3 ((("path_expr", 899)), [(Tag3 (Tag1 ((("Abbrevs", 894)), "path_in_context"), 0, (0)), 100000000, 0, -418)], (0)), 100000000, 0, -417)), (("lib/zipper_def.ml", 166, 5195, 5199), ("lib/zipper_def.ml", 166, 5195, 5234), 0), 0, Tag1 ("Zipper_def", 143)); (("App_f", 606), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "Expr"), "t"), 0, (0)), 100000000, 0, -421); (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Module")), "level"), 0, (0)), 100000000, 0, -424); (Tag3 (Tag1 (Tag1 ((Tag2 ("Deps")), "Edge"), "t"), 0, (0)), 100000000, 0, -425); (Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "S"), "t"), 0, (0)), 100000000, 0, -426)]), 100000000, 0, -423)], (0)), 100000000, 0, -422)]), ((Tag3 ((("path_expr", 899)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "Expr"), "t"), 0, (0)), 100000000, 0, -420)], (0)), 100000000, 0, -419)), (("lib/zipper_def.ml", 167, 5235, 5239), ("lib/zipper_def.ml", 167, 5235, 5336), 0), 0, Tag1 ("Zipper_def", 144)); (("App_x", 607), ([(Tag3 (Tag1 ((("Abbrevs", 894)), "path_expr_t"), 0, (0)), 100000000, 0, -429); (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Module")), "level"), 0, (0)), 100000000, 0, -432); (Tag3 (Tag1 (Tag1 ((Tag2 ("Deps")), "Edge"), "t"), 0, (0)), 100000000, 0, -433); (Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "S"), "t"), 0, (0)), 100000000, 0, -434)]), 100000000, 0, -431)], (0)), 100000000, 0, -430)]), ((Tag3 ((("path_expr", 899)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "Expr"), "t"), 0, (0)), 100000000, 0, -428)], (0)), 100000000, 0, -427)), (("lib/zipper_def.ml", 168, 5337, 5341), ("lib/zipper_def.ml", 168, 5337, 5437), 0), 0, Tag1 ("Zipper_def", 145)); (("Proj", 608), ([(Tag3 (Tag1 ((("Abbrevs", 894)), "path_expr_t"), 0, (0)), 100000000, 0, -437); (Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "S"), "t"), 0, (0)), 100000000, 0, -438)]), ((Tag3 ((("path_expr", 899)), [(Tag3 (Tag1 ((("Abbrevs", 894)), "path_in_context"), 0, (0)), 100000000, 0, -436)], (0)), 100000000, 0, -435)), (("lib/zipper_def.ml", 169, 5438, 5442), ("lib/zipper_def.ml", 169, 5438, 5502), 0), 0, Tag1 ("Zipper_def", 146))], 0), 1, 0, [63], [0], 0, 0, (("lib/zipper_def.ml", 165, 5172, 5174), ("lib/zipper_def.ml", 169, 5438, 5502), 0), 0, 0, 0, Tag1 ("Zipper_def", 142)), 1, 0); Tag1 (("me", 900), ([((("focus")), 100000000, 0, -416)], 1, Tag1 ([(("Ident", 610), (0), ((Tag3 ((("me", 900)), [(Tag3 (Tag1 ((("Abbrevs", 894)), "path_in_context"), 0, (0)), 100000000, 0, -369)], (0)), 100000000, 0, -368)), (("lib/zipper_def.ml", 172, 5523, 5527), ("lib/zipper_def.ml", 172, 5523, 5554), 0), 0, Tag1 ("Zipper_def", 148)); (("Apply_left", 611), ([(Tag3 (Tag1 ((Tag2 ("M2l")), "module_expr"), 0, (0)), 100000000, 0, -372)]), ((Tag3 ((("me", 900)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "module_expr"), 0, (0)), 100000000, 0, -371)], (0)), 100000000, 0, -370)), (("lib/zipper_def.ml", 173, 5555, 5559), ("lib/zipper_def.ml", 173, 5555, 5610), 0), 0, Tag1 ("Zipper_def", 149)); (("Apply_right", 612), ([(Tag3 (Tag1 ((("Abbrevs", 894)), "module_expr"), 0, (0)), 100000000, 0, -375)]), ((Tag3 ((("me", 900)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "module_expr"), 0, (0)), 100000000, 0, -374)], (0)), 100000000, 0, -373)), (("lib/zipper_def.ml", 174, 5611, 5615), ("lib/zipper_def.ml", 174, 5611, 5663), 0), 0, Tag1 ("Zipper_def", 150)); (("Fun_left", 613), Tag1 ([(("name", 614), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Name")), "t"), 0, (0)), 100000000, 0, -379)], (0)), 100000000, 0, -378), (("lib/zipper_def.ml", 175, 5664, 5681), ("lib/zipper_def.ml", 175, 5664, 5700), 0), 0, Tag1 ("Zipper_def", 151)); (("diff", 615), 0, (Tag3 ((("state_diff", 808)), 0, (0)), 100000000, 0, -380), (("lib/zipper_def.ml", 175, 5664, 5701), ("lib/zipper_def.ml", 175, 5664, 5717), 0), 0, Tag1 ("Zipper_def", 152)); (("body", 616), 0, (Tag3 (Tag1 ((Tag2 ("M2l")), "module_expr"), 0, (0)), 100000000, 0, -381), (("lib/zipper_def.ml", 175, 5664, 5718), ("lib/zipper_def.ml", 175, 5664, 5738), 0), 0, Tag1 ("Zipper_def", 153))]), ((Tag3 ((("me", 900)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "module_type"), 0, (0)), 100000000, 0, -377)], (0)), 100000000, 0, -376)), (("lib/zipper_def.ml", 175, 5664, 5668), ("lib/zipper_def.ml", 175, 5664, 5761), 0), 0, Tag1 ("Zipper_def", 154)); (("Fun_right", 617), ([(Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 ((("Arg", 806)), "t"), [(Tag3 (Tag1 ((("Abbrevs", 894)), "module_type"), 0, (0)), 100000000, 0, -387)], (0)), 100000000, 0, -386); (Tag3 ((("state_diff", 808)), 0, (0)), 100000000, 0, -388)]), 100000000, 0, -385)], (0)), 100000000, 0, -384)]), ((Tag3 ((("me", 900)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "module_expr"), 0, (0)), 100000000, 0, -383)], (0)), 100000000, 0, -382)), (("lib/zipper_def.ml", 176, 5762, 5766), ("lib/zipper_def.ml", 178, 5828, 5857), 0), 0, Tag1 ("Zipper_def", 155)); (("Constraint_left", 618), ([(Tag3 (Tag1 ((Tag2 ("M2l")), "module_type"), 0, (0)), 100000000, 0, -391)]), ((Tag3 ((("me", 900)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "module_expr"), 0, (0)), 100000000, 0, -390)], (0)), 100000000, 0, -389)), (("lib/zipper_def.ml", 179, 5858, 5862), ("lib/zipper_def.ml", 179, 5858, 5918), 0), 0, Tag1 ("Zipper_def", 156)); (("Constraint_right", 619), ([(Tag3 (Tag1 ((("Abbrevs", 894)), "module_expr"), 0, (0)), 100000000, 0, -394)]), ((Tag3 ((("me", 900)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "module_type"), 0, (0)), 100000000, 0, -393)], (0)), 100000000, 0, -392)), (("lib/zipper_def.ml", 180, 5919, 5923), ("lib/zipper_def.ml", 180, 5919, 5976), 0), 0, Tag1 ("Zipper_def", 157)); (("Str", 620), (0), ((Tag3 ((("me", 900)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "m2l"), 0, (0)), 100000000, 0, -396)], (0)), 100000000, 0, -395)), (("lib/zipper_def.ml", 181, 5977, 5981), ("lib/zipper_def.ml", 181, 5977, 5998), 0), 0, Tag1 ("Zipper_def", 158)); (("Val", 621), (0), ((Tag3 ((("me", 900)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "minor"), 0, (0)), 100000000, 0, -399)], (0)), 100000000, 0, -398)], (0)), 100000000, 0, -397)), (("lib/zipper_def.ml", 182, 5999, 6003), ("lib/zipper_def.ml", 182, 5999, 6027), 0), 0, Tag1 ("Zipper_def", 159)); (("Extension_node", 622), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -402)]), ((Tag3 ((("me", 900)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "extension_core"), 0, (0)), 100000000, 0, -401)], (0)), 100000000, 0, -400)), (("lib/zipper_def.ml", 183, 6028, 6032), ("lib/zipper_def.ml", 183, 6028, 6081), 0), 0, Tag1 ("Zipper_def", 160)); (("Open_me_left", 623), Tag1 ([(("left", 624), 0, (Tag3 (Tag1 ((("Abbrevs", 894)), "opens"), 0, (0)), 100000000, 0, -405), (("lib/zipper_def.ml", 185, 6102, 6112), ("lib/zipper_def.ml", 185, 6102, 6124), 0), 0, Tag1 ("Zipper_def", 161)); (("right", 625), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "ext"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "S"), "t"), 0, (0)), 100000000, 0, -408)], (0)), 100000000, 0, -407)], (0)), 100000000, 0, -406), (("lib/zipper_def.ml", 186, 6125, 6135), ("lib/zipper_def.ml", 186, 6125, 6164), 0), 0, Tag1 ("Zipper_def", 162)); (("diff", 626), 0, (Tag3 ((("state_diff", 808)), 0, (0)), 100000000, 0, -409), (("lib/zipper_def.ml", 187, 6165, 6175), ("lib/zipper_def.ml", 187, 6165, 6191), 0), 0, Tag1 ("Zipper_def", 163)); (("loc", 627), 0, (Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -410), (("lib/zipper_def.ml", 188, 6192, 6202), ("lib/zipper_def.ml", 188, 6192, 6213), 0), 0, Tag1 ("Zipper_def", 164)); (("expr", 628), 0, (Tag3 (Tag1 ((Tag2 ("M2l")), "module_expr"), 0, (0)), 100000000, 0, -411), (("lib/zipper_def.ml", 189, 6214, 6224), ("lib/zipper_def.ml", 189, 6214, 6244), 0), 0, Tag1 ("Zipper_def", 165))]), ((Tag3 ((("me", 900)), [(Tag3 (Tag1 ((("Abbrevs", 894)), "path_in_context"), 0, (0)), 100000000, 0, -404)], (0)), 100000000, 0, -403)), (("lib/zipper_def.ml", 184, 6082, 6086), ("lib/zipper_def.ml", 190, 6245, 6276), 0), 0, Tag1 ("Zipper_def", 166)); (("Open_me_right", 629), Tag1 ([(("opens", 630), 0, (Tag3 (Tag1 ((("Abbrevs", 894)), "opens"), 0, (0)), 100000000, 0, -414), (("lib/zipper_def.ml", 192, 6298, 6307), ("lib/zipper_def.ml", 192, 6298, 6319), 0), 0, Tag1 ("Zipper_def", 167)); (("state", 631), 0, (Tag3 ((("state_diff", 808)), 0, (0)), 100000000, 0, -415), (("lib/zipper_def.ml", 192, 6298, 6320), ("lib/zipper_def.ml", 192, 6298, 6336), 0), 0, Tag1 ("Zipper_def", 168))]), ((Tag3 ((("me", 900)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "module_expr"), 0, (0)), 100000000, 0, -413)], (0)), 100000000, 0, -412)), (("lib/zipper_def.ml", 191, 6277, 6281), ("lib/zipper_def.ml", 192, 6298, 6359), 0), 0, Tag1 ("Zipper_def", 169))], 0), 1, 0, [63], [0], 0, 0, (("lib/zipper_def.ml", 171, 5504, 5506), ("lib/zipper_def.ml", 192, 6298, 6359), 0), 0, 0, 0, Tag1 ("Zipper_def", 147)), 1, 0); Tag1 (("mt", 901), ([((("focus")), 100000000, 0, -367)], 1, Tag1 ([(("Alias", 640), (0), ((Tag3 ((("mt", 901)), [(Tag3 (Tag1 ((("Abbrevs", 894)), "path_in_context"), 0, (0)), 100000000, 0, -335)], (0)), 100000000, 0, -334)), (("lib/zipper_def.ml", 195, 6380, 6384), ("lib/zipper_def.ml", 195, 6380, 6411), 0), 0, Tag1 ("Zipper_def", 189)); (("Ident", 641), (0), ((Tag3 ((("mt", 901)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "Expr"), "t"), 0, (0)), 100000000, 0, -337)], (0)), 100000000, 0, -336)), (("lib/zipper_def.ml", 196, 6412, 6416), ("lib/zipper_def.ml", 196, 6412, 6440), 0), 0, Tag1 ("Zipper_def", 190)); (("Sig", 642), (0), ((Tag3 ((("mt", 901)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "m2l"), 0, (0)), 100000000, 0, -339)], (0)), 100000000, 0, -338)), (("lib/zipper_def.ml", 197, 6441, 6445), ("lib/zipper_def.ml", 197, 6441, 6462), 0), 0, Tag1 ("Zipper_def", 191)); (("Fun_left", 643), Tag1 ([(("name", 644), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Name")), "t"), 0, (0)), 100000000, 0, -343)], (0)), 100000000, 0, -342), (("lib/zipper_def.ml", 198, 6463, 6480), ("lib/zipper_def.ml", 198, 6463, 6499), 0), 0, Tag1 ("Zipper_def", 192)); (("diff", 645), 0, (Tag3 ((("state_diff", 808)), 0, (0)), 100000000, 0, -344), (("lib/zipper_def.ml", 198, 6463, 6500), ("lib/zipper_def.ml", 198, 6463, 6516), 0), 0, Tag1 ("Zipper_def", 193)); (("body", 646), 0, (Tag3 (Tag1 ((Tag2 ("M2l")), "module_type"), 0, (0)), 100000000, 0, -345), (("lib/zipper_def.ml", 198, 6463, 6517), ("lib/zipper_def.ml", 198, 6463, 6537), 0), 0, Tag1 ("Zipper_def", 194))]), ((Tag3 ((("mt", 901)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "module_type"), 0, (0)), 100000000, 0, -341)], (0)), 100000000, 0, -340)), (("lib/zipper_def.ml", 198, 6463, 6467), ("lib/zipper_def.ml", 198, 6463, 6560), 0), 0, Tag1 ("Zipper_def", 195)); (("Fun_right", 647), ([(Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 ((("Arg", 806)), "t"), [(Tag3 (Tag1 ((("Abbrevs", 894)), "module_type"), 0, (0)), 100000000, 0, -351)], (0)), 100000000, 0, -350); (Tag3 ((("state_diff", 808)), 0, (0)), 100000000, 0, -352)]), 100000000, 0, -349)], (0)), 100000000, 0, -348)]), ((Tag3 ((("mt", 901)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "module_type"), 0, (0)), 100000000, 0, -347)], (0)), 100000000, 0, -346)), (("lib/zipper_def.ml", 199, 6561, 6565), ("lib/zipper_def.ml", 200, 6618, 6647), 0), 0, Tag1 ("Zipper_def", 196)); (("With_constraints", 648), Tag1 ([(("original_body", 649), 0, (Tag3 (Tag1 ((("Abbrevs", 894)), "module_type"), 0, (0)), 100000000, 0, -355), (("lib/zipper_def.ml", 202, 6674, 6682), ("lib/zipper_def.ml", 202, 6674, 6708), 0), 0, Tag1 ("Zipper_def", 197)); (("right", 650), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "with_constraint"), 0, (0)), 100000000, 0, -357)], (0)), 100000000, 0, -356), (("lib/zipper_def.ml", 203, 6709, 6717), ("lib/zipper_def.ml", 203, 6709, 6747), 0), 0, Tag1 ("Zipper_def", 198))]), ((Tag3 ((("mt", 901)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "with_constraint"), 0, (0)), 100000000, 0, -354)], (0)), 100000000, 0, -353)), (("lib/zipper_def.ml", 201, 6648, 6652), ("lib/zipper_def.ml", 205, 6756, 6789), 0), 0, Tag1 ("Zipper_def", 199)); (("With_body", 651), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "with_constraint"), 0, (0)), 100000000, 0, -361)], (0)), 100000000, 0, -360)]), ((Tag3 ((("mt", 901)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "module_type"), 0, (0)), 100000000, 0, -359)], (0)), 100000000, 0, -358)), (("lib/zipper_def.ml", 206, 6790, 6794), ("lib/zipper_def.ml", 206, 6790, 6853), 0), 0, Tag1 ("Zipper_def", 200)); (("Of", 652), (0), ((Tag3 ((("mt", 901)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "module_expr"), 0, (0)), 100000000, 0, -363)], (0)), 100000000, 0, -362)), (("lib/zipper_def.ml", 207, 6854, 6858), ("lib/zipper_def.ml", 207, 6854, 6882), 0), 0, Tag1 ("Zipper_def", 201)); (("Extension_node", 653), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -366)]), ((Tag3 ((("mt", 901)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "extension_core"), 0, (0)), 100000000, 0, -365)], (0)), 100000000, 0, -364)), (("lib/zipper_def.ml", 208, 6883, 6887), ("lib/zipper_def.ml", 208, 6883, 6936), 0), 0, Tag1 ("Zipper_def", 202))], 0), 1, 0, [63], [0], 0, 0, (("lib/zipper_def.ml", 194, 6361, 6363), ("lib/zipper_def.ml", 208, 6883, 6936), 0), 0, 0, 0, Tag1 ("Zipper_def", 188)), 1, 0); Tag1 (("with_constraint", 902), ([((("focus")), 100000000, 0, -333)], 1, Tag1 ([(("With_lhs", 655), Tag1 ([(("body", 656), 0, (Tag3 (Tag1 ((("Abbrevs", 894)), "with_constraints"), 0, (0)), 100000000, 0, -315), (("lib/zipper_def.ml", 211, 6970, 6987), ("lib/zipper_def.ml", 211, 6970, 7009), 0), 0, Tag1 ("Zipper_def", 216)); (("delete", 657), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -316), (("lib/zipper_def.ml", 211, 6970, 7010), ("lib/zipper_def.ml", 211, 6970, 7022), 0), 0, Tag1 ("Zipper_def", 217)); (("lhs", 658), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "S"), "t"), 0, (0)), 100000000, 0, -317), (("lib/zipper_def.ml", 211, 6970, 7023), ("lib/zipper_def.ml", 211, 6970, 7037), 0), 0, Tag1 ("Zipper_def", 218)); (("rhs", 659), 0, (Tag3 (Tag1 ((Tag2 ("M2l")), "with_rhs"), 0, (0)), 100000000, 0, -318), (("lib/zipper_def.ml", 211, 6970, 7038), ("lib/zipper_def.ml", 211, 6970, 7055), 0), 0, Tag1 ("Zipper_def", 219))]), ((Tag3 ((("with_constraint", 902)), [(Tag3 (Tag1 ((("Abbrevs", 894)), "path_in_context"), 0, (0)), 100000000, 0, -314)], (0)), 100000000, 0, -313)), (("lib/zipper_def.ml", 211, 6970, 6974), ("lib/zipper_def.ml", 212, 7061, 7100), 0), 0, Tag1 ("Zipper_def", 220)); (("With_type", 660), ([(Tag3 (Tag1 ((("Abbrevs", 894)), "with_constraints"), 0, (0)), 100000000, 0, -322)]), ((Tag3 ((("with_constraint", 902)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "minor"), 0, (0)), 100000000, 0, -321)], (0)), 100000000, 0, -320)], (0)), 100000000, 0, -319)), (("lib/zipper_def.ml", 213, 7101, 7105), ("lib/zipper_def.ml", 213, 7101, 7169), 0), 0, Tag1 ("Zipper_def", 221)); (("With_module", 661), Tag1 ([(("body", 662), 0, (Tag3 (Tag1 ((("Abbrevs", 894)), "with_constraints"), 0, (0)), 100000000, 0, -325), (("lib/zipper_def.ml", 214, 7170, 7190), ("lib/zipper_def.ml", 214, 7170, 7212), 0), 0, Tag1 ("Zipper_def", 222)); (("lhs", 663), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "S"), "t"), 0, (0)), 100000000, 0, -326), (("lib/zipper_def.ml", 214, 7170, 7213), ("lib/zipper_def.ml", 214, 7170, 7227), 0), 0, Tag1 ("Zipper_def", 223)); (("delete", 664), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -327), (("lib/zipper_def.ml", 214, 7170, 7228), ("lib/zipper_def.ml", 214, 7170, 7239), 0), 0, Tag1 ("Zipper_def", 224))]), ((Tag3 ((("with_constraint", 902)), [(Tag3 (Tag1 ((("Abbrevs", 894)), "path_in_context"), 0, (0)), 100000000, 0, -324)], (0)), 100000000, 0, -323)), (("lib/zipper_def.ml", 214, 7170, 7174), ("lib/zipper_def.ml", 214, 7170, 7275), 0), 0, Tag1 ("Zipper_def", 225)); (("With_module_type", 665), Tag1 ([(("body", 666), 0, (Tag3 (Tag1 ((("Abbrevs", 894)), "with_constraints"), 0, (0)), 100000000, 0, -330), (("lib/zipper_def.ml", 215, 7276, 7301), ("lib/zipper_def.ml", 215, 7276, 7323), 0), 0, Tag1 ("Zipper_def", 226)); (("lhs", 667), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "S"), "t"), 0, (0)), 100000000, 0, -331), (("lib/zipper_def.ml", 215, 7276, 7324), ("lib/zipper_def.ml", 215, 7276, 7338), 0), 0, Tag1 ("Zipper_def", 227)); (("delete", 668), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -332), (("lib/zipper_def.ml", 215, 7276, 7339), ("lib/zipper_def.ml", 215, 7276, 7350), 0), 0, Tag1 ("Zipper_def", 228))]), ((Tag3 ((("with_constraint", 902)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "module_type"), 0, (0)), 100000000, 0, -329)], (0)), 100000000, 0, -328)), (("lib/zipper_def.ml", 215, 7276, 7280), ("lib/zipper_def.ml", 215, 7276, 7386), 0), 0, Tag1 ("Zipper_def", 229))], 0), 1, 0, [63], [0], 0, 0, (("lib/zipper_def.ml", 210, 6938, 6940), ("lib/zipper_def.ml", 215, 7276, 7386), 0), 0, 0, 0, Tag1 ("Zipper_def", 215)), 1, 0); Tag1 (("ext", 903), ([((("focus")), 100000000, 0, -312)], 1, Tag1 ([(("Mod", 670), (0), ((Tag3 ((("ext", 903)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "m2l"), 0, (0)), 100000000, 0, -308)], (0)), 100000000, 0, -307)), (("lib/zipper_def.ml", 220, 7410, 7414), ("lib/zipper_def.ml", 220, 7410, 7432), 0), 0, Tag1 ("Zipper_def", 249)); (("Val", 671), (0), ((Tag3 ((("ext", 903)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "minor"), 0, (0)), 100000000, 0, -311)], (0)), 100000000, 0, -310)], (0)), 100000000, 0, -309)), (("lib/zipper_def.ml", 221, 7433, 7437), ("lib/zipper_def.ml", 221, 7433, 7462), 0), 0, Tag1 ("Zipper_def", 250))], 0), 1, 0, [63], [0], 0, 0, (("lib/zipper_def.ml", 219, 7390, 7392), ("lib/zipper_def.ml", 221, 7433, 7462), 0), 0, 1, 0, Tag1 ("Zipper_def", 248)), 1, 0); Tag1 (("elt", 904), ([((("elt")), 100000000, 0, -305); ((("from")), 100000000, 0, -306)], 2, Tag1 ([(("M2l", 673), Tag1 ([(("left", 674), 0, (Tag3 (Tag1 ((("Abbrevs", 894)), "m2l"), 0, (0)), 100000000, 0, -262), (("lib/zipper_def.ml", 224, 7490, 7502), ("lib/zipper_def.ml", 224, 7490, 7511), 0), 0, Tag1 ("Zipper_def", 252)); (("loc", 675), 0, (Tag3 (Tag1 ((Tag2 ("Uloc")), "t"), 0, (0)), 100000000, 0, -263), (("lib/zipper_def.ml", 225, 7512, 7524), ("lib/zipper_def.ml", 225, 7512, 7535), 0), 0, Tag1 ("Zipper_def", 253)); (("state", 676), 0, (Tag3 ((("state_diff", 808)), 0, (0)), 100000000, 0, -264), (("lib/zipper_def.ml", 226, 7536, 7548), ("lib/zipper_def.ml", 226, 7536, 7565), 0), 0, Tag1 ("Zipper_def", 254)); (("right", 677), 0, (Tag3 (Tag1 ((Tag2 ("M2l")), "m2l"), 0, (0)), 100000000, 0, -265), (("lib/zipper_def.ml", 227, 7566, 7578), ("lib/zipper_def.ml", 227, 7566, 7591), 0), 0, Tag1 ("Zipper_def", 255))]), ((Tag3 ((("elt", 904)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "expression"), 0, (0)), 100000000, 0, -260); (Tag3 (Tag1 ((Tag2 ("M2l")), "m2l"), 0, (0)), 100000000, 0, -261)], (0)), 100000000, 0, -259)), (("lib/zipper_def.ml", 224, 7490, 7494), ("lib/zipper_def.ml", 228, 7593, 7633), 0), 0, Tag1 ("Zipper_def", 256)); (("Expr", 678), ([(Tag3 ((("expr", 896)), [((("elt")), 100000000, 0, -267)], (0)), 100000000, 0, -269)]), ((Tag3 ((("elt", 904)), [((("elt")), 100000000, 0, -267); (Tag3 (Tag1 ((Tag2 ("M2l")), "expression"), 0, (0)), 100000000, 0, -268)], (0)), 100000000, 0, -266)), (("lib/zipper_def.ml", 229, 7634, 7638), ("lib/zipper_def.ml", 229, 7634, 7684), 0), 0, Tag1 ("Zipper_def", 257)); (("Minor", 679), ([(Tag3 ((("minor", 897)), [((("elt")), 100000000, 0, -271)], (0)), 100000000, 0, -273)]), ((Tag3 ((("elt", 904)), [((("elt")), 100000000, 0, -271); (Tag3 (Tag1 ((Tag2 ("M2l")), "minor"), 0, (0)), 100000000, 0, -272)], (0)), 100000000, 0, -270)), (("lib/zipper_def.ml", 230, 7685, 7689), ("lib/zipper_def.ml", 230, 7685, 7733), 0), 0, Tag1 ("Zipper_def", 258)); (("Minors", 680), Tag1 ([(("left", 681), 0, (Tag3 (Tag1 ((("Abbrevs", 894)), "minors"), 0, (0)), 100000000, 0, -278), (("lib/zipper_def.ml", 232, 7748, 7758), ("lib/zipper_def.ml", 232, 7748, 7771), 0), 0, Tag1 ("Zipper_def", 259)); (("right", 682), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "minor"), 0, (0)), 100000000, 0, -280)], (0)), 100000000, 0, -279), (("lib/zipper_def.ml", 232, 7748, 7772), ("lib/zipper_def.ml", 232, 7748, 7793), 0), 0, Tag1 ("Zipper_def", 260))]), ((Tag3 ((("elt", 904)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "minor"), 0, (0)), 100000000, 0, -275); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "minor"), 0, (0)), 100000000, 0, -277)], (0)), 100000000, 0, -276)], (0)), 100000000, 0, -274)), (("lib/zipper_def.ml", 231, 7734, 7738), ("lib/zipper_def.ml", 233, 7799, 7837), 0), 0, Tag1 ("Zipper_def", 261)); (("Me", 683), ([(Tag3 ((("me", 900)), [((("elt")), 100000000, 0, -282)], (0)), 100000000, 0, -284)]), ((Tag3 ((("elt", 904)), [((("elt")), 100000000, 0, -282); (Tag3 (Tag1 ((Tag2 ("M2l")), "module_expr"), 0, (0)), 100000000, 0, -283)], (0)), 100000000, 0, -281)), (("lib/zipper_def.ml", 234, 7838, 7842), ("lib/zipper_def.ml", 234, 7838, 7886), 0), 0, Tag1 ("Zipper_def", 262)); (("Mt", 684), ([(Tag3 ((("mt", 901)), [((("elt")), 100000000, 0, -286)], (0)), 100000000, 0, -288)]), ((Tag3 ((("elt", 904)), [((("elt")), 100000000, 0, -286); (Tag3 (Tag1 ((Tag2 ("M2l")), "module_type"), 0, (0)), 100000000, 0, -287)], (0)), 100000000, 0, -285)), (("lib/zipper_def.ml", 235, 7887, 7891), ("lib/zipper_def.ml", 235, 7887, 7935), 0), 0, Tag1 ("Zipper_def", 263)); (("With_constraint", 685), ([(Tag3 ((("with_constraint", 902)), [((("elt")), 100000000, 0, -290)], (0)), 100000000, 0, -292)]), ((Tag3 ((("elt", 904)), [((("elt")), 100000000, 0, -290); (Tag3 (Tag1 ((Tag2 ("M2l")), "with_constraint"), 0, (0)), 100000000, 0, -291)], (0)), 100000000, 0, -289)), (("lib/zipper_def.ml", 236, 7936, 7940), ("lib/zipper_def.ml", 236, 7936, 8014), 0), 0, Tag1 ("Zipper_def", 264)); (("Access", 686), ([(Tag3 ((("acc", 898)), 0, (0)), 100000000, 0, -296)]), ((Tag3 ((("elt", 904)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "Expr"), "t"), 0, (0)), 100000000, 0, -294); (Tag3 ((("waccess", 895)), 0, (0)), 100000000, 0, -295)], (0)), 100000000, 0, -293)), (("lib/zipper_def.ml", 237, 8015, 8019), ("lib/zipper_def.ml", 237, 8015, 8063), 0), 0, Tag1 ("Zipper_def", 265)); (("Ext", 687), ([(Tag3 ((("ext", 903)), [((("elt")), 100000000, 0, -298)], (0)), 100000000, 0, -300)]), ((Tag3 ((("elt", 904)), [((("elt")), 100000000, 0, -298); (Tag3 (Tag1 ((Tag2 ("M2l")), "extension_core"), 0, (0)), 100000000, 0, -299)], (0)), 100000000, 0, -297)), (("lib/zipper_def.ml", 238, 8064, 8068), ("lib/zipper_def.ml", 238, 8064, 8118), 0), 0, Tag1 ("Zipper_def", 266)); (("Path_expr", 688), ([(Tag3 ((("path_expr", 899)), [((("elt")), 100000000, 0, -302)], (0)), 100000000, 0, -304)]), ((Tag3 ((("elt", 904)), [((("elt")), 100000000, 0, -302); (Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "Expr"), "t"), 0, (0)), 100000000, 0, -303)], (0)), 100000000, 0, -301)), (("lib/zipper_def.ml", 239, 8119, 8123), ("lib/zipper_def.ml", 239, 8119, 8178), 0), 0, Tag1 ("Zipper_def", 267))], 0), 1, 0, [63; 63], [0; 0], 0, 0, (("lib/zipper_def.ml", 223, 7464, 7466), ("lib/zipper_def.ml", 239, 8119, 8178), 0), 0, 0, 0, Tag1 ("Zipper_def", 251)), 1, 0); Tag1 (("t", 905), ([((("f")), 100000000, 0, -258)], 1, Tag1 ([(("[]", 690), (0), ((Tag3 ((("t", 905)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "m2l"), 0, (0)), 100000000, 0, -252)], (0)), 100000000, 0, -251)), (("lib/zipper_def.ml", 242, 8194, 8198), ("lib/zipper_def.ml", 242, 8194, 8213), 0), 0, Tag1 ("Zipper_def", 281)); (("::", 691), ([(Tag3 ((("elt", 904)), [((("focus")), 100000000, 0, -254); ((("from")), 100000000, 0, -256)], (0)), 100000000, 0, -255); (Tag3 ((("t", 905)), [((("from")), 100000000, 0, -256)], (0)), 100000000, 0, -257)]), ((Tag3 ((("t", 905)), [((("focus")), 100000000, 0, -254)], (0)), 100000000, 0, -253)), (("lib/zipper_def.ml", 243, 8214, 8218), ("lib/zipper_def.ml", 243, 8214, 8266), 0), 0, Tag1 ("Zipper_def", 282))], 0), 1, 0, [63], [0], 0, 0, (("lib/zipper_def.ml", 241, 8180, 8182), ("lib/zipper_def.ml", 243, 8214, 8266), 0), 0, 0, 0, Tag1 ("Zipper_def", 280)), 1, 0); Tag1 (("zipper", 906), ([((("result")), 100000000, 0, -250)], 1, [[(("path", 693), 0, (Tag3 ((("t", 905)), [((("result")), 100000000, 0, -250)], (0)), 100000000, 0, -249), (("lib/zipper_def.ml", 245, 8268, 8294), ("lib/zipper_def.ml", 245, 8268, 8310), 0), 0, Tag1 ("Zipper_def", 284)); (("focus", 694), 0, ((("result")), 100000000, 0, -250), (("lib/zipper_def.ml", 245, 8268, 8311), ("lib/zipper_def.ml", 245, 8268, 8325), 0), 0, Tag1 ("Zipper_def", 285))]], 1, 0, [63], [0], 0, 0, (("lib/zipper_def.ml", 245, 8268, 8270), ("lib/zipper_def.ml", 245, 8268, 8327), 0), 0, 0, 0, Tag1 ("Zipper_def", 283)), 1, 0)])), 0, (("lib/zipper_def.ml", 104, 3069, 3069), ("lib/zipper_def.ml", 247, 8329, 8332), 0), Tag1 ("Zipper_def", 286)), 0)], "Zipper_def", [("Zipper_def", ("\147!\207Y\239\000\242od\135\188\211\162s~\r")); ("Zipper_skeleton", (")\231\023^\251\225On\214\161\199\019\231\219\240\148")); ("Unitname", ("\155n\201\211\249\229\028$\220J\172\018<\249\171\158")); ("Uloc", ("\172\208h 6@\178[\156\249\206\172%\133\167\239")); ("Transforms", ("\247\177\132M&\202\192\164\018Ng6Wu\007\018")); ("Support", ("YA;\029\006a\255\202R\137\181\133\184\209)\005")); ("Summary", ("\243\022s.\187>\205\012\161)\1369wh\247p")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stage", ("\224\018\196\1757\168\209wr\235\232\015z\144\206V")); ("Schematic", ("\180\179\011\178\017I\241^\235\149h\161k\b\209\142")); ("Pp", ("\167zCQ\134\167\215\2517\247\158\219\250\223.\197")); ("Pkg", ("SneaP\023\210\210\240\218\128bA\te\239")); ("Paths", ("\000\152\242H\139l\222\245\245Ndb\202P^\175")); ("Namespaced", ("%\208\253;3\161W$\236\1838K\195z\1493")); ("Name", ("4? \167\131n\184\000\214\031\017\027\153\002]^")); ("Module", ("2_s\200\188\137\247\158>\168\195\023\195\n\011V")); ("Modname", ("v\160\183\003\212\232\177\007\228-\002\145i\230\255\248")); ("M2l", ("\208\241\201a\199\212\172v;\135t\185\027\196~\029")); ("Loc", ("ax\213\152\006\175?\212%\0014\238\021S\218=")); ("Id", ("w\207`(\179n\181\161\155\252\243\195\006\139NO")); ("Fault", ("\232\144\144(K\139\181-h!\017\212@?\127\199")); ("Deps", ("%\164\252&\165z\218\221\023\182\235\223+\147\145\195")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

  end
