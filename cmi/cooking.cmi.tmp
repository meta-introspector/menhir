type abstr_inst_info
type 'a entry_map = 'a Names.Cmap.t * 'a Names.Mindmap.t
type expand_info = abstr_inst_info entry_map
type cooking_info
val empty_cooking_info : cooking_info
val make_cooking_info :
  recursive:Names.MutInd.t option ->
  expand_info ->
  Constr.named_context -> Univ.UContext.t -> cooking_info * abstr_inst_info
val names_info : cooking_info -> Names.Id.Set.t
val universe_context_of_cooking_info : cooking_info -> Univ.AbstractContext.t
val instance_of_cooking_info : cooking_info -> Constr.t array
type cooking_cache
val create_cache : cooking_info -> cooking_cache
val instance_of_cooking_cache : cooking_cache -> Constr.t array
val rel_context_of_cooking_cache : cooking_cache -> Constr.rel_context
val abstract_as_type : cooking_cache -> Constr.types -> Constr.types
val abstract_as_body : cooking_cache -> Constr.constr -> Constr.constr
val abstract_as_sort : cooking_cache -> Sorts.t -> Sorts.t
val lift_mono_univs :
  cooking_info -> Univ.ContextSet.t -> cooking_info * Univ.ContextSet.t
val lift_poly_univs :
  cooking_info ->
  Univ.AbstractContext.t -> cooking_info * int * Univ.AbstractContext.t
val lift_private_mono_univs : cooking_info -> 'a -> 'a
val lift_private_poly_univs :
  cooking_info -> Univ.ContextSet.t -> Univ.ContextSet.t
val discharge_proj_repr :
  ("DEBUG:rule", [Tag1 (("abstr_inst_info", 867), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("kernel/cooking.mli", 26, 1335, 1335), ("kernel/cooking.mli", 26, 1335, 1355), 0), 0, 0, 0, Tag1 ("Cooking", 1)), 1, 0); Tag1 (("entry_map", 868), ([((("a")), 100000000, 0, -83)], 1, 0, 1, ((Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Cmap"), "t"), [((("a")), 100000000, 0, -83)], (0)), 100000000, 0, -82); (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Mindmap"), "t"), [((("a")), 100000000, 0, -83)], (0)), 100000000, 0, -84)]), 100000000, 0, -81)), [1], [0], 0, 0, (("kernel/cooking.mli", 28, 1357, 1357), ("kernel/cooking.mli", 28, 1357, 1401), 0), 0, 0, 0, Tag1 ("Cooking", 2)), 1, 0); Tag1 (("expand_info", 869), (0, 0, 0, 1, ((Tag3 ((("entry_map", 868)), [(Tag3 ((("abstr_inst_info", 867)), 0, (0)), 100000000, 0, -80)], (0)), 100000000, 0, -79)), 0, 0, 0, 0, (("kernel/cooking.mli", 29, 1402, 1402), ("kernel/cooking.mli", 29, 1402, 1446), 0), 0, 0, 0, Tag1 ("Cooking", 3)), 1, 0); Tag1 (("cooking_info", 870), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("kernel/cooking.mli", 40, 1861, 1861), ("kernel/cooking.mli", 40, 1861, 1878), 0), 0, 0, 0, Tag1 ("Cooking", 4)), 1, 0); (("empty_cooking_info", 871), ((Tag3 ((("cooking_info", 870)), 0, (0)), 100000000, 0, -78), 0, (("kernel/cooking.mli", 42, 1880, 1880), ("kernel/cooking.mli", 42, 1880, 1917), 0), 0, Tag1 ("Cooking", 5)), 0); (("make_cooking_info", 872), ((Tag1 (("recursive"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MutInd"), "t"), 0, (0)), 100000000, 0, -77)], (0)), 100000000, 0, -76), (Tag1 (0, (Tag3 ((("expand_info", 869)), 0, (0)), 100000000, 0, -75), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "named_context"), 0, (0)), 100000000, 0, -74), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "UContext"), "t"), 0, (0)), 100000000, 0, -73), (Tag2 ([(Tag3 ((("cooking_info", 870)), 0, (0)), 100000000, 0, -71); (Tag3 ((("abstr_inst_info", 867)), 0, (0)), 100000000, 0, -72)]), 100000000, 0, -70), 0), 100000000, 0, -69), 0), 100000000, 0, -68), 0), 100000000, 0, -67), 0), 100000000, 0, -66), 0, (("kernel/cooking.mli", 45, 1948, 1948), ("kernel/cooking.mli", 46, 2016, 2084), 0), 0, Tag1 ("Cooking", 6)), 0); (("names_info", 873), ((Tag1 (0, (Tag3 ((("cooking_info", 870)), 0, (0)), 100000000, 0, -65), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -64), 0), 100000000, 0, -63), 0, (("kernel/cooking.mli", 49, 2165, 2165), ("kernel/cooking.mli", 49, 2165, 2206), 0), 0, Tag1 ("Cooking", 7)), 0); (("universe_context_of_cooking_info", 874), ((Tag1 (0, (Tag3 ((("cooking_info", 870)), 0, (0)), 100000000, 0, -62), (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "AbstractContext"), "t"), 0, (0)), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("kernel/cooking.mli", 51, 2208, 2208), ("kernel/cooking.mli", 51, 2208, 2285), 0), 0, Tag1 ("Cooking", 8)), 0); (("instance_of_cooking_info", 875), ((Tag1 (0, (Tag3 ((("cooking_info", 870)), 0, (0)), 100000000, 0, -59), (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "t"), 0, (0)), 100000000, 0, -58)], (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("kernel/cooking.mli", 53, 2287, 2287), ("kernel/cooking.mli", 53, 2287, 2348), 0), 0, Tag1 ("Cooking", 9)), 0); Tag1 (("cooking_cache", 876), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("kernel/cooking.mli", 55, 2350, 2350), ("kernel/cooking.mli", 55, 2350, 2368), 0), 0, 0, 0, Tag1 ("Cooking", 10)), 1, 0); (("create_cache", 877), ((Tag1 (0, (Tag3 ((("cooking_info", 870)), 0, (0)), 100000000, 0, -55), (Tag3 ((("cooking_cache", 876)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("kernel/cooking.mli", 57, 2370, 2370), ("kernel/cooking.mli", 57, 2370, 2418), 0), 0, Tag1 ("Cooking", 11)), 0); (("instance_of_cooking_cache", 878), ((Tag1 (0, (Tag3 ((("cooking_cache", 876)), 0, (0)), 100000000, 0, -52), (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "t"), 0, (0)), 100000000, 0, -51)], (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0, (("kernel/cooking.mli", 58, 2419, 2419), ("kernel/cooking.mli", 58, 2419, 2482), 0), 0, Tag1 ("Cooking", 12)), 0); (("rel_context_of_cooking_cache", 879), ((Tag1 (0, (Tag3 ((("cooking_cache", 876)), 0, (0)), 100000000, 0, -48), (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("kernel/cooking.mli", 59, 2483, 2483), ("kernel/cooking.mli", 59, 2483, 2546), 0), 0, Tag1 ("Cooking", 13)), 0); (("abstract_as_type", 880), ((Tag1 (0, (Tag3 ((("cooking_cache", 876)), 0, (0)), 100000000, 0, -45), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -44), (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("kernel/cooking.mli", 61, 2548, 2548), ("kernel/cooking.mli", 61, 2548, 2602), 0), 0, Tag1 ("Cooking", 14)), 0); (("abstract_as_body", 881), ((Tag1 (0, (Tag3 ((("cooking_cache", 876)), 0, (0)), 100000000, 0, -40), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -39), (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -38), 0), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("kernel/cooking.mli", 63, 2604, 2604), ("kernel/cooking.mli", 63, 2604, 2660), 0), 0, Tag1 ("Cooking", 15)), 0); (("abstract_as_sort", 882), ((Tag1 (0, (Tag3 ((("cooking_cache", 876)), 0, (0)), 100000000, 0, -35), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sorts")), "t"), 0, (0)), 100000000, 0, -34), (Tag3 (Tag1 ((Tag2 ("Sorts")), "t"), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("kernel/cooking.mli", 65, 2662, 2662), ("kernel/cooking.mli", 65, 2662, 2720), 0), 0, Tag1 ("Cooking", 16)), 0); (("lift_mono_univs", 883), ((Tag1 (0, (Tag3 ((("cooking_info", 870)), 0, (0)), 100000000, 0, -30), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "ContextSet"), "t"), 0, (0)), 100000000, 0, -29), (Tag2 ([(Tag3 ((("cooking_info", 870)), 0, (0)), 100000000, 0, -27); (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "ContextSet"), "t"), 0, (0)), 100000000, 0, -28)]), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("kernel/cooking.mli", 67, 2722, 2722), ("kernel/cooking.mli", 67, 2722, 2813), 0), 0, Tag1 ("Cooking", 17)), 0); (("lift_poly_univs", 884), ((Tag1 (0, (Tag3 ((("cooking_info", 870)), 0, (0)), 100000000, 0, -23), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "AbstractContext"), "t"), 0, (0)), 100000000, 0, -22), (Tag2 ([(Tag3 ((("cooking_info", 870)), 0, (0)), 100000000, 0, -19); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -20); (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "AbstractContext"), "t"), 0, (0)), 100000000, 0, -21)]), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("kernel/cooking.mli", 71, 2927, 2927), ("kernel/cooking.mli", 71, 2927, 3034), 0), 0, Tag1 ("Cooking", 18)), 0); (("lift_private_mono_univs", 885), ((Tag1 (0, (Tag3 ((("cooking_info", 870)), 0, (0)), 100000000, 0, -15), (Tag1 (0, ((("a")), 100000000, 0, -14), ((("a")), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("kernel/cooking.mli", 73, 3036, 3036), ("kernel/cooking.mli", 73, 3036, 3090), 0), 0, Tag1 ("Cooking", 19)), 0); (("lift_private_poly_univs", 886), ((Tag1 (0, (Tag3 ((("cooking_info", 870)), 0, (0)), 100000000, 0, -11), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "ContextSet"), "t"), 0, (0)), 100000000, 0, -10), (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "ContextSet"), "t"), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("kernel/cooking.mli", 75, 3092, 3092), ("kernel/cooking.mli", 75, 3092, 3176), 0), 0, Tag1 ("Cooking", 20)), 0); (("discharge_proj_repr", 887), ((Tag1 (0, (Tag3 ((("cooking_info", 870)), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Projection"), "Repr"), "t"), 0, (0)), 100000000, 0, -5), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Projection"), "Repr"), "t"), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("kernel/cooking.mli", 77, 3178, 3178), ("kernel/cooking.mli", 77, 3178, 3270), 0), 0, Tag1 ("Cooking", 21)), 0)], "Cooking", [("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
cooking_info -> Names.Projection.Repr.t -> Names.Projection.Repr.t
