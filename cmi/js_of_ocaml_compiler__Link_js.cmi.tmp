val link :
  output:out_channel ->
  linkall:bool ->
  mklib:bool ->
  toplevel:bool ->
  files:string list ->
  resolve_sourcemap_url:bool ->
  source_map:(string option * Js_of_ocaml_compiler.Source_map.t) option ->
  ("DEBUG:rule", [(("link", 345), ((Tag1 (("output"), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -21), (Tag1 (("linkall"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -20), (Tag1 (("mklib"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -19), (Tag1 (("toplevel"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -18), (Tag1 (("files"), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -17)], (0)), 100000000, 0, -16), (Tag1 (("resolve_sourcemap_url"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -15), (Tag1 (("source_map"), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -13)], (0)), 100000000, 0, -12); (Tag3 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Source_map"), "t"), 0, (0)), 100000000, 0, -14)]), 100000000, 0, -11)], (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("compiler/lib/link_js.mli", 20, 867, 867), ("compiler/lib/link_js.mli", 28, 1064, 1073), 0), 0, Tag1 ("Js_of_ocaml_compiler__Link_js", 3)), 0)], "Js_of_ocaml_compiler__Link_js", [("Js_of_ocaml_compiler__Link_js", ("\012\138+\231\190\197\016\241\231)\200\227A\220<\187")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Js_of_ocaml_compiler__Source_map", ("\160\134?\150\031,\209\r\197\141~vKt\204c")); ("Js_of_ocaml_compiler", ("\140\150\022\231\129$!^\139\156\170\236r\184~q")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
unit
