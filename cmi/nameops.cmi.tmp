val make_ident : string -> int option -> Names.Id.t
val repr_ident : Names.Id.t -> string * int option
val atompart_of_id : Names.Id.t -> string
val root_of_id : Names.Id.t -> Names.Id.t
val add_suffix : Names.Id.t -> string -> Names.Id.t
val add_prefix : string -> Names.Id.t -> Names.Id.t
module Subscript :
  sig
    type t
    val zero : t
    val succ : t -> t
    val compare : t -> t -> int
    val equal : t -> t -> bool
  end
val has_subscript : Names.Id.t -> bool
val get_subscript : Names.Id.t -> Names.Id.t * Subscript.t
val add_subscript : Names.Id.t -> Subscript.t -> Names.Id.t
val increment_subscript : Names.Id.t -> Names.Id.t
val forget_subscript : Names.Id.t -> Names.Id.t
module Name :
  sig
    type t = Names.Name.t = Anonymous | Name of Names.Id.t
    val mk_name : Names.Id.t -> t
    val is_anonymous : t -> bool
    val is_name : t -> bool
    val compare : t -> t -> int
    val equal : t -> t -> bool
    val hash : t -> int
    val hcons : t -> t
    val print : t -> Pp.t
    exception IsAnonymous
    val fold_left : ('a -> Names.Id.t -> 'a) -> 'a -> Names.Name.t -> 'a
    val fold_right : (Names.Id.t -> 'a -> 'a) -> Names.Name.t -> 'a -> 'a
    val iter : (Names.Id.t -> unit) -> Names.Name.t -> unit
    val map : (Names.Id.t -> Names.Id.t) -> Names.Name.t -> t
    val fold_left_map :
      ('a -> Names.Id.t -> 'a * Names.Id.t) ->
      'a -> Names.Name.t -> 'a * Names.Name.t
    val fold_right_map :
      (Names.Id.t -> 'a -> Names.Id.t * 'a) ->
      Names.Name.t -> 'a -> Names.Name.t * 'a
    val get_id : Names.Name.t -> Names.Id.t
    val pick : Names.Name.t -> Names.Name.t -> Names.Name.t
    val pick_annot :
      Names.Name.t Context.binder_annot ->
      Names.Name.t Context.binder_annot -> Names.Name.t Context.binder_annot
    val cons : Names.Name.t -> Names.Id.t list -> Names.Id.t list
    val to_option : Names.Name.t -> Names.Id.t option
  end
val pr_meta : Constr.metavariable -> Pp.t
("DEBUG:rule", [(("make_ident", 670), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -54), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -53)], (0)), 100000000, 0, -52), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -51), 0), 100000000, 0, -50), 0), 100000000, 0, -49), 0, (("engine/nameops.mli", 15, 718, 718), ("engine/nameops.mli", 15, 718, 763), 0), 0, Tag1 ("Nameops", 0)), 0); (("repr_ident", 671), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -48), (Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -45); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -47)], (0)), 100000000, 0, -46)]), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("engine/nameops.mli", 16, 764, 764), ("engine/nameops.mli", 16, 764, 808), 0), 0, Tag1 ("Nameops", 1)), 0); (("atompart_of_id", 672), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -42), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("engine/nameops.mli", 18, 810, 810), ("engine/nameops.mli", 18, 810, 845), 0), 0, Tag1 ("Nameops", 2)), 0); (("root_of_id", 673), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -39), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -38), 0), 100000000, 0, -37), 0, (("engine/nameops.mli", 20, 878, 878), ("engine/nameops.mli", 20, 878, 907), 0), 0, Tag1 ("Nameops", 3)), 0); (("add_suffix", 674), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -36), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -35), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -34), 0), 100000000, 0, -33), 0), 100000000, 0, -32), 0, (("engine/nameops.mli", 22, 948, 948), ("engine/nameops.mli", 22, 948, 987), 0), 0, Tag1 ("Nameops", 4)), 0); (("add_prefix", 675), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -31), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -30), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("engine/nameops.mli", 23, 988, 988), ("engine/nameops.mli", 23, 988, 1027), 0), 0, Tag1 ("Nameops", 5)), 0); Tag3 (("Subscript", 676), 0, (Tag1 ([Tag1 (("t", 685), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("engine/nameops.mli", 29, 1140, 1142), ("engine/nameops.mli", 29, 1140, 1148), 0), 0, 0, 0, Tag1 ("Nameops", 6)), 1, 0); (("zero", 686), ((Tag3 ((("t", 685)), 0, (0)), 100000000, 0, -68), 0, (("engine/nameops.mli", 32, 1226, 1228), ("engine/nameops.mli", 32, 1226, 1240), 0), 0, Tag1 ("Nameops", 7)), 0); (("succ", 687), ((Tag1 (0, (Tag3 ((("t", 685)), 0, (0)), 100000000, 0, -67), (Tag3 ((("t", 685)), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("engine/nameops.mli", 35, 1267, 1269), ("engine/nameops.mli", 35, 1267, 1286), 0), 0, Tag1 ("Nameops", 8)), 0); (("compare", 688), ((Tag1 (0, (Tag3 ((("t", 685)), 0, (0)), 100000000, 0, -64), (Tag1 (0, (Tag3 ((("t", 685)), 0, (0)), 100000000, 0, -63), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("engine/nameops.mli", 48, 1607, 1609), ("engine/nameops.mli", 48, 1607, 1636), 0), 0, Tag1 ("Nameops", 9)), 0); (("equal", 689), ((Tag1 (0, (Tag3 ((("t", 685)), 0, (0)), 100000000, 0, -59), (Tag1 (0, (Tag3 ((("t", 685)), 0, (0)), 100000000, 0, -58), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0), 100000000, 0, -55), 0, (("engine/nameops.mli", 51, 1667, 1669), ("engine/nameops.mli", 51, 1667, 1695), 0), 0, Tag1 ("Nameops", 10)), 0)]), 0, (("engine/nameops.mli", 27, 1117, 1117), ("engine/nameops.mli", 53, 1697, 1700), 0), Tag1 ("Nameops", 11)), 0, 0); (("has_subscript", 677), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -26), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("engine/nameops.mli", 55, 1702, 1702), ("engine/nameops.mli", 55, 1702, 1740), 0), 0, Tag1 ("Nameops", 12)), 0); (("get_subscript", 678), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -23), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -21); (Tag3 (Tag1 ((("Subscript", 676)), "t"), 0, (0)), 100000000, 0, -22)]), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("engine/nameops.mli", 57, 1742, 1742), ("engine/nameops.mli", 57, 1742, 1788), 0), 0, Tag1 ("Nameops", 13)), 0); (("add_subscript", 679), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -18), (Tag1 (0, (Tag3 (Tag1 ((("Subscript", 676)), "t"), 0, (0)), 100000000, 0, -17), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("engine/nameops.mli", 60, 1851, 1851), ("engine/nameops.mli", 60, 1851, 1898), 0), 0, Tag1 ("Nameops", 14)), 0); (("increment_subscript", 680), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -13), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("engine/nameops.mli", 63, 1947, 1947), ("engine/nameops.mli", 63, 1947, 1985), 0), 0, Tag1 ("Nameops", 15)), 0); (("forget_subscript", 681), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -10), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("engine/nameops.mli", 86, 2380, 2380), ("engine/nameops.mli", 86, 2380, 2418), 0), 0, Tag1 ("Nameops", 16)), 0); Tag3 (("Name", 682), 0, (Tag1 ([Tag1 (("t", 690), (0, 0, Tag1 ([(("Anonymous", 939), (0), 0, (("kernel/names.mli", 86, 2979, 2990), ("kernel/names.mli", 86, 2979, 2999), 0), 0, Tag1 ("Names", 22)); (("Name", 940), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -179)]), 0, (("kernel/names.mli", 87, 3032, 3041), ("kernel/names.mli", 87, 3032, 3055), 0), 0, Tag1 ("Names", 23))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -178)), 0, 0, 0, 0, (("kernel/names.mli", 86, 2979, 2981), ("kernel/names.mli", 87, 3032, 3055), 0), 0, 0, 0, Tag1 ("Names", 21)), 1, 0); (("mk_name", 691), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -177), (Tag3 ((("t", 690)), 0, (0)), 100000000, 0, -176), 0), 100000000, 0, -175), 0, (("kernel/names.mli", 89, 3090, 3092), ("kernel/names.mli", 89, 3090, 3115), 0), 0, Tag1 ("Names", 24)), 0); (("is_anonymous", 692), ((Tag1 (0, (Tag3 ((("t", 690)), 0, (0)), 100000000, 0, -174), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -173), 0), 100000000, 0, -172), 0, (("kernel/names.mli", 92, 3138, 3140), ("kernel/names.mli", 92, 3138, 3168), 0), 0, Tag1 ("Names", 25)), 0); (("is_name", 693), ((Tag1 (0, (Tag3 ((("t", 690)), 0, (0)), 100000000, 0, -171), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -170), 0), 100000000, 0, -169), 0, (("kernel/names.mli", 95, 3226, 3228), ("kernel/names.mli", 95, 3226, 3251), 0), 0, Tag1 ("Names", 26)), 0); (("compare", 694), ((Tag1 (0, (Tag3 ((("t", 690)), 0, (0)), 100000000, 0, -168), (Tag1 (0, (Tag3 ((("t", 690)), 0, (0)), 100000000, 0, -167), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -166), 0), 100000000, 0, -165), 0), 100000000, 0, -164), 0, (("kernel/names.mli", 98, 3306, 3308), ("kernel/names.mli", 98, 3306, 3335), 0), 0, Tag1 ("Names", 27)), 0); (("equal", 695), ((Tag1 (0, (Tag3 ((("t", 690)), 0, (0)), 100000000, 0, -163), (Tag1 (0, (Tag3 ((("t", 690)), 0, (0)), 100000000, 0, -162), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -161), 0), 100000000, 0, -160), 0), 100000000, 0, -159), 0, (("kernel/names.mli", 101, 3369, 3371), ("kernel/names.mli", 101, 3369, 3397), 0), 0, Tag1 ("Names", 28)), 0); (("hash", 696), ((Tag1 (0, (Tag3 ((("t", 690)), 0, (0)), 100000000, 0, -158), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -157), 0), 100000000, 0, -156), 0, (("kernel/names.mli", 104, 3429, 3431), ("kernel/names.mli", 104, 3429, 3450), 0), 0, Tag1 ("Names", 29)), 0); (("hcons", 697), ((Tag1 (0, (Tag3 ((("t", 690)), 0, (0)), 100000000, 0, -155), (Tag3 ((("t", 690)), 0, (0)), 100000000, 0, -154), 0), 100000000, 0, -153), 0, (("kernel/names.mli", 107, 3478, 3480), ("kernel/names.mli", 107, 3478, 3498), 0), 0, Tag1 ("Names", 30)), 0); (("print", 698), ((Tag1 (0, (Tag3 ((("t", 690)), 0, (0)), 100000000, 0, -152), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -151), 0), 100000000, 0, -150), 0, (("kernel/names.mli", 110, 3533, 3535), ("kernel/names.mli", 110, 3533, 3556), 0), 0, Tag1 ("Names", 31)), 0); Tag2 (("IsAnonymous", 699), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Nameops", 17)), 2, 0); (("fold_left", 700), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -145), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -149), ((("a")), 100000000, 0, -145), 0), 100000000, 0, -148), 0), 100000000, 0, -147), (Tag1 (0, ((("a")), 100000000, 0, -145), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -146), ((("a")), 100000000, 0, -145), 0), 100000000, 0, -144), 0), 100000000, 0, -143), 0), 100000000, 0, -142), 0, (("engine/nameops.mli", 94, 2520, 2522), ("engine/nameops.mli", 94, 2520, 2578), 0), 0, Tag1 ("Nameops", 18)), 0); (("fold_right", 701), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -141), (Tag1 (0, ((("a")), 100000000, 0, -137), ((("a")), 100000000, 0, -137), 0), 100000000, 0, -140), 0), 100000000, 0, -139), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -138), (Tag1 (0, ((("a")), 100000000, 0, -137), ((("a")), 100000000, 0, -137), 0), 100000000, 0, -136), 0), 100000000, 0, -135), 0), 100000000, 0, -134), 0, (("engine/nameops.mli", 97, 2661, 2663), ("engine/nameops.mli", 97, 2661, 2720), 0), 0, Tag1 ("Nameops", 19)), 0); (("iter", 702), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -133), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -132), 0), 100000000, 0, -131), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -130), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -129), 0), 100000000, 0, -128), 0), 100000000, 0, -127), 0, (("engine/nameops.mli", 100, 2804, 2806), ("engine/nameops.mli", 100, 2804, 2849), 0), 0, Tag1 ("Nameops", 20)), 0); (("map", 703), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -126), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -125), 0), 100000000, 0, -124), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -123), (Tag3 ((("t", 690)), 0, (0)), 100000000, 0, -122), 0), 100000000, 0, -121), 0), 100000000, 0, -120), 0, (("engine/nameops.mli", 103, 2929, 2931), ("engine/nameops.mli", 103, 2929, 2970), 0), 0, Tag1 ("Nameops", 21)), 0); (("fold_left_map", 704), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -112), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -119), (Tag2 ([((("a")), 100000000, 0, -112); (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -118)]), 100000000, 0, -117), 0), 100000000, 0, -116), 0), 100000000, 0, -115), (Tag1 (0, ((("a")), 100000000, 0, -112), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -114), (Tag2 ([((("a")), 100000000, 0, -112); (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -113)]), 100000000, 0, -111), 0), 100000000, 0, -110), 0), 100000000, 0, -109), 0), 100000000, 0, -108), 0, (("engine/nameops.mli", 106, 3070, 3072), ("engine/nameops.mli", 106, 3070, 3148), 0), 0, Tag1 ("Nameops", 22)), 0); (("fold_right_map", 705), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -107), (Tag1 (0, ((("a")), 100000000, 0, -101), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -106); ((("a")), 100000000, 0, -101)]), 100000000, 0, -105), 0), 100000000, 0, -104), 0), 100000000, 0, -103), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -102), (Tag1 (0, ((("a")), 100000000, 0, -101), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -100); ((("a")), 100000000, 0, -101)]), 100000000, 0, -99), 0), 100000000, 0, -98), 0), 100000000, 0, -97), 0), 100000000, 0, -96), 0, (("engine/nameops.mli", 110, 3287, 3289), ("engine/nameops.mli", 110, 3287, 3366), 0), 0, Tag1 ("Nameops", 23)), 0); (("get_id", 706), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -95), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -94), 0), 100000000, 0, -93), 0, (("engine/nameops.mli", 114, 3506, 3508), ("engine/nameops.mli", 114, 3506, 3535), 0), 0, Tag1 ("Nameops", 24)), 0); (("pick", 707), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -92), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -91), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -90), 0), 100000000, 0, -89), 0), 100000000, 0, -88), 0, (("engine/nameops.mli", 118, 3621, 3623), ("engine/nameops.mli", 118, 3621, 3660), 0), 0, Tag1 ("Nameops", 25)), 0); (("pick_annot", 708), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -87)], (0)), 100000000, 0, -86), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -85)], (0)), 100000000, 0, -84), (Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -83)], (0)), 100000000, 0, -82), 0), 100000000, 0, -81), 0), 100000000, 0, -80), 0, (("engine/nameops.mli", 122, 3779, 3781), ("engine/nameops.mli", 123, 3860, 3891), 0), 0, Tag1 ("Nameops", 26)), 0); (("cons", 709), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -79), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -78)], (0)), 100000000, 0, -77), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -76)], (0)), 100000000, 0, -75), 0), 100000000, 0, -74), 0), 100000000, 0, -73), 0, (("engine/nameops.mli", 125, 3893, 3895), ("engine/nameops.mli", 125, 3893, 3938), 0), 0, Tag1 ("Nameops", 27)), 0); (("to_option", 710), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -72), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -71)], (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0, (("engine/nameops.mli", 128, 4017, 4019), ("engine/nameops.mli", 128, 4017, 4056), 0), 0, Tag1 ("Nameops", 28)), 0)]), 0, (("engine/nameops.mli", 88, 2420, 2420), ("engine/nameops.mli", 131, 4138, 4141), 0), Tag1 ("Nameops", 29)), 0, 0); (("pr_meta", 683), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "metavariable"), 0, (0)), 100000000, 0, -7), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("engine/nameops.mli", 134, 4164, 4164), ("engine/nameops.mli", 134, 4164, 4205), 0), 0, Tag1 ("Nameops", 31)), 0); (("string_of_meta", 684), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "metavariable"), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("engine/nameops.mli", 135, 4206, 4206), ("engine/nameops.mli", 135, 4206, 4256), 0), 0, Tag1 ("Nameops", 32)), 0)], "Nameops", [("Nameops", ("q\t\255R\144`\138I\012\028QB\183\157\169d")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
val string_of_meta : Constr.metavariable -> string
