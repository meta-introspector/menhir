type t = {
  packages : string list;
  directories : string list;
  flags : string list;
  plainsource : bool;
  debug_findlib : bool;
  verbose : bool;
}
val empty : t
val rev : t -> t
val add_directories : string list -> t -> t
val add_packages : string list -> t -> t
val add_flags : string list -> t -> t
val set_plainsource : bool -> t -> t
val set_debug_findlib : bool -> t -> t("DEBUG:rule", [Tag1 (("t", 639), (0, 0, [[(("packages", 539), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -40)], (0)), 100000000, 0, -39), (("dyncompile/options.ml", 2, 11, 15), ("dyncompile/options.ml", 2, 11, 38), 0), 0, Tag1 ("Dyncompile__Options", 1)); (("directories", 540), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -42)], (0)), 100000000, 0, -41), (("dyncompile/options.ml", 3, 39, 43), ("dyncompile/options.ml", 3, 39, 69), 0), 0, Tag1 ("Dyncompile__Options", 2)); (("flags", 541), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -44)], (0)), 100000000, 0, -43), (("dyncompile/options.ml", 4, 70, 74), ("dyncompile/options.ml", 4, 70, 94), 0), 0, Tag1 ("Dyncompile__Options", 3)); (("plainsource", 542), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -45), (("dyncompile/options.ml", 5, 95, 99), ("dyncompile/options.ml", 5, 95, 118), 0), 0, Tag1 ("Dyncompile__Options", 4)); (("debug_findlib", 543), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -46), (("dyncompile/options.ml", 6, 119, 123), ("dyncompile/options.ml", 6, 119, 144), 0), 0, Tag1 ("Dyncompile__Options", 5)); (("verbose", 544), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -47), (("dyncompile/options.ml", 7, 145, 149), ("dyncompile/options.ml", 7, 145, 164), 0), 0, Tag1 ("Dyncompile__Options", 6))]], 1, 0, 0, 0, 0, 0, (("dyncompile/options.ml", 1, 0, 0), ("dyncompile/options.ml", 8, 165, 168), 0), 0, 0, 0, Tag1 ("Dyncompile__Options", 0)), 1, 0); (("empty", 640), ((Tag3 ((("t", 639)), 0, (0)), 100000000, 0, -38), 0, (("dyncompile/options.ml", 10, 170, 174), ("dyncompile/options.ml", 10, 170, 179), 0), 0, Tag1 ("Dyncompile__Options", 7)), 0); (("rev", 641), ((Tag1 (0, (Tag3 ((("t", 639)), 0, (0)), 100000000, 0, -37), (Tag3 ((("t", 639)), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("dyncompile/options.ml", 19, 305, 309), ("dyncompile/options.ml", 19, 305, 312), 0), 0, Tag1 ("Dyncompile__Options", 8)), 0); (("add_directories", 642), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -34)], (0)), 100000000, 0, -33), (Tag1 (0, (Tag3 ((("t", 639)), 0, (0)), 100000000, 0, -32), (Tag3 ((("t", 639)), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("dyncompile/options.ml", 25, 468, 472), ("dyncompile/options.ml", 25, 468, 487), 0), 0, Tag1 ("Dyncompile__Options", 10)), 0); (("add_packages", 643), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -28)], (0)), 100000000, 0, -27), (Tag1 (0, (Tag3 ((("t", 639)), 0, (0)), 100000000, 0, -26), (Tag3 ((("t", 639)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("dyncompile/options.ml", 29, 596, 600), ("dyncompile/options.ml", 29, 596, 612), 0), 0, Tag1 ("Dyncompile__Options", 13)), 0); (("add_flags", 644), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -22)], (0)), 100000000, 0, -21), (Tag1 (0, (Tag3 ((("t", 639)), 0, (0)), 100000000, 0, -20), (Tag3 ((("t", 639)), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("dyncompile/options.ml", 33, 709, 713), ("dyncompile/options.ml", 33, 709, 722), 0), 0, Tag1 ("Dyncompile__Options", 16)), 0); (("set_plainsource", 645), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -16), (Tag1 (0, (Tag3 ((("t", 639)), 0, (0)), 100000000, 0, -15), (Tag3 ((("t", 639)), 0, (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("dyncompile/options.ml", 37, 807, 811), ("dyncompile/options.ml", 37, 807, 826), 0), 0, Tag1 ("Dyncompile__Options", 19)), 0); (("set_debug_findlib", 646), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -11), (Tag1 (0, (Tag3 ((("t", 639)), 0, (0)), 100000000, 0, -10), (Tag3 ((("t", 639)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("dyncompile/options.ml", 40, 881, 885), ("dyncompile/options.ml", 40, 881, 902), 0), 0, Tag1 ("Dyncompile__Options", 22)), 0); (("set_verbose", 647), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((("t", 639)), 0, (0)), 100000000, 0, -5), (Tag3 ((("t", 639)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("dyncompile/options.ml", 43, 961, 965), ("dyncompile/options.ml", 43, 961, 976), 0), 0, Tag1 ("Dyncompile__Options", 25)), 0)], "Dyncompile__Options", [("Dyncompile__Options", ("\163\139\247\166g\011\173\203\227\148\153\222\205QE\161")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stdcompat__stdlib_s", ("?\143\027\238\145\138\139e`\216P\248\156\178=\206")); ("Stdcompat__init", ("r\254q\255\217]\232\239'\192d\165\222\016\157\133")); ("Stdcompat", ("\139\1989\181:\137\230\132\240\223\206\210Y\135S\\")); ("Dyncompile__", ("L\225e(\173\007\190v\215\238\232\n\203\000\154]")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val set_verbose : bool -> t -> t
