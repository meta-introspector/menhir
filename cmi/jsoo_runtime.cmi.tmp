module Js :
  sig
    type t
    type 'a js_array = t
    type ('a, 'b) meth_callback = t
    external string : string -> t = "caml_jsstring_of_string"
    external to_string : t -> string = "caml_string_of_jsstring"
    external bytestring : string -> t = "caml_jsbytes_of_string"
    external to_bytestring : t -> string = "caml_string_of_jsbytes"
    external bool : bool -> t = "caml_js_from_bool"
    external to_bool : t -> bool = "caml_js_to_bool"
    external array : 'a array -> t = "caml_js_from_array"
    external to_array : t -> 'a array = "caml_js_to_array"
    external number_of_float : float -> t = "caml_js_from_float"
    external float_of_number : t -> float = "caml_js_to_float"
    external number_of_int32 : int32 -> t = "caml_js_from_int32"
    external int32_of_number : t -> int32 = "caml_js_to_int32"
    external number_of_nativeint : nativeint -> t = "caml_js_from_nativeint"
    external nativeint_of_number : t -> nativeint = "caml_js_to_nativeint"
    external typeof : t -> t = "caml_js_typeof"
    external instanceof : t -> t -> bool = "caml_js_instanceof"
    external debugger : unit -> unit = "debugger"
    external get : t -> t -> t = "caml_js_get"
    external set : t -> t -> t -> unit = "caml_js_set"
    external delete : t -> t -> unit = "caml_js_delete"
    external call : t -> t -> t array -> t = "caml_js_call"
    external fun_call : t -> t array -> t = "caml_js_fun_call"
    external meth_call : t -> string -> t array -> t = "caml_js_meth_call"
    external new_obj : t -> t array -> t = "caml_js_new"
    external new_obj_arr : t -> t js_array -> t = "caml_ojs_new_arr"
    external obj : (string * t) array -> t = "caml_js_object"
    external equals : t -> t -> bool = "caml_js_equals"
    external strict_equals : t -> t -> bool = "caml_js_strict_equals"
    external pure_expr : (unit -> 'a) -> 'a = "caml_js_pure_expr"
    external eval_string : string -> 'a = "caml_js_eval_string"
    external js_expr : string -> 'a = "caml_js_expr"
    external pure_js_expr : string -> 'a = "caml_pure_js_expr"
    external callback : ('b -> 'a) -> ('b, 'a) meth_callback
      = "caml_js_wrap_callback_unsafe"
    external callback_with_arguments :
      (t js_array -> 'b) -> ('c, t js_array -> 'b) meth_callback
      = "caml_js_wrap_callback_arguments"
    external callback_with_arity :
      int -> ('a -> 'b) -> ('c, 'a -> 'b) meth_callback
      = "caml_js_wrap_callback_strict"
    external meth_callback : ('b -> 'a) -> ('b, 'a) meth_callback
      = "caml_js_wrap_meth_callback_unsafe"
    external meth_callback_with_arity :
      int -> ('b -> 'a) -> ('b, 'a) meth_callback
      = "caml_js_wrap_meth_callback_strict"
    external meth_callback_with_arguments :
      ('b -> t js_array -> 'a) -> ('b, t js_array -> 'a) meth_callback
      = "caml_js_wrap_meth_callback_arguments"
    external wrap_callback : ('a -> 'b) -> ('c, 'a -> 'b) meth_callback
      = "caml_js_wrap_callback"
    external wrap_meth_callback : ('a -> 'b) -> ('a, 'b) meth_callback
      = "caml_js_wrap_meth_callback"
  end
module Sys :
  sig
    type 'a callback = 'a
    external create_file : name:string -> content:string -> unit
      = "caml_create_file"
    external read_file : name:string -> string = "caml_read_file_content"
    external set_channel_output' :
      out_channel -> (js_string:Js.t -> unit) callback -> unit
      = "caml_ml_set_channel_output"
    external set_channel_input' :
      in_channel -> (unit -> string) callback -> unit
      = "caml_ml_set_channel_refill"
    external mount_point : unit -> string list = "caml_list_mount_point"
    external mount_autoload :
      string -> (string -> string -> string option) callback -> unit
      = "caml_mount_autoload"
    external unmount : string -> unit = "caml_unmount"
    module Config :
      sig
        external use_js_string : unit -> bool
          = "caml_jsoo_flags_use_js_string"
        external effects : unit -> bool = "caml_jsoo_flags_effects"
      end
    val version : string
    val git_version : string
  end
module Error :
  sig
    type t
    val raise_ : t -> 'a
    val attach_js_backtrace : exn -> force:bool -> exn
    val of_exn : exn -> t option
    exception Exn of t
  end
module For_compatibility_only :
  sig
    external caml_js_from_string : string -> Js.t = "caml_js_from_string"
    external caml_js_to_byte_string : Js.t -> string
      = "caml_js_to_byte_string"
    external caml_js_to_string : Js.t -> string = "caml_js_to_string"
    external caml_list_of_js_array : 'a Js.js_array -> 'a list
      = "caml_list_of_js_array"
    external caml_list_to_js_array : 'a list -> 'a Js.js_array
      = "caml_list_to_js_array"
    external variable : string -> 'a = "caml_js_var"
  end
module Typed_array :
  sig
    type ('a, 'b) typedArray = Js.t
    type arrayBuffer = Js.t
    type uint8Array = Js.t
    external kind : ('a, 'b) typedArray -> ('a, 'b) Bigarray.kind
      = "caml_ba_kind_of_typed_array"
    external from_genarray :
      ('a, 'b, Bigarray.c_layout) Bigarray.Genarray.t -> ('a, 'b) typedArray
      = "caml_ba_to_typed_array"
    external to_genarray :
      ('a, 'b) typedArray -> ('a, 'b, Bigarray.c_layout) Bigarray.Genarray.t
      = "caml_ba_from_typed_array"
    module Bigstring :
      sig
        type t =
            (char, Bigarray.int8_unsigned_elt, Bigarray.c_layout)
            Bigarray.Array1.t
        external to_arrayBuffer : t -> arrayBuffer
          = "bigstring_to_array_buffer"
        external to_uint8Array : t -> uint8Array = "bigstring_to_typed_array"
        external of_arrayBuffer : arrayBuffer -> t
          = "bigstring_of_array_buffer"
        external of_uint8Array : uint8Array -> t = "bigstring_of_typed_array"
      end
    external of_uint8Array : uint8Array -> string = "caml_string_of_array"
  end
module Int64 :
  sig
    external create_int64_lo_mi_hi : int -> int -> int -> Int64.t
      = "caml_int64_create_lo_mi_hi"("DEBUG:rule", [Tag3 (("Js", 630), 0, (Tag1 ([Tag1 (("t", 636), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/runtime/jsoo_runtime.ml", 2, 19, 21), ("lib/runtime/jsoo_runtime.ml", 2, 19, 27), 0), 0, 0, 0, Tag1 ("Jsoo_runtime", 0)), 1, 0); Tag1 (("js_array", 637), ([((("a")), 100000000, 0, -200)], 1, 0, 1, ((Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -199)), [0], [0], 0, 0, (("lib/runtime/jsoo_runtime.ml", 4, 29, 31), ("lib/runtime/jsoo_runtime.ml", 4, 29, 51), 0), 0, 0, 0, Tag1 ("Jsoo_runtime", 1)), 1, 0); Tag1 (("meth_callback", 638), ([((("a")), 100000000, 0, -197); ((("b")), 100000000, 0, -198)], 2, 0, 1, ((Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -196)), [0; 0], [0; 0], 0, 0, (("lib/runtime/jsoo_runtime.ml", 6, 53, 55), ("lib/runtime/jsoo_runtime.ml", 6, 53, 86), 0), 0, 0, 0, Tag1 ("Jsoo_runtime", 2)), 1, 0); (("string", 639), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -195), (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -194), 0), 100000000, 0, -193), (("caml_jsstring_of_string", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 8, 88, 90), ("lib/runtime/jsoo_runtime.ml", 8, 88, 147), 0), 0, Tag1 ("Jsoo_runtime", 3)), 0); (("to_string", 640), ((Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -192), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -191), 0), 100000000, 0, -190), (("caml_string_of_jsstring", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 10, 149, 151), ("lib/runtime/jsoo_runtime.ml", 10, 149, 211), 0), 0, Tag1 ("Jsoo_runtime", 4)), 0); (("bytestring", 641), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -189), (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -188), 0), 100000000, 0, -187), (("caml_jsbytes_of_string", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 12, 213, 215), ("lib/runtime/jsoo_runtime.ml", 12, 213, 275), 0), 0, Tag1 ("Jsoo_runtime", 5)), 0); (("to_bytestring", 642), ((Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -186), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -185), 0), 100000000, 0, -184), (("caml_string_of_jsbytes", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 14, 277, 279), ("lib/runtime/jsoo_runtime.ml", 14, 277, 342), 0), 0, Tag1 ("Jsoo_runtime", 6)), 0); (("bool", 643), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -183), (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -182), 0), 100000000, 0, -181), (("caml_js_from_bool", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 16, 344, 346), ("lib/runtime/jsoo_runtime.ml", 16, 344, 393), 0), 0, Tag1 ("Jsoo_runtime", 7)), 0); (("to_bool", 644), ((Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -180), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -179), 0), 100000000, 0, -178), (("caml_js_to_bool", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 18, 395, 397), ("lib/runtime/jsoo_runtime.ml", 18, 395, 445), 0), 0, Tag1 ("Jsoo_runtime", 8)), 0); (("array", 645), ((Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -177)], (0)), 100000000, 0, -176), (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -175), 0), 100000000, 0, -174), (("caml_js_from_array", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 20, 447, 449), ("lib/runtime/jsoo_runtime.ml", 20, 447, 502), 0), 0, Tag1 ("Jsoo_runtime", 9)), 0); (("to_array", 646), ((Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -173), (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -172)], (0)), 100000000, 0, -171), 0), 100000000, 0, -170), (("caml_js_to_array", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 22, 504, 506), ("lib/runtime/jsoo_runtime.ml", 22, 504, 560), 0), 0, Tag1 ("Jsoo_runtime", 10)), 0); (("number_of_float", 647), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -169), (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -168), 0), 100000000, 0, -167), (("caml_js_from_float", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 24, 562, 564), ("lib/runtime/jsoo_runtime.ml", 24, 562, 624), 0), 0, Tag1 ("Jsoo_runtime", 11)), 0); (("float_of_number", 648), ((Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -166), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -165), 0), 100000000, 0, -164), (("caml_js_to_float", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 26, 626, 628), ("lib/runtime/jsoo_runtime.ml", 26, 626, 686), 0), 0, Tag1 ("Jsoo_runtime", 12)), 0); (("number_of_int32", 649), ((Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -163), (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -162), 0), 100000000, 0, -161), (("caml_js_from_int32", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 28, 688, 690), ("lib/runtime/jsoo_runtime.ml", 28, 688, 750), 0), 0, Tag1 ("Jsoo_runtime", 13)), 0); (("int32_of_number", 650), ((Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -160), (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -159), 0), 100000000, 0, -158), (("caml_js_to_int32", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 30, 752, 754), ("lib/runtime/jsoo_runtime.ml", 30, 752, 812), 0), 0, Tag1 ("Jsoo_runtime", 14)), 0); (("number_of_nativeint", 651), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -157), (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -156), 0), 100000000, 0, -155), (("caml_js_from_nativeint", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 32, 814, 816), ("lib/runtime/jsoo_runtime.ml", 32, 814, 888), 0), 0, Tag1 ("Jsoo_runtime", 15)), 0); (("nativeint_of_number", 652), ((Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -154), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -153), 0), 100000000, 0, -152), (("caml_js_to_nativeint", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 34, 890, 892), ("lib/runtime/jsoo_runtime.ml", 34, 890, 962), 0), 0, Tag1 ("Jsoo_runtime", 16)), 0); (("typeof", 653), ((Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -151), (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -150), 0), 100000000, 0, -149), (("caml_js_typeof", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 36, 964, 966), ("lib/runtime/jsoo_runtime.ml", 36, 964, 1009), 0), 0, Tag1 ("Jsoo_runtime", 17)), 0); (("instanceof", 654), ((Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -148), (Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -147), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -146), 0), 100000000, 0, -145), 0), 100000000, 0, -144), (("caml_js_instanceof", 2, 1, "", [0; 0], 0)), (("lib/runtime/jsoo_runtime.ml", 38, 1011, 1013), ("lib/runtime/jsoo_runtime.ml", 38, 1011, 1072), 0), 0, Tag1 ("Jsoo_runtime", 18)), 0); (("debugger", 655), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -143), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -142), 0), 100000000, 0, -141), (("debugger", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 40, 1074, 1076), ("lib/runtime/jsoo_runtime.ml", 40, 1074, 1121), 0), 0, Tag1 ("Jsoo_runtime", 19)), 0); (("get", 656), ((Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -140), (Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -139), (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -138), 0), 100000000, 0, -137), 0), 100000000, 0, -136), (("caml_js_get", 2, 1, "", [0; 0], 0)), (("lib/runtime/jsoo_runtime.ml", 42, 1123, 1125), ("lib/runtime/jsoo_runtime.ml", 42, 1123, 1167), 0), 0, Tag1 ("Jsoo_runtime", 20)), 0); (("set", 657), ((Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -135), (Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -134), (Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -133), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -132), 0), 100000000, 0, -131), 0), 100000000, 0, -130), 0), 100000000, 0, -129), (("caml_js_set", 3, 1, "", [0; 0; 0], 0)), (("lib/runtime/jsoo_runtime.ml", 44, 1169, 1171), ("lib/runtime/jsoo_runtime.ml", 44, 1169, 1221), 0), 0, Tag1 ("Jsoo_runtime", 21)), 0); (("delete", 658), ((Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -128), (Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -127), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -126), 0), 100000000, 0, -125), 0), 100000000, 0, -124), (("caml_js_delete", 2, 1, "", [0; 0], 0)), (("lib/runtime/jsoo_runtime.ml", 46, 1223, 1225), ("lib/runtime/jsoo_runtime.ml", 46, 1223, 1276), 0), 0, Tag1 ("Jsoo_runtime", 22)), 0); (("call", 659), ((Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -123), (Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -122), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -121)], (0)), 100000000, 0, -120), (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -119), 0), 100000000, 0, -118), 0), 100000000, 0, -117), 0), 100000000, 0, -116), (("caml_js_call", 3, 1, "", [0; 0; 0], 0)), (("lib/runtime/jsoo_runtime.ml", 48, 1278, 1280), ("lib/runtime/jsoo_runtime.ml", 48, 1278, 1335), 0), 0, Tag1 ("Jsoo_runtime", 23)), 0); (("fun_call", 660), ((Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -115), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -114)], (0)), 100000000, 0, -113), (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -112), 0), 100000000, 0, -111), 0), 100000000, 0, -110), (("caml_js_fun_call", 2, 1, "", [0; 0], 0)), (("lib/runtime/jsoo_runtime.ml", 50, 1337, 1339), ("lib/runtime/jsoo_runtime.ml", 50, 1337, 1397), 0), 0, Tag1 ("Jsoo_runtime", 24)), 0); (("meth_call", 661), ((Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -109), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -108), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -107)], (0)), 100000000, 0, -106), (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -105), 0), 100000000, 0, -104), 0), 100000000, 0, -103), 0), 100000000, 0, -102), (("caml_js_meth_call", 3, 1, "", [0; 0; 0], 0)), (("lib/runtime/jsoo_runtime.ml", 52, 1399, 1401), ("lib/runtime/jsoo_runtime.ml", 52, 1399, 1471), 0), 0, Tag1 ("Jsoo_runtime", 25)), 0); (("new_obj", 662), ((Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -101), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -100)], (0)), 100000000, 0, -99), (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -98), 0), 100000000, 0, -97), 0), 100000000, 0, -96), (("caml_js_new", 2, 1, "", [0; 0], 0)), (("lib/runtime/jsoo_runtime.ml", 54, 1473, 1475), ("lib/runtime/jsoo_runtime.ml", 54, 1473, 1527), 0), 0, Tag1 ("Jsoo_runtime", 26)), 0); (("new_obj_arr", 663), ((Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -95), (Tag1 (0, (Tag3 ((("js_array", 637)), [(Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -94)], (0)), 100000000, 0, -93), (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -92), 0), 100000000, 0, -91), 0), 100000000, 0, -90), (("caml_ojs_new_arr", 2, 1, "", [0; 0], 0)), (("lib/runtime/jsoo_runtime.ml", 56, 1529, 1531), ("lib/runtime/jsoo_runtime.ml", 56, 1529, 1595), 0), 0, Tag1 ("Jsoo_runtime", 27)), 0); (("obj", 664), ((Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -88); (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -89)]), 100000000, 0, -87)], (0)), 100000000, 0, -86), (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -85), 0), 100000000, 0, -84), (("caml_js_object", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 58, 1597, 1599), ("lib/runtime/jsoo_runtime.ml", 58, 1597, 1656), 0), 0, Tag1 ("Jsoo_runtime", 28)), 0); (("equals", 665), ((Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -83), (Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -82), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0), 100000000, 0, -79), (("caml_js_equals", 2, 1, "", [0; 0], 0)), (("lib/runtime/jsoo_runtime.ml", 60, 1658, 1660), ("lib/runtime/jsoo_runtime.ml", 60, 1658, 1711), 0), 0, Tag1 ("Jsoo_runtime", 29)), 0); (("strict_equals", 666), ((Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -78), (Tag1 (0, (Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -77), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -76), 0), 100000000, 0, -75), 0), 100000000, 0, -74), (("caml_js_strict_equals", 2, 1, "", [0; 0], 0)), (("lib/runtime/jsoo_runtime.ml", 62, 1713, 1715), ("lib/runtime/jsoo_runtime.ml", 62, 1713, 1780), 0), 0, Tag1 ("Jsoo_runtime", 30)), 0); (("pure_expr", 667), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -73), ((("a")), 100000000, 0, -71), 0), 100000000, 0, -72), ((("a")), 100000000, 0, -71), 0), 100000000, 0, -70), (("caml_js_pure_expr", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 64, 1782, 1784), ("lib/runtime/jsoo_runtime.ml", 64, 1782, 1845), 0), 0, Tag1 ("Jsoo_runtime", 31)), 0); (("eval_string", 668), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -69), ((("a")), 100000000, 0, -68), 0), 100000000, 0, -67), (("caml_js_eval_string", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 66, 1847, 1849), ("lib/runtime/jsoo_runtime.ml", 66, 1847, 1908), 0), 0, Tag1 ("Jsoo_runtime", 32)), 0); (("js_expr", 669), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -66), ((("a")), 100000000, 0, -65), 0), 100000000, 0, -64), (("caml_js_expr", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 68, 1910, 1912), ("lib/runtime/jsoo_runtime.ml", 68, 1910, 1960), 0), 0, Tag1 ("Jsoo_runtime", 33)), 0); (("pure_js_expr", 670), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -63), ((("a")), 100000000, 0, -62), 0), 100000000, 0, -61), (("caml_pure_js_expr", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 70, 1962, 1964), ("lib/runtime/jsoo_runtime.ml", 70, 1962, 2022), 0), 0, Tag1 ("Jsoo_runtime", 34)), 0); (("callback", 671), ((Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -58), ((("a")), 100000000, 0, -59), 0), 100000000, 0, -60), (Tag3 ((("meth_callback", 638)), [((("b")), 100000000, 0, -58); ((("a")), 100000000, 0, -59)], (0)), 100000000, 0, -57), 0), 100000000, 0, -56), (("caml_js_wrap_callback_unsafe", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 72, 2024, 2026), ("lib/runtime/jsoo_runtime.ml", 73, 2083, 2119), 0), 0, Tag1 ("Jsoo_runtime", 35)), 0); (("callback_with_arguments", 672), ((Tag1 (0, (Tag1 (0, (Tag3 ((("js_array", 637)), [(Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -55)], (0)), 100000000, 0, -54), ((("b")), 100000000, 0, -50), 0), 100000000, 0, -53), (Tag3 ((("meth_callback", 638)), [((("c")), 100000000, 0, -48); (Tag1 (0, (Tag3 ((("js_array", 637)), [(Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -52)], (0)), 100000000, 0, -51), ((("b")), 100000000, 0, -50), 0), 100000000, 0, -49)], (0)), 100000000, 0, -47), 0), 100000000, 0, -46), (("caml_js_wrap_callback_arguments", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 75, 2121, 2123), ("lib/runtime/jsoo_runtime.ml", 77, 2221, 2260), 0), 0, Tag1 ("Jsoo_runtime", 36)), 0); (("callback_with_arity", 673), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -45), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -43), ((("b")), 100000000, 0, -42), 0), 100000000, 0, -44), (Tag3 ((("meth_callback", 638)), [((("c")), 100000000, 0, -40); (Tag1 (0, ((("a")), 100000000, 0, -43), ((("b")), 100000000, 0, -42), 0), 100000000, 0, -41)], (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0), 100000000, 0, -37), (("caml_js_wrap_callback_strict", 2, 1, "", [0; 0], 0)), (("lib/runtime/jsoo_runtime.ml", 79, 2262, 2264), ("lib/runtime/jsoo_runtime.ml", 80, 2345, 2381), 0), 0, Tag1 ("Jsoo_runtime", 37)), 0); (("meth_callback", 674), ((Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -34), ((("a")), 100000000, 0, -35), 0), 100000000, 0, -36), (Tag3 ((("meth_callback", 638)), [((("b")), 100000000, 0, -34); ((("a")), 100000000, 0, -35)], (0)), 100000000, 0, -33), 0), 100000000, 0, -32), (("caml_js_wrap_meth_callback_unsafe", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 82, 2383, 2385), ("lib/runtime/jsoo_runtime.ml", 83, 2447, 2488), 0), 0, Tag1 ("Jsoo_runtime", 38)), 0); (("meth_callback_with_arity", 675), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -31), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -28), ((("a")), 100000000, 0, -29), 0), 100000000, 0, -30), (Tag3 ((("meth_callback", 638)), [((("b")), 100000000, 0, -28); ((("a")), 100000000, 0, -29)], (0)), 100000000, 0, -27), 0), 100000000, 0, -26), 0), 100000000, 0, -25), (("caml_js_wrap_meth_callback_strict", 2, 1, "", [0; 0], 0)), (("lib/runtime/jsoo_runtime.ml", 85, 2490, 2492), ("lib/runtime/jsoo_runtime.ml", 86, 2572, 2613), 0), 0, Tag1 ("Jsoo_runtime", 39)), 0); (("meth_callback_with_arguments", 676), ((Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -16), (Tag1 (0, (Tag3 ((("js_array", 637)), [(Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -24)], (0)), 100000000, 0, -23), ((("a")), 100000000, 0, -18), 0), 100000000, 0, -22), 0), 100000000, 0, -21), (Tag3 ((("meth_callback", 638)), [((("b")), 100000000, 0, -16); (Tag1 (0, (Tag3 ((("js_array", 637)), [(Tag3 ((("t", 636)), 0, (0)), 100000000, 0, -20)], (0)), 100000000, 0, -19), ((("a")), 100000000, 0, -18), 0), 100000000, 0, -17)], (0)), 100000000, 0, -15), 0), 100000000, 0, -14), (("caml_js_wrap_meth_callback_arguments", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 88, 2615, 2617), ("lib/runtime/jsoo_runtime.ml", 90, 2726, 2770), 0), 0, Tag1 ("Jsoo_runtime", 40)), 0); (("wrap_callback", 677), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -12), ((("b")), 100000000, 0, -11), 0), 100000000, 0, -13), (Tag3 ((("meth_callback", 638)), [((("c")), 100000000, 0, -9); (Tag1 (0, ((("a")), 100000000, 0, -12), ((("b")), 100000000, 0, -11), 0), 100000000, 0, -10)], (0)), 100000000, 0, -8), 0), 100000000, 0, -7), (("caml_js_wrap_callback", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 92, 2772, 2774), ("lib/runtime/jsoo_runtime.ml", 93, 2842, 2871), 0), 0, Tag1 ("Jsoo_runtime", 41)), 0); (("wrap_meth_callback", 678), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -4), ((("b")), 100000000, 0, -5), 0), 100000000, 0, -6), (Tag3 ((("meth_callback", 638)), [((("a")), 100000000, 0, -4); ((("b")), 100000000, 0, -5)], (0)), 100000000, 0, -3), 0), 100000000, 0, -2), (("caml_js_wrap_meth_callback", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 95, 2873, 2875), ("lib/runtime/jsoo_runtime.ml", 96, 2942, 2976), 0), 0, Tag1 ("Jsoo_runtime", 42)), 0)]), 0, (("lib/runtime/jsoo_runtime.ml", 1, 0, 0), ("lib/runtime/jsoo_runtime.ml", 97, 2977, 2980), 0), Tag1 ("Jsoo_runtime", 43)), 0, 0); Tag3 (("Sys", 631), 0, (Tag1 ([Tag1 (("callback", 679), ([((("a")), 100000000, 0, -245)], 1, 0, 1, (((("a")), 100000000, 0, -245)), [25], [1], 0, 0, (("lib/runtime/jsoo_runtime.ml", 100, 3002, 3004), ("lib/runtime/jsoo_runtime.ml", 100, 3002, 3025), 0), 0, 0, 0, Tag1 ("Jsoo_runtime", 44)), 1, 0); (("create_file", 680), ((Tag1 (("name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -244), (Tag1 (("content"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -243), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -242), 0), 100000000, 0, -241), 0), 100000000, 0, -240), (("caml_create_file", 2, 1, "", [0; 0], 0)), (("lib/runtime/jsoo_runtime.ml", 102, 3027, 3029), ("lib/runtime/jsoo_runtime.ml", 102, 3027, 3110), 0), 0, Tag1 ("Jsoo_runtime", 45)), 0); (("read_file", 681), ((Tag1 (("name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -239), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -238), 0), 100000000, 0, -237), (("caml_read_file_content", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 104, 3112, 3114), ("lib/runtime/jsoo_runtime.ml", 104, 3112, 3183), 0), 0, Tag1 ("Jsoo_runtime", 46)), 0); (("set_channel_output'", 682), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -236), (Tag1 (0, (Tag3 ((("callback", 679)), [(Tag1 (("js_string"), (Tag3 (Tag1 ((("Js", 630)), "t"), 0, (0)), 100000000, 0, -235), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -234), 0), 100000000, 0, -233)], (0)), 100000000, 0, -232), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -231), 0), 100000000, 0, -230), 0), 100000000, 0, -229), (("caml_ml_set_channel_output", 2, 1, "", [0; 0], 0)), (("lib/runtime/jsoo_runtime.ml", 106, 3185, 3187), ("lib/runtime/jsoo_runtime.ml", 107, 3275, 3309), 0), 0, Tag1 ("Jsoo_runtime", 47)), 0); (("set_channel_input'", 683), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "in_channel"), 0, (0)), 100000000, 0, -228), (Tag1 (0, (Tag3 ((("callback", 679)), [(Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -227), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -226), 0), 100000000, 0, -225)], (0)), 100000000, 0, -224), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -223), 0), 100000000, 0, -222), 0), 100000000, 0, -221), (("caml_ml_set_channel_refill", 2, 1, "", [0; 0], 0)), (("lib/runtime/jsoo_runtime.ml", 109, 3311, 3313), ("lib/runtime/jsoo_runtime.ml", 110, 3391, 3425), 0), 0, Tag1 ("Jsoo_runtime", 48)), 0); (("mount_point", 684), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -220), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -219)], (0)), 100000000, 0, -218), 0), 100000000, 0, -217), (("caml_list_mount_point", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 112, 3427, 3429), ("lib/runtime/jsoo_runtime.ml", 112, 3427, 3497), 0), 0, Tag1 ("Jsoo_runtime", 49)), 0); (("mount_autoload", 685), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -216), (Tag1 (0, (Tag3 ((("callback", 679)), [(Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -215), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -214), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -213)], (0)), 100000000, 0, -212), 0), 100000000, 0, -211), 0), 100000000, 0, -210)], (0)), 100000000, 0, -209), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -208), 0), 100000000, 0, -207), 0), 100000000, 0, -206), (("caml_mount_autoload", 2, 1, "", [0; 0], 0)), (("lib/runtime/jsoo_runtime.ml", 114, 3499, 3501), ("lib/runtime/jsoo_runtime.ml", 115, 3590, 3617), 0), 0, Tag1 ("Jsoo_runtime", 50)), 0); (("unmount", 686), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -205), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -204), 0), 100000000, 0, -203), (("caml_unmount", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 117, 3619, 3621), ("lib/runtime/jsoo_runtime.ml", 117, 3619, 3671), 0), 0, Tag1 ("Jsoo_runtime", 51)), 0); Tag3 (("Config", 687), 0, (Tag1 ([(("use_js_string", 690), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -251), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -250), 0), 100000000, 0, -249), (("caml_jsoo_flags_use_js_string", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 120, 3698, 3702), ("lib/runtime/jsoo_runtime.ml", 120, 3698, 3773), 0), 0, Tag1 ("Jsoo_runtime", 52)), 0); (("effects", 691), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -248), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -247), 0), 100000000, 0, -246), (("caml_jsoo_flags_effects", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 122, 3775, 3779), ("lib/runtime/jsoo_runtime.ml", 122, 3775, 3838), 0), 0, Tag1 ("Jsoo_runtime", 53)), 0)]), 0, (("lib/runtime/jsoo_runtime.ml", 119, 3673, 3675), ("lib/runtime/jsoo_runtime.ml", 123, 3839, 3844), 0), Tag1 ("Jsoo_runtime", 54)), 0, 0); (("version", 688), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -202), 0, (("lib/runtime/jsoo_runtime.ml", 125, 3846, 3852), ("lib/runtime/jsoo_runtime.ml", 125, 3846, 3859), 0), 0, Tag1 ("Jsoo_runtime", 55)), 0); (("git_version", 689), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -201), 0, (("lib/runtime/jsoo_runtime.ml", 127, 3881, 3887), ("lib/runtime/jsoo_runtime.ml", 127, 3881, 3898), 0), 0, Tag1 ("Jsoo_runtime", 56)), 0)]), 0, (("lib/runtime/jsoo_runtime.ml", 99, 2982, 2982), ("lib/runtime/jsoo_runtime.ml", 128, 3929, 3932), 0), Tag1 ("Jsoo_runtime", 57)), 0, 0); Tag3 (("Error", 632), 0, (Tag1 ([Tag1 (("t", 692), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/runtime/jsoo_runtime.ml", 131, 3953, 3955), ("lib/runtime/jsoo_runtime.ml", 131, 3953, 3961), 0), 0, 0, 0, Tag1 ("Jsoo_runtime", 63)), 1, 0); (("raise_", 693), ((Tag1 (0, (Tag3 ((("t", 692)), 0, (0)), 100000000, 0, -264), ((("a")), 100000000, 0, -263), 0), 100000000, 0, -262), 0, (("lib/runtime/jsoo_runtime.ml", 133, 3963, 3965), ("lib/runtime/jsoo_runtime.ml", 133, 3963, 3985), 0), 0, Tag1 ("Jsoo_runtime", 64)), 0); (("attach_js_backtrace", 694), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -261), (Tag1 (("force"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -260), (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -259), 0), 100000000, 0, -258), 0), 100000000, 0, -257), 0, (("lib/runtime/jsoo_runtime.ml", 135, 3987, 3989), ("lib/runtime/jsoo_runtime.ml", 135, 3987, 4039), 0), 0, Tag1 ("Jsoo_runtime", 65)), 0); (("of_exn", 695), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -256), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 692)), 0, (0)), 100000000, 0, -255)], (0)), 100000000, 0, -254), 0), 100000000, 0, -253), 0, (("lib/runtime/jsoo_runtime.ml", 143, 4392, 4394), ("lib/runtime/jsoo_runtime.ml", 143, 4392, 4422), 0), 0, Tag1 ("Jsoo_runtime", 66)), 0); Tag2 (("Exn", 696), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((("t", 692)), 0, (0)), 100000000, 0, -252)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Jsoo_runtime", 67)), 2, 0)]), 0, (("lib/runtime/jsoo_runtime.ml", 130, 3934, 3934), ("lib/runtime/jsoo_runtime.ml", 164, 5205, 5208), 0), Tag1 ("Jsoo_runtime", 68)), 0, 0); Tag3 (("For_compatibility_only", 633), 0, (Tag1 ([(("caml_js_from_string", 697), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -284), (Tag3 (Tag1 ((("Js", 630)), "t"), 0, (0)), 100000000, 0, -283), 0), 100000000, 0, -282), (("caml_js_from_string", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 173, 5469, 5471), ("lib/runtime/jsoo_runtime.ml", 173, 5469, 5540), 0), 0, Tag1 ("Jsoo_runtime", 69)), 0); (("caml_js_to_byte_string", 698), ((Tag1 (0, (Tag3 (Tag1 ((("Js", 630)), "t"), 0, (0)), 100000000, 0, -281), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -280), 0), 100000000, 0, -279), (("caml_js_to_byte_string", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 175, 5542, 5544), ("lib/runtime/jsoo_runtime.ml", 175, 5542, 5619), 0), 0, Tag1 ("Jsoo_runtime", 70)), 0); (("caml_js_to_string", 699), ((Tag1 (0, (Tag3 (Tag1 ((("Js", 630)), "t"), 0, (0)), 100000000, 0, -278), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -277), 0), 100000000, 0, -276), (("caml_js_to_string", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 177, 5621, 5623), ("lib/runtime/jsoo_runtime.ml", 177, 5621, 5688), 0), 0, Tag1 ("Jsoo_runtime", 71)), 0); (("caml_list_of_js_array", 700), ((Tag1 (0, (Tag3 (Tag1 ((("Js", 630)), "js_array"), [((("a")), 100000000, 0, -274)], (0)), 100000000, 0, -275), (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -274)], (0)), 100000000, 0, -273), 0), 100000000, 0, -272), (("caml_list_of_js_array", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 179, 5690, 5692), ("lib/runtime/jsoo_runtime.ml", 179, 5690, 5776), 0), 0, Tag1 ("Jsoo_runtime", 72)), 0); (("caml_list_to_js_array", 701), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -270)], (0)), 100000000, 0, -271), (Tag3 (Tag1 ((("Js", 630)), "js_array"), [((("a")), 100000000, 0, -270)], (0)), 100000000, 0, -269), 0), 100000000, 0, -268), (("caml_list_to_js_array", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 181, 5778, 5780), ("lib/runtime/jsoo_runtime.ml", 181, 5778, 5864), 0), 0, Tag1 ("Jsoo_runtime", 73)), 0); (("variable", 702), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -267), ((("a")), 100000000, 0, -266), 0), 100000000, 0, -265), (("caml_js_var", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 183, 5866, 5868), ("lib/runtime/jsoo_runtime.ml", 183, 5866, 5916), 0), 0, Tag1 ("Jsoo_runtime", 74)), 0)]), 0, (("lib/runtime/jsoo_runtime.ml", 168, 5239, 5239), ("lib/runtime/jsoo_runtime.ml", 184, 5917, 5920), 0), Tag1 ("Jsoo_runtime", 75)), 0, 0); Tag3 (("Typed_array", 634), 0, (Tag1 ([Tag1 (("typedArray", 703), ([((("a")), 100000000, 0, -308); ((("b")), 100000000, 0, -309)], 2, 0, 1, ((Tag3 (Tag1 ((("Js", 630)), "t"), 0, (0)), 100000000, 0, -307)), [0; 0], [0; 0], 0, 0, (("lib/runtime/jsoo_runtime.ml", 187, 5950, 5952), ("lib/runtime/jsoo_runtime.ml", 187, 5950, 5983), 0), 0, 0, 0, Tag1 ("Jsoo_runtime", 76)), 1, 0); Tag1 (("arrayBuffer", 704), (0, 0, 0, 1, ((Tag3 (Tag1 ((("Js", 630)), "t"), 0, (0)), 100000000, 0, -306)), 0, 0, 0, 0, (("lib/runtime/jsoo_runtime.ml", 189, 5985, 5987), ("lib/runtime/jsoo_runtime.ml", 189, 5985, 6010), 0), 0, 0, 0, Tag1 ("Jsoo_runtime", 77)), 1, 0); Tag1 (("uint8Array", 705), (0, 0, 0, 1, ((Tag3 (Tag1 ((("Js", 630)), "t"), 0, (0)), 100000000, 0, -305)), 0, 0, 0, 0, (("lib/runtime/jsoo_runtime.ml", 191, 6012, 6014), ("lib/runtime/jsoo_runtime.ml", 191, 6012, 6036), 0), 0, 0, 0, Tag1 ("Jsoo_runtime", 78)), 1, 0); (("kind", 706), ((Tag1 (0, (Tag3 ((("typedArray", 703)), [((("a")), 100000000, 0, -302); ((("b")), 100000000, 0, -303)], (0)), 100000000, 0, -304), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Bigarray"), "kind"), [((("a")), 100000000, 0, -302); ((("b")), 100000000, 0, -303)], (0)), 100000000, 0, -301), 0), 100000000, 0, -300), (("caml_ba_kind_of_typed_array", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 193, 6038, 6040), ("lib/runtime/jsoo_runtime.ml", 194, 6102, 6137), 0), 0, Tag1 ("Jsoo_runtime", 79)), 0); (("from_genarray", 707), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Bigarray"), "Genarray"), "t"), [((("a")), 100000000, 0, -296); ((("b")), 100000000, 0, -297); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Bigarray"), "c_layout"), 0, (0)), 100000000, 0, -299)], (0)), 100000000, 0, -298), (Tag3 ((("typedArray", 703)), [((("a")), 100000000, 0, -296); ((("b")), 100000000, 0, -297)], (0)), 100000000, 0, -295), 0), 100000000, 0, -294), (("caml_ba_to_typed_array", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 196, 6139, 6141), ("lib/runtime/jsoo_runtime.ml", 198, 6241, 6271), 0), 0, Tag1 ("Jsoo_runtime", 80)), 0); (("to_genarray", 708), ((Tag1 (0, (Tag3 ((("typedArray", 703)), [((("a")), 100000000, 0, -290); ((("b")), 100000000, 0, -291)], (0)), 100000000, 0, -293), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Bigarray"), "Genarray"), "t"), [((("a")), 100000000, 0, -290); ((("b")), 100000000, 0, -291); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Bigarray"), "c_layout"), 0, (0)), 100000000, 0, -292)], (0)), 100000000, 0, -289), 0), 100000000, 0, -288), (("caml_ba_from_typed_array", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 200, 6273, 6275), ("lib/runtime/jsoo_runtime.ml", 202, 6373, 6405), 0), 0, Tag1 ("Jsoo_runtime", 81)), 0); Tag3 (("Bigstring", 709), 0, (Tag1 ([Tag1 (("t", 711), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Bigarray"), "Array1"), "t"), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -323); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Bigarray"), "int8_unsigned_elt"), 0, (0)), 100000000, 0, -324); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Bigarray"), "c_layout"), 0, (0)), 100000000, 0, -325)], (0)), 100000000, 0, -322)), 0, 0, 0, 0, (("lib/runtime/jsoo_runtime.ml", 205, 6435, 6439), ("lib/runtime/jsoo_runtime.ml", 205, 6435, 6519), 0), 0, 0, 0, Tag1 ("Jsoo_runtime", 82)), 1, 0); (("to_arrayBuffer", 712), ((Tag1 (0, (Tag3 ((("t", 711)), 0, (0)), 100000000, 0, -321), (Tag3 ((("arrayBuffer", 704)), 0, (0)), 100000000, 0, -320), 0), 100000000, 0, -319), (("bigstring_to_array_buffer", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 207, 6521, 6525), ("lib/runtime/jsoo_runtime.ml", 207, 6521, 6597), 0), 0, Tag1 ("Jsoo_runtime", 83)), 0); (("to_uint8Array", 713), ((Tag1 (0, (Tag3 ((("t", 711)), 0, (0)), 100000000, 0, -318), (Tag3 ((("uint8Array", 705)), 0, (0)), 100000000, 0, -317), 0), 100000000, 0, -316), (("bigstring_to_typed_array", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 209, 6599, 6603), ("lib/runtime/jsoo_runtime.ml", 209, 6599, 6672), 0), 0, Tag1 ("Jsoo_runtime", 84)), 0); (("of_arrayBuffer", 714), ((Tag1 (0, (Tag3 ((("arrayBuffer", 704)), 0, (0)), 100000000, 0, -315), (Tag3 ((("t", 711)), 0, (0)), 100000000, 0, -314), 0), 100000000, 0, -313), (("bigstring_of_array_buffer", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 211, 6674, 6678), ("lib/runtime/jsoo_runtime.ml", 211, 6674, 6750), 0), 0, Tag1 ("Jsoo_runtime", 85)), 0); (("of_uint8Array", 715), ((Tag1 (0, (Tag3 ((("uint8Array", 705)), 0, (0)), 100000000, 0, -312), (Tag3 ((("t", 711)), 0, (0)), 100000000, 0, -311), 0), 100000000, 0, -310), (("bigstring_of_typed_array", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 213, 6752, 6756), ("lib/runtime/jsoo_runtime.ml", 213, 6752, 6825), 0), 0, Tag1 ("Jsoo_runtime", 86)), 0)]), 0, (("lib/runtime/jsoo_runtime.ml", 204, 6407, 6409), ("lib/runtime/jsoo_runtime.ml", 214, 6826, 6831), 0), Tag1 ("Jsoo_runtime", 87)), 0, 0); (("of_uint8Array", 710), ((Tag1 (0, (Tag3 ((("uint8Array", 705)), 0, (0)), 100000000, 0, -287), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -286), 0), 100000000, 0, -285), (("caml_string_of_array", 1, 1, "", [0], 0)), (("lib/runtime/jsoo_runtime.ml", 216, 6833, 6835), ("lib/runtime/jsoo_runtime.ml", 216, 6833, 6905), 0), 0, Tag1 ("Jsoo_runtime", 88)), 0)]), 0, (("lib/runtime/jsoo_runtime.ml", 186, 5922, 5922), ("lib/runtime/jsoo_runtime.ml", 217, 6906, 6909), 0), Tag1 ("Jsoo_runtime", 89)), 0, 0); Tag3 (("Int64", 635), 0, (Tag1 ([(("create_int64_lo_mi_hi", 716), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -332), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -331), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -330), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Int64"), "t"), 0, (0)), 100000000, 0, -329), 0), 100000000, 0, -328), 0), 100000000, 0, -327), 0), 100000000, 0, -326), (("caml_int64_create_lo_mi_hi", 3, 1, "", [0; 0; 0], 0)), (("lib/runtime/jsoo_runtime.ml", 220, 6933, 6935), ("lib/runtime/jsoo_runtime.ml", 221, 6997, 7031), 0), 0, Tag1 ("Jsoo_runtime", 90)), 0)]), 0, (("lib/runtime/jsoo_runtime.ml", 219, 6911, 6911), ("lib/runtime/jsoo_runtime.ml", 222, 7032, 7035), 0), Tag1 ("Jsoo_runtime", 91)), 0, 0)], "Jsoo_runtime", [("Jsoo_runtime", ("\243\252\016-<Pz\b\184\177\011\132U\211\194z")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Callback", ("4\215{\240e{\006?M\149\030\152\157\016\255\230")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Jsoo_runtime__Runtime_version", ("}|\n\185`\144\159\213\233\232u\199\155\250\1871")); ("Jsoo_runtime__", ("+\1810\129S\243\164\178?SiJz\223\198\012")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

  end
