type padty = Left | Right | Zeros
type int_conv =
    Int_d
  | Int_pd
  | Int_sd
  | Int_i
  | Int_pi
  | Int_si
  | Int_x
  | Int_Cx
  | Int_X
  | Int_CX
  | Int_o
  | Int_Co
  | Int_u
  | Int_Cd
  | Int_Ci
  | Int_Cu
type float_flag_conv = Float_flag_ | Float_flag_p | Float_flag_s
type float_kind_conv =
    Float_f
  | Float_e
  | Float_E
  | Float_g
  | Float_G
  | Float_F
  | Float_h
  | Float_H
  | Float_CF
type float_conv = float_flag_conv * float_kind_conv
type char_set = string
type counter = Line_counter | Char_counter | Token_counter
type ('a, 'b) padding =
    No_padding : ('a, 'a) padding
  | Lit_padding : padty * int -> ('a, 'a) padding
  | Arg_padding : padty -> (int -> 'a, 'a) padding
type pad_option = int option
type ('a, 'b) precision =
    No_precision : ('a, 'a) precision
  | Lit_precision : int -> ('a, 'a) precision
  | Arg_precision : (int -> 'a, 'a) precision
type prec_option = int option
type ('a, 'b, 'c) custom_arity =
    Custom_zero : ('a, string, 'a) custom_arity
  | Custom_succ :
      ('a, 'b, 'c) custom_arity -> ('a, 'x -> 'b, 'x -> 'c) custom_arity
type block_type = Pp_hbox | Pp_vbox | Pp_hvbox | Pp_hovbox | Pp_box | Pp_fits
type formatting_lit =
    Close_box
  | Close_tag
  | Break of string * int * int
  | FFlush
  | Force_newline
  | Flush_newline
  | Magic_size of string * int
  | Escaped_at
  | Escaped_percent
  | Scan_indic of char
type ('a, 'b, 'c, 'd, 'e, 'f) formatting_gen =
    Open_tag :
      ('a, 'b, 'c, 'd, 'e, 'f) format6 -> ('a, 'b, 'c, 'd, 'e, 'f)
                                          formatting_gen
  | Open_box :
      ('a, 'b, 'c, 'd, 'e, 'f) format6 -> ('a, 'b, 'c, 'd, 'e, 'f)
                                          formatting_gen
and ('a, 'b, 'c, 'd, 'e, 'f) fmtty =
    ('a, 'b, 'c, 'd, 'e, 'f, 'a, 'b, 'c, 'd, 'e, 'f) fmtty_rel
and ('a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel =
    Char_ty :
      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel -> 
      (char -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1, char -> 'a2, 'b2, 'c2, 'd2, 'e2,
       'f2)
      fmtty_rel
  | String_ty :
      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel -> 
      (string -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1, string -> 'a2, 'b2, 'c2, 'd2,
       'e2, 'f2)
      fmtty_rel
  | Int_ty :
      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel -> 
      (int -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1, int -> 'a2, 'b2, 'c2, 'd2, 'e2,
       'f2)
      fmtty_rel
  | Int32_ty :
      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel -> 
      (int32 -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1, int32 -> 'a2, 'b2, 'c2, 'd2,
       'e2, 'f2)
      fmtty_rel
  | Nativeint_ty :
      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel -> 
      (nativeint -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1, nativeint -> 'a2, 'b2, 'c2,
       'd2, 'e2, 'f2)
      fmtty_rel
  | Int64_ty :
      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel -> 
      (int64 -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1, int64 -> 'a2, 'b2, 'c2, 'd2,
       'e2, 'f2)
      fmtty_rel
  | Float_ty :
      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel -> 
      (float -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1, float -> 'a2, 'b2, 'c2, 'd2,
       'e2, 'f2)
      fmtty_rel
  | Bool_ty :
      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel -> 
      (bool -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1, bool -> 'a2, 'b2, 'c2, 'd2, 'e2,
       'f2)
      fmtty_rel
  | Format_arg_ty : ('g, 'h, 'i, 'j, 'k, 'l) fmtty *
      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel -> 
      (('g, 'h, 'i, 'j, 'k, 'l) format6 -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1,
       ('g, 'h, 'i, 'j, 'k, 'l) format6 -> 'a2, 'b2, 'c2, 'd2, 'e2, 'f2)
      fmtty_rel
  | Format_subst_ty :
      ('g, 'h, 'i, 'j, 'k, 'l, 'g1, 'b1, 'c1, 'j1, 'd1, 'a1) fmtty_rel *
      ('g, 'h, 'i, 'j, 'k, 'l, 'g2, 'b2, 'c2, 'j2, 'd2, 'a2) fmtty_rel *
      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel -> 
      (('g, 'h, 'i, 'j, 'k, 'l) format6 -> 'g1, 'b1, 'c1, 'j1, 'e1, 'f1,
       ('g, 'h, 'i, 'j, 'k, 'l) format6 -> 'g2, 'b2, 'c2, 'j2, 'e2, 'f2)
      fmtty_rel
  | Alpha_ty :
      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel -> 
      (('b1 -> 'x -> 'c1) -> 'x -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1,
       ('b2 -> 'x -> 'c2) -> 'x -> 'a2, 'b2, 'c2, 'd2, 'e2, 'f2)
      fmtty_rel
  | Theta_ty :
      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel -> 
      (('b1 -> 'c1) -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1, ('b2 -> 'c2) -> 'a2,
       'b2, 'c2, 'd2, 'e2, 'f2)
      fmtty_rel
  | Any_ty :
      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel -> 
      ('x -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'x -> 'a2, 'b2, 'c2, 'd2, 'e2,
       'f2)
      fmtty_rel
  | Reader_ty :
      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel -> 
      ('x -> 'a1, 'b1, 'c1, ('b1 -> 'x) -> 'd1, 'e1, 'f1, 'x -> 'a2, 'b2,
       'c2, ('b2 -> 'x) -> 'd2, 'e2, 'f2)
      fmtty_rel
  | Ignored_reader_ty :
      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel -> 
      ('a1, 'b1, 'c1, ('b1 -> 'x) -> 'd1, 'e1, 'f1, 'a2, 'b2, 'c2,
       ('b2 -> 'x) -> 'd2, 'e2, 'f2)
      fmtty_rel
  | End_of_fmtty :
      ('f1, 'b1, 'c1, 'd1, 'd1, 'f1, 'f2, 'b2, 'c2, 'd2, 'd2, 'f2) fmtty_rel
and ('a, 'b, 'c, 'd, 'e, 'f) fmt =
    Char :
      ('a, 'b, 'c, 'd, 'e, 'f) fmt -> (char -> 'a, 'b, 'c, 'd, 'e, 'f) fmt
  | Caml_char :
      ('a, 'b, 'c, 'd, 'e, 'f) fmt -> (char -> 'a, 'b, 'c, 'd, 'e, 'f) fmt
  | String : ('x, string -> 'a) padding *
      ('a, 'b, 'c, 'd, 'e, 'f) fmt -> ('x, 'b, 'c, 'd, 'e, 'f) fmt
  | Caml_string : ('x, string -> 'a) padding *
      ('a, 'b, 'c, 'd, 'e, 'f) fmt -> ('x, 'b, 'c, 'd, 'e, 'f) fmt
  | Int : int_conv * ('x, 'y) padding * ('y, int -> 'a) precision *
      ('a, 'b, 'c, 'd, 'e, 'f) fmt -> ('x, 'b, 'c, 'd, 'e, 'f) fmt
  | Int32 : int_conv * ('x, 'y) padding * ('y, int32 -> 'a) precision *
      ('a, 'b, 'c, 'd, 'e, 'f) fmt -> ('x, 'b, 'c, 'd, 'e, 'f) fmt
  | Nativeint : int_conv * ('x, 'y) padding *
      ('y, nativeint -> 'a) precision *
      ('a, 'b, 'c, 'd, 'e, 'f) fmt -> ('x, 'b, 'c, 'd, 'e, 'f) fmt
  | Int64 : int_conv * ('x, 'y) padding * ('y, int64 -> 'a) precision *
      ('a, 'b, 'c, 'd, 'e, 'f) fmt -> ('x, 'b, 'c, 'd, 'e, 'f) fmt
  | Float : float_conv * ('x, 'y) padding * ('y, float -> 'a) precision *
      ('a, 'b, 'c, 'd, 'e, 'f) fmt -> ('x, 'b, 'c, 'd, 'e, 'f) fmt
  | Bool : ('x, bool -> 'a) padding *
      ('a, 'b, 'c, 'd, 'e, 'f) fmt -> ('x, 'b, 'c, 'd, 'e, 'f) fmt
  | Flush : ('a, 'b, 'c, 'd, 'e, 'f) fmt -> ('a, 'b, 'c, 'd, 'e, 'f) fmt
  | String_literal : string *
      ('a, 'b, 'c, 'd, 'e, 'f) fmt -> ('a, 'b, 'c, 'd, 'e, 'f) fmt
  | Char_literal : char *
      ('a, 'b, 'c, 'd, 'e, 'f) fmt -> ('a, 'b, 'c, 'd, 'e, 'f) fmt
  | Format_arg : pad_option * ('g, 'h, 'i, 'j, 'k, 'l) fmtty *
      ('a, 'b, 'c, 'd, 'e, 'f) fmt -> (('g, 'h, 'i, 'j, 'k, 'l) format6 -> 'a,
                                       'b, 'c, 'd, 'e, 'f)
                                      fmt
  | Format_subst : pad_option *
      ('g, 'h, 'i, 'j, 'k, 'l, 'g2, 'b, 'c, 'j2, 'd, 'a) fmtty_rel *
      ('a, 'b, 'c, 'd, 'e, 'f) fmt -> (('g, 'h, 'i, 'j, 'k, 'l) format6 ->
                                       'g2, 'b, 'c, 'j2, 'e, 'f)
                                      fmt
  | Alpha :
      ('a, 'b, 'c, 'd, 'e, 'f) fmt -> (('b -> 'x -> 'c) -> 'x -> 'a, 'b, 'c,
                                       'd, 'e, 'f)
                                      fmt
  | Theta :
      ('a, 'b, 'c, 'd, 'e, 'f) fmt -> (('b -> 'c) -> 'a, 'b, 'c, 'd, 'e, 'f)
                                      fmt
  | Formatting_lit : formatting_lit *
      ('a, 'b, 'c, 'd, 'e, 'f) fmt -> ('a, 'b, 'c, 'd, 'e, 'f) fmt
  | Formatting_gen : ('a1, 'b, 'c, 'd1, 'e1, 'f1) formatting_gen *
      ('f1, 'b, 'c, 'e1, 'e2, 'f2) fmt -> ('a1, 'b, 'c, 'd1, 'e2, 'f2) fmt
  | Reader :
      ('a, 'b, 'c, 'd, 'e, 'f) fmt -> ('x -> 'a, 'b, 'c, ('b -> 'x) -> 'd,
                                       'e, 'f)
                                      fmt
  | Scan_char_set : pad_option * char_set *
      ('a, 'b, 'c, 'd, 'e, 'f) fmt -> (string -> 'a, 'b, 'c, 'd, 'e, 'f) fmt
  | Scan_get_counter : counter *
      ('a, 'b, 'c, 'd, 'e, 'f) fmt -> (int -> 'a, 'b, 'c, 'd, 'e, 'f) fmt
  | Scan_next_char :
      ('a, 'b, 'c, 'd, 'e, 'f) fmt -> (char -> 'a, 'b, 'c, 'd, 'e, 'f) fmt
  | Ignored_param : ('a, 'b, 'c, 'd, 'y, 'x) ignored *
      ('x, 'b, 'c, 'y, 'e, 'f) fmt -> ('a, 'b, 'c, 'd, 'e, 'f) fmt
  | Custom : ('a, 'x, 'y) custom_arity * (unit -> 'x) *
      ('a, 'b, 'c, 'd, 'e, 'f) fmt -> ('y, 'b, 'c, 'd, 'e, 'f) fmt
  | End_of_format : ('f, 'b, 'c, 'e, 'e, 'f) fmt
and ('a, 'b, 'c, 'd, 'e, 'f) ignored =
    Ignored_char : ('a, 'b, 'c, 'd, 'd, 'a) ignored
  | Ignored_caml_char : ('a, 'b, 'c, 'd, 'd, 'a) ignored
  | Ignored_string : pad_option -> ('a, 'b, 'c, 'd, 'd, 'a) ignored
  | Ignored_caml_string : pad_option -> ('a, 'b, 'c, 'd, 'd, 'a) ignored
  | Ignored_int : int_conv * pad_option -> ('a, 'b, 'c, 'd, 'd, 'a) ignored
  | Ignored_int32 : int_conv * pad_option -> ('a, 'b, 'c, 'd, 'd, 'a) ignored
  | Ignored_nativeint : int_conv *
      pad_option -> ('a, 'b, 'c, 'd, 'd, 'a) ignored
  | Ignored_int64 : int_conv * pad_option -> ('a, 'b, 'c, 'd, 'd, 'a) ignored
  | Ignored_float : pad_option *
      prec_option -> ('a, 'b, 'c, 'd, 'd, 'a) ignored
  | Ignored_bool : pad_option -> ('a, 'b, 'c, 'd, 'd, 'a) ignored
  | Ignored_format_arg : pad_option *
      ('g, 'h, 'i, 'j, 'k, 'l) fmtty -> ('a, 'b, 'c, 'd, 'd, 'a) ignored
  | Ignored_format_subst : pad_option *
      ('a, 'b, 'c, 'd, 'e, 'f) fmtty -> ('a, 'b, 'c, 'd, 'e, 'f) ignored
  | Ignored_reader : ('a, 'b, 'c, ('b -> 'x) -> 'd, 'd, 'a) ignored
  | Ignored_scan_char_set : pad_option *
      char_set -> ('a, 'b, 'c, 'd, 'd, 'a) ignored
  | Ignored_scan_get_counter : counter -> ('a, 'b, 'c, 'd, 'd, 'a) ignored
  | Ignored_scan_next_char : ('a, 'b, 'c, 'd, 'd, 'a) ignored
and ('a, 'b, 'c, 'd, 'e, 'f) format6 =
    Format of ('a, 'b, 'c, 'd, 'e, 'f) fmt * string
val concat_fmtty :
  ('g1, 'b1, 'c1, 'j1, 'd1, 'a1, 'g2, 'b2, 'c2, 'j2, 'd2, 'a2) fmtty_rel ->
  ('a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel ->
  ('g1, 'b1, 'c1, 'j1, 'e1, 'f1, 'g2, 'b2, 'c2, 'j2, 'e2, 'f2) fmtty_rel
val erase_rel :
  ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h, 'i, 'j, 'k, 'l) fmtty_rel ->
  ('a, 'b, 'c, 'd, 'e, 'f) fmtty
val concat_fmt :
  ('a, 'b, 'c, 'd, 'e, 'f) fmt ->
  ("DEBUG:rule", [Tag1 (("padty", 146), (0, 0, Tag1 ([(("Left", 5), (0), 0, (("camlinternalFormatBasics.mli", 18, 1131, 1144), ("camlinternalFormatBasics.mli", 18, 1131, 1148), 0), 0, Tag1 ("CamlinternalFormatBasics", 1)); (("Right", 6), (0), 0, (("camlinternalFormatBasics.mli", 18, 1131, 1149), ("camlinternalFormatBasics.mli", 18, 1131, 1156), 0), 0, Tag1 ("CamlinternalFormatBasics", 2)); (("Zeros", 7), (0), 0, (("camlinternalFormatBasics.mli", 18, 1131, 1157), ("camlinternalFormatBasics.mli", 18, 1131, 1164), 0), 0, Tag1 ("CamlinternalFormatBasics", 3))], 0), 1, 0, 0, 0, 0, 0, (("camlinternalFormatBasics.mli", 18, 1131, 1131), ("camlinternalFormatBasics.mli", 18, 1131, 1164), 0), 0, 1, 0, Tag1 ("CamlinternalFormatBasics", 0)), 1, 0); Tag1 (("int_conv", 147), (0, 0, Tag1 ([(("Int_d", 9), (0), 0, (("camlinternalFormatBasics.mli", 21, 1182, 1184), ("camlinternalFormatBasics.mli", 21, 1182, 1191), 0), 0, Tag1 ("CamlinternalFormatBasics", 5)); (("Int_pd", 10), (0), 0, (("camlinternalFormatBasics.mli", 21, 1182, 1192), ("camlinternalFormatBasics.mli", 21, 1182, 1200), 0), 0, Tag1 ("CamlinternalFormatBasics", 6)); (("Int_sd", 11), (0), 0, (("camlinternalFormatBasics.mli", 21, 1182, 1201), ("camlinternalFormatBasics.mli", 21, 1182, 1209), 0), 0, Tag1 ("CamlinternalFormatBasics", 7)); (("Int_i", 12), (0), 0, (("camlinternalFormatBasics.mli", 21, 1182, 1210), ("camlinternalFormatBasics.mli", 21, 1182, 1217), 0), 0, Tag1 ("CamlinternalFormatBasics", 8)); (("Int_pi", 13), (0), 0, (("camlinternalFormatBasics.mli", 21, 1182, 1218), ("camlinternalFormatBasics.mli", 21, 1182, 1226), 0), 0, Tag1 ("CamlinternalFormatBasics", 9)); (("Int_si", 14), (0), 0, (("camlinternalFormatBasics.mli", 21, 1182, 1227), ("camlinternalFormatBasics.mli", 21, 1182, 1235), 0), 0, Tag1 ("CamlinternalFormatBasics", 10)); (("Int_x", 15), (0), 0, (("camlinternalFormatBasics.mli", 22, 1236, 1238), ("camlinternalFormatBasics.mli", 22, 1236, 1245), 0), 0, Tag1 ("CamlinternalFormatBasics", 11)); (("Int_Cx", 16), (0), 0, (("camlinternalFormatBasics.mli", 22, 1236, 1246), ("camlinternalFormatBasics.mli", 22, 1236, 1254), 0), 0, Tag1 ("CamlinternalFormatBasics", 12)); (("Int_X", 17), (0), 0, (("camlinternalFormatBasics.mli", 22, 1236, 1255), ("camlinternalFormatBasics.mli", 22, 1236, 1262), 0), 0, Tag1 ("CamlinternalFormatBasics", 13)); (("Int_CX", 18), (0), 0, (("camlinternalFormatBasics.mli", 22, 1236, 1263), ("camlinternalFormatBasics.mli", 22, 1236, 1271), 0), 0, Tag1 ("CamlinternalFormatBasics", 14)); (("Int_o", 19), (0), 0, (("camlinternalFormatBasics.mli", 22, 1236, 1272), ("camlinternalFormatBasics.mli", 22, 1236, 1279), 0), 0, Tag1 ("CamlinternalFormatBasics", 15)); (("Int_Co", 20), (0), 0, (("camlinternalFormatBasics.mli", 22, 1236, 1280), ("camlinternalFormatBasics.mli", 22, 1236, 1288), 0), 0, Tag1 ("CamlinternalFormatBasics", 16)); (("Int_u", 21), (0), 0, (("camlinternalFormatBasics.mli", 22, 1236, 1289), ("camlinternalFormatBasics.mli", 22, 1236, 1296), 0), 0, Tag1 ("CamlinternalFormatBasics", 17)); (("Int_Cd", 22), (0), 0, (("camlinternalFormatBasics.mli", 23, 1297, 1299), ("camlinternalFormatBasics.mli", 23, 1297, 1307), 0), 0, Tag1 ("CamlinternalFormatBasics", 18)); (("Int_Ci", 23), (0), 0, (("camlinternalFormatBasics.mli", 23, 1297, 1308), ("camlinternalFormatBasics.mli", 23, 1297, 1316), 0), 0, Tag1 ("CamlinternalFormatBasics", 19)); (("Int_Cu", 24), (0), 0, (("camlinternalFormatBasics.mli", 23, 1297, 1317), ("camlinternalFormatBasics.mli", 23, 1297, 1325), 0), 0, Tag1 ("CamlinternalFormatBasics", 20))], 0), 1, 0, 0, 0, 0, 0, (("camlinternalFormatBasics.mli", 20, 1166, 1166), ("camlinternalFormatBasics.mli", 23, 1297, 1325), 0), 0, 1, 0, Tag1 ("CamlinternalFormatBasics", 4)), 1, 0); Tag1 (("float_flag_conv", 148), (0, 0, Tag1 ([(("Float_flag_", 26), (0), 0, (("camlinternalFormatBasics.mli", 26, 1350, 1352), ("camlinternalFormatBasics.mli", 26, 1350, 1365), 0), 0, Tag1 ("CamlinternalFormatBasics", 22)); (("Float_flag_p", 27), (0), 0, (("camlinternalFormatBasics.mli", 26, 1350, 1366), ("camlinternalFormatBasics.mli", 26, 1350, 1380), 0), 0, Tag1 ("CamlinternalFormatBasics", 23)); (("Float_flag_s", 28), (0), 0, (("camlinternalFormatBasics.mli", 26, 1350, 1381), ("camlinternalFormatBasics.mli", 26, 1350, 1395), 0), 0, Tag1 ("CamlinternalFormatBasics", 24))], 0), 1, 0, 0, 0, 0, 0, (("camlinternalFormatBasics.mli", 25, 1327, 1327), ("camlinternalFormatBasics.mli", 26, 1350, 1395), 0), 0, 1, 0, Tag1 ("CamlinternalFormatBasics", 21)), 1, 0); Tag1 (("float_kind_conv", 149), (0, 0, Tag1 ([(("Float_f", 30), (0), 0, (("camlinternalFormatBasics.mli", 28, 1419, 1421), ("camlinternalFormatBasics.mli", 28, 1419, 1430), 0), 0, Tag1 ("CamlinternalFormatBasics", 26)); (("Float_e", 31), (0), 0, (("camlinternalFormatBasics.mli", 28, 1419, 1431), ("camlinternalFormatBasics.mli", 28, 1419, 1440), 0), 0, Tag1 ("CamlinternalFormatBasics", 27)); (("Float_E", 32), (0), 0, (("camlinternalFormatBasics.mli", 28, 1419, 1441), ("camlinternalFormatBasics.mli", 28, 1419, 1450), 0), 0, Tag1 ("CamlinternalFormatBasics", 28)); (("Float_g", 33), (0), 0, (("camlinternalFormatBasics.mli", 28, 1419, 1451), ("camlinternalFormatBasics.mli", 28, 1419, 1460), 0), 0, Tag1 ("CamlinternalFormatBasics", 29)); (("Float_G", 34), (0), 0, (("camlinternalFormatBasics.mli", 28, 1419, 1461), ("camlinternalFormatBasics.mli", 28, 1419, 1470), 0), 0, Tag1 ("CamlinternalFormatBasics", 30)); (("Float_F", 35), (0), 0, (("camlinternalFormatBasics.mli", 29, 1471, 1473), ("camlinternalFormatBasics.mli", 29, 1471, 1482), 0), 0, Tag1 ("CamlinternalFormatBasics", 31)); (("Float_h", 36), (0), 0, (("camlinternalFormatBasics.mli", 29, 1471, 1483), ("camlinternalFormatBasics.mli", 29, 1471, 1492), 0), 0, Tag1 ("CamlinternalFormatBasics", 32)); (("Float_H", 37), (0), 0, (("camlinternalFormatBasics.mli", 29, 1471, 1493), ("camlinternalFormatBasics.mli", 29, 1471, 1502), 0), 0, Tag1 ("CamlinternalFormatBasics", 33)); (("Float_CF", 38), (0), 0, (("camlinternalFormatBasics.mli", 29, 1471, 1503), ("camlinternalFormatBasics.mli", 29, 1471, 1513), 0), 0, Tag1 ("CamlinternalFormatBasics", 34))], 0), 1, 0, 0, 0, 0, 0, (("camlinternalFormatBasics.mli", 27, 1396, 1396), ("camlinternalFormatBasics.mli", 29, 1471, 1513), 0), 0, 1, 0, Tag1 ("CamlinternalFormatBasics", 25)), 1, 0); Tag1 (("float_conv", 150), (0, 0, 0, 1, ((Tag2 ([(Tag3 ((("float_flag_conv", 148)), 0, (0)), 100000000, 0, -891); (Tag3 ((("float_kind_conv", 149)), 0, (0)), 100000000, 0, -892)]), 100000000, 0, -890)), 0, 0, 0, 0, (("camlinternalFormatBasics.mli", 30, 1514, 1514), ("camlinternalFormatBasics.mli", 30, 1514, 1565), 0), 0, 0, 0, Tag1 ("CamlinternalFormatBasics", 35)), 1, 0); Tag1 (("char_set", 151), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -889)), 0, 0, 0, 0, (("camlinternalFormatBasics.mli", 32, 1567, 1567), ("camlinternalFormatBasics.mli", 32, 1567, 1589), 0), 0, 0, 0, Tag1 ("CamlinternalFormatBasics", 36)), 1, 0); Tag1 (("counter", 152), (0, 0, Tag1 ([(("Line_counter", 42), (0), 0, (("camlinternalFormatBasics.mli", 34, 1591, 1606), ("camlinternalFormatBasics.mli", 34, 1591, 1618), 0), 0, Tag1 ("CamlinternalFormatBasics", 38)); (("Char_counter", 43), (0), 0, (("camlinternalFormatBasics.mli", 34, 1591, 1619), ("camlinternalFormatBasics.mli", 34, 1591, 1633), 0), 0, Tag1 ("CamlinternalFormatBasics", 39)); (("Token_counter", 44), (0), 0, (("camlinternalFormatBasics.mli", 34, 1591, 1634), ("camlinternalFormatBasics.mli", 34, 1591, 1649), 0), 0, Tag1 ("CamlinternalFormatBasics", 40))], 0), 1, 0, 0, 0, 0, 0, (("camlinternalFormatBasics.mli", 34, 1591, 1591), ("camlinternalFormatBasics.mli", 34, 1591, 1649), 0), 0, 1, 0, Tag1 ("CamlinternalFormatBasics", 37)), 1, 0); Tag1 (("padding", 153), ([((("a")), 100000000, 0, -887); ((("b")), 100000000, 0, -888)], 2, Tag1 ([(("No_padding", 46), (0), ((Tag3 ((("padding", 153)), [((("a")), 100000000, 0, -877); ((("a")), 100000000, 0, -877)], (0)), 100000000, 0, -876)), (("camlinternalFormatBasics.mli", 37, 1675, 1677), ("camlinternalFormatBasics.mli", 37, 1675, 1709), 0), 0, Tag1 ("CamlinternalFormatBasics", 42)); (("Lit_padding", 47), ([(Tag3 ((("padty", 146)), 0, (0)), 100000000, 0, -880); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -881)]), ((Tag3 ((("padding", 153)), [((("a")), 100000000, 0, -879); ((("a")), 100000000, 0, -879)], (0)), 100000000, 0, -878)), (("camlinternalFormatBasics.mli", 38, 1710, 1712), ("camlinternalFormatBasics.mli", 38, 1710, 1759), 0), 0, Tag1 ("CamlinternalFormatBasics", 43)); (("Arg_padding", 48), ([(Tag3 ((("padty", 146)), 0, (0)), 100000000, 0, -886)]), ((Tag3 ((("padding", 153)), [(Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -885), ((("a")), 100000000, 0, -884), 0), 100000000, 0, -883); ((("a")), 100000000, 0, -884)], (0)), 100000000, 0, -882)), (("camlinternalFormatBasics.mli", 39, 1760, 1762), ("camlinternalFormatBasics.mli", 39, 1760, 1810), 0), 0, Tag1 ("CamlinternalFormatBasics", 44))], 0), 1, 0, [63; 15], [0; 0], 0, 0, (("camlinternalFormatBasics.mli", 36, 1651, 1651), ("camlinternalFormatBasics.mli", 39, 1760, 1810), 0), 0, 0, 0, Tag1 ("CamlinternalFormatBasics", 41)), 1, 0); Tag1 (("pad_option", 154), (0, 0, 0, 1, ((Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -875)], (0)), 100000000, 0, -874)), 0, 0, 0, 0, (("camlinternalFormatBasics.mli", 41, 1812, 1812), ("camlinternalFormatBasics.mli", 41, 1812, 1840), 0), 0, 0, 0, Tag1 ("CamlinternalFormatBasics", 45)), 1, 0); Tag1 (("precision", 155), ([((("a")), 100000000, 0, -872); ((("b")), 100000000, 0, -873)], 2, Tag1 ([(("No_precision", 51), (0), ((Tag3 ((("precision", 155)), [((("a")), 100000000, 0, -864); ((("a")), 100000000, 0, -864)], (0)), 100000000, 0, -863)), (("camlinternalFormatBasics.mli", 44, 1868, 1870), ("camlinternalFormatBasics.mli", 44, 1868, 1905), 0), 0, Tag1 ("CamlinternalFormatBasics", 47)); (("Lit_precision", 52), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -867)]), ((Tag3 ((("precision", 155)), [((("a")), 100000000, 0, -866); ((("a")), 100000000, 0, -866)], (0)), 100000000, 0, -865)), (("camlinternalFormatBasics.mli", 45, 1906, 1908), ("camlinternalFormatBasics.mli", 45, 1906, 1951), 0), 0, Tag1 ("CamlinternalFormatBasics", 48)); (("Arg_precision", 53), (0), ((Tag3 ((("precision", 155)), [(Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -871), ((("a")), 100000000, 0, -870), 0), 100000000, 0, -869); ((("a")), 100000000, 0, -870)], (0)), 100000000, 0, -868)), (("camlinternalFormatBasics.mli", 46, 1952, 1954), ("camlinternalFormatBasics.mli", 46, 1952, 1997), 0), 0, Tag1 ("CamlinternalFormatBasics", 49))], 0), 1, 0, [63; 15], [0; 0], 0, 0, (("camlinternalFormatBasics.mli", 43, 1842, 1842), ("camlinternalFormatBasics.mli", 46, 1952, 1997), 0), 0, 0, 0, Tag1 ("CamlinternalFormatBasics", 46)), 1, 0); Tag1 (("prec_option", 156), (0, 0, 0, 1, ((Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -862)], (0)), 100000000, 0, -861)), 0, 0, 0, 0, (("camlinternalFormatBasics.mli", 48, 1999, 1999), ("camlinternalFormatBasics.mli", 48, 1999, 2028), 0), 0, 0, 0, Tag1 ("CamlinternalFormatBasics", 50)), 1, 0); Tag1 (("custom_arity", 157), ([((("a")), 100000000, 0, -858); ((("b")), 100000000, 0, -859); ((("c")), 100000000, 0, -860)], 3, Tag1 ([(("Custom_zero", 56), (0), ((Tag3 ((("custom_arity", 157)), [((("a")), 100000000, 0, -848); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -849); ((("a")), 100000000, 0, -848)], (0)), 100000000, 0, -847)), (("camlinternalFormatBasics.mli", 51, 2063, 2065), ("camlinternalFormatBasics.mli", 51, 2063, 2110), 0), 0, Tag1 ("CamlinternalFormatBasics", 52)); (("Custom_succ", 57), ([(Tag3 ((("custom_arity", 157)), [((("a")), 100000000, 0, -851); ((("b")), 100000000, 0, -853); ((("c")), 100000000, 0, -856)], (0)), 100000000, 0, -857)]), ((Tag3 ((("custom_arity", 157)), [((("a")), 100000000, 0, -851); (Tag1 (0, ((("x")), 100000000, 0, -854), ((("b")), 100000000, 0, -853), 0), 100000000, 0, -852); (Tag1 (0, ((("x")), 100000000, 0, -854), ((("c")), 100000000, 0, -856), 0), 100000000, 0, -855)], (0)), 100000000, 0, -850)), (("camlinternalFormatBasics.mli", 52, 2111, 2113), ("camlinternalFormatBasics.mli", 53, 2158, 2199), 0), 0, Tag1 ("CamlinternalFormatBasics", 53))], 0), 1, 0, [15; 63; 63], [0; 0; 0], 0, 0, (("camlinternalFormatBasics.mli", 50, 2030, 2030), ("camlinternalFormatBasics.mli", 53, 2158, 2199), 0), 0, 0, 0, Tag1 ("CamlinternalFormatBasics", 51)), 1, 0); Tag1 (("block_type", 158), (0, 0, Tag1 ([(("Pp_hbox", 59), (0), 0, (("camlinternalFormatBasics.mli", 55, 2201, 2219), ("camlinternalFormatBasics.mli", 55, 2201, 2226), 0), 0, Tag1 ("CamlinternalFormatBasics", 55)); (("Pp_vbox", 60), (0), 0, (("camlinternalFormatBasics.mli", 55, 2201, 2227), ("camlinternalFormatBasics.mli", 55, 2201, 2236), 0), 0, Tag1 ("CamlinternalFormatBasics", 56)); (("Pp_hvbox", 61), (0), 0, (("camlinternalFormatBasics.mli", 55, 2201, 2237), ("camlinternalFormatBasics.mli", 55, 2201, 2247), 0), 0, Tag1 ("CamlinternalFormatBasics", 57)); (("Pp_hovbox", 62), (0), 0, (("camlinternalFormatBasics.mli", 55, 2201, 2248), ("camlinternalFormatBasics.mli", 55, 2201, 2259), 0), 0, Tag1 ("CamlinternalFormatBasics", 58)); (("Pp_box", 63), (0), 0, (("camlinternalFormatBasics.mli", 55, 2201, 2260), ("camlinternalFormatBasics.mli", 55, 2201, 2268), 0), 0, Tag1 ("CamlinternalFormatBasics", 59)); (("Pp_fits", 64), (0), 0, (("camlinternalFormatBasics.mli", 55, 2201, 2269), ("camlinternalFormatBasics.mli", 55, 2201, 2278), 0), 0, Tag1 ("CamlinternalFormatBasics", 60))], 0), 1, 0, 0, 0, 0, 0, (("camlinternalFormatBasics.mli", 55, 2201, 2201), ("camlinternalFormatBasics.mli", 55, 2201, 2278), 0), 0, 1, 0, Tag1 ("CamlinternalFormatBasics", 54)), 1, 0); Tag1 (("formatting_lit", 159), (0, 0, Tag1 ([(("Close_box", 66), (0), 0, (("camlinternalFormatBasics.mli", 58, 2302, 2304), ("camlinternalFormatBasics.mli", 58, 2302, 2315), 0), 0, Tag1 ("CamlinternalFormatBasics", 62)); (("Close_tag", 67), (0), 0, (("camlinternalFormatBasics.mli", 59, 2316, 2318), ("camlinternalFormatBasics.mli", 59, 2316, 2329), 0), 0, Tag1 ("CamlinternalFormatBasics", 63)); (("Break", 68), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -841); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -842); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -843)]), 0, (("camlinternalFormatBasics.mli", 60, 2330, 2332), ("camlinternalFormatBasics.mli", 60, 2330, 2361), 0), 0, Tag1 ("CamlinternalFormatBasics", 64)); (("FFlush", 69), (0), 0, (("camlinternalFormatBasics.mli", 61, 2362, 2364), ("camlinternalFormatBasics.mli", 61, 2362, 2372), 0), 0, Tag1 ("CamlinternalFormatBasics", 65)); (("Force_newline", 70), (0), 0, (("camlinternalFormatBasics.mli", 62, 2373, 2375), ("camlinternalFormatBasics.mli", 62, 2373, 2390), 0), 0, Tag1 ("CamlinternalFormatBasics", 66)); (("Flush_newline", 71), (0), 0, (("camlinternalFormatBasics.mli", 63, 2391, 2393), ("camlinternalFormatBasics.mli", 63, 2391, 2408), 0), 0, Tag1 ("CamlinternalFormatBasics", 67)); (("Magic_size", 72), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -844); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -845)]), 0, (("camlinternalFormatBasics.mli", 64, 2409, 2411), ("camlinternalFormatBasics.mli", 64, 2409, 2439), 0), 0, Tag1 ("CamlinternalFormatBasics", 68)); (("Escaped_at", 73), (0), 0, (("camlinternalFormatBasics.mli", 65, 2440, 2442), ("camlinternalFormatBasics.mli", 65, 2440, 2454), 0), 0, Tag1 ("CamlinternalFormatBasics", 69)); (("Escaped_percent", 74), (0), 0, (("camlinternalFormatBasics.mli", 66, 2455, 2457), ("camlinternalFormatBasics.mli", 66, 2455, 2474), 0), 0, Tag1 ("CamlinternalFormatBasics", 70)); (("Scan_indic", 75), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -846)]), 0, (("camlinternalFormatBasics.mli", 67, 2475, 2477), ("camlinternalFormatBasics.mli", 67, 2475, 2497), 0), 0, Tag1 ("CamlinternalFormatBasics", 71))], 0), 1, 0, 0, 0, 0, 0, (("camlinternalFormatBasics.mli", 57, 2280, 2280), ("camlinternalFormatBasics.mli", 67, 2475, 2497), 0), 0, 0, 0, Tag1 ("CamlinternalFormatBasics", 61)), 1, 0); Tag1 (("formatting_gen", 160), ([((("a")), 100000000, 0, -835); ((("b")), 100000000, 0, -836); ((("c")), 100000000, 0, -837); ((("d")), 100000000, 0, -838); ((("e")), 100000000, 0, -839); ((("f")), 100000000, 0, -840)], 6, Tag1 ([(("Open_tag", 82), ([(Tag3 ((("format6", 165)), [((("a")), 100000000, 0, -820); ((("b")), 100000000, 0, -821); ((("c")), 100000000, 0, -822); ((("d")), 100000000, 0, -823); ((("e")), 100000000, 0, -824); ((("f")), 100000000, 0, -825)], (0)), 100000000, 0, -826)]), ((Tag3 ((("formatting_gen", 160)), [((("a")), 100000000, 0, -820); ((("b")), 100000000, 0, -821); ((("c")), 100000000, 0, -822); ((("d")), 100000000, 0, -823); ((("e")), 100000000, 0, -824); ((("f")), 100000000, 0, -825)], (0)), 100000000, 0, -819)), (("camlinternalFormatBasics.mli", 70, 2546, 2548), ("camlinternalFormatBasics.mli", 71, 2597, 2640), 0), 0, Tag1 ("CamlinternalFormatBasics", 78)); (("Open_box", 83), ([(Tag3 ((("format6", 165)), [((("a")), 100000000, 0, -828); ((("b")), 100000000, 0, -829); ((("c")), 100000000, 0, -830); ((("d")), 100000000, 0, -831); ((("e")), 100000000, 0, -832); ((("f")), 100000000, 0, -833)], (0)), 100000000, 0, -834)]), ((Tag3 ((("formatting_gen", 160)), [((("a")), 100000000, 0, -828); ((("b")), 100000000, 0, -829); ((("c")), 100000000, 0, -830); ((("d")), 100000000, 0, -831); ((("e")), 100000000, 0, -832); ((("f")), 100000000, 0, -833)], (0)), 100000000, 0, -827)), (("camlinternalFormatBasics.mli", 72, 2641, 2643), ("camlinternalFormatBasics.mli", 73, 2692, 2735), 0), 0, Tag1 ("CamlinternalFormatBasics", 79))], 0), 1, 0, [63; 15; 15; 63; 15; 15], [0; 0; 0; 0; 0; 0], 0, 0, (("camlinternalFormatBasics.mli", 69, 2499, 2499), ("camlinternalFormatBasics.mli", 73, 2692, 2735), 0), 0, 0, 0, Tag1 ("CamlinternalFormatBasics", 72)), 1, 0); Tag1 (("fmtty", 161), ([((("a")), 100000000, 0, -813); ((("b")), 100000000, 0, -814); ((("c")), 100000000, 0, -815); ((("d")), 100000000, 0, -816); ((("e")), 100000000, 0, -817); ((("f")), 100000000, 0, -818)], 6, 0, 1, ((Tag3 ((("fmtty_rel", 162)), [((("a")), 100000000, 0, -813); ((("b")), 100000000, 0, -814); ((("c")), 100000000, 0, -815); ((("d")), 100000000, 0, -816); ((("e")), 100000000, 0, -817); ((("f")), 100000000, 0, -818); ((("a")), 100000000, 0, -813); ((("b")), 100000000, 0, -814); ((("c")), 100000000, 0, -815); ((("d")), 100000000, 0, -816); ((("e")), 100000000, 0, -817); ((("f")), 100000000, 0, -818)], (0)), 100000000, 0, -812)), [63; 15; 15; 63; 15; 15], [0; 0; 0; 0; 0; 0], 0, 0, (("camlinternalFormatBasics.mli", 75, 2737, 2737), ("camlinternalFormatBasics.mli", 77, 2803, 2841), 0), 0, 0, 0, Tag1 ("CamlinternalFormatBasics", 73)), 2, 0); Tag1 (("fmtty_rel", 162), ([((("a1")), 100000000, 0, -800); ((("b1")), 100000000, 0, -801); ((("c1")), 100000000, 0, -802); ((("d1")), 100000000, 0, -803); ((("e1")), 100000000, 0, -804); ((("f1")), 100000000, 0, -805); ((("a2")), 100000000, 0, -806); ((("b2")), 100000000, 0, -807); ((("c2")), 100000000, 0, -808); ((("d2")), 100000000, 0, -809); ((("e2")), 100000000, 0, -810); ((("f2")), 100000000, 0, -811)], 12, Tag1 ([(("Char_ty", 84), ([(Tag3 ((("fmtty_rel", 162)), [((("a1")), 100000000, 0, -496); ((("b1")), 100000000, 0, -498); ((("c1")), 100000000, 0, -499); ((("d1")), 100000000, 0, -500); ((("e1")), 100000000, 0, -501); ((("f1")), 100000000, 0, -502); ((("a2")), 100000000, 0, -504); ((("b2")), 100000000, 0, -506); ((("c2")), 100000000, 0, -507); ((("d2")), 100000000, 0, -508); ((("e2")), 100000000, 0, -509); ((("f2")), 100000000, 0, -510)], (0)), 100000000, 0, -511)]), ((Tag3 ((("fmtty_rel", 162)), [(Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -497), ((("a1")), 100000000, 0, -496), 0), 100000000, 0, -495); ((("b1")), 100000000, 0, -498); ((("c1")), 100000000, 0, -499); ((("d1")), 100000000, 0, -500); ((("e1")), 100000000, 0, -501); ((("f1")), 100000000, 0, -502); (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -505), ((("a2")), 100000000, 0, -504), 0), 100000000, 0, -503); ((("b2")), 100000000, 0, -506); ((("c2")), 100000000, 0, -507); ((("d2")), 100000000, 0, -508); ((("e2")), 100000000, 0, -509); ((("f2")), 100000000, 0, -510)], (0)), 100000000, 0, -494)), (("camlinternalFormatBasics.mli", 80, 2922, 2922), ("camlinternalFormatBasics.mli", 84, 3118, 3170), 0), 0, Tag1 ("CamlinternalFormatBasics", 80)); (("String_ty", 85), ([(Tag3 ((("fmtty_rel", 162)), [((("a1")), 100000000, 0, -514); ((("b1")), 100000000, 0, -516); ((("c1")), 100000000, 0, -517); ((("d1")), 100000000, 0, -518); ((("e1")), 100000000, 0, -519); ((("f1")), 100000000, 0, -520); ((("a2")), 100000000, 0, -522); ((("b2")), 100000000, 0, -524); ((("c2")), 100000000, 0, -525); ((("d2")), 100000000, 0, -526); ((("e2")), 100000000, 0, -527); ((("f2")), 100000000, 0, -528)], (0)), 100000000, 0, -529)]), ((Tag3 ((("fmtty_rel", 162)), [(Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -515), ((("a1")), 100000000, 0, -514), 0), 100000000, 0, -513); ((("b1")), 100000000, 0, -516); ((("c1")), 100000000, 0, -517); ((("d1")), 100000000, 0, -518); ((("e1")), 100000000, 0, -519); ((("f1")), 100000000, 0, -520); (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -523), ((("a2")), 100000000, 0, -522), 0), 100000000, 0, -521); ((("b2")), 100000000, 0, -524); ((("c2")), 100000000, 0, -525); ((("d2")), 100000000, 0, -526); ((("e2")), 100000000, 0, -527); ((("f2")), 100000000, 0, -528)], (0)), 100000000, 0, -512)), (("camlinternalFormatBasics.mli", 85, 3171, 3171), ("camlinternalFormatBasics.mli", 89, 3369, 3423), 0), 0, Tag1 ("CamlinternalFormatBasics", 81)); (("Int_ty", 86), ([(Tag3 ((("fmtty_rel", 162)), [((("a1")), 100000000, 0, -532); ((("b1")), 100000000, 0, -534); ((("c1")), 100000000, 0, -535); ((("d1")), 100000000, 0, -536); ((("e1")), 100000000, 0, -537); ((("f1")), 100000000, 0, -538); ((("a2")), 100000000, 0, -540); ((("b2")), 100000000, 0, -542); ((("c2")), 100000000, 0, -543); ((("d2")), 100000000, 0, -544); ((("e2")), 100000000, 0, -545); ((("f2")), 100000000, 0, -546)], (0)), 100000000, 0, -547)]), ((Tag3 ((("fmtty_rel", 162)), [(Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -533), ((("a1")), 100000000, 0, -532), 0), 100000000, 0, -531); ((("b1")), 100000000, 0, -534); ((("c1")), 100000000, 0, -535); ((("d1")), 100000000, 0, -536); ((("e1")), 100000000, 0, -537); ((("f1")), 100000000, 0, -538); (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -541), ((("a2")), 100000000, 0, -540), 0), 100000000, 0, -539); ((("b2")), 100000000, 0, -542); ((("c2")), 100000000, 0, -543); ((("d2")), 100000000, 0, -544); ((("e2")), 100000000, 0, -545); ((("f2")), 100000000, 0, -546)], (0)), 100000000, 0, -530)), (("camlinternalFormatBasics.mli", 90, 3424, 3424), ("camlinternalFormatBasics.mli", 94, 3619, 3670), 0), 0, Tag1 ("CamlinternalFormatBasics", 82)); (("Int32_ty", 87), ([(Tag3 ((("fmtty_rel", 162)), [((("a1")), 100000000, 0, -550); ((("b1")), 100000000, 0, -552); ((("c1")), 100000000, 0, -553); ((("d1")), 100000000, 0, -554); ((("e1")), 100000000, 0, -555); ((("f1")), 100000000, 0, -556); ((("a2")), 100000000, 0, -558); ((("b2")), 100000000, 0, -560); ((("c2")), 100000000, 0, -561); ((("d2")), 100000000, 0, -562); ((("e2")), 100000000, 0, -563); ((("f2")), 100000000, 0, -564)], (0)), 100000000, 0, -565)]), ((Tag3 ((("fmtty_rel", 162)), [(Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -551), ((("a1")), 100000000, 0, -550), 0), 100000000, 0, -549); ((("b1")), 100000000, 0, -552); ((("c1")), 100000000, 0, -553); ((("d1")), 100000000, 0, -554); ((("e1")), 100000000, 0, -555); ((("f1")), 100000000, 0, -556); (Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -559), ((("a2")), 100000000, 0, -558), 0), 100000000, 0, -557); ((("b2")), 100000000, 0, -560); ((("c2")), 100000000, 0, -561); ((("d2")), 100000000, 0, -562); ((("e2")), 100000000, 0, -563); ((("f2")), 100000000, 0, -564)], (0)), 100000000, 0, -548)), (("camlinternalFormatBasics.mli", 95, 3671, 3671), ("camlinternalFormatBasics.mli", 99, 3868, 3921), 0), 0, Tag1 ("CamlinternalFormatBasics", 83)); (("Nativeint_ty", 88), ([(Tag3 ((("fmtty_rel", 162)), [((("a1")), 100000000, 0, -568); ((("b1")), 100000000, 0, -570); ((("c1")), 100000000, 0, -571); ((("d1")), 100000000, 0, -572); ((("e1")), 100000000, 0, -573); ((("f1")), 100000000, 0, -574); ((("a2")), 100000000, 0, -576); ((("b2")), 100000000, 0, -578); ((("c2")), 100000000, 0, -579); ((("d2")), 100000000, 0, -580); ((("e2")), 100000000, 0, -581); ((("f2")), 100000000, 0, -582)], (0)), 100000000, 0, -583)]), ((Tag3 ((("fmtty_rel", 162)), [(Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -569), ((("a1")), 100000000, 0, -568), 0), 100000000, 0, -567); ((("b1")), 100000000, 0, -570); ((("c1")), 100000000, 0, -571); ((("d1")), 100000000, 0, -572); ((("e1")), 100000000, 0, -573); ((("f1")), 100000000, 0, -574); (Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -577), ((("a2")), 100000000, 0, -576), 0), 100000000, 0, -575); ((("b2")), 100000000, 0, -578); ((("c2")), 100000000, 0, -579); ((("d2")), 100000000, 0, -580); ((("e2")), 100000000, 0, -581); ((("f2")), 100000000, 0, -582)], (0)), 100000000, 0, -566)), (("camlinternalFormatBasics.mli", 100, 3922, 3922), ("camlinternalFormatBasics.mli", 104, 4123, 4180), 0), 0, Tag1 ("CamlinternalFormatBasics", 84)); (("Int64_ty", 89), ([(Tag3 ((("fmtty_rel", 162)), [((("a1")), 100000000, 0, -586); ((("b1")), 100000000, 0, -588); ((("c1")), 100000000, 0, -589); ((("d1")), 100000000, 0, -590); ((("e1")), 100000000, 0, -591); ((("f1")), 100000000, 0, -592); ((("a2")), 100000000, 0, -594); ((("b2")), 100000000, 0, -596); ((("c2")), 100000000, 0, -597); ((("d2")), 100000000, 0, -598); ((("e2")), 100000000, 0, -599); ((("f2")), 100000000, 0, -600)], (0)), 100000000, 0, -601)]), ((Tag3 ((("fmtty_rel", 162)), [(Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -587), ((("a1")), 100000000, 0, -586), 0), 100000000, 0, -585); ((("b1")), 100000000, 0, -588); ((("c1")), 100000000, 0, -589); ((("d1")), 100000000, 0, -590); ((("e1")), 100000000, 0, -591); ((("f1")), 100000000, 0, -592); (Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -595), ((("a2")), 100000000, 0, -594), 0), 100000000, 0, -593); ((("b2")), 100000000, 0, -596); ((("c2")), 100000000, 0, -597); ((("d2")), 100000000, 0, -598); ((("e2")), 100000000, 0, -599); ((("f2")), 100000000, 0, -600)], (0)), 100000000, 0, -584)), (("camlinternalFormatBasics.mli", 105, 4181, 4181), ("camlinternalFormatBasics.mli", 109, 4378, 4431), 0), 0, Tag1 ("CamlinternalFormatBasics", 85)); (("Float_ty", 90), ([(Tag3 ((("fmtty_rel", 162)), [((("a1")), 100000000, 0, -604); ((("b1")), 100000000, 0, -606); ((("c1")), 100000000, 0, -607); ((("d1")), 100000000, 0, -608); ((("e1")), 100000000, 0, -609); ((("f1")), 100000000, 0, -610); ((("a2")), 100000000, 0, -612); ((("b2")), 100000000, 0, -614); ((("c2")), 100000000, 0, -615); ((("d2")), 100000000, 0, -616); ((("e2")), 100000000, 0, -617); ((("f2")), 100000000, 0, -618)], (0)), 100000000, 0, -619)]), ((Tag3 ((("fmtty_rel", 162)), [(Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -605), ((("a1")), 100000000, 0, -604), 0), 100000000, 0, -603); ((("b1")), 100000000, 0, -606); ((("c1")), 100000000, 0, -607); ((("d1")), 100000000, 0, -608); ((("e1")), 100000000, 0, -609); ((("f1")), 100000000, 0, -610); (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -613), ((("a2")), 100000000, 0, -612), 0), 100000000, 0, -611); ((("b2")), 100000000, 0, -614); ((("c2")), 100000000, 0, -615); ((("d2")), 100000000, 0, -616); ((("e2")), 100000000, 0, -617); ((("f2")), 100000000, 0, -618)], (0)), 100000000, 0, -602)), (("camlinternalFormatBasics.mli", 110, 4432, 4432), ("camlinternalFormatBasics.mli", 114, 4629, 4682), 0), 0, Tag1 ("CamlinternalFormatBasics", 86)); (("Bool_ty", 91), ([(Tag3 ((("fmtty_rel", 162)), [((("a1")), 100000000, 0, -622); ((("b1")), 100000000, 0, -624); ((("c1")), 100000000, 0, -625); ((("d1")), 100000000, 0, -626); ((("e1")), 100000000, 0, -627); ((("f1")), 100000000, 0, -628); ((("a2")), 100000000, 0, -630); ((("b2")), 100000000, 0, -632); ((("c2")), 100000000, 0, -633); ((("d2")), 100000000, 0, -634); ((("e2")), 100000000, 0, -635); ((("f2")), 100000000, 0, -636)], (0)), 100000000, 0, -637)]), ((Tag3 ((("fmtty_rel", 162)), [(Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -623), ((("a1")), 100000000, 0, -622), 0), 100000000, 0, -621); ((("b1")), 100000000, 0, -624); ((("c1")), 100000000, 0, -625); ((("d1")), 100000000, 0, -626); ((("e1")), 100000000, 0, -627); ((("f1")), 100000000, 0, -628); (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -631), ((("a2")), 100000000, 0, -630), 0), 100000000, 0, -629); ((("b2")), 100000000, 0, -632); ((("c2")), 100000000, 0, -633); ((("d2")), 100000000, 0, -634); ((("e2")), 100000000, 0, -635); ((("f2")), 100000000, 0, -636)], (0)), 100000000, 0, -620)), (("camlinternalFormatBasics.mli", 115, 4683, 4683), ("camlinternalFormatBasics.mli", 119, 4879, 4931), 0), 0, Tag1 ("CamlinternalFormatBasics", 87)); (("Format_arg_ty", 92), ([(Tag3 ((("fmtty", 161)), [((("g")), 100000000, 0, -642); ((("h")), 100000000, 0, -643); ((("i")), 100000000, 0, -644); ((("j")), 100000000, 0, -645); ((("k")), 100000000, 0, -646); ((("l")), 100000000, 0, -647)], (0)), 100000000, 0, -661); (Tag3 ((("fmtty_rel", 162)), [((("a1")), 100000000, 0, -640); ((("b1")), 100000000, 0, -648); ((("c1")), 100000000, 0, -649); ((("d1")), 100000000, 0, -650); ((("e1")), 100000000, 0, -651); ((("f1")), 100000000, 0, -652); ((("a2")), 100000000, 0, -654); ((("b2")), 100000000, 0, -656); ((("c2")), 100000000, 0, -657); ((("d2")), 100000000, 0, -658); ((("e2")), 100000000, 0, -659); ((("f2")), 100000000, 0, -660)], (0)), 100000000, 0, -662)]), ((Tag3 ((("fmtty_rel", 162)), [(Tag1 (0, (Tag3 ((("format6", 165)), [((("g")), 100000000, 0, -642); ((("h")), 100000000, 0, -643); ((("i")), 100000000, 0, -644); ((("j")), 100000000, 0, -645); ((("k")), 100000000, 0, -646); ((("l")), 100000000, 0, -647)], (0)), 100000000, 0, -641), ((("a1")), 100000000, 0, -640), 0), 100000000, 0, -639); ((("b1")), 100000000, 0, -648); ((("c1")), 100000000, 0, -649); ((("d1")), 100000000, 0, -650); ((("e1")), 100000000, 0, -651); ((("f1")), 100000000, 0, -652); (Tag1 (0, (Tag3 ((("format6", 165)), [((("g")), 100000000, 0, -642); ((("h")), 100000000, 0, -643); ((("i")), 100000000, 0, -644); ((("j")), 100000000, 0, -645); ((("k")), 100000000, 0, -646); ((("l")), 100000000, 0, -647)], (0)), 100000000, 0, -655), ((("a2")), 100000000, 0, -654), 0), 100000000, 0, -653); ((("b2")), 100000000, 0, -656); ((("c2")), 100000000, 0, -657); ((("d2")), 100000000, 0, -658); ((("e2")), 100000000, 0, -659); ((("f2")), 100000000, 0, -660)], (0)), 100000000, 0, -638)), (("camlinternalFormatBasics.mli", 120, 4932, 4932), ("camlinternalFormatBasics.mli", 125, 5197, 5277), 0), 0, Tag1 ("CamlinternalFormatBasics", 88)); (("Format_subst_ty", 93), ([(Tag3 ((("fmtty_rel", 162)), [((("g")), 100000000, 0, -667); ((("h")), 100000000, 0, -668); ((("i")), 100000000, 0, -669); ((("j")), 100000000, 0, -670); ((("k")), 100000000, 0, -671); ((("l")), 100000000, 0, -672); ((("g1")), 100000000, 0, -665); ((("b1")), 100000000, 0, -673); ((("c1")), 100000000, 0, -674); ((("j1")), 100000000, 0, -675); ((("d1")), 100000000, 0, -687); ((("a1")), 100000000, 0, -688)], (0)), 100000000, 0, -686); (Tag3 ((("fmtty_rel", 162)), [((("g")), 100000000, 0, -667); ((("h")), 100000000, 0, -668); ((("i")), 100000000, 0, -669); ((("j")), 100000000, 0, -670); ((("k")), 100000000, 0, -671); ((("l")), 100000000, 0, -672); ((("g2")), 100000000, 0, -679); ((("b2")), 100000000, 0, -681); ((("c2")), 100000000, 0, -682); ((("j2")), 100000000, 0, -683); ((("d2")), 100000000, 0, -690); ((("a2")), 100000000, 0, -691)], (0)), 100000000, 0, -689); (Tag3 ((("fmtty_rel", 162)), [((("a1")), 100000000, 0, -688); ((("b1")), 100000000, 0, -673); ((("c1")), 100000000, 0, -674); ((("d1")), 100000000, 0, -687); ((("e1")), 100000000, 0, -676); ((("f1")), 100000000, 0, -677); ((("a2")), 100000000, 0, -691); ((("b2")), 100000000, 0, -681); ((("c2")), 100000000, 0, -682); ((("d2")), 100000000, 0, -690); ((("e2")), 100000000, 0, -684); ((("f2")), 100000000, 0, -685)], (0)), 100000000, 0, -692)]), ((Tag3 ((("fmtty_rel", 162)), [(Tag1 (0, (Tag3 ((("format6", 165)), [((("g")), 100000000, 0, -667); ((("h")), 100000000, 0, -668); ((("i")), 100000000, 0, -669); ((("j")), 100000000, 0, -670); ((("k")), 100000000, 0, -671); ((("l")), 100000000, 0, -672)], (0)), 100000000, 0, -666), ((("g1")), 100000000, 0, -665), 0), 100000000, 0, -664); ((("b1")), 100000000, 0, -673); ((("c1")), 100000000, 0, -674); ((("j1")), 100000000, 0, -675); ((("e1")), 100000000, 0, -676); ((("f1")), 100000000, 0, -677); (Tag1 (0, (Tag3 ((("format6", 165)), [((("g")), 100000000, 0, -667); ((("h")), 100000000, 0, -668); ((("i")), 100000000, 0, -669); ((("j")), 100000000, 0, -670); ((("k")), 100000000, 0, -671); ((("l")), 100000000, 0, -672)], (0)), 100000000, 0, -680), ((("g2")), 100000000, 0, -679), 0), 100000000, 0, -678); ((("b2")), 100000000, 0, -681); ((("c2")), 100000000, 0, -682); ((("j2")), 100000000, 0, -683); ((("e2")), 100000000, 0, -684); ((("f2")), 100000000, 0, -685)], (0)), 100000000, 0, -663)), (("camlinternalFormatBasics.mli", 126, 5278, 5278), ("camlinternalFormatBasics.mli", 134, 5658, 5738), 0), 0, Tag1 ("CamlinternalFormatBasics", 89)); (("Alpha_ty", 94), ([(Tag3 ((("fmtty_rel", 162)), [((("a1")), 100000000, 0, -696); ((("b1")), 100000000, 0, -701); ((("c1")), 100000000, 0, -700); ((("d1")), 100000000, 0, -702); ((("e1")), 100000000, 0, -703); ((("f1")), 100000000, 0, -704); ((("a2")), 100000000, 0, -707); ((("b2")), 100000000, 0, -711); ((("c2")), 100000000, 0, -710); ((("d2")), 100000000, 0, -712); ((("e2")), 100000000, 0, -713); ((("f2")), 100000000, 0, -714)], (0)), 100000000, 0, -715)]), ((Tag3 ((("fmtty_rel", 162)), [(Tag1 (0, (Tag1 (0, ((("b1")), 100000000, 0, -701), (Tag1 (0, ((("x")), 100000000, 0, -697), ((("c1")), 100000000, 0, -700), 0), 100000000, 0, -699), 0), 100000000, 0, -698), (Tag1 (0, ((("x")), 100000000, 0, -697), ((("a1")), 100000000, 0, -696), 0), 100000000, 0, -695), 0), 100000000, 0, -694); ((("b1")), 100000000, 0, -701); ((("c1")), 100000000, 0, -700); ((("d1")), 100000000, 0, -702); ((("e1")), 100000000, 0, -703); ((("f1")), 100000000, 0, -704); (Tag1 (0, (Tag1 (0, ((("b2")), 100000000, 0, -711), (Tag1 (0, ((("x")), 100000000, 0, -697), ((("c2")), 100000000, 0, -710), 0), 100000000, 0, -709), 0), 100000000, 0, -708), (Tag1 (0, ((("x")), 100000000, 0, -697), ((("a2")), 100000000, 0, -707), 0), 100000000, 0, -706), 0), 100000000, 0, -705); ((("b2")), 100000000, 0, -711); ((("c2")), 100000000, 0, -710); ((("d2")), 100000000, 0, -712); ((("e2")), 100000000, 0, -713); ((("f2")), 100000000, 0, -714)], (0)), 100000000, 0, -693)), (("camlinternalFormatBasics.mli", 137, 5787, 5787), ("camlinternalFormatBasics.mli", 141, 6003, 6075), 0), 0, Tag1 ("CamlinternalFormatBasics", 90)); (("Theta_ty", 95), ([(Tag3 ((("fmtty_rel", 162)), [((("a1")), 100000000, 0, -718); ((("b1")), 100000000, 0, -721); ((("c1")), 100000000, 0, -720); ((("d1")), 100000000, 0, -722); ((("e1")), 100000000, 0, -723); ((("f1")), 100000000, 0, -724); ((("a2")), 100000000, 0, -726); ((("b2")), 100000000, 0, -729); ((("c2")), 100000000, 0, -728); ((("d2")), 100000000, 0, -730); ((("e2")), 100000000, 0, -731); ((("f2")), 100000000, 0, -732)], (0)), 100000000, 0, -733)]), ((Tag3 ((("fmtty_rel", 162)), [(Tag1 (0, (Tag1 (0, ((("b1")), 100000000, 0, -721), ((("c1")), 100000000, 0, -720), 0), 100000000, 0, -719), ((("a1")), 100000000, 0, -718), 0), 100000000, 0, -717); ((("b1")), 100000000, 0, -721); ((("c1")), 100000000, 0, -720); ((("d1")), 100000000, 0, -722); ((("e1")), 100000000, 0, -723); ((("f1")), 100000000, 0, -724); (Tag1 (0, (Tag1 (0, ((("b2")), 100000000, 0, -729), ((("c2")), 100000000, 0, -728), 0), 100000000, 0, -727), ((("a2")), 100000000, 0, -726), 0), 100000000, 0, -725); ((("b2")), 100000000, 0, -729); ((("c2")), 100000000, 0, -728); ((("d2")), 100000000, 0, -730); ((("e2")), 100000000, 0, -731); ((("f2")), 100000000, 0, -732)], (0)), 100000000, 0, -716)), (("camlinternalFormatBasics.mli", 142, 6076, 6076), ("camlinternalFormatBasics.mli", 146, 6280, 6340), 0), 0, Tag1 ("CamlinternalFormatBasics", 91)); (("Any_ty", 96), ([(Tag3 ((("fmtty_rel", 162)), [((("a1")), 100000000, 0, -736); ((("b1")), 100000000, 0, -738); ((("c1")), 100000000, 0, -739); ((("d1")), 100000000, 0, -740); ((("e1")), 100000000, 0, -741); ((("f1")), 100000000, 0, -742); ((("a2")), 100000000, 0, -744); ((("b2")), 100000000, 0, -745); ((("c2")), 100000000, 0, -746); ((("d2")), 100000000, 0, -747); ((("e2")), 100000000, 0, -748); ((("f2")), 100000000, 0, -749)], (0)), 100000000, 0, -750)]), ((Tag3 ((("fmtty_rel", 162)), [(Tag1 (0, ((("x")), 100000000, 0, -737), ((("a1")), 100000000, 0, -736), 0), 100000000, 0, -735); ((("b1")), 100000000, 0, -738); ((("c1")), 100000000, 0, -739); ((("d1")), 100000000, 0, -740); ((("e1")), 100000000, 0, -741); ((("f1")), 100000000, 0, -742); (Tag1 (0, ((("x")), 100000000, 0, -737), ((("a2")), 100000000, 0, -744), 0), 100000000, 0, -743); ((("b2")), 100000000, 0, -745); ((("c2")), 100000000, 0, -746); ((("d2")), 100000000, 0, -747); ((("e2")), 100000000, 0, -748); ((("f2")), 100000000, 0, -749)], (0)), 100000000, 0, -734)), (("camlinternalFormatBasics.mli", 147, 6341, 6341), ("camlinternalFormatBasics.mli", 151, 6546, 6596), 0), 0, Tag1 ("CamlinternalFormatBasics", 92)); (("Reader_ty", 97), ([(Tag3 ((("fmtty_rel", 162)), [((("a1")), 100000000, 0, -753); ((("b1")), 100000000, 0, -755); ((("c1")), 100000000, 0, -756); ((("d1")), 100000000, 0, -758); ((("e1")), 100000000, 0, -760); ((("f1")), 100000000, 0, -761); ((("a2")), 100000000, 0, -763); ((("b2")), 100000000, 0, -764); ((("c2")), 100000000, 0, -765); ((("d2")), 100000000, 0, -767); ((("e2")), 100000000, 0, -769); ((("f2")), 100000000, 0, -770)], (0)), 100000000, 0, -771)]), ((Tag3 ((("fmtty_rel", 162)), [(Tag1 (0, ((("x")), 100000000, 0, -754), ((("a1")), 100000000, 0, -753), 0), 100000000, 0, -752); ((("b1")), 100000000, 0, -755); ((("c1")), 100000000, 0, -756); (Tag1 (0, (Tag1 (0, ((("b1")), 100000000, 0, -755), ((("x")), 100000000, 0, -754), 0), 100000000, 0, -759), ((("d1")), 100000000, 0, -758), 0), 100000000, 0, -757); ((("e1")), 100000000, 0, -760); ((("f1")), 100000000, 0, -761); (Tag1 (0, ((("x")), 100000000, 0, -754), ((("a2")), 100000000, 0, -763), 0), 100000000, 0, -762); ((("b2")), 100000000, 0, -764); ((("c2")), 100000000, 0, -765); (Tag1 (0, (Tag1 (0, ((("b2")), 100000000, 0, -764), ((("x")), 100000000, 0, -754), 0), 100000000, 0, -768), ((("d2")), 100000000, 0, -767), 0), 100000000, 0, -766); ((("e2")), 100000000, 0, -769); ((("f2")), 100000000, 0, -770)], (0)), 100000000, 0, -751)), (("camlinternalFormatBasics.mli", 154, 6632, 6632), ("camlinternalFormatBasics.mli", 158, 6841, 6906), 0), 0, Tag1 ("CamlinternalFormatBasics", 93)); (("Ignored_reader_ty", 98), ([(Tag3 ((("fmtty_rel", 162)), [((("a1")), 100000000, 0, -773); ((("b1")), 100000000, 0, -774); ((("c1")), 100000000, 0, -775); ((("d1")), 100000000, 0, -777); ((("e1")), 100000000, 0, -780); ((("f1")), 100000000, 0, -781); ((("a2")), 100000000, 0, -782); ((("b2")), 100000000, 0, -783); ((("c2")), 100000000, 0, -784); ((("d2")), 100000000, 0, -786); ((("e2")), 100000000, 0, -788); ((("f2")), 100000000, 0, -789)], (0)), 100000000, 0, -790)]), ((Tag3 ((("fmtty_rel", 162)), [((("a1")), 100000000, 0, -773); ((("b1")), 100000000, 0, -774); ((("c1")), 100000000, 0, -775); (Tag1 (0, (Tag1 (0, ((("b1")), 100000000, 0, -774), ((("x")), 100000000, 0, -779), 0), 100000000, 0, -778), ((("d1")), 100000000, 0, -777), 0), 100000000, 0, -776); ((("e1")), 100000000, 0, -780); ((("f1")), 100000000, 0, -781); ((("a2")), 100000000, 0, -782); ((("b2")), 100000000, 0, -783); ((("c2")), 100000000, 0, -784); (Tag1 (0, (Tag1 (0, ((("b2")), 100000000, 0, -783), ((("x")), 100000000, 0, -779), 0), 100000000, 0, -787), ((("d2")), 100000000, 0, -786), 0), 100000000, 0, -785); ((("e2")), 100000000, 0, -788); ((("f2")), 100000000, 0, -789)], (0)), 100000000, 0, -772)), (("camlinternalFormatBasics.mli", 159, 6907, 6907), ("camlinternalFormatBasics.mli", 163, 7111, 7170), 0), 0, Tag1 ("CamlinternalFormatBasics", 94)); (("End_of_fmtty", 99), (0), ((Tag3 ((("fmtty_rel", 162)), [((("f1")), 100000000, 0, -792); ((("b1")), 100000000, 0, -793); ((("c1")), 100000000, 0, -794); ((("d1")), 100000000, 0, -795); ((("d1")), 100000000, 0, -795); ((("f1")), 100000000, 0, -792); ((("f2")), 100000000, 0, -796); ((("b2")), 100000000, 0, -797); ((("c2")), 100000000, 0, -798); ((("d2")), 100000000, 0, -799); ((("d2")), 100000000, 0, -799); ((("f2")), 100000000, 0, -796)], (0)), 100000000, 0, -791)), (("camlinternalFormatBasics.mli", 165, 7172, 7172), ("camlinternalFormatBasics.mli", 167, 7224, 7268), 0), 0, Tag1 ("CamlinternalFormatBasics", 95))], 0), 1, 0, [63; 15; 15; 63; 15; 15; 63; 15; 15; 63; 15; 15], [0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0], 0, 0, (("camlinternalFormatBasics.mli", 78, 2842, 2842), ("camlinternalFormatBasics.mli", 167, 7224, 7268), 0), 0, 0, 0, Tag1 ("CamlinternalFormatBasics", 74)), 2, 0); Tag1 (("fmt", 163), ([((("a")), 100000000, 0, -488); ((("b")), 100000000, 0, -489); ((("c")), 100000000, 0, -490); ((("d")), 100000000, 0, -491); ((("e")), 100000000, 0, -492); ((("f")), 100000000, 0, -493)], 6, Tag1 ([(("Char", 100), ([(Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -178); ((("b")), 100000000, 0, -180); ((("c")), 100000000, 0, -181); ((("d")), 100000000, 0, -182); ((("e")), 100000000, 0, -183); ((("f")), 100000000, 0, -184)], (0)), 100000000, 0, -185)]), ((Tag3 ((("fmt", 163)), [(Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -179), ((("a")), 100000000, 0, -178), 0), 100000000, 0, -177); ((("b")), 100000000, 0, -180); ((("c")), 100000000, 0, -181); ((("d")), 100000000, 0, -182); ((("e")), 100000000, 0, -183); ((("f")), 100000000, 0, -184)], (0)), 100000000, 0, -176)), (("camlinternalFormatBasics.mli", 173, 7343, 7343), ("camlinternalFormatBasics.mli", 175, 7447, 7489), 0), 0, Tag1 ("CamlinternalFormatBasics", 96)); (("Caml_char", 101), ([(Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -188); ((("b")), 100000000, 0, -190); ((("c")), 100000000, 0, -191); ((("d")), 100000000, 0, -192); ((("e")), 100000000, 0, -193); ((("f")), 100000000, 0, -194)], (0)), 100000000, 0, -195)]), ((Tag3 ((("fmt", 163)), [(Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -189), ((("a")), 100000000, 0, -188), 0), 100000000, 0, -187); ((("b")), 100000000, 0, -190); ((("c")), 100000000, 0, -191); ((("d")), 100000000, 0, -192); ((("e")), 100000000, 0, -193); ((("f")), 100000000, 0, -194)], (0)), 100000000, 0, -186)), (("camlinternalFormatBasics.mli", 176, 7490, 7490), ("camlinternalFormatBasics.mli", 178, 7594, 7636), 0), 0, Tag1 ("CamlinternalFormatBasics", 97)); (("String", 102), ([(Tag3 ((("padding", 153)), [((("x")), 100000000, 0, -197); (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -206), ((("a")), 100000000, 0, -205), 0), 100000000, 0, -204)], (0)), 100000000, 0, -203); (Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -205); ((("b")), 100000000, 0, -198); ((("c")), 100000000, 0, -199); ((("d")), 100000000, 0, -200); ((("e")), 100000000, 0, -201); ((("f")), 100000000, 0, -202)], (0)), 100000000, 0, -207)]), ((Tag3 ((("fmt", 163)), [((("x")), 100000000, 0, -197); ((("b")), 100000000, 0, -198); ((("c")), 100000000, 0, -199); ((("d")), 100000000, 0, -200); ((("e")), 100000000, 0, -201); ((("f")), 100000000, 0, -202)], (0)), 100000000, 0, -196)), (("camlinternalFormatBasics.mli", 179, 7637, 7637), ("camlinternalFormatBasics.mli", 181, 7770, 7804), 0), 0, Tag1 ("CamlinternalFormatBasics", 98)); (("Caml_string", 103), ([(Tag3 ((("padding", 153)), [((("x")), 100000000, 0, -209); (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -218), ((("a")), 100000000, 0, -217), 0), 100000000, 0, -216)], (0)), 100000000, 0, -215); (Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -217); ((("b")), 100000000, 0, -210); ((("c")), 100000000, 0, -211); ((("d")), 100000000, 0, -212); ((("e")), 100000000, 0, -213); ((("f")), 100000000, 0, -214)], (0)), 100000000, 0, -219)]), ((Tag3 ((("fmt", 163)), [((("x")), 100000000, 0, -209); ((("b")), 100000000, 0, -210); ((("c")), 100000000, 0, -211); ((("d")), 100000000, 0, -212); ((("e")), 100000000, 0, -213); ((("f")), 100000000, 0, -214)], (0)), 100000000, 0, -208)), (("camlinternalFormatBasics.mli", 182, 7805, 7805), ("camlinternalFormatBasics.mli", 184, 7938, 7972), 0), 0, Tag1 ("CamlinternalFormatBasics", 99)); (("Int", 104), ([(Tag3 ((("int_conv", 147)), 0, (0)), 100000000, 0, -227); (Tag3 ((("padding", 153)), [((("x")), 100000000, 0, -221); ((("y")), 100000000, 0, -229)], (0)), 100000000, 0, -228); (Tag3 ((("precision", 155)), [((("y")), 100000000, 0, -229); (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -233), ((("a")), 100000000, 0, -232), 0), 100000000, 0, -231)], (0)), 100000000, 0, -230); (Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -232); ((("b")), 100000000, 0, -222); ((("c")), 100000000, 0, -223); ((("d")), 100000000, 0, -224); ((("e")), 100000000, 0, -225); ((("f")), 100000000, 0, -226)], (0)), 100000000, 0, -234)]), ((Tag3 ((("fmt", 163)), [((("x")), 100000000, 0, -221); ((("b")), 100000000, 0, -222); ((("c")), 100000000, 0, -223); ((("d")), 100000000, 0, -224); ((("e")), 100000000, 0, -225); ((("f")), 100000000, 0, -226)], (0)), 100000000, 0, -220)), (("camlinternalFormatBasics.mli", 185, 7973, 7973), ("camlinternalFormatBasics.mli", 188, 8146, 8180), 0), 0, Tag1 ("CamlinternalFormatBasics", 100)); (("Int32", 105), ([(Tag3 ((("int_conv", 147)), 0, (0)), 100000000, 0, -242); (Tag3 ((("padding", 153)), [((("x")), 100000000, 0, -236); ((("y")), 100000000, 0, -244)], (0)), 100000000, 0, -243); (Tag3 ((("precision", 155)), [((("y")), 100000000, 0, -244); (Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -248), ((("a")), 100000000, 0, -247), 0), 100000000, 0, -246)], (0)), 100000000, 0, -245); (Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -247); ((("b")), 100000000, 0, -237); ((("c")), 100000000, 0, -238); ((("d")), 100000000, 0, -239); ((("e")), 100000000, 0, -240); ((("f")), 100000000, 0, -241)], (0)), 100000000, 0, -249)]), ((Tag3 ((("fmt", 163)), [((("x")), 100000000, 0, -236); ((("b")), 100000000, 0, -237); ((("c")), 100000000, 0, -238); ((("d")), 100000000, 0, -239); ((("e")), 100000000, 0, -240); ((("f")), 100000000, 0, -241)], (0)), 100000000, 0, -235)), (("camlinternalFormatBasics.mli", 189, 8181, 8181), ("camlinternalFormatBasics.mli", 192, 8357, 8391), 0), 0, Tag1 ("CamlinternalFormatBasics", 101)); (("Nativeint", 106), ([(Tag3 ((("int_conv", 147)), 0, (0)), 100000000, 0, -257); (Tag3 ((("padding", 153)), [((("x")), 100000000, 0, -251); ((("y")), 100000000, 0, -259)], (0)), 100000000, 0, -258); (Tag3 ((("precision", 155)), [((("y")), 100000000, 0, -259); (Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -263), ((("a")), 100000000, 0, -262), 0), 100000000, 0, -261)], (0)), 100000000, 0, -260); (Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -262); ((("b")), 100000000, 0, -252); ((("c")), 100000000, 0, -253); ((("d")), 100000000, 0, -254); ((("e")), 100000000, 0, -255); ((("f")), 100000000, 0, -256)], (0)), 100000000, 0, -264)]), ((Tag3 ((("fmt", 163)), [((("x")), 100000000, 0, -251); ((("b")), 100000000, 0, -252); ((("c")), 100000000, 0, -253); ((("d")), 100000000, 0, -254); ((("e")), 100000000, 0, -255); ((("f")), 100000000, 0, -256)], (0)), 100000000, 0, -250)), (("camlinternalFormatBasics.mli", 193, 8392, 8392), ("camlinternalFormatBasics.mli", 196, 8572, 8606), 0), 0, Tag1 ("CamlinternalFormatBasics", 102)); (("Int64", 107), ([(Tag3 ((("int_conv", 147)), 0, (0)), 100000000, 0, -272); (Tag3 ((("padding", 153)), [((("x")), 100000000, 0, -266); ((("y")), 100000000, 0, -274)], (0)), 100000000, 0, -273); (Tag3 ((("precision", 155)), [((("y")), 100000000, 0, -274); (Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -278), ((("a")), 100000000, 0, -277), 0), 100000000, 0, -276)], (0)), 100000000, 0, -275); (Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -277); ((("b")), 100000000, 0, -267); ((("c")), 100000000, 0, -268); ((("d")), 100000000, 0, -269); ((("e")), 100000000, 0, -270); ((("f")), 100000000, 0, -271)], (0)), 100000000, 0, -279)]), ((Tag3 ((("fmt", 163)), [((("x")), 100000000, 0, -266); ((("b")), 100000000, 0, -267); ((("c")), 100000000, 0, -268); ((("d")), 100000000, 0, -269); ((("e")), 100000000, 0, -270); ((("f")), 100000000, 0, -271)], (0)), 100000000, 0, -265)), (("camlinternalFormatBasics.mli", 197, 8607, 8607), ("camlinternalFormatBasics.mli", 200, 8783, 8817), 0), 0, Tag1 ("CamlinternalFormatBasics", 103)); (("Float", 108), ([(Tag3 ((("float_conv", 150)), 0, (0)), 100000000, 0, -287); (Tag3 ((("padding", 153)), [((("x")), 100000000, 0, -281); ((("y")), 100000000, 0, -289)], (0)), 100000000, 0, -288); (Tag3 ((("precision", 155)), [((("y")), 100000000, 0, -289); (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -293), ((("a")), 100000000, 0, -292), 0), 100000000, 0, -291)], (0)), 100000000, 0, -290); (Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -292); ((("b")), 100000000, 0, -282); ((("c")), 100000000, 0, -283); ((("d")), 100000000, 0, -284); ((("e")), 100000000, 0, -285); ((("f")), 100000000, 0, -286)], (0)), 100000000, 0, -294)]), ((Tag3 ((("fmt", 163)), [((("x")), 100000000, 0, -281); ((("b")), 100000000, 0, -282); ((("c")), 100000000, 0, -283); ((("d")), 100000000, 0, -284); ((("e")), 100000000, 0, -285); ((("f")), 100000000, 0, -286)], (0)), 100000000, 0, -280)), (("camlinternalFormatBasics.mli", 201, 8818, 8818), ("camlinternalFormatBasics.mli", 204, 8997, 9031), 0), 0, Tag1 ("CamlinternalFormatBasics", 104)); (("Bool", 109), ([(Tag3 ((("padding", 153)), [((("x")), 100000000, 0, -296); (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -305), ((("a")), 100000000, 0, -304), 0), 100000000, 0, -303)], (0)), 100000000, 0, -302); (Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -304); ((("b")), 100000000, 0, -297); ((("c")), 100000000, 0, -298); ((("d")), 100000000, 0, -299); ((("e")), 100000000, 0, -300); ((("f")), 100000000, 0, -301)], (0)), 100000000, 0, -306)]), ((Tag3 ((("fmt", 163)), [((("x")), 100000000, 0, -296); ((("b")), 100000000, 0, -297); ((("c")), 100000000, 0, -298); ((("d")), 100000000, 0, -299); ((("e")), 100000000, 0, -300); ((("f")), 100000000, 0, -301)], (0)), 100000000, 0, -295)), (("camlinternalFormatBasics.mli", 205, 9032, 9032), ("camlinternalFormatBasics.mli", 207, 9166, 9200), 0), 0, Tag1 ("CamlinternalFormatBasics", 105)); (("Flush", 110), ([(Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -308); ((("b")), 100000000, 0, -309); ((("c")), 100000000, 0, -310); ((("d")), 100000000, 0, -311); ((("e")), 100000000, 0, -312); ((("f")), 100000000, 0, -313)], (0)), 100000000, 0, -314)]), ((Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -308); ((("b")), 100000000, 0, -309); ((("c")), 100000000, 0, -310); ((("d")), 100000000, 0, -311); ((("e")), 100000000, 0, -312); ((("f")), 100000000, 0, -313)], (0)), 100000000, 0, -307)), (("camlinternalFormatBasics.mli", 208, 9201, 9201), ("camlinternalFormatBasics.mli", 210, 9305, 9339), 0), 0, Tag1 ("CamlinternalFormatBasics", 106)); (("String_literal", 111), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -322); (Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -316); ((("b")), 100000000, 0, -317); ((("c")), 100000000, 0, -318); ((("d")), 100000000, 0, -319); ((("e")), 100000000, 0, -320); ((("f")), 100000000, 0, -321)], (0)), 100000000, 0, -323)]), ((Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -316); ((("b")), 100000000, 0, -317); ((("c")), 100000000, 0, -318); ((("d")), 100000000, 0, -319); ((("e")), 100000000, 0, -320); ((("f")), 100000000, 0, -321)], (0)), 100000000, 0, -315)), (("camlinternalFormatBasics.mli", 212, 9341, 9341), ("camlinternalFormatBasics.mli", 214, 9455, 9489), 0), 0, Tag1 ("CamlinternalFormatBasics", 107)); (("Char_literal", 112), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -331); (Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -325); ((("b")), 100000000, 0, -326); ((("c")), 100000000, 0, -327); ((("d")), 100000000, 0, -328); ((("e")), 100000000, 0, -329); ((("f")), 100000000, 0, -330)], (0)), 100000000, 0, -332)]), ((Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -325); ((("b")), 100000000, 0, -326); ((("c")), 100000000, 0, -327); ((("d")), 100000000, 0, -328); ((("e")), 100000000, 0, -329); ((("f")), 100000000, 0, -330)], (0)), 100000000, 0, -324)), (("camlinternalFormatBasics.mli", 215, 9490, 9490), ("camlinternalFormatBasics.mli", 217, 9600, 9634), 0), 0, Tag1 ("CamlinternalFormatBasics", 108)); (("Format_arg", 113), ([(Tag3 ((("pad_option", 154)), 0, (0)), 100000000, 0, -348); (Tag3 ((("fmtty", 161)), [((("g")), 100000000, 0, -337); ((("h")), 100000000, 0, -338); ((("i")), 100000000, 0, -339); ((("j")), 100000000, 0, -340); ((("k")), 100000000, 0, -341); ((("l")), 100000000, 0, -342)], (0)), 100000000, 0, -349); (Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -335); ((("b")), 100000000, 0, -343); ((("c")), 100000000, 0, -344); ((("d")), 100000000, 0, -345); ((("e")), 100000000, 0, -346); ((("f")), 100000000, 0, -347)], (0)), 100000000, 0, -350)]), ((Tag3 ((("fmt", 163)), [(Tag1 (0, (Tag3 ((("format6", 165)), [((("g")), 100000000, 0, -337); ((("h")), 100000000, 0, -338); ((("i")), 100000000, 0, -339); ((("j")), 100000000, 0, -340); ((("k")), 100000000, 0, -341); ((("l")), 100000000, 0, -342)], (0)), 100000000, 0, -336), ((("a")), 100000000, 0, -335), 0), 100000000, 0, -334); ((("b")), 100000000, 0, -343); ((("c")), 100000000, 0, -344); ((("d")), 100000000, 0, -345); ((("e")), 100000000, 0, -346); ((("f")), 100000000, 0, -347)], (0)), 100000000, 0, -333)), (("camlinternalFormatBasics.mli", 219, 9636, 9636), ("camlinternalFormatBasics.mli", 222, 9795, 9865), 0), 0, Tag1 ("CamlinternalFormatBasics", 109)); (("Format_subst", 114), ([(Tag3 ((("pad_option", 154)), 0, (0)), 100000000, 0, -366); (Tag3 ((("fmtty_rel", 162)), [((("g")), 100000000, 0, -355); ((("h")), 100000000, 0, -356); ((("i")), 100000000, 0, -357); ((("j")), 100000000, 0, -358); ((("k")), 100000000, 0, -359); ((("l")), 100000000, 0, -360); ((("g2")), 100000000, 0, -353); ((("b")), 100000000, 0, -361); ((("c")), 100000000, 0, -362); ((("j2")), 100000000, 0, -363); ((("d")), 100000000, 0, -368); ((("a")), 100000000, 0, -369)], (0)), 100000000, 0, -367); (Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -369); ((("b")), 100000000, 0, -361); ((("c")), 100000000, 0, -362); ((("d")), 100000000, 0, -368); ((("e")), 100000000, 0, -364); ((("f")), 100000000, 0, -365)], (0)), 100000000, 0, -370)]), ((Tag3 ((("fmt", 163)), [(Tag1 (0, (Tag3 ((("format6", 165)), [((("g")), 100000000, 0, -355); ((("h")), 100000000, 0, -356); ((("i")), 100000000, 0, -357); ((("j")), 100000000, 0, -358); ((("k")), 100000000, 0, -359); ((("l")), 100000000, 0, -360)], (0)), 100000000, 0, -354), ((("g2")), 100000000, 0, -353), 0), 100000000, 0, -352); ((("b")), 100000000, 0, -361); ((("c")), 100000000, 0, -362); ((("j2")), 100000000, 0, -363); ((("e")), 100000000, 0, -364); ((("f")), 100000000, 0, -365)], (0)), 100000000, 0, -351)), (("camlinternalFormatBasics.mli", 223, 9866, 9866), ("camlinternalFormatBasics.mli", 228, 10064, 10134), 0), 0, Tag1 ("CamlinternalFormatBasics", 110)); (("Alpha", 115), ([(Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -374); ((("b")), 100000000, 0, -379); ((("c")), 100000000, 0, -378); ((("d")), 100000000, 0, -380); ((("e")), 100000000, 0, -381); ((("f")), 100000000, 0, -382)], (0)), 100000000, 0, -383)]), ((Tag3 ((("fmt", 163)), [(Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -379), (Tag1 (0, ((("x")), 100000000, 0, -375), ((("c")), 100000000, 0, -378), 0), 100000000, 0, -377), 0), 100000000, 0, -376), (Tag1 (0, ((("x")), 100000000, 0, -375), ((("a")), 100000000, 0, -374), 0), 100000000, 0, -373), 0), 100000000, 0, -372); ((("b")), 100000000, 0, -379); ((("c")), 100000000, 0, -378); ((("d")), 100000000, 0, -380); ((("e")), 100000000, 0, -381); ((("f")), 100000000, 0, -382)], (0)), 100000000, 0, -371)), (("camlinternalFormatBasics.mli", 231, 10182, 10182), ("camlinternalFormatBasics.mli", 233, 10286, 10346), 0), 0, Tag1 ("CamlinternalFormatBasics", 111)); (("Theta", 116), ([(Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -386); ((("b")), 100000000, 0, -389); ((("c")), 100000000, 0, -388); ((("d")), 100000000, 0, -390); ((("e")), 100000000, 0, -391); ((("f")), 100000000, 0, -392)], (0)), 100000000, 0, -393)]), ((Tag3 ((("fmt", 163)), [(Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -389), ((("c")), 100000000, 0, -388), 0), 100000000, 0, -387), ((("a")), 100000000, 0, -386), 0), 100000000, 0, -385); ((("b")), 100000000, 0, -389); ((("c")), 100000000, 0, -388); ((("d")), 100000000, 0, -390); ((("e")), 100000000, 0, -391); ((("f")), 100000000, 0, -392)], (0)), 100000000, 0, -384)), (("camlinternalFormatBasics.mli", 234, 10347, 10347), ("camlinternalFormatBasics.mli", 236, 10451, 10499), 0), 0, Tag1 ("CamlinternalFormatBasics", 112)); (("Formatting_lit", 117), ([(Tag3 ((("formatting_lit", 159)), 0, (0)), 100000000, 0, -401); (Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -395); ((("b")), 100000000, 0, -396); ((("c")), 100000000, 0, -397); ((("d")), 100000000, 0, -398); ((("e")), 100000000, 0, -399); ((("f")), 100000000, 0, -400)], (0)), 100000000, 0, -402)]), ((Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -395); ((("b")), 100000000, 0, -396); ((("c")), 100000000, 0, -397); ((("d")), 100000000, 0, -398); ((("e")), 100000000, 0, -399); ((("f")), 100000000, 0, -400)], (0)), 100000000, 0, -394)), (("camlinternalFormatBasics.mli", 239, 10536, 10536), ("camlinternalFormatBasics.mli", 241, 10657, 10691), 0), 0, Tag1 ("CamlinternalFormatBasics", 113)); (("Formatting_gen", 118), ([(Tag3 ((("formatting_gen", 160)), [((("a1")), 100000000, 0, -404); ((("b")), 100000000, 0, -405); ((("c")), 100000000, 0, -406); ((("d1")), 100000000, 0, -407); ((("e1")), 100000000, 0, -411); ((("f1")), 100000000, 0, -412)], (0)), 100000000, 0, -410); (Tag3 ((("fmt", 163)), [((("f1")), 100000000, 0, -412); ((("b")), 100000000, 0, -405); ((("c")), 100000000, 0, -406); ((("e1")), 100000000, 0, -411); ((("e2")), 100000000, 0, -408); ((("f2")), 100000000, 0, -409)], (0)), 100000000, 0, -413)]), ((Tag3 ((("fmt", 163)), [((("a1")), 100000000, 0, -404); ((("b")), 100000000, 0, -405); ((("c")), 100000000, 0, -406); ((("d1")), 100000000, 0, -407); ((("e2")), 100000000, 0, -408); ((("f2")), 100000000, 0, -409)], (0)), 100000000, 0, -403)), (("camlinternalFormatBasics.mli", 242, 10692, 10692), ("camlinternalFormatBasics.mli", 244, 10814, 10886), 0), 0, Tag1 ("CamlinternalFormatBasics", 114)); (("Reader", 119), ([(Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -416); ((("b")), 100000000, 0, -418); ((("c")), 100000000, 0, -419); ((("d")), 100000000, 0, -421); ((("e")), 100000000, 0, -423); ((("f")), 100000000, 0, -424)], (0)), 100000000, 0, -425)]), ((Tag3 ((("fmt", 163)), [(Tag1 (0, ((("x")), 100000000, 0, -417), ((("a")), 100000000, 0, -416), 0), 100000000, 0, -415); ((("b")), 100000000, 0, -418); ((("c")), 100000000, 0, -419); (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -418), ((("x")), 100000000, 0, -417), 0), 100000000, 0, -422), ((("d")), 100000000, 0, -421), 0), 100000000, 0, -420); ((("e")), 100000000, 0, -423); ((("f")), 100000000, 0, -424)], (0)), 100000000, 0, -414)), (("camlinternalFormatBasics.mli", 247, 10923, 10923), ("camlinternalFormatBasics.mli", 249, 11027, 11081), 0), 0, Tag1 ("CamlinternalFormatBasics", 115)); (("Scan_char_set", 120), ([(Tag3 ((("pad_option", 154)), 0, (0)), 100000000, 0, -435); (Tag3 ((("char_set", 151)), 0, (0)), 100000000, 0, -436); (Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -428); ((("b")), 100000000, 0, -430); ((("c")), 100000000, 0, -431); ((("d")), 100000000, 0, -432); ((("e")), 100000000, 0, -433); ((("f")), 100000000, 0, -434)], (0)), 100000000, 0, -437)]), ((Tag3 ((("fmt", 163)), [(Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -429), ((("a")), 100000000, 0, -428), 0), 100000000, 0, -427); ((("b")), 100000000, 0, -430); ((("c")), 100000000, 0, -431); ((("d")), 100000000, 0, -432); ((("e")), 100000000, 0, -433); ((("f")), 100000000, 0, -434)], (0)), 100000000, 0, -426)), (("camlinternalFormatBasics.mli", 250, 11082, 11082), ("camlinternalFormatBasics.mli", 252, 11214, 11258), 0), 0, Tag1 ("CamlinternalFormatBasics", 116)); (("Scan_get_counter", 121), ([(Tag3 ((("counter", 152)), 0, (0)), 100000000, 0, -447); (Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -440); ((("b")), 100000000, 0, -442); ((("c")), 100000000, 0, -443); ((("d")), 100000000, 0, -444); ((("e")), 100000000, 0, -445); ((("f")), 100000000, 0, -446)], (0)), 100000000, 0, -448)]), ((Tag3 ((("fmt", 163)), [(Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -441), ((("a")), 100000000, 0, -440), 0), 100000000, 0, -439); ((("b")), 100000000, 0, -442); ((("c")), 100000000, 0, -443); ((("d")), 100000000, 0, -444); ((("e")), 100000000, 0, -445); ((("f")), 100000000, 0, -446)], (0)), 100000000, 0, -438)), (("camlinternalFormatBasics.mli", 253, 11259, 11259), ("camlinternalFormatBasics.mli", 255, 11378, 11419), 0), 0, Tag1 ("CamlinternalFormatBasics", 117)); (("Scan_next_char", 122), ([(Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -451); ((("b")), 100000000, 0, -453); ((("c")), 100000000, 0, -454); ((("d")), 100000000, 0, -455); ((("e")), 100000000, 0, -456); ((("f")), 100000000, 0, -457)], (0)), 100000000, 0, -458)]), ((Tag3 ((("fmt", 163)), [(Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -452), ((("a")), 100000000, 0, -451), 0), 100000000, 0, -450); ((("b")), 100000000, 0, -453); ((("c")), 100000000, 0, -454); ((("d")), 100000000, 0, -455); ((("e")), 100000000, 0, -456); ((("f")), 100000000, 0, -457)], (0)), 100000000, 0, -449)), (("camlinternalFormatBasics.mli", 256, 11420, 11420), ("camlinternalFormatBasics.mli", 258, 11525, 11565), 0), 0, Tag1 ("CamlinternalFormatBasics", 118)); (("Ignored_param", 123), ([(Tag3 ((("ignored", 164)), [((("a")), 100000000, 0, -460); ((("b")), 100000000, 0, -461); ((("c")), 100000000, 0, -462); ((("d")), 100000000, 0, -463); ((("y")), 100000000, 0, -467); ((("x")), 100000000, 0, -468)], (0)), 100000000, 0, -466); (Tag3 ((("fmt", 163)), [((("x")), 100000000, 0, -468); ((("b")), 100000000, 0, -461); ((("c")), 100000000, 0, -462); ((("y")), 100000000, 0, -467); ((("e")), 100000000, 0, -464); ((("f")), 100000000, 0, -465)], (0)), 100000000, 0, -469)]), ((Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -460); ((("b")), 100000000, 0, -461); ((("c")), 100000000, 0, -462); ((("d")), 100000000, 0, -463); ((("e")), 100000000, 0, -464); ((("f")), 100000000, 0, -465)], (0)), 100000000, 0, -459)), (("camlinternalFormatBasics.mli", 261, 11685, 11685), ("camlinternalFormatBasics.mli", 263, 11824, 11858), 0), 0, Tag1 ("CamlinternalFormatBasics", 119)); (("Custom", 124), ([(Tag3 ((("custom_arity", 157)), [((("a")), 100000000, 0, -478); ((("x")), 100000000, 0, -479); ((("y")), 100000000, 0, -471)], (0)), 100000000, 0, -477); (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -481), ((("x")), 100000000, 0, -479), 0), 100000000, 0, -480); (Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -478); ((("b")), 100000000, 0, -472); ((("c")), 100000000, 0, -473); ((("d")), 100000000, 0, -474); ((("e")), 100000000, 0, -475); ((("f")), 100000000, 0, -476)], (0)), 100000000, 0, -482)]), ((Tag3 ((("fmt", 163)), [((("y")), 100000000, 0, -471); ((("b")), 100000000, 0, -472); ((("c")), 100000000, 0, -473); ((("d")), 100000000, 0, -474); ((("e")), 100000000, 0, -475); ((("f")), 100000000, 0, -476)], (0)), 100000000, 0, -470)), (("camlinternalFormatBasics.mli", 266, 11889, 11889), ("camlinternalFormatBasics.mli", 268, 11979, 12011), 0), 0, Tag1 ("CamlinternalFormatBasics", 120)); (("End_of_format", 125), (0), ((Tag3 ((("fmt", 163)), [((("f")), 100000000, 0, -484); ((("b")), 100000000, 0, -485); ((("c")), 100000000, 0, -486); ((("e")), 100000000, 0, -487); ((("e")), 100000000, 0, -487); ((("f")), 100000000, 0, -484)], (0)), 100000000, 0, -483)), (("camlinternalFormatBasics.mli", 270, 12013, 12013), ("camlinternalFormatBasics.mli", 271, 12031, 12065), 0), 0, Tag1 ("CamlinternalFormatBasics", 121))], 0), 1, 0, [63; 15; 15; 63; 15; 15], [0; 0; 0; 0; 0; 0], 0, 0, (("camlinternalFormatBasics.mli", 172, 7308, 7308), ("camlinternalFormatBasics.mli", 271, 12031, 12065), 0), 0, 0, 0, Tag1 ("CamlinternalFormatBasics", 75)), 2, 0); Tag1 (("ignored", 164), ([((("a")), 100000000, 0, -170); ((("b")), 100000000, 0, -171); ((("c")), 100000000, 0, -172); ((("d")), 100000000, 0, -173); ((("e")), 100000000, 0, -174); ((("f")), 100000000, 0, -175)], 6, Tag1 ([(("Ignored_char", 126), (0), ((Tag3 ((("ignored", 164)), [((("a")), 100000000, 0, -60); ((("b")), 100000000, 0, -61); ((("c")), 100000000, 0, -62); ((("d")), 100000000, 0, -63); ((("d")), 100000000, 0, -63); ((("a")), 100000000, 0, -60)], (0)), 100000000, 0, -59)), (("camlinternalFormatBasics.mli", 274, 12106, 12108), ("camlinternalFormatBasics.mli", 275, 12125, 12163), 0), 0, Tag1 ("CamlinternalFormatBasics", 122)); (("Ignored_caml_char", 127), (0), ((Tag3 ((("ignored", 164)), [((("a")), 100000000, 0, -65); ((("b")), 100000000, 0, -66); ((("c")), 100000000, 0, -67); ((("d")), 100000000, 0, -68); ((("d")), 100000000, 0, -68); ((("a")), 100000000, 0, -65)], (0)), 100000000, 0, -64)), (("camlinternalFormatBasics.mli", 276, 12164, 12166), ("camlinternalFormatBasics.mli", 277, 12188, 12226), 0), 0, Tag1 ("CamlinternalFormatBasics", 123)); (("Ignored_string", 128), ([(Tag3 ((("pad_option", 154)), 0, (0)), 100000000, 0, -74)]), ((Tag3 ((("ignored", 164)), [((("a")), 100000000, 0, -70); ((("b")), 100000000, 0, -71); ((("c")), 100000000, 0, -72); ((("d")), 100000000, 0, -73); ((("d")), 100000000, 0, -73); ((("a")), 100000000, 0, -70)], (0)), 100000000, 0, -69)), (("camlinternalFormatBasics.mli", 278, 12227, 12229), ("camlinternalFormatBasics.mli", 279, 12248, 12300), 0), 0, Tag1 ("CamlinternalFormatBasics", 124)); (("Ignored_caml_string", 129), ([(Tag3 ((("pad_option", 154)), 0, (0)), 100000000, 0, -80)]), ((Tag3 ((("ignored", 164)), [((("a")), 100000000, 0, -76); ((("b")), 100000000, 0, -77); ((("c")), 100000000, 0, -78); ((("d")), 100000000, 0, -79); ((("d")), 100000000, 0, -79); ((("a")), 100000000, 0, -76)], (0)), 100000000, 0, -75)), (("camlinternalFormatBasics.mli", 280, 12301, 12303), ("camlinternalFormatBasics.mli", 281, 12327, 12379), 0), 0, Tag1 ("CamlinternalFormatBasics", 125)); (("Ignored_int", 130), ([(Tag3 ((("int_conv", 147)), 0, (0)), 100000000, 0, -86); (Tag3 ((("pad_option", 154)), 0, (0)), 100000000, 0, -87)]), ((Tag3 ((("ignored", 164)), [((("a")), 100000000, 0, -82); ((("b")), 100000000, 0, -83); ((("c")), 100000000, 0, -84); ((("d")), 100000000, 0, -85); ((("d")), 100000000, 0, -85); ((("a")), 100000000, 0, -82)], (0)), 100000000, 0, -81)), (("camlinternalFormatBasics.mli", 282, 12380, 12382), ("camlinternalFormatBasics.mli", 283, 12398, 12461), 0), 0, Tag1 ("CamlinternalFormatBasics", 126)); (("Ignored_int32", 131), ([(Tag3 ((("int_conv", 147)), 0, (0)), 100000000, 0, -93); (Tag3 ((("pad_option", 154)), 0, (0)), 100000000, 0, -94)]), ((Tag3 ((("ignored", 164)), [((("a")), 100000000, 0, -89); ((("b")), 100000000, 0, -90); ((("c")), 100000000, 0, -91); ((("d")), 100000000, 0, -92); ((("d")), 100000000, 0, -92); ((("a")), 100000000, 0, -89)], (0)), 100000000, 0, -88)), (("camlinternalFormatBasics.mli", 284, 12462, 12464), ("camlinternalFormatBasics.mli", 285, 12482, 12545), 0), 0, Tag1 ("CamlinternalFormatBasics", 127)); (("Ignored_nativeint", 132), ([(Tag3 ((("int_conv", 147)), 0, (0)), 100000000, 0, -100); (Tag3 ((("pad_option", 154)), 0, (0)), 100000000, 0, -101)]), ((Tag3 ((("ignored", 164)), [((("a")), 100000000, 0, -96); ((("b")), 100000000, 0, -97); ((("c")), 100000000, 0, -98); ((("d")), 100000000, 0, -99); ((("d")), 100000000, 0, -99); ((("a")), 100000000, 0, -96)], (0)), 100000000, 0, -95)), (("camlinternalFormatBasics.mli", 286, 12546, 12548), ("camlinternalFormatBasics.mli", 287, 12570, 12633), 0), 0, Tag1 ("CamlinternalFormatBasics", 128)); (("Ignored_int64", 133), ([(Tag3 ((("int_conv", 147)), 0, (0)), 100000000, 0, -107); (Tag3 ((("pad_option", 154)), 0, (0)), 100000000, 0, -108)]), ((Tag3 ((("ignored", 164)), [((("a")), 100000000, 0, -103); ((("b")), 100000000, 0, -104); ((("c")), 100000000, 0, -105); ((("d")), 100000000, 0, -106); ((("d")), 100000000, 0, -106); ((("a")), 100000000, 0, -103)], (0)), 100000000, 0, -102)), (("camlinternalFormatBasics.mli", 288, 12634, 12636), ("camlinternalFormatBasics.mli", 289, 12654, 12717), 0), 0, Tag1 ("CamlinternalFormatBasics", 129)); (("Ignored_float", 134), ([(Tag3 ((("pad_option", 154)), 0, (0)), 100000000, 0, -114); (Tag3 ((("prec_option", 156)), 0, (0)), 100000000, 0, -115)]), ((Tag3 ((("ignored", 164)), [((("a")), 100000000, 0, -110); ((("b")), 100000000, 0, -111); ((("c")), 100000000, 0, -112); ((("d")), 100000000, 0, -113); ((("d")), 100000000, 0, -113); ((("a")), 100000000, 0, -110)], (0)), 100000000, 0, -109)), (("camlinternalFormatBasics.mli", 290, 12718, 12720), ("camlinternalFormatBasics.mli", 291, 12738, 12804), 0), 0, Tag1 ("CamlinternalFormatBasics", 130)); (("Ignored_bool", 135), ([(Tag3 ((("pad_option", 154)), 0, (0)), 100000000, 0, -121)]), ((Tag3 ((("ignored", 164)), [((("a")), 100000000, 0, -117); ((("b")), 100000000, 0, -118); ((("c")), 100000000, 0, -119); ((("d")), 100000000, 0, -120); ((("d")), 100000000, 0, -120); ((("a")), 100000000, 0, -117)], (0)), 100000000, 0, -116)), (("camlinternalFormatBasics.mli", 292, 12805, 12807), ("camlinternalFormatBasics.mli", 293, 12824, 12876), 0), 0, Tag1 ("CamlinternalFormatBasics", 131)); (("Ignored_format_arg", 136), ([(Tag3 ((("pad_option", 154)), 0, (0)), 100000000, 0, -127); (Tag3 ((("fmtty", 161)), [((("g")), 100000000, 0, -129); ((("h")), 100000000, 0, -130); ((("i")), 100000000, 0, -131); ((("j")), 100000000, 0, -132); ((("k")), 100000000, 0, -133); ((("l")), 100000000, 0, -134)], (0)), 100000000, 0, -128)]), ((Tag3 ((("ignored", 164)), [((("a")), 100000000, 0, -123); ((("b")), 100000000, 0, -124); ((("c")), 100000000, 0, -125); ((("d")), 100000000, 0, -126); ((("d")), 100000000, 0, -126); ((("a")), 100000000, 0, -123)], (0)), 100000000, 0, -122)), (("camlinternalFormatBasics.mli", 294, 12877, 12879), ("camlinternalFormatBasics.mli", 296, 12955, 12995), 0), 0, Tag1 ("CamlinternalFormatBasics", 132)); (("Ignored_format_subst", 137), ([(Tag3 ((("pad_option", 154)), 0, (0)), 100000000, 0, -142); (Tag3 ((("fmtty", 161)), [((("a")), 100000000, 0, -136); ((("b")), 100000000, 0, -137); ((("c")), 100000000, 0, -138); ((("d")), 100000000, 0, -139); ((("e")), 100000000, 0, -140); ((("f")), 100000000, 0, -141)], (0)), 100000000, 0, -143)]), ((Tag3 ((("ignored", 164)), [((("a")), 100000000, 0, -136); ((("b")), 100000000, 0, -137); ((("c")), 100000000, 0, -138); ((("d")), 100000000, 0, -139); ((("e")), 100000000, 0, -140); ((("f")), 100000000, 0, -141)], (0)), 100000000, 0, -135)), (("camlinternalFormatBasics.mli", 297, 12996, 12998), ("camlinternalFormatBasics.mli", 299, 13076, 13116), 0), 0, Tag1 ("CamlinternalFormatBasics", 133)); (("Ignored_reader", 138), (0), ((Tag3 ((("ignored", 164)), [((("a")), 100000000, 0, -145); ((("b")), 100000000, 0, -146); ((("c")), 100000000, 0, -147); (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -146), ((("x")), 100000000, 0, -151), 0), 100000000, 0, -150), ((("d")), 100000000, 0, -149), 0), 100000000, 0, -148); ((("d")), 100000000, 0, -149); ((("a")), 100000000, 0, -145)], (0)), 100000000, 0, -144)), (("camlinternalFormatBasics.mli", 300, 13117, 13119), ("camlinternalFormatBasics.mli", 301, 13138, 13190), 0), 0, Tag1 ("CamlinternalFormatBasics", 134)); (("Ignored_scan_char_set", 139), ([(Tag3 ((("pad_option", 154)), 0, (0)), 100000000, 0, -157); (Tag3 ((("char_set", 151)), 0, (0)), 100000000, 0, -158)]), ((Tag3 ((("ignored", 164)), [((("a")), 100000000, 0, -153); ((("b")), 100000000, 0, -154); ((("c")), 100000000, 0, -155); ((("d")), 100000000, 0, -156); ((("d")), 100000000, 0, -156); ((("a")), 100000000, 0, -153)], (0)), 100000000, 0, -152)), (("camlinternalFormatBasics.mli", 302, 13191, 13193), ("camlinternalFormatBasics.mli", 303, 13219, 13282), 0), 0, Tag1 ("CamlinternalFormatBasics", 135)); (("Ignored_scan_get_counter", 140), ([(Tag3 ((("counter", 152)), 0, (0)), 100000000, 0, -164)]), ((Tag3 ((("ignored", 164)), [((("a")), 100000000, 0, -160); ((("b")), 100000000, 0, -161); ((("c")), 100000000, 0, -162); ((("d")), 100000000, 0, -163); ((("d")), 100000000, 0, -163); ((("a")), 100000000, 0, -160)], (0)), 100000000, 0, -159)), (("camlinternalFormatBasics.mli", 304, 13283, 13285), ("camlinternalFormatBasics.mli", 305, 13314, 13363), 0), 0, Tag1 ("CamlinternalFormatBasics", 136)); (("Ignored_scan_next_char", 141), (0), ((Tag3 ((("ignored", 164)), [((("a")), 100000000, 0, -166); ((("b")), 100000000, 0, -167); ((("c")), 100000000, 0, -168); ((("d")), 100000000, 0, -169); ((("d")), 100000000, 0, -169); ((("a")), 100000000, 0, -166)], (0)), 100000000, 0, -165)), (("camlinternalFormatBasics.mli", 306, 13364, 13366), ("camlinternalFormatBasics.mli", 307, 13393, 13431), 0), 0, Tag1 ("CamlinternalFormatBasics", 137))], 0), 1, 0, [63; 15; 15; 63; 15; 15], [0; 0; 0; 0; 0; 0], 0, 0, (("camlinternalFormatBasics.mli", 273, 12067, 12067), ("camlinternalFormatBasics.mli", 307, 13393, 13431), 0), 0, 0, 0, Tag1 ("CamlinternalFormatBasics", 76)), 2, 0); Tag1 (("format6", 165), ([((("a")), 100000000, 0, -52); ((("b")), 100000000, 0, -53); ((("c")), 100000000, 0, -54); ((("d")), 100000000, 0, -55); ((("e")), 100000000, 0, -56); ((("f")), 100000000, 0, -57)], 6, Tag1 ([(("Format", 142), ([(Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -52); ((("b")), 100000000, 0, -53); ((("c")), 100000000, 0, -54); ((("d")), 100000000, 0, -55); ((("e")), 100000000, 0, -56); ((("f")), 100000000, 0, -57)], (0)), 100000000, 0, -51); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -58)]), 0, (("camlinternalFormatBasics.mli", 310, 13472, 13474), ("camlinternalFormatBasics.mli", 310, 13472, 13521), 0), 0, Tag1 ("CamlinternalFormatBasics", 138))], 0), 1, 0, [63; 15; 15; 63; 15; 15], [0; 0; 0; 0; 0; 0], 0, 0, (("camlinternalFormatBasics.mli", 309, 13433, 13433), ("camlinternalFormatBasics.mli", 310, 13472, 13521), 0), 0, 0, 0, Tag1 ("CamlinternalFormatBasics", 77)), 2, 0); (("concat_fmtty", 166), ((Tag1 (0, (Tag3 ((("fmtty_rel", 162)), [((("g1")), 100000000, 0, -33); ((("b1")), 100000000, 0, -34); ((("c1")), 100000000, 0, -35); ((("j1")), 100000000, 0, -36); ((("d1")), 100000000, 0, -47); ((("a1")), 100000000, 0, -46); ((("g2")), 100000000, 0, -39); ((("b2")), 100000000, 0, -40); ((("c2")), 100000000, 0, -41); ((("j2")), 100000000, 0, -42); ((("d2")), 100000000, 0, -49); ((("a2")), 100000000, 0, -48)], (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 ((("fmtty_rel", 162)), [((("a1")), 100000000, 0, -46); ((("b1")), 100000000, 0, -34); ((("c1")), 100000000, 0, -35); ((("d1")), 100000000, 0, -47); ((("e1")), 100000000, 0, -37); ((("f1")), 100000000, 0, -38); ((("a2")), 100000000, 0, -48); ((("b2")), 100000000, 0, -40); ((("c2")), 100000000, 0, -41); ((("d2")), 100000000, 0, -49); ((("e2")), 100000000, 0, -43); ((("f2")), 100000000, 0, -44)], (0)), 100000000, 0, -45), (Tag3 ((("fmtty_rel", 162)), [((("g1")), 100000000, 0, -33); ((("b1")), 100000000, 0, -34); ((("c1")), 100000000, 0, -35); ((("j1")), 100000000, 0, -36); ((("e1")), 100000000, 0, -37); ((("f1")), 100000000, 0, -38); ((("g2")), 100000000, 0, -39); ((("b2")), 100000000, 0, -40); ((("c2")), 100000000, 0, -41); ((("j2")), 100000000, 0, -42); ((("e2")), 100000000, 0, -43); ((("f2")), 100000000, 0, -44)], (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("camlinternalFormatBasics.mli", 312, 13523, 13523), ("camlinternalFormatBasics.mli", 318, 13733, 13775), 0), 0, Tag1 ("CamlinternalFormatBasics", 139)), 0); (("erase_rel", 167), ((Tag1 (0, (Tag3 ((("fmtty_rel", 162)), [((("a")), 100000000, 0, -17); ((("b")), 100000000, 0, -18); ((("c")), 100000000, 0, -19); ((("d")), 100000000, 0, -20); ((("e")), 100000000, 0, -21); ((("f")), 100000000, 0, -22); ((("g")), 100000000, 0, -24); ((("h")), 100000000, 0, -25); ((("i")), 100000000, 0, -26); ((("j")), 100000000, 0, -27); ((("k")), 100000000, 0, -28); ((("l")), 100000000, 0, -29)], (0)), 100000000, 0, -23), (Tag3 ((("fmtty", 161)), [((("a")), 100000000, 0, -17); ((("b")), 100000000, 0, -18); ((("c")), 100000000, 0, -19); ((("d")), 100000000, 0, -20); ((("e")), 100000000, 0, -21); ((("f")), 100000000, 0, -22)], (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("camlinternalFormatBasics.mli", 320, 13777, 13777), ("camlinternalFormatBasics.mli", 322, 13820, 13890), 0), 0, Tag1 ("CamlinternalFormatBasics", 140)), 0); (("concat_fmt", 168), ((Tag1 (0, (Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -5); ((("b")), 100000000, 0, -6); ((("c")), 100000000, 0, -7); ((("d")), 100000000, 0, -8); ((("e")), 100000000, 0, -13); ((("f")), 100000000, 0, -12)], (0)), 100000000, 0, -14), (Tag1 (0, (Tag3 ((("fmt", 163)), [((("f")), 100000000, 0, -12); ((("b")), 100000000, 0, -6); ((("c")), 100000000, 0, -7); ((("e")), 100000000, 0, -13); ((("g")), 100000000, 0, -9); ((("h")), 100000000, 0, -10)], (0)), 100000000, 0, -11), (Tag3 ((("fmt", 163)), [((("a")), 100000000, 0, -5); ((("b")), 100000000, 0, -6); ((("c")), 100000000, 0, -7); ((("d")), 100000000, 0, -8); ((("g")), 100000000, 0, -9); ((("h")), 100000000, 0, -10)], (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("camlinternalFormatBasics.mli", 324, 13892, 13892), ("camlinternalFormatBasics.mli", 327, 13981, 14013), 0), 0, Tag1 ("CamlinternalFormatBasics", 141)), 0)], "CamlinternalFormatBasics", [("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
('f, 'b, 'c, 'e, 'g, 'h) fmt -> ('a, 'b, 'c, 'd, 'g, 'h) fmt
