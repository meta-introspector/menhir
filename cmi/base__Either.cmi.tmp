type ('f, 's) t = ('f, 's) Base__.Either0.t = First of 'f | Second of 's
val compare :
  'a Base__Ppx_compare_lib.compare ->
  'b Base__Ppx_compare_lib.compare ->
  ('a, 'b) t Base__Ppx_compare_lib.compare
val hash_fold_t :
  'a Base__Ppx_hash_lib.hash_fold ->
  'b Base__Ppx_hash_lib.hash_fold -> ('a, 'b) t Base__Ppx_hash_lib.hash_fold
val t_of_sexp :
  (Sexplib0__.Sexp.t -> 'a) ->
  (Sexplib0__.Sexp.t -> 'b) -> Sexplib0__.Sexp.t -> ('a, 'b) t
val sexp_of_t :
  ('a -> Sexplib0__.Sexp.t) ->
  ('b -> Sexplib0__.Sexp.t) -> ('a, 'b) t -> Sexplib0__.Sexp.t
val t_sexp_grammar :
  'f Sexplib0.Sexp_grammar.t ->
  's Sexplib0.Sexp_grammar.t -> ('f, 's) t Sexplib0.Sexp_grammar.t
val invariant :
  'a Base__Invariant_intf.inv ->
  'b Base__Invariant_intf.inv -> ('a, 'b) t Base__Invariant_intf.inv
val swap : ('f, 's) t -> ('s, 'f) t
val value : ('a, 'a) t -> 'a
val iter : ('a, 'b) t -> first:('a -> unit) -> second:('b -> unit) -> unit
val value_map : ('a, 'b) t -> first:('a -> 'c) -> second:('b -> 'c) -> 'c
val map : ('a, 'b) t -> first:('a -> 'c) -> second:('b -> 'd) -> ('c, 'd) t
val equal :
  ('f -> 'f -> bool) ->
  ('s -> 's -> bool) -> ('f, 's) t -> ('f, 's) t -> bool
module type Focused = Base__Either_intf.Focused
module First :
  sig
    type ('a, 'b) t = ('a, 'b) t/2
    val ( >>= ) : ('a, 'e) t -> ('a -> ('b, 'e) t) -> ('b, 'e) t
    module Let_syntax :
      sig
        val return : 'a -> ('a, 'b) t
        val ( >>= ) : ('a, 'e) t -> ('a -> ('b, 'e) t) -> ('b, 'e) t
        val ( >>| ) : ('a, 'e) t -> ('a -> 'b) -> ('b, 'e) t
        module Let_syntax :
          sig
            val return : 'a -> ('a, 'b) t
            val bind : ('a, 'e) t -> f:('a -> ('b, 'e) t) -> ('b, 'e) t
            val map : ('a, 'e) t -> f:('a -> 'b) -> ('b, 'e) t
            val both : ('a, 'e) t -> ('b, 'e) t -> ('a * 'b, 'e) t
            module Open_on_rhs : sig end
          end
      end
    module Monad_infix :
      sig
        val ( >>= ) : ('a, 'e) t -> ('a -> ('b, 'e) t) -> ('b, 'e) t
        val ( >>| ) : ('a, 'e) t -> ('a -> 'b) -> ('b, 'e) t
      end
    val bind : ('a, 'e) t -> f:('a -> ('b, 'e) t) -> ('b, 'e) t
    val join : (('a, 'e) t, 'e) t -> ('a, 'e) t
    val ignore_m : ('a, 'e) t -> (unit, 'e) t
    val return : 'a -> ('a, 'b) t
    val map : ('a, 'e) t -> f:('a -> 'b) -> ('b, 'e) t
    val both : ('a, 'e) t -> ('b, 'e) t -> ('a * 'b, 'e) t
    val ( <*> ) : ('a -> 'b, 'e) t -> ('a, 'e) t -> ('b, 'e) t
    val ( <* ) : ('a, 'e) t -> (unit, 'e) t -> ('a, 'e) t
    val ( *> ) : (unit, 'e) t -> ('a, 'e) t -> ('a, 'e) t
    val ( >>| ) : ('a, 'e) t -> ('a -> 'b) -> ('b, 'e) t
    val apply : ('a -> 'b, 'e) t -> ('a, 'e) t -> ('b, 'e) t
    val map2 : ('a, 'e) t -> ('b, 'e) t -> f:('a -> 'b -> 'c) -> ('c, 'e) t
    val map3 :
      ('a, 'e) t ->
      ('b, 'e) t -> ('c, 'e) t -> f:('a -> 'b -> 'c -> 'd) -> ('d, 'e) t
    val all : ('a, 'e) t list -> ('a list, 'e) t
    val all_unit : (unit, 'e) t list -> (unit, 'e) t
    module Applicative_infix :
      sig
        val ( <*> ) : ('a -> 'b, 'e) t -> ('a, 'e) t -> ('b, 'e) t
        val ( <* ) : ('a, 'e) t -> (unit, 'e) t -> ('a, 'e) t
        val ( *> ) : (unit, 'e) t -> ('a, 'e) t -> ('a, 'e) t
        val ( >>| ) : ('a, 'e) t -> ('a -> 'b) -> ('b, 'e) t
      end
    val value : ('a, 'b) t -> default:'a -> 'a
    val to_option : ('a, 'b) t -> 'a option
    val with_return : ('a Base__.With_return.return -> 'b) -> ('a, 'b) t
    val combine :
      ('a, 'd) t ->
      ('b, 'd) t ->
      f:('a -> 'b -> 'c) -> other:('d -> 'd -> 'd) -> ('c, 'd) t
    val combine_all :
      ('a, 'b) t list -> f:('b -> 'b -> 'b) -> ('a list, 'b) t
    val combine_all_unit :
      (unit, 'b) t list -> f:('b -> 'b -> 'b) -> (unit, 'b) t
  end
module Second :
  sig
    type ('a, 'b) t = ('b, 'a) t/2
    val ( >>= ) : ('a, 'e) t -> ('a -> ('b, 'e) t) -> ('b, 'e) t
    module Let_syntax :
      sig
        val return : 'a -> ('a, 'b) t
        val ( >>= ) : ('a, 'e) t -> ('a -> ('b, 'e) t) -> ('b, 'e) t
        val ( >>| ) : ('a, 'e) t -> ('a -> 'b) -> ('b, 'e) t
        module Let_syntax :
          sig
            val return : 'a -> ('a, 'b) t
            val bind : ('a, 'e) t -> f:('a -> ('b, 'e) t) -> ('b, 'e) t
            val map : ('a, 'e) t -> f:('a -> 'b) -> ('b, 'e) t
            val both : ('a, 'e) t -> ('b, 'e) t -> ('a * 'b, 'e) t
            module Open_on_rhs : sig end
          end
      end
    module Monad_infix :
      sig
        val ( >>= ) : ('a, 'e) t -> ('a -> ('b, 'e) t) -> ('b, 'e) t
        val ( >>| ) : ('a, 'e) t -> ('a -> 'b) -> ('b, 'e) t
      end
    val bind : ('a, 'e) t -> f:('a -> ('b, 'e) t) -> ('b, 'e) t
    val join : (('a, 'e) t, 'e) t -> ('a, 'e) t
    val ignore_m : ('a, 'e) t -> (unit, 'e) t
    val return : 'a -> ('a, 'b) t
    val map : ('a, 'e) t -> f:('a -> 'b) -> ('b, 'e) t
    val both : ('a, 'e) t -> ('b, 'e) t -> ('a * 'b, 'e) t
    val ( <*> ) : ('a -> 'b, 'e) t -> ('a, 'e) t -> ('b, 'e) t
    val ( <* ) : ('a, 'e) t -> (unit, 'e) t -> ('a, 'e) t
    val ( *> ) : (unit, 'e) t -> ('a, 'e) t -> ('a, 'e) t
    val ( >>| ) : ('a, 'e) t -> ('a -> 'b) -> ('b, 'e) t
    val apply : ('a -> 'b, 'e) t -> ('a, 'e) t -> ('b, 'e) t
    val map2 : ('a, 'e) t -> ('b, 'e) t -> f:('a -> 'b -> 'c) -> ('c, 'e) t
    val map3 :
      ('a, 'e) t ->
      ('b, 'e) t -> ('c, 'e) t -> f:('a -> 'b -> 'c -> 'd) -> ('d, 'e) t
    val all : ('a, 'e) t list -> ('a list, 'e) t
    val all_unit : (unit, 'e) t list -> (unit, 'e) t
    module Applicative_infix :
      sig
        val ( <*> ) : ('a -> 'b, 'e) t -> ('a, 'e) t -> ('b, 'e) t
        val ( <* ) : ('a, 'e) t -> (unit, 'e) t -> ('a, 'e) t
        val ( *> ) : (unit, 'e) t -> ('a, 'e) t -> ('a, 'e) t
        val ( >>| ) : ('a, 'e) t -> ('a -> 'b) -> ('b, 'e) t
      end
    val value : ('a, 'b) t -> default:'a -> 'a
    val to_option : ('a, 'b) t -> 'a option
    val with_return : ('a Base__.With_return.return -> 'b) -> ('a, 'b) t
    val combine :
      ('a, 'd) t ->
      ('b, 'd) t ->
      f:('a -> 'b -> 'c) -> other:('d -> 'd -> 'd) -> ('c, 'd) t
    val combine_all :
      ('a, 'b) t list -> f:('b -> 'b -> 'b) -> ('a list, 'b) t
    val combine_all_unit :
      (unit, 'b) t list -> f:('b -> 'b -> 'b) -> (unit, 'b) t
  end
val is_first : ('a, 'b) t -> bool
val is_second : ('a, 'b) t -> bool
val first : 'f -> ('f, 'a) t
val second : 's -> ('a, 's) t
module Export :
  ("DEBUG:rule", [Tag1 (("t", 746), ([((("f")), 100000000, 0, -129); ((("s")), 100000000, 0, -130)], 2, Tag1 ([(("First", 1373), ([((("f")), 100000000, 0, -129)]), 0, (("src/either_intf.ml", 35, 1178, 1182), ("src/either_intf.ml", 35, 1178, 1195), 0), 0, Tag1 ("Base__Either_intf", 11)); (("Second", 1374), ([((("s")), 100000000, 0, -130)]), 0, (("src/either_intf.ml", 36, 1196, 1200), ("src/either_intf.ml", 36, 1196, 1214), 0), 0, Tag1 ("Base__Either_intf", 12))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Either0"), "t"), [((("f")), 100000000, 0, -129); ((("s")), 100000000, 0, -130)], (0)), 100000000, 0, -128)), [25; 25], [0; 0], 0, 0, (("src/either_intf.ml", 34, 1137, 1139), ("src/either_intf.ml", 37, 1215, 1270), 0), [(("deriving_inline", (("src/either_intf.ml", 37, 1215, 1220), ("src/either_intf.ml", 37, 1215, 1235), 0)), ([([(Tag8 ([(((("compare"), (("src/either_intf.ml", 37, 1215, 1236), ("src/either_intf.ml", 37, 1215, 1243), 0))), (("src/either_intf.ml", 37, 1215, 1236), ("src/either_intf.ml", 37, 1215, 1243), 0), 0, 0); (((("hash"), (("src/either_intf.ml", 37, 1215, 1245), ("src/either_intf.ml", 37, 1215, 1249), 0))), (("src/either_intf.ml", 37, 1215, 1245), ("src/either_intf.ml", 37, 1215, 1249), 0), 0, 0); (((("sexp"), (("src/either_intf.ml", 37, 1215, 1251), ("src/either_intf.ml", 37, 1215, 1255), 0))), (("src/either_intf.ml", 37, 1215, 1251), ("src/either_intf.ml", 37, 1215, 1255), 0), 0, 0); (((("sexp_grammar"), (("src/either_intf.ml", 37, 1215, 1257), ("src/either_intf.ml", 37, 1215, 1269), 0))), (("src/either_intf.ml", 37, 1215, 1257), ("src/either_intf.ml", 37, 1215, 1269), 0), 0, 0)]), (("src/either_intf.ml", 37, 1215, 1236), ("src/either_intf.ml", 37, 1215, 1269), 0), 0, 0)], (("src/either_intf.ml", 37, 1215, 1236), ("src/either_intf.ml", 37, 1215, 1269), 0))]), (("src/either_intf.ml", 37, 1215, 1217), ("src/either_intf.ml", 37, 1215, 1270), 0))], 0, 0, Tag1 ("Base__Either_intf", 10)), 1, 0); (("compare", 747), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [((("a")), 100000000, 0, -124)], (0)), 100000000, 0, -127), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [((("b")), 100000000, 0, -125)], (0)), 100000000, 0, -126), (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((("t", 746)), [((("a")), 100000000, 0, -124); ((("b")), 100000000, 0, -125)], (0)), 100000000, 0, -123)], (0)), 100000000, 0, -122), 0), 100000000, 0, -121), 0), 100000000, 0, -120), 0, (("src/either_intf.ml", 39, 1272, 1282), ("src/either_intf.ml", 39, 1272, 1346), 0), 0, Tag1 ("Base__Ppx_compare_lib", 11)), 0); (("hash_fold_t", 748), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "hash_fold"), [((("a")), 100000000, 0, -116)], (0)), 100000000, 0, -119), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "hash_fold"), [((("b")), 100000000, 0, -117)], (0)), 100000000, 0, -118), (Tag3 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "hash_fold"), [(Tag3 ((("t", 746)), [((("a")), 100000000, 0, -116); ((("b")), 100000000, 0, -117)], (0)), 100000000, 0, -115)], (0)), 100000000, 0, -114), 0), 100000000, 0, -113), 0), 100000000, 0, -112), 0, (("src/either_intf.ml", 40, 1347, 1357), ("src/either_intf.ml", 40, 1347, 1416), 0), 0, Tag1 ("Base__Ppx_hash_lib", 11)), 0); (("t_of_sexp", 749), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -111), ((("a")), 100000000, 0, -105), 0), 100000000, 0, -110), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -109), ((("b")), 100000000, 0, -106), 0), 100000000, 0, -108), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -107), (Tag3 ((("t", 746)), [((("a")), 100000000, 0, -105); ((("b")), 100000000, 0, -106)], (0)), 100000000, 0, -104), 0), 100000000, 0, -103), 0), 100000000, 0, -102), 0), 100000000, 0, -101), 0, (("src/either_intf.ml", 41, 1417, 1427), ("src/either_intf.ml", 41, 1417, 1482), 0), 0, Tag1 ("Sexplib0__Sexpable", 9)), 0); (("sexp_of_t", 750), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -95), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -100), 0), 100000000, 0, -99), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -96), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -98), 0), 100000000, 0, -97), (Tag1 (0, (Tag3 ((("t", 746)), [((("a")), 100000000, 0, -95); ((("b")), 100000000, 0, -96)], (0)), 100000000, 0, -94), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -93), 0), 100000000, 0, -92), 0), 100000000, 0, -91), 0), 100000000, 0, -90), 0, (("src/either_intf.ml", 41, 1417, 1427), ("src/either_intf.ml", 41, 1417, 1482), 0), 0, Tag1 ("Sexplib0__Sexpable", 10)), 0); (("t_sexp_grammar", 751), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [((("f")), 100000000, 0, -86)], (0)), 100000000, 0, -89), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [((("s")), 100000000, 0, -87)], (0)), 100000000, 0, -88), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [(Tag3 ((("t", 746)), [((("f")), 100000000, 0, -86); ((("s")), 100000000, 0, -87)], (0)), 100000000, 0, -85)], (0)), 100000000, 0, -84), 0), 100000000, 0, -83), 0), 100000000, 0, -82), 0, (("src/either_intf.ml", 43, 1484, 1486), ("src/either_intf.ml", 46, 1573, 1614), 0), 0, Tag1 ("Base__Either_intf", 17)), 0); (("invariant", 752), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Invariant_intf")), "inv"), [((("a")), 100000000, 0, -78)], (0)), 100000000, 0, -81), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Invariant_intf")), "inv"), [((("b")), 100000000, 0, -79)], (0)), 100000000, 0, -80), (Tag3 (Tag1 ((Tag2 ("Base__Invariant_intf")), "inv"), [(Tag3 ((("t", 746)), [((("a")), 100000000, 0, -78); ((("b")), 100000000, 0, -79)], (0)), 100000000, 0, -77)], (0)), 100000000, 0, -76), 0), 100000000, 0, -75), 0), 100000000, 0, -74), 0, (("src/either_intf.ml", 50, 1628, 1638), ("src/either_intf.ml", 50, 1628, 1685), 0), 0, Tag1 ("Base__Invariant_intf", 9)), 0); (("swap", 753), ((Tag1 (0, (Tag3 ((("t", 746)), [((("f")), 100000000, 0, -72); ((("s")), 100000000, 0, -71)], (0)), 100000000, 0, -73), (Tag3 ((("t", 746)), [((("s")), 100000000, 0, -71); ((("f")), 100000000, 0, -72)], (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0, (("src/either_intf.ml", 52, 1687, 1689), ("src/either_intf.ml", 52, 1687, 1724), 0), 0, Tag1 ("Base__Either_intf", 19)), 0); (("value", 754), ((Tag1 (0, (Tag3 ((("t", 746)), [((("a")), 100000000, 0, -67); ((("a")), 100000000, 0, -67)], (0)), 100000000, 0, -68), ((("a")), 100000000, 0, -67), 0), 100000000, 0, -66), 0, (("src/either_intf.ml", 53, 1725, 1727), ("src/either_intf.ml", 53, 1725, 1755), 0), 0, Tag1 ("Base__Either_intf", 20)), 0); (("iter", 755), ((Tag1 (0, (Tag3 ((("t", 746)), [((("a")), 100000000, 0, -64); ((("b")), 100000000, 0, -61)], (0)), 100000000, 0, -65), (Tag1 (("first"), (Tag1 (0, ((("a")), 100000000, 0, -64), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -63), 0), 100000000, 0, -62), (Tag1 (("second"), (Tag1 (0, ((("b")), 100000000, 0, -61), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -60), 0), 100000000, 0, -59), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), 0), 100000000, 0, -55), 0, (("src/either_intf.ml", 55, 1757, 1759), ("src/either_intf.ml", 59, 1859, 1870), 0), 0, Tag1 ("Base__Either_intf", 21)), 0); (("value_map", 756), ((Tag1 (0, (Tag3 ((("t", 746)), [((("a")), 100000000, 0, -53); ((("b")), 100000000, 0, -51)], (0)), 100000000, 0, -54), (Tag1 (("first"), (Tag1 (0, ((("a")), 100000000, 0, -53), ((("c")), 100000000, 0, -49), 0), 100000000, 0, -52), (Tag1 (("second"), (Tag1 (0, ((("b")), 100000000, 0, -51), ((("c")), 100000000, 0, -49), 0), 100000000, 0, -50), ((("c")), 100000000, 0, -49), 0), 100000000, 0, -48), 0), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("src/either_intf.ml", 61, 1872, 1874), ("src/either_intf.ml", 65, 1975, 1984), 0), 0, Tag1 ("Base__Either_intf", 22)), 0); (("map", 757), ((Tag1 (0, (Tag3 ((("t", 746)), [((("a")), 100000000, 0, -44); ((("b")), 100000000, 0, -42)], (0)), 100000000, 0, -45), (Tag1 (("first"), (Tag1 (0, ((("a")), 100000000, 0, -44), ((("c")), 100000000, 0, -39), 0), 100000000, 0, -43), (Tag1 (("second"), (Tag1 (0, ((("b")), 100000000, 0, -42), ((("d")), 100000000, 0, -40), 0), 100000000, 0, -41), (Tag3 ((("t", 746)), [((("c")), 100000000, 0, -39); ((("d")), 100000000, 0, -40)], (0)), 100000000, 0, -38), 0), 100000000, 0, -37), 0), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("src/either_intf.ml", 67, 1986, 1988), ("src/either_intf.ml", 71, 2083, 2100), 0), 0, Tag1 ("Base__Either_intf", 23)), 0); (("equal", 758), ((Tag1 (0, (Tag1 (0, ((("f")), 100000000, 0, -26), (Tag1 (0, ((("f")), 100000000, 0, -26), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -34), 0), 100000000, 0, -33), 0), 100000000, 0, -32), (Tag1 (0, (Tag1 (0, ((("s")), 100000000, 0, -27), (Tag1 (0, ((("s")), 100000000, 0, -27), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), (Tag1 (0, (Tag3 ((("t", 746)), [((("f")), 100000000, 0, -26); ((("s")), 100000000, 0, -27)], (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 ((("t", 746)), [((("f")), 100000000, 0, -26); ((("s")), 100000000, 0, -27)], (0)), 100000000, 0, -25), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("src/either_intf.ml", 73, 2102, 2104), ("src/either_intf.ml", 73, 2102, 2192), 0), 0, Tag1 ("Base__Either_intf", 24)), 0); Tag4 (("Focused", 759), (((Tag1 ((Tag2 ("Base__Either_intf")), "Focused"))), 0, (("src/either_intf.ml", 75, 2194, 2196), ("src/either_intf.ml", 75, 2194, 2225), 0), Tag1 ("Base__Either_intf", 25)), 0); Tag3 (("First", 760), 0, (Tag1 ([Tag1 (("t", 767), ([((("a")), 100000000, 0, -318); ((("b")), 100000000, 0, -319)], 2, 0, 1, ((Tag3 ((("t", 746)), [((("a")), 100000000, 0, -318); ((("b")), 100000000, 0, -319)], (0)), 100000000, 0, -317)), [25; 25], [0; 0], 0, 0, (("src/either_intf.ml", 77, 2227, 2257), ("src/either_intf.ml", 77, 2227, 2285), 0), 0, 0, 0, Tag1 ("Base__Either_intf", 26)), 1, 0); ((">>=", 768), ((Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -315); ((("e")), 100000000, 0, -312)], (0)), 100000000, 0, -316), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -315), (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -311); ((("e")), 100000000, 0, -312)], (0)), 100000000, 0, -314), 0), 100000000, 0, -313), (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -311); ((("e")), 100000000, 0, -312)], (0)), 100000000, 0, -310), 0), 100000000, 0, -309), 0), 100000000, 0, -308), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 81)), 0); Tag3 (("Let_syntax", 769), 0, (Tag1 ([(("return", 793), ((Tag1 (0, ((("a")), 100000000, 0, -339), (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -339); ((0), 100000000, 0, -340)], (0)), 100000000, 0, -338), 0), 100000000, 0, -337), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 91)), 0); ((">>=", 794), ((Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -335); ((("e")), 100000000, 0, -332)], (0)), 100000000, 0, -336), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -335), (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -331); ((("e")), 100000000, 0, -332)], (0)), 100000000, 0, -334), 0), 100000000, 0, -333), (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -331); ((("e")), 100000000, 0, -332)], (0)), 100000000, 0, -330), 0), 100000000, 0, -329), 0), 100000000, 0, -328), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 81)), 0); ((">>|", 795), ((Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -326); ((("e")), 100000000, 0, -324)], (0)), 100000000, 0, -327), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -326), ((("b")), 100000000, 0, -323), 0), 100000000, 0, -325), (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -323); ((("e")), 100000000, 0, -324)], (0)), 100000000, 0, -322), 0), 100000000, 0, -321), 0), 100000000, 0, -320), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 82)), 0); Tag3 (("Let_syntax", 796), 0, (Tag1 ([(("return", 797), ((Tag1 (0, ((("a")), 100000000, 0, -369), (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -369); ((0), 100000000, 0, -370)], (0)), 100000000, 0, -368), 0), 100000000, 0, -367), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 94)), 0); (("bind", 798), ((Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -365); ((("e")), 100000000, 0, -362)], (0)), 100000000, 0, -366), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -365), (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -361); ((("e")), 100000000, 0, -362)], (0)), 100000000, 0, -364), 0), 100000000, 0, -363), (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -361); ((("e")), 100000000, 0, -362)], (0)), 100000000, 0, -360), 0), 100000000, 0, -359), 0), 100000000, 0, -358), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 95)), 0); (("map", 799), ((Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -356); ((("e")), 100000000, 0, -354)], (0)), 100000000, 0, -357), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -356), ((("b")), 100000000, 0, -353), 0), 100000000, 0, -355), (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -353); ((("e")), 100000000, 0, -354)], (0)), 100000000, 0, -352), 0), 100000000, 0, -351), 0), 100000000, 0, -350), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 96)), 0); (("both", 800), ((Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -345); ((("e")), 100000000, 0, -347)], (0)), 100000000, 0, -349), (Tag1 (0, (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -346); ((("e")), 100000000, 0, -347)], (0)), 100000000, 0, -348), (Tag3 ((("t", 767)), [(Tag2 ([((("a")), 100000000, 0, -345); ((("b")), 100000000, 0, -346)]), 100000000, 0, -344); ((("e")), 100000000, 0, -347)], (0)), 100000000, 0, -343), 0), 100000000, 0, -342), 0), 100000000, 0, -341), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 97)), 0); Tag3 (("Open_on_rhs", 801), 0, (Tag1 (0), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), Tag1 ("Base__Monad_intf", 98)), 0, 0)]), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), Tag1 ("Base__Monad_intf", 99)), 0, 0)]), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), Tag1 ("Base__Monad_intf", 100)), 0, 0); Tag3 (("Monad_infix", 770), 0, (Tag1 ([((">>=", 802), ((Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -386); ((("e")), 100000000, 0, -383)], (0)), 100000000, 0, -387), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -386), (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -382); ((("e")), 100000000, 0, -383)], (0)), 100000000, 0, -385), 0), 100000000, 0, -384), (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -382); ((("e")), 100000000, 0, -383)], (0)), 100000000, 0, -381), 0), 100000000, 0, -380), 0), 100000000, 0, -379), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 81)), 0); ((">>|", 803), ((Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -377); ((("e")), 100000000, 0, -375)], (0)), 100000000, 0, -378), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -377), ((("b")), 100000000, 0, -374), 0), 100000000, 0, -376), (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -374); ((("e")), 100000000, 0, -375)], (0)), 100000000, 0, -373), 0), 100000000, 0, -372), 0), 100000000, 0, -371), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 82)), 0)]), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), Tag1 ("Base__Monad_intf", 118)), 0, 0); (("bind", 771), ((Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -306); ((("e")), 100000000, 0, -303)], (0)), 100000000, 0, -307), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -306), (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -302); ((("e")), 100000000, 0, -303)], (0)), 100000000, 0, -305), 0), 100000000, 0, -304), (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -302); ((("e")), 100000000, 0, -303)], (0)), 100000000, 0, -301), 0), 100000000, 0, -300), 0), 100000000, 0, -299), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 119)), 0); (("join", 772), ((Tag1 (0, (Tag3 ((("t", 767)), [(Tag3 ((("t", 767)), [((("a")), 100000000, 0, -295); ((("e")), 100000000, 0, -296)], (0)), 100000000, 0, -298); ((("e")), 100000000, 0, -296)], (0)), 100000000, 0, -297), (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -295); ((("e")), 100000000, 0, -296)], (0)), 100000000, 0, -294), 0), 100000000, 0, -293), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 122)), 0); (("ignore_m", 773), ((Tag1 (0, (Tag3 ((("t", 767)), [((0), 100000000, 0, -292); ((("e")), 100000000, 0, -290)], (0)), 100000000, 0, -291), (Tag3 ((("t", 767)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -289); ((("e")), 100000000, 0, -290)], (0)), 100000000, 0, -288), 0), 100000000, 0, -287), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 123)), 0); (("return", 774), ((Tag1 (0, ((("a")), 100000000, 0, -285), (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -285); ((0), 100000000, 0, -286)], (0)), 100000000, 0, -284), 0), 100000000, 0, -283), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 113)), 0); (("map", 775), ((Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -281); ((("e")), 100000000, 0, -279)], (0)), 100000000, 0, -282), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -281), ((("b")), 100000000, 0, -278), 0), 100000000, 0, -280), (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -278); ((("e")), 100000000, 0, -279)], (0)), 100000000, 0, -277), 0), 100000000, 0, -276), 0), 100000000, 0, -275), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 114)), 0); (("both", 776), ((Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -270); ((("e")), 100000000, 0, -272)], (0)), 100000000, 0, -274), (Tag1 (0, (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -271); ((("e")), 100000000, 0, -272)], (0)), 100000000, 0, -273), (Tag3 ((("t", 767)), [(Tag2 ([((("a")), 100000000, 0, -270); ((("b")), 100000000, 0, -271)]), 100000000, 0, -269); ((("e")), 100000000, 0, -272)], (0)), 100000000, 0, -268), 0), 100000000, 0, -267), 0), 100000000, 0, -266), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 115)), 0); (("<*>", 777), ((Tag1 (0, (Tag3 ((("t", 767)), [(Tag1 (0, ((("a")), 100000000, 0, -263), ((("b")), 100000000, 0, -260), 0), 100000000, 0, -265); ((("e")), 100000000, 0, -261)], (0)), 100000000, 0, -264), (Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -263); ((("e")), 100000000, 0, -261)], (0)), 100000000, 0, -262), (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -260); ((("e")), 100000000, 0, -261)], (0)), 100000000, 0, -259), 0), 100000000, 0, -258), 0), 100000000, 0, -257), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 101)), 0); (("<*", 778), ((Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -252); ((("e")), 100000000, 0, -253)], (0)), 100000000, 0, -256), (Tag1 (0, (Tag3 ((("t", 767)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -255); ((("e")), 100000000, 0, -253)], (0)), 100000000, 0, -254), (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -252); ((("e")), 100000000, 0, -253)], (0)), 100000000, 0, -251), 0), 100000000, 0, -250), 0), 100000000, 0, -249), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 102)), 0); (("*>", 779), ((Tag1 (0, (Tag3 ((("t", 767)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -248); ((("e")), 100000000, 0, -245)], (0)), 100000000, 0, -247), (Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -244); ((("e")), 100000000, 0, -245)], (0)), 100000000, 0, -246), (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -244); ((("e")), 100000000, 0, -245)], (0)), 100000000, 0, -243), 0), 100000000, 0, -242), 0), 100000000, 0, -241), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 103)), 0); ((">>|", 780), ((Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -239); ((("e")), 100000000, 0, -237)], (0)), 100000000, 0, -240), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -239), ((("b")), 100000000, 0, -236), 0), 100000000, 0, -238), (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -236); ((("e")), 100000000, 0, -237)], (0)), 100000000, 0, -235), 0), 100000000, 0, -234), 0), 100000000, 0, -233), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 104)), 0); (("apply", 781), ((Tag1 (0, (Tag3 ((("t", 767)), [(Tag1 (0, ((("a")), 100000000, 0, -230), ((("b")), 100000000, 0, -227), 0), 100000000, 0, -232); ((("e")), 100000000, 0, -228)], (0)), 100000000, 0, -231), (Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -230); ((("e")), 100000000, 0, -228)], (0)), 100000000, 0, -229), (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -227); ((("e")), 100000000, 0, -228)], (0)), 100000000, 0, -226), 0), 100000000, 0, -225), 0), 100000000, 0, -224), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 127)), 0); (("map2", 782), ((Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -221); ((("e")), 100000000, 0, -217)], (0)), 100000000, 0, -223), (Tag1 (0, (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -220); ((("e")), 100000000, 0, -217)], (0)), 100000000, 0, -222), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -221), (Tag1 (0, ((("b")), 100000000, 0, -220), ((("c")), 100000000, 0, -216), 0), 100000000, 0, -219), 0), 100000000, 0, -218), (Tag3 ((("t", 767)), [((("c")), 100000000, 0, -216); ((("e")), 100000000, 0, -217)], (0)), 100000000, 0, -215), 0), 100000000, 0, -214), 0), 100000000, 0, -213), 0), 100000000, 0, -212), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 128)), 0); (("map3", 783), ((Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -208); ((("e")), 100000000, 0, -202)], (0)), 100000000, 0, -211), (Tag1 (0, (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -207); ((("e")), 100000000, 0, -202)], (0)), 100000000, 0, -210), (Tag1 (0, (Tag3 ((("t", 767)), [((("c")), 100000000, 0, -206); ((("e")), 100000000, 0, -202)], (0)), 100000000, 0, -209), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -208), (Tag1 (0, ((("b")), 100000000, 0, -207), (Tag1 (0, ((("c")), 100000000, 0, -206), ((("d")), 100000000, 0, -201), 0), 100000000, 0, -205), 0), 100000000, 0, -204), 0), 100000000, 0, -203), (Tag3 ((("t", 767)), [((("d")), 100000000, 0, -201); ((("e")), 100000000, 0, -202)], (0)), 100000000, 0, -200), 0), 100000000, 0, -199), 0), 100000000, 0, -198), 0), 100000000, 0, -197), 0), 100000000, 0, -196), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 129)), 0); (("all", 784), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 767)), [((("a")), 100000000, 0, -192); ((("e")), 100000000, 0, -193)], (0)), 100000000, 0, -195)], (0)), 100000000, 0, -194), (Tag3 ((("t", 767)), [(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -192)], (0)), 100000000, 0, -191); ((("e")), 100000000, 0, -193)], (0)), 100000000, 0, -190), 0), 100000000, 0, -189), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 130)), 0); (("all_unit", 785), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 767)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -188); ((("e")), 100000000, 0, -185)], (0)), 100000000, 0, -187)], (0)), 100000000, 0, -186), (Tag3 ((("t", 767)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -184); ((("e")), 100000000, 0, -185)], (0)), 100000000, 0, -183), 0), 100000000, 0, -182), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 131)), 0); Tag3 (("Applicative_infix", 786), 0, (Tag1 ([(("<*>", 804), ((Tag1 (0, (Tag3 ((("t", 767)), [(Tag1 (0, ((("a")), 100000000, 0, -418), ((("b")), 100000000, 0, -415), 0), 100000000, 0, -420); ((("e")), 100000000, 0, -416)], (0)), 100000000, 0, -419), (Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -418); ((("e")), 100000000, 0, -416)], (0)), 100000000, 0, -417), (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -415); ((("e")), 100000000, 0, -416)], (0)), 100000000, 0, -414), 0), 100000000, 0, -413), 0), 100000000, 0, -412), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 101)), 0); (("<*", 805), ((Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -407); ((("e")), 100000000, 0, -408)], (0)), 100000000, 0, -411), (Tag1 (0, (Tag3 ((("t", 767)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -410); ((("e")), 100000000, 0, -408)], (0)), 100000000, 0, -409), (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -407); ((("e")), 100000000, 0, -408)], (0)), 100000000, 0, -406), 0), 100000000, 0, -405), 0), 100000000, 0, -404), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 102)), 0); (("*>", 806), ((Tag1 (0, (Tag3 ((("t", 767)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -403); ((("e")), 100000000, 0, -400)], (0)), 100000000, 0, -402), (Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -399); ((("e")), 100000000, 0, -400)], (0)), 100000000, 0, -401), (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -399); ((("e")), 100000000, 0, -400)], (0)), 100000000, 0, -398), 0), 100000000, 0, -397), 0), 100000000, 0, -396), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 103)), 0); ((">>|", 807), ((Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -394); ((("e")), 100000000, 0, -392)], (0)), 100000000, 0, -395), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -394), ((("b")), 100000000, 0, -391), 0), 100000000, 0, -393), (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -391); ((("e")), 100000000, 0, -392)], (0)), 100000000, 0, -390), 0), 100000000, 0, -389), 0), 100000000, 0, -388), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 104)), 0)]), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), Tag1 ("Base__Applicative_intf", 134)), 0, 0); (("value", 787), ((Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -179); ((0), 100000000, 0, -181)], (0)), 100000000, 0, -180), (Tag1 (("default"), ((("a")), 100000000, 0, -179), ((("a")), 100000000, 0, -179), 0), 100000000, 0, -178), 0), 100000000, 0, -177), 0, (("src/either_intf.ml", 18, 614, 616), ("src/either_intf.ml", 18, 614, 657), 0), 0, Tag1 ("Base__Either_intf", 3)), 0); (("to_option", 788), ((Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -174); ((0), 100000000, 0, -176)], (0)), 100000000, 0, -175), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -174)], (0)), 100000000, 0, -173), 0), 100000000, 0, -172), 0, (("src/either_intf.ml", 19, 658, 660), ("src/either_intf.ml", 19, 658, 698), 0), 0, Tag1 ("Base__Either_intf", 4)), 0); (("with_return", 789), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "With_return"), "return"), [((("a")), 100000000, 0, -168)], (0)), 100000000, 0, -171), ((("b")), 100000000, 0, -169), 0), 100000000, 0, -170), (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -168); ((("b")), 100000000, 0, -169)], (0)), 100000000, 0, -167), 0), 100000000, 0, -166), 0, (("src/either_intf.ml", 20, 699, 701), ("src/either_intf.ml", 20, 699, 782), 0), 0, Tag1 ("Base__Either_intf", 5)), 0); (("combine", 790), ((Tag1 (0, (Tag3 ((("t", 767)), [((("a")), 100000000, 0, -163); ((("d")), 100000000, 0, -157)], (0)), 100000000, 0, -165), (Tag1 (0, (Tag3 ((("t", 767)), [((("b")), 100000000, 0, -162); ((("d")), 100000000, 0, -157)], (0)), 100000000, 0, -164), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -163), (Tag1 (0, ((("b")), 100000000, 0, -162), ((("c")), 100000000, 0, -156), 0), 100000000, 0, -161), 0), 100000000, 0, -160), (Tag1 (("other"), (Tag1 (0, ((("d")), 100000000, 0, -157), (Tag1 (0, ((("d")), 100000000, 0, -157), ((("d")), 100000000, 0, -157), 0), 100000000, 0, -159), 0), 100000000, 0, -158), (Tag3 ((("t", 767)), [((("c")), 100000000, 0, -156); ((("d")), 100000000, 0, -157)], (0)), 100000000, 0, -155), 0), 100000000, 0, -154), 0), 100000000, 0, -153), 0), 100000000, 0, -152), 0), 100000000, 0, -151), 0, (("src/either_intf.ml", 22, 784, 786), ("src/either_intf.ml", 27, 910, 927), 0), 0, Tag1 ("Base__Either_intf", 6)), 0); (("combine_all", 791), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 767)), [((("a")), 100000000, 0, -145); ((("b")), 100000000, 0, -146)], (0)), 100000000, 0, -150)], (0)), 100000000, 0, -149), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -146), (Tag1 (0, ((("b")), 100000000, 0, -146), ((("b")), 100000000, 0, -146), 0), 100000000, 0, -148), 0), 100000000, 0, -147), (Tag3 ((("t", 767)), [(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -145)], (0)), 100000000, 0, -144); ((("b")), 100000000, 0, -146)], (0)), 100000000, 0, -143), 0), 100000000, 0, -142), 0), 100000000, 0, -141), 0, (("src/either_intf.ml", 29, 929, 931), ("src/either_intf.ml", 29, 929, 1015), 0), 0, Tag1 ("Base__Either_intf", 7)), 0); (("combine_all_unit", 792), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 767)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -140); ((("b")), 100000000, 0, -135)], (0)), 100000000, 0, -139)], (0)), 100000000, 0, -138), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -135), (Tag1 (0, ((("b")), 100000000, 0, -135), ((("b")), 100000000, 0, -135), 0), 100000000, 0, -137), 0), 100000000, 0, -136), (Tag3 ((("t", 767)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -134); ((("b")), 100000000, 0, -135)], (0)), 100000000, 0, -133), 0), 100000000, 0, -132), 0), 100000000, 0, -131), 0, (("src/either_intf.ml", 30, 1016, 1018), ("src/either_intf.ml", 30, 1016, 1106), 0), 0, Tag1 ("Base__Either_intf", 8)), 0)]), 0, (("src/either_intf.ml", 77, 2227, 2229), ("src/either_intf.ml", 77, 2227, 2285), 0), Tag1 ("Base__Either_intf", 27)), 0, 0); Tag3 (("Second", 761), 0, (Tag1 ([Tag1 (("t", 808), ([((("a")), 100000000, 0, -609); ((("b")), 100000000, 0, -608)], 2, 0, 1, ((Tag3 ((("t", 746)), [((("b")), 100000000, 0, -608); ((("a")), 100000000, 0, -609)], (0)), 100000000, 0, -607)), [25; 25], [0; 0], 0, 0, (("src/either_intf.ml", 78, 2286, 2317), ("src/either_intf.ml", 78, 2286, 2345), 0), 0, 0, 0, Tag1 ("Base__Either_intf", 28)), 1, 0); ((">>=", 809), ((Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -605); ((("e")), 100000000, 0, -602)], (0)), 100000000, 0, -606), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -605), (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -601); ((("e")), 100000000, 0, -602)], (0)), 100000000, 0, -604), 0), 100000000, 0, -603), (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -601); ((("e")), 100000000, 0, -602)], (0)), 100000000, 0, -600), 0), 100000000, 0, -599), 0), 100000000, 0, -598), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 81)), 0); Tag3 (("Let_syntax", 810), 0, (Tag1 ([(("return", 834), ((Tag1 (0, ((("a")), 100000000, 0, -629), (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -629); ((0), 100000000, 0, -630)], (0)), 100000000, 0, -628), 0), 100000000, 0, -627), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 91)), 0); ((">>=", 835), ((Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -625); ((("e")), 100000000, 0, -622)], (0)), 100000000, 0, -626), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -625), (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -621); ((("e")), 100000000, 0, -622)], (0)), 100000000, 0, -624), 0), 100000000, 0, -623), (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -621); ((("e")), 100000000, 0, -622)], (0)), 100000000, 0, -620), 0), 100000000, 0, -619), 0), 100000000, 0, -618), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 81)), 0); ((">>|", 836), ((Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -616); ((("e")), 100000000, 0, -614)], (0)), 100000000, 0, -617), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -616), ((("b")), 100000000, 0, -613), 0), 100000000, 0, -615), (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -613); ((("e")), 100000000, 0, -614)], (0)), 100000000, 0, -612), 0), 100000000, 0, -611), 0), 100000000, 0, -610), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 82)), 0); Tag3 (("Let_syntax", 837), 0, (Tag1 ([(("return", 838), ((Tag1 (0, ((("a")), 100000000, 0, -659), (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -659); ((0), 100000000, 0, -660)], (0)), 100000000, 0, -658), 0), 100000000, 0, -657), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 94)), 0); (("bind", 839), ((Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -655); ((("e")), 100000000, 0, -652)], (0)), 100000000, 0, -656), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -655), (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -651); ((("e")), 100000000, 0, -652)], (0)), 100000000, 0, -654), 0), 100000000, 0, -653), (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -651); ((("e")), 100000000, 0, -652)], (0)), 100000000, 0, -650), 0), 100000000, 0, -649), 0), 100000000, 0, -648), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 95)), 0); (("map", 840), ((Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -646); ((("e")), 100000000, 0, -644)], (0)), 100000000, 0, -647), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -646), ((("b")), 100000000, 0, -643), 0), 100000000, 0, -645), (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -643); ((("e")), 100000000, 0, -644)], (0)), 100000000, 0, -642), 0), 100000000, 0, -641), 0), 100000000, 0, -640), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 96)), 0); (("both", 841), ((Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -635); ((("e")), 100000000, 0, -637)], (0)), 100000000, 0, -639), (Tag1 (0, (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -636); ((("e")), 100000000, 0, -637)], (0)), 100000000, 0, -638), (Tag3 ((("t", 808)), [(Tag2 ([((("a")), 100000000, 0, -635); ((("b")), 100000000, 0, -636)]), 100000000, 0, -634); ((("e")), 100000000, 0, -637)], (0)), 100000000, 0, -633), 0), 100000000, 0, -632), 0), 100000000, 0, -631), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 97)), 0); Tag3 (("Open_on_rhs", 842), 0, (Tag1 (0), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), Tag1 ("Base__Monad_intf", 98)), 0, 0)]), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), Tag1 ("Base__Monad_intf", 99)), 0, 0)]), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), Tag1 ("Base__Monad_intf", 100)), 0, 0); Tag3 (("Monad_infix", 811), 0, (Tag1 ([((">>=", 843), ((Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -676); ((("e")), 100000000, 0, -673)], (0)), 100000000, 0, -677), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -676), (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -672); ((("e")), 100000000, 0, -673)], (0)), 100000000, 0, -675), 0), 100000000, 0, -674), (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -672); ((("e")), 100000000, 0, -673)], (0)), 100000000, 0, -671), 0), 100000000, 0, -670), 0), 100000000, 0, -669), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 81)), 0); ((">>|", 844), ((Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -667); ((("e")), 100000000, 0, -665)], (0)), 100000000, 0, -668), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -667), ((("b")), 100000000, 0, -664), 0), 100000000, 0, -666), (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -664); ((("e")), 100000000, 0, -665)], (0)), 100000000, 0, -663), 0), 100000000, 0, -662), 0), 100000000, 0, -661), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 82)), 0)]), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), Tag1 ("Base__Monad_intf", 118)), 0, 0); (("bind", 812), ((Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -596); ((("e")), 100000000, 0, -593)], (0)), 100000000, 0, -597), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -596), (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -592); ((("e")), 100000000, 0, -593)], (0)), 100000000, 0, -595), 0), 100000000, 0, -594), (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -592); ((("e")), 100000000, 0, -593)], (0)), 100000000, 0, -591), 0), 100000000, 0, -590), 0), 100000000, 0, -589), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 119)), 0); (("join", 813), ((Tag1 (0, (Tag3 ((("t", 808)), [(Tag3 ((("t", 808)), [((("a")), 100000000, 0, -585); ((("e")), 100000000, 0, -586)], (0)), 100000000, 0, -588); ((("e")), 100000000, 0, -586)], (0)), 100000000, 0, -587), (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -585); ((("e")), 100000000, 0, -586)], (0)), 100000000, 0, -584), 0), 100000000, 0, -583), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 122)), 0); (("ignore_m", 814), ((Tag1 (0, (Tag3 ((("t", 808)), [((0), 100000000, 0, -582); ((("e")), 100000000, 0, -580)], (0)), 100000000, 0, -581), (Tag3 ((("t", 808)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -579); ((("e")), 100000000, 0, -580)], (0)), 100000000, 0, -578), 0), 100000000, 0, -577), 0, (("src/either_intf.ml", 15, 487, 497), ("src/either_intf.ml", 15, 487, 546), 0), 0, Tag1 ("Base__Monad_intf", 123)), 0); (("return", 815), ((Tag1 (0, ((("a")), 100000000, 0, -575), (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -575); ((0), 100000000, 0, -576)], (0)), 100000000, 0, -574), 0), 100000000, 0, -573), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 113)), 0); (("map", 816), ((Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -571); ((("e")), 100000000, 0, -569)], (0)), 100000000, 0, -572), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -571), ((("b")), 100000000, 0, -568), 0), 100000000, 0, -570), (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -568); ((("e")), 100000000, 0, -569)], (0)), 100000000, 0, -567), 0), 100000000, 0, -566), 0), 100000000, 0, -565), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 114)), 0); (("both", 817), ((Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -560); ((("e")), 100000000, 0, -562)], (0)), 100000000, 0, -564), (Tag1 (0, (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -561); ((("e")), 100000000, 0, -562)], (0)), 100000000, 0, -563), (Tag3 ((("t", 808)), [(Tag2 ([((("a")), 100000000, 0, -560); ((("b")), 100000000, 0, -561)]), 100000000, 0, -559); ((("e")), 100000000, 0, -562)], (0)), 100000000, 0, -558), 0), 100000000, 0, -557), 0), 100000000, 0, -556), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 115)), 0); (("<*>", 818), ((Tag1 (0, (Tag3 ((("t", 808)), [(Tag1 (0, ((("a")), 100000000, 0, -553), ((("b")), 100000000, 0, -550), 0), 100000000, 0, -555); ((("e")), 100000000, 0, -551)], (0)), 100000000, 0, -554), (Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -553); ((("e")), 100000000, 0, -551)], (0)), 100000000, 0, -552), (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -550); ((("e")), 100000000, 0, -551)], (0)), 100000000, 0, -549), 0), 100000000, 0, -548), 0), 100000000, 0, -547), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 101)), 0); (("<*", 819), ((Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -542); ((("e")), 100000000, 0, -543)], (0)), 100000000, 0, -546), (Tag1 (0, (Tag3 ((("t", 808)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -545); ((("e")), 100000000, 0, -543)], (0)), 100000000, 0, -544), (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -542); ((("e")), 100000000, 0, -543)], (0)), 100000000, 0, -541), 0), 100000000, 0, -540), 0), 100000000, 0, -539), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 102)), 0); (("*>", 820), ((Tag1 (0, (Tag3 ((("t", 808)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -538); ((("e")), 100000000, 0, -535)], (0)), 100000000, 0, -537), (Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -534); ((("e")), 100000000, 0, -535)], (0)), 100000000, 0, -536), (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -534); ((("e")), 100000000, 0, -535)], (0)), 100000000, 0, -533), 0), 100000000, 0, -532), 0), 100000000, 0, -531), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 103)), 0); ((">>|", 821), ((Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -529); ((("e")), 100000000, 0, -527)], (0)), 100000000, 0, -530), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -529), ((("b")), 100000000, 0, -526), 0), 100000000, 0, -528), (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -526); ((("e")), 100000000, 0, -527)], (0)), 100000000, 0, -525), 0), 100000000, 0, -524), 0), 100000000, 0, -523), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 104)), 0); (("apply", 822), ((Tag1 (0, (Tag3 ((("t", 808)), [(Tag1 (0, ((("a")), 100000000, 0, -520), ((("b")), 100000000, 0, -517), 0), 100000000, 0, -522); ((("e")), 100000000, 0, -518)], (0)), 100000000, 0, -521), (Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -520); ((("e")), 100000000, 0, -518)], (0)), 100000000, 0, -519), (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -517); ((("e")), 100000000, 0, -518)], (0)), 100000000, 0, -516), 0), 100000000, 0, -515), 0), 100000000, 0, -514), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 127)), 0); (("map2", 823), ((Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -511); ((("e")), 100000000, 0, -507)], (0)), 100000000, 0, -513), (Tag1 (0, (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -510); ((("e")), 100000000, 0, -507)], (0)), 100000000, 0, -512), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -511), (Tag1 (0, ((("b")), 100000000, 0, -510), ((("c")), 100000000, 0, -506), 0), 100000000, 0, -509), 0), 100000000, 0, -508), (Tag3 ((("t", 808)), [((("c")), 100000000, 0, -506); ((("e")), 100000000, 0, -507)], (0)), 100000000, 0, -505), 0), 100000000, 0, -504), 0), 100000000, 0, -503), 0), 100000000, 0, -502), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 128)), 0); (("map3", 824), ((Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -498); ((("e")), 100000000, 0, -492)], (0)), 100000000, 0, -501), (Tag1 (0, (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -497); ((("e")), 100000000, 0, -492)], (0)), 100000000, 0, -500), (Tag1 (0, (Tag3 ((("t", 808)), [((("c")), 100000000, 0, -496); ((("e")), 100000000, 0, -492)], (0)), 100000000, 0, -499), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -498), (Tag1 (0, ((("b")), 100000000, 0, -497), (Tag1 (0, ((("c")), 100000000, 0, -496), ((("d")), 100000000, 0, -491), 0), 100000000, 0, -495), 0), 100000000, 0, -494), 0), 100000000, 0, -493), (Tag3 ((("t", 808)), [((("d")), 100000000, 0, -491); ((("e")), 100000000, 0, -492)], (0)), 100000000, 0, -490), 0), 100000000, 0, -489), 0), 100000000, 0, -488), 0), 100000000, 0, -487), 0), 100000000, 0, -486), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 129)), 0); (("all", 825), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 808)), [((("a")), 100000000, 0, -482); ((("e")), 100000000, 0, -483)], (0)), 100000000, 0, -485)], (0)), 100000000, 0, -484), (Tag3 ((("t", 808)), [(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -482)], (0)), 100000000, 0, -481); ((("e")), 100000000, 0, -483)], (0)), 100000000, 0, -480), 0), 100000000, 0, -479), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 130)), 0); (("all_unit", 826), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 808)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -478); ((("e")), 100000000, 0, -475)], (0)), 100000000, 0, -477)], (0)), 100000000, 0, -476), (Tag3 ((("t", 808)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -474); ((("e")), 100000000, 0, -475)], (0)), 100000000, 0, -473), 0), 100000000, 0, -472), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 131)), 0); Tag3 (("Applicative_infix", 827), 0, (Tag1 ([(("<*>", 845), ((Tag1 (0, (Tag3 ((("t", 808)), [(Tag1 (0, ((("a")), 100000000, 0, -708), ((("b")), 100000000, 0, -705), 0), 100000000, 0, -710); ((("e")), 100000000, 0, -706)], (0)), 100000000, 0, -709), (Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -708); ((("e")), 100000000, 0, -706)], (0)), 100000000, 0, -707), (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -705); ((("e")), 100000000, 0, -706)], (0)), 100000000, 0, -704), 0), 100000000, 0, -703), 0), 100000000, 0, -702), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 101)), 0); (("<*", 846), ((Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -697); ((("e")), 100000000, 0, -698)], (0)), 100000000, 0, -701), (Tag1 (0, (Tag3 ((("t", 808)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -700); ((("e")), 100000000, 0, -698)], (0)), 100000000, 0, -699), (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -697); ((("e")), 100000000, 0, -698)], (0)), 100000000, 0, -696), 0), 100000000, 0, -695), 0), 100000000, 0, -694), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 102)), 0); (("*>", 847), ((Tag1 (0, (Tag3 ((("t", 808)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -693); ((("e")), 100000000, 0, -690)], (0)), 100000000, 0, -692), (Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -689); ((("e")), 100000000, 0, -690)], (0)), 100000000, 0, -691), (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -689); ((("e")), 100000000, 0, -690)], (0)), 100000000, 0, -688), 0), 100000000, 0, -687), 0), 100000000, 0, -686), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 103)), 0); ((">>|", 848), ((Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -684); ((("e")), 100000000, 0, -682)], (0)), 100000000, 0, -685), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -684), ((("b")), 100000000, 0, -681), 0), 100000000, 0, -683), (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -681); ((("e")), 100000000, 0, -682)], (0)), 100000000, 0, -680), 0), 100000000, 0, -679), 0), 100000000, 0, -678), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), 0, Tag1 ("Base__Applicative_intf", 104)), 0)]), 0, (("src/either_intf.ml", 16, 547, 557), ("src/either_intf.ml", 16, 547, 612), 0), Tag1 ("Base__Applicative_intf", 134)), 0, 0); (("value", 828), ((Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -469); ((0), 100000000, 0, -471)], (0)), 100000000, 0, -470), (Tag1 (("default"), ((("a")), 100000000, 0, -469), ((("a")), 100000000, 0, -469), 0), 100000000, 0, -468), 0), 100000000, 0, -467), 0, (("src/either_intf.ml", 18, 614, 616), ("src/either_intf.ml", 18, 614, 657), 0), 0, Tag1 ("Base__Either_intf", 3)), 0); (("to_option", 829), ((Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -464); ((0), 100000000, 0, -466)], (0)), 100000000, 0, -465), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -464)], (0)), 100000000, 0, -463), 0), 100000000, 0, -462), 0, (("src/either_intf.ml", 19, 658, 660), ("src/either_intf.ml", 19, 658, 698), 0), 0, Tag1 ("Base__Either_intf", 4)), 0); (("with_return", 830), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "With_return"), "return"), [((("a")), 100000000, 0, -458)], (0)), 100000000, 0, -461), ((("b")), 100000000, 0, -459), 0), 100000000, 0, -460), (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -458); ((("b")), 100000000, 0, -459)], (0)), 100000000, 0, -457), 0), 100000000, 0, -456), 0, (("src/either_intf.ml", 20, 699, 701), ("src/either_intf.ml", 20, 699, 782), 0), 0, Tag1 ("Base__Either_intf", 5)), 0); (("combine", 831), ((Tag1 (0, (Tag3 ((("t", 808)), [((("a")), 100000000, 0, -453); ((("d")), 100000000, 0, -447)], (0)), 100000000, 0, -455), (Tag1 (0, (Tag3 ((("t", 808)), [((("b")), 100000000, 0, -452); ((("d")), 100000000, 0, -447)], (0)), 100000000, 0, -454), (Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -453), (Tag1 (0, ((("b")), 100000000, 0, -452), ((("c")), 100000000, 0, -446), 0), 100000000, 0, -451), 0), 100000000, 0, -450), (Tag1 (("other"), (Tag1 (0, ((("d")), 100000000, 0, -447), (Tag1 (0, ((("d")), 100000000, 0, -447), ((("d")), 100000000, 0, -447), 0), 100000000, 0, -449), 0), 100000000, 0, -448), (Tag3 ((("t", 808)), [((("c")), 100000000, 0, -446); ((("d")), 100000000, 0, -447)], (0)), 100000000, 0, -445), 0), 100000000, 0, -444), 0), 100000000, 0, -443), 0), 100000000, 0, -442), 0), 100000000, 0, -441), 0, (("src/either_intf.ml", 22, 784, 786), ("src/either_intf.ml", 27, 910, 927), 0), 0, Tag1 ("Base__Either_intf", 6)), 0); (("combine_all", 832), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 808)), [((("a")), 100000000, 0, -435); ((("b")), 100000000, 0, -436)], (0)), 100000000, 0, -440)], (0)), 100000000, 0, -439), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -436), (Tag1 (0, ((("b")), 100000000, 0, -436), ((("b")), 100000000, 0, -436), 0), 100000000, 0, -438), 0), 100000000, 0, -437), (Tag3 ((("t", 808)), [(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -435)], (0)), 100000000, 0, -434); ((("b")), 100000000, 0, -436)], (0)), 100000000, 0, -433), 0), 100000000, 0, -432), 0), 100000000, 0, -431), 0, (("src/either_intf.ml", 29, 929, 931), ("src/either_intf.ml", 29, 929, 1015), 0), 0, Tag1 ("Base__Either_intf", 7)), 0); (("combine_all_unit", 833), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 808)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -430); ((("b")), 100000000, 0, -425)], (0)), 100000000, 0, -429)], (0)), 100000000, 0, -428), (Tag1 (("f"), (Tag1 (0, ((("b")), 100000000, 0, -425), (Tag1 (0, ((("b")), 100000000, 0, -425), ((("b")), 100000000, 0, -425), 0), 100000000, 0, -427), 0), 100000000, 0, -426), (Tag3 ((("t", 808)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -424); ((("b")), 100000000, 0, -425)], (0)), 100000000, 0, -423), 0), 100000000, 0, -422), 0), 100000000, 0, -421), 0, (("src/either_intf.ml", 30, 1016, 1018), ("src/either_intf.ml", 30, 1016, 1106), 0), 0, Tag1 ("Base__Either_intf", 8)), 0)]), 0, (("src/either_intf.ml", 78, 2286, 2288), ("src/either_intf.ml", 78, 2286, 2345), 0), Tag1 ("Base__Either_intf", 29)), 0, 0); (("is_first", 762), ((Tag1 (0, (Tag3 ((("t", 746)), [((0), 100000000, 0, -18); ((0), 100000000, 0, -19)], (0)), 100000000, 0, -17), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("src/either_intf.ml", 80, 2347, 2349), ("src/either_intf.ml", 80, 2347, 2380), 0), 0, Tag1 ("Base__Either_intf", 30)), 0); (("is_second", 763), ((Tag1 (0, (Tag3 ((("t", 746)), [((0), 100000000, 0, -13); ((0), 100000000, 0, -14)], (0)), 100000000, 0, -12), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("src/either_intf.ml", 81, 2381, 2383), ("src/either_intf.ml", 81, 2381, 2415), 0), 0, Tag1 ("Base__Either_intf", 31)), 0); (("first", 764), ((Tag1 (0, ((("f")), 100000000, 0, -8), (Tag3 ((("t", 746)), [((("f")), 100000000, 0, -8); ((0), 100000000, 0, -9)], (0)), 100000000, 0, -7), 0), 100000000, 0, -6), 0, (("src/either_intf.ml", 84, 2487, 2489), ("src/either_intf.ml", 84, 2487, 2516), 0), 0, Tag1 ("Base__Either_intf", 32)), 0); (("second", 765), ((Tag1 (0, ((("s")), 100000000, 0, -5), (Tag3 ((("t", 746)), [((0), 100000000, 0, -4); ((("s")), 100000000, 0, -5)], (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/either_intf.ml", 86, 2518, 2520), ("src/either_intf.ml", 86, 2518, 2548), 0), 0, Tag1 ("Base__Either_intf", 33)), 0); Tag3 (("Export", 766), 0, (Tag1 ([Tag1 (("_either", 849), ([((("f")), 100000000, 0, -712); ((("s")), 100000000, 0, -713)], 2, Tag1 ([(("First", 1642), ([((("f")), 100000000, 0, -712)]), 0, (("src/either_intf.ml", 92, 2624, 2630), ("src/either_intf.ml", 92, 2624, 2643), 0), 0, Tag1 ("Base__Either_intf", 35)); (("Second", 1643), ([((("s")), 100000000, 0, -713)]), 0, (("src/either_intf.ml", 93, 2644, 2650), ("src/either_intf.ml", 93, 2644, 2664), 0), 0, Tag1 ("Base__Either_intf", 36))], 0), 1, ((Tag3 ((("t", 746)), [((("f")), 100000000, 0, -712); ((("s")), 100000000, 0, -713)], (0)), 100000000, 0, -711)), [25; 25], [0; 0], 0, 0, (("src/either_intf.ml", 91, 2583, 2587), ("src/either_intf.ml", 93, 2644, 2664), 0), 0, 0, 0, Tag1 ("Base__Either_intf", 34)), 1, 0)]), 0, (("src/either_intf.ml", 90, 2561, 2563), ("src/either_intf.ml", 94, 2665, 2670), 0), Tag1 ("Base__Either_intf", 37)), 0, 0)], "Base__Either", [("Base__Either", ("\011+\000L\150v\2387\\C\181\179\242\251sk")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__StringLabels", ("\134F\024\226\216Is#\223\230\234\169Z\206Gc")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Printf", ("\215<\139]\021\142\224E\245m\198qc(W\229")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__MoreLabels", ("\248\232\248\254`<\230\241\161U\193U\1466J\238")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__ListLabels", ("*\194\012\191\020%\170\249m\002\180\178hk\205\220")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shadow_stdlib", ("\219zi\164\203\158e)\232\221\196\168\138x\142\018")); ("Sexplib0__Sexpable", ("\251${\207(\249/z\242\255\250^\141\156\210e")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv_error", ("kzv!\151~\198P\000\165\176d\007\251p\232")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Base_internalhash_types", ("0\148#2\226\223\018\135\173>!\020\237\017\255\149")); ("Base__With_return", ("S\142\136\128>E\001\1583\028\161\217I\183\1279")); ("Base__T", ("+t\159\169\027\152\205\235\003\237\133\177\024\n6'")); ("Base__Sys0", ("\206z\231\154s\\\136\2364\131\005\014\031\152m3")); ("Base__String0", ("\212\221L\220\245\255\162P\228\224\189\216\135H\149O")); ("Base__Source_code_position0", ("_\003P6\254\029\206\005\130\136\180\019\145\230\000M")); ("Base__Sexp", ("\154\187\171&\209=\153[\236\250!U\174`\190T")); ("Base__Printf", ("\000\196c,\214\127\226\174\220\190\253z!\242\028\250")); ("Base__Ppx_hash_lib", ("\199\141\178\193\006\209L\007^\020(\131\224sn8")); ("Base__Ppx_compare_lib", ("\243\186~\233\228\199Ah\181.\223\004e\231\129S")); ("Base__Poly0", ("\230;\143\234\255.H\132KOe7\155\\\023f")); ("Base__Monad_intf", ("\208\203\163\152\184O\130?\012:\168\247}\018\253\155")); ("Base__Monad", ("!\244\168\2352=\137Lm\219\129K\216\199\145\\")); ("Base__Invariant_intf", ("\213\204\238\235\236[\198\145\028\2392\015\243\177S\249")); ("Base__Invariant", ("\135\153\136\\\129SD\228\202l\255\152\139\253\015\201")); ("Base__Int0", ("N\1310\012\227\254\000\255_\222!\018\016\003\1779")); ("Base__Import0", ("\156\129U\197Y[\\\153\017Ho\203\173\204\220\020")); ("Base__Import", ("\014\187\247\141\187\181\142g\176:s_,\181\219\209")); ("Base__Hash_intf", ("h\004P\218\1531G\127\212\208A\024\140\164iq")); ("Base__Hash", ("\206Rc\194\234{s3\248\165\024\162\203{\206\206")); ("Base__Globalize", ("<\243w~.\180\196t\159\193\174[\227\139\215G")); ("Base__Field", ("8In\234X\202\188G\186\208$\192\175\136\214v")); ("Base__Either_intf", ("\198\253n\235\170\"\029\207\169\248\161\226`(6\182")); ("Base__Either0", ("!9-\011n\2077eZ\212\031c\227\029\206\t")); ("Base__Comparator", ("\002\135z7b\025&\207\t\188\239&U3R\167")); ("Base__Bool0", ("\177f\254p\023\143&\239\020\136\206\242~\018F\251")); ("Base__Applicative_intf", ("J\176\203\159\235N(\235\027\232\198+\224\205*A")); ("Base__Applicative", ("\157\024\176\241a\165\204\133\003s3\214\007\131\244\n")); ("Base__", ("p\252\007\139\128\163W\025+\0225\001\246|P\158"))], [(0)])
sig type ('f, 's) _either = ('f, 's) t = First of 'f | Second of 's end
