type 'a with_pos = { pos : int; data : 'a; }
val with_pos : 'a list -> 'a with_pos list
type ('l, 'r, 'diff) mismatch =
    Name of { pos : int; got : string; expected : string; types_match : bool;
    }
  | Type of { pos : int; got : 'l; expected : 'r; reason : 'diff; }
type ('l, 'r, 'diff) change =
    Change of ('l, 'r, 'diff) mismatch
  | Swap of { pos : int * int; first : string; last : string; }
  | Move of { name : string; got : int; expected : int; }
  | Insert of { pos : int; insert : 'r; }
  | Delete of { pos : int; delete : 'l; }
val prefix : Format.formatter -> ('l, 'r, 'diff) change -> unit
module Define :
  functor (D : sig type left type right type diff type state end) ->
    sig
      type diff = (D.left, D.right, D.diff) mismatch
      type left = D.left with_pos
      type right = D.right with_pos
      type composite_change = (D.left, D.right, D.diff) change
      type patch = composite_change list
      type change = (left, right, unit, diff) Diffing.change
      module type Parameters =
        sig
          val weight : change -> int
          val test : D.state -> left -> right -> (unit, diff) result
          val update : change -> D.state -> D.state
          val key_left : D.left -> string
          val key_right : D.right -> string
        end
      module Simple :
        Parameters ->
          sig val diff : D.state -> D.left list -> D.right list -> patch end
    end("DEBUG:rule", [Tag1 (("with_pos", 508), ([((("a")), 100000000, 0, -38)], 1, [[(("pos", 270), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -37), (("utils/diffing_with_keys.mli", 32, 1661, 1681), ("utils/diffing_with_keys.mli", 32, 1661, 1690), 0), 0, Tag1 ("Diffing_with_keys", 1)); (("data", 271), 0, ((("a")), 100000000, 0, -38), (("utils/diffing_with_keys.mli", 32, 1661, 1691), ("utils/diffing_with_keys.mli", 32, 1661, 1698), 0), 0, Tag1 ("Diffing_with_keys", 2))]], 1, 0, [25], [0], 0, 0, (("utils/diffing_with_keys.mli", 32, 1661, 1661), ("utils/diffing_with_keys.mli", 32, 1661, 1699), 0), 0, 0, 0, Tag1 ("Diffing_with_keys", 0)), 1, 0); (("with_pos", 509), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -35)], (0)), 100000000, 0, -36), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("with_pos", 508)), [((("a")), 100000000, 0, -35)], (0)), 100000000, 0, -34)], (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0, (("utils/diffing_with_keys.mli", 33, 1700, 1700), ("utils/diffing_with_keys.mli", 33, 1700, 1741), 0), 0, Tag1 ("Diffing_with_keys", 3)), 0); Tag1 (("mismatch", 510), ([((("l")), 100000000, 0, -29); ((("r")), 100000000, 0, -30); ((("diff")), 100000000, 0, -31)], 3, Tag1 ([(("Name", 274), Tag1 ([(("pos", 275), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -24), (("utils/diffing_with_keys.mli", 36, 1773, 1786), ("utils/diffing_with_keys.mli", 36, 1773, 1794), 0), 0, Tag1 ("Diffing_with_keys", 5)); (("got", 276), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -25), (("utils/diffing_with_keys.mli", 36, 1773, 1795), ("utils/diffing_with_keys.mli", 36, 1773, 1806), 0), 0, Tag1 ("Diffing_with_keys", 6)); (("expected", 277), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -26), (("utils/diffing_with_keys.mli", 36, 1773, 1807), ("utils/diffing_with_keys.mli", 36, 1773, 1823), 0), 0, Tag1 ("Diffing_with_keys", 7)); (("types_match", 278), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -27), (("utils/diffing_with_keys.mli", 36, 1773, 1824), ("utils/diffing_with_keys.mli", 36, 1773, 1840), 0), 0, Tag1 ("Diffing_with_keys", 8))]), 0, (("utils/diffing_with_keys.mli", 36, 1773, 1775), ("utils/diffing_with_keys.mli", 36, 1773, 1841), 0), 0, Tag1 ("Diffing_with_keys", 9)); (("Type", 279), Tag1 ([(("pos", 280), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -28), (("utils/diffing_with_keys.mli", 37, 1842, 1855), ("utils/diffing_with_keys.mli", 37, 1842, 1863), 0), 0, Tag1 ("Diffing_with_keys", 10)); (("got", 281), 0, ((("l")), 100000000, 0, -29), (("utils/diffing_with_keys.mli", 37, 1842, 1864), ("utils/diffing_with_keys.mli", 37, 1842, 1871), 0), 0, Tag1 ("Diffing_with_keys", 11)); (("expected", 282), 0, ((("r")), 100000000, 0, -30), (("utils/diffing_with_keys.mli", 37, 1842, 1872), ("utils/diffing_with_keys.mli", 37, 1842, 1884), 0), 0, Tag1 ("Diffing_with_keys", 12)); (("reason", 283), 0, ((("diff")), 100000000, 0, -31), (("utils/diffing_with_keys.mli", 37, 1842, 1885), ("utils/diffing_with_keys.mli", 37, 1842, 1897), 0), 0, Tag1 ("Diffing_with_keys", 13))]), 0, (("utils/diffing_with_keys.mli", 37, 1842, 1844), ("utils/diffing_with_keys.mli", 37, 1842, 1898), 0), 0, Tag1 ("Diffing_with_keys", 14))], 0), 1, 0, [25; 25; 25], [0; 0; 0], 0, 0, (("utils/diffing_with_keys.mli", 35, 1743, 1743), ("utils/diffing_with_keys.mli", 37, 1842, 1898), 0), 0, 0, 0, Tag1 ("Diffing_with_keys", 4)), 1, 0); Tag1 (("change", 511), ([((("l")), 100000000, 0, -11); ((("r")), 100000000, 0, -12); ((("diff")), 100000000, 0, -13)], 3, Tag1 ([(("Change", 285), ([(Tag3 ((("mismatch", 510)), [((("l")), 100000000, 0, -11); ((("r")), 100000000, 0, -12); ((("diff")), 100000000, 0, -13)], (0)), 100000000, 0, -10)]), 0, (("utils/diffing_with_keys.mli", 43, 2027, 2029), ("utils/diffing_with_keys.mli", 43, 2027, 2063), 0), 0, Tag1 ("Diffing_with_keys", 28)); (("Swap", 286), Tag1 ([(("pos", 287), 0, (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -15); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -16)]), 100000000, 0, -14), (("utils/diffing_with_keys.mli", 44, 2064, 2078), ("utils/diffing_with_keys.mli", 44, 2064, 2093), 0), 0, Tag1 ("Diffing_with_keys", 29)); (("first", 288), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -17), (("utils/diffing_with_keys.mli", 44, 2064, 2094), ("utils/diffing_with_keys.mli", 44, 2064, 2108), 0), 0, Tag1 ("Diffing_with_keys", 30)); (("last", 289), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -18), (("utils/diffing_with_keys.mli", 44, 2064, 2109), ("utils/diffing_with_keys.mli", 44, 2064, 2121), 0), 0, Tag1 ("Diffing_with_keys", 31))]), 0, (("utils/diffing_with_keys.mli", 44, 2064, 2066), ("utils/diffing_with_keys.mli", 44, 2064, 2123), 0), 0, Tag1 ("Diffing_with_keys", 32)); (("Move", 290), Tag1 ([(("name", 291), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -19), (("utils/diffing_with_keys.mli", 45, 2124, 2137), ("utils/diffing_with_keys.mli", 45, 2124, 2149), 0), 0, Tag1 ("Diffing_with_keys", 33)); (("got", 292), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -20), (("utils/diffing_with_keys.mli", 45, 2124, 2150), ("utils/diffing_with_keys.mli", 45, 2124, 2158), 0), 0, Tag1 ("Diffing_with_keys", 34)); (("expected", 293), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -21), (("utils/diffing_with_keys.mli", 45, 2124, 2159), ("utils/diffing_with_keys.mli", 45, 2124, 2171), 0), 0, Tag1 ("Diffing_with_keys", 35))]), 0, (("utils/diffing_with_keys.mli", 45, 2124, 2126), ("utils/diffing_with_keys.mli", 45, 2124, 2172), 0), 0, Tag1 ("Diffing_with_keys", 36)); (("Insert", 294), Tag1 ([(("pos", 295), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -22), (("utils/diffing_with_keys.mli", 46, 2173, 2188), ("utils/diffing_with_keys.mli", 46, 2173, 2196), 0), 0, Tag1 ("Diffing_with_keys", 37)); (("insert", 296), 0, ((("r")), 100000000, 0, -12), (("utils/diffing_with_keys.mli", 46, 2173, 2197), ("utils/diffing_with_keys.mli", 46, 2173, 2206), 0), 0, Tag1 ("Diffing_with_keys", 38))]), 0, (("utils/diffing_with_keys.mli", 46, 2173, 2175), ("utils/diffing_with_keys.mli", 46, 2173, 2207), 0), 0, Tag1 ("Diffing_with_keys", 39)); (("Delete", 297), Tag1 ([(("pos", 298), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -23), (("utils/diffing_with_keys.mli", 47, 2208, 2223), ("utils/diffing_with_keys.mli", 47, 2208, 2231), 0), 0, Tag1 ("Diffing_with_keys", 40)); (("delete", 299), 0, ((("l")), 100000000, 0, -11), (("utils/diffing_with_keys.mli", 47, 2208, 2232), ("utils/diffing_with_keys.mli", 47, 2208, 2241), 0), 0, Tag1 ("Diffing_with_keys", 41))]), 0, (("utils/diffing_with_keys.mli", 47, 2208, 2210), ("utils/diffing_with_keys.mli", 47, 2208, 2242), 0), 0, Tag1 ("Diffing_with_keys", 42))], 0), 1, 0, [25; 25; 25], [0; 0; 0], 0, 0, (("utils/diffing_with_keys.mli", 42, 1999, 1999), ("utils/diffing_with_keys.mli", 47, 2208, 2242), 0), 0, 0, 0, Tag1 ("Diffing_with_keys", 27)), 1, 0); (("prefix", 512), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -9), (Tag1 (0, (Tag3 ((("change", 511)), [((("l")), 100000000, 0, -6); ((("r")), 100000000, 0, -7); ((("diff")), 100000000, 0, -8)], (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("utils/diffing_with_keys.mli", 49, 2244, 2244), ("utils/diffing_with_keys.mli", 49, 2244, 2304), 0), 0, Tag1 ("Diffing_with_keys", 67)), 0); Tag3 (("Define", 513), 0, (Tag2 (((("D", 514)), Tag1 ([Tag1 (("left", 515), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("utils/diffing_with_keys.mli", 51, 2306, 2322), ("utils/diffing_with_keys.mli", 51, 2306, 2355), 0), 0, 0, 0, Tag1 ("Diffing", 0)), 1, 0); Tag1 (("right", 516), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("utils/diffing_with_keys.mli", 51, 2306, 2322), ("utils/diffing_with_keys.mli", 51, 2306, 2355), 0), 0, 0, 0, Tag1 ("Diffing", 1)), 1, 0); Tag1 (("diff", 517), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("utils/diffing_with_keys.mli", 51, 2306, 2322), ("utils/diffing_with_keys.mli", 51, 2306, 2355), 0), 0, 0, 0, Tag1 ("Diffing", 3)), 1, 0); Tag1 (("state", 518), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("utils/diffing_with_keys.mli", 51, 2306, 2322), ("utils/diffing_with_keys.mli", 51, 2306, 2355), 0), 0, 0, 0, Tag1 ("Diffing", 4)), 1, 0)])), Tag1 ([Tag1 (("diff", 519), (0, 0, 0, 1, ((Tag3 ((("mismatch", 510)), [(Tag3 (Tag1 ((("D", 514)), "left"), 0, (0)), 100000000, 0, -55); (Tag3 (Tag1 ((("D", 514)), "right"), 0, (0)), 100000000, 0, -56); (Tag3 (Tag1 ((("D", 514)), "diff"), 0, (0)), 100000000, 0, -57)], (0)), 100000000, 0, -54)), 0, 0, 0, 0, (("utils/diffing_with_keys.mli", 53, 2363, 2365), ("utils/diffing_with_keys.mli", 53, 2363, 2411), 0), 0, 0, 0, Tag1 ("Diffing_with_keys", 70)), 1, 0); Tag1 (("left", 520), (0, 0, 0, 1, ((Tag3 ((("with_pos", 508)), [(Tag3 (Tag1 ((("D", 514)), "left"), 0, (0)), 100000000, 0, -53)], (0)), 100000000, 0, -52)), 0, 0, 0, 0, (("utils/diffing_with_keys.mli", 54, 2412, 2414), ("utils/diffing_with_keys.mli", 54, 2412, 2441), 0), 0, 0, 0, Tag1 ("Diffing_with_keys", 71)), 1, 0); Tag1 (("right", 521), (0, 0, 0, 1, ((Tag3 ((("with_pos", 508)), [(Tag3 (Tag1 ((("D", 514)), "right"), 0, (0)), 100000000, 0, -51)], (0)), 100000000, 0, -50)), 0, 0, 0, 0, (("utils/diffing_with_keys.mli", 55, 2442, 2444), ("utils/diffing_with_keys.mli", 55, 2442, 2473), 0), 0, 0, 0, Tag1 ("Diffing_with_keys", 72)), 1, 0); Tag1 (("composite_change", 522), (0, 0, 0, 1, ((Tag3 ((("change", 511)), [(Tag3 (Tag1 ((("D", 514)), "left"), 0, (0)), 100000000, 0, -47); (Tag3 (Tag1 ((("D", 514)), "right"), 0, (0)), 100000000, 0, -48); (Tag3 (Tag1 ((("D", 514)), "diff"), 0, (0)), 100000000, 0, -49)], (0)), 100000000, 0, -46)), 0, 0, 0, 0, (("utils/diffing_with_keys.mli", 58, 2514, 2516), ("utils/diffing_with_keys.mli", 58, 2514, 2570), 0), 0, 0, 0, Tag1 ("Diffing_with_keys", 73)), 1, 0); Tag1 (("patch", 523), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("composite_change", 522)), 0, (0)), 100000000, 0, -45)], (0)), 100000000, 0, -44)), 0, 0, 0, 0, (("utils/diffing_with_keys.mli", 59, 2571, 2573), ("utils/diffing_with_keys.mli", 59, 2571, 2607), 0), 0, 0, 0, Tag1 ("Diffing_with_keys", 74)), 1, 0); Tag1 (("change", 524), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Diffing")), "change"), [(Tag3 ((("left", 520)), 0, (0)), 100000000, 0, -40); (Tag3 ((("right", 521)), 0, (0)), 100000000, 0, -41); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -42); (Tag3 ((("diff", 519)), 0, (0)), 100000000, 0, -43)], (0)), 100000000, 0, -39)), 0, 0, 0, 0, (("utils/diffing_with_keys.mli", 62, 2633, 2635), ("utils/diffing_with_keys.mli", 62, 2633, 2686), 0), 0, 0, 0, Tag1 ("Diffing_with_keys", 75)), 1, 0); Tag4 (("Parameters", 525), ((Tag1 ([(("weight", 527), ((Tag1 (0, (Tag3 ((("change", 524)), 0, (0)), 100000000, 0, -80), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -79), 0), 100000000, 0, -78), 0, (("utils/diffing_with_keys.mli", 65, 2719, 2723), ("utils/diffing_with_keys.mli", 65, 2719, 2748), 0), 0, Tag1 ("Diffing_with_keys", 76)), 0); (("test", 528), ((Tag1 (0, (Tag3 (Tag1 ((("D", 514)), "state"), 0, (0)), 100000000, 0, -77), (Tag1 (0, (Tag3 ((("left", 520)), 0, (0)), 100000000, 0, -76), (Tag1 (0, (Tag3 ((("right", 521)), 0, (0)), 100000000, 0, -75), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -73); (Tag3 ((("diff", 519)), 0, (0)), 100000000, 0, -74)], (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), 0), 100000000, 0, -69), 0, (("utils/diffing_with_keys.mli", 66, 2749, 2753), ("utils/diffing_with_keys.mli", 66, 2749, 2810), 0), 0, Tag1 ("Diffing_with_keys", 77)), 0); (("update", 529), ((Tag1 (0, (Tag3 ((("change", 524)), 0, (0)), 100000000, 0, -68), (Tag1 (0, (Tag3 (Tag1 ((("D", 514)), "state"), 0, (0)), 100000000, 0, -67), (Tag3 (Tag1 ((("D", 514)), "state"), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0, (("utils/diffing_with_keys.mli", 67, 2811, 2815), ("utils/diffing_with_keys.mli", 67, 2811, 2855), 0), 0, Tag1 ("Diffing_with_keys", 78)), 0); (("key_left", 530), ((Tag1 (0, (Tag3 (Tag1 ((("D", 514)), "left"), 0, (0)), 100000000, 0, -63), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("utils/diffing_with_keys.mli", 69, 2857, 2861), ("utils/diffing_with_keys.mli", 69, 2857, 2891), 0), 0, Tag1 ("Diffing_with_keys", 79)), 0); (("key_right", 531), ((Tag1 (0, (Tag3 (Tag1 ((("D", 514)), "right"), 0, (0)), 100000000, 0, -60), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("utils/diffing_with_keys.mli", 70, 2892, 2896), ("utils/diffing_with_keys.mli", 70, 2892, 2928), 0), 0, Tag1 ("Diffing_with_keys", 80)), 0)])), 0, (("utils/diffing_with_keys.mli", 64, 2688, 2690), ("utils/diffing_with_keys.mli", 71, 2929, 2934), 0), Tag1 ("Diffing_with_keys", 81)), 0); Tag3 (("Simple", 526), 0, (Tag2 ((0, ((("Parameters", 525)))), Tag1 ([(("diff", 532), ((Tag1 (0, (Tag3 (Tag1 ((("D", 514)), "state"), 0, (0)), 100000000, 0, -89), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("D", 514)), "left"), 0, (0)), 100000000, 0, -88)], (0)), 100000000, 0, -87), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("D", 514)), "right"), 0, (0)), 100000000, 0, -86)], (0)), 100000000, 0, -85), (Tag3 ((("patch", 523)), 0, (0)), 100000000, 0, -84), 0), 100000000, 0, -83), 0), 100000000, 0, -82), 0), 100000000, 0, -81), 0, (("utils/diffing_with_keys.mli", 74, 2971, 2977), ("utils/diffing_with_keys.mli", 74, 2971, 3034), 0), 0, Tag1 ("Diffing_with_keys", 82)), 0)])), 0, (("utils/diffing_with_keys.mli", 73, 2936, 2938), ("utils/diffing_with_keys.mli", 75, 3035, 3042), 0), Tag1 ("Diffing_with_keys", 83)), 0, 0)])), 0, (("utils/diffing_with_keys.mli", 51, 2306, 2306), ("utils/diffing_with_keys.mli", 77, 3044, 3047), 0), Tag1 ("Diffing_with_keys", 84)), 0, 0)], "Diffing_with_keys", [("Diffing_with_keys", ("\198\208\133q\023\211C\197\210Q\023\001#o\193H")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Diffing", ("\027\205S\011\160W\184\023\131\250\1571\177\026\005Q")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc"))], [(0)])

