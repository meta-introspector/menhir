type t = Base__.Import.Stdlib.Printexc.raw_backtrace
val sexp_of_t : t -> Sexplib0.Sexp.t
val get : ?at_most_num_frames:int -> unit -> t
val to_string : t -> string
val to_string_list : t -> string list
val elide : bool Base__.Import.ref
module Exn :
  sig
    val am_recording : unit -> bool
    val set_recording : bool -> unit
    val with_recording : bool -> f:(unit -> 'a) -> 'a
    val most_recent : unit -> t
    val most_recent_for_exn : Base__.Exn.t -> t option
  end("DEBUG:rule", [Tag1 (("t", 1422), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import"), "Stdlib"), "Printexc"), "raw_backtrace"), 0, (0)), 100000000, 0, -23)), 0, 0, 0, 0, (("src/backtrace.mli", 15, 586, 586), ("src/backtrace.mli", 15, 586, 652), 0), [(("deriving_inline", (("src/backtrace.mli", 15, 586, 628), ("src/backtrace.mli", 15, 586, 643), 0)), ([([(((("sexp_of"), (("src/backtrace.mli", 15, 586, 644), ("src/backtrace.mli", 15, 586, 651), 0))), (("src/backtrace.mli", 15, 586, 644), ("src/backtrace.mli", 15, 586, 651), 0), 0, 0)], (("src/backtrace.mli", 15, 586, 644), ("src/backtrace.mli", 15, 586, 651), 0))]), (("src/backtrace.mli", 15, 586, 625), ("src/backtrace.mli", 15, 586, 652), 0))], 0, 0, Tag1 ("Base__Backtrace", 0)), 1, 0); (("sexp_of_t", 1423), ((Tag1 (0, (Tag3 ((("t", 1422)), 0, (0)), 100000000, 0, -22), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("src/backtrace.mli", 17, 654, 654), ("src/backtrace.mli", 17, 654, 690), 0), 0, Tag1 ("Base__Backtrace", 1)), 0); (("get", 1424), ((Tag1 (Tag1 ("at_most_num_frames"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -19)], (0)), 100000000, 0, -18), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -17), (Tag3 ((("t", 1422)), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("src/backtrace.mli", 21, 702, 702), ("src/backtrace.mli", 21, 702, 748), 0), 0, Tag1 ("Base__Backtrace", 2)), 0); (("to_string", 1425), ((Tag1 (0, (Tag3 ((("t", 1422)), 0, (0)), 100000000, 0, -13), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("src/backtrace.mli", 22, 749, 749), ("src/backtrace.mli", 22, 749, 776), 0), 0, Tag1 ("Base__Backtrace", 3)), 0); (("to_string_list", 1426), ((Tag1 (0, (Tag3 ((("t", 1422)), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9)], (0)), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("src/backtrace.mli", 23, 777, 777), ("src/backtrace.mli", 23, 777, 814), 0), 0, Tag1 ("Base__Backtrace", 4)), 0); (("elide", 1427), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import"), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -6)], (0)), 100000000, 0, -5), 0, (("src/backtrace.mli", 32, 1236, 1236), ("src/backtrace.mli", 32, 1236, 1256), 0), 0, Tag1 ("Base__Backtrace", 5)), 0); Tag3 (("Exn", 1428), 0, (Tag1 ([(("am_recording", 1430), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -42), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("src/backtrace.mli", 67, 3273, 3275), ("src/backtrace.mli", 67, 3273, 3306), 0), 0, Tag1 ("Base__Backtrace", 6)), 0); (("set_recording", 1431), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -39), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -38), 0), 100000000, 0, -37), 0, (("src/backtrace.mli", 68, 3307, 3309), ("src/backtrace.mli", 68, 3307, 3341), 0), 0, Tag1 ("Base__Backtrace", 7)), 0); (("with_recording", 1432), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -36), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -35), ((("a")), 100000000, 0, -33), 0), 100000000, 0, -34), ((("a")), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("src/backtrace.mli", 69, 3342, 3344), ("src/backtrace.mli", 69, 3342, 3403), 0), 0, Tag1 ("Base__Backtrace", 8)), 0); (("most_recent", 1433), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -30), (Tag3 ((("t", 1422)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("src/backtrace.mli", 79, 3976, 3978), ("src/backtrace.mli", 79, 3976, 4005), 0), 0, Tag1 ("Base__Backtrace", 9)), 0); (("most_recent_for_exn", 1434), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Exn"), "t"), 0, (0)), 100000000, 0, -27), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 1422)), 0, (0)), 100000000, 0, -26)], (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("src/backtrace.mli", 100, 4743, 4745), ("src/backtrace.mli", 100, 4743, 4788), 0), 0, Tag1 ("Base__Backtrace", 10)), 0)]), 0, (("src/backtrace.mli", 66, 3256, 3256), ("src/backtrace.mli", 101, 4789, 4792), 0), Tag1 ("Base__Backtrace", 11)), 0, 0); (("initialize_module", 1429), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/backtrace.mli", 105, 4946, 4946), ("src/backtrace.mli", 105, 4946, 4982), 0), 0, Tag1 ("Base__Backtrace", 12)), 0)], "Base__Backtrace", [("Base__Backtrace", ("\212~\253E\024|\228\141\015\169\012\006\022\0065\181")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Printexc", ("\217u\168\235\179oi\167\235\255\025\017%d\192s")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__MoreLabels", ("\248\232\248\254`<\230\241\161U\193U\1466J\238")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shadow_stdlib", ("\219zi\164\203\158e)\232\221\196\168\138x\142\018")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Base_internalhash_types", ("0\148#2\226\223\018\135\173>!\020\237\017\255\149")); ("Base__Sexp", ("\154\187\171&\209=\153[\236\250!U\174`\190T")); ("Base__Pretty_printer", ("\175\005\031\018\015a\159\220\154c'(a\239j\233")); ("Base__Ppx_hash_lib", ("\199\141\178\193\006\209L\007^\020(\131\224sn8")); ("Base__Ppx_compare_lib", ("\243\186~\233\228\199Ah\181.\223\004e\231\129S")); ("Base__Poly0", ("\230;\143\234\255.H\132KOe7\155\\\023f")); ("Base__Import0", ("\156\129U\197Y[\\\153\017Ho\203\173\204\220\020")); ("Base__Import", ("\014\187\247\141\187\181\142g\176:s_,\181\219\209")); ("Base__Hash_intf", ("h\004P\218\1531G\127\212\208A\024\140\164iq")); ("Base__Hash", ("\206Rc\194\234{s3\248\165\024\162\203{\206\206")); ("Base__Globalize", ("<\243w~.\180\196t\159\193\174[\227\139\215G")); ("Base__Formatter", ("\193\149\030\140\154\1505b\162a`%\243\185'%")); ("Base__Exn", ("?\191\202\221\228\185\154\127\240\191o\134\020\186b\173")); ("Base__Bool0", ("\177f\254p\023\143&\239\020\136\206\242~\018F\251")); ("Base__", ("p\252\007\139\128\163W\025+\0225\001\246|P\158"))], [(0)])

val initialize_module : unit -> unit
