type lexbuf
exception InvalidCodepoint of int
exception MalFormed
val create :
  ?bytes_per_char:(Uchar.t -> int) ->
  (Uchar.t array -> int -> int -> int) -> lexbuf
val set_position :
  ?bytes_position:Lexing.position -> lexbuf -> Lexing.position -> unit
val set_filename : lexbuf -> string -> unit
val from_gen : ?bytes_per_char:(Uchar.t -> int) -> Uchar.t Gen.t -> lexbuf
val from_int_array : ?bytes_per_char:(Uchar.t -> int) -> int array -> lexbuf
val from_uchar_array :
  ?bytes_per_char:(Uchar.t -> int) -> Uchar.t array -> lexbuf
val lexeme_start : lexbuf -> int
val lexeme_bytes_start : lexbuf -> int
val lexeme_end : lexbuf -> int
val lexeme_bytes_end : lexbuf -> int
val loc : lexbuf -> int * int
val bytes_loc : lexbuf -> int * int
val lexeme_length : lexbuf -> int
val lexeme_bytes_length : lexbuf -> int
val lexing_positions : lexbuf -> Lexing.position * Lexing.position
val lexing_bytes_positions : lexbuf -> Lexing.position * Lexing.position
val new_line : lexbuf -> unit
val lexeme : lexbuf -> Uchar.t array
val lexeme_char : lexbuf -> int -> Uchar.t
val sub_lexeme : lexbuf -> int -> int -> Uchar.t array
val rollback : lexbuf -> unit
val start : lexbuf -> unit
val next : lexbuf -> Uchar.t option
val __private__next_int : lexbuf -> int
val mark : lexbuf -> int -> unit
val backtrack : lexbuf -> int
val with_tokenizer :
  (lexbuf -> 'token) ->
  lexbuf -> unit -> 'token * Lexing.position * Lexing.position
module Latin1 :
  sig
    val from_gen : char Gen.t -> lexbuf
    val from_channel : in_channel -> lexbuf
    val from_string : string -> lexbuf
    val lexeme : lexbuf -> string
    val sub_lexeme : lexbuf -> int -> int -> string
    val lexeme_char : lexbuf -> int -> char
  end
module Utf8 :
  sig
    val from_gen : char Gen.t -> lexbuf
    val from_channel : in_channel -> lexbuf
    val from_string : string -> lexbuf
    val lexeme : lexbuf -> string
    val sub_lexeme : lexbuf -> int -> int -> string
  end
module Utf16 :
  sig
    type byte_order = Little_endian | Big_endian
    val from_gen : char Gen.t -> byte_order option -> lexbuf
    val from_channel : in_channel -> byte_order option -> lexbuf
    val from_string : string -> byte_order option -> lexbuf
    val lexeme : lexbuf -> byte_order -> bool -> string
    val sub_lexeme : lexbuf -> int -> int -> byte_order -> bool -> string("DEBUG:rule", [Tag1 (("lexbuf", 476), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/lib/sedlexing.mli", 31, 1611, 1611), ("src/lib/sedlexing.mli", 31, 1611, 1622), 0), 0, 0, 0, Tag1 ("Sedlexing", 0)), 1, 0); Tag2 (("InvalidCodepoint", 477), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -147)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Sedlexing", 1)), 2, 0); Tag2 (("MalFormed", 478), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Sedlexing", 2)), 2, 0); (("create", 479), ((Tag1 (Tag1 ("bytes_per_char"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Uchar"), "t"), 0, (0)), 100000000, 0, -146), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -145), 0), 100000000, 0, -144)], (0)), 100000000, 0, -143), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Uchar"), "t"), 0, (0)), 100000000, 0, -142)], (0)), 100000000, 0, -141), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -140), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -139), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -138), 0), 100000000, 0, -137), 0), 100000000, 0, -136), 0), 100000000, 0, -135), (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -134), 0), 100000000, 0, -133), 0), 100000000, 0, -132), 0, (("src/lib/sedlexing.mli", 51, 2480, 2480), ("src/lib/sedlexing.mli", 54, 2573, 2581), 0), 0, Tag1 ("Sedlexing", 3)), 0); (("set_position", 480), ((Tag1 (Tag1 ("bytes_position"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -131)], (0)), 100000000, 0, -130), (Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -129), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -128), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -127), 0), 100000000, 0, -126), 0), 100000000, 0, -125), 0), 100000000, 0, -124), 0, (("src/lib/sedlexing.mli", 59, 2753, 2753), ("src/lib/sedlexing.mli", 60, 2772, 2842), 0), 0, Tag1 ("Sedlexing", 4)), 0); (("set_filename", 481), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -123), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -122), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -121), 0), 100000000, 0, -120), 0), 100000000, 0, -119), 0, (("src/lib/sedlexing.mli", 65, 3018, 3018), ("src/lib/sedlexing.mli", 65, 3018, 3061), 0), 0, Tag1 ("Sedlexing", 5)), 0); (("from_gen", 482), ((Tag1 (Tag1 ("bytes_per_char"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Uchar"), "t"), 0, (0)), 100000000, 0, -118), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -117), 0), 100000000, 0, -116)], (0)), 100000000, 0, -115), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Gen")), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Uchar"), "t"), 0, (0)), 100000000, 0, -114)], (0)), 100000000, 0, -113), (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -112), 0), 100000000, 0, -111), 0), 100000000, 0, -110), 0, (("src/lib/sedlexing.mli", 69, 3227, 3227), ("src/lib/sedlexing.mli", 69, 3227, 3301), 0), 0, Tag1 ("Sedlexing", 6)), 0); (("from_int_array", 483), ((Tag1 (Tag1 ("bytes_per_char"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Uchar"), "t"), 0, (0)), 100000000, 0, -109), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -108), 0), 100000000, 0, -107)], (0)), 100000000, 0, -106), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -105)], (0)), 100000000, 0, -104), (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -103), 0), 100000000, 0, -102), 0), 100000000, 0, -101), 0, (("src/lib/sedlexing.mli", 73, 3467, 3467), ("src/lib/sedlexing.mli", 73, 3467, 3543), 0), 0, Tag1 ("Sedlexing", 7)), 0); (("from_uchar_array", 484), ((Tag1 (Tag1 ("bytes_per_char"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Uchar"), "t"), 0, (0)), 100000000, 0, -100), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -99), 0), 100000000, 0, -98)], (0)), 100000000, 0, -97), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Uchar"), "t"), 0, (0)), 100000000, 0, -96)], (0)), 100000000, 0, -95), (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -94), 0), 100000000, 0, -93), 0), 100000000, 0, -92), 0, (("src/lib/sedlexing.mli", 77, 3709, 3709), ("src/lib/sedlexing.mli", 78, 3732, 3793), 0), 0, Tag1 ("Sedlexing", 8)), 0); (("lexeme_start", 485), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -91), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -90), 0), 100000000, 0, -89), 0, (("src/lib/sedlexing.mli", 89, 4250, 4250), ("src/lib/sedlexing.mli", 89, 4250, 4282), 0), 0, Tag1 ("Sedlexing", 9)), 0); (("lexeme_bytes_start", 486), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -88), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("src/lib/sedlexing.mli", 94, 4468, 4468), ("src/lib/sedlexing.mli", 94, 4468, 4506), 0), 0, Tag1 ("Sedlexing", 10)), 0); (("lexeme_end", 487), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -85), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -84), 0), 100000000, 0, -83), 0, (("src/lib/sedlexing.mli", 100, 4726, 4726), ("src/lib/sedlexing.mli", 100, 4726, 4756), 0), 0, Tag1 ("Sedlexing", 11)), 0); (("lexeme_bytes_end", 488), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -82), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0, (("src/lib/sedlexing.mli", 106, 4971, 4971), ("src/lib/sedlexing.mli", 106, 4971, 5007), 0), 0, Tag1 ("Sedlexing", 12)), 0); (("loc", 489), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -79), (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -77); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -78)]), 100000000, 0, -76), 0), 100000000, 0, -75), 0, (("src/lib/sedlexing.mli", 111, 5135, 5135), ("src/lib/sedlexing.mli", 111, 5135, 5164), 0), 0, Tag1 ("Sedlexing", 13)), 0); (("bytes_loc", 490), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -74), (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -72); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -73)]), 100000000, 0, -71), 0), 100000000, 0, -70), 0, (("src/lib/sedlexing.mli", 116, 5310, 5310), ("src/lib/sedlexing.mli", 116, 5310, 5345), 0), 0, Tag1 ("Sedlexing", 14)), 0); (("lexeme_length", 491), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -69), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -68), 0), 100000000, 0, -67), 0, (("src/lib/sedlexing.mli", 122, 5561, 5561), ("src/lib/sedlexing.mli", 122, 5561, 5594), 0), 0, Tag1 ("Sedlexing", 15)), 0); (("lexeme_bytes_length", 492), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -66), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -65), 0), 100000000, 0, -64), 0, (("src/lib/sedlexing.mli", 128, 5816, 5816), ("src/lib/sedlexing.mli", 128, 5816, 5855), 0), 0, Tag1 ("Sedlexing", 16)), 0); (("lexing_positions", 493), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -63), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -61); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -62)]), 100000000, 0, -60), 0), 100000000, 0, -59), 0, (("src/lib/sedlexing.mli", 134, 6119, 6119), ("src/lib/sedlexing.mli", 134, 6119, 6185), 0), 0, Tag1 ("Sedlexing", 17)), 0); (("lexing_bytes_positions", 494), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -58), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -56); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -57)]), 100000000, 0, -55), 0), 100000000, 0, -54), 0, (("src/lib/sedlexing.mli", 140, 6449, 6449), ("src/lib/sedlexing.mli", 140, 6449, 6521), 0), 0, Tag1 ("Sedlexing", 18)), 0); (("new_line", 495), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -53), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("src/lib/sedlexing.mli", 145, 6721, 6721), ("src/lib/sedlexing.mli", 145, 6721, 6750), 0), 0, Tag1 ("Sedlexing", 19)), 0); (("lexeme", 496), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -50), (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Uchar"), "t"), 0, (0)), 100000000, 0, -49)], (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("src/lib/sedlexing.mli", 149, 6881, 6881), ("src/lib/sedlexing.mli", 149, 6881, 6917), 0), 0, Tag1 ("Sedlexing", 20)), 0); (("lexeme_char", 497), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -46), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -45), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Uchar"), "t"), 0, (0)), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("src/lib/sedlexing.mli", 153, 7024, 7024), ("src/lib/sedlexing.mli", 153, 7024, 7066), 0), 0, Tag1 ("Sedlexing", 21)), 0); (("sub_lexeme", 498), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -41), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -40), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -39), (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Uchar"), "t"), 0, (0)), 100000000, 0, -38)], (0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("src/lib/sedlexing.mli", 157, 7220, 7220), ("src/lib/sedlexing.mli", 157, 7220, 7274), 0), 0, Tag1 ("Sedlexing", 22)), 0); (("rollback", 499), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -33), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("src/lib/sedlexing.mli", 164, 7602, 7602), ("src/lib/sedlexing.mli", 164, 7602, 7631), 0), 0, Tag1 ("Sedlexing", 23)), 0); (("start", 500), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -30), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("src/lib/sedlexing.mli", 180, 8261, 8261), ("src/lib/sedlexing.mli", 180, 8261, 8287), 0), 0, Tag1 ("Sedlexing", 24)), 0); (("next", 501), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -27), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Uchar"), "t"), 0, (0)), 100000000, 0, -26)], (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("src/lib/sedlexing.mli", 186, 8540, 8540), ("src/lib/sedlexing.mli", 186, 8540, 8575), 0), 0, Tag1 ("Sedlexing", 25)), 0); (("__private__next_int", 502), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -23), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("src/lib/sedlexing.mli", 195, 8961, 8961), ("src/lib/sedlexing.mli", 195, 8961, 9000), 0), 0, Tag1 ("Sedlexing", 26)), 0); (("mark", 503), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -20), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -19), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("src/lib/sedlexing.mli", 199, 9129, 9129), ("src/lib/sedlexing.mli", 199, 9129, 9161), 0), 0, Tag1 ("Sedlexing", 27)), 0); (("backtrack", 504), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -15), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("src/lib/sedlexing.mli", 204, 9354, 9354), ("src/lib/sedlexing.mli", 204, 9354, 9383), 0), 0, Tag1 ("Sedlexing", 28)), 0); (("with_tokenizer", 505), ((Tag1 (0, (Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -12), ((("token")), 100000000, 0, -6), 0), 100000000, 0, -11), (Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -9), (Tag2 ([((("token")), 100000000, 0, -6); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -7); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -8)]), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/lib/sedlexing.mli", 210, 9600, 9600), ("src/lib/sedlexing.mli", 214, 9667, 9711), 0), 0, Tag1 ("Sedlexing", 29)), 0); Tag3 (("Latin1", 506), 0, (Tag1 ([(("from_gen", 509), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Gen")), "t"), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -172)], (0)), 100000000, 0, -171), (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -170), 0), 100000000, 0, -169), 0, (("src/lib/sedlexing.mli", 221, 9897, 9899), ("src/lib/sedlexing.mli", 221, 9897, 9934), 0), 0, Tag1 ("Sedlexing", 30)), 0); (("from_channel", 510), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "in_channel"), 0, (0)), 100000000, 0, -168), (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -167), 0), 100000000, 0, -166), 0, (("src/lib/sedlexing.mli", 225, 10059, 10061), ("src/lib/sedlexing.mli", 225, 10059, 10100), 0), 0, Tag1 ("Sedlexing", 31)), 0); (("from_string", 511), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -165), (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -164), 0), 100000000, 0, -163), 0, (("src/lib/sedlexing.mli", 228, 10157, 10159), ("src/lib/sedlexing.mli", 228, 10157, 10193), 0), 0, Tag1 ("Sedlexing", 32)), 0); (("lexeme", 512), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -162), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -161), 0), 100000000, 0, -160), 0, (("src/lib/sedlexing.mli", 233, 10387, 10389), ("src/lib/sedlexing.mli", 233, 10387, 10418), 0), 0, Tag1 ("Sedlexing", 33)), 0); (("sub_lexeme", 513), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -159), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -158), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -157), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -156), 0), 100000000, 0, -155), 0), 100000000, 0, -154), 0), 100000000, 0, -153), 0, (("src/lib/sedlexing.mli", 238, 10615, 10617), ("src/lib/sedlexing.mli", 238, 10615, 10664), 0), 0, Tag1 ("Sedlexing", 34)), 0); (("lexeme_char", 514), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -152), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -151), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -150), 0), 100000000, 0, -149), 0), 100000000, 0, -148), 0, (("src/lib/sedlexing.mli", 243, 10862, 10864), ("src/lib/sedlexing.mli", 243, 10862, 10903), 0), 0, Tag1 ("Sedlexing", 35)), 0)]), 0, (("src/lib/sedlexing.mli", 218, 9754, 9754), ("src/lib/sedlexing.mli", 244, 10904, 10907), 0), Tag1 ("Sedlexing", 36)), 0, 0); Tag3 (("Utf8", 507), 0, (Tag1 ([(("from_gen", 515), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Gen")), "t"), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -192)], (0)), 100000000, 0, -191), (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -190), 0), 100000000, 0, -189), 0, (("src/lib/sedlexing.mli", 248, 10981, 10983), ("src/lib/sedlexing.mli", 248, 10981, 11018), 0), 0, Tag1 ("Sedlexing", 37)), 0); (("from_channel", 516), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "in_channel"), 0, (0)), 100000000, 0, -188), (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -187), 0), 100000000, 0, -186), 0, (("src/lib/sedlexing.mli", 251, 11081, 11083), ("src/lib/sedlexing.mli", 251, 11081, 11122), 0), 0, Tag1 ("Sedlexing", 38)), 0); (("from_string", 517), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -185), (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -184), 0), 100000000, 0, -183), 0, (("src/lib/sedlexing.mli", 254, 11178, 11180), ("src/lib/sedlexing.mli", 254, 11178, 11214), 0), 0, Tag1 ("Sedlexing", 39)), 0); (("lexeme", 518), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -182), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -181), 0), 100000000, 0, -180), 0, (("src/lib/sedlexing.mli", 257, 11279, 11281), ("src/lib/sedlexing.mli", 257, 11279, 11310), 0), 0, Tag1 ("Sedlexing", 40)), 0); (("sub_lexeme", 519), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -179), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -178), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -177), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -176), 0), 100000000, 0, -175), 0), 100000000, 0, -174), 0), 100000000, 0, -173), 0, (("src/lib/sedlexing.mli", 260, 11379, 11381), ("src/lib/sedlexing.mli", 260, 11379, 11428), 0), 0, Tag1 ("Sedlexing", 41)), 0)]), 0, (("src/lib/sedlexing.mli", 246, 10909, 10909), ("src/lib/sedlexing.mli", 261, 11429, 11432), 0), Tag1 ("Sedlexing", 42)), 0, 0); Tag3 (("Utf16", 508), 0, (Tag1 ([Tag1 (("byte_order", 520), (0, 0, Tag1 ([(("Little_endian", 468), (0), 0, (("src/lib/sedlexing.mli", 264, 11453, 11473), ("src/lib/sedlexing.mli", 264, 11453, 11486), 0), 0, Tag1 ("Sedlexing", 44)); (("Big_endian", 469), (0), 0, (("src/lib/sedlexing.mli", 264, 11453, 11487), ("src/lib/sedlexing.mli", 264, 11453, 11499), 0), 0, Tag1 ("Sedlexing", 45))], 0), 1, 0, 0, 0, 0, 0, (("src/lib/sedlexing.mli", 264, 11453, 11455), ("src/lib/sedlexing.mli", 264, 11453, 11499), 0), 0, 1, 0, Tag1 ("Sedlexing", 43)), 1, 0); (("from_gen", 521), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Gen")), "t"), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -229)], (0)), 100000000, 0, -228), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("byte_order", 520)), 0, (0)), 100000000, 0, -227)], (0)), 100000000, 0, -226), (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -225), 0), 100000000, 0, -224), 0), 100000000, 0, -223), 0, (("src/lib/sedlexing.mli", 274, 12012, 12014), ("src/lib/sedlexing.mli", 274, 12012, 12070), 0), 0, Tag1 ("Sedlexing", 46)), 0); (("from_channel", 522), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "in_channel"), 0, (0)), 100000000, 0, -222), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("byte_order", 520)), 0, (0)), 100000000, 0, -221)], (0)), 100000000, 0, -220), (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -219), 0), 100000000, 0, -218), 0), 100000000, 0, -217), 0, (("src/lib/sedlexing.mli", 277, 12129, 12131), ("src/lib/sedlexing.mli", 277, 12129, 12191), 0), 0, Tag1 ("Sedlexing", 47)), 0); (("from_string", 523), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -216), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("byte_order", 520)), 0, (0)), 100000000, 0, -215)], (0)), 100000000, 0, -214), (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -213), 0), 100000000, 0, -212), 0), 100000000, 0, -211), 0, (("src/lib/sedlexing.mli", 280, 12245, 12247), ("src/lib/sedlexing.mli", 280, 12245, 12302), 0), 0, Tag1 ("Sedlexing", 48)), 0); (("lexeme", 524), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -210), (Tag1 (0, (Tag3 ((("byte_order", 520)), 0, (0)), 100000000, 0, -209), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -208), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -207), 0), 100000000, 0, -206), 0), 100000000, 0, -205), 0), 100000000, 0, -204), 0, (("src/lib/sedlexing.mli", 285, 12473, 12475), ("src/lib/sedlexing.mli", 285, 12473, 12526), 0), 0, Tag1 ("Sedlexing", 49)), 0); (("sub_lexeme", 525), ((Tag1 (0, (Tag3 ((("lexbuf", 476)), 0, (0)), 100000000, 0, -203), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -202), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -201), (Tag1 (0, (Tag3 ((("byte_order", 520)), 0, (0)), 100000000, 0, -200), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -199), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -198), 0), 100000000, 0, -197), 0), 100000000, 0, -196), 0), 100000000, 0, -195), 0), 100000000, 0, -194), 0), 100000000, 0, -193), 0, (("src/lib/sedlexing.mli", 290, 12705, 12707), ("src/lib/sedlexing.mli", 290, 12705, 12776), 0), 0, Tag1 ("Sedlexing", 50)), 0)]), 0, (("src/lib/sedlexing.mli", 263, 11434, 11434), ("src/lib/sedlexing.mli", 291, 12777, 12780), 0), Tag1 ("Sedlexing", 51)), 0, 0)], "Sedlexing", [("Sedlexing", ("\135\188c\001\243y\142\154\147\177\141\242\029\164\187l")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Gen_intf", ("\165\134\192\190\203\011\000;\174\168\246u\206\222\127G")); ("Gen", ("\030\n\188\130\216~\194x\163~\249\248\238.\252s")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

  end
