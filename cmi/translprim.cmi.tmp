val event_before :
  Lambda.scoped_location ->
  Typedtree.expression -> Lambda.lambda -> Lambda.lambda
val event_after :
  Lambda.scoped_location ->
  Typedtree.expression -> Lambda.lambda -> Lambda.lambda
val add_exception_ident : Ident.t -> unit
val remove_exception_ident : Ident.t -> unit
val clear_used_primitives : unit -> unit
val get_used_primitives : unit -> Path.t list
val check_primitive_arity : Location.t -> Primitive.description -> unit
val transl_primitive :
  Lambda.scoped_location ->
  Primitive.description ->
  Env.t -> Types.type_expr -> Path.t option -> Lambda.lambda
val transl_primitive_application :
  Lambda.scoped_location ->
  Primitive.description ->
  Env.t ->
  Types.type_expr ->
  Path.t ->
  Typedtree.expression option ->
  Lambda.lambda list -> Typedtree.expression list -> Lambda.lambda
type error =
    Unknown_builtin_primitive of string
  | Wrong_arity_builtin_primitive of string
exception Error of Location.t * error
("DEBUG:rule", [(("event_before", 1026), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Lambda")), "scoped_location"), 0, (0)), 100000000, 0, -74), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Typedtree")), "expression"), 0, (0)), 100000000, 0, -73), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Lambda")), "lambda"), 0, (0)), 100000000, 0, -72), (Tag3 (Tag1 ((Tag2 ("Lambda")), "lambda"), 0, (0)), 100000000, 0, -71), 0), 100000000, 0, -70), 0), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("lambda/translprim.mli", 18, 1116, 1116), ("lambda/translprim.mli", 19, 1182, 1234), 0), 0, Tag1 ("Translprim", 6)), 0); (("event_after", 1027), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Lambda")), "scoped_location"), 0, (0)), 100000000, 0, -67), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Typedtree")), "expression"), 0, (0)), 100000000, 0, -66), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Lambda")), "lambda"), 0, (0)), 100000000, 0, -65), (Tag3 (Tag1 ((Tag2 ("Lambda")), "lambda"), 0, (0)), 100000000, 0, -64), 0), 100000000, 0, -63), 0), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("lambda/translprim.mli", 21, 1236, 1236), ("lambda/translprim.mli", 22, 1301, 1352), 0), 0, Tag1 ("Translprim", 7)), 0); (("add_exception_ident", 1028), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -60), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("lambda/translprim.mli", 26, 1387, 1387), ("lambda/translprim.mli", 26, 1387, 1428), 0), 0, Tag1 ("Translprim", 8)), 0); (("remove_exception_ident", 1029), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -57), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -56), 0), 100000000, 0, -55), 0, (("lambda/translprim.mli", 27, 1429, 1429), ("lambda/translprim.mli", 27, 1429, 1473), 0), 0, Tag1 ("Translprim", 9)), 0); (("clear_used_primitives", 1030), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -54), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -53), 0), 100000000, 0, -52), 0, (("lambda/translprim.mli", 29, 1475, 1475), ("lambda/translprim.mli", 29, 1475, 1515), 0), 0, Tag1 ("Translprim", 10)), 0); (("get_used_primitives", 1031), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -51), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -50)], (0)), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("lambda/translprim.mli", 30, 1516, 1516), ("lambda/translprim.mli", 30, 1516, 1560), 0), 0, Tag1 ("Translprim", 11)), 0); (("check_primitive_arity", 1032), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Location")), "t"), 0, (0)), 100000000, 0, -47), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Primitive")), "description"), 0, (0)), 100000000, 0, -46), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("lambda/translprim.mli", 32, 1562, 1562), ("lambda/translprim.mli", 33, 1590, 1635), 0), 0, Tag1 ("Translprim", 12)), 0); (("transl_primitive", 1033), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Lambda")), "scoped_location"), 0, (0)), 100000000, 0, -42), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Primitive")), "description"), 0, (0)), 100000000, 0, -41), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -40), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -39), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -38)], (0)), 100000000, 0, -37), (Tag3 (Tag1 ((Tag2 ("Lambda")), "lambda"), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("lambda/translprim.mli", 35, 1637, 1637), ("lambda/translprim.mli", 37, 1722, 1773), 0), 0, Tag1 ("Translprim", 14)), 0); (("transl_primitive_application", 1034), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Lambda")), "scoped_location"), 0, (0)), 100000000, 0, -30), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Primitive")), "description"), 0, (0)), 100000000, 0, -29), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Env")), "t"), 0, (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -27), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -26), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Typedtree")), "expression"), 0, (0)), 100000000, 0, -25)], (0)), 100000000, 0, -24), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Lambda")), "lambda"), 0, (0)), 100000000, 0, -23)], (0)), 100000000, 0, -22), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Typedtree")), "expression"), 0, (0)), 100000000, 0, -21)], (0)), 100000000, 0, -20), (Tag3 (Tag1 ((Tag2 ("Lambda")), "lambda"), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("lambda/translprim.mli", 39, 1775, 1775), ("lambda/translprim.mli", 42, 1934, 2000), 0), 0, Tag1 ("Translprim", 15)), 0); Tag1 (("error", 1035), (0, 0, Tag1 ([(("Unknown_builtin_primitive", 866), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9)]), 0, (("lambda/translprim.mli", 47, 2029, 2031), ("lambda/translprim.mli", 47, 2029, 2068), 0), 0, Tag1 ("Translprim", 17)); (("Wrong_arity_builtin_primitive", 867), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10)]), 0, (("lambda/translprim.mli", 48, 2069, 2071), ("lambda/translprim.mli", 48, 2069, 2112), 0), 0, Tag1 ("Translprim", 18))], 0), 1, 0, 0, 0, 0, 0, (("lambda/translprim.mli", 46, 2016, 2016), ("lambda/translprim.mli", 48, 2069, 2112), 0), 0, 0, 0, Tag1 ("Translprim", 16)), 1, 0); Tag2 (("Error", 1036), ((Tag3 ("exn", 7)), 0, ([(Tag3 (Tag1 ((Tag2 ("Location")), "t"), 0, (0)), 100000000, 0, -7); (Tag3 ((("error", 1035)), 0, (0)), 100000000, 0, -8)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Translprim", 19)), 2, 0); (("report_error", 1037), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((("error", 1035)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("lambda/translprim.mli", 54, 2166, 2166), ("lambda/translprim.mli", 54, 2166, 2211), 0), 0, Tag1 ("Translprim", 20)), 0)], "Translprim", [("Translprim", ("\202\199S\163\142m\238*\171\198s\134\220z\247\027")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Typedtree", ("c5z\186\175w\146\254\018V\184\031\0038\004\227")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Subst", ("\021\031\148\223\127\186\189\135\027}\145r\216\143\177\156")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Load_path", ("\012@\228l\230\164S\172h\1726X\020\252o}")); ("Lambda", ("\180\1419\236'\146K$\128\006\135q\135V\029\180")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("Env", ("\021\n\181\142x\b\169j\227\"\017\248*\178\245\223")); ("Debuginfo", ("\131\251\175\217P\194M\163\022\151\002\005\006\185:\185")); ("Cmi_format", ("6\177\bU\139\"\023\152=\249\135\174\b\011Cg")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216"))], [(0)])
val report_error : Format.formatter -> error -> unit
