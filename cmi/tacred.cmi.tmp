type evaluable_global_reference =
    EvalVarRef of Names.Id.t
  | EvalConstRef of Names.Constant.t
val eq_egr : evaluable_global_reference -> evaluable_global_reference -> bool
val subst_evaluable_reference :
  Mod_subst.substitution ->
  evaluable_global_reference -> evaluable_global_reference
type reduction_tactic_error =
    InvalidAbstraction of Environ.env * Evd.evar_map * EConstr.constr *
      (Environ.env * Type_errors.type_error)
exception ReductionTacticError of reduction_tactic_error
val is_evaluable : Environ.env -> evaluable_global_reference -> bool
exception NotEvaluableRef of Names.GlobRef.t
val error_not_evaluable : Names.GlobRef.t -> 'a
val evaluable_of_global_reference :
  Environ.env -> Names.GlobRef.t -> evaluable_global_reference
val global_of_evaluable_reference :
  evaluable_global_reference -> Names.GlobRef.t
exception Redelimination
val red_product : Reductionops.reduction_function
val try_red_product : Reductionops.reduction_function
val simpl : Reductionops.reduction_function
val whd_simpl : Reductionops.reduction_function
val hnf_constr : Reductionops.reduction_function
val hnf_constr0 : Reductionops.reduction_function
val unfoldn :
  (Locus.occurrences * evaluable_global_reference) list ->
  Reductionops.reduction_function
val fold_commands : EConstr.constr list -> Reductionops.reduction_function
val pattern_occs :
  (Locus.occurrences * EConstr.constr) list ->
  Reductionops.e_reduction_function
val cbv_norm_flags :
  CClosure.RedFlags.reds -> Reductionops.reduction_function
val cbv_beta : Reductionops.reduction_function
val cbv_betaiota : Reductionops.reduction_function
val cbv_betadeltaiota : Reductionops.reduction_function
val compute : Reductionops.reduction_function
val reduce_to_atomic_ind :
  Environ.env ->
  Evd.evar_map ->
  EConstr.types -> (Names.inductive * EConstr.EInstance.t) * EConstr.types
val reduce_to_quantified_ind :
  Environ.env ->
  Evd.evar_map ->
  EConstr.types -> (Names.inductive * EConstr.EInstance.t) * EConstr.types
val eval_to_quantified_ind :
  Environ.env ->
  Evd.evar_map -> EConstr.types -> Names.inductive * EConstr.EInstance.t
val reduce_to_quantified_ref :
  ?allow_failure:bool ->
  Environ.env ->
  Evd.evar_map -> Names.GlobRef.t -> EConstr.types -> EConstr.types
val reduce_to_atomic_ref :
  ?allow_failure:bool ->
  Environ.env ->
  Evd.evar_map -> Names.GlobRef.t -> EConstr.types -> EConstr.types
val find_hnf_rectype :
  Environ.env ->
  Evd.evar_map ->
  EConstr.types ->
  (Names.inductive * EConstr.EInstance.t) * EConstr.constr list
val contextually :
  bool ->
  Locus.occurrences * Pattern.constr_pattern ->
  (Ltac_pretype.patvar_map -> Reductionops.reduction_function) ->
  Reductionops.reduction_function
val e_contextually :
  bool ->
  Locus.occurrences * Pattern.constr_pattern ->
  (Ltac_pretype.patvar_map -> Reductionops.e_reduction_function) ->
  Reductionops.e_reduction_function
("DEBUG:rule", [Tag1 (("evaluable_global_reference", 1438), (0, 0, Tag1 ([(("EvalVarRef", 1023), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -159)]), 0, (("pretyping/tacred.mli", 22, 845, 847), ("pretyping/tacred.mli", 22, 845, 867), 0), 0, Tag1 ("Tacred", 1)); (("EvalConstRef", 1040), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -160)]), 0, (("pretyping/tacred.mli", 23, 868, 870), ("pretyping/tacred.mli", 23, 868, 898), 0), 0, Tag1 ("Tacred", 2))], 0), 1, 0, 0, 0, 0, 0, (("pretyping/tacred.mli", 21, 811, 811), ("pretyping/tacred.mli", 23, 868, 898), 0), 0, 0, 0, Tag1 ("Tacred", 0)), 1, 0); (("eq_egr", 1439), ((Tag1 (0, (Tag3 ((("evaluable_global_reference", 1438)), 0, (0)), 100000000, 0, -158), (Tag1 (0, (Tag3 ((("evaluable_global_reference", 1438)), 0, (0)), 100000000, 0, -157), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -156), 0), 100000000, 0, -155), 0), 100000000, 0, -154), 0, (("pretyping/tacred.mli", 25, 900, 900), ("pretyping/tacred.mli", 25, 900, 978), 0), 0, Tag1 ("Tacred", 3)), 0); (("subst_evaluable_reference", 1440), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Mod_subst")), "substitution"), 0, (0)), 100000000, 0, -153), (Tag1 (0, (Tag3 ((("evaluable_global_reference", 1438)), 0, (0)), 100000000, 0, -152), (Tag3 ((("evaluable_global_reference", 1438)), 0, (0)), 100000000, 0, -151), 0), 100000000, 0, -150), 0), 100000000, 0, -149), 0, (("pretyping/tacred.mli", 32, 1284, 1284), ("pretyping/tacred.mli", 33, 1316, 1400), 0), 0, Tag1 ("Tacred", 4)), 0); Tag1 (("reduction_tactic_error", 1441), (0, 0, Tag1 ([(("InvalidAbstraction", 1107), ([(Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -143); (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -144); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -145); (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -147); (Tag3 (Tag1 ((Tag2 ("Type_errors")), "type_error"), 0, (0)), 100000000, 0, -148)]), 100000000, 0, -146)]), 0, (("pretyping/tacred.mli", 36, 1432, 1436), ("pretyping/tacred.mli", 36, 1432, 1514), 0), 0, Tag1 ("Tacred", 7))], 0), 1, 0, 0, 0, 0, 0, (("pretyping/tacred.mli", 35, 1402, 1402), ("pretyping/tacred.mli", 36, 1432, 1514), 0), 0, 0, 0, Tag1 ("Tacred", 5)), 1, 0); Tag2 (("ReductionTacticError", 1442), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((("reduction_tactic_error", 1441)), 0, (0)), 100000000, 0, -142)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Tacred", 9)), 2, 0); (("is_evaluable", 1443), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -141), (Tag1 (0, (Tag3 ((("evaluable_global_reference", 1438)), 0, (0)), 100000000, 0, -140), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -139), 0), 100000000, 0, -138), 0), 100000000, 0, -137), 0, (("pretyping/tacred.mli", 44, 1665, 1665), ("pretyping/tacred.mli", 44, 1665, 1733), 0), 0, Tag1 ("Tacred", 10)), 0); Tag2 (("NotEvaluableRef", 1444), ((Tag3 ("exn", 7)), 0, ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -136)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Tacred", 11)), 2, 0); (("error_not_evaluable", 1445), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -135), ((("a")), 100000000, 0, -134), 0), 100000000, 0, -133), 0, (("pretyping/tacred.mli", 47, 1774, 1774), ("pretyping/tacred.mli", 47, 1774, 1815), 0), 0, Tag1 ("Tacred", 12)), 0); (("evaluable_of_global_reference", 1446), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -132), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -131), (Tag3 ((("evaluable_global_reference", 1438)), 0, (0)), 100000000, 0, -130), 0), 100000000, 0, -129), 0), 100000000, 0, -128), 0, (("pretyping/tacred.mli", 49, 1817, 1817), ("pretyping/tacred.mli", 50, 1853, 1909), 0), 0, Tag1 ("Tacred", 13)), 0); (("global_of_evaluable_reference", 1447), ((Tag1 (0, (Tag3 ((("evaluable_global_reference", 1438)), 0, (0)), 100000000, 0, -127), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -126), 0), 100000000, 0, -125), 0, (("pretyping/tacred.mli", 52, 1911, 1911), ("pretyping/tacred.mli", 53, 1947, 1988), 0), 0, Tag1 ("Tacred", 14)), 0); Tag2 (("Redelimination", 1448), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Tacred", 15)), 2, 0); (("red_product", 1449), ((Tag3 (Tag1 ((Tag2 ("Reductionops")), "reduction_function"), 0, (0)), 100000000, 0, -124), 0, (("pretyping/tacred.mli", 58, 2067, 2067), ("pretyping/tacred.mli", 58, 2067, 2103), 0), 0, Tag1 ("Tacred", 16)), 0); (("try_red_product", 1450), ((Tag3 (Tag1 ((Tag2 ("Reductionops")), "reduction_function"), 0, (0)), 100000000, 0, -123), 0, (("pretyping/tacred.mli", 61, 2160, 2160), ("pretyping/tacred.mli", 61, 2160, 2200), 0), 0, Tag1 ("Tacred", 17)), 0); (("simpl", 1451), ((Tag3 (Tag1 ((Tag2 ("Reductionops")), "reduction_function"), 0, (0)), 100000000, 0, -122), 0, (("pretyping/tacred.mli", 64, 2215, 2215), ("pretyping/tacred.mli", 64, 2215, 2245), 0), 0, Tag1 ("Tacred", 18)), 0); (("whd_simpl", 1452), ((Tag3 (Tag1 ((Tag2 ("Reductionops")), "reduction_function"), 0, (0)), 100000000, 0, -121), 0, (("pretyping/tacred.mli", 67, 2277, 2277), ("pretyping/tacred.mli", 67, 2277, 2311), 0), 0, Tag1 ("Tacred", 19)), 0); (("hnf_constr", 1453), ((Tag3 (Tag1 ((Tag2 ("Reductionops")), "reduction_function"), 0, (0)), 100000000, 0, -120), 0, (("pretyping/tacred.mli", 71, 2440, 2440), ("pretyping/tacred.mli", 71, 2440, 2475), 0), 0, Tag1 ("Tacred", 20)), 0); (("hnf_constr0", 1454), ((Tag3 (Tag1 ((Tag2 ("Reductionops")), "reduction_function"), 0, (0)), 100000000, 0, -119), 0, (("pretyping/tacred.mli", 74, 2535, 2535), ("pretyping/tacred.mli", 74, 2535, 2571), 0), 0, Tag1 ("Tacred", 21)), 0); (("unfoldn", 1455), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Locus")), "occurrences"), 0, (0)), 100000000, 0, -117); (Tag3 ((("evaluable_global_reference", 1438)), 0, (0)), 100000000, 0, -118)]), 100000000, 0, -116)], (0)), 100000000, 0, -115), (Tag3 (Tag1 ((Tag2 ("Reductionops")), "reduction_function"), 0, (0)), 100000000, 0, -114), 0), 100000000, 0, -113), 0, (("pretyping/tacred.mli", 77, 2587, 2587), ("pretyping/tacred.mli", 78, 2601, 2673), 0), 0, Tag1 ("Tacred", 22)), 0); (("fold_commands", 1456), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -112)], (0)), 100000000, 0, -111), (Tag3 (Tag1 ((Tag2 ("Reductionops")), "reduction_function"), 0, (0)), 100000000, 0, -110), 0), 100000000, 0, -109), 0, (("pretyping/tacred.mli", 81, 2687, 2687), ("pretyping/tacred.mli", 81, 2687, 2741), 0), 0, Tag1 ("Tacred", 23)), 0); (("pattern_occs", 1457), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Locus")), "occurrences"), 0, (0)), 100000000, 0, -107); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -108)]), 100000000, 0, -106)], (0)), 100000000, 0, -105), (Tag3 (Tag1 ((Tag2 ("Reductionops")), "e_reduction_function"), 0, (0)), 100000000, 0, -104), 0), 100000000, 0, -103), 0, (("pretyping/tacred.mli", 84, 2758, 2758), ("pretyping/tacred.mli", 84, 2758, 2828), 0), 0, Tag1 ("Tacred", 24)), 0); (("cbv_norm_flags", 1458), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("CClosure")), "RedFlags"), "reds"), 0, (0)), 100000000, 0, -102), (Tag3 (Tag1 ((Tag2 ("Reductionops")), "reduction_function"), 0, (0)), 100000000, 0, -101), 0), 100000000, 0, -100), 0, (("pretyping/tacred.mli", 89, 2930, 2930), ("pretyping/tacred.mli", 89, 2930, 2996), 0), 0, Tag1 ("Tacred", 25)), 0); (("cbv_beta", 1459), ((Tag3 (Tag1 ((Tag2 ("Reductionops")), "reduction_function"), 0, (0)), 100000000, 0, -99), 0, (("pretyping/tacred.mli", 90, 2997, 2999), ("pretyping/tacred.mli", 90, 2997, 3032), 0), 0, Tag1 ("Tacred", 26)), 0); (("cbv_betaiota", 1460), ((Tag3 (Tag1 ((Tag2 ("Reductionops")), "reduction_function"), 0, (0)), 100000000, 0, -98), 0, (("pretyping/tacred.mli", 91, 3033, 3035), ("pretyping/tacred.mli", 91, 3033, 3072), 0), 0, Tag1 ("Tacred", 27)), 0); (("cbv_betadeltaiota", 1461), ((Tag3 (Tag1 ((Tag2 ("Reductionops")), "reduction_function"), 0, (0)), 100000000, 0, -97), 0, (("pretyping/tacred.mli", 92, 3073, 3075), ("pretyping/tacred.mli", 92, 3073, 3118), 0), 0, Tag1 ("Tacred", 28)), 0); (("compute", 1462), ((Tag3 (Tag1 ((Tag2 ("Reductionops")), "reduction_function"), 0, (0)), 100000000, 0, -96), 0, (("pretyping/tacred.mli", 93, 3119, 3121), ("pretyping/tacred.mli", 93, 3119, 3154), 0), 0, Tag1 ("Tacred", 29)), 0); (("reduce_to_atomic_ind", 1463), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -95), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -94), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -93), (Tag2 ([(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -90); (Tag3 (Tag1 (Tag1 ((Tag2 ("EConstr")), "EInstance"), "t"), 0, (0)), 100000000, 0, -91)]), 100000000, 0, -89); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -92)]), 100000000, 0, -88), 0), 100000000, 0, -87), 0), 100000000, 0, -86), 0), 100000000, 0, -85), 0, (("pretyping/tacred.mli", 98, 3351, 3351), ("pretyping/tacred.mli", 98, 3351, 3440), 0), 0, Tag1 ("Tacred", 30)), 0); (("reduce_to_quantified_ind", 1464), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -84), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -83), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -82), (Tag2 ([(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -79); (Tag3 (Tag1 (Tag1 ((Tag2 ("EConstr")), "EInstance"), "t"), 0, (0)), 100000000, 0, -80)]), 100000000, 0, -78); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -81)]), 100000000, 0, -77), 0), 100000000, 0, -76), 0), 100000000, 0, -75), 0), 100000000, 0, -74), 0, (("pretyping/tacred.mli", 103, 3627, 3627), ("pretyping/tacred.mli", 103, 3627, 3720), 0), 0, Tag1 ("Tacred", 31)), 0); (("eval_to_quantified_ind", 1465), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -73), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -72), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -71), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -69); (Tag3 (Tag1 (Tag1 ((Tag2 ("EConstr")), "EInstance"), "t"), 0, (0)), 100000000, 0, -70)]), 100000000, 0, -68), 0), 100000000, 0, -67), 0), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("pretyping/tacred.mli", 107, 3836, 3836), ("pretyping/tacred.mli", 107, 3836, 3918), 0), 0, Tag1 ("Tacred", 32)), 0); (("reduce_to_quantified_ref", 1466), ((Tag1 (Tag1 ("allow_failure"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -64)], (0)), 100000000, 0, -63), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -62), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -61), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -60), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -59), (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), 0), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("pretyping/tacred.mli", 113, 4216, 4216), ("pretyping/tacred.mli", 114, 4247, 4319), 0), 0, Tag1 ("Tacred", 33)), 0); (("reduce_to_atomic_ref", 1467), ((Tag1 (Tag1 ("allow_failure"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -52)], (0)), 100000000, 0, -51), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -49), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -48), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -47), (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("pretyping/tacred.mli", 116, 4321, 4321), ("pretyping/tacred.mli", 117, 4348, 4420), 0), 0, Tag1 ("Tacred", 34)), 0); (("find_hnf_rectype", 1468), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -40), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -39), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -38), (Tag2 ([(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -34); (Tag3 (Tag1 (Tag1 ((Tag2 ("EConstr")), "EInstance"), "t"), 0, (0)), 100000000, 0, -35)]), 100000000, 0, -33); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -37)], (0)), 100000000, 0, -36)]), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("pretyping/tacred.mli", 119, 4422, 4422), ("pretyping/tacred.mli", 120, 4445, 4515), 0), 0, Tag1 ("Tacred", 35)), 0); (("contextually", 1469), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -28), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Locus")), "occurrences"), 0, (0)), 100000000, 0, -26); (Tag3 (Tag1 ((Tag2 ("Pattern")), "constr_pattern"), 0, (0)), 100000000, 0, -27)]), 100000000, 0, -25), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ltac_pretype")), "patvar_map"), 0, (0)), 100000000, 0, -24), (Tag3 (Tag1 ((Tag2 ("Reductionops")), "reduction_function"), 0, (0)), 100000000, 0, -23), 0), 100000000, 0, -22), (Tag3 (Tag1 ((Tag2 ("Reductionops")), "reduction_function"), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("pretyping/tacred.mli", 122, 4517, 4517), ("pretyping/tacred.mli", 123, 4576, 4634), 0), 0, Tag1 ("Tacred", 36)), 0); (("e_contextually", 1470), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -17), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Locus")), "occurrences"), 0, (0)), 100000000, 0, -15); (Tag3 (Tag1 ((Tag2 ("Pattern")), "constr_pattern"), 0, (0)), 100000000, 0, -16)]), 100000000, 0, -14), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ltac_pretype")), "patvar_map"), 0, (0)), 100000000, 0, -13), (Tag3 (Tag1 ((Tag2 ("Reductionops")), "e_reduction_function"), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), (Tag3 (Tag1 ((Tag2 ("Reductionops")), "e_reduction_function"), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("pretyping/tacred.mli", 125, 4636, 4636), ("pretyping/tacred.mli", 126, 4697, 4759), 0), 0, Tag1 ("Tacred", 37)), 0); (("check_privacy", 1471), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("pretyping/tacred.mli", 129, 4830, 4830), ("pretyping/tacred.mli", 129, 4830, 4874), 0), 0, Tag1 ("Tacred", 38)), 0)], "Tacred", [("Tacred", ("\133d\143\1310z\030\237\232\002\001\025\147\140\215:")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("UnivSubst", ("\190qu\031mc\130\181\003G]\132\"\219m)")); ("UnivProblem", ("6'\161\018\181\001.\253\000\141a6\171\1727\155")); ("UnivNames", ("%\151_\209%+JM$n\001\232\194n\178N")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UState", ("SD\203\215|\136\n\251\239\208\148\215C\n\167\005")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("Type_errors", ("7\157\162-\214M\206\196\228\191\005v\134\177\144\134")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Store", ("/dT\252\145\179pq\216{\181\206\190K+U")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("Section", ("\245\207\b\021\142v=\155#w\246}\"4b\006")); ("Safe_typing", (")\250?\164\145\132\241\127\186\152h+\145\"\237l")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Reductionops", ("\179\023P\218\146Uh\014IS\196C\031q~#")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Proofview_monad", ("\218\196\189S\147\216\129\221\231\224v\228O\024*\239")); ("Proofview", ("\245\140U\027\236\199\199&\242\156\199YG\250tA")); ("Primred", ("\158G\192\182\224\196\144*\174y_E\165\012\137C")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Pattern", ("\195C\140Wb=\022\222\208\227^K\003\020\215X")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("Nativevalues", ("8:\007\025e\226c,\001\171\146#l\210\171\152")); ("Nativelib", ("V\239\205Y1\147E:,\176\196Hy\1483|")); ("Nativecode", ("\190\185\255\006m\012\210\163\138Rz\247\15283\183")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Namegen", ("\187\222\224T\255\020\1808-\212*\164\131\177\157x")); ("Monad", ("\244\171T\157\194p\187\160\149\195{\132\222\020\253\148")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Ltac_pretype", ("\224\"\167\018i:U\172>\188\128$\r\252\020T")); ("Logic_monad", ("\130\157\160Q\163vQ\137\184\2242\209\128\024\220i")); ("Locus", ("_\002\003W\246\181\225\242Uf\139\226\176\174\192I")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hook", ("\183\194\223\003\155\169',\187\240a;E\b\1396")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Glob_term", ("\165=a\227\160\153.\021_$\232\209T\236\153O")); ("Genlambda", ("\170}\024\241\141\222\136S\169\219\2212i\134KI")); ("Geninterp", ("2S\151\191\189\159\004\188;\224d\199|U\004\028")); ("Genarg", ("\1434\015\001\152\196\005s\156\136\195\185\247\b3\t")); ("Ftactic", ("K\172\205\128\241\162\160\201\202\1561o\180L\206:")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evd", ("\211\205p\193\216\129r\006\239oN\142ar\196\175")); ("Evar_kinds", ("\023L\186\132\218}\254\221\185\198\220\200h\003{\021")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("EConstr", ("\201aW\156\157;N\004\201V\208\006L\166\211)")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("DAst", ("\224/\200)\007\184ni\134\b\139\204\241\005w\212")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conversion", ("\158\150&\195M\tv\127|\029\158RRK\211A")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CDebug", ("^4\210p7\239!3\138\138\213?\239`\250\157")); ("CClosure", ("\167\b\022\241V-\r\253\b\002\000j]\223%\142")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
val check_privacy : Environ.env -> Names.inductive -> unit
