module Outline :
  functor (Env : Stage.envt) ->
    sig
      type on_going
      val initial : M2l.t -> on_going
      val next :
        pkg:Pkg.t ->
        (Env.t -> on_going -> (Module.Sig.t * Deps.t, on_going) result)
        Stage.param
      val block : on_going -> (Summary.t * Paths.S.t) Loc.ext option
      val recursive_patching : on_going -> Summary.t -> on_going
      val pp : on_going Pp.t
    end
module Make :
  functor (Env : Stage.envt) (Param : Stage.param) ->
    sig
      type on_going
      val initial : M2l.t -> on_going
      val next :
        pkg:Pkg.t ->
        (Env.t -> on_going -> (Module.Sig.t * Deps.t, on_going) result)
        Stage.implicit
      val block : on_going -> (Summary.t * Paths.S.t) Loc.ext option
      val recursive_patching : on_going -> Summary.t -> on_going
      val pp : on_going Pp.t("DEBUG:rule", [Tag3 (("Outline", 409), 0, (Tag2 (((("Env", 413)), (Tag1 ((Tag2 ("Stage")), "envt"))), Tag1 ([Tag1 (("on_going", 414), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/dep_zipper.mli", 2, 34, 35), ("lib/dep_zipper.mli", 4, 109, 151), 0), 0, 0, 0, Tag1 ("Stage", 22)), 1, 0); (("initial", 415), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("M2l")), "t"), 0, (0)), 100000000, 0, -30), (Tag3 ((("on_going", 414)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("lib/dep_zipper.mli", 2, 34, 35), ("lib/dep_zipper.mli", 4, 109, 151), 0), 0, Tag1 ("Stage", 28)), 0); (("next", 416), ((Tag1 (("pkg"), (Tag3 (Tag1 ((Tag2 ("Pkg")), "t"), 0, (0)), 100000000, 0, -27), (Tag3 (Tag1 ((Tag2 ("Stage")), "param"), [(Tag1 (0, (Tag3 (Tag1 ((("Env", 413)), "t"), 0, (0)), 100000000, 0, -26), (Tag1 (0, (Tag3 ((("on_going", 414)), 0, (0)), 100000000, 0, -25), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Module")), "Sig"), "t"), 0, (0)), 100000000, 0, -22); (Tag3 (Tag1 ((Tag2 ("Deps")), "t"), 0, (0)), 100000000, 0, -23)]), 100000000, 0, -21); (Tag3 ((("on_going", 414)), 0, (0)), 100000000, 0, -24)], (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18)], (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("lib/dep_zipper.mli", 2, 34, 35), ("lib/dep_zipper.mli", 4, 109, 151), 0), 0, Tag1 ("Stage", 29)), 0); (("block", 417), ((Tag1 (0, (Tag3 ((("on_going", 414)), 0, (0)), 100000000, 0, -15), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "ext"), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Summary")), "t"), 0, (0)), 100000000, 0, -13); (Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "S"), "t"), 0, (0)), 100000000, 0, -14)]), 100000000, 0, -12)], (0)), 100000000, 0, -11)], (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("lib/dep_zipper.mli", 2, 34, 35), ("lib/dep_zipper.mli", 4, 109, 151), 0), 0, Tag1 ("Stage", 32)), 0); (("recursive_patching", 418), ((Tag1 (0, (Tag3 ((("on_going", 414)), 0, (0)), 100000000, 0, -8), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Summary")), "t"), 0, (0)), 100000000, 0, -7), (Tag3 ((("on_going", 414)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0), 100000000, 0, -4), 0, (("lib/dep_zipper.mli", 2, 34, 35), ("lib/dep_zipper.mli", 4, 109, 151), 0), 0, Tag1 ("Stage", 33)), 0); (("pp", 419), ((Tag3 (Tag1 ((Tag2 ("Pp")), "t"), [(Tag3 ((("on_going", 414)), 0, (0)), 100000000, 0, -3)], (0)), 100000000, 0, -2), 0, (("lib/dep_zipper.mli", 2, 34, 35), ("lib/dep_zipper.mli", 4, 109, 151), 0), 0, Tag1 ("Stage", 34)), 0)])), 0, (("lib/dep_zipper.mli", 1, 0, 0), ("lib/dep_zipper.mli", 4, 109, 151), 0), Tag1 ("Dep_zipper", 4)), 0, 0); Tag3 (("Make", 410), 0, (Tag2 (((("Env", 411)), (Tag1 ((Tag2 ("Stage")), "envt"))), Tag2 (((("Param", 412)), (Tag1 ((Tag2 ("Stage")), "param"))), Tag1 ([Tag1 (("on_going", 420), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/dep_zipper.mli", 7, 201, 203), ("lib/dep_zipper.mli", 7, 201, 241), 0), 0, 0, 0, Tag1 ("Stage", 22)), 1, 0); (("initial", 421), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("M2l")), "t"), 0, (0)), 100000000, 0, -59), (Tag3 ((("on_going", 420)), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0, (("lib/dep_zipper.mli", 7, 201, 203), ("lib/dep_zipper.mli", 7, 201, 241), 0), 0, Tag1 ("Stage", 28)), 0); (("next", 422), ((Tag1 (("pkg"), (Tag3 (Tag1 ((Tag2 ("Pkg")), "t"), 0, (0)), 100000000, 0, -56), (Tag3 (Tag1 ((Tag2 ("Stage")), "implicit"), [(Tag1 (0, (Tag3 (Tag1 ((("Env", 411)), "t"), 0, (0)), 100000000, 0, -55), (Tag1 (0, (Tag3 ((("on_going", 420)), 0, (0)), 100000000, 0, -54), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Module")), "Sig"), "t"), 0, (0)), 100000000, 0, -51); (Tag3 (Tag1 ((Tag2 ("Deps")), "t"), 0, (0)), 100000000, 0, -52)]), 100000000, 0, -50); (Tag3 ((("on_going", 420)), 0, (0)), 100000000, 0, -53)], (0)), 100000000, 0, -49), 0), 100000000, 0, -48), 0), 100000000, 0, -47)], (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0, (("lib/dep_zipper.mli", 7, 201, 203), ("lib/dep_zipper.mli", 7, 201, 241), 0), 0, Tag1 ("Stage", 29)), 0); (("block", 423), ((Tag1 (0, (Tag3 ((("on_going", 420)), 0, (0)), 100000000, 0, -44), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "ext"), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Summary")), "t"), 0, (0)), 100000000, 0, -42); (Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "S"), "t"), 0, (0)), 100000000, 0, -43)]), 100000000, 0, -41)], (0)), 100000000, 0, -40)], (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("lib/dep_zipper.mli", 7, 201, 203), ("lib/dep_zipper.mli", 7, 201, 241), 0), 0, Tag1 ("Stage", 32)), 0); (("recursive_patching", 424), ((Tag1 (0, (Tag3 ((("on_going", 420)), 0, (0)), 100000000, 0, -37), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Summary")), "t"), 0, (0)), 100000000, 0, -36), (Tag3 ((("on_going", 420)), 0, (0)), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0, (("lib/dep_zipper.mli", 7, 201, 203), ("lib/dep_zipper.mli", 7, 201, 241), 0), 0, Tag1 ("Stage", 33)), 0); (("pp", 425), ((Tag3 (Tag1 ((Tag2 ("Pp")), "t"), [(Tag3 ((("on_going", 420)), 0, (0)), 100000000, 0, -32)], (0)), 100000000, 0, -31), 0, (("lib/dep_zipper.mli", 7, 201, 203), ("lib/dep_zipper.mli", 7, 201, 241), 0), 0, Tag1 ("Stage", 34)), 0)]))), 0, (("lib/dep_zipper.mli", 6, 153, 153), ("lib/dep_zipper.mli", 7, 201, 241), 0), Tag1 ("Dep_zipper", 8)), 0, 0)], "Dep_zipper", [("Dep_zipper", ("\144}\005a\012\2420\142H\181\138Fy\176H\168")); ("Unitname", ("\155n\201\211\249\229\028$\220J\172\018<\249\171\158")); ("Uloc", ("\172\208h 6@\178[\156\249\206\172%\133\167\239")); ("Transforms", ("\247\177\132M&\202\192\164\018Ng6Wu\007\018")); ("Support", ("YA;\029\006a\255\202R\137\181\133\184\209)\005")); ("Summary", ("\243\022s.\187>\205\012\161)\1369wh\247p")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stage", ("\224\018\196\1757\168\209wr\235\232\015z\144\206V")); ("Schematic", ("\180\179\011\178\017I\241^\235\149h\161k\b\209\142")); ("Pp", ("\167zCQ\134\167\215\2517\247\158\219\250\223.\197")); ("Pkg", ("SneaP\023\210\210\240\218\128bA\te\239")); ("Paths", ("\000\152\242H\139l\222\245\245Ndb\202P^\175")); ("Namespaced", ("%\208\253;3\161W$\236\1838K\195z\1493")); ("Name", ("4? \167\131n\184\000\214\031\017\027\153\002]^")); ("Module", ("2_s\200\188\137\247\158>\168\195\023\195\n\011V")); ("Modname", ("v\160\183\003\212\232\177\007\228-\002\145i\230\255\248")); ("M2l", ("\208\241\201a\199\212\172v;\135t\185\027\196~\029")); ("Loc", ("ax\213\152\006\175?\212%\0014\238\021S\218=")); ("Id", ("w\207`(\179n\181\161\155\252\243\195\006\139NO")); ("Fault", ("\232\144\144(K\139\181-h!\017\212@?\127\199")); ("Deps", ("%\164\252&\165z\218\221\023\182\235\223+\147\145\195")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

    end
