module type Round =
  sig
    type t
    val round :
      ?dir:[ `Down | `Nearest | `Up | `Zero ] -> t -> to_multiple_of:t -> t
    val round_towards_zero : t -> to_multiple_of:t -> t
    val round_down : t -> to_multiple_of:t -> t
    val round_up : t -> to_multiple_of:t -> t
    val round_nearest : t -> to_multiple_of:t -> t
  end
module type Hexable =
  sig
    type t
    module Hex :
      sig
        type nonrec t = t
        val t_of_sexp : Sexplib0__.Sexp.t -> t
        val sexp_of_t : t -> Sexplib0__.Sexp.t
        val t_sexp_grammar : t Sexplib0.Sexp_grammar.t
        val compare : t Base__Ppx_compare_lib.compare
        val hash_fold_t : t Base__Ppx_hash_lib.hash_fold
        val hash : t -> Base__Ppx_hash_lib.Std.Hash.hash_value
        val of_string : string -> t
        val to_string : t -> string
        val to_string_hum : ?delimiter:char -> t -> string
      end
  end
module type S_common =
  sig
    type t
    val t_sexp_grammar : t Sexplib0.Sexp_grammar.t
    val of_float : float -> t
    val to_float : t -> float
    val of_int_exn : int -> t
    val to_int_exn : t -> int
    val hash_fold_t : t Base__Ppx_hash_lib.hash_fold
    val hash : t -> Base__Ppx_hash_lib.Std.Hash.hash_value
    val t_of_sexp : Sexplib0__.Sexp.t -> t
    val sexp_of_t : t -> Sexplib0__.Sexp.t
    val of_string : string -> t
    val to_string : t -> string
    val ( >= ) : t -> t -> bool
    val ( <= ) : t -> t -> bool
    val ( = ) : t -> t -> bool
    val ( > ) : t -> t -> bool
    val ( < ) : t -> t -> bool
    val ( <> ) : t -> t -> bool
    val equal : t -> t -> bool
    val compare : t -> t -> int
    val min : t -> t -> t
    val max : t -> t -> t
    val ascending : t -> t -> int
    val descending : t -> t -> int
    val between : t -> low:t -> high:t -> bool
    val clamp_exn : t -> min:t -> max:t -> t
    val clamp : t -> min:t -> max:t -> t Base__.Or_error.t
    type comparator_witness
    val comparator : (t, comparator_witness) Base__Comparator.comparator
    val pp : Base__.Formatter.t -> t -> unit
    val hashable : t Base__.Hashable.t
    val is_positive : t -> bool
    val is_non_negative : t -> bool
    val is_negative : t -> bool
    val is_non_positive : t -> bool
    val sign : t -> Base__Comparable_intf.Sign.t
    val invariant : t Base__Invariant_intf.inv
    module Hex :
      sig
        type nonrec t = t
        val t_of_sexp : Sexplib0__.Sexp.t -> t
        val sexp_of_t : t -> Sexplib0__.Sexp.t
        val t_sexp_grammar : t Sexplib0.Sexp_grammar.t
        val compare : t Base__Ppx_compare_lib.compare
        val hash_fold_t : t Base__Ppx_hash_lib.hash_fold
        val hash : t -> Base__Ppx_hash_lib.Std.Hash.hash_value
        val of_string : string -> t
        val to_string : t -> string
        val to_string_hum : ?delimiter:char -> t -> string
      end
    val of_string_opt : string -> t option
    val to_string_hum : ?delimiter:char -> t -> string
    val zero : t
    val one : t
    val minus_one : t
    val ( + ) : t -> t -> t
    val ( - ) : t -> t -> t
    val ( * ) : t -> t -> t
    val ( ** ) : t -> t -> t
    val neg : t -> t
    val ( ~- ) : t -> t
    val ( /% ) : t -> t -> t
    val ( % ) : t -> t -> t
    val ( / ) : t -> t -> t
    val rem : t -> t -> t
    val ( // ) : t -> t -> float
    val ( land ) : t -> t -> t
    val ( lor ) : t -> t -> t
    val ( lxor ) : t -> t -> t
    val lnot : t -> t
    val ( lsl ) : t -> int -> t
    val ( asr ) : t -> int -> t
    val round :
      ?dir:[ `Down | `Nearest | `Up | `Zero ] -> t -> to_multiple_of:t -> t
    val round_towards_zero : t -> to_multiple_of:t -> t
    val round_down : t -> to_multiple_of:t -> t
    val round_up : t -> to_multiple_of:t -> t
    val round_nearest : t -> to_multiple_of:t -> t
    val abs : t -> t
    val succ : t -> t
    val pred : t -> t
    val pow : t -> t -> t
    val bit_and : t -> t -> t
    val bit_or : t -> t -> t
    val bit_xor : t -> t -> t
    val bit_not : t -> t
    val popcount : t -> int
    val shift_left : t -> int -> t
    val shift_right : t -> int -> t
    val decr : t Base__.Import.ref -> unit
    val incr : t Base__.Import.ref -> unit
    val of_int32_exn : int32 -> t
    val to_int32_exn : t -> int32
    val of_int64_exn : int64 -> t
    val to_int64 : t -> int64
    val of_nativeint_exn : nativeint -> t
    val to_nativeint_exn : t -> nativeint
    val of_float_unchecked : float -> t
  end
module type Operators_unbounded =
  sig
    type t
    val ( + ) : t -> t -> t
    val ( - ) : t -> t -> t
    val ( * ) : t -> t -> t
    val ( / ) : t -> t -> t
    val ( ~- ) : t -> t
    val ( ** ) : t -> t -> t
    val ( >= ) : t -> t -> bool
    val ( <= ) : t -> t -> bool
    val ( = ) : t -> t -> bool
    val ( > ) : t -> t -> bool
    val ( < ) : t -> t -> bool
    val ( <> ) : t -> t -> bool
    val abs : t -> t
    val neg : t -> t
    val zero : t
    val ( % ) : t -> t -> t
    val ( /% ) : t -> t -> t
    val ( // ) : t -> t -> float
    val ( land ) : t -> t -> t
    val ( lor ) : t -> t -> t
    val ( lxor ) : t -> t -> t
    val lnot : t -> t
    val ( lsl ) : t -> int -> t
    val ( asr ) : t -> int -> t
  end
module type Operators =
  sig
    type t
    val ( + ) : t -> t -> t
    val ( - ) : t -> t -> t
    val ( * ) : t -> t -> t
    val ( / ) : t -> t -> t
    val ( ~- ) : t -> t
    val ( ** ) : t -> t -> t
    val ( >= ) : t -> t -> bool
    val ( <= ) : t -> t -> bool
    val ( = ) : t -> t -> bool
    val ( > ) : t -> t -> bool
    val ( < ) : t -> t -> bool
    val ( <> ) : t -> t -> bool
    val abs : t -> t
    val neg : t -> t
    val zero : t
    val ( % ) : t -> t -> t
    val ( /% ) : t -> t -> t
    val ( // ) : t -> t -> float
    val ( land ) : t -> t -> t
    val ( lor ) : t -> t -> t
    val ( lxor ) : t -> t -> t
    val lnot : t -> t
    val ( lsl ) : t -> int -> t
    val ( asr ) : t -> int -> t
    val ( lsr ) : t -> int -> t
  end
module type S_unbounded =
  sig
    type t
    val t_sexp_grammar : t Sexplib0.Sexp_grammar.t
    val of_float : float -> t
    val to_float : t -> float
    val of_int_exn : int -> t
    val to_int_exn : t -> int
    val hash_fold_t : t Base__Ppx_hash_lib.hash_fold
    val hash : t -> Base__Ppx_hash_lib.Std.Hash.hash_value
    val t_of_sexp : Sexplib0__.Sexp.t -> t
    val sexp_of_t : t -> Sexplib0__.Sexp.t
    val of_string : string -> t
    val to_string : t -> string
    val ( >= ) : t -> t -> bool
    val ( <= ) : t -> t -> bool
    val ( = ) : t -> t -> bool
    val ( > ) : t -> t -> bool
    val ( < ) : t -> t -> bool
    val ( <> ) : t -> t -> bool
    val equal : t -> t -> bool
    val compare : t -> t -> int
    val min : t -> t -> t
    val max : t -> t -> t
    val ascending : t -> t -> int
    val descending : t -> t -> int
    val between : t -> low:t -> high:t -> bool
    val clamp_exn : t -> min:t -> max:t -> t
    val clamp : t -> min:t -> max:t -> t Base__.Or_error.t
    type comparator_witness
    val comparator : (t, comparator_witness) Base__Comparator.comparator
    val pp : Base__.Formatter.t -> t -> unit
    val hashable : t Base__.Hashable.t
    val is_positive : t -> bool
    val is_non_negative : t -> bool
    val is_negative : t -> bool
    val is_non_positive : t -> bool
    val sign : t -> Base__Comparable_intf.Sign.t
    val invariant : t Base__Invariant_intf.inv
    module Hex :
      sig
        type nonrec t = t
        val t_of_sexp : Sexplib0__.Sexp.t -> t
        val sexp_of_t : t -> Sexplib0__.Sexp.t
        val t_sexp_grammar : t Sexplib0.Sexp_grammar.t
        val compare : t Base__Ppx_compare_lib.compare
        val hash_fold_t : t Base__Ppx_hash_lib.hash_fold
        val hash : t -> Base__Ppx_hash_lib.Std.Hash.hash_value
        val of_string : string -> t
        val to_string : t -> string
        val to_string_hum : ?delimiter:char -> t -> string
      end
    val of_string_opt : string -> t option
    val to_string_hum : ?delimiter:char -> t -> string
    val zero : t
    val one : t
    val minus_one : t
    val ( + ) : t -> t -> t
    val ( - ) : t -> t -> t
    val ( * ) : t -> t -> t
    val ( ** ) : t -> t -> t
    val neg : t -> t
    val ( ~- ) : t -> t
    val ( /% ) : t -> t -> t
    val ( % ) : t -> t -> t
    val ( / ) : t -> t -> t
    val rem : t -> t -> t
    val ( // ) : t -> t -> float
    val ( land ) : t -> t -> t
    val ( lor ) : t -> t -> t
    val ( lxor ) : t -> t -> t
    val lnot : t -> t
    val ( lsl ) : t -> int -> t
    val ( asr ) : t -> int -> t
    val round :
      ?dir:[ `Down | `Nearest | `Up | `Zero ] -> t -> to_multiple_of:t -> t
    val round_towards_zero : t -> to_multiple_of:t -> t
    val round_down : t -> to_multiple_of:t -> t
    val round_up : t -> to_multiple_of:t -> t
    val round_nearest : t -> to_multiple_of:t -> t
    val abs : t -> t
    val succ : t -> t
    val pred : t -> t
    val pow : t -> t -> t
    val bit_and : t -> t -> t
    val bit_or : t -> t -> t
    val bit_xor : t -> t -> t
    val bit_not : t -> t
    val popcount : t -> int
    val shift_left : t -> int -> t
    val shift_right : t -> int -> t
    val decr : t Base__.Import.ref -> unit
    val incr : t Base__.Import.ref -> unit
    val of_int32_exn : int32 -> t
    val to_int32_exn : t -> int32
    val of_int64_exn : int64 -> t
    val to_int64 : t -> int64
    val of_nativeint_exn : nativeint -> t
    val to_nativeint_exn : t -> nativeint
    val of_float_unchecked : float -> t
    module O :
      sig
        val ( + ) : t -> t -> t
        val ( - ) : t -> t -> t
        val ( * ) : t -> t -> t
        val ( / ) : t -> t -> t
        val ( ~- ) : t -> t
        val ( ** ) : t -> t -> t
        val ( >= ) : t -> t -> bool
        val ( <= ) : t -> t -> bool
        val ( = ) : t -> t -> bool
        val ( > ) : t -> t -> bool
        val ( < ) : t -> t -> bool
        val ( <> ) : t -> t -> bool
        val abs : t -> t
        val neg : t -> t
        val zero : t
        val ( % ) : t -> t -> t
        val ( /% ) : t -> t -> t
        val ( // ) : t -> t -> float
        val ( land ) : t -> t -> t
        val ( lor ) : t -> t -> t
        val ( lxor ) : t -> t -> t
        val lnot : t -> t
        val ( lsl ) : t -> int -> t
        val ( asr ) : t -> int -> t
      end
  end
module type S =
  sig
    type t
    val t_sexp_grammar : t Sexplib0.Sexp_grammar.t
    val of_float : float -> t
    val to_float : t -> float
    val of_int_exn : int -> t
    val to_int_exn : t -> int
    val hash_fold_t : t Base__Ppx_hash_lib.hash_fold
    val hash : t -> Base__Ppx_hash_lib.Std.Hash.hash_value
    val t_of_sexp : Sexplib0__.Sexp.t -> t
    val sexp_of_t : t -> Sexplib0__.Sexp.t
    val of_string : string -> t
    val to_string : t -> string
    val ( >= ) : t -> t -> bool
    val ( <= ) : t -> t -> bool
    val ( = ) : t -> t -> bool
    val ( > ) : t -> t -> bool
    val ( < ) : t -> t -> bool
    val ( <> ) : t -> t -> bool
    val equal : t -> t -> bool
    val compare : t -> t -> int
    val min : t -> t -> t
    val max : t -> t -> t
    val ascending : t -> t -> int
    val descending : t -> t -> int
    val between : t -> low:t -> high:t -> bool
    val clamp_exn : t -> min:t -> max:t -> t
    val clamp : t -> min:t -> max:t -> t Base__.Or_error.t
    type comparator_witness
    val comparator : (t, comparator_witness) Base__Comparator.comparator
    val pp : Base__.Formatter.t -> t -> unit
    val hashable : t Base__.Hashable.t
    val is_positive : t -> bool
    val is_non_negative : t -> bool
    val is_negative : t -> bool
    val is_non_positive : t -> bool
    val sign : t -> Base__Comparable_intf.Sign.t
    val invariant : t Base__Invariant_intf.inv
    module Hex :
      sig
        type nonrec t = t
        val t_of_sexp : Sexplib0__.Sexp.t -> t
        val sexp_of_t : t -> Sexplib0__.Sexp.t
        val t_sexp_grammar : t Sexplib0.Sexp_grammar.t
        val compare : t Base__Ppx_compare_lib.compare
        val hash_fold_t : t Base__Ppx_hash_lib.hash_fold
        val hash : t -> Base__Ppx_hash_lib.Std.Hash.hash_value
        val of_string : string -> t
        val to_string : t -> string
        val to_string_hum : ?delimiter:char -> t -> string
      end
    val of_string_opt : string -> t option
    val to_string_hum : ?delimiter:char -> t -> string
    val zero : t
    val one : t
    val minus_one : t
    val ( + ) : t -> t -> t
    val ( - ) : t -> t -> t
    val ( * ) : t -> t -> t
    val ( ** ) : t -> t -> t
    val neg : t -> t
    val ( ~- ) : t -> t
    val ( /% ) : t -> t -> t
    val ( % ) : t -> t -> t
    val ( / ) : t -> t -> t
    val rem : t -> t -> t
    val ( // ) : t -> t -> float
    val ( land ) : t -> t -> t
    val ( lor ) : t -> t -> t
    val ( lxor ) : t -> t -> t
    val lnot : t -> t
    val ( lsl ) : t -> int -> t
    val ( asr ) : t -> int -> t
    val round :
      ?dir:[ `Down | `Nearest | `Up | `Zero ] -> t -> to_multiple_of:t -> t
    val round_towards_zero : t -> to_multiple_of:t -> t
    val round_down : t -> to_multiple_of:t -> t
    val round_up : t -> to_multiple_of:t -> t
    val round_nearest : t -> to_multiple_of:t -> t
    val abs : t -> t
    val succ : t -> t
    val pred : t -> t
    val pow : t -> t -> t
    val bit_and : t -> t -> t
    val bit_or : t -> t -> t
    val bit_xor : t -> t -> t
    val bit_not : t -> t
    val popcount : t -> int
    val shift_left : t -> int -> t
    val shift_right : t -> int -> t
    val decr : t Base__.Import.ref -> unit
    val incr : t Base__.Import.ref -> unit
    val of_int32_exn : int32 -> t
    val to_int32_exn : t -> int32
    val of_int64_exn : int64 -> t
    val to_int64 : t -> int64
    val of_nativeint_exn : nativeint -> t
    val to_nativeint_exn : t -> nativeint
    val of_float_unchecked : float -> t
    val num_bits : int
    val max_value : t
    val min_value : t
    val ( lsr ) : t -> int -> t
    val shift_right_logical : t -> int -> t
    val ceil_pow2 : t -> t
    val floor_pow2 : t -> t
    val ceil_log2 : t -> int
    val floor_log2 : t -> int
    val is_pow2 : t -> bool
    val clz : t -> int
    val ctz : t -> int
    module O :
      sig
        val ( + ) : t -> t -> t
        val ( - ) : t -> t -> t
        val ( * ) : t -> t -> t
        val ( / ) : t -> t -> t
        val ( ~- ) : t -> t
        val ( ** ) : t -> t -> t
        val ( >= ) : t -> t -> bool
        val ( <= ) : t -> t -> bool
        val ( = ) : t -> t -> bool
        val ( > ) : t -> t -> bool
        val ( < ) : t -> t -> bool
        val ( <> ) : t -> t -> bool
        val abs : t -> t
        val neg : t -> t
        val zero : t
        val ( % ) : t -> t -> t
        val ( /% ) : t -> t -> t
        val ( // ) : t -> t -> float
        val ( land ) : t -> t -> t
        val ( lor ) : t -> t -> t
        val ( lxor ) : t -> t -> t
        val lnot : t -> t
        val ( lsl ) : t -> int -> t
        val ( asr ) : t -> int -> t
        val ( lsr ) : t -> int -> t
      end
  end
module type Int_without_module_types =
  sig
    type t = int
    val globalize : t -> t
    val t_sexp_grammar : t Sexplib0.Sexp_grammar.t
    val of_float : float -> t
    val to_float : t -> float
    val of_int_exn : int -> t
    val to_int_exn : t -> int
    val hash_fold_t : t Base__Ppx_hash_lib.hash_fold
    val hash : t -> Base__Ppx_hash_lib.Std.Hash.hash_value
    val t_of_sexp : Sexplib0__.Sexp.t -> t
    val sexp_of_t : t -> Sexplib0__.Sexp.t
    val of_string : string -> t
    val to_string : t -> string
    val equal : t -> t -> bool
    val compare : t -> t -> int
    val min : t -> t -> t
    val max : t -> t -> t
    val ascending : t -> t -> int
    val descending : t -> t -> int
    val between : t -> low:t -> high:t -> bool
    val clamp_exn : t -> min:t -> max:t -> t
    val clamp : t -> min:t -> max:t -> t Base__.Or_error.t
    type comparator_witness
    val comparator : (t, comparator_witness) Base__Comparator.comparator
    val pp : Base__.Formatter.t -> t -> unit
    val hashable : t Base__.Hashable.t
    val is_positive : t -> bool
    val is_non_negative : t -> bool
    val is_negative : t -> bool
    val is_non_positive : t -> bool
    val sign : t -> Base__Comparable_intf.Sign.t
    val invariant : t Base__Invariant_intf.inv
    module Hex :
      sig
        type nonrec t = t
        val t_of_sexp : Sexplib0__.Sexp.t -> t
        val sexp_of_t : t -> Sexplib0__.Sexp.t
        val t_sexp_grammar : t Sexplib0.Sexp_grammar.t
        val compare : t Base__Ppx_compare_lib.compare
        val hash_fold_t : t Base__Ppx_hash_lib.hash_fold
        val hash : t -> Base__Ppx_hash_lib.Std.Hash.hash_value
        val of_string : string -> t
        val to_string : t -> string
        val to_string_hum : ?delimiter:char -> t -> string
      end
    val of_string_opt : string -> t option
    val to_string_hum : ?delimiter:char -> t -> string
    val one : t
    val minus_one : t
    val rem : t -> t -> t
    val round :
      ?dir:[ `Down | `Nearest | `Up | `Zero ] -> t -> to_multiple_of:t -> t
    val round_towards_zero : t -> to_multiple_of:t -> t
    val round_down : t -> to_multiple_of:t -> t
    val round_up : t -> to_multiple_of:t -> t
    val round_nearest : t -> to_multiple_of:t -> t
    val succ : t -> t
    val pred : t -> t
    val pow : t -> t -> t
    val bit_and : t -> t -> t
    val bit_or : t -> t -> t
    val bit_xor : t -> t -> t
    val bit_not : t -> t
    val popcount : t -> int
    val shift_left : t -> int -> t
    val shift_right : t -> int -> t
    val decr : t Base__.Import.ref -> unit
    val incr : t Base__.Import.ref -> unit
    val of_int32_exn : int32 -> t
    val to_int32_exn : t -> int32
    val of_int64_exn : int64 -> t
    val to_int64 : t -> int64
    val of_nativeint_exn : nativeint -> t
    val to_nativeint_exn : t -> nativeint
    val of_float_unchecked : float -> t
    val num_bits : int
    val max_value : t
    val min_value : t
    val shift_right_logical : t -> int -> t
    val ceil_pow2 : t -> t
    val floor_pow2 : t -> t
    val ceil_log2 : t -> int
    val floor_log2 : t -> int
    val is_pow2 : t -> bool
    val clz : t -> int
    val ctz : t -> int
    module O :
      sig
        external ( + ) : t -> t -> t = "%addint"
        external ( - ) : t -> t -> t = "%subint"
        external ( * ) : t -> t -> t = "%mulint"
        external ( / ) : t -> t -> t = "%divint"
        external ( ~- ) : t -> t = "%negint"
        val ( ** ) : t -> t -> t
        external ( = ) : t -> t -> bool = "%equal"
        external ( <> ) : t -> t -> bool = "%notequal"
        external ( < ) : t -> t -> bool = "%lessthan"
        external ( > ) : t -> t -> bool = "%greaterthan"
        external ( <= ) : t -> t -> bool = "%lessequal"
        external ( >= ) : t -> t -> bool = "%greaterequal"
        external ( land ) : t -> t -> t = "%andint"
        external ( lor ) : t -> t -> t = "%orint"
        external ( lxor ) : t -> t -> t = "%xorint"
        val lnot : t -> t
        val abs : t -> t
        external neg : t -> t = "%negint"
        val zero : t
        val ( % ) : t -> t -> t
        val ( /% ) : t -> t -> t
        val ( // ) : t -> t -> float
        external ( lsl ) : t -> int -> t = "%lslint"
        external ( asr ) : t -> int -> t = "%asrint"
        external ( lsr ) : t -> int -> t = "%lsrint"
      end
    external ( + ) : t -> t -> t = "%addint"
    external ( - ) : t -> t -> t = "%subint"
    external ( * ) : t -> t -> t = "%mulint"
    external ( / ) : t -> t -> t = "%divint"
    external ( ~- ) : t -> t = "%negint"
    val ( ** ) : t -> t -> t
    external ( = ) : t -> t -> bool = "%equal"
    external ( <> ) : t -> t -> bool = "%notequal"
    external ( < ) : t -> t -> bool = "%lessthan"
    external ( > ) : t -> t -> bool = "%greaterthan"
    external ( <= ) : t -> t -> bool = "%lessequal"
    external ( >= ) : t -> t -> bool = "%greaterequal"
    external ( land ) : t -> t -> t = "%andint"
    external ( lor ) : t -> t -> t = "%orint"
    external ( lxor ) : t -> t -> t = "%xorint"
    val lnot : t -> t
    val abs : t -> t
    external neg : t -> t = "%negint"
    val zero : t
    val ( % ) : t -> t -> t
    val ( /% ) : t -> t -> t
    val ( // ) : t -> t -> float
    external ( lsl ) : t -> int -> t = "%lslint"
    external ( asr ) : t -> int -> t = "%asrint"
    external ( lsr ) : t -> int -> t = "%lsrint"
    val max_value_30_bits : t
    val of_int : int -> t
    val to_int : t -> int
    val of_int32 : int32 -> t option
    val to_int32 : t -> int32 option
    val of_int64 : int64 -> t option
    val of_nativeint : nativeint -> t option
    val to_nativeint : t -> nativeint
    external to_int32_trunc : t -> int32 = "%int32_of_int"
    external of_int32_trunc : int32 -> t = "%int32_to_int"
    external of_int64_trunc : int64 -> t = "%int64_to_int"
    external of_nativeint_trunc : nativeint -> t = "%nativeint_to_int"
    external bswap16 : int -> int = "%bswap16"
    module Private :
      sig
        module O_F :
          sig
            val ( % ) : int -> int -> int
            val ( /% ) : int -> int -> int
            val ( // ) : int -> int -> float
          end
      end
  end
module type Int =
  sig
    type t = int
    val globalize : t -> t
    val t_sexp_grammar : t Sexplib0.Sexp_grammar.t
    val of_float : float -> t
    val to_float : t -> float
    val of_int_exn : int -> t
    val to_int_exn : t -> int
    val hash_fold_t : t Base__Ppx_hash_lib.hash_fold
    val hash : t -> Base__Ppx_hash_lib.Std.Hash.hash_value
    val t_of_sexp : Sexplib0__.Sexp.t -> t
    val sexp_of_t : t -> Sexplib0__.Sexp.t
    val of_string : string -> t
    val to_string : t -> string
    val equal : t -> t -> bool
    val compare : t -> t -> int
    val min : t -> t -> t
    val max : t -> t -> t
    val ascending : t -> t -> int
    val descending : t -> t -> int
    val between : t -> low:t -> high:t -> bool
    val clamp_exn : t -> min:t -> max:t -> t
    val clamp : t -> min:t -> max:t -> t Base__.Or_error.t
    type comparator_witness
    val comparator : (t, comparator_witness) Base__Comparator.comparator
    val pp : Base__.Formatter.t -> t -> unit
    val hashable : t Base__.Hashable.t
    val is_positive : t -> bool
    val is_non_negative : t -> bool
    val is_negative : t -> bool
    val is_non_positive : t -> bool
    val sign : t -> Base__Comparable_intf.Sign.t
    val invariant : t Base__Invariant_intf.inv
    module Hex :
      sig
        type nonrec t = t
        val t_of_sexp : Sexplib0__.Sexp.t -> t
        val sexp_of_t : t -> Sexplib0__.Sexp.t
        val t_sexp_grammar : t Sexplib0.Sexp_grammar.t
        val compare : t Base__Ppx_compare_lib.compare
        val hash_fold_t : t Base__Ppx_hash_lib.hash_fold
        val hash : t -> Base__Ppx_hash_lib.Std.Hash.hash_value
        val of_string : string -> t
        val to_string : t -> string
        val to_string_hum : ?delimiter:char -> t -> string
      end
    val of_string_opt : string -> t option
    val to_string_hum : ?delimiter:char -> t -> string
    val one : t
    val minus_one : t
    val rem : t -> t -> t
    val round :
      ?dir:[ `Down | `Nearest | `Up | `Zero ] -> t -> to_multiple_of:t -> t
    val round_towards_zero : t -> to_multiple_of:t -> t
    val round_down : t -> to_multiple_of:t -> t
    val round_up : t -> to_multiple_of:t -> t
    val round_nearest : t -> to_multiple_of:t -> t
    val succ : t -> t
    val pred : t -> t
    val pow : t -> t -> t
    val bit_and : t -> t -> t
    val bit_or : t -> t -> t
    val bit_xor : t -> t -> t
    val bit_not : t -> t
    val popcount : t -> int
    val shift_left : t -> int -> t
    val shift_right : t -> int -> t
    val decr : t Base__.Import.ref -> unit
    val incr : t Base__.Import.ref -> unit
    val of_int32_exn : int32 -> t
    val to_int32_exn : t -> int32
    val of_int64_exn : int64 -> t
    val to_int64 : t -> int64
    val of_nativeint_exn : nativeint -> t
    val to_nativeint_exn : t -> nativeint
    val of_float_unchecked : float -> t
    val num_bits : int
    val max_value : t
    val min_value : t
    val shift_right_logical : t -> int -> t
    val ceil_pow2 : t -> t
    val floor_pow2 : t -> t
    val ceil_log2 : t -> int
    val floor_log2 : t -> int
    val is_pow2 : t -> bool
    val clz : t -> int
    val ctz : t -> int
    module O :
      sig
        external ( + ) : t -> t -> t = "%addint"
        external ( - ) : t -> t -> t = "%subint"
        external ( * ) : t -> t -> t = "%mulint"
        external ( / ) : t -> t -> t = "%divint"
        external ( ~- ) : t -> t = "%negint"
        val ( ** ) : t -> t -> t
        external ( = ) : t -> t -> bool = "%equal"
        external ( <> ) : t -> t -> bool = "%notequal"
        external ( < ) : t -> t -> bool = "%lessthan"
        external ( > ) : t -> t -> bool = "%greaterthan"
        external ( <= ) : t -> t -> bool = "%lessequal"
        external ( >= ) : t -> t -> bool = "%greaterequal"
        external ( land ) : t -> t -> t = "%andint"
        external ( lor ) : t -> t -> t = "%orint"
        external ( lxor ) : t -> t -> t = "%xorint"
        val lnot : t -> t
        val abs : t -> t
        external neg : t -> t = "%negint"
        val zero : t
        val ( % ) : t -> t -> t
        val ( /% ) : t -> t -> t
        val ( // ) : t -> t -> float
        external ( lsl ) : t -> int -> t = "%lslint"
        external ( asr ) : t -> int -> t = "%asrint"
        external ( lsr ) : t -> int -> t = "%lsrint"
      end
    external ( + ) : t -> t -> t = "%addint"
    external ( - ) : t -> t -> t = "%subint"
    external ( * ) : t -> t -> t = "%mulint"
    external ( / ) : t -> t -> t = "%divint"
    external ( ~- ) : t -> t = "%negint"
    val ( ** ) : t -> t -> t
    external ( = ) : t -> t -> bool = "%equal"
    external ( <> ) : t -> t -> bool = "%notequal"
    external ( < ) : t -> t -> bool = "%lessthan"
    external ( > ) : t -> t -> bool = "%greaterthan"
    external ( <= ) : t -> t -> bool = "%lessequal"
    external ( >= ) : t -> t -> bool = "%greaterequal"
    external ( land ) : t -> t -> t = "%andint"
    external ( lor ) : t -> t -> t = "%orint"
    external ( lxor ) : t -> t -> t = "%xorint"
    val lnot : t -> t
    val abs : t -> t
    external neg : t -> t = "%negint"
    val zero : t
    val ( % ) : t -> t -> t
    val ( /% ) : t -> t -> t
    val ( // ) : t -> t -> float
    external ( lsl ) : t -> int -> t = "%lslint"
    external ( asr ) : t -> int -> t = "%asrint"
    external ( lsr ) : t -> int -> t = "%lsrint"
    val max_value_30_bits : t
    val of_int : int -> t
    val to_int : t -> int
    val of_int32 : int32 -> t option
    val to_int32 : t -> int32 option
    val of_int64 : int64 -> t option
    val of_nativeint : nativeint -> t option
    val to_nativeint : t -> nativeint
    external to_int32_trunc : t -> int32 = "%int32_of_int"
    external of_int32_trunc : int32 -> t = "%int32_to_int"
    external of_int64_trunc : int64 -> t = "%int64_to_int"
    external of_nativeint_trunc : nativeint -> t = "%nativeint_to_int"
    external bswap16 : int -> int = "%bswap16"
    module Private :
      sig
        module O_F :
          sig
            val ( % ) : int -> int -> int
            val ( /% ) : int -> int -> int
            val ( // ) : int -> int -> float
          end
      end
    module type Hexable = Hexable
    module type Int_without_module_types = Int_without_module_types
    module type Operators = Operators
    module type Operators_unbounded = Operators_unbounded
    module type Round = Round
    module type S = S
    module type S_common = S_common
    module type S_unbounded = S_unbounded("DEBUG:rule", [Tag4 (("Round", 3797), ((Tag1 ([Tag1 (("t", 3806), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/int_intf.ml", 7, 143, 145), ("src/int_intf.ml", 7, 143, 151), 0), 0, 0, 0, Tag1 ("Base__Int_intf", 0)), 1, 0); (("round", 3807), ((Tag1 (Tag1 ("dir"), (Tag3 ((Tag3 ("option", 10)), [(Tag8 (([("Down", (0)); ("Nearest", (0)); ("Up", (0)); ("Zero", (0))], (0, 100000000, 0, -30), 1, 0, 0)), 100000000, 0, -29)], (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 ((("t", 3806)), 0, (0)), 100000000, 0, -27), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 3806)), 0, (0)), 100000000, 0, -26), (Tag3 ((("t", 3806)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("src/int_intf.ml", 33, 1393, 1395), ("src/int_intf.ml", 33, 1393, 1476), 0), 0, Tag1 ("Base__Int_intf", 1)), 0); (("round_towards_zero", 3808), ((Tag1 (0, (Tag3 ((("t", 3806)), 0, (0)), 100000000, 0, -21), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 3806)), 0, (0)), 100000000, 0, -20), (Tag3 ((("t", 3806)), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("src/int_intf.ml", 34, 1477, 1479), ("src/int_intf.ml", 34, 1477, 1530), 0), 0, Tag1 ("Base__Int_intf", 2)), 0); (("round_down", 3809), ((Tag1 (0, (Tag3 ((("t", 3806)), 0, (0)), 100000000, 0, -16), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 3806)), 0, (0)), 100000000, 0, -15), (Tag3 ((("t", 3806)), 0, (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("src/int_intf.ml", 35, 1531, 1533), ("src/int_intf.ml", 35, 1531, 1576), 0), 0, Tag1 ("Base__Int_intf", 3)), 0); (("round_up", 3810), ((Tag1 (0, (Tag3 ((("t", 3806)), 0, (0)), 100000000, 0, -11), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 3806)), 0, (0)), 100000000, 0, -10), (Tag3 ((("t", 3806)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("src/int_intf.ml", 36, 1577, 1579), ("src/int_intf.ml", 36, 1577, 1620), 0), 0, Tag1 ("Base__Int_intf", 4)), 0); (("round_nearest", 3811), ((Tag1 (0, (Tag3 ((("t", 3806)), 0, (0)), 100000000, 0, -6), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 3806)), 0, (0)), 100000000, 0, -5), (Tag3 ((("t", 3806)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/int_intf.ml", 37, 1621, 1623), ("src/int_intf.ml", 37, 1621, 1669), 0), 0, Tag1 ("Base__Int_intf", 5)), 0)])), 0, (("src/int_intf.ml", 6, 119, 119), ("src/int_intf.ml", 38, 1670, 1673), 0), Tag1 ("Base__Int_intf", 6)), 0); Tag4 (("Hexable", 3798), ((Tag1 ([Tag1 (("t", 3812), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/int_intf.ml", 41, 1701, 1703), ("src/int_intf.ml", 41, 1701, 1709), 0), 0, 0, 0, Tag1 ("Base__Int_intf", 7)), 1, 0); Tag3 (("Hex", 3813), 0, (Tag1 ([Tag1 (("t", 3814), (0, 0, 0, 1, ((Tag3 ((("t", 3812)), 0, (0)), 100000000, 0, -58)), 0, 0, 0, 0, (("src/int_intf.ml", 44, 1730, 1734), ("src/int_intf.ml", 44, 1730, 1805), 0), [(("deriving_inline", (("src/int_intf.ml", 44, 1730, 1755), ("src/int_intf.ml", 44, 1730, 1770), 0)), ([([(Tag8 ([(((("sexp"), (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1775), 0))), (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1775), 0), 0, 0); (((("sexp_grammar"), (("src/int_intf.ml", 44, 1730, 1777), ("src/int_intf.ml", 44, 1730, 1789), 0))), (("src/int_intf.ml", 44, 1730, 1777), ("src/int_intf.ml", 44, 1730, 1789), 0), 0, 0); (((("compare"), (("src/int_intf.ml", 44, 1730, 1791), ("src/int_intf.ml", 44, 1730, 1798), 0))), (("src/int_intf.ml", 44, 1730, 1791), ("src/int_intf.ml", 44, 1730, 1798), 0), 0, 0); (((("hash"), (("src/int_intf.ml", 44, 1730, 1800), ("src/int_intf.ml", 44, 1730, 1804), 0))), (("src/int_intf.ml", 44, 1730, 1800), ("src/int_intf.ml", 44, 1730, 1804), 0), 0, 0)]), (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1804), 0), 0, 0)], (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1804), 0))]), (("src/int_intf.ml", 44, 1730, 1752), ("src/int_intf.ml", 44, 1730, 1805), 0))], 0, 0, Tag1 ("Base__Int_intf", 8)), 0, 0); (("t_of_sexp", 3815), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -57), (Tag3 ((("t", 3814)), 0, (0)), 100000000, 0, -56), 0), 100000000, 0, -55), 0, (("src/int_intf.ml", 46, 1807, 1819), ("src/int_intf.ml", 46, 1807, 1855), 0), 0, Tag1 ("Sexplib0__Sexpable", 1)), 0); (("sexp_of_t", 3816), ((Tag1 (0, (Tag3 ((("t", 3814)), 0, (0)), 100000000, 0, -54), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -53), 0), 100000000, 0, -52), 0, (("src/int_intf.ml", 46, 1807, 1819), ("src/int_intf.ml", 46, 1807, 1855), 0), 0, Tag1 ("Sexplib0__Sexpable", 2)), 0); (("t_sexp_grammar", 3817), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [(Tag3 ((("t", 3814)), 0, (0)), 100000000, 0, -51)], (0)), 100000000, 0, -50), 0, (("src/int_intf.ml", 48, 1857, 1861), ("src/int_intf.ml", 48, 1857, 1907), 0), 0, Tag1 ("Base__Int_intf", 11)), 0); (("compare", 3818), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((("t", 3814)), 0, (0)), 100000000, 0, -49)], (0)), 100000000, 0, -48), 0, (("src/int_intf.ml", 50, 1909, 1921), ("src/int_intf.ml", 50, 1909, 1966), 0), 0, Tag1 ("Base__Ppx_compare_lib", 5)), 0); (("hash_fold_t", 3819), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "hash_fold"), [(Tag3 ((("t", 3814)), 0, (0)), 100000000, 0, -47)], (0)), 100000000, 0, -46), 0, (("src/int_intf.ml", 51, 1967, 1979), ("src/int_intf.ml", 51, 1967, 2019), 0), 0, Tag1 ("Base__Ppx_hash_lib", 4)), 0); (("hash", 3820), ((Tag1 (0, (Tag3 ((("t", 3814)), 0, (0)), 100000000, 0, -45), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "Std"), "Hash"), "hash_value"), 0, (0)), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("src/int_intf.ml", 51, 1967, 1979), ("src/int_intf.ml", 51, 1967, 2019), 0), 0, Tag1 ("Base__Ppx_hash_lib", 5)), 0); (("of_string", 3821), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -42), (Tag3 ((("t", 3814)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("src/int_intf.ml", 55, 2035, 2047), ("src/int_intf.ml", 55, 2035, 2076), 0), 0, Tag1 ("Base__Stringable", 1)), 0); (("to_string", 3822), ((Tag1 (0, (Tag3 ((("t", 3814)), 0, (0)), 100000000, 0, -39), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -38), 0), 100000000, 0, -37), 0, (("src/int_intf.ml", 55, 2035, 2047), ("src/int_intf.ml", 55, 2035, 2076), 0), 0, Tag1 ("Base__Stringable", 2)), 0); (("to_string_hum", 3823), ((Tag1 (Tag1 ("delimiter"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -36)], (0)), 100000000, 0, -35), (Tag1 (0, (Tag3 ((("t", 3814)), 0, (0)), 100000000, 0, -34), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("src/int_intf.ml", 57, 2078, 2082), ("src/int_intf.ml", 57, 2078, 2132), 0), 0, Tag1 ("Base__Int_intf", 15)), 0)]), 0, (("src/int_intf.ml", 43, 1711, 1713), ("src/int_intf.ml", 58, 2133, 2138), 0), Tag1 ("Base__Int_intf", 16)), 0, 0)])), 0, (("src/int_intf.ml", 40, 1675, 1675), ("src/int_intf.ml", 59, 2139, 2142), 0), Tag1 ("Base__Int_intf", 17)), 0); Tag4 (("S_common", 3799), ((Tag1 ([Tag1 (("t", 3824), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/int_intf.ml", 62, 2171, 2173), ("src/int_intf.ml", 62, 2171, 2218), 0), [(("deriving_inline", (("src/int_intf.ml", 62, 2171, 2183), ("src/int_intf.ml", 62, 2171, 2198), 0)), ([([(Tag8 ([(((("sexp"), (("src/int_intf.ml", 62, 2171, 2199), ("src/int_intf.ml", 62, 2171, 2203), 0))), (("src/int_intf.ml", 62, 2171, 2199), ("src/int_intf.ml", 62, 2171, 2203), 0), 0, 0); (((("sexp_grammar"), (("src/int_intf.ml", 62, 2171, 2205), ("src/int_intf.ml", 62, 2171, 2217), 0))), (("src/int_intf.ml", 62, 2171, 2205), ("src/int_intf.ml", 62, 2171, 2217), 0), 0, 0)]), (("src/int_intf.ml", 62, 2171, 2199), ("src/int_intf.ml", 62, 2171, 2217), 0), 0, 0)], (("src/int_intf.ml", 62, 2171, 2199), ("src/int_intf.ml", 62, 2171, 2217), 0))]), (("src/int_intf.ml", 62, 2171, 2180), ("src/int_intf.ml", 62, 2171, 2218), 0))], 0, 0, Tag1 ("Base__Int_intf", 18)), 1, 0); (("t_sexp_grammar", 3825), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [(Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -393)], (0)), 100000000, 0, -392), 0, (("src/int_intf.ml", 66, 2268, 2270), ("src/int_intf.ml", 66, 2268, 2316), 0), 0, Tag1 ("Base__Int_intf", 20)), 0); (("of_float", 3826), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -391), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -390), 0), 100000000, 0, -389), 0, (("src/int_intf.ml", 70, 2330, 2340), ("src/int_intf.ml", 70, 2330, 2368), 0), 0, Tag1 ("Base__Floatable", 1)), 0); (("to_float", 3827), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -388), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -387), 0), 100000000, 0, -386), 0, (("src/int_intf.ml", 70, 2330, 2340), ("src/int_intf.ml", 70, 2330, 2368), 0), 0, Tag1 ("Base__Floatable", 2)), 0); (("of_int_exn", 3828), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -385), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -384), 0), 100000000, 0, -383), 0, (("src/int_intf.ml", 71, 2369, 2379), ("src/int_intf.ml", 71, 2369, 2405), 0), 0, Tag1 ("Base__Intable", 1)), 0); (("to_int_exn", 3829), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -382), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -381), 0), 100000000, 0, -380), 0, (("src/int_intf.ml", 71, 2369, 2379), ("src/int_intf.ml", 71, 2369, 2405), 0), 0, Tag1 ("Base__Intable", 2)), 0); (("hash_fold_t", 3830), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "hash_fold"), [(Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -379)], (0)), 100000000, 0, -378), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Ppx_hash_lib", 4)), 0); (("hash", 3831), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -377), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "Std"), "Hash"), "hash_value"), 0, (0)), 100000000, 0, -376), 0), 100000000, 0, -375), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Ppx_hash_lib", 5)), 0); (("t_of_sexp", 3832), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -374), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -373), 0), 100000000, 0, -372), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Sexplib0__Sexpable", 1)), 0); (("sexp_of_t", 3833), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -371), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -370), 0), 100000000, 0, -369), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Sexplib0__Sexpable", 2)), 0); (("of_string", 3834), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -368), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -367), 0), 100000000, 0, -366), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Stringable", 1)), 0); (("to_string", 3835), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -365), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -364), 0), 100000000, 0, -363), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Stringable", 2)), 0); ((">=", 3836), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -362), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -361), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -360), 0), 100000000, 0, -359), 0), 100000000, 0, -358), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 1)), 0); (("<=", 3837), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -357), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -356), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -355), 0), 100000000, 0, -354), 0), 100000000, 0, -353), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 2)), 0); (("=", 3838), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -352), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -351), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -350), 0), 100000000, 0, -349), 0), 100000000, 0, -348), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 3)), 0); ((">", 3839), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -347), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -346), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -345), 0), 100000000, 0, -344), 0), 100000000, 0, -343), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 4)), 0); (("<", 3840), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -342), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -341), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -340), 0), 100000000, 0, -339), 0), 100000000, 0, -338), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 5)), 0); (("<>", 3841), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -337), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -336), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -335), 0), 100000000, 0, -334), 0), 100000000, 0, -333), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 6)), 0); (("equal", 3842), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -332), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -331), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -330), 0), 100000000, 0, -329), 0), 100000000, 0, -328), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 8)), 0); (("compare", 3843), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -327), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -326), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -325), 0), 100000000, 0, -324), 0), 100000000, 0, -323), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 9)), 0); (("min", 3844), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -322), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -321), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -320), 0), 100000000, 0, -319), 0), 100000000, 0, -318), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 10)), 0); (("max", 3845), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -317), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -316), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -315), 0), 100000000, 0, -314), 0), 100000000, 0, -313), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 11)), 0); (("ascending", 3846), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -312), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -311), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -310), 0), 100000000, 0, -309), 0), 100000000, 0, -308), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparable_intf", 19)), 0); (("descending", 3847), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -307), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -306), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -305), 0), 100000000, 0, -304), 0), 100000000, 0, -303), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparable_intf", 20)), 0); (("between", 3848), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -302), (Tag1 (("low"), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -301), (Tag1 (("high"), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -300), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -299), 0), 100000000, 0, -298), 0), 100000000, 0, -297), 0), 100000000, 0, -296), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparable_intf", 21)), 0); (("clamp_exn", 3849), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -295), (Tag1 (("min"), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -294), (Tag1 (("max"), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -293), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -292), 0), 100000000, 0, -291), 0), 100000000, 0, -290), 0), 100000000, 0, -289), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparable_intf", 22)), 0); (("clamp", 3850), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -288), (Tag1 (("min"), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -287), (Tag1 (("max"), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -286), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Or_error"), "t"), [(Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -285)], (0)), 100000000, 0, -284), 0), 100000000, 0, -283), 0), 100000000, 0, -282), 0), 100000000, 0, -281), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparable_intf", 23)), 0); Tag1 (("comparator_witness", 3851), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, 0, 0, Tag1 ("Base__Comparator", 5)), 1, 0); (("comparator", 3852), ((Tag3 (Tag1 ((Tag2 ("Base__Comparator")), "comparator"), [(Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -279); (Tag3 ((("comparator_witness", 3851)), 0, (0)), 100000000, 0, -280)], (0)), 100000000, 0, -278), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparator", 6)), 0); (("pp", 3853), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Formatter"), "t"), 0, (0)), 100000000, 0, -277), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -276), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -275), 0), 100000000, 0, -274), 0), 100000000, 0, -273), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Pretty_printer", 2)), 0); (("hashable", 3854), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Hashable"), "t"), [(Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -272)], (0)), 100000000, 0, -271), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Identifiable_intf", 15)), 0); (("is_positive", 3855), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -270), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -269), 0), 100000000, 0, -268), 0, (("src/int_intf.ml", 73, 2448, 2458), ("src/int_intf.ml", 73, 2448, 2495), 0), 0, Tag1 ("Base__Comparable_intf", 13)), 0); (("is_non_negative", 3856), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -267), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -266), 0), 100000000, 0, -265), 0, (("src/int_intf.ml", 73, 2448, 2458), ("src/int_intf.ml", 73, 2448, 2495), 0), 0, Tag1 ("Base__Comparable_intf", 14)), 0); (("is_negative", 3857), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -264), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -263), 0), 100000000, 0, -262), 0, (("src/int_intf.ml", 73, 2448, 2458), ("src/int_intf.ml", 73, 2448, 2495), 0), 0, Tag1 ("Base__Comparable_intf", 15)), 0); (("is_non_positive", 3858), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -261), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -260), 0), 100000000, 0, -259), 0, (("src/int_intf.ml", 73, 2448, 2458), ("src/int_intf.ml", 73, 2448, 2495), 0), 0, Tag1 ("Base__Comparable_intf", 16)), 0); (("sign", 3859), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -258), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__Comparable_intf")), "Sign"), "t"), 0, (0)), 100000000, 0, -257), 0), 100000000, 0, -256), 0, (("src/int_intf.ml", 73, 2448, 2458), ("src/int_intf.ml", 73, 2448, 2495), 0), 0, Tag1 ("Base__Comparable_intf", 17)), 0); (("invariant", 3860), ((Tag3 (Tag1 ((Tag2 ("Base__Invariant_intf")), "inv"), [(Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -255)], (0)), 100000000, 0, -254), 0, (("src/int_intf.ml", 74, 2496, 2506), ("src/int_intf.ml", 74, 2496, 2534), 0), 0, Tag1 ("Base__Invariant_intf", 3)), 0); Tag3 (("Hex", 3861), 0, (Tag1 ([Tag1 (("t", 3909), (0, 0, 0, 1, ((Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -421)), 0, 0, 0, 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), [(("deriving_inline", (("src/int_intf.ml", 44, 1730, 1755), ("src/int_intf.ml", 44, 1730, 1770), 0)), ([([(Tag8 ([(((("sexp"), (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1775), 0))), (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1775), 0), 0, 0); (((("sexp_grammar"), (("src/int_intf.ml", 44, 1730, 1777), ("src/int_intf.ml", 44, 1730, 1789), 0))), (("src/int_intf.ml", 44, 1730, 1777), ("src/int_intf.ml", 44, 1730, 1789), 0), 0, 0); (((("compare"), (("src/int_intf.ml", 44, 1730, 1791), ("src/int_intf.ml", 44, 1730, 1798), 0))), (("src/int_intf.ml", 44, 1730, 1791), ("src/int_intf.ml", 44, 1730, 1798), 0), 0, 0); (((("hash"), (("src/int_intf.ml", 44, 1730, 1800), ("src/int_intf.ml", 44, 1730, 1804), 0))), (("src/int_intf.ml", 44, 1730, 1800), ("src/int_intf.ml", 44, 1730, 1804), 0), 0, 0)]), (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1804), 0), 0, 0)], (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1804), 0))]), (("src/int_intf.ml", 44, 1730, 1752), ("src/int_intf.ml", 44, 1730, 1805), 0))], 0, 0, Tag1 ("Base__Int_intf", 8)), 0, 0); (("t_of_sexp", 3910), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -420), (Tag3 ((("t", 3909)), 0, (0)), 100000000, 0, -419), 0), 100000000, 0, -418), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Sexplib0__Sexpable", 1)), 0); (("sexp_of_t", 3911), ((Tag1 (0, (Tag3 ((("t", 3909)), 0, (0)), 100000000, 0, -417), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -416), 0), 100000000, 0, -415), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Sexplib0__Sexpable", 2)), 0); (("t_sexp_grammar", 3912), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [(Tag3 ((("t", 3909)), 0, (0)), 100000000, 0, -414)], (0)), 100000000, 0, -413), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Base__Int_intf", 11)), 0); (("compare", 3913), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((("t", 3909)), 0, (0)), 100000000, 0, -412)], (0)), 100000000, 0, -411), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Base__Ppx_compare_lib", 5)), 0); (("hash_fold_t", 3914), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "hash_fold"), [(Tag3 ((("t", 3909)), 0, (0)), 100000000, 0, -410)], (0)), 100000000, 0, -409), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Base__Ppx_hash_lib", 4)), 0); (("hash", 3915), ((Tag1 (0, (Tag3 ((("t", 3909)), 0, (0)), 100000000, 0, -408), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "Std"), "Hash"), "hash_value"), 0, (0)), 100000000, 0, -407), 0), 100000000, 0, -406), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Base__Ppx_hash_lib", 5)), 0); (("of_string", 3916), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -405), (Tag3 ((("t", 3909)), 0, (0)), 100000000, 0, -404), 0), 100000000, 0, -403), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Base__Stringable", 1)), 0); (("to_string", 3917), ((Tag1 (0, (Tag3 ((("t", 3909)), 0, (0)), 100000000, 0, -402), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -401), 0), 100000000, 0, -400), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Base__Stringable", 2)), 0); (("to_string_hum", 3918), ((Tag1 (Tag1 ("delimiter"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -399)], (0)), 100000000, 0, -398), (Tag1 (0, (Tag3 ((("t", 3909)), 0, (0)), 100000000, 0, -397), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -396), 0), 100000000, 0, -395), 0), 100000000, 0, -394), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Base__Int_intf", 15)), 0)]), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), Tag1 ("Base__Int_intf", 16)), 0, 0); (("of_string_opt", 3862), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -253), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -252)], (0)), 100000000, 0, -251), 0), 100000000, 0, -250), 0, (("src/int_intf.ml", 77, 2571, 2573), ("src/int_intf.ml", 77, 2571, 2611), 0), 0, Tag1 ("Base__Int_intf", 27)), 0); (("to_string_hum", 3863), ((Tag1 (Tag1 ("delimiter"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -249)], (0)), 100000000, 0, -248), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -247), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -246), 0), 100000000, 0, -245), 0), 100000000, 0, -244), 0, (("src/int_intf.ml", 80, 2663, 2665), ("src/int_intf.ml", 80, 2663, 2715), 0), 0, Tag1 ("Base__Int_intf", 28)), 0); (("zero", 3864), ((Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -243), 0, (("src/int_intf.ml", 84, 2761, 2763), ("src/int_intf.ml", 84, 2761, 2775), 0), 0, Tag1 ("Base__Int_intf", 29)), 0); (("one", 3865), ((Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -242), 0, (("src/int_intf.ml", 85, 2776, 2778), ("src/int_intf.ml", 85, 2776, 2789), 0), 0, Tag1 ("Base__Int_intf", 30)), 0); (("minus_one", 3866), ((Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -241), 0, (("src/int_intf.ml", 86, 2790, 2792), ("src/int_intf.ml", 86, 2790, 2809), 0), 0, Tag1 ("Base__Int_intf", 31)), 0); (("+", 3867), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -240), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -239), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -238), 0), 100000000, 0, -237), 0), 100000000, 0, -236), 0, (("src/int_intf.ml", 87, 2810, 2812), ("src/int_intf.ml", 87, 2810, 2835), 0), 0, Tag1 ("Base__Int_intf", 32)), 0); (("-", 3868), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -235), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -234), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -233), 0), 100000000, 0, -232), 0), 100000000, 0, -231), 0, (("src/int_intf.ml", 88, 2836, 2838), ("src/int_intf.ml", 88, 2836, 2861), 0), 0, Tag1 ("Base__Int_intf", 33)), 0); (("*", 3869), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -230), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -229), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -228), 0), 100000000, 0, -227), 0), 100000000, 0, -226), 0, (("src/int_intf.ml", 89, 2862, 2864), ("src/int_intf.ml", 89, 2862, 2887), 0), 0, Tag1 ("Base__Int_intf", 34)), 0); (("**", 3870), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -225), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -224), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -223), 0), 100000000, 0, -222), 0), 100000000, 0, -221), 0, (("src/int_intf.ml", 92, 2921, 2923), ("src/int_intf.ml", 92, 2921, 2947), 0), 0, Tag1 ("Base__Int_intf", 35)), 0); (("neg", 3871), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -220), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -219), 0), 100000000, 0, -218), 0, (("src/int_intf.ml", 96, 2968, 2970), ("src/int_intf.ml", 96, 2968, 2986), 0), 0, Tag1 ("Base__Int_intf", 36)), 0); (("~-", 3872), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -217), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -216), 0), 100000000, 0, -215), 0, (("src/int_intf.ml", 97, 2987, 2989), ("src/int_intf.ml", 97, 2987, 3008), 0), 0, Tag1 ("Base__Int_intf", 37)), 0); (("/%", 3873), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -214), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -213), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -212), 0), 100000000, 0, -211), 0), 100000000, 0, -210), 0, (("src/int_intf.ml", 119, 3755, 3757), ("src/int_intf.ml", 119, 3755, 3781), 0), 0, Tag1 ("Base__Int_intf", 38)), 0); (("%", 3874), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -209), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -208), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -207), 0), 100000000, 0, -206), 0), 100000000, 0, -205), 0, (("src/int_intf.ml", 120, 3782, 3784), ("src/int_intf.ml", 120, 3782, 3807), 0), 0, Tag1 ("Base__Int_intf", 39)), 0); (("/", 3875), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -204), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -203), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -202), 0), 100000000, 0, -201), 0), 100000000, 0, -200), 0, (("src/int_intf.ml", 121, 3808, 3810), ("src/int_intf.ml", 121, 3808, 3833), 0), 0, Tag1 ("Base__Int_intf", 40)), 0); (("rem", 3876), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -199), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -198), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -197), 0), 100000000, 0, -196), 0), 100000000, 0, -195), 0, (("src/int_intf.ml", 122, 3834, 3836), ("src/int_intf.ml", 122, 3834, 3857), 0), 0, Tag1 ("Base__Int_intf", 41)), 0); (("//", 3877), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -194), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -193), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -192), 0), 100000000, 0, -191), 0), 100000000, 0, -190), 0, (("src/int_intf.ml", 125, 3896, 3898), ("src/int_intf.ml", 125, 3896, 3926), 0), 0, Tag1 ("Base__Int_intf", 42)), 0); (("land", 3878), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -189), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -188), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -187), 0), 100000000, 0, -186), 0), 100000000, 0, -185), 0, (("src/int_intf.ml", 128, 3956, 3958), ("src/int_intf.ml", 128, 3956, 3984), 0), 0, Tag1 ("Base__Int_intf", 43)), 0); (("lor", 3879), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -184), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -183), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -182), 0), 100000000, 0, -181), 0), 100000000, 0, -180), 0, (("src/int_intf.ml", 131, 4013, 4015), ("src/int_intf.ml", 131, 4013, 4040), 0), 0, Tag1 ("Base__Int_intf", 44)), 0); (("lxor", 3880), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -179), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -178), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -177), 0), 100000000, 0, -176), 0), 100000000, 0, -175), 0, (("src/int_intf.ml", 134, 4070, 4072), ("src/int_intf.ml", 134, 4070, 4098), 0), 0, Tag1 ("Base__Int_intf", 45)), 0); (("lnot", 3881), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -174), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -173), 0), 100000000, 0, -172), 0, (("src/int_intf.ml", 137, 4128, 4130), ("src/int_intf.ml", 137, 4128, 4147), 0), 0, Tag1 ("Base__Int_intf", 46)), 0); (("lsl", 3882), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -171), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -170), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -169), 0), 100000000, 0, -168), 0), 100000000, 0, -167), 0, (("src/int_intf.ml", 140, 4180, 4182), ("src/int_intf.ml", 140, 4180, 4209), 0), 0, Tag1 ("Base__Int_intf", 47)), 0); (("asr", 3883), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -166), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -165), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -164), 0), 100000000, 0, -163), 0), 100000000, 0, -162), 0, (("src/int_intf.ml", 143, 4243, 4245), ("src/int_intf.ml", 143, 4243, 4272), 0), 0, Tag1 ("Base__Int_intf", 48)), 0); (("round", 3884), ((Tag1 (Tag1 ("dir"), (Tag3 ((Tag3 ("option", 10)), [(Tag8 (([("Down", (0)); ("Nearest", (0)); ("Up", (0)); ("Zero", (0))], (0, 100000000, 0, -161), 1, 0, 0)), 100000000, 0, -160)], (0)), 100000000, 0, -159), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -158), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -157), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -156), 0), 100000000, 0, -155), 0), 100000000, 0, -154), 0), 100000000, 0, -153), 0, (("src/int_intf.ml", 147, 4311, 4321), ("src/int_intf.ml", 147, 4311, 4343), 0), 0, Tag1 ("Base__Int_intf", 1)), 0); (("round_towards_zero", 3885), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -152), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -151), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -150), 0), 100000000, 0, -149), 0), 100000000, 0, -148), 0, (("src/int_intf.ml", 147, 4311, 4321), ("src/int_intf.ml", 147, 4311, 4343), 0), 0, Tag1 ("Base__Int_intf", 2)), 0); (("round_down", 3886), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -147), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -146), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -145), 0), 100000000, 0, -144), 0), 100000000, 0, -143), 0, (("src/int_intf.ml", 147, 4311, 4321), ("src/int_intf.ml", 147, 4311, 4343), 0), 0, Tag1 ("Base__Int_intf", 3)), 0); (("round_up", 3887), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -142), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -141), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -140), 0), 100000000, 0, -139), 0), 100000000, 0, -138), 0, (("src/int_intf.ml", 147, 4311, 4321), ("src/int_intf.ml", 147, 4311, 4343), 0), 0, Tag1 ("Base__Int_intf", 4)), 0); (("round_nearest", 3888), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -137), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -136), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -135), 0), 100000000, 0, -134), 0), 100000000, 0, -133), 0, (("src/int_intf.ml", 147, 4311, 4321), ("src/int_intf.ml", 147, 4311, 4343), 0), 0, Tag1 ("Base__Int_intf", 5)), 0); (("abs", 3889), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -132), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -131), 0), 100000000, 0, -130), 0, (("src/int_intf.ml", 151, 4450, 4452), ("src/int_intf.ml", 151, 4450, 4468), 0), 0, Tag1 ("Base__Int_intf", 50)), 0); (("succ", 3890), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -129), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -128), 0), 100000000, 0, -127), 0, (("src/int_intf.ml", 155, 4520, 4522), ("src/int_intf.ml", 155, 4520, 4539), 0), 0, Tag1 ("Base__Int_intf", 51)), 0); (("pred", 3891), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -126), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -125), 0), 100000000, 0, -124), 0, (("src/int_intf.ml", 156, 4540, 4542), ("src/int_intf.ml", 156, 4540, 4559), 0), 0, Tag1 ("Base__Int_intf", 52)), 0); (("pow", 3892), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -123), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -122), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -121), 0), 100000000, 0, -120), 0), 100000000, 0, -119), 0, (("src/int_intf.ml", 162, 4770, 4772), ("src/int_intf.ml", 162, 4770, 4793), 0), 0, Tag1 ("Base__Int_intf", 53)), 0); (("bit_and", 3893), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -118), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -117), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -116), 0), 100000000, 0, -115), 0), 100000000, 0, -114), 0, (("src/int_intf.ml", 168, 4947, 4949), ("src/int_intf.ml", 168, 4947, 4974), 0), 0, Tag1 ("Base__Int_intf", 54)), 0); (("bit_or", 3894), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -113), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -112), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -111), 0), 100000000, 0, -110), 0), 100000000, 0, -109), 0, (("src/int_intf.ml", 170, 4976, 4978), ("src/int_intf.ml", 170, 4976, 5002), 0), 0, Tag1 ("Base__Int_intf", 55)), 0); (("bit_xor", 3895), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -108), (Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -107), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -106), 0), 100000000, 0, -105), 0), 100000000, 0, -104), 0, (("src/int_intf.ml", 171, 5003, 5005), ("src/int_intf.ml", 171, 5003, 5030), 0), 0, Tag1 ("Base__Int_intf", 56)), 0); (("bit_not", 3896), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -103), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -102), 0), 100000000, 0, -101), 0, (("src/int_intf.ml", 172, 5031, 5033), ("src/int_intf.ml", 172, 5031, 5053), 0), 0, Tag1 ("Base__Int_intf", 57)), 0); (("popcount", 3897), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -100), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -99), 0), 100000000, 0, -98), 0, (("src/int_intf.ml", 175, 5136, 5138), ("src/int_intf.ml", 175, 5136, 5161), 0), 0, Tag1 ("Base__Int_intf", 58)), 0); (("shift_left", 3898), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -97), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -96), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -95), 0), 100000000, 0, -94), 0), 100000000, 0, -93), 0, (("src/int_intf.ml", 182, 5329, 5331), ("src/int_intf.ml", 182, 5329, 5361), 0), 0, Tag1 ("Base__Int_intf", 59)), 0); (("shift_right", 3899), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -92), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -91), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -90), 0), 100000000, 0, -89), 0), 100000000, 0, -88), 0, (("src/int_intf.ml", 185, 5420, 5422), ("src/int_intf.ml", 185, 5420, 5453), 0), 0, Tag1 ("Base__Int_intf", 60)), 0); (("decr", 3900), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import"), "ref"), [(Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -87)], (0)), 100000000, 0, -86), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -85), 0), 100000000, 0, -84), 0, (("src/int_intf.ml", 189, 5527, 5529), ("src/int_intf.ml", 189, 5527, 5553), 0), 0, Tag1 ("Base__Int_intf", 61)), 0); (("incr", 3901), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import"), "ref"), [(Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -83)], (0)), 100000000, 0, -82), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0, (("src/int_intf.ml", 190, 5554, 5556), ("src/int_intf.ml", 190, 5554, 5580), 0), 0, Tag1 ("Base__Int_intf", 62)), 0); (("of_int32_exn", 3902), ((Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -79), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -78), 0), 100000000, 0, -77), 0, (("src/int_intf.ml", 194, 5642, 5644), ("src/int_intf.ml", 194, 5642, 5673), 0), 0, Tag1 ("Base__Int_intf", 63)), 0); (("to_int32_exn", 3903), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -76), (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), 0, (("src/int_intf.ml", 195, 5674, 5676), ("src/int_intf.ml", 195, 5674, 5705), 0), 0, Tag1 ("Base__Int_intf", 64)), 0); (("of_int64_exn", 3904), ((Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -73), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0, (("src/int_intf.ml", 196, 5706, 5708), ("src/int_intf.ml", 196, 5706, 5737), 0), 0, Tag1 ("Base__Int_intf", 65)), 0); (("to_int64", 3905), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -70), (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("src/int_intf.ml", 197, 5738, 5740), ("src/int_intf.ml", 197, 5738, 5765), 0), 0, Tag1 ("Base__Int_intf", 66)), 0); (("of_nativeint_exn", 3906), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -67), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("src/int_intf.ml", 198, 5766, 5768), ("src/int_intf.ml", 198, 5766, 5805), 0), 0, Tag1 ("Base__Int_intf", 67)), 0); (("to_nativeint_exn", 3907), ((Tag1 (0, (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -64), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -63), 0), 100000000, 0, -62), 0, (("src/int_intf.ml", 199, 5806, 5808), ("src/int_intf.ml", 199, 5806, 5845), 0), 0, Tag1 ("Base__Int_intf", 68)), 0); (("of_float_unchecked", 3908), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -61), (Tag3 ((("t", 3824)), 0, (0)), 100000000, 0, -60), 0), 100000000, 0, -59), 0, (("src/int_intf.ml", 205, 6078, 6080), ("src/int_intf.ml", 205, 6078, 6115), 0), 0, Tag1 ("Base__Int_intf", 69)), 0)])), 0, (("src/int_intf.ml", 61, 2144, 2144), ("src/int_intf.ml", 206, 6116, 6119), 0), Tag1 ("Base__Int_intf", 70)), 0); Tag4 (("Operators_unbounded", 3800), ((Tag1 ([Tag1 (("t", 3919), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/int_intf.ml", 209, 6159, 6161), ("src/int_intf.ml", 209, 6159, 6167), 0), 0, 0, 0, Tag1 ("Base__Int_intf", 71)), 1, 0); (("+", 3920), ((Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -529), (Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -528), (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -527), 0), 100000000, 0, -526), 0), 100000000, 0, -525), 0, (("src/int_intf.ml", 211, 6169, 6171), ("src/int_intf.ml", 211, 6169, 6194), 0), 0, Tag1 ("Base__Int_intf", 72)), 0); (("-", 3921), ((Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -524), (Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -523), (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -522), 0), 100000000, 0, -521), 0), 100000000, 0, -520), 0, (("src/int_intf.ml", 212, 6195, 6197), ("src/int_intf.ml", 212, 6195, 6220), 0), 0, Tag1 ("Base__Int_intf", 73)), 0); (("*", 3922), ((Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -519), (Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -518), (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -517), 0), 100000000, 0, -516), 0), 100000000, 0, -515), 0, (("src/int_intf.ml", 213, 6221, 6223), ("src/int_intf.ml", 213, 6221, 6246), 0), 0, Tag1 ("Base__Int_intf", 74)), 0); (("/", 3923), ((Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -514), (Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -513), (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -512), 0), 100000000, 0, -511), 0), 100000000, 0, -510), 0, (("src/int_intf.ml", 214, 6247, 6249), ("src/int_intf.ml", 214, 6247, 6272), 0), 0, Tag1 ("Base__Int_intf", 75)), 0); (("~-", 3924), ((Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -509), (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -508), 0), 100000000, 0, -507), 0, (("src/int_intf.ml", 215, 6273, 6275), ("src/int_intf.ml", 215, 6273, 6294), 0), 0, Tag1 ("Base__Int_intf", 76)), 0); (("**", 3925), ((Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -506), (Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -505), (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -504), 0), 100000000, 0, -503), 0), 100000000, 0, -502), 0, (("src/int_intf.ml", 216, 6295, 6297), ("src/int_intf.ml", 216, 6295, 6321), 0), 0, Tag1 ("Base__Int_intf", 77)), 0); ((">=", 3926), ((Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -501), (Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -500), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -499), 0), 100000000, 0, -498), 0), 100000000, 0, -497), 0, (("src/int_intf.ml", 218, 6323, 6333), ("src/int_intf.ml", 218, 6323, 6367), 0), 0, Tag1 ("Base__Comparisons", 1)), 0); (("<=", 3927), ((Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -496), (Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -495), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -494), 0), 100000000, 0, -493), 0), 100000000, 0, -492), 0, (("src/int_intf.ml", 218, 6323, 6333), ("src/int_intf.ml", 218, 6323, 6367), 0), 0, Tag1 ("Base__Comparisons", 2)), 0); (("=", 3928), ((Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -491), (Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -490), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -489), 0), 100000000, 0, -488), 0), 100000000, 0, -487), 0, (("src/int_intf.ml", 218, 6323, 6333), ("src/int_intf.ml", 218, 6323, 6367), 0), 0, Tag1 ("Base__Comparisons", 3)), 0); ((">", 3929), ((Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -486), (Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -485), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -484), 0), 100000000, 0, -483), 0), 100000000, 0, -482), 0, (("src/int_intf.ml", 218, 6323, 6333), ("src/int_intf.ml", 218, 6323, 6367), 0), 0, Tag1 ("Base__Comparisons", 4)), 0); (("<", 3930), ((Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -481), (Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -480), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -479), 0), 100000000, 0, -478), 0), 100000000, 0, -477), 0, (("src/int_intf.ml", 218, 6323, 6333), ("src/int_intf.ml", 218, 6323, 6367), 0), 0, Tag1 ("Base__Comparisons", 5)), 0); (("<>", 3931), ((Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -476), (Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -475), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -474), 0), 100000000, 0, -473), 0), 100000000, 0, -472), 0, (("src/int_intf.ml", 218, 6323, 6333), ("src/int_intf.ml", 218, 6323, 6367), 0), 0, Tag1 ("Base__Comparisons", 6)), 0); (("abs", 3932), ((Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -471), (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -470), 0), 100000000, 0, -469), 0, (("src/int_intf.ml", 220, 6369, 6371), ("src/int_intf.ml", 220, 6369, 6387), 0), 0, Tag1 ("Base__Int_intf", 79)), 0); (("neg", 3933), ((Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -468), (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -467), 0), 100000000, 0, -466), 0, (("src/int_intf.ml", 221, 6388, 6390), ("src/int_intf.ml", 221, 6388, 6406), 0), 0, Tag1 ("Base__Int_intf", 80)), 0); (("zero", 3934), ((Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -465), 0, (("src/int_intf.ml", 222, 6407, 6409), ("src/int_intf.ml", 222, 6407, 6421), 0), 0, Tag1 ("Base__Int_intf", 81)), 0); (("%", 3935), ((Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -464), (Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -463), (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -462), 0), 100000000, 0, -461), 0), 100000000, 0, -460), 0, (("src/int_intf.ml", 223, 6422, 6424), ("src/int_intf.ml", 223, 6422, 6447), 0), 0, Tag1 ("Base__Int_intf", 82)), 0); (("/%", 3936), ((Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -459), (Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -458), (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -457), 0), 100000000, 0, -456), 0), 100000000, 0, -455), 0, (("src/int_intf.ml", 224, 6448, 6450), ("src/int_intf.ml", 224, 6448, 6474), 0), 0, Tag1 ("Base__Int_intf", 83)), 0); (("//", 3937), ((Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -454), (Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -453), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -452), 0), 100000000, 0, -451), 0), 100000000, 0, -450), 0, (("src/int_intf.ml", 225, 6475, 6477), ("src/int_intf.ml", 225, 6475, 6505), 0), 0, Tag1 ("Base__Int_intf", 84)), 0); (("land", 3938), ((Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -449), (Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -448), (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -447), 0), 100000000, 0, -446), 0), 100000000, 0, -445), 0, (("src/int_intf.ml", 226, 6506, 6508), ("src/int_intf.ml", 226, 6506, 6534), 0), 0, Tag1 ("Base__Int_intf", 85)), 0); (("lor", 3939), ((Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -444), (Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -443), (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -442), 0), 100000000, 0, -441), 0), 100000000, 0, -440), 0, (("src/int_intf.ml", 227, 6535, 6537), ("src/int_intf.ml", 227, 6535, 6562), 0), 0, Tag1 ("Base__Int_intf", 86)), 0); (("lxor", 3940), ((Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -439), (Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -438), (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -437), 0), 100000000, 0, -436), 0), 100000000, 0, -435), 0, (("src/int_intf.ml", 228, 6563, 6565), ("src/int_intf.ml", 228, 6563, 6591), 0), 0, Tag1 ("Base__Int_intf", 87)), 0); (("lnot", 3941), ((Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -434), (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -433), 0), 100000000, 0, -432), 0, (("src/int_intf.ml", 229, 6592, 6594), ("src/int_intf.ml", 229, 6592, 6611), 0), 0, Tag1 ("Base__Int_intf", 88)), 0); (("lsl", 3942), ((Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -431), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -430), (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -429), 0), 100000000, 0, -428), 0), 100000000, 0, -427), 0, (("src/int_intf.ml", 230, 6612, 6614), ("src/int_intf.ml", 230, 6612, 6641), 0), 0, Tag1 ("Base__Int_intf", 89)), 0); (("asr", 3943), ((Tag1 (0, (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -426), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -425), (Tag3 ((("t", 3919)), 0, (0)), 100000000, 0, -424), 0), 100000000, 0, -423), 0), 100000000, 0, -422), 0, (("src/int_intf.ml", 231, 6642, 6644), ("src/int_intf.ml", 231, 6642, 6671), 0), 0, Tag1 ("Base__Int_intf", 90)), 0)])), 0, (("src/int_intf.ml", 208, 6121, 6121), ("src/int_intf.ml", 232, 6672, 6675), 0), Tag1 ("Base__Int_intf", 91)), 0); Tag4 (("Operators", 3801), ((Tag1 ([Tag1 (("t", 3944), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/int_intf.ml", 209, 6159, 6161), ("src/int_intf.ml", 209, 6159, 6167), 0), 0, 0, 0, Tag1 ("Base__Int_intf", 71)), 1, 0); (("+", 3945), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -642), (Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -641), (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -640), 0), 100000000, 0, -639), 0), 100000000, 0, -638), 0, (("src/int_intf.ml", 211, 6169, 6171), ("src/int_intf.ml", 211, 6169, 6194), 0), 0, Tag1 ("Base__Int_intf", 72)), 0); (("-", 3946), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -637), (Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -636), (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -635), 0), 100000000, 0, -634), 0), 100000000, 0, -633), 0, (("src/int_intf.ml", 212, 6195, 6197), ("src/int_intf.ml", 212, 6195, 6220), 0), 0, Tag1 ("Base__Int_intf", 73)), 0); (("*", 3947), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -632), (Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -631), (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -630), 0), 100000000, 0, -629), 0), 100000000, 0, -628), 0, (("src/int_intf.ml", 213, 6221, 6223), ("src/int_intf.ml", 213, 6221, 6246), 0), 0, Tag1 ("Base__Int_intf", 74)), 0); (("/", 3948), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -627), (Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -626), (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -625), 0), 100000000, 0, -624), 0), 100000000, 0, -623), 0, (("src/int_intf.ml", 214, 6247, 6249), ("src/int_intf.ml", 214, 6247, 6272), 0), 0, Tag1 ("Base__Int_intf", 75)), 0); (("~-", 3949), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -622), (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -621), 0), 100000000, 0, -620), 0, (("src/int_intf.ml", 215, 6273, 6275), ("src/int_intf.ml", 215, 6273, 6294), 0), 0, Tag1 ("Base__Int_intf", 76)), 0); (("**", 3950), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -619), (Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -618), (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -617), 0), 100000000, 0, -616), 0), 100000000, 0, -615), 0, (("src/int_intf.ml", 216, 6295, 6297), ("src/int_intf.ml", 216, 6295, 6321), 0), 0, Tag1 ("Base__Int_intf", 77)), 0); ((">=", 3951), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -614), (Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -613), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -612), 0), 100000000, 0, -611), 0), 100000000, 0, -610), 0, (("src/int_intf.ml", 218, 6323, 6333), ("src/int_intf.ml", 218, 6323, 6367), 0), 0, Tag1 ("Base__Comparisons", 1)), 0); (("<=", 3952), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -609), (Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -608), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -607), 0), 100000000, 0, -606), 0), 100000000, 0, -605), 0, (("src/int_intf.ml", 218, 6323, 6333), ("src/int_intf.ml", 218, 6323, 6367), 0), 0, Tag1 ("Base__Comparisons", 2)), 0); (("=", 3953), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -604), (Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -603), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -602), 0), 100000000, 0, -601), 0), 100000000, 0, -600), 0, (("src/int_intf.ml", 218, 6323, 6333), ("src/int_intf.ml", 218, 6323, 6367), 0), 0, Tag1 ("Base__Comparisons", 3)), 0); ((">", 3954), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -599), (Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -598), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -597), 0), 100000000, 0, -596), 0), 100000000, 0, -595), 0, (("src/int_intf.ml", 218, 6323, 6333), ("src/int_intf.ml", 218, 6323, 6367), 0), 0, Tag1 ("Base__Comparisons", 4)), 0); (("<", 3955), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -594), (Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -593), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -592), 0), 100000000, 0, -591), 0), 100000000, 0, -590), 0, (("src/int_intf.ml", 218, 6323, 6333), ("src/int_intf.ml", 218, 6323, 6367), 0), 0, Tag1 ("Base__Comparisons", 5)), 0); (("<>", 3956), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -589), (Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -588), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -587), 0), 100000000, 0, -586), 0), 100000000, 0, -585), 0, (("src/int_intf.ml", 218, 6323, 6333), ("src/int_intf.ml", 218, 6323, 6367), 0), 0, Tag1 ("Base__Comparisons", 6)), 0); (("abs", 3957), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -584), (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -583), 0), 100000000, 0, -582), 0, (("src/int_intf.ml", 220, 6369, 6371), ("src/int_intf.ml", 220, 6369, 6387), 0), 0, Tag1 ("Base__Int_intf", 79)), 0); (("neg", 3958), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -581), (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -580), 0), 100000000, 0, -579), 0, (("src/int_intf.ml", 221, 6388, 6390), ("src/int_intf.ml", 221, 6388, 6406), 0), 0, Tag1 ("Base__Int_intf", 80)), 0); (("zero", 3959), ((Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -578), 0, (("src/int_intf.ml", 222, 6407, 6409), ("src/int_intf.ml", 222, 6407, 6421), 0), 0, Tag1 ("Base__Int_intf", 81)), 0); (("%", 3960), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -577), (Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -576), (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -575), 0), 100000000, 0, -574), 0), 100000000, 0, -573), 0, (("src/int_intf.ml", 223, 6422, 6424), ("src/int_intf.ml", 223, 6422, 6447), 0), 0, Tag1 ("Base__Int_intf", 82)), 0); (("/%", 3961), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -572), (Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -571), (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -570), 0), 100000000, 0, -569), 0), 100000000, 0, -568), 0, (("src/int_intf.ml", 224, 6448, 6450), ("src/int_intf.ml", 224, 6448, 6474), 0), 0, Tag1 ("Base__Int_intf", 83)), 0); (("//", 3962), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -567), (Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -566), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -565), 0), 100000000, 0, -564), 0), 100000000, 0, -563), 0, (("src/int_intf.ml", 225, 6475, 6477), ("src/int_intf.ml", 225, 6475, 6505), 0), 0, Tag1 ("Base__Int_intf", 84)), 0); (("land", 3963), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -562), (Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -561), (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -560), 0), 100000000, 0, -559), 0), 100000000, 0, -558), 0, (("src/int_intf.ml", 226, 6506, 6508), ("src/int_intf.ml", 226, 6506, 6534), 0), 0, Tag1 ("Base__Int_intf", 85)), 0); (("lor", 3964), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -557), (Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -556), (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -555), 0), 100000000, 0, -554), 0), 100000000, 0, -553), 0, (("src/int_intf.ml", 227, 6535, 6537), ("src/int_intf.ml", 227, 6535, 6562), 0), 0, Tag1 ("Base__Int_intf", 86)), 0); (("lxor", 3965), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -552), (Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -551), (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -550), 0), 100000000, 0, -549), 0), 100000000, 0, -548), 0, (("src/int_intf.ml", 228, 6563, 6565), ("src/int_intf.ml", 228, 6563, 6591), 0), 0, Tag1 ("Base__Int_intf", 87)), 0); (("lnot", 3966), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -547), (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -546), 0), 100000000, 0, -545), 0, (("src/int_intf.ml", 229, 6592, 6594), ("src/int_intf.ml", 229, 6592, 6611), 0), 0, Tag1 ("Base__Int_intf", 88)), 0); (("lsl", 3967), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -544), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -543), (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -542), 0), 100000000, 0, -541), 0), 100000000, 0, -540), 0, (("src/int_intf.ml", 230, 6612, 6614), ("src/int_intf.ml", 230, 6612, 6641), 0), 0, Tag1 ("Base__Int_intf", 89)), 0); (("asr", 3968), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -539), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -538), (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -537), 0), 100000000, 0, -536), 0), 100000000, 0, -535), 0, (("src/int_intf.ml", 231, 6642, 6644), ("src/int_intf.ml", 231, 6642, 6671), 0), 0, Tag1 ("Base__Int_intf", 90)), 0); (("lsr", 3969), ((Tag1 (0, (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -534), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -533), (Tag3 ((("t", 3944)), 0, (0)), 100000000, 0, -532), 0), 100000000, 0, -531), 0), 100000000, 0, -530), 0, (("src/int_intf.ml", 237, 6736, 6738), ("src/int_intf.ml", 237, 6736, 6765), 0), 0, Tag1 ("Base__Int_intf", 92)), 0)])), 0, (("src/int_intf.ml", 234, 6677, 6677), ("src/int_intf.ml", 238, 6766, 6769), 0), Tag1 ("Base__Int_intf", 93)), 0); Tag4 (("S_unbounded", 3802), ((Tag1 ([Tag1 (("t", 3970), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/int_intf.ml", 62, 2171, 2173), ("src/int_intf.ml", 62, 2171, 2218), 0), [(("deriving_inline", (("src/int_intf.ml", 62, 2171, 2183), ("src/int_intf.ml", 62, 2171, 2198), 0)), ([([(Tag8 ([(((("sexp"), (("src/int_intf.ml", 62, 2171, 2199), ("src/int_intf.ml", 62, 2171, 2203), 0))), (("src/int_intf.ml", 62, 2171, 2199), ("src/int_intf.ml", 62, 2171, 2203), 0), 0, 0); (((("sexp_grammar"), (("src/int_intf.ml", 62, 2171, 2205), ("src/int_intf.ml", 62, 2171, 2217), 0))), (("src/int_intf.ml", 62, 2171, 2205), ("src/int_intf.ml", 62, 2171, 2217), 0), 0, 0)]), (("src/int_intf.ml", 62, 2171, 2199), ("src/int_intf.ml", 62, 2171, 2217), 0), 0, 0)], (("src/int_intf.ml", 62, 2171, 2199), ("src/int_intf.ml", 62, 2171, 2217), 0))]), (("src/int_intf.ml", 62, 2171, 2180), ("src/int_intf.ml", 62, 2171, 2218), 0))], 0, 0, Tag1 ("Base__Int_intf", 18)), 1, 0); (("t_sexp_grammar", 3971), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [(Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -977)], (0)), 100000000, 0, -976), 0, (("src/int_intf.ml", 66, 2268, 2270), ("src/int_intf.ml", 66, 2268, 2316), 0), 0, Tag1 ("Base__Int_intf", 20)), 0); (("of_float", 3972), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -975), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -974), 0), 100000000, 0, -973), 0, (("src/int_intf.ml", 70, 2330, 2340), ("src/int_intf.ml", 70, 2330, 2368), 0), 0, Tag1 ("Base__Floatable", 1)), 0); (("to_float", 3973), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -972), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -971), 0), 100000000, 0, -970), 0, (("src/int_intf.ml", 70, 2330, 2340), ("src/int_intf.ml", 70, 2330, 2368), 0), 0, Tag1 ("Base__Floatable", 2)), 0); (("of_int_exn", 3974), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -969), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -968), 0), 100000000, 0, -967), 0, (("src/int_intf.ml", 71, 2369, 2379), ("src/int_intf.ml", 71, 2369, 2405), 0), 0, Tag1 ("Base__Intable", 1)), 0); (("to_int_exn", 3975), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -966), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -965), 0), 100000000, 0, -964), 0, (("src/int_intf.ml", 71, 2369, 2379), ("src/int_intf.ml", 71, 2369, 2405), 0), 0, Tag1 ("Base__Intable", 2)), 0); (("hash_fold_t", 3976), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "hash_fold"), [(Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -963)], (0)), 100000000, 0, -962), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Ppx_hash_lib", 4)), 0); (("hash", 3977), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -961), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "Std"), "Hash"), "hash_value"), 0, (0)), 100000000, 0, -960), 0), 100000000, 0, -959), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Ppx_hash_lib", 5)), 0); (("t_of_sexp", 3978), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -958), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -957), 0), 100000000, 0, -956), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Sexplib0__Sexpable", 1)), 0); (("sexp_of_t", 3979), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -955), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -954), 0), 100000000, 0, -953), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Sexplib0__Sexpable", 2)), 0); (("of_string", 3980), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -952), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -951), 0), 100000000, 0, -950), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Stringable", 1)), 0); (("to_string", 3981), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -949), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -948), 0), 100000000, 0, -947), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Stringable", 2)), 0); ((">=", 3982), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -946), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -945), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -944), 0), 100000000, 0, -943), 0), 100000000, 0, -942), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 1)), 0); (("<=", 3983), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -941), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -940), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -939), 0), 100000000, 0, -938), 0), 100000000, 0, -937), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 2)), 0); (("=", 3984), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -936), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -935), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -934), 0), 100000000, 0, -933), 0), 100000000, 0, -932), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 3)), 0); ((">", 3985), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -931), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -930), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -929), 0), 100000000, 0, -928), 0), 100000000, 0, -927), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 4)), 0); (("<", 3986), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -926), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -925), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -924), 0), 100000000, 0, -923), 0), 100000000, 0, -922), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 5)), 0); (("<>", 3987), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -921), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -920), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -919), 0), 100000000, 0, -918), 0), 100000000, 0, -917), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 6)), 0); (("equal", 3988), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -916), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -915), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -914), 0), 100000000, 0, -913), 0), 100000000, 0, -912), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 8)), 0); (("compare", 3989), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -911), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -910), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -909), 0), 100000000, 0, -908), 0), 100000000, 0, -907), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 9)), 0); (("min", 3990), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -906), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -905), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -904), 0), 100000000, 0, -903), 0), 100000000, 0, -902), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 10)), 0); (("max", 3991), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -901), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -900), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -899), 0), 100000000, 0, -898), 0), 100000000, 0, -897), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 11)), 0); (("ascending", 3992), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -896), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -895), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -894), 0), 100000000, 0, -893), 0), 100000000, 0, -892), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparable_intf", 19)), 0); (("descending", 3993), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -891), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -890), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -889), 0), 100000000, 0, -888), 0), 100000000, 0, -887), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparable_intf", 20)), 0); (("between", 3994), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -886), (Tag1 (("low"), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -885), (Tag1 (("high"), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -884), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -883), 0), 100000000, 0, -882), 0), 100000000, 0, -881), 0), 100000000, 0, -880), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparable_intf", 21)), 0); (("clamp_exn", 3995), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -879), (Tag1 (("min"), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -878), (Tag1 (("max"), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -877), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -876), 0), 100000000, 0, -875), 0), 100000000, 0, -874), 0), 100000000, 0, -873), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparable_intf", 22)), 0); (("clamp", 3996), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -872), (Tag1 (("min"), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -871), (Tag1 (("max"), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -870), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Or_error"), "t"), [(Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -869)], (0)), 100000000, 0, -868), 0), 100000000, 0, -867), 0), 100000000, 0, -866), 0), 100000000, 0, -865), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparable_intf", 23)), 0); Tag1 (("comparator_witness", 3997), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, 0, 0, Tag1 ("Base__Comparator", 5)), 1, 0); (("comparator", 3998), ((Tag3 (Tag1 ((Tag2 ("Base__Comparator")), "comparator"), [(Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -863); (Tag3 ((("comparator_witness", 3997)), 0, (0)), 100000000, 0, -864)], (0)), 100000000, 0, -862), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparator", 6)), 0); (("pp", 3999), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Formatter"), "t"), 0, (0)), 100000000, 0, -861), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -860), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -859), 0), 100000000, 0, -858), 0), 100000000, 0, -857), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Pretty_printer", 2)), 0); (("hashable", 4000), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Hashable"), "t"), [(Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -856)], (0)), 100000000, 0, -855), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Identifiable_intf", 15)), 0); (("is_positive", 4001), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -854), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -853), 0), 100000000, 0, -852), 0, (("src/int_intf.ml", 73, 2448, 2458), ("src/int_intf.ml", 73, 2448, 2495), 0), 0, Tag1 ("Base__Comparable_intf", 13)), 0); (("is_non_negative", 4002), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -851), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -850), 0), 100000000, 0, -849), 0, (("src/int_intf.ml", 73, 2448, 2458), ("src/int_intf.ml", 73, 2448, 2495), 0), 0, Tag1 ("Base__Comparable_intf", 14)), 0); (("is_negative", 4003), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -848), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -847), 0), 100000000, 0, -846), 0, (("src/int_intf.ml", 73, 2448, 2458), ("src/int_intf.ml", 73, 2448, 2495), 0), 0, Tag1 ("Base__Comparable_intf", 15)), 0); (("is_non_positive", 4004), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -845), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -844), 0), 100000000, 0, -843), 0, (("src/int_intf.ml", 73, 2448, 2458), ("src/int_intf.ml", 73, 2448, 2495), 0), 0, Tag1 ("Base__Comparable_intf", 16)), 0); (("sign", 4005), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -842), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__Comparable_intf")), "Sign"), "t"), 0, (0)), 100000000, 0, -841), 0), 100000000, 0, -840), 0, (("src/int_intf.ml", 73, 2448, 2458), ("src/int_intf.ml", 73, 2448, 2495), 0), 0, Tag1 ("Base__Comparable_intf", 17)), 0); (("invariant", 4006), ((Tag3 (Tag1 ((Tag2 ("Base__Invariant_intf")), "inv"), [(Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -839)], (0)), 100000000, 0, -838), 0, (("src/int_intf.ml", 74, 2496, 2506), ("src/int_intf.ml", 74, 2496, 2534), 0), 0, Tag1 ("Base__Invariant_intf", 3)), 0); Tag3 (("Hex", 4007), 0, (Tag1 ([Tag1 (("t", 4056), (0, 0, 0, 1, ((Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1005)), 0, 0, 0, 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), [(("deriving_inline", (("src/int_intf.ml", 44, 1730, 1755), ("src/int_intf.ml", 44, 1730, 1770), 0)), ([([(Tag8 ([(((("sexp"), (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1775), 0))), (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1775), 0), 0, 0); (((("sexp_grammar"), (("src/int_intf.ml", 44, 1730, 1777), ("src/int_intf.ml", 44, 1730, 1789), 0))), (("src/int_intf.ml", 44, 1730, 1777), ("src/int_intf.ml", 44, 1730, 1789), 0), 0, 0); (((("compare"), (("src/int_intf.ml", 44, 1730, 1791), ("src/int_intf.ml", 44, 1730, 1798), 0))), (("src/int_intf.ml", 44, 1730, 1791), ("src/int_intf.ml", 44, 1730, 1798), 0), 0, 0); (((("hash"), (("src/int_intf.ml", 44, 1730, 1800), ("src/int_intf.ml", 44, 1730, 1804), 0))), (("src/int_intf.ml", 44, 1730, 1800), ("src/int_intf.ml", 44, 1730, 1804), 0), 0, 0)]), (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1804), 0), 0, 0)], (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1804), 0))]), (("src/int_intf.ml", 44, 1730, 1752), ("src/int_intf.ml", 44, 1730, 1805), 0))], 0, 0, Tag1 ("Base__Int_intf", 8)), 0, 0); (("t_of_sexp", 4057), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -1004), (Tag3 ((("t", 4056)), 0, (0)), 100000000, 0, -1003), 0), 100000000, 0, -1002), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Sexplib0__Sexpable", 1)), 0); (("sexp_of_t", 4058), ((Tag1 (0, (Tag3 ((("t", 4056)), 0, (0)), 100000000, 0, -1001), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -1000), 0), 100000000, 0, -999), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Sexplib0__Sexpable", 2)), 0); (("t_sexp_grammar", 4059), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [(Tag3 ((("t", 4056)), 0, (0)), 100000000, 0, -998)], (0)), 100000000, 0, -997), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Base__Int_intf", 11)), 0); (("compare", 4060), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((("t", 4056)), 0, (0)), 100000000, 0, -996)], (0)), 100000000, 0, -995), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Base__Ppx_compare_lib", 5)), 0); (("hash_fold_t", 4061), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "hash_fold"), [(Tag3 ((("t", 4056)), 0, (0)), 100000000, 0, -994)], (0)), 100000000, 0, -993), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Base__Ppx_hash_lib", 4)), 0); (("hash", 4062), ((Tag1 (0, (Tag3 ((("t", 4056)), 0, (0)), 100000000, 0, -992), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "Std"), "Hash"), "hash_value"), 0, (0)), 100000000, 0, -991), 0), 100000000, 0, -990), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Base__Ppx_hash_lib", 5)), 0); (("of_string", 4063), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -989), (Tag3 ((("t", 4056)), 0, (0)), 100000000, 0, -988), 0), 100000000, 0, -987), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Base__Stringable", 1)), 0); (("to_string", 4064), ((Tag1 (0, (Tag3 ((("t", 4056)), 0, (0)), 100000000, 0, -986), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -985), 0), 100000000, 0, -984), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Base__Stringable", 2)), 0); (("to_string_hum", 4065), ((Tag1 (Tag1 ("delimiter"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -983)], (0)), 100000000, 0, -982), (Tag1 (0, (Tag3 ((("t", 4056)), 0, (0)), 100000000, 0, -981), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -980), 0), 100000000, 0, -979), 0), 100000000, 0, -978), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Base__Int_intf", 15)), 0)]), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), Tag1 ("Base__Int_intf", 16)), 0, 0); (("of_string_opt", 4008), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -837), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -836)], (0)), 100000000, 0, -835), 0), 100000000, 0, -834), 0, (("src/int_intf.ml", 77, 2571, 2573), ("src/int_intf.ml", 77, 2571, 2611), 0), 0, Tag1 ("Base__Int_intf", 27)), 0); (("to_string_hum", 4009), ((Tag1 (Tag1 ("delimiter"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -833)], (0)), 100000000, 0, -832), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -831), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -830), 0), 100000000, 0, -829), 0), 100000000, 0, -828), 0, (("src/int_intf.ml", 80, 2663, 2665), ("src/int_intf.ml", 80, 2663, 2715), 0), 0, Tag1 ("Base__Int_intf", 28)), 0); (("zero", 4010), ((Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -827), 0, (("src/int_intf.ml", 84, 2761, 2763), ("src/int_intf.ml", 84, 2761, 2775), 0), 0, Tag1 ("Base__Int_intf", 29)), 0); (("one", 4011), ((Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -826), 0, (("src/int_intf.ml", 85, 2776, 2778), ("src/int_intf.ml", 85, 2776, 2789), 0), 0, Tag1 ("Base__Int_intf", 30)), 0); (("minus_one", 4012), ((Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -825), 0, (("src/int_intf.ml", 86, 2790, 2792), ("src/int_intf.ml", 86, 2790, 2809), 0), 0, Tag1 ("Base__Int_intf", 31)), 0); (("+", 4013), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -824), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -823), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -822), 0), 100000000, 0, -821), 0), 100000000, 0, -820), 0, (("src/int_intf.ml", 87, 2810, 2812), ("src/int_intf.ml", 87, 2810, 2835), 0), 0, Tag1 ("Base__Int_intf", 32)), 0); (("-", 4014), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -819), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -818), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -817), 0), 100000000, 0, -816), 0), 100000000, 0, -815), 0, (("src/int_intf.ml", 88, 2836, 2838), ("src/int_intf.ml", 88, 2836, 2861), 0), 0, Tag1 ("Base__Int_intf", 33)), 0); (("*", 4015), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -814), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -813), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -812), 0), 100000000, 0, -811), 0), 100000000, 0, -810), 0, (("src/int_intf.ml", 89, 2862, 2864), ("src/int_intf.ml", 89, 2862, 2887), 0), 0, Tag1 ("Base__Int_intf", 34)), 0); (("**", 4016), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -809), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -808), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -807), 0), 100000000, 0, -806), 0), 100000000, 0, -805), 0, (("src/int_intf.ml", 92, 2921, 2923), ("src/int_intf.ml", 92, 2921, 2947), 0), 0, Tag1 ("Base__Int_intf", 35)), 0); (("neg", 4017), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -804), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -803), 0), 100000000, 0, -802), 0, (("src/int_intf.ml", 96, 2968, 2970), ("src/int_intf.ml", 96, 2968, 2986), 0), 0, Tag1 ("Base__Int_intf", 36)), 0); (("~-", 4018), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -801), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -800), 0), 100000000, 0, -799), 0, (("src/int_intf.ml", 97, 2987, 2989), ("src/int_intf.ml", 97, 2987, 3008), 0), 0, Tag1 ("Base__Int_intf", 37)), 0); (("/%", 4019), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -798), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -797), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -796), 0), 100000000, 0, -795), 0), 100000000, 0, -794), 0, (("src/int_intf.ml", 119, 3755, 3757), ("src/int_intf.ml", 119, 3755, 3781), 0), 0, Tag1 ("Base__Int_intf", 38)), 0); (("%", 4020), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -793), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -792), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -791), 0), 100000000, 0, -790), 0), 100000000, 0, -789), 0, (("src/int_intf.ml", 120, 3782, 3784), ("src/int_intf.ml", 120, 3782, 3807), 0), 0, Tag1 ("Base__Int_intf", 39)), 0); (("/", 4021), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -788), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -787), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -786), 0), 100000000, 0, -785), 0), 100000000, 0, -784), 0, (("src/int_intf.ml", 121, 3808, 3810), ("src/int_intf.ml", 121, 3808, 3833), 0), 0, Tag1 ("Base__Int_intf", 40)), 0); (("rem", 4022), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -783), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -782), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -781), 0), 100000000, 0, -780), 0), 100000000, 0, -779), 0, (("src/int_intf.ml", 122, 3834, 3836), ("src/int_intf.ml", 122, 3834, 3857), 0), 0, Tag1 ("Base__Int_intf", 41)), 0); (("//", 4023), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -778), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -777), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -776), 0), 100000000, 0, -775), 0), 100000000, 0, -774), 0, (("src/int_intf.ml", 125, 3896, 3898), ("src/int_intf.ml", 125, 3896, 3926), 0), 0, Tag1 ("Base__Int_intf", 42)), 0); (("land", 4024), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -773), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -772), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -771), 0), 100000000, 0, -770), 0), 100000000, 0, -769), 0, (("src/int_intf.ml", 128, 3956, 3958), ("src/int_intf.ml", 128, 3956, 3984), 0), 0, Tag1 ("Base__Int_intf", 43)), 0); (("lor", 4025), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -768), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -767), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -766), 0), 100000000, 0, -765), 0), 100000000, 0, -764), 0, (("src/int_intf.ml", 131, 4013, 4015), ("src/int_intf.ml", 131, 4013, 4040), 0), 0, Tag1 ("Base__Int_intf", 44)), 0); (("lxor", 4026), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -763), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -762), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -761), 0), 100000000, 0, -760), 0), 100000000, 0, -759), 0, (("src/int_intf.ml", 134, 4070, 4072), ("src/int_intf.ml", 134, 4070, 4098), 0), 0, Tag1 ("Base__Int_intf", 45)), 0); (("lnot", 4027), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -758), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -757), 0), 100000000, 0, -756), 0, (("src/int_intf.ml", 137, 4128, 4130), ("src/int_intf.ml", 137, 4128, 4147), 0), 0, Tag1 ("Base__Int_intf", 46)), 0); (("lsl", 4028), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -755), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -754), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -753), 0), 100000000, 0, -752), 0), 100000000, 0, -751), 0, (("src/int_intf.ml", 140, 4180, 4182), ("src/int_intf.ml", 140, 4180, 4209), 0), 0, Tag1 ("Base__Int_intf", 47)), 0); (("asr", 4029), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -750), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -749), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -748), 0), 100000000, 0, -747), 0), 100000000, 0, -746), 0, (("src/int_intf.ml", 143, 4243, 4245), ("src/int_intf.ml", 143, 4243, 4272), 0), 0, Tag1 ("Base__Int_intf", 48)), 0); (("round", 4030), ((Tag1 (Tag1 ("dir"), (Tag3 ((Tag3 ("option", 10)), [(Tag8 (([("Down", (0)); ("Nearest", (0)); ("Up", (0)); ("Zero", (0))], (0, 100000000, 0, -745), 1, 0, 0)), 100000000, 0, -744)], (0)), 100000000, 0, -743), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -742), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -741), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -740), 0), 100000000, 0, -739), 0), 100000000, 0, -738), 0), 100000000, 0, -737), 0, (("src/int_intf.ml", 147, 4311, 4321), ("src/int_intf.ml", 147, 4311, 4343), 0), 0, Tag1 ("Base__Int_intf", 1)), 0); (("round_towards_zero", 4031), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -736), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -735), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -734), 0), 100000000, 0, -733), 0), 100000000, 0, -732), 0, (("src/int_intf.ml", 147, 4311, 4321), ("src/int_intf.ml", 147, 4311, 4343), 0), 0, Tag1 ("Base__Int_intf", 2)), 0); (("round_down", 4032), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -731), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -730), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -729), 0), 100000000, 0, -728), 0), 100000000, 0, -727), 0, (("src/int_intf.ml", 147, 4311, 4321), ("src/int_intf.ml", 147, 4311, 4343), 0), 0, Tag1 ("Base__Int_intf", 3)), 0); (("round_up", 4033), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -726), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -725), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -724), 0), 100000000, 0, -723), 0), 100000000, 0, -722), 0, (("src/int_intf.ml", 147, 4311, 4321), ("src/int_intf.ml", 147, 4311, 4343), 0), 0, Tag1 ("Base__Int_intf", 4)), 0); (("round_nearest", 4034), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -721), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -720), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -719), 0), 100000000, 0, -718), 0), 100000000, 0, -717), 0, (("src/int_intf.ml", 147, 4311, 4321), ("src/int_intf.ml", 147, 4311, 4343), 0), 0, Tag1 ("Base__Int_intf", 5)), 0); (("abs", 4035), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -716), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -715), 0), 100000000, 0, -714), 0, (("src/int_intf.ml", 151, 4450, 4452), ("src/int_intf.ml", 151, 4450, 4468), 0), 0, Tag1 ("Base__Int_intf", 50)), 0); (("succ", 4036), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -713), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -712), 0), 100000000, 0, -711), 0, (("src/int_intf.ml", 155, 4520, 4522), ("src/int_intf.ml", 155, 4520, 4539), 0), 0, Tag1 ("Base__Int_intf", 51)), 0); (("pred", 4037), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -710), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -709), 0), 100000000, 0, -708), 0, (("src/int_intf.ml", 156, 4540, 4542), ("src/int_intf.ml", 156, 4540, 4559), 0), 0, Tag1 ("Base__Int_intf", 52)), 0); (("pow", 4038), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -707), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -706), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -705), 0), 100000000, 0, -704), 0), 100000000, 0, -703), 0, (("src/int_intf.ml", 162, 4770, 4772), ("src/int_intf.ml", 162, 4770, 4793), 0), 0, Tag1 ("Base__Int_intf", 53)), 0); (("bit_and", 4039), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -702), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -701), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -700), 0), 100000000, 0, -699), 0), 100000000, 0, -698), 0, (("src/int_intf.ml", 168, 4947, 4949), ("src/int_intf.ml", 168, 4947, 4974), 0), 0, Tag1 ("Base__Int_intf", 54)), 0); (("bit_or", 4040), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -697), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -696), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -695), 0), 100000000, 0, -694), 0), 100000000, 0, -693), 0, (("src/int_intf.ml", 170, 4976, 4978), ("src/int_intf.ml", 170, 4976, 5002), 0), 0, Tag1 ("Base__Int_intf", 55)), 0); (("bit_xor", 4041), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -692), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -691), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -690), 0), 100000000, 0, -689), 0), 100000000, 0, -688), 0, (("src/int_intf.ml", 171, 5003, 5005), ("src/int_intf.ml", 171, 5003, 5030), 0), 0, Tag1 ("Base__Int_intf", 56)), 0); (("bit_not", 4042), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -687), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -686), 0), 100000000, 0, -685), 0, (("src/int_intf.ml", 172, 5031, 5033), ("src/int_intf.ml", 172, 5031, 5053), 0), 0, Tag1 ("Base__Int_intf", 57)), 0); (("popcount", 4043), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -684), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -683), 0), 100000000, 0, -682), 0, (("src/int_intf.ml", 175, 5136, 5138), ("src/int_intf.ml", 175, 5136, 5161), 0), 0, Tag1 ("Base__Int_intf", 58)), 0); (("shift_left", 4044), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -681), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -680), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -679), 0), 100000000, 0, -678), 0), 100000000, 0, -677), 0, (("src/int_intf.ml", 182, 5329, 5331), ("src/int_intf.ml", 182, 5329, 5361), 0), 0, Tag1 ("Base__Int_intf", 59)), 0); (("shift_right", 4045), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -676), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -675), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -674), 0), 100000000, 0, -673), 0), 100000000, 0, -672), 0, (("src/int_intf.ml", 185, 5420, 5422), ("src/int_intf.ml", 185, 5420, 5453), 0), 0, Tag1 ("Base__Int_intf", 60)), 0); (("decr", 4046), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import"), "ref"), [(Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -671)], (0)), 100000000, 0, -670), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -669), 0), 100000000, 0, -668), 0, (("src/int_intf.ml", 189, 5527, 5529), ("src/int_intf.ml", 189, 5527, 5553), 0), 0, Tag1 ("Base__Int_intf", 61)), 0); (("incr", 4047), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import"), "ref"), [(Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -667)], (0)), 100000000, 0, -666), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -665), 0), 100000000, 0, -664), 0, (("src/int_intf.ml", 190, 5554, 5556), ("src/int_intf.ml", 190, 5554, 5580), 0), 0, Tag1 ("Base__Int_intf", 62)), 0); (("of_int32_exn", 4048), ((Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -663), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -662), 0), 100000000, 0, -661), 0, (("src/int_intf.ml", 194, 5642, 5644), ("src/int_intf.ml", 194, 5642, 5673), 0), 0, Tag1 ("Base__Int_intf", 63)), 0); (("to_int32_exn", 4049), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -660), (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -659), 0), 100000000, 0, -658), 0, (("src/int_intf.ml", 195, 5674, 5676), ("src/int_intf.ml", 195, 5674, 5705), 0), 0, Tag1 ("Base__Int_intf", 64)), 0); (("of_int64_exn", 4050), ((Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -657), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -656), 0), 100000000, 0, -655), 0, (("src/int_intf.ml", 196, 5706, 5708), ("src/int_intf.ml", 196, 5706, 5737), 0), 0, Tag1 ("Base__Int_intf", 65)), 0); (("to_int64", 4051), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -654), (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -653), 0), 100000000, 0, -652), 0, (("src/int_intf.ml", 197, 5738, 5740), ("src/int_intf.ml", 197, 5738, 5765), 0), 0, Tag1 ("Base__Int_intf", 66)), 0); (("of_nativeint_exn", 4052), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -651), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -650), 0), 100000000, 0, -649), 0, (("src/int_intf.ml", 198, 5766, 5768), ("src/int_intf.ml", 198, 5766, 5805), 0), 0, Tag1 ("Base__Int_intf", 67)), 0); (("to_nativeint_exn", 4053), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -648), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -647), 0), 100000000, 0, -646), 0, (("src/int_intf.ml", 199, 5806, 5808), ("src/int_intf.ml", 199, 5806, 5845), 0), 0, Tag1 ("Base__Int_intf", 68)), 0); (("of_float_unchecked", 4054), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -645), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -644), 0), 100000000, 0, -643), 0, (("src/int_intf.ml", 205, 6078, 6080), ("src/int_intf.ml", 205, 6078, 6115), 0), 0, Tag1 ("Base__Int_intf", 69)), 0); Tag3 (("O", 4055), 0, (Tag1 ([(("+", 4066), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1113), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1112), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1111), 0), 100000000, 0, -1110), 0), 100000000, 0, -1109), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Int_intf", 72)), 0); (("-", 4067), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1108), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1107), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1106), 0), 100000000, 0, -1105), 0), 100000000, 0, -1104), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Int_intf", 73)), 0); (("*", 4068), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1103), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1102), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1101), 0), 100000000, 0, -1100), 0), 100000000, 0, -1099), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Int_intf", 74)), 0); (("/", 4069), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1098), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1097), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1096), 0), 100000000, 0, -1095), 0), 100000000, 0, -1094), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Int_intf", 75)), 0); (("~-", 4070), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1093), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1092), 0), 100000000, 0, -1091), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Int_intf", 76)), 0); (("**", 4071), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1090), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1089), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1088), 0), 100000000, 0, -1087), 0), 100000000, 0, -1086), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Int_intf", 77)), 0); ((">=", 4072), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1085), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1084), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1083), 0), 100000000, 0, -1082), 0), 100000000, 0, -1081), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Comparisons", 1)), 0); (("<=", 4073), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1080), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1079), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1078), 0), 100000000, 0, -1077), 0), 100000000, 0, -1076), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Comparisons", 2)), 0); (("=", 4074), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1075), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1074), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1073), 0), 100000000, 0, -1072), 0), 100000000, 0, -1071), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Comparisons", 3)), 0); ((">", 4075), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1070), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1069), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1068), 0), 100000000, 0, -1067), 0), 100000000, 0, -1066), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Comparisons", 4)), 0); (("<", 4076), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1065), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1064), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1063), 0), 100000000, 0, -1062), 0), 100000000, 0, -1061), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Comparisons", 5)), 0); (("<>", 4077), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1060), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1059), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1058), 0), 100000000, 0, -1057), 0), 100000000, 0, -1056), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Comparisons", 6)), 0); (("abs", 4078), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1055), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1054), 0), 100000000, 0, -1053), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Int_intf", 79)), 0); (("neg", 4079), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1052), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1051), 0), 100000000, 0, -1050), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Int_intf", 80)), 0); (("zero", 4080), ((Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1049), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Int_intf", 81)), 0); (("%", 4081), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1048), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1047), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1046), 0), 100000000, 0, -1045), 0), 100000000, 0, -1044), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Int_intf", 82)), 0); (("/%", 4082), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1043), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1042), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1041), 0), 100000000, 0, -1040), 0), 100000000, 0, -1039), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Int_intf", 83)), 0); (("//", 4083), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1038), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1037), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1036), 0), 100000000, 0, -1035), 0), 100000000, 0, -1034), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Int_intf", 84)), 0); (("land", 4084), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1033), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1032), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1031), 0), 100000000, 0, -1030), 0), 100000000, 0, -1029), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Int_intf", 85)), 0); (("lor", 4085), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1028), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1027), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1026), 0), 100000000, 0, -1025), 0), 100000000, 0, -1024), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Int_intf", 86)), 0); (("lxor", 4086), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1023), (Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1022), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1021), 0), 100000000, 0, -1020), 0), 100000000, 0, -1019), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Int_intf", 87)), 0); (("lnot", 4087), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1018), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1017), 0), 100000000, 0, -1016), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Int_intf", 88)), 0); (("lsl", 4088), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1015), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1014), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1013), 0), 100000000, 0, -1012), 0), 100000000, 0, -1011), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Int_intf", 89)), 0); (("asr", 4089), ((Tag1 (0, (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1010), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1009), (Tag3 ((("t", 3970)), 0, (0)), 100000000, 0, -1008), 0), 100000000, 0, -1007), 0), 100000000, 0, -1006), 0, (("src/int_intf.ml", 247, 7122, 7135), ("src/int_intf.ml", 247, 7122, 7171), 0), 0, Tag1 ("Base__Int_intf", 90)), 0)]), 0, (("src/int_intf.ml", 247, 7122, 7124), ("src/int_intf.ml", 247, 7122, 7171), 0), Tag1 ("Base__Int_intf", 95)), 0, 0)])), 0, (("src/int_intf.ml", 243, 6969, 6969), ("src/int_intf.ml", 248, 7172, 7175), 0), Tag1 ("Base__Int_intf", 96)), 0); Tag4 (("S", 3803), ((Tag1 ([Tag1 (("t", 4090), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/int_intf.ml", 62, 2171, 2173), ("src/int_intf.ml", 62, 2171, 2218), 0), [(("deriving_inline", (("src/int_intf.ml", 62, 2171, 2183), ("src/int_intf.ml", 62, 2171, 2198), 0)), ([([(Tag8 ([(((("sexp"), (("src/int_intf.ml", 62, 2171, 2199), ("src/int_intf.ml", 62, 2171, 2203), 0))), (("src/int_intf.ml", 62, 2171, 2199), ("src/int_intf.ml", 62, 2171, 2203), 0), 0, 0); (((("sexp_grammar"), (("src/int_intf.ml", 62, 2171, 2205), ("src/int_intf.ml", 62, 2171, 2217), 0))), (("src/int_intf.ml", 62, 2171, 2205), ("src/int_intf.ml", 62, 2171, 2217), 0), 0, 0)]), (("src/int_intf.ml", 62, 2171, 2199), ("src/int_intf.ml", 62, 2171, 2217), 0), 0, 0)], (("src/int_intf.ml", 62, 2171, 2199), ("src/int_intf.ml", 62, 2171, 2217), 0))]), (("src/int_intf.ml", 62, 2171, 2180), ("src/int_intf.ml", 62, 2171, 2218), 0))], 0, 0, Tag1 ("Base__Int_intf", 18)), 1, 0); (("t_sexp_grammar", 4091), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [(Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1482)], (0)), 100000000, 0, -1481), 0, (("src/int_intf.ml", 66, 2268, 2270), ("src/int_intf.ml", 66, 2268, 2316), 0), 0, Tag1 ("Base__Int_intf", 20)), 0); (("of_float", 4092), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1480), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1479), 0), 100000000, 0, -1478), 0, (("src/int_intf.ml", 70, 2330, 2340), ("src/int_intf.ml", 70, 2330, 2368), 0), 0, Tag1 ("Base__Floatable", 1)), 0); (("to_float", 4093), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1477), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1476), 0), 100000000, 0, -1475), 0, (("src/int_intf.ml", 70, 2330, 2340), ("src/int_intf.ml", 70, 2330, 2368), 0), 0, Tag1 ("Base__Floatable", 2)), 0); (("of_int_exn", 4094), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1474), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1473), 0), 100000000, 0, -1472), 0, (("src/int_intf.ml", 71, 2369, 2379), ("src/int_intf.ml", 71, 2369, 2405), 0), 0, Tag1 ("Base__Intable", 1)), 0); (("to_int_exn", 4095), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1471), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1470), 0), 100000000, 0, -1469), 0, (("src/int_intf.ml", 71, 2369, 2379), ("src/int_intf.ml", 71, 2369, 2405), 0), 0, Tag1 ("Base__Intable", 2)), 0); (("hash_fold_t", 4096), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "hash_fold"), [(Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1468)], (0)), 100000000, 0, -1467), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Ppx_hash_lib", 4)), 0); (("hash", 4097), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1466), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "Std"), "Hash"), "hash_value"), 0, (0)), 100000000, 0, -1465), 0), 100000000, 0, -1464), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Ppx_hash_lib", 5)), 0); (("t_of_sexp", 4098), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -1463), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1462), 0), 100000000, 0, -1461), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Sexplib0__Sexpable", 1)), 0); (("sexp_of_t", 4099), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1460), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -1459), 0), 100000000, 0, -1458), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Sexplib0__Sexpable", 2)), 0); (("of_string", 4100), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1457), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1456), 0), 100000000, 0, -1455), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Stringable", 1)), 0); (("to_string", 4101), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1454), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1453), 0), 100000000, 0, -1452), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Stringable", 2)), 0); ((">=", 4102), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1451), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1450), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1449), 0), 100000000, 0, -1448), 0), 100000000, 0, -1447), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 1)), 0); (("<=", 4103), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1446), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1445), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1444), 0), 100000000, 0, -1443), 0), 100000000, 0, -1442), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 2)), 0); (("=", 4104), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1441), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1440), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1439), 0), 100000000, 0, -1438), 0), 100000000, 0, -1437), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 3)), 0); ((">", 4105), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1436), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1435), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1434), 0), 100000000, 0, -1433), 0), 100000000, 0, -1432), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 4)), 0); (("<", 4106), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1431), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1430), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1429), 0), 100000000, 0, -1428), 0), 100000000, 0, -1427), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 5)), 0); (("<>", 4107), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1426), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1425), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1424), 0), 100000000, 0, -1423), 0), 100000000, 0, -1422), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 6)), 0); (("equal", 4108), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1421), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1420), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1419), 0), 100000000, 0, -1418), 0), 100000000, 0, -1417), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 8)), 0); (("compare", 4109), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1416), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1415), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1414), 0), 100000000, 0, -1413), 0), 100000000, 0, -1412), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 9)), 0); (("min", 4110), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1411), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1410), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1409), 0), 100000000, 0, -1408), 0), 100000000, 0, -1407), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 10)), 0); (("max", 4111), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1406), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1405), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1404), 0), 100000000, 0, -1403), 0), 100000000, 0, -1402), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparisons", 11)), 0); (("ascending", 4112), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1401), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1400), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1399), 0), 100000000, 0, -1398), 0), 100000000, 0, -1397), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparable_intf", 19)), 0); (("descending", 4113), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1396), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1395), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1394), 0), 100000000, 0, -1393), 0), 100000000, 0, -1392), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparable_intf", 20)), 0); (("between", 4114), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1391), (Tag1 (("low"), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1390), (Tag1 (("high"), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1389), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1388), 0), 100000000, 0, -1387), 0), 100000000, 0, -1386), 0), 100000000, 0, -1385), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparable_intf", 21)), 0); (("clamp_exn", 4115), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1384), (Tag1 (("min"), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1383), (Tag1 (("max"), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1382), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1381), 0), 100000000, 0, -1380), 0), 100000000, 0, -1379), 0), 100000000, 0, -1378), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparable_intf", 22)), 0); (("clamp", 4116), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1377), (Tag1 (("min"), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1376), (Tag1 (("max"), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1375), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Or_error"), "t"), [(Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1374)], (0)), 100000000, 0, -1373), 0), 100000000, 0, -1372), 0), 100000000, 0, -1371), 0), 100000000, 0, -1370), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparable_intf", 23)), 0); Tag1 (("comparator_witness", 4117), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, 0, 0, Tag1 ("Base__Comparator", 5)), 1, 0); (("comparator", 4118), ((Tag3 (Tag1 ((Tag2 ("Base__Comparator")), "comparator"), [(Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1368); (Tag3 ((("comparator_witness", 4117)), 0, (0)), 100000000, 0, -1369)], (0)), 100000000, 0, -1367), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Comparator", 6)), 0); (("pp", 4119), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Formatter"), "t"), 0, (0)), 100000000, 0, -1366), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1365), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1364), 0), 100000000, 0, -1363), 0), 100000000, 0, -1362), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Pretty_printer", 2)), 0); (("hashable", 4120), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Hashable"), "t"), [(Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1361)], (0)), 100000000, 0, -1360), 0, (("src/int_intf.ml", 72, 2406, 2416), ("src/int_intf.ml", 72, 2406, 2447), 0), 0, Tag1 ("Base__Identifiable_intf", 15)), 0); (("is_positive", 4121), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1359), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1358), 0), 100000000, 0, -1357), 0, (("src/int_intf.ml", 73, 2448, 2458), ("src/int_intf.ml", 73, 2448, 2495), 0), 0, Tag1 ("Base__Comparable_intf", 13)), 0); (("is_non_negative", 4122), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1356), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1355), 0), 100000000, 0, -1354), 0, (("src/int_intf.ml", 73, 2448, 2458), ("src/int_intf.ml", 73, 2448, 2495), 0), 0, Tag1 ("Base__Comparable_intf", 14)), 0); (("is_negative", 4123), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1353), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1352), 0), 100000000, 0, -1351), 0, (("src/int_intf.ml", 73, 2448, 2458), ("src/int_intf.ml", 73, 2448, 2495), 0), 0, Tag1 ("Base__Comparable_intf", 15)), 0); (("is_non_positive", 4124), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1350), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1349), 0), 100000000, 0, -1348), 0, (("src/int_intf.ml", 73, 2448, 2458), ("src/int_intf.ml", 73, 2448, 2495), 0), 0, Tag1 ("Base__Comparable_intf", 16)), 0); (("sign", 4125), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1347), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__Comparable_intf")), "Sign"), "t"), 0, (0)), 100000000, 0, -1346), 0), 100000000, 0, -1345), 0, (("src/int_intf.ml", 73, 2448, 2458), ("src/int_intf.ml", 73, 2448, 2495), 0), 0, Tag1 ("Base__Comparable_intf", 17)), 0); (("invariant", 4126), ((Tag3 (Tag1 ((Tag2 ("Base__Invariant_intf")), "inv"), [(Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1344)], (0)), 100000000, 0, -1343), 0, (("src/int_intf.ml", 74, 2496, 2506), ("src/int_intf.ml", 74, 2496, 2534), 0), 0, Tag1 ("Base__Invariant_intf", 3)), 0); Tag3 (("Hex", 4127), 0, (Tag1 ([Tag1 (("t", 4188), (0, 0, 0, 1, ((Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1510)), 0, 0, 0, 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), [(("deriving_inline", (("src/int_intf.ml", 44, 1730, 1755), ("src/int_intf.ml", 44, 1730, 1770), 0)), ([([(Tag8 ([(((("sexp"), (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1775), 0))), (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1775), 0), 0, 0); (((("sexp_grammar"), (("src/int_intf.ml", 44, 1730, 1777), ("src/int_intf.ml", 44, 1730, 1789), 0))), (("src/int_intf.ml", 44, 1730, 1777), ("src/int_intf.ml", 44, 1730, 1789), 0), 0, 0); (((("compare"), (("src/int_intf.ml", 44, 1730, 1791), ("src/int_intf.ml", 44, 1730, 1798), 0))), (("src/int_intf.ml", 44, 1730, 1791), ("src/int_intf.ml", 44, 1730, 1798), 0), 0, 0); (((("hash"), (("src/int_intf.ml", 44, 1730, 1800), ("src/int_intf.ml", 44, 1730, 1804), 0))), (("src/int_intf.ml", 44, 1730, 1800), ("src/int_intf.ml", 44, 1730, 1804), 0), 0, 0)]), (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1804), 0), 0, 0)], (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1804), 0))]), (("src/int_intf.ml", 44, 1730, 1752), ("src/int_intf.ml", 44, 1730, 1805), 0))], 0, 0, Tag1 ("Base__Int_intf", 8)), 0, 0); (("t_of_sexp", 4189), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -1509), (Tag3 ((("t", 4188)), 0, (0)), 100000000, 0, -1508), 0), 100000000, 0, -1507), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Sexplib0__Sexpable", 1)), 0); (("sexp_of_t", 4190), ((Tag1 (0, (Tag3 ((("t", 4188)), 0, (0)), 100000000, 0, -1506), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -1505), 0), 100000000, 0, -1504), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Sexplib0__Sexpable", 2)), 0); (("t_sexp_grammar", 4191), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [(Tag3 ((("t", 4188)), 0, (0)), 100000000, 0, -1503)], (0)), 100000000, 0, -1502), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Base__Int_intf", 11)), 0); (("compare", 4192), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((("t", 4188)), 0, (0)), 100000000, 0, -1501)], (0)), 100000000, 0, -1500), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Base__Ppx_compare_lib", 5)), 0); (("hash_fold_t", 4193), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "hash_fold"), [(Tag3 ((("t", 4188)), 0, (0)), 100000000, 0, -1499)], (0)), 100000000, 0, -1498), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Base__Ppx_hash_lib", 4)), 0); (("hash", 4194), ((Tag1 (0, (Tag3 ((("t", 4188)), 0, (0)), 100000000, 0, -1497), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "Std"), "Hash"), "hash_value"), 0, (0)), 100000000, 0, -1496), 0), 100000000, 0, -1495), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Base__Ppx_hash_lib", 5)), 0); (("of_string", 4195), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1494), (Tag3 ((("t", 4188)), 0, (0)), 100000000, 0, -1493), 0), 100000000, 0, -1492), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Base__Stringable", 1)), 0); (("to_string", 4196), ((Tag1 (0, (Tag3 ((("t", 4188)), 0, (0)), 100000000, 0, -1491), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1490), 0), 100000000, 0, -1489), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Base__Stringable", 2)), 0); (("to_string_hum", 4197), ((Tag1 (Tag1 ("delimiter"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1488)], (0)), 100000000, 0, -1487), (Tag1 (0, (Tag3 ((("t", 4188)), 0, (0)), 100000000, 0, -1486), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1485), 0), 100000000, 0, -1484), 0), 100000000, 0, -1483), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), 0, Tag1 ("Base__Int_intf", 15)), 0)]), 0, (("src/int_intf.ml", 75, 2535, 2545), ("src/int_intf.ml", 75, 2535, 2569), 0), Tag1 ("Base__Int_intf", 16)), 0, 0); (("of_string_opt", 4128), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1342), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1341)], (0)), 100000000, 0, -1340), 0), 100000000, 0, -1339), 0, (("src/int_intf.ml", 77, 2571, 2573), ("src/int_intf.ml", 77, 2571, 2611), 0), 0, Tag1 ("Base__Int_intf", 27)), 0); (("to_string_hum", 4129), ((Tag1 (Tag1 ("delimiter"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1338)], (0)), 100000000, 0, -1337), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1336), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1335), 0), 100000000, 0, -1334), 0), 100000000, 0, -1333), 0, (("src/int_intf.ml", 80, 2663, 2665), ("src/int_intf.ml", 80, 2663, 2715), 0), 0, Tag1 ("Base__Int_intf", 28)), 0); (("zero", 4130), ((Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1332), 0, (("src/int_intf.ml", 84, 2761, 2763), ("src/int_intf.ml", 84, 2761, 2775), 0), 0, Tag1 ("Base__Int_intf", 29)), 0); (("one", 4131), ((Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1331), 0, (("src/int_intf.ml", 85, 2776, 2778), ("src/int_intf.ml", 85, 2776, 2789), 0), 0, Tag1 ("Base__Int_intf", 30)), 0); (("minus_one", 4132), ((Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1330), 0, (("src/int_intf.ml", 86, 2790, 2792), ("src/int_intf.ml", 86, 2790, 2809), 0), 0, Tag1 ("Base__Int_intf", 31)), 0); (("+", 4133), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1329), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1328), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1327), 0), 100000000, 0, -1326), 0), 100000000, 0, -1325), 0, (("src/int_intf.ml", 87, 2810, 2812), ("src/int_intf.ml", 87, 2810, 2835), 0), 0, Tag1 ("Base__Int_intf", 32)), 0); (("-", 4134), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1324), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1323), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1322), 0), 100000000, 0, -1321), 0), 100000000, 0, -1320), 0, (("src/int_intf.ml", 88, 2836, 2838), ("src/int_intf.ml", 88, 2836, 2861), 0), 0, Tag1 ("Base__Int_intf", 33)), 0); (("*", 4135), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1319), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1318), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1317), 0), 100000000, 0, -1316), 0), 100000000, 0, -1315), 0, (("src/int_intf.ml", 89, 2862, 2864), ("src/int_intf.ml", 89, 2862, 2887), 0), 0, Tag1 ("Base__Int_intf", 34)), 0); (("**", 4136), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1314), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1313), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1312), 0), 100000000, 0, -1311), 0), 100000000, 0, -1310), 0, (("src/int_intf.ml", 92, 2921, 2923), ("src/int_intf.ml", 92, 2921, 2947), 0), 0, Tag1 ("Base__Int_intf", 35)), 0); (("neg", 4137), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1309), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1308), 0), 100000000, 0, -1307), 0, (("src/int_intf.ml", 96, 2968, 2970), ("src/int_intf.ml", 96, 2968, 2986), 0), 0, Tag1 ("Base__Int_intf", 36)), 0); (("~-", 4138), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1306), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1305), 0), 100000000, 0, -1304), 0, (("src/int_intf.ml", 97, 2987, 2989), ("src/int_intf.ml", 97, 2987, 3008), 0), 0, Tag1 ("Base__Int_intf", 37)), 0); (("/%", 4139), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1303), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1302), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1301), 0), 100000000, 0, -1300), 0), 100000000, 0, -1299), 0, (("src/int_intf.ml", 119, 3755, 3757), ("src/int_intf.ml", 119, 3755, 3781), 0), 0, Tag1 ("Base__Int_intf", 38)), 0); (("%", 4140), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1298), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1297), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1296), 0), 100000000, 0, -1295), 0), 100000000, 0, -1294), 0, (("src/int_intf.ml", 120, 3782, 3784), ("src/int_intf.ml", 120, 3782, 3807), 0), 0, Tag1 ("Base__Int_intf", 39)), 0); (("/", 4141), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1293), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1292), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1291), 0), 100000000, 0, -1290), 0), 100000000, 0, -1289), 0, (("src/int_intf.ml", 121, 3808, 3810), ("src/int_intf.ml", 121, 3808, 3833), 0), 0, Tag1 ("Base__Int_intf", 40)), 0); (("rem", 4142), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1288), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1287), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1286), 0), 100000000, 0, -1285), 0), 100000000, 0, -1284), 0, (("src/int_intf.ml", 122, 3834, 3836), ("src/int_intf.ml", 122, 3834, 3857), 0), 0, Tag1 ("Base__Int_intf", 41)), 0); (("//", 4143), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1283), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1282), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1281), 0), 100000000, 0, -1280), 0), 100000000, 0, -1279), 0, (("src/int_intf.ml", 125, 3896, 3898), ("src/int_intf.ml", 125, 3896, 3926), 0), 0, Tag1 ("Base__Int_intf", 42)), 0); (("land", 4144), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1278), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1277), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1276), 0), 100000000, 0, -1275), 0), 100000000, 0, -1274), 0, (("src/int_intf.ml", 128, 3956, 3958), ("src/int_intf.ml", 128, 3956, 3984), 0), 0, Tag1 ("Base__Int_intf", 43)), 0); (("lor", 4145), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1273), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1272), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1271), 0), 100000000, 0, -1270), 0), 100000000, 0, -1269), 0, (("src/int_intf.ml", 131, 4013, 4015), ("src/int_intf.ml", 131, 4013, 4040), 0), 0, Tag1 ("Base__Int_intf", 44)), 0); (("lxor", 4146), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1268), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1267), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1266), 0), 100000000, 0, -1265), 0), 100000000, 0, -1264), 0, (("src/int_intf.ml", 134, 4070, 4072), ("src/int_intf.ml", 134, 4070, 4098), 0), 0, Tag1 ("Base__Int_intf", 45)), 0); (("lnot", 4147), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1263), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1262), 0), 100000000, 0, -1261), 0, (("src/int_intf.ml", 137, 4128, 4130), ("src/int_intf.ml", 137, 4128, 4147), 0), 0, Tag1 ("Base__Int_intf", 46)), 0); (("lsl", 4148), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1260), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1259), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1258), 0), 100000000, 0, -1257), 0), 100000000, 0, -1256), 0, (("src/int_intf.ml", 140, 4180, 4182), ("src/int_intf.ml", 140, 4180, 4209), 0), 0, Tag1 ("Base__Int_intf", 47)), 0); (("asr", 4149), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1255), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1254), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1253), 0), 100000000, 0, -1252), 0), 100000000, 0, -1251), 0, (("src/int_intf.ml", 143, 4243, 4245), ("src/int_intf.ml", 143, 4243, 4272), 0), 0, Tag1 ("Base__Int_intf", 48)), 0); (("round", 4150), ((Tag1 (Tag1 ("dir"), (Tag3 ((Tag3 ("option", 10)), [(Tag8 (([("Down", (0)); ("Nearest", (0)); ("Up", (0)); ("Zero", (0))], (0, 100000000, 0, -1250), 1, 0, 0)), 100000000, 0, -1249)], (0)), 100000000, 0, -1248), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1247), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1246), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1245), 0), 100000000, 0, -1244), 0), 100000000, 0, -1243), 0), 100000000, 0, -1242), 0, (("src/int_intf.ml", 147, 4311, 4321), ("src/int_intf.ml", 147, 4311, 4343), 0), 0, Tag1 ("Base__Int_intf", 1)), 0); (("round_towards_zero", 4151), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1241), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1240), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1239), 0), 100000000, 0, -1238), 0), 100000000, 0, -1237), 0, (("src/int_intf.ml", 147, 4311, 4321), ("src/int_intf.ml", 147, 4311, 4343), 0), 0, Tag1 ("Base__Int_intf", 2)), 0); (("round_down", 4152), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1236), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1235), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1234), 0), 100000000, 0, -1233), 0), 100000000, 0, -1232), 0, (("src/int_intf.ml", 147, 4311, 4321), ("src/int_intf.ml", 147, 4311, 4343), 0), 0, Tag1 ("Base__Int_intf", 3)), 0); (("round_up", 4153), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1231), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1230), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1229), 0), 100000000, 0, -1228), 0), 100000000, 0, -1227), 0, (("src/int_intf.ml", 147, 4311, 4321), ("src/int_intf.ml", 147, 4311, 4343), 0), 0, Tag1 ("Base__Int_intf", 4)), 0); (("round_nearest", 4154), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1226), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1225), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1224), 0), 100000000, 0, -1223), 0), 100000000, 0, -1222), 0, (("src/int_intf.ml", 147, 4311, 4321), ("src/int_intf.ml", 147, 4311, 4343), 0), 0, Tag1 ("Base__Int_intf", 5)), 0); (("abs", 4155), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1221), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1220), 0), 100000000, 0, -1219), 0, (("src/int_intf.ml", 151, 4450, 4452), ("src/int_intf.ml", 151, 4450, 4468), 0), 0, Tag1 ("Base__Int_intf", 50)), 0); (("succ", 4156), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1218), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1217), 0), 100000000, 0, -1216), 0, (("src/int_intf.ml", 155, 4520, 4522), ("src/int_intf.ml", 155, 4520, 4539), 0), 0, Tag1 ("Base__Int_intf", 51)), 0); (("pred", 4157), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1215), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1214), 0), 100000000, 0, -1213), 0, (("src/int_intf.ml", 156, 4540, 4542), ("src/int_intf.ml", 156, 4540, 4559), 0), 0, Tag1 ("Base__Int_intf", 52)), 0); (("pow", 4158), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1212), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1211), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1210), 0), 100000000, 0, -1209), 0), 100000000, 0, -1208), 0, (("src/int_intf.ml", 162, 4770, 4772), ("src/int_intf.ml", 162, 4770, 4793), 0), 0, Tag1 ("Base__Int_intf", 53)), 0); (("bit_and", 4159), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1207), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1206), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1205), 0), 100000000, 0, -1204), 0), 100000000, 0, -1203), 0, (("src/int_intf.ml", 168, 4947, 4949), ("src/int_intf.ml", 168, 4947, 4974), 0), 0, Tag1 ("Base__Int_intf", 54)), 0); (("bit_or", 4160), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1202), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1201), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1200), 0), 100000000, 0, -1199), 0), 100000000, 0, -1198), 0, (("src/int_intf.ml", 170, 4976, 4978), ("src/int_intf.ml", 170, 4976, 5002), 0), 0, Tag1 ("Base__Int_intf", 55)), 0); (("bit_xor", 4161), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1197), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1196), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1195), 0), 100000000, 0, -1194), 0), 100000000, 0, -1193), 0, (("src/int_intf.ml", 171, 5003, 5005), ("src/int_intf.ml", 171, 5003, 5030), 0), 0, Tag1 ("Base__Int_intf", 56)), 0); (("bit_not", 4162), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1192), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1191), 0), 100000000, 0, -1190), 0, (("src/int_intf.ml", 172, 5031, 5033), ("src/int_intf.ml", 172, 5031, 5053), 0), 0, Tag1 ("Base__Int_intf", 57)), 0); (("popcount", 4163), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1189), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1188), 0), 100000000, 0, -1187), 0, (("src/int_intf.ml", 175, 5136, 5138), ("src/int_intf.ml", 175, 5136, 5161), 0), 0, Tag1 ("Base__Int_intf", 58)), 0); (("shift_left", 4164), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1186), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1185), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1184), 0), 100000000, 0, -1183), 0), 100000000, 0, -1182), 0, (("src/int_intf.ml", 182, 5329, 5331), ("src/int_intf.ml", 182, 5329, 5361), 0), 0, Tag1 ("Base__Int_intf", 59)), 0); (("shift_right", 4165), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1181), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1180), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1179), 0), 100000000, 0, -1178), 0), 100000000, 0, -1177), 0, (("src/int_intf.ml", 185, 5420, 5422), ("src/int_intf.ml", 185, 5420, 5453), 0), 0, Tag1 ("Base__Int_intf", 60)), 0); (("decr", 4166), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import"), "ref"), [(Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1176)], (0)), 100000000, 0, -1175), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1174), 0), 100000000, 0, -1173), 0, (("src/int_intf.ml", 189, 5527, 5529), ("src/int_intf.ml", 189, 5527, 5553), 0), 0, Tag1 ("Base__Int_intf", 61)), 0); (("incr", 4167), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import"), "ref"), [(Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1172)], (0)), 100000000, 0, -1171), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1170), 0), 100000000, 0, -1169), 0, (("src/int_intf.ml", 190, 5554, 5556), ("src/int_intf.ml", 190, 5554, 5580), 0), 0, Tag1 ("Base__Int_intf", 62)), 0); (("of_int32_exn", 4168), ((Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -1168), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1167), 0), 100000000, 0, -1166), 0, (("src/int_intf.ml", 194, 5642, 5644), ("src/int_intf.ml", 194, 5642, 5673), 0), 0, Tag1 ("Base__Int_intf", 63)), 0); (("to_int32_exn", 4169), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1165), (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -1164), 0), 100000000, 0, -1163), 0, (("src/int_intf.ml", 195, 5674, 5676), ("src/int_intf.ml", 195, 5674, 5705), 0), 0, Tag1 ("Base__Int_intf", 64)), 0); (("of_int64_exn", 4170), ((Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -1162), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1161), 0), 100000000, 0, -1160), 0, (("src/int_intf.ml", 196, 5706, 5708), ("src/int_intf.ml", 196, 5706, 5737), 0), 0, Tag1 ("Base__Int_intf", 65)), 0); (("to_int64", 4171), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1159), (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -1158), 0), 100000000, 0, -1157), 0, (("src/int_intf.ml", 197, 5738, 5740), ("src/int_intf.ml", 197, 5738, 5765), 0), 0, Tag1 ("Base__Int_intf", 66)), 0); (("of_nativeint_exn", 4172), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -1156), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1155), 0), 100000000, 0, -1154), 0, (("src/int_intf.ml", 198, 5766, 5768), ("src/int_intf.ml", 198, 5766, 5805), 0), 0, Tag1 ("Base__Int_intf", 67)), 0); (("to_nativeint_exn", 4173), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1153), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -1152), 0), 100000000, 0, -1151), 0, (("src/int_intf.ml", 199, 5806, 5808), ("src/int_intf.ml", 199, 5806, 5845), 0), 0, Tag1 ("Base__Int_intf", 68)), 0); (("of_float_unchecked", 4174), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1150), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1149), 0), 100000000, 0, -1148), 0, (("src/int_intf.ml", 205, 6078, 6080), ("src/int_intf.ml", 205, 6078, 6115), 0), 0, Tag1 ("Base__Int_intf", 69)), 0); (("num_bits", 4175), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1147), 0, (("src/int_intf.ml", 256, 7408, 7410), ("src/int_intf.ml", 256, 7408, 7428), 0), 0, Tag1 ("Base__Int_intf", 97)), 0); (("max_value", 4176), ((Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1146), 0, (("src/int_intf.ml", 259, 7474, 7476), ("src/int_intf.ml", 259, 7474, 7493), 0), 0, Tag1 ("Base__Int_intf", 98)), 0); (("min_value", 4177), ((Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1145), 0, (("src/int_intf.ml", 262, 7540, 7542), ("src/int_intf.ml", 262, 7540, 7559), 0), 0, Tag1 ("Base__Int_intf", 99)), 0); (("lsr", 4178), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1144), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1143), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1142), 0), 100000000, 0, -1141), 0), 100000000, 0, -1140), 0, (("src/int_intf.ml", 265, 7601, 7603), ("src/int_intf.ml", 265, 7601, 7630), 0), 0, Tag1 ("Base__Int_intf", 100)), 0); (("shift_right_logical", 4179), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1139), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1138), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1137), 0), 100000000, 0, -1136), 0), 100000000, 0, -1135), 0, (("src/int_intf.ml", 269, 7732, 7734), ("src/int_intf.ml", 269, 7732, 7773), 0), 0, Tag1 ("Base__Int_intf", 101)), 0); (("ceil_pow2", 4180), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1134), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1133), 0), 100000000, 0, -1132), 0, (("src/int_intf.ml", 273, 7955, 7957), ("src/int_intf.ml", 273, 7955, 7979), 0), 0, Tag1 ("Base__Int_intf", 102)), 0); (("floor_pow2", 4181), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1131), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1130), 0), 100000000, 0, -1129), 0, (("src/int_intf.ml", 277, 8159, 8161), ("src/int_intf.ml", 277, 8159, 8184), 0), 0, Tag1 ("Base__Int_intf", 103)), 0); (("ceil_log2", 4182), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1128), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1127), 0), 100000000, 0, -1126), 0, (("src/int_intf.ml", 280, 8275, 8277), ("src/int_intf.ml", 280, 8275, 8301), 0), 0, Tag1 ("Base__Int_intf", 104)), 0); (("floor_log2", 4183), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1125), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1124), 0), 100000000, 0, -1123), 0, (("src/int_intf.ml", 283, 8391, 8393), ("src/int_intf.ml", 283, 8391, 8418), 0), 0, Tag1 ("Base__Int_intf", 105)), 0); (("is_pow2", 4184), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1122), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1121), 0), 100000000, 0, -1120), 0, (("src/int_intf.ml", 286, 8510, 8512), ("src/int_intf.ml", 286, 8510, 8535), 0), 0, Tag1 ("Base__Int_intf", 106)), 0); (("clz", 4185), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1119), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1118), 0), 100000000, 0, -1117), 0, (("src/int_intf.ml", 292, 8733, 8735), ("src/int_intf.ml", 292, 8733, 8753), 0), 0, Tag1 ("Base__Int_intf", 107)), 0); (("ctz", 4186), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1116), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1115), 0), 100000000, 0, -1114), 0, (("src/int_intf.ml", 298, 8952, 8954), ("src/int_intf.ml", 298, 8952, 8972), 0), 0, Tag1 ("Base__Int_intf", 108)), 0); Tag3 (("O", 4187), 0, (Tag1 ([(("+", 4198), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1623), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1622), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1621), 0), 100000000, 0, -1620), 0), 100000000, 0, -1619), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Int_intf", 72)), 0); (("-", 4199), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1618), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1617), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1616), 0), 100000000, 0, -1615), 0), 100000000, 0, -1614), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Int_intf", 73)), 0); (("*", 4200), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1613), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1612), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1611), 0), 100000000, 0, -1610), 0), 100000000, 0, -1609), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Int_intf", 74)), 0); (("/", 4201), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1608), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1607), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1606), 0), 100000000, 0, -1605), 0), 100000000, 0, -1604), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Int_intf", 75)), 0); (("~-", 4202), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1603), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1602), 0), 100000000, 0, -1601), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Int_intf", 76)), 0); (("**", 4203), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1600), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1599), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1598), 0), 100000000, 0, -1597), 0), 100000000, 0, -1596), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Int_intf", 77)), 0); ((">=", 4204), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1595), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1594), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1593), 0), 100000000, 0, -1592), 0), 100000000, 0, -1591), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Comparisons", 1)), 0); (("<=", 4205), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1590), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1589), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1588), 0), 100000000, 0, -1587), 0), 100000000, 0, -1586), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Comparisons", 2)), 0); (("=", 4206), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1585), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1584), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1583), 0), 100000000, 0, -1582), 0), 100000000, 0, -1581), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Comparisons", 3)), 0); ((">", 4207), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1580), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1579), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1578), 0), 100000000, 0, -1577), 0), 100000000, 0, -1576), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Comparisons", 4)), 0); (("<", 4208), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1575), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1574), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1573), 0), 100000000, 0, -1572), 0), 100000000, 0, -1571), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Comparisons", 5)), 0); (("<>", 4209), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1570), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1569), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1568), 0), 100000000, 0, -1567), 0), 100000000, 0, -1566), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Comparisons", 6)), 0); (("abs", 4210), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1565), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1564), 0), 100000000, 0, -1563), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Int_intf", 79)), 0); (("neg", 4211), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1562), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1561), 0), 100000000, 0, -1560), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Int_intf", 80)), 0); (("zero", 4212), ((Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1559), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Int_intf", 81)), 0); (("%", 4213), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1558), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1557), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1556), 0), 100000000, 0, -1555), 0), 100000000, 0, -1554), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Int_intf", 82)), 0); (("/%", 4214), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1553), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1552), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1551), 0), 100000000, 0, -1550), 0), 100000000, 0, -1549), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Int_intf", 83)), 0); (("//", 4215), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1548), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1547), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1546), 0), 100000000, 0, -1545), 0), 100000000, 0, -1544), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Int_intf", 84)), 0); (("land", 4216), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1543), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1542), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1541), 0), 100000000, 0, -1540), 0), 100000000, 0, -1539), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Int_intf", 85)), 0); (("lor", 4217), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1538), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1537), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1536), 0), 100000000, 0, -1535), 0), 100000000, 0, -1534), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Int_intf", 86)), 0); (("lxor", 4218), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1533), (Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1532), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1531), 0), 100000000, 0, -1530), 0), 100000000, 0, -1529), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Int_intf", 87)), 0); (("lnot", 4219), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1528), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1527), 0), 100000000, 0, -1526), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Int_intf", 88)), 0); (("lsl", 4220), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1525), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1524), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1523), 0), 100000000, 0, -1522), 0), 100000000, 0, -1521), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Int_intf", 89)), 0); (("asr", 4221), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1520), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1519), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1518), 0), 100000000, 0, -1517), 0), 100000000, 0, -1516), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Int_intf", 90)), 0); (("lsr", 4222), ((Tag1 (0, (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1515), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1514), (Tag3 ((("t", 4090)), 0, (0)), 100000000, 0, -1513), 0), 100000000, 0, -1512), 0), 100000000, 0, -1511), 0, (("src/int_intf.ml", 301, 9062, 9075), ("src/int_intf.ml", 301, 9062, 9101), 0), 0, Tag1 ("Base__Int_intf", 92)), 0)]), 0, (("src/int_intf.ml", 301, 9062, 9064), ("src/int_intf.ml", 301, 9062, 9101), 0), Tag1 ("Base__Int_intf", 110)), 0, 0)])), 0, (("src/int_intf.ml", 251, 7236, 7236), ("src/int_intf.ml", 302, 9102, 9105), 0), Tag1 ("Base__Int_intf", 111)), 0); Tag4 (("Int_without_module_types", 3804), ((Tag1 ([Tag1 (("t", 4223), (0, 0, 0, 1, ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2037)), 0, 0, 0, 0, (("src/int_intf.ml", 313, 9499, 9501), ("src/int_intf.ml", 313, 9499, 9543), 0), [(("deriving_inline", (("src/int_intf.ml", 313, 9499, 9517), ("src/int_intf.ml", 313, 9499, 9532), 0)), ([([(((("globalize"), (("src/int_intf.ml", 313, 9499, 9533), ("src/int_intf.ml", 313, 9499, 9542), 0))), (("src/int_intf.ml", 313, 9499, 9533), ("src/int_intf.ml", 313, 9499, 9542), 0), 0, 0)], (("src/int_intf.ml", 313, 9499, 9533), ("src/int_intf.ml", 313, 9499, 9542), 0))]), (("src/int_intf.ml", 313, 9499, 9514), ("src/int_intf.ml", 313, 9499, 9543), 0))], 1, 0, Tag1 ("Base__Int_intf", 112)), 1, 0); (("globalize", 4224), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2036), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2035), 0), 100000000, 0, -2034), 0, (("src/int_intf.ml", 315, 9545, 9547), ("src/int_intf.ml", 315, 9545, 9585), 0), 0, Tag1 ("Base__Int_intf", 113)), 0); (("t_sexp_grammar", 4225), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [(Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2033)], (0)), 100000000, 0, -2032), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 20)), 0); (("of_float", 4226), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -2031), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2030), 0), 100000000, 0, -2029), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Floatable", 1)), 0); (("to_float", 4227), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2028), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -2027), 0), 100000000, 0, -2026), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Floatable", 2)), 0); (("of_int_exn", 4228), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2025), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2024), 0), 100000000, 0, -2023), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Intable", 1)), 0); (("to_int_exn", 4229), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2022), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2021), 0), 100000000, 0, -2020), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Intable", 2)), 0); (("hash_fold_t", 4230), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "hash_fold"), [(Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2019)], (0)), 100000000, 0, -2018), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Ppx_hash_lib", 4)), 0); (("hash", 4231), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2017), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "Std"), "Hash"), "hash_value"), 0, (0)), 100000000, 0, -2016), 0), 100000000, 0, -2015), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Ppx_hash_lib", 5)), 0); (("t_of_sexp", 4232), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2014), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2013), 0), 100000000, 0, -2012), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Sexplib0__Sexpable", 1)), 0); (("sexp_of_t", 4233), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2011), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2010), 0), 100000000, 0, -2009), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Sexplib0__Sexpable", 2)), 0); (("of_string", 4234), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2008), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2007), 0), 100000000, 0, -2006), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Stringable", 1)), 0); (("to_string", 4235), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2005), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2004), 0), 100000000, 0, -2003), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Stringable", 2)), 0); (("equal", 4236), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2002), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2001), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2000), 0), 100000000, 0, -1999), 0), 100000000, 0, -1998), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparisons", 8)), 0); (("compare", 4237), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1997), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1996), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1995), 0), 100000000, 0, -1994), 0), 100000000, 0, -1993), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparisons", 9)), 0); (("min", 4238), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1992), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1991), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1990), 0), 100000000, 0, -1989), 0), 100000000, 0, -1988), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparisons", 10)), 0); (("max", 4239), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1987), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1986), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1985), 0), 100000000, 0, -1984), 0), 100000000, 0, -1983), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparisons", 11)), 0); (("ascending", 4240), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1982), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1981), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1980), 0), 100000000, 0, -1979), 0), 100000000, 0, -1978), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparable_intf", 19)), 0); (("descending", 4241), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1977), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1976), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1975), 0), 100000000, 0, -1974), 0), 100000000, 0, -1973), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparable_intf", 20)), 0); (("between", 4242), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1972), (Tag1 (("low"), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1971), (Tag1 (("high"), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1970), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1969), 0), 100000000, 0, -1968), 0), 100000000, 0, -1967), 0), 100000000, 0, -1966), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparable_intf", 21)), 0); (("clamp_exn", 4243), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1965), (Tag1 (("min"), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1964), (Tag1 (("max"), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1963), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1962), 0), 100000000, 0, -1961), 0), 100000000, 0, -1960), 0), 100000000, 0, -1959), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparable_intf", 22)), 0); (("clamp", 4244), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1958), (Tag1 (("min"), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1957), (Tag1 (("max"), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1956), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Or_error"), "t"), [(Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1955)], (0)), 100000000, 0, -1954), 0), 100000000, 0, -1953), 0), 100000000, 0, -1952), 0), 100000000, 0, -1951), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparable_intf", 23)), 0); Tag1 (("comparator_witness", 4245), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, 0, 0, Tag1 ("Base__Comparator", 5)), 1, 0); (("comparator", 4246), ((Tag3 (Tag1 ((Tag2 ("Base__Comparator")), "comparator"), [(Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1949); (Tag3 ((("comparator_witness", 4245)), 0, (0)), 100000000, 0, -1950)], (0)), 100000000, 0, -1948), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparator", 6)), 0); (("pp", 4247), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Formatter"), "t"), 0, (0)), 100000000, 0, -1947), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1946), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1945), 0), 100000000, 0, -1944), 0), 100000000, 0, -1943), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Pretty_printer", 2)), 0); (("hashable", 4248), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Hashable"), "t"), [(Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1942)], (0)), 100000000, 0, -1941), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Identifiable_intf", 15)), 0); (("is_positive", 4249), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1940), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1939), 0), 100000000, 0, -1938), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparable_intf", 13)), 0); (("is_non_negative", 4250), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1937), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1936), 0), 100000000, 0, -1935), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparable_intf", 14)), 0); (("is_negative", 4251), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1934), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1933), 0), 100000000, 0, -1932), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparable_intf", 15)), 0); (("is_non_positive", 4252), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1931), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1930), 0), 100000000, 0, -1929), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparable_intf", 16)), 0); (("sign", 4253), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1928), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__Comparable_intf")), "Sign"), "t"), 0, (0)), 100000000, 0, -1927), 0), 100000000, 0, -1926), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparable_intf", 17)), 0); (("invariant", 4254), ((Tag3 (Tag1 ((Tag2 ("Base__Invariant_intf")), "inv"), [(Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1925)], (0)), 100000000, 0, -1924), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Invariant_intf", 3)), 0); Tag3 (("Hex", 4255), 0, (Tag1 ([Tag1 (("t", 4336), (0, 0, 0, 1, ((Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2065)), 0, 0, 0, 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), [(("deriving_inline", (("src/int_intf.ml", 44, 1730, 1755), ("src/int_intf.ml", 44, 1730, 1770), 0)), ([([(Tag8 ([(((("sexp"), (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1775), 0))), (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1775), 0), 0, 0); (((("sexp_grammar"), (("src/int_intf.ml", 44, 1730, 1777), ("src/int_intf.ml", 44, 1730, 1789), 0))), (("src/int_intf.ml", 44, 1730, 1777), ("src/int_intf.ml", 44, 1730, 1789), 0), 0, 0); (((("compare"), (("src/int_intf.ml", 44, 1730, 1791), ("src/int_intf.ml", 44, 1730, 1798), 0))), (("src/int_intf.ml", 44, 1730, 1791), ("src/int_intf.ml", 44, 1730, 1798), 0), 0, 0); (((("hash"), (("src/int_intf.ml", 44, 1730, 1800), ("src/int_intf.ml", 44, 1730, 1804), 0))), (("src/int_intf.ml", 44, 1730, 1800), ("src/int_intf.ml", 44, 1730, 1804), 0), 0, 0)]), (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1804), 0), 0, 0)], (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1804), 0))]), (("src/int_intf.ml", 44, 1730, 1752), ("src/int_intf.ml", 44, 1730, 1805), 0))], 0, 0, Tag1 ("Base__Int_intf", 8)), 0, 0); (("t_of_sexp", 4337), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2064), (Tag3 ((("t", 4336)), 0, (0)), 100000000, 0, -2063), 0), 100000000, 0, -2062), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Sexplib0__Sexpable", 1)), 0); (("sexp_of_t", 4338), ((Tag1 (0, (Tag3 ((("t", 4336)), 0, (0)), 100000000, 0, -2061), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2060), 0), 100000000, 0, -2059), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Sexplib0__Sexpable", 2)), 0); (("t_sexp_grammar", 4339), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [(Tag3 ((("t", 4336)), 0, (0)), 100000000, 0, -2058)], (0)), 100000000, 0, -2057), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 11)), 0); (("compare", 4340), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((("t", 4336)), 0, (0)), 100000000, 0, -2056)], (0)), 100000000, 0, -2055), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Ppx_compare_lib", 5)), 0); (("hash_fold_t", 4341), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "hash_fold"), [(Tag3 ((("t", 4336)), 0, (0)), 100000000, 0, -2054)], (0)), 100000000, 0, -2053), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Ppx_hash_lib", 4)), 0); (("hash", 4342), ((Tag1 (0, (Tag3 ((("t", 4336)), 0, (0)), 100000000, 0, -2052), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "Std"), "Hash"), "hash_value"), 0, (0)), 100000000, 0, -2051), 0), 100000000, 0, -2050), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Ppx_hash_lib", 5)), 0); (("of_string", 4343), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2049), (Tag3 ((("t", 4336)), 0, (0)), 100000000, 0, -2048), 0), 100000000, 0, -2047), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Stringable", 1)), 0); (("to_string", 4344), ((Tag1 (0, (Tag3 ((("t", 4336)), 0, (0)), 100000000, 0, -2046), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2045), 0), 100000000, 0, -2044), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Stringable", 2)), 0); (("to_string_hum", 4345), ((Tag1 (Tag1 ("delimiter"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -2043)], (0)), 100000000, 0, -2042), (Tag1 (0, (Tag3 ((("t", 4336)), 0, (0)), 100000000, 0, -2041), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2040), 0), 100000000, 0, -2039), 0), 100000000, 0, -2038), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 15)), 0)]), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), Tag1 ("Base__Int_intf", 16)), 0, 0); (("of_string_opt", 4256), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1923), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1922)], (0)), 100000000, 0, -1921), 0), 100000000, 0, -1920), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 27)), 0); (("to_string_hum", 4257), ((Tag1 (Tag1 ("delimiter"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1919)], (0)), 100000000, 0, -1918), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1917), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1916), 0), 100000000, 0, -1915), 0), 100000000, 0, -1914), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 28)), 0); (("one", 4258), ((Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1913), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 30)), 0); (("minus_one", 4259), ((Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1912), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 31)), 0); (("rem", 4260), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1911), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1910), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1909), 0), 100000000, 0, -1908), 0), 100000000, 0, -1907), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 41)), 0); (("round", 4261), ((Tag1 (Tag1 ("dir"), (Tag3 ((Tag3 ("option", 10)), [(Tag8 (([("Down", (0)); ("Nearest", (0)); ("Up", (0)); ("Zero", (0))], (0, 100000000, 0, -1906), 1, 0, 0)), 100000000, 0, -1905)], (0)), 100000000, 0, -1904), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1903), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1902), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1901), 0), 100000000, 0, -1900), 0), 100000000, 0, -1899), 0), 100000000, 0, -1898), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 1)), 0); (("round_towards_zero", 4262), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1897), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1896), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1895), 0), 100000000, 0, -1894), 0), 100000000, 0, -1893), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 2)), 0); (("round_down", 4263), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1892), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1891), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1890), 0), 100000000, 0, -1889), 0), 100000000, 0, -1888), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 3)), 0); (("round_up", 4264), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1887), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1886), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1885), 0), 100000000, 0, -1884), 0), 100000000, 0, -1883), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 4)), 0); (("round_nearest", 4265), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1882), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1881), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1880), 0), 100000000, 0, -1879), 0), 100000000, 0, -1878), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 5)), 0); (("succ", 4266), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1877), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1876), 0), 100000000, 0, -1875), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 51)), 0); (("pred", 4267), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1874), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1873), 0), 100000000, 0, -1872), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 52)), 0); (("pow", 4268), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1871), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1870), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1869), 0), 100000000, 0, -1868), 0), 100000000, 0, -1867), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 53)), 0); (("bit_and", 4269), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1866), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1865), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1864), 0), 100000000, 0, -1863), 0), 100000000, 0, -1862), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 54)), 0); (("bit_or", 4270), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1861), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1860), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1859), 0), 100000000, 0, -1858), 0), 100000000, 0, -1857), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 55)), 0); (("bit_xor", 4271), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1856), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1855), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1854), 0), 100000000, 0, -1853), 0), 100000000, 0, -1852), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 56)), 0); (("bit_not", 4272), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1851), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1850), 0), 100000000, 0, -1849), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 57)), 0); (("popcount", 4273), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1848), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1847), 0), 100000000, 0, -1846), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 58)), 0); (("shift_left", 4274), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1845), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1844), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1843), 0), 100000000, 0, -1842), 0), 100000000, 0, -1841), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 59)), 0); (("shift_right", 4275), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1840), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1839), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1838), 0), 100000000, 0, -1837), 0), 100000000, 0, -1836), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 60)), 0); (("decr", 4276), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import"), "ref"), [(Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1835)], (0)), 100000000, 0, -1834), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1833), 0), 100000000, 0, -1832), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 61)), 0); (("incr", 4277), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import"), "ref"), [(Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1831)], (0)), 100000000, 0, -1830), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1829), 0), 100000000, 0, -1828), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 62)), 0); (("of_int32_exn", 4278), ((Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -1827), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1826), 0), 100000000, 0, -1825), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 63)), 0); (("to_int32_exn", 4279), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1824), (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -1823), 0), 100000000, 0, -1822), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 64)), 0); (("of_int64_exn", 4280), ((Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -1821), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1820), 0), 100000000, 0, -1819), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 65)), 0); (("to_int64", 4281), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1818), (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -1817), 0), 100000000, 0, -1816), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 66)), 0); (("of_nativeint_exn", 4282), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -1815), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1814), 0), 100000000, 0, -1813), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 67)), 0); (("to_nativeint_exn", 4283), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1812), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -1811), 0), 100000000, 0, -1810), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 68)), 0); (("of_float_unchecked", 4284), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1809), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1808), 0), 100000000, 0, -1807), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 69)), 0); (("num_bits", 4285), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1806), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 97)), 0); (("max_value", 4286), ((Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1805), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 98)), 0); (("min_value", 4287), ((Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1804), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 99)), 0); (("shift_right_logical", 4288), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1803), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1802), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1801), 0), 100000000, 0, -1800), 0), 100000000, 0, -1799), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 101)), 0); (("ceil_pow2", 4289), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1798), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1797), 0), 100000000, 0, -1796), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 102)), 0); (("floor_pow2", 4290), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1795), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1794), 0), 100000000, 0, -1793), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 103)), 0); (("ceil_log2", 4291), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1792), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1791), 0), 100000000, 0, -1790), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 104)), 0); (("floor_log2", 4292), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1789), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1788), 0), 100000000, 0, -1787), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 105)), 0); (("is_pow2", 4293), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1786), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1785), 0), 100000000, 0, -1784), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 106)), 0); (("clz", 4294), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1783), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1782), 0), 100000000, 0, -1781), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 107)), 0); (("ctz", 4295), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1780), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1779), 0), 100000000, 0, -1778), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 108)), 0); Tag3 (("O", 4296), 0, (Tag1 ([(("+", 4346), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2178), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2177), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2176), 0), 100000000, 0, -2175), 0), 100000000, 0, -2174), (("%addint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 324, 9805, 9809), ("src/int_intf.ml", 324, 9805, 9877), 0), 0, Tag1 ("Base__Int_intf", 115)), 0); (("-", 4347), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2173), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2172), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2171), 0), 100000000, 0, -2170), 0), 100000000, 0, -2169), (("%subint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 325, 9878, 9882), ("src/int_intf.ml", 325, 9878, 9950), 0), 0, Tag1 ("Base__Int_intf", 116)), 0); (("*", 4348), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2168), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2167), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2166), 0), 100000000, 0, -2165), 0), 100000000, 0, -2164), (("%mulint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 326, 9951, 9955), ("src/int_intf.ml", 326, 9951, 10023), 0), 0, Tag1 ("Base__Int_intf", 117)), 0); (("/", 4349), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2163), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2162), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2161), 0), 100000000, 0, -2160), 0), 100000000, 0, -2159), (("%divint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 327, 10024, 10028), ("src/int_intf.ml", 327, 10024, 10096), 0), 0, Tag1 ("Base__Int_intf", 118)), 0); (("~-", 4350), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2158), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2157), 0), 100000000, 0, -2156), (("%negint", 1, 1, "", [0], 0)), (("src/int_intf.ml", 328, 10097, 10101), ("src/int_intf.ml", 328, 10097, 10151), 0), 0, Tag1 ("Base__Int_intf", 119)), 0); (("**", 4351), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2155), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2154), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2153), 0), 100000000, 0, -2152), 0), 100000000, 0, -2151), 0, (("src/int_intf.ml", 329, 10152, 10156), ("src/int_intf.ml", 329, 10152, 10180), 0), 0, Tag1 ("Base__Int_intf", 120)), 0); (("=", 4352), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2150), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2149), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2148), 0), 100000000, 0, -2147), 0), 100000000, 0, -2146), (("%equal", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 330, 10181, 10185), ("src/int_intf.ml", 330, 10181, 10255), 0), 0, Tag1 ("Base__Int_intf", 121)), 0); (("<>", 4353), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2145), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2144), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2143), 0), 100000000, 0, -2142), 0), 100000000, 0, -2141), (("%notequal", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 331, 10256, 10260), ("src/int_intf.ml", 331, 10256, 10334), 0), 0, Tag1 ("Base__Int_intf", 122)), 0); (("<", 4354), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2140), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2139), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2138), 0), 100000000, 0, -2137), 0), 100000000, 0, -2136), (("%lessthan", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 332, 10335, 10339), ("src/int_intf.ml", 332, 10335, 10412), 0), 0, Tag1 ("Base__Int_intf", 123)), 0); ((">", 4355), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2135), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2134), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2133), 0), 100000000, 0, -2132), 0), 100000000, 0, -2131), (("%greaterthan", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 333, 10413, 10417), ("src/int_intf.ml", 333, 10413, 10493), 0), 0, Tag1 ("Base__Int_intf", 124)), 0); (("<=", 4356), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2130), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2129), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2128), 0), 100000000, 0, -2127), 0), 100000000, 0, -2126), (("%lessequal", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 334, 10494, 10498), ("src/int_intf.ml", 334, 10494, 10573), 0), 0, Tag1 ("Base__Int_intf", 125)), 0); ((">=", 4357), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2125), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2124), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2123), 0), 100000000, 0, -2122), 0), 100000000, 0, -2121), (("%greaterequal", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 335, 10574, 10578), ("src/int_intf.ml", 335, 10574, 10656), 0), 0, Tag1 ("Base__Int_intf", 126)), 0); (("land", 4358), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2120), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2119), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2118), 0), 100000000, 0, -2117), 0), 100000000, 0, -2116), (("%andint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 336, 10657, 10661), ("src/int_intf.ml", 336, 10657, 10732), 0), 0, Tag1 ("Base__Int_intf", 127)), 0); (("lor", 4359), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2115), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2114), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2113), 0), 100000000, 0, -2112), 0), 100000000, 0, -2111), (("%orint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 337, 10733, 10737), ("src/int_intf.ml", 337, 10733, 10806), 0), 0, Tag1 ("Base__Int_intf", 128)), 0); (("lxor", 4360), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2110), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2109), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2108), 0), 100000000, 0, -2107), 0), 100000000, 0, -2106), (("%xorint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 338, 10807, 10811), ("src/int_intf.ml", 338, 10807, 10882), 0), 0, Tag1 ("Base__Int_intf", 129)), 0); (("lnot", 4361), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2105), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2104), 0), 100000000, 0, -2103), 0, (("src/int_intf.ml", 339, 10883, 10887), ("src/int_intf.ml", 339, 10883, 10904), 0), 0, Tag1 ("Base__Int_intf", 130)), 0); (("abs", 4362), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2102), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2101), 0), 100000000, 0, -2100), 0, (("src/int_intf.ml", 340, 10905, 10909), ("src/int_intf.ml", 340, 10905, 10925), 0), 0, Tag1 ("Base__Int_intf", 131)), 0); (("neg", 4363), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2099), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2098), 0), 100000000, 0, -2097), (("%negint", 1, 1, "", [0], 0)), (("src/int_intf.ml", 341, 10926, 10930), ("src/int_intf.ml", 341, 10926, 10977), 0), 0, Tag1 ("Base__Int_intf", 132)), 0); (("zero", 4364), ((Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2096), 0, (("src/int_intf.ml", 342, 10978, 10982), ("src/int_intf.ml", 342, 10978, 10994), 0), 0, Tag1 ("Base__Int_intf", 133)), 0); (("%", 4365), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2095), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2094), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2093), 0), 100000000, 0, -2092), 0), 100000000, 0, -2091), 0, (("src/int_intf.ml", 343, 10995, 10999), ("src/int_intf.ml", 343, 10995, 11022), 0), 0, Tag1 ("Base__Int_intf", 134)), 0); (("/%", 4366), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2090), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2089), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2088), 0), 100000000, 0, -2087), 0), 100000000, 0, -2086), 0, (("src/int_intf.ml", 344, 11023, 11027), ("src/int_intf.ml", 344, 11023, 11051), 0), 0, Tag1 ("Base__Int_intf", 135)), 0); (("//", 4367), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2085), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2084), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -2083), 0), 100000000, 0, -2082), 0), 100000000, 0, -2081), 0, (("src/int_intf.ml", 345, 11052, 11056), ("src/int_intf.ml", 345, 11052, 11084), 0), 0, Tag1 ("Base__Int_intf", 136)), 0); (("lsl", 4368), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2080), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2079), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2078), 0), 100000000, 0, -2077), 0), 100000000, 0, -2076), (("%lslint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 346, 11085, 11089), ("src/int_intf.ml", 346, 11085, 11161), 0), 0, Tag1 ("Base__Int_intf", 137)), 0); (("asr", 4369), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2075), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2074), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2073), 0), 100000000, 0, -2072), 0), 100000000, 0, -2071), (("%asrint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 347, 11162, 11166), ("src/int_intf.ml", 347, 11162, 11238), 0), 0, Tag1 ("Base__Int_intf", 138)), 0); (("lsr", 4370), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2070), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2069), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -2068), 0), 100000000, 0, -2067), 0), 100000000, 0, -2066), (("%lsrint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 348, 11239, 11243), ("src/int_intf.ml", 348, 11239, 11315), 0), 0, Tag1 ("Base__Int_intf", 139)), 0)]), 0, (("src/int_intf.ml", 321, 9644, 9646), ("src/int_intf.ml", 349, 11316, 11321), 0), Tag1 ("Base__Int_intf", 140)), 0, 0); (("+", 4297), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1777), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1776), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1775), 0), 100000000, 0, -1774), 0), 100000000, 0, -1773), (("%addint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 324, 9805, 9809), ("src/int_intf.ml", 324, 9805, 9877), 0), 0, Tag1 ("Base__Int_intf", 115)), 0); (("-", 4298), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1772), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1771), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1770), 0), 100000000, 0, -1769), 0), 100000000, 0, -1768), (("%subint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 325, 9878, 9882), ("src/int_intf.ml", 325, 9878, 9950), 0), 0, Tag1 ("Base__Int_intf", 116)), 0); (("*", 4299), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1767), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1766), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1765), 0), 100000000, 0, -1764), 0), 100000000, 0, -1763), (("%mulint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 326, 9951, 9955), ("src/int_intf.ml", 326, 9951, 10023), 0), 0, Tag1 ("Base__Int_intf", 117)), 0); (("/", 4300), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1762), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1761), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1760), 0), 100000000, 0, -1759), 0), 100000000, 0, -1758), (("%divint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 327, 10024, 10028), ("src/int_intf.ml", 327, 10024, 10096), 0), 0, Tag1 ("Base__Int_intf", 118)), 0); (("~-", 4301), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1757), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1756), 0), 100000000, 0, -1755), (("%negint", 1, 1, "", [0], 0)), (("src/int_intf.ml", 328, 10097, 10101), ("src/int_intf.ml", 328, 10097, 10151), 0), 0, Tag1 ("Base__Int_intf", 119)), 0); (("**", 4302), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1754), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1753), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1752), 0), 100000000, 0, -1751), 0), 100000000, 0, -1750), 0, (("src/int_intf.ml", 329, 10152, 10156), ("src/int_intf.ml", 329, 10152, 10180), 0), 0, Tag1 ("Base__Int_intf", 120)), 0); (("=", 4303), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1749), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1748), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1747), 0), 100000000, 0, -1746), 0), 100000000, 0, -1745), (("%equal", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 330, 10181, 10185), ("src/int_intf.ml", 330, 10181, 10255), 0), 0, Tag1 ("Base__Int_intf", 121)), 0); (("<>", 4304), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1744), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1743), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1742), 0), 100000000, 0, -1741), 0), 100000000, 0, -1740), (("%notequal", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 331, 10256, 10260), ("src/int_intf.ml", 331, 10256, 10334), 0), 0, Tag1 ("Base__Int_intf", 122)), 0); (("<", 4305), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1739), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1738), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1737), 0), 100000000, 0, -1736), 0), 100000000, 0, -1735), (("%lessthan", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 332, 10335, 10339), ("src/int_intf.ml", 332, 10335, 10412), 0), 0, Tag1 ("Base__Int_intf", 123)), 0); ((">", 4306), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1734), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1733), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1732), 0), 100000000, 0, -1731), 0), 100000000, 0, -1730), (("%greaterthan", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 333, 10413, 10417), ("src/int_intf.ml", 333, 10413, 10493), 0), 0, Tag1 ("Base__Int_intf", 124)), 0); (("<=", 4307), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1729), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1728), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1727), 0), 100000000, 0, -1726), 0), 100000000, 0, -1725), (("%lessequal", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 334, 10494, 10498), ("src/int_intf.ml", 334, 10494, 10573), 0), 0, Tag1 ("Base__Int_intf", 125)), 0); ((">=", 4308), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1724), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1723), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1722), 0), 100000000, 0, -1721), 0), 100000000, 0, -1720), (("%greaterequal", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 335, 10574, 10578), ("src/int_intf.ml", 335, 10574, 10656), 0), 0, Tag1 ("Base__Int_intf", 126)), 0); (("land", 4309), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1719), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1718), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1717), 0), 100000000, 0, -1716), 0), 100000000, 0, -1715), (("%andint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 336, 10657, 10661), ("src/int_intf.ml", 336, 10657, 10732), 0), 0, Tag1 ("Base__Int_intf", 127)), 0); (("lor", 4310), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1714), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1713), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1712), 0), 100000000, 0, -1711), 0), 100000000, 0, -1710), (("%orint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 337, 10733, 10737), ("src/int_intf.ml", 337, 10733, 10806), 0), 0, Tag1 ("Base__Int_intf", 128)), 0); (("lxor", 4311), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1709), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1708), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1707), 0), 100000000, 0, -1706), 0), 100000000, 0, -1705), (("%xorint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 338, 10807, 10811), ("src/int_intf.ml", 338, 10807, 10882), 0), 0, Tag1 ("Base__Int_intf", 129)), 0); (("lnot", 4312), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1704), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1703), 0), 100000000, 0, -1702), 0, (("src/int_intf.ml", 339, 10883, 10887), ("src/int_intf.ml", 339, 10883, 10904), 0), 0, Tag1 ("Base__Int_intf", 130)), 0); (("abs", 4313), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1701), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1700), 0), 100000000, 0, -1699), 0, (("src/int_intf.ml", 340, 10905, 10909), ("src/int_intf.ml", 340, 10905, 10925), 0), 0, Tag1 ("Base__Int_intf", 131)), 0); (("neg", 4314), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1698), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1697), 0), 100000000, 0, -1696), (("%negint", 1, 1, "", [0], 0)), (("src/int_intf.ml", 341, 10926, 10930), ("src/int_intf.ml", 341, 10926, 10977), 0), 0, Tag1 ("Base__Int_intf", 132)), 0); (("zero", 4315), ((Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1695), 0, (("src/int_intf.ml", 342, 10978, 10982), ("src/int_intf.ml", 342, 10978, 10994), 0), 0, Tag1 ("Base__Int_intf", 133)), 0); (("%", 4316), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1694), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1693), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1692), 0), 100000000, 0, -1691), 0), 100000000, 0, -1690), 0, (("src/int_intf.ml", 343, 10995, 10999), ("src/int_intf.ml", 343, 10995, 11022), 0), 0, Tag1 ("Base__Int_intf", 134)), 0); (("/%", 4317), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1689), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1688), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1687), 0), 100000000, 0, -1686), 0), 100000000, 0, -1685), 0, (("src/int_intf.ml", 344, 11023, 11027), ("src/int_intf.ml", 344, 11023, 11051), 0), 0, Tag1 ("Base__Int_intf", 135)), 0); (("//", 4318), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1684), (Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1683), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -1682), 0), 100000000, 0, -1681), 0), 100000000, 0, -1680), 0, (("src/int_intf.ml", 345, 11052, 11056), ("src/int_intf.ml", 345, 11052, 11084), 0), 0, Tag1 ("Base__Int_intf", 136)), 0); (("lsl", 4319), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1679), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1678), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1677), 0), 100000000, 0, -1676), 0), 100000000, 0, -1675), (("%lslint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 346, 11085, 11089), ("src/int_intf.ml", 346, 11085, 11161), 0), 0, Tag1 ("Base__Int_intf", 137)), 0); (("asr", 4320), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1674), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1673), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1672), 0), 100000000, 0, -1671), 0), 100000000, 0, -1670), (("%asrint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 347, 11162, 11166), ("src/int_intf.ml", 347, 11162, 11238), 0), 0, Tag1 ("Base__Int_intf", 138)), 0); (("lsr", 4321), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1669), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1668), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1667), 0), 100000000, 0, -1666), 0), 100000000, 0, -1665), (("%lsrint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 348, 11239, 11243), ("src/int_intf.ml", 348, 11239, 11315), 0), 0, Tag1 ("Base__Int_intf", 139)), 0); (("max_value_30_bits", 4322), ((Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1664), 0, (("src/int_intf.ml", 355, 11477, 11479), ("src/int_intf.ml", 355, 11477, 11504), 0), 0, Tag1 ("Base__Int_intf", 141)), 0); (("of_int", 4323), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1663), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1662), 0), 100000000, 0, -1661), 0, (("src/int_intf.ml", 359, 11541, 11543), ("src/int_intf.ml", 359, 11541, 11564), 0), 0, Tag1 ("Base__Int_intf", 142)), 0); (("to_int", 4324), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1660), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1659), 0), 100000000, 0, -1658), 0, (("src/int_intf.ml", 360, 11565, 11567), ("src/int_intf.ml", 360, 11565, 11588), 0), 0, Tag1 ("Base__Int_intf", 143)), 0); (("of_int32", 4325), ((Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -1657), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1656)], (0)), 100000000, 0, -1655), 0), 100000000, 0, -1654), 0, (("src/int_intf.ml", 361, 11589, 11591), ("src/int_intf.ml", 361, 11589, 11623), 0), 0, Tag1 ("Base__Int_intf", 144)), 0); (("to_int32", 4326), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1653), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -1652)], (0)), 100000000, 0, -1651), 0), 100000000, 0, -1650), 0, (("src/int_intf.ml", 362, 11624, 11626), ("src/int_intf.ml", 362, 11624, 11658), 0), 0, Tag1 ("Base__Int_intf", 145)), 0); (("of_int64", 4327), ((Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -1649), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1648)], (0)), 100000000, 0, -1647), 0), 100000000, 0, -1646), 0, (("src/int_intf.ml", 363, 11659, 11661), ("src/int_intf.ml", 363, 11659, 11693), 0), 0, Tag1 ("Base__Int_intf", 146)), 0); (("of_nativeint", 4328), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -1645), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1644)], (0)), 100000000, 0, -1643), 0), 100000000, 0, -1642), 0, (("src/int_intf.ml", 364, 11694, 11696), ("src/int_intf.ml", 364, 11694, 11736), 0), 0, Tag1 ("Base__Int_intf", 147)), 0); (("to_nativeint", 4329), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1641), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -1640), 0), 100000000, 0, -1639), 0, (("src/int_intf.ml", 365, 11737, 11739), ("src/int_intf.ml", 365, 11737, 11772), 0), 0, Tag1 ("Base__Int_intf", 148)), 0); (("to_int32_trunc", 4330), ((Tag1 (0, (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1638), (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -1637), 0), 100000000, 0, -1636), (("%int32_of_int", 1, 1, "", [0], 0)), (("src/int_intf.ml", 374, 12116, 12118), ("src/int_intf.ml", 374, 12116, 12200), 0), 0, Tag1 ("Base__Int_intf", 149)), 0); (("of_int32_trunc", 4331), ((Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -1635), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1634), 0), 100000000, 0, -1633), (("%int32_to_int", 1, 1, "", [0], 0)), (("src/int_intf.ml", 375, 12201, 12203), ("src/int_intf.ml", 375, 12201, 12271), 0), 0, Tag1 ("Base__Int_intf", 150)), 0); (("of_int64_trunc", 4332), ((Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -1632), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1631), 0), 100000000, 0, -1630), (("%int64_to_int", 1, 1, "", [0], 0)), (("src/int_intf.ml", 376, 12272, 12274), ("src/int_intf.ml", 376, 12272, 12342), 0), 0, Tag1 ("Base__Int_intf", 151)), 0); (("of_nativeint_trunc", 4333), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -1629), (Tag3 ((("t", 4223)), 0, (0)), 100000000, 0, -1628), 0), 100000000, 0, -1627), (("%nativeint_to_int", 1, 1, "", [0], 0)), (("src/int_intf.ml", 377, 12343, 12345), ("src/int_intf.ml", 377, 12343, 12425), 0), 0, Tag1 ("Base__Int_intf", 152)), 0); (("bswap16", 4334), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1626), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1625), 0), 100000000, 0, -1624), (("%bswap16", 1, 1, "", [0], 0)), (("src/int_intf.ml", 393, 12987, 12989), ("src/int_intf.ml", 393, 12987, 13045), 0), 0, Tag1 ("Base__Int_intf", 153)), 0); Tag3 (("Private", 4335), 0, (Tag1 ([Tag3 (("O_F", 4371), 0, (Tag1 ([(("%", 4372), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2193), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2192), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2191), 0), 100000000, 0, -2190), 0), 100000000, 0, -2189), 0, (("src/int_intf.ml", 405, 13435, 13441), ("src/int_intf.ml", 405, 13435, 13470), 0), 0, Tag1 ("Base__Int_intf", 154)), 0); (("/%", 4373), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2188), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2187), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2186), 0), 100000000, 0, -2185), 0), 100000000, 0, -2184), 0, (("src/int_intf.ml", 406, 13471, 13477), ("src/int_intf.ml", 406, 13471, 13507), 0), 0, Tag1 ("Base__Int_intf", 155)), 0); (("//", 4374), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2183), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2182), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -2181), 0), 100000000, 0, -2180), 0), 100000000, 0, -2179), 0, (("src/int_intf.ml", 407, 13508, 13514), ("src/int_intf.ml", 407, 13508, 13546), 0), 0, Tag1 ("Base__Int_intf", 156)), 0)]), 0, (("src/int_intf.ml", 404, 13414, 13418), ("src/int_intf.ml", 408, 13547, 13554), 0), Tag1 ("Base__Int_intf", 157)), 0, 0)]), 0, (("src/int_intf.ml", 402, 13354, 13356), ("src/int_intf.ml", 409, 13555, 13560), 0), Tag1 ("Base__Int_intf", 158)), 0, 0)])), 0, (("src/int_intf.ml", 304, 9107, 9107), ("src/int_intf.ml", 410, 13561, 13564), 0), Tag1 ("Base__Int_intf", 159)), 0); Tag4 (("Int", 3805), ((Tag1 ([Tag1 (("t", 4375), (0, 0, 0, 1, ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2607)), 0, 0, 0, 0, (("src/int_intf.ml", 313, 9499, 9501), ("src/int_intf.ml", 313, 9499, 9543), 0), [(("deriving_inline", (("src/int_intf.ml", 313, 9499, 9517), ("src/int_intf.ml", 313, 9499, 9532), 0)), ([([(((("globalize"), (("src/int_intf.ml", 313, 9499, 9533), ("src/int_intf.ml", 313, 9499, 9542), 0))), (("src/int_intf.ml", 313, 9499, 9533), ("src/int_intf.ml", 313, 9499, 9542), 0), 0, 0)], (("src/int_intf.ml", 313, 9499, 9533), ("src/int_intf.ml", 313, 9499, 9542), 0))]), (("src/int_intf.ml", 313, 9499, 9514), ("src/int_intf.ml", 313, 9499, 9543), 0))], 1, 0, Tag1 ("Base__Int_intf", 112)), 1, 0); (("globalize", 4376), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2606), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2605), 0), 100000000, 0, -2604), 0, (("src/int_intf.ml", 315, 9545, 9547), ("src/int_intf.ml", 315, 9545, 9585), 0), 0, Tag1 ("Base__Int_intf", 113)), 0); (("t_sexp_grammar", 4377), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [(Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2603)], (0)), 100000000, 0, -2602), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 20)), 0); (("of_float", 4378), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -2601), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2600), 0), 100000000, 0, -2599), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Floatable", 1)), 0); (("to_float", 4379), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2598), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -2597), 0), 100000000, 0, -2596), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Floatable", 2)), 0); (("of_int_exn", 4380), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2595), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2594), 0), 100000000, 0, -2593), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Intable", 1)), 0); (("to_int_exn", 4381), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2592), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2591), 0), 100000000, 0, -2590), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Intable", 2)), 0); (("hash_fold_t", 4382), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "hash_fold"), [(Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2589)], (0)), 100000000, 0, -2588), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Ppx_hash_lib", 4)), 0); (("hash", 4383), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2587), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "Std"), "Hash"), "hash_value"), 0, (0)), 100000000, 0, -2586), 0), 100000000, 0, -2585), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Ppx_hash_lib", 5)), 0); (("t_of_sexp", 4384), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2584), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2583), 0), 100000000, 0, -2582), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Sexplib0__Sexpable", 1)), 0); (("sexp_of_t", 4385), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2581), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2580), 0), 100000000, 0, -2579), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Sexplib0__Sexpable", 2)), 0); (("of_string", 4386), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2578), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2577), 0), 100000000, 0, -2576), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Stringable", 1)), 0); (("to_string", 4387), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2575), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2574), 0), 100000000, 0, -2573), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Stringable", 2)), 0); (("equal", 4388), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2572), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2571), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2570), 0), 100000000, 0, -2569), 0), 100000000, 0, -2568), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparisons", 8)), 0); (("compare", 4389), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2567), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2566), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2565), 0), 100000000, 0, -2564), 0), 100000000, 0, -2563), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparisons", 9)), 0); (("min", 4390), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2562), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2561), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2560), 0), 100000000, 0, -2559), 0), 100000000, 0, -2558), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparisons", 10)), 0); (("max", 4391), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2557), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2556), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2555), 0), 100000000, 0, -2554), 0), 100000000, 0, -2553), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparisons", 11)), 0); (("ascending", 4392), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2552), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2551), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2550), 0), 100000000, 0, -2549), 0), 100000000, 0, -2548), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparable_intf", 19)), 0); (("descending", 4393), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2547), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2546), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2545), 0), 100000000, 0, -2544), 0), 100000000, 0, -2543), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparable_intf", 20)), 0); (("between", 4394), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2542), (Tag1 (("low"), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2541), (Tag1 (("high"), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2540), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2539), 0), 100000000, 0, -2538), 0), 100000000, 0, -2537), 0), 100000000, 0, -2536), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparable_intf", 21)), 0); (("clamp_exn", 4395), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2535), (Tag1 (("min"), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2534), (Tag1 (("max"), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2533), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2532), 0), 100000000, 0, -2531), 0), 100000000, 0, -2530), 0), 100000000, 0, -2529), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparable_intf", 22)), 0); (("clamp", 4396), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2528), (Tag1 (("min"), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2527), (Tag1 (("max"), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2526), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Or_error"), "t"), [(Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2525)], (0)), 100000000, 0, -2524), 0), 100000000, 0, -2523), 0), 100000000, 0, -2522), 0), 100000000, 0, -2521), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparable_intf", 23)), 0); Tag1 (("comparator_witness", 4397), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, 0, 0, Tag1 ("Base__Comparator", 5)), 1, 0); (("comparator", 4398), ((Tag3 (Tag1 ((Tag2 ("Base__Comparator")), "comparator"), [(Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2519); (Tag3 ((("comparator_witness", 4397)), 0, (0)), 100000000, 0, -2520)], (0)), 100000000, 0, -2518), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparator", 6)), 0); (("pp", 4399), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Formatter"), "t"), 0, (0)), 100000000, 0, -2517), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2516), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2515), 0), 100000000, 0, -2514), 0), 100000000, 0, -2513), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Pretty_printer", 2)), 0); (("hashable", 4400), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Hashable"), "t"), [(Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2512)], (0)), 100000000, 0, -2511), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Identifiable_intf", 15)), 0); (("is_positive", 4401), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2510), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2509), 0), 100000000, 0, -2508), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparable_intf", 13)), 0); (("is_non_negative", 4402), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2507), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2506), 0), 100000000, 0, -2505), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparable_intf", 14)), 0); (("is_negative", 4403), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2504), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2503), 0), 100000000, 0, -2502), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparable_intf", 15)), 0); (("is_non_positive", 4404), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2501), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2500), 0), 100000000, 0, -2499), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparable_intf", 16)), 0); (("sign", 4405), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2498), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__Comparable_intf")), "Sign"), "t"), 0, (0)), 100000000, 0, -2497), 0), 100000000, 0, -2496), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Comparable_intf", 17)), 0); (("invariant", 4406), ((Tag3 (Tag1 ((Tag2 ("Base__Invariant_intf")), "inv"), [(Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2495)], (0)), 100000000, 0, -2494), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Invariant_intf", 3)), 0); Tag3 (("Hex", 4407), 0, (Tag1 ([Tag1 (("t", 4496), (0, 0, 0, 1, ((Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2635)), 0, 0, 0, 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), [(("deriving_inline", (("src/int_intf.ml", 44, 1730, 1755), ("src/int_intf.ml", 44, 1730, 1770), 0)), ([([(Tag8 ([(((("sexp"), (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1775), 0))), (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1775), 0), 0, 0); (((("sexp_grammar"), (("src/int_intf.ml", 44, 1730, 1777), ("src/int_intf.ml", 44, 1730, 1789), 0))), (("src/int_intf.ml", 44, 1730, 1777), ("src/int_intf.ml", 44, 1730, 1789), 0), 0, 0); (((("compare"), (("src/int_intf.ml", 44, 1730, 1791), ("src/int_intf.ml", 44, 1730, 1798), 0))), (("src/int_intf.ml", 44, 1730, 1791), ("src/int_intf.ml", 44, 1730, 1798), 0), 0, 0); (((("hash"), (("src/int_intf.ml", 44, 1730, 1800), ("src/int_intf.ml", 44, 1730, 1804), 0))), (("src/int_intf.ml", 44, 1730, 1800), ("src/int_intf.ml", 44, 1730, 1804), 0), 0, 0)]), (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1804), 0), 0, 0)], (("src/int_intf.ml", 44, 1730, 1771), ("src/int_intf.ml", 44, 1730, 1804), 0))]), (("src/int_intf.ml", 44, 1730, 1752), ("src/int_intf.ml", 44, 1730, 1805), 0))], 0, 0, Tag1 ("Base__Int_intf", 8)), 0, 0); (("t_of_sexp", 4497), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2634), (Tag3 ((("t", 4496)), 0, (0)), 100000000, 0, -2633), 0), 100000000, 0, -2632), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Sexplib0__Sexpable", 1)), 0); (("sexp_of_t", 4498), ((Tag1 (0, (Tag3 ((("t", 4496)), 0, (0)), 100000000, 0, -2631), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -2630), 0), 100000000, 0, -2629), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Sexplib0__Sexpable", 2)), 0); (("t_sexp_grammar", 4499), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [(Tag3 ((("t", 4496)), 0, (0)), 100000000, 0, -2628)], (0)), 100000000, 0, -2627), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 11)), 0); (("compare", 4500), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((("t", 4496)), 0, (0)), 100000000, 0, -2626)], (0)), 100000000, 0, -2625), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Ppx_compare_lib", 5)), 0); (("hash_fold_t", 4501), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "hash_fold"), [(Tag3 ((("t", 4496)), 0, (0)), 100000000, 0, -2624)], (0)), 100000000, 0, -2623), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Ppx_hash_lib", 4)), 0); (("hash", 4502), ((Tag1 (0, (Tag3 ((("t", 4496)), 0, (0)), 100000000, 0, -2622), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "Std"), "Hash"), "hash_value"), 0, (0)), 100000000, 0, -2621), 0), 100000000, 0, -2620), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Ppx_hash_lib", 5)), 0); (("of_string", 4503), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2619), (Tag3 ((("t", 4496)), 0, (0)), 100000000, 0, -2618), 0), 100000000, 0, -2617), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Stringable", 1)), 0); (("to_string", 4504), ((Tag1 (0, (Tag3 ((("t", 4496)), 0, (0)), 100000000, 0, -2616), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2615), 0), 100000000, 0, -2614), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Stringable", 2)), 0); (("to_string_hum", 4505), ((Tag1 (Tag1 ("delimiter"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -2613)], (0)), 100000000, 0, -2612), (Tag1 (0, (Tag3 ((("t", 4496)), 0, (0)), 100000000, 0, -2611), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2610), 0), 100000000, 0, -2609), 0), 100000000, 0, -2608), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 15)), 0)]), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), Tag1 ("Base__Int_intf", 16)), 0, 0); (("of_string_opt", 4408), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2493), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2492)], (0)), 100000000, 0, -2491), 0), 100000000, 0, -2490), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 27)), 0); (("to_string_hum", 4409), ((Tag1 (Tag1 ("delimiter"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -2489)], (0)), 100000000, 0, -2488), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2487), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2486), 0), 100000000, 0, -2485), 0), 100000000, 0, -2484), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 28)), 0); (("one", 4410), ((Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2483), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 30)), 0); (("minus_one", 4411), ((Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2482), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 31)), 0); (("rem", 4412), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2481), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2480), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2479), 0), 100000000, 0, -2478), 0), 100000000, 0, -2477), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 41)), 0); (("round", 4413), ((Tag1 (Tag1 ("dir"), (Tag3 ((Tag3 ("option", 10)), [(Tag8 (([("Down", (0)); ("Nearest", (0)); ("Up", (0)); ("Zero", (0))], (0, 100000000, 0, -2476), 1, 0, 0)), 100000000, 0, -2475)], (0)), 100000000, 0, -2474), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2473), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2472), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2471), 0), 100000000, 0, -2470), 0), 100000000, 0, -2469), 0), 100000000, 0, -2468), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 1)), 0); (("round_towards_zero", 4414), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2467), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2466), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2465), 0), 100000000, 0, -2464), 0), 100000000, 0, -2463), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 2)), 0); (("round_down", 4415), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2462), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2461), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2460), 0), 100000000, 0, -2459), 0), 100000000, 0, -2458), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 3)), 0); (("round_up", 4416), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2457), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2456), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2455), 0), 100000000, 0, -2454), 0), 100000000, 0, -2453), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 4)), 0); (("round_nearest", 4417), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2452), (Tag1 (("to_multiple_of"), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2451), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2450), 0), 100000000, 0, -2449), 0), 100000000, 0, -2448), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 5)), 0); (("succ", 4418), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2447), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2446), 0), 100000000, 0, -2445), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 51)), 0); (("pred", 4419), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2444), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2443), 0), 100000000, 0, -2442), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 52)), 0); (("pow", 4420), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2441), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2440), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2439), 0), 100000000, 0, -2438), 0), 100000000, 0, -2437), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 53)), 0); (("bit_and", 4421), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2436), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2435), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2434), 0), 100000000, 0, -2433), 0), 100000000, 0, -2432), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 54)), 0); (("bit_or", 4422), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2431), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2430), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2429), 0), 100000000, 0, -2428), 0), 100000000, 0, -2427), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 55)), 0); (("bit_xor", 4423), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2426), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2425), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2424), 0), 100000000, 0, -2423), 0), 100000000, 0, -2422), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 56)), 0); (("bit_not", 4424), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2421), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2420), 0), 100000000, 0, -2419), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 57)), 0); (("popcount", 4425), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2418), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2417), 0), 100000000, 0, -2416), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 58)), 0); (("shift_left", 4426), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2415), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2414), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2413), 0), 100000000, 0, -2412), 0), 100000000, 0, -2411), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 59)), 0); (("shift_right", 4427), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2410), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2409), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2408), 0), 100000000, 0, -2407), 0), 100000000, 0, -2406), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 60)), 0); (("decr", 4428), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import"), "ref"), [(Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2405)], (0)), 100000000, 0, -2404), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2403), 0), 100000000, 0, -2402), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 61)), 0); (("incr", 4429), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import"), "ref"), [(Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2401)], (0)), 100000000, 0, -2400), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2399), 0), 100000000, 0, -2398), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 62)), 0); (("of_int32_exn", 4430), ((Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -2397), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2396), 0), 100000000, 0, -2395), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 63)), 0); (("to_int32_exn", 4431), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2394), (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -2393), 0), 100000000, 0, -2392), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 64)), 0); (("of_int64_exn", 4432), ((Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -2391), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2390), 0), 100000000, 0, -2389), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 65)), 0); (("to_int64", 4433), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2388), (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -2387), 0), 100000000, 0, -2386), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 66)), 0); (("of_nativeint_exn", 4434), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -2385), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2384), 0), 100000000, 0, -2383), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 67)), 0); (("to_nativeint_exn", 4435), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2382), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -2381), 0), 100000000, 0, -2380), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 68)), 0); (("of_float_unchecked", 4436), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -2379), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2378), 0), 100000000, 0, -2377), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 69)), 0); (("num_bits", 4437), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2376), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 97)), 0); (("max_value", 4438), ((Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2375), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 98)), 0); (("min_value", 4439), ((Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2374), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 99)), 0); (("shift_right_logical", 4440), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2373), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2372), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2371), 0), 100000000, 0, -2370), 0), 100000000, 0, -2369), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 101)), 0); (("ceil_pow2", 4441), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2368), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2367), 0), 100000000, 0, -2366), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 102)), 0); (("floor_pow2", 4442), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2365), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2364), 0), 100000000, 0, -2363), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 103)), 0); (("ceil_log2", 4443), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2362), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2361), 0), 100000000, 0, -2360), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 104)), 0); (("floor_log2", 4444), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2359), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2358), 0), 100000000, 0, -2357), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 105)), 0); (("is_pow2", 4445), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2356), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2355), 0), 100000000, 0, -2354), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 106)), 0); (("clz", 4446), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2353), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2352), 0), 100000000, 0, -2351), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 107)), 0); (("ctz", 4447), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2350), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2349), 0), 100000000, 0, -2348), 0, (("src/int_intf.ml", 319, 9599, 9609), ("src/int_intf.ml", 319, 9599, 9627), 0), 0, Tag1 ("Base__Int_intf", 108)), 0); Tag3 (("O", 4448), 0, (Tag1 ([(("+", 4506), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2748), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2747), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2746), 0), 100000000, 0, -2745), 0), 100000000, 0, -2744), (("%addint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 324, 9805, 9809), ("src/int_intf.ml", 324, 9805, 9877), 0), 0, Tag1 ("Base__Int_intf", 115)), 0); (("-", 4507), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2743), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2742), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2741), 0), 100000000, 0, -2740), 0), 100000000, 0, -2739), (("%subint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 325, 9878, 9882), ("src/int_intf.ml", 325, 9878, 9950), 0), 0, Tag1 ("Base__Int_intf", 116)), 0); (("*", 4508), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2738), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2737), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2736), 0), 100000000, 0, -2735), 0), 100000000, 0, -2734), (("%mulint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 326, 9951, 9955), ("src/int_intf.ml", 326, 9951, 10023), 0), 0, Tag1 ("Base__Int_intf", 117)), 0); (("/", 4509), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2733), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2732), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2731), 0), 100000000, 0, -2730), 0), 100000000, 0, -2729), (("%divint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 327, 10024, 10028), ("src/int_intf.ml", 327, 10024, 10096), 0), 0, Tag1 ("Base__Int_intf", 118)), 0); (("~-", 4510), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2728), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2727), 0), 100000000, 0, -2726), (("%negint", 1, 1, "", [0], 0)), (("src/int_intf.ml", 328, 10097, 10101), ("src/int_intf.ml", 328, 10097, 10151), 0), 0, Tag1 ("Base__Int_intf", 119)), 0); (("**", 4511), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2725), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2724), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2723), 0), 100000000, 0, -2722), 0), 100000000, 0, -2721), 0, (("src/int_intf.ml", 329, 10152, 10156), ("src/int_intf.ml", 329, 10152, 10180), 0), 0, Tag1 ("Base__Int_intf", 120)), 0); (("=", 4512), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2720), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2719), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2718), 0), 100000000, 0, -2717), 0), 100000000, 0, -2716), (("%equal", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 330, 10181, 10185), ("src/int_intf.ml", 330, 10181, 10255), 0), 0, Tag1 ("Base__Int_intf", 121)), 0); (("<>", 4513), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2715), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2714), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2713), 0), 100000000, 0, -2712), 0), 100000000, 0, -2711), (("%notequal", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 331, 10256, 10260), ("src/int_intf.ml", 331, 10256, 10334), 0), 0, Tag1 ("Base__Int_intf", 122)), 0); (("<", 4514), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2710), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2709), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2708), 0), 100000000, 0, -2707), 0), 100000000, 0, -2706), (("%lessthan", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 332, 10335, 10339), ("src/int_intf.ml", 332, 10335, 10412), 0), 0, Tag1 ("Base__Int_intf", 123)), 0); ((">", 4515), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2705), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2704), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2703), 0), 100000000, 0, -2702), 0), 100000000, 0, -2701), (("%greaterthan", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 333, 10413, 10417), ("src/int_intf.ml", 333, 10413, 10493), 0), 0, Tag1 ("Base__Int_intf", 124)), 0); (("<=", 4516), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2700), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2699), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2698), 0), 100000000, 0, -2697), 0), 100000000, 0, -2696), (("%lessequal", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 334, 10494, 10498), ("src/int_intf.ml", 334, 10494, 10573), 0), 0, Tag1 ("Base__Int_intf", 125)), 0); ((">=", 4517), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2695), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2694), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2693), 0), 100000000, 0, -2692), 0), 100000000, 0, -2691), (("%greaterequal", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 335, 10574, 10578), ("src/int_intf.ml", 335, 10574, 10656), 0), 0, Tag1 ("Base__Int_intf", 126)), 0); (("land", 4518), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2690), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2689), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2688), 0), 100000000, 0, -2687), 0), 100000000, 0, -2686), (("%andint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 336, 10657, 10661), ("src/int_intf.ml", 336, 10657, 10732), 0), 0, Tag1 ("Base__Int_intf", 127)), 0); (("lor", 4519), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2685), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2684), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2683), 0), 100000000, 0, -2682), 0), 100000000, 0, -2681), (("%orint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 337, 10733, 10737), ("src/int_intf.ml", 337, 10733, 10806), 0), 0, Tag1 ("Base__Int_intf", 128)), 0); (("lxor", 4520), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2680), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2679), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2678), 0), 100000000, 0, -2677), 0), 100000000, 0, -2676), (("%xorint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 338, 10807, 10811), ("src/int_intf.ml", 338, 10807, 10882), 0), 0, Tag1 ("Base__Int_intf", 129)), 0); (("lnot", 4521), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2675), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2674), 0), 100000000, 0, -2673), 0, (("src/int_intf.ml", 339, 10883, 10887), ("src/int_intf.ml", 339, 10883, 10904), 0), 0, Tag1 ("Base__Int_intf", 130)), 0); (("abs", 4522), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2672), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2671), 0), 100000000, 0, -2670), 0, (("src/int_intf.ml", 340, 10905, 10909), ("src/int_intf.ml", 340, 10905, 10925), 0), 0, Tag1 ("Base__Int_intf", 131)), 0); (("neg", 4523), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2669), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2668), 0), 100000000, 0, -2667), (("%negint", 1, 1, "", [0], 0)), (("src/int_intf.ml", 341, 10926, 10930), ("src/int_intf.ml", 341, 10926, 10977), 0), 0, Tag1 ("Base__Int_intf", 132)), 0); (("zero", 4524), ((Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2666), 0, (("src/int_intf.ml", 342, 10978, 10982), ("src/int_intf.ml", 342, 10978, 10994), 0), 0, Tag1 ("Base__Int_intf", 133)), 0); (("%", 4525), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2665), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2664), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2663), 0), 100000000, 0, -2662), 0), 100000000, 0, -2661), 0, (("src/int_intf.ml", 343, 10995, 10999), ("src/int_intf.ml", 343, 10995, 11022), 0), 0, Tag1 ("Base__Int_intf", 134)), 0); (("/%", 4526), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2660), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2659), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2658), 0), 100000000, 0, -2657), 0), 100000000, 0, -2656), 0, (("src/int_intf.ml", 344, 11023, 11027), ("src/int_intf.ml", 344, 11023, 11051), 0), 0, Tag1 ("Base__Int_intf", 135)), 0); (("//", 4527), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2655), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2654), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -2653), 0), 100000000, 0, -2652), 0), 100000000, 0, -2651), 0, (("src/int_intf.ml", 345, 11052, 11056), ("src/int_intf.ml", 345, 11052, 11084), 0), 0, Tag1 ("Base__Int_intf", 136)), 0); (("lsl", 4528), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2650), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2649), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2648), 0), 100000000, 0, -2647), 0), 100000000, 0, -2646), (("%lslint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 346, 11085, 11089), ("src/int_intf.ml", 346, 11085, 11161), 0), 0, Tag1 ("Base__Int_intf", 137)), 0); (("asr", 4529), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2645), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2644), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2643), 0), 100000000, 0, -2642), 0), 100000000, 0, -2641), (("%asrint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 347, 11162, 11166), ("src/int_intf.ml", 347, 11162, 11238), 0), 0, Tag1 ("Base__Int_intf", 138)), 0); (("lsr", 4530), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2640), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2639), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2638), 0), 100000000, 0, -2637), 0), 100000000, 0, -2636), (("%lsrint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 348, 11239, 11243), ("src/int_intf.ml", 348, 11239, 11315), 0), 0, Tag1 ("Base__Int_intf", 139)), 0)]), 0, (("src/int_intf.ml", 321, 9644, 9646), ("src/int_intf.ml", 349, 11316, 11321), 0), Tag1 ("Base__Int_intf", 140)), 0, 0); (("+", 4449), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2347), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2346), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2345), 0), 100000000, 0, -2344), 0), 100000000, 0, -2343), (("%addint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 324, 9805, 9809), ("src/int_intf.ml", 324, 9805, 9877), 0), 0, Tag1 ("Base__Int_intf", 115)), 0); (("-", 4450), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2342), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2341), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2340), 0), 100000000, 0, -2339), 0), 100000000, 0, -2338), (("%subint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 325, 9878, 9882), ("src/int_intf.ml", 325, 9878, 9950), 0), 0, Tag1 ("Base__Int_intf", 116)), 0); (("*", 4451), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2337), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2336), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2335), 0), 100000000, 0, -2334), 0), 100000000, 0, -2333), (("%mulint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 326, 9951, 9955), ("src/int_intf.ml", 326, 9951, 10023), 0), 0, Tag1 ("Base__Int_intf", 117)), 0); (("/", 4452), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2332), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2331), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2330), 0), 100000000, 0, -2329), 0), 100000000, 0, -2328), (("%divint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 327, 10024, 10028), ("src/int_intf.ml", 327, 10024, 10096), 0), 0, Tag1 ("Base__Int_intf", 118)), 0); (("~-", 4453), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2327), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2326), 0), 100000000, 0, -2325), (("%negint", 1, 1, "", [0], 0)), (("src/int_intf.ml", 328, 10097, 10101), ("src/int_intf.ml", 328, 10097, 10151), 0), 0, Tag1 ("Base__Int_intf", 119)), 0); (("**", 4454), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2324), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2323), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2322), 0), 100000000, 0, -2321), 0), 100000000, 0, -2320), 0, (("src/int_intf.ml", 329, 10152, 10156), ("src/int_intf.ml", 329, 10152, 10180), 0), 0, Tag1 ("Base__Int_intf", 120)), 0); (("=", 4455), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2319), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2318), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2317), 0), 100000000, 0, -2316), 0), 100000000, 0, -2315), (("%equal", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 330, 10181, 10185), ("src/int_intf.ml", 330, 10181, 10255), 0), 0, Tag1 ("Base__Int_intf", 121)), 0); (("<>", 4456), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2314), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2313), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2312), 0), 100000000, 0, -2311), 0), 100000000, 0, -2310), (("%notequal", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 331, 10256, 10260), ("src/int_intf.ml", 331, 10256, 10334), 0), 0, Tag1 ("Base__Int_intf", 122)), 0); (("<", 4457), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2309), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2308), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2307), 0), 100000000, 0, -2306), 0), 100000000, 0, -2305), (("%lessthan", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 332, 10335, 10339), ("src/int_intf.ml", 332, 10335, 10412), 0), 0, Tag1 ("Base__Int_intf", 123)), 0); ((">", 4458), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2304), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2303), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2302), 0), 100000000, 0, -2301), 0), 100000000, 0, -2300), (("%greaterthan", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 333, 10413, 10417), ("src/int_intf.ml", 333, 10413, 10493), 0), 0, Tag1 ("Base__Int_intf", 124)), 0); (("<=", 4459), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2299), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2298), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2297), 0), 100000000, 0, -2296), 0), 100000000, 0, -2295), (("%lessequal", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 334, 10494, 10498), ("src/int_intf.ml", 334, 10494, 10573), 0), 0, Tag1 ("Base__Int_intf", 125)), 0); ((">=", 4460), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2294), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2293), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2292), 0), 100000000, 0, -2291), 0), 100000000, 0, -2290), (("%greaterequal", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 335, 10574, 10578), ("src/int_intf.ml", 335, 10574, 10656), 0), 0, Tag1 ("Base__Int_intf", 126)), 0); (("land", 4461), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2289), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2288), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2287), 0), 100000000, 0, -2286), 0), 100000000, 0, -2285), (("%andint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 336, 10657, 10661), ("src/int_intf.ml", 336, 10657, 10732), 0), 0, Tag1 ("Base__Int_intf", 127)), 0); (("lor", 4462), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2284), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2283), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2282), 0), 100000000, 0, -2281), 0), 100000000, 0, -2280), (("%orint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 337, 10733, 10737), ("src/int_intf.ml", 337, 10733, 10806), 0), 0, Tag1 ("Base__Int_intf", 128)), 0); (("lxor", 4463), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2279), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2278), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2277), 0), 100000000, 0, -2276), 0), 100000000, 0, -2275), (("%xorint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 338, 10807, 10811), ("src/int_intf.ml", 338, 10807, 10882), 0), 0, Tag1 ("Base__Int_intf", 129)), 0); (("lnot", 4464), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2274), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2273), 0), 100000000, 0, -2272), 0, (("src/int_intf.ml", 339, 10883, 10887), ("src/int_intf.ml", 339, 10883, 10904), 0), 0, Tag1 ("Base__Int_intf", 130)), 0); (("abs", 4465), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2271), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2270), 0), 100000000, 0, -2269), 0, (("src/int_intf.ml", 340, 10905, 10909), ("src/int_intf.ml", 340, 10905, 10925), 0), 0, Tag1 ("Base__Int_intf", 131)), 0); (("neg", 4466), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2268), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2267), 0), 100000000, 0, -2266), (("%negint", 1, 1, "", [0], 0)), (("src/int_intf.ml", 341, 10926, 10930), ("src/int_intf.ml", 341, 10926, 10977), 0), 0, Tag1 ("Base__Int_intf", 132)), 0); (("zero", 4467), ((Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2265), 0, (("src/int_intf.ml", 342, 10978, 10982), ("src/int_intf.ml", 342, 10978, 10994), 0), 0, Tag1 ("Base__Int_intf", 133)), 0); (("%", 4468), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2264), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2263), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2262), 0), 100000000, 0, -2261), 0), 100000000, 0, -2260), 0, (("src/int_intf.ml", 343, 10995, 10999), ("src/int_intf.ml", 343, 10995, 11022), 0), 0, Tag1 ("Base__Int_intf", 134)), 0); (("/%", 4469), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2259), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2258), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2257), 0), 100000000, 0, -2256), 0), 100000000, 0, -2255), 0, (("src/int_intf.ml", 344, 11023, 11027), ("src/int_intf.ml", 344, 11023, 11051), 0), 0, Tag1 ("Base__Int_intf", 135)), 0); (("//", 4470), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2254), (Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2253), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -2252), 0), 100000000, 0, -2251), 0), 100000000, 0, -2250), 0, (("src/int_intf.ml", 345, 11052, 11056), ("src/int_intf.ml", 345, 11052, 11084), 0), 0, Tag1 ("Base__Int_intf", 136)), 0); (("lsl", 4471), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2249), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2248), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2247), 0), 100000000, 0, -2246), 0), 100000000, 0, -2245), (("%lslint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 346, 11085, 11089), ("src/int_intf.ml", 346, 11085, 11161), 0), 0, Tag1 ("Base__Int_intf", 137)), 0); (("asr", 4472), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2244), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2243), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2242), 0), 100000000, 0, -2241), 0), 100000000, 0, -2240), (("%asrint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 347, 11162, 11166), ("src/int_intf.ml", 347, 11162, 11238), 0), 0, Tag1 ("Base__Int_intf", 138)), 0); (("lsr", 4473), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2239), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2238), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2237), 0), 100000000, 0, -2236), 0), 100000000, 0, -2235), (("%lsrint", 2, 1, "", [0; 0], 0)), (("src/int_intf.ml", 348, 11239, 11243), ("src/int_intf.ml", 348, 11239, 11315), 0), 0, Tag1 ("Base__Int_intf", 139)), 0); (("max_value_30_bits", 4474), ((Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2234), 0, (("src/int_intf.ml", 355, 11477, 11479), ("src/int_intf.ml", 355, 11477, 11504), 0), 0, Tag1 ("Base__Int_intf", 141)), 0); (("of_int", 4475), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2233), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2232), 0), 100000000, 0, -2231), 0, (("src/int_intf.ml", 359, 11541, 11543), ("src/int_intf.ml", 359, 11541, 11564), 0), 0, Tag1 ("Base__Int_intf", 142)), 0); (("to_int", 4476), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2230), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2229), 0), 100000000, 0, -2228), 0, (("src/int_intf.ml", 360, 11565, 11567), ("src/int_intf.ml", 360, 11565, 11588), 0), 0, Tag1 ("Base__Int_intf", 143)), 0); (("of_int32", 4477), ((Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -2227), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2226)], (0)), 100000000, 0, -2225), 0), 100000000, 0, -2224), 0, (("src/int_intf.ml", 361, 11589, 11591), ("src/int_intf.ml", 361, 11589, 11623), 0), 0, Tag1 ("Base__Int_intf", 144)), 0); (("to_int32", 4478), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2223), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -2222)], (0)), 100000000, 0, -2221), 0), 100000000, 0, -2220), 0, (("src/int_intf.ml", 362, 11624, 11626), ("src/int_intf.ml", 362, 11624, 11658), 0), 0, Tag1 ("Base__Int_intf", 145)), 0); (("of_int64", 4479), ((Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -2219), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2218)], (0)), 100000000, 0, -2217), 0), 100000000, 0, -2216), 0, (("src/int_intf.ml", 363, 11659, 11661), ("src/int_intf.ml", 363, 11659, 11693), 0), 0, Tag1 ("Base__Int_intf", 146)), 0); (("of_nativeint", 4480), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -2215), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2214)], (0)), 100000000, 0, -2213), 0), 100000000, 0, -2212), 0, (("src/int_intf.ml", 364, 11694, 11696), ("src/int_intf.ml", 364, 11694, 11736), 0), 0, Tag1 ("Base__Int_intf", 147)), 0); (("to_nativeint", 4481), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2211), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -2210), 0), 100000000, 0, -2209), 0, (("src/int_intf.ml", 365, 11737, 11739), ("src/int_intf.ml", 365, 11737, 11772), 0), 0, Tag1 ("Base__Int_intf", 148)), 0); (("to_int32_trunc", 4482), ((Tag1 (0, (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2208), (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -2207), 0), 100000000, 0, -2206), (("%int32_of_int", 1, 1, "", [0], 0)), (("src/int_intf.ml", 374, 12116, 12118), ("src/int_intf.ml", 374, 12116, 12200), 0), 0, Tag1 ("Base__Int_intf", 149)), 0); (("of_int32_trunc", 4483), ((Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -2205), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2204), 0), 100000000, 0, -2203), (("%int32_to_int", 1, 1, "", [0], 0)), (("src/int_intf.ml", 375, 12201, 12203), ("src/int_intf.ml", 375, 12201, 12271), 0), 0, Tag1 ("Base__Int_intf", 150)), 0); (("of_int64_trunc", 4484), ((Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -2202), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2201), 0), 100000000, 0, -2200), (("%int64_to_int", 1, 1, "", [0], 0)), (("src/int_intf.ml", 376, 12272, 12274), ("src/int_intf.ml", 376, 12272, 12342), 0), 0, Tag1 ("Base__Int_intf", 151)), 0); (("of_nativeint_trunc", 4485), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -2199), (Tag3 ((("t", 4375)), 0, (0)), 100000000, 0, -2198), 0), 100000000, 0, -2197), (("%nativeint_to_int", 1, 1, "", [0], 0)), (("src/int_intf.ml", 377, 12343, 12345), ("src/int_intf.ml", 377, 12343, 12425), 0), 0, Tag1 ("Base__Int_intf", 152)), 0); (("bswap16", 4486), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2196), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2195), 0), 100000000, 0, -2194), (("%bswap16", 1, 1, "", [0], 0)), (("src/int_intf.ml", 393, 12987, 12989), ("src/int_intf.ml", 393, 12987, 13045), 0), 0, Tag1 ("Base__Int_intf", 153)), 0); Tag3 (("Private", 4487), 0, (Tag1 ([Tag3 (("O_F", 4531), 0, (Tag1 ([(("%", 4532), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2763), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2762), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2761), 0), 100000000, 0, -2760), 0), 100000000, 0, -2759), 0, (("src/int_intf.ml", 405, 13435, 13441), ("src/int_intf.ml", 405, 13435, 13470), 0), 0, Tag1 ("Base__Int_intf", 154)), 0); (("/%", 4533), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2758), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2757), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2756), 0), 100000000, 0, -2755), 0), 100000000, 0, -2754), 0, (("src/int_intf.ml", 406, 13471, 13477), ("src/int_intf.ml", 406, 13471, 13507), 0), 0, Tag1 ("Base__Int_intf", 155)), 0); (("//", 4534), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2753), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2752), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -2751), 0), 100000000, 0, -2750), 0), 100000000, 0, -2749), 0, (("src/int_intf.ml", 407, 13508, 13514), ("src/int_intf.ml", 407, 13508, 13546), 0), 0, Tag1 ("Base__Int_intf", 156)), 0)]), 0, (("src/int_intf.ml", 404, 13414, 13418), ("src/int_intf.ml", 408, 13547, 13554), 0), Tag1 ("Base__Int_intf", 157)), 0, 0)]), 0, (("src/int_intf.ml", 402, 13354, 13356), ("src/int_intf.ml", 409, 13555, 13560), 0), Tag1 ("Base__Int_intf", 158)), 0, 0); Tag4 (("Hexable", 4488), ((((("Hexable", 3798)))), 0, (("src/int_intf.ml", 416, 13696, 13698), ("src/int_intf.ml", 416, 13696, 13727), 0), Tag1 ("Base__Int_intf", 160)), 0); Tag4 (("Int_without_module_types", 4489), ((((("Int_without_module_types", 3804)))), 0, (("src/int_intf.ml", 418, 13729, 13731), ("src/int_intf.ml", 418, 13729, 13794), 0), Tag1 ("Base__Int_intf", 161)), 0); Tag4 (("Operators", 4490), ((((("Operators", 3801)))), 0, (("src/int_intf.ml", 419, 13795, 13797), ("src/int_intf.ml", 419, 13795, 13830), 0), Tag1 ("Base__Int_intf", 162)), 0); Tag4 (("Operators_unbounded", 4491), ((((("Operators_unbounded", 3800)))), 0, (("src/int_intf.ml", 420, 13831, 13833), ("src/int_intf.ml", 420, 13831, 13886), 0), Tag1 ("Base__Int_intf", 163)), 0); Tag4 (("Round", 4492), ((((("Round", 3797)))), 0, (("src/int_intf.ml", 421, 13887, 13889), ("src/int_intf.ml", 421, 13887, 13914), 0), Tag1 ("Base__Int_intf", 164)), 0); Tag4 (("S", 4493), ((((("S", 3803)))), 0, (("src/int_intf.ml", 422, 13915, 13917), ("src/int_intf.ml", 422, 13915, 13934), 0), Tag1 ("Base__Int_intf", 165)), 0); Tag4 (("S_common", 4494), ((((("S_common", 3799)))), 0, (("src/int_intf.ml", 423, 13935, 13937), ("src/int_intf.ml", 423, 13935, 13968), 0), Tag1 ("Base__Int_intf", 166)), 0); Tag4 (("S_unbounded", 4495), ((((("S_unbounded", 3802)))), 0, (("src/int_intf.ml", 424, 13969, 13971), ("src/int_intf.ml", 424, 13969, 14008), 0), Tag1 ("Base__Int_intf", 167)), 0)])), 0, (("src/int_intf.ml", 412, 13566, 13566), ("src/int_intf.ml", 425, 14009, 14012), 0), Tag1 ("Base__Int_intf", 168)), 0)], "Base__Int_intf", [("Base__Int_intf", ("\238Q\2457\239\156\018\183J\015\240\178\193b\166@")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__StringLabels", ("\134F\024\226\216Is#\223\230\234\169Z\206Gc")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Printf", ("\215<\139]\021\142\224E\245m\198qc(W\229")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__MoreLabels", ("\248\232\248\254`<\230\241\161U\193U\1466J\238")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__ListLabels", ("*\194\012\191\020%\170\249m\002\180\178hk\205\220")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shadow_stdlib", ("\219zi\164\203\158e)\232\221\196\168\138x\142\018")); ("Sexplib0__Sexpable", ("\251${\207(\249/z\242\255\250^\141\156\210e")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv_error", ("kzv!\151~\198P\000\165\176d\007\251p\232")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Base_internalhash_types", ("0\148#2\226\223\018\135\173>!\020\237\017\255\149")); ("Base__T", ("+t\159\169\027\152\205\235\003\237\133\177\024\n6'")); ("Base__Sys0", ("\206z\231\154s\\\136\2364\131\005\014\031\152m3")); ("Base__Stringable", ("\170\025\162\136\234\162\n\161\1491>\145\210@\237t")); ("Base__String0", ("\212\221L\220\245\255\162P\228\224\189\216\135H\149O")); ("Base__Source_code_position0", ("_\003P6\254\029\206\005\130\136\180\019\145\230\000M")); ("Base__Sign0", ("\152\138\204\175\244\128J\165\221\165\160\150y\1305i")); ("Base__Sexp", ("\154\187\171&\209=\153[\236\250!U\174`\190T")); ("Base__Result", ("\204|\215\173FMa\2511<&\215T\194$\228")); ("Base__Printf", ("\000\196c,\214\127\226\174\220\190\253z!\242\028\250")); ("Base__Pretty_printer", ("\175\005\031\018\015a\159\220\154c'(a\239j\233")); ("Base__Ppx_hash_lib", ("\199\141\178\193\006\209L\007^\020(\131\224sn8")); ("Base__Ppx_compare_lib", ("\243\186~\233\228\199Ah\181.\223\004e\231\129S")); ("Base__Poly0", ("\230;\143\234\255.H\132KOe7\155\\\023f")); ("Base__Or_error", ("\193\133)\bO\210\2517\168*\203\148\143\200\127\177")); ("Base__Monad_intf", ("\208\203\163\152\184O\130?\012:\168\247}\018\253\155")); ("Base__Monad", ("!\244\168\2352=\137Lm\219\129K\216\199\145\\")); ("Base__Lazy", ("@`\165\196 \235)\136ANe:p\169$\185")); ("Base__Invariant_intf", ("\213\204\238\235\236[\198\145\028\2392\015\243\177S\249")); ("Base__Invariant", ("\135\153\136\\\129SD\228\202l\255\152\139\253\015\201")); ("Base__Intable", ("\028\249=Y\003]\231qd\238\172\004b\170\142\255")); ("Base__Int0", ("N\1310\012\227\254\000\255_\222!\018\016\003\1779")); ("Base__Info_intf", ("\184\209'\173\251\219\167X|v\188]\190o5X")); ("Base__Info", ("-\011\149\203\248\030\2301\1907\1630\189\128\209\170")); ("Base__Import0", ("\156\129U\197Y[\\\153\017Ho\203\173\204\220\020")); ("Base__Import", ("\014\187\247\141\187\181\142g\176:s_,\181\219\209")); ("Base__Identifiable_intf", ("hK7}\187\129\022-r\233\241\192Q\161=j")); ("Base__Identifiable", ("L\020\162\189\228\217^\171\158H_\157\164c\130\242")); ("Base__Hashable_intf", ("\128\015G\244\135R\026\202\128F?)\193\004\195\181")); ("Base__Hashable", ("\027\187\158\245r}\018\193dbq\196\005\170g\252")); ("Base__Hash_intf", ("h\004P\218\1531G\127\212\208A\024\140\164iq")); ("Base__Hash", ("\206Rc\194\234{s3\248\165\024\162\203{\206\206")); ("Base__Globalize", ("<\243w~.\180\196t\159\193\174[\227\139\215G")); ("Base__Formatter", ("\193\149\030\140\154\1505b\162a`%\243\185'%")); ("Base__Floatable", ("\239\176\151\139\173ft(q\190\205\030C\170\197\177")); ("Base__Field", ("8In\234X\202\188G\186\208$\192\175\136\214v")); ("Base__Error", ("\199\218\231n\155/\159\156\146\247\148t\237\003\t\153")); ("Base__Either0", ("!9-\011n\2077eZ\212\031c\227\029\206\t")); ("Base__Comparisons", ("\196\196Y\"{\163~)\\G/\155:\004\141;")); ("Base__Comparator", ("\002\135z7b\025&\207\t\188\239&U3R\167")); ("Base__Comparable_intf", ("\252n\002\221\246\143r\235oJ\240\151\202\211\161\254")); ("Base__Comparable", (":\134'\156u#\215\225\129\191\162\229\200\185l\012")); ("Base__Bool0", ("\177f\254p\023\143&\239\020\136\206\242~\018F\251")); ("Base__Applicative_intf", ("J\176\203\159\235N(\235\027\232\198+\224\205*A")); ("Base__Applicative", ("\157\024\176\241a\165\204\133\003s3\214\007\131\244\n")); ("Base__", ("p\252\007\139\128\163W\025+\0225\001\246|P\158"))], [(0)])

  end
