type 'n elt = 'n Fix__.Indexing.index
type 'n t
val create :
  ?partition:('n elt -> 'n elt -> int) -> 'n Fix__.Indexing.cardinal -> 'n t
val mark : 'n t -> 'n elt -> unit
val clear_marks : 'n t -> unit
val split : 'n t -> unit
val discard_unmarked : 'n t -> unit
val discard : 'n t -> ('n elt -> bool) -> unit
type block = int
val block_count : 'n t -> int
val find : 'n t -> 'n elt -> block
val iter_block_elements : 'n t -> block -> ('n elt -> unit) -> unit
val iter_all_elements : 'n t -> ('n elt -> unit) -> unit
val choose : 'n t -> block -> 'n elt
val is_chosen : 'n t -> 'n elt -> bool
val exhaust_marked_elements : 'n t -> block -> ('n elt -> unit) -> unit
("DEBUG:rule", [Tag1 (("elt", 352), ([((("n")), 100000000, 0, -97)], 1, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Fix__")), "Indexing"), "index"), [((("n")), 100000000, 0, -97)], (0)), 100000000, 0, -96)), [7], [0], 0, 0, (("src/Partition.mli", 23, 1323, 1323), ("src/Partition.mli", 24, 1337, 1347), 0), 0, 1, 0, Tag1 ("Fix__Partition", 0)), 1, 0); Tag1 (("t", 353), ([((("n")), 100000000, 0, -95)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/Partition.mli", 26, 1349, 1349), ("src/Partition.mli", 26, 1349, 1358), 0), 0, 0, 0, Tag1 ("Fix__Partition", 1)), 1, 0); (("create", 354), ((Tag1 (Tag1 ("partition"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 ((("elt", 352)), [((("n")), 100000000, 0, -87)], (0)), 100000000, 0, -94), (Tag1 (0, (Tag3 ((("elt", 352)), [((("n")), 100000000, 0, -87)], (0)), 100000000, 0, -93), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -92), 0), 100000000, 0, -91), 0), 100000000, 0, -90)], (0)), 100000000, 0, -89), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Fix__")), "Indexing"), "cardinal"), [((("n")), 100000000, 0, -87)], (0)), 100000000, 0, -88), (Tag3 ((("t", 353)), [((("n")), 100000000, 0, -87)], (0)), 100000000, 0, -86), 0), 100000000, 0, -85), 0), 100000000, 0, -84), 0, (("src/Partition.mli", 42, 2076, 2076), ("src/Partition.mli", 44, 2131, 2152), 0), 0, Tag1 ("Fix__Partition", 2)), 0); (("mark", 355), ((Tag1 (0, (Tag3 ((("t", 353)), [((("n")), 100000000, 0, -82)], (0)), 100000000, 0, -83), (Tag1 (0, (Tag3 ((("elt", 352)), [((("n")), 100000000, 0, -82)], (0)), 100000000, 0, -81), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -80), 0), 100000000, 0, -79), 0), 100000000, 0, -78), 0, (("src/Partition.mli", 60, 2866, 2866), ("src/Partition.mli", 60, 2866, 2899), 0), 0, Tag1 ("Fix__Partition", 3)), 0); (("clear_marks", 356), ((Tag1 (0, (Tag3 ((("t", 353)), [((("n")), 100000000, 0, -77)], (0)), 100000000, 0, -76), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), 0, (("src/Partition.mli", 67, 3151, 3151), ("src/Partition.mli", 67, 3151, 3181), 0), 0, Tag1 ("Fix__Partition", 4)), 0); (("split", 357), ((Tag1 (0, (Tag3 ((("t", 353)), [((("n")), 100000000, 0, -73)], (0)), 100000000, 0, -72), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -71), 0), 100000000, 0, -70), 0, (("src/Partition.mli", 73, 3335, 3335), ("src/Partition.mli", 73, 3335, 3359), 0), 0, Tag1 ("Fix__Partition", 5)), 0); (("discard_unmarked", 358), ((Tag1 (0, (Tag3 ((("t", 353)), [((("n")), 100000000, 0, -69)], (0)), 100000000, 0, -68), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -67), 0), 100000000, 0, -66), 0, (("src/Partition.mli", 86, 3838, 3838), ("src/Partition.mli", 86, 3838, 3873), 0), 0, Tag1 ("Fix__Partition", 6)), 0); (("discard", 359), ((Tag1 (0, (Tag3 ((("t", 353)), [((("n")), 100000000, 0, -64)], (0)), 100000000, 0, -65), (Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 352)), [((("n")), 100000000, 0, -64)], (0)), 100000000, 0, -63), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -62), 0), 100000000, 0, -61), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -60), 0), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("src/Partition.mli", 95, 4206, 4206), ("src/Partition.mli", 95, 4206, 4252), 0), 0, Tag1 ("Fix__Partition", 7)), 0); Tag1 (("block", 360), (0, 0, 0, 1, ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -57)), 0, 0, 0, 0, (("src/Partition.mli", 107, 4641, 4641), ("src/Partition.mli", 107, 4641, 4657), 0), 0, 1, 0, Tag1 ("Fix__Partition", 8)), 1, 0); (("block_count", 361), ((Tag1 (0, (Tag3 ((("t", 353)), [((("n")), 100000000, 0, -56)], (0)), 100000000, 0, -55), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("src/Partition.mli", 113, 4955, 4955), ("src/Partition.mli", 113, 4955, 4984), 0), 0, Tag1 ("Fix__Partition", 9)), 0); (("find", 362), ((Tag1 (0, (Tag3 ((("t", 353)), [((("n")), 100000000, 0, -51)], (0)), 100000000, 0, -52), (Tag1 (0, (Tag3 ((("elt", 352)), [((("n")), 100000000, 0, -51)], (0)), 100000000, 0, -50), (Tag3 ((("block", 360)), 0, (0)), 100000000, 0, -49), 0), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("src/Partition.mli", 119, 5175, 5175), ("src/Partition.mli", 119, 5175, 5209), 0), 0, Tag1 ("Fix__Partition", 10)), 0); (("iter_block_elements", 363), ((Tag1 (0, (Tag3 ((("t", 353)), [((("n")), 100000000, 0, -44)], (0)), 100000000, 0, -46), (Tag1 (0, (Tag3 ((("block", 360)), 0, (0)), 100000000, 0, -45), (Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 352)), [((("n")), 100000000, 0, -44)], (0)), 100000000, 0, -43), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -42), 0), 100000000, 0, -41), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0), 100000000, 0, -37), 0, (("src/Partition.mli", 127, 5513, 5513), ("src/Partition.mli", 127, 5513, 5580), 0), 0, Tag1 ("Fix__Partition", 11)), 0); (("iter_all_elements", 364), ((Tag1 (0, (Tag3 ((("t", 353)), [((("n")), 100000000, 0, -35)], (0)), 100000000, 0, -36), (Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 352)), [((("n")), 100000000, 0, -35)], (0)), 100000000, 0, -34), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("src/Partition.mli", 134, 5787, 5787), ("src/Partition.mli", 134, 5787, 5843), 0), 0, Tag1 ("Fix__Partition", 12)), 0); (("choose", 365), ((Tag1 (0, (Tag3 ((("t", 353)), [((("n")), 100000000, 0, -26)], (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 ((("block", 360)), 0, (0)), 100000000, 0, -27), (Tag3 ((("elt", 352)), [((("n")), 100000000, 0, -26)], (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("src/Partition.mli", 140, 6022, 6022), ("src/Partition.mli", 140, 6022, 6058), 0), 0, Tag1 ("Fix__Partition", 13)), 0); (("is_chosen", 366), ((Tag1 (0, (Tag3 ((("t", 353)), [((("n")), 100000000, 0, -21)], (0)), 100000000, 0, -22), (Tag1 (0, (Tag3 ((("elt", 352)), [((("n")), 100000000, 0, -21)], (0)), 100000000, 0, -20), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("src/Partition.mli", 145, 6185, 6185), ("src/Partition.mli", 145, 6185, 6223), 0), 0, Tag1 ("Fix__Partition", 14)), 0); (("exhaust_marked_elements", 367), ((Tag1 (0, (Tag3 ((("t", 353)), [((("n")), 100000000, 0, -14)], (0)), 100000000, 0, -16), (Tag1 (0, (Tag3 ((("block", 360)), 0, (0)), 100000000, 0, -15), (Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 352)), [((("n")), 100000000, 0, -14)], (0)), 100000000, 0, -13), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("src/Partition.mli", 152, 6462, 6462), ("src/Partition.mli", 152, 6462, 6533), 0), 0, Tag1 ("Fix__Partition", 15)), 0); (("get_marked_blocks", 368), ((Tag1 (0, (Tag3 ((("t", 353)), [((("n")), 100000000, 0, -6)], (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("block", 360)), 0, (0)), 100000000, 0, -4)], (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/Partition.mli", 161, 6917, 6917), ("src/Partition.mli", 161, 6917, 6960), 0), 0, Tag1 ("Fix__Partition", 16)), 0)], "Fix__Partition", [("Fix__Partition", ("<\005\233b\130\138\160wl\156jX\011\222g\195")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Fix__Indexing", ("h\211\226\138\235M\018\219\2150\255O\160V\235\238")); ("Fix__", ("\229-\006A\166\175\208\201Y\246\249k\r\n\155i")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val get_marked_blocks : 'n t -> block array
