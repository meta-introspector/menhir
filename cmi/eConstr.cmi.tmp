type t = Evd.econstr
type types = t
type constr = t
type existential = t Constr.pexistential
type case_return = t Constr.pcase_return
type case_branch = t Constr.pcase_branch
type fixpoint = (t, t) Constr.pfixpoint
type cofixpoint = (t, t) Constr.pcofixpoint
type unsafe_judgment = (constr, types) Environ.punsafe_judgment
type unsafe_type_judgment = (types, Evd.esorts) Environ.punsafe_type_judgment
type named_declaration = (constr, types) Context.Named.Declaration.pt
type rel_declaration = (constr, types) Context.Rel.Declaration.pt
type compacted_declaration = (constr, types) Context.Compacted.Declaration.pt
type named_context = (constr, types) Context.Named.pt
type compacted_context = compacted_declaration list
type rel_context = (constr, types) Context.Rel.pt
module ESorts :
  sig
    type t = Evd.esorts
    val make : Sorts.t -> t
    val kind : Evd.evar_map -> t -> Sorts.t
    val equal : Evd.evar_map -> t -> t -> bool
    val is_small : Evd.evar_map -> t -> bool
    val is_prop : Evd.evar_map -> t -> bool
    val is_sprop : Evd.evar_map -> t -> bool
    val is_set : Evd.evar_map -> t -> bool
    val prop : t
    val sprop : t
    val set : t
    val type1 : t
    val super : Evd.evar_map -> t -> t
    val relevance_of_sort : Evd.evar_map -> t -> Sorts.relevance
    val family : Evd.evar_map -> t -> Sorts.family
  end
module EInstance :
  sig
    type t
    val make : Univ.Instance.t -> t
    val kind : Evd.evar_map -> t -> Univ.Instance.t
    val empty : t
    val is_empty : t -> bool
  end
type case_invert = t Constr.pcase_invert
type case = (t, t, EInstance.t) Constr.pcase
type 'a puniverses = 'a * EInstance.t
val kind :
  Evd.evar_map -> t -> (t, t, ESorts.t, EInstance.t) Constr.kind_of_term
val kind_upto :
  Evd.evar_map ->
  Constr.t ->
  (Constr.t, Constr.t, Sorts.t, Univ.Instance.t) Constr.kind_of_term
val to_constr :
  ?abort_on_undefined_evars:bool -> Evd.evar_map -> t -> Constr.t
val to_constr_opt : Evd.evar_map -> t -> Constr.t option
type kind_of_type =
    SortType of ESorts.t
  | CastType of types * t
  | ProdType of Names.Name.t Context.binder_annot * t * t
  | LetInType of Names.Name.t Context.binder_annot * t * t * t
  | AtomicType of t * t array
val kind_of_type : Evd.evar_map -> t -> kind_of_type
val of_kind : (t, t, ESorts.t, EInstance.t) Constr.kind_of_term -> t
val of_constr : Constr.t -> t
val mkRel : int -> t
val mkVar : Names.Id.t -> t
val mkMeta : Constr.metavariable -> t
val mkEvar : t Constr.pexistential -> t
val mkSort : ESorts.t -> t
val mkSProp : t
val mkProp : t
val mkSet : t
val mkType : Univ.Universe.t -> t
val mkCast : t * Constr.cast_kind * t -> t
val mkProd : Names.Name.t Context.binder_annot * t * t -> t
val mkLambda : Names.Name.t Context.binder_annot * t * t -> t
val mkLetIn : Names.Name.t Context.binder_annot * t * t * t -> t
val mkApp : t * t array -> t
val mkConstU : Names.Constant.t * EInstance.t -> t
val mkProj : Names.Projection.t * t -> t
val mkIndU : Names.inductive * EInstance.t -> t
val mkConstructU : Names.constructor * EInstance.t -> t
val mkConstructUi : (Names.inductive * EInstance.t) * int -> t
val mkCase : case -> t
val mkFix : (t, t) Constr.pfixpoint -> t
val mkCoFix : (t, t) Constr.pcofixpoint -> t
val mkArrow : t -> Sorts.relevance -> t -> t
val mkArrowR : t -> t -> t
val mkInt : Uint63.t -> t
val mkFloat : Float64.t -> t
val mkArray : EInstance.t * t array * t * t -> t
module UnsafeMonomorphic :
  sig
    val mkConst : Names.Constant.t -> t
    val mkInd : Names.inductive -> t
    val mkConstruct : Names.constructor -> t
  end
val mkConst : Names.Constant.t -> t
val mkInd : Names.inductive -> t
val mkConstruct : Names.constructor -> t
val mkRef : Names.GlobRef.t * EInstance.t -> t
val type1 : t
val applist : t * t list -> t
val applistc : t -> t list -> t
val it_mkProd : t -> (Names.Name.t Context.binder_annot * t) list -> t
val it_mkLambda : t -> (Names.Name.t Context.binder_annot * t) list -> t
val mkProd_or_LetIn : rel_declaration -> t -> t
val mkLambda_or_LetIn : rel_declaration -> t -> t
val it_mkProd_or_LetIn : t -> rel_context -> t
val it_mkLambda_or_LetIn : t -> rel_context -> t
val mkProd_wo_LetIn : rel_declaration -> t -> t
val mkLambda_wo_LetIn : rel_declaration -> t -> t
val it_mkProd_wo_LetIn : t -> rel_context -> t
val it_mkLambda_wo_LetIn : t -> rel_context -> t
val mkNamedProd :
  Evd.evar_map -> Names.Id.t Context.binder_annot -> types -> types -> types
val mkNamedLambda :
  Evd.evar_map ->
  Names.Id.t Context.binder_annot -> types -> constr -> constr
val mkNamedLetIn :
  Evd.evar_map ->
  Names.Id.t Context.binder_annot -> constr -> types -> constr -> constr
val mkNamedProd_or_LetIn :
  Evd.evar_map -> named_declaration -> types -> types
val mkNamedLambda_or_LetIn :
  Evd.evar_map -> named_declaration -> types -> types
val it_mkNamedProd_or_LetIn : Evd.evar_map -> t -> named_context -> t
val it_mkNamedLambda_or_LetIn : Evd.evar_map -> t -> named_context -> t
val mkNamedProd_wo_LetIn : Evd.evar_map -> named_declaration -> t -> t
val it_mkNamedProd_wo_LetIn : Evd.evar_map -> t -> named_context -> t
val mkLEvar : Evd.evar_map -> Evar.t * t list -> t
val isRel : Evd.evar_map -> t -> bool
val isVar : Evd.evar_map -> t -> bool
val isInd : Evd.evar_map -> t -> bool
val isRef : Evd.evar_map -> t -> bool
val isEvar : Evd.evar_map -> t -> bool
val isMeta : Evd.evar_map -> t -> bool
val isSort : Evd.evar_map -> t -> bool
val isCast : Evd.evar_map -> t -> bool
val isApp : Evd.evar_map -> t -> bool
val isLambda : Evd.evar_map -> t -> bool
val isLetIn : Evd.evar_map -> t -> bool
val isProd : Evd.evar_map -> t -> bool
val isConst : Evd.evar_map -> t -> bool
val isConstruct : Evd.evar_map -> t -> bool
val isFix : Evd.evar_map -> t -> bool
val isCoFix : Evd.evar_map -> t -> bool
val isCase : Evd.evar_map -> t -> bool
val isProj : Evd.evar_map -> t -> bool
val isType : Evd.evar_map -> constr -> bool
type arity = rel_context * ESorts.t
val destArity : Evd.evar_map -> types -> arity
val isArity : Evd.evar_map -> t -> bool
val isVarId : Evd.evar_map -> Names.Id.t -> t -> bool
val isRelN : Evd.evar_map -> int -> t -> bool
val isRefX : Environ.env -> Evd.evar_map -> Names.GlobRef.t -> t -> bool
val is_lib_ref : Environ.env -> Evd.evar_map -> string -> t -> bool
val destRel : Evd.evar_map -> t -> int
val destMeta : Evd.evar_map -> t -> Constr.metavariable
val destVar : Evd.evar_map -> t -> Names.Id.t
val destSort : Evd.evar_map -> t -> ESorts.t
val destCast : Evd.evar_map -> t -> t * Constr.cast_kind * t
val destProd :
  Evd.evar_map -> t -> Names.Name.t Context.binder_annot * types * types
val destLambda :
  Evd.evar_map -> t -> Names.Name.t Context.binder_annot * types * t
val destLetIn :
  Evd.evar_map -> t -> Names.Name.t Context.binder_annot * t * types * t
val destApp : Evd.evar_map -> t -> t * t array
val destConst : Evd.evar_map -> t -> Names.Constant.t * EInstance.t
val destEvar : Evd.evar_map -> t -> t Constr.pexistential
val destInd : Evd.evar_map -> t -> Names.inductive * EInstance.t
val destConstruct : Evd.evar_map -> t -> Names.constructor * EInstance.t
val destCase : Evd.evar_map -> t -> case
val destProj : Evd.evar_map -> t -> Names.Projection.t * t
val destFix : Evd.evar_map -> t -> (t, t) Constr.pfixpoint
val destCoFix : Evd.evar_map -> t -> (t, t) Constr.pcofixpoint
val destRef : Evd.evar_map -> t -> Names.GlobRef.t * EInstance.t
val decompose_app : Evd.evar_map -> t -> t * t array
val decompose_app_list : Evd.evar_map -> t -> t * t list
val decompose_lambda :
  Evd.evar_map -> t -> (Names.Name.t Context.binder_annot * t) list * t
val decompose_lambda_decls : Evd.evar_map -> t -> rel_context * t
val decompose_lambda_n_assum : Evd.evar_map -> int -> t -> rel_context * t
val decompose_lambda_n_decls : Evd.evar_map -> int -> t -> rel_context * t
val prod_decls : Evd.evar_map -> t -> rel_context
val compose_lam : (Names.Name.t Context.binder_annot * t) list -> t -> t
val to_lambda : Evd.evar_map -> int -> t -> t
val decompose_prod :
  Evd.evar_map -> t -> (Names.Name.t Context.binder_annot * t) list * t
val decompose_prod_decls : Evd.evar_map -> t -> rel_context * t
val decompose_prod_n_decls : Evd.evar_map -> int -> t -> rel_context * t
val existential_type : Evd.evar_map -> existential -> types
val whd_evar : Evd.evar_map -> constr -> constr
val eq_constr : Evd.evar_map -> t -> t -> bool
val eq_constr_nounivs : Evd.evar_map -> t -> t -> bool
val eq_constr_universes :
  Environ.env ->
  Evd.evar_map -> ?nargs:int -> t -> t -> UnivProblem.Set.t option
val leq_constr_universes :
  Environ.env ->
  Evd.evar_map -> ?nargs:int -> t -> t -> UnivProblem.Set.t option
val eq_existential :
  Evd.evar_map -> (t -> t -> bool) -> existential -> existential -> bool
val eq_constr_universes_proj :
  Environ.env -> Evd.evar_map -> t -> t -> UnivProblem.Set.t option
val compare_constr : Evd.evar_map -> (t -> t -> bool) -> t -> t -> bool
val map : Evd.evar_map -> (t -> t) -> t -> t
val map_with_binders :
  Evd.evar_map -> ('a -> 'a) -> ('a -> t -> t) -> 'a -> t -> t
val map_branches : (t -> t) -> case_branch array -> case_branch array
val map_return_predicate : (t -> t) -> case_return -> case_return
val map_existential : Evd.evar_map -> (t -> t) -> existential -> existential
val iter : Evd.evar_map -> (t -> unit) -> t -> unit
val iter_with_binders :
  Evd.evar_map -> ('a -> 'a) -> ('a -> t -> unit) -> 'a -> t -> unit
val iter_with_full_binders :
  Environ.env ->
  Evd.evar_map ->
  (rel_declaration -> 'a -> 'a) -> ('a -> t -> unit) -> 'a -> t -> unit
val fold : Evd.evar_map -> ('a -> t -> 'a) -> 'a -> t -> 'a
val fold_with_binders :
  Evd.evar_map -> ('a -> 'a) -> ('a -> 'b -> t -> 'b) -> 'a -> 'b -> t -> 'b
val universes_of_constr : Evd.evar_map -> t -> Univ.Level.Set.t
module Vars :
  sig
    type instance = t array
    type instance_list = t list
    type substl = t list
    val lift : int -> t -> t
    val liftn : int -> int -> t -> t
    val substnl : substl -> int -> t -> t
    val substl : substl -> t -> t
    val subst1 : t -> t -> t
    val substnl_decl : substl -> int -> rel_declaration -> rel_declaration
    val substl_decl : substl -> rel_declaration -> rel_declaration
    val subst1_decl : t -> rel_declaration -> rel_declaration
    val replace_vars : Evd.evar_map -> (Names.Id.t * t) list -> t -> t
    val substn_vars : Evd.evar_map -> int -> Names.Id.t list -> t -> t
    val subst_vars : Evd.evar_map -> Names.Id.t list -> t -> t
    val subst_var : Evd.evar_map -> Names.Id.t -> t -> t
    val noccurn : Evd.evar_map -> int -> t -> bool
    val noccur_between : Evd.evar_map -> int -> int -> t -> bool
    val closedn : Evd.evar_map -> int -> t -> bool
    val closed0 : Evd.evar_map -> t -> bool
    val subst_univs_level_constr : Univ.universe_level_subst -> t -> t
    val subst_instance_context :
      Univ.Instance.t -> rel_context -> rel_context
    val subst_instance_constr : Univ.Instance.t -> t -> t
    val subst_of_rel_context_instance : rel_context -> instance -> substl
    val subst_of_rel_context_instance_list :
      rel_context -> instance_list -> substl
    val liftn_rel_context : int -> int -> rel_context -> rel_context
    val lift_rel_context : int -> rel_context -> rel_context
    val substnl_rel_context : substl -> int -> rel_context -> rel_context
    val substl_rel_context : substl -> rel_context -> rel_context
    val smash_rel_context : rel_context -> rel_context
    val esubst : (int -> 'a -> t) -> 'a Esubst.subs -> t -> t
    type substituend
    val make_substituend : t -> substituend
    val lift_substituend : int -> substituend -> t
  end
val push_rel : rel_declaration -> Environ.env -> Environ.env
val push_rel_context : rel_context -> Environ.env -> Environ.env
val push_rec_types :
  (t, t) Constr.prec_declaration -> Environ.env -> Environ.env
val push_named : named_declaration -> Environ.env -> Environ.env
val push_named_context : named_context -> Environ.env -> Environ.env
val push_named_context_val :
  named_declaration -> Environ.named_context_val -> Environ.named_context_val
val rel_context : Environ.env -> rel_context
val named_context : Environ.env -> named_context
val val_of_named_context : named_context -> Environ.named_context_val
val named_context_of_val : Environ.named_context_val -> named_context
val lookup_rel : int -> Environ.env -> rel_declaration
val lookup_named : Names.variable -> Environ.env -> named_declaration
val lookup_named_val :
  Names.variable -> Environ.named_context_val -> named_declaration
val map_rel_context_in_env :
  (Environ.env -> constr -> constr) ->
  Environ.env -> rel_context -> rel_context
val match_named_context_val :
  Environ.named_context_val ->
  (named_declaration * Environ.named_context_val) option
val identity_subst_val : Environ.named_context_val -> t SList.t
val fresh_global :
  ?loc:Loc.t ->
  ?rigid:Evd.rigid ->
  ?names:Univ.Instance.t ->
  Environ.env -> Evd.evar_map -> Names.GlobRef.t -> Evd.evar_map * t
val is_global : Environ.env -> Evd.evar_map -> Names.GlobRef.t -> t -> bool
val expand_case :
  Environ.env ->
  Evd.evar_map -> case -> Constr.case_info * t * case_invert * t * t array
val annotate_case :
  Environ.env ->
  Evd.evar_map ->
  case ->
  Constr.case_info * EInstance.t * t array * (rel_context * t) *
  case_invert * t * (rel_context * t) array
val expand_branch :
  Environ.env ->
  Evd.evar_map ->
  EInstance.t -> t array -> Names.constructor -> case_branch -> rel_context
val contract_case :
  Environ.env ->
  Evd.evar_map -> Constr.case_info * t * case_invert * t * t array -> case
val of_existential : Constr.existential -> existential
val of_named_decl :
  (Constr.t, Constr.types) Context.Named.Declaration.pt ->
  (t, types) Context.Named.Declaration.pt
val of_rel_decl :
  (Constr.t, Constr.types) Context.Rel.Declaration.pt ->
  (t, types) Context.Rel.Declaration.pt
val to_rel_decl :
  Evd.evar_map ->
  (t, types) Context.Rel.Declaration.pt ->
  (Constr.t, Constr.types) Context.Rel.Declaration.pt
val of_named_context : Constr.named_context -> named_context
val of_rel_context : Constr.rel_context -> rel_context
val of_case_invert : Constr.case_invert -> case_invert
val of_constr_array : Constr.t array -> t array
module Unsafe :
  sig
    val to_constr : t -> Constr.t
    val to_constr_array : t array -> Constr.t array
    val to_rel_decl :
      (t, types) Context.Rel.Declaration.pt ->
      (Constr.t, Constr.types) Context.Rel.Declaration.pt
    val to_named_decl :
      (t, types) Context.Named.Declaration.pt ->
      (Constr.t, Constr.types) Context.Named.Declaration.pt
    val to_named_context :
      (t, types) Context.Named.pt -> Constr.named_context
    val to_rel_context : (t, types) Context.Rel.pt -> Constr.rel_context
    val to_sorts : ESorts.t -> Sorts.t
    val to_instance : EInstance.t -> Univ.Instance.t
    val to_case_invert : case_invert -> Constr.case_invert
    val eq : (t, Constr.t) CSig.eq
  end
val decompose_lambda_assum : Evd.evar_map -> t -> rel_context * t
val decompose_prod_assum : Evd.evar_map -> t -> rel_context * t
val decompose_prod_n_assum : Evd.evar_map -> int -> t -> rel_context * t
val prod_assum : Evd.evar_map -> t -> rel_context
val decompose_lam :
  Evd.evar_map -> t -> (Names.Name.t Context.binder_annot * t) list * t
val decompose_lam_n_assum : Evd.evar_map -> int -> t -> rel_context * t
val decompose_lam_n_decls : Evd.evar_map -> int -> t -> rel_context * t
("DEBUG:rule", [Tag1 (("t", 1685), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Evd")), "econstr"), 0, (0)), 100000000, 0, -1239)), 0, 0, 0, 0, (("engine/eConstr.mli", 16, 723, 723), ("engine/eConstr.mli", 16, 723, 743), 0), 0, 0, 0, Tag1 ("EConstr", 1)), 1, 0); Tag1 (("types", 1686), (0, 0, 0, 1, ((Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1238)), 0, 0, 0, 0, (("engine/eConstr.mli", 20, 884, 884), ("engine/eConstr.mli", 20, 884, 898), 0), 0, 0, 0, Tag1 ("EConstr", 2)), 1, 0); Tag1 (("constr", 1687), (0, 0, 0, 1, ((Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1237)), 0, 0, 0, 0, (("engine/eConstr.mli", 21, 899, 899), ("engine/eConstr.mli", 21, 899, 914), 0), 0, 0, 0, Tag1 ("EConstr", 3)), 1, 0); Tag1 (("existential", 1688), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Constr")), "pexistential"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1236)], (0)), 100000000, 0, -1235)), 0, 0, 0, 0, (("engine/eConstr.mli", 22, 915, 915), ("engine/eConstr.mli", 22, 915, 948), 0), 0, 0, 0, Tag1 ("EConstr", 4)), 1, 0); Tag1 (("case_return", 1689), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Constr")), "pcase_return"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1234)], (0)), 100000000, 0, -1233)), 0, 0, 0, 0, (("engine/eConstr.mli", 23, 949, 949), ("engine/eConstr.mli", 23, 949, 982), 0), 0, 0, 0, Tag1 ("EConstr", 5)), 1, 0); Tag1 (("case_branch", 1690), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Constr")), "pcase_branch"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1232)], (0)), 100000000, 0, -1231)), 0, 0, 0, 0, (("engine/eConstr.mli", 24, 983, 983), ("engine/eConstr.mli", 24, 983, 1016), 0), 0, 0, 0, Tag1 ("EConstr", 6)), 1, 0); Tag1 (("fixpoint", 1691), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Constr")), "pfixpoint"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1229); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1230)], (0)), 100000000, 0, -1228)), 0, 0, 0, 0, (("engine/eConstr.mli", 25, 1017, 1017), ("engine/eConstr.mli", 25, 1017, 1049), 0), 0, 0, 0, Tag1 ("EConstr", 7)), 1, 0); Tag1 (("cofixpoint", 1692), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Constr")), "pcofixpoint"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1226); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1227)], (0)), 100000000, 0, -1225)), 0, 0, 0, 0, (("engine/eConstr.mli", 26, 1050, 1050), ("engine/eConstr.mli", 26, 1050, 1086), 0), 0, 0, 0, Tag1 ("EConstr", 8)), 1, 0); Tag1 (("unsafe_judgment", 1693), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Environ")), "punsafe_judgment"), [(Tag3 ((("constr", 1687)), 0, (0)), 100000000, 0, -1223); (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -1224)], (0)), 100000000, 0, -1222)), 0, 0, 0, 0, (("engine/eConstr.mli", 27, 1087, 1087), ("engine/eConstr.mli", 27, 1087, 1150), 0), 0, 0, 0, Tag1 ("EConstr", 9)), 1, 0); Tag1 (("unsafe_type_judgment", 1694), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Environ")), "punsafe_type_judgment"), [(Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -1220); (Tag3 (Tag1 ((Tag2 ("Evd")), "esorts"), 0, (0)), 100000000, 0, -1221)], (0)), 100000000, 0, -1219)), 0, 0, 0, 0, (("engine/eConstr.mli", 28, 1151, 1151), ("engine/eConstr.mli", 28, 1151, 1228), 0), 0, 0, 0, Tag1 ("EConstr", 10)), 1, 0); Tag1 (("named_declaration", 1695), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Context")), "Named"), "Declaration"), "pt"), [(Tag3 ((("constr", 1687)), 0, (0)), 100000000, 0, -1217); (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -1218)], (0)), 100000000, 0, -1216)), 0, 0, 0, 0, (("engine/eConstr.mli", 29, 1229, 1229), ("engine/eConstr.mli", 29, 1229, 1298), 0), 0, 0, 0, Tag1 ("EConstr", 11)), 1, 0); Tag1 (("rel_declaration", 1696), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Context")), "Rel"), "Declaration"), "pt"), [(Tag3 ((("constr", 1687)), 0, (0)), 100000000, 0, -1214); (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -1215)], (0)), 100000000, 0, -1213)), 0, 0, 0, 0, (("engine/eConstr.mli", 30, 1299, 1299), ("engine/eConstr.mli", 30, 1299, 1364), 0), 0, 0, 0, Tag1 ("EConstr", 12)), 1, 0); Tag1 (("compacted_declaration", 1697), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Context")), "Compacted"), "Declaration"), "pt"), [(Tag3 ((("constr", 1687)), 0, (0)), 100000000, 0, -1211); (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -1212)], (0)), 100000000, 0, -1210)), 0, 0, 0, 0, (("engine/eConstr.mli", 31, 1365, 1365), ("engine/eConstr.mli", 31, 1365, 1442), 0), 0, 0, 0, Tag1 ("EConstr", 13)), 1, 0); Tag1 (("named_context", 1698), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Context")), "Named"), "pt"), [(Tag3 ((("constr", 1687)), 0, (0)), 100000000, 0, -1208); (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -1209)], (0)), 100000000, 0, -1207)), 0, 0, 0, 0, (("engine/eConstr.mli", 32, 1443, 1443), ("engine/eConstr.mli", 32, 1443, 1496), 0), 0, 0, 0, Tag1 ("EConstr", 14)), 1, 0); Tag1 (("compacted_context", 1699), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("compacted_declaration", 1697)), 0, (0)), 100000000, 0, -1206)], (0)), 100000000, 0, -1205)), 0, 0, 0, 0, (("engine/eConstr.mli", 33, 1497, 1497), ("engine/eConstr.mli", 33, 1497, 1548), 0), 0, 0, 0, Tag1 ("EConstr", 15)), 1, 0); Tag1 (("rel_context", 1700), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Context")), "Rel"), "pt"), [(Tag3 ((("constr", 1687)), 0, (0)), 100000000, 0, -1203); (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -1204)], (0)), 100000000, 0, -1202)), 0, 0, 0, 0, (("engine/eConstr.mli", 34, 1549, 1549), ("engine/eConstr.mli", 34, 1549, 1598), 0), 0, 0, 0, Tag1 ("EConstr", 16)), 1, 0); Tag3 (("ESorts", 1701), 0, (Tag1 ([Tag1 (("t", 1885), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Evd")), "esorts"), 0, (0)), 100000000, 0, -1294)), 0, 0, 0, 0, (("engine/eConstr.mli", 40, 1651, 1653), ("engine/eConstr.mli", 40, 1651, 1672), 0), 0, 0, 0, Tag1 ("EConstr", 17)), 1, 0); (("make", 1886), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sorts")), "t"), 0, (0)), 100000000, 0, -1293), (Tag3 ((("t", 1885)), 0, (0)), 100000000, 0, -1292), 0), 100000000, 0, -1291), 0, (("engine/eConstr.mli", 44, 1813, 1815), ("engine/eConstr.mli", 44, 1813, 1838), 0), 0, Tag1 ("EConstr", 18)), 0); (("kind", 1887), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -1290), (Tag1 (0, (Tag3 ((("t", 1885)), 0, (0)), 100000000, 0, -1289), (Tag3 (Tag1 ((Tag2 ("Sorts")), "t"), 0, (0)), 100000000, 0, -1288), 0), 100000000, 0, -1287), 0), 100000000, 0, -1286), 0, (("engine/eConstr.mli", 47, 1881, 1883), ("engine/eConstr.mli", 47, 1881, 1922), 0), 0, Tag1 ("EConstr", 19)), 0); (("equal", 1888), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -1285), (Tag1 (0, (Tag3 ((("t", 1885)), 0, (0)), 100000000, 0, -1284), (Tag1 (0, (Tag3 ((("t", 1885)), 0, (0)), 100000000, 0, -1283), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1282), 0), 100000000, 0, -1281), 0), 100000000, 0, -1280), 0), 100000000, 0, -1279), 0, (("engine/eConstr.mli", 51, 2073, 2075), ("engine/eConstr.mli", 51, 2073, 2117), 0), 0, Tag1 ("EConstr", 20)), 0); (("is_small", 1889), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -1278), (Tag1 (0, (Tag3 ((("t", 1885)), 0, (0)), 100000000, 0, -1277), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1276), 0), 100000000, 0, -1275), 0), 100000000, 0, -1274), 0, (("engine/eConstr.mli", 53, 2119, 2121), ("engine/eConstr.mli", 53, 2119, 2161), 0), 0, Tag1 ("EConstr", 21)), 0); (("is_prop", 1890), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -1273), (Tag1 (0, (Tag3 ((("t", 1885)), 0, (0)), 100000000, 0, -1272), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1271), 0), 100000000, 0, -1270), 0), 100000000, 0, -1269), 0, (("engine/eConstr.mli", 54, 2162, 2164), ("engine/eConstr.mli", 54, 2162, 2203), 0), 0, Tag1 ("EConstr", 22)), 0); (("is_sprop", 1891), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -1268), (Tag1 (0, (Tag3 ((("t", 1885)), 0, (0)), 100000000, 0, -1267), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1266), 0), 100000000, 0, -1265), 0), 100000000, 0, -1264), 0, (("engine/eConstr.mli", 55, 2204, 2206), ("engine/eConstr.mli", 55, 2204, 2246), 0), 0, Tag1 ("EConstr", 23)), 0); (("is_set", 1892), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -1263), (Tag1 (0, (Tag3 ((("t", 1885)), 0, (0)), 100000000, 0, -1262), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1261), 0), 100000000, 0, -1260), 0), 100000000, 0, -1259), 0, (("engine/eConstr.mli", 56, 2247, 2249), ("engine/eConstr.mli", 56, 2247, 2287), 0), 0, Tag1 ("EConstr", 24)), 0); (("prop", 1893), ((Tag3 ((("t", 1885)), 0, (0)), 100000000, 0, -1258), 0, (("engine/eConstr.mli", 58, 2289, 2291), ("engine/eConstr.mli", 58, 2289, 2303), 0), 0, Tag1 ("EConstr", 25)), 0); (("sprop", 1894), ((Tag3 ((("t", 1885)), 0, (0)), 100000000, 0, -1257), 0, (("engine/eConstr.mli", 59, 2304, 2306), ("engine/eConstr.mli", 59, 2304, 2319), 0), 0, Tag1 ("EConstr", 26)), 0); (("set", 1895), ((Tag3 ((("t", 1885)), 0, (0)), 100000000, 0, -1256), 0, (("engine/eConstr.mli", 60, 2320, 2322), ("engine/eConstr.mli", 60, 2320, 2333), 0), 0, Tag1 ("EConstr", 27)), 0); (("type1", 1896), ((Tag3 ((("t", 1885)), 0, (0)), 100000000, 0, -1255), 0, (("engine/eConstr.mli", 61, 2334, 2336), ("engine/eConstr.mli", 61, 2334, 2349), 0), 0, Tag1 ("EConstr", 28)), 0); (("super", 1897), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -1254), (Tag1 (0, (Tag3 ((("t", 1885)), 0, (0)), 100000000, 0, -1253), (Tag3 ((("t", 1885)), 0, (0)), 100000000, 0, -1252), 0), 100000000, 0, -1251), 0), 100000000, 0, -1250), 0, (("engine/eConstr.mli", 63, 2351, 2353), ("engine/eConstr.mli", 63, 2351, 2387), 0), 0, Tag1 ("EConstr", 29)), 0); (("relevance_of_sort", 1898), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -1249), (Tag1 (0, (Tag3 ((("t", 1885)), 0, (0)), 100000000, 0, -1248), (Tag3 (Tag1 ((Tag2 ("Sorts")), "relevance"), 0, (0)), 100000000, 0, -1247), 0), 100000000, 0, -1246), 0), 100000000, 0, -1245), 0, (("engine/eConstr.mli", 65, 2389, 2391), ("engine/eConstr.mli", 65, 2389, 2451), 0), 0, Tag1 ("EConstr", 30)), 0); (("family", 1899), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -1244), (Tag1 (0, (Tag3 ((("t", 1885)), 0, (0)), 100000000, 0, -1243), (Tag3 (Tag1 ((Tag2 ("Sorts")), "family"), 0, (0)), 100000000, 0, -1242), 0), 100000000, 0, -1241), 0), 100000000, 0, -1240), 0, (("engine/eConstr.mli", 67, 2453, 2455), ("engine/eConstr.mli", 67, 2453, 2501), 0), 0, Tag1 ("EConstr", 31)), 0)]), 0, (("engine/eConstr.mli", 38, 1631, 1631), ("engine/eConstr.mli", 69, 2503, 2506), 0), Tag1 ("EConstr", 32)), 0, 0); Tag3 (("EInstance", 1702), 0, (Tag1 ([Tag1 (("t", 1900), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("engine/eConstr.mli", 73, 2531, 2533), ("engine/eConstr.mli", 73, 2531, 2539), 0), 0, 0, 0, Tag1 ("EConstr", 33)), 1, 0); (("make", 1901), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Instance"), "t"), 0, (0)), 100000000, 0, -1306), (Tag3 ((("t", 1900)), 0, (0)), 100000000, 0, -1305), 0), 100000000, 0, -1304), 0, (("engine/eConstr.mli", 77, 2656, 2658), ("engine/eConstr.mli", 77, 2656, 2689), 0), 0, Tag1 ("EConstr", 34)), 0); (("kind", 1902), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -1303), (Tag1 (0, (Tag3 ((("t", 1900)), 0, (0)), 100000000, 0, -1302), (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Instance"), "t"), 0, (0)), 100000000, 0, -1301), 0), 100000000, 0, -1300), 0), 100000000, 0, -1299), 0, (("engine/eConstr.mli", 78, 2690, 2692), ("engine/eConstr.mli", 78, 2690, 2739), 0), 0, Tag1 ("EConstr", 35)), 0); (("empty", 1903), ((Tag3 ((("t", 1900)), 0, (0)), 100000000, 0, -1298), 0, (("engine/eConstr.mli", 79, 2740, 2742), ("engine/eConstr.mli", 79, 2740, 2755), 0), 0, Tag1 ("EConstr", 36)), 0); (("is_empty", 1904), ((Tag1 (0, (Tag3 ((("t", 1900)), 0, (0)), 100000000, 0, -1297), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1296), 0), 100000000, 0, -1295), 0, (("engine/eConstr.mli", 80, 2756, 2758), ("engine/eConstr.mli", 80, 2756, 2782), 0), 0, Tag1 ("EConstr", 37)), 0)]), 0, (("engine/eConstr.mli", 71, 2508, 2508), ("engine/eConstr.mli", 81, 2783, 2786), 0), Tag1 ("EConstr", 38)), 0, 0); Tag1 (("case_invert", 1703), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Constr")), "pcase_invert"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1201)], (0)), 100000000, 0, -1200)), 0, 0, 0, 0, (("engine/eConstr.mli", 83, 2788, 2788), ("engine/eConstr.mli", 83, 2788, 2821), 0), 0, 0, 0, Tag1 ("EConstr", 39)), 1, 0); Tag1 (("case", 1704), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Constr")), "pcase"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1197); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1198); (Tag3 (Tag1 ((("EInstance", 1702)), "t"), 0, (0)), 100000000, 0, -1199)], (0)), 100000000, 0, -1196)), 0, 0, 0, 0, (("engine/eConstr.mli", 84, 2822, 2822), ("engine/eConstr.mli", 84, 2822, 2859), 0), 0, 0, 0, Tag1 ("EConstr", 40)), 1, 0); Tag1 (("puniverses", 1705), ([((("a")), 100000000, 0, -1194)], 1, 0, 1, ((Tag2 ([((("a")), 100000000, 0, -1194); (Tag3 (Tag1 ((("EInstance", 1702)), "t"), 0, (0)), 100000000, 0, -1195)]), 100000000, 0, -1193)), [25], [0], 0, 0, (("engine/eConstr.mli", 86, 2861, 2861), ("engine/eConstr.mli", 86, 2861, 2898), 0), 0, 0, 0, Tag1 ("EConstr", 41)), 1, 0); (("kind", 1706), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -1192), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1191), (Tag3 (Tag1 ((Tag2 ("Constr")), "kind_of_term"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1187); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1188); (Tag3 (Tag1 ((("ESorts", 1701)), "t"), 0, (0)), 100000000, 0, -1189); (Tag3 (Tag1 ((("EInstance", 1702)), "t"), 0, (0)), 100000000, 0, -1190)], (0)), 100000000, 0, -1186), 0), 100000000, 0, -1185), 0), 100000000, 0, -1184), 0, (("engine/eConstr.mli", 90, 2924, 2924), ("engine/eConstr.mli", 90, 2924, 3005), 0), 0, Tag1 ("EConstr", 42)), 0); (("kind_upto", 1707), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -1183), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "t"), 0, (0)), 100000000, 0, -1182), (Tag3 (Tag1 ((Tag2 ("Constr")), "kind_of_term"), [(Tag3 (Tag1 ((Tag2 ("Constr")), "t"), 0, (0)), 100000000, 0, -1178); (Tag3 (Tag1 ((Tag2 ("Constr")), "t"), 0, (0)), 100000000, 0, -1179); (Tag3 (Tag1 ((Tag2 ("Sorts")), "t"), 0, (0)), 100000000, 0, -1180); (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Instance"), "t"), 0, (0)), 100000000, 0, -1181)], (0)), 100000000, 0, -1177), 0), 100000000, 0, -1176), 0), 100000000, 0, -1175), 0, (("engine/eConstr.mli", 94, 3107, 3107), ("engine/eConstr.mli", 94, 3107, 3217), 0), 0, Tag1 ("EConstr", 43)), 0); (("to_constr", 1708), ((Tag1 (Tag1 ("abort_on_undefined_evars"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1174)], (0)), 100000000, 0, -1173), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -1172), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1171), (Tag3 (Tag1 ((Tag2 ("Constr")), "t"), 0, (0)), 100000000, 0, -1170), 0), 100000000, 0, -1169), 0), 100000000, 0, -1168), 0), 100000000, 0, -1167), 0, (("engine/eConstr.mli", 96, 3219, 3219), ("engine/eConstr.mli", 96, 3219, 3298), 0), 0, Tag1 ("EConstr", 44)), 0); (("to_constr_opt", 1709), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -1166), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1165), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "t"), 0, (0)), 100000000, 0, -1164)], (0)), 100000000, 0, -1163), 0), 100000000, 0, -1162), 0), 100000000, 0, -1161), 0, (("engine/eConstr.mli", 105, 3647, 3647), ("engine/eConstr.mli", 105, 3647, 3703), 0), 0, Tag1 ("EConstr", 45)), 0); Tag1 (("kind_of_type", 1710), (0, 0, Tag1 ([(("SortType", 1153), ([(Tag3 (Tag1 ((("ESorts", 1701)), "t"), 0, (0)), 100000000, 0, -1146)]), 0, (("engine/eConstr.mli", 109, 3804, 3806), ("engine/eConstr.mli", 109, 3804, 3830), 0), 0, Tag1 ("EConstr", 47)); (("CastType", 1154), ([(Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -1147); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1148)]), 0, (("engine/eConstr.mli", 110, 3831, 3833), ("engine/eConstr.mli", 110, 3831, 3858), 0), 0, Tag1 ("EConstr", 48)); (("ProdType", 1155), ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -1150)], (0)), 100000000, 0, -1149); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1151); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1152)]), 0, (("engine/eConstr.mli", 111, 3859, 3861), ("engine/eConstr.mli", 111, 3859, 3912), 0), 0, Tag1 ("EConstr", 49)); (("LetInType", 1156), ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -1154)], (0)), 100000000, 0, -1153); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1155); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1156); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1157)]), 0, (("engine/eConstr.mli", 112, 3913, 3915), ("engine/eConstr.mli", 112, 3913, 3970), 0), 0, Tag1 ("EConstr", 50)); (("AtomicType", 1157), ([(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1158); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1160)], (0)), 100000000, 0, -1159)]), 0, (("engine/eConstr.mli", 113, 3971, 3973), ("engine/eConstr.mli", 113, 3971, 4000), 0), 0, Tag1 ("EConstr", 51))], 0), 1, 0, 0, 0, 0, 0, (("engine/eConstr.mli", 108, 3784, 3784), ("engine/eConstr.mli", 113, 3971, 4000), 0), 0, 0, 0, Tag1 ("EConstr", 46)), 1, 0); (("kind_of_type", 1711), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -1145), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1144), (Tag3 ((("kind_of_type", 1710)), 0, (0)), 100000000, 0, -1143), 0), 100000000, 0, -1142), 0), 100000000, 0, -1141), 0, (("engine/eConstr.mli", 115, 4002, 4002), ("engine/eConstr.mli", 115, 4002, 4054), 0), 0, Tag1 ("EConstr", 52)), 0); (("of_kind", 1712), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "kind_of_term"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1137); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1138); (Tag3 (Tag1 ((("ESorts", 1701)), "t"), 0, (0)), 100000000, 0, -1139); (Tag3 (Tag1 ((("EInstance", 1702)), "t"), 0, (0)), 100000000, 0, -1140)], (0)), 100000000, 0, -1136), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1135), 0), 100000000, 0, -1134), 0, (("engine/eConstr.mli", 119, 4081, 4081), ("engine/eConstr.mli", 119, 4081, 4149), 0), 0, Tag1 ("EConstr", 53)), 0); (("of_constr", 1713), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "t"), 0, (0)), 100000000, 0, -1133), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1132), 0), 100000000, 0, -1131), 0, (("engine/eConstr.mli", 122, 4188, 4188), ("engine/eConstr.mli", 122, 4188, 4217), 0), 0, Tag1 ("EConstr", 54)), 0); (("mkRel", 1714), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1130), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1129), 0), 100000000, 0, -1128), 0, (("engine/eConstr.mli", 134, 4454, 4454), ("engine/eConstr.mli", 134, 4454, 4474), 0), 0, Tag1 ("EConstr", 55)), 0); (("mkVar", 1715), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -1127), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1126), 0), 100000000, 0, -1125), 0, (("engine/eConstr.mli", 135, 4475, 4475), ("engine/eConstr.mli", 135, 4475, 4496), 0), 0, Tag1 ("EConstr", 56)), 0); (("mkMeta", 1716), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "metavariable"), 0, (0)), 100000000, 0, -1124), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1123), 0), 100000000, 0, -1122), 0, (("engine/eConstr.mli", 136, 4497, 4497), ("engine/eConstr.mli", 136, 4497, 4527), 0), 0, Tag1 ("EConstr", 57)), 0); (("mkEvar", 1717), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pexistential"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1121)], (0)), 100000000, 0, -1120), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1119), 0), 100000000, 0, -1118), 0, (("engine/eConstr.mli", 137, 4528, 4528), ("engine/eConstr.mli", 137, 4528, 4560), 0), 0, Tag1 ("EConstr", 58)), 0); (("mkSort", 1718), ((Tag1 (0, (Tag3 (Tag1 ((("ESorts", 1701)), "t"), 0, (0)), 100000000, 0, -1117), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1116), 0), 100000000, 0, -1115), 0, (("engine/eConstr.mli", 138, 4561, 4561), ("engine/eConstr.mli", 138, 4561, 4587), 0), 0, Tag1 ("EConstr", 59)), 0); (("mkSProp", 1719), ((Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1114), 0, (("engine/eConstr.mli", 139, 4588, 4588), ("engine/eConstr.mli", 139, 4588, 4603), 0), 0, Tag1 ("EConstr", 60)), 0); (("mkProp", 1720), ((Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1113), 0, (("engine/eConstr.mli", 140, 4604, 4604), ("engine/eConstr.mli", 140, 4604, 4618), 0), 0, Tag1 ("EConstr", 61)), 0); (("mkSet", 1721), ((Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1112), 0, (("engine/eConstr.mli", 141, 4619, 4619), ("engine/eConstr.mli", 141, 4619, 4633), 0), 0, Tag1 ("EConstr", 62)), 0); (("mkType", 1722), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Universe"), "t"), 0, (0)), 100000000, 0, -1111), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1110), 0), 100000000, 0, -1109), 0, (("engine/eConstr.mli", 142, 4634, 4634), ("engine/eConstr.mli", 142, 4634, 4667), 0), 0, Tag1 ("EConstr", 63)), 0); (("mkCast", 1723), ((Tag1 (0, (Tag2 ([(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1106); (Tag3 (Tag1 ((Tag2 ("Constr")), "cast_kind"), 0, (0)), 100000000, 0, -1107); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1108)]), 100000000, 0, -1105), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1104), 0), 100000000, 0, -1103), 0, (("engine/eConstr.mli", 143, 4668, 4668), ("engine/eConstr.mli", 143, 4668, 4703), 0), 0, Tag1 ("EConstr", 64)), 0); (("mkProd", 1724), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -1100)], (0)), 100000000, 0, -1099); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1101); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1102)]), 100000000, 0, -1098), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1097), 0), 100000000, 0, -1096), 0, (("engine/eConstr.mli", 144, 4704, 4704), ("engine/eConstr.mli", 144, 4704, 4757), 0), 0, Tag1 ("EConstr", 65)), 0); (("mkLambda", 1725), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -1093)], (0)), 100000000, 0, -1092); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1094); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1095)]), 100000000, 0, -1091), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1090), 0), 100000000, 0, -1089), 0, (("engine/eConstr.mli", 145, 4758, 4758), ("engine/eConstr.mli", 145, 4758, 4813), 0), 0, Tag1 ("EConstr", 66)), 0); (("mkLetIn", 1726), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -1085)], (0)), 100000000, 0, -1084); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1086); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1087); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1088)]), 100000000, 0, -1083), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1082), 0), 100000000, 0, -1081), 0, (("engine/eConstr.mli", 146, 4814, 4814), ("engine/eConstr.mli", 146, 4814, 4872), 0), 0, Tag1 ("EConstr", 67)), 0); (("mkApp", 1727), ((Tag1 (0, (Tag2 ([(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1078); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1080)], (0)), 100000000, 0, -1079)]), 100000000, 0, -1077), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1076), 0), 100000000, 0, -1075), 0, (("engine/eConstr.mli", 147, 4873, 4873), ("engine/eConstr.mli", 147, 4873, 4901), 0), 0, Tag1 ("EConstr", 68)), 0); (("mkConstU", 1728), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -1073); (Tag3 (Tag1 ((("EInstance", 1702)), "t"), 0, (0)), 100000000, 0, -1074)]), 100000000, 0, -1072), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1071), 0), 100000000, 0, -1070), 0, (("engine/eConstr.mli", 148, 4902, 4902), ("engine/eConstr.mli", 148, 4902, 4946), 0), 0, Tag1 ("EConstr", 69)), 0); (("mkProj", 1729), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Projection"), "t"), 0, (0)), 100000000, 0, -1068); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1069)]), 100000000, 0, -1067), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1066), 0), 100000000, 0, -1065), 0, (("engine/eConstr.mli", 149, 4947, 4947), ("engine/eConstr.mli", 149, 4947, 4983), 0), 0, Tag1 ("EConstr", 70)), 0); (("mkIndU", 1730), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -1063); (Tag3 (Tag1 ((("EInstance", 1702)), "t"), 0, (0)), 100000000, 0, -1064)]), 100000000, 0, -1062), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1061), 0), 100000000, 0, -1060), 0, (("engine/eConstr.mli", 150, 4984, 4984), ("engine/eConstr.mli", 150, 4984, 5025), 0), 0, Tag1 ("EConstr", 71)), 0); (("mkConstructU", 1731), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Names")), "constructor"), 0, (0)), 100000000, 0, -1058); (Tag3 (Tag1 ((("EInstance", 1702)), "t"), 0, (0)), 100000000, 0, -1059)]), 100000000, 0, -1057), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1056), 0), 100000000, 0, -1055), 0, (("engine/eConstr.mli", 151, 5026, 5026), ("engine/eConstr.mli", 151, 5026, 5075), 0), 0, Tag1 ("EConstr", 72)), 0); (("mkConstructUi", 1732), ((Tag1 (0, (Tag2 ([(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -1052); (Tag3 (Tag1 ((("EInstance", 1702)), "t"), 0, (0)), 100000000, 0, -1053)]), 100000000, 0, -1051); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1054)]), 100000000, 0, -1050), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1049), 0), 100000000, 0, -1048), 0, (("engine/eConstr.mli", 152, 5076, 5076), ("engine/eConstr.mli", 152, 5076, 5132), 0), 0, Tag1 ("EConstr", 73)), 0); (("mkCase", 1733), ((Tag1 (0, (Tag3 ((("case", 1704)), 0, (0)), 100000000, 0, -1047), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1046), 0), 100000000, 0, -1045), 0, (("engine/eConstr.mli", 153, 5133, 5133), ("engine/eConstr.mli", 153, 5133, 5155), 0), 0, Tag1 ("EConstr", 74)), 0); (("mkFix", 1734), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pfixpoint"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1043); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1044)], (0)), 100000000, 0, -1042), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1041), 0), 100000000, 0, -1040), 0, (("engine/eConstr.mli", 154, 5156, 5156), ("engine/eConstr.mli", 154, 5156, 5189), 0), 0, Tag1 ("EConstr", 75)), 0); (("mkCoFix", 1735), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pcofixpoint"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1038); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1039)], (0)), 100000000, 0, -1037), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1036), 0), 100000000, 0, -1035), 0, (("engine/eConstr.mli", 155, 5190, 5190), ("engine/eConstr.mli", 155, 5190, 5227), 0), 0, Tag1 ("EConstr", 76)), 0); (("mkArrow", 1736), ((Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1034), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sorts")), "relevance"), 0, (0)), 100000000, 0, -1033), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1032), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1031), 0), 100000000, 0, -1030), 0), 100000000, 0, -1029), 0), 100000000, 0, -1028), 0, (("engine/eConstr.mli", 156, 5228, 5228), ("engine/eConstr.mli", 156, 5228, 5273), 0), 0, Tag1 ("EConstr", 77)), 0); (("mkArrowR", 1737), ((Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1027), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1026), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1025), 0), 100000000, 0, -1024), 0), 100000000, 0, -1023), 0, (("engine/eConstr.mli", 157, 5274, 5274), ("engine/eConstr.mli", 157, 5274, 5300), 0), 0, Tag1 ("EConstr", 78)), 0); (("mkInt", 1738), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Uint63")), "t"), 0, (0)), 100000000, 0, -1022), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1021), 0), 100000000, 0, -1020), 0, (("engine/eConstr.mli", 158, 5301, 5301), ("engine/eConstr.mli", 158, 5301, 5326), 0), 0, Tag1 ("EConstr", 79)), 0); (("mkFloat", 1739), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Float64")), "t"), 0, (0)), 100000000, 0, -1019), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1018), 0), 100000000, 0, -1017), 0, (("engine/eConstr.mli", 159, 5327, 5327), ("engine/eConstr.mli", 159, 5327, 5355), 0), 0, Tag1 ("EConstr", 80)), 0); (("mkArray", 1740), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((("EInstance", 1702)), "t"), 0, (0)), 100000000, 0, -1012); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1014)], (0)), 100000000, 0, -1013); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1015); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1016)]), 100000000, 0, -1011), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1010), 0), 100000000, 0, -1009), 0, (("engine/eConstr.mli", 160, 5356, 5356), ("engine/eConstr.mli", 160, 5356, 5404), 0), 0, Tag1 ("EConstr", 81)), 0); Tag3 (("UnsafeMonomorphic", 1741), 0, (Tag1 ([(("mkConst", 1905), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -1315), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1314), 0), 100000000, 0, -1313), 0, (("engine/eConstr.mli", 163, 5437, 5439), ("engine/eConstr.mli", 163, 5437, 5468), 0), 0, Tag1 ("EConstr", 82)), 0); (("mkInd", 1906), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -1312), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1311), 0), 100000000, 0, -1310), 0, (("engine/eConstr.mli", 164, 5469, 5471), ("engine/eConstr.mli", 164, 5469, 5497), 0), 0, Tag1 ("EConstr", 83)), 0); (("mkConstruct", 1907), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "constructor"), 0, (0)), 100000000, 0, -1309), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1308), 0), 100000000, 0, -1307), 0, (("engine/eConstr.mli", 165, 5498, 5500), ("engine/eConstr.mli", 165, 5498, 5534), 0), 0, Tag1 ("EConstr", 84)), 0)]), 0, (("engine/eConstr.mli", 162, 5406, 5406), ("engine/eConstr.mli", 166, 5535, 5538), 0), Tag1 ("EConstr", 85)), 0, 0); (("mkConst", 1742), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -1008), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1007), 0), 100000000, 0, -1006), 0, (("engine/eConstr.mli", 168, 5540, 5540), ("engine/eConstr.mli", 169, 5570, 5648), 0), [(("deprecated", (("engine/eConstr.mli", 169, 5570, 5573), ("engine/eConstr.mli", 169, 5570, 5583), 0)), ([([(Tag1 (Tag2 ("Use [mkConstU] or if truly needed [UnsafeMonomorphic.mkConst]", (("engine/eConstr.mli", 169, 5570, 5585), ("engine/eConstr.mli", 169, 5570, 5646), 0), 0)), (("engine/eConstr.mli", 169, 5570, 5584), ("engine/eConstr.mli", 169, 5570, 5647), 0), 0, 0)], (("engine/eConstr.mli", 169, 5570, 5584), ("engine/eConstr.mli", 169, 5570, 5647), 0))]), (("engine/eConstr.mli", 169, 5570, 5570), ("engine/eConstr.mli", 169, 5570, 5648), 0))], Tag1 ("EConstr", 86)), 0); (("mkInd", 1743), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -1005), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1004), 0), 100000000, 0, -1003), 0, (("engine/eConstr.mli", 171, 5650, 5650), ("engine/eConstr.mli", 172, 5677, 5751), 0), [(("deprecated", (("engine/eConstr.mli", 172, 5677, 5680), ("engine/eConstr.mli", 172, 5677, 5690), 0)), ([([(Tag1 (Tag2 ("Use [mkIndU] or if truly needed [UnsafeMonomorphic.mkInd]", (("engine/eConstr.mli", 172, 5677, 5692), ("engine/eConstr.mli", 172, 5677, 5749), 0), 0)), (("engine/eConstr.mli", 172, 5677, 5691), ("engine/eConstr.mli", 172, 5677, 5750), 0), 0, 0)], (("engine/eConstr.mli", 172, 5677, 5691), ("engine/eConstr.mli", 172, 5677, 5750), 0))]), (("engine/eConstr.mli", 172, 5677, 5677), ("engine/eConstr.mli", 172, 5677, 5751), 0))], Tag1 ("EConstr", 87)), 0); (("mkConstruct", 1744), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "constructor"), 0, (0)), 100000000, 0, -1002), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1001), 0), 100000000, 0, -1000), 0, (("engine/eConstr.mli", 174, 5753, 5753), ("engine/eConstr.mli", 175, 5788, 5874), 0), [(("deprecated", (("engine/eConstr.mli", 175, 5788, 5791), ("engine/eConstr.mli", 175, 5788, 5801), 0)), ([([(Tag1 (Tag2 ("Use [mkConstructU] or if truly needed [UnsafeMonomorphic.mkConstruct]", (("engine/eConstr.mli", 175, 5788, 5803), ("engine/eConstr.mli", 175, 5788, 5872), 0), 0)), (("engine/eConstr.mli", 175, 5788, 5802), ("engine/eConstr.mli", 175, 5788, 5873), 0), 0, 0)], (("engine/eConstr.mli", 175, 5788, 5802), ("engine/eConstr.mli", 175, 5788, 5873), 0))]), (("engine/eConstr.mli", 175, 5788, 5788), ("engine/eConstr.mli", 175, 5788, 5874), 0))], Tag1 ("EConstr", 88)), 0); (("mkRef", 1745), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -998); (Tag3 (Tag1 ((("EInstance", 1702)), "t"), 0, (0)), 100000000, 0, -999)]), 100000000, 0, -997), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -996), 0), 100000000, 0, -995), 0, (("engine/eConstr.mli", 177, 5876, 5876), ("engine/eConstr.mli", 177, 5876, 5916), 0), 0, Tag1 ("EConstr", 89)), 0); (("type1", 1746), ((Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -994), 0, (("engine/eConstr.mli", 179, 5918, 5918), ("engine/eConstr.mli", 179, 5918, 5931), 0), 0, Tag1 ("EConstr", 90)), 0); (("applist", 1747), ((Tag1 (0, (Tag2 ([(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -991); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -993)], (0)), 100000000, 0, -992)]), 100000000, 0, -990), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -989), 0), 100000000, 0, -988), 0, (("engine/eConstr.mli", 181, 5933, 5933), ("engine/eConstr.mli", 181, 5933, 5962), 0), 0, Tag1 ("EConstr", 91)), 0); (("applistc", 1748), ((Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -987), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -986)], (0)), 100000000, 0, -985), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -984), 0), 100000000, 0, -983), 0), 100000000, 0, -982), 0, (("engine/eConstr.mli", 182, 5963, 5963), ("engine/eConstr.mli", 182, 5963, 5994), 0), 0, Tag1 ("EConstr", 92)), 0); (("it_mkProd", 1749), ((Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -981), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -979)], (0)), 100000000, 0, -978); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -980)]), 100000000, 0, -977)], (0)), 100000000, 0, -976), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -975), 0), 100000000, 0, -974), 0), 100000000, 0, -973), 0, (("engine/eConstr.mli", 192, 6332, 6332), ("engine/eConstr.mli", 192, 6332, 6396), 0), 0, Tag1 ("EConstr", 93)), 0); (("it_mkLambda", 1750), ((Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -972), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -970)], (0)), 100000000, 0, -969); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -971)]), 100000000, 0, -968)], (0)), 100000000, 0, -967), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -966), 0), 100000000, 0, -965), 0), 100000000, 0, -964), 0, (("engine/eConstr.mli", 193, 6397, 6397), ("engine/eConstr.mli", 193, 6397, 6463), 0), 0, Tag1 ("EConstr", 94)), 0); (("mkProd_or_LetIn", 1751), ((Tag1 (0, (Tag3 ((("rel_declaration", 1696)), 0, (0)), 100000000, 0, -963), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -962), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -961), 0), 100000000, 0, -960), 0), 100000000, 0, -959), 0, (("engine/eConstr.mli", 195, 6465, 6465), ("engine/eConstr.mli", 195, 6465, 6512), 0), 0, Tag1 ("EConstr", 95)), 0); (("mkLambda_or_LetIn", 1752), ((Tag1 (0, (Tag3 ((("rel_declaration", 1696)), 0, (0)), 100000000, 0, -958), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -957), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -956), 0), 100000000, 0, -955), 0), 100000000, 0, -954), 0, (("engine/eConstr.mli", 196, 6513, 6513), ("engine/eConstr.mli", 196, 6513, 6562), 0), 0, Tag1 ("EConstr", 96)), 0); (("it_mkProd_or_LetIn", 1753), ((Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -953), (Tag1 (0, (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -952), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -951), 0), 100000000, 0, -950), 0), 100000000, 0, -949), 0, (("engine/eConstr.mli", 197, 6563, 6563), ("engine/eConstr.mli", 197, 6563, 6609), 0), 0, Tag1 ("EConstr", 97)), 0); (("it_mkLambda_or_LetIn", 1754), ((Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -948), (Tag1 (0, (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -947), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -946), 0), 100000000, 0, -945), 0), 100000000, 0, -944), 0, (("engine/eConstr.mli", 198, 6610, 6610), ("engine/eConstr.mli", 198, 6610, 6658), 0), 0, Tag1 ("EConstr", 98)), 0); (("mkProd_wo_LetIn", 1755), ((Tag1 (0, (Tag3 ((("rel_declaration", 1696)), 0, (0)), 100000000, 0, -943), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -942), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -941), 0), 100000000, 0, -940), 0), 100000000, 0, -939), 0, (("engine/eConstr.mli", 200, 6660, 6660), ("engine/eConstr.mli", 200, 6660, 6707), 0), 0, Tag1 ("EConstr", 99)), 0); (("mkLambda_wo_LetIn", 1756), ((Tag1 (0, (Tag3 ((("rel_declaration", 1696)), 0, (0)), 100000000, 0, -938), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -937), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -936), 0), 100000000, 0, -935), 0), 100000000, 0, -934), 0, (("engine/eConstr.mli", 201, 6708, 6708), ("engine/eConstr.mli", 201, 6708, 6757), 0), 0, Tag1 ("EConstr", 100)), 0); (("it_mkProd_wo_LetIn", 1757), ((Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -933), (Tag1 (0, (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -932), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -931), 0), 100000000, 0, -930), 0), 100000000, 0, -929), 0, (("engine/eConstr.mli", 202, 6758, 6758), ("engine/eConstr.mli", 202, 6758, 6804), 0), 0, Tag1 ("EConstr", 101)), 0); (("it_mkLambda_wo_LetIn", 1758), ((Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -928), (Tag1 (0, (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -927), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -926), 0), 100000000, 0, -925), 0), 100000000, 0, -924), 0, (("engine/eConstr.mli", 203, 6805, 6805), ("engine/eConstr.mli", 203, 6805, 6853), 0), 0, Tag1 ("EConstr", 102)), 0); (("mkNamedProd", 1759), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -923), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -922)], (0)), 100000000, 0, -921), (Tag1 (0, (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -920), (Tag1 (0, (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -919), (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -918), 0), 100000000, 0, -917), 0), 100000000, 0, -916), 0), 100000000, 0, -915), 0), 100000000, 0, -914), 0, (("engine/eConstr.mli", 205, 6855, 6855), ("engine/eConstr.mli", 205, 6855, 6941), 0), 0, Tag1 ("EConstr", 103)), 0); (("mkNamedLambda", 1760), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -913), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -912)], (0)), 100000000, 0, -911), (Tag1 (0, (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -910), (Tag1 (0, (Tag3 ((("constr", 1687)), 0, (0)), 100000000, 0, -909), (Tag3 ((("constr", 1687)), 0, (0)), 100000000, 0, -908), 0), 100000000, 0, -907), 0), 100000000, 0, -906), 0), 100000000, 0, -905), 0), 100000000, 0, -904), 0, (("engine/eConstr.mli", 206, 6942, 6942), ("engine/eConstr.mli", 206, 6942, 7032), 0), 0, Tag1 ("EConstr", 104)), 0); (("mkNamedLetIn", 1761), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -903), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -902)], (0)), 100000000, 0, -901), (Tag1 (0, (Tag3 ((("constr", 1687)), 0, (0)), 100000000, 0, -900), (Tag1 (0, (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -899), (Tag1 (0, (Tag3 ((("constr", 1687)), 0, (0)), 100000000, 0, -898), (Tag3 ((("constr", 1687)), 0, (0)), 100000000, 0, -897), 0), 100000000, 0, -896), 0), 100000000, 0, -895), 0), 100000000, 0, -894), 0), 100000000, 0, -893), 0), 100000000, 0, -892), 0, (("engine/eConstr.mli", 207, 7033, 7033), ("engine/eConstr.mli", 207, 7033, 7132), 0), 0, Tag1 ("EConstr", 105)), 0); (("mkNamedProd_or_LetIn", 1762), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -891), (Tag1 (0, (Tag3 ((("named_declaration", 1695)), 0, (0)), 100000000, 0, -890), (Tag1 (0, (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -889), (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -888), 0), 100000000, 0, -887), 0), 100000000, 0, -886), 0), 100000000, 0, -885), 0, (("engine/eConstr.mli", 209, 7134, 7134), ("engine/eConstr.mli", 209, 7134, 7212), 0), 0, Tag1 ("EConstr", 106)), 0); (("mkNamedLambda_or_LetIn", 1763), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -884), (Tag1 (0, (Tag3 ((("named_declaration", 1695)), 0, (0)), 100000000, 0, -883), (Tag1 (0, (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -882), (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -881), 0), 100000000, 0, -880), 0), 100000000, 0, -879), 0), 100000000, 0, -878), 0, (("engine/eConstr.mli", 210, 7213, 7213), ("engine/eConstr.mli", 210, 7213, 7293), 0), 0, Tag1 ("EConstr", 107)), 0); (("it_mkNamedProd_or_LetIn", 1764), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -877), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -876), (Tag1 (0, (Tag3 ((("named_context", 1698)), 0, (0)), 100000000, 0, -875), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -874), 0), 100000000, 0, -873), 0), 100000000, 0, -872), 0), 100000000, 0, -871), 0, (("engine/eConstr.mli", 211, 7294, 7294), ("engine/eConstr.mli", 211, 7294, 7363), 0), 0, Tag1 ("EConstr", 108)), 0); (("it_mkNamedLambda_or_LetIn", 1765), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -870), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -869), (Tag1 (0, (Tag3 ((("named_context", 1698)), 0, (0)), 100000000, 0, -868), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -867), 0), 100000000, 0, -866), 0), 100000000, 0, -865), 0), 100000000, 0, -864), 0, (("engine/eConstr.mli", 212, 7364, 7364), ("engine/eConstr.mli", 212, 7364, 7435), 0), 0, Tag1 ("EConstr", 109)), 0); (("mkNamedProd_wo_LetIn", 1766), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -863), (Tag1 (0, (Tag3 ((("named_declaration", 1695)), 0, (0)), 100000000, 0, -862), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -861), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -860), 0), 100000000, 0, -859), 0), 100000000, 0, -858), 0), 100000000, 0, -857), 0, (("engine/eConstr.mli", 214, 7437, 7437), ("engine/eConstr.mli", 214, 7437, 7507), 0), 0, Tag1 ("EConstr", 110)), 0); (("it_mkNamedProd_wo_LetIn", 1767), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -856), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -855), (Tag1 (0, (Tag3 ((("named_context", 1698)), 0, (0)), 100000000, 0, -854), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -853), 0), 100000000, 0, -852), 0), 100000000, 0, -851), 0), 100000000, 0, -850), 0, (("engine/eConstr.mli", 215, 7508, 7508), ("engine/eConstr.mli", 215, 7508, 7577), 0), 0, Tag1 ("EConstr", 111)), 0); (("mkLEvar", 1768), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -849), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -846); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -848)], (0)), 100000000, 0, -847)]), 100000000, 0, -845), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -844), 0), 100000000, 0, -843), 0), 100000000, 0, -842), 0, (("engine/eConstr.mli", 217, 7579, 7579), ("engine/eConstr.mli", 217, 7579, 7629), 0), 0, Tag1 ("EConstr", 112)), 0); (("isRel", 1769), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -841), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -840), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -839), 0), 100000000, 0, -838), 0), 100000000, 0, -837), 0, (("engine/eConstr.mli", 222, 7752, 7752), ("engine/eConstr.mli", 222, 7752, 7790), 0), 0, Tag1 ("EConstr", 113)), 0); (("isVar", 1770), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -836), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -835), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -834), 0), 100000000, 0, -833), 0), 100000000, 0, -832), 0, (("engine/eConstr.mli", 223, 7791, 7791), ("engine/eConstr.mli", 223, 7791, 7829), 0), 0, Tag1 ("EConstr", 114)), 0); (("isInd", 1771), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -831), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -830), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -829), 0), 100000000, 0, -828), 0), 100000000, 0, -827), 0, (("engine/eConstr.mli", 224, 7830, 7830), ("engine/eConstr.mli", 224, 7830, 7868), 0), 0, Tag1 ("EConstr", 115)), 0); (("isRef", 1772), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -826), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -825), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -824), 0), 100000000, 0, -823), 0), 100000000, 0, -822), 0, (("engine/eConstr.mli", 225, 7869, 7869), ("engine/eConstr.mli", 225, 7869, 7906), 0), 0, Tag1 ("EConstr", 116)), 0); (("isEvar", 1773), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -821), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -820), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -819), 0), 100000000, 0, -818), 0), 100000000, 0, -817), 0, (("engine/eConstr.mli", 226, 7907, 7907), ("engine/eConstr.mli", 226, 7907, 7945), 0), 0, Tag1 ("EConstr", 117)), 0); (("isMeta", 1774), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -816), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -815), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -814), 0), 100000000, 0, -813), 0), 100000000, 0, -812), 0, (("engine/eConstr.mli", 227, 7946, 7946), ("engine/eConstr.mli", 227, 7946, 7984), 0), 0, Tag1 ("EConstr", 118)), 0); (("isSort", 1775), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -811), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -810), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -809), 0), 100000000, 0, -808), 0), 100000000, 0, -807), 0, (("engine/eConstr.mli", 228, 7985, 7985), ("engine/eConstr.mli", 228, 7985, 8023), 0), 0, Tag1 ("EConstr", 119)), 0); (("isCast", 1776), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -806), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -805), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -804), 0), 100000000, 0, -803), 0), 100000000, 0, -802), 0, (("engine/eConstr.mli", 229, 8024, 8024), ("engine/eConstr.mli", 229, 8024, 8062), 0), 0, Tag1 ("EConstr", 120)), 0); (("isApp", 1777), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -801), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -800), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -799), 0), 100000000, 0, -798), 0), 100000000, 0, -797), 0, (("engine/eConstr.mli", 230, 8063, 8063), ("engine/eConstr.mli", 230, 8063, 8100), 0), 0, Tag1 ("EConstr", 121)), 0); (("isLambda", 1778), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -796), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -795), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -794), 0), 100000000, 0, -793), 0), 100000000, 0, -792), 0, (("engine/eConstr.mli", 231, 8101, 8101), ("engine/eConstr.mli", 231, 8101, 8141), 0), 0, Tag1 ("EConstr", 122)), 0); (("isLetIn", 1779), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -791), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -790), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -789), 0), 100000000, 0, -788), 0), 100000000, 0, -787), 0, (("engine/eConstr.mli", 232, 8142, 8142), ("engine/eConstr.mli", 232, 8142, 8181), 0), 0, Tag1 ("EConstr", 123)), 0); (("isProd", 1780), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -786), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -785), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -784), 0), 100000000, 0, -783), 0), 100000000, 0, -782), 0, (("engine/eConstr.mli", 233, 8182, 8182), ("engine/eConstr.mli", 233, 8182, 8220), 0), 0, Tag1 ("EConstr", 124)), 0); (("isConst", 1781), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -781), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -780), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -779), 0), 100000000, 0, -778), 0), 100000000, 0, -777), 0, (("engine/eConstr.mli", 234, 8221, 8221), ("engine/eConstr.mli", 234, 8221, 8260), 0), 0, Tag1 ("EConstr", 125)), 0); (("isConstruct", 1782), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -776), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -775), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -774), 0), 100000000, 0, -773), 0), 100000000, 0, -772), 0, (("engine/eConstr.mli", 235, 8261, 8261), ("engine/eConstr.mli", 235, 8261, 8304), 0), 0, Tag1 ("EConstr", 126)), 0); (("isFix", 1783), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -771), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -770), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -769), 0), 100000000, 0, -768), 0), 100000000, 0, -767), 0, (("engine/eConstr.mli", 236, 8305, 8305), ("engine/eConstr.mli", 236, 8305, 8342), 0), 0, Tag1 ("EConstr", 127)), 0); (("isCoFix", 1784), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -766), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -765), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -764), 0), 100000000, 0, -763), 0), 100000000, 0, -762), 0, (("engine/eConstr.mli", 237, 8343, 8343), ("engine/eConstr.mli", 237, 8343, 8382), 0), 0, Tag1 ("EConstr", 128)), 0); (("isCase", 1785), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -761), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -760), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -759), 0), 100000000, 0, -758), 0), 100000000, 0, -757), 0, (("engine/eConstr.mli", 238, 8383, 8383), ("engine/eConstr.mli", 238, 8383, 8421), 0), 0, Tag1 ("EConstr", 129)), 0); (("isProj", 1786), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -756), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -755), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -754), 0), 100000000, 0, -753), 0), 100000000, 0, -752), 0, (("engine/eConstr.mli", 239, 8422, 8422), ("engine/eConstr.mli", 239, 8422, 8460), 0), 0, Tag1 ("EConstr", 130)), 0); (("isType", 1787), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -751), (Tag1 (0, (Tag3 ((("constr", 1687)), 0, (0)), 100000000, 0, -750), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -749), 0), 100000000, 0, -748), 0), 100000000, 0, -747), 0, (("engine/eConstr.mli", 241, 8462, 8462), ("engine/eConstr.mli", 241, 8462, 8505), 0), 0, Tag1 ("EConstr", 131)), 0); Tag1 (("arity", 1788), (0, 0, 0, 1, ((Tag2 ([(Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -745); (Tag3 (Tag1 ((("ESorts", 1701)), "t"), 0, (0)), 100000000, 0, -746)]), 100000000, 0, -744)), 0, 0, 0, 0, (("engine/eConstr.mli", 243, 8507, 8507), ("engine/eConstr.mli", 243, 8507, 8542), 0), 0, 0, 0, Tag1 ("EConstr", 132)), 1, 0); (("destArity", 1789), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -743), (Tag1 (0, (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -742), (Tag3 ((("arity", 1788)), 0, (0)), 100000000, 0, -741), 0), 100000000, 0, -740), 0), 100000000, 0, -739), 0, (("engine/eConstr.mli", 244, 8543, 8543), ("engine/eConstr.mli", 244, 8543, 8589), 0), 0, Tag1 ("EConstr", 133)), 0); (("isArity", 1790), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -738), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -737), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -736), 0), 100000000, 0, -735), 0), 100000000, 0, -734), 0, (("engine/eConstr.mli", 245, 8590, 8590), ("engine/eConstr.mli", 245, 8590, 8629), 0), 0, Tag1 ("EConstr", 134)), 0); (("isVarId", 1791), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -733), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -732), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -731), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -730), 0), 100000000, 0, -729), 0), 100000000, 0, -728), 0), 100000000, 0, -727), 0, (("engine/eConstr.mli", 247, 8631, 8631), ("engine/eConstr.mli", 247, 8631, 8679), 0), 0, Tag1 ("EConstr", 135)), 0); (("isRelN", 1792), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -726), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -725), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -724), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -723), 0), 100000000, 0, -722), 0), 100000000, 0, -721), 0), 100000000, 0, -720), 0, (("engine/eConstr.mli", 248, 8680, 8680), ("engine/eConstr.mli", 248, 8680, 8725), 0), 0, Tag1 ("EConstr", 136)), 0); (("isRefX", 1793), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -719), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -718), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -717), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -716), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -715), 0), 100000000, 0, -714), 0), 100000000, 0, -713), 0), 100000000, 0, -712), 0), 100000000, 0, -711), 0, (("engine/eConstr.mli", 249, 8726, 8726), ("engine/eConstr.mli", 249, 8726, 8792), 0), 0, Tag1 ("EConstr", 137)), 0); (("is_lib_ref", 1794), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -710), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -709), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -708), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -707), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -706), 0), 100000000, 0, -705), 0), 100000000, 0, -704), 0), 100000000, 0, -703), 0), 100000000, 0, -702), 0, (("engine/eConstr.mli", 252, 8889, 8889), ("engine/eConstr.mli", 252, 8889, 8956), 0), 0, Tag1 ("EConstr", 138)), 0); (("destRel", 1795), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -701), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -700), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -699), 0), 100000000, 0, -698), 0), 100000000, 0, -697), 0, (("engine/eConstr.mli", 254, 8958, 8958), ("engine/eConstr.mli", 254, 8958, 8996), 0), 0, Tag1 ("EConstr", 139)), 0); (("destMeta", 1796), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -696), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -695), (Tag3 (Tag1 ((Tag2 ("Constr")), "metavariable"), 0, (0)), 100000000, 0, -694), 0), 100000000, 0, -693), 0), 100000000, 0, -692), 0, (("engine/eConstr.mli", 255, 8997, 8997), ("engine/eConstr.mli", 255, 8997, 9045), 0), 0, Tag1 ("EConstr", 140)), 0); (("destVar", 1797), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -691), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -690), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -689), 0), 100000000, 0, -688), 0), 100000000, 0, -687), 0, (("engine/eConstr.mli", 256, 9046, 9046), ("engine/eConstr.mli", 256, 9046, 9085), 0), 0, Tag1 ("EConstr", 141)), 0); (("destSort", 1798), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -686), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -685), (Tag3 (Tag1 ((("ESorts", 1701)), "t"), 0, (0)), 100000000, 0, -684), 0), 100000000, 0, -683), 0), 100000000, 0, -682), 0, (("engine/eConstr.mli", 257, 9086, 9086), ("engine/eConstr.mli", 257, 9086, 9130), 0), 0, Tag1 ("EConstr", 142)), 0); (("destCast", 1799), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -681), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -680), (Tag2 ([(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -677); (Tag3 (Tag1 ((Tag2 ("Constr")), "cast_kind"), 0, (0)), 100000000, 0, -678); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -679)]), 100000000, 0, -676), 0), 100000000, 0, -675), 0), 100000000, 0, -674), 0, (("engine/eConstr.mli", 258, 9131, 9131), ("engine/eConstr.mli", 258, 9131, 9184), 0), 0, Tag1 ("EConstr", 143)), 0); (("destProd", 1800), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -673), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -672), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -669)], (0)), 100000000, 0, -668); (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -670); (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -671)]), 100000000, 0, -667), 0), 100000000, 0, -666), 0), 100000000, 0, -665), 0, (("engine/eConstr.mli", 259, 9185, 9185), ("engine/eConstr.mli", 259, 9185, 9264), 0), 0, Tag1 ("EConstr", 144)), 0); (("destLambda", 1801), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -664), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -663), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -660)], (0)), 100000000, 0, -659); (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -661); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -662)]), 100000000, 0, -658), 0), 100000000, 0, -657), 0), 100000000, 0, -656), 0, (("engine/eConstr.mli", 260, 9265, 9265), ("engine/eConstr.mli", 260, 9265, 9342), 0), 0, Tag1 ("EConstr", 145)), 0); (("destLetIn", 1802), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -655), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -654), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -650)], (0)), 100000000, 0, -649); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -651); (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -652); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -653)]), 100000000, 0, -648), 0), 100000000, 0, -647), 0), 100000000, 0, -646), 0, (("engine/eConstr.mli", 261, 9343, 9343), ("engine/eConstr.mli", 261, 9343, 9423), 0), 0, Tag1 ("EConstr", 146)), 0); (("destApp", 1803), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -645), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -644), (Tag2 ([(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -641); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -643)], (0)), 100000000, 0, -642)]), 100000000, 0, -640), 0), 100000000, 0, -639), 0), 100000000, 0, -638), 0, (("engine/eConstr.mli", 262, 9424, 9424), ("engine/eConstr.mli", 262, 9424, 9470), 0), 0, Tag1 ("EConstr", 147)), 0); (("destConst", 1804), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -637), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -636), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -634); (Tag3 (Tag1 ((("EInstance", 1702)), "t"), 0, (0)), 100000000, 0, -635)]), 100000000, 0, -633), 0), 100000000, 0, -632), 0), 100000000, 0, -631), 0, (("engine/eConstr.mli", 263, 9471, 9471), ("engine/eConstr.mli", 263, 9471, 9532), 0), 0, Tag1 ("EConstr", 148)), 0); (("destEvar", 1805), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -630), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -629), (Tag3 (Tag1 ((Tag2 ("Constr")), "pexistential"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -628)], (0)), 100000000, 0, -627), 0), 100000000, 0, -626), 0), 100000000, 0, -625), 0, (("engine/eConstr.mli", 264, 9533, 9533), ("engine/eConstr.mli", 264, 9533, 9583), 0), 0, Tag1 ("EConstr", 149)), 0); (("destInd", 1806), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -624), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -623), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -621); (Tag3 (Tag1 ((("EInstance", 1702)), "t"), 0, (0)), 100000000, 0, -622)]), 100000000, 0, -620), 0), 100000000, 0, -619), 0), 100000000, 0, -618), 0, (("engine/eConstr.mli", 265, 9584, 9584), ("engine/eConstr.mli", 265, 9584, 9642), 0), 0, Tag1 ("EConstr", 150)), 0); (("destConstruct", 1807), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -617), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -616), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Names")), "constructor"), 0, (0)), 100000000, 0, -614); (Tag3 (Tag1 ((("EInstance", 1702)), "t"), 0, (0)), 100000000, 0, -615)]), 100000000, 0, -613), 0), 100000000, 0, -612), 0), 100000000, 0, -611), 0, (("engine/eConstr.mli", 266, 9643, 9643), ("engine/eConstr.mli", 266, 9643, 9709), 0), 0, Tag1 ("EConstr", 151)), 0); (("destCase", 1808), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -610), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -609), (Tag3 ((("case", 1704)), 0, (0)), 100000000, 0, -608), 0), 100000000, 0, -607), 0), 100000000, 0, -606), 0, (("engine/eConstr.mli", 267, 9710, 9710), ("engine/eConstr.mli", 267, 9710, 9750), 0), 0, Tag1 ("EConstr", 152)), 0); (("destProj", 1809), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -605), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -604), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Projection"), "t"), 0, (0)), 100000000, 0, -602); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -603)]), 100000000, 0, -601), 0), 100000000, 0, -600), 0), 100000000, 0, -599), 0, (("engine/eConstr.mli", 268, 9751, 9751), ("engine/eConstr.mli", 268, 9751, 9803), 0), 0, Tag1 ("EConstr", 153)), 0); (("destFix", 1810), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -598), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -597), (Tag3 (Tag1 ((Tag2 ("Constr")), "pfixpoint"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -595); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -596)], (0)), 100000000, 0, -594), 0), 100000000, 0, -593), 0), 100000000, 0, -592), 0, (("engine/eConstr.mli", 269, 9804, 9804), ("engine/eConstr.mli", 269, 9804, 9855), 0), 0, Tag1 ("EConstr", 154)), 0); (("destCoFix", 1811), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -591), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -590), (Tag3 (Tag1 ((Tag2 ("Constr")), "pcofixpoint"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -588); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -589)], (0)), 100000000, 0, -587), 0), 100000000, 0, -586), 0), 100000000, 0, -585), 0, (("engine/eConstr.mli", 270, 9856, 9856), ("engine/eConstr.mli", 270, 9856, 9911), 0), 0, Tag1 ("EConstr", 155)), 0); (("destRef", 1812), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -584), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -583), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -581); (Tag3 (Tag1 ((("EInstance", 1702)), "t"), 0, (0)), 100000000, 0, -582)]), 100000000, 0, -580), 0), 100000000, 0, -579), 0), 100000000, 0, -578), 0, (("engine/eConstr.mli", 272, 9913, 9913), ("engine/eConstr.mli", 272, 9913, 9971), 0), 0, Tag1 ("EConstr", 156)), 0); (("decompose_app", 1813), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -577), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -576), (Tag2 ([(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -573); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -575)], (0)), 100000000, 0, -574)]), 100000000, 0, -572), 0), 100000000, 0, -571), 0), 100000000, 0, -570), 0, (("engine/eConstr.mli", 274, 9973, 9973), ("engine/eConstr.mli", 274, 9973, 10025), 0), 0, Tag1 ("EConstr", 157)), 0); (("decompose_app_list", 1814), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -569), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -568), (Tag2 ([(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -565); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -567)], (0)), 100000000, 0, -566)]), 100000000, 0, -564), 0), 100000000, 0, -563), 0), 100000000, 0, -562), 0, (("engine/eConstr.mli", 275, 10026, 10026), ("engine/eConstr.mli", 275, 10026, 10082), 0), 0, Tag1 ("EConstr", 158)), 0); (("decompose_lambda", 1815), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -561), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -560), (Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -557)], (0)), 100000000, 0, -556); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -558)]), 100000000, 0, -555)], (0)), 100000000, 0, -554); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -559)]), 100000000, 0, -553), 0), 100000000, 0, -552), 0), 100000000, 0, -551), 0, (("engine/eConstr.mli", 278, 10157, 10157), ("engine/eConstr.mli", 278, 10157, 10243), 0), 0, Tag1 ("EConstr", 159)), 0); (("decompose_lambda_decls", 1816), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -550), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -549), (Tag2 ([(Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -547); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -548)]), 100000000, 0, -546), 0), 100000000, 0, -545), 0), 100000000, 0, -544), 0, (("engine/eConstr.mli", 281, 10329, 10329), ("engine/eConstr.mli", 281, 10329, 10394), 0), 0, Tag1 ("EConstr", 160)), 0); (("decompose_lambda_n_assum", 1817), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -543), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -542), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -541), (Tag2 ([(Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -539); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -540)]), 100000000, 0, -538), 0), 100000000, 0, -537), 0), 100000000, 0, -536), 0), 100000000, 0, -535), 0, (("engine/eConstr.mli", 287, 10571, 10571), ("engine/eConstr.mli", 287, 10571, 10645), 0), 0, Tag1 ("EConstr", 161)), 0); (("decompose_lambda_n_decls", 1818), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -534), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -533), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -532), (Tag2 ([(Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -530); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -531)]), 100000000, 0, -529), 0), 100000000, 0, -528), 0), 100000000, 0, -527), 0), 100000000, 0, -526), 0, (("engine/eConstr.mli", 292, 10782, 10782), ("engine/eConstr.mli", 292, 10782, 10856), 0), 0, Tag1 ("EConstr", 162)), 0); (("prod_decls", 1819), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -525), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -524), (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -523), 0), 100000000, 0, -522), 0), 100000000, 0, -521), 0, (("engine/eConstr.mli", 294, 10858, 10858), ("engine/eConstr.mli", 294, 10858, 10907), 0), 0, Tag1 ("EConstr", 163)), 0); (("compose_lam", 1820), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -519)], (0)), 100000000, 0, -518); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -520)]), 100000000, 0, -517)], (0)), 100000000, 0, -516), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -515), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -514), 0), 100000000, 0, -513), 0), 100000000, 0, -512), 0, (("engine/eConstr.mli", 296, 10909, 10909), ("engine/eConstr.mli", 297, 10976, 11025), 0), [(("ocaml.deprecated", (("engine/eConstr.mli", 297, 10976, 10979), ("engine/eConstr.mli", 297, 10976, 10995), 0)), ([([(Tag1 (Tag2 ("Use [it_mkLambda] instead.", (("engine/eConstr.mli", 297, 10976, 10997), ("engine/eConstr.mli", 297, 10976, 11023), 0), 0)), (("engine/eConstr.mli", 297, 10976, 10996), ("engine/eConstr.mli", 297, 10976, 11024), 0), 0, 0)], (("engine/eConstr.mli", 297, 10976, 10996), ("engine/eConstr.mli", 297, 10976, 11024), 0))]), (("engine/eConstr.mli", 297, 10976, 10976), ("engine/eConstr.mli", 297, 10976, 11025), 0))], Tag1 ("EConstr", 164)), 0); (("to_lambda", 1821), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -511), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -510), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -509), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -508), 0), 100000000, 0, -507), 0), 100000000, 0, -506), 0), 100000000, 0, -505), 0, (("engine/eConstr.mli", 299, 11027, 11027), ("engine/eConstr.mli", 299, 11027, 11072), 0), 0, Tag1 ("EConstr", 165)), 0); (("decompose_prod", 1822), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -504), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -503), (Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -500)], (0)), 100000000, 0, -499); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -501)]), 100000000, 0, -498)], (0)), 100000000, 0, -497); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -502)]), 100000000, 0, -496), 0), 100000000, 0, -495), 0), 100000000, 0, -494), 0, (("engine/eConstr.mli", 301, 11074, 11074), ("engine/eConstr.mli", 301, 11074, 11158), 0), 0, Tag1 ("EConstr", 166)), 0); (("decompose_prod_decls", 1823), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -493), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -492), (Tag2 ([(Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -490); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -491)]), 100000000, 0, -489), 0), 100000000, 0, -488), 0), 100000000, 0, -487), 0, (("engine/eConstr.mli", 302, 11159, 11159), ("engine/eConstr.mli", 302, 11159, 11222), 0), 0, Tag1 ("EConstr", 167)), 0); (("decompose_prod_n_decls", 1824), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -486), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -485), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -484), (Tag2 ([(Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -482); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -483)]), 100000000, 0, -481), 0), 100000000, 0, -480), 0), 100000000, 0, -479), 0), 100000000, 0, -478), 0, (("engine/eConstr.mli", 303, 11223, 11223), ("engine/eConstr.mli", 303, 11223, 11295), 0), 0, Tag1 ("EConstr", 168)), 0); (("existential_type", 1825), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -477), (Tag1 (0, (Tag3 ((("existential", 1688)), 0, (0)), 100000000, 0, -476), (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -475), 0), 100000000, 0, -474), 0), 100000000, 0, -473), 0, (("engine/eConstr.mli", 305, 11297, 11297), ("engine/eConstr.mli", 305, 11297, 11356), 0), 0, Tag1 ("EConstr", 169)), 0); (("whd_evar", 1826), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -472), (Tag1 (0, (Tag3 ((("constr", 1687)), 0, (0)), 100000000, 0, -471), (Tag3 ((("constr", 1687)), 0, (0)), 100000000, 0, -470), 0), 100000000, 0, -469), 0), 100000000, 0, -468), 0, (("engine/eConstr.mli", 306, 11357, 11357), ("engine/eConstr.mli", 306, 11357, 11404), 0), 0, Tag1 ("EConstr", 170)), 0); (("eq_constr", 1827), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -467), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -466), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -465), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -464), 0), 100000000, 0, -463), 0), 100000000, 0, -462), 0), 100000000, 0, -461), 0, (("engine/eConstr.mli", 310, 11427, 11427), ("engine/eConstr.mli", 310, 11427, 11473), 0), 0, Tag1 ("EConstr", 171)), 0); (("eq_constr_nounivs", 1828), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -460), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -459), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -458), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -457), 0), 100000000, 0, -456), 0), 100000000, 0, -455), 0), 100000000, 0, -454), 0, (("engine/eConstr.mli", 311, 11474, 11474), ("engine/eConstr.mli", 311, 11474, 11528), 0), 0, Tag1 ("EConstr", 172)), 0); (("eq_constr_universes", 1829), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -453), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -452), (Tag1 (Tag1 ("nargs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -451)], (0)), 100000000, 0, -450), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -449), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -448), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("UnivProblem")), "Set"), "t"), 0, (0)), 100000000, 0, -447)], (0)), 100000000, 0, -446), 0), 100000000, 0, -445), 0), 100000000, 0, -444), 0), 100000000, 0, -443), 0), 100000000, 0, -442), 0), 100000000, 0, -441), 0, (("engine/eConstr.mli", 312, 11529, 11529), ("engine/eConstr.mli", 312, 11529, 11634), 0), 0, Tag1 ("EConstr", 173)), 0); (("leq_constr_universes", 1830), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -440), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -439), (Tag1 (Tag1 ("nargs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -438)], (0)), 100000000, 0, -437), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -436), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -435), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("UnivProblem")), "Set"), "t"), 0, (0)), 100000000, 0, -434)], (0)), 100000000, 0, -433), 0), 100000000, 0, -432), 0), 100000000, 0, -431), 0), 100000000, 0, -430), 0), 100000000, 0, -429), 0), 100000000, 0, -428), 0, (("engine/eConstr.mli", 313, 11635, 11635), ("engine/eConstr.mli", 313, 11635, 11741), 0), 0, Tag1 ("EConstr", 174)), 0); (("eq_existential", 1831), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -427), (Tag1 (0, (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -426), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -425), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -424), 0), 100000000, 0, -423), 0), 100000000, 0, -422), (Tag1 (0, (Tag3 ((("existential", 1688)), 0, (0)), 100000000, 0, -421), (Tag1 (0, (Tag3 ((("existential", 1688)), 0, (0)), 100000000, 0, -420), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -419), 0), 100000000, 0, -418), 0), 100000000, 0, -417), 0), 100000000, 0, -416), 0), 100000000, 0, -415), 0, (("engine/eConstr.mli", 314, 11742, 11742), ("engine/eConstr.mli", 314, 11742, 11834), 0), 0, Tag1 ("EConstr", 175)), 0); (("eq_constr_universes_proj", 1832), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -414), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -413), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -412), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -411), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("UnivProblem")), "Set"), "t"), 0, (0)), 100000000, 0, -410)], (0)), 100000000, 0, -409), 0), 100000000, 0, -408), 0), 100000000, 0, -407), 0), 100000000, 0, -406), 0), 100000000, 0, -405), 0, (("engine/eConstr.mli", 317, 11931, 11931), ("engine/eConstr.mli", 317, 11931, 12027), 0), 0, Tag1 ("EConstr", 176)), 0); (("compare_constr", 1833), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -404), (Tag1 (0, (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -403), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -402), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -401), 0), 100000000, 0, -400), 0), 100000000, 0, -399), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -398), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -397), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -396), 0), 100000000, 0, -395), 0), 100000000, 0, -394), 0), 100000000, 0, -393), 0), 100000000, 0, -392), 0, (("engine/eConstr.mli", 319, 12029, 12029), ("engine/eConstr.mli", 319, 12029, 12100), 0), 0, Tag1 ("EConstr", 177)), 0); (("map", 1834), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -391), (Tag1 (0, (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -390), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -389), 0), 100000000, 0, -388), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -387), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -386), 0), 100000000, 0, -385), 0), 100000000, 0, -384), 0), 100000000, 0, -383), 0, (("engine/eConstr.mli", 323, 12124, 12124), ("engine/eConstr.mli", 323, 12124, 12168), 0), 0, Tag1 ("EConstr", 178)), 0); (("map_with_binders", 1835), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -382), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -376), ((("a")), 100000000, 0, -376), 0), 100000000, 0, -381), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -376), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -380), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -379), 0), 100000000, 0, -378), 0), 100000000, 0, -377), (Tag1 (0, ((("a")), 100000000, 0, -376), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -375), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -374), 0), 100000000, 0, -373), 0), 100000000, 0, -372), 0), 100000000, 0, -371), 0), 100000000, 0, -370), 0), 100000000, 0, -369), 0, (("engine/eConstr.mli", 324, 12169, 12169), ("engine/eConstr.mli", 324, 12169, 12252), 0), 0, Tag1 ("EConstr", 179)), 0); (("map_branches", 1836), ((Tag1 (0, (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -368), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -367), 0), 100000000, 0, -366), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("case_branch", 1690)), 0, (0)), 100000000, 0, -365)], (0)), 100000000, 0, -364), (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("case_branch", 1690)), 0, (0)), 100000000, 0, -363)], (0)), 100000000, 0, -362), 0), 100000000, 0, -361), 0), 100000000, 0, -360), 0, (("engine/eConstr.mli", 325, 12253, 12253), ("engine/eConstr.mli", 325, 12253, 12322), 0), 0, Tag1 ("EConstr", 180)), 0); (("map_return_predicate", 1837), ((Tag1 (0, (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -359), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -358), 0), 100000000, 0, -357), (Tag1 (0, (Tag3 ((("case_return", 1689)), 0, (0)), 100000000, 0, -356), (Tag3 ((("case_return", 1689)), 0, (0)), 100000000, 0, -355), 0), 100000000, 0, -354), 0), 100000000, 0, -353), 0, (("engine/eConstr.mli", 326, 12323, 12323), ("engine/eConstr.mli", 326, 12323, 12388), 0), 0, Tag1 ("EConstr", 181)), 0); (("map_existential", 1838), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -352), (Tag1 (0, (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -351), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -350), 0), 100000000, 0, -349), (Tag1 (0, (Tag3 ((("existential", 1688)), 0, (0)), 100000000, 0, -348), (Tag3 ((("existential", 1688)), 0, (0)), 100000000, 0, -347), 0), 100000000, 0, -346), 0), 100000000, 0, -345), 0), 100000000, 0, -344), 0, (("engine/eConstr.mli", 327, 12389, 12389), ("engine/eConstr.mli", 327, 12389, 12465), 0), 0, Tag1 ("EConstr", 182)), 0); (("iter", 1839), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -343), (Tag1 (0, (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -342), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -341), 0), 100000000, 0, -340), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -339), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -338), 0), 100000000, 0, -337), 0), 100000000, 0, -336), 0), 100000000, 0, -335), 0, (("engine/eConstr.mli", 328, 12466, 12466), ("engine/eConstr.mli", 328, 12466, 12517), 0), 0, Tag1 ("EConstr", 183)), 0); (("iter_with_binders", 1840), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -334), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -328), ((("a")), 100000000, 0, -328), 0), 100000000, 0, -333), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -328), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -332), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -331), 0), 100000000, 0, -330), 0), 100000000, 0, -329), (Tag1 (0, ((("a")), 100000000, 0, -328), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -327), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -326), 0), 100000000, 0, -325), 0), 100000000, 0, -324), 0), 100000000, 0, -323), 0), 100000000, 0, -322), 0), 100000000, 0, -321), 0, (("engine/eConstr.mli", 329, 12518, 12518), ("engine/eConstr.mli", 329, 12518, 12608), 0), 0, Tag1 ("EConstr", 184)), 0); (("iter_with_full_binders", 1841), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -320), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -319), (Tag1 (0, (Tag1 (0, (Tag3 ((("rel_declaration", 1696)), 0, (0)), 100000000, 0, -318), (Tag1 (0, ((("a")), 100000000, 0, -311), ((("a")), 100000000, 0, -311), 0), 100000000, 0, -317), 0), 100000000, 0, -316), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -311), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -315), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -314), 0), 100000000, 0, -313), 0), 100000000, 0, -312), (Tag1 (0, ((("a")), 100000000, 0, -311), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -310), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -309), 0), 100000000, 0, -308), 0), 100000000, 0, -307), 0), 100000000, 0, -306), 0), 100000000, 0, -305), 0), 100000000, 0, -304), 0), 100000000, 0, -303), 0, (("engine/eConstr.mli", 330, 12609, 12609), ("engine/eConstr.mli", 330, 12609, 12738), 0), 0, Tag1 ("EConstr", 185)), 0); (("fold", 1842), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -302), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -297), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -301), ((("a")), 100000000, 0, -297), 0), 100000000, 0, -300), 0), 100000000, 0, -299), (Tag1 (0, ((("a")), 100000000, 0, -297), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -298), ((("a")), 100000000, 0, -297), 0), 100000000, 0, -296), 0), 100000000, 0, -295), 0), 100000000, 0, -294), 0), 100000000, 0, -293), 0, (("engine/eConstr.mli", 331, 12739, 12739), ("engine/eConstr.mli", 331, 12739, 12798), 0), 0, Tag1 ("EConstr", 186)), 0); (("fold_with_binders", 1843), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -292), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -286), ((("a")), 100000000, 0, -286), 0), 100000000, 0, -291), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -286), (Tag1 (0, ((("b")), 100000000, 0, -284), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -290), ((("b")), 100000000, 0, -284), 0), 100000000, 0, -289), 0), 100000000, 0, -288), 0), 100000000, 0, -287), (Tag1 (0, ((("a")), 100000000, 0, -286), (Tag1 (0, ((("b")), 100000000, 0, -284), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -285), ((("b")), 100000000, 0, -284), 0), 100000000, 0, -283), 0), 100000000, 0, -282), 0), 100000000, 0, -281), 0), 100000000, 0, -280), 0), 100000000, 0, -279), 0), 100000000, 0, -278), 0, (("engine/eConstr.mli", 332, 12799, 12799), ("engine/eConstr.mli", 332, 12799, 12897), 0), 0, Tag1 ("EConstr", 187)), 0); (("universes_of_constr", 1844), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -277), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -276), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Univ")), "Level"), "Set"), "t"), 0, (0)), 100000000, 0, -275), 0), 100000000, 0, -274), 0), 100000000, 0, -273), 0, (("engine/eConstr.mli", 336, 13009, 13009), ("engine/eConstr.mli", 336, 13009, 13072), 0), 0, Tag1 ("EConstr", 188)), 0); Tag3 (("Vars", 1845), 0, (Tag1 ([Tag1 (("instance", 1908), (0, 0, 0, 1, ((Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1501)], (0)), 100000000, 0, -1500)), 0, 0, 0, 0, (("engine/eConstr.mli", 345, 13185, 13185), ("engine/eConstr.mli", 345, 13185, 13208), 0), 0, 0, 0, Tag1 ("EConstr", 189)), 1, 0); Tag1 (("instance_list", 1909), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1499)], (0)), 100000000, 0, -1498)), 0, 0, 0, 0, (("engine/eConstr.mli", 346, 13209, 13209), ("engine/eConstr.mli", 346, 13209, 13236), 0), 0, 0, 0, Tag1 ("EConstr", 190)), 1, 0); Tag1 (("substl", 1910), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1497)], (0)), 100000000, 0, -1496)), 0, 0, 0, 0, (("engine/eConstr.mli", 347, 13237, 13237), ("engine/eConstr.mli", 347, 13237, 13257), 0), 0, 0, 0, Tag1 ("EConstr", 191)), 1, 0); (("lift", 1911), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1495), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1494), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1493), 0), 100000000, 0, -1492), 0), 100000000, 0, -1491), 0, (("engine/eConstr.mli", 349, 13259, 13259), ("engine/eConstr.mli", 349, 13259, 13283), 0), 0, Tag1 ("EConstr", 192)), 0); (("liftn", 1912), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1490), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1489), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1488), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1487), 0), 100000000, 0, -1486), 0), 100000000, 0, -1485), 0), 100000000, 0, -1484), 0, (("engine/eConstr.mli", 350, 13284, 13284), ("engine/eConstr.mli", 350, 13284, 13316), 0), 0, Tag1 ("EConstr", 193)), 0); (("substnl", 1913), ((Tag1 (0, (Tag3 ((("substl", 1910)), 0, (0)), 100000000, 0, -1483), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1482), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1481), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1480), 0), 100000000, 0, -1479), 0), 100000000, 0, -1478), 0), 100000000, 0, -1477), 0, (("engine/eConstr.mli", 351, 13317, 13317), ("engine/eConstr.mli", 351, 13317, 13354), 0), 0, Tag1 ("EConstr", 194)), 0); (("substl", 1914), ((Tag1 (0, (Tag3 ((("substl", 1910)), 0, (0)), 100000000, 0, -1476), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1475), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1474), 0), 100000000, 0, -1473), 0), 100000000, 0, -1472), 0, (("engine/eConstr.mli", 352, 13355, 13355), ("engine/eConstr.mli", 352, 13355, 13384), 0), 0, Tag1 ("EConstr", 195)), 0); (("subst1", 1915), ((Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1471), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1470), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1469), 0), 100000000, 0, -1468), 0), 100000000, 0, -1467), 0, (("engine/eConstr.mli", 353, 13385, 13385), ("engine/eConstr.mli", 353, 13385, 13409), 0), 0, Tag1 ("EConstr", 196)), 0); (("substnl_decl", 1916), ((Tag1 (0, (Tag3 ((("substl", 1910)), 0, (0)), 100000000, 0, -1466), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1465), (Tag1 (0, (Tag3 ((("rel_declaration", 1696)), 0, (0)), 100000000, 0, -1464), (Tag3 ((("rel_declaration", 1696)), 0, (0)), 100000000, 0, -1463), 0), 100000000, 0, -1462), 0), 100000000, 0, -1461), 0), 100000000, 0, -1460), 0, (("engine/eConstr.mli", 355, 13411, 13411), ("engine/eConstr.mli", 355, 13411, 13481), 0), 0, Tag1 ("EConstr", 197)), 0); (("substl_decl", 1917), ((Tag1 (0, (Tag3 ((("substl", 1910)), 0, (0)), 100000000, 0, -1459), (Tag1 (0, (Tag3 ((("rel_declaration", 1696)), 0, (0)), 100000000, 0, -1458), (Tag3 ((("rel_declaration", 1696)), 0, (0)), 100000000, 0, -1457), 0), 100000000, 0, -1456), 0), 100000000, 0, -1455), 0, (("engine/eConstr.mli", 356, 13482, 13482), ("engine/eConstr.mli", 356, 13482, 13544), 0), 0, Tag1 ("EConstr", 198)), 0); (("subst1_decl", 1918), ((Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1454), (Tag1 (0, (Tag3 ((("rel_declaration", 1696)), 0, (0)), 100000000, 0, -1453), (Tag3 ((("rel_declaration", 1696)), 0, (0)), 100000000, 0, -1452), 0), 100000000, 0, -1451), 0), 100000000, 0, -1450), 0, (("engine/eConstr.mli", 357, 13545, 13545), ("engine/eConstr.mli", 357, 13545, 13602), 0), 0, Tag1 ("EConstr", 199)), 0); (("replace_vars", 1919), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -1449), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -1447); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1448)]), 100000000, 0, -1446)], (0)), 100000000, 0, -1445), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1444), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1443), 0), 100000000, 0, -1442), 0), 100000000, 0, -1441), 0), 100000000, 0, -1440), 0, (("engine/eConstr.mli", 359, 13604, 13604), ("engine/eConstr.mli", 359, 13604, 13664), 0), 0, Tag1 ("EConstr", 200)), 0); (("substn_vars", 1920), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -1439), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1438), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -1437)], (0)), 100000000, 0, -1436), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1435), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1434), 0), 100000000, 0, -1433), 0), 100000000, 0, -1432), 0), 100000000, 0, -1431), 0), 100000000, 0, -1430), 0, (("engine/eConstr.mli", 360, 13665, 13665), ("engine/eConstr.mli", 360, 13665, 13725), 0), 0, Tag1 ("EConstr", 201)), 0); (("subst_vars", 1921), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -1429), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -1428)], (0)), 100000000, 0, -1427), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1426), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1425), 0), 100000000, 0, -1424), 0), 100000000, 0, -1423), 0), 100000000, 0, -1422), 0, (("engine/eConstr.mli", 361, 13726, 13726), ("engine/eConstr.mli", 361, 13726, 13778), 0), 0, Tag1 ("EConstr", 202)), 0); (("subst_var", 1922), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -1421), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -1420), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1419), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1418), 0), 100000000, 0, -1417), 0), 100000000, 0, -1416), 0), 100000000, 0, -1415), 0, (("engine/eConstr.mli", 362, 13779, 13779), ("engine/eConstr.mli", 362, 13779, 13825), 0), 0, Tag1 ("EConstr", 203)), 0); (("noccurn", 1923), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -1414), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1413), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1412), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1411), 0), 100000000, 0, -1410), 0), 100000000, 0, -1409), 0), 100000000, 0, -1408), 0, (("engine/eConstr.mli", 364, 13827, 13827), ("engine/eConstr.mli", 364, 13827, 13873), 0), 0, Tag1 ("EConstr", 204)), 0); (("noccur_between", 1924), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -1407), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1406), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1405), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1404), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1403), 0), 100000000, 0, -1402), 0), 100000000, 0, -1401), 0), 100000000, 0, -1400), 0), 100000000, 0, -1399), 0, (("engine/eConstr.mli", 365, 13874, 13874), ("engine/eConstr.mli", 365, 13874, 13934), 0), 0, Tag1 ("EConstr", 205)), 0); (("closedn", 1925), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -1398), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1397), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1396), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1395), 0), 100000000, 0, -1394), 0), 100000000, 0, -1393), 0), 100000000, 0, -1392), 0, (("engine/eConstr.mli", 367, 13936, 13936), ("engine/eConstr.mli", 367, 13936, 13982), 0), 0, Tag1 ("EConstr", 206)), 0); (("closed0", 1926), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -1391), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1390), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1389), 0), 100000000, 0, -1388), 0), 100000000, 0, -1387), 0, (("engine/eConstr.mli", 368, 13983, 13983), ("engine/eConstr.mli", 368, 13983, 14022), 0), 0, Tag1 ("EConstr", 207)), 0); (("subst_univs_level_constr", 1927), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Univ")), "universe_level_subst"), 0, (0)), 100000000, 0, -1386), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1385), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1384), 0), 100000000, 0, -1383), 0), 100000000, 0, -1382), 0, (("engine/eConstr.mli", 370, 14024, 14024), ("engine/eConstr.mli", 370, 14024, 14090), 0), 0, Tag1 ("EConstr", 208)), 0); (("subst_instance_context", 1928), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Instance"), "t"), 0, (0)), 100000000, 0, -1381), (Tag1 (0, (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -1380), (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -1379), 0), 100000000, 0, -1378), 0), 100000000, 0, -1377), 0, (("engine/eConstr.mli", 371, 14091, 14091), ("engine/eConstr.mli", 371, 14091, 14165), 0), 0, Tag1 ("EConstr", 209)), 0); (("subst_instance_constr", 1929), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Instance"), "t"), 0, (0)), 100000000, 0, -1376), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1375), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1374), 0), 100000000, 0, -1373), 0), 100000000, 0, -1372), 0, (("engine/eConstr.mli", 372, 14166, 14166), ("engine/eConstr.mli", 372, 14166, 14219), 0), 0, Tag1 ("EConstr", 210)), 0); (("subst_of_rel_context_instance", 1930), ((Tag1 (0, (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -1371), (Tag1 (0, (Tag3 ((("instance", 1908)), 0, (0)), 100000000, 0, -1370), (Tag3 ((("substl", 1910)), 0, (0)), 100000000, 0, -1369), 0), 100000000, 0, -1368), 0), 100000000, 0, -1367), 0, (("engine/eConstr.mli", 374, 14221, 14221), ("engine/eConstr.mli", 374, 14221, 14290), 0), 0, Tag1 ("EConstr", 211)), 0); (("subst_of_rel_context_instance_list", 1931), ((Tag1 (0, (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -1366), (Tag1 (0, (Tag3 ((("instance_list", 1909)), 0, (0)), 100000000, 0, -1365), (Tag3 ((("substl", 1910)), 0, (0)), 100000000, 0, -1364), 0), 100000000, 0, -1363), 0), 100000000, 0, -1362), 0, (("engine/eConstr.mli", 375, 14291, 14291), ("engine/eConstr.mli", 375, 14291, 14370), 0), 0, Tag1 ("EConstr", 212)), 0); (("liftn_rel_context", 1932), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1361), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1360), (Tag1 (0, (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -1359), (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -1358), 0), 100000000, 0, -1357), 0), 100000000, 0, -1356), 0), 100000000, 0, -1355), 0, (("engine/eConstr.mli", 377, 14372, 14372), ("engine/eConstr.mli", 377, 14372, 14436), 0), 0, Tag1 ("EConstr", 213)), 0); (("lift_rel_context", 1933), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1354), (Tag1 (0, (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -1353), (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -1352), 0), 100000000, 0, -1351), 0), 100000000, 0, -1350), 0, (("engine/eConstr.mli", 378, 14437, 14437), ("engine/eConstr.mli", 378, 14437, 14493), 0), 0, Tag1 ("EConstr", 214)), 0); (("substnl_rel_context", 1934), ((Tag1 (0, (Tag3 ((("substl", 1910)), 0, (0)), 100000000, 0, -1349), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1348), (Tag1 (0, (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -1347), (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -1346), 0), 100000000, 0, -1345), 0), 100000000, 0, -1344), 0), 100000000, 0, -1343), 0, (("engine/eConstr.mli", 379, 14494, 14494), ("engine/eConstr.mli", 379, 14494, 14563), 0), 0, Tag1 ("EConstr", 215)), 0); (("substl_rel_context", 1935), ((Tag1 (0, (Tag3 ((("substl", 1910)), 0, (0)), 100000000, 0, -1342), (Tag1 (0, (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -1341), (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -1340), 0), 100000000, 0, -1339), 0), 100000000, 0, -1338), 0, (("engine/eConstr.mli", 380, 14564, 14564), ("engine/eConstr.mli", 380, 14564, 14625), 0), 0, Tag1 ("EConstr", 216)), 0); (("smash_rel_context", 1936), ((Tag1 (0, (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -1337), (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -1336), 0), 100000000, 0, -1335), 0, (("engine/eConstr.mli", 381, 14626, 14626), ("engine/eConstr.mli", 381, 14626, 14676), 0), 0, Tag1 ("EConstr", 217)), 0); (("esubst", 1937), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1334), (Tag1 (0, ((("a")), 100000000, 0, -1330), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1333), 0), 100000000, 0, -1332), 0), 100000000, 0, -1331), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Esubst")), "subs"), [((("a")), 100000000, 0, -1330)], (0)), 100000000, 0, -1329), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1328), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1327), 0), 100000000, 0, -1326), 0), 100000000, 0, -1325), 0), 100000000, 0, -1324), 0, (("engine/eConstr.mli", 383, 14678, 14678), ("engine/eConstr.mli", 383, 14678, 14735), 0), 0, Tag1 ("EConstr", 218)), 0); Tag1 (("substituend", 1938), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("engine/eConstr.mli", 385, 14737, 14737), ("engine/eConstr.mli", 385, 14737, 14753), 0), 0, 0, 0, Tag1 ("EConstr", 219)), 1, 0); (("make_substituend", 1939), ((Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1323), (Tag3 ((("substituend", 1938)), 0, (0)), 100000000, 0, -1322), 0), 100000000, 0, -1321), 0, (("engine/eConstr.mli", 386, 14754, 14754), ("engine/eConstr.mli", 386, 14754, 14793), 0), 0, Tag1 ("EConstr", 220)), 0); (("lift_substituend", 1940), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1320), (Tag1 (0, (Tag3 ((("substituend", 1938)), 0, (0)), 100000000, 0, -1319), (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1318), 0), 100000000, 0, -1317), 0), 100000000, 0, -1316), 0, (("engine/eConstr.mli", 387, 14794, 14794), ("engine/eConstr.mli", 387, 14794, 14840), 0), 0, Tag1 ("EConstr", 221)), 0)]), 0, (("engine/eConstr.mli", 340, 13100, 13100), ("engine/eConstr.mli", 389, 14842, 14845), 0), Tag1 ("EConstr", 222)), 0, 0); (("push_rel", 1846), ((Tag1 (0, (Tag3 ((("rel_declaration", 1696)), 0, (0)), 100000000, 0, -272), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -271), (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -270), 0), 100000000, 0, -269), 0), 100000000, 0, -268), 0, (("engine/eConstr.mli", 393, 14880, 14880), ("engine/eConstr.mli", 393, 14880, 14924), 0), 0, Tag1 ("EConstr", 223)), 0); (("push_rel_context", 1847), ((Tag1 (0, (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -267), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -266), (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -265), 0), 100000000, 0, -264), 0), 100000000, 0, -263), 0, (("engine/eConstr.mli", 394, 14925, 14925), ("engine/eConstr.mli", 394, 14925, 14973), 0), 0, Tag1 ("EConstr", 224)), 0); (("push_rec_types", 1848), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "prec_declaration"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -261); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -262)], (0)), 100000000, 0, -260), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -259), (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -258), 0), 100000000, 0, -257), 0), 100000000, 0, -256), 0, (("engine/eConstr.mli", 395, 14974, 14974), ("engine/eConstr.mli", 395, 14974, 15039), 0), 0, Tag1 ("EConstr", 225)), 0); (("push_named", 1849), ((Tag1 (0, (Tag3 ((("named_declaration", 1695)), 0, (0)), 100000000, 0, -255), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -254), (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -253), 0), 100000000, 0, -252), 0), 100000000, 0, -251), 0, (("engine/eConstr.mli", 397, 15041, 15041), ("engine/eConstr.mli", 397, 15041, 15089), 0), 0, Tag1 ("EConstr", 226)), 0); (("push_named_context", 1850), ((Tag1 (0, (Tag3 ((("named_context", 1698)), 0, (0)), 100000000, 0, -250), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -249), (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -248), 0), 100000000, 0, -247), 0), 100000000, 0, -246), 0, (("engine/eConstr.mli", 398, 15090, 15090), ("engine/eConstr.mli", 398, 15090, 15142), 0), 0, Tag1 ("EConstr", 227)), 0); (("push_named_context_val", 1851), ((Tag1 (0, (Tag3 ((("named_declaration", 1695)), 0, (0)), 100000000, 0, -245), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "named_context_val"), 0, (0)), 100000000, 0, -244), (Tag3 (Tag1 ((Tag2 ("Environ")), "named_context_val"), 0, (0)), 100000000, 0, -243), 0), 100000000, 0, -242), 0), 100000000, 0, -241), 0, (("engine/eConstr.mli", 399, 15143, 15143), ("engine/eConstr.mli", 399, 15143, 15232), 0), 0, Tag1 ("EConstr", 228)), 0); (("rel_context", 1852), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -240), (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -239), 0), 100000000, 0, -238), 0, (("engine/eConstr.mli", 401, 15234, 15234), ("engine/eConstr.mli", 401, 15234, 15270), 0), 0, Tag1 ("EConstr", 229)), 0); (("named_context", 1853), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -237), (Tag3 ((("named_context", 1698)), 0, (0)), 100000000, 0, -236), 0), 100000000, 0, -235), 0, (("engine/eConstr.mli", 402, 15271, 15271), ("engine/eConstr.mli", 402, 15271, 15311), 0), 0, Tag1 ("EConstr", 230)), 0); (("val_of_named_context", 1854), ((Tag1 (0, (Tag3 ((("named_context", 1698)), 0, (0)), 100000000, 0, -234), (Tag3 (Tag1 ((Tag2 ("Environ")), "named_context_val"), 0, (0)), 100000000, 0, -233), 0), 100000000, 0, -232), 0, (("engine/eConstr.mli", 404, 15313, 15313), ("engine/eConstr.mli", 404, 15313, 15374), 0), 0, Tag1 ("EConstr", 231)), 0); (("named_context_of_val", 1855), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "named_context_val"), 0, (0)), 100000000, 0, -231), (Tag3 ((("named_context", 1698)), 0, (0)), 100000000, 0, -230), 0), 100000000, 0, -229), 0, (("engine/eConstr.mli", 405, 15375, 15375), ("engine/eConstr.mli", 405, 15375, 15436), 0), 0, Tag1 ("EConstr", 232)), 0); (("lookup_rel", 1856), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -228), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -227), (Tag3 ((("rel_declaration", 1696)), 0, (0)), 100000000, 0, -226), 0), 100000000, 0, -225), 0), 100000000, 0, -224), 0, (("engine/eConstr.mli", 407, 15438, 15438), ("engine/eConstr.mli", 407, 15438, 15484), 0), 0, Tag1 ("EConstr", 233)), 0); (("lookup_named", 1857), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "variable"), 0, (0)), 100000000, 0, -223), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -222), (Tag3 ((("named_declaration", 1695)), 0, (0)), 100000000, 0, -221), 0), 100000000, 0, -220), 0), 100000000, 0, -219), 0, (("engine/eConstr.mli", 408, 15485, 15485), ("engine/eConstr.mli", 408, 15485, 15540), 0), 0, Tag1 ("EConstr", 234)), 0); (("lookup_named_val", 1858), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "variable"), 0, (0)), 100000000, 0, -218), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "named_context_val"), 0, (0)), 100000000, 0, -217), (Tag3 ((("named_declaration", 1695)), 0, (0)), 100000000, 0, -216), 0), 100000000, 0, -215), 0), 100000000, 0, -214), 0, (("engine/eConstr.mli", 409, 15541, 15541), ("engine/eConstr.mli", 409, 15541, 15614), 0), 0, Tag1 ("EConstr", 235)), 0); (("map_rel_context_in_env", 1859), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -213), (Tag1 (0, (Tag3 ((("constr", 1687)), 0, (0)), 100000000, 0, -212), (Tag3 ((("constr", 1687)), 0, (0)), 100000000, 0, -211), 0), 100000000, 0, -210), 0), 100000000, 0, -209), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -208), (Tag1 (0, (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -207), (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -206), 0), 100000000, 0, -205), 0), 100000000, 0, -204), 0), 100000000, 0, -203), 0, (("engine/eConstr.mli", 411, 15616, 15616), ("engine/eConstr.mli", 412, 15645, 15709), 0), 0, Tag1 ("EConstr", 236)), 0); (("match_named_context_val", 1860), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "named_context_val"), 0, (0)), 100000000, 0, -202), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("named_declaration", 1695)), 0, (0)), 100000000, 0, -200); (Tag3 (Tag1 ((Tag2 ("Environ")), "named_context_val"), 0, (0)), 100000000, 0, -201)]), 100000000, 0, -199)], (0)), 100000000, 0, -198), 0), 100000000, 0, -197), 0, (("engine/eConstr.mli", 414, 15711, 15711), ("engine/eConstr.mli", 415, 15741, 15810), 0), 0, Tag1 ("EConstr", 237)), 0); (("identity_subst_val", 1861), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "named_context_val"), 0, (0)), 100000000, 0, -196), (Tag3 (Tag1 ((Tag2 ("SList")), "t"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -195)], (0)), 100000000, 0, -194), 0), 100000000, 0, -193), 0, (("engine/eConstr.mli", 417, 15812, 15812), ("engine/eConstr.mli", 417, 15812, 15867), 0), 0, Tag1 ("EConstr", 238)), 0); (("fresh_global", 1862), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -192)], (0)), 100000000, 0, -191), (Tag1 (Tag1 ("rigid"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Evd")), "rigid"), 0, (0)), 100000000, 0, -190)], (0)), 100000000, 0, -189), (Tag1 (Tag1 ("names"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Instance"), "t"), 0, (0)), 100000000, 0, -188)], (0)), 100000000, 0, -187), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -186), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -185), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -184), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -182); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -183)]), 100000000, 0, -181), 0), 100000000, 0, -180), 0), 100000000, 0, -179), 0), 100000000, 0, -178), 0), 100000000, 0, -177), 0), 100000000, 0, -176), 0), 100000000, 0, -175), 0, (("engine/eConstr.mli", 420, 15899, 15899), ("engine/eConstr.mli", 422, 15995, 16042), 0), 0, Tag1 ("EConstr", 240)), 0); (("is_global", 1863), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -174), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -173), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -172), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -171), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -170), 0), 100000000, 0, -169), 0), 100000000, 0, -168), 0), 100000000, 0, -167), 0), 100000000, 0, -166), 0, (("engine/eConstr.mli", 424, 16044, 16044), ("engine/eConstr.mli", 425, 16114, 16166), 0), [(("ocaml.deprecated", (("engine/eConstr.mli", 425, 16114, 16117), ("engine/eConstr.mli", 425, 16114, 16133), 0)), ([([(Tag1 (Tag2 ("Use [EConstr.isRefX] instead.", (("engine/eConstr.mli", 425, 16114, 16135), ("engine/eConstr.mli", 425, 16114, 16164), 0), 0)), (("engine/eConstr.mli", 425, 16114, 16134), ("engine/eConstr.mli", 425, 16114, 16165), 0), 0, 0)], (("engine/eConstr.mli", 425, 16114, 16134), ("engine/eConstr.mli", 425, 16114, 16165), 0))]), (("engine/eConstr.mli", 425, 16114, 16114), ("engine/eConstr.mli", 425, 16114, 16166), 0))], Tag1 ("EConstr", 241)), 0); (("expand_case", 1864), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -165), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -164), (Tag1 (0, (Tag3 ((("case", 1704)), 0, (0)), 100000000, 0, -163), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Constr")), "case_info"), 0, (0)), 100000000, 0, -157); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -158); (Tag3 ((("case_invert", 1703)), 0, (0)), 100000000, 0, -159); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -160); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -162)], (0)), 100000000, 0, -161)]), 100000000, 0, -156), 0), 100000000, 0, -155), 0), 100000000, 0, -154), 0), 100000000, 0, -153), 0, (("engine/eConstr.mli", 427, 16168, 16168), ("engine/eConstr.mli", 428, 16217, 16270), 0), 0, Tag1 ("EConstr", 242)), 0); (("annotate_case", 1865), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -152), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -151), (Tag1 (0, (Tag3 ((("case", 1704)), 0, (0)), 100000000, 0, -150), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Constr")), "case_info"), 0, (0)), 100000000, 0, -137); (Tag3 (Tag1 ((("EInstance", 1702)), "t"), 0, (0)), 100000000, 0, -138); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -140)], (0)), 100000000, 0, -139); (Tag2 ([(Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -142); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -143)]), 100000000, 0, -141); (Tag3 ((("case_invert", 1703)), 0, (0)), 100000000, 0, -144); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -145); (Tag3 ((Tag3 ("array", 8)), [(Tag2 ([(Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -148); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -149)]), 100000000, 0, -147)], (0)), 100000000, 0, -146)]), 100000000, 0, -136), 0), 100000000, 0, -135), 0), 100000000, 0, -134), 0), 100000000, 0, -133), 0, (("engine/eConstr.mli", 430, 16272, 16272), ("engine/eConstr.mli", 431, 16331, 16430), 0), 0, Tag1 ("EConstr", 243)), 0); (("expand_branch", 1866), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -132), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -131), (Tag1 (0, (Tag3 (Tag1 ((("EInstance", 1702)), "t"), 0, (0)), 100000000, 0, -130), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -129)], (0)), 100000000, 0, -128), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "constructor"), 0, (0)), 100000000, 0, -127), (Tag1 (0, (Tag3 ((("case_branch", 1690)), 0, (0)), 100000000, 0, -126), (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -125), 0), 100000000, 0, -124), 0), 100000000, 0, -123), 0), 100000000, 0, -122), 0), 100000000, 0, -121), 0), 100000000, 0, -120), 0), 100000000, 0, -119), 0, (("engine/eConstr.mli", 434, 16493, 16493), ("engine/eConstr.mli", 435, 16544, 16613), 0), 0, Tag1 ("EConstr", 244)), 0); (("contract_case", 1867), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -118), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -117), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Constr")), "case_info"), 0, (0)), 100000000, 0, -111); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -112); (Tag3 ((("case_invert", 1703)), 0, (0)), 100000000, 0, -113); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -114); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -116)], (0)), 100000000, 0, -115)]), 100000000, 0, -110), (Tag3 ((("case", 1704)), 0, (0)), 100000000, 0, -109), 0), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), 0, (("engine/eConstr.mli", 439, 16747, 16747), ("engine/eConstr.mli", 440, 16798, 16851), 0), 0, Tag1 ("EConstr", 245)), 0); (("of_existential", 1868), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "existential"), 0, (0)), 100000000, 0, -105), (Tag3 ((("existential", 1688)), 0, (0)), 100000000, 0, -104), 0), 100000000, 0, -103), 0, (("engine/eConstr.mli", 444, 16871, 16871), ("engine/eConstr.mli", 444, 16871, 16925), 0), 0, Tag1 ("EConstr", 246)), 0); (("of_named_decl", 1869), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Context")), "Named"), "Declaration"), "pt"), [(Tag3 (Tag1 ((Tag2 ("Constr")), "t"), 0, (0)), 100000000, 0, -101); (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -102)], (0)), 100000000, 0, -100), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Context")), "Named"), "Declaration"), "pt"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -98); (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -99)], (0)), 100000000, 0, -97), 0), 100000000, 0, -96), 0, (("engine/eConstr.mli", 445, 16926, 16926), ("engine/eConstr.mli", 445, 16926, 17042), 0), 0, Tag1 ("EConstr", 247)), 0); (("of_rel_decl", 1870), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Context")), "Rel"), "Declaration"), "pt"), [(Tag3 (Tag1 ((Tag2 ("Constr")), "t"), 0, (0)), 100000000, 0, -94); (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -95)], (0)), 100000000, 0, -93), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Context")), "Rel"), "Declaration"), "pt"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -91); (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -92)], (0)), 100000000, 0, -90), 0), 100000000, 0, -89), 0, (("engine/eConstr.mli", 446, 17043, 17043), ("engine/eConstr.mli", 446, 17043, 17153), 0), 0, Tag1 ("EConstr", 248)), 0); (("to_rel_decl", 1871), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -88), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Context")), "Rel"), "Declaration"), "pt"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -86); (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -87)], (0)), 100000000, 0, -85), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Context")), "Rel"), "Declaration"), "pt"), [(Tag3 (Tag1 ((Tag2 ("Constr")), "t"), 0, (0)), 100000000, 0, -83); (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -84)], (0)), 100000000, 0, -82), 0), 100000000, 0, -81), 0), 100000000, 0, -80), 0, (("engine/eConstr.mli", 448, 17155, 17155), ("engine/eConstr.mli", 448, 17155, 17281), 0), 0, Tag1 ("EConstr", 249)), 0); (("of_named_context", 1872), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "named_context"), 0, (0)), 100000000, 0, -79), (Tag3 ((("named_context", 1698)), 0, (0)), 100000000, 0, -78), 0), 100000000, 0, -77), 0, (("engine/eConstr.mli", 450, 17283, 17283), ("engine/eConstr.mli", 450, 17283, 17343), 0), 0, Tag1 ("EConstr", 250)), 0); (("of_rel_context", 1873), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -76), (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), 0, (("engine/eConstr.mli", 451, 17344, 17344), ("engine/eConstr.mli", 451, 17344, 17398), 0), 0, Tag1 ("EConstr", 251)), 0); (("of_case_invert", 1874), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "case_invert"), 0, (0)), 100000000, 0, -73), (Tag3 ((("case_invert", 1703)), 0, (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0, (("engine/eConstr.mli", 453, 17400, 17400), ("engine/eConstr.mli", 453, 17400, 17454), 0), 0, Tag1 ("EConstr", 252)), 0); (("of_constr_array", 1875), ((Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "t"), 0, (0)), 100000000, 0, -70)], (0)), 100000000, 0, -69), (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -68)], (0)), 100000000, 0, -67), 0), 100000000, 0, -66), 0, (("engine/eConstr.mli", 455, 17456, 17456), ("engine/eConstr.mli", 455, 17456, 17503), 0), 0, Tag1 ("EConstr", 253)), 0); Tag3 (("Unsafe", 1876), 0, (Tag1 ([(("to_constr", 1941), ((Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1545), (Tag3 (Tag1 ((Tag2 ("Constr")), "t"), 0, (0)), 100000000, 0, -1544), 0), 100000000, 0, -1543), 0, (("engine/eConstr.mli", 461, 17555, 17557), ("engine/eConstr.mli", 461, 17555, 17586), 0), 0, Tag1 ("EConstr", 254)), 0); (("to_constr_array", 1942), ((Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1542)], (0)), 100000000, 0, -1541), (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "t"), 0, (0)), 100000000, 0, -1540)], (0)), 100000000, 0, -1539), 0), 100000000, 0, -1538), 0, (("engine/eConstr.mli", 464, 17649, 17651), ("engine/eConstr.mli", 464, 17649, 17698), 0), 0, Tag1 ("EConstr", 255)), 0); (("to_rel_decl", 1943), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Context")), "Rel"), "Declaration"), "pt"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1536); (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -1537)], (0)), 100000000, 0, -1535), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Context")), "Rel"), "Declaration"), "pt"), [(Tag3 (Tag1 ((Tag2 ("Constr")), "t"), 0, (0)), 100000000, 0, -1533); (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -1534)], (0)), 100000000, 0, -1532), 0), 100000000, 0, -1531), 0, (("engine/eConstr.mli", 467, 17761, 17763), ("engine/eConstr.mli", 467, 17761, 17873), 0), 0, Tag1 ("EConstr", 256)), 0); (("to_named_decl", 1944), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Context")), "Named"), "Declaration"), "pt"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1529); (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -1530)], (0)), 100000000, 0, -1528), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Context")), "Named"), "Declaration"), "pt"), [(Tag3 (Tag1 ((Tag2 ("Constr")), "t"), 0, (0)), 100000000, 0, -1526); (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -1527)], (0)), 100000000, 0, -1525), 0), 100000000, 0, -1524), 0, (("engine/eConstr.mli", 470, 17936, 17938), ("engine/eConstr.mli", 470, 17936, 18054), 0), 0, Tag1 ("EConstr", 257)), 0); (("to_named_context", 1945), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Context")), "Named"), "pt"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1522); (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -1523)], (0)), 100000000, 0, -1521), (Tag3 (Tag1 ((Tag2 ("Constr")), "named_context"), 0, (0)), 100000000, 0, -1520), 0), 100000000, 0, -1519), 0, (("engine/eConstr.mli", 473, 18117, 18119), ("engine/eConstr.mli", 473, 18117, 18193), 0), 0, Tag1 ("EConstr", 258)), 0); (("to_rel_context", 1946), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Context")), "Rel"), "pt"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1517); (Tag3 ((("types", 1686)), 0, (0)), 100000000, 0, -1518)], (0)), 100000000, 0, -1516), (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -1515), 0), 100000000, 0, -1514), 0, (("engine/eConstr.mli", 475, 18195, 18197), ("engine/eConstr.mli", 475, 18195, 18265), 0), 0, Tag1 ("EConstr", 259)), 0); (("to_sorts", 1947), ((Tag1 (0, (Tag3 (Tag1 ((("ESorts", 1701)), "t"), 0, (0)), 100000000, 0, -1513), (Tag3 (Tag1 ((Tag2 ("Sorts")), "t"), 0, (0)), 100000000, 0, -1512), 0), 100000000, 0, -1511), 0, (("engine/eConstr.mli", 477, 18267, 18269), ("engine/eConstr.mli", 477, 18267, 18303), 0), 0, Tag1 ("EConstr", 260)), 0); (("to_instance", 1948), ((Tag1 (0, (Tag3 (Tag1 ((("EInstance", 1702)), "t"), 0, (0)), 100000000, 0, -1510), (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Instance"), "t"), 0, (0)), 100000000, 0, -1509), 0), 100000000, 0, -1508), 0, (("engine/eConstr.mli", 480, 18366, 18368), ("engine/eConstr.mli", 480, 18366, 18416), 0), 0, Tag1 ("EConstr", 261)), 0); (("to_case_invert", 1949), ((Tag1 (0, (Tag3 ((("case_invert", 1703)), 0, (0)), 100000000, 0, -1507), (Tag3 (Tag1 ((Tag2 ("Constr")), "case_invert"), 0, (0)), 100000000, 0, -1506), 0), 100000000, 0, -1505), 0, (("engine/eConstr.mli", 483, 18479, 18481), ("engine/eConstr.mli", 483, 18479, 18535), 0), 0, Tag1 ("EConstr", 262)), 0); (("eq", 1950), ((Tag3 (Tag1 ((Tag2 ("CSig")), "eq"), [(Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -1503); (Tag3 (Tag1 ((Tag2 ("Constr")), "t"), 0, (0)), 100000000, 0, -1504)], (0)), 100000000, 0, -1502), 0, (("engine/eConstr.mli", 485, 18537, 18539), ("engine/eConstr.mli", 485, 18537, 18564), 0), 0, Tag1 ("EConstr", 263)), 0)]), 0, (("engine/eConstr.mli", 459, 17535, 17535), ("engine/eConstr.mli", 487, 18614, 18617), 0), Tag1 ("EConstr", 264)), 0, 0); (("decompose_lambda_assum", 1877), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -65), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -64), (Tag2 ([(Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -62); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -63)]), 100000000, 0, -61), 0), 100000000, 0, -60), 0), 100000000, 0, -59), 0, (("engine/eConstr.mli", 491, 18638, 18638), ("engine/eConstr.mli", 492, 18704, 18764), 0), [(("ocaml.deprecated", (("engine/eConstr.mli", 492, 18704, 18707), ("engine/eConstr.mli", 492, 18704, 18723), 0)), ([([(Tag1 (Tag2 ("Use [decompose_lambda_decls] instead.", (("engine/eConstr.mli", 492, 18704, 18725), ("engine/eConstr.mli", 492, 18704, 18762), 0), 0)), (("engine/eConstr.mli", 492, 18704, 18724), ("engine/eConstr.mli", 492, 18704, 18763), 0), 0, 0)], (("engine/eConstr.mli", 492, 18704, 18724), ("engine/eConstr.mli", 492, 18704, 18763), 0))]), (("engine/eConstr.mli", 492, 18704, 18704), ("engine/eConstr.mli", 492, 18704, 18764), 0))], Tag1 ("EConstr", 265)), 0); (("decompose_prod_assum", 1878), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -58), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -57), (Tag2 ([(Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -55); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -56)]), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0, (("engine/eConstr.mli", 493, 18765, 18765), ("engine/eConstr.mli", 494, 18829, 18887), 0), [(("ocaml.deprecated", (("engine/eConstr.mli", 494, 18829, 18832), ("engine/eConstr.mli", 494, 18829, 18848), 0)), ([([(Tag1 (Tag2 ("Use [decompose_prod_decls] instead.", (("engine/eConstr.mli", 494, 18829, 18850), ("engine/eConstr.mli", 494, 18829, 18885), 0), 0)), (("engine/eConstr.mli", 494, 18829, 18849), ("engine/eConstr.mli", 494, 18829, 18886), 0), 0, 0)], (("engine/eConstr.mli", 494, 18829, 18849), ("engine/eConstr.mli", 494, 18829, 18886), 0))]), (("engine/eConstr.mli", 494, 18829, 18829), ("engine/eConstr.mli", 494, 18829, 18887), 0))], Tag1 ("EConstr", 266)), 0); (("decompose_prod_n_assum", 1879), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -51), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -49), (Tag2 ([(Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -47); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -48)]), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("engine/eConstr.mli", 495, 18888, 18888), ("engine/eConstr.mli", 496, 18961, 19021), 0), [(("ocaml.deprecated", (("engine/eConstr.mli", 496, 18961, 18964), ("engine/eConstr.mli", 496, 18961, 18980), 0)), ([([(Tag1 (Tag2 ("Use [decompose_prod_n_decls] instead.", (("engine/eConstr.mli", 496, 18961, 18982), ("engine/eConstr.mli", 496, 18961, 19019), 0), 0)), (("engine/eConstr.mli", 496, 18961, 18981), ("engine/eConstr.mli", 496, 18961, 19020), 0), 0, 0)], (("engine/eConstr.mli", 496, 18961, 18981), ("engine/eConstr.mli", 496, 18961, 19020), 0))]), (("engine/eConstr.mli", 496, 18961, 18961), ("engine/eConstr.mli", 496, 18961, 19021), 0))], Tag1 ("EConstr", 267)), 0); (("prod_assum", 1880), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -42), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -41), (Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("engine/eConstr.mli", 497, 19022, 19022), ("engine/eConstr.mli", 498, 19072, 19120), 0), [(("ocaml.deprecated", (("engine/eConstr.mli", 498, 19072, 19075), ("engine/eConstr.mli", 498, 19072, 19091), 0)), ([([(Tag1 (Tag2 ("Use [prod_decls] instead.", (("engine/eConstr.mli", 498, 19072, 19093), ("engine/eConstr.mli", 498, 19072, 19118), 0), 0)), (("engine/eConstr.mli", 498, 19072, 19092), ("engine/eConstr.mli", 498, 19072, 19119), 0), 0, 0)], (("engine/eConstr.mli", 498, 19072, 19092), ("engine/eConstr.mli", 498, 19072, 19119), 0))]), (("engine/eConstr.mli", 498, 19072, 19072), ("engine/eConstr.mli", 498, 19072, 19120), 0))], Tag1 ("EConstr", 268)), 0); (("decompose_lam", 1881), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -37), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -36), (Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -33)], (0)), 100000000, 0, -32); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -34)]), 100000000, 0, -31)], (0)), 100000000, 0, -30); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -35)]), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("engine/eConstr.mli", 500, 19122, 19122), ("engine/eConstr.mli", 501, 19206, 19260), 0), [(("ocaml.deprecated", (("engine/eConstr.mli", 501, 19206, 19209), ("engine/eConstr.mli", 501, 19206, 19225), 0)), ([([(Tag1 (Tag2 ("Use [decompose_lambda] instead.", (("engine/eConstr.mli", 501, 19206, 19227), ("engine/eConstr.mli", 501, 19206, 19258), 0), 0)), (("engine/eConstr.mli", 501, 19206, 19226), ("engine/eConstr.mli", 501, 19206, 19259), 0), 0, 0)], (("engine/eConstr.mli", 501, 19206, 19226), ("engine/eConstr.mli", 501, 19206, 19259), 0))]), (("engine/eConstr.mli", 501, 19206, 19206), ("engine/eConstr.mli", 501, 19206, 19260), 0))], Tag1 ("EConstr", 269)), 0); (("decompose_lam_n_assum", 1882), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -26), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -25), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -24), (Tag2 ([(Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -22); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -23)]), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("engine/eConstr.mli", 502, 19261, 19261), ("engine/eConstr.mli", 503, 19333, 19395), 0), [(("ocaml.deprecated", (("engine/eConstr.mli", 503, 19333, 19336), ("engine/eConstr.mli", 503, 19333, 19352), 0)), ([([(Tag1 (Tag2 ("Use [decompose_lambda_n_assum] instead.", (("engine/eConstr.mli", 503, 19333, 19354), ("engine/eConstr.mli", 503, 19333, 19393), 0), 0)), (("engine/eConstr.mli", 503, 19333, 19353), ("engine/eConstr.mli", 503, 19333, 19394), 0), 0, 0)], (("engine/eConstr.mli", 503, 19333, 19353), ("engine/eConstr.mli", 503, 19333, 19394), 0))]), (("engine/eConstr.mli", 503, 19333, 19333), ("engine/eConstr.mli", 503, 19333, 19395), 0))], Tag1 ("EConstr", 270)), 0); (("decompose_lam_n_decls", 1883), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -17), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -16), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -15), (Tag2 ([(Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -13); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -14)]), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("engine/eConstr.mli", 504, 19396, 19396), ("engine/eConstr.mli", 505, 19468, 19530), 0), [(("ocaml.deprecated", (("engine/eConstr.mli", 505, 19468, 19471), ("engine/eConstr.mli", 505, 19468, 19487), 0)), ([([(Tag1 (Tag2 ("Use [decompose_lambda_n_decls] instead.", (("engine/eConstr.mli", 505, 19468, 19489), ("engine/eConstr.mli", 505, 19468, 19528), 0), 0)), (("engine/eConstr.mli", 505, 19468, 19488), ("engine/eConstr.mli", 505, 19468, 19529), 0), 0, 0)], (("engine/eConstr.mli", 505, 19468, 19488), ("engine/eConstr.mli", 505, 19468, 19529), 0))]), (("engine/eConstr.mli", 505, 19468, 19468), ("engine/eConstr.mli", 505, 19468, 19530), 0))], Tag1 ("EConstr", 271)), 0); (("decompose_lam_assum", 1884), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -8), (Tag1 (0, (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -7), (Tag2 ([(Tag3 ((("rel_context", 1700)), 0, (0)), 100000000, 0, -5); (Tag3 ((("t", 1685)), 0, (0)), 100000000, 0, -6)]), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("engine/eConstr.mli", 506, 19531, 19531), ("engine/eConstr.mli", 507, 19594, 19654), 0), [(("ocaml.deprecated", (("engine/eConstr.mli", 507, 19594, 19597), ("engine/eConstr.mli", 507, 19594, 19613), 0)), ([([(Tag1 (Tag2 ("Use [decompose_lambda_assum] instead.", (("engine/eConstr.mli", 507, 19594, 19615), ("engine/eConstr.mli", 507, 19594, 19652), 0), 0)), (("engine/eConstr.mli", 507, 19594, 19614), ("engine/eConstr.mli", 507, 19594, 19653), 0), 0, 0)], (("engine/eConstr.mli", 507, 19594, 19614), ("engine/eConstr.mli", 507, 19594, 19653), 0))]), (("engine/eConstr.mli", 507, 19594, 19594), ("engine/eConstr.mli", 507, 19594, 19654), 0))], Tag1 ("EConstr", 272)), 0)], "EConstr", [("EConstr", ("\201aW\156\157;N\004\201V\208\006L\166\211)")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("UnivSubst", ("\190qu\031mc\130\181\003G]\132\"\219m)")); ("UnivProblem", ("6'\161\018\181\001.\253\000\141a6\171\1727\155")); ("UnivNames", ("%\151_\209%+JM$n\001\232\194n\178N")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UState", ("SD\203\215|\136\n\251\239\208\148\215C\n\167\005")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Store", ("/dT\252\145\179pq\216{\181\206\190K+U")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("Section", ("\245\207\b\021\142v=\155#w\246}\"4b\006")); ("Safe_typing", (")\250?\164\145\132\241\127\186\152h+\145\"\237l")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("Nativevalues", ("8:\007\025e\226c,\001\171\146#l\210\171\152")); ("Nativelib", ("V\239\205Y1\147E:,\176\196Hy\1483|")); ("Nativecode", ("\190\185\255\006m\012\210\163\138Rz\247\15283\183")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Monad", ("\244\171T\157\194p\187\160\149\195{\132\222\020\253\148")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hook", ("\183\194\223\003\155\169',\187\240a;E\b\1396")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Genlambda", ("\170}\024\241\141\222\136S\169\219\2212i\134KI")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evd", ("\211\205p\193\216\129r\006\239oN\142ar\196\175")); ("Evar_kinds", ("\023L\186\132\218}\254\221\185\198\220\200h\003{\021")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conversion", ("\158\150&\195M\tv\127|\029\158RRK\211A")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CDebug", ("^4\210p7\239!3\138\138\213?\239`\250\157")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
val decompose_lam_assum : Evd.evar_map -> t -> rel_context * t
