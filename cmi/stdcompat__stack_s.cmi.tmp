module type S =
  sig
    type 'a t = 'a Stack.t
    exception Empty
    val pop_opt : 'a t -> 'a option
    val top_opt : 'a t -> 'a option
    val to_seq : 'a t -> 'a Seq.t
    val add_seq : 'a t -> 'a Seq.t -> unit
    val of_seq : 'a Seq.t -> 'a t
    val fold : ('b -> 'a -> 'b) -> 'b -> 'a t -> 'b
    val create : unit -> 'a t
    val push : 'a -> 'a t -> unit
    val pop : 'a t -> 'a
    val top : 'a t -> 'a
    val clear : 'a t -> unit
    val copy : 'a t -> 'a t
    val is_empty : 'a t -> bool
    val length : 'a t -> int
    val iter : ('a -> unit) -> 'a t -> unit("DEBUG:rule", [Tag4 (("S", 462), ((Tag1 ([Tag1 (("t", 463), ([((("a")), 100000000, 0, -71)], 1, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Stack"), "t"), [((("a")), 100000000, 0, -71)], (0)), 100000000, 0, -70)), [15], [2], 0, 0, (("stdcompat__stack_s.mli", 3, 21, 21), ("stdcompat__stack_s.mli", 3, 21, 44), 0), 0, 0, 0, Tag1 ("Stdcompat__stack_s", 0)), 1, 0); Tag2 (("Empty", 464), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Stdcompat__stack_s", 1)), 2, 0); (("pop_opt", 465), ((Tag1 (0, (Tag3 ((("t", 463)), [((("a")), 100000000, 0, -68)], (0)), 100000000, 0, -69), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -68)], (0)), 100000000, 0, -67), 0), 100000000, 0, -66), 0, (("stdcompat__stack_s.mli", 14, 155, 155), ("stdcompat__stack_s.mli", 14, 155, 186), 0), 0, Tag1 ("Stdcompat__stack_s", 2)), 0); (("top_opt", 466), ((Tag1 (0, (Tag3 ((("t", 463)), [((("a")), 100000000, 0, -64)], (0)), 100000000, 0, -65), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -64)], (0)), 100000000, 0, -63), 0), 100000000, 0, -62), 0, (("stdcompat__stack_s.mli", 17, 242, 242), ("stdcompat__stack_s.mli", 17, 242, 273), 0), 0, Tag1 ("Stdcompat__stack_s", 3)), 0); (("to_seq", 467), ((Tag1 (0, (Tag3 ((("t", 463)), [((("a")), 100000000, 0, -60)], (0)), 100000000, 0, -61), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [((("a")), 100000000, 0, -60)], (0)), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("stdcompat__stack_s.mli", 21, 330, 330), ("stdcompat__stack_s.mli", 21, 330, 359), 0), 0, Tag1 ("Stdcompat__stack_s", 4)), 0); (("add_seq", 468), ((Tag1 (0, (Tag3 ((("t", 463)), [((("a")), 100000000, 0, -56)], (0)), 100000000, 0, -57), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [((("a")), 100000000, 0, -56)], (0)), 100000000, 0, -55), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0, (("stdcompat__stack_s.mli", 30, 463, 463), ("stdcompat__stack_s.mli", 30, 463, 501), 0), 0, Tag1 ("Stdcompat__stack_s", 5)), 0); (("of_seq", 469), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [((("a")), 100000000, 0, -50)], (0)), 100000000, 0, -51), (Tag3 ((("t", 463)), [((("a")), 100000000, 0, -50)], (0)), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("stdcompat__stack_s.mli", 39, 623, 623), ("stdcompat__stack_s.mli", 39, 623, 652), 0), 0, Tag1 ("Stdcompat__stack_s", 6)), 0); (("fold", 470), ((Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -43), (Tag1 (0, ((("a")), 100000000, 0, -45), ((("b")), 100000000, 0, -43), 0), 100000000, 0, -47), 0), 100000000, 0, -46), (Tag1 (0, ((("b")), 100000000, 0, -43), (Tag1 (0, (Tag3 ((("t", 463)), [((("a")), 100000000, 0, -45)], (0)), 100000000, 0, -44), ((("b")), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("stdcompat__stack_s.mli", 47, 755, 755), ("stdcompat__stack_s.mli", 47, 755, 802), 0), 0, Tag1 ("Stdcompat__stack_s", 7)), 0); (("create", 471), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -39), (Tag3 ((("t", 463)), [((("a")), 100000000, 0, -38)], (0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("stdcompat__stack_s.mli", 50, 874, 874), ("stdcompat__stack_s.mli", 50, 874, 899), 0), 0, Tag1 ("Stdcompat__stack_s", 8)), 0); (("push", 472), ((Tag1 (0, ((("a")), 100000000, 0, -35), (Tag1 (0, (Tag3 ((("t", 463)), [((("a")), 100000000, 0, -35)], (0)), 100000000, 0, -34), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("stdcompat__stack_s.mli", 53, 934, 934), ("stdcompat__stack_s.mli", 53, 934, 963), 0), 0, Tag1 ("Stdcompat__stack_s", 9)), 0); (("pop", 473), ((Tag1 (0, (Tag3 ((("t", 463)), [((("a")), 100000000, 0, -29)], (0)), 100000000, 0, -30), ((("a")), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("stdcompat__stack_s.mli", 56, 996, 996), ("stdcompat__stack_s.mli", 56, 996, 1016), 0), 0, Tag1 ("Stdcompat__stack_s", 10)), 0); (("top", 474), ((Tag1 (0, (Tag3 ((("t", 463)), [((("a")), 100000000, 0, -26)], (0)), 100000000, 0, -27), ((("a")), 100000000, 0, -26), 0), 100000000, 0, -25), 0, (("stdcompat__stack_s.mli", 59, 1048, 1048), ("stdcompat__stack_s.mli", 59, 1048, 1068), 0), 0, Tag1 ("Stdcompat__stack_s", 11)), 0); (("clear", 475), ((Tag1 (0, (Tag3 ((("t", 463)), [((("a")), 100000000, 0, -24)], (0)), 100000000, 0, -23), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("stdcompat__stack_s.mli", 62, 1100, 1100), ("stdcompat__stack_s.mli", 62, 1100, 1124), 0), 0, Tag1 ("Stdcompat__stack_s", 12)), 0); (("copy", 476), ((Tag1 (0, (Tag3 ((("t", 463)), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -20), (Tag3 ((("t", 463)), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("stdcompat__stack_s.mli", 65, 1158, 1158), ("stdcompat__stack_s.mli", 65, 1158, 1181), 0), 0, Tag1 ("Stdcompat__stack_s", 13)), 0); (("is_empty", 477), ((Tag1 (0, (Tag3 ((("t", 463)), [((("a")), 100000000, 0, -16)], (0)), 100000000, 0, -15), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("stdcompat__stack_s.mli", 68, 1214, 1214), ("stdcompat__stack_s.mli", 68, 1214, 1241), 0), 0, Tag1 ("Stdcompat__stack_s", 14)), 0); (("length", 478), ((Tag1 (0, (Tag3 ((("t", 463)), [((("a")), 100000000, 0, -12)], (0)), 100000000, 0, -11), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("stdcompat__stack_s.mli", 71, 1278, 1278), ("stdcompat__stack_s.mli", 71, 1278, 1302), 0), 0, Tag1 ("Stdcompat__stack_s", 15)), 0); (("iter", 479), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -6), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -8), 0), 100000000, 0, -7), (Tag1 (0, (Tag3 ((("t", 463)), [((("a")), 100000000, 0, -6)], (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("stdcompat__stack_s.mli", 74, 1337, 1337), ("stdcompat__stack_s.mli", 74, 1337, 1376), 0), 0, Tag1 ("Stdcompat__stack_s", 16)), 0)])), 0, (("stdcompat__stack_s.mli", 1, 0, 0), ("stdcompat__stack_s.mli", 77, 1409, 1412), 0), Tag1 ("Stdcompat__stack_s", 17)), 0)], "Stdcompat__stack_s", [("Stdcompat__stack_s", ("@\164\148\231\178fB\148\178\150b\204\201\"J\241")); ("Stdlib__Stack", ("M\151\017\159\208\222\164[\025\219g\175\160\242T\229")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

  end
