module A = Simple_value_approx
type value_string_contents = Contents of string | Unknown_or_mutable
type value_string = { contents : value_string_contents; size : int; }
type value_float_array_contents =
    Contents of float option array
  | Unknown_or_mutable
type value_float_array = {
  contents : value_float_array_contents;
  size : int;
}
type descr =
    Value_block of Tag.t * approx array
  | Value_mutable_block of Tag.t * int
  | Value_int of int
  | Value_char of char
  | Value_float of float
  | Value_float_array of value_float_array
  | Value_boxed_int : 'a A.boxed_int * 'a -> descr
  | Value_string of value_string
  | Value_closure of value_closure
  | Value_set_of_closures of value_set_of_closures
  | Value_unknown_descr
and value_closure = {
  closure_id : Closure_id.t;
  set_of_closures : value_set_of_closures;
}
and value_set_of_closures = {
  set_of_closures_id : Set_of_closures_id.t;
  bound_vars : approx Var_within_closure.Map.t;
  free_vars : Flambda.specialised_to Variable.Map.t;
  results : approx Closure_id.Map.t;
  aliased_symbol : Symbol.t option;
}
and approx =
    Value_unknown
  | Value_id of Export_id.t
  | Value_symbol of Symbol.t
type t = private {
  sets_of_closures : A.function_declarations Set_of_closures_id.Map.t;
  values : descr Export_id.Map.t Compilation_unit.Map.t;
  symbol_id : Export_id.t Symbol.Map.t;
  offset_fun : int Closure_id.Map.t;
  offset_fv : int Var_within_closure.Map.t;
  constant_closures : Closure_id.Set.t;
  invariant_params : Variable.Set.t Variable.Map.t Set_of_closures_id.Map.t;
  recursive : Variable.Set.t Set_of_closures_id.Map.t;
}
type transient = private {
  sets_of_closures : A.function_declarations Set_of_closures_id.Map.t;
  values : descr Export_id.Map.t Compilation_unit.Map.t;
  symbol_id : Export_id.t Symbol.Map.t;
  invariant_params : Variable.Set.t Variable.Map.t Set_of_closures_id.Map.t;
  recursive : Variable.Set.t Set_of_closures_id.Map.t;
  relevant_local_closure_ids : Closure_id.Set.t;
  relevant_imported_closure_ids : Closure_id.Set.t;
  relevant_local_vars_within_closure : Var_within_closure.Set.t;
  relevant_imported_vars_within_closure : Var_within_closure.Set.t;
}
val empty : t
val opaque_transient :
  compilation_unit:Compilation_unit.t -> root_symbol:Symbol.t -> transient
val create :
  sets_of_closures:A.function_declarations Set_of_closures_id.Map.t ->
  values:descr Export_id.Map.t Compilation_unit.Map.t ->
  symbol_id:Export_id.t Symbol.Map.t ->
  offset_fun:int Closure_id.Map.t ->
  offset_fv:int Var_within_closure.Map.t ->
  constant_closures:Closure_id.Set.t ->
  invariant_params:Variable.Set.t Variable.Map.t Set_of_closures_id.Map.t ->
  recursive:Variable.Set.t Set_of_closures_id.Map.t -> t
val create_transient :
  sets_of_closures:A.function_declarations Set_of_closures_id.Map.t ->
  values:descr Export_id.Map.t Compilation_unit.Map.t ->
  symbol_id:Export_id.t Symbol.Map.t ->
  invariant_params:Variable.Set.t Variable.Map.t Set_of_closures_id.Map.t ->
  recursive:Variable.Set.t Set_of_closures_id.Map.t ->
  relevant_local_closure_ids:Closure_id.Set.t ->
  relevant_imported_closure_ids:Closure_id.Set.t ->
  relevant_local_vars_within_closure:Var_within_closure.Set.t ->
  relevant_imported_vars_within_closure:Var_within_closure.Set.t -> transient
val t_of_transient :
  transient ->
  program:Flambda.program ->
  local_offset_fun:int Closure_id.Map.t ->
  local_offset_fv:int Var_within_closure.Map.t ->
  imported_offset_fun:int Closure_id.Map.t ->
  imported_offset_fv:int Var_within_closure.Map.t ->
  constant_closures:Closure_id.Set.t -> t
val merge : t -> t -> t
val find_description : t -> Export_id.t -> descr
val nest_eid_map :
  'a Export_id.Map.t -> 'a Export_id.Map.t Compilation_unit.Map.t
val print_approx_components :
  Format.formatter ->
  symbol_id:Export_id.t Symbol.Map.t ->
  values:descr Export_id.Map.t Compilation_unit.Map.t ->
  Symbol.t list -> unit
val print_approx : Format.formatter -> t * Symbol.t list -> unit
val print_functions : Format.formatter -> t -> unit
val print_offsets : Format.formatter -> t -> unit
val print_all : Format.formatter -> t * Symbol.t list -> unit
val print_raw_approx : Format.formatter -> approx -> unit
("DEBUG:rule", [Tag3 (("A", 2622), 1, (Tag3 ((Tag2 ("Simple_value_approx"))), 0, (("middle_end/flambda/export_info.mli", 22, 1311, 1311), ("middle_end/flambda/export_info.mli", 22, 1311, 1341), 0), Tag1 ("Export_info", 0)), 0, 0); Tag1 (("value_string_contents", 2623), (0, 0, Tag1 ([(("Contents", 271), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -211)]), 0, (("middle_end/flambda/export_info.mli", 25, 1372, 1374), ("middle_end/flambda/export_info.mli", 25, 1372, 1394), 0), 0, Tag1 ("Export_info", 2)); (("Unknown_or_mutable", 272), (0), 0, (("middle_end/flambda/export_info.mli", 26, 1395, 1397), ("middle_end/flambda/export_info.mli", 26, 1395, 1417), 0), 0, Tag1 ("Export_info", 3))], 0), 1, 0, 0, 0, 0, 0, (("middle_end/flambda/export_info.mli", 24, 1343, 1343), ("middle_end/flambda/export_info.mli", 26, 1395, 1417), 0), 0, 0, 0, Tag1 ("Export_info", 1)), 1, 0); Tag1 (("value_string", 2624), (0, 0, [[(("contents", 274), 0, (Tag3 ((("value_string_contents", 2623)), 0, (0)), 100000000, 0, -209), (("middle_end/flambda/export_info.mli", 29, 1441, 1443), ("middle_end/flambda/export_info.mli", 29, 1441, 1476), 0), 0, Tag1 ("Export_info", 5)); (("size", 275), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -210), (("middle_end/flambda/export_info.mli", 30, 1477, 1479), ("middle_end/flambda/export_info.mli", 30, 1477, 1490), 0), 0, Tag1 ("Export_info", 6))]], 1, 0, 0, 0, 0, 0, (("middle_end/flambda/export_info.mli", 28, 1419, 1419), ("middle_end/flambda/export_info.mli", 31, 1491, 1492), 0), 0, 0, 0, Tag1 ("Export_info", 4)), 1, 0); Tag1 (("value_float_array_contents", 2625), (0, 0, Tag1 ([(("Contents", 277), ([(Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -208)], (0)), 100000000, 0, -207)], (0)), 100000000, 0, -206)]), 0, (("middle_end/flambda/export_info.mli", 34, 1528, 1530), ("middle_end/flambda/export_info.mli", 34, 1528, 1562), 0), 0, Tag1 ("Export_info", 8)); (("Unknown_or_mutable", 278), (0), 0, (("middle_end/flambda/export_info.mli", 35, 1563, 1565), ("middle_end/flambda/export_info.mli", 35, 1563, 1585), 0), 0, Tag1 ("Export_info", 9))], 0), 1, 0, 0, 0, 0, 0, (("middle_end/flambda/export_info.mli", 33, 1494, 1494), ("middle_end/flambda/export_info.mli", 35, 1563, 1585), 0), 0, 0, 0, Tag1 ("Export_info", 7)), 1, 0); Tag1 (("value_float_array", 2626), (0, 0, [[(("contents", 280), 0, (Tag3 ((("value_float_array_contents", 2625)), 0, (0)), 100000000, 0, -204), (("middle_end/flambda/export_info.mli", 38, 1614, 1616), ("middle_end/flambda/export_info.mli", 38, 1614, 1654), 0), 0, Tag1 ("Export_info", 11)); (("size", 281), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -205), (("middle_end/flambda/export_info.mli", 39, 1655, 1657), ("middle_end/flambda/export_info.mli", 39, 1655, 1668), 0), 0, Tag1 ("Export_info", 12))]], 1, 0, 0, 0, 0, 0, (("middle_end/flambda/export_info.mli", 37, 1587, 1587), ("middle_end/flambda/export_info.mli", 40, 1669, 1670), 0), 0, 0, 0, Tag1 ("Export_info", 10)), 1, 0); Tag1 (("descr", 2627), (0, 0, Tag1 ([(("Value_block", 286), ([(Tag3 (Tag1 ((Tag2 ("Tag")), "t"), 0, (0)), 100000000, 0, -189); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("approx", 2630)), 0, (0)), 100000000, 0, -191)], (0)), 100000000, 0, -190)]), 0, (("middle_end/flambda/export_info.mli", 43, 1685, 1687), ("middle_end/flambda/export_info.mli", 43, 1685, 1724), 0), 0, Tag1 ("Export_info", 17)); (("Value_mutable_block", 301), ([(Tag3 (Tag1 ((Tag2 ("Tag")), "t"), 0, (0)), 100000000, 0, -192); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -193)]), 0, (("middle_end/flambda/export_info.mli", 44, 1725, 1727), ("middle_end/flambda/export_info.mli", 44, 1725, 1763), 0), 0, Tag1 ("Export_info", 18)); (("Value_int", 302), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -194)]), 0, (("middle_end/flambda/export_info.mli", 45, 1764, 1766), ("middle_end/flambda/export_info.mli", 45, 1764, 1784), 0), 0, Tag1 ("Export_info", 19)); (("Value_char", 303), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -195)]), 0, (("middle_end/flambda/export_info.mli", 46, 1785, 1787), ("middle_end/flambda/export_info.mli", 46, 1785, 1807), 0), 0, Tag1 ("Export_info", 20)); (("Value_float", 304), ([(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -196)]), 0, (("middle_end/flambda/export_info.mli", 47, 1808, 1810), ("middle_end/flambda/export_info.mli", 47, 1808, 1832), 0), 0, Tag1 ("Export_info", 21)); (("Value_float_array", 305), ([(Tag3 ((("value_float_array", 2626)), 0, (0)), 100000000, 0, -197)]), 0, (("middle_end/flambda/export_info.mli", 48, 1833, 1835), ("middle_end/flambda/export_info.mli", 48, 1833, 1875), 0), 0, Tag1 ("Export_info", 22)); (("Value_boxed_int", 306), ([(Tag3 (Tag1 ((("A", 2622)), "boxed_int"), [((("a")), 100000000, 0, -200)], (0)), 100000000, 0, -199); ((("a")), 100000000, 0, -200)]), ((Tag3 ((("descr", 2627)), 0, (0)), 100000000, 0, -198)), (("middle_end/flambda/export_info.mli", 49, 1876, 1878), ("middle_end/flambda/export_info.mli", 49, 1876, 1926), 0), 0, Tag1 ("Export_info", 23)); (("Value_string", 402), ([(Tag3 ((("value_string", 2624)), 0, (0)), 100000000, 0, -201)]), 0, (("middle_end/flambda/export_info.mli", 50, 1927, 1929), ("middle_end/flambda/export_info.mli", 50, 1927, 1959), 0), 0, Tag1 ("Export_info", 24)); (("Value_closure", 403), ([(Tag3 ((("value_closure", 2628)), 0, (0)), 100000000, 0, -202)]), 0, (("middle_end/flambda/export_info.mli", 51, 1960, 1962), ("middle_end/flambda/export_info.mli", 51, 1960, 1994), 0), 0, Tag1 ("Export_info", 25)); (("Value_set_of_closures", 404), ([(Tag3 ((("value_set_of_closures", 2629)), 0, (0)), 100000000, 0, -203)]), 0, (("middle_end/flambda/export_info.mli", 52, 1995, 1997), ("middle_end/flambda/export_info.mli", 52, 1995, 2045), 0), 0, Tag1 ("Export_info", 26)); (("Value_unknown_descr", 405), (0), 0, (("middle_end/flambda/export_info.mli", 53, 2046, 2048), ("middle_end/flambda/export_info.mli", 53, 2046, 2069), 0), 0, Tag1 ("Export_info", 27))], 0), 1, 0, 0, 0, 0, 0, (("middle_end/flambda/export_info.mli", 42, 1672, 1672), ("middle_end/flambda/export_info.mli", 53, 2046, 2069), 0), 0, 0, 0, Tag1 ("Export_info", 13)), 1, 0); Tag1 (("value_closure", 2628), (0, 0, [[(("closure_id", 424), 0, (Tag3 (Tag1 ((Tag2 ("Closure_id")), "t"), 0, (0)), 100000000, 0, -187), (("middle_end/flambda/export_info.mli", 56, 2093, 2095), ("middle_end/flambda/export_info.mli", 56, 2093, 2121), 0), 0, Tag1 ("Export_info", 28)); (("set_of_closures", 425), 0, (Tag3 ((("value_set_of_closures", 2629)), 0, (0)), 100000000, 0, -188), (("middle_end/flambda/export_info.mli", 57, 2122, 2124), ("middle_end/flambda/export_info.mli", 57, 2122, 2164), 0), 0, Tag1 ("Export_info", 29))]], 1, 0, 0, 0, 0, 0, (("middle_end/flambda/export_info.mli", 55, 2071, 2071), ("middle_end/flambda/export_info.mli", 58, 2165, 2166), 0), 0, 0, 0, Tag1 ("Export_info", 14)), 2, 0); Tag1 (("value_set_of_closures", 2629), (0, 0, [[(("set_of_closures_id", 439), 0, (Tag3 (Tag1 ((Tag2 ("Set_of_closures_id")), "t"), 0, (0)), 100000000, 0, -178), (("middle_end/flambda/export_info.mli", 61, 2198, 2200), ("middle_end/flambda/export_info.mli", 61, 2198, 2242), 0), 0, Tag1 ("Export_info", 30)); (("bound_vars", 515), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Var_within_closure")), "Map"), "t"), [(Tag3 ((("approx", 2630)), 0, (0)), 100000000, 0, -180)], (0)), 100000000, 0, -179), (("middle_end/flambda/export_info.mli", 62, 2243, 2245), ("middle_end/flambda/export_info.mli", 62, 2243, 2290), 0), 0, Tag1 ("Export_info", 31)); (("free_vars", 665), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Variable")), "Map"), "t"), [(Tag3 (Tag1 ((Tag2 ("Flambda")), "specialised_to"), 0, (0)), 100000000, 0, -182)], (0)), 100000000, 0, -181), (("middle_end/flambda/export_info.mli", 63, 2291, 2293), ("middle_end/flambda/export_info.mli", 63, 2291, 2343), 0), 0, Tag1 ("Export_info", 32)); (("results", 723), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Closure_id")), "Map"), "t"), [(Tag3 ((("approx", 2630)), 0, (0)), 100000000, 0, -184)], (0)), 100000000, 0, -183), (("middle_end/flambda/export_info.mli", 64, 2344, 2346), ("middle_end/flambda/export_info.mli", 64, 2344, 2380), 0), 0, Tag1 ("Export_info", 33)); (("aliased_symbol", 741), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Symbol")), "t"), 0, (0)), 100000000, 0, -186)], (0)), 100000000, 0, -185), (("middle_end/flambda/export_info.mli", 65, 2381, 2383), ("middle_end/flambda/export_info.mli", 65, 2381, 2416), 0), 0, Tag1 ("Export_info", 34))]], 1, 0, 0, 0, 0, 0, (("middle_end/flambda/export_info.mli", 60, 2168, 2168), ("middle_end/flambda/export_info.mli", 66, 2417, 2418), 0), 0, 0, 0, Tag1 ("Export_info", 15)), 2, 0); Tag1 (("approx", 2630), (0, 0, Tag1 ([(("Value_unknown", 742), (0), 0, (("middle_end/flambda/export_info.mli", 76, 2910, 2912), ("middle_end/flambda/export_info.mli", 76, 2910, 2927), 0), 0, Tag1 ("Export_info", 35)); (("Value_id", 743), ([(Tag3 (Tag1 ((Tag2 ("Export_id")), "t"), 0, (0)), 100000000, 0, -176)]), 0, (("middle_end/flambda/export_info.mli", 77, 2928, 2930), ("middle_end/flambda/export_info.mli", 77, 2928, 2955), 0), 0, Tag1 ("Export_info", 36)); (("Value_symbol", 757), ([(Tag3 (Tag1 ((Tag2 ("Symbol")), "t"), 0, (0)), 100000000, 0, -177)]), 0, (("middle_end/flambda/export_info.mli", 78, 2956, 2958), ("middle_end/flambda/export_info.mli", 78, 2956, 2984), 0), 0, Tag1 ("Export_info", 37))], 0), 1, 0, 0, 0, 0, 0, (("middle_end/flambda/export_info.mli", 75, 2897, 2897), ("middle_end/flambda/export_info.mli", 78, 2956, 2984), 0), 0, 0, 0, Tag1 ("Export_info", 16)), 2, 0); Tag1 (("t", 2631), (0, 0, [[(("sets_of_closures", 1325), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Set_of_closures_id")), "Map"), "t"), [(Tag3 (Tag1 ((("A", 2622)), "function_declarations"), 0, (0)), 100000000, 0, -160)], (0)), 100000000, 0, -159), (("middle_end/flambda/export_info.mli", 82, 3079, 3081), ("middle_end/flambda/export_info.mli", 82, 3079, 3149), 0), 0, Tag1 ("Export_info", 39)); (("values", 1459), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Compilation_unit")), "Map"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Export_id")), "Map"), "t"), [(Tag3 ((("descr", 2627)), 0, (0)), 100000000, 0, -163)], (0)), 100000000, 0, -162)], (0)), 100000000, 0, -161), (("middle_end/flambda/export_info.mli", 84, 3218, 3220), ("middle_end/flambda/export_info.mli", 84, 3218, 3274), 0), 0, Tag1 ("Export_info", 40)); (("symbol_id", 1517), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Symbol")), "Map"), "t"), [(Tag3 (Tag1 ((Tag2 ("Export_id")), "t"), 0, (0)), 100000000, 0, -165)], (0)), 100000000, 0, -164), (("middle_end/flambda/export_info.mli", 86, 3314, 3316), ("middle_end/flambda/export_info.mli", 86, 3314, 3353), 0), 0, Tag1 ("Export_info", 41)); (("offset_fun", 1518), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Closure_id")), "Map"), "t"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -167)], (0)), 100000000, 0, -166), (("middle_end/flambda/export_info.mli", 88, 3394, 3396), ("middle_end/flambda/export_info.mli", 88, 3394, 3430), 0), 0, Tag1 ("Export_info", 42)); (("offset_fv", 1519), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Var_within_closure")), "Map"), "t"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -169)], (0)), 100000000, 0, -168), (("middle_end/flambda/export_info.mli", 90, 3490, 3492), ("middle_end/flambda/export_info.mli", 90, 3490, 3533), 0), 0, Tag1 ("Export_info", 43)); (("constant_closures", 1568), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Closure_id")), "Set"), "t"), 0, (0)), 100000000, 0, -170), (("middle_end/flambda/export_info.mli", 92, 3590, 3592), ("middle_end/flambda/export_info.mli", 92, 3590, 3629), 0), 0, Tag1 ("Export_info", 44)); (("invariant_params", 1617), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Set_of_closures_id")), "Map"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Variable")), "Map"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Variable")), "Set"), "t"), 0, (0)), 100000000, 0, -173)], (0)), 100000000, 0, -172)], (0)), 100000000, 0, -171), (("middle_end/flambda/export_info.mli", 94, 3683, 3685), ("middle_end/flambda/export_info.mli", 94, 3683, 3759), 0), 0, Tag1 ("Export_info", 45)); (("recursive", 1618), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Set_of_closures_id")), "Map"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Variable")), "Set"), "t"), 0, (0)), 100000000, 0, -175)], (0)), 100000000, 0, -174), (("middle_end/flambda/export_info.mli", 97, 3871, 3873), ("middle_end/flambda/export_info.mli", 97, 3871, 3925), 0), 0, Tag1 ("Export_info", 46))]], 0, 0, 0, 0, 0, 0, (("middle_end/flambda/export_info.mli", 81, 3060, 3060), ("middle_end/flambda/export_info.mli", 98, 3926, 3927), 0), 0, 0, 0, Tag1 ("Export_info", 38)), 1, 0); Tag1 (("transient", 2632), (0, 0, [[(("sets_of_closures", 2304), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Set_of_closures_id")), "Map"), "t"), [(Tag3 (Tag1 ((("A", 2622)), "function_declarations"), 0, (0)), 100000000, 0, -144)], (0)), 100000000, 0, -143), (("middle_end/flambda/export_info.mli", 101, 3956, 3958), ("middle_end/flambda/export_info.mli", 101, 3956, 4026), 0), 0, Tag1 ("Export_info", 48)); (("values", 2305), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Compilation_unit")), "Map"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Export_id")), "Map"), "t"), [(Tag3 ((("descr", 2627)), 0, (0)), 100000000, 0, -147)], (0)), 100000000, 0, -146)], (0)), 100000000, 0, -145), (("middle_end/flambda/export_info.mli", 102, 4027, 4029), ("middle_end/flambda/export_info.mli", 102, 4027, 4083), 0), 0, Tag1 ("Export_info", 49)); (("symbol_id", 2306), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Symbol")), "Map"), "t"), [(Tag3 (Tag1 ((Tag2 ("Export_id")), "t"), 0, (0)), 100000000, 0, -149)], (0)), 100000000, 0, -148), (("middle_end/flambda/export_info.mli", 103, 4084, 4086), ("middle_end/flambda/export_info.mli", 103, 4084, 4123), 0), 0, Tag1 ("Export_info", 50)); (("invariant_params", 2307), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Set_of_closures_id")), "Map"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Variable")), "Map"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Variable")), "Set"), "t"), 0, (0)), 100000000, 0, -152)], (0)), 100000000, 0, -151)], (0)), 100000000, 0, -150), (("middle_end/flambda/export_info.mli", 104, 4124, 4126), ("middle_end/flambda/export_info.mli", 104, 4124, 4200), 0), 0, Tag1 ("Export_info", 51)); (("recursive", 2308), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Set_of_closures_id")), "Map"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Variable")), "Set"), "t"), 0, (0)), 100000000, 0, -154)], (0)), 100000000, 0, -153), (("middle_end/flambda/export_info.mli", 105, 4201, 4203), ("middle_end/flambda/export_info.mli", 105, 4201, 4255), 0), 0, Tag1 ("Export_info", 52)); (("relevant_local_closure_ids", 2309), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Closure_id")), "Set"), "t"), 0, (0)), 100000000, 0, -155), (("middle_end/flambda/export_info.mli", 106, 4256, 4258), ("middle_end/flambda/export_info.mli", 106, 4256, 4304), 0), 0, Tag1 ("Export_info", 53)); (("relevant_imported_closure_ids", 2310), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Closure_id")), "Set"), "t"), 0, (0)), 100000000, 0, -156), (("middle_end/flambda/export_info.mli", 107, 4305, 4307), ("middle_end/flambda/export_info.mli", 107, 4305, 4356), 0), 0, Tag1 ("Export_info", 54)); (("relevant_local_vars_within_closure", 2359), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Var_within_closure")), "Set"), "t"), 0, (0)), 100000000, 0, -157), (("middle_end/flambda/export_info.mli", 108, 4357, 4359), ("middle_end/flambda/export_info.mli", 108, 4357, 4422), 0), 0, Tag1 ("Export_info", 55)); (("relevant_imported_vars_within_closure", 2360), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Var_within_closure")), "Set"), "t"), 0, (0)), 100000000, 0, -158), (("middle_end/flambda/export_info.mli", 109, 4423, 4425), ("middle_end/flambda/export_info.mli", 109, 4423, 4490), 0), 0, Tag1 ("Export_info", 56))]], 0, 0, 0, 0, 0, 0, (("middle_end/flambda/export_info.mli", 100, 3929, 3929), ("middle_end/flambda/export_info.mli", 110, 4491, 4492), 0), 0, 0, 0, Tag1 ("Export_info", 47)), 1, 0); (("empty", 2633), ((Tag3 ((("t", 2631)), 0, (0)), 100000000, 0, -142), 0, (("middle_end/flambda/export_info.mli", 113, 4565, 4565), ("middle_end/flambda/export_info.mli", 113, 4565, 4578), 0), 0, Tag1 ("Export_info", 57)), 0); (("opaque_transient", 2634), ((Tag1 (("compilation_unit"), (Tag3 (Tag1 ((Tag2 ("Compilation_unit")), "t"), 0, (0)), 100000000, 0, -141), (Tag1 (("root_symbol"), (Tag3 (Tag1 ((Tag2 ("Symbol")), "t"), 0, (0)), 100000000, 0, -140), (Tag3 ((("transient", 2632)), 0, (0)), 100000000, 0, -139), 0), 100000000, 0, -138), 0), 100000000, 0, -137), 0, (("middle_end/flambda/export_info.mli", 115, 4580, 4580), ("middle_end/flambda/export_info.mli", 118, 4667, 4681), 0), 0, Tag1 ("Export_info", 58)), 0); (("create", 2635), ((Tag1 (("sets_of_closures"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Set_of_closures_id")), "Map"), "t"), [(Tag3 (Tag1 ((("A", 2622)), "function_declarations"), 0, (0)), 100000000, 0, -136)], (0)), 100000000, 0, -135), (Tag1 (("values"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Compilation_unit")), "Map"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Export_id")), "Map"), "t"), [(Tag3 ((("descr", 2627)), 0, (0)), 100000000, 0, -134)], (0)), 100000000, 0, -133)], (0)), 100000000, 0, -132), (Tag1 (("symbol_id"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Symbol")), "Map"), "t"), [(Tag3 (Tag1 ((Tag2 ("Export_id")), "t"), 0, (0)), 100000000, 0, -131)], (0)), 100000000, 0, -130), (Tag1 (("offset_fun"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Closure_id")), "Map"), "t"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -129)], (0)), 100000000, 0, -128), (Tag1 (("offset_fv"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Var_within_closure")), "Map"), "t"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -127)], (0)), 100000000, 0, -126), (Tag1 (("constant_closures"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Closure_id")), "Set"), "t"), 0, (0)), 100000000, 0, -125), (Tag1 (("invariant_params"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Set_of_closures_id")), "Map"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Variable")), "Map"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Variable")), "Set"), "t"), 0, (0)), 100000000, 0, -124)], (0)), 100000000, 0, -123)], (0)), 100000000, 0, -122), (Tag1 (("recursive"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Set_of_closures_id")), "Map"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Variable")), "Set"), "t"), 0, (0)), 100000000, 0, -121)], (0)), 100000000, 0, -120), (Tag3 ((("t", 2631)), 0, (0)), 100000000, 0, -119), 0), 100000000, 0, -118), 0), 100000000, 0, -117), 0), 100000000, 0, -116), 0), 100000000, 0, -115), 0), 100000000, 0, -114), 0), 100000000, 0, -113), 0), 100000000, 0, -112), 0), 100000000, 0, -111), 0, (("middle_end/flambda/export_info.mli", 121, 4733, 4733), ("middle_end/flambda/export_info.mli", 130, 5167, 5173), 0), 0, Tag1 ("Export_info", 59)), 0); (("create_transient", 2636), ((Tag1 (("sets_of_closures"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Set_of_closures_id")), "Map"), "t"), [(Tag3 (Tag1 ((("A", 2622)), "function_declarations"), 0, (0)), 100000000, 0, -110)], (0)), 100000000, 0, -109), (Tag1 (("values"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Compilation_unit")), "Map"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Export_id")), "Map"), "t"), [(Tag3 ((("descr", 2627)), 0, (0)), 100000000, 0, -108)], (0)), 100000000, 0, -107)], (0)), 100000000, 0, -106), (Tag1 (("symbol_id"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Symbol")), "Map"), "t"), [(Tag3 (Tag1 ((Tag2 ("Export_id")), "t"), 0, (0)), 100000000, 0, -105)], (0)), 100000000, 0, -104), (Tag1 (("invariant_params"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Set_of_closures_id")), "Map"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Variable")), "Map"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Variable")), "Set"), "t"), 0, (0)), 100000000, 0, -103)], (0)), 100000000, 0, -102)], (0)), 100000000, 0, -101), (Tag1 (("recursive"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Set_of_closures_id")), "Map"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Variable")), "Set"), "t"), 0, (0)), 100000000, 0, -100)], (0)), 100000000, 0, -99), (Tag1 (("relevant_local_closure_ids"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Closure_id")), "Set"), "t"), 0, (0)), 100000000, 0, -98), (Tag1 (("relevant_imported_closure_ids"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Closure_id")), "Set"), "t"), 0, (0)), 100000000, 0, -97), (Tag1 (("relevant_local_vars_within_closure"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Var_within_closure")), "Set"), "t"), 0, (0)), 100000000, 0, -96), (Tag1 (("relevant_imported_vars_within_closure"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Var_within_closure")), "Set"), "t"), 0, (0)), 100000000, 0, -95), (Tag3 ((("transient", 2632)), 0, (0)), 100000000, 0, -94), 0), 100000000, 0, -93), 0), 100000000, 0, -92), 0), 100000000, 0, -91), 0), 100000000, 0, -90), 0), 100000000, 0, -89), 0), 100000000, 0, -88), 0), 100000000, 0, -87), 0), 100000000, 0, -86), 0), 100000000, 0, -85), 0, (("middle_end/flambda/export_info.mli", 132, 5175, 5175), ("middle_end/flambda/export_info.mli", 142, 5739, 5753), 0), 0, Tag1 ("Export_info", 60)), 0); (("t_of_transient", 2637), ((Tag1 (0, (Tag3 ((("transient", 2632)), 0, (0)), 100000000, 0, -84), (Tag1 (("program"), (Tag3 (Tag1 ((Tag2 ("Flambda")), "program"), 0, (0)), 100000000, 0, -83), (Tag1 (("local_offset_fun"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Closure_id")), "Map"), "t"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -82)], (0)), 100000000, 0, -81), (Tag1 (("local_offset_fv"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Var_within_closure")), "Map"), "t"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -80)], (0)), 100000000, 0, -79), (Tag1 (("imported_offset_fun"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Closure_id")), "Map"), "t"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -78)], (0)), 100000000, 0, -77), (Tag1 (("imported_offset_fv"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Var_within_closure")), "Map"), "t"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -76)], (0)), 100000000, 0, -75), (Tag1 (("constant_closures"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Closure_id")), "Set"), "t"), 0, (0)), 100000000, 0, -74), (Tag3 ((("t", 2631)), 0, (0)), 100000000, 0, -73), 0), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), 0), 100000000, 0, -69), 0), 100000000, 0, -68), 0), 100000000, 0, -67), 0), 100000000, 0, -66), 0, (("middle_end/flambda/export_info.mli", 153, 6232, 6232), ("middle_end/flambda/export_info.mli", 161, 6528, 6534), 0), 0, Tag1 ("Export_info", 61)), 0); (("merge", 2638), ((Tag1 (0, (Tag3 ((("t", 2631)), 0, (0)), 100000000, 0, -65), (Tag1 (0, (Tag3 ((("t", 2631)), 0, (0)), 100000000, 0, -64), (Tag3 ((("t", 2631)), 0, (0)), 100000000, 0, -63), 0), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("middle_end/flambda/export_info.mli", 165, 6624, 6624), ("middle_end/flambda/export_info.mli", 165, 6624, 6647), 0), 0, Tag1 ("Export_info", 62)), 0); (("find_description", 2639), ((Tag1 (0, (Tag3 ((("t", 2631)), 0, (0)), 100000000, 0, -60), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Export_id")), "t"), 0, (0)), 100000000, 0, -59), (Tag3 ((("descr", 2627)), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("middle_end/flambda/export_info.mli", 168, 6722, 6722), ("middle_end/flambda/export_info.mli", 171, 6767, 6777), 0), 0, Tag1 ("Export_info", 63)), 0); (("nest_eid_map", 2640), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Export_id")), "Map"), "t"), [((("a")), 100000000, 0, -54)], (0)), 100000000, 0, -55), (Tag3 (Tag1 (Tag1 ((Tag2 ("Compilation_unit")), "Map"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Export_id")), "Map"), "t"), [((("a")), 100000000, 0, -54)], (0)), 100000000, 0, -53)], (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("middle_end/flambda/export_info.mli", 174, 6843, 6843), ("middle_end/flambda/export_info.mli", 176, 6884, 6930), 0), 0, Tag1 ("Export_info", 64)), 0); (("print_approx_components", 2641), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -50), (Tag1 (("symbol_id"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Symbol")), "Map"), "t"), [(Tag3 (Tag1 ((Tag2 ("Export_id")), "t"), 0, (0)), 100000000, 0, -49)], (0)), 100000000, 0, -48), (Tag1 (("values"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Compilation_unit")), "Map"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Export_id")), "Map"), "t"), [(Tag3 ((("descr", 2627)), 0, (0)), 100000000, 0, -47)], (0)), 100000000, 0, -46)], (0)), 100000000, 0, -45), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Symbol")), "t"), 0, (0)), 100000000, 0, -44)], (0)), 100000000, 0, -43), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -42), 0), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("middle_end/flambda/export_info.mli", 180, 6972, 6972), ("middle_end/flambda/export_info.mli", 185, 7139, 7148), 0), 0, Tag1 ("Export_info", 65)), 0); (("print_approx", 2642), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -37), (Tag1 (0, (Tag2 ([(Tag3 ((("t", 2631)), 0, (0)), 100000000, 0, -34); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Symbol")), "t"), 0, (0)), 100000000, 0, -36)], (0)), 100000000, 0, -35)]), 100000000, 0, -33), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("middle_end/flambda/export_info.mli", 186, 7149, 7149), ("middle_end/flambda/export_info.mli", 186, 7149, 7213), 0), 0, Tag1 ("Export_info", 66)), 0); (("print_functions", 2643), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -29), (Tag1 (0, (Tag3 ((("t", 2631)), 0, (0)), 100000000, 0, -28), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -27), 0), 100000000, 0, -26), 0), 100000000, 0, -25), 0, (("middle_end/flambda/export_info.mli", 187, 7214, 7214), ("middle_end/flambda/export_info.mli", 187, 7214, 7265), 0), 0, Tag1 ("Export_info", 67)), 0); (("print_offsets", 2644), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -24), (Tag1 (0, (Tag3 ((("t", 2631)), 0, (0)), 100000000, 0, -23), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("middle_end/flambda/export_info.mli", 188, 7266, 7266), ("middle_end/flambda/export_info.mli", 188, 7266, 7315), 0), 0, Tag1 ("Export_info", 68)), 0); (("print_all", 2645), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -19), (Tag1 (0, (Tag2 ([(Tag3 ((("t", 2631)), 0, (0)), 100000000, 0, -16); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Symbol")), "t"), 0, (0)), 100000000, 0, -18)], (0)), 100000000, 0, -17)]), 100000000, 0, -15), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("middle_end/flambda/export_info.mli", 189, 7316, 7316), ("middle_end/flambda/export_info.mli", 189, 7316, 7377), 0), 0, Tag1 ("Export_info", 69)), 0); (("print_raw_approx", 2646), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -11), (Tag1 (0, (Tag3 ((("approx", 2630)), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("middle_end/flambda/export_info.mli", 193, 7469, 7469), ("middle_end/flambda/export_info.mli", 193, 7469, 7526), 0), 0, Tag1 ("Export_info", 70)), 0); (("print_raw_descr", 2647), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((("descr", 2627)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("middle_end/flambda/export_info.mli", 194, 7527, 7527), ("middle_end/flambda/export_info.mli", 194, 7527, 7583), 0), 0, Tag1 ("Export_info", 71)), 0)], "Export_info", [("Export_info", ("\133\169\200\137y\208\165\171Z1\181\188]\192\245n")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Variable", ("\228'\154\1834\146\207\147+\193Aq\209h\190\220")); ("Var_within_closure", ("vQ\173\251u\026\012+}j\020C}T\151\220")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Tag", ("\252\157\132\005\195\228\232\133\246\237\233\224\012\143\192\218")); ("Symbol", ("\179q\177\031_\169\139a\192\019\188\000V\236\232\t")); ("Subst", ("\021\031\148\223\127\186\189\135\027}\145r\216\143\177\156")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Static_exception", ("2{#\175\226\185\147\146\176\140\029O\023p\024\\")); ("Simple_value_approx", ("\019\b\\\255\223\2510j\n?G\183\243\154v\213")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Set_of_closures_origin", ("$n\234\014\162\130\210K\171\btrA\244\254\195")); ("Set_of_closures_id", ("\178\228\011\028\027~\211\166\244\180\220-W\145_\243")); ("Projection", ("\250\207\030\021*\193\225\168\189!\224\228\192\212\236\224")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Parameter", ("*\152\238G\163\217\2377/\t\206\131\226\216K0")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Numbers", ("\004\020\227\212|\031Q6\146\217\211\156\221\234\254\195")); ("Mutable_variable", ("B^*^9`\212\152j\145_\017i.\128?")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Load_path", ("\012@\228l\230\164S\172h\1726X\020\252o}")); ("Linkage_name", ("\023\000\172\166 s\214\ns\155s\156\005\252\154\207")); ("Lambda", ("\180\1419\236'\146K$\128\006\135q\135V\029\180")); ("Internal_variable_names", ("\024|\208(\224\206\012\006\179\203\020\000\179\228\154\218")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("Freshening", ("@\017\191q\232\253\236\139\131\160Z\000b\223\184\228")); ("Flambda", ("\195J|\022>U\206!\211\212\185N\180zh\241")); ("Export_id", ("\017\209\152\144X\251!\178\238\152t\173\191Kl\232")); ("Env", ("\021\n\181\142x\b\169j\227\"\017\248*\178\245\223")); ("Debuginfo", ("\131\251\175\217P\194M\163\022\151\002\005\006\185:\185")); ("Compilation_unit", ("\007\240\020\003jK\000\210\174\021\189.8^\028K")); ("Cmi_format", ("6\177\bU\139\"\023\152=\249\135\174\b\011Cg")); ("Closure_origin", ("G\222\200`\213\247\022M|O\1488\194\030\187\229")); ("Closure_id", ("k\221yCH\015\186G\246]\003\233\198\179\217A")); ("Closure_element", ("a\194\018\239D1\143{\156A\011\219H#\149A")); ("Clambda_primitives", ("\199\176\237Hv\205\152\14717\179\017\246\221x`")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216")); ("Allocated_const", ("\029\027.W\160\170!\199Q2\235\240\167\031,\004"))], [(0)])
val print_raw_descr : Format.formatter -> descr -> unit
