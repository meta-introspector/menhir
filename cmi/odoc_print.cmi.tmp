val string_of_type_expr : Types.type_expr -> string
val string_of_module_type :
  ?code:string -> ?complete:bool -> Types.module_type -> string
("DEBUG:rule", [(("string_of_type_expr", 378), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -19), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("odoc_print.mli", 20, 1225, 1225), ("odoc_print.mli", 20, 1225, 1276), 0), 0, Tag1 ("Odoc_print", 1)), 0); (("string_of_module_type", 379), ((Tag1 (Tag1 ("code"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -16)], (0)), 100000000, 0, -15), (Tag1 (Tag1 ("complete"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -14)], (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "module_type"), 0, (0)), 100000000, 0, -12), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("odoc_print.mli", 28, 1600, 1600), ("odoc_print.mli", 28, 1600, 1691), 0), 0, Tag1 ("Odoc_print", 2)), 0); (("string_of_class_type", 380), ((Tag1 (Tag1 ("complete"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -7)], (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "class_type"), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("odoc_print.mli", 34, 1877, 1877), ("odoc_print.mli", 34, 1877, 1949), 0), 0, Tag1 ("Odoc_print", 3)), 0)], "Odoc_print", [("Odoc_print", ("nz\234\134\139b\173\002v\137\205\165\212y\n\t")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216"))], [(0)])
val string_of_class_type : ?complete:bool -> Types.class_type -> string
