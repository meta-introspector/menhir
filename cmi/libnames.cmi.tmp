val dirpath_of_string : string -> Names.DirPath.t
val pop_dirpath : Names.DirPath.t -> Names.DirPath.t
val pop_dirpath_n : int -> Names.DirPath.t -> Names.DirPath.t
val split_dirpath : Names.DirPath.t -> Names.DirPath.t * Names.Id.t
val add_dirpath_suffix :
  Names.DirPath.t -> Names.module_ident -> Names.DirPath.t
val add_dirpath_prefix :
  Names.module_ident -> Names.DirPath.t -> Names.DirPath.t
val chop_dirpath :
  int -> Names.DirPath.t -> Names.DirPath.t * Names.DirPath.t
val append_dirpath : Names.DirPath.t -> Names.DirPath.t -> Names.DirPath.t
val drop_dirpath_prefix :
  Names.DirPath.t -> Names.DirPath.t -> Names.DirPath.t
val is_dirpath_prefix_of : Names.DirPath.t -> Names.DirPath.t -> bool
val is_dirpath_suffix_of : Names.DirPath.t -> Names.DirPath.t -> bool
type full_path
val eq_full_path : full_path -> full_path -> bool
val make_path : Names.DirPath.t -> Names.Id.t -> full_path
val repr_path : full_path -> Names.DirPath.t * Names.Id.t
val dirpath : full_path -> Names.DirPath.t
val basename : full_path -> Names.Id.t
val path_of_string : string -> full_path
val string_of_path : full_path -> string
val pr_path : full_path -> Pp.t
module Spmap :
  sig
    type key = full_path
    type +'a t
    val empty : 'a t
    val is_empty : 'a t -> bool
    val mem : key -> 'a t -> bool
    val add : key -> 'a -> 'a t -> 'a t
    val update : key -> ('a option -> 'a option) -> 'a t -> 'a t
    val singleton : key -> 'a -> 'a t
    val remove : key -> 'a t -> 'a t
    val merge :
      (key -> 'a option -> 'b option -> 'c option) -> 'a t -> 'b t -> 'c t
    val union : (key -> 'a -> 'a -> 'a option) -> 'a t -> 'a t -> 'a t
    val compare : ('a -> 'a -> int) -> 'a t -> 'a t -> int
    val equal : ('a -> 'a -> bool) -> 'a t -> 'a t -> bool
    val iter : (key -> 'a -> unit) -> 'a t -> unit
    val fold : (key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b
    val for_all : (key -> 'a -> bool) -> 'a t -> bool
    val exists : (key -> 'a -> bool) -> 'a t -> bool
    val filter : (key -> 'a -> bool) -> 'a t -> 'a t
    val partition : (key -> 'a -> bool) -> 'a t -> 'a t * 'a t
    val cardinal : 'a t -> int
    val bindings : 'a t -> (key * 'a) list
    val min_binding : 'a t -> key * 'a
    val max_binding : 'a t -> key * 'a
    val choose : 'a t -> key * 'a
    val choose_opt : 'a t -> (key * 'a) option
    val split : key -> 'a t -> 'a t * 'a option * 'a t
    val find : key -> 'a t -> 'a
    val find_opt : key -> 'a t -> 'a option
    val map : ('a -> 'b) -> 'a t -> 'b t
    val mapi : (key -> 'a -> 'b) -> 'a t -> 'b t
  end
type qualid_r
type qualid = qualid_r CAst.t
val make_qualid : ?loc:Loc.t -> Names.DirPath.t -> Names.Id.t -> qualid
val repr_qualid : qualid -> Names.DirPath.t * Names.Id.t
val qualid_eq : qualid -> qualid -> bool
val is_qualid_suffix_of_full_path : qualid -> full_path -> bool
val pr_qualid : qualid -> Pp.t
val string_of_qualid : qualid -> string
val qualid_of_string : ?loc:Loc.t -> string -> qualid
val qualid_of_path : ?loc:Loc.t -> full_path -> qualid
val qualid_of_dirpath : ?loc:Loc.t -> Names.DirPath.t -> qualid
val qualid_of_ident : ?loc:Loc.t -> Names.Id.t -> qualid
val qualid_of_lident : Names.lident -> qualid
val qualid_is_ident : qualid -> bool
val qualid_path : qualid -> Names.DirPath.t
val qualid_basename : qualid -> Names.Id.t
val idset_mem_qualid : qualid -> Names.Id.Set.t -> bool
val coq_root : Names.module_ident
val coq_string : string("DEBUG:rule", [(("dirpath_of_string", 624), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -159), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -158), 0), 100000000, 0, -157), 0, (("library/libnames.mli", 14, 709, 709), ("library/libnames.mli", 14, 709, 752), 0), 0, Tag1 ("Libnames", 0)), 0); (("pop_dirpath", 625), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -156), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -155), 0), 100000000, 0, -154), 0, (("library/libnames.mli", 17, 831, 831), ("library/libnames.mli", 17, 831, 871), 0), 0, Tag1 ("Libnames", 1)), 0); (("pop_dirpath_n", 626), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -153), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -152), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -151), 0), 100000000, 0, -150), 0), 100000000, 0, -149), 0, (("library/libnames.mli", 20, 903, 903), ("library/libnames.mli", 20, 903, 952), 0), 0, Tag1 ("Libnames", 2)), 0); (("split_dirpath", 627), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -148), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -146); (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -147)]), 100000000, 0, -145), 0), 100000000, 0, -144), 0, (("library/libnames.mli", 23, 1029, 1029), ("library/libnames.mli", 23, 1029, 1078), 0), 0, Tag1 ("Libnames", 3)), 0); (("add_dirpath_suffix", 628), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -143), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "module_ident"), 0, (0)), 100000000, 0, -142), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -141), 0), 100000000, 0, -140), 0), 100000000, 0, -139), 0, (("library/libnames.mli", 25, 1080, 1080), ("library/libnames.mli", 25, 1080, 1143), 0), 0, Tag1 ("Libnames", 4)), 0); (("add_dirpath_prefix", 629), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "module_ident"), 0, (0)), 100000000, 0, -138), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -137), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -136), 0), 100000000, 0, -135), 0), 100000000, 0, -134), 0, (("library/libnames.mli", 26, 1144, 1144), ("library/libnames.mli", 26, 1144, 1207), 0), 0, Tag1 ("Libnames", 5)), 0); (("chop_dirpath", 630), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -133), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -132), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -130); (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -131)]), 100000000, 0, -129), 0), 100000000, 0, -128), 0), 100000000, 0, -127), 0, (("library/libnames.mli", 28, 1209, 1209), ("library/libnames.mli", 28, 1209, 1269), 0), 0, Tag1 ("Libnames", 6)), 0); (("append_dirpath", 631), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -126), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -125), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -124), 0), 100000000, 0, -123), 0), 100000000, 0, -122), 0, (("library/libnames.mli", 29, 1270, 1270), ("library/libnames.mli", 29, 1270, 1326), 0), 0, Tag1 ("Libnames", 7)), 0); (("drop_dirpath_prefix", 632), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -121), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -120), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -119), 0), 100000000, 0, -118), 0), 100000000, 0, -117), 0, (("library/libnames.mli", 31, 1328, 1328), ("library/libnames.mli", 31, 1328, 1389), 0), 0, Tag1 ("Libnames", 8)), 0); (("is_dirpath_prefix_of", 633), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -116), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -115), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -114), 0), 100000000, 0, -113), 0), 100000000, 0, -112), 0, (("library/libnames.mli", 32, 1390, 1390), ("library/libnames.mli", 32, 1390, 1447), 0), 0, Tag1 ("Libnames", 9)), 0); (("is_dirpath_suffix_of", 634), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -111), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -110), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -109), 0), 100000000, 0, -108), 0), 100000000, 0, -107), 0, (("library/libnames.mli", 34, 1449, 1449), ("library/libnames.mli", 34, 1449, 1506), 0), 0, Tag1 ("Libnames", 10)), 0); Tag1 (("full_path", 635), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("library/libnames.mli", 37, 1570, 1570), ("library/libnames.mli", 37, 1570, 1584), 0), 0, 0, 0, Tag1 ("Libnames", 11)), 1, 0); (("eq_full_path", 636), ((Tag1 (0, (Tag3 ((("full_path", 635)), 0, (0)), 100000000, 0, -106), (Tag1 (0, (Tag3 ((("full_path", 635)), 0, (0)), 100000000, 0, -105), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -104), 0), 100000000, 0, -103), 0), 100000000, 0, -102), 0, (("library/libnames.mli", 39, 1586, 1586), ("library/libnames.mli", 39, 1586, 1635), 0), 0, Tag1 ("Libnames", 12)), 0); (("make_path", 637), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -101), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -100), (Tag3 ((("full_path", 635)), 0, (0)), 100000000, 0, -99), 0), 100000000, 0, -98), 0), 100000000, 0, -97), 0, (("library/libnames.mli", 42, 1672, 1672), ("library/libnames.mli", 42, 1672, 1718), 0), 0, Tag1 ("Libnames", 13)), 0); (("repr_path", 638), ((Tag1 (0, (Tag3 ((("full_path", 635)), 0, (0)), 100000000, 0, -96), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -94); (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -95)]), 100000000, 0, -93), 0), 100000000, 0, -92), 0, (("library/libnames.mli", 45, 1754, 1754), ("library/libnames.mli", 45, 1754, 1799), 0), 0, Tag1 ("Libnames", 14)), 0); (("dirpath", 639), ((Tag1 (0, (Tag3 ((("full_path", 635)), 0, (0)), 100000000, 0, -91), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -90), 0), 100000000, 0, -89), 0, (("library/libnames.mli", 46, 1800, 1800), ("library/libnames.mli", 46, 1800, 1836), 0), 0, Tag1 ("Libnames", 15)), 0); (("basename", 640), ((Tag1 (0, (Tag3 ((("full_path", 635)), 0, (0)), 100000000, 0, -88), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("library/libnames.mli", 47, 1837, 1837), ("library/libnames.mli", 47, 1837, 1869), 0), 0, Tag1 ("Libnames", 16)), 0); (("path_of_string", 641), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -85), (Tag3 ((("full_path", 635)), 0, (0)), 100000000, 0, -84), 0), 100000000, 0, -83), 0, (("library/libnames.mli", 50, 1941, 1941), ("library/libnames.mli", 50, 1941, 1981), 0), 0, Tag1 ("Libnames", 17)), 0); (("string_of_path", 642), ((Tag1 (0, (Tag3 ((("full_path", 635)), 0, (0)), 100000000, 0, -82), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0, (("library/libnames.mli", 51, 1982, 1982), ("library/libnames.mli", 51, 1982, 2022), 0), 0, Tag1 ("Libnames", 18)), 0); (("pr_path", 643), ((Tag1 (0, (Tag3 ((("full_path", 635)), 0, (0)), 100000000, 0, -79), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -78), 0), 100000000, 0, -77), 0, (("library/libnames.mli", 52, 2023, 2023), ("library/libnames.mli", 52, 2023, 2054), 0), 0, Tag1 ("Libnames", 19)), 0); Tag3 (("Spmap", 644), 0, (Tag1 ([Tag1 (("key", 665), (0, 0, 0, 1, ((Tag3 ((("full_path", 635)), 0, (0)), 100000000, 0, -373)), 0, 0, 0, 0, (("library/libnames.mli", 54, 2056, 2087), ("library/libnames.mli", 54, 2056, 2107), 0), 0, 0, 0, Tag1 ("Libnames", 20)), 1, 0); Tag1 (("t", 666), ([((("a")), 100000000, 0, -372)], 1, 0, 1, 0, [1], [2], 0, 0, (("clib/cSig.mli", 56, 1893, 1897), ("clib/cSig.mli", 56, 1893, 1909), 0), 0, 0, 0, Tag1 ("CSig", 36)), 1, 0); (("empty", 667), ((Tag3 ((("t", 666)), [((("a")), 100000000, 0, -371)], (0)), 100000000, 0, -370), 0, (("clib/cSig.mli", 57, 1910, 1914), ("clib/cSig.mli", 57, 1910, 1929), 0), 0, Tag1 ("CSig", 37)), 0); (("is_empty", 668), ((Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -369)], (0)), 100000000, 0, -368), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -367), 0), 100000000, 0, -366), 0, (("clib/cSig.mli", 58, 1930, 1934), ("clib/cSig.mli", 58, 1930, 1960), 0), 0, Tag1 ("CSig", 38)), 0); (("mem", 669), ((Tag1 (0, (Tag3 ((("key", 665)), 0, (0)), 100000000, 0, -365), (Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -364)], (0)), 100000000, 0, -363), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -362), 0), 100000000, 0, -361), 0), 100000000, 0, -360), 0, (("clib/cSig.mli", 59, 1961, 1965), ("clib/cSig.mli", 59, 1961, 1993), 0), 0, Tag1 ("CSig", 39)), 0); (("add", 670), ((Tag1 (0, (Tag3 ((("key", 665)), 0, (0)), 100000000, 0, -359), (Tag1 (0, ((("a")), 100000000, 0, -357), (Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -357)], (0)), 100000000, 0, -358), (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -357)], (0)), 100000000, 0, -356), 0), 100000000, 0, -355), 0), 100000000, 0, -354), 0), 100000000, 0, -353), 0, (("clib/cSig.mli", 60, 1994, 1998), ("clib/cSig.mli", 60, 1994, 2032), 0), 0, Tag1 ("CSig", 40)), 0); (("update", 671), ((Tag1 (0, (Tag3 ((("key", 665)), 0, (0)), 100000000, 0, -352), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -347)], (0)), 100000000, 0, -351), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -347)], (0)), 100000000, 0, -350), 0), 100000000, 0, -349), (Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -347)], (0)), 100000000, 0, -348), (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -347)], (0)), 100000000, 0, -346), 0), 100000000, 0, -345), 0), 100000000, 0, -344), 0), 100000000, 0, -343), 0, (("clib/cSig.mli", 61, 2033, 2037), ("clib/cSig.mli", 61, 2033, 2097), 0), 0, Tag1 ("CSig", 41)), 0); (("singleton", 672), ((Tag1 (0, (Tag3 ((("key", 665)), 0, (0)), 100000000, 0, -342), (Tag1 (0, ((("a")), 100000000, 0, -341), (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -341)], (0)), 100000000, 0, -340), 0), 100000000, 0, -339), 0), 100000000, 0, -338), 0, (("clib/cSig.mli", 62, 2098, 2102), ("clib/cSig.mli", 62, 2098, 2134), 0), 0, Tag1 ("CSig", 42)), 0); (("remove", 673), ((Tag1 (0, (Tag3 ((("key", 665)), 0, (0)), 100000000, 0, -337), (Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -335)], (0)), 100000000, 0, -336), (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -335)], (0)), 100000000, 0, -334), 0), 100000000, 0, -333), 0), 100000000, 0, -332), 0, (("clib/cSig.mli", 63, 2135, 2139), ("clib/cSig.mli", 63, 2135, 2170), 0), 0, Tag1 ("CSig", 43)), 0); (("merge", 674), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 665)), 0, (0)), 100000000, 0, -331), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -324)], (0)), 100000000, 0, -330), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -322)], (0)), 100000000, 0, -329), (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -320)], (0)), 100000000, 0, -328), 0), 100000000, 0, -327), 0), 100000000, 0, -326), 0), 100000000, 0, -325), (Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -324)], (0)), 100000000, 0, -323), (Tag1 (0, (Tag3 ((("t", 666)), [((("b")), 100000000, 0, -322)], (0)), 100000000, 0, -321), (Tag3 ((("t", 666)), [((("c")), 100000000, 0, -320)], (0)), 100000000, 0, -319), 0), 100000000, 0, -318), 0), 100000000, 0, -317), 0), 100000000, 0, -316), 0, (("clib/cSig.mli", 64, 2171, 2175), ("clib/cSig.mli", 65, 2186, 2263), 0), 0, Tag1 ("CSig", 44)), 0); (("union", 675), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 665)), 0, (0)), 100000000, 0, -315), (Tag1 (0, ((("a")), 100000000, 0, -308), (Tag1 (0, ((("a")), 100000000, 0, -308), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -308)], (0)), 100000000, 0, -314), 0), 100000000, 0, -313), 0), 100000000, 0, -312), 0), 100000000, 0, -311), (Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -308)], (0)), 100000000, 0, -310), (Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -308)], (0)), 100000000, 0, -309), (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -308)], (0)), 100000000, 0, -307), 0), 100000000, 0, -306), 0), 100000000, 0, -305), 0), 100000000, 0, -304), 0, (("clib/cSig.mli", 66, 2264, 2268), ("clib/cSig.mli", 67, 2279, 2339), 0), 0, Tag1 ("CSig", 45)), 0); (("compare", 676), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -299), (Tag1 (0, ((("a")), 100000000, 0, -299), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -303), 0), 100000000, 0, -302), 0), 100000000, 0, -301), (Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -299)], (0)), 100000000, 0, -300), (Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -299)], (0)), 100000000, 0, -298), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -297), 0), 100000000, 0, -296), 0), 100000000, 0, -295), 0), 100000000, 0, -294), 0, (("clib/cSig.mli", 68, 2340, 2344), ("clib/cSig.mli", 68, 2340, 2397), 0), 0, Tag1 ("CSig", 46)), 0); (("equal", 677), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -289), (Tag1 (0, ((("a")), 100000000, 0, -289), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -293), 0), 100000000, 0, -292), 0), 100000000, 0, -291), (Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -289)], (0)), 100000000, 0, -290), (Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -289)], (0)), 100000000, 0, -288), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -287), 0), 100000000, 0, -286), 0), 100000000, 0, -285), 0), 100000000, 0, -284), 0, (("clib/cSig.mli", 69, 2398, 2402), ("clib/cSig.mli", 69, 2398, 2455), 0), 0, Tag1 ("CSig", 47)), 0); (("iter", 678), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 665)), 0, (0)), 100000000, 0, -283), (Tag1 (0, ((("a")), 100000000, 0, -279), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -282), 0), 100000000, 0, -281), 0), 100000000, 0, -280), (Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -279)], (0)), 100000000, 0, -278), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -277), 0), 100000000, 0, -276), 0), 100000000, 0, -275), 0, (("clib/cSig.mli", 70, 2456, 2460), ("clib/cSig.mli", 70, 2456, 2505), 0), 0, Tag1 ("CSig", 48)), 0); (("fold", 679), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 665)), 0, (0)), 100000000, 0, -274), (Tag1 (0, ((("a")), 100000000, 0, -270), (Tag1 (0, ((("b")), 100000000, 0, -268), ((("b")), 100000000, 0, -268), 0), 100000000, 0, -273), 0), 100000000, 0, -272), 0), 100000000, 0, -271), (Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -270)], (0)), 100000000, 0, -269), (Tag1 (0, ((("b")), 100000000, 0, -268), ((("b")), 100000000, 0, -268), 0), 100000000, 0, -267), 0), 100000000, 0, -266), 0), 100000000, 0, -265), 0, (("clib/cSig.mli", 71, 2506, 2510), ("clib/cSig.mli", 71, 2506, 2563), 0), 0, Tag1 ("CSig", 49)), 0); (("for_all", 680), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 665)), 0, (0)), 100000000, 0, -264), (Tag1 (0, ((("a")), 100000000, 0, -260), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -263), 0), 100000000, 0, -262), 0), 100000000, 0, -261), (Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -260)], (0)), 100000000, 0, -259), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -258), 0), 100000000, 0, -257), 0), 100000000, 0, -256), 0, (("clib/cSig.mli", 72, 2564, 2568), ("clib/cSig.mli", 72, 2564, 2616), 0), 0, Tag1 ("CSig", 50)), 0); (("exists", 681), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 665)), 0, (0)), 100000000, 0, -255), (Tag1 (0, ((("a")), 100000000, 0, -251), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -254), 0), 100000000, 0, -253), 0), 100000000, 0, -252), (Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -251)], (0)), 100000000, 0, -250), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -249), 0), 100000000, 0, -248), 0), 100000000, 0, -247), 0, (("clib/cSig.mli", 73, 2617, 2621), ("clib/cSig.mli", 73, 2617, 2668), 0), 0, Tag1 ("CSig", 51)), 0); (("filter", 682), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 665)), 0, (0)), 100000000, 0, -246), (Tag1 (0, ((("a")), 100000000, 0, -241), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -245), 0), 100000000, 0, -244), 0), 100000000, 0, -243), (Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -241)], (0)), 100000000, 0, -242), (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -241)], (0)), 100000000, 0, -240), 0), 100000000, 0, -239), 0), 100000000, 0, -238), 0, (("clib/cSig.mli", 74, 2669, 2673), ("clib/cSig.mli", 74, 2669, 2720), 0), 0, Tag1 ("CSig", 52)), 0); (("partition", 683), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 665)), 0, (0)), 100000000, 0, -237), (Tag1 (0, ((("a")), 100000000, 0, -231), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -236), 0), 100000000, 0, -235), 0), 100000000, 0, -234), (Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -231)], (0)), 100000000, 0, -233), (Tag2 ([(Tag3 ((("t", 666)), [((("a")), 100000000, 0, -231)], (0)), 100000000, 0, -230); (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -231)], (0)), 100000000, 0, -232)]), 100000000, 0, -229), 0), 100000000, 0, -228), 0), 100000000, 0, -227), 0, (("clib/cSig.mli", 75, 2721, 2725), ("clib/cSig.mli", 75, 2721, 2782), 0), 0, Tag1 ("CSig", 53)), 0); (("cardinal", 684), ((Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -226)], (0)), 100000000, 0, -225), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -224), 0), 100000000, 0, -223), 0, (("clib/cSig.mli", 76, 2783, 2787), ("clib/cSig.mli", 76, 2783, 2812), 0), 0, Tag1 ("CSig", 54)), 0); (("bindings", 685), ((Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -221)], (0)), 100000000, 0, -222), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 665)), 0, (0)), 100000000, 0, -220); ((("a")), 100000000, 0, -221)]), 100000000, 0, -219)], (0)), 100000000, 0, -218), 0), 100000000, 0, -217), 0, (("clib/cSig.mli", 77, 2813, 2817), ("clib/cSig.mli", 77, 2813, 2854), 0), 0, Tag1 ("CSig", 55)), 0); (("min_binding", 686), ((Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -215)], (0)), 100000000, 0, -216), (Tag2 ([(Tag3 ((("key", 665)), 0, (0)), 100000000, 0, -214); ((("a")), 100000000, 0, -215)]), 100000000, 0, -213), 0), 100000000, 0, -212), 0, (("clib/cSig.mli", 78, 2855, 2859), ("clib/cSig.mli", 78, 2855, 2894), 0), 0, Tag1 ("CSig", 56)), 0); (("max_binding", 687), ((Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -210)], (0)), 100000000, 0, -211), (Tag2 ([(Tag3 ((("key", 665)), 0, (0)), 100000000, 0, -209); ((("a")), 100000000, 0, -210)]), 100000000, 0, -208), 0), 100000000, 0, -207), 0, (("clib/cSig.mli", 79, 2895, 2899), ("clib/cSig.mli", 79, 2895, 2934), 0), 0, Tag1 ("CSig", 57)), 0); (("choose", 688), ((Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -205)], (0)), 100000000, 0, -206), (Tag2 ([(Tag3 ((("key", 665)), 0, (0)), 100000000, 0, -204); ((("a")), 100000000, 0, -205)]), 100000000, 0, -203), 0), 100000000, 0, -202), 0, (("clib/cSig.mli", 80, 2935, 2939), ("clib/cSig.mli", 80, 2935, 2969), 0), 0, Tag1 ("CSig", 58)), 0); (("choose_opt", 689), ((Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -200)], (0)), 100000000, 0, -201), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 665)), 0, (0)), 100000000, 0, -199); ((("a")), 100000000, 0, -200)]), 100000000, 0, -198)], (0)), 100000000, 0, -197), 0), 100000000, 0, -196), 0, (("clib/cSig.mli", 81, 2970, 2974), ("clib/cSig.mli", 81, 2970, 3015), 0), 0, Tag1 ("CSig", 59)), 0); (("split", 690), ((Tag1 (0, (Tag3 ((("key", 665)), 0, (0)), 100000000, 0, -195), (Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -191)], (0)), 100000000, 0, -194), (Tag2 ([(Tag3 ((("t", 666)), [((("a")), 100000000, 0, -191)], (0)), 100000000, 0, -190); (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -191)], (0)), 100000000, 0, -192); (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -191)], (0)), 100000000, 0, -193)]), 100000000, 0, -189), 0), 100000000, 0, -188), 0), 100000000, 0, -187), 0, (("clib/cSig.mli", 82, 3016, 3020), ("clib/cSig.mli", 82, 3016, 3069), 0), 0, Tag1 ("CSig", 60)), 0); (("find", 691), ((Tag1 (0, (Tag3 ((("key", 665)), 0, (0)), 100000000, 0, -186), (Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -184)], (0)), 100000000, 0, -185), ((("a")), 100000000, 0, -184), 0), 100000000, 0, -183), 0), 100000000, 0, -182), 0, (("clib/cSig.mli", 83, 3070, 3074), ("clib/cSig.mli", 83, 3070, 3101), 0), 0, Tag1 ("CSig", 61)), 0); (("find_opt", 692), ((Tag1 (0, (Tag3 ((("key", 665)), 0, (0)), 100000000, 0, -181), (Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -179)], (0)), 100000000, 0, -180), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -179)], (0)), 100000000, 0, -178), 0), 100000000, 0, -177), 0), 100000000, 0, -176), 0, (("clib/cSig.mli", 84, 3102, 3106), ("clib/cSig.mli", 84, 3102, 3145), 0), 0, Tag1 ("CSig", 62)), 0); (("map", 693), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -174), ((("b")), 100000000, 0, -172), 0), 100000000, 0, -175), (Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -174)], (0)), 100000000, 0, -173), (Tag3 ((("t", 666)), [((("b")), 100000000, 0, -172)], (0)), 100000000, 0, -171), 0), 100000000, 0, -170), 0), 100000000, 0, -169), 0, (("clib/cSig.mli", 85, 3146, 3150), ("clib/cSig.mli", 85, 3146, 3185), 0), 0, Tag1 ("CSig", 63)), 0); (("mapi", 694), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 665)), 0, (0)), 100000000, 0, -168), (Tag1 (0, ((("a")), 100000000, 0, -165), ((("b")), 100000000, 0, -163), 0), 100000000, 0, -167), 0), 100000000, 0, -166), (Tag1 (0, (Tag3 ((("t", 666)), [((("a")), 100000000, 0, -165)], (0)), 100000000, 0, -164), (Tag3 ((("t", 666)), [((("b")), 100000000, 0, -163)], (0)), 100000000, 0, -162), 0), 100000000, 0, -161), 0), 100000000, 0, -160), 0, (("clib/cSig.mli", 86, 3186, 3190), ("clib/cSig.mli", 86, 3186, 3233), 0), 0, Tag1 ("CSig", 64)), 0)]), 0, (("library/libnames.mli", 54, 2056, 2056), ("library/libnames.mli", 54, 2056, 2107), 0), Tag1 ("Libnames", 21)), 0, 0); Tag1 (("qualid_r", 645), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("library/libnames.mli", 62, 2382, 2382), ("library/libnames.mli", 62, 2382, 2395), 0), 0, 0, 0, Tag1 ("Libnames", 22)), 1, 0); Tag1 (("qualid", 646), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("CAst")), "t"), [(Tag3 ((("qualid_r", 645)), 0, (0)), 100000000, 0, -76)], (0)), 100000000, 0, -75)), 0, 0, 0, 0, (("library/libnames.mli", 63, 2396, 2396), ("library/libnames.mli", 63, 2396, 2425), 0), 0, 0, 0, Tag1 ("Libnames", 23)), 1, 0); (("make_qualid", 647), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -74)], (0)), 100000000, 0, -73), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -72), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -71), (Tag3 ((("qualid", 646)), 0, (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0), 100000000, 0, -68), 0), 100000000, 0, -67), 0, (("library/libnames.mli", 65, 2427, 2427), ("library/libnames.mli", 65, 2427, 2486), 0), 0, Tag1 ("Libnames", 25)), 0); (("repr_qualid", 648), ((Tag1 (0, (Tag3 ((("qualid", 646)), 0, (0)), 100000000, 0, -66), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -64); (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -65)]), 100000000, 0, -63), 0), 100000000, 0, -62), 0, (("library/libnames.mli", 66, 2487, 2487), ("library/libnames.mli", 66, 2487, 2531), 0), 0, Tag1 ("Libnames", 26)), 0); (("qualid_eq", 649), ((Tag1 (0, (Tag3 ((("qualid", 646)), 0, (0)), 100000000, 0, -61), (Tag1 (0, (Tag3 ((("qualid", 646)), 0, (0)), 100000000, 0, -60), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -59), 0), 100000000, 0, -58), 0), 100000000, 0, -57), 0, (("library/libnames.mli", 68, 2533, 2533), ("library/libnames.mli", 68, 2533, 2573), 0), 0, Tag1 ("Libnames", 27)), 0); (("is_qualid_suffix_of_full_path", 650), ((Tag1 (0, (Tag3 ((("qualid", 646)), 0, (0)), 100000000, 0, -56), (Tag1 (0, (Tag3 ((("full_path", 635)), 0, (0)), 100000000, 0, -55), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0, (("library/libnames.mli", 69, 2574, 2574), ("library/libnames.mli", 69, 2574, 2637), 0), 0, Tag1 ("Libnames", 28)), 0); (("pr_qualid", 651), ((Tag1 (0, (Tag3 ((("qualid", 646)), 0, (0)), 100000000, 0, -51), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0, (("library/libnames.mli", 71, 2639, 2639), ("library/libnames.mli", 71, 2639, 2669), 0), 0, Tag1 ("Libnames", 29)), 0); (("string_of_qualid", 652), ((Tag1 (0, (Tag3 ((("qualid", 646)), 0, (0)), 100000000, 0, -48), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("library/libnames.mli", 72, 2670, 2670), ("library/libnames.mli", 72, 2670, 2709), 0), 0, Tag1 ("Libnames", 30)), 0); (("qualid_of_string", 653), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -45)], (0)), 100000000, 0, -44), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -43), (Tag3 ((("qualid", 646)), 0, (0)), 100000000, 0, -42), 0), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("library/libnames.mli", 73, 2710, 2710), ("library/libnames.mli", 73, 2710, 2763), 0), 0, Tag1 ("Libnames", 31)), 0); (("qualid_of_path", 654), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -39)], (0)), 100000000, 0, -38), (Tag1 (0, (Tag3 ((("full_path", 635)), 0, (0)), 100000000, 0, -37), (Tag3 ((("qualid", 646)), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("library/libnames.mli", 78, 2867, 2867), ("library/libnames.mli", 78, 2867, 2921), 0), 0, Tag1 ("Libnames", 32)), 0); (("qualid_of_dirpath", 655), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -33)], (0)), 100000000, 0, -32), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -31), (Tag3 ((("qualid", 646)), 0, (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("library/libnames.mli", 79, 2922, 2922), ("library/libnames.mli", 79, 2922, 2979), 0), 0, Tag1 ("Libnames", 33)), 0); (("qualid_of_ident", 656), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -27)], (0)), 100000000, 0, -26), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -25), (Tag3 ((("qualid", 646)), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("library/libnames.mli", 80, 2980, 2980), ("library/libnames.mli", 80, 2980, 3030), 0), 0, Tag1 ("Libnames", 34)), 0); (("qualid_of_lident", 657), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "lident"), 0, (0)), 100000000, 0, -21), (Tag3 ((("qualid", 646)), 0, (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("library/libnames.mli", 81, 3031, 3031), ("library/libnames.mli", 81, 3031, 3070), 0), 0, Tag1 ("Libnames", 35)), 0); (("qualid_is_ident", 658), ((Tag1 (0, (Tag3 ((("qualid", 646)), 0, (0)), 100000000, 0, -18), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("library/libnames.mli", 83, 3072, 3072), ("library/libnames.mli", 83, 3072, 3108), 0), 0, Tag1 ("Libnames", 36)), 0); (("qualid_path", 659), ((Tag1 (0, (Tag3 ((("qualid", 646)), 0, (0)), 100000000, 0, -15), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("library/libnames.mli", 84, 3109, 3109), ("library/libnames.mli", 84, 3109, 3146), 0), 0, Tag1 ("Libnames", 37)), 0); (("qualid_basename", 660), ((Tag1 (0, (Tag3 ((("qualid", 646)), 0, (0)), 100000000, 0, -12), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("library/libnames.mli", 85, 3147, 3147), ("library/libnames.mli", 85, 3147, 3183), 0), 0, Tag1 ("Libnames", 38)), 0); (("idset_mem_qualid", 661), ((Tag1 (0, (Tag3 ((("qualid", 646)), 0, (0)), 100000000, 0, -9), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -8), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("library/libnames.mli", 87, 3185, 3185), ("library/libnames.mli", 87, 3185, 3234), 0), 0, Tag1 ("Libnames", 39)), 0); (("coq_root", 662), ((Tag3 (Tag1 ((Tag2 ("Names")), "module_ident"), 0, (0)), 100000000, 0, -4), 0, (("library/libnames.mli", 93, 3353, 3353), ("library/libnames.mli", 93, 3353, 3380), 0), 0, Tag1 ("Libnames", 40)), 0); (("coq_string", 663), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3), 0, (("library/libnames.mli", 94, 3393, 3393), ("library/libnames.mli", 94, 3393, 3416), 0), 0, Tag1 ("Libnames", 41)), 0); (("default_root_prefix", 664), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -2), 0, (("library/libnames.mli", 98, 3518, 3518), ("library/libnames.mli", 98, 3518, 3553), 0), 0, Tag1 ("Libnames", 42)), 0)], "Libnames", [("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150"))], [(0)])

val default_root_prefix : Names.DirPath.t
