module Name = Odoc_name
type private_flag = Asttypes.private_flag = Private | Public
type extension_alias = {
  xa_name : Name.t;
  mutable xa_xt : t_extension_constructor option;
}
and t_extension_constructor = {
  xt_name : Name.t;
  xt_args : Odoc_type.constructor_args;
  xt_ret : Types.type_expr option;
  xt_type_extension : t_type_extension;
  xt_alias : extension_alias option;
  mutable xt_loc : Odoc_types.location;
  mutable xt_text : Odoc_types.info option;
}
and t_type_extension = {
  mutable te_info : Odoc_types.info option;
  te_type_name : Name.t;
  te_type_parameters : Types.type_expr list;
  te_private : private_flag;
  mutable te_constructors : t_extension_constructor list;
  mutable te_loc : Odoc_types.location;
  mutable te_code : string option;
}
("DEBUG:rule", [Tag3 (("Name", 460), 1, (Tag3 ((Tag2 ("Odoc_name"))), 0, (("odoc_extension.mli", 18, 1139, 1139), ("odoc_extension.mli", 18, 1139, 1162), 0), Tag1 ("Odoc_extension", 0)), 0, 0); Tag1 (("private_flag", 461), (0, 0, Tag1 ([(("Private", 271), (0), 0, (("odoc_extension.mli", 20, 1164, 1208), ("odoc_extension.mli", 20, 1164, 1215), 0), 0, Tag1 ("Odoc_extension", 2)); (("Public", 272), (0), 0, (("odoc_extension.mli", 20, 1164, 1216), ("odoc_extension.mli", 20, 1164, 1224), 0), 0, Tag1 ("Odoc_extension", 3))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Asttypes")), "private_flag"), 0, (0)), 100000000, 0, -30)), 0, 0, 0, 0, (("odoc_extension.mli", 20, 1164, 1164), ("odoc_extension.mli", 20, 1164, 1224), 0), 0, 1, 0, Tag1 ("Odoc_extension", 1)), 1, 0); Tag1 (("extension_alias", 462), (0, 0, [[(("xa_name", 309), 0, (Tag3 (Tag1 ((("Name", 460)), "t"), 0, (0)), 100000000, 0, -27), (("odoc_extension.mli", 23, 1251, 1253), ("odoc_extension.mli", 23, 1251, 1270), 0), 0, Tag1 ("Odoc_extension", 7)); (("xa_xt", 310), 1, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t_extension_constructor", 463)), 0, (0)), 100000000, 0, -29)], (0)), 100000000, 0, -28), (("odoc_extension.mli", 24, 1271, 1273), ("odoc_extension.mli", 24, 1271, 1320), 0), 0, Tag1 ("Odoc_extension", 8))]], 1, 0, 0, 0, 0, 0, (("odoc_extension.mli", 22, 1226, 1226), ("odoc_extension.mli", 25, 1321, 1322), 0), 0, 0, 0, Tag1 ("Odoc_extension", 4)), 1, 0); Tag1 (("t_extension_constructor", 463), (0, 0, [[(("xt_name", 311), 0, (Tag3 (Tag1 ((("Name", 460)), "t"), 0, (0)), 100000000, 0, -17), (("odoc_extension.mli", 27, 1355, 1357), ("odoc_extension.mli", 27, 1355, 1374), 0), 0, Tag1 ("Odoc_extension", 10)); (("xt_args", 321), 0, (Tag3 (Tag1 ((Tag2 ("Odoc_type")), "constructor_args"), 0, (0)), 100000000, 0, -18), (("odoc_extension.mli", 28, 1375, 1377), ("odoc_extension.mli", 28, 1375, 1414), 0), 0, Tag1 ("Odoc_extension", 11)); (("xt_ret", 428), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -20)], (0)), 100000000, 0, -19), (("odoc_extension.mli", 29, 1415, 1417), ("odoc_extension.mli", 29, 1415, 1449), 0), 0, Tag1 ("Odoc_extension", 12)); (("xt_type_extension", 429), 0, (Tag3 ((("t_type_extension", 464)), 0, (0)), 100000000, 0, -21), (("odoc_extension.mli", 30, 1450, 1452), ("odoc_extension.mli", 30, 1450, 1489), 0), 0, Tag1 ("Odoc_extension", 13)); (("xt_alias", 430), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("extension_alias", 462)), 0, (0)), 100000000, 0, -23)], (0)), 100000000, 0, -22), (("odoc_extension.mli", 31, 1490, 1492), ("odoc_extension.mli", 31, 1490, 1526), 0), 0, Tag1 ("Odoc_extension", 14)); (("xt_loc", 450), 1, (Tag3 (Tag1 ((Tag2 ("Odoc_types")), "location"), 0, (0)), 100000000, 0, -24), (("odoc_extension.mli", 32, 1527, 1529), ("odoc_extension.mli", 32, 1527, 1566), 0), 0, Tag1 ("Odoc_extension", 15)); (("xt_text", 451), 1, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -26)], (0)), 100000000, 0, -25), (("odoc_extension.mli", 33, 1567, 1569), ("odoc_extension.mli", 33, 1567, 1610), 0), 0, Tag1 ("Odoc_extension", 16))]], 1, 0, 0, 0, 0, 0, (("odoc_extension.mli", 26, 1323, 1323), ("odoc_extension.mli", 34, 1611, 1612), 0), 0, 0, 0, Tag1 ("Odoc_extension", 5)), 2, 0); Tag1 (("t_type_extension", 464), (0, 0, [[(("te_info", 452), 1, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -7)], (0)), 100000000, 0, -6), (("odoc_extension.mli", 36, 1638, 1640), ("odoc_extension.mli", 36, 1638, 1681), 0), 0, Tag1 ("Odoc_extension", 17)); (("te_type_name", 453), 0, (Tag3 (Tag1 ((("Name", 460)), "t"), 0, (0)), 100000000, 0, -8), (("odoc_extension.mli", 37, 1682, 1684), ("odoc_extension.mli", 37, 1682, 1706), 0), 0, Tag1 ("Odoc_extension", 18)); (("te_type_parameters", 454), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -10)], (0)), 100000000, 0, -9), (("odoc_extension.mli", 38, 1707, 1709), ("odoc_extension.mli", 38, 1707, 1751), 0), 0, Tag1 ("Odoc_extension", 19)); (("te_private", 455), 0, (Tag3 ((("private_flag", 461)), 0, (0)), 100000000, 0, -11), (("odoc_extension.mli", 39, 1752, 1754), ("odoc_extension.mli", 39, 1752, 1780), 0), 0, Tag1 ("Odoc_extension", 20)); (("te_constructors", 456), 1, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t_extension_constructor", 463)), 0, (0)), 100000000, 0, -13)], (0)), 100000000, 0, -12), (("odoc_extension.mli", 40, 1781, 1783), ("odoc_extension.mli", 40, 1781, 1838), 0), 0, Tag1 ("Odoc_extension", 21)); (("te_loc", 457), 1, (Tag3 (Tag1 ((Tag2 ("Odoc_types")), "location"), 0, (0)), 100000000, 0, -14), (("odoc_extension.mli", 41, 1839, 1841), ("odoc_extension.mli", 41, 1839, 1878), 0), 0, Tag1 ("Odoc_extension", 22)); (("te_code", 458), 1, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -16)], (0)), 100000000, 0, -15), (("odoc_extension.mli", 42, 1879, 1881), ("odoc_extension.mli", 42, 1879, 1913), 0), 0, Tag1 ("Odoc_extension", 23))]], 1, 0, 0, 0, 0, 0, (("odoc_extension.mli", 35, 1613, 1613), ("odoc_extension.mli", 43, 1914, 1915), 0), 0, 0, 0, Tag1 ("Odoc_extension", 6)), 2, 0); (("extension_constructors", 465), ((Tag1 (0, (Tag3 ((("t_type_extension", 464)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t_extension_constructor", 463)), 0, (0)), 100000000, 0, -4)], (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("odoc_extension.mli", 45, 1917, 1917), ("odoc_extension.mli", 45, 1917, 1994), 0), 0, Tag1 ("Odoc_extension", 24)), 0)], "Odoc_extension", [("Odoc_extension", ("HQjI\247\201\206b\193\166\171\167!I\191\198")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Odoc_types", ("<k{\137\201\170z%E\221\170\147\151\127\189\015")); ("Odoc_type", ("\236\128j}\240\188\1487q\214\192oj\158\133\170")); ("Odoc_name", ("\248'\1872Z\r\160\146\012'\180V\240\1577f")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216"))], [(0)])
val extension_constructors : t_type_extension -> t_extension_constructor list
