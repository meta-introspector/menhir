type dp = Format.formatter -> unit
type 'a dprinter = 'a -> dp
module type Result_printer =
  sig
    module T : Zipper_def.tree
    val pp_opens : T.opens -> dp -> dp
    val pp_bindrec : T.bind_rec dprinter
    val pp_me : T.module_expr dprinter
    val pp_mt : T.module_type dprinter
    val pp_with_constraints : T.with_constraints dprinter
    val pp_m2l : T.m2l dprinter
    val pp_minor : T.minor dprinter
    val pp_minors : T.minors dprinter
    val pp_access : T.access dprinter
    val pp_path : T.path dprinter
    val pp_path_expr : T.path_expr dprinter
  end
module Make :
  functor (Def : Zipper_def.s)
    (R : sig
           val pp_opens : Def.T.opens -> dp -> dp
           val pp_bindrec : Def.T.bind_rec dprinter
           val pp_me : Def.T.module_expr dprinter
           val pp_mt : Def.T.module_type dprinter
           val pp_with_constraints : Def.T.with_constraints dprinter
           val pp_m2l : Def.T.m2l dprinter
           val pp_minor : Def.T.minor dprinter
           val pp_minors : Def.T.minors dprinter
           val pp_access : Def.T.access dprinter
           val pp_path : Def.T.path dprinter
           val pp_path_expr : Def.T.path_expr dprinter
         end)
    -> sig val pp : Zipper_skeleton.path_in_context Def.zipper Pp.t end
module Opaque :
  functor (Def : Zipper_def.s) ->
    sig
      val pp_opens : Def.T.opens -> dp -> dp
      val pp_bindrec : Def.T.bind_rec dprinter
      val pp_me : Def.T.module_expr dprinter
      val pp_mt : Def.T.module_type dprinter
      val pp_with_constraints : Def.T.with_constraints dprinter
      val pp_m2l : Def.T.m2l dprinter
      val pp_minor : Def.T.minor dprinter
      val pp_minors : Def.T.minors dprinter
      val pp_access : Def.T.access dprinter
      val pp_path : Def.T.path dprinter
      val pp_path_expr : Def.T.path_expr dprinter("DEBUG:rule", [Tag1 (("dp", 777), (0, 0, 0, 1, ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5)), 0, 0, 0, 0, (("lib/zipper_pp.mli", 2, 1, 1), ("lib/zipper_pp.mli", 2, 1, 35), 0), 0, 0, 0, Tag1 ("Zipper_pp", 0)), 1, 0); Tag1 (("dprinter", 778), ([((("a")), 100000000, 0, -4)], 1, 0, 1, ((Tag1 (0, ((("a")), 100000000, 0, -4), (Tag3 ((("dp", 777)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2)), [46], [0], 0, 0, (("lib/zipper_pp.mli", 3, 36, 36), ("lib/zipper_pp.mli", 3, 36, 63), 0), 0, 0, 0, Tag1 ("Zipper_pp", 1)), 1, 0); Tag4 (("Result_printer", 779), ((Tag1 ([Tag3 (("T", 785), 0, ((Tag1 ((Tag2 ("Zipper_def")), "tree")), 0, (("lib/zipper_pp.mli", 7, 99, 101), ("lib/zipper_pp.mli", 7, 99, 126), 0), Tag1 ("Zipper_pp", 2)), 0, 0); (("pp_opens", 786), ((Tag1 (0, (Tag3 (Tag1 ((("T", 785)), "opens"), 0, (0)), 100000000, 0, -32), (Tag1 (0, (Tag3 ((("dp", 777)), 0, (0)), 100000000, 0, -31), (Tag3 ((("dp", 777)), 0, (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("lib/zipper_pp.mli", 9, 128, 130), ("lib/zipper_pp.mli", 9, 128, 163), 0), 0, Tag1 ("Zipper_pp", 3)), 0); (("pp_bindrec", 787), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 ((("T", 785)), "bind_rec"), 0, (0)), 100000000, 0, -27)], (0)), 100000000, 0, -26), 0, (("lib/zipper_pp.mli", 10, 164, 166), ("lib/zipper_pp.mli", 10, 164, 201), 0), 0, Tag1 ("Zipper_pp", 4)), 0); (("pp_me", 788), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 ((("T", 785)), "module_expr"), 0, (0)), 100000000, 0, -25)], (0)), 100000000, 0, -24), 0, (("lib/zipper_pp.mli", 11, 202, 204), ("lib/zipper_pp.mli", 11, 202, 237), 0), 0, Tag1 ("Zipper_pp", 5)), 0); (("pp_mt", 789), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 ((("T", 785)), "module_type"), 0, (0)), 100000000, 0, -23)], (0)), 100000000, 0, -22), 0, (("lib/zipper_pp.mli", 12, 238, 240), ("lib/zipper_pp.mli", 12, 238, 273), 0), 0, Tag1 ("Zipper_pp", 6)), 0); (("pp_with_constraints", 790), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 ((("T", 785)), "with_constraints"), 0, (0)), 100000000, 0, -21)], (0)), 100000000, 0, -20), 0, (("lib/zipper_pp.mli", 13, 274, 276), ("lib/zipper_pp.mli", 13, 274, 328), 0), 0, Tag1 ("Zipper_pp", 7)), 0); (("pp_m2l", 791), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 ((("T", 785)), "m2l"), 0, (0)), 100000000, 0, -19)], (0)), 100000000, 0, -18), 0, (("lib/zipper_pp.mli", 14, 329, 331), ("lib/zipper_pp.mli", 14, 329, 357), 0), 0, Tag1 ("Zipper_pp", 8)), 0); (("pp_minor", 792), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 ((("T", 785)), "minor"), 0, (0)), 100000000, 0, -17)], (0)), 100000000, 0, -16), 0, (("lib/zipper_pp.mli", 15, 358, 360), ("lib/zipper_pp.mli", 15, 358, 390), 0), 0, Tag1 ("Zipper_pp", 9)), 0); (("pp_minors", 793), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 ((("T", 785)), "minors"), 0, (0)), 100000000, 0, -15)], (0)), 100000000, 0, -14), 0, (("lib/zipper_pp.mli", 16, 391, 393), ("lib/zipper_pp.mli", 16, 391, 425), 0), 0, Tag1 ("Zipper_pp", 10)), 0); (("pp_access", 794), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 ((("T", 785)), "access"), 0, (0)), 100000000, 0, -13)], (0)), 100000000, 0, -12), 0, (("lib/zipper_pp.mli", 17, 426, 428), ("lib/zipper_pp.mli", 17, 426, 460), 0), 0, Tag1 ("Zipper_pp", 11)), 0); (("pp_path", 795), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 ((("T", 785)), "path"), 0, (0)), 100000000, 0, -11)], (0)), 100000000, 0, -10), 0, (("lib/zipper_pp.mli", 18, 461, 463), ("lib/zipper_pp.mli", 18, 461, 491), 0), 0, Tag1 ("Zipper_pp", 12)), 0); (("pp_path_expr", 796), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 ((("T", 785)), "path_expr"), 0, (0)), 100000000, 0, -9)], (0)), 100000000, 0, -8), 0, (("lib/zipper_pp.mli", 19, 492, 494), ("lib/zipper_pp.mli", 19, 492, 532), 0), 0, Tag1 ("Zipper_pp", 13)), 0)])), 0, (("lib/zipper_pp.mli", 6, 66, 66), ("lib/zipper_pp.mli", 21, 534, 537), 0), Tag1 ("Zipper_pp", 14)), 0); Tag3 (("Make", 780), 0, (Tag2 (((("Def", 783)), (Tag1 ((Tag2 ("Zipper_def")), "s"))), Tag2 (((("R", 784)), Tag1 ([(("pp_opens", 797), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Def", 783)), "T"), "opens"), 0, (0)), 100000000, 0, -57), (Tag1 (0, (Tag3 ((("dp", 777)), 0, (0)), 100000000, 0, -56), (Tag3 ((("dp", 777)), 0, (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("lib/zipper_pp.mli", 23, 539, 571), ("lib/zipper_pp.mli", 23, 539, 608), 0), 0, Tag1 ("Zipper_pp", 3)), 0); (("pp_bindrec", 798), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 (Tag1 ((("Def", 783)), "T"), "bind_rec"), 0, (0)), 100000000, 0, -52)], (0)), 100000000, 0, -51), 0, (("lib/zipper_pp.mli", 23, 539, 571), ("lib/zipper_pp.mli", 23, 539, 608), 0), 0, Tag1 ("Zipper_pp", 4)), 0); (("pp_me", 799), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 (Tag1 ((("Def", 783)), "T"), "module_expr"), 0, (0)), 100000000, 0, -50)], (0)), 100000000, 0, -49), 0, (("lib/zipper_pp.mli", 23, 539, 571), ("lib/zipper_pp.mli", 23, 539, 608), 0), 0, Tag1 ("Zipper_pp", 5)), 0); (("pp_mt", 800), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 (Tag1 ((("Def", 783)), "T"), "module_type"), 0, (0)), 100000000, 0, -48)], (0)), 100000000, 0, -47), 0, (("lib/zipper_pp.mli", 23, 539, 571), ("lib/zipper_pp.mli", 23, 539, 608), 0), 0, Tag1 ("Zipper_pp", 6)), 0); (("pp_with_constraints", 801), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 (Tag1 ((("Def", 783)), "T"), "with_constraints"), 0, (0)), 100000000, 0, -46)], (0)), 100000000, 0, -45), 0, (("lib/zipper_pp.mli", 23, 539, 571), ("lib/zipper_pp.mli", 23, 539, 608), 0), 0, Tag1 ("Zipper_pp", 7)), 0); (("pp_m2l", 802), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 (Tag1 ((("Def", 783)), "T"), "m2l"), 0, (0)), 100000000, 0, -44)], (0)), 100000000, 0, -43), 0, (("lib/zipper_pp.mli", 23, 539, 571), ("lib/zipper_pp.mli", 23, 539, 608), 0), 0, Tag1 ("Zipper_pp", 8)), 0); (("pp_minor", 803), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 (Tag1 ((("Def", 783)), "T"), "minor"), 0, (0)), 100000000, 0, -42)], (0)), 100000000, 0, -41), 0, (("lib/zipper_pp.mli", 23, 539, 571), ("lib/zipper_pp.mli", 23, 539, 608), 0), 0, Tag1 ("Zipper_pp", 9)), 0); (("pp_minors", 804), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 (Tag1 ((("Def", 783)), "T"), "minors"), 0, (0)), 100000000, 0, -40)], (0)), 100000000, 0, -39), 0, (("lib/zipper_pp.mli", 23, 539, 571), ("lib/zipper_pp.mli", 23, 539, 608), 0), 0, Tag1 ("Zipper_pp", 10)), 0); (("pp_access", 805), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 (Tag1 ((("Def", 783)), "T"), "access"), 0, (0)), 100000000, 0, -38)], (0)), 100000000, 0, -37), 0, (("lib/zipper_pp.mli", 23, 539, 571), ("lib/zipper_pp.mli", 23, 539, 608), 0), 0, Tag1 ("Zipper_pp", 11)), 0); (("pp_path", 806), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 (Tag1 ((("Def", 783)), "T"), "path"), 0, (0)), 100000000, 0, -36)], (0)), 100000000, 0, -35), 0, (("lib/zipper_pp.mli", 23, 539, 571), ("lib/zipper_pp.mli", 23, 539, 608), 0), 0, Tag1 ("Zipper_pp", 12)), 0); (("pp_path_expr", 807), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 (Tag1 ((("Def", 783)), "T"), "path_expr"), 0, (0)), 100000000, 0, -34)], (0)), 100000000, 0, -33), 0, (("lib/zipper_pp.mli", 23, 539, 571), ("lib/zipper_pp.mli", 23, 539, 608), 0), 0, Tag1 ("Zipper_pp", 13)), 0)])), Tag1 ([(("pp", 808), ((Tag3 (Tag1 ((Tag2 ("Pp")), "t"), [(Tag3 (Tag1 ((("Def", 783)), "zipper"), [(Tag3 (Tag1 ((Tag2 ("Zipper_skeleton")), "path_in_context"), 0, (0)), 100000000, 0, -60)], (0)), 100000000, 0, -59)], (0)), 100000000, 0, -58), 0, (("lib/zipper_pp.mli", 24, 615, 617), ("lib/zipper_pp.mli", 24, 615, 672), 0), 0, Tag1 ("Zipper_pp", 29)), 0)]))), 0, (("lib/zipper_pp.mli", 23, 539, 539), ("lib/zipper_pp.mli", 25, 673, 676), 0), Tag1 ("Zipper_pp", 30)), 0, 0); Tag3 (("Opaque", 781), 0, (Tag2 (((("Def", 782)), (Tag1 ((Tag2 ("Zipper_def")), "s"))), Tag1 ([(("pp_opens", 809), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((("Def", 782)), "T"), "opens"), 0, (0)), 100000000, 0, -85), (Tag1 (0, (Tag3 ((("dp", 777)), 0, (0)), 100000000, 0, -84), (Tag3 ((("dp", 777)), 0, (0)), 100000000, 0, -83), 0), 100000000, 0, -82), 0), 100000000, 0, -81), 0, (("lib/zipper_pp.mli", 27, 678, 712), ("lib/zipper_pp.mli", 27, 678, 749), 0), 0, Tag1 ("Zipper_pp", 3)), 0); (("pp_bindrec", 810), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 (Tag1 ((("Def", 782)), "T"), "bind_rec"), 0, (0)), 100000000, 0, -80)], (0)), 100000000, 0, -79), 0, (("lib/zipper_pp.mli", 27, 678, 712), ("lib/zipper_pp.mli", 27, 678, 749), 0), 0, Tag1 ("Zipper_pp", 4)), 0); (("pp_me", 811), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 (Tag1 ((("Def", 782)), "T"), "module_expr"), 0, (0)), 100000000, 0, -78)], (0)), 100000000, 0, -77), 0, (("lib/zipper_pp.mli", 27, 678, 712), ("lib/zipper_pp.mli", 27, 678, 749), 0), 0, Tag1 ("Zipper_pp", 5)), 0); (("pp_mt", 812), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 (Tag1 ((("Def", 782)), "T"), "module_type"), 0, (0)), 100000000, 0, -76)], (0)), 100000000, 0, -75), 0, (("lib/zipper_pp.mli", 27, 678, 712), ("lib/zipper_pp.mli", 27, 678, 749), 0), 0, Tag1 ("Zipper_pp", 6)), 0); (("pp_with_constraints", 813), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 (Tag1 ((("Def", 782)), "T"), "with_constraints"), 0, (0)), 100000000, 0, -74)], (0)), 100000000, 0, -73), 0, (("lib/zipper_pp.mli", 27, 678, 712), ("lib/zipper_pp.mli", 27, 678, 749), 0), 0, Tag1 ("Zipper_pp", 7)), 0); (("pp_m2l", 814), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 (Tag1 ((("Def", 782)), "T"), "m2l"), 0, (0)), 100000000, 0, -72)], (0)), 100000000, 0, -71), 0, (("lib/zipper_pp.mli", 27, 678, 712), ("lib/zipper_pp.mli", 27, 678, 749), 0), 0, Tag1 ("Zipper_pp", 8)), 0); (("pp_minor", 815), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 (Tag1 ((("Def", 782)), "T"), "minor"), 0, (0)), 100000000, 0, -70)], (0)), 100000000, 0, -69), 0, (("lib/zipper_pp.mli", 27, 678, 712), ("lib/zipper_pp.mli", 27, 678, 749), 0), 0, Tag1 ("Zipper_pp", 9)), 0); (("pp_minors", 816), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 (Tag1 ((("Def", 782)), "T"), "minors"), 0, (0)), 100000000, 0, -68)], (0)), 100000000, 0, -67), 0, (("lib/zipper_pp.mli", 27, 678, 712), ("lib/zipper_pp.mli", 27, 678, 749), 0), 0, Tag1 ("Zipper_pp", 10)), 0); (("pp_access", 817), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 (Tag1 ((("Def", 782)), "T"), "access"), 0, (0)), 100000000, 0, -66)], (0)), 100000000, 0, -65), 0, (("lib/zipper_pp.mli", 27, 678, 712), ("lib/zipper_pp.mli", 27, 678, 749), 0), 0, Tag1 ("Zipper_pp", 11)), 0); (("pp_path", 818), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 (Tag1 ((("Def", 782)), "T"), "path"), 0, (0)), 100000000, 0, -64)], (0)), 100000000, 0, -63), 0, (("lib/zipper_pp.mli", 27, 678, 712), ("lib/zipper_pp.mli", 27, 678, 749), 0), 0, Tag1 ("Zipper_pp", 12)), 0); (("pp_path_expr", 819), ((Tag3 ((("dprinter", 778)), [(Tag3 (Tag1 (Tag1 ((("Def", 782)), "T"), "path_expr"), 0, (0)), 100000000, 0, -62)], (0)), 100000000, 0, -61), 0, (("lib/zipper_pp.mli", 27, 678, 712), ("lib/zipper_pp.mli", 27, 678, 749), 0), 0, Tag1 ("Zipper_pp", 13)), 0)])), 0, (("lib/zipper_pp.mli", 27, 678, 678), ("lib/zipper_pp.mli", 27, 678, 749), 0), Tag1 ("Zipper_pp", 44)), 0, 0)], "Zipper_pp", [("Zipper_pp", ("\216\254\157\235\132#h\159vt\131\213\147~\245,")); ("Zipper_skeleton", (")\231\023^\251\225On\214\161\199\019\231\219\240\148")); ("Zipper_def", ("\147!\207Y\239\000\242od\135\188\211\162s~\r")); ("Unitname", ("\155n\201\211\249\229\028$\220J\172\018<\249\171\158")); ("Uloc", ("\172\208h 6@\178[\156\249\206\172%\133\167\239")); ("Transforms", ("\247\177\132M&\202\192\164\018Ng6Wu\007\018")); ("Support", ("YA;\029\006a\255\202R\137\181\133\184\209)\005")); ("Summary", ("\243\022s.\187>\205\012\161)\1369wh\247p")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stage", ("\224\018\196\1757\168\209wr\235\232\015z\144\206V")); ("Schematic", ("\180\179\011\178\017I\241^\235\149h\161k\b\209\142")); ("Pp", ("\167zCQ\134\167\215\2517\247\158\219\250\223.\197")); ("Pkg", ("SneaP\023\210\210\240\218\128bA\te\239")); ("Paths", ("\000\152\242H\139l\222\245\245Ndb\202P^\175")); ("Namespaced", ("%\208\253;3\161W$\236\1838K\195z\1493")); ("Name", ("4? \167\131n\184\000\214\031\017\027\153\002]^")); ("Module", ("2_s\200\188\137\247\158>\168\195\023\195\n\011V")); ("Modname", ("v\160\183\003\212\232\177\007\228-\002\145i\230\255\248")); ("M2l", ("\208\241\201a\199\212\172v;\135t\185\027\196~\029")); ("Loc", ("ax\213\152\006\175?\212%\0014\238\021S\218=")); ("Id", ("w\207`(\179n\181\161\155\252\243\195\006\139NO")); ("Fault", ("\232\144\144(K\139\181-h!\017\212@?\127\199")); ("Deps", ("%\164\252&\165z\218\221\023\182\235\223+\147\145\195")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

    end
