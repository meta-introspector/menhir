val extern :
  concurrency:[ `Lwt_jobs | `Lwt_preemptive | `Sequential | `Unlocked ] ->
  errno:[ `Ignore_errno | `Return_errno ] ->
  stub_name:string ->
  external_name:string -> Format.formatter -> ('a -> 'b) Ctypes.fn -> unit
val case :
  concurrency:[ `Lwt_jobs | `Lwt_preemptive | `Sequential | `Unlocked ] ->
  errno:[ `Ignore_errno | `Return_errno ] ->
  stub_name:string ->
  external_name:string -> Format.formatter -> ('a -> 'b) Ctypes.fn -> unit
val val_case :
  stub_name:string ->
  external_name:string -> Format.formatter -> 'a Ctypes.typ -> unit
val constructor_decl :
  concurrency:[ `Lwt_jobs | `Lwt_preemptive | `Sequential | `Unlocked ] ->
  errno:[ `Ignore_errno | `Return_errno ] ->
  string -> 'a Ctypes.fn -> Format.formatter -> unit
val inverse_case :
  register_name:string ->
  constructor:string ->
  ("DEBUG:rule", [(("extern", 639), ((Tag1 (("concurrency"), (Tag8 (([("Lwt_jobs", (0)); ("Lwt_preemptive", (0)); ("Sequential", (0)); ("Unlocked", (0))], (0, 100000000, 0, -75), 1, 0, 0)), 100000000, 0, -74), (Tag1 (("errno"), (Tag8 (([("Ignore_errno", (0)); ("Return_errno", (0))], (0, 100000000, 0, -73), 1, 0, 0)), 100000000, 0, -72), (Tag1 (("stub_name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -71), (Tag1 (("external_name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -70), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -69), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ctypes")), "fn"), [(Tag1 (0, ((("a")), 100000000, 0, -68), ((("b")), 100000000, 0, -67), 0), 100000000, 0, -66)], (0)), 100000000, 0, -65), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -64), 0), 100000000, 0, -63), 0), 100000000, 0, -62), 0), 100000000, 0, -61), 0), 100000000, 0, -60), 0), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("src/cstubs/cstubs_generate_ml.mli", 10, 175, 175), ("src/cstubs/cstubs_generate_ml.mli", 13, 386, 423), 0), 0, Tag1 ("Cstubs_generate_ml", 0)), 0); (("case", 640), ((Tag1 (("concurrency"), (Tag8 (([("Lwt_jobs", (0)); ("Lwt_preemptive", (0)); ("Sequential", (0)); ("Unlocked", (0))], (0, 100000000, 0, -57), 1, 0, 0)), 100000000, 0, -56), (Tag1 (("errno"), (Tag8 (([("Ignore_errno", (0)); ("Return_errno", (0))], (0, 100000000, 0, -55), 1, 0, 0)), 100000000, 0, -54), (Tag1 (("stub_name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -53), (Tag1 (("external_name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -52), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -51), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ctypes")), "fn"), [(Tag1 (0, ((("a")), 100000000, 0, -50), ((("b")), 100000000, 0, -49), 0), 100000000, 0, -48)], (0)), 100000000, 0, -47), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("src/cstubs/cstubs_generate_ml.mli", 15, 425, 425), ("src/cstubs/cstubs_generate_ml.mli", 18, 634, 671), 0), 0, Tag1 ("Cstubs_generate_ml", 1)), 0); (("val_case", 641), ((Tag1 (("stub_name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -39), (Tag1 (("external_name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -38), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -37), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ctypes")), "typ"), [((("a")), 100000000, 0, -36)], (0)), 100000000, 0, -35), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -34), 0), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("src/cstubs/cstubs_generate_ml.mli", 20, 673, 673), ("src/cstubs/cstubs_generate_ml.mli", 21, 752, 782), 0), 0, Tag1 ("Cstubs_generate_ml", 2)), 0); (("constructor_decl", 642), ((Tag1 (("concurrency"), (Tag8 (([("Lwt_jobs", (0)); ("Lwt_preemptive", (0)); ("Sequential", (0)); ("Unlocked", (0))], (0, 100000000, 0, -29), 1, 0, 0)), 100000000, 0, -28), (Tag1 (("errno"), (Tag8 (([("Ignore_errno", (0)); ("Return_errno", (0))], (0, 100000000, 0, -27), 1, 0, 0)), 100000000, 0, -26), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -25), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ctypes")), "fn"), [((("a")), 100000000, 0, -24)], (0)), 100000000, 0, -23), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -22), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("src/cstubs/cstubs_generate_ml.mli", 23, 784, 784), ("src/cstubs/cstubs_generate_ml.mli", 25, 925, 977), 0), 0, Tag1 ("Cstubs_generate_ml", 3)), 0); (("inverse_case", 643), ((Tag1 (("register_name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -15), (Tag1 (("constructor"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -14), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -12), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ctypes")), "fn"), [(Tag1 (0, ((("a")), 100000000, 0, -11), ((("b")), 100000000, 0, -10), 0), 100000000, 0, -9)], (0)), 100000000, 0, -8), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/cstubs/cstubs_generate_ml.mli", 27, 979, 979), ("src/cstubs/cstubs_generate_ml.mli", 28, 1054, 1111), 0), 0, Tag1 ("Cstubs_generate_ml", 4)), 0)], "Cstubs_generate_ml", [("Cstubs_generate_ml", ("\007e.,?\1495dB=\159\156\250ugV")); ("Unsigned", ("cd\205\030\181\167\151\005!\134;\177\228\249\168+")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Signed", ("R\017i\"\030\024\134f\143\198\192\180>t\175\225")); ("LDouble", ("j\251\140\230^u\251\210\143\236T\207\022\147\011\211")); ("Ctypes_types", ("\140\014\176\188\187lo3aC\196\012\228vn+")); ("Ctypes_static", ("U\030\169\129GB\138P\158'd\012\131\157\202\018")); ("Ctypes_ptr", ("V\021o\161\007\161\245R\242\222:e\151\189\175\207")); ("Ctypes_primitive_types", ("\147\237\001\150\136\017Z\2308\137C\245\023\133\161\158")); ("Ctypes_bigarray", ("\146\0055mmn\243\187gd\185P\208J\254l")); ("Ctypes", ("\201\151\139N\189F\151(\218n\234\177\197RtW")); ("ComplexL", ("\n\230\139\192\213\0226\203\176\242\200\205c\155ag")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Bigarray_compat", ("\150\219\208\188w\237\216\005\r[\152q'\006x\217"))], [(0)])
string -> Format.formatter -> ('a -> 'b) Ctypes.fn -> unit
