val strict : Fault.Policy.t
val default : Fault.Policy.t
val parsing_approx : Fault.Policy.t
val lax : Fault.Policy.t("DEBUG:rule", [(("strict", 302), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Fault")), "Policy"), "t"), 0, (0)), 100000000, 0, -6), 0, (("lib/standard_policies.mli", 3, 26, 26), ("lib/standard_policies.mli", 3, 26, 53), 0), 0, Tag1 ("Standard_policies", 0)), 0); (("default", 303), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Fault")), "Policy"), "t"), 0, (0)), 100000000, 0, -5), 0, (("lib/standard_policies.mli", 4, 54, 54), ("lib/standard_policies.mli", 4, 54, 82), 0), 0, Tag1 ("Standard_policies", 1)), 0); (("parsing_approx", 304), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Fault")), "Policy"), "t"), 0, (0)), 100000000, 0, -4), 0, (("lib/standard_policies.mli", 5, 83, 83), ("lib/standard_policies.mli", 5, 83, 118), 0), 0, Tag1 ("Standard_policies", 2)), 0); (("lax", 305), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Fault")), "Policy"), "t"), 0, (0)), 100000000, 0, -3), 0, (("lib/standard_policies.mli", 6, 119, 119), ("lib/standard_policies.mli", 6, 119, 143), 0), 0, Tag1 ("Standard_policies", 3)), 0); (("quiet", 306), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Fault")), "Policy"), "t"), 0, (0)), 100000000, 0, -2), 0, (("lib/standard_policies.mli", 7, 144, 144), ("lib/standard_policies.mli", 7, 144, 170), 0), 0, Tag1 ("Standard_policies", 4)), 0)], "Standard_policies", [("Standard_policies", ("u\228\012\194/\178\030\146U\253\233\202\178N\207'")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Fault", ("\232\144\144(K\139\181-h!\017\212@?\127\199")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val quiet : Fault.Policy.t
