val set_find_pkg_dir : (string -> string option) -> unit
val find_pkg_dir : string -> string option
("DEBUG:rule", [(("set_find_pkg_dir", 339), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -18), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -17)], (0)), 100000000, 0, -16), 0), 100000000, 0, -15), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("compiler/lib/findlib.mli", 19, 832, 832), ("compiler/lib/findlib.mli", 19, 832, 888), 0), 0, Tag1 ("Js_of_ocaml_compiler__Findlib", 0)), 0); (("find_pkg_dir", 340), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -12), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11)], (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("compiler/lib/findlib.mli", 21, 890, 890), ("compiler/lib/findlib.mli", 21, 890, 932), 0), 0, Tag1 ("Js_of_ocaml_compiler__Findlib", 1)), 0); (("find", 341), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8)], (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5)], (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("compiler/lib/findlib.mli", 23, 934, 934), ("compiler/lib/findlib.mli", 23, 934, 983), 0), 0, Tag1 ("Js_of_ocaml_compiler__Findlib", 2)), 0)], "Js_of_ocaml_compiler__Findlib", [("Js_of_ocaml_compiler__Findlib", ("\168\"\249\165\025\206\151\152\204\254\251\2423\180qu")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Js_of_ocaml_compiler", ("\140\150\022\231\129$!^\139\156\170\236r\184~q")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val find : string list -> string -> string option
