type path = Transforms.answer
type query = path Transforms.query_result
type module_like
type m2l
type state_diff
type path_in_context = {
  loc : Uloc.t;
  edge : Deps.Edge.t option;
  level : Module.level;
  seed : Id.seed;
  ctx : state_diff;
  path : Paths.Simple.t;
  within : Module.signature option;
}
val pp : path_in_context Pp.t
val pp_ml : module_like Pp.t
val path : query -> path
val abstract : Id.seed -> module_like
val apply :
  Transforms.param -> Uloc.t -> f:module_like -> x:module_like -> module_like
val unpacked : module_like
val fn : f:module_like -> x:module_like Module.Arg.t option -> module_like
val ident : path -> module_like
val str : m2l -> module_like
val ext : Transforms.param -> Uloc.t -> string -> unit
val m_with : Paths.Simple.set -> module_like -> module_like
val empty : module_like
val signature : module_like -> Module.signature option
val with_module :
  delete:bool ->
  lhs:Paths.S.t -> rhs:module_like -> module_like -> module_like
val with_module_type :
  delete:bool ->
  lhs:Paths.S.t -> rhs:module_like -> module_like -> module_like
val m2l_add : state_diff -> m2l -> m2l
val m2l_init : m2l
val final : m2l -> Module.Sig.t
val bind_rec_add : Name.t option -> module_like -> state_diff -> state_diff
val bind_rec_init : state_diff
val included :
  Transforms.param ->
  Uloc.t -> Id.seed -> Module.level -> module_like -> state_diff
val bind : Name.t option -> module_like -> state_diff
val bind_sig : Name.t option -> module_like -> state_diff
val opened : Transforms.param -> loc:Uloc.t -> module_like -> state_diff
val empty_diff : state_diff
module type state =
  sig
    type state
    type env
    val resolve :
      Transforms.param -> state -> path_in_context -> (query, unit) result
    val merge : state -> state_diff -> state
    val bind_arg : state -> module_like Module.Arg.t -> state
    val is_alias : Transforms.param -> state -> Paths.Simple.t -> bool
    val restart : state -> state_diff -> state
    val bind_alias : state -> Name.t option -> Paths.Simple.t -> state_diff
    val diff : state -> state_diff
    val open_path :
      param:Transforms.param -> loc:Uloc.t -> state -> path -> state
    val from_env : ?diff:state_diff -> env -> state
    val rec_approximate : state -> 'a M2l.bind list -> state
    val rec_patch : Summary.t -> state_diff -> state_diff
    val peek : state_diff -> Summary.t
  end
module State :
  functor (Env : Stage.envt) ->
    sig
      type state
      type env = Env.t
      val resolve :
        Transforms.param -> state -> path_in_context -> (query, unit) result
      val merge : state -> state_diff -> state
      val bind_arg : state -> module_like Module.Arg.t -> state
      val is_alias : Transforms.param -> state -> Paths.Simple.t -> bool
      val restart : state -> state_diff -> state
      val bind_alias : state -> Name.t option -> Paths.Simple.t -> state_diff
      val diff : state -> state_diff
      val open_path :
        param:Transforms.param -> loc:Uloc.t -> state -> path -> state
      val from_env : ?diff:state_diff -> env -> state
      val rec_approximate : state -> 'a M2l.bind list -> state
      val rec_patch : Summary.t -> state_diff -> state_diff
      val peek : state_diff -> Summary.t("DEBUG:rule", [Tag1 (("path", 579), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Transforms")), "answer"), 0, (0)), 100000000, 0, -130)), 0, 0, 0, 0, (("lib/zipper_skeleton.mli", 1, 0, 0), ("lib/zipper_skeleton.mli", 1, 0, 29), 0), 0, 0, 0, Tag1 ("Zipper_skeleton", 0)), 1, 0); Tag1 (("query", 580), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Transforms")), "query_result"), [(Tag3 ((("path", 579)), 0, (0)), 100000000, 0, -129)], (0)), 100000000, 0, -128)), 0, 0, 0, 0, (("lib/zipper_skeleton.mli", 2, 30, 30), ("lib/zipper_skeleton.mli", 2, 30, 71), 0), 0, 0, 0, Tag1 ("Zipper_skeleton", 1)), 1, 0); Tag1 (("module_like", 581), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_skeleton.mli", 4, 73, 73), ("lib/zipper_skeleton.mli", 4, 73, 89), 0), 0, 0, 0, Tag1 ("Zipper_skeleton", 2)), 1, 0); Tag1 (("m2l", 582), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_skeleton.mli", 5, 90, 90), ("lib/zipper_skeleton.mli", 5, 90, 98), 0), 0, 0, 0, Tag1 ("Zipper_skeleton", 3)), 1, 0); Tag1 (("state_diff", 583), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_skeleton.mli", 6, 99, 99), ("lib/zipper_skeleton.mli", 6, 99, 114), 0), 0, 0, 0, Tag1 ("Zipper_skeleton", 4)), 1, 0); Tag1 (("path_in_context", 584), (0, 0, [[(("loc", 289), 0, (Tag3 (Tag1 ((Tag2 ("Uloc")), "t"), 0, (0)), 100000000, 0, -119), (("lib/zipper_skeleton.mli", 9, 141, 143), ("lib/zipper_skeleton.mli", 9, 141, 156), 0), 0, Tag1 ("Zipper_skeleton", 8)); (("edge", 312), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Deps")), "Edge"), "t"), 0, (0)), 100000000, 0, -121)], (0)), 100000000, 0, -120), (("lib/zipper_skeleton.mli", 10, 157, 159), ("lib/zipper_skeleton.mli", 10, 157, 185), 0), 0, Tag1 ("Zipper_skeleton", 9)); (("level", 356), 0, (Tag3 (Tag1 ((Tag2 ("Module")), "level"), 0, (0)), 100000000, 0, -122), (("lib/zipper_skeleton.mli", 11, 186, 188), ("lib/zipper_skeleton.mli", 11, 186, 209), 0), 0, Tag1 ("Zipper_skeleton", 10)); (("seed", 365), 0, (Tag3 (Tag1 ((Tag2 ("Id")), "seed"), 0, (0)), 100000000, 0, -123), (("lib/zipper_skeleton.mli", 12, 210, 212), ("lib/zipper_skeleton.mli", 12, 210, 226), 0), 0, Tag1 ("Zipper_skeleton", 11)); (("ctx", 366), 0, (Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -124), (("lib/zipper_skeleton.mli", 13, 227, 229), ("lib/zipper_skeleton.mli", 13, 227, 246), 0), 0, Tag1 ("Zipper_skeleton", 12)); (("path", 387), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "Simple"), "t"), 0, (0)), 100000000, 0, -125), (("lib/zipper_skeleton.mli", 14, 247, 249), ("lib/zipper_skeleton.mli", 14, 247, 271), 0), 0, Tag1 ("Zipper_skeleton", 13)); (("within", 388), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Module")), "signature"), 0, (0)), 100000000, 0, -127)], (0)), 100000000, 0, -126), (("lib/zipper_skeleton.mli", 15, 272, 274), ("lib/zipper_skeleton.mli", 15, 272, 306), 0), 0, Tag1 ("Zipper_skeleton", 14))]], 1, 0, 0, 0, 0, 0, (("lib/zipper_skeleton.mli", 8, 116, 116), ("lib/zipper_skeleton.mli", 16, 307, 308), 0), 0, 0, 0, Tag1 ("Zipper_skeleton", 5)), 1, 0); (("pp", 585), ((Tag3 (Tag1 ((Tag2 ("Pp")), "t"), [(Tag3 ((("path_in_context", 584)), 0, (0)), 100000000, 0, -118)], (0)), 100000000, 0, -117), 0, (("lib/zipper_skeleton.mli", 18, 310, 310), ("lib/zipper_skeleton.mli", 18, 310, 338), 0), 0, Tag1 ("Zipper_skeleton", 15)), 0); (("pp_ml", 586), ((Tag3 (Tag1 ((Tag2 ("Pp")), "t"), [(Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -116)], (0)), 100000000, 0, -115), 0, (("lib/zipper_skeleton.mli", 19, 339, 339), ("lib/zipper_skeleton.mli", 19, 339, 366), 0), 0, Tag1 ("Zipper_skeleton", 16)), 0); (("path", 587), ((Tag1 (0, (Tag3 ((("query", 580)), 0, (0)), 100000000, 0, -114), (Tag3 ((("path", 579)), 0, (0)), 100000000, 0, -113), 0), 100000000, 0, -112), 0, (("lib/zipper_skeleton.mli", 21, 368, 368), ("lib/zipper_skeleton.mli", 21, 368, 391), 0), 0, Tag1 ("Zipper_skeleton", 17)), 0); (("abstract", 588), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Id")), "seed"), 0, (0)), 100000000, 0, -111), (Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -110), 0), 100000000, 0, -109), 0, (("lib/zipper_skeleton.mli", 24, 412, 412), ("lib/zipper_skeleton.mli", 24, 412, 449), 0), 0, Tag1 ("Zipper_skeleton", 18)), 0); (("apply", 589), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Transforms")), "param"), 0, (0)), 100000000, 0, -108), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Uloc")), "t"), 0, (0)), 100000000, 0, -107), (Tag1 (("f"), (Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -106), (Tag1 (("x"), (Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -105), (Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -104), 0), 100000000, 0, -103), 0), 100000000, 0, -102), 0), 100000000, 0, -101), 0), 100000000, 0, -100), 0, (("lib/zipper_skeleton.mli", 25, 450, 450), ("lib/zipper_skeleton.mli", 25, 450, 538), 0), 0, Tag1 ("Zipper_skeleton", 19)), 0); (("unpacked", 590), ((Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -99), 0, (("lib/zipper_skeleton.mli", 26, 539, 539), ("lib/zipper_skeleton.mli", 26, 539, 565), 0), 0, Tag1 ("Zipper_skeleton", 20)), 0); (("fn", 591), ((Tag1 (("f"), (Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -98), (Tag1 (("x"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Module")), "Arg"), "t"), [(Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -97)], (0)), 100000000, 0, -96)], (0)), 100000000, 0, -95), (Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -94), 0), 100000000, 0, -93), 0), 100000000, 0, -92), 0, (("lib/zipper_skeleton.mli", 27, 566, 566), ("lib/zipper_skeleton.mli", 27, 566, 640), 0), 0, Tag1 ("Zipper_skeleton", 21)), 0); (("ident", 592), ((Tag1 (0, (Tag3 ((("path", 579)), 0, (0)), 100000000, 0, -91), (Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -90), 0), 100000000, 0, -89), 0, (("lib/zipper_skeleton.mli", 28, 641, 641), ("lib/zipper_skeleton.mli", 28, 641, 672), 0), 0, Tag1 ("Zipper_skeleton", 22)), 0); (("str", 593), ((Tag1 (0, (Tag3 ((("m2l", 582)), 0, (0)), 100000000, 0, -88), (Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("lib/zipper_skeleton.mli", 29, 673, 673), ("lib/zipper_skeleton.mli", 29, 673, 701), 0), 0, Tag1 ("Zipper_skeleton", 23)), 0); (("ext", 594), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Transforms")), "param"), 0, (0)), 100000000, 0, -85), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Uloc")), "t"), 0, (0)), 100000000, 0, -84), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -83), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -82), 0), 100000000, 0, -81), 0), 100000000, 0, -80), 0), 100000000, 0, -79), 0, (("lib/zipper_skeleton.mli", 30, 702, 702), ("lib/zipper_skeleton.mli", 30, 702, 756), 0), 0, Tag1 ("Zipper_skeleton", 24)), 0); (("m_with", 595), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "Simple"), "set"), 0, (0)), 100000000, 0, -78), (Tag1 (0, (Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -77), (Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -76), 0), 100000000, 0, -75), 0), 100000000, 0, -74), 0, (("lib/zipper_skeleton.mli", 31, 757, 757), ("lib/zipper_skeleton.mli", 31, 757, 816), 0), 0, Tag1 ("Zipper_skeleton", 25)), 0); (("empty", 596), ((Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -73), 0, (("lib/zipper_skeleton.mli", 32, 817, 817), ("lib/zipper_skeleton.mli", 32, 817, 839), 0), 0, Tag1 ("Zipper_skeleton", 26)), 0); (("signature", 597), ((Tag1 (0, (Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -72), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Module")), "signature"), 0, (0)), 100000000, 0, -71)], (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0, (("lib/zipper_skeleton.mli", 34, 841, 841), ("lib/zipper_skeleton.mli", 34, 841, 894), 0), 0, Tag1 ("Zipper_skeleton", 27)), 0); (("with_module", 598), ((Tag1 (("delete"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -68), (Tag1 (("lhs"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "S"), "t"), 0, (0)), 100000000, 0, -67), (Tag1 (("rhs"), (Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -66), (Tag1 (0, (Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -65), (Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -64), 0), 100000000, 0, -63), 0), 100000000, 0, -62), 0), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("lib/zipper_skeleton.mli", 37, 919, 919), ("lib/zipper_skeleton.mli", 37, 919, 1013), 0), 0, Tag1 ("Zipper_skeleton", 28)), 0); (("with_module_type", 599), ((Tag1 (("delete"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -59), (Tag1 (("lhs"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "S"), "t"), 0, (0)), 100000000, 0, -58), (Tag1 (("rhs"), (Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -57), (Tag1 (0, (Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -56), (Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("lib/zipper_skeleton.mli", 38, 1014, 1014), ("lib/zipper_skeleton.mli", 38, 1014, 1113), 0), 0, Tag1 ("Zipper_skeleton", 29)), 0); (("m2l_add", 600), ((Tag1 (0, (Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 ((("m2l", 582)), 0, (0)), 100000000, 0, -49), (Tag3 ((("m2l", 582)), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("lib/zipper_skeleton.mli", 42, 1127, 1127), ("lib/zipper_skeleton.mli", 42, 1127, 1165), 0), 0, Tag1 ("Zipper_skeleton", 30)), 0); (("m2l_init", 601), ((Tag3 ((("m2l", 582)), 0, (0)), 100000000, 0, -45), 0, (("lib/zipper_skeleton.mli", 43, 1166, 1166), ("lib/zipper_skeleton.mli", 43, 1166, 1184), 0), 0, Tag1 ("Zipper_skeleton", 31)), 0); (("final", 602), ((Tag1 (0, (Tag3 ((("m2l", 582)), 0, (0)), 100000000, 0, -44), (Tag3 (Tag1 (Tag1 ((Tag2 ("Module")), "Sig"), "t"), 0, (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("lib/zipper_skeleton.mli", 44, 1185, 1185), ("lib/zipper_skeleton.mli", 44, 1185, 1215), 0), 0, Tag1 ("Zipper_skeleton", 32)), 0); (("bind_rec_add", 603), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Name")), "t"), 0, (0)), 100000000, 0, -41)], (0)), 100000000, 0, -40), (Tag1 (0, (Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -39), (Tag1 (0, (Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -38), (Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("lib/zipper_skeleton.mli", 47, 1235, 1235), ("lib/zipper_skeleton.mli", 47, 1235, 1310), 0), 0, Tag1 ("Zipper_skeleton", 33)), 0); (("bind_rec_init", 604), ((Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -33), 0, (("lib/zipper_skeleton.mli", 48, 1311, 1311), ("lib/zipper_skeleton.mli", 48, 1311, 1341), 0), 0, Tag1 ("Zipper_skeleton", 34)), 0); (("included", 605), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Transforms")), "param"), 0, (0)), 100000000, 0, -32), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Uloc")), "t"), 0, (0)), 100000000, 0, -31), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Id")), "seed"), 0, (0)), 100000000, 0, -30), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Module")), "level"), 0, (0)), 100000000, 0, -29), (Tag1 (0, (Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -28), (Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -27), 0), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("lib/zipper_skeleton.mli", 51, 1355, 1355), ("lib/zipper_skeleton.mli", 52, 1397, 1454), 0), 0, Tag1 ("Zipper_skeleton", 35)), 0); (("bind", 606), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Name")), "t"), 0, (0)), 100000000, 0, -21)], (0)), 100000000, 0, -20), (Tag1 (0, (Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -19), (Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("lib/zipper_skeleton.mli", 53, 1455, 1455), ("lib/zipper_skeleton.mli", 53, 1455, 1508), 0), 0, Tag1 ("Zipper_skeleton", 36)), 0); (("bind_sig", 607), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Name")), "t"), 0, (0)), 100000000, 0, -15)], (0)), 100000000, 0, -14), (Tag1 (0, (Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -13), (Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("lib/zipper_skeleton.mli", 54, 1509, 1509), ("lib/zipper_skeleton.mli", 54, 1509, 1566), 0), 0, Tag1 ("Zipper_skeleton", 37)), 0); (("opened", 608), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Transforms")), "param"), 0, (0)), 100000000, 0, -9), (Tag1 (("loc"), (Tag3 (Tag1 ((Tag2 ("Uloc")), "t"), 0, (0)), 100000000, 0, -8), (Tag1 (0, (Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -7), (Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0, (("lib/zipper_skeleton.mli", 55, 1567, 1567), ("lib/zipper_skeleton.mli", 55, 1567, 1639), 0), 0, Tag1 ("Zipper_skeleton", 38)), 0); (("empty_diff", 609), ((Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -2), 0, (("lib/zipper_skeleton.mli", 56, 1640, 1640), ("lib/zipper_skeleton.mli", 56, 1640, 1666), 0), 0, Tag1 ("Zipper_skeleton", 39)), 0); Tag4 (("state", 610), ((Tag1 ([Tag1 (("state", 613), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_skeleton.mli", 59, 1692, 1694), ("lib/zipper_skeleton.mli", 59, 1692, 1704), 0), 0, 0, 0, Tag1 ("Zipper_skeleton", 40)), 1, 0); Tag1 (("env", 614), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_skeleton.mli", 60, 1705, 1707), ("lib/zipper_skeleton.mli", 60, 1705, 1715), 0), 0, 0, 0, Tag1 ("Zipper_skeleton", 41)), 1, 0); (("resolve", 615), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Transforms")), "param"), 0, (0)), 100000000, 0, -203), (Tag1 (0, (Tag3 ((("state", 613)), 0, (0)), 100000000, 0, -202), (Tag1 (0, (Tag3 ((("path_in_context", 584)), 0, (0)), 100000000, 0, -201), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("query", 580)), 0, (0)), 100000000, 0, -199); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -200)], (0)), 100000000, 0, -198), 0), 100000000, 0, -197), 0), 100000000, 0, -196), 0), 100000000, 0, -195), 0, (("lib/zipper_skeleton.mli", 61, 1716, 1718), ("lib/zipper_skeleton.mli", 62, 1732, 1802), 0), 0, Tag1 ("Zipper_skeleton", 42)), 0); (("merge", 616), ((Tag1 (0, (Tag3 ((("state", 613)), 0, (0)), 100000000, 0, -194), (Tag1 (0, (Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -193), (Tag3 ((("state", 613)), 0, (0)), 100000000, 0, -192), 0), 100000000, 0, -191), 0), 100000000, 0, -190), 0, (("lib/zipper_skeleton.mli", 63, 1803, 1805), ("lib/zipper_skeleton.mli", 63, 1803, 1845), 0), 0, Tag1 ("Zipper_skeleton", 43)), 0); (("bind_arg", 617), ((Tag1 (0, (Tag3 ((("state", 613)), 0, (0)), 100000000, 0, -189), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Module")), "Arg"), "t"), [(Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -188)], (0)), 100000000, 0, -187), (Tag3 ((("state", 613)), 0, (0)), 100000000, 0, -186), 0), 100000000, 0, -185), 0), 100000000, 0, -184), 0, (("lib/zipper_skeleton.mli", 64, 1846, 1848), ("lib/zipper_skeleton.mli", 64, 1846, 1905), 0), 0, Tag1 ("Zipper_skeleton", 44)), 0); (("is_alias", 618), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Transforms")), "param"), 0, (0)), 100000000, 0, -183), (Tag1 (0, (Tag3 ((("state", 613)), 0, (0)), 100000000, 0, -182), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "Simple"), "t"), 0, (0)), 100000000, 0, -181), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -180), 0), 100000000, 0, -179), 0), 100000000, 0, -178), 0), 100000000, 0, -177), 0, (("lib/zipper_skeleton.mli", 65, 1906, 1908), ("lib/zipper_skeleton.mli", 65, 1906, 1974), 0), 0, Tag1 ("Zipper_skeleton", 45)), 0); (("restart", 619), ((Tag1 (0, (Tag3 ((("state", 613)), 0, (0)), 100000000, 0, -176), (Tag1 (0, (Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -175), (Tag3 ((("state", 613)), 0, (0)), 100000000, 0, -174), 0), 100000000, 0, -173), 0), 100000000, 0, -172), 0, (("lib/zipper_skeleton.mli", 66, 1975, 1977), ("lib/zipper_skeleton.mli", 66, 1975, 2019), 0), 0, Tag1 ("Zipper_skeleton", 46)), 0); (("bind_alias", 620), ((Tag1 (0, (Tag3 ((("state", 613)), 0, (0)), 100000000, 0, -171), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Name")), "t"), 0, (0)), 100000000, 0, -170)], (0)), 100000000, 0, -169), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "Simple"), "t"), 0, (0)), 100000000, 0, -168), (Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -167), 0), 100000000, 0, -166), 0), 100000000, 0, -165), 0), 100000000, 0, -164), 0, (("lib/zipper_skeleton.mli", 67, 2020, 2022), ("lib/zipper_skeleton.mli", 67, 2020, 2093), 0), 0, Tag1 ("Zipper_skeleton", 47)), 0); (("diff", 621), ((Tag1 (0, (Tag3 ((("state", 613)), 0, (0)), 100000000, 0, -163), (Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -162), 0), 100000000, 0, -161), 0, (("lib/zipper_skeleton.mli", 68, 2094, 2096), ("lib/zipper_skeleton.mli", 68, 2094, 2126), 0), 0, Tag1 ("Zipper_skeleton", 48)), 0); (("open_path", 622), ((Tag1 (("param"), (Tag3 (Tag1 ((Tag2 ("Transforms")), "param"), 0, (0)), 100000000, 0, -160), (Tag1 (("loc"), (Tag3 (Tag1 ((Tag2 ("Uloc")), "t"), 0, (0)), 100000000, 0, -159), (Tag1 (0, (Tag3 ((("state", 613)), 0, (0)), 100000000, 0, -158), (Tag1 (0, (Tag3 ((("path", 579)), 0, (0)), 100000000, 0, -157), (Tag3 ((("state", 613)), 0, (0)), 100000000, 0, -156), 0), 100000000, 0, -155), 0), 100000000, 0, -154), 0), 100000000, 0, -153), 0), 100000000, 0, -152), 0, (("lib/zipper_skeleton.mli", 69, 2127, 2129), ("lib/zipper_skeleton.mli", 70, 2145, 2211), 0), 0, Tag1 ("Zipper_skeleton", 49)), 0); (("from_env", 623), ((Tag1 (Tag1 ("diff"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -151)], (0)), 100000000, 0, -150), (Tag1 (0, (Tag3 ((("env", 614)), 0, (0)), 100000000, 0, -149), (Tag3 ((("state", 613)), 0, (0)), 100000000, 0, -148), 0), 100000000, 0, -147), 0), 100000000, 0, -146), 0, (("lib/zipper_skeleton.mli", 71, 2212, 2214), ("lib/zipper_skeleton.mli", 71, 2212, 2260), 0), 0, Tag1 ("Zipper_skeleton", 50)), 0); (("rec_approximate", 624), ((Tag1 (0, (Tag3 ((("state", 613)), 0, (0)), 100000000, 0, -145), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "bind"), [((0), 100000000, 0, -144)], (0)), 100000000, 0, -143)], (0)), 100000000, 0, -142), (Tag3 ((("state", 613)), 0, (0)), 100000000, 0, -141), 0), 100000000, 0, -140), 0), 100000000, 0, -139), 0, (("lib/zipper_skeleton.mli", 72, 2261, 2263), ("lib/zipper_skeleton.mli", 72, 2261, 2317), 0), 0, Tag1 ("Zipper_skeleton", 54)), 0); (("rec_patch", 625), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Summary")), "t"), 0, (0)), 100000000, 0, -138), (Tag1 (0, (Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -137), (Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -136), 0), 100000000, 0, -135), 0), 100000000, 0, -134), 0, (("lib/zipper_skeleton.mli", 74, 2319, 2321), ("lib/zipper_skeleton.mli", 74, 2319, 2373), 0), 0, Tag1 ("Zipper_skeleton", 55)), 0); (("peek", 626), ((Tag1 (0, (Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -133), (Tag3 (Tag1 ((Tag2 ("Summary")), "t"), 0, (0)), 100000000, 0, -132), 0), 100000000, 0, -131), 0, (("lib/zipper_skeleton.mli", 77, 2399, 2401), ("lib/zipper_skeleton.mli", 77, 2399, 2434), 0), 0, Tag1 ("Zipper_skeleton", 56)), 0)])), 0, (("lib/zipper_skeleton.mli", 58, 1668, 1668), ("lib/zipper_skeleton.mli", 78, 2435, 2438), 0), Tag1 ("Zipper_skeleton", 57)), 0); Tag3 (("State", 611), 0, (Tag2 (((("Env", 612)), (Tag1 ((Tag2 ("Stage")), "envt"))), Tag1 ([Tag1 (("state", 627), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/zipper_skeleton.mli", 59, 1692, 1694), ("lib/zipper_skeleton.mli", 59, 1692, 1704), 0), 0, 0, 0, Tag1 ("Zipper_skeleton", 40)), 1, 0); Tag1 (("env", 628), (0, 0, 0, 1, ((Tag3 (Tag1 ((("Env", 612)), "t"), 0, (0)), 100000000, 0, -277)), 0, 0, 0, 0, (("lib/zipper_skeleton.mli", 80, 2440, 2481), ("lib/zipper_skeleton.mli", 80, 2440, 2497), 0), 0, 0, 0, Tag1 ("Zipper_skeleton", 59)), 1, 0); (("resolve", 629), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Transforms")), "param"), 0, (0)), 100000000, 0, -276), (Tag1 (0, (Tag3 ((("state", 627)), 0, (0)), 100000000, 0, -275), (Tag1 (0, (Tag3 ((("path_in_context", 584)), 0, (0)), 100000000, 0, -274), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("query", 580)), 0, (0)), 100000000, 0, -272); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -273)], (0)), 100000000, 0, -271), 0), 100000000, 0, -270), 0), 100000000, 0, -269), 0), 100000000, 0, -268), 0, (("lib/zipper_skeleton.mli", 61, 1716, 1718), ("lib/zipper_skeleton.mli", 62, 1732, 1802), 0), 0, Tag1 ("Zipper_skeleton", 42)), 0); (("merge", 630), ((Tag1 (0, (Tag3 ((("state", 627)), 0, (0)), 100000000, 0, -267), (Tag1 (0, (Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -266), (Tag3 ((("state", 627)), 0, (0)), 100000000, 0, -265), 0), 100000000, 0, -264), 0), 100000000, 0, -263), 0, (("lib/zipper_skeleton.mli", 63, 1803, 1805), ("lib/zipper_skeleton.mli", 63, 1803, 1845), 0), 0, Tag1 ("Zipper_skeleton", 43)), 0); (("bind_arg", 631), ((Tag1 (0, (Tag3 ((("state", 627)), 0, (0)), 100000000, 0, -262), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Module")), "Arg"), "t"), [(Tag3 ((("module_like", 581)), 0, (0)), 100000000, 0, -261)], (0)), 100000000, 0, -260), (Tag3 ((("state", 627)), 0, (0)), 100000000, 0, -259), 0), 100000000, 0, -258), 0), 100000000, 0, -257), 0, (("lib/zipper_skeleton.mli", 64, 1846, 1848), ("lib/zipper_skeleton.mli", 64, 1846, 1905), 0), 0, Tag1 ("Zipper_skeleton", 44)), 0); (("is_alias", 632), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Transforms")), "param"), 0, (0)), 100000000, 0, -256), (Tag1 (0, (Tag3 ((("state", 627)), 0, (0)), 100000000, 0, -255), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "Simple"), "t"), 0, (0)), 100000000, 0, -254), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -253), 0), 100000000, 0, -252), 0), 100000000, 0, -251), 0), 100000000, 0, -250), 0, (("lib/zipper_skeleton.mli", 65, 1906, 1908), ("lib/zipper_skeleton.mli", 65, 1906, 1974), 0), 0, Tag1 ("Zipper_skeleton", 45)), 0); (("restart", 633), ((Tag1 (0, (Tag3 ((("state", 627)), 0, (0)), 100000000, 0, -249), (Tag1 (0, (Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -248), (Tag3 ((("state", 627)), 0, (0)), 100000000, 0, -247), 0), 100000000, 0, -246), 0), 100000000, 0, -245), 0, (("lib/zipper_skeleton.mli", 66, 1975, 1977), ("lib/zipper_skeleton.mli", 66, 1975, 2019), 0), 0, Tag1 ("Zipper_skeleton", 46)), 0); (("bind_alias", 634), ((Tag1 (0, (Tag3 ((("state", 627)), 0, (0)), 100000000, 0, -244), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Name")), "t"), 0, (0)), 100000000, 0, -243)], (0)), 100000000, 0, -242), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "Simple"), "t"), 0, (0)), 100000000, 0, -241), (Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -240), 0), 100000000, 0, -239), 0), 100000000, 0, -238), 0), 100000000, 0, -237), 0, (("lib/zipper_skeleton.mli", 67, 2020, 2022), ("lib/zipper_skeleton.mli", 67, 2020, 2093), 0), 0, Tag1 ("Zipper_skeleton", 47)), 0); (("diff", 635), ((Tag1 (0, (Tag3 ((("state", 627)), 0, (0)), 100000000, 0, -236), (Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -235), 0), 100000000, 0, -234), 0, (("lib/zipper_skeleton.mli", 68, 2094, 2096), ("lib/zipper_skeleton.mli", 68, 2094, 2126), 0), 0, Tag1 ("Zipper_skeleton", 48)), 0); (("open_path", 636), ((Tag1 (("param"), (Tag3 (Tag1 ((Tag2 ("Transforms")), "param"), 0, (0)), 100000000, 0, -233), (Tag1 (("loc"), (Tag3 (Tag1 ((Tag2 ("Uloc")), "t"), 0, (0)), 100000000, 0, -232), (Tag1 (0, (Tag3 ((("state", 627)), 0, (0)), 100000000, 0, -231), (Tag1 (0, (Tag3 ((("path", 579)), 0, (0)), 100000000, 0, -230), (Tag3 ((("state", 627)), 0, (0)), 100000000, 0, -229), 0), 100000000, 0, -228), 0), 100000000, 0, -227), 0), 100000000, 0, -226), 0), 100000000, 0, -225), 0, (("lib/zipper_skeleton.mli", 69, 2127, 2129), ("lib/zipper_skeleton.mli", 70, 2145, 2211), 0), 0, Tag1 ("Zipper_skeleton", 49)), 0); (("from_env", 637), ((Tag1 (Tag1 ("diff"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -224)], (0)), 100000000, 0, -223), (Tag1 (0, (Tag3 ((("env", 628)), 0, (0)), 100000000, 0, -222), (Tag3 ((("state", 627)), 0, (0)), 100000000, 0, -221), 0), 100000000, 0, -220), 0), 100000000, 0, -219), 0, (("lib/zipper_skeleton.mli", 71, 2212, 2214), ("lib/zipper_skeleton.mli", 71, 2212, 2260), 0), 0, Tag1 ("Zipper_skeleton", 50)), 0); (("rec_approximate", 638), ((Tag1 (0, (Tag3 ((("state", 627)), 0, (0)), 100000000, 0, -218), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("M2l")), "bind"), [((0), 100000000, 0, -217)], (0)), 100000000, 0, -216)], (0)), 100000000, 0, -215), (Tag3 ((("state", 627)), 0, (0)), 100000000, 0, -214), 0), 100000000, 0, -213), 0), 100000000, 0, -212), 0, (("lib/zipper_skeleton.mli", 72, 2261, 2263), ("lib/zipper_skeleton.mli", 72, 2261, 2317), 0), 0, Tag1 ("Zipper_skeleton", 54)), 0); (("rec_patch", 639), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Summary")), "t"), 0, (0)), 100000000, 0, -211), (Tag1 (0, (Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -210), (Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -209), 0), 100000000, 0, -208), 0), 100000000, 0, -207), 0, (("lib/zipper_skeleton.mli", 74, 2319, 2321), ("lib/zipper_skeleton.mli", 74, 2319, 2373), 0), 0, Tag1 ("Zipper_skeleton", 55)), 0); (("peek", 640), ((Tag1 (0, (Tag3 ((("state_diff", 583)), 0, (0)), 100000000, 0, -206), (Tag3 (Tag1 ((Tag2 ("Summary")), "t"), 0, (0)), 100000000, 0, -205), 0), 100000000, 0, -204), 0, (("lib/zipper_skeleton.mli", 77, 2399, 2401), ("lib/zipper_skeleton.mli", 77, 2399, 2434), 0), 0, Tag1 ("Zipper_skeleton", 56)), 0)])), 0, (("lib/zipper_skeleton.mli", 80, 2440, 2440), ("lib/zipper_skeleton.mli", 80, 2440, 2497), 0), Tag1 ("Zipper_skeleton", 60)), 0, 0)], "Zipper_skeleton", [("Zipper_skeleton", (")\231\023^\251\225On\214\161\199\019\231\219\240\148")); ("Unitname", ("\155n\201\211\249\229\028$\220J\172\018<\249\171\158")); ("Uloc", ("\172\208h 6@\178[\156\249\206\172%\133\167\239")); ("Transforms", ("\247\177\132M&\202\192\164\018Ng6Wu\007\018")); ("Support", ("YA;\029\006a\255\202R\137\181\133\184\209)\005")); ("Summary", ("\243\022s.\187>\205\012\161)\1369wh\247p")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stage", ("\224\018\196\1757\168\209wr\235\232\015z\144\206V")); ("Schematic", ("\180\179\011\178\017I\241^\235\149h\161k\b\209\142")); ("Pp", ("\167zCQ\134\167\215\2517\247\158\219\250\223.\197")); ("Pkg", ("SneaP\023\210\210\240\218\128bA\te\239")); ("Paths", ("\000\152\242H\139l\222\245\245Ndb\202P^\175")); ("Namespaced", ("%\208\253;3\161W$\236\1838K\195z\1493")); ("Name", ("4? \167\131n\184\000\214\031\017\027\153\002]^")); ("Module", ("2_s\200\188\137\247\158>\168\195\023\195\n\011V")); ("Modname", ("v\160\183\003\212\232\177\007\228-\002\145i\230\255\248")); ("M2l", ("\208\241\201a\199\212\172v;\135t\185\027\196~\029")); ("Loc", ("ax\213\152\006\175?\212%\0014\238\021S\218=")); ("Id", ("w\207`(\179n\181\161\155\252\243\195\006\139NO")); ("Fault", ("\232\144\144(K\139\181-h!\017\212@?\127\199")); ("Deps", ("%\164\252&\165z\218\221\023\182\235\223+\147\145\195")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

    end
