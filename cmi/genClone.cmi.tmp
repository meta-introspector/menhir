type 'a gen = unit -> 'a option
type 'a t = < clone : 'a t; gen : 'a gen >
type 'a clonable = 'a t
type 'a prependable =
    < clone : 'a prependable; gen : 'a gen; prepend : 'a -> unit >
val to_prependable : 'a t -> 'a prependable
val map : ('a -> 'b) -> 'a t -> 'b t
module IO :
  sig
    val with_in :
      ?mode:int -> ?flags:open_flag list -> string -> (char t -> 'a) -> 'a
  end("DEBUG:rule", [Tag1 (("gen", 277), ([((("a")), 100000000, 0, -39)], 1, 0, 1, ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -40), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -39)], (0)), 100000000, 0, -38), 0), 100000000, 0, -37)), [25], [0], 0, 0, (("src/genClone.mli", 12, 362, 362), ("src/genClone.mli", 12, 362, 393), 0), 0, 0, 0, Tag1 ("GenClone", 0)), 1, 0); Tag1 (("t", 278), ([((("a")), 100000000, 0, -34)], 1, 0, 1, ((Tag4 ((Tag5 ("clone", 1, (Tag10 ((Tag3 ((("t", 278)), [((("a")), 100000000, 0, -34)], (0)), 100000000, 0, -33), 0), 100000000, 0, -32), (Tag5 ("gen", 1, (Tag10 ((Tag3 ((("gen", 277)), [((("a")), 100000000, 0, -34)], (0)), 100000000, 0, -36), 0), 100000000, 0, -35), (0, 100000000, 0, -31)), 100000000, 0, 40)), 100000000, 0, -29), (0)), 100000000, 0, -28)), [25], [0], 0, 0, (("src/genClone.mli", 14, 395, 395), ("src/genClone.mli", 17, 520, 521), 0), 0, 0, 0, Tag1 ("GenClone", 1)), 1, 0); Tag1 (("clonable", 279), ([((("a")), 100000000, 0, -27)], 1, 0, 1, ((Tag3 ((("t", 278)), [((("a")), 100000000, 0, -27)], (0)), 100000000, 0, -26)), [25], [0], 0, 0, (("src/genClone.mli", 20, 588, 588), ("src/genClone.mli", 20, 588, 611), 0), 0, 0, 0, Tag1 ("GenClone", 2)), 1, 0); Tag1 (("prependable", 280), ([((("a")), 100000000, 0, -21)], 1, 0, 1, ((Tag4 ((Tag5 ("clone", 1, (Tag10 ((Tag3 ((("prependable", 280)), [((("a")), 100000000, 0, -21)], (0)), 100000000, 0, -23), 0), 100000000, 0, -22), (Tag5 ("gen", 1, (Tag10 ((Tag3 ((("gen", 277)), [((("a")), 100000000, 0, -21)], (0)), 100000000, 0, -25), 0), 100000000, 0, -24), (Tag5 ("prepend", 1, (Tag10 ((Tag1 (0, ((("a")), 100000000, 0, -21), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), (0, 100000000, 0, -17)), 100000000, 0, 42)), 100000000, 0, 43)), 100000000, 0, -14), (0)), 100000000, 0, -13)), [63], [0], 0, 0, (("src/genClone.mli", 25, 664, 664), ("src/genClone.mli", 29, 788, 789), 0), 0, 0, 0, Tag1 ("GenClone", 3)), 1, 0); (("to_prependable", 281), ((Tag1 (0, (Tag3 ((("t", 278)), [((("a")), 100000000, 0, -11)], (0)), 100000000, 0, -12), (Tag3 ((("prependable", 280)), [((("a")), 100000000, 0, -11)], (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("src/genClone.mli", 31, 791, 791), ("src/genClone.mli", 31, 791, 834), 0), 0, Tag1 ("GenClone", 4)), 0); (("map", 282), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -7), ((("b")), 100000000, 0, -5), 0), 100000000, 0, -8), (Tag1 (0, (Tag3 ((("t", 278)), [((("a")), 100000000, 0, -7)], (0)), 100000000, 0, -6), (Tag3 ((("t", 278)), [((("b")), 100000000, 0, -5)], (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/genClone.mli", 35, 853, 853), ("src/genClone.mli", 35, 853, 889), 0), 0, Tag1 ("GenClone", 5)), 0); Tag3 (("IO", 283), 0, (Tag1 ([(("with_in", 284), ((Tag1 (Tag1 ("mode"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -54)], (0)), 100000000, 0, -53), (Tag1 (Tag1 ("flags"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Stdlib")), "open_flag"), 0, (0)), 100000000, 0, -52)], (0)), 100000000, 0, -51)], (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -49), (Tag1 (0, (Tag1 (0, (Tag3 ((("t", 278)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -48)], (0)), 100000000, 0, -47), ((("a")), 100000000, 0, -45), 0), 100000000, 0, -46), ((("a")), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("src/genClone.mli", 66, 1522, 1524), ("src/genClone.mli", 68, 1590, 1614), 0), 0, Tag1 ("GenClone", 6)), 0)]), 0, (("src/genClone.mli", 65, 1506, 1506), ("src/genClone.mli", 77, 2066, 2069), 0), Tag1 ("GenClone", 7)), 0, 0)], "GenClone", [("GenClone", ("H\188{\215\011\146\007\226\018\130\011\169\016\198\022#")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

