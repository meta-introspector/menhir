type 'a writer = {
  size : 'a Bin_prot__.Size.sizer;
  write : 'a Bin_prot__.Write.writer;
}
type 'a reader = {
  read : 'a Bin_prot__.Read.reader;
  vtag_read : (int -> 'a) Bin_prot__.Read.reader;
}
type 'a t = {
  shape : Bin_prot__.Shape.t;
  writer : 'a writer;
  reader : 'a reader;
}
type 'a writer0 = 'a writer
type 'a reader0 = 'a reader
type 'a t0 = 'a t
module S1 :
  sig
    type ('a, 'b) writer = 'a writer0 -> 'b writer0
    type ('a, 'b) reader = 'a reader0 -> 'b reader0
    type ('a, 'b) t = 'a t0 -> 'b t0
  end
module S2 :
  sig
    type ('a, 'b, 'c) writer = 'a writer0 -> ('b, 'c) S1.writer
    type ('a, 'b, 'c) reader = 'a reader0 -> ('b, 'c) S1.reader
    type ('a, 'b, 'c) t = 'a t0 -> ('b, 'c) S1.t
  end
module S3 :
  sig
    type ('a, 'b, 'c, 'd) writer = 'a writer0 -> ('b, 'c, 'd) S2.writer
    type ('a, 'b, 'c, 'd) reader = 'a reader0 -> ('b, 'c, 'd) S2.reader
    type ('a, 'b, 'c, 'd) t = 'a t0 -> ('b, 'c, 'd) S2.t
  end
val bin_writer_unit : unit writer
val bin_reader_unit : unit reader
val bin_shape_unit : Bin_prot__.Shape.t
val bin_unit : unit t
val bin_writer_bool : bool writer
val bin_reader_bool : bool reader
val bin_shape_bool : Bin_prot__.Shape.t
val bin_bool : bool t
val bin_writer_string : string writer
val bin_reader_string : string reader
val bin_shape_string : Bin_prot__.Shape.t
val bin_string : string t
val bin_writer_bytes : bytes writer
val bin_reader_bytes : bytes reader
val bin_shape_bytes : Bin_prot__.Shape.t
val bin_bytes : bytes t
val bin_writer_char : char writer
val bin_reader_char : char reader
val bin_shape_char : Bin_prot__.Shape.t
val bin_char : char t
val bin_writer_int : int writer
val bin_reader_int : int reader
val bin_shape_int : Bin_prot__.Shape.t
val bin_int : int t
val bin_writer_float : float writer
val bin_reader_float : float reader
val bin_shape_float : Bin_prot__.Shape.t
val bin_float : float t
val bin_writer_int32 : int32 writer
val bin_reader_int32 : int32 reader
val bin_shape_int32 : Bin_prot__.Shape.t
val bin_int32 : int32 t
val bin_writer_int64 : int64 writer
val bin_reader_int64 : int64 reader
val bin_shape_int64 : Bin_prot__.Shape.t
val bin_int64 : int64 t
val bin_writer_nativeint : nativeint writer
val bin_reader_nativeint : nativeint reader
val bin_shape_nativeint : Bin_prot__.Shape.t
val bin_nativeint : nativeint t
val bin_writer_nat0 : Bin_prot__.Nat0.t writer
val bin_reader_nat0 : Bin_prot__.Nat0.t reader
val bin_shape_nat0 : Bin_prot__.Shape.t
val bin_nat0 : Bin_prot__.Nat0.t t
val bin_writer_ref : ('a, 'a ref) S1.writer
val bin_reader_ref : ('a, 'a ref) S1.reader
val bin_shape_ref : Bin_prot__.Shape.t -> Bin_prot__.Shape.t
val bin_ref : ('a, 'a ref) S1.t
val bin_writer_lazy : ('a, 'a lazy_t) S1.writer
val bin_reader_lazy : ('a, 'a lazy_t) S1.reader
val bin_shape_lazy : Bin_prot__.Shape.t -> Bin_prot__.Shape.t
val bin_lazy : ('a, 'a lazy_t) S1.t
val bin_writer_option : ('a, 'a option) S1.writer
val bin_reader_option : ('a, 'a option) S1.reader
val bin_shape_option : Bin_prot__.Shape.t -> Bin_prot__.Shape.t
val bin_option : ('a, 'a option) S1.t
val bin_writer_pair : ('a, 'b, 'a * 'b) S2.writer
val bin_reader_pair : ('a, 'b, 'a * 'b) S2.reader
val bin_pair : ('a, 'b, 'a * 'b) S2.t
val bin_writer_triple : ('a, 'b, 'c, 'a * 'b * 'c) S3.writer
val bin_reader_triple : ('a, 'b, 'c, 'a * 'b * 'c) S3.reader
val bin_triple : ('a, 'b, 'c, 'a * 'b * 'c) S3.t
val bin_writer_list : ('a, 'a list) S1.writer
val bin_reader_list : ('a, 'a list) S1.reader
val bin_shape_list : Bin_prot__.Shape.t -> Bin_prot__.Shape.t
val bin_list : ('a, 'a list) S1.t
val bin_writer_array : ('a, 'a array) S1.writer
val bin_reader_array : ('a, 'a array) S1.reader
val bin_shape_array : Bin_prot__.Shape.t -> Bin_prot__.Shape.t
val bin_array : ('a, 'a array) S1.t
val bin_writer_hashtbl : ('a, 'b, ('a, 'b) Hashtbl.t) S2.writer
val bin_reader_hashtbl : ('a, 'b, ('a, 'b) Hashtbl.t) S2.reader
val bin_shape_hashtbl :
  Bin_prot__.Shape.t -> Bin_prot__.Shape.t -> Bin_prot__.Shape.t
val bin_hashtbl : ('a, 'b, ('a, 'b) Hashtbl.t) S2.t
val bin_writer_float32_vec : Bin_prot__.Common.vec32 writer
val bin_reader_float32_vec : Bin_prot__.Common.vec32 reader
val bin_shape_float32_vec : Bin_prot__.Shape.t
val bin_float32_vec : Bin_prot__.Common.vec32 t
val bin_writer_float64_vec : Bin_prot__.Common.vec64 writer
val bin_reader_float64_vec : Bin_prot__.Common.vec64 reader
val bin_shape_float64_vec : Bin_prot__.Shape.t
val bin_float64_vec : Bin_prot__.Common.vec64 t
val bin_writer_vec : Bin_prot__.Common.vec writer
val bin_reader_vec : Bin_prot__.Common.vec reader
val bin_shape_vec : Bin_prot__.Shape.t
val bin_vec : Bin_prot__.Common.vec t
val bin_writer_float32_mat : Bin_prot__.Common.mat32 writer
val bin_reader_float32_mat : Bin_prot__.Common.mat32 reader
val bin_shape_float32_mat : Bin_prot__.Shape.t
val bin_float32_mat : Bin_prot__.Common.mat32 t
val bin_writer_float64_mat : Bin_prot__.Common.mat64 writer
val bin_reader_float64_mat : Bin_prot__.Common.mat64 reader
val bin_shape_float64_mat : Bin_prot__.Shape.t
val bin_float64_mat : Bin_prot__.Common.mat64 t
val bin_writer_mat : Bin_prot__.Common.mat writer
val bin_reader_mat : Bin_prot__.Common.mat reader
val bin_shape_mat : Bin_prot__.Shape.t
val bin_mat : Bin_prot__.Common.mat t
val bin_writer_bigstring : Bin_prot__.Common.buf writer
val bin_reader_bigstring : Bin_prot__.Common.buf reader
val bin_shape_bigstring : Bin_prot__.Shape.t
val bin_bigstring : Bin_prot__.Common.buf t
val bin_writer_floatarray : floatarray writer
val bin_reader_floatarray : floatarray reader
val bin_shape_floatarray : Bin_prot__.Shape.t
val bin_floatarray : floatarray t
val bin_writer_variant_int : int writer
val bin_reader_variant_int : int reader
val bin_variant_int : int t
val bin_writer_int_8bit : int writer
val bin_reader_int_8bit : int reader
val bin_shape_int_8bit : Bin_prot__.Shape.t
val bin_int_8bit : int t
val bin_writer_int_16bit : int writer
val bin_reader_int_16bit : int reader
val bin_shape_int_16bit : Bin_prot__.Shape.t
val bin_int_16bit : int t
val bin_writer_int_32bit : int writer
val bin_reader_int_32bit : int reader
val bin_shape_int_32bit : Bin_prot__.Shape.t
val bin_int_32bit : int t
val bin_writer_int_64bit : int writer
val bin_reader_int_64bit : int reader
val bin_shape_int_64bit : Bin_prot__.Shape.t
val bin_int_64bit : int t
val bin_writer_int64_bits : int64 writer
val bin_reader_int64_bits : int64 reader
val bin_shape_int64_bits : Bin_prot__.Shape.t
val bin_int64_bits : int64 t
val bin_writer_network16_int : int writer
val bin_reader_network16_int : int reader
val bin_shape_network16_int : Bin_prot__.Shape.t
val bin_network16_int : int t
val bin_writer_network32_int : int writer
val bin_reader_network32_int : int reader
val bin_shape_network32_int : Bin_prot__.Shape.t
val bin_network32_int : int t
val bin_writer_network32_int32 : int32 writer
val bin_reader_network32_int32 : int32 reader
val bin_shape_network32_int32 : Bin_prot__.Shape.t
val bin_network32_int32 : int32 t
val bin_writer_network64_int : int writer
val bin_reader_network64_int : int reader
val bin_shape_network64_int : Bin_prot__.Shape.t
val bin_network64_int : int t
val bin_writer_network64_int64 : int64 writer
val bin_reader_network64_int64 : int64 reader
val bin_shape_network64_int64 : Bin_prot__.Shape.t
val bin_network64_int64 : int64 t
val cnv_writer : ('a -> 'b) -> 'b writer -> 'a writer
val cnv_reader : ('b -> 'a) -> 'b reader -> 'a reader
val cnv :
  (Bin_prot__.Shape.t -> Bin_prot__.Shape.t) ->
  ("DEBUG:rule", [Tag1 (("writer", 946), ([((("a")), 100000000, 0, -358)], 1, [[(("size", 370), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Size"), "sizer"), [((("a")), 100000000, 0, -358)], (0)), 100000000, 0, -357), (("src/type_class.mli", 6, 79, 83), ("src/type_class.mli", 7, 104, 107), 0), 0, Tag1 ("Bin_prot__Type_class", 1)); (("write", 414), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Write"), "writer"), [((("a")), 100000000, 0, -358)], (0)), 100000000, 0, -359), (("src/type_class.mli", 7, 104, 108), ("src/type_class.mli", 7, 104, 131), 0), 0, Tag1 ("Bin_prot__Type_class", 2))]], 1, 0, [46], [0], 0, 0, (("src/type_class.mli", 5, 62, 62), ("src/type_class.mli", 8, 132, 135), 0), 0, 0, 0, Tag1 ("Bin_prot__Type_class", 0)), 1, 0); Tag1 (("reader", 947), ([((("a")), 100000000, 0, -353)], 1, [[(("read", 594), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Read"), "reader"), [((("a")), 100000000, 0, -353)], (0)), 100000000, 0, -352), (("src/type_class.mli", 11, 154, 158), ("src/type_class.mli", 12, 180, 183), 0), 0, Tag1 ("Bin_prot__Type_class", 4)); (("vtag_read", 595), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Read"), "reader"), [(Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -356), ((("a")), 100000000, 0, -353), 0), 100000000, 0, -355)], (0)), 100000000, 0, -354), (("src/type_class.mli", 12, 180, 184), ("src/type_class.mli", 12, 180, 219), 0), 0, Tag1 ("Bin_prot__Type_class", 5))]], 1, 0, [25], [0], 0, 0, (("src/type_class.mli", 10, 137, 137), ("src/type_class.mli", 13, 220, 223), 0), 0, 0, 0, Tag1 ("Bin_prot__Type_class", 3)), 1, 0); Tag1 (("t", 948), ([((("a")), 100000000, 0, -350)], 1, [[(("shape", 665), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -348), (("src/type_class.mli", 16, 237, 241), ("src/type_class.mli", 17, 257, 260), 0), 0, Tag1 ("Bin_prot__Type_class", 7)); (("writer", 666), 0, (Tag3 ((("writer", 946)), [((("a")), 100000000, 0, -350)], (0)), 100000000, 0, -349), (("src/type_class.mli", 17, 257, 261), ("src/type_class.mli", 18, 280, 283), 0), 0, Tag1 ("Bin_prot__Type_class", 8)); (("reader", 667), 0, (Tag3 ((("reader", 947)), [((("a")), 100000000, 0, -350)], (0)), 100000000, 0, -351), (("src/type_class.mli", 18, 280, 284), ("src/type_class.mli", 18, 280, 302), 0), 0, Tag1 ("Bin_prot__Type_class", 9))]], 1, 0, [63], [0], 0, 0, (("src/type_class.mli", 15, 225, 225), ("src/type_class.mli", 19, 303, 306), 0), 0, 0, 0, Tag1 ("Bin_prot__Type_class", 6)), 1, 0); Tag1 (("writer0", 949), ([((("a")), 100000000, 0, -347)], 1, 0, 1, ((Tag3 ((("writer", 946)), [((("a")), 100000000, 0, -347)], (0)), 100000000, 0, -346)), [46], [0], 0, 0, (("src/type_class.mli", 21, 308, 308), ("src/type_class.mli", 21, 308, 335), 0), 0, 0, 0, Tag1 ("Bin_prot__Type_class", 10)), 1, 0); Tag1 (("reader0", 950), ([((("a")), 100000000, 0, -345)], 1, 0, 1, ((Tag3 ((("reader", 947)), [((("a")), 100000000, 0, -345)], (0)), 100000000, 0, -344)), [25], [0], 0, 0, (("src/type_class.mli", 22, 336, 336), ("src/type_class.mli", 22, 336, 363), 0), 0, 0, 0, Tag1 ("Bin_prot__Type_class", 11)), 1, 0); Tag1 (("t0", 951), ([((("a")), 100000000, 0, -343)], 1, 0, 1, ((Tag3 ((("t", 948)), [((("a")), 100000000, 0, -343)], (0)), 100000000, 0, -342)), [63], [0], 0, 0, (("src/type_class.mli", 23, 364, 364), ("src/type_class.mli", 23, 364, 381), 0), 0, 0, 0, Tag1 ("Bin_prot__Type_class", 12)), 1, 0); Tag3 (("S1", 952), 0, (Tag1 ([Tag1 (("writer", 1107), ([((("a")), 100000000, 0, -374); ((("b")), 100000000, 0, -372)], 2, 0, 1, ((Tag1 (0, (Tag3 ((("writer0", 949)), [((("a")), 100000000, 0, -374)], (0)), 100000000, 0, -373), (Tag3 ((("writer0", 949)), [((("b")), 100000000, 0, -372)], (0)), 100000000, 0, -371), 0), 100000000, 0, -370)), [29; 46], [0; 0], 0, 0, (("src/type_class.mli", 26, 399, 401), ("src/type_class.mli", 26, 399, 448), 0), 0, 0, 0, Tag1 ("Bin_prot__Type_class", 13)), 1, 0); Tag1 (("reader", 1108), ([((("a")), 100000000, 0, -369); ((("b")), 100000000, 0, -367)], 2, 0, 1, ((Tag1 (0, (Tag3 ((("reader0", 950)), [((("a")), 100000000, 0, -369)], (0)), 100000000, 0, -368), (Tag3 ((("reader0", 950)), [((("b")), 100000000, 0, -367)], (0)), 100000000, 0, -366), 0), 100000000, 0, -365)), [46; 25], [0; 0], 0, 0, (("src/type_class.mli", 27, 449, 451), ("src/type_class.mli", 27, 449, 498), 0), 0, 0, 0, Tag1 ("Bin_prot__Type_class", 14)), 1, 0); Tag1 (("t", 1109), ([((("a")), 100000000, 0, -364); ((("b")), 100000000, 0, -362)], 2, 0, 1, ((Tag1 (0, (Tag3 ((("t0", 951)), [((("a")), 100000000, 0, -364)], (0)), 100000000, 0, -363), (Tag3 ((("t0", 951)), [((("b")), 100000000, 0, -362)], (0)), 100000000, 0, -361), 0), 100000000, 0, -360)), [63; 63], [0; 0], 0, 0, (("src/type_class.mli", 28, 499, 501), ("src/type_class.mli", 28, 499, 533), 0), 0, 0, 0, Tag1 ("Bin_prot__Type_class", 15)), 1, 0)]), 0, (("src/type_class.mli", 25, 383, 383), ("src/type_class.mli", 29, 534, 537), 0), Tag1 ("Bin_prot__Type_class", 16)), 0, 0); Tag3 (("S2", 953), 0, (Tag1 ([Tag1 (("writer", 1110), ([((("a")), 100000000, 0, -392); ((("b")), 100000000, 0, -389); ((("c")), 100000000, 0, -390)], 3, 0, 1, ((Tag1 (0, (Tag3 ((("writer0", 949)), [((("a")), 100000000, 0, -392)], (0)), 100000000, 0, -391), (Tag3 (Tag1 ((("S1", 952)), "writer"), [((("b")), 100000000, 0, -389); ((("c")), 100000000, 0, -390)], (0)), 100000000, 0, -388), 0), 100000000, 0, -387)), [29; 29; 46], [0; 0; 0], 0, 0, (("src/type_class.mli", 32, 555, 557), ("src/type_class.mli", 32, 555, 616), 0), 0, 0, 0, Tag1 ("Bin_prot__Type_class", 17)), 1, 0); Tag1 (("reader", 1111), ([((("a")), 100000000, 0, -386); ((("b")), 100000000, 0, -383); ((("c")), 100000000, 0, -384)], 3, 0, 1, ((Tag1 (0, (Tag3 ((("reader0", 950)), [((("a")), 100000000, 0, -386)], (0)), 100000000, 0, -385), (Tag3 (Tag1 ((("S1", 952)), "reader"), [((("b")), 100000000, 0, -383); ((("c")), 100000000, 0, -384)], (0)), 100000000, 0, -382), 0), 100000000, 0, -381)), [46; 46; 25], [0; 0; 0], 0, 0, (("src/type_class.mli", 33, 617, 619), ("src/type_class.mli", 33, 617, 678), 0), 0, 0, 0, Tag1 ("Bin_prot__Type_class", 18)), 1, 0); Tag1 (("t", 1112), ([((("a")), 100000000, 0, -380); ((("b")), 100000000, 0, -377); ((("c")), 100000000, 0, -378)], 3, 0, 1, ((Tag1 (0, (Tag3 ((("t0", 951)), [((("a")), 100000000, 0, -380)], (0)), 100000000, 0, -379), (Tag3 (Tag1 ((("S1", 952)), "t"), [((("b")), 100000000, 0, -377); ((("c")), 100000000, 0, -378)], (0)), 100000000, 0, -376), 0), 100000000, 0, -375)), [63; 63; 63], [0; 0; 0], 0, 0, (("src/type_class.mli", 34, 679, 681), ("src/type_class.mli", 34, 679, 725), 0), 0, 0, 0, Tag1 ("Bin_prot__Type_class", 19)), 1, 0)]), 0, (("src/type_class.mli", 31, 539, 539), ("src/type_class.mli", 35, 726, 729), 0), Tag1 ("Bin_prot__Type_class", 20)), 0, 0); Tag3 (("S3", 954), 0, (Tag1 ([Tag1 (("writer", 1113), ([((("a")), 100000000, 0, -413); ((("b")), 100000000, 0, -409); ((("c")), 100000000, 0, -410); ((("d")), 100000000, 0, -411)], 4, 0, 1, ((Tag1 (0, (Tag3 ((("writer0", 949)), [((("a")), 100000000, 0, -413)], (0)), 100000000, 0, -412), (Tag3 (Tag1 ((("S2", 953)), "writer"), [((("b")), 100000000, 0, -409); ((("c")), 100000000, 0, -410); ((("d")), 100000000, 0, -411)], (0)), 100000000, 0, -408), 0), 100000000, 0, -407)), [29; 29; 29; 46], [0; 0; 0; 0], 0, 0, (("src/type_class.mli", 38, 747, 749), ("src/type_class.mli", 38, 747, 816), 0), 0, 0, 0, Tag1 ("Bin_prot__Type_class", 21)), 1, 0); Tag1 (("reader", 1114), ([((("a")), 100000000, 0, -406); ((("b")), 100000000, 0, -402); ((("c")), 100000000, 0, -403); ((("d")), 100000000, 0, -404)], 4, 0, 1, ((Tag1 (0, (Tag3 ((("reader0", 950)), [((("a")), 100000000, 0, -406)], (0)), 100000000, 0, -405), (Tag3 (Tag1 ((("S2", 953)), "reader"), [((("b")), 100000000, 0, -402); ((("c")), 100000000, 0, -403); ((("d")), 100000000, 0, -404)], (0)), 100000000, 0, -401), 0), 100000000, 0, -400)), [46; 46; 46; 25], [0; 0; 0; 0], 0, 0, (("src/type_class.mli", 39, 817, 819), ("src/type_class.mli", 39, 817, 886), 0), 0, 0, 0, Tag1 ("Bin_prot__Type_class", 22)), 1, 0); Tag1 (("t", 1115), ([((("a")), 100000000, 0, -399); ((("b")), 100000000, 0, -395); ((("c")), 100000000, 0, -396); ((("d")), 100000000, 0, -397)], 4, 0, 1, ((Tag1 (0, (Tag3 ((("t0", 951)), [((("a")), 100000000, 0, -399)], (0)), 100000000, 0, -398), (Tag3 (Tag1 ((("S2", 953)), "t"), [((("b")), 100000000, 0, -395); ((("c")), 100000000, 0, -396); ((("d")), 100000000, 0, -397)], (0)), 100000000, 0, -394), 0), 100000000, 0, -393)), [63; 63; 63; 63], [0; 0; 0; 0], 0, 0, (("src/type_class.mli", 40, 887, 889), ("src/type_class.mli", 40, 887, 941), 0), 0, 0, 0, Tag1 ("Bin_prot__Type_class", 23)), 1, 0)]), 0, (("src/type_class.mli", 37, 731, 731), ("src/type_class.mli", 41, 942, 945), 0), Tag1 ("Bin_prot__Type_class", 24)), 0, 0); (("bin_writer_unit", 955), ((Tag3 ((("writer", 946)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -341)], (0)), 100000000, 0, -340), 0, (("src/type_class.mli", 45, 1001, 1001), ("src/type_class.mli", 45, 1001, 1034), 0), 0, Tag1 ("Bin_prot__Type_class", 25)), 0); (("bin_reader_unit", 956), ((Tag3 ((("reader", 947)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -339)], (0)), 100000000, 0, -338), 0, (("src/type_class.mli", 46, 1035, 1035), ("src/type_class.mli", 46, 1035, 1068), 0), 0, Tag1 ("Bin_prot__Type_class", 26)), 0); (("bin_shape_unit", 957), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -337), 0, (("src/type_class.mli", 47, 1069, 1069), ("src/type_class.mli", 47, 1069, 1097), 0), 0, Tag1 ("Bin_prot__Type_class", 27)), 0); (("bin_unit", 958), ((Tag3 ((("t", 948)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -336)], (0)), 100000000, 0, -335), 0, (("src/type_class.mli", 48, 1098, 1098), ("src/type_class.mli", 48, 1098, 1119), 0), 0, Tag1 ("Bin_prot__Type_class", 28)), 0); (("bin_writer_bool", 959), ((Tag3 ((("writer", 946)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -334)], (0)), 100000000, 0, -333), 0, (("src/type_class.mli", 51, 1143, 1143), ("src/type_class.mli", 51, 1143, 1176), 0), 0, Tag1 ("Bin_prot__Type_class", 29)), 0); (("bin_reader_bool", 960), ((Tag3 ((("reader", 947)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -332)], (0)), 100000000, 0, -331), 0, (("src/type_class.mli", 52, 1177, 1177), ("src/type_class.mli", 52, 1177, 1210), 0), 0, Tag1 ("Bin_prot__Type_class", 30)), 0); (("bin_shape_bool", 961), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -330), 0, (("src/type_class.mli", 53, 1211, 1211), ("src/type_class.mli", 53, 1211, 1239), 0), 0, Tag1 ("Bin_prot__Type_class", 31)), 0); (("bin_bool", 962), ((Tag3 ((("t", 948)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -329)], (0)), 100000000, 0, -328), 0, (("src/type_class.mli", 54, 1240, 1240), ("src/type_class.mli", 54, 1240, 1261), 0), 0, Tag1 ("Bin_prot__Type_class", 32)), 0); (("bin_writer_string", 963), ((Tag3 ((("writer", 946)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -327)], (0)), 100000000, 0, -326), 0, (("src/type_class.mli", 57, 1287, 1287), ("src/type_class.mli", 57, 1287, 1324), 0), 0, Tag1 ("Bin_prot__Type_class", 33)), 0); (("bin_reader_string", 964), ((Tag3 ((("reader", 947)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -325)], (0)), 100000000, 0, -324), 0, (("src/type_class.mli", 58, 1325, 1325), ("src/type_class.mli", 58, 1325, 1362), 0), 0, Tag1 ("Bin_prot__Type_class", 34)), 0); (("bin_shape_string", 965), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -323), 0, (("src/type_class.mli", 59, 1363, 1363), ("src/type_class.mli", 59, 1363, 1393), 0), 0, Tag1 ("Bin_prot__Type_class", 35)), 0); (("bin_string", 966), ((Tag3 ((("t", 948)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -322)], (0)), 100000000, 0, -321), 0, (("src/type_class.mli", 60, 1394, 1394), ("src/type_class.mli", 60, 1394, 1419), 0), 0, Tag1 ("Bin_prot__Type_class", 36)), 0); (("bin_writer_bytes", 967), ((Tag3 ((("writer", 946)), [(Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -320)], (0)), 100000000, 0, -319), 0, (("src/type_class.mli", 63, 1444, 1444), ("src/type_class.mli", 63, 1444, 1479), 0), 0, Tag1 ("Bin_prot__Type_class", 37)), 0); (("bin_reader_bytes", 968), ((Tag3 ((("reader", 947)), [(Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -318)], (0)), 100000000, 0, -317), 0, (("src/type_class.mli", 64, 1480, 1480), ("src/type_class.mli", 64, 1480, 1515), 0), 0, Tag1 ("Bin_prot__Type_class", 38)), 0); (("bin_shape_bytes", 969), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -316), 0, (("src/type_class.mli", 65, 1516, 1516), ("src/type_class.mli", 65, 1516, 1545), 0), 0, Tag1 ("Bin_prot__Type_class", 39)), 0); (("bin_bytes", 970), ((Tag3 ((("t", 948)), [(Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -315)], (0)), 100000000, 0, -314), 0, (("src/type_class.mli", 66, 1546, 1546), ("src/type_class.mli", 66, 1546, 1569), 0), 0, Tag1 ("Bin_prot__Type_class", 40)), 0); (("bin_writer_char", 971), ((Tag3 ((("writer", 946)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -313)], (0)), 100000000, 0, -312), 0, (("src/type_class.mli", 69, 1593, 1593), ("src/type_class.mli", 69, 1593, 1626), 0), 0, Tag1 ("Bin_prot__Type_class", 41)), 0); (("bin_reader_char", 972), ((Tag3 ((("reader", 947)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -311)], (0)), 100000000, 0, -310), 0, (("src/type_class.mli", 70, 1627, 1627), ("src/type_class.mli", 70, 1627, 1660), 0), 0, Tag1 ("Bin_prot__Type_class", 42)), 0); (("bin_shape_char", 973), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -309), 0, (("src/type_class.mli", 71, 1661, 1661), ("src/type_class.mli", 71, 1661, 1689), 0), 0, Tag1 ("Bin_prot__Type_class", 43)), 0); (("bin_char", 974), ((Tag3 ((("t", 948)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -308)], (0)), 100000000, 0, -307), 0, (("src/type_class.mli", 72, 1690, 1690), ("src/type_class.mli", 72, 1690, 1711), 0), 0, Tag1 ("Bin_prot__Type_class", 44)), 0); (("bin_writer_int", 975), ((Tag3 ((("writer", 946)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -306)], (0)), 100000000, 0, -305), 0, (("src/type_class.mli", 75, 1734, 1734), ("src/type_class.mli", 75, 1734, 1765), 0), 0, Tag1 ("Bin_prot__Type_class", 45)), 0); (("bin_reader_int", 976), ((Tag3 ((("reader", 947)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -304)], (0)), 100000000, 0, -303), 0, (("src/type_class.mli", 76, 1766, 1766), ("src/type_class.mli", 76, 1766, 1797), 0), 0, Tag1 ("Bin_prot__Type_class", 46)), 0); (("bin_shape_int", 977), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -302), 0, (("src/type_class.mli", 77, 1798, 1798), ("src/type_class.mli", 77, 1798, 1825), 0), 0, Tag1 ("Bin_prot__Type_class", 47)), 0); (("bin_int", 978), ((Tag3 ((("t", 948)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -301)], (0)), 100000000, 0, -300), 0, (("src/type_class.mli", 78, 1826, 1826), ("src/type_class.mli", 78, 1826, 1845), 0), 0, Tag1 ("Bin_prot__Type_class", 48)), 0); (("bin_writer_float", 979), ((Tag3 ((("writer", 946)), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -299)], (0)), 100000000, 0, -298), 0, (("src/type_class.mli", 81, 1870, 1870), ("src/type_class.mli", 81, 1870, 1905), 0), 0, Tag1 ("Bin_prot__Type_class", 49)), 0); (("bin_reader_float", 980), ((Tag3 ((("reader", 947)), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -297)], (0)), 100000000, 0, -296), 0, (("src/type_class.mli", 82, 1906, 1906), ("src/type_class.mli", 82, 1906, 1941), 0), 0, Tag1 ("Bin_prot__Type_class", 50)), 0); (("bin_shape_float", 981), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -295), 0, (("src/type_class.mli", 83, 1942, 1942), ("src/type_class.mli", 83, 1942, 1971), 0), 0, Tag1 ("Bin_prot__Type_class", 51)), 0); (("bin_float", 982), ((Tag3 ((("t", 948)), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -294)], (0)), 100000000, 0, -293), 0, (("src/type_class.mli", 84, 1972, 1972), ("src/type_class.mli", 84, 1972, 1995), 0), 0, Tag1 ("Bin_prot__Type_class", 52)), 0); (("bin_writer_int32", 983), ((Tag3 ((("writer", 946)), [(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -292)], (0)), 100000000, 0, -291), 0, (("src/type_class.mli", 87, 2020, 2020), ("src/type_class.mli", 87, 2020, 2055), 0), 0, Tag1 ("Bin_prot__Type_class", 53)), 0); (("bin_reader_int32", 984), ((Tag3 ((("reader", 947)), [(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -290)], (0)), 100000000, 0, -289), 0, (("src/type_class.mli", 88, 2056, 2056), ("src/type_class.mli", 88, 2056, 2091), 0), 0, Tag1 ("Bin_prot__Type_class", 54)), 0); (("bin_shape_int32", 985), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -288), 0, (("src/type_class.mli", 89, 2092, 2092), ("src/type_class.mli", 89, 2092, 2121), 0), 0, Tag1 ("Bin_prot__Type_class", 55)), 0); (("bin_int32", 986), ((Tag3 ((("t", 948)), [(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -287)], (0)), 100000000, 0, -286), 0, (("src/type_class.mli", 90, 2122, 2122), ("src/type_class.mli", 90, 2122, 2145), 0), 0, Tag1 ("Bin_prot__Type_class", 56)), 0); (("bin_writer_int64", 987), ((Tag3 ((("writer", 946)), [(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -285)], (0)), 100000000, 0, -284), 0, (("src/type_class.mli", 93, 2170, 2170), ("src/type_class.mli", 93, 2170, 2205), 0), 0, Tag1 ("Bin_prot__Type_class", 57)), 0); (("bin_reader_int64", 988), ((Tag3 ((("reader", 947)), [(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -283)], (0)), 100000000, 0, -282), 0, (("src/type_class.mli", 94, 2206, 2206), ("src/type_class.mli", 94, 2206, 2241), 0), 0, Tag1 ("Bin_prot__Type_class", 58)), 0); (("bin_shape_int64", 989), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -281), 0, (("src/type_class.mli", 95, 2242, 2242), ("src/type_class.mli", 95, 2242, 2271), 0), 0, Tag1 ("Bin_prot__Type_class", 59)), 0); (("bin_int64", 990), ((Tag3 ((("t", 948)), [(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -280)], (0)), 100000000, 0, -279), 0, (("src/type_class.mli", 96, 2272, 2272), ("src/type_class.mli", 96, 2272, 2295), 0), 0, Tag1 ("Bin_prot__Type_class", 60)), 0); (("bin_writer_nativeint", 991), ((Tag3 ((("writer", 946)), [(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -278)], (0)), 100000000, 0, -277), 0, (("src/type_class.mli", 99, 2324, 2324), ("src/type_class.mli", 99, 2324, 2367), 0), 0, Tag1 ("Bin_prot__Type_class", 61)), 0); (("bin_reader_nativeint", 992), ((Tag3 ((("reader", 947)), [(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -276)], (0)), 100000000, 0, -275), 0, (("src/type_class.mli", 100, 2368, 2368), ("src/type_class.mli", 100, 2368, 2411), 0), 0, Tag1 ("Bin_prot__Type_class", 62)), 0); (("bin_shape_nativeint", 993), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -274), 0, (("src/type_class.mli", 101, 2412, 2412), ("src/type_class.mli", 101, 2412, 2445), 0), 0, Tag1 ("Bin_prot__Type_class", 63)), 0); (("bin_nativeint", 994), ((Tag3 ((("t", 948)), [(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -273)], (0)), 100000000, 0, -272), 0, (("src/type_class.mli", 102, 2446, 2446), ("src/type_class.mli", 102, 2446, 2477), 0), 0, Tag1 ("Bin_prot__Type_class", 64)), 0); (("bin_writer_nat0", 995), ((Tag3 ((("writer", 946)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Nat0"), "t"), 0, (0)), 100000000, 0, -271)], (0)), 100000000, 0, -270), 0, (("src/type_class.mli", 105, 2513, 2513), ("src/type_class.mli", 105, 2513, 2548), 0), 0, Tag1 ("Bin_prot__Type_class", 65)), 0); (("bin_reader_nat0", 996), ((Tag3 ((("reader", 947)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Nat0"), "t"), 0, (0)), 100000000, 0, -269)], (0)), 100000000, 0, -268), 0, (("src/type_class.mli", 106, 2549, 2549), ("src/type_class.mli", 106, 2549, 2584), 0), 0, Tag1 ("Bin_prot__Type_class", 66)), 0); (("bin_shape_nat0", 997), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -267), 0, (("src/type_class.mli", 107, 2585, 2585), ("src/type_class.mli", 107, 2585, 2613), 0), 0, Tag1 ("Bin_prot__Type_class", 67)), 0); (("bin_nat0", 998), ((Tag3 ((("t", 948)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Nat0"), "t"), 0, (0)), 100000000, 0, -266)], (0)), 100000000, 0, -265), 0, (("src/type_class.mli", 108, 2614, 2614), ("src/type_class.mli", 108, 2614, 2637), 0), 0, Tag1 ("Bin_prot__Type_class", 68)), 0); (("bin_writer_ref", 999), ((Tag3 (Tag1 ((("S1", 952)), "writer"), [((("a")), 100000000, 0, -263); (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [((("a")), 100000000, 0, -263)], (0)), 100000000, 0, -264)], (0)), 100000000, 0, -262), 0, (("src/type_class.mli", 111, 2661, 2661), ("src/type_class.mli", 111, 2661, 2704), 0), 0, Tag1 ("Bin_prot__Type_class", 69)), 0); (("bin_reader_ref", 1000), ((Tag3 (Tag1 ((("S1", 952)), "reader"), [((("a")), 100000000, 0, -260); (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [((("a")), 100000000, 0, -260)], (0)), 100000000, 0, -261)], (0)), 100000000, 0, -259), 0, (("src/type_class.mli", 112, 2705, 2705), ("src/type_class.mli", 112, 2705, 2748), 0), 0, Tag1 ("Bin_prot__Type_class", 70)), 0); (("bin_shape_ref", 1001), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -258), (Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -257), 0), 100000000, 0, -256), 0, (("src/type_class.mli", 113, 2749, 2749), ("src/type_class.mli", 113, 2749, 2787), 0), 0, Tag1 ("Bin_prot__Type_class", 71)), 0); (("bin_ref", 1002), ((Tag3 (Tag1 ((("S1", 952)), "t"), [((("a")), 100000000, 0, -254); (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [((("a")), 100000000, 0, -254)], (0)), 100000000, 0, -255)], (0)), 100000000, 0, -253), 0, (("src/type_class.mli", 114, 2788, 2788), ("src/type_class.mli", 114, 2788, 2819), 0), 0, Tag1 ("Bin_prot__Type_class", 72)), 0); (("bin_writer_lazy", 1003), ((Tag3 (Tag1 ((("S1", 952)), "writer"), [((("a")), 100000000, 0, -251); (Tag3 ((Tag3 ("lazy_t", 14)), [((("a")), 100000000, 0, -251)], (0)), 100000000, 0, -252)], (0)), 100000000, 0, -250), 0, (("src/type_class.mli", 117, 2856, 2856), ("src/type_class.mli", 117, 2856, 2903), 0), 0, Tag1 ("Bin_prot__Type_class", 73)), 0); (("bin_reader_lazy", 1004), ((Tag3 (Tag1 ((("S1", 952)), "reader"), [((("a")), 100000000, 0, -248); (Tag3 ((Tag3 ("lazy_t", 14)), [((("a")), 100000000, 0, -248)], (0)), 100000000, 0, -249)], (0)), 100000000, 0, -247), 0, (("src/type_class.mli", 118, 2904, 2904), ("src/type_class.mli", 118, 2904, 2951), 0), 0, Tag1 ("Bin_prot__Type_class", 74)), 0); (("bin_shape_lazy", 1005), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -246), (Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -245), 0), 100000000, 0, -244), 0, (("src/type_class.mli", 119, 2952, 2952), ("src/type_class.mli", 119, 2952, 2991), 0), 0, Tag1 ("Bin_prot__Type_class", 75)), 0); (("bin_lazy", 1006), ((Tag3 (Tag1 ((("S1", 952)), "t"), [((("a")), 100000000, 0, -242); (Tag3 ((Tag3 ("lazy_t", 14)), [((("a")), 100000000, 0, -242)], (0)), 100000000, 0, -243)], (0)), 100000000, 0, -241), 0, (("src/type_class.mli", 120, 2992, 2992), ("src/type_class.mli", 120, 2992, 3027), 0), 0, Tag1 ("Bin_prot__Type_class", 76)), 0); (("bin_writer_option", 1007), ((Tag3 (Tag1 ((("S1", 952)), "writer"), [((("a")), 100000000, 0, -239); (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -239)], (0)), 100000000, 0, -240)], (0)), 100000000, 0, -238), 0, (("src/type_class.mli", 123, 3054, 3054), ("src/type_class.mli", 123, 3054, 3103), 0), 0, Tag1 ("Bin_prot__Type_class", 77)), 0); (("bin_reader_option", 1008), ((Tag3 (Tag1 ((("S1", 952)), "reader"), [((("a")), 100000000, 0, -236); (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -236)], (0)), 100000000, 0, -237)], (0)), 100000000, 0, -235), 0, (("src/type_class.mli", 124, 3104, 3104), ("src/type_class.mli", 124, 3104, 3153), 0), 0, Tag1 ("Bin_prot__Type_class", 78)), 0); (("bin_shape_option", 1009), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -234), (Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -233), 0), 100000000, 0, -232), 0, (("src/type_class.mli", 125, 3154, 3154), ("src/type_class.mli", 125, 3154, 3195), 0), 0, Tag1 ("Bin_prot__Type_class", 79)), 0); (("bin_option", 1010), ((Tag3 (Tag1 ((("S1", 952)), "t"), [((("a")), 100000000, 0, -230); (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -230)], (0)), 100000000, 0, -231)], (0)), 100000000, 0, -229), 0, (("src/type_class.mli", 126, 3196, 3196), ("src/type_class.mli", 126, 3196, 3233), 0), 0, Tag1 ("Bin_prot__Type_class", 80)), 0); (("bin_writer_pair", 1011), ((Tag3 (Tag1 ((("S2", 953)), "writer"), [((("a")), 100000000, 0, -226); ((("b")), 100000000, 0, -227); (Tag2 ([((("a")), 100000000, 0, -226); ((("b")), 100000000, 0, -227)]), 100000000, 0, -228)], (0)), 100000000, 0, -225), 0, (("src/type_class.mli", 129, 3241, 3241), ("src/type_class.mli", 129, 3241, 3290), 0), 0, Tag1 ("Bin_prot__Type_class", 81)), 0); (("bin_reader_pair", 1012), ((Tag3 (Tag1 ((("S2", 953)), "reader"), [((("a")), 100000000, 0, -222); ((("b")), 100000000, 0, -223); (Tag2 ([((("a")), 100000000, 0, -222); ((("b")), 100000000, 0, -223)]), 100000000, 0, -224)], (0)), 100000000, 0, -221), 0, (("src/type_class.mli", 130, 3291, 3291), ("src/type_class.mli", 130, 3291, 3340), 0), 0, Tag1 ("Bin_prot__Type_class", 82)), 0); (("bin_pair", 1013), ((Tag3 (Tag1 ((("S2", 953)), "t"), [((("a")), 100000000, 0, -218); ((("b")), 100000000, 0, -219); (Tag2 ([((("a")), 100000000, 0, -218); ((("b")), 100000000, 0, -219)]), 100000000, 0, -220)], (0)), 100000000, 0, -217), 0, (("src/type_class.mli", 131, 3341, 3341), ("src/type_class.mli", 131, 3341, 3378), 0), 0, Tag1 ("Bin_prot__Type_class", 83)), 0); (("bin_writer_triple", 1014), ((Tag3 (Tag1 ((("S3", 954)), "writer"), [((("a")), 100000000, 0, -213); ((("b")), 100000000, 0, -214); ((("c")), 100000000, 0, -215); (Tag2 ([((("a")), 100000000, 0, -213); ((("b")), 100000000, 0, -214); ((("c")), 100000000, 0, -215)]), 100000000, 0, -216)], (0)), 100000000, 0, -212), 0, (("src/type_class.mli", 132, 3379, 3379), ("src/type_class.mli", 132, 3379, 3439), 0), 0, Tag1 ("Bin_prot__Type_class", 84)), 0); (("bin_reader_triple", 1015), ((Tag3 (Tag1 ((("S3", 954)), "reader"), [((("a")), 100000000, 0, -208); ((("b")), 100000000, 0, -209); ((("c")), 100000000, 0, -210); (Tag2 ([((("a")), 100000000, 0, -208); ((("b")), 100000000, 0, -209); ((("c")), 100000000, 0, -210)]), 100000000, 0, -211)], (0)), 100000000, 0, -207), 0, (("src/type_class.mli", 133, 3440, 3440), ("src/type_class.mli", 133, 3440, 3500), 0), 0, Tag1 ("Bin_prot__Type_class", 85)), 0); (("bin_triple", 1016), ((Tag3 (Tag1 ((("S3", 954)), "t"), [((("a")), 100000000, 0, -203); ((("b")), 100000000, 0, -204); ((("c")), 100000000, 0, -205); (Tag2 ([((("a")), 100000000, 0, -203); ((("b")), 100000000, 0, -204); ((("c")), 100000000, 0, -205)]), 100000000, 0, -206)], (0)), 100000000, 0, -202), 0, (("src/type_class.mli", 134, 3501, 3501), ("src/type_class.mli", 134, 3501, 3549), 0), 0, Tag1 ("Bin_prot__Type_class", 86)), 0); (("bin_writer_list", 1017), ((Tag3 (Tag1 ((("S1", 952)), "writer"), [((("a")), 100000000, 0, -200); (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -200)], (0)), 100000000, 0, -201)], (0)), 100000000, 0, -199), 0, (("src/type_class.mli", 137, 3574, 3574), ("src/type_class.mli", 137, 3574, 3619), 0), 0, Tag1 ("Bin_prot__Type_class", 87)), 0); (("bin_reader_list", 1018), ((Tag3 (Tag1 ((("S1", 952)), "reader"), [((("a")), 100000000, 0, -197); (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -197)], (0)), 100000000, 0, -198)], (0)), 100000000, 0, -196), 0, (("src/type_class.mli", 138, 3620, 3620), ("src/type_class.mli", 138, 3620, 3665), 0), 0, Tag1 ("Bin_prot__Type_class", 88)), 0); (("bin_shape_list", 1019), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -195), (Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -194), 0), 100000000, 0, -193), 0, (("src/type_class.mli", 139, 3666, 3666), ("src/type_class.mli", 139, 3666, 3705), 0), 0, Tag1 ("Bin_prot__Type_class", 89)), 0); (("bin_list", 1020), ((Tag3 (Tag1 ((("S1", 952)), "t"), [((("a")), 100000000, 0, -191); (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -191)], (0)), 100000000, 0, -192)], (0)), 100000000, 0, -190), 0, (("src/type_class.mli", 140, 3706, 3706), ("src/type_class.mli", 140, 3706, 3739), 0), 0, Tag1 ("Bin_prot__Type_class", 90)), 0); (("bin_writer_array", 1021), ((Tag3 (Tag1 ((("S1", 952)), "writer"), [((("a")), 100000000, 0, -188); (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -188)], (0)), 100000000, 0, -189)], (0)), 100000000, 0, -187), 0, (("src/type_class.mli", 143, 3765, 3765), ("src/type_class.mli", 143, 3765, 3812), 0), 0, Tag1 ("Bin_prot__Type_class", 91)), 0); (("bin_reader_array", 1022), ((Tag3 (Tag1 ((("S1", 952)), "reader"), [((("a")), 100000000, 0, -185); (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -185)], (0)), 100000000, 0, -186)], (0)), 100000000, 0, -184), 0, (("src/type_class.mli", 144, 3813, 3813), ("src/type_class.mli", 144, 3813, 3860), 0), 0, Tag1 ("Bin_prot__Type_class", 92)), 0); (("bin_shape_array", 1023), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -183), (Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -182), 0), 100000000, 0, -181), 0, (("src/type_class.mli", 145, 3861, 3861), ("src/type_class.mli", 145, 3861, 3901), 0), 0, Tag1 ("Bin_prot__Type_class", 93)), 0); (("bin_array", 1024), ((Tag3 (Tag1 ((("S1", 952)), "t"), [((("a")), 100000000, 0, -179); (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -179)], (0)), 100000000, 0, -180)], (0)), 100000000, 0, -178), 0, (("src/type_class.mli", 146, 3902, 3902), ("src/type_class.mli", 146, 3902, 3937), 0), 0, Tag1 ("Bin_prot__Type_class", 94)), 0); (("bin_writer_hashtbl", 1025), ((Tag3 (Tag1 ((("S2", 953)), "writer"), [((("a")), 100000000, 0, -175); ((("b")), 100000000, 0, -176); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Hashtbl"), "t"), [((("a")), 100000000, 0, -175); ((("b")), 100000000, 0, -176)], (0)), 100000000, 0, -177)], (0)), 100000000, 0, -174), 0, (("src/type_class.mli", 149, 3980, 3980), ("src/type_class.mli", 149, 3980, 4043), 0), 0, Tag1 ("Bin_prot__Type_class", 95)), 0); (("bin_reader_hashtbl", 1026), ((Tag3 (Tag1 ((("S2", 953)), "reader"), [((("a")), 100000000, 0, -171); ((("b")), 100000000, 0, -172); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Hashtbl"), "t"), [((("a")), 100000000, 0, -171); ((("b")), 100000000, 0, -172)], (0)), 100000000, 0, -173)], (0)), 100000000, 0, -170), 0, (("src/type_class.mli", 150, 4044, 4044), ("src/type_class.mli", 150, 4044, 4107), 0), 0, Tag1 ("Bin_prot__Type_class", 96)), 0); (("bin_shape_hashtbl", 1027), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -169), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -168), (Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -167), 0), 100000000, 0, -166), 0), 100000000, 0, -165), 0, (("src/type_class.mli", 151, 4108, 4108), ("src/type_class.mli", 151, 4108, 4161), 0), 0, Tag1 ("Bin_prot__Type_class", 97)), 0); (("bin_hashtbl", 1028), ((Tag3 (Tag1 ((("S2", 953)), "t"), [((("a")), 100000000, 0, -162); ((("b")), 100000000, 0, -163); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Hashtbl"), "t"), [((("a")), 100000000, 0, -162); ((("b")), 100000000, 0, -163)], (0)), 100000000, 0, -164)], (0)), 100000000, 0, -161), 0, (("src/type_class.mli", 152, 4162, 4162), ("src/type_class.mli", 152, 4162, 4213), 0), 0, Tag1 ("Bin_prot__Type_class", 98)), 0); (("bin_writer_float32_vec", 1029), ((Tag3 ((("writer", 946)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "vec32"), 0, (0)), 100000000, 0, -160)], (0)), 100000000, 0, -159), 0, (("src/type_class.mli", 155, 4255, 4255), ("src/type_class.mli", 155, 4255, 4296), 0), 0, Tag1 ("Bin_prot__Type_class", 99)), 0); (("bin_reader_float32_vec", 1030), ((Tag3 ((("reader", 947)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "vec32"), 0, (0)), 100000000, 0, -158)], (0)), 100000000, 0, -157), 0, (("src/type_class.mli", 156, 4297, 4297), ("src/type_class.mli", 156, 4297, 4338), 0), 0, Tag1 ("Bin_prot__Type_class", 100)), 0); (("bin_shape_float32_vec", 1031), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -156), 0, (("src/type_class.mli", 157, 4339, 4339), ("src/type_class.mli", 157, 4339, 4374), 0), 0, Tag1 ("Bin_prot__Type_class", 101)), 0); (("bin_float32_vec", 1032), ((Tag3 ((("t", 948)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "vec32"), 0, (0)), 100000000, 0, -155)], (0)), 100000000, 0, -154), 0, (("src/type_class.mli", 158, 4375, 4375), ("src/type_class.mli", 158, 4375, 4404), 0), 0, Tag1 ("Bin_prot__Type_class", 102)), 0); (("bin_writer_float64_vec", 1033), ((Tag3 ((("writer", 946)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "vec64"), 0, (0)), 100000000, 0, -153)], (0)), 100000000, 0, -152), 0, (("src/type_class.mli", 161, 4446, 4446), ("src/type_class.mli", 161, 4446, 4487), 0), 0, Tag1 ("Bin_prot__Type_class", 103)), 0); (("bin_reader_float64_vec", 1034), ((Tag3 ((("reader", 947)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "vec64"), 0, (0)), 100000000, 0, -151)], (0)), 100000000, 0, -150), 0, (("src/type_class.mli", 162, 4488, 4488), ("src/type_class.mli", 162, 4488, 4529), 0), 0, Tag1 ("Bin_prot__Type_class", 104)), 0); (("bin_shape_float64_vec", 1035), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -149), 0, (("src/type_class.mli", 163, 4530, 4530), ("src/type_class.mli", 163, 4530, 4565), 0), 0, Tag1 ("Bin_prot__Type_class", 105)), 0); (("bin_float64_vec", 1036), ((Tag3 ((("t", 948)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "vec64"), 0, (0)), 100000000, 0, -148)], (0)), 100000000, 0, -147), 0, (("src/type_class.mli", 164, 4566, 4566), ("src/type_class.mli", 164, 4566, 4595), 0), 0, Tag1 ("Bin_prot__Type_class", 106)), 0); (("bin_writer_vec", 1037), ((Tag3 ((("writer", 946)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "vec"), 0, (0)), 100000000, 0, -146)], (0)), 100000000, 0, -145), 0, (("src/type_class.mli", 167, 4618, 4618), ("src/type_class.mli", 167, 4618, 4649), 0), 0, Tag1 ("Bin_prot__Type_class", 107)), 0); (("bin_reader_vec", 1038), ((Tag3 ((("reader", 947)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "vec"), 0, (0)), 100000000, 0, -144)], (0)), 100000000, 0, -143), 0, (("src/type_class.mli", 168, 4650, 4650), ("src/type_class.mli", 168, 4650, 4681), 0), 0, Tag1 ("Bin_prot__Type_class", 108)), 0); (("bin_shape_vec", 1039), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -142), 0, (("src/type_class.mli", 169, 4682, 4682), ("src/type_class.mli", 169, 4682, 4709), 0), 0, Tag1 ("Bin_prot__Type_class", 109)), 0); (("bin_vec", 1040), ((Tag3 ((("t", 948)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "vec"), 0, (0)), 100000000, 0, -141)], (0)), 100000000, 0, -140), 0, (("src/type_class.mli", 170, 4710, 4710), ("src/type_class.mli", 170, 4710, 4729), 0), 0, Tag1 ("Bin_prot__Type_class", 110)), 0); (("bin_writer_float32_mat", 1041), ((Tag3 ((("writer", 946)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "mat32"), 0, (0)), 100000000, 0, -139)], (0)), 100000000, 0, -138), 0, (("src/type_class.mli", 173, 4771, 4771), ("src/type_class.mli", 173, 4771, 4812), 0), 0, Tag1 ("Bin_prot__Type_class", 111)), 0); (("bin_reader_float32_mat", 1042), ((Tag3 ((("reader", 947)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "mat32"), 0, (0)), 100000000, 0, -137)], (0)), 100000000, 0, -136), 0, (("src/type_class.mli", 174, 4813, 4813), ("src/type_class.mli", 174, 4813, 4854), 0), 0, Tag1 ("Bin_prot__Type_class", 112)), 0); (("bin_shape_float32_mat", 1043), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -135), 0, (("src/type_class.mli", 175, 4855, 4855), ("src/type_class.mli", 175, 4855, 4890), 0), 0, Tag1 ("Bin_prot__Type_class", 113)), 0); (("bin_float32_mat", 1044), ((Tag3 ((("t", 948)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "mat32"), 0, (0)), 100000000, 0, -134)], (0)), 100000000, 0, -133), 0, (("src/type_class.mli", 176, 4891, 4891), ("src/type_class.mli", 176, 4891, 4920), 0), 0, Tag1 ("Bin_prot__Type_class", 114)), 0); (("bin_writer_float64_mat", 1045), ((Tag3 ((("writer", 946)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "mat64"), 0, (0)), 100000000, 0, -132)], (0)), 100000000, 0, -131), 0, (("src/type_class.mli", 179, 4962, 4962), ("src/type_class.mli", 179, 4962, 5003), 0), 0, Tag1 ("Bin_prot__Type_class", 115)), 0); (("bin_reader_float64_mat", 1046), ((Tag3 ((("reader", 947)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "mat64"), 0, (0)), 100000000, 0, -130)], (0)), 100000000, 0, -129), 0, (("src/type_class.mli", 180, 5004, 5004), ("src/type_class.mli", 180, 5004, 5045), 0), 0, Tag1 ("Bin_prot__Type_class", 116)), 0); (("bin_shape_float64_mat", 1047), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -128), 0, (("src/type_class.mli", 181, 5046, 5046), ("src/type_class.mli", 181, 5046, 5081), 0), 0, Tag1 ("Bin_prot__Type_class", 117)), 0); (("bin_float64_mat", 1048), ((Tag3 ((("t", 948)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "mat64"), 0, (0)), 100000000, 0, -127)], (0)), 100000000, 0, -126), 0, (("src/type_class.mli", 182, 5082, 5082), ("src/type_class.mli", 182, 5082, 5111), 0), 0, Tag1 ("Bin_prot__Type_class", 118)), 0); (("bin_writer_mat", 1049), ((Tag3 ((("writer", 946)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "mat"), 0, (0)), 100000000, 0, -125)], (0)), 100000000, 0, -124), 0, (("src/type_class.mli", 185, 5134, 5134), ("src/type_class.mli", 185, 5134, 5165), 0), 0, Tag1 ("Bin_prot__Type_class", 119)), 0); (("bin_reader_mat", 1050), ((Tag3 ((("reader", 947)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "mat"), 0, (0)), 100000000, 0, -123)], (0)), 100000000, 0, -122), 0, (("src/type_class.mli", 186, 5166, 5166), ("src/type_class.mli", 186, 5166, 5197), 0), 0, Tag1 ("Bin_prot__Type_class", 120)), 0); (("bin_shape_mat", 1051), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -121), 0, (("src/type_class.mli", 187, 5198, 5198), ("src/type_class.mli", 187, 5198, 5225), 0), 0, Tag1 ("Bin_prot__Type_class", 121)), 0); (("bin_mat", 1052), ((Tag3 ((("t", 948)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "mat"), 0, (0)), 100000000, 0, -120)], (0)), 100000000, 0, -119), 0, (("src/type_class.mli", 188, 5226, 5226), ("src/type_class.mli", 188, 5226, 5245), 0), 0, Tag1 ("Bin_prot__Type_class", 122)), 0); (("bin_writer_bigstring", 1053), ((Tag3 ((("writer", 946)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "buf"), 0, (0)), 100000000, 0, -118)], (0)), 100000000, 0, -117), 0, (("src/type_class.mli", 191, 5283, 5283), ("src/type_class.mli", 191, 5283, 5320), 0), 0, Tag1 ("Bin_prot__Type_class", 123)), 0); (("bin_reader_bigstring", 1054), ((Tag3 ((("reader", 947)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "buf"), 0, (0)), 100000000, 0, -116)], (0)), 100000000, 0, -115), 0, (("src/type_class.mli", 192, 5321, 5321), ("src/type_class.mli", 192, 5321, 5358), 0), 0, Tag1 ("Bin_prot__Type_class", 124)), 0); (("bin_shape_bigstring", 1055), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -114), 0, (("src/type_class.mli", 193, 5359, 5359), ("src/type_class.mli", 193, 5359, 5392), 0), 0, Tag1 ("Bin_prot__Type_class", 125)), 0); (("bin_bigstring", 1056), ((Tag3 ((("t", 948)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "buf"), 0, (0)), 100000000, 0, -113)], (0)), 100000000, 0, -112), 0, (("src/type_class.mli", 194, 5393, 5393), ("src/type_class.mli", 194, 5393, 5418), 0), 0, Tag1 ("Bin_prot__Type_class", 126)), 0); (("bin_writer_floatarray", 1057), ((Tag3 ((("writer", 946)), [(Tag3 ((Tag3 ("floatarray", 17)), 0, (0)), 100000000, 0, -111)], (0)), 100000000, 0, -110), 0, (("src/type_class.mli", 198, 5454, 5454), ("src/type_class.mli", 198, 5454, 5499), 0), 0, Tag1 ("Bin_prot__Type_class", 127)), 0); (("bin_reader_floatarray", 1058), ((Tag3 ((("reader", 947)), [(Tag3 ((Tag3 ("floatarray", 17)), 0, (0)), 100000000, 0, -109)], (0)), 100000000, 0, -108), 0, (("src/type_class.mli", 199, 5500, 5500), ("src/type_class.mli", 199, 5500, 5545), 0), 0, Tag1 ("Bin_prot__Type_class", 128)), 0); (("bin_shape_floatarray", 1059), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -107), 0, (("src/type_class.mli", 200, 5546, 5546), ("src/type_class.mli", 200, 5546, 5580), 0), 0, Tag1 ("Bin_prot__Type_class", 129)), 0); (("bin_floatarray", 1060), ((Tag3 ((("t", 948)), [(Tag3 ((Tag3 ("floatarray", 17)), 0, (0)), 100000000, 0, -106)], (0)), 100000000, 0, -105), 0, (("src/type_class.mli", 201, 5581, 5581), ("src/type_class.mli", 201, 5581, 5614), 0), 0, Tag1 ("Bin_prot__Type_class", 130)), 0); (("bin_writer_variant_int", 1061), ((Tag3 ((("writer", 946)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -104)], (0)), 100000000, 0, -103), 0, (("src/type_class.mli", 204, 5622, 5622), ("src/type_class.mli", 204, 5622, 5661), 0), 0, Tag1 ("Bin_prot__Type_class", 131)), 0); (("bin_reader_variant_int", 1062), ((Tag3 ((("reader", 947)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -102)], (0)), 100000000, 0, -101), 0, (("src/type_class.mli", 205, 5662, 5662), ("src/type_class.mli", 205, 5662, 5701), 0), 0, Tag1 ("Bin_prot__Type_class", 132)), 0); (("bin_variant_int", 1063), ((Tag3 ((("t", 948)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -100)], (0)), 100000000, 0, -99), 0, (("src/type_class.mli", 206, 5702, 5702), ("src/type_class.mli", 206, 5702, 5729), 0), 0, Tag1 ("Bin_prot__Type_class", 133)), 0); (("bin_writer_int_8bit", 1064), ((Tag3 ((("writer", 946)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -98)], (0)), 100000000, 0, -97), 0, (("src/type_class.mli", 209, 5766, 5766), ("src/type_class.mli", 209, 5766, 5802), 0), 0, Tag1 ("Bin_prot__Type_class", 134)), 0); (("bin_reader_int_8bit", 1065), ((Tag3 ((("reader", 947)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -96)], (0)), 100000000, 0, -95), 0, (("src/type_class.mli", 210, 5803, 5803), ("src/type_class.mli", 210, 5803, 5839), 0), 0, Tag1 ("Bin_prot__Type_class", 135)), 0); (("bin_shape_int_8bit", 1066), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -94), 0, (("src/type_class.mli", 211, 5840, 5840), ("src/type_class.mli", 211, 5840, 5872), 0), 0, Tag1 ("Bin_prot__Type_class", 136)), 0); (("bin_int_8bit", 1067), ((Tag3 ((("t", 948)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -93)], (0)), 100000000, 0, -92), 0, (("src/type_class.mli", 212, 5873, 5873), ("src/type_class.mli", 212, 5873, 5897), 0), 0, Tag1 ("Bin_prot__Type_class", 137)), 0); (("bin_writer_int_16bit", 1068), ((Tag3 ((("writer", 946)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -91)], (0)), 100000000, 0, -90), 0, (("src/type_class.mli", 215, 5935, 5935), ("src/type_class.mli", 215, 5935, 5972), 0), 0, Tag1 ("Bin_prot__Type_class", 138)), 0); (("bin_reader_int_16bit", 1069), ((Tag3 ((("reader", 947)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -89)], (0)), 100000000, 0, -88), 0, (("src/type_class.mli", 216, 5973, 5973), ("src/type_class.mli", 216, 5973, 6010), 0), 0, Tag1 ("Bin_prot__Type_class", 139)), 0); (("bin_shape_int_16bit", 1070), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -87), 0, (("src/type_class.mli", 217, 6011, 6011), ("src/type_class.mli", 217, 6011, 6044), 0), 0, Tag1 ("Bin_prot__Type_class", 140)), 0); (("bin_int_16bit", 1071), ((Tag3 ((("t", 948)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -86)], (0)), 100000000, 0, -85), 0, (("src/type_class.mli", 218, 6045, 6045), ("src/type_class.mli", 218, 6045, 6070), 0), 0, Tag1 ("Bin_prot__Type_class", 141)), 0); (("bin_writer_int_32bit", 1072), ((Tag3 ((("writer", 946)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -84)], (0)), 100000000, 0, -83), 0, (("src/type_class.mli", 221, 6108, 6108), ("src/type_class.mli", 221, 6108, 6145), 0), 0, Tag1 ("Bin_prot__Type_class", 142)), 0); (("bin_reader_int_32bit", 1073), ((Tag3 ((("reader", 947)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -82)], (0)), 100000000, 0, -81), 0, (("src/type_class.mli", 222, 6146, 6146), ("src/type_class.mli", 222, 6146, 6183), 0), 0, Tag1 ("Bin_prot__Type_class", 143)), 0); (("bin_shape_int_32bit", 1074), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -80), 0, (("src/type_class.mli", 223, 6184, 6184), ("src/type_class.mli", 223, 6184, 6217), 0), 0, Tag1 ("Bin_prot__Type_class", 144)), 0); (("bin_int_32bit", 1075), ((Tag3 ((("t", 948)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -79)], (0)), 100000000, 0, -78), 0, (("src/type_class.mli", 224, 6218, 6218), ("src/type_class.mli", 224, 6218, 6243), 0), 0, Tag1 ("Bin_prot__Type_class", 145)), 0); (("bin_writer_int_64bit", 1076), ((Tag3 ((("writer", 946)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -77)], (0)), 100000000, 0, -76), 0, (("src/type_class.mli", 227, 6281, 6281), ("src/type_class.mli", 227, 6281, 6318), 0), 0, Tag1 ("Bin_prot__Type_class", 146)), 0); (("bin_reader_int_64bit", 1077), ((Tag3 ((("reader", 947)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -75)], (0)), 100000000, 0, -74), 0, (("src/type_class.mli", 228, 6319, 6319), ("src/type_class.mli", 228, 6319, 6356), 0), 0, Tag1 ("Bin_prot__Type_class", 147)), 0); (("bin_shape_int_64bit", 1078), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -73), 0, (("src/type_class.mli", 229, 6357, 6357), ("src/type_class.mli", 229, 6357, 6390), 0), 0, Tag1 ("Bin_prot__Type_class", 148)), 0); (("bin_int_64bit", 1079), ((Tag3 ((("t", 948)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -72)], (0)), 100000000, 0, -71), 0, (("src/type_class.mli", 230, 6391, 6391), ("src/type_class.mli", 230, 6391, 6416), 0), 0, Tag1 ("Bin_prot__Type_class", 149)), 0); (("bin_writer_int64_bits", 1080), ((Tag3 ((("writer", 946)), [(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -70)], (0)), 100000000, 0, -69), 0, (("src/type_class.mli", 233, 6457, 6457), ("src/type_class.mli", 233, 6457, 6497), 0), 0, Tag1 ("Bin_prot__Type_class", 150)), 0); (("bin_reader_int64_bits", 1081), ((Tag3 ((("reader", 947)), [(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -68)], (0)), 100000000, 0, -67), 0, (("src/type_class.mli", 234, 6498, 6498), ("src/type_class.mli", 234, 6498, 6538), 0), 0, Tag1 ("Bin_prot__Type_class", 151)), 0); (("bin_shape_int64_bits", 1082), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -66), 0, (("src/type_class.mli", 235, 6539, 6539), ("src/type_class.mli", 235, 6539, 6573), 0), 0, Tag1 ("Bin_prot__Type_class", 152)), 0); (("bin_int64_bits", 1083), ((Tag3 ((("t", 948)), [(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -65)], (0)), 100000000, 0, -64), 0, (("src/type_class.mli", 236, 6574, 6574), ("src/type_class.mli", 236, 6574, 6602), 0), 0, Tag1 ("Bin_prot__Type_class", 153)), 0); (("bin_writer_network16_int", 1084), ((Tag3 ((("writer", 946)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -63)], (0)), 100000000, 0, -62), 0, (("src/type_class.mli", 239, 6644, 6644), ("src/type_class.mli", 239, 6644, 6685), 0), 0, Tag1 ("Bin_prot__Type_class", 154)), 0); (("bin_reader_network16_int", 1085), ((Tag3 ((("reader", 947)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -61)], (0)), 100000000, 0, -60), 0, (("src/type_class.mli", 240, 6686, 6686), ("src/type_class.mli", 240, 6686, 6727), 0), 0, Tag1 ("Bin_prot__Type_class", 155)), 0); (("bin_shape_network16_int", 1086), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -59), 0, (("src/type_class.mli", 241, 6728, 6728), ("src/type_class.mli", 241, 6728, 6765), 0), 0, Tag1 ("Bin_prot__Type_class", 156)), 0); (("bin_network16_int", 1087), ((Tag3 ((("t", 948)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -58)], (0)), 100000000, 0, -57), 0, (("src/type_class.mli", 242, 6766, 6766), ("src/type_class.mli", 242, 6766, 6795), 0), 0, Tag1 ("Bin_prot__Type_class", 157)), 0); (("bin_writer_network32_int", 1088), ((Tag3 ((("writer", 946)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -56)], (0)), 100000000, 0, -55), 0, (("src/type_class.mli", 245, 6837, 6837), ("src/type_class.mli", 245, 6837, 6878), 0), 0, Tag1 ("Bin_prot__Type_class", 158)), 0); (("bin_reader_network32_int", 1089), ((Tag3 ((("reader", 947)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -54)], (0)), 100000000, 0, -53), 0, (("src/type_class.mli", 246, 6879, 6879), ("src/type_class.mli", 246, 6879, 6920), 0), 0, Tag1 ("Bin_prot__Type_class", 159)), 0); (("bin_shape_network32_int", 1090), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -52), 0, (("src/type_class.mli", 247, 6921, 6921), ("src/type_class.mli", 247, 6921, 6958), 0), 0, Tag1 ("Bin_prot__Type_class", 160)), 0); (("bin_network32_int", 1091), ((Tag3 ((("t", 948)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -51)], (0)), 100000000, 0, -50), 0, (("src/type_class.mli", 248, 6959, 6959), ("src/type_class.mli", 248, 6959, 6988), 0), 0, Tag1 ("Bin_prot__Type_class", 161)), 0); (("bin_writer_network32_int32", 1092), ((Tag3 ((("writer", 946)), [(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -49)], (0)), 100000000, 0, -48), 0, (("src/type_class.mli", 251, 7034, 7034), ("src/type_class.mli", 251, 7034, 7079), 0), 0, Tag1 ("Bin_prot__Type_class", 162)), 0); (("bin_reader_network32_int32", 1093), ((Tag3 ((("reader", 947)), [(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -47)], (0)), 100000000, 0, -46), 0, (("src/type_class.mli", 252, 7080, 7080), ("src/type_class.mli", 252, 7080, 7125), 0), 0, Tag1 ("Bin_prot__Type_class", 163)), 0); (("bin_shape_network32_int32", 1094), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -45), 0, (("src/type_class.mli", 253, 7126, 7126), ("src/type_class.mli", 253, 7126, 7165), 0), 0, Tag1 ("Bin_prot__Type_class", 164)), 0); (("bin_network32_int32", 1095), ((Tag3 ((("t", 948)), [(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -44)], (0)), 100000000, 0, -43), 0, (("src/type_class.mli", 254, 7166, 7166), ("src/type_class.mli", 254, 7166, 7199), 0), 0, Tag1 ("Bin_prot__Type_class", 165)), 0); (("bin_writer_network64_int", 1096), ((Tag3 ((("writer", 946)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -42)], (0)), 100000000, 0, -41), 0, (("src/type_class.mli", 257, 7241, 7241), ("src/type_class.mli", 257, 7241, 7282), 0), 0, Tag1 ("Bin_prot__Type_class", 166)), 0); (("bin_reader_network64_int", 1097), ((Tag3 ((("reader", 947)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -40)], (0)), 100000000, 0, -39), 0, (("src/type_class.mli", 258, 7283, 7283), ("src/type_class.mli", 258, 7283, 7324), 0), 0, Tag1 ("Bin_prot__Type_class", 167)), 0); (("bin_shape_network64_int", 1098), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -38), 0, (("src/type_class.mli", 259, 7325, 7325), ("src/type_class.mli", 259, 7325, 7362), 0), 0, Tag1 ("Bin_prot__Type_class", 168)), 0); (("bin_network64_int", 1099), ((Tag3 ((("t", 948)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -37)], (0)), 100000000, 0, -36), 0, (("src/type_class.mli", 260, 7363, 7363), ("src/type_class.mli", 260, 7363, 7392), 0), 0, Tag1 ("Bin_prot__Type_class", 169)), 0); (("bin_writer_network64_int64", 1100), ((Tag3 ((("writer", 946)), [(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -35)], (0)), 100000000, 0, -34), 0, (("src/type_class.mli", 263, 7438, 7438), ("src/type_class.mli", 263, 7438, 7483), 0), 0, Tag1 ("Bin_prot__Type_class", 170)), 0); (("bin_reader_network64_int64", 1101), ((Tag3 ((("reader", 947)), [(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -33)], (0)), 100000000, 0, -32), 0, (("src/type_class.mli", 264, 7484, 7484), ("src/type_class.mli", 264, 7484, 7529), 0), 0, Tag1 ("Bin_prot__Type_class", 171)), 0); (("bin_shape_network64_int64", 1102), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -31), 0, (("src/type_class.mli", 265, 7530, 7530), ("src/type_class.mli", 265, 7530, 7569), 0), 0, Tag1 ("Bin_prot__Type_class", 172)), 0); (("bin_network64_int64", 1103), ((Tag3 ((("t", 948)), [(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -30)], (0)), 100000000, 0, -29), 0, (("src/type_class.mli", 266, 7570, 7570), ("src/type_class.mli", 266, 7570, 7603), 0), 0, Tag1 ("Bin_prot__Type_class", 173)), 0); (("cnv_writer", 1104), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -25), ((("b")), 100000000, 0, -27), 0), 100000000, 0, -28), (Tag1 (0, (Tag3 ((("writer", 946)), [((("b")), 100000000, 0, -27)], (0)), 100000000, 0, -26), (Tag3 ((("writer", 946)), [((("a")), 100000000, 0, -25)], (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("src/type_class.mli", 271, 7647, 7647), ("src/type_class.mli", 271, 7647, 7700), 0), 0, Tag1 ("Bin_prot__Type_class", 174)), 0); (("cnv_reader", 1105), ((Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -20), ((("a")), 100000000, 0, -18), 0), 100000000, 0, -21), (Tag1 (0, (Tag3 ((("reader", 947)), [((("b")), 100000000, 0, -20)], (0)), 100000000, 0, -19), (Tag3 ((("reader", 947)), [((("a")), 100000000, 0, -18)], (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("src/type_class.mli", 272, 7701, 7701), ("src/type_class.mli", 272, 7701, 7754), 0), 0, Tag1 ("Bin_prot__Type_class", 175)), 0); (("cnv", 1106), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -14), (Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Shape"), "t"), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -7), ((("b")), 100000000, 0, -9), 0), 100000000, 0, -11), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -9), ((("a")), 100000000, 0, -7), 0), 100000000, 0, -10), (Tag1 (0, (Tag3 ((("t", 948)), [((("b")), 100000000, 0, -9)], (0)), 100000000, 0, -8), (Tag3 ((("t", 948)), [((("a")), 100000000, 0, -7)], (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/type_class.mli", 273, 7755, 7755), ("src/type_class.mli", 273, 7755, 7829), 0), 0, Tag1 ("Bin_prot__Type_class", 176)), 0)], "Bin_prot__Type_class", [("Bin_prot__Type_class", ("\152f\163\167\161\134\024D\145\023\232\253\145\215\226\014")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__StringLabels", ("\134F\024\226\216Is#\223\230\234\169Z\206Gc")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Printf", ("\215<\139]\021\142\224E\245m\198qc(W\229")); ("Stdlib__Printexc", ("\217u\168\235\179oi\167\235\255\025\017%d\192s")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__MoreLabels", ("\248\232\248\254`<\230\241\161U\193U\1466J\238")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__ListLabels", ("*\194\012\191\020%\170\249m\002\180\178hk\205\220")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shadow_stdlib", ("\219zi\164\203\158e)\232\221\196\168\138x\142\018")); ("Sexplib0__Sexpable", ("\251${\207(\249/z\242\255\250^\141\156\210e")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv_error", ("kzv!\151~\198P\000\165\176d\007\251p\232")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("Ppx_compare_lib", ("\160z\210W\001\239\141\222\242\213'\241\211\218\215y")); ("Md5_lib", ("\027\247~\199'\195O\175\232\149\147\228\248S\0073")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Bin_shape", ("\186\129\213n:\153\165\244L\187\167M\205\189Ez")); ("Bin_prot__Write", ("\159+\137\"W\144\147+\160\235\025\141\192=\215~")); ("Bin_prot__Size", ("\021\216\136a\145\207\251\017\243\165}nk\169\153\193")); ("Bin_prot__Shape", ("\160\0115[[\165\171\136\188\247+\007\155V\173(")); ("Bin_prot__Read", ("i\203\139\213p$\203#k*\127\201\r\134\135\228")); ("Bin_prot__Nat0", ("<\164\1881k\195J\024\147\212|H\130R\2178")); ("Bin_prot__Common", ("\000[\231\0295\203\157wv\152\171sEe\181\017")); ("Bin_prot__", ("N\162)\214\210X\006\190\194\220\b\004\164\226\022\181")); ("Base_internalhash_types", ("0\148#2\226\223\018\135\173>!\020\237\017\255\149")); ("Base__Unit", ("\247\n\178\171]m\169\231\139\171\148\189\254\236l'")); ("Base__T", ("+t\159\169\027\152\205\235\003\237\133\177\024\n6'")); ("Base__Sys0", ("\206z\231\154s\\\136\2364\131\005\014\031\152m3")); ("Base__Stringable", ("\170\025\162\136\234\162\n\161\1491>\145\210@\237t")); ("Base__String0", ("\212\221L\220\245\255\162P\228\224\189\216\135H\149O")); ("Base__String", ("|q\181\r\14787\130\127\191\025\137\203\217\250\196")); ("Base__Staged", ("\203J\011+\249\0115\1338\023\209\142\159\240V.")); ("Base__Source_code_position0", ("_\003P6\254\029\206\005\130\136\180\019\145\230\000M")); ("Base__Sign_or_nan", ("\2287\251,\197\017qf\179Y\025h\190\131W%")); ("Base__Sign0", ("\152\138\204\175\244\128J\165\221\165\160\150y\1305i")); ("Base__Sign", ("^\255.Q;\215fi\134\192\182\241Z\2425l")); ("Base__Sexpable", ("\155?\169\178\246\242*\232\206\018Y\174\203h\217i")); ("Base__Sexp_with_comparable", ("\171\173\137y\1855\006y\146\248\141@@\191[W")); ("Base__Sexp", ("\154\187\171&\209=\153[\236\250!U\174`\190T")); ("Base__Sequence", ("{L\140\211\223\183\000\030\151\247FnY\196\210\201")); ("Base__Result", ("\204|\215\173FMa\2511<&\215T\194$\228")); ("Base__Ref", ("\250\254R\158s\203c\0025\029I6\149\179s\158")); ("Base__Random", (" \216\153fc\243\1430\155\211\169?\022\\\231\011")); ("Base__Printf", ("\000\196c,\214\127\226\174\220\190\253z!\242\028\250")); ("Base__Pretty_printer", ("\175\005\031\018\015a\159\220\154c'(a\239j\233")); ("Base__Ppx_hash_lib", ("\199\141\178\193\006\209L\007^\020(\131\224sn8")); ("Base__Ppx_enumerate_lib", ("G\171\178\012Em\142\235@\152fg\020\140~(")); ("Base__Ppx_compare_lib", ("\243\186~\233\228\199Ah\181.\223\004e\231\129S")); ("Base__Poly0", ("\230;\143\234\255.H\132KOe7\155\\\023f")); ("Base__Or_error", ("\193\133)\bO\210\2517\168*\203\148\143\200\127\177")); ("Base__Option", ("\242!\176\142\168\247\163Jg\0254\180\224\\A\210")); ("Base__Nativeint", ("\252/\181U\214\229\029?.\130\145\237\"qFj")); ("Base__Monad_intf", ("\208\203\163\152\184O\130?\012:\168\247}\018\253\155")); ("Base__Monad", ("!\244\168\2352=\137Lm\219\129K\216\199\145\\")); ("Base__List", ("}\029h\158/\153\229\161]0\224Y\003Z\250\210")); ("Base__Lazy", ("@`\165\196 \235)\136ANe:p\169$\185")); ("Base__Invariant_intf", ("\213\204\238\235\236[\198\145\028\2392\015\243\177S\249")); ("Base__Invariant", ("\135\153\136\\\129SD\228\202l\255\152\139\253\015\201")); ("Base__Intable", ("\028\249=Y\003]\231qd\238\172\004b\170\142\255")); ("Base__Int_intf", ("\238Q\2457\239\156\018\183J\015\240\178\193b\166@")); ("Base__Int64", ("\252B\186\239\245\155\209\227\136CIX@\189\003\029")); ("Base__Int63_emul", ("'\210s\232\177\204\254\024C\215\014\231\210\227n\235")); ("Base__Int63", ("\165\016\236\214m\014a\226A{\191\235@O\1695")); ("Base__Int32", ("\244*\172\133\227\025$@\180\027\024\132\195yO\027")); ("Base__Int0", ("N\1310\012\227\254\000\255_\222!\018\016\003\1779")); ("Base__Int", ("\165Z\179\140\230$\131\175\209\172\214\"\170\214{\250")); ("Base__Info_intf", ("\184\209'\173\251\219\167X|v\188]\190o5X")); ("Base__Info", ("-\011\149\203\248\030\2301\1907\1630\189\128\209\170")); ("Base__Indexed_container_intf", ("\179\2213\145j\\\136\tl2\240\006\188j$r")); ("Base__Indexed_container", ("\196\246\213\141\196d\130\002\232\162\144y\149\236\145\218")); ("Base__Import0", ("\156\129U\197Y[\\\153\017Ho\203\173\204\220\020")); ("Base__Import", ("\014\187\247\141\187\181\142g\176:s_,\181\219\209")); ("Base__Identifiable_intf", ("hK7}\187\129\022-r\233\241\192Q\161=j")); ("Base__Identifiable", ("L\020\162\189\228\217^\171\158H_\157\164c\130\242")); ("Base__Hashable_intf", ("\128\015G\244\135R\026\202\128F?)\193\004\195\181")); ("Base__Hashable", ("\027\187\158\245r}\018\193dbq\196\005\170g\252")); ("Base__Hash_intf", ("h\004P\218\1531G\127\212\208A\024\140\164iq")); ("Base__Hash", ("\206Rc\194\234{s3\248\165\024\162\203{\206\206")); ("Base__Globalize", ("<\243w~.\180\196t\159\193\174[\227\139\215G")); ("Base__Formatter", ("\193\149\030\140\154\1505b\162a`%\243\185'%")); ("Base__Floatable", ("\239\176\151\139\173ft(q\190\205\030C\170\197\177")); ("Base__Float", ("tR$\252\165\134g\024>\127\254\245\212-\018\141")); ("Base__Field", ("8In\234X\202\188G\186\208$\192\175\136\214v")); ("Base__Exn", ("?\191\202\221\228\185\154\127\240\191o\134\020\186b\173")); ("Base__Error", ("\199\218\231n\155/\159\156\146\247\148t\237\003\t\153")); ("Base__Equal", ("\193\217Z\127he\141N\000\1447\030\236%\131\b")); ("Base__Either0", ("!9-\011n\2077eZ\212\031c\227\029\206\t")); ("Base__Container_intf", ("\170vo*\208\209\141\219\196\168\236l\016\246\012c")); ("Base__Container", ("\191|>_\153W\235M\180uKz\214w`q")); ("Base__Comparisons", ("\196\196Y\"{\163~)\\G/\155:\004\141;")); ("Base__Comparator", ("\002\135z7b\025&\207\t\188\239&U3R\167")); ("Base__Comparable_intf", ("\252n\002\221\246\143r\235oJ\240\151\202\211\161\254")); ("Base__Comparable", (":\134'\156u#\215\225\129\191\162\229\200\185l\012")); ("Base__Char", ("\206\224\186\000'\157$\023\023\190\198{\250\141a\216")); ("Base__Bytes", ("\028\001\232X(\240\139\227s\152\156\138\023\030\r\188")); ("Base__Bool0", ("\177f\254p\023\143&\239\020\136\206\242~\018F\251")); ("Base__Bool", ("\162+\012Rx\183c\226\131\190@Z\016q\138@")); ("Base__Blit_intf", ("\171\129\t\214\130\131O\210\251F\228.\168\004Vo")); ("Base__Blit", ("}g\242\161\000\216\132\220\195\230C\002jg\234j")); ("Base__Binary_searchable_intf", ("/\213\237\209\200\192$w\158\234\169\148\012\221W\019")); ("Base__Binary_searchable", ("V\022B_\233\194\145K\248\233\025\175U\155i\197")); ("Base__Backtrace", ("\212~\253E\024|\228\141\015\169\012\006\022\0065\181")); ("Base__Array", ("P\252F\172\242{\241\226#uu\207\2068\218\015")); ("Base__Applicative_intf", ("J\176\203\159\235N(\235\027\232\198+\224\205*A")); ("Base__Applicative", ("\157\024\176\241a\165\204\133\003s3\214\007\131\244\n")); ("Base__", ("p\252\007\139\128\163W\025+\0225\001\246|P\158")); ("Base", ("\167SY\027Q9E\005r,\198\164\161\023\170\151"))], [(0)])
('a -> 'b) -> ('b -> 'a) -> 'b t -> 'a t
