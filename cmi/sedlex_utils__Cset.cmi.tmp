type t = private (int * int) list
val of_list : (int * int) list -> t
val min_code : int
val max_code : int
val empty : t
val any : t
val union : t -> t -> t
val union_list : t list -> t
val difference : t -> t -> t
val intersection : t -> t -> t
val is_empty : t -> bool
val eof : t
val singleton : int -> t("DEBUG:rule", [Tag1 (("t", 284), (0, 0, 0, 0, ((Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -45); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -46)]), 100000000, 0, -44)], (0)), 100000000, 0, -43)), 0, 0, 0, 0, (("src/common/cset.mli", 10, 464, 464), ("src/common/cset.mli", 10, 464, 497), 0), 0, 0, 0, Tag1 ("Sedlex_utils__Cset", 0)), 1, 0); (("of_list", 285), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -41); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -42)]), 100000000, 0, -40)], (0)), 100000000, 0, -39), (Tag3 ((("t", 284)), 0, (0)), 100000000, 0, -38), 0), 100000000, 0, -37), 0, (("src/common/cset.mli", 12, 499, 499), ("src/common/cset.mli", 12, 499, 534), 0), 0, Tag1 ("Sedlex_utils__Cset", 1)), 0); (("min_code", 286), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -36), 0, (("src/common/cset.mli", 13, 535, 535), ("src/common/cset.mli", 13, 535, 553), 0), 0, Tag1 ("Sedlex_utils__Cset", 2)), 0); (("max_code", 287), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -35), 0, (("src/common/cset.mli", 14, 554, 554), ("src/common/cset.mli", 14, 554, 572), 0), 0, Tag1 ("Sedlex_utils__Cset", 3)), 0); (("empty", 288), ((Tag3 ((("t", 284)), 0, (0)), 100000000, 0, -34), 0, (("src/common/cset.mli", 15, 573, 573), ("src/common/cset.mli", 15, 573, 586), 0), 0, Tag1 ("Sedlex_utils__Cset", 4)), 0); (("any", 289), ((Tag3 ((("t", 284)), 0, (0)), 100000000, 0, -33), 0, (("src/common/cset.mli", 16, 587, 587), ("src/common/cset.mli", 16, 587, 598), 0), 0, Tag1 ("Sedlex_utils__Cset", 5)), 0); (("union", 290), ((Tag1 (0, (Tag3 ((("t", 284)), 0, (0)), 100000000, 0, -32), (Tag1 (0, (Tag3 ((("t", 284)), 0, (0)), 100000000, 0, -31), (Tag3 ((("t", 284)), 0, (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("src/common/cset.mli", 17, 599, 599), ("src/common/cset.mli", 17, 599, 622), 0), 0, Tag1 ("Sedlex_utils__Cset", 6)), 0); (("union_list", 291), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 284)), 0, (0)), 100000000, 0, -27)], (0)), 100000000, 0, -26), (Tag3 ((("t", 284)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("src/common/cset.mli", 18, 623, 623), ("src/common/cset.mli", 18, 623, 651), 0), 0, Tag1 ("Sedlex_utils__Cset", 7)), 0); (("difference", 292), ((Tag1 (0, (Tag3 ((("t", 284)), 0, (0)), 100000000, 0, -23), (Tag1 (0, (Tag3 ((("t", 284)), 0, (0)), 100000000, 0, -22), (Tag3 ((("t", 284)), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("src/common/cset.mli", 19, 652, 652), ("src/common/cset.mli", 19, 652, 680), 0), 0, Tag1 ("Sedlex_utils__Cset", 8)), 0); (("intersection", 293), ((Tag1 (0, (Tag3 ((("t", 284)), 0, (0)), 100000000, 0, -18), (Tag1 (0, (Tag3 ((("t", 284)), 0, (0)), 100000000, 0, -17), (Tag3 ((("t", 284)), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("src/common/cset.mli", 20, 681, 681), ("src/common/cset.mli", 20, 681, 711), 0), 0, Tag1 ("Sedlex_utils__Cset", 9)), 0); (("is_empty", 294), ((Tag1 (0, (Tag3 ((("t", 284)), 0, (0)), 100000000, 0, -13), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("src/common/cset.mli", 21, 712, 712), ("src/common/cset.mli", 21, 712, 736), 0), 0, Tag1 ("Sedlex_utils__Cset", 10)), 0); (("eof", 295), ((Tag3 ((("t", 284)), 0, (0)), 100000000, 0, -10), 0, (("src/common/cset.mli", 22, 737, 737), ("src/common/cset.mli", 22, 737, 748), 0), 0, Tag1 ("Sedlex_utils__Cset", 11)), 0); (("singleton", 296), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -9), (Tag3 ((("t", 284)), 0, (0)), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("src/common/cset.mli", 23, 749, 749), ("src/common/cset.mli", 23, 749, 773), 0), 0, Tag1 ("Sedlex_utils__Cset", 12)), 0); (("interval", 297), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -5), (Tag3 ((("t", 284)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/common/cset.mli", 24, 774, 774), ("src/common/cset.mli", 24, 774, 804), 0), 0, Tag1 ("Sedlex_utils__Cset", 13)), 0)], "Sedlex_utils__Cset", [("Sedlex_utils__Cset", ("}d\168\131\017;\022\025jEk\164\007\219ht")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sedlex_utils", ("J\240\251\142\216Q\237\167\022\002\162)L\1931\176")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val interval : int -> int -> t
