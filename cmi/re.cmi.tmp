type t = Re__Core.t
type re = Re__Core.re
module Group = Re__Core.Group
type groups = Group.t
val compile : t -> re
val group_count : re -> int
val group_names : re -> (string * int) list
val exec : ?pos:int -> ?len:int -> re -> string -> Group.t
val exec_opt : ?pos:int -> ?len:int -> re -> string -> Group.t option
val execp : ?pos:int -> ?len:int -> re -> string -> bool
val exec_partial :
  ?pos:int -> ?len:int -> re -> string -> [ `Full | `Mismatch | `Partial ]
val exec_partial_detailed :
  ?pos:int ->
  ?len:int ->
  re -> string -> [ `Full of Group.t | `Mismatch | `Partial of int ]
module Mark = Re__Core.Mark
type split_token = [ `Delim of Group.t | `Text of string ]
val all : ?pos:int -> ?len:int -> re -> string -> Group.t list
type 'a gen = unit -> 'a option
val all_gen : ?pos:int -> ?len:int -> re -> string -> Group.t gen
val all_seq : ?pos:int -> ?len:int -> re -> string -> Group.t Seq.t
val matches : ?pos:int -> ?len:int -> re -> string -> string list
val matches_gen : ?pos:int -> ?len:int -> re -> string -> string gen
val matches_seq : ?pos:int -> ?len:int -> re -> string -> string Seq.t
val split : ?pos:int -> ?len:int -> re -> string -> string list
val split_gen : ?pos:int -> ?len:int -> re -> string -> string gen
val split_seq : ?pos:int -> ?len:int -> re -> string -> string Seq.t
val split_full : ?pos:int -> ?len:int -> re -> string -> split_token list
val split_full_gen : ?pos:int -> ?len:int -> re -> string -> split_token gen
val split_full_seq :
  ?pos:int -> ?len:int -> re -> string -> split_token Seq.t
module Seq = Re__Core.Seq
val replace :
  ?pos:int ->
  ?len:int -> ?all:bool -> re -> f:(Group.t -> string) -> string -> string
val replace_string :
  ?pos:int -> ?len:int -> ?all:bool -> re -> by:string -> string -> string
val str : string -> t
val char : char -> t
val alt : t list -> t
val seq : t list -> t
val empty : t
val epsilon : t
val rep : t -> t
val rep1 : t -> t
val repn : t -> int -> int option -> t
val opt : t -> t
val bol : t
val eol : t
val bow : t
val eow : t
val bos : t
val eos : t
val leol : t
val start : t
val stop : t
val word : t -> t
val not_boundary : t
val whole_string : t -> t
val longest : t -> t
val shortest : t -> t
val first : t -> t
val greedy : t -> t
val non_greedy : t -> t
val group : ?name:string -> t -> t
val no_group : t -> t
val nest : t -> t
val mark : t -> Mark.t * t
val set : string -> t
val rg : char -> char -> t
val inter : t list -> t
val diff : t -> t -> t
val compl : t list -> t
val any : t
val notnl : t
val alnum : t
val wordc : t
val alpha : t
val ascii : t
val blank : t
val cntrl : t
val digit : t
val graph : t
val lower : t
val print : t
val punct : t
val space : t
val upper : t
val xdigit : t
val case : t -> t
val no_case : t -> t
val pp : Format.formatter -> t -> unit
val pp_re : Format.formatter -> re -> unit
val print_re : Format.formatter -> re -> unit
module View = Re__Core.View
val witness : t -> string
type substrings = Group.t
val get : Group.t -> int -> string
val get_ofs : Group.t -> int -> int * int
val get_all : Group.t -> string array
val get_all_ofs : Group.t -> (int * int) array
val test : Group.t -> int -> bool
type markid = Mark.t
val marked : Group.t -> Mark.t -> bool
val mark_set : Group.t -> Mark.Set.t
module Emacs = Re__.Emacs
module Glob = Re__.Glob
module Perl = Re__.Perl
module Pcre = Re__.Pcre
module Posix = Re__.Posix("DEBUG:rule", [Tag1 (("t", 739), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Re__Core")), "t"), 0, (0)), 100000000, 0, -441)), 0, 0, 0, 0, (("lib/core.mli", 26, 1004, 1004), ("lib/core.mli", 26, 1004, 1010), 0), 0, 0, 0, Tag1 ("Re__Core", 0)), 1, 0); Tag1 (("re", 740), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Re__Core")), "re"), 0, (0)), 100000000, 0, -440)), 0, 0, 0, 0, (("lib/core.mli", 29, 1038, 1038), ("lib/core.mli", 29, 1038, 1045), 0), 0, 0, 0, Tag1 ("Re__Core", 1)), 1, 0); Tag3 (("Group", 741), 0, (Tag3 (Tag1 ((Tag2 ("Re__Core")), "Group")), 0, (("lib/core.mli", 33, 1117, 1117), ("lib/core.mli", 68, 2312, 2315), 0), Tag1 ("Re__Core", 13)), 0, 0); Tag1 (("groups", 742), (0, 0, 0, 1, ((Tag3 (Tag1 ((("Group", 741)), "t"), 0, (0)), 100000000, 0, -439)), 0, 0, 0, 0, (("lib/core.mli", 69, 2316, 2316), ("lib/core.mli", 69, 2316, 2372), 0), [(("ocaml.deprecated", (("lib/core.mli", 69, 2316, 2341), ("lib/core.mli", 69, 2316, 2357), 0)), ([([(Tag1 (Tag2 ("Use Group.t", (("lib/core.mli", 69, 2316, 2359), ("lib/core.mli", 69, 2316, 2370), 0), 0)), (("lib/core.mli", 69, 2316, 2358), ("lib/core.mli", 69, 2316, 2371), 0), 0, 0)], (("lib/core.mli", 69, 2316, 2358), ("lib/core.mli", 69, 2316, 2371), 0))]), (("lib/core.mli", 69, 2316, 2338), ("lib/core.mli", 69, 2316, 2372), 0))], 0, 0, Tag1 ("Re__Core", 14)), 1, 0); (("compile", 743), ((Tag1 (0, (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -438), (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -437), 0), 100000000, 0, -436), 0, (("lib/core.mli", 73, 2436, 2436), ("lib/core.mli", 73, 2436, 2457), 0), 0, Tag1 ("Re__Core", 15)), 0); (("group_count", 744), ((Tag1 (0, (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -435), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -434), 0), 100000000, 0, -433), 0, (("lib/core.mli", 77, 2580, 2580), ("lib/core.mli", 77, 2580, 2607), 0), 0, Tag1 ("Re__Core", 16)), 0); (("group_names", 745), ((Tag1 (0, (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -432), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -430); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -431)]), 100000000, 0, -429)], (0)), 100000000, 0, -428), 0), 100000000, 0, -427), 0, (("lib/core.mli", 81, 2712, 2712), ("lib/core.mli", 81, 2712, 2755), 0), 0, Tag1 ("Re__Core", 17)), 0); (("exec", 746), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -426)], (0)), 100000000, 0, -425), (Tag1 (Tag1 ("len"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -424)], (0)), 100000000, 0, -423), (Tag1 (0, (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -422), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -421), (Tag3 (Tag1 ((("Group", 741)), "t"), 0, (0)), 100000000, 0, -420), 0), 100000000, 0, -419), 0), 100000000, 0, -418), 0), 100000000, 0, -417), 0), 100000000, 0, -416), 0, (("lib/core.mli", 84, 2810, 2810), ("lib/core.mli", 87, 2914, 2939), 0), 0, Tag1 ("Re__Core", 18)), 0); (("exec_opt", 747), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -415)], (0)), 100000000, 0, -414), (Tag1 (Tag1 ("len"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -413)], (0)), 100000000, 0, -412), (Tag1 (0, (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -411), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -410), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Group", 741)), "t"), 0, (0)), 100000000, 0, -409)], (0)), 100000000, 0, -408), 0), 100000000, 0, -407), 0), 100000000, 0, -406), 0), 100000000, 0, -405), 0), 100000000, 0, -404), 0, (("lib/core.mli", 118, 3923, 3923), ("lib/core.mli", 121, 4031, 4063), 0), 0, Tag1 ("Re__Core", 19)), 0); (("execp", 748), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -403)], (0)), 100000000, 0, -402), (Tag1 (Tag1 ("len"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -401)], (0)), 100000000, 0, -400), (Tag1 (0, (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -399), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -398), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -397), 0), 100000000, 0, -396), 0), 100000000, 0, -395), 0), 100000000, 0, -394), 0), 100000000, 0, -393), 0, (("lib/core.mli", 140, 4557, 4557), ("lib/core.mli", 143, 4662, 4684), 0), 0, Tag1 ("Re__Core", 20)), 0); (("exec_partial", 749), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -392)], (0)), 100000000, 0, -391), (Tag1 (Tag1 ("len"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -390)], (0)), 100000000, 0, -389), (Tag1 (0, (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -388), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -387), (Tag8 (([("Full", (0)); ("Mismatch", (0)); ("Partial", (0))], (0, 100000000, 0, -386), 1, 0, 0)), 100000000, 0, -385), 0), 100000000, 0, -384), 0), 100000000, 0, -383), 0), 100000000, 0, -382), 0), 100000000, 0, -381), 0, (("lib/core.mli", 161, 5175, 5175), ("lib/core.mli", 164, 5287, 5337), 0), 0, Tag1 ("Re__Core", 21)), 0); (("exec_partial_detailed", 750), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -380)], (0)), 100000000, 0, -379), (Tag1 (Tag1 ("len"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -378)], (0)), 100000000, 0, -377), (Tag1 (0, (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -376), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -375), (Tag8 (([("Full", (((Tag3 (Tag1 ((("Group", 741)), "t"), 0, (0)), 100000000, 0, -373)))); ("Mismatch", (0)); ("Partial", (((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -374))))], (0, 100000000, 0, -372), 1, 0, 0)), 100000000, 0, -371), 0), 100000000, 0, -370), 0), 100000000, 0, -369), 0), 100000000, 0, -368), 0), 100000000, 0, -367), 0, (("lib/core.mli", 188, 6121, 6121), ("lib/core.mli", 191, 6242, 6310), 0), 0, Tag1 ("Re__Core", 22)), 0); Tag3 (("Mark", 751), 0, (Tag3 (Tag1 ((Tag2 ("Re__Core")), "Mark")), 0, (("lib/core.mli", 201, 6801, 6801), ("lib/core.mli", 217, 7087, 7090), 0), Tag1 ("Re__Core", 30)), 0, 0); Tag1 (("split_token", 752), (0, 0, 0, 1, ((Tag8 (([("Delim", (((Tag3 (Tag1 ((("Group", 741)), "t"), 0, (0)), 100000000, 0, -365)))); ("Text", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -366))))], (0, 100000000, 0, -364), 1, 0, 0)), 100000000, 0, -363)), 0, 0, 0, 0, (("lib/core.mli", 221, 7126, 7126), ("lib/core.mli", 224, 7236, 7239), 0), 0, 0, 0, Tag1 ("Re__Core", 31)), 1, 0); (("all", 753), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -362)], (0)), 100000000, 0, -361), (Tag1 (Tag1 ("len"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -360)], (0)), 100000000, 0, -359), (Tag1 (0, (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -358), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -357), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Group", 741)), "t"), 0, (0)), 100000000, 0, -356)], (0)), 100000000, 0, -355), 0), 100000000, 0, -354), 0), 100000000, 0, -353), 0), 100000000, 0, -352), 0), 100000000, 0, -351), 0, (("lib/core.mli", 226, 7241, 7241), ("lib/core.mli", 226, 7241, 7303), 0), 0, Tag1 ("Re__Core", 32)), 0); Tag1 (("gen", 754), ([((("a")), 100000000, 0, -349)], 1, 0, 1, ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -350), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -349)], (0)), 100000000, 0, -348), 0), 100000000, 0, -347)), [25], [0], 0, 0, (("lib/core.mli", 243, 7802, 7802), ("lib/core.mli", 243, 7802, 7833), 0), 0, 0, 0, Tag1 ("Re__Core", 33)), 1, 0); (("all_gen", 755), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -346)], (0)), 100000000, 0, -345), (Tag1 (Tag1 ("len"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -344)], (0)), 100000000, 0, -343), (Tag1 (0, (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -342), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -341), (Tag3 ((("gen", 754)), [(Tag3 (Tag1 ((("Group", 741)), "t"), 0, (0)), 100000000, 0, -340)], (0)), 100000000, 0, -339), 0), 100000000, 0, -338), 0), 100000000, 0, -337), 0), 100000000, 0, -336), 0), 100000000, 0, -335), 0, (("lib/core.mli", 245, 7835, 7835), ("lib/core.mli", 246, 7901, 7935), 0), [(("ocaml.deprecated", (("lib/core.mli", 246, 7901, 7904), ("lib/core.mli", 246, 7901, 7920), 0)), ([([(Tag1 (Tag2 ("Use Seq.all", (("lib/core.mli", 246, 7901, 7922), ("lib/core.mli", 246, 7901, 7933), 0), 0)), (("lib/core.mli", 246, 7901, 7921), ("lib/core.mli", 246, 7901, 7934), 0), 0, 0)], (("lib/core.mli", 246, 7901, 7921), ("lib/core.mli", 246, 7901, 7934), 0))]), (("lib/core.mli", 246, 7901, 7901), ("lib/core.mli", 246, 7901, 7935), 0))], Tag1 ("Re__Core", 34)), 0); (("all_seq", 756), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -334)], (0)), 100000000, 0, -333), (Tag1 (Tag1 ("len"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -332)], (0)), 100000000, 0, -331), (Tag1 (0, (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -330), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -329), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 (Tag1 ((("Group", 741)), "t"), 0, (0)), 100000000, 0, -328)], (0)), 100000000, 0, -327), 0), 100000000, 0, -326), 0), 100000000, 0, -325), 0), 100000000, 0, -324), 0), 100000000, 0, -323), 0, (("lib/core.mli", 249, 7987, 7987), ("lib/core.mli", 250, 8055, 8089), 0), [(("ocaml.deprecated", (("lib/core.mli", 250, 8055, 8058), ("lib/core.mli", 250, 8055, 8074), 0)), ([([(Tag1 (Tag2 ("Use Seq.all", (("lib/core.mli", 250, 8055, 8076), ("lib/core.mli", 250, 8055, 8087), 0), 0)), (("lib/core.mli", 250, 8055, 8075), ("lib/core.mli", 250, 8055, 8088), 0), 0, 0)], (("lib/core.mli", 250, 8055, 8075), ("lib/core.mli", 250, 8055, 8088), 0))]), (("lib/core.mli", 250, 8055, 8055), ("lib/core.mli", 250, 8055, 8089), 0))], Tag1 ("Re__Core", 35)), 0); (("matches", 757), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -322)], (0)), 100000000, 0, -321), (Tag1 (Tag1 ("len"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -320)], (0)), 100000000, 0, -319), (Tag1 (0, (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -318), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -317), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -316)], (0)), 100000000, 0, -315), 0), 100000000, 0, -314), 0), 100000000, 0, -313), 0), 100000000, 0, -312), 0), 100000000, 0, -311), 0, (("lib/core.mli", 253, 8141, 8141), ("lib/core.mli", 253, 8141, 8206), 0), 0, Tag1 ("Re__Core", 36)), 0); (("matches_gen", 758), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -310)], (0)), 100000000, 0, -309), (Tag1 (Tag1 ("len"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -308)], (0)), 100000000, 0, -307), (Tag1 (0, (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -306), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -305), (Tag3 ((("gen", 754)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -304)], (0)), 100000000, 0, -303), 0), 100000000, 0, -302), 0), 100000000, 0, -301), 0), 100000000, 0, -300), 0), 100000000, 0, -299), 0, (("lib/core.mli", 276, 8990, 8990), ("lib/core.mli", 277, 9059, 9097), 0), [(("ocaml.deprecated", (("lib/core.mli", 277, 9059, 9062), ("lib/core.mli", 277, 9059, 9078), 0)), ([([(Tag1 (Tag2 ("Use Seq.matches", (("lib/core.mli", 277, 9059, 9080), ("lib/core.mli", 277, 9059, 9095), 0), 0)), (("lib/core.mli", 277, 9059, 9079), ("lib/core.mli", 277, 9059, 9096), 0), 0, 0)], (("lib/core.mli", 277, 9059, 9079), ("lib/core.mli", 277, 9059, 9096), 0))]), (("lib/core.mli", 277, 9059, 9059), ("lib/core.mli", 277, 9059, 9097), 0))], Tag1 ("Re__Core", 37)), 0); (("matches_seq", 759), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -298)], (0)), 100000000, 0, -297), (Tag1 (Tag1 ("len"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -296)], (0)), 100000000, 0, -295), (Tag1 (0, (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -294), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -293), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -292)], (0)), 100000000, 0, -291), 0), 100000000, 0, -290), 0), 100000000, 0, -289), 0), 100000000, 0, -288), 0), 100000000, 0, -287), 0, (("lib/core.mli", 280, 9153, 9153), ("lib/core.mli", 281, 9224, 9262), 0), [(("ocaml.deprecated", (("lib/core.mli", 281, 9224, 9227), ("lib/core.mli", 281, 9224, 9243), 0)), ([([(Tag1 (Tag2 ("Use Seq.matches", (("lib/core.mli", 281, 9224, 9245), ("lib/core.mli", 281, 9224, 9260), 0), 0)), (("lib/core.mli", 281, 9224, 9244), ("lib/core.mli", 281, 9224, 9261), 0), 0, 0)], (("lib/core.mli", 281, 9224, 9244), ("lib/core.mli", 281, 9224, 9261), 0))]), (("lib/core.mli", 281, 9224, 9224), ("lib/core.mli", 281, 9224, 9262), 0))], Tag1 ("Re__Core", 38)), 0); (("split", 760), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -286)], (0)), 100000000, 0, -285), (Tag1 (Tag1 ("len"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -284)], (0)), 100000000, 0, -283), (Tag1 (0, (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -282), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -281), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -280)], (0)), 100000000, 0, -279), 0), 100000000, 0, -278), 0), 100000000, 0, -277), 0), 100000000, 0, -276), 0), 100000000, 0, -275), 0, (("lib/core.mli", 284, 9318, 9318), ("lib/core.mli", 284, 9318, 9381), 0), 0, Tag1 ("Re__Core", 39)), 0); (("split_gen", 761), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -274)], (0)), 100000000, 0, -273), (Tag1 (Tag1 ("len"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -272)], (0)), 100000000, 0, -271), (Tag1 (0, (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -270), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -269), (Tag3 ((("gen", 754)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -268)], (0)), 100000000, 0, -267), 0), 100000000, 0, -266), 0), 100000000, 0, -265), 0), 100000000, 0, -264), 0), 100000000, 0, -263), 0, (("lib/core.mli", 304, 9964, 9964), ("lib/core.mli", 305, 10031, 10067), 0), [(("ocaml.deprecated", (("lib/core.mli", 305, 10031, 10034), ("lib/core.mli", 305, 10031, 10050), 0)), ([([(Tag1 (Tag2 ("Use Seq.split", (("lib/core.mli", 305, 10031, 10052), ("lib/core.mli", 305, 10031, 10065), 0), 0)), (("lib/core.mli", 305, 10031, 10051), ("lib/core.mli", 305, 10031, 10066), 0), 0, 0)], (("lib/core.mli", 305, 10031, 10051), ("lib/core.mli", 305, 10031, 10066), 0))]), (("lib/core.mli", 305, 10031, 10031), ("lib/core.mli", 305, 10031, 10067), 0))], Tag1 ("Re__Core", 40)), 0); (("split_seq", 762), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -262)], (0)), 100000000, 0, -261), (Tag1 (Tag1 ("len"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -260)], (0)), 100000000, 0, -259), (Tag1 (0, (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -258), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -257), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -256)], (0)), 100000000, 0, -255), 0), 100000000, 0, -254), 0), 100000000, 0, -253), 0), 100000000, 0, -252), 0), 100000000, 0, -251), 0, (("lib/core.mli", 308, 10121, 10121), ("lib/core.mli", 309, 10190, 10226), 0), [(("ocaml.deprecated", (("lib/core.mli", 309, 10190, 10193), ("lib/core.mli", 309, 10190, 10209), 0)), ([([(Tag1 (Tag2 ("Use Seq.split", (("lib/core.mli", 309, 10190, 10211), ("lib/core.mli", 309, 10190, 10224), 0), 0)), (("lib/core.mli", 309, 10190, 10210), ("lib/core.mli", 309, 10190, 10225), 0), 0, 0)], (("lib/core.mli", 309, 10190, 10210), ("lib/core.mli", 309, 10190, 10225), 0))]), (("lib/core.mli", 309, 10190, 10190), ("lib/core.mli", 309, 10190, 10226), 0))], Tag1 ("Re__Core", 41)), 0); (("split_full", 763), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -250)], (0)), 100000000, 0, -249), (Tag1 (Tag1 ("len"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -248)], (0)), 100000000, 0, -247), (Tag1 (0, (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -246), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -245), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("split_token", 752)), 0, (0)), 100000000, 0, -244)], (0)), 100000000, 0, -243), 0), 100000000, 0, -242), 0), 100000000, 0, -241), 0), 100000000, 0, -240), 0), 100000000, 0, -239), 0, (("lib/core.mli", 312, 10280, 10280), ("lib/core.mli", 312, 10280, 10353), 0), 0, Tag1 ("Re__Core", 42)), 0); (("split_full_gen", 764), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -238)], (0)), 100000000, 0, -237), (Tag1 (Tag1 ("len"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -236)], (0)), 100000000, 0, -235), (Tag1 (0, (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -234), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -233), (Tag3 ((("gen", 754)), [(Tag3 ((("split_token", 752)), 0, (0)), 100000000, 0, -232)], (0)), 100000000, 0, -231), 0), 100000000, 0, -230), 0), 100000000, 0, -229), 0), 100000000, 0, -228), 0), 100000000, 0, -227), 0, (("lib/core.mli", 336, 11185, 11185), ("lib/core.mli", 337, 11262, 11303), 0), [(("ocaml.deprecated", (("lib/core.mli", 337, 11262, 11265), ("lib/core.mli", 337, 11262, 11281), 0)), ([([(Tag1 (Tag2 ("Use Seq.split_full", (("lib/core.mli", 337, 11262, 11283), ("lib/core.mli", 337, 11262, 11301), 0), 0)), (("lib/core.mli", 337, 11262, 11282), ("lib/core.mli", 337, 11262, 11302), 0), 0, 0)], (("lib/core.mli", 337, 11262, 11282), ("lib/core.mli", 337, 11262, 11302), 0))]), (("lib/core.mli", 337, 11262, 11262), ("lib/core.mli", 337, 11262, 11303), 0))], Tag1 ("Re__Core", 43)), 0); (("split_full_seq", 765), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -226)], (0)), 100000000, 0, -225), (Tag1 (Tag1 ("len"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -224)], (0)), 100000000, 0, -223), (Tag1 (0, (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -222), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -221), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((("split_token", 752)), 0, (0)), 100000000, 0, -220)], (0)), 100000000, 0, -219), 0), 100000000, 0, -218), 0), 100000000, 0, -217), 0), 100000000, 0, -216), 0), 100000000, 0, -215), 0, (("lib/core.mli", 340, 11362, 11362), ("lib/core.mli", 341, 11441, 11482), 0), [(("ocaml.deprecated", (("lib/core.mli", 341, 11441, 11444), ("lib/core.mli", 341, 11441, 11460), 0)), ([([(Tag1 (Tag2 ("Use Seq.split_full", (("lib/core.mli", 341, 11441, 11462), ("lib/core.mli", 341, 11441, 11480), 0), 0)), (("lib/core.mli", 341, 11441, 11461), ("lib/core.mli", 341, 11441, 11481), 0), 0, 0)], (("lib/core.mli", 341, 11441, 11461), ("lib/core.mli", 341, 11441, 11481), 0))]), (("lib/core.mli", 341, 11441, 11441), ("lib/core.mli", 341, 11441, 11482), 0))], Tag1 ("Re__Core", 44)), 0); Tag3 (("Seq", 766), 0, (Tag3 (Tag1 ((Tag2 ("Re__Core")), "Seq")), 0, (("lib/core.mli", 344, 11541, 11541), ("lib/core.mli", 408, 13285, 13288), 0), Tag1 ("Re__Core", 49)), 0, 0); (("replace", 767), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -214)], (0)), 100000000, 0, -213), (Tag1 (Tag1 ("len"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -212)], (0)), 100000000, 0, -211), (Tag1 (Tag1 ("all"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -210)], (0)), 100000000, 0, -209), (Tag1 (0, (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -208), (Tag1 (("f"), (Tag1 (0, (Tag3 (Tag1 ((("Group", 741)), "t"), 0, (0)), 100000000, 0, -207), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -206), 0), 100000000, 0, -205), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -204), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -203), 0), 100000000, 0, -202), 0), 100000000, 0, -201), 0), 100000000, 0, -200), 0), 100000000, 0, -199), 0), 100000000, 0, -198), 0), 100000000, 0, -197), 0, (("lib/core.mli", 410, 13290, 13290), ("lib/core.mli", 417, 13565, 13573), 0), 0, Tag1 ("Re__Core", 50)), 0); (("replace_string", 768), ((Tag1 (Tag1 ("pos"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -196)], (0)), 100000000, 0, -195), (Tag1 (Tag1 ("len"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -194)], (0)), 100000000, 0, -193), (Tag1 (Tag1 ("all"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -192)], (0)), 100000000, 0, -191), (Tag1 (0, (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -190), (Tag1 (("by"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -189), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -188), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -187), 0), 100000000, 0, -186), 0), 100000000, 0, -185), 0), 100000000, 0, -184), 0), 100000000, 0, -183), 0), 100000000, 0, -182), 0), 100000000, 0, -181), 0, (("lib/core.mli", 422, 13797, 13797), ("lib/core.mli", 429, 14073, 14081), 0), 0, Tag1 ("Re__Core", 51)), 0); (("str", 769), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -180), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -179), 0), 100000000, 0, -178), 0, (("lib/core.mli", 449, 14647, 14647), ("lib/core.mli", 449, 14647, 14668), 0), 0, Tag1 ("Re__Core", 52)), 0); (("char", 770), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -177), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -176), 0), 100000000, 0, -175), 0, (("lib/core.mli", 450, 14669, 14669), ("lib/core.mli", 450, 14669, 14689), 0), 0, Tag1 ("Re__Core", 53)), 0); (("alt", 771), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -174)], (0)), 100000000, 0, -173), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -172), 0), 100000000, 0, -171), 0, (("lib/core.mli", 454, 14743, 14743), ("lib/core.mli", 454, 14743, 14764), 0), 0, Tag1 ("Re__Core", 54)), 0); (("seq", 772), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -170)], (0)), 100000000, 0, -169), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -168), 0), 100000000, 0, -167), 0, (("lib/core.mli", 462, 14905, 14905), ("lib/core.mli", 462, 14905, 14926), 0), 0, Tag1 ("Re__Core", 55)), 0); (("empty", 773), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -166), 0, (("lib/core.mli", 465, 14944, 14944), ("lib/core.mli", 465, 14944, 14957), 0), 0, Tag1 ("Re__Core", 56)), 0); (("epsilon", 774), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -165), 0, (("lib/core.mli", 468, 14980, 14980), ("lib/core.mli", 468, 14980, 14995), 0), 0, Tag1 ("Re__Core", 57)), 0); (("rep", 775), ((Tag1 (0, (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -164), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -163), 0), 100000000, 0, -162), 0, (("lib/core.mli", 471, 15015, 15015), ("lib/core.mli", 471, 15015, 15031), 0), 0, Tag1 ("Re__Core", 58)), 0); (("rep1", 776), ((Tag1 (0, (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -161), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -160), 0), 100000000, 0, -159), 0, (("lib/core.mli", 474, 15058, 15058), ("lib/core.mli", 474, 15058, 15075), 0), 0, Tag1 ("Re__Core", 59)), 0); (("repn", 777), ((Tag1 (0, (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -158), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -157), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -156)], (0)), 100000000, 0, -155), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -154), 0), 100000000, 0, -153), 0), 100000000, 0, -152), 0), 100000000, 0, -151), 0, (("lib/core.mli", 477, 15102, 15102), ("lib/core.mli", 477, 15102, 15140), 0), 0, Tag1 ("Re__Core", 60)), 0); (("opt", 778), ((Tag1 (0, (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -150), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -149), 0), 100000000, 0, -148), 0, (("lib/core.mli", 483, 15276, 15276), ("lib/core.mli", 483, 15276, 15292), 0), 0, Tag1 ("Re__Core", 61)), 0); (("bol", 779), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -147), 0, (("lib/core.mli", 491, 15425, 15425), ("lib/core.mli", 491, 15425, 15436), 0), 0, Tag1 ("Re__Core", 62)), 0); (("eol", 780), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -146), 0, (("lib/core.mli", 494, 15463, 15463), ("lib/core.mli", 494, 15463, 15474), 0), 0, Tag1 ("Re__Core", 63)), 0); (("bow", 781), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -145), 0, (("lib/core.mli", 497, 15495, 15495), ("lib/core.mli", 497, 15495, 15506), 0), 0, Tag1 ("Re__Core", 64)), 0); (("eow", 782), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -144), 0, (("lib/core.mli", 500, 15533, 15533), ("lib/core.mli", 500, 15533, 15544), 0), 0, Tag1 ("Re__Core", 65)), 0); (("bos", 783), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -143), 0, (("lib/core.mli", 503, 15565, 15565), ("lib/core.mli", 503, 15565, 15576), 0), 0, Tag1 ("Re__Core", 66)), 0); (("eos", 784), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -142), 0, (("lib/core.mli", 513, 15828, 15828), ("lib/core.mli", 513, 15828, 15839), 0), 0, Tag1 ("Re__Core", 67)), 0); (("leol", 785), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -141), 0, (("lib/core.mli", 517, 15930, 15930), ("lib/core.mli", 517, 15930, 15942), 0), 0, Tag1 ("Re__Core", 68)), 0); (("start", 786), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -140), 0, (("lib/core.mli", 520, 15985, 15985), ("lib/core.mli", 520, 15985, 15998), 0), 0, Tag1 ("Re__Core", 69)), 0); (("stop", 787), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -139), 0, (("lib/core.mli", 530, 16206, 16206), ("lib/core.mli", 530, 16206, 16218), 0), 0, Tag1 ("Re__Core", 70)), 0); (("word", 788), ((Tag1 (0, (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -138), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -137), 0), 100000000, 0, -136), 0, (("lib/core.mli", 534, 16311, 16311), ("lib/core.mli", 534, 16311, 16328), 0), 0, Tag1 ("Re__Core", 71)), 0); (("not_boundary", 789), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -135), 0, (("lib/core.mli", 537, 16342, 16342), ("lib/core.mli", 537, 16342, 16362), 0), 0, Tag1 ("Re__Core", 72)), 0); (("whole_string", 790), ((Tag1 (0, (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -134), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -133), 0), 100000000, 0, -132), 0, (("lib/core.mli", 540, 16394, 16394), ("lib/core.mli", 540, 16394, 16419), 0), 0, Tag1 ("Re__Core", 73)), 0); (("longest", 791), ((Tag1 (0, (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -131), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -130), 0), 100000000, 0, -129), 0, (("lib/core.mli", 565, 17552, 17552), ("lib/core.mli", 565, 17552, 17572), 0), 0, Tag1 ("Re__Core", 74)), 0); (("shortest", 792), ((Tag1 (0, (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -128), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -127), 0), 100000000, 0, -126), 0, (("lib/core.mli", 570, 17783, 17783), ("lib/core.mli", 570, 17783, 17804), 0), 0, Tag1 ("Re__Core", 75)), 0); (("first", 793), ((Tag1 (0, (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -125), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -124), 0), 100000000, 0, -123), 0, (("lib/core.mli", 573, 17873, 17873), ("lib/core.mli", 573, 17873, 17891), 0), 0, Tag1 ("Re__Core", 76)), 0); (("greedy", 794), ((Tag1 (0, (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -122), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -121), 0), 100000000, 0, -120), 0, (("lib/core.mli", 577, 18053, 18053), ("lib/core.mli", 577, 18053, 18072), 0), 0, Tag1 ("Re__Core", 77)), 0); (("non_greedy", 795), ((Tag1 (0, (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -119), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -118), 0), 100000000, 0, -117), 0, (("lib/core.mli", 581, 18195, 18195), ("lib/core.mli", 581, 18195, 18218), 0), 0, Tag1 ("Re__Core", 78)), 0); (("group", 796), ((Tag1 (Tag1 ("name"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -116)], (0)), 100000000, 0, -115), (Tag1 (0, (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -114), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -113), 0), 100000000, 0, -112), 0), 100000000, 0, -111), 0, (("lib/core.mli", 587, 18379, 18379), ("lib/core.mli", 587, 18379, 18413), 0), 0, Tag1 ("Re__Core", 79)), 0); (("no_group", 797), ((Tag1 (0, (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -110), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -109), 0), 100000000, 0, -108), 0, (("lib/core.mli", 593, 18653, 18653), ("lib/core.mli", 593, 18653, 18674), 0), 0, Tag1 ("Re__Core", 80)), 0); (("nest", 798), ((Tag1 (0, (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -107), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -106), 0), 100000000, 0, -105), 0, (("lib/core.mli", 596, 18701, 18701), ("lib/core.mli", 596, 18701, 18718), 0), 0, Tag1 ("Re__Core", 81)), 0); (("mark", 799), ((Tag1 (0, (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -104), (Tag2 ([(Tag3 (Tag1 ((("Mark", 751)), "t"), 0, (0)), 100000000, 0, -102); (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -103)]), 100000000, 0, -101), 0), 100000000, 0, -100), 0, (("lib/core.mli", 615, 19231, 19231), ("lib/core.mli", 615, 19231, 19257), 0), 0, Tag1 ("Re__Core", 82)), 0); (("set", 800), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -99), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -98), 0), 100000000, 0, -97), 0, (("lib/core.mli", 620, 19369, 19369), ("lib/core.mli", 620, 19369, 19390), 0), 0, Tag1 ("Re__Core", 83)), 0); (("rg", 801), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -96), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -95), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -94), 0), 100000000, 0, -93), 0), 100000000, 0, -92), 0, (("lib/core.mli", 623, 19427, 19427), ("lib/core.mli", 623, 19427, 19453), 0), 0, Tag1 ("Re__Core", 84)), 0); (("inter", 802), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -91)], (0)), 100000000, 0, -90), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -89), 0), 100000000, 0, -88), 0, (("lib/core.mli", 626, 19479, 19479), ("lib/core.mli", 626, 19479, 19502), 0), 0, Tag1 ("Re__Core", 85)), 0); (("diff", 803), ((Tag1 (0, (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -87), (Tag1 (0, (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -86), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -85), 0), 100000000, 0, -84), 0), 100000000, 0, -83), 0, (("lib/core.mli", 629, 19542, 19542), ("lib/core.mli", 629, 19542, 19564), 0), 0, Tag1 ("Re__Core", 86)), 0); (("compl", 804), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -82)], (0)), 100000000, 0, -81), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -80), 0), 100000000, 0, -79), 0, (("lib/core.mli", 632, 19602, 19602), ("lib/core.mli", 632, 19602, 19625), 0), 0, Tag1 ("Re__Core", 87)), 0); (("any", 805), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -78), 0, (("lib/core.mli", 637, 19692, 19692), ("lib/core.mli", 637, 19692, 19703), 0), 0, Tag1 ("Re__Core", 88)), 0); (("notnl", 806), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -77), 0, (("lib/core.mli", 640, 19726, 19726), ("lib/core.mli", 640, 19726, 19739), 0), 0, Tag1 ("Re__Core", 89)), 0); (("alnum", 807), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -76), 0, (("lib/core.mli", 643, 19776, 19776), ("lib/core.mli", 643, 19776, 19789), 0), 0, Tag1 ("Re__Core", 90)), 0); (("wordc", 808), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -75), 0, (("lib/core.mli", 644, 19790, 19790), ("lib/core.mli", 644, 19790, 19803), 0), 0, Tag1 ("Re__Core", 91)), 0); (("alpha", 809), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -74), 0, (("lib/core.mli", 645, 19804, 19804), ("lib/core.mli", 645, 19804, 19817), 0), 0, Tag1 ("Re__Core", 92)), 0); (("ascii", 810), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -73), 0, (("lib/core.mli", 646, 19818, 19818), ("lib/core.mli", 646, 19818, 19831), 0), 0, Tag1 ("Re__Core", 93)), 0); (("blank", 811), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -72), 0, (("lib/core.mli", 647, 19832, 19832), ("lib/core.mli", 647, 19832, 19845), 0), 0, Tag1 ("Re__Core", 94)), 0); (("cntrl", 812), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -71), 0, (("lib/core.mli", 648, 19846, 19846), ("lib/core.mli", 648, 19846, 19859), 0), 0, Tag1 ("Re__Core", 95)), 0); (("digit", 813), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -70), 0, (("lib/core.mli", 649, 19860, 19860), ("lib/core.mli", 649, 19860, 19873), 0), 0, Tag1 ("Re__Core", 96)), 0); (("graph", 814), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -69), 0, (("lib/core.mli", 650, 19874, 19874), ("lib/core.mli", 650, 19874, 19887), 0), 0, Tag1 ("Re__Core", 97)), 0); (("lower", 815), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -68), 0, (("lib/core.mli", 651, 19888, 19888), ("lib/core.mli", 651, 19888, 19901), 0), 0, Tag1 ("Re__Core", 98)), 0); (("print", 816), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -67), 0, (("lib/core.mli", 652, 19902, 19902), ("lib/core.mli", 652, 19902, 19915), 0), 0, Tag1 ("Re__Core", 99)), 0); (("punct", 817), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -66), 0, (("lib/core.mli", 653, 19916, 19916), ("lib/core.mli", 653, 19916, 19929), 0), 0, Tag1 ("Re__Core", 100)), 0); (("space", 818), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -65), 0, (("lib/core.mli", 654, 19930, 19930), ("lib/core.mli", 654, 19930, 19943), 0), 0, Tag1 ("Re__Core", 101)), 0); (("upper", 819), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -64), 0, (("lib/core.mli", 655, 19944, 19944), ("lib/core.mli", 655, 19944, 19957), 0), 0, Tag1 ("Re__Core", 102)), 0); (("xdigit", 820), ((Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -63), 0, (("lib/core.mli", 656, 19958, 19958), ("lib/core.mli", 656, 19958, 19972), 0), 0, Tag1 ("Re__Core", 103)), 0); (("case", 821), ((Tag1 (0, (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -62), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("lib/core.mli", 660, 20001, 20001), ("lib/core.mli", 660, 20001, 20018), 0), 0, Tag1 ("Re__Core", 104)), 0); (("no_case", 822), ((Tag1 (0, (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -59), (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0, (("lib/core.mli", 664, 20112, 20112), ("lib/core.mli", 664, 20112, 20132), 0), 0, Tag1 ("Re__Core", 105)), 0); (("pp", 823), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -56), (Tag1 (0, (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -55), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0, (("lib/core.mli", 672, 20268, 20268), ("lib/core.mli", 672, 20268, 20306), 0), 0, Tag1 ("Re__Core", 106)), 0); (("pp_re", 824), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -51), (Tag1 (0, (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -50), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -49), 0), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("lib/core.mli", 674, 20308, 20308), ("lib/core.mli", 674, 20308, 20350), 0), 0, Tag1 ("Re__Core", 107)), 0); (("print_re", 825), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -46), (Tag1 (0, (Tag3 ((("re", 740)), 0, (0)), 100000000, 0, -45), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("lib/core.mli", 677, 20390, 20390), ("lib/core.mli", 677, 20390, 20435), 0), 0, Tag1 ("Re__Core", 108)), 0); Tag3 (("View", 826), 0, (Tag3 (Tag1 ((Tag2 ("Re__Core")), "View")), 0, (("lib/core.mli", 679, 20437, 20437), ("lib/core.mli", 702, 21174, 21198), 0), Tag1 ("Re__Core", 138)), 0, 0); (("witness", 827), ((Tag1 (0, (Tag3 ((("t", 739)), 0, (0)), 100000000, 0, -41), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("lib/core.mli", 706, 21235, 21235), ("lib/core.mli", 706, 21235, 21260), 0), 0, Tag1 ("Re__Core", 139)), 0); Tag1 (("substrings", 828), (0, 0, 0, 1, ((Tag3 (Tag1 ((("Group", 741)), "t"), 0, (0)), 100000000, 0, -38)), 0, 0, 0, 0, (("lib/core.mli", 715, 21542, 21542), ("lib/core.mli", 716, 21568, 21602), 0), [(("ocaml.deprecated", (("lib/core.mli", 716, 21568, 21571), ("lib/core.mli", 716, 21568, 21587), 0)), ([([(Tag1 (Tag2 ("Use Group.t", (("lib/core.mli", 716, 21568, 21589), ("lib/core.mli", 716, 21568, 21600), 0), 0)), (("lib/core.mli", 716, 21568, 21588), ("lib/core.mli", 716, 21568, 21601), 0), 0, 0)], (("lib/core.mli", 716, 21568, 21588), ("lib/core.mli", 716, 21568, 21601), 0))]), (("lib/core.mli", 716, 21568, 21568), ("lib/core.mli", 716, 21568, 21602), 0))], 0, 0, Tag1 ("Re__Core", 140)), 1, 0); (("get", 829), ((Tag1 (0, (Tag3 (Tag1 ((("Group", 741)), "t"), 0, (0)), 100000000, 0, -37), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -36), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0, (("lib/core.mli", 719, 21644, 21644), ("lib/core.mli", 720, 21679, 21715), 0), [(("ocaml.deprecated", (("lib/core.mli", 720, 21679, 21682), ("lib/core.mli", 720, 21679, 21698), 0)), ([([(Tag1 (Tag2 ("Use Group.get", (("lib/core.mli", 720, 21679, 21700), ("lib/core.mli", 720, 21679, 21713), 0), 0)), (("lib/core.mli", 720, 21679, 21699), ("lib/core.mli", 720, 21679, 21714), 0), 0, 0)], (("lib/core.mli", 720, 21679, 21699), ("lib/core.mli", 720, 21679, 21714), 0))]), (("lib/core.mli", 720, 21679, 21679), ("lib/core.mli", 720, 21679, 21715), 0))], Tag1 ("Re__Core", 141)), 0); (("get_ofs", 830), ((Tag1 (0, (Tag3 (Tag1 ((("Group", 741)), "t"), 0, (0)), 100000000, 0, -32), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -31), (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -29); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -30)]), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("lib/core.mli", 723, 21757, 21757), ("lib/core.mli", 724, 21799, 21838), 0), [(("ocaml.deprecated", (("lib/core.mli", 724, 21799, 21802), ("lib/core.mli", 724, 21799, 21818), 0)), ([([(Tag1 (Tag2 ("Use Group.offset", (("lib/core.mli", 724, 21799, 21820), ("lib/core.mli", 724, 21799, 21836), 0), 0)), (("lib/core.mli", 724, 21799, 21819), ("lib/core.mli", 724, 21799, 21837), 0), 0, 0)], (("lib/core.mli", 724, 21799, 21819), ("lib/core.mli", 724, 21799, 21837), 0))]), (("lib/core.mli", 724, 21799, 21799), ("lib/core.mli", 724, 21799, 21838), 0))], Tag1 ("Re__Core", 142)), 0); (("get_all", 831), ((Tag1 (0, (Tag3 (Tag1 ((("Group", 741)), "t"), 0, (0)), 100000000, 0, -25), (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -24)], (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("lib/core.mli", 727, 21883, 21883), ("lib/core.mli", 728, 21921, 21957), 0), [(("ocaml.deprecated", (("lib/core.mli", 728, 21921, 21924), ("lib/core.mli", 728, 21921, 21940), 0)), ([([(Tag1 (Tag2 ("Use Group.all", (("lib/core.mli", 728, 21921, 21942), ("lib/core.mli", 728, 21921, 21955), 0), 0)), (("lib/core.mli", 728, 21921, 21941), ("lib/core.mli", 728, 21921, 21956), 0), 0, 0)], (("lib/core.mli", 728, 21921, 21941), ("lib/core.mli", 728, 21921, 21956), 0))]), (("lib/core.mli", 728, 21921, 21921), ("lib/core.mli", 728, 21921, 21957), 0))], Tag1 ("Re__Core", 143)), 0); (("get_all_ofs", 832), ((Tag1 (0, (Tag3 (Tag1 ((("Group", 741)), "t"), 0, (0)), 100000000, 0, -21), (Tag3 ((Tag3 ("array", 8)), [(Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -19); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -20)]), 100000000, 0, -18)], (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("lib/core.mli", 731, 21999, 21999), ("lib/core.mli", 732, 22046, 22089), 0), [(("ocaml.deprecated", (("lib/core.mli", 732, 22046, 22049), ("lib/core.mli", 732, 22046, 22065), 0)), ([([(Tag1 (Tag2 ("Use Group.all_offset", (("lib/core.mli", 732, 22046, 22067), ("lib/core.mli", 732, 22046, 22087), 0), 0)), (("lib/core.mli", 732, 22046, 22066), ("lib/core.mli", 732, 22046, 22088), 0), 0, 0)], (("lib/core.mli", 732, 22046, 22066), ("lib/core.mli", 732, 22046, 22088), 0))]), (("lib/core.mli", 732, 22046, 22046), ("lib/core.mli", 732, 22046, 22089), 0))], Tag1 ("Re__Core", 144)), 0); (("test", 833), ((Tag1 (0, (Tag3 (Tag1 ((("Group", 741)), "t"), 0, (0)), 100000000, 0, -15), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -14), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("lib/core.mli", 735, 22138, 22138), ("lib/core.mli", 736, 22172, 22209), 0), [(("ocaml.deprecated", (("lib/core.mli", 736, 22172, 22175), ("lib/core.mli", 736, 22172, 22191), 0)), ([([(Tag1 (Tag2 ("Use Group.test", (("lib/core.mli", 736, 22172, 22193), ("lib/core.mli", 736, 22172, 22207), 0), 0)), (("lib/core.mli", 736, 22172, 22192), ("lib/core.mli", 736, 22172, 22208), 0), 0, 0)], (("lib/core.mli", 736, 22172, 22192), ("lib/core.mli", 736, 22172, 22208), 0))]), (("lib/core.mli", 736, 22172, 22172), ("lib/core.mli", 736, 22172, 22209), 0))], Tag1 ("Re__Core", 145)), 0); Tag1 (("markid", 834), (0, 0, 0, 1, ((Tag3 (Tag1 ((("Mark", 751)), "t"), 0, (0)), 100000000, 0, -10)), 0, 0, 0, 0, (("lib/core.mli", 739, 22252, 22252), ("lib/core.mli", 740, 22273, 22305), 0), [(("ocaml.deprecated", (("lib/core.mli", 740, 22273, 22276), ("lib/core.mli", 740, 22273, 22292), 0)), ([([(Tag1 (Tag2 ("Use Mark.", (("lib/core.mli", 740, 22273, 22294), ("lib/core.mli", 740, 22273, 22303), 0), 0)), (("lib/core.mli", 740, 22273, 22293), ("lib/core.mli", 740, 22273, 22304), 0), 0, 0)], (("lib/core.mli", 740, 22273, 22293), ("lib/core.mli", 740, 22273, 22304), 0))]), (("lib/core.mli", 740, 22273, 22273), ("lib/core.mli", 740, 22273, 22305), 0))], 0, 0, Tag1 ("Re__Core", 146)), 1, 0); (("marked", 835), ((Tag1 (0, (Tag3 (Tag1 ((("Group", 741)), "t"), 0, (0)), 100000000, 0, -9), (Tag1 (0, (Tag3 (Tag1 ((("Mark", 751)), "t"), 0, (0)), 100000000, 0, -8), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("lib/core.mli", 743, 22346, 22346), ("lib/core.mli", 744, 22385, 22421), 0), [(("ocaml.deprecated", (("lib/core.mli", 744, 22385, 22388), ("lib/core.mli", 744, 22385, 22404), 0)), ([([(Tag1 (Tag2 ("Use Mark.test", (("lib/core.mli", 744, 22385, 22406), ("lib/core.mli", 744, 22385, 22419), 0), 0)), (("lib/core.mli", 744, 22385, 22405), ("lib/core.mli", 744, 22385, 22420), 0), 0, 0)], (("lib/core.mli", 744, 22385, 22405), ("lib/core.mli", 744, 22385, 22420), 0))]), (("lib/core.mli", 744, 22385, 22385), ("lib/core.mli", 744, 22385, 22421), 0))], Tag1 ("Re__Core", 147)), 0); (("mark_set", 836), ((Tag1 (0, (Tag3 (Tag1 ((("Group", 741)), "t"), 0, (0)), 100000000, 0, -4), (Tag3 (Tag1 (Tag1 ((("Mark", 751)), "Set"), "t"), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("lib/core.mli", 747, 22463, 22463), ("lib/core.mli", 748, 22500, 22535), 0), [(("ocaml.deprecated", (("lib/core.mli", 748, 22500, 22503), ("lib/core.mli", 748, 22500, 22519), 0)), ([([(Tag1 (Tag2 ("Use Mark.all", (("lib/core.mli", 748, 22500, 22521), ("lib/core.mli", 748, 22500, 22533), 0), 0)), (("lib/core.mli", 748, 22500, 22520), ("lib/core.mli", 748, 22500, 22534), 0), 0, 0)], (("lib/core.mli", 748, 22500, 22520), ("lib/core.mli", 748, 22500, 22534), 0))]), (("lib/core.mli", 748, 22500, 22500), ("lib/core.mli", 748, 22500, 22535), 0))], Tag1 ("Re__Core", 148)), 0); Tag3 (("Emacs", 837), 1, (Tag3 (Tag1 ((Tag2 ("Re__")), "Emacs")), 0, (("lib/re.ml", 3, 14, 14), ("lib/re.ml", 3, 14, 34), 0), Tag1 ("Re", 0)), 0, 0); Tag3 (("Glob", 838), 1, (Tag3 (Tag1 ((Tag2 ("Re__")), "Glob")), 0, (("lib/re.ml", 4, 35, 35), ("lib/re.ml", 4, 35, 53), 0), Tag1 ("Re", 1)), 0, 0); Tag3 (("Perl", 839), 1, (Tag3 (Tag1 ((Tag2 ("Re__")), "Perl")), 0, (("lib/re.ml", 5, 54, 54), ("lib/re.ml", 5, 54, 72), 0), Tag1 ("Re", 2)), 0, 0); Tag3 (("Pcre", 840), 1, (Tag3 (Tag1 ((Tag2 ("Re__")), "Pcre")), 0, (("lib/re.ml", 6, 73, 73), ("lib/re.ml", 6, 73, 91), 0), Tag1 ("Re", 3)), 0, 0); Tag3 (("Posix", 841), 1, (Tag3 (Tag1 ((Tag2 ("Re__")), "Posix")), 0, (("lib/re.ml", 7, 92, 92), ("lib/re.ml", 7, 92, 112), 0), Tag1 ("Re", 4)), 0, 0); Tag3 (("Str", 842), 1, (Tag3 (Tag1 ((Tag2 ("Re__")), "Str")), 0, (("lib/re.ml", 8, 113, 113), ("lib/re.ml", 8, 113, 129), 0), Tag1 ("Re", 5)), 0, 0)], "Re", [("Re", ("\224\173\241\137K\014.>\007]H\243'\138\017\143")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Re__Pmark", ("\165ks<XZ[\223&\136\255\140G\016\025p")); ("Re__Cset", ("\225r\195\178\225\254S\020 \207H\235\1795\0213")); ("Re__Core", ("u\184\236\029t\183=\150\227\183\016\196\129\199\174\130")); ("Re__Category", ("\212tx\171G\0000\176\132_\219\135_o\135\016")); ("Re__Automata", ("\228y\t\192\135)\001\027\154pU\252\\wv\141")); ("Re__", ("\0062t\168b\007\236c5\231\253,\210\160Z\n")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

module Str = Re__.Str
