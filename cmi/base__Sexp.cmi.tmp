type t = Sexplib0.Sexp.t = Atom of string | List of t list
val hash_fold_t : t Base__Ppx_hash_lib.hash_fold
val hash : t -> Base__Ppx_hash_lib.Std.Hash.hash_value
val t_of_sexp : Sexplib0.Sexp.t -> Sexplib0.Sexp.t
val sexp_of_t : Sexplib0.Sexp.t -> Sexplib0.Sexp.t
val equal : Sexplib0.Sexp.t -> Sexplib0.Sexp.t -> bool
val compare : Sexplib0.Sexp.t -> Sexplib0.Sexp.t -> int
exception Not_found_s of Sexplib0.Sexp.t
exception Of_sexp_error of exn * Sexplib0.Sexp.t
val message : string -> (string * Sexplib0.Sexp.t) list -> Sexplib0.Sexp.t
val default_indent : int ref
val pp_hum : Format.formatter -> Sexplib0.Sexp.t -> unit
val pp_hum_indent : int -> Format.formatter -> Sexplib0.Sexp.t -> unit
val pp_mach : Format.formatter -> Sexplib0.Sexp.t -> unit
val pp : Format.formatter -> Sexplib0.Sexp.t -> unit
val to_string_hum : ?indent:int -> Sexplib0.Sexp.t -> string
val to_string_mach : Sexplib0.Sexp.t -> string
val to_string : Sexplib0.Sexp.t -> string
val of_float_style : [ `No_underscores | `Underscores ] ref
val of_int_style : [ `No_underscores | `Underscores ] ref
module Private :
  sig
    val size : Sexplib0.Sexp.t -> int * int
    val buffer : unit -> Buffer.t
    val to_buffer : buf:Buffer.t -> Sexplib0.Sexp.t -> unit
    val to_buffer_hum :
      buf:Buffer.t -> ?indent:int -> Sexplib0.Sexp.t -> unit
    val to_buffer_mach : buf:Buffer.t -> Sexplib0.Sexp.t -> unit
    val to_buffer_gen :
      buf:'buffer ->
      add_char:('buffer -> char -> unit) ->
      add_string:('buffer -> string -> unit) -> Sexplib0.Sexp.t -> unit
    val mach_maybe_esc_str : string -> string
    val must_escape : string -> bool
    val esc_str : string -> string
  end
val t_sexp_grammar : t Sexplib0.Sexp_grammar.t
val invariant : t -> unit("DEBUG:rule", [Tag1 (("t", 625), (0, 0, Tag1 ([(("Atom", 405), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -83)]), 0, (("src/sexp.mli", 3, 56, 58), ("src/sexp.mli", 3, 56, 74), 0), 0, Tag1 ("Base__Sexp", 1)); (("List", 406), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 625)), 0, (0)), 100000000, 0, -85)], (0)), 100000000, 0, -84)]), 0, (("src/sexp.mli", 4, 75, 77), ("src/sexp.mli", 4, 75, 93), 0), 0, Tag1 ("Base__Sexp", 2))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -82)), 0, 0, 0, 0, (("src/sexp.mli", 2, 29, 29), ("src/sexp.mli", 5, 94, 118), 0), [(("deriving_inline", (("src/sexp.mli", 5, 94, 97), ("src/sexp.mli", 5, 94, 112), 0)), ([([(((("hash"), (("src/sexp.mli", 5, 94, 113), ("src/sexp.mli", 5, 94, 117), 0))), (("src/sexp.mli", 5, 94, 113), ("src/sexp.mli", 5, 94, 117), 0), 0, 0)], (("src/sexp.mli", 5, 94, 113), ("src/sexp.mli", 5, 94, 117), 0))]), (("src/sexp.mli", 5, 94, 94), ("src/sexp.mli", 5, 94, 118), 0))], 0, 0, Tag1 ("Base__Sexp", 0)), 1, 0); (("hash_fold_t", 626), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "hash_fold"), [(Tag3 ((("t", 625)), 0, (0)), 100000000, 0, -81)], (0)), 100000000, 0, -80), 0, (("src/sexp.mli", 7, 120, 128), ("src/sexp.mli", 7, 120, 168), 0), 0, Tag1 ("Base__Ppx_hash_lib", 4)), 0); (("hash", 627), ((Tag1 (0, (Tag3 ((("t", 625)), 0, (0)), 100000000, 0, -79), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__Ppx_hash_lib")), "Std"), "Hash"), "hash_value"), 0, (0)), 100000000, 0, -78), 0), 100000000, 0, -77), 0, (("src/sexp.mli", 7, 120, 128), ("src/sexp.mli", 7, 120, 168), 0), 0, Tag1 ("Base__Ppx_hash_lib", 5)), 0); (("t_of_sexp", 628), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -76), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 3)), 0); (("sexp_of_t", 629), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -73), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 4)), 0); (("equal", 630), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -70), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -69), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -68), 0), 100000000, 0, -67), 0), 100000000, 0, -66), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 5)), 0); (("compare", 631), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -65), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -64), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -63), 0), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 6)), 0); Tag2 (("Not_found_s", 632), ((Tag3 ("exn", 7)), 0, ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -60)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Sexplib0__Sexp", 7)), 2, 0); Tag2 (("Of_sexp_error", 633), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -58); (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -59)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Sexplib0__Sexp", 8)), 2, 0); (("message", 634), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -57), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -55); (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -56)]), 100000000, 0, -54)], (0)), 100000000, 0, -53), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0), 100000000, 0, -50), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 9)), 0); (("default_indent", 635), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -49)], (0)), 100000000, 0, -48), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 10)), 0); (("pp_hum", 636), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -47), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -46), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 11)), 0); (("pp_hum_indent", 637), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -42), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -41), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -40), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 12)), 0); (("pp_mach", 638), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -35), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -34), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 13)), 0); (("pp", 639), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -30), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -29), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 14)), 0); (("to_string_hum", 640), ((Tag1 (Tag1 ("indent"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -25)], (0)), 100000000, 0, -24), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -23), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 15)), 0); (("to_string_mach", 641), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -19), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 16)), 0); (("to_string", 642), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -16), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 17)), 0); (("of_float_style", 643), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag8 (([("No_underscores", (0)); ("Underscores", (0))], (0, 100000000, 0, -13), 1, 0, 0)), 100000000, 0, -12)], (0)), 100000000, 0, -11), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 18)), 0); (("of_int_style", 644), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag8 (([("No_underscores", (0)); ("Underscores", (0))], (0, 100000000, 0, -10), 1, 0, 0)), 100000000, 0, -9)], (0)), 100000000, 0, -8), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 19)), 0); Tag3 (("Private", 645), 0, (Tag1 ([(("size", 649), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -135), (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -133); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -134)]), 100000000, 0, -132), 0), 100000000, 0, -131), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 20)), 0); (("buffer", 650), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -130), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Buffer"), "t"), 0, (0)), 100000000, 0, -129), 0), 100000000, 0, -128), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 21)), 0); (("to_buffer", 651), ((Tag1 (("buf"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Buffer"), "t"), 0, (0)), 100000000, 0, -127), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -126), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -125), 0), 100000000, 0, -124), 0), 100000000, 0, -123), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 22)), 0); (("to_buffer_hum", 652), ((Tag1 (("buf"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Buffer"), "t"), 0, (0)), 100000000, 0, -122), (Tag1 (Tag1 ("indent"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -121)], (0)), 100000000, 0, -120), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -119), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -118), 0), 100000000, 0, -117), 0), 100000000, 0, -116), 0), 100000000, 0, -115), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 23)), 0); (("to_buffer_mach", 653), ((Tag1 (("buf"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Buffer"), "t"), 0, (0)), 100000000, 0, -114), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -113), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -112), 0), 100000000, 0, -111), 0), 100000000, 0, -110), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 24)), 0); (("to_buffer_gen", 654), ((Tag1 (("buf"), ((("buffer")), 100000000, 0, -105), (Tag1 (("add_char"), (Tag1 (0, ((("buffer")), 100000000, 0, -105), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -109), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), (Tag1 (("add_string"), (Tag1 (0, ((("buffer")), 100000000, 0, -105), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -104), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -103), 0), 100000000, 0, -102), 0), 100000000, 0, -101), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -100), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -99), 0), 100000000, 0, -98), 0), 100000000, 0, -97), 0), 100000000, 0, -96), 0), 100000000, 0, -95), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 25)), 0); (("mach_maybe_esc_str", 655), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -94), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -93), 0), 100000000, 0, -92), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 26)), 0); (("must_escape", 656), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -91), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -90), 0), 100000000, 0, -89), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 27)), 0); (("esc_str", 657), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -88), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), 0, Tag1 ("Sexplib0__Sexp", 28)), 0)]), 0, (("src/sexp.mli", 11, 180, 188), ("src/sexp.mli", 11, 180, 247), 0), Tag1 ("Sexplib0__Sexp", 29)), 0, 0); (("t_sexp_grammar", 646), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp_grammar"), "t"), [(Tag3 ((("t", 625)), 0, (0)), 100000000, 0, -7)], (0)), 100000000, 0, -6), 0, (("src/sexp.mli", 13, 249, 249), ("src/sexp.mli", 13, 249, 295), 0), 0, Tag1 ("Base__Sexp", 6)), 0); (("invariant", 647), ((Tag1 (0, (Tag3 ((("t", 625)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0, (("src/sexp.mli", 15, 297, 297), ("src/sexp.mli", 15, 297, 322), 0), 0, Tag1 ("Base__Sexp", 7)), 0); (("of_string", 648), ((Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -2), 0, (("src/sexp.mli", 20, 584, 584), ("src/sexp.mli", 21, 605, 675), 0), [(("deprecated", (("src/sexp.mli", 21, 605, 608), ("src/sexp.mli", 21, 605, 618), 0)), ([([(Tag1 (Tag2 ("[since 2018-02] Use [Parsexp.Single.parse_string_exn]", (("src/sexp.mli", 21, 605, 620), ("src/sexp.mli", 21, 605, 673), 0), 0)), (("src/sexp.mli", 21, 605, 619), ("src/sexp.mli", 21, 605, 674), 0), 0, 0)], (("src/sexp.mli", 21, 605, 619), ("src/sexp.mli", 21, 605, 674), 0))]), (("src/sexp.mli", 21, 605, 605), ("src/sexp.mli", 21, 605, 675), 0))], Tag1 ("Base__Sexp", 8)), 0)], "Base__Sexp", [("Base__Sexp", ("\154\187\171&\209=\153[\236\250!U\174`\190T")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__MoreLabels", ("\248\232\248\254`<\230\241\161U\193U\1466J\238")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shadow_stdlib", ("\219zi\164\203\158e)\232\221\196\168\138x\142\018")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Base_internalhash_types", ("0\148#2\226\223\018\135\173>!\020\237\017\255\149")); ("Base__Ppx_hash_lib", ("\199\141\178\193\006\209L\007^\020(\131\224sn8")); ("Base__Poly0", ("\230;\143\234\255.H\132KOe7\155\\\023f")); ("Base__Import0", ("\156\129U\197Y[\\\153\017Ho\203\173\204\220\020")); ("Base__Hash_intf", ("h\004P\218\1531G\127\212\208A\024\140\164iq")); ("Base__Hash", ("\206Rc\194\234{s3\248\165\024\162\203{\206\206")); ("Base__Bool0", ("\177f\254p\023\143&\239\020\136\206\242~\018F\251")); ("Base__", ("p\252\007\139\128\163W\025+\0225\001\246|P\158"))], [(0)])

val of_string : unit
