module type S =
  sig
    type 'a t = 'a CamlinternalLazy.t
    exception Undefined
    val map : ('a -> 'b) -> 'a t -> 'b t
    val map_val : ('a -> 'b) -> 'a t -> 'b t
    val is_val : 'a t -> bool
    val from_val : 'a -> 'a t
    val from_fun : (unit -> 'a) -> 'a t
    external force : 'a t -> 'a = "%lazy_force"
    val force_val : 'a t -> 'a("DEBUG:rule", [Tag4 (("S", 292), ((Tag1 ([Tag1 (("t", 293), ([((("a")), 100000000, 0, -35)], 1, 0, 1, ((Tag3 (Tag1 ((Tag2 ("CamlinternalLazy")), "t"), [((("a")), 100000000, 0, -35)], (0)), 100000000, 0, -34)), [25], [0], 0, 0, (("stdcompat__lazy_s.mli", 3, 21, 21), ("stdcompat__lazy_s.mli", 3, 21, 54), 0), 0, 0, 0, Tag1 ("Stdcompat__lazy_s", 0)), 1, 0); Tag2 (("Undefined", 294), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Stdcompat__lazy_s", 1)), 2, 0); (("map", 295), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -32), ((("b")), 100000000, 0, -30), 0), 100000000, 0, -33), (Tag1 (0, (Tag3 ((("t", 293)), [((("a")), 100000000, 0, -32)], (0)), 100000000, 0, -31), (Tag3 ((("t", 293)), [((("b")), 100000000, 0, -30)], (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("stdcompat__lazy_s.mli", 14, 215, 215), ("stdcompat__lazy_s.mli", 14, 215, 251), 0), 0, Tag1 ("Stdcompat__lazy_s", 2)), 0); (("map_val", 296), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -25), ((("b")), 100000000, 0, -23), 0), 100000000, 0, -26), (Tag1 (0, (Tag3 ((("t", 293)), [((("a")), 100000000, 0, -25)], (0)), 100000000, 0, -24), (Tag3 ((("t", 293)), [((("b")), 100000000, 0, -23)], (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("stdcompat__lazy_s.mli", 17, 312, 312), ("stdcompat__lazy_s.mli", 17, 312, 352), 0), 0, Tag1 ("Stdcompat__lazy_s", 3)), 0); (("is_val", 297), ((Tag1 (0, (Tag3 ((("t", 293)), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -18), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("stdcompat__lazy_s.mli", 20, 417, 417), ("stdcompat__lazy_s.mli", 20, 417, 442), 0), 0, Tag1 ("Stdcompat__lazy_s", 4)), 0); (("from_val", 298), ((Tag1 (0, ((("a")), 100000000, 0, -15), (Tag3 ((("t", 293)), [((("a")), 100000000, 0, -15)], (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("stdcompat__lazy_s.mli", 23, 492, 492), ("stdcompat__lazy_s.mli", 23, 492, 517), 0), 0, Tag1 ("Stdcompat__lazy_s", 5)), 0); (("from_fun", 299), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -12), ((("a")), 100000000, 0, -10), 0), 100000000, 0, -11), (Tag3 ((("t", 293)), [((("a")), 100000000, 0, -10)], (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("stdcompat__lazy_s.mli", 26, 567, 567), ("stdcompat__lazy_s.mli", 26, 567, 602), 0), 0, Tag1 ("Stdcompat__lazy_s", 6)), 0); (("force", 300), ((Tag1 (0, (Tag3 ((("t", 293)), [((("a")), 100000000, 0, -6)], (0)), 100000000, 0, -7), ((("a")), 100000000, 0, -6), 0), 100000000, 0, -5), (("%lazy_force", 1, 1, "", [0], 0)), (("stdcompat__lazy_s.mli", 30, 663, 663), ("stdcompat__lazy_s.mli", 30, 663, 706), 0), 0, Tag1 ("Stdcompat__lazy_s", 7)), 0); (("force_val", 301), ((Tag1 (0, (Tag3 ((("t", 293)), [((("a")), 100000000, 0, -3)], (0)), 100000000, 0, -4), ((("a")), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("stdcompat__lazy_s.mli", 39, 843, 843), ("stdcompat__lazy_s.mli", 39, 843, 869), 0), 0, Tag1 ("Stdcompat__lazy_s", 8)), 0)])), 0, (("stdcompat__lazy_s.mli", 1, 0, 0), ("stdcompat__lazy_s.mli", 42, 906, 909), 0), Tag1 ("Stdcompat__lazy_s", 9)), 0)], "Stdcompat__lazy_s", [("Stdcompat__lazy_s", ("\rV\137\219G\002\252(\192\141\164q\185\171p\212")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

  end
