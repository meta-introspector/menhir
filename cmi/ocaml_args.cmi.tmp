val ocamlc_spec : (string * bool * string) list option
val ocamlcp_spec : (string * bool * string) list option
val ocamloptp_spec : (string * bool * string) list option
val ocamlmklib_spec : (string * bool * string) list option
val ocamlmktop_spec : (string * bool * string) list option
val ocamlopt_spec : (string * bool * string) list option
val ocamldep_spec : (string * bool * string) list option
("DEBUG:rule", [(("ocamlc_spec", 277), ((Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -47); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -48); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -49)]), 100000000, 0, -46)], (0)), 100000000, 0, -45)], (0)), 100000000, 0, -44), 0, (("ocaml_args.ml", 1, 0, 4), ("ocaml_args.ml", 1, 0, 15), 0), 0, Tag1 ("Ocaml_args", 0)), 0); (("ocamlcp_spec", 278), ((Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -41); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -42); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -43)]), 100000000, 0, -40)], (0)), 100000000, 0, -39)], (0)), 100000000, 0, -38), 0, (("ocaml_args.ml", 460, 10840, 10844), ("ocaml_args.ml", 460, 10840, 10856), 0), 0, Tag1 ("Ocaml_args", 1)), 0); (("ocamloptp_spec", 279), ((Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -35); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -36); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -37)]), 100000000, 0, -34)], (0)), 100000000, 0, -33)], (0)), 100000000, 0, -32), 0, (("ocaml_args.ml", 923, 21891, 21895), ("ocaml_args.ml", 923, 21891, 21909), 0), 0, Tag1 ("Ocaml_args", 2)), 0); (("ocamlmklib_spec", 280), ((Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -29); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -30); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -31)]), 100000000, 0, -28)], (0)), 100000000, 0, -27)], (0)), 100000000, 0, -26), 0, (("ocaml_args.ml", 1558, 37281, 37285), ("ocaml_args.ml", 1558, 37281, 37300), 0), 0, Tag1 ("Ocaml_args", 3)), 0); (("ocamlmktop_spec", 281), ((Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -23); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -24); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -25)]), 100000000, 0, -22)], (0)), 100000000, 0, -21)], (0)), 100000000, 0, -20), 0, (("ocaml_args.ml", 1685, 39602, 39606), ("ocaml_args.ml", 1685, 39602, 39621), 0), 0, Tag1 ("Ocaml_args", 4)), 0); (("ocamlopt_spec", 282), ((Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -17); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -18); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -19)]), 100000000, 0, -16)], (0)), 100000000, 0, -15)], (0)), 100000000, 0, -14), 0, (("ocaml_args.ml", 2144, 50446, 50450), ("ocaml_args.ml", 2144, 50446, 50463), 0), 0, Tag1 ("Ocaml_args", 5)), 0); (("ocamldep_spec", 283), ((Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -12); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -13)]), 100000000, 0, -10)], (0)), 100000000, 0, -9)], (0)), 100000000, 0, -8), 0, (("ocaml_args.ml", 2787, 65977, 65981), ("ocaml_args.ml", 2787, 65977, 65994), 0), 0, Tag1 ("Ocaml_args", 6)), 0); (("ocamldoc_spec", 284), ((Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -6); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7)]), 100000000, 0, -4)], (0)), 100000000, 0, -3)], (0)), 100000000, 0, -2), 0, (("ocaml_args.ml", 2906, 68369, 68373), ("ocaml_args.ml", 2906, 68369, 68386), 0), 0, Tag1 ("Ocaml_args", 7)), 0)], "Ocaml_args", [("Ocaml_args", ("E|\193\021e\023\028\1727\146\167\003?\192\003'")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [1; (0)])
val ocamldoc_spec : (string * bool * string) list option
