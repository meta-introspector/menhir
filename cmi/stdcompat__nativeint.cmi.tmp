type t = nativeint
val min : t -> t -> t
val max : t -> t -> t
val unsigned_div : nativeint -> nativeint -> nativeint
val unsigned_rem : nativeint -> nativeint -> nativeint
val unsigned_to_int : nativeint -> int option
val unsigned_compare : t -> t -> int
val of_string_opt : string -> nativeint option
val equal : t -> t -> bool
val zero : nativeint
val one : nativeint
val minus_one : nativeint
external neg : nativeint -> nativeint = "%nativeint_neg"
external add : nativeint -> nativeint -> nativeint = "%nativeint_add"
external sub : nativeint -> nativeint -> nativeint = "%nativeint_sub"
external mul : nativeint -> nativeint -> nativeint = "%nativeint_mul"
external div : nativeint -> nativeint -> nativeint = "%nativeint_div"
external rem : nativeint -> nativeint -> nativeint = "%nativeint_mod"
val succ : nativeint -> nativeint
val pred : nativeint -> nativeint
val abs : nativeint -> nativeint
val size : int
val max_int : nativeint
val min_int : nativeint
external logand : nativeint -> nativeint -> nativeint = "%nativeint_and"
external logor : nativeint -> nativeint -> nativeint = "%nativeint_or"
external logxor : nativeint -> nativeint -> nativeint = "%nativeint_xor"
val lognot : nativeint -> nativeint
external shift_left : nativeint -> int -> nativeint = "%nativeint_lsl"
external shift_right : nativeint -> int -> nativeint = "%nativeint_asr"
external shift_right_logical : nativeint -> int -> nativeint
  = "%nativeint_lsr"
external of_int : int -> nativeint = "%nativeint_of_int"
external to_int : nativeint -> int = "%nativeint_to_int"
external of_float : float -> nativeint = "caml_nativeint_of_float"
  "caml_nativeint_of_float_unboxed" [@@unboxed] [@@noalloc]
external to_float : nativeint -> float = "caml_nativeint_to_float"
  "caml_nativeint_to_float_unboxed" [@@unboxed] [@@noalloc]
external of_int32 : int32 -> nativeint = "%nativeint_of_int32"
external to_int32 : nativeint -> int32 = "%nativeint_to_int32"
external of_string : string -> nativeint = "caml_nativeint_of_string"
val to_string : nativeint -> string("DEBUG:rule", [Tag1 (("t", 350), (0, 0, 0, 1, ((Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -145)), 0, 0, 0, 0, (("stdcompat__nativeint_s.mli", 2, 20, 20), ("stdcompat__nativeint_s.mli", 2, 20, 38), 0), 0, 0, 0, Tag1 ("Stdcompat__nativeint_s", 0)), 1, 0); (("min", 351), ((Tag1 (0, (Tag3 ((("t", 350)), 0, (0)), 100000000, 0, -144), (Tag1 (0, (Tag3 ((("t", 350)), 0, (0)), 100000000, 0, -143), (Tag3 ((("t", 350)), 0, (0)), 100000000, 0, -142), 0), 100000000, 0, -141), 0), 100000000, 0, -140), 0, (("stdcompat__nativeint_s.mli", 5, 72, 72), ("stdcompat__nativeint_s.mli", 5, 72, 93), 0), 0, Tag1 ("Stdcompat__nativeint_s", 1)), 0); (("max", 352), ((Tag1 (0, (Tag3 ((("t", 350)), 0, (0)), 100000000, 0, -139), (Tag1 (0, (Tag3 ((("t", 350)), 0, (0)), 100000000, 0, -138), (Tag3 ((("t", 350)), 0, (0)), 100000000, 0, -137), 0), 100000000, 0, -136), 0), 100000000, 0, -135), 0, (("stdcompat__nativeint_s.mli", 8, 139, 139), ("stdcompat__nativeint_s.mli", 8, 139, 160), 0), 0, Tag1 ("Stdcompat__nativeint_s", 2)), 0); (("unsigned_div", 353), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -134), (Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -133), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -132), 0), 100000000, 0, -131), 0), 100000000, 0, -130), 0, (("stdcompat__nativeint_s.mli", 11, 206, 206), ("stdcompat__nativeint_s.mli", 11, 206, 260), 0), 0, Tag1 ("Stdcompat__nativeint_s", 3)), 0); (("unsigned_rem", 354), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -129), (Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -128), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -127), 0), 100000000, 0, -126), 0), 100000000, 0, -125), 0, (("stdcompat__nativeint_s.mli", 14, 339, 339), ("stdcompat__nativeint_s.mli", 14, 339, 393), 0), 0, Tag1 ("Stdcompat__nativeint_s", 4)), 0); (("unsigned_to_int", 355), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -124), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -123)], (0)), 100000000, 0, -122), 0), 100000000, 0, -121), 0, (("stdcompat__nativeint_s.mli", 17, 472, 472), ("stdcompat__nativeint_s.mli", 17, 472, 517), 0), 0, Tag1 ("Stdcompat__nativeint_s", 5)), 0); (("unsigned_compare", 356), ((Tag1 (0, (Tag3 ((("t", 350)), 0, (0)), 100000000, 0, -120), (Tag1 (0, (Tag3 ((("t", 350)), 0, (0)), 100000000, 0, -119), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -118), 0), 100000000, 0, -117), 0), 100000000, 0, -116), 0, (("stdcompat__nativeint_s.mli", 20, 587, 587), ("stdcompat__nativeint_s.mli", 20, 587, 623), 0), 0, Tag1 ("Stdcompat__nativeint_s", 6)), 0); (("of_string_opt", 357), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -115), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -114)], (0)), 100000000, 0, -113), 0), 100000000, 0, -112), 0, (("stdcompat__nativeint_s.mli", 23, 684, 684), ("stdcompat__nativeint_s.mli", 23, 684, 730), 0), 0, Tag1 ("Stdcompat__nativeint_s", 7)), 0); (("equal", 358), ((Tag1 (0, (Tag3 ((("t", 350)), 0, (0)), 100000000, 0, -111), (Tag1 (0, (Tag3 ((("t", 350)), 0, (0)), 100000000, 0, -110), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -109), 0), 100000000, 0, -108), 0), 100000000, 0, -107), 0, (("stdcompat__nativeint_s.mli", 26, 801, 801), ("stdcompat__nativeint_s.mli", 26, 801, 827), 0), 0, Tag1 ("Stdcompat__nativeint_s", 8)), 0); (("zero", 359), ((Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -106), 0, (("stdcompat__nativeint_s.mli", 29, 878, 878), ("stdcompat__nativeint_s.mli", 29, 878, 898), 0), 0, Tag1 ("Stdcompat__nativeint_s", 9)), 0); (("one", 360), ((Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -105), 0, (("stdcompat__nativeint_s.mli", 32, 935, 935), ("stdcompat__nativeint_s.mli", 32, 935, 954), 0), 0, Tag1 ("Stdcompat__nativeint_s", 10)), 0); (("minus_one", 361), ((Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -104), 0, (("stdcompat__nativeint_s.mli", 35, 990, 990), ("stdcompat__nativeint_s.mli", 35, 990, 1015), 0), 0, Tag1 ("Stdcompat__nativeint_s", 11)), 0); (("neg", 362), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -103), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -102), 0), 100000000, 0, -101), (("%nativeint_neg", 1, 1, "", [0], 0)), (("stdcompat__nativeint_s.mli", 38, 1057, 1057), ("stdcompat__nativeint_s.mli", 38, 1057, 1113), 0), 0, Tag1 ("Stdcompat__nativeint_s", 12)), 0); (("add", 363), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -100), (Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -99), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -98), 0), 100000000, 0, -97), 0), 100000000, 0, -96), (("%nativeint_add", 2, 1, "", [0; 0], 0)), (("stdcompat__nativeint_s.mli", 41, 1149, 1149), ("stdcompat__nativeint_s.mli", 41, 1149, 1218), 0), 0, Tag1 ("Stdcompat__nativeint_s", 13)), 0); (("sub", 364), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -95), (Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -94), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -93), 0), 100000000, 0, -92), 0), 100000000, 0, -91), (("%nativeint_sub", 2, 1, "", [0; 0], 0)), (("stdcompat__nativeint_s.mli", 44, 1254, 1254), ("stdcompat__nativeint_s.mli", 44, 1254, 1323), 0), 0, Tag1 ("Stdcompat__nativeint_s", 14)), 0); (("mul", 365), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -90), (Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -89), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -88), 0), 100000000, 0, -87), 0), 100000000, 0, -86), (("%nativeint_mul", 2, 1, "", [0; 0], 0)), (("stdcompat__nativeint_s.mli", 47, 1359, 1359), ("stdcompat__nativeint_s.mli", 47, 1359, 1428), 0), 0, Tag1 ("Stdcompat__nativeint_s", 15)), 0); (("div", 366), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -85), (Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -84), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -83), 0), 100000000, 0, -82), 0), 100000000, 0, -81), (("%nativeint_div", 2, 1, "", [0; 0], 0)), (("stdcompat__nativeint_s.mli", 50, 1464, 1464), ("stdcompat__nativeint_s.mli", 50, 1464, 1533), 0), 0, Tag1 ("Stdcompat__nativeint_s", 16)), 0); (("rem", 367), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -80), (Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -79), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -78), 0), 100000000, 0, -77), 0), 100000000, 0, -76), (("%nativeint_mod", 2, 1, "", [0; 0], 0)), (("stdcompat__nativeint_s.mli", 53, 1569, 1569), ("stdcompat__nativeint_s.mli", 53, 1569, 1638), 0), 0, Tag1 ("Stdcompat__nativeint_s", 17)), 0); (("succ", 368), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -75), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -74), 0), 100000000, 0, -73), 0, (("stdcompat__nativeint_s.mli", 56, 1674, 1674), ("stdcompat__nativeint_s.mli", 56, 1674, 1707), 0), 0, Tag1 ("Stdcompat__nativeint_s", 18)), 0); (("pred", 369), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -72), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -71), 0), 100000000, 0, -70), 0, (("stdcompat__nativeint_s.mli", 59, 1744, 1744), ("stdcompat__nativeint_s.mli", 59, 1744, 1777), 0), 0, Tag1 ("Stdcompat__nativeint_s", 19)), 0); (("abs", 370), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -69), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -68), 0), 100000000, 0, -67), 0, (("stdcompat__nativeint_s.mli", 62, 1814, 1814), ("stdcompat__nativeint_s.mli", 62, 1814, 1846), 0), 0, Tag1 ("Stdcompat__nativeint_s", 20)), 0); (("size", 371), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -66), 0, (("stdcompat__nativeint_s.mli", 65, 1882, 1882), ("stdcompat__nativeint_s.mli", 65, 1882, 1896), 0), 0, Tag1 ("Stdcompat__nativeint_s", 21)), 0); (("max_int", 372), ((Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -65), 0, (("stdcompat__nativeint_s.mli", 68, 1933, 1933), ("stdcompat__nativeint_s.mli", 68, 1933, 1956), 0), 0, Tag1 ("Stdcompat__nativeint_s", 22)), 0); (("min_int", 373), ((Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -64), 0, (("stdcompat__nativeint_s.mli", 71, 1996, 1996), ("stdcompat__nativeint_s.mli", 71, 1996, 2019), 0), 0, Tag1 ("Stdcompat__nativeint_s", 23)), 0); (("logand", 374), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -63), (Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -62), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -61), 0), 100000000, 0, -60), 0), 100000000, 0, -59), (("%nativeint_and", 2, 1, "", [0; 0], 0)), (("stdcompat__nativeint_s.mli", 74, 2059, 2059), ("stdcompat__nativeint_s.mli", 74, 2059, 2131), 0), 0, Tag1 ("Stdcompat__nativeint_s", 24)), 0); (("logor", 375), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -58), (Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -57), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -56), 0), 100000000, 0, -55), 0), 100000000, 0, -54), (("%nativeint_or", 2, 1, "", [0; 0], 0)), (("stdcompat__nativeint_s.mli", 77, 2170, 2170), ("stdcompat__nativeint_s.mli", 77, 2170, 2240), 0), 0, Tag1 ("Stdcompat__nativeint_s", 25)), 0); (("logxor", 376), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -53), (Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -52), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -51), 0), 100000000, 0, -50), 0), 100000000, 0, -49), (("%nativeint_xor", 2, 1, "", [0; 0], 0)), (("stdcompat__nativeint_s.mli", 80, 2278, 2278), ("stdcompat__nativeint_s.mli", 80, 2278, 2350), 0), 0, Tag1 ("Stdcompat__nativeint_s", 26)), 0); (("lognot", 377), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -48), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("stdcompat__nativeint_s.mli", 83, 2389, 2389), ("stdcompat__nativeint_s.mli", 83, 2389, 2424), 0), 0, Tag1 ("Stdcompat__nativeint_s", 27)), 0); (("shift_left", 378), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -45), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -44), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), (("%nativeint_lsl", 2, 1, "", [0; 0], 0)), (("stdcompat__nativeint_s.mli", 86, 2463, 2463), ("stdcompat__nativeint_s.mli", 86, 2463, 2533), 0), 0, Tag1 ("Stdcompat__nativeint_s", 28)), 0); (("shift_right", 379), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -40), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -39), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -38), 0), 100000000, 0, -37), 0), 100000000, 0, -36), (("%nativeint_asr", 2, 1, "", [0; 0], 0)), (("stdcompat__nativeint_s.mli", 89, 2576, 2576), ("stdcompat__nativeint_s.mli", 89, 2576, 2647), 0), 0, Tag1 ("Stdcompat__nativeint_s", 29)), 0); (("shift_right_logical", 380), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -35), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -34), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), (("%nativeint_lsr", 2, 1, "", [0; 0], 0)), (("stdcompat__nativeint_s.mli", 92, 2691, 2691), ("stdcompat__nativeint_s.mli", 93, 2722, 2772), 0), 0, Tag1 ("Stdcompat__nativeint_s", 30)), 0); (("of_int", 381), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -30), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), (("%nativeint_of_int", 1, 1, "", [0], 0)), (("stdcompat__nativeint_s.mli", 96, 2824, 2824), ("stdcompat__nativeint_s.mli", 96, 2824, 2880), 0), 0, Tag1 ("Stdcompat__nativeint_s", 31)), 0); (("to_int", 382), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -27), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), (("%nativeint_to_int", 1, 1, "", [0], 0)), (("stdcompat__nativeint_s.mli", 99, 2919, 2919), ("stdcompat__nativeint_s.mli", 99, 2919, 2975), 0), 0, Tag1 ("Stdcompat__nativeint_s", 32)), 0); (("of_float", 383), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -24), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -23), 0), 100000000, 0, -22), (("caml_nativeint_of_float", 1, 0, "caml_nativeint_of_float_unboxed", [1], (0))), (("stdcompat__nativeint_s.mli", 103, 3015, 3015), ("stdcompat__nativeint_s.mli", 105, 3084, 3145), 0), [(("unboxed", (("stdcompat__nativeint_s.mli", 105, 3084, 3124), ("stdcompat__nativeint_s.mli", 105, 3084, 3131), 0)), (0), (("stdcompat__nativeint_s.mli", 105, 3084, 3121), ("stdcompat__nativeint_s.mli", 105, 3084, 3133), 0)); (("noalloc", (("stdcompat__nativeint_s.mli", 105, 3084, 3136), ("stdcompat__nativeint_s.mli", 105, 3084, 3143), 0)), (0), (("stdcompat__nativeint_s.mli", 105, 3084, 3133), ("stdcompat__nativeint_s.mli", 105, 3084, 3145), 0))], Tag1 ("Stdcompat__nativeint_s", 33)), 0); (("to_float", 384), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -21), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -20), 0), 100000000, 0, -19), (("caml_nativeint_to_float", 1, 0, "caml_nativeint_to_float_unboxed", [(0)], 1)), (("stdcompat__nativeint_s.mli", 126, 3618, 3618), ("stdcompat__nativeint_s.mli", 128, 3687, 3748), 0), [(("unboxed", (("stdcompat__nativeint_s.mli", 128, 3687, 3727), ("stdcompat__nativeint_s.mli", 128, 3687, 3734), 0)), (0), (("stdcompat__nativeint_s.mli", 128, 3687, 3724), ("stdcompat__nativeint_s.mli", 128, 3687, 3736), 0)); (("noalloc", (("stdcompat__nativeint_s.mli", 128, 3687, 3739), ("stdcompat__nativeint_s.mli", 128, 3687, 3746), 0)), (0), (("stdcompat__nativeint_s.mli", 128, 3687, 3736), ("stdcompat__nativeint_s.mli", 128, 3687, 3748), 0))], Tag1 ("Stdcompat__nativeint_s", 34)), 0); (("of_int32", 385), ((Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -18), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -17), 0), 100000000, 0, -16), (("%nativeint_of_int32", 1, 1, "", [0], 0)), (("stdcompat__nativeint_s.mli", 148, 4220, 4220), ("stdcompat__nativeint_s.mli", 148, 4220, 4282), 0), 0, Tag1 ("Stdcompat__nativeint_s", 35)), 0); (("to_int32", 386), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -15), (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -14), 0), 100000000, 0, -13), (("%nativeint_to_int32", 1, 1, "", [0], 0)), (("stdcompat__nativeint_s.mli", 151, 4323, 4323), ("stdcompat__nativeint_s.mli", 151, 4323, 4385), 0), 0, Tag1 ("Stdcompat__nativeint_s", 36)), 0); (("of_string", 387), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -12), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), (("caml_nativeint_of_string", 1, 1, "", [0], 0)), (("stdcompat__nativeint_s.mli", 155, 4427, 4427), ("stdcompat__nativeint_s.mli", 155, 4427, 4496), 0), 0, Tag1 ("Stdcompat__nativeint_s", 37)), 0); (("to_string", 388), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -9), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("stdcompat__nativeint_s.mli", 166, 4747, 4747), ("stdcompat__nativeint_s.mli", 166, 4747, 4782), 0), 0, Tag1 ("Stdcompat__nativeint_s", 38)), 0); (("compare", 389), ((Tag1 (0, (Tag3 ((("t", 350)), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((("t", 350)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("stdcompat__nativeint_s.mli", 169, 4824, 4824), ("stdcompat__nativeint_s.mli", 169, 4824, 4851), 0), 0, Tag1 ("Stdcompat__nativeint_s", 39)), 0)], "Stdcompat__nativeint", [("Stdcompat__nativeint", ("\175\186\211E\022~\003\239\158\182^\154(\227\160C")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stdcompat__nativeint_s", ("\025{\216ze\t\167\201\198\163\139\241\002\000\221\003")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val compare : t -> t -> int
