external compare : 'a -> 'a -> int = "%compare"
val ascending : 'a -> 'a -> int
val descending : 'a -> 'a -> int
external ( < ) : 'a -> 'a -> bool = "%lessthan"
external ( <= ) : 'a -> 'a -> bool = "%lessequal"
external ( <> ) : 'a -> 'a -> bool = "%notequal"
external ( = ) : 'a -> 'a -> bool = "%equal"
external ( > ) : 'a -> 'a -> bool = "%greaterthan"
external ( >= ) : 'a -> 'a -> bool = "%greaterequal"
external equal : 'a -> 'a -> bool = "%equal"
val min : 'a -> 'a -> 'a("DEBUG:rule", [(("compare", 416), ((Tag1 (0, ((("a")), 100000000, 0, -47), (Tag1 (0, ((("a")), 100000000, 0, -47), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), (("%compare", 2, 1, "", [0; 0], 0)), (("src/poly0.mli", 5, 209, 209), ("src/poly0.mli", 5, 209, 284), 0), 0, Tag1 ("Base__Poly0", 0)), 0); (("ascending", 417), ((Tag1 (0, ((("a")), 100000000, 0, -43), (Tag1 (0, ((("a")), 100000000, 0, -43), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -42), 0), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("src/poly0.mli", 11, 584, 584), ("src/poly0.mli", 11, 584, 615), 0), 0, Tag1 ("Base__Poly0", 1)), 0); (("descending", 418), ((Tag1 (0, ((("a")), 100000000, 0, -39), (Tag1 (0, ((("a")), 100000000, 0, -39), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -38), 0), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("src/poly0.mli", 13, 617, 617), ("src/poly0.mli", 13, 617, 649), 0), 0, Tag1 ("Base__Poly0", 2)), 0); (("<", 419), ((Tag1 (0, ((("a")), 100000000, 0, -35), (Tag1 (0, ((("a")), 100000000, 0, -35), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -34), 0), 100000000, 0, -33), 0), 100000000, 0, -32), (("%lessthan", 2, 1, "", [0; 0], 0)), (("src/poly0.mli", 14, 650, 650), ("src/poly0.mli", 14, 650, 725), 0), 0, Tag1 ("Base__Poly0", 3)), 0); (("<=", 420), ((Tag1 (0, ((("a")), 100000000, 0, -31), (Tag1 (0, ((("a")), 100000000, 0, -31), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0), 100000000, 0, -28), (("%lessequal", 2, 1, "", [0; 0], 0)), (("src/poly0.mli", 15, 726, 726), ("src/poly0.mli", 15, 726, 803), 0), 0, Tag1 ("Base__Poly0", 4)), 0); (("<>", 421), ((Tag1 (0, ((("a")), 100000000, 0, -27), (Tag1 (0, ((("a")), 100000000, 0, -27), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), (("%notequal", 2, 1, "", [0; 0], 0)), (("src/poly0.mli", 16, 804, 804), ("src/poly0.mli", 16, 804, 880), 0), 0, Tag1 ("Base__Poly0", 5)), 0); (("=", 422), ((Tag1 (0, ((("a")), 100000000, 0, -23), (Tag1 (0, ((("a")), 100000000, 0, -23), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), (("%equal", 2, 1, "", [0; 0], 0)), (("src/poly0.mli", 17, 881, 881), ("src/poly0.mli", 17, 881, 953), 0), 0, Tag1 ("Base__Poly0", 6)), 0); ((">", 423), ((Tag1 (0, ((("a")), 100000000, 0, -19), (Tag1 (0, ((("a")), 100000000, 0, -19), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), (("%greaterthan", 2, 1, "", [0; 0], 0)), (("src/poly0.mli", 18, 954, 954), ("src/poly0.mli", 18, 954, 1032), 0), 0, Tag1 ("Base__Poly0", 7)), 0); ((">=", 424), ((Tag1 (0, ((("a")), 100000000, 0, -15), (Tag1 (0, ((("a")), 100000000, 0, -15), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), (("%greaterequal", 2, 1, "", [0; 0], 0)), (("src/poly0.mli", 19, 1033, 1033), ("src/poly0.mli", 19, 1033, 1113), 0), 0, Tag1 ("Base__Poly0", 8)), 0); (("equal", 425), ((Tag1 (0, ((("a")), 100000000, 0, -11), (Tag1 (0, ((("a")), 100000000, 0, -11), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), (("%equal", 2, 1, "", [0; 0], 0)), (("src/poly0.mli", 20, 1114, 1114), ("src/poly0.mli", 20, 1114, 1186), 0), 0, Tag1 ("Base__Poly0", 9)), 0); (("min", 426), ((Tag1 (0, ((("a")), 100000000, 0, -7), (Tag1 (0, ((("a")), 100000000, 0, -7), ((("a")), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("src/poly0.mli", 21, 1187, 1187), ("src/poly0.mli", 21, 1187, 1211), 0), 0, Tag1 ("Base__Poly0", 10)), 0); (("max", 427), ((Tag1 (0, ((("a")), 100000000, 0, -4), (Tag1 (0, ((("a")), 100000000, 0, -4), ((("a")), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/poly0.mli", 22, 1212, 1212), ("src/poly0.mli", 22, 1212, 1236), 0), 0, Tag1 ("Base__Poly0", 11)), 0)], "Base__Poly0", [("Base__Poly0", ("\230;\143\234\255.H\132KOe7\155\\\023f")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Base__", ("p\252\007\139\128\163W\025+\0225\001\246|P\158"))], [(0)])

val max : 'a -> 'a -> 'a
