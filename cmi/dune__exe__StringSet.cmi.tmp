type elt = string
type t
val empty : t
val add : elt -> t -> t
val singleton : elt -> t
val remove : elt -> t -> t
val union : t -> t -> t
val inter : t -> t -> t
val disjoint : t -> t -> bool
val diff : t -> t -> t
val cardinal : t -> int
val elements : t -> elt list
val min_elt : t -> elt
val min_elt_opt : t -> elt option
val max_elt : t -> elt
val max_elt_opt : t -> elt option
val choose : t -> elt
val choose_opt : t -> elt option
val find : elt -> t -> elt
val find_opt : elt -> t -> elt option
val find_first : (elt -> bool) -> t -> elt
val find_first_opt : (elt -> bool) -> t -> elt option
val find_last : (elt -> bool) -> t -> elt
val find_last_opt : (elt -> bool) -> t -> elt option
val iter : (elt -> unit) -> t -> unit
val fold : (elt -> 'acc -> 'acc) -> t -> 'acc -> 'acc
val filter : (elt -> bool) -> t -> t
val filter_map : (elt -> elt option) -> t -> t
val partition : (elt -> bool) -> t -> t * t
val split : elt -> t -> t * bool * t
val is_empty : t -> bool
val mem : elt -> t -> bool
val equal : t -> t -> bool
val compare : t -> t -> int
val subset : t -> t -> bool
val for_all : (elt -> bool) -> t -> bool
val exists : (elt -> bool) -> t -> bool
val to_list : t -> elt list
val of_list : elt list -> t
val to_seq_from : elt -> t -> elt Seq.t
val to_seq : t -> elt Seq.t
val to_rev_seq : t -> elt Seq.t
val add_seq : elt Seq.t -> t -> t
val of_seq : elt Seq.t -> t
val map : (elt -> elt) -> t -> t("DEBUG:rule", [Tag1 (("elt", 665), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -231)), 0, 0, 0, 0, (("src/stringSet.mli", 14, 1000, 1019), ("src/stringSet.mli", 14, 1000, 1036), 0), 0, 0, 0, Tag1 ("Dune__exe__StringSet", 0)), 1, 0); Tag1 (("t", 666), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("set.mli", 74, 2901, 2905), ("set.mli", 74, 2901, 2911), 0), 0, 0, 0, Tag1 ("Stdlib__Set", 4)), 1, 0); (("empty", 667), ((Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -230), 0, (("set.mli", 77, 2942, 2946), ("set.mli", 77, 2942, 2958), 0), 0, Tag1 ("Stdlib__Set", 5)), 0); (("add", 668), ((Tag1 (0, (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -229), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -228), (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -227), 0), 100000000, 0, -226), 0), 100000000, 0, -225), 0, (("set.mli", 80, 2986, 2990), ("set.mli", 80, 2986, 3012), 0), 0, Tag1 ("Stdlib__Set", 6)), 0); (("singleton", 669), ((Tag1 (0, (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -224), (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -223), 0), 100000000, 0, -222), 0, (("set.mli", 86, 3278, 3282), ("set.mli", 86, 3278, 3305), 0), 0, Tag1 ("Stdlib__Set", 7)), 0); (("remove", 670), ((Tag1 (0, (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -221), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -220), (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -219), 0), 100000000, 0, -218), 0), 100000000, 0, -217), 0, (("set.mli", 89, 3381, 3385), ("set.mli", 89, 3381, 3410), 0), 0, Tag1 ("Stdlib__Set", 8)), 0); (("union", 671), ((Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -216), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -215), (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -214), 0), 100000000, 0, -213), 0), 100000000, 0, -212), 0, (("set.mli", 95, 3677, 3681), ("set.mli", 95, 3677, 3703), 0), 0, Tag1 ("Stdlib__Set", 9)), 0); (("inter", 672), ((Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -211), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -210), (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -209), 0), 100000000, 0, -208), 0), 100000000, 0, -207), 0, (("set.mli", 98, 3727, 3731), ("set.mli", 98, 3727, 3753), 0), 0, Tag1 ("Stdlib__Set", 10)), 0); (("disjoint", 673), ((Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -206), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -205), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -204), 0), 100000000, 0, -203), 0), 100000000, 0, -202), 0, (("set.mli", 101, 3784, 3788), ("set.mli", 101, 3784, 3816), 0), 0, Tag1 ("Stdlib__Set", 11)), 0); (("diff", 674), ((Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -201), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -200), (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -199), 0), 100000000, 0, -198), 0), 100000000, 0, -197), 0, (("set.mli", 105, 3880, 3884), ("set.mli", 105, 3880, 3905), 0), 0, Tag1 ("Stdlib__Set", 12)), 0); (("cardinal", 675), ((Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -196), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -195), 0), 100000000, 0, -194), 0, (("set.mli", 109, 4007, 4011), ("set.mli", 109, 4007, 4033), 0), 0, Tag1 ("Stdlib__Set", 13)), 0); (("elements", 676), ((Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -193), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -192)], (0)), 100000000, 0, -191), 0), 100000000, 0, -190), 0, (("set.mli", 114, 4120, 4124), ("set.mli", 114, 4120, 4151), 0), 0, Tag1 ("Stdlib__Set", 14)), 0); (("min_elt", 677), ((Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -189), (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -188), 0), 100000000, 0, -187), 0, (("set.mli", 120, 4380, 4384), ("set.mli", 120, 4380, 4405), 0), 0, Tag1 ("Stdlib__Set", 15)), 0); (("min_elt_opt", 678), ((Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -186), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -185)], (0)), 100000000, 0, -184), 0), 100000000, 0, -183), 0, (("set.mli", 125, 4567, 4571), ("set.mli", 125, 4567, 4603), 0), 0, Tag1 ("Stdlib__Set", 16)), 0); (("max_elt", 679), ((Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -182), (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -181), 0), 100000000, 0, -180), 0, (("set.mli", 131, 4774, 4778), ("set.mli", 131, 4774, 4799), 0), 0, Tag1 ("Stdlib__Set", 17)), 0); (("max_elt_opt", 680), ((Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -179), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -178)], (0)), 100000000, 0, -177), 0), 100000000, 0, -176), 0, (("set.mli", 135, 4890, 4894), ("set.mli", 135, 4890, 4926), 0), 0, Tag1 ("Stdlib__Set", 18)), 0); (("choose", 681), ((Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -175), (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -174), 0), 100000000, 0, -173), 0, (("set.mli", 140, 5041, 5045), ("set.mli", 140, 5041, 5065), 0), 0, Tag1 ("Stdlib__Set", 19)), 0); (("choose_opt", 682), ((Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -172), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -171)], (0)), 100000000, 0, -170), 0), 100000000, 0, -169), 0, (("set.mli", 145, 5263, 5267), ("set.mli", 145, 5263, 5298), 0), 0, Tag1 ("Stdlib__Set", 20)), 0); (("find", 683), ((Tag1 (0, (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -168), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -167), (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -166), 0), 100000000, 0, -165), 0), 100000000, 0, -164), 0, (("set.mli", 153, 5541, 5549), ("set.mli", 153, 5541, 5574), 0), 0, Tag1 ("Stdlib__Set", 21)), 0); (("find_opt", 684), ((Tag1 (0, (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -163), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -162), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -161)], (0)), 100000000, 0, -160), 0), 100000000, 0, -159), 0), 100000000, 0, -158), 0, (("set.mli", 159, 5752, 5756), ("set.mli", 159, 5752, 5792), 0), 0, Tag1 ("Stdlib__Set", 22)), 0); (("find_first", 685), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -157), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -156), 0), 100000000, 0, -155), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -154), (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -153), 0), 100000000, 0, -152), 0), 100000000, 0, -151), 0, (("set.mli", 165, 5963, 5967), ("set.mli", 165, 5963, 6008), 0), 0, Tag1 ("Stdlib__Set", 23)), 0); (("find_first_opt", 686), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -150), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -149), 0), 100000000, 0, -148), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -147), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -146)], (0)), 100000000, 0, -145), 0), 100000000, 0, -144), 0), 100000000, 0, -143), 0, (("set.mli", 177, 6482, 6486), ("set.mli", 177, 6482, 6538), 0), 0, Tag1 ("Stdlib__Set", 24)), 0); (("find_last", 687), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -142), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -141), 0), 100000000, 0, -140), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -139), (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -138), 0), 100000000, 0, -137), 0), 100000000, 0, -136), 0, (("set.mli", 184, 6779, 6783), ("set.mli", 184, 6779, 6823), 0), 0, Tag1 ("Stdlib__Set", 25)), 0); (("find_last_opt", 688), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -135), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -134), 0), 100000000, 0, -133), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -132), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -131)], (0)), 100000000, 0, -130), 0), 100000000, 0, -129), 0), 100000000, 0, -128), 0, (("set.mli", 190, 7044, 7048), ("set.mli", 190, 7044, 7099), 0), 0, Tag1 ("Stdlib__Set", 26)), 0); (("iter", 689), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -127), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -126), 0), 100000000, 0, -125), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -124), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -123), 0), 100000000, 0, -122), 0), 100000000, 0, -121), 0, (("set.mli", 198, 7371, 7375), ("set.mli", 198, 7371, 7411), 0), 0, Tag1 ("Stdlib__Set", 27)), 0); (("fold", 690), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -120), (Tag1 (0, ((("acc")), 100000000, 0, -116), ((("acc")), 100000000, 0, -116), 0), 100000000, 0, -119), 0), 100000000, 0, -118), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -117), (Tag1 (0, ((("acc")), 100000000, 0, -116), ((("acc")), 100000000, 0, -116), 0), 100000000, 0, -115), 0), 100000000, 0, -114), 0), 100000000, 0, -113), 0, (("set.mli", 203, 7616, 7620), ("set.mli", 203, 7616, 7672), 0), 0, Tag1 ("Stdlib__Set", 28)), 0); (("filter", 691), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -112), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -111), 0), 100000000, 0, -110), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -109), (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), 0, (("set.mli", 221, 8372, 8376), ("set.mli", 221, 8372, 8411), 0), 0, Tag1 ("Stdlib__Set", 30)), 0); (("filter_map", 692), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -105), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -104)], (0)), 100000000, 0, -103), 0), 100000000, 0, -102), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -101), (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -100), 0), 100000000, 0, -99), 0), 100000000, 0, -98), 0, (("set.mli", 228, 8710, 8714), ("set.mli", 228, 8710, 8759), 0), 0, Tag1 ("Stdlib__Set", 31)), 0); (("partition", 693), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -97), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -96), 0), 100000000, 0, -95), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -94), (Tag2 ([(Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -92); (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -93)]), 100000000, 0, -91), 0), 100000000, 0, -90), 0), 100000000, 0, -89), 0, (("set.mli", 243, 9275, 9279), ("set.mli", 243, 9275, 9321), 0), 0, Tag1 ("Stdlib__Set", 32)), 0); (("split", 694), ((Tag1 (0, (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -88), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -87), (Tag2 ([(Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -84); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -85); (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -86)]), 100000000, 0, -83), 0), 100000000, 0, -82), 0), 100000000, 0, -81), 0, (("set.mli", 249, 9562, 9566), ("set.mli", 249, 9562, 9601), 0), 0, Tag1 ("Stdlib__Set", 33)), 0); (("is_empty", 695), ((Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -80), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -79), 0), 100000000, 0, -78), 0, (("set.mli", 260, 10020, 10024), ("set.mli", 260, 10020, 10047), 0), 0, Tag1 ("Stdlib__Set", 34)), 0); (("mem", 696), ((Tag1 (0, (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -77), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -76), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), 0), 100000000, 0, -73), 0, (("set.mli", 263, 10096, 10100), ("set.mli", 263, 10096, 10125), 0), 0, Tag1 ("Stdlib__Set", 35)), 0); (("equal", 697), ((Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -72), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -71), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("set.mli", 266, 10190, 10194), ("set.mli", 266, 10190, 10219), 0), 0, Tag1 ("Stdlib__Set", 36)), 0); (("compare", 698), ((Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -67), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -66), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -65), 0), 100000000, 0, -64), 0), 100000000, 0, -63), 0, (("set.mli", 270, 10335, 10339), ("set.mli", 270, 10335, 10365), 0), 0, Tag1 ("Stdlib__Set", 37)), 0); (("subset", 699), ((Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -62), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -61), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -60), 0), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("set.mli", 274, 10476, 10480), ("set.mli", 274, 10476, 10506), 0), 0, Tag1 ("Stdlib__Set", 38)), 0); (("for_all", 700), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -57), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -56), 0), 100000000, 0, -55), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -54), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("set.mli", 278, 10598, 10602), ("set.mli", 278, 10598, 10641), 0), 0, Tag1 ("Stdlib__Set", 39)), 0); (("exists", 701), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -50), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -49), 0), 100000000, 0, -48), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -47), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("set.mli", 282, 10737, 10741), ("set.mli", 282, 10737, 10779), 0), 0, Tag1 ("Stdlib__Set", 40)), 0); (("to_list", 702), ((Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -43), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -42)], (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("set.mli", 288, 10922, 10926), ("set.mli", 288, 10922, 10953), 0), 0, Tag1 ("Stdlib__Set", 41)), 0); (("of_list", 703), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -39)], (0)), 100000000, 0, -38), (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("set.mli", 292, 11017, 11021), ("set.mli", 292, 11017, 11047), 0), 0, Tag1 ("Stdlib__Set", 42)), 0); (("to_seq_from", 704), ((Tag1 (0, (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -35), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -34), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -33)], (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("set.mli", 298, 11268, 11272), ("set.mli", 298, 11268, 11311), 0), 0, Tag1 ("Stdlib__Set", 43)), 0); (("to_seq", 705), ((Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -29), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -28)], (0)), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("set.mli", 303, 11453, 11457), ("set.mli", 303, 11453, 11484), 0), 0, Tag1 ("Stdlib__Set", 44)), 0); (("to_rev_seq", 706), ((Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -25), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -24)], (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("set.mli", 307, 11562, 11566), ("set.mli", 307, 11562, 11597), 0), 0, Tag1 ("Stdlib__Set", 45)), 0); (("add_seq", 707), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -21)], (0)), 100000000, 0, -20), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -19), (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("set.mli", 311, 11676, 11680), ("set.mli", 311, 11676, 11713), 0), 0, Tag1 ("Stdlib__Set", 46)), 0); (("of_seq", 708), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -15)], (0)), 100000000, 0, -14), (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("set.mli", 315, 11791, 11795), ("set.mli", 315, 11791, 11822), 0), 0, Tag1 ("Stdlib__Set", 47)), 0); (("map", 709), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -11), (Tag3 ((("elt", 665)), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -9), (Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -8), (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("src/stringSet.mli", 16, 1038, 1038), ("src/stringSet.mli", 16, 1038, 1069), 0), 0, Tag1 ("Dune__exe__StringSet", 1)), 0); (("print", 710), ((Tag1 (0, (Tag3 ((("t", 666)), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/stringSet.mli", 20, 1179, 1179), ("src/stringSet.mli", 20, 1179, 1201), 0), 0, Tag1 ("Dune__exe__StringSet", 2)), 0)], "Dune__exe__StringSet", [("Dune__exe__StringSet", ("uB\206\020%\219\199\135&\196,\015\190\015^\230")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("MenhirSdk", ("F\232\012\196l\143\145[\255\2193U\197\027\176\139")); ("Dune__exe", ("\137\000\197\175$\007]\218\141\248\172\212\146c\153\212")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val print : t -> string
