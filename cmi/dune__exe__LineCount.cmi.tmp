val __ocaml_lex_tables : Lexing.lex_tables
val count : int -> Lexing.lexbuf -> int
("DEBUG:rule", [(("__ocaml_lex_tables", 453), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lex_tables"), 0, (0)), 100000000, 0, -10), 0, (("src/lineCount.ml", 1, 23, 27), ("src/lineCount.ml", 1, 23, 45), 0), 0, Tag1 ("Dune__exe__LineCount", 0)), 0); (("count", 454), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -5), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -5), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("src/lineCount.ml", 90, 5039, 5047), ("src/lineCount.ml", 90, 5039, 5052), 0), 0, Tag1 ("Dune__exe__LineCount", 1)), 0); (("__ocaml_lex_count_rec", 455), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -5), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -6), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/lineCount.ml", 92, 5100, 5104), ("src/lineCount.ml", 92, 5100, 5125), 0), 0, Tag1 ("Dune__exe__LineCount", 2)), 0)], "Dune__exe__LineCount", [("Dune__exe__LineCount", (")\192\163\189\138\187\"\024\213\189(\000\179v8\146")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("MenhirSdk", ("F\232\012\196l\143\145[\255\2193U\197\027\176\139")); ("Dune__exe", ("\137\000\197\175$\007]\218\141\248\172\212\146c\153\212")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val __ocaml_lex_count_rec : int -> Lexing.lexbuf -> int -> int
