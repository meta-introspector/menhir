type status
val classify : int -> status
val ident_refutation : string -> (bool * string) option
val is_valid_ident_initial : status -> bool
val is_valid_ident_trailing : status -> bool
val is_letter : status -> bool
val is_unknown : status -> bool
val lowercase_first_char : string -> string
val split_at_first_letter : string -> (string * string) option
val is_basic_ascii : string -> bool
val ascii_of_ident : string -> string
val is_utf8 : string -> bool
val utf8_length : string -> int
val utf8_sub : string -> int -> int -> string
("DEBUG:rule", [Tag1 (("status", 284), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("clib/unicode.mli", 13, 702, 702), ("clib/unicode.mli", 13, 702, 713), 0), 0, 0, 0, Tag1 ("Unicode", 0)), 1, 0); (("classify", 285), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -53), (Tag3 ((("status", 284)), 0, (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("clib/unicode.mli", 16, 773, 773), ("clib/unicode.mli", 16, 773, 801), 0), 0, Tag1 ("Unicode", 1)), 0); (("ident_refutation", 286), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -50), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -48); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -49)]), 100000000, 0, -47)], (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0, (("clib/unicode.mli", 20, 961, 961), ("clib/unicode.mli", 20, 961, 1016), 0), 0, Tag1 ("Unicode", 2)), 0); (("is_valid_ident_initial", 287), ((Tag1 (0, (Tag3 ((("status", 284)), 0, (0)), 100000000, 0, -44), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("clib/unicode.mli", 23, 1078, 1078), ("clib/unicode.mli", 23, 1078, 1121), 0), 0, Tag1 ("Unicode", 3)), 0); (("is_valid_ident_trailing", 288), ((Tag1 (0, (Tag3 ((("status", 284)), 0, (0)), 100000000, 0, -41), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("clib/unicode.mli", 26, 1187, 1187), ("clib/unicode.mli", 26, 1187, 1231), 0), 0, Tag1 ("Unicode", 4)), 0); (("is_letter", 289), ((Tag1 (0, (Tag3 ((("status", 284)), 0, (0)), 100000000, 0, -38), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("clib/unicode.mli", 29, 1258, 1258), ("clib/unicode.mli", 29, 1258, 1288), 0), 0, Tag1 ("Unicode", 5)), 0); (("is_unknown", 290), ((Tag1 (0, (Tag3 ((("status", 284)), 0, (0)), 100000000, 0, -35), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -34), 0), 100000000, 0, -33), 0, (("clib/unicode.mli", 32, 1334, 1334), ("clib/unicode.mli", 32, 1334, 1365), 0), 0, Tag1 ("Unicode", 6)), 0); (("lowercase_first_char", 291), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -32), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("clib/unicode.mli", 36, 1477, 1477), ("clib/unicode.mli", 36, 1477, 1520), 0), 0, Tag1 ("Unicode", 7)), 0); (("split_at_first_letter", 292), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -29), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -27); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -28)]), 100000000, 0, -26)], (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("clib/unicode.mli", 40, 1660, 1660), ("clib/unicode.mli", 40, 1660, 1722), 0), 0, Tag1 ("Unicode", 8)), 0); (("is_basic_ascii", 293), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -23), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("clib/unicode.mli", 44, 1853, 1853), ("clib/unicode.mli", 44, 1853, 1888), 0), 0, Tag1 ("Unicode", 9)), 0); (("ascii_of_ident", 294), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -20), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("clib/unicode.mli", 51, 2248, 2248), ("clib/unicode.mli", 51, 2248, 2285), 0), 0, Tag1 ("Unicode", 10)), 0); (("is_utf8", 295), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -17), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("clib/unicode.mli", 54, 2319, 2319), ("clib/unicode.mli", 54, 2319, 2347), 0), 0, Tag1 ("Unicode", 11)), 0); (("utf8_length", 296), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -14), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("clib/unicode.mli", 57, 2399, 2399), ("clib/unicode.mli", 57, 2399, 2430), 0), 0, Tag1 ("Unicode", 12)), 0); (("utf8_sub", 297), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -9), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8), 0), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("clib/unicode.mli", 60, 2483, 2483), ("clib/unicode.mli", 60, 2483, 2528), 0), 0, Tag1 ("Unicode", 13)), 0); (("escaped_if_non_utf8", 298), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("clib/unicode.mli", 63, 2604, 2604), ("clib/unicode.mli", 63, 2604, 2646), 0), 0, Tag1 ("Unicode", 14)), 0)], "Unicode", [("Unicode", ("\140K\026\158\224\r\177\212\0252\233\212\226\210MN")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val escaped_if_non_utf8 : string -> string
