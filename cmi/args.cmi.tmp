type action = {
  modes : (string * Modes.t) list;
  singles : (string * Single.t) list;
  makefiles : string list;
}
type query = {
  action : action;
  findlib : Findlib.query;
  params : Params.t;
  task : Common.task;
}
val process :
  float -> ?extra:(string * Arg.spec * string) list -> string array -> query
val translate_findlib_query : Common.task -> Findlib.query -> Common.task
val eval_single :
  Format.formatter ->
  Io.writer -> Params.t -> Common.task -> string * Single.t -> unit
val iter_mode :
  Format.formatter ->
  Io.writer -> Params.t -> Unit.u list Unit.pair -> string * Modes.t -> unit
val iter_makefile :
  ("DEBUG:rule", [Tag1 (("action", 531), (0, 0, [[(("modes", 283), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -65); (Tag3 (Tag1 ((Tag2 ("Modes")), "t"), 0, (0)), 100000000, 0, -66)]), 100000000, 0, -64)], (0)), 100000000, 0, -63), (("core/args.mli", 5, 80, 82), ("core/args.mli", 5, 80, 114), 0), 0, Tag1 ("Args", 1)); (("singles", 291), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -69); (Tag3 (Tag1 ((Tag2 ("Single")), "t"), 0, (0)), 100000000, 0, -70)]), 100000000, 0, -68)], (0)), 100000000, 0, -67), (("core/args.mli", 6, 115, 117), ("core/args.mli", 6, 115, 152), 0), 0, Tag1 ("Args", 2)); (("makefiles", 292), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -72)], (0)), 100000000, 0, -71), (("core/args.mli", 7, 153, 155), ("core/args.mli", 7, 153, 179), 0), 0, Tag1 ("Args", 3))]], 1, 0, 0, 0, 0, 0, (("core/args.mli", 4, 64, 64), ("core/args.mli", 8, 180, 181), 0), 0, 0, 0, Tag1 ("Args", 0)), 1, 0); Tag1 (("query", 532), (0, 0, [[(("action", 294), 0, (Tag3 ((("action", 531)), 0, (0)), 100000000, 0, -59), (("core/args.mli", 12, 199, 201), ("core/args.mli", 12, 199, 217), 0), 0, Tag1 ("Args", 5)); (("findlib", 305), 0, (Tag3 (Tag1 ((Tag2 ("Findlib")), "query"), 0, (0)), 100000000, 0, -60), (("core/args.mli", 13, 218, 220), ("core/args.mli", 13, 218, 244), 0), 0, Tag1 ("Args", 6)); (("params", 308), 0, (Tag3 (Tag1 ((Tag2 ("Params")), "t"), 0, (0)), 100000000, 0, -61), (("core/args.mli", 14, 245, 247), ("core/args.mli", 14, 245, 265), 0), 0, Tag1 ("Args", 7)); (("task", 320), 0, (Tag3 (Tag1 ((Tag2 ("Common")), "task"), 0, (0)), 100000000, 0, -62), (("core/args.mli", 15, 266, 268), ("core/args.mli", 15, 266, 287), 0), 0, Tag1 ("Args", 8))]], 1, 0, 0, 0, 0, 0, (("core/args.mli", 11, 184, 184), ("core/args.mli", 16, 288, 289), 0), 0, 0, 0, Tag1 ("Args", 4)), 1, 0); (("process", 533), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -58), (Tag1 (Tag1 ("extra"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -55); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Arg"), "spec"), 0, (0)), 100000000, 0, -56); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -57)]), 100000000, 0, -54)], (0)), 100000000, 0, -53)], (0)), 100000000, 0, -52), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -51)], (0)), 100000000, 0, -50), (Tag3 ((("query", 532)), 0, (0)), 100000000, 0, -49), 0), 100000000, 0, -48), 0), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("core/args.mli", 19, 331, 331), ("core/args.mli", 20, 345, 421), 0), 0, Tag1 ("Args", 9)), 0); (("translate_findlib_query", 534), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Common")), "task"), 0, (0)), 100000000, 0, -45), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Findlib")), "query"), 0, (0)), 100000000, 0, -44), (Tag3 (Tag1 ((Tag2 ("Common")), "task"), 0, (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("core/args.mli", 25, 518, 518), ("core/args.mli", 25, 518, 591), 0), 0, Tag1 ("Args", 10)), 0); (("eval_single", 535), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -40), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Io")), "writer"), 0, (0)), 100000000, 0, -39), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Params")), "t"), 0, (0)), 100000000, 0, -38), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Common")), "task"), 0, (0)), 100000000, 0, -37), (Tag1 (0, (Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -35); (Tag3 (Tag1 ((Tag2 ("Single")), "t"), 0, (0)), 100000000, 0, -36)]), 100000000, 0, -34), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("core/args.mli", 28, 641, 641), ("core/args.mli", 30, 681, 748), 0), 0, Tag1 ("Args", 11)), 0); (("iter_mode", 536), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -27), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Io")), "writer"), 0, (0)), 100000000, 0, -26), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Params")), "t"), 0, (0)), 100000000, 0, -25), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Unit")), "pair"), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Unit")), "u"), 0, (0)), 100000000, 0, -24)], (0)), 100000000, 0, -23)], (0)), 100000000, 0, -22), (Tag1 (0, (Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -20); (Tag3 (Tag1 ((Tag2 ("Modes")), "t"), 0, (0)), 100000000, 0, -21)]), 100000000, 0, -19), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("core/args.mli", 33, 819, 819), ("core/args.mli", 35, 857, 933), 0), 0, Tag1 ("Args", 12)), 0); (("iter_makefile", 537), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -12), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Params")), "t"), 0, (0)), 100000000, 0, -11), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Unit")), "pair"), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Unit")), "u"), 0, (0)), 100000000, 0, -10)], (0)), 100000000, 0, -9)], (0)), 100000000, 0, -8), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("core/args.mli", 38, 991, 991), ("core/args.mli", 39, 1011, 1084), 0), 0, Tag1 ("Args", 13)), 0)], "Args", [("Args", ("\196-\226\153\020\146\233\nI\180Pu\020c_e")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Unitname", ("\155n\201\211\249\229\028$\220J\172\018<\249\171\158")); ("Unit", ("\012`/\204$\176\199(O\017F\167@\231@\242")); ("Uloc", ("\172\208h 6@\178[\156\249\206\172%\133\167\239")); ("Transforms", ("\247\177\132M&\202\192\164\018Ng6Wu\007\018")); ("Syntaxerr", ("\219y W\156\199S\188\018+\196\144>\187\159f")); ("Support", ("YA;\029\006a\255\202R\137\181\133\184\209)\005")); ("Summary", ("\243\022s.\187>\205\012\161)\1369wh\247p")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Arg", ("\024%=\206\198p\149Y\007\004\216,&\254#\207")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stage", ("\224\018\196\1757\168\209wr\235\232\015z\144\206V")); ("Single", ("A\000\174q5n\160h\129\194r\159\149eo\020")); ("Schematic", ("\180\179\011\178\017I\241^\235\149h\161k\b\209\142")); ("Read", ("\252*\146t'\236>\158\170\160=\012nNp\144")); ("Pp", ("\167zCQ\134\167\215\2517\247\158\219\250\223.\197")); ("Pkg", ("SneaP\023\210\210\240\218\128bA\te\239")); ("Paths", ("\000\152\242H\139l\222\245\245Ndb\202P^\175")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Parser", ("7'\1782\253\248\214\163]8\227\231&\145\183;")); ("Params", ("3\184\019g\146&\246\151\137\193\253aW\227Q\166")); ("Namespaced", ("%\208\253;3\161W$\236\1838K\195z\1493")); ("Name", ("4? \167\131n\184\000\214\031\017\027\153\002]^")); ("Module", ("2_s\200\188\137\247\158>\168\195\023\195\n\011V")); ("Modname", ("v\160\183\003\212\232\177\007\228-\002\145i\230\255\248")); ("Modes", ("\198\178\136\149\0065\031\168\150)\158\219C\172l\198")); ("Makefile", ("\213\228\147\183l\166wd\026\168 \246'\226\166y")); ("M2l", ("\208\241\201a\199\212\172v;\135t\185\027\196~\029")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Loc", ("ax\213\152\006\175?\212%\0014\238\021S\218=")); ("Lexer", ("d\166[g\003\193p\201\147\190pL\152^\136A")); ("Io", ("ON\202f?;1\160\1714{M;\140D\193")); ("Id", ("w\207`(\179n\181\161\155\252\243\195\006\139NO")); ("Findlib", ("\011\234\164\220\235\189\218\r\022\216\002\196\250,\138/")); ("Fault", ("\232\144\144(K\139\181-h!\017\212@?\127\199")); ("Docstrings", ("\216\171\176\031*\203\162\186%\175\201qq\189\139U")); ("Deps", ("%\164\252&\165z\218\221\023\182\235\223+\147\145\195")); ("Common", ("\142K\127m\162\172Ac\028XFp(\185\181\007")); ("CamlinternalMenhirLib", ("\171m\238\135\252\210\222v\200\202\178\241L\143\025\153")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216")); ("Analysis", ("a\168c\169G\176+\007\240C\171\243\229\017\168\239"))], [(0)])
Format.formatter -> Params.t -> Unit.u list Unit.pair -> string -> unit
