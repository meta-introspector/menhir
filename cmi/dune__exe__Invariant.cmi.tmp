type cell = private {
  symbol : Dune__exe.Grammar.Symbol.t;
  states : Dune__exe.Lr1.NodeSet.t;
  holds_semv : bool;
  holds_state : bool;
  holds_startp : bool;
  holds_endp : bool;
}
type word = cell array
val similar : cell -> cell -> bool
val pop : word -> word
val fold_top : (cell -> 'a) -> 'a -> word -> 'a
module type STACK =
  sig
    val stack : Dune__exe.Lr1.node -> word
    val prodstack : Dune__exe.Grammar.Production.index -> word
    val gotostack : Dune__exe.Grammar.Nonterminal.t -> word
  end
val stack : Dune__exe.Lr1.node -> word
val prodstack : Dune__exe.Grammar.Production.index -> word
val gotostack : Dune__exe.Grammar.Nonterminal.t -> word
type instruction = Die | DownTo of word * state
and state = Represented | UnRepresented of Dune__exe.Lr1.node
val rewind : Dune__exe.Lr1.node -> instruction
val errorpeeker : Dune__exe.Lr1.node -> bool
val represented : Dune__exe.Lr1.node -> bool
val startp : Dune__exe.Grammar.Symbol.t -> bool
val endp : Dune__exe.Grammar.Symbol.t -> bool
val universal : Dune__exe.Grammar.Symbol.t -> bool
module Long : functor () -> STACK
module Origin :
  sig
    type origin =
        Dead
      | SingleOrigin of Dune__exe.Grammar.Nonterminal.t
      | MultipleOrigins
    val run : Dune__exe.Lr1.node -> origin
    val reduce : Dune__exe.Grammar.Production.index -> origin
    val goto : Dune__exe.Grammar.Nonterminal.t -> origin("DEBUG:rule", [Tag1 (("cell", 745), (0, 0, [[(("symbol", 442), 0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Symbol"), "t"), 0, (0)), 100000000, 0, -49), (("src/invariant.mli", 39, 1931, 1933), ("src/invariant.mli", 39, 1931, 1950), 0), 0, Tag1 ("Dune__exe__Invariant", 1)); (("states", 572), 0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Lr1"), "NodeSet"), "t"), 0, (0)), 100000000, 0, -50), (("src/invariant.mli", 45, 2194, 2196), ("src/invariant.mli", 45, 2194, 2218), 0), 0, Tag1 ("Dune__exe__Invariant", 2)); (("holds_semv", 573), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -51), (("src/invariant.mli", 52, 2578, 2580), ("src/invariant.mli", 52, 2578, 2597), 0), 0, Tag1 ("Dune__exe__Invariant", 3)); (("holds_state", 574), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -52), (("src/invariant.mli", 61, 3087, 3089), ("src/invariant.mli", 61, 3087, 3107), 0), 0, Tag1 ("Dune__exe__Invariant", 4)); (("holds_startp", 575), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -53), (("src/invariant.mli", 64, 3157, 3159), ("src/invariant.mli", 64, 3157, 3178), 0), 0, Tag1 ("Dune__exe__Invariant", 5)); (("holds_endp", 576), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -54), (("src/invariant.mli", 68, 3283, 3285), ("src/invariant.mli", 68, 3283, 3302), 0), 0, Tag1 ("Dune__exe__Invariant", 6))]], 0, 0, 0, 0, 0, 0, (("src/invariant.mli", 37, 1908, 1908), ("src/invariant.mli", 72, 3406, 3407), 0), 0, 0, 0, Tag1 ("Dune__exe__Invariant", 0)), 1, 0); Tag1 (("word", 746), (0, 0, 0, 1, ((Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("cell", 745)), 0, (0)), 100000000, 0, -48)], (0)), 100000000, 0, -47)), 0, 0, 0, 0, (("src/invariant.mli", 78, 3645, 3645), ("src/invariant.mli", 79, 3657, 3669), 0), 0, 0, 0, Tag1 ("Dune__exe__Invariant", 7)), 1, 0); (("similar", 747), ((Tag1 (0, (Tag3 ((("cell", 745)), 0, (0)), 100000000, 0, -46), (Tag1 (0, (Tag3 ((("cell", 745)), 0, (0)), 100000000, 0, -45), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("src/invariant.mli", 84, 3850, 3850), ("src/invariant.mli", 84, 3850, 3883), 0), 0, Tag1 ("Dune__exe__Invariant", 8)), 0); (("pop", 748), ((Tag1 (0, (Tag3 ((("word", 746)), 0, (0)), 100000000, 0, -41), (Tag3 ((("word", 746)), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("src/invariant.mli", 87, 3961, 3961), ("src/invariant.mli", 87, 3961, 3982), 0), 0, Tag1 ("Dune__exe__Invariant", 9)), 0); (("fold_top", 749), ((Tag1 (0, (Tag1 (0, (Tag3 ((("cell", 745)), 0, (0)), 100000000, 0, -38), ((("a")), 100000000, 0, -35), 0), 100000000, 0, -37), (Tag1 (0, ((("a")), 100000000, 0, -35), (Tag1 (0, (Tag3 ((("word", 746)), 0, (0)), 100000000, 0, -36), ((("a")), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0), 100000000, 0, -32), 0, (("src/invariant.mli", 91, 4134, 4134), ("src/invariant.mli", 91, 4134, 4180), 0), 0, Tag1 ("Dune__exe__Invariant", 10)), 0); Tag4 (("STACK", 750), ((Tag1 ([(("stack", 764), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Lr1"), "node"), 0, (0)), 100000000, 0, -63), (Tag3 ((("word", 746)), 0, (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("src/invariant.mli", 99, 4388, 4390), ("src/invariant.mli", 99, 4388, 4417), 0), 0, Tag1 ("Dune__exe__Invariant", 11)), 0); (("prodstack", 765), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Production"), "index"), 0, (0)), 100000000, 0, -60), (Tag3 ((("word", 746)), 0, (0)), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("src/invariant.mli", 106, 4778, 4780), ("src/invariant.mli", 106, 4778, 4819), 0), 0, Tag1 ("Dune__exe__Invariant", 12)), 0); (("gotostack", 766), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Nonterminal"), "t"), 0, (0)), 100000000, 0, -57), (Tag3 ((("word", 746)), 0, (0)), 100000000, 0, -56), 0), 100000000, 0, -55), 0, (("src/invariant.mli", 113, 5138, 5140), ("src/invariant.mli", 113, 5138, 5176), 0), 0, Tag1 ("Dune__exe__Invariant", 13)), 0)])), 0, (("src/invariant.mli", 96, 4298, 4298), ("src/invariant.mli", 115, 5178, 5181), 0), Tag1 ("Dune__exe__Invariant", 14)), 0); (("stack", 751), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Lr1"), "node"), 0, (0)), 100000000, 0, -31), (Tag3 ((("word", 746)), 0, (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("src/invariant.mli", 99, 4388, 4390), ("src/invariant.mli", 99, 4388, 4417), 0), 0, Tag1 ("Dune__exe__Invariant", 11)), 0); (("prodstack", 752), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Production"), "index"), 0, (0)), 100000000, 0, -28), (Tag3 ((("word", 746)), 0, (0)), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("src/invariant.mli", 106, 4778, 4780), ("src/invariant.mli", 106, 4778, 4819), 0), 0, Tag1 ("Dune__exe__Invariant", 12)), 0); (("gotostack", 753), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Nonterminal"), "t"), 0, (0)), 100000000, 0, -25), (Tag3 ((("word", 746)), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("src/invariant.mli", 113, 5138, 5140), ("src/invariant.mli", 113, 5138, 5176), 0), 0, Tag1 ("Dune__exe__Invariant", 13)), 0); Tag1 (("instruction", 754), (0, 0, Tag1 ([(("Die", 702), (0), 0, (("src/invariant.mli", 123, 5338, 5340), ("src/invariant.mli", 123, 5338, 5345), 0), 0, Tag1 ("Dune__exe__Invariant", 17)); (("DownTo", 703), ([(Tag3 ((("word", 746)), 0, (0)), 100000000, 0, -21); (Tag3 ((("state", 755)), 0, (0)), 100000000, 0, -22)]), 0, (("src/invariant.mli", 124, 5346, 5348), ("src/invariant.mli", 124, 5346, 5372), 0), 0, Tag1 ("Dune__exe__Invariant", 18))], 0), 1, 0, 0, 0, 0, 0, (("src/invariant.mli", 122, 5319, 5319), ("src/invariant.mli", 124, 5346, 5372), 0), 0, 0, 0, Tag1 ("Dune__exe__Invariant", 15)), 1, 0); Tag1 (("state", 755), (0, 0, Tag1 ([(("Represented", 704), (0), 0, (("src/invariant.mli", 127, 5386, 5388), ("src/invariant.mli", 127, 5386, 5401), 0), 0, Tag1 ("Dune__exe__Invariant", 19)); (("UnRepresented", 705), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Lr1"), "node"), 0, (0)), 100000000, 0, -20)]), 0, (("src/invariant.mli", 128, 5402, 5404), ("src/invariant.mli", 128, 5402, 5431), 0), 0, Tag1 ("Dune__exe__Invariant", 20))], 0), 1, 0, 0, 0, 0, 0, (("src/invariant.mli", 126, 5374, 5374), ("src/invariant.mli", 128, 5402, 5431), 0), 0, 0, 0, Tag1 ("Dune__exe__Invariant", 16)), 2, 0); (("rewind", 756), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Lr1"), "node"), 0, (0)), 100000000, 0, -19), (Tag3 ((("instruction", 754)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("src/invariant.mli", 138, 5928, 5928), ("src/invariant.mli", 138, 5928, 5963), 0), 0, Tag1 ("Dune__exe__Invariant", 21)), 0); (("errorpeeker", 757), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Lr1"), "node"), 0, (0)), 100000000, 0, -16), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("src/invariant.mli", 144, 6194, 6194), ("src/invariant.mli", 144, 6194, 6227), 0), 0, Tag1 ("Dune__exe__Invariant", 22)), 0); (("represented", 758), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Lr1"), "node"), 0, (0)), 100000000, 0, -13), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("src/invariant.mli", 152, 6536, 6536), ("src/invariant.mli", 152, 6536, 6569), 0), 0, Tag1 ("Dune__exe__Invariant", 23)), 0); (("startp", 759), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Symbol"), "t"), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("src/invariant.mli", 156, 6669, 6669), ("src/invariant.mli", 156, 6669, 6697), 0), 0, Tag1 ("Dune__exe__Invariant", 24)), 0); (("endp", 760), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Symbol"), "t"), 0, (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("src/invariant.mli", 160, 6794, 6794), ("src/invariant.mli", 160, 6794, 6820), 0), 0, Tag1 ("Dune__exe__Invariant", 25)), 0); (("universal", 761), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Symbol"), "t"), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/invariant.mli", 164, 6931, 6931), ("src/invariant.mli", 164, 6931, 6962), 0), 0, Tag1 ("Dune__exe__Invariant", 26)), 0); Tag3 (("Long", 762), 0, (Tag2 (0, ((("STACK", 750)))), 0, (("src/invariant.mli", 174, 7411, 7411), ("src/invariant.mli", 174, 7411, 7433), 0), Tag1 ("Dune__exe__Invariant", 27)), 0, 0); Tag3 (("Origin", 763), 0, (Tag1 ([Tag1 (("origin", 767), (0, 0, Tag1 ([(("Dead", 714), (0), 0, (("src/invariant.mli", 186, 7863, 7867), ("src/invariant.mli", 186, 7863, 7873), 0), 0, Tag1 ("Dune__exe__Invariant", 29)); (("SingleOrigin", 715), ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Nonterminal"), "t"), 0, (0)), 100000000, 0, -73)]), 0, (("src/invariant.mli", 187, 7874, 7878), ("src/invariant.mli", 187, 7874, 7909), 0), 0, Tag1 ("Dune__exe__Invariant", 30)); (("MultipleOrigins", 716), (0), 0, (("src/invariant.mli", 188, 7910, 7914), ("src/invariant.mli", 188, 7910, 7931), 0), 0, Tag1 ("Dune__exe__Invariant", 31))], 0), 1, 0, 0, 0, 0, 0, (("src/invariant.mli", 185, 7847, 7849), ("src/invariant.mli", 188, 7910, 7931), 0), 0, 0, 0, Tag1 ("Dune__exe__Invariant", 28)), 1, 0); (("run", 768), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Lr1"), "node"), 0, (0)), 100000000, 0, -72), (Tag3 ((("origin", 767)), 0, (0)), 100000000, 0, -71), 0), 100000000, 0, -70), 0, (("src/invariant.mli", 192, 8036, 8038), ("src/invariant.mli", 192, 8036, 8065), 0), 0, Tag1 ("Dune__exe__Invariant", 32)), 0); (("reduce", 769), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Production"), "index"), 0, (0)), 100000000, 0, -69), (Tag3 ((("origin", 767)), 0, (0)), 100000000, 0, -68), 0), 100000000, 0, -67), 0, (("src/invariant.mli", 196, 8187, 8189), ("src/invariant.mli", 196, 8187, 8227), 0), 0, Tag1 ("Dune__exe__Invariant", 33)), 0); (("goto", 770), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Nonterminal"), "t"), 0, (0)), 100000000, 0, -66), (Tag3 ((("origin", 767)), 0, (0)), 100000000, 0, -65), 0), 100000000, 0, -64), 0, (("src/invariant.mli", 200, 8353, 8355), ("src/invariant.mli", 200, 8353, 8388), 0), 0, Tag1 ("Dune__exe__Invariant", 34)), 0)]), 0, (("src/invariant.mli", 179, 7558, 7558), ("src/invariant.mli", 202, 8390, 8393), 0), Tag1 ("Dune__exe__Invariant", 35)), 0, 0)], "Dune__exe__Invariant", [("Dune__exe__Invariant", ("\167\193\024n\203yG\136f\\\135\206\228l5}")); ("Vendored_fix__Sigs", ("a{\193\210\184\138\163\252\132\135.\2156meu")); ("Vendored_fix__Set", ("#\017\234a}\187\202\206\012\134\207\129$\021\139\204")); ("Vendored_fix__Option", ("\185\131\152+\006QZ\148\188/\198#\220M\188\016")); ("Vendored_fix__Core", ("\214\127\018A\245\025\b\249\146\254pi\185\243\149\133")); ("Vendored_fix__", ("\r\196g\002\180\221\139\252\200\240t\184\171.K\020")); ("Vendored_fix", ("\012!\239\029\209\204\252\027\214>p\249;\128\184\191")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("MenhirSdk__Keyword", ("\171\145\177^\199\189\197f\150\136y\144\252\234>\178")); ("MenhirSdk", ("F\232\012\196l\143\145[\255\2193U\197\027\176\139")); ("Dune__exe__Syntax", ("\002\205\007\164\2347\133\182\245*x\171\004\190\178\171")); ("Dune__exe__StringSet", ("uB\206\020%\219\199\135&\196,\015\190\015^\230")); ("Dune__exe__StringMap", ("\157\157\161k*M\030\254|\006>\144X\147j\222")); ("Dune__exe__Stretch", ("\003\145~\207\198HL&\187\195e'0\204\200\156")); ("Dune__exe__Settings", ("I\214\245\150\238/\2211\219\145S\218\004a:1")); ("Dune__exe__Positions", ("\137nS\236\011\187\r[\024:\162/\201\139\237}")); ("Dune__exe__Lr1", ("\198r\218y\026\\\233\174\231\001\168/Gv\244\130")); ("Dune__exe__Lr0", ("\206\2245E\217\146\129\183q\204I\232\\\127\140\247")); ("Dune__exe__Lookahead", ("\0313\213I\026\021n\155\198!\021$\230z\234\198")); ("Dune__exe__Item", ("n\239\129]\161h\245\169\247_4\014>1\006D")); ("Dune__exe__InputFile", (",\0246\029z@\127T\235\227k~\t\138\213%")); ("Dune__exe__IL", ("\194\228\178\190\251\254\231\226\207\197c\133\253i\220\170")); ("Dune__exe__GrammarFunctor", ("\139\015m\230\161\218\014\241\156v\017\182\017=\215\030")); ("Dune__exe__Grammar", ("\206h\026\183\149X\202a=\181,\16851\132e")); ("Dune__exe__GSet", ("\246\0066\220ky~\0042_c\205p\186\249\170")); ("Dune__exe__GMap", ("z5C\250t+\028\210\224\015Z'{U-\242")); ("Dune__exe__Front", ("\148\176\180\242\232x\020\016\239\205>I\021\\n*")); ("Dune__exe__Fix", ("\136\220e\127\151\133P\213x\197\137\216\247\006\184U")); ("Dune__exe__BasicSyntax", ("\219\025F6\236\222\186\020\209\135\130+\131\228\012\003")); ("Dune__exe__Action", ("c\225H \249\179\190\007`[X\019\132@\208\193")); ("Dune__exe", ("\137\000\197\175$\007]\218\141\248\172\212\146c\153\212")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

  end
