val type_int : Types.type_expr
val type_char : Types.type_expr
val type_string : Types.type_expr
val type_bytes : Types.type_expr
val type_float : Types.type_expr
val type_bool : Types.type_expr
val type_unit : Types.type_expr
val type_exn : Types.type_expr
val type_array : Types.type_expr -> Types.type_expr
val type_list : Types.type_expr -> Types.type_expr
val type_option : Types.type_expr -> Types.type_expr
val type_nativeint : Types.type_expr
val type_int32 : Types.type_expr
val type_int64 : Types.type_expr
val type_lazy_t : Types.type_expr -> Types.type_expr
val type_extension_constructor : Types.type_expr
val type_floatarray : Types.type_expr
val path_int : Path.t
val path_char : Path.t
val path_string : Path.t
val path_bytes : Path.t
val path_float : Path.t
val path_bool : Path.t
val path_unit : Path.t
val path_exn : Path.t
val path_array : Path.t
val path_list : Path.t
val path_option : Path.t
val path_nativeint : Path.t
val path_int32 : Path.t
val path_int64 : Path.t
val path_lazy_t : Path.t
val path_extension_constructor : Path.t
val path_floatarray : Path.t
val path_match_failure : Path.t
val path_assert_failure : Path.t
val path_undefined_recursive_module : Path.t
val ident_false : Ident.t
val ident_true : Ident.t
val ident_void : Ident.t
val ident_nil : Ident.t
val ident_cons : Ident.t
val ident_none : Ident.t
val ident_some : Ident.t
val build_initial_env :
  (Ident.t -> Types.type_declaration -> 'a -> 'a) ->
  (Ident.t -> Types.extension_constructor -> 'a -> 'a) -> 'a -> 'a
val builtin_values : (string * Ident.t) list
val builtin_idents : (string * Ident.t) list
val ident_division_by_zero : Ident.t("DEBUG:rule", [(("type_int", 480), ((Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -78), 0, (("typing/predef.mli", 20, 1167, 1167), ("typing/predef.mli", 20, 1167, 1190), 0), 0, Tag1 ("Predef", 1)), 0); (("type_char", 481), ((Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -77), 0, (("typing/predef.mli", 21, 1191, 1191), ("typing/predef.mli", 21, 1191, 1215), 0), 0, Tag1 ("Predef", 2)), 0); (("type_string", 482), ((Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -76), 0, (("typing/predef.mli", 22, 1216, 1216), ("typing/predef.mli", 22, 1216, 1242), 0), 0, Tag1 ("Predef", 3)), 0); (("type_bytes", 483), ((Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -75), 0, (("typing/predef.mli", 23, 1243, 1243), ("typing/predef.mli", 23, 1243, 1268), 0), 0, Tag1 ("Predef", 4)), 0); (("type_float", 484), ((Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -74), 0, (("typing/predef.mli", 24, 1269, 1269), ("typing/predef.mli", 24, 1269, 1294), 0), 0, Tag1 ("Predef", 5)), 0); (("type_bool", 485), ((Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -73), 0, (("typing/predef.mli", 25, 1295, 1295), ("typing/predef.mli", 25, 1295, 1319), 0), 0, Tag1 ("Predef", 6)), 0); (("type_unit", 486), ((Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -72), 0, (("typing/predef.mli", 26, 1320, 1320), ("typing/predef.mli", 26, 1320, 1344), 0), 0, Tag1 ("Predef", 7)), 0); (("type_exn", 487), ((Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -71), 0, (("typing/predef.mli", 27, 1345, 1345), ("typing/predef.mli", 27, 1345, 1368), 0), 0, Tag1 ("Predef", 8)), 0); (("type_array", 488), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -70), (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("typing/predef.mli", 28, 1369, 1369), ("typing/predef.mli", 28, 1369, 1407), 0), 0, Tag1 ("Predef", 9)), 0); (("type_list", 489), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -67), (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("typing/predef.mli", 29, 1408, 1408), ("typing/predef.mli", 29, 1408, 1445), 0), 0, Tag1 ("Predef", 10)), 0); (("type_option", 490), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -64), (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -63), 0), 100000000, 0, -62), 0, (("typing/predef.mli", 30, 1446, 1446), ("typing/predef.mli", 30, 1446, 1485), 0), 0, Tag1 ("Predef", 11)), 0); (("type_nativeint", 491), ((Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -61), 0, (("typing/predef.mli", 31, 1486, 1486), ("typing/predef.mli", 31, 1486, 1515), 0), 0, Tag1 ("Predef", 12)), 0); (("type_int32", 492), ((Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -60), 0, (("typing/predef.mli", 32, 1516, 1516), ("typing/predef.mli", 32, 1516, 1541), 0), 0, Tag1 ("Predef", 13)), 0); (("type_int64", 493), ((Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -59), 0, (("typing/predef.mli", 33, 1542, 1542), ("typing/predef.mli", 33, 1542, 1567), 0), 0, Tag1 ("Predef", 14)), 0); (("type_lazy_t", 494), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -58), (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("typing/predef.mli", 34, 1568, 1568), ("typing/predef.mli", 34, 1568, 1607), 0), 0, Tag1 ("Predef", 15)), 0); (("type_extension_constructor", 495), ((Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -55), 0, (("typing/predef.mli", 35, 1608, 1608), ("typing/predef.mli", 35, 1608, 1648), 0), 0, Tag1 ("Predef", 16)), 0); (("type_floatarray", 496), ((Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -54), 0, (("typing/predef.mli", 36, 1649, 1649), ("typing/predef.mli", 36, 1649, 1678), 0), 0, Tag1 ("Predef", 17)), 0); (("path_int", 497), ((Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -53), 0, (("typing/predef.mli", 38, 1680, 1680), ("typing/predef.mli", 38, 1680, 1700), 0), 0, Tag1 ("Predef", 18)), 0); (("path_char", 498), ((Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -52), 0, (("typing/predef.mli", 39, 1701, 1701), ("typing/predef.mli", 39, 1701, 1722), 0), 0, Tag1 ("Predef", 19)), 0); (("path_string", 499), ((Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -51), 0, (("typing/predef.mli", 40, 1723, 1723), ("typing/predef.mli", 40, 1723, 1746), 0), 0, Tag1 ("Predef", 20)), 0); (("path_bytes", 500), ((Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -50), 0, (("typing/predef.mli", 41, 1747, 1747), ("typing/predef.mli", 41, 1747, 1769), 0), 0, Tag1 ("Predef", 21)), 0); (("path_float", 501), ((Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -49), 0, (("typing/predef.mli", 42, 1770, 1770), ("typing/predef.mli", 42, 1770, 1792), 0), 0, Tag1 ("Predef", 22)), 0); (("path_bool", 502), ((Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -48), 0, (("typing/predef.mli", 43, 1793, 1793), ("typing/predef.mli", 43, 1793, 1814), 0), 0, Tag1 ("Predef", 23)), 0); (("path_unit", 503), ((Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -47), 0, (("typing/predef.mli", 44, 1815, 1815), ("typing/predef.mli", 44, 1815, 1836), 0), 0, Tag1 ("Predef", 24)), 0); (("path_exn", 504), ((Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -46), 0, (("typing/predef.mli", 45, 1837, 1837), ("typing/predef.mli", 45, 1837, 1857), 0), 0, Tag1 ("Predef", 25)), 0); (("path_array", 505), ((Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -45), 0, (("typing/predef.mli", 46, 1858, 1858), ("typing/predef.mli", 46, 1858, 1880), 0), 0, Tag1 ("Predef", 26)), 0); (("path_list", 506), ((Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -44), 0, (("typing/predef.mli", 47, 1881, 1881), ("typing/predef.mli", 47, 1881, 1902), 0), 0, Tag1 ("Predef", 27)), 0); (("path_option", 507), ((Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -43), 0, (("typing/predef.mli", 48, 1903, 1903), ("typing/predef.mli", 48, 1903, 1926), 0), 0, Tag1 ("Predef", 28)), 0); (("path_nativeint", 508), ((Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -42), 0, (("typing/predef.mli", 49, 1927, 1927), ("typing/predef.mli", 49, 1927, 1953), 0), 0, Tag1 ("Predef", 29)), 0); (("path_int32", 509), ((Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -41), 0, (("typing/predef.mli", 50, 1954, 1954), ("typing/predef.mli", 50, 1954, 1976), 0), 0, Tag1 ("Predef", 30)), 0); (("path_int64", 510), ((Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -40), 0, (("typing/predef.mli", 51, 1977, 1977), ("typing/predef.mli", 51, 1977, 1999), 0), 0, Tag1 ("Predef", 31)), 0); (("path_lazy_t", 511), ((Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -39), 0, (("typing/predef.mli", 52, 2000, 2000), ("typing/predef.mli", 52, 2000, 2023), 0), 0, Tag1 ("Predef", 32)), 0); (("path_extension_constructor", 512), ((Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -38), 0, (("typing/predef.mli", 53, 2024, 2024), ("typing/predef.mli", 53, 2024, 2062), 0), 0, Tag1 ("Predef", 33)), 0); (("path_floatarray", 513), ((Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -37), 0, (("typing/predef.mli", 54, 2063, 2063), ("typing/predef.mli", 54, 2063, 2090), 0), 0, Tag1 ("Predef", 34)), 0); (("path_match_failure", 514), ((Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -36), 0, (("typing/predef.mli", 56, 2092, 2092), ("typing/predef.mli", 56, 2092, 2122), 0), 0, Tag1 ("Predef", 35)), 0); (("path_assert_failure", 515), ((Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -35), 0, (("typing/predef.mli", 57, 2123, 2123), ("typing/predef.mli", 57, 2123, 2155), 0), 0, Tag1 ("Predef", 36)), 0); (("path_undefined_recursive_module", 516), ((Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -34), 0, (("typing/predef.mli", 58, 2156, 2156), ("typing/predef.mli", 58, 2156, 2200), 0), 0, Tag1 ("Predef", 37)), 0); (("ident_false", 517), ((Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -33), 0, (("typing/predef.mli", 60, 2202, 2202), ("typing/predef.mli", 60, 2202, 2227), 0), 0, Tag1 ("Predef", 38)), 0); (("ident_true", 518), ((Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -32), 0, (("typing/predef.mli", 61, 2228, 2228), ("typing/predef.mli", 61, 2228, 2252), 0), 0, Tag1 ("Predef", 39)), 0); (("ident_void", 519), ((Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -31), 0, (("typing/predef.mli", 62, 2253, 2253), ("typing/predef.mli", 62, 2253, 2277), 0), 0, Tag1 ("Predef", 40)), 0); (("ident_nil", 520), ((Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -30), 0, (("typing/predef.mli", 63, 2278, 2278), ("typing/predef.mli", 63, 2278, 2301), 0), 0, Tag1 ("Predef", 41)), 0); (("ident_cons", 521), ((Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -29), 0, (("typing/predef.mli", 64, 2302, 2302), ("typing/predef.mli", 64, 2302, 2326), 0), 0, Tag1 ("Predef", 42)), 0); (("ident_none", 522), ((Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -28), 0, (("typing/predef.mli", 65, 2327, 2327), ("typing/predef.mli", 65, 2327, 2351), 0), 0, Tag1 ("Predef", 43)), 0); (("ident_some", 523), ((Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -27), 0, (("typing/predef.mli", 66, 2352, 2352), ("typing/predef.mli", 66, 2352, 2376), 0), 0, Tag1 ("Predef", 44)), 0); (("build_initial_env", 524), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -26), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_declaration"), 0, (0)), 100000000, 0, -25), (Tag1 (0, ((("a")), 100000000, 0, -16), ((("a")), 100000000, 0, -16), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -21), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "extension_constructor"), 0, (0)), 100000000, 0, -20), (Tag1 (0, ((("a")), 100000000, 0, -16), ((("a")), 100000000, 0, -16), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), (Tag1 (0, ((("a")), 100000000, 0, -16), ((("a")), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("typing/predef.mli", 72, 2567, 2567), ("typing/predef.mli", 75, 2689, 2699), 0), 0, Tag1 ("Predef", 45)), 0); (("builtin_values", 525), ((Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11); (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -12)]), 100000000, 0, -10)], (0)), 100000000, 0, -9), 0, (("typing/predef.mli", 79, 2736, 2736), ("typing/predef.mli", 79, 2736, 2779), 0), 0, Tag1 ("Predef", 46)), 0); (("builtin_idents", 526), ((Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7); (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -8)]), 100000000, 0, -6)], (0)), 100000000, 0, -5), 0, (("typing/predef.mli", 80, 2780, 2780), ("typing/predef.mli", 80, 2780, 2823), 0), 0, Tag1 ("Predef", 47)), 0); (("ident_division_by_zero", 527), ((Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -4), 0, (("typing/predef.mli", 86, 3046, 3046), ("typing/predef.mli", 86, 3046, 3081), 0), 0, Tag1 ("Predef", 48)), 0); (("all_predef_exns", 528), ((Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -3)], (0)), 100000000, 0, -2), 0, (("typing/predef.mli", 87, 3082, 3082), ("typing/predef.mli", 87, 3082, 3116), 0), 0, Tag1 ("Predef", 49)), 0)], "Predef", [("Predef", ("\\\193L\n\233\"\133\005\156=\208\239\b@\184\217")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216"))], [(0)])

val all_predef_exns : Ident.t list
