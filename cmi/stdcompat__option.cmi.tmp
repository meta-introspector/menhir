type 'a t = 'a option = None | Some of 'a
val none : 'a option
val some : 'a -> 'a option
val value : 'a option -> default:'a -> 'a
val get : 'a option -> 'a
val bind : 'a option -> ('a -> 'b option) -> 'b option
val join : 'a option option -> 'a option
val map : ('a -> 'b) -> 'a option -> 'b option
val fold : none:'a -> some:('b -> 'a) -> 'b option -> 'a
val iter : ('a -> unit) -> 'a option -> unit
val is_none : 'a option -> bool
val is_some : 'a option -> bool
val equal : ('a -> 'a -> bool) -> 'a option -> 'a option -> bool
val compare : ('a -> 'a -> int) -> 'a option -> 'a option -> int
val to_result : none:'e -> 'a option -> ('a, 'e) result
val to_list : 'a option -> 'a list("DEBUG:rule", [Tag1 (("t", 426), ([((("a")), 100000000, 0, -91)], 1, Tag1 ([(("None", 270), (0), 0, (("stdcompat__option_s.mli", 4, 45, 47), ("stdcompat__option_s.mli", 4, 45, 53), 0), 0, Tag1 ("Stdcompat__option_s", 1)); (("Some", 271), ([((("a")), 100000000, 0, -91)]), 0, (("stdcompat__option_s.mli", 5, 55, 57), ("stdcompat__option_s.mli", 5, 55, 69), 0), 0, Tag1 ("Stdcompat__option_s", 2))], 0), 1, ((Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -91)], (0)), 100000000, 0, -90)), [25], [0], 0, 0, (("stdcompat__option_s.mli", 3, 21, 21), ("stdcompat__option_s.mli", 5, 55, 69), 0), 0, 0, 0, Tag1 ("Stdcompat__option_s", 0)), 1, 0); (("none", 427), ((Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -89)], (0)), 100000000, 0, -88), 0, (("stdcompat__option_s.mli", 17, 240, 240), ("stdcompat__option_s.mli", 17, 240, 260), 0), 0, Tag1 ("Stdcompat__option_s", 3)), 0); (("some", 428), ((Tag1 (0, ((("a")), 100000000, 0, -87), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -87)], (0)), 100000000, 0, -86), 0), 100000000, 0, -85), 0, (("stdcompat__option_s.mli", 20, 305, 305), ("stdcompat__option_s.mli", 20, 305, 331), 0), 0, Tag1 ("Stdcompat__option_s", 4)), 0); (("value", 429), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -83)], (0)), 100000000, 0, -84), (Tag1 (("default"), ((("a")), 100000000, 0, -83), ((("a")), 100000000, 0, -83), 0), 100000000, 0, -82), 0), 100000000, 0, -81), 0, (("stdcompat__option_s.mli", 23, 382, 382), ("stdcompat__option_s.mli", 23, 382, 423), 0), 0, Tag1 ("Stdcompat__option_s", 5)), 0); (("get", 430), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -79)], (0)), 100000000, 0, -80), ((("a")), 100000000, 0, -79), 0), 100000000, 0, -78), 0, (("stdcompat__option_s.mli", 26, 489, 489), ("stdcompat__option_s.mli", 26, 489, 514), 0), 0, Tag1 ("Stdcompat__option_s", 6)), 0); (("bind", 431), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -76)], (0)), 100000000, 0, -77), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -76), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -73)], (0)), 100000000, 0, -75), 0), 100000000, 0, -74), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -73)], (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), 0, (("stdcompat__option_s.mli", 29, 564, 564), ("stdcompat__option_s.mli", 29, 564, 618), 0), 0, Tag1 ("Stdcompat__option_s", 7)), 0); (("join", 432), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -67)], (0)), 100000000, 0, -69)], (0)), 100000000, 0, -68), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -67)], (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("stdcompat__option_s.mli", 32, 697, 697), ("stdcompat__option_s.mli", 32, 697, 737), 0), 0, Tag1 ("Stdcompat__option_s", 8)), 0); (("map", 433), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -63), ((("b")), 100000000, 0, -61), 0), 100000000, 0, -64), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -63)], (0)), 100000000, 0, -62), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -61)], (0)), 100000000, 0, -60), 0), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("stdcompat__option_s.mli", 35, 802, 802), ("stdcompat__option_s.mli", 35, 802, 848), 0), 0, Tag1 ("Stdcompat__option_s", 9)), 0); (("fold", 434), ((Tag1 (("none"), ((("a")), 100000000, 0, -54), (Tag1 (("some"), (Tag1 (0, ((("b")), 100000000, 0, -56), ((("a")), 100000000, 0, -54), 0), 100000000, 0, -57), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -56)], (0)), 100000000, 0, -55), ((("a")), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("stdcompat__option_s.mli", 38, 919, 919), ("stdcompat__option_s.mli", 38, 919, 975), 0), 0, Tag1 ("Stdcompat__option_s", 10)), 0); (("iter", 435), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -48), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -48)], (0)), 100000000, 0, -47), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("stdcompat__option_s.mli", 41, 1056, 1056), ("stdcompat__option_s.mli", 41, 1056, 1100), 0), 0, Tag1 ("Stdcompat__option_s", 11)), 0); (("is_none", 436), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -43)], (0)), 100000000, 0, -42), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("stdcompat__option_s.mli", 44, 1169, 1169), ("stdcompat__option_s.mli", 44, 1169, 1200), 0), 0, Tag1 ("Stdcompat__option_s", 12)), 0); (("is_some", 437), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -39)], (0)), 100000000, 0, -38), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("stdcompat__option_s.mli", 47, 1256, 1256), ("stdcompat__option_s.mli", 47, 1256, 1287), 0), 0, Tag1 ("Stdcompat__option_s", 13)), 0); (("equal", 438), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -31), (Tag1 (0, ((("a")), 100000000, 0, -31), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -31)], (0)), 100000000, 0, -32), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -31)], (0)), 100000000, 0, -30), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("stdcompat__option_s.mli", 50, 1343, 1343), ("stdcompat__option_s.mli", 50, 1343, 1407), 0), 0, Tag1 ("Stdcompat__option_s", 14)), 0); (("compare", 439), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -21), (Tag1 (0, ((("a")), 100000000, 0, -21), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -21)], (0)), 100000000, 0, -22), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -21)], (0)), 100000000, 0, -20), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("stdcompat__option_s.mli", 54, 1500, 1500), ("stdcompat__option_s.mli", 54, 1500, 1564), 0), 0, Tag1 ("Stdcompat__option_s", 15)), 0); (("to_result", 440), ((Tag1 (("none"), ((("e")), 100000000, 0, -14), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -13)], (0)), 100000000, 0, -15), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -13); ((("e")), 100000000, 0, -14)], (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("stdcompat__option_s.mli", 59, 1658, 1658), ("stdcompat__option_s.mli", 59, 1658, 1713), 0), 0, Tag1 ("Stdcompat__option_s", 16)), 0); (("to_list", 441), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -8)], (0)), 100000000, 0, -9), (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -8)], (0)), 100000000, 0, -7), 0), 100000000, 0, -6), 0, (("stdcompat__option_s.mli", 67, 1879, 1879), ("stdcompat__option_s.mli", 67, 1879, 1913), 0), 0, Tag1 ("Stdcompat__option_s", 17)), 0); (("to_seq", 442), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -4)], (0)), 100000000, 0, -5), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [((("a")), 100000000, 0, -4)], (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("stdcompat__option_s.mli", 71, 1973, 1973), ("stdcompat__option_s.mli", 71, 1973, 2007), 0), 0, Tag1 ("Stdcompat__option_s", 18)), 0)], "Stdcompat__option", [("Stdcompat__option", ("G\159_\192(\183\012\144\167:q;}\012\247q")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stdcompat__option_s", ("|\172!\129\188\128=Yj\127k/\211S9\187")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val to_seq : 'a option -> 'a Seq.t
