val push_rel_assum :
  Names.Name.t Context.binder_annot * EConstr.types ->
  Environ.env -> Environ.env
val push_rels_assum :
  (Names.Name.t Context.binder_annot * Constr.types) list ->
  Environ.env -> Environ.env
val push_named_rec_types :
  Names.Name.t Context.binder_annot array * Constr.types array * 'a ->
  Environ.env -> Environ.env
val lookup_rel_id :
  Names.Id.t -> ('c, 't) Context.Rel.pt -> int * 'c option * 't
val rel_vect : int -> int -> Constr.constr array
val rel_list : int -> int -> EConstr.constr list
val mkProd_or_LetIn :
  EConstr.rel_declaration -> EConstr.types -> EConstr.types
val mkProd_wo_LetIn :
  EConstr.rel_declaration -> EConstr.types -> EConstr.types
val it_mkProd :
  EConstr.types ->
  (Names.Name.t Context.binder_annot * EConstr.types) list -> EConstr.types
val it_mkLambda :
  EConstr.constr ->
  (Names.Name.t Context.binder_annot * EConstr.types) list -> EConstr.constr
val it_mkProd_or_LetIn :
  EConstr.types -> EConstr.rel_context -> EConstr.types
val it_mkProd_wo_LetIn :
  EConstr.types -> EConstr.rel_context -> EConstr.types
val it_mkLambda_or_LetIn :
  Constr.constr -> Constr.rel_context -> Constr.constr
val it_mkNamedProd_or_LetIn :
  Evd.evar_map -> EConstr.types -> EConstr.named_context -> EConstr.types
val it_mkNamedLambda_or_LetIn :
  Evd.evar_map -> EConstr.constr -> EConstr.named_context -> EConstr.constr
val it_mkNamedProd_wo_LetIn :
  Constr.types -> Constr.named_context -> Constr.types
val it_mkLambda_or_LetIn_from_no_LetIn :
  Constr.constr -> Constr.rel_context -> Constr.constr
val map_constr_with_binders_left_to_right :
  Environ.env ->
  Evd.evar_map ->
  (EConstr.rel_declaration -> 'a -> 'a) ->
  ('a -> EConstr.constr -> EConstr.constr) ->
  'a -> EConstr.constr -> EConstr.constr
val map_constr_with_full_binders :
  Environ.env ->
  Evd.evar_map ->
  (EConstr.rel_declaration -> 'a -> 'a) ->
  ('a -> EConstr.constr -> EConstr.constr) ->
  'a -> EConstr.constr -> EConstr.constr
val fold_constr_with_full_binders :
  Environ.env ->
  Evd.evar_map ->
  (EConstr.rel_declaration -> 'a -> 'a) ->
  ('a -> 'b -> EConstr.constr -> 'b) -> 'a -> 'b -> EConstr.constr -> 'b
val strip_head_cast : Evd.evar_map -> EConstr.constr -> EConstr.constr
val drop_extra_implicit_args :
  Evd.evar_map -> EConstr.constr -> EConstr.constr
exception Occur
val occur_meta : Evd.evar_map -> EConstr.constr -> bool
val occur_existential : Evd.evar_map -> EConstr.constr -> bool
val occur_meta_or_existential : Evd.evar_map -> EConstr.constr -> bool
val occur_metavariable :
  Evd.evar_map -> Constr.metavariable -> EConstr.constr -> bool
val occur_evar : Evd.evar_map -> Evar.t -> EConstr.constr -> bool
val occur_var :
  Environ.env -> Evd.evar_map -> Names.Id.t -> EConstr.constr -> bool
val occur_var_indirectly :
  Environ.env ->
  Evd.evar_map -> Names.Id.t -> EConstr.constr -> Names.GlobRef.t option
val occur_var_in_decl :
  Environ.env ->
  Evd.evar_map -> Names.Id.t -> EConstr.named_declaration -> bool
val occur_vars :
  Environ.env -> Evd.evar_map -> Names.Id.Set.t -> EConstr.constr -> bool
val occur_vars_in_decl :
  Environ.env ->
  Evd.evar_map -> Names.Id.Set.t -> EConstr.named_declaration -> bool
val local_occur_var : Evd.evar_map -> Names.Id.t -> EConstr.constr -> bool
val local_occur_var_in_decl :
  Evd.evar_map -> Names.Id.t -> EConstr.named_declaration -> bool
val free_rels : Evd.evar_map -> EConstr.constr -> Int.Set.t
val free_rels_and_unqualified_refs :
  Evd.evar_map -> EConstr.constr -> Int.Set.t * Names.Id.Set.t
val dependent : Evd.evar_map -> EConstr.constr -> EConstr.constr -> bool
val dependent_no_evar :
  Evd.evar_map -> EConstr.constr -> EConstr.constr -> bool
val dependent_in_decl :
  Evd.evar_map -> EConstr.constr -> EConstr.named_declaration -> bool
val count_occurrences :
  Evd.evar_map -> EConstr.constr -> EConstr.constr -> int
val collect_metas : Evd.evar_map -> EConstr.constr -> int list
val collect_vars : Evd.evar_map -> EConstr.constr -> Names.Id.Set.t
type meta_value_map = (Constr.metavariable * Constr.constr) list
val subst_meta : meta_value_map -> Constr.constr -> Constr.constr
val isMetaOf : Evd.evar_map -> Constr.metavariable -> EConstr.constr -> bool
type meta_type_map = (Constr.metavariable * Constr.types) list
val pop : EConstr.constr -> EConstr.constr
val replace_term_gen :
  Evd.evar_map ->
  (Evd.evar_map -> int -> EConstr.constr -> bool) ->
  int -> EConstr.constr -> EConstr.constr -> EConstr.constr
val subst_term :
  Evd.evar_map -> EConstr.constr -> EConstr.constr -> EConstr.constr
val replace_term :
  Evd.evar_map ->
  EConstr.constr -> EConstr.constr -> EConstr.constr -> EConstr.constr
val base_sort_cmp : Conversion.conv_pb -> Sorts.t -> Sorts.t -> bool
val compare_constr_univ :
  Environ.env ->
  Evd.evar_map ->
  (Conversion.conv_pb -> EConstr.constr -> EConstr.constr -> bool) ->
  Conversion.conv_pb -> EConstr.constr -> EConstr.constr -> bool
val constr_cmp :
  Environ.env ->
  Evd.evar_map ->
  Conversion.conv_pb -> EConstr.constr -> EConstr.constr -> bool
val eq_constr :
  Environ.env -> Evd.evar_map -> EConstr.constr -> EConstr.constr -> bool
val eta_reduce_head : Evd.evar_map -> EConstr.constr -> EConstr.constr
val prod_applist :
  Evd.evar_map -> EConstr.constr -> EConstr.constr list -> EConstr.constr
val prod_applist_decls :
  Evd.evar_map ->
  int -> EConstr.constr -> EConstr.constr list -> EConstr.constr
val strip_outer_cast : Evd.evar_map -> EConstr.constr -> EConstr.constr
val nb_lam : Evd.evar_map -> EConstr.constr -> int
val nb_prod : Evd.evar_map -> EConstr.constr -> int
val nb_prod_modulo_zeta : Evd.evar_map -> EConstr.constr -> int
val last_arg : Evd.evar_map -> EConstr.constr -> EConstr.constr
val adjust_app_list_size :
  EConstr.constr ->
  EConstr.constr list ->
  EConstr.constr ->
  EConstr.constr list ->
  EConstr.constr * EConstr.constr list * EConstr.constr * EConstr.constr list
val adjust_app_array_size :
  EConstr.constr ->
  EConstr.constr array ->
  EConstr.constr ->
  EConstr.constr array ->
  EConstr.constr * EConstr.constr array * EConstr.constr *
  EConstr.constr array
type names_context = Names.Name.t list
val add_name : Names.Name.t -> names_context -> names_context
val lookup_name_of_rel : int -> names_context -> Names.Name.t
val lookup_rel_of_name : Names.Id.t -> names_context -> int
val empty_names_context : names_context
val ids_of_rel_context : ('c, 't) Context.Rel.pt -> Names.Id.t list
val ids_of_named_context : ('c, 't) Context.Named.pt -> Names.Id.t list
val ids_of_context : Environ.env -> Names.Id.t list
val names_of_rel_context : Environ.env -> names_context
val context_chop :
  int -> Constr.rel_context -> Constr.rel_context * Constr.rel_context
val env_rel_context_chop :
  int -> Environ.env -> Environ.env * EConstr.rel_context
val vars_of_env : Environ.env -> Names.Id.Set.t
val add_vname : Names.Id.Set.t -> Names.Name.t -> Names.Id.Set.t
val process_rel_context :
  (EConstr.rel_declaration -> Environ.env -> Environ.env) ->
  Environ.env -> Environ.env
val assums_of_rel_context :
  ('c, 't) Context.Rel.pt -> (Names.Name.t Context.binder_annot * 't) list
val lift_rel_context : int -> Constr.rel_context -> Constr.rel_context
val substl_rel_context :
  Constr.constr list -> Constr.rel_context -> Constr.rel_context
val smash_rel_context : Constr.rel_context -> Constr.rel_context
val map_rel_context_with_binders :
  (int -> 'c -> 'c) -> ('c, 'c) Context.Rel.pt -> ('c, 'c) Context.Rel.pt
val map_rel_context_in_env :
  (Environ.env -> Constr.constr -> Constr.constr) ->
  Environ.env -> Constr.rel_context -> Constr.rel_context
val fold_named_context_both_sides :
  ('a -> Constr.named_declaration -> Constr.named_declaration list -> 'a) ->
  Constr.named_context -> init:'a -> 'a
val mem_named_context_val : Names.Id.t -> Environ.named_context_val -> bool
val compact_named_context :
  Evd.evar_map -> EConstr.named_context -> EConstr.compacted_context
val map_rel_decl :
  ('a -> 'b) ->
  ('a, 'a) Context.Rel.Declaration.pt -> ('b, 'b) Context.Rel.Declaration.pt
val map_named_decl :
  ('a -> 'b) ->
  ('a, 'a) Context.Named.Declaration.pt ->
  ('b, 'b) Context.Named.Declaration.pt
val clear_named_body : Names.Id.t -> Environ.env -> Environ.env
val global_vars_set :
  Environ.env -> Evd.evar_map -> EConstr.constr -> Names.Id.Set.t
val global_vars_set_of_decl :
  Environ.env -> Evd.evar_map -> EConstr.named_declaration -> Names.Id.Set.t
val global_app_of_constr :
  Evd.evar_map ->
  EConstr.constr ->
  (Names.GlobRef.t * EConstr.EInstance.t) * EConstr.constr option
val dependency_closure :
  Environ.env ->
  Evd.evar_map -> EConstr.named_context -> Names.Id.Set.t -> Names.Id.t list
val is_section_variable : Environ.env -> Names.Id.t -> bool
val global_of_constr :
  Evd.evar_map -> EConstr.constr -> Names.GlobRef.t * EConstr.EInstance.t
val is_global :
  Environ.env -> Evd.evar_map -> Names.GlobRef.t -> EConstr.constr -> bool
val isGlobalRef : Evd.evar_map -> EConstr.constr -> bool
val is_template_polymorphic_ind :
  Environ.env -> Evd.evar_map -> EConstr.constr -> bool
val is_Prop : Evd.evar_map -> EConstr.constr -> bool
val is_Set : Evd.evar_map -> EConstr.constr -> bool
val is_Type : Evd.evar_map -> EConstr.constr -> bool
val reference_of_level :
  Evd.evar_map -> Univ.Level.t -> Libnames.qualid option
val pr_global_env : Environ.env -> Names.GlobRef.t -> Pp.t
val pr_existential_key : Environ.env -> Evd.evar_map -> Evar.t -> Pp.t
val evar_suggested_name : Environ.env -> Evd.evar_map -> Evar.t -> Names.Id.t
val pr_evar_info : Environ.env -> Evd.evar_map -> 'a Evd.evar_info -> Pp.t
val pr_evar_constraints : Evd.evar_map -> Evd.evar_constraint list -> Pp.t
val pr_evar_map :
  ?with_univs:bool -> int option -> Environ.env -> Evd.evar_map -> Pp.t
val pr_evar_map_filter :
  ?with_univs:bool ->
  (Evar.t -> Evd.any_evar_info -> bool) ->
  Environ.env -> Evd.evar_map -> Pp.t
val pr_metaset : Evd.Metaset.t -> Pp.t
val pr_evar_universe_context : UState.t -> Pp.t
val pr_evd_level : Evd.evar_map -> Univ.Level.t -> Pp.t
module Internal :
  sig
    val debug_print_constr : Evd.evar_map -> EConstr.constr -> Pp.t
    val print_constr_env :
      Environ.env -> Evd.evar_map -> EConstr.constr -> Pp.t
    val set_print_constr :
      (Environ.env -> Evd.evar_map -> EConstr.constr -> Pp.t) -> unit
    val print_named_context : Environ.env -> Pp.t
    val pr_rel_decl : Environ.env -> Constr.rel_declaration -> Pp.t
    val print_rel_context : Environ.env -> Pp.t
    val print_env : Environ.env -> Pp.t("DEBUG:rule", [(("push_rel_assum", 1769), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -811)], (0)), 100000000, 0, -810); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -812)]), 100000000, 0, -809), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -808), (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -807), 0), 100000000, 0, -806), 0), 100000000, 0, -805), 0, (("engine/termops.mli", 20, 853, 853), ("engine/termops.mli", 20, 853, 923), 0), 0, Tag1 ("Termops", 1)), 0); (("push_rels_assum", 1770), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -803)], (0)), 100000000, 0, -802); (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -804)]), 100000000, 0, -801)], (0)), 100000000, 0, -800), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -799), (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -798), 0), 100000000, 0, -797), 0), 100000000, 0, -796), 0, (("engine/termops.mli", 21, 924, 924), ("engine/termops.mli", 21, 924, 1009), 0), 0, Tag1 ("Termops", 2)), 0); (("push_named_rec_types", 1771), ((Tag1 (0, (Tag2 ([(Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -792)], (0)), 100000000, 0, -791)], (0)), 100000000, 0, -790); (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -794)], (0)), 100000000, 0, -793); ((("a")), 100000000, 0, -795)]), 100000000, 0, -789), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -788), (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -787), 0), 100000000, 0, -786), 0), 100000000, 0, -785), 0, (("engine/termops.mli", 22, 1010, 1010), ("engine/termops.mli", 22, 1010, 1110), 0), 0, Tag1 ("Termops", 3)), 0); (("lookup_rel_id", 1772), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -784), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Context")), "Rel"), "pt"), [((("c")), 100000000, 0, -781); ((("t")), 100000000, 0, -782)], (0)), 100000000, 0, -783), (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -779); (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -781)], (0)), 100000000, 0, -780); ((("t")), 100000000, 0, -782)]), 100000000, 0, -778), 0), 100000000, 0, -777), 0), 100000000, 0, -776), 0, (("engine/termops.mli", 24, 1112, 1112), ("engine/termops.mli", 24, 1112, 1187), 0), 0, Tag1 ("Termops", 4)), 0); (("rel_vect", 1773), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -775), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -774), (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -773)], (0)), 100000000, 0, -772), 0), 100000000, 0, -771), 0), 100000000, 0, -770), 0, (("engine/termops.mli", 31, 1449, 1449), ("engine/termops.mli", 31, 1449, 1497), 0), 0, Tag1 ("Termops", 5)), 0); (("rel_list", 1774), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -769), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -768), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -767)], (0)), 100000000, 0, -766), 0), 100000000, 0, -765), 0), 100000000, 0, -764), 0, (("engine/termops.mli", 32, 1498, 1498), ("engine/termops.mli", 32, 1498, 1538), 0), 0, Tag1 ("Termops", 6)), 0); (("mkProd_or_LetIn", 1775), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "rel_declaration"), 0, (0)), 100000000, 0, -763), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -762), (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -761), 0), 100000000, 0, -760), 0), 100000000, 0, -759), 0, (("engine/termops.mli", 36, 1589, 1589), ("engine/termops.mli", 37, 1645, 1711), 0), [(("ocaml.deprecated", (("engine/termops.mli", 37, 1645, 1650), ("engine/termops.mli", 37, 1645, 1666), 0)), ([([(Tag1 (Tag2 ("Use synonymous [EConstr.mkProd_or_LetIn].", (("engine/termops.mli", 37, 1645, 1668), ("engine/termops.mli", 37, 1645, 1709), 0), 0)), (("engine/termops.mli", 37, 1645, 1667), ("engine/termops.mli", 37, 1645, 1710), 0), 0, 0)], (("engine/termops.mli", 37, 1645, 1667), ("engine/termops.mli", 37, 1645, 1710), 0))]), (("engine/termops.mli", 37, 1645, 1647), ("engine/termops.mli", 37, 1645, 1711), 0))], Tag1 ("Termops", 7)), 0); (("mkProd_wo_LetIn", 1776), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "rel_declaration"), 0, (0)), 100000000, 0, -758), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -757), (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -756), 0), 100000000, 0, -755), 0), 100000000, 0, -754), 0, (("engine/termops.mli", 39, 1713, 1713), ("engine/termops.mli", 40, 1769, 1835), 0), [(("ocaml.deprecated", (("engine/termops.mli", 40, 1769, 1774), ("engine/termops.mli", 40, 1769, 1790), 0)), ([([(Tag1 (Tag2 ("Use synonymous [EConstr.mkProd_wo_LetIn].", (("engine/termops.mli", 40, 1769, 1792), ("engine/termops.mli", 40, 1769, 1833), 0), 0)), (("engine/termops.mli", 40, 1769, 1791), ("engine/termops.mli", 40, 1769, 1834), 0), 0, 0)], (("engine/termops.mli", 40, 1769, 1791), ("engine/termops.mli", 40, 1769, 1834), 0))]), (("engine/termops.mli", 40, 1769, 1771), ("engine/termops.mli", 40, 1769, 1835), 0))], Tag1 ("Termops", 8)), 0); (("it_mkProd", 1777), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -753), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -751)], (0)), 100000000, 0, -750); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -752)]), 100000000, 0, -749)], (0)), 100000000, 0, -748), (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -747), 0), 100000000, 0, -746), 0), 100000000, 0, -745), 0, (("engine/termops.mli", 42, 1837, 1837), ("engine/termops.mli", 43, 1914, 1974), 0), [(("ocaml.deprecated", (("engine/termops.mli", 43, 1914, 1919), ("engine/termops.mli", 43, 1914, 1935), 0)), ([([(Tag1 (Tag2 ("Use synonymous [EConstr.it_mkProd].", (("engine/termops.mli", 43, 1914, 1937), ("engine/termops.mli", 43, 1914, 1972), 0), 0)), (("engine/termops.mli", 43, 1914, 1936), ("engine/termops.mli", 43, 1914, 1973), 0), 0, 0)], (("engine/termops.mli", 43, 1914, 1936), ("engine/termops.mli", 43, 1914, 1973), 0))]), (("engine/termops.mli", 43, 1914, 1916), ("engine/termops.mli", 43, 1914, 1974), 0))], Tag1 ("Termops", 9)), 0); (("it_mkLambda", 1778), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -744), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -742)], (0)), 100000000, 0, -741); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -743)]), 100000000, 0, -740)], (0)), 100000000, 0, -739), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -738), 0), 100000000, 0, -737), 0), 100000000, 0, -736), 0, (("engine/termops.mli", 45, 1976, 1976), ("engine/termops.mli", 46, 2057, 2119), 0), [(("ocaml.deprecated", (("engine/termops.mli", 46, 2057, 2062), ("engine/termops.mli", 46, 2057, 2078), 0)), ([([(Tag1 (Tag2 ("Use synonymous [EConstr.it_mkLambda].", (("engine/termops.mli", 46, 2057, 2080), ("engine/termops.mli", 46, 2057, 2117), 0), 0)), (("engine/termops.mli", 46, 2057, 2079), ("engine/termops.mli", 46, 2057, 2118), 0), 0, 0)], (("engine/termops.mli", 46, 2057, 2079), ("engine/termops.mli", 46, 2057, 2118), 0))]), (("engine/termops.mli", 46, 2057, 2059), ("engine/termops.mli", 46, 2057, 2119), 0))], Tag1 ("Termops", 10)), 0); (("it_mkProd_or_LetIn", 1779), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -735), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "rel_context"), 0, (0)), 100000000, 0, -734), (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -733), 0), 100000000, 0, -732), 0), 100000000, 0, -731), 0, (("engine/termops.mli", 48, 2121, 2121), ("engine/termops.mli", 49, 2176, 2245), 0), [(("ocaml.deprecated", (("engine/termops.mli", 49, 2176, 2181), ("engine/termops.mli", 49, 2176, 2197), 0)), ([([(Tag1 (Tag2 ("Use synonymous [EConstr.it_mkProd_or_LetIn].", (("engine/termops.mli", 49, 2176, 2199), ("engine/termops.mli", 49, 2176, 2243), 0), 0)), (("engine/termops.mli", 49, 2176, 2198), ("engine/termops.mli", 49, 2176, 2244), 0), 0, 0)], (("engine/termops.mli", 49, 2176, 2198), ("engine/termops.mli", 49, 2176, 2244), 0))]), (("engine/termops.mli", 49, 2176, 2178), ("engine/termops.mli", 49, 2176, 2245), 0))], Tag1 ("Termops", 11)), 0); (("it_mkProd_wo_LetIn", 1780), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -730), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "rel_context"), 0, (0)), 100000000, 0, -729), (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -728), 0), 100000000, 0, -727), 0), 100000000, 0, -726), 0, (("engine/termops.mli", 51, 2247, 2247), ("engine/termops.mli", 52, 2302, 2371), 0), [(("ocaml.deprecated", (("engine/termops.mli", 52, 2302, 2307), ("engine/termops.mli", 52, 2302, 2323), 0)), ([([(Tag1 (Tag2 ("Use synonymous [EConstr.it_mkProd_wo_LetIn].", (("engine/termops.mli", 52, 2302, 2325), ("engine/termops.mli", 52, 2302, 2369), 0), 0)), (("engine/termops.mli", 52, 2302, 2324), ("engine/termops.mli", 52, 2302, 2370), 0), 0, 0)], (("engine/termops.mli", 52, 2302, 2324), ("engine/termops.mli", 52, 2302, 2370), 0))]), (("engine/termops.mli", 52, 2302, 2304), ("engine/termops.mli", 52, 2302, 2371), 0))], Tag1 ("Termops", 12)), 0); (("it_mkLambda_or_LetIn", 1781), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -725), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -724), (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -723), 0), 100000000, 0, -722), 0), 100000000, 0, -721), 0, (("engine/termops.mli", 54, 2373, 2373), ("engine/termops.mli", 55, 2453, 2521), 0), [(("ocaml.deprecated", (("engine/termops.mli", 55, 2453, 2458), ("engine/termops.mli", 55, 2453, 2474), 0)), ([([(Tag1 (Tag2 ("Use synonymous [Term.it_mkLambda_or_LetIn].", (("engine/termops.mli", 55, 2453, 2476), ("engine/termops.mli", 55, 2453, 2519), 0), 0)), (("engine/termops.mli", 55, 2453, 2475), ("engine/termops.mli", 55, 2453, 2520), 0), 0, 0)], (("engine/termops.mli", 55, 2453, 2475), ("engine/termops.mli", 55, 2453, 2520), 0))]), (("engine/termops.mli", 55, 2453, 2455), ("engine/termops.mli", 55, 2453, 2521), 0))], Tag1 ("Termops", 13)), 0); (("it_mkNamedProd_or_LetIn", 1782), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -720), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -719), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "named_context"), 0, (0)), 100000000, 0, -718), (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -717), 0), 100000000, 0, -716), 0), 100000000, 0, -715), 0), 100000000, 0, -714), 0, (("engine/termops.mli", 57, 2523, 2523), ("engine/termops.mli", 58, 2601, 2675), 0), [(("ocaml.deprecated", (("engine/termops.mli", 58, 2601, 2606), ("engine/termops.mli", 58, 2601, 2622), 0)), ([([(Tag1 (Tag2 ("Use synonymous [EConstr.it_mkNamedProd_or_LetIn].", (("engine/termops.mli", 58, 2601, 2624), ("engine/termops.mli", 58, 2601, 2673), 0), 0)), (("engine/termops.mli", 58, 2601, 2623), ("engine/termops.mli", 58, 2601, 2674), 0), 0, 0)], (("engine/termops.mli", 58, 2601, 2623), ("engine/termops.mli", 58, 2601, 2674), 0))]), (("engine/termops.mli", 58, 2601, 2603), ("engine/termops.mli", 58, 2601, 2675), 0))], Tag1 ("Termops", 14)), 0); (("it_mkNamedLambda_or_LetIn", 1783), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -713), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -712), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "named_context"), 0, (0)), 100000000, 0, -711), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -710), 0), 100000000, 0, -709), 0), 100000000, 0, -708), 0), 100000000, 0, -707), 0, (("engine/termops.mli", 60, 2677, 2677), ("engine/termops.mli", 61, 2759, 2835), 0), [(("ocaml.deprecated", (("engine/termops.mli", 61, 2759, 2764), ("engine/termops.mli", 61, 2759, 2780), 0)), ([([(Tag1 (Tag2 ("Use synonymous [EConstr.it_mkNamedLambda_or_LetIn].", (("engine/termops.mli", 61, 2759, 2782), ("engine/termops.mli", 61, 2759, 2833), 0), 0)), (("engine/termops.mli", 61, 2759, 2781), ("engine/termops.mli", 61, 2759, 2834), 0), 0, 0)], (("engine/termops.mli", 61, 2759, 2781), ("engine/termops.mli", 61, 2759, 2834), 0))]), (("engine/termops.mli", 61, 2759, 2761), ("engine/termops.mli", 61, 2759, 2835), 0))], Tag1 ("Termops", 15)), 0); (("it_mkNamedProd_wo_LetIn", 1784), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -706), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "named_context"), 0, (0)), 100000000, 0, -705), (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -704), 0), 100000000, 0, -703), 0), 100000000, 0, -702), 0, (("engine/termops.mli", 65, 2885, 2885), ("engine/termops.mli", 65, 2885, 2967), 0), 0, Tag1 ("Termops", 16)), 0); (("it_mkLambda_or_LetIn_from_no_LetIn", 1785), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -701), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -700), (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -699), 0), 100000000, 0, -698), 0), 100000000, 0, -697), 0, (("engine/termops.mli", 69, 3086, 3086), ("engine/termops.mli", 69, 3086, 3179), 0), 0, Tag1 ("Termops", 17)), 0); (("map_constr_with_binders_left_to_right", 1786), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -696), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -695), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "rel_declaration"), 0, (0)), 100000000, 0, -694), (Tag1 (0, ((("a")), 100000000, 0, -687), ((("a")), 100000000, 0, -687), 0), 100000000, 0, -693), 0), 100000000, 0, -692), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -687), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -691), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -690), 0), 100000000, 0, -689), 0), 100000000, 0, -688), (Tag1 (0, ((("a")), 100000000, 0, -687), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -686), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -685), 0), 100000000, 0, -684), 0), 100000000, 0, -683), 0), 100000000, 0, -682), 0), 100000000, 0, -681), 0), 100000000, 0, -680), 0), 100000000, 0, -679), 0, (("engine/termops.mli", 73, 3221, 3221), ("engine/termops.mli", 77, 3363, 3389), 0), 0, Tag1 ("Termops", 18)), 0); (("map_constr_with_full_binders", 1787), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -678), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -677), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "rel_declaration"), 0, (0)), 100000000, 0, -676), (Tag1 (0, ((("a")), 100000000, 0, -669), ((("a")), 100000000, 0, -669), 0), 100000000, 0, -675), 0), 100000000, 0, -674), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -669), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -673), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -672), 0), 100000000, 0, -671), 0), 100000000, 0, -670), (Tag1 (0, ((("a")), 100000000, 0, -669), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -668), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -667), 0), 100000000, 0, -666), 0), 100000000, 0, -665), 0), 100000000, 0, -664), 0), 100000000, 0, -663), 0), 100000000, 0, -662), 0), 100000000, 0, -661), 0, (("engine/termops.mli", 78, 3390, 3390), ("engine/termops.mli", 81, 3493, 3545), 0), 0, Tag1 ("Termops", 19)), 0); (("fold_constr_with_full_binders", 1788), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -660), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -659), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "rel_declaration"), 0, (0)), 100000000, 0, -658), (Tag1 (0, ((("a")), 100000000, 0, -651), ((("a")), 100000000, 0, -651), 0), 100000000, 0, -657), 0), 100000000, 0, -656), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -651), (Tag1 (0, ((("b")), 100000000, 0, -649), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -655), ((("b")), 100000000, 0, -649), 0), 100000000, 0, -654), 0), 100000000, 0, -653), 0), 100000000, 0, -652), (Tag1 (0, ((("a")), 100000000, 0, -651), (Tag1 (0, ((("b")), 100000000, 0, -649), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -650), ((("b")), 100000000, 0, -649), 0), 100000000, 0, -648), 0), 100000000, 0, -647), 0), 100000000, 0, -646), 0), 100000000, 0, -645), 0), 100000000, 0, -644), 0), 100000000, 0, -643), 0), 100000000, 0, -642), 0, (("engine/termops.mli", 83, 3547, 3547), ("engine/termops.mli", 86, 3681, 3707), 0), 0, Tag1 ("Termops", 20)), 0); (("strip_head_cast", 1789), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -641), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -640), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -639), 0), 100000000, 0, -638), 0), 100000000, 0, -637), 0, (("engine/termops.mli", 90, 3783, 3783), ("engine/termops.mli", 90, 3783, 3837), 0), 0, Tag1 ("Termops", 21)), 0); (("drop_extra_implicit_args", 1790), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -636), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -635), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -634), 0), 100000000, 0, -633), 0), 100000000, 0, -632), 0, (("engine/termops.mli", 91, 3838, 3838), ("engine/termops.mli", 91, 3838, 3901), 0), 0, Tag1 ("Termops", 22)), 0); Tag2 (("Occur", 1791), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Termops", 23)), 2, 0); (("occur_meta", 1792), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -631), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -630), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -629), 0), 100000000, 0, -628), 0), 100000000, 0, -627), 0, (("engine/termops.mli", 96, 3940, 3940), ("engine/termops.mli", 96, 3940, 3987), 0), 0, Tag1 ("Termops", 24)), 0); (("occur_existential", 1793), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -626), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -625), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -624), 0), 100000000, 0, -623), 0), 100000000, 0, -622), 0, (("engine/termops.mli", 97, 3988, 3988), ("engine/termops.mli", 97, 3988, 4042), 0), 0, Tag1 ("Termops", 25)), 0); (("occur_meta_or_existential", 1794), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -621), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -620), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -619), 0), 100000000, 0, -618), 0), 100000000, 0, -617), 0, (("engine/termops.mli", 98, 4043, 4043), ("engine/termops.mli", 98, 4043, 4105), 0), 0, Tag1 ("Termops", 26)), 0); (("occur_metavariable", 1795), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -616), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "metavariable"), 0, (0)), 100000000, 0, -615), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -614), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -613), 0), 100000000, 0, -612), 0), 100000000, 0, -611), 0), 100000000, 0, -610), 0, (("engine/termops.mli", 99, 4106, 4106), ("engine/termops.mli", 99, 4106, 4177), 0), 0, Tag1 ("Termops", 27)), 0); (("occur_evar", 1796), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -609), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -608), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -607), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -606), 0), 100000000, 0, -605), 0), 100000000, 0, -604), 0), 100000000, 0, -603), 0, (("engine/termops.mli", 100, 4178, 4178), ("engine/termops.mli", 100, 4178, 4235), 0), 0, Tag1 ("Termops", 28)), 0); (("occur_var", 1797), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -602), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -601), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -600), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -599), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -598), 0), 100000000, 0, -597), 0), 100000000, 0, -596), 0), 100000000, 0, -595), 0), 100000000, 0, -594), 0, (("engine/termops.mli", 101, 4236, 4236), ("engine/termops.mli", 101, 4236, 4297), 0), 0, Tag1 ("Termops", 29)), 0); (("occur_var_indirectly", 1798), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -593), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -592), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -591), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -590), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -589)], (0)), 100000000, 0, -588), 0), 100000000, 0, -587), 0), 100000000, 0, -586), 0), 100000000, 0, -585), 0), 100000000, 0, -584), 0, (("engine/termops.mli", 102, 4298, 4298), ("engine/termops.mli", 102, 4298, 4382), 0), 0, Tag1 ("Termops", 30)), 0); (("occur_var_in_decl", 1799), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -583), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -582), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -581), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "named_declaration"), 0, (0)), 100000000, 0, -580), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -579), 0), 100000000, 0, -578), 0), 100000000, 0, -577), 0), 100000000, 0, -576), 0), 100000000, 0, -575), 0, (("engine/termops.mli", 103, 4383, 4383), ("engine/termops.mli", 103, 4383, 4463), 0), 0, Tag1 ("Termops", 31)), 0); (("occur_vars", 1800), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -574), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -573), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -572), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -571), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -570), 0), 100000000, 0, -569), 0), 100000000, 0, -568), 0), 100000000, 0, -567), 0), 100000000, 0, -566), 0, (("engine/termops.mli", 104, 4464, 4464), ("engine/termops.mli", 104, 4464, 4530), 0), 0, Tag1 ("Termops", 32)), 0); (("occur_vars_in_decl", 1801), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -565), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -564), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -563), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "named_declaration"), 0, (0)), 100000000, 0, -562), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -561), 0), 100000000, 0, -560), 0), 100000000, 0, -559), 0), 100000000, 0, -558), 0), 100000000, 0, -557), 0, (("engine/termops.mli", 105, 4531, 4531), ("engine/termops.mli", 105, 4531, 4616), 0), 0, Tag1 ("Termops", 33)), 0); (("local_occur_var", 1802), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -556), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -555), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -554), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -553), 0), 100000000, 0, -552), 0), 100000000, 0, -551), 0), 100000000, 0, -550), 0, (("engine/termops.mli", 108, 4696, 4696), ("engine/termops.mli", 108, 4696, 4756), 0), 0, Tag1 ("Termops", 34)), 0); (("local_occur_var_in_decl", 1803), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -549), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -548), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "named_declaration"), 0, (0)), 100000000, 0, -547), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -546), 0), 100000000, 0, -545), 0), 100000000, 0, -544), 0), 100000000, 0, -543), 0, (("engine/termops.mli", 109, 4757, 4757), ("engine/termops.mli", 109, 4757, 4836), 0), 0, Tag1 ("Termops", 35)), 0); (("free_rels", 1804), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -542), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -541), (Tag3 (Tag1 (Tag1 ((Tag2 ("Int")), "Set"), "t"), 0, (0)), 100000000, 0, -540), 0), 100000000, 0, -539), 0), 100000000, 0, -538), 0, (("engine/termops.mli", 111, 4838, 4838), ("engine/termops.mli", 111, 4838, 4889), 0), 0, Tag1 ("Termops", 36)), 0); (("free_rels_and_unqualified_refs", 1805), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -537), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -536), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Int")), "Set"), "t"), 0, (0)), 100000000, 0, -534); (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -535)]), 100000000, 0, -533), 0), 100000000, 0, -532), 0), 100000000, 0, -531), 0, (("engine/termops.mli", 115, 4988, 4988), ("engine/termops.mli", 115, 4988, 5071), 0), 0, Tag1 ("Termops", 37)), 0); (("dependent", 1806), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -530), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -529), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -528), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -527), 0), 100000000, 0, -526), 0), 100000000, 0, -525), 0), 100000000, 0, -524), 0, (("engine/termops.mli", 118, 5134, 5134), ("engine/termops.mli", 118, 5134, 5190), 0), 0, Tag1 ("Termops", 38)), 0); (("dependent_no_evar", 1807), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -523), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -522), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -521), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -520), 0), 100000000, 0, -519), 0), 100000000, 0, -518), 0), 100000000, 0, -517), 0, (("engine/termops.mli", 119, 5191, 5191), ("engine/termops.mli", 119, 5191, 5255), 0), 0, Tag1 ("Termops", 39)), 0); (("dependent_in_decl", 1808), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -516), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -515), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "named_declaration"), 0, (0)), 100000000, 0, -514), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -513), 0), 100000000, 0, -512), 0), 100000000, 0, -511), 0), 100000000, 0, -510), 0, (("engine/termops.mli", 120, 5256, 5256), ("engine/termops.mli", 120, 5256, 5331), 0), 0, Tag1 ("Termops", 40)), 0); (("count_occurrences", 1809), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -509), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -508), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -507), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -506), 0), 100000000, 0, -505), 0), 100000000, 0, -504), 0), 100000000, 0, -503), 0, (("engine/termops.mli", 121, 5332, 5332), ("engine/termops.mli", 121, 5332, 5395), 0), 0, Tag1 ("Termops", 41)), 0); (("collect_metas", 1810), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -502), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -501), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -500)], (0)), 100000000, 0, -499), 0), 100000000, 0, -498), 0), 100000000, 0, -497), 0, (("engine/termops.mli", 122, 5396, 5396), ("engine/termops.mli", 122, 5396, 5450), 0), 0, Tag1 ("Termops", 42)), 0); (("collect_vars", 1811), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -496), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -495), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -494), 0), 100000000, 0, -493), 0), 100000000, 0, -492), 0, (("engine/termops.mli", 123, 5451, 5451), ("engine/termops.mli", 123, 5451, 5504), 0), 0, Tag1 ("Termops", 43)), 0); Tag1 (("meta_value_map", 1812), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Constr")), "metavariable"), 0, (0)), 100000000, 0, -490); (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -491)]), 100000000, 0, -489)], (0)), 100000000, 0, -488)), 0, 0, 0, 0, (("engine/termops.mli", 126, 5571, 5571), ("engine/termops.mli", 126, 5571, 5628), 0), 0, 0, 0, Tag1 ("Termops", 44)), 1, 0); (("subst_meta", 1813), ((Tag1 (0, (Tag3 ((("meta_value_map", 1812)), 0, (0)), 100000000, 0, -487), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -486), (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -485), 0), 100000000, 0, -484), 0), 100000000, 0, -483), 0, (("engine/termops.mli", 127, 5629, 5629), ("engine/termops.mli", 127, 5629, 5694), 0), 0, Tag1 ("Termops", 45)), 0); (("isMetaOf", 1814), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -482), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "metavariable"), 0, (0)), 100000000, 0, -481), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -480), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -479), 0), 100000000, 0, -478), 0), 100000000, 0, -477), 0), 100000000, 0, -476), 0, (("engine/termops.mli", 128, 5695, 5695), ("engine/termops.mli", 128, 5695, 5756), 0), 0, Tag1 ("Termops", 46)), 0); Tag1 (("meta_type_map", 1815), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Constr")), "metavariable"), 0, (0)), 100000000, 0, -474); (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -475)]), 100000000, 0, -473)], (0)), 100000000, 0, -472)), 0, 0, 0, 0, (("engine/termops.mli", 131, 5799, 5799), ("engine/termops.mli", 131, 5799, 5854), 0), 0, 0, 0, Tag1 ("Termops", 47)), 1, 0); (("pop", 1816), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -471), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -470), 0), 100000000, 0, -469), 0, (("engine/termops.mli", 134, 5911, 5911), ("engine/termops.mli", 134, 5911, 5937), 0), 0, Tag1 ("Termops", 48)), 0); (("replace_term_gen", 1817), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -468), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -467), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -466), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -465), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -464), 0), 100000000, 0, -463), 0), 100000000, 0, -462), 0), 100000000, 0, -461), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -460), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -459), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -458), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -457), 0), 100000000, 0, -456), 0), 100000000, 0, -455), 0), 100000000, 0, -454), 0), 100000000, 0, -453), 0), 100000000, 0, -452), 0, (("engine/termops.mli", 143, 6229, 6229), ("engine/termops.mli", 145, 6313, 6350), 0), 0, Tag1 ("Termops", 49)), 0); (("subst_term", 1818), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -451), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -450), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -449), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -448), 0), 100000000, 0, -447), 0), 100000000, 0, -446), 0), 100000000, 0, -445), 0, (("engine/termops.mli", 148, 6407, 6407), ("engine/termops.mli", 148, 6407, 6466), 0), 0, Tag1 ("Termops", 50)), 0); (("replace_term", 1819), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -444), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -443), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -442), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -441), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -440), 0), 100000000, 0, -439), 0), 100000000, 0, -438), 0), 100000000, 0, -437), 0), 100000000, 0, -436), 0, (("engine/termops.mli", 151, 6523, 6523), ("engine/termops.mli", 151, 6523, 6594), 0), 0, Tag1 ("Termops", 51)), 0); (("base_sort_cmp", 1820), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Conversion")), "conv_pb"), 0, (0)), 100000000, 0, -435), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sorts")), "t"), 0, (0)), 100000000, 0, -434), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sorts")), "t"), 0, (0)), 100000000, 0, -433), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -432), 0), 100000000, 0, -431), 0), 100000000, 0, -430), 0), 100000000, 0, -429), 0, (("engine/termops.mli", 154, 6631, 6631), ("engine/termops.mli", 154, 6631, 6699), 0), 0, Tag1 ("Termops", 52)), 0); (("compare_constr_univ", 1821), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -428), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -427), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Conversion")), "conv_pb"), 0, (0)), 100000000, 0, -426), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -425), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -424), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -423), 0), 100000000, 0, -422), 0), 100000000, 0, -421), 0), 100000000, 0, -420), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Conversion")), "conv_pb"), 0, (0)), 100000000, 0, -419), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -418), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -417), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -416), 0), 100000000, 0, -415), 0), 100000000, 0, -414), 0), 100000000, 0, -413), 0), 100000000, 0, -412), 0), 100000000, 0, -411), 0), 100000000, 0, -410), 0, (("engine/termops.mli", 155, 6700, 6700), ("engine/termops.mli", 156, 6809, 6857), 0), 0, Tag1 ("Termops", 53)), 0); (("constr_cmp", 1822), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -409), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -408), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Conversion")), "conv_pb"), 0, (0)), 100000000, 0, -407), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -406), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -405), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -404), 0), 100000000, 0, -403), 0), 100000000, 0, -402), 0), 100000000, 0, -401), 0), 100000000, 0, -400), 0), 100000000, 0, -399), 0, (("engine/termops.mli", 157, 6858, 6858), ("engine/termops.mli", 157, 6858, 6952), 0), 0, Tag1 ("Termops", 54)), 0); (("eq_constr", 1823), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -398), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -397), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -396), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -395), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -394), 0), 100000000, 0, -393), 0), 100000000, 0, -392), 0), 100000000, 0, -391), 0), 100000000, 0, -390), 0, (("engine/termops.mli", 158, 6953, 6953), ("engine/termops.mli", 158, 6953, 7024), 0), 0, Tag1 ("Termops", 55)), 0); (("eta_reduce_head", 1824), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -389), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -388), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -387), 0), 100000000, 0, -386), 0), 100000000, 0, -385), 0, (("engine/termops.mli", 160, 7062, 7062), ("engine/termops.mli", 160, 7062, 7116), 0), 0, Tag1 ("Termops", 56)), 0); (("prod_applist", 1825), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -384), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -383), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -382)], (0)), 100000000, 0, -381), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -380), 0), 100000000, 0, -379), 0), 100000000, 0, -378), 0), 100000000, 0, -377), 0, (("engine/termops.mli", 163, 7201, 7201), ("engine/termops.mli", 163, 7201, 7267), 0), 0, Tag1 ("Termops", 57)), 0); (("prod_applist_decls", 1826), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -376), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -375), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -374), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -373)], (0)), 100000000, 0, -372), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -371), 0), 100000000, 0, -370), 0), 100000000, 0, -369), 0), 100000000, 0, -368), 0), 100000000, 0, -367), 0, (("engine/termops.mli", 172, 7706, 7706), ("engine/termops.mli", 172, 7706, 7785), 0), 0, Tag1 ("Termops", 58)), 0); (("strip_outer_cast", 1827), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -366), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -365), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -364), 0), 100000000, 0, -363), 0), 100000000, 0, -362), 0, (("engine/termops.mli", 176, 7907, 7907), ("engine/termops.mli", 176, 7907, 7962), 0), 0, Tag1 ("Termops", 59)), 0); (("nb_lam", 1828), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -361), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -360), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -359), 0), 100000000, 0, -358), 0), 100000000, 0, -357), 0, (("engine/termops.mli", 180, 8106, 8106), ("engine/termops.mli", 180, 8106, 8148), 0), 0, Tag1 ("Termops", 60)), 0); (("nb_prod", 1829), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -356), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -355), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -354), 0), 100000000, 0, -353), 0), 100000000, 0, -352), 0, (("engine/termops.mli", 183, 8219, 8219), ("engine/termops.mli", 183, 8219, 8262), 0), 0, Tag1 ("Termops", 61)), 0); (("nb_prod_modulo_zeta", 1830), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -351), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -350), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -349), 0), 100000000, 0, -348), 0), 100000000, 0, -347), 0, (("engine/termops.mli", 186, 8330, 8330), ("engine/termops.mli", 186, 8330, 8385), 0), 0, Tag1 ("Termops", 62)), 0); (("last_arg", 1831), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -346), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -345), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -344), 0), 100000000, 0, -343), 0), 100000000, 0, -342), 0, (("engine/termops.mli", 189, 8453, 8453), ("engine/termops.mli", 189, 8453, 8500), 0), 0, Tag1 ("Termops", 63)), 0); (("adjust_app_list_size", 1832), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -341), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -340)], (0)), 100000000, 0, -339), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -338), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -337)], (0)), 100000000, 0, -336), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -330); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -332)], (0)), 100000000, 0, -331); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -333); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -335)], (0)), 100000000, 0, -334)]), 100000000, 0, -329), 0), 100000000, 0, -328), 0), 100000000, 0, -327), 0), 100000000, 0, -326), 0), 100000000, 0, -325), 0, (("engine/termops.mli", 191, 8502, 8502), ("engine/termops.mli", 192, 8579, 8626), 0), 0, Tag1 ("Termops", 64)), 0); (("adjust_app_array_size", 1833), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -324), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -323)], (0)), 100000000, 0, -322), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -321), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -320)], (0)), 100000000, 0, -319), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -313); (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -315)], (0)), 100000000, 0, -314); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -316); (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -318)], (0)), 100000000, 0, -317)]), 100000000, 0, -312), 0), 100000000, 0, -311), 0), 100000000, 0, -310), 0), 100000000, 0, -309), 0), 100000000, 0, -308), 0, (("engine/termops.mli", 193, 8627, 8627), ("engine/termops.mli", 194, 8707, 8756), 0), 0, Tag1 ("Termops", 65)), 0); Tag1 (("names_context", 1834), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -307)], (0)), 100000000, 0, -306)), 0, 0, 0, 0, (("engine/termops.mli", 197, 8779, 8779), ("engine/termops.mli", 197, 8779, 8811), 0), 0, 0, 0, Tag1 ("Termops", 66)), 1, 0); (("add_name", 1835), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -305), (Tag1 (0, (Tag3 ((("names_context", 1834)), 0, (0)), 100000000, 0, -304), (Tag3 ((("names_context", 1834)), 0, (0)), 100000000, 0, -303), 0), 100000000, 0, -302), 0), 100000000, 0, -301), 0, (("engine/termops.mli", 198, 8812, 8812), ("engine/termops.mli", 198, 8812, 8867), 0), 0, Tag1 ("Termops", 67)), 0); (("lookup_name_of_rel", 1836), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -300), (Tag1 (0, (Tag3 ((("names_context", 1834)), 0, (0)), 100000000, 0, -299), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -298), 0), 100000000, 0, -297), 0), 100000000, 0, -296), 0, (("engine/termops.mli", 199, 8868, 8868), ("engine/termops.mli", 199, 8868, 8923), 0), 0, Tag1 ("Termops", 68)), 0); (("lookup_rel_of_name", 1837), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -295), (Tag1 (0, (Tag3 ((("names_context", 1834)), 0, (0)), 100000000, 0, -294), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -293), 0), 100000000, 0, -292), 0), 100000000, 0, -291), 0, (("engine/termops.mli", 200, 8924, 8924), ("engine/termops.mli", 200, 8924, 8977), 0), 0, Tag1 ("Termops", 69)), 0); (("empty_names_context", 1838), ((Tag3 ((("names_context", 1834)), 0, (0)), 100000000, 0, -290), 0, (("engine/termops.mli", 201, 8978, 8978), ("engine/termops.mli", 201, 8978, 9017), 0), 0, Tag1 ("Termops", 70)), 0); (("ids_of_rel_context", 1839), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Context")), "Rel"), "pt"), [((("c")), 100000000, 0, -288); ((("t")), 100000000, 0, -289)], (0)), 100000000, 0, -287), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -286)], (0)), 100000000, 0, -285), 0), 100000000, 0, -284), 0, (("engine/termops.mli", 202, 9018, 9018), ("engine/termops.mli", 202, 9018, 9079), 0), 0, Tag1 ("Termops", 71)), 0); (("ids_of_named_context", 1840), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Context")), "Named"), "pt"), [((("c")), 100000000, 0, -282); ((("t")), 100000000, 0, -283)], (0)), 100000000, 0, -281), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -280)], (0)), 100000000, 0, -279), 0), 100000000, 0, -278), 0, (("engine/termops.mli", 203, 9080, 9080), ("engine/termops.mli", 203, 9080, 9145), 0), 0, Tag1 ("Termops", 72)), 0); (("ids_of_context", 1841), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -277), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -276)], (0)), 100000000, 0, -275), 0), 100000000, 0, -274), 0, (("engine/termops.mli", 204, 9146, 9146), ("engine/termops.mli", 204, 9146, 9183), 0), 0, Tag1 ("Termops", 73)), 0); (("names_of_rel_context", 1842), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -273), (Tag3 ((("names_context", 1834)), 0, (0)), 100000000, 0, -272), 0), 100000000, 0, -271), 0, (("engine/termops.mli", 205, 9184, 9184), ("engine/termops.mli", 205, 9184, 9231), 0), 0, Tag1 ("Termops", 74)), 0); (("context_chop", 1843), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -270), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -269), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -267); (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -268)]), 100000000, 0, -266), 0), 100000000, 0, -265), 0), 100000000, 0, -264), 0, (("engine/termops.mli", 210, 9475, 9475), ("engine/termops.mli", 211, 9563, 9628), 0), [(("ocaml.deprecated", (("engine/termops.mli", 211, 9563, 9568), ("engine/termops.mli", 211, 9563, 9584), 0)), ([([(Tag1 (Tag2 ("Use synonymous [Context.Rel.chop_nhyps].", (("engine/termops.mli", 211, 9563, 9586), ("engine/termops.mli", 211, 9563, 9626), 0), 0)), (("engine/termops.mli", 211, 9563, 9585), ("engine/termops.mli", 211, 9563, 9627), 0), 0, 0)], (("engine/termops.mli", 211, 9563, 9585), ("engine/termops.mli", 211, 9563, 9627), 0))]), (("engine/termops.mli", 211, 9563, 9565), ("engine/termops.mli", 211, 9563, 9628), 0))], Tag1 ("Termops", 75)), 0); (("env_rel_context_chop", 1844), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -263), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -262), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -260); (Tag3 (Tag1 ((Tag2 ("EConstr")), "rel_context"), 0, (0)), 100000000, 0, -261)]), 100000000, 0, -259), 0), 100000000, 0, -258), 0), 100000000, 0, -257), 0, (("engine/termops.mli", 216, 9790, 9790), ("engine/termops.mli", 216, 9790, 9848), 0), 0, Tag1 ("Termops", 76)), 0); (("vars_of_env", 1845), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -256), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -255), 0), 100000000, 0, -254), 0, (("engine/termops.mli", 219, 9876, 9876), ("engine/termops.mli", 219, 9876, 9908), 0), 0, Tag1 ("Termops", 77)), 0); (("add_vname", 1846), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -253), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -252), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -251), 0), 100000000, 0, -250), 0), 100000000, 0, -249), 0, (("engine/termops.mli", 220, 9909, 9909), ("engine/termops.mli", 220, 9909, 9955), 0), 0, Tag1 ("Termops", 78)), 0); (("process_rel_context", 1847), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "rel_declaration"), 0, (0)), 100000000, 0, -248), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -247), (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -246), 0), 100000000, 0, -245), 0), 100000000, 0, -244), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -243), (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -242), 0), 100000000, 0, -241), 0), 100000000, 0, -240), 0, (("engine/termops.mli", 223, 9990, 9990), ("engine/termops.mli", 223, 9990, 10061), 0), 0, Tag1 ("Termops", 79)), 0); (("assums_of_rel_context", 1848), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Context")), "Rel"), "pt"), [((("c")), 100000000, 0, -239); ((("t")), 100000000, 0, -237)], (0)), 100000000, 0, -238), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -236)], (0)), 100000000, 0, -235); ((("t")), 100000000, 0, -237)]), 100000000, 0, -234)], (0)), 100000000, 0, -233), 0), 100000000, 0, -232), 0, (("engine/termops.mli", 224, 10062, 10062), ("engine/termops.mli", 224, 10062, 10156), 0), 0, Tag1 ("Termops", 80)), 0); (("lift_rel_context", 1849), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -231), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -230), (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -229), 0), 100000000, 0, -228), 0), 100000000, 0, -227), 0, (("engine/termops.mli", 226, 10158, 10158), ("engine/termops.mli", 227, 10229, 10293), 0), [(("ocaml.deprecated", (("engine/termops.mli", 227, 10229, 10234), ("engine/termops.mli", 227, 10229, 10250), 0)), ([([(Tag1 (Tag2 ("Use synonymous [Vars.lift_rel_context].", (("engine/termops.mli", 227, 10229, 10252), ("engine/termops.mli", 227, 10229, 10291), 0), 0)), (("engine/termops.mli", 227, 10229, 10251), ("engine/termops.mli", 227, 10229, 10292), 0), 0, 0)], (("engine/termops.mli", 227, 10229, 10251), ("engine/termops.mli", 227, 10229, 10292), 0))]), (("engine/termops.mli", 227, 10229, 10231), ("engine/termops.mli", 227, 10229, 10293), 0))], Tag1 ("Termops", 81)), 0); (("substl_rel_context", 1850), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -226)], (0)), 100000000, 0, -225), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -224), (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -223), 0), 100000000, 0, -222), 0), 100000000, 0, -221), 0, (("engine/termops.mli", 228, 10294, 10294), ("engine/termops.mli", 229, 10382, 10448), 0), [(("ocaml.deprecated", (("engine/termops.mli", 229, 10382, 10387), ("engine/termops.mli", 229, 10382, 10403), 0)), ([([(Tag1 (Tag2 ("Use synonymous [Vars.substl_rel_context].", (("engine/termops.mli", 229, 10382, 10405), ("engine/termops.mli", 229, 10382, 10446), 0), 0)), (("engine/termops.mli", 229, 10382, 10404), ("engine/termops.mli", 229, 10382, 10447), 0), 0, 0)], (("engine/termops.mli", 229, 10382, 10404), ("engine/termops.mli", 229, 10382, 10447), 0))]), (("engine/termops.mli", 229, 10382, 10384), ("engine/termops.mli", 229, 10382, 10448), 0))], Tag1 ("Termops", 82)), 0); (("smash_rel_context", 1851), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -220), (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -219), 0), 100000000, 0, -218), 0, (("engine/termops.mli", 230, 10449, 10449), ("engine/termops.mli", 231, 10514, 10579), 0), [(("ocaml.deprecated", (("engine/termops.mli", 231, 10514, 10519), ("engine/termops.mli", 231, 10514, 10535), 0)), ([([(Tag1 (Tag2 ("Use synonymous [Vars.smash_rel_context].", (("engine/termops.mli", 231, 10514, 10537), ("engine/termops.mli", 231, 10514, 10577), 0), 0)), (("engine/termops.mli", 231, 10514, 10536), ("engine/termops.mli", 231, 10514, 10578), 0), 0, 0)], (("engine/termops.mli", 231, 10514, 10536), ("engine/termops.mli", 231, 10514, 10578), 0))]), (("engine/termops.mli", 231, 10514, 10516), ("engine/termops.mli", 231, 10514, 10579), 0))], Tag1 ("Termops", 83)), 0); (("map_rel_context_with_binders", 1852), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -217), (Tag1 (0, ((("c")), 100000000, 0, -213), ((("c")), 100000000, 0, -213), 0), 100000000, 0, -216), 0), 100000000, 0, -215), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Context")), "Rel"), "pt"), [((("c")), 100000000, 0, -213); ((("c")), 100000000, 0, -213)], (0)), 100000000, 0, -214), (Tag3 (Tag1 (Tag1 ((Tag2 ("Context")), "Rel"), "pt"), [((("c")), 100000000, 0, -213); ((("c")), 100000000, 0, -213)], (0)), 100000000, 0, -212), 0), 100000000, 0, -211), 0), 100000000, 0, -210), 0, (("engine/termops.mli", 232, 10580, 10580), ("engine/termops.mli", 234, 10689, 10760), 0), [(("ocaml.deprecated", (("engine/termops.mli", 234, 10689, 10694), ("engine/termops.mli", 234, 10689, 10710), 0)), ([([(Tag1 (Tag2 ("Use synonymous [Context.Rel.map_with_binders].", (("engine/termops.mli", 234, 10689, 10712), ("engine/termops.mli", 234, 10689, 10758), 0), 0)), (("engine/termops.mli", 234, 10689, 10711), ("engine/termops.mli", 234, 10689, 10759), 0), 0, 0)], (("engine/termops.mli", 234, 10689, 10711), ("engine/termops.mli", 234, 10689, 10759), 0))]), (("engine/termops.mli", 234, 10689, 10691), ("engine/termops.mli", 234, 10689, 10760), 0))], Tag1 ("Termops", 84)), 0); (("map_rel_context_in_env", 1853), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -209), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -208), (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -207), 0), 100000000, 0, -206), 0), 100000000, 0, -205), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -204), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -203), (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -202), 0), 100000000, 0, -201), 0), 100000000, 0, -200), 0), 100000000, 0, -199), 0, (("engine/termops.mli", 236, 10762, 10762), ("engine/termops.mli", 237, 10791, 10883), 0), 0, Tag1 ("Termops", 85)), 0); (("fold_named_context_both_sides", 1854), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -191), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "named_declaration"), 0, (0)), 100000000, 0, -198), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "named_declaration"), 0, (0)), 100000000, 0, -197)], (0)), 100000000, 0, -196), ((("a")), 100000000, 0, -191), 0), 100000000, 0, -195), 0), 100000000, 0, -194), 0), 100000000, 0, -193), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "named_context"), 0, (0)), 100000000, 0, -192), (Tag1 (("init"), ((("a")), 100000000, 0, -191), ((("a")), 100000000, 0, -191), 0), 100000000, 0, -190), 0), 100000000, 0, -189), 0), 100000000, 0, -188), 0, (("engine/termops.mli", 238, 10884, 10884), ("engine/termops.mli", 240, 10997, 11038), 0), 0, Tag1 ("Termops", 86)), 0); (("mem_named_context_val", 1855), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -187), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "named_context_val"), 0, (0)), 100000000, 0, -186), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -185), 0), 100000000, 0, -184), 0), 100000000, 0, -183), 0, (("engine/termops.mli", 241, 11039, 11039), ("engine/termops.mli", 241, 11039, 11100), 0), 0, Tag1 ("Termops", 87)), 0); (("compact_named_context", 1856), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -182), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "named_context"), 0, (0)), 100000000, 0, -181), (Tag3 (Tag1 ((Tag2 ("EConstr")), "compacted_context"), 0, (0)), 100000000, 0, -180), 0), 100000000, 0, -179), 0), 100000000, 0, -178), 0, (("engine/termops.mli", 242, 11101, 11101), ("engine/termops.mli", 242, 11101, 11195), 0), 0, Tag1 ("Termops", 88)), 0); (("map_rel_decl", 1857), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -176), ((("b")), 100000000, 0, -174), 0), 100000000, 0, -177), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Context")), "Rel"), "Declaration"), "pt"), [((("a")), 100000000, 0, -176); ((("a")), 100000000, 0, -176)], (0)), 100000000, 0, -175), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Context")), "Rel"), "Declaration"), "pt"), [((("b")), 100000000, 0, -174); ((("b")), 100000000, 0, -174)], (0)), 100000000, 0, -173), 0), 100000000, 0, -172), 0), 100000000, 0, -171), 0, (("engine/termops.mli", 244, 11197, 11197), ("engine/termops.mli", 244, 11197, 11304), 0), 0, Tag1 ("Termops", 89)), 0); (("map_named_decl", 1858), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -169), ((("b")), 100000000, 0, -167), 0), 100000000, 0, -170), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Context")), "Named"), "Declaration"), "pt"), [((("a")), 100000000, 0, -169); ((("a")), 100000000, 0, -169)], (0)), 100000000, 0, -168), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Context")), "Named"), "Declaration"), "pt"), [((("b")), 100000000, 0, -167); ((("b")), 100000000, 0, -167)], (0)), 100000000, 0, -166), 0), 100000000, 0, -165), 0), 100000000, 0, -164), 0, (("engine/termops.mli", 245, 11305, 11305), ("engine/termops.mli", 245, 11305, 11418), 0), 0, Tag1 ("Termops", 90)), 0); (("clear_named_body", 1859), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -163), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -162), (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -161), 0), 100000000, 0, -160), 0), 100000000, 0, -159), 0, (("engine/termops.mli", 247, 11420, 11420), ("engine/termops.mli", 247, 11420, 11461), 0), 0, Tag1 ("Termops", 91)), 0); (("global_vars_set", 1860), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -158), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -157), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -156), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -155), 0), 100000000, 0, -154), 0), 100000000, 0, -153), 0), 100000000, 0, -152), 0, (("engine/termops.mli", 249, 11463, 11463), ("engine/termops.mli", 249, 11463, 11526), 0), 0, Tag1 ("Termops", 92)), 0); (("global_vars_set_of_decl", 1861), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -151), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -150), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "named_declaration"), 0, (0)), 100000000, 0, -149), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -148), 0), 100000000, 0, -147), 0), 100000000, 0, -146), 0), 100000000, 0, -145), 0, (("engine/termops.mli", 250, 11527, 11527), ("engine/termops.mli", 250, 11527, 11609), 0), 0, Tag1 ("Termops", 93)), 0); (("global_app_of_constr", 1862), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -144), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -143), (Tag2 ([(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -139); (Tag3 (Tag1 (Tag1 ((Tag2 ("EConstr")), "EInstance"), "t"), 0, (0)), 100000000, 0, -140)]), 100000000, 0, -138); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -142)], (0)), 100000000, 0, -141)]), 100000000, 0, -137), 0), 100000000, 0, -136), 0), 100000000, 0, -135), 0, (("engine/termops.mli", 251, 11610, 11610), ("engine/termops.mli", 251, 11610, 11704), 0), 0, Tag1 ("Termops", 94)), 0); (("dependency_closure", 1863), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -134), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -133), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "named_context"), 0, (0)), 100000000, 0, -132), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -131), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -130)], (0)), 100000000, 0, -129), 0), 100000000, 0, -128), 0), 100000000, 0, -127), 0), 100000000, 0, -126), 0), 100000000, 0, -125), 0, (("engine/termops.mli", 255, 11800, 11800), ("engine/termops.mli", 255, 11800, 11886), 0), 0, Tag1 ("Termops", 95)), 0); (("is_section_variable", 1864), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -124), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -123), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -122), 0), 100000000, 0, -121), 0), 100000000, 0, -120), 0, (("engine/termops.mli", 258, 11955, 11955), ("engine/termops.mli", 258, 11955, 12000), 0), 0, Tag1 ("Termops", 96)), 0); (("global_of_constr", 1865), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -119), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -118), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -116); (Tag3 (Tag1 (Tag1 ((Tag2 ("EConstr")), "EInstance"), "t"), 0, (0)), 100000000, 0, -117)]), 100000000, 0, -115), 0), 100000000, 0, -114), 0), 100000000, 0, -113), 0, (("engine/termops.mli", 260, 12002, 12002), ("engine/termops.mli", 261, 12075, 12165), 0), [(("ocaml.deprecated", (("engine/termops.mli", 261, 12075, 12078), ("engine/termops.mli", 261, 12075, 12094), 0)), ([([(Tag1 (Tag2 ("Use [EConstr.destRef] instead (throws DestKO instead of Not_found).", (("engine/termops.mli", 261, 12075, 12096), ("engine/termops.mli", 261, 12075, 12163), 0), 0)), (("engine/termops.mli", 261, 12075, 12095), ("engine/termops.mli", 261, 12075, 12164), 0), 0, 0)], (("engine/termops.mli", 261, 12075, 12095), ("engine/termops.mli", 261, 12075, 12164), 0))]), (("engine/termops.mli", 261, 12075, 12075), ("engine/termops.mli", 261, 12075, 12165), 0))], Tag1 ("Termops", 97)), 0); (("is_global", 1866), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -112), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -111), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -110), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -109), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), 0), 100000000, 0, -105), 0), 100000000, 0, -104), 0, (("engine/termops.mli", 263, 12167, 12167), ("engine/termops.mli", 264, 12242, 12294), 0), [(("ocaml.deprecated", (("engine/termops.mli", 264, 12242, 12245), ("engine/termops.mli", 264, 12242, 12261), 0)), ([([(Tag1 (Tag2 ("Use [EConstr.isRefX] instead.", (("engine/termops.mli", 264, 12242, 12263), ("engine/termops.mli", 264, 12242, 12292), 0), 0)), (("engine/termops.mli", 264, 12242, 12262), ("engine/termops.mli", 264, 12242, 12293), 0), 0, 0)], (("engine/termops.mli", 264, 12242, 12262), ("engine/termops.mli", 264, 12242, 12293), 0))]), (("engine/termops.mli", 264, 12242, 12242), ("engine/termops.mli", 264, 12242, 12294), 0))], Tag1 ("Termops", 98)), 0); (("isGlobalRef", 1867), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -103), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -102), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -101), 0), 100000000, 0, -100), 0), 100000000, 0, -99), 0, (("engine/termops.mli", 266, 12296, 12296), ("engine/termops.mli", 267, 12345, 12396), 0), [(("ocaml.deprecated", (("engine/termops.mli", 267, 12345, 12348), ("engine/termops.mli", 267, 12345, 12364), 0)), ([([(Tag1 (Tag2 ("Use [EConstr.isRef] instead.", (("engine/termops.mli", 267, 12345, 12366), ("engine/termops.mli", 267, 12345, 12394), 0), 0)), (("engine/termops.mli", 267, 12345, 12365), ("engine/termops.mli", 267, 12345, 12395), 0), 0, 0)], (("engine/termops.mli", 267, 12345, 12365), ("engine/termops.mli", 267, 12345, 12395), 0))]), (("engine/termops.mli", 267, 12345, 12345), ("engine/termops.mli", 267, 12345, 12396), 0))], Tag1 ("Termops", 99)), 0); (("is_template_polymorphic_ind", 1868), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -98), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -97), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -96), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -95), 0), 100000000, 0, -94), 0), 100000000, 0, -93), 0), 100000000, 0, -92), 0, (("engine/termops.mli", 269, 12398, 12398), ("engine/termops.mli", 269, 12398, 12469), 0), 0, Tag1 ("Termops", 100)), 0); (("is_Prop", 1869), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -91), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -90), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -89), 0), 100000000, 0, -88), 0), 100000000, 0, -87), 0, (("engine/termops.mli", 271, 12471, 12471), ("engine/termops.mli", 271, 12471, 12515), 0), 0, Tag1 ("Termops", 101)), 0); (("is_Set", 1870), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -86), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -85), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -84), 0), 100000000, 0, -83), 0), 100000000, 0, -82), 0, (("engine/termops.mli", 272, 12516, 12516), ("engine/termops.mli", 272, 12516, 12559), 0), 0, Tag1 ("Termops", 102)), 0); (("is_Type", 1871), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -81), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -80), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -79), 0), 100000000, 0, -78), 0), 100000000, 0, -77), 0, (("engine/termops.mli", 273, 12560, 12560), ("engine/termops.mli", 273, 12560, 12604), 0), 0, Tag1 ("Termops", 103)), 0); (("reference_of_level", 1872), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -76), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Level"), "t"), 0, (0)), 100000000, 0, -75), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Libnames")), "qualid"), 0, (0)), 100000000, 0, -74)], (0)), 100000000, 0, -73), 0), 100000000, 0, -72), 0), 100000000, 0, -71), 0, (("engine/termops.mli", 275, 12606, 12606), ("engine/termops.mli", 275, 12606, 12685), 0), 0, Tag1 ("Termops", 104)), 0); (("pr_global_env", 1873), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -70), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -69), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -68), 0), 100000000, 0, -67), 0), 100000000, 0, -66), 0, (("engine/termops.mli", 281, 12731, 12731), ("engine/termops.mli", 281, 12731, 12775), 0), 0, Tag1 ("Termops", 105)), 0); (("pr_existential_key", 1874), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -65), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -64), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -63), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0), 100000000, 0, -60), 0), 100000000, 0, -59), 0, (("engine/termops.mli", 283, 12777, 12777), ("engine/termops.mli", 283, 12777, 12835), 0), 0, Tag1 ("Termops", 106)), 0); (("evar_suggested_name", 1875), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -58), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -57), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -56), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0, (("engine/termops.mli", 285, 12837, 12837), ("engine/termops.mli", 285, 12837, 12896), 0), 0, Tag1 ("Termops", 107)), 0); (("pr_evar_info", 1876), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -51), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_info"), [((("a")), 100000000, 0, -49)], (0)), 100000000, 0, -48), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -47), 0), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("engine/termops.mli", 287, 12898, 12898), ("engine/termops.mli", 287, 12898, 12956), 0), 0, Tag1 ("Termops", 108)), 0); (("pr_evar_constraints", 1877), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -43), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_constraint"), 0, (0)), 100000000, 0, -42)], (0)), 100000000, 0, -41), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("engine/termops.mli", 288, 12957, 12957), ("engine/termops.mli", 288, 12957, 13023), 0), 0, Tag1 ("Termops", 109)), 0); (("pr_evar_map", 1878), ((Tag1 (Tag1 ("with_univs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -37)], (0)), 100000000, 0, -36), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -35)], (0)), 100000000, 0, -34), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -33), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -32), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("engine/termops.mli", 289, 13024, 13024), ("engine/termops.mli", 289, 13024, 13099), 0), 0, Tag1 ("Termops", 110)), 0); (("pr_evar_map_filter", 1879), ((Tag1 (Tag1 ("with_univs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -26)], (0)), 100000000, 0, -25), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -24), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "any_evar_info"), 0, (0)), 100000000, 0, -23), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -19), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -18), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("engine/termops.mli", 290, 13100, 13100), ("engine/termops.mli", 291, 13182, 13207), 0), 0, Tag1 ("Termops", 111)), 0); (("pr_metaset", 1880), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Evd")), "Metaset"), "t"), 0, (0)), 100000000, 0, -12), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("engine/termops.mli", 292, 13208, 13208), ("engine/termops.mli", 292, 13208, 13242), 0), 0, Tag1 ("Termops", 112)), 0); (("pr_evar_universe_context", 1881), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("UState")), "t"), 0, (0)), 100000000, 0, -9), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("engine/termops.mli", 293, 13243, 13243), ("engine/termops.mli", 293, 13243, 13290), 0), 0, Tag1 ("Termops", 113)), 0); (("pr_evd_level", 1882), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Level"), "t"), 0, (0)), 100000000, 0, -5), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("engine/termops.mli", 294, 13291, 13291), ("engine/termops.mli", 294, 13291, 13342), 0), 0, Tag1 ("Termops", 114)), 0); Tag3 (("Internal", 1883), 0, (Tag1 ([(("debug_print_constr", 1884), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -847), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -846), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -845), 0), 100000000, 0, -844), 0), 100000000, 0, -843), 0, (("engine/termops.mli", 302, 13566, 13566), ("engine/termops.mli", 302, 13566, 13617), 0), 0, Tag1 ("Termops", 115)), 0); (("print_constr_env", 1885), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -842), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -841), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -840), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -839), 0), 100000000, 0, -838), 0), 100000000, 0, -837), 0), 100000000, 0, -836), 0, (("engine/termops.mli", 307, 13770, 13770), ("engine/termops.mli", 307, 13770, 13830), 0), 0, Tag1 ("Termops", 116)), 0); (("set_print_constr", 1886), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -835), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -834), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -833), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -832), 0), 100000000, 0, -831), 0), 100000000, 0, -830), 0), 100000000, 0, -829), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -828), 0), 100000000, 0, -827), 0, (("engine/termops.mli", 310, 13892, 13892), ("engine/termops.mli", 310, 13892, 13962), 0), 0, Tag1 ("Termops", 117)), 0); (("print_named_context", 1887), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -826), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -825), 0), 100000000, 0, -824), 0, (("engine/termops.mli", 313, 13993, 13993), ("engine/termops.mli", 313, 13993, 14030), 0), 0, Tag1 ("Termops", 118)), 0); (("pr_rel_decl", 1888), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -823), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_declaration"), 0, (0)), 100000000, 0, -822), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -821), 0), 100000000, 0, -820), 0), 100000000, 0, -819), 0, (("engine/termops.mli", 314, 14031, 14031), ("engine/termops.mli", 314, 14031, 14086), 0), 0, Tag1 ("Termops", 119)), 0); (("print_rel_context", 1889), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -818), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -817), 0), 100000000, 0, -816), 0, (("engine/termops.mli", 315, 14087, 14087), ("engine/termops.mli", 315, 14087, 14122), 0), 0, Tag1 ("Termops", 120)), 0); (("print_env", 1890), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -815), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -814), 0), 100000000, 0, -813), 0, (("engine/termops.mli", 316, 14123, 14123), ("engine/termops.mli", 316, 14123, 14150), 0), 0, Tag1 ("Termops", 121)), 0)]), 0, (("engine/termops.mli", 296, 13344, 13344), ("engine/termops.mli", 318, 14152, 14155), 0), Tag1 ("Termops", 122)), 0, 0)], "Termops", [("Termops", ("F\177\244\212\208\011\152\244D\234No]\129\242\185")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("UnivSubst", ("\190qu\031mc\130\181\003G]\132\"\219m)")); ("UnivProblem", ("6'\161\018\181\001.\253\000\141a6\171\1727\155")); ("UnivNames", ("%\151_\209%+JM$n\001\232\194n\178N")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UState", ("SD\203\215|\136\n\251\239\208\148\215C\n\167\005")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Store", ("/dT\252\145\179pq\216{\181\206\190K+U")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("Section", ("\245\207\b\021\142v=\155#w\246}\"4b\006")); ("Safe_typing", (")\250?\164\145\132\241\127\186\152h+\145\"\237l")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("Nativevalues", ("8:\007\025e\226c,\001\171\146#l\210\171\152")); ("Nativelib", ("V\239\205Y1\147E:,\176\196Hy\1483|")); ("Nativecode", ("\190\185\255\006m\012\210\163\138Rz\247\15283\183")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Monad", ("\244\171T\157\194p\187\160\149\195{\132\222\020\253\148")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hook", ("\183\194\223\003\155\169',\187\240a;E\b\1396")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Genlambda", ("\170}\024\241\141\222\136S\169\219\2212i\134KI")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evd", ("\211\205p\193\216\129r\006\239oN\142ar\196\175")); ("Evar_kinds", ("\023L\186\132\218}\254\221\185\198\220\200h\003{\021")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("EConstr", ("\201aW\156\157;N\004\201V\208\006L\166\211)")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conversion", ("\158\150&\195M\tv\127|\029\158RRK\211A")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CDebug", ("^4\210p7\239!3\138\138\213?\239`\250\157")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])

  end
