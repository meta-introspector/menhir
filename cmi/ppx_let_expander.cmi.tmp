module Extension_kind :
  sig
    type t = { do_open : bool; collapse_binds : bool; }
    val default : t
    val default_open : t
    val n : t
    val n_open : t
  end
module type Ext =
  sig
    val name : string
    val with_location : bool
    val disallow_expression :
      Extension_kind.t -> Ppxlib.expression_desc -> (unit, string) Result.t
    val destruct :
      assume_exhaustive:bool ->
      loc:Ppxlib.location ->
      modul:Ppxlib.longident Ppxlib.loc option ->
      lhs:Ppxlib.pattern ->
      rhs:Ppxlib.expression ->
      body:Ppxlib.expression -> Ppxlib.expression option
    val expand_match :
      loc:Ppxlib.location ->
      modul:Ppxlib.longident Ppxlib.loc option ->
      locality:[ `global | `local ] ->
      Ppxlib.expression -> Ppxlib.case list -> Ppxlib.expression
    val wrap_expansion :
      loc:Ppxlib.location ->
      modul:Ppxlib.longident Ppxlib.loc option ->
      Ppxlib.value_binding list ->
      Ppxlib.expression ->
      expand:(loc:Ppxlib.location ->
              Ppxlib.value_binding list ->
              Ppxlib.expression -> Ppxlib.expression) ->
      Ppxlib.expression
  end
val wrap_expansion_identity :
  loc:Ppxlib.location ->
  modul:Ppxlib.longident Ppxlib.loc option ->
  Ppxlib.value_binding list ->
  Ppxlib.expression ->
  expand:(loc:Ppxlib.location ->
          Ppxlib.value_binding list -> Ppxlib.expression -> Ppxlib.expression) ->
  Ppxlib.expression
type t = (module Ext)
val ext_full_name :
  t -> locality:[ `global | `local ] -> Extension_kind.t -> Ppxlib.label
val bind : t
val map : t
val variables_of : Ppxlib.label Ppxlib.loc list Ppxlib.Ast_traverse.fold
module Map : sig val name : string val with_location : bool end
val eoperator :
  loc:Ppxlib.location ->
  modul:Ppxlib.longident Ppxlib.loc option ->
  Ppxlib.label -> Ppxlib.expression
val expand_match :
  t ->
  extension_kind:Extension_kind.t ->
  loc:Ppxlib.location ->
  modul:Ppxlib.longident Ppxlib.loc option ->
  locality:[ `global | `local ] ->
  Ppxlib.expression -> Ppxlib.case list -> Ppxlib.expression
val maybe_destruct :
  destruct:(assume_exhaustive:bool ->
            loc:Ppxlib.location ->
            modul:'a ->
            lhs:Ppxlib.pattern ->
            rhs:Ppxlib.expression ->
            body:Ppxlib.expression -> Ppxlib.expression option) ->
  loc:Ppxlib.location ->
  modul:'a ->
  locality:[ `global | `local ] ->
  lhs:Ppxlib.pattern -> body:Ppxlib.expression -> Ppxlib.expression
val bind_apply :
  ?fn_label:string ->
  op_name:Ppxlib.label ->
  loc:Ppxlib.location ->
  modul:Ppxlib.longident Ppxlib.loc option ->
  with_location:bool ->
  arg:Ppxlib.expression -> fn:Ppxlib.expression -> unit -> Ppxlib.expression
val qualified_return :
  loc:Ppxlib.location ->
  modul:Ppxlib.longident Ppxlib.loc option ->
  Ppxlib.expression -> Ppxlib.expression
val expand :
  t ->
  Extension_kind.t ->
  modul:Ppxlib.longident Ppxlib.loc option ->
  locality:[ `global | `local ] -> Ppxlib.expression -> Ppxlib.expression
("DEBUG:rule", [Tag3 (("Extension_kind", 1794), 0, (Tag1 ([Tag1 (("t", 1810), (0, 0, [[(("do_open", 700), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -142), (("expander/ppx_let_expander.mli", 5, 52, 58), ("expander/ppx_let_expander.mli", 6, 73, 78), 0), 0, Tag1 ("Ppx_let_expander", 1)); (("collapse_binds", 701), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -143), (("expander/ppx_let_expander.mli", 6, 73, 79), ("expander/ppx_let_expander.mli", 6, 73, 100), 0), 0, Tag1 ("Ppx_let_expander", 2))]], 1, 0, 0, 0, 0, 0, (("expander/ppx_let_expander.mli", 4, 41, 43), ("expander/ppx_let_expander.mli", 7, 101, 106), 0), 0, 0, 0, Tag1 ("Ppx_let_expander", 0)), 1, 0); (("default", 1811), ((Tag3 ((("t", 1810)), 0, (0)), 100000000, 0, -141), 0, (("expander/ppx_let_expander.mli", 10, 140, 142), ("expander/ppx_let_expander.mli", 10, 140, 157), 0), 0, Tag1 ("Ppx_let_expander", 3)), 0); (("default_open", 1812), ((Tag3 ((("t", 1810)), 0, (0)), 100000000, 0, -140), 0, (("expander/ppx_let_expander.mli", 13, 201, 203), ("expander/ppx_let_expander.mli", 13, 201, 223), 0), 0, Tag1 ("Ppx_let_expander", 4)), 0); (("n", 1813), ((Tag3 ((("t", 1810)), 0, (0)), 100000000, 0, -139), 0, (("expander/ppx_let_expander.mli", 16, 259, 261), ("expander/ppx_let_expander.mli", 16, 259, 270), 0), 0, Tag1 ("Ppx_let_expander", 5)), 0); (("n_open", 1814), ((Tag3 ((("t", 1810)), 0, (0)), 100000000, 0, -138), 0, (("expander/ppx_let_expander.mli", 19, 316, 318), ("expander/ppx_let_expander.mli", 19, 316, 332), 0), 0, Tag1 ("Ppx_let_expander", 6)), 0)]), 0, (("expander/ppx_let_expander.mli", 3, 13, 13), ("expander/ppx_let_expander.mli", 20, 333, 336), 0), Tag1 ("Ppx_let_expander", 7)), 0, 0); Tag4 (("Ext", 1795), ((Tag1 ([(("name", 1815), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -204), 0, (("expander/ppx_let_expander.mli", 26, 569, 571), ("expander/ppx_let_expander.mli", 26, 569, 588), 0), 0, Tag1 ("Ppx_let_expander", 8)), 0); (("with_location", 1816), ((Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -203), 0, (("expander/ppx_let_expander.mli", 27, 589, 591), ("expander/ppx_let_expander.mli", 27, 589, 615), 0), 0, Tag1 ("Ppx_let_expander", 9)), 0); (("disallow_expression", 1817), ((Tag1 (0, (Tag3 (Tag1 ((("Extension_kind", 1794)), "t"), 0, (0)), 100000000, 0, -202), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression_desc"), 0, (0)), 100000000, 0, -201), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Result"), "t"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -199); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -200)], (0)), 100000000, 0, -198), 0), 100000000, 0, -197), 0), 100000000, 0, -196), 0, (("expander/ppx_let_expander.mli", 31, 718, 720), ("expander/ppx_let_expander.mli", 31, 718, 808), 0), 0, Tag1 ("Ppx_let_expander", 10)), 0); (("destruct", 1818), ((Tag1 (("assume_exhaustive"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -195), (Tag1 (("loc"), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "location"), 0, (0)), 100000000, 0, -194), (Tag1 (("modul"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "loc"), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "longident"), 0, (0)), 100000000, 0, -193)], (0)), 100000000, 0, -192)], (0)), 100000000, 0, -191), (Tag1 (("lhs"), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "pattern"), 0, (0)), 100000000, 0, -190), (Tag1 (("rhs"), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -189), (Tag1 (("body"), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -188), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -187)], (0)), 100000000, 0, -186), 0), 100000000, 0, -185), 0), 100000000, 0, -184), 0), 100000000, 0, -183), 0), 100000000, 0, -182), 0), 100000000, 0, -181), 0), 100000000, 0, -180), 0, (("expander/ppx_let_expander.mli", 37, 1101, 1103), ("expander/ppx_let_expander.mli", 44, 1264, 1288), 0), 0, Tag1 ("Ppx_let_expander", 11)), 0); (("expand_match", 1819), ((Tag1 (("loc"), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "location"), 0, (0)), 100000000, 0, -179), (Tag1 (("modul"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "loc"), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "longident"), 0, (0)), 100000000, 0, -178)], (0)), 100000000, 0, -177)], (0)), 100000000, 0, -176), (Tag1 (("locality"), (Tag8 (([("global", (0)); ("local", (0))], (0, 100000000, 0, -175), 1, 0, 0)), 100000000, 0, -174), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -173), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "case"), 0, (0)), 100000000, 0, -172)], (0)), 100000000, 0, -171), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -170), 0), 100000000, 0, -169), 0), 100000000, 0, -168), 0), 100000000, 0, -167), 0), 100000000, 0, -166), 0), 100000000, 0, -165), 0, (("expander/ppx_let_expander.mli", 48, 1383, 1385), ("expander/ppx_let_expander.mli", 54, 1528, 1545), 0), 0, Tag1 ("Ppx_let_expander", 12)), 0); (("wrap_expansion", 1820), ((Tag1 (("loc"), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "location"), 0, (0)), 100000000, 0, -164), (Tag1 (("modul"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "loc"), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "longident"), 0, (0)), 100000000, 0, -163)], (0)), 100000000, 0, -162)], (0)), 100000000, 0, -161), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "value_binding"), 0, (0)), 100000000, 0, -160)], (0)), 100000000, 0, -159), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -158), (Tag1 (("expand"), (Tag1 (("loc"), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "location"), 0, (0)), 100000000, 0, -157), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "value_binding"), 0, (0)), 100000000, 0, -156)], (0)), 100000000, 0, -155), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -154), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -153), 0), 100000000, 0, -152), 0), 100000000, 0, -151), 0), 100000000, 0, -150), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -149), 0), 100000000, 0, -148), 0), 100000000, 0, -147), 0), 100000000, 0, -146), 0), 100000000, 0, -145), 0), 100000000, 0, -144), 0, (("expander/ppx_let_expander.mli", 59, 1742, 1744), ("expander/ppx_let_expander.mli", 65, 1940, 1957), 0), 0, Tag1 ("Ppx_let_expander", 13)), 0)])), 0, (("expander/ppx_let_expander.mli", 22, 338, 338), ("expander/ppx_let_expander.mli", 66, 1958, 1961), 0), Tag1 ("Ppx_let_expander", 14)), 0); (("wrap_expansion_identity", 1796), ((Tag1 (("loc"), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "location"), 0, (0)), 100000000, 0, -137), (Tag1 (("modul"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "loc"), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "longident"), 0, (0)), 100000000, 0, -136)], (0)), 100000000, 0, -135)], (0)), 100000000, 0, -134), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "value_binding"), 0, (0)), 100000000, 0, -133)], (0)), 100000000, 0, -132), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -131), (Tag1 (("expand"), (Tag1 (("loc"), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "location"), 0, (0)), 100000000, 0, -130), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "value_binding"), 0, (0)), 100000000, 0, -129)], (0)), 100000000, 0, -128), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -127), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -126), 0), 100000000, 0, -125), 0), 100000000, 0, -124), 0), 100000000, 0, -123), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -122), 0), 100000000, 0, -121), 0), 100000000, 0, -120), 0), 100000000, 0, -119), 0), 100000000, 0, -118), 0), 100000000, 0, -117), 0, (("expander/ppx_let_expander.mli", 70, 2073, 2073), ("expander/ppx_let_expander.mli", 76, 2268, 2283), 0), 0, Tag1 ("Ppx_let_expander", 15)), 0); Tag1 (("t", 1797), (0, 0, 0, 1, ((Tag11 ((("Ext", 1795)), 0), 100000000, 0, -116)), 0, 0, 0, 0, (("expander/ppx_let_expander.mli", 78, 2285, 2285), ("expander/ppx_let_expander.mli", 78, 2285, 2306), 0), 0, 0, 0, Tag1 ("Ppx_let_expander", 16)), 1, 0); (("ext_full_name", 1798), ((Tag1 (0, (Tag3 ((("t", 1797)), 0, (0)), 100000000, 0, -115), (Tag1 (("locality"), (Tag8 (([("global", (0)); ("local", (0))], (0, 100000000, 0, -114), 1, 0, 0)), 100000000, 0, -113), (Tag1 (0, (Tag3 (Tag1 ((("Extension_kind", 1794)), "t"), 0, (0)), 100000000, 0, -112), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "label"), 0, (0)), 100000000, 0, -111), 0), 100000000, 0, -110), 0), 100000000, 0, -109), 0), 100000000, 0, -108), 0, (("expander/ppx_let_expander.mli", 80, 2308, 2308), ("expander/ppx_let_expander.mli", 80, 2308, 2391), 0), 0, Tag1 ("Ppx_let_expander", 17)), 0); (("bind", 1799), ((Tag3 ((("t", 1797)), 0, (0)), 100000000, 0, -107), 0, (("expander/ppx_let_expander.mli", 81, 2392, 2392), ("expander/ppx_let_expander.mli", 81, 2392, 2404), 0), 0, Tag1 ("Ppx_let_expander", 18)), 0); (("map", 1800), ((Tag3 ((("t", 1797)), 0, (0)), 100000000, 0, -106), 0, (("expander/ppx_let_expander.mli", 82, 2405, 2405), ("expander/ppx_let_expander.mli", 82, 2405, 2416), 0), 0, Tag1 ("Ppx_let_expander", 19)), 0); (("variables_of", 1801), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Ast_traverse"), "fold"), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "loc"), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "label"), 0, (0)), 100000000, 0, -105)], (0)), 100000000, 0, -104)], (0)), 100000000, 0, -103)], (0)), 100000000, 0, -102), 0, (("expander/ppx_let_expander.mli", 83, 2417, 2417), ("expander/ppx_let_expander.mli", 83, 2417, 2468), 0), 0, Tag1 ("Ppx_let_expander", 20)), 0); Tag3 (("Map", 1802), 0, (Tag1 ([(("name", 1821), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -206), 0, (("expander/ppx_let_expander.mli", 86, 2487, 2489), ("expander/ppx_let_expander.mli", 86, 2487, 2506), 0), 0, Tag1 ("Ppx_let_expander", 21)), 0); (("with_location", 1822), ((Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -205), 0, (("expander/ppx_let_expander.mli", 87, 2507, 2509), ("expander/ppx_let_expander.mli", 87, 2507, 2533), 0), 0, Tag1 ("Ppx_let_expander", 22)), 0)]), 0, (("expander/ppx_let_expander.mli", 85, 2470, 2470), ("expander/ppx_let_expander.mli", 88, 2534, 2537), 0), Tag1 ("Ppx_let_expander", 23)), 0, 0); (("eoperator", 1803), ((Tag1 (("loc"), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "location"), 0, (0)), 100000000, 0, -101), (Tag1 (("modul"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "loc"), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "longident"), 0, (0)), 100000000, 0, -100)], (0)), 100000000, 0, -99)], (0)), 100000000, 0, -98), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "label"), 0, (0)), 100000000, 0, -97), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -96), 0), 100000000, 0, -95), 0), 100000000, 0, -94), 0), 100000000, 0, -93), 0, (("expander/ppx_let_expander.mli", 90, 2539, 2539), ("expander/ppx_let_expander.mli", 90, 2539, 2620), 0), 0, Tag1 ("Ppx_let_expander", 24)), 0); (("expand_match", 1804), ((Tag1 (0, (Tag3 ((("t", 1797)), 0, (0)), 100000000, 0, -92), (Tag1 (("extension_kind"), (Tag3 (Tag1 ((("Extension_kind", 1794)), "t"), 0, (0)), 100000000, 0, -91), (Tag1 (("loc"), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "location"), 0, (0)), 100000000, 0, -90), (Tag1 (("modul"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "loc"), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "longident"), 0, (0)), 100000000, 0, -89)], (0)), 100000000, 0, -88)], (0)), 100000000, 0, -87), (Tag1 (("locality"), (Tag8 (([("global", (0)); ("local", (0))], (0, 100000000, 0, -86), 1, 0, 0)), 100000000, 0, -85), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -84), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "case"), 0, (0)), 100000000, 0, -83)], (0)), 100000000, 0, -82), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0), 100000000, 0, -79), 0), 100000000, 0, -78), 0), 100000000, 0, -77), 0), 100000000, 0, -76), 0), 100000000, 0, -75), 0), 100000000, 0, -74), 0, (("expander/ppx_let_expander.mli", 92, 2622, 2622), ("expander/ppx_let_expander.mli", 100, 2799, 2814), 0), 0, Tag1 ("Ppx_let_expander", 25)), 0); (("maybe_destruct", 1805), ((Tag1 (("destruct"), (Tag1 (("assume_exhaustive"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -73), (Tag1 (("loc"), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "location"), 0, (0)), 100000000, 0, -72), (Tag1 (("modul"), ((("a")), 100000000, 0, -59), (Tag1 (("lhs"), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "pattern"), 0, (0)), 100000000, 0, -71), (Tag1 (("rhs"), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -70), (Tag1 (("body"), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -69), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -68)], (0)), 100000000, 0, -67), 0), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0), 100000000, 0, -63), 0), 100000000, 0, -62), 0), 100000000, 0, -61), (Tag1 (("loc"), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "location"), 0, (0)), 100000000, 0, -60), (Tag1 (("modul"), ((("a")), 100000000, 0, -59), (Tag1 (("locality"), (Tag8 (([("global", (0)); ("local", (0))], (0, 100000000, 0, -58), 1, 0, 0)), 100000000, 0, -57), (Tag1 (("lhs"), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "pattern"), 0, (0)), 100000000, 0, -56), (Tag1 (("body"), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -55), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0), 100000000, 0, -50), 0), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("expander/ppx_let_expander.mli", 102, 2816, 2816), ("expander/ppx_let_expander.mli", 116, 3136, 3151), 0), 0, Tag1 ("Ppx_let_expander", 26)), 0); (("bind_apply", 1806), ((Tag1 (Tag1 ("fn_label"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -47)], (0)), 100000000, 0, -46), (Tag1 (("op_name"), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "label"), 0, (0)), 100000000, 0, -45), (Tag1 (("loc"), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "location"), 0, (0)), 100000000, 0, -44), (Tag1 (("modul"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "loc"), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "longident"), 0, (0)), 100000000, 0, -43)], (0)), 100000000, 0, -42)], (0)), 100000000, 0, -41), (Tag1 (("with_location"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -40), (Tag1 (("arg"), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -39), (Tag1 (("fn"), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -38), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -37), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("expander/ppx_let_expander.mli", 118, 3153, 3153), ("expander/ppx_let_expander.mli", 127, 3352, 3367), 0), 0, Tag1 ("Ppx_let_expander", 27)), 0); (("qualified_return", 1807), ((Tag1 (("loc"), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "location"), 0, (0)), 100000000, 0, -27), (Tag1 (("modul"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "loc"), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "longident"), 0, (0)), 100000000, 0, -26)], (0)), 100000000, 0, -25)], (0)), 100000000, 0, -24), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -23), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("expander/ppx_let_expander.mli", 129, 3369, 3369), ("expander/ppx_let_expander.mli", 133, 3456, 3471), 0), 0, Tag1 ("Ppx_let_expander", 28)), 0); (("expand", 1808), ((Tag1 (0, (Tag3 ((("t", 1797)), 0, (0)), 100000000, 0, -18), (Tag1 (0, (Tag3 (Tag1 ((("Extension_kind", 1794)), "t"), 0, (0)), 100000000, 0, -17), (Tag1 (("modul"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "loc"), [(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "longident"), 0, (0)), 100000000, 0, -16)], (0)), 100000000, 0, -15)], (0)), 100000000, 0, -14), (Tag1 (("locality"), (Tag8 (([("global", (0)); ("local", (0))], (0, 100000000, 0, -13), 1, 0, 0)), 100000000, 0, -12), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -11), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("expander/ppx_let_expander.mli", 135, 3473, 3473), ("expander/ppx_let_expander.mli", 141, 3596, 3611), 0), 0, Tag1 ("Ppx_let_expander", 29)), 0); (("do_not_enter_value", 1809), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "value_binding"), 0, (0)), 100000000, 0, -4), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "value_binding"), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("expander/ppx_let_expander.mli", 143, 3613, 3613), ("expander/ppx_let_expander.mli", 143, 3613, 3668), 0), 0, Tag1 ("Ppx_let_expander", 30)), 0)], "Ppx_let_expander", [("Ppx_let_expander", ("5*`\012\163\127Y\225\135l\134C~\149_\029")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Subst", ("\021\031\148\223\127\186\189\135\027}\145r\216\143\177\156")); ("Stdppx", ("=:\209>\156\207\149\181\248\131\161P-\254\025q")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__StringLabels", ("\134F\024\226\216Is#\223\230\234\169Z\206Gc")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Result", ("\247h\157\021\029a\144\199*\186Z\162\225\241\160>")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__ListLabels", ("*\194\012\191\020%\170\249m\002\180\178hk\205\220")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Char", ("\1794\1468\190\138\150g\231\240\140d\191.\212e")); ("Stdlib__BytesLabels", ("\145\128\000\239\186Z.\0310^\247\201\174\\\137R")); ("Stdlib__Bytes", ("C\134\194)\175\222\137p\205\246\244\r\241\164P\209")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib__Arg", ("\024%=\206\198p\149Y\007\004\216,&\254#\207")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("Profile", ("\201i\132?<qM\169\011\239@\142\202\182\023,")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Ppxlib_traverse_builtins", ("\237\218tx\250&^T{\197#\019<\250_\r")); ("Ppxlib_ast__Versions", ("\005+\189\023\165C\208\138FX6X\224\005\223\t")); ("Ppxlib_ast__Import", ("\027\222\n&\137\144M\230R\150g=Y\198\007\233")); ("Ppxlib_ast__Ast", ("?\026\134=\154d\183u\023\212\177\192\b]\250E")); ("Ppxlib_ast__", ("\182{\159J6;\249\149\208}`\139\002r\020x")); ("Ppxlib_ast", ("\002y:\229,^V\247~U\236~\232\131I\154")); ("Ppxlib__Utils", ("l\219q\2089\252\011\193\194^N&B\192T\223")); ("Ppxlib__Name", ("\202C\151nm\153EG\200\214[;s!)\140")); ("Ppxlib__Longident", ("\236#\230\012\180\203D\156\209\2282-p1H\132")); ("Ppxlib__Location", ("\r\139A\176n\135\029#\213\194&\153}\132\b\193")); ("Ppxlib__Loc", ("\183\208\004g\131\162\223\177\235#:\182\128\020\166\155")); ("Ppxlib__Import", ("\146|\185\205\005c\141\174\165\006\1517\177}\\\241")); ("Ppxlib__Expansion_context", ("\210<\144_\134\203\172\219N:6H\156{\220U")); ("Ppxlib__Common", (">S\244L\148\145\200\134\1298\249\200b\014\193\147")); ("Ppxlib__Code_path", ("\029\211r\143\213`\240\244{Na\007Ii^J")); ("Ppxlib__Attribute", ("\162~~\178\183\027\245`\231\215\181\235qHm\b")); ("Ppxlib__Ast_traverse0", ("r\177\171e\003\155\241]D\149FKy\174\023\225")); ("Ppxlib__Ast_traverse", ("B\b\r\176z\\s\1809\129\156\127?\011Qo")); ("Ppxlib__Ast_pattern_generated", (":\216\170\153\005\218jM\167\138\2111!\b\020K")); ("Ppxlib__Ast_pattern0", ("\255\203\196\229\159\201Q*\230\238\"\198(Q\154\029")); ("Ppxlib__Ast_pattern", ("\023,&Ow\159\019\144Rw\158\143\213Mo\203")); ("Ppxlib__", ("JQ\224\000Y\175_]O\b\254O\194|\017\237")); ("Ppxlib", ("\216\128\187K\006\011\165\149s\168&\180\1515\181\007")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Ocaml_shadow", ("\148\171\169\197\t\188z\207\155\180N\151 \195\173\206")); ("Ocaml_common", ("1\212\195\020\163\232\187\142G\192\221\180@\1278u")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Load_path", ("\012@\228l\230\164S\172h\1726X\020\252o}")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("Env", ("\021\n\181\142x\b\169j\227\"\017\248*\178\245\223")); ("Compmisc", ("B\127\\\174\004T\179\002\242}-C\214\152H*")); ("Cmi_format", ("6\177\bU\139\"\023\152=\249\135\174\b\011Cg")); ("Clflags", ("\162v\193G\199E|\029\023{\b\243]B\144;")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216")); ("Astlib__Parse", ("\203iQ\135d.\147$\t\207\203C\131\175\193\171")); ("Astlib__Longident", ("\n\192\233\142\177n\225\191\238\161#\150\204n\"Y")); ("Astlib__Location", ("nn\153\250\162\2239\215\129\229e\026xg\000U")); ("Astlib__Ast_501", ("\207\"A\188\024\242Q\223\153\146\239\128\168h\148&")); ("Astlib__Ast_500", ("\202\202\240\178Ep\168 [f\246\t\162T\141\254")); ("Astlib__Ast_414", ("i\179p\208\134r\2177\243\167\157nF\235\143\179")); ("Astlib__Ast_413", ("\240P\019\205\016\157\177\177O)\172\193\028\192\011\190")); ("Astlib__Ast_412", (">\181S\020\t\004\1998\163p\025\210s\216\251\169")); ("Astlib__Ast_411", ("\030\186y\191\005D\180nv\183\b@1\225\168+")); ("Astlib__Ast_410", ("\023\030O]m0\005\214X\n/\226c\201\214\232")); ("Astlib__Ast_409", ("P\147I\234\185H\181\153\207\221\003\165\139\161\150\027")); ("Astlib__Ast_408", ("\225\220%%\162\188\006W\007\252\001X\158\165,\004")); ("Astlib__Ast_407", ("\163\202\2018`\230bGY\138/\021'\148:\018")); ("Astlib__Ast_406", ("v\152\031Q\232\244\141\011p\012\161\164hy\203\151")); ("Astlib__Ast_405", ("\145;\017\238\241\127\173z\138\142Q4>\198\186\207")); ("Astlib__Ast_404", ("I\027\143Zr\250\2468\193\167uOo\029\236\148")); ("Astlib__Ast_403", ("\206M\242\247\155X\251\127\002Ly\024\154\245\153\180")); ("Astlib__Ast_402", ("\178]\161\230\193\144:\005/\\~\127'|\207\189")); ("Astlib__", ("\246\155.n\143$\1435\bi\005\019C\219\191A")); ("Astlib", ("\002*Xp\193\003\201C\234Q\143\029\232\1569\007"))], [(0)])
val do_not_enter_value : Ppxlib.value_binding -> Ppxlib.value_binding
