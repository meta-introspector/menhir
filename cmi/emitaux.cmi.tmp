val output_channel : out_channel ref
val emit_string : string -> unit
val emit_int : int -> unit
val emit_nativeint : nativeint -> unit
val emit_int32 : int32 -> unit
val emit_symbol : string -> unit
val emit_printf : ('a, out_channel, unit) format -> 'a
val emit_char : char -> unit
val emit_string_literal : string -> unit
val emit_string_directive : string -> string -> unit
val emit_bytes_directive : string -> string -> unit
val emit_float64_directive : string -> int64 -> unit
val emit_float64_split_directive : string -> int64 -> unit
val emit_float32_directive : string -> int32 -> unit
val reset : unit -> unit
val reset_debug_info : unit -> unit
val emit_debug_info : Debuginfo.t -> unit
val emit_debug_info_gen :
  Debuginfo.t ->
  (file_num:int -> file_name:string -> unit) ->
  (file_num:int -> line:int -> col:int -> unit) -> unit
type frame_debuginfo =
    Dbg_alloc of Debuginfo.alloc_dbginfo
  | Dbg_raise of Debuginfo.t
  | Dbg_other of Debuginfo.t
val record_frame_descr :
  label:int ->
  frame_size:int -> live_offset:int list -> frame_debuginfo -> unit
type emit_frame_actions = {
  efa_code_label : int -> unit;
  efa_data_label : int -> unit;
  efa_8 : int -> unit;
  efa_16 : int -> unit;
  efa_32 : int32 -> unit;
  efa_word : int -> unit;
  efa_align : int -> unit;
  efa_label_rel : int -> int32 -> unit;
  efa_def_label : int -> unit;
  efa_string : string -> unit;
}
val emit_frames : emit_frame_actions -> unit
val is_generic_function : string -> bool
val cfi_startproc : unit -> unit
val cfi_endproc : unit -> unit
val cfi_adjust_cfa_offset : int -> unit
val cfi_offset : reg:int -> offset:int -> unit
val cfi_def_cfa_offset : int -> unit
val cfi_remember_state : unit -> unit
val cfi_restore_state : unit -> unit
val cfi_def_cfa_register : reg:int -> unit
val binary_backend_available : bool ref
val create_asm_file : bool ref
type error = Stack_frame_too_large of int
exception Error of error
val report_error : Format.formatter -> error -> unit
val mk_env : Linear.fundecl -> Emitenv.per_function_env
type preproc_stack_check_result = {
  max_frame_size : int;
  contains_nontail_calls : bool;
}
val preproc_stack_check :
  fun_body:Linear.instruction ->
  ("DEBUG:rule", [(("output_channel", 534), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -180)], (0)), 100000000, 0, -179), 0, (("asmcomp/emitaux.mli", 18, 1130, 1130), ("asmcomp/emitaux.mli", 18, 1130, 1165), 0), 0, Tag1 ("Emitaux", 0)), 0); (("emit_string", 535), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -178), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -177), 0), 100000000, 0, -176), 0, (("asmcomp/emitaux.mli", 19, 1166, 1166), ("asmcomp/emitaux.mli", 19, 1166, 1197), 0), 0, Tag1 ("Emitaux", 1)), 0); (("emit_int", 536), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -175), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -174), 0), 100000000, 0, -173), 0, (("asmcomp/emitaux.mli", 20, 1198, 1198), ("asmcomp/emitaux.mli", 20, 1198, 1223), 0), 0, Tag1 ("Emitaux", 2)), 0); (("emit_nativeint", 537), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -172), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -171), 0), 100000000, 0, -170), 0, (("asmcomp/emitaux.mli", 21, 1224, 1224), ("asmcomp/emitaux.mli", 21, 1224, 1261), 0), 0, Tag1 ("Emitaux", 3)), 0); (("emit_int32", 538), ((Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -169), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -168), 0), 100000000, 0, -167), 0, (("asmcomp/emitaux.mli", 22, 1262, 1262), ("asmcomp/emitaux.mli", 22, 1262, 1291), 0), 0, Tag1 ("Emitaux", 4)), 0); (("emit_symbol", 539), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -166), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -165), 0), 100000000, 0, -164), 0, (("asmcomp/emitaux.mli", 23, 1292, 1292), ("asmcomp/emitaux.mli", 23, 1292, 1323), 0), 0, Tag1 ("Emitaux", 5)), 0); (("emit_printf", 540), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format"), [((("a")), 100000000, 0, -160); (Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -162); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -163)], (0)), 100000000, 0, -161), ((("a")), 100000000, 0, -160), 0), 100000000, 0, -159), 0, (("asmcomp/emitaux.mli", 24, 1324, 1324), ("asmcomp/emitaux.mli", 24, 1324, 1377), 0), 0, Tag1 ("Emitaux", 6)), 0); (("emit_char", 541), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -158), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -157), 0), 100000000, 0, -156), 0, (("asmcomp/emitaux.mli", 25, 1378, 1378), ("asmcomp/emitaux.mli", 25, 1378, 1405), 0), 0, Tag1 ("Emitaux", 7)), 0); (("emit_string_literal", 542), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -155), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -154), 0), 100000000, 0, -153), 0, (("asmcomp/emitaux.mli", 26, 1406, 1406), ("asmcomp/emitaux.mli", 26, 1406, 1445), 0), 0, Tag1 ("Emitaux", 8)), 0); (("emit_string_directive", 543), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -152), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -151), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -150), 0), 100000000, 0, -149), 0), 100000000, 0, -148), 0, (("asmcomp/emitaux.mli", 27, 1446, 1446), ("asmcomp/emitaux.mli", 27, 1446, 1497), 0), 0, Tag1 ("Emitaux", 9)), 0); (("emit_bytes_directive", 544), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -147), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -146), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -145), 0), 100000000, 0, -144), 0), 100000000, 0, -143), 0, (("asmcomp/emitaux.mli", 28, 1498, 1498), ("asmcomp/emitaux.mli", 28, 1498, 1548), 0), 0, Tag1 ("Emitaux", 10)), 0); (("emit_float64_directive", 545), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -142), (Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -141), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -140), 0), 100000000, 0, -139), 0), 100000000, 0, -138), 0, (("asmcomp/emitaux.mli", 29, 1549, 1549), ("asmcomp/emitaux.mli", 29, 1549, 1600), 0), 0, Tag1 ("Emitaux", 11)), 0); (("emit_float64_split_directive", 546), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -137), (Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -136), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -135), 0), 100000000, 0, -134), 0), 100000000, 0, -133), 0, (("asmcomp/emitaux.mli", 30, 1601, 1601), ("asmcomp/emitaux.mli", 30, 1601, 1658), 0), 0, Tag1 ("Emitaux", 12)), 0); (("emit_float32_directive", 547), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -132), (Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -131), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -130), 0), 100000000, 0, -129), 0), 100000000, 0, -128), 0, (("asmcomp/emitaux.mli", 31, 1659, 1659), ("asmcomp/emitaux.mli", 31, 1659, 1710), 0), 0, Tag1 ("Emitaux", 13)), 0); (("reset", 548), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -127), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -126), 0), 100000000, 0, -125), 0, (("asmcomp/emitaux.mli", 33, 1712, 1712), ("asmcomp/emitaux.mli", 33, 1712, 1736), 0), 0, Tag1 ("Emitaux", 14)), 0); (("reset_debug_info", 549), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -124), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -123), 0), 100000000, 0, -122), 0, (("asmcomp/emitaux.mli", 34, 1737, 1737), ("asmcomp/emitaux.mli", 34, 1737, 1771), 0), 0, Tag1 ("Emitaux", 15)), 0); (("emit_debug_info", 550), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Debuginfo")), "t"), 0, (0)), 100000000, 0, -121), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -120), 0), 100000000, 0, -119), 0, (("asmcomp/emitaux.mli", 35, 1772, 1772), ("asmcomp/emitaux.mli", 35, 1772, 1812), 0), 0, Tag1 ("Emitaux", 16)), 0); (("emit_debug_info_gen", 551), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Debuginfo")), "t"), 0, (0)), 100000000, 0, -118), (Tag1 (0, (Tag1 (("file_num"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -117), (Tag1 (("file_name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -116), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -115), 0), 100000000, 0, -114), 0), 100000000, 0, -113), (Tag1 (0, (Tag1 (("file_num"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -112), (Tag1 (("line"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -111), (Tag1 (("col"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -110), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -109), 0), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -105), 0), 100000000, 0, -104), 0), 100000000, 0, -103), 0), 100000000, 0, -102), 0, (("asmcomp/emitaux.mli", 36, 1813, 1813), ("asmcomp/emitaux.mli", 39, 1904, 1959), 0), 0, Tag1 ("Emitaux", 17)), 0); Tag1 (("frame_debuginfo", 552), (0, 0, Tag1 ([(("Dbg_alloc", 302), ([(Tag3 (Tag1 ((Tag2 ("Debuginfo")), "alloc_dbginfo"), 0, (0)), 100000000, 0, -99)]), 0, (("asmcomp/emitaux.mli", 42, 1984, 1986), ("asmcomp/emitaux.mli", 42, 1984, 2024), 0), 0, Tag1 ("Emitaux", 19)); (("Dbg_raise", 303), ([(Tag3 (Tag1 ((Tag2 ("Debuginfo")), "t"), 0, (0)), 100000000, 0, -100)]), 0, (("asmcomp/emitaux.mli", 43, 2025, 2027), ("asmcomp/emitaux.mli", 43, 2025, 2053), 0), 0, Tag1 ("Emitaux", 20)); (("Dbg_other", 304), ([(Tag3 (Tag1 ((Tag2 ("Debuginfo")), "t"), 0, (0)), 100000000, 0, -101)]), 0, (("asmcomp/emitaux.mli", 44, 2054, 2056), ("asmcomp/emitaux.mli", 44, 2054, 2082), 0), 0, Tag1 ("Emitaux", 21))], 0), 1, 0, 0, 0, 0, 0, (("asmcomp/emitaux.mli", 41, 1961, 1961), ("asmcomp/emitaux.mli", 44, 2054, 2082), 0), 0, 0, 0, Tag1 ("Emitaux", 18)), 1, 0); (("record_frame_descr", 553), ((Tag1 (("label"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -98), (Tag1 (("frame_size"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -97), (Tag1 (("live_offset"), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -96)], (0)), 100000000, 0, -95), (Tag1 (0, (Tag3 ((("frame_debuginfo", 552)), 0, (0)), 100000000, 0, -94), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -93), 0), 100000000, 0, -92), 0), 100000000, 0, -91), 0), 100000000, 0, -90), 0), 100000000, 0, -89), 0, (("asmcomp/emitaux.mli", 46, 2084, 2084), ("asmcomp/emitaux.mli", 51, 2328, 2334), 0), 0, Tag1 ("Emitaux", 22)), 0); Tag1 (("emit_frame_actions", 554), (0, 0, [[(("efa_code_label", 307), 0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -59), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), (("asmcomp/emitaux.mli", 54, 2362, 2366), ("asmcomp/emitaux.mli", 54, 2362, 2394), 0), 0, Tag1 ("Emitaux", 24)); (("efa_data_label", 308), 0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -62), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -61), 0), 100000000, 0, -60), (("asmcomp/emitaux.mli", 55, 2395, 2399), ("asmcomp/emitaux.mli", 55, 2395, 2427), 0), 0, Tag1 ("Emitaux", 25)); (("efa_8", 309), 0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -65), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -64), 0), 100000000, 0, -63), (("asmcomp/emitaux.mli", 56, 2428, 2432), ("asmcomp/emitaux.mli", 56, 2428, 2451), 0), 0, Tag1 ("Emitaux", 26)); (("efa_16", 310), 0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -68), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -67), 0), 100000000, 0, -66), (("asmcomp/emitaux.mli", 57, 2452, 2456), ("asmcomp/emitaux.mli", 57, 2452, 2476), 0), 0, Tag1 ("Emitaux", 27)); (("efa_32", 311), 0, (Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -71), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -70), 0), 100000000, 0, -69), (("asmcomp/emitaux.mli", 58, 2477, 2481), ("asmcomp/emitaux.mli", 58, 2477, 2503), 0), 0, Tag1 ("Emitaux", 28)); (("efa_word", 312), 0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -74), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -73), 0), 100000000, 0, -72), (("asmcomp/emitaux.mli", 59, 2504, 2508), ("asmcomp/emitaux.mli", 59, 2504, 2530), 0), 0, Tag1 ("Emitaux", 29)); (("efa_align", 313), 0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -77), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -76), 0), 100000000, 0, -75), (("asmcomp/emitaux.mli", 60, 2531, 2535), ("asmcomp/emitaux.mli", 60, 2531, 2558), 0), 0, Tag1 ("Emitaux", 30)); (("efa_label_rel", 314), 0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -82), (Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -81), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -80), 0), 100000000, 0, -79), 0), 100000000, 0, -78), (("asmcomp/emitaux.mli", 61, 2559, 2563), ("asmcomp/emitaux.mli", 61, 2559, 2599), 0), 0, Tag1 ("Emitaux", 31)); (("efa_def_label", 315), 0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -85), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -84), 0), 100000000, 0, -83), (("asmcomp/emitaux.mli", 62, 2600, 2604), ("asmcomp/emitaux.mli", 62, 2600, 2631), 0), 0, Tag1 ("Emitaux", 32)); (("efa_string", 316), 0, (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -88), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -87), 0), 100000000, 0, -86), (("asmcomp/emitaux.mli", 63, 2632, 2636), ("asmcomp/emitaux.mli", 63, 2632, 2662), 0), 0, Tag1 ("Emitaux", 33))]], 1, 0, 0, 0, 0, 0, (("asmcomp/emitaux.mli", 53, 2336, 2336), ("asmcomp/emitaux.mli", 63, 2632, 2664), 0), 0, 0, 0, Tag1 ("Emitaux", 23)), 1, 0); (("emit_frames", 555), ((Tag1 (0, (Tag3 ((("emit_frame_actions", 554)), 0, (0)), 100000000, 0, -56), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0, (("asmcomp/emitaux.mli", 65, 2666, 2666), ("asmcomp/emitaux.mli", 65, 2666, 2709), 0), 0, Tag1 ("Emitaux", 34)), 0); (("is_generic_function", 556), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -53), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("asmcomp/emitaux.mli", 67, 2711, 2711), ("asmcomp/emitaux.mli", 67, 2711, 2750), 0), 0, Tag1 ("Emitaux", 35)), 0); (("cfi_startproc", 557), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -50), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("asmcomp/emitaux.mli", 69, 2752, 2752), ("asmcomp/emitaux.mli", 69, 2752, 2784), 0), 0, Tag1 ("Emitaux", 36)), 0); (("cfi_endproc", 558), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -47), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0, (("asmcomp/emitaux.mli", 70, 2785, 2785), ("asmcomp/emitaux.mli", 70, 2785, 2815), 0), 0, Tag1 ("Emitaux", 37)), 0); (("cfi_adjust_cfa_offset", 559), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -44), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("asmcomp/emitaux.mli", 71, 2816, 2816), ("asmcomp/emitaux.mli", 71, 2816, 2855), 0), 0, Tag1 ("Emitaux", 38)), 0); (("cfi_offset", 560), ((Tag1 (("reg"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -41), (Tag1 (("offset"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -40), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0), 100000000, 0, -37), 0, (("asmcomp/emitaux.mli", 72, 2856, 2856), ("asmcomp/emitaux.mli", 72, 2856, 2902), 0), 0, Tag1 ("Emitaux", 39)), 0); (("cfi_def_cfa_offset", 561), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -36), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("asmcomp/emitaux.mli", 73, 2903, 2903), ("asmcomp/emitaux.mli", 73, 2903, 2939), 0), 0, Tag1 ("Emitaux", 40)), 0); (("cfi_remember_state", 562), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -33), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("asmcomp/emitaux.mli", 74, 2940, 2940), ("asmcomp/emitaux.mli", 74, 2940, 2977), 0), 0, Tag1 ("Emitaux", 41)), 0); (("cfi_restore_state", 563), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -30), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("asmcomp/emitaux.mli", 75, 2978, 2978), ("asmcomp/emitaux.mli", 75, 2978, 3014), 0), 0, Tag1 ("Emitaux", 42)), 0); (("cfi_def_cfa_register", 564), ((Tag1 (("reg"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -27), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0, (("asmcomp/emitaux.mli", 76, 3015, 3015), ("asmcomp/emitaux.mli", 76, 3015, 3056), 0), 0, Tag1 ("Emitaux", 43)), 0); (("binary_backend_available", 565), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -24)], (0)), 100000000, 0, -23), 0, (("asmcomp/emitaux.mli", 78, 3058, 3058), ("asmcomp/emitaux.mli", 78, 3058, 3096), 0), 0, Tag1 ("Emitaux", 44)), 0); (("create_asm_file", 566), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -22)], (0)), 100000000, 0, -21), 0, (("asmcomp/emitaux.mli", 83, 3255, 3255), ("asmcomp/emitaux.mli", 83, 3255, 3284), 0), 0, Tag1 ("Emitaux", 45)), 0); Tag1 (("error", 567), (0, 0, Tag1 ([(("Stack_frame_too_large", 330), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -20)]), 0, (("asmcomp/emitaux.mli", 87, 3364, 3366), ("asmcomp/emitaux.mli", 87, 3364, 3396), 0), 0, Tag1 ("Emitaux", 47))], 0), 1, 0, 0, 0, 0, 0, (("asmcomp/emitaux.mli", 86, 3351, 3351), ("asmcomp/emitaux.mli", 87, 3364, 3396), 0), 0, 0, 1, Tag1 ("Emitaux", 46)), 1, 0); Tag2 (("Error", 568), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((("error", 567)), 0, (0)), 100000000, 0, -19)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Emitaux", 48)), 2, 0); (("report_error", 569), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -18), (Tag1 (0, (Tag3 ((("error", 567)), 0, (0)), 100000000, 0, -17), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("asmcomp/emitaux.mli", 90, 3423, 3423), ("asmcomp/emitaux.mli", 90, 3423, 3474), 0), 0, Tag1 ("Emitaux", 49)), 0); (("mk_env", 570), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Linear")), "fundecl"), 0, (0)), 100000000, 0, -13), (Tag3 (Tag1 ((Tag2 ("Emitenv")), "per_function_env"), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("asmcomp/emitaux.mli", 92, 3476, 3476), ("asmcomp/emitaux.mli", 92, 3476, 3531), 0), 0, Tag1 ("Emitaux", 52)), 0); Tag1 (("preproc_stack_check_result", 571), (0, 0, [[(("max_frame_size", 508), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -9), (("asmcomp/emitaux.mli", 95, 3567, 3571), ("asmcomp/emitaux.mli", 95, 3567, 3592), 0), 0, Tag1 ("Emitaux", 54)); (("contains_nontail_calls", 509), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -10), (("asmcomp/emitaux.mli", 96, 3593, 3597), ("asmcomp/emitaux.mli", 96, 3593, 3626), 0), 0, Tag1 ("Emitaux", 55))]], 1, 0, 0, 0, 0, 0, (("asmcomp/emitaux.mli", 94, 3533, 3533), ("asmcomp/emitaux.mli", 96, 3593, 3628), 0), 0, 0, 0, Tag1 ("Emitaux", 53)), 1, 0); (("preproc_stack_check", 572), ((Tag1 (("fun_body"), (Tag3 (Tag1 ((Tag2 ("Linear")), "instruction"), 0, (0)), 100000000, 0, -8), (Tag1 (("frame_size"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7), (Tag1 (("trap_size"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -6), (Tag3 ((("preproc_stack_check_result", 571)), 0, (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("asmcomp/emitaux.mli", 98, 3630, 3630), ("asmcomp/emitaux.mli", 102, 3727, 3755), 0), 0, Tag1 ("Emitaux", 56)), 0)], "Emitaux", [("Emitaux", ("\214\253\188+\023\204\024x\221\022\175\243\210\206sz")); ("X86_ast", ("_J}e\221\174\027(J\165T\180=\151\227n")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Targetint", ("\246d\193-\187\015a_\181+\n \019\246;\150")); ("Subst", ("\021\031\148\223\127\186\189\135\027}\145r\216\143\177\156")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Arg", ("\024%=\206\198p\149Y\007\004\216,&\254#\207")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Reg", ("*\173\202\2069\136\224\129\178\171\139w\215DX\154")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Mach", ("&\170\178\177#\189\191s\128\250H\146\198\206\134\167")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Load_path", ("\012@\228l\230\164S\172h\1726X\020\252o}")); ("Linear", ("%\195\240\191\217*`\216F1\029\212\248\171\223H")); ("Lambda", ("\180\1419\236'\146K$\128\006\135q\135V\029\180")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("Env", ("\021\n\181\142x\b\169j\227\"\017\248*\178\245\223")); ("Emitenv", ("~\000\175\r\226(\027\185\215?\166O\200\203\212\213")); ("Debuginfo", ("\131\251\175\217P\194M\163\022\151\002\005\006\185:\185")); ("Cmm", ("\245\177\229\137\140&\252'xF\207\167\160\025\167\223")); ("Cmi_format", ("6\177\bU\139\"\023\152=\249\135\174\b\011Cg")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc")); ("Backend_var", ("\182\144C\215j:\241\151\214\131?\204\253\002\029\151")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216")); ("Arch", ("9\221>\185\204\181\224\2279\164\221\212\213\028qT"))], [(0)])
frame_size:int -> trap_size:int -> preproc_stack_check_result
