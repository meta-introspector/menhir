type t
type kind = [ `Cma | `Cmo | `Exe | `Runtime | `Unknown ]
val create : kind -> t
val to_string : t -> string
val parse : string -> t option
val with_kind : t -> kind -> t
exception Incompatible_build_info of { key : string;
            first : string * string option; second : string * string option;
          }
val merge : string -> t -> string -> t -> t
val kind : t -> kind("DEBUG:rule", [Tag1 (("t", 398), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("compiler/lib/build_info.mli", 21, 880, 880), ("compiler/lib/build_info.mli", 21, 880, 886), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Build_info", 0)), 1, 0); Tag1 (("kind", 399), (0, 0, 0, 1, ((Tag8 (([("Cma", (0)); ("Cmo", (0)); ("Exe", (0)); ("Runtime", (0)); ("Unknown", (0))], (0, 100000000, 0, -42), 1, 0, 0)), 100000000, 0, -41)), 0, 0, 0, 0, (("compiler/lib/build_info.mli", 23, 888, 888), ("compiler/lib/build_info.mli", 29, 953, 956), 0), 0, 1, 0, Tag1 ("Js_of_ocaml_compiler__Build_info", 1)), 1, 0); (("create", 400), ((Tag1 (0, (Tag3 ((("kind", 399)), 0, (0)), 100000000, 0, -40), (Tag3 ((("t", 398)), 0, (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("compiler/lib/build_info.mli", 31, 958, 958), ("compiler/lib/build_info.mli", 31, 958, 980), 0), 0, Tag1 ("Js_of_ocaml_compiler__Build_info", 2)), 0); (("to_string", 401), ((Tag1 (0, (Tag3 ((("t", 398)), 0, (0)), 100000000, 0, -37), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("compiler/lib/build_info.mli", 33, 982, 982), ("compiler/lib/build_info.mli", 33, 982, 1009), 0), 0, Tag1 ("Js_of_ocaml_compiler__Build_info", 3)), 0); (("parse", 402), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -34), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 398)), 0, (0)), 100000000, 0, -33)], (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("compiler/lib/build_info.mli", 35, 1011, 1011), ("compiler/lib/build_info.mli", 35, 1011, 1041), 0), 0, Tag1 ("Js_of_ocaml_compiler__Build_info", 4)), 0); (("with_kind", 403), ((Tag1 (0, (Tag3 ((("t", 398)), 0, (0)), 100000000, 0, -30), (Tag1 (0, (Tag3 ((("kind", 399)), 0, (0)), 100000000, 0, -29), (Tag3 ((("t", 398)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("compiler/lib/build_info.mli", 37, 1043, 1043), ("compiler/lib/build_info.mli", 37, 1043, 1073), 0), 0, Tag1 ("Js_of_ocaml_compiler__Build_info", 5)), 0); Tag2 (("Incompatible_build_info", 404), ((Tag3 ("exn", 7)), 0, Tag1 ([(("key", 392), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -17), (("compiler/lib/build_info.mli", 41, 1114, 1120), ("compiler/lib/build_info.mli", 42, 1133, 1138), 0), 0, Tag1 ("Js_of_ocaml_compiler__Build_info", 6)); (("first", 393), 0, (Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -19); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -21)], (0)), 100000000, 0, -20)]), 100000000, 0, -18), (("compiler/lib/build_info.mli", 42, 1133, 1139), ("compiler/lib/build_info.mli", 43, 1172, 1177), 0), 0, Tag1 ("Js_of_ocaml_compiler__Build_info", 7)); (("second", 394), 0, (Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -23); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -25)], (0)), 100000000, 0, -24)]), 100000000, 0, -22), (("compiler/lib/build_info.mli", 43, 1172, 1178), ("compiler/lib/build_info.mli", 43, 1172, 1211), 0), 0, Tag1 ("Js_of_ocaml_compiler__Build_info", 8))]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Js_of_ocaml_compiler__Build_info", 9)), 2, 0); (("merge", 405), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -16), (Tag1 (0, (Tag3 ((("t", 398)), 0, (0)), 100000000, 0, -15), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -14), (Tag1 (0, (Tag3 ((("t", 398)), 0, (0)), 100000000, 0, -13), (Tag3 ((("t", 398)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("compiler/lib/build_info.mli", 46, 1219, 1219), ("compiler/lib/build_info.mli", 46, 1219, 1262), 0), 0, Tag1 ("Js_of_ocaml_compiler__Build_info", 11)), 0); (("kind", 406), ((Tag1 (0, (Tag3 ((("t", 398)), 0, (0)), 100000000, 0, -7), (Tag3 ((("kind", 399)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("compiler/lib/build_info.mli", 48, 1264, 1264), ("compiler/lib/build_info.mli", 48, 1264, 1284), 0), 0, Tag1 ("Js_of_ocaml_compiler__Build_info", 12)), 0); (("configure", 407), ((Tag1 (0, (Tag3 ((("t", 398)), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("compiler/lib/build_info.mli", 50, 1286, 1286), ("compiler/lib/build_info.mli", 50, 1286, 1311), 0), 0, Tag1 ("Js_of_ocaml_compiler__Build_info", 13)), 0)], "Js_of_ocaml_compiler__Build_info", [("Js_of_ocaml_compiler__Build_info", ("\214\131~\157\189\177\249\149\153_\167U\164\b\0271")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__StringLabels", ("\134F\024\226\216Is#\223\230\234\169Z\206Gc")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Random", ("\020\005Xq\171\026\218\152X\135\254\023\133zK\200")); ("Stdlib__Printf", ("\215<\139]\021\142\224E\245m\198qc(W\229")); ("Stdlib__Printexc", ("\217u\168\235\179oi\167\235\255\025\017%d\192s")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__ListLabels", ("*\194\012\191\020%\170\249m\002\180\178hk\205\220")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Fun", ("\234t\181\000iQ\251,\b\020$\224\233\160\142\210")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Filename", ("z\163\210n\195\247\255\129\029SI\180\152\141h ")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Char", ("\1794\1468\190\138\150g\231\240\140d\191.\212e")); ("Stdlib__BytesLabels", ("\145\128\000\239\186Z.\0310^\247\201\174\\\137R")); ("Stdlib__Bytes", ("C\134\194)\175\222\137p\205\246\244\r\241\164P\209")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__ArrayLabels", ("\029\143d\025\218v\003\007\212jC\235/\205\006\198")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Js_of_ocaml_compiler__Stdlib", ("\162;P\232\137\003\012\252\217E\227\201\001\204\163j")); ("Js_of_ocaml_compiler", ("\140\150\022\231\129$!^\139\156\170\236r\184~q")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val configure : t -> unit
