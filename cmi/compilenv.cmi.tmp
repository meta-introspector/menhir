val imported_sets_of_closures_table :
  Simple_value_approx.function_declarations option Set_of_closures_id.Tbl.t
val reset : ?packname:string -> string -> unit
val unit_id_from_name : string -> Ident.t
val current_unit_infos : unit -> Cmx_format.unit_infos
val current_unit_name : unit -> string
val current_unit_linkage_name : unit -> Linkage_name.t
val current_unit : unit -> Compilation_unit.t
val current_unit_symbol : unit -> Symbol.t
val make_symbol : ?unitname:string -> string option -> string
val symbol_in_current_unit : string -> bool
val is_predefined_exception : Symbol.t -> bool
val unit_for_global : Ident.t -> Compilation_unit.t
val symbol_for_global : Ident.t -> string
val symbol_for_global' : Ident.t -> Symbol.t
val global_approx : Ident.t -> Clambda.value_approximation
val set_global_approx : Clambda.value_approximation -> unit
val record_global_approx_toplevel : unit -> unit
val set_export_info : Export_info.t -> unit
val approx_env : unit -> Export_info.t
val approx_for_global : Compilation_unit.t -> Export_info.t option
val need_curry_fun : int -> unit
val need_apply_fun : int -> unit
val need_send_fun : int -> unit
val new_const_symbol : unit -> string
val closure_symbol : Closure_id.t -> Symbol.t
val function_label : Closure_id.t -> string
val new_structured_constant :
  Clambda.ustructured_constant -> shared:bool -> string
val structured_constants : unit -> Clambda.preallocated_constant list
val clear_structured_constants : unit -> unit
val structured_constant_of_symbol :
  string -> Clambda.ustructured_constant option
val add_exported_constant : string -> unit
type structured_constants
val snapshot : unit -> structured_constants
val backtrack : structured_constants -> unit
val read_unit_info : string -> Cmx_format.unit_infos * Digest.t
val write_unit_info : Cmx_format.unit_infos -> string -> unit
val save_unit_info : string -> unit
val cache_unit_info : Cmx_format.unit_infos -> unit
val require_global : Ident.t -> unit
val read_library_info : string -> Cmx_format.library_infos
type error =
    Not_a_unit_info of string
  | Corrupted_unit_info of string
  | Illegal_renaming of string * string * string
  | Mismatching_for_pack of string * string * string * string option
exception Error of error("DEBUG:rule", [(("imported_sets_of_closures_table", 973), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Set_of_closures_id")), "Tbl"), "t"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Simple_value_approx")), "function_declarations"), 0, (0)), 100000000, 0, -150)], (0)), 100000000, 0, -149)], (0)), 100000000, 0, -148), 0, (("middle_end/compilenv.mli", 28, 1596, 1596), ("middle_end/compilenv.mli", 29, 1632, 1709), 0), 0, Tag1 ("Compilenv", 0)), 0); (("reset", 974), ((Tag1 (Tag1 ("packname"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -147)], (0)), 100000000, 0, -146), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -145), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -144), 0), 100000000, 0, -143), 0), 100000000, 0, -142), 0, (("middle_end/compilenv.mli", 32, 1738, 1738), ("middle_end/compilenv.mli", 32, 1738, 1783), 0), 0, Tag1 ("Compilenv", 1)), 0); (("unit_id_from_name", 975), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -141), (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -140), 0), 100000000, 0, -139), 0, (("middle_end/compilenv.mli", 36, 1928, 1928), ("middle_end/compilenv.mli", 36, 1928, 1968), 0), 0, Tag1 ("Compilenv", 2)), 0); (("current_unit_infos", 976), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -138), (Tag3 (Tag1 ((Tag2 ("Cmx_format")), "unit_infos"), 0, (0)), 100000000, 0, -137), 0), 100000000, 0, -136), 0, (("middle_end/compilenv.mli", 39, 1997, 1997), ("middle_end/compilenv.mli", 39, 1997, 2039), 0), 0, Tag1 ("Compilenv", 3)), 0); (("current_unit_name", 977), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -135), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -134), 0), 100000000, 0, -133), 0, (("middle_end/compilenv.mli", 42, 2100, 2100), ("middle_end/compilenv.mli", 42, 2100, 2137), 0), 0, Tag1 ("Compilenv", 4)), 0); (("current_unit_linkage_name", 978), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -132), (Tag3 (Tag1 ((Tag2 ("Linkage_name")), "t"), 0, (0)), 100000000, 0, -131), 0), 100000000, 0, -130), 0, (("middle_end/compilenv.mli", 46, 2220, 2220), ("middle_end/compilenv.mli", 46, 2220, 2273), 0), 0, Tag1 ("Compilenv", 5)), 0); (("current_unit", 979), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -129), (Tag3 (Tag1 ((Tag2 ("Compilation_unit")), "t"), 0, (0)), 100000000, 0, -128), 0), 100000000, 0, -127), 0, (("middle_end/compilenv.mli", 50, 2365, 2365), ("middle_end/compilenv.mli", 50, 2365, 2409), 0), 0, Tag1 ("Compilenv", 6)), 0); (("current_unit_symbol", 980), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -126), (Tag3 (Tag1 ((Tag2 ("Symbol")), "t"), 0, (0)), 100000000, 0, -125), 0), 100000000, 0, -124), 0, (("middle_end/compilenv.mli", 53, 2438, 2438), ("middle_end/compilenv.mli", 53, 2438, 2479), 0), 0, Tag1 ("Compilenv", 7)), 0); (("make_symbol", 981), ((Tag1 (Tag1 ("unitname"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -123)], (0)), 100000000, 0, -122), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -121)], (0)), 100000000, 0, -120), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -119), 0), 100000000, 0, -118), 0), 100000000, 0, -117), 0, (("middle_end/compilenv.mli", 56, 2508, 2508), ("middle_end/compilenv.mli", 56, 2508, 2568), 0), 0, Tag1 ("Compilenv", 8)), 0); (("symbol_in_current_unit", 982), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -116), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -115), 0), 100000000, 0, -114), 0, (("middle_end/compilenv.mli", 63, 2898, 2898), ("middle_end/compilenv.mli", 63, 2898, 2940), 0), 0, Tag1 ("Compilenv", 9)), 0); (("is_predefined_exception", 983), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Symbol")), "t"), 0, (0)), 100000000, 0, -113), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -112), 0), 100000000, 0, -111), 0, (("middle_end/compilenv.mli", 67, 3061, 3061), ("middle_end/compilenv.mli", 67, 3061, 3106), 0), 0, Tag1 ("Compilenv", 10)), 0); (("unit_for_global", 984), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -110), (Tag3 (Tag1 ((Tag2 ("Compilation_unit")), "t"), 0, (0)), 100000000, 0, -109), 0), 100000000, 0, -108), 0, (("middle_end/compilenv.mli", 70, 3135, 3135), ("middle_end/compilenv.mli", 70, 3135, 3185), 0), 0, Tag1 ("Compilenv", 11)), 0); (("symbol_for_global", 985), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -107), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -106), 0), 100000000, 0, -105), 0, (("middle_end/compilenv.mli", 73, 3214, 3214), ("middle_end/compilenv.mli", 73, 3214, 3254), 0), 0, Tag1 ("Compilenv", 12)), 0); (("symbol_for_global'", 986), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -104), (Tag3 (Tag1 ((Tag2 ("Symbol")), "t"), 0, (0)), 100000000, 0, -103), 0), 100000000, 0, -102), 0, (("middle_end/compilenv.mli", 76, 3358, 3358), ("middle_end/compilenv.mli", 76, 3358, 3401), 0), 0, Tag1 ("Compilenv", 13)), 0); (("global_approx", 987), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -101), (Tag3 (Tag1 ((Tag2 ("Clambda")), "value_approximation"), 0, (0)), 100000000, 0, -100), 0), 100000000, 0, -99), 0, (("middle_end/compilenv.mli", 78, 3429, 3429), ("middle_end/compilenv.mli", 78, 3429, 3486), 0), 0, Tag1 ("Compilenv", 18)), 0); (("set_global_approx", 988), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Clambda")), "value_approximation"), 0, (0)), 100000000, 0, -98), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -97), 0), 100000000, 0, -96), 0, (("middle_end/compilenv.mli", 81, 3582, 3582), ("middle_end/compilenv.mli", 81, 3582, 3640), 0), 0, Tag1 ("Compilenv", 19)), 0); (("record_global_approx_toplevel", 989), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -95), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -94), 0), 100000000, 0, -93), 0, (("middle_end/compilenv.mli", 84, 3731, 3731), ("middle_end/compilenv.mli", 84, 3731, 3778), 0), 0, Tag1 ("Compilenv", 20)), 0); (("set_export_info", 990), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Export_info")), "t"), 0, (0)), 100000000, 0, -92), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -91), 0), 100000000, 0, -90), 0, (("middle_end/compilenv.mli", 88, 3883, 3883), ("middle_end/compilenv.mli", 88, 3883, 3925), 0), 0, Tag1 ("Compilenv", 21)), 0); (("approx_env", 991), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -89), (Tag3 (Tag1 ((Tag2 ("Export_info")), "t"), 0, (0)), 100000000, 0, -88), 0), 100000000, 0, -87), 0, (("middle_end/compilenv.mli", 91, 4014, 4014), ("middle_end/compilenv.mli", 91, 4014, 4051), 0), 0, Tag1 ("Compilenv", 22)), 0); (("approx_for_global", 992), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Compilation_unit")), "t"), 0, (0)), 100000000, 0, -86), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Export_info")), "t"), 0, (0)), 100000000, 0, -85)], (0)), 100000000, 0, -84), 0), 100000000, 0, -83), 0, (("middle_end/compilenv.mli", 94, 4157, 4157), ("middle_end/compilenv.mli", 94, 4157, 4222), 0), 0, Tag1 ("Compilenv", 23)), 0); (("need_curry_fun", 993), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -82), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0, (("middle_end/compilenv.mli", 98, 4324, 4324), ("middle_end/compilenv.mli", 98, 4324, 4355), 0), 0, Tag1 ("Compilenv", 24)), 0); (("need_apply_fun", 994), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -79), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -78), 0), 100000000, 0, -77), 0, (("middle_end/compilenv.mli", 99, 4356, 4356), ("middle_end/compilenv.mli", 99, 4356, 4387), 0), 0, Tag1 ("Compilenv", 25)), 0); (("need_send_fun", 995), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -76), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), 0, (("middle_end/compilenv.mli", 100, 4388, 4388), ("middle_end/compilenv.mli", 100, 4388, 4418), 0), 0, Tag1 ("Compilenv", 26)), 0); (("new_const_symbol", 996), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -73), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0, (("middle_end/compilenv.mli", 104, 4542, 4542), ("middle_end/compilenv.mli", 104, 4542, 4579), 0), 0, Tag1 ("Compilenv", 27)), 0); (("closure_symbol", 997), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Closure_id")), "t"), 0, (0)), 100000000, 0, -70), (Tag3 (Tag1 ((Tag2 ("Symbol")), "t"), 0, (0)), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("middle_end/compilenv.mli", 105, 4580, 4580), ("middle_end/compilenv.mli", 105, 4580, 4625), 0), 0, Tag1 ("Compilenv", 28)), 0); (("function_label", 998), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Closure_id")), "t"), 0, (0)), 100000000, 0, -67), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("middle_end/compilenv.mli", 109, 4745, 4745), ("middle_end/compilenv.mli", 109, 4745, 4788), 0), 0, Tag1 ("Compilenv", 29)), 0); (("new_structured_constant", 999), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Clambda")), "ustructured_constant"), 0, (0)), 100000000, 0, -64), (Tag1 (("shared"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -63), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("middle_end/compilenv.mli", 113, 4867, 4867), ("middle_end/compilenv.mli", 116, 5008, 5016), 0), 0, Tag1 ("Compilenv", 30)), 0); (("structured_constants", 1000), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -59), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Clambda")), "preallocated_constant"), 0, (0)), 100000000, 0, -58)], (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("middle_end/compilenv.mli", 117, 5017, 5017), ("middle_end/compilenv.mli", 118, 5043, 5087), 0), 0, Tag1 ("Compilenv", 31)), 0); (("clear_structured_constants", 1001), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -55), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("middle_end/compilenv.mli", 119, 5088, 5088), ("middle_end/compilenv.mli", 119, 5088, 5132), 0), 0, Tag1 ("Compilenv", 32)), 0); (("structured_constant_of_symbol", 1002), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -52), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Clambda")), "ustructured_constant"), 0, (0)), 100000000, 0, -51)], (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0, (("middle_end/compilenv.mli", 121, 5134, 5134), ("middle_end/compilenv.mli", 122, 5169, 5216), 0), 0, Tag1 ("Compilenv", 33)), 0); (("add_exported_constant", 1003), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -48), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("middle_end/compilenv.mli", 124, 5218, 5218), ("middle_end/compilenv.mli", 124, 5218, 5259), 0), 0, Tag1 ("Compilenv", 34)), 0); Tag1 (("structured_constants", 1004), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("middle_end/compilenv.mli", 126, 5287, 5287), ("middle_end/compilenv.mli", 126, 5287, 5312), 0), 0, 0, 0, Tag1 ("Compilenv", 35)), 1, 0); (("snapshot", 1005), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -45), (Tag3 ((("structured_constants", 1004)), 0, (0)), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("middle_end/compilenv.mli", 128, 5340, 5340), ("middle_end/compilenv.mli", 128, 5340, 5382), 0), 0, Tag1 ("Compilenv", 36)), 0); (("backtrack", 1006), ((Tag1 (0, (Tag3 ((("structured_constants", 1004)), 0, (0)), 100000000, 0, -42), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("middle_end/compilenv.mli", 130, 5410, 5410), ("middle_end/compilenv.mli", 130, 5410, 5453), 0), 0, Tag1 ("Compilenv", 37)), 0); (("read_unit_info", 1007), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -39), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Cmx_format")), "unit_infos"), 0, (0)), 100000000, 0, -37); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Digest"), "t"), 0, (0)), 100000000, 0, -38)]), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("middle_end/compilenv.mli", 133, 5482, 5482), ("middle_end/compilenv.mli", 133, 5482, 5533), 0), 0, Tag1 ("Compilenv", 38)), 0); (("write_unit_info", 1008), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Cmx_format")), "unit_infos"), 0, (0)), 100000000, 0, -34), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -33), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("middle_end/compilenv.mli", 135, 5587, 5587), ("middle_end/compilenv.mli", 135, 5587, 5636), 0), 0, Tag1 ("Compilenv", 39)), 0); (("save_unit_info", 1009), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -29), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("middle_end/compilenv.mli", 137, 5690, 5690), ("middle_end/compilenv.mli", 137, 5690, 5724), 0), 0, Tag1 ("Compilenv", 40)), 0); (("cache_unit_info", 1010), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Cmx_format")), "unit_infos"), 0, (0)), 100000000, 0, -26), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("middle_end/compilenv.mli", 139, 5793, 5793), ("middle_end/compilenv.mli", 139, 5793, 5832), 0), 0, Tag1 ("Compilenv", 41)), 0); (("require_global", 1011), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -23), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("middle_end/compilenv.mli", 144, 6024, 6024), ("middle_end/compilenv.mli", 144, 6024, 6059), 0), 0, Tag1 ("Compilenv", 42)), 0); (("read_library_info", 1012), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -20), (Tag3 (Tag1 ((Tag2 ("Cmx_format")), "library_infos"), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("middle_end/compilenv.mli", 148, 6167, 6167), ("middle_end/compilenv.mli", 148, 6167, 6213), 0), 0, Tag1 ("Compilenv", 43)), 0); Tag1 (("error", 1013), (0, 0, Tag1 ([(("Not_a_unit_info", 611), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8)]), 0, (("middle_end/compilenv.mli", 151, 6228, 6232), ("middle_end/compilenv.mli", 151, 6228, 6257), 0), 0, Tag1 ("Compilenv", 45)); (("Corrupted_unit_info", 612), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9)]), 0, (("middle_end/compilenv.mli", 152, 6258, 6260), ("middle_end/compilenv.mli", 152, 6258, 6291), 0), 0, Tag1 ("Compilenv", 46)); (("Illegal_renaming", 613), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -12)]), 0, (("middle_end/compilenv.mli", 153, 6292, 6294), ("middle_end/compilenv.mli", 153, 6292, 6340), 0), 0, Tag1 ("Compilenv", 47)); (("Mismatching_for_pack", 614), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -13); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -14); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -15); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -17)], (0)), 100000000, 0, -16)]), 0, (("middle_end/compilenv.mli", 154, 6341, 6343), ("middle_end/compilenv.mli", 154, 6341, 6409), 0), 0, Tag1 ("Compilenv", 48))], 0), 1, 0, 0, 0, 0, 0, (("middle_end/compilenv.mli", 150, 6215, 6215), ("middle_end/compilenv.mli", 154, 6341, 6409), 0), 0, 0, 0, Tag1 ("Compilenv", 44)), 1, 0); Tag2 (("Error", 1014), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((("error", 1013)), 0, (0)), 100000000, 0, -7)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Compilenv", 49)), 2, 0); (("report_error", 1015), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((("error", 1013)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("middle_end/compilenv.mli", 158, 6437, 6437), ("middle_end/compilenv.mli", 158, 6437, 6488), 0), 0, Tag1 ("Compilenv", 50)), 0)], "Compilenv", [("Compilenv", ("\191\183\1491o\b/\131\243r\129\132\012\150,\174")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Variable", ("\228'\154\1834\146\207\147+\193Aq\209h\190\220")); ("Var_within_closure", ("vQ\173\251u\026\012+}j\020C}T\151\220")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Tag", ("\252\157\132\005\195\228\232\133\246\237\233\224\012\143\192\218")); ("Symbol", ("\179q\177\031_\169\139a\192\019\188\000V\236\232\t")); ("Subst", ("\021\031\148\223\127\186\189\135\027}\145r\216\143\177\156")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Static_exception", ("2{#\175\226\185\147\146\176\140\029O\023p\024\\")); ("Simple_value_approx", ("\019\b\\\255\223\2510j\n?G\183\243\154v\213")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Set_of_closures_origin", ("$n\234\014\162\130\210K\171\btrA\244\254\195")); ("Set_of_closures_id", ("\178\228\011\028\027~\211\166\244\180\220-W\145_\243")); ("Projection", ("\250\207\030\021*\193\225\168\189!\224\228\192\212\236\224")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Parameter", ("*\152\238G\163\217\2377/\t\206\131\226\216K0")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Numbers", ("\004\020\227\212|\031Q6\146\217\211\156\221\234\254\195")); ("Mutable_variable", ("B^*^9`\212\152j\145_\017i.\128?")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Load_path", ("\012@\228l\230\164S\172h\1726X\020\252o}")); ("Linkage_name", ("\023\000\172\166 s\214\ns\155s\156\005\252\154\207")); ("Lambda", ("\180\1419\236'\146K$\128\006\135q\135V\029\180")); ("Internal_variable_names", ("\024|\208(\224\206\012\006\179\203\020\000\179\228\154\218")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("Freshening", ("@\017\191q\232\253\236\139\131\160Z\000b\223\184\228")); ("Flambda", ("\195J|\022>U\206!\211\212\185N\180zh\241")); ("Export_info", ("\133\169\200\137y\208\165\171Z1\181\188]\192\245n")); ("Export_id", ("\017\209\152\144X\251!\178\238\152t\173\191Kl\232")); ("Env", ("\021\n\181\142x\b\169j\227\"\017\248*\178\245\223")); ("Debuginfo", ("\131\251\175\217P\194M\163\022\151\002\005\006\185:\185")); ("Compilation_unit", ("\007\240\020\003jK\000\210\174\021\189.8^\028K")); ("Cmx_format", ("\198\138\145rP5\159\251|3\019\202\162\027GO")); ("Cmi_format", ("6\177\bU\139\"\023\152=\249\135\174\b\011Cg")); ("Closure_origin", ("G\222\200`\213\247\022M|O\1488\194\030\187\229")); ("Closure_id", ("k\221yCH\015\186G\246]\003\233\198\179\217A")); ("Closure_element", ("a\194\018\239D1\143{\156A\011\219H#\149A")); ("Clambda_primitives", ("\199\176\237Hv\205\152\14717\179\017\246\221x`")); ("Clambda", ("L\229\134\243-\191\006\t%\029\245\180\199\252#\214")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc")); ("Backend_var", ("\182\144C\215j:\241\151\214\131?\204\253\002\029\151")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216")); ("Allocated_const", ("\029\027.W\160\170!\199Q2\235\240\167\031,\004"))], [(0)])

val report_error : Format.formatter -> error -> unit
