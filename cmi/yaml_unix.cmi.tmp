val of_file : Fpath.t -> (Yaml.value, [ `Msg of string ]) result
val of_file_exn : Fpath.t -> Yaml.value
val to_file : Fpath.t -> Yaml.value -> (unit, [ `Msg of string ]) result
("DEBUG:rule", [(("of_file", 349), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -25), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 (Tag1 ((Tag2 ("Yaml")), "value"), 0, (0)), 100000000, 0, -21); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -24))))], (0, 100000000, 0, -23), 1, 0, 0)), 100000000, 0, -22)], (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("unix/yaml_unix.mli", 17, 842, 842), ("unix/yaml_unix.mli", 17, 842, 906), 0), 0, Tag1 ("Yaml_unix", 0)), 0); (("of_file_exn", 350), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -18), (Tag3 (Tag1 ((Tag2 ("Yaml")), "value"), 0, (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("unix/yaml_unix.mli", 21, 1010, 1010), ("unix/yaml_unix.mli", 21, 1010, 1049), 0), 0, Tag1 ("Yaml_unix", 1)), 0); (("to_file", 351), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -15), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Yaml")), "value"), 0, (0)), 100000000, 0, -14), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -10); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -13))))], (0, 100000000, 0, -12), 1, 0, 0)), 100000000, 0, -11)], (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("unix/yaml_unix.mli", 25, 1178, 1178), ("unix/yaml_unix.mli", 25, 1178, 1250), 0), 0, Tag1 ("Yaml_unix", 2)), 0); (("to_file_exn", 352), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Yaml")), "value"), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("unix/yaml_unix.mli", 29, 1359, 1359), ("unix/yaml_unix.mli", 29, 1359, 1406), 0), 0, Tag1 ("Yaml_unix", 3)), 0)], "Yaml_unix", [("Yaml_unix", ("\000\002+\176\172\234\193\245\244\195\177o\231\210n!")); ("Yaml__", ("\130Q`\192\016\187{\245\167\022l\024\219\213\023\215")); ("Yaml", ("\184]\222\235N_\137\133\221\2330-\174\167\245\159")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Fpath", ("\2346<\134L)\153\241\011\020 \177\220P\180\250")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val to_file_exn : Fpath.t -> Yaml.value -> unit
