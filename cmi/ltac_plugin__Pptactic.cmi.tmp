type 'a grammar_tactic_prod_item_expr =
    TacTerm of string
  | TacNonTerm of ('a * Names.Id.t option) Loc.located
type 'a raw_extra_genarg_printer =
    Environ.env ->
    Evd.evar_map ->
    (Environ.env -> Evd.evar_map -> Constrexpr.constr_expr -> Pp.t) ->
    (Environ.env -> Evd.evar_map -> Constrexpr.constr_expr -> Pp.t) ->
    (Environ.env ->
     Evd.evar_map ->
     Constrexpr.entry_relative_level ->
     Ltac_plugin.Tacexpr.raw_tactic_expr -> Pp.t) ->
    'a -> Pp.t
type 'a glob_extra_genarg_printer =
    Environ.env ->
    Evd.evar_map ->
    (Environ.env -> Evd.evar_map -> Genintern.glob_constr_and_expr -> Pp.t) ->
    (Environ.env -> Evd.evar_map -> Genintern.glob_constr_and_expr -> Pp.t) ->
    (Environ.env ->
     Evd.evar_map ->
     Constrexpr.entry_relative_level ->
     Ltac_plugin.Tacexpr.glob_tactic_expr -> Pp.t) ->
    'a -> Pp.t
type 'a extra_genarg_printer =
    Environ.env ->
    Evd.evar_map ->
    (Environ.env -> Evd.evar_map -> EConstr.constr -> Pp.t) ->
    (Environ.env -> Evd.evar_map -> EConstr.constr -> Pp.t) ->
    (Environ.env ->
     Evd.evar_map ->
     Constrexpr.entry_relative_level -> Geninterp.Val.t -> Pp.t) ->
    'a -> Pp.t
type 'a raw_extra_genarg_printer_with_level =
    Environ.env ->
    Evd.evar_map ->
    (Environ.env -> Evd.evar_map -> Constrexpr.constr_expr -> Pp.t) ->
    (Environ.env -> Evd.evar_map -> Constrexpr.constr_expr -> Pp.t) ->
    (Environ.env ->
     Evd.evar_map ->
     Constrexpr.entry_relative_level ->
     Ltac_plugin.Tacexpr.raw_tactic_expr -> Pp.t) ->
    Constrexpr.entry_relative_level -> 'a -> Pp.t
type 'a glob_extra_genarg_printer_with_level =
    Environ.env ->
    Evd.evar_map ->
    (Environ.env -> Evd.evar_map -> Genintern.glob_constr_and_expr -> Pp.t) ->
    (Environ.env -> Evd.evar_map -> Genintern.glob_constr_and_expr -> Pp.t) ->
    (Environ.env ->
     Evd.evar_map ->
     Constrexpr.entry_relative_level ->
     Ltac_plugin.Tacexpr.glob_tactic_expr -> Pp.t) ->
    Constrexpr.entry_relative_level -> 'a -> Pp.t
type 'a extra_genarg_printer_with_level =
    Environ.env ->
    Evd.evar_map ->
    (Environ.env -> Evd.evar_map -> EConstr.constr -> Pp.t) ->
    (Environ.env -> Evd.evar_map -> EConstr.constr -> Pp.t) ->
    (Environ.env ->
     Evd.evar_map ->
     Constrexpr.entry_relative_level -> Geninterp.Val.t -> Pp.t) ->
    Constrexpr.entry_relative_level -> 'a -> Pp.t
val declare_extra_genarg_pprule :
  ('a, 'b, 'c) Genarg.genarg_type ->
  'a raw_extra_genarg_printer ->
  'b glob_extra_genarg_printer -> 'c extra_genarg_printer -> unit
val declare_extra_genarg_pprule_with_level :
  ('a, 'b, 'c) Genarg.genarg_type ->
  'a raw_extra_genarg_printer_with_level ->
  'b glob_extra_genarg_printer_with_level ->
  'c extra_genarg_printer_with_level ->
  Constrexpr.entry_relative_level -> Constrexpr.entry_relative_level -> unit
val declare_extra_vernac_genarg_pprule :
  ('a, 'b, 'c) Genarg.genarg_type -> 'a raw_extra_genarg_printer -> unit
type grammar_terminals =
    Genarg.ArgT.any Extend.user_symbol grammar_tactic_prod_item_expr list
type pp_tactic = { pptac_level : int; pptac_prods : grammar_terminals; }
val pr_goal_selector : toplevel:bool -> Goal_select.t -> Pp.t
val declare_notation_tactic_pprule : Names.KerName.t -> pp_tactic -> unit
val pr_with_occurrences : ('a -> Pp.t) -> 'a Locus.with_occurrences -> Pp.t
val pr_red_expr :
  Environ.env ->
  Evd.evar_map ->
  (Environ.env -> Evd.evar_map -> 'a -> Pp.t) *
  (Environ.env -> Evd.evar_map -> 'a -> Pp.t) * ('b -> Pp.t) *
  (Environ.env -> Evd.evar_map -> 'c -> Pp.t) ->
  ('a, 'b, 'c) Genredexpr.red_expr_gen -> Pp.t
val pr_may_eval :
  Environ.env ->
  Evd.evar_map ->
  (Environ.env -> Evd.evar_map -> 'a -> Pp.t) ->
  (Environ.env -> Evd.evar_map -> 'a -> Pp.t) ->
  ('b -> Pp.t) ->
  (Environ.env -> Evd.evar_map -> 'c -> Pp.t) ->
  ('a, 'b, 'c) Genredexpr.may_eval -> Pp.t
val pr_and_short_name : ('a -> Pp.t) -> 'a Genredexpr.and_short_name -> Pp.t
val pr_evaluable_reference_env :
  Environ.env -> Tacred.evaluable_global_reference -> Pp.t
val pr_quantified_hypothesis : Tactypes.quantified_hypothesis -> Pp.t
val pr_in_clause : ('a -> Pp.t) -> 'a Locus.clause_expr -> Pp.t
val pr_clauses : bool option -> ('a -> Pp.t) -> 'a Locus.clause_expr -> Pp.t
val pr_raw_generic :
  Environ.env ->
  Evd.evar_map -> Genarg.rlevel Genarg.generic_argument -> Pp.t
val pr_glb_generic :
  Environ.env ->
  Evd.evar_map -> Genarg.glevel Genarg.generic_argument -> Pp.t
val pr_raw_extend :
  Environ.env ->
  Evd.evar_map ->
  int ->
  Ltac_plugin.Tacexpr.ml_tactic_entry ->
  Ltac_plugin.Tacexpr.raw_tactic_arg list -> Pp.t
val pr_glob_extend :
  Environ.env ->
  int ->
  Ltac_plugin.Tacexpr.ml_tactic_entry ->
  Ltac_plugin.Tacexpr.glob_tactic_arg list -> Pp.t
val pr_extend :
  (Geninterp.Val.t -> Pp.t) ->
  int -> Ltac_plugin.Tacexpr.ml_tactic_entry -> Geninterp.Val.t list -> Pp.t
val pr_alias_key : Names.KerName.t -> Pp.t
val pr_alias :
  (Geninterp.Val.t -> Pp.t) ->
  int -> Names.KerName.t -> Geninterp.Val.t list -> Pp.t
val pr_ltac_constant : Ltac_plugin.Tacexpr.ltac_constant -> Pp.t
val pr_raw_tactic :
  Environ.env -> Evd.evar_map -> Ltac_plugin.Tacexpr.raw_tactic_expr -> Pp.t
val pr_raw_tactic_level :
  Environ.env ->
  Evd.evar_map ->
  Constrexpr.entry_relative_level ->
  Ltac_plugin.Tacexpr.raw_tactic_expr -> Pp.t
val pr_glob_tactic :
  Environ.env -> Ltac_plugin.Tacexpr.glob_tactic_expr -> Pp.t
val pr_atomic_tactic :
  Environ.env ->
  Evd.evar_map -> Ltac_plugin.Tacexpr.atomic_tactic_expr -> Pp.t
val pr_hintbases : string list option -> Pp.t
val pr_auto_using : ('constr -> Pp.t) -> 'constr list -> Pp.t
val pr_match_pattern :
  ('a -> Pp.t) -> 'a Ltac_plugin.Tacexpr.match_pattern -> Pp.t
val pr_match_rule :
  bool ->
  ('a -> Pp.t) ->
  ('b -> Pp.t) -> ('b, 'a) Ltac_plugin.Tacexpr.match_rule -> Pp.t
val pr_value : Constrexpr.entry_relative_level -> Geninterp.Val.t -> Pp.t
val ltop : Constrexpr.entry_relative_level
val make_constr_printer :
  (Environ.env ->
   Evd.evar_map -> Constrexpr.entry_relative_level -> 'a -> Pp.t) ->
  'a Genprint.top_printer("DEBUG:rule", [Tag1 (("grammar_tactic_prod_item_expr", 1498), ([((("a")), 100000000, 0, -516)], 1, Tag1 ([(("TacTerm", 711), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -513)]), 0, (("plugins/ltac/pptactic.mli", 24, 934, 934), ("plugins/ltac/pptactic.mli", 24, 934, 953), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 1)); (("TacNonTerm", 712), ([(Tag3 (Tag1 ((Tag2 ("Loc")), "located"), [(Tag2 ([((("a")), 100000000, 0, -516); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -518)], (0)), 100000000, 0, -517)]), 100000000, 0, -515)], (0)), 100000000, 0, -514)]), 0, (("plugins/ltac/pptactic.mli", 25, 954, 954), ("plugins/ltac/pptactic.mli", 25, 954, 1006), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 3))], 0), 1, 0, [25], [0], 0, 0, (("plugins/ltac/pptactic.mli", 23, 894, 894), ("plugins/ltac/pptactic.mli", 25, 954, 1006), 0), 0, 0, 0, Tag1 ("Ltac_plugin__Pptactic", 0)), 1, 0); Tag1 (("raw_extra_genarg_printer", 1499), ([((("a")), 100000000, 0, -487)], 1, 0, 1, ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -512), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -511), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -510), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -509), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "constr_expr"), 0, (0)), 100000000, 0, -508), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -507), 0), 100000000, 0, -506), 0), 100000000, 0, -505), 0), 100000000, 0, -504), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -503), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -502), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "constr_expr"), 0, (0)), 100000000, 0, -501), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -500), 0), 100000000, 0, -499), 0), 100000000, 0, -498), 0), 100000000, 0, -497), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -496), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -495), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "entry_relative_level"), 0, (0)), 100000000, 0, -494), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Tacexpr"), "raw_tactic_expr"), 0, (0)), 100000000, 0, -493), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -492), 0), 100000000, 0, -491), 0), 100000000, 0, -490), 0), 100000000, 0, -489), 0), 100000000, 0, -488), (Tag1 (0, ((("a")), 100000000, 0, -487), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -486), 0), 100000000, 0, -485), 0), 100000000, 0, -484), 0), 100000000, 0, -483), 0), 100000000, 0, -482), 0), 100000000, 0, -481), 0), 100000000, 0, -480)), [46], [0], 0, 0, (("plugins/ltac/pptactic.mli", 27, 1008, 1008), ("plugins/ltac/pptactic.mli", 32, 1278, 1290), 0), 0, 0, 0, Tag1 ("Ltac_plugin__Pptactic", 4)), 1, 0); Tag1 (("glob_extra_genarg_printer", 1500), ([((("a")), 100000000, 0, -454)], 1, 0, 1, ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -479), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -478), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -477), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -476), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Genintern")), "glob_constr_and_expr"), 0, (0)), 100000000, 0, -475), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -474), 0), 100000000, 0, -473), 0), 100000000, 0, -472), 0), 100000000, 0, -471), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -470), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -469), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Genintern")), "glob_constr_and_expr"), 0, (0)), 100000000, 0, -468), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -467), 0), 100000000, 0, -466), 0), 100000000, 0, -465), 0), 100000000, 0, -464), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -463), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -462), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "entry_relative_level"), 0, (0)), 100000000, 0, -461), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Tacexpr"), "glob_tactic_expr"), 0, (0)), 100000000, 0, -460), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -459), 0), 100000000, 0, -458), 0), 100000000, 0, -457), 0), 100000000, 0, -456), 0), 100000000, 0, -455), (Tag1 (0, ((("a")), 100000000, 0, -454), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -453), 0), 100000000, 0, -452), 0), 100000000, 0, -451), 0), 100000000, 0, -450), 0), 100000000, 0, -449), 0), 100000000, 0, -448), 0), 100000000, 0, -447)), [46], [0], 0, 0, (("plugins/ltac/pptactic.mli", 34, 1292, 1292), ("plugins/ltac/pptactic.mli", 39, 1582, 1594), 0), 0, 0, 0, Tag1 ("Ltac_plugin__Pptactic", 5)), 1, 0); Tag1 (("extra_genarg_printer", 1501), ([((("a")), 100000000, 0, -421)], 1, 0, 1, ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -446), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -445), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -444), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -443), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -442), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -441), 0), 100000000, 0, -440), 0), 100000000, 0, -439), 0), 100000000, 0, -438), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -437), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -436), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -435), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -434), 0), 100000000, 0, -433), 0), 100000000, 0, -432), 0), 100000000, 0, -431), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -430), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -429), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "entry_relative_level"), 0, (0)), 100000000, 0, -428), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Geninterp")), "Val"), "t"), 0, (0)), 100000000, 0, -427), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -426), 0), 100000000, 0, -425), 0), 100000000, 0, -424), 0), 100000000, 0, -423), 0), 100000000, 0, -422), (Tag1 (0, ((("a")), 100000000, 0, -421), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -420), 0), 100000000, 0, -419), 0), 100000000, 0, -418), 0), 100000000, 0, -417), 0), 100000000, 0, -416), 0), 100000000, 0, -415), 0), 100000000, 0, -414)), [46], [0], 0, 0, (("plugins/ltac/pptactic.mli", 41, 1596, 1596), ("plugins/ltac/pptactic.mli", 46, 1858, 1870), 0), 0, 0, 0, Tag1 ("Ltac_plugin__Pptactic", 7)), 1, 0); Tag1 (("raw_extra_genarg_printer_with_level", 1502), ([((("a")), 100000000, 0, -387)], 1, 0, 1, ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -413), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -412), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -411), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -410), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "constr_expr"), 0, (0)), 100000000, 0, -409), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -408), 0), 100000000, 0, -407), 0), 100000000, 0, -406), 0), 100000000, 0, -405), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -404), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -403), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "constr_expr"), 0, (0)), 100000000, 0, -402), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -401), 0), 100000000, 0, -400), 0), 100000000, 0, -399), 0), 100000000, 0, -398), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -397), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -396), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "entry_relative_level"), 0, (0)), 100000000, 0, -395), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Tacexpr"), "raw_tactic_expr"), 0, (0)), 100000000, 0, -394), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -393), 0), 100000000, 0, -392), 0), 100000000, 0, -391), 0), 100000000, 0, -390), 0), 100000000, 0, -389), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "entry_relative_level"), 0, (0)), 100000000, 0, -388), (Tag1 (0, ((("a")), 100000000, 0, -387), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -386), 0), 100000000, 0, -385), 0), 100000000, 0, -384), 0), 100000000, 0, -383), 0), 100000000, 0, -382), 0), 100000000, 0, -381), 0), 100000000, 0, -380), 0), 100000000, 0, -379)), [46], [0], 0, 0, (("plugins/ltac/pptactic.mli", 48, 1872, 1872), ("plugins/ltac/pptactic.mli", 53, 2153, 2189), 0), 0, 0, 0, Tag1 ("Ltac_plugin__Pptactic", 8)), 1, 0); Tag1 (("glob_extra_genarg_printer_with_level", 1503), ([((("a")), 100000000, 0, -352)], 1, 0, 1, ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -378), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -377), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -376), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -375), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Genintern")), "glob_constr_and_expr"), 0, (0)), 100000000, 0, -374), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -373), 0), 100000000, 0, -372), 0), 100000000, 0, -371), 0), 100000000, 0, -370), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -369), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -368), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Genintern")), "glob_constr_and_expr"), 0, (0)), 100000000, 0, -367), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -366), 0), 100000000, 0, -365), 0), 100000000, 0, -364), 0), 100000000, 0, -363), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -362), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -361), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "entry_relative_level"), 0, (0)), 100000000, 0, -360), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Tacexpr"), "glob_tactic_expr"), 0, (0)), 100000000, 0, -359), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -358), 0), 100000000, 0, -357), 0), 100000000, 0, -356), 0), 100000000, 0, -355), 0), 100000000, 0, -354), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "entry_relative_level"), 0, (0)), 100000000, 0, -353), (Tag1 (0, ((("a")), 100000000, 0, -352), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -351), 0), 100000000, 0, -350), 0), 100000000, 0, -349), 0), 100000000, 0, -348), 0), 100000000, 0, -347), 0), 100000000, 0, -346), 0), 100000000, 0, -345), 0), 100000000, 0, -344)), [46], [0], 0, 0, (("plugins/ltac/pptactic.mli", 55, 2191, 2191), ("plugins/ltac/pptactic.mli", 60, 2492, 2528), 0), 0, 0, 0, Tag1 ("Ltac_plugin__Pptactic", 9)), 1, 0); Tag1 (("extra_genarg_printer_with_level", 1504), ([((("a")), 100000000, 0, -317)], 1, 0, 1, ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -343), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -342), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -341), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -340), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -339), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -338), 0), 100000000, 0, -337), 0), 100000000, 0, -336), 0), 100000000, 0, -335), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -334), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -333), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -332), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -331), 0), 100000000, 0, -330), 0), 100000000, 0, -329), 0), 100000000, 0, -328), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -327), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -326), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "entry_relative_level"), 0, (0)), 100000000, 0, -325), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Geninterp")), "Val"), "t"), 0, (0)), 100000000, 0, -324), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -323), 0), 100000000, 0, -322), 0), 100000000, 0, -321), 0), 100000000, 0, -320), 0), 100000000, 0, -319), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "entry_relative_level"), 0, (0)), 100000000, 0, -318), (Tag1 (0, ((("a")), 100000000, 0, -317), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -316), 0), 100000000, 0, -315), 0), 100000000, 0, -314), 0), 100000000, 0, -313), 0), 100000000, 0, -312), 0), 100000000, 0, -311), 0), 100000000, 0, -310), 0), 100000000, 0, -309)), [46], [0], 0, 0, (("plugins/ltac/pptactic.mli", 62, 2530, 2530), ("plugins/ltac/pptactic.mli", 67, 2803, 2839), 0), 0, 0, 0, Tag1 ("Ltac_plugin__Pptactic", 10)), 1, 0); (("declare_extra_genarg_pprule", 1505), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Genarg")), "genarg_type"), [((("a")), 100000000, 0, -307); ((("b")), 100000000, 0, -305); ((("c")), 100000000, 0, -303)], (0)), 100000000, 0, -308), (Tag1 (0, (Tag3 ((("raw_extra_genarg_printer", 1499)), [((("a")), 100000000, 0, -307)], (0)), 100000000, 0, -306), (Tag1 (0, (Tag3 ((("glob_extra_genarg_printer", 1500)), [((("b")), 100000000, 0, -305)], (0)), 100000000, 0, -304), (Tag1 (0, (Tag3 ((("extra_genarg_printer", 1501)), [((("c")), 100000000, 0, -303)], (0)), 100000000, 0, -302), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -301), 0), 100000000, 0, -300), 0), 100000000, 0, -299), 0), 100000000, 0, -298), 0), 100000000, 0, -297), 0, (("plugins/ltac/pptactic.mli", 69, 2841, 2841), ("plugins/ltac/pptactic.mli", 73, 2972, 3005), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 11)), 0); (("declare_extra_genarg_pprule_with_level", 1506), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Genarg")), "genarg_type"), [((("a")), 100000000, 0, -295); ((("b")), 100000000, 0, -293); ((("c")), 100000000, 0, -291)], (0)), 100000000, 0, -296), (Tag1 (0, (Tag3 ((("raw_extra_genarg_printer_with_level", 1502)), [((("a")), 100000000, 0, -295)], (0)), 100000000, 0, -294), (Tag1 (0, (Tag3 ((("glob_extra_genarg_printer_with_level", 1503)), [((("b")), 100000000, 0, -293)], (0)), 100000000, 0, -292), (Tag1 (0, (Tag3 ((("extra_genarg_printer_with_level", 1504)), [((("c")), 100000000, 0, -291)], (0)), 100000000, 0, -290), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "entry_relative_level"), 0, (0)), 100000000, 0, -289), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "entry_relative_level"), 0, (0)), 100000000, 0, -288), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -287), 0), 100000000, 0, -286), 0), 100000000, 0, -285), 0), 100000000, 0, -284), 0), 100000000, 0, -283), 0), 100000000, 0, -282), 0), 100000000, 0, -281), 0, (("plugins/ltac/pptactic.mli", 75, 3007, 3007), ("plugins/ltac/pptactic.mli", 80, 3211, 3305), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 12)), 0); (("declare_extra_vernac_genarg_pprule", 1507), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Genarg")), "genarg_type"), [((("a")), 100000000, 0, -277); ((("b")), 100000000, 0, -279); ((("c")), 100000000, 0, -280)], (0)), 100000000, 0, -278), (Tag1 (0, (Tag3 ((("raw_extra_genarg_printer", 1499)), [((("a")), 100000000, 0, -277)], (0)), 100000000, 0, -276), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -275), 0), 100000000, 0, -274), 0), 100000000, 0, -273), 0, (("plugins/ltac/pptactic.mli", 82, 3307, 3307), ("plugins/ltac/pptactic.mli", 84, 3378, 3415), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 13)), 0); Tag1 (("grammar_terminals", 1508), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("grammar_tactic_prod_item_expr", 1498)), [(Tag3 (Tag1 ((Tag2 ("Extend")), "user_symbol"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Genarg")), "ArgT"), "any"), 0, (0)), 100000000, 0, -272)], (0)), 100000000, 0, -271)], (0)), 100000000, 0, -270)], (0)), 100000000, 0, -269)), 0, 0, 0, 0, (("plugins/ltac/pptactic.mli", 86, 3417, 3417), ("plugins/ltac/pptactic.mli", 86, 3417, 3511), 0), 0, 0, 0, Tag1 ("Ltac_plugin__Pptactic", 14)), 1, 0); Tag1 (("pp_tactic", 1509), (0, 0, [[(("pptac_level", 1375), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -267), (("plugins/ltac/pptactic.mli", 89, 3532, 3534), ("plugins/ltac/pptactic.mli", 89, 3532, 3552), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 16)); (("pptac_prods", 1376), 0, (Tag3 ((("grammar_terminals", 1508)), 0, (0)), 100000000, 0, -268), (("plugins/ltac/pptactic.mli", 90, 3553, 3555), ("plugins/ltac/pptactic.mli", 90, 3553, 3587), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 17))]], 1, 0, 0, 0, 0, 0, (("plugins/ltac/pptactic.mli", 88, 3513, 3513), ("plugins/ltac/pptactic.mli", 91, 3588, 3589), 0), 0, 0, 0, Tag1 ("Ltac_plugin__Pptactic", 15)), 1, 0); (("pr_goal_selector", 1510), ((Tag1 (("toplevel"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -266), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Goal_select")), "t"), 0, (0)), 100000000, 0, -265), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -264), 0), 100000000, 0, -263), 0), 100000000, 0, -262), 0, (("plugins/ltac/pptactic.mli", 93, 3591, 3591), ("plugins/ltac/pptactic.mli", 93, 3591, 3652), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 18)), 0); (("declare_notation_tactic_pprule", 1511), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -261), (Tag1 (0, (Tag3 ((("pp_tactic", 1509)), 0, (0)), 100000000, 0, -260), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -259), 0), 100000000, 0, -258), 0), 100000000, 0, -257), 0, (("plugins/ltac/pptactic.mli", 95, 3654, 3654), ("plugins/ltac/pptactic.mli", 95, 3654, 3721), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 19)), 0); (("pr_with_occurrences", 1512), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -254), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -256), 0), 100000000, 0, -255), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Locus")), "with_occurrences"), [((("a")), 100000000, 0, -254)], (0)), 100000000, 0, -253), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -252), 0), 100000000, 0, -251), 0), 100000000, 0, -250), 0, (("plugins/ltac/pptactic.mli", 97, 3723, 3723), ("plugins/ltac/pptactic.mli", 98, 3749, 3800), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 20)), 0); (("pr_red_expr", 1513), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -249), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -248), (Tag1 (0, (Tag2 ([(Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -233), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -232), (Tag1 (0, ((("a")), 100000000, 0, -224), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -231), 0), 100000000, 0, -230), 0), 100000000, 0, -229), 0), 100000000, 0, -228); (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -239), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -238), (Tag1 (0, ((("a")), 100000000, 0, -224), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -237), 0), 100000000, 0, -236), 0), 100000000, 0, -235), 0), 100000000, 0, -234); (Tag1 (0, ((("b")), 100000000, 0, -225), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -241), 0), 100000000, 0, -240); (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -247), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -246), (Tag1 (0, ((("c")), 100000000, 0, -226), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -245), 0), 100000000, 0, -244), 0), 100000000, 0, -243), 0), 100000000, 0, -242)]), 100000000, 0, -227), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Genredexpr")), "red_expr_gen"), [((("a")), 100000000, 0, -224); ((("b")), 100000000, 0, -225); ((("c")), 100000000, 0, -226)], (0)), 100000000, 0, -223), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -222), 0), 100000000, 0, -221), 0), 100000000, 0, -220), 0), 100000000, 0, -219), 0), 100000000, 0, -218), 0, (("plugins/ltac/pptactic.mli", 99, 3801, 3801), ("plugins/ltac/pptactic.mli", 101, 3974, 4018), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 21)), 0); (("pr_may_eval", 1514), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -217), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -216), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -215), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -214), (Tag1 (0, ((("a")), 100000000, 0, -193), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -213), 0), 100000000, 0, -212), 0), 100000000, 0, -211), 0), 100000000, 0, -210), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -209), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -208), (Tag1 (0, ((("a")), 100000000, 0, -193), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -207), 0), 100000000, 0, -206), 0), 100000000, 0, -205), 0), 100000000, 0, -204), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -194), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -203), 0), 100000000, 0, -202), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -201), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -200), (Tag1 (0, ((("c")), 100000000, 0, -195), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -199), 0), 100000000, 0, -198), 0), 100000000, 0, -197), 0), 100000000, 0, -196), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Genredexpr")), "may_eval"), [((("a")), 100000000, 0, -193); ((("b")), 100000000, 0, -194); ((("c")), 100000000, 0, -195)], (0)), 100000000, 0, -192), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -191), 0), 100000000, 0, -190), 0), 100000000, 0, -189), 0), 100000000, 0, -188), 0), 100000000, 0, -187), 0), 100000000, 0, -186), 0), 100000000, 0, -185), 0), 100000000, 0, -184), 0, (("plugins/ltac/pptactic.mli", 102, 4019, 4019), ("plugins/ltac/pptactic.mli", 105, 4158, 4237), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 22)), 0); (("pr_and_short_name", 1515), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -181), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -183), 0), 100000000, 0, -182), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Genredexpr")), "and_short_name"), [((("a")), 100000000, 0, -181)], (0)), 100000000, 0, -180), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -179), 0), 100000000, 0, -178), 0), 100000000, 0, -177), 0, (("plugins/ltac/pptactic.mli", 107, 4239, 4239), ("plugins/ltac/pptactic.mli", 107, 4239, 4315), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 23)), 0); (("pr_evaluable_reference_env", 1516), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -176), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Tacred")), "evaluable_global_reference"), 0, (0)), 100000000, 0, -175), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -174), 0), 100000000, 0, -173), 0), 100000000, 0, -172), 0, (("plugins/ltac/pptactic.mli", 109, 4317, 4317), ("plugins/ltac/pptactic.mli", 109, 4317, 4398), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 24)), 0); (("pr_quantified_hypothesis", 1517), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Tactypes")), "quantified_hypothesis"), 0, (0)), 100000000, 0, -171), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -170), 0), 100000000, 0, -169), 0, (("plugins/ltac/pptactic.mli", 111, 4400, 4400), ("plugins/ltac/pptactic.mli", 111, 4400, 4460), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 25)), 0); (("pr_in_clause", 1518), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -166), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -168), 0), 100000000, 0, -167), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Locus")), "clause_expr"), [((("a")), 100000000, 0, -166)], (0)), 100000000, 0, -165), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -164), 0), 100000000, 0, -163), 0), 100000000, 0, -162), 0, (("plugins/ltac/pptactic.mli", 113, 4462, 4462), ("plugins/ltac/pptactic.mli", 114, 4481, 4527), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 26)), 0); (("pr_clauses", 1519), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -161)], (0)), 100000000, 0, -160), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -157), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -159), 0), 100000000, 0, -158), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Locus")), "clause_expr"), [((("a")), 100000000, 0, -157)], (0)), 100000000, 0, -156), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -155), 0), 100000000, 0, -154), 0), 100000000, 0, -153), 0), 100000000, 0, -152), 0, (("plugins/ltac/pptactic.mli", 116, 4529, 4529), ("plugins/ltac/pptactic.mli", 117, 4576, 4622), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 27)), 0); (("pr_raw_generic", 1520), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -151), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -150), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Genarg")), "generic_argument"), [(Tag3 (Tag1 ((Tag2 ("Genarg")), "rlevel"), 0, (0)), 100000000, 0, -149)], (0)), 100000000, 0, -148), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -147), 0), 100000000, 0, -146), 0), 100000000, 0, -145), 0), 100000000, 0, -144), 0, (("plugins/ltac/pptactic.mli", 120, 4709, 4709), ("plugins/ltac/pptactic.mli", 120, 4709, 4784), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 28)), 0); (("pr_glb_generic", 1521), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -143), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -142), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Genarg")), "generic_argument"), [(Tag3 (Tag1 ((Tag2 ("Genarg")), "glevel"), 0, (0)), 100000000, 0, -141)], (0)), 100000000, 0, -140), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -139), 0), 100000000, 0, -138), 0), 100000000, 0, -137), 0), 100000000, 0, -136), 0, (("plugins/ltac/pptactic.mli", 122, 4786, 4786), ("plugins/ltac/pptactic.mli", 122, 4786, 4861), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 29)), 0); (("pr_raw_extend", 1522), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -135), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -134), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -133), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Tacexpr"), "ml_tactic_entry"), 0, (0)), 100000000, 0, -132), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Tacexpr"), "raw_tactic_arg"), 0, (0)), 100000000, 0, -131)], (0)), 100000000, 0, -130), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -129), 0), 100000000, 0, -128), 0), 100000000, 0, -127), 0), 100000000, 0, -126), 0), 100000000, 0, -125), 0), 100000000, 0, -124), 0, (("plugins/ltac/pptactic.mli", 124, 4863, 4863), ("plugins/ltac/pptactic.mli", 125, 4912, 4960), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 30)), 0); (("pr_glob_extend", 1523), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -123), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -122), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Tacexpr"), "ml_tactic_entry"), 0, (0)), 100000000, 0, -121), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Tacexpr"), "glob_tactic_arg"), 0, (0)), 100000000, 0, -120)], (0)), 100000000, 0, -119), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -118), 0), 100000000, 0, -117), 0), 100000000, 0, -116), 0), 100000000, 0, -115), 0), 100000000, 0, -114), 0, (("plugins/ltac/pptactic.mli", 127, 4962, 4962), ("plugins/ltac/pptactic.mli", 128, 4996, 5045), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 31)), 0); (("pr_extend", 1524), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Geninterp")), "Val"), "t"), 0, (0)), 100000000, 0, -113), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -112), 0), 100000000, 0, -111), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -110), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Tacexpr"), "ml_tactic_entry"), 0, (0)), 100000000, 0, -109), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Geninterp")), "Val"), "t"), 0, (0)), 100000000, 0, -108)], (0)), 100000000, 0, -107), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -106), 0), 100000000, 0, -105), 0), 100000000, 0, -104), 0), 100000000, 0, -103), 0), 100000000, 0, -102), 0, (("plugins/ltac/pptactic.mli", 130, 5047, 5047), ("plugins/ltac/pptactic.mli", 131, 5063, 5128), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 32)), 0); (("pr_alias_key", 1525), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -101), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -100), 0), 100000000, 0, -99), 0, (("plugins/ltac/pptactic.mli", 133, 5130, 5130), ("plugins/ltac/pptactic.mli", 133, 5130, 5172), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 33)), 0); (("pr_alias", 1526), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Geninterp")), "Val"), "t"), 0, (0)), 100000000, 0, -98), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -97), 0), 100000000, 0, -96), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -95), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -94), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Geninterp")), "Val"), "t"), 0, (0)), 100000000, 0, -93)], (0)), 100000000, 0, -92), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -91), 0), 100000000, 0, -90), 0), 100000000, 0, -89), 0), 100000000, 0, -88), 0), 100000000, 0, -87), 0, (("plugins/ltac/pptactic.mli", 135, 5174, 5174), ("plugins/ltac/pptactic.mli", 136, 5208, 5254), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 34)), 0); (("pr_ltac_constant", 1527), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Tacexpr"), "ltac_constant"), 0, (0)), 100000000, 0, -86), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -85), 0), 100000000, 0, -84), 0, (("plugins/ltac/pptactic.mli", 138, 5256, 5256), ("plugins/ltac/pptactic.mli", 138, 5256, 5300), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 35)), 0); (("pr_raw_tactic", 1528), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -83), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -82), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Tacexpr"), "raw_tactic_expr"), 0, (0)), 100000000, 0, -81), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -80), 0), 100000000, 0, -79), 0), 100000000, 0, -78), 0), 100000000, 0, -77), 0, (("plugins/ltac/pptactic.mli", 140, 5302, 5302), ("plugins/ltac/pptactic.mli", 140, 5302, 5368), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 36)), 0); (("pr_raw_tactic_level", 1529), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -76), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -75), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "entry_relative_level"), 0, (0)), 100000000, 0, -74), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Tacexpr"), "raw_tactic_expr"), 0, (0)), 100000000, 0, -73), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), 0), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("plugins/ltac/pptactic.mli", 142, 5370, 5370), ("plugins/ltac/pptactic.mli", 142, 5370, 5466), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 37)), 0); (("pr_glob_tactic", 1530), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -67), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Tacexpr"), "glob_tactic_expr"), 0, (0)), 100000000, 0, -66), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -65), 0), 100000000, 0, -64), 0), 100000000, 0, -63), 0, (("plugins/ltac/pptactic.mli", 144, 5468, 5468), ("plugins/ltac/pptactic.mli", 144, 5468, 5520), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 38)), 0); (("pr_atomic_tactic", 1531), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -62), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -61), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Tacexpr"), "atomic_tactic_expr"), 0, (0)), 100000000, 0, -60), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -59), 0), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("plugins/ltac/pptactic.mli", 146, 5522, 5522), ("plugins/ltac/pptactic.mli", 146, 5522, 5594), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 39)), 0); (("pr_hintbases", 1532), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -55)], (0)), 100000000, 0, -54)], (0)), 100000000, 0, -53), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("plugins/ltac/pptactic.mli", 148, 5596, 5596), ("plugins/ltac/pptactic.mli", 148, 5596, 5641), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 40)), 0); (("pr_auto_using", 1533), ((Tag1 (0, (Tag1 (0, ((("constr")), 100000000, 0, -48), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("constr")), 100000000, 0, -48)], (0)), 100000000, 0, -47), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("plugins/ltac/pptactic.mli", 150, 5643, 5643), ("plugins/ltac/pptactic.mli", 150, 5643, 5704), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 41)), 0); (("pr_match_pattern", 1534), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -41), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -43), 0), 100000000, 0, -42), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Tacexpr"), "match_pattern"), [((("a")), 100000000, 0, -41)], (0)), 100000000, 0, -40), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0), 100000000, 0, -37), 0, (("plugins/ltac/pptactic.mli", 152, 5706, 5706), ("plugins/ltac/pptactic.mli", 152, 5706, 5769), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 42)), 0); (("pr_match_rule", 1535), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -36), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -31), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -35), 0), 100000000, 0, -34), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -30), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Tacexpr"), "match_rule"), [((("b")), 100000000, 0, -30); ((("a")), 100000000, 0, -31)], (0)), 100000000, 0, -29), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("plugins/ltac/pptactic.mli", 154, 5771, 5771), ("plugins/ltac/pptactic.mli", 155, 5831, 5860), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 43)), 0); (("pr_value", 1536), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "entry_relative_level"), 0, (0)), 100000000, 0, -23), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Geninterp")), "Val"), "t"), 0, (0)), 100000000, 0, -22), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("plugins/ltac/pptactic.mli", 157, 5862, 5862), ("plugins/ltac/pptactic.mli", 157, 5862, 5914), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 44)), 0); (("ltop", 1537), ((Tag3 (Tag1 ((Tag2 ("Constrexpr")), "entry_relative_level"), 0, (0)), 100000000, 0, -18), 0, (("plugins/ltac/pptactic.mli", 160, 5917, 5917), ("plugins/ltac/pptactic.mli", 160, 5917, 5948), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 45)), 0); (("make_constr_printer", 1538), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -17), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -16), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constrexpr")), "entry_relative_level"), 0, (0)), 100000000, 0, -15), (Tag1 (0, ((("a")), 100000000, 0, -9), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), (Tag3 (Tag1 ((Tag2 ("Genprint")), "top_printer"), [((("a")), 100000000, 0, -9)], (0)), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("plugins/ltac/pptactic.mli", 162, 5950, 5950), ("plugins/ltac/pptactic.mli", 163, 6039, 6064), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 46)), 0); (("ssr_loaded_hook", 1539), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -6), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -5), 0), 100000000, 0, -4), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("plugins/ltac/pptactic.mli", 165, 6066, 6066), ("plugins/ltac/pptactic.mli", 165, 6066, 6110), 0), 0, Tag1 ("Ltac_plugin__Pptactic", 47)), 0)], "Ltac_plugin__Pptactic", [("Ltac_plugin__Pptactic", ("\029\205\202\170\1403e\153\197\247-\227\154\2531[")); ("Z", ("\253\196\2168\027\199O\134\220\218\031'\1484\233o")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("UnivSubst", ("\190qu\031mc\130\181\003G]\132\"\219m)")); ("UnivProblem", ("6'\161\018\181\001.\253\000\141a6\171\1727\155")); ("UnivNames", ("%\151_\209%+JM$n\001\232\194n\178N")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Unification", ("\017\027\157=\255\1914L\020\213h\154.\219\005\170")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UState", ("SD\203\215|\136\n\251\239\208\148\215C\n\167\005")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("Type_errors", ("7\157\162-\214M\206\196\228\191\005v\134\177\144\134")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Tactypes", ("\143E\135*\195\151\144H\151M\011($\017\159\203")); ("Tactics", ("7\154?u\169\241\190R\245\187\153\020GE\029\215")); ("Tacred", ("\133d\143\1310z\030\237\232\002\001\025\147\140\215:")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Store", ("/dT\252\145\179pq\216{\181\206\190K+U")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Random", ("\020\005Xq\171\026\218\152X\135\254\023\133zK\200")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("Section", ("\245\207\b\021\142v=\155#w\246}\"4b\006")); ("Safe_typing", (")\250?\164\145\132\241\127\186\152h+\145\"\237l")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Reductionops", ("\179\023P\218\146Uh\014IS\196C\031q~#")); ("Redexpr", ("\181\250o\134\007\001\242+$\149)\204\226\"\0240")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Proofview_monad", ("\218\196\189S\147\216\129\221\231\224v\228O\024*\239")); ("Proofview", ("\245\140U\027\236\199\199&\242\156\199YG\250tA")); ("Primred", ("\158G\192\182\224\196\144*\174y_E\165\012\137C")); ("Pretyping", ("\151\160\191\149\149Ff\195\171g\189\156\r\166n\189")); ("Pretype_errors", ("\155\229\201\176\163\234\203C\127\227\141\174j\199\200H")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Pattern", ("\195C\140Wb=\022\222\208\227^K\003\020\215X")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("NumTok", ("vd\023^\251\244B\166\145'\156\196-0\027\169")); ("Notation_term", ("5\002\017\217b\193nc>\239\239\237\244\031\173?")); ("Nativevalues", ("8:\007\025e\226c,\001\171\146#l\210\171\152")); ("Nativelib", ("V\239\205Y1\147E:,\176\196Hy\1483|")); ("Nativecode", ("\190\185\255\006m\012\210\163\138Rz\247\15283\183")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Namegen", ("\187\222\224T\255\020\1808-\212*\164\131\177\157x")); ("Monad", ("\244\171T\157\194p\187\160\149\195{\132\222\020\253\148")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Ltac_pretype", ("\224\"\167\018i:U\172>\188\128$\r\252\020T")); ("Ltac_plugin__Tacexpr", ("lM\188\244SSB<\139\160F_\240|\128[")); ("Ltac_plugin", ("\1495\201\148\025F\172$\016P\190\1821b4-")); ("Logic_monad", ("\130\157\160Q\163vQ\137\184\2242\209\128\024\220i")); ("Logic", ("\214\234\234\223\014\197\147\165\158f.$\163\164\245Z")); ("Locus", ("_\002\003W\246\181\225\242Uf\139\226\176\174\192I")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Inv", ("\249\160_\012\n1\202C\204\171\024\017$\025\226\138")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Ind_tables", ("\1586xu\131C\135\176\222\242\178r\031D,\196")); ("Hook", ("\183\194\223\003\155\169',\187\240a;E\b\1396")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Gramlib__Stream", ("\248\\H\205_76\253\136\146\200\031\165\021=t")); ("Gramlib__Gramext", ("B\171oA\172\212\187>\175\233Q\145\"\176TM")); ("Gramlib", ("\154\143\210e\021i\246\176\224\194\220\217\007\145\139A")); ("Goal_select", ("\235$\175\023t\178\194.Ivlz\005\211\173\n")); ("Glob_term", ("\165=a\227\160\153.\021_$\232\209T\236\153O")); ("GlobEnv", ("(\152\019ok\006R\183\193\145\137\133<\171\005\231")); ("Genredexpr", ("rz\204\143\007`VgI\195P\168sO\198\012")); ("Genprint", ("\143p6\014\255\159+\211\187\236\220H\237\131\171\220")); ("Genlambda", ("\170}\024\241\141\222\136S\169\219\2212i\134KI")); ("Geninterp", ("2S\151\191\189\159\004\188;\224d\199|U\004\028")); ("Genintern", ("\152Ac\019=n\235\197\141\224T\162\192\148eg")); ("Genarg", ("\1434\015\001\152\196\005s\156\136\195\185\247\b3\t")); ("Ftactic", ("K\172\205\128\241\162\160\201\202\1561o\180L\206:")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Extend", ("\179&!W\163V\006\245\018\168\021\001\224s\168\234")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evd", ("\211\205p\193\216\129r\006\239oN\142ar\196\175")); ("Evarutil", ("\005\175\132e\164O\223svi \252\232\138\022\137")); ("Evarsolve", ("\000&\228\016}j\199\t\229\173\127\024\219\199\184\178")); ("Evardefine", ("\178\167R\199\158\242\001Y\215<\151\020\206\153\227\019")); ("Evar_kinds", ("\023L\186\132\218}\254\221\185\198\220\200h\003{\021")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Equality", ("M\157\199R]=\020;\029s@\210\1789y\163")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("EConstr", ("\201aW\156\157;N\004\201V\208\006L\166\211)")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("DAst", ("\224/\200)\007\184ni\134\b\139\204\241\005w\212")); ("Coqlib", ("'\226\164\143\129\221\158\224\247\247\160\190~\171\191\198")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conversion", ("\158\150&\195M\tv\127|\029\158RRK\211A")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constrexpr", ("p'r\245\184chL\183\249\"\213]\1741\237")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CDebug", ("^4\210p7\239!3\138\138\213?\239`\250\157")); ("CClosure", ("\167\b\022\241V-\r\253\b\002\000j]\223%\142")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])

val ssr_loaded_hook : (unit -> bool) -> unit
