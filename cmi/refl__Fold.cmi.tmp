module Fold : sig type ('a, 'b) t = 'a -> 'b -> 'b end
module Folds :
  sig
    type ('a, 'b, 'occurrence) item =
      ('a, 'b, 'occurrence) Refl__Tools.ParameterizedVector(Fold).item =
        None : ('c, 'd, [ `Absent ]) item
      | Some : ('a, 'b) Fold.t -> ('a, 'b, 'e) item
    type ('sequence, 'b, 'occurrences) t =
      ('sequence, 'b, 'occurrences) Refl__Tools.ParameterizedVector(Fold).t =
        [] : (unit, 'a, unit) t
      | (::) : ('head, 'b, 'occurrence) item *
          ('tail, 'b, 'occurrences) t -> ('head * 'tail, 'b,
                                          'occurrence * 'occurrences)
                                         t
    module Unary :
      functor (U : Refl__Tools.TypeS) ->
        sig
          module Item : sig type 'a t = ('a, U.t) Fold.t end
          module Unary :
            sig
              module T : sig type 'a t = 'a Item.t end
              type ('a, 'occurrence) item =
                ('a, 'occurrence) Refl__Tools.Vector(Item).item =
                  None : ('b, [ `Absent ]) item
                | Some : 'a T.t -> ('a, 'c) item
              type ('sequence, 'occurrences) t =
                ('sequence, 'occurrences) Refl__Tools.Vector(Item).t =
                  [] : (unit, unit) t
                | (::) : ('head, 'occurrence) item *
                    ('tail, 'occurrences) t -> ('head * 'tail,
                                                'occurrence * 'occurrences)
                                               t
              val get :
                ('index, 'sequence, 'value, 'positive, 'occurrences)
                Refl__.Desc.variable ->
                ('sequence, 'occurrences) t -> 'value T.t
              val make_transfer :
                ('source, 'sub, 'arg) Refl__.Desc.transfer_arguments ->
                ('sequence, 'source) t ->
                (('sequence, 'arg) t, ('sub, [ `Absent ]) Refl__.Desc.eq)
                result
              type ('arity, 'rec_group, 'kinds) make =
                ('arity, 'rec_group, 'kinds) Refl__Tools.Vector(Item).make = {
                f :
                  'a 'structure 'ap 'an 'ad 'gadt.
                    ('a, 'structure, 'arity, 'rec_group, 'kinds, 'ap, 'an,
                     'ad, 'gadt)
                    Refl__.Desc.desc -> ('arity, 'ad) t -> 'a T.t;
              }
              val make :
                ('arity, 'rec_group, 'kinds) make ->
                ('types, 'structures, 'arity, 'rec_group, 'kinds, 'arguments,
                 'gadt)
                Refl__.Desc.vector ->
                ('positive, 'negative, 'direct, 'subpositive, 'subnegative,
                 'subdirect, 'arguments)
                Refl__.Desc.transfer_skip ->
                ('arity, 'direct) t -> ('types, 'subdirect) t
              type 'presence any =
                'presence Refl__Tools.Vector(Item).any =
                  None : [ `Absent ] any
                | Some : { item : 'a. 'a T.t; } -> 'b any
              val append :
                'presence any ->
                ('presence, 'directs) Refl__.Desc.presences ->
                ('count, 'directs) Refl__.Desc.length ->
                ('directs, 'direct, 'subdirect) Refl__.Desc.append ->
                ('count, 'types) Refl__.Desc.length ->
                ('types, 'arity, 'subarity) Refl__.Desc.append ->
                ('arity, 'direct) t -> ('subarity, 'subdirect) t
              val to_sequence :
                [ `Present ] any ->
                ('sequence, 'occurrences) t ->
                'sequence Refl__.Desc.Sequence(T).t
            end
          val to_unary :
            ('sequence, U.t, 'occurrences) t ->
            ('sequence, 'occurrences) Unary.t
          module T = Unary.T
          type ('a, 'occurrence) item =
            ('a, 'occurrence) Refl__Tools.Vector(Item).item =
              None : ('b, [ `Absent ]) item
            | Some : 'a T.t -> ('a, 'c) item
          type ('sequence, 'occurrences) t =
            ('sequence, 'occurrences) Refl__Tools.Vector(Item).t =
              [] : (unit, unit) t
            | (::) : ('head, 'occurrence) item *
                ('tail, 'occurrences) t -> ('head * 'tail,
                                            'occurrence * 'occurrences)
                                           t
          val get :
            ('index, 'sequence, 'value, 'positive, 'occurrences)
            Refl__.Desc.variable -> ('sequence, 'occurrences) t -> 'value T.t
          val make_transfer :
            ('source, 'sub, 'arg) Refl__.Desc.transfer_arguments ->
            ('sequence, 'source) t ->
            (('sequence, 'arg) t, ('sub, [ `Absent ]) Refl__.Desc.eq) result
          type ('arity, 'rec_group, 'kinds) make =
            ('arity, 'rec_group, 'kinds) Refl__Tools.Vector(Item).make = {
            f :
              'a 'structure 'ap 'an 'ad 'gadt.
                ('a, 'structure, 'arity, 'rec_group, 'kinds, 'ap, 'an, 'ad,
                 'gadt)
                Refl__.Desc.desc -> ('arity, 'ad) t -> 'a T.t;
          }
          val make :
            ('arity, 'rec_group, 'kinds) make ->
            ('types, 'structures, 'arity, 'rec_group, 'kinds, 'arguments,
             'gadt)
            Refl__.Desc.vector ->
            ('positive, 'negative, 'direct, 'subpositive, 'subnegative,
             'subdirect, 'arguments)
            Refl__.Desc.transfer_skip ->
            ('arity, 'direct) t -> ('types, 'subdirect) t
          type 'presence any =
            'presence Refl__Tools.Vector(Item).any =
              None : [ `Absent ] any
            | Some : { item : 'a. 'a T.t; } -> 'b any
          val append :
            'presence any ->
            ('presence, 'directs) Refl__.Desc.presences ->
            ('count, 'directs) Refl__.Desc.length ->
            ('directs, 'direct, 'subdirect) Refl__.Desc.append ->
            ('count, 'types) Refl__.Desc.length ->
            ('types, 'arity, 'subarity) Refl__.Desc.append ->
            ('arity, 'direct) t -> ('subarity, 'subdirect) t
          val to_sequence :
            [ `Present ] any ->
            ('sequence, 'occurrences) t ->
            'sequence Refl__.Desc.Sequence(T).t
        end
  end
val fold :
  ('a, 'structure, 'arity, 'rec_group,
   [> `Array
    | `Arrow
    | `Attributes
    | `Constr
    | `Exists
    | `Lazy
    | `MapOpaque
    | `Object
    | `Opaque
    | `Poly
    | `Record
    | `Tuple
    | `Variable
    | `Variant ],
   'positive, 'negative, 'direct, 'gadt)
  Refl__.Desc.desc ->("DEBUG:rule", [Tag3 (("Fold", 1190), 0, (Tag1 ([Tag1 (("t", 1193), ([((("a")), 100000000, 0, -21); ((("b")), 100000000, 0, -20)], 2, 0, 1, ((Tag1 (0, ((("a")), 100000000, 0, -21), (Tag1 (0, ((("b")), 100000000, 0, -20), ((("b")), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18)), [46; 63], [0; 0], 0, 0, (("runtime/fold.ml", 6, 44, 46), ("runtime/fold.ml", 6, 44, 78), 0), 0, 0, 0, Tag1 ("Refl__Fold", 37)), 1, 0)]), 0, (("runtime/fold.ml", 5, 23, 23), ("runtime/fold.ml", 7, 79, 82), 0), Tag1 ("Refl__Fold", 38)), 0, 0); Tag3 (("Folds", 1191), 0, (Tag1 ([Tag1 (("item", 1194), ([((("a")), 100000000, 0, -41); ((("b")), 100000000, 0, -42); ((("occurrence")), 100000000, 0, -43)], 3, Tag1 ([(("None", 1586), (0), ((Tag3 ((("item", 1194)), [((0), 100000000, 0, -45); ((0), 100000000, 0, -46); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -48), 1, 0, 0)), 100000000, 0, -47)], (0)), 100000000, 0, -44)), (("runtime/tools.ml", 540, 18341, 18345), ("runtime/tools.ml", 540, 18341, 18376), 0), 0, Tag1 ("Refl__Tools", 1897)); (("Some", 1587), ([(Tag3 (Tag1 ((("Fold", 1190)), "t"), [((("a")), 100000000, 0, -50); ((("b")), 100000000, 0, -51)], (0)), 100000000, 0, -53)]), ((Tag3 ((("item", 1194)), [((("a")), 100000000, 0, -50); ((("b")), 100000000, 0, -51); ((0), 100000000, 0, -52)], (0)), 100000000, 0, -49)), (("runtime/tools.ml", 541, 18377, 18381), ("runtime/tools.ml", 541, 18377, 18422), 0), 0, Tag1 ("Refl__Tools", 1898))], 0), 1, ((Tag3 (Tag1 (Tag2 (Tag1 ((Tag2 ("Refl__Tools")), "ParameterizedVector"), (("Fold", 1190))), "item"), [((("a")), 100000000, 0, -41); ((("b")), 100000000, 0, -42); ((("occurrence")), 100000000, 0, -43)], (0)), 100000000, 0, -40)), [15; 15; 63], [0; 0; 0], 0, 0, (("runtime/tools.ml", 539, 18305, 18307), ("runtime/tools.ml", 541, 18377, 18422), 0), 0, 0, 0, Tag1 ("Refl__Tools", 1896)), 1, 0); Tag1 (("t", 1195), ([((("sequence")), 100000000, 0, -23); ((("b")), 100000000, 0, -24); ((("occurrences")), 100000000, 0, -25)], 3, Tag1 ([(("[]", 1589), (0), ((Tag3 ((("t", 1195)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -27); ((0), 100000000, 0, -28); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -29)], (0)), 100000000, 0, -26)), (("runtime/tools.ml", 544, 18465, 18469), ("runtime/tools.ml", 544, 18465, 18493), 0), 0, Tag1 ("Refl__Tools", 1900)); (("::", 1590), ([(Tag3 ((("item", 1194)), [((("head")), 100000000, 0, -32); ((("b")), 100000000, 0, -34); ((("occurrence")), 100000000, 0, -36)], (0)), 100000000, 0, -38); (Tag3 ((("t", 1195)), [((("tail")), 100000000, 0, -33); ((("b")), 100000000, 0, -34); ((("occurrences")), 100000000, 0, -37)], (0)), 100000000, 0, -39)]), ((Tag3 ((("t", 1195)), [(Tag2 ([((("head")), 100000000, 0, -32); ((("tail")), 100000000, 0, -33)]), 100000000, 0, -31); ((("b")), 100000000, 0, -34); (Tag2 ([((("occurrence")), 100000000, 0, -36); ((("occurrences")), 100000000, 0, -37)]), 100000000, 0, -35)], (0)), 100000000, 0, -30)), (("runtime/tools.ml", 545, 18494, 18498), ("runtime/tools.ml", 546, 18570, 18627), 0), 0, Tag1 ("Refl__Tools", 1901))], 0), 1, ((Tag3 (Tag1 (Tag2 (Tag1 ((Tag2 ("Refl__Tools")), "ParameterizedVector"), (("Fold", 1190))), "t"), [((("sequence")), 100000000, 0, -23); ((("b")), 100000000, 0, -24); ((("occurrences")), 100000000, 0, -25)], (0)), 100000000, 0, -22)), [63; 15; 63], [0; 0; 0], 0, 0, (("runtime/tools.ml", 543, 18424, 18426), ("runtime/tools.ml", 546, 18570, 18627), 0), 0, 0, 0, Tag1 ("Refl__Tools", 1899)), 1, 0); Tag3 (("Unary", 1196), 0, (Tag2 (((("U", 1197)), (Tag1 ((Tag2 ("Refl__Tools")), "TypeS"))), Tag1 ([Tag3 (("Item", 1198), 0, (Tag1 ([Tag1 (("t", 1211), ([((("a")), 100000000, 0, -190)], 1, 0, 1, ((Tag3 (Tag1 ((("Fold", 1190)), "t"), [((("a")), 100000000, 0, -190); (Tag3 (Tag1 ((("U", 1197)), "t"), 0, (0)), 100000000, 0, -191)], (0)), 100000000, 0, -189)), [7], [2], 0, 0, (("runtime/tools.ml", 550, 18690, 18696), ("runtime/tools.ml", 550, 18690, 18721), 0), 0, 0, 0, Tag1 ("Refl__Tools", 1903)), 1, 0)]), 0, (("runtime/tools.ml", 549, 18665, 18669), ("runtime/tools.ml", 551, 18722, 18729), 0), Tag1 ("Refl__Tools", 1904)), 0, 0); Tag3 (("Unary", 1199), 0, (Tag1 ([Tag3 (("T", 1212), 0, (Tag1 ([Tag1 (("t", 1222), ([((("a")), 100000000, 0, -322)], 1, 0, 1, ((Tag3 (Tag1 ((("Item", 1198)), "t"), [((("a")), 100000000, 0, -322)], (0)), 100000000, 0, -321)), [7], [2], 0, 0, (("runtime/desc.ml", 45, 1724, 1726), ("runtime/desc.ml", 45, 1724, 1735), 0), 0, 0, 0, Tag1 ("Refl__Desc", 27)), 1, 0)]), 0, (("runtime/tools.ml", 277, 8782, 8797), ("runtime/tools.ml", 277, 8782, 8798), 0), Tag1 ("Refl__Tools", 652)), 0, 0); Tag1 (("item", 1213), ([((("a")), 100000000, 0, -311); ((("occurrence")), 100000000, 0, -312)], 2, Tag1 ([(("None", 804), (0), ((Tag3 ((("item", 1213)), [((0), 100000000, 0, -314); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -316), 1, 0, 0)), 100000000, 0, -315)], (0)), 100000000, 0, -313)), (("runtime/tools.ml", 226, 7216, 7220), ("runtime/tools.ml", 226, 7216, 7248), 0), 0, Tag1 ("Refl__Tools", 629)); (("Some", 805), ([(Tag3 (Tag1 ((("T", 1212)), "t"), [((("a")), 100000000, 0, -318)], (0)), 100000000, 0, -320)]), ((Tag3 ((("item", 1213)), [((("a")), 100000000, 0, -318); ((0), 100000000, 0, -319)], (0)), 100000000, 0, -317)), (("runtime/tools.ml", 227, 7249, 7253), ("runtime/tools.ml", 227, 7249, 7284), 0), 0, Tag1 ("Refl__Tools", 630))], 0), 1, ((Tag3 (Tag1 (Tag2 (Tag1 ((Tag2 ("Refl__Tools")), "Vector"), (("Item", 1198))), "item"), [((("a")), 100000000, 0, -311); ((("occurrence")), 100000000, 0, -312)], (0)), 100000000, 0, -310)), [15; 63], [0; 0], 0, 0, (("runtime/tools.ml", 225, 7184, 7186), ("runtime/tools.ml", 227, 7249, 7284), 0), 0, 0, 0, Tag1 ("Refl__Tools", 628)), 1, 0); Tag1 (("t", 1214), ([((("sequence")), 100000000, 0, -296); ((("occurrences")), 100000000, 0, -297)], 2, Tag1 ([(("[]", 808), (0), ((Tag3 ((("t", 1214)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -299); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -300)], (0)), 100000000, 0, -298)), (("runtime/tools.ml", 230, 7323, 7327), ("runtime/tools.ml", 230, 7323, 7348), 0), 0, Tag1 ("Refl__Tools", 632)); (("::", 809), ([(Tag3 ((("item", 1213)), [((("head")), 100000000, 0, -303); ((("occurrence")), 100000000, 0, -306)], (0)), 100000000, 0, -308); (Tag3 ((("t", 1214)), [((("tail")), 100000000, 0, -304); ((("occurrences")), 100000000, 0, -307)], (0)), 100000000, 0, -309)]), ((Tag3 ((("t", 1214)), [(Tag2 ([((("head")), 100000000, 0, -303); ((("tail")), 100000000, 0, -304)]), 100000000, 0, -302); (Tag2 ([((("occurrence")), 100000000, 0, -306); ((("occurrences")), 100000000, 0, -307)]), 100000000, 0, -305)], (0)), 100000000, 0, -301)), (("runtime/tools.ml", 231, 7349, 7353), ("runtime/tools.ml", 232, 7417, 7470), 0), 0, Tag1 ("Refl__Tools", 633))], 0), 1, ((Tag3 (Tag1 (Tag2 (Tag1 ((Tag2 ("Refl__Tools")), "Vector"), (("Item", 1198))), "t"), [((("sequence")), 100000000, 0, -296); ((("occurrences")), 100000000, 0, -297)], (0)), 100000000, 0, -295)), [63; 63], [0; 0], 0, 0, (("runtime/tools.ml", 229, 7286, 7288), ("runtime/tools.ml", 232, 7417, 7470), 0), 0, 0, 0, Tag1 ("Refl__Tools", 631)), 1, 0); (("get", 1215), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variable"), [((("index")), 100000000, 0, -293); ((("sequence")), 100000000, 0, -290); ((("value")), 100000000, 0, -288); ((("positive")), 100000000, 0, -294); ((("occurrences")), 100000000, 0, -291)], (0)), 100000000, 0, -292), (Tag1 (0, (Tag3 ((("t", 1214)), [((("sequence")), 100000000, 0, -290); ((("occurrences")), 100000000, 0, -291)], (0)), 100000000, 0, -289), (Tag3 (Tag1 ((("T", 1212)), "t"), [((("value")), 100000000, 0, -288)], (0)), 100000000, 0, -287), 0), 100000000, 0, -286), 0), 100000000, 0, -285), 0, (("runtime/tools.ml", 234, 7472, 7474), ("runtime/tools.ml", 236, 7553, 7600), 0), 0, Tag1 ("Refl__Tools", 634)), 0); (("make_transfer", 1216), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_arguments"), [((("source")), 100000000, 0, -283); ((("sub")), 100000000, 0, -279); ((("arg")), 100000000, 0, -277)], (0)), 100000000, 0, -284), (Tag1 (0, (Tag3 ((("t", 1214)), [((("sequence")), 100000000, 0, -276); ((("source")), 100000000, 0, -283)], (0)), 100000000, 0, -282), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("t", 1214)), [((("sequence")), 100000000, 0, -276); ((("arg")), 100000000, 0, -277)], (0)), 100000000, 0, -275); (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "eq"), [((("sub")), 100000000, 0, -279); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -281), 1, 0, 0)), 100000000, 0, -280)], (0)), 100000000, 0, -278)], (0)), 100000000, 0, -274), 0), 100000000, 0, -273), 0), 100000000, 0, -272), 0, (("runtime/tools.ml", 238, 7602, 7604), ("runtime/tools.ml", 240, 7698, 7752), 0), 0, Tag1 ("Refl__Tools", 635)), 0); Tag1 (("make", 1217), ([((("arity")), 100000000, 0, -257); ((("rec_group")), 100000000, 0, -258); ((("kinds")), 100000000, 0, -259)], 3, [[(("f", 813), 0, (Tag10 ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [(Tag9 (("a")), 100000000, 0, -261); (Tag9 (("structure")), 100000000, 0, -262); ((("arity")), 100000000, 0, -257); ((("rec_group")), 100000000, 0, -258); ((("kinds")), 100000000, 0, -259); (Tag9 (("ap")), 100000000, 0, -263); (Tag9 (("an")), 100000000, 0, -264); (Tag9 (("ad")), 100000000, 0, -265); (Tag9 (("gadt")), 100000000, 0, -266)], (0)), 100000000, 0, -271), (Tag1 (0, (Tag3 ((("t", 1214)), [((("arity")), 100000000, 0, -257); (Tag9 (("ad")), 100000000, 0, -265)], (0)), 100000000, 0, -270), (Tag3 (Tag1 ((("T", 1212)), "t"), [(Tag9 (("a")), 100000000, 0, -261)], (0)), 100000000, 0, -269), 0), 100000000, 0, -268), 0), 100000000, 0, -267), [(Tag9 (("a")), 100000000, 0, -261); (Tag9 (("structure")), 100000000, 0, -262); (Tag9 (("ap")), 100000000, 0, -263); (Tag9 (("an")), 100000000, 0, -264); (Tag9 (("ad")), 100000000, 0, -265); (Tag9 (("gadt")), 100000000, 0, -266)]), 100000000, 0, -260), (("runtime/tools.ml", 243, 7799, 7805), ("runtime/tools.ml", 245, 7918, 7962), 0), 0, Tag1 ("Refl__Tools", 637))]], 1, ((Tag3 (Tag1 (Tag2 (Tag1 ((Tag2 ("Refl__Tools")), "Vector"), (("Item", 1198))), "make"), [((("arity")), 100000000, 0, -257); ((("rec_group")), 100000000, 0, -258); ((("kinds")), 100000000, 0, -259)], (0)), 100000000, 0, -256)), [63; 15; 63], [0; 0; 0], 0, 0, (("runtime/tools.ml", 242, 7754, 7756), ("runtime/tools.ml", 246, 7963, 7968), 0), 0, 0, 1, Tag1 ("Refl__Tools", 636)), 1, 0); (("make", 1218), ((Tag1 (0, (Tag3 ((("make", 1217)), [((("arity")), 100000000, 0, -242); ((("rec_group")), 100000000, 0, -252); ((("kinds")), 100000000, 0, -253)], (0)), 100000000, 0, -255), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((("types")), 100000000, 0, -239); ((("structures")), 100000000, 0, -251); ((("arity")), 100000000, 0, -242); ((("rec_group")), 100000000, 0, -252); ((("kinds")), 100000000, 0, -253); ((("arguments")), 100000000, 0, -249); ((("gadt")), 100000000, 0, -254)], (0)), 100000000, 0, -250), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_skip"), [((("positive")), 100000000, 0, -245); ((("negative")), 100000000, 0, -246); ((("direct")), 100000000, 0, -243); ((("subpositive")), 100000000, 0, -247); ((("subnegative")), 100000000, 0, -248); ((("subdirect")), 100000000, 0, -240); ((("arguments")), 100000000, 0, -249)], (0)), 100000000, 0, -244), (Tag1 (0, (Tag3 ((("t", 1214)), [((("arity")), 100000000, 0, -242); ((("direct")), 100000000, 0, -243)], (0)), 100000000, 0, -241), (Tag3 ((("t", 1214)), [((("types")), 100000000, 0, -239); ((("subdirect")), 100000000, 0, -240)], (0)), 100000000, 0, -238), 0), 100000000, 0, -237), 0), 100000000, 0, -236), 0), 100000000, 0, -235), 0), 100000000, 0, -234), 0, (("runtime/tools.ml", 248, 7970, 7972), ("runtime/tools.ml", 255, 8251, 8277), 0), 0, Tag1 ("Refl__Tools", 638)), 0); Tag1 (("any", 1219), ([((("presence")), 100000000, 0, -225)], 1, Tag1 ([(("None", 816), (0), ((Tag3 ((("any", 1219)), [(Tag8 (([("Absent", (0))], (0, 100000000, 0, -228), 1, 0, 0)), 100000000, 0, -227)], (0)), 100000000, 0, -226)), (("runtime/tools.ml", 258, 8302, 8306), ("runtime/tools.ml", 258, 8302, 8328), 0), 0, Tag1 ("Refl__Tools", 640)); (("Some", 817), Tag1 ([(("item", 818), 0, (Tag10 ((Tag3 (Tag1 ((("T", 1212)), "t"), [(Tag9 (("a")), 100000000, 0, -232)], (0)), 100000000, 0, -233), [(Tag9 (("a")), 100000000, 0, -232)]), 100000000, 0, -231), (("runtime/tools.ml", 260, 8344, 8354), ("runtime/tools.ml", 260, 8344, 8373), 0), 0, Tag1 ("Refl__Tools", 641))]), ((Tag3 ((("any", 1219)), [((0), 100000000, 0, -230)], (0)), 100000000, 0, -229)), (("runtime/tools.ml", 259, 8329, 8333), ("runtime/tools.ml", 261, 8374, 8392), 0), 0, Tag1 ("Refl__Tools", 642))], 0), 1, ((Tag3 (Tag1 (Tag2 (Tag1 ((Tag2 ("Refl__Tools")), "Vector"), (("Item", 1198))), "any"), [((("presence")), 100000000, 0, -225)], (0)), 100000000, 0, -224)), [63], [0], 0, 0, (("runtime/tools.ml", 257, 8279, 8281), ("runtime/tools.ml", 261, 8374, 8392), 0), 0, 0, 0, Tag1 ("Refl__Tools", 639)), 1, 0); (("append", 1220), ((Tag1 (0, (Tag3 ((("any", 1219)), [((("presence")), 100000000, 0, -222)], (0)), 100000000, 0, -223), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "presences"), [((("presence")), 100000000, 0, -222); ((("directs")), 100000000, 0, -219)], (0)), 100000000, 0, -221), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -217); ((("directs")), 100000000, 0, -219)], (0)), 100000000, 0, -220), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("directs")), 100000000, 0, -219); ((("direct")), 100000000, 0, -213); ((("subdirect")), 100000000, 0, -210)], (0)), 100000000, 0, -218), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -217); ((("types")), 100000000, 0, -215)], (0)), 100000000, 0, -216), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("types")), 100000000, 0, -215); ((("arity")), 100000000, 0, -212); ((("subarity")), 100000000, 0, -209)], (0)), 100000000, 0, -214), (Tag1 (0, (Tag3 ((("t", 1214)), [((("arity")), 100000000, 0, -212); ((("direct")), 100000000, 0, -213)], (0)), 100000000, 0, -211), (Tag3 ((("t", 1214)), [((("subarity")), 100000000, 0, -209); ((("subdirect")), 100000000, 0, -210)], (0)), 100000000, 0, -208), 0), 100000000, 0, -207), 0), 100000000, 0, -206), 0), 100000000, 0, -205), 0), 100000000, 0, -204), 0), 100000000, 0, -203), 0), 100000000, 0, -202), 0), 100000000, 0, -201), 0, (("runtime/tools.ml", 263, 8394, 8396), ("runtime/tools.ml", 271, 8649, 8678), 0), 0, Tag1 ("Refl__Tools", 649)), 0); (("to_sequence", 1221), ((Tag1 (0, (Tag3 ((("any", 1219)), [(Tag8 (([("Present", (0))], (0, 100000000, 0, -200), 1, 0, 0)), 100000000, 0, -199)], (0)), 100000000, 0, -198), (Tag1 (0, (Tag3 ((("t", 1214)), [((("sequence")), 100000000, 0, -195); ((("occurrences")), 100000000, 0, -197)], (0)), 100000000, 0, -196), (Tag3 (Tag1 (Tag2 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "Sequence"), (("T", 1212))), "t"), [((("sequence")), 100000000, 0, -195)], (0)), 100000000, 0, -194), 0), 100000000, 0, -193), 0), 100000000, 0, -192), 0, (("runtime/tools.ml", 273, 8680, 8682), ("runtime/tools.ml", 274, 8700, 8776), 0), 0, Tag1 ("Refl__Tools", 650)), 0)]), 0, (("runtime/tools.ml", 553, 18731, 18735), ("runtime/tools.ml", 553, 18731, 18763), 0), Tag1 ("Refl__Tools", 1905)), 0, 0); (("to_unary", 1200), ((Tag1 (0, (Tag3 ((("t", 1195)), [((("sequence")), 100000000, 0, -185); (Tag3 (Tag1 ((("U", 1197)), "t"), 0, (0)), 100000000, 0, -188); ((("occurrences")), 100000000, 0, -186)], (0)), 100000000, 0, -187), (Tag3 (Tag1 ((("Unary", 1199)), "t"), [((("sequence")), 100000000, 0, -185); ((("occurrences")), 100000000, 0, -186)], (0)), 100000000, 0, -184), 0), 100000000, 0, -183), 0, (("runtime/tools.ml", 555, 18765, 18777), ("runtime/tools.ml", 555, 18765, 18785), 0), 0, Tag1 ("Refl__Tools", 1907)), 0); Tag3 (("T", 1201), 0, (Tag3 (Tag1 ((("Unary", 1199)), "T")), 0, (("runtime/tools.ml", 277, 8782, 8797), ("runtime/tools.ml", 277, 8782, 8798), 0), Tag1 ("Refl__Tools", 652)), 0, 0); Tag1 (("item", 1202), ([((("a")), 100000000, 0, -173); ((("occurrence")), 100000000, 0, -174)], 2, Tag1 ([(("None", 804), (0), ((Tag3 ((("item", 1202)), [((0), 100000000, 0, -176); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -178), 1, 0, 0)), 100000000, 0, -177)], (0)), 100000000, 0, -175)), (("runtime/tools.ml", 226, 7216, 7220), ("runtime/tools.ml", 226, 7216, 7248), 0), 0, Tag1 ("Refl__Tools", 629)); (("Some", 805), ([(Tag3 (Tag1 ((("T", 1201)), "t"), [((("a")), 100000000, 0, -180)], (0)), 100000000, 0, -182)]), ((Tag3 ((("item", 1202)), [((("a")), 100000000, 0, -180); ((0), 100000000, 0, -181)], (0)), 100000000, 0, -179)), (("runtime/tools.ml", 227, 7249, 7253), ("runtime/tools.ml", 227, 7249, 7284), 0), 0, Tag1 ("Refl__Tools", 630))], 0), 1, ((Tag3 (Tag1 (Tag2 (Tag1 ((Tag2 ("Refl__Tools")), "Vector"), (("Item", 1198))), "item"), [((("a")), 100000000, 0, -173); ((("occurrence")), 100000000, 0, -174)], (0)), 100000000, 0, -172)), [15; 63], [0; 0], 0, 0, (("runtime/tools.ml", 225, 7184, 7186), ("runtime/tools.ml", 227, 7249, 7284), 0), 0, 0, 0, Tag1 ("Refl__Tools", 628)), 1, 0); Tag1 (("t", 1203), ([((("sequence")), 100000000, 0, -158); ((("occurrences")), 100000000, 0, -159)], 2, Tag1 ([(("[]", 808), (0), ((Tag3 ((("t", 1203)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -161); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -162)], (0)), 100000000, 0, -160)), (("runtime/tools.ml", 230, 7323, 7327), ("runtime/tools.ml", 230, 7323, 7348), 0), 0, Tag1 ("Refl__Tools", 632)); (("::", 809), ([(Tag3 ((("item", 1202)), [((("head")), 100000000, 0, -165); ((("occurrence")), 100000000, 0, -168)], (0)), 100000000, 0, -170); (Tag3 ((("t", 1203)), [((("tail")), 100000000, 0, -166); ((("occurrences")), 100000000, 0, -169)], (0)), 100000000, 0, -171)]), ((Tag3 ((("t", 1203)), [(Tag2 ([((("head")), 100000000, 0, -165); ((("tail")), 100000000, 0, -166)]), 100000000, 0, -164); (Tag2 ([((("occurrence")), 100000000, 0, -168); ((("occurrences")), 100000000, 0, -169)]), 100000000, 0, -167)], (0)), 100000000, 0, -163)), (("runtime/tools.ml", 231, 7349, 7353), ("runtime/tools.ml", 232, 7417, 7470), 0), 0, Tag1 ("Refl__Tools", 633))], 0), 1, ((Tag3 (Tag1 (Tag2 (Tag1 ((Tag2 ("Refl__Tools")), "Vector"), (("Item", 1198))), "t"), [((("sequence")), 100000000, 0, -158); ((("occurrences")), 100000000, 0, -159)], (0)), 100000000, 0, -157)), [63; 63], [0; 0], 0, 0, (("runtime/tools.ml", 229, 7286, 7288), ("runtime/tools.ml", 232, 7417, 7470), 0), 0, 0, 0, Tag1 ("Refl__Tools", 631)), 1, 0); (("get", 1204), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "variable"), [((("index")), 100000000, 0, -155); ((("sequence")), 100000000, 0, -152); ((("value")), 100000000, 0, -150); ((("positive")), 100000000, 0, -156); ((("occurrences")), 100000000, 0, -153)], (0)), 100000000, 0, -154), (Tag1 (0, (Tag3 ((("t", 1203)), [((("sequence")), 100000000, 0, -152); ((("occurrences")), 100000000, 0, -153)], (0)), 100000000, 0, -151), (Tag3 (Tag1 ((("T", 1201)), "t"), [((("value")), 100000000, 0, -150)], (0)), 100000000, 0, -149), 0), 100000000, 0, -148), 0), 100000000, 0, -147), 0, (("runtime/tools.ml", 234, 7472, 7474), ("runtime/tools.ml", 236, 7553, 7600), 0), 0, Tag1 ("Refl__Tools", 634)), 0); (("make_transfer", 1205), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_arguments"), [((("source")), 100000000, 0, -145); ((("sub")), 100000000, 0, -141); ((("arg")), 100000000, 0, -139)], (0)), 100000000, 0, -146), (Tag1 (0, (Tag3 ((("t", 1203)), [((("sequence")), 100000000, 0, -138); ((("source")), 100000000, 0, -145)], (0)), 100000000, 0, -144), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [(Tag3 ((("t", 1203)), [((("sequence")), 100000000, 0, -138); ((("arg")), 100000000, 0, -139)], (0)), 100000000, 0, -137); (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "eq"), [((("sub")), 100000000, 0, -141); (Tag8 (([("Absent", (0))], (0, 100000000, 0, -143), 1, 0, 0)), 100000000, 0, -142)], (0)), 100000000, 0, -140)], (0)), 100000000, 0, -136), 0), 100000000, 0, -135), 0), 100000000, 0, -134), 0, (("runtime/tools.ml", 238, 7602, 7604), ("runtime/tools.ml", 240, 7698, 7752), 0), 0, Tag1 ("Refl__Tools", 635)), 0); Tag1 (("make", 1206), ([((("arity")), 100000000, 0, -119); ((("rec_group")), 100000000, 0, -120); ((("kinds")), 100000000, 0, -121)], 3, [[(("f", 813), 0, (Tag10 ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [(Tag9 (("a")), 100000000, 0, -123); (Tag9 (("structure")), 100000000, 0, -124); ((("arity")), 100000000, 0, -119); ((("rec_group")), 100000000, 0, -120); ((("kinds")), 100000000, 0, -121); (Tag9 (("ap")), 100000000, 0, -125); (Tag9 (("an")), 100000000, 0, -126); (Tag9 (("ad")), 100000000, 0, -127); (Tag9 (("gadt")), 100000000, 0, -128)], (0)), 100000000, 0, -133), (Tag1 (0, (Tag3 ((("t", 1203)), [((("arity")), 100000000, 0, -119); (Tag9 (("ad")), 100000000, 0, -127)], (0)), 100000000, 0, -132), (Tag3 (Tag1 ((("T", 1201)), "t"), [(Tag9 (("a")), 100000000, 0, -123)], (0)), 100000000, 0, -131), 0), 100000000, 0, -130), 0), 100000000, 0, -129), [(Tag9 (("a")), 100000000, 0, -123); (Tag9 (("structure")), 100000000, 0, -124); (Tag9 (("ap")), 100000000, 0, -125); (Tag9 (("an")), 100000000, 0, -126); (Tag9 (("ad")), 100000000, 0, -127); (Tag9 (("gadt")), 100000000, 0, -128)]), 100000000, 0, -122), (("runtime/tools.ml", 243, 7799, 7805), ("runtime/tools.ml", 245, 7918, 7962), 0), 0, Tag1 ("Refl__Tools", 637))]], 1, ((Tag3 (Tag1 (Tag2 (Tag1 ((Tag2 ("Refl__Tools")), "Vector"), (("Item", 1198))), "make"), [((("arity")), 100000000, 0, -119); ((("rec_group")), 100000000, 0, -120); ((("kinds")), 100000000, 0, -121)], (0)), 100000000, 0, -118)), [63; 15; 63], [0; 0; 0], 0, 0, (("runtime/tools.ml", 242, 7754, 7756), ("runtime/tools.ml", 246, 7963, 7968), 0), 0, 0, 1, Tag1 ("Refl__Tools", 636)), 1, 0); (("make", 1207), ((Tag1 (0, (Tag3 ((("make", 1206)), [((("arity")), 100000000, 0, -104); ((("rec_group")), 100000000, 0, -114); ((("kinds")), 100000000, 0, -115)], (0)), 100000000, 0, -117), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "vector"), [((("types")), 100000000, 0, -101); ((("structures")), 100000000, 0, -113); ((("arity")), 100000000, 0, -104); ((("rec_group")), 100000000, 0, -114); ((("kinds")), 100000000, 0, -115); ((("arguments")), 100000000, 0, -111); ((("gadt")), 100000000, 0, -116)], (0)), 100000000, 0, -112), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "transfer_skip"), [((("positive")), 100000000, 0, -107); ((("negative")), 100000000, 0, -108); ((("direct")), 100000000, 0, -105); ((("subpositive")), 100000000, 0, -109); ((("subnegative")), 100000000, 0, -110); ((("subdirect")), 100000000, 0, -102); ((("arguments")), 100000000, 0, -111)], (0)), 100000000, 0, -106), (Tag1 (0, (Tag3 ((("t", 1203)), [((("arity")), 100000000, 0, -104); ((("direct")), 100000000, 0, -105)], (0)), 100000000, 0, -103), (Tag3 ((("t", 1203)), [((("types")), 100000000, 0, -101); ((("subdirect")), 100000000, 0, -102)], (0)), 100000000, 0, -100), 0), 100000000, 0, -99), 0), 100000000, 0, -98), 0), 100000000, 0, -97), 0), 100000000, 0, -96), 0, (("runtime/tools.ml", 248, 7970, 7972), ("runtime/tools.ml", 255, 8251, 8277), 0), 0, Tag1 ("Refl__Tools", 638)), 0); Tag1 (("any", 1208), ([((("presence")), 100000000, 0, -87)], 1, Tag1 ([(("None", 816), (0), ((Tag3 ((("any", 1208)), [(Tag8 (([("Absent", (0))], (0, 100000000, 0, -90), 1, 0, 0)), 100000000, 0, -89)], (0)), 100000000, 0, -88)), (("runtime/tools.ml", 258, 8302, 8306), ("runtime/tools.ml", 258, 8302, 8328), 0), 0, Tag1 ("Refl__Tools", 640)); (("Some", 817), Tag1 ([(("item", 818), 0, (Tag10 ((Tag3 (Tag1 ((("T", 1201)), "t"), [(Tag9 (("a")), 100000000, 0, -94)], (0)), 100000000, 0, -95), [(Tag9 (("a")), 100000000, 0, -94)]), 100000000, 0, -93), (("runtime/tools.ml", 260, 8344, 8354), ("runtime/tools.ml", 260, 8344, 8373), 0), 0, Tag1 ("Refl__Tools", 641))]), ((Tag3 ((("any", 1208)), [((0), 100000000, 0, -92)], (0)), 100000000, 0, -91)), (("runtime/tools.ml", 259, 8329, 8333), ("runtime/tools.ml", 261, 8374, 8392), 0), 0, Tag1 ("Refl__Tools", 642))], 0), 1, ((Tag3 (Tag1 (Tag2 (Tag1 ((Tag2 ("Refl__Tools")), "Vector"), (("Item", 1198))), "any"), [((("presence")), 100000000, 0, -87)], (0)), 100000000, 0, -86)), [63], [0], 0, 0, (("runtime/tools.ml", 257, 8279, 8281), ("runtime/tools.ml", 261, 8374, 8392), 0), 0, 0, 0, Tag1 ("Refl__Tools", 639)), 1, 0); (("append", 1209), ((Tag1 (0, (Tag3 ((("any", 1208)), [((("presence")), 100000000, 0, -84)], (0)), 100000000, 0, -85), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "presences"), [((("presence")), 100000000, 0, -84); ((("directs")), 100000000, 0, -81)], (0)), 100000000, 0, -83), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -79); ((("directs")), 100000000, 0, -81)], (0)), 100000000, 0, -82), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("directs")), 100000000, 0, -81); ((("direct")), 100000000, 0, -75); ((("subdirect")), 100000000, 0, -72)], (0)), 100000000, 0, -80), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "length"), [((("count")), 100000000, 0, -79); ((("types")), 100000000, 0, -77)], (0)), 100000000, 0, -78), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "append"), [((("types")), 100000000, 0, -77); ((("arity")), 100000000, 0, -74); ((("subarity")), 100000000, 0, -71)], (0)), 100000000, 0, -76), (Tag1 (0, (Tag3 ((("t", 1203)), [((("arity")), 100000000, 0, -74); ((("direct")), 100000000, 0, -75)], (0)), 100000000, 0, -73), (Tag3 ((("t", 1203)), [((("subarity")), 100000000, 0, -71); ((("subdirect")), 100000000, 0, -72)], (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0), 100000000, 0, -68), 0), 100000000, 0, -67), 0), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0), 100000000, 0, -63), 0, (("runtime/tools.ml", 263, 8394, 8396), ("runtime/tools.ml", 271, 8649, 8678), 0), 0, Tag1 ("Refl__Tools", 649)), 0); (("to_sequence", 1210), ((Tag1 (0, (Tag3 ((("any", 1208)), [(Tag8 (([("Present", (0))], (0, 100000000, 0, -62), 1, 0, 0)), 100000000, 0, -61)], (0)), 100000000, 0, -60), (Tag1 (0, (Tag3 ((("t", 1203)), [((("sequence")), 100000000, 0, -57); ((("occurrences")), 100000000, 0, -59)], (0)), 100000000, 0, -58), (Tag3 (Tag1 (Tag2 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "Sequence"), (("T", 1201))), "t"), [((("sequence")), 100000000, 0, -57)], (0)), 100000000, 0, -56), 0), 100000000, 0, -55), 0), 100000000, 0, -54), 0, (("runtime/tools.ml", 273, 8680, 8682), ("runtime/tools.ml", 274, 8700, 8776), 0), 0, Tag1 ("Refl__Tools", 650)), 0)])), 0, (("runtime/tools.ml", 548, 18629, 18631), ("runtime/tools.ml", 566, 19082, 19087), 0), Tag1 ("Refl__Tools", 1931)), 0, 0)]), 0, (("runtime/fold.ml", 9, 84, 84), ("runtime/fold.ml", 9, 84, 125), 0), Tag1 ("Refl__Fold", 41)), 0, 0); (("fold", 1192), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Refl__")), "Desc"), "desc"), [((("a")), 100000000, 0, -5); ((("structure")), 100000000, 0, -11); ((("arity")), 100000000, 0, -8); ((("rec_group")), 100000000, 0, -12); (Tag8 (([("Array", (0)); ("Arrow", (0)); ("Attributes", (0)); ("Constr", (0)); ("Exists", (0)); ("Lazy", (0)); ("MapOpaque", (0)); ("Object", (0)); ("Opaque", (0)); ("Poly", (0)); ("Record", (0)); ("Tuple", (0)); ("Variable", (0)); ("Variant", (0))], ((0), 100000000, 0, -14), 0, 0, 0)), 100000000, 0, -13); ((("positive")), 100000000, 0, -15); ((("negative")), 100000000, 0, -16); ((("direct")), 100000000, 0, -9); ((("gadt")), 100000000, 0, -17)], (0)), 100000000, 0, -10), (Tag1 (0, (Tag3 (Tag1 ((("Folds", 1191)), "t"), [((("arity")), 100000000, 0, -8); ((("acc")), 100000000, 0, -6); ((("direct")), 100000000, 0, -9)], (0)), 100000000, 0, -7), (Tag3 (Tag1 ((("Fold", 1190)), "t"), [((("a")), 100000000, 0, -5); ((("acc")), 100000000, 0, -6)], (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("runtime/fold.ml", 11, 127, 131), ("runtime/fold.ml", 11, 127, 135), 0), 0, Tag1 ("Refl__Fold", 42)), 0)], "Refl__Fold", [("Refl__Fold", ("4\162(!\134\150\227x\133a\237\235f1\240\186")); ("Traverse__Values", ("}\239\001\023\024&\227\167Sl\002\148\026\190\180\025")); ("Traverse__Modules", ("=\175q\026#\242\139\b\202\252\139\207\195\170\254\202")); ("Traverse__Interface", ("\252\146\219\195\199\167\234\143+\145l\200\254\244s}")); ("Traverse__", ("y\220\011\221C%Ob7%t,\252N21")); ("Traverse", ("\019\209\190\177II\1552 \b\174\006\b\1643\152")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stdcompat__stdlib_s", ("?\143\027\238\145\138\139e`\216P\248\156\178=\206")); ("Stdcompat__init", ("r\254q\255\217]\232\239'\192d\165\222\016\157\133")); ("Stdcompat", ("\139\1989\181:\137\230\132\240\223\206\210Y\135S\\")); ("Refl__Tools", ("i\215\207\166d\225\190DU\241\194\224\137P\158e")); ("Refl__Desc", ("\221\150mt\149.2\132\189\244\007\164&\203\225\172")); ("Refl__", ("i\003\196\150\161\159\229g\157\181\149\015g%\221\240")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
 ('arity, 'acc, 'direct) Folds.t -> ('a, 'acc) Fold.t
