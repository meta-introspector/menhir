type universes_entry =
    Monomorphic_entry
  | Polymorphic_entry of Univ.UContext.t
type inductive_universes_entry =
    Monomorphic_ind_entry
  | Polymorphic_ind_entry of Univ.UContext.t
  | Template_ind_entry of Univ.ContextSet.t
type variance_entry = Univ.Variance.t option array
type 'a in_universes_entry = 'a * universes_entry
type one_inductive_entry = {
  mind_entry_typename : Names.Id.t;
  mind_entry_arity : Constr.constr;
  mind_entry_consnames : Names.Id.t list;
  mind_entry_lc : Constr.constr list;
}
type mutual_inductive_entry = {
  mind_entry_record : Names.Id.t array option option;
  mind_entry_finite : Declarations.recursivity_kind;
  mind_entry_params : Constr.rel_context;
  mind_entry_inds : one_inductive_entry list;
  mind_entry_universes : inductive_universes_entry;
  mind_entry_variance : variance_entry option;
  mind_entry_private : bool option;
}
type definition_entry = {
  const_entry_body : Constr.constr;
  const_entry_secctx : Names.Id.Set.t option;
  const_entry_type : Constr.types option;
  const_entry_universes : universes_entry;
  const_entry_inline_code : bool;
}
type section_def_entry = {
  secdef_body : Constr.constr;
  secdef_type : Constr.types option;
}
type 'a opaque_entry = {
  opaque_entry_body : 'a;
  opaque_entry_secctx : Names.Id.Set.t;
  opaque_entry_type : Constr.types;
  opaque_entry_universes : universes_entry;
}
type inline = int option
type parameter_entry = {
  parameter_entry_secctx : Names.Id.Set.t option;
  parameter_entry_type : Constr.types;
  parameter_entry_universes : universes_entry;
  parameter_entry_inline_code : inline;
}
type primitive_entry = {
  prim_entry_type : Constr.types in_universes_entry option;
  prim_entry_content : CPrimitives.op_or_type;
}
type 'a proof_output = Constr.constr Univ.in_universe_context_set * 'a
type constant_entry =
    DefinitionEntry : definition_entry -> constant_entry
  | ParameterEntry : parameter_entry -> constant_entry
  | PrimitiveEntry : primitive_entry -> constant_entry
type module_struct_entry =
    (Constr.constr * Univ.AbstractContext.t option)
    Declarations.module_alg_expr
type module_params_entry = (Names.MBId.t * module_struct_entry * inline) list
type module_type_entry = module_params_entry * module_struct_entry
type module_entry =
    MType of module_params_entry * module_struct_entry
  | MExpr of module_params_entry * module_struct_entry *
      ("DEBUG:rule", [Tag1 (("universes_entry", 938), (0, 0, Tag1 ([(("Monomorphic_entry", 512), (0), 0, (("kernel/entries.mli", 20, 944, 946), ("kernel/entries.mli", 20, 944, 965), 0), 0, Tag1 ("Entries", 2)); (("Polymorphic_entry", 513), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "UContext"), "t"), 0, (0)), 100000000, 0, -83)]), 0, (("kernel/entries.mli", 21, 966, 968), ("kernel/entries.mli", 21, 966, 1006), 0), 0, Tag1 ("Entries", 3))], 0), 1, 0, 0, 0, 0, 0, (("kernel/entries.mli", 19, 921, 921), ("kernel/entries.mli", 21, 966, 1006), 0), 0, 0, 0, Tag1 ("Entries", 1)), 1, 0); Tag1 (("inductive_universes_entry", 939), (0, 0, Tag1 ([(("Monomorphic_ind_entry", 581), (0), 0, (("kernel/entries.mli", 24, 1041, 1043), ("kernel/entries.mli", 24, 1041, 1066), 0), 0, Tag1 ("Entries", 5)); (("Polymorphic_ind_entry", 582), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "UContext"), "t"), 0, (0)), 100000000, 0, -81)]), 0, (("kernel/entries.mli", 25, 1067, 1069), ("kernel/entries.mli", 25, 1067, 1111), 0), 0, Tag1 ("Entries", 6)); (("Template_ind_entry", 583), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "ContextSet"), "t"), 0, (0)), 100000000, 0, -82)]), 0, (("kernel/entries.mli", 26, 1112, 1114), ("kernel/entries.mli", 26, 1112, 1155), 0), 0, Tag1 ("Entries", 7))], 0), 1, 0, 0, 0, 0, 0, (("kernel/entries.mli", 23, 1008, 1008), ("kernel/entries.mli", 26, 1112, 1155), 0), 0, 0, 0, Tag1 ("Entries", 4)), 1, 0); Tag1 (("variance_entry", 940), (0, 0, 0, 1, ((Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Variance"), "t"), 0, (0)), 100000000, 0, -80)], (0)), 100000000, 0, -79)], (0)), 100000000, 0, -78)), 0, 0, 0, 0, (("kernel/entries.mli", 28, 1157, 1157), ("kernel/entries.mli", 28, 1157, 1207), 0), 0, 0, 0, Tag1 ("Entries", 8)), 1, 0); Tag1 (("in_universes_entry", 941), ([((("a")), 100000000, 0, -76)], 1, 0, 1, ((Tag2 ([((("a")), 100000000, 0, -76); (Tag3 ((("universes_entry", 938)), 0, (0)), 100000000, 0, -77)]), 100000000, 0, -75)), [25], [0], 0, 0, (("kernel/entries.mli", 30, 1209, 1209), ("kernel/entries.mli", 30, 1209, 1258), 0), 0, 0, 0, Tag1 ("Entries", 9)), 1, 0); Tag1 (("one_inductive_entry", 942), (0, 0, [[(("mind_entry_typename", 712), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -69), (("kernel/entries.mli", 45, 1824, 1826), ("kernel/entries.mli", 45, 1824, 1853), 0), 0, Tag1 ("Entries", 11)); (("mind_entry_arity", 713), 0, (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -70), (("kernel/entries.mli", 46, 1854, 1856), ("kernel/entries.mli", 46, 1854, 1882), 0), 0, Tag1 ("Entries", 12)); (("mind_entry_consnames", 714), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -72)], (0)), 100000000, 0, -71), (("kernel/entries.mli", 47, 1883, 1885), ("kernel/entries.mli", 47, 1883, 1918), 0), 0, Tag1 ("Entries", 13)); (("mind_entry_lc", 715), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -74)], (0)), 100000000, 0, -73), (("kernel/entries.mli", 48, 1919, 1921), ("kernel/entries.mli", 48, 1919, 1949), 0), 0, Tag1 ("Entries", 14))]], 1, 0, 0, 0, 0, 0, (("kernel/entries.mli", 44, 1795, 1795), ("kernel/entries.mli", 49, 1950, 1951), 0), 0, 0, 0, Tag1 ("Entries", 10)), 1, 0); Tag1 (("mutual_inductive_entry", 943), (0, 0, [[(("mind_entry_record", 717), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -59)], (0)), 100000000, 0, -58)], (0)), 100000000, 0, -57)], (0)), 100000000, 0, -56), (("kernel/entries.mli", 52, 1985, 1987), ("kernel/entries.mli", 52, 1985, 2034), 0), 0, Tag1 ("Entries", 16)); (("mind_entry_finite", 750), 0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "recursivity_kind"), 0, (0)), 100000000, 0, -60), (("kernel/entries.mli", 56, 2220, 2222), ("kernel/entries.mli", 56, 2220, 2272), 0), 0, Tag1 ("Entries", 17)); (("mind_entry_params", 751), 0, (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -61), (("kernel/entries.mli", 57, 2273, 2275), ("kernel/entries.mli", 57, 2273, 2314), 0), 0, Tag1 ("Entries", 18)); (("mind_entry_inds", 752), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("one_inductive_entry", 942)), 0, (0)), 100000000, 0, -63)], (0)), 100000000, 0, -62), (("kernel/entries.mli", 58, 2315, 2317), ("kernel/entries.mli", 58, 2315, 2360), 0), 0, Tag1 ("Entries", 19)); (("mind_entry_universes", 753), 0, (Tag3 ((("inductive_universes_entry", 939)), 0, (0)), 100000000, 0, -64), (("kernel/entries.mli", 59, 2361, 2363), ("kernel/entries.mli", 59, 2361, 2412), 0), 0, Tag1 ("Entries", 20)); (("mind_entry_variance", 754), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("variance_entry", 940)), 0, (0)), 100000000, 0, -66)], (0)), 100000000, 0, -65), (("kernel/entries.mli", 60, 2413, 2415), ("kernel/entries.mli", 60, 2413, 2459), 0), 0, Tag1 ("Entries", 21)); (("mind_entry_private", 755), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -68)], (0)), 100000000, 0, -67), (("kernel/entries.mli", 64, 2610, 2612), ("kernel/entries.mli", 64, 2610, 2645), 0), 0, Tag1 ("Entries", 22))]], 1, 0, 0, 0, 0, 0, (("kernel/entries.mli", 51, 1953, 1953), ("kernel/entries.mli", 65, 2646, 2647), 0), 0, 0, 0, Tag1 ("Entries", 15)), 1, 0); Tag1 (("definition_entry", 944), (0, 0, [[(("const_entry_body", 814), 0, (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -49), (("kernel/entries.mli", 70, 2717, 2719), ("kernel/entries.mli", 70, 2717, 2745), 0), 0, Tag1 ("Entries", 24)); (("const_entry_secctx", 860), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -51)], (0)), 100000000, 0, -50), (("kernel/entries.mli", 72, 2780, 2782), ("kernel/entries.mli", 72, 2780, 2819), 0), 0, Tag1 ("Entries", 25)); (("const_entry_type", 861), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -53)], (0)), 100000000, 0, -52), (("kernel/entries.mli", 73, 2820, 2822), ("kernel/entries.mli", 73, 2820, 2854), 0), 0, Tag1 ("Entries", 26)); (("const_entry_universes", 862), 0, (Tag3 ((("universes_entry", 938)), 0, (0)), 100000000, 0, -54), (("kernel/entries.mli", 74, 2855, 2857), ("kernel/entries.mli", 74, 2855, 2897), 0), 0, Tag1 ("Entries", 27)); (("const_entry_inline_code", 863), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -55), (("kernel/entries.mli", 75, 2898, 2900), ("kernel/entries.mli", 75, 2898, 2931), 0), 0, Tag1 ("Entries", 28))]], 1, 0, 0, 0, 0, 0, (("kernel/entries.mli", 69, 2691, 2691), ("kernel/entries.mli", 76, 2932, 2933), 0), 0, 0, 0, Tag1 ("Entries", 23)), 1, 0); Tag1 (("section_def_entry", 945), (0, 0, [[(("secdef_body", 865), 0, (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -46), (("kernel/entries.mli", 79, 2962, 2964), ("kernel/entries.mli", 79, 2962, 2985), 0), 0, Tag1 ("Entries", 30)); (("secdef_type", 866), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -48)], (0)), 100000000, 0, -47), (("kernel/entries.mli", 80, 2986, 2988), ("kernel/entries.mli", 80, 2986, 3015), 0), 0, Tag1 ("Entries", 31))]], 1, 0, 0, 0, 0, 0, (("kernel/entries.mli", 78, 2935, 2935), ("kernel/entries.mli", 81, 3016, 3017), 0), 0, 0, 0, Tag1 ("Entries", 29)), 1, 0); Tag1 (("opaque_entry", 946), ([((("a")), 100000000, 0, -42)], 1, [[(("opaque_entry_body", 868), 0, ((("a")), 100000000, 0, -42), (("kernel/entries.mli", 84, 3044, 3046), ("kernel/entries.mli", 84, 3044, 3071), 0), 0, Tag1 ("Entries", 33)); (("opaque_entry_secctx", 869), 0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -43), (("kernel/entries.mli", 86, 3106, 3108), ("kernel/entries.mli", 86, 3106, 3139), 0), 0, Tag1 ("Entries", 34)); (("opaque_entry_type", 870), 0, (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -44), (("kernel/entries.mli", 87, 3140, 3142), ("kernel/entries.mli", 87, 3140, 3175), 0), 0, Tag1 ("Entries", 35)); (("opaque_entry_universes", 871), 0, (Tag3 ((("universes_entry", 938)), 0, (0)), 100000000, 0, -45), (("kernel/entries.mli", 88, 3176, 3178), ("kernel/entries.mli", 88, 3176, 3221), 0), 0, Tag1 ("Entries", 36))]], 1, 0, [25], [0], 0, 0, (("kernel/entries.mli", 83, 3019, 3019), ("kernel/entries.mli", 89, 3222, 3223), 0), 0, 0, 0, Tag1 ("Entries", 32)), 1, 0); Tag1 (("inline", 947), (0, 0, 0, 1, ((Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -41)], (0)), 100000000, 0, -40)), 0, 0, 0, 0, (("kernel/entries.mli", 91, 3225, 3225), ("kernel/entries.mli", 91, 3225, 3249), 0), 0, 0, 0, Tag1 ("Entries", 37)), 1, 0); Tag1 (("parameter_entry", 948), (0, 0, [[(("parameter_entry_secctx", 874), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -36)], (0)), 100000000, 0, -35), (("kernel/entries.mli", 94, 3319, 3321), ("kernel/entries.mli", 94, 3319, 3362), 0), 0, Tag1 ("Entries", 39)); (("parameter_entry_type", 875), 0, (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -37), (("kernel/entries.mli", 95, 3363, 3365), ("kernel/entries.mli", 95, 3363, 3394), 0), 0, Tag1 ("Entries", 40)); (("parameter_entry_universes", 876), 0, (Tag3 ((("universes_entry", 938)), 0, (0)), 100000000, 0, -38), (("kernel/entries.mli", 96, 3395, 3397), ("kernel/entries.mli", 96, 3395, 3441), 0), 0, Tag1 ("Entries", 41)); (("parameter_entry_inline_code", 877), 0, (Tag3 ((("inline", 947)), 0, (0)), 100000000, 0, -39), (("kernel/entries.mli", 97, 3442, 3444), ("kernel/entries.mli", 97, 3442, 3481), 0), 0, Tag1 ("Entries", 42))]], 1, 0, 0, 0, 0, 0, (("kernel/entries.mli", 93, 3294, 3294), ("kernel/entries.mli", 98, 3482, 3483), 0), 0, 0, 0, Tag1 ("Entries", 38)), 1, 0); Tag1 (("primitive_entry", 949), (0, 0, [[(("prim_entry_type", 879), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("in_universes_entry", 941)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -33)], (0)), 100000000, 0, -32)], (0)), 100000000, 0, -31), (("kernel/entries.mli", 101, 3510, 3512), ("kernel/entries.mli", 101, 3510, 3562), 0), 0, Tag1 ("Entries", 44)); (("prim_entry_content", 908), 0, (Tag3 (Tag1 ((Tag2 ("CPrimitives")), "op_or_type"), 0, (0)), 100000000, 0, -34), (("kernel/entries.mli", 102, 3563, 3565), ("kernel/entries.mli", 102, 3563, 3609), 0), 0, Tag1 ("Entries", 45))]], 1, 0, 0, 0, 0, 0, (("kernel/entries.mli", 100, 3485, 3485), ("kernel/entries.mli", 103, 3610, 3611), 0), 0, 0, 0, Tag1 ("Entries", 43)), 1, 0); Tag1 (("proof_output", 950), ([((("a")), 100000000, 0, -30)], 1, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((Tag2 ("Univ")), "in_universe_context_set"), [(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -29)], (0)), 100000000, 0, -28); ((("a")), 100000000, 0, -30)]), 100000000, 0, -27)), [25], [0], 0, 0, (("kernel/entries.mli", 105, 3613, 3613), ("kernel/entries.mli", 105, 3613, 3676), 0), 0, 0, 0, Tag1 ("Entries", 46)), 1, 0); Tag1 (("constant_entry", 951), (0, 0, Tag1 ([(("DefinitionEntry", 911), ([(Tag3 ((("definition_entry", 944)), 0, (0)), 100000000, 0, -22)]), ((Tag3 ((("constant_entry", 951)), 0, (0)), 100000000, 0, -21)), (("kernel/entries.mli", 108, 3700, 3702), ("kernel/entries.mli", 108, 3700, 3756), 0), 0, Tag1 ("Entries", 48)); (("ParameterEntry", 912), ([(Tag3 ((("parameter_entry", 948)), 0, (0)), 100000000, 0, -24)]), ((Tag3 ((("constant_entry", 951)), 0, (0)), 100000000, 0, -23)), (("kernel/entries.mli", 109, 3757, 3759), ("kernel/entries.mli", 109, 3757, 3811), 0), 0, Tag1 ("Entries", 49)); (("PrimitiveEntry", 913), ([(Tag3 ((("primitive_entry", 949)), 0, (0)), 100000000, 0, -26)]), ((Tag3 ((("constant_entry", 951)), 0, (0)), 100000000, 0, -25)), (("kernel/entries.mli", 110, 3812, 3814), ("kernel/entries.mli", 110, 3812, 3866), 0), 0, Tag1 ("Entries", 50))], 0), 1, 0, 0, 0, 0, 0, (("kernel/entries.mli", 107, 3678, 3678), ("kernel/entries.mli", 110, 3812, 3866), 0), 0, 0, 0, Tag1 ("Entries", 47)), 1, 0); Tag1 (("module_struct_entry", 952), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Declarations")), "module_alg_expr"), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -18); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "AbstractContext"), "t"), 0, (0)), 100000000, 0, -20)], (0)), 100000000, 0, -19)]), 100000000, 0, -17)], (0)), 100000000, 0, -16)), 0, 0, 0, 0, (("kernel/entries.mli", 114, 3889, 3889), ("kernel/entries.mli", 114, 3889, 3985), 0), 0, 0, 0, Tag1 ("Entries", 51)), 1, 0); Tag1 (("module_params_entry", 953), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MBId"), "t"), 0, (0)), 100000000, 0, -13); (Tag3 ((("module_struct_entry", 952)), 0, (0)), 100000000, 0, -14); (Tag3 ((("inline", 947)), 0, (0)), 100000000, 0, -15)]), 100000000, 0, -12)], (0)), 100000000, 0, -11)), 0, 0, 0, 0, (("kernel/entries.mli", 116, 3987, 3987), ("kernel/entries.mli", 117, 4014, 4060), 0), 0, 0, 0, Tag1 ("Entries", 52)), 1, 0); Tag1 (("module_type_entry", 954), (0, 0, 0, 1, ((Tag2 ([(Tag3 ((("module_params_entry", 953)), 0, (0)), 100000000, 0, -9); (Tag3 ((("module_struct_entry", 952)), 0, (0)), 100000000, 0, -10)]), 100000000, 0, -8)), 0, 0, 0, 0, (("kernel/entries.mli", 119, 4081, 4081), ("kernel/entries.mli", 119, 4081, 4147), 0), 0, 0, 0, Tag1 ("Entries", 53)), 1, 0); Tag1 (("module_entry", 955), (0, 0, Tag1 ([(("MType", 936), ([(Tag3 ((("module_params_entry", 953)), 0, (0)), 100000000, 0, -2); (Tag3 ((("module_struct_entry", 952)), 0, (0)), 100000000, 0, -3)]), 0, (("kernel/entries.mli", 122, 4169, 4171), ("kernel/entries.mli", 122, 4169, 4223), 0), 0, Tag1 ("Entries", 55)); (("MExpr", 937), ([(Tag3 ((("module_params_entry", 953)), 0, (0)), 100000000, 0, -4); (Tag3 ((("module_struct_entry", 952)), 0, (0)), 100000000, 0, -5); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_struct_entry", 952)), 0, (0)), 100000000, 0, -7)], (0)), 100000000, 0, -6)]), 0, (("kernel/entries.mli", 123, 4224, 4226), ("kernel/entries.mli", 124, 4237, 4313), 0), 0, Tag1 ("Entries", 56))], 0), 1, 0, 0, 0, 0, 0, (("kernel/entries.mli", 121, 4149, 4149), ("kernel/entries.mli", 124, 4237, 4313), 0), 0, 0, 0, Tag1 ("Entries", 54)), 1, 0)], "Entries", [("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [1; (0)])
module_struct_entry option
