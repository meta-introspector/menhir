type +'a t
val head : 'a t -> 'a
val tail : 'a t -> 'a t option
val singleton : 'a -> 'a t
val iter : ('a -> unit) -> 'a t -> unit
val map : ('a -> 'b) -> 'a t -> 'b t
val map2 : ('a -> 'b -> 'c) -> 'a t -> 'b t -> 'c t
val map_head : ('a -> 'a) -> 'a t -> 'a t
val push : 'a -> 'a t option -> 'a t
val to_list : 'a t -> 'a list
val of_list : 'a list -> 'a t
val repr : 'a t -> 'a * 'a list("DEBUG:rule", [Tag1 (("t", 282), ([((("a")), 100000000, 0, -68)], 1, 0, 1, 0, [1], [2], 0, 0, (("clib/neList.mli", 12, 699, 699), ("clib/neList.mli", 12, 699, 709), 0), 0, 0, 0, Tag1 ("NeList", 0)), 1, 0); (("head", 283), ((Tag1 (0, (Tag3 ((("t", 282)), [((("a")), 100000000, 0, -66)], (0)), 100000000, 0, -67), ((("a")), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("clib/neList.mli", 14, 711, 711), ("clib/neList.mli", 14, 711, 732), 0), 0, Tag1 ("NeList", 1)), 0); (("tail", 284), ((Tag1 (0, (Tag3 ((("t", 282)), [((("a")), 100000000, 0, -63)], (0)), 100000000, 0, -64), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 282)), [((("a")), 100000000, 0, -63)], (0)), 100000000, 0, -62)], (0)), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("clib/neList.mli", 16, 734, 734), ("clib/neList.mli", 16, 734, 764), 0), 0, Tag1 ("NeList", 2)), 0); (("singleton", 285), ((Tag1 (0, ((("a")), 100000000, 0, -59), (Tag3 ((("t", 282)), [((("a")), 100000000, 0, -59)], (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0, (("clib/neList.mli", 18, 766, 766), ("clib/neList.mli", 18, 766, 792), 0), 0, Tag1 ("NeList", 3)), 0); (("iter", 286), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -54), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -56), 0), 100000000, 0, -55), (Tag1 (0, (Tag3 ((("t", 282)), [((("a")), 100000000, 0, -54)], (0)), 100000000, 0, -53), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0), 100000000, 0, -50), 0, (("clib/neList.mli", 20, 794, 794), ("clib/neList.mli", 20, 794, 833), 0), 0, Tag1 ("NeList", 4)), 0); (("map", 287), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -48), ((("b")), 100000000, 0, -46), 0), 100000000, 0, -49), (Tag1 (0, (Tag3 ((("t", 282)), [((("a")), 100000000, 0, -48)], (0)), 100000000, 0, -47), (Tag3 ((("t", 282)), [((("b")), 100000000, 0, -46)], (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("clib/neList.mli", 22, 835, 835), ("clib/neList.mli", 22, 835, 871), 0), 0, Tag1 ("NeList", 5)), 0); (("map2", 288), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -40), (Tag1 (0, ((("b")), 100000000, 0, -38), ((("c")), 100000000, 0, -36), 0), 100000000, 0, -42), 0), 100000000, 0, -41), (Tag1 (0, (Tag3 ((("t", 282)), [((("a")), 100000000, 0, -40)], (0)), 100000000, 0, -39), (Tag1 (0, (Tag3 ((("t", 282)), [((("b")), 100000000, 0, -38)], (0)), 100000000, 0, -37), (Tag3 ((("t", 282)), [((("c")), 100000000, 0, -36)], (0)), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0), 100000000, 0, -32), 0, (("clib/neList.mli", 24, 873, 873), ("clib/neList.mli", 24, 873, 924), 0), 0, Tag1 ("NeList", 6)), 0); (("map_head", 289), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -29), ((("a")), 100000000, 0, -29), 0), 100000000, 0, -31), (Tag1 (0, (Tag3 ((("t", 282)), [((("a")), 100000000, 0, -29)], (0)), 100000000, 0, -30), (Tag3 ((("t", 282)), [((("a")), 100000000, 0, -29)], (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("clib/neList.mli", 26, 926, 926), ("clib/neList.mli", 26, 926, 967), 0), 0, Tag1 ("NeList", 7)), 0); (("push", 290), ((Tag1 (0, ((("a")), 100000000, 0, -23), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 282)), [((("a")), 100000000, 0, -23)], (0)), 100000000, 0, -25)], (0)), 100000000, 0, -24), (Tag3 ((("t", 282)), [((("a")), 100000000, 0, -23)], (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("clib/neList.mli", 28, 969, 969), ("clib/neList.mli", 28, 969, 1005), 0), 0, Tag1 ("NeList", 8)), 0); (("to_list", 291), ((Tag1 (0, (Tag3 ((("t", 282)), [((("a")), 100000000, 0, -18)], (0)), 100000000, 0, -19), (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -18)], (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("clib/neList.mli", 30, 1007, 1007), ("clib/neList.mli", 30, 1007, 1036), 0), 0, Tag1 ("NeList", 9)), 0); (("of_list", 292), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -14)], (0)), 100000000, 0, -15), (Tag3 ((("t", 282)), [((("a")), 100000000, 0, -14)], (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("clib/neList.mli", 33, 1072, 1072), ("clib/neList.mli", 33, 1072, 1101), 0), 0, Tag1 ("NeList", 10)), 0); (("repr", 293), ((Tag1 (0, (Tag3 ((("t", 282)), [((("a")), 100000000, 0, -9)], (0)), 100000000, 0, -11), (Tag2 ([((("a")), 100000000, 0, -9); (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -9)], (0)), 100000000, 0, -10)]), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("clib/neList.mli", 35, 1103, 1103), ("clib/neList.mli", 35, 1103, 1134), 0), 0, Tag1 ("NeList", 11)), 0); (("of_repr", 294), ((Tag1 (0, (Tag2 ([((("a")), 100000000, 0, -4); (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -4)], (0)), 100000000, 0, -6)]), 100000000, 0, -5), (Tag3 ((("t", 282)), [((("a")), 100000000, 0, -4)], (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("clib/neList.mli", 37, 1136, 1136), ("clib/neList.mli", 37, 1136, 1170), 0), 0, Tag1 ("NeList", 12)), 0)], "NeList", [("NeList", ("$\131M\175\196\245\161\207\129\012?\158\175\138\160\247")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val of_repr : 'a * 'a list -> 'a t
