val sexp_grammar_with_tags :
  Sexplib0__.Sexp_grammar.grammar ->
  tags:(string * Sexplib0__.Sexp.t) list -> Sexplib0__.Sexp_grammar.grammar
val sexp_grammar_with_tag_list :
  'a Sexplib0__.Sexp_grammar.with_tag_list ->
  tags:(string * Sexplib0__.Sexp.t) list ->
  'a Sexplib0__.Sexp_grammar.with_tag_list
val unit_sexp_grammar : unit Sexplib0__.Sexp_grammar.t
val bool_sexp_grammar : bool Sexplib0__.Sexp_grammar.t
val string_sexp_grammar : string Sexplib0__.Sexp_grammar.t
val bytes_sexp_grammar : bytes Sexplib0__.Sexp_grammar.t
val char_sexp_grammar : char Sexplib0__.Sexp_grammar.t
val int_sexp_grammar : int Sexplib0__.Sexp_grammar.t
val float_sexp_grammar : float Sexplib0__.Sexp_grammar.t
val int32_sexp_grammar : int32 Sexplib0__.Sexp_grammar.t
val int64_sexp_grammar : int64 Sexplib0__.Sexp_grammar.t
val nativeint_sexp_grammar : nativeint Sexplib0__.Sexp_grammar.t
val sexp_t_sexp_grammar : Sexplib0__.Sexp.t Sexplib0__.Sexp_grammar.t
val ref_sexp_grammar :
  'a Sexplib0__.Sexp_grammar.t -> 'a ref Sexplib0__.Sexp_grammar.t
val lazy_t_sexp_grammar :
  'a Sexplib0__.Sexp_grammar.t -> 'a lazy_t Sexplib0__.Sexp_grammar.t
val option_sexp_grammar :
  'a Sexplib0__.Sexp_grammar.t -> 'a option Sexplib0__.Sexp_grammar.t
val list_sexp_grammar :
  'a Sexplib0__.Sexp_grammar.t -> 'a list Sexplib0__.Sexp_grammar.t
val array_sexp_grammar :
  'a Sexplib0__.Sexp_grammar.t -> 'a array Sexplib0__.Sexp_grammar.t
val opaque_sexp_grammar : 'a Sexplib0__.Sexp_grammar.t
("DEBUG:rule", [(("sexp_grammar_with_tags", 355), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "grammar"), 0, (0)), 100000000, 0, -69), (Tag1 (("tags"), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -67); (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -68)]), 100000000, 0, -66)], (0)), 100000000, 0, -65), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "grammar"), 0, (0)), 100000000, 0, -64), 0), 100000000, 0, -63), 0), 100000000, 0, -62), 0, (("src/sexp_conv_grammar.mli", 3, 30, 30), ("src/sexp_conv_grammar.mli", 6, 116, 141), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 1)), 0); (("sexp_grammar_with_tag_list", 356), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "with_tag_list"), [((("a")), 100000000, 0, -56)], (0)), 100000000, 0, -61), (Tag1 (("tags"), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -59); (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -60)]), 100000000, 0, -58)], (0)), 100000000, 0, -57), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "with_tag_list"), [((("a")), 100000000, 0, -56)], (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("src/sexp_conv_grammar.mli", 8, 143, 143), ("src/sexp_conv_grammar.mli", 11, 242, 276), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 2)), 0); (("unit_sexp_grammar", 357), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -52)], (0)), 100000000, 0, -51), 0, (("src/sexp_conv_grammar.mli", 15, 312, 312), ("src/sexp_conv_grammar.mli", 15, 312, 355), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 3)), 0); (("bool_sexp_grammar", 358), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -50)], (0)), 100000000, 0, -49), 0, (("src/sexp_conv_grammar.mli", 16, 356, 356), ("src/sexp_conv_grammar.mli", 16, 356, 399), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 4)), 0); (("string_sexp_grammar", 359), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -48)], (0)), 100000000, 0, -47), 0, (("src/sexp_conv_grammar.mli", 17, 400, 400), ("src/sexp_conv_grammar.mli", 17, 400, 447), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 5)), 0); (("bytes_sexp_grammar", 360), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -46)], (0)), 100000000, 0, -45), 0, (("src/sexp_conv_grammar.mli", 18, 448, 448), ("src/sexp_conv_grammar.mli", 18, 448, 493), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 6)), 0); (("char_sexp_grammar", 361), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -44)], (0)), 100000000, 0, -43), 0, (("src/sexp_conv_grammar.mli", 19, 494, 494), ("src/sexp_conv_grammar.mli", 19, 494, 537), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 7)), 0); (("int_sexp_grammar", 362), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -42)], (0)), 100000000, 0, -41), 0, (("src/sexp_conv_grammar.mli", 20, 538, 538), ("src/sexp_conv_grammar.mli", 20, 538, 579), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 8)), 0); (("float_sexp_grammar", 363), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -40)], (0)), 100000000, 0, -39), 0, (("src/sexp_conv_grammar.mli", 21, 580, 580), ("src/sexp_conv_grammar.mli", 21, 580, 625), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 9)), 0); (("int32_sexp_grammar", 364), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -38)], (0)), 100000000, 0, -37), 0, (("src/sexp_conv_grammar.mli", 22, 626, 626), ("src/sexp_conv_grammar.mli", 22, 626, 671), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 10)), 0); (("int64_sexp_grammar", 365), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -36)], (0)), 100000000, 0, -35), 0, (("src/sexp_conv_grammar.mli", 23, 672, 672), ("src/sexp_conv_grammar.mli", 23, 672, 717), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 11)), 0); (("nativeint_sexp_grammar", 366), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -34)], (0)), 100000000, 0, -33), 0, (("src/sexp_conv_grammar.mli", 24, 718, 718), ("src/sexp_conv_grammar.mli", 24, 718, 771), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 12)), 0); (("sexp_t_sexp_grammar", 367), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -32)], (0)), 100000000, 0, -31), 0, (("src/sexp_conv_grammar.mli", 25, 772, 772), ("src/sexp_conv_grammar.mli", 25, 772, 819), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 13)), 0); (("ref_sexp_grammar", 368), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [((("a")), 100000000, 0, -29)], (0)), 100000000, 0, -30), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [((("a")), 100000000, 0, -29)], (0)), 100000000, 0, -28)], (0)), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("src/sexp_conv_grammar.mli", 26, 820, 820), ("src/sexp_conv_grammar.mli", 26, 820, 885), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 14)), 0); (("lazy_t_sexp_grammar", 369), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [((("a")), 100000000, 0, -24)], (0)), 100000000, 0, -25), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("lazy_t", 14)), [((("a")), 100000000, 0, -24)], (0)), 100000000, 0, -23)], (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("src/sexp_conv_grammar.mli", 27, 886, 886), ("src/sexp_conv_grammar.mli", 27, 886, 957), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 15)), 0); (("option_sexp_grammar", 370), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -20), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -18)], (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("src/sexp_conv_grammar.mli", 28, 958, 958), ("src/sexp_conv_grammar.mli", 28, 958, 1029), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 16)), 0); (("list_sexp_grammar", 371), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [((("a")), 100000000, 0, -14)], (0)), 100000000, 0, -15), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -14)], (0)), 100000000, 0, -13)], (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("src/sexp_conv_grammar.mli", 29, 1030, 1030), ("src/sexp_conv_grammar.mli", 29, 1030, 1097), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 17)), 0); (("array_sexp_grammar", 372), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [((("a")), 100000000, 0, -9)], (0)), 100000000, 0, -10), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [(Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -9)], (0)), 100000000, 0, -8)], (0)), 100000000, 0, -7), 0), 100000000, 0, -6), 0, (("src/sexp_conv_grammar.mli", 30, 1098, 1098), ("src/sexp_conv_grammar.mli", 30, 1098, 1167), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 18)), 0); (("opaque_sexp_grammar", 373), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [((("a")), 100000000, 0, -5)], (0)), 100000000, 0, -4), 0, (("src/sexp_conv_grammar.mli", 31, 1168, 1168), ("src/sexp_conv_grammar.mli", 31, 1168, 1211), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 19)), 0); (("fun_sexp_grammar", 374), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp_grammar"), "t"), [((("a")), 100000000, 0, -3)], (0)), 100000000, 0, -2), 0, (("src/sexp_conv_grammar.mli", 32, 1212, 1212), ("src/sexp_conv_grammar.mli", 32, 1212, 1252), 0), 0, Tag1 ("Sexplib0__Sexp_conv_grammar", 20)), 0)], "Sexplib0__Sexp_conv_grammar", [("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val fun_sexp_grammar : 'a Sexplib0__.Sexp_grammar.t
