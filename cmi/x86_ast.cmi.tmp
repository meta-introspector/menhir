type condition =
    L
  | GE
  | LE
  | G
  | B
  | AE
  | BE
  | A
  | E
  | NE
  | O
  | NO
  | S
  | NS
  | P
  | NP
type float_condition = EQf | LTf | LEf | UNORDf | NEQf | NLTf | NLEf | ORDf
type rounding = RoundUp | RoundDown | RoundNearest | RoundTruncate
type constant =
    Const of int64
  | ConstThis
  | ConstLabel of string
  | ConstAdd of constant * constant
  | ConstSub of constant * constant
type data_type =
    NONE
  | REAL4
  | REAL8
  | BYTE
  | WORD
  | DWORD
  | QWORD
  | OWORD
  | NEAR
  | PROC
type reg64 =
    RAX
  | RBX
  | RCX
  | RDX
  | RSP
  | RBP
  | RSI
  | RDI
  | R8
  | R9
  | R10
  | R11
  | R12
  | R13
  | R14
  | R15
type reg8h = AH | BH | CH | DH
type registerf = XMM of int | TOS | ST of int
type arch = X64 | X86
type addr = {
  arch : arch;
  typ : data_type;
  idx : reg64;
  scale : int;
  base : reg64 option;
  sym : string option;
  displ : int;
}
type arg =
    Imm of int64
  | Sym of string
  | Reg8L of reg64
  | Reg8H of reg8h
  | Reg16 of reg64
  | Reg32 of reg64
  | Reg64 of reg64
  | Regf of registerf
  | Mem of addr
  | Mem64_RIP of data_type * string * int
type instruction =
    ADD of arg * arg
  | ADDSD of arg * arg
  | AND of arg * arg
  | ANDPD of arg * arg
  | BSWAP of arg
  | CALL of arg
  | CDQ
  | CMOV of condition * arg * arg
  | CMP of arg * arg
  | CMPSD of float_condition * arg * arg
  | COMISD of arg * arg
  | CQO
  | CVTSD2SI of arg * arg
  | CVTSD2SS of arg * arg
  | CVTSI2SD of arg * arg
  | CVTSS2SD of arg * arg
  | CVTTSD2SI of arg * arg
  | DEC of arg
  | DIVSD of arg * arg
  | FABS
  | FADD of arg
  | FADDP of arg * arg
  | FCHS
  | FCOMP of arg
  | FCOMPP
  | FCOS
  | FDIV of arg
  | FDIVP of arg * arg
  | FDIVR of arg
  | FDIVRP of arg * arg
  | FILD of arg
  | FISTP of arg
  | FLD of arg
  | FLD1
  | FLDCW of arg
  | FLDLG2
  | FLDLN2
  | FLDZ
  | FMUL of arg
  | FMULP of arg * arg
  | FNSTCW of arg
  | FNSTSW of arg
  | FPATAN
  | FPTAN
  | FSIN
  | FSQRT
  | FSTP of arg
  | FSUB of arg
  | FSUBP of arg * arg
  | FSUBR of arg
  | FSUBRP of arg * arg
  | FXCH of arg
  | FYL2X
  | HLT
  | IDIV of arg
  | IMUL of arg * arg option
  | INC of arg
  | J of condition * arg
  | JMP of arg
  | LEA of arg * arg
  | LEAVE
  | MOV of arg * arg
  | MOVAPD of arg * arg
  | MOVD of arg * arg
  | MOVLPD of arg * arg
  | MOVSD of arg * arg
  | MOVSS of arg * arg
  | MOVSX of arg * arg
  | MOVSXD of arg * arg
  | MOVZX of arg * arg
  | MULSD of arg * arg
  | NEG of arg
  | NOP
  | OR of arg * arg
  | POP of arg
  | PUSH of arg
  | RET
  | ROUNDSD of rounding * arg * arg
  | SAL of arg * arg
  | SAR of arg * arg
  | SET of condition * arg
  | SHR of arg * arg
  | SQRTSD of arg * arg
  | SUB of arg * arg
  | SUBSD of arg * arg
  | TEST of arg * arg
  | UCOMISD of arg * arg
  | XCHG of arg * arg
  | XOR of arg * arg
  | XORPD of arg * arg
type asm_line =
    Ins of instruction
  | Align of bool * int
  | Byte of constant
  | Bytes of string
  | Comment of string
  | Global of string
  | Long of constant
  | NewLabel of string * data_type
  | Quad of constant
  | Section of string list * string option * string list
  | Space of int
  | Word of constant
  | External of string * data_type
  | Mode386
  | Model of string
  | Cfi_adjust_cfa_offset of int
  | Cfi_endproc
  | Cfi_startproc
  | Cfi_remember_state
  | Cfi_restore_state
  | Cfi_def_cfa_register of string
  | Cfi_def_cfa_offset of int
  | File of int * string
  | Indirect_symbol of string
  | Loc of int * int * int
  | Private_extern of string
  | Set of string * constant
  | Size of string * constant
  | Type of string * string("DEBUG:rule", [Tag1 (("condition", 487), (0, 0, Tag1 ([(("L", 270), (0), 0, (("asmcomp/x86_ast.mli", 19, 1174, 1176), ("asmcomp/x86_ast.mli", 19, 1174, 1179), 0), 0, Tag1 ("X86_ast", 1)); (("GE", 271), (0), 0, (("asmcomp/x86_ast.mli", 19, 1174, 1180), ("asmcomp/x86_ast.mli", 19, 1174, 1184), 0), 0, Tag1 ("X86_ast", 2)); (("LE", 272), (0), 0, (("asmcomp/x86_ast.mli", 20, 1228, 1230), ("asmcomp/x86_ast.mli", 20, 1228, 1234), 0), 0, Tag1 ("X86_ast", 3)); (("G", 273), (0), 0, (("asmcomp/x86_ast.mli", 20, 1228, 1235), ("asmcomp/x86_ast.mli", 20, 1228, 1238), 0), 0, Tag1 ("X86_ast", 4)); (("B", 274), (0), 0, (("asmcomp/x86_ast.mli", 21, 1239, 1241), ("asmcomp/x86_ast.mli", 21, 1239, 1244), 0), 0, Tag1 ("X86_ast", 5)); (("AE", 275), (0), 0, (("asmcomp/x86_ast.mli", 21, 1239, 1245), ("asmcomp/x86_ast.mli", 21, 1239, 1249), 0), 0, Tag1 ("X86_ast", 6)); (("BE", 276), (0), 0, (("asmcomp/x86_ast.mli", 22, 1294, 1296), ("asmcomp/x86_ast.mli", 22, 1294, 1300), 0), 0, Tag1 ("X86_ast", 7)); (("A", 277), (0), 0, (("asmcomp/x86_ast.mli", 22, 1294, 1301), ("asmcomp/x86_ast.mli", 22, 1294, 1304), 0), 0, Tag1 ("X86_ast", 8)); (("E", 278), (0), 0, (("asmcomp/x86_ast.mli", 23, 1305, 1307), ("asmcomp/x86_ast.mli", 23, 1305, 1310), 0), 0, Tag1 ("X86_ast", 9)); (("NE", 279), (0), 0, (("asmcomp/x86_ast.mli", 23, 1305, 1311), ("asmcomp/x86_ast.mli", 23, 1305, 1315), 0), 0, Tag1 ("X86_ast", 10)); (("O", 280), (0), 0, (("asmcomp/x86_ast.mli", 24, 1332, 1334), ("asmcomp/x86_ast.mli", 24, 1332, 1337), 0), 0, Tag1 ("X86_ast", 11)); (("NO", 281), (0), 0, (("asmcomp/x86_ast.mli", 24, 1332, 1338), ("asmcomp/x86_ast.mli", 24, 1332, 1342), 0), 0, Tag1 ("X86_ast", 12)); (("S", 282), (0), 0, (("asmcomp/x86_ast.mli", 25, 1362, 1364), ("asmcomp/x86_ast.mli", 25, 1362, 1367), 0), 0, Tag1 ("X86_ast", 13)); (("NS", 283), (0), 0, (("asmcomp/x86_ast.mli", 25, 1362, 1368), ("asmcomp/x86_ast.mli", 25, 1362, 1372), 0), 0, Tag1 ("X86_ast", 14)); (("P", 284), (0), 0, (("asmcomp/x86_ast.mli", 26, 1388, 1390), ("asmcomp/x86_ast.mli", 26, 1388, 1393), 0), 0, Tag1 ("X86_ast", 15)); (("NP", 285), (0), 0, (("asmcomp/x86_ast.mli", 26, 1388, 1394), ("asmcomp/x86_ast.mli", 26, 1388, 1398), 0), 0, Tag1 ("X86_ast", 16))], 0), 1, 0, 0, 0, 0, 0, (("asmcomp/x86_ast.mli", 18, 1157, 1157), ("asmcomp/x86_ast.mli", 26, 1388, 1398), 0), 0, 1, 0, Tag1 ("X86_ast", 0)), 1, 0); Tag1 (("float_condition", 488), (0, 0, Tag1 ([(("EQf", 287), (0), 0, (("asmcomp/x86_ast.mli", 29, 1440, 1442), ("asmcomp/x86_ast.mli", 29, 1440, 1447), 0), 0, Tag1 ("X86_ast", 18)); (("LTf", 288), (0), 0, (("asmcomp/x86_ast.mli", 30, 1448, 1450), ("asmcomp/x86_ast.mli", 30, 1448, 1455), 0), 0, Tag1 ("X86_ast", 19)); (("LEf", 289), (0), 0, (("asmcomp/x86_ast.mli", 31, 1456, 1458), ("asmcomp/x86_ast.mli", 31, 1456, 1463), 0), 0, Tag1 ("X86_ast", 20)); (("UNORDf", 290), (0), 0, (("asmcomp/x86_ast.mli", 32, 1464, 1466), ("asmcomp/x86_ast.mli", 32, 1464, 1474), 0), 0, Tag1 ("X86_ast", 21)); (("NEQf", 291), (0), 0, (("asmcomp/x86_ast.mli", 33, 1475, 1477), ("asmcomp/x86_ast.mli", 33, 1475, 1483), 0), 0, Tag1 ("X86_ast", 22)); (("NLTf", 292), (0), 0, (("asmcomp/x86_ast.mli", 34, 1484, 1486), ("asmcomp/x86_ast.mli", 34, 1484, 1492), 0), 0, Tag1 ("X86_ast", 23)); (("NLEf", 293), (0), 0, (("asmcomp/x86_ast.mli", 35, 1493, 1495), ("asmcomp/x86_ast.mli", 35, 1493, 1501), 0), 0, Tag1 ("X86_ast", 24)); (("ORDf", 294), (0), 0, (("asmcomp/x86_ast.mli", 36, 1502, 1504), ("asmcomp/x86_ast.mli", 36, 1502, 1510), 0), 0, Tag1 ("X86_ast", 25))], 0), 1, 0, 0, 0, 0, 0, (("asmcomp/x86_ast.mli", 28, 1417, 1417), ("asmcomp/x86_ast.mli", 36, 1502, 1510), 0), 0, 1, 0, Tag1 ("X86_ast", 17)), 1, 0); Tag1 (("rounding", 489), (0, 0, Tag1 ([(("RoundUp", 296), (0), 0, (("asmcomp/x86_ast.mli", 39, 1528, 1530), ("asmcomp/x86_ast.mli", 39, 1528, 1539), 0), 0, Tag1 ("X86_ast", 27)); (("RoundDown", 297), (0), 0, (("asmcomp/x86_ast.mli", 40, 1540, 1542), ("asmcomp/x86_ast.mli", 40, 1540, 1553), 0), 0, Tag1 ("X86_ast", 28)); (("RoundNearest", 298), (0), 0, (("asmcomp/x86_ast.mli", 41, 1554, 1556), ("asmcomp/x86_ast.mli", 41, 1554, 1570), 0), 0, Tag1 ("X86_ast", 29)); (("RoundTruncate", 299), (0), 0, (("asmcomp/x86_ast.mli", 42, 1571, 1573), ("asmcomp/x86_ast.mli", 42, 1571, 1588), 0), 0, Tag1 ("X86_ast", 30))], 0), 1, 0, 0, 0, 0, 0, (("asmcomp/x86_ast.mli", 38, 1512, 1512), ("asmcomp/x86_ast.mli", 42, 1571, 1588), 0), 0, 1, 0, Tag1 ("X86_ast", 26)), 1, 0); Tag1 (("constant", 490), (0, 0, Tag1 ([(("Const", 301), ([(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -187)]), 0, (("asmcomp/x86_ast.mli", 45, 1606, 1608), ("asmcomp/x86_ast.mli", 45, 1606, 1624), 0), 0, Tag1 ("X86_ast", 32)); (("ConstThis", 302), (0), 0, (("asmcomp/x86_ast.mli", 46, 1625, 1627), ("asmcomp/x86_ast.mli", 46, 1625, 1638), 0), 0, Tag1 ("X86_ast", 33)); (("ConstLabel", 303), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -188)]), 0, (("asmcomp/x86_ast.mli", 47, 1639, 1641), ("asmcomp/x86_ast.mli", 47, 1639, 1663), 0), 0, Tag1 ("X86_ast", 34)); (("ConstAdd", 304), ([(Tag3 ((("constant", 490)), 0, (0)), 100000000, 0, -189); (Tag3 ((("constant", 490)), 0, (0)), 100000000, 0, -190)]), 0, (("asmcomp/x86_ast.mli", 48, 1664, 1666), ("asmcomp/x86_ast.mli", 48, 1664, 1699), 0), 0, Tag1 ("X86_ast", 35)); (("ConstSub", 305), ([(Tag3 ((("constant", 490)), 0, (0)), 100000000, 0, -191); (Tag3 ((("constant", 490)), 0, (0)), 100000000, 0, -192)]), 0, (("asmcomp/x86_ast.mli", 49, 1700, 1702), ("asmcomp/x86_ast.mli", 49, 1700, 1735), 0), 0, Tag1 ("X86_ast", 36))], 0), 1, 0, 0, 0, 0, 0, (("asmcomp/x86_ast.mli", 44, 1590, 1590), ("asmcomp/x86_ast.mli", 49, 1700, 1735), 0), 0, 0, 0, Tag1 ("X86_ast", 31)), 1, 0); Tag1 (("data_type", 491), (0, 0, Tag1 ([(("NONE", 307), (0), 0, (("asmcomp/x86_ast.mli", 57, 1975, 1977), ("asmcomp/x86_ast.mli", 57, 1975, 1983), 0), 0, Tag1 ("X86_ast", 38)); (("REAL4", 308), (0), 0, (("asmcomp/x86_ast.mli", 58, 1984, 1986), ("asmcomp/x86_ast.mli", 58, 1984, 1993), 0), 0, Tag1 ("X86_ast", 39)); (("REAL8", 309), (0), 0, (("asmcomp/x86_ast.mli", 58, 1984, 1994), ("asmcomp/x86_ast.mli", 58, 1984, 2001), 0), 0, Tag1 ("X86_ast", 40)); (("BYTE", 310), (0), 0, (("asmcomp/x86_ast.mli", 59, 2030, 2032), ("asmcomp/x86_ast.mli", 59, 2030, 2038), 0), 0, Tag1 ("X86_ast", 41)); (("WORD", 311), (0), 0, (("asmcomp/x86_ast.mli", 59, 2030, 2039), ("asmcomp/x86_ast.mli", 59, 2030, 2045), 0), 0, Tag1 ("X86_ast", 42)); (("DWORD", 312), (0), 0, (("asmcomp/x86_ast.mli", 59, 2030, 2046), ("asmcomp/x86_ast.mli", 59, 2030, 2053), 0), 0, Tag1 ("X86_ast", 43)); (("QWORD", 313), (0), 0, (("asmcomp/x86_ast.mli", 59, 2030, 2054), ("asmcomp/x86_ast.mli", 59, 2030, 2061), 0), 0, Tag1 ("X86_ast", 44)); (("OWORD", 314), (0), 0, (("asmcomp/x86_ast.mli", 59, 2030, 2062), ("asmcomp/x86_ast.mli", 59, 2030, 2069), 0), 0, Tag1 ("X86_ast", 45)); (("NEAR", 315), (0), 0, (("asmcomp/x86_ast.mli", 60, 2091, 2093), ("asmcomp/x86_ast.mli", 60, 2091, 2099), 0), 0, Tag1 ("X86_ast", 46)); (("PROC", 316), (0), 0, (("asmcomp/x86_ast.mli", 60, 2091, 2100), ("asmcomp/x86_ast.mli", 60, 2091, 2106), 0), 0, Tag1 ("X86_ast", 47))], 0), 1, 0, 0, 0, 0, 0, (("asmcomp/x86_ast.mli", 56, 1958, 1958), ("asmcomp/x86_ast.mli", 60, 2091, 2106), 0), 0, 1, 0, Tag1 ("X86_ast", 37)), 1, 0); Tag1 (("reg64", 492), (0, 0, Tag1 ([(("RAX", 318), (0), 0, (("asmcomp/x86_ast.mli", 63, 2121, 2123), ("asmcomp/x86_ast.mli", 63, 2121, 2128), 0), 0, Tag1 ("X86_ast", 49)); (("RBX", 319), (0), 0, (("asmcomp/x86_ast.mli", 63, 2121, 2129), ("asmcomp/x86_ast.mli", 63, 2121, 2134), 0), 0, Tag1 ("X86_ast", 50)); (("RCX", 320), (0), 0, (("asmcomp/x86_ast.mli", 63, 2121, 2135), ("asmcomp/x86_ast.mli", 63, 2121, 2140), 0), 0, Tag1 ("X86_ast", 51)); (("RDX", 321), (0), 0, (("asmcomp/x86_ast.mli", 63, 2121, 2141), ("asmcomp/x86_ast.mli", 63, 2121, 2146), 0), 0, Tag1 ("X86_ast", 52)); (("RSP", 322), (0), 0, (("asmcomp/x86_ast.mli", 63, 2121, 2147), ("asmcomp/x86_ast.mli", 63, 2121, 2152), 0), 0, Tag1 ("X86_ast", 53)); (("RBP", 323), (0), 0, (("asmcomp/x86_ast.mli", 63, 2121, 2153), ("asmcomp/x86_ast.mli", 63, 2121, 2158), 0), 0, Tag1 ("X86_ast", 54)); (("RSI", 324), (0), 0, (("asmcomp/x86_ast.mli", 63, 2121, 2159), ("asmcomp/x86_ast.mli", 63, 2121, 2164), 0), 0, Tag1 ("X86_ast", 55)); (("RDI", 325), (0), 0, (("asmcomp/x86_ast.mli", 63, 2121, 2165), ("asmcomp/x86_ast.mli", 63, 2121, 2170), 0), 0, Tag1 ("X86_ast", 56)); (("R8", 326), (0), 0, (("asmcomp/x86_ast.mli", 64, 2171, 2173), ("asmcomp/x86_ast.mli", 64, 2171, 2177), 0), 0, Tag1 ("X86_ast", 57)); (("R9", 327), (0), 0, (("asmcomp/x86_ast.mli", 64, 2171, 2178), ("asmcomp/x86_ast.mli", 64, 2171, 2182), 0), 0, Tag1 ("X86_ast", 58)); (("R10", 328), (0), 0, (("asmcomp/x86_ast.mli", 64, 2171, 2183), ("asmcomp/x86_ast.mli", 64, 2171, 2188), 0), 0, Tag1 ("X86_ast", 59)); (("R11", 329), (0), 0, (("asmcomp/x86_ast.mli", 64, 2171, 2189), ("asmcomp/x86_ast.mli", 64, 2171, 2194), 0), 0, Tag1 ("X86_ast", 60)); (("R12", 330), (0), 0, (("asmcomp/x86_ast.mli", 64, 2171, 2195), ("asmcomp/x86_ast.mli", 64, 2171, 2200), 0), 0, Tag1 ("X86_ast", 61)); (("R13", 331), (0), 0, (("asmcomp/x86_ast.mli", 64, 2171, 2201), ("asmcomp/x86_ast.mli", 64, 2171, 2206), 0), 0, Tag1 ("X86_ast", 62)); (("R14", 332), (0), 0, (("asmcomp/x86_ast.mli", 64, 2171, 2207), ("asmcomp/x86_ast.mli", 64, 2171, 2212), 0), 0, Tag1 ("X86_ast", 63)); (("R15", 333), (0), 0, (("asmcomp/x86_ast.mli", 64, 2171, 2213), ("asmcomp/x86_ast.mli", 64, 2171, 2218), 0), 0, Tag1 ("X86_ast", 64))], 0), 1, 0, 0, 0, 0, 0, (("asmcomp/x86_ast.mli", 62, 2108, 2108), ("asmcomp/x86_ast.mli", 64, 2171, 2218), 0), 0, 1, 0, Tag1 ("X86_ast", 48)), 1, 0); Tag1 (("reg8h", 493), (0, 0, Tag1 ([(("AH", 335), (0), 0, (("asmcomp/x86_ast.mli", 67, 2233, 2235), ("asmcomp/x86_ast.mli", 67, 2233, 2239), 0), 0, Tag1 ("X86_ast", 66)); (("BH", 336), (0), 0, (("asmcomp/x86_ast.mli", 67, 2233, 2240), ("asmcomp/x86_ast.mli", 67, 2233, 2244), 0), 0, Tag1 ("X86_ast", 67)); (("CH", 337), (0), 0, (("asmcomp/x86_ast.mli", 67, 2233, 2245), ("asmcomp/x86_ast.mli", 67, 2233, 2249), 0), 0, Tag1 ("X86_ast", 68)); (("DH", 338), (0), 0, (("asmcomp/x86_ast.mli", 67, 2233, 2250), ("asmcomp/x86_ast.mli", 67, 2233, 2254), 0), 0, Tag1 ("X86_ast", 69))], 0), 1, 0, 0, 0, 0, 0, (("asmcomp/x86_ast.mli", 66, 2220, 2220), ("asmcomp/x86_ast.mli", 67, 2233, 2254), 0), 0, 1, 0, Tag1 ("X86_ast", 65)), 1, 0); Tag1 (("registerf", 494), (0, 0, Tag1 ([(("XMM", 340), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -185)]), 0, (("asmcomp/x86_ast.mli", 70, 2257, 2274), ("asmcomp/x86_ast.mli", 70, 2257, 2284), 0), 0, Tag1 ("X86_ast", 71)); (("TOS", 341), (0), 0, (("asmcomp/x86_ast.mli", 70, 2257, 2285), ("asmcomp/x86_ast.mli", 70, 2257, 2290), 0), 0, Tag1 ("X86_ast", 72)); (("ST", 342), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -186)]), 0, (("asmcomp/x86_ast.mli", 70, 2257, 2291), ("asmcomp/x86_ast.mli", 70, 2257, 2302), 0), 0, Tag1 ("X86_ast", 73))], 0), 1, 0, 0, 0, 0, 0, (("asmcomp/x86_ast.mli", 70, 2257, 2257), ("asmcomp/x86_ast.mli", 70, 2257, 2302), 0), 0, 0, 0, Tag1 ("X86_ast", 70)), 1, 0); Tag1 (("arch", 495), (0, 0, Tag1 ([(("X64", 344), (0), 0, (("asmcomp/x86_ast.mli", 72, 2304, 2316), ("asmcomp/x86_ast.mli", 72, 2304, 2319), 0), 0, Tag1 ("X86_ast", 75)); (("X86", 345), (0), 0, (("asmcomp/x86_ast.mli", 72, 2304, 2320), ("asmcomp/x86_ast.mli", 72, 2304, 2325), 0), 0, Tag1 ("X86_ast", 76))], 0), 1, 0, 0, 0, 0, 0, (("asmcomp/x86_ast.mli", 72, 2304, 2304), ("asmcomp/x86_ast.mli", 72, 2304, 2325), 0), 0, 1, 0, Tag1 ("X86_ast", 74)), 1, 0); Tag1 (("addr", 496), (0, 0, [[(("arch", 347), 0, (Tag3 ((("arch", 495)), 0, (0)), 100000000, 0, -176), (("asmcomp/x86_ast.mli", 76, 2343, 2347), ("asmcomp/x86_ast.mli", 76, 2343, 2358), 0), 0, Tag1 ("X86_ast", 78)); (("typ", 348), 0, (Tag3 ((("data_type", 491)), 0, (0)), 100000000, 0, -177), (("asmcomp/x86_ast.mli", 77, 2359, 2363), ("asmcomp/x86_ast.mli", 77, 2359, 2378), 0), 0, Tag1 ("X86_ast", 79)); (("idx", 349), 0, (Tag3 ((("reg64", 492)), 0, (0)), 100000000, 0, -178), (("asmcomp/x86_ast.mli", 78, 2379, 2383), ("asmcomp/x86_ast.mli", 78, 2379, 2394), 0), 0, Tag1 ("X86_ast", 80)); (("scale", 350), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -179), (("asmcomp/x86_ast.mli", 79, 2395, 2399), ("asmcomp/x86_ast.mli", 79, 2395, 2410), 0), 0, Tag1 ("X86_ast", 81)); (("base", 351), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("reg64", 492)), 0, (0)), 100000000, 0, -181)], (0)), 100000000, 0, -180), (("asmcomp/x86_ast.mli", 80, 2411, 2415), ("asmcomp/x86_ast.mli", 80, 2411, 2434), 0), 0, Tag1 ("X86_ast", 82)); (("sym", 352), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -183)], (0)), 100000000, 0, -182), (("asmcomp/x86_ast.mli", 81, 2435, 2439), ("asmcomp/x86_ast.mli", 81, 2435, 2458), 0), 0, Tag1 ("X86_ast", 83)); (("displ", 353), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -184), (("asmcomp/x86_ast.mli", 82, 2459, 2463), ("asmcomp/x86_ast.mli", 82, 2459, 2474), 0), 0, Tag1 ("X86_ast", 84))]], 1, 0, 0, 0, 0, 0, (("asmcomp/x86_ast.mli", 74, 2327, 2327), ("asmcomp/x86_ast.mli", 83, 2475, 2478), 0), 0, 0, 0, Tag1 ("X86_ast", 77)), 1, 0); Tag1 (("arg", 497), (0, 0, Tag1 ([(("Imm", 355), ([(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -164)]), 0, (("asmcomp/x86_ast.mli", 90, 2618, 2620), ("asmcomp/x86_ast.mli", 90, 2618, 2634), 0), 0, Tag1 ("X86_ast", 86)); (("Sym", 356), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -165)]), 0, (("asmcomp/x86_ast.mli", 93, 2686, 2688), ("asmcomp/x86_ast.mli", 93, 2686, 2704), 0), 0, Tag1 ("X86_ast", 87)); (("Reg8L", 357), ([(Tag3 ((("reg64", 492)), 0, (0)), 100000000, 0, -166)]), 0, (("asmcomp/x86_ast.mli", 97, 2837, 2839), ("asmcomp/x86_ast.mli", 97, 2837, 2855), 0), 0, Tag1 ("X86_ast", 88)); (("Reg8H", 358), ([(Tag3 ((("reg8h", 493)), 0, (0)), 100000000, 0, -167)]), 0, (("asmcomp/x86_ast.mli", 98, 2856, 2858), ("asmcomp/x86_ast.mli", 98, 2856, 2874), 0), 0, Tag1 ("X86_ast", 89)); (("Reg16", 359), ([(Tag3 ((("reg64", 492)), 0, (0)), 100000000, 0, -168)]), 0, (("asmcomp/x86_ast.mli", 99, 2875, 2877), ("asmcomp/x86_ast.mli", 99, 2875, 2893), 0), 0, Tag1 ("X86_ast", 90)); (("Reg32", 360), ([(Tag3 ((("reg64", 492)), 0, (0)), 100000000, 0, -169)]), 0, (("asmcomp/x86_ast.mli", 100, 2894, 2896), ("asmcomp/x86_ast.mli", 100, 2894, 2912), 0), 0, Tag1 ("X86_ast", 91)); (("Reg64", 361), ([(Tag3 ((("reg64", 492)), 0, (0)), 100000000, 0, -170)]), 0, (("asmcomp/x86_ast.mli", 101, 2913, 2915), ("asmcomp/x86_ast.mli", 101, 2913, 2931), 0), 0, Tag1 ("X86_ast", 92)); (("Regf", 362), ([(Tag3 ((("registerf", 494)), 0, (0)), 100000000, 0, -171)]), 0, (("asmcomp/x86_ast.mli", 102, 2932, 2934), ("asmcomp/x86_ast.mli", 102, 2932, 2953), 0), 0, Tag1 ("X86_ast", 93)); (("Mem", 363), ([(Tag3 ((("addr", 496)), 0, (0)), 100000000, 0, -172)]), 0, (("asmcomp/x86_ast.mli", 104, 2955, 2957), ("asmcomp/x86_ast.mli", 104, 2955, 2970), 0), 0, Tag1 ("X86_ast", 94)); (("Mem64_RIP", 364), ([(Tag3 ((("data_type", 491)), 0, (0)), 100000000, 0, -173); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -174); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -175)]), 0, (("asmcomp/x86_ast.mli", 105, 2971, 2973), ("asmcomp/x86_ast.mli", 105, 2971, 3012), 0), 0, Tag1 ("X86_ast", 95))], 0), 1, 0, 0, 0, 0, 0, (("asmcomp/x86_ast.mli", 89, 2607, 2607), ("asmcomp/x86_ast.mli", 105, 2971, 3012), 0), 0, 0, 0, Tag1 ("X86_ast", 85)), 1, 0); Tag1 (("instruction", 498), (0, 0, Tag1 ([(("ADD", 366), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -42); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -43)]), 0, (("asmcomp/x86_ast.mli", 108, 3033, 3035), ("asmcomp/x86_ast.mli", 108, 3033, 3053), 0), 0, Tag1 ("X86_ast", 97)); (("ADDSD", 367), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -44); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -45)]), 0, (("asmcomp/x86_ast.mli", 109, 3054, 3056), ("asmcomp/x86_ast.mli", 109, 3054, 3076), 0), 0, Tag1 ("X86_ast", 98)); (("AND", 368), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -46); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -47)]), 0, (("asmcomp/x86_ast.mli", 110, 3077, 3079), ("asmcomp/x86_ast.mli", 110, 3077, 3097), 0), 0, Tag1 ("X86_ast", 99)); (("ANDPD", 369), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -48); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -49)]), 0, (("asmcomp/x86_ast.mli", 111, 3098, 3100), ("asmcomp/x86_ast.mli", 111, 3098, 3120), 0), 0, Tag1 ("X86_ast", 100)); (("BSWAP", 370), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -50)]), 0, (("asmcomp/x86_ast.mli", 112, 3121, 3123), ("asmcomp/x86_ast.mli", 112, 3121, 3137), 0), 0, Tag1 ("X86_ast", 101)); (("CALL", 371), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -51)]), 0, (("asmcomp/x86_ast.mli", 113, 3138, 3140), ("asmcomp/x86_ast.mli", 113, 3138, 3153), 0), 0, Tag1 ("X86_ast", 102)); (("CDQ", 372), (0), 0, (("asmcomp/x86_ast.mli", 114, 3154, 3156), ("asmcomp/x86_ast.mli", 114, 3154, 3161), 0), 0, Tag1 ("X86_ast", 103)); (("CMOV", 373), ([(Tag3 ((("condition", 487)), 0, (0)), 100000000, 0, -52); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -53); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -54)]), 0, (("asmcomp/x86_ast.mli", 115, 3162, 3164), ("asmcomp/x86_ast.mli", 115, 3162, 3195), 0), 0, Tag1 ("X86_ast", 104)); (("CMP", 374), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -55); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -56)]), 0, (("asmcomp/x86_ast.mli", 116, 3196, 3198), ("asmcomp/x86_ast.mli", 116, 3196, 3216), 0), 0, Tag1 ("X86_ast", 105)); (("CMPSD", 375), ([(Tag3 ((("float_condition", 488)), 0, (0)), 100000000, 0, -57); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -58); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -59)]), 0, (("asmcomp/x86_ast.mli", 117, 3217, 3219), ("asmcomp/x86_ast.mli", 117, 3217, 3257), 0), 0, Tag1 ("X86_ast", 106)); (("COMISD", 376), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -60); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -61)]), 0, (("asmcomp/x86_ast.mli", 118, 3258, 3260), ("asmcomp/x86_ast.mli", 118, 3258, 3281), 0), 0, Tag1 ("X86_ast", 107)); (("CQO", 377), (0), 0, (("asmcomp/x86_ast.mli", 119, 3282, 3284), ("asmcomp/x86_ast.mli", 119, 3282, 3289), 0), 0, Tag1 ("X86_ast", 108)); (("CVTSD2SI", 378), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -62); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -63)]), 0, (("asmcomp/x86_ast.mli", 120, 3290, 3292), ("asmcomp/x86_ast.mli", 120, 3290, 3315), 0), 0, Tag1 ("X86_ast", 109)); (("CVTSD2SS", 379), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -64); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -65)]), 0, (("asmcomp/x86_ast.mli", 121, 3316, 3318), ("asmcomp/x86_ast.mli", 121, 3316, 3341), 0), 0, Tag1 ("X86_ast", 110)); (("CVTSI2SD", 380), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -66); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -67)]), 0, (("asmcomp/x86_ast.mli", 122, 3342, 3344), ("asmcomp/x86_ast.mli", 122, 3342, 3367), 0), 0, Tag1 ("X86_ast", 111)); (("CVTSS2SD", 381), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -68); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -69)]), 0, (("asmcomp/x86_ast.mli", 123, 3368, 3370), ("asmcomp/x86_ast.mli", 123, 3368, 3393), 0), 0, Tag1 ("X86_ast", 112)); (("CVTTSD2SI", 382), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -70); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -71)]), 0, (("asmcomp/x86_ast.mli", 124, 3394, 3396), ("asmcomp/x86_ast.mli", 124, 3394, 3420), 0), 0, Tag1 ("X86_ast", 113)); (("DEC", 383), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -72)]), 0, (("asmcomp/x86_ast.mli", 125, 3421, 3423), ("asmcomp/x86_ast.mli", 125, 3421, 3435), 0), 0, Tag1 ("X86_ast", 114)); (("DIVSD", 384), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -73); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -74)]), 0, (("asmcomp/x86_ast.mli", 126, 3436, 3438), ("asmcomp/x86_ast.mli", 126, 3436, 3458), 0), 0, Tag1 ("X86_ast", 115)); (("FABS", 385), (0), 0, (("asmcomp/x86_ast.mli", 127, 3459, 3461), ("asmcomp/x86_ast.mli", 127, 3459, 3467), 0), 0, Tag1 ("X86_ast", 116)); (("FADD", 386), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -75)]), 0, (("asmcomp/x86_ast.mli", 128, 3468, 3470), ("asmcomp/x86_ast.mli", 128, 3468, 3483), 0), 0, Tag1 ("X86_ast", 117)); (("FADDP", 387), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -76); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -77)]), 0, (("asmcomp/x86_ast.mli", 129, 3484, 3486), ("asmcomp/x86_ast.mli", 129, 3484, 3506), 0), 0, Tag1 ("X86_ast", 118)); (("FCHS", 388), (0), 0, (("asmcomp/x86_ast.mli", 130, 3507, 3509), ("asmcomp/x86_ast.mli", 130, 3507, 3515), 0), 0, Tag1 ("X86_ast", 119)); (("FCOMP", 389), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -78)]), 0, (("asmcomp/x86_ast.mli", 131, 3516, 3518), ("asmcomp/x86_ast.mli", 131, 3516, 3532), 0), 0, Tag1 ("X86_ast", 120)); (("FCOMPP", 390), (0), 0, (("asmcomp/x86_ast.mli", 132, 3533, 3535), ("asmcomp/x86_ast.mli", 132, 3533, 3543), 0), 0, Tag1 ("X86_ast", 121)); (("FCOS", 391), (0), 0, (("asmcomp/x86_ast.mli", 133, 3544, 3546), ("asmcomp/x86_ast.mli", 133, 3544, 3552), 0), 0, Tag1 ("X86_ast", 122)); (("FDIV", 392), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -79)]), 0, (("asmcomp/x86_ast.mli", 134, 3553, 3555), ("asmcomp/x86_ast.mli", 134, 3553, 3568), 0), 0, Tag1 ("X86_ast", 123)); (("FDIVP", 393), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -80); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -81)]), 0, (("asmcomp/x86_ast.mli", 135, 3569, 3571), ("asmcomp/x86_ast.mli", 135, 3569, 3591), 0), 0, Tag1 ("X86_ast", 124)); (("FDIVR", 394), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -82)]), 0, (("asmcomp/x86_ast.mli", 136, 3592, 3594), ("asmcomp/x86_ast.mli", 136, 3592, 3608), 0), 0, Tag1 ("X86_ast", 125)); (("FDIVRP", 395), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -83); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -84)]), 0, (("asmcomp/x86_ast.mli", 137, 3609, 3611), ("asmcomp/x86_ast.mli", 137, 3609, 3632), 0), 0, Tag1 ("X86_ast", 126)); (("FILD", 396), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -85)]), 0, (("asmcomp/x86_ast.mli", 138, 3633, 3635), ("asmcomp/x86_ast.mli", 138, 3633, 3648), 0), 0, Tag1 ("X86_ast", 127)); (("FISTP", 397), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -86)]), 0, (("asmcomp/x86_ast.mli", 139, 3649, 3651), ("asmcomp/x86_ast.mli", 139, 3649, 3665), 0), 0, Tag1 ("X86_ast", 128)); (("FLD", 398), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -87)]), 0, (("asmcomp/x86_ast.mli", 140, 3666, 3668), ("asmcomp/x86_ast.mli", 140, 3666, 3680), 0), 0, Tag1 ("X86_ast", 129)); (("FLD1", 399), (0), 0, (("asmcomp/x86_ast.mli", 141, 3681, 3683), ("asmcomp/x86_ast.mli", 141, 3681, 3689), 0), 0, Tag1 ("X86_ast", 130)); (("FLDCW", 400), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -88)]), 0, (("asmcomp/x86_ast.mli", 142, 3690, 3692), ("asmcomp/x86_ast.mli", 142, 3690, 3706), 0), 0, Tag1 ("X86_ast", 131)); (("FLDLG2", 401), (0), 0, (("asmcomp/x86_ast.mli", 143, 3707, 3709), ("asmcomp/x86_ast.mli", 143, 3707, 3717), 0), 0, Tag1 ("X86_ast", 132)); (("FLDLN2", 402), (0), 0, (("asmcomp/x86_ast.mli", 144, 3718, 3720), ("asmcomp/x86_ast.mli", 144, 3718, 3728), 0), 0, Tag1 ("X86_ast", 133)); (("FLDZ", 403), (0), 0, (("asmcomp/x86_ast.mli", 145, 3729, 3731), ("asmcomp/x86_ast.mli", 145, 3729, 3737), 0), 0, Tag1 ("X86_ast", 134)); (("FMUL", 404), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -89)]), 0, (("asmcomp/x86_ast.mli", 146, 3738, 3740), ("asmcomp/x86_ast.mli", 146, 3738, 3753), 0), 0, Tag1 ("X86_ast", 135)); (("FMULP", 405), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -90); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -91)]), 0, (("asmcomp/x86_ast.mli", 147, 3754, 3756), ("asmcomp/x86_ast.mli", 147, 3754, 3776), 0), 0, Tag1 ("X86_ast", 136)); (("FNSTCW", 406), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -92)]), 0, (("asmcomp/x86_ast.mli", 148, 3777, 3779), ("asmcomp/x86_ast.mli", 148, 3777, 3794), 0), 0, Tag1 ("X86_ast", 137)); (("FNSTSW", 407), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -93)]), 0, (("asmcomp/x86_ast.mli", 149, 3795, 3797), ("asmcomp/x86_ast.mli", 149, 3795, 3812), 0), 0, Tag1 ("X86_ast", 138)); (("FPATAN", 408), (0), 0, (("asmcomp/x86_ast.mli", 150, 3813, 3815), ("asmcomp/x86_ast.mli", 150, 3813, 3823), 0), 0, Tag1 ("X86_ast", 139)); (("FPTAN", 409), (0), 0, (("asmcomp/x86_ast.mli", 151, 3824, 3826), ("asmcomp/x86_ast.mli", 151, 3824, 3833), 0), 0, Tag1 ("X86_ast", 140)); (("FSIN", 410), (0), 0, (("asmcomp/x86_ast.mli", 152, 3834, 3836), ("asmcomp/x86_ast.mli", 152, 3834, 3842), 0), 0, Tag1 ("X86_ast", 141)); (("FSQRT", 411), (0), 0, (("asmcomp/x86_ast.mli", 153, 3843, 3845), ("asmcomp/x86_ast.mli", 153, 3843, 3852), 0), 0, Tag1 ("X86_ast", 142)); (("FSTP", 412), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -94)]), 0, (("asmcomp/x86_ast.mli", 154, 3853, 3855), ("asmcomp/x86_ast.mli", 154, 3853, 3868), 0), 0, Tag1 ("X86_ast", 143)); (("FSUB", 413), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -95)]), 0, (("asmcomp/x86_ast.mli", 155, 3869, 3871), ("asmcomp/x86_ast.mli", 155, 3869, 3884), 0), 0, Tag1 ("X86_ast", 144)); (("FSUBP", 414), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -96); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -97)]), 0, (("asmcomp/x86_ast.mli", 156, 3885, 3887), ("asmcomp/x86_ast.mli", 156, 3885, 3907), 0), 0, Tag1 ("X86_ast", 145)); (("FSUBR", 415), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -98)]), 0, (("asmcomp/x86_ast.mli", 157, 3908, 3910), ("asmcomp/x86_ast.mli", 157, 3908, 3924), 0), 0, Tag1 ("X86_ast", 146)); (("FSUBRP", 416), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -99); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -100)]), 0, (("asmcomp/x86_ast.mli", 158, 3925, 3927), ("asmcomp/x86_ast.mli", 158, 3925, 3948), 0), 0, Tag1 ("X86_ast", 147)); (("FXCH", 417), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -101)]), 0, (("asmcomp/x86_ast.mli", 159, 3949, 3951), ("asmcomp/x86_ast.mli", 159, 3949, 3964), 0), 0, Tag1 ("X86_ast", 148)); (("FYL2X", 418), (0), 0, (("asmcomp/x86_ast.mli", 160, 3965, 3967), ("asmcomp/x86_ast.mli", 160, 3965, 3974), 0), 0, Tag1 ("X86_ast", 149)); (("HLT", 419), (0), 0, (("asmcomp/x86_ast.mli", 161, 3975, 3977), ("asmcomp/x86_ast.mli", 161, 3975, 3982), 0), 0, Tag1 ("X86_ast", 150)); (("IDIV", 420), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -102)]), 0, (("asmcomp/x86_ast.mli", 162, 3983, 3985), ("asmcomp/x86_ast.mli", 162, 3983, 3998), 0), 0, Tag1 ("X86_ast", 151)); (("IMUL", 421), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -103); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -105)], (0)), 100000000, 0, -104)]), 0, (("asmcomp/x86_ast.mli", 163, 3999, 4001), ("asmcomp/x86_ast.mli", 163, 3999, 4027), 0), 0, Tag1 ("X86_ast", 152)); (("INC", 422), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -106)]), 0, (("asmcomp/x86_ast.mli", 164, 4028, 4030), ("asmcomp/x86_ast.mli", 164, 4028, 4042), 0), 0, Tag1 ("X86_ast", 153)); (("J", 423), ([(Tag3 ((("condition", 487)), 0, (0)), 100000000, 0, -107); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -108)]), 0, (("asmcomp/x86_ast.mli", 165, 4043, 4045), ("asmcomp/x86_ast.mli", 165, 4043, 4067), 0), 0, Tag1 ("X86_ast", 154)); (("JMP", 424), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -109)]), 0, (("asmcomp/x86_ast.mli", 166, 4068, 4070), ("asmcomp/x86_ast.mli", 166, 4068, 4082), 0), 0, Tag1 ("X86_ast", 155)); (("LEA", 425), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -110); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -111)]), 0, (("asmcomp/x86_ast.mli", 167, 4083, 4085), ("asmcomp/x86_ast.mli", 167, 4083, 4103), 0), 0, Tag1 ("X86_ast", 156)); (("LEAVE", 426), (0), 0, (("asmcomp/x86_ast.mli", 168, 4104, 4106), ("asmcomp/x86_ast.mli", 168, 4104, 4113), 0), 0, Tag1 ("X86_ast", 157)); (("MOV", 427), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -112); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -113)]), 0, (("asmcomp/x86_ast.mli", 169, 4114, 4116), ("asmcomp/x86_ast.mli", 169, 4114, 4134), 0), 0, Tag1 ("X86_ast", 158)); (("MOVAPD", 428), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -114); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -115)]), 0, (("asmcomp/x86_ast.mli", 170, 4135, 4137), ("asmcomp/x86_ast.mli", 170, 4135, 4158), 0), 0, Tag1 ("X86_ast", 159)); (("MOVD", 429), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -116); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -117)]), 0, (("asmcomp/x86_ast.mli", 171, 4159, 4161), ("asmcomp/x86_ast.mli", 171, 4159, 4180), 0), 0, Tag1 ("X86_ast", 160)); (("MOVLPD", 430), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -118); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -119)]), 0, (("asmcomp/x86_ast.mli", 172, 4181, 4183), ("asmcomp/x86_ast.mli", 172, 4181, 4204), 0), 0, Tag1 ("X86_ast", 161)); (("MOVSD", 431), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -120); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -121)]), 0, (("asmcomp/x86_ast.mli", 173, 4205, 4207), ("asmcomp/x86_ast.mli", 173, 4205, 4227), 0), 0, Tag1 ("X86_ast", 162)); (("MOVSS", 432), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -122); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -123)]), 0, (("asmcomp/x86_ast.mli", 174, 4228, 4230), ("asmcomp/x86_ast.mli", 174, 4228, 4250), 0), 0, Tag1 ("X86_ast", 163)); (("MOVSX", 433), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -124); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -125)]), 0, (("asmcomp/x86_ast.mli", 175, 4251, 4253), ("asmcomp/x86_ast.mli", 175, 4251, 4273), 0), 0, Tag1 ("X86_ast", 164)); (("MOVSXD", 434), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -126); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -127)]), 0, (("asmcomp/x86_ast.mli", 176, 4274, 4276), ("asmcomp/x86_ast.mli", 176, 4274, 4297), 0), 0, Tag1 ("X86_ast", 165)); (("MOVZX", 435), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -128); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -129)]), 0, (("asmcomp/x86_ast.mli", 177, 4298, 4300), ("asmcomp/x86_ast.mli", 177, 4298, 4320), 0), 0, Tag1 ("X86_ast", 166)); (("MULSD", 436), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -130); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -131)]), 0, (("asmcomp/x86_ast.mli", 178, 4321, 4323), ("asmcomp/x86_ast.mli", 178, 4321, 4343), 0), 0, Tag1 ("X86_ast", 167)); (("NEG", 437), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -132)]), 0, (("asmcomp/x86_ast.mli", 179, 4344, 4346), ("asmcomp/x86_ast.mli", 179, 4344, 4358), 0), 0, Tag1 ("X86_ast", 168)); (("NOP", 438), (0), 0, (("asmcomp/x86_ast.mli", 180, 4359, 4361), ("asmcomp/x86_ast.mli", 180, 4359, 4366), 0), 0, Tag1 ("X86_ast", 169)); (("OR", 439), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -133); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -134)]), 0, (("asmcomp/x86_ast.mli", 181, 4367, 4369), ("asmcomp/x86_ast.mli", 181, 4367, 4386), 0), 0, Tag1 ("X86_ast", 170)); (("POP", 440), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -135)]), 0, (("asmcomp/x86_ast.mli", 182, 4387, 4389), ("asmcomp/x86_ast.mli", 182, 4387, 4401), 0), 0, Tag1 ("X86_ast", 171)); (("PUSH", 441), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -136)]), 0, (("asmcomp/x86_ast.mli", 183, 4402, 4404), ("asmcomp/x86_ast.mli", 183, 4402, 4417), 0), 0, Tag1 ("X86_ast", 172)); (("RET", 442), (0), 0, (("asmcomp/x86_ast.mli", 184, 4418, 4420), ("asmcomp/x86_ast.mli", 184, 4418, 4425), 0), 0, Tag1 ("X86_ast", 173)); (("ROUNDSD", 443), ([(Tag3 ((("rounding", 489)), 0, (0)), 100000000, 0, -137); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -138); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -139)]), 0, (("asmcomp/x86_ast.mli", 185, 4426, 4428), ("asmcomp/x86_ast.mli", 185, 4426, 4461), 0), 0, Tag1 ("X86_ast", 174)); (("SAL", 444), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -140); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -141)]), 0, (("asmcomp/x86_ast.mli", 186, 4462, 4464), ("asmcomp/x86_ast.mli", 186, 4462, 4482), 0), 0, Tag1 ("X86_ast", 175)); (("SAR", 445), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -142); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -143)]), 0, (("asmcomp/x86_ast.mli", 187, 4483, 4485), ("asmcomp/x86_ast.mli", 187, 4483, 4503), 0), 0, Tag1 ("X86_ast", 176)); (("SET", 446), ([(Tag3 ((("condition", 487)), 0, (0)), 100000000, 0, -144); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -145)]), 0, (("asmcomp/x86_ast.mli", 188, 4504, 4506), ("asmcomp/x86_ast.mli", 188, 4504, 4530), 0), 0, Tag1 ("X86_ast", 177)); (("SHR", 447), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -146); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -147)]), 0, (("asmcomp/x86_ast.mli", 189, 4531, 4533), ("asmcomp/x86_ast.mli", 189, 4531, 4551), 0), 0, Tag1 ("X86_ast", 178)); (("SQRTSD", 448), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -148); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -149)]), 0, (("asmcomp/x86_ast.mli", 190, 4552, 4554), ("asmcomp/x86_ast.mli", 190, 4552, 4575), 0), 0, Tag1 ("X86_ast", 179)); (("SUB", 449), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -150); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -151)]), 0, (("asmcomp/x86_ast.mli", 191, 4576, 4578), ("asmcomp/x86_ast.mli", 191, 4576, 4596), 0), 0, Tag1 ("X86_ast", 180)); (("SUBSD", 450), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -152); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -153)]), 0, (("asmcomp/x86_ast.mli", 192, 4597, 4599), ("asmcomp/x86_ast.mli", 192, 4597, 4619), 0), 0, Tag1 ("X86_ast", 181)); (("TEST", 451), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -154); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -155)]), 0, (("asmcomp/x86_ast.mli", 193, 4620, 4622), ("asmcomp/x86_ast.mli", 193, 4620, 4641), 0), 0, Tag1 ("X86_ast", 182)); (("UCOMISD", 452), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -156); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -157)]), 0, (("asmcomp/x86_ast.mli", 194, 4642, 4644), ("asmcomp/x86_ast.mli", 194, 4642, 4666), 0), 0, Tag1 ("X86_ast", 183)); (("XCHG", 453), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -158); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -159)]), 0, (("asmcomp/x86_ast.mli", 195, 4667, 4669), ("asmcomp/x86_ast.mli", 195, 4667, 4688), 0), 0, Tag1 ("X86_ast", 184)); (("XOR", 454), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -160); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -161)]), 0, (("asmcomp/x86_ast.mli", 196, 4689, 4691), ("asmcomp/x86_ast.mli", 196, 4689, 4709), 0), 0, Tag1 ("X86_ast", 185)); (("XORPD", 455), ([(Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -162); (Tag3 ((("arg", 497)), 0, (0)), 100000000, 0, -163)]), 0, (("asmcomp/x86_ast.mli", 197, 4710, 4712), ("asmcomp/x86_ast.mli", 197, 4710, 4732), 0), 0, Tag1 ("X86_ast", 186))], 0), 1, 0, 0, 0, 0, 0, (("asmcomp/x86_ast.mli", 107, 3014, 3014), ("asmcomp/x86_ast.mli", 197, 4710, 4732), 0), 0, 0, 0, Tag1 ("X86_ast", 96)), 1, 0); Tag1 (("asm_line", 499), (0, 0, Tag1 ([(("Ins", 457), ([(Tag3 ((("instruction", 498)), 0, (0)), 100000000, 0, -4)]), 0, (("asmcomp/x86_ast.mli", 200, 4750, 4752), ("asmcomp/x86_ast.mli", 200, 4750, 4772), 0), 0, Tag1 ("X86_ast", 188)); (("Align", 458), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -5); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -6)]), 0, (("asmcomp/x86_ast.mli", 202, 4774, 4776), ("asmcomp/x86_ast.mli", 202, 4774, 4797), 0), 0, Tag1 ("X86_ast", 189)); (("Byte", 459), ([(Tag3 ((("constant", 490)), 0, (0)), 100000000, 0, -7)]), 0, (("asmcomp/x86_ast.mli", 203, 4798, 4800), ("asmcomp/x86_ast.mli", 203, 4798, 4818), 0), 0, Tag1 ("X86_ast", 190)); (("Bytes", 460), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8)]), 0, (("asmcomp/x86_ast.mli", 204, 4819, 4821), ("asmcomp/x86_ast.mli", 204, 4819, 4838), 0), 0, Tag1 ("X86_ast", 191)); (("Comment", 461), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9)]), 0, (("asmcomp/x86_ast.mli", 205, 4839, 4841), ("asmcomp/x86_ast.mli", 205, 4839, 4860), 0), 0, Tag1 ("X86_ast", 192)); (("Global", 462), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10)]), 0, (("asmcomp/x86_ast.mli", 206, 4861, 4863), ("asmcomp/x86_ast.mli", 206, 4861, 4881), 0), 0, Tag1 ("X86_ast", 193)); (("Long", 463), ([(Tag3 ((("constant", 490)), 0, (0)), 100000000, 0, -11)]), 0, (("asmcomp/x86_ast.mli", 207, 4882, 4884), ("asmcomp/x86_ast.mli", 207, 4882, 4902), 0), 0, Tag1 ("X86_ast", 194)); (("NewLabel", 464), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -12); (Tag3 ((("data_type", 491)), 0, (0)), 100000000, 0, -13)]), 0, (("asmcomp/x86_ast.mli", 208, 4903, 4905), ("asmcomp/x86_ast.mli", 208, 4903, 4937), 0), 0, Tag1 ("X86_ast", 195)); (("Quad", 465), ([(Tag3 ((("constant", 490)), 0, (0)), 100000000, 0, -14)]), 0, (("asmcomp/x86_ast.mli", 209, 4938, 4940), ("asmcomp/x86_ast.mli", 209, 4938, 4958), 0), 0, Tag1 ("X86_ast", 196)); (("Section", 466), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -16)], (0)), 100000000, 0, -15); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -18)], (0)), 100000000, 0, -17); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -20)], (0)), 100000000, 0, -19)]), 0, (("asmcomp/x86_ast.mli", 210, 4959, 4961), ("asmcomp/x86_ast.mli", 210, 4959, 5015), 0), 0, Tag1 ("X86_ast", 197)); (("Space", 467), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -21)]), 0, (("asmcomp/x86_ast.mli", 211, 5016, 5018), ("asmcomp/x86_ast.mli", 211, 5016, 5032), 0), 0, Tag1 ("X86_ast", 198)); (("Word", 468), ([(Tag3 ((("constant", 490)), 0, (0)), 100000000, 0, -22)]), 0, (("asmcomp/x86_ast.mli", 212, 5033, 5035), ("asmcomp/x86_ast.mli", 212, 5033, 5053), 0), 0, Tag1 ("X86_ast", 199)); (("External", 469), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -23); (Tag3 ((("data_type", 491)), 0, (0)), 100000000, 0, -24)]), 0, (("asmcomp/x86_ast.mli", 215, 5109, 5111), ("asmcomp/x86_ast.mli", 215, 5109, 5143), 0), 0, Tag1 ("X86_ast", 200)); (("Mode386", 470), (0), 0, (("asmcomp/x86_ast.mli", 216, 5144, 5146), ("asmcomp/x86_ast.mli", 216, 5144, 5155), 0), 0, Tag1 ("X86_ast", 201)); (("Model", 471), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -25)]), 0, (("asmcomp/x86_ast.mli", 217, 5156, 5158), ("asmcomp/x86_ast.mli", 217, 5156, 5175), 0), 0, Tag1 ("X86_ast", 202)); (("Cfi_adjust_cfa_offset", 472), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -26)]), 0, (("asmcomp/x86_ast.mli", 220, 5231, 5233), ("asmcomp/x86_ast.mli", 220, 5231, 5263), 0), 0, Tag1 ("X86_ast", 203)); (("Cfi_endproc", 473), (0), 0, (("asmcomp/x86_ast.mli", 221, 5264, 5266), ("asmcomp/x86_ast.mli", 221, 5264, 5279), 0), 0, Tag1 ("X86_ast", 204)); (("Cfi_startproc", 474), (0), 0, (("asmcomp/x86_ast.mli", 222, 5280, 5282), ("asmcomp/x86_ast.mli", 222, 5280, 5297), 0), 0, Tag1 ("X86_ast", 205)); (("Cfi_remember_state", 475), (0), 0, (("asmcomp/x86_ast.mli", 223, 5298, 5300), ("asmcomp/x86_ast.mli", 223, 5298, 5320), 0), 0, Tag1 ("X86_ast", 206)); (("Cfi_restore_state", 476), (0), 0, (("asmcomp/x86_ast.mli", 224, 5321, 5323), ("asmcomp/x86_ast.mli", 224, 5321, 5342), 0), 0, Tag1 ("X86_ast", 207)); (("Cfi_def_cfa_register", 477), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -27)]), 0, (("asmcomp/x86_ast.mli", 225, 5343, 5345), ("asmcomp/x86_ast.mli", 225, 5343, 5377), 0), 0, Tag1 ("X86_ast", 208)); (("Cfi_def_cfa_offset", 478), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -28)]), 0, (("asmcomp/x86_ast.mli", 226, 5378, 5380), ("asmcomp/x86_ast.mli", 226, 5378, 5407), 0), 0, Tag1 ("X86_ast", 209)); (("File", 479), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -29); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -30)]), 0, (("asmcomp/x86_ast.mli", 227, 5408, 5410), ("asmcomp/x86_ast.mli", 227, 5408, 5432), 0), 0, Tag1 ("X86_ast", 210)); (("Indirect_symbol", 480), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -31)]), 0, (("asmcomp/x86_ast.mli", 228, 5461, 5463), ("asmcomp/x86_ast.mli", 228, 5461, 5490), 0), 0, Tag1 ("X86_ast", 211)); (("Loc", 481), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -32); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -33); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -34)]), 0, (("asmcomp/x86_ast.mli", 229, 5491, 5493), ("asmcomp/x86_ast.mli", 229, 5491, 5517), 0), 0, Tag1 ("X86_ast", 212)); (("Private_extern", 482), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -35)]), 0, (("asmcomp/x86_ast.mli", 230, 5546, 5548), ("asmcomp/x86_ast.mli", 230, 5546, 5574), 0), 0, Tag1 ("X86_ast", 213)); (("Set", 483), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -36); (Tag3 ((("constant", 490)), 0, (0)), 100000000, 0, -37)]), 0, (("asmcomp/x86_ast.mli", 231, 5575, 5577), ("asmcomp/x86_ast.mli", 231, 5575, 5603), 0), 0, Tag1 ("X86_ast", 214)); (("Size", 484), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -38); (Tag3 ((("constant", 490)), 0, (0)), 100000000, 0, -39)]), 0, (("asmcomp/x86_ast.mli", 232, 5604, 5606), ("asmcomp/x86_ast.mli", 232, 5604, 5633), 0), 0, Tag1 ("X86_ast", 215)); (("Type", 485), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -40); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -41)]), 0, (("asmcomp/x86_ast.mli", 233, 5634, 5636), ("asmcomp/x86_ast.mli", 233, 5634, 5661), 0), 0, Tag1 ("X86_ast", 216))], 0), 1, 0, 0, 0, 0, 0, (("asmcomp/x86_ast.mli", 199, 4734, 4734), ("asmcomp/x86_ast.mli", 233, 5634, 5661), 0), 0, 0, 0, Tag1 ("X86_ast", 187)), 1, 0); Tag1 (("asm_program", 500), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("asm_line", 499)), 0, (0)), 100000000, 0, -3)], (0)), 100000000, 0, -2)), 0, 0, 0, 0, (("asmcomp/x86_ast.mli", 235, 5663, 5663), ("asmcomp/x86_ast.mli", 235, 5663, 5695), 0), 0, 0, 0, Tag1 ("X86_ast", 217)), 1, 0)], "X86_ast", [("X86_ast", ("_J}e\221\174\027(J\165T\180=\151\227n")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

type asm_program = asm_line list
