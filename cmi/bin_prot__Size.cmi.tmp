type 'a sizer = 'a -> int
type ('a, 'b) sizer1 = 'a sizer -> 'b sizer
type ('a, 'b, 'c) sizer2 = 'a sizer -> ('b, 'c) sizer1
type ('a, 'b, 'c, 'd) sizer3 = 'a sizer -> ('b, 'c, 'd) sizer2
val bin_size_unit : unit sizer
val bin_size_bool : bool sizer
val bin_size_string : string sizer
val bin_size_bytes : bytes sizer
val bin_size_char : char sizer
val bin_size_int : int sizer
val bin_size_float : float sizer
val bin_size_int32 : int32 sizer
val bin_size_int64 : int64 sizer
val bin_size_nativeint : nativeint sizer
val bin_size_nat0 : Bin_prot__.Nat0.t sizer
val bin_size_ref : ('a, 'a ref) sizer1
val bin_size_lazy_t : ('a, 'a lazy_t) sizer1
val bin_size_lazy : ('a, 'a lazy_t) sizer1
val bin_size_option : ('a, 'a option) sizer1
val bin_size_pair : ('a, 'b, 'a * 'b) sizer2
val bin_size_triple : ('a, 'b, 'c, 'a * 'b * 'c) sizer3
val bin_size_list : ('a, 'a list) sizer1
val bin_size_array : ('a, 'a array) sizer1
val bin_size_hashtbl : ('a, 'b, ('a, 'b) Hashtbl.t) sizer2
val bin_size_float32_vec : Bin_prot__.Common.vec32 sizer
val bin_size_float64_vec : Bin_prot__.Common.vec64 sizer
val bin_size_vec : Bin_prot__.Common.vec sizer
val bin_size_float32_mat : Bin_prot__.Common.mat32 sizer
val bin_size_float64_mat : Bin_prot__.Common.mat64 sizer
val bin_size_mat : Bin_prot__.Common.mat sizer
val bin_size_bigstring : Bin_prot__.Common.buf sizer
val bin_size_floatarray : floatarray sizer
val bin_size_variant_int : int sizer
val bin_size_int_8bit : int sizer
val bin_size_int_16bit : int sizer
val bin_size_int_32bit : int sizer
val bin_size_int_64bit : int sizer
val bin_size_int64_bits : int64 sizer
val bin_size_network16_int : int sizer
val bin_size_network32_int : int sizer
val bin_size_network32_int32 : int32 sizer
val bin_size_network64_int : int sizer
val bin_size_network64_int64 : int64 sizer
val bin_size_md5 : Md5_lib.t sizer
module Maximum :
  sig
    val bin_size_unit : int
    val bin_size_bool : int
    val bin_size_char : int
    val bin_size_md5 : int
    val bin_size_int : int
    val bin_size_float : int
    val bin_size_int32 : int
    val bin_size_int64 : int
    val bin_size_nativeint : int
    val bin_size_nat0 : int
    val bin_size_variant_int : int
    val bin_size_int_8bit : int
    val bin_size_int_16bit : int
    val bin_size_int_32bit : int
    val bin_size_int_64bit : int
    val bin_size_int64_bits : int
    val bin_size_network16_int : int
    val bin_size_network32_int : int
    val bin_size_network32_int32 : int
    val bin_size_network64_int : int
    val bin_size_network64_int64 : int
  end
module Minimum :
  sig
    val bin_size_unit : int
    val bin_size_bool : int
    val bin_size_string : int
    val bin_size_bytes : int
    val bin_size_char : int
    val bin_size_md5 : int
    val bin_size_int : int
    val bin_size_float : int
    val bin_size_int32 : int
    val bin_size_int64 : int
    val bin_size_nativeint : int
    val bin_size_nat0 : int
    val bin_size_ref : int
    val bin_size_lazy_t : int
    val bin_size_option : int
    val bin_size_pair : int
    val bin_size_triple : int
    val bin_size_list : int
    val bin_size_array : int
    val bin_size_hashtbl : int
    val bin_size_float32_vec : int
    val bin_size_float64_vec : int
    val bin_size_vec : int
    val bin_size_float32_mat : int
    val bin_size_float64_mat : int
    val bin_size_mat : int
    val bin_size_bigstring : int
    val bin_size_floatarray : int
    val bin_size_float_array : int
    val bin_size_variant_int : int
    val bin_size_int_8bit : int
    val bin_size_int_16bit : int
    val bin_size_int_32bit : int
    val bin_size_int_64bit : int
    val bin_size_int64_bits : int
    val bin_size_network16_int : int
    val bin_size_network32_int : int
    val bin_size_network32_int32 : int
    val bin_size_network64_int : int
    val bin_size_network64_int64 : int("DEBUG:rule", [Tag1 (("sizer", 524), ([((("a")), 100000000, 0, -115)], 1, 0, 1, ((Tag1 (0, ((("a")), 100000000, 0, -115), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -114), 0), 100000000, 0, -113)), [46], [0], 0, 0, (("src/size.mli", 5, 68, 68), ("src/size.mli", 5, 68, 93), 0), 0, 0, 0, Tag1 ("Bin_prot__Size", 0)), 1, 0); Tag1 (("sizer1", 525), ([((("a")), 100000000, 0, -112); ((("b")), 100000000, 0, -110)], 2, 0, 1, ((Tag1 (0, (Tag3 ((("sizer", 524)), [((("a")), 100000000, 0, -112)], (0)), 100000000, 0, -111), (Tag3 ((("sizer", 524)), [((("b")), 100000000, 0, -110)], (0)), 100000000, 0, -109), 0), 100000000, 0, -108)), [29; 46], [0; 0], 0, 0, (("src/size.mli", 6, 94, 94), ("src/size.mli", 6, 94, 137), 0), 0, 0, 0, Tag1 ("Bin_prot__Size", 1)), 1, 0); Tag1 (("sizer2", 526), ([((("a")), 100000000, 0, -107); ((("b")), 100000000, 0, -104); ((("c")), 100000000, 0, -105)], 3, 0, 1, ((Tag1 (0, (Tag3 ((("sizer", 524)), [((("a")), 100000000, 0, -107)], (0)), 100000000, 0, -106), (Tag3 ((("sizer1", 525)), [((("b")), 100000000, 0, -104); ((("c")), 100000000, 0, -105)], (0)), 100000000, 0, -103), 0), 100000000, 0, -102)), [29; 29; 46], [0; 0; 0], 0, 0, (("src/size.mli", 7, 138, 138), ("src/size.mli", 7, 138, 192), 0), 0, 0, 0, Tag1 ("Bin_prot__Size", 2)), 1, 0); Tag1 (("sizer3", 527), ([((("a")), 100000000, 0, -101); ((("b")), 100000000, 0, -97); ((("c")), 100000000, 0, -98); ((("d")), 100000000, 0, -99)], 4, 0, 1, ((Tag1 (0, (Tag3 ((("sizer", 524)), [((("a")), 100000000, 0, -101)], (0)), 100000000, 0, -100), (Tag3 ((("sizer2", 526)), [((("b")), 100000000, 0, -97); ((("c")), 100000000, 0, -98); ((("d")), 100000000, 0, -99)], (0)), 100000000, 0, -96), 0), 100000000, 0, -95)), [29; 29; 29; 46], [0; 0; 0; 0], 0, 0, (("src/size.mli", 8, 193, 193), ("src/size.mli", 8, 193, 255), 0), 0, 0, 0, Tag1 ("Bin_prot__Size", 3)), 1, 0); (("bin_size_unit", 528), ((Tag3 ((("sizer", 524)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -94)], (0)), 100000000, 0, -93), 0, (("src/size.mli", 10, 257, 257), ("src/size.mli", 10, 257, 287), 0), 0, Tag1 ("Bin_prot__Size", 4)), 0); (("bin_size_bool", 529), ((Tag3 ((("sizer", 524)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -92)], (0)), 100000000, 0, -91), 0, (("src/size.mli", 11, 288, 288), ("src/size.mli", 11, 288, 318), 0), 0, Tag1 ("Bin_prot__Size", 5)), 0); (("bin_size_string", 530), ((Tag3 ((("sizer", 524)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -90)], (0)), 100000000, 0, -89), 0, (("src/size.mli", 12, 319, 319), ("src/size.mli", 12, 319, 353), 0), 0, Tag1 ("Bin_prot__Size", 6)), 0); (("bin_size_bytes", 531), ((Tag3 ((("sizer", 524)), [(Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -88)], (0)), 100000000, 0, -87), 0, (("src/size.mli", 13, 354, 354), ("src/size.mli", 13, 354, 386), 0), 0, Tag1 ("Bin_prot__Size", 7)), 0); (("bin_size_char", 532), ((Tag3 ((("sizer", 524)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -86)], (0)), 100000000, 0, -85), 0, (("src/size.mli", 14, 387, 387), ("src/size.mli", 14, 387, 417), 0), 0, Tag1 ("Bin_prot__Size", 8)), 0); (("bin_size_int", 533), ((Tag3 ((("sizer", 524)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -84)], (0)), 100000000, 0, -83), 0, (("src/size.mli", 15, 418, 418), ("src/size.mli", 15, 418, 446), 0), 0, Tag1 ("Bin_prot__Size", 9)), 0); (("bin_size_float", 534), ((Tag3 ((("sizer", 524)), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -82)], (0)), 100000000, 0, -81), 0, (("src/size.mli", 16, 447, 447), ("src/size.mli", 16, 447, 479), 0), 0, Tag1 ("Bin_prot__Size", 10)), 0); (("bin_size_int32", 535), ((Tag3 ((("sizer", 524)), [(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -80)], (0)), 100000000, 0, -79), 0, (("src/size.mli", 17, 480, 480), ("src/size.mli", 17, 480, 512), 0), 0, Tag1 ("Bin_prot__Size", 11)), 0); (("bin_size_int64", 536), ((Tag3 ((("sizer", 524)), [(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -78)], (0)), 100000000, 0, -77), 0, (("src/size.mli", 18, 513, 513), ("src/size.mli", 18, 513, 545), 0), 0, Tag1 ("Bin_prot__Size", 12)), 0); (("bin_size_nativeint", 537), ((Tag3 ((("sizer", 524)), [(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -76)], (0)), 100000000, 0, -75), 0, (("src/size.mli", 19, 546, 546), ("src/size.mli", 19, 546, 586), 0), 0, Tag1 ("Bin_prot__Size", 13)), 0); (("bin_size_nat0", 538), ((Tag3 ((("sizer", 524)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Nat0"), "t"), 0, (0)), 100000000, 0, -74)], (0)), 100000000, 0, -73), 0, (("src/size.mli", 20, 587, 587), ("src/size.mli", 20, 587, 619), 0), 0, Tag1 ("Bin_prot__Size", 14)), 0); (("bin_size_ref", 539), ((Tag3 ((("sizer1", 525)), [((("a")), 100000000, 0, -71); (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [((("a")), 100000000, 0, -71)], (0)), 100000000, 0, -72)], (0)), 100000000, 0, -70), 0, (("src/size.mli", 21, 620, 620), ("src/size.mli", 21, 620, 658), 0), 0, Tag1 ("Bin_prot__Size", 15)), 0); (("bin_size_lazy_t", 540), ((Tag3 ((("sizer1", 525)), [((("a")), 100000000, 0, -68); (Tag3 ((Tag3 ("lazy_t", 14)), [((("a")), 100000000, 0, -68)], (0)), 100000000, 0, -69)], (0)), 100000000, 0, -67), 0, (("src/size.mli", 22, 659, 659), ("src/size.mli", 22, 659, 703), 0), 0, Tag1 ("Bin_prot__Size", 16)), 0); (("bin_size_lazy", 541), ((Tag3 ((("sizer1", 525)), [((("a")), 100000000, 0, -65); (Tag3 ((Tag3 ("lazy_t", 14)), [((("a")), 100000000, 0, -65)], (0)), 100000000, 0, -66)], (0)), 100000000, 0, -64), 0, (("src/size.mli", 24, 705, 705), ("src/size.mli", 24, 705, 747), 0), 0, Tag1 ("Bin_prot__Size", 17)), 0); (("bin_size_option", 542), ((Tag3 ((("sizer1", 525)), [((("a")), 100000000, 0, -62); (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -62)], (0)), 100000000, 0, -63)], (0)), 100000000, 0, -61), 0, (("src/size.mli", 25, 748, 748), ("src/size.mli", 25, 748, 792), 0), 0, Tag1 ("Bin_prot__Size", 18)), 0); (("bin_size_pair", 543), ((Tag3 ((("sizer2", 526)), [((("a")), 100000000, 0, -58); ((("b")), 100000000, 0, -59); (Tag2 ([((("a")), 100000000, 0, -58); ((("b")), 100000000, 0, -59)]), 100000000, 0, -60)], (0)), 100000000, 0, -57), 0, (("src/size.mli", 26, 793, 793), ("src/size.mli", 26, 793, 837), 0), 0, Tag1 ("Bin_prot__Size", 19)), 0); (("bin_size_triple", 544), ((Tag3 ((("sizer3", 527)), [((("a")), 100000000, 0, -53); ((("b")), 100000000, 0, -54); ((("c")), 100000000, 0, -55); (Tag2 ([((("a")), 100000000, 0, -53); ((("b")), 100000000, 0, -54); ((("c")), 100000000, 0, -55)]), 100000000, 0, -56)], (0)), 100000000, 0, -52), 0, (("src/size.mli", 27, 838, 838), ("src/size.mli", 27, 838, 893), 0), 0, Tag1 ("Bin_prot__Size", 20)), 0); (("bin_size_list", 545), ((Tag3 ((("sizer1", 525)), [((("a")), 100000000, 0, -50); (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -50)], (0)), 100000000, 0, -51)], (0)), 100000000, 0, -49), 0, (("src/size.mli", 28, 894, 894), ("src/size.mli", 28, 894, 934), 0), 0, Tag1 ("Bin_prot__Size", 21)), 0); (("bin_size_array", 546), ((Tag3 ((("sizer1", 525)), [((("a")), 100000000, 0, -47); (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -47)], (0)), 100000000, 0, -48)], (0)), 100000000, 0, -46), 0, (("src/size.mli", 29, 935, 935), ("src/size.mli", 29, 935, 977), 0), 0, Tag1 ("Bin_prot__Size", 22)), 0); (("bin_size_hashtbl", 547), ((Tag3 ((("sizer2", 526)), [((("a")), 100000000, 0, -43); ((("b")), 100000000, 0, -44); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Hashtbl"), "t"), [((("a")), 100000000, 0, -43); ((("b")), 100000000, 0, -44)], (0)), 100000000, 0, -45)], (0)), 100000000, 0, -42), 0, (("src/size.mli", 30, 978, 978), ("src/size.mli", 30, 978, 1036), 0), 0, Tag1 ("Bin_prot__Size", 23)), 0); (("bin_size_float32_vec", 548), ((Tag3 ((("sizer", 524)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "vec32"), 0, (0)), 100000000, 0, -41)], (0)), 100000000, 0, -40), 0, (("src/size.mli", 31, 1037, 1037), ("src/size.mli", 31, 1037, 1075), 0), 0, Tag1 ("Bin_prot__Size", 24)), 0); (("bin_size_float64_vec", 549), ((Tag3 ((("sizer", 524)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "vec64"), 0, (0)), 100000000, 0, -39)], (0)), 100000000, 0, -38), 0, (("src/size.mli", 32, 1076, 1076), ("src/size.mli", 32, 1076, 1114), 0), 0, Tag1 ("Bin_prot__Size", 25)), 0); (("bin_size_vec", 550), ((Tag3 ((("sizer", 524)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "vec"), 0, (0)), 100000000, 0, -37)], (0)), 100000000, 0, -36), 0, (("src/size.mli", 33, 1115, 1115), ("src/size.mli", 33, 1115, 1143), 0), 0, Tag1 ("Bin_prot__Size", 26)), 0); (("bin_size_float32_mat", 551), ((Tag3 ((("sizer", 524)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "mat32"), 0, (0)), 100000000, 0, -35)], (0)), 100000000, 0, -34), 0, (("src/size.mli", 34, 1144, 1144), ("src/size.mli", 34, 1144, 1182), 0), 0, Tag1 ("Bin_prot__Size", 27)), 0); (("bin_size_float64_mat", 552), ((Tag3 ((("sizer", 524)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "mat64"), 0, (0)), 100000000, 0, -33)], (0)), 100000000, 0, -32), 0, (("src/size.mli", 35, 1183, 1183), ("src/size.mli", 35, 1183, 1221), 0), 0, Tag1 ("Bin_prot__Size", 28)), 0); (("bin_size_mat", 553), ((Tag3 ((("sizer", 524)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "mat"), 0, (0)), 100000000, 0, -31)], (0)), 100000000, 0, -30), 0, (("src/size.mli", 36, 1222, 1222), ("src/size.mli", 36, 1222, 1250), 0), 0, Tag1 ("Bin_prot__Size", 29)), 0); (("bin_size_bigstring", 554), ((Tag3 ((("sizer", 524)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Bin_prot__")), "Common"), "buf"), 0, (0)), 100000000, 0, -29)], (0)), 100000000, 0, -28), 0, (("src/size.mli", 37, 1251, 1251), ("src/size.mli", 37, 1251, 1285), 0), 0, Tag1 ("Bin_prot__Size", 30)), 0); (("bin_size_floatarray", 555), ((Tag3 ((("sizer", 524)), [(Tag3 ((Tag3 ("floatarray", 17)), 0, (0)), 100000000, 0, -27)], (0)), 100000000, 0, -26), 0, (("src/size.mli", 38, 1286, 1286), ("src/size.mli", 38, 1286, 1328), 0), 0, Tag1 ("Bin_prot__Size", 31)), 0); (("bin_size_variant_int", 556), ((Tag3 ((("sizer", 524)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -25)], (0)), 100000000, 0, -24), 0, (("src/size.mli", 39, 1329, 1329), ("src/size.mli", 39, 1329, 1365), 0), 0, Tag1 ("Bin_prot__Size", 32)), 0); (("bin_size_int_8bit", 557), ((Tag3 ((("sizer", 524)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -23)], (0)), 100000000, 0, -22), 0, (("src/size.mli", 40, 1366, 1366), ("src/size.mli", 40, 1366, 1399), 0), 0, Tag1 ("Bin_prot__Size", 33)), 0); (("bin_size_int_16bit", 558), ((Tag3 ((("sizer", 524)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -21)], (0)), 100000000, 0, -20), 0, (("src/size.mli", 41, 1400, 1400), ("src/size.mli", 41, 1400, 1434), 0), 0, Tag1 ("Bin_prot__Size", 34)), 0); (("bin_size_int_32bit", 559), ((Tag3 ((("sizer", 524)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -19)], (0)), 100000000, 0, -18), 0, (("src/size.mli", 42, 1435, 1435), ("src/size.mli", 42, 1435, 1469), 0), 0, Tag1 ("Bin_prot__Size", 35)), 0); (("bin_size_int_64bit", 560), ((Tag3 ((("sizer", 524)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -17)], (0)), 100000000, 0, -16), 0, (("src/size.mli", 43, 1470, 1470), ("src/size.mli", 43, 1470, 1504), 0), 0, Tag1 ("Bin_prot__Size", 36)), 0); (("bin_size_int64_bits", 561), ((Tag3 ((("sizer", 524)), [(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -15)], (0)), 100000000, 0, -14), 0, (("src/size.mli", 44, 1505, 1505), ("src/size.mli", 44, 1505, 1542), 0), 0, Tag1 ("Bin_prot__Size", 37)), 0); (("bin_size_network16_int", 562), ((Tag3 ((("sizer", 524)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -13)], (0)), 100000000, 0, -12), 0, (("src/size.mli", 45, 1543, 1543), ("src/size.mli", 45, 1543, 1581), 0), 0, Tag1 ("Bin_prot__Size", 38)), 0); (("bin_size_network32_int", 563), ((Tag3 ((("sizer", 524)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -11)], (0)), 100000000, 0, -10), 0, (("src/size.mli", 46, 1582, 1582), ("src/size.mli", 46, 1582, 1620), 0), 0, Tag1 ("Bin_prot__Size", 39)), 0); (("bin_size_network32_int32", 564), ((Tag3 ((("sizer", 524)), [(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -9)], (0)), 100000000, 0, -8), 0, (("src/size.mli", 47, 1621, 1621), ("src/size.mli", 47, 1621, 1663), 0), 0, Tag1 ("Bin_prot__Size", 40)), 0); (("bin_size_network64_int", 565), ((Tag3 ((("sizer", 524)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7)], (0)), 100000000, 0, -6), 0, (("src/size.mli", 48, 1664, 1664), ("src/size.mli", 48, 1664, 1702), 0), 0, Tag1 ("Bin_prot__Size", 41)), 0); (("bin_size_network64_int64", 566), ((Tag3 ((("sizer", 524)), [(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -5)], (0)), 100000000, 0, -4), 0, (("src/size.mli", 49, 1703, 1703), ("src/size.mli", 49, 1703, 1745), 0), 0, Tag1 ("Bin_prot__Size", 42)), 0); (("bin_size_md5", 567), ((Tag3 ((("sizer", 524)), [(Tag3 (Tag1 ((Tag2 ("Md5_lib")), "t"), 0, (0)), 100000000, 0, -3)], (0)), 100000000, 0, -2), 0, (("src/size.mli", 50, 1746, 1746), ("src/size.mli", 50, 1746, 1780), 0), 0, Tag1 ("Bin_prot__Size", 43)), 0); Tag3 (("Maximum", 568), 0, (Tag1 ([(("bin_size_unit", 570), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -136), 0, (("src/size.mli", 56, 2034, 2036), ("src/size.mli", 56, 2034, 2059), 0), 0, Tag1 ("Bin_prot__Size", 44)), 0); (("bin_size_bool", 571), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -135), 0, (("src/size.mli", 57, 2060, 2062), ("src/size.mli", 57, 2060, 2085), 0), 0, Tag1 ("Bin_prot__Size", 45)), 0); (("bin_size_char", 572), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -134), 0, (("src/size.mli", 58, 2086, 2088), ("src/size.mli", 58, 2086, 2111), 0), 0, Tag1 ("Bin_prot__Size", 46)), 0); (("bin_size_md5", 573), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -133), 0, (("src/size.mli", 59, 2112, 2114), ("src/size.mli", 59, 2112, 2136), 0), 0, Tag1 ("Bin_prot__Size", 47)), 0); (("bin_size_int", 574), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -132), 0, (("src/size.mli", 60, 2137, 2139), ("src/size.mli", 60, 2137, 2161), 0), 0, Tag1 ("Bin_prot__Size", 48)), 0); (("bin_size_float", 575), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -131), 0, (("src/size.mli", 61, 2162, 2164), ("src/size.mli", 61, 2162, 2188), 0), 0, Tag1 ("Bin_prot__Size", 49)), 0); (("bin_size_int32", 576), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -130), 0, (("src/size.mli", 62, 2189, 2191), ("src/size.mli", 62, 2189, 2215), 0), 0, Tag1 ("Bin_prot__Size", 50)), 0); (("bin_size_int64", 577), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -129), 0, (("src/size.mli", 63, 2216, 2218), ("src/size.mli", 63, 2216, 2242), 0), 0, Tag1 ("Bin_prot__Size", 51)), 0); (("bin_size_nativeint", 578), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -128), 0, (("src/size.mli", 64, 2243, 2245), ("src/size.mli", 64, 2243, 2273), 0), 0, Tag1 ("Bin_prot__Size", 52)), 0); (("bin_size_nat0", 579), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -127), 0, (("src/size.mli", 65, 2274, 2276), ("src/size.mli", 65, 2274, 2299), 0), 0, Tag1 ("Bin_prot__Size", 53)), 0); (("bin_size_variant_int", 580), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -126), 0, (("src/size.mli", 66, 2300, 2302), ("src/size.mli", 66, 2300, 2332), 0), 0, Tag1 ("Bin_prot__Size", 54)), 0); (("bin_size_int_8bit", 581), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -125), 0, (("src/size.mli", 67, 2333, 2335), ("src/size.mli", 67, 2333, 2362), 0), 0, Tag1 ("Bin_prot__Size", 55)), 0); (("bin_size_int_16bit", 582), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -124), 0, (("src/size.mli", 68, 2363, 2365), ("src/size.mli", 68, 2363, 2393), 0), 0, Tag1 ("Bin_prot__Size", 56)), 0); (("bin_size_int_32bit", 583), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -123), 0, (("src/size.mli", 69, 2394, 2396), ("src/size.mli", 69, 2394, 2424), 0), 0, Tag1 ("Bin_prot__Size", 57)), 0); (("bin_size_int_64bit", 584), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -122), 0, (("src/size.mli", 70, 2425, 2427), ("src/size.mli", 70, 2425, 2455), 0), 0, Tag1 ("Bin_prot__Size", 58)), 0); (("bin_size_int64_bits", 585), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -121), 0, (("src/size.mli", 71, 2456, 2458), ("src/size.mli", 71, 2456, 2487), 0), 0, Tag1 ("Bin_prot__Size", 59)), 0); (("bin_size_network16_int", 586), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -120), 0, (("src/size.mli", 72, 2488, 2490), ("src/size.mli", 72, 2488, 2522), 0), 0, Tag1 ("Bin_prot__Size", 60)), 0); (("bin_size_network32_int", 587), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -119), 0, (("src/size.mli", 73, 2523, 2525), ("src/size.mli", 73, 2523, 2557), 0), 0, Tag1 ("Bin_prot__Size", 61)), 0); (("bin_size_network32_int32", 588), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -118), 0, (("src/size.mli", 74, 2558, 2560), ("src/size.mli", 74, 2558, 2594), 0), 0, Tag1 ("Bin_prot__Size", 62)), 0); (("bin_size_network64_int", 589), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -117), 0, (("src/size.mli", 75, 2595, 2597), ("src/size.mli", 75, 2595, 2629), 0), 0, Tag1 ("Bin_prot__Size", 63)), 0); (("bin_size_network64_int64", 590), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -116), 0, (("src/size.mli", 76, 2630, 2632), ("src/size.mli", 76, 2630, 2666), 0), 0, Tag1 ("Bin_prot__Size", 64)), 0)]), 0, (("src/size.mli", 55, 2013, 2013), ("src/size.mli", 77, 2667, 2670), 0), Tag1 ("Bin_prot__Size", 65)), 0, 0); Tag3 (("Minimum", 569), 0, (Tag1 ([(("bin_size_unit", 591), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -176), 0, (("src/size.mli", 82, 2806, 2808), ("src/size.mli", 82, 2806, 2831), 0), 0, Tag1 ("Bin_prot__Size", 66)), 0); (("bin_size_bool", 592), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -175), 0, (("src/size.mli", 83, 2832, 2834), ("src/size.mli", 83, 2832, 2857), 0), 0, Tag1 ("Bin_prot__Size", 67)), 0); (("bin_size_string", 593), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -174), 0, (("src/size.mli", 84, 2858, 2860), ("src/size.mli", 84, 2858, 2885), 0), 0, Tag1 ("Bin_prot__Size", 68)), 0); (("bin_size_bytes", 594), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -173), 0, (("src/size.mli", 85, 2886, 2888), ("src/size.mli", 85, 2886, 2912), 0), 0, Tag1 ("Bin_prot__Size", 69)), 0); (("bin_size_char", 595), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -172), 0, (("src/size.mli", 86, 2913, 2915), ("src/size.mli", 86, 2913, 2938), 0), 0, Tag1 ("Bin_prot__Size", 70)), 0); (("bin_size_md5", 596), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -171), 0, (("src/size.mli", 87, 2939, 2941), ("src/size.mli", 87, 2939, 2963), 0), 0, Tag1 ("Bin_prot__Size", 71)), 0); (("bin_size_int", 597), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -170), 0, (("src/size.mli", 88, 2964, 2966), ("src/size.mli", 88, 2964, 2988), 0), 0, Tag1 ("Bin_prot__Size", 72)), 0); (("bin_size_float", 598), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -169), 0, (("src/size.mli", 89, 2989, 2991), ("src/size.mli", 89, 2989, 3015), 0), 0, Tag1 ("Bin_prot__Size", 73)), 0); (("bin_size_int32", 599), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -168), 0, (("src/size.mli", 90, 3016, 3018), ("src/size.mli", 90, 3016, 3042), 0), 0, Tag1 ("Bin_prot__Size", 74)), 0); (("bin_size_int64", 600), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -167), 0, (("src/size.mli", 91, 3043, 3045), ("src/size.mli", 91, 3043, 3069), 0), 0, Tag1 ("Bin_prot__Size", 75)), 0); (("bin_size_nativeint", 601), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -166), 0, (("src/size.mli", 92, 3070, 3072), ("src/size.mli", 92, 3070, 3100), 0), 0, Tag1 ("Bin_prot__Size", 76)), 0); (("bin_size_nat0", 602), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -165), 0, (("src/size.mli", 93, 3101, 3103), ("src/size.mli", 93, 3101, 3126), 0), 0, Tag1 ("Bin_prot__Size", 77)), 0); (("bin_size_ref", 603), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -164), 0, (("src/size.mli", 94, 3127, 3129), ("src/size.mli", 94, 3127, 3151), 0), 0, Tag1 ("Bin_prot__Size", 78)), 0); (("bin_size_lazy_t", 604), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -163), 0, (("src/size.mli", 95, 3152, 3154), ("src/size.mli", 95, 3152, 3179), 0), 0, Tag1 ("Bin_prot__Size", 79)), 0); (("bin_size_option", 605), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -162), 0, (("src/size.mli", 96, 3180, 3182), ("src/size.mli", 96, 3180, 3207), 0), 0, Tag1 ("Bin_prot__Size", 80)), 0); (("bin_size_pair", 606), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -161), 0, (("src/size.mli", 97, 3208, 3210), ("src/size.mli", 97, 3208, 3233), 0), 0, Tag1 ("Bin_prot__Size", 81)), 0); (("bin_size_triple", 607), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -160), 0, (("src/size.mli", 98, 3234, 3236), ("src/size.mli", 98, 3234, 3261), 0), 0, Tag1 ("Bin_prot__Size", 82)), 0); (("bin_size_list", 608), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -159), 0, (("src/size.mli", 99, 3262, 3264), ("src/size.mli", 99, 3262, 3287), 0), 0, Tag1 ("Bin_prot__Size", 83)), 0); (("bin_size_array", 609), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -158), 0, (("src/size.mli", 100, 3288, 3290), ("src/size.mli", 100, 3288, 3314), 0), 0, Tag1 ("Bin_prot__Size", 84)), 0); (("bin_size_hashtbl", 610), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -157), 0, (("src/size.mli", 101, 3315, 3317), ("src/size.mli", 101, 3315, 3343), 0), 0, Tag1 ("Bin_prot__Size", 85)), 0); (("bin_size_float32_vec", 611), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -156), 0, (("src/size.mli", 102, 3344, 3346), ("src/size.mli", 102, 3344, 3376), 0), 0, Tag1 ("Bin_prot__Size", 86)), 0); (("bin_size_float64_vec", 612), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -155), 0, (("src/size.mli", 103, 3377, 3379), ("src/size.mli", 103, 3377, 3409), 0), 0, Tag1 ("Bin_prot__Size", 87)), 0); (("bin_size_vec", 613), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -154), 0, (("src/size.mli", 104, 3410, 3412), ("src/size.mli", 104, 3410, 3434), 0), 0, Tag1 ("Bin_prot__Size", 88)), 0); (("bin_size_float32_mat", 614), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -153), 0, (("src/size.mli", 105, 3435, 3437), ("src/size.mli", 105, 3435, 3467), 0), 0, Tag1 ("Bin_prot__Size", 89)), 0); (("bin_size_float64_mat", 615), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -152), 0, (("src/size.mli", 106, 3468, 3470), ("src/size.mli", 106, 3468, 3500), 0), 0, Tag1 ("Bin_prot__Size", 90)), 0); (("bin_size_mat", 616), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -151), 0, (("src/size.mli", 107, 3501, 3503), ("src/size.mli", 107, 3501, 3525), 0), 0, Tag1 ("Bin_prot__Size", 91)), 0); (("bin_size_bigstring", 617), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -150), 0, (("src/size.mli", 108, 3526, 3528), ("src/size.mli", 108, 3526, 3556), 0), 0, Tag1 ("Bin_prot__Size", 92)), 0); (("bin_size_floatarray", 618), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -149), 0, (("src/size.mli", 109, 3557, 3559), ("src/size.mli", 109, 3557, 3588), 0), 0, Tag1 ("Bin_prot__Size", 93)), 0); (("bin_size_float_array", 619), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -148), 0, (("src/size.mli", 110, 3589, 3591), ("src/size.mli", 110, 3589, 3621), 0), 0, Tag1 ("Bin_prot__Size", 94)), 0); (("bin_size_variant_int", 620), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -147), 0, (("src/size.mli", 111, 3622, 3624), ("src/size.mli", 111, 3622, 3654), 0), 0, Tag1 ("Bin_prot__Size", 95)), 0); (("bin_size_int_8bit", 621), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -146), 0, (("src/size.mli", 112, 3655, 3657), ("src/size.mli", 112, 3655, 3684), 0), 0, Tag1 ("Bin_prot__Size", 96)), 0); (("bin_size_int_16bit", 622), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -145), 0, (("src/size.mli", 113, 3685, 3687), ("src/size.mli", 113, 3685, 3715), 0), 0, Tag1 ("Bin_prot__Size", 97)), 0); (("bin_size_int_32bit", 623), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -144), 0, (("src/size.mli", 114, 3716, 3718), ("src/size.mli", 114, 3716, 3746), 0), 0, Tag1 ("Bin_prot__Size", 98)), 0); (("bin_size_int_64bit", 624), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -143), 0, (("src/size.mli", 115, 3747, 3749), ("src/size.mli", 115, 3747, 3777), 0), 0, Tag1 ("Bin_prot__Size", 99)), 0); (("bin_size_int64_bits", 625), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -142), 0, (("src/size.mli", 116, 3778, 3780), ("src/size.mli", 116, 3778, 3809), 0), 0, Tag1 ("Bin_prot__Size", 100)), 0); (("bin_size_network16_int", 626), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -141), 0, (("src/size.mli", 117, 3810, 3812), ("src/size.mli", 117, 3810, 3844), 0), 0, Tag1 ("Bin_prot__Size", 101)), 0); (("bin_size_network32_int", 627), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -140), 0, (("src/size.mli", 118, 3845, 3847), ("src/size.mli", 118, 3845, 3879), 0), 0, Tag1 ("Bin_prot__Size", 102)), 0); (("bin_size_network32_int32", 628), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -139), 0, (("src/size.mli", 119, 3880, 3882), ("src/size.mli", 119, 3880, 3916), 0), 0, Tag1 ("Bin_prot__Size", 103)), 0); (("bin_size_network64_int", 629), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -138), 0, (("src/size.mli", 120, 3917, 3919), ("src/size.mli", 120, 3917, 3951), 0), 0, Tag1 ("Bin_prot__Size", 104)), 0); (("bin_size_network64_int64", 630), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -137), 0, (("src/size.mli", 121, 3952, 3954), ("src/size.mli", 121, 3952, 3988), 0), 0, Tag1 ("Bin_prot__Size", 105)), 0)]), 0, (("src/size.mli", 81, 2785, 2785), ("src/size.mli", 122, 3989, 3992), 0), Tag1 ("Bin_prot__Size", 106)), 0, 0)], "Bin_prot__Size", [("Bin_prot__Size", ("\021\216\136a\145\207\251\017\243\165}nk\169\153\193")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Md5_lib", ("\027\247~\199'\195O\175\232\149\147\228\248S\0073")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Bin_prot__Nat0", ("<\164\1881k\195J\024\147\212|H\130R\2178")); ("Bin_prot__Common", ("\000[\231\0295\203\157wv\152\171sEe\181\017")); ("Bin_prot__", ("N\162)\214\210X\006\190\194\220\b\004\164\226\022\181"))], [(0)])

  end
