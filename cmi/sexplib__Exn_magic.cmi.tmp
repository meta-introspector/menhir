val register : exn -> string -> unit
val register1 : ('a -> exn) -> string -> ('a -> Sexplib.Sexp.t) -> unit
val register2 :
  ('a -> 'b -> exn) ->
  string -> ('a -> Sexplib.Sexp.t) -> ('b -> Sexplib.Sexp.t) -> unit
val register3 :
  ('a -> 'b -> 'c -> exn) ->
  string ->
  ('a -> Sexplib.Sexp.t) ->
  ('b -> Sexplib.Sexp.t) -> ('c -> Sexplib.Sexp.t) -> unit
val register4 :
  ('a -> 'b -> 'c -> 'd -> exn) ->
  string ->
  ('a -> Sexplib.Sexp.t) ->
  ('b -> Sexplib.Sexp.t) ->
  ('c -> Sexplib.Sexp.t) -> ('d -> Sexplib.Sexp.t) -> unit
val register5 :
  ('a -> 'b -> 'c -> 'd -> 'e -> exn) ->
  string ->
  ('a -> Sexplib.Sexp.t) ->
  ('b -> Sexplib.Sexp.t) ->
  ('c -> Sexplib.Sexp.t) ->
  ('d -> Sexplib.Sexp.t) -> ('e -> Sexplib.Sexp.t) -> unit
val register6 :
  ('a -> 'b -> 'c -> 'd -> 'e -> 'f -> exn) ->
  string ->
  ('a -> Sexplib.Sexp.t) ->
  ('b -> Sexplib.Sexp.t) ->
  ('c -> Sexplib.Sexp.t) ->
  ('d -> Sexplib.Sexp.t) ->
  ('e -> Sexplib.Sexp.t) -> ('f -> Sexplib.Sexp.t) -> unit
val register7 :
  ('a -> 'b -> 'c -> 'd -> 'e -> 'f -> 'g -> exn) ->
  string ->
  ('a -> Sexplib.Sexp.t) ->
  ('b -> Sexplib.Sexp.t) ->
  ('c -> Sexplib.Sexp.t) ->
  ('d -> Sexplib.Sexp.t) ->
  ('e -> Sexplib.Sexp.t) ->
  ('f -> Sexplib.Sexp.t) -> ('g -> Sexplib.Sexp.t) -> unit
val register8 :
  ('a -> 'b -> 'c -> 'd -> 'e -> 'f -> 'g -> 'h -> exn) ->
  string ->
  ('a -> Sexplib.Sexp.t) ->
  ('b -> Sexplib.Sexp.t) ->
  ('c -> Sexplib.Sexp.t) ->
  ('d -> Sexplib.Sexp.t) ->
  ('e -> Sexplib.Sexp.t) ->
  ('f -> Sexplib.Sexp.t) ->
  ('g -> Sexplib.Sexp.t) -> ('h -> Sexplib.Sexp.t) -> unit
val register9 :
  ('a -> 'b -> 'c -> 'd -> 'e -> 'f -> 'g -> 'h -> 'i -> exn) ->
  string ->
  ('a -> Sexplib.Sexp.t) ->
  ('b -> Sexplib.Sexp.t) ->
  ('c -> Sexplib.Sexp.t) ->
  ('d -> Sexplib.Sexp.t) ->
  ('e -> Sexplib.Sexp.t) ->
  ('f -> Sexplib.Sexp.t) ->
  ('g -> Sexplib.Sexp.t) ->
  ('h -> Sexplib.Sexp.t) -> ('i -> Sexplib.Sexp.t) -> unit
val register10 :
  ('a -> 'b -> 'c -> 'd -> 'e -> 'f -> 'g -> 'h -> 'i -> 'j -> exn) ->
  string ->
  ('a -> Sexplib.Sexp.t) ->
  ('b -> Sexplib.Sexp.t) ->
  ('c -> Sexplib.Sexp.t) ->
  ('d -> Sexplib.Sexp.t) ->
  ('e -> Sexplib.Sexp.t) ->
  ('f -> Sexplib.Sexp.t) ->
  ('g -> Sexplib.Sexp.t) ->
  ('h -> Sexplib.Sexp.t) ->
  ("DEBUG:rule", [(("register", 370), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -331), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -330), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -329), 0), 100000000, 0, -328), 0), 100000000, 0, -327), 0, (("src/exn_magic.mli", 2, 67, 67), ("src/exn_magic.mli", 3, 104, 157), 0), [(("deprecated", (("src/exn_magic.mli", 3, 104, 107), ("src/exn_magic.mli", 3, 104, 117), 0)), ([([(Tag1 (Tag2 ("[2016-07] use Conv.Exn_converter.add", (("src/exn_magic.mli", 3, 104, 119), ("src/exn_magic.mli", 3, 104, 155), 0), 0)), (("src/exn_magic.mli", 3, 104, 118), ("src/exn_magic.mli", 3, 104, 156), 0), 0, 0)], (("src/exn_magic.mli", 3, 104, 118), ("src/exn_magic.mli", 3, 104, 156), 0))]), (("src/exn_magic.mli", 3, 104, 104), ("src/exn_magic.mli", 3, 104, 157), 0))], Tag1 ("Sexplib__Exn_magic", 0)), 0); (("register1", 371), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -323), (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -326), 0), 100000000, 0, -325), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -324), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -323), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -322), 0), 100000000, 0, -321), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -320), 0), 100000000, 0, -319), 0), 100000000, 0, -318), 0), 100000000, 0, -317), 0, (("src/exn_magic.mli", 5, 159, 159), ("src/exn_magic.mli", 6, 223, 276), 0), [(("deprecated", (("src/exn_magic.mli", 6, 223, 226), ("src/exn_magic.mli", 6, 223, 236), 0)), ([([(Tag1 (Tag2 ("[2016-07] use Conv.Exn_converter.add", (("src/exn_magic.mli", 6, 223, 238), ("src/exn_magic.mli", 6, 223, 274), 0), 0)), (("src/exn_magic.mli", 6, 223, 237), ("src/exn_magic.mli", 6, 223, 275), 0), 0, 0)], (("src/exn_magic.mli", 6, 223, 237), ("src/exn_magic.mli", 6, 223, 275), 0))]), (("src/exn_magic.mli", 6, 223, 223), ("src/exn_magic.mli", 6, 223, 276), 0))], Tag1 ("Sexplib__Exn_magic", 1)), 0); (("register2", 372), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -312), (Tag1 (0, ((("b")), 100000000, 0, -309), (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -316), 0), 100000000, 0, -315), 0), 100000000, 0, -314), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -313), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -312), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -311), 0), 100000000, 0, -310), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -309), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -308), 0), 100000000, 0, -307), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -306), 0), 100000000, 0, -305), 0), 100000000, 0, -304), 0), 100000000, 0, -303), 0), 100000000, 0, -302), 0, (("src/exn_magic.mli", 8, 278, 278), ("src/exn_magic.mli", 9, 366, 419), 0), [(("deprecated", (("src/exn_magic.mli", 9, 366, 369), ("src/exn_magic.mli", 9, 366, 379), 0)), ([([(Tag1 (Tag2 ("[2016-07] use Conv.Exn_converter.add", (("src/exn_magic.mli", 9, 366, 381), ("src/exn_magic.mli", 9, 366, 417), 0), 0)), (("src/exn_magic.mli", 9, 366, 380), ("src/exn_magic.mli", 9, 366, 418), 0), 0, 0)], (("src/exn_magic.mli", 9, 366, 380), ("src/exn_magic.mli", 9, 366, 418), 0))]), (("src/exn_magic.mli", 9, 366, 366), ("src/exn_magic.mli", 9, 366, 419), 0))], Tag1 ("Sexplib__Exn_magic", 2)), 0); (("register3", 373), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -296), (Tag1 (0, ((("b")), 100000000, 0, -293), (Tag1 (0, ((("c")), 100000000, 0, -290), (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -301), 0), 100000000, 0, -300), 0), 100000000, 0, -299), 0), 100000000, 0, -298), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -297), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -296), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -295), 0), 100000000, 0, -294), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -293), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -292), 0), 100000000, 0, -291), (Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -290), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -289), 0), 100000000, 0, -288), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -287), 0), 100000000, 0, -286), 0), 100000000, 0, -285), 0), 100000000, 0, -284), 0), 100000000, 0, -283), 0), 100000000, 0, -282), 0, (("src/exn_magic.mli", 11, 421, 421), ("src/exn_magic.mli", 18, 546, 599), 0), [(("deprecated", (("src/exn_magic.mli", 18, 546, 549), ("src/exn_magic.mli", 18, 546, 559), 0)), ([([(Tag1 (Tag2 ("[2016-07] use Conv.Exn_converter.add", (("src/exn_magic.mli", 18, 546, 561), ("src/exn_magic.mli", 18, 546, 597), 0), 0)), (("src/exn_magic.mli", 18, 546, 560), ("src/exn_magic.mli", 18, 546, 598), 0), 0, 0)], (("src/exn_magic.mli", 18, 546, 560), ("src/exn_magic.mli", 18, 546, 598), 0))]), (("src/exn_magic.mli", 18, 546, 546), ("src/exn_magic.mli", 18, 546, 599), 0))], Tag1 ("Sexplib__Exn_magic", 3)), 0); (("register4", 374), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -275), (Tag1 (0, ((("b")), 100000000, 0, -272), (Tag1 (0, ((("c")), 100000000, 0, -269), (Tag1 (0, ((("d")), 100000000, 0, -266), (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -281), 0), 100000000, 0, -280), 0), 100000000, 0, -279), 0), 100000000, 0, -278), 0), 100000000, 0, -277), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -276), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -275), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -274), 0), 100000000, 0, -273), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -272), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -271), 0), 100000000, 0, -270), (Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -269), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -268), 0), 100000000, 0, -267), (Tag1 (0, (Tag1 (0, ((("d")), 100000000, 0, -266), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -265), 0), 100000000, 0, -264), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -263), 0), 100000000, 0, -262), 0), 100000000, 0, -261), 0), 100000000, 0, -260), 0), 100000000, 0, -259), 0), 100000000, 0, -258), 0), 100000000, 0, -257), 0, (("src/exn_magic.mli", 20, 601, 601), ("src/exn_magic.mli", 28, 752, 805), 0), [(("deprecated", (("src/exn_magic.mli", 28, 752, 755), ("src/exn_magic.mli", 28, 752, 765), 0)), ([([(Tag1 (Tag2 ("[2016-07] use Conv.Exn_converter.add", (("src/exn_magic.mli", 28, 752, 767), ("src/exn_magic.mli", 28, 752, 803), 0), 0)), (("src/exn_magic.mli", 28, 752, 766), ("src/exn_magic.mli", 28, 752, 804), 0), 0, 0)], (("src/exn_magic.mli", 28, 752, 766), ("src/exn_magic.mli", 28, 752, 804), 0))]), (("src/exn_magic.mli", 28, 752, 752), ("src/exn_magic.mli", 28, 752, 805), 0))], Tag1 ("Sexplib__Exn_magic", 4)), 0); (("register5", 375), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -249), (Tag1 (0, ((("b")), 100000000, 0, -246), (Tag1 (0, ((("c")), 100000000, 0, -243), (Tag1 (0, ((("d")), 100000000, 0, -240), (Tag1 (0, ((("e")), 100000000, 0, -237), (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -256), 0), 100000000, 0, -255), 0), 100000000, 0, -254), 0), 100000000, 0, -253), 0), 100000000, 0, -252), 0), 100000000, 0, -251), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -250), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -249), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -248), 0), 100000000, 0, -247), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -246), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -245), 0), 100000000, 0, -244), (Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -243), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -242), 0), 100000000, 0, -241), (Tag1 (0, (Tag1 (0, ((("d")), 100000000, 0, -240), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -239), 0), 100000000, 0, -238), (Tag1 (0, (Tag1 (0, ((("e")), 100000000, 0, -237), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -236), 0), 100000000, 0, -235), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -234), 0), 100000000, 0, -233), 0), 100000000, 0, -232), 0), 100000000, 0, -231), 0), 100000000, 0, -230), 0), 100000000, 0, -229), 0), 100000000, 0, -228), 0), 100000000, 0, -227), 0, (("src/exn_magic.mli", 30, 807, 807), ("src/exn_magic.mli", 39, 984, 1037), 0), [(("deprecated", (("src/exn_magic.mli", 39, 984, 987), ("src/exn_magic.mli", 39, 984, 997), 0)), ([([(Tag1 (Tag2 ("[2016-07] use Conv.Exn_converter.add", (("src/exn_magic.mli", 39, 984, 999), ("src/exn_magic.mli", 39, 984, 1035), 0), 0)), (("src/exn_magic.mli", 39, 984, 998), ("src/exn_magic.mli", 39, 984, 1036), 0), 0, 0)], (("src/exn_magic.mli", 39, 984, 998), ("src/exn_magic.mli", 39, 984, 1036), 0))]), (("src/exn_magic.mli", 39, 984, 984), ("src/exn_magic.mli", 39, 984, 1037), 0))], Tag1 ("Sexplib__Exn_magic", 5)), 0); (("register6", 376), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -218), (Tag1 (0, ((("b")), 100000000, 0, -215), (Tag1 (0, ((("c")), 100000000, 0, -212), (Tag1 (0, ((("d")), 100000000, 0, -209), (Tag1 (0, ((("e")), 100000000, 0, -206), (Tag1 (0, ((("f")), 100000000, 0, -203), (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -226), 0), 100000000, 0, -225), 0), 100000000, 0, -224), 0), 100000000, 0, -223), 0), 100000000, 0, -222), 0), 100000000, 0, -221), 0), 100000000, 0, -220), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -219), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -218), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -217), 0), 100000000, 0, -216), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -215), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -214), 0), 100000000, 0, -213), (Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -212), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -211), 0), 100000000, 0, -210), (Tag1 (0, (Tag1 (0, ((("d")), 100000000, 0, -209), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -208), 0), 100000000, 0, -207), (Tag1 (0, (Tag1 (0, ((("e")), 100000000, 0, -206), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -205), 0), 100000000, 0, -204), (Tag1 (0, (Tag1 (0, ((("f")), 100000000, 0, -203), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -202), 0), 100000000, 0, -201), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -200), 0), 100000000, 0, -199), 0), 100000000, 0, -198), 0), 100000000, 0, -197), 0), 100000000, 0, -196), 0), 100000000, 0, -195), 0), 100000000, 0, -194), 0), 100000000, 0, -193), 0), 100000000, 0, -192), 0, (("src/exn_magic.mli", 41, 1039, 1039), ("src/exn_magic.mli", 51, 1242, 1295), 0), [(("deprecated", (("src/exn_magic.mli", 51, 1242, 1245), ("src/exn_magic.mli", 51, 1242, 1255), 0)), ([([(Tag1 (Tag2 ("[2016-07] use Conv.Exn_converter.add", (("src/exn_magic.mli", 51, 1242, 1257), ("src/exn_magic.mli", 51, 1242, 1293), 0), 0)), (("src/exn_magic.mli", 51, 1242, 1256), ("src/exn_magic.mli", 51, 1242, 1294), 0), 0, 0)], (("src/exn_magic.mli", 51, 1242, 1256), ("src/exn_magic.mli", 51, 1242, 1294), 0))]), (("src/exn_magic.mli", 51, 1242, 1242), ("src/exn_magic.mli", 51, 1242, 1295), 0))], Tag1 ("Sexplib__Exn_magic", 6)), 0); (("register7", 377), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -182), (Tag1 (0, ((("b")), 100000000, 0, -179), (Tag1 (0, ((("c")), 100000000, 0, -176), (Tag1 (0, ((("d")), 100000000, 0, -173), (Tag1 (0, ((("e")), 100000000, 0, -170), (Tag1 (0, ((("f")), 100000000, 0, -167), (Tag1 (0, ((("g")), 100000000, 0, -164), (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -191), 0), 100000000, 0, -190), 0), 100000000, 0, -189), 0), 100000000, 0, -188), 0), 100000000, 0, -187), 0), 100000000, 0, -186), 0), 100000000, 0, -185), 0), 100000000, 0, -184), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -183), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -182), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -181), 0), 100000000, 0, -180), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -179), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -178), 0), 100000000, 0, -177), (Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -176), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -175), 0), 100000000, 0, -174), (Tag1 (0, (Tag1 (0, ((("d")), 100000000, 0, -173), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -172), 0), 100000000, 0, -171), (Tag1 (0, (Tag1 (0, ((("e")), 100000000, 0, -170), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -169), 0), 100000000, 0, -168), (Tag1 (0, (Tag1 (0, ((("f")), 100000000, 0, -167), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -166), 0), 100000000, 0, -165), (Tag1 (0, (Tag1 (0, ((("g")), 100000000, 0, -164), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -163), 0), 100000000, 0, -162), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -161), 0), 100000000, 0, -160), 0), 100000000, 0, -159), 0), 100000000, 0, -158), 0), 100000000, 0, -157), 0), 100000000, 0, -156), 0), 100000000, 0, -155), 0), 100000000, 0, -154), 0), 100000000, 0, -153), 0), 100000000, 0, -152), 0, (("src/exn_magic.mli", 53, 1297, 1297), ("src/exn_magic.mli", 64, 1526, 1579), 0), [(("deprecated", (("src/exn_magic.mli", 64, 1526, 1529), ("src/exn_magic.mli", 64, 1526, 1539), 0)), ([([(Tag1 (Tag2 ("[2016-07] use Conv.Exn_converter.add", (("src/exn_magic.mli", 64, 1526, 1541), ("src/exn_magic.mli", 64, 1526, 1577), 0), 0)), (("src/exn_magic.mli", 64, 1526, 1540), ("src/exn_magic.mli", 64, 1526, 1578), 0), 0, 0)], (("src/exn_magic.mli", 64, 1526, 1540), ("src/exn_magic.mli", 64, 1526, 1578), 0))]), (("src/exn_magic.mli", 64, 1526, 1526), ("src/exn_magic.mli", 64, 1526, 1579), 0))], Tag1 ("Sexplib__Exn_magic", 7)), 0); (("register8", 378), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -141), (Tag1 (0, ((("b")), 100000000, 0, -138), (Tag1 (0, ((("c")), 100000000, 0, -135), (Tag1 (0, ((("d")), 100000000, 0, -132), (Tag1 (0, ((("e")), 100000000, 0, -129), (Tag1 (0, ((("f")), 100000000, 0, -126), (Tag1 (0, ((("g")), 100000000, 0, -123), (Tag1 (0, ((("h")), 100000000, 0, -120), (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -151), 0), 100000000, 0, -150), 0), 100000000, 0, -149), 0), 100000000, 0, -148), 0), 100000000, 0, -147), 0), 100000000, 0, -146), 0), 100000000, 0, -145), 0), 100000000, 0, -144), 0), 100000000, 0, -143), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -142), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -141), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -140), 0), 100000000, 0, -139), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -138), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -137), 0), 100000000, 0, -136), (Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -135), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -134), 0), 100000000, 0, -133), (Tag1 (0, (Tag1 (0, ((("d")), 100000000, 0, -132), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -131), 0), 100000000, 0, -130), (Tag1 (0, (Tag1 (0, ((("e")), 100000000, 0, -129), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -128), 0), 100000000, 0, -127), (Tag1 (0, (Tag1 (0, ((("f")), 100000000, 0, -126), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -125), 0), 100000000, 0, -124), (Tag1 (0, (Tag1 (0, ((("g")), 100000000, 0, -123), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -122), 0), 100000000, 0, -121), (Tag1 (0, (Tag1 (0, ((("h")), 100000000, 0, -120), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -119), 0), 100000000, 0, -118), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -117), 0), 100000000, 0, -116), 0), 100000000, 0, -115), 0), 100000000, 0, -114), 0), 100000000, 0, -113), 0), 100000000, 0, -112), 0), 100000000, 0, -111), 0), 100000000, 0, -110), 0), 100000000, 0, -109), 0), 100000000, 0, -108), 0), 100000000, 0, -107), 0, (("src/exn_magic.mli", 66, 1581, 1581), ("src/exn_magic.mli", 78, 1836, 1889), 0), [(("deprecated", (("src/exn_magic.mli", 78, 1836, 1839), ("src/exn_magic.mli", 78, 1836, 1849), 0)), ([([(Tag1 (Tag2 ("[2016-07] use Conv.Exn_converter.add", (("src/exn_magic.mli", 78, 1836, 1851), ("src/exn_magic.mli", 78, 1836, 1887), 0), 0)), (("src/exn_magic.mli", 78, 1836, 1850), ("src/exn_magic.mli", 78, 1836, 1888), 0), 0, 0)], (("src/exn_magic.mli", 78, 1836, 1850), ("src/exn_magic.mli", 78, 1836, 1888), 0))]), (("src/exn_magic.mli", 78, 1836, 1836), ("src/exn_magic.mli", 78, 1836, 1889), 0))], Tag1 ("Sexplib__Exn_magic", 8)), 0); (("register9", 379), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -95), (Tag1 (0, ((("b")), 100000000, 0, -92), (Tag1 (0, ((("c")), 100000000, 0, -89), (Tag1 (0, ((("d")), 100000000, 0, -86), (Tag1 (0, ((("e")), 100000000, 0, -83), (Tag1 (0, ((("f")), 100000000, 0, -80), (Tag1 (0, ((("g")), 100000000, 0, -77), (Tag1 (0, ((("h")), 100000000, 0, -74), (Tag1 (0, ((("i")), 100000000, 0, -71), (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -106), 0), 100000000, 0, -105), 0), 100000000, 0, -104), 0), 100000000, 0, -103), 0), 100000000, 0, -102), 0), 100000000, 0, -101), 0), 100000000, 0, -100), 0), 100000000, 0, -99), 0), 100000000, 0, -98), 0), 100000000, 0, -97), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -96), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -95), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -94), 0), 100000000, 0, -93), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -92), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -91), 0), 100000000, 0, -90), (Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -89), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -88), 0), 100000000, 0, -87), (Tag1 (0, (Tag1 (0, ((("d")), 100000000, 0, -86), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -85), 0), 100000000, 0, -84), (Tag1 (0, (Tag1 (0, ((("e")), 100000000, 0, -83), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -82), 0), 100000000, 0, -81), (Tag1 (0, (Tag1 (0, ((("f")), 100000000, 0, -80), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -79), 0), 100000000, 0, -78), (Tag1 (0, (Tag1 (0, ((("g")), 100000000, 0, -77), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -76), 0), 100000000, 0, -75), (Tag1 (0, (Tag1 (0, ((("h")), 100000000, 0, -74), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -73), 0), 100000000, 0, -72), (Tag1 (0, (Tag1 (0, ((("i")), 100000000, 0, -71), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -70), 0), 100000000, 0, -69), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -68), 0), 100000000, 0, -67), 0), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0), 100000000, 0, -63), 0), 100000000, 0, -62), 0), 100000000, 0, -61), 0), 100000000, 0, -60), 0), 100000000, 0, -59), 0), 100000000, 0, -58), 0), 100000000, 0, -57), 0, (("src/exn_magic.mli", 80, 1891, 1891), ("src/exn_magic.mli", 93, 2172, 2225), 0), [(("deprecated", (("src/exn_magic.mli", 93, 2172, 2175), ("src/exn_magic.mli", 93, 2172, 2185), 0)), ([([(Tag1 (Tag2 ("[2016-07] use Conv.Exn_converter.add", (("src/exn_magic.mli", 93, 2172, 2187), ("src/exn_magic.mli", 93, 2172, 2223), 0), 0)), (("src/exn_magic.mli", 93, 2172, 2186), ("src/exn_magic.mli", 93, 2172, 2224), 0), 0, 0)], (("src/exn_magic.mli", 93, 2172, 2186), ("src/exn_magic.mli", 93, 2172, 2224), 0))]), (("src/exn_magic.mli", 93, 2172, 2172), ("src/exn_magic.mli", 93, 2172, 2225), 0))], Tag1 ("Sexplib__Exn_magic", 9)), 0); (("register10", 380), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -44), (Tag1 (0, ((("b")), 100000000, 0, -41), (Tag1 (0, ((("c")), 100000000, 0, -38), (Tag1 (0, ((("d")), 100000000, 0, -35), (Tag1 (0, ((("e")), 100000000, 0, -32), (Tag1 (0, ((("f")), 100000000, 0, -29), (Tag1 (0, ((("g")), 100000000, 0, -26), (Tag1 (0, ((("h")), 100000000, 0, -23), (Tag1 (0, ((("i")), 100000000, 0, -20), (Tag1 (0, ((("j")), 100000000, 0, -17), (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -56), 0), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0), 100000000, 0, -50), 0), 100000000, 0, -49), 0), 100000000, 0, -48), 0), 100000000, 0, -47), 0), 100000000, 0, -46), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -45), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -44), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -43), 0), 100000000, 0, -42), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -41), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), (Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -38), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -37), 0), 100000000, 0, -36), (Tag1 (0, (Tag1 (0, ((("d")), 100000000, 0, -35), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -34), 0), 100000000, 0, -33), (Tag1 (0, (Tag1 (0, ((("e")), 100000000, 0, -32), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), (Tag1 (0, (Tag1 (0, ((("f")), 100000000, 0, -29), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), (Tag1 (0, (Tag1 (0, ((("g")), 100000000, 0, -26), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), (Tag1 (0, (Tag1 (0, ((("h")), 100000000, 0, -23), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), (Tag1 (0, (Tag1 (0, ((("i")), 100000000, 0, -20), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), (Tag1 (0, (Tag1 (0, ((("j")), 100000000, 0, -17), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/exn_magic.mli", 95, 2227, 2227), ("src/exn_magic.mli", 109, 2535, 2588), 0), [(("deprecated", (("src/exn_magic.mli", 109, 2535, 2538), ("src/exn_magic.mli", 109, 2535, 2548), 0)), ([([(Tag1 (Tag2 ("[2016-07] use Conv.Exn_converter.add", (("src/exn_magic.mli", 109, 2535, 2550), ("src/exn_magic.mli", 109, 2535, 2586), 0), 0)), (("src/exn_magic.mli", 109, 2535, 2549), ("src/exn_magic.mli", 109, 2535, 2587), 0), 0, 0)], (("src/exn_magic.mli", 109, 2535, 2549), ("src/exn_magic.mli", 109, 2535, 2587), 0))]), (("src/exn_magic.mli", 109, 2535, 2535), ("src/exn_magic.mli", 109, 2535, 2588), 0))], Tag1 ("Sexplib__Exn_magic", 10)), 0)], "Sexplib__Exn_magic", [("Sexplib__Exn_magic", ("h\031\203\152AI\184\178\211\017A\028\161\191\190\223")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Random", ("\020\005Xq\171\026\218\152X\135\254\023\133zK\200")); ("Stdlib__Printf", ("\215<\139]\021\142\224E\245m\198qc(W\229")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Bytes", ("C\134\194)\175\222\137p\205\246\244\r\241\164P\209")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sexplib__Type_with_layout", ("Q\170\019\238\156\246\192\156\b`\250o[6g\024")); ("Sexplib__Type", ("\147\252\252\167_\149\137\235\001d\241\255`\173Cs")); ("Sexplib__Src_pos", ("\157\022\246\144K\127\174bk\214\128&E\nh\213")); ("Sexplib__Sexp_intf", ("\\\031Fc\157\000\226\253\208\151\241\218a\195\187w")); ("Sexplib__Sexp", ("b\191\237;\251D\001\027M=x\201\143\185:d")); ("Sexplib__Pre_sexp", ("))\b\146\225\144^\227\218\181;f\220\tA\006")); ("Sexplib__Parser_with_layout", ("W\155\134\171aBJ\251|G6\192'S\210<")); ("Sexplib__Parser", ("\203&3\188\178\148:\254\176\140\127\227\029jQL")); ("Sexplib__Lexer", ("M\181eW\204\2193X\225\170yM\228!\146s")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("Sexplib", ("\249\031\145\178\014\020\n\209\129\143\012\015<K\177\189")); ("Parsexp__Positions", ("BE\135\222xW\224\233\184\004o\169\248\bH\230")); ("Parsexp__Parsexp_intf", ("\006\239e\204\167\243e2&\192H\160\029XNm")); ("Parsexp__Parser_intf", ("\154\197J\002\004\252i\162\190\241\151\210\157\024\167e")); ("Parsexp__Parser", ("n\164F;=\199\178\019\150]\2502\176\014a\165")); ("Parsexp__Parse_error_intf", ("\011\229\182\179W\161\176\160P\249\165\214ef\011\229")); ("Parsexp__Parse_error", ("*\031\166\142M\171\026\030\\K7\157Y\232\208\234")); ("Parsexp__Old_parser_cont_state", ("\2535&90\136_\154\027}Oc0\138%X")); ("Parsexp__Of_sexp_error", ("\253\171Y\150\210\218\191\255\160\211\134d/l\132\228")); ("Parsexp__Import", ("\017\029\157\225\239\135p*0\207\146\197\020\128\195!")); ("Parsexp__Cst", (")\228;6o~\227\000pRf\153\216\244sD")); ("Parsexp__Conv_intf", ("\004r\193,k\2254\168\149\229+hmw\134\228")); ("Parsexp__Conv_error", ("\195Bo\140A|\220\136\210\137\165&!\164\134\021")); ("Parsexp__Conv", ("\238|^\141\226\177\185\022$*\023\188\020\002P\229")); ("Parsexp__Automaton_state_intf", ("\196\146]2\143u|+%\027\185v2\225\r\229")); ("Parsexp__Automaton_state", ("L#\030=\218R\022 \228<\188-\r\211\157_")); ("Parsexp__Automaton_stack_intf", ("\235\204\0296]\2449F\029\b:\006\217\162f\024")); ("Parsexp__Automaton_stack", ("\246/\135\251\031)\015r\003\237\254S$\181\243\201")); ("Parsexp__", ("\182\180\203\030\218\020\246\196\221\171_\030GE\171\192")); ("Parsexp", ("\023d\176\173 \b\181o\028\163R\205\005\226BE")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
('i -> Sexplib.Sexp.t) -> ('j -> Sexplib.Sexp.t) -> unit
