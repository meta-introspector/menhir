module Filename = Filename
module Parsing = Parsing
module Type :
  sig
    type t =
        Var of Base.string
      | Bool
      | Int
      | Char
      | String
      | Tuple of t Base.list
    val to_string : t -> Base.String.t
  end
module Value :
  sig
    type t =
        Bool of Base.bool
      | Int of Base.int
      | Char of Base.char
      | String of Base.string
      | Tuple of t Base.list
    val ocaml_version : t
    val os_type : t
    val config_bool : string -> t
    val flambda_backend : t
    val flambda2 : t
    val host_is_i386 : t
    val to_expression :
      Ppxlib__.Location.t -> t -> Ppxlib__.Import.expression
    val to_pattern : Ppxlib__.Location.t -> t -> Ppxlib__.Import.pattern
    val to_string_pretty : t -> string
    val to_string : t -> string
    val type_ : t -> Type.t
  end
module Env :
  sig
    type t
    val init : t
    val empty : t
    val add : t -> var:Base.string Ppxlib.Location.loc -> value:Value.t -> t
    val undefine : t -> Base.string Ppxlib.Location.loc -> t
    val of_list : (Base.string Ppxlib.Location.loc * Value.t) Base.list -> t
    val eval : t -> Base.string Ppxlib.Location.loc -> Value.t
    val is_defined :
      ?permissive:Base.bool ->
      t -> Base.string Ppxlib.Location.loc -> Base.bool
    val seen : t -> Base.string Ppxlib.Location.loc -> Base.bool
    val to_expression : t -> Ppxlib.expression
  end
val invalid_type : Ppxlib.Location.t -> Type.t -> Type.t -> 'a
val var_of_lid :
  Ppxlib.Longident.t Ppxlib.Ast_builder.Default.Located.t ->
  Base.String.t Ppxlib__.Loc.t
val cannot_convert : Ppxlib.Location.t -> string -> Value.t -> 'a
val convert_from_string :
  Ppxlib.Location.t -> string -> (string -> 'a) -> string -> 'a
exception Pattern_match_failure of Ppxlib.pattern * Value.t
val lid_of_expr : Ppxlib.expression -> Ppxlib.longident_loc
val var_of_expr : Ppxlib.expression -> Base.String.t Ppxlib__.Loc.t
val not_supported : Ppxlib.expression -> 'a
val parse_int : Ppxlib.Location.t -> string -> Base.Int.t
val eval : Env.t -> Ppxlib.expression -> Value.t
val bind : Env.t -> Ppxlib.pattern -> Value.t -> Env.t
val do_bind : Env.t -> Ppxlib.pattern -> Value.t -> Env.t
val eval_same :
  Env.t -> Ppxlib.expression -> Ppxlib.expression -> Value.t * Value.t
val eval_int : Env.t -> Ppxlib.expression -> Base.int
val eval_bool : Env.t -> Ppxlib.expression -> Base.bool
val eval_string : Env.t -> Ppxlib.expression -> Base.string
val eval_pair : Env.t -> Ppxlib.expression -> Value.t * Value.t
val eval_int2 :
  Env.t ->
  (Base__Int.t -> Base__Int.t -> Base__Int.t) ->
  Ppxlib.expression -> Ppxlib.expression -> Value.t
val eval_bool2 :
  Env.t ->
  (Base.bool -> Base.bool -> Base.bool) ->
  Ppxlib.expression -> Ppxlib.expression -> Value.t
val eval_string2 :
  Env.t ->
  (Base.String.t -> Base.String.t -> Base.String.t) ->
  Ppxlib.expression -> Ppxlib.expression -> Value.t
val eval_cmp :
  Env.t ->
  (Value.t -> Value.t -> Base.bool) ->
  Ppxlib.expression -> Ppxlib.expression -> Value.t
val eval_poly2 :
  Env.t ->
  (Value.t -> Value.t -> Value.t) ->
  Ppxlib.expression -> Ppxlib.expression -> Value.t
module EnvIO :
  sig
    val to_expression : Env.t -> Ppxlib.expression
    val of_expression : Ppxlib.expression -> Env.t("DEBUG:rule", [Tag3 (("Filename", 6789), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Filename")), 0, (("src/interpreter.ml", 5, 48, 48), ("src/interpreter.ml", 5, 48, 81), 0), Tag1 ("Ppx_optcomp__Interpreter", 0)), 0, 0); Tag3 (("Parsing", 6790), 1, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "Parsing")), 0, (("src/interpreter.ml", 6, 82, 82), ("src/interpreter.ml", 6, 82, 114), 0), Tag1 ("Ppx_optcomp__Interpreter", 1)), 0, 0); Tag3 (("Type", 6791), 0, (Tag1 ([Tag1 (("t", 6817), (0, 0, Tag1 ([(("Var", 1404), ([(Tag3 (Tag1 ((Tag2 ("Base")), "string"), 0, (0)), 100000000, 0, -119)]), 0, (("src/interpreter.ml", 10, 148, 152), ("src/interpreter.ml", 10, 148, 167), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 3)); (("Bool", 1405), (0), 0, (("src/interpreter.ml", 11, 168, 172), ("src/interpreter.ml", 11, 168, 178), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 4)); (("Int", 1406), (0), 0, (("src/interpreter.ml", 12, 179, 183), ("src/interpreter.ml", 12, 179, 188), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 5)); (("Char", 1407), (0), 0, (("src/interpreter.ml", 13, 189, 193), ("src/interpreter.ml", 13, 189, 199), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 6)); (("String", 1408), (0), 0, (("src/interpreter.ml", 14, 200, 204), ("src/interpreter.ml", 14, 200, 212), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 7)); (("Tuple", 1409), ([(Tag3 (Tag1 ((Tag2 ("Base")), "list"), [(Tag3 ((("t", 6817)), 0, (0)), 100000000, 0, -121)], (0)), 100000000, 0, -120)]), 0, (("src/interpreter.ml", 15, 213, 217), ("src/interpreter.ml", 15, 213, 234), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 8))], 0), 1, 0, 0, 0, 0, 0, (("src/interpreter.ml", 9, 137, 139), ("src/interpreter.ml", 15, 213, 234), 0), 0, 0, 0, Tag1 ("Ppx_optcomp__Interpreter", 2)), 1, 0); (("to_string", 6818), ((Tag1 (0, (Tag3 ((("t", 6817)), 0, (0)), 100000000, 0, -118), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base")), "String"), "t"), 0, (0)), 100000000, 0, -117), 0), 100000000, 0, -116), 0, (("src/interpreter.ml", 17, 236, 246), ("src/interpreter.ml", 17, 236, 255), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 9)), 0)]), 0, (("src/interpreter.ml", 8, 116, 116), ("src/interpreter.ml", 24, 469, 472), 0), Tag1 ("Ppx_optcomp__Interpreter", 12)), 0, 0); Tag3 (("Value", 6792), 0, (Tag1 ([Tag1 (("t", 6819), (0, 0, Tag1 ([(("Bool", 1850), ([(Tag3 (Tag1 ((Tag2 ("Base")), "bool"), 0, (0)), 100000000, 0, -149)]), 0, (("src/interpreter.ml", 29, 508, 512), ("src/interpreter.ml", 29, 508, 528), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 14)); (("Int", 1851), ([(Tag3 (Tag1 ((Tag2 ("Base")), "int"), 0, (0)), 100000000, 0, -150)]), 0, (("src/interpreter.ml", 30, 529, 533), ("src/interpreter.ml", 30, 529, 548), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 15)); (("Char", 1852), ([(Tag3 (Tag1 ((Tag2 ("Base")), "char"), 0, (0)), 100000000, 0, -151)]), 0, (("src/interpreter.ml", 31, 549, 553), ("src/interpreter.ml", 31, 549, 569), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 16)); (("String", 1853), ([(Tag3 (Tag1 ((Tag2 ("Base")), "string"), 0, (0)), 100000000, 0, -152)]), 0, (("src/interpreter.ml", 32, 570, 574), ("src/interpreter.ml", 32, 570, 592), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 17)); (("Tuple", 1854), ([(Tag3 (Tag1 ((Tag2 ("Base")), "list"), [(Tag3 ((("t", 6819)), 0, (0)), 100000000, 0, -154)], (0)), 100000000, 0, -153)]), 0, (("src/interpreter.ml", 33, 593, 597), ("src/interpreter.ml", 33, 593, 615), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 18))], 0), 1, 0, 0, 0, 0, 0, (("src/interpreter.ml", 28, 497, 499), ("src/interpreter.ml", 33, 593, 615), 0), 0, 0, 0, Tag1 ("Ppx_optcomp__Interpreter", 13)), 1, 0); (("ocaml_version", 6820), ((Tag3 ((("t", 6819)), 0, (0)), 100000000, 0, -148), 0, (("src/interpreter.ml", 35, 617, 623), ("src/interpreter.ml", 35, 617, 636), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 19)), 0); (("os_type", 6821), ((Tag3 ((("t", 6819)), 0, (0)), 100000000, 0, -147), 0, (("src/interpreter.ml", 40, 788, 794), ("src/interpreter.ml", 40, 788, 801), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 23)), 0); (("config_bool", 6822), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -146), (Tag3 ((("t", 6819)), 0, (0)), 100000000, 0, -145), 0), 100000000, 0, -144), 0, (("src/interpreter.ml", 43, 836, 842), ("src/interpreter.ml", 43, 836, 853), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 24)), 0); (("flambda_backend", 6823), ((Tag3 ((("t", 6819)), 0, (0)), 100000000, 0, -143), 0, (("src/interpreter.ml", 51, 998, 1004), ("src/interpreter.ml", 51, 998, 1019), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 26)), 0); (("flambda2", 6824), ((Tag3 ((("t", 6819)), 0, (0)), 100000000, 0, -142), 0, (("src/interpreter.ml", 53, 1055, 1061), ("src/interpreter.ml", 53, 1055, 1069), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 27)), 0); (("host_is_i386", 6825), ((Tag3 ((("t", 6819)), 0, (0)), 100000000, 0, -141), 0, (("src/interpreter.ml", 55, 1098, 1104), ("src/interpreter.ml", 55, 1098, 1116), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 28)), 0); (("to_expression", 6826), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -140), (Tag1 (0, (Tag3 ((("t", 6819)), 0, (0)), 100000000, 0, -139), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "expression"), 0, (0)), 100000000, 0, -138), 0), 100000000, 0, -137), 0), 100000000, 0, -136), 0, (("src/interpreter.ml", 61, 1284, 1294), ("src/interpreter.ml", 61, 1284, 1307), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 30)), 0); (("to_pattern", 6827), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -135), (Tag1 (0, (Tag3 ((("t", 6819)), 0, (0)), 100000000, 0, -134), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Import"), "pattern"), 0, (0)), 100000000, 0, -133), 0), 100000000, 0, -132), 0), 100000000, 0, -131), 0, (("src/interpreter.ml", 72, 1624, 1634), ("src/interpreter.ml", 72, 1624, 1644), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 39)), 0); (("to_string_pretty", 6828), ((Tag1 (0, (Tag3 ((("t", 6819)), 0, (0)), 100000000, 0, -130), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -129), 0), 100000000, 0, -128), 0, (("src/interpreter.ml", 83, 1955, 1961), ("src/interpreter.ml", 83, 1955, 1977), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 48)), 0); (("to_string", 6829), ((Tag1 (0, (Tag3 ((("t", 6819)), 0, (0)), 100000000, 0, -127), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -126), 0), 100000000, 0, -125), 0, (("src/interpreter.ml", 87, 2065, 2071), ("src/interpreter.ml", 87, 2065, 2080), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 51)), 0); (("type_", 6830), ((Tag1 (0, (Tag3 ((("t", 6819)), 0, (0)), 100000000, 0, -124), (Tag3 (Tag1 ((("Type", 6791)), "t"), 0, (0)), 100000000, 0, -123), 0), 100000000, 0, -122), 0, (("src/interpreter.ml", 112, 2680, 2690), ("src/interpreter.ml", 112, 2680, 2695), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 62)), 0)]), 0, (("src/interpreter.ml", 26, 474, 474), ("src/interpreter.ml", 119, 2865, 2868), 0), Tag1 ("Ppx_optcomp__Interpreter", 64)), 0, 0); Tag3 (("Env", 6793), 0, (Tag1 ([Tag1 (("t", 6831), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/interpreter.ml", 122, 2887, 2889), ("src/interpreter.ml", 122, 2887, 2895), 0), 0, 0, 0, Tag1 ("Ppx_optcomp__Interpreter", 108)), 1, 0); (("init", 6832), ((Tag3 ((("t", 6831)), 0, (0)), 100000000, 0, -201), 0, (("src/interpreter.ml", 124, 2897, 2899), ("src/interpreter.ml", 124, 2897, 2912), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 109)), 0); (("empty", 6833), ((Tag3 ((("t", 6831)), 0, (0)), 100000000, 0, -200), 0, (("src/interpreter.ml", 125, 2913, 2915), ("src/interpreter.ml", 125, 2913, 2928), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 110)), 0); (("add", 6834), ((Tag1 (0, (Tag3 ((("t", 6831)), 0, (0)), 100000000, 0, -199), (Tag1 (("var"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Location"), "loc"), [(Tag3 (Tag1 ((Tag2 ("Base")), "string"), 0, (0)), 100000000, 0, -198)], (0)), 100000000, 0, -197), (Tag1 (("value"), (Tag3 (Tag1 ((("Value", 6792)), "t"), 0, (0)), 100000000, 0, -196), (Tag3 ((("t", 6831)), 0, (0)), 100000000, 0, -195), 0), 100000000, 0, -194), 0), 100000000, 0, -193), 0), 100000000, 0, -192), 0, (("src/interpreter.ml", 127, 2930, 2932), ("src/interpreter.ml", 127, 2930, 2992), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 111)), 0); (("undefine", 6835), ((Tag1 (0, (Tag3 ((("t", 6831)), 0, (0)), 100000000, 0, -191), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Location"), "loc"), [(Tag3 (Tag1 ((Tag2 ("Base")), "string"), 0, (0)), 100000000, 0, -190)], (0)), 100000000, 0, -189), (Tag3 ((("t", 6831)), 0, (0)), 100000000, 0, -188), 0), 100000000, 0, -187), 0), 100000000, 0, -186), 0, (("src/interpreter.ml", 128, 2993, 2995), ("src/interpreter.ml", 128, 2993, 3039), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 112)), 0); (("of_list", 6836), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base")), "list"), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Location"), "loc"), [(Tag3 (Tag1 ((Tag2 ("Base")), "string"), 0, (0)), 100000000, 0, -184)], (0)), 100000000, 0, -183); (Tag3 (Tag1 ((("Value", 6792)), "t"), 0, (0)), 100000000, 0, -185)]), 100000000, 0, -182)], (0)), 100000000, 0, -181), (Tag3 ((("t", 6831)), 0, (0)), 100000000, 0, -180), 0), 100000000, 0, -179), 0, (("src/interpreter.ml", 130, 3041, 3043), ("src/interpreter.ml", 130, 3041, 3098), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 113)), 0); (("eval", 6837), ((Tag1 (0, (Tag3 ((("t", 6831)), 0, (0)), 100000000, 0, -178), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Location"), "loc"), [(Tag3 (Tag1 ((Tag2 ("Base")), "string"), 0, (0)), 100000000, 0, -177)], (0)), 100000000, 0, -176), (Tag3 (Tag1 ((("Value", 6792)), "t"), 0, (0)), 100000000, 0, -175), 0), 100000000, 0, -174), 0), 100000000, 0, -173), 0, (("src/interpreter.ml", 132, 3100, 3102), ("src/interpreter.ml", 132, 3100, 3148), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 114)), 0); (("is_defined", 6838), ((Tag1 (Tag1 ("permissive"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Base")), "bool"), 0, (0)), 100000000, 0, -172)], (0)), 100000000, 0, -171), (Tag1 (0, (Tag3 ((("t", 6831)), 0, (0)), 100000000, 0, -170), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Location"), "loc"), [(Tag3 (Tag1 ((Tag2 ("Base")), "string"), 0, (0)), 100000000, 0, -169)], (0)), 100000000, 0, -168), (Tag3 (Tag1 ((Tag2 ("Base")), "bool"), 0, (0)), 100000000, 0, -167), 0), 100000000, 0, -166), 0), 100000000, 0, -165), 0), 100000000, 0, -164), 0, (("src/interpreter.ml", 133, 3149, 3151), ("src/interpreter.ml", 133, 3149, 3220), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 115)), 0); (("seen", 6839), ((Tag1 (0, (Tag3 ((("t", 6831)), 0, (0)), 100000000, 0, -163), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Location"), "loc"), [(Tag3 (Tag1 ((Tag2 ("Base")), "string"), 0, (0)), 100000000, 0, -162)], (0)), 100000000, 0, -161), (Tag3 (Tag1 ((Tag2 ("Base")), "bool"), 0, (0)), 100000000, 0, -160), 0), 100000000, 0, -159), 0), 100000000, 0, -158), 0, (("src/interpreter.ml", 135, 3222, 3224), ("src/interpreter.ml", 135, 3222, 3267), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 116)), 0); (("to_expression", 6840), ((Tag1 (0, (Tag3 ((("t", 6831)), 0, (0)), 100000000, 0, -157), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -156), 0), 100000000, 0, -155), 0, (("src/interpreter.ml", 137, 3269, 3271), ("src/interpreter.ml", 137, 3269, 3306), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 117)), 0)]), 0, (("src/interpreter.ml", 121, 2870, 2870), ("src/interpreter.ml", 225, 5953, 5956), 0), Tag1 ("Ppx_optcomp__Interpreter", 118)), 0, 0); (("invalid_type", 6794), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Location"), "t"), 0, (0)), 100000000, 0, -115), (Tag1 (0, (Tag3 (Tag1 ((("Type", 6791)), "t"), 0, (0)), 100000000, 0, -114), (Tag1 (0, (Tag3 (Tag1 ((("Type", 6791)), "t"), 0, (0)), 100000000, 0, -113), ((0), 100000000, 0, -112), 0), 100000000, 0, -111), 0), 100000000, 0, -110), 0), 100000000, 0, -109), 0, (("src/interpreter.ml", 231, 6175, 6179), ("src/interpreter.ml", 231, 6175, 6191), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 119)), 0); (("var_of_lid", 6795), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Ast_builder"), "Default"), "Located"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Longident"), "t"), 0, (0)), 100000000, 0, -108)], (0)), 100000000, 0, -107), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Loc"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Base")), "String"), "t"), 0, (0)), 100000000, 0, -106)], (0)), 100000000, 0, -105), 0), 100000000, 0, -104), 0, (("src/interpreter.ml", 237, 6365, 6369), ("src/interpreter.ml", 237, 6365, 6379), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 123)), 0); (("cannot_convert", 6796), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Location"), "t"), 0, (0)), 100000000, 0, -103), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -102), (Tag1 (0, (Tag3 (Tag1 ((("Value", 6792)), "t"), 0, (0)), 100000000, 0, -101), ((0), 100000000, 0, -100), 0), 100000000, 0, -99), 0), 100000000, 0, -98), 0), 100000000, 0, -97), 0, (("src/interpreter.ml", 244, 6589, 6593), ("src/interpreter.ml", 244, 6589, 6607), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 126)), 0); (("convert_from_string", 6797), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Location"), "t"), 0, (0)), 100000000, 0, -96), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -95), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -93), ((0), 100000000, 0, -92), (1)), 100000000, 0, -94), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -93), ((0), 100000000, 0, -92), 0), 100000000, 0, -91), 0), 100000000, 0, -90), 0), 100000000, 0, -89), 0), 100000000, 0, -88), 0, (("src/interpreter.ml", 248, 6710, 6714), ("src/interpreter.ml", 248, 6710, 6733), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 130)), 0); Tag2 (("Pattern_match_failure", 6798), ((Tag3 ("exn", 7)), 0, ([(Tag3 (Tag1 ((Tag2 ("Ppxlib")), "pattern"), 0, (0)), 100000000, 0, -86); (Tag3 (Tag1 ((("Value", 6792)), "t"), 0, (0)), 100000000, 0, -87)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ppx_optcomp__Interpreter", 135)), 2, 0); (("lid_of_expr", 6799), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -85), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "longident_loc"), 0, (0)), 100000000, 0, -84), 0), 100000000, 0, -83), 0, (("src/interpreter.ml", 257, 6904, 6908), ("src/interpreter.ml", 257, 6904, 6919), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 136)), 0); (("var_of_expr", 6800), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -82), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib__")), "Loc"), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Base")), "String"), "t"), 0, (0)), 100000000, 0, -81)], (0)), 100000000, 0, -80), 0), 100000000, 0, -79), 0, (("src/interpreter.ml", 263, 7083, 7087), ("src/interpreter.ml", 263, 7083, 7098), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 139)), 0); (("not_supported", 6801), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -78), ((0), 100000000, 0, -77), 0), 100000000, 0, -76), 0, (("src/interpreter.ml", 265, 7131, 7135), ("src/interpreter.ml", 265, 7131, 7148), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 141)), 0); (("parse_int", 6802), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ppxlib")), "Location"), "t"), 0, (0)), 100000000, 0, -75), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -74), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base")), "Int"), "t"), 0, (0)), 100000000, 0, -73), 0), 100000000, 0, -72), 0), 100000000, 0, -71), 0, (("src/interpreter.ml", 269, 7233, 7237), ("src/interpreter.ml", 269, 7233, 7246), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 143)), 0); (("eval", 6803), ((Tag1 (0, (Tag3 (Tag1 ((("Env", 6793)), "t"), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -7), (Tag3 (Tag1 ((("Value", 6792)), "t"), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -70), 0), 100000000, 0, -69), 0, (("src/interpreter.ml", 276, 7376, 7384), ("src/interpreter.ml", 276, 7376, 7388), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 147)), 0); (("bind", 6804), ((Tag1 (0, (Tag3 (Tag1 ((("Env", 6793)), "t"), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "pattern"), 0, (0)), 100000000, 0, -65), (Tag1 (0, (Tag3 (Tag1 ((("Value", 6792)), "t"), 0, (0)), 100000000, 0, -6), (Tag3 (Tag1 ((("Env", 6793)), "t"), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -68), 0), 100000000, 0, -67), 0), 100000000, 0, -66), 0, (("src/interpreter.ml", 394, 11857, 11861), ("src/interpreter.ml", 394, 11857, 11865), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 148)), 0); (("do_bind", 6805), ((Tag1 (0, (Tag3 (Tag1 ((("Env", 6793)), "t"), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "pattern"), 0, (0)), 100000000, 0, -65), (Tag1 (0, (Tag3 (Tag1 ((("Value", 6792)), "t"), 0, (0)), 100000000, 0, -6), (Tag3 (Tag1 ((("Env", 6793)), "t"), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -64), 0), 100000000, 0, -63), 0), 100000000, 0, -62), 0, (("src/interpreter.ml", 419, 12846, 12850), ("src/interpreter.ml", 419, 12846, 12857), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 149)), 0); (("eval_same", 6806), ((Tag1 (0, (Tag3 (Tag1 ((("Env", 6793)), "t"), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -7), (Tag2 ([(Tag3 (Tag1 ((("Value", 6792)), "t"), 0, (0)), 100000000, 0, -6); (Tag3 (Tag1 ((("Value", 6792)), "t"), 0, (0)), 100000000, 0, -6)]), 100000000, 0, -61), 0), 100000000, 0, -60), 0), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("src/interpreter.ml", 426, 13060, 13064), ("src/interpreter.ml", 426, 13060, 13073), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 150)), 0); (("eval_int", 6807), ((Tag1 (0, (Tag3 (Tag1 ((("Env", 6793)), "t"), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -7), (Tag3 (Tag1 ((Tag2 ("Base")), "int"), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0), 100000000, 0, -55), 0, (("src/interpreter.ml", 434, 13269, 13273), ("src/interpreter.ml", 434, 13269, 13281), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 151)), 0); (("eval_bool", 6808), ((Tag1 (0, (Tag3 (Tag1 ((("Env", 6793)), "t"), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -7), (Tag3 (Tag1 ((Tag2 ("Base")), "bool"), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("src/interpreter.ml", 439, 13383, 13387), ("src/interpreter.ml", 439, 13383, 13396), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 152)), 0); (("eval_string", 6809), ((Tag1 (0, (Tag3 (Tag1 ((("Env", 6793)), "t"), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -7), (Tag3 (Tag1 ((Tag2 ("Base")), "string"), 0, (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0), 100000000, 0, -50), 0, (("src/interpreter.ml", 444, 13500, 13504), ("src/interpreter.ml", 444, 13500, 13515), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 153)), 0); (("eval_pair", 6810), ((Tag1 (0, (Tag3 (Tag1 ((("Env", 6793)), "t"), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -7), (Tag2 ([(Tag3 (Tag1 ((("Value", 6792)), "t"), 0, (0)), 100000000, 0, -48); (Tag3 (Tag1 ((("Value", 6792)), "t"), 0, (0)), 100000000, 0, -49)]), 100000000, 0, -47), 0), 100000000, 0, -46), 0), 100000000, 0, -45), 0, (("src/interpreter.ml", 449, 13623, 13627), ("src/interpreter.ml", 449, 13623, 13636), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 154)), 0); (("eval_int2", 6811), ((Tag1 (0, (Tag3 (Tag1 ((("Env", 6793)), "t"), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Int")), "t"), 0, (0)), 100000000, 0, -44), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Int")), "t"), 0, (0)), 100000000, 0, -44), (Tag3 (Tag1 ((Tag2 ("Base__Int")), "t"), 0, (0)), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -7), (Tag3 (Tag1 ((("Value", 6792)), "t"), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0), 100000000, 0, -37), 0, (("src/interpreter.ml", 454, 13773, 13777), ("src/interpreter.ml", 454, 13773, 13786), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 155)), 0); (("eval_bool2", 6812), ((Tag1 (0, (Tag3 (Tag1 ((("Env", 6793)), "t"), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base")), "bool"), 0, (0)), 100000000, 0, -36), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base")), "bool"), 0, (0)), 100000000, 0, -36), (Tag3 (Tag1 ((Tag2 ("Base")), "bool"), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -7), (Tag3 (Tag1 ((("Value", 6792)), "t"), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("src/interpreter.ml", 459, 13870, 13874), ("src/interpreter.ml", 459, 13870, 13884), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 156)), 0); (("eval_string2", 6813), ((Tag1 (0, (Tag3 (Tag1 ((("Env", 6793)), "t"), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base")), "String"), "t"), 0, (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Base")), "String"), "t"), 0, (0)), 100000000, 0, -27), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base")), "String"), "t"), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -7), (Tag3 (Tag1 ((("Value", 6792)), "t"), 0, (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("src/interpreter.ml", 464, 13971, 13975), ("src/interpreter.ml", 464, 13971, 13987), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 157)), 0); (("eval_cmp", 6814), ((Tag1 (0, (Tag3 (Tag1 ((("Env", 6793)), "t"), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((("Value", 6792)), "t"), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 (Tag1 ((("Value", 6792)), "t"), 0, (0)), 100000000, 0, -6), (Tag3 (Tag1 ((Tag2 ("Base")), "bool"), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -7), (Tag3 (Tag1 ((("Value", 6792)), "t"), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("src/interpreter.ml", 469, 14080, 14084), ("src/interpreter.ml", 469, 14080, 14092), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 158)), 0); (("eval_poly2", 6815), ((Tag1 (0, (Tag3 (Tag1 ((("Env", 6793)), "t"), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((("Value", 6792)), "t"), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 (Tag1 ((("Value", 6792)), "t"), 0, (0)), 100000000, 0, -6), (Tag3 (Tag1 ((("Value", 6792)), "t"), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -9), 0), 100000000, 0, -8), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -7), (Tag3 (Tag1 ((("Value", 6792)), "t"), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/interpreter.ml", 473, 14155, 14159), ("src/interpreter.ml", 473, 14155, 14169), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 159)), 0); Tag3 (("EnvIO", 6816), 0, (Tag1 ([(("to_expression", 6841), ((Tag1 (0, (Tag3 (Tag1 ((("Env", 6793)), "t"), 0, (0)), 100000000, 0, -207), (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -206), 0), 100000000, 0, -205), 0, (("src/interpreter.ml", 483, 14465, 14471), ("src/interpreter.ml", 483, 14465, 14484), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 322)), 0); (("of_expression", 6842), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ppxlib")), "expression"), 0, (0)), 100000000, 0, -204), (Tag3 (Tag1 ((("Env", 6793)), "t"), 0, (0)), 100000000, 0, -203), 0), 100000000, 0, -202), 0, (("src/interpreter.ml", 485, 14506, 14512), ("src/interpreter.ml", 485, 14506, 14525), 0), 0, Tag1 ("Ppx_optcomp__Interpreter", 323)), 0)]), 0, (("src/interpreter.ml", 482, 14443, 14443), ("src/interpreter.ml", 507, 15501, 15504), 0), Tag1 ("Ppx_optcomp__Interpreter", 334)), 0, 0)], "Ppx_optcomp__Interpreter", [("Ppx_optcomp__Interpreter", ("=\169\134\218QT\241!UB\0063\217\164sU")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Subst", ("\021\031\148\223\127\186\189\135\027}\145r\216\143\177\156")); ("Stdppx", ("=:\209>\156\207\149\181\248\131\161P-\254\025q")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__StringLabels", ("\134F\024\226\216Is#\223\230\234\169Z\206Gc")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Scanf", ("\131\218\020\026q\241WA\012\229\244\251\020\209f?")); ("Stdlib__Printf", ("\215<\139]\021\142\224E\245m\198qc(W\229")); ("Stdlib__Printexc", ("\217u\168\235\179oi\167\235\255\025\017%d\192s")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__MoreLabels", ("\248\232\248\254`<\230\241\161U\193U\1466J\238")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__ListLabels", ("*\194\012\191\020%\170\249m\002\180\178hk\205\220")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Char", ("\1794\1468\190\138\150g\231\240\140d\191.\212e")); ("Stdlib__BytesLabels", ("\145\128\000\239\186Z.\0310^\247\201\174\\\137R")); ("Stdlib__Bytes", ("C\134\194)\175\222\137p\205\246\244\r\241\164P\209")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib__Arg", ("\024%=\206\198p\149Y\007\004\216,&\254#\207")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Shadow_stdlib", ("\219zi\164\203\158e)\232\221\196\168\138x\142\018")); ("Sexplib0__Sexpable", ("\251${\207(\249/z\242\255\250^\141\156\210e")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv_error", ("kzv!\151~\198P\000\165\176d\007\251p\232")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("Profile", ("\201i\132?<qM\169\011\239@\142\202\182\023,")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Ppxlib_traverse_builtins", ("\237\218tx\250&^T{\197#\019<\250_\r")); ("Ppxlib_ast__Versions", ("\005+\189\023\165C\208\138FX6X\224\005\223\t")); ("Ppxlib_ast__Import", ("\027\222\n&\137\144M\230R\150g=Y\198\007\233")); ("Ppxlib_ast__Ast", ("?\026\134=\154d\183u\023\212\177\192\b]\250E")); ("Ppxlib_ast__", ("\182{\159J6;\249\149\208}`\139\002r\020x")); ("Ppxlib_ast", ("\002y:\229,^V\247~U\236~\232\131I\154")); ("Ppxlib__Utils", ("l\219q\2089\252\011\193\194^N&B\192T\223")); ("Ppxlib__Name", ("\202C\151nm\153EG\200\214[;s!)\140")); ("Ppxlib__Longident", ("\236#\230\012\180\203D\156\209\2282-p1H\132")); ("Ppxlib__Location", ("\r\139A\176n\135\029#\213\194&\153}\132\b\193")); ("Ppxlib__Loc", ("\183\208\004g\131\162\223\177\235#:\182\128\020\166\155")); ("Ppxlib__Import", ("\146|\185\205\005c\141\174\165\006\1517\177}\\\241")); ("Ppxlib__Expansion_context", ("\210<\144_\134\203\172\219N:6H\156{\220U")); ("Ppxlib__Common", (">S\244L\148\145\200\134\1298\249\200b\014\193\147")); ("Ppxlib__Code_path", ("\029\211r\143\213`\240\244{Na\007Ii^J")); ("Ppxlib__Attribute", ("\162~~\178\183\027\245`\231\215\181\235qHm\b")); ("Ppxlib__Ast_traverse0", ("r\177\171e\003\155\241]D\149FKy\174\023\225")); ("Ppxlib__Ast_traverse", ("B\b\r\176z\\s\1809\129\156\127?\011Qo")); ("Ppxlib__Ast_pattern_generated", (":\216\170\153\005\218jM\167\138\2111!\b\020K")); ("Ppxlib__Ast_pattern0", ("\255\203\196\229\159\201Q*\230\238\"\198(Q\154\029")); ("Ppxlib__Ast_pattern", ("\023,&Ow\159\019\144Rw\158\143\213Mo\203")); ("Ppxlib__Ast_builder_intf", ("f\195(\250\243~\149\026+d\219\173\244\185\189o")); ("Ppxlib__Ast_builder_generated", ("\209\002\237\243\187\251C^\172U\005n\179\024G\237")); ("Ppxlib__Ast_builder", ("{\157\238\130%\012\159\135\129\222gh)\157\206\214")); ("Ppxlib__", ("JQ\224\000Y\175_]O\b\254O\194|\017\237")); ("Ppxlib", ("\216\128\187K\006\011\165\149s\168&\180\1515\181\007")); ("Ppx_optcomp__", ("\136g#\173\142\141_\162\142\213\152/>\178\167_")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Ocaml_shadow", ("\148\171\169\197\t\188z\207\155\180N\151 \195\173\206")); ("Ocaml_common", ("1\212\195\020\163\232\187\142G\192\221\180@\1278u")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Load_path", ("\012@\228l\230\164S\172h\1726X\020\252o}")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("Env", ("\021\n\181\142x\b\169j\227\"\017\248*\178\245\223")); ("Config", ("\161i<\167\240O\230f\157l9\006u\142\185\026")); ("Compmisc", ("B\127\\\174\004T\179\002\242}-C\214\152H*")); ("Cmi_format", ("6\177\bU\139\"\023\152=\249\135\174\b\011Cg")); ("Clflags", ("\162v\193G\199E|\029\023{\b\243]B\144;")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc")); ("Base_internalhash_types", ("0\148#2\226\223\018\135\173>!\020\237\017\255\149")); ("Base__With_return", ("S\142\136\128>E\001\1583\028\161\217I\183\1279")); ("Base__Unit", ("\247\n\178\171]m\169\231\139\171\148\189\254\236l'")); ("Base__T", ("+t\159\169\027\152\205\235\003\237\133\177\024\n6'")); ("Base__Sys0", ("\206z\231\154s\\\136\2364\131\005\014\031\152m3")); ("Base__Stringable", ("\170\025\162\136\234\162\n\161\1491>\145\210@\237t")); ("Base__String0", ("\212\221L\220\245\255\162P\228\224\189\216\135H\149O")); ("Base__String", ("|q\181\r\14787\130\127\191\025\137\203\217\250\196")); ("Base__Staged", ("\203J\011+\249\0115\1338\023\209\142\159\240V.")); ("Base__Source_code_position0", ("_\003P6\254\029\206\005\130\136\180\019\145\230\000M")); ("Base__Sign_or_nan", ("\2287\251,\197\017qf\179Y\025h\190\131W%")); ("Base__Sign0", ("\152\138\204\175\244\128J\165\221\165\160\150y\1305i")); ("Base__Sign", ("^\255.Q;\215fi\134\192\182\241Z\2425l")); ("Base__Sexpable", ("\155?\169\178\246\242*\232\206\018Y\174\203h\217i")); ("Base__Sexp_with_comparable", ("\171\173\137y\1855\006y\146\248\141@@\191[W")); ("Base__Sexp", ("\154\187\171&\209=\153[\236\250!U\174`\190T")); ("Base__Sequence", ("{L\140\211\223\183\000\030\151\247FnY\196\210\201")); ("Base__Result", ("\204|\215\173FMa\2511<&\215T\194$\228")); ("Base__Ref", ("\250\254R\158s\203c\0025\029I6\149\179s\158")); ("Base__Random", (" \216\153fc\243\1430\155\211\169?\022\\\231\011")); ("Base__Printf", ("\000\196c,\214\127\226\174\220\190\253z!\242\028\250")); ("Base__Pretty_printer", ("\175\005\031\018\015a\159\220\154c'(a\239j\233")); ("Base__Ppx_hash_lib", ("\199\141\178\193\006\209L\007^\020(\131\224sn8")); ("Base__Ppx_enumerate_lib", ("G\171\178\012Em\142\235@\152fg\020\140~(")); ("Base__Ppx_compare_lib", ("\243\186~\233\228\199Ah\181.\223\004e\231\129S")); ("Base__Poly0", ("\230;\143\234\255.H\132KOe7\155\\\023f")); ("Base__Or_error", ("\193\133)\bO\210\2517\168*\203\148\143\200\127\177")); ("Base__Option", ("\242!\176\142\168\247\163Jg\0254\180\224\\A\210")); ("Base__Nativeint", ("\252/\181U\214\229\029?.\130\145\237\"qFj")); ("Base__Monad_intf", ("\208\203\163\152\184O\130?\012:\168\247}\018\253\155")); ("Base__Monad", ("!\244\168\2352=\137Lm\219\129K\216\199\145\\")); ("Base__Maybe_bound", ("\211{0\211\222\218\143\007\232\138\213\212\228f\247C")); ("Base__Map_intf", ("\165\147vd?\227\030\182nf7\200\220)\180\015")); ("Base__Map", (")\143\149A\189u\167\2155\178\149\r{\021\193+")); ("Base__List", ("}\029h\158/\153\229\161]0\224Y\003Z\250\210")); ("Base__Lazy", ("@`\165\196 \235)\136ANe:p\169$\185")); ("Base__Invariant_intf", ("\213\204\238\235\236[\198\145\028\2392\015\243\177S\249")); ("Base__Invariant", ("\135\153\136\\\129SD\228\202l\255\152\139\253\015\201")); ("Base__Intable", ("\028\249=Y\003]\231qd\238\172\004b\170\142\255")); ("Base__Int_intf", ("\238Q\2457\239\156\018\183J\015\240\178\193b\166@")); ("Base__Int64", ("\252B\186\239\245\155\209\227\136CIX@\189\003\029")); ("Base__Int63_emul", ("'\210s\232\177\204\254\024C\215\014\231\210\227n\235")); ("Base__Int63", ("\165\016\236\214m\014a\226A{\191\235@O\1695")); ("Base__Int32", ("\244*\172\133\227\025$@\180\027\024\132\195yO\027")); ("Base__Int0", ("N\1310\012\227\254\000\255_\222!\018\016\003\1779")); ("Base__Int", ("\165Z\179\140\230$\131\175\209\172\214\"\170\214{\250")); ("Base__Info_intf", ("\184\209'\173\251\219\167X|v\188]\190o5X")); ("Base__Info", ("-\011\149\203\248\030\2301\1907\1630\189\128\209\170")); ("Base__Indexed_container_intf", ("\179\2213\145j\\\136\tl2\240\006\188j$r")); ("Base__Indexed_container", ("\196\246\213\141\196d\130\002\232\162\144y\149\236\145\218")); ("Base__Import0", ("\156\129U\197Y[\\\153\017Ho\203\173\204\220\020")); ("Base__Import", ("\014\187\247\141\187\181\142g\176:s_,\181\219\209")); ("Base__Identifiable_intf", ("hK7}\187\129\022-r\233\241\192Q\161=j")); ("Base__Identifiable", ("L\020\162\189\228\217^\171\158H_\157\164c\130\242")); ("Base__Hasher", ("\221\138\140\019\232Yk%\201\018\025\140\254\141\254\250")); ("Base__Hashable_intf", ("\128\015G\244\135R\026\202\128F?)\193\004\195\181")); ("Base__Hashable", ("\027\187\158\245r}\018\193dbq\196\005\170g\252")); ("Base__Hash_intf", ("h\004P\218\1531G\127\212\208A\024\140\164iq")); ("Base__Hash", ("\206Rc\194\234{s3\248\165\024\162\203{\206\206")); ("Base__Globalize", ("<\243w~.\180\196t\159\193\174[\227\139\215G")); ("Base__Formatter", ("\193\149\030\140\154\1505b\162a`%\243\185'%")); ("Base__Floatable", ("\239\176\151\139\173ft(q\190\205\030C\170\197\177")); ("Base__Float", ("tR$\252\165\134g\024>\127\254\245\212-\018\141")); ("Base__Field", ("8In\234X\202\188G\186\208$\192\175\136\214v")); ("Base__Exn", ("?\191\202\221\228\185\154\127\240\191o\134\020\186b\173")); ("Base__Error", ("\199\218\231n\155/\159\156\146\247\148t\237\003\t\153")); ("Base__Equal", ("\193\217Z\127he\141N\000\1447\030\236%\131\b")); ("Base__Either_intf", ("\198\253n\235\170\"\029\207\169\248\161\226`(6\182")); ("Base__Either0", ("!9-\011n\2077eZ\212\031c\227\029\206\t")); ("Base__Either", ("\011+\000L\150v\2387\\C\181\179\242\251sk")); ("Base__Container_intf", ("\170vo*\208\209\141\219\196\168\236l\016\246\012c")); ("Base__Container", ("\191|>_\153W\235M\180uKz\214w`q")); ("Base__Comparisons", ("\196\196Y\"{\163~)\\G/\155:\004\141;")); ("Base__Comparator", ("\002\135z7b\025&\207\t\188\239&U3R\167")); ("Base__Comparable_intf", ("\252n\002\221\246\143r\235oJ\240\151\202\211\161\254")); ("Base__Comparable", (":\134'\156u#\215\225\129\191\162\229\200\185l\012")); ("Base__Char", ("\206\224\186\000'\157$\023\023\190\198{\250\141a\216")); ("Base__Bytes", ("\028\001\232X(\240\139\227s\152\156\138\023\030\r\188")); ("Base__Buffer_intf", ("\029\177op\168r\007\134\nj\217q\237%\167m")); ("Base__Buffer", ("\1347\241z\228\198Hz?\243\248\155\155\248\029I")); ("Base__Bool0", ("\177f\254p\023\143&\239\020\136\206\242~\018F\251")); ("Base__Bool", ("\162+\012Rx\183c\226\131\190@Z\016q\138@")); ("Base__Blit_intf", ("\171\129\t\214\130\131O\210\251F\228.\168\004Vo")); ("Base__Blit", ("}g\242\161\000\216\132\220\195\230C\002jg\234j")); ("Base__Binary_searchable_intf", ("/\213\237\209\200\192$w\158\234\169\148\012\221W\019")); ("Base__Binary_searchable", ("V\022B_\233\194\145K\248\233\025\175U\155i\197")); ("Base__Backtrace", ("\212~\253E\024|\228\141\015\169\012\006\022\0065\181")); ("Base__Array", ("P\252F\172\242{\241\226#uu\207\2068\218\015")); ("Base__Applicative_intf", ("J\176\203\159\235N(\235\027\232\198+\224\205*A")); ("Base__Applicative", ("\157\024\176\241a\165\204\133\003s3\214\007\131\244\n")); ("Base__", ("p\252\007\139\128\163W\025+\0225\001\246|P\158")); ("Base", ("\167SY\027Q9E\005r,\198\164\161\023\170\151")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216")); ("Astlib__Pprintast", ("\128\163\145\213\243\170\241\252N\219*\177\184\128\186\002")); ("Astlib__Parse", ("\203iQ\135d.\147$\t\207\203C\131\175\193\171")); ("Astlib__Longident", ("\n\192\233\142\177n\225\191\238\161#\150\204n\"Y")); ("Astlib__Location", ("nn\153\250\162\2239\215\129\229e\026xg\000U")); ("Astlib__Ast_501", ("\207\"A\188\024\242Q\223\153\146\239\128\168h\148&")); ("Astlib__Ast_500", ("\202\202\240\178Ep\168 [f\246\t\162T\141\254")); ("Astlib__Ast_414", ("i\179p\208\134r\2177\243\167\157nF\235\143\179")); ("Astlib__Ast_413", ("\240P\019\205\016\157\177\177O)\172\193\028\192\011\190")); ("Astlib__Ast_412", (">\181S\020\t\004\1998\163p\025\210s\216\251\169")); ("Astlib__Ast_411", ("\030\186y\191\005D\180nv\183\b@1\225\168+")); ("Astlib__Ast_410", ("\023\030O]m0\005\214X\n/\226c\201\214\232")); ("Astlib__Ast_409", ("P\147I\234\185H\181\153\207\221\003\165\139\161\150\027")); ("Astlib__Ast_408", ("\225\220%%\162\188\006W\007\252\001X\158\165,\004")); ("Astlib__Ast_407", ("\163\202\2018`\230bGY\138/\021'\148:\018")); ("Astlib__Ast_406", ("v\152\031Q\232\244\141\011p\012\161\164hy\203\151")); ("Astlib__Ast_405", ("\145;\017\238\241\127\173z\138\142Q4>\198\186\207")); ("Astlib__Ast_404", ("I\027\143Zr\250\2468\193\167uOo\029\236\148")); ("Astlib__Ast_403", ("\206M\242\247\155X\251\127\002Ly\024\154\245\153\180")); ("Astlib__Ast_402", ("\178]\161\230\193\144:\005/\\~\127'|\207\189")); ("Astlib__", ("\246\155.n\143$\1435\bi\005\019C\219\191A")); ("Astlib", ("\002*Xp\193\003\201C\234Q\143\029\232\1569\007"))], [(0)])

  end
