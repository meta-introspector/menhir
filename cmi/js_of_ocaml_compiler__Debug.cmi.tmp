val available : unit -> string list
val find : ?even_if_quiet:bool -> string -> unit -> bool
val enable : string -> unit
val disable : string -> unit
val stop_profiling : unit -> unit("DEBUG:rule", [(("available", 342), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -25), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -24)], (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("compiler/lib/debug.mli", 18, 831, 831), ("compiler/lib/debug.mli", 18, 831, 866), 0), 0, Tag1 ("Js_of_ocaml_compiler__Debug", 0)), 0); (("find", 343), ((Tag1 (Tag1 ("even_if_quiet"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -21)], (0)), 100000000, 0, -20), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -19), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -18), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("compiler/lib/debug.mli", 20, 868, 868), ("compiler/lib/debug.mli", 20, 868, 924), 0), 0, Tag1 ("Js_of_ocaml_compiler__Debug", 1)), 0); (("enable", 344), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -13), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("compiler/lib/debug.mli", 22, 926, 926), ("compiler/lib/debug.mli", 22, 926, 953), 0), 0, Tag1 ("Js_of_ocaml_compiler__Debug", 2)), 0); (("disable", 345), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("compiler/lib/debug.mli", 24, 955, 955), ("compiler/lib/debug.mli", 24, 955, 983), 0), 0, Tag1 ("Js_of_ocaml_compiler__Debug", 3)), 0); (("stop_profiling", 346), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("compiler/lib/debug.mli", 26, 985, 985), ("compiler/lib/debug.mli", 26, 985, 1018), 0), 0, Tag1 ("Js_of_ocaml_compiler__Debug", 4)), 0); (("start_profiling", 347), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("compiler/lib/debug.mli", 28, 1020, 1020), ("compiler/lib/debug.mli", 28, 1020, 1056), 0), 0, Tag1 ("Js_of_ocaml_compiler__Debug", 5)), 0)], "Js_of_ocaml_compiler__Debug", [("Js_of_ocaml_compiler__Debug", ("\160\246\251\184\030\168\026q\205\161O\255cl\200K")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Js_of_ocaml_compiler", ("\140\150\022\231\129$!^\139\156\170\236r\184~q")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val start_profiling : string -> unit
