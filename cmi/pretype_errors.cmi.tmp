type unification_error =
    OccurCheck of Evar.t * EConstr.constr
  | NotClean of EConstr.existential * Environ.env * EConstr.constr
  | NotSameArgSize
  | NotSameHead
  | NoCanonicalStructure
  | ConversionFailed of Environ.env * EConstr.constr * EConstr.constr
  | IncompatibleInstances of Environ.env * EConstr.existential *
      EConstr.constr * EConstr.constr
  | MetaOccurInBody of Evar.t
  | InstanceNotSameType of Evar.t * Environ.env * EConstr.types *
      EConstr.types
  | InstanceNotFunctionalType of Evar.t * Environ.env * EConstr.constr *
      EConstr.types
  | UnifUnivInconsistency of UGraph.univ_inconsistency
  | CannotSolveConstraint of Evd.evar_constraint * unification_error
  | ProblemBeyondCapabilities
type position = (Names.Id.t * Locus.hyp_location_flag) option
type position_reporting = (position * int) * EConstr.constr
type subterm_unification_error =
    bool * position_reporting * position_reporting *
    (EConstr.constr * EConstr.constr * unification_error) option
type type_error = (EConstr.constr, EConstr.types) Type_errors.ptype_error
type pretype_error =
    CantFindCaseType of EConstr.constr
  | ActualTypeNotCoercible of EConstr.unsafe_judgment * EConstr.types *
      unification_error
  | UnifOccurCheck of Evar.t * EConstr.constr
  | UnsolvableImplicit of Evar.t * Evd.unsolvability_explanation option
  | CannotUnify of EConstr.constr * EConstr.constr * unification_error option
  | CannotUnifyLocal of EConstr.constr * EConstr.constr * EConstr.constr
  | CannotUnifyBindingType of EConstr.constr * EConstr.constr
  | CannotGeneralize of EConstr.constr
  | NoOccurrenceFound of EConstr.constr * Names.Id.t option
  | CannotFindWellTypedAbstraction of EConstr.constr * EConstr.constr list *
      (Environ.env * pretype_error) option
  | WrongAbstractionType of Names.Name.t * EConstr.constr * EConstr.types *
      EConstr.types
  | AbstractionOverMeta of Names.Name.t * Names.Name.t
  | NonLinearUnification of Names.Name.t * EConstr.constr
  | VarNotFound of Names.Id.t
  | EvarNotFound of Names.Id.t
  | UnexpectedType of EConstr.constr * EConstr.constr * unification_error
  | NotProduct of EConstr.constr
  | TypingError of type_error
  | CantApplyBadTypeExplained of
      (EConstr.constr, EConstr.types) Type_errors.pcant_apply_bad_type *
      unification_error
  | CannotUnifyOccurrences of subterm_unification_error
  | UnsatisfiableConstraints of (Evar.t * Evar_kinds.t) option * Evar.Set.t
  | DisallowedSProp
exception PretypeError of Environ.env * Evd.evar_map * pretype_error
val precatchable_exception : exn -> bool
val error_actual_type :
  ?loc:Loc.t ->
  ?info:Exninfo.info ->
  Environ.env ->
  Evd.evar_map ->
  EConstr.unsafe_judgment -> EConstr.constr -> unification_error -> 'b
val error_actual_type_core :
  ?loc:Loc.t ->
  Environ.env ->
  Evd.evar_map -> EConstr.unsafe_judgment -> EConstr.constr -> 'b
val error_cant_apply_not_functional :
  ?loc:Loc.t ->
  Environ.env ->
  Evd.evar_map ->
  EConstr.unsafe_judgment -> EConstr.unsafe_judgment array -> 'b
val error_cant_apply_bad_type :
  ?loc:Loc.t ->
  Environ.env ->
  Evd.evar_map ->
  ?error:unification_error ->
  int * EConstr.constr * EConstr.constr ->
  EConstr.unsafe_judgment -> EConstr.unsafe_judgment array -> 'b
val error_case_not_inductive :
  ?loc:Loc.t -> Environ.env -> Evd.evar_map -> EConstr.unsafe_judgment -> 'b
val error_ill_formed_branch :
  ?loc:Loc.t ->
  Environ.env ->
  Evd.evar_map ->
  EConstr.constr ->
  Constr.pconstructor -> EConstr.constr -> EConstr.constr -> 'b
val error_number_branches :
  ?loc:Loc.t ->
  Environ.env -> Evd.evar_map -> EConstr.unsafe_judgment -> int -> 'b
val error_ill_typed_rec_body :
  ?loc:Loc.t ->
  Environ.env ->
  Evd.evar_map ->
  int ->
  Names.Name.t Context.binder_annot array ->
  EConstr.unsafe_judgment array -> EConstr.types array -> 'b
val error_elim_arity :
  ?loc:Loc.t ->
  Environ.env ->
  Evd.evar_map ->
  Constr.pinductive ->
  EConstr.constr ->
  (EConstr.unsafe_judgment * Sorts.family * Sorts.family * Sorts.family)
  option -> 'b
val error_not_a_type :
  ?loc:Loc.t -> Environ.env -> Evd.evar_map -> EConstr.unsafe_judgment -> 'b
val error_assumption :
  ?loc:Loc.t -> Environ.env -> Evd.evar_map -> EConstr.unsafe_judgment -> 'b
val error_cannot_coerce :
  Environ.env -> Evd.evar_map -> EConstr.constr * EConstr.constr -> 'b
val error_occur_check :
  Environ.env -> Evd.evar_map -> Evar.t -> EConstr.constr -> 'b
val error_unsolvable_implicit :
  ?loc:Loc.t ->
  Environ.env ->
  Evd.evar_map -> Evar.t -> Evd.unsolvability_explanation option -> 'b
val error_cannot_unify :
  ?loc:Loc.t ->
  Environ.env ->
  Evd.evar_map ->
  ?reason:unification_error -> EConstr.constr * EConstr.constr -> 'b
val error_cannot_unify_local :
  Environ.env ->
  Evd.evar_map -> EConstr.constr * EConstr.constr * EConstr.constr -> 'b
val error_cannot_find_well_typed_abstraction :
  Environ.env ->
  Evd.evar_map ->
  EConstr.constr ->
  EConstr.constr list -> (Environ.env * pretype_error) option -> 'b
val error_wrong_abstraction_type :
  Environ.env ->
  Evd.evar_map ->
  Names.Name.t -> EConstr.constr -> EConstr.types -> EConstr.types -> 'b
val error_abstraction_over_meta :
  Environ.env ->
  Evd.evar_map -> Constr.metavariable -> Constr.metavariable -> 'b
val error_non_linear_unification :
  Environ.env -> Evd.evar_map -> Constr.metavariable -> EConstr.constr -> 'b
val error_cant_find_case_type :
  ?loc:Loc.t -> Environ.env -> Evd.evar_map -> EConstr.constr -> 'b
val error_unexpected_type :
  ?loc:Loc.t ->
  Environ.env ->
  Evd.evar_map -> EConstr.constr -> EConstr.constr -> unification_error -> 'b
val error_not_product :
  ?loc:Loc.t -> Environ.env -> Evd.evar_map -> EConstr.constr -> 'b
val error_var_not_found :
  ?loc:Loc.t -> Environ.env -> Evd.evar_map -> Names.Id.t -> 'b
val error_evar_not_found :
  ?loc:Loc.t -> Environ.env -> Evd.evar_map -> Names.Id.t -> 'b
val error_disallowed_sprop : Environ.env -> Evd.evar_map -> 'a
val unsatisfiable_constraints :
  Environ.env -> Evd.evar_map -> Evar.t option -> Evar.Set.t -> 'a
("DEBUG:rule", [Tag1 (("unification_error", 1484), (0, 0, Tag1 ([(("OccurCheck", 894), ([(Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -417); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -418)]), 0, (("pretyping/pretype_errors.mli", 20, 823, 825), ("pretyping/pretype_errors.mli", 20, 823, 856), 0), 0, Tag1 ("Pretype_errors", 3)); (("NotClean", 904), ([(Tag3 (Tag1 ((Tag2 ("EConstr")), "existential"), 0, (0)), 100000000, 0, -419); (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -420); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -421)]), 0, (("pretyping/pretype_errors.mli", 21, 857, 859), ("pretyping/pretype_errors.mli", 21, 857, 899), 0), 0, Tag1 ("Pretype_errors", 4)); (("NotSameArgSize", 905), (0), 0, (("pretyping/pretype_errors.mli", 22, 900, 902), ("pretyping/pretype_errors.mli", 22, 900, 918), 0), 0, Tag1 ("Pretype_errors", 5)); (("NotSameHead", 906), (0), 0, (("pretyping/pretype_errors.mli", 23, 919, 921), ("pretyping/pretype_errors.mli", 23, 919, 934), 0), 0, Tag1 ("Pretype_errors", 6)); (("NoCanonicalStructure", 907), (0), 0, (("pretyping/pretype_errors.mli", 24, 935, 937), ("pretyping/pretype_errors.mli", 24, 935, 959), 0), 0, Tag1 ("Pretype_errors", 7)); (("ConversionFailed", 908), ([(Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -422); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -423); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -424)]), 0, (("pretyping/pretype_errors.mli", 25, 960, 962), ("pretyping/pretype_errors.mli", 25, 960, 1005), 0), 0, Tag1 ("Pretype_errors", 8)); (("IncompatibleInstances", 909), ([(Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -425); (Tag3 (Tag1 ((Tag2 ("EConstr")), "existential"), 0, (0)), 100000000, 0, -426); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -427); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -428)]), 0, (("pretyping/pretype_errors.mli", 26, 1006, 1008), ("pretyping/pretype_errors.mli", 26, 1006, 1070), 0), 0, Tag1 ("Pretype_errors", 9)); (("MetaOccurInBody", 910), ([(Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -429)]), 0, (("pretyping/pretype_errors.mli", 27, 1071, 1073), ("pretyping/pretype_errors.mli", 27, 1071, 1100), 0), 0, Tag1 ("Pretype_errors", 10)); (("InstanceNotSameType", 911), ([(Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -430); (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -431); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -432); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -433)]), 0, (("pretyping/pretype_errors.mli", 28, 1101, 1103), ("pretyping/pretype_errors.mli", 28, 1101, 1156), 0), 0, Tag1 ("Pretype_errors", 11)); (("InstanceNotFunctionalType", 912), ([(Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -434); (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -435); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -436); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -437)]), 0, (("pretyping/pretype_errors.mli", 29, 1157, 1159), ("pretyping/pretype_errors.mli", 29, 1157, 1219), 0), 0, Tag1 ("Pretype_errors", 12)); (("UnifUnivInconsistency", 913), ([(Tag3 (Tag1 ((Tag2 ("UGraph")), "univ_inconsistency"), 0, (0)), 100000000, 0, -438)]), 0, (("pretyping/pretype_errors.mli", 30, 1220, 1222), ("pretyping/pretype_errors.mli", 30, 1220, 1274), 0), 0, Tag1 ("Pretype_errors", 13)); (("CannotSolveConstraint", 951), ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_constraint"), 0, (0)), 100000000, 0, -439); (Tag3 ((("unification_error", 1484)), 0, (0)), 100000000, 0, -440)]), 0, (("pretyping/pretype_errors.mli", 31, 1275, 1277), ("pretyping/pretype_errors.mli", 31, 1275, 1343), 0), 0, Tag1 ("Pretype_errors", 14)); (("ProblemBeyondCapabilities", 1159), (0), 0, (("pretyping/pretype_errors.mli", 32, 1344, 1346), ("pretyping/pretype_errors.mli", 32, 1344, 1373), 0), 0, Tag1 ("Pretype_errors", 15))], 0), 1, 0, 0, 0, 0, 0, (("pretyping/pretype_errors.mli", 19, 798, 798), ("pretyping/pretype_errors.mli", 32, 1344, 1373), 0), 0, 0, 0, Tag1 ("Pretype_errors", 2)), 1, 0); Tag1 (("position", 1485), (0, 0, 0, 1, ((Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -415); (Tag3 (Tag1 ((Tag2 ("Locus")), "hyp_location_flag"), 0, (0)), 100000000, 0, -416)]), 100000000, 0, -414)], (0)), 100000000, 0, -413)), 0, 0, 0, 0, (("pretyping/pretype_errors.mli", 34, 1375, 1375), ("pretyping/pretype_errors.mli", 34, 1375, 1430), 0), 0, 0, 0, Tag1 ("Pretype_errors", 16)), 1, 0); Tag1 (("position_reporting", 1486), (0, 0, 0, 1, ((Tag2 ([(Tag2 ([(Tag3 ((("position", 1485)), 0, (0)), 100000000, 0, -410); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -411)]), 100000000, 0, -409); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -412)]), 100000000, 0, -408)), 0, 0, 0, 0, (("pretyping/pretype_errors.mli", 36, 1432, 1432), ("pretyping/pretype_errors.mli", 36, 1432, 1483), 0), 0, 0, 0, Tag1 ("Pretype_errors", 17)), 1, 0); Tag1 (("subterm_unification_error", 1487), (0, 0, 0, 1, ((Tag2 ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -400); (Tag3 ((("position_reporting", 1486)), 0, (0)), 100000000, 0, -401); (Tag3 ((("position_reporting", 1486)), 0, (0)), 100000000, 0, -402); (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -405); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -406); (Tag3 ((("unification_error", 1484)), 0, (0)), 100000000, 0, -407)]), 100000000, 0, -404)], (0)), 100000000, 0, -403)]), 100000000, 0, -399)), 0, 0, 0, 0, (("pretyping/pretype_errors.mli", 38, 1485, 1485), ("pretyping/pretype_errors.mli", 38, 1485, 1611), 0), 0, 0, 0, Tag1 ("Pretype_errors", 18)), 1, 0); Tag1 (("type_error", 1488), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Type_errors")), "ptype_error"), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -397); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -398)], (0)), 100000000, 0, -396)), 0, 0, 0, 0, (("pretyping/pretype_errors.mli", 40, 1613, 1613), ("pretyping/pretype_errors.mli", 40, 1613, 1658), 0), 0, 0, 0, Tag1 ("Pretype_errors", 19)), 1, 0); Tag1 (("pretype_error", 1489), (0, 0, Tag1 ([(("CantFindCaseType", 1324), ([(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -342)]), 0, (("pretyping/pretype_errors.mli", 43, 1681, 1683), ("pretyping/pretype_errors.mli", 43, 1681, 1711), 0), 0, Tag1 ("Pretype_errors", 21)); (("ActualTypeNotCoercible", 1325), ([(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -343); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -344); (Tag3 ((("unification_error", 1484)), 0, (0)), 100000000, 0, -345)]), 0, (("pretyping/pretype_errors.mli", 46, 1731, 1733), ("pretyping/pretype_errors.mli", 46, 1731, 1804), 0), 0, Tag1 ("Pretype_errors", 22)); (("UnifOccurCheck", 1326), ([(Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -346); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -347)]), 0, (("pretyping/pretype_errors.mli", 49, 1842, 1844), ("pretyping/pretype_errors.mli", 49, 1842, 1879), 0), 0, Tag1 ("Pretype_errors", 23)); (("UnsolvableImplicit", 1327), ([(Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -348); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Evd")), "unsolvability_explanation"), 0, (0)), 100000000, 0, -350)], (0)), 100000000, 0, -349)]), 0, (("pretyping/pretype_errors.mli", 52, 1909, 1911), ("pretyping/pretype_errors.mli", 52, 1909, 1980), 0), 0, Tag1 ("Pretype_errors", 24)); (("CannotUnify", 1328), ([(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -351); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -352); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("unification_error", 1484)), 0, (0)), 100000000, 0, -354)], (0)), 100000000, 0, -353)]), 0, (("pretyping/pretype_errors.mli", 53, 1981, 1983), ("pretyping/pretype_errors.mli", 53, 1981, 2042), 0), 0, Tag1 ("Pretype_errors", 25)); (("CannotUnifyLocal", 1329), ([(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -355); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -356); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -357)]), 0, (("pretyping/pretype_errors.mli", 54, 2043, 2045), ("pretyping/pretype_errors.mli", 54, 2043, 2091), 0), 0, Tag1 ("Pretype_errors", 26)); (("CannotUnifyBindingType", 1330), ([(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -358); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -359)]), 0, (("pretyping/pretype_errors.mli", 55, 2092, 2094), ("pretyping/pretype_errors.mli", 55, 2092, 2137), 0), 0, Tag1 ("Pretype_errors", 27)); (("CannotGeneralize", 1331), ([(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -360)]), 0, (("pretyping/pretype_errors.mli", 56, 2138, 2140), ("pretyping/pretype_errors.mli", 56, 2138, 2168), 0), 0, Tag1 ("Pretype_errors", 28)); (("NoOccurrenceFound", 1332), ([(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -361); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -363)], (0)), 100000000, 0, -362)]), 0, (("pretyping/pretype_errors.mli", 57, 2169, 2171), ("pretyping/pretype_errors.mli", 57, 2169, 2214), 0), 0, Tag1 ("Pretype_errors", 29)); (("CannotFindWellTypedAbstraction", 1333), ([(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -364); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -366)], (0)), 100000000, 0, -365); (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -369); (Tag3 ((("pretype_error", 1489)), 0, (0)), 100000000, 0, -370)]), 100000000, 0, -368)], (0)), 100000000, 0, -367)]), 0, (("pretyping/pretype_errors.mli", 58, 2215, 2217), ("pretyping/pretype_errors.mli", 58, 2215, 2304), 0), 0, Tag1 ("Pretype_errors", 30)); (("WrongAbstractionType", 1334), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -371); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -372); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -373); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -374)]), 0, (("pretyping/pretype_errors.mli", 59, 2305, 2307), ("pretyping/pretype_errors.mli", 59, 2305, 2364), 0), 0, Tag1 ("Pretype_errors", 31)); (("AbstractionOverMeta", 1344), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -375); (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -376)]), 0, (("pretyping/pretype_errors.mli", 60, 2365, 2367), ("pretyping/pretype_errors.mli", 60, 2365, 2407), 0), 0, Tag1 ("Pretype_errors", 32)); (("NonLinearUnification", 1345), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -377); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -378)]), 0, (("pretyping/pretype_errors.mli", 61, 2408, 2410), ("pretyping/pretype_errors.mli", 61, 2408, 2451), 0), 0, Tag1 ("Pretype_errors", 33)); (("VarNotFound", 1346), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -379)]), 0, (("pretyping/pretype_errors.mli", 63, 2471, 2473), ("pretyping/pretype_errors.mli", 63, 2471, 2494), 0), 0, Tag1 ("Pretype_errors", 34)); (("EvarNotFound", 1347), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -380)]), 0, (("pretyping/pretype_errors.mli", 64, 2495, 2497), ("pretyping/pretype_errors.mli", 64, 2495, 2519), 0), 0, Tag1 ("Pretype_errors", 35)); (("UnexpectedType", 1348), ([(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -381); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -382); (Tag3 ((("unification_error", 1484)), 0, (0)), 100000000, 0, -383)]), 0, (("pretyping/pretype_errors.mli", 65, 2520, 2522), ("pretyping/pretype_errors.mli", 65, 2520, 2577), 0), 0, Tag1 ("Pretype_errors", 36)); (("NotProduct", 1349), ([(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -384)]), 0, (("pretyping/pretype_errors.mli", 66, 2578, 2580), ("pretyping/pretype_errors.mli", 66, 2578, 2602), 0), 0, Tag1 ("Pretype_errors", 37)); (("TypingError", 1350), ([(Tag3 ((("type_error", 1488)), 0, (0)), 100000000, 0, -385)]), 0, (("pretyping/pretype_errors.mli", 67, 2603, 2605), ("pretyping/pretype_errors.mli", 67, 2603, 2632), 0), 0, Tag1 ("Pretype_errors", 38)); (("CantApplyBadTypeExplained", 1351), ([(Tag3 (Tag1 ((Tag2 ("Type_errors")), "pcant_apply_bad_type"), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -387); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -388)], (0)), 100000000, 0, -386); (Tag3 ((("unification_error", 1484)), 0, (0)), 100000000, 0, -389)]), 0, (("pretyping/pretype_errors.mli", 68, 2633, 2635), ("pretyping/pretype_errors.mli", 68, 2633, 2721), 0), 0, Tag1 ("Pretype_errors", 39)); (("CannotUnifyOccurrences", 1352), ([(Tag3 ((("subterm_unification_error", 1487)), 0, (0)), 100000000, 0, -390)]), 0, (("pretyping/pretype_errors.mli", 69, 2722, 2724), ("pretyping/pretype_errors.mli", 69, 2722, 2777), 0), 0, Tag1 ("Pretype_errors", 40)); (("UnsatisfiableConstraints", 1353), ([(Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -393); (Tag3 (Tag1 ((Tag2 ("Evar_kinds")), "t"), 0, (0)), 100000000, 0, -394)]), 100000000, 0, -392)], (0)), 100000000, 0, -391); (Tag3 (Tag1 (Tag1 ((Tag2 ("Evar")), "Set"), "t"), 0, (0)), 100000000, 0, -395)]), 0, (("pretyping/pretype_errors.mli", 70, 2778, 2780), ("pretyping/pretype_errors.mli", 71, 2810, 2857), 0), 0, Tag1 ("Pretype_errors", 41)); (("DisallowedSProp", 1406), (0), 0, (("pretyping/pretype_errors.mli", 73, 2905, 2907), ("pretyping/pretype_errors.mli", 73, 2905, 2924), 0), 0, Tag1 ("Pretype_errors", 42))], 0), 1, 0, 0, 0, 0, 0, (("pretyping/pretype_errors.mli", 42, 1660, 1660), ("pretyping/pretype_errors.mli", 73, 2905, 2924), 0), 0, 0, 0, Tag1 ("Pretype_errors", 20)), 1, 0); Tag2 (("PretypeError", 1490), ((Tag3 ("exn", 7)), 0, ([(Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -339); (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -340); (Tag3 ((("pretype_error", 1489)), 0, (0)), 100000000, 0, -341)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Pretype_errors", 43)), 2, 0); (("precatchable_exception", 1491), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -338), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -337), 0), 100000000, 0, -336), 0, (("pretyping/pretype_errors.mli", 77, 2988, 2988), ("pretyping/pretype_errors.mli", 77, 2988, 3028), 0), 0, Tag1 ("Pretype_errors", 44)), 0); (("error_actual_type", 1492), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -335)], (0)), 100000000, 0, -334), (Tag1 (Tag1 ("info"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Exninfo")), "info"), 0, (0)), 100000000, 0, -333)], (0)), 100000000, 0, -332), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -331), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -330), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -329), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -328), (Tag1 (0, (Tag3 ((("unification_error", 1484)), 0, (0)), 100000000, 0, -327), ((("b")), 100000000, 0, -326), 0), 100000000, 0, -325), 0), 100000000, 0, -324), 0), 100000000, 0, -323), 0), 100000000, 0, -322), 0), 100000000, 0, -321), 0), 100000000, 0, -320), 0), 100000000, 0, -319), 0, (("pretyping/pretype_errors.mli", 80, 3052, 3052), ("pretyping/pretype_errors.mli", 82, 3166, 3195), 0), 0, Tag1 ("Pretype_errors", 46)), 0); (("error_actual_type_core", 1493), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -318)], (0)), 100000000, 0, -317), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -316), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -315), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -314), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -313), ((("b")), 100000000, 0, -312), 0), 100000000, 0, -311), 0), 100000000, 0, -310), 0), 100000000, 0, -309), 0), 100000000, 0, -308), 0), 100000000, 0, -307), 0, (("pretyping/pretype_errors.mli", 84, 3197, 3197), ("pretyping/pretype_errors.mli", 85, 3226, 3296), 0), 0, Tag1 ("Pretype_errors", 47)), 0); (("error_cant_apply_not_functional", 1494), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -306)], (0)), 100000000, 0, -305), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -304), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -303), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -302), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -301)], (0)), 100000000, 0, -300), ((("b")), 100000000, 0, -299), 0), 100000000, 0, -298), 0), 100000000, 0, -297), 0), 100000000, 0, -296), 0), 100000000, 0, -295), 0), 100000000, 0, -294), 0, (("pretyping/pretype_errors.mli", 87, 3298, 3298), ("pretyping/pretype_errors.mli", 89, 3375, 3427), 0), 0, Tag1 ("Pretype_errors", 48)), 0); (("error_cant_apply_bad_type", 1495), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -293)], (0)), 100000000, 0, -292), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -291), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -290), (Tag1 (Tag1 ("error"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("unification_error", 1484)), 0, (0)), 100000000, 0, -289)], (0)), 100000000, 0, -288), (Tag1 (0, (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -285); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -286); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -287)]), 100000000, 0, -284), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -283), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -282)], (0)), 100000000, 0, -281), ((("b")), 100000000, 0, -280), 0), 100000000, 0, -279), 0), 100000000, 0, -278), 0), 100000000, 0, -277), 0), 100000000, 0, -276), 0), 100000000, 0, -275), 0), 100000000, 0, -274), 0), 100000000, 0, -273), 0, (("pretyping/pretype_errors.mli", 91, 3429, 3429), ("pretyping/pretype_errors.mli", 94, 3555, 3603), 0), 0, Tag1 ("Pretype_errors", 49)), 0); (("error_case_not_inductive", 1496), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -272)], (0)), 100000000, 0, -271), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -270), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -269), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -268), ((("b")), 100000000, 0, -267), 0), 100000000, 0, -266), 0), 100000000, 0, -265), 0), 100000000, 0, -264), 0), 100000000, 0, -263), 0, (("pretyping/pretype_errors.mli", 96, 3605, 3605), ("pretyping/pretype_errors.mli", 97, 3636, 3696), 0), 0, Tag1 ("Pretype_errors", 50)), 0); (("error_ill_formed_branch", 1497), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -262)], (0)), 100000000, 0, -261), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -260), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -259), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -258), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pconstructor"), 0, (0)), 100000000, 0, -257), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -256), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -255), ((("b")), 100000000, 0, -254), 0), 100000000, 0, -253), 0), 100000000, 0, -252), 0), 100000000, 0, -251), 0), 100000000, 0, -250), 0), 100000000, 0, -249), 0), 100000000, 0, -248), 0), 100000000, 0, -247), 0, (("pretyping/pretype_errors.mli", 99, 3698, 3698), ("pretyping/pretype_errors.mli", 101, 3767, 3821), 0), 0, Tag1 ("Pretype_errors", 51)), 0); (("error_number_branches", 1498), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -246)], (0)), 100000000, 0, -245), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -244), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -243), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -242), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -241), ((("b")), 100000000, 0, -240), 0), 100000000, 0, -239), 0), 100000000, 0, -238), 0), 100000000, 0, -237), 0), 100000000, 0, -236), 0), 100000000, 0, -235), 0, (("pretyping/pretype_errors.mli", 103, 3823, 3823), ("pretyping/pretype_errors.mli", 105, 3890, 3924), 0), 0, Tag1 ("Pretype_errors", 52)), 0); (("error_ill_typed_rec_body", 1499), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -234)], (0)), 100000000, 0, -233), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -232), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -231), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -230), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -229)], (0)), 100000000, 0, -228)], (0)), 100000000, 0, -227), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -226)], (0)), 100000000, 0, -225), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -224)], (0)), 100000000, 0, -223), ((("b")), 100000000, 0, -222), 0), 100000000, 0, -221), 0), 100000000, 0, -220), 0), 100000000, 0, -219), 0), 100000000, 0, -218), 0), 100000000, 0, -217), 0), 100000000, 0, -216), 0), 100000000, 0, -215), 0, (("pretyping/pretype_errors.mli", 107, 3926, 3926), ("pretyping/pretype_errors.mli", 109, 3996, 4088), 0), 0, Tag1 ("Pretype_errors", 53)), 0); (("error_elim_arity", 1500), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -214)], (0)), 100000000, 0, -213), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -212), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -211), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pinductive"), 0, (0)), 100000000, 0, -210), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -209), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -205); (Tag3 (Tag1 ((Tag2 ("Sorts")), "family"), 0, (0)), 100000000, 0, -206); (Tag3 (Tag1 ((Tag2 ("Sorts")), "family"), 0, (0)), 100000000, 0, -207); (Tag3 (Tag1 ((Tag2 ("Sorts")), "family"), 0, (0)), 100000000, 0, -208)]), 100000000, 0, -204)], (0)), 100000000, 0, -203), ((("b")), 100000000, 0, -202), 0), 100000000, 0, -201), 0), 100000000, 0, -200), 0), 100000000, 0, -199), 0), 100000000, 0, -198), 0), 100000000, 0, -197), 0), 100000000, 0, -196), 0, (("pretyping/pretype_errors.mli", 111, 4090, 4090), ("pretyping/pretype_errors.mli", 114, 4182, 4263), 0), 0, Tag1 ("Pretype_errors", 54)), 0); (("error_not_a_type", 1501), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -195)], (0)), 100000000, 0, -194), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -193), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -192), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -191), ((("b")), 100000000, 0, -190), 0), 100000000, 0, -189), 0), 100000000, 0, -188), 0), 100000000, 0, -187), 0), 100000000, 0, -186), 0, (("pretyping/pretype_errors.mli", 116, 4265, 4265), ("pretyping/pretype_errors.mli", 117, 4288, 4348), 0), 0, Tag1 ("Pretype_errors", 55)), 0); (("error_assumption", 1502), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -185)], (0)), 100000000, 0, -184), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -183), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -182), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -181), ((("b")), 100000000, 0, -180), 0), 100000000, 0, -179), 0), 100000000, 0, -178), 0), 100000000, 0, -177), 0), 100000000, 0, -176), 0, (("pretyping/pretype_errors.mli", 119, 4350, 4350), ("pretyping/pretype_errors.mli", 120, 4373, 4433), 0), 0, Tag1 ("Pretype_errors", 56)), 0); (("error_cannot_coerce", 1503), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -175), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -174), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -172); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -173)]), 100000000, 0, -171), ((("b")), 100000000, 0, -170), 0), 100000000, 0, -169), 0), 100000000, 0, -168), 0), 100000000, 0, -167), 0, (("pretyping/pretype_errors.mli", 122, 4435, 4435), ("pretyping/pretype_errors.mli", 122, 4435, 4505), 0), 0, Tag1 ("Pretype_errors", 57)), 0); (("error_occur_check", 1504), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -166), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -165), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -164), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -163), ((("b")), 100000000, 0, -162), 0), 100000000, 0, -161), 0), 100000000, 0, -160), 0), 100000000, 0, -159), 0), 100000000, 0, -158), 0, (("pretyping/pretype_errors.mli", 126, 4556, 4556), ("pretyping/pretype_errors.mli", 126, 4556, 4625), 0), 0, Tag1 ("Pretype_errors", 58)), 0); (("error_unsolvable_implicit", 1505), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -157)], (0)), 100000000, 0, -156), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -155), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -154), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -153), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Evd")), "unsolvability_explanation"), 0, (0)), 100000000, 0, -152)], (0)), 100000000, 0, -151), ((("b")), 100000000, 0, -150), 0), 100000000, 0, -149), 0), 100000000, 0, -148), 0), 100000000, 0, -147), 0), 100000000, 0, -146), 0), 100000000, 0, -145), 0, (("pretyping/pretype_errors.mli", 128, 4627, 4627), ("pretyping/pretype_errors.mli", 130, 4708, 4756), 0), 0, Tag1 ("Pretype_errors", 59)), 0); (("error_cannot_unify", 1506), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -144)], (0)), 100000000, 0, -143), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -142), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -141), (Tag1 (Tag1 ("reason"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("unification_error", 1484)), 0, (0)), 100000000, 0, -140)], (0)), 100000000, 0, -139), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -137); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -138)]), 100000000, 0, -136), ((("b")), 100000000, 0, -135), 0), 100000000, 0, -134), 0), 100000000, 0, -133), 0), 100000000, 0, -132), 0), 100000000, 0, -131), 0), 100000000, 0, -130), 0, (("pretyping/pretype_errors.mli", 132, 4758, 4758), ("pretyping/pretype_errors.mli", 133, 4820, 4872), 0), 0, Tag1 ("Pretype_errors", 60)), 0); (("error_cannot_unify_local", 1507), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -129), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -128), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -125); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -126); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -127)]), 100000000, 0, -124), ((("b")), 100000000, 0, -123), 0), 100000000, 0, -122), 0), 100000000, 0, -121), 0), 100000000, 0, -120), 0, (("pretyping/pretype_errors.mli", 135, 4874, 4874), ("pretyping/pretype_errors.mli", 135, 4874, 4958), 0), 0, Tag1 ("Pretype_errors", 61)), 0); (("error_cannot_find_well_typed_abstraction", 1508), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -119), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -118), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -117), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -116)], (0)), 100000000, 0, -115), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -113); (Tag3 ((("pretype_error", 1489)), 0, (0)), 100000000, 0, -114)]), 100000000, 0, -112)], (0)), 100000000, 0, -111), ((("b")), 100000000, 0, -110), 0), 100000000, 0, -109), 0), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), 0), 100000000, 0, -105), 0, (("pretyping/pretype_errors.mli", 137, 4960, 4960), ("pretyping/pretype_errors.mli", 138, 5030, 5095), 0), 0, Tag1 ("Pretype_errors", 62)), 0); (("error_wrong_abstraction_type", 1509), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -104), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -103), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -102), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -101), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -100), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -99), ((("b")), 100000000, 0, -98), 0), 100000000, 0, -97), 0), 100000000, 0, -96), 0), 100000000, 0, -95), 0), 100000000, 0, -94), 0), 100000000, 0, -93), 0), 100000000, 0, -92), 0, (("pretyping/pretype_errors.mli", 140, 5097, 5097), ("pretyping/pretype_errors.mli", 141, 5156, 5202), 0), 0, Tag1 ("Pretype_errors", 63)), 0); (("error_abstraction_over_meta", 1510), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -91), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -90), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "metavariable"), 0, (0)), 100000000, 0, -89), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "metavariable"), 0, (0)), 100000000, 0, -88), ((("b")), 100000000, 0, -87), 0), 100000000, 0, -86), 0), 100000000, 0, -85), 0), 100000000, 0, -84), 0), 100000000, 0, -83), 0, (("pretyping/pretype_errors.mli", 143, 5204, 5204), ("pretyping/pretype_errors.mli", 144, 5261, 5297), 0), 0, Tag1 ("Pretype_errors", 64)), 0); (("error_non_linear_unification", 1511), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -82), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -81), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "metavariable"), 0, (0)), 100000000, 0, -80), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -79), ((("b")), 100000000, 0, -78), 0), 100000000, 0, -77), 0), 100000000, 0, -76), 0), 100000000, 0, -75), 0), 100000000, 0, -74), 0, (("pretyping/pretype_errors.mli", 146, 5299, 5299), ("pretyping/pretype_errors.mli", 147, 5357, 5387), 0), 0, Tag1 ("Pretype_errors", 65)), 0); (("error_cant_find_case_type", 1512), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -73)], (0)), 100000000, 0, -72), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -71), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -70), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -69), ((("b")), 100000000, 0, -68), 0), 100000000, 0, -67), 0), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0, (("pretyping/pretype_errors.mli", 151, 5417, 5417), ("pretyping/pretype_errors.mli", 152, 5449, 5500), 0), 0, Tag1 ("Pretype_errors", 66)), 0); (("error_unexpected_type", 1513), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -63)], (0)), 100000000, 0, -62), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -61), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -60), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -59), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -58), (Tag1 (0, (Tag3 ((("unification_error", 1484)), 0, (0)), 100000000, 0, -57), ((("b")), 100000000, 0, -56), 0), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0), 100000000, 0, -50), 0, (("pretyping/pretype_errors.mli", 156, 5532, 5532), ("pretyping/pretype_errors.mli", 157, 5560, 5642), 0), 0, Tag1 ("Pretype_errors", 67)), 0); (("error_not_product", 1514), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -49)], (0)), 100000000, 0, -48), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -47), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -46), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -45), ((("b")), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("pretyping/pretype_errors.mli", 159, 5644, 5644), ("pretyping/pretype_errors.mli", 160, 5668, 5719), 0), 0, Tag1 ("Pretype_errors", 68)), 0); (("error_var_not_found", 1515), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -39)], (0)), 100000000, 0, -38), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -37), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -36), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -35), ((("b")), 100000000, 0, -34), 0), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("pretyping/pretype_errors.mli", 162, 5721, 5721), ("pretyping/pretype_errors.mli", 162, 5721, 5794), 0), 0, Tag1 ("Pretype_errors", 69)), 0); (("error_evar_not_found", 1516), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -29)], (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -27), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -26), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -25), ((("b")), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("pretyping/pretype_errors.mli", 164, 5796, 5796), ("pretyping/pretype_errors.mli", 164, 5796, 5870), 0), 0, Tag1 ("Pretype_errors", 70)), 0); (("error_disallowed_sprop", 1517), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -19), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -18), ((("a")), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("pretyping/pretype_errors.mli", 166, 5872, 5872), ("pretyping/pretype_errors.mli", 166, 5872, 5926), 0), 0, Tag1 ("Pretype_errors", 71)), 0); (("unsatisfiable_constraints", 1518), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -14), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -12)], (0)), 100000000, 0, -11), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Evar")), "Set"), "t"), 0, (0)), 100000000, 0, -10), ((("a")), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("pretyping/pretype_errors.mli", 170, 5958, 5958), ("pretyping/pretype_errors.mli", 171, 6030, 6048), 0), 0, Tag1 ("Pretype_errors", 72)), 0); (("unsatisfiable_exception", 1519), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("pretyping/pretype_errors.mli", 173, 6050, 6050), ("pretyping/pretype_errors.mli", 173, 6050, 6091), 0), 0, Tag1 ("Pretype_errors", 73)), 0)], "Pretype_errors", [("Pretype_errors", ("\155\229\201\176\163\234\203C\127\227\141\174j\199\200H")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("UnivSubst", ("\190qu\031mc\130\181\003G]\132\"\219m)")); ("UnivProblem", ("6'\161\018\181\001.\253\000\141a6\171\1727\155")); ("UnivNames", ("%\151_\209%+JM$n\001\232\194n\178N")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UState", ("SD\203\215|\136\n\251\239\208\148\215C\n\167\005")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("Type_errors", ("7\157\162-\214M\206\196\228\191\005v\134\177\144\134")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Store", ("/dT\252\145\179pq\216{\181\206\190K+U")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("Section", ("\245\207\b\021\142v=\155#w\246}\"4b\006")); ("Safe_typing", (")\250?\164\145\132\241\127\186\152h+\145\"\237l")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("Nativevalues", ("8:\007\025e\226c,\001\171\146#l\210\171\152")); ("Nativelib", ("V\239\205Y1\147E:,\176\196Hy\1483|")); ("Nativecode", ("\190\185\255\006m\012\210\163\138Rz\247\15283\183")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Monad", ("\244\171T\157\194p\187\160\149\195{\132\222\020\253\148")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Locus", ("_\002\003W\246\181\225\242Uf\139\226\176\174\192I")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hook", ("\183\194\223\003\155\169',\187\240a;E\b\1396")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Genlambda", ("\170}\024\241\141\222\136S\169\219\2212i\134KI")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evd", ("\211\205p\193\216\129r\006\239oN\142ar\196\175")); ("Evar_kinds", ("\023L\186\132\218}\254\221\185\198\220\200h\003{\021")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("EConstr", ("\201aW\156\157;N\004\201V\208\006L\166\211)")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conversion", ("\158\150&\195M\tv\127|\029\158RRK\211A")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CDebug", ("^4\210p7\239!3\138\138\213?\239`\250\157")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
val unsatisfiable_exception : exn -> bool
