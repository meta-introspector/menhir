val check_alerts : Location.t -> Parsetree.attributes -> string -> unit
val check_alerts_inclusion :
  def:Location.t ->
  use:Location.t ->
  Location.t ->
  Parsetree.attributes -> Parsetree.attributes -> string -> unit
val alerts_of_attrs : Parsetree.attributes -> Misc.alerts
val alerts_of_sig : Parsetree.signature -> Misc.alerts
val alerts_of_str : Parsetree.structure -> Misc.alerts
val check_deprecated_mutable :
  Location.t -> Parsetree.attributes -> string -> unit
val check_deprecated_mutable_inclusion :
  def:Location.t ->
  use:Location.t ->
  Location.t ->
  Parsetree.attributes -> Parsetree.attributes -> string -> unit
val check_no_alert : Parsetree.attributes -> unit
val error_of_extension : Parsetree.extension -> Location.error
val warning_attribute : ?ppwarning:bool -> Parsetree.attribute -> unit
val warning_scope :
  ?ppwarning:bool -> Parsetree.attributes -> (unit -> 'a) -> 'a
val warn_on_literal_pattern : Parsetree.attributes -> bool
val explicit_arity : Parsetree.attributes -> bool
val immediate : Parsetree.attributes -> bool
val immediate64 : Parsetree.attributes -> bool
val has_unboxed : Parsetree.attributes -> bool
("DEBUG:rule", [(("check_alerts", 496), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Location")), "t"), 0, (0)), 100000000, 0, -89), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attributes"), 0, (0)), 100000000, 0, -88), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -87), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -86), 0), 100000000, 0, -85), 0), 100000000, 0, -84), 0), 100000000, 0, -83), 0, (("parsing/builtin_attributes.mli", 36, 1538, 1538), ("parsing/builtin_attributes.mli", 36, 1538, 1608), 0), 0, Tag1 ("Builtin_attributes", 2)), 0); (("check_alerts_inclusion", 497), ((Tag1 (("def"), (Tag3 (Tag1 ((Tag2 ("Location")), "t"), 0, (0)), 100000000, 0, -82), (Tag1 (("use"), (Tag3 (Tag1 ((Tag2 ("Location")), "t"), 0, (0)), 100000000, 0, -81), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Location")), "t"), 0, (0)), 100000000, 0, -80), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attributes"), 0, (0)), 100000000, 0, -79), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attributes"), 0, (0)), 100000000, 0, -78), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -77), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -76), 0), 100000000, 0, -75), 0), 100000000, 0, -74), 0), 100000000, 0, -73), 0), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), 0, (("parsing/builtin_attributes.mli", 37, 1609, 1609), ("parsing/builtin_attributes.mli", 39, 1713, 1753), 0), 0, Tag1 ("Builtin_attributes", 3)), 0); (("alerts_of_attrs", 498), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attributes"), 0, (0)), 100000000, 0, -69), (Tag3 (Tag1 ((Tag2 ("Misc")), "alerts"), 0, (0)), 100000000, 0, -68), 0), 100000000, 0, -67), 0, (("parsing/builtin_attributes.mli", 40, 1754, 1754), ("parsing/builtin_attributes.mli", 40, 1754, 1810), 0), 0, Tag1 ("Builtin_attributes", 4)), 0); (("alerts_of_sig", 499), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature"), 0, (0)), 100000000, 0, -66), (Tag3 (Tag1 ((Tag2 ("Misc")), "alerts"), 0, (0)), 100000000, 0, -65), 0), 100000000, 0, -64), 0, (("parsing/builtin_attributes.mli", 41, 1811, 1811), ("parsing/builtin_attributes.mli", 41, 1811, 1864), 0), 0, Tag1 ("Builtin_attributes", 5)), 0); (("alerts_of_str", 500), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure"), 0, (0)), 100000000, 0, -63), (Tag3 (Tag1 ((Tag2 ("Misc")), "alerts"), 0, (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("parsing/builtin_attributes.mli", 42, 1865, 1865), ("parsing/builtin_attributes.mli", 42, 1865, 1918), 0), 0, Tag1 ("Builtin_attributes", 6)), 0); (("check_deprecated_mutable", 501), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Location")), "t"), 0, (0)), 100000000, 0, -60), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attributes"), 0, (0)), 100000000, 0, -59), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -58), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0), 100000000, 0, -55), 0), 100000000, 0, -54), 0, (("parsing/builtin_attributes.mli", 44, 1920, 1920), ("parsing/builtin_attributes.mli", 45, 1950, 2006), 0), 0, Tag1 ("Builtin_attributes", 7)), 0); (("check_deprecated_mutable_inclusion", 502), ((Tag1 (("def"), (Tag3 (Tag1 ((Tag2 ("Location")), "t"), 0, (0)), 100000000, 0, -53), (Tag1 (("use"), (Tag3 (Tag1 ((Tag2 ("Location")), "t"), 0, (0)), 100000000, 0, -52), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Location")), "t"), 0, (0)), 100000000, 0, -51), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attributes"), 0, (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attributes"), 0, (0)), 100000000, 0, -49), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -48), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -47), 0), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("parsing/builtin_attributes.mli", 46, 2007, 2007), ("parsing/builtin_attributes.mli", 48, 2123, 2163), 0), 0, Tag1 ("Builtin_attributes", 8)), 0); (("check_no_alert", 503), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attributes"), 0, (0)), 100000000, 0, -40), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("parsing/builtin_attributes.mli", 50, 2165, 2165), ("parsing/builtin_attributes.mli", 50, 2165, 2213), 0), 0, Tag1 ("Builtin_attributes", 9)), 0); (("error_of_extension", 504), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "extension"), 0, (0)), 100000000, 0, -37), (Tag3 (Tag1 ((Tag2 ("Location")), "error"), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("parsing/builtin_attributes.mli", 52, 2215, 2215), ("parsing/builtin_attributes.mli", 52, 2215, 2276), 0), 0, Tag1 ("Builtin_attributes", 10)), 0); (("warning_attribute", 505), ((Tag1 (Tag1 ("ppwarning"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -34)], (0)), 100000000, 0, -33), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attribute"), 0, (0)), 100000000, 0, -32), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("parsing/builtin_attributes.mli", 54, 2278, 2278), ("parsing/builtin_attributes.mli", 54, 2278, 2347), 0), 0, Tag1 ("Builtin_attributes", 11)), 0); (("warning_scope", 506), ((Tag1 (Tag1 ("ppwarning"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -28)], (0)), 100000000, 0, -27), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attributes"), 0, (0)), 100000000, 0, -26), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -25), ((("a")), 100000000, 0, -23), 0), 100000000, 0, -24), ((("a")), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("parsing/builtin_attributes.mli", 63, 2622, 2622), ("parsing/builtin_attributes.mli", 65, 2662, 2706), 0), 0, Tag1 ("Builtin_attributes", 12)), 0); (("warn_on_literal_pattern", 507), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attributes"), 0, (0)), 100000000, 0, -19), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("parsing/builtin_attributes.mli", 76, 3090, 3090), ("parsing/builtin_attributes.mli", 76, 3090, 3147), 0), 0, Tag1 ("Builtin_attributes", 13)), 0); (("explicit_arity", 508), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attributes"), 0, (0)), 100000000, 0, -16), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("parsing/builtin_attributes.mli", 77, 3148, 3148), ("parsing/builtin_attributes.mli", 77, 3148, 3196), 0), 0, Tag1 ("Builtin_attributes", 14)), 0); (("immediate", 509), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attributes"), 0, (0)), 100000000, 0, -13), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("parsing/builtin_attributes.mli", 80, 3199, 3199), ("parsing/builtin_attributes.mli", 80, 3199, 3242), 0), 0, Tag1 ("Builtin_attributes", 15)), 0); (("immediate64", 510), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attributes"), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("parsing/builtin_attributes.mli", 81, 3243, 3243), ("parsing/builtin_attributes.mli", 81, 3243, 3288), 0), 0, Tag1 ("Builtin_attributes", 16)), 0); (("has_unboxed", 511), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attributes"), 0, (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("parsing/builtin_attributes.mli", 83, 3290, 3290), ("parsing/builtin_attributes.mli", 83, 3290, 3335), 0), 0, Tag1 ("Builtin_attributes", 17)), 0); (("has_boxed", 512), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "attributes"), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("parsing/builtin_attributes.mli", 84, 3336, 3336), ("parsing/builtin_attributes.mli", 84, 3336, 3379), 0), 0, Tag1 ("Builtin_attributes", 18)), 0)], "Builtin_attributes", [("Builtin_attributes", ("\028\198\195\204\253\141\188\129\238\011\229\030\026\005\161!")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216"))], [(0)])
val has_boxed : Parsetree.attributes -> bool
