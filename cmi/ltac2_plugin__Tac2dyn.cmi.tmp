module Arg :
  sig
    type ('a, 'b) tag
    val create : string -> ('a, 'b) tag
    val eq :
      ('a1, 'b1) tag ->
      ('a2, 'b2) tag -> ('a1 * 'b1, 'a2 * 'b2) CSig.eq option
    val repr : ('a, 'b) tag -> string
    type glb = Glb : ('b, 'a) tag * 'a -> glb
  end
module type Param = sig type ('raw, 'glb) t end
module ArgMap :
  functor (M : Param) ->
    sig
      type _ pack = Pack : ('raw, 'glb) M.t -> ('raw * 'glb) pack
      type t
      val empty : t
      val add : ('a, 'b) Arg.tag -> ('a * 'b) pack -> t -> t
      val remove : ('a, 'b) Arg.tag -> t -> t
      val find : ('a, 'b) Arg.tag -> t -> ('a * 'b) pack
      val mem : ('a, 'b) Arg.tag -> t -> bool
    end("DEBUG:rule", [Tag3 (("Arg", 333), 0, (Tag1 ([Tag1 (("tag", 338), ([((("a")), 100000000, 0, -28); ((("b")), 100000000, 0, -29)], 2, 0, 1, 0, [7; 7], [2; 2], 0, 0, (("plugins/ltac2/tac2dyn.mli", 15, 730, 732), ("plugins/ltac2/tac2dyn.mli", 15, 730, 749), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2dyn", 0)), 1, 0); (("create", 339), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -27), (Tag3 ((("tag", 338)), [((("a")), 100000000, 0, -25); ((("b")), 100000000, 0, -26)], (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("plugins/ltac2/tac2dyn.mli", 16, 750, 752), ("plugins/ltac2/tac2dyn.mli", 16, 750, 787), 0), 0, Tag1 ("Ltac2_plugin__Tac2dyn", 1)), 0); (("eq", 340), ((Tag1 (0, (Tag3 ((("tag", 338)), [((("a1")), 100000000, 0, -16); ((("b1")), 100000000, 0, -17)], (0)), 100000000, 0, -22), (Tag1 (0, (Tag3 ((("tag", 338)), [((("a2")), 100000000, 0, -19); ((("b2")), 100000000, 0, -20)], (0)), 100000000, 0, -21), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("CSig")), "eq"), [(Tag2 ([((("a1")), 100000000, 0, -16); ((("b1")), 100000000, 0, -17)]), 100000000, 0, -15); (Tag2 ([((("a2")), 100000000, 0, -19); ((("b2")), 100000000, 0, -20)]), 100000000, 0, -18)], (0)), 100000000, 0, -14)], (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("plugins/ltac2/tac2dyn.mli", 17, 788, 790), ("plugins/ltac2/tac2dyn.mli", 17, 788, 872), 0), 0, Tag1 ("Ltac2_plugin__Tac2dyn", 2)), 0); (("repr", 341), ((Tag1 (0, (Tag3 ((("tag", 338)), [((("a")), 100000000, 0, -9); ((("b")), 100000000, 0, -10)], (0)), 100000000, 0, -8), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7), 0), 100000000, 0, -6), 0, (("plugins/ltac2/tac2dyn.mli", 18, 873, 875), ("plugins/ltac2/tac2dyn.mli", 18, 873, 908), 0), 0, Tag1 ("Ltac2_plugin__Tac2dyn", 3)), 0); Tag1 (("glb", 342), (0, 0, Tag1 ([(("Glb", 298), ([(Tag3 ((("tag", 338)), [((0), 100000000, 0, -4); ((("a")), 100000000, 0, -5)], (0)), 100000000, 0, -3); ((("a")), 100000000, 0, -5)]), ((Tag3 ((("glb", 342)), 0, (0)), 100000000, 0, -2)), (("plugins/ltac2/tac2dyn.mli", 19, 909, 922), ("plugins/ltac2/tac2dyn.mli", 19, 909, 951), 0), 0, Tag1 ("Ltac2_plugin__Tac2dyn", 5))], 0), 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2dyn.mli", 19, 909, 911), ("plugins/ltac2/tac2dyn.mli", 19, 909, 951), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2dyn", 4)), 1, 0)]), 0, (("plugins/ltac2/tac2dyn.mli", 13, 713, 713), ("plugins/ltac2/tac2dyn.mli", 20, 952, 955), 0), Tag1 ("Ltac2_plugin__Tac2dyn", 6)), 0, 0); Tag4 (("Param", 334), ((Tag1 ([Tag1 (("t", 343), ([((("raw")), 100000000, 0, -30); ((("glb")), 100000000, 0, -31)], 2, 0, 1, 0, [7; 7], [2; 2], 0, 0, (("plugins/ltac2/tac2dyn.mli", 23, 999, 1023), ("plugins/ltac2/tac2dyn.mli", 23, 999, 1042), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2dyn", 7)), 1, 0)])), 0, (("plugins/ltac2/tac2dyn.mli", 23, 999, 999), ("plugins/ltac2/tac2dyn.mli", 23, 999, 1046), 0), Tag1 ("Ltac2_plugin__Tac2dyn", 8)), 0); Tag3 (("ArgMap", 335), 0, (Tag2 (((("M", 337)), ((("Param", 334)))), Tag1 ([Tag1 (("pack", 344), ([((("_")), 100000000, 0, -70)], 1, Tag1 ([(("Pack", 304), ([(Tag3 (Tag1 ((("M", 337)), "t"), [((("raw")), 100000000, 0, -67); ((("glb")), 100000000, 0, -68)], (0)), 100000000, 0, -69)]), ((Tag3 ((("pack", 344)), [(Tag2 ([((("raw")), 100000000, 0, -67); ((("glb")), 100000000, 0, -68)]), 100000000, 0, -66)], (0)), 100000000, 0, -65)), (("plugins/ltac2/tac2dyn.mli", 27, 1080, 1096), ("plugins/ltac2/tac2dyn.mli", 27, 1080, 1141), 0), 0, Tag1 ("Ltac2_plugin__Tac2dyn", 11))], 0), 1, 0, [63], [0], 0, 0, (("plugins/ltac2/tac2dyn.mli", 27, 1080, 1082), ("plugins/ltac2/tac2dyn.mli", 27, 1080, 1141), 0), 0, 0, 1, Tag1 ("Ltac2_plugin__Tac2dyn", 10)), 1, 0); Tag1 (("t", 345), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2dyn.mli", 28, 1142, 1144), ("plugins/ltac2/tac2dyn.mli", 28, 1142, 1150), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2dyn", 12)), 1, 0); (("empty", 346), ((Tag3 ((("t", 345)), 0, (0)), 100000000, 0, -64), 0, (("plugins/ltac2/tac2dyn.mli", 29, 1151, 1153), ("plugins/ltac2/tac2dyn.mli", 29, 1151, 1166), 0), 0, Tag1 ("Ltac2_plugin__Tac2dyn", 13)), 0); (("add", 347), ((Tag1 (0, (Tag3 (Tag1 ((("Arg", 333)), "tag"), [((("a")), 100000000, 0, -61); ((("b")), 100000000, 0, -62)], (0)), 100000000, 0, -63), (Tag1 (0, (Tag3 ((("pack", 344)), [(Tag2 ([((("a")), 100000000, 0, -61); ((("b")), 100000000, 0, -62)]), 100000000, 0, -60)], (0)), 100000000, 0, -59), (Tag1 (0, (Tag3 ((("t", 345)), 0, (0)), 100000000, 0, -58), (Tag3 ((("t", 345)), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0), 100000000, 0, -55), 0), 100000000, 0, -54), 0, (("plugins/ltac2/tac2dyn.mli", 30, 1167, 1169), ("plugins/ltac2/tac2dyn.mli", 30, 1167, 1223), 0), 0, Tag1 ("Ltac2_plugin__Tac2dyn", 14)), 0); (("remove", 348), ((Tag1 (0, (Tag3 (Tag1 ((("Arg", 333)), "tag"), [((("a")), 100000000, 0, -52); ((("b")), 100000000, 0, -53)], (0)), 100000000, 0, -51), (Tag1 (0, (Tag3 ((("t", 345)), 0, (0)), 100000000, 0, -50), (Tag3 ((("t", 345)), 0, (0)), 100000000, 0, -49), 0), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("plugins/ltac2/tac2dyn.mli", 31, 1224, 1226), ("plugins/ltac2/tac2dyn.mli", 31, 1224, 1265), 0), 0, Tag1 ("Ltac2_plugin__Tac2dyn", 15)), 0); (("find", 349), ((Tag1 (0, (Tag3 (Tag1 ((("Arg", 333)), "tag"), [((("a")), 100000000, 0, -43); ((("b")), 100000000, 0, -44)], (0)), 100000000, 0, -46), (Tag1 (0, (Tag3 ((("t", 345)), 0, (0)), 100000000, 0, -45), (Tag3 ((("pack", 344)), [(Tag2 ([((("a")), 100000000, 0, -43); ((("b")), 100000000, 0, -44)]), 100000000, 0, -42)], (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("plugins/ltac2/tac2dyn.mli", 32, 1266, 1268), ("plugins/ltac2/tac2dyn.mli", 32, 1266, 1318), 0), 0, Tag1 ("Ltac2_plugin__Tac2dyn", 16)), 0); (("mem", 350), ((Tag1 (0, (Tag3 (Tag1 ((("Arg", 333)), "tag"), [((("a")), 100000000, 0, -37); ((("b")), 100000000, 0, -38)], (0)), 100000000, 0, -36), (Tag1 (0, (Tag3 ((("t", 345)), 0, (0)), 100000000, 0, -35), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -34), 0), 100000000, 0, -33), 0), 100000000, 0, -32), 0, (("plugins/ltac2/tac2dyn.mli", 33, 1319, 1321), ("plugins/ltac2/tac2dyn.mli", 33, 1319, 1360), 0), 0, Tag1 ("Ltac2_plugin__Tac2dyn", 17)), 0)])), 0, (("plugins/ltac2/tac2dyn.mli", 25, 1048, 1048), ("plugins/ltac2/tac2dyn.mli", 34, 1361, 1364), 0), Tag1 ("Ltac2_plugin__Tac2dyn", 18)), 0, 0); Tag3 (("Val", 336), 0, ((Tag1 ((Tag2 ("Dyn")), "S")), 0, (("plugins/ltac2/tac2dyn.mli", 36, 1366, 1366), ("plugins/ltac2/tac2dyn.mli", 36, 1366, 1384), 0), Tag1 ("Ltac2_plugin__Tac2dyn", 19)), 0, 0)], "Ltac2_plugin__Tac2dyn", [("Ltac2_plugin__Tac2dyn", ("\003M~\173\240\228^\184[\135\224\206\1576\163 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Ltac2_plugin", ("\165R\230\016\178\131\154\196w\014@m\191\218\194\020")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t"))], [(0)])

module Val : Dyn.S
