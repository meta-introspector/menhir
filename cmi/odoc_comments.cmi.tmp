val simple_blank : string
module type Texter = sig val text_of_string : string -> Odoc_types.text end
module Basic_info_retriever :
  sig
    val blank_line_outside_simple : string -> string -> bool
    val all_special : string -> string -> int * Odoc_types.info list
    val just_after_special : string -> string -> int * Odoc_types.info option
    val first_special : string -> string -> int * Odoc_types.info option
    val get_comments :
      (Odoc_types.text -> 'a) ->
      string -> string -> Odoc_types.info option * 'a list
  end
val info_of_string : string -> Odoc_types.info
val info_of_comment_file :
  ("DEBUG:rule", [(("simple_blank", 355), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11), 0, (("odoc_comments.mli", 18, 1109, 1109), ("odoc_comments.mli", 18, 1109, 1134), 0), 0, Tag1 ("Odoc_comments", 0)), 0); Tag4 (("Texter", 356), ((Tag1 ([(("text_of_string", 360), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -14), (Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("odoc_comments.mli", 24, 1270, 1274), ("odoc_comments.mli", 24, 1270, 1320), 0), 0, Tag1 ("Odoc_comments", 1)), 0)])), 0, (("odoc_comments.mli", 21, 1193, 1193), ("odoc_comments.mli", 25, 1321, 1326), 0), Tag1 ("Odoc_comments", 2)), 0); Tag3 (("Basic_info_retriever", 357), 0, (Tag1 ([(("blank_line_outside_simple", 361), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -55), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -54), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("odoc_comments.mli", 31, 1484, 1488), ("odoc_comments.mli", 32, 1520, 1552), 0), 0, Tag1 ("Odoc_comments", 3)), 0); (("all_special", 362), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -49), (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -46); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -48)], (0)), 100000000, 0, -47)]), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("odoc_comments.mli", 35, 1635, 1639), ("odoc_comments.mli", 35, 1635, 1703), 0), 0, Tag1 ("Odoc_comments", 4)), 0); (("just_after_special", 363), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -42), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -41), (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -38); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -40)], (0)), 100000000, 0, -39)]), 100000000, 0, -37), 0), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("odoc_comments.mli", 41, 2003, 2007), ("odoc_comments.mli", 42, 2032, 2088), 0), 0, Tag1 ("Odoc_comments", 5)), 0); (("first_special", 364), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -34), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -33), (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -30); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -32)], (0)), 100000000, 0, -31)]), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("odoc_comments.mli", 48, 2352, 2356), ("odoc_comments.mli", 49, 2376, 2432), 0), 0, Tag1 ("Odoc_comments", 6)), 0); (("get_comments", 365), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -26), ((("a")), 100000000, 0, -22), 0), 100000000, 0, -25), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -24), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -23), (Tag2 ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -20)], (0)), 100000000, 0, -19); (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -22)], (0)), 100000000, 0, -21)]), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("odoc_comments.mli", 55, 2741, 2745), ("odoc_comments.mli", 57, 2799, 2861), 0), 0, Tag1 ("Odoc_comments", 7)), 0)]), 0, (("odoc_comments.mli", 28, 1382, 1382), ("odoc_comments.mli", 59, 2863, 2868), 0), Tag1 ("Odoc_comments", 8)), 0, 0); (("info_of_string", 358), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10), (Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("odoc_comments.mli", 66, 3079, 3079), ("odoc_comments.mli", 66, 3079, 3125), 0), 0, Tag1 ("Odoc_comments", 9)), 0); (("info_of_comment_file", 359), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Odoc_module")), "t_module"), 0, (0)), 100000000, 0, -7)], (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5), (Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("odoc_comments.mli", 75, 3456, 3456), ("odoc_comments.mli", 76, 3483, 3541), 0), 0, Tag1 ("Odoc_comments", 10)), 0)], "Odoc_comments", [("Odoc_comments", ("\185\012{\224\168\245PI\1587:i\016\011\021\172")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Odoc_value", ("[\228\023\254\173\230\165o\154\026\024\245\180\229\015;")); ("Odoc_types", ("<k{\137\201\170z%E\221\170\147\151\127\189\015")); ("Odoc_type", ("\236\128j}\240\188\1487q\214\192oj\158\133\170")); ("Odoc_parameter", ("\194t\209\014\154<\178\\\138k\221\183w\133L\167")); ("Odoc_name", ("\248'\1872Z\r\160\146\012'\180V\240\1577f")); ("Odoc_module", ("\0308Mi\132b\017\187 \129\239\006Z#b\225")); ("Odoc_extension", ("HQjI\247\201\206b\193\166\171\167!I\191\198")); ("Odoc_exception", ("\229\177~\170m:\200\2180e\002\1504\rj\160")); ("Odoc_class", ("uO\148\216(=\149\159\134h\191\t\168o\245Q")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216"))], [(0)])
Odoc_module.t_module list -> string -> Odoc_types.info
