val max_length : Uint63.t
type 'a t
val length : 'a t -> Uint63.t
val length_int : 'a t -> int
val get : 'a t -> Uint63.t -> 'a
val set : 'a t -> Uint63.t -> 'a -> 'a t
val default : 'a t -> 'a
val make : Uint63.t -> 'a -> 'a t
val init : Uint63.t -> (int -> 'a) -> 'a -> 'a t
val copy : 'a t -> 'a t
val map : ('a -> 'b) -> 'a t -> 'b t
val to_array : 'a t -> 'a array * 'a
val of_array : 'a array -> 'a -> 'a t
val unsafe_of_obj : Obj.t -> 'a -> 'a t
val fold_left : ('a -> 'b -> 'a) -> 'a -> 'b t -> 'a
("DEBUG:rule", [(("max_length", 373), ((Tag3 (Tag1 ((Tag2 ("Uint63")), "t"), 0, (0)), 100000000, 0, -85), 0, (("kernel/parray.mli", 11, 676, 676), ("kernel/parray.mli", 11, 676, 701), 0), 0, Tag1 ("Parray", 0)), 0); Tag1 (("t", 374), ([((("a")), 100000000, 0, -84)], 1, 0, 1, 0, [7], [2], 0, 0, (("kernel/parray.mli", 13, 703, 703), ("kernel/parray.mli", 13, 703, 712), 0), 0, 0, 0, Tag1 ("Parray", 1)), 1, 0); (("length", 375), ((Tag1 (0, (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -83)], (0)), 100000000, 0, -82), (Tag3 (Tag1 ((Tag2 ("Uint63")), "t"), 0, (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0, (("kernel/parray.mli", 14, 713, 713), ("kernel/parray.mli", 14, 713, 743), 0), 0, Tag1 ("Parray", 2)), 0); (("length_int", 376), ((Tag1 (0, (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -79)], (0)), 100000000, 0, -78), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0, (("kernel/parray.mli", 15, 744, 744), ("kernel/parray.mli", 15, 744, 772), 0), 0, Tag1 ("Parray", 3)), 0); (("get", 377), ((Tag1 (0, (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -73)], (0)), 100000000, 0, -75), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Uint63")), "t"), 0, (0)), 100000000, 0, -74), ((("a")), 100000000, 0, -73), 0), 100000000, 0, -72), 0), 100000000, 0, -71), 0, (("kernel/parray.mli", 16, 773, 773), ("kernel/parray.mli", 16, 773, 809), 0), 0, Tag1 ("Parray", 4)), 0); (("set", 378), ((Tag1 (0, (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -68)], (0)), 100000000, 0, -70), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Uint63")), "t"), 0, (0)), 100000000, 0, -69), (Tag1 (0, ((("a")), 100000000, 0, -68), (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -68)], (0)), 100000000, 0, -67), 0), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0, (("kernel/parray.mli", 17, 810, 810), ("kernel/parray.mli", 17, 810, 854), 0), 0, Tag1 ("Parray", 5)), 0); (("default", 379), ((Tag1 (0, (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -62)], (0)), 100000000, 0, -63), ((("a")), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("kernel/parray.mli", 18, 855, 855), ("kernel/parray.mli", 18, 855, 879), 0), 0, Tag1 ("Parray", 6)), 0); (("make", 380), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Uint63")), "t"), 0, (0)), 100000000, 0, -60), (Tag1 (0, ((("a")), 100000000, 0, -59), (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -59)], (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("kernel/parray.mli", 19, 880, 880), ("kernel/parray.mli", 19, 880, 916), 0), 0, Tag1 ("Parray", 7)), 0); (("init", 381), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Uint63")), "t"), 0, (0)), 100000000, 0, -55), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -54), ((("a")), 100000000, 0, -52), 0), 100000000, 0, -53), (Tag1 (0, ((("a")), 100000000, 0, -52), (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -52)], (0)), 100000000, 0, -51), 0), 100000000, 0, -50), 0), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("kernel/parray.mli", 20, 917, 917), ("kernel/parray.mli", 20, 917, 968), 0), 0, Tag1 ("Parray", 8)), 0); (("copy", 382), ((Tag1 (0, (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -46)], (0)), 100000000, 0, -47), (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -46)], (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("kernel/parray.mli", 21, 969, 969), ("kernel/parray.mli", 21, 969, 995), 0), 0, Tag1 ("Parray", 9)), 0); (("map", 383), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -42), ((("b")), 100000000, 0, -40), 0), 100000000, 0, -43), (Tag1 (0, (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -42)], (0)), 100000000, 0, -41), (Tag3 ((("t", 374)), [((("b")), 100000000, 0, -40)], (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0), 100000000, 0, -37), 0, (("kernel/parray.mli", 23, 997, 997), ("kernel/parray.mli", 23, 997, 1033), 0), 0, Tag1 ("Parray", 10)), 0); (("to_array", 384), ((Tag1 (0, (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -35)], (0)), 100000000, 0, -36), (Tag2 ([(Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -35)], (0)), 100000000, 0, -34); ((("a")), 100000000, 0, -35)]), 100000000, 0, -33), 0), 100000000, 0, -32), 0, (("kernel/parray.mli", 25, 1035, 1035), ("kernel/parray.mli", 25, 1035, 1071), 0), 0, Tag1 ("Parray", 11)), 0); (("of_array", 385), ((Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -30)], (0)), 100000000, 0, -31), (Tag1 (0, ((("a")), 100000000, 0, -30), (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -30)], (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("kernel/parray.mli", 28, 1136, 1136), ("kernel/parray.mli", 28, 1136, 1187), 0), 0, Tag1 ("Parray", 12)), 0); (("unsafe_of_obj", 386), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Obj"), "t"), 0, (0)), 100000000, 0, -26), (Tag1 (0, ((("a")), 100000000, 0, -25), (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -25)], (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("kernel/parray.mli", 30, 1189, 1189), ("kernel/parray.mli", 30, 1189, 1228), 0), 0, Tag1 ("Parray", 13)), 0); (("fold_left", 387), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -17), (Tag1 (0, ((("b")), 100000000, 0, -19), ((("a")), 100000000, 0, -17), 0), 100000000, 0, -21), 0), 100000000, 0, -20), (Tag1 (0, ((("a")), 100000000, 0, -17), (Tag1 (0, (Tag3 ((("t", 374)), [((("b")), 100000000, 0, -19)], (0)), 100000000, 0, -18), ((("a")), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("kernel/parray.mli", 35, 1461, 1461), ("kernel/parray.mli", 35, 1461, 1513), 0), 0, Tag1 ("Parray", 14)), 0); (("fold_left2", 388), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -6), (Tag1 (0, ((("b")), 100000000, 0, -10), (Tag1 (0, ((("c")), 100000000, 0, -8), ((("a")), 100000000, 0, -6), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), (Tag1 (0, ((("a")), 100000000, 0, -6), (Tag1 (0, (Tag3 ((("t", 374)), [((("b")), 100000000, 0, -10)], (0)), 100000000, 0, -9), (Tag1 (0, (Tag3 ((("t", 374)), [((("c")), 100000000, 0, -8)], (0)), 100000000, 0, -7), ((("a")), 100000000, 0, -6), 0), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("kernel/parray.mli", 36, 1514, 1514), ("kernel/parray.mli", 36, 1514, 1581), 0), 0, Tag1 ("Parray", 15)), 0)], "Parray", [("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val fold_left2 : ('a -> 'b -> 'c -> 'a) -> 'a -> 'b t -> 'c t -> 'a
