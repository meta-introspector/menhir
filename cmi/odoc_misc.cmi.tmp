val no_blanks : string -> string
val input_file_as_string : string -> string
val split_with_blanks : string -> string list
val string_of_longident : Longident.t -> string
val string_of_text : Odoc_types.text -> string
val string_of_author_list : string list -> string
val string_of_version_opt : string option -> string
val string_of_since_opt : string option -> string
val string_of_raised_exceptions : (string * Odoc_types.text) list -> string
val string_of_see : Odoc_types.see_ref * Odoc_types.text -> string
val string_of_sees : (Odoc_types.see_ref * Odoc_types.text) list -> string
val string_of_return_opt : Odoc_types.text option -> string
val string_of_info : Odoc_types.info -> string
val apply_opt : ('a -> 'b) -> 'a option -> 'b option
val string_of_date : ?absolute:bool -> ?hour:bool -> float -> string
val current_date : string
val first_sentence_of_text : Odoc_types.text -> Odoc_types.text
val first_sentence_and_rest_of_text :
  Odoc_types.text -> Odoc_types.text * Odoc_types.text
val text_no_title_no_list : Odoc_types.text -> Odoc_types.text
val text_concat : Odoc_types.text -> Odoc_types.text list -> Odoc_types.text
val get_titles_in_text :
  Odoc_types.text -> (int * string option * Odoc_types.text) list
val create_index_lists : 'a list -> ('a -> string) -> 'a list list
val remove_duplicates : ('a -> 'a -> int) -> 'a list -> 'a list
val remove_ending_newline : string -> string
val search_string_backward : pat:string -> s:string -> int
val remove_option : Types.type_expr -> Types.type_expr
val is_optional : Asttypes.arg_label -> bool
("DEBUG:rule", [(("no_blanks", 440), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -128), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -127), 0), 100000000, 0, -126), 0, (("odoc_misc.mli", 21, 1215, 1215), ("odoc_misc.mli", 21, 1215, 1247), 0), 0, Tag1 ("Odoc_misc", 0)), 0); (("input_file_as_string", 441), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -125), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -124), 0), 100000000, 0, -123), 0, (("odoc_misc.mli", 24, 1311, 1311), ("odoc_misc.mli", 24, 1311, 1354), 0), 0, Tag1 ("Odoc_misc", 1)), 0); (("split_with_blanks", 442), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -122), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -121)], (0)), 100000000, 0, -120), 0), 100000000, 0, -119), 0, (("odoc_misc.mli", 27, 1434, 1434), ("odoc_misc.mli", 27, 1434, 1479), 0), 0, Tag1 ("Odoc_misc", 2)), 0); (("string_of_longident", 443), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Longident")), "t"), 0, (0)), 100000000, 0, -118), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -117), 0), 100000000, 0, -116), 0, (("odoc_misc.mli", 30, 1539, 1539), ("odoc_misc.mli", 30, 1539, 1586), 0), 0, Tag1 ("Odoc_misc", 3)), 0); (("string_of_text", 444), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -115), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -114), 0), 100000000, 0, -113), 0, (("odoc_misc.mli", 33, 1620, 1620), ("odoc_misc.mli", 33, 1620, 1666), 0), 0, Tag1 ("Odoc_misc", 4)), 0); (("string_of_author_list", 445), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -112)], (0)), 100000000, 0, -111), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -110), 0), 100000000, 0, -109), 0, (("odoc_misc.mli", 36, 1713, 1713), ("odoc_misc.mli", 36, 1713, 1762), 0), 0, Tag1 ("Odoc_misc", 5)), 0); (("string_of_version_opt", 446), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -108)], (0)), 100000000, 0, -107), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -106), 0), 100000000, 0, -105), 0, (("odoc_misc.mli", 39, 1831, 1831), ("odoc_misc.mli", 39, 1831, 1882), 0), 0, Tag1 ("Odoc_misc", 6)), 0); (("string_of_since_opt", 447), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -104)], (0)), 100000000, 0, -103), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -102), 0), 100000000, 0, -101), 0, (("odoc_misc.mli", 42, 1949, 1949), ("odoc_misc.mli", 42, 1949, 1998), 0), 0, Tag1 ("Odoc_misc", 7)), 0); (("string_of_raised_exceptions", 448), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -99); (Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -100)]), 100000000, 0, -98)], (0)), 100000000, 0, -97), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -96), 0), 100000000, 0, -95), 0, (("odoc_misc.mli", 45, 2064, 2064), ("odoc_misc.mli", 45, 2064, 2139), 0), 0, Tag1 ("Odoc_misc", 8)), 0); (("string_of_see", 449), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "see_ref"), 0, (0)), 100000000, 0, -93); (Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -94)]), 100000000, 0, -92), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -91), 0), 100000000, 0, -90), 0, (("odoc_misc.mli", 48, 2200, 2200), ("odoc_misc.mli", 48, 2200, 2266), 0), 0, Tag1 ("Odoc_misc", 9)), 0); (("string_of_sees", 450), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "see_ref"), 0, (0)), 100000000, 0, -88); (Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -89)]), 100000000, 0, -87)], (0)), 100000000, 0, -86), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -85), 0), 100000000, 0, -84), 0, (("odoc_misc.mli", 51, 2336, 2336), ("odoc_misc.mli", 51, 2336, 2410), 0), 0, Tag1 ("Odoc_misc", 10)), 0); (("string_of_return_opt", 451), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -83)], (0)), 100000000, 0, -82), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0, (("odoc_misc.mli", 54, 2478, 2478), ("odoc_misc.mli", 54, 2478, 2537), 0), 0, Tag1 ("Odoc_misc", 11)), 0); (("string_of_info", 452), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Odoc_types")), "info"), 0, (0)), 100000000, 0, -79), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -78), 0), 100000000, 0, -77), 0, (("odoc_misc.mli", 57, 2591, 2591), ("odoc_misc.mli", 57, 2591, 2637), 0), 0, Tag1 ("Odoc_misc", 12)), 0); (("apply_opt", 453), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -75), ((("b")), 100000000, 0, -73), 0), 100000000, 0, -76), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -75)], (0)), 100000000, 0, -74), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -73)], (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), 0, (("odoc_misc.mli", 60, 2685, 2685), ("odoc_misc.mli", 60, 2685, 2737), 0), 0, Tag1 ("Odoc_misc", 13)), 0); (("string_of_date", 454), ((Tag1 (Tag1 ("absolute"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -69)], (0)), 100000000, 0, -68), (Tag1 (Tag1 ("hour"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -67)], (0)), 100000000, 0, -66), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -65), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -64), 0), 100000000, 0, -63), 0), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("odoc_misc.mli", 64, 2860, 2860), ("odoc_misc.mli", 64, 2860, 2928), 0), 0, Tag1 ("Odoc_misc", 14)), 0); (("current_date", 455), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -60), 0, (("odoc_misc.mli", 69, 3088, 3088), ("odoc_misc.mli", 69, 3088, 3113), 0), 0, Tag1 ("Odoc_misc", 15)), 0); (("first_sentence_of_text", 456), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -59), (Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0, (("odoc_misc.mli", 74, 3278, 3278), ("odoc_misc.mli", 74, 3278, 3341), 0), 0, Tag1 ("Odoc_misc", 16)), 0); (("first_sentence_and_rest_of_text", 457), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -56), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -54); (Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -55)]), 100000000, 0, -53), 0), 100000000, 0, -52), 0, (("odoc_misc.mli", 80, 3539, 3539), ("odoc_misc.mli", 81, 3577, 3633), 0), 0, Tag1 ("Odoc_misc", 17)), 0); (("text_no_title_no_list", 458), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -51), (Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0, (("odoc_misc.mli", 84, 3693, 3693), ("odoc_misc.mli", 84, 3693, 3755), 0), 0, Tag1 ("Odoc_misc", 18)), 0); (("text_concat", 459), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -48), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -47)], (0)), 100000000, 0, -46), (Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("odoc_misc.mli", 88, 3854, 3854), ("odoc_misc.mli", 88, 3854, 3930), 0), 0, Tag1 ("Odoc_misc", 19)), 0); (("get_titles_in_text", 460), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -42), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -38); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -40)], (0)), 100000000, 0, -39); (Tag3 (Tag1 ((Tag2 ("Odoc_types")), "text"), 0, (0)), 100000000, 0, -41)]), 100000000, 0, -37)], (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("odoc_misc.mli", 92, 4036, 4036), ("odoc_misc.mli", 92, 4036, 4124), 0), 0, Tag1 ("Odoc_misc", 20)), 0); (("create_index_lists", 461), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -31)], (0)), 100000000, 0, -34), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -31), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -31)], (0)), 100000000, 0, -30)], (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("odoc_misc.mli", 99, 4441, 4441), ("odoc_misc.mli", 99, 4441, 4507), 0), 0, Tag1 ("Odoc_misc", 21)), 0); (("remove_duplicates", 462), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -22), (Tag1 (0, ((("a")), 100000000, 0, -22), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -22)], (0)), 100000000, 0, -23), (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -22)], (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("odoc_misc.mli", 103, 4651, 4651), ("odoc_misc.mli", 103, 4651, 4714), 0), 0, Tag1 ("Odoc_misc", 22)), 0); (("remove_ending_newline", 463), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -18), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("odoc_misc.mli", 106, 4798, 4798), ("odoc_misc.mli", 106, 4798, 4842), 0), 0, Tag1 ("Odoc_misc", 23)), 0); (("search_string_backward", 464), ((Tag1 (("pat"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -15), (Tag1 (("s"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -14), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("odoc_misc.mli", 110, 5008, 5008), ("odoc_misc.mli", 110, 5008, 5068), 0), 0, Tag1 ("Odoc_misc", 24)), 0); (("remove_option", 465), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -10), (Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("odoc_misc.mli", 115, 5233, 5233), ("odoc_misc.mli", 115, 5233, 5287), 0), 0, Tag1 ("Odoc_misc", 26)), 0); (("is_optional", 466), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "arg_label"), 0, (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("odoc_misc.mli", 118, 5341, 5341), ("odoc_misc.mli", 118, 5341, 5385), 0), 0, Tag1 ("Odoc_misc", 27)), 0); (("label_name", 467), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Asttypes")), "arg_label"), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("odoc_misc.mli", 122, 5482, 5482), ("odoc_misc.mli", 122, 5482, 5527), 0), 0, Tag1 ("Odoc_misc", 28)), 0)], "Odoc_misc", [("Odoc_misc", ("3\196\003W\136\235\197\160\149\149\252|\246\167\207l")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Odoc_types", ("<k{\137\201\170z%E\221\170\147\151\127\189\015")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216"))], [(0)])
val label_name : Asttypes.arg_label -> string
