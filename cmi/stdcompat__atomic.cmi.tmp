type 'a t = 'a Atomic.t
val make : 'a -> 'a t
val get : 'a t -> 'a
val set : 'a t -> 'a -> unit
val exchange : 'a t -> 'a -> 'a
val compare_and_set : 'a t -> 'a -> 'a -> bool
val fetch_and_add : int t -> int -> int
val incr : int t -> unit("DEBUG:rule", [Tag1 (("t", 306), ([((("a")), 100000000, 0, -38)], 1, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Atomic"), "t"), [((("a")), 100000000, 0, -38)], (0)), 100000000, 0, -37)), [15], [2], 0, 0, (("stdcompat__atomic_s.mli", 4, 22, 22), ("stdcompat__atomic_s.mli", 4, 22, 46), 0), 0, 0, 0, Tag1 ("Stdcompat__atomic_s", 0)), 1, 0); (("make", 307), ((Tag1 (0, ((("a")), 100000000, 0, -36), (Tag3 ((("t", 306)), [((("a")), 100000000, 0, -36)], (0)), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("stdcompat__atomic_s.mli", 17, 131, 131), ("stdcompat__atomic_s.mli", 17, 131, 152), 0), 0, Tag1 ("Stdcompat__atomic_s", 1)), 0); (("get", 308), ((Tag1 (0, (Tag3 ((("t", 306)), [((("a")), 100000000, 0, -32)], (0)), 100000000, 0, -33), ((("a")), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("stdcompat__atomic_s.mli", 20, 198, 198), ("stdcompat__atomic_s.mli", 20, 198, 218), 0), 0, Tag1 ("Stdcompat__atomic_s", 2)), 0); (("set", 309), ((Tag1 (0, (Tag3 ((("t", 306)), [((("a")), 100000000, 0, -29)], (0)), 100000000, 0, -30), (Tag1 (0, ((("a")), 100000000, 0, -29), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("stdcompat__atomic_s.mli", 23, 263, 263), ("stdcompat__atomic_s.mli", 23, 263, 291), 0), 0, Tag1 ("Stdcompat__atomic_s", 3)), 0); (("exchange", 310), ((Tag1 (0, (Tag3 ((("t", 306)), [((("a")), 100000000, 0, -24)], (0)), 100000000, 0, -25), (Tag1 (0, ((("a")), 100000000, 0, -24), ((("a")), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("stdcompat__atomic_s.mli", 26, 344, 344), ("stdcompat__atomic_s.mli", 26, 344, 375), 0), 0, Tag1 ("Stdcompat__atomic_s", 4)), 0); (("compare_and_set", 311), ((Tag1 (0, (Tag3 ((("t", 306)), [((("a")), 100000000, 0, -20)], (0)), 100000000, 0, -21), (Tag1 (0, ((("a")), 100000000, 0, -20), (Tag1 (0, ((("a")), 100000000, 0, -20), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("stdcompat__atomic_s.mli", 29, 431, 431), ("stdcompat__atomic_s.mli", 29, 431, 477), 0), 0, Tag1 ("Stdcompat__atomic_s", 5)), 0); (("fetch_and_add", 312), ((Tag1 (0, (Tag3 ((("t", 306)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -15)], (0)), 100000000, 0, -14), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -13), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("stdcompat__atomic_s.mli", 32, 548, 548), ("stdcompat__atomic_s.mli", 32, 548, 587), 0), 0, Tag1 ("Stdcompat__atomic_s", 6)), 0); (("incr", 313), ((Tag1 (0, (Tag3 ((("t", 306)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -9)], (0)), 100000000, 0, -8), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -7), 0), 100000000, 0, -6), 0, (("stdcompat__atomic_s.mli", 35, 651, 651), ("stdcompat__atomic_s.mli", 35, 651, 675), 0), 0, Tag1 ("Stdcompat__atomic_s", 7)), 0); (("decr", 314), ((Tag1 (0, (Tag3 ((("t", 306)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -5)], (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("stdcompat__atomic_s.mli", 38, 724, 724), ("stdcompat__atomic_s.mli", 38, 724, 748), 0), 0, Tag1 ("Stdcompat__atomic_s", 8)), 0)], "Stdcompat__atomic", [("Stdcompat__atomic", ("\169dsh\1981\239q`]b\020\214\246+\165")); ("Stdlib__Atomic", ("\158\012\200\246\020\229\240\217:\200\129\002\172@\142G")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stdcompat__atomic_s", ("tLnj\195\149\181`\210r\211\219h\213{\018")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val decr : int t -> unit
