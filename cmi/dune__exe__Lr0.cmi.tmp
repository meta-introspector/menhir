type node = int
val n : int
val entry : node Dune__exe.Grammar.ProductionMap.t
val items : node -> Dune__exe.Item.Set.t
val incoming_symbol : node -> Dune__exe.Grammar.Symbol.t option
val incoming_edges : node -> node list
val outgoing_edges : node -> node Dune__exe.Grammar.SymbolMap.t
val outgoing_symbols : node -> Dune__exe.Grammar.Symbol.t list
module ImperativeNodeMap :
  sig
    type key = node
    type 'data t
    val create : unit -> 'data t
    val add : key -> 'data -> 'data t -> unit
    val find : key -> 'data t -> 'data
  end
type lr1state
module Lr1StateAsOrderedType :
  sig type t = lr1state val compare : t -> t -> int end
type concretelr1state = Dune__exe.Grammar.TerminalSet.t Dune__exe.Item.Map.t
val export : lr1state -> concretelr1state
val closure : concretelr1state -> concretelr1state
val core : lr1state -> node
val start : node -> lr1state
val transitions : lr1state -> lr1state Dune__exe.Grammar.SymbolMap.t
val transition : Dune__exe.Grammar.Symbol.t -> lr1state -> lr1state
val transition_tokens :
  'target Dune__exe.Grammar.SymbolMap.t -> Dune__exe.Grammar.TerminalSet.t
val reductions :
  lr1state ->
  (Dune__exe.Grammar.TerminalSet.t * Dune__exe.Grammar.Production.index) list
val equal : lr1state -> lr1state -> bool
val subsume : lr1state -> lr1state -> bool
val compatible : lr1state -> lr1state -> bool
val eos_compatible : lr1state -> lr1state -> bool
val error_compatible : lr1state -> lr1state -> bool
val union : lr1state -> lr1state -> lr1state
val restrict : Dune__exe.Grammar.TerminalSet.t -> lr1state -> lr1state
val print_concrete : string -> concretelr1state -> string
val print : string -> lr1state -> string
val print_closure : string -> lr1state -> string
type reductions =
    Dune__exe.Grammar.Production.index list Dune__exe.Grammar.TerminalMap.t
val add_reduction :
  Dune__exe.Grammar.Production.index ->
  Dune__exe.Grammar.Terminal.t -> reductions -> reductions
val add_reductions :
  Dune__exe.Grammar.Production.index ->
  Dune__exe.Grammar.TerminalSet.t -> reductions -> reductions
val reductions_table : lr1state -> reductions
val invert :
  reductions ->
  Dune__exe.Grammar.TerminalSet.t Dune__exe.Grammar.ProductionMap.t
val reduction_tokens : reductions -> Dune__exe.Grammar.TerminalSet.t
val has_eos_conflict :
  'target Dune__exe.Grammar.SymbolMap.t -> reductions -> bool
("DEBUG:rule", [Tag1 (("node", 1095), (0, 0, 0, 1, ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -143)), 0, 0, 0, 0, (("src/lr0.mli", 25, 1354, 1354), ("src/lr0.mli", 26, 1366, 1373), 0), 0, 1, 0, Tag1 ("Dune__exe__Lr0", 0)), 1, 0); (("n", 1096), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -142), 0, (("src/lr0.mli", 30, 1434, 1434), ("src/lr0.mli", 30, 1434, 1444), 0), 0, Tag1 ("Dune__exe__Lr0", 1)), 0); (("entry", 1097), ((Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "ProductionMap"), "t"), [(Tag3 ((("node", 1095)), 0, (0)), 100000000, 0, -141)], (0)), 100000000, 0, -140), 0, (("src/lr0.mli", 34, 1527, 1527), ("src/lr0.mli", 34, 1527, 1558), 0), 0, Tag1 ("Dune__exe__Lr0", 2)), 0); (("items", 1098), ((Tag1 (0, (Tag3 ((("node", 1095)), 0, (0)), 100000000, 0, -139), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Item"), "Set"), "t"), 0, (0)), 100000000, 0, -138), 0), 100000000, 0, -137), 0, (("src/lr0.mli", 39, 1656, 1656), ("src/lr0.mli", 39, 1656, 1685), 0), 0, Tag1 ("Dune__exe__Lr0", 3)), 0); (("incoming_symbol", 1099), ((Tag1 (0, (Tag3 ((("node", 1095)), 0, (0)), 100000000, 0, -136), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Symbol"), "t"), 0, (0)), 100000000, 0, -135)], (0)), 100000000, 0, -134), 0), 100000000, 0, -133), 0, (("src/lr0.mli", 45, 1899, 1899), ("src/lr0.mli", 45, 1899, 1943), 0), 0, Tag1 ("Dune__exe__Lr0", 4)), 0); (("incoming_edges", 1100), ((Tag1 (0, (Tag3 ((("node", 1095)), 0, (0)), 100000000, 0, -132), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("node", 1095)), 0, (0)), 100000000, 0, -131)], (0)), 100000000, 0, -130), 0), 100000000, 0, -129), 0, (("src/lr0.mli", 46, 1944, 1944), ("src/lr0.mli", 46, 1944, 1981), 0), 0, Tag1 ("Dune__exe__Lr0", 5)), 0); (("outgoing_edges", 1101), ((Tag1 (0, (Tag3 ((("node", 1095)), 0, (0)), 100000000, 0, -128), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "SymbolMap"), "t"), [(Tag3 ((("node", 1095)), 0, (0)), 100000000, 0, -127)], (0)), 100000000, 0, -126), 0), 100000000, 0, -125), 0, (("src/lr0.mli", 50, 2020, 2020), ("src/lr0.mli", 50, 2020, 2064), 0), 0, Tag1 ("Dune__exe__Lr0", 6)), 0); (("outgoing_symbols", 1102), ((Tag1 (0, (Tag3 ((("node", 1095)), 0, (0)), 100000000, 0, -124), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Symbol"), "t"), 0, (0)), 100000000, 0, -123)], (0)), 100000000, 0, -122), 0), 100000000, 0, -121), 0, (("src/lr0.mli", 51, 2065, 2065), ("src/lr0.mli", 51, 2065, 2108), 0), 0, Tag1 ("Dune__exe__Lr0", 7)), 0); Tag3 (("ImperativeNodeMap", 1103), 0, (Tag1 ([Tag1 (("key", 1133), (0, 0, 0, 1, ((Tag3 ((("node", 1095)), 0, (0)), 100000000, 0, -161)), 0, 0, 0, 0, (("src/lr0.mli", 56, 2171, 2206), ("src/lr0.mli", 56, 2171, 2221), 0), 0, 1, 0, Tag1 ("Dune__exe__Lr0", 8)), 1, 0); Tag1 (("t", 1134), ([((("data")), 100000000, 0, -160)], 1, 0, 1, 0, [7], [2], 0, 0, (("fix/src/Sigs.ml", 71, 2534, 2536), ("fix/src/Sigs.ml", 71, 2534, 2548), 0), 0, 0, 0, Tag1 ("Vendored_fix__Sigs", 15)), 1, 0); (("create", 1135), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -159), (Tag3 ((("t", 1134)), [((("data")), 100000000, 0, -158)], (0)), 100000000, 0, -157), 0), 100000000, 0, -156), 0, (("fix/src/Sigs.ml", 72, 2549, 2551), ("fix/src/Sigs.ml", 72, 2549, 2578), 0), 0, Tag1 ("Vendored_fix__Sigs", 16)), 0); (("add", 1136), ((Tag1 (0, (Tag3 ((("key", 1133)), 0, (0)), 100000000, 0, -155), (Tag1 (0, ((("data")), 100000000, 0, -154), (Tag1 (0, (Tag3 ((("t", 1134)), [((("data")), 100000000, 0, -154)], (0)), 100000000, 0, -153), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -152), 0), 100000000, 0, -151), 0), 100000000, 0, -150), 0), 100000000, 0, -149), 0, (("fix/src/Sigs.ml", 73, 2579, 2581), ("fix/src/Sigs.ml", 73, 2579, 2621), 0), 0, Tag1 ("Vendored_fix__Sigs", 17)), 0); (("find", 1137), ((Tag1 (0, (Tag3 ((("key", 1133)), 0, (0)), 100000000, 0, -148), (Tag1 (0, (Tag3 ((("t", 1134)), [((("data")), 100000000, 0, -146)], (0)), 100000000, 0, -147), ((("data")), 100000000, 0, -146), 0), 100000000, 0, -145), 0), 100000000, 0, -144), 0, (("fix/src/Sigs.ml", 74, 2622, 2624), ("fix/src/Sigs.ml", 74, 2622, 2657), 0), 0, Tag1 ("Vendored_fix__Sigs", 18)), 0)]), 0, (("src/lr0.mli", 55, 2144, 2144), ("src/lr0.mli", 56, 2171, 2221), 0), Tag1 ("Dune__exe__Lr0", 9)), 0, 0); Tag1 (("lr1state", 1104), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/lr0.mli", 65, 2520, 2520), ("src/lr0.mli", 65, 2520, 2533), 0), 0, 0, 0, Tag1 ("Dune__exe__Lr0", 10)), 1, 0); Tag3 (("Lr1StateAsOrderedType", 1105), 0, (Tag1 ([Tag1 (("t", 1138), (0, 0, 0, 1, ((Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -167)), 0, 0, 0, 0, (("src/lr0.mli", 70, 2627, 2629), ("src/lr0.mli", 70, 2627, 2646), 0), 0, 0, 0, Tag1 ("Dune__exe__Lr0", 11)), 1, 0); (("compare", 1139), ((Tag1 (0, (Tag3 ((("t", 1138)), 0, (0)), 100000000, 0, -166), (Tag1 (0, (Tag3 ((("t", 1138)), 0, (0)), 100000000, 0, -165), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -164), 0), 100000000, 0, -163), 0), 100000000, 0, -162), 0, (("src/lr0.mli", 71, 2647, 2649), ("src/lr0.mli", 71, 2647, 2675), 0), 0, Tag1 ("Dune__exe__Lr0", 12)), 0)]), 0, (("src/lr0.mli", 69, 2592, 2592), ("src/lr0.mli", 72, 2676, 2679), 0), Tag1 ("Dune__exe__Lr0", 13)), 0, 0); Tag1 (("concretelr1state", 1106), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Item"), "Map"), "t"), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "TerminalSet"), "t"), 0, (0)), 100000000, 0, -120)], (0)), 100000000, 0, -119)), 0, 0, 0, 0, (("src/lr0.mli", 77, 2816, 2816), ("src/lr0.mli", 78, 2840, 2868), 0), 0, 0, 0, Tag1 ("Dune__exe__Lr0", 14)), 1, 0); (("export", 1107), ((Tag1 (0, (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -118), (Tag3 ((("concretelr1state", 1106)), 0, (0)), 100000000, 0, -117), 0), 100000000, 0, -116), 0, (("src/lr0.mli", 80, 2870, 2870), ("src/lr0.mli", 80, 2870, 2910), 0), 0, Tag1 ("Dune__exe__Lr0", 15)), 0); (("closure", 1108), ((Tag1 (0, (Tag3 ((("concretelr1state", 1106)), 0, (0)), 100000000, 0, -115), (Tag3 ((("concretelr1state", 1106)), 0, (0)), 100000000, 0, -114), 0), 100000000, 0, -113), 0, (("src/lr0.mli", 84, 2971, 2971), ("src/lr0.mli", 84, 2971, 3020), 0), 0, Tag1 ("Dune__exe__Lr0", 16)), 0); (("core", 1109), ((Tag1 (0, (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -112), (Tag3 ((("node", 1095)), 0, (0)), 100000000, 0, -111), 0), 100000000, 0, -110), 0, (("src/lr0.mli", 88, 3087, 3087), ("src/lr0.mli", 88, 3087, 3113), 0), 0, Tag1 ("Dune__exe__Lr0", 17)), 0); (("start", 1110), ((Tag1 (0, (Tag3 ((("node", 1095)), 0, (0)), 100000000, 0, -109), (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -108), 0), 100000000, 0, -107), 0, (("src/lr0.mli", 93, 3189, 3189), ("src/lr0.mli", 93, 3189, 3216), 0), 0, Tag1 ("Dune__exe__Lr0", 18)), 0); (("transitions", 1111), ((Tag1 (0, (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -106), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "SymbolMap"), "t"), [(Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -105)], (0)), 100000000, 0, -104), 0), 100000000, 0, -103), 0, (("src/lr0.mli", 97, 3271, 3271), ("src/lr0.mli", 97, 3271, 3320), 0), 0, Tag1 ("Dune__exe__Lr0", 19)), 0); (("transition", 1112), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Symbol"), "t"), 0, (0)), 100000000, 0, -102), (Tag1 (0, (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -101), (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -100), 0), 100000000, 0, -99), 0), 100000000, 0, -98), 0, (("src/lr0.mli", 98, 3321, 3321), ("src/lr0.mli", 98, 3321, 3369), 0), 0, Tag1 ("Dune__exe__Lr0", 20)), 0); (("transition_tokens", 1113), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "SymbolMap"), "t"), [((("target")), 100000000, 0, -97)], (0)), 100000000, 0, -96), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "TerminalSet"), "t"), 0, (0)), 100000000, 0, -95), 0), 100000000, 0, -94), 0, (("src/lr0.mli", 103, 3526, 3526), ("src/lr0.mli", 103, 3526, 3585), 0), 0, Tag1 ("Dune__exe__Lr0", 21)), 0); (("reductions", 1114), ((Tag1 (0, (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -93), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "TerminalSet"), "t"), 0, (0)), 100000000, 0, -91); (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Production"), "index"), 0, (0)), 100000000, 0, -92)]), 100000000, 0, -90)], (0)), 100000000, 0, -89), 0), 100000000, 0, -88), 0, (("src/lr0.mli", 109, 3686, 3686), ("src/lr0.mli", 109, 3686, 3753), 0), 0, Tag1 ("Dune__exe__Lr0", 22)), 0); (("equal", 1115), ((Tag1 (0, (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -87), (Tag1 (0, (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -86), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -85), 0), 100000000, 0, -84), 0), 100000000, 0, -83), 0, (("src/lr0.mli", 115, 3906, 3906), ("src/lr0.mli", 115, 3906, 3945), 0), 0, Tag1 ("Dune__exe__Lr0", 23)), 0); (("subsume", 1116), ((Tag1 (0, (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -82), (Tag1 (0, (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -81), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -80), 0), 100000000, 0, -79), 0), 100000000, 0, -78), 0, (("src/lr0.mli", 121, 4133, 4133), ("src/lr0.mli", 121, 4133, 4174), 0), 0, Tag1 ("Dune__exe__Lr0", 24)), 0); (("compatible", 1117), ((Tag1 (0, (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -77), (Tag1 (0, (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -76), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), 0), 100000000, 0, -73), 0, (("src/lr0.mli", 126, 4295, 4295), ("src/lr0.mli", 126, 4295, 4339), 0), 0, Tag1 ("Dune__exe__Lr0", 25)), 0); (("eos_compatible", 1118), ((Tag1 (0, (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -72), (Tag1 (0, (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -71), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("src/lr0.mli", 131, 4471, 4471), ("src/lr0.mli", 131, 4471, 4519), 0), 0, Tag1 ("Dune__exe__Lr0", 26)), 0); (("error_compatible", 1119), ((Tag1 (0, (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -67), (Tag1 (0, (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -66), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -65), 0), 100000000, 0, -64), 0), 100000000, 0, -63), 0, (("src/lr0.mli", 137, 4669, 4669), ("src/lr0.mli", 137, 4669, 4719), 0), 0, Tag1 ("Dune__exe__Lr0", 27)), 0); (("union", 1120), ((Tag1 (0, (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -62), (Tag1 (0, (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -61), (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -60), 0), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("src/lr0.mli", 145, 4944, 4944), ("src/lr0.mli", 145, 4944, 4987), 0), 0, Tag1 ("Dune__exe__Lr0", 28)), 0); (("restrict", 1121), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "TerminalSet"), "t"), 0, (0)), 100000000, 0, -57), (Tag1 (0, (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -56), (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("src/lr0.mli", 150, 5104, 5104), ("src/lr0.mli", 150, 5104, 5155), 0), 0, Tag1 ("Dune__exe__Lr0", 29)), 0); (("print_concrete", 1122), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -52), (Tag1 (0, (Tag3 ((("concretelr1state", 1106)), 0, (0)), 100000000, 0, -51), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("src/lr0.mli", 157, 5385, 5385), ("src/lr0.mli", 157, 5385, 5441), 0), 0, Tag1 ("Dune__exe__Lr0", 30)), 0); (("print", 1123), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -47), (Tag1 (0, (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -46), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("src/lr0.mli", 158, 5442, 5442), ("src/lr0.mli", 158, 5442, 5498), 0), 0, Tag1 ("Dune__exe__Lr0", 31)), 0); (("print_closure", 1124), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -42), (Tag1 (0, (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -41), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("src/lr0.mli", 159, 5499, 5499), ("src/lr0.mli", 159, 5499, 5555), 0), 0, Tag1 ("Dune__exe__Lr0", 32)), 0); Tag1 (("reductions", 1125), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "TerminalMap"), "t"), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Production"), "index"), 0, (0)), 100000000, 0, -37)], (0)), 100000000, 0, -36)], (0)), 100000000, 0, -35)), 0, 0, 0, 0, (("src/lr0.mli", 164, 5673, 5673), ("src/lr0.mli", 165, 5691, 5728), 0), 0, 0, 0, Tag1 ("Dune__exe__Lr0", 33)), 1, 0); (("add_reduction", 1126), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Production"), "index"), 0, (0)), 100000000, 0, -34), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Terminal"), "t"), 0, (0)), 100000000, 0, -33), (Tag1 (0, (Tag3 ((("reductions", 1125)), 0, (0)), 100000000, 0, -32), (Tag3 ((("reductions", 1125)), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("src/lr0.mli", 170, 5839, 5839), ("src/lr0.mli", 170, 5839, 5916), 0), 0, Tag1 ("Dune__exe__Lr0", 34)), 0); (("add_reductions", 1127), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Production"), "index"), 0, (0)), 100000000, 0, -27), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "TerminalSet"), "t"), 0, (0)), 100000000, 0, -26), (Tag1 (0, (Tag3 ((("reductions", 1125)), 0, (0)), 100000000, 0, -25), (Tag3 ((("reductions", 1125)), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("src/lr0.mli", 175, 6053, 6053), ("src/lr0.mli", 175, 6053, 6134), 0), 0, Tag1 ("Dune__exe__Lr0", 35)), 0); (("reductions_table", 1128), ((Tag1 (0, (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -20), (Tag3 ((("reductions", 1125)), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("src/lr0.mli", 179, 6181, 6181), ("src/lr0.mli", 179, 6181, 6225), 0), 0, Tag1 ("Dune__exe__Lr0", 36)), 0); (("invert", 1129), ((Tag1 (0, (Tag3 ((("reductions", 1125)), 0, (0)), 100000000, 0, -17), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "ProductionMap"), "t"), [(Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "TerminalSet"), "t"), 0, (0)), 100000000, 0, -16)], (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("src/lr0.mli", 184, 6382, 6382), ("src/lr0.mli", 184, 6382, 6438), 0), 0, Tag1 ("Dune__exe__Lr0", 37)), 0); (("reduction_tokens", 1130), ((Tag1 (0, (Tag3 ((("reductions", 1125)), 0, (0)), 100000000, 0, -13), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "TerminalSet"), "t"), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("src/lr0.mli", 189, 6564, 6564), ("src/lr0.mli", 189, 6564, 6613), 0), 0, Tag1 ("Dune__exe__Lr0", 38)), 0); (("has_eos_conflict", 1131), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "SymbolMap"), "t"), [((("target")), 100000000, 0, -10)], (0)), 100000000, 0, -9), (Tag1 (0, (Tag3 ((("reductions", 1125)), 0, (0)), 100000000, 0, -8), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("src/lr0.mli", 195, 6807, 6807), ("src/lr0.mli", 195, 6807, 6870), 0), 0, Tag1 ("Dune__exe__Lr0", 39)), 0); (("has_eos_conflict_lr1state", 1132), ((Tag1 (0, (Tag3 ((("lr1state", 1104)), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/lr0.mli", 196, 6871, 6871), ("src/lr0.mli", 196, 6871, 6918), 0), 0, Tag1 ("Dune__exe__Lr0", 40)), 0)], "Dune__exe__Lr0", [("Dune__exe__Lr0", ("\206\2245E\217\146\129\183q\204I\232\\\127\140\247")); ("Vendored_fix__Sigs", ("a{\193\210\184\138\163\252\132\135.\2156meu")); ("Vendored_fix__Set", ("#\017\234a}\187\202\206\012\134\207\129$\021\139\204")); ("Vendored_fix__Option", ("\185\131\152+\006QZ\148\188/\198#\220M\188\016")); ("Vendored_fix__Core", ("\214\127\018A\245\025\b\249\146\254pi\185\243\149\133")); ("Vendored_fix__", ("\r\196g\002\180\221\139\252\200\240t\184\171.K\020")); ("Vendored_fix", ("\012!\239\029\209\204\252\027\214>p\249;\128\184\191")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("MenhirSdk__Keyword", ("\171\145\177^\199\189\197f\150\136y\144\252\234>\178")); ("MenhirSdk", ("F\232\012\196l\143\145[\255\2193U\197\027\176\139")); ("Dune__exe__Syntax", ("\002\205\007\164\2347\133\182\245*x\171\004\190\178\171")); ("Dune__exe__StringSet", ("uB\206\020%\219\199\135&\196,\015\190\015^\230")); ("Dune__exe__StringMap", ("\157\157\161k*M\030\254|\006>\144X\147j\222")); ("Dune__exe__Stretch", ("\003\145~\207\198HL&\187\195e'0\204\200\156")); ("Dune__exe__Settings", ("I\214\245\150\238/\2211\219\145S\218\004a:1")); ("Dune__exe__Positions", ("\137nS\236\011\187\r[\024:\162/\201\139\237}")); ("Dune__exe__Lookahead", ("\0313\213I\026\021n\155\198!\021$\230z\234\198")); ("Dune__exe__Item", ("n\239\129]\161h\245\169\247_4\014>1\006D")); ("Dune__exe__InputFile", (",\0246\029z@\127T\235\227k~\t\138\213%")); ("Dune__exe__IL", ("\194\228\178\190\251\254\231\226\207\197c\133\253i\220\170")); ("Dune__exe__GrammarFunctor", ("\139\015m\230\161\218\014\241\156v\017\182\017=\215\030")); ("Dune__exe__Grammar", ("\206h\026\183\149X\202a=\181,\16851\132e")); ("Dune__exe__GSet", ("\246\0066\220ky~\0042_c\205p\186\249\170")); ("Dune__exe__GMap", ("z5C\250t+\028\210\224\015Z'{U-\242")); ("Dune__exe__Front", ("\148\176\180\242\232x\020\016\239\205>I\021\\n*")); ("Dune__exe__Fix", ("\136\220e\127\151\133P\213x\197\137\216\247\006\184U")); ("Dune__exe__BasicSyntax", ("\219\025F6\236\222\186\020\209\135\130+\131\228\012\003")); ("Dune__exe__Action", ("c\225H \249\179\190\007`[X\019\132@\208\193")); ("Dune__exe", ("\137\000\197\175$\007]\218\141\248\172\212\146c\153\212")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val has_eos_conflict_lr1state : lr1state -> bool
