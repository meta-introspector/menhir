type 'a lazy_t = 'a CamlinternalLazy.t
type in_channel_ = in_channel
type in_channel = in_channel_
type out_channel_ = out_channel
type out_channel = out_channel_
type nonrec floatarray = floatarray
type ('a, 'b, 'c, 'd, 'e, 'f) format6 =
    ('a, 'b, 'c, 'd, 'e, 'f) CamlinternalFormatBasics.format6
type nonrec bytes = bytes
type ('a, 'b) result = ('a, 'b) result = Ok of 'a | Error of 'b
type 'a seq = unit -> 'a seq_node
and 'a seq_node = 'a Seq.node = Nil | Cons of 'a * 'a seq
("DEBUG:rule", [Tag1 (("lazy_t", 466), ([((("a")), 100000000, 0, -29)], 1, 0, 1, ((Tag3 (Tag1 ((Tag2 ("CamlinternalLazy")), "t"), [((("a")), 100000000, 0, -29)], (0)), 100000000, 0, -28)), [25], [0], 0, 0, (("stdcompat__init.mli", 2, 1, 1), ("stdcompat__init.mli", 2, 1, 39), 0), 0, 0, 0, Tag1 ("Stdcompat__init", 0)), 1, 0); Tag1 (("in_channel_", 467), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "in_channel"), 0, (0)), 100000000, 0, -27)), 0, 0, 0, 0, (("stdcompat__init.mli", 9, 104, 104), ("stdcompat__init.mli", 9, 104, 133), 0), 0, 0, 0, Tag1 ("Stdcompat__init", 1)), 1, 0); Tag1 (("in_channel", 468), (0, 0, 0, 1, ((Tag3 ((("in_channel_", 467)), 0, (0)), 100000000, 0, -26)), 0, 0, 0, 0, (("stdcompat__init.mli", 10, 134, 134), ("stdcompat__init.mli", 10, 134, 163), 0), 0, 0, 0, Tag1 ("Stdcompat__init", 2)), 1, 0); Tag1 (("out_channel_", 469), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -25)), 0, 0, 0, 0, (("stdcompat__init.mli", 12, 165, 165), ("stdcompat__init.mli", 12, 165, 196), 0), 0, 0, 0, Tag1 ("Stdcompat__init", 3)), 1, 0); Tag1 (("out_channel", 470), (0, 0, 0, 1, ((Tag3 ((("out_channel_", 469)), 0, (0)), 100000000, 0, -24)), 0, 0, 0, 0, (("stdcompat__init.mli", 13, 197, 197), ("stdcompat__init.mli", 13, 197, 228), 0), 0, 0, 0, Tag1 ("Stdcompat__init", 4)), 1, 0); Tag1 (("floatarray", 471), (0, 0, 0, 1, ((Tag3 ((Tag3 ("floatarray", 17)), 0, (0)), 100000000, 0, -23)), 0, 0, 0, 0, (("stdcompat__init.mli", 16, 231, 231), ("stdcompat__init.mli", 16, 231, 266), 0), 0, 0, 0, Tag1 ("Stdcompat__init", 5)), 0, 0); Tag1 (("format6", 472), ([((("a")), 100000000, 0, -17); ((("b")), 100000000, 0, -18); ((("c")), 100000000, 0, -19); ((("d")), 100000000, 0, -20); ((("e")), 100000000, 0, -21); ((("f")), 100000000, 0, -22)], 6, 0, 1, ((Tag3 (Tag1 ((Tag2 ("CamlinternalFormatBasics")), "format6"), [((("a")), 100000000, 0, -17); ((("b")), 100000000, 0, -18); ((("c")), 100000000, 0, -19); ((("d")), 100000000, 0, -20); ((("e")), 100000000, 0, -21); ((("f")), 100000000, 0, -22)], (0)), 100000000, 0, -16)), [63; 15; 15; 63; 15; 15], [0; 0; 0; 0; 0; 0], 0, 0, (("stdcompat__init.mli", 18, 268, 268), ("stdcompat__init.mli", 19, 308, 369), 0), 0, 0, 0, Tag1 ("Stdcompat__init", 6)), 1, 0); Tag1 (("bytes", 473), (0, 0, 0, 1, ((Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -15)), 0, 0, 0, 0, (("stdcompat__init.mli", 37, 643, 643), ("stdcompat__init.mli", 37, 643, 668), 0), 0, 0, 0, Tag1 ("Stdcompat__init", 7)), 0, 0); Tag1 (("result", 474), ([((("a")), 100000000, 0, -13); ((("b")), 100000000, 0, -14)], 2, Tag1 ([(("Ok", 305), ([((("a")), 100000000, 0, -13)]), 0, (("stdcompat__init.mli", 57, 821, 823), ("stdcompat__init.mli", 57, 821, 833), 0), 0, Tag1 ("Stdcompat__init", 9)); (("Error", 306), ([((("b")), 100000000, 0, -14)]), 0, (("stdcompat__init.mli", 58, 835, 837), ("stdcompat__init.mli", 58, 835, 850), 0), 0, Tag1 ("Stdcompat__init", 10))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -13); ((("b")), 100000000, 0, -14)], (0)), 100000000, 0, -12)), [25; 25], [0; 0], 0, 0, (("stdcompat__init.mli", 43, 697, 697), ("stdcompat__init.mli", 58, 835, 850), 0), 0, 0, 0, Tag1 ("Stdcompat__init", 8)), 1, 0); Tag1 (("seq", 475), ([((("a")), 100000000, 0, -10)], 1, 0, 1, ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -11), (Tag3 ((("seq_node", 476)), [((("a")), 100000000, 0, -10)], (0)), 100000000, 0, -9), 0), 100000000, 0, -8)), [25], [0], 0, 0, (("stdcompat__init.mli", 61, 853, 853), ("stdcompat__init.mli", 61, 853, 886), 0), 0, 0, 0, Tag1 ("Stdcompat__init", 11)), 1, 0); Tag1 (("seq_node", 476), ([((("a")), 100000000, 0, -6)], 1, Tag1 ([(("Nil", 309), (0), 0, (("stdcompat__init.mli", 63, 919, 921), ("stdcompat__init.mli", 63, 919, 926), 0), 0, Tag1 ("Stdcompat__init", 13)); (("Cons", 310), ([((("a")), 100000000, 0, -6); (Tag3 ((("seq", 475)), [((("a")), 100000000, 0, -6)], (0)), 100000000, 0, -7)]), 0, (("stdcompat__init.mli", 64, 928, 930), ("stdcompat__init.mli", 64, 928, 951), 0), 0, Tag1 ("Stdcompat__init", 14))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "node"), [((("a")), 100000000, 0, -6)], (0)), 100000000, 0, -5)), [25], [0], 0, 0, (("stdcompat__init.mli", 62, 887, 887), ("stdcompat__init.mli", 64, 928, 951), 0), 0, 0, 0, Tag1 ("Stdcompat__init", 12)), 2, 0); Tag1 (("either", 477), ([((("a")), 100000000, 0, -3); ((("b")), 100000000, 0, -4)], 2, Tag1 ([(("Left", 434), ([((("a")), 100000000, 0, -3)]), 0, (("stdcompat__init.mli", 78, 1106, 1108), ("stdcompat__init.mli", 78, 1106, 1120), 0), 0, Tag1 ("Stdcompat__init", 16)); (("Right", 435), ([((("b")), 100000000, 0, -4)]), 0, (("stdcompat__init.mli", 79, 1121, 1123), ("stdcompat__init.mli", 79, 1121, 1136), 0), 0, Tag1 ("Stdcompat__init", 17))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Either"), "t"), [((("a")), 100000000, 0, -3); ((("b")), 100000000, 0, -4)], (0)), 100000000, 0, -2)), [25; 25], [0; 0], 0, 0, (("stdcompat__init.mli", 77, 1063, 1063), ("stdcompat__init.mli", 79, 1121, 1136), 0), 0, 0, 0, Tag1 ("Stdcompat__init", 15)), 1, 0)], "Stdcompat__init", [("Stdcompat__init", ("r\254q\255\217]\232\239'\192d\165\222\016\157\133")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
type ('a, 'b) either = ('a, 'b) Either.t = Left of 'a | Right of 'b
