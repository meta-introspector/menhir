val add_bidirectionality_hint : Names.GlobRef.t -> int -> unit
val get_bidirectionality_hint : Names.GlobRef.t -> int option
val clear_bidirectionality_hint : Names.GlobRef.t -> unit
val search_guard :
  ?loc:Loc.t ->
  Environ.env -> int list list -> Constr.rec_declaration -> int array
type typing_constraint =
    IsType
  | OfType of EConstr.types
  | WithoutTypeConstraint
type use_typeclasses = NoUseTC | UseTCForConv | UseTC
type inference_flags = {
  use_coercions : bool;
  use_typeclasses : use_typeclasses;
  solve_unification_constraints : bool;
  fail_evar : bool;
  expand_evars : bool;
  program_mode : bool;
  polymorphic : bool;
}
val default_inference_flags : bool -> inference_flags
val no_classes_no_fail_inference_flags : inference_flags
val all_no_fail_flags : inference_flags
val all_and_fail_flags : inference_flags
val understand_tcc :
  ?flags:inference_flags ->
  Environ.env ->
  Evd.evar_map ->
  ?expected_type:typing_constraint ->
  Glob_term.glob_constr -> Evd.evar_map * EConstr.constr
val understand_tcc_ty :
  ?flags:inference_flags ->
  Environ.env ->
  Evd.evar_map ->
  ?expected_type:typing_constraint ->
  Glob_term.glob_constr -> Evd.evar_map * EConstr.constr * EConstr.types
val understand_ltac :
  inference_flags ->
  Environ.env ->
  Evd.evar_map ->
  Ltac_pretype.ltac_var_map ->
  typing_constraint -> Glob_term.glob_constr -> Evd.evar_map * EConstr.t
val understand_ltac_ty :
  inference_flags ->
  Environ.env ->
  Evd.evar_map ->
  Ltac_pretype.ltac_var_map ->
  typing_constraint ->
  Glob_term.glob_constr -> Evd.evar_map * EConstr.t * EConstr.types
val understand :
  ?flags:inference_flags ->
  ?expected_type:typing_constraint ->
  Environ.env ->
  Evd.evar_map ->
  Glob_term.glob_constr -> EConstr.constr Evd.in_evar_universe_context
val understand_uconstr :
  ?flags:inference_flags ->
  ?expected_type:typing_constraint ->
  Environ.env ->
  Evd.evar_map -> Ltac_pretype.closed_glob_constr -> Evd.evar_map * EConstr.t
type inference_hook =
    Environ.env ->
    Evd.evar_map -> Evar.t -> (Evd.evar_map * EConstr.constr) option
val solve_remaining_evars :
  ?hook:inference_hook ->
  inference_flags ->
  Environ.env -> ?initial:Evd.evar_map -> Evd.evar_map -> Evd.evar_map
val check_evars_are_solved :
  program_mode:bool ->
  Environ.env -> ?initial:Evd.evar_map -> Evd.evar_map -> unit
val check_evars :
  Environ.env ->
  ?initial:Evd.evar_map -> Evd.evar_map -> EConstr.constr -> unit
val ise_pretype_gen :
  inference_flags ->
  Environ.env ->
  Evd.evar_map ->
  Ltac_pretype.ltac_var_map ->
  typing_constraint ->
  Glob_term.glob_constr -> Evd.evar_map * EConstr.constr * EConstr.types
type pretype_flags = {
  poly : bool;
  resolve_tc : bool;
  program_mode : bool;
  use_coercions : bool;
}
type 'a pretype_fun =
    ?loc:Loc.t ->
    flags:pretype_flags ->
    Evardefine.type_constraint ->
    GlobEnv.t -> Evd.evar_map -> Evd.evar_map * 'a
type pretyper = {
  pretype_ref :
    pretyper ->
    Names.GlobRef.t * Glob_term.glob_level list option ->
    EConstr.unsafe_judgment pretype_fun;
  pretype_var : pretyper -> Names.Id.t -> EConstr.unsafe_judgment pretype_fun;
  pretype_evar :
    pretyper ->
    Glob_term.existential_name CAst.t *
    (Names.lident * Glob_term.glob_constr) list ->
    EConstr.unsafe_judgment pretype_fun;
  pretype_patvar :
    pretyper ->
    Evar_kinds.matching_var_kind -> EConstr.unsafe_judgment pretype_fun;
  pretype_app :
    pretyper ->
    Glob_term.glob_constr * Glob_term.glob_constr list ->
    EConstr.unsafe_judgment pretype_fun;
  pretype_proj :
    pretyper ->
    (Names.Constant.t * Glob_term.glob_level list option) *
    Glob_term.glob_constr list * Glob_term.glob_constr ->
    EConstr.unsafe_judgment pretype_fun;
  pretype_lambda :
    pretyper ->
    Names.Name.t * Glob_term.binding_kind * Glob_term.glob_constr *
    Glob_term.glob_constr -> EConstr.unsafe_judgment pretype_fun;
  pretype_prod :
    pretyper ->
    Names.Name.t * Glob_term.binding_kind * Glob_term.glob_constr *
    Glob_term.glob_constr -> EConstr.unsafe_judgment pretype_fun;
  pretype_letin :
    pretyper ->
    Names.Name.t * Glob_term.glob_constr * Glob_term.glob_constr option *
    Glob_term.glob_constr -> EConstr.unsafe_judgment pretype_fun;
  pretype_cases :
    pretyper ->
    Constr.case_style * Glob_term.glob_constr option *
    Glob_term.tomatch_tuples * Glob_term.cases_clauses ->
    EConstr.unsafe_judgment pretype_fun;
  pretype_lettuple :
    pretyper ->
    Names.Name.t list * (Names.Name.t * Glob_term.glob_constr option) *
    Glob_term.glob_constr * Glob_term.glob_constr ->
    EConstr.unsafe_judgment pretype_fun;
  pretype_if :
    pretyper ->
    Glob_term.glob_constr * (Names.Name.t * Glob_term.glob_constr option) *
    Glob_term.glob_constr * Glob_term.glob_constr ->
    EConstr.unsafe_judgment pretype_fun;
  pretype_rec :
    pretyper ->
    Glob_term.glob_fix_kind * Names.Id.t array *
    Glob_term.glob_decl list array * Glob_term.glob_constr array *
    Glob_term.glob_constr array -> EConstr.unsafe_judgment pretype_fun;
  pretype_sort :
    pretyper -> Glob_term.glob_sort -> EConstr.unsafe_judgment pretype_fun;
  pretype_hole :
    pretyper ->
    Evar_kinds.t * Namegen.intro_pattern_naming_expr ->
    EConstr.unsafe_judgment pretype_fun;
  pretype_genarg :
    pretyper ->
    Genarg.glob_generic_argument -> EConstr.unsafe_judgment pretype_fun;
  pretype_cast :
    pretyper ->
    Glob_term.glob_constr * Constr.cast_kind option * Glob_term.glob_constr ->
    EConstr.unsafe_judgment pretype_fun;
  pretype_int : pretyper -> Uint63.t -> EConstr.unsafe_judgment pretype_fun;
  pretype_float :
    pretyper -> Float64.t -> EConstr.unsafe_judgment pretype_fun;
  pretype_array :
    pretyper ->
    Glob_term.glob_level list option * Glob_term.glob_constr array *
    Glob_term.glob_constr * Glob_term.glob_constr ->
    EConstr.unsafe_judgment pretype_fun;
  pretype_type :
    pretyper ->
    Glob_term.glob_constr -> EConstr.unsafe_type_judgment pretype_fun;
}
val default_pretyper : pretyper
val eval_pretyper :
  pretyper ->
  flags:pretype_flags ->
  Evardefine.type_constraint ->
  GlobEnv.t ->
  Evd.evar_map ->
  ("DEBUG:rule", [(("add_bidirectionality_hint", 1537), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -427), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -426), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -425), 0), 100000000, 0, -424), 0), 100000000, 0, -423), 0, (("pretyping/pretyping.mli", 24, 1045, 1045), ("pretyping/pretyping.mli", 24, 1045, 1101), 0), 0, Tag1 ("Pretyping", 1)), 0); (("get_bidirectionality_hint", 1538), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -422), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -421)], (0)), 100000000, 0, -420), 0), 100000000, 0, -419), 0, (("pretyping/pretyping.mli", 29, 1286, 1286), ("pretyping/pretyping.mli", 29, 1286, 1341), 0), 0, Tag1 ("Pretyping", 2)), 0); (("clear_bidirectionality_hint", 1539), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -418), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -417), 0), 100000000, 0, -416), 0, (("pretyping/pretyping.mli", 31, 1343, 1343), ("pretyping/pretyping.mli", 31, 1343, 1394), 0), 0, Tag1 ("Pretyping", 3)), 0); (("search_guard", 1540), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -415)], (0)), 100000000, 0, -414), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -413), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -412)], (0)), 100000000, 0, -411)], (0)), 100000000, 0, -410), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "rec_declaration"), 0, (0)), 100000000, 0, -409), (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -408)], (0)), 100000000, 0, -407), 0), 100000000, 0, -406), 0), 100000000, 0, -405), 0), 100000000, 0, -404), 0), 100000000, 0, -403), 0, (("pretyping/pretyping.mli", 35, 1467, 1467), ("pretyping/pretyping.mli", 36, 1486, 1561), 0), 0, Tag1 ("Pretyping", 6)), 0); Tag1 (("typing_constraint", 1541), (0, 0, Tag1 ([(("IsType", 1143), (0), 0, (("pretyping/pretyping.mli", 39, 1588, 1590), ("pretyping/pretyping.mli", 39, 1588, 1598), 0), 0, Tag1 ("Pretyping", 8)); (("OfType", 1144), ([(Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -402)]), 0, (("pretyping/pretyping.mli", 40, 1625, 1627), ("pretyping/pretyping.mli", 40, 1625, 1644), 0), 0, Tag1 ("Pretyping", 9)); (("WithoutTypeConstraint", 1145), (0), 0, (("pretyping/pretyping.mli", 41, 1680, 1682), ("pretyping/pretyping.mli", 41, 1680, 1705), 0), 0, Tag1 ("Pretyping", 10))], 0), 1, 0, 0, 0, 0, 0, (("pretyping/pretyping.mli", 38, 1563, 1563), ("pretyping/pretyping.mli", 41, 1680, 1705), 0), 0, 0, 0, Tag1 ("Pretyping", 7)), 1, 0); Tag1 (("use_typeclasses", 1542), (0, 0, Tag1 ([(("NoUseTC", 1147), (0), 0, (("pretyping/pretyping.mli", 43, 1746, 1769), ("pretyping/pretyping.mli", 43, 1746, 1776), 0), 0, Tag1 ("Pretyping", 12)); (("UseTCForConv", 1148), (0), 0, (("pretyping/pretyping.mli", 43, 1746, 1777), ("pretyping/pretyping.mli", 43, 1746, 1791), 0), 0, Tag1 ("Pretyping", 13)); (("UseTC", 1149), (0), 0, (("pretyping/pretyping.mli", 43, 1746, 1792), ("pretyping/pretyping.mli", 43, 1746, 1799), 0), 0, Tag1 ("Pretyping", 14))], 0), 1, 0, 0, 0, 0, 0, (("pretyping/pretyping.mli", 43, 1746, 1746), ("pretyping/pretyping.mli", 43, 1746, 1799), 0), 0, 1, 0, Tag1 ("Pretyping", 11)), 1, 0); Tag1 (("inference_flags", 1543), (0, 0, [[(("use_coercions", 1151), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -395), (("pretyping/pretyping.mli", 53, 2104, 2106), ("pretyping/pretyping.mli", 53, 2104, 2127), 0), 0, Tag1 ("Pretyping", 16)); (("use_typeclasses", 1152), 0, (Tag3 ((("use_typeclasses", 1542)), 0, (0)), 100000000, 0, -396), (("pretyping/pretyping.mli", 54, 2128, 2130), ("pretyping/pretyping.mli", 54, 2128, 2164), 0), 0, Tag1 ("Pretyping", 17)); (("solve_unification_constraints", 1153), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -397), (("pretyping/pretyping.mli", 55, 2165, 2167), ("pretyping/pretyping.mli", 55, 2165, 2204), 0), 0, Tag1 ("Pretyping", 18)); (("fail_evar", 1154), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -398), (("pretyping/pretyping.mli", 56, 2205, 2207), ("pretyping/pretyping.mli", 56, 2205, 2224), 0), 0, Tag1 ("Pretyping", 19)); (("expand_evars", 1155), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -399), (("pretyping/pretyping.mli", 57, 2225, 2227), ("pretyping/pretyping.mli", 57, 2225, 2247), 0), 0, Tag1 ("Pretyping", 20)); (("program_mode", 1156), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -400), (("pretyping/pretyping.mli", 58, 2248, 2250), ("pretyping/pretyping.mli", 58, 2248, 2270), 0), 0, Tag1 ("Pretyping", 21)); (("polymorphic", 1157), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -401), (("pretyping/pretyping.mli", 59, 2271, 2273), ("pretyping/pretyping.mli", 59, 2271, 2292), 0), 0, Tag1 ("Pretyping", 22))]], 1, 0, 0, 0, 0, 0, (("pretyping/pretyping.mli", 52, 2079, 2079), ("pretyping/pretyping.mli", 60, 2293, 2294), 0), 0, 0, 0, Tag1 ("Pretyping", 15)), 1, 0); (("default_inference_flags", 1544), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -394), (Tag3 ((("inference_flags", 1543)), 0, (0)), 100000000, 0, -393), 0), 100000000, 0, -392), 0, (("pretyping/pretyping.mli", 62, 2296, 2296), ("pretyping/pretyping.mli", 62, 2296, 2349), 0), 0, Tag1 ("Pretyping", 23)), 0); (("no_classes_no_fail_inference_flags", 1545), ((Tag3 ((("inference_flags", 1543)), 0, (0)), 100000000, 0, -391), 0, (("pretyping/pretyping.mli", 64, 2351, 2351), ("pretyping/pretyping.mli", 64, 2351, 2407), 0), 0, Tag1 ("Pretyping", 24)), 0); (("all_no_fail_flags", 1546), ((Tag3 ((("inference_flags", 1543)), 0, (0)), 100000000, 0, -390), 0, (("pretyping/pretyping.mli", 66, 2409, 2409), ("pretyping/pretyping.mli", 66, 2409, 2448), 0), 0, Tag1 ("Pretyping", 25)), 0); (("all_and_fail_flags", 1547), ((Tag3 ((("inference_flags", 1543)), 0, (0)), 100000000, 0, -389), 0, (("pretyping/pretyping.mli", 68, 2450, 2450), ("pretyping/pretyping.mli", 68, 2450, 2490), 0), 0, Tag1 ("Pretyping", 26)), 0); (("understand_tcc", 1548), ((Tag1 (Tag1 ("flags"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("inference_flags", 1543)), 0, (0)), 100000000, 0, -388)], (0)), 100000000, 0, -387), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -386), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -385), (Tag1 (Tag1 ("expected_type"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("typing_constraint", 1541)), 0, (0)), 100000000, 0, -384)], (0)), 100000000, 0, -383), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -382), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -380); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -381)]), 100000000, 0, -379), 0), 100000000, 0, -378), 0), 100000000, 0, -377), 0), 100000000, 0, -376), 0), 100000000, 0, -375), 0), 100000000, 0, -374), 0, (("pretyping/pretyping.mli", 77, 2889, 2889), ("pretyping/pretyping.mli", 78, 2955, 3025), 0), 0, Tag1 ("Pretyping", 27)), 0); (("understand_tcc_ty", 1549), ((Tag1 (Tag1 ("flags"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("inference_flags", 1543)), 0, (0)), 100000000, 0, -373)], (0)), 100000000, 0, -372), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -371), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -370), (Tag1 (Tag1 ("expected_type"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("typing_constraint", 1541)), 0, (0)), 100000000, 0, -369)], (0)), 100000000, 0, -368), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -367), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -364); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -365); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -366)]), 100000000, 0, -363), 0), 100000000, 0, -362), 0), 100000000, 0, -361), 0), 100000000, 0, -360), 0), 100000000, 0, -359), 0), 100000000, 0, -358), 0, (("pretyping/pretyping.mli", 82, 3179, 3179), ("pretyping/pretyping.mli", 83, 3248, 3326), 0), 0, Tag1 ("Pretyping", 28)), 0); (("understand_ltac", 1550), ((Tag1 (0, (Tag3 ((("inference_flags", 1543)), 0, (0)), 100000000, 0, -357), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -356), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -355), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ltac_pretype")), "ltac_var_map"), 0, (0)), 100000000, 0, -354), (Tag1 (0, (Tag3 ((("typing_constraint", 1541)), 0, (0)), 100000000, 0, -353), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -352), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -350); (Tag3 (Tag1 ((Tag2 ("EConstr")), "t"), 0, (0)), 100000000, 0, -351)]), 100000000, 0, -349), 0), 100000000, 0, -348), 0), 100000000, 0, -347), 0), 100000000, 0, -346), 0), 100000000, 0, -345), 0), 100000000, 0, -344), 0), 100000000, 0, -343), 0, (("pretyping/pretyping.mli", 97, 3781, 3781), ("pretyping/pretyping.mli", 99, 3859, 3917), 0), 0, Tag1 ("Pretyping", 29)), 0); (("understand_ltac_ty", 1551), ((Tag1 (0, (Tag3 ((("inference_flags", 1543)), 0, (0)), 100000000, 0, -342), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -341), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -340), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ltac_pretype")), "ltac_var_map"), 0, (0)), 100000000, 0, -339), (Tag1 (0, (Tag3 ((("typing_constraint", 1541)), 0, (0)), 100000000, 0, -338), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -337), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -334); (Tag3 (Tag1 ((Tag2 ("EConstr")), "t"), 0, (0)), 100000000, 0, -335); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -336)]), 100000000, 0, -333), 0), 100000000, 0, -332), 0), 100000000, 0, -331), 0), 100000000, 0, -330), 0), 100000000, 0, -329), 0), 100000000, 0, -328), 0), 100000000, 0, -327), 0, (("pretyping/pretyping.mli", 101, 3919, 3919), ("pretyping/pretyping.mli", 103, 4000, 4074), 0), 0, Tag1 ("Pretyping", 30)), 0); (("understand", 1552), ((Tag1 (Tag1 ("flags"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("inference_flags", 1543)), 0, (0)), 100000000, 0, -326)], (0)), 100000000, 0, -325), (Tag1 (Tag1 ("expected_type"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("typing_constraint", 1541)), 0, (0)), 100000000, 0, -324)], (0)), 100000000, 0, -323), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -322), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -321), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -320), (Tag3 (Tag1 ((Tag2 ("Evd")), "in_evar_universe_context"), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -319)], (0)), 100000000, 0, -318), 0), 100000000, 0, -317), 0), 100000000, 0, -316), 0), 100000000, 0, -315), 0), 100000000, 0, -314), 0), 100000000, 0, -313), 0, (("pretyping/pretyping.mli", 111, 4451, 4451), ("pretyping/pretyping.mli", 112, 4530, 4601), 0), 0, Tag1 ("Pretyping", 31)), 0); (("understand_uconstr", 1553), ((Tag1 (Tag1 ("flags"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("inference_flags", 1543)), 0, (0)), 100000000, 0, -312)], (0)), 100000000, 0, -311), (Tag1 (Tag1 ("expected_type"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("typing_constraint", 1541)), 0, (0)), 100000000, 0, -310)], (0)), 100000000, 0, -309), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -308), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -307), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ltac_pretype")), "closed_glob_constr"), 0, (0)), 100000000, 0, -306), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -304); (Tag3 (Tag1 ((Tag2 ("EConstr")), "t"), 0, (0)), 100000000, 0, -305)]), 100000000, 0, -303), 0), 100000000, 0, -302), 0), 100000000, 0, -301), 0), 100000000, 0, -300), 0), 100000000, 0, -299), 0), 100000000, 0, -298), 0, (("pretyping/pretyping.mli", 114, 4603, 4603), ("pretyping/pretyping.mli", 116, 4692, 4768), 0), 0, Tag1 ("Pretyping", 32)), 0); Tag1 (("inference_hook", 1554), (0, 0, 0, 1, ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -297), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -296), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -295), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -293); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -294)]), 100000000, 0, -292)], (0)), 100000000, 0, -291), 0), 100000000, 0, -290), 0), 100000000, 0, -289), 0), 100000000, 0, -288)), 0, 0, 0, 0, (("pretyping/pretyping.mli", 121, 4942, 4942), ("pretyping/pretyping.mli", 121, 4942, 5019), 0), 0, 0, 0, Tag1 ("Pretyping", 33)), 1, 0); (("solve_remaining_evars", 1555), ((Tag1 (Tag1 ("hook"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("inference_hook", 1554)), 0, (0)), 100000000, 0, -287)], (0)), 100000000, 0, -286), (Tag1 (0, (Tag3 ((("inference_flags", 1543)), 0, (0)), 100000000, 0, -285), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -284), (Tag1 (Tag1 ("initial"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -283)], (0)), 100000000, 0, -282), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -281), (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -280), 0), 100000000, 0, -279), 0), 100000000, 0, -278), 0), 100000000, 0, -277), 0), 100000000, 0, -276), 0), 100000000, 0, -275), 0, (("pretyping/pretyping.mli", 129, 5408, 5408), ("pretyping/pretyping.mli", 130, 5479, 5547), 0), 0, Tag1 ("Pretyping", 34)), 0); (("check_evars_are_solved", 1556), ((Tag1 (("program_mode"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -274), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -273), (Tag1 (Tag1 ("initial"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -272)], (0)), 100000000, 0, -271), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -270), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -269), 0), 100000000, 0, -268), 0), 100000000, 0, -267), 0), 100000000, 0, -266), 0), 100000000, 0, -265), 0, (("pretyping/pretyping.mli", 135, 5663, 5663), ("pretyping/pretyping.mli", 136, 5692, 5778), 0), 0, Tag1 ("Pretyping", 35)), 0); (("check_evars", 1557), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -264), (Tag1 (Tag1 ("initial"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -263)], (0)), 100000000, 0, -262), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -261), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -260), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -259), 0), 100000000, 0, -258), 0), 100000000, 0, -257), 0), 100000000, 0, -256), 0), 100000000, 0, -255), 0, (("pretyping/pretyping.mli", 141, 5946, 5946), ("pretyping/pretyping.mli", 141, 5946, 6018), 0), 0, Tag1 ("Pretyping", 36)), 0); (("ise_pretype_gen", 1558), ((Tag1 (0, (Tag3 ((("inference_flags", 1543)), 0, (0)), 100000000, 0, -254), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -253), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -252), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ltac_pretype")), "ltac_var_map"), 0, (0)), 100000000, 0, -251), (Tag1 (0, (Tag3 ((("typing_constraint", 1541)), 0, (0)), 100000000, 0, -250), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -249), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -246); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -247); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -248)]), 100000000, 0, -245), 0), 100000000, 0, -244), 0), 100000000, 0, -243), 0), 100000000, 0, -242), 0), 100000000, 0, -241), 0), 100000000, 0, -240), 0), 100000000, 0, -239), 0, (("pretyping/pretyping.mli", 145, 6060, 6060), ("pretyping/pretyping.mli", 147, 6122, 6201), 0), 0, Tag1 ("Pretyping", 37)), 0); Tag1 (("pretype_flags", 1559), (0, 0, [[(("poly", 1183), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -235), (("pretyping/pretyping.mli", 152, 6268, 6270), ("pretyping/pretyping.mli", 152, 6268, 6282), 0), 0, Tag1 ("Pretyping", 39)); (("resolve_tc", 1184), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -236), (("pretyping/pretyping.mli", 153, 6283, 6285), ("pretyping/pretyping.mli", 153, 6283, 6303), 0), 0, Tag1 ("Pretyping", 40)); (("program_mode", 1185), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -237), (("pretyping/pretyping.mli", 154, 6304, 6306), ("pretyping/pretyping.mli", 154, 6304, 6326), 0), 0, Tag1 ("Pretyping", 41)); (("use_coercions", 1186), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -238), (("pretyping/pretyping.mli", 155, 6327, 6329), ("pretyping/pretyping.mli", 155, 6327, 6350), 0), 0, Tag1 ("Pretyping", 42))]], 1, 0, 0, 0, 0, 0, (("pretyping/pretyping.mli", 151, 6245, 6245), ("pretyping/pretyping.mli", 156, 6351, 6352), 0), 0, 0, 0, Tag1 ("Pretyping", 38)), 1, 0); Tag1 (("pretype_fun", 1560), ([((("a")), 100000000, 0, -228)], 1, 0, 1, ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -234)], (0)), 100000000, 0, -233), (Tag1 (("flags"), (Tag3 ((("pretype_flags", 1559)), 0, (0)), 100000000, 0, -232), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evardefine")), "type_constraint"), 0, (0)), 100000000, 0, -231), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("GlobEnv")), "t"), 0, (0)), 100000000, 0, -230), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -229), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -227); ((("a")), 100000000, 0, -228)]), 100000000, 0, -226), 0), 100000000, 0, -225), 0), 100000000, 0, -224), 0), 100000000, 0, -223), 0), 100000000, 0, -222), 0), 100000000, 0, -221)), [25], [0], 0, 0, (("pretyping/pretyping.mli", 158, 6354, 6354), ("pretyping/pretyping.mli", 158, 6354, 6481), 0), 0, 0, 0, Tag1 ("Pretyping", 43)), 1, 0); Tag1 (("pretyper", 1561), (0, 0, [[(("pretype_ref", 1223), 0, (Tag1 (0, (Tag3 ((("pretyper", 1561)), 0, (0)), 100000000, 0, -27), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -23); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_level"), 0, (0)), 100000000, 0, -26)], (0)), 100000000, 0, -25)], (0)), 100000000, 0, -24)]), 100000000, 0, -22), (Tag3 ((("pretype_fun", 1560)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -21)], (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), (("pretyping/pretyping.mli", 161, 6501, 6503), ("pretyping/pretyping.mli", 161, 6501, 6595), 0), 0, Tag1 ("Pretyping", 45)); (("pretype_var", 1240), 0, (Tag1 (0, (Tag3 ((("pretyper", 1561)), 0, (0)), 100000000, 0, -33), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -32), (Tag3 ((("pretype_fun", 1560)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -31)], (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0), 100000000, 0, -28), (("pretyping/pretyping.mli", 162, 6596, 6598), ("pretyping/pretyping.mli", 162, 6596, 6660), 0), 0, Tag1 ("Pretyping", 46)); (("pretype_evar", 1250), 0, (Tag1 (0, (Tag3 ((("pretyper", 1561)), 0, (0)), 100000000, 0, -45), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("CAst")), "t"), [(Tag3 (Tag1 ((Tag2 ("Glob_term")), "existential_name"), 0, (0)), 100000000, 0, -40)], (0)), 100000000, 0, -39); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Names")), "lident"), 0, (0)), 100000000, 0, -43); (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -44)]), 100000000, 0, -42)], (0)), 100000000, 0, -41)]), 100000000, 0, -38), (Tag3 ((("pretype_fun", 1560)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -37)], (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), (("pretyping/pretyping.mli", 163, 6661, 6663), ("pretyping/pretyping.mli", 163, 6661, 6775), 0), 0, Tag1 ("Pretyping", 47)); (("pretype_patvar", 1258), 0, (Tag1 (0, (Tag3 ((("pretyper", 1561)), 0, (0)), 100000000, 0, -51), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evar_kinds")), "matching_var_kind"), 0, (0)), 100000000, 0, -50), (Tag3 ((("pretype_fun", 1560)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -49)], (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0), 100000000, 0, -46), (("pretyping/pretyping.mli", 164, 6776, 6778), ("pretyping/pretyping.mli", 164, 6776, 6867), 0), 0, Tag1 ("Pretyping", 48)); (("pretype_app", 1259), 0, (Tag1 (0, (Tag3 ((("pretyper", 1561)), 0, (0)), 100000000, 0, -60), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -57); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -59)], (0)), 100000000, 0, -58)]), 100000000, 0, -56), (Tag3 ((("pretype_fun", 1560)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -55)], (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), (("pretyping/pretyping.mli", 165, 6868, 6870), ("pretyping/pretyping.mli", 165, 6868, 6958), 0), 0, Tag1 ("Pretyping", 49)); (("pretype_proj", 1278), 0, (Tag1 (0, (Tag3 ((("pretyper", 1561)), 0, (0)), 100000000, 0, -74), (Tag1 (0, (Tag2 ([(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -67); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_level"), 0, (0)), 100000000, 0, -70)], (0)), 100000000, 0, -69)], (0)), 100000000, 0, -68)]), 100000000, 0, -66); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -72)], (0)), 100000000, 0, -71); (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -73)]), 100000000, 0, -65), (Tag3 ((("pretype_fun", 1560)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -64)], (0)), 100000000, 0, -63), 0), 100000000, 0, -62), 0), 100000000, 0, -61), (("pretyping/pretyping.mli", 166, 6959, 6961), ("pretyping/pretyping.mli", 166, 6959, 7090), 0), 0, Tag1 ("Pretyping", 50)); (("pretype_lambda", 1288), 0, (Tag1 (0, (Tag3 ((("pretyper", 1561)), 0, (0)), 100000000, 0, -84), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -80); (Tag3 (Tag1 ((Tag2 ("Glob_term")), "binding_kind"), 0, (0)), 100000000, 0, -81); (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -82); (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -83)]), 100000000, 0, -79), (Tag3 ((("pretype_fun", 1560)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -78)], (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0), 100000000, 0, -75), (("pretyping/pretyping.mli", 167, 7091, 7093), ("pretyping/pretyping.mli", 167, 7091, 7203), 0), 0, Tag1 ("Pretyping", 51)); (("pretype_prod", 1289), 0, (Tag1 (0, (Tag3 ((("pretyper", 1561)), 0, (0)), 100000000, 0, -94), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -90); (Tag3 (Tag1 ((Tag2 ("Glob_term")), "binding_kind"), 0, (0)), 100000000, 0, -91); (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -92); (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -93)]), 100000000, 0, -89), (Tag3 ((("pretype_fun", 1560)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -88)], (0)), 100000000, 0, -87), 0), 100000000, 0, -86), 0), 100000000, 0, -85), (("pretyping/pretyping.mli", 168, 7204, 7206), ("pretyping/pretyping.mli", 168, 7204, 7314), 0), 0, Tag1 ("Pretyping", 52)); (("pretype_letin", 1290), 0, (Tag1 (0, (Tag3 ((("pretyper", 1561)), 0, (0)), 100000000, 0, -105), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -100); (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -101); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -103)], (0)), 100000000, 0, -102); (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -104)]), 100000000, 0, -99), (Tag3 ((("pretype_fun", 1560)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -98)], (0)), 100000000, 0, -97), 0), 100000000, 0, -96), 0), 100000000, 0, -95), (("pretyping/pretyping.mli", 169, 7315, 7317), ("pretyping/pretyping.mli", 169, 7315, 7432), 0), 0, Tag1 ("Pretyping", 53)); (("pretype_cases", 1291), 0, (Tag1 (0, (Tag3 ((("pretyper", 1561)), 0, (0)), 100000000, 0, -116), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Constr")), "case_style"), 0, (0)), 100000000, 0, -111); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -113)], (0)), 100000000, 0, -112); (Tag3 (Tag1 ((Tag2 ("Glob_term")), "tomatch_tuples"), 0, (0)), 100000000, 0, -114); (Tag3 (Tag1 ((Tag2 ("Glob_term")), "cases_clauses"), 0, (0)), 100000000, 0, -115)]), 100000000, 0, -110), (Tag3 ((("pretype_fun", 1560)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -109)], (0)), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), (("pretyping/pretyping.mli", 170, 7433, 7435), ("pretyping/pretyping.mli", 170, 7433, 7566), 0), 0, Tag1 ("Pretyping", 54)); (("pretype_lettuple", 1292), 0, (Tag1 (0, (Tag3 ((("pretyper", 1561)), 0, (0)), 100000000, 0, -130), (Tag1 (0, (Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -123)], (0)), 100000000, 0, -122); (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -125); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -127)], (0)), 100000000, 0, -126)]), 100000000, 0, -124); (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -128); (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -129)]), 100000000, 0, -121), (Tag3 ((("pretype_fun", 1560)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -120)], (0)), 100000000, 0, -119), 0), 100000000, 0, -118), 0), 100000000, 0, -117), (("pretyping/pretyping.mli", 171, 7567, 7569), ("pretyping/pretyping.mli", 171, 7567, 7703), 0), 0, Tag1 ("Pretyping", 55)); (("pretype_if", 1293), 0, (Tag1 (0, (Tag3 ((("pretyper", 1561)), 0, (0)), 100000000, 0, -143), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -136); (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -138); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -140)], (0)), 100000000, 0, -139)]), 100000000, 0, -137); (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -141); (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -142)]), 100000000, 0, -135), (Tag3 ((("pretype_fun", 1560)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -134)], (0)), 100000000, 0, -133), 0), 100000000, 0, -132), 0), 100000000, 0, -131), (("pretyping/pretyping.mli", 172, 7704, 7706), ("pretyping/pretyping.mli", 172, 7704, 7834), 0), 0, Tag1 ("Pretyping", 56)); (("pretype_rec", 1294), 0, (Tag1 (0, (Tag3 ((("pretyper", 1561)), 0, (0)), 100000000, 0, -159), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_fix_kind"), 0, (0)), 100000000, 0, -149); (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -151)], (0)), 100000000, 0, -150); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_decl"), 0, (0)), 100000000, 0, -154)], (0)), 100000000, 0, -153)], (0)), 100000000, 0, -152); (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -156)], (0)), 100000000, 0, -155); (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -158)], (0)), 100000000, 0, -157)]), 100000000, 0, -148), (Tag3 ((("pretype_fun", 1560)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -147)], (0)), 100000000, 0, -146), 0), 100000000, 0, -145), 0), 100000000, 0, -144), (("pretyping/pretyping.mli", 173, 7835, 7837), ("pretyping/pretyping.mli", 173, 7835, 7984), 0), 0, Tag1 ("Pretyping", 57)); (("pretype_sort", 1295), 0, (Tag1 (0, (Tag3 ((("pretyper", 1561)), 0, (0)), 100000000, 0, -165), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_sort"), 0, (0)), 100000000, 0, -164), (Tag3 ((("pretype_fun", 1560)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -163)], (0)), 100000000, 0, -162), 0), 100000000, 0, -161), 0), 100000000, 0, -160), (("pretyping/pretyping.mli", 174, 7985, 7987), ("pretyping/pretyping.mli", 174, 7985, 8055), 0), 0, Tag1 ("Pretyping", 58)); (("pretype_hole", 1335), 0, (Tag1 (0, (Tag3 ((("pretyper", 1561)), 0, (0)), 100000000, 0, -173), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evar_kinds")), "t"), 0, (0)), 100000000, 0, -171); (Tag3 (Tag1 ((Tag2 ("Namegen")), "intro_pattern_naming_expr"), 0, (0)), 100000000, 0, -172)]), 100000000, 0, -170), (Tag3 ((("pretype_fun", 1560)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -169)], (0)), 100000000, 0, -168), 0), 100000000, 0, -167), 0), 100000000, 0, -166), (("pretyping/pretyping.mli", 175, 8056, 8058), ("pretyping/pretyping.mli", 175, 8056, 8165), 0), 0, Tag1 ("Pretyping", 59)); (("pretype_genarg", 1373), 0, (Tag1 (0, (Tag3 ((("pretyper", 1561)), 0, (0)), 100000000, 0, -179), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Genarg")), "glob_generic_argument"), 0, (0)), 100000000, 0, -178), (Tag3 ((("pretype_fun", 1560)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -177)], (0)), 100000000, 0, -176), 0), 100000000, 0, -175), 0), 100000000, 0, -174), (("pretyping/pretyping.mli", 176, 8166, 8168), ("pretyping/pretyping.mli", 176, 8166, 8257), 0), 0, Tag1 ("Pretyping", 60)); (("pretype_cast", 1374), 0, (Tag1 (0, (Tag3 ((("pretyper", 1561)), 0, (0)), 100000000, 0, -189), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -185); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "cast_kind"), 0, (0)), 100000000, 0, -187)], (0)), 100000000, 0, -186); (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -188)]), 100000000, 0, -184), (Tag3 ((("pretype_fun", 1560)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -183)], (0)), 100000000, 0, -182), 0), 100000000, 0, -181), 0), 100000000, 0, -180), (("pretyping/pretyping.mli", 177, 8258, 8260), ("pretyping/pretyping.mli", 177, 8258, 8370), 0), 0, Tag1 ("Pretyping", 61)); (("pretype_int", 1422), 0, (Tag1 (0, (Tag3 ((("pretyper", 1561)), 0, (0)), 100000000, 0, -195), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Uint63")), "t"), 0, (0)), 100000000, 0, -194), (Tag3 ((("pretype_fun", 1560)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -193)], (0)), 100000000, 0, -192), 0), 100000000, 0, -191), 0), 100000000, 0, -190), (("pretyping/pretyping.mli", 178, 8371, 8373), ("pretyping/pretyping.mli", 178, 8371, 8439), 0), 0, Tag1 ("Pretyping", 62)); (("pretype_float", 1459), 0, (Tag1 (0, (Tag3 ((("pretyper", 1561)), 0, (0)), 100000000, 0, -201), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Float64")), "t"), 0, (0)), 100000000, 0, -200), (Tag3 ((("pretype_fun", 1560)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -199)], (0)), 100000000, 0, -198), 0), 100000000, 0, -197), 0), 100000000, 0, -196), (("pretyping/pretyping.mli", 179, 8440, 8442), ("pretyping/pretyping.mli", 179, 8440, 8511), 0), 0, Tag1 ("Pretyping", 63)); (("pretype_array", 1460), 0, (Tag1 (0, (Tag3 ((("pretyper", 1561)), 0, (0)), 100000000, 0, -214), (Tag1 (0, (Tag2 ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_level"), 0, (0)), 100000000, 0, -209)], (0)), 100000000, 0, -208)], (0)), 100000000, 0, -207); (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -211)], (0)), 100000000, 0, -210); (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -212); (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -213)]), 100000000, 0, -206), (Tag3 ((("pretype_fun", 1560)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -205)], (0)), 100000000, 0, -204), 0), 100000000, 0, -203), 0), 100000000, 0, -202), (("pretyping/pretyping.mli", 180, 8512, 8514), ("pretyping/pretyping.mli", 180, 8512, 8644), 0), 0, Tag1 ("Pretyping", 64)); (("pretype_type", 1461), 0, (Tag1 (0, (Tag3 ((("pretyper", 1561)), 0, (0)), 100000000, 0, -220), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -219), (Tag3 ((("pretype_fun", 1560)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_type_judgment"), 0, (0)), 100000000, 0, -218)], (0)), 100000000, 0, -217), 0), 100000000, 0, -216), 0), 100000000, 0, -215), (("pretyping/pretyping.mli", 181, 8645, 8647), ("pretyping/pretyping.mli", 181, 8645, 8722), 0), 0, Tag1 ("Pretyping", 65))]], 1, 0, 0, 0, 0, 0, (("pretyping/pretyping.mli", 160, 6483, 6483), ("pretyping/pretyping.mli", 182, 8723, 8724), 0), 0, 0, 0, Tag1 ("Pretyping", 44)), 1, 0); (("default_pretyper", 1562), ((Tag3 ((("pretyper", 1561)), 0, (0)), 100000000, 0, -17), 0, (("pretyping/pretyping.mli", 190, 9179, 9179), ("pretyping/pretyping.mli", 190, 9179, 9210), 0), 0, Tag1 ("Pretyping", 66)), 0); (("eval_pretyper", 1563), ((Tag1 (0, (Tag3 ((("pretyper", 1561)), 0, (0)), 100000000, 0, -16), (Tag1 (("flags"), (Tag3 ((("pretype_flags", 1559)), 0, (0)), 100000000, 0, -15), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evardefine")), "type_constraint"), 0, (0)), 100000000, 0, -14), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("GlobEnv")), "t"), 0, (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -12), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -11), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -9); (Tag3 (Tag1 ((Tag2 ("EConstr")), "unsafe_judgment"), 0, (0)), 100000000, 0, -10)]), 100000000, 0, -8), 0), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("pretyping/pretyping.mli", 193, 9241, 9241), ("pretyping/pretyping.mli", 193, 9241, 9392), 0), 0, Tag1 ("Pretyping", 67)), 0)], "Pretyping", [("Pretyping", ("\151\160\191\149\149Ff\195\171g\189\156\r\166n\189")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("UnivSubst", ("\190qu\031mc\130\181\003G]\132\"\219m)")); ("UnivProblem", ("6'\161\018\181\001.\253\000\141a6\171\1727\155")); ("UnivNames", ("%\151_\209%+JM$n\001\232\194n\178N")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UState", ("SD\203\215|\136\n\251\239\208\148\215C\n\167\005")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Store", ("/dT\252\145\179pq\216{\181\206\190K+U")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("Section", ("\245\207\b\021\142v=\155#w\246}\"4b\006")); ("Safe_typing", (")\250?\164\145\132\241\127\186\152h+\145\"\237l")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Proofview_monad", ("\218\196\189S\147\216\129\221\231\224v\228O\024*\239")); ("Proofview", ("\245\140U\027\236\199\199&\242\156\199YG\250tA")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("Nativevalues", ("8:\007\025e\226c,\001\171\146#l\210\171\152")); ("Nativelib", ("V\239\205Y1\147E:,\176\196Hy\1483|")); ("Nativecode", ("\190\185\255\006m\012\210\163\138Rz\247\15283\183")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Namegen", ("\187\222\224T\255\020\1808-\212*\164\131\177\157x")); ("Monad", ("\244\171T\157\194p\187\160\149\195{\132\222\020\253\148")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Ltac_pretype", ("\224\"\167\018i:U\172>\188\128$\r\252\020T")); ("Logic_monad", ("\130\157\160Q\163vQ\137\184\2242\209\128\024\220i")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hook", ("\183\194\223\003\155\169',\187\240a;E\b\1396")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Glob_term", ("\165=a\227\160\153.\021_$\232\209T\236\153O")); ("GlobEnv", ("(\152\019ok\006R\183\193\145\137\133<\171\005\231")); ("Genlambda", ("\170}\024\241\141\222\136S\169\219\2212i\134KI")); ("Geninterp", ("2S\151\191\189\159\004\188;\224d\199|U\004\028")); ("Genarg", ("\1434\015\001\152\196\005s\156\136\195\185\247\b3\t")); ("Ftactic", ("K\172\205\128\241\162\160\201\202\1561o\180L\206:")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evd", ("\211\205p\193\216\129r\006\239oN\142ar\196\175")); ("Evarutil", ("\005\175\132e\164O\223svi \252\232\138\022\137")); ("Evardefine", ("\178\167R\199\158\242\001Y\215<\151\020\206\153\227\019")); ("Evar_kinds", ("\023L\186\132\218}\254\221\185\198\220\200h\003{\021")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("EConstr", ("\201aW\156\157;N\004\201V\208\006L\166\211)")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("DAst", ("\224/\200)\007\184ni\134\b\139\204\241\005w\212")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conversion", ("\158\150&\195M\tv\127|\029\158RRK\211A")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CDebug", ("^4\210p7\239!3\138\138\213?\239`\250\157")); ("CClosure", ("\167\b\022\241V-\r\253\b\002\000j]\223%\142")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
Glob_term.glob_constr -> Evd.evar_map * EConstr.unsafe_judgment
