type vodigest = Dvo_or_vi of Digest.t | Dvivo of Digest.t * Digest.t
val digest_match : actual:vodigest -> required:vodigest -> bool
type safe_environment
type section_data
val empty_environment : safe_environment
val env_of_safe_env : safe_environment -> Environ.env
val sections_of_safe_env : safe_environment -> section_data Section.t option
val structure_body_of_safe_env :
  safe_environment -> Declarations.structure_body
val flatten_env :
  safe_environment -> Names.ModPath.t * Declarations.structure_body
type safe_transformer0 = safe_environment -> safe_environment
type 'a safe_transformer = safe_environment -> 'a * safe_environment
type private_constants
val empty_private_constants : private_constants
val is_empty_private_constants : private_constants -> bool
val concat_private :
  private_constants -> private_constants -> private_constants
val inline_private_constants :
  Environ.env ->
  private_constants Entries.proof_output ->
  Constr.constr Univ.in_universe_context_set
val push_private_constants : Environ.env -> private_constants -> Environ.env
val universes_of_private : private_constants -> Univ.ContextSet.t
val is_curmod_library : safe_environment -> bool
val is_joined_environment : safe_environment -> bool
type global_declaration =
    ConstantEntry : Entries.constant_entry -> global_declaration
  | OpaqueEntry : unit Entries.opaque_entry -> global_declaration
type side_effect_declaration =
    DefinitionEff : Entries.definition_entry -> side_effect_declaration
  | OpaqueEff : Constr.constr Entries.opaque_entry -> side_effect_declaration
type exported_opaque
type exported_private_constant = Names.Constant.t * exported_opaque option
val repr_exported_opaque :
  exported_opaque -> Opaqueproof.opaque_handle * Opaqueproof.opaque_proofterm
val export_private_constants :
  private_constants -> exported_private_constant list safe_transformer
val add_constant :
  ?typing_flags:Declarations.typing_flags ->
  Names.Label.t -> global_declaration -> Names.Constant.t safe_transformer
val add_private_constant :
  Names.Label.t ->
  Univ.ContextSet.t ->
  side_effect_declaration ->
  (Names.Constant.t * private_constants) safe_transformer
type opaque_certificate
val check_opaque :
  safe_environment ->
  Opaqueproof.opaque_handle ->
  private_constants Entries.proof_output -> opaque_certificate
val fill_opaque : opaque_certificate -> safe_transformer0
val is_filled_opaque : Opaqueproof.opaque_handle -> safe_environment -> bool
val repr_certificate :
  opaque_certificate ->
  Constr.t * Univ.ContextSet.t Opaqueproof.delayed_universes
val add_mind :
  ?typing_flags:Declarations.typing_flags ->
  Names.Label.t ->
  Entries.mutual_inductive_entry -> Names.MutInd.t safe_transformer
val add_module :
  Names.Label.t ->
  Entries.module_entry ->
  Declarations.inline ->
  (Names.ModPath.t * Mod_subst.delta_resolver) safe_transformer
val add_modtype :
  Names.Label.t ->
  Entries.module_type_entry ->
  Declarations.inline -> Names.ModPath.t safe_transformer
val push_context_set : strict:bool -> Univ.ContextSet.t -> safe_transformer0
val add_constraints : Univ.Constraints.t -> safe_transformer0
val set_impredicative_set : bool -> safe_transformer0
val set_indices_matter : bool -> safe_transformer0
val set_typing_flags : Declarations.typing_flags -> safe_transformer0
val set_share_reduction : bool -> safe_transformer0
val set_check_guarded : bool -> safe_transformer0
val set_check_positive : bool -> safe_transformer0
val set_check_universes : bool -> safe_transformer0
val set_VM : bool -> safe_transformer0
val set_native_compiler : bool -> safe_transformer0
val set_allow_sprop : bool -> safe_transformer0
val open_section : safe_transformer0
val close_section : safe_transformer0
val sections_are_opened : safe_environment -> bool
val push_named_assum : Names.Id.t * Constr.types -> safe_transformer0
val push_named_def :
  Names.Id.t * Entries.section_def_entry -> safe_transformer0
val push_section_context : Univ.UContext.t -> safe_transformer0
val start_module : Names.Label.t -> Names.ModPath.t safe_transformer
val start_modtype : Names.Label.t -> Names.ModPath.t safe_transformer
val add_module_parameter :
  Names.MBId.t ->
  Entries.module_struct_entry ->
  Declarations.inline -> Mod_subst.delta_resolver safe_transformer
val module_num_parameters : safe_environment -> int list
val module_is_modtype : safe_environment -> bool list
val allow_delayed_constants : bool ref
val end_module :
  Names.Label.t ->
  (Entries.module_struct_entry * Declarations.inline) option ->
  (Names.ModPath.t * Names.MBId.t list * Mod_subst.delta_resolver)
  safe_transformer
val end_modtype :
  Names.Label.t -> (Names.ModPath.t * Names.MBId.t list) safe_transformer
val add_include :
  Entries.module_struct_entry ->
  bool -> Declarations.inline -> Mod_subst.delta_resolver safe_transformer
val current_modpath : safe_environment -> Names.ModPath.t
val current_dirpath : safe_environment -> Names.DirPath.t
type compiled_library
val module_of_library : compiled_library -> Declarations.module_body
val univs_of_library : compiled_library -> Univ.ContextSet.t
val start_library : Names.DirPath.t -> Names.ModPath.t safe_transformer
val export :
  output_native_objects:bool ->
  safe_environment ->
  Names.DirPath.t ->
  Names.ModPath.t * compiled_library * Nativelib.native_library
val import :
  compiled_library ->
  Univ.ContextSet.t -> vodigest -> Names.ModPath.t safe_transformer
type judgment = private {
  jdg_env : safe_environment;
  jdg_val : Constr.constr;
  jdg_type : Constr.types;
}
val typing : safe_environment -> Constr.constr -> judgment
val exists_objlabel : Names.Label.t -> safe_environment -> bool
val delta_of_senv :
  safe_environment -> Mod_subst.delta_resolver * Mod_subst.delta_resolver
val constant_of_delta_kn_senv :
  safe_environment -> Names.KerName.t -> Names.Constant.t
val mind_of_delta_kn_senv :
  safe_environment -> Names.KerName.t -> Names.MutInd.t
val register_inline : Names.Constant.t -> safe_transformer0
val register_inductive :
  Names.inductive -> 'a CPrimitives.prim_ind -> safe_transformer0
val set_strategy :
  ("DEBUG:rule", [Tag1 (("vodigest", 1164), (0, 0, Tag1 ([(("Dvo_or_vi", 355), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Digest"), "t"), 0, (0)), 100000000, 0, -341)]), 0, (("kernel/safe_typing.mli", 14, 704, 706), ("kernel/safe_typing.mli", 14, 704, 729), 0), 0, Tag1 ("Safe_typing", 1)); (("Dvivo", 369), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Digest"), "t"), 0, (0)), 100000000, 0, -342); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Digest"), "t"), 0, (0)), 100000000, 0, -343)]), 0, (("kernel/safe_typing.mli", 15, 774, 776), ("kernel/safe_typing.mli", 15, 774, 806), 0), 0, Tag1 ("Safe_typing", 2))], 0), 1, 0, 0, 0, 0, 0, (("kernel/safe_typing.mli", 13, 688, 688), ("kernel/safe_typing.mli", 15, 774, 806), 0), 0, 0, 0, Tag1 ("Safe_typing", 0)), 1, 0); (("digest_match", 1165), ((Tag1 (("actual"), (Tag3 ((("vodigest", 1164)), 0, (0)), 100000000, 0, -340), (Tag1 (("required"), (Tag3 ((("vodigest", 1164)), 0, (0)), 100000000, 0, -339), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -338), 0), 100000000, 0, -337), 0), 100000000, 0, -336), 0, (("kernel/safe_typing.mli", 17, 856, 856), ("kernel/safe_typing.mli", 17, 856, 919), 0), 0, Tag1 ("Safe_typing", 3)), 0); Tag1 (("safe_environment", 1166), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("kernel/safe_typing.mli", 28, 1186, 1186), ("kernel/safe_typing.mli", 28, 1186, 1207), 0), 0, 0, 0, Tag1 ("Safe_typing", 4)), 1, 0); Tag1 (("section_data", 1167), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("kernel/safe_typing.mli", 30, 1209, 1209), ("kernel/safe_typing.mli", 30, 1209, 1226), 0), 0, 0, 0, Tag1 ("Safe_typing", 5)), 1, 0); (("empty_environment", 1168), ((Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -335), 0, (("kernel/safe_typing.mli", 32, 1228, 1228), ("kernel/safe_typing.mli", 32, 1228, 1268), 0), 0, Tag1 ("Safe_typing", 6)), 0); (("env_of_safe_env", 1169), ((Tag1 (0, (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -334), (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -333), 0), 100000000, 0, -332), 0, (("kernel/safe_typing.mli", 34, 1270, 1270), ("kernel/safe_typing.mli", 34, 1270, 1323), 0), 0, Tag1 ("Safe_typing", 7)), 0); (("sections_of_safe_env", 1170), ((Tag1 (0, (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -331), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Section")), "t"), [(Tag3 ((("section_data", 1167)), 0, (0)), 100000000, 0, -330)], (0)), 100000000, 0, -329)], (0)), 100000000, 0, -328), 0), 100000000, 0, -327), 0, (("kernel/safe_typing.mli", 36, 1325, 1325), ("kernel/safe_typing.mli", 36, 1325, 1401), 0), 0, Tag1 ("Safe_typing", 8)), 0); (("structure_body_of_safe_env", 1171), ((Tag1 (0, (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -326), (Tag3 (Tag1 ((Tag2 ("Declarations")), "structure_body"), 0, (0)), 100000000, 0, -325), 0), 100000000, 0, -324), 0, (("kernel/safe_typing.mli", 38, 1403, 1403), ("kernel/safe_typing.mli", 38, 1403, 1483), 0), 0, Tag1 ("Safe_typing", 9)), 0); (("flatten_env", 1172), ((Tag1 (0, (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -323), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -321); (Tag3 (Tag1 ((Tag2 ("Declarations")), "structure_body"), 0, (0)), 100000000, 0, -322)]), 100000000, 0, -320), 0), 100000000, 0, -319), 0, (("kernel/safe_typing.mli", 40, 1485, 1485), ("kernel/safe_typing.mli", 40, 1485, 1562), 0), 0, Tag1 ("Safe_typing", 10)), 0); Tag1 (("safe_transformer0", 1173), (0, 0, 0, 1, ((Tag1 (0, (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -318), (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -317), 0), 100000000, 0, -316)), 0, 0, 0, 0, (("kernel/safe_typing.mli", 44, 1605, 1605), ("kernel/safe_typing.mli", 44, 1605, 1666), 0), 0, 0, 0, Tag1 ("Safe_typing", 11)), 1, 0); Tag1 (("safe_transformer", 1174), ([((("a")), 100000000, 0, -313)], 1, 0, 1, ((Tag1 (0, (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -315), (Tag2 ([((("a")), 100000000, 0, -313); (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -314)]), 100000000, 0, -312), 0), 100000000, 0, -311)), [25], [0], 0, 0, (("kernel/safe_typing.mli", 45, 1667, 1667), ("kernel/safe_typing.mli", 45, 1667, 1735), 0), 0, 0, 0, Tag1 ("Safe_typing", 12)), 1, 0); Tag1 (("private_constants", 1175), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("kernel/safe_typing.mli", 50, 1765, 1765), ("kernel/safe_typing.mli", 50, 1765, 1787), 0), 0, 0, 0, Tag1 ("Safe_typing", 13)), 1, 0); (("empty_private_constants", 1176), ((Tag3 ((("private_constants", 1175)), 0, (0)), 100000000, 0, -310), 0, (("kernel/safe_typing.mli", 52, 1789, 1789), ("kernel/safe_typing.mli", 52, 1789, 1836), 0), 0, Tag1 ("Safe_typing", 14)), 0); (("is_empty_private_constants", 1177), ((Tag1 (0, (Tag3 ((("private_constants", 1175)), 0, (0)), 100000000, 0, -309), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -308), 0), 100000000, 0, -307), 0, (("kernel/safe_typing.mli", 53, 1837, 1837), ("kernel/safe_typing.mli", 53, 1837, 1895), 0), 0, Tag1 ("Safe_typing", 15)), 0); (("concat_private", 1178), ((Tag1 (0, (Tag3 ((("private_constants", 1175)), 0, (0)), 100000000, 0, -306), (Tag1 (0, (Tag3 ((("private_constants", 1175)), 0, (0)), 100000000, 0, -305), (Tag3 ((("private_constants", 1175)), 0, (0)), 100000000, 0, -304), 0), 100000000, 0, -303), 0), 100000000, 0, -302), 0, (("kernel/safe_typing.mli", 55, 1897, 1897), ("kernel/safe_typing.mli", 55, 1897, 1977), 0), 0, Tag1 ("Safe_typing", 16)), 0); (("inline_private_constants", 1179), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -301), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Entries")), "proof_output"), [(Tag3 ((("private_constants", 1175)), 0, (0)), 100000000, 0, -300)], (0)), 100000000, 0, -299), (Tag3 (Tag1 ((Tag2 ("Univ")), "in_universe_context_set"), [(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -298)], (0)), 100000000, 0, -297), 0), 100000000, 0, -296), 0), 100000000, 0, -295), 0, (("kernel/safe_typing.mli", 59, 2112, 2112), ("kernel/safe_typing.mli", 60, 2143, 2244), 0), 0, Tag1 ("Safe_typing", 18)), 0); (("push_private_constants", 1180), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -294), (Tag1 (0, (Tag3 ((("private_constants", 1175)), 0, (0)), 100000000, 0, -293), (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -292), 0), 100000000, 0, -291), 0), 100000000, 0, -290), 0, (("kernel/safe_typing.mli", 62, 2246, 2246), ("kernel/safe_typing.mli", 62, 2246, 2322), 0), 0, Tag1 ("Safe_typing", 19)), 0); (("universes_of_private", 1181), ((Tag1 (0, (Tag3 ((("private_constants", 1175)), 0, (0)), 100000000, 0, -289), (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "ContextSet"), "t"), 0, (0)), 100000000, 0, -288), 0), 100000000, 0, -287), 0, (("kernel/safe_typing.mli", 65, 2391, 2391), ("kernel/safe_typing.mli", 65, 2391, 2456), 0), 0, Tag1 ("Safe_typing", 20)), 0); (("is_curmod_library", 1182), ((Tag1 (0, (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -286), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -285), 0), 100000000, 0, -284), 0, (("kernel/safe_typing.mli", 67, 2458, 2458), ("kernel/safe_typing.mli", 67, 2458, 2506), 0), 0, Tag1 ("Safe_typing", 21)), 0); (("is_joined_environment", 1183), ((Tag1 (0, (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -283), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -282), 0), 100000000, 0, -281), 0, (("kernel/safe_typing.mli", 69, 2508, 2508), ("kernel/safe_typing.mli", 69, 2508, 2560), 0), 0, Tag1 ("Safe_typing", 22)), 0); Tag1 (("global_declaration", 1184), (0, 0, Tag1 ([(("ConstantEntry", 837), ([(Tag3 (Tag1 ((Tag2 ("Entries")), "constant_entry"), 0, (0)), 100000000, 0, -277)]), ((Tag3 ((("global_declaration", 1184)), 0, (0)), 100000000, 0, -276)), (("kernel/safe_typing.mli", 75, 2679, 2679), ("kernel/safe_typing.mli", 75, 2679, 2741), 0), 0, Tag1 ("Safe_typing", 24)); (("OpaqueEntry", 838), ([(Tag3 (Tag1 ((Tag2 ("Entries")), "opaque_entry"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -280)], (0)), 100000000, 0, -279)]), ((Tag3 ((("global_declaration", 1184)), 0, (0)), 100000000, 0, -278)), (("kernel/safe_typing.mli", 76, 2742, 2742), ("kernel/safe_typing.mli", 76, 2742, 2805), 0), 0, Tag1 ("Safe_typing", 25))], 0), 1, 0, 0, 0, 0, 0, (("kernel/safe_typing.mli", 74, 2653, 2653), ("kernel/safe_typing.mli", 76, 2742, 2805), 0), 0, 0, 0, Tag1 ("Safe_typing", 23)), 1, 0); Tag1 (("side_effect_declaration", 1185), (0, 0, Tag1 ([(("DefinitionEff", 840), ([(Tag3 (Tag1 ((Tag2 ("Entries")), "definition_entry"), 0, (0)), 100000000, 0, -272)]), ((Tag3 ((("side_effect_declaration", 1185)), 0, (0)), 100000000, 0, -271)), (("kernel/safe_typing.mli", 79, 2838, 2838), ("kernel/safe_typing.mli", 79, 2838, 2907), 0), 0, Tag1 ("Safe_typing", 27)); (("OpaqueEff", 841), ([(Tag3 (Tag1 ((Tag2 ("Entries")), "opaque_entry"), [(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -275)], (0)), 100000000, 0, -274)]), ((Tag3 ((("side_effect_declaration", 1185)), 0, (0)), 100000000, 0, -273)), (("kernel/safe_typing.mli", 80, 2908, 2908), ("kernel/safe_typing.mli", 80, 2908, 2983), 0), 0, Tag1 ("Safe_typing", 28))], 0), 1, 0, 0, 0, 0, 0, (("kernel/safe_typing.mli", 78, 2807, 2807), ("kernel/safe_typing.mli", 80, 2908, 2983), 0), 0, 0, 0, Tag1 ("Safe_typing", 26)), 1, 0); Tag1 (("exported_opaque", 1186), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("kernel/safe_typing.mli", 82, 2985, 2985), ("kernel/safe_typing.mli", 82, 2985, 3005), 0), 0, 0, 0, Tag1 ("Safe_typing", 29)), 1, 0); Tag1 (("exported_private_constant", 1187), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -268); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("exported_opaque", 1186)), 0, (0)), 100000000, 0, -270)], (0)), 100000000, 0, -269)]), 100000000, 0, -267)), 0, 0, 0, 0, (("kernel/safe_typing.mli", 83, 3006, 3006), ("kernel/safe_typing.mli", 83, 3006, 3074), 0), 0, 0, 0, Tag1 ("Safe_typing", 30)), 1, 0); (("repr_exported_opaque", 1188), ((Tag1 (0, (Tag3 ((("exported_opaque", 1186)), 0, (0)), 100000000, 0, -266), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Opaqueproof")), "opaque_handle"), 0, (0)), 100000000, 0, -264); (Tag3 (Tag1 ((Tag2 ("Opaqueproof")), "opaque_proofterm"), 0, (0)), 100000000, 0, -265)]), 100000000, 0, -263), 0), 100000000, 0, -262), 0, (("kernel/safe_typing.mli", 85, 3076, 3076), ("kernel/safe_typing.mli", 85, 3076, 3178), 0), 0, Tag1 ("Safe_typing", 31)), 0); (("export_private_constants", 1189), ((Tag1 (0, (Tag3 ((("private_constants", 1175)), 0, (0)), 100000000, 0, -261), (Tag3 ((("safe_transformer", 1174)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("exported_private_constant", 1187)), 0, (0)), 100000000, 0, -260)], (0)), 100000000, 0, -259)], (0)), 100000000, 0, -258), 0), 100000000, 0, -257), 0, (("kernel/safe_typing.mli", 87, 3180, 3180), ("kernel/safe_typing.mli", 89, 3234, 3283), 0), 0, Tag1 ("Safe_typing", 32)), 0); (("add_constant", 1190), ((Tag1 (Tag1 ("typing_flags"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Declarations")), "typing_flags"), 0, (0)), 100000000, 0, -256)], (0)), 100000000, 0, -255), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Label"), "t"), 0, (0)), 100000000, 0, -254), (Tag1 (0, (Tag3 ((("global_declaration", 1184)), 0, (0)), 100000000, 0, -253), (Tag3 ((("safe_transformer", 1174)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -252)], (0)), 100000000, 0, -251), 0), 100000000, 0, -250), 0), 100000000, 0, -249), 0), 100000000, 0, -248), 0, (("kernel/safe_typing.mli", 92, 3318, 3318), ("kernel/safe_typing.mli", 94, 3382, 3444), 0), 0, Tag1 ("Safe_typing", 33)), 0); (("add_private_constant", 1191), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Label"), "t"), 0, (0)), 100000000, 0, -247), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "ContextSet"), "t"), 0, (0)), 100000000, 0, -246), (Tag1 (0, (Tag3 ((("side_effect_declaration", 1185)), 0, (0)), 100000000, 0, -245), (Tag3 ((("safe_transformer", 1174)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -243); (Tag3 ((("private_constants", 1175)), 0, (0)), 100000000, 0, -244)]), 100000000, 0, -242)], (0)), 100000000, 0, -241), 0), 100000000, 0, -240), 0), 100000000, 0, -239), 0), 100000000, 0, -238), 0, (("kernel/safe_typing.mli", 97, 3508, 3508), ("kernel/safe_typing.mli", 98, 3535, 3645), 0), 0, Tag1 ("Safe_typing", 34)), 0); Tag1 (("opaque_certificate", 1192), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("kernel/safe_typing.mli", 106, 3954, 3954), ("kernel/safe_typing.mli", 106, 3954, 3977), 0), 0, 0, 0, Tag1 ("Safe_typing", 35)), 1, 0); (("check_opaque", 1193), ((Tag1 (0, (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -237), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Opaqueproof")), "opaque_handle"), 0, (0)), 100000000, 0, -236), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Entries")), "proof_output"), [(Tag3 ((("private_constants", 1175)), 0, (0)), 100000000, 0, -235)], (0)), 100000000, 0, -234), (Tag3 ((("opaque_certificate", 1192)), 0, (0)), 100000000, 0, -233), 0), 100000000, 0, -232), 0), 100000000, 0, -231), 0), 100000000, 0, -230), 0, (("kernel/safe_typing.mli", 110, 4135, 4135), ("kernel/safe_typing.mli", 111, 4203, 4265), 0), 0, Tag1 ("Safe_typing", 36)), 0); (("fill_opaque", 1194), ((Tag1 (0, (Tag3 ((("opaque_certificate", 1192)), 0, (0)), 100000000, 0, -229), (Tag3 ((("safe_transformer0", 1173)), 0, (0)), 100000000, 0, -228), 0), 100000000, 0, -227), 0, (("kernel/safe_typing.mli", 118, 4580, 4580), ("kernel/safe_typing.mli", 118, 4580, 4637), 0), 0, Tag1 ("Safe_typing", 37)), 0); (("is_filled_opaque", 1195), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Opaqueproof")), "opaque_handle"), 0, (0)), 100000000, 0, -226), (Tag1 (0, (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -225), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -224), 0), 100000000, 0, -223), 0), 100000000, 0, -222), 0, (("kernel/safe_typing.mli", 122, 4780, 4780), ("kernel/safe_typing.mli", 122, 4780, 4856), 0), 0, Tag1 ("Safe_typing", 38)), 0); (("repr_certificate", 1196), ((Tag1 (0, (Tag3 ((("opaque_certificate", 1192)), 0, (0)), 100000000, 0, -221), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Constr")), "t"), 0, (0)), 100000000, 0, -218); (Tag3 (Tag1 ((Tag2 ("Opaqueproof")), "delayed_universes"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "ContextSet"), "t"), 0, (0)), 100000000, 0, -220)], (0)), 100000000, 0, -219)]), 100000000, 0, -217), 0), 100000000, 0, -216), 0, (("kernel/safe_typing.mli", 125, 4916, 4916), ("kernel/safe_typing.mli", 126, 4961, 5021), 0), 0, Tag1 ("Safe_typing", 39)), 0); (("add_mind", 1197), ((Tag1 (Tag1 ("typing_flags"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Declarations")), "typing_flags"), 0, (0)), 100000000, 0, -215)], (0)), 100000000, 0, -214), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Label"), "t"), 0, (0)), 100000000, 0, -213), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Entries")), "mutual_inductive_entry"), 0, (0)), 100000000, 0, -212), (Tag3 ((("safe_transformer", 1174)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MutInd"), "t"), 0, (0)), 100000000, 0, -211)], (0)), 100000000, 0, -210), 0), 100000000, 0, -209), 0), 100000000, 0, -208), 0), 100000000, 0, -207), 0, (("kernel/safe_typing.mli", 132, 5085, 5085), ("kernel/safe_typing.mli", 135, 5192, 5221), 0), 0, Tag1 ("Safe_typing", 40)), 0); (("add_module", 1198), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Label"), "t"), 0, (0)), 100000000, 0, -206), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Entries")), "module_entry"), 0, (0)), 100000000, 0, -205), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "inline"), 0, (0)), 100000000, 0, -204), (Tag3 ((("safe_transformer", 1174)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -202); (Tag3 (Tag1 ((Tag2 ("Mod_subst")), "delta_resolver"), 0, (0)), 100000000, 0, -203)]), 100000000, 0, -201)], (0)), 100000000, 0, -200), 0), 100000000, 0, -199), 0), 100000000, 0, -198), 0), 100000000, 0, -197), 0, (("kernel/safe_typing.mli", 139, 5264, 5264), ("kernel/safe_typing.mli", 141, 5341, 5400), 0), 0, Tag1 ("Safe_typing", 41)), 0); (("add_modtype", 1199), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Label"), "t"), 0, (0)), 100000000, 0, -196), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Entries")), "module_type_entry"), 0, (0)), 100000000, 0, -195), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "inline"), 0, (0)), 100000000, 0, -194), (Tag3 ((("safe_transformer", 1174)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -193)], (0)), 100000000, 0, -192), 0), 100000000, 0, -191), 0), 100000000, 0, -190), 0), 100000000, 0, -189), 0, (("kernel/safe_typing.mli", 142, 5401, 5401), ("kernel/safe_typing.mli", 144, 5484, 5514), 0), 0, Tag1 ("Safe_typing", 42)), 0); (("push_context_set", 1200), ((Tag1 (("strict"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -188), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "ContextSet"), "t"), 0, (0)), 100000000, 0, -187), (Tag3 ((("safe_transformer0", 1173)), 0, (0)), 100000000, 0, -186), 0), 100000000, 0, -185), 0), 100000000, 0, -184), 0, (("kernel/safe_typing.mli", 148, 5552, 5552), ("kernel/safe_typing.mli", 149, 5575, 5630), 0), 0, Tag1 ("Safe_typing", 43)), 0); (("add_constraints", 1201), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Constraints"), "t"), 0, (0)), 100000000, 0, -183), (Tag3 ((("safe_transformer0", 1173)), 0, (0)), 100000000, 0, -182), 0), 100000000, 0, -181), 0, (("kernel/safe_typing.mli", 151, 5632, 5632), ("kernel/safe_typing.mli", 152, 5654, 5695), 0), 0, Tag1 ("Safe_typing", 44)), 0); (("set_impredicative_set", 1202), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -180), (Tag3 ((("safe_transformer0", 1173)), 0, (0)), 100000000, 0, -179), 0), 100000000, 0, -178), 0, (("kernel/safe_typing.mli", 158, 5821, 5821), ("kernel/safe_typing.mli", 158, 5821, 5874), 0), 0, Tag1 ("Safe_typing", 45)), 0); (("set_indices_matter", 1203), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -177), (Tag3 ((("safe_transformer0", 1173)), 0, (0)), 100000000, 0, -176), 0), 100000000, 0, -175), 0, (("kernel/safe_typing.mli", 159, 5875, 5875), ("kernel/safe_typing.mli", 159, 5875, 5925), 0), 0, Tag1 ("Safe_typing", 46)), 0); (("set_typing_flags", 1204), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "typing_flags"), 0, (0)), 100000000, 0, -174), (Tag3 ((("safe_transformer0", 1173)), 0, (0)), 100000000, 0, -173), 0), 100000000, 0, -172), 0, (("kernel/safe_typing.mli", 160, 5926, 5926), ("kernel/safe_typing.mli", 160, 5926, 5995), 0), 0, Tag1 ("Safe_typing", 47)), 0); (("set_share_reduction", 1205), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -171), (Tag3 ((("safe_transformer0", 1173)), 0, (0)), 100000000, 0, -170), 0), 100000000, 0, -169), 0, (("kernel/safe_typing.mli", 161, 5996, 5996), ("kernel/safe_typing.mli", 161, 5996, 6047), 0), 0, Tag1 ("Safe_typing", 48)), 0); (("set_check_guarded", 1206), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -168), (Tag3 ((("safe_transformer0", 1173)), 0, (0)), 100000000, 0, -167), 0), 100000000, 0, -166), 0, (("kernel/safe_typing.mli", 162, 6048, 6048), ("kernel/safe_typing.mli", 162, 6048, 6097), 0), 0, Tag1 ("Safe_typing", 49)), 0); (("set_check_positive", 1207), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -165), (Tag3 ((("safe_transformer0", 1173)), 0, (0)), 100000000, 0, -164), 0), 100000000, 0, -163), 0, (("kernel/safe_typing.mli", 163, 6098, 6098), ("kernel/safe_typing.mli", 163, 6098, 6148), 0), 0, Tag1 ("Safe_typing", 50)), 0); (("set_check_universes", 1208), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -162), (Tag3 ((("safe_transformer0", 1173)), 0, (0)), 100000000, 0, -161), 0), 100000000, 0, -160), 0, (("kernel/safe_typing.mli", 164, 6149, 6149), ("kernel/safe_typing.mli", 164, 6149, 6200), 0), 0, Tag1 ("Safe_typing", 51)), 0); (("set_VM", 1209), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -159), (Tag3 ((("safe_transformer0", 1173)), 0, (0)), 100000000, 0, -158), 0), 100000000, 0, -157), 0, (("kernel/safe_typing.mli", 165, 6201, 6201), ("kernel/safe_typing.mli", 165, 6201, 6239), 0), 0, Tag1 ("Safe_typing", 52)), 0); (("set_native_compiler", 1210), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -156), (Tag3 ((("safe_transformer0", 1173)), 0, (0)), 100000000, 0, -155), 0), 100000000, 0, -154), 0, (("kernel/safe_typing.mli", 166, 6240, 6240), ("kernel/safe_typing.mli", 166, 6240, 6291), 0), 0, Tag1 ("Safe_typing", 53)), 0); (("set_allow_sprop", 1211), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -153), (Tag3 ((("safe_transformer0", 1173)), 0, (0)), 100000000, 0, -152), 0), 100000000, 0, -151), 0, (("kernel/safe_typing.mli", 167, 6292, 6292), ("kernel/safe_typing.mli", 167, 6292, 6339), 0), 0, Tag1 ("Safe_typing", 54)), 0); (("open_section", 1212), ((Tag3 ((("safe_transformer0", 1173)), 0, (0)), 100000000, 0, -150), 0, (("kernel/safe_typing.mli", 171, 6384, 6384), ("kernel/safe_typing.mli", 171, 6384, 6420), 0), 0, Tag1 ("Safe_typing", 55)), 0); (("close_section", 1213), ((Tag3 ((("safe_transformer0", 1173)), 0, (0)), 100000000, 0, -149), 0, (("kernel/safe_typing.mli", 173, 6422, 6422), ("kernel/safe_typing.mli", 173, 6422, 6459), 0), 0, Tag1 ("Safe_typing", 56)), 0); (("sections_are_opened", 1214), ((Tag1 (0, (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -148), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -147), 0), 100000000, 0, -146), 0, (("kernel/safe_typing.mli", 175, 6461, 6461), ("kernel/safe_typing.mli", 175, 6461, 6511), 0), 0, Tag1 ("Safe_typing", 57)), 0); (("push_named_assum", 1215), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -144); (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -145)]), 100000000, 0, -143), (Tag3 ((("safe_transformer0", 1173)), 0, (0)), 100000000, 0, -142), 0), 100000000, 0, -141), 0, (("kernel/safe_typing.mli", 179, 6574, 6574), ("kernel/safe_typing.mli", 179, 6574, 6639), 0), 0, Tag1 ("Safe_typing", 58)), 0); (("push_named_def", 1216), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -139); (Tag3 (Tag1 ((Tag2 ("Entries")), "section_def_entry"), 0, (0)), 100000000, 0, -140)]), 100000000, 0, -138), (Tag3 ((("safe_transformer0", 1173)), 0, (0)), 100000000, 0, -137), 0), 100000000, 0, -136), 0, (("kernel/safe_typing.mli", 181, 6641, 6641), ("kernel/safe_typing.mli", 182, 6662, 6717), 0), 0, Tag1 ("Safe_typing", 59)), 0); (("push_section_context", 1217), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "UContext"), "t"), 0, (0)), 100000000, 0, -135), (Tag3 ((("safe_transformer0", 1173)), 0, (0)), 100000000, 0, -134), 0), 100000000, 0, -133), 0, (("kernel/safe_typing.mli", 185, 6771, 6771), ("kernel/safe_typing.mli", 185, 6771, 6834), 0), 0, Tag1 ("Safe_typing", 60)), 0); (("start_module", 1218), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Label"), "t"), 0, (0)), 100000000, 0, -132), (Tag3 ((("safe_transformer", 1174)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -131)], (0)), 100000000, 0, -130), 0), 100000000, 0, -129), 0, (("kernel/safe_typing.mli", 189, 6878, 6878), ("kernel/safe_typing.mli", 189, 6878, 6934), 0), 0, Tag1 ("Safe_typing", 61)), 0); (("start_modtype", 1219), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Label"), "t"), 0, (0)), 100000000, 0, -128), (Tag3 ((("safe_transformer", 1174)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -127)], (0)), 100000000, 0, -126), 0), 100000000, 0, -125), 0, (("kernel/safe_typing.mli", 191, 6936, 6936), ("kernel/safe_typing.mli", 191, 6936, 6993), 0), 0, Tag1 ("Safe_typing", 62)), 0); (("add_module_parameter", 1220), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MBId"), "t"), 0, (0)), 100000000, 0, -124), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Entries")), "module_struct_entry"), 0, (0)), 100000000, 0, -123), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "inline"), 0, (0)), 100000000, 0, -122), (Tag3 ((("safe_transformer", 1174)), [(Tag3 (Tag1 ((Tag2 ("Mod_subst")), "delta_resolver"), 0, (0)), 100000000, 0, -121)], (0)), 100000000, 0, -120), 0), 100000000, 0, -119), 0), 100000000, 0, -118), 0), 100000000, 0, -117), 0, (("kernel/safe_typing.mli", 193, 6995, 6995), ("kernel/safe_typing.mli", 195, 7088, 7133), 0), 0, Tag1 ("Safe_typing", 63)), 0); (("module_num_parameters", 1221), ((Tag1 (0, (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -116), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -115)], (0)), 100000000, 0, -114), 0), 100000000, 0, -113), 0, (("kernel/safe_typing.mli", 199, 7281, 7281), ("kernel/safe_typing.mli", 199, 7281, 7337), 0), 0, Tag1 ("Safe_typing", 64)), 0); (("module_is_modtype", 1222), ((Tag1 (0, (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -112), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -111)], (0)), 100000000, 0, -110), 0), 100000000, 0, -109), 0, (("kernel/safe_typing.mli", 204, 7535, 7535), ("kernel/safe_typing.mli", 204, 7535, 7588), 0), 0, Tag1 ("Safe_typing", 65)), 0); (("allow_delayed_constants", 1223), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -108)], (0)), 100000000, 0, -107), 0, (("kernel/safe_typing.mli", 208, 7670, 7670), ("kernel/safe_typing.mli", 208, 7670, 7708), 0), 0, Tag1 ("Safe_typing", 66)), 0); (("end_module", 1224), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Label"), "t"), 0, (0)), 100000000, 0, -106), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Entries")), "module_struct_entry"), 0, (0)), 100000000, 0, -104); (Tag3 (Tag1 ((Tag2 ("Declarations")), "inline"), 0, (0)), 100000000, 0, -105)]), 100000000, 0, -103)], (0)), 100000000, 0, -102), (Tag3 ((("safe_transformer", 1174)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -98); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MBId"), "t"), 0, (0)), 100000000, 0, -100)], (0)), 100000000, 0, -99); (Tag3 (Tag1 ((Tag2 ("Mod_subst")), "delta_resolver"), 0, (0)), 100000000, 0, -101)]), 100000000, 0, -97)], (0)), 100000000, 0, -96), 0), 100000000, 0, -95), 0), 100000000, 0, -94), 0, (("kernel/safe_typing.mli", 212, 7780, 7780), ("kernel/safe_typing.mli", 214, 7872, 7945), 0), 0, Tag1 ("Safe_typing", 67)), 0); (("end_modtype", 1225), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Label"), "t"), 0, (0)), 100000000, 0, -93), (Tag3 ((("safe_transformer", 1174)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -90); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MBId"), "t"), 0, (0)), 100000000, 0, -92)], (0)), 100000000, 0, -91)]), 100000000, 0, -89)], (0)), 100000000, 0, -88), 0), 100000000, 0, -87), 0, (("kernel/safe_typing.mli", 216, 7947, 7947), ("kernel/safe_typing.mli", 216, 7947, 8018), 0), 0, Tag1 ("Safe_typing", 68)), 0); (("add_include", 1226), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Entries")), "module_struct_entry"), 0, (0)), 100000000, 0, -86), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -85), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "inline"), 0, (0)), 100000000, 0, -84), (Tag3 ((("safe_transformer", 1174)), [(Tag3 (Tag1 ((Tag2 ("Mod_subst")), "delta_resolver"), 0, (0)), 100000000, 0, -83)], (0)), 100000000, 0, -82), 0), 100000000, 0, -81), 0), 100000000, 0, -80), 0), 100000000, 0, -79), 0, (("kernel/safe_typing.mli", 218, 8020, 8020), ("kernel/safe_typing.mli", 220, 8102, 8146), 0), 0, Tag1 ("Safe_typing", 69)), 0); (("current_modpath", 1227), ((Tag1 (0, (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -78), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0, (("kernel/safe_typing.mli", 222, 8148, 8148), ("kernel/safe_typing.mli", 222, 8148, 8199), 0), 0, Tag1 ("Safe_typing", 70)), 0); (("current_dirpath", 1228), ((Tag1 (0, (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -75), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -74), 0), 100000000, 0, -73), 0, (("kernel/safe_typing.mli", 224, 8201, 8201), ("kernel/safe_typing.mli", 224, 8201, 8252), 0), 0, Tag1 ("Safe_typing", 71)), 0); Tag1 (("compiled_library", 1229), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("kernel/safe_typing.mli", 228, 8316, 8316), ("kernel/safe_typing.mli", 228, 8316, 8337), 0), 0, 0, 0, Tag1 ("Safe_typing", 72)), 1, 0); (("module_of_library", 1230), ((Tag1 (0, (Tag3 ((("compiled_library", 1229)), 0, (0)), 100000000, 0, -72), (Tag3 (Tag1 ((Tag2 ("Declarations")), "module_body"), 0, (0)), 100000000, 0, -71), 0), 100000000, 0, -70), 0, (("kernel/safe_typing.mli", 230, 8339, 8339), ("kernel/safe_typing.mli", 230, 8339, 8407), 0), 0, Tag1 ("Safe_typing", 73)), 0); (("univs_of_library", 1231), ((Tag1 (0, (Tag3 ((("compiled_library", 1229)), 0, (0)), 100000000, 0, -69), (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "ContextSet"), "t"), 0, (0)), 100000000, 0, -68), 0), 100000000, 0, -67), 0, (("kernel/safe_typing.mli", 231, 8408, 8408), ("kernel/safe_typing.mli", 231, 8408, 8468), 0), 0, Tag1 ("Safe_typing", 74)), 0); (("start_library", 1232), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -66), (Tag3 ((("safe_transformer", 1174)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -65)], (0)), 100000000, 0, -64), 0), 100000000, 0, -63), 0, (("kernel/safe_typing.mli", 233, 8470, 8470), ("kernel/safe_typing.mli", 233, 8470, 8529), 0), 0, Tag1 ("Safe_typing", 75)), 0); (("export", 1233), ((Tag1 (("output_native_objects"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -62), (Tag1 (0, (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -61), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -60), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -57); (Tag3 ((("compiled_library", 1229)), 0, (0)), 100000000, 0, -58); (Tag3 (Tag1 ((Tag2 ("Nativelib")), "native_library"), 0, (0)), 100000000, 0, -59)]), 100000000, 0, -56), 0), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("kernel/safe_typing.mli", 235, 8531, 8531), ("kernel/safe_typing.mli", 238, 8611, 8670), 0), 0, Tag1 ("Safe_typing", 76)), 0); (("import", 1234), ((Tag1 (0, (Tag3 ((("compiled_library", 1229)), 0, (0)), 100000000, 0, -52), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "ContextSet"), "t"), 0, (0)), 100000000, 0, -51), (Tag1 (0, (Tag3 ((("vodigest", 1164)), 0, (0)), 100000000, 0, -50), (Tag3 ((("safe_transformer", 1174)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -49)], (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0), 100000000, 0, -46), 0), 100000000, 0, -45), 0, (("kernel/safe_typing.mli", 241, 8728, 8728), ("kernel/safe_typing.mli", 242, 8794, 8822), 0), 0, Tag1 ("Safe_typing", 77)), 0); Tag1 (("judgment", 1235), (0, 0, [[(("jdg_env", 1102), 0, (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -42), (("kernel/safe_typing.mli", 247, 8885, 8887), ("kernel/safe_typing.mli", 247, 8885, 8914), 0), 0, Tag1 ("Safe_typing", 79)); (("jdg_val", 1103), 0, (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -43), (("kernel/safe_typing.mli", 248, 8915, 8917), ("kernel/safe_typing.mli", 248, 8915, 8941), 0), 0, Tag1 ("Safe_typing", 80)); (("jdg_type", 1104), 0, (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -44), (("kernel/safe_typing.mli", 249, 8942, 8944), ("kernel/safe_typing.mli", 249, 8942, 8968), 0), 0, Tag1 ("Safe_typing", 81))]], 0, 0, 0, 0, 0, 0, (("kernel/safe_typing.mli", 246, 8859, 8859), ("kernel/safe_typing.mli", 250, 8969, 8970), 0), 0, 0, 0, Tag1 ("Safe_typing", 78)), 1, 0); (("typing", 1236), ((Tag1 (0, (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -41), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -40), (Tag3 ((("judgment", 1235)), 0, (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0), 100000000, 0, -37), 0, (("kernel/safe_typing.mli", 253, 9032, 9032), ("kernel/safe_typing.mli", 253, 9032, 9090), 0), 0, Tag1 ("Safe_typing", 82)), 0); (("exists_objlabel", 1237), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Label"), "t"), 0, (0)), 100000000, 0, -36), (Tag1 (0, (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -35), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -34), 0), 100000000, 0, -33), 0), 100000000, 0, -32), 0, (("kernel/safe_typing.mli", 257, 9113, 9113), ("kernel/safe_typing.mli", 257, 9113, 9170), 0), 0, Tag1 ("Safe_typing", 83)), 0); (("delta_of_senv", 1238), ((Tag1 (0, (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -31), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Mod_subst")), "delta_resolver"), 0, (0)), 100000000, 0, -29); (Tag3 (Tag1 ((Tag2 ("Mod_subst")), "delta_resolver"), 0, (0)), 100000000, 0, -30)]), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("kernel/safe_typing.mli", 259, 9172, 9172), ("kernel/safe_typing.mli", 260, 9192, 9265), 0), 0, Tag1 ("Safe_typing", 84)), 0); (("constant_of_delta_kn_senv", 1239), ((Tag1 (0, (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -26), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -25), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("kernel/safe_typing.mli", 262, 9267, 9267), ("kernel/safe_typing.mli", 262, 9267, 9342), 0), 0, Tag1 ("Safe_typing", 85)), 0); (("mind_of_delta_kn_senv", 1240), ((Tag1 (0, (Tag3 ((("safe_environment", 1166)), 0, (0)), 100000000, 0, -21), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -20), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MutInd"), "t"), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("kernel/safe_typing.mli", 263, 9343, 9343), ("kernel/safe_typing.mli", 263, 9343, 9412), 0), 0, Tag1 ("Safe_typing", 86)), 0); (("register_inline", 1241), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -16), (Tag3 ((("safe_transformer0", 1173)), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("kernel/safe_typing.mli", 267, 9460, 9460), ("kernel/safe_typing.mli", 267, 9460, 9513), 0), 0, Tag1 ("Safe_typing", 87)), 0); (("register_inductive", 1242), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CPrimitives")), "prim_ind"), [((("a")), 100000000, 0, -12)], (0)), 100000000, 0, -11), (Tag3 ((("safe_transformer0", 1173)), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("kernel/safe_typing.mli", 268, 9514, 9514), ("kernel/safe_typing.mli", 268, 9514, 9596), 0), 0, Tag1 ("Safe_typing", 88)), 0); (("set_strategy", 1243), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "tableKey"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -7)], (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Conv_oracle")), "level"), 0, (0)), 100000000, 0, -5), (Tag3 ((("safe_transformer0", 1173)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("kernel/safe_typing.mli", 270, 9598, 9598), ("kernel/safe_typing.mli", 271, 9617, 9692), 0), 0, Tag1 ("Safe_typing", 89)), 0)], "Safe_typing", [("Safe_typing", (")\250?\164\145\132\241\127\186\152h+\145\"\237l")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("Section", ("\245\207\b\021\142v=\155#w\246}\"4b\006")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("Nativevalues", ("8:\007\025e\226c,\001\171\146#l\210\171\152")); ("Nativelib", ("V\239\205Y1\147E:,\176\196Hy\1483|")); ("Nativecode", ("\190\185\255\006m\012\210\163\138Rz\247\15283\183")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Genlambda", ("\170}\024\241\141\222\136S\169\219\2212i\134KI")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CDebug", ("^4\210p7\239!3\138\138\213?\239`\250\157")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
Names.Constant.t Names.tableKey -> Conv_oracle.level -> safe_transformer0
