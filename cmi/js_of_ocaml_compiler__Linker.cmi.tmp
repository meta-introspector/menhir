module Fragment :
  sig
    type t
    val provides : t -> string list
    val parse_file : string -> t list
    val parse_string : string -> t list
    val parse_builtin : Js_of_ocaml_compiler.Builtins.File.t -> t list
    val pack : t -> t
  end
val reset : unit -> unit
val load_files :
  target_env:Js_of_ocaml_compiler.Target_env.t -> string list -> unit
val load_fragments :
  target_env:Js_of_ocaml_compiler.Target_env.t ->
  filename:string -> Fragment.t list -> unit
val check_deps : unit -> unit
type state
type always_required = {
  filename : string;
  program : Js_of_ocaml_compiler.Javascript.program;
  requires : string list;
}
type output = {
  runtime_code : Js_of_ocaml_compiler.Javascript.program;
  always_required_codes : always_required list;
}
val init : unit -> state
val resolve_deps :
  ?linkall:bool ->
  state ->
  Js_of_ocaml_compiler.Stdlib.StringSet.t ->
  state * Js_of_ocaml_compiler.Stdlib.StringSet.t
val link : Js_of_ocaml_compiler.Javascript.program -> state -> output
val get_provided : unit -> Js_of_ocaml_compiler.Stdlib.StringSet.t
val all : state -> string list("DEBUG:rule", [Tag3 (("Fragment", 670), 0, (Tag1 ([Tag1 (("t", 684), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("compiler/lib/linker.mli", 24, 959, 961), ("compiler/lib/linker.mli", 24, 959, 967), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Linker", 0)), 1, 0); (("provides", 685), ((Tag1 (0, (Tag3 ((("t", 684)), 0, (0)), 100000000, 0, -76), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -75)], (0)), 100000000, 0, -74), 0), 100000000, 0, -73), 0, (("compiler/lib/linker.mli", 26, 969, 971), ("compiler/lib/linker.mli", 26, 969, 1002), 0), 0, Tag1 ("Js_of_ocaml_compiler__Linker", 1)), 0); (("parse_file", 686), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -72), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 684)), 0, (0)), 100000000, 0, -71)], (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0, (("compiler/lib/linker.mli", 28, 1004, 1006), ("compiler/lib/linker.mli", 28, 1004, 1039), 0), 0, Tag1 ("Js_of_ocaml_compiler__Linker", 2)), 0); (("parse_string", 687), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -68), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 684)), 0, (0)), 100000000, 0, -67)], (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("compiler/lib/linker.mli", 30, 1041, 1043), ("compiler/lib/linker.mli", 30, 1041, 1078), 0), 0, Tag1 ("Js_of_ocaml_compiler__Linker", 3)), 0); (("parse_builtin", 688), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Builtins"), "File"), "t"), 0, (0)), 100000000, 0, -64), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 684)), 0, (0)), 100000000, 0, -63)], (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("compiler/lib/linker.mli", 32, 1080, 1082), ("compiler/lib/linker.mli", 32, 1080, 1127), 0), 0, Tag1 ("Js_of_ocaml_compiler__Linker", 4)), 0); (("pack", 689), ((Tag1 (0, (Tag3 ((("t", 684)), 0, (0)), 100000000, 0, -60), (Tag3 ((("t", 684)), 0, (0)), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("compiler/lib/linker.mli", 34, 1129, 1131), ("compiler/lib/linker.mli", 34, 1129, 1148), 0), 0, Tag1 ("Js_of_ocaml_compiler__Linker", 5)), 0)]), 0, (("compiler/lib/linker.mli", 23, 937, 937), ("compiler/lib/linker.mli", 35, 1149, 1152), 0), Tag1 ("Js_of_ocaml_compiler__Linker", 6)), 0, 0); (("reset", 671), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -57), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -56), 0), 100000000, 0, -55), 0, (("compiler/lib/linker.mli", 37, 1154, 1154), ("compiler/lib/linker.mli", 37, 1154, 1178), 0), 0, Tag1 ("Js_of_ocaml_compiler__Linker", 7)), 0); (("load_files", 672), ((Tag1 (("target_env"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Target_env"), "t"), 0, (0)), 100000000, 0, -54), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -53)], (0)), 100000000, 0, -52), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -51), 0), 100000000, 0, -50), 0), 100000000, 0, -49), 0, (("compiler/lib/linker.mli", 39, 1180, 1180), ("compiler/lib/linker.mli", 39, 1180, 1243), 0), 0, Tag1 ("Js_of_ocaml_compiler__Linker", 8)), 0); (("load_fragments", 673), ((Tag1 (("target_env"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Target_env"), "t"), 0, (0)), 100000000, 0, -48), (Tag1 (("filename"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -47), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Fragment", 670)), "t"), 0, (0)), 100000000, 0, -46)], (0)), 100000000, 0, -45), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("compiler/lib/linker.mli", 41, 1245, 1245), ("compiler/lib/linker.mli", 41, 1245, 1335), 0), 0, Tag1 ("Js_of_ocaml_compiler__Linker", 9)), 0); (("check_deps", 674), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -40), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("compiler/lib/linker.mli", 43, 1337, 1337), ("compiler/lib/linker.mli", 43, 1337, 1366), 0), 0, Tag1 ("Js_of_ocaml_compiler__Linker", 10)), 0); Tag1 (("state", 675), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("compiler/lib/linker.mli", 45, 1368, 1368), ("compiler/lib/linker.mli", 45, 1368, 1378), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Linker", 11)), 1, 0); Tag1 (("always_required", 676), (0, 0, [[(("filename", 416), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -34), (("compiler/lib/linker.mli", 48, 1403, 1407), ("compiler/lib/linker.mli", 49, 1425, 1428), 0), 0, Tag1 ("Js_of_ocaml_compiler__Linker", 14)); (("program", 491), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Javascript"), "program"), 0, (0)), 100000000, 0, -35), (("compiler/lib/linker.mli", 49, 1425, 1429), ("compiler/lib/linker.mli", 50, 1458, 1461), 0), 0, Tag1 ("Js_of_ocaml_compiler__Linker", 15)); (("requires", 492), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -37)], (0)), 100000000, 0, -36), (("compiler/lib/linker.mli", 50, 1458, 1462), ("compiler/lib/linker.mli", 50, 1458, 1484), 0), 0, Tag1 ("Js_of_ocaml_compiler__Linker", 16))]], 1, 0, 0, 0, 0, 0, (("compiler/lib/linker.mli", 47, 1380, 1380), ("compiler/lib/linker.mli", 51, 1485, 1488), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Linker", 12)), 1, 0); Tag1 (("output", 677), (0, 0, [[(("runtime_code", 568), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Javascript"), "program"), 0, (0)), 100000000, 0, -31), (("compiler/lib/linker.mli", 54, 1504, 1508), ("compiler/lib/linker.mli", 55, 1542, 1545), 0), 0, Tag1 ("Js_of_ocaml_compiler__Linker", 19)); (("always_required_codes", 569), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("always_required", 676)), 0, (0)), 100000000, 0, -33)], (0)), 100000000, 0, -32), (("compiler/lib/linker.mli", 55, 1542, 1546), ("compiler/lib/linker.mli", 55, 1542, 1590), 0), 0, Tag1 ("Js_of_ocaml_compiler__Linker", 20))]], 1, 0, 0, 0, 0, 0, (("compiler/lib/linker.mli", 53, 1490, 1490), ("compiler/lib/linker.mli", 56, 1591, 1594), 0), 0, 0, 0, Tag1 ("Js_of_ocaml_compiler__Linker", 18)), 1, 0); (("init", 678), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -30), (Tag3 ((("state", 675)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("compiler/lib/linker.mli", 58, 1596, 1596), ("compiler/lib/linker.mli", 58, 1596, 1620), 0), 0, Tag1 ("Js_of_ocaml_compiler__Linker", 21)), 0); (("resolve_deps", 679), ((Tag1 (Tag1 ("linkall"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -27)], (0)), 100000000, 0, -26), (Tag1 (0, (Tag3 ((("state", 675)), 0, (0)), 100000000, 0, -25), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Stdlib"), "StringSet"), "t"), 0, (0)), 100000000, 0, -24), (Tag2 ([(Tag3 ((("state", 675)), 0, (0)), 100000000, 0, -22); (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Stdlib"), "StringSet"), "t"), 0, (0)), 100000000, 0, -23)]), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("compiler/lib/linker.mli", 60, 1622, 1622), ("compiler/lib/linker.mli", 60, 1622, 1701), 0), 0, Tag1 ("Js_of_ocaml_compiler__Linker", 22)), 0); (("link", 680), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Javascript"), "program"), 0, (0)), 100000000, 0, -17), (Tag1 (0, (Tag3 ((("state", 675)), 0, (0)), 100000000, 0, -16), (Tag3 ((("output", 677)), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("compiler/lib/linker.mli", 62, 1703, 1703), ("compiler/lib/linker.mli", 62, 1703, 1751), 0), 0, Tag1 ("Js_of_ocaml_compiler__Linker", 23)), 0); (("get_provided", 681), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -12), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Js_of_ocaml_compiler")), "Stdlib"), "StringSet"), "t"), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("compiler/lib/linker.mli", 64, 1753, 1753), ("compiler/lib/linker.mli", 64, 1753, 1791), 0), 0, Tag1 ("Js_of_ocaml_compiler__Linker", 24)), 0); (("all", 682), ((Tag1 (0, (Tag3 ((("state", 675)), 0, (0)), 100000000, 0, -9), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8)], (0)), 100000000, 0, -7), 0), 100000000, 0, -6), 0, (("compiler/lib/linker.mli", 66, 1793, 1793), ("compiler/lib/linker.mli", 66, 1793, 1823), 0), 0, Tag1 ("Js_of_ocaml_compiler__Linker", 25)), 0); (("origin", 683), ((Tag1 (("name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4)], (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("compiler/lib/linker.mli", 68, 1825, 1825), ("compiler/lib/linker.mli", 68, 1825, 1866), 0), 0, Tag1 ("Js_of_ocaml_compiler__Linker", 26)), 0)], "Js_of_ocaml_compiler__Linker", [("Js_of_ocaml_compiler__Linker", ("\162TiKX\016\212\131/\022cm\239\237g\014")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__StringLabels", ("\134F\024\226\216Is#\223\230\234\169Z\206Gc")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Random", ("\020\005Xq\171\026\218\152X\135\254\023\133zK\200")); ("Stdlib__Printf", ("\215<\139]\021\142\224E\245m\198qc(W\229")); ("Stdlib__Printexc", ("\217u\168\235\179oi\167\235\255\025\017%d\192s")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__ListLabels", ("*\194\012\191\020%\170\249m\002\180\178hk\205\220")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Fun", ("\234t\181\000iQ\251,\b\020$\224\233\160\142\210")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Filename", ("z\163\210n\195\247\255\129\029SI\180\152\141h ")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Char", ("\1794\1468\190\138\150g\231\240\140d\191.\212e")); ("Stdlib__BytesLabels", ("\145\128\000\239\186Z.\0310^\247\201\174\\\137R")); ("Stdlib__Bytes", ("C\134\194)\175\222\137p\205\246\244\r\241\164P\209")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__ArrayLabels", ("\029\143d\025\218v\003\007\212jC\235/\205\006\198")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Js_of_ocaml_compiler__Target_env", ("rt\029w\213\189\012\133J\223_\029\156T9\229")); ("Js_of_ocaml_compiler__Stdlib", ("\162;P\232\137\003\012\252\217E\227\201\001\204\163j")); ("Js_of_ocaml_compiler__Primitive", ("\131\186\144\175\240\170t#\016p\219\012\\\020\211b")); ("Js_of_ocaml_compiler__Parse_info", ("`+\018\231C(v\197\016 .\222N\n\219\229")); ("Js_of_ocaml_compiler__Js_token", ("x\209\213\210\201\210\166u\150\014\024\249Q\184\161\216")); ("Js_of_ocaml_compiler__Javascript", ("\155\213x*\244\2451\153\243\178\151\133\019\173^:")); ("Js_of_ocaml_compiler__Code", ("\016a\196PfGPO\142UB\129\019g#\027")); ("Js_of_ocaml_compiler__Builtins", ("h\236\000\018\144\217C\235\189\141M[f\159\196\r")); ("Js_of_ocaml_compiler", ("\140\150\022\231\129$!^\139\156\170\236r\184~q")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val origin : name:string -> string option
