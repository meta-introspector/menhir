exception Error of string
val fail : Lexing.lexbuf -> 'a
val __ocaml_lex_tables : Lexing.lex_tables
val main : Lexing.lexbuf -> ((string * string) * (string * string) list) list
val __ocaml_lex_main_rec :
  Lexing.lexbuf -> int -> ((string * string) * (string * string) list) list
val collect :
  (string * string) list -> Lexing.lexbuf -> (string * string) list
val __ocaml_lex_collect_rec :
  ("DEBUG:rule", [Tag2 (("Error", 552), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -26)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Dune__exe__Lexdep", 0)), 2, 0); (("fail", 553), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -25), ((0), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("src/lexdep.mll", 23, 89, 95), ("src/lexdep.mll", 23, 89, 99), 0), 0, Tag1 ("Dune__exe__Lexdep", 1)), 0); (("__ocaml_lex_tables", 554), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lex_tables"), 0, (0)), 100000000, 0, -22), 0, (("src/lexdep.ml", 17, 285, 289), ("src/lexdep.ml", 17, 285, 307), 0), 0, Tag1 ("Dune__exe__Lexdep", 3)), 0); (("main", 555), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -18); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -19)]), 100000000, 0, -17); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8)]), 100000000, 0, -6)], (0)), 100000000, 0, -5)]), 100000000, 0, -16)], (0)), 100000000, 0, -15), 0), 100000000, 0, -21), 0, (("src/lexdep.ml", 244, 15141, 15149), ("src/lexdep.ml", 244, 15141, 15153), 0), 0, Tag1 ("Dune__exe__Lexdep", 4)), 0); (("__ocaml_lex_main_rec", 556), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -20), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -18); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -19)]), 100000000, 0, -17); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8)]), 100000000, 0, -6)], (0)), 100000000, 0, -5)]), 100000000, 0, -16)], (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("src/lexdep.ml", 246, 15239, 15243), ("src/lexdep.ml", 246, 15239, 15263), 0), 0, Tag1 ("Dune__exe__Lexdep", 5)), 0); (("collect", 557), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8)]), 100000000, 0, -6)], (0)), 100000000, 0, -5), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8)]), 100000000, 0, -6)], (0)), 100000000, 0, -5), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("src/lexdep.ml", 277, 16141, 16145), ("src/lexdep.ml", 277, 16141, 16152), 0), 0, Tag1 ("Dune__exe__Lexdep", 6)), 0); (("__ocaml_lex_collect_rec", 558), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8)]), 100000000, 0, -6)], (0)), 100000000, 0, -5), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -9), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8)]), 100000000, 0, -6)], (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/lexdep.ml", 279, 16250, 16254), ("src/lexdep.ml", 279, 16250, 16277), 0), 0, Tag1 ("Dune__exe__Lexdep", 7)), 0)], "Dune__exe__Lexdep", [("Dune__exe__Lexdep", ("~\144w\026@\208]NyTM0vT\153n")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Printf", ("\215<\139]\021\142\224E\245m\198qc(W\229")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("MenhirSdk", ("F\232\012\196l\143\145[\255\2193U\197\027\176\139")); ("Dune__exe", ("\137\000\197\175$\007]\218\141\248\172\212\146c\153\212")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
(string * string) list -> Lexing.lexbuf -> int -> (string * string) list
