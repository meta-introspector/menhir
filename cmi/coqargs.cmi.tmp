val default_toplevel : Names.DirPath.t
type native_compiler =
  Coq_config.native_compiler =
    NativeOff
  | NativeOn of { ondemand : bool; }
type top = TopLogical of Names.DirPath.t | TopPhysical of string
type option_command =
    OptionSet of string option
  | OptionUnset
  | OptionAppend of string
type require_injection = {
  lib : string;
  prefix : string option;
  export : Lib.export_flag option;
}
type injection_command =
    OptionInjection of (Goptions.option_name * option_command)
  | RequireInjection of require_injection
  | WarnNoNative of string
  | WarnNativeDeprecated
type coqargs_logic_config = {
  impredicative_set : bool;
  indices_matter : bool;
  type_in_type : bool;
  toplevel_name : top;
}
type time_config = ToFeedback | ToFile of string
type coqargs_config = {
  logic : coqargs_logic_config;
  rcfile : string option;
  coqlib : string option;
  enable_VM : bool;
  native_compiler : native_compiler;
  native_output_dir : CUnix.physical_path;
  native_include_dirs : CUnix.physical_path list;
  time : time_config option;
  print_emacs : bool;
}
type coqargs_pre = {
  boot : bool;
  load_init : bool;
  load_rcfile : bool;
  ml_includes : CUnix.physical_path list;
  vo_includes : Loadpath.vo_path list;
  load_vernacular_list : (string * bool) list;
  injections : injection_command list;
}
type coqargs_query =
    PrintWhere
  | PrintConfig
  | PrintVersion
  | PrintMachineReadableVersion
  | PrintHelp of Boot.Usage.specific_usage
type coqargs_main = Queries of coqargs_query list | Run
type coqargs_post = { memory_stat : bool; }
type t = {
  config : coqargs_config;
  pre : coqargs_pre;
  main : coqargs_main;
  post : coqargs_post;
}
val default : t
val parse_args :
  usage:Boot.Usage.specific_usage -> init:t -> string list -> t * string list
val injection_commands : t -> injection_command list
val dirpath_of_top : top -> Names.DirPath.t
val get_int : opt:string -> string -> int
val get_int_opt : opt:string -> string -> int option
val get_bool : opt:string -> string -> bool
val get_float : opt:string -> string -> float
val error_missing_arg : string -> 'a
val error_wrong_arg : string -> 'a
("DEBUG:rule", [(("default_toplevel", 599), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -109), 0, (("sysinit/coqargs.mli", 11, 676, 676), ("sysinit/coqargs.mli", 11, 676, 714), 0), 0, Tag1 ("Coqargs", 0)), 0); Tag1 (("native_compiler", 600), (0, 0, Tag1 ([(("NativeOff", 368), (0), 0, (("sysinit/coqargs.mli", 14, 768, 770), ("sysinit/coqargs.mli", 14, 768, 779), 0), 0, Tag1 ("Coqargs", 2)); (("NativeOn", 369), Tag1 ([(("ondemand", 370), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -108), (("sysinit/coqargs.mli", 14, 768, 796), ("sysinit/coqargs.mli", 14, 768, 811), 0), 0, Tag1 ("Coqargs", 3))]), 0, (("sysinit/coqargs.mli", 14, 768, 780), ("sysinit/coqargs.mli", 14, 768, 813), 0), 0, Tag1 ("Coqargs", 4))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Coq_config")), "native_compiler"), 0, (0)), 100000000, 0, -107)), 0, 0, 0, 0, (("sysinit/coqargs.mli", 13, 716, 716), ("sysinit/coqargs.mli", 14, 768, 813), 0), 0, 0, 0, Tag1 ("Coqargs", 1)), 1, 0); Tag1 (("top", 601), (0, 0, Tag1 ([(("TopLogical", 399), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -105)]), 0, (("sysinit/coqargs.mli", 16, 815, 826), ("sysinit/coqargs.mli", 16, 815, 855), 0), 0, Tag1 ("Coqargs", 12)); (("TopPhysical", 400), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -106)]), 0, (("sysinit/coqargs.mli", 16, 815, 856), ("sysinit/coqargs.mli", 16, 815, 879), 0), 0, Tag1 ("Coqargs", 13))], 0), 1, 0, 0, 0, 0, 0, (("sysinit/coqargs.mli", 16, 815, 815), ("sysinit/coqargs.mli", 16, 815, 879), 0), 0, 0, 0, Tag1 ("Coqargs", 11)), 1, 0); Tag1 (("option_command", 602), (0, 0, Tag1 ([(("OptionSet", 402), ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -103)], (0)), 100000000, 0, -102)]), 0, (("sysinit/coqargs.mli", 19, 903, 905), ("sysinit/coqargs.mli", 19, 903, 933), 0), 0, Tag1 ("Coqargs", 15)); (("OptionUnset", 403), (0), 0, (("sysinit/coqargs.mli", 20, 934, 936), ("sysinit/coqargs.mli", 20, 934, 949), 0), 0, Tag1 ("Coqargs", 16)); (("OptionAppend", 404), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -104)]), 0, (("sysinit/coqargs.mli", 21, 950, 952), ("sysinit/coqargs.mli", 21, 950, 976), 0), 0, Tag1 ("Coqargs", 17))], 0), 1, 0, 0, 0, 0, 0, (("sysinit/coqargs.mli", 18, 881, 881), ("sysinit/coqargs.mli", 21, 950, 976), 0), 0, 0, 0, Tag1 ("Coqargs", 14)), 1, 0); Tag1 (("require_injection", 603), (0, 0, [[(("lib", 406), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -97), (("sysinit/coqargs.mli", 23, 978, 1005), ("sysinit/coqargs.mli", 23, 978, 1017), 0), 0, Tag1 ("Coqargs", 19)); (("prefix", 407), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -99)], (0)), 100000000, 0, -98), (("sysinit/coqargs.mli", 23, 978, 1018), ("sysinit/coqargs.mli", 23, 978, 1040), 0), 0, Tag1 ("Coqargs", 20)); (("export", 450), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Lib")), "export_flag"), 0, (0)), 100000000, 0, -101)], (0)), 100000000, 0, -100), (("sysinit/coqargs.mli", 23, 978, 1041), ("sysinit/coqargs.mli", 23, 978, 1072), 0), 0, Tag1 ("Coqargs", 21))]], 1, 0, 0, 0, 0, 0, (("sysinit/coqargs.mli", 23, 978, 978), ("sysinit/coqargs.mli", 23, 978, 1074), 0), 0, 0, 0, Tag1 ("Coqargs", 18)), 1, 0); Tag1 (("injection_command", 604), (0, 0, Tag1 ([(("OptionInjection", 452), ([(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Goptions")), "option_name"), 0, (0)), 100000000, 0, -93); (Tag3 ((("option_command", 602)), 0, (0)), 100000000, 0, -94)]), 100000000, 0, -92)]), 0, (("sysinit/coqargs.mli", 29, 1305, 1307), ("sysinit/coqargs.mli", 29, 1305, 1367), 0), 0, Tag1 ("Coqargs", 23)); (("RequireInjection", 498), ([(Tag3 ((("require_injection", 603)), 0, (0)), 100000000, 0, -95)]), 0, (("sysinit/coqargs.mli", 31, 1433, 1435), ("sysinit/coqargs.mli", 31, 1433, 1474), 0), 0, Tag1 ("Coqargs", 24)); (("WarnNoNative", 499), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -96)]), 0, (("sysinit/coqargs.mli", 34, 1543, 1545), ("sysinit/coqargs.mli", 34, 1543, 1569), 0), 0, Tag1 ("Coqargs", 25)); (("WarnNativeDeprecated", 500), (0), 0, (("sysinit/coqargs.mli", 39, 1820, 1822), ("sysinit/coqargs.mli", 39, 1820, 1844), 0), 0, Tag1 ("Coqargs", 26))], 0), 1, 0, 0, 0, 0, 0, (("sysinit/coqargs.mli", 28, 1280, 1280), ("sysinit/coqargs.mli", 39, 1820, 1844), 0), 0, 0, 0, Tag1 ("Coqargs", 22)), 1, 0); Tag1 (("coqargs_logic_config", 605), (0, 0, [[(("impredicative_set", 502), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -88), (("sysinit/coqargs.mli", 44, 2012, 2014), ("sysinit/coqargs.mli", 44, 2012, 2039), 0), 0, Tag1 ("Coqargs", 28)); (("indices_matter", 503), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -89), (("sysinit/coqargs.mli", 45, 2040, 2042), ("sysinit/coqargs.mli", 45, 2040, 2067), 0), 0, Tag1 ("Coqargs", 29)); (("type_in_type", 504), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -90), (("sysinit/coqargs.mli", 46, 2068, 2070), ("sysinit/coqargs.mli", 46, 2068, 2095), 0), 0, Tag1 ("Coqargs", 30)); (("toplevel_name", 505), 0, (Tag3 ((("top", 601)), 0, (0)), 100000000, 0, -91), (("sysinit/coqargs.mli", 47, 2096, 2098), ("sysinit/coqargs.mli", 47, 2096, 2122), 0), 0, Tag1 ("Coqargs", 31))]], 1, 0, 0, 0, 0, 0, (("sysinit/coqargs.mli", 43, 1982, 1982), ("sysinit/coqargs.mli", 48, 2123, 2124), 0), 0, 0, 0, Tag1 ("Coqargs", 27)), 1, 0); Tag1 (("time_config", 606), (0, 0, Tag1 ([(("ToFeedback", 507), (0), 0, (("sysinit/coqargs.mli", 50, 2126, 2145), ("sysinit/coqargs.mli", 50, 2126, 2155), 0), 0, Tag1 ("Coqargs", 33)); (("ToFile", 508), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -87)]), 0, (("sysinit/coqargs.mli", 50, 2126, 2156), ("sysinit/coqargs.mli", 50, 2126, 2174), 0), 0, Tag1 ("Coqargs", 34))], 0), 1, 0, 0, 0, 0, 0, (("sysinit/coqargs.mli", 50, 2126, 2126), ("sysinit/coqargs.mli", 50, 2126, 2174), 0), 0, 0, 0, Tag1 ("Coqargs", 32)), 1, 0); Tag1 (("coqargs_config", 607), (0, 0, [[(("logic", 510), 0, (Tag3 ((("coqargs_logic_config", 605)), 0, (0)), 100000000, 0, -74), (("sysinit/coqargs.mli", 53, 2200, 2202), ("sysinit/coqargs.mli", 53, 2200, 2237), 0), 0, Tag1 ("Coqargs", 36)); (("rcfile", 511), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -76)], (0)), 100000000, 0, -75), (("sysinit/coqargs.mli", 54, 2238, 2240), ("sysinit/coqargs.mli", 54, 2238, 2268), 0), 0, Tag1 ("Coqargs", 37)); (("coqlib", 512), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -78)], (0)), 100000000, 0, -77), (("sysinit/coqargs.mli", 55, 2269, 2271), ("sysinit/coqargs.mli", 55, 2269, 2299), 0), 0, Tag1 ("Coqargs", 38)); (("enable_VM", 513), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -79), (("sysinit/coqargs.mli", 56, 2300, 2302), ("sysinit/coqargs.mli", 56, 2300, 2321), 0), 0, Tag1 ("Coqargs", 39)); (("native_compiler", 514), 0, (Tag3 ((("native_compiler", 600)), 0, (0)), 100000000, 0, -80), (("sysinit/coqargs.mli", 57, 2322, 2324), ("sysinit/coqargs.mli", 57, 2322, 2358), 0), 0, Tag1 ("Coqargs", 40)); (("native_output_dir", 532), 0, (Tag3 (Tag1 ((Tag2 ("CUnix")), "physical_path"), 0, (0)), 100000000, 0, -81), (("sysinit/coqargs.mli", 58, 2359, 2361), ("sysinit/coqargs.mli", 58, 2359, 2401), 0), 0, Tag1 ("Coqargs", 41)); (("native_include_dirs", 533), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("CUnix")), "physical_path"), 0, (0)), 100000000, 0, -83)], (0)), 100000000, 0, -82), (("sysinit/coqargs.mli", 59, 2402, 2404), ("sysinit/coqargs.mli", 59, 2402, 2451), 0), 0, Tag1 ("Coqargs", 42)); (("time", 534), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("time_config", 606)), 0, (0)), 100000000, 0, -85)], (0)), 100000000, 0, -84), (("sysinit/coqargs.mli", 60, 2452, 2454), ("sysinit/coqargs.mli", 60, 2452, 2487), 0), 0, Tag1 ("Coqargs", 43)); (("print_emacs", 535), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -86), (("sysinit/coqargs.mli", 61, 2488, 2490), ("sysinit/coqargs.mli", 61, 2488, 2509), 0), 0, Tag1 ("Coqargs", 44))]], 1, 0, 0, 0, 0, 0, (("sysinit/coqargs.mli", 52, 2176, 2176), ("sysinit/coqargs.mli", 62, 2510, 2511), 0), 0, 0, 0, Tag1 ("Coqargs", 35)), 1, 0); Tag1 (("coqargs_pre", 608), (0, 0, [[(("boot", 537), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -61), (("sysinit/coqargs.mli", 65, 2534, 2536), ("sysinit/coqargs.mli", 65, 2534, 2555), 0), 0, Tag1 ("Coqargs", 46)); (("load_init", 538), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -62), (("sysinit/coqargs.mli", 66, 2556, 2558), ("sysinit/coqargs.mli", 66, 2556, 2577), 0), 0, Tag1 ("Coqargs", 47)); (("load_rcfile", 539), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -63), (("sysinit/coqargs.mli", 67, 2578, 2580), ("sysinit/coqargs.mli", 67, 2578, 2599), 0), 0, Tag1 ("Coqargs", 48)); (("ml_includes", 540), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("CUnix")), "physical_path"), 0, (0)), 100000000, 0, -65)], (0)), 100000000, 0, -64), (("sysinit/coqargs.mli", 69, 2601, 2603), ("sysinit/coqargs.mli", 69, 2601, 2642), 0), 0, Tag1 ("Coqargs", 49)); (("vo_includes", 557), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Loadpath")), "vo_path"), 0, (0)), 100000000, 0, -67)], (0)), 100000000, 0, -66), (("sysinit/coqargs.mli", 70, 2643, 2645), ("sysinit/coqargs.mli", 70, 2643, 2681), 0), 0, Tag1 ("Coqargs", 50)); (("load_vernacular_list", 558), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -70); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -71)]), 100000000, 0, -69)], (0)), 100000000, 0, -68), (("sysinit/coqargs.mli", 72, 2683, 2685), ("sysinit/coqargs.mli", 72, 2683, 2729), 0), 0, Tag1 ("Coqargs", 51)); (("injections", 559), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("injection_command", 604)), 0, (0)), 100000000, 0, -73)], (0)), 100000000, 0, -72), (("sysinit/coqargs.mli", 73, 2730, 2732), ("sysinit/coqargs.mli", 73, 2730, 2769), 0), 0, Tag1 ("Coqargs", 52))]], 1, 0, 0, 0, 0, 0, (("sysinit/coqargs.mli", 64, 2513, 2513), ("sysinit/coqargs.mli", 74, 2770, 2771), 0), 0, 0, 0, Tag1 ("Coqargs", 45)), 1, 0); Tag1 (("coqargs_query", 609), (0, 0, Tag1 ([(("PrintWhere", 561), (0), 0, (("sysinit/coqargs.mli", 77, 2794, 2796), ("sysinit/coqargs.mli", 77, 2794, 2808), 0), 0, Tag1 ("Coqargs", 54)); (("PrintConfig", 562), (0), 0, (("sysinit/coqargs.mli", 77, 2794, 2809), ("sysinit/coqargs.mli", 77, 2794, 2822), 0), 0, Tag1 ("Coqargs", 55)); (("PrintVersion", 563), (0), 0, (("sysinit/coqargs.mli", 78, 2823, 2825), ("sysinit/coqargs.mli", 78, 2823, 2839), 0), 0, Tag1 ("Coqargs", 56)); (("PrintMachineReadableVersion", 564), (0), 0, (("sysinit/coqargs.mli", 78, 2823, 2840), ("sysinit/coqargs.mli", 78, 2823, 2869), 0), 0, Tag1 ("Coqargs", 57)); (("PrintHelp", 565), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Boot")), "Usage"), "specific_usage"), 0, (0)), 100000000, 0, -60)]), 0, (("sysinit/coqargs.mli", 79, 2870, 2872), ("sysinit/coqargs.mli", 79, 2870, 2912), 0), 0, Tag1 ("Coqargs", 58))], 0), 1, 0, 0, 0, 0, 0, (("sysinit/coqargs.mli", 76, 2773, 2773), ("sysinit/coqargs.mli", 79, 2870, 2912), 0), 0, 0, 0, Tag1 ("Coqargs", 53)), 1, 0); Tag1 (("coqargs_main", 610), (0, 0, Tag1 ([(("Queries", 579), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("coqargs_query", 609)), 0, (0)), 100000000, 0, -59)], (0)), 100000000, 0, -58)]), 0, (("sysinit/coqargs.mli", 82, 2934, 2936), ("sysinit/coqargs.mli", 82, 2934, 2967), 0), 0, Tag1 ("Coqargs", 60)); (("Run", 580), (0), 0, (("sysinit/coqargs.mli", 83, 2968, 2970), ("sysinit/coqargs.mli", 83, 2968, 2975), 0), 0, Tag1 ("Coqargs", 61))], 0), 1, 0, 0, 0, 0, 0, (("sysinit/coqargs.mli", 81, 2914, 2914), ("sysinit/coqargs.mli", 83, 2968, 2975), 0), 0, 0, 0, Tag1 ("Coqargs", 59)), 1, 0); Tag1 (("coqargs_post", 611), (0, 0, [[(("memory_stat", 582), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -57), (("sysinit/coqargs.mli", 86, 2999, 3001), ("sysinit/coqargs.mli", 86, 2999, 3020), 0), 0, Tag1 ("Coqargs", 63))]], 1, 0, 0, 0, 0, 0, (("sysinit/coqargs.mli", 85, 2977, 2977), ("sysinit/coqargs.mli", 87, 3021, 3022), 0), 0, 0, 1, Tag1 ("Coqargs", 62)), 1, 0); Tag1 (("t", 612), (0, 0, [[(("config", 584), 0, (Tag3 ((("coqargs_config", 607)), 0, (0)), 100000000, 0, -53), (("sysinit/coqargs.mli", 90, 3035, 3037), ("sysinit/coqargs.mli", 90, 3035, 3061), 0), 0, Tag1 ("Coqargs", 65)); (("pre", 585), 0, (Tag3 ((("coqargs_pre", 608)), 0, (0)), 100000000, 0, -54), (("sysinit/coqargs.mli", 91, 3062, 3064), ("sysinit/coqargs.mli", 91, 3062, 3082), 0), 0, Tag1 ("Coqargs", 66)); (("main", 586), 0, (Tag3 ((("coqargs_main", 610)), 0, (0)), 100000000, 0, -55), (("sysinit/coqargs.mli", 92, 3083, 3085), ("sysinit/coqargs.mli", 92, 3083, 3105), 0), 0, Tag1 ("Coqargs", 67)); (("post", 587), 0, (Tag3 ((("coqargs_post", 611)), 0, (0)), 100000000, 0, -56), (("sysinit/coqargs.mli", 93, 3106, 3108), ("sysinit/coqargs.mli", 93, 3106, 3128), 0), 0, Tag1 ("Coqargs", 68))]], 1, 0, 0, 0, 0, 0, (("sysinit/coqargs.mli", 89, 3024, 3024), ("sysinit/coqargs.mli", 94, 3129, 3130), 0), 0, 0, 0, Tag1 ("Coqargs", 64)), 1, 0); (("default", 613), ((Tag3 ((("t", 612)), 0, (0)), 100000000, 0, -52), 0, (("sysinit/coqargs.mli", 97, 3154, 3154), ("sysinit/coqargs.mli", 97, 3154, 3169), 0), 0, Tag1 ("Coqargs", 69)), 0); (("parse_args", 614), ((Tag1 (("usage"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Boot")), "Usage"), "specific_usage"), 0, (0)), 100000000, 0, -51), (Tag1 (("init"), (Tag3 ((("t", 612)), 0, (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -49)], (0)), 100000000, 0, -48), (Tag2 ([(Tag3 ((("t", 612)), 0, (0)), 100000000, 0, -45); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -47)], (0)), 100000000, 0, -46)]), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("sysinit/coqargs.mli", 99, 3171, 3171), ("sysinit/coqargs.mli", 99, 3171, 3263), 0), 0, Tag1 ("Coqargs", 70)), 0); (("injection_commands", 615), ((Tag1 (0, (Tag3 ((("t", 612)), 0, (0)), 100000000, 0, -40), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("injection_command", 604)), 0, (0)), 100000000, 0, -39)], (0)), 100000000, 0, -38), 0), 100000000, 0, -37), 0, (("sysinit/coqargs.mli", 101, 3265, 3265), ("sysinit/coqargs.mli", 101, 3265, 3317), 0), 0, Tag1 ("Coqargs", 71)), 0); (("dirpath_of_top", 616), ((Tag1 (0, (Tag3 ((("top", 601)), 0, (0)), 100000000, 0, -36), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("sysinit/coqargs.mli", 103, 3319, 3319), ("sysinit/coqargs.mli", 103, 3319, 3362), 0), 0, Tag1 ("Coqargs", 72)), 0); (("get_int", 617), ((Tag1 (("opt"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -33), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -32), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("sysinit/coqargs.mli", 107, 3388, 3388), ("sysinit/coqargs.mli", 107, 3388, 3429), 0), 0, Tag1 ("Coqargs", 73)), 0); (("get_int_opt", 618), ((Tag1 (("opt"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -27), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -26)], (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("sysinit/coqargs.mli", 108, 3430, 3430), ("sysinit/coqargs.mli", 108, 3430, 3482), 0), 0, Tag1 ("Coqargs", 74)), 0); (("get_bool", 619), ((Tag1 (("opt"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -22), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -21), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("sysinit/coqargs.mli", 109, 3483, 3483), ("sysinit/coqargs.mli", 109, 3483, 3526), 0), 0, Tag1 ("Coqargs", 75)), 0); (("get_float", 620), ((Tag1 (("opt"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -17), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -16), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("sysinit/coqargs.mli", 110, 3527, 3527), ("sysinit/coqargs.mli", 110, 3527, 3572), 0), 0, Tag1 ("Coqargs", 76)), 0); (("error_missing_arg", 621), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -12), ((("a")), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("sysinit/coqargs.mli", 111, 3573, 3573), ("sysinit/coqargs.mli", 111, 3573, 3609), 0), 0, Tag1 ("Coqargs", 77)), 0); (("error_wrong_arg", 622), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9), ((("a")), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("sysinit/coqargs.mli", 112, 3610, 3610), ("sysinit/coqargs.mli", 112, 3610, 3644), 0), 0, Tag1 ("Coqargs", 78)), 0); (("set_option", 623), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Goptions")), "option_name"), 0, (0)), 100000000, 0, -5); (Tag3 ((("option_command", 602)), 0, (0)), 100000000, 0, -6)]), 100000000, 0, -4), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("sysinit/coqargs.mli", 114, 3646, 3646), ("sysinit/coqargs.mli", 114, 3646, 3708), 0), 0, Tag1 ("Coqargs", 79)), 0)], "Coqargs", [("Coqargs", ("\147\248\023[\169O\190\179\168\017QX\246\189\182m")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("Nametab", ("1\018\163\254\225\2178\025DI\0271Q\198\134\140")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Loadpath", ("!v\251\233\188\027J\130B\r:\149N9B9")); ("Libobject", ("\132}t\226hl\213L\210\172\167pc\012~\129")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Lib", ("8\018\021\210\020\136$\149\164=\007\002\218\026RX")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Goptions", ("i>Rt=\183g\153\190\144\235u\248\247*e")); ("Globnames", ("W\004\172T\214\181H\220\232\160LSW\006\130\226")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Deprecation", ("\226:\146\245\190;\1929\254@\247a\218\244\134\189")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("Coq_config", ("!\175HDq\031\186\209\242\130\016\168r\254\026n")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CWarnings", ("\132\220\150\227\215\239t\217\132\220'JX\188\246c")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu")); ("CString", ("\243~4C\023~\169\148x\206\165\207\195\177Q\184")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("Boot__Usage", (">\018A\003\153\1509\199\153\127o\176\011\025\0244")); ("Boot", ("\140\003S;\231F\193\208[\171'\221G\135<\178")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
val set_option : Goptions.option_name * option_command -> unit
