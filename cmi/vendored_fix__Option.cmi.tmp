module Option :
  functor (X : sig type t end) ->
    sig
      type property = X.t option
      val bottom : property
      val equal : property -> property -> bool
      val is_maximal : property -> bool("DEBUG:rule", [Tag3 (("Option", 339), 0, (Tag2 (((("X", 340)), Tag1 ([Tag1 (("t", 341), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("fix/src/Option.mli", 23, 1177, 1200), ("fix/src/Option.mli", 23, 1177, 1206), 0), 0, 0, 0, Tag1 ("Vendored_fix__Option", 0)), 1, 0)])), Tag1 ([Tag1 (("property", 342), (0, 0, 0, 1, ((Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("X", 340)), "t"), 0, (0)), 100000000, 0, -12)], (0)), 100000000, 0, -11)), 0, 0, 0, 0, (("fix/src/Option.mli", 23, 1177, 1228), ("fix/src/Option.mli", 23, 1177, 1254), 0), 0, 0, 0, Tag1 ("Vendored_fix__Option", 2)), 1, 0); (("bottom", 343), ((Tag3 ((("property", 342)), 0, (0)), 100000000, 0, -10), 0, (("fix/src/Sigs.ml", 104, 3871, 3873), ("fix/src/Sigs.ml", 104, 3871, 3893), 0), 0, Tag1 ("Vendored_fix__Sigs", 24)), 0); (("equal", 344), ((Tag1 (0, (Tag3 ((("property", 342)), 0, (0)), 100000000, 0, -9), (Tag1 (0, (Tag3 ((("property", 342)), 0, (0)), 100000000, 0, -8), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("fix/src/Sigs.ml", 105, 3894, 3896), ("fix/src/Sigs.ml", 105, 3894, 3935), 0), 0, Tag1 ("Vendored_fix__Sigs", 25)), 0); (("is_maximal", 345), ((Tag1 (0, (Tag3 ((("property", 342)), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("fix/src/Sigs.ml", 106, 3936, 3938), ("fix/src/Sigs.ml", 106, 3936, 3970), 0), 0, Tag1 ("Vendored_fix__Sigs", 26)), 0)])), 0, (("fix/src/Option.mli", 23, 1177, 1177), ("fix/src/Option.mli", 23, 1177, 1254), 0), Tag1 ("Vendored_fix__Option", 3)), 0, 0)], "Vendored_fix__Option", [("Vendored_fix__Option", ("\185\131\152+\006QZ\148\188/\198#\220M\188\016")); ("Vendored_fix__Sigs", ("a{\193\210\184\138\163\252\132\135.\2156meu")); ("Vendored_fix__", ("\r\196g\002\180\221\139\252\200\240t\184\171.K\020")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

    end
