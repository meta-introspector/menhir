type 'a channel
val new_channel : unit -> 'a channel
type +'a event
val send : 'a channel -> 'a -> unit event
val receive : 'a channel -> 'a event
val always : 'a -> 'a event
val choose : 'a event list -> 'a event
val wrap : 'a event -> ('a -> 'b) -> 'b event
val wrap_abort : 'a event -> (unit -> unit) -> 'a event
val guard : (unit -> 'a event) -> 'a event
val sync : 'a event -> 'a
val select : 'a event list -> 'a("DEBUG:rule", [Tag1 (("channel", 282), ([((("a")), 100000000, 0, -57)], 1, 0, 1, 0, [7], [2], 0, 0, (("event.mli", 24, 1392, 1392), ("event.mli", 24, 1392, 1407), 0), 0, 0, 0, Tag1 ("Event", 0)), 1, 0); (("new_channel", 283), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -56), (Tag3 ((("channel", 282)), [((("a")), 100000000, 0, -55)], (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("event.mli", 27, 1481, 1481), ("event.mli", 27, 1481, 1517), 0), 0, Tag1 ("Event", 1)), 0); Tag1 (("event", 284), ([((("a")), 100000000, 0, -52)], 1, 0, 1, 0, [1], [2], 0, 0, (("event.mli", 30, 1548, 1548), ("event.mli", 30, 1548, 1562), 0), 0, 0, 0, Tag1 ("Event", 2)), 1, 0); (("send", 285), ((Tag1 (0, (Tag3 ((("channel", 282)), [((("a")), 100000000, 0, -50)], (0)), 100000000, 0, -51), (Tag1 (0, ((("a")), 100000000, 0, -50), (Tag3 ((("event", 284)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -49)], (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("event.mli", 35, 1776, 1776), ("event.mli", 35, 1776, 1817), 0), 0, Tag1 ("Event", 3)), 0); (("receive", 286), ((Tag1 (0, (Tag3 ((("channel", 282)), [((("a")), 100000000, 0, -44)], (0)), 100000000, 0, -45), (Tag3 ((("event", 284)), [((("a")), 100000000, 0, -44)], (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("event.mli", 40, 1972, 1972), ("event.mli", 40, 1972, 2008), 0), 0, Tag1 ("Event", 4)), 0); (("always", 287), ((Tag1 (0, ((("a")), 100000000, 0, -41), (Tag3 ((("event", 284)), [((("a")), 100000000, 0, -41)], (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("event.mli", 42, 2010, 2010), ("event.mli", 42, 2010, 2037), 0), 0, Tag1 ("Event", 5)), 0); (("choose", 288), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("event", 284)), [((("a")), 100000000, 0, -36)], (0)), 100000000, 0, -38)], (0)), 100000000, 0, -37), (Tag3 ((("event", 284)), [((("a")), 100000000, 0, -36)], (0)), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("event.mli", 46, 2159, 2159), ("event.mli", 46, 2159, 2197), 0), 0, Tag1 ("Event", 6)), 0); (("wrap", 289), ((Tag1 (0, (Tag3 ((("event", 284)), [((("a")), 100000000, 0, -32)], (0)), 100000000, 0, -33), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -32), ((("b")), 100000000, 0, -30), 0), 100000000, 0, -31), (Tag3 ((("event", 284)), [((("b")), 100000000, 0, -30)], (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("event.mli", 50, 2301, 2301), ("event.mli", 50, 2301, 2346), 0), 0, Tag1 ("Event", 7)), 0); (("wrap_abort", 290), ((Tag1 (0, (Tag3 ((("event", 284)), [((("a")), 100000000, 0, -22)], (0)), 100000000, 0, -26), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -25), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), (Tag3 ((("event", 284)), [((("a")), 100000000, 0, -22)], (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("event.mli", 55, 2507, 2507), ("event.mli", 55, 2507, 2562), 0), 0, Tag1 ("Event", 8)), 0); (("guard", 291), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -18), (Tag3 ((("event", 284)), [((("a")), 100000000, 0, -15)], (0)), 100000000, 0, -17), 0), 100000000, 0, -16), (Tag3 ((("event", 284)), [((("a")), 100000000, 0, -15)], (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("event.mli", 60, 2742, 2742), ("event.mli", 60, 2742, 2784), 0), 0, Tag1 ("Event", 9)), 0); (("sync", 292), ((Tag1 (0, (Tag3 ((("event", 284)), [((("a")), 100000000, 0, -11)], (0)), 100000000, 0, -12), ((("a")), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("event.mli", 66, 3002, 3002), ("event.mli", 66, 3002, 3027), 0), 0, Tag1 ("Event", 10)), 0); (("select", 293), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("event", 284)), [((("a")), 100000000, 0, -7)], (0)), 100000000, 0, -9)], (0)), 100000000, 0, -8), ((("a")), 100000000, 0, -7), 0), 100000000, 0, -6), 0, (("event.mli", 72, 3262, 3262), ("event.mli", 72, 3262, 3294), 0), 0, Tag1 ("Event", 11)), 0); (("poll", 294), ((Tag1 (0, (Tag3 ((("event", 284)), [((("a")), 100000000, 0, -4)], (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -4)], (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("event.mli", 76, 3399, 3399), ("event.mli", 76, 3399, 3431), 0), 0, Tag1 ("Event", 12)), 0)], "Event", [("Event", ("u\175\176\005y\225GMH\240\134\001(\211z\199")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val poll : 'a event -> 'a option
