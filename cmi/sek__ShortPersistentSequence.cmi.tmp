module Make :
  functor (S : Sek__.PrivateSignatures.PSEQ)
    (Iter : sig
              type 'a t = 'a S.t
              type 'a iter
              val create : Sek__PrivateSignatures.pov -> 'a t -> 'a iter
              val reset : Sek__PrivateSignatures.pov -> 'a iter -> unit
              val copy : 'a iter -> 'a iter
              val sequence : 'a iter -> 'a t
              val length : 'a iter -> Sek__.PublicTypeAbbreviations.length
              val is_valid : 'a iter -> bool
              val index : 'a iter -> Sek__.PublicTypeAbbreviations.index
              val finished : 'a iter -> bool
              val get : 'a iter -> 'a
              val move : Sek__PrivateSignatures.pov -> 'a iter -> unit
              val jump : Sek__PrivateSignatures.pov -> 'a iter -> int -> unit
              val get_segment :
                Sek__PrivateSignatures.pov ->
                'a iter -> 'a Sek__.PublicTypeAbbreviations.segment
              val get_writable_segment :
                Sek__PrivateSignatures.pov ->
                'a iter -> 'a Sek__.PublicTypeAbbreviations.segment
              val reach :
                'a iter -> Sek__.PublicTypeAbbreviations.index -> unit
              val set : 'a iter -> 'a -> unit
              val check : 'a iter -> unit
              val print :
                ('a -> PPrint.document) -> 'a iter -> PPrint.document
            end)
    (T : Sek__.PublicSettings.THRESHOLD) ->
    sig
      type 'a schunk = 'a S.schunk
      type 'a t =
        'a S.t =
          Zero of { default : 'a; }
        | One of { default : 'a; x : 'a; }
        | Short of { default : 'a; a : 'a array; }
        | Level of { weight : Sek__PrivateSignatures.weight;
            front : 'a schunk; middle : 'a schunk t; back : 'a schunk;
          }
      val create : 'a -> 'a t
      val make : 'a -> Sek__.PublicTypeAbbreviations.length -> 'a -> 'a t
      val init :
        'a ->
        Sek__.PublicTypeAbbreviations.length ->
        (Sek__.PublicTypeAbbreviations.index -> 'a) -> 'a t
      val default : 'a t -> 'a
      val length : 'a t -> Sek__.PublicTypeAbbreviations.length
      val is_empty : 'a t -> bool
      val push : Sek__PrivateSignatures.pov -> 'a t -> 'a -> 'a t
      val pop : Sek__PrivateSignatures.pov -> 'a t -> 'a * 'a t
      val peek : Sek__PrivateSignatures.pov -> 'a t -> 'a
      val get : 'a t -> Sek__.PublicTypeAbbreviations.index -> 'a
      val set : 'a t -> Sek__.PublicTypeAbbreviations.index -> 'a -> 'a t
      val concat : 'a t -> 'a t -> 'a t
      val split : 'a t -> Sek__.PublicTypeAbbreviations.index -> 'a t * 'a t
      val take : 'a t -> Sek__.PublicTypeAbbreviations.index -> 'a t
      val drop : 'a t -> Sek__.PublicTypeAbbreviations.index -> 'a t
      val sub :
        'a t ->
        Sek__.PublicTypeAbbreviations.index ->
        Sek__.PublicTypeAbbreviations.length -> 'a t
      val iter_segments :
        Sek__PrivateSignatures.pov ->
        'a t -> 'a Sek__.PublicTypeAbbreviations.segments
      val to_array : 'a t -> 'a array
      val of_array_segment :
        'a ->
        'a array ->
        Sek__.PublicTypeAbbreviations.index ->
        Sek__.PublicTypeAbbreviations.length -> 'a t
      val of_array : 'a -> 'a array -> 'a t
      val print : ('a -> PPrint.document) -> 'a t -> PPrint.document
      val check : 'a t -> unit
      val get_segment :
        Sek__.PrivateSignatures.pov ->
        'a t ->
        Sek__.PublicTypeAbbreviations.index ->
        'a Sek__.PublicTypeAbbreviations.segment
      val of_short_array_destructive : 'a -> 'a array -> 'a t
      val wrap_long : 'a S.t -> 'a t
      val wrap : 'a S.t -> 'a t
      val unwrap : 'a t -> 'a S.t("DEBUG:rule", [Tag3 (("Make", 497), 0, (Tag2 (((("S", 498)), (Tag1 (Tag1 ((Tag2 ("Sek__")), "PrivateSignatures"), "PSEQ"))), Tag2 (((("Iter", 499)), Tag1 ([Tag1 (("t", 501), ([((("a")), 100000000, 0, -91)], 1, 0, 1, ((Tag3 (Tag1 ((("S", 498)), "t"), [((("a")), 100000000, 0, -91)], (0)), 100000000, 0, -90)), [63], [0], 0, 0, (("src/ShortPersistentSequence.mli", 28, 1479, 1502), ("src/ShortPersistentSequence.mli", 28, 1479, 1520), 0), 0, 0, 0, Tag1 ("Sek__ShortPersistentSequence", 5)), 1, 0); Tag1 (("iter", 502), ([((("a")), 100000000, 0, -89)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/PrivateSignatures.ml", 827, 37869, 37871), ("src/PrivateSignatures.ml", 827, 37869, 37883), 0), 0, 0, 0, Tag1 ("Sek__PrivateSignatures", 223)), 1, 0); (("create", 503), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "pov"), 0, (0)), 100000000, 0, -88), (Tag1 (0, (Tag3 ((("t", 501)), [((("a")), 100000000, 0, -86)], (0)), 100000000, 0, -87), (Tag3 ((("iter", 502)), [((("a")), 100000000, 0, -86)], (0)), 100000000, 0, -85), 0), 100000000, 0, -84), 0), 100000000, 0, -83), 0, (("src/PrivateSignatures.ml", 828, 37884, 37886), ("src/PrivateSignatures.ml", 828, 37884, 37921), 0), 0, Tag1 ("Sek__PrivateSignatures", 224)), 0); (("reset", 504), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "pov"), 0, (0)), 100000000, 0, -82), (Tag1 (0, (Tag3 ((("iter", 502)), [((("a")), 100000000, 0, -81)], (0)), 100000000, 0, -80), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -79), 0), 100000000, 0, -78), 0), 100000000, 0, -77), 0, (("src/PrivateSignatures.ml", 829, 37922, 37924), ("src/PrivateSignatures.ml", 829, 37922, 37958), 0), 0, Tag1 ("Sek__PrivateSignatures", 225)), 0); (("copy", 505), ((Tag1 (0, (Tag3 ((("iter", 502)), [((("a")), 100000000, 0, -75)], (0)), 100000000, 0, -76), (Tag3 ((("iter", 502)), [((("a")), 100000000, 0, -75)], (0)), 100000000, 0, -74), 0), 100000000, 0, -73), 0, (("src/PrivateSignatures.ml", 830, 37959, 37961), ("src/PrivateSignatures.ml", 830, 37959, 37990), 0), 0, Tag1 ("Sek__PrivateSignatures", 226)), 0); (("sequence", 506), ((Tag1 (0, (Tag3 ((("iter", 502)), [((("a")), 100000000, 0, -71)], (0)), 100000000, 0, -72), (Tag3 ((("t", 501)), [((("a")), 100000000, 0, -71)], (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0, (("src/PrivateSignatures.ml", 831, 37991, 37993), ("src/PrivateSignatures.ml", 831, 37991, 38023), 0), 0, Tag1 ("Sek__PrivateSignatures", 227)), 0); (("length", 507), ((Tag1 (0, (Tag3 ((("iter", 502)), [((("a")), 100000000, 0, -68)], (0)), 100000000, 0, -67), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "length"), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("src/PrivateSignatures.ml", 832, 38024, 38026), ("src/PrivateSignatures.ml", 832, 38024, 38056), 0), 0, Tag1 ("Sek__PrivateSignatures", 228)), 0); (("is_valid", 508), ((Tag1 (0, (Tag3 ((("iter", 502)), [((("a")), 100000000, 0, -64)], (0)), 100000000, 0, -63), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("src/PrivateSignatures.ml", 833, 38057, 38059), ("src/PrivateSignatures.ml", 833, 38057, 38089), 0), 0, Tag1 ("Sek__PrivateSignatures", 229)), 0); (("index", 509), ((Tag1 (0, (Tag3 ((("iter", 502)), [((("a")), 100000000, 0, -60)], (0)), 100000000, 0, -59), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "index"), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0, (("src/PrivateSignatures.ml", 834, 38090, 38092), ("src/PrivateSignatures.ml", 834, 38090, 38120), 0), 0, Tag1 ("Sek__PrivateSignatures", 230)), 0); (("finished", 510), ((Tag1 (0, (Tag3 ((("iter", 502)), [((("a")), 100000000, 0, -56)], (0)), 100000000, 0, -55), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("src/PrivateSignatures.ml", 835, 38121, 38123), ("src/PrivateSignatures.ml", 835, 38121, 38153), 0), 0, Tag1 ("Sek__PrivateSignatures", 231)), 0); (("get", 511), ((Tag1 (0, (Tag3 ((("iter", 502)), [((("a")), 100000000, 0, -51)], (0)), 100000000, 0, -52), ((("a")), 100000000, 0, -51), 0), 100000000, 0, -50), 0, (("src/PrivateSignatures.ml", 836, 38154, 38156), ("src/PrivateSignatures.ml", 836, 38154, 38179), 0), 0, Tag1 ("Sek__PrivateSignatures", 232)), 0); (("move", 512), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "pov"), 0, (0)), 100000000, 0, -49), (Tag1 (0, (Tag3 ((("iter", 502)), [((("a")), 100000000, 0, -48)], (0)), 100000000, 0, -47), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("src/PrivateSignatures.ml", 837, 38180, 38182), ("src/PrivateSignatures.ml", 837, 38180, 38215), 0), 0, Tag1 ("Sek__PrivateSignatures", 233)), 0); (("jump", 513), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "pov"), 0, (0)), 100000000, 0, -43), (Tag1 (0, (Tag3 ((("iter", 502)), [((("a")), 100000000, 0, -42)], (0)), 100000000, 0, -41), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -40), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("src/PrivateSignatures.ml", 838, 38216, 38218), ("src/PrivateSignatures.ml", 838, 38216, 38258), 0), 0, Tag1 ("Sek__PrivateSignatures", 234)), 0); (("get_segment", 514), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "pov"), 0, (0)), 100000000, 0, -35), (Tag1 (0, (Tag3 ((("iter", 502)), [((("a")), 100000000, 0, -33)], (0)), 100000000, 0, -34), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "segment"), [((("a")), 100000000, 0, -33)], (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("src/PrivateSignatures.ml", 839, 38259, 38261), ("src/PrivateSignatures.ml", 839, 38259, 38307), 0), 0, Tag1 ("Sek__PrivateSignatures", 235)), 0); (("get_writable_segment", 515), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "pov"), 0, (0)), 100000000, 0, -29), (Tag1 (0, (Tag3 ((("iter", 502)), [((("a")), 100000000, 0, -27)], (0)), 100000000, 0, -28), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "segment"), [((("a")), 100000000, 0, -27)], (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("src/PrivateSignatures.ml", 840, 38308, 38310), ("src/PrivateSignatures.ml", 840, 38308, 38365), 0), 0, Tag1 ("Sek__PrivateSignatures", 236)), 0); (("reach", 516), ((Tag1 (0, (Tag3 ((("iter", 502)), [((("a")), 100000000, 0, -23)], (0)), 100000000, 0, -22), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "index"), 0, (0)), 100000000, 0, -21), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("src/PrivateSignatures.ml", 841, 38366, 38368), ("src/PrivateSignatures.ml", 841, 38366, 38404), 0), 0, Tag1 ("Sek__PrivateSignatures", 237)), 0); (("set", 517), ((Tag1 (0, (Tag3 ((("iter", 502)), [((("a")), 100000000, 0, -16)], (0)), 100000000, 0, -17), (Tag1 (0, ((("a")), 100000000, 0, -16), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("src/PrivateSignatures.ml", 842, 38405, 38407), ("src/PrivateSignatures.ml", 842, 38405, 38438), 0), 0, Tag1 ("Sek__PrivateSignatures", 238)), 0); (("check", 518), ((Tag1 (0, (Tag3 ((("iter", 502)), [((("a")), 100000000, 0, -12)], (0)), 100000000, 0, -11), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("src/PrivateSignatures.ml", 843, 38439, 38441), ("src/PrivateSignatures.ml", 843, 38439, 38468), 0), 0, Tag1 ("Sek__PrivateSignatures", 239)), 0); (("print", 519), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -6), (Tag3 (Tag1 ((Tag2 ("PPrint")), "document"), 0, (0)), 100000000, 0, -8), 0), 100000000, 0, -7), (Tag1 (0, (Tag3 ((("iter", 502)), [((("a")), 100000000, 0, -6)], (0)), 100000000, 0, -5), (Tag3 (Tag1 ((Tag2 ("PPrint")), "document"), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/PrivateSignatures.ml", 844, 38469, 38471), ("src/PrivateSignatures.ml", 844, 38469, 38536), 0), 0, Tag1 ("Sek__PrivateSignatures", 240)), 0)])), Tag2 (((("T", 500)), (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicSettings"), "THRESHOLD"))), Tag1 ([Tag1 (("schunk", 520), ([((("a")), 100000000, 0, -254)], 1, 0, 1, ((Tag3 (Tag1 ((("S", 498)), "schunk"), [((("a")), 100000000, 0, -254)], (0)), 100000000, 0, -253)), [7], [2], 0, 0, (("src/ShortPersistentSequence.mli", 31, 1550, 1572), ("src/ShortPersistentSequence.mli", 31, 1550, 1600), 0), 0, 0, 0, Tag1 ("Sek__ShortPersistentSequence", 12)), 1, 0); Tag1 (("t", 521), ([((("a")), 100000000, 0, -246)], 1, Tag1 ([(("Zero", 639), Tag1 ([(("default", 640), 0, ((("a")), 100000000, 0, -246), (("src/PrivateSignatures.ml", 865, 39383, 39400), ("src/PrivateSignatures.ml", 865, 39383, 39413), 0), 0, Tag1 ("Sek__PrivateSignatures", 244))]), 0, (("src/PrivateSignatures.ml", 865, 39383, 39387), ("src/PrivateSignatures.ml", 865, 39383, 39415), 0), 0, Tag1 ("Sek__PrivateSignatures", 245)); (("One", 641), Tag1 ([(("default", 642), 0, ((("a")), 100000000, 0, -246), (("src/PrivateSignatures.ml", 866, 39416, 39433), ("src/PrivateSignatures.ml", 866, 39416, 39446), 0), 0, Tag1 ("Sek__PrivateSignatures", 246)); (("x", 643), 0, ((("a")), 100000000, 0, -246), (("src/PrivateSignatures.ml", 866, 39416, 39447), ("src/PrivateSignatures.ml", 866, 39416, 39453), 0), 0, Tag1 ("Sek__PrivateSignatures", 247))]), 0, (("src/PrivateSignatures.ml", 866, 39416, 39420), ("src/PrivateSignatures.ml", 866, 39416, 39455), 0), 0, Tag1 ("Sek__PrivateSignatures", 248)); (("Short", 644), Tag1 ([(("default", 645), 0, ((("a")), 100000000, 0, -246), (("src/PrivateSignatures.ml", 867, 39456, 39473), ("src/PrivateSignatures.ml", 867, 39456, 39486), 0), 0, Tag1 ("Sek__PrivateSignatures", 249)); (("a", 646), 0, (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -246)], (0)), 100000000, 0, -247), (("src/PrivateSignatures.ml", 867, 39456, 39487), ("src/PrivateSignatures.ml", 867, 39456, 39499), 0), 0, Tag1 ("Sek__PrivateSignatures", 250))]), 0, (("src/PrivateSignatures.ml", 867, 39456, 39460), ("src/PrivateSignatures.ml", 867, 39456, 39501), 0), 0, Tag1 ("Sek__PrivateSignatures", 251)); (("Level", 647), Tag1 ([(("weight", 648), 0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "weight"), 0, (0)), 100000000, 0, -248), (("src/PrivateSignatures.ml", 869, 39519, 39527), ("src/PrivateSignatures.ml", 869, 39519, 39543), 0), 0, Tag1 ("Sek__PrivateSignatures", 252)); (("front", 649), 0, (Tag3 ((("schunk", 520)), [((("a")), 100000000, 0, -246)], (0)), 100000000, 0, -249), (("src/PrivateSignatures.ml", 870, 39544, 39552), ("src/PrivateSignatures.ml", 870, 39544, 39570), 0), 0, Tag1 ("Sek__PrivateSignatures", 253)); (("middle", 650), 0, (Tag3 ((("t", 521)), [(Tag3 ((("schunk", 520)), [((("a")), 100000000, 0, -246)], (0)), 100000000, 0, -251)], (0)), 100000000, 0, -250), (("src/PrivateSignatures.ml", 871, 39571, 39579), ("src/PrivateSignatures.ml", 871, 39571, 39600), 0), 0, Tag1 ("Sek__PrivateSignatures", 254)); (("back", 651), 0, (Tag3 ((("schunk", 520)), [((("a")), 100000000, 0, -246)], (0)), 100000000, 0, -252), (("src/PrivateSignatures.ml", 872, 39601, 39609), ("src/PrivateSignatures.ml", 872, 39601, 39626), 0), 0, Tag1 ("Sek__PrivateSignatures", 255))]), 0, (("src/PrivateSignatures.ml", 868, 39502, 39506), ("src/PrivateSignatures.ml", 873, 39627, 39634), 0), 0, Tag1 ("Sek__PrivateSignatures", 256))], 0), 1, ((Tag3 (Tag1 ((("S", 498)), "t"), [((("a")), 100000000, 0, -246)], (0)), 100000000, 0, -245)), [63], [0], 0, 0, (("src/ShortPersistentSequence.mli", 31, 1550, 1605), ("src/ShortPersistentSequence.mli", 31, 1550, 1623), 0), 0, 0, 0, Tag1 ("Sek__ShortPersistentSequence", 21)), 1, 0); (("create", 522), ((Tag1 (0, ((("a")), 100000000, 0, -244), (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -244)], (0)), 100000000, 0, -243), 0), 100000000, 0, -242), 0, (("src/PrivateSignatures.ml", 874, 39635, 39637), ("src/PrivateSignatures.ml", 874, 39635, 39660), 0), 0, Tag1 ("Sek__PrivateSignatures", 281)), 0); (("make", 523), ((Tag1 (0, ((("a")), 100000000, 0, -240), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "length"), 0, (0)), 100000000, 0, -241), (Tag1 (0, ((("a")), 100000000, 0, -240), (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -240)], (0)), 100000000, 0, -239), 0), 100000000, 0, -238), 0), 100000000, 0, -237), 0), 100000000, 0, -236), 0, (("src/PrivateSignatures.ml", 875, 39661, 39663), ("src/PrivateSignatures.ml", 875, 39661, 39700), 0), 0, Tag1 ("Sek__PrivateSignatures", 282)), 0); (("init", 524), ((Tag1 (0, ((("a")), 100000000, 0, -232), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "length"), 0, (0)), 100000000, 0, -235), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "index"), 0, (0)), 100000000, 0, -234), ((("a")), 100000000, 0, -232), 0), 100000000, 0, -233), (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -232)], (0)), 100000000, 0, -231), 0), 100000000, 0, -230), 0), 100000000, 0, -229), 0), 100000000, 0, -228), 0, (("src/PrivateSignatures.ml", 876, 39701, 39703), ("src/PrivateSignatures.ml", 876, 39701, 39751), 0), 0, Tag1 ("Sek__PrivateSignatures", 283)), 0); (("default", 525), ((Tag1 (0, (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -226)], (0)), 100000000, 0, -227), ((("a")), 100000000, 0, -226), 0), 100000000, 0, -225), 0, (("src/PrivateSignatures.ml", 877, 39752, 39754), ("src/PrivateSignatures.ml", 877, 39752, 39778), 0), 0, Tag1 ("Sek__PrivateSignatures", 284)), 0); (("length", 526), ((Tag1 (0, (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -224)], (0)), 100000000, 0, -223), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "length"), 0, (0)), 100000000, 0, -222), 0), 100000000, 0, -221), 0, (("src/PrivateSignatures.ml", 878, 39779, 39781), ("src/PrivateSignatures.ml", 878, 39779, 39808), 0), 0, Tag1 ("Sek__PrivateSignatures", 285)), 0); (("is_empty", 527), ((Tag1 (0, (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -220)], (0)), 100000000, 0, -219), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -218), 0), 100000000, 0, -217), 0, (("src/PrivateSignatures.ml", 879, 39809, 39811), ("src/PrivateSignatures.ml", 879, 39809, 39838), 0), 0, Tag1 ("Sek__PrivateSignatures", 286)), 0); (("push", 528), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "pov"), 0, (0)), 100000000, 0, -216), (Tag1 (0, (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -214)], (0)), 100000000, 0, -215), (Tag1 (0, ((("a")), 100000000, 0, -214), (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -214)], (0)), 100000000, 0, -213), 0), 100000000, 0, -212), 0), 100000000, 0, -211), 0), 100000000, 0, -210), 0, (("src/PrivateSignatures.ml", 880, 39839, 39841), ("src/PrivateSignatures.ml", 880, 39839, 39877), 0), 0, Tag1 ("Sek__PrivateSignatures", 287)), 0); (("pop", 529), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "pov"), 0, (0)), 100000000, 0, -209), (Tag1 (0, (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -206)], (0)), 100000000, 0, -208), (Tag2 ([((("a")), 100000000, 0, -206); (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -206)], (0)), 100000000, 0, -207)]), 100000000, 0, -205), 0), 100000000, 0, -204), 0), 100000000, 0, -203), 0, (("src/PrivateSignatures.ml", 881, 39878, 39880), ("src/PrivateSignatures.ml", 881, 39878, 39914), 0), 0, Tag1 ("Sek__PrivateSignatures", 288)), 0); (("peek", 530), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "pov"), 0, (0)), 100000000, 0, -202), (Tag1 (0, (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -200)], (0)), 100000000, 0, -201), ((("a")), 100000000, 0, -200), 0), 100000000, 0, -199), 0), 100000000, 0, -198), 0, (("src/PrivateSignatures.ml", 882, 39915, 39917), ("src/PrivateSignatures.ml", 882, 39915, 39945), 0), 0, Tag1 ("Sek__PrivateSignatures", 289)), 0); (("get", 531), ((Tag1 (0, (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -195)], (0)), 100000000, 0, -197), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "index"), 0, (0)), 100000000, 0, -196), ((("a")), 100000000, 0, -195), 0), 100000000, 0, -194), 0), 100000000, 0, -193), 0, (("src/PrivateSignatures.ml", 883, 39946, 39948), ("src/PrivateSignatures.ml", 883, 39946, 39977), 0), 0, Tag1 ("Sek__PrivateSignatures", 290)), 0); (("set", 532), ((Tag1 (0, (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -190)], (0)), 100000000, 0, -192), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "index"), 0, (0)), 100000000, 0, -191), (Tag1 (0, ((("a")), 100000000, 0, -190), (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -190)], (0)), 100000000, 0, -189), 0), 100000000, 0, -188), 0), 100000000, 0, -187), 0), 100000000, 0, -186), 0, (("src/PrivateSignatures.ml", 884, 39978, 39980), ("src/PrivateSignatures.ml", 884, 39978, 40017), 0), 0, Tag1 ("Sek__PrivateSignatures", 291)), 0); (("concat", 533), ((Tag1 (0, (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -183)], (0)), 100000000, 0, -185), (Tag1 (0, (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -183)], (0)), 100000000, 0, -184), (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -183)], (0)), 100000000, 0, -182), 0), 100000000, 0, -181), 0), 100000000, 0, -180), 0, (("src/PrivateSignatures.ml", 885, 40018, 40020), ("src/PrivateSignatures.ml", 885, 40018, 40053), 0), 0, Tag1 ("Sek__PrivateSignatures", 292)), 0); (("split", 534), ((Tag1 (0, (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -176)], (0)), 100000000, 0, -179), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "index"), 0, (0)), 100000000, 0, -178), (Tag2 ([(Tag3 ((("t", 521)), [((("a")), 100000000, 0, -176)], (0)), 100000000, 0, -175); (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -176)], (0)), 100000000, 0, -177)]), 100000000, 0, -174), 0), 100000000, 0, -173), 0), 100000000, 0, -172), 0, (("src/PrivateSignatures.ml", 886, 40054, 40056), ("src/PrivateSignatures.ml", 886, 40054, 40096), 0), 0, Tag1 ("Sek__PrivateSignatures", 293)), 0); (("take", 535), ((Tag1 (0, (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -169)], (0)), 100000000, 0, -171), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "index"), 0, (0)), 100000000, 0, -170), (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -169)], (0)), 100000000, 0, -168), 0), 100000000, 0, -167), 0), 100000000, 0, -166), 0, (("src/PrivateSignatures.ml", 887, 40097, 40099), ("src/PrivateSignatures.ml", 887, 40097, 40131), 0), 0, Tag1 ("Sek__PrivateSignatures", 294)), 0); (("drop", 536), ((Tag1 (0, (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -163)], (0)), 100000000, 0, -165), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "index"), 0, (0)), 100000000, 0, -164), (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -163)], (0)), 100000000, 0, -162), 0), 100000000, 0, -161), 0), 100000000, 0, -160), 0, (("src/PrivateSignatures.ml", 888, 40132, 40134), ("src/PrivateSignatures.ml", 888, 40132, 40166), 0), 0, Tag1 ("Sek__PrivateSignatures", 295)), 0); (("sub", 537), ((Tag1 (0, (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -156)], (0)), 100000000, 0, -159), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "index"), 0, (0)), 100000000, 0, -158), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "length"), 0, (0)), 100000000, 0, -157), (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -156)], (0)), 100000000, 0, -155), 0), 100000000, 0, -154), 0), 100000000, 0, -153), 0), 100000000, 0, -152), 0, (("src/PrivateSignatures.ml", 889, 40167, 40169), ("src/PrivateSignatures.ml", 889, 40167, 40210), 0), 0, Tag1 ("Sek__PrivateSignatures", 296)), 0); (("iter_segments", 538), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "pov"), 0, (0)), 100000000, 0, -151), (Tag1 (0, (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -149)], (0)), 100000000, 0, -150), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "segments"), [((("a")), 100000000, 0, -149)], (0)), 100000000, 0, -148), 0), 100000000, 0, -147), 0), 100000000, 0, -146), 0, (("src/PrivateSignatures.ml", 890, 40211, 40213), ("src/PrivateSignatures.ml", 890, 40211, 40259), 0), 0, Tag1 ("Sek__PrivateSignatures", 297)), 0); (("to_array", 539), ((Tag1 (0, (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -144)], (0)), 100000000, 0, -145), (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -144)], (0)), 100000000, 0, -143), 0), 100000000, 0, -142), 0, (("src/PrivateSignatures.ml", 891, 40260, 40262), ("src/PrivateSignatures.ml", 891, 40260, 40293), 0), 0, Tag1 ("Sek__PrivateSignatures", 298)), 0); (("of_array_segment", 540), ((Tag1 (0, ((("a")), 100000000, 0, -138), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -138)], (0)), 100000000, 0, -141), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "index"), 0, (0)), 100000000, 0, -140), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "length"), 0, (0)), 100000000, 0, -139), (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -138)], (0)), 100000000, 0, -137), 0), 100000000, 0, -136), 0), 100000000, 0, -135), 0), 100000000, 0, -134), 0), 100000000, 0, -133), 0, (("src/PrivateSignatures.ml", 892, 40294, 40296), ("src/PrivateSignatures.ml", 892, 40294, 40360), 0), 0, Tag1 ("Sek__PrivateSignatures", 299)), 0); (("of_array", 541), ((Tag1 (0, ((("a")), 100000000, 0, -131), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -131)], (0)), 100000000, 0, -132), (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -131)], (0)), 100000000, 0, -130), 0), 100000000, 0, -129), 0), 100000000, 0, -128), 0, (("src/PrivateSignatures.ml", 893, 40361, 40363), ("src/PrivateSignatures.ml", 893, 40361, 40400), 0), 0, Tag1 ("Sek__PrivateSignatures", 300)), 0); (("print", 542), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -125), (Tag3 (Tag1 ((Tag2 ("PPrint")), "document"), 0, (0)), 100000000, 0, -127), 0), 100000000, 0, -126), (Tag1 (0, (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -125)], (0)), 100000000, 0, -124), (Tag3 (Tag1 ((Tag2 ("PPrint")), "document"), 0, (0)), 100000000, 0, -123), 0), 100000000, 0, -122), 0), 100000000, 0, -121), 0, (("src/PrivateSignatures.ml", 894, 40401, 40403), ("src/PrivateSignatures.ml", 894, 40401, 40465), 0), 0, Tag1 ("Sek__PrivateSignatures", 301)), 0); (("check", 543), ((Tag1 (0, (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -120)], (0)), 100000000, 0, -119), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -118), 0), 100000000, 0, -117), 0, (("src/PrivateSignatures.ml", 895, 40466, 40468), ("src/PrivateSignatures.ml", 895, 40466, 40492), 0), 0, Tag1 ("Sek__PrivateSignatures", 302)), 0); (("get_segment", 544), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PrivateSignatures"), "pov"), 0, (0)), 100000000, 0, -116), (Tag1 (0, (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -113)], (0)), 100000000, 0, -115), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "index"), 0, (0)), 100000000, 0, -114), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "segment"), [((("a")), 100000000, 0, -113)], (0)), 100000000, 0, -112), 0), 100000000, 0, -111), 0), 100000000, 0, -110), 0), 100000000, 0, -109), 0, (("src/ShortPersistentSequence.mli", 34, 1751, 1755), ("src/ShortPersistentSequence.mli", 34, 1751, 1806), 0), 0, Tag1 ("Sek__ShortPersistentSequence", 34)), 0); (("of_short_array_destructive", 545), ((Tag1 (0, ((("a")), 100000000, 0, -107), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -107)], (0)), 100000000, 0, -108), (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -107)], (0)), 100000000, 0, -106), 0), 100000000, 0, -105), 0), 100000000, 0, -104), 0, (("src/ShortPersistentSequence.mli", 37, 1903, 1907), ("src/ShortPersistentSequence.mli", 37, 1903, 1961), 0), 0, Tag1 ("Sek__ShortPersistentSequence", 35)), 0); (("wrap_long", 546), ((Tag1 (0, (Tag3 (Tag1 ((("S", 498)), "t"), [((("a")), 100000000, 0, -102)], (0)), 100000000, 0, -103), (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -102)], (0)), 100000000, 0, -101), 0), 100000000, 0, -100), 0, (("src/ShortPersistentSequence.mli", 40, 2072, 2076), ("src/ShortPersistentSequence.mli", 40, 2072, 2105), 0), 0, Tag1 ("Sek__ShortPersistentSequence", 36)), 0); (("wrap", 547), ((Tag1 (0, (Tag3 (Tag1 ((("S", 498)), "t"), [((("a")), 100000000, 0, -98)], (0)), 100000000, 0, -99), (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -98)], (0)), 100000000, 0, -97), 0), 100000000, 0, -96), 0, (("src/ShortPersistentSequence.mli", 41, 2106, 2110), ("src/ShortPersistentSequence.mli", 41, 2106, 2139), 0), 0, Tag1 ("Sek__ShortPersistentSequence", 37)), 0); (("unwrap", 548), ((Tag1 (0, (Tag3 ((("t", 521)), [((("a")), 100000000, 0, -94)], (0)), 100000000, 0, -95), (Tag3 (Tag1 ((("S", 498)), "t"), [((("a")), 100000000, 0, -94)], (0)), 100000000, 0, -93), 0), 100000000, 0, -92), 0, (("src/ShortPersistentSequence.mli", 42, 2140, 2144), ("src/ShortPersistentSequence.mli", 42, 2140, 2173), 0), 0, Tag1 ("Sek__ShortPersistentSequence", 38)), 0)])))), 0, (("src/ShortPersistentSequence.mli", 26, 1452, 1452), ("src/ShortPersistentSequence.mli", 43, 2174, 2179), 0), Tag1 ("Sek__ShortPersistentSequence", 39)), 0, 0)], "Sek__ShortPersistentSequence", [("Sek__ShortPersistentSequence", ("\1986\\>\142\141\222\200H\175M#\202\144\030\225")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sek__PublicTypeAbbreviations", ("\201\251\244\167\199\157\227\233\251\227b\132\146]>\232")); ("Sek__PublicSettings", ("\133\220\011\157jd\181\\V\002\146\022t\166u\149")); ("Sek__PrivateSignatures", ("\187[j\006\197\232[2-\184F\232V~a\184")); ("Sek__Owner", ("\228~\155T\164\209\210ZNr\165\246\165\216\130-")); ("Sek__", ("b\188\017\179d|~L\019\214\028\188\145y\210\250")); ("PPrintEngine", ("V_\162\193\202\031c\185\nQ\232bL\0299\195")); ("PPrint", ("a\179\180\0030=\b^\136P\234\220\171\0210A")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

    end
