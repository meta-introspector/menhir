val bind : 'a option -> ('a -> 'b option) -> 'b option
val fmap : ('a -> 'b) -> 'a option -> 'b option
val iter : ('a -> unit) -> 'a option -> unit
val join : 'a option option -> 'a option
val either : ('a -> 'b) -> 'b -> 'a option -> 'b
val lazy_default : 'a Lazy.t -> 'a option -> 'a
val default : 'a -> 'a option -> 'a
val ( >>| ) : 'a option -> ('a -> 'b) -> 'b option
val ( >>= ) : 'a option -> ('a -> 'b option) -> 'b option
val ( >> ) : 'a option -> 'b option -> 'b option
val ( ||| ) : 'a option -> 'a option Lazy.t -> 'a option
val ( >< ) : 'a option -> 'a -> 'a
val ( && ) : 'a option -> 'b option -> ('a * 'b) option
module List' :
  sig
    val join : 'a option list -> 'a list option
    val filter : 'a option list -> 'a list
    val map : ('a -> 'b option) -> 'a list -> 'b list option("DEBUG:rule", [(("bind", 299), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -84)], (0)), 100000000, 0, -85), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -84), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -81)], (0)), 100000000, 0, -83), 0), 100000000, 0, -82), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -81)], (0)), 100000000, 0, -80), 0), 100000000, 0, -79), 0), 100000000, 0, -78), 0, (("lib/option.mli", 3, 32, 32), ("lib/option.mli", 3, 32, 86), 0), 0, Tag1 ("Option", 0)), 0); (("fmap", 300), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -76), ((("b")), 100000000, 0, -74), 0), 100000000, 0, -77), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -76)], (0)), 100000000, 0, -75), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -74)], (0)), 100000000, 0, -73), 0), 100000000, 0, -72), 0), 100000000, 0, -71), 0, (("lib/option.mli", 4, 87, 87), ("lib/option.mli", 4, 87, 134), 0), 0, Tag1 ("Option", 1)), 0); (("iter", 301), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -68), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -70), 0), 100000000, 0, -69), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -68)], (0)), 100000000, 0, -67), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0, (("lib/option.mli", 5, 135, 135), ("lib/option.mli", 5, 135, 178), 0), 0, Tag1 ("Option", 2)), 0); (("join", 302), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -61)], (0)), 100000000, 0, -63)], (0)), 100000000, 0, -62), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -61)], (0)), 100000000, 0, -60), 0), 100000000, 0, -59), 0, (("lib/option.mli", 6, 179, 179), ("lib/option.mli", 6, 179, 219), 0), 0, Tag1 ("Option", 3)), 0); (("either", 303), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -57), ((("b")), 100000000, 0, -55), 0), 100000000, 0, -58), (Tag1 (0, ((("b")), 100000000, 0, -55), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -57)], (0)), 100000000, 0, -56), ((("b")), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0, (("lib/option.mli", 9, 222, 222), ("lib/option.mli", 9, 222, 270), 0), 0, Tag1 ("Option", 4)), 0); (("lazy_default", 304), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lazy"), "t"), [((("a")), 100000000, 0, -49)], (0)), 100000000, 0, -51), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -49)], (0)), 100000000, 0, -50), ((("a")), 100000000, 0, -49), 0), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("lib/option.mli", 10, 271, 271), ("lib/option.mli", 10, 271, 317), 0), 0, Tag1 ("Option", 5)), 0); (("default", 305), ((Tag1 (0, ((("a")), 100000000, 0, -45), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -45)], (0)), 100000000, 0, -46), ((("a")), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("lib/option.mli", 11, 318, 318), ("lib/option.mli", 11, 318, 353), 0), 0, Tag1 ("Option", 6)), 0); ((">>|", 306), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -41)], (0)), 100000000, 0, -42), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -41), ((("b")), 100000000, 0, -39), 0), 100000000, 0, -40), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -39)], (0)), 100000000, 0, -38), 0), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("lib/option.mli", 14, 380, 380), ("lib/option.mli", 14, 380, 430), 0), 0, Tag1 ("Option", 7)), 0); ((">>=", 307), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -34)], (0)), 100000000, 0, -35), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -34), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -31)], (0)), 100000000, 0, -33), 0), 100000000, 0, -32), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -31)], (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("lib/option.mli", 15, 431, 431), ("lib/option.mli", 15, 431, 488), 0), 0, Tag1 ("Option", 8)), 0); ((">>", 308), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -27)], (0)), 100000000, 0, -26), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -24)], (0)), 100000000, 0, -25), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -24)], (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("lib/option.mli", 16, 489, 489), ("lib/option.mli", 16, 489, 537), 0), 0, Tag1 ("Option", 9)), 0); (("|||", 309), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -17)], (0)), 100000000, 0, -20), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lazy"), "t"), [(Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -17)], (0)), 100000000, 0, -19)], (0)), 100000000, 0, -18), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -17)], (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("lib/option.mli", 17, 538, 538), ("lib/option.mli", 17, 538, 591), 0), 0, Tag1 ("Option", 10)), 0); (("><", 310), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -12)], (0)), 100000000, 0, -13), (Tag1 (0, ((("a")), 100000000, 0, -12), ((("a")), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("lib/option.mli", 19, 593, 593), ("lib/option.mli", 19, 593, 627), 0), 0, Tag1 ("Option", 11)), 0); (("&&", 311), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -6)], (0)), 100000000, 0, -9), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -7)], (0)), 100000000, 0, -8), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([((("a")), 100000000, 0, -6); ((("b")), 100000000, 0, -7)]), 100000000, 0, -5)], (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("lib/option.mli", 22, 630, 630), ("lib/option.mli", 22, 630, 685), 0), 0, Tag1 ("Option", 12)), 0); Tag3 (("List'", 312), 0, (Tag1 ([(("join", 313), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -103)], (0)), 100000000, 0, -105)], (0)), 100000000, 0, -104), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -103)], (0)), 100000000, 0, -102)], (0)), 100000000, 0, -101), 0), 100000000, 0, -100), 0, (("lib/option.mli", 25, 705, 707), ("lib/option.mli", 25, 705, 750), 0), 0, Tag1 ("Option", 13)), 0); (("filter", 314), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -97)], (0)), 100000000, 0, -99)], (0)), 100000000, 0, -98), (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -97)], (0)), 100000000, 0, -96), 0), 100000000, 0, -95), 0, (("lib/option.mli", 26, 751, 753), ("lib/option.mli", 26, 751, 791), 0), 0, Tag1 ("Option", 14)), 0); (("map", 315), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -92), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -90)], (0)), 100000000, 0, -94), 0), 100000000, 0, -93), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -92)], (0)), 100000000, 0, -91), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -90)], (0)), 100000000, 0, -89)], (0)), 100000000, 0, -88), 0), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("lib/option.mli", 27, 792, 794), ("lib/option.mli", 27, 792, 850), 0), 0, Tag1 ("Option", 15)), 0)]), 0, (("lib/option.mli", 24, 687, 687), ("lib/option.mli", 28, 851, 854), 0), Tag1 ("Option", 16)), 0, 0)], "Option", [("Option", ("v9\129z\129C\195n\217\017(\173\026v\192\189")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

  end
