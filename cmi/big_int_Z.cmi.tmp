type big_int = Z.t
val zero_big_int : Z.t
val unit_big_int : Z.t
val minus_big_int : Z.t -> Z.t
val abs_big_int : Z.t -> Z.t
val add_big_int : Z.t -> Z.t -> Z.t
val succ_big_int : Z.t -> Z.t
val add_int_big_int : int -> Z.t -> Z.t
val sub_big_int : Z.t -> Z.t -> Z.t
val pred_big_int : Z.t -> Z.t
val mult_big_int : Z.t -> Z.t -> Z.t
val mult_int_big_int : int -> Z.t -> Z.t
val square_big_int : Z.t -> Z.t
val sqrt_big_int : Z.t -> Z.t
val quomod_big_int : Z.t -> Z.t -> Z.t * Z.t
val div_big_int : Z.t -> Z.t -> Z.t
val mod_big_int : Z.t -> Z.t -> Z.t
val gcd_big_int : Z.t -> Z.t -> Z.t
val power : Z.t -> int -> Z.t
val power_big : Z.t -> Z.t -> Z.t
val power_int_positive_int : int -> int -> Z.t
val power_big_int_positive_int : Z.t -> int -> Z.t
val power_int_positive_big_int : int -> Z.t -> Z.t
val power_big_int_positive_big_int : Z.t -> Z.t -> Z.t
val sign_big_int : Z.t -> int
val compare_big_int : Z.t -> Z.t -> int
val eq_big_int : Z.t -> Z.t -> bool
val le_big_int : Z.t -> Z.t -> bool
val ge_big_int : Z.t -> Z.t -> bool
val lt_big_int : Z.t -> Z.t -> bool
val gt_big_int : Z.t -> Z.t -> bool
val max_big_int : Z.t -> Z.t -> Z.t
val min_big_int : Z.t -> Z.t -> Z.t
val num_digits_big_int : Z.t -> int
val string_of_big_int : Z.t -> string
val big_int_of_string : string -> Z.t
val big_int_of_int : int -> Z.t
val is_int_big_int : Z.t -> bool
val int_of_big_int : Z.t -> int
val big_int_of_int32 : int32 -> Z.t
val big_int_of_nativeint : nativeint -> Z.t
val big_int_of_int64 : int64 -> Z.t
val int32_of_big_int : Z.t -> int32
val nativeint_of_big_int : Z.t -> nativeint
val int64_of_big_int : Z.t -> int64
val float_of_big_int : Z.t -> float
val big_int_of_float : float -> Z.t
val and_big_int : Z.t -> Z.t -> Z.t
val or_big_int : Z.t -> Z.t -> Z.t
val xor_big_int : Z.t -> Z.t -> Z.t
val shift_left_big_int : Z.t -> int -> Z.t
val shift_right_big_int : Z.t -> int -> Z.t
val shift_right_towards_zero_big_int : Z.t -> int -> Z.t
("DEBUG:rule", [Tag1 (("big_int", 462), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -221)), 0, 0, 0, 0, (("big_int_Z.mli", 24, 774, 774), ("big_int_Z.mli", 24, 774, 792), 0), 0, 0, 0, Tag1 ("Big_int_Z", 0)), 1, 0); (("zero_big_int", 463), ((Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -220), 0, (("big_int_Z.mli", 26, 794, 794), ("big_int_Z.mli", 26, 794, 816), 0), 0, Tag1 ("Big_int_Z", 1)), 0); (("unit_big_int", 464), ((Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -219), 0, (("big_int_Z.mli", 27, 817, 817), ("big_int_Z.mli", 27, 817, 839), 0), 0, Tag1 ("Big_int_Z", 2)), 0); (("minus_big_int", 465), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -218), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -217), 0), 100000000, 0, -216), 0, (("big_int_Z.mli", 28, 840, 840), ("big_int_Z.mli", 28, 840, 870), 0), 0, Tag1 ("Big_int_Z", 3)), 0); (("abs_big_int", 466), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -215), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -214), 0), 100000000, 0, -213), 0, (("big_int_Z.mli", 29, 871, 871), ("big_int_Z.mli", 29, 871, 899), 0), 0, Tag1 ("Big_int_Z", 4)), 0); (("add_big_int", 467), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -212), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -211), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -210), 0), 100000000, 0, -209), 0), 100000000, 0, -208), 0, (("big_int_Z.mli", 30, 900, 900), ("big_int_Z.mli", 30, 900, 935), 0), 0, Tag1 ("Big_int_Z", 5)), 0); (("succ_big_int", 468), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -207), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -206), 0), 100000000, 0, -205), 0, (("big_int_Z.mli", 31, 936, 936), ("big_int_Z.mli", 31, 936, 965), 0), 0, Tag1 ("Big_int_Z", 6)), 0); (("add_int_big_int", 469), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -204), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -203), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -202), 0), 100000000, 0, -201), 0), 100000000, 0, -200), 0, (("big_int_Z.mli", 32, 966, 966), ("big_int_Z.mli", 32, 966, 1005), 0), 0, Tag1 ("Big_int_Z", 7)), 0); (("sub_big_int", 470), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -199), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -198), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -197), 0), 100000000, 0, -196), 0), 100000000, 0, -195), 0, (("big_int_Z.mli", 33, 1006, 1006), ("big_int_Z.mli", 33, 1006, 1041), 0), 0, Tag1 ("Big_int_Z", 8)), 0); (("pred_big_int", 471), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -194), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -193), 0), 100000000, 0, -192), 0, (("big_int_Z.mli", 34, 1042, 1042), ("big_int_Z.mli", 34, 1042, 1071), 0), 0, Tag1 ("Big_int_Z", 9)), 0); (("mult_big_int", 472), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -191), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -190), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -189), 0), 100000000, 0, -188), 0), 100000000, 0, -187), 0, (("big_int_Z.mli", 35, 1072, 1072), ("big_int_Z.mli", 35, 1072, 1108), 0), 0, Tag1 ("Big_int_Z", 10)), 0); (("mult_int_big_int", 473), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -186), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -185), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -184), 0), 100000000, 0, -183), 0), 100000000, 0, -182), 0, (("big_int_Z.mli", 36, 1109, 1109), ("big_int_Z.mli", 36, 1109, 1149), 0), 0, Tag1 ("Big_int_Z", 11)), 0); (("square_big_int", 474), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -181), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -180), 0), 100000000, 0, -179), 0, (("big_int_Z.mli", 37, 1150, 1150), ("big_int_Z.mli", 37, 1150, 1181), 0), 0, Tag1 ("Big_int_Z", 12)), 0); (("sqrt_big_int", 475), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -178), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -177), 0), 100000000, 0, -176), 0, (("big_int_Z.mli", 38, 1182, 1182), ("big_int_Z.mli", 38, 1182, 1211), 0), 0, Tag1 ("Big_int_Z", 13)), 0); (("quomod_big_int", 476), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -175), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -174), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -172); (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -173)]), 100000000, 0, -171), 0), 100000000, 0, -170), 0), 100000000, 0, -169), 0, (("big_int_Z.mli", 39, 1212, 1212), ("big_int_Z.mli", 39, 1212, 1256), 0), 0, Tag1 ("Big_int_Z", 14)), 0); (("div_big_int", 477), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -168), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -167), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -166), 0), 100000000, 0, -165), 0), 100000000, 0, -164), 0, (("big_int_Z.mli", 40, 1257, 1257), ("big_int_Z.mli", 40, 1257, 1292), 0), 0, Tag1 ("Big_int_Z", 15)), 0); (("mod_big_int", 478), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -163), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -162), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -161), 0), 100000000, 0, -160), 0), 100000000, 0, -159), 0, (("big_int_Z.mli", 41, 1293, 1293), ("big_int_Z.mli", 41, 1293, 1328), 0), 0, Tag1 ("Big_int_Z", 16)), 0); (("gcd_big_int", 479), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -158), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -157), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -156), 0), 100000000, 0, -155), 0), 100000000, 0, -154), 0, (("big_int_Z.mli", 42, 1329, 1329), ("big_int_Z.mli", 42, 1329, 1364), 0), 0, Tag1 ("Big_int_Z", 17)), 0); (("power", 480), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -153), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -152), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -151), 0), 100000000, 0, -150), 0), 100000000, 0, -149), 0, (("big_int_Z.mli", 43, 1365, 1365), ("big_int_Z.mli", 43, 1365, 1394), 0), 0, Tag1 ("Big_int_Z", 18)), 0); (("power_big", 481), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -148), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -147), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -146), 0), 100000000, 0, -145), 0), 100000000, 0, -144), 0, (("big_int_Z.mli", 44, 1395, 1395), ("big_int_Z.mli", 44, 1395, 1428), 0), 0, Tag1 ("Big_int_Z", 19)), 0); (("power_int_positive_int", 482), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -143), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -142), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -141), 0), 100000000, 0, -140), 0), 100000000, 0, -139), 0, (("big_int_Z.mli", 45, 1429, 1429), ("big_int_Z.mli", 45, 1429, 1475), 0), 0, Tag1 ("Big_int_Z", 20)), 0); (("power_big_int_positive_int", 483), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -138), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -137), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -136), 0), 100000000, 0, -135), 0), 100000000, 0, -134), 0, (("big_int_Z.mli", 46, 1476, 1476), ("big_int_Z.mli", 46, 1476, 1526), 0), 0, Tag1 ("Big_int_Z", 21)), 0); (("power_int_positive_big_int", 484), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -133), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -132), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -131), 0), 100000000, 0, -130), 0), 100000000, 0, -129), 0, (("big_int_Z.mli", 47, 1527, 1527), ("big_int_Z.mli", 47, 1527, 1577), 0), 0, Tag1 ("Big_int_Z", 22)), 0); (("power_big_int_positive_big_int", 485), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -128), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -127), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -126), 0), 100000000, 0, -125), 0), 100000000, 0, -124), 0, (("big_int_Z.mli", 48, 1578, 1578), ("big_int_Z.mli", 48, 1578, 1632), 0), 0, Tag1 ("Big_int_Z", 23)), 0); (("sign_big_int", 486), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -123), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -122), 0), 100000000, 0, -121), 0, (("big_int_Z.mli", 49, 1633, 1633), ("big_int_Z.mli", 49, 1633, 1662), 0), 0, Tag1 ("Big_int_Z", 24)), 0); (("compare_big_int", 487), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -120), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -119), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -118), 0), 100000000, 0, -117), 0), 100000000, 0, -116), 0, (("big_int_Z.mli", 50, 1663, 1663), ("big_int_Z.mli", 50, 1663, 1702), 0), 0, Tag1 ("Big_int_Z", 25)), 0); (("eq_big_int", 488), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -115), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -114), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -113), 0), 100000000, 0, -112), 0), 100000000, 0, -111), 0, (("big_int_Z.mli", 51, 1703, 1703), ("big_int_Z.mli", 51, 1703, 1738), 0), 0, Tag1 ("Big_int_Z", 26)), 0); (("le_big_int", 489), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -110), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -109), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), 0, (("big_int_Z.mli", 52, 1739, 1739), ("big_int_Z.mli", 52, 1739, 1774), 0), 0, Tag1 ("Big_int_Z", 27)), 0); (("ge_big_int", 490), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -105), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -104), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -103), 0), 100000000, 0, -102), 0), 100000000, 0, -101), 0, (("big_int_Z.mli", 53, 1775, 1775), ("big_int_Z.mli", 53, 1775, 1810), 0), 0, Tag1 ("Big_int_Z", 28)), 0); (("lt_big_int", 491), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -100), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -99), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -98), 0), 100000000, 0, -97), 0), 100000000, 0, -96), 0, (("big_int_Z.mli", 54, 1811, 1811), ("big_int_Z.mli", 54, 1811, 1846), 0), 0, Tag1 ("Big_int_Z", 29)), 0); (("gt_big_int", 492), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -95), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -94), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -93), 0), 100000000, 0, -92), 0), 100000000, 0, -91), 0, (("big_int_Z.mli", 55, 1847, 1847), ("big_int_Z.mli", 55, 1847, 1882), 0), 0, Tag1 ("Big_int_Z", 30)), 0); (("max_big_int", 493), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -90), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -89), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -88), 0), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("big_int_Z.mli", 56, 1883, 1883), ("big_int_Z.mli", 56, 1883, 1918), 0), 0, Tag1 ("Big_int_Z", 31)), 0); (("min_big_int", 494), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -85), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -84), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -83), 0), 100000000, 0, -82), 0), 100000000, 0, -81), 0, (("big_int_Z.mli", 57, 1919, 1919), ("big_int_Z.mli", 57, 1919, 1954), 0), 0, Tag1 ("Big_int_Z", 32)), 0); (("num_digits_big_int", 495), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -80), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -79), 0), 100000000, 0, -78), 0, (("big_int_Z.mli", 58, 1955, 1955), ("big_int_Z.mli", 58, 1955, 1990), 0), 0, Tag1 ("Big_int_Z", 33)), 0); (("string_of_big_int", 496), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -77), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -76), 0), 100000000, 0, -75), 0, (("big_int_Z.mli", 59, 1991, 1991), ("big_int_Z.mli", 59, 1991, 2028), 0), 0, Tag1 ("Big_int_Z", 34)), 0); (("big_int_of_string", 497), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -74), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -73), 0), 100000000, 0, -72), 0, (("big_int_Z.mli", 60, 2029, 2029), ("big_int_Z.mli", 60, 2029, 2066), 0), 0, Tag1 ("Big_int_Z", 35)), 0); (("big_int_of_int", 498), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -71), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0, (("big_int_Z.mli", 61, 2067, 2067), ("big_int_Z.mli", 61, 2067, 2098), 0), 0, Tag1 ("Big_int_Z", 36)), 0); (("is_int_big_int", 499), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -68), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -67), 0), 100000000, 0, -66), 0, (("big_int_Z.mli", 62, 2099, 2099), ("big_int_Z.mli", 62, 2099, 2131), 0), 0, Tag1 ("Big_int_Z", 37)), 0); (("int_of_big_int", 500), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -65), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -64), 0), 100000000, 0, -63), 0, (("big_int_Z.mli", 63, 2132, 2132), ("big_int_Z.mli", 63, 2132, 2163), 0), 0, Tag1 ("Big_int_Z", 38)), 0); (("big_int_of_int32", 501), ((Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -62), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("big_int_Z.mli", 64, 2164, 2164), ("big_int_Z.mli", 64, 2164, 2199), 0), 0, Tag1 ("Big_int_Z", 39)), 0); (("big_int_of_nativeint", 502), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -59), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0, (("big_int_Z.mli", 65, 2200, 2200), ("big_int_Z.mli", 65, 2200, 2243), 0), 0, Tag1 ("Big_int_Z", 40)), 0); (("big_int_of_int64", 503), ((Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -56), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0, (("big_int_Z.mli", 66, 2244, 2244), ("big_int_Z.mli", 66, 2244, 2279), 0), 0, Tag1 ("Big_int_Z", 41)), 0); (("int32_of_big_int", 504), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -53), (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("big_int_Z.mli", 67, 2280, 2280), ("big_int_Z.mli", 67, 2280, 2315), 0), 0, Tag1 ("Big_int_Z", 42)), 0); (("nativeint_of_big_int", 505), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -50), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("big_int_Z.mli", 68, 2316, 2316), ("big_int_Z.mli", 68, 2316, 2359), 0), 0, Tag1 ("Big_int_Z", 43)), 0); (("int64_of_big_int", 506), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -47), (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0, (("big_int_Z.mli", 69, 2360, 2360), ("big_int_Z.mli", 69, 2360, 2395), 0), 0, Tag1 ("Big_int_Z", 44)), 0); (("float_of_big_int", 507), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -44), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("big_int_Z.mli", 70, 2396, 2396), ("big_int_Z.mli", 70, 2396, 2431), 0), 0, Tag1 ("Big_int_Z", 45)), 0); (("big_int_of_float", 508), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -41), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("big_int_Z.mli", 71, 2432, 2432), ("big_int_Z.mli", 71, 2432, 2467), 0), 0, Tag1 ("Big_int_Z", 46)), 0); (("and_big_int", 509), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -38), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -37), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("big_int_Z.mli", 72, 2468, 2468), ("big_int_Z.mli", 72, 2468, 2503), 0), 0, Tag1 ("Big_int_Z", 47)), 0); (("or_big_int", 510), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -33), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -32), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("big_int_Z.mli", 73, 2504, 2504), ("big_int_Z.mli", 73, 2504, 2538), 0), 0, Tag1 ("Big_int_Z", 48)), 0); (("xor_big_int", 511), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -27), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("big_int_Z.mli", 74, 2539, 2539), ("big_int_Z.mli", 74, 2539, 2574), 0), 0, Tag1 ("Big_int_Z", 49)), 0); (("shift_left_big_int", 512), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -23), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -22), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("big_int_Z.mli", 75, 2575, 2575), ("big_int_Z.mli", 75, 2575, 2617), 0), 0, Tag1 ("Big_int_Z", 50)), 0); (("shift_right_big_int", 513), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -18), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -17), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("big_int_Z.mli", 76, 2618, 2618), ("big_int_Z.mli", 76, 2618, 2661), 0), 0, Tag1 ("Big_int_Z", 51)), 0); (("shift_right_towards_zero_big_int", 514), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -12), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("big_int_Z.mli", 77, 2662, 2662), ("big_int_Z.mli", 77, 2662, 2718), 0), 0, Tag1 ("Big_int_Z", 52)), 0); (("extract_big_int", 515), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -8), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -6), (Tag3 (Tag1 ((Tag2 ("Z")), "t"), 0, (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("big_int_Z.mli", 78, 2719, 2719), ("big_int_Z.mli", 78, 2719, 2765), 0), 0, Tag1 ("Big_int_Z", 53)), 0)], "Big_int_Z", [("Big_int_Z", ("fJ\175\203|/\129\156)L\200Tep\135\211")); ("Z", ("\253\196\2168\027\199O\134\220\218\031'\1484\233o")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Random", ("\020\005Xq\171\026\218\152X\135\254\023\133zK\200")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val extract_big_int : Z.t -> int -> int -> Z.t
