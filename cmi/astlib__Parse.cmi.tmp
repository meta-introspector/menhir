val implementation : Lexing.lexbuf -> Parsetree.structure_item list
val interface : Lexing.lexbuf -> Parsetree.signature_item list
val toplevel_phrase : Lexing.lexbuf -> Parsetree.toplevel_phrase
val use_file : Lexing.lexbuf -> Parsetree.toplevel_phrase list
val core_type : Lexing.lexbuf -> Parsetree.core_type
val expression : Lexing.lexbuf -> Parsetree.expression
("DEBUG:rule", [(("implementation", 424), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -25), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure_item"), 0, (0)), 100000000, 0, -24)], (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("astlib/parse.mli", 3, 58, 58), ("astlib/parse.mli", 3, 58, 125), 0), 0, Tag1 ("Astlib__Parse", 2)), 0); (("interface", 425), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -21), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item"), 0, (0)), 100000000, 0, -20)], (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("astlib/parse.mli", 6, 152, 152), ("astlib/parse.mli", 6, 152, 214), 0), 0, Tag1 ("Astlib__Parse", 3)), 0); (("toplevel_phrase", 426), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -17), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "toplevel_phrase"), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("astlib/parse.mli", 9, 241, 241), ("astlib/parse.mli", 9, 241, 305), 0), 0, Tag1 ("Astlib__Parse", 4)), 0); (("use_file", 427), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -14), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Parsetree")), "toplevel_phrase"), 0, (0)), 100000000, 0, -13)], (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("astlib/parse.mli", 12, 338, 338), ("astlib/parse.mli", 12, 338, 400), 0), 0, Tag1 ("Astlib__Parse", 5)), 0); (("core_type", 428), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -10), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("astlib/parse.mli", 15, 444, 444), ("astlib/parse.mli", 15, 444, 496), 0), 0, Tag1 ("Astlib__Parse", 6)), 0); (("expression", 429), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -7), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("astlib/parse.mli", 18, 523, 523), ("astlib/parse.mli", 18, 523, 577), 0), 0, Tag1 ("Astlib__Parse", 7)), 0); (("pattern", 430), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -4), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("astlib/parse.mli", 21, 606, 606), ("astlib/parse.mli", 21, 606, 654), 0), 0, Tag1 ("Astlib__Parse", 8)), 0)], "Astlib__Parse", [("Astlib__Parse", ("\203iQ\135d.\147$\t\207\203C\131\175\193\171")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216")); ("Astlib__", ("\246\155.n\143$\1435\bi\005\019C\219\191A"))], [(0)])
val pattern : Lexing.lexbuf -> Parsetree.pattern
