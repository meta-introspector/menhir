module Make :
  functor (SChunk : Sek__.PrivateSignatures.SCHUNK)
    (C : Sek__.PublicSettings.CAPACITY) ->
    sig
      type 'a schunk = 'a SChunk.t
      type 'a measure =
        'a SChunk.measure =
          MUnit : 'b measure
        | MSWeight : 'c schunk measure
      type 'a t =
          Zero of { default : 'a; }
        | One of { default : 'a; x : 'a; }
        | Short of { default : 'a; a : 'a array; }
        | Level of { weight : Sek__PrivateSignatures.weight;
            front : 'a schunk; middle : 'a schunk t; back : 'a schunk;
          }
      val create : 'a -> 'a t
      val make :
        'a ->
        Sek__.PublicTypeAbbreviations.length ->
        'a -> Sek__PrivateSignatures.owner -> 'a t
      val init :
        'a ->
        Sek__.PublicTypeAbbreviations.length ->
        (Sek__.PublicTypeAbbreviations.index -> 'a) ->
        Sek__PrivateSignatures.owner -> 'a t
      val nonempty_level :
        Sek__PrivateSignatures.pov ->
        Sek__PrivateSignatures.weight ->
        'a schunk -> 'a schunk t -> 'a schunk -> 'a t
      val create_middle : 'a -> 'a schunk t
      val default : 'a t -> 'a
      val weight : 'a t -> Sek__PrivateSignatures.weight
      val is_empty : 'a t -> bool
      val dummy : 'a t -> 'a schunk
      val check :
        'a t ->
        'a measure ->
        Sek__PrivateSignatures.owner ->
        Sek__.PublicTypeAbbreviations.depth -> unit
      val check_middle :
        'a schunk t ->
        'a measure ->
        Sek__PrivateSignatures.owner ->
        Sek__.PublicTypeAbbreviations.depth -> unit
      val push :
        Sek__PrivateSignatures.pov ->
        'a t ->
        'a ->
        'a measure ->
        Sek__PrivateSignatures.owner ->
        Sek__.PublicTypeAbbreviations.depth -> 'a t
      val pop :
        Sek__PrivateSignatures.pov ->
        'a t -> 'a measure -> Sek__PrivateSignatures.owner -> 'a * 'a t
      val peek : Sek__PrivateSignatures.pov -> 'a t -> 'a
      val get :
        'a t ->
        Sek__PrivateSignatures.weight ->
        'a measure -> Sek__PrivateSignatures.weight * 'a
      val set :
        'a t ->
        Sek__PrivateSignatures.weight ->
        'a measure -> Sek__PrivateSignatures.owner -> 'a -> 'a t
      val update :
        'a measure ->
        Sek__PrivateSignatures.owner ->
        'a Sek__PrivateSignatures.update ->
        'a t Sek__PrivateSignatures.update
      val fuse_back :
        'a schunk t ->
        'a schunk ->
        Sek__PrivateSignatures.owner ->
        Sek__.PublicTypeAbbreviations.depth -> 'a schunk t
      val fuse :
        'a schunk t ->
        'a schunk t ->
        Sek__PrivateSignatures.owner ->
        Sek__.PublicTypeAbbreviations.depth -> 'a schunk t
      val concat :
        'a t ->
        'a t ->
        Sek__PrivateSignatures.owner ->
        Sek__.PublicTypeAbbreviations.depth -> 'a t
      val three_way_split :
        'a t ->
        Sek__PrivateSignatures.weight ->
        'a measure -> Sek__PrivateSignatures.owner -> 'a t * 'a * 'a t
      val take :
        'a t ->
        Sek__PrivateSignatures.weight ->
        'a measure -> Sek__PrivateSignatures.owner -> 'a t * 'a
      val drop :
        'a t ->
        Sek__PrivateSignatures.weight ->
        'a measure -> Sek__PrivateSignatures.owner -> 'a * 'a t
      val to_array : 'a t -> 'a array
      val of_array_segment :
        'a ->
        'a array ->
        Sek__.PublicTypeAbbreviations.index ->
        Sek__.PublicTypeAbbreviations.length ->
        Sek__PrivateSignatures.owner -> 'a t
      val iter : Sek__PrivateSignatures.pov -> ('a -> unit) -> 'a t -> unit
      val iter_segments :
        Sek__PrivateSignatures.pov ->
        'a t -> 'a Sek__.PublicTypeAbbreviations.segments
      val print :
        'a measure -> ('a -> PPrint.document) -> 'a t -> PPrint.document("DEBUG:rule", [Tag3 (("Make", 644), 0, (Tag2 (((("SChunk", 645)), (Tag1 (Tag1 ((Tag2 ("Sek__")), "PrivateSignatures"), "SCHUNK"))), Tag2 (((("C", 646)), (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicSettings"), "CAPACITY"))), Tag1 ([Tag1 (("schunk", 647), ([((("a")), 100000000, 0, -257)], 1, 0, 1, ((Tag3 (Tag1 ((("SChunk", 645)), "t"), [((("a")), 100000000, 0, -257)], (0)), 100000000, 0, -256)), [7], [2], 0, 0, (("src/ShareableSequence.mli", 20, 1069, 1081), ("src/ShareableSequence.mli", 20, 1069, 1109), 0), 0, 0, 0, Tag1 ("Sek__ShareableSequence", 6)), 1, 0); Tag1 (("measure", 648), ([((("a")), 100000000, 0, -250)], 1, Tag1 ([(("MUnit", 547), (0), ((Tag3 ((("measure", 648)), [((0), 100000000, 0, -252)], (0)), 100000000, 0, -251)), (("src/PrivateSignatures.ml", 627, 28583, 28585), ("src/PrivateSignatures.ml", 627, 28583, 28613), 0), 0, Tag1 ("Sek__PrivateSignatures", 128)); (("MSWeight", 548), (0), ((Tag3 ((("measure", 648)), [(Tag3 ((("schunk", 647)), [((0), 100000000, 0, -255)], (0)), 100000000, 0, -254)], (0)), 100000000, 0, -253)), (("src/PrivateSignatures.ml", 628, 28614, 28616), ("src/PrivateSignatures.ml", 628, 28614, 28646), 0), 0, Tag1 ("Sek__PrivateSignatures", 129))], 0), 1, ((Tag3 (Tag1 ((("SChunk", 645)), "measure"), [((("a")), 100000000, 0, -250)], (0)), 100000000, 0, -249)), [63], [0], 0, 0, (("src/ShareableSequence.mli", 21, 1110, 1122), ("src/ShareableSequence.mli", 21, 1110, 1157), 0), 0, 1, 0, Tag1 ("Sek__ShareableSequence", 15)), 1, 0); Tag1 (("t", 649), ([((("a")), 100000000, 0, -242)], 1, Tag1 ([(("Zero", 550), Tag1 ([(("default", 551), 0, ((("a")), 100000000, 0, -242), (("src/PrivateSignatures.ml", 632, 28718, 28735), ("src/PrivateSignatures.ml", 632, 28718, 28748), 0), 0, Tag1 ("Sek__PrivateSignatures", 131))]), 0, (("src/PrivateSignatures.ml", 632, 28718, 28722), ("src/PrivateSignatures.ml", 632, 28718, 28750), 0), 0, Tag1 ("Sek__PrivateSignatures", 132)); (("One", 552), Tag1 ([(("default", 553), 0, ((("a")), 100000000, 0, -242), (("src/PrivateSignatures.ml", 633, 28751, 28768), ("src/PrivateSignatures.ml", 633, 28751, 28781), 0), 0, Tag1 ("Sek__PrivateSignatures", 133)); (("x", 554), 0, ((("a")), 100000000, 0, -242), (("src/PrivateSignatures.ml", 633, 28751, 28782), ("src/PrivateSignatures.ml", 633, 28751, 28788), 0), 0, Tag1 ("Sek__PrivateSignatures", 134))]), 0, (("src/PrivateSignatures.ml", 633, 28751, 28755), ("src/PrivateSignatures.ml", 633, 28751, 28790), 0), 0, Tag1 ("Sek__PrivateSignatures", 135)); (("Short", 555), Tag1 ([(("default", 556), 0, ((("a")), 100000000, 0, -242), (("src/PrivateSignatures.ml", 634, 28791, 28808), ("src/PrivateSignatures.ml", 634, 28791, 28821), 0), 0, Tag1 ("Sek__PrivateSignatures", 136)); (("a", 557), 0, (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -242)], (0)), 100000000, 0, -243), (("src/PrivateSignatures.ml", 634, 28791, 28822), ("src/PrivateSignatures.ml", 634, 28791, 28834), 0), 0, Tag1 ("Sek__PrivateSignatures", 137))]), 0, (("src/PrivateSignatures.ml", 634, 28791, 28795), ("src/PrivateSignatures.ml", 634, 28791, 28836), 0), 0, Tag1 ("Sek__PrivateSignatures", 138)); (("Level", 558), Tag1 ([(("weight", 559), 0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "weight"), 0, (0)), 100000000, 0, -244), (("src/PrivateSignatures.ml", 636, 28854, 28862), ("src/PrivateSignatures.ml", 636, 28854, 28878), 0), 0, Tag1 ("Sek__PrivateSignatures", 139)); (("front", 560), 0, (Tag3 ((("schunk", 647)), [((("a")), 100000000, 0, -242)], (0)), 100000000, 0, -245), (("src/PrivateSignatures.ml", 637, 28879, 28887), ("src/PrivateSignatures.ml", 637, 28879, 28905), 0), 0, Tag1 ("Sek__PrivateSignatures", 140)); (("middle", 561), 0, (Tag3 ((("t", 649)), [(Tag3 ((("schunk", 647)), [((("a")), 100000000, 0, -242)], (0)), 100000000, 0, -247)], (0)), 100000000, 0, -246), (("src/PrivateSignatures.ml", 638, 28906, 28914), ("src/PrivateSignatures.ml", 638, 28906, 28935), 0), 0, Tag1 ("Sek__PrivateSignatures", 141)); (("back", 562), 0, (Tag3 ((("schunk", 647)), [((("a")), 100000000, 0, -242)], (0)), 100000000, 0, -248), (("src/PrivateSignatures.ml", 639, 28936, 28944), ("src/PrivateSignatures.ml", 639, 28936, 28961), 0), 0, Tag1 ("Sek__PrivateSignatures", 142))]), 0, (("src/PrivateSignatures.ml", 635, 28837, 28841), ("src/PrivateSignatures.ml", 640, 28962, 28969), 0), 0, Tag1 ("Sek__PrivateSignatures", 143))], 0), 1, 0, [63], [0], 0, 0, (("src/PrivateSignatures.ml", 631, 28704, 28706), ("src/PrivateSignatures.ml", 640, 28962, 28969), 0), 0, 0, 0, Tag1 ("Sek__PrivateSignatures", 130)), 1, 0); (("create", 650), ((Tag1 (0, ((("a")), 100000000, 0, -241), (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -241)], (0)), 100000000, 0, -240), 0), 100000000, 0, -239), 0, (("src/PrivateSignatures.ml", 652, 29515, 29517), ("src/PrivateSignatures.ml", 652, 29515, 29540), 0), 0, Tag1 ("Sek__PrivateSignatures", 168)), 0); (("make", 651), ((Tag1 (0, ((("a")), 100000000, 0, -236), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "length"), 0, (0)), 100000000, 0, -238), (Tag1 (0, ((("a")), 100000000, 0, -236), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "owner"), 0, (0)), 100000000, 0, -237), (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -236)], (0)), 100000000, 0, -235), 0), 100000000, 0, -234), 0), 100000000, 0, -233), 0), 100000000, 0, -232), 0), 100000000, 0, -231), 0, (("src/PrivateSignatures.ml", 656, 29672, 29674), ("src/PrivateSignatures.ml", 656, 29672, 29720), 0), 0, Tag1 ("Sek__PrivateSignatures", 169)), 0); (("init", 652), ((Tag1 (0, ((("a")), 100000000, 0, -226), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "length"), 0, (0)), 100000000, 0, -230), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "index"), 0, (0)), 100000000, 0, -229), ((("a")), 100000000, 0, -226), 0), 100000000, 0, -228), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "owner"), 0, (0)), 100000000, 0, -227), (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -226)], (0)), 100000000, 0, -225), 0), 100000000, 0, -224), 0), 100000000, 0, -223), 0), 100000000, 0, -222), 0), 100000000, 0, -221), 0, (("src/PrivateSignatures.ml", 661, 29906, 29908), ("src/PrivateSignatures.ml", 661, 29906, 29965), 0), 0, Tag1 ("Sek__PrivateSignatures", 170)), 0); (("nonempty_level", 653), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "pov"), 0, (0)), 100000000, 0, -220), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "weight"), 0, (0)), 100000000, 0, -219), (Tag1 (0, (Tag3 ((("schunk", 647)), [((("a")), 100000000, 0, -214)], (0)), 100000000, 0, -218), (Tag1 (0, (Tag3 ((("t", 649)), [(Tag3 ((("schunk", 647)), [((("a")), 100000000, 0, -214)], (0)), 100000000, 0, -217)], (0)), 100000000, 0, -216), (Tag1 (0, (Tag3 ((("schunk", 647)), [((("a")), 100000000, 0, -214)], (0)), 100000000, 0, -215), (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -214)], (0)), 100000000, 0, -213), 0), 100000000, 0, -212), 0), 100000000, 0, -211), 0), 100000000, 0, -210), 0), 100000000, 0, -209), 0), 100000000, 0, -208), 0, (("src/PrivateSignatures.ml", 667, 30260, 30262), ("src/PrivateSignatures.ml", 668, 30283, 30349), 0), 0, Tag1 ("Sek__PrivateSignatures", 171)), 0); (("create_middle", 654), ((Tag1 (0, ((("a")), 100000000, 0, -207), (Tag3 ((("t", 649)), [(Tag3 ((("schunk", 647)), [((("a")), 100000000, 0, -207)], (0)), 100000000, 0, -206)], (0)), 100000000, 0, -205), 0), 100000000, 0, -204), 0, (("src/PrivateSignatures.ml", 672, 30483, 30485), ("src/PrivateSignatures.ml", 672, 30483, 30522), 0), 0, Tag1 ("Sek__PrivateSignatures", 172)), 0); (("default", 655), ((Tag1 (0, (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -202)], (0)), 100000000, 0, -203), ((("a")), 100000000, 0, -202), 0), 100000000, 0, -201), 0, (("src/PrivateSignatures.ml", 677, 30703, 30705), ("src/PrivateSignatures.ml", 677, 30703, 30729), 0), 0, Tag1 ("Sek__PrivateSignatures", 173)), 0); (("weight", 656), ((Tag1 (0, (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -200)], (0)), 100000000, 0, -199), (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "weight"), 0, (0)), 100000000, 0, -198), 0), 100000000, 0, -197), 0, (("src/PrivateSignatures.ml", 680, 30808, 30810), ("src/PrivateSignatures.ml", 680, 30808, 30837), 0), 0, Tag1 ("Sek__PrivateSignatures", 174)), 0); (("is_empty", 657), ((Tag1 (0, (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -196)], (0)), 100000000, 0, -195), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -194), 0), 100000000, 0, -193), 0, (("src/PrivateSignatures.ml", 683, 30907, 30909), ("src/PrivateSignatures.ml", 683, 30907, 30936), 0), 0, Tag1 ("Sek__PrivateSignatures", 175)), 0); (("dummy", 658), ((Tag1 (0, (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -191)], (0)), 100000000, 0, -192), (Tag3 ((("schunk", 647)), [((("a")), 100000000, 0, -191)], (0)), 100000000, 0, -190), 0), 100000000, 0, -189), 0, (("src/PrivateSignatures.ml", 687, 31047, 31049), ("src/PrivateSignatures.ml", 687, 31047, 31078), 0), 0, Tag1 ("Sek__PrivateSignatures", 176)), 0); (("check", 659), ((Tag1 (0, (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -187)], (0)), 100000000, 0, -188), (Tag1 (0, (Tag3 ((("measure", 648)), [((("a")), 100000000, 0, -187)], (0)), 100000000, 0, -186), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "owner"), 0, (0)), 100000000, 0, -185), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "depth"), 0, (0)), 100000000, 0, -184), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -183), 0), 100000000, 0, -182), 0), 100000000, 0, -181), 0), 100000000, 0, -180), 0), 100000000, 0, -179), 0, (("src/PrivateSignatures.ml", 691, 31214, 31216), ("src/PrivateSignatures.ml", 691, 31214, 31272), 0), 0, Tag1 ("Sek__PrivateSignatures", 177)), 0); (("check_middle", 660), ((Tag1 (0, (Tag3 ((("t", 649)), [(Tag3 ((("schunk", 647)), [((("a")), 100000000, 0, -176)], (0)), 100000000, 0, -178)], (0)), 100000000, 0, -177), (Tag1 (0, (Tag3 ((("measure", 648)), [((("a")), 100000000, 0, -176)], (0)), 100000000, 0, -175), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "owner"), 0, (0)), 100000000, 0, -174), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "depth"), 0, (0)), 100000000, 0, -173), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -172), 0), 100000000, 0, -171), 0), 100000000, 0, -170), 0), 100000000, 0, -169), 0), 100000000, 0, -168), 0, (("src/PrivateSignatures.ml", 697, 31582, 31584), ("src/PrivateSignatures.ml", 697, 31582, 31654), 0), 0, Tag1 ("Sek__PrivateSignatures", 178)), 0); (("push", 661), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "pov"), 0, (0)), 100000000, 0, -167), (Tag1 (0, (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -162)], (0)), 100000000, 0, -166), (Tag1 (0, ((("a")), 100000000, 0, -162), (Tag1 (0, (Tag3 ((("measure", 648)), [((("a")), 100000000, 0, -162)], (0)), 100000000, 0, -165), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "owner"), 0, (0)), 100000000, 0, -164), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "depth"), 0, (0)), 100000000, 0, -163), (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -162)], (0)), 100000000, 0, -161), 0), 100000000, 0, -160), 0), 100000000, 0, -159), 0), 100000000, 0, -158), 0), 100000000, 0, -157), 0), 100000000, 0, -156), 0), 100000000, 0, -155), 0, (("src/PrivateSignatures.ml", 701, 31818, 31820), ("src/PrivateSignatures.ml", 701, 31818, 31888), 0), 0, Tag1 ("Sek__PrivateSignatures", 179)), 0); (("pop", 662), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "pov"), 0, (0)), 100000000, 0, -154), (Tag1 (0, (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -149)], (0)), 100000000, 0, -153), (Tag1 (0, (Tag3 ((("measure", 648)), [((("a")), 100000000, 0, -149)], (0)), 100000000, 0, -152), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "owner"), 0, (0)), 100000000, 0, -151), (Tag2 ([((("a")), 100000000, 0, -149); (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -149)], (0)), 100000000, 0, -150)]), 100000000, 0, -148), 0), 100000000, 0, -147), 0), 100000000, 0, -146), 0), 100000000, 0, -145), 0), 100000000, 0, -144), 0, (("src/PrivateSignatures.ml", 707, 32160, 32162), ("src/PrivateSignatures.ml", 707, 32160, 32219), 0), 0, Tag1 ("Sek__PrivateSignatures", 180)), 0); (("peek", 663), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "pov"), 0, (0)), 100000000, 0, -143), (Tag1 (0, (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -141)], (0)), 100000000, 0, -142), ((("a")), 100000000, 0, -141), 0), 100000000, 0, -140), 0), 100000000, 0, -139), 0, (("src/PrivateSignatures.ml", 712, 32446, 32448), ("src/PrivateSignatures.ml", 712, 32446, 32476), 0), 0, Tag1 ("Sek__PrivateSignatures", 181)), 0); (("get", 664), ((Tag1 (0, (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -135)], (0)), 100000000, 0, -138), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "weight"), 0, (0)), 100000000, 0, -137), (Tag1 (0, (Tag3 ((("measure", 648)), [((("a")), 100000000, 0, -135)], (0)), 100000000, 0, -136), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "weight"), 0, (0)), 100000000, 0, -134); ((("a")), 100000000, 0, -135)]), 100000000, 0, -133), 0), 100000000, 0, -132), 0), 100000000, 0, -131), 0), 100000000, 0, -130), 0, (("src/PrivateSignatures.ml", 719, 32766, 32768), ("src/PrivateSignatures.ml", 719, 32766, 32821), 0), 0, Tag1 ("Sek__PrivateSignatures", 182)), 0); (("set", 665), ((Tag1 (0, (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -125)], (0)), 100000000, 0, -129), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "weight"), 0, (0)), 100000000, 0, -128), (Tag1 (0, (Tag3 ((("measure", 648)), [((("a")), 100000000, 0, -125)], (0)), 100000000, 0, -127), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "owner"), 0, (0)), 100000000, 0, -126), (Tag1 (0, ((("a")), 100000000, 0, -125), (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -125)], (0)), 100000000, 0, -124), 0), 100000000, 0, -123), 0), 100000000, 0, -122), 0), 100000000, 0, -121), 0), 100000000, 0, -120), 0), 100000000, 0, -119), 0, (("src/PrivateSignatures.ml", 724, 33028, 33030), ("src/PrivateSignatures.ml", 724, 33028, 33091), 0), 0, Tag1 ("Sek__PrivateSignatures", 183)), 0); (("update", 666), ((Tag1 (0, (Tag3 ((("measure", 648)), [((("a")), 100000000, 0, -115)], (0)), 100000000, 0, -118), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "owner"), 0, (0)), 100000000, 0, -117), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "update"), [((("a")), 100000000, 0, -115)], (0)), 100000000, 0, -116), (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "update"), [(Tag3 ((("t", 649)), [((("a")), 100000000, 0, -115)], (0)), 100000000, 0, -114)], (0)), 100000000, 0, -113), 0), 100000000, 0, -112), 0), 100000000, 0, -111), 0), 100000000, 0, -110), 0, (("src/PrivateSignatures.ml", 729, 33306, 33308), ("src/PrivateSignatures.ml", 729, 33306, 33368), 0), 0, Tag1 ("Sek__PrivateSignatures", 184)), 0); (("fuse_back", 667), ((Tag1 (0, (Tag3 ((("t", 649)), [(Tag3 ((("schunk", 647)), [((("a")), 100000000, 0, -104)], (0)), 100000000, 0, -109)], (0)), 100000000, 0, -108), (Tag1 (0, (Tag3 ((("schunk", 647)), [((("a")), 100000000, 0, -104)], (0)), 100000000, 0, -107), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "owner"), 0, (0)), 100000000, 0, -106), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "depth"), 0, (0)), 100000000, 0, -105), (Tag3 ((("t", 649)), [(Tag3 ((("schunk", 647)), [((("a")), 100000000, 0, -104)], (0)), 100000000, 0, -103)], (0)), 100000000, 0, -102), 0), 100000000, 0, -101), 0), 100000000, 0, -100), 0), 100000000, 0, -99), 0), 100000000, 0, -98), 0, (("src/PrivateSignatures.ml", 736, 33695, 33697), ("src/PrivateSignatures.ml", 736, 33695, 33770), 0), 0, Tag1 ("Sek__PrivateSignatures", 185)), 0); (("fuse", 668), ((Tag1 (0, (Tag3 ((("t", 649)), [(Tag3 ((("schunk", 647)), [((("a")), 100000000, 0, -91)], (0)), 100000000, 0, -97)], (0)), 100000000, 0, -96), (Tag1 (0, (Tag3 ((("t", 649)), [(Tag3 ((("schunk", 647)), [((("a")), 100000000, 0, -91)], (0)), 100000000, 0, -95)], (0)), 100000000, 0, -94), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "owner"), 0, (0)), 100000000, 0, -93), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "depth"), 0, (0)), 100000000, 0, -92), (Tag3 ((("t", 649)), [(Tag3 ((("schunk", 647)), [((("a")), 100000000, 0, -91)], (0)), 100000000, 0, -90)], (0)), 100000000, 0, -89), 0), 100000000, 0, -88), 0), 100000000, 0, -87), 0), 100000000, 0, -86), 0), 100000000, 0, -85), 0, (("src/PrivateSignatures.ml", 743, 34093, 34095), ("src/PrivateSignatures.ml", 743, 34093, 34165), 0), 0, Tag1 ("Sek__PrivateSignatures", 186)), 0); (("concat", 669), ((Tag1 (0, (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -80)], (0)), 100000000, 0, -84), (Tag1 (0, (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -80)], (0)), 100000000, 0, -83), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "owner"), 0, (0)), 100000000, 0, -82), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "depth"), 0, (0)), 100000000, 0, -81), (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -80)], (0)), 100000000, 0, -79), 0), 100000000, 0, -78), 0), 100000000, 0, -77), 0), 100000000, 0, -76), 0), 100000000, 0, -75), 0, (("src/PrivateSignatures.ml", 746, 34241, 34243), ("src/PrivateSignatures.ml", 746, 34241, 34294), 0), 0, Tag1 ("Sek__PrivateSignatures", 187)), 0); (("three_way_split", 670), ((Tag1 (0, (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -69)], (0)), 100000000, 0, -74), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "weight"), 0, (0)), 100000000, 0, -73), (Tag1 (0, (Tag3 ((("measure", 648)), [((("a")), 100000000, 0, -69)], (0)), 100000000, 0, -72), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "owner"), 0, (0)), 100000000, 0, -71), (Tag2 ([(Tag3 ((("t", 649)), [((("a")), 100000000, 0, -69)], (0)), 100000000, 0, -68); ((("a")), 100000000, 0, -69); (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -69)], (0)), 100000000, 0, -70)]), 100000000, 0, -67), 0), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0), 100000000, 0, -63), 0, (("src/PrivateSignatures.ml", 753, 34651, 34653), ("src/PrivateSignatures.ml", 754, 34675, 34736), 0), 0, Tag1 ("Sek__PrivateSignatures", 188)), 0); (("take", 671), ((Tag1 (0, (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -58)], (0)), 100000000, 0, -62), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "weight"), 0, (0)), 100000000, 0, -61), (Tag1 (0, (Tag3 ((("measure", 648)), [((("a")), 100000000, 0, -58)], (0)), 100000000, 0, -60), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "owner"), 0, (0)), 100000000, 0, -59), (Tag2 ([(Tag3 ((("t", 649)), [((("a")), 100000000, 0, -58)], (0)), 100000000, 0, -57); ((("a")), 100000000, 0, -58)]), 100000000, 0, -56), 0), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0, (("src/PrivateSignatures.ml", 758, 34877, 34879), ("src/PrivateSignatures.ml", 758, 34877, 34940), 0), 0, Tag1 ("Sek__PrivateSignatures", 189)), 0); (("drop", 672), ((Tag1 (0, (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -46)], (0)), 100000000, 0, -51), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "weight"), 0, (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 ((("measure", 648)), [((("a")), 100000000, 0, -46)], (0)), 100000000, 0, -49), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "owner"), 0, (0)), 100000000, 0, -48), (Tag2 ([((("a")), 100000000, 0, -46); (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -46)], (0)), 100000000, 0, -47)]), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("src/PrivateSignatures.ml", 762, 35081, 35083), ("src/PrivateSignatures.ml", 762, 35081, 35144), 0), 0, Tag1 ("Sek__PrivateSignatures", 190)), 0); (("to_array", 673), ((Tag1 (0, (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -39)], (0)), 100000000, 0, -40), (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -39)], (0)), 100000000, 0, -38), 0), 100000000, 0, -37), 0, (("src/PrivateSignatures.ml", 766, 35249, 35251), ("src/PrivateSignatures.ml", 766, 35249, 35282), 0), 0, Tag1 ("Sek__PrivateSignatures", 191)), 0); (("of_array_segment", 674), ((Tag1 (0, ((("a")), 100000000, 0, -32), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -32)], (0)), 100000000, 0, -36), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "index"), 0, (0)), 100000000, 0, -35), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "length"), 0, (0)), 100000000, 0, -34), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "owner"), 0, (0)), 100000000, 0, -33), (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -32)], (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("src/PrivateSignatures.ml", 771, 35506, 35508), ("src/PrivateSignatures.ml", 771, 35506, 35581), 0), 0, Tag1 ("Sek__PrivateSignatures", 192)), 0); (("iter", 675), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "pov"), 0, (0)), 100000000, 0, -25), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -22), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), (Tag1 (0, (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -22)], (0)), 100000000, 0, -21), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("src/PrivateSignatures.ml", 775, 35735, 35737), ("src/PrivateSignatures.ml", 775, 35735, 35783), 0), 0, Tag1 ("Sek__PrivateSignatures", 193)), 0); (("iter_segments", 676), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sek__PrivateSignatures")), "pov"), 0, (0)), 100000000, 0, -16), (Tag1 (0, (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -14)], (0)), 100000000, 0, -15), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sek__")), "PublicTypeAbbreviations"), "segments"), [((("a")), 100000000, 0, -14)], (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("src/PrivateSignatures.ml", 779, 35900, 35902), ("src/PrivateSignatures.ml", 779, 35900, 35948), 0), 0, Tag1 ("Sek__PrivateSignatures", 194)), 0); (("print", 677), ((Tag1 (0, (Tag3 ((("measure", 648)), [((("a")), 100000000, 0, -7)], (0)), 100000000, 0, -10), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -7), (Tag3 (Tag1 ((Tag2 ("PPrint")), "document"), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), (Tag1 (0, (Tag3 ((("t", 649)), [((("a")), 100000000, 0, -7)], (0)), 100000000, 0, -6), (Tag3 (Tag1 ((Tag2 ("PPrint")), "document"), 0, (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/PrivateSignatures.ml", 783, 36083, 36085), ("src/PrivateSignatures.ml", 783, 36083, 36161), 0), 0, Tag1 ("Sek__PrivateSignatures", 195)), 0)]))), 0, (("src/ShareableSequence.mli", 17, 1020, 1020), ("src/ShareableSequence.mli", 21, 1110, 1157), 0), Tag1 ("Sek__ShareableSequence", 20)), 0, 0)], "Sek__ShareableSequence", [("Sek__ShareableSequence", ("^\147Y\235\012z\134\014[\223\020G\153\189v\128")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sek__PublicTypeAbbreviations", ("\201\251\244\167\199\157\227\233\251\227b\132\146]>\232")); ("Sek__PublicSettings", ("\133\220\011\157jd\181\\V\002\146\022t\166u\149")); ("Sek__PrivateSignatures", ("\187[j\006\197\232[2-\184F\232V~a\184")); ("Sek__Owner", ("\228~\155T\164\209\210ZNr\165\246\165\216\130-")); ("Sek__", ("b\188\017\179d|~L\019\214\028\188\145y\210\250")); ("PPrintEngine", ("V_\162\193\202\031c\185\nQ\232bL\0299\195")); ("PPrint", ("a\179\180\0030=\b^\136P\234\220\171\0210A")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

    end
