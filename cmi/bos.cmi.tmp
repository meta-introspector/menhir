module Pat :
  sig
    type t
    val v : string -> t
    val empty : t
    val dom : t -> Astring.String.Set.t
    val equal : t -> t -> bool
    val compare : t -> t -> int
    val of_string : string -> (t, [> Rresult.R.msg ]) Rresult.result
    val to_string : t -> string
    val pp : Format.formatter -> t -> unit
    val dump : Format.formatter -> t -> unit
    type defs = string Astring.String.Map.t
    val subst : ?undef:(string -> string option) -> defs -> t -> t
    val format : ?undef:(string -> string) -> defs -> t -> string
    val matches : t -> string -> bool
    val query : ?init:defs -> t -> string -> defs option
  end
module Cmd :
  sig
    type t
    val v : string -> t
    val empty : t
    val is_empty : t -> bool
    val ( % ) : t -> string -> t
    val ( %% ) : t -> t -> t
    val add_arg : t -> string -> t
    val add_args : t -> t -> t
    val on : bool -> t -> t
    val p : Fpath.t -> string
    val line_tool : t -> string option
    val get_line_tool : t -> string
    val line_args : t -> string list
    val line_exec : t -> string option
    val get_line_exec : t -> string
    val equal : t -> t -> bool
    val compare : t -> t -> int
    val of_string : string -> (t, Rresult.R.msg) Rresult.result
    val to_string : t -> string
    val to_list : t -> string list
    val of_list : ?slip:string -> string list -> t
    val of_values : ?slip:string -> ('a -> string) -> 'a list -> t
    val pp : Format.formatter -> t -> unit
    val dump : Format.formatter -> t -> unit
  end
module OS :
  sig
    type ('a, 'e) result = ('a, 'e) result constraint 'e = [> Rresult.R.msg ]
    module Env :
      sig
        type t = string Astring.String.map
        val current : unit -> (t, [> Rresult.R.msg ]) result
        val var : string -> string option
        val set_var :
          string -> string option -> (unit, [> Rresult.R.msg ]) result
        val opt_var : string -> absent:string -> string
        val req_var : string -> (string, [> Rresult.R.msg ]) result
        type 'a parser = string -> ('a, Rresult.R.msg) result
        val parser : string -> (string -> 'a option) -> 'a parser
        val bool : bool parser
        val string : string parser
        val path : Fpath.t parser
        val cmd : Cmd.t parser
        val some : 'a parser -> 'a option parser
        val parse :
          string -> 'a parser -> absent:'a -> ('a, [> Rresult.R.msg ]) result
        val value : ?log:Logs.level -> string -> 'a parser -> absent:'a -> 'a
      end
    module Arg :
      sig
        val exec : string
        type 'a conv
        val conv :
          ?docv:string ->
          (string -> ('a, Rresult.R.msg) result) ->
          (Format.formatter -> 'a -> unit) -> 'a conv
        val conv_parser : 'a conv -> string -> ('a, Rresult.R.msg) result
        val conv_printer : 'a conv -> Format.formatter -> 'a -> unit
        val conv_docv : 'a conv -> string
        val parser_of_kind_of_string :
          kind:string ->
          (string -> 'a option) -> string -> ('a, Rresult.R.msg) result
        val some : ?none:string -> 'a conv -> 'a option conv
        val flag : ?doc:string -> ?env:string -> string list -> bool
        val flag_all : ?doc:string -> ?env:string -> string list -> int
        val opt :
          ?docv:string ->
          ?doc:string ->
          ?env:string -> string list -> 'a conv -> absent:'a -> 'a
        val opt_all :
          ?docv:string ->
          ?doc:string ->
          ?env:string -> string list -> 'a conv -> absent:'a list -> 'a list
        val parse_opts : ?doc:string -> ?usage:string -> unit -> unit
        val parse :
          ?doc:string -> ?usage:string -> pos:'a conv -> unit -> 'a list
        val string : string conv
        val path : Fpath.t conv
        val bin : Cmd.t conv
        val cmd : Cmd.t conv
        val char : char conv
        val bool : bool conv
        val int : int conv
        val nativeint : nativeint conv
        val int32 : int32 conv
        val int64 : int64 conv
        val float : float conv
        val enum : (string * 'a) list -> 'a conv
        val list : ?sep:string -> 'a conv -> 'a list conv
        val array : ?sep:string -> 'a conv -> 'a array conv
        val pair : ?sep:string -> 'a conv -> 'b conv -> ('a * 'b) conv
      end
    module Path :
      sig
        val exists : Fpath.t -> (bool, [> Rresult.R.msg ]) result
        val must_exist : Fpath.t -> (Fpath.t, [> Rresult.R.msg ]) result
        val move :
          ?force:bool ->
          Fpath.t -> Fpath.t -> (unit, [> Rresult.R.msg ]) result
        val delete :
          ?must_exist:bool ->
          ?recurse:bool -> Fpath.t -> (unit, [> Rresult.R.msg ]) result
        val stat : Fpath.t -> (Unix.stats, [> Rresult.R.msg ]) result
        module Mode :
          sig
            type t = int
            val get : Fpath.t -> (t, [> Rresult.R.msg ]) result
            val set : Fpath.t -> t -> (unit, [> Rresult.R.msg ]) result
          end
        val link :
          ?force:bool ->
          target:Fpath.t -> Fpath.t -> (unit, [> Rresult.R.msg ]) result
        val symlink :
          ?force:bool ->
          target:Fpath.t -> Fpath.t -> (unit, [> Rresult.R.msg ]) result
        val symlink_target : Fpath.t -> (Fpath.t, [> Rresult.R.msg ]) result
        val symlink_stat : Fpath.t -> (Unix.stats, [> Rresult.R.msg ]) result
        val matches :
          ?dotfiles:bool ->
          Fpath.t -> (Fpath.t list, [> Rresult.R.msg ]) result
        val query :
          ?dotfiles:bool ->
          ?init:Pat.defs ->
          Fpath.t -> ((Fpath.t * Pat.defs) list, [> Rresult.R.msg ]) result
        type traverse =
            [ `Any | `None | `Sat of Fpath.t -> (bool, Rresult.R.msg) result
            ]
        type elements =
            [ `Any
            | `Dirs
            | `Files
            | `Sat of Fpath.t -> (bool, Rresult.R.msg) result ]
        type 'a fold_error =
            Fpath.t ->
            ('a, Rresult.R.msg) result -> (unit, Rresult.R.msg) result
        val log_fold_error : level:Logs.level -> 'a fold_error
        val fold :
          ?err:'b fold_error ->
          ?dotfiles:bool ->
          ?elements:elements ->
          ?traverse:traverse ->
          (Fpath.t -> 'a -> 'a) ->
          'a -> Fpath.t list -> ('a, [> Rresult.R.msg ]) result
      end
    module File :
      sig
        val null : Fpath.t
        val dash : Fpath.t
        val exists : Fpath.t -> (bool, [> Rresult.R.msg ]) result
        val must_exist : Fpath.t -> (Fpath.t, [> Rresult.R.msg ]) result
        val delete :
          ?must_exist:bool -> Fpath.t -> (unit, [> Rresult.R.msg ]) result
        val truncate : Fpath.t -> int -> (unit, [> Rresult.R.msg ]) result
        val is_executable : Fpath.t -> bool
        type input = unit -> (Bytes.t * int * int) option
        val with_input :
          ?bytes:Bytes.t ->
          Fpath.t ->
          (input -> 'a -> 'b) -> 'a -> ('b, [> Rresult.R.msg ]) result
        val with_ic :
          Fpath.t ->
          (in_channel -> 'a -> 'b) -> 'a -> ('b, [> Rresult.R.msg ]) result
        val read : Fpath.t -> (string, [> Rresult.R.msg ]) result
        val read_lines : Fpath.t -> (string list, [> Rresult.R.msg ]) result
        val fold_lines :
          ('a -> string -> 'a) ->
          'a -> Fpath.t -> ('a, [> Rresult.R.msg ]) result
        type output = (Bytes.t * int * int) option -> unit
        val with_output :
          ?mode:int ->
          Fpath.t ->
          (output -> 'a -> ('c, [> Rresult.R.msg ] as 'e) result) ->
          'a -> (('c, 'e) result, [> Rresult.R.msg ]) result
        val with_oc :
          ?mode:int ->
          Fpath.t ->
          (out_channel -> 'a -> ('c, [> Rresult.R.msg ] as 'e) result) ->
          'a -> (('c, 'e) result, [> Rresult.R.msg ]) result
        val write :
          ?mode:int -> Fpath.t -> string -> (unit, [> Rresult.R.msg ]) result
        val writef :
          ?mode:int ->
          Fpath.t ->
          ('a, Format.formatter, unit, (unit, [> Rresult.R.msg ]) result)
          format4 -> 'a
        val write_lines :
          ?mode:int ->
          Fpath.t -> string list -> (unit, [> Rresult.R.msg ]) result
        type tmp_name_pat =
            (string -> string, Format.formatter, unit, string) format4
        val tmp :
          ?mode:int ->
          ?dir:Fpath.t ->
          tmp_name_pat -> (Fpath.t, [> Rresult.R.msg ]) result
        val with_tmp_output :
          ?mode:int ->
          ?dir:Fpath.t ->
          tmp_name_pat ->
          (Fpath.t -> output -> 'a -> 'b) ->
          'a -> ('b, [> Rresult.R.msg ]) result
        val with_tmp_oc :
          ?mode:int ->
          ?dir:Fpath.t ->
          tmp_name_pat ->
          (Fpath.t -> out_channel -> 'a -> 'b) ->
          'a -> ('b, [> Rresult.R.msg ]) result
      end
    module Dir :
      sig
        val exists : Fpath.t -> (bool, [> Rresult.R.msg ]) result
        val must_exist : Fpath.t -> (Fpath.t, [> Rresult.R.msg ]) result
        val create :
          ?path:bool ->
          ?mode:int -> Fpath.t -> (bool, [> Rresult.R.msg ]) result
        val delete :
          ?must_exist:bool ->
          ?recurse:bool -> Fpath.t -> (unit, [> Rresult.R.msg ]) result
        val contents :
          ?dotfiles:bool ->
          ?rel:bool -> Fpath.t -> (Fpath.t list, [> Rresult.R.msg ]) result
        val fold_contents :
          ?err:'b Path.fold_error ->
          ?dotfiles:bool ->
          ?elements:Path.elements ->
          ?traverse:Path.traverse ->
          (Fpath.t -> 'a -> 'a) ->
          'a -> Fpath.t -> ('a, [> Rresult.R.msg ]) result
        val user : unit -> (Fpath.t, [> Rresult.R.msg ]) result
        val current : unit -> (Fpath.t, [> Rresult.R.msg ]) result
        val set_current : Fpath.t -> (unit, [> Rresult.R.msg ]) result
        val with_current :
          Fpath.t -> ('a -> 'b) -> 'a -> ('b, [> Rresult.R.msg ]) result
        type tmp_name_pat =
            (string -> string, Format.formatter, unit, string) format4
        val tmp :
          ?mode:int ->
          ?dir:Fpath.t ->
          tmp_name_pat -> (Fpath.t, [> Rresult.R.msg ]) result
        val with_tmp :
          ?mode:int ->
          ?dir:Fpath.t ->
          tmp_name_pat ->
          (Fpath.t -> 'a -> 'b) -> 'a -> ('b, [> Rresult.R.msg ]) result
        val default_tmp : unit -> Fpath.t
        val set_default_tmp : Fpath.t -> unit
      end
    module Cmd :
      sig
        val find_tool :
          ?search:Fpath.t list ->
          Cmd.t -> (Fpath.t option, [> Rresult.R.msg ]) result
        val get_tool :
          ?search:Fpath.t list ->
          Cmd.t -> (Fpath.t, [> Rresult.R.msg ]) result
        val exists :
          ?search:Fpath.t list -> Cmd.t -> (bool, [> Rresult.R.msg ]) result
        val must_exist :
          ?search:Fpath.t list -> Cmd.t -> (Cmd.t, [> Rresult.R.msg ]) result
        val resolve :
          ?search:Fpath.t list -> Cmd.t -> (Cmd.t, [> Rresult.R.msg ]) result
        val search_path_dirs :
          ?sep:string -> string -> (Fpath.t list, [> Rresult.R.msg ]) result
        type status = [ `Exited of int | `Signaled of int ]
        val pp_status : status Fmt.t
        type run_info
        val run_info_cmd : run_info -> Cmd.t
        type run_status = run_info * status
        val success :
          ('a * run_status, [> Rresult.R.msg ] as 'b) result ->
          ('a, 'b) result
        type run_err
        val err_file : ?append:bool -> Fpath.t -> run_err
        val err_null : run_err
        val err_run_out : run_err
        val err_stderr : run_err
        type run_in
        val in_string : string -> run_in
        val in_file : Fpath.t -> run_in
        val in_null : run_in
        val in_stdin : run_in
        type run_out
        val out_string :
          ?trim:bool ->
          run_out -> (string * run_status, [> Rresult.R.msg ]) result
        val out_lines :
          ?trim:bool ->
          run_out -> (string list * run_status, [> Rresult.R.msg ]) result
        val out_file :
          ?append:bool ->
          Fpath.t ->
          run_out -> (unit * run_status, [> Rresult.R.msg ]) result
        val out_run_in : run_out -> (run_in, [> Rresult.R.msg ]) result
        val out_null :
          run_out -> (unit * run_status, [> Rresult.R.msg ]) result
        val out_stdout :
          run_out -> (unit * run_status, [> Rresult.R.msg ]) result
        val to_string :
          ?trim:bool -> run_out -> (string, [> Rresult.R.msg ]) result
        val to_lines :
          ?trim:bool -> run_out -> (string list, [> Rresult.R.msg ]) result
        val to_file :
          ?append:bool ->
          Fpath.t -> run_out -> (unit, [> Rresult.R.msg ]) result
        val to_null : run_out -> (unit, [> Rresult.R.msg ]) result
        val to_stdout : run_out -> (unit, [> Rresult.R.msg ]) result
        val run_io : ?env:Env.t -> ?err:run_err -> Cmd.t -> run_in -> run_out
        val run_out : ?env:Env.t -> ?err:run_err -> Cmd.t -> run_out
        val run_in :
          ?env:Env.t ->
          ?err:run_err ->
          Cmd.t -> run_in -> (unit, [> Rresult.R.msg ]) result
        val run :
          ?env:Env.t ->
          ?err:run_err -> Cmd.t -> (unit, [> Rresult.R.msg ]) result
        val run_status :
          ?env:Env.t ->
          ?err:run_err ->
          ?quiet:bool -> Cmd.t -> (status, [> Rresult.R.msg ]) result
      end
    module U :
      sig
        type 'a result = ('a, [ `Unix of Unix.error ]) Stdlib.result
        val pp_error : Format.formatter -> [ `Unix of Unix.error ] -> unit
        val open_error :
          'a result -> ('a, [> `Unix of Unix.error ]) Stdlib.result
        val error_to_msg :
          'a result -> ('a, [> Rresult.R.msg ]) Stdlib.result
        val call : ('a -> 'b) -> 'a -> 'b result
        val mkdir : Fpath.t -> Unix.file_perm -> unit result
        val link : Fpath.t -> Fpath.t -> unit result
        val unlink : Fpath.t -> unit result
        val rename : Fpath.t -> Fpath.t -> unit result
        val stat : Fpath.t -> Unix.stats result
        val lstat : Fpath.t -> Unix.stats result
        val truncate : Fpath.t -> int -> unit result
      end("DEBUG:rule", [Tag3 (("Pat", 1698), 0, (Tag1 ([Tag1 (("t", 1701), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/bos.mli", 31, 1013, 1015), ("src/bos.mli", 31, 1013, 1021), 0), 0, 0, 0, Tag1 ("Bos", 0)), 1, 0); (("v", 1702), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -75), (Tag3 ((("t", 1701)), 0, (0)), 100000000, 0, -74), 0), 100000000, 0, -73), 0, (("src/bos.mli", 34, 1055, 1057), ("src/bos.mli", 34, 1055, 1076), 0), 0, Tag1 ("Bos", 1)), 0); (("empty", 1703), ((Tag3 ((("t", 1701)), 0, (0)), 100000000, 0, -72), 0, (("src/bos.mli", 40, 1233, 1235), ("src/bos.mli", 40, 1233, 1248), 0), 0, Tag1 ("Bos", 2)), 0); (("dom", 1704), ((Tag1 (0, (Tag3 ((("t", 1701)), 0, (0)), 100000000, 0, -71), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Astring")), "String"), "Set"), "t"), 0, (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0, (("src/bos.mli", 43, 1288, 1290), ("src/bos.mli", 43, 1288, 1317), 0), 0, Tag1 ("Bos", 3)), 0); (("equal", 1705), ((Tag1 (0, (Tag3 ((("t", 1701)), 0, (0)), 100000000, 0, -68), (Tag1 (0, (Tag3 ((("t", 1701)), 0, (0)), 100000000, 0, -67), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0, (("src/bos.mli", 46, 1368, 1370), ("src/bos.mli", 46, 1368, 1396), 0), 0, Tag1 ("Bos", 4)), 0); (("compare", 1706), ((Tag1 (0, (Tag3 ((("t", 1701)), 0, (0)), 100000000, 0, -63), (Tag1 (0, (Tag3 ((("t", 1701)), 0, (0)), 100000000, 0, -62), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -61), 0), 100000000, 0, -60), 0), 100000000, 0, -59), 0, (("src/bos.mli", 49, 1433, 1435), ("src/bos.mli", 49, 1433, 1462), 0), 0, Tag1 ("Bos", 5)), 0); (("of_string", 1707), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -58), (Tag3 (Tag1 ((Tag2 ("Rresult")), "result"), [(Tag3 ((("t", 1701)), 0, (0)), 100000000, 0, -54); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -57))))], ((0), 100000000, 0, -56), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -55)], (0)), 100000000, 0, -53), 0), 100000000, 0, -52), 0, (("src/bos.mli", 52, 1517, 1519), ("src/bos.mli", 52, 1517, 1566), 0), 0, Tag1 ("Bos", 6)), 0); (("to_string", 1708), ((Tag1 (0, (Tag3 ((("t", 1701)), 0, (0)), 100000000, 0, -51), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0, (("src/bos.mli", 56, 1701, 1703), ("src/bos.mli", 56, 1701, 1730), 0), 0, Tag1 ("Bos", 7)), 0); (("pp", 1709), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -48), (Tag1 (0, (Tag3 ((("t", 1701)), 0, (0)), 100000000, 0, -47), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("src/bos.mli", 60, 1873, 1875), ("src/bos.mli", 60, 1873, 1913), 0), 0, Tag1 ("Bos", 8)), 0); (("dump", 1710), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -43), (Tag1 (0, (Tag3 ((("t", 1701)), 0, (0)), 100000000, 0, -42), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("src/bos.mli", 63, 1988, 1990), ("src/bos.mli", 63, 1988, 2030), 0), 0, Tag1 ("Bos", 9)), 0); Tag1 (("defs", 1711), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Astring")), "String"), "Map"), "t"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -38)], (0)), 100000000, 0, -37)), 0, 0, 0, 0, (("src/bos.mli", 72, 2279, 2281), ("src/bos.mli", 72, 2279, 2312), 0), 0, 0, 0, Tag1 ("Bos", 10)), 1, 0); (("subst", 1712), ((Tag1 (Tag1 ("undef"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -36), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -35)], (0)), 100000000, 0, -34), 0), 100000000, 0, -33)], (0)), 100000000, 0, -32), (Tag1 (0, (Tag3 ((("defs", 1711)), 0, (0)), 100000000, 0, -31), (Tag1 (0, (Tag3 ((("t", 1701)), 0, (0)), 100000000, 0, -30), (Tag3 ((("t", 1701)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("src/bos.mli", 76, 2405, 2407), ("src/bos.mli", 76, 2405, 2469), 0), 0, Tag1 ("Bos", 11)), 0); (("format", 1713), ((Tag1 (Tag1 ("undef"), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -25), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23)], (0)), 100000000, 0, -22), (Tag1 (0, (Tag3 ((("defs", 1711)), 0, (0)), 100000000, 0, -21), (Tag1 (0, (Tag3 ((("t", 1701)), 0, (0)), 100000000, 0, -20), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("src/bos.mli", 81, 2672, 2674), ("src/bos.mli", 81, 2672, 2735), 0), 0, Tag1 ("Bos", 12)), 0); (("matches", 1714), ((Tag1 (0, (Tag3 ((("t", 1701)), 0, (0)), 100000000, 0, -15), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -14), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("src/bos.mli", 93, 3189, 3191), ("src/bos.mli", 93, 3189, 3224), 0), 0, Tag1 ("Bos", 13)), 0); (("query", 1715), ((Tag1 (Tag1 ("init"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("defs", 1711)), 0, (0)), 100000000, 0, -10)], (0)), 100000000, 0, -9), (Tag1 (0, (Tag3 ((("t", 1701)), 0, (0)), 100000000, 0, -8), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("defs", 1711)), 0, (0)), 100000000, 0, -6)], (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/bos.mli", 103, 3643, 3645), ("src/bos.mli", 103, 3643, 3697), 0), 0, Tag1 ("Bos", 14)), 0)]), 0, (("src/bos.mli", 27, 967, 967), ("src/bos.mli", 110, 4066, 4069), 0), Tag1 ("Bos", 15)), 0, 0); Tag3 (("Cmd", 1699), 0, (Tag1 ([Tag1 (("t", 1716), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/bos.mli", 128, 4611, 4613), ("src/bos.mli", 128, 4611, 4619), 0), 0, 0, 0, Tag1 ("Bos", 16)), 1, 0); (("v", 1717), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -177), (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -176), 0), 100000000, 0, -175), 0, (("src/bos.mli", 131, 4667, 4669), ("src/bos.mli", 131, 4667, 4688), 0), 0, Tag1 ("Bos", 17)), 0); (("empty", 1718), ((Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -174), 0, (("src/bos.mli", 135, 4793, 4795), ("src/bos.mli", 135, 4793, 4808), 0), 0, Tag1 ("Bos", 18)), 0); (("is_empty", 1719), ((Tag1 (0, (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -173), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -172), 0), 100000000, 0, -171), 0, (("src/bos.mli", 138, 4853, 4855), ("src/bos.mli", 138, 4853, 4879), 0), 0, Tag1 ("Bos", 19)), 0); (("%", 1720), ((Tag1 (0, (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -170), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -169), (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -168), 0), 100000000, 0, -167), 0), 100000000, 0, -166), 0, (("src/bos.mli", 141, 4931, 4933), ("src/bos.mli", 141, 4931, 4961), 0), 0, Tag1 ("Bos", 20)), 0); (("%%", 1721), ((Tag1 (0, (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -165), (Tag1 (0, (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -164), (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -163), 0), 100000000, 0, -162), 0), 100000000, 0, -161), 0, (("src/bos.mli", 144, 5020, 5022), ("src/bos.mli", 144, 5020, 5046), 0), 0, Tag1 ("Bos", 21)), 0); (("add_arg", 1722), ((Tag1 (0, (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -160), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -159), (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -158), 0), 100000000, 0, -157), 0), 100000000, 0, -156), 0, (("src/bos.mli", 147, 5110, 5112), ("src/bos.mli", 147, 5110, 5142), 0), 0, Tag1 ("Bos", 22)), 0); (("add_args", 1723), ((Tag1 (0, (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -155), (Tag1 (0, (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -154), (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -153), 0), 100000000, 0, -152), 0), 100000000, 0, -151), 0, (("src/bos.mli", 150, 5183, 5185), ("src/bos.mli", 150, 5183, 5211), 0), 0, Tag1 ("Bos", 23)), 0); (("on", 1724), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -150), (Tag1 (0, (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -149), (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -148), 0), 100000000, 0, -147), 0), 100000000, 0, -146), 0, (("src/bos.mli", 153, 5256, 5258), ("src/bos.mli", 153, 5256, 5281), 0), 0, Tag1 ("Bos", 24)), 0); (("p", 1725), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -145), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -144), 0), 100000000, 0, -143), 0, (("src/bos.mli", 157, 5367, 5369), ("src/bos.mli", 157, 5367, 5394), 0), 0, Tag1 ("Bos", 25)), 0); (("line_tool", 1726), ((Tag1 (0, (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -142), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -141)], (0)), 100000000, 0, -140), 0), 100000000, 0, -139), 0, (("src/bos.mli", 163, 5529, 5531), ("src/bos.mli", 163, 5529, 5565), 0), 0, Tag1 ("Bos", 26)), 0); (("get_line_tool", 1727), ((Tag1 (0, (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -138), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -137), 0), 100000000, 0, -136), 0, (("src/bos.mli", 167, 5667, 5669), ("src/bos.mli", 167, 5667, 5700), 0), 0, Tag1 ("Bos", 27)), 0); (("line_args", 1728), ((Tag1 (0, (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -135), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -134)], (0)), 100000000, 0, -133), 0), 100000000, 0, -132), 0, (("src/bos.mli", 171, 5815, 5817), ("src/bos.mli", 171, 5815, 5849), 0), 0, Tag1 ("Bos", 28)), 0); (("line_exec", 1729), ((Tag1 (0, (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -131), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -130)], (0)), 100000000, 0, -129), 0), 100000000, 0, -128), 0, (("src/bos.mli", 175, 5957, 5959), ("src/bos.mli", 175, 5957, 5993), 0), 0, Tag1 ("Bos", 29)), 0); (("get_line_exec", 1730), ((Tag1 (0, (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -127), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -126), 0), 100000000, 0, -125), 0, (("src/bos.mli", 178, 6042, 6044), ("src/bos.mli", 178, 6042, 6075), 0), 0, Tag1 ("Bos", 30)), 0); (("equal", 1731), ((Tag1 (0, (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -124), (Tag1 (0, (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -123), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -122), 0), 100000000, 0, -121), 0), 100000000, 0, -120), 0, (("src/bos.mli", 183, 6179, 6181), ("src/bos.mli", 183, 6179, 6207), 0), 0, Tag1 ("Bos", 31)), 0); (("compare", 1732), ((Tag1 (0, (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -119), (Tag1 (0, (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -118), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -117), 0), 100000000, 0, -116), 0), 100000000, 0, -115), 0, (("src/bos.mli", 186, 6280, 6282), ("src/bos.mli", 186, 6280, 6309), 0), 0, Tag1 ("Bos", 32)), 0); (("of_string", 1733), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -114), (Tag3 (Tag1 ((Tag2 ("Rresult")), "result"), [(Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -112); (Tag3 (Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg"), 0, (0)), 100000000, 0, -113)], (0)), 100000000, 0, -111), 0), 100000000, 0, -110), 0, (("src/bos.mli", 191, 6424, 6426), ("src/bos.mli", 191, 6424, 6469), 0), 0, Tag1 ("Bos", 33)), 0); (("to_string", 1734), ((Tag1 (0, (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -109), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -108), 0), 100000000, 0, -107), 0, (("src/bos.mli", 212, 7263, 7265), ("src/bos.mli", 212, 7263, 7292), 0), 0, Tag1 ("Bos", 34)), 0); (("to_list", 1735), ((Tag1 (0, (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -106), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -105)], (0)), 100000000, 0, -104), 0), 100000000, 0, -103), 0, (("src/bos.mli", 218, 7493, 7495), ("src/bos.mli", 218, 7493, 7525), 0), 0, Tag1 ("Bos", 35)), 0); (("of_list", 1736), ((Tag1 (Tag1 ("slip"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -102)], (0)), 100000000, 0, -101), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -100)], (0)), 100000000, 0, -99), (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -98), 0), 100000000, 0, -97), 0), 100000000, 0, -96), 0, (("src/bos.mli", 221, 7577, 7579), ("src/bos.mli", 221, 7577, 7625), 0), 0, Tag1 ("Bos", 36)), 0); (("of_values", 1737), ((Tag1 (Tag1 ("slip"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -95)], (0)), 100000000, 0, -94), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -91), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -93), 0), 100000000, 0, -92), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -91)], (0)), 100000000, 0, -90), (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -89), 0), 100000000, 0, -88), 0), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("src/bos.mli", 226, 7800, 7802), ("src/bos.mli", 226, 7800, 7864), 0), 0, Tag1 ("Bos", 37)), 0); (("pp", 1738), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -85), (Tag1 (0, (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -84), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -83), 0), 100000000, 0, -82), 0), 100000000, 0, -81), 0, (("src/bos.mli", 230, 7998, 8000), ("src/bos.mli", 230, 7998, 8038), 0), 0, Tag1 ("Bos", 38)), 0); (("dump", 1739), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -80), (Tag1 (0, (Tag3 ((("t", 1716)), 0, (0)), 100000000, 0, -79), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -78), 0), 100000000, 0, -77), 0), 100000000, 0, -76), 0, (("src/bos.mli", 234, 8121, 8123), ("src/bos.mli", 234, 8121, 8163), 0), 0, Tag1 ("Bos", 39)), 0)]), 0, (("src/bos.mli", 124, 4550, 4550), ("src/bos.mli", 257, 8839, 8842), 0), Tag1 ("Bos", 40)), 0, 0); Tag3 (("OS", 1700), 0, (Tag1 ([Tag1 (("result", 1740), ([((("a")), 100000000, 0, -179); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -182))))], ((("e")), 100000000, 0, -181), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -180)], 2, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -179); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -182))))], ((("e")), 100000000, 0, -181), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -180)], (0)), 100000000, 0, -178)), [25; 31], [0; 0], 0, 0, (("src/bos.mli", 272, 9206, 9208), ("src/bos.mli", 272, 9206, 9266), 0), 0, 0, 0, Tag1 ("Bos", 41)), 1, 0); Tag3 (("Env", 1741), 0, (Tag1 ([Tag1 (("t", 1748), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astring")), "String"), "map"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -262)], (0)), 100000000, 0, -261)), 0, 0, 0, 0, (("src/bos.mli", 282, 9456, 9460), ("src/bos.mli", 282, 9456, 9486), 0), 0, 0, 0, Tag1 ("Bos", 42)), 1, 0); (("current", 1749), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -260), (Tag3 ((("result", 1740)), [(Tag3 ((("t", 1748)), 0, (0)), 100000000, 0, -256); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -259))))], ((("e")), 100000000, 0, -258), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -257)], (0)), 100000000, 0, -255), 0), 100000000, 0, -254), 0, (("src/bos.mli", 285, 9534, 9538), ("src/bos.mli", 285, 9534, 9574), 0), 0, Tag1 ("Bos", 43)), 0); (("var", 1750), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -253), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -252)], (0)), 100000000, 0, -251), 0), 100000000, 0, -250), 0, (("src/bos.mli", 290, 9667, 9671), ("src/bos.mli", 290, 9667, 9704), 0), 0, Tag1 ("Bos", 44)), 0); (("set_var", 1751), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -249), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -248)], (0)), 100000000, 0, -247), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -243); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -246))))], ((("e")), 100000000, 0, -245), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -244)], (0)), 100000000, 0, -242), 0), 100000000, 0, -241), 0), 100000000, 0, -240), 0, (("src/bos.mli", 294, 9797, 9801), ("src/bos.mli", 294, 9797, 9859), 0), 0, Tag1 ("Bos", 45)), 0); (("opt_var", 1752), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -239), (Tag1 (("absent"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -238), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -237), 0), 100000000, 0, -236), 0), 100000000, 0, -235), 0, (("src/bos.mli", 302, 10167, 10171), ("src/bos.mli", 302, 10167, 10218), 0), 0, Tag1 ("Bos", 46)), 0); (("req_var", 1753), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -234), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -230); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -233))))], ((("e")), 100000000, 0, -232), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -231)], (0)), 100000000, 0, -229), 0), 100000000, 0, -228), 0, (("src/bos.mli", 307, 10374, 10378), ("src/bos.mli", 307, 10374, 10421), 0), 0, Tag1 ("Bos", 47)), 0); Tag1 (("parser", 1754), ([((("a")), 100000000, 0, -225)], 1, 0, 1, ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -227), (Tag3 ((("result", 1740)), [((("a")), 100000000, 0, -225); (Tag3 (Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg"), 0, (0)), 100000000, 0, -226)], (0)), 100000000, 0, -224), 0), 100000000, 0, -223)), [25], [0], 0, 0, (("src/bos.mli", 315, 10630, 10634), ("src/bos.mli", 315, 10630, 10679), 0), 0, 0, 0, Tag1 ("Bos", 48)), 1, 0); (("parser", 1755), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -222), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -221), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -218)], (0)), 100000000, 0, -220), 0), 100000000, 0, -219), (Tag3 ((("parser", 1754)), [((("a")), 100000000, 0, -218)], (0)), 100000000, 0, -217), 0), 100000000, 0, -216), 0), 100000000, 0, -215), 0, (("src/bos.mli", 318, 10741, 10745), ("src/bos.mli", 318, 10741, 10802), 0), 0, Tag1 ("Bos", 49)), 0); (("bool", 1756), ((Tag3 ((("parser", 1754)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -214)], (0)), 100000000, 0, -213), 0, (("src/bos.mli", 323, 11001, 11005), ("src/bos.mli", 323, 11001, 11027), 0), 0, Tag1 ("Bos", 50)), 0); (("string", 1757), ((Tag3 ((("parser", 1754)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -212)], (0)), 100000000, 0, -211), 0, (("src/bos.mli", 331, 11322, 11326), ("src/bos.mli", 331, 11322, 11352), 0), 0, Tag1 ("Bos", 51)), 0); (("path", 1758), ((Tag3 ((("parser", 1754)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -210)], (0)), 100000000, 0, -209), 0, (("src/bos.mli", 334, 11416, 11420), ("src/bos.mli", 334, 11416, 11445), 0), 0, Tag1 ("Bos", 52)), 0); (("cmd", 1759), ((Tag3 ((("parser", 1754)), [(Tag3 (Tag1 ((("Cmd", 1699)), "t"), 0, (0)), 100000000, 0, -208)], (0)), 100000000, 0, -207), 0, (("src/bos.mli", 337, 11510, 11514), ("src/bos.mli", 337, 11510, 11536), 0), 0, Tag1 ("Bos", 53)), 0); (("some", 1760), ((Tag1 (0, (Tag3 ((("parser", 1754)), [((("a")), 100000000, 0, -205)], (0)), 100000000, 0, -206), (Tag3 ((("parser", 1754)), [(Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -205)], (0)), 100000000, 0, -204)], (0)), 100000000, 0, -203), 0), 100000000, 0, -202), 0, (("src/bos.mli", 341, 11623, 11627), ("src/bos.mli", 341, 11623, 11667), 0), 0, Tag1 ("Bos", 54)), 0); (("parse", 1761), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -201), (Tag1 (0, (Tag3 ((("parser", 1754)), [((("a")), 100000000, 0, -196)], (0)), 100000000, 0, -200), (Tag1 (("absent"), ((("a")), 100000000, 0, -196), (Tag3 ((("result", 1740)), [((("a")), 100000000, 0, -196); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -199))))], ((("e")), 100000000, 0, -198), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -197)], (0)), 100000000, 0, -195), 0), 100000000, 0, -194), 0), 100000000, 0, -193), 0), 100000000, 0, -192), 0, (("src/bos.mli", 344, 11728, 11732), ("src/bos.mli", 345, 11744, 11801), 0), 0, Tag1 ("Bos", 55)), 0); (("value", 1762), ((Tag1 (Tag1 ("log"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Logs")), "level"), 0, (0)), 100000000, 0, -191)], (0)), 100000000, 0, -190), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -189), (Tag1 (0, (Tag3 ((("parser", 1754)), [((("a")), 100000000, 0, -187)], (0)), 100000000, 0, -188), (Tag1 (("absent"), ((("a")), 100000000, 0, -187), ((("a")), 100000000, 0, -187), 0), 100000000, 0, -186), 0), 100000000, 0, -185), 0), 100000000, 0, -184), 0), 100000000, 0, -183), 0, (("src/bos.mli", 353, 12091, 12095), ("src/bos.mli", 353, 12091, 12164), 0), 0, Tag1 ("Bos", 56)), 0)]), 0, (("src/bos.mli", 278, 9396, 9398), ("src/bos.mli", 368, 12651, 12656), 0), Tag1 ("Bos", 57)), 0, 0); Tag3 (("Arg", 1742), 0, (Tag1 ([(("exec", 1763), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -446), 0, (("src/bos.mli", 395, 13747, 13751), ("src/bos.mli", 395, 13747, 13768), 0), 0, Tag1 ("Bos", 58)), 0); Tag1 (("conv", 1764), ([((("a")), 100000000, 0, -445)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/bos.mli", 405, 14115, 14119), ("src/bos.mli", 405, 14115, 14131), 0), 0, 0, 0, Tag1 ("Bos", 59)), 1, 0); (("conv", 1765), ((Tag1 (Tag1 ("docv"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -444)], (0)), 100000000, 0, -443), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -442), (Tag3 ((("result", 1740)), [((("a")), 100000000, 0, -434); (Tag3 (Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg"), 0, (0)), 100000000, 0, -441)], (0)), 100000000, 0, -440), 0), 100000000, 0, -439), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -438), (Tag1 (0, ((("a")), 100000000, 0, -434), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -437), 0), 100000000, 0, -436), 0), 100000000, 0, -435), (Tag3 ((("conv", 1764)), [((("a")), 100000000, 0, -434)], (0)), 100000000, 0, -433), 0), 100000000, 0, -432), 0), 100000000, 0, -431), 0), 100000000, 0, -430), 0, (("src/bos.mli", 408, 14178, 14182), ("src/bos.mli", 411, 14255, 14304), 0), 0, Tag1 ("Bos", 60)), 0); (("conv_parser", 1766), ((Tag1 (0, (Tag3 ((("conv", 1764)), [((("a")), 100000000, 0, -426)], (0)), 100000000, 0, -429), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -428), (Tag3 ((("result", 1740)), [((("a")), 100000000, 0, -426); (Tag3 (Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg"), 0, (0)), 100000000, 0, -427)], (0)), 100000000, 0, -425), 0), 100000000, 0, -424), 0), 100000000, 0, -423), 0, (("src/bos.mli", 417, 14573, 14577), ("src/bos.mli", 417, 14573, 14636), 0), 0, Tag1 ("Bos", 61)), 0); (("conv_printer", 1767), ((Tag1 (0, (Tag3 ((("conv", 1764)), [((("a")), 100000000, 0, -420)], (0)), 100000000, 0, -422), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -421), (Tag1 (0, ((("a")), 100000000, 0, -420), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -419), 0), 100000000, 0, -418), 0), 100000000, 0, -417), 0), 100000000, 0, -416), 0, (("src/bos.mli", 420, 14682, 14686), ("src/bos.mli", 420, 14682, 14748), 0), 0, Tag1 ("Bos", 62)), 0); (("conv_docv", 1768), ((Tag1 (0, (Tag3 ((("conv", 1764)), [((("a")), 100000000, 0, -415)], (0)), 100000000, 0, -414), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -413), 0), 100000000, 0, -412), 0, (("src/bos.mli", 423, 14796, 14800), ("src/bos.mli", 423, 14796, 14833), 0), 0, Tag1 ("Bos", 63)), 0); (("parser_of_kind_of_string", 1769), ((Tag1 (("kind"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -411), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -410), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -405)], (0)), 100000000, 0, -409), 0), 100000000, 0, -408), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -407), (Tag3 ((("result", 1740)), [((("a")), 100000000, 0, -405); (Tag3 (Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg"), 0, (0)), 100000000, 0, -406)], (0)), 100000000, 0, -404), 0), 100000000, 0, -403), 0), 100000000, 0, -402), 0), 100000000, 0, -401), 0, (("src/bos.mli", 426, 14901, 14905), ("src/bos.mli", 428, 14982, 15018), 0), 0, Tag1 ("Bos", 64)), 0); (("some", 1770), ((Tag1 (Tag1 ("none"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -400)], (0)), 100000000, 0, -399), (Tag1 (0, (Tag3 ((("conv", 1764)), [((("a")), 100000000, 0, -397)], (0)), 100000000, 0, -398), (Tag3 ((("conv", 1764)), [(Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -397)], (0)), 100000000, 0, -396)], (0)), 100000000, 0, -395), 0), 100000000, 0, -394), 0), 100000000, 0, -393), 0, (("src/bos.mli", 434, 15247, 15251), ("src/bos.mli", 434, 15247, 15303), 0), 0, Tag1 ("Bos", 65)), 0); (("flag", 1771), ((Tag1 (Tag1 ("doc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -392)], (0)), 100000000, 0, -391), (Tag1 (Tag1 ("env"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -390)], (0)), 100000000, 0, -389), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -388)], (0)), 100000000, 0, -387), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -386), 0), 100000000, 0, -385), 0), 100000000, 0, -384), 0), 100000000, 0, -383), 0, (("src/bos.mli", 457, 16424, 16428), ("src/bos.mli", 457, 16424, 16488), 0), 0, Tag1 ("Bos", 66)), 0); (("flag_all", 1772), ((Tag1 (Tag1 ("doc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -382)], (0)), 100000000, 0, -381), (Tag1 (Tag1 ("env"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -380)], (0)), 100000000, 0, -379), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -378)], (0)), 100000000, 0, -377), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -376), 0), 100000000, 0, -375), 0), 100000000, 0, -374), 0), 100000000, 0, -373), 0, (("src/bos.mli", 467, 16883, 16887), ("src/bos.mli", 467, 16883, 16950), 0), 0, Tag1 ("Bos", 67)), 0); (("opt", 1773), ((Tag1 (Tag1 ("docv"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -372)], (0)), 100000000, 0, -371), (Tag1 (Tag1 ("doc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -370)], (0)), 100000000, 0, -369), (Tag1 (Tag1 ("env"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -368)], (0)), 100000000, 0, -367), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -366)], (0)), 100000000, 0, -365), (Tag1 (0, (Tag3 ((("conv", 1764)), [((("a")), 100000000, 0, -363)], (0)), 100000000, 0, -364), (Tag1 (("absent"), ((("a")), 100000000, 0, -363), ((("a")), 100000000, 0, -363), 0), 100000000, 0, -362), 0), 100000000, 0, -361), 0), 100000000, 0, -360), 0), 100000000, 0, -359), 0), 100000000, 0, -358), 0), 100000000, 0, -357), 0, (("src/bos.mli", 473, 17244, 17248), ("src/bos.mli", 474, 17319, 17351), 0), 0, Tag1 ("Bos", 68)), 0); (("opt_all", 1774), ((Tag1 (Tag1 ("docv"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -356)], (0)), 100000000, 0, -355), (Tag1 (Tag1 ("doc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -354)], (0)), 100000000, 0, -353), (Tag1 (Tag1 ("env"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -352)], (0)), 100000000, 0, -351), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -350)], (0)), 100000000, 0, -349), (Tag1 (0, (Tag3 ((("conv", 1764)), [((("a")), 100000000, 0, -346)], (0)), 100000000, 0, -348), (Tag1 (("absent"), (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -346)], (0)), 100000000, 0, -347), (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -346)], (0)), 100000000, 0, -345), 0), 100000000, 0, -344), 0), 100000000, 0, -343), 0), 100000000, 0, -342), 0), 100000000, 0, -341), 0), 100000000, 0, -340), 0), 100000000, 0, -339), 0, (("src/bos.mli", 492, 18218, 18222), ("src/bos.mli", 493, 18297, 18339), 0), 0, Tag1 ("Bos", 69)), 0); (("parse_opts", 1775), ((Tag1 (Tag1 ("doc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -338)], (0)), 100000000, 0, -337), (Tag1 (Tag1 ("usage"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -336)], (0)), 100000000, 0, -335), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -334), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -333), 0), 100000000, 0, -332), 0), 100000000, 0, -331), 0), 100000000, 0, -330), 0, (("src/bos.mli", 505, 18694, 18698), ("src/bos.mli", 505, 18694, 18759), 0), 0, Tag1 ("Bos", 70)), 0); (("parse", 1776), ((Tag1 (Tag1 ("doc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -329)], (0)), 100000000, 0, -328), (Tag1 (Tag1 ("usage"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -327)], (0)), 100000000, 0, -326), (Tag1 (("pos"), (Tag3 ((("conv", 1764)), [((("a")), 100000000, 0, -323)], (0)), 100000000, 0, -325), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -324), (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -323)], (0)), 100000000, 0, -322), 0), 100000000, 0, -321), 0), 100000000, 0, -320), 0), 100000000, 0, -319), 0), 100000000, 0, -318), 0, (("src/bos.mli", 524, 19606, 19610), ("src/bos.mli", 525, 19677, 19690), 0), 0, Tag1 ("Bos", 71)), 0); (("string", 1777), ((Tag3 ((("conv", 1764)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -317)], (0)), 100000000, 0, -316), 0, (("src/bos.mli", 533, 20021, 20025), ("src/bos.mli", 533, 20021, 20049), 0), 0, Tag1 ("Bos", 72)), 0); (("path", 1778), ((Tag3 ((("conv", 1764)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -315)], (0)), 100000000, 0, -314), 0, (("src/bos.mli", 536, 20118, 20122), ("src/bos.mli", 536, 20118, 20145), 0), 0, Tag1 ("Bos", 73)), 0); (("bin", 1779), ((Tag3 ((("conv", 1764)), [(Tag3 (Tag1 ((("Cmd", 1699)), "t"), 0, (0)), 100000000, 0, -313)], (0)), 100000000, 0, -312), 0, (("src/bos.mli", 539, 20216, 20220), ("src/bos.mli", 539, 20216, 20240), 0), 0, Tag1 ("Bos", 74)), 0); (("cmd", 1780), ((Tag3 ((("conv", 1764)), [(Tag3 (Tag1 ((("Cmd", 1699)), "t"), 0, (0)), 100000000, 0, -311)], (0)), 100000000, 0, -310), 0, (("src/bos.mli", 542, 20292, 20296), ("src/bos.mli", 542, 20292, 20316), 0), 0, Tag1 ("Bos", 75)), 0); (("char", 1781), ((Tag3 ((("conv", 1764)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -309)], (0)), 100000000, 0, -308), 0, (("src/bos.mli", 545, 20395, 20399), ("src/bos.mli", 545, 20395, 20419), 0), 0, Tag1 ("Bos", 76)), 0); (("bool", 1782), ((Tag3 ((("conv", 1764)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -307)], (0)), 100000000, 0, -306), 0, (("src/bos.mli", 548, 20468, 20472), ("src/bos.mli", 548, 20468, 20492), 0), 0, Tag1 ("Bos", 77)), 0); (("int", 1783), ((Tag3 ((("conv", 1764)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -305)], (0)), 100000000, 0, -304), 0, (("src/bos.mli", 551, 20555, 20559), ("src/bos.mli", 551, 20555, 20577), 0), 0, Tag1 ("Bos", 78)), 0); (("nativeint", 1784), ((Tag3 ((("conv", 1764)), [(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -303)], (0)), 100000000, 0, -302), 0, (("src/bos.mli", 554, 20639, 20643), ("src/bos.mli", 554, 20639, 20673), 0), 0, Tag1 ("Bos", 79)), 0); (("int32", 1785), ((Tag3 ((("conv", 1764)), [(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -301)], (0)), 100000000, 0, -300), 0, (("src/bos.mli", 557, 20744, 20748), ("src/bos.mli", 557, 20744, 20770), 0), 0, Tag1 ("Bos", 80)), 0); (("int64", 1786), ((Tag3 ((("conv", 1764)), [(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -299)], (0)), 100000000, 0, -298), 0, (("src/bos.mli", 560, 20836, 20840), ("src/bos.mli", 560, 20836, 20862), 0), 0, Tag1 ("Bos", 81)), 0); (("float", 1787), ((Tag3 ((("conv", 1764)), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -297)], (0)), 100000000, 0, -296), 0, (("src/bos.mli", 563, 20928, 20932), ("src/bos.mli", 563, 20928, 20954), 0), 0, Tag1 ("Bos", 82)), 0); (("enum", 1788), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -295); ((("a")), 100000000, 0, -292)]), 100000000, 0, -294)], (0)), 100000000, 0, -293), (Tag3 ((("conv", 1764)), [((("a")), 100000000, 0, -292)], (0)), 100000000, 0, -291), 0), 100000000, 0, -290), 0, (("src/bos.mli", 566, 21018, 21022), ("src/bos.mli", 566, 21018, 21062), 0), 0, Tag1 ("Bos", 83)), 0); (("list", 1789), ((Tag1 (Tag1 ("sep"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -289)], (0)), 100000000, 0, -288), (Tag1 (0, (Tag3 ((("conv", 1764)), [((("a")), 100000000, 0, -286)], (0)), 100000000, 0, -287), (Tag3 ((("conv", 1764)), [(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -286)], (0)), 100000000, 0, -285)], (0)), 100000000, 0, -284), 0), 100000000, 0, -283), 0), 100000000, 0, -282), 0, (("src/bos.mli", 575, 21322, 21326), ("src/bos.mli", 575, 21322, 21375), 0), 0, Tag1 ("Bos", 84)), 0); (("array", 1790), ((Tag1 (Tag1 ("sep"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -281)], (0)), 100000000, 0, -280), (Tag1 (0, (Tag3 ((("conv", 1764)), [((("a")), 100000000, 0, -278)], (0)), 100000000, 0, -279), (Tag3 ((("conv", 1764)), [(Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -278)], (0)), 100000000, 0, -277)], (0)), 100000000, 0, -276), 0), 100000000, 0, -275), 0), 100000000, 0, -274), 0, (("src/bos.mli", 580, 21552, 21556), ("src/bos.mli", 580, 21552, 21607), 0), 0, Tag1 ("Bos", 85)), 0); (("pair", 1791), ((Tag1 (Tag1 ("sep"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -273)], (0)), 100000000, 0, -272), (Tag1 (0, (Tag3 ((("conv", 1764)), [((("a")), 100000000, 0, -268)], (0)), 100000000, 0, -271), (Tag1 (0, (Tag3 ((("conv", 1764)), [((("b")), 100000000, 0, -269)], (0)), 100000000, 0, -270), (Tag3 ((("conv", 1764)), [(Tag2 ([((("a")), 100000000, 0, -268); ((("b")), 100000000, 0, -269)]), 100000000, 0, -267)], (0)), 100000000, 0, -266), 0), 100000000, 0, -265), 0), 100000000, 0, -264), 0), 100000000, 0, -263), 0, (("src/bos.mli", 583, 21681, 21685), ("src/bos.mli", 583, 21681, 21747), 0), 0, Tag1 ("Bos", 86)), 0)]), 0, (("src/bos.mli", 391, 13695, 13697), ("src/bos.mli", 613, 22851, 22856), 0), Tag1 ("Bos", 87)), 0, 0); Tag3 (("Path", 1743), 0, (Tag1 ([(("exists", 1792), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -610), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -606); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -609))))], ((("e")), 100000000, 0, -608), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -607)], (0)), 100000000, 0, -605), 0), 100000000, 0, -604), 0, (("src/bos.mli", 629, 23327, 23331), ("src/bos.mli", 629, 23327, 23372), 0), 0, Tag1 ("Bos", 88)), 0); (("must_exist", 1793), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -603), (Tag3 ((("result", 1740)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -599); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -602))))], ((("e")), 100000000, 0, -601), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -600)], (0)), 100000000, 0, -598), 0), 100000000, 0, -597), 0, (("src/bos.mli", 633, 23471, 23475), ("src/bos.mli", 633, 23471, 23523), 0), 0, Tag1 ("Bos", 89)), 0); (("move", 1794), ((Tag1 (Tag1 ("force"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -596)], (0)), 100000000, 0, -595), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -594), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -593), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -589); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -592))))], ((("e")), 100000000, 0, -591), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -590)], (0)), 100000000, 0, -588), 0), 100000000, 0, -587), 0), 100000000, 0, -586), 0), 100000000, 0, -585), 0, (("src/bos.mli", 637, 23627, 23631), ("src/bos.mli", 638, 23642, 23702), 0), 0, Tag1 ("Bos", 90)), 0); (("delete", 1795), ((Tag1 (Tag1 ("must_exist"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -584)], (0)), 100000000, 0, -583), (Tag1 (Tag1 ("recurse"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -582)], (0)), 100000000, 0, -581), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -580), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -576); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -579))))], ((("e")), 100000000, 0, -578), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -577)], (0)), 100000000, 0, -575), 0), 100000000, 0, -574), 0), 100000000, 0, -573), 0), 100000000, 0, -572), 0, (("src/bos.mli", 643, 23897, 23901), ("src/bos.mli", 644, 23914, 23985), 0), 0, Tag1 ("Bos", 91)), 0); (("stat", 1796), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -571), (Tag3 ((("result", 1740)), [(Tag3 (Tag1 ((Tag2 ("Unix")), "stats"), 0, (0)), 100000000, 0, -567); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -570))))], ((("e")), 100000000, 0, -569), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -568)], (0)), 100000000, 0, -566), 0), 100000000, 0, -565), 0, (("src/bos.mli", 651, 24334, 24338), ("src/bos.mli", 651, 24334, 24383), 0), 0, Tag1 ("Bos", 92)), 0); Tag3 (("Mode", 1797), 0, (Tag1 ([Tag1 (("t", 1809), (0, 0, 0, 1, ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -627)), 0, 0, 0, 0, (("src/bos.mli", 659, 24519, 24525), ("src/bos.mli", 659, 24519, 24537), 0), 0, 1, 0, Tag1 ("Bos", 93)), 1, 0); (("get", 1810), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -626), (Tag3 ((("result", 1740)), [(Tag3 ((("t", 1809)), 0, (0)), 100000000, 0, -622); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -625))))], ((("e")), 100000000, 0, -624), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -623)], (0)), 100000000, 0, -621), 0), 100000000, 0, -620), 0, (("src/bos.mli", 662, 24593, 24599), ("src/bos.mli", 662, 24593, 24634), 0), 0, Tag1 ("Bos", 94)), 0); (("set", 1811), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -619), (Tag1 (0, (Tag3 ((("t", 1809)), 0, (0)), 100000000, 0, -618), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -614); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -617))))], ((("e")), 100000000, 0, -616), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -615)], (0)), 100000000, 0, -613), 0), 100000000, 0, -612), 0), 100000000, 0, -611), 0, (("src/bos.mli", 665, 24684, 24690), ("src/bos.mli", 665, 24684, 24733), 0), 0, Tag1 ("Bos", 95)), 0)]), 0, (("src/bos.mli", 655, 24466, 24470), ("src/bos.mli", 667, 24792, 24799), 0), Tag1 ("Bos", 96)), 0, 0); (("link", 1798), ((Tag1 (Tag1 ("force"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -564)], (0)), 100000000, 0, -563), (Tag1 (("target"), (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -562), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -561), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -557); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -560))))], ((("e")), 100000000, 0, -559), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -558)], (0)), 100000000, 0, -556), 0), 100000000, 0, -555), 0), 100000000, 0, -554), 0), 100000000, 0, -553), 0, (("src/bos.mli", 671, 24833, 24837), ("src/bos.mli", 673, 24898, 24921), 0), 0, Tag1 ("Bos", 97)), 0); (("symlink", 1799), ((Tag1 (Tag1 ("force"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -552)], (0)), 100000000, 0, -551), (Tag1 (("target"), (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -550), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -549), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -545); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -548))))], ((("e")), 100000000, 0, -547), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -546)], (0)), 100000000, 0, -544), 0), 100000000, 0, -543), 0), 100000000, 0, -542), 0), 100000000, 0, -541), 0, (("src/bos.mli", 678, 25118, 25122), ("src/bos.mli", 680, 25186, 25209), 0), 0, Tag1 ("Bos", 98)), 0); (("symlink_target", 1800), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -540), (Tag3 ((("result", 1740)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -536); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -539))))], ((("e")), 100000000, 0, -538), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -537)], (0)), 100000000, 0, -535), 0), 100000000, 0, -534), 0, (("src/bos.mli", 686, 25420, 25424), ("src/bos.mli", 686, 25420, 25476), 0), 0, Tag1 ("Bos", 99)), 0); (("symlink_stat", 1801), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -533), (Tag3 ((("result", 1740)), [(Tag3 (Tag1 ((Tag2 ("Unix")), "stats"), 0, (0)), 100000000, 0, -529); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -532))))], ((("e")), 100000000, 0, -531), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -530)], (0)), 100000000, 0, -528), 0), 100000000, 0, -527), 0, (("src/bos.mli", 689, 25550, 25554), ("src/bos.mli", 689, 25550, 25607), 0), 0, Tag1 ("Bos", 100)), 0); (("matches", 1802), ((Tag1 (Tag1 ("dotfiles"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -526)], (0)), 100000000, 0, -525), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -524), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -520)], (0)), 100000000, 0, -519); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -523))))], ((("e")), 100000000, 0, -522), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -521)], (0)), 100000000, 0, -518), 0), 100000000, 0, -517), 0), 100000000, 0, -516), 0, (("src/bos.mli", 710, 26412, 26416), ("src/bos.mli", 711, 26430, 26490), 0), 0, Tag1 ("Bos", 101)), 0); (("query", 1803), ((Tag1 (Tag1 ("dotfiles"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -515)], (0)), 100000000, 0, -514), (Tag1 (Tag1 ("init"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Pat", 1698)), "defs"), 0, (0)), 100000000, 0, -513)], (0)), 100000000, 0, -512), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -511), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -506); (Tag3 (Tag1 ((("Pat", 1698)), "defs"), 0, (0)), 100000000, 0, -507)]), 100000000, 0, -505)], (0)), 100000000, 0, -504); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -510))))], ((("e")), 100000000, 0, -509), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -508)], (0)), 100000000, 0, -503), 0), 100000000, 0, -502), 0), 100000000, 0, -501), 0), 100000000, 0, -500), 0, (("src/bos.mli", 717, 26728, 26732), ("src/bos.mli", 719, 26797, 26841), 0), 0, Tag1 ("Bos", 102)), 0); Tag1 (("traverse", 1804), (0, 0, 0, 1, ((Tag8 (([("Any", (0)); ("None", (0)); ("Sat", (((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -499), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -497); (Tag3 (Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg"), 0, (0)), 100000000, 0, -498)], (0)), 100000000, 0, -496), 0), 100000000, 0, -495))))], (0, 100000000, 0, -494), 1, 0, 0)), 100000000, 0, -493)), 0, 0, 0, 0, (("src/bos.mli", 727, 27174, 27178), ("src/bos.mli", 727, 27174, 27252), 0), 0, 0, 0, Tag1 ("Bos", 103)), 1, 0); Tag1 (("elements", 1805), (0, 0, 0, 1, ((Tag8 (([("Any", (0)); ("Dirs", (0)); ("Files", (0)); ("Sat", (((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -492), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -490); (Tag3 (Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg"), 0, (0)), 100000000, 0, -491)], (0)), 100000000, 0, -489), 0), 100000000, 0, -488))))], (0, 100000000, 0, -487), 1, 0, 0)), 100000000, 0, -486)), 0, 0, 0, 0, (("src/bos.mli", 732, 27446, 27450), ("src/bos.mli", 733, 27490, 27553), 0), 0, 0, 0, Tag1 ("Bos", 104)), 1, 0); Tag1 (("fold_error", 1806), ([((("a")), 100000000, 0, -483)], 1, 0, 1, ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -485), (Tag1 (0, (Tag3 ((("result", 1740)), [((("a")), 100000000, 0, -483); (Tag3 (Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg"), 0, (0)), 100000000, 0, -484)], (0)), 100000000, 0, -482), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -480); (Tag3 (Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg"), 0, (0)), 100000000, 0, -481)], (0)), 100000000, 0, -479), 0), 100000000, 0, -478), 0), 100000000, 0, -477)), [46], [0], 0, 0, (("src/bos.mli", 736, 27618, 27622), ("src/bos.mli", 736, 27618, 27696), 0), 0, 0, 0, Tag1 ("Bos", 105)), 1, 0); (("log_fold_error", 1807), ((Tag1 (("level"), (Tag3 (Tag1 ((Tag2 ("Logs")), "level"), 0, (0)), 100000000, 0, -476), (Tag3 ((("fold_error", 1806)), [((("a")), 100000000, 0, -475)], (0)), 100000000, 0, -474), 0), 100000000, 0, -473), 0, (("src/bos.mli", 749, 28256, 28260), ("src/bos.mli", 749, 28256, 28314), 0), 0, Tag1 ("Bos", 106)), 0); (("fold", 1808), ((Tag1 (Tag1 ("err"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("fold_error", 1806)), [((("b")), 100000000, 0, -472)], (0)), 100000000, 0, -471)], (0)), 100000000, 0, -470), (Tag1 (Tag1 ("dotfiles"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -469)], (0)), 100000000, 0, -468), (Tag1 (Tag1 ("elements"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("elements", 1805)), 0, (0)), 100000000, 0, -467)], (0)), 100000000, 0, -466), (Tag1 (Tag1 ("traverse"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("traverse", 1804)), 0, (0)), 100000000, 0, -465)], (0)), 100000000, 0, -464), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -463), (Tag1 (0, ((("a")), 100000000, 0, -455), ((("a")), 100000000, 0, -455), 0), 100000000, 0, -462), 0), 100000000, 0, -461), (Tag1 (0, ((("a")), 100000000, 0, -455), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -460)], (0)), 100000000, 0, -459), (Tag3 ((("result", 1740)), [((("a")), 100000000, 0, -455); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -458))))], ((("e")), 100000000, 0, -457), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -456)], (0)), 100000000, 0, -454), 0), 100000000, 0, -453), 0), 100000000, 0, -452), 0), 100000000, 0, -451), 0), 100000000, 0, -450), 0), 100000000, 0, -449), 0), 100000000, 0, -448), 0), 100000000, 0, -447), 0, (("src/bos.mli", 753, 28450, 28454), ("src/bos.mli", 756, 28608, 28629), 0), 0, Tag1 ("Bos", 107)), 0)]), 0, (("src/bos.mli", 625, 23237, 23239), ("src/bos.mli", 769, 29243, 29248), 0), Tag1 ("Bos", 108)), 0, 0); Tag3 (("File", 1744), 0, (Tag1 ([(("null", 1812), ((Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -877), 0, (("src/bos.mli", 776, 29337, 29341), ("src/bos.mli", 776, 29337, 29359), 0), 0, Tag1 ("Bos", 109)), 0); (("dash", 1813), ((Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -876), 0, (("src/bos.mli", 781, 29551, 29555), ("src/bos.mli", 781, 29551, 29573), 0), 0, Tag1 ("Bos", 110)), 0); (("exists", 1814), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -875), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -871); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -874))))], ((("e")), 100000000, 0, -873), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -872)], (0)), 100000000, 0, -870), 0), 100000000, 0, -869), 0, (("src/bos.mli", 796, 30238, 30242), ("src/bos.mli", 796, 30238, 30283), 0), 0, Tag1 ("Bos", 111)), 0); (("must_exist", 1815), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -868), (Tag3 ((("result", 1740)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -864); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -867))))], ((("e")), 100000000, 0, -866), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -865)], (0)), 100000000, 0, -863), 0), 100000000, 0, -862), 0, (("src/bos.mli", 801, 30435, 30439), ("src/bos.mli", 801, 30435, 30487), 0), 0, Tag1 ("Bos", 112)), 0); (("delete", 1816), ((Tag1 (Tag1 ("must_exist"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -861)], (0)), 100000000, 0, -860), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -859), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -855); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -858))))], ((("e")), 100000000, 0, -857), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -856)], (0)), 100000000, 0, -854), 0), 100000000, 0, -853), 0), 100000000, 0, -852), 0, (("src/bos.mli", 806, 30647, 30651), ("src/bos.mli", 806, 30647, 30712), 0), 0, Tag1 ("Bos", 113)), 0); (("truncate", 1817), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -851), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -850), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -846); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -849))))], ((("e")), 100000000, 0, -848), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -847)], (0)), 100000000, 0, -845), 0), 100000000, 0, -844), 0), 100000000, 0, -843), 0, (("src/bos.mli", 811, 30882, 30886), ("src/bos.mli", 811, 30882, 30936), 0), 0, Tag1 ("Bos", 114)), 0); (("is_executable", 1818), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -842), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -841), 0), 100000000, 0, -840), 0, (("src/bos.mli", 814, 30989, 30993), ("src/bos.mli", 814, 30989, 31028), 0), 0, Tag1 ("Bos", 115)), 0); Tag1 (("input", 1819), (0, 0, 0, 1, ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -839), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Bytes"), "t"), 0, (0)), 100000000, 0, -836); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -837); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -838)]), 100000000, 0, -835)], (0)), 100000000, 0, -834), 0), 100000000, 0, -833)), 0, 0, 0, 0, (("src/bos.mli", 823, 31252, 31256), ("src/bos.mli", 823, 31252, 31305), 0), 0, 0, 0, Tag1 ("Bos", 116)), 1, 0); (("with_input", 1820), ((Tag1 (Tag1 ("bytes"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Bytes"), "t"), 0, (0)), 100000000, 0, -832)], (0)), 100000000, 0, -831), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -830), (Tag1 (0, (Tag1 (0, (Tag3 ((("input", 1819)), 0, (0)), 100000000, 0, -829), (Tag1 (0, ((("a")), 100000000, 0, -826), ((("b")), 100000000, 0, -822), 0), 100000000, 0, -828), 0), 100000000, 0, -827), (Tag1 (0, ((("a")), 100000000, 0, -826), (Tag3 ((("result", 1740)), [((("b")), 100000000, 0, -822); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -825))))], ((("e")), 100000000, 0, -824), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -823)], (0)), 100000000, 0, -821), 0), 100000000, 0, -820), 0), 100000000, 0, -819), 0), 100000000, 0, -818), 0), 100000000, 0, -817), 0, (("src/bos.mli", 830, 31629, 31633), ("src/bos.mli", 832, 31674, 31735), 0), 0, Tag1 ("Bos", 117)), 0); (("with_ic", 1821), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -816), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "in_channel"), 0, (0)), 100000000, 0, -815), (Tag1 (0, ((("a")), 100000000, 0, -812), ((("b")), 100000000, 0, -808), 0), 100000000, 0, -814), 0), 100000000, 0, -813), (Tag1 (0, ((("a")), 100000000, 0, -812), (Tag3 ((("result", 1740)), [((("b")), 100000000, 0, -808); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -811))))], ((("e")), 100000000, 0, -810), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -809)], (0)), 100000000, 0, -807), 0), 100000000, 0, -806), 0), 100000000, 0, -805), 0), 100000000, 0, -804), 0, (("src/bos.mli", 840, 32078, 32082), ("src/bos.mli", 841, 32096, 32162), 0), 0, Tag1 ("Bos", 118)), 0); (("read", 1822), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -803), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -799); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -802))))], ((("e")), 100000000, 0, -801), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -800)], (0)), 100000000, 0, -798), 0), 100000000, 0, -797), 0, (("src/bos.mli", 849, 32546, 32550), ("src/bos.mli", 849, 32546, 32591), 0), 0, Tag1 ("Bos", 119)), 0); (("read_lines", 1823), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -796), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -792)], (0)), 100000000, 0, -791); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -795))))], ((("e")), 100000000, 0, -794), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -793)], (0)), 100000000, 0, -790), 0), 100000000, 0, -789), 0, (("src/bos.mli", 852, 32649, 32653), ("src/bos.mli", 852, 32649, 32705), 0), 0, Tag1 ("Bos", 120)), 0); (("fold_lines", 1824), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -781), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -788), ((("a")), 100000000, 0, -781), 0), 100000000, 0, -787), 0), 100000000, 0, -786), (Tag1 (0, ((("a")), 100000000, 0, -781), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -785), (Tag3 ((("result", 1740)), [((("a")), 100000000, 0, -781); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -784))))], ((("e")), 100000000, 0, -783), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -782)], (0)), 100000000, 0, -780), 0), 100000000, 0, -779), 0), 100000000, 0, -778), 0), 100000000, 0, -777), 0, (("src/bos.mli", 856, 32797, 32801), ("src/bos.mli", 857, 32818, 32880), 0), 0, Tag1 ("Bos", 121)), 0); Tag1 (("output", 1825), (0, 0, 0, 1, ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Bytes"), "t"), 0, (0)), 100000000, 0, -774); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -775); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -776)]), 100000000, 0, -773)], (0)), 100000000, 0, -772), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -771), 0), 100000000, 0, -770)), 0, 0, 0, 0, (("src/bos.mli", 878, 33647, 33651), ("src/bos.mli", 878, 33647, 33701), 0), 0, 0, 0, Tag1 ("Bos", 122)), 1, 0); (("with_output", 1826), ((Tag1 (Tag1 ("mode"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -769)], (0)), 100000000, 0, -768), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -767), (Tag1 (0, (Tag1 (0, (Tag3 ((("output", 1825)), 0, (0)), 100000000, 0, -766), (Tag1 (0, ((("a")), 100000000, 0, -763), (Tag3 ((("result", 1740)), [((("c")), 100000000, 0, -756); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -759))))], ((("e")), 100000000, 0, -758), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -757)], (0)), 100000000, 0, -755), 0), 100000000, 0, -765), 0), 100000000, 0, -764), (Tag1 (0, ((("a")), 100000000, 0, -763), (Tag3 ((("result", 1740)), [(Tag3 ((("result", 1740)), [((("c")), 100000000, 0, -756); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -759))))], ((("e")), 100000000, 0, -758), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -757)], (0)), 100000000, 0, -755); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -762))))], ((("e")), 100000000, 0, -761), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -760)], (0)), 100000000, 0, -754), 0), 100000000, 0, -753), 0), 100000000, 0, -752), 0), 100000000, 0, -751), 0), 100000000, 0, -750), 0, (("src/bos.mli", 884, 33931, 33935), ("src/bos.mli", 887, 34040, 34061), 0), 0, Tag1 ("Bos", 123)), 0); (("with_oc", 1827), ((Tag1 (Tag1 ("mode"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -749)], (0)), 100000000, 0, -748), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -747), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -746), (Tag1 (0, ((("a")), 100000000, 0, -743), (Tag3 ((("result", 1740)), [((("c")), 100000000, 0, -736); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -739))))], ((("e")), 100000000, 0, -738), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -737)], (0)), 100000000, 0, -735), 0), 100000000, 0, -745), 0), 100000000, 0, -744), (Tag1 (0, ((("a")), 100000000, 0, -743), (Tag3 ((("result", 1740)), [(Tag3 ((("result", 1740)), [((("c")), 100000000, 0, -736); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -739))))], ((("e")), 100000000, 0, -738), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -737)], (0)), 100000000, 0, -735); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -742))))], ((("e")), 100000000, 0, -741), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -740)], (0)), 100000000, 0, -734), 0), 100000000, 0, -733), 0), 100000000, 0, -732), 0), 100000000, 0, -731), 0), 100000000, 0, -730), 0, (("src/bos.mli", 894, 34378, 34382), ("src/bos.mli", 897, 34482, 34509), 0), 0, Tag1 ("Bos", 124)), 0); (("write", 1828), ((Tag1 (Tag1 ("mode"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -729)], (0)), 100000000, 0, -728), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -727), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -726), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -722); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -725))))], ((("e")), 100000000, 0, -724), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -723)], (0)), 100000000, 0, -721), 0), 100000000, 0, -720), 0), 100000000, 0, -719), 0), 100000000, 0, -718), 0, (("src/bos.mli", 905, 34849, 34853), ("src/bos.mli", 906, 34865, 34922), 0), 0, Tag1 ("Bos", 125)), 0); (("writef", 1829), ((Tag1 (Tag1 ("mode"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -717)], (0)), 100000000, 0, -716), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -715), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format4"), [((("a")), 100000000, 0, -706); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -708); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -709); (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -711); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -714))))], ((("e")), 100000000, 0, -713), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -712)], (0)), 100000000, 0, -710)], (0)), 100000000, 0, -707), ((("a")), 100000000, 0, -706), 0), 100000000, 0, -705), 0), 100000000, 0, -704), 0), 100000000, 0, -703), 0, (("src/bos.mli", 912, 35147, 35151), ("src/bos.mli", 915, 35260, 35268), 0), 0, Tag1 ("Bos", 126)), 0); (("write_lines", 1830), ((Tag1 (Tag1 ("mode"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -702)], (0)), 100000000, 0, -701), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -700), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -699)], (0)), 100000000, 0, -698), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -694); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -697))))], ((("e")), 100000000, 0, -696), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -695)], (0)), 100000000, 0, -693), 0), 100000000, 0, -692), 0), 100000000, 0, -691), 0), 100000000, 0, -690), 0, (("src/bos.mli", 918, 35350, 35354), ("src/bos.mli", 919, 35372, 35434), 0), 0, Tag1 ("Bos", 127)), 0); Tag1 (("tmp_name_pat", 1831), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "format4"), [(Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -686), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -685), 0), 100000000, 0, -684); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -687); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -688); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -689)], (0)), 100000000, 0, -683)), 0, 0, 0, 0, (("src/bos.mli", 925, 35575, 35579), ("src/bos.mli", 926, 35650, 35665), 0), 0, 0, 0, Tag1 ("Bos", 128)), 1, 0); (("tmp", 1832), ((Tag1 (Tag1 ("mode"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -682)], (0)), 100000000, 0, -681), (Tag1 (Tag1 ("dir"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -680)], (0)), 100000000, 0, -679), (Tag1 (0, (Tag3 ((("tmp_name_pat", 1831)), 0, (0)), 100000000, 0, -678), (Tag3 ((("result", 1740)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -674); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -677))))], ((("e")), 100000000, 0, -676), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -675)], (0)), 100000000, 0, -673), 0), 100000000, 0, -672), 0), 100000000, 0, -671), 0), 100000000, 0, -670), 0, (("src/bos.mli", 930, 35781, 35785), ("src/bos.mli", 932, 35846, 35872), 0), 0, Tag1 ("Bos", 129)), 0); (("with_tmp_output", 1833), ((Tag1 (Tag1 ("mode"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -669)], (0)), 100000000, 0, -668), (Tag1 (Tag1 ("dir"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -667)], (0)), 100000000, 0, -666), (Tag1 (0, (Tag3 ((("tmp_name_pat", 1831)), 0, (0)), 100000000, 0, -665), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -664), (Tag1 (0, (Tag3 ((("output", 1825)), 0, (0)), 100000000, 0, -663), (Tag1 (0, ((("a")), 100000000, 0, -659), ((("b")), 100000000, 0, -655), 0), 100000000, 0, -662), 0), 100000000, 0, -661), 0), 100000000, 0, -660), (Tag1 (0, ((("a")), 100000000, 0, -659), (Tag3 ((("result", 1740)), [((("b")), 100000000, 0, -655); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -658))))], ((("e")), 100000000, 0, -657), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -656)], (0)), 100000000, 0, -654), 0), 100000000, 0, -653), 0), 100000000, 0, -652), 0), 100000000, 0, -651), 0), 100000000, 0, -650), 0), 100000000, 0, -649), 0, (("src/bos.mli", 945, 36483, 36487), ("src/bos.mli", 947, 36560, 36622), 0), 0, Tag1 ("Bos", 130)), 0); (("with_tmp_oc", 1834), ((Tag1 (Tag1 ("mode"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -648)], (0)), 100000000, 0, -647), (Tag1 (Tag1 ("dir"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -646)], (0)), 100000000, 0, -645), (Tag1 (0, (Tag3 ((("tmp_name_pat", 1831)), 0, (0)), 100000000, 0, -644), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -643), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -642), (Tag1 (0, ((("a")), 100000000, 0, -638), ((("b")), 100000000, 0, -634), 0), 100000000, 0, -641), 0), 100000000, 0, -640), 0), 100000000, 0, -639), (Tag1 (0, ((("a")), 100000000, 0, -638), (Tag3 ((("result", 1740)), [((("b")), 100000000, 0, -634); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -637))))], ((("e")), 100000000, 0, -636), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -635)], (0)), 100000000, 0, -633), 0), 100000000, 0, -632), 0), 100000000, 0, -631), 0), 100000000, 0, -630), 0), 100000000, 0, -629), 0), 100000000, 0, -628), 0, (("src/bos.mli", 957, 37141, 37145), ("src/bos.mli", 960, 37266, 37287), 0), 0, Tag1 ("Bos", 131)), 0)]), 0, (("src/bos.mli", 772, 29276, 29278), ("src/bos.mli", 969, 37792, 37795), 0), Tag1 ("Bos", 132)), 0, 0); Tag3 (("Dir", 1745), 0, (Tag1 ([(("exists", 1835), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1033), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1029); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1032))))], ((("e")), 100000000, 0, -1031), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1030)], (0)), 100000000, 0, -1028), 0), 100000000, 0, -1027), 0, (("src/bos.mli", 976, 37914, 37918), ("src/bos.mli", 976, 37914, 37959), 0), 0, Tag1 ("Bos", 133)), 0); (("must_exist", 1836), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1026), (Tag3 ((("result", 1740)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1022); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1025))))], ((("e")), 100000000, 0, -1024), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1023)], (0)), 100000000, 0, -1021), 0), 100000000, 0, -1020), 0, (("src/bos.mli", 980, 38098, 38102), ("src/bos.mli", 980, 38098, 38150), 0), 0, Tag1 ("Bos", 134)), 0); (("create", 1837), ((Tag1 (Tag1 ("path"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1019)], (0)), 100000000, 0, -1018), (Tag1 (Tag1 ("mode"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1017)], (0)), 100000000, 0, -1016), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1015), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1011); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1014))))], ((("e")), 100000000, 0, -1013), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1012)], (0)), 100000000, 0, -1010), 0), 100000000, 0, -1009), 0), 100000000, 0, -1008), 0), 100000000, 0, -1007), 0, (("src/bos.mli", 984, 38296, 38300), ("src/bos.mli", 985, 38313, 38374), 0), 0, Tag1 ("Bos", 135)), 0); (("delete", 1838), ((Tag1 (Tag1 ("must_exist"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1006)], (0)), 100000000, 0, -1005), (Tag1 (Tag1 ("recurse"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1004)], (0)), 100000000, 0, -1003), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1002), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -998); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1001))))], ((("e")), 100000000, 0, -1000), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -999)], (0)), 100000000, 0, -997), 0), 100000000, 0, -996), 0), 100000000, 0, -995), 0), 100000000, 0, -994), 0, (("src/bos.mli", 1000, 39114, 39118), ("src/bos.mli", 1002, 39185, 39208), 0), 0, Tag1 ("Bos", 136)), 0); (("contents", 1839), ((Tag1 (Tag1 ("dotfiles"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -993)], (0)), 100000000, 0, -992), (Tag1 (Tag1 ("rel"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -991)], (0)), 100000000, 0, -990), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -989), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -985)], (0)), 100000000, 0, -984); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -988))))], ((("e")), 100000000, 0, -987), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -986)], (0)), 100000000, 0, -983), 0), 100000000, 0, -982), 0), 100000000, 0, -981), 0), 100000000, 0, -980), 0, (("src/bos.mli", 1009, 39543, 39547), ("src/bos.mli", 1010, 39562, 39635), 0), 0, Tag1 ("Bos", 137)), 0); (("fold_contents", 1840), ((Tag1 (Tag1 ("err"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Path", 1743)), "fold_error"), [((("b")), 100000000, 0, -979)], (0)), 100000000, 0, -978)], (0)), 100000000, 0, -977), (Tag1 (Tag1 ("dotfiles"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -976)], (0)), 100000000, 0, -975), (Tag1 (Tag1 ("elements"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Path", 1743)), "elements"), 0, (0)), 100000000, 0, -974)], (0)), 100000000, 0, -973), (Tag1 (Tag1 ("traverse"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Path", 1743)), "traverse"), 0, (0)), 100000000, 0, -972)], (0)), 100000000, 0, -971), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -970), (Tag1 (0, ((("a")), 100000000, 0, -963), ((("a")), 100000000, 0, -963), 0), 100000000, 0, -969), 0), 100000000, 0, -968), (Tag1 (0, ((("a")), 100000000, 0, -963), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -967), (Tag3 ((("result", 1740)), [((("a")), 100000000, 0, -963); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -966))))], ((("e")), 100000000, 0, -965), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -964)], (0)), 100000000, 0, -962), 0), 100000000, 0, -961), 0), 100000000, 0, -960), 0), 100000000, 0, -959), 0), 100000000, 0, -958), 0), 100000000, 0, -957), 0), 100000000, 0, -956), 0), 100000000, 0, -955), 0, (("src/bos.mli", 1017, 39984, 39988), ("src/bos.mli", 1020, 40161, 40182), 0), 0, Tag1 ("Bos", 138)), 0); (("user", 1841), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -954), (Tag3 ((("result", 1740)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -950); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -953))))], ((("e")), 100000000, 0, -952), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -951)], (0)), 100000000, 0, -949), 0), 100000000, 0, -948), 0, (("src/bos.mli", 1029, 40437, 40441), ("src/bos.mli", 1029, 40437, 40480), 0), 0, Tag1 ("Bos", 139)), 0); (("current", 1842), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -947), (Tag3 ((("result", 1740)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -943); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -946))))], ((("e")), 100000000, 0, -945), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -944)], (0)), 100000000, 0, -942), 0), 100000000, 0, -941), 0, (("src/bos.mli", 1035, 40757, 40761), ("src/bos.mli", 1035, 40757, 40803), 0), 0, Tag1 ("Bos", 140)), 0); (("set_current", 1843), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -940), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -936); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -939))))], ((("e")), 100000000, 0, -938), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -937)], (0)), 100000000, 0, -935), 0), 100000000, 0, -934), 0, (("src/bos.mli", 1039, 40920, 40924), ("src/bos.mli", 1039, 40920, 40970), 0), 0, Tag1 ("Bos", 141)), 0); (("with_current", 1844), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -933), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -931), ((("b")), 100000000, 0, -927), 0), 100000000, 0, -932), (Tag1 (0, ((("a")), 100000000, 0, -931), (Tag3 ((("result", 1740)), [((("b")), 100000000, 0, -927); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -930))))], ((("e")), 100000000, 0, -929), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -928)], (0)), 100000000, 0, -926), 0), 100000000, 0, -925), 0), 100000000, 0, -924), 0), 100000000, 0, -923), 0, (("src/bos.mli", 1042, 41046, 41050), ("src/bos.mli", 1042, 41046, 41115), 0), 0, Tag1 ("Bos", 142)), 0); Tag1 (("tmp_name_pat", 1845), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "format4"), [(Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -919), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -918), 0), 100000000, 0, -917); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -920); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -921); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -922)], (0)), 100000000, 0, -916)), 0, 0, 0, 0, (("src/bos.mli", 1049, 41360, 41364), ("src/bos.mli", 1050, 41435, 41450), 0), 0, 0, 0, Tag1 ("Bos", 143)), 1, 0); (("tmp", 1846), ((Tag1 (Tag1 ("mode"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -915)], (0)), 100000000, 0, -914), (Tag1 (Tag1 ("dir"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -913)], (0)), 100000000, 0, -912), (Tag1 (0, (Tag3 ((("tmp_name_pat", 1845)), 0, (0)), 100000000, 0, -911), (Tag3 ((("result", 1740)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -907); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -910))))], ((("e")), 100000000, 0, -909), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -908)], (0)), 100000000, 0, -906), 0), 100000000, 0, -905), 0), 100000000, 0, -904), 0), 100000000, 0, -903), 0, (("src/bos.mli", 1054, 41571, 41575), ("src/bos.mli", 1056, 41636, 41662), 0), 0, Tag1 ("Bos", 144)), 0); (("with_tmp", 1847), ((Tag1 (Tag1 ("mode"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -902)], (0)), 100000000, 0, -901), (Tag1 (Tag1 ("dir"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -900)], (0)), 100000000, 0, -899), (Tag1 (0, (Tag3 ((("tmp_name_pat", 1845)), 0, (0)), 100000000, 0, -898), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -897), (Tag1 (0, ((("a")), 100000000, 0, -894), ((("b")), 100000000, 0, -890), 0), 100000000, 0, -896), 0), 100000000, 0, -895), (Tag1 (0, ((("a")), 100000000, 0, -894), (Tag3 ((("result", 1740)), [((("b")), 100000000, 0, -890); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -893))))], ((("e")), 100000000, 0, -892), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -891)], (0)), 100000000, 0, -889), 0), 100000000, 0, -888), 0), 100000000, 0, -887), 0), 100000000, 0, -886), 0), 100000000, 0, -885), 0), 100000000, 0, -884), 0, (("src/bos.mli", 1064, 42037, 42041), ("src/bos.mli", 1066, 42132, 42159), 0), 0, Tag1 ("Bos", 145)), 0); (("default_tmp", 1848), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -883), (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -882), 0), 100000000, 0, -881), 0, (("src/bos.mli", 1077, 42647, 42651), ("src/bos.mli", 1077, 42647, 42684), 0), 0, Tag1 ("Bos", 146)), 0); (("set_default_tmp", 1849), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -880), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -879), 0), 100000000, 0, -878), 0, (("src/bos.mli", 1088, 43181, 43185), ("src/bos.mli", 1088, 43181, 43222), 0), 0, Tag1 ("Bos", 147)), 0)]), 0, (("src/bos.mli", 972, 37828, 37830), ("src/bos.mli", 1091, 43312, 43317), 0), Tag1 ("Bos", 148)), 0, 0); Tag3 (("Cmd", 1746), 0, (Tag1 ([(("find_tool", 1850), ((Tag1 (Tag1 ("search"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1313)], (0)), 100000000, 0, -1312)], (0)), 100000000, 0, -1311), (Tag1 (0, (Tag3 (Tag1 ((("Cmd", 1699)), "t"), 0, (0)), 100000000, 0, -1310), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1306)], (0)), 100000000, 0, -1305); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1309))))], ((("e")), 100000000, 0, -1308), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1307)], (0)), 100000000, 0, -1304), 0), 100000000, 0, -1303), 0), 100000000, 0, -1302), 0, (("src/bos.mli", 1115, 44224, 44228), ("src/bos.mli", 1115, 44224, 44304), 0), 0, Tag1 ("Bos", 149)), 0); (("get_tool", 1851), ((Tag1 (Tag1 ("search"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1301)], (0)), 100000000, 0, -1300)], (0)), 100000000, 0, -1299), (Tag1 (0, (Tag3 (Tag1 ((("Cmd", 1699)), "t"), 0, (0)), 100000000, 0, -1298), (Tag3 ((("result", 1740)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1294); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1297))))], ((("e")), 100000000, 0, -1296), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1295)], (0)), 100000000, 0, -1293), 0), 100000000, 0, -1292), 0), 100000000, 0, -1291), 0, (("src/bos.mli", 1119, 44455, 44459), ("src/bos.mli", 1119, 44455, 44527), 0), 0, Tag1 ("Bos", 150)), 0); (("exists", 1852), ((Tag1 (Tag1 ("search"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1290)], (0)), 100000000, 0, -1289)], (0)), 100000000, 0, -1288), (Tag1 (0, (Tag3 (Tag1 ((("Cmd", 1699)), "t"), 0, (0)), 100000000, 0, -1287), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1283); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1286))))], ((("e")), 100000000, 0, -1285), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1284)], (0)), 100000000, 0, -1282), 0), 100000000, 0, -1281), 0), 100000000, 0, -1280), 0, (("src/bos.mli", 1123, 44635, 44639), ("src/bos.mli", 1123, 44635, 44702), 0), 0, Tag1 ("Bos", 151)), 0); (("must_exist", 1853), ((Tag1 (Tag1 ("search"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1279)], (0)), 100000000, 0, -1278)], (0)), 100000000, 0, -1277), (Tag1 (0, (Tag3 (Tag1 ((("Cmd", 1699)), "t"), 0, (0)), 100000000, 0, -1276), (Tag3 ((("result", 1740)), [(Tag3 (Tag1 ((("Cmd", 1699)), "t"), 0, (0)), 100000000, 0, -1272); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1275))))], ((("e")), 100000000, 0, -1274), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1273)], (0)), 100000000, 0, -1271), 0), 100000000, 0, -1270), 0), 100000000, 0, -1269), 0, (("src/bos.mli", 1127, 44817, 44821), ("src/bos.mli", 1127, 44817, 44889), 0), 0, Tag1 ("Bos", 152)), 0); (("resolve", 1854), ((Tag1 (Tag1 ("search"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1268)], (0)), 100000000, 0, -1267)], (0)), 100000000, 0, -1266), (Tag1 (0, (Tag3 (Tag1 ((("Cmd", 1699)), "t"), 0, (0)), 100000000, 0, -1265), (Tag3 ((("result", 1740)), [(Tag3 (Tag1 ((("Cmd", 1699)), "t"), 0, (0)), 100000000, 0, -1261); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1264))))], ((("e")), 100000000, 0, -1263), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1262)], (0)), 100000000, 0, -1260), 0), 100000000, 0, -1259), 0), 100000000, 0, -1258), 0, (("src/bos.mli", 1130, 44964, 44968), ("src/bos.mli", 1130, 44964, 45033), 0), 0, Tag1 ("Bos", 153)), 0); (("search_path_dirs", 1855), ((Tag1 (Tag1 ("sep"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1257)], (0)), 100000000, 0, -1256), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1255), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1251)], (0)), 100000000, 0, -1250); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1254))))], ((("e")), 100000000, 0, -1253), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1252)], (0)), 100000000, 0, -1249), 0), 100000000, 0, -1248), 0), 100000000, 0, -1247), 0, (("src/bos.mli", 1135, 45217, 45221), ("src/bos.mli", 1135, 45217, 45294), 0), 0, Tag1 ("Bos", 154)), 0); Tag1 (("status", 1856), (0, 0, 0, 1, ((Tag8 (([("Exited", (((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1246)))); ("Signaled", (((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1245))))], (0, 100000000, 0, -1244), 1, 0, 0)), 100000000, 0, -1243)), 0, 0, 0, 0, (("src/bos.mli", 1153, 45960, 45964), ("src/bos.mli", 1153, 45960, 46015), 0), 0, 0, 0, Tag1 ("Bos", 155)), 1, 0); (("pp_status", 1857), ((Tag3 (Tag1 ((Tag2 ("Fmt")), "t"), [(Tag3 ((("status", 1856)), 0, (0)), 100000000, 0, -1242)], (0)), 100000000, 0, -1241), 0, (("src/bos.mli", 1156, 46064, 46068), ("src/bos.mli", 1156, 46064, 46096), 0), 0, Tag1 ("Bos", 156)), 0); Tag1 (("run_info", 1858), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/bos.mli", 1159, 46150, 46154), ("src/bos.mli", 1159, 46150, 46167), 0), 0, 0, 0, Tag1 ("Bos", 157)), 1, 0); (("run_info_cmd", 1859), ((Tag1 (0, (Tag3 ((("run_info", 1858)), 0, (0)), 100000000, 0, -1240), (Tag3 (Tag1 ((("Cmd", 1699)), "t"), 0, (0)), 100000000, 0, -1239), 0), 100000000, 0, -1238), 0, (("src/bos.mli", 1162, 46210, 46214), ("src/bos.mli", 1162, 46210, 46250), 0), 0, Tag1 ("Bos", 158)), 0); Tag1 (("run_status", 1860), (0, 0, 0, 1, ((Tag2 ([(Tag3 ((("run_info", 1858)), 0, (0)), 100000000, 0, -1236); (Tag3 ((("status", 1856)), 0, (0)), 100000000, 0, -1237)]), 100000000, 0, -1235)), 0, 0, 0, 0, (("src/bos.mli", 1165, 46310, 46314), ("src/bos.mli", 1165, 46310, 46349), 0), 0, 0, 0, Tag1 ("Bos", 159)), 1, 0); (("success", 1861), ((Tag1 (0, (Tag3 ((("result", 1740)), [(Tag2 ([((("a")), 100000000, 0, -1228); (Tag3 ((("run_status", 1860)), 0, (0)), 100000000, 0, -1234)]), 100000000, 0, -1233); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1231))))], ((0), 100000000, 0, -1230), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1229)], (0)), 100000000, 0, -1232), (Tag3 ((("result", 1740)), [((("a")), 100000000, 0, -1228); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1231))))], ((0), 100000000, 0, -1230), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1229)], (0)), 100000000, 0, -1227), 0), 100000000, 0, -1226), 0, (("src/bos.mli", 1169, 46445, 46449), ("src/bos.mli", 1169, 46445, 46510), 0), 0, Tag1 ("Bos", 160)), 0); Tag1 (("run_err", 1862), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/bos.mli", 1178, 46750, 46754), ("src/bos.mli", 1178, 46750, 46766), 0), 0, 0, 0, Tag1 ("Bos", 161)), 1, 0); (("err_file", 1863), ((Tag1 (Tag1 ("append"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1225)], (0)), 100000000, 0, -1224), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1223), (Tag3 ((("run_err", 1862)), 0, (0)), 100000000, 0, -1222), 0), 100000000, 0, -1221), 0), 100000000, 0, -1220), 0, (("src/bos.mli", 1181, 46842, 46846), ("src/bos.mli", 1181, 46842, 46895), 0), 0, Tag1 ("Bos", 162)), 0); (("err_null", 1864), ((Tag3 ((("run_err", 1862)), 0, (0)), 100000000, 0, -1219), 0, (("src/bos.mli", 1185, 47047, 47051), ("src/bos.mli", 1185, 47047, 47073), 0), 0, Tag1 ("Bos", 163)), 0); (("err_run_out", 1865), ((Tag3 ((("run_err", 1862)), 0, (0)), 100000000, 0, -1218), 0, (("src/bos.mli", 1188, 47122, 47126), ("src/bos.mli", 1188, 47122, 47151), 0), 0, Tag1 ("Bos", 164)), 0); (("err_stderr", 1866), ((Tag3 ((("run_err", 1862)), 0, (0)), 100000000, 0, -1217), 0, (("src/bos.mli", 1192, 47255, 47259), ("src/bos.mli", 1192, 47255, 47283), 0), 0, Tag1 ("Bos", 165)), 0); Tag1 (("run_in", 1867), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/bos.mli", 1198, 47438, 47442), ("src/bos.mli", 1198, 47438, 47453), 0), 0, 0, 0, Tag1 ("Bos", 166)), 1, 0); (("in_string", 1868), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1216), (Tag3 ((("run_in", 1867)), 0, (0)), 100000000, 0, -1215), 0), 100000000, 0, -1214), 0, (("src/bos.mli", 1201, 47529, 47533), ("src/bos.mli", 1201, 47529, 47565), 0), 0, Tag1 ("Bos", 167)), 0); (("in_file", 1869), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1213), (Tag3 ((("run_in", 1867)), 0, (0)), 100000000, 0, -1212), 0), 100000000, 0, -1211), 0, (("src/bos.mli", 1204, 47628, 47632), ("src/bos.mli", 1204, 47628, 47663), 0), 0, Tag1 ("Bos", 168)), 0); (("in_null", 1870), ((Tag3 ((("run_in", 1867)), 0, (0)), 100000000, 0, -1210), 0, (("src/bos.mli", 1207, 47734, 47738), ("src/bos.mli", 1207, 47734, 47758), 0), 0, Tag1 ("Bos", 169)), 0); (("in_stdin", 1871), ((Tag3 ((("run_in", 1867)), 0, (0)), 100000000, 0, -1209), 0, (("src/bos.mli", 1210, 47805, 47809), ("src/bos.mli", 1210, 47805, 47830), 0), 0, Tag1 ("Bos", 170)), 0); Tag1 (("run_out", 1872), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/bos.mli", 1224, 48385, 48389), ("src/bos.mli", 1224, 48385, 48401), 0), 0, 0, 0, Tag1 ("Bos", 171)), 1, 0); (("out_string", 1873), ((Tag1 (Tag1 ("trim"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1208)], (0)), 100000000, 0, -1207), (Tag1 (0, (Tag3 ((("run_out", 1872)), 0, (0)), 100000000, 0, -1206), (Tag3 ((("result", 1740)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1201); (Tag3 ((("run_status", 1860)), 0, (0)), 100000000, 0, -1202)]), 100000000, 0, -1200); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1205))))], ((("e")), 100000000, 0, -1204), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1203)], (0)), 100000000, 0, -1199), 0), 100000000, 0, -1198), 0), 100000000, 0, -1197), 0, (("src/bos.mli", 1228, 48497, 48501), ("src/bos.mli", 1228, 48497, 48575), 0), 0, Tag1 ("Bos", 172)), 0); (("out_lines", 1874), ((Tag1 (Tag1 ("trim"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1196)], (0)), 100000000, 0, -1195), (Tag1 (0, (Tag3 ((("run_out", 1872)), 0, (0)), 100000000, 0, -1194), (Tag3 ((("result", 1740)), [(Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1189)], (0)), 100000000, 0, -1188); (Tag3 ((("run_status", 1860)), 0, (0)), 100000000, 0, -1190)]), 100000000, 0, -1187); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1193))))], ((("e")), 100000000, 0, -1192), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1191)], (0)), 100000000, 0, -1186), 0), 100000000, 0, -1185), 0), 100000000, 0, -1184), 0, (("src/bos.mli", 1233, 48746, 48750), ("src/bos.mli", 1234, 48766, 48834), 0), 0, Tag1 ("Bos", 173)), 0); (("out_file", 1875), ((Tag1 (Tag1 ("append"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1183)], (0)), 100000000, 0, -1182), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1181), (Tag1 (0, (Tag3 ((("run_out", 1872)), 0, (0)), 100000000, 0, -1180), (Tag3 ((("result", 1740)), [(Tag2 ([(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1175); (Tag3 ((("run_status", 1860)), 0, (0)), 100000000, 0, -1176)]), 100000000, 0, -1174); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1179))))], ((("e")), 100000000, 0, -1178), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1177)], (0)), 100000000, 0, -1173), 0), 100000000, 0, -1172), 0), 100000000, 0, -1171), 0), 100000000, 0, -1170), 0, (("src/bos.mli", 1240, 49117, 49121), ("src/bos.mli", 1241, 49136, 49210), 0), 0, Tag1 ("Bos", 174)), 0); (("out_run_in", 1876), ((Tag1 (0, (Tag3 ((("run_out", 1872)), 0, (0)), 100000000, 0, -1169), (Tag3 ((("result", 1740)), [(Tag3 ((("run_in", 1867)), 0, (0)), 100000000, 0, -1165); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1168))))], ((("e")), 100000000, 0, -1167), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1166)], (0)), 100000000, 0, -1164), 0), 100000000, 0, -1163), 0, (("src/bos.mli", 1246, 49371, 49375), ("src/bos.mli", 1246, 49371, 49422), 0), 0, Tag1 ("Bos", 175)), 0); (("out_null", 1877), ((Tag1 (0, (Tag3 ((("run_out", 1872)), 0, (0)), 100000000, 0, -1162), (Tag3 ((("result", 1740)), [(Tag2 ([(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1157); (Tag3 ((("run_status", 1860)), 0, (0)), 100000000, 0, -1158)]), 100000000, 0, -1156); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1161))))], ((("e")), 100000000, 0, -1160), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1159)], (0)), 100000000, 0, -1155), 0), 100000000, 0, -1154), 0, (("src/bos.mli", 1254, 49813, 49817), ("src/bos.mli", 1254, 49813, 49873), 0), 0, Tag1 ("Bos", 176)), 0); (("out_stdout", 1878), ((Tag1 (0, (Tag3 ((("run_out", 1872)), 0, (0)), 100000000, 0, -1153), (Tag3 ((("result", 1740)), [(Tag2 ([(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1148); (Tag3 ((("run_status", 1860)), 0, (0)), 100000000, 0, -1149)]), 100000000, 0, -1147); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1152))))], ((("e")), 100000000, 0, -1151), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1150)], (0)), 100000000, 0, -1146), 0), 100000000, 0, -1145), 0, (("src/bos.mli", 1257, 49926, 49930), ("src/bos.mli", 1257, 49926, 49988), 0), 0, Tag1 ("Bos", 177)), 0); (("to_string", 1879), ((Tag1 (Tag1 ("trim"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1144)], (0)), 100000000, 0, -1143), (Tag1 (0, (Tag3 ((("run_out", 1872)), 0, (0)), 100000000, 0, -1142), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1138); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1141))))], ((("e")), 100000000, 0, -1140), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1139)], (0)), 100000000, 0, -1137), 0), 100000000, 0, -1136), 0), 100000000, 0, -1135), 0, (("src/bos.mli", 1266, 50225, 50229), ("src/bos.mli", 1266, 50225, 50289), 0), 0, Tag1 ("Bos", 178)), 0); (("to_lines", 1880), ((Tag1 (Tag1 ("trim"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1134)], (0)), 100000000, 0, -1133), (Tag1 (0, (Tag3 ((("run_out", 1872)), 0, (0)), 100000000, 0, -1132), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1128)], (0)), 100000000, 0, -1127); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1131))))], ((("e")), 100000000, 0, -1130), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1129)], (0)), 100000000, 0, -1126), 0), 100000000, 0, -1125), 0), 100000000, 0, -1124), 0, (("src/bos.mli", 1269, 50360, 50364), ("src/bos.mli", 1269, 50360, 50428), 0), 0, Tag1 ("Bos", 179)), 0); (("to_file", 1881), ((Tag1 (Tag1 ("append"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1123)], (0)), 100000000, 0, -1122), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1121), (Tag1 (0, (Tag3 ((("run_out", 1872)), 0, (0)), 100000000, 0, -1120), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1116); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1119))))], ((("e")), 100000000, 0, -1118), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1117)], (0)), 100000000, 0, -1115), 0), 100000000, 0, -1114), 0), 100000000, 0, -1113), 0), 100000000, 0, -1112), 0, (("src/bos.mli", 1272, 50497, 50501), ("src/bos.mli", 1272, 50497, 50570), 0), 0, Tag1 ("Bos", 180)), 0); (("to_null", 1882), ((Tag1 (0, (Tag3 ((("run_out", 1872)), 0, (0)), 100000000, 0, -1111), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1107); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1110))))], ((("e")), 100000000, 0, -1109), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1108)], (0)), 100000000, 0, -1106), 0), 100000000, 0, -1105), 0, (("src/bos.mli", 1275, 50645, 50649), ("src/bos.mli", 1275, 50645, 50691), 0), 0, Tag1 ("Bos", 181)), 0); (("to_stdout", 1883), ((Tag1 (0, (Tag3 ((("run_out", 1872)), 0, (0)), 100000000, 0, -1104), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1100); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1103))))], ((("e")), 100000000, 0, -1102), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1101)], (0)), 100000000, 0, -1099), 0), 100000000, 0, -1098), 0, (("src/bos.mli", 1278, 50742, 50746), ("src/bos.mli", 1278, 50742, 50790), 0), 0, Tag1 ("Bos", 182)), 0); (("run_io", 1884), ((Tag1 (Tag1 ("env"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Env", 1741)), "t"), 0, (0)), 100000000, 0, -1097)], (0)), 100000000, 0, -1096), (Tag1 (Tag1 ("err"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("run_err", 1862)), 0, (0)), 100000000, 0, -1095)], (0)), 100000000, 0, -1094), (Tag1 (0, (Tag3 (Tag1 ((("Cmd", 1699)), "t"), 0, (0)), 100000000, 0, -1093), (Tag1 (0, (Tag3 ((("run_in", 1867)), 0, (0)), 100000000, 0, -1092), (Tag3 ((("run_out", 1872)), 0, (0)), 100000000, 0, -1091), 0), 100000000, 0, -1090), 0), 100000000, 0, -1089), 0), 100000000, 0, -1088), 0), 100000000, 0, -1087), 0, (("src/bos.mli", 1283, 50889, 50893), ("src/bos.mli", 1283, 50889, 50962), 0), 0, Tag1 ("Bos", 183)), 0); (("run_out", 1885), ((Tag1 (Tag1 ("env"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Env", 1741)), "t"), 0, (0)), 100000000, 0, -1086)], (0)), 100000000, 0, -1085), (Tag1 (Tag1 ("err"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("run_err", 1862)), 0, (0)), 100000000, 0, -1084)], (0)), 100000000, 0, -1083), (Tag1 (0, (Tag3 (Tag1 ((("Cmd", 1699)), "t"), 0, (0)), 100000000, 0, -1082), (Tag3 ((("run_out", 1872)), 0, (0)), 100000000, 0, -1081), 0), 100000000, 0, -1080), 0), 100000000, 0, -1079), 0), 100000000, 0, -1078), 0, (("src/bos.mli", 1291, 51368, 51372), ("src/bos.mli", 1291, 51368, 51432), 0), 0, Tag1 ("Bos", 184)), 0); (("run_in", 1886), ((Tag1 (Tag1 ("env"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Env", 1741)), "t"), 0, (0)), 100000000, 0, -1077)], (0)), 100000000, 0, -1076), (Tag1 (Tag1 ("err"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("run_err", 1862)), 0, (0)), 100000000, 0, -1075)], (0)), 100000000, 0, -1074), (Tag1 (0, (Tag3 (Tag1 ((("Cmd", 1699)), "t"), 0, (0)), 100000000, 0, -1073), (Tag1 (0, (Tag3 ((("run_in", 1867)), 0, (0)), 100000000, 0, -1072), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1068); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1071))))], ((("e")), 100000000, 0, -1070), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1069)], (0)), 100000000, 0, -1067), 0), 100000000, 0, -1066), 0), 100000000, 0, -1065), 0), 100000000, 0, -1064), 0), 100000000, 0, -1063), 0, (("src/bos.mli", 1294, 51510, 51514), ("src/bos.mli", 1295, 51576, 51599), 0), 0, Tag1 ("Bos", 185)), 0); (("run", 1887), ((Tag1 (Tag1 ("env"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Env", 1741)), "t"), 0, (0)), 100000000, 0, -1062)], (0)), 100000000, 0, -1061), (Tag1 (Tag1 ("err"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("run_err", 1862)), 0, (0)), 100000000, 0, -1060)], (0)), 100000000, 0, -1059), (Tag1 (0, (Tag3 (Tag1 ((("Cmd", 1699)), "t"), 0, (0)), 100000000, 0, -1058), (Tag3 ((("result", 1740)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1054); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1057))))], ((("e")), 100000000, 0, -1056), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1055)], (0)), 100000000, 0, -1053), 0), 100000000, 0, -1052), 0), 100000000, 0, -1051), 0), 100000000, 0, -1050), 0, (("src/bos.mli", 1298, 51679, 51683), ("src/bos.mli", 1298, 51679, 51749), 0), 0, Tag1 ("Bos", 186)), 0); (("run_status", 1888), ((Tag1 (Tag1 ("env"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Env", 1741)), "t"), 0, (0)), 100000000, 0, -1049)], (0)), 100000000, 0, -1048), (Tag1 (Tag1 ("err"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("run_err", 1862)), 0, (0)), 100000000, 0, -1047)], (0)), 100000000, 0, -1046), (Tag1 (Tag1 ("quiet"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1045)], (0)), 100000000, 0, -1044), (Tag1 (0, (Tag3 (Tag1 ((("Cmd", 1699)), "t"), 0, (0)), 100000000, 0, -1043), (Tag3 ((("result", 1740)), [(Tag3 ((("status", 1856)), 0, (0)), 100000000, 0, -1039); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1042))))], ((("e")), 100000000, 0, -1041), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1040)], (0)), 100000000, 0, -1038), 0), 100000000, 0, -1037), 0), 100000000, 0, -1036), 0), 100000000, 0, -1035), 0), 100000000, 0, -1034), 0, (("src/bos.mli", 1302, 51844, 51848), ("src/bos.mli", 1303, 51919, 51944), 0), 0, Tag1 ("Bos", 187)), 0)]), 0, (("src/bos.mli", 1096, 43371, 43373), ("src/bos.mli", 1342, 53102, 53107), 0), Tag1 ("Bos", 188)), 0, 0); Tag3 (("U", 1747), 0, (Tag1 ([Tag1 (("result", 1889), ([((("a")), 100000000, 0, -1378)], 1, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -1378); (Tag8 (([("Unix", (((Tag3 (Tag1 ((Tag2 ("Unix")), "error"), 0, (0)), 100000000, 0, -1381))))], (0, 100000000, 0, -1380), 1, 0, 0)), 100000000, 0, -1379)], (0)), 100000000, 0, -1377)), [25], [0], 0, 0, (("src/bos.mli", 1357, 53557, 53561), ("src/bos.mli", 1357, 53557, 53619), 0), 0, 0, 0, Tag1 ("Bos", 189)), 1, 0); (("pp_error", 1890), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -1376), (Tag1 (0, (Tag8 (([("Unix", (((Tag3 (Tag1 ((Tag2 ("Unix")), "error"), 0, (0)), 100000000, 0, -1375))))], (0, 100000000, 0, -1374), 1, 0, 0)), 100000000, 0, -1373), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1372), 0), 100000000, 0, -1371), 0), 100000000, 0, -1370), 0, (("src/bos.mli", 1360, 53659, 53663), ("src/bos.mli", 1360, 53659, 53727), 0), 0, Tag1 ("Bos", 190)), 0); (("open_error", 1891), ((Tag1 (0, (Tag3 ((("result", 1889)), [((("a")), 100000000, 0, -1365)], (0)), 100000000, 0, -1369), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -1365); (Tag8 (([("Unix", (((Tag3 (Tag1 ((Tag2 ("Unix")), "error"), 0, (0)), 100000000, 0, -1368))))], ((0), 100000000, 0, -1367), 0, 0, 0)), 100000000, 0, -1366)], (0)), 100000000, 0, -1364), 0), 100000000, 0, -1363), 0, (("src/bos.mli", 1363, 53778, 53782), ("src/bos.mli", 1364, 53799, 53861), 0), 0, Tag1 ("Bos", 191)), 0); (("error_to_msg", 1892), ((Tag1 (0, (Tag3 ((("result", 1889)), [((("a")), 100000000, 0, -1358)], (0)), 100000000, 0, -1362), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -1358); (Tag8 (([("Msg", (((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1361))))], ((0), 100000000, 0, -1360), 0, 0, ([Tag1 (Tag1 ((Tag2 ("Rresult")), "R"), "msg")]))), 100000000, 0, -1359)], (0)), 100000000, 0, -1357), 0), 100000000, 0, -1356), 0, (("src/bos.mli", 1368, 53964, 53968), ("src/bos.mli", 1368, 53964, 54029), 0), 0, Tag1 ("Bos", 192)), 0); (("call", 1893), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -1354), ((("b")), 100000000, 0, -1353), 0), 100000000, 0, -1355), (Tag1 (0, ((("a")), 100000000, 0, -1354), (Tag3 ((("result", 1889)), [((("b")), 100000000, 0, -1353)], (0)), 100000000, 0, -1352), 0), 100000000, 0, -1351), 0), 100000000, 0, -1350), 0, (("src/bos.mli", 1373, 54147, 54151), ("src/bos.mli", 1373, 54147, 54191), 0), 0, Tag1 ("Bos", 193)), 0); (("mkdir", 1894), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1349), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Unix")), "file_perm"), 0, (0)), 100000000, 0, -1348), (Tag3 ((("result", 1889)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1347)], (0)), 100000000, 0, -1346), 0), 100000000, 0, -1345), 0), 100000000, 0, -1344), 0, (("src/bos.mli", 1380, 54426, 54430), ("src/bos.mli", 1380, 54426, 54482), 0), 0, Tag1 ("Bos", 194)), 0); (("link", 1895), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1343), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1342), (Tag3 ((("result", 1889)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1341)], (0)), 100000000, 0, -1340), 0), 100000000, 0, -1339), 0), 100000000, 0, -1338), 0, (("src/bos.mli", 1385, 54630, 54634), ("src/bos.mli", 1385, 54630, 54678), 0), 0, Tag1 ("Bos", 195)), 0); (("unlink", 1896), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1337), (Tag3 ((("result", 1889)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1336)], (0)), 100000000, 0, -1335), 0), 100000000, 0, -1334), 0, (("src/bos.mli", 1390, 54822, 54826), ("src/bos.mli", 1390, 54822, 54861), 0), 0, Tag1 ("Bos", 196)), 0); (("rename", 1897), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1333), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1332), (Tag3 ((("result", 1889)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1331)], (0)), 100000000, 0, -1330), 0), 100000000, 0, -1329), 0), 100000000, 0, -1328), 0, (("src/bos.mli", 1395, 55007, 55011), ("src/bos.mli", 1395, 55007, 55057), 0), 0, Tag1 ("Bos", 197)), 0); (("stat", 1898), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1327), (Tag3 ((("result", 1889)), [(Tag3 (Tag1 ((Tag2 ("Unix")), "stats"), 0, (0)), 100000000, 0, -1326)], (0)), 100000000, 0, -1325), 0), 100000000, 0, -1324), 0, (("src/bos.mli", 1400, 55209, 55213), ("src/bos.mli", 1400, 55209, 55252), 0), 0, Tag1 ("Bos", 198)), 0); (("lstat", 1899), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1323), (Tag3 ((("result", 1889)), [(Tag3 (Tag1 ((Tag2 ("Unix")), "stats"), 0, (0)), 100000000, 0, -1322)], (0)), 100000000, 0, -1321), 0), 100000000, 0, -1320), 0, (("src/bos.mli", 1405, 55396, 55400), ("src/bos.mli", 1405, 55396, 55440), 0), 0, Tag1 ("Bos", 199)), 0); (("truncate", 1900), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Fpath")), "t"), 0, (0)), 100000000, 0, -1319), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1318), (Tag3 ((("result", 1889)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -1317)], (0)), 100000000, 0, -1316), 0), 100000000, 0, -1315), 0), 100000000, 0, -1314), 0, (("src/bos.mli", 1410, 55588, 55592), ("src/bos.mli", 1410, 55588, 55636), 0), 0, Tag1 ("Bos", 200)), 0)]), 0, (("src/bos.mli", 1353, 53508, 53510), ("src/bos.mli", 1414, 55795, 55800), 0), Tag1 ("Bos", 201)), 0, 0)]), 0, (("src/bos.mli", 262, 8893, 8893), ("src/bos.mli", 1415, 55801, 55804), 0), Tag1 ("Bos", 202)), 0, 0)], "Bos", [("Bos", ("1\165eq!\152\025\190\207:\213\016\248w\159C")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Stack", ("M\151\017\159\208\222\164[\025\219g\175\160\242T\229")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Queue", ("E\187(\001]E;(\021\n~\137\191\026\\\152")); ("Stdlib__Printexc", ("\217u\168\235\179oi\167\235\255\025\017%d\192s")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Bytes", ("C\134\194)\175\222\137p\205\246\244\r\241\164P\209")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Rresult", ("\201Z\255iJ\0071xwM\137\148\252<\172u")); ("Logs", ("\225\211\226\007\217\232.\007\207\246Z\146\164\004\234}")); ("Fpath", ("\2346<\134L)\153\241\011\020 \177\220P\180\250")); ("Fmt", ("I\228\239\131\1484\017Q\171\227C\149\246\174\149\247")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Astring", ("J\216\231&\t\206e\203N\221]\225g\024n\192"))], [(0)])

  end
