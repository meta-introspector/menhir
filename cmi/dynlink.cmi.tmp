val is_native : bool
val loadfile : string -> unit
val loadfile_private : string -> unit
val adapt_filename : string -> string
val set_allowed_units : string list -> unit
val allow_only : string list -> unit
val prohibit : string list -> unit
val main_program_units : unit -> string list
val public_dynamically_loaded_units : unit -> string list
val all_units : unit -> string list
val allow_unsafe_modules : bool -> unit
type linking_error = private
    Undefined_global of string
  | Unavailable_primitive of string
  | Uninitialized_global of string
type error = private
    Not_a_bytecode_file of string
  | Inconsistent_import of string
  | Unavailable_unit of string
  | Unsafe_file
  | Linking_error of string * linking_error
  | Corrupted_interface of string
  | Cannot_open_dynamic_library of exn
  | Library's_module_initializers_failed of exn
  | Inconsistent_implementation of string
  | Module_already_loaded of string
  | Private_library_cannot_implement_interface of string
exception Error of error
val error_message : error -> string
("DEBUG:rule", [(("is_native", 340), ((Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -60), 0, (("dynlink.mli", 22, 1327, 1327), ("dynlink.mli", 22, 1327, 1347), 0), 0, Tag1 ("Dynlink", 0)), 0); (("loadfile", 341), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -59), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0, (("dynlink.mli", 28, 1475, 1475), ("dynlink.mli", 28, 1475, 1504), 0), 0, Tag1 ("Dynlink", 1)), 0); (("loadfile_private", 342), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -56), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0, (("dynlink.mli", 49, 2535, 2535), ("dynlink.mli", 49, 2535, 2572), 0), 0, Tag1 ("Dynlink", 2)), 0); (("adapt_filename", 343), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -53), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("dynlink.mli", 71, 3655, 3655), ("dynlink.mli", 71, 3655, 3692), 0), 0, Tag1 ("Dynlink", 3)), 0); (("set_allowed_units", 344), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -50)], (0)), 100000000, 0, -49), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("dynlink.mli", 77, 3825, 3825), ("dynlink.mli", 77, 3825, 3868), 0), 0, Tag1 ("Dynlink", 4)), 0); (("allow_only", 345), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -46)], (0)), 100000000, 0, -45), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("dynlink.mli", 90, 4478, 4478), ("dynlink.mli", 90, 4478, 4513), 0), 0, Tag1 ("Dynlink", 5)), 0); (("prohibit", 346), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -42)], (0)), 100000000, 0, -41), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("dynlink.mli", 95, 4719, 4719), ("dynlink.mli", 95, 4719, 4753), 0), 0, Tag1 ("Dynlink", 6)), 0); (("main_program_units", 347), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -38), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -37)], (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("dynlink.mli", 101, 5037, 5037), ("dynlink.mli", 101, 5037, 5081), 0), 0, Tag1 ("Dynlink", 7)), 0); (("public_dynamically_loaded_units", 348), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -34), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -33)], (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("dynlink.mli", 105, 5193, 5193), ("dynlink.mli", 105, 5193, 5250), 0), 0, Tag1 ("Dynlink", 8)), 0); (("all_units", 349), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -30), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -29)], (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("dynlink.mli", 110, 5455, 5455), ("dynlink.mli", 110, 5455, 5490), 0), 0, Tag1 ("Dynlink", 9)), 0); (("allow_unsafe_modules", 350), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -26), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("dynlink.mli", 115, 5674, 5674), ("dynlink.mli", 115, 5674, 5713), 0), 0, Tag1 ("Dynlink", 10)), 0); Tag1 (("linking_error", 351), (0, 0, Tag1 ([(("Undefined_global", 281), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -21)]), 0, (("dynlink.mli", 126, 6176, 6178), ("dynlink.mli", 126, 6176, 6206), 0), 0, Tag1 ("Dynlink", 12)); (("Unavailable_primitive", 282), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -22)]), 0, (("dynlink.mli", 127, 6207, 6209), ("dynlink.mli", 127, 6207, 6242), 0), 0, Tag1 ("Dynlink", 13)); (("Uninitialized_global", 283), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -23)]), 0, (("dynlink.mli", 128, 6243, 6245), ("dynlink.mli", 128, 6243, 6277), 0), 0, Tag1 ("Dynlink", 14))], 0), 0, 0, 0, 0, 0, 0, (("dynlink.mli", 125, 6147, 6147), ("dynlink.mli", 128, 6243, 6277), 0), 0, 0, 0, Tag1 ("Dynlink", 11)), 1, 0); Tag1 (("error", 352), (0, 0, Tag1 ([(("Not_a_bytecode_file", 285), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10)]), 0, (("dynlink.mli", 131, 6300, 6302), ("dynlink.mli", 131, 6300, 6333), 0), 0, Tag1 ("Dynlink", 16)); (("Inconsistent_import", 286), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11)]), 0, (("dynlink.mli", 132, 6334, 6336), ("dynlink.mli", 132, 6334, 6367), 0), 0, Tag1 ("Dynlink", 17)); (("Unavailable_unit", 287), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -12)]), 0, (("dynlink.mli", 133, 6368, 6370), ("dynlink.mli", 133, 6368, 6398), 0), 0, Tag1 ("Dynlink", 18)); (("Unsafe_file", 288), (0), 0, (("dynlink.mli", 134, 6399, 6401), ("dynlink.mli", 134, 6399, 6414), 0), 0, Tag1 ("Dynlink", 19)); (("Linking_error", 289), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -13); (Tag3 ((("linking_error", 351)), 0, (0)), 100000000, 0, -14)]), 0, (("dynlink.mli", 135, 6415, 6417), ("dynlink.mli", 135, 6415, 6458), 0), 0, Tag1 ("Dynlink", 20)); (("Corrupted_interface", 290), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -15)]), 0, (("dynlink.mli", 136, 6459, 6461), ("dynlink.mli", 136, 6459, 6492), 0), 0, Tag1 ("Dynlink", 21)); (("Cannot_open_dynamic_library", 291), ([(Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -16)]), 0, (("dynlink.mli", 137, 6493, 6495), ("dynlink.mli", 137, 6493, 6531), 0), 0, Tag1 ("Dynlink", 22)); (("Library's_module_initializers_failed", 292), ([(Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -17)]), 0, (("dynlink.mli", 138, 6532, 6534), ("dynlink.mli", 138, 6532, 6579), 0), 0, Tag1 ("Dynlink", 23)); (("Inconsistent_implementation", 293), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -18)]), 0, (("dynlink.mli", 139, 6580, 6582), ("dynlink.mli", 139, 6580, 6621), 0), 0, Tag1 ("Dynlink", 24)); (("Module_already_loaded", 294), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -19)]), 0, (("dynlink.mli", 140, 6622, 6624), ("dynlink.mli", 140, 6622, 6657), 0), 0, Tag1 ("Dynlink", 25)); (("Private_library_cannot_implement_interface", 295), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -20)]), 0, (("dynlink.mli", 141, 6658, 6660), ("dynlink.mli", 141, 6658, 6714), 0), 0, Tag1 ("Dynlink", 26))], 0), 0, 0, 0, 0, 0, 0, (("dynlink.mli", 130, 6279, 6279), ("dynlink.mli", 141, 6658, 6714), 0), 0, 0, 0, Tag1 ("Dynlink", 15)), 1, 0); Tag2 (("Error", 353), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((("error", 352)), 0, (0)), 100000000, 0, -9)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Dynlink", 27)), 2, 0); (("error_message", 354), ((Tag1 (0, (Tag3 ((("error", 352)), 0, (0)), 100000000, 0, -8), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7), 0), 100000000, 0, -6), 0, (("dynlink.mli", 150, 7040, 7040), ("dynlink.mli", 150, 7040, 7075), 0), 0, Tag1 ("Dynlink", 28)), 0); (("unsafe_get_global_value", 355), ((Tag1 (("bytecode_or_asm_symbol"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Obj"), "t"), 0, (0)), 100000000, 0, -4)], (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("dynlink.mli", 155, 7146, 7146), ("dynlink.mli", 155, 7146, 7221), 0), 0, Tag1 ("Dynlink", 29)), 0)], "Dynlink", [("Dynlink", ("\195\162y\r\128\204:\177\142\246\213'\148\132$\127")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val unsafe_get_global_value : bytecode_or_asm_symbol:string -> Obj.t option
