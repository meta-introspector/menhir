module Reason :
  sig
    type t =
        Automaton_in_error_state
      | Comment_token_in_unquoted_atom
      | Unexpected_char_parsing_dec_escape
      | Unexpected_char_parsing_hex_escape
      | Unexpected_character_after_cr
      | Unterminated_block_comment
      | Unterminated_quoted_string
      | Closed_paren_without_opened
      | Escape_sequence_out_of_range
      | No_sexp_found_in_input
      | Sexp_comment_without_sexp
      | Too_many_sexps
      | Unclosed_paren
  end
module type Parse_error =
  sig
    type t
    val sexp_of_t : t -> Sexplib0.Sexp.t
    val position : t -> Parsexp__.Positions.pos
    val message : t -> string
    val report : Format.formatter -> filename:string -> t -> unit
    exception Parse_error of t
    module Private :
      sig
        module Reason = Reason
        val old_parser_exn : t -> [ `Failure | `Parse_error ]
        val raise :
          Reason.t ->
          Parsexp__.Positions.pos ->
          at_eof:bool -> atom_buffer:Buffer.t -> 'a
      end("DEBUG:rule", [Tag3 (("Reason", 653), 0, (Tag1 ([Tag1 (("t", 655), (0, 0, Tag1 ([(("Automaton_in_error_state", 368), (0), 0, (("src/parse_error_intf.ml", 7, 202, 206), ("src/parse_error_intf.ml", 7, 202, 232), 0), 0, Tag1 ("Parsexp__Parse_error_intf", 1)); (("Comment_token_in_unquoted_atom", 369), (0), 0, (("src/parse_error_intf.ml", 8, 233, 237), ("src/parse_error_intf.ml", 8, 233, 269), 0), 0, Tag1 ("Parsexp__Parse_error_intf", 2)); (("Unexpected_char_parsing_dec_escape", 370), (0), 0, (("src/parse_error_intf.ml", 9, 270, 274), ("src/parse_error_intf.ml", 9, 270, 310), 0), 0, Tag1 ("Parsexp__Parse_error_intf", 3)); (("Unexpected_char_parsing_hex_escape", 371), (0), 0, (("src/parse_error_intf.ml", 10, 311, 315), ("src/parse_error_intf.ml", 10, 311, 351), 0), 0, Tag1 ("Parsexp__Parse_error_intf", 4)); (("Unexpected_character_after_cr", 372), (0), 0, (("src/parse_error_intf.ml", 11, 352, 356), ("src/parse_error_intf.ml", 11, 352, 387), 0), 0, Tag1 ("Parsexp__Parse_error_intf", 5)); (("Unterminated_block_comment", 373), (0), 0, (("src/parse_error_intf.ml", 12, 388, 392), ("src/parse_error_intf.ml", 12, 388, 420), 0), 0, Tag1 ("Parsexp__Parse_error_intf", 6)); (("Unterminated_quoted_string", 374), (0), 0, (("src/parse_error_intf.ml", 13, 421, 425), ("src/parse_error_intf.ml", 13, 421, 453), 0), 0, Tag1 ("Parsexp__Parse_error_intf", 7)); (("Closed_paren_without_opened", 375), (0), 0, (("src/parse_error_intf.ml", 15, 464, 468), ("src/parse_error_intf.ml", 15, 464, 497), 0), 0, Tag1 ("Parsexp__Parse_error_intf", 8)); (("Escape_sequence_out_of_range", 376), (0), 0, (("src/parse_error_intf.ml", 16, 498, 502), ("src/parse_error_intf.ml", 16, 498, 532), 0), 0, Tag1 ("Parsexp__Parse_error_intf", 9)); (("No_sexp_found_in_input", 377), (0), 0, (("src/parse_error_intf.ml", 17, 533, 537), ("src/parse_error_intf.ml", 17, 533, 561), 0), 0, Tag1 ("Parsexp__Parse_error_intf", 10)); (("Sexp_comment_without_sexp", 378), (0), 0, (("src/parse_error_intf.ml", 18, 562, 566), ("src/parse_error_intf.ml", 18, 562, 593), 0), 0, Tag1 ("Parsexp__Parse_error_intf", 11)); (("Too_many_sexps", 379), (0), 0, (("src/parse_error_intf.ml", 19, 594, 598), ("src/parse_error_intf.ml", 19, 594, 614), 0), 0, Tag1 ("Parsexp__Parse_error_intf", 12)); (("Unclosed_paren", 380), (0), 0, (("src/parse_error_intf.ml", 20, 615, 619), ("src/parse_error_intf.ml", 20, 615, 635), 0), 0, Tag1 ("Parsexp__Parse_error_intf", 13))], 0), 1, 0, 0, 0, 0, 0, (("src/parse_error_intf.ml", 5, 119, 121), ("src/parse_error_intf.ml", 20, 615, 635), 0), 0, 1, 0, Tag1 ("Parsexp__Parse_error_intf", 0)), 1, 0)]), 0, (("src/parse_error_intf.ml", 3, 14, 14), ("src/parse_error_intf.ml", 21, 636, 639), 0), Tag1 ("Parsexp__Parse_error_intf", 14)), 0, 0); Tag4 (("Parse_error", 654), ((Tag1 ([Tag1 (("t", 656), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/parse_error_intf.ml", 24, 671, 673), ("src/parse_error_intf.ml", 24, 671, 707), 0), [(("deriving_inline", (("src/parse_error_intf.ml", 24, 671, 683), ("src/parse_error_intf.ml", 24, 671, 698), 0)), ([([(((("sexp_of"), (("src/parse_error_intf.ml", 24, 671, 699), ("src/parse_error_intf.ml", 24, 671, 706), 0))), (("src/parse_error_intf.ml", 24, 671, 699), ("src/parse_error_intf.ml", 24, 671, 706), 0), 0, 0)], (("src/parse_error_intf.ml", 24, 671, 699), ("src/parse_error_intf.ml", 24, 671, 706), 0))]), (("src/parse_error_intf.ml", 24, 671, 680), ("src/parse_error_intf.ml", 24, 671, 707), 0))], 0, 0, Tag1 ("Parsexp__Parse_error_intf", 15)), 1, 0); (("sexp_of_t", 657), ((Tag1 (0, (Tag3 ((("t", 656)), 0, (0)), 100000000, 0, -18), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("src/parse_error_intf.ml", 29, 753, 757), ("src/parse_error_intf.ml", 29, 753, 793), 0), 0, Tag1 ("Parsexp__Parse_error_intf", 16)), 0); (("position", 658), ((Tag1 (0, (Tag3 ((("t", 656)), 0, (0)), 100000000, 0, -15), (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("src/parse_error_intf.ml", 35, 839, 841), ("src/parse_error_intf.ml", 35, 839, 874), 0), 0, Tag1 ("Parsexp__Parse_error_intf", 17)), 0); (("message", 659), ((Tag1 (0, (Tag3 ((("t", 656)), 0, (0)), 100000000, 0, -12), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("src/parse_error_intf.ml", 36, 875, 877), ("src/parse_error_intf.ml", 36, 875, 902), 0), 0, Tag1 ("Parsexp__Parse_error_intf", 18)), 0); (("report", 660), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -9), (Tag1 (("filename"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8), (Tag1 (0, (Tag3 ((("t", 656)), 0, (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0, (("src/parse_error_intf.ml", 44, 1092, 1094), ("src/parse_error_intf.ml", 44, 1092, 1155), 0), 0, Tag1 ("Parsexp__Parse_error_intf", 19)), 0); Tag2 (("Parse_error", 661), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((("t", 656)), 0, (0)), 100000000, 0, -2)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Parsexp__Parse_error_intf", 20)), 2, 0); Tag3 (("Private", 662), 0, (Tag1 ([Tag3 (("Reason", 663), 1, (Tag3 ((("Reason", 653))), 0, (("src/parse_error_intf.ml", 51, 1221, 1225), ("src/parse_error_intf.ml", 51, 1221, 1247), 0), Tag1 ("Parsexp__Parse_error_intf", 21)), 0, 0); (("old_parser_exn", 664), ((Tag1 (0, (Tag3 ((("t", 656)), 0, (0)), 100000000, 0, -31), (Tag8 (([("Failure", (0)); ("Parse_error", (0))], (0, 100000000, 0, -30), 1, 0, 0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("src/parse_error_intf.ml", 55, 1372, 1376), ("src/parse_error_intf.ml", 55, 1372, 1429), 0), 0, Tag1 ("Parsexp__Parse_error_intf", 22)), 0); (("raise", 665), ((Tag1 (0, (Tag3 (Tag1 ((("Reason", 663)), "t"), 0, (0)), 100000000, 0, -27), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Parsexp__")), "Positions"), "pos"), 0, (0)), 100000000, 0, -26), (Tag1 (("at_eof"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -25), (Tag1 (("atom_buffer"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Buffer"), "t"), 0, (0)), 100000000, 0, -24), ((("a")), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("src/parse_error_intf.ml", 57, 1431, 1435), ("src/parse_error_intf.ml", 57, 1431, 1517), 0), 0, Tag1 ("Parsexp__Parse_error_intf", 23)), 0)]), 0, (("src/parse_error_intf.ml", 50, 1198, 1200), ("src/parse_error_intf.ml", 58, 1518, 1523), 0), Tag1 ("Parsexp__Parse_error_intf", 24)), 0, 0)])), 0, (("src/parse_error_intf.ml", 23, 641, 641), ("src/parse_error_intf.ml", 59, 1524, 1527), 0), Tag1 ("Parsexp__Parse_error_intf", 25)), 0)], "Parsexp__Parse_error_intf", [("Parsexp__Parse_error_intf", ("\011\229\182\179W\161\176\160P\249\165\214ef\011\229")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("Parsexp__Positions", ("BE\135\222xW\224\233\184\004o\169\248\bH\230")); ("Parsexp__Import", ("\017\029\157\225\239\135p*0\207\146\197\020\128\195!")); ("Parsexp__", ("\182\180\203\030\218\020\246\196\221\171_\030GE\171\192")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

  end
