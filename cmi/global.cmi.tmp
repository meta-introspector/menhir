val safe_env : unit -> Safe_typing.safe_environment
val env : unit -> Environ.env
val universes : unit -> UGraph.t
val universes_lbound : unit -> UGraph.Bound.t
val named_context_val : unit -> Environ.named_context_val
val named_context : unit -> Constr.named_context
val set_impredicative_set : bool -> unit
val set_indices_matter : bool -> unit
val set_typing_flags : Declarations.typing_flags -> unit
val set_check_guarded : bool -> unit
val set_check_positive : bool -> unit
val set_check_universes : bool -> unit
val typing_flags : unit -> Declarations.typing_flags
val set_allow_sprop : bool -> unit
val sprop_allowed : unit -> bool
val push_named_assum : Names.Id.t * Constr.types -> unit
val push_named_def : Names.Id.t * Entries.section_def_entry -> unit
val push_section_context : Univ.UContext.t -> unit
val export_private_constants :
  Safe_typing.private_constants -> Safe_typing.exported_private_constant list
val add_constant :
  ?typing_flags:Declarations.typing_flags ->
  Names.Id.t -> Safe_typing.global_declaration -> Names.Constant.t
val fill_opaque : Safe_typing.opaque_certificate -> unit
val add_private_constant :
  Names.Id.t ->
  Univ.ContextSet.t ->
  Safe_typing.side_effect_declaration ->
  Names.Constant.t * Safe_typing.private_constants
val add_mind :
  ?typing_flags:Declarations.typing_flags ->
  Names.Id.t -> Entries.mutual_inductive_entry -> Names.MutInd.t
val add_constraints : Univ.Constraints.t -> unit
val push_context_set : strict:bool -> Univ.ContextSet.t -> unit
val add_module :
  Names.Id.t ->
  Entries.module_entry ->
  Declarations.inline -> Names.ModPath.t * Mod_subst.delta_resolver
val add_modtype :
  Names.Id.t ->
  Entries.module_type_entry -> Declarations.inline -> Names.ModPath.t
val add_include :
  Entries.module_struct_entry ->
  bool -> Declarations.inline -> Mod_subst.delta_resolver
val open_section : unit -> unit
val close_section : Summary.Interp.frozen -> unit
val sections_are_opened : unit -> bool
val start_module : Names.Id.t -> Names.ModPath.t
val start_modtype : Names.Id.t -> Names.ModPath.t
val end_module :
  Summary.Interp.frozen ->
  Names.Id.t ->
  (Entries.module_struct_entry * Declarations.inline) option ->
  Names.ModPath.t * Names.MBId.t list * Mod_subst.delta_resolver
val end_modtype :
  Summary.Interp.frozen -> Names.Id.t -> Names.ModPath.t * Names.MBId.t list
val add_module_parameter :
  Names.MBId.t ->
  Entries.module_struct_entry ->
  Declarations.inline -> Mod_subst.delta_resolver
val lookup_named : Names.variable -> Constr.named_declaration
val lookup_constant : Names.Constant.t -> Declarations.constant_body
val lookup_inductive :
  Names.inductive ->
  Declarations.mutual_inductive_body * Declarations.one_inductive_body
val lookup_pinductive :
  Constr.pinductive ->
  Declarations.mutual_inductive_body * Declarations.one_inductive_body
val lookup_mind : Names.MutInd.t -> Declarations.mutual_inductive_body
val lookup_module : Names.ModPath.t -> Declarations.module_body
val lookup_modtype : Names.ModPath.t -> Declarations.module_type_body
val exists_objlabel : Names.Label.t -> bool
val constant_of_delta_kn : Names.KerName.t -> Names.Constant.t
val mind_of_delta_kn : Names.KerName.t -> Names.MutInd.t
type indirect_accessor = {
  access_proof :
    Opaqueproof.opaque ->
    (Constr.t * unit Opaqueproof.delayed_universes) option;
}
val force_proof :
  indirect_accessor ->
  Opaqueproof.opaque -> Constr.t * unit Opaqueproof.delayed_universes
val body_of_constant :
  indirect_accessor ->
  Names.Constant.t ->
  (Constr.constr * unit Opaqueproof.delayed_universes *
   Univ.AbstractContext.t)
  option
val body_of_constant_body :
  indirect_accessor ->
  Declarations.constant_body ->
  (Constr.constr * unit Opaqueproof.delayed_universes *
   Univ.AbstractContext.t)
  option
val start_library : Names.DirPath.t -> Names.ModPath.t
val export :
  output_native_objects:bool ->
  Names.DirPath.t ->
  Names.ModPath.t * Safe_typing.compiled_library * Nativelib.native_library
val import :
  Safe_typing.compiled_library ->
  Univ.ContextSet.t -> Safe_typing.vodigest -> Names.ModPath.t
val env_of_context : Environ.named_context_val -> Environ.env
val is_joined_environment : unit -> bool
val is_polymorphic : Names.GlobRef.t -> bool
val is_template_polymorphic : Names.GlobRef.t -> bool
val get_template_polymorphic_variables : Names.GlobRef.t -> Univ.Level.t list
val is_type_in_type : Names.GlobRef.t -> bool
val register_inline : Names.Constant.t -> unit
val register_inductive : Names.inductive -> 'a CPrimitives.prim_ind -> unit
val set_strategy :
  Names.Constant.t Names.tableKey -> Conv_oracle.level -> unit
val set_share_reduction : bool -> unit
val set_VM : bool -> unit
val set_native_compiler : bool -> unit
val current_modpath : unit -> Names.ModPath.t
val current_dirpath : unit -> Names.DirPath.t
val with_global :
  (Environ.env -> Names.DirPath.t -> 'a Univ.in_universe_context_set) -> 'a
("DEBUG:rule", [(("safe_env", 1316), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -311), (Tag3 (Tag1 ((Tag2 ("Safe_typing")), "safe_environment"), 0, (0)), 100000000, 0, -310), 0), 100000000, 0, -309), 0, (("library/global.mli", 20, 1013, 1013), ("library/global.mli", 20, 1013, 1064), 0), 0, Tag1 ("Global", 0)), 0); (("env", 1317), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -308), (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -307), 0), 100000000, 0, -306), 0, (("library/global.mli", 21, 1065, 1065), ("library/global.mli", 21, 1065, 1094), 0), 0, Tag1 ("Global", 1)), 0); (("universes", 1318), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -305), (Tag3 (Tag1 ((Tag2 ("UGraph")), "t"), 0, (0)), 100000000, 0, -304), 0), 100000000, 0, -303), 0, (("library/global.mli", 23, 1096, 1096), ("library/global.mli", 23, 1096, 1128), 0), 0, Tag1 ("Global", 2)), 0); (("universes_lbound", 1319), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -302), (Tag3 (Tag1 (Tag1 ((Tag2 ("UGraph")), "Bound"), "t"), 0, (0)), 100000000, 0, -301), 0), 100000000, 0, -300), 0, (("library/global.mli", 24, 1129, 1129), ("library/global.mli", 24, 1129, 1174), 0), 0, Tag1 ("Global", 3)), 0); (("named_context_val", 1320), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -299), (Tag3 (Tag1 ((Tag2 ("Environ")), "named_context_val"), 0, (0)), 100000000, 0, -298), 0), 100000000, 0, -297), 0, (("library/global.mli", 25, 1175, 1175), ("library/global.mli", 25, 1175, 1232), 0), 0, Tag1 ("Global", 4)), 0); (("named_context", 1321), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -296), (Tag3 (Tag1 ((Tag2 ("Constr")), "named_context"), 0, (0)), 100000000, 0, -295), 0), 100000000, 0, -294), 0, (("library/global.mli", 26, 1233, 1233), ("library/global.mli", 26, 1233, 1281), 0), 0, Tag1 ("Global", 6)), 0); (("set_impredicative_set", 1322), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -293), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -292), 0), 100000000, 0, -291), 0, (("library/global.mli", 31, 1381, 1381), ("library/global.mli", 31, 1381, 1421), 0), 0, Tag1 ("Global", 7)), 0); (("set_indices_matter", 1323), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -290), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -289), 0), 100000000, 0, -288), 0, (("library/global.mli", 33, 1423, 1423), ("library/global.mli", 33, 1423, 1460), 0), 0, Tag1 ("Global", 8)), 0); (("set_typing_flags", 1324), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "typing_flags"), 0, (0)), 100000000, 0, -287), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -286), 0), 100000000, 0, -285), 0, (("library/global.mli", 34, 1461, 1461), ("library/global.mli", 34, 1461, 1504), 0), 0, Tag1 ("Global", 9)), 0); (("set_check_guarded", 1325), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -284), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -283), 0), 100000000, 0, -282), 0, (("library/global.mli", 35, 1505, 1505), ("library/global.mli", 35, 1505, 1541), 0), 0, Tag1 ("Global", 10)), 0); (("set_check_positive", 1326), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -281), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -280), 0), 100000000, 0, -279), 0, (("library/global.mli", 36, 1542, 1542), ("library/global.mli", 36, 1542, 1579), 0), 0, Tag1 ("Global", 11)), 0); (("set_check_universes", 1327), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -278), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -277), 0), 100000000, 0, -276), 0, (("library/global.mli", 37, 1580, 1580), ("library/global.mli", 37, 1580, 1618), 0), 0, Tag1 ("Global", 12)), 0); (("typing_flags", 1328), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -275), (Tag3 (Tag1 ((Tag2 ("Declarations")), "typing_flags"), 0, (0)), 100000000, 0, -274), 0), 100000000, 0, -273), 0, (("library/global.mli", 38, 1619, 1619), ("library/global.mli", 38, 1619, 1658), 0), 0, Tag1 ("Global", 13)), 0); (("set_allow_sprop", 1329), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -272), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -271), 0), 100000000, 0, -270), 0, (("library/global.mli", 39, 1659, 1659), ("library/global.mli", 39, 1659, 1693), 0), 0, Tag1 ("Global", 14)), 0); (("sprop_allowed", 1330), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -269), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -268), 0), 100000000, 0, -267), 0, (("library/global.mli", 40, 1694, 1694), ("library/global.mli", 40, 1694, 1726), 0), 0, Tag1 ("Global", 15)), 0); (("push_named_assum", 1331), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -265); (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -266)]), 100000000, 0, -264), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -263), 0), 100000000, 0, -262), 0, (("library/global.mli", 44, 1793, 1793), ("library/global.mli", 44, 1793, 1845), 0), 0, Tag1 ("Global", 16)), 0); (("push_named_def", 1332), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -260); (Tag3 (Tag1 ((Tag2 ("Entries")), "section_def_entry"), 0, (0)), 100000000, 0, -261)]), 100000000, 0, -259), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -258), 0), 100000000, 0, -257), 0, (("library/global.mli", 45, 1846, 1846), ("library/global.mli", 45, 1846, 1911), 0), 0, Tag1 ("Global", 17)), 0); (("push_section_context", 1333), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "UContext"), "t"), 0, (0)), 100000000, 0, -256), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -255), 0), 100000000, 0, -254), 0, (("library/global.mli", 46, 1912, 1912), ("library/global.mli", 46, 1912, 1962), 0), 0, Tag1 ("Global", 18)), 0); (("export_private_constants", 1334), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Safe_typing")), "private_constants"), 0, (0)), 100000000, 0, -253), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Safe_typing")), "exported_private_constant"), 0, (0)), 100000000, 0, -252)], (0)), 100000000, 0, -251), 0), 100000000, 0, -250), 0, (("library/global.mli", 48, 1964, 1964), ("library/global.mli", 50, 2030, 2074), 0), 0, Tag1 ("Global", 19)), 0); (("add_constant", 1335), ((Tag1 (Tag1 ("typing_flags"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Declarations")), "typing_flags"), 0, (0)), 100000000, 0, -249)], (0)), 100000000, 0, -248), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -247), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Safe_typing")), "global_declaration"), 0, (0)), 100000000, 0, -246), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -245), 0), 100000000, 0, -244), 0), 100000000, 0, -243), 0), 100000000, 0, -242), 0, (("library/global.mli", 52, 2076, 2076), ("library/global.mli", 54, 2127, 2181), 0), 0, Tag1 ("Global", 20)), 0); (("fill_opaque", 1336), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Safe_typing")), "opaque_certificate"), 0, (0)), 100000000, 0, -241), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -240), 0), 100000000, 0, -239), 0, (("library/global.mli", 55, 2182, 2182), ("library/global.mli", 55, 2182, 2238), 0), 0, Tag1 ("Global", 21)), 0); (("add_private_constant", 1337), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -238), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "ContextSet"), "t"), 0, (0)), 100000000, 0, -237), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Safe_typing")), "side_effect_declaration"), 0, (0)), 100000000, 0, -236), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -234); (Tag3 (Tag1 ((Tag2 ("Safe_typing")), "private_constants"), 0, (0)), 100000000, 0, -235)]), 100000000, 0, -233), 0), 100000000, 0, -232), 0), 100000000, 0, -231), 0), 100000000, 0, -230), 0, (("library/global.mli", 56, 2239, 2239), ("library/global.mli", 57, 2266, 2378), 0), 0, Tag1 ("Global", 22)), 0); (("add_mind", 1338), ((Tag1 (Tag1 ("typing_flags"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Declarations")), "typing_flags"), 0, (0)), 100000000, 0, -229)], (0)), 100000000, 0, -228), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -227), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Entries")), "mutual_inductive_entry"), 0, (0)), 100000000, 0, -226), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MutInd"), "t"), 0, (0)), 100000000, 0, -225), 0), 100000000, 0, -224), 0), 100000000, 0, -223), 0), 100000000, 0, -222), 0, (("library/global.mli", 58, 2379, 2379), ("library/global.mli", 60, 2426, 2478), 0), 0, Tag1 ("Global", 23)), 0); (("add_constraints", 1339), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Constraints"), "t"), 0, (0)), 100000000, 0, -221), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -220), 0), 100000000, 0, -219), 0, (("library/global.mli", 63, 2514, 2514), ("library/global.mli", 63, 2514, 2562), 0), 0, Tag1 ("Global", 24)), 0); (("push_context_set", 1340), ((Tag1 (("strict"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -218), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "ContextSet"), "t"), 0, (0)), 100000000, 0, -217), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -216), 0), 100000000, 0, -215), 0), 100000000, 0, -214), 0, (("library/global.mli", 65, 2564, 2564), ("library/global.mli", 65, 2564, 2627), 0), 0, Tag1 ("Global", 25)), 0); (("add_module", 1341), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -213), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Entries")), "module_entry"), 0, (0)), 100000000, 0, -212), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "inline"), 0, (0)), 100000000, 0, -211), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -209); (Tag3 (Tag1 ((Tag2 ("Mod_subst")), "delta_resolver"), 0, (0)), 100000000, 0, -210)]), 100000000, 0, -208), 0), 100000000, 0, -207), 0), 100000000, 0, -206), 0), 100000000, 0, -205), 0, (("library/global.mli", 69, 2678, 2678), ("library/global.mli", 71, 2739, 2779), 0), 0, Tag1 ("Global", 26)), 0); (("add_modtype", 1342), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -204), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Entries")), "module_type_entry"), 0, (0)), 100000000, 0, -203), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "inline"), 0, (0)), 100000000, 0, -202), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -201), 0), 100000000, 0, -200), 0), 100000000, 0, -199), 0), 100000000, 0, -198), 0, (("library/global.mli", 72, 2780, 2780), ("library/global.mli", 73, 2798, 2856), 0), 0, Tag1 ("Global", 27)), 0); (("add_include", 1343), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Entries")), "module_struct_entry"), 0, (0)), 100000000, 0, -197), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -196), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "inline"), 0, (0)), 100000000, 0, -195), (Tag3 (Tag1 ((Tag2 ("Mod_subst")), "delta_resolver"), 0, (0)), 100000000, 0, -194), 0), 100000000, 0, -193), 0), 100000000, 0, -192), 0), 100000000, 0, -191), 0, (("library/global.mli", 74, 2857, 2857), ("library/global.mli", 76, 2926, 2954), 0), 0, Tag1 ("Global", 28)), 0); (("open_section", 1344), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -190), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -189), 0), 100000000, 0, -188), 0, (("library/global.mli", 80, 2973, 2973), ("library/global.mli", 80, 2973, 3004), 0), 0, Tag1 ("Global", 29)), 0); (("close_section", 1345), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Summary")), "Interp"), "frozen"), 0, (0)), 100000000, 0, -187), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -186), 0), 100000000, 0, -185), 0, (("library/global.mli", 83, 3076, 3076), ("library/global.mli", 83, 3076, 3125), 0), 0, Tag1 ("Global", 30)), 0); (("sections_are_opened", 1346), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -184), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -183), 0), 100000000, 0, -182), 0, (("library/global.mli", 87, 3236, 3236), ("library/global.mli", 87, 3236, 3274), 0), 0, Tag1 ("Global", 31)), 0); (("start_module", 1347), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -181), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -180), 0), 100000000, 0, -179), 0, (("library/global.mli", 91, 3321, 3321), ("library/global.mli", 91, 3321, 3357), 0), 0, Tag1 ("Global", 32)), 0); (("start_modtype", 1348), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -178), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -177), 0), 100000000, 0, -176), 0, (("library/global.mli", 92, 3358, 3358), ("library/global.mli", 92, 3358, 3395), 0), 0, Tag1 ("Global", 33)), 0); (("end_module", 1349), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Summary")), "Interp"), "frozen"), 0, (0)), 100000000, 0, -175), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -174), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Entries")), "module_struct_entry"), 0, (0)), 100000000, 0, -172); (Tag3 (Tag1 ((Tag2 ("Declarations")), "inline"), 0, (0)), 100000000, 0, -173)]), 100000000, 0, -171)], (0)), 100000000, 0, -170), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -166); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MBId"), "t"), 0, (0)), 100000000, 0, -168)], (0)), 100000000, 0, -167); (Tag3 (Tag1 ((Tag2 ("Mod_subst")), "delta_resolver"), 0, (0)), 100000000, 0, -169)]), 100000000, 0, -165), 0), 100000000, 0, -164), 0), 100000000, 0, -163), 0), 100000000, 0, -162), 0, (("library/global.mli", 94, 3397, 3397), ("library/global.mli", 96, 3498, 3552), 0), 0, Tag1 ("Global", 34)), 0); (("end_modtype", 1350), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Summary")), "Interp"), "frozen"), 0, (0)), 100000000, 0, -161), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -160), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -157); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MBId"), "t"), 0, (0)), 100000000, 0, -159)], (0)), 100000000, 0, -158)]), 100000000, 0, -156), 0), 100000000, 0, -155), 0), 100000000, 0, -154), 0, (("library/global.mli", 98, 3554, 3554), ("library/global.mli", 98, 3554, 3628), 0), 0, Tag1 ("Global", 35)), 0); (("add_module_parameter", 1351), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MBId"), "t"), 0, (0)), 100000000, 0, -153), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Entries")), "module_struct_entry"), 0, (0)), 100000000, 0, -152), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "inline"), 0, (0)), 100000000, 0, -151), (Tag3 (Tag1 ((Tag2 ("Mod_subst")), "delta_resolver"), 0, (0)), 100000000, 0, -150), 0), 100000000, 0, -149), 0), 100000000, 0, -148), 0), 100000000, 0, -147), 0, (("library/global.mli", 100, 3630, 3630), ("library/global.mli", 102, 3710, 3738), 0), 0, Tag1 ("Global", 36)), 0); (("lookup_named", 1352), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "variable"), 0, (0)), 100000000, 0, -146), (Tag3 (Tag1 ((Tag2 ("Constr")), "named_declaration"), 0, (0)), 100000000, 0, -145), 0), 100000000, 0, -144), 0, (("library/global.mli", 106, 3787, 3787), ("library/global.mli", 106, 3787, 3846), 0), 0, Tag1 ("Global", 37)), 0); (("lookup_constant", 1353), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -143), (Tag3 (Tag1 ((Tag2 ("Declarations")), "constant_body"), 0, (0)), 100000000, 0, -142), 0), 100000000, 0, -141), 0, (("library/global.mli", 107, 3847, 3847), ("library/global.mli", 107, 3847, 3897), 0), 0, Tag1 ("Global", 38)), 0); (("lookup_inductive", 1354), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -140), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Declarations")), "mutual_inductive_body"), 0, (0)), 100000000, 0, -138); (Tag3 (Tag1 ((Tag2 ("Declarations")), "one_inductive_body"), 0, (0)), 100000000, 0, -139)]), 100000000, 0, -137), 0), 100000000, 0, -136), 0, (("library/global.mli", 108, 3898, 3898), ("library/global.mli", 109, 3934, 3978), 0), 0, Tag1 ("Global", 39)), 0); (("lookup_pinductive", 1355), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pinductive"), 0, (0)), 100000000, 0, -135), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Declarations")), "mutual_inductive_body"), 0, (0)), 100000000, 0, -133); (Tag3 (Tag1 ((Tag2 ("Declarations")), "one_inductive_body"), 0, (0)), 100000000, 0, -134)]), 100000000, 0, -132), 0), 100000000, 0, -131), 0, (("library/global.mli", 110, 3979, 3979), ("library/global.mli", 111, 4024, 4068), 0), 0, Tag1 ("Global", 40)), 0); (("lookup_mind", 1356), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MutInd"), "t"), 0, (0)), 100000000, 0, -130), (Tag3 (Tag1 ((Tag2 ("Declarations")), "mutual_inductive_body"), 0, (0)), 100000000, 0, -129), 0), 100000000, 0, -128), 0, (("library/global.mli", 112, 4069, 4069), ("library/global.mli", 112, 4069, 4125), 0), 0, Tag1 ("Global", 41)), 0); (("lookup_module", 1357), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -127), (Tag3 (Tag1 ((Tag2 ("Declarations")), "module_body"), 0, (0)), 100000000, 0, -126), 0), 100000000, 0, -125), 0, (("library/global.mli", 113, 4126, 4126), ("library/global.mli", 113, 4126, 4173), 0), 0, Tag1 ("Global", 42)), 0); (("lookup_modtype", 1358), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -124), (Tag3 (Tag1 ((Tag2 ("Declarations")), "module_type_body"), 0, (0)), 100000000, 0, -123), 0), 100000000, 0, -122), 0, (("library/global.mli", 114, 4174, 4174), ("library/global.mli", 114, 4174, 4226), 0), 0, Tag1 ("Global", 43)), 0); (("exists_objlabel", 1359), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Label"), "t"), 0, (0)), 100000000, 0, -121), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -120), 0), 100000000, 0, -119), 0, (("library/global.mli", 115, 4227, 4227), ("library/global.mli", 115, 4227, 4265), 0), 0, Tag1 ("Global", 44)), 0); (("constant_of_delta_kn", 1360), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -118), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -117), 0), 100000000, 0, -116), 0, (("library/global.mli", 117, 4267, 4267), ("library/global.mli", 117, 4267, 4317), 0), 0, Tag1 ("Global", 45)), 0); (("mind_of_delta_kn", 1361), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -115), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "MutInd"), "t"), 0, (0)), 100000000, 0, -114), 0), 100000000, 0, -113), 0, (("library/global.mli", 118, 4318, 4318), ("library/global.mli", 118, 4318, 4362), 0), 0, Tag1 ("Global", 46)), 0); Tag1 (("indirect_accessor", 1362), (0, 0, [[(("access_proof", 1172), 0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Opaqueproof")), "opaque"), 0, (0)), 100000000, 0, -112), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Constr")), "t"), 0, (0)), 100000000, 0, -109); (Tag3 (Tag1 ((Tag2 ("Opaqueproof")), "delayed_universes"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -111)], (0)), 100000000, 0, -110)]), 100000000, 0, -108)], (0)), 100000000, 0, -107), 0), 100000000, 0, -106), (("library/global.mli", 121, 4391, 4393), ("library/global.mli", 121, 4391, 4485), 0), 0, Tag1 ("Global", 48))]], 1, 0, 0, 0, 0, 0, (("library/global.mli", 120, 4364, 4364), ("library/global.mli", 122, 4486, 4487), 0), 0, 0, 1, Tag1 ("Global", 47)), 1, 0); (("force_proof", 1363), ((Tag1 (0, (Tag3 ((("indirect_accessor", 1362)), 0, (0)), 100000000, 0, -105), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Opaqueproof")), "opaque"), 0, (0)), 100000000, 0, -104), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Constr")), "t"), 0, (0)), 100000000, 0, -101); (Tag3 (Tag1 ((Tag2 ("Opaqueproof")), "delayed_universes"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -103)], (0)), 100000000, 0, -102)]), 100000000, 0, -100), 0), 100000000, 0, -99), 0), 100000000, 0, -98), 0, (("library/global.mli", 124, 4489, 4489), ("library/global.mli", 124, 4489, 4595), 0), 0, Tag1 ("Global", 49)), 0); (("body_of_constant", 1364), ((Tag1 (0, (Tag3 ((("indirect_accessor", 1362)), 0, (0)), 100000000, 0, -97), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -96), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -92); (Tag3 (Tag1 ((Tag2 ("Opaqueproof")), "delayed_universes"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -94)], (0)), 100000000, 0, -93); (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "AbstractContext"), "t"), 0, (0)), 100000000, 0, -95)]), 100000000, 0, -91)], (0)), 100000000, 0, -90), 0), 100000000, 0, -89), 0), 100000000, 0, -88), 0, (("library/global.mli", 126, 4597, 4597), ("library/global.mli", 127, 4655, 4741), 0), 0, Tag1 ("Global", 50)), 0); (("body_of_constant_body", 1365), ((Tag1 (0, (Tag3 ((("indirect_accessor", 1362)), 0, (0)), 100000000, 0, -87), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "constant_body"), 0, (0)), 100000000, 0, -86), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -82); (Tag3 (Tag1 ((Tag2 ("Opaqueproof")), "delayed_universes"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -84)], (0)), 100000000, 0, -83); (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "AbstractContext"), "t"), 0, (0)), 100000000, 0, -85)]), 100000000, 0, -81)], (0)), 100000000, 0, -80), 0), 100000000, 0, -79), 0), 100000000, 0, -78), 0, (("library/global.mli", 133, 5006, 5006), ("library/global.mli", 135, 5074, 5162), 0), 0, Tag1 ("Global", 51)), 0); (("start_library", 1366), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -77), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -76), 0), 100000000, 0, -75), 0, (("library/global.mli", 140, 5256, 5256), ("library/global.mli", 140, 5256, 5298), 0), 0, Tag1 ("Global", 52)), 0); (("export", 1367), ((Tag1 (("output_native_objects"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -74), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -73), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -70); (Tag3 (Tag1 ((Tag2 ("Safe_typing")), "compiled_library"), 0, (0)), 100000000, 0, -71); (Tag3 (Tag1 ((Tag2 ("Nativelib")), "native_library"), 0, (0)), 100000000, 0, -72)]), 100000000, 0, -69), 0), 100000000, 0, -68), 0), 100000000, 0, -67), 0, (("library/global.mli", 141, 5299, 5299), ("library/global.mli", 142, 5355, 5424), 0), 0, Tag1 ("Global", 53)), 0); (("import", 1368), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Safe_typing")), "compiled_library"), 0, (0)), 100000000, 0, -66), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "ContextSet"), "t"), 0, (0)), 100000000, 0, -65), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Safe_typing")), "vodigest"), 0, (0)), 100000000, 0, -64), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -63), 0), 100000000, 0, -62), 0), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("library/global.mli", 143, 5425, 5425), ("library/global.mli", 145, 5517, 5528), 0), 0, Tag1 ("Global", 54)), 0); (("env_of_context", 1369), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "named_context_val"), 0, (0)), 100000000, 0, -59), (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0, (("library/global.mli", 152, 5661, 5661), ("library/global.mli", 152, 5661, 5722), 0), 0, Tag1 ("Global", 55)), 0); (("is_joined_environment", 1370), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -56), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0, (("library/global.mli", 154, 5724, 5724), ("library/global.mli", 154, 5724, 5764), 0), 0, Tag1 ("Global", 56)), 0); (("is_polymorphic", 1371), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -53), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("library/global.mli", 156, 5766, 5766), ("library/global.mli", 156, 5766, 5804), 0), 0, Tag1 ("Global", 57)), 0); (("is_template_polymorphic", 1372), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -50), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("library/global.mli", 157, 5805, 5805), ("library/global.mli", 157, 5805, 5852), 0), 0, Tag1 ("Global", 58)), 0); (("get_template_polymorphic_variables", 1373), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -47), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Level"), "t"), 0, (0)), 100000000, 0, -46)], (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("library/global.mli", 158, 5853, 5853), ("library/global.mli", 158, 5853, 5924), 0), 0, Tag1 ("Global", 59)), 0); (("is_type_in_type", 1374), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -43), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("library/global.mli", 159, 5925, 5925), ("library/global.mli", 159, 5925, 5964), 0), 0, Tag1 ("Global", 60)), 0); (("register_inline", 1375), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -40), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("library/global.mli", 163, 5994, 5994), ("library/global.mli", 163, 5994, 6034), 0), 0, Tag1 ("Global", 61)), 0); (("register_inductive", 1376), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -37), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("CPrimitives")), "prim_ind"), [((("a")), 100000000, 0, -36)], (0)), 100000000, 0, -35), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -34), 0), 100000000, 0, -33), 0), 100000000, 0, -32), 0, (("library/global.mli", 164, 6035, 6035), ("library/global.mli", 164, 6035, 6104), 0), 0, Tag1 ("Global", 62)), 0); (("set_strategy", 1377), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "tableKey"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -31)], (0)), 100000000, 0, -30), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Conv_oracle")), "level"), 0, (0)), 100000000, 0, -29), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("library/global.mli", 168, 6126, 6126), ("library/global.mli", 168, 6126, 6199), 0), 0, Tag1 ("Global", 63)), 0); (("set_share_reduction", 1378), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -25), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("library/global.mli", 172, 6234, 6234), ("library/global.mli", 172, 6234, 6272), 0), 0, Tag1 ("Global", 64)), 0); (("set_VM", 1379), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -22), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("library/global.mli", 174, 6274, 6274), ("library/global.mli", 174, 6274, 6299), 0), 0, Tag1 ("Global", 65)), 0); (("set_native_compiler", 1380), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -19), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("library/global.mli", 175, 6300, 6300), ("library/global.mli", 175, 6300, 6338), 0), 0, Tag1 ("Global", 66)), 0); (("current_modpath", 1381), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -16), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "ModPath"), "t"), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("library/global.mli", 179, 6400, 6400), ("library/global.mli", 179, 6400, 6439), 0), 0, Tag1 ("Global", 67)), 0); (("current_dirpath", 1382), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -13), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("library/global.mli", 181, 6441, 6441), ("library/global.mli", 181, 6441, 6480), 0), 0, Tag1 ("Global", 68)), 0); (("with_global", 1383), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "DirPath"), "t"), 0, (0)), 100000000, 0, -9), (Tag3 (Tag1 ((Tag2 ("Univ")), "in_universe_context_set"), [((("a")), 100000000, 0, -5)], (0)), 100000000, 0, -8), 0), 100000000, 0, -7), 0), 100000000, 0, -6), ((("a")), 100000000, 0, -5), 0), 100000000, 0, -4), 0, (("library/global.mli", 183, 6482, 6482), ("library/global.mli", 183, 6482, 6567), 0), 0, Tag1 ("Global", 69)), 0); (("global_env_summary_tag", 1384), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Summary")), "Dyn"), "tag"), [(Tag3 (Tag1 ((Tag2 ("Safe_typing")), "safe_environment"), 0, (0)), 100000000, 0, -3)], (0)), 100000000, 0, -2), 0, (("library/global.mli", 185, 6569, 6569), ("library/global.mli", 185, 6569, 6642), 0), 0, Tag1 ("Global", 70)), 0)], "Global", [("Global", ("?#\156=\176F\165q\189\209\160d\155\128\162f")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("Section", ("\245\207\b\021\142v=\155#w\246}\"4b\006")); ("Safe_typing", (")\250?\164\145\132\241\127\186\152h+\145\"\237l")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("Nativevalues", ("8:\007\025e\226c,\001\171\146#l\210\171\152")); ("Nativelib", ("V\239\205Y1\147E:,\176\196Hy\1483|")); ("Nativecode", ("\190\185\255\006m\012\210\163\138Rz\247\15283\183")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Genlambda", ("\170}\024\241\141\222\136S\169\219\2212i\134KI")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CDebug", ("^4\210p7\239!3\138\138\213?\239`\250\157")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
val global_env_summary_tag : Safe_typing.safe_environment Summary.Dyn.tag
