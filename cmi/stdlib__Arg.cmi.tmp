type spec =
    Unit of (unit -> unit)
  | Bool of (bool -> unit)
  | Set of bool ref
  | Clear of bool ref
  | String of (string -> unit)
  | Set_string of string ref
  | Int of (int -> unit)
  | Set_int of int ref
  | Float of (float -> unit)
  | Set_float of float ref
  | Tuple of spec list
  | Symbol of string list * (string -> unit)
  | Rest of (string -> unit)
  | Rest_all of (string list -> unit)
  | Expand of (string -> string array)
type key = string
type doc = string
type usage_msg = string
type anon_fun = string -> unit
val parse : (key * spec * doc) list -> anon_fun -> usage_msg -> unit
val parse_dynamic :
  (key * spec * doc) list ref -> anon_fun -> usage_msg -> unit
val parse_argv :
  ?current:int ref ->
  string array -> (key * spec * doc) list -> anon_fun -> usage_msg -> unit
val parse_argv_dynamic :
  ?current:int ref ->
  string array -> (key * spec * doc) list ref -> anon_fun -> string -> unit
val parse_and_expand_argv_dynamic :
  int ref ->
  string array ref ->
  (key * spec * doc) list ref -> anon_fun -> string -> unit
val parse_expand : (key * spec * doc) list -> anon_fun -> usage_msg -> unit
exception Help of string
exception Bad of string
val usage : (key * spec * doc) list -> usage_msg -> unit
val usage_string : (key * spec * doc) list -> usage_msg -> string
val align : ?limit:int -> (key * spec * doc) list -> (key * spec * doc) list
val current : int ref
val read_arg : string -> string array
val read_arg0 : string -> string array
val write_arg : string -> string array -> unit
("DEBUG:rule", [Tag1 (("spec", 305), (0, 0, Tag1 ([(("Unit", 270), ([(Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -156), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -155), 0), 100000000, 0, -154)]), 0, (("arg.mli", 80, 3538, 3540), ("arg.mli", 80, 3538, 3564), 0), 0, Tag1 ("Stdlib__Arg", 1)); (("Bool", 271), ([(Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -159), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -158), 0), 100000000, 0, -157)]), 0, (("arg.mli", 81, 3613, 3615), ("arg.mli", 81, 3613, 3639), 0), 0, Tag1 ("Stdlib__Arg", 2)); (("Set", 272), ([(Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -161)], (0)), 100000000, 0, -160)]), 0, (("arg.mli", 82, 3690, 3692), ("arg.mli", 82, 3690, 3709), 0), 0, Tag1 ("Stdlib__Arg", 3)); (("Clear", 273), ([(Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -163)], (0)), 100000000, 0, -162)]), 0, (("arg.mli", 83, 3754, 3756), ("arg.mli", 83, 3754, 3775), 0), 0, Tag1 ("Stdlib__Arg", 4)); (("String", 274), ([(Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -166), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -165), 0), 100000000, 0, -164)]), 0, (("arg.mli", 84, 3819, 3821), ("arg.mli", 84, 3819, 3849), 0), 0, Tag1 ("Stdlib__Arg", 5)); (("Set_string", 275), ([(Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -168)], (0)), 100000000, 0, -167)]), 0, (("arg.mli", 85, 3898, 3900), ("arg.mli", 85, 3898, 3926), 0), 0, Tag1 ("Stdlib__Arg", 6)); (("Int", 276), ([(Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -171), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -170), 0), 100000000, 0, -169)]), 0, (("arg.mli", 86, 3977, 3979), ("arg.mli", 86, 3977, 4001), 0), 0, Tag1 ("Stdlib__Arg", 7)); (("Set_int", 277), ([(Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -173)], (0)), 100000000, 0, -172)]), 0, (("arg.mli", 87, 4054, 4056), ("arg.mli", 87, 4054, 4076), 0), 0, Tag1 ("Stdlib__Arg", 8)); (("Float", 278), ([(Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -176), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -175), 0), 100000000, 0, -174)]), 0, (("arg.mli", 88, 4130, 4132), ("arg.mli", 88, 4130, 4158), 0), 0, Tag1 ("Stdlib__Arg", 9)); (("Set_float", 279), ([(Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -178)], (0)), 100000000, 0, -177)]), 0, (("arg.mli", 89, 4208, 4210), ("arg.mli", 89, 4208, 4234), 0), 0, Tag1 ("Stdlib__Arg", 10)); (("Tuple", 280), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("spec", 305)), 0, (0)), 100000000, 0, -180)], (0)), 100000000, 0, -179)]), 0, (("arg.mli", 90, 4286, 4288), ("arg.mli", 90, 4286, 4308), 0), 0, Tag1 ("Stdlib__Arg", 11)); (("Symbol", 281), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -182)], (0)), 100000000, 0, -181); (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -185), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -184), 0), 100000000, 0, -183)]), 0, (("arg.mli", 92, 4409, 4411), ("arg.mli", 92, 4409, 4453), 0), 0, Tag1 ("Stdlib__Arg", 12)); (("Rest", 282), ([(Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -188), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -187), 0), 100000000, 0, -186)]), 0, (("arg.mli", 95, 4601, 4603), ("arg.mli", 95, 4601, 4629), 0), 0, Tag1 ("Stdlib__Arg", 13)); (("Rest_all", 283), ([(Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -192)], (0)), 100000000, 0, -191), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -190), 0), 100000000, 0, -189)]), 0, (("arg.mli", 97, 4752, 4754), ("arg.mli", 97, 4752, 4789), 0), 0, Tag1 ("Stdlib__Arg", 14)); (("Expand", 284), ([(Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -196), (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -195)], (0)), 100000000, 0, -194), 0), 100000000, 0, -193)]), 0, (("arg.mli", 100, 4941, 4943), ("arg.mli", 100, 4941, 4979), 0), 0, Tag1 ("Stdlib__Arg", 15))], 0), 1, 0, 0, 0, 0, 0, (("arg.mli", 79, 3526, 3526), ("arg.mli", 100, 4941, 4979), 0), 0, 0, 0, Tag1 ("Stdlib__Arg", 0)), 1, 0); Tag1 (("key", 306), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -153)), 0, 0, 0, 0, (("arg.mli", 110, 5545, 5545), ("arg.mli", 110, 5545, 5562), 0), 0, 0, 0, Tag1 ("Stdlib__Arg", 16)), 1, 0); Tag1 (("doc", 307), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -152)), 0, 0, 0, 0, (("arg.mli", 111, 5563, 5563), ("arg.mli", 111, 5563, 5580), 0), 0, 0, 0, Tag1 ("Stdlib__Arg", 17)), 1, 0); Tag1 (("usage_msg", 308), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -151)), 0, 0, 0, 0, (("arg.mli", 112, 5581, 5581), ("arg.mli", 112, 5581, 5604), 0), 0, 0, 0, Tag1 ("Stdlib__Arg", 18)), 1, 0); Tag1 (("anon_fun", 309), (0, 0, 0, 1, ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -150), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -149), 0), 100000000, 0, -148)), 0, 0, 0, 0, (("arg.mli", 113, 5605, 5605), ("arg.mli", 113, 5605, 5637), 0), 0, 0, 0, Tag1 ("Stdlib__Arg", 19)), 1, 0); (("parse", 310), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 306)), 0, (0)), 100000000, 0, -145); (Tag3 ((("spec", 305)), 0, (0)), 100000000, 0, -146); (Tag3 ((("doc", 307)), 0, (0)), 100000000, 0, -147)]), 100000000, 0, -144)], (0)), 100000000, 0, -143), (Tag1 (0, (Tag3 ((("anon_fun", 309)), 0, (0)), 100000000, 0, -142), (Tag1 (0, (Tag3 ((("usage_msg", 308)), 0, (0)), 100000000, 0, -141), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -140), 0), 100000000, 0, -139), 0), 100000000, 0, -138), 0), 100000000, 0, -137), 0, (("arg.mli", 115, 5639, 5639), ("arg.mli", 116, 5651, 5709), 0), 0, Tag1 ("Stdlib__Arg", 20)), 0); (("parse_dynamic", 311), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 306)), 0, (0)), 100000000, 0, -134); (Tag3 ((("spec", 305)), 0, (0)), 100000000, 0, -135); (Tag3 ((("doc", 307)), 0, (0)), 100000000, 0, -136)]), 100000000, 0, -133)], (0)), 100000000, 0, -132)], (0)), 100000000, 0, -131), (Tag1 (0, (Tag3 ((("anon_fun", 309)), 0, (0)), 100000000, 0, -130), (Tag1 (0, (Tag3 ((("usage_msg", 308)), 0, (0)), 100000000, 0, -129), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -128), 0), 100000000, 0, -127), 0), 100000000, 0, -126), 0), 100000000, 0, -125), 0, (("arg.mli", 144, 7058, 7058), ("arg.mli", 145, 7078, 7140), 0), 0, Tag1 ("Stdlib__Arg", 21)), 0); (("parse_argv", 312), ((Tag1 (Tag1 ("current"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -124)], (0)), 100000000, 0, -123)], (0)), 100000000, 0, -122), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -121)], (0)), 100000000, 0, -120), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 306)), 0, (0)), 100000000, 0, -117); (Tag3 ((("spec", 305)), 0, (0)), 100000000, 0, -118); (Tag3 ((("doc", 307)), 0, (0)), 100000000, 0, -119)]), 100000000, 0, -116)], (0)), 100000000, 0, -115), (Tag1 (0, (Tag3 ((("anon_fun", 309)), 0, (0)), 100000000, 0, -114), (Tag1 (0, (Tag3 ((("usage_msg", 308)), 0, (0)), 100000000, 0, -113), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -112), 0), 100000000, 0, -111), 0), 100000000, 0, -110), 0), 100000000, 0, -109), 0), 100000000, 0, -108), 0), 100000000, 0, -107), 0, (("arg.mli", 154, 7469, 7469), ("arg.mli", 155, 7523, 7581), 0), 0, Tag1 ("Stdlib__Arg", 22)), 0); (("parse_argv_dynamic", 313), ((Tag1 (Tag1 ("current"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -106)], (0)), 100000000, 0, -105)], (0)), 100000000, 0, -104), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -103)], (0)), 100000000, 0, -102), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 306)), 0, (0)), 100000000, 0, -99); (Tag3 ((("spec", 305)), 0, (0)), 100000000, 0, -100); (Tag3 ((("doc", 307)), 0, (0)), 100000000, 0, -101)]), 100000000, 0, -98)], (0)), 100000000, 0, -97)], (0)), 100000000, 0, -96), (Tag1 (0, (Tag3 ((("anon_fun", 309)), 0, (0)), 100000000, 0, -95), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -94), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -93), 0), 100000000, 0, -92), 0), 100000000, 0, -91), 0), 100000000, 0, -90), 0), 100000000, 0, -89), 0), 100000000, 0, -88), 0, (("arg.mli", 167, 8138, 8138), ("arg.mli", 168, 8199, 8258), 0), 0, Tag1 ("Stdlib__Arg", 23)), 0); (("parse_and_expand_argv_dynamic", 314), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -87)], (0)), 100000000, 0, -86), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -85)], (0)), 100000000, 0, -84)], (0)), 100000000, 0, -83), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 306)), 0, (0)), 100000000, 0, -80); (Tag3 ((("spec", 305)), 0, (0)), 100000000, 0, -81); (Tag3 ((("doc", 307)), 0, (0)), 100000000, 0, -82)]), 100000000, 0, -79)], (0)), 100000000, 0, -78)], (0)), 100000000, 0, -77), (Tag1 (0, (Tag3 ((("anon_fun", 309)), 0, (0)), 100000000, 0, -76), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -75), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -74), 0), 100000000, 0, -73), 0), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), 0), 100000000, 0, -69), 0, (("arg.mli", 175, 8434, 8434), ("arg.mli", 176, 8501, 8560), 0), 0, Tag1 ("Stdlib__Arg", 24)), 0); (("parse_expand", 315), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 306)), 0, (0)), 100000000, 0, -66); (Tag3 ((("spec", 305)), 0, (0)), 100000000, 0, -67); (Tag3 ((("doc", 307)), 0, (0)), 100000000, 0, -68)]), 100000000, 0, -65)], (0)), 100000000, 0, -64), (Tag1 (0, (Tag3 ((("anon_fun", 309)), 0, (0)), 100000000, 0, -63), (Tag1 (0, (Tag3 ((("usage_msg", 308)), 0, (0)), 100000000, 0, -62), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -61), 0), 100000000, 0, -60), 0), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("arg.mli", 183, 8767, 8767), ("arg.mli", 184, 8785, 8843), 0), 0, Tag1 ("Stdlib__Arg", 25)), 0); Tag2 (("Help", 316), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -57)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Stdlib__Arg", 26)), 2, 0); Tag2 (("Bad", 317), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -56)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Stdlib__Arg", 27)), 2, 0); (("usage", 318), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 306)), 0, (0)), 100000000, 0, -53); (Tag3 ((("spec", 305)), 0, (0)), 100000000, 0, -54); (Tag3 ((("doc", 307)), 0, (0)), 100000000, 0, -55)]), 100000000, 0, -52)], (0)), 100000000, 0, -51), (Tag1 (0, (Tag3 ((("usage_msg", 308)), 0, (0)), 100000000, 0, -50), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -49), 0), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("arg.mli", 198, 9287, 9287), ("arg.mli", 198, 9287, 9343), 0), 0, Tag1 ("Stdlib__Arg", 28)), 0); (("usage_string", 319), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 306)), 0, (0)), 100000000, 0, -44); (Tag3 ((("spec", 305)), 0, (0)), 100000000, 0, -45); (Tag3 ((("doc", 307)), 0, (0)), 100000000, 0, -46)]), 100000000, 0, -43)], (0)), 100000000, 0, -42), (Tag1 (0, (Tag3 ((("usage_msg", 308)), 0, (0)), 100000000, 0, -41), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("arg.mli", 204, 9608, 9608), ("arg.mli", 204, 9608, 9673), 0), 0, Tag1 ("Stdlib__Arg", 29)), 0); (("align", 320), ((Tag1 (Tag1 ("limit"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -37)], (0)), 100000000, 0, -36), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 306)), 0, (0)), 100000000, 0, -33); (Tag3 ((("spec", 305)), 0, (0)), 100000000, 0, -34); (Tag3 ((("doc", 307)), 0, (0)), 100000000, 0, -35)]), 100000000, 0, -32)], (0)), 100000000, 0, -31), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 306)), 0, (0)), 100000000, 0, -28); (Tag3 ((("spec", 305)), 0, (0)), 100000000, 0, -29); (Tag3 ((("doc", 307)), 0, (0)), 100000000, 0, -30)]), 100000000, 0, -27)], (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("arg.mli", 208, 9790, 9790), ("arg.mli", 208, 9790, 9866), 0), 0, Tag1 ("Stdlib__Arg", 30)), 0); (("current", 321), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -23)], (0)), 100000000, 0, -22), 0, (("arg.mli", 217, 10359, 10359), ("arg.mli", 217, 10359, 10380), 0), 0, Tag1 ("Stdlib__Arg", 31)), 0); (("read_arg", 322), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -21), (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -20)], (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("arg.mli", 224, 10693, 10693), ("arg.mli", 224, 10693, 10729), 0), 0, Tag1 ("Stdlib__Arg", 32)), 0); (("read_arg0", 323), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -17), (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -16)], (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("arg.mli", 229, 10844, 10844), ("arg.mli", 229, 10844, 10881), 0), 0, Tag1 ("Stdlib__Arg", 33)), 0); (("write_arg", 324), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -12)], (0)), 100000000, 0, -11), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("arg.mli", 235, 11002, 11002), ("arg.mli", 235, 11002, 11047), 0), 0, Tag1 ("Stdlib__Arg", 34)), 0); (("write_arg0", 325), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6)], (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("arg.mli", 241, 11260, 11260), ("arg.mli", 241, 11260, 11306), 0), 0, Tag1 ("Stdlib__Arg", 35)), 0)], "Stdlib__Arg", [("Stdlib__Arg", ("\024%=\206\198p\149Y\007\004\216,&\254#\207")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [((0, "unsynchronized_access", "The Arg module relies on a mutable global state, parsing functions should only be called from a single domain.", 0, 1))])
val write_arg0 : string -> string array -> unit
