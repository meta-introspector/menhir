module Edge :
  sig
    type t = Normal | Epsilon
    val max : t -> t -> t
    val min : t -> t -> t
    val sch : t Schematic.t
    val pp : t Pp.t
  end
type dep = {
  path : Namespaced.t;
  edge : Edge.t;
  pkg : Pkg.t;
  aliases : Namespaced.set;
}
type t
val empty : t
val sch : t Schematic.t
val update :
  path:Namespaced.t ->
  ?aliases:Namespaced.set -> edge:Edge.t -> Pkg.t -> t -> t
val make :
  path:Namespaced.t -> ?aliases:Namespaced.set -> edge:Edge.t -> Pkg.t -> t
val merge : t -> t -> t
val ( + ) : t -> t -> t
val pp : Format.formatter -> t -> unit
val find : Namespaced.t -> t -> dep option
val fold : (dep -> 'acc -> 'acc) -> t -> 'acc -> 'acc
val of_list : dep list -> t
val pkgs : t -> Pkg.t list
val paths : t -> Namespaced.t list
val all : t -> dep list("DEBUG:rule", [Tag3 (("Edge", 618), 0, (Tag1 ([Tag1 (("t", 635), (0, 0, Tag1 ([(("Normal", 270), (0), 0, (("lib/deps.mli", 5, 74, 78), ("lib/deps.mli", 5, 74, 86), 0), 0, Tag1 ("Deps", 1)); (("Epsilon", 271), (0), 0, (("lib/deps.mli", 6, 113, 117), ("lib/deps.mli", 6, 113, 126), 0), 0, Tag1 ("Deps", 2))], 0), 1, 0, 0, 0, 0, 0, (("lib/deps.mli", 4, 63, 65), ("lib/deps.mli", 6, 113, 126), 0), 0, 1, 0, Tag1 ("Deps", 0)), 1, 0); (("max", 636), ((Tag1 (0, (Tag3 ((("t", 635)), 0, (0)), 100000000, 0, -92), (Tag1 (0, (Tag3 ((("t", 635)), 0, (0)), 100000000, 0, -91), (Tag3 ((("t", 635)), 0, (0)), 100000000, 0, -90), 0), 100000000, 0, -89), 0), 100000000, 0, -88), 0, (("lib/deps.mli", 7, 155, 157), ("lib/deps.mli", 7, 155, 177), 0), 0, Tag1 ("Deps", 3)), 0); (("min", 637), ((Tag1 (0, (Tag3 ((("t", 635)), 0, (0)), 100000000, 0, -87), (Tag1 (0, (Tag3 ((("t", 635)), 0, (0)), 100000000, 0, -86), (Tag3 ((("t", 635)), 0, (0)), 100000000, 0, -85), 0), 100000000, 0, -84), 0), 100000000, 0, -83), 0, (("lib/deps.mli", 8, 178, 180), ("lib/deps.mli", 8, 178, 200), 0), 0, Tag1 ("Deps", 4)), 0); (("sch", 638), ((Tag3 (Tag1 ((Tag2 ("Schematic")), "t"), [(Tag3 ((("t", 635)), 0, (0)), 100000000, 0, -82)], (0)), 100000000, 0, -81), 0, (("lib/deps.mli", 9, 201, 203), ("lib/deps.mli", 9, 201, 225), 0), 0, Tag1 ("Deps", 6)), 0); (("pp", 639), ((Tag3 (Tag1 ((Tag2 ("Pp")), "t"), [(Tag3 ((("t", 635)), 0, (0)), 100000000, 0, -80)], (0)), 100000000, 0, -79), 0, (("lib/deps.mli", 10, 226, 228), ("lib/deps.mli", 10, 226, 242), 0), 0, Tag1 ("Deps", 7)), 0)]), 0, (("lib/deps.mli", 3, 46, 46), ("lib/deps.mli", 11, 243, 246), 0), Tag1 ("Deps", 8)), 0, 0); Tag1 (("dep", 619), (0, 0, [[(("path", 370), 0, (Tag3 (Tag1 ((Tag2 ("Namespaced")), "t"), 0, (0)), 100000000, 0, -75), (("lib/deps.mli", 13, 248, 260), ("lib/deps.mli", 13, 248, 279), 0), 0, Tag1 ("Deps", 10)); (("edge", 371), 0, (Tag3 (Tag1 ((("Edge", 618)), "t"), 0, (0)), 100000000, 0, -76), (("lib/deps.mli", 13, 248, 280), ("lib/deps.mli", 13, 248, 292), 0), 0, Tag1 ("Deps", 11)); (("pkg", 398), 0, (Tag3 (Tag1 ((Tag2 ("Pkg")), "t"), 0, (0)), 100000000, 0, -77), (("lib/deps.mli", 13, 248, 293), ("lib/deps.mli", 13, 248, 303), 0), 0, Tag1 ("Deps", 12)); (("aliases", 399), 0, (Tag3 (Tag1 ((Tag2 ("Namespaced")), "set"), 0, (0)), 100000000, 0, -78), (("lib/deps.mli", 13, 248, 304), ("lib/deps.mli", 13, 248, 327), 0), 0, Tag1 ("Deps", 13))]], 1, 0, 0, 0, 0, 0, (("lib/deps.mli", 13, 248, 248), ("lib/deps.mli", 13, 248, 329), 0), 0, 0, 0, Tag1 ("Deps", 9)), 1, 0); Tag1 (("t", 620), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/deps.mli", 14, 330, 330), ("lib/deps.mli", 14, 330, 336), 0), 0, 0, 0, Tag1 ("Deps", 14)), 1, 0); (("empty", 621), ((Tag3 ((("t", 620)), 0, (0)), 100000000, 0, -74), 0, (("lib/deps.mli", 15, 337, 337), ("lib/deps.mli", 15, 337, 349), 0), 0, Tag1 ("Deps", 15)), 0); (("sch", 622), ((Tag3 (Tag1 ((Tag2 ("Schematic")), "t"), [(Tag3 ((("t", 620)), 0, (0)), 100000000, 0, -73)], (0)), 100000000, 0, -72), 0, (("lib/deps.mli", 16, 350, 350), ("lib/deps.mli", 16, 350, 372), 0), 0, Tag1 ("Deps", 16)), 0); (("update", 623), ((Tag1 (("path"), (Tag3 (Tag1 ((Tag2 ("Namespaced")), "t"), 0, (0)), 100000000, 0, -71), (Tag1 (Tag1 ("aliases"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Namespaced")), "set"), 0, (0)), 100000000, 0, -70)], (0)), 100000000, 0, -69), (Tag1 (("edge"), (Tag3 (Tag1 ((("Edge", 618)), "t"), 0, (0)), 100000000, 0, -68), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Pkg")), "t"), 0, (0)), 100000000, 0, -67), (Tag1 (0, (Tag3 ((("t", 620)), 0, (0)), 100000000, 0, -66), (Tag3 ((("t", 620)), 0, (0)), 100000000, 0, -65), 0), 100000000, 0, -64), 0), 100000000, 0, -63), 0), 100000000, 0, -62), 0), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("lib/deps.mli", 21, 480, 480), ("lib/deps.mli", 22, 492, 572), 0), 0, Tag1 ("Deps", 17)), 0); (("make", 624), ((Tag1 (("path"), (Tag3 (Tag1 ((Tag2 ("Namespaced")), "t"), 0, (0)), 100000000, 0, -59), (Tag1 (Tag1 ("aliases"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Namespaced")), "set"), 0, (0)), 100000000, 0, -58)], (0)), 100000000, 0, -57), (Tag1 (("edge"), (Tag3 (Tag1 ((("Edge", 618)), "t"), 0, (0)), 100000000, 0, -56), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Pkg")), "t"), 0, (0)), 100000000, 0, -55), (Tag3 ((("t", 620)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0), 100000000, 0, -50), 0, (("lib/deps.mli", 23, 573, 573), ("lib/deps.mli", 24, 583, 658), 0), 0, Tag1 ("Deps", 18)), 0); (("merge", 625), ((Tag1 (0, (Tag3 ((("t", 620)), 0, (0)), 100000000, 0, -49), (Tag1 (0, (Tag3 ((("t", 620)), 0, (0)), 100000000, 0, -48), (Tag3 ((("t", 620)), 0, (0)), 100000000, 0, -47), 0), 100000000, 0, -46), 0), 100000000, 0, -45), 0, (("lib/deps.mli", 26, 660, 660), ("lib/deps.mli", 26, 660, 682), 0), 0, Tag1 ("Deps", 19)), 0); (("+", 626), ((Tag1 (0, (Tag3 ((("t", 620)), 0, (0)), 100000000, 0, -44), (Tag1 (0, (Tag3 ((("t", 620)), 0, (0)), 100000000, 0, -43), (Tag3 ((("t", 620)), 0, (0)), 100000000, 0, -42), 0), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("lib/deps.mli", 27, 683, 683), ("lib/deps.mli", 27, 683, 704), 0), 0, Tag1 ("Deps", 20)), 0); (("pp", 627), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -39), (Tag1 (0, (Tag3 ((("t", 620)), 0, (0)), 100000000, 0, -38), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("lib/deps.mli", 29, 706, 706), ("lib/deps.mli", 29, 706, 743), 0), 0, Tag1 ("Deps", 21)), 0); (("find", 628), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Namespaced")), "t"), 0, (0)), 100000000, 0, -34), (Tag1 (0, (Tag3 ((("t", 620)), 0, (0)), 100000000, 0, -33), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("dep", 619)), 0, (0)), 100000000, 0, -32)], (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("lib/deps.mli", 31, 745, 745), ("lib/deps.mli", 31, 745, 786), 0), 0, Tag1 ("Deps", 22)), 0); (("fold", 629), ((Tag1 (0, (Tag1 (0, (Tag3 ((("dep", 619)), 0, (0)), 100000000, 0, -28), (Tag1 (0, ((("acc")), 100000000, 0, -24), ((("acc")), 100000000, 0, -24), 0), 100000000, 0, -27), 0), 100000000, 0, -26), (Tag1 (0, (Tag3 ((("t", 620)), 0, (0)), 100000000, 0, -25), (Tag1 (0, ((("acc")), 100000000, 0, -24), ((("acc")), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("lib/deps.mli", 32, 787, 787), ("lib/deps.mli", 32, 787, 839), 0), 0, Tag1 ("Deps", 23)), 0); (("of_list", 630), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("dep", 619)), 0, (0)), 100000000, 0, -20)], (0)), 100000000, 0, -19), (Tag3 ((("t", 620)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("lib/deps.mli", 34, 841, 841), ("lib/deps.mli", 34, 841, 867), 0), 0, Tag1 ("Deps", 24)), 0); (("pkgs", 631), ((Tag1 (0, (Tag3 ((("t", 620)), 0, (0)), 100000000, 0, -16), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Pkg")), "t"), 0, (0)), 100000000, 0, -15)], (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("lib/deps.mli", 36, 869, 869), ("lib/deps.mli", 36, 869, 894), 0), 0, Tag1 ("Deps", 25)), 0); (("paths", 632), ((Tag1 (0, (Tag3 ((("t", 620)), 0, (0)), 100000000, 0, -12), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Namespaced")), "t"), 0, (0)), 100000000, 0, -11)], (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("lib/deps.mli", 37, 895, 895), ("lib/deps.mli", 37, 895, 928), 0), 0, Tag1 ("Deps", 26)), 0); (("all", 633), ((Tag1 (0, (Tag3 ((("t", 620)), 0, (0)), 100000000, 0, -8), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("dep", 619)), 0, (0)), 100000000, 0, -7)], (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("lib/deps.mli", 38, 929, 929), ("lib/deps.mli", 38, 929, 951), 0), 0, Tag1 ("Deps", 27)), 0); (("pkg_set", 634), ((Tag1 (0, (Tag3 ((("t", 620)), 0, (0)), 100000000, 0, -4), (Tag3 (Tag1 ((Tag2 ("Pkg")), "set"), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("lib/deps.mli", 39, 952, 952), ("lib/deps.mli", 39, 952, 977), 0), 0, Tag1 ("Deps", 28)), 0)], "Deps", [("Deps", ("%\164\252&\165z\218\221\023\182\235\223+\147\145\195")); ("Unitname", ("\155n\201\211\249\229\028$\220J\172\018<\249\171\158")); ("Support", ("YA;\029\006a\255\202R\137\181\133\184\209)\005")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Schematic", ("\180\179\011\178\017I\241^\235\149h\161k\b\209\142")); ("Pp", ("\167zCQ\134\167\215\2517\247\158\219\250\223.\197")); ("Pkg", ("SneaP\023\210\210\240\218\128bA\te\239")); ("Paths", ("\000\152\242H\139l\222\245\245Ndb\202P^\175")); ("Namespaced", ("%\208\253;3\161W$\236\1838K\195z\1493")); ("Name", ("4? \167\131n\184\000\214\031\017\027\153\002]^")); ("Modname", ("v\160\183\003\212\232\177\007\228-\002\145i\230\255\248")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val pkg_set : t -> Pkg.set
