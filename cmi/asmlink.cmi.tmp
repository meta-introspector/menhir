val link : ppf_dump:Format.formatter -> string list -> string -> unit
val link_shared : ppf_dump:Format.formatter -> string list -> string -> unit
val call_linker_shared : string list -> string -> unit
val reset : unit -> unit
val check_consistency :
  Misc.filepath -> Cmx_format.unit_infos -> Digest.t -> unit
val extract_crc_interfaces : unit -> Misc.crcs
val extract_crc_implementations : unit -> Misc.crcs
type error =
    File_not_found of Misc.filepath
  | Not_an_object_file of Misc.filepath
  | Missing_implementations of (Misc.modname * string list) list
  | Inconsistent_interface of Misc.modname * Misc.filepath * Misc.filepath
  | Inconsistent_implementation of Misc.modname * Misc.filepath *
      Misc.filepath
  | Assembler_error of Misc.filepath
  | Linking_error of int
  | Multiple_definition of Misc.modname * Misc.filepath * Misc.filepath
  | Missing_cmx of Misc.filepath * Misc.modname
exception Error of error("DEBUG:rule", [(("link", 531), ((Tag1 (("ppf_dump"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -65), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -64)], (0)), 100000000, 0, -63), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -62), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -61), 0), 100000000, 0, -60), 0), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("asmcomp/asmlink.mli", 21, 1175, 1175), ("asmcomp/asmlink.mli", 21, 1175, 1236), 0), 0, Tag1 ("Asmlink", 0)), 0); (("link_shared", 532), ((Tag1 (("ppf_dump"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -57), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -56)], (0)), 100000000, 0, -55), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -54), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0), 100000000, 0, -50), 0, (("asmcomp/asmlink.mli", 23, 1238, 1238), ("asmcomp/asmlink.mli", 23, 1238, 1306), 0), 0, Tag1 ("Asmlink", 1)), 0); (("call_linker_shared", 533), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -49)], (0)), 100000000, 0, -48), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -47), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("asmcomp/asmlink.mli", 25, 1308, 1308), ("asmcomp/asmlink.mli", 25, 1308, 1361), 0), 0, Tag1 ("Asmlink", 2)), 0); (("reset", 534), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -43), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("asmcomp/asmlink.mli", 27, 1363, 1363), ("asmcomp/asmlink.mli", 27, 1363, 1387), 0), 0, Tag1 ("Asmlink", 3)), 0); (("check_consistency", 535), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Misc")), "filepath"), 0, (0)), 100000000, 0, -40), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Cmx_format")), "unit_infos"), 0, (0)), 100000000, 0, -39), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Digest"), "t"), 0, (0)), 100000000, 0, -38), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("asmcomp/asmlink.mli", 28, 1388, 1388), ("asmcomp/asmlink.mli", 28, 1388, 1464), 0), 0, Tag1 ("Asmlink", 4)), 0); (("extract_crc_interfaces", 536), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -33), (Tag3 (Tag1 ((Tag2 ("Misc")), "crcs"), 0, (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("asmcomp/asmlink.mli", 29, 1465, 1465), ("asmcomp/asmlink.mli", 29, 1465, 1505), 0), 0, Tag1 ("Asmlink", 5)), 0); (("extract_crc_implementations", 537), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -30), (Tag3 (Tag1 ((Tag2 ("Misc")), "crcs"), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("asmcomp/asmlink.mli", 30, 1506, 1506), ("asmcomp/asmlink.mli", 30, 1506, 1551), 0), 0, Tag1 ("Asmlink", 6)), 0); Tag1 (("error", 538), (0, 0, Tag1 ([(("File_not_found", 520), ([(Tag3 (Tag1 ((Tag2 ("Misc")), "filepath"), 0, (0)), 100000000, 0, -8)]), 0, (("asmcomp/asmlink.mli", 33, 1566, 1568), ("asmcomp/asmlink.mli", 33, 1566, 1596), 0), 0, Tag1 ("Asmlink", 8)); (("Not_an_object_file", 521), ([(Tag3 (Tag1 ((Tag2 ("Misc")), "filepath"), 0, (0)), 100000000, 0, -9)]), 0, (("asmcomp/asmlink.mli", 34, 1597, 1599), ("asmcomp/asmlink.mli", 34, 1597, 1631), 0), 0, Tag1 ("Asmlink", 9)); (("Missing_implementations", 522), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Misc")), "modname"), 0, (0)), 100000000, 0, -12); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -14)], (0)), 100000000, 0, -13)]), 100000000, 0, -11)], (0)), 100000000, 0, -10)]), 0, (("asmcomp/asmlink.mli", 35, 1632, 1634), ("asmcomp/asmlink.mli", 35, 1632, 1691), 0), 0, Tag1 ("Asmlink", 10)); (("Inconsistent_interface", 523), ([(Tag3 (Tag1 ((Tag2 ("Misc")), "modname"), 0, (0)), 100000000, 0, -15); (Tag3 (Tag1 ((Tag2 ("Misc")), "filepath"), 0, (0)), 100000000, 0, -16); (Tag3 (Tag1 ((Tag2 ("Misc")), "filepath"), 0, (0)), 100000000, 0, -17)]), 0, (("asmcomp/asmlink.mli", 36, 1692, 1694), ("asmcomp/asmlink.mli", 36, 1692, 1751), 0), 0, Tag1 ("Asmlink", 11)); (("Inconsistent_implementation", 524), ([(Tag3 (Tag1 ((Tag2 ("Misc")), "modname"), 0, (0)), 100000000, 0, -18); (Tag3 (Tag1 ((Tag2 ("Misc")), "filepath"), 0, (0)), 100000000, 0, -19); (Tag3 (Tag1 ((Tag2 ("Misc")), "filepath"), 0, (0)), 100000000, 0, -20)]), 0, (("asmcomp/asmlink.mli", 37, 1752, 1754), ("asmcomp/asmlink.mli", 37, 1752, 1816), 0), 0, Tag1 ("Asmlink", 12)); (("Assembler_error", 525), ([(Tag3 (Tag1 ((Tag2 ("Misc")), "filepath"), 0, (0)), 100000000, 0, -21)]), 0, (("asmcomp/asmlink.mli", 38, 1817, 1819), ("asmcomp/asmlink.mli", 38, 1817, 1848), 0), 0, Tag1 ("Asmlink", 13)); (("Linking_error", 526), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -22)]), 0, (("asmcomp/asmlink.mli", 39, 1849, 1851), ("asmcomp/asmlink.mli", 39, 1849, 1873), 0), 0, Tag1 ("Asmlink", 14)); (("Multiple_definition", 527), ([(Tag3 (Tag1 ((Tag2 ("Misc")), "modname"), 0, (0)), 100000000, 0, -23); (Tag3 (Tag1 ((Tag2 ("Misc")), "filepath"), 0, (0)), 100000000, 0, -24); (Tag3 (Tag1 ((Tag2 ("Misc")), "filepath"), 0, (0)), 100000000, 0, -25)]), 0, (("asmcomp/asmlink.mli", 40, 1874, 1876), ("asmcomp/asmlink.mli", 40, 1874, 1930), 0), 0, Tag1 ("Asmlink", 15)); (("Missing_cmx", 528), ([(Tag3 (Tag1 ((Tag2 ("Misc")), "filepath"), 0, (0)), 100000000, 0, -26); (Tag3 (Tag1 ((Tag2 ("Misc")), "modname"), 0, (0)), 100000000, 0, -27)]), 0, (("asmcomp/asmlink.mli", 41, 1931, 1933), ("asmcomp/asmlink.mli", 41, 1931, 1968), 0), 0, Tag1 ("Asmlink", 16))], 0), 1, 0, 0, 0, 0, 0, (("asmcomp/asmlink.mli", 32, 1553, 1553), ("asmcomp/asmlink.mli", 41, 1931, 1968), 0), 0, 0, 0, Tag1 ("Asmlink", 7)), 1, 0); Tag2 (("Error", 539), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((("error", 538)), 0, (0)), 100000000, 0, -7)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Asmlink", 17)), 2, 0); (("report_error", 540), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((("error", 538)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("asmcomp/asmlink.mli", 45, 1996, 1996), ("asmcomp/asmlink.mli", 45, 1996, 2040), 0), 0, Tag1 ("Asmlink", 18)), 0)], "Asmlink", [("Asmlink", ("2+G3\192\2045\230\232\247\005G\215U\141\194")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Variable", ("\228'\154\1834\146\207\147+\193Aq\209h\190\220")); ("Var_within_closure", ("vQ\173\251u\026\012+}j\020C}T\151\220")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Tag", ("\252\157\132\005\195\228\232\133\246\237\233\224\012\143\192\218")); ("Symbol", ("\179q\177\031_\169\139a\192\019\188\000V\236\232\t")); ("Subst", ("\021\031\148\223\127\186\189\135\027}\145r\216\143\177\156")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Static_exception", ("2{#\175\226\185\147\146\176\140\029O\023p\024\\")); ("Simple_value_approx", ("\019\b\\\255\223\2510j\n?G\183\243\154v\213")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Set_of_closures_origin", ("$n\234\014\162\130\210K\171\btrA\244\254\195")); ("Set_of_closures_id", ("\178\228\011\028\027~\211\166\244\180\220-W\145_\243")); ("Projection", ("\250\207\030\021*\193\225\168\189!\224\228\192\212\236\224")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Parameter", ("*\152\238G\163\217\2377/\t\206\131\226\216K0")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Numbers", ("\004\020\227\212|\031Q6\146\217\211\156\221\234\254\195")); ("Mutable_variable", ("B^*^9`\212\152j\145_\017i.\128?")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Load_path", ("\012@\228l\230\164S\172h\1726X\020\252o}")); ("Linkage_name", ("\023\000\172\166 s\214\ns\155s\156\005\252\154\207")); ("Lambda", ("\180\1419\236'\146K$\128\006\135q\135V\029\180")); ("Internal_variable_names", ("\024|\208(\224\206\012\006\179\203\020\000\179\228\154\218")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("Freshening", ("@\017\191q\232\253\236\139\131\160Z\000b\223\184\228")); ("Flambda", ("\195J|\022>U\206!\211\212\185N\180zh\241")); ("Export_info", ("\133\169\200\137y\208\165\171Z1\181\188]\192\245n")); ("Export_id", ("\017\209\152\144X\251!\178\238\152t\173\191Kl\232")); ("Env", ("\021\n\181\142x\b\169j\227\"\017\248*\178\245\223")); ("Debuginfo", ("\131\251\175\217P\194M\163\022\151\002\005\006\185:\185")); ("Compilation_unit", ("\007\240\020\003jK\000\210\174\021\189.8^\028K")); ("Cmx_format", ("\198\138\145rP5\159\251|3\019\202\162\027GO")); ("Cmi_format", ("6\177\bU\139\"\023\152=\249\135\174\b\011Cg")); ("Closure_origin", ("G\222\200`\213\247\022M|O\1488\194\030\187\229")); ("Closure_id", ("k\221yCH\015\186G\246]\003\233\198\179\217A")); ("Closure_element", ("a\194\018\239D1\143{\156A\011\219H#\149A")); ("Clambda_primitives", ("\199\176\237Hv\205\152\14717\179\017\246\221x`")); ("Clambda", ("L\229\134\243-\191\006\t%\029\245\180\199\252#\214")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc")); ("Backend_var", ("\182\144C\215j:\241\151\214\131?\204\253\002\029\151")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216")); ("Allocated_const", ("\029\027.W\160\170!\199Q2\235\240\167\031,\004"))], [(0)])

val report_error : Format.formatter -> error -> unit
