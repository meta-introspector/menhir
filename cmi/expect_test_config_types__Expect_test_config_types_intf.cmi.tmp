module Upon_unreleasable_issue :
  sig type t = [ `CR | `Warning_for_collector_testing ] end
module type S =
  sig
    module IO : sig type 'a t val return : 'a -> 'a t end
    val run : (unit -> unit IO.t) -> unit
    val sanitize : string -> string
    val upon_unreleasable_issue : Upon_unreleasable_issue.t
  end
module type Expect_test_config_types =
  sig
    module Upon_unreleasable_issue :
      sig
        type t = [ `CR | `Warning_for_collector_testing ]
        val equal : t -> t -> bool
        val comment_prefix : t -> string
        val message_when_expectation_contains_backtrace : t -> string
      end
    module type S = S("DEBUG:rule", [Tag3 (("Upon_unreleasable_issue", 298), 0, (Tag1 ([Tag1 (("t", 301), (0, 0, 0, 1, ((Tag8 (([("CR", (0)); ("Warning_for_collector_testing", (0))], (0, 100000000, 0, -3), 1, 0, 0)), 100000000, 0, -2)), 0, 0, 0, 0, (("config/types/expect_test_config_types_intf.ml", 2, 40, 42), ("config/types/expect_test_config_types_intf.ml", 5, 203, 208), 0), 0, 1, 0, Tag1 ("Expect_test_config_types__Expect_test_config_types_intf", 0)), 1, 0)]), 0, (("config/types/expect_test_config_types_intf.ml", 1, 0, 0), ("config/types/expect_test_config_types_intf.ml", 6, 209, 212), 0), Tag1 ("Expect_test_config_types__Expect_test_config_types_intf", 1)), 0, 0); Tag4 (("S", 299), ((Tag1 ([Tag3 (("IO", 302), 0, (Tag1 ([Tag1 (("t", 306), ([((("a")), 100000000, 0, -17)], 1, 0, 1, 0, [7], [2], 0, 0, (("config/types/expect_test_config_types_intf.ml", 10, 252, 256), ("config/types/expect_test_config_types_intf.ml", 10, 252, 265), 0), 0, 0, 0, Tag1 ("Expect_test_config_types__Expect_test_config_types_intf", 2)), 1, 0); (("return", 307), ((Tag1 (0, ((("a")), 100000000, 0, -16), (Tag3 ((("t", 306)), [((("a")), 100000000, 0, -16)], (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("config/types/expect_test_config_types_intf.ml", 12, 267, 271), ("config/types/expect_test_config_types_intf.ml", 12, 267, 294), 0), 0, Tag1 ("Expect_test_config_types__Expect_test_config_types_intf", 3)), 0)]), 0, (("config/types/expect_test_config_types_intf.ml", 9, 234, 236), ("config/types/expect_test_config_types_intf.ml", 13, 295, 300), 0), Tag1 ("Expect_test_config_types__Expect_test_config_types_intf", 4)), 0, 0); (("run", 303), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -13), (Tag3 (Tag1 ((("IO", 302)), "t"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -12)], (0)), 100000000, 0, -11), 0), 100000000, 0, -10), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("config/types/expect_test_config_types_intf.ml", 16, 348, 350), ("config/types/expect_test_config_types_intf.ml", 16, 348, 387), 0), 0, Tag1 ("Expect_test_config_types__Expect_test_config_types_intf", 5)), 0); (("sanitize", 304), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("config/types/expect_test_config_types_intf.ml", 19, 468, 470), ("config/types/expect_test_config_types_intf.ml", 19, 468, 501), 0), 0, Tag1 ("Expect_test_config_types__Expect_test_config_types_intf", 6)), 0); (("upon_unreleasable_issue", 305), ((Tag3 (Tag1 ((("Upon_unreleasable_issue", 298)), "t"), 0, (0)), 100000000, 0, -4), 0, (("config/types/expect_test_config_types_intf.ml", 24, 672, 674), ("config/types/expect_test_config_types_intf.ml", 24, 672, 729), 0), 0, Tag1 ("Expect_test_config_types__Expect_test_config_types_intf", 7)), 0)])), 0, (("config/types/expect_test_config_types_intf.ml", 8, 214, 214), ("config/types/expect_test_config_types_intf.ml", 25, 730, 733), 0), Tag1 ("Expect_test_config_types__Expect_test_config_types_intf", 8)), 0); Tag4 (("Expect_test_config_types", 300), ((Tag1 ([Tag3 (("Upon_unreleasable_issue", 308), 0, (Tag1 ([Tag1 (("t", 310), (0, 0, 0, 1, ((Tag8 (([("CR", (0)); ("Warning_for_collector_testing", (0))], (0, 100000000, 0, -30), 1, 0, 0)), 100000000, 0, -29)), 0, 0, 0, 0, (("config/types/expect_test_config_types_intf.ml", 2, 40, 42), ("config/types/expect_test_config_types_intf.ml", 5, 203, 208), 0), 0, 1, 0, Tag1 ("Expect_test_config_types__Expect_test_config_types_intf", 0)), 1, 0); (("equal", 311), ((Tag1 (0, (Tag3 ((("t", 310)), 0, (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 ((("t", 310)), 0, (0)), 100000000, 0, -27), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("config/types/expect_test_config_types_intf.ml", 46, 1311, 1315), ("config/types/expect_test_config_types_intf.ml", 46, 1311, 1341), 0), 0, Tag1 ("Expect_test_config_types__Expect_test_config_types_intf", 9)), 0); (("comment_prefix", 312), ((Tag1 (0, (Tag3 ((("t", 310)), 0, (0)), 100000000, 0, -23), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("config/types/expect_test_config_types_intf.ml", 47, 1342, 1346), ("config/types/expect_test_config_types_intf.ml", 47, 1342, 1378), 0), 0, Tag1 ("Expect_test_config_types__Expect_test_config_types_intf", 10)), 0); (("message_when_expectation_contains_backtrace", 313), ((Tag1 (0, (Tag3 ((("t", 310)), 0, (0)), 100000000, 0, -20), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("config/types/expect_test_config_types_intf.ml", 50, 1449, 1453), ("config/types/expect_test_config_types_intf.ml", 50, 1449, 1514), 0), 0, Tag1 ("Expect_test_config_types__Expect_test_config_types_intf", 11)), 0)]), 0, (("config/types/expect_test_config_types_intf.ml", 43, 1220, 1222), ("config/types/expect_test_config_types_intf.ml", 51, 1515, 1520), 0), Tag1 ("Expect_test_config_types__Expect_test_config_types_intf", 12)), 0, 0); Tag4 (("S", 309), ((((("S", 299)))), 0, (("config/types/expect_test_config_types_intf.ml", 53, 1522, 1524), ("config/types/expect_test_config_types_intf.ml", 53, 1522, 1541), 0), Tag1 ("Expect_test_config_types__Expect_test_config_types_intf", 13)), 0)])), 0, (("config/types/expect_test_config_types_intf.ml", 28, 781, 781), ("config/types/expect_test_config_types_intf.ml", 54, 1542, 1545), 0), Tag1 ("Expect_test_config_types__Expect_test_config_types_intf", 14)), 0)], "Expect_test_config_types__Expect_test_config_types_intf", [("Expect_test_config_types__Expect_test_config_types_intf", ("H\178\201K\2348\236h=\184\166\205\016\177\151,")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Expect_test_config_types__", ("\173E\156\232l\016P\n2\210\139\139\180\240_\145")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

  end
