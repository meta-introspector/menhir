module type Parameters =
  sig
    val field_name : string -> string
    val variant_name : string -> string
    val constructors_without_arguments_as_string : bool
    val omit_default_values : bool
    val eager : bool
    val strict : bool
  end
module Default_parameters : Parameters
module type Driver =
  sig
    type t
    val to_string_hum : t -> string
    val to_list : t -> t list
    val of_list : t list -> t
    val is_list : t -> bool
    val to_alist : t -> (string * t) list
    val of_alist : (string * t) list -> t
    val is_alist : t -> bool
    val to_char : t -> char
    val of_char : char -> t
    val to_int : t -> int
    val of_int : int -> t
    val to_int32 : t -> int32
    val of_int32 : int32 -> t
    val to_int64 : t -> int64
    val of_int64 : int64 -> t
    val to_nativeint : t -> nativeint
    val of_nativeint : nativeint -> t
    val to_float : t -> float
    val of_float : float -> t
    val to_string : t -> string
    val of_string : string -> t
    val is_string : t -> bool
    val to_bool : t -> bool
    val of_bool : bool -> t
    val to_bytes : t -> bytes
    val of_bytes : bytes -> t
    val null : t
    val is_null : t -> bool
  end
val mangle : string -> string
module Make :
  functor (D : Driver) (P : Parameters) ->
    sig
      type t = D.t
      type error
      exception Protocol_error of error
      val make_error : ?value:t -> string -> error
      val error_to_string_hum : error -> string
      val to_string_hum : t -> string
      val try_with :
        (t -> 'v) -> t -> ('v, error) Protocol_conv__Runtime.result
      val to_variant :
        (t, 'a) Protocol_conv__Runtime.Variant_in.t list -> t -> 'a
      val of_variant :
        string -> (t, 'a, t) Protocol_conv__Runtime.Tuple_out.t -> 'a
      val to_record :
        (t, 'constr, 'b) Protocol_conv__Runtime.Record_in.t ->
        'constr -> t -> 'b
      val of_record : (t, 'a, t) Protocol_conv__Runtime.Record_out.t -> 'a
      val to_tuple :
        (t, 'constr, 'b) Protocol_conv__Runtime.Tuple_in.t ->
        'constr -> t -> 'b
      val of_tuple : (t, 'a, t) Protocol_conv__Runtime.Tuple_out.t -> 'a
      val to_option : (t -> 'a) -> t -> 'a option
      val of_option : ('a -> t) -> 'a option -> t
      val to_ref : (t -> 'a) -> t -> 'a ref
      val of_ref : ('a -> t) -> 'a ref -> t
      val to_list : (t -> 'a) -> t -> 'a list
      val of_list : ('a -> t) -> 'a list -> t
      val to_array : (t -> 'a) -> t -> 'a array
      val of_array : ('a -> t) -> 'a array -> t
      val to_lazy_t : (t -> 'a) -> t -> 'a lazy_t
      val of_lazy_t : ('a -> t) -> 'a lazy_t -> t
      val to_result :
        (t -> 'a) -> (t -> 'b) -> t -> ('a, 'b) Protocol_conv__Runtime.result
      val of_result :
        ('a -> t) -> ('b -> t) -> ('a, 'b) Protocol_conv__Runtime.result -> t
      val to_int : t -> int
      val of_int : int -> t
      val to_int32 : t -> int32
      val of_int32 : int32 -> t
      val to_int64 : t -> int64
      val of_int64 : int64 -> t
      val to_nativeint : t -> nativeint
      val of_nativeint : nativeint -> t
      val to_char : t -> char
      val of_char : char -> t
      val to_string : t -> string
      val of_string : string -> t
      val to_float : t -> float
      val of_float : float -> t
      val to_bool : t -> bool
      val of_bool : bool -> t
      val to_bytes : t -> bytes
      val of_bytes : bytes -> t
      val to_unit : t -> unit
      val of_unit : unit -> t("DEBUG:rule", [Tag4 (("Parameters", 465), ((Tag1 ([(("field_name", 472), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -14), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("drivers/generic/ppx_protocol_driver.mli", 7, 153, 155), ("drivers/generic/ppx_protocol_driver.mli", 7, 153, 187), 0), 0, Tag1 ("Ppx_protocol_driver", 0)), 0); (("variant_name", 473), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("drivers/generic/ppx_protocol_driver.mli", 14, 322, 324), ("drivers/generic/ppx_protocol_driver.mli", 14, 322, 358), 0), 0, Tag1 ("Ppx_protocol_driver", 1)), 0); (("constructors_without_arguments_as_string", 474), ((Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -8), 0, (("drivers/generic/ppx_protocol_driver.mli", 22, 591, 593), ("drivers/generic/ppx_protocol_driver.mli", 22, 591, 643), 0), 0, Tag1 ("Ppx_protocol_driver", 2)), 0); (("omit_default_values", 475), ((Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -7), 0, (("drivers/generic/ppx_protocol_driver.mli", 31, 880, 882), ("drivers/generic/ppx_protocol_driver.mli", 31, 880, 911), 0), 0, Tag1 ("Ppx_protocol_driver", 3)), 0); (("eager", 476), ((Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -6), 0, (("drivers/generic/ppx_protocol_driver.mli", 41, 1198, 1200), ("drivers/generic/ppx_protocol_driver.mli", 41, 1198, 1215), 0), 0, Tag1 ("Ppx_protocol_driver", 4)), 0); (("strict", 477), ((Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -5), 0, (("drivers/generic/ppx_protocol_driver.mli", 47, 1321, 1323), ("drivers/generic/ppx_protocol_driver.mli", 47, 1321, 1339), 0), 0, Tag1 ("Ppx_protocol_driver", 5)), 0)])), 0, (("drivers/generic/ppx_protocol_driver.mli", 1, 0, 0), ("drivers/generic/ppx_protocol_driver.mli", 48, 1340, 1343), 0), Tag1 ("Ppx_protocol_driver", 6)), 0); Tag3 (("Default_parameters", 466), 0, (((("Parameters", 465))), 0, (("drivers/generic/ppx_protocol_driver.mli", 51, 1378, 1378), ("drivers/generic/ppx_protocol_driver.mli", 51, 1378, 1416), 0), Tag1 ("Ppx_protocol_driver", 7)), 0, 0); Tag4 (("Driver", 467), ((Tag1 ([Tag1 (("t", 478), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("drivers/generic/ppx_protocol_driver.mli", 54, 1443, 1445), ("drivers/generic/ppx_protocol_driver.mli", 54, 1443, 1451), 0), 0, 0, 0, Tag1 ("Ppx_protocol_driver", 8)), 1, 0); (("to_string_hum", 479), ((Tag1 (0, (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -104), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -103), 0), 100000000, 0, -102), 0, (("drivers/generic/ppx_protocol_driver.mli", 55, 1452, 1454), ("drivers/generic/ppx_protocol_driver.mli", 55, 1452, 1484), 0), 0, Tag1 ("Ppx_protocol_driver", 9)), 0); (("to_list", 480), ((Tag1 (0, (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -101), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -100)], (0)), 100000000, 0, -99), 0), 100000000, 0, -98), 0, (("drivers/generic/ppx_protocol_driver.mli", 57, 1486, 1488), ("drivers/generic/ppx_protocol_driver.mli", 57, 1486, 1512), 0), 0, Tag1 ("Ppx_protocol_driver", 10)), 0); (("of_list", 481), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -97)], (0)), 100000000, 0, -96), (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -95), 0), 100000000, 0, -94), 0, (("drivers/generic/ppx_protocol_driver.mli", 58, 1513, 1515), ("drivers/generic/ppx_protocol_driver.mli", 58, 1513, 1539), 0), 0, Tag1 ("Ppx_protocol_driver", 11)), 0); (("is_list", 482), ((Tag1 (0, (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -93), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -92), 0), 100000000, 0, -91), 0, (("drivers/generic/ppx_protocol_driver.mli", 59, 1540, 1542), ("drivers/generic/ppx_protocol_driver.mli", 59, 1540, 1564), 0), 0, Tag1 ("Ppx_protocol_driver", 12)), 0); (("to_alist", 483), ((Tag1 (0, (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -90), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -88); (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -89)]), 100000000, 0, -87)], (0)), 100000000, 0, -86), 0), 100000000, 0, -85), 0, (("drivers/generic/ppx_protocol_driver.mli", 61, 1566, 1568), ("drivers/generic/ppx_protocol_driver.mli", 61, 1566, 1604), 0), 0, Tag1 ("Ppx_protocol_driver", 13)), 0); (("of_alist", 484), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -83); (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -84)]), 100000000, 0, -82)], (0)), 100000000, 0, -81), (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -80), 0), 100000000, 0, -79), 0, (("drivers/generic/ppx_protocol_driver.mli", 62, 1605, 1607), ("drivers/generic/ppx_protocol_driver.mli", 62, 1605, 1643), 0), 0, Tag1 ("Ppx_protocol_driver", 14)), 0); (("is_alist", 485), ((Tag1 (0, (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -78), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0, (("drivers/generic/ppx_protocol_driver.mli", 63, 1644, 1646), ("drivers/generic/ppx_protocol_driver.mli", 63, 1644, 1669), 0), 0, Tag1 ("Ppx_protocol_driver", 15)), 0); (("to_char", 486), ((Tag1 (0, (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -75), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -74), 0), 100000000, 0, -73), 0, (("drivers/generic/ppx_protocol_driver.mli", 65, 1671, 1673), ("drivers/generic/ppx_protocol_driver.mli", 65, 1671, 1695), 0), 0, Tag1 ("Ppx_protocol_driver", 16)), 0); (("of_char", 487), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -72), (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -71), 0), 100000000, 0, -70), 0, (("drivers/generic/ppx_protocol_driver.mli", 66, 1696, 1698), ("drivers/generic/ppx_protocol_driver.mli", 66, 1696, 1720), 0), 0, Tag1 ("Ppx_protocol_driver", 17)), 0); (("to_int", 488), ((Tag1 (0, (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -69), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -68), 0), 100000000, 0, -67), 0, (("drivers/generic/ppx_protocol_driver.mli", 68, 1722, 1724), ("drivers/generic/ppx_protocol_driver.mli", 68, 1722, 1744), 0), 0, Tag1 ("Ppx_protocol_driver", 18)), 0); (("of_int", 489), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -66), (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -65), 0), 100000000, 0, -64), 0, (("drivers/generic/ppx_protocol_driver.mli", 69, 1745, 1747), ("drivers/generic/ppx_protocol_driver.mli", 69, 1745, 1767), 0), 0, Tag1 ("Ppx_protocol_driver", 19)), 0); (("to_int32", 490), ((Tag1 (0, (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -63), (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("drivers/generic/ppx_protocol_driver.mli", 71, 1769, 1771), ("drivers/generic/ppx_protocol_driver.mli", 71, 1769, 1795), 0), 0, Tag1 ("Ppx_protocol_driver", 20)), 0); (("of_int32", 491), ((Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -60), (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("drivers/generic/ppx_protocol_driver.mli", 72, 1796, 1798), ("drivers/generic/ppx_protocol_driver.mli", 72, 1796, 1822), 0), 0, Tag1 ("Ppx_protocol_driver", 21)), 0); (("to_int64", 492), ((Tag1 (0, (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -57), (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -56), 0), 100000000, 0, -55), 0, (("drivers/generic/ppx_protocol_driver.mli", 74, 1824, 1826), ("drivers/generic/ppx_protocol_driver.mli", 74, 1824, 1850), 0), 0, Tag1 ("Ppx_protocol_driver", 22)), 0); (("of_int64", 493), ((Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -54), (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -53), 0), 100000000, 0, -52), 0, (("drivers/generic/ppx_protocol_driver.mli", 75, 1851, 1853), ("drivers/generic/ppx_protocol_driver.mli", 75, 1851, 1877), 0), 0, Tag1 ("Ppx_protocol_driver", 23)), 0); (("to_nativeint", 494), ((Tag1 (0, (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -51), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0, (("drivers/generic/ppx_protocol_driver.mli", 77, 1879, 1881), ("drivers/generic/ppx_protocol_driver.mli", 77, 1879, 1913), 0), 0, Tag1 ("Ppx_protocol_driver", 24)), 0); (("of_nativeint", 495), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -48), (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("drivers/generic/ppx_protocol_driver.mli", 78, 1914, 1916), ("drivers/generic/ppx_protocol_driver.mli", 78, 1914, 1948), 0), 0, Tag1 ("Ppx_protocol_driver", 25)), 0); (("to_float", 496), ((Tag1 (0, (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -45), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("drivers/generic/ppx_protocol_driver.mli", 80, 1950, 1952), ("drivers/generic/ppx_protocol_driver.mli", 80, 1950, 1976), 0), 0, Tag1 ("Ppx_protocol_driver", 26)), 0); (("of_float", 497), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -42), (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("drivers/generic/ppx_protocol_driver.mli", 81, 1977, 1979), ("drivers/generic/ppx_protocol_driver.mli", 81, 1977, 2003), 0), 0, Tag1 ("Ppx_protocol_driver", 27)), 0); (("to_string", 498), ((Tag1 (0, (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -39), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -38), 0), 100000000, 0, -37), 0, (("drivers/generic/ppx_protocol_driver.mli", 83, 2005, 2007), ("drivers/generic/ppx_protocol_driver.mli", 83, 2005, 2033), 0), 0, Tag1 ("Ppx_protocol_driver", 28)), 0); (("of_string", 499), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -36), (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("drivers/generic/ppx_protocol_driver.mli", 84, 2034, 2036), ("drivers/generic/ppx_protocol_driver.mli", 84, 2034, 2062), 0), 0, Tag1 ("Ppx_protocol_driver", 29)), 0); (("is_string", 500), ((Tag1 (0, (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -33), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("drivers/generic/ppx_protocol_driver.mli", 85, 2063, 2065), ("drivers/generic/ppx_protocol_driver.mli", 85, 2063, 2089), 0), 0, Tag1 ("Ppx_protocol_driver", 30)), 0); (("to_bool", 501), ((Tag1 (0, (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -30), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("drivers/generic/ppx_protocol_driver.mli", 87, 2091, 2093), ("drivers/generic/ppx_protocol_driver.mli", 87, 2091, 2115), 0), 0, Tag1 ("Ppx_protocol_driver", 31)), 0); (("of_bool", 502), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -27), (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0, (("drivers/generic/ppx_protocol_driver.mli", 88, 2116, 2118), ("drivers/generic/ppx_protocol_driver.mli", 88, 2116, 2140), 0), 0, Tag1 ("Ppx_protocol_driver", 32)), 0); (("to_bytes", 503), ((Tag1 (0, (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -24), (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("drivers/generic/ppx_protocol_driver.mli", 90, 2142, 2144), ("drivers/generic/ppx_protocol_driver.mli", 90, 2142, 2168), 0), 0, Tag1 ("Ppx_protocol_driver", 33)), 0); (("of_bytes", 504), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -21), (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("drivers/generic/ppx_protocol_driver.mli", 91, 2169, 2171), ("drivers/generic/ppx_protocol_driver.mli", 91, 2169, 2195), 0), 0, Tag1 ("Ppx_protocol_driver", 34)), 0); (("null", 505), ((Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -18), 0, (("drivers/generic/ppx_protocol_driver.mli", 93, 2197, 2199), ("drivers/generic/ppx_protocol_driver.mli", 93, 2197, 2210), 0), 0, Tag1 ("Ppx_protocol_driver", 35)), 0); (("is_null", 506), ((Tag1 (0, (Tag3 ((("t", 478)), 0, (0)), 100000000, 0, -17), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("drivers/generic/ppx_protocol_driver.mli", 94, 2211, 2213), ("drivers/generic/ppx_protocol_driver.mli", 94, 2211, 2235), 0), 0, Tag1 ("Ppx_protocol_driver", 36)), 0)])), 0, (("drivers/generic/ppx_protocol_driver.mli", 53, 1418, 1418), ("drivers/generic/ppx_protocol_driver.mli", 95, 2236, 2239), 0), Tag1 ("Ppx_protocol_driver", 37)), 0); (("mangle", 468), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("drivers/generic/ppx_protocol_driver.mli", 100, 2341, 2341), ("drivers/generic/ppx_protocol_driver.mli", 100, 2341, 2369), 0), 0, Tag1 ("Ppx_protocol_driver", 38)), 0); Tag3 (("Make", 469), 0, (Tag2 (((("D", 470)), ((("Driver", 467)))), Tag2 (((("P", 471)), ((("Parameters", 465)))), Tag1 ([Tag1 (("t", 507), (0, 0, 0, 1, ((Tag3 (Tag1 ((("D", 470)), "t"), 0, (0)), 100000000, 0, -318)), 0, 0, 0, 0, (("drivers/generic/ppx_protocol_driver.mli", 103, 2424, 2460), ("drivers/generic/ppx_protocol_driver.mli", 103, 2424, 2472), 0), 0, 0, 0, Tag1 ("Ppx_protocol_driver", 41)), 1, 0); Tag1 (("error", 508), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("runtime/runtime.ml", 48, 1380, 1382), ("runtime/runtime.ml", 48, 1380, 1392), 0), 0, 0, 0, Tag1 ("Protocol_conv__Runtime", 33)), 1, 0); Tag2 (("Protocol_error", 509), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((("error", 508)), 0, (0)), 100000000, 0, -317)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Protocol_conv__Runtime", 34)), 2, 0); (("make_error", 510), ((Tag1 (Tag1 ("value"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -316)], (0)), 100000000, 0, -315), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -314), (Tag3 ((("error", 508)), 0, (0)), 100000000, 0, -313), 0), 100000000, 0, -312), 0), 100000000, 0, -311), 0, (("runtime/runtime.ml", 55, 1626, 1628), ("runtime/runtime.ml", 55, 1626, 1672), 0), 0, Tag1 ("Protocol_conv__Runtime", 35)), 0); (("error_to_string_hum", 511), ((Tag1 (0, (Tag3 ((("error", 508)), 0, (0)), 100000000, 0, -310), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -309), 0), 100000000, 0, -308), 0, (("runtime/runtime.ml", 58, 1732, 1734), ("runtime/runtime.ml", 58, 1732, 1774), 0), 0, Tag1 ("Protocol_conv__Runtime", 36)), 0); (("to_string_hum", 512), ((Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -307), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -306), 0), 100000000, 0, -305), 0, (("runtime/runtime.ml", 61, 1807, 1809), ("runtime/runtime.ml", 61, 1807, 1839), 0), 0, Tag1 ("Protocol_conv__Runtime", 37)), 0); (("try_with", 513), ((Tag1 (0, (Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -304), ((("v")), 100000000, 0, -300), 0), 100000000, 0, -303), (Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -302), (Tag3 (Tag1 ((Tag2 ("Protocol_conv__Runtime")), "result"), [((("v")), 100000000, 0, -300); (Tag3 ((("error", 508)), 0, (0)), 100000000, 0, -301)], (0)), 100000000, 0, -299), 0), 100000000, 0, -298), 0), 100000000, 0, -297), 0, (("runtime/runtime.ml", 64, 1922, 1924), ("runtime/runtime.ml", 64, 1922, 1974), 0), 0, Tag1 ("Protocol_conv__Runtime", 38)), 0); (("to_variant", 514), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Protocol_conv__Runtime")), "Variant_in"), "t"), [(Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -296); ((("a")), 100000000, 0, -292)], (0)), 100000000, 0, -295)], (0)), 100000000, 0, -294), (Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -293), ((("a")), 100000000, 0, -292), 0), 100000000, 0, -291), 0), 100000000, 0, -290), 0, (("runtime/runtime.ml", 66, 1976, 1978), ("runtime/runtime.ml", 66, 1976, 2030), 0), 0, Tag1 ("Protocol_conv__Runtime", 39)), 0); (("of_variant", 515), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -289), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Protocol_conv__Runtime")), "Tuple_out"), "t"), [(Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -287); ((("a")), 100000000, 0, -285); (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -288)], (0)), 100000000, 0, -286), ((("a")), 100000000, 0, -285), 0), 100000000, 0, -284), 0), 100000000, 0, -283), 0, (("runtime/runtime.ml", 67, 2031, 2033), ("runtime/runtime.ml", 67, 2031, 2087), 0), 0, Tag1 ("Protocol_conv__Runtime", 40)), 0); (("to_record", 516), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Protocol_conv__Runtime")), "Record_in"), "t"), [(Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -282); ((("constr")), 100000000, 0, -280); ((("b")), 100000000, 0, -278)], (0)), 100000000, 0, -281), (Tag1 (0, ((("constr")), 100000000, 0, -280), (Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -279), ((("b")), 100000000, 0, -278), 0), 100000000, 0, -277), 0), 100000000, 0, -276), 0), 100000000, 0, -275), 0, (("runtime/runtime.ml", 69, 2089, 2091), ("runtime/runtime.ml", 69, 2089, 2157), 0), 0, Tag1 ("Protocol_conv__Runtime", 41)), 0); (("of_record", 517), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Protocol_conv__Runtime")), "Record_out"), "t"), [(Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -273); ((("a")), 100000000, 0, -271); (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -274)], (0)), 100000000, 0, -272), ((("a")), 100000000, 0, -271), 0), 100000000, 0, -270), 0, (("runtime/runtime.ml", 70, 2158, 2160), ("runtime/runtime.ml", 70, 2158, 2205), 0), 0, Tag1 ("Protocol_conv__Runtime", 42)), 0); (("to_tuple", 518), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Protocol_conv__Runtime")), "Tuple_in"), "t"), [(Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -269); ((("constr")), 100000000, 0, -267); ((("b")), 100000000, 0, -265)], (0)), 100000000, 0, -268), (Tag1 (0, ((("constr")), 100000000, 0, -267), (Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -266), ((("b")), 100000000, 0, -265), 0), 100000000, 0, -264), 0), 100000000, 0, -263), 0), 100000000, 0, -262), 0, (("runtime/runtime.ml", 72, 2207, 2209), ("runtime/runtime.ml", 72, 2207, 2274), 0), 0, Tag1 ("Protocol_conv__Runtime", 43)), 0); (("of_tuple", 519), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Protocol_conv__Runtime")), "Tuple_out"), "t"), [(Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -260); ((("a")), 100000000, 0, -258); (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -261)], (0)), 100000000, 0, -259), ((("a")), 100000000, 0, -258), 0), 100000000, 0, -257), 0, (("runtime/runtime.ml", 73, 2275, 2277), ("runtime/runtime.ml", 73, 2275, 2321), 0), 0, Tag1 ("Protocol_conv__Runtime", 44)), 0); (("to_option", 520), ((Tag1 (0, (Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -256), ((("a")), 100000000, 0, -253), 0), 100000000, 0, -255), (Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -254), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -253)], (0)), 100000000, 0, -252), 0), 100000000, 0, -251), 0), 100000000, 0, -250), 0, (("runtime/runtime.ml", 75, 2323, 2325), ("runtime/runtime.ml", 75, 2323, 2368), 0), 0, Tag1 ("Protocol_conv__Runtime", 45)), 0); (("of_option", 521), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -247), (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -249), 0), 100000000, 0, -248), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -247)], (0)), 100000000, 0, -246), (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -245), 0), 100000000, 0, -244), 0), 100000000, 0, -243), 0, (("runtime/runtime.ml", 76, 2369, 2371), ("runtime/runtime.ml", 76, 2369, 2414), 0), 0, Tag1 ("Protocol_conv__Runtime", 46)), 0); (("to_ref", 522), ((Tag1 (0, (Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -242), ((("a")), 100000000, 0, -239), 0), 100000000, 0, -241), (Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -240), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [((("a")), 100000000, 0, -239)], (0)), 100000000, 0, -238), 0), 100000000, 0, -237), 0), 100000000, 0, -236), 0, (("runtime/runtime.ml", 77, 2415, 2417), ("runtime/runtime.ml", 77, 2415, 2457), 0), 0, Tag1 ("Protocol_conv__Runtime", 47)), 0); (("of_ref", 523), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -233), (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -235), 0), 100000000, 0, -234), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [((("a")), 100000000, 0, -233)], (0)), 100000000, 0, -232), (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -231), 0), 100000000, 0, -230), 0), 100000000, 0, -229), 0, (("runtime/runtime.ml", 78, 2458, 2460), ("runtime/runtime.ml", 78, 2458, 2500), 0), 0, Tag1 ("Protocol_conv__Runtime", 48)), 0); (("to_list", 524), ((Tag1 (0, (Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -228), ((("a")), 100000000, 0, -225), 0), 100000000, 0, -227), (Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -226), (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -225)], (0)), 100000000, 0, -224), 0), 100000000, 0, -223), 0), 100000000, 0, -222), 0, (("runtime/runtime.ml", 79, 2501, 2503), ("runtime/runtime.ml", 79, 2501, 2544), 0), 0, Tag1 ("Protocol_conv__Runtime", 49)), 0); (("of_list", 525), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -219), (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -221), 0), 100000000, 0, -220), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -219)], (0)), 100000000, 0, -218), (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -217), 0), 100000000, 0, -216), 0), 100000000, 0, -215), 0, (("runtime/runtime.ml", 80, 2545, 2547), ("runtime/runtime.ml", 80, 2545, 2588), 0), 0, Tag1 ("Protocol_conv__Runtime", 50)), 0); (("to_array", 526), ((Tag1 (0, (Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -214), ((("a")), 100000000, 0, -211), 0), 100000000, 0, -213), (Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -212), (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -211)], (0)), 100000000, 0, -210), 0), 100000000, 0, -209), 0), 100000000, 0, -208), 0, (("runtime/runtime.ml", 81, 2589, 2591), ("runtime/runtime.ml", 81, 2589, 2633), 0), 0, Tag1 ("Protocol_conv__Runtime", 51)), 0); (("of_array", 527), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -205), (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -207), 0), 100000000, 0, -206), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -205)], (0)), 100000000, 0, -204), (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -203), 0), 100000000, 0, -202), 0), 100000000, 0, -201), 0, (("runtime/runtime.ml", 82, 2634, 2636), ("runtime/runtime.ml", 82, 2634, 2678), 0), 0, Tag1 ("Protocol_conv__Runtime", 52)), 0); (("to_lazy_t", 528), ((Tag1 (0, (Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -200), ((("a")), 100000000, 0, -197), 0), 100000000, 0, -199), (Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -198), (Tag3 ((Tag3 ("lazy_t", 14)), [((("a")), 100000000, 0, -197)], (0)), 100000000, 0, -196), 0), 100000000, 0, -195), 0), 100000000, 0, -194), 0, (("runtime/runtime.ml", 83, 2679, 2681), ("runtime/runtime.ml", 83, 2679, 2724), 0), 0, Tag1 ("Protocol_conv__Runtime", 53)), 0); (("of_lazy_t", 529), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -191), (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -193), 0), 100000000, 0, -192), (Tag1 (0, (Tag3 ((Tag3 ("lazy_t", 14)), [((("a")), 100000000, 0, -191)], (0)), 100000000, 0, -190), (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -189), 0), 100000000, 0, -188), 0), 100000000, 0, -187), 0, (("runtime/runtime.ml", 84, 2725, 2727), ("runtime/runtime.ml", 84, 2725, 2770), 0), 0, Tag1 ("Protocol_conv__Runtime", 54)), 0); (("to_result", 530), ((Tag1 (0, (Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -186), ((("a")), 100000000, 0, -180), 0), 100000000, 0, -185), (Tag1 (0, (Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -184), ((("b")), 100000000, 0, -181), 0), 100000000, 0, -183), (Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -182), (Tag3 (Tag1 ((Tag2 ("Protocol_conv__Runtime")), "result"), [((("a")), 100000000, 0, -180); ((("b")), 100000000, 0, -181)], (0)), 100000000, 0, -179), 0), 100000000, 0, -178), 0), 100000000, 0, -177), 0), 100000000, 0, -176), 0, (("runtime/runtime.ml", 85, 2771, 2773), ("runtime/runtime.ml", 85, 2771, 2835), 0), 0, Tag1 ("Protocol_conv__Runtime", 55)), 0); (("of_result", 531), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -170), (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -175), 0), 100000000, 0, -174), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -171), (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -173), 0), 100000000, 0, -172), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Protocol_conv__Runtime")), "result"), [((("a")), 100000000, 0, -170); ((("b")), 100000000, 0, -171)], (0)), 100000000, 0, -169), (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -168), 0), 100000000, 0, -167), 0), 100000000, 0, -166), 0), 100000000, 0, -165), 0, (("runtime/runtime.ml", 86, 2836, 2838), ("runtime/runtime.ml", 86, 2836, 2900), 0), 0, Tag1 ("Protocol_conv__Runtime", 56)), 0); (("to_int", 532), ((Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -164), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -163), 0), 100000000, 0, -162), 0, (("runtime/runtime.ml", 87, 2901, 2903), ("runtime/runtime.ml", 87, 2901, 2927), 0), 0, Tag1 ("Protocol_conv__Runtime", 57)), 0); (("of_int", 533), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -161), (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -160), 0), 100000000, 0, -159), 0, (("runtime/runtime.ml", 88, 2928, 2930), ("runtime/runtime.ml", 88, 2928, 2954), 0), 0, Tag1 ("Protocol_conv__Runtime", 58)), 0); (("to_int32", 534), ((Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -158), (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -157), 0), 100000000, 0, -156), 0, (("runtime/runtime.ml", 89, 2955, 2957), ("runtime/runtime.ml", 89, 2955, 2983), 0), 0, Tag1 ("Protocol_conv__Runtime", 59)), 0); (("of_int32", 535), ((Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -155), (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -154), 0), 100000000, 0, -153), 0, (("runtime/runtime.ml", 90, 2984, 2986), ("runtime/runtime.ml", 90, 2984, 3012), 0), 0, Tag1 ("Protocol_conv__Runtime", 60)), 0); (("to_int64", 536), ((Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -152), (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -151), 0), 100000000, 0, -150), 0, (("runtime/runtime.ml", 91, 3013, 3015), ("runtime/runtime.ml", 91, 3013, 3041), 0), 0, Tag1 ("Protocol_conv__Runtime", 61)), 0); (("of_int64", 537), ((Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -149), (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -148), 0), 100000000, 0, -147), 0, (("runtime/runtime.ml", 92, 3042, 3044), ("runtime/runtime.ml", 92, 3042, 3070), 0), 0, Tag1 ("Protocol_conv__Runtime", 62)), 0); (("to_nativeint", 538), ((Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -146), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -145), 0), 100000000, 0, -144), 0, (("runtime/runtime.ml", 93, 3071, 3073), ("runtime/runtime.ml", 93, 3071, 3105), 0), 0, Tag1 ("Protocol_conv__Runtime", 63)), 0); (("of_nativeint", 539), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -143), (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -142), 0), 100000000, 0, -141), 0, (("runtime/runtime.ml", 94, 3106, 3108), ("runtime/runtime.ml", 94, 3106, 3140), 0), 0, Tag1 ("Protocol_conv__Runtime", 64)), 0); (("to_char", 540), ((Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -140), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -139), 0), 100000000, 0, -138), 0, (("runtime/runtime.ml", 95, 3141, 3143), ("runtime/runtime.ml", 95, 3141, 3168), 0), 0, Tag1 ("Protocol_conv__Runtime", 65)), 0); (("of_char", 541), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -137), (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -136), 0), 100000000, 0, -135), 0, (("runtime/runtime.ml", 96, 3169, 3171), ("runtime/runtime.ml", 96, 3169, 3196), 0), 0, Tag1 ("Protocol_conv__Runtime", 66)), 0); (("to_string", 542), ((Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -134), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -133), 0), 100000000, 0, -132), 0, (("runtime/runtime.ml", 97, 3197, 3199), ("runtime/runtime.ml", 97, 3197, 3226), 0), 0, Tag1 ("Protocol_conv__Runtime", 67)), 0); (("of_string", 543), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -131), (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -130), 0), 100000000, 0, -129), 0, (("runtime/runtime.ml", 98, 3227, 3229), ("runtime/runtime.ml", 98, 3227, 3256), 0), 0, Tag1 ("Protocol_conv__Runtime", 68)), 0); (("to_float", 544), ((Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -128), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -127), 0), 100000000, 0, -126), 0, (("runtime/runtime.ml", 99, 3257, 3259), ("runtime/runtime.ml", 99, 3257, 3285), 0), 0, Tag1 ("Protocol_conv__Runtime", 69)), 0); (("of_float", 545), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -125), (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -124), 0), 100000000, 0, -123), 0, (("runtime/runtime.ml", 100, 3286, 3288), ("runtime/runtime.ml", 100, 3286, 3314), 0), 0, Tag1 ("Protocol_conv__Runtime", 70)), 0); (("to_bool", 546), ((Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -122), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -121), 0), 100000000, 0, -120), 0, (("runtime/runtime.ml", 101, 3315, 3317), ("runtime/runtime.ml", 101, 3315, 3342), 0), 0, Tag1 ("Protocol_conv__Runtime", 71)), 0); (("of_bool", 547), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -119), (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -118), 0), 100000000, 0, -117), 0, (("runtime/runtime.ml", 102, 3343, 3345), ("runtime/runtime.ml", 102, 3343, 3370), 0), 0, Tag1 ("Protocol_conv__Runtime", 72)), 0); (("to_bytes", 548), ((Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -116), (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -115), 0), 100000000, 0, -114), 0, (("runtime/runtime.ml", 103, 3371, 3373), ("runtime/runtime.ml", 103, 3371, 3399), 0), 0, Tag1 ("Protocol_conv__Runtime", 73)), 0); (("of_bytes", 549), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -113), (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -112), 0), 100000000, 0, -111), 0, (("runtime/runtime.ml", 104, 3400, 3402), ("runtime/runtime.ml", 104, 3400, 3428), 0), 0, Tag1 ("Protocol_conv__Runtime", 74)), 0); (("to_unit", 550), ((Tag1 (0, (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -110), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -109), 0), 100000000, 0, -108), 0, (("runtime/runtime.ml", 105, 3429, 3431), ("runtime/runtime.ml", 105, 3429, 3456), 0), 0, Tag1 ("Protocol_conv__Runtime", 75)), 0); (("of_unit", 551), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -107), (Tag3 ((("t", 507)), 0, (0)), 100000000, 0, -106), 0), 100000000, 0, -105), 0, (("runtime/runtime.ml", 106, 3457, 3459), ("runtime/runtime.ml", 106, 3457, 3484), 0), 0, Tag1 ("Protocol_conv__Runtime", 76)), 0)]))), 0, (("drivers/generic/ppx_protocol_driver.mli", 102, 2371, 2371), ("drivers/generic/ppx_protocol_driver.mli", 103, 2424, 2472), 0), Tag1 ("Ppx_protocol_driver", 42)), 0, 0)], "Ppx_protocol_driver", [("Ppx_protocol_driver", ("\197\003f\147\130^\164\tj\176\245'\\G\nr")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Printf", ("\215<\139]\021\142\224E\245m\198qc(W\229")); ("Stdlib__ListLabels", ("*\194\012\191\020%\170\249m\002\180\178hk\205\220")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__ArrayLabels", ("\029\143d\025\218v\003\007\212jC\235/\205\006\198")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Protocol_conv__Runtime", ("\213#\128p\208@\159\n\0300\003\162R\197}a")); ("Protocol_conv", ("\144\028*\128\224\209 \162\172\128\154\003y\1343\236")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

    end
