type token =
    Description of (string * string option)
  | See_url of string
  | See_file of string
  | See_doc of string
  | T_PARAM
  | T_AUTHOR
  | T_VERSION
  | T_SEE
  | T_SINCE
  | T_BEFORE
  | T_DEPRECATED
  | T_RAISES
  | T_RETURN
  | T_CUSTOM of string
  | EOF
  | Desc of string
val main :
  (Lexing.lexbuf -> token) ->
  Lexing.lexbuf -> (string * string option) option
val info_part2 : (Lexing.lexbuf -> token) -> Lexing.lexbuf -> unit
val see_info :
  ("DEBUG:rule", [Tag1 (("token", 332), (0, 0, Tag1 ([(("Description", 270), ([(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -30); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -32)], (0)), 100000000, 0, -31)]), 100000000, 0, -29)]), 0, (("odoc_parser.mli", 2, 13, 15), ("odoc_parser.mli", 6, 112, 113), 0), 0, Tag1 ("Odoc_parser", 1)); (("See_url", 271), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -33)]), 0, (("odoc_parser.mli", 7, 114, 116), ("odoc_parser.mli", 11, 192, 193), 0), 0, Tag1 ("Odoc_parser", 2)); (("See_file", 272), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -34)]), 0, (("odoc_parser.mli", 12, 194, 196), ("odoc_parser.mli", 16, 273, 274), 0), 0, Tag1 ("Odoc_parser", 3)); (("See_doc", 273), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -35)]), 0, (("odoc_parser.mli", 17, 275, 277), ("odoc_parser.mli", 21, 353, 354), 0), 0, Tag1 ("Odoc_parser", 4)); (("T_PARAM", 274), (0), 0, (("odoc_parser.mli", 22, 355, 357), ("odoc_parser.mli", 22, 355, 366), 0), 0, Tag1 ("Odoc_parser", 5)); (("T_AUTHOR", 275), (0), 0, (("odoc_parser.mli", 23, 367, 369), ("odoc_parser.mli", 23, 367, 379), 0), 0, Tag1 ("Odoc_parser", 6)); (("T_VERSION", 276), (0), 0, (("odoc_parser.mli", 24, 380, 382), ("odoc_parser.mli", 24, 380, 393), 0), 0, Tag1 ("Odoc_parser", 7)); (("T_SEE", 277), (0), 0, (("odoc_parser.mli", 25, 394, 396), ("odoc_parser.mli", 25, 394, 403), 0), 0, Tag1 ("Odoc_parser", 8)); (("T_SINCE", 278), (0), 0, (("odoc_parser.mli", 26, 404, 406), ("odoc_parser.mli", 26, 404, 415), 0), 0, Tag1 ("Odoc_parser", 9)); (("T_BEFORE", 279), (0), 0, (("odoc_parser.mli", 27, 416, 418), ("odoc_parser.mli", 27, 416, 428), 0), 0, Tag1 ("Odoc_parser", 10)); (("T_DEPRECATED", 280), (0), 0, (("odoc_parser.mli", 28, 429, 431), ("odoc_parser.mli", 28, 429, 445), 0), 0, Tag1 ("Odoc_parser", 11)); (("T_RAISES", 281), (0), 0, (("odoc_parser.mli", 29, 446, 448), ("odoc_parser.mli", 29, 446, 458), 0), 0, Tag1 ("Odoc_parser", 12)); (("T_RETURN", 282), (0), 0, (("odoc_parser.mli", 30, 459, 461), ("odoc_parser.mli", 30, 459, 471), 0), 0, Tag1 ("Odoc_parser", 13)); (("T_CUSTOM", 283), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -36)]), 0, (("odoc_parser.mli", 31, 472, 474), ("odoc_parser.mli", 35, 551, 552), 0), 0, Tag1 ("Odoc_parser", 14)); (("EOF", 284), (0), 0, (("odoc_parser.mli", 36, 553, 555), ("odoc_parser.mli", 36, 553, 560), 0), 0, Tag1 ("Odoc_parser", 15)); (("Desc", 285), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -37)]), 0, (("odoc_parser.mli", 37, 561, 563), ("odoc_parser.mli", 41, 636, 637), 0), 0, Tag1 ("Odoc_parser", 16))], 0), 1, 0, 0, 0, 0, 0, (("odoc_parser.mli", 1, 0, 0), ("odoc_parser.mli", 41, 636, 637), 0), 0, 0, 0, Tag1 ("Odoc_parser", 0)), 1, 0); (("main", 333), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -28), (Tag3 ((("token", 332)), 0, (0)), 100000000, 0, -27), 0), 100000000, 0, -26), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -25), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -22); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -24)], (0)), 100000000, 0, -23)]), 100000000, 0, -21)], (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("odoc_parser.mli", 43, 639, 639), ("odoc_parser.mli", 44, 650, 731), 0), 0, Tag1 ("Odoc_parser", 17)), 0); (("info_part2", 334), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -17), (Tag3 ((("token", 332)), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -14), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("odoc_parser.mli", 45, 732, 732), ("odoc_parser.mli", 46, 749, 801), 0), 0, Tag1 ("Odoc_parser", 18)), 0); (("see_info", 335), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -10), (Tag3 ((("token", 332)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -7), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Odoc_types")), "see_ref"), 0, (0)), 100000000, 0, -5); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6)]), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("odoc_parser.mli", 47, 802, 802), ("odoc_parser.mli", 48, 817, 892), 0), 0, Tag1 ("Odoc_parser", 19)), 0)], "Odoc_parser", [("Odoc_parser", ("aE&\169\175R;.\216\141\185\224\204(\158\186")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Odoc_types", ("<k{\137\201\170z%E\221\170\147\151\127\189\015")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
(Lexing.lexbuf -> token) -> Lexing.lexbuf -> Odoc_types.see_ref * string
