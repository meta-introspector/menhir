val implementation : string -> Parsetree.structure
("DEBUG:rule", [(("implementation", 344), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure"), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("lib/pparse_compat.mli", 1, 0, 0), ("lib/pparse_compat.mli", 1, 0, 49), 0), 0, Tag1 ("Pparse_compat", 2)), 0); (("interface", 345), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4), (Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature"), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("lib/pparse_compat.mli", 2, 50, 50), ("lib/pparse_compat.mli", 2, 50, 94), 0), 0, Tag1 ("Pparse_compat", 3)), 0)], "Pparse_compat", [("Pparse_compat", ("\158\128.MjG\150+\250\213\191\t\211:PE")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216"))], [(0)])
val interface : string -> Parsetree.signature
