type t = string
val get_utf_8_uchar : t -> int -> Uchar.utf_decode
val is_valid_utf_8 : t -> bool
val get_utf_16be_uchar : t -> int -> Uchar.utf_decode
val is_valid_utf_16be : t -> bool
val get_utf_16le_uchar : t -> int -> Uchar.utf_decode
val is_valid_utf_16le : t -> bool
val empty : string
val of_bytes : bytes -> string
val to_bytes : string -> bytes
val cat : string -> string -> string
val starts_with : prefix:string -> string -> bool
val ends_with : suffix:string -> string -> bool
val fold_left : f:('a -> char -> 'a) -> init:'a -> string -> 'a
val fold_right : f:(char -> 'a -> 'a) -> string -> init:'a -> 'a
val for_all : f:(char -> bool) -> string -> bool
val exists : f:(char -> bool) -> string -> bool
val get_uint8 : string -> int -> int
val get_int8 : string -> int -> int
val get_uint16_ne : string -> int -> int
val get_uint16_be : string -> int -> int
val get_uint16_le : string -> int -> int
val get_int16_ne : string -> int -> int
val get_int16_be : string -> int -> int
val get_int16_le : string -> int -> int
val get_int32_ne : string -> int -> int32
val get_int32_be : string -> int -> int32
val get_int32_le : string -> int -> int32
val get_int64_ne : string -> int -> int64
val get_int64_be : string -> int -> int64
val get_int64_le : string -> int -> int64
val to_seq : t -> char Seq.t
val to_seqi : t -> (int * char) Seq.t
val of_seq : char Seq.t -> t
val equal : t -> t -> bool
val split_on_char : sep:char -> string -> string list
val uppercase_ascii : string -> string
val lowercase_ascii : string -> string
val capitalize_ascii : string -> string
val uncapitalize_ascii : string -> string
val index_from_opt : string -> int -> char -> int option
val rindex_from_opt : string -> int -> char -> int option
val index_opt : string -> char -> int option
val rindex_opt : string -> char -> int option
val init : int -> f:(int -> char) -> string
val mapi : f:(int -> char -> char) -> string -> string
val blit :
  src:string -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit
external unsafe_blit :
  src:string -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit
  = "caml_blit_string" [@@noalloc]
val map : f:(char -> char) -> string -> string
val trim : string -> string
val iteri : f:(int -> char -> unit) -> string -> unit
val compare : t -> t -> int
val make : int -> char -> string
external length : string -> int = "%string_length"
external get : string -> int -> char = "%string_safe_get"
val concat : sep:string -> string list -> string
val contains_from : string -> int -> char -> bool
val rcontains_from : string -> int -> char -> bool
val contains : string -> char -> bool
val sub : string -> pos:int -> len:int -> string
val escaped : string -> string
val iter : f:(char -> unit) -> string -> unit
val index_from : string -> int -> char -> int
val rindex_from : string -> int -> char -> int
val index : string -> char -> int
val rindex : string -> char -> int
("DEBUG:rule", [Tag1 (("t", 526), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -359)), 0, 0, 0, 0, (("stdcompat__stringLabels_s.mli", 3, 21, 21), ("stdcompat__stringLabels_s.mli", 3, 21, 36), 0), 0, 0, 0, Tag1 ("Stdcompat__stringLabels_s", 0)), 1, 0); (("get_utf_8_uchar", 527), ((Tag1 (0, (Tag3 ((("t", 526)), 0, (0)), 100000000, 0, -358), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -357), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Uchar"), "utf_decode"), 0, (0)), 100000000, 0, -356), 0), 100000000, 0, -355), 0), 100000000, 0, -354), 0, (("stdcompat__stringLabels_s.mli", 12, 101, 101), ("stdcompat__stringLabels_s.mli", 12, 101, 151), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 1)), 0); (("is_valid_utf_8", 528), ((Tag1 (0, (Tag3 ((("t", 526)), 0, (0)), 100000000, 0, -353), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -352), 0), 100000000, 0, -351), 0, (("stdcompat__stringLabels_s.mli", 20, 296, 296), ("stdcompat__stringLabels_s.mli", 20, 296, 326), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 2)), 0); (("get_utf_16be_uchar", 529), ((Tag1 (0, (Tag3 ((("t", 526)), 0, (0)), 100000000, 0, -350), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -349), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Uchar"), "utf_decode"), 0, (0)), 100000000, 0, -348), 0), 100000000, 0, -347), 0), 100000000, 0, -346), 0, (("stdcompat__stringLabels_s.mli", 24, 382, 382), ("stdcompat__stringLabels_s.mli", 24, 382, 435), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 3)), 0); (("is_valid_utf_16be", 530), ((Tag1 (0, (Tag3 ((("t", 526)), 0, (0)), 100000000, 0, -345), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -344), 0), 100000000, 0, -343), 0, (("stdcompat__stringLabels_s.mli", 32, 586, 586), ("stdcompat__stringLabels_s.mli", 32, 586, 619), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 4)), 0); (("get_utf_16le_uchar", 531), ((Tag1 (0, (Tag3 ((("t", 526)), 0, (0)), 100000000, 0, -342), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -341), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Uchar"), "utf_decode"), 0, (0)), 100000000, 0, -340), 0), 100000000, 0, -339), 0), 100000000, 0, -338), 0, (("stdcompat__stringLabels_s.mli", 36, 678, 678), ("stdcompat__stringLabels_s.mli", 36, 678, 731), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 5)), 0); (("is_valid_utf_16le", 532), ((Tag1 (0, (Tag3 ((("t", 526)), 0, (0)), 100000000, 0, -337), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -336), 0), 100000000, 0, -335), 0, (("stdcompat__stringLabels_s.mli", 44, 882, 882), ("stdcompat__stringLabels_s.mli", 44, 882, 915), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 6)), 0); (("empty", 533), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -334), 0, (("stdcompat__stringLabels_s.mli", 47, 973, 973), ("stdcompat__stringLabels_s.mli", 47, 973, 991), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 7)), 0); (("of_bytes", 534), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -333), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -332), 0), 100000000, 0, -331), 0, (("stdcompat__stringLabels_s.mli", 51, 1035, 1035), ("stdcompat__stringLabels_s.mli", 51, 1035, 1065), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 8)), 0); (("to_bytes", 535), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -330), (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -329), 0), 100000000, 0, -328), 0, (("stdcompat__stringLabels_s.mli", 60, 1176, 1176), ("stdcompat__stringLabels_s.mli", 60, 1176, 1206), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 9)), 0); (("cat", 536), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -327), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -326), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -325), 0), 100000000, 0, -324), 0), 100000000, 0, -323), 0, (("stdcompat__stringLabels_s.mli", 68, 1316, 1316), ("stdcompat__stringLabels_s.mli", 68, 1316, 1352), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 10)), 0); (("starts_with", 537), ((Tag1 (("prefix"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -322), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -321), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -320), 0), 100000000, 0, -319), 0), 100000000, 0, -318), 0, (("stdcompat__stringLabels_s.mli", 71, 1413, 1413), ("stdcompat__stringLabels_s.mli", 71, 1413, 1462), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 11)), 0); (("ends_with", 538), ((Tag1 (("suffix"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -317), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -316), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -315), 0), 100000000, 0, -314), 0), 100000000, 0, -313), 0, (("stdcompat__stringLabels_s.mli", 74, 1536, 1536), ("stdcompat__stringLabels_s.mli", 74, 1536, 1583), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 12)), 0); (("fold_left", 539), ((Tag1 (("f"), (Tag1 (0, ((("a")), 100000000, 0, -308), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -312), ((("a")), 100000000, 0, -308), 0), 100000000, 0, -311), 0), 100000000, 0, -310), (Tag1 (("init"), ((("a")), 100000000, 0, -308), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -309), ((("a")), 100000000, 0, -308), 0), 100000000, 0, -307), 0), 100000000, 0, -306), 0), 100000000, 0, -305), 0, (("stdcompat__stringLabels_s.mli", 77, 1655, 1655), ("stdcompat__stringLabels_s.mli", 77, 1655, 1718), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 13)), 0); (("fold_right", 540), ((Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -304), (Tag1 (0, ((("a")), 100000000, 0, -300), ((("a")), 100000000, 0, -300), 0), 100000000, 0, -303), 0), 100000000, 0, -302), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -301), (Tag1 (("init"), ((("a")), 100000000, 0, -300), ((("a")), 100000000, 0, -300), 0), 100000000, 0, -299), 0), 100000000, 0, -298), 0), 100000000, 0, -297), 0, (("stdcompat__stringLabels_s.mli", 81, 1810, 1810), ("stdcompat__stringLabels_s.mli", 81, 1810, 1874), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 14)), 0); (("for_all", 541), ((Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -296), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -295), 0), 100000000, 0, -294), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -293), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -292), 0), 100000000, 0, -291), 0), 100000000, 0, -290), 0, (("stdcompat__stringLabels_s.mli", 85, 1967, 1967), ("stdcompat__stringLabels_s.mli", 85, 1967, 2015), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 15)), 0); (("exists", 542), ((Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -289), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -288), 0), 100000000, 0, -287), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -286), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -285), 0), 100000000, 0, -284), 0), 100000000, 0, -283), 0, (("stdcompat__stringLabels_s.mli", 88, 2088, 2088), ("stdcompat__stringLabels_s.mli", 88, 2088, 2135), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 16)), 0); (("get_uint8", 543), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -282), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -281), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -280), 0), 100000000, 0, -279), 0), 100000000, 0, -278), 0, (("stdcompat__stringLabels_s.mli", 91, 2207, 2207), ("stdcompat__stringLabels_s.mli", 91, 2207, 2243), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 17)), 0); (("get_int8", 544), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -277), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -276), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -275), 0), 100000000, 0, -274), 0), 100000000, 0, -273), 0, (("stdcompat__stringLabels_s.mli", 94, 2304, 2304), ("stdcompat__stringLabels_s.mli", 94, 2304, 2339), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 18)), 0); (("get_uint16_ne", 545), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -272), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -271), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -270), 0), 100000000, 0, -269), 0), 100000000, 0, -268), 0, (("stdcompat__stringLabels_s.mli", 97, 2399, 2399), ("stdcompat__stringLabels_s.mli", 97, 2399, 2439), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 19)), 0); (("get_uint16_be", 546), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -267), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -266), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -265), 0), 100000000, 0, -264), 0), 100000000, 0, -263), 0, (("stdcompat__stringLabels_s.mli", 100, 2504, 2504), ("stdcompat__stringLabels_s.mli", 100, 2504, 2544), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 20)), 0); (("get_uint16_le", 547), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -262), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -261), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -260), 0), 100000000, 0, -259), 0), 100000000, 0, -258), 0, (("stdcompat__stringLabels_s.mli", 103, 2609, 2609), ("stdcompat__stringLabels_s.mli", 103, 2609, 2649), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 21)), 0); (("get_int16_ne", 548), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -257), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -256), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -255), 0), 100000000, 0, -254), 0), 100000000, 0, -253), 0, (("stdcompat__stringLabels_s.mli", 106, 2714, 2714), ("stdcompat__stringLabels_s.mli", 106, 2714, 2753), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 22)), 0); (("get_int16_be", 549), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -252), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -251), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -250), 0), 100000000, 0, -249), 0), 100000000, 0, -248), 0, (("stdcompat__stringLabels_s.mli", 109, 2817, 2817), ("stdcompat__stringLabels_s.mli", 109, 2817, 2856), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 23)), 0); (("get_int16_le", 550), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -247), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -246), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -245), 0), 100000000, 0, -244), 0), 100000000, 0, -243), 0, (("stdcompat__stringLabels_s.mli", 112, 2920, 2920), ("stdcompat__stringLabels_s.mli", 112, 2920, 2959), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 24)), 0); (("get_int32_ne", 551), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -242), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -241), (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -240), 0), 100000000, 0, -239), 0), 100000000, 0, -238), 0, (("stdcompat__stringLabels_s.mli", 115, 3023, 3023), ("stdcompat__stringLabels_s.mli", 115, 3023, 3064), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 25)), 0); (("get_int32_be", 552), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -237), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -236), (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -235), 0), 100000000, 0, -234), 0), 100000000, 0, -233), 0, (("stdcompat__stringLabels_s.mli", 118, 3130, 3130), ("stdcompat__stringLabels_s.mli", 118, 3130, 3171), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 26)), 0); (("get_int32_le", 553), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -232), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -231), (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -230), 0), 100000000, 0, -229), 0), 100000000, 0, -228), 0, (("stdcompat__stringLabels_s.mli", 121, 3237, 3237), ("stdcompat__stringLabels_s.mli", 121, 3237, 3278), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 27)), 0); (("get_int64_ne", 554), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -227), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -226), (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -225), 0), 100000000, 0, -224), 0), 100000000, 0, -223), 0, (("stdcompat__stringLabels_s.mli", 124, 3344, 3344), ("stdcompat__stringLabels_s.mli", 124, 3344, 3385), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 28)), 0); (("get_int64_be", 555), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -222), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -221), (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -220), 0), 100000000, 0, -219), 0), 100000000, 0, -218), 0, (("stdcompat__stringLabels_s.mli", 127, 3451, 3451), ("stdcompat__stringLabels_s.mli", 127, 3451, 3492), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 29)), 0); (("get_int64_le", 556), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -217), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -216), (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -215), 0), 100000000, 0, -214), 0), 100000000, 0, -213), 0, (("stdcompat__stringLabels_s.mli", 130, 3558, 3558), ("stdcompat__stringLabels_s.mli", 130, 3558, 3599), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 30)), 0); (("to_seq", 557), ((Tag1 (0, (Tag3 ((("t", 526)), 0, (0)), 100000000, 0, -212), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -211)], (0)), 100000000, 0, -210), 0), 100000000, 0, -209), 0, (("stdcompat__stringLabels_s.mli", 134, 3666, 3666), ("stdcompat__stringLabels_s.mli", 134, 3666, 3694), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 31)), 0); (("to_seqi", 558), ((Tag1 (0, (Tag3 ((("t", 526)), 0, (0)), 100000000, 0, -208), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -206); (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -207)]), 100000000, 0, -205)], (0)), 100000000, 0, -204), 0), 100000000, 0, -203), 0, (("stdcompat__stringLabels_s.mli", 143, 3796, 3796), ("stdcompat__stringLabels_s.mli", 143, 3796, 3833), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 32)), 0); (("of_seq", 559), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -202)], (0)), 100000000, 0, -201), (Tag3 ((("t", 526)), 0, (0)), 100000000, 0, -200), 0), 100000000, 0, -199), 0, (("stdcompat__stringLabels_s.mli", 152, 3953, 3953), ("stdcompat__stringLabels_s.mli", 152, 3953, 3981), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 33)), 0); (("equal", 560), ((Tag1 (0, (Tag3 ((("t", 526)), 0, (0)), 100000000, 0, -198), (Tag1 (0, (Tag3 ((("t", 526)), 0, (0)), 100000000, 0, -197), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -196), 0), 100000000, 0, -195), 0), 100000000, 0, -194), 0, (("stdcompat__stringLabels_s.mli", 160, 4082, 4082), ("stdcompat__stringLabels_s.mli", 160, 4082, 4108), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 34)), 0); (("split_on_char", 561), ((Tag1 (("sep"), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -193), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -192), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -191)], (0)), 100000000, 0, -190), 0), 100000000, 0, -189), 0), 100000000, 0, -188), 0, (("stdcompat__stringLabels_s.mli", 163, 4159, 4159), ("stdcompat__stringLabels_s.mli", 163, 4159, 4212), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 35)), 0); (("uppercase_ascii", 562), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -187), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -186), 0), 100000000, 0, -185), 0, (("stdcompat__stringLabels_s.mli", 166, 4290, 4290), ("stdcompat__stringLabels_s.mli", 166, 4290, 4328), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 36)), 0); (("lowercase_ascii", 563), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -184), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -183), 0), 100000000, 0, -182), 0, (("stdcompat__stringLabels_s.mli", 169, 4391, 4391), ("stdcompat__stringLabels_s.mli", 169, 4391, 4429), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 37)), 0); (("capitalize_ascii", 564), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -181), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -180), 0), 100000000, 0, -179), 0, (("stdcompat__stringLabels_s.mli", 172, 4492, 4492), ("stdcompat__stringLabels_s.mli", 172, 4492, 4531), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 38)), 0); (("uncapitalize_ascii", 565), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -178), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -177), 0), 100000000, 0, -176), 0, (("stdcompat__stringLabels_s.mli", 175, 4595, 4595), ("stdcompat__stringLabels_s.mli", 175, 4595, 4636), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 39)), 0); (("index_from_opt", 566), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -175), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -174), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -173), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -172)], (0)), 100000000, 0, -171), 0), 100000000, 0, -170), 0), 100000000, 0, -169), 0), 100000000, 0, -168), 0, (("stdcompat__stringLabels_s.mli", 178, 4702, 4702), ("stdcompat__stringLabels_s.mli", 178, 4702, 4758), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 40)), 0); (("rindex_from_opt", 567), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -167), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -166), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -165), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -164)], (0)), 100000000, 0, -163), 0), 100000000, 0, -162), 0), 100000000, 0, -161), 0), 100000000, 0, -160), 0, (("stdcompat__stringLabels_s.mli", 181, 4839, 4839), ("stdcompat__stringLabels_s.mli", 181, 4839, 4896), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 41)), 0); (("index_opt", 568), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -159), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -158), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -157)], (0)), 100000000, 0, -156), 0), 100000000, 0, -155), 0), 100000000, 0, -154), 0, (("stdcompat__stringLabels_s.mli", 184, 4978, 4978), ("stdcompat__stringLabels_s.mli", 184, 4978, 5022), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 42)), 0); (("rindex_opt", 569), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -153), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -152), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -151)], (0)), 100000000, 0, -150), 0), 100000000, 0, -149), 0), 100000000, 0, -148), 0, (("stdcompat__stringLabels_s.mli", 187, 5091, 5091), ("stdcompat__stringLabels_s.mli", 187, 5091, 5136), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 43)), 0); (("init", 570), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -147), (Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -146), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -145), 0), 100000000, 0, -144), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -143), 0), 100000000, 0, -142), 0), 100000000, 0, -141), 0, (("stdcompat__stringLabels_s.mli", 190, 5206, 5206), ("stdcompat__stringLabels_s.mli", 190, 5206, 5249), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 44)), 0); (("mapi", 571), ((Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -140), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -139), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -138), 0), 100000000, 0, -137), 0), 100000000, 0, -136), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -135), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -134), 0), 100000000, 0, -133), 0), 100000000, 0, -132), 0, (("stdcompat__stringLabels_s.mli", 193, 5317, 5317), ("stdcompat__stringLabels_s.mli", 193, 5317, 5371), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 45)), 0); (("blit", 572), ((Tag1 (("src"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -131), (Tag1 (("src_pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -130), (Tag1 (("dst"), (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -129), (Tag1 (("dst_pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -128), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -127), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -126), 0), 100000000, 0, -125), 0), 100000000, 0, -124), 0), 100000000, 0, -123), 0), 100000000, 0, -122), 0), 100000000, 0, -121), 0, (("stdcompat__stringLabels_s.mli", 197, 5451, 5451), ("stdcompat__stringLabels_s.mli", 198, 5462, 5536), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 46)), 0); (("unsafe_blit", 573), ((Tag1 (("src"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -120), (Tag1 (("src_pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -119), (Tag1 (("dst"), (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -118), (Tag1 (("dst_pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -117), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -116), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -115), 0), 100000000, 0, -114), 0), 100000000, 0, -113), 0), 100000000, 0, -112), 0), 100000000, 0, -111), 0), 100000000, 0, -110), (("caml_blit_string", 5, 0, "", [0; 0; 0; 0; 0], 0)), (("stdcompat__stringLabels_s.mli", 213, 5783, 5783), ("stdcompat__stringLabels_s.mli", 215, 5883, 5917), 0), [(("noalloc", (("stdcompat__stringLabels_s.mli", 215, 5883, 5908), ("stdcompat__stringLabels_s.mli", 215, 5883, 5915), 0)), (0), (("stdcompat__stringLabels_s.mli", 215, 5883, 5905), ("stdcompat__stringLabels_s.mli", 215, 5883, 5917), 0))], Tag1 ("Stdcompat__stringLabels_s", 47)), 0); (("map", 574), ((Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -109), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -108), 0), 100000000, 0, -107), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -106), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -105), 0), 100000000, 0, -104), 0), 100000000, 0, -103), 0, (("stdcompat__stringLabels_s.mli", 253, 6716, 6716), ("stdcompat__stringLabels_s.mli", 253, 6716, 6762), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 48)), 0); (("trim", 575), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -102), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -101), 0), 100000000, 0, -100), 0, (("stdcompat__stringLabels_s.mli", 256, 6833, 6833), ("stdcompat__stringLabels_s.mli", 256, 6833, 6860), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 49)), 0); (("iteri", 576), ((Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -99), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -98), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -97), 0), 100000000, 0, -96), 0), 100000000, 0, -95), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -94), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -93), 0), 100000000, 0, -92), 0), 100000000, 0, -91), 0, (("stdcompat__stringLabels_s.mli", 259, 6912, 6912), ("stdcompat__stringLabels_s.mli", 259, 6912, 6965), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 50)), 0); (("compare", 577), ((Tag1 (0, (Tag3 ((("t", 526)), 0, (0)), 100000000, 0, -90), (Tag1 (0, (Tag3 ((("t", 526)), 0, (0)), 100000000, 0, -89), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -88), 0), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("stdcompat__stringLabels_s.mli", 262, 7043, 7043), ("stdcompat__stringLabels_s.mli", 262, 7043, 7070), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 51)), 0); (("make", 578), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -85), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -84), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -83), 0), 100000000, 0, -82), 0), 100000000, 0, -81), 0, (("stdcompat__stringLabels_s.mli", 265, 7122, 7122), ("stdcompat__stringLabels_s.mli", 265, 7122, 7154), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 52)), 0); (("length", 579), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -80), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -79), 0), 100000000, 0, -78), (("%string_length", 1, 1, "", [0], 0)), (("stdcompat__stringLabels_s.mli", 268, 7194, 7194), ("stdcompat__stringLabels_s.mli", 268, 7194, 7244), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 53)), 0); (("get", 580), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -77), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -76), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), 0), 100000000, 0, -73), (("%string_safe_get", 2, 1, "", [0; 0], 0)), (("stdcompat__stringLabels_s.mli", 271, 7286, 7286), ("stdcompat__stringLabels_s.mli", 271, 7286, 7343), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 54)), 0); (("concat", 581), ((Tag1 (("sep"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -72), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -71)], (0)), 100000000, 0, -70), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -69), 0), 100000000, 0, -68), 0), 100000000, 0, -67), 0, (("stdcompat__stringLabels_s.mli", 274, 7382, 7382), ("stdcompat__stringLabels_s.mli", 274, 7382, 7430), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 55)), 0); (("contains_from", 582), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -66), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -65), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -64), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -63), 0), 100000000, 0, -62), 0), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("stdcompat__stringLabels_s.mli", 277, 7472, 7472), ("stdcompat__stringLabels_s.mli", 277, 7472, 7521), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 56)), 0); (("rcontains_from", 583), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -59), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -58), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -57), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -56), 0), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("stdcompat__stringLabels_s.mli", 280, 7570, 7570), ("stdcompat__stringLabels_s.mli", 280, 7570, 7620), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 57)), 0); (("contains", 584), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -52), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -51), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("stdcompat__stringLabels_s.mli", 283, 7670, 7670), ("stdcompat__stringLabels_s.mli", 283, 7670, 7707), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 58)), 0); (("sub", 585), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -47), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -46), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -45), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("stdcompat__stringLabels_s.mli", 286, 7751, 7751), ("stdcompat__stringLabels_s.mli", 286, 7751, 7799), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 59)), 0); (("escaped", 586), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -40), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("stdcompat__stringLabels_s.mli", 289, 7838, 7838), ("stdcompat__stringLabels_s.mli", 289, 7838, 7868), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 60)), 0); (("iter", 587), ((Tag1 (("f"), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -37), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -34), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("stdcompat__stringLabels_s.mli", 292, 7911, 7911), ("stdcompat__stringLabels_s.mli", 292, 7911, 7956), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 61)), 0); (("index_from", 588), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -30), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -29), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -28), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -27), 0), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("stdcompat__stringLabels_s.mli", 295, 7996, 7996), ("stdcompat__stringLabels_s.mli", 295, 7996, 8041), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 62)), 0); (("rindex_from", 589), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -23), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -22), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -21), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("stdcompat__stringLabels_s.mli", 298, 8087, 8087), ("stdcompat__stringLabels_s.mli", 298, 8087, 8133), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 63)), 0); (("index", 590), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -16), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -15), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("stdcompat__stringLabels_s.mli", 301, 8180, 8180), ("stdcompat__stringLabels_s.mli", 301, 8180, 8213), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 64)), 0); (("rindex", 591), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11), (Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("stdcompat__stringLabels_s.mli", 304, 8254, 8254), ("stdcompat__stringLabels_s.mli", 304, 8254, 8288), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 65)), 0); (("unsafe_get", 592), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), (("%string_unsafe_get", 2, 1, "", [0; 0], 0)), (("stdcompat__stringLabels_s.mli", 307, 8330, 8330), ("stdcompat__stringLabels_s.mli", 307, 8330, 8396), 0), 0, Tag1 ("Stdcompat__stringLabels_s", 66)), 0)], "Stdcompat__stringLabels", [("Stdcompat__stringLabels", ("r\163\030\133\239\025\154\183WY,L$\2194\216")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stdcompat__stringLabels_s", ("{R\012\208\203\016\190?\215\236R\226\228k\235#")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
external unsafe_get : string -> int -> char = "%string_unsafe_get"
