type nonrec ('v, 'e) result = ('v, 'e) result
module Record_in :
  sig
    type (_, _, _) t =
        Cons : (string * ('t -> 'a) * 'a option) *
          ('t, 'b, 'c) t -> ('t, 'a -> 'b, 'c) t
      | Nil : ('t, 'a, 'a) t
    val ( ^:: ) :
      string * ('a -> 'b) * 'b option ->
      ('a, 'c, 'd) t -> ('a, 'b -> 'c, 'd) t
  end
module Record_out :
  sig
    type (_, _, _) t =
        Cons : (string * ('a -> 't) * 'a option) *
          ('t, 'b, 'c) t -> ('t, 'a -> 'b, 'c) t
      | Nil : ('t, 'a, 'a) t
    val ( ^:: ) :
      string * ('a -> 'b) * 'a option ->
      ('b, 'c, 'd) t -> ('b, 'a -> 'c, 'd) t
  end
module Tuple_in :
  sig
    type (_, _, _) t =
        Cons : ('t -> 'a) * ('t, 'b, 'c) t -> ('t, 'a -> 'b, 'c) t
      | Nil : ('t, 'a, 'a) t
    val ( ^:: ) : ('a -> 'b) -> ('a, 'c, 'd) t -> ('a, 'b -> 'c, 'd) t
  end
module Tuple_out :
  sig
    type (_, _, _) t =
        Cons : ('a -> 't) * ('t, 'b, 'c) t -> ('t, 'a -> 'b, 'c) t
      | Nil : ('t, 'a, 'a) t
    val ( ^:: ) : ('a -> 'b) -> ('b, 'c, 'd) t -> ('b, 'a -> 'c, 'd) t
  end
module Variant_in :
  sig
    type (_, _) t =
        Variant : string * ('a, 'constr, 'c) Tuple_in.t *
          'constr -> ('a, 'c) t
  end
module type Driver =
  sig
    type t
    type error
    exception Protocol_error of error
    val make_error : ?value:t -> string -> error
    val error_to_string_hum : error -> string
    val to_string_hum : t -> string
    val try_with : (t -> 'v) -> t -> ('v, error) result
    val to_variant : (t, 'a) Variant_in.t list -> t -> 'a
    val of_variant : string -> (t, 'a, t) Tuple_out.t -> 'a
    val to_record : (t, 'constr, 'b) Record_in.t -> 'constr -> t -> 'b
    val of_record : (t, 'a, t) Record_out.t -> 'a
    val to_tuple : (t, 'constr, 'b) Tuple_in.t -> 'constr -> t -> 'b
    val of_tuple : (t, 'a, t) Tuple_out.t -> 'a
    val to_option : (t -> 'a) -> t -> 'a option
    val of_option : ('a -> t) -> 'a option -> t
    val to_ref : (t -> 'a) -> t -> 'a ref
    val of_ref : ('a -> t) -> 'a ref -> t
    val to_list : (t -> 'a) -> t -> 'a list
    val of_list : ('a -> t) -> 'a list -> t
    val to_array : (t -> 'a) -> t -> 'a array
    val of_array : ('a -> t) -> 'a array -> t
    val to_lazy_t : (t -> 'a) -> t -> 'a lazy_t
    val of_lazy_t : ('a -> t) -> 'a lazy_t -> t
    val to_result : (t -> 'a) -> (t -> 'b) -> t -> ('a, 'b) result
    val of_result : ('a -> t) -> ('b -> t) -> ('a, 'b) result -> t
    val to_int : t -> int
    val of_int : int -> t
    val to_int32 : t -> int32
    val of_int32 : int32 -> t
    val to_int64 : t -> int64
    val of_int64 : int64 -> t
    val to_nativeint : t -> nativeint
    val of_nativeint : nativeint -> t
    val to_char : t -> char
    val of_char : char -> t
    val to_string : t -> string
    val of_string : string -> t
    val to_float : t -> float
    val of_float : float -> t
    val to_bool : t -> bool
    val of_bool : bool -> t
    val to_bytes : t -> bytes
    val of_bytes : bytes -> t
    val to_unit : t -> unit
    val of_unit : unit -> t
  end
module Helper :
  sig
    val list_map : f:('a -> 'b) -> 'a list -> 'b list
    exception Protocol_error of string
    module type Lookup =
      sig val of_alist : (string * 'a) list -> string -> 'a option end
    module Hashtbl_lookup : Lookup
    module Lookup = Hashtbl_lookup
    val raise_errorf : ('a, unit, string, 'b) format4 -> 'a
    val map_record_in :
      (string -> string) ->
      ('t, 'a, 'b) Record_in.t -> ('t, 'a, 'b) Record_in.t
    val to_record :
      ?strict:bool ->
      ('t, 'constr, 'b) Record_in.t -> 'constr -> (string * 't) list -> 'b
    val map_record_out :
      (string -> string) ->
      ('t, 'a, 't) Record_out.t -> ('t, 'a, 't) Record_out.t
    type 't serialize_record = (string * 't) list -> 't
    val of_record :
      omit_default:bool ->
      't serialize_record -> ('t, 'a, 't) Record_out.t -> 'a
    val to_tuple : ('t, 'a, 'b) Tuple_in.t -> 'a -> 't list -> 'b
    type 't serialize_tuple = 't list -> 't
    val of_tuple : 't serialize_tuple -> ('t, 'a, 't) Tuple_out.t -> 'a
    type 't serialize_variant = string -> 't list -> 't
    val of_variant :
      't serialize_variant -> string -> ('t, 'a, 't) Tuple_out.t -> 'a
    val map_constructor_names :
      (string -> string) ->
      ('t, 'a) Variant_in.t list -> ('t, 'a) Variant_in.t list
    val to_variant : ('t, 'a) Variant_in.t list -> string -> 't list -> 'a
  end("DEBUG:rule", [Tag1 (("result", 951), ([((("v")), 100000000, 0, -3); ((("e")), 100000000, 0, -4)], 2, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("v")), 100000000, 0, -3); ((("e")), 100000000, 0, -4)], (0)), 100000000, 0, -2)), [25; 25], [0; 0], 0, 0, (("runtime/runtime.ml", 1, 0, 0), ("runtime/runtime.ml", 1, 0, 45), 0), 0, 0, 0, Tag1 ("Protocol_conv__Runtime", 0)), 0, 0); Tag3 (("Record_in", 952), 0, (Tag1 ([Tag1 (("t", 959), ([((("_")), 100000000, 0, -32); ((("_")), 100000000, 0, -33); ((("_")), 100000000, 0, -34)], 3, Tag1 ([(("Cons", 272), ([(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -25); (Tag1 (0, ((("t")), 100000000, 0, -19), ((("a")), 100000000, 0, -22), 0), 100000000, 0, -26); (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -22)], (0)), 100000000, 0, -27)]), 100000000, 0, -24); (Tag3 ((("t", 959)), [((("t")), 100000000, 0, -19); ((("b")), 100000000, 0, -21); ((("c")), 100000000, 0, -23)], (0)), 100000000, 0, -28)]), ((Tag3 ((("t", 959)), [((("t")), 100000000, 0, -19); (Tag1 (0, ((("a")), 100000000, 0, -22), ((("b")), 100000000, 0, -21), 0), 100000000, 0, -20); ((("c")), 100000000, 0, -23)], (0)), 100000000, 0, -18)), (("runtime/runtime.ml", 5, 94, 98), ("runtime/runtime.ml", 5, 94, 181), 0), 0, Tag1 ("Protocol_conv__Runtime", 2)); (("Nil", 273), (0), ((Tag3 ((("t", 959)), [((("t")), 100000000, 0, -30); ((("a")), 100000000, 0, -31); ((("a")), 100000000, 0, -31)], (0)), 100000000, 0, -29)), (("runtime/runtime.ml", 6, 182, 186), ("runtime/runtime.ml", 6, 182, 208), 0), 0, Tag1 ("Protocol_conv__Runtime", 3))], 0), 1, 0, [47; 63; 15], [0; 0; 0], 0, 0, (("runtime/runtime.ml", 4, 73, 75), ("runtime/runtime.ml", 6, 182, 208), 0), 0, 0, 0, Tag1 ("Protocol_conv__Runtime", 1)), 1, 0); (("^::", 960), ((Tag1 (0, (Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -15); (Tag1 (0, ((0), 100000000, 0, -8), ((0), 100000000, 0, -11), 0), 100000000, 0, -16); (Tag3 ((Tag3 ("option", 10)), [((0), 100000000, 0, -11)], (0)), 100000000, 0, -17)]), 100000000, 0, -14), (Tag1 (0, (Tag3 ((("t", 959)), [((0), 100000000, 0, -8); ((0), 100000000, 0, -10); ((0), 100000000, 0, -12)], (0)), 100000000, 0, -13), (Tag3 ((("t", 959)), [((0), 100000000, 0, -8); (Tag1 (0, ((0), 100000000, 0, -11), ((0), 100000000, 0, -10), 0), 100000000, 0, -9); ((0), 100000000, 0, -12)], (0)), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("runtime/runtime.ml", 7, 209, 215), ("runtime/runtime.ml", 7, 209, 220), 0), 0, Tag1 ("Protocol_conv__Runtime", 4)), 0)]), 0, (("runtime/runtime.ml", 3, 47, 47), ("runtime/runtime.ml", 8, 238, 241), 0), Tag1 ("Protocol_conv__Runtime", 7)), 0, 0); Tag3 (("Record_out", 953), 0, (Tag1 ([Tag1 (("t", 961), ([((("_")), 100000000, 0, -62); ((("_")), 100000000, 0, -63); ((("_")), 100000000, 0, -64)], 3, Tag1 ([(("Cons", 280), ([(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -55); (Tag1 (0, ((("a")), 100000000, 0, -52), ((("t")), 100000000, 0, -49), 0), 100000000, 0, -56); (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -52)], (0)), 100000000, 0, -57)]), 100000000, 0, -54); (Tag3 ((("t", 961)), [((("t")), 100000000, 0, -49); ((("b")), 100000000, 0, -51); ((("c")), 100000000, 0, -53)], (0)), 100000000, 0, -58)]), ((Tag3 ((("t", 961)), [((("t")), 100000000, 0, -49); (Tag1 (0, ((("a")), 100000000, 0, -52), ((("b")), 100000000, 0, -51), 0), 100000000, 0, -50); ((("c")), 100000000, 0, -53)], (0)), 100000000, 0, -48)), (("runtime/runtime.ml", 12, 291, 295), ("runtime/runtime.ml", 12, 291, 379), 0), 0, Tag1 ("Protocol_conv__Runtime", 9)); (("Nil", 281), (0), ((Tag3 ((("t", 961)), [((("t")), 100000000, 0, -60); ((("a")), 100000000, 0, -61); ((("a")), 100000000, 0, -61)], (0)), 100000000, 0, -59)), (("runtime/runtime.ml", 13, 380, 384), ("runtime/runtime.ml", 13, 380, 406), 0), 0, Tag1 ("Protocol_conv__Runtime", 10))], 0), 1, 0, [31; 63; 15], [0; 0; 0], 0, 0, (("runtime/runtime.ml", 11, 270, 272), ("runtime/runtime.ml", 13, 380, 406), 0), 0, 0, 0, Tag1 ("Protocol_conv__Runtime", 8)), 1, 0); (("^::", 962), ((Tag1 (0, (Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -45); (Tag1 (0, ((0), 100000000, 0, -41), ((0), 100000000, 0, -38), 0), 100000000, 0, -46); (Tag3 ((Tag3 ("option", 10)), [((0), 100000000, 0, -41)], (0)), 100000000, 0, -47)]), 100000000, 0, -44), (Tag1 (0, (Tag3 ((("t", 961)), [((0), 100000000, 0, -38); ((0), 100000000, 0, -40); ((0), 100000000, 0, -42)], (0)), 100000000, 0, -43), (Tag3 ((("t", 961)), [((0), 100000000, 0, -38); (Tag1 (0, ((0), 100000000, 0, -41), ((0), 100000000, 0, -40), 0), 100000000, 0, -39); ((0), 100000000, 0, -42)], (0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("runtime/runtime.ml", 14, 407, 413), ("runtime/runtime.ml", 14, 407, 418), 0), 0, Tag1 ("Protocol_conv__Runtime", 11)), 0)]), 0, (("runtime/runtime.ml", 10, 243, 243), ("runtime/runtime.ml", 15, 436, 439), 0), Tag1 ("Protocol_conv__Runtime", 14)), 0, 0); Tag3 (("Tuple_in", 954), 0, (Tag1 ([Tag1 (("t", 963), ([((("_")), 100000000, 0, -86); ((("_")), 100000000, 0, -87); ((("_")), 100000000, 0, -88)], 3, Tag1 ([(("Cons", 288), ([(Tag1 (0, ((("t")), 100000000, 0, -76), ((("a")), 100000000, 0, -79), 0), 100000000, 0, -81); (Tag3 ((("t", 963)), [((("t")), 100000000, 0, -76); ((("b")), 100000000, 0, -78); ((("c")), 100000000, 0, -80)], (0)), 100000000, 0, -82)]), ((Tag3 ((("t", 963)), [((("t")), 100000000, 0, -76); (Tag1 (0, ((("a")), 100000000, 0, -79), ((("b")), 100000000, 0, -78), 0), 100000000, 0, -77); ((("c")), 100000000, 0, -80)], (0)), 100000000, 0, -75)), (("runtime/runtime.ml", 19, 487, 491), ("runtime/runtime.ml", 19, 487, 551), 0), 0, Tag1 ("Protocol_conv__Runtime", 16)); (("Nil", 289), (0), ((Tag3 ((("t", 963)), [((("t")), 100000000, 0, -84); ((("a")), 100000000, 0, -85); ((("a")), 100000000, 0, -85)], (0)), 100000000, 0, -83)), (("runtime/runtime.ml", 20, 552, 556), ("runtime/runtime.ml", 20, 552, 578), 0), 0, Tag1 ("Protocol_conv__Runtime", 17))], 0), 1, 0, [47; 63; 15], [0; 0; 0], 0, 0, (("runtime/runtime.ml", 18, 466, 468), ("runtime/runtime.ml", 20, 552, 578), 0), 0, 0, 0, Tag1 ("Protocol_conv__Runtime", 15)), 1, 0); (("^::", 964), ((Tag1 (0, (Tag1 (0, ((0), 100000000, 0, -68), ((0), 100000000, 0, -71), 0), 100000000, 0, -74), (Tag1 (0, (Tag3 ((("t", 963)), [((0), 100000000, 0, -68); ((0), 100000000, 0, -70); ((0), 100000000, 0, -72)], (0)), 100000000, 0, -73), (Tag3 ((("t", 963)), [((0), 100000000, 0, -68); (Tag1 (0, ((0), 100000000, 0, -71), ((0), 100000000, 0, -70), 0), 100000000, 0, -69); ((0), 100000000, 0, -72)], (0)), 100000000, 0, -67), 0), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("runtime/runtime.ml", 21, 579, 585), ("runtime/runtime.ml", 21, 579, 590), 0), 0, Tag1 ("Protocol_conv__Runtime", 18)), 0)]), 0, (("runtime/runtime.ml", 17, 441, 441), ("runtime/runtime.ml", 22, 608, 611), 0), Tag1 ("Protocol_conv__Runtime", 21)), 0, 0); Tag3 (("Tuple_out", 955), 0, (Tag1 ([Tag1 (("t", 965), ([((("_")), 100000000, 0, -110); ((("_")), 100000000, 0, -111); ((("_")), 100000000, 0, -112)], 3, Tag1 ([(("Cons", 296), ([(Tag1 (0, ((("a")), 100000000, 0, -103), ((("t")), 100000000, 0, -100), 0), 100000000, 0, -105); (Tag3 ((("t", 965)), [((("t")), 100000000, 0, -100); ((("b")), 100000000, 0, -102); ((("c")), 100000000, 0, -104)], (0)), 100000000, 0, -106)]), ((Tag3 ((("t", 965)), [((("t")), 100000000, 0, -100); (Tag1 (0, ((("a")), 100000000, 0, -103), ((("b")), 100000000, 0, -102), 0), 100000000, 0, -101); ((("c")), 100000000, 0, -104)], (0)), 100000000, 0, -99)), (("runtime/runtime.ml", 26, 660, 664), ("runtime/runtime.ml", 26, 660, 725), 0), 0, Tag1 ("Protocol_conv__Runtime", 23)); (("Nil", 297), (0), ((Tag3 ((("t", 965)), [((("t")), 100000000, 0, -108); ((("a")), 100000000, 0, -109); ((("a")), 100000000, 0, -109)], (0)), 100000000, 0, -107)), (("runtime/runtime.ml", 27, 726, 730), ("runtime/runtime.ml", 27, 726, 752), 0), 0, Tag1 ("Protocol_conv__Runtime", 24))], 0), 1, 0, [31; 63; 15], [0; 0; 0], 0, 0, (("runtime/runtime.ml", 25, 639, 641), ("runtime/runtime.ml", 27, 726, 752), 0), 0, 0, 0, Tag1 ("Protocol_conv__Runtime", 22)), 1, 0); (("^::", 966), ((Tag1 (0, (Tag1 (0, ((0), 100000000, 0, -95), ((0), 100000000, 0, -92), 0), 100000000, 0, -98), (Tag1 (0, (Tag3 ((("t", 965)), [((0), 100000000, 0, -92); ((0), 100000000, 0, -94); ((0), 100000000, 0, -96)], (0)), 100000000, 0, -97), (Tag3 ((("t", 965)), [((0), 100000000, 0, -92); (Tag1 (0, ((0), 100000000, 0, -95), ((0), 100000000, 0, -94), 0), 100000000, 0, -93); ((0), 100000000, 0, -96)], (0)), 100000000, 0, -91), 0), 100000000, 0, -90), 0), 100000000, 0, -89), 0, (("runtime/runtime.ml", 28, 753, 759), ("runtime/runtime.ml", 28, 753, 764), 0), 0, Tag1 ("Protocol_conv__Runtime", 25)), 0)]), 0, (("runtime/runtime.ml", 24, 613, 613), ("runtime/runtime.ml", 29, 782, 785), 0), Tag1 ("Protocol_conv__Runtime", 28)), 0, 0); Tag3 (("Variant_in", 956), 0, (Tag1 ([Tag1 (("t", 967), ([((("_")), 100000000, 0, -119); ((("_")), 100000000, 0, -120)], 2, Tag1 ([(("Variant", 304), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -116); (Tag3 (Tag1 ((("Tuple_in", 954)), "t"), [((("a")), 100000000, 0, -114); ((("constr")), 100000000, 0, -118); ((("c")), 100000000, 0, -115)], (0)), 100000000, 0, -117); ((("constr")), 100000000, 0, -118)]), ((Tag3 ((("t", 967)), [((("a")), 100000000, 0, -114); ((("c")), 100000000, 0, -115)], (0)), 100000000, 0, -113)), (("runtime/runtime.ml", 32, 814, 832), ("runtime/runtime.ml", 32, 814, 902), 0), 0, Tag1 ("Protocol_conv__Runtime", 30))], 0), 1, 0, [47; 15], [0; 0], 0, 0, (("runtime/runtime.ml", 32, 814, 816), ("runtime/runtime.ml", 32, 814, 902), 0), 0, 0, 0, Tag1 ("Protocol_conv__Runtime", 29)), 1, 0)]), 0, (("runtime/runtime.ml", 31, 787, 787), ("runtime/runtime.ml", 33, 903, 906), 0), Tag1 ("Protocol_conv__Runtime", 31)), 0, 0); Tag4 (("Driver", 957), ((Tag1 ([Tag1 (("t", 968), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("runtime/runtime.ml", 45, 1343, 1345), ("runtime/runtime.ml", 45, 1343, 1351), 0), 0, 0, 0, Tag1 ("Protocol_conv__Runtime", 32)), 1, 0); Tag1 (("error", 969), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("runtime/runtime.ml", 48, 1380, 1382), ("runtime/runtime.ml", 48, 1380, 1392), 0), 0, 0, 0, Tag1 ("Protocol_conv__Runtime", 33)), 1, 0); Tag2 (("Protocol_error", 970), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((("error", 969)), 0, (0)), 100000000, 0, -333)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Protocol_conv__Runtime", 34)), 2, 0); (("make_error", 971), ((Tag1 (Tag1 ("value"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -332)], (0)), 100000000, 0, -331), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -330), (Tag3 ((("error", 969)), 0, (0)), 100000000, 0, -329), 0), 100000000, 0, -328), 0), 100000000, 0, -327), 0, (("runtime/runtime.ml", 55, 1626, 1628), ("runtime/runtime.ml", 55, 1626, 1672), 0), 0, Tag1 ("Protocol_conv__Runtime", 35)), 0); (("error_to_string_hum", 972), ((Tag1 (0, (Tag3 ((("error", 969)), 0, (0)), 100000000, 0, -326), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -325), 0), 100000000, 0, -324), 0, (("runtime/runtime.ml", 58, 1732, 1734), ("runtime/runtime.ml", 58, 1732, 1774), 0), 0, Tag1 ("Protocol_conv__Runtime", 36)), 0); (("to_string_hum", 973), ((Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -323), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -322), 0), 100000000, 0, -321), 0, (("runtime/runtime.ml", 61, 1807, 1809), ("runtime/runtime.ml", 61, 1807, 1839), 0), 0, Tag1 ("Protocol_conv__Runtime", 37)), 0); (("try_with", 974), ((Tag1 (0, (Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -320), ((("v")), 100000000, 0, -316), 0), 100000000, 0, -319), (Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -318), (Tag3 ((("result", 951)), [((("v")), 100000000, 0, -316); (Tag3 ((("error", 969)), 0, (0)), 100000000, 0, -317)], (0)), 100000000, 0, -315), 0), 100000000, 0, -314), 0), 100000000, 0, -313), 0, (("runtime/runtime.ml", 64, 1922, 1924), ("runtime/runtime.ml", 64, 1922, 1974), 0), 0, Tag1 ("Protocol_conv__Runtime", 38)), 0); (("to_variant", 975), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Variant_in", 956)), "t"), [(Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -312); ((("a")), 100000000, 0, -308)], (0)), 100000000, 0, -311)], (0)), 100000000, 0, -310), (Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -309), ((("a")), 100000000, 0, -308), 0), 100000000, 0, -307), 0), 100000000, 0, -306), 0, (("runtime/runtime.ml", 66, 1976, 1978), ("runtime/runtime.ml", 66, 1976, 2030), 0), 0, Tag1 ("Protocol_conv__Runtime", 39)), 0); (("of_variant", 976), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -305), (Tag1 (0, (Tag3 (Tag1 ((("Tuple_out", 955)), "t"), [(Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -303); ((("a")), 100000000, 0, -301); (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -304)], (0)), 100000000, 0, -302), ((("a")), 100000000, 0, -301), 0), 100000000, 0, -300), 0), 100000000, 0, -299), 0, (("runtime/runtime.ml", 67, 2031, 2033), ("runtime/runtime.ml", 67, 2031, 2087), 0), 0, Tag1 ("Protocol_conv__Runtime", 40)), 0); (("to_record", 977), ((Tag1 (0, (Tag3 (Tag1 ((("Record_in", 952)), "t"), [(Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -298); ((("constr")), 100000000, 0, -296); ((("b")), 100000000, 0, -294)], (0)), 100000000, 0, -297), (Tag1 (0, ((("constr")), 100000000, 0, -296), (Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -295), ((("b")), 100000000, 0, -294), 0), 100000000, 0, -293), 0), 100000000, 0, -292), 0), 100000000, 0, -291), 0, (("runtime/runtime.ml", 69, 2089, 2091), ("runtime/runtime.ml", 69, 2089, 2157), 0), 0, Tag1 ("Protocol_conv__Runtime", 41)), 0); (("of_record", 978), ((Tag1 (0, (Tag3 (Tag1 ((("Record_out", 953)), "t"), [(Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -289); ((("a")), 100000000, 0, -287); (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -290)], (0)), 100000000, 0, -288), ((("a")), 100000000, 0, -287), 0), 100000000, 0, -286), 0, (("runtime/runtime.ml", 70, 2158, 2160), ("runtime/runtime.ml", 70, 2158, 2205), 0), 0, Tag1 ("Protocol_conv__Runtime", 42)), 0); (("to_tuple", 979), ((Tag1 (0, (Tag3 (Tag1 ((("Tuple_in", 954)), "t"), [(Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -285); ((("constr")), 100000000, 0, -283); ((("b")), 100000000, 0, -281)], (0)), 100000000, 0, -284), (Tag1 (0, ((("constr")), 100000000, 0, -283), (Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -282), ((("b")), 100000000, 0, -281), 0), 100000000, 0, -280), 0), 100000000, 0, -279), 0), 100000000, 0, -278), 0, (("runtime/runtime.ml", 72, 2207, 2209), ("runtime/runtime.ml", 72, 2207, 2274), 0), 0, Tag1 ("Protocol_conv__Runtime", 43)), 0); (("of_tuple", 980), ((Tag1 (0, (Tag3 (Tag1 ((("Tuple_out", 955)), "t"), [(Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -276); ((("a")), 100000000, 0, -274); (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -277)], (0)), 100000000, 0, -275), ((("a")), 100000000, 0, -274), 0), 100000000, 0, -273), 0, (("runtime/runtime.ml", 73, 2275, 2277), ("runtime/runtime.ml", 73, 2275, 2321), 0), 0, Tag1 ("Protocol_conv__Runtime", 44)), 0); (("to_option", 981), ((Tag1 (0, (Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -272), ((("a")), 100000000, 0, -269), 0), 100000000, 0, -271), (Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -270), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -269)], (0)), 100000000, 0, -268), 0), 100000000, 0, -267), 0), 100000000, 0, -266), 0, (("runtime/runtime.ml", 75, 2323, 2325), ("runtime/runtime.ml", 75, 2323, 2368), 0), 0, Tag1 ("Protocol_conv__Runtime", 45)), 0); (("of_option", 982), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -263), (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -265), 0), 100000000, 0, -264), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -263)], (0)), 100000000, 0, -262), (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -261), 0), 100000000, 0, -260), 0), 100000000, 0, -259), 0, (("runtime/runtime.ml", 76, 2369, 2371), ("runtime/runtime.ml", 76, 2369, 2414), 0), 0, Tag1 ("Protocol_conv__Runtime", 46)), 0); (("to_ref", 983), ((Tag1 (0, (Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -258), ((("a")), 100000000, 0, -255), 0), 100000000, 0, -257), (Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -256), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [((("a")), 100000000, 0, -255)], (0)), 100000000, 0, -254), 0), 100000000, 0, -253), 0), 100000000, 0, -252), 0, (("runtime/runtime.ml", 77, 2415, 2417), ("runtime/runtime.ml", 77, 2415, 2457), 0), 0, Tag1 ("Protocol_conv__Runtime", 47)), 0); (("of_ref", 984), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -249), (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -251), 0), 100000000, 0, -250), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [((("a")), 100000000, 0, -249)], (0)), 100000000, 0, -248), (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -247), 0), 100000000, 0, -246), 0), 100000000, 0, -245), 0, (("runtime/runtime.ml", 78, 2458, 2460), ("runtime/runtime.ml", 78, 2458, 2500), 0), 0, Tag1 ("Protocol_conv__Runtime", 48)), 0); (("to_list", 985), ((Tag1 (0, (Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -244), ((("a")), 100000000, 0, -241), 0), 100000000, 0, -243), (Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -242), (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -241)], (0)), 100000000, 0, -240), 0), 100000000, 0, -239), 0), 100000000, 0, -238), 0, (("runtime/runtime.ml", 79, 2501, 2503), ("runtime/runtime.ml", 79, 2501, 2544), 0), 0, Tag1 ("Protocol_conv__Runtime", 49)), 0); (("of_list", 986), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -235), (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -237), 0), 100000000, 0, -236), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -235)], (0)), 100000000, 0, -234), (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -233), 0), 100000000, 0, -232), 0), 100000000, 0, -231), 0, (("runtime/runtime.ml", 80, 2545, 2547), ("runtime/runtime.ml", 80, 2545, 2588), 0), 0, Tag1 ("Protocol_conv__Runtime", 50)), 0); (("to_array", 987), ((Tag1 (0, (Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -230), ((("a")), 100000000, 0, -227), 0), 100000000, 0, -229), (Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -228), (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -227)], (0)), 100000000, 0, -226), 0), 100000000, 0, -225), 0), 100000000, 0, -224), 0, (("runtime/runtime.ml", 81, 2589, 2591), ("runtime/runtime.ml", 81, 2589, 2633), 0), 0, Tag1 ("Protocol_conv__Runtime", 51)), 0); (("of_array", 988), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -221), (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -223), 0), 100000000, 0, -222), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [((("a")), 100000000, 0, -221)], (0)), 100000000, 0, -220), (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -219), 0), 100000000, 0, -218), 0), 100000000, 0, -217), 0, (("runtime/runtime.ml", 82, 2634, 2636), ("runtime/runtime.ml", 82, 2634, 2678), 0), 0, Tag1 ("Protocol_conv__Runtime", 52)), 0); (("to_lazy_t", 989), ((Tag1 (0, (Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -216), ((("a")), 100000000, 0, -213), 0), 100000000, 0, -215), (Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -214), (Tag3 ((Tag3 ("lazy_t", 14)), [((("a")), 100000000, 0, -213)], (0)), 100000000, 0, -212), 0), 100000000, 0, -211), 0), 100000000, 0, -210), 0, (("runtime/runtime.ml", 83, 2679, 2681), ("runtime/runtime.ml", 83, 2679, 2724), 0), 0, Tag1 ("Protocol_conv__Runtime", 53)), 0); (("of_lazy_t", 990), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -207), (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -209), 0), 100000000, 0, -208), (Tag1 (0, (Tag3 ((Tag3 ("lazy_t", 14)), [((("a")), 100000000, 0, -207)], (0)), 100000000, 0, -206), (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -205), 0), 100000000, 0, -204), 0), 100000000, 0, -203), 0, (("runtime/runtime.ml", 84, 2725, 2727), ("runtime/runtime.ml", 84, 2725, 2770), 0), 0, Tag1 ("Protocol_conv__Runtime", 54)), 0); (("to_result", 991), ((Tag1 (0, (Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -202), ((("a")), 100000000, 0, -196), 0), 100000000, 0, -201), (Tag1 (0, (Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -200), ((("b")), 100000000, 0, -197), 0), 100000000, 0, -199), (Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -198), (Tag3 ((("result", 951)), [((("a")), 100000000, 0, -196); ((("b")), 100000000, 0, -197)], (0)), 100000000, 0, -195), 0), 100000000, 0, -194), 0), 100000000, 0, -193), 0), 100000000, 0, -192), 0, (("runtime/runtime.ml", 85, 2771, 2773), ("runtime/runtime.ml", 85, 2771, 2835), 0), 0, Tag1 ("Protocol_conv__Runtime", 55)), 0); (("of_result", 992), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -186), (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -191), 0), 100000000, 0, -190), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -187), (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -189), 0), 100000000, 0, -188), (Tag1 (0, (Tag3 ((("result", 951)), [((("a")), 100000000, 0, -186); ((("b")), 100000000, 0, -187)], (0)), 100000000, 0, -185), (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -184), 0), 100000000, 0, -183), 0), 100000000, 0, -182), 0), 100000000, 0, -181), 0, (("runtime/runtime.ml", 86, 2836, 2838), ("runtime/runtime.ml", 86, 2836, 2900), 0), 0, Tag1 ("Protocol_conv__Runtime", 56)), 0); (("to_int", 993), ((Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -180), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -179), 0), 100000000, 0, -178), 0, (("runtime/runtime.ml", 87, 2901, 2903), ("runtime/runtime.ml", 87, 2901, 2927), 0), 0, Tag1 ("Protocol_conv__Runtime", 57)), 0); (("of_int", 994), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -177), (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -176), 0), 100000000, 0, -175), 0, (("runtime/runtime.ml", 88, 2928, 2930), ("runtime/runtime.ml", 88, 2928, 2954), 0), 0, Tag1 ("Protocol_conv__Runtime", 58)), 0); (("to_int32", 995), ((Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -174), (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -173), 0), 100000000, 0, -172), 0, (("runtime/runtime.ml", 89, 2955, 2957), ("runtime/runtime.ml", 89, 2955, 2983), 0), 0, Tag1 ("Protocol_conv__Runtime", 59)), 0); (("of_int32", 996), ((Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -171), (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -170), 0), 100000000, 0, -169), 0, (("runtime/runtime.ml", 90, 2984, 2986), ("runtime/runtime.ml", 90, 2984, 3012), 0), 0, Tag1 ("Protocol_conv__Runtime", 60)), 0); (("to_int64", 997), ((Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -168), (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -167), 0), 100000000, 0, -166), 0, (("runtime/runtime.ml", 91, 3013, 3015), ("runtime/runtime.ml", 91, 3013, 3041), 0), 0, Tag1 ("Protocol_conv__Runtime", 61)), 0); (("of_int64", 998), ((Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -165), (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -164), 0), 100000000, 0, -163), 0, (("runtime/runtime.ml", 92, 3042, 3044), ("runtime/runtime.ml", 92, 3042, 3070), 0), 0, Tag1 ("Protocol_conv__Runtime", 62)), 0); (("to_nativeint", 999), ((Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -162), (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -161), 0), 100000000, 0, -160), 0, (("runtime/runtime.ml", 93, 3071, 3073), ("runtime/runtime.ml", 93, 3071, 3105), 0), 0, Tag1 ("Protocol_conv__Runtime", 63)), 0); (("of_nativeint", 1000), ((Tag1 (0, (Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -159), (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -158), 0), 100000000, 0, -157), 0, (("runtime/runtime.ml", 94, 3106, 3108), ("runtime/runtime.ml", 94, 3106, 3140), 0), 0, Tag1 ("Protocol_conv__Runtime", 64)), 0); (("to_char", 1001), ((Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -156), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -155), 0), 100000000, 0, -154), 0, (("runtime/runtime.ml", 95, 3141, 3143), ("runtime/runtime.ml", 95, 3141, 3168), 0), 0, Tag1 ("Protocol_conv__Runtime", 65)), 0); (("of_char", 1002), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -153), (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -152), 0), 100000000, 0, -151), 0, (("runtime/runtime.ml", 96, 3169, 3171), ("runtime/runtime.ml", 96, 3169, 3196), 0), 0, Tag1 ("Protocol_conv__Runtime", 66)), 0); (("to_string", 1003), ((Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -150), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -149), 0), 100000000, 0, -148), 0, (("runtime/runtime.ml", 97, 3197, 3199), ("runtime/runtime.ml", 97, 3197, 3226), 0), 0, Tag1 ("Protocol_conv__Runtime", 67)), 0); (("of_string", 1004), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -147), (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -146), 0), 100000000, 0, -145), 0, (("runtime/runtime.ml", 98, 3227, 3229), ("runtime/runtime.ml", 98, 3227, 3256), 0), 0, Tag1 ("Protocol_conv__Runtime", 68)), 0); (("to_float", 1005), ((Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -144), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -143), 0), 100000000, 0, -142), 0, (("runtime/runtime.ml", 99, 3257, 3259), ("runtime/runtime.ml", 99, 3257, 3285), 0), 0, Tag1 ("Protocol_conv__Runtime", 69)), 0); (("of_float", 1006), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -141), (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -140), 0), 100000000, 0, -139), 0, (("runtime/runtime.ml", 100, 3286, 3288), ("runtime/runtime.ml", 100, 3286, 3314), 0), 0, Tag1 ("Protocol_conv__Runtime", 70)), 0); (("to_bool", 1007), ((Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -138), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -137), 0), 100000000, 0, -136), 0, (("runtime/runtime.ml", 101, 3315, 3317), ("runtime/runtime.ml", 101, 3315, 3342), 0), 0, Tag1 ("Protocol_conv__Runtime", 71)), 0); (("of_bool", 1008), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -135), (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -134), 0), 100000000, 0, -133), 0, (("runtime/runtime.ml", 102, 3343, 3345), ("runtime/runtime.ml", 102, 3343, 3370), 0), 0, Tag1 ("Protocol_conv__Runtime", 72)), 0); (("to_bytes", 1009), ((Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -132), (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -131), 0), 100000000, 0, -130), 0, (("runtime/runtime.ml", 103, 3371, 3373), ("runtime/runtime.ml", 103, 3371, 3399), 0), 0, Tag1 ("Protocol_conv__Runtime", 73)), 0); (("of_bytes", 1010), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -129), (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -128), 0), 100000000, 0, -127), 0, (("runtime/runtime.ml", 104, 3400, 3402), ("runtime/runtime.ml", 104, 3400, 3428), 0), 0, Tag1 ("Protocol_conv__Runtime", 74)), 0); (("to_unit", 1011), ((Tag1 (0, (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -126), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -125), 0), 100000000, 0, -124), 0, (("runtime/runtime.ml", 105, 3429, 3431), ("runtime/runtime.ml", 105, 3429, 3456), 0), 0, Tag1 ("Protocol_conv__Runtime", 75)), 0); (("of_unit", 1012), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -123), (Tag3 ((("t", 968)), 0, (0)), 100000000, 0, -122), 0), 100000000, 0, -121), 0, (("runtime/runtime.ml", 106, 3457, 3459), ("runtime/runtime.ml", 106, 3457, 3484), 0), 0, Tag1 ("Protocol_conv__Runtime", 76)), 0)])), 0, (("runtime/runtime.ml", 40, 1154, 1154), ("runtime/runtime.ml", 107, 3485, 3488), 0), Tag1 ("Protocol_conv__Runtime", 77)), 0); Tag3 (("Helper", 958), 0, (Tag1 ([(("list_map", 1013), ((Tag1 (("f"), (Tag1 (0, ((0), 100000000, 0, -441), ((0), 100000000, 0, -439), 0), 100000000, 0, -442), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((0), 100000000, 0, -441)], (0)), 100000000, 0, -440), (Tag3 ((Tag3 ("list", 9)), [((0), 100000000, 0, -439)], (0)), 100000000, 0, -438), 0), 100000000, 0, -437), 0), 100000000, 0, -436), 0, (("runtime/runtime.ml", 119, 3851, 3857), ("runtime/runtime.ml", 119, 3851, 3865), 0), 0, Tag1 ("Protocol_conv__Runtime", 78)), 0); Tag2 (("Protocol_error", 1014), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -435)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Protocol_conv__Runtime", 124)), 2, 0); Tag4 (("Lookup", 1015), ((Tag1 ([(("of_alist", 1031), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -450); ((("a")), 100000000, 0, -446)]), 100000000, 0, -449)], (0)), 100000000, 0, -448), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -447), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -446)], (0)), 100000000, 0, -445), 0), 100000000, 0, -444), 0), 100000000, 0, -443), 0, (("runtime/runtime.ml", 172, 5080, 5084), ("runtime/runtime.ml", 172, 5080, 5139), 0), 0, Tag1 ("Protocol_conv__Runtime", 125)), 0)])), 0, (("runtime/runtime.ml", 171, 5053, 5055), ("runtime/runtime.ml", 173, 5140, 5145), 0), Tag1 ("Protocol_conv__Runtime", 126)), 0); Tag3 (("Hashtbl_lookup", 1016), 0, (((("Lookup", 1015))), 0, (("runtime/runtime.ml", 174, 5146, 5148), ("runtime/runtime.ml", 181, 5429, 5434), 0), Tag1 ("Protocol_conv__Runtime", 134)), 0, 0); Tag3 (("Lookup", 1017), 1, (Tag3 ((("Hashtbl_lookup", 1016))), 0, (("runtime/runtime.ml", 182, 5435, 5437), ("runtime/runtime.ml", 182, 5435, 5467), 0), Tag1 ("Protocol_conv__Runtime", 135)), 0, 0); (("raise_errorf", 1018), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format4"), [((("a")), 100000000, 0, -430); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -432); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -433); ((("b")), 100000000, 0, -434)], (0)), 100000000, 0, -431), ((("a")), 100000000, 0, -430), 0), 100000000, 0, -429), 0, (("runtime/runtime.ml", 184, 5469, 5475), ("runtime/runtime.ml", 184, 5469, 5487), 0), 0, Tag1 ("Protocol_conv__Runtime", 136)), 0); (("map_record_in", 1019), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -428), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -427), 0), 100000000, 0, -426), (Tag1 (0, (Tag3 (Tag1 ((("Record_in", 952)), "t"), [((("t")), 100000000, 0, -422); ((("a")), 100000000, 0, -423); ((("b")), 100000000, 0, -424)], (0)), 100000000, 0, -425), (Tag3 (Tag1 ((("Record_in", 952)), "t"), [((("t")), 100000000, 0, -422); ((("a")), 100000000, 0, -423); ((("b")), 100000000, 0, -424)], (0)), 100000000, 0, -421), 0), 100000000, 0, -420), 0), 100000000, 0, -419), 0, (("runtime/runtime.ml", 188, 5659, 5669), ("runtime/runtime.ml", 188, 5659, 5682), 0), 0, Tag1 ("Protocol_conv__Runtime", 139)), 0); (("to_record", 1020), ((Tag1 (Tag1 ("strict"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -418)], (0)), 100000000, 0, -417), (Tag1 (0, (Tag3 (Tag1 ((("Record_in", 952)), "t"), [((("t")), 100000000, 0, -414); ((("constr")), 100000000, 0, -415); ((("b")), 100000000, 0, -410)], (0)), 100000000, 0, -416), (Tag1 (0, ((("constr")), 100000000, 0, -415), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -413); ((("t")), 100000000, 0, -414)]), 100000000, 0, -412)], (0)), 100000000, 0, -411), ((("b")), 100000000, 0, -410), 0), 100000000, 0, -409), 0), 100000000, 0, -408), 0), 100000000, 0, -407), 0), 100000000, 0, -406), 0, (("runtime/runtime.ml", 198, 6315, 6321), ("runtime/runtime.ml", 198, 6315, 6330), 0), 0, Tag1 ("Protocol_conv__Runtime", 153)), 0); (("map_record_out", 1021), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -405), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -404), 0), 100000000, 0, -403), (Tag1 (0, (Tag3 (Tag1 ((("Record_out", 953)), "t"), [((("t")), 100000000, 0, -400); ((("a")), 100000000, 0, -401); ((("t")), 100000000, 0, -400)], (0)), 100000000, 0, -402), (Tag3 (Tag1 ((("Record_out", 953)), "t"), [((("t")), 100000000, 0, -400); ((("a")), 100000000, 0, -401); ((("t")), 100000000, 0, -400)], (0)), 100000000, 0, -399), 0), 100000000, 0, -398), 0), 100000000, 0, -397), 0, (("runtime/runtime.ml", 242, 8066, 8076), ("runtime/runtime.ml", 242, 8066, 8090), 0), 0, Tag1 ("Protocol_conv__Runtime", 208)), 0); Tag1 (("serialize_record", 1022), ([((("t")), 100000000, 0, -393)], 1, 0, 1, ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -396); ((("t")), 100000000, 0, -393)]), 100000000, 0, -395)], (0)), 100000000, 0, -394), ((("t")), 100000000, 0, -393), 0), 100000000, 0, -392)), [63], [0], 0, 0, (("runtime/runtime.ml", 250, 8376, 8378), ("runtime/runtime.ml", 250, 8376, 8429), 0), 0, 0, 0, Tag1 ("Protocol_conv__Runtime", 221)), 1, 0); (("of_record", 1023), ((Tag1 (("omit_default"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -391), (Tag1 (0, (Tag3 ((("serialize_record", 1022)), [((("t")), 100000000, 0, -389)], (0)), 100000000, 0, -390), (Tag1 (0, (Tag3 (Tag1 ((("Record_out", 953)), "t"), [((("t")), 100000000, 0, -389); ((("a")), 100000000, 0, -387); ((("t")), 100000000, 0, -389)], (0)), 100000000, 0, -388), ((("a")), 100000000, 0, -387), 0), 100000000, 0, -386), 0), 100000000, 0, -385), 0), 100000000, 0, -384), 0, (("runtime/runtime.ml", 256, 8716, 8722), ("runtime/runtime.ml", 256, 8716, 8731), 0), 0, Tag1 ("Protocol_conv__Runtime", 222)), 0); (("to_tuple", 1024), ((Tag1 (0, (Tag3 (Tag1 ((("Tuple_in", 954)), "t"), [((("t")), 100000000, 0, -381); ((("a")), 100000000, 0, -382); ((("b")), 100000000, 0, -379)], (0)), 100000000, 0, -383), (Tag1 (0, ((("a")), 100000000, 0, -382), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("t")), 100000000, 0, -381)], (0)), 100000000, 0, -380), ((("b")), 100000000, 0, -379), 0), 100000000, 0, -378), 0), 100000000, 0, -377), 0), 100000000, 0, -376), 0, (("runtime/runtime.ml", 278, 9534, 9544), ("runtime/runtime.ml", 278, 9534, 9552), 0), 0, Tag1 ("Protocol_conv__Runtime", 252)), 0); Tag1 (("serialize_tuple", 1025), ([((("t")), 100000000, 0, -374)], 1, 0, 1, ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("t")), 100000000, 0, -374)], (0)), 100000000, 0, -375), ((("t")), 100000000, 0, -374), 0), 100000000, 0, -373)), [63], [0], 0, 0, (("runtime/runtime.ml", 293, 10011, 10013), ("runtime/runtime.ml", 293, 10011, 10052), 0), 0, 0, 0, Tag1 ("Protocol_conv__Runtime", 268)), 1, 0); (("of_tuple", 1026), ((Tag1 (0, (Tag3 ((("serialize_tuple", 1025)), [((("t")), 100000000, 0, -371)], (0)), 100000000, 0, -372), (Tag1 (0, (Tag3 (Tag1 ((("Tuple_out", 955)), "t"), [((("t")), 100000000, 0, -371); ((("a")), 100000000, 0, -369); ((("t")), 100000000, 0, -371)], (0)), 100000000, 0, -370), ((("a")), 100000000, 0, -369), 0), 100000000, 0, -368), 0), 100000000, 0, -367), 0, (("runtime/runtime.ml", 294, 10053, 10059), ("runtime/runtime.ml", 294, 10053, 10067), 0), 0, Tag1 ("Protocol_conv__Runtime", 269)), 0); Tag1 (("serialize_variant", 1027), ([((("t")), 100000000, 0, -364)], 1, 0, 1, ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -366), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("t")), 100000000, 0, -364)], (0)), 100000000, 0, -365), ((("t")), 100000000, 0, -364), 0), 100000000, 0, -363), 0), 100000000, 0, -362)), [63], [0], 0, 0, (("runtime/runtime.ml", 314, 11071, 11073), ("runtime/runtime.ml", 314, 11071, 11124), 0), 0, 0, 0, Tag1 ("Protocol_conv__Runtime", 404)), 1, 0); (("of_variant", 1028), ((Tag1 (0, (Tag3 ((("serialize_variant", 1027)), [((("t")), 100000000, 0, -359)], (0)), 100000000, 0, -361), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -360), (Tag1 (0, (Tag3 (Tag1 ((("Tuple_out", 955)), "t"), [((("t")), 100000000, 0, -359); ((("a")), 100000000, 0, -357); ((("t")), 100000000, 0, -359)], (0)), 100000000, 0, -358), ((("a")), 100000000, 0, -357), 0), 100000000, 0, -356), 0), 100000000, 0, -355), 0), 100000000, 0, -354), 0, (("runtime/runtime.ml", 319, 11228, 11234), ("runtime/runtime.ml", 319, 11228, 11244), 0), 0, Tag1 ("Protocol_conv__Runtime", 405)), 0); (("map_constructor_names", 1029), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -353), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -352), 0), 100000000, 0, -351), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Variant_in", 956)), "t"), [((("t")), 100000000, 0, -347); ((("a")), 100000000, 0, -348)], (0)), 100000000, 0, -350)], (0)), 100000000, 0, -349), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Variant_in", 956)), "t"), [((("t")), 100000000, 0, -347); ((("a")), 100000000, 0, -348)], (0)), 100000000, 0, -346)], (0)), 100000000, 0, -345), 0), 100000000, 0, -344), 0), 100000000, 0, -343), 0, (("runtime/runtime.ml", 324, 11460, 11466), ("runtime/runtime.ml", 324, 11460, 11487), 0), 0, Tag1 ("Protocol_conv__Runtime", 410)), 0); (("to_variant", 1030), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Variant_in", 956)), "t"), [((("t")), 100000000, 0, -339); ((("a")), 100000000, 0, -337)], (0)), 100000000, 0, -342)], (0)), 100000000, 0, -341), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -340), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("t")), 100000000, 0, -339)], (0)), 100000000, 0, -338), ((("a")), 100000000, 0, -337), 0), 100000000, 0, -336), 0), 100000000, 0, -335), 0), 100000000, 0, -334), 0, (("runtime/runtime.ml", 328, 11729, 11735), ("runtime/runtime.ml", 328, 11729, 11745), 0), 0, Tag1 ("Protocol_conv__Runtime", 417)), 0)]), 0, (("runtime/runtime.ml", 113, 3769, 3769), ("runtime/runtime.ml", 337, 12101, 12104), 0), Tag1 ("Protocol_conv__Runtime", 427)), 0, 0)], "Protocol_conv__Runtime", [("Protocol_conv__Runtime", ("\213#\128p\208@\159\n\0300\003\162R\197}a")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Printf", ("\215<\139]\021\142\224E\245m\198qc(W\229")); ("Stdlib__ListLabels", ("*\194\012\191\020%\170\249m\002\180\178hk\205\220")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__ArrayLabels", ("\029\143d\025\218v\003\007\212jC\235/\205\006\198")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Protocol_conv", ("\144\028*\128\224\209 \162\172\128\154\003y\1343\236")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

