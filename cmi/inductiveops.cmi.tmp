val type_of_inductive : Environ.env -> Constr.pinductive -> Constr.types
val e_type_of_inductive :
  Environ.env ->
  Evd.evar_map -> Names.inductive EConstr.puniverses -> EConstr.types
val type_of_constructor : Environ.env -> Constr.pconstructor -> Constr.types
val e_type_of_constructor :
  Environ.env ->
  Evd.evar_map -> Names.constructor EConstr.puniverses -> EConstr.types
val type_of_constructors :
  Environ.env -> Constr.pinductive -> Constr.types array
val arities_of_constructors :
  Environ.env -> Constr.pinductive -> Constr.types array
type inductive_family
val make_ind_family :
  Names.inductive Univ.puniverses * Constr.constr list -> inductive_family
val dest_ind_family :
  inductive_family -> Names.inductive Univ.puniverses * Constr.constr list
val map_ind_family :
  (Constr.constr -> Constr.constr) -> inductive_family -> inductive_family
val liftn_inductive_family :
  int -> int -> inductive_family -> inductive_family
val lift_inductive_family : int -> inductive_family -> inductive_family
val substnl_ind_family :
  Constr.constr list -> int -> inductive_family -> inductive_family
val relevance_of_inductive_family :
  Environ.env -> inductive_family -> Sorts.relevance
type inductive_type = IndType of inductive_family * EConstr.constr list
val make_ind_type : inductive_family * EConstr.constr list -> inductive_type
val dest_ind_type : inductive_type -> inductive_family * EConstr.constr list
val map_inductive_type :
  (EConstr.constr -> EConstr.constr) -> inductive_type -> inductive_type
val liftn_inductive_type : int -> int -> inductive_type -> inductive_type
val lift_inductive_type : int -> inductive_type -> inductive_type
val substnl_ind_type :
  EConstr.constr list -> int -> inductive_type -> inductive_type
val ind_of_ind_type : inductive_type -> Names.inductive
val relevance_of_inductive_type :
  Environ.env -> inductive_type -> Sorts.relevance
val mkAppliedInd : inductive_type -> EConstr.constr
val mis_is_recursive_subset : int list -> Declarations.wf_paths -> bool
val mis_is_recursive :
  Names.inductive * Declarations.mutual_inductive_body *
  Declarations.one_inductive_body -> bool
val mis_nf_constructor_type :
  Constr.pconstructor ->
  Declarations.mutual_inductive_body * Declarations.one_inductive_body ->
  Constr.constr
val nconstructors : Environ.env -> Names.inductive -> int
val nconstructors_env : Environ.env -> Names.inductive -> int
val constructors_nrealargs : Environ.env -> Names.inductive -> int array
val constructors_nrealargs_env : Environ.env -> Names.inductive -> int array
val constructors_nrealdecls : Environ.env -> Names.inductive -> int array
val constructors_nrealdecls_env : Environ.env -> Names.inductive -> int array
val inductive_nrealargs : Environ.env -> Names.inductive -> int
val inductive_nrealargs_env : Environ.env -> Names.inductive -> int
val inductive_nrealdecls : Environ.env -> Names.inductive -> int
val inductive_nrealdecls_env : Environ.env -> Names.inductive -> int
val inductive_nallargs : Environ.env -> Names.inductive -> int
val inductive_nallargs_env : Environ.env -> Names.inductive -> int
val inductive_nalldecls : Environ.env -> Names.inductive -> int
val inductive_nalldecls_env : Environ.env -> Names.inductive -> int
val inductive_nparams : Environ.env -> Names.inductive -> int
val inductive_nparams_env : Environ.env -> Names.inductive -> int
val inductive_nparamdecls : Environ.env -> Names.inductive -> int
val inductive_nparamdecls_env : Environ.env -> Names.inductive -> int
val inductive_paramdecls :
  Environ.env -> Constr.pinductive -> Constr.rel_context
val inductive_paramdecls_env :
  Environ.env -> Constr.pinductive -> Constr.rel_context
val inductive_alldecls :
  Environ.env -> Constr.pinductive -> Constr.rel_context
val inductive_alldecls_env :
  Environ.env -> Constr.pinductive -> Constr.rel_context
val constructor_nallargs : Environ.env -> Names.constructor -> int
val constructor_nallargs_env : Environ.env -> Names.constructor -> int
val constructor_nalldecls : Environ.env -> Names.constructor -> int
val constructor_nalldecls_env : Environ.env -> Names.constructor -> int
val constructor_nrealargs : Environ.env -> Names.constructor -> int
val constructor_nrealargs_env : Environ.env -> Names.constructor -> int
val constructor_nrealdecls : Environ.env -> Names.constructor -> int
val constructor_nrealdecls_env : Environ.env -> Names.constructor -> int
val inductive_alltags : Environ.env -> Names.inductive -> bool list
val constructor_alltags : Environ.env -> Names.constructor -> bool list
val constructor_has_local_defs : Environ.env -> Names.constructor -> bool
val inductive_has_local_defs : Environ.env -> Names.inductive -> bool
val sorts_below : Sorts.family -> Sorts.family list
val top_allowed_sort : Environ.env -> Names.inductive -> Sorts.family
val has_dependent_elim : Declarations.mind_specif -> bool
val type_of_projection_knowing_arg :
  Environ.env ->
  Evd.evar_map ->
  Names.Projection.t -> EConstr.t -> EConstr.types -> Constr.types
type constructor_summary = {
  cs_cstr : Constr.pconstructor;
  cs_params : Constr.constr list;
  cs_nargs : int;
  cs_args : Constr.rel_context;
  cs_concl_realargs : Constr.constr array;
}
val lift_constructor : int -> constructor_summary -> constructor_summary
val get_constructor :
  Constr.pinductive * Declarations.mutual_inductive_body *
  Declarations.one_inductive_body * Constr.constr list ->
  int -> constructor_summary
val get_constructors :
  Environ.env -> inductive_family -> constructor_summary array
val get_arity : Environ.env -> inductive_family -> Constr.rel_context
val build_dependent_constructor : constructor_summary -> Constr.constr
val build_dependent_inductive :
  Environ.env -> inductive_family -> Constr.constr
val make_arity_signature :
  Environ.env ->
  Evd.evar_map -> bool -> inductive_family -> EConstr.rel_context
val make_arity :
  Environ.env ->
  Evd.evar_map ->
  bool -> inductive_family -> EConstr.ESorts.t -> EConstr.types
val extract_mrectype :
  Evd.evar_map ->
  EConstr.t -> (Names.inductive * EConstr.EInstance.t) * EConstr.constr list
val find_mrectype :
  Environ.env ->
  Evd.evar_map ->
  EConstr.types ->
  (Names.inductive * EConstr.EInstance.t) * EConstr.constr list
val find_mrectype_vect :
  Environ.env ->
  Evd.evar_map ->
  EConstr.types ->
  (Names.inductive * EConstr.EInstance.t) * EConstr.constr array
val find_rectype :
  Environ.env -> Evd.evar_map -> EConstr.types -> inductive_type
val find_inductive :
  Environ.env ->
  Evd.evar_map ->
  EConstr.types ->
  (Names.inductive * EConstr.EInstance.t) * Constr.constr list
val find_coinductive :
  Environ.env ->
  Evd.evar_map ->
  EConstr.types ->
  (Names.inductive * EConstr.EInstance.t) * Constr.constr list
val instantiate_constructor_params :
  Constr.pconstructor ->
  Declarations.mind_specif -> Constr.constr list -> Constr.constr
val arity_of_case_predicate :
  Environ.env -> inductive_family -> bool -> Sorts.t -> Constr.types
val make_case_info :
  Environ.env ->
  Names.inductive -> Sorts.relevance -> Constr.case_style -> Constr.case_info
val make_case_or_project :
  Environ.env ->
  Evd.evar_map ->
  inductive_type ->
  Constr.case_info ->
  EConstr.constr -> EConstr.constr -> EConstr.constr array -> EConstr.constr
val simple_make_case_or_project :
  Environ.env ->
  Evd.evar_map ->
  Constr.case_info ->
  EConstr.constr ->
  EConstr.case_invert ->
  EConstr.constr -> EConstr.constr array -> EConstr.constr
val make_case_invert :
  Environ.env -> inductive_type -> Constr.case_info -> EConstr.case_invert
val compute_projections :
  Environ.env -> Names.inductive -> (Constr.constr * Constr.types) array
val type_of_inductive_knowing_conclusion :
  Environ.env ->
  Evd.evar_map ->
  Declarations.mind_specif Univ.puniverses ->
  EConstr.types -> Evd.evar_map * EConstr.types
("DEBUG:rule", [(("type_of_inductive", 1418), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -574), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pinductive"), 0, (0)), 100000000, 0, -573), (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -572), 0), 100000000, 0, -571), 0), 100000000, 0, -570), 0, (("pretyping/inductiveops.mli", 20, 850, 850), ("pretyping/inductiveops.mli", 20, 850, 900), 0), 0, Tag1 ("Inductiveops", 1)), 0); (("e_type_of_inductive", 1419), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -569), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -568), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "puniverses"), [(Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -567)], (0)), 100000000, 0, -566), (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -565), 0), 100000000, 0, -564), 0), 100000000, 0, -563), 0), 100000000, 0, -562), 0, (("pretyping/inductiveops.mli", 22, 902, 902), ("pretyping/inductiveops.mli", 22, 902, 992), 0), 0, Tag1 ("Inductiveops", 2)), 0); (("type_of_constructor", 1420), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -561), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pconstructor"), 0, (0)), 100000000, 0, -560), (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -559), 0), 100000000, 0, -558), 0), 100000000, 0, -557), 0, (("pretyping/inductiveops.mli", 25, 1035, 1035), ("pretyping/inductiveops.mli", 25, 1035, 1089), 0), 0, Tag1 ("Inductiveops", 3)), 0); (("e_type_of_constructor", 1421), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -556), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -555), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "puniverses"), [(Tag3 (Tag1 ((Tag2 ("Names")), "constructor"), 0, (0)), 100000000, 0, -554)], (0)), 100000000, 0, -553), (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -552), 0), 100000000, 0, -551), 0), 100000000, 0, -550), 0), 100000000, 0, -549), 0, (("pretyping/inductiveops.mli", 27, 1091, 1091), ("pretyping/inductiveops.mli", 27, 1091, 1185), 0), 0, Tag1 ("Inductiveops", 4)), 0); (("type_of_constructors", 1422), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -548), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pinductive"), 0, (0)), 100000000, 0, -547), (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -546)], (0)), 100000000, 0, -545), 0), 100000000, 0, -544), 0), 100000000, 0, -543), 0, (("pretyping/inductiveops.mli", 29, 1187, 1187), ("pretyping/inductiveops.mli", 29, 1187, 1246), 0), 0, Tag1 ("Inductiveops", 5)), 0); (("arities_of_constructors", 1423), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -542), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pinductive"), 0, (0)), 100000000, 0, -541), (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -540)], (0)), 100000000, 0, -539), 0), 100000000, 0, -538), 0), 100000000, 0, -537), 0, (("pretyping/inductiveops.mli", 32, 1295, 1295), ("pretyping/inductiveops.mli", 32, 1295, 1357), 0), 0, Tag1 ("Inductiveops", 6)), 0); Tag1 (("inductive_family", 1424), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("pretyping/inductiveops.mli", 37, 1560, 1560), ("pretyping/inductiveops.mli", 37, 1560, 1581), 0), 0, 0, 0, Tag1 ("Inductiveops", 7)), 1, 0); (("make_ind_family", 1425), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Univ")), "puniverses"), [(Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -534)], (0)), 100000000, 0, -533); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -536)], (0)), 100000000, 0, -535)]), 100000000, 0, -532), (Tag3 ((("inductive_family", 1424)), 0, (0)), 100000000, 0, -531), 0), 100000000, 0, -530), 0, (("pretyping/inductiveops.mli", 38, 1582, 1582), ("pretyping/inductiveops.mli", 38, 1582, 1663), 0), 0, Tag1 ("Inductiveops", 8)), 0); (("dest_ind_family", 1426), ((Tag1 (0, (Tag3 ((("inductive_family", 1424)), 0, (0)), 100000000, 0, -529), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Univ")), "puniverses"), [(Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -526)], (0)), 100000000, 0, -525); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -528)], (0)), 100000000, 0, -527)]), 100000000, 0, -524), 0), 100000000, 0, -523), 0, (("pretyping/inductiveops.mli", 39, 1664, 1664), ("pretyping/inductiveops.mli", 39, 1664, 1745), 0), 0, Tag1 ("Inductiveops", 9)), 0); (("map_ind_family", 1427), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -522), (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -521), 0), 100000000, 0, -520), (Tag1 (0, (Tag3 ((("inductive_family", 1424)), 0, (0)), 100000000, 0, -519), (Tag3 ((("inductive_family", 1424)), 0, (0)), 100000000, 0, -518), 0), 100000000, 0, -517), 0), 100000000, 0, -516), 0, (("pretyping/inductiveops.mli", 40, 1746, 1746), ("pretyping/inductiveops.mli", 40, 1746, 1825), 0), 0, Tag1 ("Inductiveops", 10)), 0); (("liftn_inductive_family", 1428), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -515), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -514), (Tag1 (0, (Tag3 ((("inductive_family", 1424)), 0, (0)), 100000000, 0, -513), (Tag3 ((("inductive_family", 1424)), 0, (0)), 100000000, 0, -512), 0), 100000000, 0, -511), 0), 100000000, 0, -510), 0), 100000000, 0, -509), 0, (("pretyping/inductiveops.mli", 41, 1826, 1826), ("pretyping/inductiveops.mli", 41, 1826, 1905), 0), 0, Tag1 ("Inductiveops", 11)), 0); (("lift_inductive_family", 1429), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -508), (Tag1 (0, (Tag3 ((("inductive_family", 1424)), 0, (0)), 100000000, 0, -507), (Tag3 ((("inductive_family", 1424)), 0, (0)), 100000000, 0, -506), 0), 100000000, 0, -505), 0), 100000000, 0, -504), 0, (("pretyping/inductiveops.mli", 42, 1906, 1906), ("pretyping/inductiveops.mli", 42, 1906, 1978), 0), 0, Tag1 ("Inductiveops", 12)), 0); (("substnl_ind_family", 1430), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -503)], (0)), 100000000, 0, -502), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -501), (Tag1 (0, (Tag3 ((("inductive_family", 1424)), 0, (0)), 100000000, 0, -500), (Tag3 ((("inductive_family", 1424)), 0, (0)), 100000000, 0, -499), 0), 100000000, 0, -498), 0), 100000000, 0, -497), 0), 100000000, 0, -496), 0, (("pretyping/inductiveops.mli", 43, 1979, 1979), ("pretyping/inductiveops.mli", 44, 2004, 2064), 0), 0, Tag1 ("Inductiveops", 13)), 0); (("relevance_of_inductive_family", 1431), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -495), (Tag1 (0, (Tag3 ((("inductive_family", 1424)), 0, (0)), 100000000, 0, -494), (Tag3 (Tag1 ((Tag2 ("Sorts")), "relevance"), 0, (0)), 100000000, 0, -493), 0), 100000000, 0, -492), 0), 100000000, 0, -491), 0, (("pretyping/inductiveops.mli", 46, 2066, 2066), ("pretyping/inductiveops.mli", 46, 2066, 2144), 0), 0, Tag1 ("Inductiveops", 14)), 0); Tag1 (("inductive_type", 1432), (0, 0, Tag1 ([(("IndType", 1197), ([(Tag3 ((("inductive_family", 1424)), 0, (0)), 100000000, 0, -488); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -490)], (0)), 100000000, 0, -489)]), 0, (("pretyping/inductiveops.mli", 49, 2210, 2232), ("pretyping/inductiveops.mli", 49, 2210, 2281), 0), 0, Tag1 ("Inductiveops", 16))], 0), 1, 0, 0, 0, 0, 0, (("pretyping/inductiveops.mli", 49, 2210, 2210), ("pretyping/inductiveops.mli", 49, 2210, 2281), 0), 0, 0, 0, Tag1 ("Inductiveops", 15)), 1, 0); (("make_ind_type", 1433), ((Tag1 (0, (Tag2 ([(Tag3 ((("inductive_family", 1424)), 0, (0)), 100000000, 0, -485); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -487)], (0)), 100000000, 0, -486)]), 100000000, 0, -484), (Tag3 ((("inductive_type", 1432)), 0, (0)), 100000000, 0, -483), 0), 100000000, 0, -482), 0, (("pretyping/inductiveops.mli", 50, 2282, 2282), ("pretyping/inductiveops.mli", 50, 2282, 2358), 0), 0, Tag1 ("Inductiveops", 17)), 0); (("dest_ind_type", 1434), ((Tag1 (0, (Tag3 ((("inductive_type", 1432)), 0, (0)), 100000000, 0, -481), (Tag2 ([(Tag3 ((("inductive_family", 1424)), 0, (0)), 100000000, 0, -478); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -480)], (0)), 100000000, 0, -479)]), 100000000, 0, -477), 0), 100000000, 0, -476), 0, (("pretyping/inductiveops.mli", 51, 2359, 2359), ("pretyping/inductiveops.mli", 51, 2359, 2435), 0), 0, Tag1 ("Inductiveops", 18)), 0); (("map_inductive_type", 1435), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -475), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -474), 0), 100000000, 0, -473), (Tag1 (0, (Tag3 ((("inductive_type", 1432)), 0, (0)), 100000000, 0, -472), (Tag3 ((("inductive_type", 1432)), 0, (0)), 100000000, 0, -471), 0), 100000000, 0, -470), 0), 100000000, 0, -469), 0, (("pretyping/inductiveops.mli", 52, 2436, 2436), ("pretyping/inductiveops.mli", 52, 2436, 2531), 0), 0, Tag1 ("Inductiveops", 19)), 0); (("liftn_inductive_type", 1436), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -468), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -467), (Tag1 (0, (Tag3 ((("inductive_type", 1432)), 0, (0)), 100000000, 0, -466), (Tag3 ((("inductive_type", 1432)), 0, (0)), 100000000, 0, -465), 0), 100000000, 0, -464), 0), 100000000, 0, -463), 0), 100000000, 0, -462), 0, (("pretyping/inductiveops.mli", 53, 2532, 2532), ("pretyping/inductiveops.mli", 53, 2532, 2605), 0), 0, Tag1 ("Inductiveops", 20)), 0); (("lift_inductive_type", 1437), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -461), (Tag1 (0, (Tag3 ((("inductive_type", 1432)), 0, (0)), 100000000, 0, -460), (Tag3 ((("inductive_type", 1432)), 0, (0)), 100000000, 0, -459), 0), 100000000, 0, -458), 0), 100000000, 0, -457), 0, (("pretyping/inductiveops.mli", 54, 2606, 2606), ("pretyping/inductiveops.mli", 54, 2606, 2672), 0), 0, Tag1 ("Inductiveops", 21)), 0); (("substnl_ind_type", 1438), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -456)], (0)), 100000000, 0, -455), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -454), (Tag1 (0, (Tag3 ((("inductive_type", 1432)), 0, (0)), 100000000, 0, -453), (Tag3 ((("inductive_type", 1432)), 0, (0)), 100000000, 0, -452), 0), 100000000, 0, -451), 0), 100000000, 0, -450), 0), 100000000, 0, -449), 0, (("pretyping/inductiveops.mli", 55, 2673, 2673), ("pretyping/inductiveops.mli", 55, 2673, 2758), 0), 0, Tag1 ("Inductiveops", 22)), 0); (("ind_of_ind_type", 1439), ((Tag1 (0, (Tag3 ((("inductive_type", 1432)), 0, (0)), 100000000, 0, -448), (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -447), 0), 100000000, 0, -446), 0, (("pretyping/inductiveops.mli", 56, 2759, 2759), ("pretyping/inductiveops.mli", 56, 2759, 2808), 0), 0, Tag1 ("Inductiveops", 23)), 0); (("relevance_of_inductive_type", 1440), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -445), (Tag1 (0, (Tag3 ((("inductive_type", 1432)), 0, (0)), 100000000, 0, -444), (Tag3 (Tag1 ((Tag2 ("Sorts")), "relevance"), 0, (0)), 100000000, 0, -443), 0), 100000000, 0, -442), 0), 100000000, 0, -441), 0, (("pretyping/inductiveops.mli", 58, 2810, 2810), ("pretyping/inductiveops.mli", 58, 2810, 2884), 0), 0, Tag1 ("Inductiveops", 24)), 0); (("mkAppliedInd", 1441), ((Tag1 (0, (Tag3 ((("inductive_type", 1432)), 0, (0)), 100000000, 0, -440), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -439), 0), 100000000, 0, -438), 0, (("pretyping/inductiveops.mli", 60, 2886, 2886), ("pretyping/inductiveops.mli", 60, 2886, 2937), 0), 0, Tag1 ("Inductiveops", 25)), 0); (("mis_is_recursive_subset", 1442), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -437)], (0)), 100000000, 0, -436), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "wf_paths"), 0, (0)), 100000000, 0, -435), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -434), 0), 100000000, 0, -433), 0), 100000000, 0, -432), 0, (("pretyping/inductiveops.mli", 61, 2938, 2938), ("pretyping/inductiveops.mli", 61, 2938, 2996), 0), 0, Tag1 ("Inductiveops", 26)), 0); (("mis_is_recursive", 1443), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -429); (Tag3 (Tag1 ((Tag2 ("Declarations")), "mutual_inductive_body"), 0, (0)), 100000000, 0, -430); (Tag3 (Tag1 ((Tag2 ("Declarations")), "one_inductive_body"), 0, (0)), 100000000, 0, -431)]), 100000000, 0, -428), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -427), 0), 100000000, 0, -426), 0, (("pretyping/inductiveops.mli", 62, 2997, 2997), ("pretyping/inductiveops.mli", 63, 3020, 3084), 0), 0, Tag1 ("Inductiveops", 27)), 0); (("mis_nf_constructor_type", 1444), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pconstructor"), 0, (0)), 100000000, 0, -425), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Declarations")), "mutual_inductive_body"), 0, (0)), 100000000, 0, -423); (Tag3 (Tag1 ((Tag2 ("Declarations")), "one_inductive_body"), 0, (0)), 100000000, 0, -424)]), 100000000, 0, -422), (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -421), 0), 100000000, 0, -420), 0), 100000000, 0, -419), 0, (("pretyping/inductiveops.mli", 64, 3085, 3085), ("pretyping/inductiveops.mli", 65, 3115, 3185), 0), 0, Tag1 ("Inductiveops", 28)), 0); (("nconstructors", 1445), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -418), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -417), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -416), 0), 100000000, 0, -415), 0), 100000000, 0, -414), 0, (("pretyping/inductiveops.mli", 70, 3280, 3280), ("pretyping/inductiveops.mli", 70, 3280, 3323), 0), 0, Tag1 ("Inductiveops", 29)), 0); (("nconstructors_env", 1446), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -413), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -412), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -411), 0), 100000000, 0, -410), 0), 100000000, 0, -409), 0, (("pretyping/inductiveops.mli", 71, 3324, 3324), ("pretyping/inductiveops.mli", 72, 3372, 3431), 0), [(("ocaml.deprecated", (("pretyping/inductiveops.mli", 72, 3372, 3375), ("pretyping/inductiveops.mli", 72, 3372, 3391), 0)), ([([(Tag1 (Tag2 ("Alias for Inductiveops.nconstructors", (("pretyping/inductiveops.mli", 72, 3372, 3393), ("pretyping/inductiveops.mli", 72, 3372, 3429), 0), 0)), (("pretyping/inductiveops.mli", 72, 3372, 3392), ("pretyping/inductiveops.mli", 72, 3372, 3430), 0), 0, 0)], (("pretyping/inductiveops.mli", 72, 3372, 3392), ("pretyping/inductiveops.mli", 72, 3372, 3430), 0))]), (("pretyping/inductiveops.mli", 72, 3372, 3372), ("pretyping/inductiveops.mli", 72, 3372, 3431), 0))], Tag1 ("Inductiveops", 30)), 0); (("constructors_nrealargs", 1447), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -408), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -407), (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -406)], (0)), 100000000, 0, -405), 0), 100000000, 0, -404), 0), 100000000, 0, -403), 0, (("pretyping/inductiveops.mli", 75, 3513, 3513), ("pretyping/inductiveops.mli", 75, 3513, 3571), 0), 0, Tag1 ("Inductiveops", 31)), 0); (("constructors_nrealargs_env", 1448), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -402), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -401), (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -400)], (0)), 100000000, 0, -399), 0), 100000000, 0, -398), 0), 100000000, 0, -397), 0, (("pretyping/inductiveops.mli", 76, 3572, 3572), ("pretyping/inductiveops.mli", 77, 3635, 3703), 0), [(("ocaml.deprecated", (("pretyping/inductiveops.mli", 77, 3635, 3638), ("pretyping/inductiveops.mli", 77, 3635, 3654), 0)), ([([(Tag1 (Tag2 ("Alias for Inductiveops.constructors_nrealargs", (("pretyping/inductiveops.mli", 77, 3635, 3656), ("pretyping/inductiveops.mli", 77, 3635, 3701), 0), 0)), (("pretyping/inductiveops.mli", 77, 3635, 3655), ("pretyping/inductiveops.mli", 77, 3635, 3702), 0), 0, 0)], (("pretyping/inductiveops.mli", 77, 3635, 3655), ("pretyping/inductiveops.mli", 77, 3635, 3702), 0))]), (("pretyping/inductiveops.mli", 77, 3635, 3635), ("pretyping/inductiveops.mli", 77, 3635, 3703), 0))], Tag1 ("Inductiveops", 32)), 0); (("constructors_nrealdecls", 1449), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -396), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -395), (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -394)], (0)), 100000000, 0, -393), 0), 100000000, 0, -392), 0), 100000000, 0, -391), 0, (("pretyping/inductiveops.mli", 80, 3785, 3785), ("pretyping/inductiveops.mli", 80, 3785, 3844), 0), 0, Tag1 ("Inductiveops", 33)), 0); (("constructors_nrealdecls_env", 1450), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -390), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -389), (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -388)], (0)), 100000000, 0, -387), 0), 100000000, 0, -386), 0), 100000000, 0, -385), 0, (("pretyping/inductiveops.mli", 81, 3845, 3845), ("pretyping/inductiveops.mli", 82, 3909, 3978), 0), [(("ocaml.deprecated", (("pretyping/inductiveops.mli", 82, 3909, 3912), ("pretyping/inductiveops.mli", 82, 3909, 3928), 0)), ([([(Tag1 (Tag2 ("Alias for Inductiveops.constructors_nrealdecls", (("pretyping/inductiveops.mli", 82, 3909, 3930), ("pretyping/inductiveops.mli", 82, 3909, 3976), 0), 0)), (("pretyping/inductiveops.mli", 82, 3909, 3929), ("pretyping/inductiveops.mli", 82, 3909, 3977), 0), 0, 0)], (("pretyping/inductiveops.mli", 82, 3909, 3929), ("pretyping/inductiveops.mli", 82, 3909, 3977), 0))]), (("pretyping/inductiveops.mli", 82, 3909, 3909), ("pretyping/inductiveops.mli", 82, 3909, 3978), 0))], Tag1 ("Inductiveops", 34)), 0); (("inductive_nrealargs", 1451), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -384), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -383), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -382), 0), 100000000, 0, -381), 0), 100000000, 0, -380), 0, (("pretyping/inductiveops.mli", 85, 4045, 4045), ("pretyping/inductiveops.mli", 85, 4045, 4094), 0), 0, Tag1 ("Inductiveops", 35)), 0); (("inductive_nrealargs_env", 1452), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -379), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -378), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -377), 0), 100000000, 0, -376), 0), 100000000, 0, -375), 0, (("pretyping/inductiveops.mli", 86, 4095, 4095), ("pretyping/inductiveops.mli", 87, 4149, 4214), 0), [(("ocaml.deprecated", (("pretyping/inductiveops.mli", 87, 4149, 4152), ("pretyping/inductiveops.mli", 87, 4149, 4168), 0)), ([([(Tag1 (Tag2 ("Alias for Inductiveops.inductive_nrealargs", (("pretyping/inductiveops.mli", 87, 4149, 4170), ("pretyping/inductiveops.mli", 87, 4149, 4212), 0), 0)), (("pretyping/inductiveops.mli", 87, 4149, 4169), ("pretyping/inductiveops.mli", 87, 4149, 4213), 0), 0, 0)], (("pretyping/inductiveops.mli", 87, 4149, 4169), ("pretyping/inductiveops.mli", 87, 4149, 4213), 0))]), (("pretyping/inductiveops.mli", 87, 4149, 4149), ("pretyping/inductiveops.mli", 87, 4149, 4214), 0))], Tag1 ("Inductiveops", 36)), 0); (("inductive_nrealdecls", 1453), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -374), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -373), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -372), 0), 100000000, 0, -371), 0), 100000000, 0, -370), 0, (("pretyping/inductiveops.mli", 90, 4281, 4281), ("pretyping/inductiveops.mli", 90, 4281, 4331), 0), 0, Tag1 ("Inductiveops", 37)), 0); (("inductive_nrealdecls_env", 1454), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -369), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -368), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -367), 0), 100000000, 0, -366), 0), 100000000, 0, -365), 0, (("pretyping/inductiveops.mli", 91, 4332, 4332), ("pretyping/inductiveops.mli", 92, 4387, 4453), 0), [(("ocaml.deprecated", (("pretyping/inductiveops.mli", 92, 4387, 4390), ("pretyping/inductiveops.mli", 92, 4387, 4406), 0)), ([([(Tag1 (Tag2 ("Alias for Inductiveops.inductive_nrealdecls", (("pretyping/inductiveops.mli", 92, 4387, 4408), ("pretyping/inductiveops.mli", 92, 4387, 4451), 0), 0)), (("pretyping/inductiveops.mli", 92, 4387, 4407), ("pretyping/inductiveops.mli", 92, 4387, 4452), 0), 0, 0)], (("pretyping/inductiveops.mli", 92, 4387, 4407), ("pretyping/inductiveops.mli", 92, 4387, 4452), 0))]), (("pretyping/inductiveops.mli", 92, 4387, 4387), ("pretyping/inductiveops.mli", 92, 4387, 4453), 0))], Tag1 ("Inductiveops", 38)), 0); (("inductive_nallargs", 1455), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -364), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -363), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -362), 0), 100000000, 0, -361), 0), 100000000, 0, -360), 0, (("pretyping/inductiveops.mli", 95, 4520, 4520), ("pretyping/inductiveops.mli", 95, 4520, 4568), 0), 0, Tag1 ("Inductiveops", 39)), 0); (("inductive_nallargs_env", 1456), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -359), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -358), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -357), 0), 100000000, 0, -356), 0), 100000000, 0, -355), 0, (("pretyping/inductiveops.mli", 96, 4569, 4569), ("pretyping/inductiveops.mli", 97, 4622, 4686), 0), [(("ocaml.deprecated", (("pretyping/inductiveops.mli", 97, 4622, 4625), ("pretyping/inductiveops.mli", 97, 4622, 4641), 0)), ([([(Tag1 (Tag2 ("Alias for Inductiveops.inductive_nallargs", (("pretyping/inductiveops.mli", 97, 4622, 4643), ("pretyping/inductiveops.mli", 97, 4622, 4684), 0), 0)), (("pretyping/inductiveops.mli", 97, 4622, 4642), ("pretyping/inductiveops.mli", 97, 4622, 4685), 0), 0, 0)], (("pretyping/inductiveops.mli", 97, 4622, 4642), ("pretyping/inductiveops.mli", 97, 4622, 4685), 0))]), (("pretyping/inductiveops.mli", 97, 4622, 4622), ("pretyping/inductiveops.mli", 97, 4622, 4686), 0))], Tag1 ("Inductiveops", 40)), 0); (("inductive_nalldecls", 1457), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -354), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -353), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -352), 0), 100000000, 0, -351), 0), 100000000, 0, -350), 0, (("pretyping/inductiveops.mli", 100, 4753, 4753), ("pretyping/inductiveops.mli", 100, 4753, 4802), 0), 0, Tag1 ("Inductiveops", 41)), 0); (("inductive_nalldecls_env", 1458), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -349), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -348), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -347), 0), 100000000, 0, -346), 0), 100000000, 0, -345), 0, (("pretyping/inductiveops.mli", 101, 4803, 4803), ("pretyping/inductiveops.mli", 102, 4857, 4922), 0), [(("ocaml.deprecated", (("pretyping/inductiveops.mli", 102, 4857, 4860), ("pretyping/inductiveops.mli", 102, 4857, 4876), 0)), ([([(Tag1 (Tag2 ("Alias for Inductiveops.inductive_nalldecls", (("pretyping/inductiveops.mli", 102, 4857, 4878), ("pretyping/inductiveops.mli", 102, 4857, 4920), 0), 0)), (("pretyping/inductiveops.mli", 102, 4857, 4877), ("pretyping/inductiveops.mli", 102, 4857, 4921), 0), 0, 0)], (("pretyping/inductiveops.mli", 102, 4857, 4877), ("pretyping/inductiveops.mli", 102, 4857, 4921), 0))]), (("pretyping/inductiveops.mli", 102, 4857, 4857), ("pretyping/inductiveops.mli", 102, 4857, 4922), 0))], Tag1 ("Inductiveops", 42)), 0); (("inductive_nparams", 1459), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -344), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -343), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -342), 0), 100000000, 0, -341), 0), 100000000, 0, -340), 0, (("pretyping/inductiveops.mli", 105, 4971, 4971), ("pretyping/inductiveops.mli", 105, 4971, 5018), 0), 0, Tag1 ("Inductiveops", 43)), 0); (("inductive_nparams_env", 1460), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -339), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -338), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -337), 0), 100000000, 0, -336), 0), 100000000, 0, -335), 0, (("pretyping/inductiveops.mli", 106, 5019, 5019), ("pretyping/inductiveops.mli", 107, 5071, 5134), 0), [(("ocaml.deprecated", (("pretyping/inductiveops.mli", 107, 5071, 5074), ("pretyping/inductiveops.mli", 107, 5071, 5090), 0)), ([([(Tag1 (Tag2 ("Alias for Inductiveops.inductive_nparams", (("pretyping/inductiveops.mli", 107, 5071, 5092), ("pretyping/inductiveops.mli", 107, 5071, 5132), 0), 0)), (("pretyping/inductiveops.mli", 107, 5071, 5091), ("pretyping/inductiveops.mli", 107, 5071, 5133), 0), 0, 0)], (("pretyping/inductiveops.mli", 107, 5071, 5091), ("pretyping/inductiveops.mli", 107, 5071, 5133), 0))]), (("pretyping/inductiveops.mli", 107, 5071, 5071), ("pretyping/inductiveops.mli", 107, 5071, 5134), 0))], Tag1 ("Inductiveops", 44)), 0); (("inductive_nparamdecls", 1461), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -334), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -333), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -332), 0), 100000000, 0, -331), 0), 100000000, 0, -330), 0, (("pretyping/inductiveops.mli", 110, 5180, 5180), ("pretyping/inductiveops.mli", 110, 5180, 5231), 0), 0, Tag1 ("Inductiveops", 45)), 0); (("inductive_nparamdecls_env", 1462), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -329), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -328), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -327), 0), 100000000, 0, -326), 0), 100000000, 0, -325), 0, (("pretyping/inductiveops.mli", 111, 5232, 5232), ("pretyping/inductiveops.mli", 112, 5288, 5356), 0), [(("ocaml.deprecated", (("pretyping/inductiveops.mli", 112, 5288, 5291), ("pretyping/inductiveops.mli", 112, 5288, 5307), 0)), ([([(Tag1 (Tag2 ("Alias for Inductiveops.inductive_nparamsdecls", (("pretyping/inductiveops.mli", 112, 5288, 5309), ("pretyping/inductiveops.mli", 112, 5288, 5354), 0), 0)), (("pretyping/inductiveops.mli", 112, 5288, 5308), ("pretyping/inductiveops.mli", 112, 5288, 5355), 0), 0, 0)], (("pretyping/inductiveops.mli", 112, 5288, 5308), ("pretyping/inductiveops.mli", 112, 5288, 5355), 0))]), (("pretyping/inductiveops.mli", 112, 5288, 5288), ("pretyping/inductiveops.mli", 112, 5288, 5356), 0))], Tag1 ("Inductiveops", 46)), 0); (("inductive_paramdecls", 1463), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -324), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pinductive"), 0, (0)), 100000000, 0, -323), (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -322), 0), 100000000, 0, -321), 0), 100000000, 0, -320), 0, (("pretyping/inductiveops.mli", 115, 5388, 5388), ("pretyping/inductiveops.mli", 115, 5388, 5454), 0), 0, Tag1 ("Inductiveops", 47)), 0); (("inductive_paramdecls_env", 1464), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -319), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pinductive"), 0, (0)), 100000000, 0, -318), (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -317), 0), 100000000, 0, -316), 0), 100000000, 0, -315), 0, (("pretyping/inductiveops.mli", 116, 5455, 5455), ("pretyping/inductiveops.mli", 117, 5526, 5592), 0), [(("ocaml.deprecated", (("pretyping/inductiveops.mli", 117, 5526, 5529), ("pretyping/inductiveops.mli", 117, 5526, 5545), 0)), ([([(Tag1 (Tag2 ("Alias for Inductiveops.inductive_paramsdecl", (("pretyping/inductiveops.mli", 117, 5526, 5547), ("pretyping/inductiveops.mli", 117, 5526, 5590), 0), 0)), (("pretyping/inductiveops.mli", 117, 5526, 5546), ("pretyping/inductiveops.mli", 117, 5526, 5591), 0), 0, 0)], (("pretyping/inductiveops.mli", 117, 5526, 5546), ("pretyping/inductiveops.mli", 117, 5526, 5591), 0))]), (("pretyping/inductiveops.mli", 117, 5526, 5526), ("pretyping/inductiveops.mli", 117, 5526, 5592), 0))], Tag1 ("Inductiveops", 48)), 0); (("inductive_alldecls", 1465), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -314), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pinductive"), 0, (0)), 100000000, 0, -313), (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -312), 0), 100000000, 0, -311), 0), 100000000, 0, -310), 0, (("pretyping/inductiveops.mli", 120, 5646, 5646), ("pretyping/inductiveops.mli", 120, 5646, 5710), 0), 0, Tag1 ("Inductiveops", 49)), 0); (("inductive_alldecls_env", 1466), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -309), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pinductive"), 0, (0)), 100000000, 0, -308), (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -307), 0), 100000000, 0, -306), 0), 100000000, 0, -305), 0, (("pretyping/inductiveops.mli", 121, 5711, 5711), ("pretyping/inductiveops.mli", 122, 5780, 5844), 0), [(("ocaml.deprecated", (("pretyping/inductiveops.mli", 122, 5780, 5783), ("pretyping/inductiveops.mli", 122, 5780, 5799), 0)), ([([(Tag1 (Tag2 ("Alias for Inductiveops.inductive_alldecls", (("pretyping/inductiveops.mli", 122, 5780, 5801), ("pretyping/inductiveops.mli", 122, 5780, 5842), 0), 0)), (("pretyping/inductiveops.mli", 122, 5780, 5800), ("pretyping/inductiveops.mli", 122, 5780, 5843), 0), 0, 0)], (("pretyping/inductiveops.mli", 122, 5780, 5800), ("pretyping/inductiveops.mli", 122, 5780, 5843), 0))]), (("pretyping/inductiveops.mli", 122, 5780, 5780), ("pretyping/inductiveops.mli", 122, 5780, 5844), 0))], Tag1 ("Inductiveops", 50)), 0); (("constructor_nallargs", 1467), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -304), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "constructor"), 0, (0)), 100000000, 0, -303), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -302), 0), 100000000, 0, -301), 0), 100000000, 0, -300), 0, (("pretyping/inductiveops.mli", 127, 5944, 5944), ("pretyping/inductiveops.mli", 127, 5944, 5996), 0), 0, Tag1 ("Inductiveops", 51)), 0); (("constructor_nallargs_env", 1468), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -299), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "constructor"), 0, (0)), 100000000, 0, -298), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -297), 0), 100000000, 0, -296), 0), 100000000, 0, -295), 0, (("pretyping/inductiveops.mli", 128, 5997, 5997), ("pretyping/inductiveops.mli", 129, 6054, 6120), 0), [(("ocaml.deprecated", (("pretyping/inductiveops.mli", 129, 6054, 6057), ("pretyping/inductiveops.mli", 129, 6054, 6073), 0)), ([([(Tag1 (Tag2 ("Alias for Inductiveops.constructor_nallargs", (("pretyping/inductiveops.mli", 129, 6054, 6075), ("pretyping/inductiveops.mli", 129, 6054, 6118), 0), 0)), (("pretyping/inductiveops.mli", 129, 6054, 6074), ("pretyping/inductiveops.mli", 129, 6054, 6119), 0), 0, 0)], (("pretyping/inductiveops.mli", 129, 6054, 6074), ("pretyping/inductiveops.mli", 129, 6054, 6119), 0))]), (("pretyping/inductiveops.mli", 129, 6054, 6054), ("pretyping/inductiveops.mli", 129, 6054, 6120), 0))], Tag1 ("Inductiveops", 52)), 0); (("constructor_nalldecls", 1469), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -294), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "constructor"), 0, (0)), 100000000, 0, -293), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -292), 0), 100000000, 0, -291), 0), 100000000, 0, -290), 0, (("pretyping/inductiveops.mli", 132, 6161, 6161), ("pretyping/inductiveops.mli", 132, 6161, 6214), 0), 0, Tag1 ("Inductiveops", 53)), 0); (("constructor_nalldecls_env", 1470), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -289), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "constructor"), 0, (0)), 100000000, 0, -288), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -287), 0), 100000000, 0, -286), 0), 100000000, 0, -285), 0, (("pretyping/inductiveops.mli", 133, 6215, 6215), ("pretyping/inductiveops.mli", 134, 6273, 6340), 0), [(("ocaml.deprecated", (("pretyping/inductiveops.mli", 134, 6273, 6276), ("pretyping/inductiveops.mli", 134, 6273, 6292), 0)), ([([(Tag1 (Tag2 ("Alias for Inductiveops.constructor_nalldecls", (("pretyping/inductiveops.mli", 134, 6273, 6294), ("pretyping/inductiveops.mli", 134, 6273, 6338), 0), 0)), (("pretyping/inductiveops.mli", 134, 6273, 6293), ("pretyping/inductiveops.mli", 134, 6273, 6339), 0), 0, 0)], (("pretyping/inductiveops.mli", 134, 6273, 6293), ("pretyping/inductiveops.mli", 134, 6273, 6339), 0))]), (("pretyping/inductiveops.mli", 134, 6273, 6273), ("pretyping/inductiveops.mli", 134, 6273, 6340), 0))], Tag1 ("Inductiveops", 54)), 0); (("constructor_nrealargs", 1471), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -284), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "constructor"), 0, (0)), 100000000, 0, -283), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -282), 0), 100000000, 0, -281), 0), 100000000, 0, -280), 0, (("pretyping/inductiveops.mli", 137, 6376, 6376), ("pretyping/inductiveops.mli", 137, 6376, 6429), 0), 0, Tag1 ("Inductiveops", 55)), 0); (("constructor_nrealargs_env", 1472), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -279), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "constructor"), 0, (0)), 100000000, 0, -278), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -277), 0), 100000000, 0, -276), 0), 100000000, 0, -275), 0, (("pretyping/inductiveops.mli", 138, 6430, 6430), ("pretyping/inductiveops.mli", 139, 6488, 6555), 0), [(("ocaml.deprecated", (("pretyping/inductiveops.mli", 139, 6488, 6491), ("pretyping/inductiveops.mli", 139, 6488, 6507), 0)), ([([(Tag1 (Tag2 ("Alias for Inductiveops.constructor_nrealargs", (("pretyping/inductiveops.mli", 139, 6488, 6509), ("pretyping/inductiveops.mli", 139, 6488, 6553), 0), 0)), (("pretyping/inductiveops.mli", 139, 6488, 6508), ("pretyping/inductiveops.mli", 139, 6488, 6554), 0), 0, 0)], (("pretyping/inductiveops.mli", 139, 6488, 6508), ("pretyping/inductiveops.mli", 139, 6488, 6554), 0))]), (("pretyping/inductiveops.mli", 139, 6488, 6488), ("pretyping/inductiveops.mli", 139, 6488, 6555), 0))], Tag1 ("Inductiveops", 56)), 0); (("constructor_nrealdecls", 1473), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -274), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "constructor"), 0, (0)), 100000000, 0, -273), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -272), 0), 100000000, 0, -271), 0), 100000000, 0, -270), 0, (("pretyping/inductiveops.mli", 142, 6588, 6588), ("pretyping/inductiveops.mli", 142, 6588, 6642), 0), 0, Tag1 ("Inductiveops", 57)), 0); (("constructor_nrealdecls_env", 1474), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -269), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "constructor"), 0, (0)), 100000000, 0, -268), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -267), 0), 100000000, 0, -266), 0), 100000000, 0, -265), 0, (("pretyping/inductiveops.mli", 143, 6643, 6643), ("pretyping/inductiveops.mli", 144, 6702, 6770), 0), [(("ocaml.deprecated", (("pretyping/inductiveops.mli", 144, 6702, 6705), ("pretyping/inductiveops.mli", 144, 6702, 6721), 0)), ([([(Tag1 (Tag2 ("Alias for Inductiveops.constructor_nrealdecls", (("pretyping/inductiveops.mli", 144, 6702, 6723), ("pretyping/inductiveops.mli", 144, 6702, 6768), 0), 0)), (("pretyping/inductiveops.mli", 144, 6702, 6722), ("pretyping/inductiveops.mli", 144, 6702, 6769), 0), 0, 0)], (("pretyping/inductiveops.mli", 144, 6702, 6722), ("pretyping/inductiveops.mli", 144, 6702, 6769), 0))]), (("pretyping/inductiveops.mli", 144, 6702, 6702), ("pretyping/inductiveops.mli", 144, 6702, 6770), 0))], Tag1 ("Inductiveops", 58)), 0); (("inductive_alltags", 1475), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -264), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -263), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -262)], (0)), 100000000, 0, -261), 0), 100000000, 0, -260), 0), 100000000, 0, -259), 0, (("pretyping/inductiveops.mli", 147, 6839, 6839), ("pretyping/inductiveops.mli", 147, 6839, 6892), 0), 0, Tag1 ("Inductiveops", 59)), 0); (("constructor_alltags", 1476), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -258), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "constructor"), 0, (0)), 100000000, 0, -257), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -256)], (0)), 100000000, 0, -255), 0), 100000000, 0, -254), 0), 100000000, 0, -253), 0, (("pretyping/inductiveops.mli", 148, 6893, 6893), ("pretyping/inductiveops.mli", 148, 6893, 6950), 0), 0, Tag1 ("Inductiveops", 60)), 0); (("constructor_has_local_defs", 1477), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -252), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "constructor"), 0, (0)), 100000000, 0, -251), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -250), 0), 100000000, 0, -249), 0), 100000000, 0, -248), 0, (("pretyping/inductiveops.mli", 151, 6999, 6999), ("pretyping/inductiveops.mli", 151, 6999, 7058), 0), 0, Tag1 ("Inductiveops", 61)), 0); (("inductive_has_local_defs", 1478), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -247), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -246), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -245), 0), 100000000, 0, -244), 0), 100000000, 0, -243), 0, (("pretyping/inductiveops.mli", 152, 7059, 7059), ("pretyping/inductiveops.mli", 152, 7059, 7114), 0), 0, Tag1 ("Inductiveops", 62)), 0); (("sorts_below", 1479), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sorts")), "family"), 0, (0)), 100000000, 0, -242), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Sorts")), "family"), 0, (0)), 100000000, 0, -241)], (0)), 100000000, 0, -240), 0), 100000000, 0, -239), 0, (("pretyping/inductiveops.mli", 154, 7116, 7116), ("pretyping/inductiveops.mli", 154, 7116, 7167), 0), 0, Tag1 ("Inductiveops", 63)), 0); (("top_allowed_sort", 1480), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -238), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -237), (Tag3 (Tag1 ((Tag2 ("Sorts")), "family"), 0, (0)), 100000000, 0, -236), 0), 100000000, 0, -235), 0), 100000000, 0, -234), 0, (("pretyping/inductiveops.mli", 156, 7169, 7169), ("pretyping/inductiveops.mli", 156, 7169, 7224), 0), 0, Tag1 ("Inductiveops", 64)), 0); (("has_dependent_elim", 1481), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "mind_specif"), 0, (0)), 100000000, 0, -233), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -232), 0), 100000000, 0, -231), 0, (("pretyping/inductiveops.mli", 160, 7346, 7346), ("pretyping/inductiveops.mli", 160, 7346, 7390), 0), 0, Tag1 ("Inductiveops", 65)), 0); (("type_of_projection_knowing_arg", 1482), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -230), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -229), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Projection"), "t"), 0, (0)), 100000000, 0, -228), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "t"), 0, (0)), 100000000, 0, -227), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -226), (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -225), 0), 100000000, 0, -224), 0), 100000000, 0, -223), 0), 100000000, 0, -222), 0), 100000000, 0, -221), 0), 100000000, 0, -220), 0, (("pretyping/inductiveops.mli", 163, 7421, 7421), ("pretyping/inductiveops.mli", 164, 7493, 7565), 0), 0, Tag1 ("Inductiveops", 66)), 0); Tag1 (("constructor_summary", 1483), (0, 0, [[(("cs_cstr", 1273), 0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pconstructor"), 0, (0)), 100000000, 0, -213), (("pretyping/inductiveops.mli", 169, 7649, 7651), ("pretyping/inductiveops.mli", 169, 7649, 7674), 0), 0, Tag1 ("Inductiveops", 68)); (("cs_params", 1274), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -215)], (0)), 100000000, 0, -214), (("pretyping/inductiveops.mli", 170, 7732, 7734), ("pretyping/inductiveops.mli", 170, 7732, 7758), 0), 0, Tag1 ("Inductiveops", 69)); (("cs_nargs", 1275), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -216), (("pretyping/inductiveops.mli", 171, 7812, 7814), ("pretyping/inductiveops.mli", 171, 7812, 7829), 0), 0, Tag1 ("Inductiveops", 70)); (("cs_args", 1276), 0, (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -217), (("pretyping/inductiveops.mli", 172, 7894, 7896), ("pretyping/inductiveops.mli", 172, 7894, 7925), 0), 0, Tag1 ("Inductiveops", 71)); (("cs_concl_realargs", 1277), 0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -219)], (0)), 100000000, 0, -218), (("pretyping/inductiveops.mli", 173, 7978, 7980), ("pretyping/inductiveops.mli", 173, 7978, 8013), 0), 0, Tag1 ("Inductiveops", 72))]], 1, 0, 0, 0, 0, 0, (("pretyping/inductiveops.mli", 168, 7620, 7620), ("pretyping/inductiveops.mli", 174, 8057, 8058), 0), 0, 0, 0, Tag1 ("Inductiveops", 67)), 1, 0); (("lift_constructor", 1484), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -212), (Tag1 (0, (Tag3 ((("constructor_summary", 1483)), 0, (0)), 100000000, 0, -211), (Tag3 ((("constructor_summary", 1483)), 0, (0)), 100000000, 0, -210), 0), 100000000, 0, -209), 0), 100000000, 0, -208), 0, (("pretyping/inductiveops.mli", 175, 8059, 8059), ("pretyping/inductiveops.mli", 175, 8059, 8131), 0), 0, Tag1 ("Inductiveops", 73)), 0); (("get_constructor", 1485), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Constr")), "pinductive"), 0, (0)), 100000000, 0, -203); (Tag3 (Tag1 ((Tag2 ("Declarations")), "mutual_inductive_body"), 0, (0)), 100000000, 0, -204); (Tag3 (Tag1 ((Tag2 ("Declarations")), "one_inductive_body"), 0, (0)), 100000000, 0, -205); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -207)], (0)), 100000000, 0, -206)]), 100000000, 0, -202), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -201), (Tag3 ((("constructor_summary", 1483)), 0, (0)), 100000000, 0, -200), 0), 100000000, 0, -199), 0), 100000000, 0, -198), 0, (("pretyping/inductiveops.mli", 176, 8132, 8132), ("pretyping/inductiveops.mli", 178, 8229, 8257), 0), 0, Tag1 ("Inductiveops", 74)), 0); (("get_constructors", 1486), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -197), (Tag1 (0, (Tag3 ((("inductive_family", 1424)), 0, (0)), 100000000, 0, -196), (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("constructor_summary", 1483)), 0, (0)), 100000000, 0, -195)], (0)), 100000000, 0, -194), 0), 100000000, 0, -193), 0), 100000000, 0, -192), 0, (("pretyping/inductiveops.mli", 179, 8258, 8258), ("pretyping/inductiveops.mli", 179, 8258, 8333), 0), 0, Tag1 ("Inductiveops", 75)), 0); (("get_arity", 1487), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -191), (Tag1 (0, (Tag3 ((("inductive_family", 1424)), 0, (0)), 100000000, 0, -190), (Tag3 (Tag1 ((Tag2 ("Constr")), "rel_context"), 0, (0)), 100000000, 0, -189), 0), 100000000, 0, -188), 0), 100000000, 0, -187), 0, (("pretyping/inductiveops.mli", 184, 8540, 8540), ("pretyping/inductiveops.mli", 184, 8540, 8608), 0), 0, Tag1 ("Inductiveops", 76)), 0); (("build_dependent_constructor", 1488), ((Tag1 (0, (Tag3 ((("constructor_summary", 1483)), 0, (0)), 100000000, 0, -186), (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -185), 0), 100000000, 0, -184), 0, (("pretyping/inductiveops.mli", 186, 8610, 8610), ("pretyping/inductiveops.mli", 186, 8610, 8673), 0), 0, Tag1 ("Inductiveops", 77)), 0); (("build_dependent_inductive", 1489), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -183), (Tag1 (0, (Tag3 ((("inductive_family", 1424)), 0, (0)), 100000000, 0, -182), (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -181), 0), 100000000, 0, -180), 0), 100000000, 0, -179), 0, (("pretyping/inductiveops.mli", 187, 8674, 8674), ("pretyping/inductiveops.mli", 187, 8674, 8741), 0), 0, Tag1 ("Inductiveops", 78)), 0); (("make_arity_signature", 1490), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -178), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -177), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -176), (Tag1 (0, (Tag3 ((("inductive_family", 1424)), 0, (0)), 100000000, 0, -175), (Tag3 (Tag1 ((Tag2 ("EConstr")), "rel_context"), 0, (0)), 100000000, 0, -174), 0), 100000000, 0, -173), 0), 100000000, 0, -172), 0), 100000000, 0, -171), 0), 100000000, 0, -170), 0, (("pretyping/inductiveops.mli", 188, 8742, 8742), ("pretyping/inductiveops.mli", 188, 8742, 8835), 0), 0, Tag1 ("Inductiveops", 79)), 0); (("make_arity", 1491), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -169), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -168), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -167), (Tag1 (0, (Tag3 ((("inductive_family", 1424)), 0, (0)), 100000000, 0, -166), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("EConstr")), "ESorts"), "t"), 0, (0)), 100000000, 0, -165), (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -164), 0), 100000000, 0, -163), 0), 100000000, 0, -162), 0), 100000000, 0, -161), 0), 100000000, 0, -160), 0), 100000000, 0, -159), 0, (("pretyping/inductiveops.mli", 189, 8836, 8836), ("pretyping/inductiveops.mli", 189, 8836, 8933), 0), 0, Tag1 ("Inductiveops", 80)), 0); (("extract_mrectype", 1492), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -158), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "t"), 0, (0)), 100000000, 0, -157), (Tag2 ([(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -153); (Tag3 (Tag1 (Tag1 ((Tag2 ("EConstr")), "EInstance"), "t"), 0, (0)), 100000000, 0, -154)]), 100000000, 0, -152); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -156)], (0)), 100000000, 0, -155)]), 100000000, 0, -151), 0), 100000000, 0, -150), 0), 100000000, 0, -149), 0, (("pretyping/inductiveops.mli", 192, 8996, 8996), ("pretyping/inductiveops.mli", 192, 8996, 9099), 0), 0, Tag1 ("Inductiveops", 81)), 0); (("find_mrectype", 1493), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -148), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -147), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -146), (Tag2 ([(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -142); (Tag3 (Tag1 (Tag1 ((Tag2 ("EConstr")), "EInstance"), "t"), 0, (0)), 100000000, 0, -143)]), 100000000, 0, -141); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -145)], (0)), 100000000, 0, -144)]), 100000000, 0, -140), 0), 100000000, 0, -139), 0), 100000000, 0, -138), 0), 100000000, 0, -137), 0, (("pretyping/inductiveops.mli", 193, 9100, 9100), ("pretyping/inductiveops.mli", 193, 9100, 9214), 0), 0, Tag1 ("Inductiveops", 82)), 0); (("find_mrectype_vect", 1494), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -136), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -135), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -134), (Tag2 ([(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -130); (Tag3 (Tag1 (Tag1 ((Tag2 ("EConstr")), "EInstance"), "t"), 0, (0)), 100000000, 0, -131)]), 100000000, 0, -129); (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -133)], (0)), 100000000, 0, -132)]), 100000000, 0, -128), 0), 100000000, 0, -127), 0), 100000000, 0, -126), 0), 100000000, 0, -125), 0, (("pretyping/inductiveops.mli", 194, 9215, 9215), ("pretyping/inductiveops.mli", 194, 9215, 9332), 0), 0, Tag1 ("Inductiveops", 83)), 0); (("find_rectype", 1495), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -124), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -123), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -122), (Tag3 ((("inductive_type", 1432)), 0, (0)), 100000000, 0, -121), 0), 100000000, 0, -120), 0), 100000000, 0, -119), 0), 100000000, 0, -118), 0, (("pretyping/inductiveops.mli", 195, 9333, 9333), ("pretyping/inductiveops.mli", 195, 9333, 9406), 0), 0, Tag1 ("Inductiveops", 84)), 0); (("find_inductive", 1496), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -117), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -116), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -115), (Tag2 ([(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -111); (Tag3 (Tag1 (Tag1 ((Tag2 ("EConstr")), "EInstance"), "t"), 0, (0)), 100000000, 0, -112)]), 100000000, 0, -110); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -114)], (0)), 100000000, 0, -113)]), 100000000, 0, -109), 0), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), 0, (("pretyping/inductiveops.mli", 196, 9407, 9407), ("pretyping/inductiveops.mli", 196, 9407, 9513), 0), 0, Tag1 ("Inductiveops", 85)), 0); (("find_coinductive", 1497), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -105), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -104), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -103), (Tag2 ([(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -99); (Tag3 (Tag1 (Tag1 ((Tag2 ("EConstr")), "EInstance"), "t"), 0, (0)), 100000000, 0, -100)]), 100000000, 0, -98); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -102)], (0)), 100000000, 0, -101)]), 100000000, 0, -97), 0), 100000000, 0, -96), 0), 100000000, 0, -95), 0), 100000000, 0, -94), 0, (("pretyping/inductiveops.mli", 197, 9514, 9514), ("pretyping/inductiveops.mli", 197, 9514, 9620), 0), 0, Tag1 ("Inductiveops", 86)), 0); (("instantiate_constructor_params", 1498), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "pconstructor"), 0, (0)), 100000000, 0, -93), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Declarations")), "mind_specif"), 0, (0)), 100000000, 0, -92), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -91)], (0)), 100000000, 0, -90), (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -89), 0), 100000000, 0, -88), 0), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("pretyping/inductiveops.mli", 201, 9755, 9755), ("pretyping/inductiveops.mli", 201, 9755, 9844), 0), 0, Tag1 ("Inductiveops", 87)), 0); (("arity_of_case_predicate", 1499), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -85), (Tag1 (0, (Tag3 ((("inductive_family", 1424)), 0, (0)), 100000000, 0, -84), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -83), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sorts")), "t"), 0, (0)), 100000000, 0, -82), (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0), 100000000, 0, -79), 0), 100000000, 0, -78), 0), 100000000, 0, -77), 0, (("pretyping/inductiveops.mli", 206, 9928, 9928), ("pretyping/inductiveops.mli", 207, 9958, 10011), 0), 0, Tag1 ("Inductiveops", 88)), 0); (("make_case_info", 1500), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -76), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -75), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sorts")), "relevance"), 0, (0)), 100000000, 0, -74), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "case_style"), 0, (0)), 100000000, 0, -73), (Tag3 (Tag1 ((Tag2 ("Constr")), "case_info"), 0, (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), 0), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("pretyping/inductiveops.mli", 210, 10041, 10041), ("pretyping/inductiveops.mli", 210, 10041, 10124), 0), 0, Tag1 ("Inductiveops", 89)), 0); (("make_case_or_project", 1501), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -67), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -66), (Tag1 (0, (Tag3 ((("inductive_type", 1432)), 0, (0)), 100000000, 0, -65), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "case_info"), 0, (0)), 100000000, 0, -64), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -63), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -62), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -61)], (0)), 100000000, 0, -60), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -59), 0), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), 0), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0, (("pretyping/inductiveops.mli", 216, 10359, 10359), ("pretyping/inductiveops.mli", 218, 10438, 10551), 0), 0, Tag1 ("Inductiveops", 90)), 0); (("simple_make_case_or_project", 1502), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -51), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "case_info"), 0, (0)), 100000000, 0, -49), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -48), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "case_invert"), 0, (0)), 100000000, 0, -47), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -46), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -45)], (0)), 100000000, 0, -44), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("pretyping/inductiveops.mli", 222, 10667, 10667), ("pretyping/inductiveops.mli", 224, 10735, 10871), 0), 0, Tag1 ("Inductiveops", 91)), 0); (("make_case_invert", 1503), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -35), (Tag1 (0, (Tag3 ((("inductive_type", 1432)), 0, (0)), 100000000, 0, -34), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "case_info"), 0, (0)), 100000000, 0, -33), (Tag3 (Tag1 ((Tag2 ("EConstr")), "case_invert"), 0, (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("pretyping/inductiveops.mli", 226, 10873, 10873), ("pretyping/inductiveops.mli", 227, 10931, 10955), 0), 0, Tag1 ("Inductiveops", 92)), 0); (("compute_projections", 1504), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -27), (Tag3 ((Tag3 ("array", 8)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -25); (Tag3 (Tag1 ((Tag2 ("Constr")), "types"), 0, (0)), 100000000, 0, -26)]), 100000000, 0, -24)], (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("pretyping/inductiveops.mli", 233, 11053, 11053), ("pretyping/inductiveops.mli", 233, 11053, 11129), 0), 0, Tag1 ("Inductiveops", 93)), 0); (("type_of_inductive_knowing_conclusion", 1505), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -20), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -19), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Univ")), "puniverses"), [(Tag3 (Tag1 ((Tag2 ("Declarations")), "mind_specif"), 0, (0)), 100000000, 0, -18)], (0)), 100000000, 0, -17), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -16), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -14); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -15)]), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("pretyping/inductiveops.mli", 239, 11264, 11264), ("pretyping/inductiveops.mli", 240, 11307, 11400), 0), 0, Tag1 ("Inductiveops", 94)), 0); (("control_only_guard", 1506), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -8), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -6), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("pretyping/inductiveops.mli", 243, 11425, 11425), ("pretyping/inductiveops.mli", 243, 11425, 11494), 0), 0, Tag1 ("Inductiveops", 95)), 0)], "Inductiveops", [("Inductiveops", ("\016\171\162\024\021\024\029\166n\158\161\222d\005\229}")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("UnivSubst", ("\190qu\031mc\130\181\003G]\132\"\219m)")); ("UnivProblem", ("6'\161\018\181\001.\253\000\141a6\171\1727\155")); ("UnivNames", ("%\151_\209%+JM$n\001\232\194n\178N")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UState", ("SD\203\215|\136\n\251\239\208\148\215C\n\167\005")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Store", ("/dT\252\145\179pq\216{\181\206\190K+U")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("Section", ("\245\207\b\021\142v=\155#w\246}\"4b\006")); ("Safe_typing", (")\250?\164\145\132\241\127\186\152h+\145\"\237l")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("Nativevalues", ("8:\007\025e\226c,\001\171\146#l\210\171\152")); ("Nativelib", ("V\239\205Y1\147E:,\176\196Hy\1483|")); ("Nativecode", ("\190\185\255\006m\012\210\163\138Rz\247\15283\183")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Monad", ("\244\171T\157\194p\187\160\149\195{\132\222\020\253\148")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hook", ("\183\194\223\003\155\169',\187\240a;E\b\1396")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Genlambda", ("\170}\024\241\141\222\136S\169\219\2212i\134KI")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evd", ("\211\205p\193\216\129r\006\239oN\142ar\196\175")); ("Evar_kinds", ("\023L\186\132\218}\254\221\185\198\220\200h\003{\021")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("EConstr", ("\201aW\156\157;N\004\201V\208\006L\166\211)")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conversion", ("\158\150&\195M\tv\127|\029\158RRK\211A")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CDebug", ("^4\210p7\239!3\138\138\213?\239`\250\157")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
val control_only_guard : Environ.env -> Evd.evar_map -> EConstr.types -> unit
