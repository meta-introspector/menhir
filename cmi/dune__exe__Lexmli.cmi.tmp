val fail : unit -> 'a
val __ocaml_lex_tables : Lexing.lex_tables
val bindings :
  (string * int * int) list -> Lexing.lexbuf -> (string * int * int) list
val __ocaml_lex_bindings_rec :
  (string * int * int) list ->
  Lexing.lexbuf -> int -> (string * int * int) list
val type_then_bindings :
  (string * int * int) list ->
  string -> int -> Lexing.lexbuf -> (string * int * int) list
val __ocaml_lex_type_then_bindings_rec :
  (string * int * int) list ->
  string -> int -> Lexing.lexbuf -> int -> (string * int * int) list
val main : Lexing.lexbuf -> (string * int * int) list
("DEBUG:rule", [(("fail", 597), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -31), ((0), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("src/lexmli.mll", 20, 45, 51), ("src/lexmli.mll", 20, 45, 55), 0), 0, Tag1 ("Dune__exe__Lexmli", 0)), 0); (("__ocaml_lex_tables", 598), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lex_tables"), 0, (0)), 100000000, 0, -28), 0, (("src/lexmli.ml", 9, 145, 149), ("src/lexmli.ml", 9, 145, 167), 0), 0, Tag1 ("Dune__exe__Lexmli", 1)), 0); (("bindings", 599), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -8)]), 100000000, 0, -5)], (0)), 100000000, 0, -4), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -8)]), 100000000, 0, -5)], (0)), 100000000, 0, -4), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("src/lexmli.ml", 2562, 177665, 177673), ("src/lexmli.ml", 2562, 177665, 177681), 0), 0, Tag1 ("Dune__exe__Lexmli", 2)), 0); (("__ocaml_lex_bindings_rec", 600), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -8)]), 100000000, 0, -5)], (0)), 100000000, 0, -4), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -25), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -8)]), 100000000, 0, -5)], (0)), 100000000, 0, -4), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("src/lexmli.ml", 2566, 177861, 177865), ("src/lexmli.ml", 2566, 177861, 177889), 0), 0, Tag1 ("Dune__exe__Lexmli", 3)), 0); (("type_then_bindings", 601), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -8)]), 100000000, 0, -5)], (0)), 100000000, 0, -4), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -8)]), 100000000, 0, -5)], (0)), 100000000, 0, -4), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("src/lexmli.ml", 2591, 178555, 178559), ("src/lexmli.ml", 2591, 178555, 178577), 0), 0, Tag1 ("Dune__exe__Lexmli", 4)), 0); (("__ocaml_lex_type_then_bindings_rec", 602), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -8)]), 100000000, 0, -5)], (0)), 100000000, 0, -4), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -17), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -8)]), 100000000, 0, -5)], (0)), 100000000, 0, -4), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("src/lexmli.ml", 2593, 178671, 178675), ("src/lexmli.ml", 2593, 178671, 178709), 0), 0, Tag1 ("Dune__exe__Lexmli", 5)), 0); (("main", 603), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -8)]), 100000000, 0, -5)], (0)), 100000000, 0, -4), 0), 100000000, 0, -11), 0, (("src/lexmli.ml", 2614, 179321, 179325), ("src/lexmli.ml", 2614, 179321, 179329), 0), 0, Tag1 ("Dune__exe__Lexmli", 6)), 0); (("__ocaml_lex_main_rec", 604), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -10), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -9), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -8)]), 100000000, 0, -5)], (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/lexmli.ml", 2616, 179373, 179377), ("src/lexmli.ml", 2616, 179373, 179397), 0), 0, Tag1 ("Dune__exe__Lexmli", 7)), 0)], "Dune__exe__Lexmli", [("Dune__exe__Lexmli", ("\028\175\n\211\236\rm\1320P\136\145\180\195\147 ")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("MenhirSdk", ("F\232\012\196l\143\145[\255\2193U\197\027\176\139")); ("Dune__exe__Positions", ("\137nS\236\011\187\r[\024:\162/\201\139\237}")); ("Dune__exe__Error", ("\137\210f\024\160\227n\213\201\213\153'8\248\218\001")); ("Dune__exe", ("\137\000\197\175$\007]\218\141\248\172\212\146c\153\212")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val __ocaml_lex_main_rec : Lexing.lexbuf -> int -> (string * int * int) list
