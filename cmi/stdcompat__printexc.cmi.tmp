type t = exn = ..
type raw_backtrace = Printexc.raw_backtrace
type raw_backtrace_entry = Printexc.raw_backtrace_entry
type backtrace_slot = Printexc.backtrace_slot
type location =
  Printexc.location = {
  filename : string;
  line_number : int;
  start_char : int;
  end_char : int;
}
module Slot = Printexc.Slot
type raw_backtrace_slot = Printexc.raw_backtrace_slot
val raw_backtrace_entries : raw_backtrace -> raw_backtrace_entry array
val backtrace_slots_of_raw_entry :
  raw_backtrace_entry -> backtrace_slot array option
val default_uncaught_exception_handler : exn -> raw_backtrace -> unit
val to_string_default : exn -> string
val use_printers : exn -> string option
external raise_with_backtrace : exn -> raw_backtrace -> 'a
  = "%raise_with_backtrace"
val get_raw_backtrace_next_slot :
  raw_backtrace_slot -> raw_backtrace_slot option
val set_uncaught_exception_handler : (exn -> raw_backtrace -> unit) -> unit
val backtrace_slots : raw_backtrace -> backtrace_slot array option
val raw_backtrace_length : raw_backtrace -> int
val get_raw_backtrace_slot : raw_backtrace -> int -> raw_backtrace_slot
val convert_raw_backtrace_slot : raw_backtrace_slot -> backtrace_slot
val exn_slot_id : exn -> int
val exn_slot_name : exn -> string
val get_raw_backtrace : unit -> raw_backtrace
val print_raw_backtrace : out_channel -> raw_backtrace -> unit
val raw_backtrace_to_string : raw_backtrace -> string
external get_callstack : int -> raw_backtrace = "caml_get_current_callstack"
val print_backtrace : out_channel -> unit
val get_backtrace : unit -> string
val record_backtrace : bool -> unit
val backtrace_status : unit -> bool
val register_printer : (exn -> string option) -> unit
val to_string : exn -> string
val print : ('a -> 'b) -> 'a -> 'b("DEBUG:rule", [Tag1 (("t", 404), (0, 0, 1, 1, ((Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -115)), 0, 0, 0, 0, (("stdcompat__printexc_s.mli", 4, 22, 22), ("stdcompat__printexc_s.mli", 4, 22, 39), 0), 0, 0, 0, Tag1 ("Stdcompat__printexc_s", 0)), 1, 0); Tag1 (("raw_backtrace", 405), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Printexc"), "raw_backtrace"), 0, (0)), 100000000, 0, -114)), 0, 0, 0, 0, (("stdcompat__printexc_s.mli", 24, 151, 151), ("stdcompat__printexc_s.mli", 24, 151, 194), 0), 0, 0, 0, Tag1 ("Stdcompat__printexc_s", 1)), 1, 0); Tag1 (("raw_backtrace_entry", 406), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Printexc"), "raw_backtrace_entry"), 0, (0)), 100000000, 0, -113)), 0, 0, 0, 0, (("stdcompat__printexc_s.mli", 33, 265, 265), ("stdcompat__printexc_s.mli", 33, 265, 320), 0), 0, 1, 0, Tag1 ("Stdcompat__printexc_s", 2)), 1, 0); Tag1 (("backtrace_slot", 407), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Printexc"), "backtrace_slot"), 0, (0)), 100000000, 0, -112)), 0, 0, 0, 0, (("stdcompat__printexc_s.mli", 48, 488, 488), ("stdcompat__printexc_s.mli", 48, 488, 533), 0), 0, 0, 0, Tag1 ("Stdcompat__printexc_s", 3)), 1, 0); Tag1 (("location", 408), (0, 0, [[(("filename", 342), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -108), (("stdcompat__printexc_s.mli", 59, 646, 648), ("stdcompat__printexc_s.mli", 59, 646, 666), 0), 0, Tag1 ("Stdcompat__printexc_s", 5)); (("line_number", 343), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -109), (("stdcompat__printexc_s.mli", 60, 667, 669), ("stdcompat__printexc_s.mli", 60, 667, 687), 0), 0, Tag1 ("Stdcompat__printexc_s", 6)); (("start_char", 344), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -110), (("stdcompat__printexc_s.mli", 61, 688, 690), ("stdcompat__printexc_s.mli", 61, 688, 707), 0), 0, Tag1 ("Stdcompat__printexc_s", 7)); (("end_char", 345), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -111), (("stdcompat__printexc_s.mli", 62, 708, 710), ("stdcompat__printexc_s.mli", 62, 708, 723), 0), 0, Tag1 ("Stdcompat__printexc_s", 8))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Printexc"), "location"), 0, (0)), 100000000, 0, -107)), 0, 0, 0, 0, (("stdcompat__printexc_s.mli", 57, 606, 606), ("stdcompat__printexc_s.mli", 62, 708, 725), 0), 0, 0, 0, Tag1 ("Stdcompat__printexc_s", 4)), 1, 0); Tag3 (("Slot", 409), 1, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Printexc"), "Slot")), 0, (("stdcompat__printexc_s.mli", 82, 982, 982), ("stdcompat__printexc_s.mli", 82, 982, 1009), 0), Tag1 ("Stdcompat__printexc_s", 9)), 0, 0); Tag1 (("raw_backtrace_slot", 410), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Printexc"), "raw_backtrace_slot"), 0, (0)), 100000000, 0, -106)), 0, 0, 0, 0, (("stdcompat__printexc_s.mli", 94, 1272, 1272), ("stdcompat__printexc_s.mli", 94, 1272, 1325), 0), 0, 0, 0, Tag1 ("Stdcompat__printexc_s", 10)), 1, 0); (("raw_backtrace_entries", 411), ((Tag1 (0, (Tag3 ((("raw_backtrace", 405)), 0, (0)), 100000000, 0, -105), (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("raw_backtrace_entry", 406)), 0, (0)), 100000000, 0, -104)], (0)), 100000000, 0, -103), 0), 100000000, 0, -102), 0, (("stdcompat__printexc_s.mli", 102, 1405, 1405), ("stdcompat__printexc_s.mli", 102, 1405, 1475), 0), 0, Tag1 ("Stdcompat__printexc_s", 11)), 0); (("backtrace_slots_of_raw_entry", 412), ((Tag1 (0, (Tag3 ((("raw_backtrace_entry", 406)), 0, (0)), 100000000, 0, -101), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("backtrace_slot", 407)), 0, (0)), 100000000, 0, -100)], (0)), 100000000, 0, -99)], (0)), 100000000, 0, -98), 0), 100000000, 0, -97), 0, (("stdcompat__printexc_s.mli", 106, 1574, 1574), ("stdcompat__printexc_s.mli", 107, 1609, 1661), 0), 0, Tag1 ("Stdcompat__printexc_s", 12)), 0); (("default_uncaught_exception_handler", 413), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -96), (Tag1 (0, (Tag3 ((("raw_backtrace", 405)), 0, (0)), 100000000, 0, -95), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -94), 0), 100000000, 0, -93), 0), 100000000, 0, -92), 0, (("stdcompat__printexc_s.mli", 112, 1781, 1781), ("stdcompat__printexc_s.mli", 112, 1781, 1850), 0), 0, Tag1 ("Stdcompat__printexc_s", 13)), 0); (("to_string_default", 414), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -91), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -90), 0), 100000000, 0, -89), 0, (("stdcompat__printexc_s.mli", 116, 1948, 1948), ("stdcompat__printexc_s.mli", 116, 1948, 1985), 0), 0, Tag1 ("Stdcompat__printexc_s", 14)), 0); (("use_printers", 415), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -88), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -87)], (0)), 100000000, 0, -86), 0), 100000000, 0, -85), 0, (("stdcompat__printexc_s.mli", 119, 2047, 2047), ("stdcompat__printexc_s.mli", 119, 2047, 2086), 0), 0, Tag1 ("Stdcompat__printexc_s", 15)), 0); (("raise_with_backtrace", 416), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -84), (Tag1 (0, (Tag3 ((("raw_backtrace", 405)), 0, (0)), 100000000, 0, -83), ((("a")), 100000000, 0, -82), 0), 100000000, 0, -81), 0), 100000000, 0, -80), (("%raise_with_backtrace", 2, 1, "", [0; 0], 0)), (("stdcompat__printexc_s.mli", 123, 2151, 2151), ("stdcompat__printexc_s.mli", 124, 2183, 2237), 0), 0, Tag1 ("Stdcompat__printexc_s", 16)), 0); (("get_raw_backtrace_next_slot", 417), ((Tag1 (0, (Tag3 ((("raw_backtrace_slot", 410)), 0, (0)), 100000000, 0, -79), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("raw_backtrace_slot", 410)), 0, (0)), 100000000, 0, -78)], (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0, (("stdcompat__printexc_s.mli", 134, 2418, 2418), ("stdcompat__printexc_s.mli", 135, 2452, 2501), 0), 0, Tag1 ("Stdcompat__printexc_s", 17)), 0); (("set_uncaught_exception_handler", 418), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -75), (Tag1 (0, (Tag3 ((("raw_backtrace", 405)), 0, (0)), 100000000, 0, -74), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -73), 0), 100000000, 0, -72), 0), 100000000, 0, -71), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0, (("stdcompat__printexc_s.mli", 140, 2617, 2617), ("stdcompat__printexc_s.mli", 140, 2617, 2692), 0), 0, Tag1 ("Stdcompat__printexc_s", 18)), 0); (("backtrace_slots", 419), ((Tag1 (0, (Tag3 ((("raw_backtrace", 405)), 0, (0)), 100000000, 0, -68), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("backtrace_slot", 407)), 0, (0)), 100000000, 0, -67)], (0)), 100000000, 0, -66)], (0)), 100000000, 0, -65), 0), 100000000, 0, -64), 0, (("stdcompat__printexc_s.mli", 145, 2802, 2802), ("stdcompat__printexc_s.mli", 145, 2802, 2868), 0), 0, Tag1 ("Stdcompat__printexc_s", 19)), 0); (("raw_backtrace_length", 420), ((Tag1 (0, (Tag3 ((("raw_backtrace", 405)), 0, (0)), 100000000, 0, -63), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("stdcompat__printexc_s.mli", 149, 2963, 2963), ("stdcompat__printexc_s.mli", 149, 2963, 3010), 0), 0, Tag1 ("Stdcompat__printexc_s", 20)), 0); (("get_raw_backtrace_slot", 421), ((Tag1 (0, (Tag3 ((("raw_backtrace", 405)), 0, (0)), 100000000, 0, -60), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -59), (Tag3 ((("raw_backtrace_slot", 410)), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("stdcompat__printexc_s.mli", 152, 3082, 3082), ("stdcompat__printexc_s.mli", 152, 3082, 3153), 0), 0, Tag1 ("Stdcompat__printexc_s", 21)), 0); (("convert_raw_backtrace_slot", 422), ((Tag1 (0, (Tag3 ((("raw_backtrace_slot", 410)), 0, (0)), 100000000, 0, -55), (Tag3 ((("backtrace_slot", 407)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("stdcompat__printexc_s.mli", 156, 3253, 3253), ("stdcompat__printexc_s.mli", 156, 3253, 3322), 0), 0, Tag1 ("Stdcompat__printexc_s", 22)), 0); (("exn_slot_id", 423), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -52), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -51), 0), 100000000, 0, -50), 0, (("stdcompat__printexc_s.mli", 160, 3420, 3420), ("stdcompat__printexc_s.mli", 160, 3420, 3448), 0), 0, Tag1 ("Stdcompat__printexc_s", 23)), 0); (("exn_slot_name", 424), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -49), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("stdcompat__printexc_s.mli", 163, 3501, 3501), ("stdcompat__printexc_s.mli", 163, 3501, 3534), 0), 0, Tag1 ("Stdcompat__printexc_s", 24)), 0); (("get_raw_backtrace", 425), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -46), (Tag3 ((("raw_backtrace", 405)), 0, (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("stdcompat__printexc_s.mli", 166, 3592, 3592), ("stdcompat__printexc_s.mli", 166, 3592, 3637), 0), 0, Tag1 ("Stdcompat__printexc_s", 25)), 0); (("print_raw_backtrace", 426), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -43), (Tag1 (0, (Tag3 ((("raw_backtrace", 405)), 0, (0)), 100000000, 0, -42), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("stdcompat__printexc_s.mli", 169, 3707, 3707), ("stdcompat__printexc_s.mli", 169, 3707, 3769), 0), 0, Tag1 ("Stdcompat__printexc_s", 26)), 0); (("raw_backtrace_to_string", 427), ((Tag1 (0, (Tag3 ((("raw_backtrace", 405)), 0, (0)), 100000000, 0, -38), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("stdcompat__printexc_s.mli", 173, 3860, 3860), ("stdcompat__printexc_s.mli", 173, 3860, 3913), 0), 0, Tag1 ("Stdcompat__printexc_s", 27)), 0); (("get_callstack", 428), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -35), (Tag3 ((("raw_backtrace", 405)), 0, (0)), 100000000, 0, -34), 0), 100000000, 0, -33), (("caml_get_current_callstack", 1, 1, "", [0], 0)), (("stdcompat__printexc_s.mli", 177, 3992, 3992), ("stdcompat__printexc_s.mli", 177, 3992, 4068), 0), 0, Tag1 ("Stdcompat__printexc_s", 28)), 0); (("print_backtrace", 429), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -32), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("stdcompat__printexc_s.mli", 188, 4284, 4284), ("stdcompat__printexc_s.mli", 188, 4284, 4325), 0), 0, Tag1 ("Stdcompat__printexc_s", 29)), 0); (("get_backtrace", 430), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -29), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("stdcompat__printexc_s.mli", 191, 4391, 4391), ("stdcompat__printexc_s.mli", 191, 4391, 4425), 0), 0, Tag1 ("Stdcompat__printexc_s", 30)), 0); (("record_backtrace", 431), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -26), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("stdcompat__printexc_s.mli", 194, 4484, 4484), ("stdcompat__printexc_s.mli", 194, 4484, 4519), 0), 0, Tag1 ("Stdcompat__printexc_s", 31)), 0); (("backtrace_status", 432), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -23), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("stdcompat__printexc_s.mli", 197, 4579, 4579), ("stdcompat__printexc_s.mli", 197, 4579, 4614), 0), 0, Tag1 ("Stdcompat__printexc_s", 32)), 0); (("register_printer", 433), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -20), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -19)], (0)), 100000000, 0, -18), 0), 100000000, 0, -17), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("stdcompat__printexc_s.mli", 200, 4674, 4674), ("stdcompat__printexc_s.mli", 200, 4674, 4727), 0), 0, Tag1 ("Stdcompat__printexc_s", 33)), 0); (("to_string", 434), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -14), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("stdcompat__printexc_s.mli", 203, 4805, 4805), ("stdcompat__printexc_s.mli", 203, 4805, 4834), 0), 0, Tag1 ("Stdcompat__printexc_s", 34)), 0); (("print", 435), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -10), ((("b")), 100000000, 0, -9), 0), 100000000, 0, -11), (Tag1 (0, ((("a")), 100000000, 0, -10), ((("b")), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("stdcompat__printexc_s.mli", 206, 4875, 4875), ("stdcompat__printexc_s.mli", 206, 4875, 4909), 0), 0, Tag1 ("Stdcompat__printexc_s", 35)), 0); (("catch", 436), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -5), ((("b")), 100000000, 0, -4), 0), 100000000, 0, -6), (Tag1 (0, ((("a")), 100000000, 0, -5), ((("b")), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("stdcompat__printexc_s.mli", 209, 4946, 4946), ("stdcompat__printexc_s.mli", 209, 4946, 4980), 0), 0, Tag1 ("Stdcompat__printexc_s", 36)), 0)], "Stdcompat__printexc", [("Stdcompat__printexc", ("\214N8\232\222\245\168v\022\232\027\030\228\223\243r")); ("Stdlib__Printexc", ("\217u\168\235\179oi\167\235\255\025\017%d\192s")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stdcompat__printexc_s", ("\148W\244[\028\210\227\144\174\225\n\248\232\005E\226")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val catch : ('a -> 'b) -> 'a -> 'b
