type existential_name = Names.Id.t
type glob_sort_name =
    GSProp
  | GProp
  | GSet
  | GUniv of Univ.Level.t
  | GLocalUniv of Names.lident
  | GRawUniv of Univ.Level.t
type 'a glob_sort_gen = UAnonymous of { rigid : bool; } | UNamed of 'a
type glob_level = glob_sort_name glob_sort_gen
type glob_sort =
    (Sorts.QVar.t option * (glob_sort_name * int) list) glob_sort_gen
type glob_constraint = glob_sort_name * Univ.constraint_type * glob_sort_name
type glob_recarg = int option
and glob_fix_kind = GFix of (glob_recarg array * int) | GCoFix of int
type 'a cases_pattern_r =
    PatVar of Names.Name.t
  | PatCstr of Names.constructor * 'a cases_pattern_g list * Names.Name.t
and 'a cases_pattern_g = ('a cases_pattern_r, 'a) DAst.t
type cases_pattern = [ `any ] cases_pattern_g
type binding_kind = Explicit | MaxImplicit | NonMaxImplicit
type 'a glob_constr_r =
    GRef of Names.GlobRef.t * glob_level list option
  | GVar of Names.Id.t
  | GEvar of existential_name CAst.t * (Names.lident * 'a glob_constr_g) list
  | GPatVar of Evar_kinds.matching_var_kind
  | GApp of 'a glob_constr_g * 'a glob_constr_g list
  | GLambda of Names.Name.t * binding_kind * 'a glob_constr_g *
      'a glob_constr_g
  | GProd of Names.Name.t * binding_kind * 'a glob_constr_g *
      'a glob_constr_g
  | GLetIn of Names.Name.t * 'a glob_constr_g * 'a glob_constr_g option *
      'a glob_constr_g
  | GCases of Constr.case_style * 'a glob_constr_g option *
      'a tomatch_tuples_g * 'a cases_clauses_g
  | GLetTuple of Names.Name.t list *
      (Names.Name.t * 'a glob_constr_g option) * 'a glob_constr_g *
      'a glob_constr_g
  | GIf of 'a glob_constr_g * (Names.Name.t * 'a glob_constr_g option) *
      'a glob_constr_g * 'a glob_constr_g
  | GRec of glob_fix_kind * Names.Id.t array * 'a glob_decl_g list array *
      'a glob_constr_g array * 'a glob_constr_g array
  | GSort of glob_sort
  | GHole of Evar_kinds.t * Namegen.intro_pattern_naming_expr
  | GGenarg of Genarg.glob_generic_argument
  | GCast of 'a glob_constr_g * Constr.cast_kind option * 'a glob_constr_g
  | GProj of (Names.Constant.t * glob_level list option) *
      'a glob_constr_g list * 'a glob_constr_g
  | GInt of Uint63.t
  | GFloat of Float64.t
  | GArray of glob_level list option * 'a glob_constr_g array *
      'a glob_constr_g * 'a glob_constr_g
and 'a glob_constr_g = ('a glob_constr_r, 'a) DAst.t
and 'a glob_decl_g =
    Names.Name.t * binding_kind * 'a glob_constr_g option * 'a glob_constr_g
and 'a predicate_pattern_g =
    Names.Name.t * (Names.inductive * Names.Name.t list) CAst.t option
and 'a tomatch_tuple_g = 'a glob_constr_g * 'a predicate_pattern_g
and 'a tomatch_tuples_g = 'a tomatch_tuple_g list
and 'a cases_clause_g =
    (Names.Id.t list * 'a cases_pattern_g list * 'a glob_constr_g) CAst.t
and 'a cases_clauses_g = 'a cases_clause_g list
type glob_constr = [ `any ] glob_constr_g
type tomatch_tuple = [ `any ] tomatch_tuple_g
type tomatch_tuples = [ `any ] tomatch_tuples_g
type cases_clause = [ `any ] cases_clause_g
type cases_clauses = [ `any ] cases_clauses_g
type glob_decl = [ `any ] glob_decl_g
type predicate_pattern = [ `any ] predicate_pattern_g
type any_glob_constr = AnyGlobConstr : 'r glob_constr_g -> any_glob_constr
type 'a disjunctive_cases_clause_g =
    (Names.Id.t list * 'a cases_pattern_g list list * 'a glob_constr_g)
    CAst.t
type 'a disjunctive_cases_clauses_g = 'a disjunctive_cases_clause_g list
type 'a cases_pattern_disjunction_g = 'a cases_pattern_g list
type disjunctive_cases_clause = [ `any ] disjunctive_cases_clause_g
type disjunctive_cases_clauses = [ `any ] disjunctive_cases_clauses_g
type cases_pattern_disjunction = [ `any ] cases_pattern_disjunction_g
type 'a extended_glob_local_binder_r =
    GLocalAssum of Names.Name.t * binding_kind * 'a glob_constr_g
  | GLocalDef of Names.Name.t * 'a glob_constr_g * 'a glob_constr_g option
  | GLocalPattern of ('a cases_pattern_disjunction_g * Names.Id.t list) *
      Names.Id.t * binding_kind * 'a glob_constr_g
and 'a extended_glob_local_binder_g =
    ('a extended_glob_local_binder_r, 'a) DAst.t
("DEBUG:rule", [Tag1 (("existential_name", 971), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -230)), 0, 0, 0, 0, (("pretyping/glob_term.mli", 21, 981, 981), ("pretyping/glob_term.mli", 21, 981, 1009), 0), 0, 0, 0, Tag1 ("Glob_term", 0)), 1, 0); Tag1 (("glob_sort_name", 972), (0, 0, Tag1 ([(("GSProp", 372), (0), 0, (("pretyping/glob_term.mli", 26, 1047, 1049), ("pretyping/glob_term.mli", 26, 1047, 1057), 0), 0, Tag1 ("Glob_term", 2)); (("GProp", 373), (0), 0, (("pretyping/glob_term.mli", 27, 1099, 1101), ("pretyping/glob_term.mli", 27, 1099, 1108), 0), 0, Tag1 ("Glob_term", 3)); (("GSet", 374), (0), 0, (("pretyping/glob_term.mli", 28, 1147, 1149), ("pretyping/glob_term.mli", 28, 1147, 1155), 0), 0, Tag1 ("Glob_term", 4)); (("GUniv", 375), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Level"), "t"), 0, (0)), 100000000, 0, -227)]), 0, (("pretyping/glob_term.mli", 29, 1194, 1196), ("pretyping/glob_term.mli", 29, 1194, 1219), 0), 0, Tag1 ("Glob_term", 5)); (("GLocalUniv", 447), ([(Tag3 (Tag1 ((Tag2 ("Names")), "lident"), 0, (0)), 100000000, 0, -228)]), 0, (("pretyping/glob_term.mli", 30, 1220, 1222), ("pretyping/glob_term.mli", 30, 1220, 1244), 0), 0, Tag1 ("Glob_term", 6)); (("GRawUniv", 448), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Level"), "t"), 0, (0)), 100000000, 0, -229)]), 0, (("pretyping/glob_term.mli", 31, 1312, 1314), ("pretyping/glob_term.mli", 31, 1312, 1340), 0), 0, Tag1 ("Glob_term", 7))], 0), 1, 0, 0, 0, 0, 0, (("pretyping/glob_term.mli", 25, 1025, 1025), ("pretyping/glob_term.mli", 31, 1312, 1340), 0), 0, 0, 0, Tag1 ("Glob_term", 1)), 1, 0); Tag1 (("glob_sort_gen", 973), ([((("a")), 100000000, 0, -226)], 1, Tag1 ([(("UAnonymous", 459), Tag1 ([(("rigid", 460), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -225), (("pretyping/glob_term.mli", 38, 1519, 1539), ("pretyping/glob_term.mli", 38, 1519, 1551), 0), 0, Tag1 ("Glob_term", 9))]), 0, (("pretyping/glob_term.mli", 38, 1519, 1521), ("pretyping/glob_term.mli", 38, 1519, 1553), 0), 0, Tag1 ("Glob_term", 10)); (("UNamed", 461), ([((("a")), 100000000, 0, -226)]), 0, (("pretyping/glob_term.mli", 39, 1599, 1601), ("pretyping/glob_term.mli", 39, 1599, 1615), 0), 0, Tag1 ("Glob_term", 11))], 0), 1, 0, [25], [0], 0, 0, (("pretyping/glob_term.mli", 37, 1495, 1495), ("pretyping/glob_term.mli", 39, 1599, 1615), 0), 0, 0, 0, Tag1 ("Glob_term", 8)), 1, 0); Tag1 (("glob_level", 974), (0, 0, 0, 1, ((Tag3 ((("glob_sort_gen", 973)), [(Tag3 ((("glob_sort_name", 972)), 0, (0)), 100000000, 0, -224)], (0)), 100000000, 0, -223)), 0, 0, 0, 0, (("pretyping/glob_term.mli", 42, 1664, 1664), ("pretyping/glob_term.mli", 42, 1664, 1710), 0), 0, 0, 0, Tag1 ("Glob_term", 18)), 1, 0); Tag1 (("glob_sort", 975), (0, 0, 0, 1, ((Tag3 ((("glob_sort_gen", 973)), [(Tag2 ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Sorts")), "QVar"), "t"), 0, (0)), 100000000, 0, -218)], (0)), 100000000, 0, -217); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("glob_sort_name", 972)), 0, (0)), 100000000, 0, -221); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -222)]), 100000000, 0, -220)], (0)), 100000000, 0, -219)]), 100000000, 0, -216)], (0)), 100000000, 0, -215)), 0, 0, 0, 0, (("pretyping/glob_term.mli", 45, 1736, 1736), ("pretyping/glob_term.mli", 45, 1736, 1818), 0), 0, 0, 0, Tag1 ("Glob_term", 19)), 1, 0); Tag1 (("glob_constraint", 976), (0, 0, 0, 1, ((Tag2 ([(Tag3 ((("glob_sort_name", 972)), 0, (0)), 100000000, 0, -212); (Tag3 (Tag1 ((Tag2 ("Univ")), "constraint_type"), 0, (0)), 100000000, 0, -213); (Tag3 ((("glob_sort_name", 972)), 0, (0)), 100000000, 0, -214)]), 100000000, 0, -211)), 0, 0, 0, 0, (("pretyping/glob_term.mli", 47, 1820, 1820), ("pretyping/glob_term.mli", 47, 1820, 1897), 0), 0, 0, 0, Tag1 ("Glob_term", 20)), 1, 0); Tag1 (("glob_recarg", 977), (0, 0, 0, 1, ((Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -210)], (0)), 100000000, 0, -209)), 0, 0, 0, 0, (("pretyping/glob_term.mli", 49, 1899, 1899), ("pretyping/glob_term.mli", 49, 1899, 1928), 0), 0, 0, 0, Tag1 ("Glob_term", 21)), 1, 0); Tag1 (("glob_fix_kind", 978), (0, 0, Tag1 ([(("GFix", 511), ([(Tag2 ([(Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("glob_recarg", 977)), 0, (0)), 100000000, 0, -206)], (0)), 100000000, 0, -205); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -207)]), 100000000, 0, -204)]), 0, (("pretyping/glob_term.mli", 52, 1950, 1952), ("pretyping/glob_term.mli", 52, 1950, 1987), 0), 0, Tag1 ("Glob_term", 23)); (("GCoFix", 512), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -208)]), 0, (("pretyping/glob_term.mli", 53, 1988, 1990), ("pretyping/glob_term.mli", 53, 1988, 2005), 0), 0, Tag1 ("Glob_term", 24))], 0), 1, 0, 0, 0, 0, 0, (("pretyping/glob_term.mli", 51, 1930, 1930), ("pretyping/glob_term.mli", 53, 1988, 2005), 0), 0, 0, 0, Tag1 ("Glob_term", 22)), 2, 0); Tag1 (("cases_pattern_r", 979), ([((("a")), 100000000, 0, -202)], 1, Tag1 ([(("PatVar", 515), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -198)]), 0, (("pretyping/glob_term.mli", 59, 2164, 2166), ("pretyping/glob_term.mli", 59, 2164, 2185), 0), 0, Tag1 ("Glob_term", 27)); (("PatCstr", 525), ([(Tag3 (Tag1 ((Tag2 ("Names")), "constructor"), 0, (0)), 100000000, 0, -199); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("cases_pattern_g", 980)), [((("a")), 100000000, 0, -202)], (0)), 100000000, 0, -201)], (0)), 100000000, 0, -200); (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -203)]), 0, (("pretyping/glob_term.mli", 60, 2186, 2188), ("pretyping/glob_term.mli", 60, 2186, 2247), 0), 0, Tag1 ("Glob_term", 28))], 0), 1, 0, [63], [0], 0, 0, (("pretyping/glob_term.mli", 58, 2138, 2138), ("pretyping/glob_term.mli", 60, 2186, 2247), 0), 0, 0, 0, Tag1 ("Glob_term", 25)), 1, 0); Tag1 (("cases_pattern_g", 980), ([((("a")), 100000000, 0, -197)], 1, 0, 1, ((Tag3 (Tag1 ((Tag2 ("DAst")), "t"), [(Tag3 ((("cases_pattern_r", 979)), [((("a")), 100000000, 0, -197)], (0)), 100000000, 0, -196); ((("a")), 100000000, 0, -197)], (0)), 100000000, 0, -195)), [63], [0], 0, 0, (("pretyping/glob_term.mli", 62, 2300, 2300), ("pretyping/glob_term.mli", 62, 2300, 2356), 0), 0, 0, 0, Tag1 ("Glob_term", 26)), 2, 0); Tag1 (("cases_pattern", 981), (0, 0, 0, 1, ((Tag3 ((("cases_pattern_g", 980)), [(Tag8 (([("any", (0))], (0, 100000000, 0, -194), 1, 0, 0)), 100000000, 0, -193)], (0)), 100000000, 0, -192)), 0, 0, 0, 0, (("pretyping/glob_term.mli", 64, 2358, 2358), ("pretyping/glob_term.mli", 64, 2358, 2403), 0), 0, 0, 0, Tag1 ("Glob_term", 29)), 1, 0); Tag1 (("binding_kind", 982), (0, 0, Tag1 ([(("Explicit", 567), (0), 0, (("pretyping/glob_term.mli", 66, 2405, 2425), ("pretyping/glob_term.mli", 66, 2405, 2433), 0), 0, Tag1 ("Glob_term", 31)); (("MaxImplicit", 568), (0), 0, (("pretyping/glob_term.mli", 66, 2405, 2434), ("pretyping/glob_term.mli", 66, 2405, 2447), 0), 0, Tag1 ("Glob_term", 32)); (("NonMaxImplicit", 569), (0), 0, (("pretyping/glob_term.mli", 66, 2405, 2448), ("pretyping/glob_term.mli", 66, 2405, 2464), 0), 0, Tag1 ("Glob_term", 33))], 0), 1, 0, 0, 0, 0, 0, (("pretyping/glob_term.mli", 66, 2405, 2405), ("pretyping/glob_term.mli", 66, 2405, 2464), 0), 0, 1, 0, Tag1 ("Glob_term", 30)), 1, 0); Tag1 (("glob_constr_r", 983), ([((("a")), 100000000, 0, -119)], 1, Tag1 ([(("GRef", 578), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -108); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("glob_level", 974)), 0, (0)), 100000000, 0, -111)], (0)), 100000000, 0, -110)], (0)), 100000000, 0, -109)]), 0, (("pretyping/glob_term.mli", 70, 2568, 2570), ("pretyping/glob_term.mli", 70, 2568, 2614), 0), 0, Tag1 ("Glob_term", 42)); (("GVar", 590), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -112)]), 0, (("pretyping/glob_term.mli", 73, 2763, 2765), ("pretyping/glob_term.mli", 73, 2763, 2779), 0), 0, Tag1 ("Glob_term", 43)); (("GEvar", 591), ([(Tag3 (Tag1 ((Tag2 ("CAst")), "t"), [(Tag3 ((("existential_name", 971)), 0, (0)), 100000000, 0, -114)], (0)), 100000000, 0, -113); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Names")), "lident"), 0, (0)), 100000000, 0, -117); (Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -118)]), 100000000, 0, -116)], (0)), 100000000, 0, -115)]), 0, (("pretyping/glob_term.mli", 76, 2904, 2906), ("pretyping/glob_term.mli", 76, 2904, 2977), 0), 0, Tag1 ("Glob_term", 44)); (("GPatVar", 592), ([(Tag3 (Tag1 ((Tag2 ("Evar_kinds")), "matching_var_kind"), 0, (0)), 100000000, 0, -120)]), 0, (("pretyping/glob_term.mli", 77, 2978, 2980), ("pretyping/glob_term.mli", 77, 2978, 3021), 0), 0, Tag1 ("Glob_term", 45)); (("GApp", 600), ([(Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -121); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -123)], (0)), 100000000, 0, -122)]), 0, (("pretyping/glob_term.mli", 78, 3052, 3054), ("pretyping/glob_term.mli", 78, 3052, 3107), 0), 0, Tag1 ("Glob_term", 46)); (("GLambda", 601), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -124); (Tag3 ((("binding_kind", 982)), 0, (0)), 100000000, 0, -125); (Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -126); (Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -127)]), 0, (("pretyping/glob_term.mli", 79, 3108, 3110), ("pretyping/glob_term.mli", 79, 3108, 3183), 0), 0, Tag1 ("Glob_term", 47)); (("GProd", 602), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -128); (Tag3 ((("binding_kind", 982)), 0, (0)), 100000000, 0, -129); (Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -130); (Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -131)]), 0, (("pretyping/glob_term.mli", 80, 3184, 3186), ("pretyping/glob_term.mli", 80, 3184, 3258), 0), 0, Tag1 ("Glob_term", 48)); (("GLetIn", 603), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -132); (Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -133); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -135)], (0)), 100000000, 0, -134); (Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -136)]), 0, (("pretyping/glob_term.mli", 81, 3259, 3261), ("pretyping/glob_term.mli", 81, 3259, 3344), 0), 0, Tag1 ("Glob_term", 49)); (("GCases", 604), ([(Tag3 (Tag1 ((Tag2 ("Constr")), "case_style"), 0, (0)), 100000000, 0, -137); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -139)], (0)), 100000000, 0, -138); (Tag3 ((("tomatch_tuples_g", 988)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -140); (Tag3 ((("cases_clauses_g", 990)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -141)]), 0, (("pretyping/glob_term.mli", 82, 3345, 3347), ("pretyping/glob_term.mli", 82, 3345, 3446), 0), 0, Tag1 ("Glob_term", 51)); (("GLetTuple", 762), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -143)], (0)), 100000000, 0, -142); (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -145); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -147)], (0)), 100000000, 0, -146)]), 100000000, 0, -144); (Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -148); (Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -149)]), 0, (("pretyping/glob_term.mli", 84, 3540, 3542), ("pretyping/glob_term.mli", 84, 3540, 3643), 0), 0, Tag1 ("Glob_term", 52)); (("GIf", 763), ([(Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -150); (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -152); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -154)], (0)), 100000000, 0, -153)]), 100000000, 0, -151); (Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -155); (Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -156)]), 0, (("pretyping/glob_term.mli", 85, 3644, 3646), ("pretyping/glob_term.mli", 85, 3644, 3748), 0), 0, Tag1 ("Glob_term", 53)); (("GRec", 764), ([(Tag3 ((("glob_fix_kind", 978)), 0, (0)), 100000000, 0, -157); (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -159)], (0)), 100000000, 0, -158); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("glob_decl_g", 985)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -162)], (0)), 100000000, 0, -161)], (0)), 100000000, 0, -160); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -164)], (0)), 100000000, 0, -163); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -166)], (0)), 100000000, 0, -165)]), 0, (("pretyping/glob_term.mli", 86, 3749, 3751), ("pretyping/glob_term.mli", 87, 3819, 3879), 0), 0, Tag1 ("Glob_term", 54)); (("GSort", 765), ([(Tag3 ((("glob_sort", 975)), 0, (0)), 100000000, 0, -167)]), 0, (("pretyping/glob_term.mli", 88, 3880, 3882), ("pretyping/glob_term.mli", 88, 3880, 3902), 0), 0, Tag1 ("Glob_term", 55)); (("GHole", 766), ([(Tag3 (Tag1 ((Tag2 ("Evar_kinds")), "t"), 0, (0)), 100000000, 0, -168); (Tag3 (Tag1 ((Tag2 ("Namegen")), "intro_pattern_naming_expr"), 0, (0)), 100000000, 0, -169)]), 0, (("pretyping/glob_term.mli", 89, 3903, 3905), ("pretyping/glob_term.mli", 89, 3903, 3964), 0), 0, Tag1 ("Glob_term", 56)); (("GGenarg", 806), ([(Tag3 (Tag1 ((Tag2 ("Genarg")), "glob_generic_argument"), 0, (0)), 100000000, 0, -170)]), 0, (("pretyping/glob_term.mli", 90, 3965, 3967), ("pretyping/glob_term.mli", 90, 3965, 4008), 0), 0, Tag1 ("Glob_term", 57)); (("GCast", 844), ([(Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -171); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "cast_kind"), 0, (0)), 100000000, 0, -173)], (0)), 100000000, 0, -172); (Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -174)]), 0, (("pretyping/glob_term.mli", 91, 4009, 4011), ("pretyping/glob_term.mli", 91, 4009, 4083), 0), 0, Tag1 ("Glob_term", 58)); (("GProj", 845), ([(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -176); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("glob_level", 974)), 0, (0)), 100000000, 0, -179)], (0)), 100000000, 0, -178)], (0)), 100000000, 0, -177)]), 100000000, 0, -175); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -181)], (0)), 100000000, 0, -180); (Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -182)]), 0, (("pretyping/glob_term.mli", 92, 4084, 4086), ("pretyping/glob_term.mli", 92, 4084, 4177), 0), 0, Tag1 ("Glob_term", 59)); (("GInt", 864), ([(Tag3 (Tag1 ((Tag2 ("Uint63")), "t"), 0, (0)), 100000000, 0, -183)]), 0, (("pretyping/glob_term.mli", 93, 4178, 4180), ("pretyping/glob_term.mli", 93, 4178, 4198), 0), 0, Tag1 ("Glob_term", 60)); (("GFloat", 912), ([(Tag3 (Tag1 ((Tag2 ("Float64")), "t"), 0, (0)), 100000000, 0, -184)]), 0, (("pretyping/glob_term.mli", 94, 4199, 4201), ("pretyping/glob_term.mli", 94, 4199, 4222), 0), 0, Tag1 ("Glob_term", 61)); (("GArray", 949), ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("glob_level", 974)), 0, (0)), 100000000, 0, -187)], (0)), 100000000, 0, -186)], (0)), 100000000, 0, -185); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -189)], (0)), 100000000, 0, -188); (Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -190); (Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -119)], (0)), 100000000, 0, -191)]), 0, (("pretyping/glob_term.mli", 95, 4223, 4225), ("pretyping/glob_term.mli", 95, 4223, 4322), 0), 0, Tag1 ("Glob_term", 62))], 0), 1, 0, [63], [0], 0, 0, (("pretyping/glob_term.mli", 69, 2544, 2544), ("pretyping/glob_term.mli", 95, 4223, 4322), 0), 0, 0, 0, Tag1 ("Glob_term", 34)), 1, 0); Tag1 (("glob_constr_g", 984), ([((("a")), 100000000, 0, -107)], 1, 0, 1, ((Tag3 (Tag1 ((Tag2 ("DAst")), "t"), [(Tag3 ((("glob_constr_r", 983)), [((("a")), 100000000, 0, -107)], (0)), 100000000, 0, -106); ((("a")), 100000000, 0, -107)], (0)), 100000000, 0, -105)), [63], [0], 0, 0, (("pretyping/glob_term.mli", 96, 4323, 4323), ("pretyping/glob_term.mli", 96, 4323, 4375), 0), 0, 0, 0, Tag1 ("Glob_term", 35)), 2, 0); Tag1 (("glob_decl_g", 985), ([((("a")), 100000000, 0, -103)], 1, 0, 1, ((Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -99); (Tag3 ((("binding_kind", 982)), 0, (0)), 100000000, 0, -100); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -103)], (0)), 100000000, 0, -102)], (0)), 100000000, 0, -101); (Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -103)], (0)), 100000000, 0, -104)]), 100000000, 0, -98)), [63], [0], 0, 0, (("pretyping/glob_term.mli", 98, 4377, 4377), ("pretyping/glob_term.mli", 98, 4377, 4464), 0), 0, 0, 0, Tag1 ("Glob_term", 36)), 2, 0); Tag1 (("predicate_pattern_g", 986), ([((("a")), 100000000, 0, -97)], 1, 0, 1, ((Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -90); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("CAst")), "t"), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -94); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -96)], (0)), 100000000, 0, -95)]), 100000000, 0, -93)], (0)), 100000000, 0, -92)], (0)), 100000000, 0, -91)]), 100000000, 0, -89)), [0], [0], 0, 0, (("pretyping/glob_term.mli", 100, 4466, 4466), ("pretyping/glob_term.mli", 101, 4495, 4547), 0), 0, 0, 0, Tag1 ("Glob_term", 37)), 2, 0); Tag1 (("tomatch_tuple_g", 987), ([((("a")), 100000000, 0, -87)], 1, 0, 1, ((Tag2 ([(Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -87)], (0)), 100000000, 0, -86); (Tag3 ((("predicate_pattern_g", 986)), [((("a")), 100000000, 0, -87)], (0)), 100000000, 0, -88)]), 100000000, 0, -85)), [63], [0], 0, 0, (("pretyping/glob_term.mli", 104, 4629, 4629), ("pretyping/glob_term.mli", 104, 4629, 4697), 0), 0, 0, 0, Tag1 ("Glob_term", 38)), 2, 0); Tag1 (("tomatch_tuples_g", 988), ([((("a")), 100000000, 0, -84)], 1, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("tomatch_tuple_g", 987)), [((("a")), 100000000, 0, -84)], (0)), 100000000, 0, -83)], (0)), 100000000, 0, -82)), [63], [0], 0, 0, (("pretyping/glob_term.mli", 106, 4699, 4699), ("pretyping/glob_term.mli", 106, 4699, 4748), 0), 0, 0, 0, Tag1 ("Glob_term", 39)), 2, 0); Tag1 (("cases_clause_g", 989), ([((("a")), 100000000, 0, -80)], 1, 0, 1, ((Tag3 (Tag1 ((Tag2 ("CAst")), "t"), [(Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -77)], (0)), 100000000, 0, -76); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("cases_pattern_g", 980)), [((("a")), 100000000, 0, -80)], (0)), 100000000, 0, -79)], (0)), 100000000, 0, -78); (Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -80)], (0)), 100000000, 0, -81)]), 100000000, 0, -75)], (0)), 100000000, 0, -74)), [63], [0], 0, 0, (("pretyping/glob_term.mli", 108, 4750, 4750), ("pretyping/glob_term.mli", 108, 4750, 4837), 0), 0, 0, 0, Tag1 ("Glob_term", 40)), 2, 0); Tag1 (("cases_clauses_g", 990), ([((("a")), 100000000, 0, -73)], 1, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("cases_clause_g", 989)), [((("a")), 100000000, 0, -73)], (0)), 100000000, 0, -72)], (0)), 100000000, 0, -71)), [63], [0], 0, 0, (("pretyping/glob_term.mli", 112, 4941, 4941), ("pretyping/glob_term.mli", 112, 4941, 4988), 0), 0, 0, 0, Tag1 ("Glob_term", 41)), 2, 0); Tag1 (("glob_constr", 991), (0, 0, 0, 1, ((Tag3 ((("glob_constr_g", 984)), [(Tag8 (([("any", (0))], (0, 100000000, 0, -70), 1, 0, 0)), 100000000, 0, -69)], (0)), 100000000, 0, -68)), 0, 0, 0, 0, (("pretyping/glob_term.mli", 114, 4990, 4990), ("pretyping/glob_term.mli", 114, 4990, 5031), 0), 0, 0, 0, Tag1 ("Glob_term", 63)), 1, 0); Tag1 (("tomatch_tuple", 992), (0, 0, 0, 1, ((Tag3 ((("tomatch_tuple_g", 987)), [(Tag8 (([("any", (0))], (0, 100000000, 0, -67), 1, 0, 0)), 100000000, 0, -66)], (0)), 100000000, 0, -65)), 0, 0, 0, 0, (("pretyping/glob_term.mli", 115, 5032, 5032), ("pretyping/glob_term.mli", 115, 5032, 5077), 0), 0, 0, 0, Tag1 ("Glob_term", 64)), 1, 0); Tag1 (("tomatch_tuples", 993), (0, 0, 0, 1, ((Tag3 ((("tomatch_tuples_g", 988)), [(Tag8 (([("any", (0))], (0, 100000000, 0, -64), 1, 0, 0)), 100000000, 0, -63)], (0)), 100000000, 0, -62)), 0, 0, 0, 0, (("pretyping/glob_term.mli", 116, 5078, 5078), ("pretyping/glob_term.mli", 116, 5078, 5125), 0), 0, 0, 0, Tag1 ("Glob_term", 65)), 1, 0); Tag1 (("cases_clause", 994), (0, 0, 0, 1, ((Tag3 ((("cases_clause_g", 989)), [(Tag8 (([("any", (0))], (0, 100000000, 0, -61), 1, 0, 0)), 100000000, 0, -60)], (0)), 100000000, 0, -59)), 0, 0, 0, 0, (("pretyping/glob_term.mli", 117, 5126, 5126), ("pretyping/glob_term.mli", 117, 5126, 5169), 0), 0, 0, 0, Tag1 ("Glob_term", 66)), 1, 0); Tag1 (("cases_clauses", 995), (0, 0, 0, 1, ((Tag3 ((("cases_clauses_g", 990)), [(Tag8 (([("any", (0))], (0, 100000000, 0, -58), 1, 0, 0)), 100000000, 0, -57)], (0)), 100000000, 0, -56)), 0, 0, 0, 0, (("pretyping/glob_term.mli", 118, 5170, 5170), ("pretyping/glob_term.mli", 118, 5170, 5215), 0), 0, 0, 0, Tag1 ("Glob_term", 67)), 1, 0); Tag1 (("glob_decl", 996), (0, 0, 0, 1, ((Tag3 ((("glob_decl_g", 985)), [(Tag8 (([("any", (0))], (0, 100000000, 0, -55), 1, 0, 0)), 100000000, 0, -54)], (0)), 100000000, 0, -53)), 0, 0, 0, 0, (("pretyping/glob_term.mli", 119, 5216, 5216), ("pretyping/glob_term.mli", 119, 5216, 5253), 0), 0, 0, 0, Tag1 ("Glob_term", 68)), 1, 0); Tag1 (("predicate_pattern", 997), (0, 0, 0, 1, ((Tag3 ((("predicate_pattern_g", 986)), [(Tag8 (([("any", (0))], (0, 100000000, 0, -52), 1, 0, 0)), 100000000, 0, -51)], (0)), 100000000, 0, -50)), 0, 0, 0, 0, (("pretyping/glob_term.mli", 120, 5254, 5254), ("pretyping/glob_term.mli", 120, 5254, 5307), 0), 0, 0, 0, Tag1 ("Glob_term", 69)), 1, 0); Tag1 (("any_glob_constr", 998), (0, 0, Tag1 ([(("AnyGlobConstr", 958), ([(Tag3 ((("glob_constr_g", 984)), [((("r")), 100000000, 0, -49)], (0)), 100000000, 0, -48)]), ((Tag3 ((("any_glob_constr", 998)), 0, (0)), 100000000, 0, -47)), (("pretyping/glob_term.mli", 122, 5309, 5332), ("pretyping/glob_term.mli", 122, 5309, 5383), 0), 0, Tag1 ("Glob_term", 71))], 0), 1, 0, 0, 0, 0, 0, (("pretyping/glob_term.mli", 122, 5309, 5309), ("pretyping/glob_term.mli", 122, 5309, 5383), 0), 0, 0, 1, Tag1 ("Glob_term", 70)), 1, 0); Tag1 (("disjunctive_cases_clause_g", 999), ([((("a")), 100000000, 0, -45)], 1, 0, 1, ((Tag3 (Tag1 ((Tag2 ("CAst")), "t"), [(Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -41)], (0)), 100000000, 0, -40); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("cases_pattern_g", 980)), [((("a")), 100000000, 0, -45)], (0)), 100000000, 0, -44)], (0)), 100000000, 0, -43)], (0)), 100000000, 0, -42); (Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -45)], (0)), 100000000, 0, -46)]), 100000000, 0, -39)], (0)), 100000000, 0, -38)), [63], [0], 0, 0, (("pretyping/glob_term.mli", 124, 5385, 5385), ("pretyping/glob_term.mli", 124, 5385, 5490), 0), 0, 0, 0, Tag1 ("Glob_term", 72)), 1, 0); Tag1 (("disjunctive_cases_clauses_g", 1000), ([((("a")), 100000000, 0, -37)], 1, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("disjunctive_cases_clause_g", 999)), [((("a")), 100000000, 0, -37)], (0)), 100000000, 0, -36)], (0)), 100000000, 0, -35)), [63], [0], 0, 0, (("pretyping/glob_term.mli", 125, 5491, 5491), ("pretyping/glob_term.mli", 125, 5491, 5563), 0), 0, 0, 0, Tag1 ("Glob_term", 73)), 1, 0); Tag1 (("cases_pattern_disjunction_g", 1001), ([((("a")), 100000000, 0, -34)], 1, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("cases_pattern_g", 980)), [((("a")), 100000000, 0, -34)], (0)), 100000000, 0, -33)], (0)), 100000000, 0, -32)), [63], [0], 0, 0, (("pretyping/glob_term.mli", 126, 5564, 5564), ("pretyping/glob_term.mli", 126, 5564, 5625), 0), 0, 0, 0, Tag1 ("Glob_term", 74)), 1, 0); Tag1 (("disjunctive_cases_clause", 1002), (0, 0, 0, 1, ((Tag3 ((("disjunctive_cases_clause_g", 999)), [(Tag8 (([("any", (0))], (0, 100000000, 0, -31), 1, 0, 0)), 100000000, 0, -30)], (0)), 100000000, 0, -29)), 0, 0, 0, 0, (("pretyping/glob_term.mli", 128, 5627, 5627), ("pretyping/glob_term.mli", 128, 5627, 5694), 0), 0, 0, 0, Tag1 ("Glob_term", 75)), 1, 0); Tag1 (("disjunctive_cases_clauses", 1003), (0, 0, 0, 1, ((Tag3 ((("disjunctive_cases_clauses_g", 1000)), [(Tag8 (([("any", (0))], (0, 100000000, 0, -28), 1, 0, 0)), 100000000, 0, -27)], (0)), 100000000, 0, -26)), 0, 0, 0, 0, (("pretyping/glob_term.mli", 129, 5695, 5695), ("pretyping/glob_term.mli", 129, 5695, 5764), 0), 0, 0, 0, Tag1 ("Glob_term", 76)), 1, 0); Tag1 (("cases_pattern_disjunction", 1004), (0, 0, 0, 1, ((Tag3 ((("cases_pattern_disjunction_g", 1001)), [(Tag8 (([("any", (0))], (0, 100000000, 0, -25), 1, 0, 0)), 100000000, 0, -24)], (0)), 100000000, 0, -23)), 0, 0, 0, 0, (("pretyping/glob_term.mli", 130, 5765, 5765), ("pretyping/glob_term.mli", 130, 5765, 5834), 0), 0, 0, 0, Tag1 ("Glob_term", 77)), 1, 0); Tag1 (("extended_glob_local_binder_r", 1005), ([((("a")), 100000000, 0, -11)], 1, Tag1 ([(("GLocalAssum", 967), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -8); (Tag3 ((("binding_kind", 982)), 0, (0)), 100000000, 0, -9); (Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -11)], (0)), 100000000, 0, -10)]), 0, (("pretyping/glob_term.mli", 133, 5875, 5877), ("pretyping/glob_term.mli", 133, 5875, 5936), 0), 0, Tag1 ("Glob_term", 80)); (("GLocalDef", 968), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -12); (Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -11)], (0)), 100000000, 0, -13); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -11)], (0)), 100000000, 0, -15)], (0)), 100000000, 0, -14)]), 0, (("pretyping/glob_term.mli", 134, 5937, 5939), ("pretyping/glob_term.mli", 134, 5937, 6009), 0), 0, Tag1 ("Glob_term", 81)); (("GLocalPattern", 969), ([(Tag2 ([(Tag3 ((("cases_pattern_disjunction_g", 1001)), [((("a")), 100000000, 0, -11)], (0)), 100000000, 0, -17); (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -19)], (0)), 100000000, 0, -18)]), 100000000, 0, -16); (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -20); (Tag3 ((("binding_kind", 982)), 0, (0)), 100000000, 0, -21); (Tag3 ((("glob_constr_g", 984)), [((("a")), 100000000, 0, -11)], (0)), 100000000, 0, -22)]), 0, (("pretyping/glob_term.mli", 135, 6010, 6012), ("pretyping/glob_term.mli", 135, 6010, 6116), 0), 0, Tag1 ("Glob_term", 82))], 0), 1, 0, [63], [0], 0, 0, (("pretyping/glob_term.mli", 132, 5836, 5836), ("pretyping/glob_term.mli", 135, 6010, 6116), 0), 0, 0, 0, Tag1 ("Glob_term", 78)), 1, 0); Tag1 (("extended_glob_local_binder_g", 1006), ([((("a")), 100000000, 0, -7)], 1, 0, 1, ((Tag3 (Tag1 ((Tag2 ("DAst")), "t"), [(Tag3 ((("extended_glob_local_binder_r", 1005)), [((("a")), 100000000, 0, -7)], (0)), 100000000, 0, -6); ((("a")), 100000000, 0, -7)], (0)), 100000000, 0, -5)), [63], [0], 0, 0, (("pretyping/glob_term.mli", 136, 6117, 6117), ("pretyping/glob_term.mli", 136, 6117, 6199), 0), 0, 0, 0, Tag1 ("Glob_term", 79)), 2, 0); Tag1 (("extended_glob_local_binder", 1007), (0, 0, 0, 1, ((Tag3 ((("extended_glob_local_binder_g", 1006)), [(Tag8 (([("any", (0))], (0, 100000000, 0, -4), 1, 0, 0)), 100000000, 0, -3)], (0)), 100000000, 0, -2)), 0, 0, 0, 0, (("pretyping/glob_term.mli", 138, 6201, 6201), ("pretyping/glob_term.mli", 138, 6201, 6272), 0), 0, 0, 0, Tag1 ("Glob_term", 83)), 1, 0)], "Glob_term", [("Glob_term", ("\165=a\227\160\153.\021_$\232\209T\236\153O")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("UnivSubst", ("\190qu\031mc\130\181\003G]\132\"\219m)")); ("UnivProblem", ("6'\161\018\181\001.\253\000\141a6\171\1727\155")); ("UnivNames", ("%\151_\209%+JM$n\001\232\194n\178N")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UState", ("SD\203\215|\136\n\251\239\208\148\215C\n\167\005")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Store", ("/dT\252\145\179pq\216{\181\206\190K+U")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("Section", ("\245\207\b\021\142v=\155#w\246}\"4b\006")); ("Safe_typing", (")\250?\164\145\132\241\127\186\152h+\145\"\237l")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("Nativevalues", ("8:\007\025e\226c,\001\171\146#l\210\171\152")); ("Nativelib", ("V\239\205Y1\147E:,\176\196Hy\1483|")); ("Nativecode", ("\190\185\255\006m\012\210\163\138Rz\247\15283\183")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Namegen", ("\187\222\224T\255\020\1808-\212*\164\131\177\157x")); ("Monad", ("\244\171T\157\194p\187\160\149\195{\132\222\020\253\148")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hook", ("\183\194\223\003\155\169',\187\240a;E\b\1396")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Genlambda", ("\170}\024\241\141\222\136S\169\219\2212i\134KI")); ("Genarg", ("\1434\015\001\152\196\005s\156\136\195\185\247\b3\t")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evd", ("\211\205p\193\216\129r\006\239oN\142ar\196\175")); ("Evar_kinds", ("\023L\186\132\218}\254\221\185\198\220\200h\003{\021")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("EConstr", ("\201aW\156\157;N\004\201V\208\006L\166\211)")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("DAst", ("\224/\200)\007\184ni\134\b\139\204\241\005w\212")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conversion", ("\158\150&\195M\tv\127|\029\158RRK\211A")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CDebug", ("^4\210p7\239!3\138\138\213?\239`\250\157")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [1; (0)])
type extended_glob_local_binder = [ `any ] extended_glob_local_binder_g
