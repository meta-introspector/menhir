val map_glob_sort_gen :
  ('a -> 'b) -> 'a Glob_term.glob_sort_gen -> 'b Glob_term.glob_sort_gen
val glob_sort_gen_eq :
  ('a -> 'a -> bool) ->
  'a Glob_term.glob_sort_gen -> 'a Glob_term.glob_sort_gen -> bool
val glob_sort_eq : Glob_term.glob_sort -> Glob_term.glob_sort -> bool
val glob_level_eq : Glob_term.glob_level -> Glob_term.glob_level -> bool
val cases_pattern_eq :
  'a Glob_term.cases_pattern_g -> 'a Glob_term.cases_pattern_g -> bool
exception ComplexSort
val glob_sort_family : Glob_term.glob_sort -> Sorts.family
val alias_of_pat : 'a Glob_term.cases_pattern_g -> Names.Name.t
val set_pat_alias :
  Names.Id.t -> 'a Glob_term.cases_pattern_g -> 'a Glob_term.cases_pattern_g
val cast_kind_eq : Constr.cast_kind -> Constr.cast_kind -> bool
val glob_constr_eq :
  'a Glob_term.glob_constr_g -> 'a Glob_term.glob_constr_g -> bool
val cases_pattern_loc : 'a Glob_term.cases_pattern_g -> Loc.t option
val cases_predicate_names :
  'a Glob_term.tomatch_tuples_g -> Names.Name.t list
val mkGApp :
  ?loc:Loc.t ->
  'a Glob_term.glob_constr_g ->
  'a Glob_term.glob_constr_g list -> 'a Glob_term.glob_constr_g
val map_glob_constr :
  (Glob_term.glob_constr -> Glob_term.glob_constr) ->
  Glob_term.glob_constr -> Glob_term.glob_constr
val binding_kind_eq :
  Glob_term.binding_kind -> Glob_term.binding_kind -> bool
val map_glob_constr_left_to_right :
  (Glob_term.glob_constr -> Glob_term.glob_constr) ->
  Glob_term.glob_constr -> Glob_term.glob_constr
val warn_variable_collision : ?loc:Loc.t -> Names.Id.t -> unit
val mk_glob_constr_eq :
  (Glob_term.glob_constr -> Glob_term.glob_constr -> bool) ->
  Glob_term.glob_constr -> Glob_term.glob_constr -> bool
val fold_glob_constr :
  ('a -> Glob_term.glob_constr -> 'a) -> 'a -> Glob_term.glob_constr -> 'a
val fold_glob_constr_with_binders :
  (Names.Id.t -> 'a -> 'a) ->
  ('a -> 'b -> Glob_term.glob_constr -> 'b) ->
  'a -> 'b -> Glob_term.glob_constr -> 'b
val iter_glob_constr :
  (Glob_term.glob_constr -> unit) -> Glob_term.glob_constr -> unit
val occur_glob_constr : Names.Id.t -> 'a Glob_term.glob_constr_g -> bool
val free_glob_vars : 'a Glob_term.glob_constr_g -> Names.Id.Set.t
val bound_glob_vars : Glob_term.glob_constr -> Names.Id.Set.t
val loc_of_glob_constr : 'a Glob_term.glob_constr_g -> Loc.t option
val glob_visible_short_qualid : 'a Glob_term.glob_constr_g -> Names.Id.Set.t
exception UnsoundRenaming
val rename_var : (Names.Id.t * Names.Id.t) list -> Names.Id.t -> Names.Id.t
val rename_glob_vars :
  (Names.Id.t * Names.Id.t) list ->
  'a Glob_term.glob_constr_g -> 'a Glob_term.glob_constr_g
val map_pattern_binders :
  (Names.Name.t -> Names.Name.t) ->
  Glob_term.tomatch_tuples ->
  Glob_term.cases_clauses ->
  Glob_term.tomatch_tuples * Glob_term.cases_clauses
val map_pattern :
  (Glob_term.glob_constr -> Glob_term.glob_constr) ->
  Glob_term.tomatch_tuples ->
  Glob_term.cases_clauses ->
  Glob_term.tomatch_tuples * Glob_term.cases_clauses
val cases_pattern_of_glob_constr :
  Environ.env ->
  Names.Name.t -> 'a Glob_term.glob_constr_g -> 'a Glob_term.cases_pattern_g
val glob_constr_of_closed_cases_pattern :
  Environ.env ->
  'a Glob_term.cases_pattern_g -> Names.Name.t * 'a Glob_term.glob_constr_g
val glob_constr_of_cases_pattern :
  Environ.env -> 'a Glob_term.cases_pattern_g -> 'a Glob_term.glob_constr_g
val add_patterns_for_params_remove_local_defs :
  Environ.env ->
  Names.constructor ->
  'a Glob_term.cases_pattern_g list -> 'a Glob_term.cases_pattern_g list
("DEBUG:rule", [(("map_glob_sort_gen", 880), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -237), ((("b")), 100000000, 0, -235), 0), 100000000, 0, -238), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_sort_gen"), [((("a")), 100000000, 0, -237)], (0)), 100000000, 0, -236), (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_sort_gen"), [((("b")), 100000000, 0, -235)], (0)), 100000000, 0, -234), 0), 100000000, 0, -233), 0), 100000000, 0, -232), 0, (("pretyping/glob_ops.mli", 14, 703, 703), ("pretyping/glob_ops.mli", 14, 703, 777), 0), 0, Tag1 ("Glob_ops", 1)), 0); (("glob_sort_gen_eq", 881), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -227), (Tag1 (0, ((("a")), 100000000, 0, -227), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -231), 0), 100000000, 0, -230), 0), 100000000, 0, -229), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_sort_gen"), [((("a")), 100000000, 0, -227)], (0)), 100000000, 0, -228), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_sort_gen"), [((("a")), 100000000, 0, -227)], (0)), 100000000, 0, -226), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -225), 0), 100000000, 0, -224), 0), 100000000, 0, -223), 0), 100000000, 0, -222), 0, (("pretyping/glob_ops.mli", 18, 798, 798), ("pretyping/glob_ops.mli", 18, 798, 887), 0), 0, Tag1 ("Glob_ops", 2)), 0); (("glob_sort_eq", 882), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_sort"), 0, (0)), 100000000, 0, -221), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_sort"), 0, (0)), 100000000, 0, -220), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -219), 0), 100000000, 0, -218), 0), 100000000, 0, -217), 0, (("pretyping/glob_ops.mli", 20, 889, 889), ("pretyping/glob_ops.mli", 20, 889, 958), 0), 0, Tag1 ("Glob_ops", 3)), 0); (("glob_level_eq", 883), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_level"), 0, (0)), 100000000, 0, -216), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_level"), 0, (0)), 100000000, 0, -215), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -214), 0), 100000000, 0, -213), 0), 100000000, 0, -212), 0, (("pretyping/glob_ops.mli", 22, 960, 960), ("pretyping/glob_ops.mli", 22, 960, 1032), 0), 0, Tag1 ("Glob_ops", 4)), 0); (("cases_pattern_eq", 884), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "cases_pattern_g"), [((("a")), 100000000, 0, -210)], (0)), 100000000, 0, -211), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "cases_pattern_g"), [((("a")), 100000000, 0, -210)], (0)), 100000000, 0, -209), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -208), 0), 100000000, 0, -207), 0), 100000000, 0, -206), 0, (("pretyping/glob_ops.mli", 24, 1034, 1034), ("pretyping/glob_ops.mli", 24, 1034, 1105), 0), 0, Tag1 ("Glob_ops", 5)), 0); Tag2 (("ComplexSort", 885), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Glob_ops", 6)), 2, 0); (("glob_sort_family", 886), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_sort"), 0, (0)), 100000000, 0, -205), (Tag3 (Tag1 ((Tag2 ("Sorts")), "family"), 0, (0)), 100000000, 0, -204), 0), 100000000, 0, -203), 0, (("pretyping/glob_ops.mli", 29, 1255, 1255), ("pretyping/glob_ops.mli", 29, 1255, 1303), 0), 0, Tag1 ("Glob_ops", 7)), 0); (("alias_of_pat", 887), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "cases_pattern_g"), [((("a")), 100000000, 0, -202)], (0)), 100000000, 0, -201), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -200), 0), 100000000, 0, -199), 0, (("pretyping/glob_ops.mli", 31, 1305, 1305), ("pretyping/glob_ops.mli", 31, 1305, 1352), 0), 0, Tag1 ("Glob_ops", 8)), 0); (("set_pat_alias", 888), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -198), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "cases_pattern_g"), [((("a")), 100000000, 0, -196)], (0)), 100000000, 0, -197), (Tag3 (Tag1 ((Tag2 ("Glob_term")), "cases_pattern_g"), [((("a")), 100000000, 0, -196)], (0)), 100000000, 0, -195), 0), 100000000, 0, -194), 0), 100000000, 0, -193), 0, (("pretyping/glob_ops.mli", 33, 1354, 1354), ("pretyping/glob_ops.mli", 33, 1354, 1422), 0), 0, Tag1 ("Glob_ops", 9)), 0); (("cast_kind_eq", 889), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "cast_kind"), 0, (0)), 100000000, 0, -192), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "cast_kind"), 0, (0)), 100000000, 0, -191), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -190), 0), 100000000, 0, -189), 0), 100000000, 0, -188), 0, (("pretyping/glob_ops.mli", 35, 1424, 1424), ("pretyping/glob_ops.mli", 35, 1424, 1488), 0), 0, Tag1 ("Glob_ops", 11)), 0); (("glob_constr_eq", 890), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr_g"), [((("a")), 100000000, 0, -186)], (0)), 100000000, 0, -187), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr_g"), [((("a")), 100000000, 0, -186)], (0)), 100000000, 0, -185), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -184), 0), 100000000, 0, -183), 0), 100000000, 0, -182), 0, (("pretyping/glob_ops.mli", 37, 1490, 1490), ("pretyping/glob_ops.mli", 37, 1490, 1555), 0), 0, Tag1 ("Glob_ops", 12)), 0); (("cases_pattern_loc", 891), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "cases_pattern_g"), [((("a")), 100000000, 0, -181)], (0)), 100000000, 0, -180), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -179)], (0)), 100000000, 0, -178), 0), 100000000, 0, -177), 0, (("pretyping/glob_ops.mli", 41, 1593, 1593), ("pretyping/glob_ops.mli", 41, 1593, 1651), 0), 0, Tag1 ("Glob_ops", 14)), 0); (("cases_predicate_names", 892), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "tomatch_tuples_g"), [((("a")), 100000000, 0, -176)], (0)), 100000000, 0, -175), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -174)], (0)), 100000000, 0, -173), 0), 100000000, 0, -172), 0, (("pretyping/glob_ops.mli", 43, 1653, 1653), ("pretyping/glob_ops.mli", 43, 1653, 1715), 0), 0, Tag1 ("Glob_ops", 15)), 0); (("mkGApp", 893), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -171)], (0)), 100000000, 0, -170), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr_g"), [((("a")), 100000000, 0, -166)], (0)), 100000000, 0, -169), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr_g"), [((("a")), 100000000, 0, -166)], (0)), 100000000, 0, -168)], (0)), 100000000, 0, -167), (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr_g"), [((("a")), 100000000, 0, -166)], (0)), 100000000, 0, -165), 0), 100000000, 0, -164), 0), 100000000, 0, -163), 0), 100000000, 0, -162), 0, (("pretyping/glob_ops.mli", 46, 1767, 1767), ("pretyping/glob_ops.mli", 46, 1767, 1855), 0), 0, Tag1 ("Glob_ops", 16)), 0); (("map_glob_constr", 894), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -161), (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -160), 0), 100000000, 0, -159), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -158), (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -157), 0), 100000000, 0, -156), 0), 100000000, 0, -155), 0, (("pretyping/glob_ops.mli", 48, 1857, 1857), ("pretyping/glob_ops.mli", 49, 1879, 1939), 0), 0, Tag1 ("Glob_ops", 17)), 0); (("binding_kind_eq", 895), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "binding_kind"), 0, (0)), 100000000, 0, -154), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "binding_kind"), 0, (0)), 100000000, 0, -153), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -152), 0), 100000000, 0, -151), 0), 100000000, 0, -150), 0, (("pretyping/glob_ops.mli", 52, 1975, 1975), ("pretyping/glob_ops.mli", 52, 1975, 2033), 0), 0, Tag1 ("Glob_ops", 18)), 0); (("map_glob_constr_left_to_right", 896), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -149), (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -148), 0), 100000000, 0, -147), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -146), (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -145), 0), 100000000, 0, -144), 0), 100000000, 0, -143), 0, (("pretyping/glob_ops.mli", 55, 2078, 2078), ("pretyping/glob_ops.mli", 56, 2114, 2174), 0), 0, Tag1 ("Glob_ops", 19)), 0); (("warn_variable_collision", 897), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -142)], (0)), 100000000, 0, -141), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -140), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -139), 0), 100000000, 0, -138), 0), 100000000, 0, -137), 0, (("pretyping/glob_ops.mli", 58, 2176, 2176), ("pretyping/glob_ops.mli", 58, 2176, 2232), 0), 0, Tag1 ("Glob_ops", 20)), 0); (("mk_glob_constr_eq", 898), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -136), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -135), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -134), 0), 100000000, 0, -133), 0), 100000000, 0, -132), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -131), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -130), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -129), 0), 100000000, 0, -128), 0), 100000000, 0, -127), 0), 100000000, 0, -126), 0, (("pretyping/glob_ops.mli", 60, 2234, 2234), ("pretyping/glob_ops.mli", 61, 2298, 2334), 0), 0, Tag1 ("Glob_ops", 21)), 0); (("fold_glob_constr", 899), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -121), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -125), ((("a")), 100000000, 0, -121), 0), 100000000, 0, -124), 0), 100000000, 0, -123), (Tag1 (0, ((("a")), 100000000, 0, -121), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -122), ((("a")), 100000000, 0, -121), 0), 100000000, 0, -120), 0), 100000000, 0, -119), 0), 100000000, 0, -118), 0, (("pretyping/glob_ops.mli", 63, 2336, 2336), ("pretyping/glob_ops.mli", 63, 2336, 2411), 0), 0, Tag1 ("Glob_ops", 22)), 0); (("fold_glob_constr_with_binders", 900), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -117), (Tag1 (0, ((("a")), 100000000, 0, -110), ((("a")), 100000000, 0, -110), 0), 100000000, 0, -116), 0), 100000000, 0, -115), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -110), (Tag1 (0, ((("b")), 100000000, 0, -108), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -114), ((("b")), 100000000, 0, -108), 0), 100000000, 0, -113), 0), 100000000, 0, -112), 0), 100000000, 0, -111), (Tag1 (0, ((("a")), 100000000, 0, -110), (Tag1 (0, ((("b")), 100000000, 0, -108), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -109), ((("b")), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), 0), 100000000, 0, -105), 0), 100000000, 0, -104), 0), 100000000, 0, -103), 0, (("pretyping/glob_ops.mli", 64, 2412, 2412), ("pretyping/glob_ops.mli", 64, 2412, 2534), 0), 0, Tag1 ("Glob_ops", 23)), 0); (("iter_glob_constr", 901), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -102), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -101), 0), 100000000, 0, -100), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -99), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -98), 0), 100000000, 0, -97), 0), 100000000, 0, -96), 0, (("pretyping/glob_ops.mli", 65, 2535, 2535), ("pretyping/glob_ops.mli", 65, 2535, 2602), 0), 0, Tag1 ("Glob_ops", 24)), 0); (("occur_glob_constr", 902), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -95), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr_g"), [((("a")), 100000000, 0, -94)], (0)), 100000000, 0, -93), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -92), 0), 100000000, 0, -91), 0), 100000000, 0, -90), 0, (("pretyping/glob_ops.mli", 66, 2603, 2603), ("pretyping/glob_ops.mli", 66, 2603, 2659), 0), 0, Tag1 ("Glob_ops", 25)), 0); (("free_glob_vars", 903), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr_g"), [((("a")), 100000000, 0, -89)], (0)), 100000000, 0, -88), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("pretyping/glob_ops.mli", 67, 2660, 2660), ("pretyping/glob_ops.mli", 67, 2660, 2709), 0), 0, Tag1 ("Glob_ops", 26)), 0); (("bound_glob_vars", 904), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -85), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -84), 0), 100000000, 0, -83), 0, (("pretyping/glob_ops.mli", 68, 2710, 2710), ("pretyping/glob_ops.mli", 68, 2710, 2755), 0), 0, Tag1 ("Glob_ops", 27)), 0); (("loc_of_glob_constr", 905), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr_g"), [((("a")), 100000000, 0, -82)], (0)), 100000000, 0, -81), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -80)], (0)), 100000000, 0, -79), 0), 100000000, 0, -78), 0, (("pretyping/glob_ops.mli", 70, 2771, 2771), ("pretyping/glob_ops.mli", 70, 2771, 2828), 0), 0, Tag1 ("Glob_ops", 28)), 0); (("glob_visible_short_qualid", 906), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr_g"), [((("a")), 100000000, 0, -77)], (0)), 100000000, 0, -76), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), 0, (("pretyping/glob_ops.mli", 71, 2829, 2829), ("pretyping/glob_ops.mli", 71, 2829, 2889), 0), 0, Tag1 ("Glob_ops", 29)), 0); Tag2 (("UnsoundRenaming", 907), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Glob_ops", 30)), 2, 0); (("rename_var", 908), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -72); (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -73)]), 100000000, 0, -71)], (0)), 100000000, 0, -70), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -69), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -68), 0), 100000000, 0, -67), 0), 100000000, 0, -66), 0, (("pretyping/glob_ops.mli", 80, 3201, 3201), ("pretyping/glob_ops.mli", 80, 3201, 3252), 0), 0, Tag1 ("Glob_ops", 31)), 0); (("rename_glob_vars", 909), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -64); (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -65)]), 100000000, 0, -63)], (0)), 100000000, 0, -62), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr_g"), [((("a")), 100000000, 0, -60)], (0)), 100000000, 0, -61), (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr_g"), [((("a")), 100000000, 0, -60)], (0)), 100000000, 0, -59), 0), 100000000, 0, -58), 0), 100000000, 0, -57), 0, (("pretyping/glob_ops.mli", 81, 3253, 3253), ("pretyping/glob_ops.mli", 81, 3253, 3334), 0), 0, Tag1 ("Glob_ops", 32)), 0); (("map_pattern_binders", 910), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -56), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -55), 0), 100000000, 0, -54), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "tomatch_tuples"), 0, (0)), 100000000, 0, -53), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "cases_clauses"), 0, (0)), 100000000, 0, -52), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Glob_term")), "tomatch_tuples"), 0, (0)), 100000000, 0, -50); (Tag3 (Tag1 ((Tag2 ("Glob_term")), "cases_clauses"), 0, (0)), 100000000, 0, -51)]), 100000000, 0, -49), 0), 100000000, 0, -48), 0), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("pretyping/glob_ops.mli", 88, 3618, 3618), ("pretyping/glob_ops.mli", 89, 3666, 3733), 0), 0, Tag1 ("Glob_ops", 33)), 0); (("map_pattern", 911), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -45), (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr"), 0, (0)), 100000000, 0, -44), 0), 100000000, 0, -43), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "tomatch_tuples"), 0, (0)), 100000000, 0, -42), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "cases_clauses"), 0, (0)), 100000000, 0, -41), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Glob_term")), "tomatch_tuples"), 0, (0)), 100000000, 0, -39); (Tag3 (Tag1 ((Tag2 ("Glob_term")), "cases_clauses"), 0, (0)), 100000000, 0, -40)]), 100000000, 0, -38), 0), 100000000, 0, -37), 0), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("pretyping/glob_ops.mli", 95, 3946, 3946), ("pretyping/glob_ops.mli", 96, 3996, 4063), 0), 0, Tag1 ("Glob_ops", 34)), 0); (("cases_pattern_of_glob_constr", 912), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -34), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -33), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr_g"), [((("a")), 100000000, 0, -31)], (0)), 100000000, 0, -32), (Tag3 (Tag1 ((Tag2 ("Glob_term")), "cases_pattern_g"), [((("a")), 100000000, 0, -31)], (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("pretyping/glob_ops.mli", 103, 4248, 4248), ("pretyping/glob_ops.mli", 103, 4248, 4346), 0), 0, Tag1 ("Glob_ops", 35)), 0); (("glob_constr_of_closed_cases_pattern", 913), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -26), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "cases_pattern_g"), [((("a")), 100000000, 0, -24)], (0)), 100000000, 0, -25), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -22); (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr_g"), [((("a")), 100000000, 0, -24)], (0)), 100000000, 0, -23)]), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("pretyping/glob_ops.mli", 105, 4348, 4348), ("pretyping/glob_ops.mli", 105, 4348, 4452), 0), 0, Tag1 ("Glob_ops", 36)), 0); (("glob_constr_of_cases_pattern", 914), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -18), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Glob_term")), "cases_pattern_g"), [((("a")), 100000000, 0, -16)], (0)), 100000000, 0, -17), (Tag3 (Tag1 ((Tag2 ("Glob_term")), "glob_constr_g"), [((("a")), 100000000, 0, -16)], (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("pretyping/glob_ops.mli", 109, 4595, 4595), ("pretyping/glob_ops.mli", 109, 4595, 4683), 0), 0, Tag1 ("Glob_ops", 37)), 0); (("add_patterns_for_params_remove_local_defs", 915), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -12), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Names")), "constructor"), 0, (0)), 100000000, 0, -11), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Glob_term")), "cases_pattern_g"), [((("a")), 100000000, 0, -8)], (0)), 100000000, 0, -10)], (0)), 100000000, 0, -9), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Glob_term")), "cases_pattern_g"), [((("a")), 100000000, 0, -8)], (0)), 100000000, 0, -7)], (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0, (("pretyping/glob_ops.mli", 111, 4685, 4685), ("pretyping/glob_ops.mli", 112, 4763, 4815), 0), 0, Tag1 ("Glob_ops", 38)), 0); (("empty_lvar", 916), ((Tag3 (Tag1 ((Tag2 ("Ltac_pretype")), "ltac_var_map"), 0, (0)), 100000000, 0, -2), 0, (("pretyping/glob_ops.mli", 114, 4817, 4817), ("pretyping/glob_ops.mli", 114, 4817, 4859), 0), 0, Tag1 ("Glob_ops", 39)), 0)], "Glob_ops", [("Glob_ops", ("\153\027O\135\243\224,^\228\1599\245\199\160S|")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("UnivSubst", ("\190qu\031mc\130\181\003G]\132\"\219m)")); ("UnivProblem", ("6'\161\018\181\001.\253\000\141a6\171\1727\155")); ("UnivNames", ("%\151_\209%+JM$n\001\232\194n\178N")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UState", ("SD\203\215|\136\n\251\239\208\148\215C\n\167\005")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Store", ("/dT\252\145\179pq\216{\181\206\190K+U")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("Section", ("\245\207\b\021\142v=\155#w\246}\"4b\006")); ("Safe_typing", (")\250?\164\145\132\241\127\186\152h+\145\"\237l")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Proofview_monad", ("\218\196\189S\147\216\129\221\231\224v\228O\024*\239")); ("Proofview", ("\245\140U\027\236\199\199&\242\156\199YG\250tA")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("Nativevalues", ("8:\007\025e\226c,\001\171\146#l\210\171\152")); ("Nativelib", ("V\239\205Y1\147E:,\176\196Hy\1483|")); ("Nativecode", ("\190\185\255\006m\012\210\163\138Rz\247\15283\183")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Namegen", ("\187\222\224T\255\020\1808-\212*\164\131\177\157x")); ("Monad", ("\244\171T\157\194p\187\160\149\195{\132\222\020\253\148")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Ltac_pretype", ("\224\"\167\018i:U\172>\188\128$\r\252\020T")); ("Logic_monad", ("\130\157\160Q\163vQ\137\184\2242\209\128\024\220i")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hook", ("\183\194\223\003\155\169',\187\240a;E\b\1396")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Glob_term", ("\165=a\227\160\153.\021_$\232\209T\236\153O")); ("Genlambda", ("\170}\024\241\141\222\136S\169\219\2212i\134KI")); ("Geninterp", ("2S\151\191\189\159\004\188;\224d\199|U\004\028")); ("Genarg", ("\1434\015\001\152\196\005s\156\136\195\185\247\b3\t")); ("Ftactic", ("K\172\205\128\241\162\160\201\202\1561o\180L\206:")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evd", ("\211\205p\193\216\129r\006\239oN\142ar\196\175")); ("Evar_kinds", ("\023L\186\132\218}\254\221\185\198\220\200h\003{\021")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("EConstr", ("\201aW\156\157;N\004\201V\208\006L\166\211)")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("DAst", ("\224/\200)\007\184ni\134\b\139\204\241\005w\212")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conversion", ("\158\150&\195M\tv\127|\029\158RRK\211A")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CDebug", ("^4\210p7\239!3\138\138\213?\239`\250\157")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
val empty_lvar : Ltac_pretype.ltac_var_map
