type param = {
  policy : Fault.Policy.t;
  epsilon_dependencies : bool;
  transparent_extension_nodes : bool;
  transparent_aliases : bool;
}
type answer_type = Namespace of Module.dict | Mty of Module.sty
type answer = { name : Name.t; kind : answer_type; }
val pp_answer : answer Pp.t
type 'a query_result = { main : 'a; deps : Deps.t; msgs : Fault.t list; }
val gen_include :
  Fault.Policy.t ->
  Uloc.t -> Id.seed -> Module.level -> Module.Partial.t -> Summary.t
val open_ : Fault.Policy.t -> Uloc.t -> Module.Partial.t -> Summary.t
val open_diverge : Fault.Policy.t -> Uloc.t -> answer -> Summary.t
val apply_arg :
  Fault.Policy.t ->
  Uloc.t -> f:Module.Partial.t -> arg:Module.Partial.t -> Module.Partial.t
val with_deletions : Paths.S.set -> Module.signature -> Module.signature
("DEBUG:rule", [Tag1 (("param", 524), (0, 0, [[(("policy", 298), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Fault")), "Policy"), "t"), 0, (0)), 100000000, 0, -58), (("lib/transforms.mli", 3, 16, 18), ("lib/transforms.mli", 3, 16, 41), 0), 0, Tag1 ("Transforms", 1)); (("epsilon_dependencies", 299), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -59), (("lib/transforms.mli", 4, 42, 44), ("lib/transforms.mli", 4, 42, 71), 0), 0, Tag1 ("Transforms", 2)); (("transparent_extension_nodes", 300), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -60), (("lib/transforms.mli", 5, 72, 74), ("lib/transforms.mli", 5, 72, 108), 0), 0, Tag1 ("Transforms", 3)); (("transparent_aliases", 301), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -61), (("lib/transforms.mli", 6, 109, 111), ("lib/transforms.mli", 6, 109, 136), 0), 0, Tag1 ("Transforms", 4))]], 1, 0, 0, 0, 0, 0, (("lib/transforms.mli", 2, 1, 1), ("lib/transforms.mli", 7, 137, 138), 0), 0, 0, 0, Tag1 ("Transforms", 0)), 1, 0); Tag1 (("answer_type", 525), (0, 0, Tag1 ([(("Namespace", 303), ([(Tag3 (Tag1 ((Tag2 ("Module")), "dict"), 0, (0)), 100000000, 0, -56)]), 0, (("lib/transforms.mli", 11, 160, 162), ("lib/transforms.mli", 11, 160, 188), 0), 0, Tag1 ("Transforms", 8)); (("Mty", 347), ([(Tag3 (Tag1 ((Tag2 ("Module")), "sty"), 0, (0)), 100000000, 0, -57)]), 0, (("lib/transforms.mli", 12, 189, 191), ("lib/transforms.mli", 12, 189, 210), 0), 0, Tag1 ("Transforms", 9))], 0), 1, 0, 0, 0, 0, 0, (("lib/transforms.mli", 10, 141, 141), ("lib/transforms.mli", 12, 189, 210), 0), 0, 0, 0, Tag1 ("Transforms", 5)), 1, 0); Tag1 (("answer", 526), (0, 0, [[(("name", 403), 0, (Tag3 (Tag1 ((Tag2 ("Name")), "t"), 0, (0)), 100000000, 0, -54), (("lib/transforms.mli", 14, 212, 228), ("lib/transforms.mli", 14, 212, 241), 0), 0, Tag1 ("Transforms", 11)); (("kind", 404), 0, (Tag3 ((("answer_type", 525)), 0, (0)), 100000000, 0, -55), (("lib/transforms.mli", 14, 212, 242), ("lib/transforms.mli", 14, 212, 259), 0), 0, Tag1 ("Transforms", 12))]], 1, 0, 0, 0, 0, 0, (("lib/transforms.mli", 14, 212, 212), ("lib/transforms.mli", 14, 212, 261), 0), 0, 0, 0, Tag1 ("Transforms", 10)), 1, 0); (("pp_answer", 527), ((Tag3 (Tag1 ((Tag2 ("Pp")), "t"), [(Tag3 ((("answer", 526)), 0, (0)), 100000000, 0, -53)], (0)), 100000000, 0, -52), 0, (("lib/transforms.mli", 15, 262, 262), ("lib/transforms.mli", 15, 262, 288), 0), 0, Tag1 ("Transforms", 13)), 0); Tag1 (("query_result", 528), ([((("a")), 100000000, 0, -48)], 1, [[(("main", 430), 0, ((("a")), 100000000, 0, -48), (("lib/transforms.mli", 18, 313, 317), ("lib/transforms.mli", 18, 313, 325), 0), 0, Tag1 ("Transforms", 15)); (("deps", 448), 0, (Tag3 (Tag1 ((Tag2 ("Deps")), "t"), 0, (0)), 100000000, 0, -49), (("lib/transforms.mli", 18, 313, 326), ("lib/transforms.mli", 18, 313, 339), 0), 0, Tag1 ("Transforms", 16)); (("msgs", 449), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("Fault")), "t"), 0, (0)), 100000000, 0, -51)], (0)), 100000000, 0, -50), (("lib/transforms.mli", 18, 313, 340), ("lib/transforms.mli", 18, 313, 358), 0), 0, Tag1 ("Transforms", 17))]], 1, 0, [25], [0], 0, 0, (("lib/transforms.mli", 17, 290, 290), ("lib/transforms.mli", 18, 313, 360), 0), 0, 0, 0, Tag1 ("Transforms", 14)), 1, 0); (("gen_include", 529), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Fault")), "Policy"), "t"), 0, (0)), 100000000, 0, -47), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Uloc")), "t"), 0, (0)), 100000000, 0, -46), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Id")), "seed"), 0, (0)), 100000000, 0, -45), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Module")), "level"), 0, (0)), 100000000, 0, -44), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Module")), "Partial"), "t"), 0, (0)), 100000000, 0, -43), (Tag3 (Tag1 ((Tag2 ("Summary")), "t"), 0, (0)), 100000000, 0, -42), 0), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0), 100000000, 0, -37), 0, (("lib/transforms.mli", 20, 362, 362), ("lib/transforms.mli", 21, 407, 465), 0), 0, Tag1 ("Transforms", 18)), 0); (("open_", 530), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Fault")), "Policy"), "t"), 0, (0)), 100000000, 0, -36), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Uloc")), "t"), 0, (0)), 100000000, 0, -35), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Module")), "Partial"), "t"), 0, (0)), 100000000, 0, -34), (Tag3 (Tag1 ((Tag2 ("Summary")), "t"), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("lib/transforms.mli", 23, 467, 467), ("lib/transforms.mli", 24, 506, 537), 0), 0, Tag1 ("Transforms", 19)), 0); (("open_diverge", 531), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Fault")), "Policy"), "t"), 0, (0)), 100000000, 0, -29), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Uloc")), "t"), 0, (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 ((("answer", 526)), 0, (0)), 100000000, 0, -27), (Tag3 (Tag1 ((Tag2 ("Summary")), "t"), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("lib/transforms.mli", 27, 540, 540), ("lib/transforms.mli", 28, 586, 607), 0), 0, Tag1 ("Transforms", 20)), 0); (("apply_arg", 532), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Fault")), "Policy"), "t"), 0, (0)), 100000000, 0, -22), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Uloc")), "t"), 0, (0)), 100000000, 0, -21), (Tag1 (("f"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Module")), "Partial"), "t"), 0, (0)), 100000000, 0, -20), (Tag1 (("arg"), (Tag3 (Tag1 (Tag1 ((Tag2 ("Module")), "Partial"), "t"), 0, (0)), 100000000, 0, -19), (Tag3 (Tag1 (Tag1 ((Tag2 ("Module")), "Partial"), "t"), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("lib/transforms.mli", 31, 610, 610), ("lib/transforms.mli", 33, 698, 719), 0), 0, Tag1 ("Transforms", 21)), 0); (("with_deletions", 533), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Paths")), "S"), "set"), 0, (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Module")), "signature"), 0, (0)), 100000000, 0, -12), (Tag3 (Tag1 ((Tag2 ("Module")), "signature"), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("lib/transforms.mli", 36, 722, 722), ("lib/transforms.mli", 36, 722, 793), 0), 0, Tag1 ("Transforms", 22)), 0); (("bind_summary", 534), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Module")), "level"), 0, (0)), 100000000, 0, -8), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Name")), "t"), 0, (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Module")), "Partial"), "t"), 0, (0)), 100000000, 0, -6), (Tag3 (Tag1 ((Tag2 ("Summary")), "t"), 0, (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("lib/transforms.mli", 38, 795, 795), ("lib/transforms.mli", 38, 795, 868), 0), 0, Tag1 ("Transforms", 23)), 0)], "Transforms", [("Transforms", ("\247\177\132M&\202\192\164\018Ng6Wu\007\018")); ("Unitname", ("\155n\201\211\249\229\028$\220J\172\018<\249\171\158")); ("Uloc", ("\172\208h 6@\178[\156\249\206\172%\133\167\239")); ("Support", ("YA;\029\006a\255\202R\137\181\133\184\209)\005")); ("Summary", ("\243\022s.\187>\205\012\161)\1369wh\247p")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Schematic", ("\180\179\011\178\017I\241^\235\149h\161k\b\209\142")); ("Pp", ("\167zCQ\134\167\215\2517\247\158\219\250\223.\197")); ("Pkg", ("SneaP\023\210\210\240\218\128bA\te\239")); ("Paths", ("\000\152\242H\139l\222\245\245Ndb\202P^\175")); ("Namespaced", ("%\208\253;3\161W$\236\1838K\195z\1493")); ("Name", ("4? \167\131n\184\000\214\031\017\027\153\002]^")); ("Module", ("2_s\200\188\137\247\158>\168\195\023\195\n\011V")); ("Modname", ("v\160\183\003\212\232\177\007\228-\002\145i\230\255\248")); ("Loc", ("ax\213\152\006\175?\212%\0014\238\021S\218=")); ("Id", ("w\207`(\179n\181\161\155\252\243\195\006\139NO")); ("Fault", ("\232\144\144(K\139\181-h!\017\212@?\127\199")); ("Deps", ("%\164\252&\165z\218\221\023\182\235\223+\147\145\195")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val bind_summary : Module.level -> Name.t -> Module.Partial.t -> Summary.t
