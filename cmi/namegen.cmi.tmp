type intro_pattern_naming_expr =
    IntroIdentifier of Names.Id.t
  | IntroFresh of Names.Id.t
  | IntroAnonymous
val intro_pattern_naming_eq :
  intro_pattern_naming_expr -> intro_pattern_naming_expr -> bool
val default_prop_ident : Names.Id.t
val default_small_ident : Names.Id.t
val default_type_ident : Names.Id.t
val default_non_dependent_ident : Names.Id.t
val default_dependent_ident : Names.Id.t
val lowercase_first_char : Names.Id.t -> string
val sort_hdchar : Sorts.t -> string
val hdchar : Environ.env -> Evd.evar_map -> EConstr.types -> string
val id_of_name_using_hdchar :
  Environ.env -> Evd.evar_map -> EConstr.types -> Names.Name.t -> Names.Id.t
val named_hd :
  Environ.env ->
  Evd.evar_map -> EConstr.types -> Names.Name.t -> Names.Name.t
val head_name : Evd.evar_map -> EConstr.types -> Names.Id.t option
val mkProd_name :
  Environ.env ->
  Evd.evar_map ->
  Names.Name.t Context.binder_annot * EConstr.types * EConstr.types ->
  EConstr.types
val mkLambda_name :
  Environ.env ->
  Evd.evar_map ->
  Names.Name.t Context.binder_annot * EConstr.types * EConstr.constr ->
  EConstr.constr
val prod_name :
  Environ.env ->
  Evd.evar_map ->
  Names.Name.t Context.binder_annot * EConstr.types * EConstr.types ->
  EConstr.types
val lambda_name :
  Environ.env ->
  Evd.evar_map ->
  Names.Name.t Context.binder_annot * EConstr.types * EConstr.constr ->
  EConstr.constr
val prod_create :
  Environ.env ->
  Evd.evar_map ->
  Sorts.relevance * EConstr.types * EConstr.types -> EConstr.constr
val lambda_create :
  Environ.env ->
  Evd.evar_map ->
  Sorts.relevance * EConstr.types * EConstr.constr -> EConstr.constr
val name_assumption :
  Environ.env ->
  Evd.evar_map -> EConstr.rel_declaration -> EConstr.rel_declaration
val name_context :
  Environ.env -> Evd.evar_map -> EConstr.rel_context -> EConstr.rel_context
val mkProd_or_LetIn_name :
  Environ.env ->
  Evd.evar_map -> EConstr.types -> EConstr.rel_declaration -> EConstr.types
val mkLambda_or_LetIn_name :
  Environ.env ->
  Evd.evar_map -> EConstr.constr -> EConstr.rel_declaration -> EConstr.constr
val it_mkProd_or_LetIn_name :
  Environ.env ->
  Evd.evar_map -> EConstr.types -> EConstr.rel_context -> EConstr.types
val it_mkLambda_or_LetIn_name :
  Environ.env ->
  Evd.evar_map -> EConstr.constr -> EConstr.rel_context -> EConstr.constr
val next_ident_away_from : Names.Id.t -> (Names.Id.t -> bool) -> Names.Id.t
val next_ident_away : Names.Id.t -> Names.Id.Set.t -> Names.Id.t
val next_ident_away_in_goal :
  Environ.env -> Names.Id.t -> Names.Id.Set.t -> Names.Id.t
val next_global_ident_away : Names.Id.t -> Names.Id.Set.t -> Names.Id.t
val next_name_away : Names.Name.t -> Names.Id.Set.t -> Names.Id.t
val next_name_away_with_default :
  string -> Names.Name.t -> Names.Id.Set.t -> Names.Id.t
val next_name_away_with_default_using_types :
  string -> Names.Name.t -> Names.Id.Set.t -> EConstr.types -> Names.Id.t
val set_reserved_typed_name : (EConstr.types -> Names.Name.t) -> unit
type renaming_flags =
    RenamingForCasesPattern of (Names.Name.t list * EConstr.constr)
  | RenamingForGoal
  | RenamingElsewhereFor of (Names.Name.t list * EConstr.constr)
val make_all_rel_context_name_different :
  Environ.env ->
  Evd.evar_map -> EConstr.rel_context -> Environ.env * EConstr.rel_context
val make_all_name_different : Environ.env -> Evd.evar_map -> Environ.env
val compute_displayed_name_in :
  Environ.env ->
  Evd.evar_map ->
  renaming_flags ->
  Names.Id.Set.t ->
  Names.Name.t -> EConstr.constr -> Names.Name.t * Names.Id.Set.t
val compute_displayed_let_name_in :
  Environ.env ->
  Evd.evar_map ->
  renaming_flags ->
  Names.Id.Set.t -> Names.Name.t -> Names.Name.t * Names.Id.Set.t
val compute_displayed_name_in_gen :
  (Evd.evar_map -> int -> 'a -> bool) ->
  Environ.env ->
  Evd.evar_map ->
  ("DEBUG:rule", [Tag1 (("intro_pattern_naming_expr", 1065), (0, 0, Tag1 ([(("IntroIdentifier", 906), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -283)]), 0, (("engine/namegen.mli", 20, 868, 870), ("engine/namegen.mli", 20, 868, 895), 0), 0, Tag1 ("Namegen", 1)); (("IntroFresh", 923), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -284)]), 0, (("engine/namegen.mli", 21, 896, 898), ("engine/namegen.mli", 21, 896, 918), 0), 0, Tag1 ("Namegen", 2)); (("IntroAnonymous", 924), (0), 0, (("engine/namegen.mli", 22, 919, 921), ("engine/namegen.mli", 22, 919, 937), 0), 0, Tag1 ("Namegen", 3))], 0), 1, 0, 0, 0, 0, 0, (("engine/namegen.mli", 19, 835, 835), ("engine/namegen.mli", 22, 919, 937), 0), 0, 0, 0, Tag1 ("Namegen", 0)), 1, 0); (("intro_pattern_naming_eq", 1066), ((Tag1 (0, (Tag3 ((("intro_pattern_naming_expr", 1065)), 0, (0)), 100000000, 0, -282), (Tag1 (0, (Tag3 ((("intro_pattern_naming_expr", 1065)), 0, (0)), 100000000, 0, -281), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -280), 0), 100000000, 0, -279), 0), 100000000, 0, -278), 0, (("engine/namegen.mli", 25, 983, 983), ("engine/namegen.mli", 26, 1013, 1077), 0), 0, Tag1 ("Namegen", 4)), 0); (("default_prop_ident", 1067), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -277), 0, (("engine/namegen.mli", 31, 1184, 1184), ("engine/namegen.mli", 31, 1184, 1213), 0), 0, Tag1 ("Namegen", 5)), 0); (("default_small_ident", 1068), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -276), 0, (("engine/namegen.mli", 32, 1233, 1233), ("engine/namegen.mli", 32, 1233, 1263), 0), 0, Tag1 ("Namegen", 6)), 0); (("default_type_ident", 1069), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -275), 0, (("engine/namegen.mli", 33, 1282, 1282), ("engine/namegen.mli", 33, 1282, 1311), 0), 0, Tag1 ("Namegen", 7)), 0); (("default_non_dependent_ident", 1070), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -274), 0, (("engine/namegen.mli", 34, 1331, 1331), ("engine/namegen.mli", 34, 1331, 1369), 0), 0, Tag1 ("Namegen", 8)), 0); (("default_dependent_ident", 1071), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -273), 0, (("engine/namegen.mli", 35, 1380, 1380), ("engine/namegen.mli", 35, 1380, 1414), 0), 0, Tag1 ("Namegen", 9)), 0); (("lowercase_first_char", 1072), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -272), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -271), 0), 100000000, 0, -270), 0, (("engine/namegen.mli", 40, 1553, 1553), ("engine/namegen.mli", 40, 1553, 1594), 0), 0, Tag1 ("Namegen", 10)), 0); (("sort_hdchar", 1073), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Sorts")), "t"), 0, (0)), 100000000, 0, -269), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -268), 0), 100000000, 0, -267), 0, (("engine/namegen.mli", 41, 1595, 1595), ("engine/namegen.mli", 41, 1595, 1630), 0), 0, Tag1 ("Namegen", 11)), 0); (("hdchar", 1074), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -266), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -265), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -264), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -263), 0), 100000000, 0, -262), 0), 100000000, 0, -261), 0), 100000000, 0, -260), 0, (("engine/namegen.mli", 42, 1631, 1631), ("engine/namegen.mli", 42, 1631, 1678), 0), 0, Tag1 ("Namegen", 12)), 0); (("id_of_name_using_hdchar", 1075), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -259), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -258), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -257), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -256), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -255), 0), 100000000, 0, -254), 0), 100000000, 0, -253), 0), 100000000, 0, -252), 0), 100000000, 0, -251), 0, (("engine/namegen.mli", 43, 1679, 1679), ("engine/namegen.mli", 43, 1679, 1751), 0), 0, Tag1 ("Namegen", 13)), 0); (("named_hd", 1076), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -250), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -249), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -248), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -247), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -246), 0), 100000000, 0, -245), 0), 100000000, 0, -244), 0), 100000000, 0, -243), 0), 100000000, 0, -242), 0, (("engine/namegen.mli", 44, 1752, 1752), ("engine/namegen.mli", 44, 1752, 1811), 0), 0, Tag1 ("Namegen", 14)), 0); (("head_name", 1077), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -241), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -240), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -239)], (0)), 100000000, 0, -238), 0), 100000000, 0, -237), 0), 100000000, 0, -236), 0, (("engine/namegen.mli", 45, 1812, 1812), ("engine/namegen.mli", 45, 1812, 1860), 0), 0, Tag1 ("Namegen", 15)), 0); (("mkProd_name", 1078), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -235), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -234), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -231)], (0)), 100000000, 0, -230); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -232); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -233)]), 100000000, 0, -229), (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -228), 0), 100000000, 0, -227), 0), 100000000, 0, -226), 0), 100000000, 0, -225), 0, (("engine/namegen.mli", 47, 1862, 1862), ("engine/namegen.mli", 47, 1862, 1951), 0), 0, Tag1 ("Namegen", 16)), 0); (("mkLambda_name", 1079), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -224), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -223), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -220)], (0)), 100000000, 0, -219); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -221); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -222)]), 100000000, 0, -218), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -217), 0), 100000000, 0, -216), 0), 100000000, 0, -215), 0), 100000000, 0, -214), 0, (("engine/namegen.mli", 48, 1952, 1952), ("engine/namegen.mli", 48, 1952, 2045), 0), 0, Tag1 ("Namegen", 17)), 0); (("prod_name", 1080), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -213), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -212), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -209)], (0)), 100000000, 0, -208); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -210); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -211)]), 100000000, 0, -207), (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -206), 0), 100000000, 0, -205), 0), 100000000, 0, -204), 0), 100000000, 0, -203), 0, (("engine/namegen.mli", 51, 2111, 2111), ("engine/namegen.mli", 51, 2111, 2198), 0), 0, Tag1 ("Namegen", 18)), 0); (("lambda_name", 1081), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -202), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -201), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -198)], (0)), 100000000, 0, -197); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -199); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -200)]), 100000000, 0, -196), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -195), 0), 100000000, 0, -194), 0), 100000000, 0, -193), 0), 100000000, 0, -192), 0, (("engine/namegen.mli", 52, 2199, 2199), ("engine/namegen.mli", 52, 2199, 2290), 0), 0, Tag1 ("Namegen", 19)), 0); (("prod_create", 1082), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -191), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -190), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Sorts")), "relevance"), 0, (0)), 100000000, 0, -187); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -188); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -189)]), 100000000, 0, -186), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -185), 0), 100000000, 0, -184), 0), 100000000, 0, -183), 0), 100000000, 0, -182), 0, (("engine/namegen.mli", 54, 2292, 2292), ("engine/namegen.mli", 54, 2292, 2370), 0), 0, Tag1 ("Namegen", 20)), 0); (("lambda_create", 1083), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -181), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -180), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Sorts")), "relevance"), 0, (0)), 100000000, 0, -177); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -178); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -179)]), 100000000, 0, -176), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -175), 0), 100000000, 0, -174), 0), 100000000, 0, -173), 0), 100000000, 0, -172), 0, (("engine/namegen.mli", 55, 2371, 2371), ("engine/namegen.mli", 55, 2371, 2452), 0), 0, Tag1 ("Namegen", 21)), 0); (("name_assumption", 1084), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -171), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -170), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "rel_declaration"), 0, (0)), 100000000, 0, -169), (Tag3 (Tag1 ((Tag2 ("EConstr")), "rel_declaration"), 0, (0)), 100000000, 0, -168), 0), 100000000, 0, -167), 0), 100000000, 0, -166), 0), 100000000, 0, -165), 0, (("engine/namegen.mli", 56, 2453, 2453), ("engine/namegen.mli", 56, 2453, 2528), 0), 0, Tag1 ("Namegen", 22)), 0); (("name_context", 1085), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -164), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -163), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "rel_context"), 0, (0)), 100000000, 0, -162), (Tag3 (Tag1 ((Tag2 ("EConstr")), "rel_context"), 0, (0)), 100000000, 0, -161), 0), 100000000, 0, -160), 0), 100000000, 0, -159), 0), 100000000, 0, -158), 0, (("engine/namegen.mli", 57, 2529, 2529), ("engine/namegen.mli", 57, 2529, 2593), 0), 0, Tag1 ("Namegen", 23)), 0); (("mkProd_or_LetIn_name", 1086), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -157), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -156), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -155), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "rel_declaration"), 0, (0)), 100000000, 0, -154), (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -153), 0), 100000000, 0, -152), 0), 100000000, 0, -151), 0), 100000000, 0, -150), 0), 100000000, 0, -149), 0, (("engine/namegen.mli", 59, 2595, 2595), ("engine/namegen.mli", 59, 2595, 2674), 0), 0, Tag1 ("Namegen", 24)), 0); (("mkLambda_or_LetIn_name", 1087), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -148), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -147), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -146), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "rel_declaration"), 0, (0)), 100000000, 0, -145), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -144), 0), 100000000, 0, -143), 0), 100000000, 0, -142), 0), 100000000, 0, -141), 0), 100000000, 0, -140), 0, (("engine/namegen.mli", 60, 2675, 2675), ("engine/namegen.mli", 60, 2675, 2758), 0), 0, Tag1 ("Namegen", 25)), 0); (("it_mkProd_or_LetIn_name", 1088), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -139), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -138), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -137), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "rel_context"), 0, (0)), 100000000, 0, -136), (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -135), 0), 100000000, 0, -134), 0), 100000000, 0, -133), 0), 100000000, 0, -132), 0), 100000000, 0, -131), 0, (("engine/namegen.mli", 61, 2759, 2759), ("engine/namegen.mli", 61, 2759, 2839), 0), 0, Tag1 ("Namegen", 26)), 0); (("it_mkLambda_or_LetIn_name", 1089), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -130), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -129), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -128), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "rel_context"), 0, (0)), 100000000, 0, -127), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -126), 0), 100000000, 0, -125), 0), 100000000, 0, -124), 0), 100000000, 0, -123), 0), 100000000, 0, -122), 0, (("engine/namegen.mli", 62, 2840, 2840), ("engine/namegen.mli", 62, 2840, 2922), 0), 0, Tag1 ("Namegen", 27)), 0); (("next_ident_away_from", 1090), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -121), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -120), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -119), 0), 100000000, 0, -118), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -117), 0), 100000000, 0, -116), 0), 100000000, 0, -115), 0, (("engine/namegen.mli", 68, 3074, 3074), ("engine/namegen.mli", 68, 3074, 3131), 0), 0, Tag1 ("Namegen", 28)), 0); (("next_ident_away", 1091), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -114), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -113), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -112), 0), 100000000, 0, -111), 0), 100000000, 0, -110), 0, (("engine/namegen.mli", 86, 4030, 4030), ("engine/namegen.mli", 86, 4030, 4076), 0), 0, Tag1 ("Namegen", 29)), 0); (("next_ident_away_in_goal", 1092), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -109), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -108), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -107), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -106), 0), 100000000, 0, -105), 0), 100000000, 0, -104), 0), 100000000, 0, -103), 0, (("engine/namegen.mli", 89, 4143, 4143), ("engine/namegen.mli", 89, 4143, 4212), 0), 0, Tag1 ("Namegen", 30)), 0); (("next_global_ident_away", 1093), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -102), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -101), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -100), 0), 100000000, 0, -99), 0), 100000000, 0, -98), 0, (("engine/namegen.mli", 93, 4338, 4338), ("engine/namegen.mli", 93, 4338, 4391), 0), 0, Tag1 ("Namegen", 31)), 0); (("next_name_away", 1094), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -97), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -96), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -95), 0), 100000000, 0, -94), 0), 100000000, 0, -93), 0, (("engine/namegen.mli", 96, 4441, 4441), ("engine/namegen.mli", 96, 4441, 4489), 0), 0, Tag1 ("Namegen", 32)), 0); (("next_name_away_with_default", 1095), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -92), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -91), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -90), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -89), 0), 100000000, 0, -88), 0), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("engine/namegen.mli", 98, 4491, 4491), ("engine/namegen.mli", 98, 4491, 4561), 0), 0, Tag1 ("Namegen", 33)), 0); (("next_name_away_with_default_using_types", 1096), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -85), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -84), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -83), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -82), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0), 100000000, 0, -79), 0), 100000000, 0, -78), 0), 100000000, 0, -77), 0, (("engine/namegen.mli", 100, 4563, 4563), ("engine/namegen.mli", 101, 4629, 4656), 0), 0, Tag1 ("Namegen", 34)), 0); (("set_reserved_typed_name", 1097), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -76), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -73), 0), 100000000, 0, -72), 0, (("engine/namegen.mli", 103, 4658, 4658), ("engine/namegen.mli", 103, 4658, 4713), 0), 0, Tag1 ("Namegen", 35)), 0); Tag1 (("renaming_flags", 1098), (0, 0, Tag1 ([(("RenamingForCasesPattern", 1057), ([(Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -66)], (0)), 100000000, 0, -65); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -67)]), 100000000, 0, -64)]), 0, (("engine/namegen.mli", 109, 4851, 4853), ("engine/namegen.mli", 109, 4851, 4904), 0), 0, Tag1 ("Namegen", 37)); (("RenamingForGoal", 1058), (0), 0, (("engine/namegen.mli", 110, 4943, 4945), ("engine/namegen.mli", 110, 4943, 4962), 0), 0, Tag1 ("Namegen", 38)); (("RenamingElsewhereFor", 1059), ([(Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -70)], (0)), 100000000, 0, -69); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -71)]), 100000000, 0, -68)]), 0, (("engine/namegen.mli", 111, 5002, 5004), ("engine/namegen.mli", 111, 5002, 5052), 0), 0, Tag1 ("Namegen", 39))], 0), 1, 0, 0, 0, 0, 0, (("engine/namegen.mli", 108, 4829, 4829), ("engine/namegen.mli", 111, 5002, 5052), 0), 0, 0, 0, Tag1 ("Namegen", 36)), 1, 0); (("make_all_rel_context_name_different", 1099), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -63), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -62), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "rel_context"), 0, (0)), 100000000, 0, -61), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -59); (Tag3 (Tag1 ((Tag2 ("EConstr")), "rel_context"), 0, (0)), 100000000, 0, -60)]), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), 0), 100000000, 0, -55), 0, (("engine/namegen.mli", 113, 5054, 5054), ("engine/namegen.mli", 113, 5054, 5147), 0), 0, Tag1 ("Namegen", 40)), 0); (("make_all_name_different", 1100), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -54), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -53), (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0), 100000000, 0, -50), 0, (("engine/namegen.mli", 114, 5148, 5148), ("engine/namegen.mli", 114, 5148, 5200), 0), 0, Tag1 ("Namegen", 41)), 0); (("compute_displayed_name_in", 1101), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -49), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -48), (Tag1 (0, (Tag3 ((("renaming_flags", 1098)), 0, (0)), 100000000, 0, -47), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -46), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -45), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -44), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -42); (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -43)]), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0), 100000000, 0, -37), 0), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("engine/namegen.mli", 116, 5202, 5202), ("engine/namegen.mli", 117, 5234, 5330), 0), 0, Tag1 ("Namegen", 42)), 0); (("compute_displayed_let_name_in", 1102), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -34), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -33), (Tag1 (0, (Tag3 ((("renaming_flags", 1098)), 0, (0)), 100000000, 0, -32), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -31), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -30), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -28); (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -29)]), 100000000, 0, -27), 0), 100000000, 0, -26), 0), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("engine/namegen.mli", 118, 5331, 5331), ("engine/namegen.mli", 119, 5367, 5453), 0), 0, Tag1 ("Namegen", 43)), 0); (("compute_displayed_name_in_gen", 1103), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -21), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -20), (Tag1 (0, ((("a")), 100000000, 0, -11), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -15), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -14), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -12), (Tag1 (0, ((("a")), 100000000, 0, -11), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -9); (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "Set"), "t"), 0, (0)), 100000000, 0, -10)]), 100000000, 0, -8), 0), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("engine/namegen.mli", 122, 5512, 5512), ("engine/namegen.mli", 124, 5585, 5659), 0), 0, Tag1 ("Namegen", 44)), 0)], "Namegen", [("Namegen", ("\187\222\224T\255\020\1808-\212*\164\131\177\157x")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("UnivSubst", ("\190qu\031mc\130\181\003G]\132\"\219m)")); ("UnivProblem", ("6'\161\018\181\001.\253\000\141a6\171\1727\155")); ("UnivNames", ("%\151_\209%+JM$n\001\232\194n\178N")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UState", ("SD\203\215|\136\n\251\239\208\148\215C\n\167\005")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Store", ("/dT\252\145\179pq\216{\181\206\190K+U")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("Section", ("\245\207\b\021\142v=\155#w\246}\"4b\006")); ("Safe_typing", (")\250?\164\145\132\241\127\186\152h+\145\"\237l")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("Nativevalues", ("8:\007\025e\226c,\001\171\146#l\210\171\152")); ("Nativelib", ("V\239\205Y1\147E:,\176\196Hy\1483|")); ("Nativecode", ("\190\185\255\006m\012\210\163\138Rz\247\15283\183")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Monad", ("\244\171T\157\194p\187\160\149\195{\132\222\020\253\148")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hook", ("\183\194\223\003\155\169',\187\240a;E\b\1396")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Genlambda", ("\170}\024\241\141\222\136S\169\219\2212i\134KI")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evd", ("\211\205p\193\216\129r\006\239oN\142ar\196\175")); ("Evar_kinds", ("\023L\186\132\218}\254\221\185\198\220\200h\003{\021")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("EConstr", ("\201aW\156\157;N\004\201V\208\006L\166\211)")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conversion", ("\158\150&\195M\tv\127|\029\158RRK\211A")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CDebug", ("^4\210p7\239!3\138\138\213?\239`\250\157")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
Names.Id.Set.t -> Names.Name.t -> 'a -> Names.Name.t * Names.Id.Set.t
