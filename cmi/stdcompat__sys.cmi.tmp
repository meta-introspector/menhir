type backend_type = Sys.backend_type = Native | Bytecode | Other of string
type signal_behavior =
  Sys.signal_behavior =
    Signal_default
  | Signal_ignore
  | Signal_handle of (int -> unit)
exception Break
type extra_prefix = Sys.extra_prefix = Plus | Tilde
type extra_info = extra_prefix * string
type ocaml_release_info =
  Sys.ocaml_release_info = {
  major : int;
  minor : int;
  patchlevel : int;
  extra : extra_info option;
}
module Immediate64 = Sys.Immediate64
val development_version : bool
val ocaml_release : ocaml_release_info
external mkdir : string -> int -> unit = "caml_sys_mkdir"
external rmdir : string -> unit = "caml_sys_rmdir"
val max_floatarray_length : int
val getenv_opt : string -> string option
val backend_type : backend_type
val int_size : int
external runtime_variant : unit -> string = "caml_runtime_variant"
external runtime_parameters : unit -> string = "caml_runtime_parameters"
val sigbus : int
val sigpoll : int
val sigsys : int
val sigtrap : int
val sigurg : int
val sigxcpu : int
val sigxfsz : int
val enable_runtime_warnings : bool -> unit
val runtime_warnings_enabled : unit -> bool
external opaque_identity : 'a -> 'a = "%opaque"
val unix : bool
val win32 : bool
val cygwin : bool
val big_endian : bool
external is_directory : string -> bool = "caml_sys_is_directory"
external argv : string array = "%sys_argv"
val executable_name : string
external file_exists : string -> bool = "caml_sys_file_exists"
external remove : string -> unit = "caml_sys_remove"
external rename : string -> string -> unit = "caml_sys_rename"
external getenv : string -> string = "caml_sys_getenv"
external command : string -> int = "caml_sys_system_command"
external time : unit -> (float [@unboxed]) = "caml_sys_time"
  "caml_sys_time_unboxed" [@@noalloc]
external chdir : string -> unit = "caml_sys_chdir"
external getcwd : unit -> string = "caml_sys_getcwd"
external readdir : string -> string array = "caml_sys_read_directory"
val interactive : bool ref
val os_type : string
val word_size : int
val max_string_length : int
val max_array_length : int
external signal : int -> signal_behavior -> signal_behavior
  = "caml_install_signal_handler"
val set_signal : int -> signal_behavior -> unit
val sigabrt : int
val sigalrm : int
val sigfpe : int
val sighup : int
val sigill : int
val sigint : int
val sigkill : int
val sigpipe : int
val sigquit : int
val sigsegv : int
val sigterm : int
val sigusr1 : int
val sigusr2 : int
val sigchld : int
val sigcont : int
val sigstop : int
val sigtstp : int
val sigttin : int
val sigttou : int
val sigvtalrm : int
val sigprof : int
val catch_break : bool -> unit("DEBUG:rule", [Tag1 (("backend_type", 564), (0, 0, Tag1 ([(("Native", 270), (0), 0, (("stdcompat__sys_s.mli", 4, 60, 62), ("stdcompat__sys_s.mli", 4, 60, 70), 0), 0, Tag1 ("Stdcompat__sys_s", 1)); (("Bytecode", 271), (0), 0, (("stdcompat__sys_s.mli", 5, 72, 74), ("stdcompat__sys_s.mli", 5, 72, 84), 0), 0, Tag1 ("Stdcompat__sys_s", 2)); (("Other", 272), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -136)]), 0, (("stdcompat__sys_s.mli", 6, 86, 88), ("stdcompat__sys_s.mli", 6, 86, 105), 0), 0, Tag1 ("Stdcompat__sys_s", 3))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Sys"), "backend_type"), 0, (0)), 100000000, 0, -135)), 0, 0, 0, 0, (("stdcompat__sys_s.mli", 3, 21, 21), ("stdcompat__sys_s.mli", 6, 86, 105), 0), 0, 0, 0, Tag1 ("Stdcompat__sys_s", 0)), 1, 0); Tag1 (("signal_behavior", 565), (0, 0, Tag1 ([(("Signal_default", 422), (0), 0, (("stdcompat__sys_s.mli", 21, 374, 376), ("stdcompat__sys_s.mli", 21, 374, 392), 0), 0, Tag1 ("Stdcompat__sys_s", 5)); (("Signal_ignore", 423), (0), 0, (("stdcompat__sys_s.mli", 22, 394, 396), ("stdcompat__sys_s.mli", 22, 394, 411), 0), 0, Tag1 ("Stdcompat__sys_s", 6)); (("Signal_handle", 424), ([(Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -134), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -133), 0), 100000000, 0, -132)]), 0, (("stdcompat__sys_s.mli", 23, 413, 415), ("stdcompat__sys_s.mli", 23, 413, 447), 0), 0, Tag1 ("Stdcompat__sys_s", 7))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Sys"), "signal_behavior"), 0, (0)), 100000000, 0, -131)), 0, 0, 0, 0, (("stdcompat__sys_s.mli", 20, 329, 329), ("stdcompat__sys_s.mli", 23, 413, 447), 0), 0, 0, 0, Tag1 ("Stdcompat__sys_s", 4)), 1, 0); Tag2 (("Break", 566), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Stdcompat__sys_s", 8)), 2, 0); Tag1 (("extra_prefix", 567), (0, 0, Tag1 ([(("Plus", 427), (0), 0, (("stdcompat__sys_s.mli", 31, 578, 580), ("stdcompat__sys_s.mli", 31, 578, 586), 0), 0, Tag1 ("Stdcompat__sys_s", 10)); (("Tilde", 428), (0), 0, (("stdcompat__sys_s.mli", 32, 588, 590), ("stdcompat__sys_s.mli", 32, 588, 597), 0), 0, Tag1 ("Stdcompat__sys_s", 11))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Sys"), "extra_prefix"), 0, (0)), 100000000, 0, -130)), 0, 0, 0, 0, (("stdcompat__sys_s.mli", 30, 539, 539), ("stdcompat__sys_s.mli", 32, 588, 597), 0), 0, 1, 0, Tag1 ("Stdcompat__sys_s", 9)), 1, 0); Tag1 (("extra_info", 568), (0, 0, 0, 1, ((Tag2 ([(Tag3 ((("extra_prefix", 567)), 0, (0)), 100000000, 0, -128); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -129)]), 100000000, 0, -127)), 0, 0, 0, 0, (("stdcompat__sys_s.mli", 45, 751, 751), ("stdcompat__sys_s.mli", 45, 751, 792), 0), 0, 0, 0, Tag1 ("Stdcompat__sys_s", 12)), 1, 0); Tag1 (("ocaml_release_info", 569), (0, 0, [[(("major", 431), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -122), (("stdcompat__sys_s.mli", 56, 964, 966), ("stdcompat__sys_s.mli", 56, 964, 978), 0), 0, Tag1 ("Stdcompat__sys_s", 14)); (("minor", 432), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -123), (("stdcompat__sys_s.mli", 57, 979, 981), ("stdcompat__sys_s.mli", 57, 979, 993), 0), 0, Tag1 ("Stdcompat__sys_s", 15)); (("patchlevel", 433), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -124), (("stdcompat__sys_s.mli", 58, 994, 996), ("stdcompat__sys_s.mli", 58, 994, 1013), 0), 0, Tag1 ("Stdcompat__sys_s", 16)); (("extra", 434), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("extra_info", 568)), 0, (0)), 100000000, 0, -126)], (0)), 100000000, 0, -125), (("stdcompat__sys_s.mli", 59, 1014, 1016), ("stdcompat__sys_s.mli", 59, 1014, 1040), 0), 0, Tag1 ("Stdcompat__sys_s", 17))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Sys"), "ocaml_release_info"), 0, (0)), 100000000, 0, -121)), 0, 0, 0, 0, (("stdcompat__sys_s.mli", 54, 909, 909), ("stdcompat__sys_s.mli", 59, 1014, 1042), 0), 0, 0, 0, Tag1 ("Stdcompat__sys_s", 13)), 1, 0); Tag3 (("Immediate64", 570), 1, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Sys"), "Immediate64")), 0, (("stdcompat__sys_s.mli", 79, 1317, 1317), ("stdcompat__sys_s.mli", 79, 1317, 1353), 0), Tag1 ("Stdcompat__sys_s", 18)), 0, 0); (("development_version", 571), ((Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -120), 0, (("stdcompat__sys_s.mli", 120, 1907, 1907), ("stdcompat__sys_s.mli", 120, 1907, 1937), 0), 0, Tag1 ("Stdcompat__sys_s", 19)), 0); (("ocaml_release", 572), ((Tag3 ((("ocaml_release_info", 569)), 0, (0)), 100000000, 0, -119), 0, (("stdcompat__sys_s.mli", 123, 1992, 1992), ("stdcompat__sys_s.mli", 123, 1992, 2030), 0), 0, Tag1 ("Stdcompat__sys_s", 20)), 0); (("mkdir", 573), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -118), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -117), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -116), 0), 100000000, 0, -115), 0), 100000000, 0, -114), (("caml_sys_mkdir", 2, 1, "", [0; 0], 0)), (("stdcompat__sys_s.mli", 127, 2094, 2094), ("stdcompat__sys_s.mli", 127, 2094, 2151), 0), 0, Tag1 ("Stdcompat__sys_s", 21)), 0); (("rmdir", 574), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -113), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -112), 0), 100000000, 0, -111), (("caml_sys_rmdir", 1, 1, "", [0], 0)), (("stdcompat__sys_s.mli", 136, 2276, 2276), ("stdcompat__sys_s.mli", 136, 2276, 2326), 0), 0, Tag1 ("Stdcompat__sys_s", 22)), 0); (("max_floatarray_length", 575), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -110), 0, (("stdcompat__sys_s.mli", 144, 2436, 2436), ("stdcompat__sys_s.mli", 144, 2436, 2467), 0), 0, Tag1 ("Stdcompat__sys_s", 23)), 0); (("getenv_opt", 576), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -109), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -108)], (0)), 100000000, 0, -107), 0), 100000000, 0, -106), 0, (("stdcompat__sys_s.mli", 147, 2523, 2523), ("stdcompat__sys_s.mli", 147, 2523, 2563), 0), 0, Tag1 ("Stdcompat__sys_s", 24)), 0); (("backend_type", 577), ((Tag3 ((("backend_type", 564)), 0, (0)), 100000000, 0, -105), 0, (("stdcompat__sys_s.mli", 150, 2628, 2628), ("stdcompat__sys_s.mli", 150, 2628, 2659), 0), 0, Tag1 ("Stdcompat__sys_s", 25)), 0); (("int_size", 578), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -104), 0, (("stdcompat__sys_s.mli", 153, 2715, 2715), ("stdcompat__sys_s.mli", 153, 2715, 2733), 0), 0, Tag1 ("Stdcompat__sys_s", 26)), 0); (("runtime_variant", 579), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -103), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -102), 0), 100000000, 0, -101), (("caml_runtime_variant", 1, 1, "", [0], 0)), (("stdcompat__sys_s.mli", 157, 2777, 2777), ("stdcompat__sys_s.mli", 157, 2777, 2843), 0), 0, Tag1 ("Stdcompat__sys_s", 27)), 0); (("runtime_parameters", 580), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -100), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -99), 0), 100000000, 0, -98), (("caml_runtime_parameters", 1, 1, "", [0], 0)), (("stdcompat__sys_s.mli", 167, 2984, 2984), ("stdcompat__sys_s.mli", 167, 2984, 3056), 0), 0, Tag1 ("Stdcompat__sys_s", 28)), 0); (("sigbus", 581), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -97), 0, (("stdcompat__sys_s.mli", 176, 3205, 3205), ("stdcompat__sys_s.mli", 176, 3205, 3221), 0), 0, Tag1 ("Stdcompat__sys_s", 29)), 0); (("sigpoll", 582), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -96), 0, (("stdcompat__sys_s.mli", 179, 3262, 3262), ("stdcompat__sys_s.mli", 179, 3262, 3279), 0), 0, Tag1 ("Stdcompat__sys_s", 30)), 0); (("sigsys", 583), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -95), 0, (("stdcompat__sys_s.mli", 182, 3321, 3321), ("stdcompat__sys_s.mli", 182, 3321, 3337), 0), 0, Tag1 ("Stdcompat__sys_s", 31)), 0); (("sigtrap", 584), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -94), 0, (("stdcompat__sys_s.mli", 185, 3378, 3378), ("stdcompat__sys_s.mli", 185, 3378, 3395), 0), 0, Tag1 ("Stdcompat__sys_s", 32)), 0); (("sigurg", 585), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -93), 0, (("stdcompat__sys_s.mli", 188, 3437, 3437), ("stdcompat__sys_s.mli", 188, 3437, 3453), 0), 0, Tag1 ("Stdcompat__sys_s", 33)), 0); (("sigxcpu", 586), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -92), 0, (("stdcompat__sys_s.mli", 191, 3494, 3494), ("stdcompat__sys_s.mli", 191, 3494, 3511), 0), 0, Tag1 ("Stdcompat__sys_s", 34)), 0); (("sigxfsz", 587), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -91), 0, (("stdcompat__sys_s.mli", 194, 3553, 3553), ("stdcompat__sys_s.mli", 194, 3553, 3570), 0), 0, Tag1 ("Stdcompat__sys_s", 35)), 0); (("enable_runtime_warnings", 588), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -90), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -89), 0), 100000000, 0, -88), 0, (("stdcompat__sys_s.mli", 197, 3612, 3612), ("stdcompat__sys_s.mli", 197, 3612, 3654), 0), 0, Tag1 ("Stdcompat__sys_s", 36)), 0); (("runtime_warnings_enabled", 589), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -87), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -86), 0), 100000000, 0, -85), 0, (("stdcompat__sys_s.mli", 200, 3721, 3721), ("stdcompat__sys_s.mli", 200, 3721, 3764), 0), 0, Tag1 ("Stdcompat__sys_s", 37)), 0); (("opaque_identity", 590), ((Tag1 (0, ((("a")), 100000000, 0, -84), ((("a")), 100000000, 0, -84), 0), 100000000, 0, -83), (("%opaque", 1, 1, "", [0], 0)), (("stdcompat__sys_s.mli", 204, 3833, 3833), ("stdcompat__sys_s.mli", 204, 3833, 3880), 0), 0, Tag1 ("Stdcompat__sys_s", 38)), 0); (("unix", 591), ((Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -82), 0, (("stdcompat__sys_s.mli", 212, 3991, 3991), ("stdcompat__sys_s.mli", 212, 3991, 4006), 0), 0, Tag1 ("Stdcompat__sys_s", 39)), 0); (("win32", 592), ((Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -81), 0, (("stdcompat__sys_s.mli", 215, 4046, 4046), ("stdcompat__sys_s.mli", 215, 4046, 4062), 0), 0, Tag1 ("Stdcompat__sys_s", 40)), 0); (("cygwin", 593), ((Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -80), 0, (("stdcompat__sys_s.mli", 218, 4103, 4103), ("stdcompat__sys_s.mli", 218, 4103, 4120), 0), 0, Tag1 ("Stdcompat__sys_s", 41)), 0); (("big_endian", 594), ((Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -79), 0, (("stdcompat__sys_s.mli", 221, 4162, 4162), ("stdcompat__sys_s.mli", 221, 4162, 4183), 0), 0, Tag1 ("Stdcompat__sys_s", 42)), 0); (("is_directory", 595), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -78), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -77), 0), 100000000, 0, -76), (("caml_sys_is_directory", 1, 1, "", [0], 0)), (("stdcompat__sys_s.mli", 225, 4230, 4230), ("stdcompat__sys_s.mli", 225, 4230, 4294), 0), 0, Tag1 ("Stdcompat__sys_s", 43)), 0); (("argv", 596), ((Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -75)], (0)), 100000000, 0, -74), (("%sys_argv", 0, 1, "", 0, 0)), (("stdcompat__sys_s.mli", 235, 4430, 4430), ("stdcompat__sys_s.mli", 235, 4430, 4472), 0), 0, Tag1 ("Stdcompat__sys_s", 44)), 0); (("executable_name", 597), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -73), 0, (("stdcompat__sys_s.mli", 244, 4610, 4610), ("stdcompat__sys_s.mli", 244, 4610, 4638), 0), 0, Tag1 ("Stdcompat__sys_s", 45)), 0); (("file_exists", 598), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -72), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -71), 0), 100000000, 0, -70), (("caml_sys_file_exists", 1, 1, "", [0], 0)), (("stdcompat__sys_s.mli", 248, 4681, 4681), ("stdcompat__sys_s.mli", 248, 4681, 4743), 0), 0, Tag1 ("Stdcompat__sys_s", 46)), 0); (("remove", 599), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -69), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -68), 0), 100000000, 0, -67), (("caml_sys_remove", 1, 1, "", [0], 0)), (("stdcompat__sys_s.mli", 259, 4974, 4974), ("stdcompat__sys_s.mli", 259, 4974, 5026), 0), 0, Tag1 ("Stdcompat__sys_s", 47)), 0); (("rename", 600), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -66), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -65), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -64), 0), 100000000, 0, -63), 0), 100000000, 0, -62), (("caml_sys_rename", 2, 1, "", [0; 0], 0)), (("stdcompat__sys_s.mli", 269, 5223, 5223), ("stdcompat__sys_s.mli", 269, 5223, 5285), 0), 0, Tag1 ("Stdcompat__sys_s", 48)), 0); (("getenv", 601), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -61), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -60), 0), 100000000, 0, -59), (("caml_sys_getenv", 1, 1, "", [0], 0)), (("stdcompat__sys_s.mli", 280, 5516, 5516), ("stdcompat__sys_s.mli", 280, 5516, 5570), 0), 0, Tag1 ("Stdcompat__sys_s", 49)), 0); (("command", 602), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -58), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), (("caml_sys_system_command", 1, 1, "", [0], 0)), (("stdcompat__sys_s.mli", 290, 5773, 5773), ("stdcompat__sys_s.mli", 290, 5773, 5833), 0), 0, Tag1 ("Stdcompat__sys_s", 50)), 0); (("time", 603), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -55), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), (("caml_sys_time", 1, 0, "caml_sys_time_unboxed", [0], 1)), (("stdcompat__sys_s.mli", 301, 6058, 6058), ("stdcompat__sys_s.mli", 303, 6147, 6159), 0), [(("noalloc", (("stdcompat__sys_s.mli", 303, 6147, 6150), ("stdcompat__sys_s.mli", 303, 6147, 6157), 0)), (0), (("stdcompat__sys_s.mli", 303, 6147, 6147), ("stdcompat__sys_s.mli", 303, 6147, 6159), 0))], Tag1 ("Stdcompat__sys_s", 51)), 0); (("chdir", 604), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -52), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -51), 0), 100000000, 0, -50), (("caml_sys_chdir", 1, 1, "", [0], 0)), (("stdcompat__sys_s.mli", 323, 6527, 6527), ("stdcompat__sys_s.mli", 323, 6527, 6577), 0), 0, Tag1 ("Stdcompat__sys_s", 52)), 0); (("getcwd", 605), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -49), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), (("caml_sys_getcwd", 1, 1, "", [0], 0)), (("stdcompat__sys_s.mli", 333, 6768, 6768), ("stdcompat__sys_s.mli", 333, 6768, 6820), 0), 0, Tag1 ("Stdcompat__sys_s", 53)), 0); (("readdir", 606), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -46), (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -45)], (0)), 100000000, 0, -44), 0), 100000000, 0, -43), (("caml_sys_read_directory", 1, 1, "", [0], 0)), (("stdcompat__sys_s.mli", 343, 7017, 7017), ("stdcompat__sys_s.mli", 343, 7017, 7086), 0), 0, Tag1 ("Stdcompat__sys_s", 54)), 0); (("interactive", 607), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -42)], (0)), 100000000, 0, -41), 0, (("stdcompat__sys_s.mli", 354, 7337, 7337), ("stdcompat__sys_s.mli", 354, 7337, 7363), 0), 0, Tag1 ("Stdcompat__sys_s", 55)), 0); (("os_type", 608), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -40), 0, (("stdcompat__sys_s.mli", 357, 7401, 7401), ("stdcompat__sys_s.mli", 357, 7401, 7421), 0), 0, Tag1 ("Stdcompat__sys_s", 56)), 0); (("word_size", 609), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -39), 0, (("stdcompat__sys_s.mli", 360, 7455, 7455), ("stdcompat__sys_s.mli", 360, 7455, 7474), 0), 0, Tag1 ("Stdcompat__sys_s", 57)), 0); (("max_string_length", 610), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -38), 0, (("stdcompat__sys_s.mli", 363, 7510, 7510), ("stdcompat__sys_s.mli", 363, 7510, 7537), 0), 0, Tag1 ("Stdcompat__sys_s", 58)), 0); (("max_array_length", 611), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -37), 0, (("stdcompat__sys_s.mli", 366, 7581, 7581), ("stdcompat__sys_s.mli", 366, 7581, 7607), 0), 0, Tag1 ("Stdcompat__sys_s", 59)), 0); (("signal", 612), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -36), (Tag1 (0, (Tag3 ((("signal_behavior", 565)), 0, (0)), 100000000, 0, -35), (Tag3 ((("signal_behavior", 565)), 0, (0)), 100000000, 0, -34), 0), 100000000, 0, -33), 0), 100000000, 0, -32), (("caml_install_signal_handler", 2, 1, "", [0; 0], 0)), (("stdcompat__sys_s.mli", 370, 7651, 7651), ("stdcompat__sys_s.mli", 371, 7669, 7744), 0), 0, Tag1 ("Stdcompat__sys_s", 60)), 0); (("set_signal", 613), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -31), (Tag1 (0, (Tag3 ((("signal_behavior", 565)), 0, (0)), 100000000, 0, -30), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("stdcompat__sys_s.mli", 386, 8079, 8079), ("stdcompat__sys_s.mli", 386, 8079, 8126), 0), 0, Tag1 ("Stdcompat__sys_s", 61)), 0); (("sigabrt", 614), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -26), 0, (("stdcompat__sys_s.mli", 389, 8163, 8163), ("stdcompat__sys_s.mli", 389, 8163, 8180), 0), 0, Tag1 ("Stdcompat__sys_s", 62)), 0); (("sigalrm", 615), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -25), 0, (("stdcompat__sys_s.mli", 392, 8214, 8214), ("stdcompat__sys_s.mli", 392, 8214, 8231), 0), 0, Tag1 ("Stdcompat__sys_s", 63)), 0); (("sigfpe", 616), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -24), 0, (("stdcompat__sys_s.mli", 395, 8265, 8265), ("stdcompat__sys_s.mli", 395, 8265, 8281), 0), 0, Tag1 ("Stdcompat__sys_s", 64)), 0); (("sighup", 617), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -23), 0, (("stdcompat__sys_s.mli", 398, 8314, 8314), ("stdcompat__sys_s.mli", 398, 8314, 8330), 0), 0, Tag1 ("Stdcompat__sys_s", 65)), 0); (("sigill", 618), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -22), 0, (("stdcompat__sys_s.mli", 401, 8363, 8363), ("stdcompat__sys_s.mli", 401, 8363, 8379), 0), 0, Tag1 ("Stdcompat__sys_s", 66)), 0); (("sigint", 619), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -21), 0, (("stdcompat__sys_s.mli", 404, 8412, 8412), ("stdcompat__sys_s.mli", 404, 8412, 8428), 0), 0, Tag1 ("Stdcompat__sys_s", 67)), 0); (("sigkill", 620), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -20), 0, (("stdcompat__sys_s.mli", 407, 8461, 8461), ("stdcompat__sys_s.mli", 407, 8461, 8478), 0), 0, Tag1 ("Stdcompat__sys_s", 68)), 0); (("sigpipe", 621), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -19), 0, (("stdcompat__sys_s.mli", 410, 8512, 8512), ("stdcompat__sys_s.mli", 410, 8512, 8529), 0), 0, Tag1 ("Stdcompat__sys_s", 69)), 0); (("sigquit", 622), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -18), 0, (("stdcompat__sys_s.mli", 413, 8563, 8563), ("stdcompat__sys_s.mli", 413, 8563, 8580), 0), 0, Tag1 ("Stdcompat__sys_s", 70)), 0); (("sigsegv", 623), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -17), 0, (("stdcompat__sys_s.mli", 416, 8614, 8614), ("stdcompat__sys_s.mli", 416, 8614, 8631), 0), 0, Tag1 ("Stdcompat__sys_s", 71)), 0); (("sigterm", 624), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -16), 0, (("stdcompat__sys_s.mli", 419, 8665, 8665), ("stdcompat__sys_s.mli", 419, 8665, 8682), 0), 0, Tag1 ("Stdcompat__sys_s", 72)), 0); (("sigusr1", 625), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -15), 0, (("stdcompat__sys_s.mli", 422, 8716, 8716), ("stdcompat__sys_s.mli", 422, 8716, 8733), 0), 0, Tag1 ("Stdcompat__sys_s", 73)), 0); (("sigusr2", 626), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -14), 0, (("stdcompat__sys_s.mli", 425, 8767, 8767), ("stdcompat__sys_s.mli", 425, 8767, 8784), 0), 0, Tag1 ("Stdcompat__sys_s", 74)), 0); (("sigchld", 627), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -13), 0, (("stdcompat__sys_s.mli", 428, 8818, 8818), ("stdcompat__sys_s.mli", 428, 8818, 8835), 0), 0, Tag1 ("Stdcompat__sys_s", 75)), 0); (("sigcont", 628), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -12), 0, (("stdcompat__sys_s.mli", 431, 8869, 8869), ("stdcompat__sys_s.mli", 431, 8869, 8886), 0), 0, Tag1 ("Stdcompat__sys_s", 76)), 0); (("sigstop", 629), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -11), 0, (("stdcompat__sys_s.mli", 434, 8920, 8920), ("stdcompat__sys_s.mli", 434, 8920, 8937), 0), 0, Tag1 ("Stdcompat__sys_s", 77)), 0); (("sigtstp", 630), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -10), 0, (("stdcompat__sys_s.mli", 437, 8971, 8971), ("stdcompat__sys_s.mli", 437, 8971, 8988), 0), 0, Tag1 ("Stdcompat__sys_s", 78)), 0); (("sigttin", 631), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -9), 0, (("stdcompat__sys_s.mli", 440, 9022, 9022), ("stdcompat__sys_s.mli", 440, 9022, 9039), 0), 0, Tag1 ("Stdcompat__sys_s", 79)), 0); (("sigttou", 632), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -8), 0, (("stdcompat__sys_s.mli", 443, 9073, 9073), ("stdcompat__sys_s.mli", 443, 9073, 9090), 0), 0, Tag1 ("Stdcompat__sys_s", 80)), 0); (("sigvtalrm", 633), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7), 0, (("stdcompat__sys_s.mli", 446, 9124, 9124), ("stdcompat__sys_s.mli", 446, 9124, 9143), 0), 0, Tag1 ("Stdcompat__sys_s", 81)), 0); (("sigprof", 634), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -6), 0, (("stdcompat__sys_s.mli", 449, 9179, 9179), ("stdcompat__sys_s.mli", 449, 9179, 9196), 0), 0, Tag1 ("Stdcompat__sys_s", 82)), 0); (("catch_break", 635), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0, (("stdcompat__sys_s.mli", 452, 9230, 9230), ("stdcompat__sys_s.mli", 452, 9230, 9260), 0), 0, Tag1 ("Stdcompat__sys_s", 83)), 0); (("ocaml_version", 636), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2), 0, (("stdcompat__sys_s.mli", 455, 9298, 9298), ("stdcompat__sys_s.mli", 455, 9298, 9324), 0), 0, Tag1 ("Stdcompat__sys_s", 84)), 0)], "Stdcompat__sys", [("Stdcompat__sys", ("\241\193\149\153#\248'D\250MR\193<\132\160\128")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stdcompat__sys_s", ("\164\022\152\225Z\131r\162\192[O\159\174\197\214\016")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val ocaml_version : string
