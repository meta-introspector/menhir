module type S =
  sig
    val symbol_for_global' : Ident.t -> Symbol.t
    val really_import_approx : Simple_value_approx.t -> Simple_value_approx.t
    val import_symbol : Symbol.t -> Simple_value_approx.t
    val closure_symbol : Closure_id.t -> Symbol.t
    val size_int : int
    val big_endian : bool
    val max_sensible_number_of_arguments : int("DEBUG:rule", [Tag4 (("S", 453), ((Tag1 ([(("symbol_for_global'", 454), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -16), (Tag3 (Tag1 ((Tag2 ("Symbol")), "t"), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("middle_end/backend_intf.mli", 23, 1334, 1336), ("middle_end/backend_intf.mli", 23, 1334, 1382), 0), 0, Tag1 ("Backend_intf", 0)), 0); (("really_import_approx", 455), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Simple_value_approx")), "t"), 0, (0)), 100000000, 0, -13), (Tag3 (Tag1 ((Tag2 ("Simple_value_approx")), "t"), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("middle_end/backend_intf.mli", 29, 1675, 1677), ("middle_end/backend_intf.mli", 29, 1675, 1750), 0), 0, Tag1 ("Backend_intf", 1)), 0); (("import_symbol", 456), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Symbol")), "t"), 0, (0)), 100000000, 0, -10), (Tag3 (Tag1 ((Tag2 ("Simple_value_approx")), "t"), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("middle_end/backend_intf.mli", 31, 1752, 1754), ("middle_end/backend_intf.mli", 31, 1752, 1807), 0), 0, Tag1 ("Backend_intf", 2)), 0); (("closure_symbol", 457), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Closure_id")), "t"), 0, (0)), 100000000, 0, -7), (Tag3 (Tag1 ((Tag2 ("Symbol")), "t"), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("middle_end/backend_intf.mli", 33, 1809, 1811), ("middle_end/backend_intf.mli", 33, 1809, 1856), 0), 0, Tag1 ("Backend_intf", 3)), 0); (("size_int", 458), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -4), 0, (("middle_end/backend_intf.mli", 37, 1981, 1983), ("middle_end/backend_intf.mli", 37, 1981, 2001), 0), 0, Tag1 ("Backend_intf", 4)), 0); (("big_endian", 459), ((Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3), 0, (("middle_end/backend_intf.mli", 40, 2062, 2064), ("middle_end/backend_intf.mli", 40, 2062, 2085), 0), 0, Tag1 ("Backend_intf", 5)), 0); (("max_sensible_number_of_arguments", 460), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2), 0, (("middle_end/backend_intf.mli", 46, 2375, 2377), ("middle_end/backend_intf.mli", 46, 2375, 2419), 0), 0, Tag1 ("Backend_intf", 6)), 0)])), 0, (("middle_end/backend_intf.mli", 21, 1260, 1260), ("middle_end/backend_intf.mli", 47, 2420, 2423), 0), Tag1 ("Backend_intf", 7)), 0)], "Backend_intf", [("Backend_intf", ("[e)\161\171\162\229\195\205D\138\187K\143\148\146")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Variable", ("\228'\154\1834\146\207\147+\193Aq\209h\190\220")); ("Var_within_closure", ("vQ\173\251u\026\012+}j\020C}T\151\220")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Tag", ("\252\157\132\005\195\228\232\133\246\237\233\224\012\143\192\218")); ("Symbol", ("\179q\177\031_\169\139a\192\019\188\000V\236\232\t")); ("Subst", ("\021\031\148\223\127\186\189\135\027}\145r\216\143\177\156")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Static_exception", ("2{#\175\226\185\147\146\176\140\029O\023p\024\\")); ("Simple_value_approx", ("\019\b\\\255\223\2510j\n?G\183\243\154v\213")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Set_of_closures_origin", ("$n\234\014\162\130\210K\171\btrA\244\254\195")); ("Set_of_closures_id", ("\178\228\011\028\027~\211\166\244\180\220-W\145_\243")); ("Projection", ("\250\207\030\021*\193\225\168\189!\224\228\192\212\236\224")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Parameter", ("*\152\238G\163\217\2377/\t\206\131\226\216K0")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Numbers", ("\004\020\227\212|\031Q6\146\217\211\156\221\234\254\195")); ("Mutable_variable", ("B^*^9`\212\152j\145_\017i.\128?")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Load_path", ("\012@\228l\230\164S\172h\1726X\020\252o}")); ("Linkage_name", ("\023\000\172\166 s\214\ns\155s\156\005\252\154\207")); ("Lambda", ("\180\1419\236'\146K$\128\006\135q\135V\029\180")); ("Internal_variable_names", ("\024|\208(\224\206\012\006\179\203\020\000\179\228\154\218")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("Freshening", ("@\017\191q\232\253\236\139\131\160Z\000b\223\184\228")); ("Flambda", ("\195J|\022>U\206!\211\212\185N\180zh\241")); ("Export_id", ("\017\209\152\144X\251!\178\238\152t\173\191Kl\232")); ("Env", ("\021\n\181\142x\b\169j\227\"\017\248*\178\245\223")); ("Debuginfo", ("\131\251\175\217P\194M\163\022\151\002\005\006\185:\185")); ("Compilation_unit", ("\007\240\020\003jK\000\210\174\021\189.8^\028K")); ("Cmi_format", ("6\177\bU\139\"\023\152=\249\135\174\b\011Cg")); ("Closure_origin", ("G\222\200`\213\247\022M|O\1488\194\030\187\229")); ("Closure_id", ("k\221yCH\015\186G\246]\003\233\198\179\217A")); ("Closure_element", ("a\194\018\239D1\143{\156A\011\219H#\149A")); ("Clambda_primitives", ("\199\176\237Hv\205\152\14717\179\017\246\221x`")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216")); ("Allocated_const", ("\029\027.W\160\170!\199Q2\235\240\167\031,\004"))], [(0)])

  end
