type t =
  Ocaml_common.Location.t = {
  loc_start : Lexing.position;
  loc_end : Lexing.position;
  loc_ghost : bool;
}
type 'a loc = 'a Ocaml_common.Location.loc = { txt : 'a; loc : t; }
module Error :
  sig
    type t
    val is_well_formed : t -> bool
    val main_msg : t -> string loc
    val sub_msgs : t -> string loc list
    val set_main_msg : t -> string -> t
    val set_main_loc : t -> t/2 -> t
    val make : sub:string loc list -> string loc -> t
    val of_exn : exn -> t option
  end
val set_input_name : string -> unit
val none : t
val register_error_of_exn : (exn -> Error.t option) -> unit
exception Error of Error.t
val raise_errorf : ?loc:t -> ('a, Format.formatter, unit, 'b) format4 -> 'a
("DEBUG:rule", [Tag1 (("t", 858), (0, 0, [[(("loc_start", 345), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -31), (("astlib/location.mli", 4, 135, 137), ("astlib/location.mli", 4, 135, 165), 0), 0, Tag1 ("Astlib__Location", 1)); (("loc_end", 346), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -32), (("astlib/location.mli", 5, 166, 168), ("astlib/location.mli", 5, 166, 194), 0), 0, Tag1 ("Astlib__Location", 2)); (("loc_ghost", 347), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -33), (("astlib/location.mli", 6, 195, 197), ("astlib/location.mli", 6, 195, 214), 0), 0, Tag1 ("Astlib__Location", 3))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Ocaml_common")), "Location"), "t"), 0, (0)), 100000000, 0, -30)), 0, 0, 0, 0, (("astlib/location.mli", 3, 98, 98), ("astlib/location.mli", 7, 215, 216), 0), 0, 0, 0, Tag1 ("Astlib__Location", 0)), 1, 0); Tag1 (("loc", 859), ([((("a")), 100000000, 0, -28)], 1, [[(("txt", 578), 0, ((("a")), 100000000, 0, -28), (("astlib/location.mli", 10, 243, 290), ("astlib/location.mli", 10, 243, 299), 0), 0, Tag1 ("Astlib__Location", 5)); (("loc", 579), 0, (Tag3 ((("t", 858)), 0, (0)), 100000000, 0, -29), (("astlib/location.mli", 10, 243, 300), ("astlib/location.mli", 10, 243, 307), 0), 0, Tag1 ("Astlib__Location", 6))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Ocaml_common")), "Location"), "loc"), [((("a")), 100000000, 0, -28)], (0)), 100000000, 0, -27)), [25], [0], 0, 0, (("astlib/location.mli", 10, 243, 243), ("astlib/location.mli", 10, 243, 309), 0), 0, 0, 0, Tag1 ("Astlib__Location", 4)), 1, 0); Tag3 (("Error", 860), 0, (Tag1 ([Tag1 (("t", 867), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("astlib/location.mli", 13, 333, 348), ("astlib/location.mli", 44, 1419, 1442), 0), 0, 0, 0, Tag1 ("Astlib__Location", 8)), 1, 0); (("is_well_formed", 868), ((Tag1 (0, (Tag3 ((("t", 867)), 0, (0)), 100000000, 0, -67), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("astlib/location.mli", 13, 333, 348), ("astlib/location.mli", 44, 1419, 1442), 0), 0, Tag1 ("Astlib__Location", 9)), 0); (("main_msg", 869), ((Tag1 (0, (Tag3 ((("t", 867)), 0, (0)), 100000000, 0, -64), (Tag3 ((("loc", 859)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -63)], (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("astlib/location.mli", 13, 333, 348), ("astlib/location.mli", 44, 1419, 1442), 0), 0, Tag1 ("Astlib__Location", 10)), 0); (("sub_msgs", 870), ((Tag1 (0, (Tag3 ((("t", 867)), 0, (0)), 100000000, 0, -60), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("loc", 859)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -59)], (0)), 100000000, 0, -58)], (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("astlib/location.mli", 13, 333, 348), ("astlib/location.mli", 44, 1419, 1442), 0), 0, Tag1 ("Astlib__Location", 11)), 0); (("set_main_msg", 871), ((Tag1 (0, (Tag3 ((("t", 867)), 0, (0)), 100000000, 0, -55), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -54), (Tag3 ((("t", 867)), 0, (0)), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("astlib/location.mli", 13, 333, 348), ("astlib/location.mli", 44, 1419, 1442), 0), 0, Tag1 ("Astlib__Location", 12)), 0); (("set_main_loc", 872), ((Tag1 (0, (Tag3 ((("t", 867)), 0, (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 ((("t", 858)), 0, (0)), 100000000, 0, -49), (Tag3 ((("t", 867)), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("astlib/location.mli", 13, 333, 348), ("astlib/location.mli", 44, 1419, 1442), 0), 0, Tag1 ("Astlib__Location", 13)), 0); (("make", 873), ((Tag1 (("sub"), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("loc", 859)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -45)], (0)), 100000000, 0, -44)], (0)), 100000000, 0, -43), (Tag1 (0, (Tag3 ((("loc", 859)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -42)], (0)), 100000000, 0, -41), (Tag3 ((("t", 867)), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("astlib/location.mli", 13, 333, 348), ("astlib/location.mli", 44, 1419, 1442), 0), 0, Tag1 ("Astlib__Location", 14)), 0); (("of_exn", 874), ((Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -37), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 867)), 0, (0)), 100000000, 0, -36)], (0)), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("astlib/location.mli", 13, 333, 348), ("astlib/location.mli", 44, 1419, 1442), 0), 0, Tag1 ("Astlib__Location", 15)), 0)]), 0, (("astlib/location.mli", 13, 333, 333), ("astlib/location.mli", 44, 1419, 1442), 0), Tag1 ("Astlib__Location", 17)), 0, 0); (("set_input_name", 861), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -26), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("astlib/location.mli", 46, 1444, 1444), ("astlib/location.mli", 46, 1444, 1479), 0), 0, Tag1 ("Astlib__Location", 18)), 0); (("none", 862), ((Tag3 ((("t", 858)), 0, (0)), 100000000, 0, -23), 0, (("astlib/location.mli", 49, 1542, 1542), ("astlib/location.mli", 49, 1542, 1554), 0), 0, Tag1 ("Astlib__Location", 19)), 0); (("register_error_of_exn", 863), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -22), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Error", 860)), "t"), 0, (0)), 100000000, 0, -21)], (0)), 100000000, 0, -20), 0), 100000000, 0, -19), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("astlib/location.mli", 54, 1692, 1692), ("astlib/location.mli", 54, 1692, 1751), 0), 0, Tag1 ("Astlib__Location", 20)), 0); Tag2 (("Error", 864), ((Tag3 ("exn", 7)), 0, ([(Tag3 (Tag1 ((("Error", 860)), "t"), 0, (0)), 100000000, 0, -16)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Astlib__Location", 21)), 2, 0); (("raise_errorf", 865), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("t", 858)), 0, (0)), 100000000, 0, -15)], (0)), 100000000, 0, -14), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stdlib")), "format4"), [((("a")), 100000000, 0, -9); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -11); (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -12); ((("b")), 100000000, 0, -13)], (0)), 100000000, 0, -10), ((("a")), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("astlib/location.mli", 64, 2158, 2158), ("astlib/location.mli", 64, 2158, 2233), 0), 0, Tag1 ("Astlib__Location", 22)), 0); (("report_exception", 866), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("astlib/location.mli", 67, 2269, 2269), ("astlib/location.mli", 67, 2269, 2323), 0), 0, Tag1 ("Astlib__Location", 23)), 0)], "Astlib__Location", [("Astlib__Location", ("nn\153\250\162\2239\215\129\229e\026xg\000U")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Ocaml_common", ("1\212\195\020\163\232\187\142G\192\221\180@\1278u")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Astlib__", ("\246\155.n\143$\1435\bi\005\019C\219\191A"))], [(0)])
val report_exception : Format.formatter -> exn -> unit
