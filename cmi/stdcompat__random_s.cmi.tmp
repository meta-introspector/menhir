module type S =
  sig
    module State = Random.State
    val bits32 : unit -> Int32.t
    val bits64 : unit -> Int64.t
    val nativebits : unit -> Nativeint.t
    val full_int : int -> int
    val init : int -> unit
    val full_init : int array -> unit
    val self_init : unit -> unit
    val bits : unit -> int
    val int : int -> int
    val int32 : Int32.t -> Int32.t
    val nativeint : Nativeint.t -> Nativeint.t
    val int64 : Int64.t -> Int64.t
    val float : float -> float
    val bool : unit -> bool
    val get_state : unit -> State.t
    val set_state : State.t -> unit("DEBUG:rule", [Tag4 (("S", 486), ((Tag1 ([Tag3 (("State", 487), 1, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Random"), "State")), 0, (("stdcompat__random_s.mli", 3, 21, 21), ("stdcompat__random_s.mli", 3, 21, 48), 0), Tag1 ("Stdcompat__random_s", 0)), 0, 0); (("bits32", 488), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -50), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Int32"), "t"), 0, (0)), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("stdcompat__random_s.mli", 18, 549, 549), ("stdcompat__random_s.mli", 18, 549, 577), 0), 0, Tag1 ("Stdcompat__random_s", 1)), 0); (("bits64", 489), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -47), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Int64"), "t"), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0, (("stdcompat__random_s.mli", 21, 630, 630), ("stdcompat__random_s.mli", 21, 630, 658), 0), 0, Tag1 ("Stdcompat__random_s", 2)), 0); (("nativebits", 490), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -44), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Nativeint"), "t"), 0, (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("stdcompat__random_s.mli", 24, 711, 711), ("stdcompat__random_s.mli", 24, 711, 747), 0), 0, Tag1 ("Stdcompat__random_s", 3)), 0); (("full_int", 491), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -41), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("stdcompat__random_s.mli", 27, 808, 808), ("stdcompat__random_s.mli", 27, 808, 833), 0), 0, Tag1 ("Stdcompat__random_s", 4)), 0); (("init", 492), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -38), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("stdcompat__random_s.mli", 30, 883, 883), ("stdcompat__random_s.mli", 30, 883, 905), 0), 0, Tag1 ("Stdcompat__random_s", 5)), 0); (("full_init", 493), ((Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -35)], (0)), 100000000, 0, -34), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0, (("stdcompat__random_s.mli", 33, 939, 939), ("stdcompat__random_s.mli", 33, 939, 972), 0), 0, Tag1 ("Stdcompat__random_s", 6)), 0); (("self_init", 494), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -31), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("stdcompat__random_s.mli", 36, 1011, 1011), ("stdcompat__random_s.mli", 36, 1011, 1039), 0), 0, Tag1 ("Stdcompat__random_s", 7)), 0); (("bits", 495), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -28), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("stdcompat__random_s.mli", 39, 1078, 1078), ("stdcompat__random_s.mli", 39, 1078, 1100), 0), 0, Tag1 ("Stdcompat__random_s", 8)), 0); (("int", 496), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -25), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("stdcompat__random_s.mli", 42, 1134, 1134), ("stdcompat__random_s.mli", 42, 1134, 1154), 0), 0, Tag1 ("Stdcompat__random_s", 9)), 0); (("int32", 497), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Int32"), "t"), 0, (0)), 100000000, 0, -22), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Int32"), "t"), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("stdcompat__random_s.mli", 45, 1187, 1187), ("stdcompat__random_s.mli", 45, 1187, 1217), 0), 0, Tag1 ("Stdcompat__random_s", 10)), 0); (("nativeint", 498), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Nativeint"), "t"), 0, (0)), 100000000, 0, -19), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Nativeint"), "t"), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("stdcompat__random_s.mli", 48, 1252, 1252), ("stdcompat__random_s.mli", 48, 1252, 1294), 0), 0, Tag1 ("Stdcompat__random_s", 11)), 0); (("int64", 499), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Int64"), "t"), 0, (0)), 100000000, 0, -16), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Int64"), "t"), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("stdcompat__random_s.mli", 51, 1333, 1333), ("stdcompat__random_s.mli", 51, 1333, 1363), 0), 0, Tag1 ("Stdcompat__random_s", 12)), 0); (("float", 500), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -13), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("stdcompat__random_s.mli", 54, 1398, 1398), ("stdcompat__random_s.mli", 54, 1398, 1424), 0), 0, Tag1 ("Stdcompat__random_s", 13)), 0); (("bool", 501), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("stdcompat__random_s.mli", 57, 1459, 1459), ("stdcompat__random_s.mli", 57, 1459, 1482), 0), 0, Tag1 ("Stdcompat__random_s", 14)), 0); (("get_state", 502), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -7), (Tag3 (Tag1 ((("State", 487)), "t"), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("stdcompat__random_s.mli", 60, 1516, 1516), ("stdcompat__random_s.mli", 60, 1516, 1547), 0), 0, Tag1 ("Stdcompat__random_s", 15)), 0); (("set_state", 503), ((Tag1 (0, (Tag3 (Tag1 ((("State", 487)), "t"), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("stdcompat__random_s.mli", 63, 1586, 1586), ("stdcompat__random_s.mli", 63, 1586, 1617), 0), 0, Tag1 ("Stdcompat__random_s", 16)), 0)])), 0, (("stdcompat__random_s.mli", 1, 0, 0), ("stdcompat__random_s.mli", 66, 1656, 1659), 0), Tag1 ("Stdcompat__random_s", 17)), 0)], "Stdcompat__random_s", [("Stdcompat__random_s", ("\129\223\150\216\016\164O\200\232\2001\248\192\193\149\160")); ("Stdlib__Random", ("\020\005Xq\171\026\218\152X\135\254\023\133zK\200")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

  end
