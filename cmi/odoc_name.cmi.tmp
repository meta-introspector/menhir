type t = string
val parens_if_infix : t -> t
val simple : t -> t
val father : t -> t
val concat : t -> t -> t
val normalize_name : t -> t
val head : t -> t
val depth : t -> int
val prefix : t -> t -> bool
val alias_unprefix : t -> t -> t
val get_relative : t -> t -> t
val get_relative_opt : t -> t -> t
val get_relative_raw : t -> t -> t
val hide_given_modules : t list -> t -> t
val qualified : t -> bool
val from_ident : Ident.t -> t
val from_path : Path.t -> t
val to_path : t -> Path.t
val from_longident : Longident.t -> t
module Map :
  sig
    type key = t
    type +!'a t
    val empty : 'a t
    val add : key -> 'a -> 'a t -> 'a t
    val add_to_list : key -> 'a -> 'a list t -> 'a list t
    val update : key -> ('a option -> 'a option) -> 'a t -> 'a t
    val singleton : key -> 'a -> 'a t
    val remove : key -> 'a t -> 'a t
    val merge :
      (key -> 'a option -> 'b option -> 'c option) -> 'a t -> 'b t -> 'c t
    val union : (key -> 'a -> 'a -> 'a option) -> 'a t -> 'a t -> 'a t
    val cardinal : 'a t -> int
    val bindings : 'a t -> (key * 'a) list
    val min_binding : 'a t -> key * 'a
    val min_binding_opt : 'a t -> (key * 'a) option
    val max_binding : 'a t -> key * 'a
    val max_binding_opt : 'a t -> (key * 'a) option
    val choose : 'a t -> key * 'a
    val choose_opt : 'a t -> (key * 'a) option
    val find : key -> 'a t -> 'a
    val find_opt : key -> 'a t -> 'a option
    val find_first : (key -> bool) -> 'a t -> key * 'a
    val find_first_opt : (key -> bool) -> 'a t -> (key * 'a) option
    val find_last : (key -> bool) -> 'a t -> key * 'a
    val find_last_opt : (key -> bool) -> 'a t -> (key * 'a) option
    val iter : (key -> 'a -> unit) -> 'a t -> unit
    val fold : (key -> 'a -> 'acc -> 'acc) -> 'a t -> 'acc -> 'acc
    val map : ('a -> 'b) -> 'a t -> 'b t
    val mapi : (key -> 'a -> 'b) -> 'a t -> 'b t
    val filter : (key -> 'a -> bool) -> 'a t -> 'a t
    val filter_map : (key -> 'a -> 'b option) -> 'a t -> 'b t
    val partition : (key -> 'a -> bool) -> 'a t -> 'a t * 'a t
    val split : key -> 'a t -> 'a t * 'a option * 'a t
    val is_empty : 'a t -> bool
    val mem : key -> 'a t -> bool
    val equal : ('a -> 'a -> bool) -> 'a t -> 'a t -> bool
    val compare : ('a -> 'a -> int) -> 'a t -> 'a t -> int
    val for_all : (key -> 'a -> bool) -> 'a t -> bool
    val exists : (key -> 'a -> bool) -> 'a t -> bool
    val to_list : 'a t -> (key * 'a) list
    val of_list : (key * 'a) list -> 'a t
    val to_seq : 'a t -> (key * 'a) Seq.t
    val to_rev_seq : 'a t -> (key * 'a) Seq.t
    val to_seq_from : key -> 'a t -> (key * 'a) Seq.t
    val add_seq : (key * 'a) Seq.t -> 'a t -> 'a t
    val of_seq : (key * 'a) Seq.t -> 'a t("DEBUG:rule", [Tag1 (("t", 572), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -71)), 0, 0, 0, 0, (("odoc_name.mli", 18, 1120, 1120), ("odoc_name.mli", 18, 1120, 1135), 0), 0, 0, 0, Tag1 ("Odoc_name", 0)), 1, 0); (("parens_if_infix", 573), ((Tag1 (0, (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -70), (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("odoc_name.mli", 21, 1196, 1196), ("odoc_name.mli", 21, 1196, 1224), 0), 0, Tag1 ("Odoc_name", 1)), 0); (("simple", 574), ((Tag1 (0, (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -67), (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("odoc_name.mli", 24, 1266, 1266), ("odoc_name.mli", 24, 1266, 1285), 0), 0, Tag1 ("Odoc_name", 2)), 0); (("father", 575), ((Tag1 (0, (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -64), (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -63), 0), 100000000, 0, -62), 0, (("odoc_name.mli", 27, 1357, 1357), ("odoc_name.mli", 27, 1357, 1376), 0), 0, Tag1 ("Odoc_name", 3)), 0); (("concat", 576), ((Tag1 (0, (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -61), (Tag1 (0, (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -60), (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -59), 0), 100000000, 0, -58), 0), 100000000, 0, -57), 0, (("odoc_name.mli", 30, 1409, 1409), ("odoc_name.mli", 30, 1409, 1433), 0), 0, Tag1 ("Odoc_name", 4)), 0); (("normalize_name", 577), ((Tag1 (0, (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -56), (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0, (("odoc_name.mli", 34, 1569, 1569), ("odoc_name.mli", 34, 1569, 1596), 0), 0, Tag1 ("Odoc_name", 5)), 0); (("head", 578), ((Tag1 (0, (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -53), (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("odoc_name.mli", 37, 1633, 1633), ("odoc_name.mli", 37, 1633, 1650), 0), 0, Tag1 ("Odoc_name", 6)), 0); (("depth", 579), ((Tag1 (0, (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -50), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("odoc_name.mli", 41, 1772, 1772), ("odoc_name.mli", 41, 1772, 1792), 0), 0, Tag1 ("Odoc_name", 7)), 0); (("prefix", 580), ((Tag1 (0, (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -47), (Tag1 (0, (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -46), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("odoc_name.mli", 45, 1928, 1928), ("odoc_name.mli", 45, 1928, 1955), 0), 0, Tag1 ("Odoc_name", 8)), 0); (("alias_unprefix", 581), ((Tag1 (0, (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -42), (Tag1 (0, (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -41), (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("odoc_name.mli", 48, 2026, 2026), ("odoc_name.mli", 48, 2026, 2057), 0), 0, Tag1 ("Odoc_name", 9)), 0); (("get_relative", 582), ((Tag1 (0, (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -37), (Tag1 (0, (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -36), (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0, (("odoc_name.mli", 51, 2134, 2134), ("odoc_name.mli", 51, 2134, 2164), 0), 0, Tag1 ("Odoc_name", 10)), 0); (("get_relative_opt", 583), ((Tag1 (0, (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -32), (Tag1 (0, (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -31), (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("odoc_name.mli", 56, 2257, 2257), ("odoc_name.mli", 56, 2257, 2291), 0), 0, Tag1 ("Odoc_name", 11)), 0); (("get_relative_raw", 584), ((Tag1 (0, (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -27), (Tag1 (0, (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -26), (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("odoc_name.mli", 60, 2375, 2375), ("odoc_name.mli", 60, 2375, 2409), 0), 0, Tag1 ("Odoc_name", 12)), 0); (("hide_given_modules", 585), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -22)], (0)), 100000000, 0, -21), (Tag1 (0, (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -20), (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("odoc_name.mli", 65, 2588, 2588), ("odoc_name.mli", 65, 2588, 2629), 0), 0, Tag1 ("Odoc_name", 13)), 0); (("qualified", 586), ((Tag1 (0, (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -16), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("odoc_name.mli", 68, 2678, 2678), ("odoc_name.mli", 68, 2678, 2703), 0), 0, Tag1 ("Odoc_name", 14)), 0); (("from_ident", 587), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -13), (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("odoc_name.mli", 71, 2742, 2742), ("odoc_name.mli", 71, 2742, 2771), 0), 0, Tag1 ("Odoc_name", 15)), 0); (("from_path", 588), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -10), (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("odoc_name.mli", 74, 2808, 2808), ("odoc_name.mli", 74, 2808, 2835), 0), 0, Tag1 ("Odoc_name", 16)), 0); (("to_path", 589), ((Tag1 (0, (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -7), (Tag3 (Tag1 ((Tag2 ("Path")), "t"), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("odoc_name.mli", 77, 2871, 2871), ("odoc_name.mli", 77, 2871, 2896), 0), 0, Tag1 ("Odoc_name", 17)), 0); (("from_longident", 590), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Longident")), "t"), 0, (0)), 100000000, 0, -4), (Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("odoc_name.mli", 80, 2937, 2937), ("odoc_name.mli", 80, 2937, 2974), 0), 0, Tag1 ("Odoc_name", 18)), 0); Tag3 (("Map", 591), 0, (Tag1 ([Tag1 (("key", 592), (0, 0, 0, 1, ((Tag3 ((("t", 572)), 0, (0)), 100000000, 0, -400)), 0, 0, 0, 0, (("odoc_name.mli", 82, 2976, 3000), ("odoc_name.mli", 82, 2976, 3012), 0), 0, 0, 0, Tag1 ("Odoc_name", 19)), 1, 0); Tag1 (("t", 593), ([((("a")), 100000000, 0, -399)], 1, 0, 1, 0, [9], [2], 0, 0, (("map.mli", 73, 2902, 2906), ("map.mli", 73, 2902, 2917), 0), 0, 0, 0, Tag1 ("Stdlib__Map", 4)), 1, 0); (("empty", 594), ((Tag3 ((("t", 593)), [((("a")), 100000000, 0, -398)], (0)), 100000000, 0, -397), 0, (("map.mli", 76, 2977, 2981), ("map.mli", 76, 2977, 2996), 0), 0, Tag1 ("Stdlib__Map", 5)), 0); (("add", 595), ((Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -396), (Tag1 (0, ((("a")), 100000000, 0, -394), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -394)], (0)), 100000000, 0, -395), (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -394)], (0)), 100000000, 0, -393), 0), 100000000, 0, -392), 0), 100000000, 0, -391), 0), 100000000, 0, -390), 0, (("map.mli", 79, 3024, 3028), ("map.mli", 79, 3024, 3062), 0), 0, Tag1 ("Stdlib__Map", 6)), 0); (("add_to_list", 596), ((Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -389), (Tag1 (0, ((("a")), 100000000, 0, -386), (Tag1 (0, (Tag3 ((("t", 593)), [(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -386)], (0)), 100000000, 0, -388)], (0)), 100000000, 0, -387), (Tag3 ((("t", 593)), [(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -386)], (0)), 100000000, 0, -385)], (0)), 100000000, 0, -384), 0), 100000000, 0, -383), 0), 100000000, 0, -382), 0), 100000000, 0, -381), 0, (("map.mli", 88, 3503, 3507), ("map.mli", 88, 3503, 3559), 0), 0, Tag1 ("Stdlib__Map", 7)), 0); (("update", 597), ((Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -380), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -375)], (0)), 100000000, 0, -379), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -375)], (0)), 100000000, 0, -378), 0), 100000000, 0, -377), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -375)], (0)), 100000000, 0, -376), (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -375)], (0)), 100000000, 0, -374), 0), 100000000, 0, -373), 0), 100000000, 0, -372), 0), 100000000, 0, -371), 0, (("map.mli", 94, 3753, 3757), ("map.mli", 94, 3753, 3816), 0), 0, Tag1 ("Stdlib__Map", 8)), 0); (("singleton", 598), ((Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -370), (Tag1 (0, ((("a")), 100000000, 0, -369), (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -369)], (0)), 100000000, 0, -368), 0), 100000000, 0, -367), 0), 100000000, 0, -366), 0, (("map.mli", 106, 4436, 4440), ("map.mli", 106, 4436, 4472), 0), 0, Tag1 ("Stdlib__Map", 9)), 0); (("remove", 599), ((Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -365), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -363)], (0)), 100000000, 0, -364), (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -363)], (0)), 100000000, 0, -362), 0), 100000000, 0, -361), 0), 100000000, 0, -360), 0, (("map.mli", 111, 4594, 4598), ("map.mli", 111, 4594, 4629), 0), 0, Tag1 ("Stdlib__Map", 10)), 0); (("merge", 600), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -359), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -352)], (0)), 100000000, 0, -358), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -350)], (0)), 100000000, 0, -357), (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -348)], (0)), 100000000, 0, -356), 0), 100000000, 0, -355), 0), 100000000, 0, -354), 0), 100000000, 0, -353), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -352)], (0)), 100000000, 0, -351), (Tag1 (0, (Tag3 ((("t", 593)), [((("b")), 100000000, 0, -350)], (0)), 100000000, 0, -349), (Tag3 ((("t", 593)), [((("c")), 100000000, 0, -348)], (0)), 100000000, 0, -347), 0), 100000000, 0, -346), 0), 100000000, 0, -345), 0), 100000000, 0, -344), 0, (("map.mli", 118, 4950, 4954), ("map.mli", 120, 5019, 5045), 0), 0, Tag1 ("Stdlib__Map", 11)), 0); (("union", 601), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -343), (Tag1 (0, ((("a")), 100000000, 0, -336), (Tag1 (0, ((("a")), 100000000, 0, -336), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -336)], (0)), 100000000, 0, -342), 0), 100000000, 0, -341), 0), 100000000, 0, -340), 0), 100000000, 0, -339), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -336)], (0)), 100000000, 0, -338), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -336)], (0)), 100000000, 0, -337), (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -336)], (0)), 100000000, 0, -335), 0), 100000000, 0, -334), 0), 100000000, 0, -333), 0), 100000000, 0, -332), 0, (("map.mli", 129, 5475, 5479), ("map.mli", 129, 5475, 5544), 0), 0, Tag1 ("Stdlib__Map", 12)), 0); (("cardinal", 602), ((Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -331)], (0)), 100000000, 0, -330), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -329), 0), 100000000, 0, -328), 0, (("map.mli", 142, 6061, 6065), ("map.mli", 142, 6061, 6090), 0), 0, Tag1 ("Stdlib__Map", 13)), 0); (("bindings", 603), ((Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -326)], (0)), 100000000, 0, -327), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -325); ((("a")), 100000000, 0, -326)]), 100000000, 0, -324)], (0)), 100000000, 0, -323), 0), 100000000, 0, -322), 0, (("map.mli", 148, 6197, 6201), ("map.mli", 148, 6197, 6238), 0), 0, Tag1 ("Stdlib__Map", 14)), 0); (("min_binding", 604), ((Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -320)], (0)), 100000000, 0, -321), (Tag2 ([(Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -319); ((("a")), 100000000, 0, -320)]), 100000000, 0, -318), 0), 100000000, 0, -317), 0, (("map.mli", 155, 6495, 6499), ("map.mli", 155, 6495, 6534), 0), 0, Tag1 ("Stdlib__Map", 15)), 0); (("min_binding_opt", 605), ((Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -315)], (0)), 100000000, 0, -316), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -314); ((("a")), 100000000, 0, -315)]), 100000000, 0, -313)], (0)), 100000000, 0, -312), 0), 100000000, 0, -311), 0, (("map.mli", 161, 6727, 6731), ("map.mli", 161, 6727, 6777), 0), 0, Tag1 ("Stdlib__Map", 16)), 0); (("max_binding", 606), ((Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -309)], (0)), 100000000, 0, -310), (Tag2 ([(Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -308); ((("a")), 100000000, 0, -309)]), 100000000, 0, -307), 0), 100000000, 0, -306), 0, (("map.mli", 167, 6961, 6965), ("map.mli", 167, 6961, 7000), 0), 0, Tag1 ("Stdlib__Map", 17)), 0); (("max_binding_opt", 607), ((Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -304)], (0)), 100000000, 0, -305), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -303); ((("a")), 100000000, 0, -304)]), 100000000, 0, -302)], (0)), 100000000, 0, -301), 0), 100000000, 0, -300), 0, (("map.mli", 172, 7128, 7132), ("map.mli", 172, 7128, 7178), 0), 0, Tag1 ("Stdlib__Map", 18)), 0); (("choose", 608), ((Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -298)], (0)), 100000000, 0, -299), (Tag2 ([(Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -297); ((("a")), 100000000, 0, -298)]), 100000000, 0, -296), 0), 100000000, 0, -295), 0, (("map.mli", 177, 7310, 7314), ("map.mli", 177, 7310, 7344), 0), 0, Tag1 ("Stdlib__Map", 19)), 0); (("choose_opt", 609), ((Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -293)], (0)), 100000000, 0, -294), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -292); ((("a")), 100000000, 0, -293)]), 100000000, 0, -291)], (0)), 100000000, 0, -290), 0), 100000000, 0, -289), 0, (("map.mli", 183, 7562, 7566), ("map.mli", 183, 7562, 7607), 0), 0, Tag1 ("Stdlib__Map", 20)), 0); (("find", 610), ((Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -288), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -286)], (0)), 100000000, 0, -287), ((("a")), 100000000, 0, -286), 0), 100000000, 0, -285), 0), 100000000, 0, -284), 0, (("map.mli", 191, 7850, 7854), ("map.mli", 191, 7850, 7881), 0), 0, Tag1 ("Stdlib__Map", 21)), 0); (("find_opt", 611), ((Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -283), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -281)], (0)), 100000000, 0, -282), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -281)], (0)), 100000000, 0, -280), 0), 100000000, 0, -279), 0), 100000000, 0, -278), 0, (("map.mli", 195, 8006, 8010), ("map.mli", 195, 8006, 8048), 0), 0, Tag1 ("Stdlib__Map", 22)), 0); (("find_first", 612), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -277), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -276), 0), 100000000, 0, -275), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -273)], (0)), 100000000, 0, -274), (Tag2 ([(Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -272); ((("a")), 100000000, 0, -273)]), 100000000, 0, -271), 0), 100000000, 0, -270), 0), 100000000, 0, -269), 0, (("map.mli", 200, 8204, 8208), ("map.mli", 200, 8204, 8257), 0), 0, Tag1 ("Stdlib__Map", 23)), 0); (("find_first_opt", 613), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -268), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -267), 0), 100000000, 0, -266), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -264)], (0)), 100000000, 0, -265), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -263); ((("a")), 100000000, 0, -264)]), 100000000, 0, -262)], (0)), 100000000, 0, -261), 0), 100000000, 0, -260), 0), 100000000, 0, -259), 0, (("map.mli", 212, 8743, 8747), ("map.mli", 212, 8743, 8809), 0), 0, Tag1 ("Stdlib__Map", 24)), 0); (("find_last", 614), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -258), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -257), 0), 100000000, 0, -256), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -254)], (0)), 100000000, 0, -255), (Tag2 ([(Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -253); ((("a")), 100000000, 0, -254)]), 100000000, 0, -252), 0), 100000000, 0, -251), 0), 100000000, 0, -250), 0, (("map.mli", 218, 9052, 9056), ("map.mli", 218, 9052, 9104), 0), 0, Tag1 ("Stdlib__Map", 25)), 0); (("find_last_opt", 615), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -249), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -248), 0), 100000000, 0, -247), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -245)], (0)), 100000000, 0, -246), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -244); ((("a")), 100000000, 0, -245)]), 100000000, 0, -243)], (0)), 100000000, 0, -242), 0), 100000000, 0, -241), 0), 100000000, 0, -240), 0, (("map.mli", 224, 9334, 9338), ("map.mli", 224, 9334, 9399), 0), 0, Tag1 ("Stdlib__Map", 26)), 0); (("iter", 616), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -239), (Tag1 (0, ((("a")), 100000000, 0, -235), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -238), 0), 100000000, 0, -237), 0), 100000000, 0, -236), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -235)], (0)), 100000000, 0, -234), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -233), 0), 100000000, 0, -232), 0), 100000000, 0, -231), 0, (("map.mli", 233, 9688, 9692), ("map.mli", 233, 9688, 9737), 0), 0, Tag1 ("Stdlib__Map", 27)), 0); (("fold", 617), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -230), (Tag1 (0, ((("a")), 100000000, 0, -226), (Tag1 (0, ((("acc")), 100000000, 0, -224), ((("acc")), 100000000, 0, -224), 0), 100000000, 0, -229), 0), 100000000, 0, -228), 0), 100000000, 0, -227), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -226)], (0)), 100000000, 0, -225), (Tag1 (0, ((("acc")), 100000000, 0, -224), ((("acc")), 100000000, 0, -224), 0), 100000000, 0, -223), 0), 100000000, 0, -222), 0), 100000000, 0, -221), 0, (("map.mli", 239, 10018, 10022), ("map.mli", 240, 10032, 10089), 0), 0, Tag1 ("Stdlib__Map", 28)), 0); (("map", 618), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -219), ((("b")), 100000000, 0, -217), 0), 100000000, 0, -220), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -219)], (0)), 100000000, 0, -218), (Tag3 ((("t", 593)), [((("b")), 100000000, 0, -217)], (0)), 100000000, 0, -216), 0), 100000000, 0, -215), 0), 100000000, 0, -214), 0, (("map.mli", 247, 10338, 10342), ("map.mli", 247, 10338, 10377), 0), 0, Tag1 ("Stdlib__Map", 29)), 0); (("mapi", 619), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -213), (Tag1 (0, ((("a")), 100000000, 0, -210), ((("b")), 100000000, 0, -208), 0), 100000000, 0, -212), 0), 100000000, 0, -211), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -210)], (0)), 100000000, 0, -209), (Tag3 ((("t", 593)), [((("b")), 100000000, 0, -208)], (0)), 100000000, 0, -207), 0), 100000000, 0, -206), 0), 100000000, 0, -205), 0, (("map.mli", 254, 10698, 10702), ("map.mli", 254, 10698, 10745), 0), 0, Tag1 ("Stdlib__Map", 30)), 0); (("filter", 620), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -204), (Tag1 (0, ((("a")), 100000000, 0, -199), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -203), 0), 100000000, 0, -202), 0), 100000000, 0, -201), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -199)], (0)), 100000000, 0, -200), (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -199)], (0)), 100000000, 0, -198), 0), 100000000, 0, -197), 0), 100000000, 0, -196), 0, (("map.mli", 258, 10888, 10892), ("map.mli", 258, 10888, 10939), 0), 0, Tag1 ("Stdlib__Map", 31)), 0); (("filter_map", 621), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -195), (Tag1 (0, ((("a")), 100000000, 0, -191), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -189)], (0)), 100000000, 0, -194), 0), 100000000, 0, -193), 0), 100000000, 0, -192), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -191)], (0)), 100000000, 0, -190), (Tag3 ((("t", 593)), [((("b")), 100000000, 0, -189)], (0)), 100000000, 0, -188), 0), 100000000, 0, -187), 0), 100000000, 0, -186), 0, (("map.mli", 266, 11264, 11268), ("map.mli", 266, 11264, 11324), 0), 0, Tag1 ("Stdlib__Map", 32)), 0); (("partition", 622), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -185), (Tag1 (0, ((("a")), 100000000, 0, -179), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -184), 0), 100000000, 0, -183), 0), 100000000, 0, -182), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -179)], (0)), 100000000, 0, -181), (Tag2 ([(Tag3 ((("t", 593)), [((("a")), 100000000, 0, -179)], (0)), 100000000, 0, -178); (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -179)], (0)), 100000000, 0, -180)]), 100000000, 0, -177), 0), 100000000, 0, -176), 0), 100000000, 0, -175), 0, (("map.mli", 285, 12005, 12009), ("map.mli", 285, 12005, 12066), 0), 0, Tag1 ("Stdlib__Map", 33)), 0); (("split", 623), ((Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -174), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -170)], (0)), 100000000, 0, -173), (Tag2 ([(Tag3 ((("t", 593)), [((("a")), 100000000, 0, -170)], (0)), 100000000, 0, -169); (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -170)], (0)), 100000000, 0, -171); (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -170)], (0)), 100000000, 0, -172)]), 100000000, 0, -168), 0), 100000000, 0, -167), 0), 100000000, 0, -166), 0, (("map.mli", 292, 12324, 12328), ("map.mli", 292, 12324, 12377), 0), 0, Tag1 ("Stdlib__Map", 34)), 0); (("is_empty", 624), ((Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -165)], (0)), 100000000, 0, -164), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -163), 0), 100000000, 0, -162), 0, (("map.mli", 304, 12826, 12830), ("map.mli", 304, 12826, 12856), 0), 0, Tag1 ("Stdlib__Map", 35)), 0); (("mem", 625), ((Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -161), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -160)], (0)), 100000000, 0, -159), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -158), 0), 100000000, 0, -157), 0), 100000000, 0, -156), 0, (("map.mli", 307, 12905, 12909), ("map.mli", 307, 12905, 12937), 0), 0, Tag1 ("Stdlib__Map", 36)), 0); (("equal", 626), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -151), (Tag1 (0, ((("a")), 100000000, 0, -151), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -155), 0), 100000000, 0, -154), 0), 100000000, 0, -153), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -151)], (0)), 100000000, 0, -152), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -151)], (0)), 100000000, 0, -150), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -149), 0), 100000000, 0, -148), 0), 100000000, 0, -147), 0), 100000000, 0, -146), 0, (("map.mli", 311, 13041, 13045), ("map.mli", 311, 13041, 13098), 0), 0, Tag1 ("Stdlib__Map", 37)), 0); (("compare", 627), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -141), (Tag1 (0, ((("a")), 100000000, 0, -141), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -145), 0), 100000000, 0, -144), 0), 100000000, 0, -143), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -141)], (0)), 100000000, 0, -142), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -141)], (0)), 100000000, 0, -140), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -139), 0), 100000000, 0, -138), 0), 100000000, 0, -137), 0), 100000000, 0, -136), 0, (("map.mli", 317, 13349, 13353), ("map.mli", 317, 13349, 13406), 0), 0, Tag1 ("Stdlib__Map", 38)), 0); (("for_all", 628), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -135), (Tag1 (0, ((("a")), 100000000, 0, -131), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -134), 0), 100000000, 0, -133), 0), 100000000, 0, -132), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -131)], (0)), 100000000, 0, -130), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -129), 0), 100000000, 0, -128), 0), 100000000, 0, -127), 0, (("map.mli", 321, 13561, 13565), ("map.mli", 321, 13561, 13613), 0), 0, Tag1 ("Stdlib__Map", 39)), 0); (("exists", 629), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -126), (Tag1 (0, ((("a")), 100000000, 0, -122), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -125), 0), 100000000, 0, -124), 0), 100000000, 0, -123), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -122)], (0)), 100000000, 0, -121), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -120), 0), 100000000, 0, -119), 0), 100000000, 0, -118), 0, (("map.mli", 326, 13733, 13737), ("map.mli", 326, 13733, 13784), 0), 0, Tag1 ("Stdlib__Map", 40)), 0); (("to_list", 630), ((Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -116)], (0)), 100000000, 0, -117), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -115); ((("a")), 100000000, 0, -116)]), 100000000, 0, -114)], (0)), 100000000, 0, -113), 0), 100000000, 0, -112), 0, (("map.mli", 333, 13947, 13951), ("map.mli", 333, 13947, 13988), 0), 0, Tag1 ("Stdlib__Map", 41)), 0); (("of_list", 631), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -111); ((("a")), 100000000, 0, -108)]), 100000000, 0, -110)], (0)), 100000000, 0, -109), (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -108)], (0)), 100000000, 0, -107), 0), 100000000, 0, -106), 0, (("map.mli", 337, 14052, 14056), ("map.mli", 337, 14052, 14093), 0), 0, Tag1 ("Stdlib__Map", 42)), 0); (("to_seq", 632), ((Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -104)], (0)), 100000000, 0, -105), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag2 ([(Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -103); ((("a")), 100000000, 0, -104)]), 100000000, 0, -102)], (0)), 100000000, 0, -101), 0), 100000000, 0, -100), 0, (("map.mli", 343, 14271, 14275), ("map.mli", 343, 14271, 14312), 0), 0, Tag1 ("Stdlib__Map", 43)), 0); (("to_rev_seq", 633), ((Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -98)], (0)), 100000000, 0, -99), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag2 ([(Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -97); ((("a")), 100000000, 0, -98)]), 100000000, 0, -96)], (0)), 100000000, 0, -95), 0), 100000000, 0, -94), 0, (("map.mli", 347, 14398, 14402), ("map.mli", 347, 14398, 14443), 0), 0, Tag1 ("Stdlib__Map", 44)), 0); (("to_seq_from", 634), ((Tag1 (0, (Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -93), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -91)], (0)), 100000000, 0, -92), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag2 ([(Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -90); ((("a")), 100000000, 0, -91)]), 100000000, 0, -89)], (0)), 100000000, 0, -88), 0), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("map.mli", 351, 14530, 14534), ("map.mli", 351, 14530, 14583), 0), 0, Tag1 ("Stdlib__Map", 45)), 0); (("add_seq", 635), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag2 ([(Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -85); ((("a")), 100000000, 0, -81)]), 100000000, 0, -84)], (0)), 100000000, 0, -83), (Tag1 (0, (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -81)], (0)), 100000000, 0, -82), (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -81)], (0)), 100000000, 0, -80), 0), 100000000, 0, -79), 0), 100000000, 0, -78), 0, (("map.mli", 356, 14738, 14742), ("map.mli", 356, 14738, 14788), 0), 0, Tag1 ("Stdlib__Map", 46)), 0); (("of_seq", 636), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [(Tag2 ([(Tag3 ((("key", 592)), 0, (0)), 100000000, 0, -77); ((("a")), 100000000, 0, -74)]), 100000000, 0, -76)], (0)), 100000000, 0, -75), (Tag3 ((("t", 593)), [((("a")), 100000000, 0, -74)], (0)), 100000000, 0, -73), 0), 100000000, 0, -72), 0, (("map.mli", 360, 14866, 14870), ("map.mli", 360, 14866, 14907), 0), 0, Tag1 ("Stdlib__Map", 47)), 0)]), 0, (("odoc_name.mli", 82, 2976, 2976), ("odoc_name.mli", 82, 2976, 3012), 0), Tag1 ("Odoc_name", 20)), 0, 0)], "Odoc_name", [("Odoc_name", ("\248'\1872Z\r\160\146\012'\180V\240\1577f")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

  end
