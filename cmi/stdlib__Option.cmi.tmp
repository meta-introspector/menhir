type 'a t = 'a option = None | Some of 'a
val none : 'a option
val some : 'a -> 'a option
val value : 'a option -> default:'a -> 'a
val get : 'a option -> 'a
val bind : 'a option -> ('a -> 'b option) -> 'b option
val join : 'a option option -> 'a option
val map : ('a -> 'b) -> 'a option -> 'b option
val fold : none:'a -> some:('b -> 'a) -> 'b option -> 'a
val iter : ('a -> unit) -> 'a option -> unit
val is_none : 'a option -> bool
val is_some : 'a option -> bool
val equal : ('a -> 'a -> bool) -> 'a option -> 'a option -> bool
val compare : ('a -> 'a -> int) -> 'a option -> 'a option -> int
val to_result : none:'e -> 'a option -> ('a, 'e) result
val to_list : 'a option -> 'a list("DEBUG:rule", [Tag1 (("t", 410), ([((("a")), 100000000, 0, -91)], 1, Tag1 ([(("None", 270), (0), 0, (("option.mli", 24, 1222, 1246), ("option.mli", 24, 1222, 1250), 0), 0, Tag1 ("Stdlib__Option", 1)); (("Some", 271), ([((("a")), 100000000, 0, -91)]), 0, (("option.mli", 24, 1222, 1251), ("option.mli", 24, 1222, 1263), 0), 0, Tag1 ("Stdlib__Option", 2))], 0), 1, ((Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -91)], (0)), 100000000, 0, -90)), [25], [0], 0, 0, (("option.mli", 24, 1222, 1222), ("option.mli", 24, 1222, 1263), 0), 0, 0, 0, Tag1 ("Stdlib__Option", 0)), 1, 0); (("none", 411), ((Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -89)], (0)), 100000000, 0, -88), 0, (("option.mli", 27, 1340, 1340), ("option.mli", 27, 1340, 1360), 0), 0, Tag1 ("Stdlib__Option", 3)), 0); (("some", 412), ((Tag1 (0, ((("a")), 100000000, 0, -87), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -87)], (0)), 100000000, 0, -86), 0), 100000000, 0, -85), 0, (("option.mli", 30, 1387, 1387), ("option.mli", 30, 1387, 1413), 0), 0, Tag1 ("Stdlib__Option", 4)), 0); (("value", 413), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -83)], (0)), 100000000, 0, -84), (Tag1 (("default"), ((("a")), 100000000, 0, -83), ((("a")), 100000000, 0, -83), 0), 100000000, 0, -82), 0), 100000000, 0, -81), 0, (("option.mli", 33, 1444, 1444), ("option.mli", 33, 1444, 1485), 0), 0, Tag1 ("Stdlib__Option", 5)), 0); (("get", 414), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -79)], (0)), 100000000, 0, -80), ((("a")), 100000000, 0, -79), 0), 100000000, 0, -78), 0, (("option.mli", 36, 1564, 1564), ("option.mli", 36, 1564, 1589), 0), 0, Tag1 ("Stdlib__Option", 6)), 0); (("bind", 415), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -76)], (0)), 100000000, 0, -77), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -76), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -73)], (0)), 100000000, 0, -75), 0), 100000000, 0, -74), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -73)], (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), 0, (("option.mli", 41, 1700, 1700), ("option.mli", 41, 1700, 1754), 0), 0, Tag1 ("Stdlib__Option", 7)), 0); (("join", 416), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -67)], (0)), 100000000, 0, -69)], (0)), 100000000, 0, -68), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -67)], (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("option.mli", 44, 1831, 1831), ("option.mli", 44, 1831, 1871), 0), 0, Tag1 ("Stdlib__Option", 8)), 0); (("map", 417), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -63), ((("b")), 100000000, 0, -61), 0), 100000000, 0, -64), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -63)], (0)), 100000000, 0, -62), (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -61)], (0)), 100000000, 0, -60), 0), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("option.mli", 47, 1951, 1951), ("option.mli", 47, 1951, 1997), 0), 0, Tag1 ("Stdlib__Option", 9)), 0); (("fold", 418), ((Tag1 (("none"), ((("a")), 100000000, 0, -54), (Tag1 (("some"), (Tag1 (0, ((("b")), 100000000, 0, -56), ((("a")), 100000000, 0, -54), 0), 100000000, 0, -57), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -56)], (0)), 100000000, 0, -55), ((("a")), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("option.mli", 50, 2080, 2080), ("option.mli", 50, 2080, 2136), 0), 0, Tag1 ("Stdlib__Option", 10)), 0); (("iter", 419), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -48), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -48)], (0)), 100000000, 0, -47), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("option.mli", 54, 2230, 2230), ("option.mli", 54, 2230, 2274), 0), 0, Tag1 ("Stdlib__Option", 11)), 0); (("is_none", 420), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -43)], (0)), 100000000, 0, -42), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("option.mli", 59, 2387, 2387), ("option.mli", 59, 2387, 2418), 0), 0, Tag1 ("Stdlib__Option", 12)), 0); (("is_some", 421), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -39)], (0)), 100000000, 0, -38), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("option.mli", 62, 2479, 2479), ("option.mli", 62, 2479, 2510), 0), 0, Tag1 ("Stdlib__Option", 13)), 0); (("equal", 422), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -31), (Tag1 (0, ((("a")), 100000000, 0, -31), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -31)], (0)), 100000000, 0, -32), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -31)], (0)), 100000000, 0, -30), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("option.mli", 65, 2573, 2573), ("option.mli", 65, 2573, 2637), 0), 0, Tag1 ("Stdlib__Option", 14)), 0); (("compare", 423), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -21), (Tag1 (0, ((("a")), 100000000, 0, -21), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -21)], (0)), 100000000, 0, -22), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -21)], (0)), 100000000, 0, -20), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("option.mli", 69, 2787, 2787), ("option.mli", 69, 2787, 2851), 0), 0, Tag1 ("Stdlib__Option", 15)), 0); (("to_result", 424), ((Tag1 (("none"), ((("e")), 100000000, 0, -14), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -13)], (0)), 100000000, 0, -15), (Tag3 (Tag1 ((Tag2 ("Stdlib")), "result"), [((("a")), 100000000, 0, -13); ((("e")), 100000000, 0, -14)], (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("option.mli", 75, 3034, 3034), ("option.mli", 75, 3034, 3089), 0), 0, Tag1 ("Stdlib__Option", 16)), 0); (("to_list", 425), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -8)], (0)), 100000000, 0, -9), (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -8)], (0)), 100000000, 0, -7), 0), 100000000, 0, -6), 0, (("option.mli", 79, 3179, 3179), ("option.mli", 79, 3179, 3213), 0), 0, Tag1 ("Stdlib__Option", 17)), 0); (("to_seq", 426), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -4)], (0)), 100000000, 0, -5), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Seq"), "t"), [((("a")), 100000000, 0, -4)], (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("option.mli", 82, 3289, 3289), ("option.mli", 82, 3289, 3323), 0), 0, Tag1 ("Stdlib__Option", 18)), 0)], "Stdlib__Option", [("Stdlib__Option", ("^R\130\196\247\161\173\178\160\143)K\129\026\142\183")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val to_seq : 'a option -> 'a Seq.t
