module CHAR : sig type t = char end
module INT : sig type t = int end
module STRING : sig type t = string end
module TrivialOrderedType :
  functor (T : Fix__.Sigs.TYPE) ->
    sig type t = T.t val compare : t -> t -> int end
module TrivialHashedType :
  functor (T : Fix__.Sigs.TYPE) ->
    sig type t = T.t val equal : t -> t -> bool val hash : t -> int end
module InjectOrderedType :
  functor (U : Fix__.Sigs.OrderedType)
    (I : sig type t val encode : t -> U.t end) ->
    sig type t = I.t val compare : t -> t -> int end
module InjectHashedType :
  functor (U : Fix__.Sigs.HashedType)
    (I : sig type t val encode : t -> U.t end) ->
    sig type t = I.t val equal : t -> t -> bool val hash : t -> int end
module InjectMinimalImperativeMaps :
  functor (M : Fix__.Sigs.MINIMAL_IMPERATIVE_MAPS)
    (I : sig type t val encode : t -> M.key end) ->
    sig
      type key = I.t
      type 'data t
      val create : unit -> 'data t
      val add : key -> 'data -> 'data t -> unit
      val find : key -> 'data t -> 'data
    end
module InjectImperativeMaps :
  functor (M : Fix__.Sigs.IMPERATIVE_MAPS)
    (I : sig type t val encode : t -> M.key end)
    (J : sig val decode : M.key -> I.t end) ->
    sig
      type key = I.t
      type 'data t
      val create : unit -> 'data t
      val add : key -> 'data -> 'data t -> unit
      val find : key -> 'data t -> 'data
      val clear : 'data t -> unit
      val iter : (key -> 'data -> unit) -> 'data t -> unit
    end
module PersistentMapsToImperativeMaps :
  functor (M : Fix__.Sigs.PERSISTENT_MAPS) ->
    sig
      type key = M.key
      type 'data t = 'data M.t ref
      val create : unit -> 'data t
      val add : key -> 'data -> 'data t -> unit
      val find : key -> 'data t -> 'data
      val clear : 'data t -> unit
      val iter : (key -> 'data -> unit) -> 'data t -> unit
    end
module ArraysAsImperativeMaps :
  functor (K : sig val n : int end) ->
    sig
      type key = int
      type 'data t = 'data option array
      val create : unit -> 'data t
      val add : key -> 'data -> 'data t -> unit
      val find : key -> 'data t -> 'data
      val clear : 'data t -> unit
      val iter : (key -> 'data -> unit) -> 'data t -> unit
    end
module HashTablesAsImperativeMaps :
  functor (H : Fix__.Sigs.HashedType) ->
    sig
      type key = H.t
      type 'data t = 'data Hashtbl.Make(H).t
      val create : unit -> 'data t
      val add : key -> 'data -> 'data t -> unit
      val find : key -> 'data t -> 'data
      val clear : 'data t -> unit
      val iter : (key -> 'data -> unit) -> 'data t -> unit
    end
module WeakHashTablesAsImperativeMaps :
  functor (H : Fix__.Sigs.HashedType) ->
    sig
      type key = H.t
      type 'data t = 'data Ephemeron.K1.Make(H).t
      val create : unit -> 'data t
      val add : key -> 'data -> 'data t -> unit
      val find : key -> 'data t -> 'data
    end
module MinimalSemiLattice :
  functor (P : Fix__.Sigs.SEMI_LATTICE) ->
    sig
      type property = P.property
      val leq_join : property -> property -> property("DEBUG:rule", [Tag3 (("CHAR", 937), 0, (Tag1 ([Tag1 (("t", 967), (0, 0, 0, 1, ((Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -2)), 0, 0, 0, 0, (("src/Glue.mli", 24, 1248, 1272), ("src/Glue.mli", 24, 1248, 1285), 0), 0, 1, 0, Tag1 ("Fix__Glue", 0)), 1, 0)]), 0, (("src/Glue.mli", 24, 1248, 1248), ("src/Glue.mli", 24, 1248, 1285), 0), Tag1 ("Fix__Glue", 1)), 0, 0); Tag3 (("INT", 938), 0, (Tag1 ([Tag1 (("t", 968), (0, 0, 0, 1, ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3)), 0, 0, 0, 0, (("src/Glue.mli", 27, 1352, 1375), ("src/Glue.mli", 27, 1352, 1387), 0), 0, 1, 0, Tag1 ("Fix__Glue", 2)), 1, 0)]), 0, (("src/Glue.mli", 27, 1352, 1352), ("src/Glue.mli", 27, 1352, 1387), 0), Tag1 ("Fix__Glue", 3)), 0, 0); Tag3 (("STRING", 939), 0, (Tag1 ([Tag1 (("t", 969), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4)), 0, 0, 0, 0, (("src/Glue.mli", 30, 1457, 1483), ("src/Glue.mli", 30, 1457, 1498), 0), 0, 0, 0, Tag1 ("Fix__Glue", 4)), 1, 0)]), 0, (("src/Glue.mli", 30, 1457, 1457), ("src/Glue.mli", 30, 1457, 1498), 0), Tag1 ("Fix__Glue", 5)), 0, 0); Tag3 (("TrivialOrderedType", 940), 0, (Tag2 (((("T", 966)), (Tag1 (Tag1 ((Tag2 ("Fix__")), "Sigs"), "TYPE"))), Tag1 ([Tag1 (("t", 970), (0, 0, 0, 1, ((Tag3 (Tag1 ((("T", 966)), "t"), 0, (0)), 100000000, 0, -10)), 0, 0, 0, 0, (("src/Glue.mli", 40, 1801, 1825), ("src/Glue.mli", 40, 1801, 1837), 0), 0, 0, 0, Tag1 ("Fix__Glue", 7)), 1, 0); (("compare", 971), ((Tag1 (0, (Tag3 ((("t", 970)), 0, (0)), 100000000, 0, -9), (Tag1 (0, (Tag3 ((("t", 970)), 0, (0)), 100000000, 0, -8), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("map.mli", 54, 2272, 2276), ("map.mli", 54, 2272, 2303), 0), 0, Tag1 ("Stdlib__Map", 1)), 0)])), 0, (("src/Glue.mli", 38, 1762, 1762), ("src/Glue.mli", 40, 1801, 1837), 0), Tag1 ("Fix__Glue", 8)), 0, 0); Tag3 (("TrivialHashedType", 941), 0, (Tag2 (((("T", 965)), (Tag1 (Tag1 ((Tag2 ("Fix__")), "Sigs"), "TYPE"))), Tag1 ([Tag1 (("t", 972), (0, 0, 0, 1, ((Tag3 (Tag1 ((("T", 965)), "t"), 0, (0)), 100000000, 0, -19)), 0, 0, 0, 0, (("src/Glue.mli", 47, 2037, 2060), ("src/Glue.mli", 47, 2037, 2072), 0), 0, 0, 0, Tag1 ("Fix__Glue", 10)), 1, 0); (("equal", 973), ((Tag1 (0, (Tag3 ((("t", 972)), 0, (0)), 100000000, 0, -18), (Tag1 (0, (Tag3 ((("t", 972)), 0, (0)), 100000000, 0, -17), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("hashtbl.mli", 350, 14326, 14330), ("hashtbl.mli", 350, 14326, 14356), 0), 0, Tag1 ("Stdlib__Hashtbl", 32)), 0); (("hash", 974), ((Tag1 (0, (Tag3 ((("t", 972)), 0, (0)), 100000000, 0, -13), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("hashtbl.mli", 353, 14414, 14418), ("hashtbl.mli", 353, 14414, 14437), 0), 0, Tag1 ("Stdlib__Hashtbl", 33)), 0)])), 0, (("src/Glue.mli", 45, 1999, 1999), ("src/Glue.mli", 47, 2037, 2072), 0), Tag1 ("Fix__Glue", 11)), 0, 0); Tag3 (("InjectOrderedType", 942), 0, (Tag2 (((("U", 963)), (Tag1 (Tag1 ((Tag2 ("Fix__")), "Sigs"), "OrderedType"))), Tag2 (((("I", 964)), Tag1 ([Tag1 (("t", 975), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Glue.mli", 57, 2344, 2351), ("src/Glue.mli", 57, 2344, 2379), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 86)), 1, 0); (("encode", 976), ((Tag1 (0, (Tag3 ((("t", 975)), 0, (0)), 100000000, 0, -22), (Tag3 (Tag1 ((("U", 963)), "t"), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("src/Glue.mli", 57, 2344, 2351), ("src/Glue.mli", 57, 2344, 2379), 0), 0, Tag1 ("Fix__Sigs", 88)), 0)])), Tag1 ([Tag1 (("t", 977), (0, 0, 0, 1, ((Tag3 (Tag1 ((("I", 964)), "t"), 0, (0)), 100000000, 0, -28)), 0, 0, 0, 0, (("src/Glue.mli", 58, 2381, 2405), ("src/Glue.mli", 58, 2381, 2417), 0), 0, 0, 0, Tag1 ("Fix__Glue", 15)), 1, 0); (("compare", 978), ((Tag1 (0, (Tag3 ((("t", 977)), 0, (0)), 100000000, 0, -27), (Tag1 (0, (Tag3 ((("t", 977)), 0, (0)), 100000000, 0, -26), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("map.mli", 54, 2272, 2276), ("map.mli", 54, 2272, 2303), 0), 0, Tag1 ("Stdlib__Map", 1)), 0)]))), 0, (("src/Glue.mli", 55, 2299, 2299), ("src/Glue.mli", 58, 2381, 2417), 0), Tag1 ("Fix__Glue", 16)), 0, 0); Tag3 (("InjectHashedType", 943), 0, (Tag2 (((("U", 961)), (Tag1 (Tag1 ((Tag2 ("Fix__")), "Sigs"), "HashedType"))), Tag2 (((("I", 962)), Tag1 ([Tag1 (("t", 979), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Glue.mli", 64, 2576, 2583), ("src/Glue.mli", 64, 2576, 2611), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 86)), 1, 0); (("encode", 980), ((Tag1 (0, (Tag3 ((("t", 979)), 0, (0)), 100000000, 0, -31), (Tag3 (Tag1 ((("U", 961)), "t"), 0, (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("src/Glue.mli", 64, 2576, 2583), ("src/Glue.mli", 64, 2576, 2611), 0), 0, Tag1 ("Fix__Sigs", 88)), 0)])), Tag1 ([Tag1 (("t", 981), (0, 0, 0, 1, ((Tag3 (Tag1 ((("I", 962)), "t"), 0, (0)), 100000000, 0, -40)), 0, 0, 0, 0, (("src/Glue.mli", 65, 2613, 2636), ("src/Glue.mli", 65, 2613, 2648), 0), 0, 0, 0, Tag1 ("Fix__Glue", 20)), 1, 0); (("equal", 982), ((Tag1 (0, (Tag3 ((("t", 981)), 0, (0)), 100000000, 0, -39), (Tag1 (0, (Tag3 ((("t", 981)), 0, (0)), 100000000, 0, -38), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("hashtbl.mli", 350, 14326, 14330), ("hashtbl.mli", 350, 14326, 14356), 0), 0, Tag1 ("Stdlib__Hashtbl", 32)), 0); (("hash", 983), ((Tag1 (0, (Tag3 ((("t", 981)), 0, (0)), 100000000, 0, -34), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0, (("hashtbl.mli", 353, 14414, 14418), ("hashtbl.mli", 353, 14414, 14437), 0), 0, Tag1 ("Stdlib__Hashtbl", 33)), 0)]))), 0, (("src/Glue.mli", 62, 2533, 2533), ("src/Glue.mli", 65, 2613, 2648), 0), Tag1 ("Fix__Glue", 21)), 0, 0); Tag3 (("InjectMinimalImperativeMaps", 944), 0, (Tag2 (((("M", 959)), (Tag1 (Tag1 ((Tag2 ("Fix__")), "Sigs"), "MINIMAL_IMPERATIVE_MAPS"))), Tag2 (((("I", 960)), Tag1 ([Tag1 (("t", 984), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Glue.mli", 71, 2871, 2878), ("src/Glue.mli", 71, 2871, 2908), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 86)), 1, 0); (("encode", 985), ((Tag1 (0, (Tag3 ((("t", 984)), 0, (0)), 100000000, 0, -43), (Tag3 (Tag1 ((("M", 959)), "key"), 0, (0)), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("src/Glue.mli", 71, 2871, 2878), ("src/Glue.mli", 71, 2871, 2908), 0), 0, Tag1 ("Fix__Sigs", 88)), 0)])), Tag1 ([Tag1 (("key", 986), (0, 0, 0, 1, ((Tag3 (Tag1 ((("I", 960)), "t"), 0, (0)), 100000000, 0, -61)), 0, 0, 0, 0, (("src/Glue.mli", 72, 2910, 2946), ("src/Glue.mli", 72, 2910, 2960), 0), 0, 0, 0, Tag1 ("Fix__Glue", 25)), 1, 0); Tag1 (("t", 987), ([((("data")), 100000000, 0, -60)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/Sigs.ml", 72, 2267, 2269), ("src/Sigs.ml", 72, 2267, 2281), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 15)), 1, 0); (("create", 988), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -59), (Tag3 ((("t", 987)), [((("data")), 100000000, 0, -58)], (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("src/Sigs.ml", 75, 2329, 2331), ("src/Sigs.ml", 75, 2329, 2358), 0), 0, Tag1 ("Fix__Sigs", 16)), 0); (("add", 989), ((Tag1 (0, (Tag3 ((("key", 986)), 0, (0)), 100000000, 0, -55), (Tag1 (0, ((("data")), 100000000, 0, -54), (Tag1 (0, (Tag3 ((("t", 987)), [((("data")), 100000000, 0, -54)], (0)), 100000000, 0, -53), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0), 100000000, 0, -50), 0), 100000000, 0, -49), 0, (("src/Sigs.ml", 79, 2460, 2462), ("src/Sigs.ml", 79, 2460, 2502), 0), 0, Tag1 ("Fix__Sigs", 17)), 0); (("find", 990), ((Tag1 (0, (Tag3 ((("key", 986)), 0, (0)), 100000000, 0, -48), (Tag1 (0, (Tag3 ((("t", 987)), [((("data")), 100000000, 0, -46)], (0)), 100000000, 0, -47), ((("data")), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("src/Sigs.ml", 83, 2588, 2590), ("src/Sigs.ml", 83, 2588, 2623), 0), 0, Tag1 ("Fix__Sigs", 18)), 0)]))), 0, (("src/Glue.mli", 69, 2804, 2804), ("src/Glue.mli", 72, 2910, 2960), 0), Tag1 ("Fix__Glue", 26)), 0, 0); Tag3 (("InjectImperativeMaps", 945), 0, (Tag2 (((("M", 956)), (Tag1 (Tag1 ((Tag2 ("Fix__")), "Sigs"), "IMPERATIVE_MAPS"))), Tag2 (((("I", 957)), Tag1 ([Tag1 (("t", 991), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/Glue.mli", 79, 3219, 3226), ("src/Glue.mli", 79, 3219, 3256), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 86)), 1, 0); (("encode", 992), ((Tag1 (0, (Tag3 ((("t", 991)), 0, (0)), 100000000, 0, -64), (Tag3 (Tag1 ((("M", 956)), "key"), 0, (0)), 100000000, 0, -63), 0), 100000000, 0, -62), 0, (("src/Glue.mli", 79, 3219, 3226), ("src/Glue.mli", 79, 3219, 3256), 0), 0, Tag1 ("Fix__Sigs", 88)), 0)])), Tag2 (((("J", 958)), Tag1 ([(("decode", 993), ((Tag1 (0, (Tag3 (Tag1 ((("M", 956)), "key"), 0, (0)), 100000000, 0, -67), (Tag3 (Tag1 ((("I", 957)), "t"), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("src/Glue.mli", 80, 3258, 3269), ("src/Glue.mli", 80, 3258, 3293), 0), 0, Tag1 ("Fix__Glue", 30)), 0)])), Tag1 ([Tag1 (("key", 994), (0, 0, 0, 1, ((Tag3 (Tag1 ((("I", 957)), "t"), 0, (0)), 100000000, 0, -98)), 0, 0, 0, 0, (("src/Glue.mli", 81, 3299, 3327), ("src/Glue.mli", 81, 3299, 3341), 0), 0, 0, 0, Tag1 ("Fix__Glue", 32)), 1, 0); Tag1 (("t", 995), ([((("data")), 100000000, 0, -97)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/Sigs.ml", 72, 2267, 2269), ("src/Sigs.ml", 72, 2267, 2281), 0), 0, 0, 0, Tag1 ("Fix__Sigs", 15)), 1, 0); (("create", 996), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -96), (Tag3 ((("t", 995)), [((("data")), 100000000, 0, -95)], (0)), 100000000, 0, -94), 0), 100000000, 0, -93), 0, (("src/Sigs.ml", 75, 2329, 2331), ("src/Sigs.ml", 75, 2329, 2358), 0), 0, Tag1 ("Fix__Sigs", 16)), 0); (("add", 997), ((Tag1 (0, (Tag3 ((("key", 994)), 0, (0)), 100000000, 0, -92), (Tag1 (0, ((("data")), 100000000, 0, -91), (Tag1 (0, (Tag3 ((("t", 995)), [((("data")), 100000000, 0, -91)], (0)), 100000000, 0, -90), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -89), 0), 100000000, 0, -88), 0), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("src/Sigs.ml", 79, 2460, 2462), ("src/Sigs.ml", 79, 2460, 2502), 0), 0, Tag1 ("Fix__Sigs", 17)), 0); (("find", 998), ((Tag1 (0, (Tag3 ((("key", 994)), 0, (0)), 100000000, 0, -85), (Tag1 (0, (Tag3 ((("t", 995)), [((("data")), 100000000, 0, -83)], (0)), 100000000, 0, -84), ((("data")), 100000000, 0, -83), 0), 100000000, 0, -82), 0), 100000000, 0, -81), 0, (("src/Sigs.ml", 83, 2588, 2590), ("src/Sigs.ml", 83, 2588, 2623), 0), 0, Tag1 ("Fix__Sigs", 18)), 0); (("clear", 999), ((Tag1 (0, (Tag3 ((("t", 995)), [((("data")), 100000000, 0, -80)], (0)), 100000000, 0, -79), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -78), 0), 100000000, 0, -77), 0, (("src/Sigs.ml", 92, 2732, 2734), ("src/Sigs.ml", 92, 2732, 2760), 0), 0, Tag1 ("Fix__Sigs", 20)), 0); (("iter", 1000), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 994)), 0, (0)), 100000000, 0, -76), (Tag1 (0, ((("data")), 100000000, 0, -72), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), 0), 100000000, 0, -73), (Tag1 (0, (Tag3 ((("t", 995)), [((("data")), 100000000, 0, -72)], (0)), 100000000, 0, -71), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("src/Sigs.ml", 95, 2805, 2807), ("src/Sigs.ml", 95, 2805, 2858), 0), 0, Tag1 ("Fix__Sigs", 21)), 0)])))), 0, (("src/Glue.mli", 77, 3167, 3167), ("src/Glue.mli", 81, 3299, 3341), 0), Tag1 ("Fix__Glue", 33)), 0, 0); Tag3 (("PersistentMapsToImperativeMaps", 946), 0, (Tag2 (((("M", 955)), (Tag1 (Tag1 ((Tag2 ("Fix__")), "Sigs"), "PERSISTENT_MAPS"))), Tag1 ([Tag1 (("key", 1001), (0, 0, 0, 1, ((Tag3 (Tag1 ((("M", 955)), "key"), 0, (0)), 100000000, 0, -131)), 0, 0, 0, 0, (("src/Glue.mli", 92, 3697, 3725), ("src/Glue.mli", 92, 3697, 3741), 0), 0, 0, 0, Tag1 ("Fix__Glue", 35)), 1, 0); Tag1 (("t", 1002), ([((("data")), 100000000, 0, -130)], 1, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 (Tag1 ((("M", 955)), "t"), [((("data")), 100000000, 0, -130)], (0)), 100000000, 0, -129)], (0)), 100000000, 0, -128)), [7], [0], 0, 0, (("src/Glue.mli", 93, 3742, 3756), ("src/Glue.mli", 93, 3742, 3784), 0), 0, 0, 0, Tag1 ("Fix__Glue", 36)), 1, 0); (("create", 1003), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -127), (Tag3 ((("t", 1002)), [((("data")), 100000000, 0, -126)], (0)), 100000000, 0, -125), 0), 100000000, 0, -124), 0, (("src/Sigs.ml", 75, 2329, 2331), ("src/Sigs.ml", 75, 2329, 2358), 0), 0, Tag1 ("Fix__Sigs", 16)), 0); (("add", 1004), ((Tag1 (0, (Tag3 ((("key", 1001)), 0, (0)), 100000000, 0, -123), (Tag1 (0, ((("data")), 100000000, 0, -122), (Tag1 (0, (Tag3 ((("t", 1002)), [((("data")), 100000000, 0, -122)], (0)), 100000000, 0, -121), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -120), 0), 100000000, 0, -119), 0), 100000000, 0, -118), 0), 100000000, 0, -117), 0, (("src/Sigs.ml", 79, 2460, 2462), ("src/Sigs.ml", 79, 2460, 2502), 0), 0, Tag1 ("Fix__Sigs", 17)), 0); (("find", 1005), ((Tag1 (0, (Tag3 ((("key", 1001)), 0, (0)), 100000000, 0, -116), (Tag1 (0, (Tag3 ((("t", 1002)), [((("data")), 100000000, 0, -114)], (0)), 100000000, 0, -115), ((("data")), 100000000, 0, -114), 0), 100000000, 0, -113), 0), 100000000, 0, -112), 0, (("src/Sigs.ml", 83, 2588, 2590), ("src/Sigs.ml", 83, 2588, 2623), 0), 0, Tag1 ("Fix__Sigs", 18)), 0); (("clear", 1006), ((Tag1 (0, (Tag3 ((("t", 1002)), [((("data")), 100000000, 0, -111)], (0)), 100000000, 0, -110), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -109), 0), 100000000, 0, -108), 0, (("src/Sigs.ml", 92, 2732, 2734), ("src/Sigs.ml", 92, 2732, 2760), 0), 0, Tag1 ("Fix__Sigs", 20)), 0); (("iter", 1007), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1001)), 0, (0)), 100000000, 0, -107), (Tag1 (0, ((("data")), 100000000, 0, -103), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -106), 0), 100000000, 0, -105), 0), 100000000, 0, -104), (Tag1 (0, (Tag3 ((("t", 1002)), [((("data")), 100000000, 0, -103)], (0)), 100000000, 0, -102), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -101), 0), 100000000, 0, -100), 0), 100000000, 0, -99), 0, (("src/Sigs.ml", 95, 2805, 2807), ("src/Sigs.ml", 95, 2805, 2858), 0), 0, Tag1 ("Fix__Sigs", 21)), 0)])), 0, (("src/Glue.mli", 90, 3635, 3635), ("src/Glue.mli", 93, 3742, 3784), 0), Tag1 ("Fix__Glue", 37)), 0, 0); Tag3 (("ArraysAsImperativeMaps", 947), 0, (Tag2 (((("K", 954)), Tag1 ([(("n", 1008), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -132), 0, (("src/Glue.mli", 98, 3918, 3929), ("src/Glue.mli", 98, 3918, 3939), 0), 0, Tag1 ("Fix__Glue", 38)), 0)])), Tag1 ([Tag1 (("key", 1009), (0, 0, 0, 1, ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -165)), 0, 0, 0, 0, (("src/Glue.mli", 99, 3945, 3970), ("src/Glue.mli", 99, 3945, 3984), 0), 0, 1, 0, Tag1 ("Fix__Glue", 40)), 1, 0); Tag1 (("t", 1010), ([((("data")), 100000000, 0, -164)], 1, 0, 1, ((Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("option", 10)), [((("data")), 100000000, 0, -164)], (0)), 100000000, 0, -163)], (0)), 100000000, 0, -162)), [63], [0], 0, 0, (("src/Glue.mli", 100, 3985, 4010), ("src/Glue.mli", 100, 3985, 4043), 0), 0, 0, 0, Tag1 ("Fix__Glue", 41)), 1, 0); (("create", 1011), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -161), (Tag3 ((("t", 1010)), [((("data")), 100000000, 0, -160)], (0)), 100000000, 0, -159), 0), 100000000, 0, -158), 0, (("src/Sigs.ml", 75, 2329, 2331), ("src/Sigs.ml", 75, 2329, 2358), 0), 0, Tag1 ("Fix__Sigs", 16)), 0); (("add", 1012), ((Tag1 (0, (Tag3 ((("key", 1009)), 0, (0)), 100000000, 0, -157), (Tag1 (0, ((("data")), 100000000, 0, -156), (Tag1 (0, (Tag3 ((("t", 1010)), [((("data")), 100000000, 0, -156)], (0)), 100000000, 0, -155), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -154), 0), 100000000, 0, -153), 0), 100000000, 0, -152), 0), 100000000, 0, -151), 0, (("src/Sigs.ml", 79, 2460, 2462), ("src/Sigs.ml", 79, 2460, 2502), 0), 0, Tag1 ("Fix__Sigs", 17)), 0); (("find", 1013), ((Tag1 (0, (Tag3 ((("key", 1009)), 0, (0)), 100000000, 0, -150), (Tag1 (0, (Tag3 ((("t", 1010)), [((("data")), 100000000, 0, -148)], (0)), 100000000, 0, -149), ((("data")), 100000000, 0, -148), 0), 100000000, 0, -147), 0), 100000000, 0, -146), 0, (("src/Sigs.ml", 83, 2588, 2590), ("src/Sigs.ml", 83, 2588, 2623), 0), 0, Tag1 ("Fix__Sigs", 18)), 0); (("clear", 1014), ((Tag1 (0, (Tag3 ((("t", 1010)), [((("data")), 100000000, 0, -145)], (0)), 100000000, 0, -144), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -143), 0), 100000000, 0, -142), 0, (("src/Sigs.ml", 92, 2732, 2734), ("src/Sigs.ml", 92, 2732, 2760), 0), 0, Tag1 ("Fix__Sigs", 20)), 0); (("iter", 1015), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1009)), 0, (0)), 100000000, 0, -141), (Tag1 (0, ((("data")), 100000000, 0, -137), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -140), 0), 100000000, 0, -139), 0), 100000000, 0, -138), (Tag1 (0, (Tag3 ((("t", 1010)), [((("data")), 100000000, 0, -137)], (0)), 100000000, 0, -136), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -135), 0), 100000000, 0, -134), 0), 100000000, 0, -133), 0, (("src/Sigs.ml", 95, 2805, 2807), ("src/Sigs.ml", 95, 2805, 2858), 0), 0, Tag1 ("Fix__Sigs", 21)), 0)])), 0, (("src/Glue.mli", 97, 3888, 3888), ("src/Glue.mli", 100, 3985, 4043), 0), Tag1 ("Fix__Glue", 42)), 0, 0); Tag3 (("HashTablesAsImperativeMaps", 948), 0, (Tag2 (((("H", 953)), (Tag1 (Tag1 ((Tag2 ("Fix__")), "Sigs"), "HashedType"))), Tag1 ([Tag1 (("key", 1016), (0, 0, 0, 1, ((Tag3 (Tag1 ((("H", 953)), "t"), 0, (0)), 100000000, 0, -197)), 0, 0, 0, 0, (("src/Glue.mli", 105, 4158, 4186), ("src/Glue.mli", 105, 4158, 4200), 0), 0, 0, 0, Tag1 ("Fix__Glue", 44)), 1, 0); Tag1 (("t", 1017), ([((("data")), 100000000, 0, -196)], 1, 0, 1, ((Tag3 (Tag1 (Tag2 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Hashtbl"), "Make"), (("H", 953))), "t"), [((("data")), 100000000, 0, -196)], (0)), 100000000, 0, -195)), [15], [2], 0, 0, (("src/Glue.mli", 106, 4201, 4229), ("src/Glue.mli", 106, 4201, 4267), 0), 0, 0, 0, Tag1 ("Fix__Glue", 45)), 1, 0); (("create", 1018), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -194), (Tag3 ((("t", 1017)), [((("data")), 100000000, 0, -193)], (0)), 100000000, 0, -192), 0), 100000000, 0, -191), 0, (("src/Sigs.ml", 75, 2329, 2331), ("src/Sigs.ml", 75, 2329, 2358), 0), 0, Tag1 ("Fix__Sigs", 16)), 0); (("add", 1019), ((Tag1 (0, (Tag3 ((("key", 1016)), 0, (0)), 100000000, 0, -190), (Tag1 (0, ((("data")), 100000000, 0, -189), (Tag1 (0, (Tag3 ((("t", 1017)), [((("data")), 100000000, 0, -189)], (0)), 100000000, 0, -188), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -187), 0), 100000000, 0, -186), 0), 100000000, 0, -185), 0), 100000000, 0, -184), 0, (("src/Sigs.ml", 79, 2460, 2462), ("src/Sigs.ml", 79, 2460, 2502), 0), 0, Tag1 ("Fix__Sigs", 17)), 0); (("find", 1020), ((Tag1 (0, (Tag3 ((("key", 1016)), 0, (0)), 100000000, 0, -183), (Tag1 (0, (Tag3 ((("t", 1017)), [((("data")), 100000000, 0, -181)], (0)), 100000000, 0, -182), ((("data")), 100000000, 0, -181), 0), 100000000, 0, -180), 0), 100000000, 0, -179), 0, (("src/Sigs.ml", 83, 2588, 2590), ("src/Sigs.ml", 83, 2588, 2623), 0), 0, Tag1 ("Fix__Sigs", 18)), 0); (("clear", 1021), ((Tag1 (0, (Tag3 ((("t", 1017)), [((("data")), 100000000, 0, -178)], (0)), 100000000, 0, -177), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -176), 0), 100000000, 0, -175), 0, (("src/Sigs.ml", 92, 2732, 2734), ("src/Sigs.ml", 92, 2732, 2760), 0), 0, Tag1 ("Fix__Sigs", 20)), 0); (("iter", 1022), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1016)), 0, (0)), 100000000, 0, -174), (Tag1 (0, ((("data")), 100000000, 0, -170), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -173), 0), 100000000, 0, -172), 0), 100000000, 0, -171), (Tag1 (0, (Tag3 ((("t", 1017)), [((("data")), 100000000, 0, -170)], (0)), 100000000, 0, -169), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -168), 0), 100000000, 0, -167), 0), 100000000, 0, -166), 0, (("src/Sigs.ml", 95, 2805, 2807), ("src/Sigs.ml", 95, 2805, 2858), 0), 0, Tag1 ("Fix__Sigs", 21)), 0)])), 0, (("src/Glue.mli", 103, 4105, 4105), ("src/Glue.mli", 106, 4201, 4267), 0), Tag1 ("Fix__Glue", 46)), 0, 0); Tag3 (("WeakHashTablesAsImperativeMaps", 949), 0, (Tag2 (((("H", 952)), (Tag1 (Tag1 ((Tag2 ("Fix__")), "Sigs"), "HashedType"))), Tag1 ([Tag1 (("key", 1023), (0, 0, 0, 1, ((Tag3 (Tag1 ((("H", 952)), "t"), 0, (0)), 100000000, 0, -216)), 0, 0, 0, 0, (("src/Glue.mli", 113, 4520, 4556), ("src/Glue.mli", 113, 4520, 4570), 0), 0, 0, 0, Tag1 ("Fix__Glue", 48)), 1, 0); Tag1 (("t", 1024), ([((("data")), 100000000, 0, -215)], 1, 0, 1, ((Tag3 (Tag1 (Tag2 (Tag1 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Ephemeron"), "K1"), "Make"), (("H", 952))), "t"), [((("data")), 100000000, 0, -215)], (0)), 100000000, 0, -214)), [15], [2], 0, 0, (("src/Glue.mli", 114, 4571, 4607), ("src/Glue.mli", 114, 4571, 4650), 0), 0, 0, 0, Tag1 ("Fix__Glue", 49)), 1, 0); (("create", 1025), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -213), (Tag3 ((("t", 1024)), [((("data")), 100000000, 0, -212)], (0)), 100000000, 0, -211), 0), 100000000, 0, -210), 0, (("src/Sigs.ml", 75, 2329, 2331), ("src/Sigs.ml", 75, 2329, 2358), 0), 0, Tag1 ("Fix__Sigs", 16)), 0); (("add", 1026), ((Tag1 (0, (Tag3 ((("key", 1023)), 0, (0)), 100000000, 0, -209), (Tag1 (0, ((("data")), 100000000, 0, -208), (Tag1 (0, (Tag3 ((("t", 1024)), [((("data")), 100000000, 0, -208)], (0)), 100000000, 0, -207), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -206), 0), 100000000, 0, -205), 0), 100000000, 0, -204), 0), 100000000, 0, -203), 0, (("src/Sigs.ml", 79, 2460, 2462), ("src/Sigs.ml", 79, 2460, 2502), 0), 0, Tag1 ("Fix__Sigs", 17)), 0); (("find", 1027), ((Tag1 (0, (Tag3 ((("key", 1023)), 0, (0)), 100000000, 0, -202), (Tag1 (0, (Tag3 ((("t", 1024)), [((("data")), 100000000, 0, -200)], (0)), 100000000, 0, -201), ((("data")), 100000000, 0, -200), 0), 100000000, 0, -199), 0), 100000000, 0, -198), 0, (("src/Sigs.ml", 83, 2588, 2590), ("src/Sigs.ml", 83, 2588, 2623), 0), 0, Tag1 ("Fix__Sigs", 18)), 0)])), 0, (("src/Glue.mli", 111, 4463, 4463), ("src/Glue.mli", 114, 4571, 4650), 0), Tag1 ("Fix__Glue", 50)), 0, 0); Tag3 (("MinimalSemiLattice", 950), 0, (Tag2 (((("P", 951)), (Tag1 (Tag1 ((Tag2 ("Fix__")), "Sigs"), "SEMI_LATTICE"))), Tag1 ([Tag1 (("property", 1028), (0, 0, 0, 1, ((Tag3 (Tag1 ((("P", 951)), "property"), 0, (0)), 100000000, 0, -222)), 0, 0, 0, 0, (("src/Glue.mli", 125, 4976, 5009), ("src/Glue.mli", 125, 4976, 5035), 0), 0, 0, 0, Tag1 ("Fix__Glue", 52)), 1, 0); (("leq_join", 1029), ((Tag1 (0, (Tag3 ((("property", 1028)), 0, (0)), 100000000, 0, -221), (Tag1 (0, (Tag3 ((("property", 1028)), 0, (0)), 100000000, 0, -220), (Tag3 ((("property", 1028)), 0, (0)), 100000000, 0, -219), 0), 100000000, 0, -218), 0), 100000000, 0, -217), 0, (("src/Sigs.ml", 187, 6080, 6082), ("src/Sigs.ml", 187, 6080, 6128), 0), 0, Tag1 ("Fix__Sigs", 38)), 0)])), 0, (("src/Glue.mli", 123, 4929, 4929), ("src/Glue.mli", 125, 4976, 5035), 0), Tag1 ("Fix__Glue", 53)), 0, 0)], "Fix__Glue", [("Fix__Glue", ("\153\169\249\195\180\154\024\172\245q\142\003\139U\248\019")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Ephemeron", ("\237\202\031\213\183\249\177\168\163j\231\222V\006\218=")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Fix__Sigs", (")\t\216|\023F\223*n\133c\172iG\005\154")); ("Fix__", ("\229-\006A\166\175\208\201Y\246\249k\r\n\155i")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

    end
