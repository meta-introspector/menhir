type alias
val of_alias : alias -> EConstr.t
module AllowedEvars :
  sig
    type t
    val all : t
    val mem : t -> Evar.t -> bool
    val from_pred : (Evar.t -> bool) -> t
    val except : Evar.Set.t -> t
    val remove : Evar.t -> t -> t
  end
type unify_flags = {
  modulo_betaiota : bool;
  open_ts : TransparentState.t;
  closed_ts : TransparentState.t;
  subterm_ts : TransparentState.t;
  allowed_evars : AllowedEvars.t;
  with_cs : bool;
}
type unification_result =
    Success of Evd.evar_map
  | UnifFailure of Evd.evar_map * Pretype_errors.unification_error
val is_success : unification_result -> bool
val is_evar_allowed : unify_flags -> Evar.t -> bool
val expand_vars_in_term :
  Environ.env -> Evd.evar_map -> EConstr.constr -> EConstr.constr
type unification_kind = TypeUnification | TermUnification
type unifier =
    unify_flags ->
    unification_kind ->
    Environ.env ->
    Evd.evar_map ->
    Evd.conv_pb -> EConstr.constr -> EConstr.constr -> unification_result
type conversion_check =
    unify_flags ->
    unification_kind ->
    Environ.env ->
    Evd.evar_map -> Evd.conv_pb -> EConstr.constr -> EConstr.constr -> bool
val instantiate_evar :
  unifier ->
  unify_flags ->
  Environ.env -> Evd.evar_map -> Evar.t -> EConstr.constr -> Evd.evar_map
val evar_define :
  unifier ->
  unify_flags ->
  ?choose:bool ->
  ?imitate_defs:bool ->
  Environ.env ->
  Evd.evar_map ->
  bool option -> EConstr.existential -> EConstr.constr -> Evd.evar_map
val refresh_universes :
  ?status:Evd.rigid ->
  ?onlyalg:bool ->
  ?refreshset:bool ->
  bool option ->
  Environ.env ->
  Evd.evar_map -> EConstr.types -> Evd.evar_map * EConstr.types
val solve_refl :
  ?can_drop:bool ->
  conversion_check ->
  unify_flags ->
  Environ.env ->
  Evd.evar_map ->
  bool option ->
  Evar.t -> EConstr.constr SList.t -> EConstr.constr SList.t -> Evd.evar_map
val solve_evar_evar :
  ?force:bool ->
  (Environ.env ->
   Evd.evar_map ->
   bool option -> EConstr.existential -> EConstr.constr -> Evd.evar_map) ->
  unifier ->
  unify_flags ->
  Environ.env ->
  Evd.evar_map ->
  bool option -> EConstr.existential -> EConstr.existential -> Evd.evar_map
val solve_simple_eqn :
  unifier ->
  unify_flags ->
  ?choose:bool ->
  ?imitate_defs:bool ->
  Environ.env ->
  Evd.evar_map ->
  bool option * EConstr.existential * EConstr.constr -> unification_result
val reconsider_unif_constraints :
  unifier -> unify_flags -> Evd.evar_map -> unification_result
val is_unification_pattern_evar :
  Environ.env ->
  Evd.evar_map ->
  EConstr.existential ->
  EConstr.constr list -> EConstr.constr -> alias list option
val is_unification_pattern :
  Environ.env * int ->
  Evd.evar_map ->
  EConstr.constr ->
  EConstr.constr list -> EConstr.constr -> alias list option
val solve_pattern_eqn :
  Environ.env ->
  Evd.evar_map -> alias list -> EConstr.constr -> EConstr.constr
val noccur_evar :
  Environ.env -> Evd.evar_map -> Evar.t -> EConstr.constr -> bool
exception IllTypedInstance of Environ.env * Evd.evar_map * EConstr.types *
            EConstr.types
val check_evar_instance :
  unifier ->
  unify_flags ->
  Environ.env -> Evd.evar_map -> Evar.t -> EConstr.constr -> Evd.evar_map
val remove_instance_local_defs : Evd.evar_map -> Evar.t -> 'a list -> 'a list
val get_type_of_refresh :
  ?polyprop:bool ->
  ?lax:bool ->
  Environ.env ->
  ("DEBUG:rule", [Tag1 (("alias", 995), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("pretyping/evarsolve.mli", 15, 712, 712), ("pretyping/evarsolve.mli", 15, 712, 722), 0), 0, 0, 0, Tag1 ("Evarsolve", 0)), 1, 0); (("of_alias", 996), ((Tag1 (0, (Tag3 ((("alias", 995)), 0, (0)), 100000000, 0, -286), (Tag3 (Tag1 ((Tag2 ("EConstr")), "t"), 0, (0)), 100000000, 0, -285), 0), 100000000, 0, -284), 0, (("pretyping/evarsolve.mli", 17, 724, 724), ("pretyping/evarsolve.mli", 17, 724, 757), 0), 0, Tag1 ("Evarsolve", 1)), 0); Tag3 (("AllowedEvars", 997), 0, (Tag1 ([Tag1 (("t", 1021), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("pretyping/evarsolve.mli", 21, 786, 788), ("pretyping/evarsolve.mli", 21, 786, 794), 0), 0, 0, 0, Tag1 ("Evarsolve", 2)), 1, 0); (("all", 1022), ((Tag3 ((("t", 1021)), 0, (0)), 100000000, 0, -305), 0, (("pretyping/evarsolve.mli", 24, 869, 871), ("pretyping/evarsolve.mli", 24, 869, 882), 0), 0, Tag1 ("Evarsolve", 3)), 0); (("mem", 1023), ((Tag1 (0, (Tag3 ((("t", 1021)), 0, (0)), 100000000, 0, -304), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -303), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -302), 0), 100000000, 0, -301), 0), 100000000, 0, -300), 0, (("pretyping/evarsolve.mli", 27, 918, 920), ("pretyping/evarsolve.mli", 27, 918, 949), 0), 0, Tag1 ("Evarsolve", 4)), 0); (("from_pred", 1024), ((Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -299), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -298), 0), 100000000, 0, -297), (Tag3 ((("t", 1021)), 0, (0)), 100000000, 0, -296), 0), 100000000, 0, -295), 0, (("pretyping/evarsolve.mli", 30, 1009, 1011), ("pretyping/evarsolve.mli", 30, 1009, 1048), 0), 0, Tag1 ("Evarsolve", 5)), 0); (("except", 1025), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Evar")), "Set"), "t"), 0, (0)), 100000000, 0, -294), (Tag3 ((("t", 1021)), 0, (0)), 100000000, 0, -293), 0), 100000000, 0, -292), 0, (("pretyping/evarsolve.mli", 33, 1113, 1115), ("pretyping/evarsolve.mli", 33, 1113, 1143), 0), 0, Tag1 ("Evarsolve", 6)), 0); (("remove", 1026), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -291), (Tag1 (0, (Tag3 ((("t", 1021)), 0, (0)), 100000000, 0, -290), (Tag3 ((("t", 1021)), 0, (0)), 100000000, 0, -289), 0), 100000000, 0, -288), 0), 100000000, 0, -287), 0, (("pretyping/evarsolve.mli", 36, 1227, 1229), ("pretyping/evarsolve.mli", 36, 1227, 1258), 0), 0, Tag1 ("Evarsolve", 7)), 0)]), 0, (("pretyping/evarsolve.mli", 19, 759, 759), ("pretyping/evarsolve.mli", 39, 1347, 1350), 0), Tag1 ("Evarsolve", 8)), 0, 0); Tag1 (("unify_flags", 998), (0, 0, [[(("modulo_betaiota", 884), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -278), (("pretyping/evarsolve.mli", 42, 1373, 1375), ("pretyping/evarsolve.mli", 42, 1373, 1398), 0), 0, Tag1 ("Evarsolve", 10)); (("open_ts", 893), 0, (Tag3 (Tag1 ((Tag2 ("TransparentState")), "t"), 0, (0)), 100000000, 0, -279), (("pretyping/evarsolve.mli", 44, 1454, 1456), ("pretyping/evarsolve.mli", 44, 1454, 1485), 0), 0, Tag1 ("Evarsolve", 11)); (("closed_ts", 894), 0, (Tag3 (Tag1 ((Tag2 ("TransparentState")), "t"), 0, (0)), 100000000, 0, -280), (("pretyping/evarsolve.mli", 46, 1553, 1555), ("pretyping/evarsolve.mli", 46, 1553, 1586), 0), 0, Tag1 ("Evarsolve", 12)); (("subterm_ts", 895), 0, (Tag3 (Tag1 ((Tag2 ("TransparentState")), "t"), 0, (0)), 100000000, 0, -281), (("pretyping/evarsolve.mli", 48, 1684, 1686), ("pretyping/evarsolve.mli", 48, 1684, 1718), 0), 0, Tag1 ("Evarsolve", 13)); (("allowed_evars", 896), 0, (Tag3 (Tag1 ((("AllowedEvars", 997)), "t"), 0, (0)), 100000000, 0, -282), (("pretyping/evarsolve.mli", 51, 1839, 1841), ("pretyping/evarsolve.mli", 51, 1839, 1872), 0), 0, Tag1 ("Evarsolve", 14)); (("with_cs", 897), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -283), (("pretyping/evarsolve.mli", 53, 1981, 1983), ("pretyping/evarsolve.mli", 53, 1981, 1997), 0), 0, Tag1 ("Evarsolve", 15))]], 1, 0, 0, 0, 0, 0, (("pretyping/evarsolve.mli", 41, 1352, 1352), ("pretyping/evarsolve.mli", 55, 2063, 2064), 0), 0, 0, 0, Tag1 ("Evarsolve", 9)), 1, 0); Tag1 (("unification_result", 999), (0, 0, Tag1 ([(("Success", 899), ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -275)]), 0, (("pretyping/evarsolve.mli", 58, 2092, 2094), ("pretyping/evarsolve.mli", 58, 2092, 2115), 0), 0, Tag1 ("Evarsolve", 17)); (("UnifFailure", 900), ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -276); (Tag3 (Tag1 ((Tag2 ("Pretype_errors")), "unification_error"), 0, (0)), 100000000, 0, -277)]), 0, (("pretyping/evarsolve.mli", 59, 2116, 2118), ("pretyping/evarsolve.mli", 59, 2116, 2178), 0), 0, Tag1 ("Evarsolve", 18))], 0), 1, 0, 0, 0, 0, 0, (("pretyping/evarsolve.mli", 57, 2066, 2066), ("pretyping/evarsolve.mli", 59, 2116, 2178), 0), 0, 0, 0, Tag1 ("Evarsolve", 16)), 1, 0); (("is_success", 1000), ((Tag1 (0, (Tag3 ((("unification_result", 999)), 0, (0)), 100000000, 0, -274), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -273), 0), 100000000, 0, -272), 0, (("pretyping/evarsolve.mli", 61, 2180, 2180), ("pretyping/evarsolve.mli", 61, 2180, 2223), 0), 0, Tag1 ("Evarsolve", 19)), 0); (("is_evar_allowed", 1001), ((Tag1 (0, (Tag3 ((("unify_flags", 998)), 0, (0)), 100000000, 0, -271), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -270), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -269), 0), 100000000, 0, -268), 0), 100000000, 0, -267), 0, (("pretyping/evarsolve.mli", 63, 2225, 2225), ("pretyping/evarsolve.mli", 63, 2225, 2276), 0), 0, Tag1 ("Evarsolve", 20)), 0); (("expand_vars_in_term", 1002), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -266), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -265), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -264), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -263), 0), 100000000, 0, -262), 0), 100000000, 0, -261), 0), 100000000, 0, -260), 0, (("pretyping/evarsolve.mli", 67, 2414, 2414), ("pretyping/evarsolve.mli", 67, 2414, 2475), 0), 0, Tag1 ("Evarsolve", 21)), 0); Tag1 (("unification_kind", 1003), (0, 0, Tag1 ([(("TypeUnification", 941), (0), 0, (("pretyping/evarsolve.mli", 74, 2737, 2739), ("pretyping/evarsolve.mli", 74, 2737, 2756), 0), 0, Tag1 ("Evarsolve", 23)); (("TermUnification", 942), (0), 0, (("pretyping/evarsolve.mli", 75, 2757, 2759), ("pretyping/evarsolve.mli", 75, 2757, 2776), 0), 0, Tag1 ("Evarsolve", 24))], 0), 1, 0, 0, 0, 0, 0, (("pretyping/evarsolve.mli", 73, 2713, 2713), ("pretyping/evarsolve.mli", 75, 2757, 2776), 0), 0, 1, 0, Tag1 ("Evarsolve", 22)), 1, 0); Tag1 (("unifier", 1004), (0, 0, 0, 1, ((Tag1 (0, (Tag3 ((("unify_flags", 998)), 0, (0)), 100000000, 0, -259), (Tag1 (0, (Tag3 ((("unification_kind", 1003)), 0, (0)), 100000000, 0, -258), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -257), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -256), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "conv_pb"), 0, (0)), 100000000, 0, -255), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -254), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -253), (Tag3 ((("unification_result", 999)), 0, (0)), 100000000, 0, -252), 0), 100000000, 0, -251), 0), 100000000, 0, -250), 0), 100000000, 0, -249), 0), 100000000, 0, -248), 0), 100000000, 0, -247), 0), 100000000, 0, -246), 0), 100000000, 0, -245)), 0, 0, 0, 0, (("pretyping/evarsolve.mli", 84, 2965, 2965), ("pretyping/evarsolve.mli", 85, 3015, 3085), 0), 0, 0, 0, Tag1 ("Evarsolve", 25)), 1, 0); Tag1 (("conversion_check", 1005), (0, 0, 0, 1, ((Tag1 (0, (Tag3 ((("unify_flags", 998)), 0, (0)), 100000000, 0, -244), (Tag1 (0, (Tag3 ((("unification_kind", 1003)), 0, (0)), 100000000, 0, -243), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -242), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -241), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "conv_pb"), 0, (0)), 100000000, 0, -240), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -239), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -238), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -237), 0), 100000000, 0, -236), 0), 100000000, 0, -235), 0), 100000000, 0, -234), 0), 100000000, 0, -233), 0), 100000000, 0, -232), 0), 100000000, 0, -231), 0), 100000000, 0, -230)), 0, 0, 0, 0, (("pretyping/evarsolve.mli", 90, 3308, 3308), ("pretyping/evarsolve.mli", 91, 3367, 3423), 0), 0, 0, 0, Tag1 ("Evarsolve", 26)), 1, 0); (("instantiate_evar", 1006), ((Tag1 (0, (Tag3 ((("unifier", 1004)), 0, (0)), 100000000, 0, -229), (Tag1 (0, (Tag3 ((("unify_flags", 998)), 0, (0)), 100000000, 0, -228), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -227), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -226), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -225), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -224), (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -223), 0), 100000000, 0, -222), 0), 100000000, 0, -221), 0), 100000000, 0, -220), 0), 100000000, 0, -219), 0), 100000000, 0, -218), 0), 100000000, 0, -217), 0, (("pretyping/evarsolve.mli", 103, 3789, 3789), ("pretyping/evarsolve.mli", 104, 3857, 3887), 0), 0, Tag1 ("Evarsolve", 27)), 0); (("evar_define", 1007), ((Tag1 (0, (Tag3 ((("unifier", 1004)), 0, (0)), 100000000, 0, -216), (Tag1 (0, (Tag3 ((("unify_flags", 998)), 0, (0)), 100000000, 0, -215), (Tag1 (Tag1 ("choose"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -214)], (0)), 100000000, 0, -213), (Tag1 (Tag1 ("imitate_defs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -212)], (0)), 100000000, 0, -211), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -210), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -209), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -208)], (0)), 100000000, 0, -207), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "existential"), 0, (0)), 100000000, 0, -206), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -205), (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -204), 0), 100000000, 0, -203), 0), 100000000, 0, -202), 0), 100000000, 0, -201), 0), 100000000, 0, -200), 0), 100000000, 0, -199), 0), 100000000, 0, -198), 0), 100000000, 0, -197), 0), 100000000, 0, -196), 0), 100000000, 0, -195), 0, (("pretyping/evarsolve.mli", 113, 4293, 4293), ("pretyping/evarsolve.mli", 114, 4375, 4444), 0), 0, Tag1 ("Evarsolve", 28)), 0); (("refresh_universes", 1008), ((Tag1 (Tag1 ("status"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Evd")), "rigid"), 0, (0)), 100000000, 0, -194)], (0)), 100000000, 0, -193), (Tag1 (Tag1 ("onlyalg"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -192)], (0)), 100000000, 0, -191), (Tag1 (Tag1 ("refreshset"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -190)], (0)), 100000000, 0, -189), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -188)], (0)), 100000000, 0, -187), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -186), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -185), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -184), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -182); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -183)]), 100000000, 0, -181), 0), 100000000, 0, -180), 0), 100000000, 0, -179), 0), 100000000, 0, -178), 0), 100000000, 0, -177), 0), 100000000, 0, -176), 0), 100000000, 0, -175), 0), 100000000, 0, -174), 0, (("pretyping/evarsolve.mli", 117, 4447, 4447), ("pretyping/evarsolve.mli", 124, 4765, 4811), 0), 0, Tag1 ("Evarsolve", 29)), 0); (("solve_refl", 1009), ((Tag1 (Tag1 ("can_drop"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -173)], (0)), 100000000, 0, -172), (Tag1 (0, (Tag3 ((("conversion_check", 1005)), 0, (0)), 100000000, 0, -171), (Tag1 (0, (Tag3 ((("unify_flags", 998)), 0, (0)), 100000000, 0, -170), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -169), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -168), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -167)], (0)), 100000000, 0, -166), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -165), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("SList")), "t"), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -164)], (0)), 100000000, 0, -163), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("SList")), "t"), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -162)], (0)), 100000000, 0, -161), (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -160), 0), 100000000, 0, -159), 0), 100000000, 0, -158), 0), 100000000, 0, -157), 0), 100000000, 0, -156), 0), 100000000, 0, -155), 0), 100000000, 0, -154), 0), 100000000, 0, -153), 0), 100000000, 0, -152), 0), 100000000, 0, -151), 0, (("pretyping/evarsolve.mli", 126, 4813, 4813), ("pretyping/evarsolve.mli", 127, 4903, 4974), 0), 0, Tag1 ("Evarsolve", 30)), 0); (("solve_evar_evar", 1010), ((Tag1 (Tag1 ("force"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -150)], (0)), 100000000, 0, -149), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -148), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -147), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -146)], (0)), 100000000, 0, -145), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "existential"), 0, (0)), 100000000, 0, -144), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -143), (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -142), 0), 100000000, 0, -141), 0), 100000000, 0, -140), 0), 100000000, 0, -139), 0), 100000000, 0, -138), 0), 100000000, 0, -137), (Tag1 (0, (Tag3 ((("unifier", 1004)), 0, (0)), 100000000, 0, -136), (Tag1 (0, (Tag3 ((("unify_flags", 998)), 0, (0)), 100000000, 0, -135), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -134), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -133), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -132)], (0)), 100000000, 0, -131), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "existential"), 0, (0)), 100000000, 0, -130), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "existential"), 0, (0)), 100000000, 0, -129), (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -128), 0), 100000000, 0, -127), 0), 100000000, 0, -126), 0), 100000000, 0, -125), 0), 100000000, 0, -124), 0), 100000000, 0, -123), 0), 100000000, 0, -122), 0), 100000000, 0, -121), 0), 100000000, 0, -120), 0), 100000000, 0, -119), 0, (("pretyping/evarsolve.mli", 129, 4976, 4976), ("pretyping/evarsolve.mli", 132, 5116, 5191), 0), 0, Tag1 ("Evarsolve", 31)), 0); (("solve_simple_eqn", 1011), ((Tag1 (0, (Tag3 ((("unifier", 1004)), 0, (0)), 100000000, 0, -118), (Tag1 (0, (Tag3 ((("unify_flags", 998)), 0, (0)), 100000000, 0, -117), (Tag1 (Tag1 ("choose"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -116)], (0)), 100000000, 0, -115), (Tag1 (Tag1 ("imitate_defs"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -114)], (0)), 100000000, 0, -113), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -112), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -111), (Tag1 (0, (Tag2 ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -108)], (0)), 100000000, 0, -107); (Tag3 (Tag1 ((Tag2 ("EConstr")), "existential"), 0, (0)), 100000000, 0, -109); (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -110)]), 100000000, 0, -106), (Tag3 ((("unification_result", 999)), 0, (0)), 100000000, 0, -105), 0), 100000000, 0, -104), 0), 100000000, 0, -103), 0), 100000000, 0, -102), 0), 100000000, 0, -101), 0), 100000000, 0, -100), 0), 100000000, 0, -99), 0), 100000000, 0, -98), 0, (("pretyping/evarsolve.mli", 154, 6195, 6195), ("pretyping/evarsolve.mli", 155, 6302, 6360), 0), 0, Tag1 ("Evarsolve", 32)), 0); (("reconsider_unif_constraints", 1012), ((Tag1 (0, (Tag3 ((("unifier", 1004)), 0, (0)), 100000000, 0, -97), (Tag1 (0, (Tag3 ((("unify_flags", 998)), 0, (0)), 100000000, 0, -96), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -95), (Tag3 ((("unification_result", 999)), 0, (0)), 100000000, 0, -94), 0), 100000000, 0, -93), 0), 100000000, 0, -92), 0), 100000000, 0, -91), 0, (("pretyping/evarsolve.mli", 157, 6362, 6362), ("pretyping/evarsolve.mli", 157, 6362, 6452), 0), 0, Tag1 ("Evarsolve", 33)), 0); (("is_unification_pattern_evar", 1013), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -90), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -89), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "existential"), 0, (0)), 100000000, 0, -88), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -87)], (0)), 100000000, 0, -86), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -85), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("alias", 995)), 0, (0)), 100000000, 0, -84)], (0)), 100000000, 0, -83)], (0)), 100000000, 0, -82), 0), 100000000, 0, -81), 0), 100000000, 0, -80), 0), 100000000, 0, -79), 0), 100000000, 0, -78), 0), 100000000, 0, -77), 0, (("pretyping/evarsolve.mli", 159, 6454, 6454), ("pretyping/evarsolve.mli", 160, 6537, 6566), 0), 0, Tag1 ("Evarsolve", 34)), 0); (("is_unification_pattern", 1014), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -75); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -76)]), 100000000, 0, -74), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -73), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -72), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -71)], (0)), 100000000, 0, -70), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -69), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("alias", 995)), 0, (0)), 100000000, 0, -68)], (0)), 100000000, 0, -67)], (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0), 100000000, 0, -63), 0), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("pretyping/evarsolve.mli", 162, 6568, 6568), ("pretyping/evarsolve.mli", 163, 6647, 6676), 0), 0, Tag1 ("Evarsolve", 35)), 0); (("solve_pattern_eqn", 1015), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -60), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -59), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("alias", 995)), 0, (0)), 100000000, 0, -58)], (0)), 100000000, 0, -57), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -56), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("pretyping/evarsolve.mli", 165, 6678, 6678), ("pretyping/evarsolve.mli", 165, 6678, 6751), 0), 0, Tag1 ("Evarsolve", 36)), 0); (("noccur_evar", 1016), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -49), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -48), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -47), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("pretyping/evarsolve.mli", 167, 6753, 6753), ("pretyping/evarsolve.mli", 167, 6753, 6814), 0), 0, Tag1 ("Evarsolve", 37)), 0); Tag2 (("IllTypedInstance", 1017), ((Tag3 ("exn", 7)), 0, ([(Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -38); (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -39); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -40); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -41)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Evarsolve", 38)), 2, 0); (("check_evar_instance", 1018), ((Tag1 (0, (Tag3 ((("unifier", 1004)), 0, (0)), 100000000, 0, -37), (Tag1 (0, (Tag3 ((("unify_flags", 998)), 0, (0)), 100000000, 0, -36), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -35), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -34), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -33), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -32), (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0), 100000000, 0, -25), 0, (("pretyping/evarsolve.mli", 171, 6878, 6878), ("pretyping/evarsolve.mli", 172, 6930, 6979), 0), 0, Tag1 ("Evarsolve", 39)), 0); (("remove_instance_local_defs", 1019), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -24), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -23), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -21)], (0)), 100000000, 0, -22), (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -21)], (0)), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("pretyping/evarsolve.mli", 175, 7046, 7046), ("pretyping/evarsolve.mli", 176, 7079, 7121), 0), 0, Tag1 ("Evarsolve", 40)), 0); (("get_type_of_refresh", 1020), ((Tag1 (Tag1 ("polyprop"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -16)], (0)), 100000000, 0, -15), (Tag1 (Tag1 ("lax"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -14)], (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -12), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -11), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -10), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -8); (Tag3 (Tag1 ((Tag2 ("EConstr")), "types"), 0, (0)), 100000000, 0, -9)]), 100000000, 0, -7), 0), 100000000, 0, -6), 0), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("pretyping/evarsolve.mli", 178, 7123, 7123), ("pretyping/evarsolve.mli", 180, 7208, 7229), 0), 0, Tag1 ("Evarsolve", 41)), 0)], "Evarsolve", [("Evarsolve", ("\000&\228\016}j\199\t\229\173\127\024\219\199\184\178")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("UnivSubst", ("\190qu\031mc\130\181\003G]\132\"\219m)")); ("UnivProblem", ("6'\161\018\181\001.\253\000\141a6\171\1727\155")); ("UnivNames", ("%\151_\209%+JM$n\001\232\194n\178N")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UState", ("SD\203\215|\136\n\251\239\208\148\215C\n\167\005")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("Type_errors", ("7\157\162-\214M\206\196\228\191\005v\134\177\144\134")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Store", ("/dT\252\145\179pq\216{\181\206\190K+U")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("Section", ("\245\207\b\021\142v=\155#w\246}\"4b\006")); ("Safe_typing", (")\250?\164\145\132\241\127\186\152h+\145\"\237l")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Pretype_errors", ("\155\229\201\176\163\234\203C\127\227\141\174j\199\200H")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("Nativevalues", ("8:\007\025e\226c,\001\171\146#l\210\171\152")); ("Nativelib", ("V\239\205Y1\147E:,\176\196Hy\1483|")); ("Nativecode", ("\190\185\255\006m\012\210\163\138Rz\247\15283\183")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Monad", ("\244\171T\157\194p\187\160\149\195{\132\222\020\253\148")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Locus", ("_\002\003W\246\181\225\242Uf\139\226\176\174\192I")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hook", ("\183\194\223\003\155\169',\187\240a;E\b\1396")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Genlambda", ("\170}\024\241\141\222\136S\169\219\2212i\134KI")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evd", ("\211\205p\193\216\129r\006\239oN\142ar\196\175")); ("Evar_kinds", ("\023L\186\132\218}\254\221\185\198\220\200h\003{\021")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("EConstr", ("\201aW\156\157;N\004\201V\208\006L\166\211)")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conversion", ("\158\150&\195M\tv\127|\029\158RRK\211A")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CDebug", ("^4\210p7\239!3\138\138\213?\239`\250\157")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
Evd.evar_map -> EConstr.constr -> Evd.evar_map * EConstr.types
