type _ t = ..
exception Unhandled : 'a t -> exn
exception Continuation_already_resumed
external perform : 'a t -> 'a = "%perform"
module Deep :
  sig
    type ('a, 'b) continuation
    val continue : ('a, 'b) continuation -> 'a -> 'b
    val discontinue : ('a, 'b) continuation -> exn -> 'b
    val discontinue_with_backtrace :
      ('a, 'b) continuation -> exn -> Printexc.raw_backtrace -> 'b
    type ('a, 'b) handler = {
      retc : 'a -> 'b;
      exnc : exn -> 'b;
      effc : 'c. 'c t -> (('c, 'b) continuation -> 'b) option;
    }
    val match_with : ('c -> 'a) -> 'c -> ('a, 'b) handler -> 'b
    type 'a effect_handler = {
      effc : 'b. 'b t -> (('b, 'a) continuation -> 'a) option;
    }
    val try_with : ('b -> 'a) -> 'b -> 'a effect_handler -> 'a
    external get_callstack :
      ('a, 'b) continuation -> int -> Printexc.raw_backtrace
      = "caml_get_continuation_callstack"
  end
module Shallow :
  sig
    type ('a, 'b) continuation
    val fiber : ('a -> 'b) -> ('a, 'b) continuation
    type ('a, 'b) handler = {
      retc : 'a -> 'b;
      exnc : exn -> 'b;
      effc : 'c. 'c t -> (('c, 'a) continuation -> 'b) option;
    }
    val continue_with : ('c, 'a) continuation -> 'c -> ('a, 'b) handler -> 'b
    val discontinue_with :
      ('c, 'a) continuation -> exn -> ('a, 'b) handler -> 'b
    val discontinue_with_backtrace :
      ('a, 'b) continuation ->
      exn -> Printexc.raw_backtrace -> ('b, 'c) handler -> 'c
    external get_callstack :
      ('a, 'b) continuation -> int -> Printexc.raw_backtrace
      = "caml_get_continuation_callstack"("DEBUG:rule", [Tag1 (("t", 332), ([((("_")), 100000000, 0, -8)], 1, 1, 1, 0, [15], [0], 0, 0, (("effect.mli", 25, 1201, 1201), ("effect.mli", 25, 1201, 1214), 0), 0, 0, 0, Tag1 ("Stdlib__Effect", 0)), 1, 0); Tag2 (("Unhandled", 333), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((("t", 332)), [((("a")), 100000000, 0, -7)], (0)), 100000000, 0, -6)]), ((Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -5)), 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Stdlib__Effect", 1)), 2, 0); Tag2 (("Continuation_already_resumed", 334), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Stdlib__Effect", 2)), 2, 0); (("perform", 335), ((Tag1 (0, (Tag3 ((("t", 332)), [((("a")), 100000000, 0, -3)], (0)), 100000000, 0, -4), ((("a")), 100000000, 0, -3), 0), 100000000, 0, -2), (("%perform", 1, 1, "", [0], 0)), (("effect.mli", 36, 1508, 1508), ("effect.mli", 36, 1508, 1550), 0), 0, Tag1 ("Stdlib__Effect", 3)), 0); Tag3 (("Deep", 336), 0, (Tag1 ([Tag1 (("continuation", 338), ([((("a")), 100000000, 0, -70); ((("b")), 100000000, 0, -71)], 2, 0, 1, 0, [7; 7], [2; 2], 0, 0, (("effect.mli", 44, 1691, 1693), ("effect.mli", 44, 1691, 1718), 0), 0, 0, 0, Tag1 ("Stdlib__Effect", 4)), 1, 0); (("continue", 339), ((Tag1 (0, (Tag3 ((("continuation", 338)), [((("a")), 100000000, 0, -68); ((("b")), 100000000, 0, -67)], (0)), 100000000, 0, -69), (Tag1 (0, ((("a")), 100000000, 0, -68), ((("b")), 100000000, 0, -67), 0), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("effect.mli", 48, 1838, 1840), ("effect.mli", 48, 1838, 1887), 0), 0, Tag1 ("Stdlib__Effect", 5)), 0); (("discontinue", 340), ((Tag1 (0, (Tag3 ((("continuation", 338)), [((("a")), 100000000, 0, -64); ((("b")), 100000000, 0, -61)], (0)), 100000000, 0, -63), (Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -62), ((("b")), 100000000, 0, -61), 0), 100000000, 0, -60), 0), 100000000, 0, -59), 0, (("effect.mli", 54, 2060, 2062), ("effect.mli", 54, 2060, 2113), 0), 0, Tag1 ("Stdlib__Effect", 6)), 0); (("discontinue_with_backtrace", 341), ((Tag1 (0, (Tag3 ((("continuation", 338)), [((("a")), 100000000, 0, -58); ((("b")), 100000000, 0, -54)], (0)), 100000000, 0, -57), (Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -56), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Printexc"), "raw_backtrace"), 0, (0)), 100000000, 0, -55), ((("b")), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("effect.mli", 61, 2309, 2311), ("effect.mli", 62, 2343, 2407), 0), 0, Tag1 ("Stdlib__Effect", 7)), 0); Tag1 (("handler", 342), ([((("a")), 100000000, 0, -41); ((("b")), 100000000, 0, -40)], 2, [[(("retc", 312), 0, (Tag1 (0, ((("a")), 100000000, 0, -41), ((("b")), 100000000, 0, -40), 0), 100000000, 0, -39), (("effect.mli", 71, 2695, 2701), ("effect.mli", 71, 2695, 2716), 0), 0, Tag1 ("Stdlib__Effect", 9)); (("exnc", 313), 0, (Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -43), ((("b")), 100000000, 0, -40), 0), 100000000, 0, -42), (("effect.mli", 72, 2717, 2723), ("effect.mli", 72, 2717, 2739), 0), 0, Tag1 ("Stdlib__Effect", 10)); (("effc", 314), 0, (Tag10 ((Tag1 (0, (Tag3 ((("t", 332)), [(Tag9 (("c")), 100000000, 0, -45)], (0)), 100000000, 0, -50), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 ((("continuation", 338)), [(Tag9 (("c")), 100000000, 0, -45); ((("b")), 100000000, 0, -40)], (0)), 100000000, 0, -49), ((("b")), 100000000, 0, -40), 0), 100000000, 0, -48)], (0)), 100000000, 0, -47), 0), 100000000, 0, -46), [(Tag9 (("c")), 100000000, 0, -45)]), 100000000, 0, -44), (("effect.mli", 73, 2740, 2746), ("effect.mli", 73, 2740, 2798), 0), 0, Tag1 ("Stdlib__Effect", 11))]], 1, 0, [46; 31], [0; 0], 0, 0, (("effect.mli", 70, 2670, 2672), ("effect.mli", 73, 2740, 2800), 0), 0, 0, 0, Tag1 ("Stdlib__Effect", 8)), 1, 0); (("match_with", 343), ((Tag1 (0, (Tag1 (0, ((("c")), 100000000, 0, -37), ((("a")), 100000000, 0, -36), 0), 100000000, 0, -38), (Tag1 (0, ((("c")), 100000000, 0, -37), (Tag1 (0, (Tag3 ((("handler", 342)), [((("a")), 100000000, 0, -36); ((("b")), 100000000, 0, -34)], (0)), 100000000, 0, -35), ((("b")), 100000000, 0, -34), 0), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("effect.mli", 78, 3023, 3025), ("effect.mli", 78, 3023, 3082), 0), 0, Tag1 ("Stdlib__Effect", 12)), 0); Tag1 (("effect_handler", 344), ([((("a")), 100000000, 0, -28)], 1, [[(("effc", 317), 0, (Tag10 ((Tag1 (0, (Tag3 ((("t", 332)), [(Tag9 (("b")), 100000000, 0, -24)], (0)), 100000000, 0, -30), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 ((("continuation", 338)), [(Tag9 (("b")), 100000000, 0, -24); ((("a")), 100000000, 0, -28)], (0)), 100000000, 0, -29), ((("a")), 100000000, 0, -28), 0), 100000000, 0, -27)], (0)), 100000000, 0, -26), 0), 100000000, 0, -25), [(Tag9 (("b")), 100000000, 0, -24)]), 100000000, 0, -23), (("effect.mli", 82, 3186, 3192), ("effect.mli", 82, 3186, 3246), 0), 0, Tag1 ("Stdlib__Effect", 14))]], 1, 0, [31], [0], 0, 0, (("effect.mli", 81, 3159, 3161), ("effect.mli", 82, 3186, 3248), 0), 0, 0, 1, Tag1 ("Stdlib__Effect", 13)), 1, 0); (("try_with", 345), ((Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -21), ((("a")), 100000000, 0, -19), 0), 100000000, 0, -22), (Tag1 (0, ((("b")), 100000000, 0, -21), (Tag1 (0, (Tag3 ((("effect_handler", 344)), [((("a")), 100000000, 0, -19)], (0)), 100000000, 0, -20), ((("a")), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("effect.mli", 87, 3424, 3426), ("effect.mli", 87, 3424, 3483), 0), 0, Tag1 ("Stdlib__Effect", 15)), 0); (("get_callstack", 346), ((Tag1 (0, (Tag3 ((("continuation", 338)), [((("a")), 100000000, 0, -14); ((("b")), 100000000, 0, -15)], (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -12), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Printexc"), "raw_backtrace"), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), (("caml_get_continuation_callstack", 2, 1, "", [0; 0], 0)), (("effect.mli", 90, 3561, 3563), ("effect.mli", 92, 3648, 3685), 0), 0, Tag1 ("Stdlib__Effect", 16)), 0)]), 0, (("effect.mli", 41, 1649, 1649), ("effect.mli", 95, 3823, 3826), 0), Tag1 ("Stdlib__Effect", 17)), 0, 0); Tag3 (("Shallow", 337), 0, (Tag1 ([Tag1 (("continuation", 347), ([((("a")), 100000000, 0, -124); ((("b")), 100000000, 0, -125)], 2, 0, 1, 0, [7; 7], [2; 2], 0, 0, (("effect.mli", 100, 3875, 3877), ("effect.mli", 100, 3875, 3902), 0), 0, 0, 0, Tag1 ("Stdlib__Effect", 18)), 1, 0); (("fiber", 348), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -121), ((("b")), 100000000, 0, -122), 0), 100000000, 0, -123), (Tag3 ((("continuation", 347)), [((("a")), 100000000, 0, -121); ((("b")), 100000000, 0, -122)], (0)), 100000000, 0, -120), 0), 100000000, 0, -119), 0, (("effect.mli", 104, 4022, 4024), ("effect.mli", 104, 4022, 4071), 0), 0, Tag1 ("Stdlib__Effect", 19)), 0); Tag1 (("handler", 349), ([((("a")), 100000000, 0, -109); ((("b")), 100000000, 0, -108)], 2, [[(("retc", 324), 0, (Tag1 (0, ((("a")), 100000000, 0, -109), ((("b")), 100000000, 0, -108), 0), 100000000, 0, -107), (("effect.mli", 108, 4174, 4180), ("effect.mli", 108, 4174, 4195), 0), 0, Tag1 ("Stdlib__Effect", 21)); (("exnc", 325), 0, (Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -111), ((("b")), 100000000, 0, -108), 0), 100000000, 0, -110), (("effect.mli", 109, 4196, 4202), ("effect.mli", 109, 4196, 4218), 0), 0, Tag1 ("Stdlib__Effect", 22)); (("effc", 326), 0, (Tag10 ((Tag1 (0, (Tag3 ((("t", 332)), [(Tag9 (("c")), 100000000, 0, -113)], (0)), 100000000, 0, -118), (Tag3 ((Tag3 ("option", 10)), [(Tag1 (0, (Tag3 ((("continuation", 347)), [(Tag9 (("c")), 100000000, 0, -113); ((("a")), 100000000, 0, -109)], (0)), 100000000, 0, -117), ((("b")), 100000000, 0, -108), 0), 100000000, 0, -116)], (0)), 100000000, 0, -115), 0), 100000000, 0, -114), [(Tag9 (("c")), 100000000, 0, -113)]), 100000000, 0, -112), (("effect.mli", 110, 4219, 4225), ("effect.mli", 110, 4219, 4277), 0), 0, Tag1 ("Stdlib__Effect", 23))]], 1, 0, [47; 25], [0; 0], 0, 0, (("effect.mli", 107, 4149, 4151), ("effect.mli", 110, 4219, 4279), 0), 0, 0, 0, Tag1 ("Stdlib__Effect", 20)), 1, 0); (("continue_with", 350), ((Tag1 (0, (Tag3 ((("continuation", 347)), [((("c")), 100000000, 0, -105); ((("a")), 100000000, 0, -104)], (0)), 100000000, 0, -106), (Tag1 (0, ((("c")), 100000000, 0, -105), (Tag1 (0, (Tag3 ((("handler", 349)), [((("a")), 100000000, 0, -104); ((("b")), 100000000, 0, -102)], (0)), 100000000, 0, -103), ((("b")), 100000000, 0, -102), 0), 100000000, 0, -101), 0), 100000000, 0, -100), 0), 100000000, 0, -99), 0, (("effect.mli", 115, 4502, 4504), ("effect.mli", 115, 4502, 4575), 0), 0, Tag1 ("Stdlib__Effect", 24)), 0); (("discontinue_with", 351), ((Tag1 (0, (Tag3 ((("continuation", 347)), [((("c")), 100000000, 0, -98); ((("a")), 100000000, 0, -95)], (0)), 100000000, 0, -97), (Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -96), (Tag1 (0, (Tag3 ((("handler", 349)), [((("a")), 100000000, 0, -95); ((("b")), 100000000, 0, -93)], (0)), 100000000, 0, -94), ((("b")), 100000000, 0, -93), 0), 100000000, 0, -92), 0), 100000000, 0, -91), 0), 100000000, 0, -90), 0, (("effect.mli", 123, 4778, 4780), ("effect.mli", 123, 4778, 4855), 0), 0, Tag1 ("Stdlib__Effect", 25)), 0); (("discontinue_with_backtrace", 352), ((Tag1 (0, (Tag3 ((("continuation", 347)), [((("a")), 100000000, 0, -89); ((("b")), 100000000, 0, -85)], (0)), 100000000, 0, -88), (Tag1 (0, (Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -87), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Printexc"), "raw_backtrace"), 0, (0)), 100000000, 0, -86), (Tag1 (0, (Tag3 ((("handler", 349)), [((("b")), 100000000, 0, -85); ((("c")), 100000000, 0, -83)], (0)), 100000000, 0, -84), ((("c")), 100000000, 0, -83), 0), 100000000, 0, -82), 0), 100000000, 0, -81), 0), 100000000, 0, -80), 0), 100000000, 0, -79), 0, (("effect.mli", 131, 5075, 5077), ("effect.mli", 133, 5171, 5196), 0), 0, Tag1 ("Stdlib__Effect", 26)), 0); (("get_callstack", 353), ((Tag1 (0, (Tag3 ((("continuation", 347)), [((("a")), 100000000, 0, -77); ((("b")), 100000000, 0, -78)], (0)), 100000000, 0, -76), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -75), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Printexc"), "raw_backtrace"), 0, (0)), 100000000, 0, -74), 0), 100000000, 0, -73), 0), 100000000, 0, -72), (("caml_get_continuation_callstack", 2, 1, "", [0; 0], 0)), (("effect.mli", 142, 5485, 5487), ("effect.mli", 144, 5572, 5609), 0), 0, Tag1 ("Stdlib__Effect", 27)), 0)]), 0, (("effect.mli", 97, 3828, 3828), ("effect.mli", 147, 5747, 5750), 0), Tag1 ("Stdlib__Effect", 28)), 0, 0)], "Stdlib__Effect", [("Stdlib__Effect", ("l\209!jJ\222K\174\231M\242\005\143T\178C")); ("Stdlib__Printexc", ("\217u\168\235\179oi\167\235\255\025\017%d\192s")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [((0, "unstable", "The Effect interface may change in incompatible ways in the future.", 0, 1))])

  end
