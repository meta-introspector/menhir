type loc = {
  loc_start : Lexing.position;
  loc_end : Lexing.position;
  loc_ghost : bool;
}
val ghost_loc_in_file : string -> loc
type field_usage_warning = Unused | Not_read | Not_mutated
type constructor_usage_warning =
    Unused
  | Not_constructed
  | Only_exported_private
type t =
    Comment_start
  | Comment_not_end
  | Fragile_match of string
  | Ignored_partial_application
  | Labels_omitted of string list
  | Method_override of string list
  | Partial_match of string
  | Missing_record_field_pattern of string
  | Non_unit_statement
  | Redundant_case
  | Redundant_subpat
  | Instance_variable_override of string list
  | Illegal_backslash
  | Implicit_public_methods of string list
  | Unerasable_optional_argument
  | Undeclared_virtual_method of string
  | Not_principal of string
  | Non_principal_labels of string
  | Ignored_extra_argument
  | Nonreturning_statement
  | Preprocessor of string
  | Useless_record_with
  | Bad_module_name of string
  | All_clauses_guarded
  | Unused_var of string
  | Unused_var_strict of string
  | Wildcard_arg_to_constant_constr
  | Eol_in_string
  | Duplicate_definitions of string * string * string * string
  | Unused_value_declaration of string
  | Unused_open of string
  | Unused_type_declaration of string
  | Unused_for_index of string
  | Unused_ancestor of string
  | Unused_constructor of string * constructor_usage_warning
  | Unused_extension of string * bool * constructor_usage_warning
  | Unused_rec_flag
  | Name_out_of_scope of string * string list * bool
  | Ambiguous_name of string list * string list * bool * string
  | Disambiguated_name of string
  | Nonoptional_label of string
  | Open_shadow_identifier of string * string
  | Open_shadow_label_constructor of string * string
  | Bad_env_variable of string * string
  | Attribute_payload of string * string
  | Eliminated_optional_arguments of string list
  | No_cmi_file of string * string option
  | Unexpected_docstring of bool
  | Wrong_tailcall_expectation of bool
  | Fragile_literal_pattern
  | Misplaced_attribute of string
  | Duplicated_attribute of string
  | Inlining_impossible of string
  | Unreachable_case
  | Ambiguous_var_in_pattern_guard of string list
  | No_cmx_file of string
  | Flambda_assignment_to_non_mutable_value
  | Unused_module of string
  | Unboxable_type_in_prim_decl of string
  | Constraint_on_gadt
  | Erroneous_printed_signature of string
  | Unsafe_array_syntax_without_parsing
  | Redefining_unit of string
  | Unused_open_bang of string
  | Unused_functor_parameter of string
  | Match_on_mutable_state_prevent_uncurry
  | Unused_field of string * field_usage_warning
  | Missing_mli
  | Unused_tmc_attribute
  | Tmc_breaks_tailcall
  | Generative_application_expects_unit
type alert = { kind : string; message : string; def : loc; use : loc; }
val parse_options : bool -> string -> alert option
val parse_alert_option : string -> unit
val without_warnings : (unit -> 'a) -> 'a
val is_active : t -> bool
val is_error : t -> bool
val defaults_w : string
val defaults_warn_error : string
type reporting_information = {
  id : string;
  message : string;
  is_error : bool;
  sub_locs : (loc * string) list;
}
val report : t -> [ `Active of reporting_information | `Inactive ]
val report_alert : alert -> [ `Active of reporting_information | `Inactive ]
exception Errors
val check_fatal : unit -> unit
val reset_fatal : unit -> unit
val help_warnings : unit -> unit
type state
val backup : unit -> state
val restore : state -> unit
val with_state : state -> (unit -> 'a) -> 'a
val mk_lazy : (unit -> 'a) -> 'a Lazy.t
type description = {
  number : int;
  names : string list;
  description : string;
  since : Sys.ocaml_release_info option;
}("DEBUG:rule", [Tag1 (("loc", 597), (0, 0, [[(("loc_start", 294), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -154), (("utils/warnings.mli", 24, 1208, 1210), ("utils/warnings.mli", 24, 1208, 1237), 0), 0, Tag1 ("Warnings", 1)); (("loc_end", 295), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -155), (("utils/warnings.mli", 25, 1238, 1240), ("utils/warnings.mli", 25, 1238, 1265), 0), 0, Tag1 ("Warnings", 2)); (("loc_ghost", 296), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -156), (("utils/warnings.mli", 26, 1266, 1268), ("utils/warnings.mli", 26, 1266, 1284), 0), 0, Tag1 ("Warnings", 3))]], 1, 0, 0, 0, 0, 0, (("utils/warnings.mli", 23, 1195, 1195), ("utils/warnings.mli", 27, 1285, 1286), 0), 0, 0, 0, Tag1 ("Warnings", 0)), 1, 0); (("ghost_loc_in_file", 598), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -153), (Tag3 ((("loc", 597)), 0, (0)), 100000000, 0, -152), 0), 100000000, 0, -151), 0, (("utils/warnings.mli", 29, 1288, 1288), ("utils/warnings.mli", 29, 1288, 1325), 0), 0, Tag1 ("Warnings", 4)), 0); Tag1 (("field_usage_warning", 599), (0, 0, Tag1 ([(("Unused", 323), (0), 0, (("utils/warnings.mli", 33, 1413, 1415), ("utils/warnings.mli", 33, 1413, 1423), 0), 0, Tag1 ("Warnings", 6)); (("Not_read", 324), (0), 0, (("utils/warnings.mli", 34, 1424, 1426), ("utils/warnings.mli", 34, 1424, 1436), 0), 0, Tag1 ("Warnings", 7)); (("Not_mutated", 325), (0), 0, (("utils/warnings.mli", 35, 1437, 1439), ("utils/warnings.mli", 35, 1437, 1452), 0), 0, Tag1 ("Warnings", 8))], 0), 1, 0, 0, 0, 0, 0, (("utils/warnings.mli", 32, 1386, 1386), ("utils/warnings.mli", 35, 1437, 1452), 0), 0, 1, 0, Tag1 ("Warnings", 5)), 1, 0); Tag1 (("constructor_usage_warning", 600), (0, 0, Tag1 ([(("Unused", 327), (0), 0, (("utils/warnings.mli", 38, 1487, 1489), ("utils/warnings.mli", 38, 1487, 1497), 0), 0, Tag1 ("Warnings", 10)); (("Not_constructed", 328), (0), 0, (("utils/warnings.mli", 39, 1498, 1500), ("utils/warnings.mli", 39, 1498, 1517), 0), 0, Tag1 ("Warnings", 11)); (("Only_exported_private", 329), (0), 0, (("utils/warnings.mli", 40, 1518, 1520), ("utils/warnings.mli", 40, 1518, 1543), 0), 0, Tag1 ("Warnings", 12))], 0), 1, 0, 0, 0, 0, 0, (("utils/warnings.mli", 37, 1454, 1454), ("utils/warnings.mli", 40, 1518, 1543), 0), 0, 1, 0, Tag1 ("Warnings", 9)), 1, 0); Tag1 (("t", 601), (0, 0, Tag1 ([(("Comment_start", 331), (0), 0, (("utils/warnings.mli", 43, 1554, 1556), ("utils/warnings.mli", 43, 1554, 1571), 0), 0, Tag1 ("Warnings", 14)); (("Comment_not_end", 332), (0), 0, (("utils/warnings.mli", 44, 1607, 1609), ("utils/warnings.mli", 44, 1607, 1626), 0), 0, Tag1 ("Warnings", 15)); (("Fragile_match", 333), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -78)]), 0, (("utils/warnings.mli", 46, 1713, 1715), ("utils/warnings.mli", 46, 1713, 1740), 0), 0, Tag1 ("Warnings", 16)); (("Ignored_partial_application", 334), (0), 0, (("utils/warnings.mli", 47, 1766, 1768), ("utils/warnings.mli", 47, 1766, 1797), 0), 0, Tag1 ("Warnings", 17)); (("Labels_omitted", 335), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -80)], (0)), 100000000, 0, -79)]), 0, (("utils/warnings.mli", 48, 1819, 1821), ("utils/warnings.mli", 48, 1819, 1852), 0), 0, Tag1 ("Warnings", 18)); (("Method_override", 336), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -82)], (0)), 100000000, 0, -81)]), 0, (("utils/warnings.mli", 49, 1872, 1874), ("utils/warnings.mli", 49, 1872, 1906), 0), 0, Tag1 ("Warnings", 19)); (("Partial_match", 337), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -83)]), 0, (("utils/warnings.mli", 50, 1925, 1927), ("utils/warnings.mli", 50, 1925, 1952), 0), 0, Tag1 ("Warnings", 20)); (("Missing_record_field_pattern", 338), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -84)]), 0, (("utils/warnings.mli", 51, 1978, 1980), ("utils/warnings.mli", 51, 1978, 2020), 0), 0, Tag1 ("Warnings", 21)); (("Non_unit_statement", 339), (0), 0, (("utils/warnings.mli", 52, 2031, 2033), ("utils/warnings.mli", 52, 2031, 2053), 0), 0, Tag1 ("Warnings", 22)); (("Redundant_case", 340), (0), 0, (("utils/warnings.mli", 53, 2084, 2086), ("utils/warnings.mli", 53, 2084, 2102), 0), 0, Tag1 ("Warnings", 23)); (("Redundant_subpat", 341), (0), 0, (("utils/warnings.mli", 54, 2137, 2139), ("utils/warnings.mli", 54, 2137, 2157), 0), 0, Tag1 ("Warnings", 24)); (("Instance_variable_override", 342), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -86)], (0)), 100000000, 0, -85)]), 0, (("utils/warnings.mli", 55, 2190, 2192), ("utils/warnings.mli", 55, 2190, 2235), 0), 0, Tag1 ("Warnings", 25)); (("Illegal_backslash", 343), (0), 0, (("utils/warnings.mli", 56, 2245, 2247), ("utils/warnings.mli", 56, 2245, 2266), 0), 0, Tag1 ("Warnings", 26)); (("Implicit_public_methods", 344), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -88)], (0)), 100000000, 0, -87)]), 0, (("utils/warnings.mli", 57, 2298, 2300), ("utils/warnings.mli", 57, 2298, 2340), 0), 0, Tag1 ("Warnings", 27)); (("Unerasable_optional_argument", 345), (0), 0, (("utils/warnings.mli", 58, 2351, 2353), ("utils/warnings.mli", 58, 2351, 2383), 0), 0, Tag1 ("Warnings", 28)); (("Undeclared_virtual_method", 346), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -89)]), 0, (("utils/warnings.mli", 59, 2404, 2406), ("utils/warnings.mli", 59, 2404, 2443), 0), 0, Tag1 ("Warnings", 29)); (("Not_principal", 347), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -90)]), 0, (("utils/warnings.mli", 60, 2457, 2459), ("utils/warnings.mli", 60, 2457, 2484), 0), 0, Tag1 ("Warnings", 30)); (("Non_principal_labels", 348), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -91)]), 0, (("utils/warnings.mli", 61, 2510, 2512), ("utils/warnings.mli", 61, 2510, 2544), 0), 0, Tag1 ("Warnings", 31)); (("Ignored_extra_argument", 349), (0), 0, (("utils/warnings.mli", 62, 2563, 2565), ("utils/warnings.mli", 62, 2563, 2589), 0), 0, Tag1 ("Warnings", 32)); (("Nonreturning_statement", 350), (0), 0, (("utils/warnings.mli", 63, 2616, 2618), ("utils/warnings.mli", 63, 2616, 2642), 0), 0, Tag1 ("Warnings", 33)); (("Preprocessor", 351), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -92)]), 0, (("utils/warnings.mli", 64, 2669, 2671), ("utils/warnings.mli", 64, 2669, 2695), 0), 0, Tag1 ("Warnings", 34)); (("Useless_record_with", 352), (0), 0, (("utils/warnings.mli", 65, 2722, 2724), ("utils/warnings.mli", 65, 2722, 2745), 0), 0, Tag1 ("Warnings", 35)); (("Bad_module_name", 353), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -93)]), 0, (("utils/warnings.mli", 66, 2775, 2777), ("utils/warnings.mli", 66, 2775, 2804), 0), 0, Tag1 ("Warnings", 36)); (("All_clauses_guarded", 354), (0), 0, (("utils/warnings.mli", 67, 2828, 2830), ("utils/warnings.mli", 67, 2828, 2851), 0), 0, Tag1 ("Warnings", 37)); (("Unused_var", 355), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -94)]), 0, (("utils/warnings.mli", 68, 2895, 2897), ("utils/warnings.mli", 68, 2895, 2919), 0), 0, Tag1 ("Warnings", 38)); (("Unused_var_strict", 356), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -95)]), 0, (("utils/warnings.mli", 69, 2948, 2950), ("utils/warnings.mli", 69, 2948, 2979), 0), 0, Tag1 ("Warnings", 39)); (("Wildcard_arg_to_constant_constr", 357), (0), 0, (("utils/warnings.mli", 70, 3001, 3003), ("utils/warnings.mli", 70, 3001, 3036), 0), 0, Tag1 ("Warnings", 40)); (("Eol_in_string", 358), (0), 0, (("utils/warnings.mli", 71, 3054, 3056), ("utils/warnings.mli", 71, 3054, 3071), 0), 0, Tag1 ("Warnings", 41)); (("Duplicate_definitions", 359), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -96); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -97); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -98); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -99)]), 0, (("utils/warnings.mli", 72, 3107, 3109), ("utils/warnings.mli", 72, 3107, 3169), 0), 0, Tag1 ("Warnings", 42)); (("Unused_value_declaration", 360), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -100)]), 0, (("utils/warnings.mli", 73, 3179, 3181), ("utils/warnings.mli", 73, 3179, 3217), 0), 0, Tag1 ("Warnings", 43)); (("Unused_open", 361), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -101)]), 0, (("utils/warnings.mli", 74, 3232, 3234), ("utils/warnings.mli", 74, 3232, 3257), 0), 0, Tag1 ("Warnings", 44)); (("Unused_type_declaration", 362), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -102)]), 0, (("utils/warnings.mli", 75, 3285, 3287), ("utils/warnings.mli", 75, 3285, 3322), 0), 0, Tag1 ("Warnings", 45)); (("Unused_for_index", 363), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -103)]), 0, (("utils/warnings.mli", 76, 3338, 3340), ("utils/warnings.mli", 76, 3338, 3368), 0), 0, Tag1 ("Warnings", 46)); (("Unused_ancestor", 364), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -104)]), 0, (("utils/warnings.mli", 77, 3391, 3393), ("utils/warnings.mli", 77, 3391, 3420), 0), 0, Tag1 ("Warnings", 47)); (("Unused_constructor", 365), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -105); (Tag3 ((("constructor_usage_warning", 600)), 0, (0)), 100000000, 0, -106)]), 0, (("utils/warnings.mli", 78, 3444, 3446), ("utils/warnings.mli", 78, 3444, 3504), 0), 0, Tag1 ("Warnings", 48)); (("Unused_extension", 366), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -107); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -108); (Tag3 ((("constructor_usage_warning", 600)), 0, (0)), 100000000, 0, -109)]), 0, (("utils/warnings.mli", 79, 3514, 3516), ("utils/warnings.mli", 79, 3514, 3579), 0), 0, Tag1 ("Warnings", 49)); (("Unused_rec_flag", 367), (0), 0, (("utils/warnings.mli", 80, 3589, 3591), ("utils/warnings.mli", 80, 3589, 3608), 0), 0, Tag1 ("Warnings", 50)); (("Name_out_of_scope", 368), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -110); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -112)], (0)), 100000000, 0, -111); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -113)]), 0, (("utils/warnings.mli", 81, 3642, 3644), ("utils/warnings.mli", 81, 3642, 3694), 0), 0, Tag1 ("Warnings", 51)); (("Ambiguous_name", 369), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -115)], (0)), 100000000, 0, -114); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -117)], (0)), 100000000, 0, -116); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -118); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -119)]), 0, (("utils/warnings.mli", 82, 3706, 3708), ("utils/warnings.mli", 82, 3706, 3769), 0), 0, Tag1 ("Warnings", 52)); (("Disambiguated_name", 370), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -120)]), 0, (("utils/warnings.mli", 83, 3779, 3781), ("utils/warnings.mli", 83, 3779, 3811), 0), 0, Tag1 ("Warnings", 53)); (("Nonoptional_label", 371), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -121)]), 0, (("utils/warnings.mli", 84, 3832, 3834), ("utils/warnings.mli", 84, 3832, 3863), 0), 0, Tag1 ("Warnings", 54)); (("Open_shadow_identifier", 372), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -122); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -123)]), 0, (("utils/warnings.mli", 85, 3885, 3887), ("utils/warnings.mli", 85, 3885, 3930), 0), 0, Tag1 ("Warnings", 55)); (("Open_shadow_label_constructor", 373), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -124); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -125)]), 0, (("utils/warnings.mli", 86, 3940, 3942), ("utils/warnings.mli", 86, 3940, 3992), 0), 0, Tag1 ("Warnings", 56)); (("Bad_env_variable", 374), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -126); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -127)]), 0, (("utils/warnings.mli", 87, 4002, 4004), ("utils/warnings.mli", 87, 4002, 4041), 0), 0, Tag1 ("Warnings", 57)); (("Attribute_payload", 375), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -128); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -129)]), 0, (("utils/warnings.mli", 88, 4055, 4057), ("utils/warnings.mli", 88, 4055, 4095), 0), 0, Tag1 ("Warnings", 58)); (("Eliminated_optional_arguments", 376), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -131)], (0)), 100000000, 0, -130)]), 0, (("utils/warnings.mli", 89, 4108, 4110), ("utils/warnings.mli", 89, 4108, 4156), 0), 0, Tag1 ("Warnings", 59)); (("No_cmi_file", 377), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -132); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -134)], (0)), 100000000, 0, -133)]), 0, (("utils/warnings.mli", 90, 4166, 4168), ("utils/warnings.mli", 90, 4166, 4207), 0), 0, Tag1 ("Warnings", 60)); (("Unexpected_docstring", 378), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -135)]), 0, (("utils/warnings.mli", 91, 4219, 4221), ("utils/warnings.mli", 91, 4219, 4251), 0), 0, Tag1 ("Warnings", 61)); (("Wrong_tailcall_expectation", 379), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -136)]), 0, (("utils/warnings.mli", 92, 4272, 4274), ("utils/warnings.mli", 92, 4272, 4310), 0), 0, Tag1 ("Warnings", 62)); (("Fragile_literal_pattern", 380), (0), 0, (("utils/warnings.mli", 93, 4325, 4327), ("utils/warnings.mli", 93, 4325, 4352), 0), 0, Tag1 ("Warnings", 63)); (("Misplaced_attribute", 381), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -137)]), 0, (("utils/warnings.mli", 94, 4378, 4380), ("utils/warnings.mli", 94, 4378, 4411), 0), 0, Tag1 ("Warnings", 64)); (("Duplicated_attribute", 382), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -138)]), 0, (("utils/warnings.mli", 95, 4431, 4433), ("utils/warnings.mli", 95, 4431, 4465), 0), 0, Tag1 ("Warnings", 65)); (("Inlining_impossible", 383), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -139)]), 0, (("utils/warnings.mli", 96, 4484, 4486), ("utils/warnings.mli", 96, 4484, 4517), 0), 0, Tag1 ("Warnings", 66)); (("Unreachable_case", 384), (0), 0, (("utils/warnings.mli", 97, 4537, 4539), ("utils/warnings.mli", 97, 4537, 4557), 0), 0, Tag1 ("Warnings", 67)); (("Ambiguous_var_in_pattern_guard", 385), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -141)], (0)), 100000000, 0, -140)]), 0, (("utils/warnings.mli", 98, 4590, 4592), ("utils/warnings.mli", 98, 4590, 4639), 0), 0, Tag1 ("Warnings", 68)); (("No_cmx_file", 386), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -142)]), 0, (("utils/warnings.mli", 99, 4649, 4651), ("utils/warnings.mli", 99, 4649, 4674), 0), 0, Tag1 ("Warnings", 69)); (("Flambda_assignment_to_non_mutable_value", 387), (0), 0, (("utils/warnings.mli", 100, 4702, 4704), ("utils/warnings.mli", 100, 4702, 4745), 0), 0, Tag1 ("Warnings", 70)); (("Unused_module", 388), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -143)]), 0, (("utils/warnings.mli", 101, 4755, 4757), ("utils/warnings.mli", 101, 4755, 4782), 0), 0, Tag1 ("Warnings", 71)); (("Unboxable_type_in_prim_decl", 389), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -144)]), 0, (("utils/warnings.mli", 102, 4808, 4810), ("utils/warnings.mli", 102, 4808, 4849), 0), 0, Tag1 ("Warnings", 72)); (("Constraint_on_gadt", 390), (0), 0, (("utils/warnings.mli", 103, 4861, 4863), ("utils/warnings.mli", 103, 4861, 4883), 0), 0, Tag1 ("Warnings", 73)); (("Erroneous_printed_signature", 391), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -145)]), 0, (("utils/warnings.mli", 104, 4914, 4916), ("utils/warnings.mli", 104, 4914, 4955), 0), 0, Tag1 ("Warnings", 74)); (("Unsafe_array_syntax_without_parsing", 392), (0), 0, (("utils/warnings.mli", 105, 4967, 4969), ("utils/warnings.mli", 105, 4967, 5006), 0), 0, Tag1 ("Warnings", 75)); (("Redefining_unit", 393), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -146)]), 0, (("utils/warnings.mli", 106, 5020, 5022), ("utils/warnings.mli", 106, 5020, 5049), 0), 0, Tag1 ("Warnings", 76)); (("Unused_open_bang", 394), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -147)]), 0, (("utils/warnings.mli", 107, 5073, 5075), ("utils/warnings.mli", 107, 5073, 5103), 0), 0, Tag1 ("Warnings", 77)); (("Unused_functor_parameter", 395), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -148)]), 0, (("utils/warnings.mli", 108, 5126, 5128), ("utils/warnings.mli", 108, 5126, 5164), 0), 0, Tag1 ("Warnings", 78)); (("Match_on_mutable_state_prevent_uncurry", 396), (0), 0, (("utils/warnings.mli", 109, 5179, 5181), ("utils/warnings.mli", 109, 5179, 5221), 0), 0, Tag1 ("Warnings", 79)); (("Unused_field", 397), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -149); (Tag3 ((("field_usage_warning", 599)), 0, (0)), 100000000, 0, -150)]), 0, (("utils/warnings.mli", 110, 5232, 5234), ("utils/warnings.mli", 110, 5232, 5280), 0), 0, Tag1 ("Warnings", 80)); (("Missing_mli", 398), (0), 0, (("utils/warnings.mli", 111, 5290, 5292), ("utils/warnings.mli", 111, 5290, 5305), 0), 0, Tag1 ("Warnings", 81)); (("Unused_tmc_attribute", 399), (0), 0, (("utils/warnings.mli", 112, 5343, 5345), ("utils/warnings.mli", 112, 5343, 5367), 0), 0, Tag1 ("Warnings", 82)); (("Tmc_breaks_tailcall", 400), (0), 0, (("utils/warnings.mli", 113, 5396, 5398), ("utils/warnings.mli", 113, 5396, 5419), 0), 0, Tag1 ("Warnings", 83)); (("Generative_application_expects_unit", 401), (0), 0, (("utils/warnings.mli", 114, 5449, 5451), ("utils/warnings.mli", 114, 5449, 5488), 0), 0, Tag1 ("Warnings", 84))], 0), 1, 0, 0, 0, 0, 0, (("utils/warnings.mli", 42, 1545, 1545), ("utils/warnings.mli", 114, 5449, 5488), 0), 0, 0, 0, Tag1 ("Warnings", 13)), 1, 0); Tag1 (("alert", 602), (0, 0, [[(("kind", 403), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -74), (("utils/warnings.mli", 116, 5503, 5517), ("utils/warnings.mli", 116, 5503, 5529), 0), 0, Tag1 ("Warnings", 86)); (("message", 404), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -75), (("utils/warnings.mli", 116, 5503, 5530), ("utils/warnings.mli", 116, 5503, 5545), 0), 0, Tag1 ("Warnings", 87)); (("def", 405), 0, (Tag3 ((("loc", 597)), 0, (0)), 100000000, 0, -76), (("utils/warnings.mli", 116, 5503, 5546), ("utils/warnings.mli", 116, 5503, 5554), 0), 0, Tag1 ("Warnings", 88)); (("use", 406), 0, (Tag3 ((("loc", 597)), 0, (0)), 100000000, 0, -77), (("utils/warnings.mli", 116, 5503, 5555), ("utils/warnings.mli", 116, 5503, 5562), 0), 0, Tag1 ("Warnings", 89))]], 1, 0, 0, 0, 0, 0, (("utils/warnings.mli", 116, 5503, 5503), ("utils/warnings.mli", 116, 5503, 5563), 0), 0, 0, 0, Tag1 ("Warnings", 85)), 1, 0); (("parse_options", 603), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -73), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -72), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("alert", 602)), 0, (0)), 100000000, 0, -71)], (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0), 100000000, 0, -68), 0, (("utils/warnings.mli", 118, 5565, 5565), ("utils/warnings.mli", 118, 5565, 5615), 0), 0, Tag1 ("Warnings", 90)), 0); (("parse_alert_option", 604), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -67), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("utils/warnings.mli", 120, 5617, 5617), ("utils/warnings.mli", 120, 5617, 5655), 0), 0, Tag1 ("Warnings", 91)), 0); (("without_warnings", 605), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -64), ((("a")), 100000000, 0, -62), 0), 100000000, 0, -63), ((("a")), 100000000, 0, -62), 0), 100000000, 0, -61), 0, (("utils/warnings.mli", 126, 5822, 5822), ("utils/warnings.mli", 126, 5822, 5863), 0), 0, Tag1 ("Warnings", 92)), 0); (("is_active", 606), ((Tag1 (0, (Tag3 ((("t", 601)), 0, (0)), 100000000, 0, -60), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -59), 0), 100000000, 0, -58), 0, (("utils/warnings.mli", 129, 5927, 5927), ("utils/warnings.mli", 129, 5927, 5952), 0), 0, Tag1 ("Warnings", 93)), 0); (("is_error", 607), ((Tag1 (0, (Tag3 ((("t", 601)), 0, (0)), 100000000, 0, -57), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -56), 0), 100000000, 0, -55), 0, (("utils/warnings.mli", 130, 5953, 5953), ("utils/warnings.mli", 130, 5953, 5977), 0), 0, Tag1 ("Warnings", 94)), 0); (("defaults_w", 608), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -54), 0, (("utils/warnings.mli", 132, 5979, 5979), ("utils/warnings.mli", 132, 5979, 6002), 0), 0, Tag1 ("Warnings", 95)), 0); (("defaults_warn_error", 609), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -53), 0, (("utils/warnings.mli", 133, 6003, 6003), ("utils/warnings.mli", 133, 6003, 6035), 0), 0, Tag1 ("Warnings", 96)), 0); Tag1 (("reporting_information", 610), (0, 0, [[(("id", 415), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -46), (("utils/warnings.mli", 136, 6066, 6070), ("utils/warnings.mli", 137, 6082, 6085), 0), 0, Tag1 ("Warnings", 98)); (("message", 416), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -47), (("utils/warnings.mli", 137, 6082, 6086), ("utils/warnings.mli", 138, 6103, 6106), 0), 0, Tag1 ("Warnings", 99)); (("is_error", 417), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -48), (("utils/warnings.mli", 138, 6103, 6107), ("utils/warnings.mli", 139, 6123, 6126), 0), 0, Tag1 ("Warnings", 100)); (("sub_locs", 418), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("loc", 597)), 0, (0)), 100000000, 0, -51); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -52)]), 100000000, 0, -50)], (0)), 100000000, 0, -49), (("utils/warnings.mli", 139, 6123, 6127), ("utils/warnings.mli", 139, 6123, 6158), 0), 0, Tag1 ("Warnings", 101))]], 1, 0, 0, 0, 0, 0, (("utils/warnings.mli", 135, 6037, 6037), ("utils/warnings.mli", 140, 6159, 6162), 0), 0, 0, 0, Tag1 ("Warnings", 97)), 1, 0); (("report", 611), ((Tag1 (0, (Tag3 ((("t", 601)), 0, (0)), 100000000, 0, -45), (Tag8 (([("Active", (((Tag3 ((("reporting_information", 610)), 0, (0)), 100000000, 0, -44)))); ("Inactive", (0))], (0, 100000000, 0, -43), 1, 0, 0)), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("utils/warnings.mli", 142, 6164, 6164), ("utils/warnings.mli", 142, 6164, 6230), 0), 0, Tag1 ("Warnings", 102)), 0); (("report_alert", 612), ((Tag1 (0, (Tag3 ((("alert", 602)), 0, (0)), 100000000, 0, -40), (Tag8 (([("Active", (((Tag3 ((("reporting_information", 610)), 0, (0)), 100000000, 0, -39)))); ("Inactive", (0))], (0, 100000000, 0, -38), 1, 0, 0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("utils/warnings.mli", 143, 6231, 6231), ("utils/warnings.mli", 143, 6231, 6307), 0), 0, Tag1 ("Warnings", 103)), 0); Tag2 (("Errors", 613), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Warnings", 104)), 2, 0); (("check_fatal", 614), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -35), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -34), 0), 100000000, 0, -33), 0, (("utils/warnings.mli", 147, 6327, 6327), ("utils/warnings.mli", 147, 6327, 6357), 0), 0, Tag1 ("Warnings", 105)), 0); (("reset_fatal", 615), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -32), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("utils/warnings.mli", 148, 6358, 6358), ("utils/warnings.mli", 148, 6358, 6387), 0), 0, Tag1 ("Warnings", 106)), 0); (("help_warnings", 616), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -29), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("utils/warnings.mli", 150, 6389, 6389), ("utils/warnings.mli", 150, 6389, 6420), 0), 0, Tag1 ("Warnings", 107)), 0); Tag1 (("state", 617), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("utils/warnings.mli", 152, 6422, 6422), ("utils/warnings.mli", 152, 6422, 6432), 0), 0, 0, 0, Tag1 ("Warnings", 108)), 1, 0); (("backup", 618), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -26), (Tag3 ((("state", 617)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("utils/warnings.mli", 153, 6433, 6433), ("utils/warnings.mli", 153, 6433, 6458), 0), 0, Tag1 ("Warnings", 109)), 0); (("restore", 619), ((Tag1 (0, (Tag3 ((("state", 617)), 0, (0)), 100000000, 0, -23), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("utils/warnings.mli", 154, 6459, 6459), ("utils/warnings.mli", 154, 6459, 6485), 0), 0, Tag1 ("Warnings", 110)), 0); (("with_state", 620), ((Tag1 (0, (Tag3 ((("state", 617)), 0, (0)), 100000000, 0, -20), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -19), ((("a")), 100000000, 0, -17), 0), 100000000, 0, -18), ((("a")), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("utils/warnings.mli", 155, 6486, 6486), ("utils/warnings.mli", 155, 6486, 6530), 0), 0, Tag1 ("Warnings", 111)), 0); (("mk_lazy", 621), ((Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -14), ((("a")), 100000000, 0, -12), 0), 100000000, 0, -13), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lazy"), "t"), [((("a")), 100000000, 0, -12)], (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("utils/warnings.mli", 156, 6531, 6531), ("utils/warnings.mli", 156, 6531, 6569), 0), 0, Tag1 ("Warnings", 112)), 0); Tag1 (("description", 622), (0, 0, [[(("number", 440), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -4), (("utils/warnings.mli", 161, 6722, 6726), ("utils/warnings.mli", 161, 6722, 6739), 0), 0, Tag1 ("Warnings", 114)); (("names", 441), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6)], (0)), 100000000, 0, -5), (("utils/warnings.mli", 162, 6740, 6744), ("utils/warnings.mli", 162, 6740, 6764), 0), 0, Tag1 ("Warnings", 115)); (("description", 442), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7), (("utils/warnings.mli", 163, 6765, 6769), ("utils/warnings.mli", 163, 6765, 6790), 0), 0, Tag1 ("Warnings", 116)); (("since", 517), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Sys"), "ocaml_release_info"), 0, (0)), 100000000, 0, -9)], (0)), 100000000, 0, -8), (("utils/warnings.mli", 164, 6791, 6795), ("utils/warnings.mli", 164, 6791, 6833), 0), 0, Tag1 ("Warnings", 117))]], 1, 0, 0, 0, 0, 0, (("utils/warnings.mli", 160, 6703, 6703), ("utils/warnings.mli", 164, 6791, 6835), 0), 0, 0, 0, Tag1 ("Warnings", 113)), 1, 0); (("descriptions", 623), ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("description", 622)), 0, (0)), 100000000, 0, -3)], (0)), 100000000, 0, -2), 0, (("utils/warnings.mli", 166, 6837, 6837), ("utils/warnings.mli", 166, 6837, 6872), 0), 0, Tag1 ("Warnings", 118)), 0)], "Warnings", [("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val descriptions : description list
