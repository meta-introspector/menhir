type ('a, 'witness) t = private {
  compare : 'a -> 'a -> int;
  sexp_of_t : 'a -> Base__.Sexp.t;
}
type ('a, 'b) comparator = ('a, 'b) t
module type S =
  sig
    type t
    type comparator_witness
    val comparator : (t, comparator_witness) comparator
  end
module type S1 =
  sig
    type 'a t
    type comparator_witness
    val comparator : ('a t, comparator_witness) comparator
  end
module type S_fc =
  sig
    type comparable_t
    type comparator_witness
    val comparator : (comparable_t, comparator_witness) comparator
  end
val make :
  compare:('a -> 'a -> int) ->
  sexp_of_t:('a -> Base__.Sexp.t) ->
  (module S_fc with type comparable_t = 'a)
module Poly :
  sig
    type 'a t = 'a
    type comparator_witness
    val comparator : ('a t, comparator_witness) comparator
  end
module Module :
  sig
    type ('a, 'b) t =
        (module S with type comparator_witness = 'b and type t = 'a)
  end
module S_to_S1 :
  functor (S : S) ->
    sig
      type 'a t = S.t
      type comparator_witness = S.comparator_witness
      val comparator : ('a t, comparator_witness) comparator
    end
module Make :
  functor
    (M : sig
           type t
           val compare : t Base__Ppx_compare_lib.compare
           val sexp_of_t : t -> Sexplib0.Sexp.t
         end)
    ->
    sig
      type comparator_witness
      val comparator : (M.t, comparator_witness) comparator
    end
module Make1 :
  functor
    (M : sig
           type 'a t
           val compare : 'a t -> 'a t -> int
           val sexp_of_t : 'a t -> Base__.Sexp.t
         end)
    ->
    sig
      type comparator_witness
      val comparator : ('a M.t, comparator_witness) comparator
    end
module type Derived =
  sig
    type 'a t
    type !'cmp comparator_witness
    val comparator :
      ('a, 'cmp) comparator -> ('a t, 'cmp comparator_witness) comparator
  end
module Derived :
  functor
    (M : sig
           type 'a t
           val compare :
             'a Base__Ppx_compare_lib.compare ->
             'a t Base__Ppx_compare_lib.compare
           val sexp_of_t : ('a -> Sexplib0.Sexp.t) -> 'a t -> Sexplib0.Sexp.t
         end)
    ->
    sig
      type !'cmp comparator_witness
      val comparator :
        ('a, 'cmp) comparator -> ('a M.t, 'cmp comparator_witness) comparator
    end
module type Derived2 =
  sig
    type ('a, 'b) t
    type (!'cmp_a, !'cmp_b) comparator_witness
    val comparator :
      ('a, 'cmp_a) comparator ->
      ('b, 'cmp_b) comparator ->
      (('a, 'b) t, ('cmp_a, 'cmp_b) comparator_witness) comparator
  end
module Derived2 :
  functor
    (M : sig
           type ('a, 'b) t
           val compare :
             'a Base__Ppx_compare_lib.compare ->
             'b Base__Ppx_compare_lib.compare ->
             ('a, 'b) t Base__Ppx_compare_lib.compare
           val sexp_of_t :
             ('a -> Sexplib0.Sexp.t) ->
             ('b -> Sexplib0.Sexp.t) -> ('a, 'b) t -> Sexplib0.Sexp.t
         end)
    ->
    sig
      type (!'cmp_a, !'cmp_b) comparator_witness
      val comparator :
        ('a, 'cmp_a) comparator ->
        ('b, 'cmp_b) comparator ->
        (('a, 'b) M.t, ('cmp_a, 'cmp_b) comparator_witness) comparator
    end
module type Derived_phantom =
  sig
    type ('a, 'b) t
    type 'cmp comparator_witness
    val comparator :
      ('a, 'cmp) comparator ->
      (('a, 'b) t, 'cmp comparator_witness) comparator
  end
module Derived_phantom :
  functor
    (M : sig
           type ('a, 'b) t
           val compare : ('a -> 'a -> int) -> ('a, 'b) t -> ('a, 'b) t -> int
           val sexp_of_t :
             ('a -> Base__.Sexp.t) -> ('a, 'b) t -> Base__.Sexp.t
         end)
    ->
    sig
      type 'cmp comparator_witness
      val comparator :
        ('a, 'cmp) comparator ->
        (('a, 'b) M.t, 'cmp comparator_witness) comparator
    end
module type Derived2_phantom =
  sig
    type ('a, 'b, 'c) t
    type (!'cmp_a, !'cmp_b) comparator_witness
    val comparator :
      ('a, 'cmp_a) comparator ->
      ('b, 'cmp_b) comparator ->
      (('a, 'b, 'c) t, ('cmp_a, 'cmp_b) comparator_witness) comparator
  end
module Derived2_phantom :
  functor
    (M : sig
           type ('a, 'b, 'c) t
           val compare :
             ('a -> 'a -> int) ->
             ('b -> 'b -> int) -> ('a, 'b, 'c) t -> ('a, 'b, 'c) t -> int
           val sexp_of_t :
             ('a -> Base__.Sexp.t) ->
             ('b -> Base__.Sexp.t) -> ('a, 'b, 'c) t -> Base__.Sexp.t
         end)
    ->
    sig
      type (!'cmp_a, !'cmp_b) comparator_witness
      val comparator :
        ('a, 'cmp_a) comparator ->
        ('b, 'cmp_b) comparator ->
        (('a, 'b, 'c) M.t, ('cmp_a, 'cmp_b) comparator_witness) comparator
    end("DEBUG:rule", [Tag1 (("t", 1099), ([((("a")), 100000000, 0, -17); ((("witness")), 100000000, 0, -20)], 2, [[(("compare", 783), 0, (Tag1 (0, ((("a")), 100000000, 0, -17), (Tag1 (0, ((("a")), 100000000, 0, -17), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), (("src/comparator.mli", 10, 381, 385), ("src/comparator.mli", 11, 411, 414), 0), 0, Tag1 ("Base__Comparator", 1)); (("sexp_of_t", 808), 0, (Tag1 (0, ((("a")), 100000000, 0, -17), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), (("src/comparator.mli", 11, 411, 415), ("src/comparator.mli", 11, 411, 439), 0), 0, Tag1 ("Base__Comparator", 2))]], 0, 0, [47; 15], [0; 0], 0, 0, (("src/comparator.mli", 9, 349, 349), ("src/comparator.mli", 12, 440, 443), 0), 0, 0, 0, Tag1 ("Base__Comparator", 0)), 1, 0); Tag1 (("comparator", 1100), ([((("a")), 100000000, 0, -12); ((("b")), 100000000, 0, -13)], 2, 0, 1, ((Tag3 ((("t", 1099)), [((("a")), 100000000, 0, -12); ((("b")), 100000000, 0, -13)], (0)), 100000000, 0, -11)), [47; 15], [0; 0], 0, 0, (("src/comparator.mli", 14, 445, 445), ("src/comparator.mli", 14, 445, 482), 0), 0, 0, 0, Tag1 ("Base__Comparator", 3)), 1, 0); Tag4 (("S", 1101), ((Tag1 ([Tag1 (("t", 1125), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/comparator.mli", 17, 504, 506), ("src/comparator.mli", 17, 504, 512), 0), 0, 0, 0, Tag1 ("Base__Comparator", 4)), 1, 0); Tag1 (("comparator_witness", 1126), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/comparator.mli", 18, 513, 515), ("src/comparator.mli", 18, 513, 538), 0), 0, 0, 0, Tag1 ("Base__Comparator", 5)), 1, 0); (("comparator", 1127), ((Tag3 ((("comparator", 1100)), [(Tag3 ((("t", 1125)), 0, (0)), 100000000, 0, -22); (Tag3 ((("comparator_witness", 1126)), 0, (0)), 100000000, 0, -23)], (0)), 100000000, 0, -21), 0, (("src/comparator.mli", 20, 540, 542), ("src/comparator.mli", 20, 540, 593), 0), 0, Tag1 ("Base__Comparator", 6)), 0)])), 0, (("src/comparator.mli", 16, 484, 484), ("src/comparator.mli", 21, 594, 597), 0), Tag1 ("Base__Comparator", 7)), 0); Tag4 (("S1", 1102), ((Tag1 ([Tag1 (("t", 1128), ([((("a")), 100000000, 0, -28)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/comparator.mli", 24, 620, 622), ("src/comparator.mli", 24, 620, 631), 0), 0, 0, 0, Tag1 ("Base__Comparator", 8)), 1, 0); Tag1 (("comparator_witness", 1129), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/comparator.mli", 25, 632, 634), ("src/comparator.mli", 25, 632, 657), 0), 0, 0, 0, Tag1 ("Base__Comparator", 9)), 1, 0); (("comparator", 1130), ((Tag3 ((("comparator", 1100)), [(Tag3 ((("t", 1128)), [((("a")), 100000000, 0, -26)], (0)), 100000000, 0, -25); (Tag3 ((("comparator_witness", 1129)), 0, (0)), 100000000, 0, -27)], (0)), 100000000, 0, -24), 0, (("src/comparator.mli", 27, 659, 661), ("src/comparator.mli", 27, 659, 715), 0), 0, Tag1 ("Base__Comparator", 10)), 0)])), 0, (("src/comparator.mli", 23, 599, 599), ("src/comparator.mli", 28, 716, 719), 0), Tag1 ("Base__Comparator", 11)), 0); Tag4 (("S_fc", 1103), ((Tag1 ([Tag1 (("comparable_t", 1131), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/comparator.mli", 32, 745, 747), ("src/comparator.mli", 32, 745, 764), 0), 0, 0, 0, Tag1 ("Base__Comparator", 12)), 1, 0); Tag1 (("comparator_witness", 1132), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/comparator.mli", 34, 766, 776), ("src/comparator.mli", 34, 766, 805), 0), 0, 0, 0, Tag1 ("Base__Comparator", 5)), 1, 0); (("comparator", 1133), ((Tag3 ((("comparator", 1100)), [(Tag3 ((("comparable_t", 1131)), 0, (0)), 100000000, 0, -30); (Tag3 ((("comparator_witness", 1132)), 0, (0)), 100000000, 0, -31)], (0)), 100000000, 0, -29), 0, (("src/comparator.mli", 34, 766, 776), ("src/comparator.mli", 34, 766, 805), 0), 0, Tag1 ("Base__Comparator", 6)), 0)])), 0, (("src/comparator.mli", 31, 722, 722), ("src/comparator.mli", 35, 806, 809), 0), Tag1 ("Base__Comparator", 14)), 0); (("make", 1104), ((Tag1 (("compare"), (Tag1 (0, ((("a")), 100000000, 0, -5), (Tag1 (0, ((("a")), 100000000, 0, -5), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), (Tag1 (("sexp_of_t"), (Tag1 (0, ((("a")), 100000000, 0, -5), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -7), 0), 100000000, 0, -6), (Tag11 ((("S_fc", 1103)), [(("comparable_t"), ((("a")), 100000000, 0, -5))]), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/comparator.mli", 44, 1042, 1042), ("src/comparator.mli", 47, 1112, 1158), 0), 0, Tag1 ("Base__Comparator", 16)), 0); Tag3 (("Poly", 1105), 0, (Tag1 ([Tag1 (("t", 1134), ([((("a")), 100000000, 0, -36)], 1, 0, 1, (((("a")), 100000000, 0, -36)), [25], [1], 0, 0, (("src/comparator.mli", 49, 1160, 1182), ("src/comparator.mli", 49, 1160, 1196), 0), 0, 0, 0, Tag1 ("Base__Comparator", 17)), 1, 0); Tag1 (("comparator_witness", 1135), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/comparator.mli", 25, 632, 634), ("src/comparator.mli", 25, 632, 657), 0), 0, 0, 0, Tag1 ("Base__Comparator", 9)), 1, 0); (("comparator", 1136), ((Tag3 ((("comparator", 1100)), [(Tag3 ((("t", 1134)), [((("a")), 100000000, 0, -34)], (0)), 100000000, 0, -33); (Tag3 ((("comparator_witness", 1135)), 0, (0)), 100000000, 0, -35)], (0)), 100000000, 0, -32), 0, (("src/comparator.mli", 27, 659, 661), ("src/comparator.mli", 27, 659, 715), 0), 0, Tag1 ("Base__Comparator", 10)), 0)]), 0, (("src/comparator.mli", 49, 1160, 1160), ("src/comparator.mli", 49, 1160, 1196), 0), Tag1 ("Base__Comparator", 18)), 0, 0); Tag3 (("Module", 1106), 0, (Tag1 ([Tag1 (("t", 1137), ([((("a")), 100000000, 0, -39); ((("b")), 100000000, 0, -38)], 2, 0, 1, ((Tag11 ((("S", 1101)), [(("comparator_witness"), ((("b")), 100000000, 0, -38)); (("t"), ((("a")), 100000000, 0, -39))]), 100000000, 0, -37)), [63; 63], [0; 0], 0, 0, (("src/comparator.mli", 53, 1287, 1289), ("src/comparator.mli", 53, 1287, 1367), 0), 0, 0, 0, Tag1 ("Base__Comparator", 19)), 1, 0)]), 0, (("src/comparator.mli", 51, 1198, 1198), ("src/comparator.mli", 54, 1368, 1371), 0), Tag1 ("Base__Comparator", 22)), 0, 0); Tag3 (("S_to_S1", 1107), 0, (Tag2 (((("S", 1124)), ((("S", 1101)))), Tag1 ([Tag1 (("t", 1138), ([((("a")), 100000000, 0, -46)], 1, 0, 1, ((Tag3 (Tag1 ((("S", 1124)), "t"), 0, (0)), 100000000, 0, -45)), [0], [0], 0, 0, (("src/comparator.mli", 57, 1398, 1408), ("src/comparator.mli", 57, 1398, 1423), 0), 0, 0, 0, Tag1 ("Base__Comparator", 24)), 1, 0); Tag1 (("comparator_witness", 1139), (0, 0, 0, 1, ((Tag3 (Tag1 ((("S", 1124)), "comparator_witness"), 0, (0)), 100000000, 0, -44)), 0, 0, 0, 0, (("src/comparator.mli", 57, 1398, 1429), ("src/comparator.mli", 57, 1398, 1475), 0), 0, 0, 0, Tag1 ("Base__Comparator", 25)), 1, 0); (("comparator", 1140), ((Tag3 ((("comparator", 1100)), [(Tag3 ((("t", 1138)), [((("a")), 100000000, 0, -42)], (0)), 100000000, 0, -41); (Tag3 ((("comparator_witness", 1139)), 0, (0)), 100000000, 0, -43)], (0)), 100000000, 0, -40), 0, (("src/comparator.mli", 27, 659, 661), ("src/comparator.mli", 27, 659, 715), 0), 0, Tag1 ("Base__Comparator", 10)), 0)])), 0, (("src/comparator.mli", 56, 1373, 1373), ("src/comparator.mli", 57, 1398, 1475), 0), Tag1 ("Base__Comparator", 26)), 0, 0); Tag3 (("Make", 1108), 0, (Tag2 (((("M", 1123)), Tag1 ([Tag1 (("t", 1141), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/comparator.mli", 62, 1607, 1611), ("src/comparator.mli", 62, 1607, 1654), 0), [(("deriving_inline", (("src/comparator.mli", 62, 1607, 1621), ("src/comparator.mli", 62, 1607, 1636), 0)), ([([(Tag8 ([(((("compare"), (("src/comparator.mli", 62, 1607, 1637), ("src/comparator.mli", 62, 1607, 1644), 0))), (("src/comparator.mli", 62, 1607, 1637), ("src/comparator.mli", 62, 1607, 1644), 0), 0, 0); (((("sexp_of"), (("src/comparator.mli", 62, 1607, 1646), ("src/comparator.mli", 62, 1607, 1653), 0))), (("src/comparator.mli", 62, 1607, 1646), ("src/comparator.mli", 62, 1607, 1653), 0), 0, 0)]), (("src/comparator.mli", 62, 1607, 1637), ("src/comparator.mli", 62, 1607, 1653), 0), 0, 0)], (("src/comparator.mli", 62, 1607, 1637), ("src/comparator.mli", 62, 1607, 1653), 0))]), (("src/comparator.mli", 62, 1607, 1618), ("src/comparator.mli", 62, 1607, 1654), 0))], 0, 0, Tag1 ("Base__Comparator", 27)), 1, 0); (("compare", 1142), ((Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((("t", 1141)), 0, (0)), 100000000, 0, -51)], (0)), 100000000, 0, -50), 0, (("src/comparator.mli", 64, 1656, 1668), ("src/comparator.mli", 64, 1656, 1713), 0), 0, Tag1 ("Base__Ppx_compare_lib", 5)), 0); (("sexp_of_t", 1143), ((Tag1 (0, (Tag3 ((("t", 1141)), 0, (0)), 100000000, 0, -49), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("src/comparator.mli", 66, 1715, 1719), ("src/comparator.mli", 66, 1715, 1755), 0), 0, Tag1 ("Base__Comparator", 29)), 0)])), Tag1 ([Tag1 (("comparator_witness", 1144), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/comparator.mli", 69, 1770, 1779), ("src/comparator.mli", 69, 1770, 1799), 0), 0, 0, 0, Tag1 ("Base__Comparator", 5)), 1, 0); (("comparator", 1145), ((Tag3 ((("comparator", 1100)), [(Tag3 (Tag1 ((("M", 1123)), "t"), 0, (0)), 100000000, 0, -53); (Tag3 ((("comparator_witness", 1144)), 0, (0)), 100000000, 0, -54)], (0)), 100000000, 0, -52), 0, (("src/comparator.mli", 69, 1770, 1779), ("src/comparator.mli", 69, 1770, 1799), 0), 0, Tag1 ("Base__Comparator", 6)), 0)])), 0, (("src/comparator.mli", 61, 1586, 1586), ("src/comparator.mli", 69, 1770, 1799), 0), Tag1 ("Base__Comparator", 32)), 0, 0); Tag3 (("Make1", 1109), 0, (Tag2 (((("M", 1122)), Tag1 ([Tag1 (("t", 1146), ([((("a")), 100000000, 0, -65)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/comparator.mli", 77, 2105, 2109), ("src/comparator.mli", 77, 2105, 2118), 0), 0, 0, 0, Tag1 ("Base__Comparator", 33)), 1, 0); (("compare", 1147), ((Tag1 (0, (Tag3 ((("t", 1146)), [((("a")), 100000000, 0, -63)], (0)), 100000000, 0, -64), (Tag1 (0, (Tag3 ((("t", 1146)), [((("a")), 100000000, 0, -63)], (0)), 100000000, 0, -62), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -61), 0), 100000000, 0, -60), 0), 100000000, 0, -59), 0, (("src/comparator.mli", 79, 2120, 2124), ("src/comparator.mli", 79, 2120, 2157), 0), 0, Tag1 ("Base__Comparator", 34)), 0); (("sexp_of_t", 1148), ((Tag1 (0, (Tag3 ((("t", 1146)), [((0), 100000000, 0, -58)], (0)), 100000000, 0, -57), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -56), 0), 100000000, 0, -55), 0, (("src/comparator.mli", 80, 2158, 2162), ("src/comparator.mli", 80, 2158, 2191), 0), 0, Tag1 ("Base__Comparator", 35)), 0)])), Tag1 ([Tag1 (("comparator_witness", 1149), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/comparator.mli", 81, 2192, 2201), ("src/comparator.mli", 81, 2192, 2228), 0), 0, 0, 0, Tag1 ("Base__Comparator", 9)), 1, 0); (("comparator", 1150), ((Tag3 ((("comparator", 1100)), [(Tag3 (Tag1 ((("M", 1122)), "t"), [((("a")), 100000000, 0, -68)], (0)), 100000000, 0, -67); (Tag3 ((("comparator_witness", 1149)), 0, (0)), 100000000, 0, -69)], (0)), 100000000, 0, -66), 0, (("src/comparator.mli", 81, 2192, 2201), ("src/comparator.mli", 81, 2192, 2228), 0), 0, Tag1 ("Base__Comparator", 10)), 0)])), 0, (("src/comparator.mli", 76, 2083, 2083), ("src/comparator.mli", 81, 2192, 2228), 0), Tag1 ("Base__Comparator", 38)), 0, 0); Tag4 (("Derived", 1110), ((Tag1 ([Tag1 (("t", 1151), ([((("a")), 100000000, 0, -78)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/comparator.mli", 84, 2256, 2258), ("src/comparator.mli", 84, 2256, 2267), 0), 0, 0, 0, Tag1 ("Base__Comparator", 39)), 1, 0); Tag1 (("comparator_witness", 1152), ([((("cmp")), 100000000, 0, -77)], 1, 0, 1, 0, [15], [2], 0, 0, (("src/comparator.mli", 85, 2268, 2270), ("src/comparator.mli", 85, 2268, 2299), 0), 0, 0, 0, Tag1 ("Base__Comparator", 40)), 1, 0); (("comparator", 1153), ((Tag1 (0, (Tag3 ((("comparator", 1100)), [((("a")), 100000000, 0, -73); ((("cmp")), 100000000, 0, -75)], (0)), 100000000, 0, -76), (Tag3 ((("comparator", 1100)), [(Tag3 ((("t", 1151)), [((("a")), 100000000, 0, -73)], (0)), 100000000, 0, -72); (Tag3 ((("comparator_witness", 1152)), [((("cmp")), 100000000, 0, -75)], (0)), 100000000, 0, -74)], (0)), 100000000, 0, -71), 0), 100000000, 0, -70), 0, (("src/comparator.mli", 87, 2301, 2303), ("src/comparator.mli", 87, 2301, 2387), 0), 0, Tag1 ("Base__Comparator", 41)), 0)])), 0, (("src/comparator.mli", 83, 2230, 2230), ("src/comparator.mli", 88, 2388, 2391), 0), Tag1 ("Base__Comparator", 42)), 0); Tag3 (("Derived", 1111), 0, (Tag2 (((("M", 1121)), Tag1 ([Tag1 (("t", 1154), ([((("a")), 100000000, 0, -91)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/comparator.mli", 93, 2557, 2561), ("src/comparator.mli", 93, 2557, 2607), 0), [(("deriving_inline", (("src/comparator.mli", 93, 2557, 2574), ("src/comparator.mli", 93, 2557, 2589), 0)), ([([(Tag8 ([(((("compare"), (("src/comparator.mli", 93, 2557, 2590), ("src/comparator.mli", 93, 2557, 2597), 0))), (("src/comparator.mli", 93, 2557, 2590), ("src/comparator.mli", 93, 2557, 2597), 0), 0, 0); (((("sexp_of"), (("src/comparator.mli", 93, 2557, 2599), ("src/comparator.mli", 93, 2557, 2606), 0))), (("src/comparator.mli", 93, 2557, 2599), ("src/comparator.mli", 93, 2557, 2606), 0), 0, 0)]), (("src/comparator.mli", 93, 2557, 2590), ("src/comparator.mli", 93, 2557, 2606), 0), 0, 0)], (("src/comparator.mli", 93, 2557, 2590), ("src/comparator.mli", 93, 2557, 2606), 0))]), (("src/comparator.mli", 93, 2557, 2571), ("src/comparator.mli", 93, 2557, 2607), 0))], 0, 0, Tag1 ("Base__Comparator", 43)), 1, 0); (("compare", 1155), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [((("a")), 100000000, 0, -89)], (0)), 100000000, 0, -90), (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((("t", 1154)), [((("a")), 100000000, 0, -89)], (0)), 100000000, 0, -88)], (0)), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("src/comparator.mli", 95, 2609, 2621), ("src/comparator.mli", 95, 2609, 2673), 0), 0, Tag1 ("Base__Ppx_compare_lib", 8)), 0); (("sexp_of_t", 1156), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -83), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -85), 0), 100000000, 0, -84), (Tag1 (0, (Tag3 ((("t", 1154)), [((("a")), 100000000, 0, -83)], (0)), 100000000, 0, -82), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -81), 0), 100000000, 0, -80), 0), 100000000, 0, -79), 0, (("src/comparator.mli", 97, 2675, 2679), ("src/comparator.mli", 97, 2675, 2745), 0), 0, Tag1 ("Base__Comparator", 45)), 0)])), Tag1 ([Tag1 (("comparator_witness", 1157), ([((("cmp")), 100000000, 0, -99)], 1, 0, 1, 0, [15], [2], 0, 0, (("src/comparator.mli", 100, 2760, 2769), ("src/comparator.mli", 100, 2760, 2801), 0), 0, 0, 0, Tag1 ("Base__Comparator", 40)), 1, 0); (("comparator", 1158), ((Tag1 (0, (Tag3 ((("comparator", 1100)), [((("a")), 100000000, 0, -95); ((("cmp")), 100000000, 0, -97)], (0)), 100000000, 0, -98), (Tag3 ((("comparator", 1100)), [(Tag3 (Tag1 ((("M", 1121)), "t"), [((("a")), 100000000, 0, -95)], (0)), 100000000, 0, -94); (Tag3 ((("comparator_witness", 1157)), [((("cmp")), 100000000, 0, -97)], (0)), 100000000, 0, -96)], (0)), 100000000, 0, -93), 0), 100000000, 0, -92), 0, (("src/comparator.mli", 100, 2760, 2769), ("src/comparator.mli", 100, 2760, 2801), 0), 0, Tag1 ("Base__Comparator", 41)), 0)])), 0, (("src/comparator.mli", 92, 2533, 2533), ("src/comparator.mli", 100, 2760, 2801), 0), Tag1 ("Base__Comparator", 48)), 0, 0); Tag4 (("Derived2", 1112), ((Tag1 ([Tag1 (("t", 1159), ([((("a")), 100000000, 0, -113); ((("b")), 100000000, 0, -114)], 2, 0, 1, 0, [7; 7], [2; 2], 0, 0, (("src/comparator.mli", 103, 2830, 2832), ("src/comparator.mli", 103, 2830, 2847), 0), 0, 0, 0, Tag1 ("Base__Comparator", 49)), 1, 0); Tag1 (("comparator_witness", 1160), ([((("cmp_a")), 100000000, 0, -111); ((("cmp_b")), 100000000, 0, -112)], 2, 0, 1, 0, [15; 15], [2; 2], 0, 0, (("src/comparator.mli", 104, 2848, 2850), ("src/comparator.mli", 104, 2848, 2892), 0), 0, 0, 0, Tag1 ("Base__Comparator", 50)), 1, 0); (("comparator", 1161), ((Tag1 (0, (Tag3 ((("comparator", 1100)), [((("a")), 100000000, 0, -104); ((("cmp_a")), 100000000, 0, -107)], (0)), 100000000, 0, -110), (Tag1 (0, (Tag3 ((("comparator", 1100)), [((("b")), 100000000, 0, -105); ((("cmp_b")), 100000000, 0, -108)], (0)), 100000000, 0, -109), (Tag3 ((("comparator", 1100)), [(Tag3 ((("t", 1159)), [((("a")), 100000000, 0, -104); ((("b")), 100000000, 0, -105)], (0)), 100000000, 0, -103); (Tag3 ((("comparator_witness", 1160)), [((("cmp_a")), 100000000, 0, -107); ((("cmp_b")), 100000000, 0, -108)], (0)), 100000000, 0, -106)], (0)), 100000000, 0, -102), 0), 100000000, 0, -101), 0), 100000000, 0, -100), 0, (("src/comparator.mli", 106, 2894, 2896), ("src/comparator.mli", 109, 2973, 3040), 0), 0, Tag1 ("Base__Comparator", 51)), 0)])), 0, (("src/comparator.mli", 102, 2803, 2803), ("src/comparator.mli", 110, 3041, 3044), 0), Tag1 ("Base__Comparator", 52)), 0); Tag3 (("Derived2", 1113), 0, (Tag2 (((("M", 1120)), Tag1 ([Tag1 (("t", 1162), ([((("a")), 100000000, 0, -134); ((("b")), 100000000, 0, -135)], 2, 0, 1, 0, [7; 7], [2; 2], 0, 0, (("src/comparator.mli", 115, 3226, 3230), ("src/comparator.mli", 115, 3226, 3282), 0), [(("deriving_inline", (("src/comparator.mli", 115, 3226, 3249), ("src/comparator.mli", 115, 3226, 3264), 0)), ([([(Tag8 ([(((("compare"), (("src/comparator.mli", 115, 3226, 3265), ("src/comparator.mli", 115, 3226, 3272), 0))), (("src/comparator.mli", 115, 3226, 3265), ("src/comparator.mli", 115, 3226, 3272), 0), 0, 0); (((("sexp_of"), (("src/comparator.mli", 115, 3226, 3274), ("src/comparator.mli", 115, 3226, 3281), 0))), (("src/comparator.mli", 115, 3226, 3274), ("src/comparator.mli", 115, 3226, 3281), 0), 0, 0)]), (("src/comparator.mli", 115, 3226, 3265), ("src/comparator.mli", 115, 3226, 3281), 0), 0, 0)], (("src/comparator.mli", 115, 3226, 3265), ("src/comparator.mli", 115, 3226, 3281), 0))]), (("src/comparator.mli", 115, 3226, 3246), ("src/comparator.mli", 115, 3226, 3282), 0))], 0, 0, Tag1 ("Base__Comparator", 53)), 1, 0); (("compare", 1163), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [((("a")), 100000000, 0, -130)], (0)), 100000000, 0, -133), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [((("b")), 100000000, 0, -131)], (0)), 100000000, 0, -132), (Tag3 (Tag1 ((Tag2 ("Base__Ppx_compare_lib")), "compare"), [(Tag3 ((("t", 1162)), [((("a")), 100000000, 0, -130); ((("b")), 100000000, 0, -131)], (0)), 100000000, 0, -129)], (0)), 100000000, 0, -128), 0), 100000000, 0, -127), 0), 100000000, 0, -126), 0, (("src/comparator.mli", 117, 3284, 3296), ("src/comparator.mli", 117, 3284, 3360), 0), 0, Tag1 ("Base__Ppx_compare_lib", 11)), 0); (("sexp_of_t", 1164), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -120), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -125), 0), 100000000, 0, -124), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -121), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -123), 0), 100000000, 0, -122), (Tag1 (0, (Tag3 ((("t", 1162)), [((("a")), 100000000, 0, -120); ((("b")), 100000000, 0, -121)], (0)), 100000000, 0, -119), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0")), "Sexp"), "t"), 0, (0)), 100000000, 0, -118), 0), 100000000, 0, -117), 0), 100000000, 0, -116), 0), 100000000, 0, -115), 0, (("src/comparator.mli", 119, 3362, 3366), ("src/comparator.mli", 123, 3466, 3490), 0), 0, Tag1 ("Base__Comparator", 55)), 0)])), Tag1 ([Tag1 (("comparator_witness", 1165), ([((("cmp_a")), 100000000, 0, -147); ((("cmp_b")), 100000000, 0, -148)], 2, 0, 1, 0, [15; 15], [2; 2], 0, 0, (("src/comparator.mli", 126, 3505, 3514), ("src/comparator.mli", 126, 3505, 3559), 0), 0, 0, 0, Tag1 ("Base__Comparator", 50)), 1, 0); (("comparator", 1166), ((Tag1 (0, (Tag3 ((("comparator", 1100)), [((("a")), 100000000, 0, -140); ((("cmp_a")), 100000000, 0, -143)], (0)), 100000000, 0, -146), (Tag1 (0, (Tag3 ((("comparator", 1100)), [((("b")), 100000000, 0, -141); ((("cmp_b")), 100000000, 0, -144)], (0)), 100000000, 0, -145), (Tag3 ((("comparator", 1100)), [(Tag3 (Tag1 ((("M", 1120)), "t"), [((("a")), 100000000, 0, -140); ((("b")), 100000000, 0, -141)], (0)), 100000000, 0, -139); (Tag3 ((("comparator_witness", 1165)), [((("cmp_a")), 100000000, 0, -143); ((("cmp_b")), 100000000, 0, -144)], (0)), 100000000, 0, -142)], (0)), 100000000, 0, -138), 0), 100000000, 0, -137), 0), 100000000, 0, -136), 0, (("src/comparator.mli", 126, 3505, 3514), ("src/comparator.mli", 126, 3505, 3559), 0), 0, Tag1 ("Base__Comparator", 51)), 0)])), 0, (("src/comparator.mli", 114, 3201, 3201), ("src/comparator.mli", 126, 3505, 3559), 0), Tag1 ("Base__Comparator", 58)), 0, 0); Tag4 (("Derived_phantom", 1114), ((Tag1 ([Tag1 (("t", 1167), ([((("a")), 100000000, 0, -158); ((("b")), 100000000, 0, -159)], 2, 0, 1, 0, [7; 7], [2; 2], 0, 0, (("src/comparator.mli", 129, 3595, 3597), ("src/comparator.mli", 129, 3595, 3612), 0), 0, 0, 0, Tag1 ("Base__Comparator", 59)), 1, 0); Tag1 (("comparator_witness", 1168), ([((("cmp")), 100000000, 0, -157)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/comparator.mli", 130, 3613, 3615), ("src/comparator.mli", 130, 3613, 3643), 0), 0, 0, 0, Tag1 ("Base__Comparator", 60)), 1, 0); (("comparator", 1169), ((Tag1 (0, (Tag3 ((("comparator", 1100)), [((("a")), 100000000, 0, -152); ((("cmp")), 100000000, 0, -155)], (0)), 100000000, 0, -156), (Tag3 ((("comparator", 1100)), [(Tag3 ((("t", 1167)), [((("a")), 100000000, 0, -152); ((0), 100000000, 0, -153)], (0)), 100000000, 0, -151); (Tag3 ((("comparator_witness", 1168)), [((("cmp")), 100000000, 0, -155)], (0)), 100000000, 0, -154)], (0)), 100000000, 0, -150), 0), 100000000, 0, -149), 0, (("src/comparator.mli", 132, 3645, 3647), ("src/comparator.mli", 134, 3691, 3745), 0), 0, Tag1 ("Base__Comparator", 61)), 0)])), 0, (("src/comparator.mli", 128, 3561, 3561), ("src/comparator.mli", 135, 3746, 3749), 0), Tag1 ("Base__Comparator", 62)), 0); Tag3 (("Derived_phantom", 1115), 0, (Tag2 (((("M", 1119)), Tag1 ([Tag1 (("t", 1170), ([((("a")), 100000000, 0, -179); ((("b")), 100000000, 0, -180)], 2, 0, 1, 0, [7; 7], [2; 2], 0, 0, (("src/comparator.mli", 140, 3937, 3941), ("src/comparator.mli", 140, 3937, 3956), 0), 0, 0, 0, Tag1 ("Base__Comparator", 63)), 1, 0); (("compare", 1171), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -173), (Tag1 (0, ((("a")), 100000000, 0, -173), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -178), 0), 100000000, 0, -177), 0), 100000000, 0, -176), (Tag1 (0, (Tag3 ((("t", 1170)), [((("a")), 100000000, 0, -173); ((("b")), 100000000, 0, -174)], (0)), 100000000, 0, -175), (Tag1 (0, (Tag3 ((("t", 1170)), [((("a")), 100000000, 0, -173); ((("b")), 100000000, 0, -174)], (0)), 100000000, 0, -172), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -171), 0), 100000000, 0, -170), 0), 100000000, 0, -169), 0), 100000000, 0, -168), 0, (("src/comparator.mli", 142, 3958, 3962), ("src/comparator.mli", 142, 3958, 4028), 0), 0, Tag1 ("Base__Comparator", 64)), 0); (("sexp_of_t", 1172), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -164), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -167), 0), 100000000, 0, -166), (Tag1 (0, (Tag3 ((("t", 1170)), [((("a")), 100000000, 0, -164); ((0), 100000000, 0, -165)], (0)), 100000000, 0, -163), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -162), 0), 100000000, 0, -161), 0), 100000000, 0, -160), 0, (("src/comparator.mli", 143, 4029, 4033), ("src/comparator.mli", 143, 4029, 4086), 0), 0, Tag1 ("Base__Comparator", 65)), 0)])), Tag1 ([Tag1 (("comparator_witness", 1173), ([((("cmp")), 100000000, 0, -189)], 1, 0, 1, 0, [7], [2], 0, 0, (("src/comparator.mli", 144, 4087, 4096), ("src/comparator.mli", 144, 4087, 4148), 0), 0, 0, 0, Tag1 ("Base__Comparator", 60)), 1, 0); (("comparator", 1174), ((Tag1 (0, (Tag3 ((("comparator", 1100)), [((("a")), 100000000, 0, -184); ((("cmp")), 100000000, 0, -187)], (0)), 100000000, 0, -188), (Tag3 ((("comparator", 1100)), [(Tag3 (Tag1 ((("M", 1119)), "t"), [((("a")), 100000000, 0, -184); ((0), 100000000, 0, -185)], (0)), 100000000, 0, -183); (Tag3 ((("comparator_witness", 1173)), [((("cmp")), 100000000, 0, -187)], (0)), 100000000, 0, -186)], (0)), 100000000, 0, -182), 0), 100000000, 0, -181), 0, (("src/comparator.mli", 144, 4087, 4096), ("src/comparator.mli", 144, 4087, 4148), 0), 0, Tag1 ("Base__Comparator", 61)), 0)])), 0, (("src/comparator.mli", 139, 3905, 3905), ("src/comparator.mli", 144, 4087, 4148), 0), Tag1 ("Base__Comparator", 68)), 0, 0); Tag4 (("Derived2_phantom", 1116), ((Tag1 ([Tag1 (("t", 1175), ([((("a")), 100000000, 0, -204); ((("b")), 100000000, 0, -205); ((("c")), 100000000, 0, -206)], 3, 0, 1, 0, [7; 7; 7], [2; 2; 2], 0, 0, (("src/comparator.mli", 147, 4185, 4187), ("src/comparator.mli", 147, 4185, 4206), 0), 0, 0, 0, Tag1 ("Base__Comparator", 69)), 1, 0); Tag1 (("comparator_witness", 1176), ([((("cmp_a")), 100000000, 0, -202); ((("cmp_b")), 100000000, 0, -203)], 2, 0, 1, 0, [15; 15], [2; 2], 0, 0, (("src/comparator.mli", 148, 4207, 4209), ("src/comparator.mli", 148, 4207, 4251), 0), 0, 0, 0, Tag1 ("Base__Comparator", 70)), 1, 0); (("comparator", 1177), ((Tag1 (0, (Tag3 ((("comparator", 1100)), [((("a")), 100000000, 0, -194); ((("cmp_a")), 100000000, 0, -198)], (0)), 100000000, 0, -201), (Tag1 (0, (Tag3 ((("comparator", 1100)), [((("b")), 100000000, 0, -195); ((("cmp_b")), 100000000, 0, -199)], (0)), 100000000, 0, -200), (Tag3 ((("comparator", 1100)), [(Tag3 ((("t", 1175)), [((("a")), 100000000, 0, -194); ((("b")), 100000000, 0, -195); ((0), 100000000, 0, -196)], (0)), 100000000, 0, -193); (Tag3 ((("comparator_witness", 1176)), [((("cmp_a")), 100000000, 0, -198); ((("cmp_b")), 100000000, 0, -199)], (0)), 100000000, 0, -197)], (0)), 100000000, 0, -192), 0), 100000000, 0, -191), 0), 100000000, 0, -190), 0, (("src/comparator.mli", 150, 4253, 4255), ("src/comparator.mli", 153, 4332, 4402), 0), 0, Tag1 ("Base__Comparator", 71)), 0)])), 0, (("src/comparator.mli", 146, 4150, 4150), ("src/comparator.mli", 154, 4403, 4406), 0), Tag1 ("Base__Comparator", 72)), 0); Tag3 (("Derived2_phantom", 1117), 0, (Tag2 (((("M", 1118)), Tag1 ([Tag1 (("t", 1178), ([((("a")), 100000000, 0, -235); ((("b")), 100000000, 0, -236); ((("c")), 100000000, 0, -237)], 3, 0, 1, 0, [7; 7; 7], [2; 2; 2], 0, 0, (("src/comparator.mli", 159, 4610, 4614), ("src/comparator.mli", 159, 4610, 4633), 0), 0, 0, 0, Tag1 ("Base__Comparator", 73)), 1, 0); (("compare", 1179), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -225), (Tag1 (0, ((("a")), 100000000, 0, -225), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -234), 0), 100000000, 0, -233), 0), 100000000, 0, -232), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -226), (Tag1 (0, ((("b")), 100000000, 0, -226), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -231), 0), 100000000, 0, -230), 0), 100000000, 0, -229), (Tag1 (0, (Tag3 ((("t", 1178)), [((("a")), 100000000, 0, -225); ((("b")), 100000000, 0, -226); ((("c")), 100000000, 0, -227)], (0)), 100000000, 0, -228), (Tag1 (0, (Tag3 ((("t", 1178)), [((("a")), 100000000, 0, -225); ((("b")), 100000000, 0, -226); ((("c")), 100000000, 0, -227)], (0)), 100000000, 0, -224), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -223), 0), 100000000, 0, -222), 0), 100000000, 0, -221), 0), 100000000, 0, -220), 0), 100000000, 0, -219), 0, (("src/comparator.mli", 161, 4635, 4639), ("src/comparator.mli", 166, 4753, 4765), 0), 0, Tag1 ("Base__Comparator", 74)), 0); (("sexp_of_t", 1180), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -212), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -218), 0), 100000000, 0, -217), (Tag1 (0, (Tag1 (0, ((("b")), 100000000, 0, -213), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -216), 0), 100000000, 0, -215), (Tag1 (0, (Tag3 ((("t", 1178)), [((("a")), 100000000, 0, -212); ((("b")), 100000000, 0, -213); ((0), 100000000, 0, -214)], (0)), 100000000, 0, -211), (Tag3 (Tag1 (Tag1 ((Tag2 ("Base__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -210), 0), 100000000, 0, -209), 0), 100000000, 0, -208), 0), 100000000, 0, -207), 0, (("src/comparator.mli", 168, 4767, 4771), ("src/comparator.mli", 168, 4767, 4846), 0), 0, Tag1 ("Base__Comparator", 75)), 0)])), Tag1 ([Tag1 (("comparator_witness", 1181), ([((("cmp_a")), 100000000, 0, -250); ((("cmp_b")), 100000000, 0, -251)], 2, 0, 1, 0, [15; 15], [2; 2], 0, 0, (("src/comparator.mli", 169, 4847, 4856), ("src/comparator.mli", 169, 4847, 4917), 0), 0, 0, 0, Tag1 ("Base__Comparator", 70)), 1, 0); (("comparator", 1182), ((Tag1 (0, (Tag3 ((("comparator", 1100)), [((("a")), 100000000, 0, -242); ((("cmp_a")), 100000000, 0, -246)], (0)), 100000000, 0, -249), (Tag1 (0, (Tag3 ((("comparator", 1100)), [((("b")), 100000000, 0, -243); ((("cmp_b")), 100000000, 0, -247)], (0)), 100000000, 0, -248), (Tag3 ((("comparator", 1100)), [(Tag3 (Tag1 ((("M", 1118)), "t"), [((("a")), 100000000, 0, -242); ((("b")), 100000000, 0, -243); ((0), 100000000, 0, -244)], (0)), 100000000, 0, -241); (Tag3 ((("comparator_witness", 1181)), [((("cmp_a")), 100000000, 0, -246); ((("cmp_b")), 100000000, 0, -247)], (0)), 100000000, 0, -245)], (0)), 100000000, 0, -240), 0), 100000000, 0, -239), 0), 100000000, 0, -238), 0, (("src/comparator.mli", 169, 4847, 4856), ("src/comparator.mli", 169, 4847, 4917), 0), 0, Tag1 ("Base__Comparator", 71)), 0)])), 0, (("src/comparator.mli", 158, 4577, 4577), ("src/comparator.mli", 169, 4847, 4917), 0), Tag1 ("Base__Comparator", 78)), 0, 0)], "Base__Comparator", [("Base__Comparator", ("\002\135z7b\025&\207\t\188\239&U3R\167")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__MoreLabels", ("\248\232\248\254`<\230\241\161U\193U\1466J\238")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shadow_stdlib", ("\219zi\164\203\158e)\232\221\196\168\138x\142\018")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Base_internalhash_types", ("0\148#2\226\223\018\135\173>!\020\237\017\255\149")); ("Base__Sexp", ("\154\187\171&\209=\153[\236\250!U\174`\190T")); ("Base__Ppx_hash_lib", ("\199\141\178\193\006\209L\007^\020(\131\224sn8")); ("Base__Ppx_compare_lib", ("\243\186~\233\228\199Ah\181.\223\004e\231\129S")); ("Base__Poly0", ("\230;\143\234\255.H\132KOe7\155\\\023f")); ("Base__Import0", ("\156\129U\197Y[\\\153\017Ho\203\173\204\220\020")); ("Base__Import", ("\014\187\247\141\187\181\142g\176:s_,\181\219\209")); ("Base__Hash_intf", ("h\004P\218\1531G\127\212\208A\024\140\164iq")); ("Base__Hash", ("\206Rc\194\234{s3\248\165\024\162\203{\206\206")); ("Base__Globalize", ("<\243w~.\180\196t\159\193\174[\227\139\215G")); ("Base__Bool0", ("\177f\254p\023\143&\239\020\136\206\242~\018F\251")); ("Base__", ("p\252\007\139\128\163W\025+\0225\001\246|P\158"))], [(0)])

