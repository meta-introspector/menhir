type t = bool = false | true
val not : bool -> bool
external ( && ) : bool -> bool -> bool = "%sequand"
external ( || ) : bool -> bool -> bool = "%sequor"
val equal : bool -> bool -> bool
val compare : bool -> bool -> int
val to_int : bool -> int
val to_float : bool -> float("DEBUG:rule", [Tag1 (("t", 288), (0, 0, Tag1 ([(("false", 270), (0), 0, (("stdcompat__bool_s.mli", 4, 37, 39), ("stdcompat__bool_s.mli", 4, 37, 46), 0), 0, Tag1 ("Stdcompat__bool_s", 1)); (("true", 271), (0), 0, (("stdcompat__bool_s.mli", 5, 48, 50), ("stdcompat__bool_s.mli", 5, 48, 56), 0), 0, Tag1 ("Stdcompat__bool_s", 2))], 0), 1, ((Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -34)), 0, 0, 0, 0, (("stdcompat__bool_s.mli", 3, 21, 21), ("stdcompat__bool_s.mli", 5, 48, 56), 0), 0, 1, 0, Tag1 ("Stdcompat__bool_s", 0)), 1, 0); (("not", 289), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -33), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("stdcompat__bool_s.mli", 17, 201, 201), ("stdcompat__bool_s.mli", 17, 201, 223), 0), 0, Tag1 ("Stdcompat__bool_s", 3)), 0); (("&&", 290), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -30), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -29), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), (("%sequand", 2, 1, "", [0; 0], 0)), (("stdcompat__bool_s.mli", 21, 271, 271), ("stdcompat__bool_s.mli", 21, 271, 320), 0), 0, Tag1 ("Stdcompat__bool_s", 4)), 0); (("||", 291), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -25), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -24), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), (("%sequor", 2, 1, "", [0; 0], 0)), (("stdcompat__bool_s.mli", 37, 603, 603), ("stdcompat__bool_s.mli", 37, 603, 651), 0), 0, Tag1 ("Stdcompat__bool_s", 5)), 0); (("equal", 292), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -20), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -19), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("stdcompat__bool_s.mli", 52, 929, 929), ("stdcompat__bool_s.mli", 52, 929, 961), 0), 0, Tag1 ("Stdcompat__bool_s", 6)), 0); (("compare", 293), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -15), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -14), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("stdcompat__bool_s.mli", 55, 1018, 1018), ("stdcompat__bool_s.mli", 55, 1018, 1051), 0), 0, Tag1 ("Stdcompat__bool_s", 7)), 0); (("to_int", 294), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("stdcompat__bool_s.mli", 58, 1109, 1109), ("stdcompat__bool_s.mli", 58, 1109, 1133), 0), 0, Tag1 ("Stdcompat__bool_s", 8)), 0); (("to_float", 295), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("stdcompat__bool_s.mli", 61, 1182, 1182), ("stdcompat__bool_s.mli", 61, 1182, 1210), 0), 0, Tag1 ("Stdcompat__bool_s", 9)), 0); (("to_string", 296), ((Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("stdcompat__bool_s.mli", 64, 1263, 1263), ("stdcompat__bool_s.mli", 64, 1263, 1293), 0), 0, Tag1 ("Stdcompat__bool_s", 10)), 0)], "Stdcompat__bool", [("Stdcompat__bool", ("\1863{#0\167\134qYp\2298\130\2081K")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stdcompat__bool_s", ("=\216XS\236q\017j\026s\249h\164\204\211\249")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val to_string : bool -> string
