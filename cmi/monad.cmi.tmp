module type Def =
  sig
    type +'a t
    val return : 'a -> 'a t
    val ( >>= ) : 'a t -> ('a -> 'b t) -> 'b t
    val ( >> ) : unit t -> 'a t -> 'a t
    val map : ('a -> 'b) -> 'a t -> 'b t
  end
module type ListS =
  sig
    type 'a t
    val map : ('a -> 'b t) -> 'a list -> 'b list t
    val map_right : ('a -> 'b t) -> 'a list -> 'b list t
    val fold_right : ('a -> 'b -> 'b t) -> 'a list -> 'b -> 'b t
    val fold_left : ('a -> 'b -> 'a t) -> 'a -> 'b list -> 'a t
    val iter : ('a -> unit t) -> 'a list -> unit t
    val map_filter : ('a -> 'b option t) -> 'a list -> 'b list t
    val fold_left2 :
      'a t -> ('a -> 'b -> 'c -> 'a t) -> 'a -> 'b list -> 'c list -> 'a t
  end
module type S =
  sig
    type +'a t
    val return : 'a -> 'a t
    val ( >>= ) : 'a t -> ('a -> 'b t) -> 'b t
    val ( >> ) : unit t -> 'a t -> 'a t
    val map : ('a -> 'b) -> 'a t -> 'b t
    module List :
      sig
        val map : ('a -> 'b t) -> 'a list -> 'b list t
        val map_right : ('a -> 'b t) -> 'a list -> 'b list t
        val fold_right : ('a -> 'b -> 'b t) -> 'a list -> 'b -> 'b t
        val fold_left : ('a -> 'b -> 'a t) -> 'a -> 'b list -> 'a t
        val iter : ('a -> unit t) -> 'a list -> unit t
        val map_filter : ('a -> 'b option t) -> 'a list -> 'b list t
        val fold_left2 :
          'a t ->
          ('a -> 'b -> 'c -> 'a t) -> 'a -> 'b list -> 'c list -> 'a t
      end
  end
module Make :
  functor (M : Def) ->
    sig
      type 'a t = 'a M.t
      val return : 'a -> 'a t
      val ( >>= ) : 'a t -> ('a -> 'b t) -> 'b t
      val ( >> ) : unit t -> 'a t -> 'a t
      val map : ('a -> 'b) -> 'a t -> 'b t
      module List :
        sig
          val map : ('a -> 'b t) -> 'a list -> 'b list t
          val map_right : ('a -> 'b t) -> 'a list -> 'b list t
          val fold_right : ('a -> 'b -> 'b t) -> 'a list -> 'b -> 'b t
          val fold_left : ('a -> 'b -> 'a t) -> 'a -> 'b list -> 'a t
          val iter : ('a -> unit t) -> 'a list -> unit t
          val map_filter : ('a -> 'b option t) -> 'a list -> 'b list t
          val fold_left2 :
            'a t ->
            ('a -> 'b -> 'c -> 'a t) -> 'a -> 'b list -> 'c list -> 'a t
        end("DEBUG:rule", [Tag4 (("Def", 356), ((Tag1 ([Tag1 (("t", 361), ([((("a")), 100000000, 0, -27)], 1, 0, 1, 0, [1], [2], 0, 0, (("clib/monad.mli", 19, 836, 838), ("clib/monad.mli", 19, 836, 848), 0), 0, 0, 0, Tag1 ("Monad", 0)), 1, 0); (("return", 362), ((Tag1 (0, ((("a")), 100000000, 0, -26), (Tag3 ((("t", 361)), [((("a")), 100000000, 0, -26)], (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("clib/monad.mli", 20, 849, 851), ("clib/monad.mli", 20, 849, 874), 0), 0, Tag1 ("Monad", 1)), 0); ((">>=", 363), ((Tag1 (0, (Tag3 ((("t", 361)), [((("a")), 100000000, 0, -22)], (0)), 100000000, 0, -23), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -22), (Tag3 ((("t", 361)), [((("b")), 100000000, 0, -19)], (0)), 100000000, 0, -21), 0), 100000000, 0, -20), (Tag3 ((("t", 361)), [((("b")), 100000000, 0, -19)], (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0, (("clib/monad.mli", 21, 875, 877), ("clib/monad.mli", 21, 875, 917), 0), 0, Tag1 ("Monad", 2)), 0); ((">>", 364), ((Tag1 (0, (Tag3 ((("t", 361)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -15)], (0)), 100000000, 0, -14), (Tag1 (0, (Tag3 ((("t", 361)), [((("a")), 100000000, 0, -12)], (0)), 100000000, 0, -13), (Tag3 ((("t", 361)), [((("a")), 100000000, 0, -12)], (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("clib/monad.mli", 22, 918, 920), ("clib/monad.mli", 22, 918, 953), 0), 0, Tag1 ("Monad", 3)), 0); (("map", 365), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -7), ((("b")), 100000000, 0, -5), 0), 100000000, 0, -8), (Tag1 (0, (Tag3 ((("t", 361)), [((("a")), 100000000, 0, -7)], (0)), 100000000, 0, -6), (Tag3 ((("t", 361)), [((("b")), 100000000, 0, -5)], (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("clib/monad.mli", 23, 954, 956), ("clib/monad.mli", 23, 954, 992), 0), 0, Tag1 ("Monad", 4)), 0)])), 0, (("clib/monad.mli", 17, 813, 813), ("clib/monad.mli", 34, 1255, 1258), 0), Tag1 ("Monad", 5)), 0); Tag4 (("ListS", 357), ((Tag1 ([Tag1 (("t", 366), ([((("a")), 100000000, 0, -101)], 1, 0, 1, 0, [7], [2], 0, 0, (("clib/monad.mli", 40, 1310, 1312), ("clib/monad.mli", 40, 1310, 1321), 0), 0, 0, 0, Tag1 ("Monad", 6)), 1, 0); (("map", 367), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -98), (Tag3 ((("t", 366)), [((("b")), 100000000, 0, -96)], (0)), 100000000, 0, -100), 0), 100000000, 0, -99), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -98)], (0)), 100000000, 0, -97), (Tag3 ((("t", 366)), [(Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -96)], (0)), 100000000, 0, -95)], (0)), 100000000, 0, -94), 0), 100000000, 0, -93), 0), 100000000, 0, -92), 0, (("clib/monad.mli", 44, 1409, 1411), ("clib/monad.mli", 44, 1409, 1457), 0), 0, Tag1 ("Monad", 7)), 0); (("map_right", 368), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -89), (Tag3 ((("t", 366)), [((("b")), 100000000, 0, -87)], (0)), 100000000, 0, -91), 0), 100000000, 0, -90), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -89)], (0)), 100000000, 0, -88), (Tag3 ((("t", 366)), [(Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -87)], (0)), 100000000, 0, -86)], (0)), 100000000, 0, -85), 0), 100000000, 0, -84), 0), 100000000, 0, -83), 0, (("clib/monad.mli", 48, 1545, 1547), ("clib/monad.mli", 48, 1545, 1599), 0), 0, Tag1 ("Monad", 8)), 0); (("fold_right", 369), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -79), (Tag1 (0, ((("b")), 100000000, 0, -77), (Tag3 ((("t", 366)), [((("b")), 100000000, 0, -77)], (0)), 100000000, 0, -82), 0), 100000000, 0, -81), 0), 100000000, 0, -80), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -79)], (0)), 100000000, 0, -78), (Tag1 (0, ((("b")), 100000000, 0, -77), (Tag3 ((("t", 366)), [((("b")), 100000000, 0, -77)], (0)), 100000000, 0, -76), 0), 100000000, 0, -75), 0), 100000000, 0, -74), 0), 100000000, 0, -73), 0, (("clib/monad.mli", 59, 2084, 2086), ("clib/monad.mli", 59, 2084, 2146), 0), 0, Tag1 ("Monad", 9)), 0); (("fold_left", 370), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -67), (Tag1 (0, ((("b")), 100000000, 0, -69), (Tag3 ((("t", 366)), [((("a")), 100000000, 0, -67)], (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), (Tag1 (0, ((("a")), 100000000, 0, -67), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -69)], (0)), 100000000, 0, -68), (Tag3 ((("t", 366)), [((("a")), 100000000, 0, -67)], (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0), 100000000, 0, -63), 0, (("clib/monad.mli", 64, 2343, 2345), ("clib/monad.mli", 64, 2343, 2404), 0), 0, Tag1 ("Monad", 10)), 0); (("iter", 371), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -59), (Tag3 ((("t", 366)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -62)], (0)), 100000000, 0, -61), 0), 100000000, 0, -60), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -59)], (0)), 100000000, 0, -58), (Tag3 ((("t", 366)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -57)], (0)), 100000000, 0, -56), 0), 100000000, 0, -55), 0), 100000000, 0, -54), 0, (("clib/monad.mli", 69, 2593, 2595), ("clib/monad.mli", 69, 2593, 2641), 0), 0, Tag1 ("Monad", 11)), 0); (("map_filter", 372), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -50), (Tag3 ((("t", 366)), [(Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -48)], (0)), 100000000, 0, -53)], (0)), 100000000, 0, -52), 0), 100000000, 0, -51), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -50)], (0)), 100000000, 0, -49), (Tag3 ((("t", 366)), [(Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -48)], (0)), 100000000, 0, -47)], (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("clib/monad.mli", 73, 2744, 2746), ("clib/monad.mli", 73, 2744, 2806), 0), 0, Tag1 ("Monad", 12)), 0); (("fold_left2", 373), ((Tag1 (0, (Tag3 ((("t", 366)), [((("a")), 100000000, 0, -34)], (0)), 100000000, 0, -43), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -34), (Tag1 (0, ((("b")), 100000000, 0, -38), (Tag1 (0, ((("c")), 100000000, 0, -36), (Tag3 ((("t", 366)), [((("a")), 100000000, 0, -34)], (0)), 100000000, 0, -42), 0), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), (Tag1 (0, ((("a")), 100000000, 0, -34), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -38)], (0)), 100000000, 0, -37), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("c")), 100000000, 0, -36)], (0)), 100000000, 0, -35), (Tag3 ((("t", 366)), [((("a")), 100000000, 0, -34)], (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("clib/monad.mli", 82, 3056, 3058), ("clib/monad.mli", 83, 3083, 3147), 0), 0, Tag1 ("Monad", 13)), 0)])), 0, (("clib/monad.mli", 38, 1285, 1285), ("clib/monad.mli", 85, 3149, 3152), 0), Tag1 ("Monad", 14)), 0); Tag4 (("S", 358), ((Tag1 ([Tag1 (("t", 374), ([((("a")), 100000000, 0, -127)], 1, 0, 1, 0, [1], [2], 0, 0, (("clib/monad.mli", 19, 836, 838), ("clib/monad.mli", 19, 836, 848), 0), 0, 0, 0, Tag1 ("Monad", 0)), 1, 0); (("return", 375), ((Tag1 (0, ((("a")), 100000000, 0, -126), (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -126)], (0)), 100000000, 0, -125), 0), 100000000, 0, -124), 0, (("clib/monad.mli", 20, 849, 851), ("clib/monad.mli", 20, 849, 874), 0), 0, Tag1 ("Monad", 1)), 0); ((">>=", 376), ((Tag1 (0, (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -122)], (0)), 100000000, 0, -123), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -122), (Tag3 ((("t", 374)), [((("b")), 100000000, 0, -119)], (0)), 100000000, 0, -121), 0), 100000000, 0, -120), (Tag3 ((("t", 374)), [((("b")), 100000000, 0, -119)], (0)), 100000000, 0, -118), 0), 100000000, 0, -117), 0), 100000000, 0, -116), 0, (("clib/monad.mli", 21, 875, 877), ("clib/monad.mli", 21, 875, 917), 0), 0, Tag1 ("Monad", 2)), 0); ((">>", 377), ((Tag1 (0, (Tag3 ((("t", 374)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -115)], (0)), 100000000, 0, -114), (Tag1 (0, (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -112)], (0)), 100000000, 0, -113), (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -112)], (0)), 100000000, 0, -111), 0), 100000000, 0, -110), 0), 100000000, 0, -109), 0, (("clib/monad.mli", 22, 918, 920), ("clib/monad.mli", 22, 918, 953), 0), 0, Tag1 ("Monad", 3)), 0); (("map", 378), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -107), ((("b")), 100000000, 0, -105), 0), 100000000, 0, -108), (Tag1 (0, (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -107)], (0)), 100000000, 0, -106), (Tag3 ((("t", 374)), [((("b")), 100000000, 0, -105)], (0)), 100000000, 0, -104), 0), 100000000, 0, -103), 0), 100000000, 0, -102), 0, (("clib/monad.mli", 23, 954, 956), ("clib/monad.mli", 23, 954, 992), 0), 0, Tag1 ("Monad", 4)), 0); Tag3 (("List", 379), 0, (Tag1 ([(("map", 380), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -198), (Tag3 ((("t", 374)), [((("b")), 100000000, 0, -196)], (0)), 100000000, 0, -200), 0), 100000000, 0, -199), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -198)], (0)), 100000000, 0, -197), (Tag3 ((("t", 374)), [(Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -196)], (0)), 100000000, 0, -195)], (0)), 100000000, 0, -194), 0), 100000000, 0, -193), 0), 100000000, 0, -192), 0, (("clib/monad.mli", 91, 3190, 3206), ("clib/monad.mli", 91, 3190, 3234), 0), 0, Tag1 ("Monad", 7)), 0); (("map_right", 381), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -189), (Tag3 ((("t", 374)), [((("b")), 100000000, 0, -187)], (0)), 100000000, 0, -191), 0), 100000000, 0, -190), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -189)], (0)), 100000000, 0, -188), (Tag3 ((("t", 374)), [(Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -187)], (0)), 100000000, 0, -186)], (0)), 100000000, 0, -185), 0), 100000000, 0, -184), 0), 100000000, 0, -183), 0, (("clib/monad.mli", 91, 3190, 3206), ("clib/monad.mli", 91, 3190, 3234), 0), 0, Tag1 ("Monad", 8)), 0); (("fold_right", 382), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -179), (Tag1 (0, ((("b")), 100000000, 0, -177), (Tag3 ((("t", 374)), [((("b")), 100000000, 0, -177)], (0)), 100000000, 0, -182), 0), 100000000, 0, -181), 0), 100000000, 0, -180), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -179)], (0)), 100000000, 0, -178), (Tag1 (0, ((("b")), 100000000, 0, -177), (Tag3 ((("t", 374)), [((("b")), 100000000, 0, -177)], (0)), 100000000, 0, -176), 0), 100000000, 0, -175), 0), 100000000, 0, -174), 0), 100000000, 0, -173), 0, (("clib/monad.mli", 91, 3190, 3206), ("clib/monad.mli", 91, 3190, 3234), 0), 0, Tag1 ("Monad", 9)), 0); (("fold_left", 383), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -167), (Tag1 (0, ((("b")), 100000000, 0, -169), (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -167)], (0)), 100000000, 0, -172), 0), 100000000, 0, -171), 0), 100000000, 0, -170), (Tag1 (0, ((("a")), 100000000, 0, -167), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -169)], (0)), 100000000, 0, -168), (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -167)], (0)), 100000000, 0, -166), 0), 100000000, 0, -165), 0), 100000000, 0, -164), 0), 100000000, 0, -163), 0, (("clib/monad.mli", 91, 3190, 3206), ("clib/monad.mli", 91, 3190, 3234), 0), 0, Tag1 ("Monad", 10)), 0); (("iter", 384), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -159), (Tag3 ((("t", 374)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -162)], (0)), 100000000, 0, -161), 0), 100000000, 0, -160), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -159)], (0)), 100000000, 0, -158), (Tag3 ((("t", 374)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -157)], (0)), 100000000, 0, -156), 0), 100000000, 0, -155), 0), 100000000, 0, -154), 0, (("clib/monad.mli", 91, 3190, 3206), ("clib/monad.mli", 91, 3190, 3234), 0), 0, Tag1 ("Monad", 11)), 0); (("map_filter", 385), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -150), (Tag3 ((("t", 374)), [(Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -148)], (0)), 100000000, 0, -153)], (0)), 100000000, 0, -152), 0), 100000000, 0, -151), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -150)], (0)), 100000000, 0, -149), (Tag3 ((("t", 374)), [(Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -148)], (0)), 100000000, 0, -147)], (0)), 100000000, 0, -146), 0), 100000000, 0, -145), 0), 100000000, 0, -144), 0, (("clib/monad.mli", 91, 3190, 3206), ("clib/monad.mli", 91, 3190, 3234), 0), 0, Tag1 ("Monad", 12)), 0); (("fold_left2", 386), ((Tag1 (0, (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -134)], (0)), 100000000, 0, -143), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -134), (Tag1 (0, ((("b")), 100000000, 0, -138), (Tag1 (0, ((("c")), 100000000, 0, -136), (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -134)], (0)), 100000000, 0, -142), 0), 100000000, 0, -141), 0), 100000000, 0, -140), 0), 100000000, 0, -139), (Tag1 (0, ((("a")), 100000000, 0, -134), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -138)], (0)), 100000000, 0, -137), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("c")), 100000000, 0, -136)], (0)), 100000000, 0, -135), (Tag3 ((("t", 374)), [((("a")), 100000000, 0, -134)], (0)), 100000000, 0, -133), 0), 100000000, 0, -132), 0), 100000000, 0, -131), 0), 100000000, 0, -130), 0), 100000000, 0, -129), 0), 100000000, 0, -128), 0, (("clib/monad.mli", 91, 3190, 3206), ("clib/monad.mli", 91, 3190, 3234), 0), 0, Tag1 ("Monad", 13)), 0)]), 0, (("clib/monad.mli", 91, 3190, 3192), ("clib/monad.mli", 91, 3190, 3234), 0), Tag1 ("Monad", 16)), 0, 0)])), 0, (("clib/monad.mli", 87, 3154, 3154), ("clib/monad.mli", 93, 3236, 3239), 0), Tag1 ("Monad", 17)), 0); Tag3 (("Make", 359), 0, (Tag2 (((("M", 360)), ((("Def", 356)))), Tag1 ([Tag1 (("t", 387), ([((("a")), 100000000, 0, -227)], 1, 0, 1, ((Tag3 (Tag1 ((("M", 360)), "t"), [((("a")), 100000000, 0, -227)], (0)), 100000000, 0, -226)), [1], [2], 0, 0, (("clib/monad.mli", 96, 3301, 3330), ("clib/monad.mli", 96, 3301, 3349), 0), 0, 0, 0, Tag1 ("Monad", 19)), 1, 0); (("return", 388), ((Tag1 (0, ((("a")), 100000000, 0, -225), (Tag3 ((("t", 387)), [((("a")), 100000000, 0, -225)], (0)), 100000000, 0, -224), 0), 100000000, 0, -223), 0, (("clib/monad.mli", 20, 849, 851), ("clib/monad.mli", 20, 849, 874), 0), 0, Tag1 ("Monad", 1)), 0); ((">>=", 389), ((Tag1 (0, (Tag3 ((("t", 387)), [((("a")), 100000000, 0, -221)], (0)), 100000000, 0, -222), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -221), (Tag3 ((("t", 387)), [((("b")), 100000000, 0, -218)], (0)), 100000000, 0, -220), 0), 100000000, 0, -219), (Tag3 ((("t", 387)), [((("b")), 100000000, 0, -218)], (0)), 100000000, 0, -217), 0), 100000000, 0, -216), 0), 100000000, 0, -215), 0, (("clib/monad.mli", 21, 875, 877), ("clib/monad.mli", 21, 875, 917), 0), 0, Tag1 ("Monad", 2)), 0); ((">>", 390), ((Tag1 (0, (Tag3 ((("t", 387)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -214)], (0)), 100000000, 0, -213), (Tag1 (0, (Tag3 ((("t", 387)), [((("a")), 100000000, 0, -211)], (0)), 100000000, 0, -212), (Tag3 ((("t", 387)), [((("a")), 100000000, 0, -211)], (0)), 100000000, 0, -210), 0), 100000000, 0, -209), 0), 100000000, 0, -208), 0, (("clib/monad.mli", 22, 918, 920), ("clib/monad.mli", 22, 918, 953), 0), 0, Tag1 ("Monad", 3)), 0); (("map", 391), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -206), ((("b")), 100000000, 0, -204), 0), 100000000, 0, -207), (Tag1 (0, (Tag3 ((("t", 387)), [((("a")), 100000000, 0, -206)], (0)), 100000000, 0, -205), (Tag3 ((("t", 387)), [((("b")), 100000000, 0, -204)], (0)), 100000000, 0, -203), 0), 100000000, 0, -202), 0), 100000000, 0, -201), 0, (("clib/monad.mli", 23, 954, 956), ("clib/monad.mli", 23, 954, 992), 0), 0, Tag1 ("Monad", 4)), 0); Tag3 (("List", 392), 0, (Tag1 ([(("map", 393), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -298), (Tag3 ((("t", 387)), [((("b")), 100000000, 0, -296)], (0)), 100000000, 0, -300), 0), 100000000, 0, -299), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -298)], (0)), 100000000, 0, -297), (Tag3 ((("t", 387)), [(Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -296)], (0)), 100000000, 0, -295)], (0)), 100000000, 0, -294), 0), 100000000, 0, -293), 0), 100000000, 0, -292), 0, (("clib/monad.mli", 91, 3190, 3206), ("clib/monad.mli", 91, 3190, 3234), 0), 0, Tag1 ("Monad", 7)), 0); (("map_right", 394), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -289), (Tag3 ((("t", 387)), [((("b")), 100000000, 0, -287)], (0)), 100000000, 0, -291), 0), 100000000, 0, -290), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -289)], (0)), 100000000, 0, -288), (Tag3 ((("t", 387)), [(Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -287)], (0)), 100000000, 0, -286)], (0)), 100000000, 0, -285), 0), 100000000, 0, -284), 0), 100000000, 0, -283), 0, (("clib/monad.mli", 91, 3190, 3206), ("clib/monad.mli", 91, 3190, 3234), 0), 0, Tag1 ("Monad", 8)), 0); (("fold_right", 395), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -279), (Tag1 (0, ((("b")), 100000000, 0, -277), (Tag3 ((("t", 387)), [((("b")), 100000000, 0, -277)], (0)), 100000000, 0, -282), 0), 100000000, 0, -281), 0), 100000000, 0, -280), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -279)], (0)), 100000000, 0, -278), (Tag1 (0, ((("b")), 100000000, 0, -277), (Tag3 ((("t", 387)), [((("b")), 100000000, 0, -277)], (0)), 100000000, 0, -276), 0), 100000000, 0, -275), 0), 100000000, 0, -274), 0), 100000000, 0, -273), 0, (("clib/monad.mli", 91, 3190, 3206), ("clib/monad.mli", 91, 3190, 3234), 0), 0, Tag1 ("Monad", 9)), 0); (("fold_left", 396), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -267), (Tag1 (0, ((("b")), 100000000, 0, -269), (Tag3 ((("t", 387)), [((("a")), 100000000, 0, -267)], (0)), 100000000, 0, -272), 0), 100000000, 0, -271), 0), 100000000, 0, -270), (Tag1 (0, ((("a")), 100000000, 0, -267), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -269)], (0)), 100000000, 0, -268), (Tag3 ((("t", 387)), [((("a")), 100000000, 0, -267)], (0)), 100000000, 0, -266), 0), 100000000, 0, -265), 0), 100000000, 0, -264), 0), 100000000, 0, -263), 0, (("clib/monad.mli", 91, 3190, 3206), ("clib/monad.mli", 91, 3190, 3234), 0), 0, Tag1 ("Monad", 10)), 0); (("iter", 397), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -259), (Tag3 ((("t", 387)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -262)], (0)), 100000000, 0, -261), 0), 100000000, 0, -260), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -259)], (0)), 100000000, 0, -258), (Tag3 ((("t", 387)), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -257)], (0)), 100000000, 0, -256), 0), 100000000, 0, -255), 0), 100000000, 0, -254), 0, (("clib/monad.mli", 91, 3190, 3206), ("clib/monad.mli", 91, 3190, 3234), 0), 0, Tag1 ("Monad", 11)), 0); (("map_filter", 398), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -250), (Tag3 ((("t", 387)), [(Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -248)], (0)), 100000000, 0, -253)], (0)), 100000000, 0, -252), 0), 100000000, 0, -251), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -250)], (0)), 100000000, 0, -249), (Tag3 ((("t", 387)), [(Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -248)], (0)), 100000000, 0, -247)], (0)), 100000000, 0, -246), 0), 100000000, 0, -245), 0), 100000000, 0, -244), 0, (("clib/monad.mli", 91, 3190, 3206), ("clib/monad.mli", 91, 3190, 3234), 0), 0, Tag1 ("Monad", 12)), 0); (("fold_left2", 399), ((Tag1 (0, (Tag3 ((("t", 387)), [((("a")), 100000000, 0, -234)], (0)), 100000000, 0, -243), (Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -234), (Tag1 (0, ((("b")), 100000000, 0, -238), (Tag1 (0, ((("c")), 100000000, 0, -236), (Tag3 ((("t", 387)), [((("a")), 100000000, 0, -234)], (0)), 100000000, 0, -242), 0), 100000000, 0, -241), 0), 100000000, 0, -240), 0), 100000000, 0, -239), (Tag1 (0, ((("a")), 100000000, 0, -234), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("b")), 100000000, 0, -238)], (0)), 100000000, 0, -237), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("c")), 100000000, 0, -236)], (0)), 100000000, 0, -235), (Tag3 ((("t", 387)), [((("a")), 100000000, 0, -234)], (0)), 100000000, 0, -233), 0), 100000000, 0, -232), 0), 100000000, 0, -231), 0), 100000000, 0, -230), 0), 100000000, 0, -229), 0), 100000000, 0, -228), 0, (("clib/monad.mli", 91, 3190, 3206), ("clib/monad.mli", 91, 3190, 3234), 0), 0, Tag1 ("Monad", 13)), 0)]), 0, (("clib/monad.mli", 91, 3190, 3192), ("clib/monad.mli", 91, 3190, 3234), 0), Tag1 ("Monad", 16)), 0, 0)])), 0, (("clib/monad.mli", 96, 3301, 3301), ("clib/monad.mli", 96, 3301, 3349), 0), Tag1 ("Monad", 20)), 0, 0)], "Monad", [("Monad", ("\244\171T\157\194p\187\160\149\195{\132\222\020\253\148")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

    end
