val bound : int
type element = int
type t
val empty : t
val is_empty : t -> bool
val singleton : element -> t
val is_singleton : t -> bool
val cardinal : t -> int
val choose : t -> element
val mem : element -> t -> bool
val add : element -> t -> t
val remove : element -> t -> t
val union : t -> t -> t
val inter : t -> t -> t
val disjoint : t -> t -> bool
val iter : (element -> unit) -> t -> unit
val fold : (element -> 'b -> 'b) -> t -> 'b -> 'b
val elements : t -> element list
val compare : t -> t -> int
val equal : t -> t -> bool
val subset : t -> t -> bool
val iter_delta : int -> (element -> unit) -> t -> unit
("DEBUG:rule", [(("bound", 462), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -102), 0, (("src/AtomicBitSet.mli", 18, 1221, 1221), ("src/AtomicBitSet.mli", 18, 1221, 1235), 0), 0, Tag1 ("Dune__exe__AtomicBitSet", 0)), 0); Tag1 (("element", 463), (0, 0, 0, 1, ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -101)), 0, 0, 0, 0, (("src/AtomicBitSet.mli", 20, 1237, 1257), ("src/AtomicBitSet.mli", 20, 1237, 1275), 0), 0, 1, 0, Tag1 ("Dune__exe__AtomicBitSet", 1)), 1, 0); Tag1 (("t", 464), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("src/gSet.ml", 25, 1233, 1235), ("src/gSet.ml", 25, 1233, 1241), 0), 0, 0, 0, Tag1 ("Dune__exe__GSet", 1)), 1, 0); (("empty", 465), ((Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -100), 0, (("src/gSet.ml", 29, 1267, 1269), ("src/gSet.ml", 29, 1267, 1281), 0), 0, Tag1 ("Dune__exe__GSet", 2)), 0); (("is_empty", 466), ((Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -99), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -98), 0), 100000000, 0, -97), 0, (("src/gSet.ml", 33, 1341, 1343), ("src/gSet.ml", 33, 1341, 1366), 0), 0, Tag1 ("Dune__exe__GSet", 3)), 0); (("singleton", 467), ((Tag1 (0, (Tag3 ((("element", 463)), 0, (0)), 100000000, 0, -96), (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -95), 0), 100000000, 0, -94), 0, (("src/gSet.ml", 38, 1456, 1458), ("src/gSet.ml", 38, 1456, 1485), 0), 0, Tag1 ("Dune__exe__GSet", 4)), 0); (("is_singleton", 468), ((Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -93), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -92), 0), 100000000, 0, -91), 0, (("src/gSet.ml", 42, 1551, 1553), ("src/gSet.ml", 42, 1551, 1580), 0), 0, Tag1 ("Dune__exe__GSet", 5)), 0); (("cardinal", 469), ((Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -90), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -89), 0), 100000000, 0, -88), 0, (("src/gSet.ml", 46, 1633, 1635), ("src/gSet.ml", 46, 1633, 1657), 0), 0, Tag1 ("Dune__exe__GSet", 6)), 0); (("choose", 470), ((Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -87), (Tag3 ((("element", 463)), 0, (0)), 100000000, 0, -86), 0), 100000000, 0, -85), 0, (("src/gSet.ml", 51, 1784, 1786), ("src/gSet.ml", 51, 1784, 1810), 0), 0, Tag1 ("Dune__exe__GSet", 7)), 0); (("mem", 471), ((Tag1 (0, (Tag3 ((("element", 463)), 0, (0)), 100000000, 0, -84), (Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -83), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -82), 0), 100000000, 0, -81), 0), 100000000, 0, -80), 0, (("src/gSet.ml", 56, 1894, 1896), ("src/gSet.ml", 56, 1894, 1925), 0), 0, Tag1 ("Dune__exe__GSet", 8)), 0); (("add", 472), ((Tag1 (0, (Tag3 ((("element", 463)), 0, (0)), 100000000, 0, -79), (Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -78), (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0), 100000000, 0, -75), 0, (("src/gSet.ml", 61, 2015, 2017), ("src/gSet.ml", 61, 2015, 2043), 0), 0, Tag1 ("Dune__exe__GSet", 9)), 0); (("remove", 473), ((Tag1 (0, (Tag3 ((("element", 463)), 0, (0)), 100000000, 0, -74), (Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -73), (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), 0, (("src/gSet.ml", 66, 2138, 2140), ("src/gSet.ml", 66, 2138, 2169), 0), 0, Tag1 ("Dune__exe__GSet", 10)), 0); (("union", 474), ((Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -69), (Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -68), (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -67), 0), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("src/gSet.ml", 70, 2239, 2241), ("src/gSet.ml", 70, 2239, 2263), 0), 0, Tag1 ("Dune__exe__GSet", 11)), 0); (("inter", 475), ((Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -64), (Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -63), (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("src/gSet.ml", 75, 2356, 2358), ("src/gSet.ml", 75, 2356, 2380), 0), 0, Tag1 ("Dune__exe__GSet", 12)), 0); (("disjoint", 476), ((Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -59), (Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -58), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0), 100000000, 0, -55), 0, (("src/gSet.ml", 80, 2518, 2520), ("src/gSet.ml", 80, 2518, 2548), 0), 0, Tag1 ("Dune__exe__GSet", 13)), 0); (("iter", 477), ((Tag1 (0, (Tag1 (0, (Tag3 ((("element", 463)), 0, (0)), 100000000, 0, -54), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -53), 0), 100000000, 0, -52), (Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -51), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("src/gSet.ml", 85, 2687, 2689), ("src/gSet.ml", 85, 2687, 2729), 0), 0, Tag1 ("Dune__exe__GSet", 14)), 0); (("fold", 478), ((Tag1 (0, (Tag1 (0, (Tag3 ((("element", 463)), 0, (0)), 100000000, 0, -47), (Tag1 (0, ((("b")), 100000000, 0, -43), ((("b")), 100000000, 0, -43), 0), 100000000, 0, -46), 0), 100000000, 0, -45), (Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -44), (Tag1 (0, ((("b")), 100000000, 0, -43), ((("b")), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("src/gSet.ml", 96, 3275, 3277), ("src/gSet.ml", 96, 3275, 3325), 0), 0, Tag1 ("Dune__exe__GSet", 15)), 0); (("elements", 479), ((Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -39), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("element", 463)), 0, (0)), 100000000, 0, -38)], (0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("src/gSet.ml", 100, 3391, 3393), ("src/gSet.ml", 100, 3391, 3424), 0), 0, Tag1 ("Dune__exe__GSet", 16)), 0); (("compare", 480), ((Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -35), (Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -34), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("src/gSet.ml", 104, 3471, 3473), ("src/gSet.ml", 104, 3471, 3499), 0), 0, Tag1 ("Dune__exe__GSet", 17)), 0); (("equal", 481), ((Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -30), (Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -29), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("src/gSet.ml", 108, 3549, 3551), ("src/gSet.ml", 108, 3549, 3576), 0), 0, Tag1 ("Dune__exe__GSet", 18)), 0); (("subset", 482), ((Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -25), (Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -24), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("src/gSet.ml", 112, 3639, 3641), ("src/gSet.ml", 112, 3639, 3669), 0), 0, Tag1 ("Dune__exe__GSet", 19)), 0); (("iter_delta", 483), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -20), (Tag1 (0, (Tag1 (0, (Tag3 ((("element", 463)), 0, (0)), 100000000, 0, -19), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), (Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -16), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("src/AtomicBitSet.mli", 26, 1498, 1498), ("src/AtomicBitSet.mli", 26, 1498, 1551), 0), 0, Tag1 ("Dune__exe__AtomicBitSet", 2)), 0); (("fold_delta", 484), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -11), (Tag1 (0, (Tag1 (0, (Tag3 ((("element", 463)), 0, (0)), 100000000, 0, -10), (Tag1 (0, ((("b")), 100000000, 0, -6), ((("b")), 100000000, 0, -6), 0), 100000000, 0, -9), 0), 100000000, 0, -8), (Tag1 (0, (Tag3 ((("t", 464)), 0, (0)), 100000000, 0, -7), (Tag1 (0, ((("b")), 100000000, 0, -6), ((("b")), 100000000, 0, -6), 0), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/AtomicBitSet.mli", 27, 1552, 1552), ("src/AtomicBitSet.mli", 27, 1552, 1613), 0), 0, Tag1 ("Dune__exe__AtomicBitSet", 3)), 0)], "Dune__exe__AtomicBitSet", [("Dune__exe__AtomicBitSet", ("\r\250Q\194\128\132\1703\132\202l\205\236c\003\025")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("MenhirSdk", ("F\232\012\196l\143\145[\255\2193U\197\027\176\139")); ("Dune__exe__GSet", ("\246\0066\220ky~\0042_c\205p\186\249\170")); ("Dune__exe", ("\137\000\197\175$\007]\218\141\248\172\212\146c\153\212")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val fold_delta : int -> (element -> 'b -> 'b) -> t -> 'b -> 'b
