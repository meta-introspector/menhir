module type Control =
  sig
    type handle
    val kill : handle -> unit
    val wait : handle -> Unix.process_status
    val unixpid : handle -> int
    val uid : handle -> string
    val is_alive : handle -> bool
  end
module type MainLoopModel =
  sig
    type async_chan
    type condition
    type watch_id
    val add_watch :
      callback:(condition list -> bool) -> async_chan -> watch_id
    val remove_watch : watch_id -> unit
    val read_all : async_chan -> string
    val async_chan_of_file : Unix.file_descr -> async_chan
    val async_chan_of_socket : Unix.file_descr -> async_chan
  end
module Async :
  functor (ML : MainLoopModel) ->
    sig
      type process
      type callback = ML.condition list -> read_all:(unit -> string) -> bool
      val spawn :
        ?prefer_sock:bool ->
        ?env:string array ->
        string -> string array -> callback -> process * out_channel
      type handle = process
      val kill : handle -> unit
      val wait : handle -> Unix.process_status
      val unixpid : handle -> int
      val uid : handle -> string
      val is_alive : handle -> bool
    end
module Sync :
  functor () ->
    sig
      type process
      val spawn :
        ?prefer_sock:bool ->
        ?env:string array ->
        string -> string array -> process * in_channel * out_channel
      type handle = process
      val kill : handle -> unit
      val wait : handle -> Unix.process_status
      val unixpid : handle -> int
      val uid : handle -> string
      val is_alive : handle -> bool
    end
type req = ReqDie | Hello of int * int("DEBUG:rule", [Tag4 (("Control", 573), ((Tag1 ([Tag1 (("handle", 580), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/spawn.mli", 25, 1230, 1232), ("lib/spawn.mli", 25, 1230, 1243), 0), 0, 0, 0, Tag1 ("Spawn", 0)), 1, 0); (("kill", 581), ((Tag1 (0, (Tag3 ((("handle", 580)), 0, (0)), 100000000, 0, -19), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("lib/spawn.mli", 27, 1245, 1247), ("lib/spawn.mli", 27, 1245, 1272), 0), 0, Tag1 ("Spawn", 1)), 0); (("wait", 582), ((Tag1 (0, (Tag3 ((("handle", 580)), 0, (0)), 100000000, 0, -16), (Tag3 (Tag1 ((Tag2 ("Unix")), "process_status"), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("lib/spawn.mli", 28, 1273, 1275), ("lib/spawn.mli", 28, 1273, 1315), 0), 0, Tag1 ("Spawn", 2)), 0); (("unixpid", 583), ((Tag1 (0, (Tag3 ((("handle", 580)), 0, (0)), 100000000, 0, -13), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("lib/spawn.mli", 29, 1316, 1318), ("lib/spawn.mli", 29, 1316, 1345), 0), 0, Tag1 ("Spawn", 3)), 0); (("uid", 584), ((Tag1 (0, (Tag3 ((("handle", 580)), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("lib/spawn.mli", 32, 1386, 1388), ("lib/spawn.mli", 32, 1386, 1414), 0), 0, Tag1 ("Spawn", 4)), 0); (("is_alive", 585), ((Tag1 (0, (Tag3 ((("handle", 580)), 0, (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("lib/spawn.mli", 34, 1416, 1418), ("lib/spawn.mli", 34, 1416, 1447), 0), 0, Tag1 ("Spawn", 5)), 0)])), 0, (("lib/spawn.mli", 24, 1204, 1204), ("lib/spawn.mli", 35, 1448, 1451), 0), Tag1 ("Spawn", 6)), 0); Tag4 (("MainLoopModel", 574), ((Tag1 ([Tag1 (("async_chan", 586), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/spawn.mli", 39, 1550, 1552), ("lib/spawn.mli", 39, 1550, 1567), 0), 0, 0, 0, Tag1 ("Spawn", 7)), 1, 0); Tag1 (("condition", 587), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/spawn.mli", 40, 1568, 1570), ("lib/spawn.mli", 40, 1568, 1584), 0), 0, 0, 0, Tag1 ("Spawn", 8)), 1, 0); Tag1 (("watch_id", 588), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/spawn.mli", 41, 1585, 1587), ("lib/spawn.mli", 41, 1585, 1600), 0), 0, 0, 0, Tag1 ("Spawn", 9)), 1, 0); (("add_watch", 589), ((Tag1 (("callback"), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("condition", 587)), 0, (0)), 100000000, 0, -39)], (0)), 100000000, 0, -38), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -37), 0), 100000000, 0, -36), (Tag1 (0, (Tag3 ((("async_chan", 586)), 0, (0)), 100000000, 0, -35), (Tag3 ((("watch_id", 588)), 0, (0)), 100000000, 0, -34), 0), 100000000, 0, -33), 0), 100000000, 0, -32), 0, (("lib/spawn.mli", 43, 1602, 1604), ("lib/spawn.mli", 43, 1602, 1679), 0), 0, Tag1 ("Spawn", 10)), 0); (("remove_watch", 590), ((Tag1 (0, (Tag3 ((("watch_id", 588)), 0, (0)), 100000000, 0, -31), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("lib/spawn.mli", 44, 1680, 1682), ("lib/spawn.mli", 44, 1680, 1717), 0), 0, Tag1 ("Spawn", 11)), 0); (("read_all", 591), ((Tag1 (0, (Tag3 ((("async_chan", 586)), 0, (0)), 100000000, 0, -28), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("lib/spawn.mli", 45, 1718, 1720), ("lib/spawn.mli", 45, 1718, 1755), 0), 0, Tag1 ("Spawn", 12)), 0); (("async_chan_of_file", 592), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Unix")), "file_descr"), 0, (0)), 100000000, 0, -25), (Tag3 ((("async_chan", 586)), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("lib/spawn.mli", 46, 1756, 1758), ("lib/spawn.mli", 46, 1756, 1812), 0), 0, Tag1 ("Spawn", 13)), 0); (("async_chan_of_socket", 593), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Unix")), "file_descr"), 0, (0)), 100000000, 0, -22), (Tag3 ((("async_chan", 586)), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("lib/spawn.mli", 47, 1813, 1815), ("lib/spawn.mli", 47, 1813, 1871), 0), 0, Tag1 ("Spawn", 14)), 0)])), 0, (("lib/spawn.mli", 38, 1518, 1518), ("lib/spawn.mli", 48, 1872, 1875), 0), Tag1 ("Spawn", 15)), 0); Tag3 (("Async", 575), 0, (Tag2 (((("ML", 579)), ((("MainLoopModel", 574)))), Tag1 ([Tag1 (("process", 594), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/spawn.mli", 52, 1973, 1975), ("lib/spawn.mli", 52, 1973, 1987), 0), 0, 0, 0, Tag1 ("Spawn", 17)), 1, 0); Tag1 (("callback", 595), (0, 0, 0, 1, ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("ML", 579)), "condition"), 0, (0)), 100000000, 0, -80)], (0)), 100000000, 0, -79), (Tag1 (("read_all"), (Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -78), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -77), 0), 100000000, 0, -76), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), 0), 100000000, 0, -73)), 0, 0, 0, 0, (("lib/spawn.mli", 56, 2094, 2096), ("lib/spawn.mli", 56, 2094, 2166), 0), 0, 0, 0, Tag1 ("Spawn", 18)), 1, 0); (("spawn", 596), ((Tag1 (Tag1 ("prefer_sock"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -72)], (0)), 100000000, 0, -71), (Tag1 (Tag1 ("env"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -70)], (0)), 100000000, 0, -69)], (0)), 100000000, 0, -68), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -67), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -66)], (0)), 100000000, 0, -65), (Tag1 (0, (Tag3 ((("callback", 595)), 0, (0)), 100000000, 0, -64), (Tag2 ([(Tag3 ((("process", 594)), 0, (0)), 100000000, 0, -62); (Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -63)]), 100000000, 0, -61), 0), 100000000, 0, -60), 0), 100000000, 0, -59), 0), 100000000, 0, -58), 0), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("lib/spawn.mli", 58, 2168, 2170), ("lib/spawn.mli", 60, 2254, 2293), 0), 0, Tag1 ("Spawn", 19)), 0); Tag1 (("handle", 597), (0, 0, 0, 1, ((Tag3 ((("process", 594)), 0, (0)), 100000000, 0, -55)), 0, 0, 0, 0, (("lib/spawn.mli", 62, 2295, 2318), ("lib/spawn.mli", 62, 2295, 2339), 0), 0, 0, 0, Tag1 ("Spawn", 20)), 1, 0); (("kill", 598), ((Tag1 (0, (Tag3 ((("handle", 597)), 0, (0)), 100000000, 0, -54), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -53), 0), 100000000, 0, -52), 0, (("lib/spawn.mli", 27, 1245, 1247), ("lib/spawn.mli", 27, 1245, 1272), 0), 0, Tag1 ("Spawn", 1)), 0); (("wait", 599), ((Tag1 (0, (Tag3 ((("handle", 597)), 0, (0)), 100000000, 0, -51), (Tag3 (Tag1 ((Tag2 ("Unix")), "process_status"), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0, (("lib/spawn.mli", 28, 1273, 1275), ("lib/spawn.mli", 28, 1273, 1315), 0), 0, Tag1 ("Spawn", 2)), 0); (("unixpid", 600), ((Tag1 (0, (Tag3 ((("handle", 597)), 0, (0)), 100000000, 0, -48), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("lib/spawn.mli", 29, 1316, 1318), ("lib/spawn.mli", 29, 1316, 1345), 0), 0, Tag1 ("Spawn", 3)), 0); (("uid", 601), ((Tag1 (0, (Tag3 ((("handle", 597)), 0, (0)), 100000000, 0, -45), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -44), 0), 100000000, 0, -43), 0, (("lib/spawn.mli", 32, 1386, 1388), ("lib/spawn.mli", 32, 1386, 1414), 0), 0, Tag1 ("Spawn", 4)), 0); (("is_alive", 602), ((Tag1 (0, (Tag3 ((("handle", 597)), 0, (0)), 100000000, 0, -42), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("lib/spawn.mli", 34, 1416, 1418), ("lib/spawn.mli", 34, 1416, 1447), 0), 0, Tag1 ("Spawn", 5)), 0)])), 0, (("lib/spawn.mli", 51, 1934, 1934), ("lib/spawn.mli", 63, 2340, 2343), 0), Tag1 ("Spawn", 21)), 0, 0); Tag3 (("Sync", 576), 0, (Tag2 (0, Tag1 ([Tag1 (("process", 603), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("lib/spawn.mli", 67, 2422, 2424), ("lib/spawn.mli", 67, 2422, 2436), 0), 0, 0, 0, Tag1 ("Spawn", 22)), 1, 0); (("spawn", 604), ((Tag1 (Tag1 ("prefer_sock"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -112)], (0)), 100000000, 0, -111), (Tag1 (Tag1 ("env"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -110)], (0)), 100000000, 0, -109)], (0)), 100000000, 0, -108), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -107), (Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -106)], (0)), 100000000, 0, -105), (Tag2 ([(Tag3 ((("process", 603)), 0, (0)), 100000000, 0, -102); (Tag3 (Tag1 ((Tag2 ("Stdlib")), "in_channel"), 0, (0)), 100000000, 0, -103); (Tag3 (Tag1 ((Tag2 ("Stdlib")), "out_channel"), 0, (0)), 100000000, 0, -104)]), 100000000, 0, -101), 0), 100000000, 0, -100), 0), 100000000, 0, -99), 0), 100000000, 0, -98), 0), 100000000, 0, -97), 0, (("lib/spawn.mli", 69, 2438, 2440), ("lib/spawn.mli", 71, 2524, 2564), 0), 0, Tag1 ("Spawn", 23)), 0); Tag1 (("handle", 605), (0, 0, 0, 1, ((Tag3 ((("process", 603)), 0, (0)), 100000000, 0, -96)), 0, 0, 0, 0, (("lib/spawn.mli", 73, 2566, 2589), ("lib/spawn.mli", 73, 2566, 2610), 0), 0, 0, 0, Tag1 ("Spawn", 24)), 1, 0); (("kill", 606), ((Tag1 (0, (Tag3 ((("handle", 605)), 0, (0)), 100000000, 0, -95), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -94), 0), 100000000, 0, -93), 0, (("lib/spawn.mli", 27, 1245, 1247), ("lib/spawn.mli", 27, 1245, 1272), 0), 0, Tag1 ("Spawn", 1)), 0); (("wait", 607), ((Tag1 (0, (Tag3 ((("handle", 605)), 0, (0)), 100000000, 0, -92), (Tag3 (Tag1 ((Tag2 ("Unix")), "process_status"), 0, (0)), 100000000, 0, -91), 0), 100000000, 0, -90), 0, (("lib/spawn.mli", 28, 1273, 1275), ("lib/spawn.mli", 28, 1273, 1315), 0), 0, Tag1 ("Spawn", 2)), 0); (("unixpid", 608), ((Tag1 (0, (Tag3 ((("handle", 605)), 0, (0)), 100000000, 0, -89), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -88), 0), 100000000, 0, -87), 0, (("lib/spawn.mli", 29, 1316, 1318), ("lib/spawn.mli", 29, 1316, 1345), 0), 0, Tag1 ("Spawn", 3)), 0); (("uid", 609), ((Tag1 (0, (Tag3 ((("handle", 605)), 0, (0)), 100000000, 0, -86), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -85), 0), 100000000, 0, -84), 0, (("lib/spawn.mli", 32, 1386, 1388), ("lib/spawn.mli", 32, 1386, 1414), 0), 0, Tag1 ("Spawn", 4)), 0); (("is_alive", 610), ((Tag1 (0, (Tag3 ((("handle", 605)), 0, (0)), 100000000, 0, -83), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -82), 0), 100000000, 0, -81), 0, (("lib/spawn.mli", 34, 1416, 1418), ("lib/spawn.mli", 34, 1416, 1447), 0), 0, Tag1 ("Spawn", 5)), 0)])), 0, (("lib/spawn.mli", 66, 2401, 2401), ("lib/spawn.mli", 74, 2611, 2614), 0), Tag1 ("Spawn", 25)), 0, 0); Tag1 (("req", 577), (0, 0, Tag1 ([(("ReqDie", 536), (0), 0, (("lib/spawn.mli", 78, 2738, 2749), ("lib/spawn.mli", 78, 2738, 2755), 0), 0, Tag1 ("Spawn", 27)); (("Hello", 537), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -4)]), 0, (("lib/spawn.mli", 78, 2738, 2756), ("lib/spawn.mli", 78, 2738, 2776), 0), 0, Tag1 ("Spawn", 28))], 0), 1, 0, 0, 0, 0, 0, (("lib/spawn.mli", 78, 2738, 2738), ("lib/spawn.mli", 78, 2738, 2776), 0), 0, 0, 0, Tag1 ("Spawn", 26)), 1, 0); (("proto_version", 578), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2), 0, (("lib/spawn.mli", 79, 2777, 2777), ("lib/spawn.mli", 79, 2777, 2800), 0), 0, Tag1 ("Spawn", 29)), 0)], "Spawn", [("Spawn", ("\153\190\194\141\144\030Q\247(\219\014\202\157'\237L")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val proto_version : int
