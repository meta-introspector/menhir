type cbv_infos
val create_cbv_infos :
  CClosure.RedFlags.reds -> Environ.env -> Evd.evar_map -> cbv_infos
val cbv_norm : cbv_infos -> EConstr.constr -> EConstr.constr
type cbv_value =
    VAL of int * Constr.constr
  | STACK of int * cbv_value * cbv_stack
  | CBN of Constr.constr * cbv_value Esubst.subs
  | LAM of int * (Names.Name.t Context.binder_annot * Constr.constr) list *
      Constr.constr * cbv_value Esubst.subs
  | FIXP of Constr.fixpoint * cbv_value Esubst.subs * cbv_value array
  | COFIXP of Constr.cofixpoint * cbv_value Esubst.subs * cbv_value array
  | CONSTR of Names.constructor Univ.puniverses * cbv_value array
  | PRIMITIVE of CPrimitives.t * Constr.pconstant * cbv_value array
  | ARRAY of Univ.Instance.t * cbv_value Parray.t * cbv_value
and cbv_stack =
    TOP
  | APP of cbv_value list * cbv_stack
  | CASE of Univ.Instance.t * Constr.constr array * Constr.case_return *
      Constr.case_branch array * Constr.case_invert * Constr.case_info *
      cbv_value Esubst.subs * cbv_stack
  | PROJ of Names.Projection.t * cbv_stack
val shift_value : int -> cbv_value -> cbv_value
val stack_app : cbv_value list -> cbv_stack -> cbv_stack
val strip_appl : cbv_value -> cbv_stack -> cbv_value * cbv_stack
val cbv_stack_term :
  cbv_infos ->
  cbv_stack -> cbv_value Esubst.subs -> Constr.constr -> cbv_value
val cbv_norm_term :
  cbv_infos -> cbv_value Esubst.subs -> Constr.constr -> Constr.constr
val norm_head :
  cbv_infos ->
  cbv_value Esubst.subs ->
  Constr.constr -> cbv_stack -> cbv_value * cbv_stack
val apply_stack : cbv_infos -> Constr.constr -> cbv_stack -> Constr.constr
("DEBUG:rule", [Tag1 (("cbv_infos", 1399), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("pretyping/cbv.mli", 21, 898, 898), ("pretyping/cbv.mli", 21, 898, 912), 0), 0, 0, 0, Tag1 ("Cbv", 0)), 1, 0); (("create_cbv_infos", 1400), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("CClosure")), "RedFlags"), "reds"), 0, (0)), 100000000, 0, -128), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -127), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -126), (Tag3 ((("cbv_infos", 1399)), 0, (0)), 100000000, 0, -125), 0), 100000000, 0, -124), 0), 100000000, 0, -123), 0), 100000000, 0, -122), 0, (("pretyping/cbv.mli", 23, 914, 914), ("pretyping/cbv.mli", 23, 914, 986), 0), 0, Tag1 ("Cbv", 1)), 0); (("cbv_norm", 1401), ((Tag1 (0, (Tag3 ((("cbv_infos", 1399)), 0, (0)), 100000000, 0, -121), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -120), (Tag3 (Tag1 ((Tag2 ("EConstr")), "constr"), 0, (0)), 100000000, 0, -119), 0), 100000000, 0, -118), 0), 100000000, 0, -117), 0, (("pretyping/cbv.mli", 24, 987, 987), ("pretyping/cbv.mli", 24, 987, 1039), 0), 0, Tag1 ("Cbv", 2)), 0); Tag1 (("cbv_value", 1402), (0, 0, Tag1 ([(("VAL", 1174), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -78); (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -79)]), 0, (("pretyping/cbv.mli", 32, 1174, 1176), ("pretyping/cbv.mli", 32, 1174, 1197), 0), 0, Tag1 ("Cbv", 6)); (("STACK", 1175), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -80); (Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -81); (Tag3 ((("cbv_stack", 1403)), 0, (0)), 100000000, 0, -82)]), 0, (("pretyping/cbv.mli", 33, 1198, 1200), ("pretyping/cbv.mli", 33, 1198, 1238), 0), 0, Tag1 ("Cbv", 7)); (("CBN", 1176), ([(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -83); (Tag3 (Tag1 ((Tag2 ("Esubst")), "subs"), [(Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -85)], (0)), 100000000, 0, -84)]), 0, (("pretyping/cbv.mli", 34, 1239, 1241), ("pretyping/cbv.mli", 34, 1239, 1273), 0), 0, Tag1 ("Cbv", 8)); (("LAM", 1177), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -86); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Context")), "binder_annot"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -90)], (0)), 100000000, 0, -89); (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -91)]), 100000000, 0, -88)], (0)), 100000000, 0, -87); (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -92); (Tag3 (Tag1 ((Tag2 ("Esubst")), "subs"), [(Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -94)], (0)), 100000000, 0, -93)]), 0, (("pretyping/cbv.mli", 35, 1274, 1276), ("pretyping/cbv.mli", 35, 1274, 1360), 0), 0, Tag1 ("Cbv", 9)); (("FIXP", 1200), ([(Tag3 (Tag1 ((Tag2 ("Constr")), "fixpoint"), 0, (0)), 100000000, 0, -95); (Tag3 (Tag1 ((Tag2 ("Esubst")), "subs"), [(Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -97)], (0)), 100000000, 0, -96); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -99)], (0)), 100000000, 0, -98)]), 0, (("pretyping/cbv.mli", 36, 1361, 1363), ("pretyping/cbv.mli", 36, 1361, 1416), 0), 0, Tag1 ("Cbv", 10)); (("COFIXP", 1201), ([(Tag3 (Tag1 ((Tag2 ("Constr")), "cofixpoint"), 0, (0)), 100000000, 0, -100); (Tag3 (Tag1 ((Tag2 ("Esubst")), "subs"), [(Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -102)], (0)), 100000000, 0, -101); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -104)], (0)), 100000000, 0, -103)]), 0, (("pretyping/cbv.mli", 37, 1417, 1419), ("pretyping/cbv.mli", 37, 1417, 1476), 0), 0, Tag1 ("Cbv", 11)); (("CONSTR", 1202), ([(Tag3 (Tag1 ((Tag2 ("Univ")), "puniverses"), [(Tag3 (Tag1 ((Tag2 ("Names")), "constructor"), 0, (0)), 100000000, 0, -106)], (0)), 100000000, 0, -105); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -108)], (0)), 100000000, 0, -107)]), 0, (("pretyping/cbv.mli", 38, 1477, 1479), ("pretyping/cbv.mli", 38, 1477, 1536), 0), 0, Tag1 ("Cbv", 12)); (("PRIMITIVE", 1259), ([(Tag3 (Tag1 ((Tag2 ("CPrimitives")), "t"), 0, (0)), 100000000, 0, -109); (Tag3 (Tag1 ((Tag2 ("Constr")), "pconstant"), 0, (0)), 100000000, 0, -110); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -112)], (0)), 100000000, 0, -111)]), 0, (("pretyping/cbv.mli", 39, 1537, 1539), ("pretyping/cbv.mli", 39, 1537, 1597), 0), 0, Tag1 ("Cbv", 13)); (("ARRAY", 1288), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Instance"), "t"), 0, (0)), 100000000, 0, -113); (Tag3 (Tag1 ((Tag2 ("Parray")), "t"), [(Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -115)], (0)), 100000000, 0, -114); (Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -116)]), 0, (("pretyping/cbv.mli", 40, 1598, 1600), ("pretyping/cbv.mli", 40, 1598, 1659), 0), 0, Tag1 ("Cbv", 14))], 0), 1, 0, 0, 0, 0, 0, (("pretyping/cbv.mli", 31, 1157, 1157), ("pretyping/cbv.mli", 40, 1598, 1659), 0), 0, 0, 0, Tag1 ("Cbv", 4)), 1, 0); Tag1 (("cbv_stack", 1403), (0, 0, Tag1 ([(("TOP", 1318), (0), 0, (("pretyping/cbv.mli", 43, 1677, 1679), ("pretyping/cbv.mli", 43, 1677, 1684), 0), 0, Tag1 ("Cbv", 15)); (("APP", 1319), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -63)], (0)), 100000000, 0, -62); (Tag3 ((("cbv_stack", 1403)), 0, (0)), 100000000, 0, -64)]), 0, (("pretyping/cbv.mli", 44, 1685, 1687), ("pretyping/cbv.mli", 44, 1685, 1722), 0), 0, Tag1 ("Cbv", 16)); (("CASE", 1320), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Univ")), "Instance"), "t"), 0, (0)), 100000000, 0, -65); (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -67)], (0)), 100000000, 0, -66); (Tag3 (Tag1 ((Tag2 ("Constr")), "case_return"), 0, (0)), 100000000, 0, -68); (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 ((Tag2 ("Constr")), "case_branch"), 0, (0)), 100000000, 0, -70)], (0)), 100000000, 0, -69); (Tag3 (Tag1 ((Tag2 ("Constr")), "case_invert"), 0, (0)), 100000000, 0, -71); (Tag3 (Tag1 ((Tag2 ("Constr")), "case_info"), 0, (0)), 100000000, 0, -72); (Tag3 (Tag1 ((Tag2 ("Esubst")), "subs"), [(Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -74)], (0)), 100000000, 0, -73); (Tag3 ((("cbv_stack", 1403)), 0, (0)), 100000000, 0, -75)]), 0, (("pretyping/cbv.mli", 45, 1723, 1725), ("pretyping/cbv.mli", 45, 1723, 1861), 0), 0, Tag1 ("Cbv", 17)); (("PROJ", 1321), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Projection"), "t"), 0, (0)), 100000000, 0, -76); (Tag3 ((("cbv_stack", 1403)), 0, (0)), 100000000, 0, -77)]), 0, (("pretyping/cbv.mli", 46, 1862, 1864), ("pretyping/cbv.mli", 46, 1862, 1898), 0), 0, Tag1 ("Cbv", 18))], 0), 1, 0, 0, 0, 0, 0, (("pretyping/cbv.mli", 42, 1661, 1661), ("pretyping/cbv.mli", 46, 1862, 1898), 0), 0, 0, 0, Tag1 ("Cbv", 5)), 2, 0); (("shift_value", 1404), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -61), (Tag1 (0, (Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -60), (Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -59), 0), 100000000, 0, -58), 0), 100000000, 0, -57), 0, (("pretyping/cbv.mli", 48, 1900, 1900), ("pretyping/cbv.mli", 48, 1900, 1947), 0), 0, Tag1 ("Cbv", 19)), 0); (("stack_app", 1405), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -56)], (0)), 100000000, 0, -55), (Tag1 (0, (Tag3 ((("cbv_stack", 1403)), 0, (0)), 100000000, 0, -54), (Tag3 ((("cbv_stack", 1403)), 0, (0)), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("pretyping/cbv.mli", 50, 1949, 1949), ("pretyping/cbv.mli", 50, 1949, 2005), 0), 0, Tag1 ("Cbv", 20)), 0); (("strip_appl", 1406), ((Tag1 (0, (Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 ((("cbv_stack", 1403)), 0, (0)), 100000000, 0, -49), (Tag2 ([(Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -47); (Tag3 ((("cbv_stack", 1403)), 0, (0)), 100000000, 0, -48)]), 100000000, 0, -46), 0), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("pretyping/cbv.mli", 51, 2006, 2006), ("pretyping/cbv.mli", 51, 2006, 2070), 0), 0, Tag1 ("Cbv", 21)), 0); (("cbv_stack_term", 1407), ((Tag1 (0, (Tag3 ((("cbv_infos", 1399)), 0, (0)), 100000000, 0, -43), (Tag1 (0, (Tag3 ((("cbv_stack", 1403)), 0, (0)), 100000000, 0, -42), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Esubst")), "subs"), [(Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -41)], (0)), 100000000, 0, -40), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -39), (Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -38), 0), 100000000, 0, -37), 0), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("pretyping/cbv.mli", 54, 2102, 2102), ("pretyping/cbv.mli", 55, 2136, 2188), 0), 0, Tag1 ("Cbv", 22)), 0); (("cbv_norm_term", 1408), ((Tag1 (0, (Tag3 ((("cbv_infos", 1399)), 0, (0)), 100000000, 0, -33), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Esubst")), "subs"), [(Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -32)], (0)), 100000000, 0, -31), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -30), (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("pretyping/cbv.mli", 56, 2189, 2189), ("pretyping/cbv.mli", 56, 2189, 2256), 0), 0, Tag1 ("Cbv", 23)), 0); (("norm_head", 1409), ((Tag1 (0, (Tag3 ((("cbv_infos", 1399)), 0, (0)), 100000000, 0, -25), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Esubst")), "subs"), [(Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -24)], (0)), 100000000, 0, -23), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -22), (Tag1 (0, (Tag3 ((("cbv_stack", 1403)), 0, (0)), 100000000, 0, -21), (Tag2 ([(Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -19); (Tag3 ((("cbv_stack", 1403)), 0, (0)), 100000000, 0, -20)]), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("pretyping/cbv.mli", 57, 2257, 2257), ("pretyping/cbv.mli", 58, 2286, 2350), 0), 0, Tag1 ("Cbv", 24)), 0); (("apply_stack", 1410), ((Tag1 (0, (Tag3 ((("cbv_infos", 1399)), 0, (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -12), (Tag1 (0, (Tag3 ((("cbv_stack", 1403)), 0, (0)), 100000000, 0, -11), (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("pretyping/cbv.mli", 59, 2351, 2351), ("pretyping/cbv.mli", 59, 2351, 2411), 0), 0, Tag1 ("Cbv", 25)), 0); (("cbv_norm_value", 1411), ((Tag1 (0, (Tag3 ((("cbv_infos", 1399)), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((("cbv_value", 1402)), 0, (0)), 100000000, 0, -5), (Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("pretyping/cbv.mli", 60, 2412, 2412), ("pretyping/cbv.mli", 60, 2412, 2465), 0), 0, Tag1 ("Cbv", 26)), 0)], "Cbv", [("Cbv", ("\019\164<\242\204$\188\230\005E\021Gaf4a")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("UnivSubst", ("\190qu\031mc\130\181\003G]\132\"\219m)")); ("UnivProblem", ("6'\161\018\181\001.\253\000\141a6\171\1727\155")); ("UnivNames", ("%\151_\209%+JM$n\001\232\194n\178N")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UState", ("SD\203\215|\136\n\251\239\208\148\215C\n\167\005")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Store", ("/dT\252\145\179pq\216{\181\206\190K+U")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("Section", ("\245\207\b\021\142v=\155#w\246}\"4b\006")); ("Safe_typing", (")\250?\164\145\132\241\127\186\152h+\145\"\237l")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("Nativevalues", ("8:\007\025e\226c,\001\171\146#l\210\171\152")); ("Nativelib", ("V\239\205Y1\147E:,\176\196Hy\1483|")); ("Nativecode", ("\190\185\255\006m\012\210\163\138Rz\247\15283\183")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Monad", ("\244\171T\157\194p\187\160\149\195{\132\222\020\253\148")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hook", ("\183\194\223\003\155\169',\187\240a;E\b\1396")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Genlambda", ("\170}\024\241\141\222\136S\169\219\2212i\134KI")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evd", ("\211\205p\193\216\129r\006\239oN\142ar\196\175")); ("Evar_kinds", ("\023L\186\132\218}\254\221\185\198\220\200h\003{\021")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("EConstr", ("\201aW\156\157;N\004\201V\208\006L\166\211)")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conversion", ("\158\150&\195M\tv\127|\029\158RRK\211A")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CDebug", ("^4\210p7\239!3\138\138\213?\239`\250\157")); ("CClosure", ("\167\b\022\241V-\r\253\b\002\000j]\223%\142")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
val cbv_norm_value : cbv_infos -> cbv_value -> Constr.constr
