val isVarRef : Names.GlobRef.t -> bool
val isConstRef : Names.GlobRef.t -> bool
val isIndRef : Names.GlobRef.t -> bool
val isConstructRef : Names.GlobRef.t -> bool
val canonical_gr : Names.GlobRef.t -> Names.GlobRef.t
val destVarRef : Names.GlobRef.t -> Names.variable
val destConstRef : Names.GlobRef.t -> Names.Constant.t
val destIndRef : Names.GlobRef.t -> Names.inductive
val destConstructRef : Names.GlobRef.t -> Names.constructor
val subst_global :
  Mod_subst.substitution ->
  Names.GlobRef.t ->
  Names.GlobRef.t * Constr.constr Univ.univ_abstracted option
val subst_global_reference :
  Mod_subst.substitution -> Names.GlobRef.t -> Names.GlobRef.t
type abbreviation = Names.KerName.t
type extended_global_reference =
    TrueGlobal of Names.GlobRef.t
  | Abbrev of abbreviation
val abbreviation_eq : abbreviation -> abbreviation -> bool
module ExtRefOrdered :
  sig
    type t = extended_global_reference
    val compare : t -> t -> int
    val equal : t -> t -> bool
    val hash : t -> int
  end
module ExtRefSet :
  sig
    type elt = extended_global_reference
    type t
    val empty : t
    val is_empty : t -> bool
    val mem : elt -> t -> bool
    val add : elt -> t -> t
    val singleton : elt -> t
    val remove : elt -> t -> t
    val union : t -> t -> t
    val inter : t -> t -> t
    val diff : t -> t -> t
    val compare : t -> t -> int
    val equal : t -> t -> bool
    val subset : t -> t -> bool
    val iter : (elt -> unit) -> t -> unit
    val fold : (elt -> 'a -> 'a) -> t -> 'a -> 'a
    val for_all : (elt -> bool) -> t -> bool
    val exists : (elt -> bool) -> t -> bool
    val filter : (elt -> bool) -> t -> t
    val partition : (elt -> bool) -> t -> t * t
    val cardinal : t -> int
    val elements : t -> elt list
    val min_elt : t -> elt
    val max_elt : t -> elt
    val choose : t -> elt
    val split : elt -> t -> t * bool * t
  end
module ExtRefMap :
  sig
    type key = extended_global_reference
    type +'a t
    val empty : 'a t
    val is_empty : 'a t -> bool
    val mem : key -> 'a t -> bool
    val add : key -> 'a -> 'a t -> 'a t
    val update : key -> ('a option -> 'a option) -> 'a t -> 'a t
    val singleton : key -> 'a -> 'a t
    val remove : key -> 'a t -> 'a t
    val merge :
      (key -> 'a option -> 'b option -> 'c option) -> 'a t -> 'b t -> 'c t
    val union : (key -> 'a -> 'a -> 'a option) -> 'a t -> 'a t -> 'a t
    val compare : ('a -> 'a -> int) -> 'a t -> 'a t -> int
    val equal : ('a -> 'a -> bool) -> 'a t -> 'a t -> bool
    val iter : (key -> 'a -> unit) -> 'a t -> unit
    val fold : (key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b
    val for_all : (key -> 'a -> bool) -> 'a t -> bool
    val exists : (key -> 'a -> bool) -> 'a t -> bool
    val filter : (key -> 'a -> bool) -> 'a t -> 'a t
    val partition : (key -> 'a -> bool) -> 'a t -> 'a t * 'a t
    val cardinal : 'a t -> int
    val bindings : 'a t -> (key * 'a) list
    val min_binding : 'a t -> key * 'a
    val max_binding : 'a t -> key * 'a
    val choose : 'a t -> key * 'a
    val choose_opt : 'a t -> (key * 'a) option
    val split : key -> 'a t -> 'a t * 'a option * 'a t
    val find : key -> 'a t -> 'a
    val find_opt : key -> 'a t -> 'a option
    val map : ('a -> 'b) -> 'a t -> 'b t
    val mapi : (key -> 'a -> 'b) -> 'a t -> 'b t
    val get : key -> 'a t -> 'a
    val set : key -> 'a -> 'a t -> 'a t
    val modify : key -> (key -> 'a -> 'a) -> 'a t -> 'a t
    val domain : 'a t -> ExtRefSet.t
    val bind : (key -> 'a) -> ExtRefSet.t -> 'a t
    val fold_left : (key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b
    val fold_right : (key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b
    val height : 'a t -> int
    val filter_range : (key -> int) -> 'a t -> 'a t
    val of_list : (key * 'a) list -> 'a t
    val symmetric_diff_fold :
      (key -> 'a option -> 'a option -> 'b -> 'b) -> 'a t -> 'a t -> 'b -> 'b
    module Smart :
      sig
        val map : ('a -> 'a) -> 'a t -> 'a t
        val mapi : (key -> 'a -> 'a) -> 'a t -> 'a t
      end
    module Monad :
      functor (M : CMap.MonadS) ->
        sig
          val fold : (key -> 'a -> 'b -> 'b M.t) -> 'a t -> 'b -> 'b M.t
          val fold_left : (key -> 'a -> 'b -> 'b M.t) -> 'a t -> 'b -> 'b M.t
          val fold_right :
            (key -> 'a -> 'b -> 'b M.t) -> 'a t -> 'b -> 'b M.t
          val mapi : (key -> 'a -> 'b M.t) -> 'a t -> 'b t M.t
        end
  end
val subst_extended_reference :
  Mod_subst.substitution ->
  ("DEBUG:rule", [(("isVarRef", 964), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -55), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("library/globnames.mli", 15, 715, 715), ("library/globnames.mli", 15, 715, 747), 0), 0, Tag1 ("Globnames", 1)), 0); (("isConstRef", 965), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -52), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -51), 0), 100000000, 0, -50), 0, (("library/globnames.mli", 16, 748, 748), ("library/globnames.mli", 16, 748, 782), 0), 0, Tag1 ("Globnames", 2)), 0); (("isIndRef", 966), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -49), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("library/globnames.mli", 17, 783, 783), ("library/globnames.mli", 17, 783, 815), 0), 0, Tag1 ("Globnames", 3)), 0); (("isConstructRef", 967), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -46), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("library/globnames.mli", 18, 816, 816), ("library/globnames.mli", 18, 816, 854), 0), 0, Tag1 ("Globnames", 4)), 0); (("canonical_gr", 968), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -43), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("library/globnames.mli", 20, 856, 856), ("library/globnames.mli", 20, 856, 897), 0), 0, Tag1 ("Globnames", 5)), 0); (("destVarRef", 969), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -40), (Tag3 (Tag1 ((Tag2 ("Names")), "variable"), 0, (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("library/globnames.mli", 22, 899, 899), ("library/globnames.mli", 22, 899, 937), 0), 0, Tag1 ("Globnames", 6)), 0); (("destConstRef", 970), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -37), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Constant"), "t"), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("library/globnames.mli", 23, 938, 938), ("library/globnames.mli", 23, 938, 980), 0), 0, Tag1 ("Globnames", 7)), 0); (("destIndRef", 971), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -34), (Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0, (("library/globnames.mli", 24, 981, 981), ("library/globnames.mli", 24, 981, 1020), 0), 0, Tag1 ("Globnames", 8)), 0); (("destConstructRef", 972), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -31), (Tag3 (Tag1 ((Tag2 ("Names")), "constructor"), 0, (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("library/globnames.mli", 25, 1021, 1021), ("library/globnames.mli", 25, 1021, 1068), 0), 0, Tag1 ("Globnames", 9)), 0); (("subst_global", 973), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Mod_subst")), "substitution"), 0, (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -27), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -23); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Univ")), "univ_abstracted"), [(Tag3 (Tag1 ((Tag2 ("Constr")), "constr"), 0, (0)), 100000000, 0, -26)], (0)), 100000000, 0, -25)], (0)), 100000000, 0, -24)]), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("library/globnames.mli", 27, 1070, 1070), ("library/globnames.mli", 27, 1070, 1164), 0), 0, Tag1 ("Globnames", 10)), 0); (("subst_global_reference", 974), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Mod_subst")), "substitution"), 0, (0)), 100000000, 0, -19), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -18), (Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("library/globnames.mli", 28, 1165, 1165), ("library/globnames.mli", 28, 1165, 1232), 0), 0, Tag1 ("Globnames", 11)), 0); Tag1 (("abbreviation", 975), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "KerName"), "t"), 0, (0)), 100000000, 0, -14)), 0, 0, 0, 0, (("library/globnames.mli", 32, 1274, 1274), ("library/globnames.mli", 32, 1274, 1303), 0), 0, 0, 0, Tag1 ("Globnames", 12)), 1, 0); Tag1 (("extended_global_reference", 976), (0, 0, Tag1 ([(("TrueGlobal", 666), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -12)]), 0, (("library/globnames.mli", 35, 1338, 1340), ("library/globnames.mli", 35, 1338, 1365), 0), 0, Tag1 ("Globnames", 14)); (("Abbrev", 667), ([(Tag3 ((("abbreviation", 975)), 0, (0)), 100000000, 0, -13)]), 0, (("library/globnames.mli", 36, 1366, 1368), ("library/globnames.mli", 36, 1366, 1392), 0), 0, Tag1 ("Globnames", 15))], 0), 1, 0, 0, 0, 0, 0, (("library/globnames.mli", 34, 1305, 1305), ("library/globnames.mli", 36, 1366, 1392), 0), 0, 0, 0, Tag1 ("Globnames", 13)), 1, 0); (("abbreviation_eq", 977), ((Tag1 (0, (Tag3 ((("abbreviation", 975)), 0, (0)), 100000000, 0, -11), (Tag1 (0, (Tag3 ((("abbreviation", 975)), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("library/globnames.mli", 38, 1394, 1394), ("library/globnames.mli", 38, 1394, 1452), 0), 0, Tag1 ("Globnames", 16)), 0); Tag3 (("ExtRefOrdered", 978), 0, (Tag1 ([Tag1 (("t", 982), (0, 0, 0, 1, ((Tag3 ((("extended_global_reference", 976)), 0, (0)), 100000000, 0, -69)), 0, 0, 0, 0, (("library/globnames.mli", 41, 1481, 1483), ("library/globnames.mli", 41, 1481, 1517), 0), 0, 0, 0, Tag1 ("Globnames", 17)), 1, 0); (("compare", 983), ((Tag1 (0, (Tag3 ((("t", 982)), 0, (0)), 100000000, 0, -68), (Tag1 (0, (Tag3 ((("t", 982)), 0, (0)), 100000000, 0, -67), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0, (("library/globnames.mli", 42, 1518, 1520), ("library/globnames.mli", 42, 1518, 1547), 0), 0, Tag1 ("Globnames", 18)), 0); (("equal", 984), ((Tag1 (0, (Tag3 ((("t", 982)), 0, (0)), 100000000, 0, -63), (Tag1 (0, (Tag3 ((("t", 982)), 0, (0)), 100000000, 0, -62), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -61), 0), 100000000, 0, -60), 0), 100000000, 0, -59), 0, (("library/globnames.mli", 43, 1548, 1550), ("library/globnames.mli", 43, 1548, 1576), 0), 0, Tag1 ("Globnames", 19)), 0); (("hash", 985), ((Tag1 (0, (Tag3 ((("t", 982)), 0, (0)), 100000000, 0, -58), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("library/globnames.mli", 44, 1577, 1579), ("library/globnames.mli", 44, 1577, 1598), 0), 0, Tag1 ("Globnames", 20)), 0)]), 0, (("library/globnames.mli", 40, 1454, 1454), ("library/globnames.mli", 45, 1599, 1602), 0), Tag1 ("Globnames", 21)), 0, 0); Tag3 (("ExtRefSet", 979), 0, (Tag1 ([Tag1 (("elt", 986), (0, 0, 0, 1, ((Tag3 ((("extended_global_reference", 976)), 0, (0)), 100000000, 0, -191)), 0, 0, 0, 0, (("library/globnames.mli", 47, 1604, 1638), ("library/globnames.mli", 47, 1604, 1674), 0), 0, 0, 0, Tag1 ("Globnames", 22)), 1, 0); Tag1 (("t", 987), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("clib/cSig.mli", 24, 947, 951), ("clib/cSig.mli", 24, 947, 957), 0), 0, 0, 0, Tag1 ("CSig", 9)), 1, 0); (("empty", 988), ((Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -190), 0, (("clib/cSig.mli", 25, 958, 962), ("clib/cSig.mli", 25, 958, 974), 0), 0, Tag1 ("CSig", 10)), 0); (("is_empty", 989), ((Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -189), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -188), 0), 100000000, 0, -187), 0, (("clib/cSig.mli", 26, 975, 979), ("clib/cSig.mli", 26, 975, 1002), 0), 0, Tag1 ("CSig", 11)), 0); (("mem", 990), ((Tag1 (0, (Tag3 ((("elt", 986)), 0, (0)), 100000000, 0, -186), (Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -185), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -184), 0), 100000000, 0, -183), 0), 100000000, 0, -182), 0, (("clib/cSig.mli", 27, 1003, 1007), ("clib/cSig.mli", 27, 1003, 1032), 0), 0, Tag1 ("CSig", 12)), 0); (("add", 991), ((Tag1 (0, (Tag3 ((("elt", 986)), 0, (0)), 100000000, 0, -181), (Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -180), (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -179), 0), 100000000, 0, -178), 0), 100000000, 0, -177), 0, (("clib/cSig.mli", 28, 1033, 1037), ("clib/cSig.mli", 28, 1033, 1059), 0), 0, Tag1 ("CSig", 13)), 0); (("singleton", 992), ((Tag1 (0, (Tag3 ((("elt", 986)), 0, (0)), 100000000, 0, -176), (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -175), 0), 100000000, 0, -174), 0, (("clib/cSig.mli", 29, 1060, 1064), ("clib/cSig.mli", 29, 1060, 1087), 0), 0, Tag1 ("CSig", 14)), 0); (("remove", 993), ((Tag1 (0, (Tag3 ((("elt", 986)), 0, (0)), 100000000, 0, -173), (Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -172), (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -171), 0), 100000000, 0, -170), 0), 100000000, 0, -169), 0, (("clib/cSig.mli", 30, 1088, 1092), ("clib/cSig.mli", 30, 1088, 1117), 0), 0, Tag1 ("CSig", 15)), 0); (("union", 994), ((Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -168), (Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -167), (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -166), 0), 100000000, 0, -165), 0), 100000000, 0, -164), 0, (("clib/cSig.mli", 31, 1118, 1122), ("clib/cSig.mli", 31, 1118, 1144), 0), 0, Tag1 ("CSig", 16)), 0); (("inter", 995), ((Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -163), (Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -162), (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -161), 0), 100000000, 0, -160), 0), 100000000, 0, -159), 0, (("clib/cSig.mli", 32, 1145, 1149), ("clib/cSig.mli", 32, 1145, 1171), 0), 0, Tag1 ("CSig", 17)), 0); (("diff", 996), ((Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -158), (Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -157), (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -156), 0), 100000000, 0, -155), 0), 100000000, 0, -154), 0, (("clib/cSig.mli", 33, 1172, 1176), ("clib/cSig.mli", 33, 1172, 1197), 0), 0, Tag1 ("CSig", 18)), 0); (("compare", 997), ((Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -153), (Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -152), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -151), 0), 100000000, 0, -150), 0), 100000000, 0, -149), 0, (("clib/cSig.mli", 34, 1198, 1202), ("clib/cSig.mli", 34, 1198, 1228), 0), 0, Tag1 ("CSig", 19)), 0); (("equal", 998), ((Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -148), (Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -147), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -146), 0), 100000000, 0, -145), 0), 100000000, 0, -144), 0, (("clib/cSig.mli", 35, 1229, 1233), ("clib/cSig.mli", 35, 1229, 1258), 0), 0, Tag1 ("CSig", 20)), 0); (("subset", 999), ((Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -143), (Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -142), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -141), 0), 100000000, 0, -140), 0), 100000000, 0, -139), 0, (("clib/cSig.mli", 36, 1259, 1263), ("clib/cSig.mli", 36, 1259, 1289), 0), 0, Tag1 ("CSig", 21)), 0); (("iter", 1000), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 986)), 0, (0)), 100000000, 0, -138), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -137), 0), 100000000, 0, -136), (Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -135), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -134), 0), 100000000, 0, -133), 0), 100000000, 0, -132), 0, (("clib/cSig.mli", 37, 1290, 1294), ("clib/cSig.mli", 37, 1290, 1330), 0), 0, Tag1 ("CSig", 22)), 0); (("fold", 1001), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 986)), 0, (0)), 100000000, 0, -131), (Tag1 (0, ((("a")), 100000000, 0, -127), ((("a")), 100000000, 0, -127), 0), 100000000, 0, -130), 0), 100000000, 0, -129), (Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -128), (Tag1 (0, ((("a")), 100000000, 0, -127), ((("a")), 100000000, 0, -127), 0), 100000000, 0, -126), 0), 100000000, 0, -125), 0), 100000000, 0, -124), 0, (("clib/cSig.mli", 38, 1331, 1335), ("clib/cSig.mli", 38, 1331, 1379), 0), 0, Tag1 ("CSig", 23)), 0); (("for_all", 1002), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 986)), 0, (0)), 100000000, 0, -123), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -122), 0), 100000000, 0, -121), (Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -120), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -119), 0), 100000000, 0, -118), 0), 100000000, 0, -117), 0, (("clib/cSig.mli", 39, 1380, 1384), ("clib/cSig.mli", 39, 1380, 1423), 0), 0, Tag1 ("CSig", 24)), 0); (("exists", 1003), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 986)), 0, (0)), 100000000, 0, -116), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -115), 0), 100000000, 0, -114), (Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -113), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -112), 0), 100000000, 0, -111), 0), 100000000, 0, -110), 0, (("clib/cSig.mli", 40, 1424, 1428), ("clib/cSig.mli", 40, 1424, 1466), 0), 0, Tag1 ("CSig", 25)), 0); (("filter", 1004), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 986)), 0, (0)), 100000000, 0, -109), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -108), 0), 100000000, 0, -107), (Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -106), (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -105), 0), 100000000, 0, -104), 0), 100000000, 0, -103), 0, (("clib/cSig.mli", 41, 1467, 1471), ("clib/cSig.mli", 41, 1467, 1506), 0), 0, Tag1 ("CSig", 26)), 0); (("partition", 1005), ((Tag1 (0, (Tag1 (0, (Tag3 ((("elt", 986)), 0, (0)), 100000000, 0, -102), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -101), 0), 100000000, 0, -100), (Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -99), (Tag2 ([(Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -97); (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -98)]), 100000000, 0, -96), 0), 100000000, 0, -95), 0), 100000000, 0, -94), 0, (("clib/cSig.mli", 42, 1507, 1511), ("clib/cSig.mli", 42, 1507, 1553), 0), 0, Tag1 ("CSig", 27)), 0); (("cardinal", 1006), ((Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -93), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -92), 0), 100000000, 0, -91), 0, (("clib/cSig.mli", 43, 1554, 1558), ("clib/cSig.mli", 43, 1554, 1580), 0), 0, Tag1 ("CSig", 28)), 0); (("elements", 1007), ((Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -90), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("elt", 986)), 0, (0)), 100000000, 0, -89)], (0)), 100000000, 0, -88), 0), 100000000, 0, -87), 0, (("clib/cSig.mli", 44, 1581, 1585), ("clib/cSig.mli", 44, 1581, 1612), 0), 0, Tag1 ("CSig", 29)), 0); (("min_elt", 1008), ((Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -86), (Tag3 ((("elt", 986)), 0, (0)), 100000000, 0, -85), 0), 100000000, 0, -84), 0, (("clib/cSig.mli", 45, 1613, 1617), ("clib/cSig.mli", 45, 1613, 1638), 0), 0, Tag1 ("CSig", 30)), 0); (("max_elt", 1009), ((Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -83), (Tag3 ((("elt", 986)), 0, (0)), 100000000, 0, -82), 0), 100000000, 0, -81), 0, (("clib/cSig.mli", 46, 1639, 1643), ("clib/cSig.mli", 46, 1639, 1664), 0), 0, Tag1 ("CSig", 31)), 0); (("choose", 1010), ((Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -80), (Tag3 ((("elt", 986)), 0, (0)), 100000000, 0, -79), 0), 100000000, 0, -78), 0, (("clib/cSig.mli", 47, 1665, 1669), ("clib/cSig.mli", 47, 1665, 1689), 0), 0, Tag1 ("CSig", 32)), 0); (("split", 1011), ((Tag1 (0, (Tag3 ((("elt", 986)), 0, (0)), 100000000, 0, -77), (Tag1 (0, (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -76), (Tag2 ([(Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -73); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -74); (Tag3 ((("t", 987)), 0, (0)), 100000000, 0, -75)]), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), 0, (("clib/cSig.mli", 48, 1690, 1694), ("clib/cSig.mli", 48, 1690, 1729), 0), 0, Tag1 ("CSig", 33)), 0)]), 0, (("library/globnames.mli", 47, 1604, 1604), ("library/globnames.mli", 47, 1604, 1674), 0), Tag1 ("Globnames", 23)), 0, 0); Tag3 (("ExtRefMap", 980), 0, (Tag1 ([Tag1 (("key", 1012), (0, 0, 0, 1, ((Tag3 ((("extended_global_reference", 976)), 0, (0)), 100000000, 0, -491)), 0, 0, 0, 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, 0, 0, Tag1 ("Globnames", 24)), 1, 0); Tag1 (("t", 1013), ([((("a")), 100000000, 0, -490)], 1, 0, 1, 0, [1], [2], 0, 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, 0, 0, Tag1 ("CSig", 36)), 1, 0); (("empty", 1014), ((Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -489)], (0)), 100000000, 0, -488), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 37)), 0); (("is_empty", 1015), ((Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -487)], (0)), 100000000, 0, -486), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -485), 0), 100000000, 0, -484), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 38)), 0); (("mem", 1016), ((Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -483), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -482)], (0)), 100000000, 0, -481), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -480), 0), 100000000, 0, -479), 0), 100000000, 0, -478), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 39)), 0); (("add", 1017), ((Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -477), (Tag1 (0, ((("a")), 100000000, 0, -475), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -475)], (0)), 100000000, 0, -476), (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -475)], (0)), 100000000, 0, -474), 0), 100000000, 0, -473), 0), 100000000, 0, -472), 0), 100000000, 0, -471), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 40)), 0); (("update", 1018), ((Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -470), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -465)], (0)), 100000000, 0, -469), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -465)], (0)), 100000000, 0, -468), 0), 100000000, 0, -467), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -465)], (0)), 100000000, 0, -466), (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -465)], (0)), 100000000, 0, -464), 0), 100000000, 0, -463), 0), 100000000, 0, -462), 0), 100000000, 0, -461), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 41)), 0); (("singleton", 1019), ((Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -460), (Tag1 (0, ((("a")), 100000000, 0, -459), (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -459)], (0)), 100000000, 0, -458), 0), 100000000, 0, -457), 0), 100000000, 0, -456), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 42)), 0); (("remove", 1020), ((Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -455), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -453)], (0)), 100000000, 0, -454), (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -453)], (0)), 100000000, 0, -452), 0), 100000000, 0, -451), 0), 100000000, 0, -450), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 43)), 0); (("merge", 1021), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -449), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -442)], (0)), 100000000, 0, -448), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("b")), 100000000, 0, -440)], (0)), 100000000, 0, -447), (Tag3 ((Tag3 ("option", 10)), [((("c")), 100000000, 0, -438)], (0)), 100000000, 0, -446), 0), 100000000, 0, -445), 0), 100000000, 0, -444), 0), 100000000, 0, -443), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -442)], (0)), 100000000, 0, -441), (Tag1 (0, (Tag3 ((("t", 1013)), [((("b")), 100000000, 0, -440)], (0)), 100000000, 0, -439), (Tag3 ((("t", 1013)), [((("c")), 100000000, 0, -438)], (0)), 100000000, 0, -437), 0), 100000000, 0, -436), 0), 100000000, 0, -435), 0), 100000000, 0, -434), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 44)), 0); (("union", 1022), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -433), (Tag1 (0, ((("a")), 100000000, 0, -426), (Tag1 (0, ((("a")), 100000000, 0, -426), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -426)], (0)), 100000000, 0, -432), 0), 100000000, 0, -431), 0), 100000000, 0, -430), 0), 100000000, 0, -429), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -426)], (0)), 100000000, 0, -428), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -426)], (0)), 100000000, 0, -427), (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -426)], (0)), 100000000, 0, -425), 0), 100000000, 0, -424), 0), 100000000, 0, -423), 0), 100000000, 0, -422), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 45)), 0); (("compare", 1023), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -417), (Tag1 (0, ((("a")), 100000000, 0, -417), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -421), 0), 100000000, 0, -420), 0), 100000000, 0, -419), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -417)], (0)), 100000000, 0, -418), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -417)], (0)), 100000000, 0, -416), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -415), 0), 100000000, 0, -414), 0), 100000000, 0, -413), 0), 100000000, 0, -412), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 46)), 0); (("equal", 1024), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -407), (Tag1 (0, ((("a")), 100000000, 0, -407), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -411), 0), 100000000, 0, -410), 0), 100000000, 0, -409), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -407)], (0)), 100000000, 0, -408), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -407)], (0)), 100000000, 0, -406), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -405), 0), 100000000, 0, -404), 0), 100000000, 0, -403), 0), 100000000, 0, -402), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 47)), 0); (("iter", 1025), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -401), (Tag1 (0, ((("a")), 100000000, 0, -397), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -400), 0), 100000000, 0, -399), 0), 100000000, 0, -398), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -397)], (0)), 100000000, 0, -396), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -395), 0), 100000000, 0, -394), 0), 100000000, 0, -393), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 48)), 0); (("fold", 1026), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -392), (Tag1 (0, ((("a")), 100000000, 0, -388), (Tag1 (0, ((("b")), 100000000, 0, -386), ((("b")), 100000000, 0, -386), 0), 100000000, 0, -391), 0), 100000000, 0, -390), 0), 100000000, 0, -389), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -388)], (0)), 100000000, 0, -387), (Tag1 (0, ((("b")), 100000000, 0, -386), ((("b")), 100000000, 0, -386), 0), 100000000, 0, -385), 0), 100000000, 0, -384), 0), 100000000, 0, -383), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 49)), 0); (("for_all", 1027), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -382), (Tag1 (0, ((("a")), 100000000, 0, -378), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -381), 0), 100000000, 0, -380), 0), 100000000, 0, -379), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -378)], (0)), 100000000, 0, -377), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -376), 0), 100000000, 0, -375), 0), 100000000, 0, -374), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 50)), 0); (("exists", 1028), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -373), (Tag1 (0, ((("a")), 100000000, 0, -369), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -372), 0), 100000000, 0, -371), 0), 100000000, 0, -370), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -369)], (0)), 100000000, 0, -368), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -367), 0), 100000000, 0, -366), 0), 100000000, 0, -365), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 51)), 0); (("filter", 1029), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -364), (Tag1 (0, ((("a")), 100000000, 0, -359), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -363), 0), 100000000, 0, -362), 0), 100000000, 0, -361), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -359)], (0)), 100000000, 0, -360), (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -359)], (0)), 100000000, 0, -358), 0), 100000000, 0, -357), 0), 100000000, 0, -356), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 52)), 0); (("partition", 1030), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -355), (Tag1 (0, ((("a")), 100000000, 0, -349), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -354), 0), 100000000, 0, -353), 0), 100000000, 0, -352), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -349)], (0)), 100000000, 0, -351), (Tag2 ([(Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -349)], (0)), 100000000, 0, -348); (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -349)], (0)), 100000000, 0, -350)]), 100000000, 0, -347), 0), 100000000, 0, -346), 0), 100000000, 0, -345), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 53)), 0); (("cardinal", 1031), ((Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -344)], (0)), 100000000, 0, -343), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -342), 0), 100000000, 0, -341), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 54)), 0); (("bindings", 1032), ((Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -339)], (0)), 100000000, 0, -340), (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -338); ((("a")), 100000000, 0, -339)]), 100000000, 0, -337)], (0)), 100000000, 0, -336), 0), 100000000, 0, -335), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 55)), 0); (("min_binding", 1033), ((Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -333)], (0)), 100000000, 0, -334), (Tag2 ([(Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -332); ((("a")), 100000000, 0, -333)]), 100000000, 0, -331), 0), 100000000, 0, -330), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 56)), 0); (("max_binding", 1034), ((Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -328)], (0)), 100000000, 0, -329), (Tag2 ([(Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -327); ((("a")), 100000000, 0, -328)]), 100000000, 0, -326), 0), 100000000, 0, -325), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 57)), 0); (("choose", 1035), ((Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -323)], (0)), 100000000, 0, -324), (Tag2 ([(Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -322); ((("a")), 100000000, 0, -323)]), 100000000, 0, -321), 0), 100000000, 0, -320), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 58)), 0); (("choose_opt", 1036), ((Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -318)], (0)), 100000000, 0, -319), (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -317); ((("a")), 100000000, 0, -318)]), 100000000, 0, -316)], (0)), 100000000, 0, -315), 0), 100000000, 0, -314), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 59)), 0); (("split", 1037), ((Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -313), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -309)], (0)), 100000000, 0, -312), (Tag2 ([(Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -309)], (0)), 100000000, 0, -308); (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -309)], (0)), 100000000, 0, -310); (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -309)], (0)), 100000000, 0, -311)]), 100000000, 0, -307), 0), 100000000, 0, -306), 0), 100000000, 0, -305), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 60)), 0); (("find", 1038), ((Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -304), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -302)], (0)), 100000000, 0, -303), ((("a")), 100000000, 0, -302), 0), 100000000, 0, -301), 0), 100000000, 0, -300), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 61)), 0); (("find_opt", 1039), ((Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -299), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -297)], (0)), 100000000, 0, -298), (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -297)], (0)), 100000000, 0, -296), 0), 100000000, 0, -295), 0), 100000000, 0, -294), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 62)), 0); (("map", 1040), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -292), ((("b")), 100000000, 0, -290), 0), 100000000, 0, -293), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -292)], (0)), 100000000, 0, -291), (Tag3 ((("t", 1013)), [((("b")), 100000000, 0, -290)], (0)), 100000000, 0, -289), 0), 100000000, 0, -288), 0), 100000000, 0, -287), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 63)), 0); (("mapi", 1041), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -286), (Tag1 (0, ((("a")), 100000000, 0, -283), ((("b")), 100000000, 0, -281), 0), 100000000, 0, -285), 0), 100000000, 0, -284), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -283)], (0)), 100000000, 0, -282), (Tag3 ((("t", 1013)), [((("b")), 100000000, 0, -281)], (0)), 100000000, 0, -280), 0), 100000000, 0, -279), 0), 100000000, 0, -278), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CSig", 64)), 0); (("get", 1042), ((Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -277), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -275)], (0)), 100000000, 0, -276), ((("a")), 100000000, 0, -275), 0), 100000000, 0, -274), 0), 100000000, 0, -273), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CMap", 10)), 0); (("set", 1043), ((Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -272), (Tag1 (0, ((("a")), 100000000, 0, -270), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -270)], (0)), 100000000, 0, -271), (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -270)], (0)), 100000000, 0, -269), 0), 100000000, 0, -268), 0), 100000000, 0, -267), 0), 100000000, 0, -266), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CMap", 11)), 0); (("modify", 1044), ((Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -265), (Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -264), (Tag1 (0, ((("a")), 100000000, 0, -260), ((("a")), 100000000, 0, -260), 0), 100000000, 0, -263), 0), 100000000, 0, -262), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -260)], (0)), 100000000, 0, -261), (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -260)], (0)), 100000000, 0, -259), 0), 100000000, 0, -258), 0), 100000000, 0, -257), 0), 100000000, 0, -256), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CMap", 12)), 0); (("domain", 1045), ((Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -255)], (0)), 100000000, 0, -254), (Tag3 (Tag1 ((("ExtRefSet", 979)), "t"), 0, (0)), 100000000, 0, -253), 0), 100000000, 0, -252), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CMap", 13)), 0); (("bind", 1046), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -251), ((("a")), 100000000, 0, -248), 0), 100000000, 0, -250), (Tag1 (0, (Tag3 (Tag1 ((("ExtRefSet", 979)), "t"), 0, (0)), 100000000, 0, -249), (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -248)], (0)), 100000000, 0, -247), 0), 100000000, 0, -246), 0), 100000000, 0, -245), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CMap", 14)), 0); (("fold_left", 1047), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -244), (Tag1 (0, ((("a")), 100000000, 0, -240), (Tag1 (0, ((("b")), 100000000, 0, -238), ((("b")), 100000000, 0, -238), 0), 100000000, 0, -243), 0), 100000000, 0, -242), 0), 100000000, 0, -241), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -240)], (0)), 100000000, 0, -239), (Tag1 (0, ((("b")), 100000000, 0, -238), ((("b")), 100000000, 0, -238), 0), 100000000, 0, -237), 0), 100000000, 0, -236), 0), 100000000, 0, -235), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CMap", 15)), 0); (("fold_right", 1048), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -234), (Tag1 (0, ((("a")), 100000000, 0, -230), (Tag1 (0, ((("b")), 100000000, 0, -228), ((("b")), 100000000, 0, -228), 0), 100000000, 0, -233), 0), 100000000, 0, -232), 0), 100000000, 0, -231), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -230)], (0)), 100000000, 0, -229), (Tag1 (0, ((("b")), 100000000, 0, -228), ((("b")), 100000000, 0, -228), 0), 100000000, 0, -227), 0), 100000000, 0, -226), 0), 100000000, 0, -225), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CMap", 16)), 0); (("height", 1049), ((Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -224)], (0)), 100000000, 0, -223), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -222), 0), 100000000, 0, -221), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CMap", 17)), 0); (("filter_range", 1050), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -220), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -219), 0), 100000000, 0, -218), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -216)], (0)), 100000000, 0, -217), (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -216)], (0)), 100000000, 0, -215), 0), 100000000, 0, -214), 0), 100000000, 0, -213), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CMap", 18)), 0); (("of_list", 1051), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -212); ((("a")), 100000000, 0, -209)]), 100000000, 0, -211)], (0)), 100000000, 0, -210), (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -209)], (0)), 100000000, 0, -208), 0), 100000000, 0, -207), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CMap", 19)), 0); (("symmetric_diff_fold", 1052), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -206), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -198)], (0)), 100000000, 0, -205), (Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [((("a")), 100000000, 0, -198)], (0)), 100000000, 0, -204), (Tag1 (0, ((("b")), 100000000, 0, -196), ((("b")), 100000000, 0, -196), 0), 100000000, 0, -203), 0), 100000000, 0, -202), 0), 100000000, 0, -201), 0), 100000000, 0, -200), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -198)], (0)), 100000000, 0, -199), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -198)], (0)), 100000000, 0, -197), (Tag1 (0, ((("b")), 100000000, 0, -196), ((("b")), 100000000, 0, -196), 0), 100000000, 0, -195), 0), 100000000, 0, -194), 0), 100000000, 0, -193), 0), 100000000, 0, -192), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CMap", 20)), 0); Tag3 (("Smart", 1053), 0, (Tag1 ([(("map", 1056), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -503), ((("a")), 100000000, 0, -503), 0), 100000000, 0, -505), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -503)], (0)), 100000000, 0, -504), (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -503)], (0)), 100000000, 0, -502), 0), 100000000, 0, -501), 0), 100000000, 0, -500), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CMap", 21)), 0); (("mapi", 1057), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -499), (Tag1 (0, ((("a")), 100000000, 0, -495), ((("a")), 100000000, 0, -495), 0), 100000000, 0, -498), 0), 100000000, 0, -497), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -495)], (0)), 100000000, 0, -496), (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -495)], (0)), 100000000, 0, -494), 0), 100000000, 0, -493), 0), 100000000, 0, -492), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CMap", 22)), 0)]), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), Tag1 ("CMap", 23)), 0, 0); Tag3 (("Monad", 1054), 0, (Tag2 (((("M", 1055)), (Tag1 ((Tag2 ("CMap")), "MonadS"))), Tag1 ([(("fold", 1058), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -552), (Tag1 (0, ((("a")), 100000000, 0, -547), (Tag1 (0, ((("b")), 100000000, 0, -545), (Tag3 (Tag1 ((("M", 1055)), "t"), [((("b")), 100000000, 0, -545)], (0)), 100000000, 0, -551), 0), 100000000, 0, -550), 0), 100000000, 0, -549), 0), 100000000, 0, -548), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -547)], (0)), 100000000, 0, -546), (Tag1 (0, ((("b")), 100000000, 0, -545), (Tag3 (Tag1 ((("M", 1055)), "t"), [((("b")), 100000000, 0, -545)], (0)), 100000000, 0, -544), 0), 100000000, 0, -543), 0), 100000000, 0, -542), 0), 100000000, 0, -541), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CMap", 25)), 0); (("fold_left", 1059), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -540), (Tag1 (0, ((("a")), 100000000, 0, -535), (Tag1 (0, ((("b")), 100000000, 0, -533), (Tag3 (Tag1 ((("M", 1055)), "t"), [((("b")), 100000000, 0, -533)], (0)), 100000000, 0, -539), 0), 100000000, 0, -538), 0), 100000000, 0, -537), 0), 100000000, 0, -536), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -535)], (0)), 100000000, 0, -534), (Tag1 (0, ((("b")), 100000000, 0, -533), (Tag3 (Tag1 ((("M", 1055)), "t"), [((("b")), 100000000, 0, -533)], (0)), 100000000, 0, -532), 0), 100000000, 0, -531), 0), 100000000, 0, -530), 0), 100000000, 0, -529), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CMap", 26)), 0); (("fold_right", 1060), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -528), (Tag1 (0, ((("a")), 100000000, 0, -523), (Tag1 (0, ((("b")), 100000000, 0, -521), (Tag3 (Tag1 ((("M", 1055)), "t"), [((("b")), 100000000, 0, -521)], (0)), 100000000, 0, -527), 0), 100000000, 0, -526), 0), 100000000, 0, -525), 0), 100000000, 0, -524), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -523)], (0)), 100000000, 0, -522), (Tag1 (0, ((("b")), 100000000, 0, -521), (Tag3 (Tag1 ((("M", 1055)), "t"), [((("b")), 100000000, 0, -521)], (0)), 100000000, 0, -520), 0), 100000000, 0, -519), 0), 100000000, 0, -518), 0), 100000000, 0, -517), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CMap", 27)), 0); (("mapi", 1061), ((Tag1 (0, (Tag1 (0, (Tag3 ((("key", 1012)), 0, (0)), 100000000, 0, -516), (Tag1 (0, ((("a")), 100000000, 0, -512), (Tag3 (Tag1 ((("M", 1055)), "t"), [((("b")), 100000000, 0, -510)], (0)), 100000000, 0, -515), 0), 100000000, 0, -514), 0), 100000000, 0, -513), (Tag1 (0, (Tag3 ((("t", 1013)), [((("a")), 100000000, 0, -512)], (0)), 100000000, 0, -511), (Tag3 (Tag1 ((("M", 1055)), "t"), [(Tag3 ((("t", 1013)), [((("b")), 100000000, 0, -510)], (0)), 100000000, 0, -509)], (0)), 100000000, 0, -508), 0), 100000000, 0, -507), 0), 100000000, 0, -506), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), 0, Tag1 ("CMap", 28)), 0)])), 0, (("library/globnames.mli", 48, 1675, 1694), ("library/globnames.mli", 50, 1748, 1778), 0), Tag1 ("CMap", 29)), 0, 0)]), 0, (("library/globnames.mli", 48, 1675, 1675), ("library/globnames.mli", 50, 1748, 1778), 0), Tag1 ("Globnames", 25)), 0, 0); (("subst_extended_reference", 981), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Mod_subst")), "substitution"), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((("extended_global_reference", 976)), 0, (0)), 100000000, 0, -5), (Tag3 ((("extended_global_reference", 976)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("library/globnames.mli", 52, 1780, 1780), ("library/globnames.mli", 52, 1780, 1881), 0), 0, Tag1 ("Globnames", 26)), 0)], "Globnames", [("Globnames", ("W\004\172T\214\181H\220\232\160LSW\006\130\226")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
extended_global_reference -> extended_global_reference
