type t = Base__.Import0.Stdlib.Uchar.t
val succ : Base__.Import0.Stdlib.Uchar.t -> Base__.Import0.Stdlib.Uchar.t
val pred : Base__.Import0.Stdlib.Uchar.t -> Base__.Import0.Stdlib.Uchar.t
val is_valid : int -> bool
val is_char : Base__.Import0.Stdlib.Uchar.t -> bool
val unsafe_to_char : Base__.Import0.Stdlib.Uchar.t -> char
val unsafe_of_int : int -> Base__.Import0.Stdlib.Uchar.t
val of_int : int -> Base__.Import0.Stdlib.Uchar.t
val to_int : Base__.Import0.Stdlib.Uchar.t -> int
val of_char : char -> Base__.Import0.Stdlib.Uchar.t
val compare :
  Base__.Import0.Stdlib.Uchar.t -> Base__.Import0.Stdlib.Uchar.t -> int
val equal :
  Base__.Import0.Stdlib.Uchar.t -> Base__.Import0.Stdlib.Uchar.t -> bool
val min_value : Base__.Import0.Stdlib.Uchar.t
("DEBUG:rule", [Tag1 (("t", 1217), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import0"), "Stdlib"), "Uchar"), "t"), 0, (0)), 100000000, 0, -41)), 0, 0, 0, 0, (("src/uchar0.ml", 3, 15, 15), ("src/uchar0.ml", 3, 15, 38), 0), 0, 1, 0, Tag1 ("Base__Uchar0", 0)), 1, 0); (("succ", 1218), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import0"), "Stdlib"), "Uchar"), "t"), 0, (0)), 100000000, 0, -40), (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import0"), "Stdlib"), "Uchar"), "t"), 0, (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("src/uchar0.ml", 5, 40, 44), ("src/uchar0.ml", 5, 40, 48), 0), 0, Tag1 ("Base__Uchar0", 1)), 0); (("pred", 1219), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import0"), "Stdlib"), "Uchar"), "t"), 0, (0)), 100000000, 0, -37), (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import0"), "Stdlib"), "Uchar"), "t"), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("src/uchar0.ml", 6, 69, 73), ("src/uchar0.ml", 6, 69, 77), 0), 0, Tag1 ("Base__Uchar0", 2)), 0); (("is_valid", 1220), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -34), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0, (("src/uchar0.ml", 7, 98, 102), ("src/uchar0.ml", 7, 98, 110), 0), 0, Tag1 ("Base__Uchar0", 3)), 0); (("is_char", 1221), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import0"), "Stdlib"), "Uchar"), "t"), 0, (0)), 100000000, 0, -31), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("src/uchar0.ml", 8, 135, 139), ("src/uchar0.ml", 8, 135, 146), 0), 0, Tag1 ("Base__Uchar0", 4)), 0); (("unsafe_to_char", 1222), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import0"), "Stdlib"), "Uchar"), "t"), 0, (0)), 100000000, 0, -28), (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("src/uchar0.ml", 9, 170, 174), ("src/uchar0.ml", 9, 170, 188), 0), 0, Tag1 ("Base__Uchar0", 5)), 0); (("unsafe_of_int", 1223), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -25), (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import0"), "Stdlib"), "Uchar"), "t"), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("src/uchar0.ml", 10, 219, 223), ("src/uchar0.ml", 10, 219, 236), 0), 0, Tag1 ("Base__Uchar0", 6)), 0); (("of_int", 1224), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -22), (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import0"), "Stdlib"), "Uchar"), "t"), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("src/uchar0.ml", 11, 266, 270), ("src/uchar0.ml", 11, 266, 276), 0), 0, Tag1 ("Base__Uchar0", 7)), 0); (("to_int", 1225), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import0"), "Stdlib"), "Uchar"), "t"), 0, (0)), 100000000, 0, -19), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("src/uchar0.ml", 12, 299, 303), ("src/uchar0.ml", 12, 299, 309), 0), 0, Tag1 ("Base__Uchar0", 8)), 0); (("of_char", 1226), ((Tag1 (0, (Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -16), (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import0"), "Stdlib"), "Uchar"), "t"), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("src/uchar0.ml", 13, 332, 336), ("src/uchar0.ml", 13, 332, 343), 0), 0, Tag1 ("Base__Uchar0", 9)), 0); (("compare", 1227), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import0"), "Stdlib"), "Uchar"), "t"), 0, (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import0"), "Stdlib"), "Uchar"), "t"), 0, (0)), 100000000, 0, -12), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("src/uchar0.ml", 14, 367, 371), ("src/uchar0.ml", 14, 367, 378), 0), 0, Tag1 ("Base__Uchar0", 10)), 0); (("equal", 1228), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import0"), "Stdlib"), "Uchar"), "t"), 0, (0)), 100000000, 0, -8), (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import0"), "Stdlib"), "Uchar"), "t"), 0, (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0), 100000000, 0, -4), 0, (("src/uchar0.ml", 15, 402, 406), ("src/uchar0.ml", 15, 402, 411), 0), 0, Tag1 ("Base__Uchar0", 11)), 0); (("min_value", 1229), ((Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import0"), "Stdlib"), "Uchar"), "t"), 0, (0)), 100000000, 0, -3), 0, (("src/uchar0.ml", 16, 433, 437), ("src/uchar0.ml", 16, 433, 446), 0), 0, Tag1 ("Base__Uchar0", 12)), 0); (("max_value", 1230), ((Tag3 (Tag1 (Tag1 (Tag1 (Tag1 ((Tag2 ("Base__")), "Import0"), "Stdlib"), "Uchar"), "t"), 0, (0)), 100000000, 0, -2), 0, (("src/uchar0.ml", 17, 466, 470), ("src/uchar0.ml", 17, 466, 479), 0), 0, Tag1 ("Base__Uchar0", 13)), 0)], "Base__Uchar0", [("Base__Uchar0", ("3E;m\005\251\240\190\214\028\146\1346qs\239")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__MoreLabels", ("\248\232\248\254`<\230\241\161U\193U\1466J\238")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shadow_stdlib", ("\219zi\164\203\158e)\232\221\196\168\138x\142\018")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Base__Poly0", ("\230;\143\234\255.H\132KOe7\155\\\023f")); ("Base__Import0", ("\156\129U\197Y[\\\153\017Ho\203\173\204\220\020")); ("Base__Bool0", ("\177f\254p\023\143&\239\020\136\206\242~\018F\251")); ("Base__", ("p\252\007\139\128\163W\025+\0225\001\246|P\158"))], [(0)])
val max_value : Base__.Import0.Stdlib.Uchar.t
