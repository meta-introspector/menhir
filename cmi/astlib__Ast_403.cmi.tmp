module Asttypes :
  sig
    type constant =
        Const_int of int
      | Const_char of char
      | Const_string of string * string option
      | Const_float of string
      | Const_int32 of int32
      | Const_int64 of int64
      | Const_nativeint of nativeint
    type rec_flag = Nonrecursive | Recursive
    type direction_flag = Upto | Downto
    type private_flag = Private | Public
    type mutable_flag = Immutable | Mutable
    type virtual_flag = Virtual | Concrete
    type override_flag = Override | Fresh
    type closed_flag = Closed | Open
    type label = string
    type arg_label = Nolabel | Labelled of string | Optional of string
    type 'a loc =
      'a Astlib__.Location.loc = {
      txt : 'a;
      loc : Astlib__.Location.t;
    }
    type variance = Covariant | Contravariant | Invariant
  end
module Parsetree :
  sig
    type constant =
        Pconst_integer of string * char option
      | Pconst_char of char
      | Pconst_string of string * string option
      | Pconst_float of string * char option
    type attribute = string Asttypes.loc * payload
    and extension = string Asttypes.loc * payload
    and attributes = attribute list
    and payload =
        PStr of structure
      | PSig of signature
      | PTyp of core_type
      | PPat of pattern * expression option
    and core_type = {
      ptyp_desc : core_type_desc;
      ptyp_loc : Astlib__.Location.t;
      ptyp_attributes : attributes;
    }
    and core_type_desc =
        Ptyp_any
      | Ptyp_var of string
      | Ptyp_arrow of Asttypes.arg_label * core_type * core_type
      | Ptyp_tuple of core_type list
      | Ptyp_constr of Astlib__.Longident.t Asttypes.loc * core_type list
      | Ptyp_object of (string * attributes * core_type) list *
          Asttypes.closed_flag
      | Ptyp_class of Astlib__.Longident.t Asttypes.loc * core_type list
      | Ptyp_alias of core_type * string
      | Ptyp_variant of row_field list * Asttypes.closed_flag *
          Asttypes.label list option
      | Ptyp_poly of string list * core_type
      | Ptyp_package of package_type
      | Ptyp_extension of extension
    and package_type =
        Astlib__.Longident.t Asttypes.loc *
        (Astlib__.Longident.t Asttypes.loc * core_type) list
    and row_field =
        Rtag of Asttypes.label * attributes * bool * core_type list
      | Rinherit of core_type
    and pattern = {
      ppat_desc : pattern_desc;
      ppat_loc : Astlib__.Location.t;
      ppat_attributes : attributes;
    }
    and pattern_desc =
        Ppat_any
      | Ppat_var of string Asttypes.loc
      | Ppat_alias of pattern * string Asttypes.loc
      | Ppat_constant of constant
      | Ppat_interval of constant * constant
      | Ppat_tuple of pattern list
      | Ppat_construct of Astlib__.Longident.t Asttypes.loc * pattern option
      | Ppat_variant of Asttypes.label * pattern option
      | Ppat_record of (Astlib__.Longident.t Asttypes.loc * pattern) list *
          Asttypes.closed_flag
      | Ppat_array of pattern list
      | Ppat_or of pattern * pattern
      | Ppat_constraint of pattern * core_type
      | Ppat_type of Astlib__.Longident.t Asttypes.loc
      | Ppat_lazy of pattern
      | Ppat_unpack of string Asttypes.loc
      | Ppat_exception of pattern
      | Ppat_extension of extension
    and expression = {
      pexp_desc : expression_desc;
      pexp_loc : Astlib__.Location.t;
      pexp_attributes : attributes;
    }
    and expression_desc =
        Pexp_ident of Astlib__.Longident.t Asttypes.loc
      | Pexp_constant of constant
      | Pexp_let of Asttypes.rec_flag * value_binding list * expression
      | Pexp_function of case list
      | Pexp_fun of Asttypes.arg_label * expression option * pattern *
          expression
      | Pexp_apply of expression * (Asttypes.arg_label * expression) list
      | Pexp_match of expression * case list
      | Pexp_try of expression * case list
      | Pexp_tuple of expression list
      | Pexp_construct of Astlib__.Longident.t Asttypes.loc *
          expression option
      | Pexp_variant of Asttypes.label * expression option
      | Pexp_record of
          (Astlib__.Longident.t Asttypes.loc * expression) list *
          expression option
      | Pexp_field of expression * Astlib__.Longident.t Asttypes.loc
      | Pexp_setfield of expression * Astlib__.Longident.t Asttypes.loc *
          expression
      | Pexp_array of expression list
      | Pexp_ifthenelse of expression * expression * expression option
      | Pexp_sequence of expression * expression
      | Pexp_while of expression * expression
      | Pexp_for of pattern * expression * expression *
          Asttypes.direction_flag * expression
      | Pexp_constraint of expression * core_type
      | Pexp_coerce of expression * core_type option * core_type
      | Pexp_send of expression * string
      | Pexp_new of Astlib__.Longident.t Asttypes.loc
      | Pexp_setinstvar of string Asttypes.loc * expression
      | Pexp_override of (string Asttypes.loc * expression) list
      | Pexp_letmodule of string Asttypes.loc * module_expr * expression
      | Pexp_assert of expression
      | Pexp_lazy of expression
      | Pexp_poly of expression * core_type option
      | Pexp_object of class_structure
      | Pexp_newtype of string * expression
      | Pexp_pack of module_expr
      | Pexp_open of Asttypes.override_flag *
          Astlib__.Longident.t Asttypes.loc * expression
      | Pexp_extension of extension
      | Pexp_unreachable
    and case = {
      pc_lhs : pattern;
      pc_guard : expression option;
      pc_rhs : expression;
    }
    and value_description = {
      pval_name : string Asttypes.loc;
      pval_type : core_type;
      pval_prim : string list;
      pval_attributes : attributes;
      pval_loc : Astlib__.Location.t;
    }
    and type_declaration = {
      ptype_name : string Asttypes.loc;
      ptype_params : (core_type * Asttypes.variance) list;
      ptype_cstrs : (core_type * core_type * Astlib__.Location.t) list;
      ptype_kind : type_kind;
      ptype_private : Asttypes.private_flag;
      ptype_manifest : core_type option;
      ptype_attributes : attributes;
      ptype_loc : Astlib__.Location.t;
    }
    and type_kind =
        Ptype_abstract
      | Ptype_variant of constructor_declaration list
      | Ptype_record of label_declaration list
      | Ptype_open
    and label_declaration = {
      pld_name : string Asttypes.loc;
      pld_mutable : Asttypes.mutable_flag;
      pld_type : core_type;
      pld_loc : Astlib__.Location.t;
      pld_attributes : attributes;
    }
    and constructor_declaration = {
      pcd_name : string Asttypes.loc;
      pcd_args : constructor_arguments;
      pcd_res : core_type option;
      pcd_loc : Astlib__.Location.t;
      pcd_attributes : attributes;
    }
    and constructor_arguments =
        Pcstr_tuple of core_type list
      | Pcstr_record of label_declaration list
    and type_extension = {
      ptyext_path : Astlib__.Longident.t Asttypes.loc;
      ptyext_params : (core_type * Asttypes.variance) list;
      ptyext_constructors : extension_constructor list;
      ptyext_private : Asttypes.private_flag;
      ptyext_attributes : attributes;
    }
    and extension_constructor = {
      pext_name : string Asttypes.loc;
      pext_kind : extension_constructor_kind;
      pext_loc : Astlib__.Location.t;
      pext_attributes : attributes;
    }
    and extension_constructor_kind =
        Pext_decl of constructor_arguments * core_type option
      | Pext_rebind of Astlib__.Longident.t Asttypes.loc
    and class_type = {
      pcty_desc : class_type_desc;
      pcty_loc : Astlib__.Location.t;
      pcty_attributes : attributes;
    }
    and class_type_desc =
        Pcty_constr of Astlib__.Longident.t Asttypes.loc * core_type list
      | Pcty_signature of class_signature
      | Pcty_arrow of Asttypes.arg_label * core_type * class_type
      | Pcty_extension of extension
    and class_signature = {
      pcsig_self : core_type;
      pcsig_fields : class_type_field list;
    }
    and class_type_field = {
      pctf_desc : class_type_field_desc;
      pctf_loc : Astlib__.Location.t;
      pctf_attributes : attributes;
    }
    and class_type_field_desc =
        Pctf_inherit of class_type
      | Pctf_val of
          (string * Asttypes.mutable_flag * Asttypes.virtual_flag * core_type)
      | Pctf_method of
          (string * Asttypes.private_flag * Asttypes.virtual_flag * core_type)
      | Pctf_constraint of (core_type * core_type)
      | Pctf_attribute of attribute
      | Pctf_extension of extension
    and 'a class_infos = {
      pci_virt : Asttypes.virtual_flag;
      pci_params : (core_type * Asttypes.variance) list;
      pci_name : string Asttypes.loc;
      pci_expr : 'a;
      pci_loc : Astlib__.Location.t;
      pci_attributes : attributes;
    }
    and class_description = class_type class_infos
    and class_type_declaration = class_type class_infos
    and class_expr = {
      pcl_desc : class_expr_desc;
      pcl_loc : Astlib__.Location.t;
      pcl_attributes : attributes;
    }
    and class_expr_desc =
        Pcl_constr of Astlib__.Longident.t Asttypes.loc * core_type list
      | Pcl_structure of class_structure
      | Pcl_fun of Asttypes.arg_label * expression option * pattern *
          class_expr
      | Pcl_apply of class_expr * (Asttypes.arg_label * expression) list
      | Pcl_let of Asttypes.rec_flag * value_binding list * class_expr
      | Pcl_constraint of class_expr * class_type
      | Pcl_extension of extension
    and class_structure = {
      pcstr_self : pattern;
      pcstr_fields : class_field list;
    }
    and class_field = {
      pcf_desc : class_field_desc;
      pcf_loc : Astlib__.Location.t;
      pcf_attributes : attributes;
    }
    and class_field_desc =
        Pcf_inherit of Asttypes.override_flag * class_expr * string option
      | Pcf_val of
          (string Asttypes.loc * Asttypes.mutable_flag * class_field_kind)
      | Pcf_method of
          (string Asttypes.loc * Asttypes.private_flag * class_field_kind)
      | Pcf_constraint of (core_type * core_type)
      | Pcf_initializer of expression
      | Pcf_attribute of attribute
      | Pcf_extension of extension
    and class_field_kind =
        Cfk_virtual of core_type
      | Cfk_concrete of Asttypes.override_flag * expression
    and class_declaration = class_expr class_infos
    and module_type = {
      pmty_desc : module_type_desc;
      pmty_loc : Astlib__.Location.t;
      pmty_attributes : attributes;
    }
    and module_type_desc =
        Pmty_ident of Astlib__.Longident.t Asttypes.loc
      | Pmty_signature of signature
      | Pmty_functor of string Asttypes.loc * module_type option *
          module_type
      | Pmty_with of module_type * with_constraint list
      | Pmty_typeof of module_expr
      | Pmty_extension of extension
      | Pmty_alias of Astlib__.Longident.t Asttypes.loc
    and signature = signature_item list
    and signature_item = {
      psig_desc : signature_item_desc;
      psig_loc : Astlib__.Location.t;
    }
    and signature_item_desc =
        Psig_value of value_description
      | Psig_type of Asttypes.rec_flag * type_declaration list
      | Psig_typext of type_extension
      | Psig_exception of extension_constructor
      | Psig_module of module_declaration
      | Psig_recmodule of module_declaration list
      | Psig_modtype of module_type_declaration
      | Psig_open of open_description
      | Psig_include of include_description
      | Psig_class of class_description list
      | Psig_class_type of class_type_declaration list
      | Psig_attribute of attribute
      | Psig_extension of extension * attributes
    and module_declaration = {
      pmd_name : string Asttypes.loc;
      pmd_type : module_type;
      pmd_attributes : attributes;
      pmd_loc : Astlib__.Location.t;
    }
    and module_type_declaration = {
      pmtd_name : string Asttypes.loc;
      pmtd_type : module_type option;
      pmtd_attributes : attributes;
      pmtd_loc : Astlib__.Location.t;
    }
    and open_description = {
      popen_lid : Astlib__.Longident.t Asttypes.loc;
      popen_override : Asttypes.override_flag;
      popen_loc : Astlib__.Location.t;
      popen_attributes : attributes;
    }
    and 'a include_infos = {
      pincl_mod : 'a;
      pincl_loc : Astlib__.Location.t;
      pincl_attributes : attributes;
    }
    and include_description = module_type include_infos
    and include_declaration = module_expr include_infos
    and with_constraint =
        Pwith_type of Astlib__.Longident.t Asttypes.loc * type_declaration
      | Pwith_module of Astlib__.Longident.t Asttypes.loc *
          Astlib__.Longident.t Asttypes.loc
      | Pwith_typesubst of type_declaration
      | Pwith_modsubst of string Asttypes.loc *
          Astlib__.Longident.t Asttypes.loc
    and module_expr = {
      pmod_desc : module_expr_desc;
      pmod_loc : Astlib__.Location.t;
      pmod_attributes : attributes;
    }
    and module_expr_desc =
        Pmod_ident of Astlib__.Longident.t Asttypes.loc
      | Pmod_structure of structure
      | Pmod_functor of string Asttypes.loc * module_type option *
          module_expr
      | Pmod_apply of module_expr * module_expr
      | Pmod_constraint of module_expr * module_type
      | Pmod_unpack of expression
      | Pmod_extension of extension
    and structure = structure_item list
    and structure_item = {
      pstr_desc : structure_item_desc;
      pstr_loc : Astlib__.Location.t;
    }
    and structure_item_desc =
        Pstr_eval of expression * attributes
      | Pstr_value of Asttypes.rec_flag * value_binding list
      | Pstr_primitive of value_description
      | Pstr_type of Asttypes.rec_flag * type_declaration list
      | Pstr_typext of type_extension
      | Pstr_exception of extension_constructor
      | Pstr_module of module_binding
      | Pstr_recmodule of module_binding list
      | Pstr_modtype of module_type_declaration
      | Pstr_open of open_description
      | Pstr_class of class_declaration list
      | Pstr_class_type of class_type_declaration list
      | Pstr_include of include_declaration
      | Pstr_attribute of attribute
      | Pstr_extension of extension * attributes
    and value_binding = {
      pvb_pat : pattern;
      pvb_expr : expression;
      pvb_attributes : attributes;
      pvb_loc : Astlib__.Location.t;
    }
    and module_binding = {
      pmb_name : string Asttypes.loc;
      pmb_expr : module_expr;
      pmb_attributes : attributes;
      pmb_loc : Astlib__.Location.t;
    }
    type toplevel_phrase =
        Ptop_def of structure
      | Ptop_dir of string * directive_argument
    and directive_argument =
        Pdir_none
      | Pdir_string of string
      | Pdir_int of string * char option
      | Pdir_ident of Astlib__.Longident.t
      | Pdir_bool of bool
  end
module Config :
  sig
    val ast_impl_magic_number : string
    val ast_intf_magic_number : string("DEBUG:rule", [Tag3 (("Asttypes", 978), 0, (Tag1 ([Tag1 (("constant", 981), (0, 0, Tag1 ([(("Const_int", 321), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -8)]), 0, (("astlib/ast_403.ml", 24, 1559, 1565), ("astlib/ast_403.ml", 24, 1559, 1581), 0), 0, Tag1 ("Astlib__Ast_403", 1)); (("Const_char", 322), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -9)]), 0, (("astlib/ast_403.ml", 25, 1582, 1586), ("astlib/ast_403.ml", 25, 1582, 1606), 0), 0, Tag1 ("Astlib__Ast_403", 2)); (("Const_string", 323), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -12)], (0)), 100000000, 0, -11)]), 0, (("astlib/ast_403.ml", 26, 1607, 1611), ("astlib/ast_403.ml", 26, 1607, 1651), 0), 0, Tag1 ("Astlib__Ast_403", 3)); (("Const_float", 324), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -13)]), 0, (("astlib/ast_403.ml", 27, 1652, 1656), ("astlib/ast_403.ml", 27, 1652, 1679), 0), 0, Tag1 ("Astlib__Ast_403", 4)); (("Const_int32", 325), ([(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -14)]), 0, (("astlib/ast_403.ml", 28, 1680, 1684), ("astlib/ast_403.ml", 28, 1680, 1706), 0), 0, Tag1 ("Astlib__Ast_403", 5)); (("Const_int64", 326), ([(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -15)]), 0, (("astlib/ast_403.ml", 29, 1707, 1711), ("astlib/ast_403.ml", 29, 1707, 1733), 0), 0, Tag1 ("Astlib__Ast_403", 6)); (("Const_nativeint", 327), ([(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -16)]), 0, (("astlib/ast_403.ml", 30, 1734, 1738), ("astlib/ast_403.ml", 30, 1734, 1768), 0), 0, Tag1 ("Astlib__Ast_403", 7))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 23, 1505, 1507), ("astlib/ast_403.ml", 30, 1734, 1768), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 0)), 1, 0); Tag1 (("rec_flag", 982), (0, 0, Tag1 ([(("Nonrecursive", 329), (0), 0, (("astlib/ast_403.ml", 32, 1770, 1824), ("astlib/ast_403.ml", 32, 1770, 1836), 0), 0, Tag1 ("Astlib__Ast_403", 9)); (("Recursive", 330), (0), 0, (("astlib/ast_403.ml", 32, 1770, 1837), ("astlib/ast_403.ml", 32, 1770, 1848), 0), 0, Tag1 ("Astlib__Ast_403", 10))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 32, 1770, 1772), ("astlib/ast_403.ml", 32, 1770, 1848), 0), 0, 1, 0, Tag1 ("Astlib__Ast_403", 8)), 1, 0); Tag1 (("direction_flag", 983), (0, 0, Tag1 ([(("Upto", 332), (0), 0, (("astlib/ast_403.ml", 34, 1850, 1916), ("astlib/ast_403.ml", 34, 1850, 1920), 0), 0, Tag1 ("Astlib__Ast_403", 12)); (("Downto", 333), (0), 0, (("astlib/ast_403.ml", 34, 1850, 1921), ("astlib/ast_403.ml", 34, 1850, 1929), 0), 0, Tag1 ("Astlib__Ast_403", 13))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 34, 1850, 1852), ("astlib/ast_403.ml", 34, 1850, 1929), 0), 0, 1, 0, Tag1 ("Astlib__Ast_403", 11)), 1, 0); Tag1 (("private_flag", 984), (0, 0, Tag1 ([(("Private", 335), (0), 0, (("astlib/ast_403.ml", 37, 1985, 2047), ("astlib/ast_403.ml", 37, 1985, 2054), 0), 0, Tag1 ("Astlib__Ast_403", 15)); (("Public", 336), (0), 0, (("astlib/ast_403.ml", 37, 1985, 2055), ("astlib/ast_403.ml", 37, 1985, 2063), 0), 0, Tag1 ("Astlib__Ast_403", 16))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 37, 1985, 1987), ("astlib/ast_403.ml", 37, 1985, 2063), 0), 0, 1, 0, Tag1 ("Astlib__Ast_403", 14)), 1, 0); Tag1 (("mutable_flag", 985), (0, 0, Tag1 ([(("Immutable", 338), (0), 0, (("astlib/ast_403.ml", 39, 2065, 2127), ("astlib/ast_403.ml", 39, 2065, 2136), 0), 0, Tag1 ("Astlib__Ast_403", 18)); (("Mutable", 339), (0), 0, (("astlib/ast_403.ml", 39, 2065, 2137), ("astlib/ast_403.ml", 39, 2065, 2146), 0), 0, Tag1 ("Astlib__Ast_403", 19))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 39, 2065, 2067), ("astlib/ast_403.ml", 39, 2065, 2146), 0), 0, 1, 0, Tag1 ("Astlib__Ast_403", 17)), 1, 0); Tag1 (("virtual_flag", 986), (0, 0, Tag1 ([(("Virtual", 341), (0), 0, (("astlib/ast_403.ml", 41, 2148, 2210), ("astlib/ast_403.ml", 41, 2148, 2217), 0), 0, Tag1 ("Astlib__Ast_403", 21)); (("Concrete", 342), (0), 0, (("astlib/ast_403.ml", 41, 2148, 2218), ("astlib/ast_403.ml", 41, 2148, 2228), 0), 0, Tag1 ("Astlib__Ast_403", 22))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 41, 2148, 2150), ("astlib/ast_403.ml", 41, 2148, 2228), 0), 0, 1, 0, Tag1 ("Astlib__Ast_403", 20)), 1, 0); Tag1 (("override_flag", 987), (0, 0, Tag1 ([(("Override", 344), (0), 0, (("astlib/ast_403.ml", 43, 2230, 2294), ("astlib/ast_403.ml", 43, 2230, 2302), 0), 0, Tag1 ("Astlib__Ast_403", 24)); (("Fresh", 345), (0), 0, (("astlib/ast_403.ml", 43, 2230, 2303), ("astlib/ast_403.ml", 43, 2230, 2310), 0), 0, Tag1 ("Astlib__Ast_403", 25))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 43, 2230, 2232), ("astlib/ast_403.ml", 43, 2230, 2310), 0), 0, 1, 0, Tag1 ("Astlib__Ast_403", 23)), 1, 0); Tag1 (("closed_flag", 988), (0, 0, Tag1 ([(("Closed", 347), (0), 0, (("astlib/ast_403.ml", 45, 2312, 2372), ("astlib/ast_403.ml", 45, 2312, 2378), 0), 0, Tag1 ("Astlib__Ast_403", 27)); (("Open", 348), (0), 0, (("astlib/ast_403.ml", 45, 2312, 2379), ("astlib/ast_403.ml", 45, 2312, 2385), 0), 0, Tag1 ("Astlib__Ast_403", 28))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 45, 2312, 2314), ("astlib/ast_403.ml", 45, 2312, 2385), 0), 0, 1, 0, Tag1 ("Astlib__Ast_403", 26)), 1, 0); Tag1 (("label", 989), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7)), 0, 0, 0, 0, (("astlib/ast_403.ml", 47, 2387, 2389), ("astlib/ast_403.ml", 47, 2387, 2408), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 29)), 1, 0); Tag1 (("arg_label", 990), (0, 0, Tag1 ([(("Nolabel", 351), (0), 0, (("astlib/ast_403.ml", 50, 2466, 2472), ("astlib/ast_403.ml", 50, 2466, 2479), 0), 0, Tag1 ("Astlib__Ast_403", 31)); (("Labelled", 352), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5)]), 0, (("astlib/ast_403.ml", 51, 2480, 2484), ("astlib/ast_403.ml", 51, 2480, 2504), 0), 0, Tag1 ("Astlib__Ast_403", 32)); (("Optional", 353), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6)]), 0, (("astlib/ast_403.ml", 52, 2527, 2531), ("astlib/ast_403.ml", 52, 2527, 2551), 0), 0, Tag1 ("Astlib__Ast_403", 33))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 49, 2410, 2412), ("astlib/ast_403.ml", 52, 2527, 2551), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 30)), 1, 0); Tag1 (("loc", 991), ([((("a")), 100000000, 0, -3)], 1, [[(("txt", 355), 0, ((("a")), 100000000, 0, -3), (("astlib/ast_403.ml", 55, 2611, 2615), ("astlib/ast_403.ml", 55, 2611, 2624), 0), 0, Tag1 ("Astlib__Ast_403", 35)); (("loc", 365), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4), (("astlib/ast_403.ml", 56, 2625, 2629), ("astlib/ast_403.ml", 56, 2625, 2646), 0), 0, Tag1 ("Astlib__Ast_403", 36))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "loc"), [((("a")), 100000000, 0, -3)], (0)), 100000000, 0, -2)), [25], [0], 0, 0, (("astlib/ast_403.ml", 54, 2575, 2577), ("astlib/ast_403.ml", 57, 2647, 2650), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 34)), 1, 0); Tag1 (("variance", 992), (0, 0, Tag1 ([(("Covariant", 638), (0), 0, (("astlib/ast_403.ml", 61, 2707, 2711), ("astlib/ast_403.ml", 61, 2707, 2722), 0), 0, Tag1 ("Astlib__Ast_403", 38)); (("Contravariant", 639), (0), 0, (("astlib/ast_403.ml", 62, 2723, 2727), ("astlib/ast_403.ml", 62, 2723, 2742), 0), 0, Tag1 ("Astlib__Ast_403", 39)); (("Invariant", 640), (0), 0, (("astlib/ast_403.ml", 63, 2743, 2747), ("astlib/ast_403.ml", 63, 2743, 2758), 0), 0, Tag1 ("Astlib__Ast_403", 40))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 60, 2653, 2655), ("astlib/ast_403.ml", 63, 2743, 2758), 0), 0, 1, 0, Tag1 ("Astlib__Ast_403", 37)), 1, 0)]), 0, (("astlib/ast_403.ml", 20, 1415, 1415), ("astlib/ast_403.ml", 64, 2759, 2762), 0), Tag1 ("Astlib__Ast_403", 41)), 0, 0); Tag3 (("Parsetree", 979), 0, (Tag1 ([Tag1 (("constant", 993), (0, 0, Tag1 ([(("Pconst_integer", 643), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -536); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -538)], (0)), 100000000, 0, -537)]), 0, (("astlib/ast_403.ml", 72, 2913, 2919), ("astlib/ast_403.ml", 72, 2913, 2957), 0), 0, Tag1 ("Astlib__Ast_403", 43)); (("Pconst_char", 644), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -539)]), 0, (("astlib/ast_403.ml", 78, 3111, 3115), ("astlib/ast_403.ml", 78, 3111, 3136), 0), 0, Tag1 ("Astlib__Ast_403", 44)); (("Pconst_string", 645), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -540); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -542)], (0)), 100000000, 0, -541)]), 0, (("astlib/ast_403.ml", 80, 3151, 3155), ("astlib/ast_403.ml", 80, 3151, 3196), 0), 0, Tag1 ("Astlib__Ast_403", 45)); (("Pconst_float", 646), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -543); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -545)], (0)), 100000000, 0, -544)]), 0, (("astlib/ast_403.ml", 84, 3258, 3262), ("astlib/ast_403.ml", 84, 3258, 3300), 0), 0, Tag1 ("Astlib__Ast_403", 46))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 71, 2858, 2860), ("astlib/ast_403.ml", 84, 3258, 3300), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 42)), 1, 0); Tag1 (("attribute", 994), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -534)], (0)), 100000000, 0, -533); (Tag3 ((("payload", 997)), 0, (0)), 100000000, 0, -535)]), 100000000, 0, -532)), 0, 0, 0, 0, (("astlib/ast_403.ml", 93, 3467, 3469), ("astlib/ast_403.ml", 93, 3467, 3506), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 47)), 1, 0); Tag1 (("extension", 995), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -530)], (0)), 100000000, 0, -529); (Tag3 ((("payload", 997)), 0, (0)), 100000000, 0, -531)]), 100000000, 0, -528)), 0, 0, 0, 0, (("astlib/ast_403.ml", 101, 3681, 3683), ("astlib/ast_403.ml", 101, 3681, 3719), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 48)), 2, 0); Tag1 (("attributes", 996), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("attribute", 994)), 0, (0)), 100000000, 0, -527)], (0)), 100000000, 0, -526)), 0, 0, 0, 0, (("astlib/ast_403.ml", 108, 3844, 3846), ("astlib/ast_403.ml", 108, 3844, 3877), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 49)), 2, 0); Tag1 (("payload", 997), (0, 0, Tag1 ([(("PStr", 703), ([(Tag3 ((("structure", 1045)), 0, (0)), 100000000, 0, -520)]), 0, (("astlib/ast_403.ml", 111, 3931, 3935), ("astlib/ast_403.ml", 111, 3931, 3954), 0), 0, Tag1 ("Astlib__Ast_403", 103)); (("PSig", 704), ([(Tag3 ((("signature", 1033)), 0, (0)), 100000000, 0, -521)]), 0, (("astlib/ast_403.ml", 112, 3955, 3959), ("astlib/ast_403.ml", 112, 3955, 3978), 0), 0, Tag1 ("Astlib__Ast_403", 104)); (("PTyp", 705), ([(Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -522)]), 0, (("astlib/ast_403.ml", 113, 3991, 3995), ("astlib/ast_403.ml", 113, 3991, 4014), 0), 0, Tag1 ("Astlib__Ast_403", 105)); (("PPat", 706), ([(Tag3 ((("pattern", 1002)), 0, (0)), 100000000, 0, -523); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -525)], (0)), 100000000, 0, -524)]), 0, (("astlib/ast_403.ml", 114, 4026, 4030), ("astlib/ast_403.ml", 114, 4026, 4067), 0), 0, Tag1 ("Astlib__Ast_403", 106))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 110, 3879, 3881), ("astlib/ast_403.ml", 114, 4026, 4067), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 50)), 2, 0); Tag1 (("core_type", 998), (0, 0, [[(("ptyp_desc", 707), 0, (Tag3 ((("core_type_desc", 999)), 0, (0)), 100000000, 0, -517), (("astlib/ast_403.ml", 122, 4214, 4221), ("astlib/ast_403.ml", 122, 4214, 4247), 0), 0, Tag1 ("Astlib__Ast_403", 107)); (("ptyp_loc", 708), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -518), (("astlib/ast_403.ml", 123, 4248, 4255), ("astlib/ast_403.ml", 123, 4248, 4276), 0), 0, Tag1 ("Astlib__Ast_403", 108)); (("ptyp_attributes", 709), 0, (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -519), (("astlib/ast_403.ml", 124, 4277, 4284), ("astlib/ast_403.ml", 124, 4277, 4312), 0), 0, Tag1 ("Astlib__Ast_403", 109))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 120, 4150, 4152), ("astlib/ast_403.ml", 125, 4337, 4344), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 51)), 2, 0); Tag1 (("core_type_desc", 999), (0, 0, Tag1 ([(("Ptyp_any", 710), (0), 0, (("astlib/ast_403.ml", 128, 4412, 4416), ("astlib/ast_403.ml", 128, 4412, 4426), 0), 0, Tag1 ("Astlib__Ast_403", 110)); (("Ptyp_var", 711), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -484)]), 0, (("astlib/ast_403.ml", 130, 4446, 4450), ("astlib/ast_403.ml", 130, 4446, 4470), 0), 0, Tag1 ("Astlib__Ast_403", 111)); (("Ptyp_arrow", 712), ([(Tag3 (Tag1 ((("Asttypes", 978)), "arg_label"), 0, (0)), 100000000, 0, -485); (Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -486); (Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -487)]), 0, (("astlib/ast_403.ml", 132, 4490, 4494), ("astlib/ast_403.ml", 132, 4490, 4543), 0), 0, Tag1 ("Astlib__Ast_403", 112)); (("Ptyp_tuple", 713), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -489)], (0)), 100000000, 0, -488)]), 0, (("astlib/ast_403.ml", 137, 4666, 4670), ("astlib/ast_403.ml", 137, 4666, 4700), 0), 0, Tag1 ("Astlib__Ast_403", 113)); (("Ptyp_constr", 714), ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -491)], (0)), 100000000, 0, -490); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -493)], (0)), 100000000, 0, -492)]), 0, (("astlib/ast_403.ml", 142, 4773, 4777), ("astlib/ast_403.ml", 142, 4773, 4826), 0), 0, Tag1 ("Astlib__Ast_403", 114)); (("Ptyp_object", 718), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -496); (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -497); (Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -498)]), 100000000, 0, -495)], (0)), 100000000, 0, -494); (Tag3 (Tag1 ((("Asttypes", 978)), "closed_flag"), 0, (0)), 100000000, 0, -499)]), 0, (("astlib/ast_403.ml", 147, 4920, 4924), ("astlib/ast_403.ml", 147, 4920, 4993), 0), 0, Tag1 ("Astlib__Ast_403", 115)); (("Ptyp_class", 719), ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -501)], (0)), 100000000, 0, -500); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -503)], (0)), 100000000, 0, -502)]), 0, (("astlib/ast_403.ml", 151, 5116, 5120), ("astlib/ast_403.ml", 151, 5116, 5168), 0), 0, Tag1 ("Astlib__Ast_403", 116)); (("Ptyp_alias", 720), ([(Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -504); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -505)]), 0, (("astlib/ast_403.ml", 156, 5265, 5269), ("astlib/ast_403.ml", 156, 5265, 5303), 0), 0, Tag1 ("Astlib__Ast_403", 117)); (("Ptyp_variant", 721), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("row_field", 1001)), 0, (0)), 100000000, 0, -507)], (0)), 100000000, 0, -506); (Tag3 (Tag1 ((("Asttypes", 978)), "closed_flag"), 0, (0)), 100000000, 0, -508); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 978)), "label"), 0, (0)), 100000000, 0, -511)], (0)), 100000000, 0, -510)], (0)), 100000000, 0, -509)]), 0, (("astlib/ast_403.ml", 158, 5328, 5332), ("astlib/ast_403.ml", 158, 5328, 5398), 0), 0, Tag1 ("Astlib__Ast_403", 118)); (("Ptyp_poly", 722), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -513)], (0)), 100000000, 0, -512); (Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -514)]), 0, (("astlib/ast_403.ml", 164, 5674, 5678), ("astlib/ast_403.ml", 164, 5674, 5716), 0), 0, Tag1 ("Astlib__Ast_403", 119)); (("Ptyp_package", 723), ([(Tag3 ((("package_type", 1000)), 0, (0)), 100000000, 0, -515)]), 0, (("astlib/ast_403.ml", 184, 6270, 6274), ("astlib/ast_403.ml", 184, 6270, 6304), 0), 0, Tag1 ("Astlib__Ast_403", 120)); (("Ptyp_extension", 724), ([(Tag3 ((("extension", 995)), 0, (0)), 100000000, 0, -516)]), 0, (("astlib/ast_403.ml", 186, 6332, 6336), ("astlib/ast_403.ml", 186, 6332, 6365), 0), 0, Tag1 ("Astlib__Ast_403", 121))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 127, 4346, 4348), ("astlib/ast_403.ml", 186, 6332, 6365), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 52)), 2, 0); Tag1 (("package_type", 1000), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -478)], (0)), 100000000, 0, -477); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -482)], (0)), 100000000, 0, -481); (Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -483)]), 100000000, 0, -480)], (0)), 100000000, 0, -479)]), 100000000, 0, -476)), 0, 0, 0, 0, (("astlib/ast_403.ml", 189, 6389, 6391), ("astlib/ast_403.ml", 189, 6389, 6462), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 53)), 2, 0); Tag1 (("row_field", 1001), (0, 0, Tag1 ([(("Rtag", 725), ([(Tag3 (Tag1 ((("Asttypes", 978)), "label"), 0, (0)), 100000000, 0, -470); (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -471); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -472); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -474)], (0)), 100000000, 0, -473)]), 0, (("astlib/ast_403.ml", 196, 6623, 6627), ("astlib/ast_403.ml", 196, 6623, 6679), 0), 0, Tag1 ("Astlib__Ast_403", 122)); (("Rinherit", 726), ([(Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -475)]), 0, (("astlib/ast_403.ml", 209, 7203, 7207), ("astlib/ast_403.ml", 209, 7203, 7230), 0), 0, Tag1 ("Astlib__Ast_403", 123))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 195, 6567, 6569), ("astlib/ast_403.ml", 209, 7203, 7230), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 54)), 2, 0); Tag1 (("pattern", 1002), (0, 0, [[(("ppat_desc", 727), 0, (Tag3 ((("pattern_desc", 1003)), 0, (0)), 100000000, 0, -467), (("astlib/ast_403.ml", 216, 7332, 7339), ("astlib/ast_403.ml", 216, 7332, 7363), 0), 0, Tag1 ("Astlib__Ast_403", 124)); (("ppat_loc", 728), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -468), (("astlib/ast_403.ml", 217, 7364, 7371), ("astlib/ast_403.ml", 217, 7364, 7392), 0), 0, Tag1 ("Astlib__Ast_403", 125)); (("ppat_attributes", 729), 0, (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -469), (("astlib/ast_403.ml", 218, 7393, 7400), ("astlib/ast_403.ml", 218, 7393, 7428), 0), 0, Tag1 ("Astlib__Ast_403", 126))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 214, 7272, 7274), ("astlib/ast_403.ml", 219, 7453, 7460), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 55)), 2, 0); Tag1 (("pattern_desc", 1003), (0, 0, Tag1 ([(("Ppat_any", 730), (0), 0, (("astlib/ast_403.ml", 222, 7524, 7528), ("astlib/ast_403.ml", 222, 7524, 7538), 0), 0, Tag1 ("Astlib__Ast_403", 127)); (("Ppat_var", 731), ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -432)], (0)), 100000000, 0, -431)]), 0, (("astlib/ast_403.ml", 224, 7557, 7561), ("astlib/ast_403.ml", 224, 7557, 7585), 0), 0, Tag1 ("Astlib__Ast_403", 128)); (("Ppat_alias", 732), ([(Tag3 ((("pattern", 1002)), 0, (0)), 100000000, 0, -433); (Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -435)], (0)), 100000000, 0, -434)]), 0, (("astlib/ast_403.ml", 226, 7604, 7608), ("astlib/ast_403.ml", 226, 7604, 7644), 0), 0, Tag1 ("Astlib__Ast_403", 129)); (("Ppat_constant", 733), ([(Tag3 ((("constant", 993)), 0, (0)), 100000000, 0, -436)]), 0, (("astlib/ast_403.ml", 228, 7669, 7673), ("astlib/ast_403.ml", 228, 7669, 7700), 0), 0, Tag1 ("Astlib__Ast_403", 130)); (("Ppat_interval", 734), ([(Tag3 ((("constant", 993)), 0, (0)), 100000000, 0, -437); (Tag3 ((("constant", 993)), 0, (0)), 100000000, 0, -438)]), 0, (("astlib/ast_403.ml", 230, 7749, 7753), ("astlib/ast_403.ml", 230, 7749, 7791), 0), 0, Tag1 ("Astlib__Ast_403", 131)); (("Ppat_tuple", 735), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 1002)), 0, (0)), 100000000, 0, -440)], (0)), 100000000, 0, -439)]), 0, (("astlib/ast_403.ml", 235, 7931, 7935), ("astlib/ast_403.ml", 235, 7931, 7963), 0), 0, Tag1 ("Astlib__Ast_403", 132)); (("Ppat_construct", 736), ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -442)], (0)), 100000000, 0, -441); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 1002)), 0, (0)), 100000000, 0, -444)], (0)), 100000000, 0, -443)]), 0, (("astlib/ast_403.ml", 240, 8036, 8040), ("astlib/ast_403.ml", 240, 8036, 8092), 0), 0, Tag1 ("Astlib__Ast_403", 133)); (("Ppat_variant", 737), ([(Tag3 (Tag1 ((("Asttypes", 978)), "label"), 0, (0)), 100000000, 0, -445); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 1002)), 0, (0)), 100000000, 0, -447)], (0)), 100000000, 0, -446)]), 0, (("astlib/ast_403.ml", 245, 8241, 8245), ("astlib/ast_403.ml", 245, 8241, 8285), 0), 0, Tag1 ("Astlib__Ast_403", 134)); (("Ppat_record", 738), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -451)], (0)), 100000000, 0, -450); (Tag3 ((("pattern", 1002)), 0, (0)), 100000000, 0, -452)]), 100000000, 0, -449)], (0)), 100000000, 0, -448); (Tag3 (Tag1 ((("Asttypes", 978)), "closed_flag"), 0, (0)), 100000000, 0, -453)]), 0, (("astlib/ast_403.ml", 249, 8372, 8376), ("astlib/ast_403.ml", 249, 8372, 8439), 0), 0, Tag1 ("Astlib__Ast_403", 135)); (("Ppat_array", 739), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 1002)), 0, (0)), 100000000, 0, -455)], (0)), 100000000, 0, -454)]), 0, (("astlib/ast_403.ml", 255, 8593, 8597), ("astlib/ast_403.ml", 255, 8593, 8625), 0), 0, Tag1 ("Astlib__Ast_403", 136)); (("Ppat_or", 740), ([(Tag3 ((("pattern", 1002)), 0, (0)), 100000000, 0, -456); (Tag3 ((("pattern", 1002)), 0, (0)), 100000000, 0, -457)]), 0, (("astlib/ast_403.ml", 257, 8660, 8664), ("astlib/ast_403.ml", 257, 8660, 8694), 0), 0, Tag1 ("Astlib__Ast_403", 137)); (("Ppat_constraint", 741), ([(Tag3 ((("pattern", 1002)), 0, (0)), 100000000, 0, -458); (Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -459)]), 0, (("astlib/ast_403.ml", 259, 8719, 8723), ("astlib/ast_403.ml", 259, 8719, 8763), 0), 0, Tag1 ("Astlib__Ast_403", 138)); (("Ppat_type", 742), ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -461)], (0)), 100000000, 0, -460)]), 0, (("astlib/ast_403.ml", 261, 8788, 8792), ("astlib/ast_403.ml", 261, 8788, 8822), 0), 0, Tag1 ("Astlib__Ast_403", 139)); (("Ppat_lazy", 743), ([(Tag3 ((("pattern", 1002)), 0, (0)), 100000000, 0, -462)]), 0, (("astlib/ast_403.ml", 263, 8847, 8851), ("astlib/ast_403.ml", 263, 8847, 8873), 0), 0, Tag1 ("Astlib__Ast_403", 140)); (("Ppat_unpack", 744), ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -464)], (0)), 100000000, 0, -463)]), 0, (("astlib/ast_403.ml", 265, 8897, 8901), ("astlib/ast_403.ml", 265, 8897, 8928), 0), 0, Tag1 ("Astlib__Ast_403", 141)); (("Ppat_exception", 745), ([(Tag3 ((("pattern", 1002)), 0, (0)), 100000000, 0, -465)]), 0, (("astlib/ast_403.ml", 270, 9075, 9079), ("astlib/ast_403.ml", 270, 9075, 9106), 0), 0, Tag1 ("Astlib__Ast_403", 142)); (("Ppat_extension", 746), ([(Tag3 ((("extension", 995)), 0, (0)), 100000000, 0, -466)]), 0, (("astlib/ast_403.ml", 272, 9135, 9139), ("astlib/ast_403.ml", 272, 9135, 9168), 0), 0, Tag1 ("Astlib__Ast_403", 143))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 221, 7462, 7464), ("astlib/ast_403.ml", 272, 9135, 9168), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 56)), 2, 0); Tag1 (("expression", 1004), (0, 0, [[(("pexp_desc", 747), 0, (Tag3 ((("expression_desc", 1005)), 0, (0)), 100000000, 0, -428), (("astlib/ast_403.ml", 279, 9285, 9292), ("astlib/ast_403.ml", 279, 9285, 9319), 0), 0, Tag1 ("Astlib__Ast_403", 144)); (("pexp_loc", 748), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -429), (("astlib/ast_403.ml", 280, 9320, 9327), ("astlib/ast_403.ml", 280, 9320, 9348), 0), 0, Tag1 ("Astlib__Ast_403", 145)); (("pexp_attributes", 749), 0, (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -430), (("astlib/ast_403.ml", 281, 9349, 9356), ("astlib/ast_403.ml", 281, 9349, 9384), 0), 0, Tag1 ("Astlib__Ast_403", 146))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 277, 9219, 9221), ("astlib/ast_403.ml", 282, 9409, 9416), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 57)), 2, 0); Tag1 (("expression_desc", 1005), (0, 0, Tag1 ([(("Pexp_ident", 750), ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -330)], (0)), 100000000, 0, -329)]), 0, (("astlib/ast_403.ml", 285, 9486, 9490), ("astlib/ast_403.ml", 285, 9486, 9521), 0), 0, Tag1 ("Astlib__Ast_403", 147)); (("Pexp_constant", 751), ([(Tag3 ((("constant", 993)), 0, (0)), 100000000, 0, -331)]), 0, (("astlib/ast_403.ml", 289, 9568, 9572), ("astlib/ast_403.ml", 289, 9568, 9599), 0), 0, Tag1 ("Astlib__Ast_403", 148)); (("Pexp_let", 752), ([(Tag3 (Tag1 ((("Asttypes", 978)), "rec_flag"), 0, (0)), 100000000, 0, -332); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 1048)), 0, (0)), 100000000, 0, -334)], (0)), 100000000, 0, -333); (Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -335)]), 0, (("astlib/ast_403.ml", 291, 9648, 9652), ("astlib/ast_403.ml", 291, 9648, 9708), 0), 0, Tag1 ("Astlib__Ast_403", 149)); (("Pexp_function", 753), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 1006)), 0, (0)), 100000000, 0, -337)], (0)), 100000000, 0, -336)]), 0, (("astlib/ast_403.ml", 295, 9876, 9880), ("astlib/ast_403.ml", 295, 9876, 9908), 0), 0, Tag1 ("Astlib__Ast_403", 150)); (("Pexp_fun", 754), ([(Tag3 (Tag1 ((("Asttypes", 978)), "arg_label"), 0, (0)), 100000000, 0, -338); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -340)], (0)), 100000000, 0, -339); (Tag3 ((("pattern", 1002)), 0, (0)), 100000000, 0, -341); (Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -342)]), 0, (("astlib/ast_403.ml", 297, 9960, 9964), ("astlib/ast_403.ml", 297, 9960, 10030), 0), 0, Tag1 ("Astlib__Ast_403", 151)); (("Pexp_apply", 755), ([(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -343); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 978)), "arg_label"), 0, (0)), 100000000, 0, -346); (Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -347)]), 100000000, 0, -345)], (0)), 100000000, 0, -344)]), 0, (("astlib/ast_403.ml", 308, 10535, 10539), ("astlib/ast_403.ml", 308, 10535, 10597), 0), 0, Tag1 ("Astlib__Ast_403", 152)); (("Pexp_match", 756), ([(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -348); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 1006)), 0, (0)), 100000000, 0, -350)], (0)), 100000000, 0, -349)]), 0, (("astlib/ast_403.ml", 315, 10781, 10785), ("astlib/ast_403.ml", 315, 10781, 10823), 0), 0, Tag1 ("Astlib__Ast_403", 153)); (("Pexp_try", 757), ([(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -351); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 1006)), 0, (0)), 100000000, 0, -353)], (0)), 100000000, 0, -352)]), 0, (("astlib/ast_403.ml", 317, 10880, 10884), ("astlib/ast_403.ml", 317, 10880, 10920), 0), 0, Tag1 ("Astlib__Ast_403", 154)); (("Pexp_tuple", 758), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -355)], (0)), 100000000, 0, -354)]), 0, (("astlib/ast_403.ml", 319, 10975, 10979), ("astlib/ast_403.ml", 319, 10975, 11010), 0), 0, Tag1 ("Astlib__Ast_403", 155)); (("Pexp_construct", 759), ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -357)], (0)), 100000000, 0, -356); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -359)], (0)), 100000000, 0, -358)]), 0, (("astlib/ast_403.ml", 324, 11083, 11087), ("astlib/ast_403.ml", 324, 11083, 11142), 0), 0, Tag1 ("Astlib__Ast_403", 156)); (("Pexp_variant", 760), ([(Tag3 (Tag1 ((("Asttypes", 978)), "label"), 0, (0)), 100000000, 0, -360); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -362)], (0)), 100000000, 0, -361)]), 0, (("astlib/ast_403.ml", 329, 11287, 11291), ("astlib/ast_403.ml", 329, 11287, 11334), 0), 0, Tag1 ("Astlib__Ast_403", 157)); (("Pexp_record", 761), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -366)], (0)), 100000000, 0, -365); (Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -367)]), 100000000, 0, -364)], (0)), 100000000, 0, -363); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -369)], (0)), 100000000, 0, -368)]), 0, (("astlib/ast_403.ml", 333, 11421, 11425), ("astlib/ast_403.ml", 333, 11421, 11497), 0), 0, Tag1 ("Astlib__Ast_403", 158)); (("Pexp_field", 762), ([(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -370); (Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -372)], (0)), 100000000, 0, -371)]), 0, (("astlib/ast_403.ml", 339, 11644, 11648), ("astlib/ast_403.ml", 339, 11644, 11692), 0), 0, Tag1 ("Astlib__Ast_403", 159)); (("Pexp_setfield", 763), ([(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -373); (Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -375)], (0)), 100000000, 0, -374); (Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -376)]), 0, (("astlib/ast_403.ml", 341, 11713, 11717), ("astlib/ast_403.ml", 341, 11713, 11777), 0), 0, Tag1 ("Astlib__Ast_403", 160)); (("Pexp_array", 764), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -378)], (0)), 100000000, 0, -377)]), 0, (("astlib/ast_403.ml", 343, 11805, 11809), ("astlib/ast_403.ml", 343, 11805, 11840), 0), 0, Tag1 ("Astlib__Ast_403", 161)); (("Pexp_ifthenelse", 765), ([(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -379); (Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -380); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -382)], (0)), 100000000, 0, -381)]), 0, (("astlib/ast_403.ml", 345, 11875, 11879), ("astlib/ast_403.ml", 345, 11875, 11943), 0), 0, Tag1 ("Astlib__Ast_403", 162)); (("Pexp_sequence", 766), ([(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -383); (Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -384)]), 0, (("astlib/ast_403.ml", 347, 11982, 11986), ("astlib/ast_403.ml", 347, 11982, 12028), 0), 0, Tag1 ("Astlib__Ast_403", 163)); (("Pexp_while", 767), ([(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -385); (Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -386)]), 0, (("astlib/ast_403.ml", 349, 12052, 12056), ("astlib/ast_403.ml", 349, 12052, 12095), 0), 0, Tag1 ("Astlib__Ast_403", 164)); (("Pexp_for", 768), ([(Tag3 ((("pattern", 1002)), 0, (0)), 100000000, 0, -387); (Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -388); (Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -389); (Tag3 (Tag1 ((("Asttypes", 978)), "direction_flag"), 0, (0)), 100000000, 0, -390); (Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -391)]), 0, (("astlib/ast_403.ml", 351, 12132, 12136), ("astlib/ast_403.ml", 352, 12150, 12222), 0), 0, Tag1 ("Astlib__Ast_403", 165)); (("Pexp_constraint", 769), ([(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -392); (Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -393)]), 0, (("astlib/ast_403.ml", 356, 12359, 12363), ("astlib/ast_403.ml", 356, 12359, 12406), 0), 0, Tag1 ("Astlib__Ast_403", 166)); (("Pexp_coerce", 770), ([(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -394); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -396)], (0)), 100000000, 0, -395); (Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -397)]), 0, (("astlib/ast_403.ml", 358, 12431, 12435), ("astlib/ast_403.ml", 358, 12431, 12493), 0), 0, Tag1 ("Astlib__Ast_403", 167)); (("Pexp_send", 771), ([(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -398); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -399)]), 0, (("astlib/ast_403.ml", 362, 12589, 12593), ("astlib/ast_403.ml", 362, 12589, 12627), 0), 0, Tag1 ("Astlib__Ast_403", 168)); (("Pexp_new", 772), ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -401)], (0)), 100000000, 0, -400)]), 0, (("astlib/ast_403.ml", 364, 12651, 12655), ("astlib/ast_403.ml", 364, 12651, 12684), 0), 0, Tag1 ("Astlib__Ast_403", 169)); (("Pexp_setinstvar", 773), ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -403)], (0)), 100000000, 0, -402); (Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -404)]), 0, (("astlib/ast_403.ml", 366, 12709, 12713), ("astlib/ast_403.ml", 366, 12709, 12757), 0), 0, Tag1 ("Astlib__Ast_403", 170)); (("Pexp_override", 774), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -408)], (0)), 100000000, 0, -407); (Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -409)]), 100000000, 0, -406)], (0)), 100000000, 0, -405)]), 0, (("astlib/ast_403.ml", 368, 12781, 12785), ("astlib/ast_403.ml", 368, 12781, 12834), 0), 0, Tag1 ("Astlib__Ast_403", 171)); (("Pexp_letmodule", 775), ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -411)], (0)), 100000000, 0, -410); (Tag3 ((("module_expr", 1043)), 0, (0)), 100000000, 0, -412); (Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -413)]), 0, (("astlib/ast_403.ml", 370, 12879, 12883), ("astlib/ast_403.ml", 370, 12879, 12940), 0), 0, Tag1 ("Astlib__Ast_403", 172)); (("Pexp_assert", 776), ([(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -414)]), 0, (("astlib/ast_403.ml", 372, 12980, 12984), ("astlib/ast_403.ml", 372, 12980, 13011), 0), 0, Tag1 ("Astlib__Ast_403", 173)); (("Pexp_lazy", 777), ([(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -415)]), 0, (("astlib/ast_403.ml", 376, 13133, 13137), ("astlib/ast_403.ml", 376, 13133, 13162), 0), 0, Tag1 ("Astlib__Ast_403", 174)); (("Pexp_poly", 778), ([(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -416); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -418)], (0)), 100000000, 0, -417)]), 0, (("astlib/ast_403.ml", 378, 13186, 13190), ("astlib/ast_403.ml", 378, 13186, 13234), 0), 0, Tag1 ("Astlib__Ast_403", 175)); (("Pexp_object", 779), ([(Tag3 ((("class_structure", 1026)), 0, (0)), 100000000, 0, -419)]), 0, (("astlib/ast_403.ml", 383, 13382, 13386), ("astlib/ast_403.ml", 383, 13382, 13418), 0), 0, Tag1 ("Astlib__Ast_403", 176)); (("Pexp_newtype", 780), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -420); (Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -421)]), 0, (("astlib/ast_403.ml", 385, 13450, 13454), ("astlib/ast_403.ml", 385, 13450, 13491), 0), 0, Tag1 ("Astlib__Ast_403", 177)); (("Pexp_pack", 781), ([(Tag3 ((("module_expr", 1043)), 0, (0)), 100000000, 0, -422)]), 0, (("astlib/ast_403.ml", 387, 13526, 13530), ("astlib/ast_403.ml", 387, 13526, 13556), 0), 0, Tag1 ("Astlib__Ast_403", 178)); (("Pexp_open", 782), ([(Tag3 (Tag1 ((("Asttypes", 978)), "override_flag"), 0, (0)), 100000000, 0, -423); (Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -425)], (0)), 100000000, 0, -424); (Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -426)]), 0, (("astlib/ast_403.ml", 392, 13689, 13693), ("astlib/ast_403.ml", 392, 13689, 13752), 0), 0, Tag1 ("Astlib__Ast_403", 179)); (("Pexp_extension", 783), ([(Tag3 ((("extension", 995)), 0, (0)), 100000000, 0, -427)]), 0, (("astlib/ast_403.ml", 396, 13825, 13829), ("astlib/ast_403.ml", 396, 13825, 13858), 0), 0, Tag1 ("Astlib__Ast_403", 180)); (("Pexp_unreachable", 784), (0), 0, (("astlib/ast_403.ml", 398, 13881, 13885), ("astlib/ast_403.ml", 398, 13881, 13903), 0), 0, Tag1 ("Astlib__Ast_403", 181))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 284, 9418, 9420), ("astlib/ast_403.ml", 398, 13881, 13903), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 58)), 2, 0); Tag1 (("case", 1006), (0, 0, [[(("pc_lhs", 785), 0, (Tag3 ((("pattern", 1002)), 0, (0)), 100000000, 0, -325), (("astlib/ast_403.ml", 403, 14014, 14021), ("astlib/ast_403.ml", 403, 14014, 14037), 0), 0, Tag1 ("Astlib__Ast_403", 182)); (("pc_guard", 786), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -327)], (0)), 100000000, 0, -326), (("astlib/ast_403.ml", 404, 14038, 14045), ("astlib/ast_403.ml", 404, 14038, 14073), 0), 0, Tag1 ("Astlib__Ast_403", 183)); (("pc_rhs", 787), 0, (Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -328), (("astlib/ast_403.ml", 405, 14074, 14081), ("astlib/ast_403.ml", 405, 14074, 14100), 0), 0, Tag1 ("Astlib__Ast_403", 184))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 401, 13923, 13925), ("astlib/ast_403.ml", 406, 14101, 14108), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 59)), 2, 0); Tag1 (("value_description", 1007), (0, 0, [[(("pval_name", 788), 0, (Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -319)], (0)), 100000000, 0, -318), (("astlib/ast_403.ml", 412, 14218, 14225), ("astlib/ast_403.ml", 412, 14218, 14247), 0), 0, Tag1 ("Astlib__Ast_403", 185)); (("pval_type", 789), 0, (Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -320), (("astlib/ast_403.ml", 413, 14248, 14255), ("astlib/ast_403.ml", 413, 14248, 14276), 0), 0, Tag1 ("Astlib__Ast_403", 186)); (("pval_prim", 790), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -322)], (0)), 100000000, 0, -321), (("astlib/ast_403.ml", 414, 14277, 14284), ("astlib/ast_403.ml", 414, 14277, 14307), 0), 0, Tag1 ("Astlib__Ast_403", 187)); (("pval_attributes", 791), 0, (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -323), (("astlib/ast_403.ml", 415, 14308, 14315), ("astlib/ast_403.ml", 415, 14308, 14343), 0), 0, Tag1 ("Astlib__Ast_403", 188)); (("pval_loc", 792), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -324), (("astlib/ast_403.ml", 416, 14371, 14378), ("astlib/ast_403.ml", 416, 14371, 14399), 0), 0, Tag1 ("Astlib__Ast_403", 189))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 410, 14138, 14140), ("astlib/ast_403.ml", 417, 14400, 14407), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 60)), 2, 0); Tag1 (("type_declaration", 1008), (0, 0, [[(("ptype_name", 793), 0, (Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -302)], (0)), 100000000, 0, -301), (("astlib/ast_403.ml", 428, 14641, 14648), ("astlib/ast_403.ml", 428, 14641, 14671), 0), 0, Tag1 ("Astlib__Ast_403", 190)); (("ptype_params", 794), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -305); (Tag3 (Tag1 ((("Asttypes", 978)), "variance"), 0, (0)), 100000000, 0, -306)]), 100000000, 0, -304)], (0)), 100000000, 0, -303), (("astlib/ast_403.ml", 429, 14672, 14679), ("astlib/ast_403.ml", 429, 14672, 14721), 0), 0, Tag1 ("Astlib__Ast_403", 191)); (("ptype_cstrs", 795), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -309); (Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -310); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -311)]), 100000000, 0, -308)], (0)), 100000000, 0, -307), (("astlib/ast_403.ml", 431, 14775, 14782), ("astlib/ast_403.ml", 431, 14775, 14837), 0), 0, Tag1 ("Astlib__Ast_403", 192)); (("ptype_kind", 796), 0, (Tag3 ((("type_kind", 1009)), 0, (0)), 100000000, 0, -312), (("astlib/ast_403.ml", 433, 14902, 14909), ("astlib/ast_403.ml", 433, 14902, 14931), 0), 0, Tag1 ("Astlib__Ast_403", 193)); (("ptype_private", 797), 0, (Tag3 (Tag1 ((("Asttypes", 978)), "private_flag"), 0, (0)), 100000000, 0, -313), (("astlib/ast_403.ml", 434, 14932, 14939), ("astlib/ast_403.ml", 434, 14932, 14967), 0), 0, Tag1 ("Astlib__Ast_403", 194)); (("ptype_manifest", 798), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -315)], (0)), 100000000, 0, -314), (("astlib/ast_403.ml", 435, 14990, 14997), ("astlib/ast_403.ml", 435, 14990, 15030), 0), 0, Tag1 ("Astlib__Ast_403", 195)); (("ptype_attributes", 799), 0, (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -316), (("astlib/ast_403.ml", 436, 15042, 15049), ("astlib/ast_403.ml", 436, 15042, 15078), 0), 0, Tag1 ("Astlib__Ast_403", 196)); (("ptype_loc", 800), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -317), (("astlib/ast_403.ml", 437, 15107, 15114), ("astlib/ast_403.ml", 437, 15107, 15136), 0), 0, Tag1 ("Astlib__Ast_403", 197))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 426, 14563, 14565), ("astlib/ast_403.ml", 438, 15137, 15144), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 61)), 2, 0); Tag1 (("type_kind", 1009), (0, 0, Tag1 ([(("Ptype_abstract", 801), (0), 0, (("astlib/ast_403.ml", 451, 15598, 15602), ("astlib/ast_403.ml", 451, 15598, 15618), 0), 0, Tag1 ("Astlib__Ast_403", 198)); (("Ptype_variant", 802), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("constructor_declaration", 1011)), 0, (0)), 100000000, 0, -298)], (0)), 100000000, 0, -297)]), 0, (("astlib/ast_403.ml", 452, 15619, 15623), ("astlib/ast_403.ml", 452, 15619, 15670), 0), 0, Tag1 ("Astlib__Ast_403", 199)); (("Ptype_record", 803), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 1010)), 0, (0)), 100000000, 0, -300)], (0)), 100000000, 0, -299)]), 0, (("astlib/ast_403.ml", 454, 15713, 15717), ("astlib/ast_403.ml", 454, 15713, 15757), 0), 0, Tag1 ("Astlib__Ast_403", 200)); (("Ptype_open", 804), (0), 0, (("astlib/ast_403.ml", 456, 15800, 15804), ("astlib/ast_403.ml", 456, 15800, 15816), 0), 0, Tag1 ("Astlib__Ast_403", 201))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 450, 15542, 15544), ("astlib/ast_403.ml", 456, 15800, 15816), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 62)), 2, 0); Tag1 (("label_declaration", 1010), (0, 0, [[(("pld_name", 805), 0, (Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -292)], (0)), 100000000, 0, -291), (("astlib/ast_403.ml", 460, 15898, 15905), ("astlib/ast_403.ml", 460, 15898, 15926), 0), 0, Tag1 ("Astlib__Ast_403", 202)); (("pld_mutable", 806), 0, (Tag3 (Tag1 ((("Asttypes", 978)), "mutable_flag"), 0, (0)), 100000000, 0, -293), (("astlib/ast_403.ml", 461, 15927, 15934), ("astlib/ast_403.ml", 461, 15927, 15960), 0), 0, Tag1 ("Astlib__Ast_403", 203)); (("pld_type", 807), 0, (Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -294), (("astlib/ast_403.ml", 462, 15961, 15968), ("astlib/ast_403.ml", 462, 15961, 15988), 0), 0, Tag1 ("Astlib__Ast_403", 204)); (("pld_loc", 808), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -295), (("astlib/ast_403.ml", 463, 15989, 15996), ("astlib/ast_403.ml", 463, 15989, 16016), 0), 0, Tag1 ("Astlib__Ast_403", 205)); (("pld_attributes", 809), 0, (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -296), (("astlib/ast_403.ml", 464, 16017, 16024), ("astlib/ast_403.ml", 464, 16017, 16051), 0), 0, Tag1 ("Astlib__Ast_403", 206))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 458, 15818, 15820), ("astlib/ast_403.ml", 465, 16078, 16085), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 63)), 2, 0); Tag1 (("constructor_declaration", 1011), (0, 0, [[(("pcd_name", 810), 0, (Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -285)], (0)), 100000000, 0, -284), (("astlib/ast_403.ml", 475, 16330, 16337), ("astlib/ast_403.ml", 475, 16330, 16358), 0), 0, Tag1 ("Astlib__Ast_403", 207)); (("pcd_args", 811), 0, (Tag3 ((("constructor_arguments", 1012)), 0, (0)), 100000000, 0, -286), (("astlib/ast_403.ml", 476, 16359, 16366), ("astlib/ast_403.ml", 476, 16359, 16398), 0), 0, Tag1 ("Astlib__Ast_403", 208)); (("pcd_res", 812), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -288)], (0)), 100000000, 0, -287), (("astlib/ast_403.ml", 477, 16399, 16406), ("astlib/ast_403.ml", 477, 16399, 16432), 0), 0, Tag1 ("Astlib__Ast_403", 209)); (("pcd_loc", 813), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -289), (("astlib/ast_403.ml", 478, 16433, 16440), ("astlib/ast_403.ml", 478, 16433, 16460), 0), 0, Tag1 ("Astlib__Ast_403", 210)); (("pcd_attributes", 814), 0, (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -290), (("astlib/ast_403.ml", 479, 16461, 16468), ("astlib/ast_403.ml", 479, 16461, 16495), 0), 0, Tag1 ("Astlib__Ast_403", 211))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 473, 16238, 16240), ("astlib/ast_403.ml", 480, 16525, 16532), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 64)), 2, 0); Tag1 (("constructor_arguments", 1012), (0, 0, Tag1 ([(("Pcstr_tuple", 815), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -281)], (0)), 100000000, 0, -280)]), 0, (("astlib/ast_403.ml", 483, 16614, 16618), ("astlib/ast_403.ml", 483, 16614, 16649), 0), 0, Tag1 ("Astlib__Ast_403", 212)); (("Pcstr_record", 816), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 1010)), 0, (0)), 100000000, 0, -283)], (0)), 100000000, 0, -282)]), 0, (("astlib/ast_403.ml", 484, 16650, 16654), ("astlib/ast_403.ml", 484, 16650, 16694), 0), 0, Tag1 ("Astlib__Ast_403", 213))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 482, 16534, 16536), ("astlib/ast_403.ml", 484, 16650, 16694), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 65)), 2, 0); Tag1 (("type_extension", 1013), (0, 0, [[(("ptyext_path", 817), 0, (Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -271)], (0)), 100000000, 0, -270), (("astlib/ast_403.ml", 497, 17168, 17175), ("astlib/ast_403.ml", 497, 17168, 17204), 0), 0, Tag1 ("Astlib__Ast_403", 214)); (("ptyext_params", 818), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -274); (Tag3 (Tag1 ((("Asttypes", 978)), "variance"), 0, (0)), 100000000, 0, -275)]), 100000000, 0, -273)], (0)), 100000000, 0, -272), (("astlib/ast_403.ml", 498, 17205, 17212), ("astlib/ast_403.ml", 498, 17205, 17255), 0), 0, Tag1 ("Astlib__Ast_403", 215)); (("ptyext_constructors", 819), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("extension_constructor", 1014)), 0, (0)), 100000000, 0, -277)], (0)), 100000000, 0, -276), (("astlib/ast_403.ml", 499, 17256, 17263), ("astlib/ast_403.ml", 499, 17256, 17311), 0), 0, Tag1 ("Astlib__Ast_403", 216)); (("ptyext_private", 820), 0, (Tag3 (Tag1 ((("Asttypes", 978)), "private_flag"), 0, (0)), 100000000, 0, -278), (("astlib/ast_403.ml", 500, 17312, 17319), ("astlib/ast_403.ml", 500, 17312, 17348), 0), 0, Tag1 ("Astlib__Ast_403", 217)); (("ptyext_attributes", 821), 0, (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -279), (("astlib/ast_403.ml", 501, 17349, 17356), ("astlib/ast_403.ml", 501, 17349, 17386), 0), 0, Tag1 ("Astlib__Ast_403", 218))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 495, 17094, 17096), ("astlib/ast_403.ml", 502, 17415, 17422), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 66)), 2, 0); Tag1 (("extension_constructor", 1014), (0, 0, [[(("pext_name", 822), 0, (Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -266)], (0)), 100000000, 0, -265), (("astlib/ast_403.ml", 509, 17540, 17547), ("astlib/ast_403.ml", 509, 17540, 17569), 0), 0, Tag1 ("Astlib__Ast_403", 219)); (("pext_kind", 823), 0, (Tag3 ((("extension_constructor_kind", 1015)), 0, (0)), 100000000, 0, -267), (("astlib/ast_403.ml", 510, 17570, 17577), ("astlib/ast_403.ml", 510, 17570, 17616), 0), 0, Tag1 ("Astlib__Ast_403", 220)); (("pext_loc", 824), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -268), (("astlib/ast_403.ml", 511, 17617, 17624), ("astlib/ast_403.ml", 511, 17617, 17646), 0), 0, Tag1 ("Astlib__Ast_403", 221)); (("pext_attributes", 825), 0, (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -269), (("astlib/ast_403.ml", 512, 17647, 17654), ("astlib/ast_403.ml", 512, 17647, 17682), 0), 0, Tag1 ("Astlib__Ast_403", 222))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 507, 17452, 17454), ("astlib/ast_403.ml", 513, 17712, 17719), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 67)), 2, 0); Tag1 (("extension_constructor_kind", 1015), (0, 0, Tag1 ([(("Pext_decl", 826), ([(Tag3 ((("constructor_arguments", 1012)), 0, (0)), 100000000, 0, -260); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -262)], (0)), 100000000, 0, -261)]), 0, (("astlib/ast_403.ml", 516, 17811, 17817), ("astlib/ast_403.ml", 516, 17811, 17870), 0), 0, Tag1 ("Astlib__Ast_403", 223)); (("Pext_rebind", 827), ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -264)], (0)), 100000000, 0, -263)]), 0, (("astlib/ast_403.ml", 522, 18063, 18067), ("astlib/ast_403.ml", 522, 18063, 18099), 0), 0, Tag1 ("Astlib__Ast_403", 224))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 515, 17721, 17723), ("astlib/ast_403.ml", 522, 18063, 18099), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 68)), 2, 0); Tag1 (("class_type", 1016), (0, 0, [[(("pcty_desc", 828), 0, (Tag3 ((("class_type_desc", 1017)), 0, (0)), 100000000, 0, -257), (("astlib/ast_403.ml", 533, 18287, 18294), ("astlib/ast_403.ml", 533, 18287, 18321), 0), 0, Tag1 ("Astlib__Ast_403", 225)); (("pcty_loc", 829), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -258), (("astlib/ast_403.ml", 534, 18322, 18329), ("astlib/ast_403.ml", 534, 18322, 18350), 0), 0, Tag1 ("Astlib__Ast_403", 226)); (("pcty_attributes", 830), 0, (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -259), (("astlib/ast_403.ml", 535, 18351, 18358), ("astlib/ast_403.ml", 535, 18351, 18386), 0), 0, Tag1 ("Astlib__Ast_403", 227))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 531, 18221, 18223), ("astlib/ast_403.ml", 536, 18411, 18418), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 69)), 2, 0); Tag1 (("class_type_desc", 1017), (0, 0, Tag1 ([(("Pcty_constr", 831), ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -249)], (0)), 100000000, 0, -248); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -251)], (0)), 100000000, 0, -250)]), 0, (("astlib/ast_403.ml", 539, 18488, 18492), ("astlib/ast_403.ml", 539, 18488, 18541), 0), 0, Tag1 ("Astlib__Ast_403", 228)); (("Pcty_signature", 832), ([(Tag3 ((("class_signature", 1018)), 0, (0)), 100000000, 0, -252)]), 0, (("astlib/ast_403.ml", 542, 18591, 18595), ("astlib/ast_403.ml", 542, 18591, 18630), 0), 0, Tag1 ("Astlib__Ast_403", 229)); (("Pcty_arrow", 833), ([(Tag3 (Tag1 ((("Asttypes", 978)), "arg_label"), 0, (0)), 100000000, 0, -253); (Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -254); (Tag3 ((("class_type", 1016)), 0, (0)), 100000000, 0, -255)]), 0, (("astlib/ast_403.ml", 544, 18662, 18666), ("astlib/ast_403.ml", 544, 18662, 18716), 0), 0, Tag1 ("Astlib__Ast_403", 230)); (("Pcty_extension", 834), ([(Tag3 ((("extension", 995)), 0, (0)), 100000000, 0, -256)]), 0, (("astlib/ast_403.ml", 549, 18841, 18845), ("astlib/ast_403.ml", 549, 18841, 18874), 0), 0, Tag1 ("Astlib__Ast_403", 231))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 538, 18420, 18422), ("astlib/ast_403.ml", 549, 18841, 18874), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 70)), 2, 0); Tag1 (("class_signature", 1018), (0, 0, [[(("pcsig_self", 835), 0, (Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -245), (("astlib/ast_403.ml", 554, 18974, 18981), ("astlib/ast_403.ml", 554, 18974, 19003), 0), 0, Tag1 ("Astlib__Ast_403", 232)); (("pcsig_fields", 836), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_field", 1019)), 0, (0)), 100000000, 0, -247)], (0)), 100000000, 0, -246), (("astlib/ast_403.ml", 555, 19004, 19011), ("astlib/ast_403.ml", 555, 19004, 19047), 0), 0, Tag1 ("Astlib__Ast_403", 233))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 552, 18898, 18900), ("astlib/ast_403.ml", 556, 19048, 19055), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 71)), 2, 0); Tag1 (("class_type_field", 1019), (0, 0, [[(("pctf_desc", 837), 0, (Tag3 ((("class_type_field_desc", 1020)), 0, (0)), 100000000, 0, -242), (("astlib/ast_403.ml", 563, 19221, 19228), ("astlib/ast_403.ml", 563, 19221, 19261), 0), 0, Tag1 ("Astlib__Ast_403", 234)); (("pctf_loc", 838), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -243), (("astlib/ast_403.ml", 564, 19262, 19269), ("astlib/ast_403.ml", 564, 19262, 19290), 0), 0, Tag1 ("Astlib__Ast_403", 235)); (("pctf_attributes", 839), 0, (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -244), (("astlib/ast_403.ml", 565, 19291, 19298), ("astlib/ast_403.ml", 565, 19291, 19326), 0), 0, Tag1 ("Astlib__Ast_403", 236))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 561, 19143, 19145), ("astlib/ast_403.ml", 566, 19353, 19360), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 72)), 2, 0); Tag1 (("class_type_field_desc", 1020), (0, 0, Tag1 ([(("Pctf_inherit", 840), ([(Tag3 ((("class_type", 1016)), 0, (0)), 100000000, 0, -226)]), 0, (("astlib/ast_403.ml", 569, 19442, 19446), ("astlib/ast_403.ml", 569, 19442, 19474), 0), 0, Tag1 ("Astlib__Ast_403", 237)); (("Pctf_val", 841), ([(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -228); (Tag3 (Tag1 ((("Asttypes", 978)), "mutable_flag"), 0, (0)), 100000000, 0, -229); (Tag3 (Tag1 ((("Asttypes", 978)), "virtual_flag"), 0, (0)), 100000000, 0, -230); (Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -231)]), 100000000, 0, -227)]), 0, (("astlib/ast_403.ml", 571, 19502, 19506), ("astlib/ast_403.ml", 571, 19502, 19570), 0), 0, Tag1 ("Astlib__Ast_403", 238)); (("Pctf_method", 842), ([(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -233); (Tag3 (Tag1 ((("Asttypes", 978)), "private_flag"), 0, (0)), 100000000, 0, -234); (Tag3 (Tag1 ((("Asttypes", 978)), "virtual_flag"), 0, (0)), 100000000, 0, -235); (Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -236)]), 100000000, 0, -232)]), 0, (("astlib/ast_403.ml", 573, 19596, 19600), ("astlib/ast_403.ml", 573, 19596, 19668), 0), 0, Tag1 ("Astlib__Ast_403", 239)); (("Pctf_constraint", 843), ([(Tag2 ([(Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -238); (Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -239)]), 100000000, 0, -237)]), 0, (("astlib/ast_403.ml", 578, 19750, 19754), ("astlib/ast_403.ml", 578, 19750, 19799), 0), 0, Tag1 ("Astlib__Ast_403", 240)); (("Pctf_attribute", 844), ([(Tag3 ((("attribute", 994)), 0, (0)), 100000000, 0, -240)]), 0, (("astlib/ast_403.ml", 580, 19835, 19839), ("astlib/ast_403.ml", 580, 19835, 19868), 0), 0, Tag1 ("Astlib__Ast_403", 241)); (("Pctf_extension", 845), ([(Tag3 ((("extension", 995)), 0, (0)), 100000000, 0, -241)]), 0, (("astlib/ast_403.ml", 582, 19893, 19897), ("astlib/ast_403.ml", 582, 19893, 19926), 0), 0, Tag1 ("Astlib__Ast_403", 242))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 568, 19362, 19364), ("astlib/ast_403.ml", 582, 19893, 19926), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 73)), 2, 0); Tag1 (("class_infos", 1021), ([((("a")), 100000000, 0, -223)], 1, [[(("pci_virt", 846), 0, (Tag3 (Tag1 ((("Asttypes", 978)), "virtual_flag"), 0, (0)), 100000000, 0, -216), (("astlib/ast_403.ml", 587, 20025, 20032), ("astlib/ast_403.ml", 587, 20025, 20055), 0), 0, Tag1 ("Astlib__Ast_403", 243)); (("pci_params", 847), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -219); (Tag3 (Tag1 ((("Asttypes", 978)), "variance"), 0, (0)), 100000000, 0, -220)]), 100000000, 0, -218)], (0)), 100000000, 0, -217), (("astlib/ast_403.ml", 588, 20056, 20063), ("astlib/ast_403.ml", 588, 20056, 20103), 0), 0, Tag1 ("Astlib__Ast_403", 244)); (("pci_name", 848), 0, (Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -222)], (0)), 100000000, 0, -221), (("astlib/ast_403.ml", 589, 20104, 20111), ("astlib/ast_403.ml", 589, 20104, 20132), 0), 0, Tag1 ("Astlib__Ast_403", 245)); (("pci_expr", 849), 0, ((("a")), 100000000, 0, -223), (("astlib/ast_403.ml", 590, 20133, 20140), ("astlib/ast_403.ml", 590, 20133, 20153), 0), 0, Tag1 ("Astlib__Ast_403", 246)); (("pci_loc", 850), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -224), (("astlib/ast_403.ml", 591, 20154, 20161), ("astlib/ast_403.ml", 591, 20154, 20181), 0), 0, Tag1 ("Astlib__Ast_403", 247)); (("pci_attributes", 851), 0, (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -225), (("astlib/ast_403.ml", 592, 20182, 20189), ("astlib/ast_403.ml", 592, 20182, 20216), 0), 0, Tag1 ("Astlib__Ast_403", 248))]], 1, 0, [25], [0], 0, 0, (("astlib/ast_403.ml", 585, 19951, 19953), ("astlib/ast_403.ml", 593, 20244, 20251), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 74)), 2, 0); Tag1 (("class_description", 1022), (0, 0, 0, 1, ((Tag3 ((("class_infos", 1021)), [(Tag3 ((("class_type", 1016)), 0, (0)), 100000000, 0, -215)], (0)), 100000000, 0, -214)), 0, 0, 0, 0, (("astlib/ast_403.ml", 601, 20383, 20385), ("astlib/ast_403.ml", 601, 20383, 20431), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 75)), 2, 0); Tag1 (("class_type_declaration", 1023), (0, 0, 0, 1, ((Tag3 ((("class_infos", 1021)), [(Tag3 ((("class_type", 1016)), 0, (0)), 100000000, 0, -213)], (0)), 100000000, 0, -212)), 0, 0, 0, 0, (("astlib/ast_403.ml", 603, 20433, 20435), ("astlib/ast_403.ml", 603, 20433, 20486), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 76)), 2, 0); Tag1 (("class_expr", 1024), (0, 0, [[(("pcl_desc", 852), 0, (Tag3 ((("class_expr_desc", 1025)), 0, (0)), 100000000, 0, -209), (("astlib/ast_403.ml", 609, 20604, 20611), ("astlib/ast_403.ml", 609, 20604, 20637), 0), 0, Tag1 ("Astlib__Ast_403", 249)); (("pcl_loc", 853), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -210), (("astlib/ast_403.ml", 610, 20638, 20645), ("astlib/ast_403.ml", 610, 20638, 20665), 0), 0, Tag1 ("Astlib__Ast_403", 250)); (("pcl_attributes", 854), 0, (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -211), (("astlib/ast_403.ml", 611, 20666, 20673), ("astlib/ast_403.ml", 611, 20666, 20700), 0), 0, Tag1 ("Astlib__Ast_403", 251))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 607, 20538, 20540), ("astlib/ast_403.ml", 612, 20725, 20732), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 77)), 2, 0); Tag1 (("class_expr_desc", 1025), (0, 0, Tag1 ([(("Pcl_constr", 855), ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -188)], (0)), 100000000, 0, -187); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -190)], (0)), 100000000, 0, -189)]), 0, (("astlib/ast_403.ml", 615, 20802, 20806), ("astlib/ast_403.ml", 615, 20802, 20854), 0), 0, Tag1 ("Astlib__Ast_403", 252)); (("Pcl_structure", 856), ([(Tag3 ((("class_structure", 1026)), 0, (0)), 100000000, 0, -191)]), 0, (("astlib/ast_403.ml", 618, 20904, 20908), ("astlib/ast_403.ml", 618, 20904, 20942), 0), 0, Tag1 ("Astlib__Ast_403", 253)); (("Pcl_fun", 857), ([(Tag3 (Tag1 ((("Asttypes", 978)), "arg_label"), 0, (0)), 100000000, 0, -192); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -194)], (0)), 100000000, 0, -193); (Tag3 ((("pattern", 1002)), 0, (0)), 100000000, 0, -195); (Tag3 ((("class_expr", 1024)), 0, (0)), 100000000, 0, -196)]), 0, (("astlib/ast_403.ml", 620, 20974, 20978), ("astlib/ast_403.ml", 620, 20974, 21043), 0), 0, Tag1 ("Astlib__Ast_403", 254)); (("Pcl_apply", 858), ([(Tag3 ((("class_expr", 1024)), 0, (0)), 100000000, 0, -197); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 978)), "arg_label"), 0, (0)), 100000000, 0, -200); (Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -201)]), 100000000, 0, -199)], (0)), 100000000, 0, -198)]), 0, (("astlib/ast_403.ml", 626, 21333, 21337), ("astlib/ast_403.ml", 626, 21333, 21394), 0), 0, Tag1 ("Astlib__Ast_403", 255)); (("Pcl_let", 859), ([(Tag3 (Tag1 ((("Asttypes", 978)), "rec_flag"), 0, (0)), 100000000, 0, -202); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 1048)), 0, (0)), 100000000, 0, -204)], (0)), 100000000, 0, -203); (Tag3 ((("class_expr", 1024)), 0, (0)), 100000000, 0, -205)]), 0, (("astlib/ast_403.ml", 633, 21578, 21582), ("astlib/ast_403.ml", 633, 21578, 21637), 0), 0, Tag1 ("Astlib__Ast_403", 256)); (("Pcl_constraint", 860), ([(Tag3 ((("class_expr", 1024)), 0, (0)), 100000000, 0, -206); (Tag3 ((("class_type", 1016)), 0, (0)), 100000000, 0, -207)]), 0, (("astlib/ast_403.ml", 637, 21805, 21809), ("astlib/ast_403.ml", 637, 21805, 21852), 0), 0, Tag1 ("Astlib__Ast_403", 257)); (("Pcl_extension", 861), ([(Tag3 ((("extension", 995)), 0, (0)), 100000000, 0, -208)]), 0, (("astlib/ast_403.ml", 639, 21879, 21883), ("astlib/ast_403.ml", 639, 21879, 21911), 0), 0, Tag1 ("Astlib__Ast_403", 258))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 614, 20734, 20736), ("astlib/ast_403.ml", 639, 21879, 21911), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 78)), 2, 0); Tag1 (("class_structure", 1026), (0, 0, [[(("pcstr_self", 862), 0, (Tag3 ((("pattern", 1002)), 0, (0)), 100000000, 0, -184), (("astlib/ast_403.ml", 644, 22011, 22018), ("astlib/ast_403.ml", 644, 22011, 22038), 0), 0, Tag1 ("Astlib__Ast_403", 259)); (("pcstr_fields", 863), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_field", 1027)), 0, (0)), 100000000, 0, -186)], (0)), 100000000, 0, -185), (("astlib/ast_403.ml", 645, 22039, 22046), ("astlib/ast_403.ml", 645, 22039, 22077), 0), 0, Tag1 ("Astlib__Ast_403", 260))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 642, 21935, 21937), ("astlib/ast_403.ml", 646, 22078, 22085), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 79)), 2, 0); Tag1 (("class_field", 1027), (0, 0, [[(("pcf_desc", 864), 0, (Tag3 ((("class_field_desc", 1028)), 0, (0)), 100000000, 0, -181), (("astlib/ast_403.ml", 653, 22238, 22245), ("astlib/ast_403.ml", 653, 22238, 22272), 0), 0, Tag1 ("Astlib__Ast_403", 261)); (("pcf_loc", 865), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -182), (("astlib/ast_403.ml", 654, 22273, 22280), ("astlib/ast_403.ml", 654, 22273, 22300), 0), 0, Tag1 ("Astlib__Ast_403", 262)); (("pcf_attributes", 866), 0, (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -183), (("astlib/ast_403.ml", 655, 22301, 22308), ("astlib/ast_403.ml", 655, 22301, 22335), 0), 0, Tag1 ("Astlib__Ast_403", 263))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 651, 22170, 22172), ("astlib/ast_403.ml", 656, 22362, 22369), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 80)), 2, 0); Tag1 (("class_field_desc", 1028), (0, 0, Tag1 ([(("Pcf_inherit", 867), ([(Tag3 (Tag1 ((("Asttypes", 978)), "override_flag"), 0, (0)), 100000000, 0, -161); (Tag3 ((("class_expr", 1024)), 0, (0)), 100000000, 0, -162); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -164)], (0)), 100000000, 0, -163)]), 0, (("astlib/ast_403.ml", 659, 22441, 22445), ("astlib/ast_403.ml", 659, 22441, 22504), 0), 0, Tag1 ("Astlib__Ast_403", 264)); (("Pcf_val", 868), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -167)], (0)), 100000000, 0, -166); (Tag3 (Tag1 ((("Asttypes", 978)), "mutable_flag"), 0, (0)), 100000000, 0, -168); (Tag3 ((("class_field_kind", 1029)), 0, (0)), 100000000, 0, -169)]), 100000000, 0, -165)]), 0, (("astlib/ast_403.ml", 665, 22627, 22631), ("astlib/ast_403.ml", 665, 22627, 22690), 0), 0, Tag1 ("Astlib__Ast_403", 265)); (("Pcf_method", 869), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -172)], (0)), 100000000, 0, -171); (Tag3 (Tag1 ((("Asttypes", 978)), "private_flag"), 0, (0)), 100000000, 0, -173); (Tag3 ((("class_field_kind", 1029)), 0, (0)), 100000000, 0, -174)]), 100000000, 0, -170)]), 0, (("astlib/ast_403.ml", 669, 22758, 22762), ("astlib/ast_403.ml", 669, 22758, 22824), 0), 0, Tag1 ("Astlib__Ast_403", 266)); (("Pcf_constraint", 870), ([(Tag2 ([(Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -176); (Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -177)]), 100000000, 0, -175)]), 0, (("astlib/ast_403.ml", 673, 22959, 22963), ("astlib/ast_403.ml", 673, 22959, 23006), 0), 0, Tag1 ("Astlib__Ast_403", 267)); (("Pcf_initializer", 871), ([(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -178)]), 0, (("astlib/ast_403.ml", 675, 23042, 23046), ("astlib/ast_403.ml", 675, 23042, 23077), 0), 0, Tag1 ("Astlib__Ast_403", 268)); (("Pcf_attribute", 872), ([(Tag3 ((("attribute", 994)), 0, (0)), 100000000, 0, -179)]), 0, (("astlib/ast_403.ml", 677, 23108, 23112), ("astlib/ast_403.ml", 677, 23108, 23140), 0), 0, Tag1 ("Astlib__Ast_403", 269)); (("Pcf_extension", 873), ([(Tag3 ((("extension", 995)), 0, (0)), 100000000, 0, -180)]), 0, (("astlib/ast_403.ml", 679, 23165, 23169), ("astlib/ast_403.ml", 679, 23165, 23197), 0), 0, Tag1 ("Astlib__Ast_403", 270))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 658, 22371, 22373), ("astlib/ast_403.ml", 679, 23165, 23197), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 81)), 2, 0); Tag1 (("class_field_kind", 1029), (0, 0, Tag1 ([(("Cfk_virtual", 874), ([(Tag3 ((("core_type", 998)), 0, (0)), 100000000, 0, -158)]), 0, (("astlib/ast_403.ml", 683, 23292, 23296), ("astlib/ast_403.ml", 683, 23292, 23322), 0), 0, Tag1 ("Astlib__Ast_403", 271)); (("Cfk_concrete", 875), ([(Tag3 (Tag1 ((("Asttypes", 978)), "override_flag"), 0, (0)), 100000000, 0, -159); (Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -160)]), 0, (("astlib/ast_403.ml", 684, 23323, 23327), ("astlib/ast_403.ml", 684, 23323, 23371), 0), 0, Tag1 ("Astlib__Ast_403", 272))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 682, 23222, 23224), ("astlib/ast_403.ml", 684, 23323, 23371), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 82)), 2, 0); Tag1 (("class_declaration", 1030), (0, 0, 0, 1, ((Tag3 ((("class_infos", 1021)), [(Tag3 ((("class_expr", 1024)), 0, (0)), 100000000, 0, -157)], (0)), 100000000, 0, -156)), 0, 0, 0, 0, (("astlib/ast_403.ml", 686, 23373, 23375), ("astlib/ast_403.ml", 686, 23373, 23421), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 83)), 2, 0); Tag1 (("module_type", 1031), (0, 0, [[(("pmty_desc", 876), 0, (Tag3 ((("module_type_desc", 1032)), 0, (0)), 100000000, 0, -153), (("astlib/ast_403.ml", 694, 23571, 23578), ("astlib/ast_403.ml", 694, 23571, 23606), 0), 0, Tag1 ("Astlib__Ast_403", 273)); (("pmty_loc", 877), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -154), (("astlib/ast_403.ml", 695, 23607, 23614), ("astlib/ast_403.ml", 695, 23607, 23635), 0), 0, Tag1 ("Astlib__Ast_403", 274)); (("pmty_attributes", 878), 0, (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -155), (("astlib/ast_403.ml", 696, 23636, 23643), ("astlib/ast_403.ml", 696, 23636, 23671), 0), 0, Tag1 ("Astlib__Ast_403", 275))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 692, 23503, 23505), ("astlib/ast_403.ml", 697, 23696, 23703), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 84)), 2, 0); Tag1 (("module_type_desc", 1032), (0, 0, Tag1 ([(("Pmty_ident", 879), ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -139)], (0)), 100000000, 0, -138)]), 0, (("astlib/ast_403.ml", 700, 23775, 23779), ("astlib/ast_403.ml", 700, 23775, 23810), 0), 0, Tag1 ("Astlib__Ast_403", 276)); (("Pmty_signature", 880), ([(Tag3 ((("signature", 1033)), 0, (0)), 100000000, 0, -140)]), 0, (("astlib/ast_403.ml", 702, 23829, 23833), ("astlib/ast_403.ml", 702, 23829, 23862), 0), 0, Tag1 ("Astlib__Ast_403", 277)); (("Pmty_functor", 881), ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -142)], (0)), 100000000, 0, -141); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 1031)), 0, (0)), 100000000, 0, -144)], (0)), 100000000, 0, -143); (Tag3 ((("module_type", 1031)), 0, (0)), 100000000, 0, -145)]), 0, (("astlib/ast_403.ml", 704, 23891, 23895), ("astlib/ast_403.ml", 704, 23891, 23958), 0), 0, Tag1 ("Astlib__Ast_403", 278)); (("Pmty_with", 882), ([(Tag3 ((("module_type", 1031)), 0, (0)), 100000000, 0, -146); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("with_constraint", 1042)), 0, (0)), 100000000, 0, -148)], (0)), 100000000, 0, -147)]), 0, (("astlib/ast_403.ml", 706, 23999, 24003), ("astlib/ast_403.ml", 706, 23999, 24052), 0), 0, Tag1 ("Astlib__Ast_403", 279)); (("Pmty_typeof", 883), ([(Tag3 ((("module_expr", 1043)), 0, (0)), 100000000, 0, -149)]), 0, (("astlib/ast_403.ml", 708, 24081, 24085), ("astlib/ast_403.ml", 708, 24081, 24113), 0), 0, Tag1 ("Astlib__Ast_403", 280)); (("Pmty_extension", 884), ([(Tag3 ((("extension", 995)), 0, (0)), 100000000, 0, -150)]), 0, (("astlib/ast_403.ml", 710, 24148, 24152), ("astlib/ast_403.ml", 710, 24148, 24181), 0), 0, Tag1 ("Astlib__Ast_403", 281)); (("Pmty_alias", 885), ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -152)], (0)), 100000000, 0, -151)]), 0, (("astlib/ast_403.ml", 712, 24204, 24208), ("astlib/ast_403.ml", 712, 24204, 24239), 0), 0, Tag1 ("Astlib__Ast_403", 282))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 699, 23705, 23707), ("astlib/ast_403.ml", 712, 24204, 24239), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 85)), 2, 0); Tag1 (("signature", 1033), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("signature_item", 1034)), 0, (0)), 100000000, 0, -137)], (0)), 100000000, 0, -136)), 0, 0, 0, 0, (("astlib/ast_403.ml", 715, 24268, 24270), ("astlib/ast_403.ml", 715, 24268, 24305), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 86)), 2, 0); Tag1 (("signature_item", 1034), (0, 0, [[(("psig_desc", 886), 0, (Tag3 ((("signature_item_desc", 1035)), 0, (0)), 100000000, 0, -134), (("astlib/ast_403.ml", 719, 24381, 24388), ("astlib/ast_403.ml", 719, 24381, 24419), 0), 0, Tag1 ("Astlib__Ast_403", 283)); (("psig_loc", 887), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -135), (("astlib/ast_403.ml", 720, 24420, 24427), ("astlib/ast_403.ml", 720, 24420, 24448), 0), 0, Tag1 ("Astlib__Ast_403", 284))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 717, 24307, 24309), ("astlib/ast_403.ml", 721, 24449, 24456), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 87)), 2, 0); Tag1 (("signature_item_desc", 1035), (0, 0, Tag1 ([(("Psig_value", 888), ([(Tag3 ((("value_description", 1007)), 0, (0)), 100000000, 0, -115)]), 0, (("astlib/ast_403.ml", 724, 24534, 24538), ("astlib/ast_403.ml", 724, 24534, 24571), 0), 0, Tag1 ("Astlib__Ast_403", 285)); (("Psig_type", 889), ([(Tag3 (Tag1 ((("Asttypes", 978)), "rec_flag"), 0, (0)), 100000000, 0, -116); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 1008)), 0, (0)), 100000000, 0, -118)], (0)), 100000000, 0, -117)]), 0, (("astlib/ast_403.ml", 729, 24662, 24666), ("astlib/ast_403.ml", 729, 24662, 24713), 0), 0, Tag1 ("Astlib__Ast_403", 286)); (("Psig_typext", 890), ([(Tag3 ((("type_extension", 1013)), 0, (0)), 100000000, 0, -119)]), 0, (("astlib/ast_403.ml", 731, 24765, 24769), ("astlib/ast_403.ml", 731, 24765, 24800), 0), 0, Tag1 ("Astlib__Ast_403", 287)); (("Psig_exception", 891), ([(Tag3 ((("extension_constructor", 1014)), 0, (0)), 100000000, 0, -120)]), 0, (("astlib/ast_403.ml", 733, 24832, 24836), ("astlib/ast_403.ml", 733, 24832, 24877), 0), 0, Tag1 ("Astlib__Ast_403", 288)); (("Psig_module", 892), ([(Tag3 ((("module_declaration", 1036)), 0, (0)), 100000000, 0, -121)]), 0, (("astlib/ast_403.ml", 735, 24911, 24915), ("astlib/ast_403.ml", 735, 24911, 24950), 0), 0, Tag1 ("Astlib__Ast_403", 289)); (("Psig_recmodule", 893), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_declaration", 1036)), 0, (0)), 100000000, 0, -123)], (0)), 100000000, 0, -122)]), 0, (("astlib/ast_403.ml", 737, 24981, 24985), ("astlib/ast_403.ml", 737, 24981, 25028), 0), 0, Tag1 ("Astlib__Ast_403", 290)); (("Psig_modtype", 894), ([(Tag3 ((("module_type_declaration", 1037)), 0, (0)), 100000000, 0, -124)]), 0, (("astlib/ast_403.ml", 739, 25086, 25090), ("astlib/ast_403.ml", 739, 25086, 25131), 0), 0, Tag1 ("Astlib__Ast_403", 291)); (("Psig_open", 895), ([(Tag3 ((("open_description", 1038)), 0, (0)), 100000000, 0, -125)]), 0, (("astlib/ast_403.ml", 742, 25194, 25198), ("astlib/ast_403.ml", 742, 25194, 25229), 0), 0, Tag1 ("Astlib__Ast_403", 292)); (("Psig_include", 896), ([(Tag3 ((("include_description", 1040)), 0, (0)), 100000000, 0, -126)]), 0, (("astlib/ast_403.ml", 744, 25253, 25257), ("astlib/ast_403.ml", 744, 25253, 25294), 0), 0, Tag1 ("Astlib__Ast_403", 293)); (("Psig_class", 897), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_description", 1022)), 0, (0)), 100000000, 0, -128)], (0)), 100000000, 0, -127)]), 0, (("astlib/ast_403.ml", 746, 25322, 25326), ("astlib/ast_403.ml", 746, 25322, 25364), 0), 0, Tag1 ("Astlib__Ast_403", 294)); (("Psig_class_type", 898), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 1023)), 0, (0)), 100000000, 0, -130)], (0)), 100000000, 0, -129)]), 0, (("astlib/ast_403.ml", 748, 25417, 25421), ("astlib/ast_403.ml", 748, 25417, 25469), 0), 0, Tag1 ("Astlib__Ast_403", 295)); (("Psig_attribute", 899), ([(Tag3 ((("attribute", 994)), 0, (0)), 100000000, 0, -131)]), 0, (("astlib/ast_403.ml", 750, 25529, 25533), ("astlib/ast_403.ml", 750, 25529, 25562), 0), 0, Tag1 ("Astlib__Ast_403", 296)); (("Psig_extension", 900), ([(Tag3 ((("extension", 995)), 0, (0)), 100000000, 0, -132); (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -133)]), 0, (("astlib/ast_403.ml", 752, 25587, 25591), ("astlib/ast_403.ml", 752, 25587, 25633), 0), 0, Tag1 ("Astlib__Ast_403", 297))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 723, 24458, 24460), ("astlib/ast_403.ml", 752, 25587, 25633), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 88)), 2, 0); Tag1 (("module_declaration", 1036), (0, 0, [[(("pmd_name", 901), 0, (Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -111)], (0)), 100000000, 0, -110), (("astlib/ast_403.ml", 757, 25740, 25747), ("astlib/ast_403.ml", 757, 25740, 25768), 0), 0, Tag1 ("Astlib__Ast_403", 298)); (("pmd_type", 902), 0, (Tag3 ((("module_type", 1031)), 0, (0)), 100000000, 0, -112), (("astlib/ast_403.ml", 758, 25769, 25776), ("astlib/ast_403.ml", 758, 25769, 25798), 0), 0, Tag1 ("Astlib__Ast_403", 299)); (("pmd_attributes", 903), 0, (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -113), (("astlib/ast_403.ml", 759, 25799, 25806), ("astlib/ast_403.ml", 759, 25799, 25833), 0), 0, Tag1 ("Astlib__Ast_403", 300)); (("pmd_loc", 904), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -114), (("astlib/ast_403.ml", 760, 25860, 25867), ("astlib/ast_403.ml", 760, 25860, 25887), 0), 0, Tag1 ("Astlib__Ast_403", 301))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 755, 25658, 25660), ("astlib/ast_403.ml", 761, 25888, 25895), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 89)), 2, 0); Tag1 (("module_type_declaration", 1037), (0, 0, [[(("pmtd_name", 905), 0, (Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -105)], (0)), 100000000, 0, -104), (("astlib/ast_403.ml", 766, 26004, 26011), ("astlib/ast_403.ml", 766, 26004, 26033), 0), 0, Tag1 ("Astlib__Ast_403", 302)); (("pmtd_type", 906), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 1031)), 0, (0)), 100000000, 0, -107)], (0)), 100000000, 0, -106), (("astlib/ast_403.ml", 767, 26034, 26041), ("astlib/ast_403.ml", 767, 26034, 26071), 0), 0, Tag1 ("Astlib__Ast_403", 303)); (("pmtd_attributes", 907), 0, (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -108), (("astlib/ast_403.ml", 768, 26072, 26079), ("astlib/ast_403.ml", 768, 26072, 26107), 0), 0, Tag1 ("Astlib__Ast_403", 304)); (("pmtd_loc", 908), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -109), (("astlib/ast_403.ml", 769, 26134, 26141), ("astlib/ast_403.ml", 769, 26134, 26162), 0), 0, Tag1 ("Astlib__Ast_403", 305))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 764, 25912, 25914), ("astlib/ast_403.ml", 770, 26163, 26170), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 90)), 2, 0); Tag1 (("open_description", 1038), (0, 0, [[(("popen_lid", 909), 0, (Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -100)], (0)), 100000000, 0, -99), (("astlib/ast_403.ml", 777, 26333, 26340), ("astlib/ast_403.ml", 777, 26333, 26367), 0), 0, Tag1 ("Astlib__Ast_403", 306)); (("popen_override", 910), 0, (Tag3 (Tag1 ((("Asttypes", 978)), "override_flag"), 0, (0)), 100000000, 0, -101), (("astlib/ast_403.ml", 778, 26368, 26375), ("astlib/ast_403.ml", 778, 26368, 26405), 0), 0, Tag1 ("Astlib__Ast_403", 307)); (("popen_loc", 911), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -102), (("astlib/ast_403.ml", 779, 26406, 26413), ("astlib/ast_403.ml", 779, 26406, 26435), 0), 0, Tag1 ("Astlib__Ast_403", 308)); (("popen_attributes", 912), 0, (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -103), (("astlib/ast_403.ml", 780, 26436, 26443), ("astlib/ast_403.ml", 780, 26436, 26472), 0), 0, Tag1 ("Astlib__Ast_403", 309))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 775, 26255, 26257), ("astlib/ast_403.ml", 781, 26473, 26480), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 91)), 2, 0); Tag1 (("include_infos", 1039), ([((("a")), 100000000, 0, -96)], 1, [[(("pincl_mod", 913), 0, ((("a")), 100000000, 0, -96), (("astlib/ast_403.ml", 789, 26728, 26735), ("astlib/ast_403.ml", 789, 26728, 26749), 0), 0, Tag1 ("Astlib__Ast_403", 310)); (("pincl_loc", 914), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -97), (("astlib/ast_403.ml", 790, 26750, 26757), ("astlib/ast_403.ml", 790, 26750, 26779), 0), 0, Tag1 ("Astlib__Ast_403", 311)); (("pincl_attributes", 915), 0, (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -98), (("astlib/ast_403.ml", 791, 26780, 26787), ("astlib/ast_403.ml", 791, 26780, 26816), 0), 0, Tag1 ("Astlib__Ast_403", 312))]], 1, 0, [25], [0], 0, 0, (("astlib/ast_403.ml", 787, 26650, 26652), ("astlib/ast_403.ml", 792, 26817, 26824), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 92)), 2, 0); Tag1 (("include_description", 1040), (0, 0, 0, 1, ((Tag3 ((("include_infos", 1039)), [(Tag3 ((("module_type", 1031)), 0, (0)), 100000000, 0, -95)], (0)), 100000000, 0, -94)), 0, 0, 0, 0, (("astlib/ast_403.ml", 794, 26826, 26828), ("astlib/ast_403.ml", 794, 26826, 26879), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 93)), 2, 0); Tag1 (("include_declaration", 1041), (0, 0, 0, 1, ((Tag3 ((("include_infos", 1039)), [(Tag3 ((("module_expr", 1043)), 0, (0)), 100000000, 0, -93)], (0)), 100000000, 0, -92)), 0, 0, 0, 0, (("astlib/ast_403.ml", 797, 26900, 26902), ("astlib/ast_403.ml", 797, 26900, 26953), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 94)), 2, 0); Tag1 (("with_constraint", 1042), (0, 0, Tag1 ([(("Pwith_type", 916), ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -81)], (0)), 100000000, 0, -80); (Tag3 ((("type_declaration", 1008)), 0, (0)), 100000000, 0, -82)]), 0, (("astlib/ast_403.ml", 801, 27042, 27046), ("astlib/ast_403.ml", 801, 27042, 27096), 0), 0, Tag1 ("Astlib__Ast_403", 313)); (("Pwith_module", 917), ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -84)], (0)), 100000000, 0, -83); (Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -86)], (0)), 100000000, 0, -85)]), 0, (("astlib/ast_403.ml", 806, 27247, 27251), ("astlib/ast_403.ml", 806, 27247, 27302), 0), 0, Tag1 ("Astlib__Ast_403", 314)); (("Pwith_typesubst", 918), ([(Tag3 ((("type_declaration", 1008)), 0, (0)), 100000000, 0, -87)]), 0, (("astlib/ast_403.ml", 808, 27339, 27343), ("astlib/ast_403.ml", 808, 27339, 27380), 0), 0, Tag1 ("Astlib__Ast_403", 315)); (("Pwith_modsubst", 919), ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -89)], (0)), 100000000, 0, -88); (Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -91)], (0)), 100000000, 0, -90)]), 0, (("astlib/ast_403.ml", 810, 27416, 27420), ("astlib/ast_403.ml", 810, 27416, 27468), 0), 0, Tag1 ("Astlib__Ast_403", 316))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 800, 26974, 26976), ("astlib/ast_403.ml", 810, 27416, 27468), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 95)), 2, 0); Tag1 (("module_expr", 1043), (0, 0, [[(("pmod_desc", 920), 0, (Tag3 ((("module_expr_desc", 1044)), 0, (0)), 100000000, 0, -77), (("astlib/ast_403.ml", 817, 27624, 27631), ("astlib/ast_403.ml", 817, 27624, 27659), 0), 0, Tag1 ("Astlib__Ast_403", 317)); (("pmod_loc", 921), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -78), (("astlib/ast_403.ml", 818, 27660, 27667), ("astlib/ast_403.ml", 818, 27660, 27688), 0), 0, Tag1 ("Astlib__Ast_403", 318)); (("pmod_attributes", 922), 0, (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -79), (("astlib/ast_403.ml", 819, 27689, 27696), ("astlib/ast_403.ml", 819, 27689, 27724), 0), 0, Tag1 ("Astlib__Ast_403", 319))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 815, 27556, 27558), ("astlib/ast_403.ml", 820, 27749, 27756), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 96)), 2, 0); Tag1 (("module_expr_desc", 1044), (0, 0, Tag1 ([(("Pmod_ident", 923), ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -64)], (0)), 100000000, 0, -63)]), 0, (("astlib/ast_403.ml", 823, 27828, 27832), ("astlib/ast_403.ml", 823, 27828, 27863), 0), 0, Tag1 ("Astlib__Ast_403", 320)); (("Pmod_structure", 924), ([(Tag3 ((("structure", 1045)), 0, (0)), 100000000, 0, -65)]), 0, (("astlib/ast_403.ml", 825, 27882, 27886), ("astlib/ast_403.ml", 825, 27882, 27915), 0), 0, Tag1 ("Astlib__Ast_403", 321)); (("Pmod_functor", 925), ([(Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -67)], (0)), 100000000, 0, -66); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 1031)), 0, (0)), 100000000, 0, -69)], (0)), 100000000, 0, -68); (Tag3 ((("module_expr", 1043)), 0, (0)), 100000000, 0, -70)]), 0, (("astlib/ast_403.ml", 827, 27947, 27951), ("astlib/ast_403.ml", 827, 27947, 28014), 0), 0, Tag1 ("Astlib__Ast_403", 322)); (("Pmod_apply", 926), ([(Tag3 ((("module_expr", 1043)), 0, (0)), 100000000, 0, -71); (Tag3 ((("module_expr", 1043)), 0, (0)), 100000000, 0, -72)]), 0, (("astlib/ast_403.ml", 829, 28054, 28058), ("astlib/ast_403.ml", 829, 28054, 28099), 0), 0, Tag1 ("Astlib__Ast_403", 323)); (("Pmod_constraint", 927), ([(Tag3 ((("module_expr", 1043)), 0, (0)), 100000000, 0, -73); (Tag3 ((("module_type", 1031)), 0, (0)), 100000000, 0, -74)]), 0, (("astlib/ast_403.ml", 831, 28125, 28129), ("astlib/ast_403.ml", 831, 28125, 28175), 0), 0, Tag1 ("Astlib__Ast_403", 324)); (("Pmod_unpack", 928), ([(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -75)]), 0, (("astlib/ast_403.ml", 833, 28202, 28206), ("astlib/ast_403.ml", 833, 28202, 28233), 0), 0, Tag1 ("Astlib__Ast_403", 325)); (("Pmod_extension", 929), ([(Tag3 ((("extension", 995)), 0, (0)), 100000000, 0, -76)]), 0, (("astlib/ast_403.ml", 835, 28258, 28262), ("astlib/ast_403.ml", 835, 28258, 28291), 0), 0, Tag1 ("Astlib__Ast_403", 326))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 822, 27758, 27760), ("astlib/ast_403.ml", 835, 28258, 28291), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 97)), 2, 0); Tag1 (("structure", 1045), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("structure_item", 1046)), 0, (0)), 100000000, 0, -62)], (0)), 100000000, 0, -61)), 0, 0, 0, 0, (("astlib/ast_403.ml", 838, 28315, 28317), ("astlib/ast_403.ml", 838, 28315, 28352), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 98)), 2, 0); Tag1 (("structure_item", 1046), (0, 0, [[(("pstr_desc", 930), 0, (Tag3 ((("structure_item_desc", 1047)), 0, (0)), 100000000, 0, -59), (("astlib/ast_403.ml", 842, 28428, 28435), ("astlib/ast_403.ml", 842, 28428, 28466), 0), 0, Tag1 ("Astlib__Ast_403", 327)); (("pstr_loc", 931), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -60), (("astlib/ast_403.ml", 843, 28467, 28474), ("astlib/ast_403.ml", 843, 28467, 28495), 0), 0, Tag1 ("Astlib__Ast_403", 328))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 840, 28354, 28356), ("astlib/ast_403.ml", 844, 28496, 28503), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 99)), 2, 0); Tag1 (("structure_item_desc", 1047), (0, 0, Tag1 ([(("Pstr_eval", 932), ([(Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -35); (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -36)]), 0, (("astlib/ast_403.ml", 847, 28581, 28585), ("astlib/ast_403.ml", 847, 28581, 28623), 0), 0, Tag1 ("Astlib__Ast_403", 329)); (("Pstr_value", 933), ([(Tag3 (Tag1 ((("Asttypes", 978)), "rec_flag"), 0, (0)), 100000000, 0, -37); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 1048)), 0, (0)), 100000000, 0, -39)], (0)), 100000000, 0, -38)]), 0, (("astlib/ast_403.ml", 849, 28642, 28646), ("astlib/ast_403.ml", 849, 28642, 28691), 0), 0, Tag1 ("Astlib__Ast_403", 330)); (("Pstr_primitive", 934), ([(Tag3 ((("value_description", 1007)), 0, (0)), 100000000, 0, -40)]), 0, (("astlib/ast_403.ml", 853, 28849, 28853), ("astlib/ast_403.ml", 853, 28849, 28890), 0), 0, Tag1 ("Astlib__Ast_403", 331)); (("Pstr_type", 935), ([(Tag3 (Tag1 ((("Asttypes", 978)), "rec_flag"), 0, (0)), 100000000, 0, -41); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 1008)), 0, (0)), 100000000, 0, -43)], (0)), 100000000, 0, -42)]), 0, (("astlib/ast_403.ml", 856, 28961, 28965), ("astlib/ast_403.ml", 856, 28961, 29012), 0), 0, Tag1 ("Astlib__Ast_403", 332)); (("Pstr_typext", 936), ([(Tag3 ((("type_extension", 1013)), 0, (0)), 100000000, 0, -44)]), 0, (("astlib/ast_403.ml", 858, 29064, 29068), ("astlib/ast_403.ml", 858, 29064, 29099), 0), 0, Tag1 ("Astlib__Ast_403", 333)); (("Pstr_exception", 937), ([(Tag3 ((("extension_constructor", 1014)), 0, (0)), 100000000, 0, -45)]), 0, (("astlib/ast_403.ml", 860, 29131, 29135), ("astlib/ast_403.ml", 860, 29131, 29176), 0), 0, Tag1 ("Astlib__Ast_403", 334)); (("Pstr_module", 938), ([(Tag3 ((("module_binding", 1049)), 0, (0)), 100000000, 0, -46)]), 0, (("astlib/ast_403.ml", 863, 29241, 29245), ("astlib/ast_403.ml", 863, 29241, 29276), 0), 0, Tag1 ("Astlib__Ast_403", 335)); (("Pstr_recmodule", 939), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_binding", 1049)), 0, (0)), 100000000, 0, -48)], (0)), 100000000, 0, -47)]), 0, (("astlib/ast_403.ml", 865, 29307, 29311), ("astlib/ast_403.ml", 865, 29307, 29350), 0), 0, Tag1 ("Astlib__Ast_403", 336)); (("Pstr_modtype", 940), ([(Tag3 ((("module_type_declaration", 1037)), 0, (0)), 100000000, 0, -49)]), 0, (("astlib/ast_403.ml", 867, 29408, 29412), ("astlib/ast_403.ml", 867, 29408, 29453), 0), 0, Tag1 ("Astlib__Ast_403", 337)); (("Pstr_open", 941), ([(Tag3 ((("open_description", 1038)), 0, (0)), 100000000, 0, -50)]), 0, (("astlib/ast_403.ml", 869, 29489, 29493), ("astlib/ast_403.ml", 869, 29489, 29524), 0), 0, Tag1 ("Astlib__Ast_403", 338)); (("Pstr_class", 942), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_declaration", 1030)), 0, (0)), 100000000, 0, -52)], (0)), 100000000, 0, -51)]), 0, (("astlib/ast_403.ml", 871, 29548, 29552), ("astlib/ast_403.ml", 871, 29548, 29590), 0), 0, Tag1 ("Astlib__Ast_403", 339)); (("Pstr_class_type", 943), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 1023)), 0, (0)), 100000000, 0, -54)], (0)), 100000000, 0, -53)]), 0, (("astlib/ast_403.ml", 873, 29643, 29647), ("astlib/ast_403.ml", 873, 29643, 29695), 0), 0, Tag1 ("Astlib__Ast_403", 340)); (("Pstr_include", 944), ([(Tag3 ((("include_declaration", 1041)), 0, (0)), 100000000, 0, -55)]), 0, (("astlib/ast_403.ml", 875, 29755, 29759), ("astlib/ast_403.ml", 875, 29755, 29796), 0), 0, Tag1 ("Astlib__Ast_403", 341)); (("Pstr_attribute", 945), ([(Tag3 ((("attribute", 994)), 0, (0)), 100000000, 0, -56)]), 0, (("astlib/ast_403.ml", 877, 29824, 29828), ("astlib/ast_403.ml", 877, 29824, 29857), 0), 0, Tag1 ("Astlib__Ast_403", 342)); (("Pstr_extension", 946), ([(Tag3 ((("extension", 995)), 0, (0)), 100000000, 0, -57); (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -58)]), 0, (("astlib/ast_403.ml", 879, 29882, 29886), ("astlib/ast_403.ml", 879, 29882, 29928), 0), 0, Tag1 ("Astlib__Ast_403", 343))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 846, 28505, 28507), ("astlib/ast_403.ml", 879, 29882, 29928), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 100)), 2, 0); Tag1 (("value_binding", 1048), (0, 0, [[(("pvb_pat", 947), 0, (Tag3 ((("pattern", 1002)), 0, (0)), 100000000, 0, -31), (("astlib/ast_403.ml", 884, 30023, 30029), ("astlib/ast_403.ml", 884, 30023, 30046), 0), 0, Tag1 ("Astlib__Ast_403", 344)); (("pvb_expr", 948), 0, (Tag3 ((("expression", 1004)), 0, (0)), 100000000, 0, -32), (("astlib/ast_403.ml", 885, 30047, 30053), ("astlib/ast_403.ml", 885, 30047, 30074), 0), 0, Tag1 ("Astlib__Ast_403", 345)); (("pvb_attributes", 949), 0, (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -33), (("astlib/ast_403.ml", 886, 30075, 30081), ("astlib/ast_403.ml", 886, 30075, 30108), 0), 0, Tag1 ("Astlib__Ast_403", 346)); (("pvb_loc", 950), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -34), (("astlib/ast_403.ml", 887, 30109, 30115), ("astlib/ast_403.ml", 887, 30109, 30135), 0), 0, Tag1 ("Astlib__Ast_403", 347))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 882, 29953, 29955), ("astlib/ast_403.ml", 888, 30136, 30141), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 101)), 2, 0); Tag1 (("module_binding", 1049), (0, 0, [[(("pmb_name", 951), 0, (Tag3 (Tag1 ((("Asttypes", 978)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -27)], (0)), 100000000, 0, -26), (("astlib/ast_403.ml", 892, 30217, 30224), ("astlib/ast_403.ml", 892, 30217, 30245), 0), 0, Tag1 ("Astlib__Ast_403", 348)); (("pmb_expr", 952), 0, (Tag3 ((("module_expr", 1043)), 0, (0)), 100000000, 0, -28), (("astlib/ast_403.ml", 893, 30246, 30253), ("astlib/ast_403.ml", 893, 30246, 30275), 0), 0, Tag1 ("Astlib__Ast_403", 349)); (("pmb_attributes", 953), 0, (Tag3 ((("attributes", 996)), 0, (0)), 100000000, 0, -29), (("astlib/ast_403.ml", 894, 30276, 30283), ("astlib/ast_403.ml", 894, 30276, 30310), 0), 0, Tag1 ("Astlib__Ast_403", 350)); (("pmb_loc", 954), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -30), (("astlib/ast_403.ml", 895, 30311, 30318), ("astlib/ast_403.ml", 895, 30311, 30338), 0), 0, Tag1 ("Astlib__Ast_403", 351))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 890, 30143, 30145), ("astlib/ast_403.ml", 896, 30339, 30346), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 102)), 2, 0); Tag1 (("toplevel_phrase", 1050), (0, 0, Tag1 ([(("Ptop_def", 967), ([(Tag3 ((("structure", 1045)), 0, (0)), 100000000, 0, -23)]), 0, (("astlib/ast_403.ml", 904, 30481, 30485), ("astlib/ast_403.ml", 904, 30481, 30508), 0), 0, Tag1 ("Astlib__Ast_403", 354)); (("Ptop_dir", 968), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -24); (Tag3 ((("directive_argument", 1051)), 0, (0)), 100000000, 0, -25)]), 0, (("astlib/ast_403.ml", 905, 30509, 30513), ("astlib/ast_403.ml", 905, 30509, 30554), 0), 0, Tag1 ("Astlib__Ast_403", 355))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 903, 30412, 30414), ("astlib/ast_403.ml", 905, 30509, 30554), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 352)), 1, 0); Tag1 (("directive_argument", 1051), (0, 0, Tag1 ([(("Pdir_none", 969), (0), 0, (("astlib/ast_403.ml", 909, 30659, 30663), ("astlib/ast_403.ml", 909, 30659, 30674), 0), 0, Tag1 ("Astlib__Ast_403", 356)); (("Pdir_string", 970), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -17)]), 0, (("astlib/ast_403.ml", 910, 30675, 30679), ("astlib/ast_403.ml", 910, 30675, 30702), 0), 0, Tag1 ("Astlib__Ast_403", 357)); (("Pdir_int", 971), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -18); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -20)], (0)), 100000000, 0, -19)]), 0, (("astlib/ast_403.ml", 911, 30703, 30707), ("astlib/ast_403.ml", 911, 30703, 30741), 0), 0, Tag1 ("Astlib__Ast_403", 358)); (("Pdir_ident", 972), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -21)]), 0, (("astlib/ast_403.ml", 912, 30742, 30746), ("astlib/ast_403.ml", 912, 30742, 30773), 0), 0, Tag1 ("Astlib__Ast_403", 359)); (("Pdir_bool", 973), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -22)]), 0, (("astlib/ast_403.ml", 913, 30774, 30778), ("astlib/ast_403.ml", 913, 30774, 30797), 0), 0, Tag1 ("Astlib__Ast_403", 360))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_403.ml", 908, 30585, 30587), ("astlib/ast_403.ml", 913, 30774, 30797), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 353)), 2, 0)]), 0, (("astlib/ast_403.ml", 66, 2764, 2764), ("astlib/ast_403.ml", 914, 30798, 30801), 0), Tag1 ("Astlib__Ast_403", 361)), 0, 0); Tag3 (("Config", 980), 0, (Tag1 ([(("ast_impl_magic_number", 1052), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -547), 0, (("astlib/ast_403.ml", 917, 30826, 30832), ("astlib/ast_403.ml", 917, 30826, 30853), 0), 0, Tag1 ("Astlib__Ast_403", 362)), 0); (("ast_intf_magic_number", 1053), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -546), 0, (("astlib/ast_403.ml", 918, 30871, 30877), ("astlib/ast_403.ml", 918, 30871, 30898), 0), 0, Tag1 ("Astlib__Ast_403", 363)), 0)]), 0, (("astlib/ast_403.ml", 916, 30803, 30803), ("astlib/ast_403.ml", 919, 30916, 30919), 0), Tag1 ("Astlib__Ast_403", 364)), 0, 0)], "Astlib__Ast_403", [("Astlib__Ast_403", ("\206M\242\247\155X\251\127\002Ly\024\154\245\153\180")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Ocaml_common", ("1\212\195\020\163\232\187\142G\192\221\180@\1278u")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Astlib__Longident", ("\n\192\233\142\177n\225\191\238\161#\150\204n\"Y")); ("Astlib__Location", ("nn\153\250\162\2239\215\129\229e\026xg\000U")); ("Astlib__", ("\246\155.n\143$\1435\bi\005\019C\219\191A"))], [(0)])

  end
