type t
val compare : t -> t -> int
val length : int
val to_binary : t -> string
val of_binary_exn : string -> t
val unsafe_of_binary : string -> t
val to_hex : t -> string
val of_hex_exn : string -> t
val string : string -> t
val bytes : bytes -> t("DEBUG:rule", [Tag1 (("t", 280), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("md5/src/md5_lib.mli", 1, 0, 0), ("md5/src/md5_lib.mli", 1, 0, 6), 0), 0, 0, 0, Tag1 ("Md5_lib", 0)), 1, 0); (("compare", 281), ((Tag1 (0, (Tag3 ((("t", 280)), 0, (0)), 100000000, 0, -35), (Tag1 (0, (Tag3 ((("t", 280)), 0, (0)), 100000000, 0, -34), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0, (("md5/src/md5_lib.mli", 3, 8, 8), ("md5/src/md5_lib.mli", 3, 8, 35), 0), 0, Tag1 ("Md5_lib", 1)), 0); (("length", 282), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -30), 0, (("md5/src/md5_lib.mli", 6, 94, 94), ("md5/src/md5_lib.mli", 6, 94, 110), 0), 0, Tag1 ("Md5_lib", 2)), 0); (("to_binary", 283), ((Tag1 (0, (Tag3 ((("t", 280)), 0, (0)), 100000000, 0, -29), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("md5/src/md5_lib.mli", 8, 112, 112), ("md5/src/md5_lib.mli", 8, 112, 139), 0), 0, Tag1 ("Md5_lib", 3)), 0); (("of_binary_exn", 284), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -26), (Tag3 ((("t", 280)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0, (("md5/src/md5_lib.mli", 9, 140, 140), ("md5/src/md5_lib.mli", 9, 140, 171), 0), 0, Tag1 ("Md5_lib", 4)), 0); (("unsafe_of_binary", 285), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -23), (Tag3 ((("t", 280)), 0, (0)), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("md5/src/md5_lib.mli", 12, 227, 227), ("md5/src/md5_lib.mli", 12, 227, 261), 0), 0, Tag1 ("Md5_lib", 5)), 0); (("to_hex", 286), ((Tag1 (0, (Tag3 ((("t", 280)), 0, (0)), 100000000, 0, -20), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("md5/src/md5_lib.mli", 14, 263, 263), ("md5/src/md5_lib.mli", 14, 263, 287), 0), 0, Tag1 ("Md5_lib", 6)), 0); (("of_hex_exn", 287), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -17), (Tag3 ((("t", 280)), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("md5/src/md5_lib.mli", 15, 288, 288), ("md5/src/md5_lib.mli", 15, 288, 316), 0), 0, Tag1 ("Md5_lib", 7)), 0); (("string", 288), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -14), (Tag3 ((("t", 280)), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("md5/src/md5_lib.mli", 17, 318, 318), ("md5/src/md5_lib.mli", 17, 318, 342), 0), 0, Tag1 ("Md5_lib", 8)), 0); (("bytes", 289), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -11), (Tag3 ((("t", 280)), 0, (0)), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("md5/src/md5_lib.mli", 19, 344, 344), ("md5/src/md5_lib.mli", 19, 344, 366), 0), 0, Tag1 ("Md5_lib", 9)), 0); (("subbytes", 290), ((Tag1 (0, (Tag3 ((Tag3 ("bytes", 3)), 0, (0)), 100000000, 0, -8), (Tag1 (("pos"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7), (Tag1 (("len"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -6), (Tag3 ((("t", 280)), 0, (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("md5/src/md5_lib.mli", 21, 368, 368), ("md5/src/md5_lib.mli", 21, 368, 415), 0), 0, Tag1 ("Md5_lib", 10)), 0)], "Md5_lib", [("Md5_lib", ("\027\247~\199'\195O\175\232\149\147\228\248S\0073")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val subbytes : bytes -> pos:int -> len:int -> t
