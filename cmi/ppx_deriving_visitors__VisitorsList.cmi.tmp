val last1 : 'a -> 'a List.t -> 'a
val last : 'a List.t -> 'a
val interval : int -> int -> int list
val init : int -> int -> (int -> 'a) -> 'a list
val is_matrix : int -> int -> 'a list list -> bool
val transpose : int -> 'a list list -> 'a list list
val hextend : 'a list -> int -> (int -> 'a -> 'a) -> 'a list list
val uniq1 : ('a -> 'a -> int) -> 'a -> 'a List.t -> 'a List.t
val uniq : ('a -> 'a -> int) -> 'a List.t -> 'a List.t
val weed : ('a -> 'a -> int) -> 'a list -> 'a List.t
val fold_right1 : ('a -> 'a -> 'a) -> 'a list -> 'a -> 'a
val fold_left1 : ('a -> 'a -> 'a) -> 'a -> 'a List.t -> 'a
("DEBUG:rule", [(("last1", 468), ((Tag1 (0, ((0), 100000000, 0, -96), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "List"), "t"), [((0), 100000000, 0, -96)], (0)), 100000000, 0, -97), ((0), 100000000, 0, -96), 0), 100000000, 0, -95), 0), 100000000, 0, -94), 0, (("src/VisitorsList.ml", 5, 80, 88), ("src/VisitorsList.ml", 5, 80, 93), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsList", 0)), 0); (("last", 469), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "List"), "t"), [((0), 100000000, 0, -92)], (0)), 100000000, 0, -93), ((0), 100000000, 0, -92), 0), 100000000, 0, -91), 0, (("src/VisitorsList.ml", 12, 168, 172), ("src/VisitorsList.ml", 12, 168, 176), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsList", 5)), 0); (("interval", 470), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -90), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -90), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -90)], (0)), 100000000, 0, -89), 0), 100000000, 0, -88), 0), 100000000, 0, -87), 0, (("src/VisitorsList.ml", 22, 352, 360), ("src/VisitorsList.ml", 22, 352, 368), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsList", 9)), 0); (("init", 471), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -86), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -86), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -85), ((("a")), 100000000, 0, -83), 0), 100000000, 0, -84), (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -83)], (0)), 100000000, 0, -82), 0), 100000000, 0, -81), 0), 100000000, 0, -80), 0), 100000000, 0, -79), 0, (("src/VisitorsList.ml", 30, 522, 526), ("src/VisitorsList.ml", 30, 522, 530), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsList", 12)), 0); (("is_matrix", 472), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -78), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -77), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("list", 9)), [((0), 100000000, 0, -76)], (0)), 100000000, 0, -75)], (0)), 100000000, 0, -74), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -73), 0), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), 0, (("src/VisitorsList.ml", 36, 692, 696), ("src/VisitorsList.ml", 36, 692, 705), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsList", 16)), 0); (("transpose", 473), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -69), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -66)], (0)), 100000000, 0, -68)], (0)), 100000000, 0, -67), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -66)], (0)), 100000000, 0, -65)], (0)), 100000000, 0, -64), 0), 100000000, 0, -63), 0), 100000000, 0, -62), 0, (("src/VisitorsList.ml", 44, 1072, 1076), ("src/VisitorsList.ml", 44, 1072, 1085), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsList", 21)), 0); (("hextend", 474), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -56)], (0)), 100000000, 0, -61), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -60), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -59), (Tag1 (0, ((("a")), 100000000, 0, -56), ((("a")), 100000000, 0, -56), 0), 100000000, 0, -58), 0), 100000000, 0, -57), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("list", 9)), [((("a")), 100000000, 0, -56)], (0)), 100000000, 0, -55)], (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("src/VisitorsList.ml", 61, 1602, 1606), ("src/VisitorsList.ml", 61, 1602, 1613), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsList", 28)), 0); (("uniq1", 475), ((Tag1 (0, (Tag1 (0, ((0), 100000000, 0, -46), (Tag1 (0, ((0), 100000000, 0, -46), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -50), 0), 100000000, 0, -49), 0), 100000000, 0, -48), (Tag1 (0, ((0), 100000000, 0, -46), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "List"), "t"), [((0), 100000000, 0, -46)], (0)), 100000000, 0, -47), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "List"), "t"), [((0), 100000000, 0, -46)], (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("src/VisitorsList.ml", 68, 1883, 1891), ("src/VisitorsList.ml", 68, 1883, 1896), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsList", 34)), 0); (("uniq", 476), ((Tag1 (0, (Tag1 (0, ((0), 100000000, 0, -37), (Tag1 (0, ((0), 100000000, 0, -37), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "List"), "t"), [((0), 100000000, 0, -37)], (0)), 100000000, 0, -38), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "List"), "t"), [((0), 100000000, 0, -37)], (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("src/VisitorsList.ml", 78, 2058, 2062), ("src/VisitorsList.ml", 78, 2058, 2066), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsList", 40)), 0); (("weed", 477), ((Tag1 (0, (Tag1 (0, ((0), 100000000, 0, -29), (Tag1 (0, ((0), 100000000, 0, -29), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((0), 100000000, 0, -29)], (0)), 100000000, 0, -30), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "List"), "t"), [((0), 100000000, 0, -29)], (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("src/VisitorsList.ml", 87, 2232, 2236), ("src/VisitorsList.ml", 87, 2232, 2240), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsList", 45)), 0); (("fold_right1", 478), ((Tag1 (0, (Tag1 (0, ((0), 100000000, 0, -22), (Tag1 (0, ((0), 100000000, 0, -22), ((0), 100000000, 0, -22), 0), 100000000, 0, -25), 0), 100000000, 0, -24), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((0), 100000000, 0, -22)], (0)), 100000000, 0, -23), (Tag1 (0, ((0), 100000000, 0, -22), ((0), 100000000, 0, -22), 0), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0, (("src/VisitorsList.ml", 95, 2540, 2544), ("src/VisitorsList.ml", 95, 2540, 2555), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsList", 48)), 0); (("fold_left1", 479), ((Tag1 (0, (Tag1 (0, ((0), 100000000, 0, -15), (Tag1 (0, ((0), 100000000, 0, -15), ((0), 100000000, 0, -15), 0), 100000000, 0, -18), 0), 100000000, 0, -17), (Tag1 (0, ((0), 100000000, 0, -15), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "List"), "t"), [((0), 100000000, 0, -15)], (0)), 100000000, 0, -16), ((0), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("src/VisitorsList.ml", 111, 3130, 3134), ("src/VisitorsList.ml", 111, 3130, 3144), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsList", 55)), 0); (("filter2", 480), ((Tag1 (0, (Tag1 (0, ((0), 100000000, 0, -9), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -11), (1)), 100000000, 0, -10), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((0), 100000000, 0, -9)], (0)), 100000000, 0, -8), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((0), 100000000, 0, -6)], (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("list", 9)), [((0), 100000000, 0, -6)], (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/VisitorsList.ml", 123, 3491, 3495), ("src/VisitorsList.ml", 123, 3491, 3502), 0), 0, Tag1 ("Ppx_deriving_visitors__VisitorsList", 61)), 0)], "Ppx_deriving_visitors__VisitorsList", [("Ppx_deriving_visitors__VisitorsList", ("\255g$?F\022\151\145&\024\027\215q\181\194\186")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Ppx_deriving_visitors", ("/!\175S+\022\138\236\145s\178S\251\157\240g")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val filter2 : ('a -> bool) -> 'a list -> 'b list -> 'b list
