val sexp_of_big_int : Big_int.big_int -> Sexplib.Sexp.t
val sexp_of_nat : Nat.nat -> Sexplib.Sexp.t
val sexp_of_ratio : Ratio.ratio -> Sexplib.Sexp.t
val sexp_of_num : Num.num -> Sexplib.Sexp.t
val big_int_of_sexp : Sexplib.Sexp.t -> Big_int.big_int
val nat_of_sexp : Sexplib.Sexp.t -> Nat.nat
val ratio_of_sexp : Sexplib.Sexp.t -> Ratio.ratio
("DEBUG:rule", [(("sexp_of_big_int", 603), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Big_int")), "big_int"), 0, (0)), 100000000, 0, -25), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("num/lib/sexplib_num_conv.mli", 5, 114, 114), ("num/lib/sexplib_num_conv.mli", 5, 114, 161), 0), 0, Tag1 ("Sexplib_num__Sexplib_num_conv", 0)), 0); (("sexp_of_nat", 604), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Nat")), "nat"), 0, (0)), 100000000, 0, -22), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("num/lib/sexplib_num_conv.mli", 9, 251, 251), ("num/lib/sexplib_num_conv.mli", 9, 251, 286), 0), 0, Tag1 ("Sexplib_num__Sexplib_num_conv", 1)), 0); (("sexp_of_ratio", 605), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Ratio")), "ratio"), 0, (0)), 100000000, 0, -19), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("num/lib/sexplib_num_conv.mli", 13, 382, 382), ("num/lib/sexplib_num_conv.mli", 13, 382, 423), 0), 0, Tag1 ("Sexplib_num__Sexplib_num_conv", 2)), 0); (("sexp_of_num", 606), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Num")), "num"), 0, (0)), 100000000, 0, -16), (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("num/lib/sexplib_num_conv.mli", 16, 509, 509), ("num/lib/sexplib_num_conv.mli", 16, 509, 544), 0), 0, Tag1 ("Sexplib_num__Sexplib_num_conv", 3)), 0); (("big_int_of_sexp", 607), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -13), (Tag3 (Tag1 ((Tag2 ("Big_int")), "big_int"), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("num/lib/sexplib_num_conv.mli", 20, 647, 647), ("num/lib/sexplib_num_conv.mli", 20, 647, 694), 0), 0, Tag1 ("Sexplib_num__Sexplib_num_conv", 4)), 0); (("nat_of_sexp", 608), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -10), (Tag3 (Tag1 ((Tag2 ("Nat")), "nat"), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("num/lib/sexplib_num_conv.mli", 24, 785, 785), ("num/lib/sexplib_num_conv.mli", 24, 785, 820), 0), 0, Tag1 ("Sexplib_num__Sexplib_num_conv", 5)), 0); (("ratio_of_sexp", 609), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -7), (Tag3 (Tag1 ((Tag2 ("Ratio")), "ratio"), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("num/lib/sexplib_num_conv.mli", 28, 915, 915), ("num/lib/sexplib_num_conv.mli", 28, 915, 956), 0), 0, Tag1 ("Sexplib_num__Sexplib_num_conv", 6)), 0); (("num_of_sexp", 610), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib")), "Sexp"), "t"), 0, (0)), 100000000, 0, -4), (Tag3 (Tag1 ((Tag2 ("Num")), "num"), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("num/lib/sexplib_num_conv.mli", 31, 1043, 1043), ("num/lib/sexplib_num_conv.mli", 31, 1043, 1078), 0), 0, Tag1 ("Sexplib_num__Sexplib_num_conv", 7)), 0)], "Sexplib_num__Sexplib_num_conv", [("Sexplib_num__Sexplib_num_conv", ("\n\211\139\014\219\170\137\132\145J\146\022i|\243\209")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Random", ("\020\005Xq\171\026\218\152X\135\254\023\133zK\200")); ("Stdlib__Printf", ("\215<\139]\021\142\224E\245m\198qc(W\229")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Bytes", ("C\134\194)\175\222\137p\205\246\244\r\241\164P\209")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sexplib_num", ("\140w|?\006k\215i\183d\196\2116Z\213^")); ("Sexplib__Type_with_layout", ("Q\170\019\238\156\246\192\156\b`\250o[6g\024")); ("Sexplib__Type", ("\147\252\252\167_\149\137\235\001d\241\255`\173Cs")); ("Sexplib__Src_pos", ("\157\022\246\144K\127\174bk\214\128&E\nh\213")); ("Sexplib__Sexp_intf", ("\\\031Fc\157\000\226\253\208\151\241\218a\195\187w")); ("Sexplib__Sexp", ("b\191\237;\251D\001\027M=x\201\143\185:d")); ("Sexplib__Pre_sexp", ("))\b\146\225\144^\227\218\181;f\220\tA\006")); ("Sexplib__Parser_with_layout", ("W\155\134\171aBJ\251|G6\192'S\210<")); ("Sexplib__Parser", ("\203&3\188\178\148:\254\176\140\127\227\029jQL")); ("Sexplib__Lexer", ("M\181eW\204\2193X\225\170yM\228!\146s")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("Sexplib", ("\249\031\145\178\014\020\n\209\129\143\012\015<K\177\189")); ("Ratio", ("\133\177\241\180\127#AW\127v\180\025\250\143\018W")); ("Parsexp__Positions", ("BE\135\222xW\224\233\184\004o\169\248\bH\230")); ("Parsexp__Parsexp_intf", ("\006\239e\204\167\243e2&\192H\160\029XNm")); ("Parsexp__Parser_intf", ("\154\197J\002\004\252i\162\190\241\151\210\157\024\167e")); ("Parsexp__Parser", ("n\164F;=\199\178\019\150]\2502\176\014a\165")); ("Parsexp__Parse_error_intf", ("\011\229\182\179W\161\176\160P\249\165\214ef\011\229")); ("Parsexp__Parse_error", ("*\031\166\142M\171\026\030\\K7\157Y\232\208\234")); ("Parsexp__Old_parser_cont_state", ("\2535&90\136_\154\027}Oc0\138%X")); ("Parsexp__Of_sexp_error", ("\253\171Y\150\210\218\191\255\160\211\134d/l\132\228")); ("Parsexp__Import", ("\017\029\157\225\239\135p*0\207\146\197\020\128\195!")); ("Parsexp__Cst", (")\228;6o~\227\000pRf\153\216\244sD")); ("Parsexp__Conv_intf", ("\004r\193,k\2254\168\149\229+hmw\134\228")); ("Parsexp__Conv_error", ("\195Bo\140A|\220\136\210\137\165&!\164\134\021")); ("Parsexp__Conv", ("\238|^\141\226\177\185\022$*\023\188\020\002P\229")); ("Parsexp__Automaton_state_intf", ("\196\146]2\143u|+%\027\185v2\225\r\229")); ("Parsexp__Automaton_state", ("L#\030=\218R\022 \228<\188-\r\211\157_")); ("Parsexp__Automaton_stack_intf", ("\235\204\0296]\2449F\029\b:\006\217\162f\024")); ("Parsexp__Automaton_stack", ("\246/\135\251\031)\015r\003\237\254S$\181\243\201")); ("Parsexp__", ("\182\180\203\030\218\020\246\196\221\171_\030GE\171\192")); ("Parsexp", ("\023d\176\173 \b\181o\028\163R\205\005\226BE")); ("Num", ("^Dd\228\"\203\221'\209\144a\020\148\026\225U")); ("Nat", ("\158\218\202\184\174E)\133)>\025\209\140\204/Z")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Big_int", ("t\020\020^p\161P\198\185\167\t\215\248\017\232\207"))], [(0)])
val num_of_sexp : Sexplib.Sexp.t -> Num.num
