exception Of_sexp_error of exn * Sexplib0__.Sexp.t
val tuple_of_size_n_expected : string -> int -> Sexplib0__.Sexp.t -> 'a
val stag_no_args : string -> Sexplib0__.Sexp.t -> 'a
val stag_incorrect_n_args : string -> string -> Sexplib0__.Sexp.t -> 'a
val stag_takes_args : string -> Sexplib0__.Sexp.t -> 'a
val nested_list_invalid_sum : string -> Sexplib0__.Sexp.t -> 'a
val empty_list_invalid_sum : string -> Sexplib0__.Sexp.t -> 'a
val unexpected_stag : string -> Sexplib0__.Sexp.t -> 'a
val record_sexp_bool_with_payload : string -> Sexplib0__.Sexp.t -> 'a
val record_only_pairs_expected : string -> Sexplib0__.Sexp.t -> 'a
val record_superfluous_fields :
  what:string -> loc:string -> string list -> Sexplib0__.Sexp.t -> 'a
val record_duplicate_fields :
  string -> string list -> Sexplib0__.Sexp.t -> 'a
val record_extra_fields : string -> string list -> Sexplib0__.Sexp.t -> 'a
val record_get_undefined_loop : string list -> (bool * string) list -> string
val record_undefined_elements :
  string -> Sexplib0__.Sexp.t -> (bool * string) list -> 'a
val record_list_instead_atom : string -> Sexplib0__.Sexp.t -> 'a
val record_poly_field_value : string -> Sexplib0__.Sexp.t -> 'a
exception No_variant_match
val no_variant_match : unit -> 'a
val no_matching_variant_found : string -> Sexplib0__.Sexp.t -> 'a
val ptag_no_args : string -> Sexplib0__.Sexp.t -> 'a
val ptag_incorrect_n_args : string -> string -> Sexplib0__.Sexp.t -> 'a
val ptag_takes_args : string -> Sexplib0__.Sexp.t -> 'a
val nested_list_invalid_poly_var : string -> Sexplib0__.Sexp.t -> 'a
val empty_list_invalid_poly_var : string -> Sexplib0__.Sexp.t -> 'a
("DEBUG:rule", [Tag2 (("Of_sexp_error", 351), ((Tag3 ("exn", 7)), 0, ([(Tag3 ((Tag3 ("exn", 7)), 0, (0)), 100000000, 0, -145); (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -146)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Sexplib0__Sexp_conv_error", 0)), 2, 0); (("tuple_of_size_n_expected", 352), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -144), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -143), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -142), ((0), 100000000, 0, -141), 0), 100000000, 0, -140), 0), 100000000, 0, -139), 0), 100000000, 0, -138), 0, (("src/sexp_conv_error.ml", 12, 207, 211), ("src/sexp_conv_error.ml", 12, 207, 235), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 1)), 0); (("stag_no_args", 353), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -137), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -136), ((0), 100000000, 0, -135), 0), 100000000, 0, -134), 0), 100000000, 0, -133), 0, (("src/sexp_conv_error.ml", 18, 365, 369), ("src/sexp_conv_error.ml", 18, 365, 381), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 5)), 0); (("stag_incorrect_n_args", 354), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -132), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -131), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -130), ((0), 100000000, 0, -129), 0), 100000000, 0, -128), 0), 100000000, 0, -127), 0), 100000000, 0, -126), 0, (("src/sexp_conv_error.ml", 22, 479, 483), ("src/sexp_conv_error.ml", 22, 479, 504), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 8)), 0); (("stag_takes_args", 355), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -125), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -124), ((0), 100000000, 0, -123), 0), 100000000, 0, -122), 0), 100000000, 0, -121), 0, (("src/sexp_conv_error.ml", 27, 639, 643), ("src/sexp_conv_error.ml", 27, 639, 658), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 13)), 0); (("nested_list_invalid_sum", 356), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -120), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -119), ((0), 100000000, 0, -118), 0), 100000000, 0, -117), 0), 100000000, 0, -116), 0, (("src/sexp_conv_error.ml", 31, 751, 755), ("src/sexp_conv_error.ml", 31, 751, 778), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 16)), 0); (("empty_list_invalid_sum", 357), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -115), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -114), ((0), 100000000, 0, -113), 0), 100000000, 0, -112), 0), 100000000, 0, -111), 0, (("src/sexp_conv_error.ml", 35, 878, 882), ("src/sexp_conv_error.ml", 35, 878, 904), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 19)), 0); (("unexpected_stag", 358), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -110), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -109), ((0), 100000000, 0, -108), 0), 100000000, 0, -107), 0), 100000000, 0, -106), 0, (("src/sexp_conv_error.ml", 39, 1004, 1008), ("src/sexp_conv_error.ml", 39, 1004, 1023), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 22)), 0); (("record_sexp_bool_with_payload", 359), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -105), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -104), ((0), 100000000, 0, -103), 0), 100000000, 0, -102), 0), 100000000, 0, -101), 0, (("src/sexp_conv_error.ml", 45, 1144, 1148), ("src/sexp_conv_error.ml", 45, 1144, 1177), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 25)), 0); (("record_only_pairs_expected", 360), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -100), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -99), ((0), 100000000, 0, -98), 0), 100000000, 0, -97), 0), 100000000, 0, -96), 0, (("src/sexp_conv_error.ml", 52, 1317, 1321), ("src/sexp_conv_error.ml", 52, 1317, 1347), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 29)), 0); (("record_superfluous_fields", 361), ((Tag1 (("what"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -95), (Tag1 (("loc"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -94), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -93)], (0)), 100000000, 0, -92), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -91), ((0), 100000000, 0, -90), 0), 100000000, 0, -89), 0), 100000000, 0, -88), 0), 100000000, 0, -87), 0), 100000000, 0, -86), 0, (("src/sexp_conv_error.ml", 61, 1516, 1520), ("src/sexp_conv_error.ml", 61, 1516, 1545), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 33)), 0); (("record_duplicate_fields", 362), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -85), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -84)], (0)), 100000000, 0, -83), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -82), ((0), 100000000, 0, -81), 0), 100000000, 0, -80), 0), 100000000, 0, -79), 0), 100000000, 0, -78), 0, (("src/sexp_conv_error.ml", 67, 1747, 1751), ("src/sexp_conv_error.ml", 67, 1747, 1774), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 40)), 0); (("record_extra_fields", 363), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -77), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -76)], (0)), 100000000, 0, -75), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -74), ((0), 100000000, 0, -73), 0), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), 0, (("src/sexp_conv_error.ml", 71, 1881, 1885), ("src/sexp_conv_error.ml", 71, 1881, 1904), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 44)), 0); (("record_get_undefined_loop", 364), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -68)], (0)), 100000000, 0, -69), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -67); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -68)]), 100000000, 0, -66)], (0)), 100000000, 0, -65), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -64), 0), 100000000, 0, -63), 0), 100000000, 0, -62), 0, (("src/sexp_conv_error.ml", 75, 2007, 2015), ("src/sexp_conv_error.ml", 75, 2007, 2040), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 48)), 0); (("record_undefined_elements", 365), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -61), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -60), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -58); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -59)]), 100000000, 0, -57)], (0)), 100000000, 0, -56), ((0), 100000000, 0, -55), 0), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0, (("src/sexp_conv_error.ml", 81, 2247, 2251), ("src/sexp_conv_error.ml", 81, 2247, 2276), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 53)), 0); (("record_list_instead_atom", 366), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -51), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -50), ((0), 100000000, 0, -49), 0), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("src/sexp_conv_error.ml", 89, 2481, 2485), ("src/sexp_conv_error.ml", 89, 2481, 2509), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 59)), 0); (("record_poly_field_value", 367), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -46), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -45), ((0), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("src/sexp_conv_error.ml", 94, 2624, 2628), ("src/sexp_conv_error.ml", 94, 2624, 2651), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 63)), 0); Tag2 (("No_variant_match", 368), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Sexplib0__Sexp_conv_error", 67)), 2, 0); (("no_variant_match", 369), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -41), ((0), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("src/sexp_conv_error.ml", 106, 2881, 2885), ("src/sexp_conv_error.ml", 106, 2881, 2901), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 68)), 0); (("no_matching_variant_found", 370), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -38), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -37), ((0), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("src/sexp_conv_error.ml", 108, 2931, 2935), ("src/sexp_conv_error.ml", 108, 2931, 2960), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 69)), 0); (("ptag_no_args", 371), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -33), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -32), ((0), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("src/sexp_conv_error.ml", 112, 3043, 3047), ("src/sexp_conv_error.ml", 112, 3043, 3059), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 72)), 0); (("ptag_incorrect_n_args", 372), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -27), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -26), ((0), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("src/sexp_conv_error.ml", 116, 3160, 3164), ("src/sexp_conv_error.ml", 116, 3160, 3185), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 75)), 0); (("ptag_takes_args", 373), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -21), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -20), ((0), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("src/sexp_conv_error.ml", 126, 3364, 3368), ("src/sexp_conv_error.ml", 126, 3364, 3383), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 80)), 0); (("nested_list_invalid_poly_var", 374), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -16), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -15), ((0), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("src/sexp_conv_error.ml", 130, 3482, 3486), ("src/sexp_conv_error.ml", 130, 3482, 3514), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 83)), 0); (("empty_list_invalid_poly_var", 375), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -10), ((0), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("src/sexp_conv_error.ml", 134, 3619, 3623), ("src/sexp_conv_error.ml", 134, 3619, 3650), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 86)), 0); (("empty_type", 376), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Sexplib0__")), "Sexp"), "t"), 0, (0)), 100000000, 0, -5), ((0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/sexp_conv_error.ml", 138, 3756, 3760), ("src/sexp_conv_error.ml", 138, 3756, 3770), 0), 0, Tag1 ("Sexplib0__Sexp_conv_error", 89)), 0)], "Sexplib__Conv_error", [("Sexplib__Conv_error", ("\245\161\170\168}\168:\143\017\1270\215>\223\195\200")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__StringLabels", ("\134F\024\226\216Is#\223\230\234\169Z\206Gc")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Printf", ("\215<\139]\021\142\224E\245m\198qc(W\229")); ("Stdlib__ListLabels", ("*\194\012\191\020%\170\249m\002\180\178hk\205\220")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv_error", ("kzv!\151~\198P\000\165\176d\007\251p\232")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("Sexplib", ("\249\031\145\178\014\020\n\209\129\143\012\015<K\177\189")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val empty_type : string -> Sexplib0__.Sexp.t -> 'a
