val escape_base : string -> string
val html_of_comment : (string -> string) ref
val code_class : string
("DEBUG:rule", [(("escape_base", 314), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -17), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("odoc_ocamlhtml.mli", 18, 1134, 1134), ("odoc_ocamlhtml.mli", 18, 1134, 1168), 0), 0, Tag1 ("Odoc_ocamlhtml", 0)), 0); (("html_of_comment", 315), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -14), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12)], (0)), 100000000, 0, -11), 0, (("odoc_ocamlhtml.mli", 20, 1170, 1170), ("odoc_ocamlhtml.mli", 20, 1170, 1214), 0), 0, Tag1 ("Odoc_ocamlhtml", 1)), 0); (("code_class", 316), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10), 0, (("odoc_ocamlhtml.mli", 22, 1216, 1216), ("odoc_ocamlhtml.mli", 22, 1216, 1239), 0), 0, Tag1 ("Odoc_ocamlhtml", 2)), 0); (("html_of_code", 317), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Buffer"), "t"), 0, (0)), 100000000, 0, -9), (Tag1 (Tag1 ("with_pre"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -8)], (0)), 100000000, 0, -7), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("odoc_ocamlhtml.mli", 24, 1241, 1241), ("odoc_ocamlhtml.mli", 24, 1241, 1304), 0), 0, Tag1 ("Odoc_ocamlhtml", 3)), 0)], "Odoc_ocamlhtml", [("Odoc_ocamlhtml", ("\020\014\2445\003j!\253\187J\245n\209\150\016q")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val html_of_code : Buffer.t -> ?with_pre:bool -> string -> unit
