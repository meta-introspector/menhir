type compilation_env = {
  ce_stack : int Ident.tbl;
  ce_heap : int Ident.tbl;
  ce_rec : int Ident.tbl;
}
type debug_event = {
  mutable ev_pos : int;
  ev_module : string;
  ev_loc : Location.t;
  ev_kind : debug_event_kind;
  ev_defname : string;
  ev_info : debug_event_info;
  ev_typenv : Env.summary;
  ev_typsubst : Subst.t;
  ev_compenv : compilation_env;
  ev_stacksize : int;
  ev_repr : debug_event_repr;
}
and debug_event_kind =
    Event_before
  | Event_after of Types.type_expr
  | Event_pseudo
and debug_event_info = Event_function | Event_return of int | Event_other
and debug_event_repr =
    Event_none
  | Event_parent of int ref
  | Event_child of int ref
type label = int
type instruction =
    Klabel of label
  | Kacc of int
  | Kenvacc of int
  | Kpush
  | Kpop of int
  | Kassign of int
  | Kpush_retaddr of label
  | Kapply of int
  | Kappterm of int * int
  | Kreturn of int
  | Krestart
  | Kgrab of int
  | Kclosure of label * int
  | Kclosurerec of label list * int
  | Koffsetclosure of int
  | Kgetglobal of Ident.t
  | Ksetglobal of Ident.t
  | Kconst of Lambda.structured_constant
  | Kmakeblock of int * int
  | Kmakefloatblock of int
  | Kgetfield of int
  | Ksetfield of int
  | Kgetfloatfield of int
  | Ksetfloatfield of int
  | Kvectlength
  | Kgetvectitem
  | Ksetvectitem
  | Kgetstringchar
  | Kgetbyteschar
  | Ksetbyteschar
  | Kbranch of label
  | Kbranchif of label
  | Kbranchifnot of label
  | Kstrictbranchif of label
  | Kstrictbranchifnot of label
  | Kswitch of label array * label array
  | Kboolnot
  | Kpushtrap of label
  | Kpoptrap
  | Kraise of Lambda.raise_kind
  | Kcheck_signals
  | Kccall of string * int
  | Knegint
  | Kaddint
  | Ksubint
  | Kmulint
  | Kdivint
  | Kmodint
  | Kandint
  | Korint
  | Kxorint
  | Klslint
  | Klsrint
  | Kasrint
  | Kintcomp of Lambda.integer_comparison
  | Koffsetint of int
  | Koffsetref of int
  | Kisint
  | Kisout
  | Kgetmethod
  | Kgetpubmet of int
  | Kgetdynmet
  | Kevent of debug_event
  | Kperform
  | Kresume
  | Kresumeterm of int
  | Kreperformterm of int
  | Kstop
val immed_min : int("DEBUG:rule", [Tag1 (("compilation_env", 884), (0, 0, [[(("ce_stack", 387), 0, (Tag3 (Tag1 ((Tag2 ("Ident")), "tbl"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -70)], (0)), 100000000, 0, -69), (("bytecomp/instruct.mli", 23, 1220, 1224), ("bytecomp/instruct.mli", 23, 1220, 1248), 0), 0, Tag1 ("Instruct", 4)); (("ce_heap", 388), 0, (Tag3 (Tag1 ((Tag2 ("Ident")), "tbl"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -72)], (0)), 100000000, 0, -71), (("bytecomp/instruct.mli", 24, 1291, 1295), ("bytecomp/instruct.mli", 24, 1291, 1318), 0), 0, Tag1 ("Instruct", 5)); (("ce_rec", 389), 0, (Tag3 (Tag1 ((Tag2 ("Ident")), "tbl"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -74)], (0)), 100000000, 0, -73), (("bytecomp/instruct.mli", 25, 1362, 1366), ("bytecomp/instruct.mli", 25, 1362, 1387), 0), 0, Tag1 ("Instruct", 6))]], 1, 0, 0, 0, 0, 0, (("bytecomp/instruct.mli", 22, 1197, 1197), ("bytecomp/instruct.mli", 25, 1362, 1389), 0), 0, 0, 0, Tag1 ("Instruct", 3)), 1, 0); Tag1 (("debug_event", 885), (0, 0, [[(("ev_pos", 394), 1, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -58), (("bytecomp/instruct.mli", 42, 2131, 2135), ("bytecomp/instruct.mli", 42, 2131, 2155), 0), 0, Tag1 ("Instruct", 11)); (("ev_module", 395), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -59), (("bytecomp/instruct.mli", 43, 2198, 2202), ("bytecomp/instruct.mli", 43, 2198, 2220), 0), 0, Tag1 ("Instruct", 12)); (("ev_loc", 462), 0, (Tag3 (Tag1 ((Tag2 ("Location")), "t"), 0, (0)), 100000000, 0, -60), (("bytecomp/instruct.mli", 44, 2268, 2272), ("bytecomp/instruct.mli", 44, 2268, 2291), 0), 0, Tag1 ("Instruct", 13)); (("ev_kind", 463), 0, (Tag3 ((("debug_event_kind", 886)), 0, (0)), 100000000, 0, -61), (("bytecomp/instruct.mli", 45, 2338, 2342), ("bytecomp/instruct.mli", 45, 2338, 2368), 0), 0, Tag1 ("Instruct", 14)); (("ev_defname", 464), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -62), (("bytecomp/instruct.mli", 46, 2403, 2407), ("bytecomp/instruct.mli", 46, 2403, 2426), 0), 0, Tag1 ("Instruct", 15)); (("ev_info", 465), 0, (Tag3 ((("debug_event_info", 887)), 0, (0)), 100000000, 0, -63), (("bytecomp/instruct.mli", 47, 2470, 2474), ("bytecomp/instruct.mli", 47, 2470, 2500), 0), 0, Tag1 ("Instruct", 16)); (("ev_typenv", 634), 0, (Tag3 (Tag1 ((Tag2 ("Env")), "summary"), 0, (0)), 100000000, 0, -64), (("bytecomp/instruct.mli", 48, 2534, 2538), ("bytecomp/instruct.mli", 48, 2534, 2561), 0), 0, Tag1 ("Instruct", 17)); (("ev_typsubst", 666), 0, (Tag3 (Tag1 ((Tag2 ("Subst")), "t"), 0, (0)), 100000000, 0, -65), (("bytecomp/instruct.mli", 49, 2599, 2603), ("bytecomp/instruct.mli", 49, 2599, 2624), 0), 0, Tag1 ("Instruct", 18)); (("ev_compenv", 667), 0, (Tag3 ((("compilation_env", 884)), 0, (0)), 100000000, 0, -66), (("bytecomp/instruct.mli", 50, 2669, 2673), ("bytecomp/instruct.mli", 50, 2669, 2701), 0), 0, Tag1 ("Instruct", 19)); (("ev_stacksize", 668), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -67), (("bytecomp/instruct.mli", 51, 2739, 2743), ("bytecomp/instruct.mli", 51, 2739, 2761), 0), 0, Tag1 ("Instruct", 20)); (("ev_repr", 669), 0, (Tag3 ((("debug_event_repr", 888)), 0, (0)), 100000000, 0, -68), (("bytecomp/instruct.mli", 52, 2805, 2809), ("bytecomp/instruct.mli", 52, 2805, 2834), 0), 0, Tag1 ("Instruct", 21))]], 1, 0, 0, 0, 0, 0, (("bytecomp/instruct.mli", 41, 2112, 2112), ("bytecomp/instruct.mli", 52, 2805, 2836), 0), 0, 0, 0, Tag1 ("Instruct", 7)), 1, 0); Tag1 (("debug_event_kind", 886), (0, 0, Tag1 ([(("Event_before", 670), (0), 0, (("bytecomp/instruct.mli", 55, 2906, 2910), ("bytecomp/instruct.mli", 55, 2906, 2922), 0), 0, Tag1 ("Instruct", 22)); (("Event_after", 671), ([(Tag3 (Tag1 ((Tag2 ("Types")), "type_expr"), 0, (0)), 100000000, 0, -57)]), 0, (("bytecomp/instruct.mli", 56, 2923, 2925), ("bytecomp/instruct.mli", 56, 2923, 2957), 0), 0, Tag1 ("Instruct", 24)); (("Event_pseudo", 778), (0), 0, (("bytecomp/instruct.mli", 57, 2958, 2960), ("bytecomp/instruct.mli", 57, 2958, 2974), 0), 0, Tag1 ("Instruct", 25))], 0), 1, 0, 0, 0, 0, 0, (("bytecomp/instruct.mli", 54, 2883, 2883), ("bytecomp/instruct.mli", 57, 2958, 2974), 0), 0, 0, 0, Tag1 ("Instruct", 8)), 2, 0); Tag1 (("debug_event_info", 887), (0, 0, Tag1 ([(("Event_function", 779), (0), 0, (("bytecomp/instruct.mli", 60, 2999, 3003), ("bytecomp/instruct.mli", 60, 2999, 3017), 0), 0, Tag1 ("Instruct", 26)); (("Event_return", 780), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -56)]), 0, (("bytecomp/instruct.mli", 61, 3018, 3020), ("bytecomp/instruct.mli", 61, 3018, 3041), 0), 0, Tag1 ("Instruct", 27)); (("Event_other", 781), (0), 0, (("bytecomp/instruct.mli", 62, 3042, 3044), ("bytecomp/instruct.mli", 62, 3042, 3057), 0), 0, Tag1 ("Instruct", 28))], 0), 1, 0, 0, 0, 0, 0, (("bytecomp/instruct.mli", 59, 2976, 2976), ("bytecomp/instruct.mli", 62, 3042, 3057), 0), 0, 0, 0, Tag1 ("Instruct", 9)), 2, 0); Tag1 (("debug_event_repr", 888), (0, 0, Tag1 ([(("Event_none", 782), (0), 0, (("bytecomp/instruct.mli", 65, 3082, 3086), ("bytecomp/instruct.mli", 65, 3082, 3096), 0), 0, Tag1 ("Instruct", 29)); (("Event_parent", 783), ([(Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -53)], (0)), 100000000, 0, -52)]), 0, (("bytecomp/instruct.mli", 66, 3097, 3099), ("bytecomp/instruct.mli", 66, 3097, 3124), 0), 0, Tag1 ("Instruct", 30)); (("Event_child", 784), ([(Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -55)], (0)), 100000000, 0, -54)]), 0, (("bytecomp/instruct.mli", 67, 3125, 3127), ("bytecomp/instruct.mli", 67, 3125, 3151), 0), 0, Tag1 ("Instruct", 31))], 0), 1, 0, 0, 0, 0, 0, (("bytecomp/instruct.mli", 64, 3059, 3059), ("bytecomp/instruct.mli", 67, 3125, 3151), 0), 0, 0, 0, Tag1 ("Instruct", 10)), 2, 0); Tag1 (("label", 889), (0, 0, 0, 1, ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -51)), 0, 0, 0, 0, (("bytecomp/instruct.mli", 71, 3190, 3190), ("bytecomp/instruct.mli", 71, 3190, 3206), 0), 0, 1, 0, Tag1 ("Instruct", 32)), 1, 0); Tag1 (("instruction", 890), (0, 0, Tag1 ([(("Klabel", 814), ([(Tag3 ((("label", 889)), 0, (0)), 100000000, 0, -4)]), 0, (("bytecomp/instruct.mli", 74, 3277, 3281), ("bytecomp/instruct.mli", 74, 3277, 3296), 0), 0, Tag1 ("Instruct", 34)); (("Kacc", 815), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -5)]), 0, (("bytecomp/instruct.mli", 75, 3297, 3299), ("bytecomp/instruct.mli", 75, 3297, 3312), 0), 0, Tag1 ("Instruct", 35)); (("Kenvacc", 816), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -6)]), 0, (("bytecomp/instruct.mli", 76, 3313, 3315), ("bytecomp/instruct.mli", 76, 3313, 3331), 0), 0, Tag1 ("Instruct", 36)); (("Kpush", 817), (0), 0, (("bytecomp/instruct.mli", 77, 3332, 3334), ("bytecomp/instruct.mli", 77, 3332, 3341), 0), 0, Tag1 ("Instruct", 37)); (("Kpop", 818), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7)]), 0, (("bytecomp/instruct.mli", 78, 3342, 3344), ("bytecomp/instruct.mli", 78, 3342, 3357), 0), 0, Tag1 ("Instruct", 38)); (("Kassign", 819), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -8)]), 0, (("bytecomp/instruct.mli", 79, 3358, 3360), ("bytecomp/instruct.mli", 79, 3358, 3376), 0), 0, Tag1 ("Instruct", 39)); (("Kpush_retaddr", 820), ([(Tag3 ((("label", 889)), 0, (0)), 100000000, 0, -9)]), 0, (("bytecomp/instruct.mli", 80, 3377, 3379), ("bytecomp/instruct.mli", 80, 3377, 3403), 0), 0, Tag1 ("Instruct", 40)); (("Kapply", 821), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -10)]), 0, (("bytecomp/instruct.mli", 81, 3404, 3406), ("bytecomp/instruct.mli", 81, 3404, 3421), 0), 0, Tag1 ("Instruct", 41)); (("Kappterm", 822), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -11); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -12)]), 0, (("bytecomp/instruct.mli", 82, 3470, 3472), ("bytecomp/instruct.mli", 82, 3470, 3495), 0), 0, Tag1 ("Instruct", 42)); (("Kreturn", 823), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -13)]), 0, (("bytecomp/instruct.mli", 83, 3547, 3549), ("bytecomp/instruct.mli", 83, 3547, 3565), 0), 0, Tag1 ("Instruct", 43)); (("Krestart", 824), (0), 0, (("bytecomp/instruct.mli", 84, 3603, 3605), ("bytecomp/instruct.mli", 84, 3603, 3615), 0), 0, Tag1 ("Instruct", 44)); (("Kgrab", 825), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -14)]), 0, (("bytecomp/instruct.mli", 85, 3616, 3618), ("bytecomp/instruct.mli", 85, 3616, 3632), 0), 0, Tag1 ("Instruct", 45)); (("Kclosure", 826), ([(Tag3 ((("label", 889)), 0, (0)), 100000000, 0, -15); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -16)]), 0, (("bytecomp/instruct.mli", 86, 3682, 3684), ("bytecomp/instruct.mli", 86, 3682, 3709), 0), 0, Tag1 ("Instruct", 46)); (("Kclosurerec", 827), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label", 889)), 0, (0)), 100000000, 0, -18)], (0)), 100000000, 0, -17); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -19)]), 0, (("bytecomp/instruct.mli", 87, 3710, 3712), ("bytecomp/instruct.mli", 87, 3710, 3745), 0), 0, Tag1 ("Instruct", 47)); (("Koffsetclosure", 828), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -20)]), 0, (("bytecomp/instruct.mli", 88, 3746, 3748), ("bytecomp/instruct.mli", 88, 3746, 3771), 0), 0, Tag1 ("Instruct", 48)); (("Kgetglobal", 829), ([(Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -21)]), 0, (("bytecomp/instruct.mli", 89, 3772, 3774), ("bytecomp/instruct.mli", 89, 3772, 3797), 0), 0, Tag1 ("Instruct", 49)); (("Ksetglobal", 830), ([(Tag3 (Tag1 ((Tag2 ("Ident")), "t"), 0, (0)), 100000000, 0, -22)]), 0, (("bytecomp/instruct.mli", 90, 3798, 3800), ("bytecomp/instruct.mli", 90, 3798, 3823), 0), 0, Tag1 ("Instruct", 50)); (("Kconst", 831), ([(Tag3 (Tag1 ((Tag2 ("Lambda")), "structured_constant"), 0, (0)), 100000000, 0, -23)]), 0, (("bytecomp/instruct.mli", 91, 3824, 3826), ("bytecomp/instruct.mli", 91, 3824, 3857), 0), 0, Tag1 ("Instruct", 51)); (("Kmakeblock", 832), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -24); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -25)]), 0, (("bytecomp/instruct.mli", 92, 3858, 3860), ("bytecomp/instruct.mli", 92, 3858, 3885), 0), 0, Tag1 ("Instruct", 52)); (("Kmakefloatblock", 833), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -26)]), 0, (("bytecomp/instruct.mli", 93, 3914, 3916), ("bytecomp/instruct.mli", 93, 3914, 3940), 0), 0, Tag1 ("Instruct", 53)); (("Kgetfield", 834), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -27)]), 0, (("bytecomp/instruct.mli", 94, 3941, 3943), ("bytecomp/instruct.mli", 94, 3941, 3961), 0), 0, Tag1 ("Instruct", 54)); (("Ksetfield", 835), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -28)]), 0, (("bytecomp/instruct.mli", 95, 3962, 3964), ("bytecomp/instruct.mli", 95, 3962, 3982), 0), 0, Tag1 ("Instruct", 55)); (("Kgetfloatfield", 836), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -29)]), 0, (("bytecomp/instruct.mli", 96, 3983, 3985), ("bytecomp/instruct.mli", 96, 3983, 4008), 0), 0, Tag1 ("Instruct", 56)); (("Ksetfloatfield", 837), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -30)]), 0, (("bytecomp/instruct.mli", 97, 4009, 4011), ("bytecomp/instruct.mli", 97, 4009, 4034), 0), 0, Tag1 ("Instruct", 57)); (("Kvectlength", 838), (0), 0, (("bytecomp/instruct.mli", 98, 4035, 4037), ("bytecomp/instruct.mli", 98, 4035, 4050), 0), 0, Tag1 ("Instruct", 58)); (("Kgetvectitem", 839), (0), 0, (("bytecomp/instruct.mli", 99, 4051, 4053), ("bytecomp/instruct.mli", 99, 4051, 4067), 0), 0, Tag1 ("Instruct", 59)); (("Ksetvectitem", 840), (0), 0, (("bytecomp/instruct.mli", 100, 4068, 4070), ("bytecomp/instruct.mli", 100, 4068, 4084), 0), 0, Tag1 ("Instruct", 60)); (("Kgetstringchar", 841), (0), 0, (("bytecomp/instruct.mli", 101, 4085, 4087), ("bytecomp/instruct.mli", 101, 4085, 4103), 0), 0, Tag1 ("Instruct", 61)); (("Kgetbyteschar", 842), (0), 0, (("bytecomp/instruct.mli", 102, 4104, 4106), ("bytecomp/instruct.mli", 102, 4104, 4121), 0), 0, Tag1 ("Instruct", 62)); (("Ksetbyteschar", 843), (0), 0, (("bytecomp/instruct.mli", 103, 4122, 4124), ("bytecomp/instruct.mli", 103, 4122, 4139), 0), 0, Tag1 ("Instruct", 63)); (("Kbranch", 844), ([(Tag3 ((("label", 889)), 0, (0)), 100000000, 0, -31)]), 0, (("bytecomp/instruct.mli", 104, 4140, 4142), ("bytecomp/instruct.mli", 104, 4140, 4160), 0), 0, Tag1 ("Instruct", 64)); (("Kbranchif", 845), ([(Tag3 ((("label", 889)), 0, (0)), 100000000, 0, -32)]), 0, (("bytecomp/instruct.mli", 105, 4161, 4163), ("bytecomp/instruct.mli", 105, 4161, 4183), 0), 0, Tag1 ("Instruct", 65)); (("Kbranchifnot", 846), ([(Tag3 ((("label", 889)), 0, (0)), 100000000, 0, -33)]), 0, (("bytecomp/instruct.mli", 106, 4184, 4186), ("bytecomp/instruct.mli", 106, 4184, 4209), 0), 0, Tag1 ("Instruct", 66)); (("Kstrictbranchif", 847), ([(Tag3 ((("label", 889)), 0, (0)), 100000000, 0, -34)]), 0, (("bytecomp/instruct.mli", 107, 4210, 4212), ("bytecomp/instruct.mli", 107, 4210, 4238), 0), 0, Tag1 ("Instruct", 67)); (("Kstrictbranchifnot", 848), ([(Tag3 ((("label", 889)), 0, (0)), 100000000, 0, -35)]), 0, (("bytecomp/instruct.mli", 108, 4239, 4241), ("bytecomp/instruct.mli", 108, 4239, 4270), 0), 0, Tag1 ("Instruct", 68)); (("Kswitch", 849), ([(Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("label", 889)), 0, (0)), 100000000, 0, -37)], (0)), 100000000, 0, -36); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("label", 889)), 0, (0)), 100000000, 0, -39)], (0)), 100000000, 0, -38)]), 0, (("bytecomp/instruct.mli", 109, 4271, 4273), ("bytecomp/instruct.mli", 109, 4271, 4311), 0), 0, Tag1 ("Instruct", 69)); (("Kboolnot", 850), (0), 0, (("bytecomp/instruct.mli", 110, 4312, 4314), ("bytecomp/instruct.mli", 110, 4312, 4324), 0), 0, Tag1 ("Instruct", 70)); (("Kpushtrap", 851), ([(Tag3 ((("label", 889)), 0, (0)), 100000000, 0, -40)]), 0, (("bytecomp/instruct.mli", 111, 4325, 4327), ("bytecomp/instruct.mli", 111, 4325, 4347), 0), 0, Tag1 ("Instruct", 71)); (("Kpoptrap", 852), (0), 0, (("bytecomp/instruct.mli", 112, 4348, 4350), ("bytecomp/instruct.mli", 112, 4348, 4360), 0), 0, Tag1 ("Instruct", 72)); (("Kraise", 853), ([(Tag3 (Tag1 ((Tag2 ("Lambda")), "raise_kind"), 0, (0)), 100000000, 0, -41)]), 0, (("bytecomp/instruct.mli", 113, 4361, 4363), ("bytecomp/instruct.mli", 113, 4361, 4385), 0), 0, Tag1 ("Instruct", 73)); (("Kcheck_signals", 854), (0), 0, (("bytecomp/instruct.mli", 114, 4386, 4388), ("bytecomp/instruct.mli", 114, 4386, 4404), 0), 0, Tag1 ("Instruct", 74)); (("Kccall", 855), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -42); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -43)]), 0, (("bytecomp/instruct.mli", 115, 4405, 4407), ("bytecomp/instruct.mli", 115, 4405, 4431), 0), 0, Tag1 ("Instruct", 75)); (("Knegint", 856), (0), 0, (("bytecomp/instruct.mli", 116, 4432, 4434), ("bytecomp/instruct.mli", 116, 4432, 4443), 0), 0, Tag1 ("Instruct", 76)); (("Kaddint", 857), (0), 0, (("bytecomp/instruct.mli", 116, 4432, 4444), ("bytecomp/instruct.mli", 116, 4432, 4453), 0), 0, Tag1 ("Instruct", 77)); (("Ksubint", 858), (0), 0, (("bytecomp/instruct.mli", 116, 4432, 4454), ("bytecomp/instruct.mli", 116, 4432, 4463), 0), 0, Tag1 ("Instruct", 78)); (("Kmulint", 859), (0), 0, (("bytecomp/instruct.mli", 116, 4432, 4464), ("bytecomp/instruct.mli", 116, 4432, 4473), 0), 0, Tag1 ("Instruct", 79)); (("Kdivint", 860), (0), 0, (("bytecomp/instruct.mli", 116, 4432, 4474), ("bytecomp/instruct.mli", 116, 4432, 4483), 0), 0, Tag1 ("Instruct", 80)); (("Kmodint", 861), (0), 0, (("bytecomp/instruct.mli", 116, 4432, 4484), ("bytecomp/instruct.mli", 116, 4432, 4493), 0), 0, Tag1 ("Instruct", 81)); (("Kandint", 862), (0), 0, (("bytecomp/instruct.mli", 117, 4494, 4496), ("bytecomp/instruct.mli", 117, 4494, 4505), 0), 0, Tag1 ("Instruct", 82)); (("Korint", 863), (0), 0, (("bytecomp/instruct.mli", 117, 4494, 4506), ("bytecomp/instruct.mli", 117, 4494, 4514), 0), 0, Tag1 ("Instruct", 83)); (("Kxorint", 864), (0), 0, (("bytecomp/instruct.mli", 117, 4494, 4515), ("bytecomp/instruct.mli", 117, 4494, 4524), 0), 0, Tag1 ("Instruct", 84)); (("Klslint", 865), (0), 0, (("bytecomp/instruct.mli", 117, 4494, 4525), ("bytecomp/instruct.mli", 117, 4494, 4534), 0), 0, Tag1 ("Instruct", 85)); (("Klsrint", 866), (0), 0, (("bytecomp/instruct.mli", 117, 4494, 4535), ("bytecomp/instruct.mli", 117, 4494, 4544), 0), 0, Tag1 ("Instruct", 86)); (("Kasrint", 867), (0), 0, (("bytecomp/instruct.mli", 117, 4494, 4545), ("bytecomp/instruct.mli", 117, 4494, 4554), 0), 0, Tag1 ("Instruct", 87)); (("Kintcomp", 868), ([(Tag3 (Tag1 ((Tag2 ("Lambda")), "integer_comparison"), 0, (0)), 100000000, 0, -44)]), 0, (("bytecomp/instruct.mli", 118, 4555, 4557), ("bytecomp/instruct.mli", 118, 4555, 4589), 0), 0, Tag1 ("Instruct", 88)); (("Koffsetint", 869), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -45)]), 0, (("bytecomp/instruct.mli", 119, 4590, 4592), ("bytecomp/instruct.mli", 119, 4590, 4611), 0), 0, Tag1 ("Instruct", 89)); (("Koffsetref", 870), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -46)]), 0, (("bytecomp/instruct.mli", 120, 4612, 4614), ("bytecomp/instruct.mli", 120, 4612, 4633), 0), 0, Tag1 ("Instruct", 90)); (("Kisint", 871), (0), 0, (("bytecomp/instruct.mli", 121, 4634, 4636), ("bytecomp/instruct.mli", 121, 4634, 4644), 0), 0, Tag1 ("Instruct", 91)); (("Kisout", 872), (0), 0, (("bytecomp/instruct.mli", 122, 4645, 4647), ("bytecomp/instruct.mli", 122, 4645, 4655), 0), 0, Tag1 ("Instruct", 92)); (("Kgetmethod", 873), (0), 0, (("bytecomp/instruct.mli", 123, 4656, 4658), ("bytecomp/instruct.mli", 123, 4656, 4670), 0), 0, Tag1 ("Instruct", 93)); (("Kgetpubmet", 874), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -47)]), 0, (("bytecomp/instruct.mli", 124, 4671, 4673), ("bytecomp/instruct.mli", 124, 4671, 4692), 0), 0, Tag1 ("Instruct", 94)); (("Kgetdynmet", 875), (0), 0, (("bytecomp/instruct.mli", 125, 4693, 4695), ("bytecomp/instruct.mli", 125, 4693, 4707), 0), 0, Tag1 ("Instruct", 95)); (("Kevent", 876), ([(Tag3 ((("debug_event", 885)), 0, (0)), 100000000, 0, -48)]), 0, (("bytecomp/instruct.mli", 126, 4708, 4710), ("bytecomp/instruct.mli", 126, 4708, 4733), 0), 0, Tag1 ("Instruct", 96)); (("Kperform", 877), (0), 0, (("bytecomp/instruct.mli", 127, 4734, 4736), ("bytecomp/instruct.mli", 127, 4734, 4746), 0), 0, Tag1 ("Instruct", 97)); (("Kresume", 878), (0), 0, (("bytecomp/instruct.mli", 128, 4747, 4749), ("bytecomp/instruct.mli", 128, 4747, 4758), 0), 0, Tag1 ("Instruct", 98)); (("Kresumeterm", 879), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -49)]), 0, (("bytecomp/instruct.mli", 129, 4759, 4761), ("bytecomp/instruct.mli", 129, 4759, 4781), 0), 0, Tag1 ("Instruct", 99)); (("Kreperformterm", 880), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -50)]), 0, (("bytecomp/instruct.mli", 130, 4782, 4784), ("bytecomp/instruct.mli", 130, 4782, 4807), 0), 0, Tag1 ("Instruct", 100)); (("Kstop", 881), (0), 0, (("bytecomp/instruct.mli", 131, 4808, 4810), ("bytecomp/instruct.mli", 131, 4808, 4817), 0), 0, Tag1 ("Instruct", 101))], 0), 1, 0, 0, 0, 0, 0, (("bytecomp/instruct.mli", 73, 3258, 3258), ("bytecomp/instruct.mli", 131, 4808, 4817), 0), 0, 0, 0, Tag1 ("Instruct", 33)), 1, 0); (("immed_min", 891), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3), 0, (("bytecomp/instruct.mli", 133, 4819, 4819), ("bytecomp/instruct.mli", 133, 4819, 4837), 0), 0, Tag1 ("Instruct", 102)), 0); (("immed_max", 892), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2), 0, (("bytecomp/instruct.mli", 134, 4838, 4838), ("bytecomp/instruct.mli", 134, 4838, 4856), 0), 0, Tag1 ("Instruct", 103)), 0)], "Instruct", [("Instruct", ("\027\235\000\228\206D>\207TL\254\206\156\193\159\224")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Subst", ("\021\031\148\223\127\186\189\135\027}\145r\216\143\177\156")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Load_path", ("\012@\228l\230\164S\172h\1726X\020\252o}")); ("Lambda", ("\180\1419\236'\146K$\128\006\135q\135V\029\180")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("Env", ("\021\n\181\142x\b\169j\227\"\017\248*\178\245\223")); ("Debuginfo", ("\131\251\175\217P\194M\163\022\151\002\005\006\185:\185")); ("Cmi_format", ("6\177\bU\139\"\023\152=\249\135\174\b\011Cg")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216"))], [(0)])

val immed_max : int
