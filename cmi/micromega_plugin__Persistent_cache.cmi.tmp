module type PHashtable =
  sig
    type 'a t
    type key
    val open_in : string -> 'a t
    val find : 'a t -> key -> 'a
    val add : 'a t -> key -> 'a -> unit
    val memo : string -> (key -> 'a) -> key -> 'a
    val memo_cond : string -> (key -> bool) -> (key -> 'a) -> key -> 'a
  end
module PHashtable :
  functor (Key : Hashtbl.HashedType) ->
    sig
      type 'a t
      type key = Key.t
      val open_in : string -> 'a t
      val find : 'a t -> key -> 'a
      val add : 'a t -> key -> 'a -> unit
      val memo : string -> (key -> 'a) -> key -> 'a
      val memo_cond : string -> (key -> bool) -> (key -> 'a) -> key -> 'a("DEBUG:rule", [Tag4 (("PHashtable", 407), ((Tag1 ([Tag1 (("t", 410), ([((("a")), 100000000, 0, -38)], 1, 0, 1, 0, [7], [2], 0, 0, (("plugins/micromega/persistent_cache.mli", 14, 719, 721), ("plugins/micromega/persistent_cache.mli", 14, 719, 730), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Persistent_cache", 0)), 1, 0); Tag1 (("key", 411), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("plugins/micromega/persistent_cache.mli", 15, 731, 733), ("plugins/micromega/persistent_cache.mli", 15, 731, 741), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Persistent_cache", 1)), 1, 0); (("open_in", 412), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -37), (Tag3 ((("t", 410)), [((("a")), 100000000, 0, -36)], (0)), 100000000, 0, -35), 0), 100000000, 0, -34), 0, (("plugins/micromega/persistent_cache.mli", 20, 881, 883), ("plugins/micromega/persistent_cache.mli", 20, 881, 911), 0), 0, Tag1 ("Micromega_plugin__Persistent_cache", 2)), 0); (("find", 413), ((Tag1 (0, (Tag3 ((("t", 410)), [((("a")), 100000000, 0, -31)], (0)), 100000000, 0, -33), (Tag1 (0, (Tag3 ((("key", 411)), 0, (0)), 100000000, 0, -32), ((("a")), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("plugins/micromega/persistent_cache.mli", 23, 967, 969), ("plugins/micromega/persistent_cache.mli", 23, 967, 997), 0), 0, Tag1 ("Micromega_plugin__Persistent_cache", 3)), 0); (("add", 414), ((Tag1 (0, (Tag3 ((("t", 410)), [((("a")), 100000000, 0, -26)], (0)), 100000000, 0, -28), (Tag1 (0, (Tag3 ((("key", 411)), 0, (0)), 100000000, 0, -27), (Tag1 (0, ((("a")), 100000000, 0, -26), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("plugins/micromega/persistent_cache.mli", 28, 1203, 1205), ("plugins/micromega/persistent_cache.mli", 28, 1203, 1240), 0), 0, Tag1 ("Micromega_plugin__Persistent_cache", 4)), 0); (("memo", 415), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -21), (Tag1 (0, (Tag1 (0, (Tag3 ((("key", 411)), 0, (0)), 100000000, 0, -20), ((("a")), 100000000, 0, -17), 0), 100000000, 0, -19), (Tag1 (0, (Tag3 ((("key", 411)), 0, (0)), 100000000, 0, -18), ((("a")), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("plugins/micromega/persistent_cache.mli", 32, 1433, 1435), ("plugins/micromega/persistent_cache.mli", 32, 1433, 1480), 0), 0, Tag1 ("Micromega_plugin__Persistent_cache", 5)), 0); (("memo_cond", 416), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -13), (Tag1 (0, (Tag1 (0, (Tag3 ((("key", 411)), 0, (0)), 100000000, 0, -12), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), (Tag1 (0, (Tag1 (0, (Tag3 ((("key", 411)), 0, (0)), 100000000, 0, -9), ((("a")), 100000000, 0, -6), 0), 100000000, 0, -8), (Tag1 (0, (Tag3 ((("key", 411)), 0, (0)), 100000000, 0, -7), ((("a")), 100000000, 0, -6), 0), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("plugins/micromega/persistent_cache.mli", 35, 1566, 1568), ("plugins/micromega/persistent_cache.mli", 35, 1566, 1635), 0), 0, Tag1 ("Micromega_plugin__Persistent_cache", 6)), 0)])), 0, (("plugins/micromega/persistent_cache.mli", 13, 690, 690), ("plugins/micromega/persistent_cache.mli", 36, 1636, 1639), 0), Tag1 ("Micromega_plugin__Persistent_cache", 7)), 0); Tag3 (("PHashtable", 408), 0, (Tag2 (((("Key", 409)), (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Hashtbl"), "HashedType"))), Tag1 ([Tag1 (("t", 417), ([((("a")), 100000000, 0, -76)], 1, 0, 1, 0, [7], [2], 0, 0, (("plugins/micromega/persistent_cache.mli", 14, 719, 721), ("plugins/micromega/persistent_cache.mli", 14, 719, 730), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Persistent_cache", 0)), 1, 0); Tag1 (("key", 418), (0, 0, 0, 1, ((Tag3 (Tag1 ((("Key", 409)), "t"), 0, (0)), 100000000, 0, -75)), 0, 0, 0, 0, (("plugins/micromega/persistent_cache.mli", 38, 1641, 1696), ("plugins/micromega/persistent_cache.mli", 38, 1641, 1712), 0), 0, 0, 0, Tag1 ("Micromega_plugin__Persistent_cache", 9)), 1, 0); (("open_in", 419), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -74), (Tag3 ((("t", 417)), [((("a")), 100000000, 0, -73)], (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0, (("plugins/micromega/persistent_cache.mli", 20, 881, 883), ("plugins/micromega/persistent_cache.mli", 20, 881, 911), 0), 0, Tag1 ("Micromega_plugin__Persistent_cache", 2)), 0); (("find", 420), ((Tag1 (0, (Tag3 ((("t", 417)), [((("a")), 100000000, 0, -68)], (0)), 100000000, 0, -70), (Tag1 (0, (Tag3 ((("key", 418)), 0, (0)), 100000000, 0, -69), ((("a")), 100000000, 0, -68), 0), 100000000, 0, -67), 0), 100000000, 0, -66), 0, (("plugins/micromega/persistent_cache.mli", 23, 967, 969), ("plugins/micromega/persistent_cache.mli", 23, 967, 997), 0), 0, Tag1 ("Micromega_plugin__Persistent_cache", 3)), 0); (("add", 421), ((Tag1 (0, (Tag3 ((("t", 417)), [((("a")), 100000000, 0, -63)], (0)), 100000000, 0, -65), (Tag1 (0, (Tag3 ((("key", 418)), 0, (0)), 100000000, 0, -64), (Tag1 (0, ((("a")), 100000000, 0, -63), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0), 100000000, 0, -60), 0), 100000000, 0, -59), 0, (("plugins/micromega/persistent_cache.mli", 28, 1203, 1205), ("plugins/micromega/persistent_cache.mli", 28, 1203, 1240), 0), 0, Tag1 ("Micromega_plugin__Persistent_cache", 4)), 0); (("memo", 422), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -58), (Tag1 (0, (Tag1 (0, (Tag3 ((("key", 418)), 0, (0)), 100000000, 0, -57), ((("a")), 100000000, 0, -54), 0), 100000000, 0, -56), (Tag1 (0, (Tag3 ((("key", 418)), 0, (0)), 100000000, 0, -55), ((("a")), 100000000, 0, -54), 0), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("plugins/micromega/persistent_cache.mli", 32, 1433, 1435), ("plugins/micromega/persistent_cache.mli", 32, 1433, 1480), 0), 0, Tag1 ("Micromega_plugin__Persistent_cache", 5)), 0); (("memo_cond", 423), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -50), (Tag1 (0, (Tag1 (0, (Tag3 ((("key", 418)), 0, (0)), 100000000, 0, -49), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), (Tag1 (0, (Tag1 (0, (Tag3 ((("key", 418)), 0, (0)), 100000000, 0, -46), ((("a")), 100000000, 0, -43), 0), 100000000, 0, -45), (Tag1 (0, (Tag3 ((("key", 418)), 0, (0)), 100000000, 0, -44), ((("a")), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("plugins/micromega/persistent_cache.mli", 35, 1566, 1568), ("plugins/micromega/persistent_cache.mli", 35, 1566, 1635), 0), 0, Tag1 ("Micromega_plugin__Persistent_cache", 6)), 0)])), 0, (("plugins/micromega/persistent_cache.mli", 38, 1641, 1641), ("plugins/micromega/persistent_cache.mli", 38, 1641, 1712), 0), Tag1 ("Micromega_plugin__Persistent_cache", 10)), 0, 0)], "Micromega_plugin__Persistent_cache", [("Micromega_plugin__Persistent_cache", ("8\240\158\1397\210\218\137\017\007~\0290\157b\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Micromega_plugin", ("-|C6\194\020\193\204\234h\242\238\191\214'\193")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

    end
