val pr_tacref : Ltac2_plugin.Tac2expr.ltac_constant -> Pp.t
type typ_level = T5_l | T5_r | T2 | T1 | T0
val pr_typref : Ltac2_plugin.Tac2expr.type_constant -> Pp.t
val pr_glbtype_gen :
  ('a -> string) -> typ_level -> 'a Ltac2_plugin.Tac2expr.glb_typexpr -> Pp.t
val pr_glbtype :
  ('a -> string) -> 'a Ltac2_plugin.Tac2expr.glb_typexpr -> Pp.t
val pr_constructor : Ltac2_plugin.Tac2expr.ltac_constructor -> Pp.t
val pr_internal_constructor :
  Ltac2_plugin.Tac2expr.type_constant -> int -> bool -> Pp.t
val pr_projection : Ltac2_plugin.Tac2expr.ltac_projection -> Pp.t
val pr_glbexpr_gen :
  Ltac2_plugin.Tac2expr.exp_level ->
  Ltac2_plugin.Tac2expr.glb_tacexpr -> Pp.t
val pr_glbexpr : Ltac2_plugin.Tac2expr.glb_tacexpr -> Pp.t
val pr_partial_pat : Ltac2_plugin.Tac2expr.PartialPat.t -> Pp.t
val partial_pat_of_glb_pat :
  Ltac2_plugin.Tac2expr.glb_pat -> Ltac2_plugin.Tac2expr.PartialPat.t
type val_printer = {
  val_printer :
    'a.
      Environ.env ->
      Evd.evar_map ->
      Ltac2_plugin.Tac2ffi.valexpr ->
      'a Ltac2_plugin.Tac2expr.glb_typexpr list -> Pp.t;
}
val register_val_printer :
  Ltac2_plugin.Tac2expr.type_constant -> val_printer -> unit
val pr_valexpr :
  Environ.env ->
  Evd.evar_map ->
  Ltac2_plugin.Tac2ffi.valexpr ->
  'a Ltac2_plugin.Tac2expr.glb_typexpr -> Pp.t
val int_name : unit -> int -> string
type format =
    FmtString
  | FmtInt
  | FmtConstr
  | FmtIdent
  | FmtLiteral of string
  | FmtAlpha
val val_format : format list Ltac2_plugin.Tac2dyn.Val.tag
exception InvalidFormat("DEBUG:rule", [(("pr_tacref", 1106), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "ltac_constant"), 0, (0)), 100000000, 0, -90), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -89), 0), 100000000, 0, -88), 0, (("plugins/ltac2/tac2print.mli", 14, 704, 704), ("plugins/ltac2/tac2print.mli", 14, 704, 741), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 0)), 0); Tag1 (("typ_level", 1107), (0, 0, Tag1 ([(("T5_l", 521), (0), 0, (("plugins/ltac2/tac2print.mli", 22, 932, 932), ("plugins/ltac2/tac2print.mli", 22, 932, 938), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 2)); (("T5_r", 522), (0), 0, (("plugins/ltac2/tac2print.mli", 23, 939, 939), ("plugins/ltac2/tac2print.mli", 23, 939, 945), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 3)); (("T2", 523), (0), 0, (("plugins/ltac2/tac2print.mli", 24, 946, 946), ("plugins/ltac2/tac2print.mli", 24, 946, 950), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 4)); (("T1", 524), (0), 0, (("plugins/ltac2/tac2print.mli", 25, 951, 951), ("plugins/ltac2/tac2print.mli", 25, 951, 955), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 5)); (("T0", 525), (0), 0, (("plugins/ltac2/tac2print.mli", 26, 956, 956), ("plugins/ltac2/tac2print.mli", 26, 956, 960), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 6))], 0), 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2print.mli", 21, 915, 915), ("plugins/ltac2/tac2print.mli", 26, 956, 960), 0), 0, 1, 0, Tag1 ("Ltac2_plugin__Tac2print", 1)), 1, 0); (("pr_typref", 1108), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "type_constant"), 0, (0)), 100000000, 0, -87), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -86), 0), 100000000, 0, -85), 0, (("plugins/ltac2/tac2print.mli", 28, 962, 962), ("plugins/ltac2/tac2print.mli", 28, 962, 999), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 7)), 0); (("pr_glbtype_gen", 1109), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -81), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -84), 0), 100000000, 0, -83), (Tag1 (0, (Tag3 ((("typ_level", 1107)), 0, (0)), 100000000, 0, -82), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "glb_typexpr"), [((("a")), 100000000, 0, -81)], (0)), 100000000, 0, -80), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -79), 0), 100000000, 0, -78), 0), 100000000, 0, -77), 0), 100000000, 0, -76), 0, (("plugins/ltac2/tac2print.mli", 29, 1000, 1000), ("plugins/ltac2/tac2print.mli", 29, 1000, 1074), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 8)), 0); (("pr_glbtype", 1110), ((Tag1 (0, (Tag1 (0, ((("a")), 100000000, 0, -73), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -75), 0), 100000000, 0, -74), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "glb_typexpr"), [((("a")), 100000000, 0, -73)], (0)), 100000000, 0, -72), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -71), 0), 100000000, 0, -70), 0), 100000000, 0, -69), 0, (("plugins/ltac2/tac2print.mli", 30, 1075, 1075), ("plugins/ltac2/tac2print.mli", 30, 1075, 1132), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 9)), 0); (("pr_constructor", 1111), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "ltac_constructor"), 0, (0)), 100000000, 0, -68), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -67), 0), 100000000, 0, -66), 0, (("plugins/ltac2/tac2print.mli", 34, 1167, 1167), ("plugins/ltac2/tac2print.mli", 34, 1167, 1212), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 10)), 0); (("pr_internal_constructor", 1112), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "type_constant"), 0, (0)), 100000000, 0, -65), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -64), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -63), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0), 100000000, 0, -60), 0), 100000000, 0, -59), 0, (("plugins/ltac2/tac2print.mli", 35, 1213, 1213), ("plugins/ltac2/tac2print.mli", 35, 1213, 1279), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 11)), 0); (("pr_projection", 1113), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "ltac_projection"), 0, (0)), 100000000, 0, -58), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("plugins/ltac2/tac2print.mli", 36, 1280, 1280), ("plugins/ltac2/tac2print.mli", 36, 1280, 1323), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 12)), 0); (("pr_glbexpr_gen", 1114), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "exp_level"), 0, (0)), 100000000, 0, -55), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "glb_tacexpr"), 0, (0)), 100000000, 0, -54), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -53), 0), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("plugins/ltac2/tac2print.mli", 37, 1324, 1324), ("plugins/ltac2/tac2print.mli", 37, 1324, 1377), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 13)), 0); (("pr_glbexpr", 1115), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "glb_tacexpr"), 0, (0)), 100000000, 0, -50), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("plugins/ltac2/tac2print.mli", 38, 1378, 1378), ("plugins/ltac2/tac2print.mli", 38, 1378, 1414), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 14)), 0); (("pr_partial_pat", 1116), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "PartialPat"), "t"), 0, (0)), 100000000, 0, -47), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0, (("plugins/ltac2/tac2print.mli", 39, 1415, 1415), ("plugins/ltac2/tac2print.mli", 39, 1415, 1456), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 16)), 0); (("partial_pat_of_glb_pat", 1117), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "glb_pat"), 0, (0)), 100000000, 0, -44), (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "PartialPat"), "t"), 0, (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("plugins/ltac2/tac2print.mli", 42, 1482, 1482), ("plugins/ltac2/tac2print.mli", 42, 1482, 1534), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 17)), 0); Tag1 (("val_printer", 1118), (0, 0, [[(("val_printer", 933), 0, (Tag10 ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -41), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -40), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2ffi"), "valexpr"), 0, (0)), 100000000, 0, -39), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "glb_typexpr"), [(Tag9 (("a")), 100000000, 0, -31)], (0)), 100000000, 0, -38)], (0)), 100000000, 0, -37), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0), 100000000, 0, -32), [(Tag9 (("a")), 100000000, 0, -31)]), 100000000, 0, -30), (("plugins/ltac2/tac2print.mli", 47, 1582, 1586), ("plugins/ltac2/tac2print.mli", 47, 1582, 1673), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 19))]], 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2print.mli", 46, 1563, 1563), ("plugins/ltac2/tac2print.mli", 47, 1582, 1675), 0), 0, 0, 1, Tag1 ("Ltac2_plugin__Tac2print", 18)), 1, 0); (("register_val_printer", 1119), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "type_constant"), 0, (0)), 100000000, 0, -29), (Tag1 (0, (Tag3 ((("val_printer", 1118)), 0, (0)), 100000000, 0, -28), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -27), 0), 100000000, 0, -26), 0), 100000000, 0, -25), 0, (("plugins/ltac2/tac2print.mli", 49, 1677, 1677), ("plugins/ltac2/tac2print.mli", 49, 1677, 1740), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 20)), 0); (("pr_valexpr", 1120), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -24), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -23), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2ffi"), "valexpr"), 0, (0)), 100000000, 0, -22), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2expr"), "glb_typexpr"), [((("a")), 100000000, 0, -21)], (0)), 100000000, 0, -20), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("plugins/ltac2/tac2print.mli", 51, 1742, 1742), ("plugins/ltac2/tac2print.mli", 51, 1742, 1823), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 21)), 0); (("int_name", 1121), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -14), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -13), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0), 100000000, 0, -10), 0, (("plugins/ltac2/tac2print.mli", 55, 1847, 1847), ("plugins/ltac2/tac2print.mli", 55, 1847, 1885), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 22)), 0); Tag1 (("format", 1122), (0, 0, Tag1 ([(("FmtString", 1064), (0), 0, (("plugins/ltac2/tac2print.mli", 62, 2058, 2058), ("plugins/ltac2/tac2print.mli", 62, 2058, 2069), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 24)); (("FmtInt", 1065), (0), 0, (("plugins/ltac2/tac2print.mli", 63, 2070, 2070), ("plugins/ltac2/tac2print.mli", 63, 2070, 2078), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 25)); (("FmtConstr", 1066), (0), 0, (("plugins/ltac2/tac2print.mli", 64, 2079, 2079), ("plugins/ltac2/tac2print.mli", 64, 2079, 2090), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 26)); (("FmtIdent", 1067), (0), 0, (("plugins/ltac2/tac2print.mli", 65, 2091, 2091), ("plugins/ltac2/tac2print.mli", 65, 2091, 2101), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 27)); (("FmtLiteral", 1068), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9)]), 0, (("plugins/ltac2/tac2print.mli", 66, 2102, 2102), ("plugins/ltac2/tac2print.mli", 66, 2102, 2124), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 28)); (("FmtAlpha", 1069), (0), 0, (("plugins/ltac2/tac2print.mli", 67, 2125, 2125), ("plugins/ltac2/tac2print.mli", 67, 2125, 2135), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 29))], 0), 1, 0, 0, 0, 0, 0, (("plugins/ltac2/tac2print.mli", 61, 2044, 2044), ("plugins/ltac2/tac2print.mli", 67, 2125, 2135), 0), 0, 0, 0, Tag1 ("Ltac2_plugin__Tac2print", 23)), 1, 0); (("val_format", 1123), ((Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Ltac2_plugin")), "Tac2dyn"), "Val"), "tag"), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("format", 1122)), 0, (0)), 100000000, 0, -8)], (0)), 100000000, 0, -7)], (0)), 100000000, 0, -6), 0, (("plugins/ltac2/tac2print.mli", 69, 2137, 2137), ("plugins/ltac2/tac2print.mli", 69, 2137, 2181), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 30)), 0); Tag2 (("InvalidFormat", 1124), ((Tag3 ("exn", 7)), 0, (0), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ltac2_plugin__Tac2print", 31)), 2, 0); (("parse_format", 1125), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("format", 1122)), 0, (0)), 100000000, 0, -4)], (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("plugins/ltac2/tac2print.mli", 73, 2208, 2208), ("plugins/ltac2/tac2print.mli", 73, 2208, 2248), 0), 0, Tag1 ("Ltac2_plugin__Tac2print", 32)), 0)], "Ltac2_plugin__Tac2print", [("Ltac2_plugin__Tac2print", ("/\226\200\023x\165\157\238W\200\201\0270\206cS")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("UnivSubst", ("\190qu\031mc\130\181\003G]\132\"\219m)")); ("UnivProblem", ("6'\161\018\181\001.\253\000\141a6\171\1727\155")); ("UnivNames", ("%\151_\209%+JM$n\001\232\194n\178N")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UState", ("SD\203\215|\136\n\251\239\208\148\215C\n\167\005")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Store", ("/dT\252\145\179pq\216{\181\206\190K+U")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Bytes", ("C\134\194)\175\222\137p\205\246\244\r\241\164P\209")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("Section", ("\245\207\b\021\142v=\155#w\246}\"4b\006")); ("Safe_typing", (")\250?\164\145\132\241\127\186\152h+\145\"\237l")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Proofview_monad", ("\218\196\189S\147\216\129\221\231\224v\228O\024*\239")); ("Proofview", ("\245\140U\027\236\199\199&\242\156\199YG\250tA")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Pattern", ("\195C\140Wb=\022\222\208\227^K\003\020\215X")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("Nativevalues", ("8:\007\025e\226c,\001\171\146#l\210\171\152")); ("Nativelib", ("V\239\205Y1\147E:,\176\196Hy\1483|")); ("Nativecode", ("\190\185\255\006m\012\210\163\138Rz\247\15283\183")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Namegen", ("\187\222\224T\255\020\1808-\212*\164\131\177\157x")); ("Monad", ("\244\171T\157\194p\187\160\149\195{\132\222\020\253\148")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Ltac_pretype", ("\224\"\167\018i:U\172>\188\128$\r\252\020T")); ("Ltac2_plugin__Tac2ffi", ("\169\b=\\W\215`\141b}Ub\245\190f]")); ("Ltac2_plugin__Tac2expr", ("T\154\246\018\232\196\182\229\012\167v}\1367|\157")); ("Ltac2_plugin__Tac2dyn", ("\003M~\173\240\228^\184[\135\224\206\1576\163 ")); ("Ltac2_plugin", ("\165R\230\016\178\131\154\196w\014@m\191\218\194\020")); ("Logic_monad", ("\130\157\160Q\163vQ\137\184\2242\209\128\024\220i")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("IStream", ("#\199\192\148>\207Y\174\203(:\b5\177]\170")); ("Hook", ("\183\194\223\003\155\169',\187\240a;E\b\1396")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Glob_term", ("\165=a\227\160\153.\021_$\232\209T\236\153O")); ("Genlambda", ("\170}\024\241\141\222\136S\169\219\2212i\134KI")); ("Geninterp", ("2S\151\191\189\159\004\188;\224d\199|U\004\028")); ("Genarg", ("\1434\015\001\152\196\005s\156\136\195\185\247\b3\t")); ("Ftactic", ("K\172\205\128\241\162\160\201\202\1561o\180L\206:")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evd", ("\211\205p\193\216\129r\006\239oN\142ar\196\175")); ("Evar_kinds", ("\023L\186\132\218}\254\221\185\198\220\200h\003{\021")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("EConstr", ("\201aW\156\157;N\004\201V\208\006L\166\211)")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("DAst", ("\224/\200)\007\184ni\134\b\139\204\241\005w\212")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conversion", ("\158\150&\195M\tv\127|\029\158RRK\211A")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr_matching", ("\135\145\197fVk`\131U\213\181\222\1666\133\248")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CDebug", ("^4\210p7\239!3\138\138\213?\239`\250\157")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])

val parse_format : string -> format list
