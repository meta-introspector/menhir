val register_ltac :
  Vernacexpr.locality_flag ->
  ?deprecation:Deprecation.t -> Ltac_plugin.Tacexpr.tacdef_body list -> unit
type 'a grammar_tactic_prod_item_expr =
  'a Ltac_plugin.Pptactic.grammar_tactic_prod_item_expr =
    TacTerm of string
  | TacNonTerm of ('a * Names.Id.t option) Loc.located
type tactic_grammar_obj
type raw_argument = string * string option
type argument = Genarg.ArgT.any Extend.user_symbol
val add_tactic_notation :
  ?deprecation:Deprecation.t ->
  tactic_grammar_obj -> Ltac_plugin.Tacexpr.raw_tactic_expr -> unit
val add_tactic_notation_syntax :
  Vernacexpr.locality_flag ->
  int ->
  ?deprecation:Deprecation.t ->
  raw_argument grammar_tactic_prod_item_expr list -> tactic_grammar_obj
val register_tactic_notation_entry :
  string -> ('a, 'b, 'c) Genarg.genarg_type -> unit
val add_ml_tactic_notation :
  Ltac_plugin.Tacexpr.ml_tactic_name ->
  level:int ->
  ?deprecation:Deprecation.t ->
  argument grammar_tactic_prod_item_expr list list -> unit
val create_ltac_quotation :
  plugin:string ->
  string ->
  ('grm Loc.located -> Ltac_plugin.Tacexpr.raw_tactic_arg) ->
  'grm Pcoq.Entry.t * int option -> unit
val print_ltacs : unit -> unit
val print_located_tactic : Libnames.qualid -> unit
val print_ltac : Libnames.qualid -> Pp.t
type (_, 'a) ml_ty_sig =
    MLTyNil : ('a, 'a) ml_ty_sig
  | MLTyArg : ('r, 'a) ml_ty_sig -> (Geninterp.Val.t -> 'r, 'a) ml_ty_sig
val ml_tactic_extend :
  plugin:string ->
  name:string ->
  local:Vernacexpr.locality_flag ->
  ?deprecation:Deprecation.t ->
  ('r, unit Proofview.tactic) ml_ty_sig -> 'r -> unit
val ml_val_tactic_extend :
  plugin:string ->
  name:string ->
  local:Vernacexpr.locality_flag ->
  ?deprecation:Deprecation.t ->
  ('r, Geninterp.Val.t Ftactic.t) ml_ty_sig -> 'r -> unit
type _ ty_sig =
    TyNil : (Geninterp.interp_sign -> unit Proofview.tactic) ty_sig
  | TyIdent : string * 'r ty_sig -> 'r ty_sig
  | TyArg : ('a, 'b, 'c) Extend.ty_user_symbol *
      'r ty_sig -> ('c -> 'r) ty_sig
type ty_ml = TyML : 'r ty_sig * 'r -> ty_ml
val tactic_extend :
  string ->
  string -> level:Int.t -> ?deprecation:Deprecation.t -> ty_ml list -> unit
val eval_of_ty_ml :
  ty_ml ->
  Geninterp.Val.t list -> Geninterp.interp_sign -> unit Proofview.tactic
val clause_of_ty_ml :
  ty_ml ->
  Genarg.ArgT.any Extend.user_symbol grammar_tactic_prod_item_expr list
type ('a, 'b, 'c) argument_printer =
    'a Ltac_plugin.Pptactic.raw_extra_genarg_printer *
    'b Ltac_plugin.Pptactic.glob_extra_genarg_printer *
    'c Ltac_plugin.Pptactic.extra_genarg_printer
type ('a, 'b) argument_intern =
    ArgInternFun : ('a, 'b) Genintern.intern_fun -> ('a, 'b) argument_intern
  | ArgInternWit :
      ('a, 'b, 'c) Genarg.genarg_type -> ('a, 'b) argument_intern
type 'b argument_subst =
    ArgSubstFun : 'b Genintern.subst_fun -> 'b argument_subst
  | ArgSubstWit : ('a, 'b, 'c) Genarg.genarg_type -> 'b argument_subst
type ('b, 'c) argument_interp =
    ArgInterpRet : ('c, 'c) argument_interp
  | ArgInterpFun :
      ('b, Geninterp.Val.t) Geninterp.interp_fun -> ('b, 'c) argument_interp
  | ArgInterpWit :
      ('a, 'b, 'r) Genarg.genarg_type -> ('b, 'c) argument_interp
  | ArgInterpSimple :
      (Geninterp.interp_sign -> Environ.env -> Evd.evar_map -> 'b -> 'c) -> 
      ('b, 'c) argument_interp
type ('a, 'b, 'c) tactic_argument = {
  arg_parsing : 'a Vernacextend.argument_rule;
  arg_tag : 'c Geninterp.Val.tag option;
  arg_intern : ('a, 'b) argument_intern;
  arg_subst : 'b argument_subst;
  arg_interp : ('b, 'c) argument_interp;
  arg_printer : ('a, 'b, 'c) argument_printer;
}
val argument_extend :
  plugin:string ->
  name:string ->
  ('a, 'b, 'c) tactic_argument ->
  ("DEBUG:rule", [(("register_ltac", 1841), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Vernacexpr")), "locality_flag"), 0, (0)), 100000000, 0, -253), (Tag1 (Tag1 ("deprecation"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Deprecation")), "t"), 0, (0)), 100000000, 0, -252)], (0)), 100000000, 0, -251), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Tacexpr"), "tacdef_body"), 0, (0)), 100000000, 0, -250)], (0)), 100000000, 0, -249), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -248), 0), 100000000, 0, -247), 0), 100000000, 0, -246), 0), 100000000, 0, -245), 0, (("plugins/ltac/tacentries.mli", 18, 776, 776), ("plugins/ltac/tacentries.mli", 19, 843, 877), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 0)), 0); Tag1 (("grammar_tactic_prod_item_expr", 1842), ([((("a")), 100000000, 0, -239)], 1, Tag1 ([(("TacTerm", 436), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -240)]), 0, (("plugins/ltac/tacentries.mli", 25, 1045, 1045), ("plugins/ltac/tacentries.mli", 25, 1045, 1064), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 2)); (("TacNonTerm", 437), ([(Tag3 (Tag1 ((Tag2 ("Loc")), "located"), [(Tag2 ([((("a")), 100000000, 0, -239); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -244)], (0)), 100000000, 0, -243)]), 100000000, 0, -242)], (0)), 100000000, 0, -241)]), 0, (("plugins/ltac/tacentries.mli", 26, 1065, 1065), ("plugins/ltac/tacentries.mli", 26, 1065, 1117), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 4))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Pptactic"), "grammar_tactic_prod_item_expr"), [((("a")), 100000000, 0, -239)], (0)), 100000000, 0, -238)), [25], [0], 0, 0, (("plugins/ltac/tacentries.mli", 24, 961, 961), ("plugins/ltac/tacentries.mli", 26, 1065, 1117), 0), 0, 0, 0, Tag1 ("Ltac_plugin__Tacentries", 1)), 1, 0); Tag1 (("tactic_grammar_obj", 1843), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("plugins/ltac/tacentries.mli", 28, 1119, 1119), ("plugins/ltac/tacentries.mli", 28, 1119, 1142), 0), 0, 0, 0, Tag1 ("Ltac_plugin__Tacentries", 5)), 1, 0); Tag1 (("raw_argument", 1844), (0, 0, 0, 1, ((Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -235); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -237)], (0)), 100000000, 0, -236)]), 100000000, 0, -234)), 0, 0, 0, 0, (("plugins/ltac/tacentries.mli", 30, 1144, 1144), ("plugins/ltac/tacentries.mli", 30, 1144, 1186), 0), 0, 0, 0, Tag1 ("Ltac_plugin__Tacentries", 6)), 1, 0); Tag1 (("argument", 1845), (0, 0, 0, 1, ((Tag3 (Tag1 ((Tag2 ("Extend")), "user_symbol"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Genarg")), "ArgT"), "any"), 0, (0)), 100000000, 0, -233)], (0)), 100000000, 0, -232)), 0, 0, 0, 0, (("plugins/ltac/tacentries.mli", 35, 1359, 1359), ("plugins/ltac/tacentries.mli", 35, 1359, 1409), 0), 0, 0, 0, Tag1 ("Ltac_plugin__Tacentries", 7)), 1, 0); (("add_tactic_notation", 1846), ((Tag1 (Tag1 ("deprecation"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Deprecation")), "t"), 0, (0)), 100000000, 0, -231)], (0)), 100000000, 0, -230), (Tag1 (0, (Tag3 ((("tactic_grammar_obj", 1843)), 0, (0)), 100000000, 0, -229), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Tacexpr"), "raw_tactic_expr"), 0, (0)), 100000000, 0, -228), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -227), 0), 100000000, 0, -226), 0), 100000000, 0, -225), 0), 100000000, 0, -224), 0, (("plugins/ltac/tacentries.mli", 39, 1507, 1507), ("plugins/ltac/tacentries.mli", 41, 1587, 1612), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 8)), 0); (("add_tactic_notation_syntax", 1847), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Vernacexpr")), "locality_flag"), 0, (0)), 100000000, 0, -223), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -222), (Tag1 (Tag1 ("deprecation"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Deprecation")), "t"), 0, (0)), 100000000, 0, -221)], (0)), 100000000, 0, -220), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("grammar_tactic_prod_item_expr", 1842)), [(Tag3 ((("raw_argument", 1844)), 0, (0)), 100000000, 0, -219)], (0)), 100000000, 0, -218)], (0)), 100000000, 0, -217), (Tag3 ((("tactic_grammar_obj", 1843)), 0, (0)), 100000000, 0, -216), 0), 100000000, 0, -215), 0), 100000000, 0, -214), 0), 100000000, 0, -213), 0), 100000000, 0, -212), 0, (("plugins/ltac/tacentries.mli", 46, 1825, 1825), ("plugins/ltac/tacentries.mli", 49, 1967, 1987), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 9)), 0); (("register_tactic_notation_entry", 1848), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -211), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Genarg")), "genarg_type"), [((("a")), 100000000, 0, -208); ((("b")), 100000000, 0, -209); ((("c")), 100000000, 0, -210)], (0)), 100000000, 0, -207), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -206), 0), 100000000, 0, -205), 0), 100000000, 0, -204), 0, (("plugins/ltac/tacentries.mli", 51, 1989, 1989), ("plugins/ltac/tacentries.mli", 51, 1989, 2075), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 10)), 0); (("add_ml_tactic_notation", 1849), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Tacexpr"), "ml_tactic_name"), 0, (0)), 100000000, 0, -203), (Tag1 (("level"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -202), (Tag1 (Tag1 ("deprecation"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Deprecation")), "t"), 0, (0)), 100000000, 0, -201)], (0)), 100000000, 0, -200), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("grammar_tactic_prod_item_expr", 1842)), [(Tag3 ((("argument", 1845)), 0, (0)), 100000000, 0, -199)], (0)), 100000000, 0, -198)], (0)), 100000000, 0, -197)], (0)), 100000000, 0, -196), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -195), 0), 100000000, 0, -194), 0), 100000000, 0, -193), 0), 100000000, 0, -192), 0), 100000000, 0, -191), 0, (("plugins/ltac/tacentries.mli", 58, 2395, 2395), ("plugins/ltac/tacentries.mli", 59, 2485, 2543), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 11)), 0); (("create_ltac_quotation", 1850), ((Tag1 (("plugin"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -190), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -189), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Loc")), "located"), [((("grm")), 100000000, 0, -183)], (0)), 100000000, 0, -188), (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Tacexpr"), "raw_tactic_arg"), 0, (0)), 100000000, 0, -187), 0), 100000000, 0, -186), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [((("grm")), 100000000, 0, -183)], (0)), 100000000, 0, -182); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -185)], (0)), 100000000, 0, -184)]), 100000000, 0, -181), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -180), 0), 100000000, 0, -179), 0), 100000000, 0, -178), 0), 100000000, 0, -177), 0), 100000000, 0, -176), 0, (("plugins/ltac/tacentries.mli", 65, 2673, 2673), ("plugins/ltac/tacentries.mli", 66, 2728, 2810), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 12)), 0); (("print_ltacs", 1851), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -175), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -174), 0), 100000000, 0, -173), 0, (("plugins/ltac/tacentries.mli", 73, 3057, 3057), ("plugins/ltac/tacentries.mli", 73, 3057, 3087), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 13)), 0); (("print_located_tactic", 1852), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Libnames")), "qualid"), 0, (0)), 100000000, 0, -172), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -171), 0), 100000000, 0, -170), 0, (("plugins/ltac/tacentries.mli", 76, 3154, 3154), ("plugins/ltac/tacentries.mli", 76, 3154, 3204), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 14)), 0); (("print_ltac", 1853), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Libnames")), "qualid"), 0, (0)), 100000000, 0, -169), (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -168), 0), 100000000, 0, -167), 0, (("plugins/ltac/tacentries.mli", 79, 3252, 3252), ("plugins/ltac/tacentries.mli", 79, 3252, 3292), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 15)), 0); Tag1 (("ml_ty_sig", 1854), ([((("_")), 100000000, 0, -165); ((("a")), 100000000, 0, -166)], 2, Tag1 ([(("MLTyNil", 867), (0), ((Tag3 ((("ml_ty_sig", 1854)), [((("a")), 100000000, 0, -158); ((("a")), 100000000, 0, -158)], (0)), 100000000, 0, -157)), (("plugins/ltac/tacentries.mli", 85, 3407, 3407), ("plugins/ltac/tacentries.mli", 85, 3407, 3437), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 17)); (("MLTyArg", 868), ([(Tag3 ((("ml_ty_sig", 1854)), [((("r")), 100000000, 0, -161); ((("a")), 100000000, 0, -163)], (0)), 100000000, 0, -164)]), ((Tag3 ((("ml_ty_sig", 1854)), [(Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Geninterp")), "Val"), "t"), 0, (0)), 100000000, 0, -162), ((("r")), 100000000, 0, -161), 0), 100000000, 0, -160); ((("a")), 100000000, 0, -163)], (0)), 100000000, 0, -159)), (("plugins/ltac/tacentries.mli", 86, 3438, 3438), ("plugins/ltac/tacentries.mli", 86, 3438, 3509), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 18))], 0), 1, 0, [63; 15], [0; 0], 0, 0, (("plugins/ltac/tacentries.mli", 84, 3382, 3382), ("plugins/ltac/tacentries.mli", 86, 3438, 3509), 0), 0, 0, 0, Tag1 ("Ltac_plugin__Tacentries", 16)), 1, 0); (("ml_tactic_extend", 1855), ((Tag1 (("plugin"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -156), (Tag1 (("name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -155), (Tag1 (("local"), (Tag3 (Tag1 ((Tag2 ("Vernacexpr")), "locality_flag"), 0, (0)), 100000000, 0, -154), (Tag1 (Tag1 ("deprecation"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Deprecation")), "t"), 0, (0)), 100000000, 0, -153)], (0)), 100000000, 0, -152), (Tag1 (0, (Tag3 ((("ml_ty_sig", 1854)), [((("r")), 100000000, 0, -148); (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -151)], (0)), 100000000, 0, -150)], (0)), 100000000, 0, -149), (Tag1 (0, ((("r")), 100000000, 0, -148), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -147), 0), 100000000, 0, -146), 0), 100000000, 0, -145), 0), 100000000, 0, -144), 0), 100000000, 0, -143), 0), 100000000, 0, -142), 0), 100000000, 0, -141), 0, (("plugins/ltac/tacentries.mli", 88, 3511, 3511), ("plugins/ltac/tacentries.mli", 89, 3589, 3672), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 19)), 0); (("ml_val_tactic_extend", 1856), ((Tag1 (("plugin"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -140), (Tag1 (("name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -139), (Tag1 (("local"), (Tag3 (Tag1 ((Tag2 ("Vernacexpr")), "locality_flag"), 0, (0)), 100000000, 0, -138), (Tag1 (Tag1 ("deprecation"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Deprecation")), "t"), 0, (0)), 100000000, 0, -137)], (0)), 100000000, 0, -136), (Tag1 (0, (Tag3 ((("ml_ty_sig", 1854)), [((("r")), 100000000, 0, -132); (Tag3 (Tag1 ((Tag2 ("Ftactic")), "t"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Geninterp")), "Val"), "t"), 0, (0)), 100000000, 0, -135)], (0)), 100000000, 0, -134)], (0)), 100000000, 0, -133), (Tag1 (0, ((("r")), 100000000, 0, -132), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -131), 0), 100000000, 0, -130), 0), 100000000, 0, -129), 0), 100000000, 0, -128), 0), 100000000, 0, -127), 0), 100000000, 0, -126), 0), 100000000, 0, -125), 0, (("plugins/ltac/tacentries.mli", 96, 3993, 3993), ("plugins/ltac/tacentries.mli", 97, 4075, 4162), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 20)), 0); Tag1 (("ty_sig", 1857), ([((("_")), 100000000, 0, -124)], 1, Tag1 ([(("TyNil", 985), (0), ((Tag3 ((("ty_sig", 1857)), [(Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Geninterp")), "interp_sign"), 0, (0)), 100000000, 0, -111), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -110)], (0)), 100000000, 0, -109), 0), 100000000, 0, -108)], (0)), 100000000, 0, -107)), (("plugins/ltac/tacentries.mli", 104, 4294, 4294), ("plugins/ltac/tacentries.mli", 104, 4294, 4359), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 22)); (("TyIdent", 986), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -114); (Tag3 ((("ty_sig", 1857)), [((("r")), 100000000, 0, -113)], (0)), 100000000, 0, -115)]), ((Tag3 ((("ty_sig", 1857)), [((("r")), 100000000, 0, -113)], (0)), 100000000, 0, -112)), (("plugins/ltac/tacentries.mli", 105, 4360, 4360), ("plugins/ltac/tacentries.mli", 105, 4360, 4403), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 23)); (("TyArg", 987), ([(Tag3 (Tag1 ((Tag2 ("Extend")), "ty_user_symbol"), [((("a")), 100000000, 0, -121); ((("b")), 100000000, 0, -122); ((("c")), 100000000, 0, -119)], (0)), 100000000, 0, -120); (Tag3 ((("ty_sig", 1857)), [((("r")), 100000000, 0, -118)], (0)), 100000000, 0, -123)]), ((Tag3 ((("ty_sig", 1857)), [(Tag1 (0, ((("c")), 100000000, 0, -119), ((("r")), 100000000, 0, -118), 0), 100000000, 0, -117)], (0)), 100000000, 0, -116)), (("plugins/ltac/tacentries.mli", 106, 4404, 4404), ("plugins/ltac/tacentries.mli", 106, 4404, 4481), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 24))], 0), 1, 0, [63], [0], 0, 0, (("plugins/ltac/tacentries.mli", 103, 4278, 4278), ("plugins/ltac/tacentries.mli", 106, 4404, 4481), 0), 0, 0, 0, Tag1 ("Ltac_plugin__Tacentries", 21)), 1, 0); Tag1 (("ty_ml", 1858), (0, 0, Tag1 ([(("TyML", 989), ([(Tag3 ((("ty_sig", 1857)), [((("r")), 100000000, 0, -106)], (0)), 100000000, 0, -105); ((("r")), 100000000, 0, -106)]), ((Tag3 ((("ty_ml", 1858)), 0, (0)), 100000000, 0, -104)), (("plugins/ltac/tacentries.mli", 108, 4483, 4496), ("plugins/ltac/tacentries.mli", 108, 4483, 4526), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 26))], 0), 1, 0, 0, 0, 0, 0, (("plugins/ltac/tacentries.mli", 108, 4483, 4483), ("plugins/ltac/tacentries.mli", 108, 4483, 4526), 0), 0, 0, 0, Tag1 ("Ltac_plugin__Tacentries", 25)), 1, 0); (("tactic_extend", 1859), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -103), (Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -102), (Tag1 (("level"), (Tag3 (Tag1 ((Tag2 ("Int")), "t"), 0, (0)), 100000000, 0, -101), (Tag1 (Tag1 ("deprecation"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Deprecation")), "t"), 0, (0)), 100000000, 0, -100)], (0)), 100000000, 0, -99), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("ty_ml", 1858)), 0, (0)), 100000000, 0, -98)], (0)), 100000000, 0, -97), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -96), 0), 100000000, 0, -95), 0), 100000000, 0, -94), 0), 100000000, 0, -93), 0), 100000000, 0, -92), 0), 100000000, 0, -91), 0, (("plugins/ltac/tacentries.mli", 110, 4528, 4528), ("plugins/ltac/tacentries.mli", 111, 4583, 4633), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 27)), 0); (("eval_of_ty_ml", 1860), ((Tag1 (0, (Tag3 ((("ty_ml", 1858)), 0, (0)), 100000000, 0, -90), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Geninterp")), "Val"), "t"), 0, (0)), 100000000, 0, -89)], (0)), 100000000, 0, -88), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Geninterp")), "interp_sign"), 0, (0)), 100000000, 0, -87), (Tag3 (Tag1 ((Tag2 ("Proofview")), "tactic"), [(Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -86)], (0)), 100000000, 0, -85), 0), 100000000, 0, -84), 0), 100000000, 0, -83), 0), 100000000, 0, -82), 0, (("plugins/ltac/tacentries.mli", 113, 4635, 4635), ("plugins/ltac/tacentries.mli", 117, 4719, 4742), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 28)), 0); (("clause_of_ty_ml", 1861), ((Tag1 (0, (Tag3 ((("ty_ml", 1858)), 0, (0)), 100000000, 0, -81), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("grammar_tactic_prod_item_expr", 1842)), [(Tag3 (Tag1 ((Tag2 ("Extend")), "user_symbol"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Genarg")), "ArgT"), "any"), 0, (0)), 100000000, 0, -80)], (0)), 100000000, 0, -79)], (0)), 100000000, 0, -78)], (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0, (("plugins/ltac/tacentries.mli", 120, 4790, 4790), ("plugins/ltac/tacentries.mli", 122, 4823, 4894), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 29)), 0); Tag1 (("argument_printer", 1862), ([((("a")), 100000000, 0, -71); ((("b")), 100000000, 0, -73); ((("c")), 100000000, 0, -75)], 3, 0, 1, ((Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Pptactic"), "raw_extra_genarg_printer"), [((("a")), 100000000, 0, -71)], (0)), 100000000, 0, -70); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Pptactic"), "glob_extra_genarg_printer"), [((("b")), 100000000, 0, -73)], (0)), 100000000, 0, -72); (Tag3 (Tag1 (Tag1 ((Tag2 ("Ltac_plugin")), "Pptactic"), "extra_genarg_printer"), [((("c")), 100000000, 0, -75)], (0)), 100000000, 0, -74)]), 100000000, 0, -69)), [46; 46; 46], [0; 0; 0], 0, 0, (("plugins/ltac/tacentries.mli", 149, 5776, 5776), ("plugins/ltac/tacentries.mli", 152, 5896, 5930), 0), 0, 0, 0, Tag1 ("Ltac_plugin__Tacentries", 30)), 1, 0); Tag1 (("argument_intern", 1863), ([((("a")), 100000000, 0, -67); ((("b")), 100000000, 0, -68)], 2, Tag1 ([(("ArgInternFun", 1735), ([(Tag3 (Tag1 ((Tag2 ("Genintern")), "intern_fun"), [((("a")), 100000000, 0, -59); ((("b")), 100000000, 0, -60)], (0)), 100000000, 0, -61)]), ((Tag3 ((("argument_intern", 1863)), [((("a")), 100000000, 0, -59); ((("b")), 100000000, 0, -60)], (0)), 100000000, 0, -58)), (("plugins/ltac/tacentries.mli", 155, 5964, 5964), ("plugins/ltac/tacentries.mli", 155, 5964, 6038), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 33)); (("ArgInternWit", 1736), ([(Tag3 (Tag1 ((Tag2 ("Genarg")), "genarg_type"), [((("a")), 100000000, 0, -63); ((("b")), 100000000, 0, -64); ((("c")), 100000000, 0, -66)], (0)), 100000000, 0, -65)]), ((Tag3 ((("argument_intern", 1863)), [((("a")), 100000000, 0, -63); ((("b")), 100000000, 0, -64)], (0)), 100000000, 0, -62)), (("plugins/ltac/tacentries.mli", 156, 6039, 6039), ("plugins/ltac/tacentries.mli", 156, 6039, 6115), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 34))], 0), 1, 0, [63; 63], [0; 0], 0, 0, (("plugins/ltac/tacentries.mli", 154, 5932, 5932), ("plugins/ltac/tacentries.mli", 156, 6039, 6115), 0), 0, 0, 0, Tag1 ("Ltac_plugin__Tacentries", 32)), 1, 0); Tag1 (("argument_subst", 1864), ([((("b")), 100000000, 0, -57)], 1, Tag1 ([(("ArgSubstFun", 1738), ([(Tag3 (Tag1 ((Tag2 ("Genintern")), "subst_fun"), [((("b")), 100000000, 0, -50)], (0)), 100000000, 0, -51)]), ((Tag3 ((("argument_subst", 1864)), [((("b")), 100000000, 0, -50)], (0)), 100000000, 0, -49)), (("plugins/ltac/tacentries.mli", 159, 6142, 6142), ("plugins/ltac/tacentries.mli", 159, 6142, 6201), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 36)); (("ArgSubstWit", 1739), ([(Tag3 (Tag1 ((Tag2 ("Genarg")), "genarg_type"), [((("a")), 100000000, 0, -55); ((("b")), 100000000, 0, -53); ((("c")), 100000000, 0, -56)], (0)), 100000000, 0, -54)]), ((Tag3 ((("argument_subst", 1864)), [((("b")), 100000000, 0, -53)], (0)), 100000000, 0, -52)), (("plugins/ltac/tacentries.mli", 160, 6202, 6202), ("plugins/ltac/tacentries.mli", 160, 6202, 6270), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 37))], 0), 1, 0, [63], [0], 0, 0, (("plugins/ltac/tacentries.mli", 158, 6117, 6117), ("plugins/ltac/tacentries.mli", 160, 6202, 6270), 0), 0, 0, 0, Tag1 ("Ltac_plugin__Tacentries", 35)), 1, 0); Tag1 (("argument_interp", 1865), ([((("b")), 100000000, 0, -47); ((("c")), 100000000, 0, -48)], 2, Tag1 ([(("ArgInterpRet", 1786), (0), ((Tag3 ((("argument_interp", 1865)), [((("c")), 100000000, 0, -25); ((("c")), 100000000, 0, -25)], (0)), 100000000, 0, -24)), (("plugins/ltac/tacentries.mli", 163, 6304, 6304), ("plugins/ltac/tacentries.mli", 163, 6304, 6345), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 39)); (("ArgInterpFun", 1787), ([(Tag3 (Tag1 ((Tag2 ("Geninterp")), "interp_fun"), [((("b")), 100000000, 0, -27); (Tag3 (Tag1 (Tag1 ((Tag2 ("Geninterp")), "Val"), "t"), 0, (0)), 100000000, 0, -30)], (0)), 100000000, 0, -29)]), ((Tag3 ((("argument_interp", 1865)), [((("b")), 100000000, 0, -27); ((("c")), 100000000, 0, -28)], (0)), 100000000, 0, -26)), (("plugins/ltac/tacentries.mli", 164, 6346, 6346), ("plugins/ltac/tacentries.mli", 164, 6346, 6433), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 40)); (("ArgInterpWit", 1788), ([(Tag3 (Tag1 ((Tag2 ("Genarg")), "genarg_type"), [((("a")), 100000000, 0, -35); ((("b")), 100000000, 0, -32); ((("r")), 100000000, 0, -36)], (0)), 100000000, 0, -34)]), ((Tag3 ((("argument_interp", 1865)), [((("b")), 100000000, 0, -32); ((("c")), 100000000, 0, -33)], (0)), 100000000, 0, -31)), (("plugins/ltac/tacentries.mli", 165, 6434, 6434), ("plugins/ltac/tacentries.mli", 165, 6434, 6510), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 41)); (("ArgInterpSimple", 1789), ([(Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Geninterp")), "interp_sign"), 0, (0)), 100000000, 0, -46), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Environ")), "env"), 0, (0)), 100000000, 0, -45), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Evd")), "evar_map"), 0, (0)), 100000000, 0, -44), (Tag1 (0, ((("b")), 100000000, 0, -38), ((("c")), 100000000, 0, -39), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0), 100000000, 0, -40)]), ((Tag3 ((("argument_interp", 1865)), [((("b")), 100000000, 0, -38); ((("c")), 100000000, 0, -39)], (0)), 100000000, 0, -37)), (("plugins/ltac/tacentries.mli", 166, 6511, 6511), ("plugins/ltac/tacentries.mli", 167, 6531, 6627), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 42))], 0), 1, 0, [63; 31], [0; 0], 0, 0, (("plugins/ltac/tacentries.mli", 162, 6272, 6272), ("plugins/ltac/tacentries.mli", 167, 6531, 6627), 0), 0, 0, 0, Tag1 ("Ltac_plugin__Tacentries", 38)), 1, 0); Tag1 (("tactic_argument", 1866), ([((("a")), 100000000, 0, -15); ((("b")), 100000000, 0, -20); ((("c")), 100000000, 0, -18)], 3, [[(("arg_parsing", 1834), 0, (Tag3 (Tag1 ((Tag2 ("Vernacextend")), "argument_rule"), [((("a")), 100000000, 0, -15)], (0)), 100000000, 0, -14), (("plugins/ltac/tacentries.mli", 170, 6667, 6669), ("plugins/ltac/tacentries.mli", 170, 6667, 6713), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 46)); (("arg_tag", 1835), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Geninterp")), "Val"), "tag"), [((("c")), 100000000, 0, -18)], (0)), 100000000, 0, -17)], (0)), 100000000, 0, -16), (("plugins/ltac/tacentries.mli", 171, 6714, 6716), ("plugins/ltac/tacentries.mli", 171, 6714, 6754), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 47)); (("arg_intern", 1836), 0, (Tag3 ((("argument_intern", 1863)), [((("a")), 100000000, 0, -15); ((("b")), 100000000, 0, -20)], (0)), 100000000, 0, -19), (("plugins/ltac/tacentries.mli", 172, 6755, 6757), ("plugins/ltac/tacentries.mli", 172, 6755, 6795), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 48)); (("arg_subst", 1837), 0, (Tag3 ((("argument_subst", 1864)), [((("b")), 100000000, 0, -20)], (0)), 100000000, 0, -21), (("plugins/ltac/tacentries.mli", 173, 6796, 6798), ("plugins/ltac/tacentries.mli", 173, 6796, 6828), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 49)); (("arg_interp", 1838), 0, (Tag3 ((("argument_interp", 1865)), [((("b")), 100000000, 0, -20); ((("c")), 100000000, 0, -18)], (0)), 100000000, 0, -22), (("plugins/ltac/tacentries.mli", 174, 6829, 6831), ("plugins/ltac/tacentries.mli", 174, 6829, 6869), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 50)); (("arg_printer", 1839), 0, (Tag3 ((("argument_printer", 1862)), [((("a")), 100000000, 0, -15); ((("b")), 100000000, 0, -20); ((("c")), 100000000, 0, -18)], (0)), 100000000, 0, -23), (("plugins/ltac/tacentries.mli", 175, 6870, 6872), ("plugins/ltac/tacentries.mli", 175, 6870, 6916), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 51))]], 1, 0, [63; 63; 63], [0; 0; 0], 0, 0, (("plugins/ltac/tacentries.mli", 169, 6629, 6629), ("plugins/ltac/tacentries.mli", 176, 6917, 6918), 0), 0, 0, 0, Tag1 ("Ltac_plugin__Tacentries", 43)), 1, 0); (("argument_extend", 1867), ((Tag1 (("plugin"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -13), (Tag1 (("name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -12), (Tag1 (0, (Tag3 ((("tactic_argument", 1866)), [((("a")), 100000000, 0, -7); ((("b")), 100000000, 0, -8); ((("c")), 100000000, 0, -9)], (0)), 100000000, 0, -11), (Tag2 ([(Tag3 (Tag1 ((Tag2 ("Genarg")), "genarg_type"), [((("a")), 100000000, 0, -7); ((("b")), 100000000, 0, -8); ((("c")), 100000000, 0, -9)], (0)), 100000000, 0, -6); (Tag3 (Tag1 (Tag1 ((Tag2 ("Pcoq")), "Entry"), "t"), [((("a")), 100000000, 0, -7)], (0)), 100000000, 0, -10)]), 100000000, 0, -5), 0), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("plugins/ltac/tacentries.mli", 178, 6920, 6920), ("plugins/ltac/tacentries.mli", 179, 7006, 7057), 0), 0, Tag1 ("Ltac_plugin__Tacentries", 52)), 0)], "Ltac_plugin__Tacentries", [("Ltac_plugin__Tacentries", ("o\020\217\140\b\208\134\196\128\150z\236WY\147 ")); ("Z", ("\253\196\2168\027\199O\134\220\218\031'\1484\233o")); ("Vmvalues", (",8\236\232\209\245%\153\136\237\208@G}\197\017")); ("Vmemitcodes", ("wCd\138\165\158DD\241gH\236.\210\197\247")); ("Vmbytecodes", ("\025\021\151\137Dx\149W\236+[\143f\208\160\016")); ("Vernacextend", ("I\b\021\167O\210\166\190\253\025\018/\153\025\217\004")); ("Vernacexpr", ("Lu|g\028\024j\193\000\234\175\209&\211]\137")); ("Values", ("\215\173\011'\168;\170\245\187k\145_\006#\240\182")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Unix", (":B72R\011\005Sj\189)\011\239PH\254")); ("UnivSubst", ("\190qu\031mc\130\181\003G]\132\"\219m)")); ("UnivProblem", ("6'\161\018\181\001.\253\000\141a6\171\1727\155")); ("UnivNames", ("%\151_\209%+JM$n\001\232\194n\178N")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Unification", ("\017\027\157=\255\1914L\020\213h\154.\219\005\170")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UState", ("SD\203\215|\136\n\251\239\208\148\215C\n\167\005")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("Typeclasses", ("KO\1297x\192\210\231\001\1824l\135\192\160|")); ("Type_errors", ("7\157\162-\214M\206\196\228\191\005v\134\177\144\134")); ("TransparentState", ("\131\027{\137\195\003'\143o\025\246\180\139_;\145")); ("Tok", ("\162\196\180\135\219\014\184\165;\207\025\215\176g\188\225")); ("Tactypes", ("\143E\135*\195\151\144H\151M\011($\017\159\203")); ("Tactics", ("7\154?u\169\241\190R\245\187\153\020GE\029\215")); ("Tacred", ("\133d\143\1310z\030\237\232\002\001\025\147\140\215:")); ("Summary", ("\148G\135\226\024L3\246\021\028U\146\164`\253\250")); ("Store", ("/dT\252\145\179pq\216{\181\206\190K+U")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Random", ("\020\005Xq\171\026\218\152X\135\254\023\133zK\200")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Complex", ("\230N\233\014\221\199\177\014\200\251\226l\017$\015\142")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Bigarray", ("|\145\154\248\018\173\141\251\0003\184\221\224\208\140\007")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stateid", ("\183\165\247\166~\005\017.\179f.\178n\255(\137")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("Section", ("\245\207\b\021\142v=\155#w\246}\"4b\006")); ("Safe_typing", (")\250?\164\145\132\241\127\186\152h+\145\"\237l")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Rtree", ("\237\188\192\r\017#\226\164>+T\200\247\241\169\022")); ("Retroknowledge", ("\175\0164\136\025:\183\216\017\209\176\218\188R\023\023")); ("RetrieveObl", ("\181(\0225\214z\024#d\246.M\015.i\210")); ("Reductionops", ("\179\023P\218\146Uh\014IS\196C\031q~#")); ("Redexpr", ("\181\250o\134\007\001\242+$\149)\204\226\"\0240")); ("Range", ("\218\130\001r\237\r\144\171\164\021l\155\196\143sg")); ("Pvernac", ("\030z\016\002I\233\195\217\026PC5\147(\186\252")); ("Proofview_monad", ("\218\196\189S\147\216\129\221\231\224v\228O\024*\239")); ("Proofview", ("\245\140U\027\236\199\199&\242\156\199YG\250tA")); ("Proof_using", ("\015\162\022\031Y\152\208\231;\015\140;\163\177\251\196")); ("Proof_bullet", ("\249\179=\253g\211\149\212\t\217_0\179\197k\179")); ("Proof", ("\249\030\200g\248\164o&\tS\132\rTl\1736")); ("Primred", ("\158G\192\182\224\196\144*\174y_E\165\012\137C")); ("Pretyping", ("\151\160\191\149\149Ff\195\171g\189\156\r\166n\189")); ("Pretype_errors", ("\155\229\201\176\163\234\203C\127\227\141\174j\199\200H")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Pcoq", ("\231\158\223M\188\002_J\154\240\176\002\022p\243\154")); ("Pattern", ("\195C\140Wb=\022\222\208\227^K\003\020\215X")); ("Parray", ("'xl\181\245\012}\163\218\003\141\183\245o\236n")); ("Opaqueproof", ("R\001\162C\200\178s\134O\204>Q\222%\130Q")); ("NumTok", ("vd\023^\251\244B\166\145'\156\196-0\027\169")); ("Notationextern", ("\000\022b5`t\134]\192f4\131\187\192\152\160")); ("Notation_term", ("5\002\017\217b\193nc>\239\239\237\244\031\173?")); ("Notation", ("\243\219),\220\160v\230\t$\246\188\252\172\152\147")); ("NeList", ("$\131M\175\196\245\161\207\129\012?\158\175\138\160\247")); ("Nativevalues", ("8:\007\025e\226c,\001\171\146#l\210\171\152")); ("Nativelib", ("V\239\205Y1\147E:,\176\196Hy\1483|")); ("Nativecode", ("\190\185\255\006m\012\210\163\138Rz\247\15283\183")); ("Nametab", ("1\018\163\254\225\2178\025DI\0271Q\198\134\140")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Namegen", ("\187\222\224T\255\020\1808-\212*\164\131\177\157x")); ("Monad", ("\244\171T\157\194p\187\160\149\195{\132\222\020\253\148")); ("Modintern", ("F\222V\246R\143{\n\240\004;;;\011\026\223")); ("Mod_subst", ("O\175\2252UD\135\221\154U\161/\231\150\236\n")); ("Metasyntax", ("\177D\147\n?i\139\193\238 \018\030)\\\244\\")); ("Ltac_pretype", ("\224\"\167\018i:U\172>\188\128$\r\252\020T")); ("Ltac_plugin__Tacexpr", ("lM\188\244SSB<\139\160F_\240|\128[")); ("Ltac_plugin__Pptactic", ("\029\205\202\170\1403e\153\197\247-\227\154\2531[")); ("Ltac_plugin", ("\1495\201\148\025F\172$\016P\190\1821b4-")); ("Logic_monad", ("\130\157\160Q\163vQ\137\184\2242\209\128\024\220i")); ("Logic", ("\214\234\234\223\014\197\147\165\158f.$\163\164\245Z")); ("Locus", ("_\002\003W\246\181\225\242Uf\139\226\176\174\192I")); ("Locality", ("\204\134r\227\235'\016\197\215r\210\133\242\226U%")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Libobject", ("\132}t\226hl\213L\210\172\167pc\012~\129")); ("Libnames", ("fp\0255\167\162\209\153\137\161\169#\246\193\003\198")); ("Lib", ("8\018\021\210\020\136$\149\164=\007\002\218\026RX")); ("Inv", ("\249\160_\012\n1\202C\204\171\024\017$\025\226\138")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Ind_tables", ("\1586xu\131C\135\176\222\242\178r\031D,\196")); ("Impargs", ("\021\197\1992>\rm\185\141\"iHY\133\138/")); ("Hook", ("\183\194\223\003\155\169',\187\240a;E\b\1396")); ("Hints", ("\007\130]H\\t(\131\000}\205\137H\148\250\166")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Gramlib__Stream", ("\248\\H\205_76\253\136\146\200\031\165\021=t")); ("Gramlib__Plexing", ("\028\200j\003G\198\183\184f\243\148a\020\011\160\171")); ("Gramlib__LStream", ("B\143\148\148@\016M\192w\155\223\189\218\224\002\004")); ("Gramlib__Grammar", ("zuU\178r\159\234NC\015_hKT\240\151")); ("Gramlib__Gramext", ("B\171oA\172\212\187>\175\233Q\145\"\176TM")); ("Gramlib", ("\154\143\210e\021i\246\176\224\194\220\217\007\145\139A")); ("Goptions", ("i>Rt=\183g\153\190\144\235u\248\247*e")); ("Goal_select", ("\235$\175\023t\178\194.Ivlz\005\211\173\n")); ("Globnames", ("W\004\172T\214\181H\220\232\160LSW\006\130\226")); ("Glob_term", ("\165=a\227\160\153.\021_$\232\209T\236\153O")); ("GlobEnv", ("(\152\019ok\006R\183\193\145\137\133<\171\005\231")); ("Genredexpr", ("rz\204\143\007`VgI\195P\168sO\198\012")); ("Genprint", ("\143p6\014\255\159+\211\187\236\220H\237\131\171\220")); ("Genlambda", ("\170}\024\241\141\222\136S\169\219\2212i\134KI")); ("Geninterp", ("2S\151\191\189\159\004\188;\224d\199|U\004\028")); ("Genintern", ("\152Ac\019=n\235\197\141\224T\162\192\148eg")); ("Genarg", ("\1434\015\001\152\196\005s\156\136\195\185\247\b3\t")); ("Future", ("\158b\028\190\203\016U\128\195O\140\249\240\129\252s")); ("Ftactic", ("K\172\205\128\241\162\160\201\202\1561o\180L\206:")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Extend", ("\179&!W\163V\006\245\018\168\021\001\224s\168\234")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evd", ("\211\205p\193\216\129r\006\239oN\142ar\196\175")); ("Evarutil", ("\005\175\132e\164O\223svi \252\232\138\022\137")); ("Evarsolve", ("\000&\228\016}j\199\t\229\173\127\024\219\199\184\178")); ("Evardefine", ("\178\167R\199\158\242\001Y\215<\151\020\206\153\227\019")); ("Evar_kinds", ("\023L\186\132\218}\254\221\185\198\220\200h\003{\021")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Equality", ("M\157\199R]=\020;\029s@\210\1789y\163")); ("Environ", ("\171b\1579\229<\003Z\147IL\225X\254\182\204")); ("Entries", ("\172\201\198\221Ap\027_{\174\141C\021\";p")); ("EConstr", ("\201aW\156\157;N\004\201V\208\006L\166\211)")); ("Dyn", ("\131z`\205v\2306\007x\027&K.?;\169")); ("Deprecation", ("\226:\146\245\190;\1929\254@\247a\218\244\134\189")); ("Decls", ("\140C{$\142?\215\153\180\186h;\153\139\187\129")); ("Declaremods", ("\019d|\168<\144\239o\017\222\248K^\157\198\179")); ("Declare", ("\ndh\139\180\185\245\190\133\240\127A\190b\197\023")); ("Declarations", ("\239\137n\019\030w$\182\166z^{\b\206\163\175")); ("DAst", ("\224/\200)\007\184ni\134\b\139\204\241\005w\212")); ("Coqlib", ("'\226\164\143\129\221\158\224\247\247\160\190~\171\191\198")); ("Cooking", ("\019\218\179\016\0257\132\194\226|P\015\149,.\181")); ("Conversion", ("\158\150&\195M\tv\127|\029\158RRK\211A")); ("Conv_oracle", ("\149\214\252\230:&\015\145\149My<\185\141\240\186")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constrintern", ("\221\031i\248\218\212\161/UQA\147\1348GM")); ("Constrexpr", ("p'r\245\184chL\183\249\"\213]\1741\237")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("Coercionops", ("\238\240\220\191\201\bMazv\159\227\236?\147>")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CWarnings", ("\132\220\150\227\215\239t\217\132\220'JX\188\246c")); ("CUnix", ("\140Zl\153\167\011J\015\005|th\247OTu")); ("CString", ("\243~4C\023~\169\148x\206\165\207\195\177Q\184")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CPrimitives", ("\007\129v\027\244\128\227\180\b\224\129\1582\237\175\182")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CLexer", ("\158\155\242\159%gC\237\011\196\158\255\163\217\239G")); ("CEphemeron", ("\204I\179-\206(x4\173\229\250\001PkH\151")); ("CDebug", ("^4\210p7\239!3\138\138\213?\239`\250\157")); ("CClosure", ("\167\b\022\241V-\r\253\b\002\000j]\223%\142")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("Attributes", ("\2145\146P\224\163B1\135\232\204SD\129^\141")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [(0)])
('a, 'b, 'c) Genarg.genarg_type * 'a Pcoq.Entry.t
