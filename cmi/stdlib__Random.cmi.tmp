val init : int -> unit
val full_init : int array -> unit
val self_init : unit -> unit
val bits : unit -> int
val int : int -> int
val full_int : int -> int
val int32 : Int32.t -> Int32.t
val nativeint : Nativeint.t -> Nativeint.t
val int64 : Int64.t -> Int64.t
val float : float -> float
val bool : unit -> bool
val bits32 : unit -> Int32.t
val bits64 : unit -> Int64.t
val nativebits : unit -> Nativeint.t
module State :
  sig
    type t
    val make : int array -> t
    val make_self_init : unit -> t
    val copy : t -> t
    val bits : t -> int
    val int : t -> int -> int
    val full_int : t -> int -> int
    val int32 : t -> Int32.t -> Int32.t
    val nativeint : t -> Nativeint.t -> Nativeint.t
    val int64 : t -> Int64.t -> Int64.t
    val float : t -> float -> float
    val bool : t -> bool
    val bits32 : t -> Int32.t
    val bits64 : t -> Int64.t
    val nativebits : t -> Nativeint.t
    val split : t -> t
    val to_binary_string : t -> string
    val of_binary_string : string -> t
  end
val get_state : unit -> State.t
val set_state : State.t -> unit("DEBUG:rule", [(("init", 433), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -53), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("random.mli", 31, 1727, 1727), ("random.mli", 31, 1727, 1749), 0), 0, Tag1 ("Stdlib__Random", 0)), 0); (("full_init", 434), ((Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -50)], (0)), 100000000, 0, -49), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("random.mli", 35, 1893, 1893), ("random.mli", 35, 1893, 1926), 0), 0, Tag1 ("Stdlib__Random", 1)), 0); (("self_init", 435), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -46), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0, (("random.mli", 38, 1987, 1987), ("random.mli", 38, 1987, 2015), 0), 0, Tag1 ("Stdlib__Random", 2)), 0); (("bits", 436), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -43), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("random.mli", 45, 2351, 2351), ("random.mli", 45, 2351, 2373), 0), 0, Tag1 ("Stdlib__Random", 3)), 0); (("int", 437), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -40), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -39), 0), 100000000, 0, -38), 0, (("random.mli", 50, 2511, 2511), ("random.mli", 50, 2511, 2531), 0), 0, Tag1 ("Stdlib__Random", 4)), 0); (("full_int", 438), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -37), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0, (("random.mli", 55, 2695, 2695), ("random.mli", 55, 2695, 2720), 0), 0, Tag1 ("Stdlib__Random", 5)), 0); (("int32", 439), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Int32"), "t"), 0, (0)), 100000000, 0, -34), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Int32"), "t"), 0, (0)), 100000000, 0, -33), 0), 100000000, 0, -32), 0, (("random.mli", 66, 3190, 3190), ("random.mli", 66, 3190, 3220), 0), 0, Tag1 ("Stdlib__Random", 6)), 0); (("nativeint", 440), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Nativeint"), "t"), 0, (0)), 100000000, 0, -31), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Nativeint"), "t"), 0, (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0, (("random.mli", 70, 3360, 3360), ("random.mli", 70, 3360, 3402), 0), 0, Tag1 ("Stdlib__Random", 7)), 0); (("int64", 441), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Int64"), "t"), 0, (0)), 100000000, 0, -28), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Int64"), "t"), 0, (0)), 100000000, 0, -27), 0), 100000000, 0, -26), 0, (("random.mli", 74, 3546, 3546), ("random.mli", 74, 3546, 3576), 0), 0, Tag1 ("Stdlib__Random", 8)), 0); (("float", 442), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -25), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("random.mli", 78, 3716, 3716), ("random.mli", 78, 3716, 3742), 0), 0, Tag1 ("Stdlib__Random", 9)), 0); (("bool", 443), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -22), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("random.mli", 84, 3947, 3947), ("random.mli", 84, 3947, 3970), 0), 0, Tag1 ("Stdlib__Random", 10)), 0); (("bits32", 444), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -19), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Int32"), "t"), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("random.mli", 87, 4049, 4049), ("random.mli", 87, 4049, 4077), 0), 0, Tag1 ("Stdlib__Random", 11)), 0); (("bits64", 445), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -16), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Int64"), "t"), 0, (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0, (("random.mli", 92, 4209, 4209), ("random.mli", 92, 4209, 4237), 0), 0, Tag1 ("Stdlib__Random", 12)), 0); (("nativebits", 446), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -13), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Nativeint"), "t"), 0, (0)), 100000000, 0, -12), 0), 100000000, 0, -11), 0, (("random.mli", 97, 4369, 4369), ("random.mli", 97, 4369, 4405), 0), 0, Tag1 ("Stdlib__Random", 13)), 0); Tag3 (("State", 447), 0, (Tag1 ([Tag1 (("t", 451), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("random.mli", 113, 4920, 4922), ("random.mli", 113, 4920, 4928), 0), 0, 0, 0, Tag1 ("Stdlib__Random", 14)), 1, 0); (("make", 452), ((Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -117)], (0)), 100000000, 0, -116), (Tag3 ((("t", 451)), 0, (0)), 100000000, 0, -115), 0), 100000000, 0, -114), 0, (("random.mli", 116, 4964, 4966), ("random.mli", 116, 4964, 4991), 0), 0, Tag1 ("Stdlib__Random", 15)), 0); (("make_self_init", 453), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -113), (Tag3 ((("t", 451)), 0, (0)), 100000000, 0, -112), 0), 100000000, 0, -111), 0, (("random.mli", 119, 5060, 5062), ("random.mli", 119, 5060, 5092), 0), 0, Tag1 ("Stdlib__Random", 16)), 0); (("copy", 454), ((Tag1 (0, (Tag3 ((("t", 451)), 0, (0)), 100000000, 0, -110), (Tag3 ((("t", 451)), 0, (0)), 100000000, 0, -109), 0), 100000000, 0, -108), 0, (("random.mli", 124, 5263, 5265), ("random.mli", 124, 5263, 5282), 0), 0, Tag1 ("Stdlib__Random", 17)), 0); (("bits", 455), ((Tag1 (0, (Tag3 ((("t", 451)), 0, (0)), 100000000, 0, -107), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -106), 0), 100000000, 0, -105), 0, (("random.mli", 127, 5327, 5329), ("random.mli", 127, 5327, 5348), 0), 0, Tag1 ("Stdlib__Random", 18)), 0); (("int", 456), ((Tag1 (0, (Tag3 ((("t", 451)), 0, (0)), 100000000, 0, -104), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -103), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -102), 0), 100000000, 0, -101), 0), 100000000, 0, -100), 0, (("random.mli", 128, 5349, 5351), ("random.mli", 128, 5349, 5376), 0), 0, Tag1 ("Stdlib__Random", 19)), 0); (("full_int", 457), ((Tag1 (0, (Tag3 ((("t", 451)), 0, (0)), 100000000, 0, -99), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -98), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -97), 0), 100000000, 0, -96), 0), 100000000, 0, -95), 0, (("random.mli", 129, 5377, 5379), ("random.mli", 129, 5377, 5409), 0), 0, Tag1 ("Stdlib__Random", 20)), 0); (("int32", 458), ((Tag1 (0, (Tag3 ((("t", 451)), 0, (0)), 100000000, 0, -94), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Int32"), "t"), 0, (0)), 100000000, 0, -93), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Int32"), "t"), 0, (0)), 100000000, 0, -92), 0), 100000000, 0, -91), 0), 100000000, 0, -90), 0, (("random.mli", 130, 5410, 5412), ("random.mli", 130, 5410, 5447), 0), 0, Tag1 ("Stdlib__Random", 21)), 0); (("nativeint", 459), ((Tag1 (0, (Tag3 ((("t", 451)), 0, (0)), 100000000, 0, -89), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Nativeint"), "t"), 0, (0)), 100000000, 0, -88), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Nativeint"), "t"), 0, (0)), 100000000, 0, -87), 0), 100000000, 0, -86), 0), 100000000, 0, -85), 0, (("random.mli", 131, 5448, 5450), ("random.mli", 131, 5448, 5497), 0), 0, Tag1 ("Stdlib__Random", 22)), 0); (("int64", 460), ((Tag1 (0, (Tag3 ((("t", 451)), 0, (0)), 100000000, 0, -84), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Int64"), "t"), 0, (0)), 100000000, 0, -83), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Int64"), "t"), 0, (0)), 100000000, 0, -82), 0), 100000000, 0, -81), 0), 100000000, 0, -80), 0, (("random.mli", 132, 5498, 5500), ("random.mli", 132, 5498, 5535), 0), 0, Tag1 ("Stdlib__Random", 23)), 0); (("float", 461), ((Tag1 (0, (Tag3 ((("t", 451)), 0, (0)), 100000000, 0, -79), (Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -78), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -77), 0), 100000000, 0, -76), 0), 100000000, 0, -75), 0, (("random.mli", 133, 5536, 5538), ("random.mli", 133, 5536, 5569), 0), 0, Tag1 ("Stdlib__Random", 24)), 0); (("bool", 462), ((Tag1 (0, (Tag3 ((("t", 451)), 0, (0)), 100000000, 0, -74), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -73), 0), 100000000, 0, -72), 0, (("random.mli", 134, 5570, 5572), ("random.mli", 134, 5570, 5592), 0), 0, Tag1 ("Stdlib__Random", 25)), 0); (("bits32", 463), ((Tag1 (0, (Tag3 ((("t", 451)), 0, (0)), 100000000, 0, -71), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Int32"), "t"), 0, (0)), 100000000, 0, -70), 0), 100000000, 0, -69), 0, (("random.mli", 135, 5593, 5595), ("random.mli", 135, 5593, 5620), 0), 0, Tag1 ("Stdlib__Random", 26)), 0); (("bits64", 464), ((Tag1 (0, (Tag3 ((("t", 451)), 0, (0)), 100000000, 0, -68), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Int64"), "t"), 0, (0)), 100000000, 0, -67), 0), 100000000, 0, -66), 0, (("random.mli", 136, 5621, 5623), ("random.mli", 136, 5621, 5648), 0), 0, Tag1 ("Stdlib__Random", 27)), 0); (("nativebits", 465), ((Tag1 (0, (Tag3 ((("t", 451)), 0, (0)), 100000000, 0, -65), (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Nativeint"), "t"), 0, (0)), 100000000, 0, -64), 0), 100000000, 0, -63), 0, (("random.mli", 137, 5649, 5651), ("random.mli", 137, 5649, 5684), 0), 0, Tag1 ("Stdlib__Random", 28)), 0); (("split", 466), ((Tag1 (0, (Tag3 ((("t", 451)), 0, (0)), 100000000, 0, -62), (Tag3 ((("t", 451)), 0, (0)), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("random.mli", 142, 5839, 5841), ("random.mli", 142, 5839, 5859), 0), 0, Tag1 ("Stdlib__Random", 29)), 0); (("to_binary_string", 467), ((Tag1 (0, (Tag3 ((("t", 451)), 0, (0)), 100000000, 0, -59), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0, (("random.mli", 150, 6195, 6197), ("random.mli", 150, 6195, 6231), 0), 0, Tag1 ("Stdlib__Random", 30)), 0); (("of_binary_string", 468), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -56), (Tag3 ((("t", 451)), 0, (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0, (("random.mli", 163, 6591, 6593), ("random.mli", 163, 6591, 6627), 0), 0, Tag1 ("Stdlib__Random", 31)), 0)]), 0, (("random.mli", 112, 4901, 4901), ("random.mli", 181, 7245, 7248), 0), Tag1 ("Stdlib__Random", 32)), 0, 0); (("get_state", 448), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -10), (Tag3 (Tag1 ((("State", 447)), "t"), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("random.mli", 183, 7250, 7250), ("random.mli", 183, 7250, 7281), 0), 0, Tag1 ("Stdlib__Random", 33)), 0); (("set_state", 449), ((Tag1 (0, (Tag3 (Tag1 ((("State", 447)), "t"), 0, (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("random.mli", 187, 7420, 7420), ("random.mli", 187, 7420, 7451), 0), 0, Tag1 ("Stdlib__Random", 34)), 0); (("split", 450), ((Tag1 (0, (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), (Tag3 (Tag1 ((("State", 447)), "t"), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("random.mli", 192, 7611, 7611), ("random.mli", 192, 7611, 7638), 0), 0, Tag1 ("Stdlib__Random", 35)), 0)], "Stdlib__Random", [("Stdlib__Random", ("\020\005Xq\171\026\218\152X\135\254\023\133zK\200")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val split : unit -> State.t
