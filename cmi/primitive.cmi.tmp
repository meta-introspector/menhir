type boxed_integer = Pnativeint | Pint32 | Pint64
type native_repr =
    Same_as_ocaml_repr
  | Unboxed_float
  | Unboxed_integer of boxed_integer
  | Untagged_int
type description = private {
  prim_name : string;
  prim_arity : int;
  prim_alloc : bool;
  prim_native_name : string;
  prim_native_repr_args : native_repr list;
  prim_native_repr_res : native_repr;
}
val simple : name:string -> arity:int -> alloc:bool -> description
val make :
  name:string ->
  alloc:bool ->
  native_name:string ->
  native_repr_args:native_repr list ->
  native_repr_res:native_repr -> description
val parse_declaration :
  Parsetree.value_description ->
  native_repr_args:native_repr list ->
  native_repr_res:native_repr -> description
val print :
  description -> Outcometree.out_val_decl -> Outcometree.out_val_decl
val native_name : description -> string
val byte_name : description -> string
val equal_boxed_integer : boxed_integer -> boxed_integer -> bool
val equal_native_repr : native_repr -> native_repr -> bool
val native_name_is_external : description -> bool
type error =
    Old_style_float_with_native_repr_attribute
  | Old_style_noalloc_with_noalloc_attribute
  | No_native_primitive_with_repr_attribute
("DEBUG:rule", [Tag1 (("boxed_integer", 458), (0, 0, Tag1 ([(("Pnativeint", 270), (0), 0, (("typing/primitive.mli", 18, 1121, 1142), ("typing/primitive.mli", 18, 1121, 1152), 0), 0, Tag1 ("Primitive", 1)); (("Pint32", 271), (0), 0, (("typing/primitive.mli", 18, 1121, 1153), ("typing/primitive.mli", 18, 1121, 1161), 0), 0, Tag1 ("Primitive", 2)); (("Pint64", 272), (0), 0, (("typing/primitive.mli", 18, 1121, 1162), ("typing/primitive.mli", 18, 1121, 1170), 0), 0, Tag1 ("Primitive", 3))], 0), 1, 0, 0, 0, 0, 0, (("typing/primitive.mli", 18, 1121, 1121), ("typing/primitive.mli", 18, 1121, 1170), 0), 0, 1, 0, Tag1 ("Primitive", 0)), 1, 0); Tag1 (("native_repr", 459), (0, 0, Tag1 ([(("Same_as_ocaml_repr", 274), (0), 0, (("typing/primitive.mli", 23, 1278, 1280), ("typing/primitive.mli", 23, 1278, 1300), 0), 0, Tag1 ("Primitive", 5)); (("Unboxed_float", 275), (0), 0, (("typing/primitive.mli", 24, 1301, 1303), ("typing/primitive.mli", 24, 1301, 1318), 0), 0, Tag1 ("Primitive", 6)); (("Unboxed_integer", 276), ([(Tag3 ((("boxed_integer", 458)), 0, (0)), 100000000, 0, -62)]), 0, (("typing/primitive.mli", 25, 1319, 1321), ("typing/primitive.mli", 25, 1319, 1355), 0), 0, Tag1 ("Primitive", 7)); (("Untagged_int", 277), (0), 0, (("typing/primitive.mli", 26, 1356, 1358), ("typing/primitive.mli", 26, 1356, 1372), 0), 0, Tag1 ("Primitive", 8))], 0), 1, 0, 0, 0, 0, 0, (("typing/primitive.mli", 22, 1259, 1259), ("typing/primitive.mli", 26, 1356, 1372), 0), 0, 0, 0, Tag1 ("Primitive", 4)), 1, 0); Tag1 (("description", 460), (0, 0, [[(("prim_name", 279), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -55), (("typing/primitive.mli", 29, 1401, 1405), ("typing/primitive.mli", 29, 1401, 1423), 0), 0, Tag1 ("Primitive", 10)); (("prim_arity", 280), 0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -56), (("typing/primitive.mli", 30, 1471, 1475), ("typing/primitive.mli", 30, 1471, 1491), 0), 0, Tag1 ("Primitive", 11)); (("prim_alloc", 281), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -57), (("typing/primitive.mli", 31, 1528, 1532), ("typing/primitive.mli", 31, 1528, 1549), 0), 0, Tag1 ("Primitive", 12)); (("prim_native_name", 282), 0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -58), (("typing/primitive.mli", 32, 1593, 1597), ("typing/primitive.mli", 32, 1593, 1622), 0), 0, Tag1 ("Primitive", 13)); (("prim_native_repr_args", 283), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("native_repr", 459)), 0, (0)), 100000000, 0, -60)], (0)), 100000000, 0, -59), (("typing/primitive.mli", 33, 1672, 1676), ("typing/primitive.mli", 33, 1672, 1716), 0), 0, Tag1 ("Primitive", 14)); (("prim_native_repr_res", 284), 0, (Tag3 ((("native_repr", 459)), 0, (0)), 100000000, 0, -61), (("typing/primitive.mli", 34, 1717, 1721), ("typing/primitive.mli", 34, 1717, 1754), 0), 0, Tag1 ("Primitive", 15))]], 0, 0, 0, 0, 0, 0, (("typing/primitive.mli", 28, 1374, 1374), ("typing/primitive.mli", 34, 1717, 1756), 0), 0, 0, 0, Tag1 ("Primitive", 9)), 1, 0); (("simple", 461), ((Tag1 (("name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -54), (Tag1 (("arity"), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -53), (Tag1 (("alloc"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -52), (Tag3 ((("description", 460)), 0, (0)), 100000000, 0, -51), 0), 100000000, 0, -50), 0), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("typing/primitive.mli", 38, 1828, 1828), ("typing/primitive.mli", 42, 1887, 1903), 0), 0, Tag1 ("Primitive", 16)), 0); (("make", 462), ((Tag1 (("name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -47), (Tag1 (("alloc"), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -46), (Tag1 (("native_name"), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -45), (Tag1 (("native_repr_args"), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("native_repr", 459)), 0, (0)), 100000000, 0, -44)], (0)), 100000000, 0, -43), (Tag1 (("native_repr_res"), (Tag3 ((("native_repr", 459)), 0, (0)), 100000000, 0, -42), (Tag3 ((("description", 460)), 0, (0)), 100000000, 0, -41), 0), 100000000, 0, -40), 0), 100000000, 0, -39), 0), 100000000, 0, -38), 0), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("typing/primitive.mli", 44, 1905, 1905), ("typing/primitive.mli", 50, 2045, 2061), 0), 0, Tag1 ("Primitive", 17)), 0); (("parse_declaration", 463), ((Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Parsetree")), "value_description"), 0, (0)), 100000000, 0, -35), (Tag1 (("native_repr_args"), (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("native_repr", 459)), 0, (0)), 100000000, 0, -34)], (0)), 100000000, 0, -33), (Tag1 (("native_repr_res"), (Tag3 ((("native_repr", 459)), 0, (0)), 100000000, 0, -32), (Tag3 ((("description", 460)), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("typing/primitive.mli", 52, 2063, 2063), ("typing/primitive.mli", 56, 2190, 2206), 0), 0, Tag1 ("Primitive", 20)), 0); (("print", 464), ((Tag1 (0, (Tag3 ((("description", 460)), 0, (0)), 100000000, 0, -27), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Outcometree")), "out_val_decl"), 0, (0)), 100000000, 0, -26), (Tag3 (Tag1 ((Tag2 ("Outcometree")), "out_val_decl"), 0, (0)), 100000000, 0, -25), 0), 100000000, 0, -24), 0), 100000000, 0, -23), 0, (("typing/primitive.mli", 58, 2208, 2208), ("typing/primitive.mli", 61, 2265, 2294), 0), 0, Tag1 ("Primitive", 23)), 0); (("native_name", 465), ((Tag1 (0, (Tag3 ((("description", 460)), 0, (0)), 100000000, 0, -22), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0, (("typing/primitive.mli", 63, 2296, 2296), ("typing/primitive.mli", 63, 2296, 2334), 0), 0, Tag1 ("Primitive", 24)), 0); (("byte_name", 466), ((Tag1 (0, (Tag3 ((("description", 460)), 0, (0)), 100000000, 0, -19), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("typing/primitive.mli", 64, 2335, 2335), ("typing/primitive.mli", 64, 2335, 2371), 0), 0, Tag1 ("Primitive", 25)), 0); (("equal_boxed_integer", 467), ((Tag1 (0, (Tag3 ((("boxed_integer", 458)), 0, (0)), 100000000, 0, -16), (Tag1 (0, (Tag3 ((("boxed_integer", 458)), 0, (0)), 100000000, 0, -15), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("typing/primitive.mli", 66, 2373, 2373), ("typing/primitive.mli", 66, 2373, 2437), 0), 0, Tag1 ("Primitive", 26)), 0); (("equal_native_repr", 468), ((Tag1 (0, (Tag3 ((("native_repr", 459)), 0, (0)), 100000000, 0, -11), (Tag1 (0, (Tag3 ((("native_repr", 459)), 0, (0)), 100000000, 0, -10), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("typing/primitive.mli", 67, 2438, 2438), ("typing/primitive.mli", 67, 2438, 2496), 0), 0, Tag1 ("Primitive", 27)), 0); (("native_name_is_external", 469), ((Tag1 (0, (Tag3 ((("description", 460)), 0, (0)), 100000000, 0, -6), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -5), 0), 100000000, 0, -4), 0, (("typing/primitive.mli", 72, 2672, 2672), ("typing/primitive.mli", 72, 2672, 2721), 0), 0, Tag1 ("Primitive", 28)), 0); Tag1 (("error", 470), (0, 0, Tag1 ([(("Old_style_float_with_native_repr_attribute", 388), (0), 0, (("typing/primitive.mli", 75, 2736, 2738), ("typing/primitive.mli", 75, 2736, 2782), 0), 0, Tag1 ("Primitive", 30)); (("Old_style_noalloc_with_noalloc_attribute", 389), (0), 0, (("typing/primitive.mli", 76, 2783, 2785), ("typing/primitive.mli", 76, 2783, 2827), 0), 0, Tag1 ("Primitive", 31)); (("No_native_primitive_with_repr_attribute", 390), (0), 0, (("typing/primitive.mli", 77, 2828, 2830), ("typing/primitive.mli", 77, 2828, 2871), 0), 0, Tag1 ("Primitive", 32))], 0), 1, 0, 0, 0, 0, 0, (("typing/primitive.mli", 74, 2723, 2723), ("typing/primitive.mli", 77, 2828, 2871), 0), 0, 1, 0, Tag1 ("Primitive", 29)), 1, 0); Tag2 (("Error", 471), ((Tag3 ("exn", 7)), 0, ([(Tag3 (Tag1 ((Tag2 ("Location")), "t"), 0, (0)), 100000000, 0, -2); (Tag3 ((("error", 470)), 0, (0)), 100000000, 0, -3)]), 0, 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Primitive", 33)), 2, 0)], "Primitive", [("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216"))], [(0)])
exception Error of Location.t * error
