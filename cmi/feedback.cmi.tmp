type level = Debug | Info | Notice | Warning | Error
type doc_id = int
type route_id = int
val default_route : route_id
type feedback_content =
    Processed
  | Incomplete
  | Complete
  | ProcessingIn of string
  | InProgress of int
  | WorkerStatus of string * string
  | AddedAxiom
  | GlobRef of Loc.t * string * string * string * string
  | GlobDef of Loc.t * string * string * string
  | FileDependency of string option * string
  | FileLoaded of string * string
  | Custom of Loc.t option * string * Xml_datatype.xml
  | Message of level * Loc.t option * Pp.t
type feedback = {
  doc_id : doc_id;
  span_id : Stateid.t;
  route : route_id;
  contents : feedback_content;
}
val add_feeder : (feedback -> unit) -> int
val del_feeder : int -> unit
val feedback :
  ?did:doc_id -> ?id:Stateid.t -> ?route:route_id -> feedback_content -> unit
val set_id_for_feedback : ?route:route_id -> doc_id -> Stateid.t -> unit
val msg_info : ?loc:Loc.t -> Pp.t -> unit
val msg_notice : ?loc:Loc.t -> Pp.t -> unit
val msg_warning : ?loc:Loc.t -> Pp.t -> unit
val msg_debug : ?loc:Loc.t -> Pp.t -> unit
val console_feedback_listener : Format.formatter -> feedback -> unit
("DEBUG:rule", [Tag1 (("level", 565), (0, 0, Tag1 ([(("Debug", 272), (0), 0, (("lib/feedback.mli", 15, 763, 765), ("lib/feedback.mli", 15, 763, 772), 0), 0, Tag1 ("Feedback", 1)); (("Info", 273), (0), 0, (("lib/feedback.mli", 16, 773, 775), ("lib/feedback.mli", 16, 773, 781), 0), 0, Tag1 ("Feedback", 2)); (("Notice", 274), (0), 0, (("lib/feedback.mli", 17, 782, 784), ("lib/feedback.mli", 17, 782, 792), 0), 0, Tag1 ("Feedback", 3)); (("Warning", 275), (0), 0, (("lib/feedback.mli", 18, 793, 795), ("lib/feedback.mli", 18, 793, 804), 0), 0, Tag1 ("Feedback", 4)); (("Error", 276), (0), 0, (("lib/feedback.mli", 19, 805, 807), ("lib/feedback.mli", 19, 805, 814), 0), 0, Tag1 ("Feedback", 5))], 0), 1, 0, 0, 0, 0, 0, (("lib/feedback.mli", 14, 750, 750), ("lib/feedback.mli", 19, 805, 814), 0), 0, 1, 0, Tag1 ("Feedback", 0)), 1, 0); Tag1 (("doc_id", 566), (0, 0, 0, 1, ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -93)), 0, 0, 0, 0, (("lib/feedback.mli", 23, 869, 869), ("lib/feedback.mli", 23, 869, 886), 0), 0, 1, 0, Tag1 ("Feedback", 6)), 1, 0); Tag1 (("route_id", 567), (0, 0, 0, 1, ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -92)), 0, 0, 0, 0, (("lib/feedback.mli", 26, 942, 942), ("lib/feedback.mli", 26, 942, 961), 0), 0, 1, 0, Tag1 ("Feedback", 7)), 1, 0); (("default_route", 568), ((Tag3 ((("route_id", 567)), 0, (0)), 100000000, 0, -91), 0, (("lib/feedback.mli", 28, 963, 963), ("lib/feedback.mli", 28, 963, 991), 0), 0, Tag1 ("Feedback", 8)), 0); Tag1 (("feedback_content", 569), (0, 0, Tag1 ([(("Processed", 281), (0), 0, (("lib/feedback.mli", 32, 1064, 1066), ("lib/feedback.mli", 32, 1064, 1077), 0), 0, Tag1 ("Feedback", 10)); (("Incomplete", 282), (0), 0, (("lib/feedback.mli", 33, 1078, 1080), ("lib/feedback.mli", 33, 1078, 1092), 0), 0, Tag1 ("Feedback", 11)); (("Complete", 283), (0), 0, (("lib/feedback.mli", 34, 1093, 1095), ("lib/feedback.mli", 34, 1093, 1105), 0), 0, Tag1 ("Feedback", 12)); (("ProcessingIn", 284), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -65)]), 0, (("lib/feedback.mli", 36, 1132, 1134), ("lib/feedback.mli", 36, 1132, 1158), 0), 0, Tag1 ("Feedback", 13)); (("InProgress", 285), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -66)]), 0, (("lib/feedback.mli", 37, 1159, 1161), ("lib/feedback.mli", 37, 1159, 1180), 0), 0, Tag1 ("Feedback", 14)); (("WorkerStatus", 286), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -67); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -68)]), 0, (("lib/feedback.mli", 38, 1181, 1183), ("lib/feedback.mli", 38, 1181, 1216), 0), 0, Tag1 ("Feedback", 15)); (("AddedAxiom", 287), (0), 0, (("lib/feedback.mli", 40, 1251, 1253), ("lib/feedback.mli", 40, 1251, 1265), 0), 0, Tag1 ("Feedback", 16)); (("GlobRef", 288), ([(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -69); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -70); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -71); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -72); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -73)]), 0, (("lib/feedback.mli", 41, 1266, 1268), ("lib/feedback.mli", 41, 1266, 1322), 0), 0, Tag1 ("Feedback", 18)); (("GlobDef", 308), ([(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -74); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -75); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -76); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -77)]), 0, (("lib/feedback.mli", 42, 1323, 1325), ("lib/feedback.mli", 42, 1323, 1370), 0), 0, Tag1 ("Feedback", 19)); (("FileDependency", 309), ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -79)], (0)), 100000000, 0, -78); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -80)]), 0, (("lib/feedback.mli", 43, 1371, 1373), ("lib/feedback.mli", 43, 1371, 1415), 0), 0, Tag1 ("Feedback", 20)); (("FileLoaded", 310), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -81); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -82)]), 0, (("lib/feedback.mli", 44, 1416, 1418), ("lib/feedback.mli", 44, 1416, 1449), 0), 0, Tag1 ("Feedback", 21)); (("Custom", 311), ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -84)], (0)), 100000000, 0, -83); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -85); (Tag3 (Tag1 ((Tag2 ("Xml_datatype")), "xml"), 0, (0)), 100000000, 0, -86)]), 0, (("lib/feedback.mli", 46, 1473, 1475), ("lib/feedback.mli", 46, 1473, 1514), 0), 0, Tag1 ("Feedback", 22)); (("Message", 312), ([(Tag3 ((("level", 565)), 0, (0)), 100000000, 0, -87); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -89)], (0)), 100000000, 0, -88); (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -90)]), 0, (("lib/feedback.mli", 48, 1540, 1542), ("lib/feedback.mli", 48, 1540, 1582), 0), 0, Tag1 ("Feedback", 23))], 0), 1, 0, 0, 0, 0, 0, (("lib/feedback.mli", 30, 993, 993), ("lib/feedback.mli", 48, 1540, 1582), 0), 0, 0, 0, Tag1 ("Feedback", 9)), 1, 0); Tag1 (("feedback", 570), (0, 0, [[(("doc_id", 376), 0, (Tag3 ((("doc_id", 566)), 0, (0)), 100000000, 0, -61), (("lib/feedback.mli", 51, 1602, 1604), ("lib/feedback.mli", 51, 1602, 1622), 0), 0, Tag1 ("Feedback", 25)); (("span_id", 396), 0, (Tag3 (Tag1 ((Tag2 ("Stateid")), "t"), 0, (0)), 100000000, 0, -62), (("lib/feedback.mli", 52, 1669, 1671), ("lib/feedback.mli", 52, 1669, 1692), 0), 0, Tag1 ("Feedback", 26)); (("route", 397), 0, (Tag3 ((("route_id", 567)), 0, (0)), 100000000, 0, -63), (("lib/feedback.mli", 53, 1735, 1737), ("lib/feedback.mli", 53, 1735, 1757), 0), 0, Tag1 ("Feedback", 27)); (("contents", 398), 0, (Tag3 ((("feedback_content", 569)), 0, (0)), 100000000, 0, -64), (("lib/feedback.mli", 54, 1792, 1794), ("lib/feedback.mli", 54, 1792, 1822), 0), 0, Tag1 ("Feedback", 28))]], 1, 0, 0, 0, 0, 0, (("lib/feedback.mli", 50, 1584, 1584), ("lib/feedback.mli", 55, 1842, 1843), 0), 0, 0, 0, Tag1 ("Feedback", 24)), 1, 0); (("add_feeder", 571), ((Tag1 (0, (Tag1 (0, (Tag3 ((("feedback", 570)), 0, (0)), 100000000, 0, -60), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -59), 0), 100000000, 0, -58), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("lib/feedback.mli", 64, 2106, 2106), ("lib/feedback.mli", 64, 2106, 2148), 0), 0, Tag1 ("Feedback", 29)), 0); (("del_feeder", 572), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -55), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -54), 0), 100000000, 0, -53), 0, (("lib/feedback.mli", 67, 2207, 2207), ("lib/feedback.mli", 67, 2207, 2235), 0), 0, Tag1 ("Feedback", 30)), 0); (("feedback", 573), ((Tag1 (Tag1 ("did"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("doc_id", 566)), 0, (0)), 100000000, 0, -52)], (0)), 100000000, 0, -51), (Tag1 (Tag1 ("id"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Stateid")), "t"), 0, (0)), 100000000, 0, -50)], (0)), 100000000, 0, -49), (Tag1 (Tag1 ("route"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("route_id", 567)), 0, (0)), 100000000, 0, -48)], (0)), 100000000, 0, -47), (Tag1 (0, (Tag3 ((("feedback_content", 569)), 0, (0)), 100000000, 0, -46), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -45), 0), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0), 100000000, 0, -41), 0, (("lib/feedback.mli", 72, 2419, 2419), ("lib/feedback.mli", 72, 2419, 2509), 0), 0, Tag1 ("Feedback", 31)), 0); (("set_id_for_feedback", 574), ((Tag1 (Tag1 ("route"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("route_id", 567)), 0, (0)), 100000000, 0, -40)], (0)), 100000000, 0, -39), (Tag1 (0, (Tag3 ((("doc_id", 566)), 0, (0)), 100000000, 0, -38), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Stateid")), "t"), 0, (0)), 100000000, 0, -37), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -36), 0), 100000000, 0, -35), 0), 100000000, 0, -34), 0), 100000000, 0, -33), 0, (("lib/feedback.mli", 75, 2579, 2579), ("lib/feedback.mli", 75, 2579, 2651), 0), 0, Tag1 ("Feedback", 32)), 0); (("msg_info", 575), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -32)], (0)), 100000000, 0, -31), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -30), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -29), 0), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("lib/feedback.mli", 82, 2791, 2791), ("lib/feedback.mli", 82, 2791, 2832), 0), 0, Tag1 ("Feedback", 33)), 0); (("msg_notice", 576), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -26)], (0)), 100000000, 0, -25), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -24), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -23), 0), 100000000, 0, -22), 0), 100000000, 0, -21), 0, (("lib/feedback.mli", 86, 2933, 2933), ("lib/feedback.mli", 86, 2933, 2976), 0), 0, Tag1 ("Feedback", 34)), 0); (("msg_warning", 577), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -20)], (0)), 100000000, 0, -19), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -18), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -17), 0), 100000000, 0, -16), 0), 100000000, 0, -15), 0, (("lib/feedback.mli", 89, 3054, 3054), ("lib/feedback.mli", 89, 3054, 3098), 0), 0, Tag1 ("Feedback", 35)), 0); (("msg_debug", 578), ((Tag1 (Tag1 ("loc"), (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Loc")), "t"), 0, (0)), 100000000, 0, -14)], (0)), 100000000, 0, -13), (Tag1 (0, (Tag3 (Tag1 ((Tag2 ("Pp")), "t"), 0, (0)), 100000000, 0, -12), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0, (("lib/feedback.mli", 93, 3191, 3191), ("lib/feedback.mli", 93, 3191, 3233), 0), 0, Tag1 ("Feedback", 36)), 0); (("console_feedback_listener", 579), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -8), (Tag1 (0, (Tag3 ((("feedback", 570)), 0, (0)), 100000000, 0, -7), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0), 100000000, 0, -4), 0, (("lib/feedback.mli", 96, 3265, 3265), ("lib/feedback.mli", 96, 3265, 3333), 0), 0, Tag1 ("Feedback", 37)), 0); (("warn_no_listeners", 580), ((Tag3 (Tag1 ((Tag2 ("Stdlib")), "ref"), [(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3)], (0)), 100000000, 0, -2), 0, (("lib/feedback.mli", 99, 3399, 3399), ("lib/feedback.mli", 99, 3399, 3431), 0), 0, Tag1 ("Feedback", 38)), 0)], "Feedback", [("Feedback", ("a\178\127\150\142\2521\161\147\142V7\248\191\028\219")); ("Xml_datatype", ("\200_,.\243\247\166\156\210\247\226\250Oey\171")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Stateid", ("\183\165\247\166~\005\017.\179f.\178n\255(\137")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val warn_no_listeners : bool ref
