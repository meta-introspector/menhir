module Asttypes :
  sig
    type constant =
        Const_int of int
      | Const_char of char
      | Const_string of string * string option
      | Const_float of string
      | Const_int32 of int32
      | Const_int64 of int64
      | Const_nativeint of nativeint
    type rec_flag = Nonrecursive | Recursive
    type direction_flag = Upto | Downto
    type private_flag = Private | Public
    type mutable_flag = Immutable | Mutable
    type virtual_flag = Virtual | Concrete
    type override_flag = Override | Fresh
    type closed_flag = Closed | Open
    type label = string
    type 'a loc =
      'a Astlib__.Location.loc = {
      txt : 'a;
      loc : Astlib__.Location.t;
    }
    type variance = Covariant | Contravariant | Invariant
  end
module Parsetree :
  sig
    type attribute = string Asttypes.loc * payload
    and extension = string Asttypes.loc * payload
    and attributes = attribute list
    and payload =
        PStr of structure
      | PTyp of core_type
      | PPat of pattern * expression option
    and core_type = {
      ptyp_desc : core_type_desc;
      ptyp_loc : Astlib__.Location.t;
      ptyp_attributes : attributes;
    }
    and core_type_desc =
        Ptyp_any
      | Ptyp_var of string
      | Ptyp_arrow of Asttypes.label * core_type * core_type
      | Ptyp_tuple of core_type list
      | Ptyp_constr of Astlib__.Longident.t Asttypes.loc * core_type list
      | Ptyp_object of (string * attributes * core_type) list *
          Asttypes.closed_flag
      | Ptyp_class of Astlib__.Longident.t Asttypes.loc * core_type list
      | Ptyp_alias of core_type * string
      | Ptyp_variant of row_field list * Asttypes.closed_flag *
          Asttypes.label list option
      | Ptyp_poly of string list * core_type
      | Ptyp_package of package_type
      | Ptyp_extension of extension
    and package_type =
        Astlib__.Longident.t Asttypes.loc *
        (Astlib__.Longident.t Asttypes.loc * core_type) list
    and row_field =
        Rtag of Asttypes.label * attributes * bool * core_type list
      | Rinherit of core_type
    and pattern = {
      ppat_desc : pattern_desc;
      ppat_loc : Astlib__.Location.t;
      ppat_attributes : attributes;
    }
    and pattern_desc =
        Ppat_any
      | Ppat_var of string Asttypes.loc
      | Ppat_alias of pattern * string Asttypes.loc
      | Ppat_constant of Asttypes.constant
      | Ppat_interval of Asttypes.constant * Asttypes.constant
      | Ppat_tuple of pattern list
      | Ppat_construct of Astlib__.Longident.t Asttypes.loc * pattern option
      | Ppat_variant of Asttypes.label * pattern option
      | Ppat_record of (Astlib__.Longident.t Asttypes.loc * pattern) list *
          Asttypes.closed_flag
      | Ppat_array of pattern list
      | Ppat_or of pattern * pattern
      | Ppat_constraint of pattern * core_type
      | Ppat_type of Astlib__.Longident.t Asttypes.loc
      | Ppat_lazy of pattern
      | Ppat_unpack of string Asttypes.loc
      | Ppat_exception of pattern
      | Ppat_extension of extension
    and expression = {
      pexp_desc : expression_desc;
      pexp_loc : Astlib__.Location.t;
      pexp_attributes : attributes;
    }
    and expression_desc =
        Pexp_ident of Astlib__.Longident.t Asttypes.loc
      | Pexp_constant of Asttypes.constant
      | Pexp_let of Asttypes.rec_flag * value_binding list * expression
      | Pexp_function of case list
      | Pexp_fun of Asttypes.label * expression option * pattern * expression
      | Pexp_apply of expression * (Asttypes.label * expression) list
      | Pexp_match of expression * case list
      | Pexp_try of expression * case list
      | Pexp_tuple of expression list
      | Pexp_construct of Astlib__.Longident.t Asttypes.loc *
          expression option
      | Pexp_variant of Asttypes.label * expression option
      | Pexp_record of
          (Astlib__.Longident.t Asttypes.loc * expression) list *
          expression option
      | Pexp_field of expression * Astlib__.Longident.t Asttypes.loc
      | Pexp_setfield of expression * Astlib__.Longident.t Asttypes.loc *
          expression
      | Pexp_array of expression list
      | Pexp_ifthenelse of expression * expression * expression option
      | Pexp_sequence of expression * expression
      | Pexp_while of expression * expression
      | Pexp_for of pattern * expression * expression *
          Asttypes.direction_flag * expression
      | Pexp_constraint of expression * core_type
      | Pexp_coerce of expression * core_type option * core_type
      | Pexp_send of expression * string
      | Pexp_new of Astlib__.Longident.t Asttypes.loc
      | Pexp_setinstvar of string Asttypes.loc * expression
      | Pexp_override of (string Asttypes.loc * expression) list
      | Pexp_letmodule of string Asttypes.loc * module_expr * expression
      | Pexp_assert of expression
      | Pexp_lazy of expression
      | Pexp_poly of expression * core_type option
      | Pexp_object of class_structure
      | Pexp_newtype of string * expression
      | Pexp_pack of module_expr
      | Pexp_open of Asttypes.override_flag *
          Astlib__.Longident.t Asttypes.loc * expression
      | Pexp_extension of extension
    and case = {
      pc_lhs : pattern;
      pc_guard : expression option;
      pc_rhs : expression;
    }
    and value_description = {
      pval_name : string Asttypes.loc;
      pval_type : core_type;
      pval_prim : string list;
      pval_attributes : attributes;
      pval_loc : Astlib__.Location.t;
    }
    and type_declaration = {
      ptype_name : string Asttypes.loc;
      ptype_params : (core_type * Asttypes.variance) list;
      ptype_cstrs : (core_type * core_type * Astlib__.Location.t) list;
      ptype_kind : type_kind;
      ptype_private : Asttypes.private_flag;
      ptype_manifest : core_type option;
      ptype_attributes : attributes;
      ptype_loc : Astlib__.Location.t;
    }
    and type_kind =
        Ptype_abstract
      | Ptype_variant of constructor_declaration list
      | Ptype_record of label_declaration list
      | Ptype_open
    and label_declaration = {
      pld_name : string Asttypes.loc;
      pld_mutable : Asttypes.mutable_flag;
      pld_type : core_type;
      pld_loc : Astlib__.Location.t;
      pld_attributes : attributes;
    }
    and constructor_declaration = {
      pcd_name : string Asttypes.loc;
      pcd_args : core_type list;
      pcd_res : core_type option;
      pcd_loc : Astlib__.Location.t;
      pcd_attributes : attributes;
    }
    and type_extension = {
      ptyext_path : Astlib__.Longident.t Asttypes.loc;
      ptyext_params : (core_type * Asttypes.variance) list;
      ptyext_constructors : extension_constructor list;
      ptyext_private : Asttypes.private_flag;
      ptyext_attributes : attributes;
    }
    and extension_constructor = {
      pext_name : string Asttypes.loc;
      pext_kind : extension_constructor_kind;
      pext_loc : Astlib__.Location.t;
      pext_attributes : attributes;
    }
    and extension_constructor_kind =
        Pext_decl of core_type list * core_type option
      | Pext_rebind of Astlib__.Longident.t Asttypes.loc
    and class_type = {
      pcty_desc : class_type_desc;
      pcty_loc : Astlib__.Location.t;
      pcty_attributes : attributes;
    }
    and class_type_desc =
        Pcty_constr of Astlib__.Longident.t Asttypes.loc * core_type list
      | Pcty_signature of class_signature
      | Pcty_arrow of Asttypes.label * core_type * class_type
      | Pcty_extension of extension
    and class_signature = {
      pcsig_self : core_type;
      pcsig_fields : class_type_field list;
    }
    and class_type_field = {
      pctf_desc : class_type_field_desc;
      pctf_loc : Astlib__.Location.t;
      pctf_attributes : attributes;
    }
    and class_type_field_desc =
        Pctf_inherit of class_type
      | Pctf_val of
          (string * Asttypes.mutable_flag * Asttypes.virtual_flag * core_type)
      | Pctf_method of
          (string * Asttypes.private_flag * Asttypes.virtual_flag * core_type)
      | Pctf_constraint of (core_type * core_type)
      | Pctf_attribute of attribute
      | Pctf_extension of extension
    and 'a class_infos = {
      pci_virt : Asttypes.virtual_flag;
      pci_params : (core_type * Asttypes.variance) list;
      pci_name : string Asttypes.loc;
      pci_expr : 'a;
      pci_loc : Astlib__.Location.t;
      pci_attributes : attributes;
    }
    and class_description = class_type class_infos
    and class_type_declaration = class_type class_infos
    and class_expr = {
      pcl_desc : class_expr_desc;
      pcl_loc : Astlib__.Location.t;
      pcl_attributes : attributes;
    }
    and class_expr_desc =
        Pcl_constr of Astlib__.Longident.t Asttypes.loc * core_type list
      | Pcl_structure of class_structure
      | Pcl_fun of Asttypes.label * expression option * pattern * class_expr
      | Pcl_apply of class_expr * (Asttypes.label * expression) list
      | Pcl_let of Asttypes.rec_flag * value_binding list * class_expr
      | Pcl_constraint of class_expr * class_type
      | Pcl_extension of extension
    and class_structure = {
      pcstr_self : pattern;
      pcstr_fields : class_field list;
    }
    and class_field = {
      pcf_desc : class_field_desc;
      pcf_loc : Astlib__.Location.t;
      pcf_attributes : attributes;
    }
    and class_field_desc =
        Pcf_inherit of Asttypes.override_flag * class_expr * string option
      | Pcf_val of
          (string Asttypes.loc * Asttypes.mutable_flag * class_field_kind)
      | Pcf_method of
          (string Asttypes.loc * Asttypes.private_flag * class_field_kind)
      | Pcf_constraint of (core_type * core_type)
      | Pcf_initializer of expression
      | Pcf_attribute of attribute
      | Pcf_extension of extension
    and class_field_kind =
        Cfk_virtual of core_type
      | Cfk_concrete of Asttypes.override_flag * expression
    and class_declaration = class_expr class_infos
    and module_type = {
      pmty_desc : module_type_desc;
      pmty_loc : Astlib__.Location.t;
      pmty_attributes : attributes;
    }
    and module_type_desc =
        Pmty_ident of Astlib__.Longident.t Asttypes.loc
      | Pmty_signature of signature
      | Pmty_functor of string Asttypes.loc * module_type option *
          module_type
      | Pmty_with of module_type * with_constraint list
      | Pmty_typeof of module_expr
      | Pmty_extension of extension
      | Pmty_alias of Astlib__.Longident.t Asttypes.loc
    and signature = signature_item list
    and signature_item = {
      psig_desc : signature_item_desc;
      psig_loc : Astlib__.Location.t;
    }
    and signature_item_desc =
        Psig_value of value_description
      | Psig_type of type_declaration list
      | Psig_typext of type_extension
      | Psig_exception of extension_constructor
      | Psig_module of module_declaration
      | Psig_recmodule of module_declaration list
      | Psig_modtype of module_type_declaration
      | Psig_open of open_description
      | Psig_include of include_description
      | Psig_class of class_description list
      | Psig_class_type of class_type_declaration list
      | Psig_attribute of attribute
      | Psig_extension of extension * attributes
    and module_declaration = {
      pmd_name : string Asttypes.loc;
      pmd_type : module_type;
      pmd_attributes : attributes;
      pmd_loc : Astlib__.Location.t;
    }
    and module_type_declaration = {
      pmtd_name : string Asttypes.loc;
      pmtd_type : module_type option;
      pmtd_attributes : attributes;
      pmtd_loc : Astlib__.Location.t;
    }
    and open_description = {
      popen_lid : Astlib__.Longident.t Asttypes.loc;
      popen_override : Asttypes.override_flag;
      popen_loc : Astlib__.Location.t;
      popen_attributes : attributes;
    }
    and 'a include_infos = {
      pincl_mod : 'a;
      pincl_loc : Astlib__.Location.t;
      pincl_attributes : attributes;
    }
    and include_description = module_type include_infos
    and include_declaration = module_expr include_infos
    and with_constraint =
        Pwith_type of Astlib__.Longident.t Asttypes.loc * type_declaration
      | Pwith_module of Astlib__.Longident.t Asttypes.loc *
          Astlib__.Longident.t Asttypes.loc
      | Pwith_typesubst of type_declaration
      | Pwith_modsubst of string Asttypes.loc *
          Astlib__.Longident.t Asttypes.loc
    and module_expr = {
      pmod_desc : module_expr_desc;
      pmod_loc : Astlib__.Location.t;
      pmod_attributes : attributes;
    }
    and module_expr_desc =
        Pmod_ident of Astlib__.Longident.t Asttypes.loc
      | Pmod_structure of structure
      | Pmod_functor of string Asttypes.loc * module_type option *
          module_expr
      | Pmod_apply of module_expr * module_expr
      | Pmod_constraint of module_expr * module_type
      | Pmod_unpack of expression
      | Pmod_extension of extension
    and structure = structure_item list
    and structure_item = {
      pstr_desc : structure_item_desc;
      pstr_loc : Astlib__.Location.t;
    }
    and structure_item_desc =
        Pstr_eval of expression * attributes
      | Pstr_value of Asttypes.rec_flag * value_binding list
      | Pstr_primitive of value_description
      | Pstr_type of type_declaration list
      | Pstr_typext of type_extension
      | Pstr_exception of extension_constructor
      | Pstr_module of module_binding
      | Pstr_recmodule of module_binding list
      | Pstr_modtype of module_type_declaration
      | Pstr_open of open_description
      | Pstr_class of class_declaration list
      | Pstr_class_type of class_type_declaration list
      | Pstr_include of include_declaration
      | Pstr_attribute of attribute
      | Pstr_extension of extension * attributes
    and value_binding = {
      pvb_pat : pattern;
      pvb_expr : expression;
      pvb_attributes : attributes;
      pvb_loc : Astlib__.Location.t;
    }
    and module_binding = {
      pmb_name : string Asttypes.loc;
      pmb_expr : module_expr;
      pmb_attributes : attributes;
      pmb_loc : Astlib__.Location.t;
    }
    type toplevel_phrase =
        Ptop_def of structure
      | Ptop_dir of string * directive_argument
    and directive_argument =
        Pdir_none
      | Pdir_string of string
      | Pdir_int of int
      | Pdir_ident of Astlib__.Longident.t
      | Pdir_bool of bool
  end
module Config :
  sig
    val ast_impl_magic_number : string
    val ast_intf_magic_number : string("DEBUG:rule", [Tag3 (("Asttypes", 964), 0, (Tag1 ([Tag1 (("constant", 967), (0, 0, Tag1 ([(("Const_int", 321), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -6)]), 0, (("astlib/ast_402.ml", 24, 1559, 1565), ("astlib/ast_402.ml", 24, 1559, 1581), 0), 0, Tag1 ("Astlib__Ast_402", 1)); (("Const_char", 322), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -7)]), 0, (("astlib/ast_402.ml", 25, 1582, 1586), ("astlib/ast_402.ml", 25, 1582, 1606), 0), 0, Tag1 ("Astlib__Ast_402", 2)); (("Const_string", 323), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10)], (0)), 100000000, 0, -9)]), 0, (("astlib/ast_402.ml", 26, 1607, 1611), ("astlib/ast_402.ml", 26, 1607, 1651), 0), 0, Tag1 ("Astlib__Ast_402", 3)); (("Const_float", 324), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11)]), 0, (("astlib/ast_402.ml", 27, 1652, 1656), ("astlib/ast_402.ml", 27, 1652, 1679), 0), 0, Tag1 ("Astlib__Ast_402", 4)); (("Const_int32", 325), ([(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -12)]), 0, (("astlib/ast_402.ml", 28, 1680, 1684), ("astlib/ast_402.ml", 28, 1680, 1706), 0), 0, Tag1 ("Astlib__Ast_402", 5)); (("Const_int64", 326), ([(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -13)]), 0, (("astlib/ast_402.ml", 29, 1707, 1711), ("astlib/ast_402.ml", 29, 1707, 1733), 0), 0, Tag1 ("Astlib__Ast_402", 6)); (("Const_nativeint", 327), ([(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -14)]), 0, (("astlib/ast_402.ml", 30, 1734, 1738), ("astlib/ast_402.ml", 30, 1734, 1768), 0), 0, Tag1 ("Astlib__Ast_402", 7))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 23, 1505, 1507), ("astlib/ast_402.ml", 30, 1734, 1768), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 0)), 1, 0); Tag1 (("rec_flag", 968), (0, 0, Tag1 ([(("Nonrecursive", 329), (0), 0, (("astlib/ast_402.ml", 32, 1770, 1824), ("astlib/ast_402.ml", 32, 1770, 1836), 0), 0, Tag1 ("Astlib__Ast_402", 9)); (("Recursive", 330), (0), 0, (("astlib/ast_402.ml", 32, 1770, 1837), ("astlib/ast_402.ml", 32, 1770, 1848), 0), 0, Tag1 ("Astlib__Ast_402", 10))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 32, 1770, 1772), ("astlib/ast_402.ml", 32, 1770, 1848), 0), 0, 1, 0, Tag1 ("Astlib__Ast_402", 8)), 1, 0); Tag1 (("direction_flag", 969), (0, 0, Tag1 ([(("Upto", 332), (0), 0, (("astlib/ast_402.ml", 34, 1850, 1916), ("astlib/ast_402.ml", 34, 1850, 1920), 0), 0, Tag1 ("Astlib__Ast_402", 12)); (("Downto", 333), (0), 0, (("astlib/ast_402.ml", 34, 1850, 1921), ("astlib/ast_402.ml", 34, 1850, 1929), 0), 0, Tag1 ("Astlib__Ast_402", 13))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 34, 1850, 1852), ("astlib/ast_402.ml", 34, 1850, 1929), 0), 0, 1, 0, Tag1 ("Astlib__Ast_402", 11)), 1, 0); Tag1 (("private_flag", 970), (0, 0, Tag1 ([(("Private", 335), (0), 0, (("astlib/ast_402.ml", 36, 1931, 1993), ("astlib/ast_402.ml", 36, 1931, 2000), 0), 0, Tag1 ("Astlib__Ast_402", 15)); (("Public", 336), (0), 0, (("astlib/ast_402.ml", 36, 1931, 2001), ("astlib/ast_402.ml", 36, 1931, 2009), 0), 0, Tag1 ("Astlib__Ast_402", 16))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 36, 1931, 1933), ("astlib/ast_402.ml", 36, 1931, 2009), 0), 0, 1, 0, Tag1 ("Astlib__Ast_402", 14)), 1, 0); Tag1 (("mutable_flag", 971), (0, 0, Tag1 ([(("Immutable", 338), (0), 0, (("astlib/ast_402.ml", 38, 2011, 2073), ("astlib/ast_402.ml", 38, 2011, 2082), 0), 0, Tag1 ("Astlib__Ast_402", 18)); (("Mutable", 339), (0), 0, (("astlib/ast_402.ml", 38, 2011, 2083), ("astlib/ast_402.ml", 38, 2011, 2092), 0), 0, Tag1 ("Astlib__Ast_402", 19))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 38, 2011, 2013), ("astlib/ast_402.ml", 38, 2011, 2092), 0), 0, 1, 0, Tag1 ("Astlib__Ast_402", 17)), 1, 0); Tag1 (("virtual_flag", 972), (0, 0, Tag1 ([(("Virtual", 341), (0), 0, (("astlib/ast_402.ml", 40, 2094, 2156), ("astlib/ast_402.ml", 40, 2094, 2163), 0), 0, Tag1 ("Astlib__Ast_402", 21)); (("Concrete", 342), (0), 0, (("astlib/ast_402.ml", 40, 2094, 2164), ("astlib/ast_402.ml", 40, 2094, 2174), 0), 0, Tag1 ("Astlib__Ast_402", 22))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 40, 2094, 2096), ("astlib/ast_402.ml", 40, 2094, 2174), 0), 0, 1, 0, Tag1 ("Astlib__Ast_402", 20)), 1, 0); Tag1 (("override_flag", 973), (0, 0, Tag1 ([(("Override", 344), (0), 0, (("astlib/ast_402.ml", 42, 2176, 2240), ("astlib/ast_402.ml", 42, 2176, 2248), 0), 0, Tag1 ("Astlib__Ast_402", 24)); (("Fresh", 345), (0), 0, (("astlib/ast_402.ml", 42, 2176, 2249), ("astlib/ast_402.ml", 42, 2176, 2256), 0), 0, Tag1 ("Astlib__Ast_402", 25))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 42, 2176, 2178), ("astlib/ast_402.ml", 42, 2176, 2256), 0), 0, 1, 0, Tag1 ("Astlib__Ast_402", 23)), 1, 0); Tag1 (("closed_flag", 974), (0, 0, Tag1 ([(("Closed", 347), (0), 0, (("astlib/ast_402.ml", 44, 2258, 2318), ("astlib/ast_402.ml", 44, 2258, 2324), 0), 0, Tag1 ("Astlib__Ast_402", 27)); (("Open", 348), (0), 0, (("astlib/ast_402.ml", 44, 2258, 2325), ("astlib/ast_402.ml", 44, 2258, 2331), 0), 0, Tag1 ("Astlib__Ast_402", 28))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 44, 2258, 2260), ("astlib/ast_402.ml", 44, 2258, 2331), 0), 0, 1, 0, Tag1 ("Astlib__Ast_402", 26)), 1, 0); Tag1 (("label", 975), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5)), 0, 0, 0, 0, (("astlib/ast_402.ml", 46, 2333, 2335), ("astlib/ast_402.ml", 46, 2333, 2354), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 29)), 1, 0); Tag1 (("loc", 976), ([((("a")), 100000000, 0, -3)], 1, [[(("txt", 351), 0, ((("a")), 100000000, 0, -3), (("astlib/ast_402.ml", 49, 2392, 2396), ("astlib/ast_402.ml", 49, 2392, 2405), 0), 0, Tag1 ("Astlib__Ast_402", 31)); (("loc", 361), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4), (("astlib/ast_402.ml", 50, 2406, 2410), ("astlib/ast_402.ml", 50, 2406, 2427), 0), 0, Tag1 ("Astlib__Ast_402", 32))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "loc"), [((("a")), 100000000, 0, -3)], (0)), 100000000, 0, -2)), [25], [0], 0, 0, (("astlib/ast_402.ml", 48, 2356, 2358), ("astlib/ast_402.ml", 51, 2428, 2431), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 30)), 1, 0); Tag1 (("variance", 977), (0, 0, Tag1 ([(("Covariant", 634), (0), 0, (("astlib/ast_402.ml", 55, 2488, 2492), ("astlib/ast_402.ml", 55, 2488, 2503), 0), 0, Tag1 ("Astlib__Ast_402", 34)); (("Contravariant", 635), (0), 0, (("astlib/ast_402.ml", 56, 2504, 2508), ("astlib/ast_402.ml", 56, 2504, 2523), 0), 0, Tag1 ("Astlib__Ast_402", 35)); (("Invariant", 636), (0), 0, (("astlib/ast_402.ml", 57, 2524, 2528), ("astlib/ast_402.ml", 57, 2524, 2539), 0), 0, Tag1 ("Astlib__Ast_402", 36))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 54, 2434, 2436), ("astlib/ast_402.ml", 57, 2524, 2539), 0), 0, 1, 0, Tag1 ("Astlib__Ast_402", 33)), 1, 0)]), 0, (("astlib/ast_402.ml", 20, 1415, 1415), ("astlib/ast_402.ml", 58, 2540, 2543), 0), Tag1 ("Astlib__Ast_402", 37)), 0, 0); Tag3 (("Parsetree", 965), 0, (Tag1 ([Tag1 (("attribute", 978), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -525)], (0)), 100000000, 0, -524); (Tag3 ((("payload", 981)), 0, (0)), 100000000, 0, -526)]), 100000000, 0, -523)), 0, 0, 0, 0, (("astlib/ast_402.ml", 67, 2670, 2672), ("astlib/ast_402.ml", 67, 2670, 2709), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 38)), 1, 0); Tag1 (("extension", 979), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -521)], (0)), 100000000, 0, -520); (Tag3 ((("payload", 981)), 0, (0)), 100000000, 0, -522)]), 100000000, 0, -519)), 0, 0, 0, 0, (("astlib/ast_402.ml", 75, 2884, 2886), ("astlib/ast_402.ml", 75, 2884, 2922), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 39)), 2, 0); Tag1 (("attributes", 980), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("attribute", 978)), 0, (0)), 100000000, 0, -518)], (0)), 100000000, 0, -517)), 0, 0, 0, 0, (("astlib/ast_402.ml", 82, 3047, 3049), ("astlib/ast_402.ml", 82, 3047, 3080), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 40)), 2, 0); Tag1 (("payload", 981), (0, 0, Tag1 ([(("PStr", 693), ([(Tag3 ((("structure", 1028)), 0, (0)), 100000000, 0, -512)]), 0, (("astlib/ast_402.ml", 85, 3134, 3138), ("astlib/ast_402.ml", 85, 3134, 3157), 0), 0, Tag1 ("Astlib__Ast_402", 93)); (("PTyp", 694), ([(Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -513)]), 0, (("astlib/ast_402.ml", 86, 3158, 3162), ("astlib/ast_402.ml", 86, 3158, 3181), 0), 0, Tag1 ("Astlib__Ast_402", 94)); (("PPat", 695), ([(Tag3 ((("pattern", 986)), 0, (0)), 100000000, 0, -514); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -516)], (0)), 100000000, 0, -515)]), 0, (("astlib/ast_402.ml", 87, 3193, 3197), ("astlib/ast_402.ml", 87, 3193, 3234), 0), 0, Tag1 ("Astlib__Ast_402", 95))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 84, 3082, 3084), ("astlib/ast_402.ml", 87, 3193, 3234), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 41)), 2, 0); Tag1 (("core_type", 982), (0, 0, [[(("ptyp_desc", 696), 0, (Tag3 ((("core_type_desc", 983)), 0, (0)), 100000000, 0, -509), (("astlib/ast_402.ml", 95, 3381, 3388), ("astlib/ast_402.ml", 95, 3381, 3414), 0), 0, Tag1 ("Astlib__Ast_402", 96)); (("ptyp_loc", 697), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -510), (("astlib/ast_402.ml", 96, 3415, 3422), ("astlib/ast_402.ml", 96, 3415, 3443), 0), 0, Tag1 ("Astlib__Ast_402", 97)); (("ptyp_attributes", 698), 0, (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -511), (("astlib/ast_402.ml", 97, 3444, 3451), ("astlib/ast_402.ml", 97, 3444, 3479), 0), 0, Tag1 ("Astlib__Ast_402", 98))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 93, 3317, 3319), ("astlib/ast_402.ml", 98, 3504, 3511), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 42)), 2, 0); Tag1 (("core_type_desc", 983), (0, 0, Tag1 ([(("Ptyp_any", 699), (0), 0, (("astlib/ast_402.ml", 101, 3579, 3583), ("astlib/ast_402.ml", 101, 3579, 3593), 0), 0, Tag1 ("Astlib__Ast_402", 99)); (("Ptyp_var", 700), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -476)]), 0, (("astlib/ast_402.ml", 103, 3613, 3617), ("astlib/ast_402.ml", 103, 3613, 3637), 0), 0, Tag1 ("Astlib__Ast_402", 100)); (("Ptyp_arrow", 701), ([(Tag3 (Tag1 ((("Asttypes", 964)), "label"), 0, (0)), 100000000, 0, -477); (Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -478); (Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -479)]), 0, (("astlib/ast_402.ml", 105, 3657, 3661), ("astlib/ast_402.ml", 105, 3657, 3706), 0), 0, Tag1 ("Astlib__Ast_402", 101)); (("Ptyp_tuple", 702), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -481)], (0)), 100000000, 0, -480)]), 0, (("astlib/ast_402.ml", 110, 3847, 3851), ("astlib/ast_402.ml", 110, 3847, 3881), 0), 0, Tag1 ("Astlib__Ast_402", 102)); (("Ptyp_constr", 703), ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -483)], (0)), 100000000, 0, -482); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -485)], (0)), 100000000, 0, -484)]), 0, (("astlib/ast_402.ml", 115, 3954, 3958), ("astlib/ast_402.ml", 115, 3954, 4007), 0), 0, Tag1 ("Astlib__Ast_402", 103)); (("Ptyp_object", 707), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -488); (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -489); (Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -490)]), 100000000, 0, -487)], (0)), 100000000, 0, -486); (Tag3 (Tag1 ((("Asttypes", 964)), "closed_flag"), 0, (0)), 100000000, 0, -491)]), 0, (("astlib/ast_402.ml", 120, 4101, 4105), ("astlib/ast_402.ml", 120, 4101, 4174), 0), 0, Tag1 ("Astlib__Ast_402", 104)); (("Ptyp_class", 708), ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -493)], (0)), 100000000, 0, -492); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -495)], (0)), 100000000, 0, -494)]), 0, (("astlib/ast_402.ml", 124, 4297, 4301), ("astlib/ast_402.ml", 124, 4297, 4349), 0), 0, Tag1 ("Astlib__Ast_402", 105)); (("Ptyp_alias", 709), ([(Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -496); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -497)]), 0, (("astlib/ast_402.ml", 129, 4446, 4450), ("astlib/ast_402.ml", 129, 4446, 4484), 0), 0, Tag1 ("Astlib__Ast_402", 106)); (("Ptyp_variant", 710), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("row_field", 985)), 0, (0)), 100000000, 0, -499)], (0)), 100000000, 0, -498); (Tag3 (Tag1 ((("Asttypes", 964)), "closed_flag"), 0, (0)), 100000000, 0, -500); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 964)), "label"), 0, (0)), 100000000, 0, -503)], (0)), 100000000, 0, -502)], (0)), 100000000, 0, -501)]), 0, (("astlib/ast_402.ml", 131, 4509, 4513), ("astlib/ast_402.ml", 131, 4509, 4579), 0), 0, Tag1 ("Astlib__Ast_402", 107)); (("Ptyp_poly", 711), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -505)], (0)), 100000000, 0, -504); (Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -506)]), 0, (("astlib/ast_402.ml", 137, 4855, 4859), ("astlib/ast_402.ml", 137, 4855, 4897), 0), 0, Tag1 ("Astlib__Ast_402", 108)); (("Ptyp_package", 712), ([(Tag3 ((("package_type", 984)), 0, (0)), 100000000, 0, -507)]), 0, (("astlib/ast_402.ml", 157, 5451, 5455), ("astlib/ast_402.ml", 157, 5451, 5485), 0), 0, Tag1 ("Astlib__Ast_402", 109)); (("Ptyp_extension", 713), ([(Tag3 ((("extension", 979)), 0, (0)), 100000000, 0, -508)]), 0, (("astlib/ast_402.ml", 159, 5513, 5517), ("astlib/ast_402.ml", 159, 5513, 5546), 0), 0, Tag1 ("Astlib__Ast_402", 110))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 100, 3513, 3515), ("astlib/ast_402.ml", 159, 5513, 5546), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 43)), 2, 0); Tag1 (("package_type", 984), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -470)], (0)), 100000000, 0, -469); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -474)], (0)), 100000000, 0, -473); (Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -475)]), 100000000, 0, -472)], (0)), 100000000, 0, -471)]), 100000000, 0, -468)), 0, 0, 0, 0, (("astlib/ast_402.ml", 162, 5570, 5572), ("astlib/ast_402.ml", 162, 5570, 5643), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 44)), 2, 0); Tag1 (("row_field", 985), (0, 0, Tag1 ([(("Rtag", 714), ([(Tag3 (Tag1 ((("Asttypes", 964)), "label"), 0, (0)), 100000000, 0, -462); (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -463); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -464); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -466)], (0)), 100000000, 0, -465)]), 0, (("astlib/ast_402.ml", 169, 5804, 5808), ("astlib/ast_402.ml", 169, 5804, 5860), 0), 0, Tag1 ("Astlib__Ast_402", 111)); (("Rinherit", 715), ([(Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -467)]), 0, (("astlib/ast_402.ml", 182, 6384, 6388), ("astlib/ast_402.ml", 182, 6384, 6411), 0), 0, Tag1 ("Astlib__Ast_402", 112))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 168, 5748, 5750), ("astlib/ast_402.ml", 182, 6384, 6411), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 45)), 2, 0); Tag1 (("pattern", 986), (0, 0, [[(("ppat_desc", 716), 0, (Tag3 ((("pattern_desc", 987)), 0, (0)), 100000000, 0, -459), (("astlib/ast_402.ml", 189, 6513, 6520), ("astlib/ast_402.ml", 189, 6513, 6544), 0), 0, Tag1 ("Astlib__Ast_402", 113)); (("ppat_loc", 717), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -460), (("astlib/ast_402.ml", 190, 6545, 6552), ("astlib/ast_402.ml", 190, 6545, 6573), 0), 0, Tag1 ("Astlib__Ast_402", 114)); (("ppat_attributes", 718), 0, (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -461), (("astlib/ast_402.ml", 191, 6574, 6581), ("astlib/ast_402.ml", 191, 6574, 6609), 0), 0, Tag1 ("Astlib__Ast_402", 115))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 187, 6453, 6455), ("astlib/ast_402.ml", 192, 6634, 6641), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 46)), 2, 0); Tag1 (("pattern_desc", 987), (0, 0, Tag1 ([(("Ppat_any", 719), (0), 0, (("astlib/ast_402.ml", 195, 6705, 6709), ("astlib/ast_402.ml", 195, 6705, 6719), 0), 0, Tag1 ("Astlib__Ast_402", 116)); (("Ppat_var", 720), ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -424)], (0)), 100000000, 0, -423)]), 0, (("astlib/ast_402.ml", 197, 6738, 6742), ("astlib/ast_402.ml", 197, 6738, 6766), 0), 0, Tag1 ("Astlib__Ast_402", 117)); (("Ppat_alias", 721), ([(Tag3 ((("pattern", 986)), 0, (0)), 100000000, 0, -425); (Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -427)], (0)), 100000000, 0, -426)]), 0, (("astlib/ast_402.ml", 199, 6785, 6789), ("astlib/ast_402.ml", 199, 6785, 6825), 0), 0, Tag1 ("Astlib__Ast_402", 118)); (("Ppat_constant", 722), ([(Tag3 (Tag1 ((("Asttypes", 964)), "constant"), 0, (0)), 100000000, 0, -428)]), 0, (("astlib/ast_402.ml", 201, 6850, 6854), ("astlib/ast_402.ml", 201, 6850, 6881), 0), 0, Tag1 ("Astlib__Ast_402", 119)); (("Ppat_interval", 723), ([(Tag3 (Tag1 ((("Asttypes", 964)), "constant"), 0, (0)), 100000000, 0, -429); (Tag3 (Tag1 ((("Asttypes", 964)), "constant"), 0, (0)), 100000000, 0, -430)]), 0, (("astlib/ast_402.ml", 203, 6930, 6934), ("astlib/ast_402.ml", 203, 6930, 6972), 0), 0, Tag1 ("Astlib__Ast_402", 120)); (("Ppat_tuple", 724), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 986)), 0, (0)), 100000000, 0, -432)], (0)), 100000000, 0, -431)]), 0, (("astlib/ast_402.ml", 208, 7112, 7116), ("astlib/ast_402.ml", 208, 7112, 7144), 0), 0, Tag1 ("Astlib__Ast_402", 121)); (("Ppat_construct", 725), ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -434)], (0)), 100000000, 0, -433); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 986)), 0, (0)), 100000000, 0, -436)], (0)), 100000000, 0, -435)]), 0, (("astlib/ast_402.ml", 213, 7217, 7221), ("astlib/ast_402.ml", 213, 7217, 7273), 0), 0, Tag1 ("Astlib__Ast_402", 122)); (("Ppat_variant", 726), ([(Tag3 (Tag1 ((("Asttypes", 964)), "label"), 0, (0)), 100000000, 0, -437); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 986)), 0, (0)), 100000000, 0, -439)], (0)), 100000000, 0, -438)]), 0, (("astlib/ast_402.ml", 218, 7422, 7426), ("astlib/ast_402.ml", 218, 7422, 7466), 0), 0, Tag1 ("Astlib__Ast_402", 123)); (("Ppat_record", 727), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -443)], (0)), 100000000, 0, -442); (Tag3 ((("pattern", 986)), 0, (0)), 100000000, 0, -444)]), 100000000, 0, -441)], (0)), 100000000, 0, -440); (Tag3 (Tag1 ((("Asttypes", 964)), "closed_flag"), 0, (0)), 100000000, 0, -445)]), 0, (("astlib/ast_402.ml", 222, 7553, 7557), ("astlib/ast_402.ml", 222, 7553, 7620), 0), 0, Tag1 ("Astlib__Ast_402", 124)); (("Ppat_array", 728), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 986)), 0, (0)), 100000000, 0, -447)], (0)), 100000000, 0, -446)]), 0, (("astlib/ast_402.ml", 228, 7774, 7778), ("astlib/ast_402.ml", 228, 7774, 7806), 0), 0, Tag1 ("Astlib__Ast_402", 125)); (("Ppat_or", 729), ([(Tag3 ((("pattern", 986)), 0, (0)), 100000000, 0, -448); (Tag3 ((("pattern", 986)), 0, (0)), 100000000, 0, -449)]), 0, (("astlib/ast_402.ml", 230, 7841, 7845), ("astlib/ast_402.ml", 230, 7841, 7875), 0), 0, Tag1 ("Astlib__Ast_402", 126)); (("Ppat_constraint", 730), ([(Tag3 ((("pattern", 986)), 0, (0)), 100000000, 0, -450); (Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -451)]), 0, (("astlib/ast_402.ml", 232, 7900, 7904), ("astlib/ast_402.ml", 232, 7900, 7944), 0), 0, Tag1 ("Astlib__Ast_402", 127)); (("Ppat_type", 731), ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -453)], (0)), 100000000, 0, -452)]), 0, (("astlib/ast_402.ml", 234, 7969, 7973), ("astlib/ast_402.ml", 234, 7969, 8003), 0), 0, Tag1 ("Astlib__Ast_402", 128)); (("Ppat_lazy", 732), ([(Tag3 ((("pattern", 986)), 0, (0)), 100000000, 0, -454)]), 0, (("astlib/ast_402.ml", 236, 8028, 8032), ("astlib/ast_402.ml", 236, 8028, 8054), 0), 0, Tag1 ("Astlib__Ast_402", 129)); (("Ppat_unpack", 733), ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -456)], (0)), 100000000, 0, -455)]), 0, (("astlib/ast_402.ml", 238, 8078, 8082), ("astlib/ast_402.ml", 238, 8078, 8109), 0), 0, Tag1 ("Astlib__Ast_402", 130)); (("Ppat_exception", 734), ([(Tag3 ((("pattern", 986)), 0, (0)), 100000000, 0, -457)]), 0, (("astlib/ast_402.ml", 243, 8256, 8260), ("astlib/ast_402.ml", 243, 8256, 8287), 0), 0, Tag1 ("Astlib__Ast_402", 131)); (("Ppat_extension", 735), ([(Tag3 ((("extension", 979)), 0, (0)), 100000000, 0, -458)]), 0, (("astlib/ast_402.ml", 245, 8316, 8320), ("astlib/ast_402.ml", 245, 8316, 8349), 0), 0, Tag1 ("Astlib__Ast_402", 132))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 194, 6643, 6645), ("astlib/ast_402.ml", 245, 8316, 8349), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 47)), 2, 0); Tag1 (("expression", 988), (0, 0, [[(("pexp_desc", 736), 0, (Tag3 ((("expression_desc", 989)), 0, (0)), 100000000, 0, -420), (("astlib/ast_402.ml", 252, 8466, 8473), ("astlib/ast_402.ml", 252, 8466, 8500), 0), 0, Tag1 ("Astlib__Ast_402", 133)); (("pexp_loc", 737), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -421), (("astlib/ast_402.ml", 253, 8501, 8508), ("astlib/ast_402.ml", 253, 8501, 8529), 0), 0, Tag1 ("Astlib__Ast_402", 134)); (("pexp_attributes", 738), 0, (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -422), (("astlib/ast_402.ml", 254, 8530, 8537), ("astlib/ast_402.ml", 254, 8530, 8565), 0), 0, Tag1 ("Astlib__Ast_402", 135))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 250, 8400, 8402), ("astlib/ast_402.ml", 255, 8590, 8597), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 48)), 2, 0); Tag1 (("expression_desc", 989), (0, 0, Tag1 ([(("Pexp_ident", 739), ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -322)], (0)), 100000000, 0, -321)]), 0, (("astlib/ast_402.ml", 258, 8667, 8671), ("astlib/ast_402.ml", 258, 8667, 8702), 0), 0, Tag1 ("Astlib__Ast_402", 136)); (("Pexp_constant", 740), ([(Tag3 (Tag1 ((("Asttypes", 964)), "constant"), 0, (0)), 100000000, 0, -323)]), 0, (("astlib/ast_402.ml", 262, 8749, 8753), ("astlib/ast_402.ml", 262, 8749, 8780), 0), 0, Tag1 ("Astlib__Ast_402", 137)); (("Pexp_let", 741), ([(Tag3 (Tag1 ((("Asttypes", 964)), "rec_flag"), 0, (0)), 100000000, 0, -324); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 1031)), 0, (0)), 100000000, 0, -326)], (0)), 100000000, 0, -325); (Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -327)]), 0, (("astlib/ast_402.ml", 264, 8829, 8833), ("astlib/ast_402.ml", 264, 8829, 8889), 0), 0, Tag1 ("Astlib__Ast_402", 138)); (("Pexp_function", 742), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 990)), 0, (0)), 100000000, 0, -329)], (0)), 100000000, 0, -328)]), 0, (("astlib/ast_402.ml", 268, 9057, 9061), ("astlib/ast_402.ml", 268, 9057, 9089), 0), 0, Tag1 ("Astlib__Ast_402", 139)); (("Pexp_fun", 743), ([(Tag3 (Tag1 ((("Asttypes", 964)), "label"), 0, (0)), 100000000, 0, -330); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -332)], (0)), 100000000, 0, -331); (Tag3 ((("pattern", 986)), 0, (0)), 100000000, 0, -333); (Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -334)]), 0, (("astlib/ast_402.ml", 270, 9141, 9145), ("astlib/ast_402.ml", 270, 9141, 9207), 0), 0, Tag1 ("Astlib__Ast_402", 140)); (("Pexp_apply", 744), ([(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -335); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 964)), "label"), 0, (0)), 100000000, 0, -338); (Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -339)]), 100000000, 0, -337)], (0)), 100000000, 0, -336)]), 0, (("astlib/ast_402.ml", 281, 9712, 9716), ("astlib/ast_402.ml", 281, 9712, 9770), 0), 0, Tag1 ("Astlib__Ast_402", 141)); (("Pexp_match", 745), ([(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -340); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 990)), 0, (0)), 100000000, 0, -342)], (0)), 100000000, 0, -341)]), 0, (("astlib/ast_402.ml", 288, 9954, 9958), ("astlib/ast_402.ml", 288, 9954, 9996), 0), 0, Tag1 ("Astlib__Ast_402", 142)); (("Pexp_try", 746), ([(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -343); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 990)), 0, (0)), 100000000, 0, -345)], (0)), 100000000, 0, -344)]), 0, (("astlib/ast_402.ml", 290, 10053, 10057), ("astlib/ast_402.ml", 290, 10053, 10093), 0), 0, Tag1 ("Astlib__Ast_402", 143)); (("Pexp_tuple", 747), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -347)], (0)), 100000000, 0, -346)]), 0, (("astlib/ast_402.ml", 292, 10148, 10152), ("astlib/ast_402.ml", 292, 10148, 10183), 0), 0, Tag1 ("Astlib__Ast_402", 144)); (("Pexp_construct", 748), ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -349)], (0)), 100000000, 0, -348); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -351)], (0)), 100000000, 0, -350)]), 0, (("astlib/ast_402.ml", 297, 10256, 10260), ("astlib/ast_402.ml", 297, 10256, 10315), 0), 0, Tag1 ("Astlib__Ast_402", 145)); (("Pexp_variant", 749), ([(Tag3 (Tag1 ((("Asttypes", 964)), "label"), 0, (0)), 100000000, 0, -352); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -354)], (0)), 100000000, 0, -353)]), 0, (("astlib/ast_402.ml", 302, 10460, 10464), ("astlib/ast_402.ml", 302, 10460, 10507), 0), 0, Tag1 ("Astlib__Ast_402", 146)); (("Pexp_record", 750), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -358)], (0)), 100000000, 0, -357); (Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -359)]), 100000000, 0, -356)], (0)), 100000000, 0, -355); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -361)], (0)), 100000000, 0, -360)]), 0, (("astlib/ast_402.ml", 306, 10594, 10598), ("astlib/ast_402.ml", 306, 10594, 10670), 0), 0, Tag1 ("Astlib__Ast_402", 147)); (("Pexp_field", 751), ([(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -362); (Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -364)], (0)), 100000000, 0, -363)]), 0, (("astlib/ast_402.ml", 312, 10817, 10821), ("astlib/ast_402.ml", 312, 10817, 10865), 0), 0, Tag1 ("Astlib__Ast_402", 148)); (("Pexp_setfield", 752), ([(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -365); (Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -367)], (0)), 100000000, 0, -366); (Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -368)]), 0, (("astlib/ast_402.ml", 314, 10886, 10890), ("astlib/ast_402.ml", 314, 10886, 10950), 0), 0, Tag1 ("Astlib__Ast_402", 149)); (("Pexp_array", 753), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -370)], (0)), 100000000, 0, -369)]), 0, (("astlib/ast_402.ml", 316, 10978, 10982), ("astlib/ast_402.ml", 316, 10978, 11013), 0), 0, Tag1 ("Astlib__Ast_402", 150)); (("Pexp_ifthenelse", 754), ([(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -371); (Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -372); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -374)], (0)), 100000000, 0, -373)]), 0, (("astlib/ast_402.ml", 318, 11048, 11052), ("astlib/ast_402.ml", 318, 11048, 11116), 0), 0, Tag1 ("Astlib__Ast_402", 151)); (("Pexp_sequence", 755), ([(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -375); (Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -376)]), 0, (("astlib/ast_402.ml", 320, 11155, 11159), ("astlib/ast_402.ml", 320, 11155, 11201), 0), 0, Tag1 ("Astlib__Ast_402", 152)); (("Pexp_while", 756), ([(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -377); (Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -378)]), 0, (("astlib/ast_402.ml", 322, 11225, 11229), ("astlib/ast_402.ml", 322, 11225, 11268), 0), 0, Tag1 ("Astlib__Ast_402", 153)); (("Pexp_for", 757), ([(Tag3 ((("pattern", 986)), 0, (0)), 100000000, 0, -379); (Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -380); (Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -381); (Tag3 (Tag1 ((("Asttypes", 964)), "direction_flag"), 0, (0)), 100000000, 0, -382); (Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -383)]), 0, (("astlib/ast_402.ml", 324, 11305, 11309), ("astlib/ast_402.ml", 325, 11323, 11395), 0), 0, Tag1 ("Astlib__Ast_402", 154)); (("Pexp_constraint", 758), ([(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -384); (Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -385)]), 0, (("astlib/ast_402.ml", 329, 11532, 11536), ("astlib/ast_402.ml", 329, 11532, 11579), 0), 0, Tag1 ("Astlib__Ast_402", 155)); (("Pexp_coerce", 759), ([(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -386); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -388)], (0)), 100000000, 0, -387); (Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -389)]), 0, (("astlib/ast_402.ml", 331, 11604, 11608), ("astlib/ast_402.ml", 331, 11604, 11666), 0), 0, Tag1 ("Astlib__Ast_402", 156)); (("Pexp_send", 760), ([(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -390); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -391)]), 0, (("astlib/ast_402.ml", 335, 11762, 11766), ("astlib/ast_402.ml", 335, 11762, 11800), 0), 0, Tag1 ("Astlib__Ast_402", 157)); (("Pexp_new", 761), ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -393)], (0)), 100000000, 0, -392)]), 0, (("astlib/ast_402.ml", 337, 11824, 11828), ("astlib/ast_402.ml", 337, 11824, 11857), 0), 0, Tag1 ("Astlib__Ast_402", 158)); (("Pexp_setinstvar", 762), ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -395)], (0)), 100000000, 0, -394); (Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -396)]), 0, (("astlib/ast_402.ml", 339, 11882, 11886), ("astlib/ast_402.ml", 339, 11882, 11930), 0), 0, Tag1 ("Astlib__Ast_402", 159)); (("Pexp_override", 763), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -400)], (0)), 100000000, 0, -399); (Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -401)]), 100000000, 0, -398)], (0)), 100000000, 0, -397)]), 0, (("astlib/ast_402.ml", 341, 11954, 11958), ("astlib/ast_402.ml", 341, 11954, 12007), 0), 0, Tag1 ("Astlib__Ast_402", 160)); (("Pexp_letmodule", 764), ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -403)], (0)), 100000000, 0, -402); (Tag3 ((("module_expr", 1026)), 0, (0)), 100000000, 0, -404); (Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -405)]), 0, (("astlib/ast_402.ml", 343, 12052, 12056), ("astlib/ast_402.ml", 343, 12052, 12113), 0), 0, Tag1 ("Astlib__Ast_402", 161)); (("Pexp_assert", 765), ([(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -406)]), 0, (("astlib/ast_402.ml", 345, 12153, 12157), ("astlib/ast_402.ml", 345, 12153, 12184), 0), 0, Tag1 ("Astlib__Ast_402", 162)); (("Pexp_lazy", 766), ([(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -407)]), 0, (("astlib/ast_402.ml", 349, 12306, 12310), ("astlib/ast_402.ml", 349, 12306, 12335), 0), 0, Tag1 ("Astlib__Ast_402", 163)); (("Pexp_poly", 767), ([(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -408); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -410)], (0)), 100000000, 0, -409)]), 0, (("astlib/ast_402.ml", 351, 12359, 12363), ("astlib/ast_402.ml", 351, 12359, 12407), 0), 0, Tag1 ("Astlib__Ast_402", 164)); (("Pexp_object", 768), ([(Tag3 ((("class_structure", 1009)), 0, (0)), 100000000, 0, -411)]), 0, (("astlib/ast_402.ml", 356, 12555, 12559), ("astlib/ast_402.ml", 356, 12555, 12591), 0), 0, Tag1 ("Astlib__Ast_402", 165)); (("Pexp_newtype", 769), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -412); (Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -413)]), 0, (("astlib/ast_402.ml", 358, 12623, 12627), ("astlib/ast_402.ml", 358, 12623, 12664), 0), 0, Tag1 ("Astlib__Ast_402", 166)); (("Pexp_pack", 770), ([(Tag3 ((("module_expr", 1026)), 0, (0)), 100000000, 0, -414)]), 0, (("astlib/ast_402.ml", 360, 12699, 12703), ("astlib/ast_402.ml", 360, 12699, 12729), 0), 0, Tag1 ("Astlib__Ast_402", 167)); (("Pexp_open", 771), ([(Tag3 (Tag1 ((("Asttypes", 964)), "override_flag"), 0, (0)), 100000000, 0, -415); (Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -417)], (0)), 100000000, 0, -416); (Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -418)]), 0, (("astlib/ast_402.ml", 365, 12862, 12866), ("astlib/ast_402.ml", 365, 12862, 12925), 0), 0, Tag1 ("Astlib__Ast_402", 168)); (("Pexp_extension", 772), ([(Tag3 ((("extension", 979)), 0, (0)), 100000000, 0, -419)]), 0, (("astlib/ast_402.ml", 369, 12998, 13002), ("astlib/ast_402.ml", 369, 12998, 13031), 0), 0, Tag1 ("Astlib__Ast_402", 169))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 257, 8599, 8601), ("astlib/ast_402.ml", 369, 12998, 13031), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 49)), 2, 0); Tag1 (("case", 990), (0, 0, [[(("pc_lhs", 773), 0, (Tag3 ((("pattern", 986)), 0, (0)), 100000000, 0, -317), (("astlib/ast_402.ml", 374, 13146, 13153), ("astlib/ast_402.ml", 374, 13146, 13169), 0), 0, Tag1 ("Astlib__Ast_402", 170)); (("pc_guard", 774), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -319)], (0)), 100000000, 0, -318), (("astlib/ast_402.ml", 375, 13170, 13177), ("astlib/ast_402.ml", 375, 13170, 13205), 0), 0, Tag1 ("Astlib__Ast_402", 171)); (("pc_rhs", 775), 0, (Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -320), (("astlib/ast_402.ml", 376, 13206, 13213), ("astlib/ast_402.ml", 376, 13206, 13232), 0), 0, Tag1 ("Astlib__Ast_402", 172))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 372, 13055, 13057), ("astlib/ast_402.ml", 377, 13233, 13240), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 50)), 2, 0); Tag1 (("value_description", 991), (0, 0, [[(("pval_name", 776), 0, (Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -311)], (0)), 100000000, 0, -310), (("astlib/ast_402.ml", 383, 13350, 13357), ("astlib/ast_402.ml", 383, 13350, 13379), 0), 0, Tag1 ("Astlib__Ast_402", 173)); (("pval_type", 777), 0, (Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -312), (("astlib/ast_402.ml", 384, 13380, 13387), ("astlib/ast_402.ml", 384, 13380, 13408), 0), 0, Tag1 ("Astlib__Ast_402", 174)); (("pval_prim", 778), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -314)], (0)), 100000000, 0, -313), (("astlib/ast_402.ml", 385, 13409, 13416), ("astlib/ast_402.ml", 385, 13409, 13439), 0), 0, Tag1 ("Astlib__Ast_402", 175)); (("pval_attributes", 779), 0, (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -315), (("astlib/ast_402.ml", 386, 13440, 13447), ("astlib/ast_402.ml", 386, 13440, 13475), 0), 0, Tag1 ("Astlib__Ast_402", 176)); (("pval_loc", 780), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -316), (("astlib/ast_402.ml", 387, 13503, 13510), ("astlib/ast_402.ml", 387, 13503, 13531), 0), 0, Tag1 ("Astlib__Ast_402", 177))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 381, 13270, 13272), ("astlib/ast_402.ml", 388, 13532, 13539), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 51)), 2, 0); Tag1 (("type_declaration", 992), (0, 0, [[(("ptype_name", 781), 0, (Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -294)], (0)), 100000000, 0, -293), (("astlib/ast_402.ml", 401, 13837, 13844), ("astlib/ast_402.ml", 401, 13837, 13867), 0), 0, Tag1 ("Astlib__Ast_402", 178)); (("ptype_params", 782), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -297); (Tag3 (Tag1 ((("Asttypes", 964)), "variance"), 0, (0)), 100000000, 0, -298)]), 100000000, 0, -296)], (0)), 100000000, 0, -295), (("astlib/ast_402.ml", 402, 13868, 13875), ("astlib/ast_402.ml", 402, 13868, 13917), 0), 0, Tag1 ("Astlib__Ast_402", 179)); (("ptype_cstrs", 783), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -301); (Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -302); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -303)]), 100000000, 0, -300)], (0)), 100000000, 0, -299), (("astlib/ast_402.ml", 404, 13971, 13978), ("astlib/ast_402.ml", 404, 13971, 14033), 0), 0, Tag1 ("Astlib__Ast_402", 180)); (("ptype_kind", 784), 0, (Tag3 ((("type_kind", 993)), 0, (0)), 100000000, 0, -304), (("astlib/ast_402.ml", 406, 14098, 14105), ("astlib/ast_402.ml", 406, 14098, 14127), 0), 0, Tag1 ("Astlib__Ast_402", 181)); (("ptype_private", 785), 0, (Tag3 (Tag1 ((("Asttypes", 964)), "private_flag"), 0, (0)), 100000000, 0, -305), (("astlib/ast_402.ml", 407, 14128, 14135), ("astlib/ast_402.ml", 407, 14128, 14163), 0), 0, Tag1 ("Astlib__Ast_402", 182)); (("ptype_manifest", 786), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -307)], (0)), 100000000, 0, -306), (("astlib/ast_402.ml", 408, 14186, 14193), ("astlib/ast_402.ml", 408, 14186, 14226), 0), 0, Tag1 ("Astlib__Ast_402", 183)); (("ptype_attributes", 787), 0, (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -308), (("astlib/ast_402.ml", 409, 14238, 14245), ("astlib/ast_402.ml", 409, 14238, 14274), 0), 0, Tag1 ("Astlib__Ast_402", 184)); (("ptype_loc", 788), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -309), (("astlib/ast_402.ml", 410, 14303, 14310), ("astlib/ast_402.ml", 410, 14303, 14332), 0), 0, Tag1 ("Astlib__Ast_402", 185))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 399, 13759, 13761), ("astlib/ast_402.ml", 411, 14333, 14340), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 52)), 2, 0); Tag1 (("type_kind", 993), (0, 0, Tag1 ([(("Ptype_abstract", 789), (0), 0, (("astlib/ast_402.ml", 424, 14794, 14798), ("astlib/ast_402.ml", 424, 14794, 14814), 0), 0, Tag1 ("Astlib__Ast_402", 186)); (("Ptype_variant", 790), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("constructor_declaration", 995)), 0, (0)), 100000000, 0, -290)], (0)), 100000000, 0, -289)]), 0, (("astlib/ast_402.ml", 425, 14815, 14819), ("astlib/ast_402.ml", 425, 14815, 14866), 0), 0, Tag1 ("Astlib__Ast_402", 187)); (("Ptype_record", 791), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 994)), 0, (0)), 100000000, 0, -292)], (0)), 100000000, 0, -291)]), 0, (("astlib/ast_402.ml", 427, 14909, 14913), ("astlib/ast_402.ml", 427, 14909, 14953), 0), 0, Tag1 ("Astlib__Ast_402", 188)); (("Ptype_open", 792), (0), 0, (("astlib/ast_402.ml", 429, 14996, 15000), ("astlib/ast_402.ml", 429, 14996, 15012), 0), 0, Tag1 ("Astlib__Ast_402", 189))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 423, 14738, 14740), ("astlib/ast_402.ml", 429, 14996, 15012), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 53)), 2, 0); Tag1 (("label_declaration", 994), (0, 0, [[(("pld_name", 793), 0, (Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -284)], (0)), 100000000, 0, -283), (("astlib/ast_402.ml", 433, 15094, 15101), ("astlib/ast_402.ml", 433, 15094, 15122), 0), 0, Tag1 ("Astlib__Ast_402", 190)); (("pld_mutable", 794), 0, (Tag3 (Tag1 ((("Asttypes", 964)), "mutable_flag"), 0, (0)), 100000000, 0, -285), (("astlib/ast_402.ml", 434, 15123, 15130), ("astlib/ast_402.ml", 434, 15123, 15156), 0), 0, Tag1 ("Astlib__Ast_402", 191)); (("pld_type", 795), 0, (Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -286), (("astlib/ast_402.ml", 435, 15157, 15164), ("astlib/ast_402.ml", 435, 15157, 15184), 0), 0, Tag1 ("Astlib__Ast_402", 192)); (("pld_loc", 796), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -287), (("astlib/ast_402.ml", 436, 15185, 15192), ("astlib/ast_402.ml", 436, 15185, 15212), 0), 0, Tag1 ("Astlib__Ast_402", 193)); (("pld_attributes", 797), 0, (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -288), (("astlib/ast_402.ml", 437, 15213, 15220), ("astlib/ast_402.ml", 437, 15213, 15247), 0), 0, Tag1 ("Astlib__Ast_402", 194))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 431, 15014, 15016), ("astlib/ast_402.ml", 438, 15274, 15281), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 54)), 2, 0); Tag1 (("constructor_declaration", 995), (0, 0, [[(("pcd_name", 798), 0, (Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -276)], (0)), 100000000, 0, -275), (("astlib/ast_402.ml", 448, 15526, 15533), ("astlib/ast_402.ml", 448, 15526, 15554), 0), 0, Tag1 ("Astlib__Ast_402", 195)); (("pcd_args", 799), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -278)], (0)), 100000000, 0, -277), (("astlib/ast_402.ml", 449, 15555, 15562), ("astlib/ast_402.ml", 449, 15555, 15587), 0), 0, Tag1 ("Astlib__Ast_402", 196)); (("pcd_res", 800), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -280)], (0)), 100000000, 0, -279), (("astlib/ast_402.ml", 450, 15588, 15595), ("astlib/ast_402.ml", 450, 15588, 15621), 0), 0, Tag1 ("Astlib__Ast_402", 197)); (("pcd_loc", 801), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -281), (("astlib/ast_402.ml", 451, 15622, 15629), ("astlib/ast_402.ml", 451, 15622, 15649), 0), 0, Tag1 ("Astlib__Ast_402", 198)); (("pcd_attributes", 802), 0, (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -282), (("astlib/ast_402.ml", 452, 15650, 15657), ("astlib/ast_402.ml", 452, 15650, 15684), 0), 0, Tag1 ("Astlib__Ast_402", 199))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 446, 15434, 15436), ("astlib/ast_402.ml", 453, 15714, 15721), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 55)), 2, 0); Tag1 (("type_extension", 996), (0, 0, [[(("ptyext_path", 803), 0, (Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -266)], (0)), 100000000, 0, -265), (("astlib/ast_402.ml", 462, 15950, 15957), ("astlib/ast_402.ml", 462, 15950, 15986), 0), 0, Tag1 ("Astlib__Ast_402", 200)); (("ptyext_params", 804), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -269); (Tag3 (Tag1 ((("Asttypes", 964)), "variance"), 0, (0)), 100000000, 0, -270)]), 100000000, 0, -268)], (0)), 100000000, 0, -267), (("astlib/ast_402.ml", 463, 15987, 15994), ("astlib/ast_402.ml", 463, 15987, 16037), 0), 0, Tag1 ("Astlib__Ast_402", 201)); (("ptyext_constructors", 805), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("extension_constructor", 997)), 0, (0)), 100000000, 0, -272)], (0)), 100000000, 0, -271), (("astlib/ast_402.ml", 464, 16038, 16045), ("astlib/ast_402.ml", 464, 16038, 16093), 0), 0, Tag1 ("Astlib__Ast_402", 202)); (("ptyext_private", 806), 0, (Tag3 (Tag1 ((("Asttypes", 964)), "private_flag"), 0, (0)), 100000000, 0, -273), (("astlib/ast_402.ml", 465, 16094, 16101), ("astlib/ast_402.ml", 465, 16094, 16130), 0), 0, Tag1 ("Astlib__Ast_402", 203)); (("ptyext_attributes", 807), 0, (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -274), (("astlib/ast_402.ml", 466, 16131, 16138), ("astlib/ast_402.ml", 466, 16131, 16168), 0), 0, Tag1 ("Astlib__Ast_402", 204))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 460, 15876, 15878), ("astlib/ast_402.ml", 467, 16197, 16204), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 56)), 2, 0); Tag1 (("extension_constructor", 997), (0, 0, [[(("pext_name", 808), 0, (Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -261)], (0)), 100000000, 0, -260), (("astlib/ast_402.ml", 474, 16322, 16329), ("astlib/ast_402.ml", 474, 16322, 16351), 0), 0, Tag1 ("Astlib__Ast_402", 205)); (("pext_kind", 809), 0, (Tag3 ((("extension_constructor_kind", 998)), 0, (0)), 100000000, 0, -262), (("astlib/ast_402.ml", 475, 16352, 16359), ("astlib/ast_402.ml", 475, 16352, 16398), 0), 0, Tag1 ("Astlib__Ast_402", 206)); (("pext_loc", 810), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -263), (("astlib/ast_402.ml", 476, 16399, 16406), ("astlib/ast_402.ml", 476, 16399, 16428), 0), 0, Tag1 ("Astlib__Ast_402", 207)); (("pext_attributes", 811), 0, (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -264), (("astlib/ast_402.ml", 477, 16429, 16436), ("astlib/ast_402.ml", 477, 16429, 16464), 0), 0, Tag1 ("Astlib__Ast_402", 208))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 472, 16234, 16236), ("astlib/ast_402.ml", 478, 16494, 16501), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 57)), 2, 0); Tag1 (("extension_constructor_kind", 998), (0, 0, Tag1 ([(("Pext_decl", 812), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -255)], (0)), 100000000, 0, -254); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -257)], (0)), 100000000, 0, -256)]), 0, (("astlib/ast_402.ml", 481, 16593, 16599), ("astlib/ast_402.ml", 481, 16593, 16645), 0), 0, Tag1 ("Astlib__Ast_402", 209)); (("Pext_rebind", 813), ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -259)], (0)), 100000000, 0, -258)]), 0, (("astlib/ast_402.ml", 487, 16838, 16842), ("astlib/ast_402.ml", 487, 16838, 16874), 0), 0, Tag1 ("Astlib__Ast_402", 210))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 480, 16503, 16505), ("astlib/ast_402.ml", 487, 16838, 16874), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 58)), 2, 0); Tag1 (("class_type", 999), (0, 0, [[(("pcty_desc", 814), 0, (Tag3 ((("class_type_desc", 1000)), 0, (0)), 100000000, 0, -251), (("astlib/ast_402.ml", 498, 17062, 17069), ("astlib/ast_402.ml", 498, 17062, 17096), 0), 0, Tag1 ("Astlib__Ast_402", 211)); (("pcty_loc", 815), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -252), (("astlib/ast_402.ml", 499, 17097, 17104), ("astlib/ast_402.ml", 499, 17097, 17125), 0), 0, Tag1 ("Astlib__Ast_402", 212)); (("pcty_attributes", 816), 0, (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -253), (("astlib/ast_402.ml", 500, 17126, 17133), ("astlib/ast_402.ml", 500, 17126, 17161), 0), 0, Tag1 ("Astlib__Ast_402", 213))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 496, 16996, 16998), ("astlib/ast_402.ml", 501, 17186, 17193), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 59)), 2, 0); Tag1 (("class_type_desc", 1000), (0, 0, Tag1 ([(("Pcty_constr", 817), ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -243)], (0)), 100000000, 0, -242); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -245)], (0)), 100000000, 0, -244)]), 0, (("astlib/ast_402.ml", 504, 17263, 17267), ("astlib/ast_402.ml", 504, 17263, 17316), 0), 0, Tag1 ("Astlib__Ast_402", 214)); (("Pcty_signature", 818), ([(Tag3 ((("class_signature", 1001)), 0, (0)), 100000000, 0, -246)]), 0, (("astlib/ast_402.ml", 507, 17366, 17370), ("astlib/ast_402.ml", 507, 17366, 17405), 0), 0, Tag1 ("Astlib__Ast_402", 215)); (("Pcty_arrow", 819), ([(Tag3 (Tag1 ((("Asttypes", 964)), "label"), 0, (0)), 100000000, 0, -247); (Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -248); (Tag3 ((("class_type", 999)), 0, (0)), 100000000, 0, -249)]), 0, (("astlib/ast_402.ml", 509, 17437, 17441), ("astlib/ast_402.ml", 509, 17437, 17487), 0), 0, Tag1 ("Astlib__Ast_402", 216)); (("Pcty_extension", 820), ([(Tag3 ((("extension", 979)), 0, (0)), 100000000, 0, -250)]), 0, (("astlib/ast_402.ml", 514, 17625, 17629), ("astlib/ast_402.ml", 514, 17625, 17658), 0), 0, Tag1 ("Astlib__Ast_402", 217))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 503, 17195, 17197), ("astlib/ast_402.ml", 514, 17625, 17658), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 60)), 2, 0); Tag1 (("class_signature", 1001), (0, 0, [[(("pcsig_self", 821), 0, (Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -239), (("astlib/ast_402.ml", 519, 17758, 17765), ("astlib/ast_402.ml", 519, 17758, 17787), 0), 0, Tag1 ("Astlib__Ast_402", 218)); (("pcsig_fields", 822), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_field", 1002)), 0, (0)), 100000000, 0, -241)], (0)), 100000000, 0, -240), (("astlib/ast_402.ml", 520, 17788, 17795), ("astlib/ast_402.ml", 520, 17788, 17831), 0), 0, Tag1 ("Astlib__Ast_402", 219))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 517, 17682, 17684), ("astlib/ast_402.ml", 521, 17832, 17839), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 61)), 2, 0); Tag1 (("class_type_field", 1002), (0, 0, [[(("pctf_desc", 823), 0, (Tag3 ((("class_type_field_desc", 1003)), 0, (0)), 100000000, 0, -236), (("astlib/ast_402.ml", 528, 18005, 18012), ("astlib/ast_402.ml", 528, 18005, 18045), 0), 0, Tag1 ("Astlib__Ast_402", 220)); (("pctf_loc", 824), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -237), (("astlib/ast_402.ml", 529, 18046, 18053), ("astlib/ast_402.ml", 529, 18046, 18074), 0), 0, Tag1 ("Astlib__Ast_402", 221)); (("pctf_attributes", 825), 0, (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -238), (("astlib/ast_402.ml", 530, 18075, 18082), ("astlib/ast_402.ml", 530, 18075, 18110), 0), 0, Tag1 ("Astlib__Ast_402", 222))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 526, 17927, 17929), ("astlib/ast_402.ml", 531, 18137, 18144), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 62)), 2, 0); Tag1 (("class_type_field_desc", 1003), (0, 0, Tag1 ([(("Pctf_inherit", 826), ([(Tag3 ((("class_type", 999)), 0, (0)), 100000000, 0, -220)]), 0, (("astlib/ast_402.ml", 534, 18226, 18230), ("astlib/ast_402.ml", 534, 18226, 18258), 0), 0, Tag1 ("Astlib__Ast_402", 223)); (("Pctf_val", 827), ([(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -222); (Tag3 (Tag1 ((("Asttypes", 964)), "mutable_flag"), 0, (0)), 100000000, 0, -223); (Tag3 (Tag1 ((("Asttypes", 964)), "virtual_flag"), 0, (0)), 100000000, 0, -224); (Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -225)]), 100000000, 0, -221)]), 0, (("astlib/ast_402.ml", 536, 18286, 18290), ("astlib/ast_402.ml", 536, 18286, 18354), 0), 0, Tag1 ("Astlib__Ast_402", 224)); (("Pctf_method", 828), ([(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -227); (Tag3 (Tag1 ((("Asttypes", 964)), "private_flag"), 0, (0)), 100000000, 0, -228); (Tag3 (Tag1 ((("Asttypes", 964)), "virtual_flag"), 0, (0)), 100000000, 0, -229); (Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -230)]), 100000000, 0, -226)]), 0, (("astlib/ast_402.ml", 538, 18380, 18384), ("astlib/ast_402.ml", 538, 18380, 18452), 0), 0, Tag1 ("Astlib__Ast_402", 225)); (("Pctf_constraint", 829), ([(Tag2 ([(Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -232); (Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -233)]), 100000000, 0, -231)]), 0, (("astlib/ast_402.ml", 543, 18534, 18538), ("astlib/ast_402.ml", 543, 18534, 18583), 0), 0, Tag1 ("Astlib__Ast_402", 226)); (("Pctf_attribute", 830), ([(Tag3 ((("attribute", 978)), 0, (0)), 100000000, 0, -234)]), 0, (("astlib/ast_402.ml", 545, 18619, 18623), ("astlib/ast_402.ml", 545, 18619, 18652), 0), 0, Tag1 ("Astlib__Ast_402", 227)); (("Pctf_extension", 831), ([(Tag3 ((("extension", 979)), 0, (0)), 100000000, 0, -235)]), 0, (("astlib/ast_402.ml", 547, 18677, 18681), ("astlib/ast_402.ml", 547, 18677, 18710), 0), 0, Tag1 ("Astlib__Ast_402", 228))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 533, 18146, 18148), ("astlib/ast_402.ml", 547, 18677, 18710), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 63)), 2, 0); Tag1 (("class_infos", 1004), ([((("a")), 100000000, 0, -217)], 1, [[(("pci_virt", 832), 0, (Tag3 (Tag1 ((("Asttypes", 964)), "virtual_flag"), 0, (0)), 100000000, 0, -210), (("astlib/ast_402.ml", 552, 18809, 18816), ("astlib/ast_402.ml", 552, 18809, 18839), 0), 0, Tag1 ("Astlib__Ast_402", 229)); (("pci_params", 833), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -213); (Tag3 (Tag1 ((("Asttypes", 964)), "variance"), 0, (0)), 100000000, 0, -214)]), 100000000, 0, -212)], (0)), 100000000, 0, -211), (("astlib/ast_402.ml", 553, 18840, 18847), ("astlib/ast_402.ml", 553, 18840, 18887), 0), 0, Tag1 ("Astlib__Ast_402", 230)); (("pci_name", 834), 0, (Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -216)], (0)), 100000000, 0, -215), (("astlib/ast_402.ml", 554, 18888, 18895), ("astlib/ast_402.ml", 554, 18888, 18916), 0), 0, Tag1 ("Astlib__Ast_402", 231)); (("pci_expr", 835), 0, ((("a")), 100000000, 0, -217), (("astlib/ast_402.ml", 555, 18917, 18924), ("astlib/ast_402.ml", 555, 18917, 18937), 0), 0, Tag1 ("Astlib__Ast_402", 232)); (("pci_loc", 836), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -218), (("astlib/ast_402.ml", 556, 18938, 18945), ("astlib/ast_402.ml", 556, 18938, 18965), 0), 0, Tag1 ("Astlib__Ast_402", 233)); (("pci_attributes", 837), 0, (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -219), (("astlib/ast_402.ml", 557, 18966, 18973), ("astlib/ast_402.ml", 557, 18966, 19000), 0), 0, Tag1 ("Astlib__Ast_402", 234))]], 1, 0, [25], [0], 0, 0, (("astlib/ast_402.ml", 550, 18735, 18737), ("astlib/ast_402.ml", 558, 19028, 19035), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 64)), 2, 0); Tag1 (("class_description", 1005), (0, 0, 0, 1, ((Tag3 ((("class_infos", 1004)), [(Tag3 ((("class_type", 999)), 0, (0)), 100000000, 0, -209)], (0)), 100000000, 0, -208)), 0, 0, 0, 0, (("astlib/ast_402.ml", 566, 19167, 19169), ("astlib/ast_402.ml", 566, 19167, 19215), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 65)), 2, 0); Tag1 (("class_type_declaration", 1006), (0, 0, 0, 1, ((Tag3 ((("class_infos", 1004)), [(Tag3 ((("class_type", 999)), 0, (0)), 100000000, 0, -207)], (0)), 100000000, 0, -206)), 0, 0, 0, 0, (("astlib/ast_402.ml", 568, 19217, 19219), ("astlib/ast_402.ml", 568, 19217, 19270), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 66)), 2, 0); Tag1 (("class_expr", 1007), (0, 0, [[(("pcl_desc", 838), 0, (Tag3 ((("class_expr_desc", 1008)), 0, (0)), 100000000, 0, -203), (("astlib/ast_402.ml", 574, 19388, 19395), ("astlib/ast_402.ml", 574, 19388, 19421), 0), 0, Tag1 ("Astlib__Ast_402", 235)); (("pcl_loc", 839), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -204), (("astlib/ast_402.ml", 575, 19422, 19429), ("astlib/ast_402.ml", 575, 19422, 19449), 0), 0, Tag1 ("Astlib__Ast_402", 236)); (("pcl_attributes", 840), 0, (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -205), (("astlib/ast_402.ml", 576, 19450, 19457), ("astlib/ast_402.ml", 576, 19450, 19484), 0), 0, Tag1 ("Astlib__Ast_402", 237))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 572, 19322, 19324), ("astlib/ast_402.ml", 577, 19509, 19516), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 67)), 2, 0); Tag1 (("class_expr_desc", 1008), (0, 0, Tag1 ([(("Pcl_constr", 841), ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -182)], (0)), 100000000, 0, -181); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -184)], (0)), 100000000, 0, -183)]), 0, (("astlib/ast_402.ml", 580, 19586, 19590), ("astlib/ast_402.ml", 580, 19586, 19638), 0), 0, Tag1 ("Astlib__Ast_402", 238)); (("Pcl_structure", 842), ([(Tag3 ((("class_structure", 1009)), 0, (0)), 100000000, 0, -185)]), 0, (("astlib/ast_402.ml", 583, 19688, 19692), ("astlib/ast_402.ml", 583, 19688, 19726), 0), 0, Tag1 ("Astlib__Ast_402", 239)); (("Pcl_fun", 843), ([(Tag3 (Tag1 ((("Asttypes", 964)), "label"), 0, (0)), 100000000, 0, -186); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -188)], (0)), 100000000, 0, -187); (Tag3 ((("pattern", 986)), 0, (0)), 100000000, 0, -189); (Tag3 ((("class_expr", 1007)), 0, (0)), 100000000, 0, -190)]), 0, (("astlib/ast_402.ml", 585, 19758, 19762), ("astlib/ast_402.ml", 585, 19758, 19823), 0), 0, Tag1 ("Astlib__Ast_402", 240)); (("Pcl_apply", 844), ([(Tag3 ((("class_expr", 1007)), 0, (0)), 100000000, 0, -191); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 964)), "label"), 0, (0)), 100000000, 0, -194); (Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -195)]), 100000000, 0, -193)], (0)), 100000000, 0, -192)]), 0, (("astlib/ast_402.ml", 591, 20114, 20118), ("astlib/ast_402.ml", 591, 20114, 20171), 0), 0, Tag1 ("Astlib__Ast_402", 241)); (("Pcl_let", 845), ([(Tag3 (Tag1 ((("Asttypes", 964)), "rec_flag"), 0, (0)), 100000000, 0, -196); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 1031)), 0, (0)), 100000000, 0, -198)], (0)), 100000000, 0, -197); (Tag3 ((("class_expr", 1007)), 0, (0)), 100000000, 0, -199)]), 0, (("astlib/ast_402.ml", 598, 20355, 20359), ("astlib/ast_402.ml", 598, 20355, 20414), 0), 0, Tag1 ("Astlib__Ast_402", 242)); (("Pcl_constraint", 846), ([(Tag3 ((("class_expr", 1007)), 0, (0)), 100000000, 0, -200); (Tag3 ((("class_type", 999)), 0, (0)), 100000000, 0, -201)]), 0, (("astlib/ast_402.ml", 602, 20582, 20586), ("astlib/ast_402.ml", 602, 20582, 20629), 0), 0, Tag1 ("Astlib__Ast_402", 243)); (("Pcl_extension", 847), ([(Tag3 ((("extension", 979)), 0, (0)), 100000000, 0, -202)]), 0, (("astlib/ast_402.ml", 604, 20656, 20660), ("astlib/ast_402.ml", 604, 20656, 20688), 0), 0, Tag1 ("Astlib__Ast_402", 244))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 579, 19518, 19520), ("astlib/ast_402.ml", 604, 20656, 20688), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 68)), 2, 0); Tag1 (("class_structure", 1009), (0, 0, [[(("pcstr_self", 848), 0, (Tag3 ((("pattern", 986)), 0, (0)), 100000000, 0, -178), (("astlib/ast_402.ml", 609, 20788, 20795), ("astlib/ast_402.ml", 609, 20788, 20815), 0), 0, Tag1 ("Astlib__Ast_402", 245)); (("pcstr_fields", 849), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_field", 1010)), 0, (0)), 100000000, 0, -180)], (0)), 100000000, 0, -179), (("astlib/ast_402.ml", 610, 20816, 20823), ("astlib/ast_402.ml", 610, 20816, 20854), 0), 0, Tag1 ("Astlib__Ast_402", 246))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 607, 20712, 20714), ("astlib/ast_402.ml", 611, 20855, 20862), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 69)), 2, 0); Tag1 (("class_field", 1010), (0, 0, [[(("pcf_desc", 850), 0, (Tag3 ((("class_field_desc", 1011)), 0, (0)), 100000000, 0, -175), (("astlib/ast_402.ml", 618, 21015, 21022), ("astlib/ast_402.ml", 618, 21015, 21049), 0), 0, Tag1 ("Astlib__Ast_402", 247)); (("pcf_loc", 851), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -176), (("astlib/ast_402.ml", 619, 21050, 21057), ("astlib/ast_402.ml", 619, 21050, 21077), 0), 0, Tag1 ("Astlib__Ast_402", 248)); (("pcf_attributes", 852), 0, (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -177), (("astlib/ast_402.ml", 620, 21078, 21085), ("astlib/ast_402.ml", 620, 21078, 21112), 0), 0, Tag1 ("Astlib__Ast_402", 249))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 616, 20947, 20949), ("astlib/ast_402.ml", 621, 21139, 21146), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 70)), 2, 0); Tag1 (("class_field_desc", 1011), (0, 0, Tag1 ([(("Pcf_inherit", 853), ([(Tag3 (Tag1 ((("Asttypes", 964)), "override_flag"), 0, (0)), 100000000, 0, -155); (Tag3 ((("class_expr", 1007)), 0, (0)), 100000000, 0, -156); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -158)], (0)), 100000000, 0, -157)]), 0, (("astlib/ast_402.ml", 624, 21218, 21222), ("astlib/ast_402.ml", 624, 21218, 21281), 0), 0, Tag1 ("Astlib__Ast_402", 250)); (("Pcf_val", 854), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -161)], (0)), 100000000, 0, -160); (Tag3 (Tag1 ((("Asttypes", 964)), "mutable_flag"), 0, (0)), 100000000, 0, -162); (Tag3 ((("class_field_kind", 1012)), 0, (0)), 100000000, 0, -163)]), 100000000, 0, -159)]), 0, (("astlib/ast_402.ml", 630, 21404, 21408), ("astlib/ast_402.ml", 630, 21404, 21467), 0), 0, Tag1 ("Astlib__Ast_402", 251)); (("Pcf_method", 855), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -166)], (0)), 100000000, 0, -165); (Tag3 (Tag1 ((("Asttypes", 964)), "private_flag"), 0, (0)), 100000000, 0, -167); (Tag3 ((("class_field_kind", 1012)), 0, (0)), 100000000, 0, -168)]), 100000000, 0, -164)]), 0, (("astlib/ast_402.ml", 634, 21535, 21539), ("astlib/ast_402.ml", 634, 21535, 21601), 0), 0, Tag1 ("Astlib__Ast_402", 252)); (("Pcf_constraint", 856), ([(Tag2 ([(Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -170); (Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -171)]), 100000000, 0, -169)]), 0, (("astlib/ast_402.ml", 638, 21736, 21740), ("astlib/ast_402.ml", 638, 21736, 21783), 0), 0, Tag1 ("Astlib__Ast_402", 253)); (("Pcf_initializer", 857), ([(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -172)]), 0, (("astlib/ast_402.ml", 640, 21819, 21823), ("astlib/ast_402.ml", 640, 21819, 21854), 0), 0, Tag1 ("Astlib__Ast_402", 254)); (("Pcf_attribute", 858), ([(Tag3 ((("attribute", 978)), 0, (0)), 100000000, 0, -173)]), 0, (("astlib/ast_402.ml", 642, 21885, 21889), ("astlib/ast_402.ml", 642, 21885, 21917), 0), 0, Tag1 ("Astlib__Ast_402", 255)); (("Pcf_extension", 859), ([(Tag3 ((("extension", 979)), 0, (0)), 100000000, 0, -174)]), 0, (("astlib/ast_402.ml", 644, 21942, 21946), ("astlib/ast_402.ml", 644, 21942, 21974), 0), 0, Tag1 ("Astlib__Ast_402", 256))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 623, 21148, 21150), ("astlib/ast_402.ml", 644, 21942, 21974), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 71)), 2, 0); Tag1 (("class_field_kind", 1012), (0, 0, Tag1 ([(("Cfk_virtual", 860), ([(Tag3 ((("core_type", 982)), 0, (0)), 100000000, 0, -152)]), 0, (("astlib/ast_402.ml", 648, 22069, 22073), ("astlib/ast_402.ml", 648, 22069, 22099), 0), 0, Tag1 ("Astlib__Ast_402", 257)); (("Cfk_concrete", 861), ([(Tag3 (Tag1 ((("Asttypes", 964)), "override_flag"), 0, (0)), 100000000, 0, -153); (Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -154)]), 0, (("astlib/ast_402.ml", 649, 22100, 22104), ("astlib/ast_402.ml", 649, 22100, 22148), 0), 0, Tag1 ("Astlib__Ast_402", 258))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 647, 21999, 22001), ("astlib/ast_402.ml", 649, 22100, 22148), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 72)), 2, 0); Tag1 (("class_declaration", 1013), (0, 0, 0, 1, ((Tag3 ((("class_infos", 1004)), [(Tag3 ((("class_expr", 1007)), 0, (0)), 100000000, 0, -151)], (0)), 100000000, 0, -150)), 0, 0, 0, 0, (("astlib/ast_402.ml", 651, 22150, 22152), ("astlib/ast_402.ml", 651, 22150, 22198), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 73)), 2, 0); Tag1 (("module_type", 1014), (0, 0, [[(("pmty_desc", 862), 0, (Tag3 ((("module_type_desc", 1015)), 0, (0)), 100000000, 0, -147), (("astlib/ast_402.ml", 659, 22348, 22355), ("astlib/ast_402.ml", 659, 22348, 22383), 0), 0, Tag1 ("Astlib__Ast_402", 259)); (("pmty_loc", 863), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -148), (("astlib/ast_402.ml", 660, 22384, 22391), ("astlib/ast_402.ml", 660, 22384, 22412), 0), 0, Tag1 ("Astlib__Ast_402", 260)); (("pmty_attributes", 864), 0, (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -149), (("astlib/ast_402.ml", 661, 22413, 22420), ("astlib/ast_402.ml", 661, 22413, 22448), 0), 0, Tag1 ("Astlib__Ast_402", 261))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 657, 22280, 22282), ("astlib/ast_402.ml", 662, 22473, 22480), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 74)), 2, 0); Tag1 (("module_type_desc", 1015), (0, 0, Tag1 ([(("Pmty_ident", 865), ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -133)], (0)), 100000000, 0, -132)]), 0, (("astlib/ast_402.ml", 665, 22552, 22556), ("astlib/ast_402.ml", 665, 22552, 22587), 0), 0, Tag1 ("Astlib__Ast_402", 262)); (("Pmty_signature", 866), ([(Tag3 ((("signature", 1016)), 0, (0)), 100000000, 0, -134)]), 0, (("astlib/ast_402.ml", 667, 22606, 22610), ("astlib/ast_402.ml", 667, 22606, 22639), 0), 0, Tag1 ("Astlib__Ast_402", 263)); (("Pmty_functor", 867), ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -136)], (0)), 100000000, 0, -135); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 1014)), 0, (0)), 100000000, 0, -138)], (0)), 100000000, 0, -137); (Tag3 ((("module_type", 1014)), 0, (0)), 100000000, 0, -139)]), 0, (("astlib/ast_402.ml", 669, 22668, 22672), ("astlib/ast_402.ml", 669, 22668, 22735), 0), 0, Tag1 ("Astlib__Ast_402", 264)); (("Pmty_with", 868), ([(Tag3 ((("module_type", 1014)), 0, (0)), 100000000, 0, -140); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("with_constraint", 1025)), 0, (0)), 100000000, 0, -142)], (0)), 100000000, 0, -141)]), 0, (("astlib/ast_402.ml", 671, 22776, 22780), ("astlib/ast_402.ml", 671, 22776, 22829), 0), 0, Tag1 ("Astlib__Ast_402", 265)); (("Pmty_typeof", 869), ([(Tag3 ((("module_expr", 1026)), 0, (0)), 100000000, 0, -143)]), 0, (("astlib/ast_402.ml", 673, 22858, 22862), ("astlib/ast_402.ml", 673, 22858, 22890), 0), 0, Tag1 ("Astlib__Ast_402", 266)); (("Pmty_extension", 870), ([(Tag3 ((("extension", 979)), 0, (0)), 100000000, 0, -144)]), 0, (("astlib/ast_402.ml", 675, 22925, 22929), ("astlib/ast_402.ml", 675, 22925, 22958), 0), 0, Tag1 ("Astlib__Ast_402", 267)); (("Pmty_alias", 871), ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -146)], (0)), 100000000, 0, -145)]), 0, (("astlib/ast_402.ml", 677, 22981, 22985), ("astlib/ast_402.ml", 677, 22981, 23016), 0), 0, Tag1 ("Astlib__Ast_402", 268))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 664, 22482, 22484), ("astlib/ast_402.ml", 677, 22981, 23016), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 75)), 2, 0); Tag1 (("signature", 1016), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("signature_item", 1017)), 0, (0)), 100000000, 0, -131)], (0)), 100000000, 0, -130)), 0, 0, 0, 0, (("astlib/ast_402.ml", 680, 23045, 23047), ("astlib/ast_402.ml", 680, 23045, 23082), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 76)), 2, 0); Tag1 (("signature_item", 1017), (0, 0, [[(("psig_desc", 872), 0, (Tag3 ((("signature_item_desc", 1018)), 0, (0)), 100000000, 0, -128), (("astlib/ast_402.ml", 684, 23158, 23165), ("astlib/ast_402.ml", 684, 23158, 23196), 0), 0, Tag1 ("Astlib__Ast_402", 269)); (("psig_loc", 873), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -129), (("astlib/ast_402.ml", 685, 23197, 23204), ("astlib/ast_402.ml", 685, 23197, 23225), 0), 0, Tag1 ("Astlib__Ast_402", 270))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 682, 23084, 23086), ("astlib/ast_402.ml", 686, 23226, 23233), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 77)), 2, 0); Tag1 (("signature_item_desc", 1018), (0, 0, Tag1 ([(("Psig_value", 874), ([(Tag3 ((("value_description", 991)), 0, (0)), 100000000, 0, -110)]), 0, (("astlib/ast_402.ml", 689, 23311, 23315), ("astlib/ast_402.ml", 689, 23311, 23348), 0), 0, Tag1 ("Astlib__Ast_402", 271)); (("Psig_type", 875), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 992)), 0, (0)), 100000000, 0, -112)], (0)), 100000000, 0, -111)]), 0, (("astlib/ast_402.ml", 694, 23439, 23443), ("astlib/ast_402.ml", 694, 23439, 23479), 0), 0, Tag1 ("Astlib__Ast_402", 272)); (("Psig_typext", 876), ([(Tag3 ((("type_extension", 996)), 0, (0)), 100000000, 0, -113)]), 0, (("astlib/ast_402.ml", 696, 23531, 23535), ("astlib/ast_402.ml", 696, 23531, 23566), 0), 0, Tag1 ("Astlib__Ast_402", 273)); (("Psig_exception", 877), ([(Tag3 ((("extension_constructor", 997)), 0, (0)), 100000000, 0, -114)]), 0, (("astlib/ast_402.ml", 698, 23598, 23602), ("astlib/ast_402.ml", 698, 23598, 23643), 0), 0, Tag1 ("Astlib__Ast_402", 274)); (("Psig_module", 878), ([(Tag3 ((("module_declaration", 1019)), 0, (0)), 100000000, 0, -115)]), 0, (("astlib/ast_402.ml", 700, 23677, 23681), ("astlib/ast_402.ml", 700, 23677, 23716), 0), 0, Tag1 ("Astlib__Ast_402", 275)); (("Psig_recmodule", 879), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_declaration", 1019)), 0, (0)), 100000000, 0, -117)], (0)), 100000000, 0, -116)]), 0, (("astlib/ast_402.ml", 702, 23747, 23751), ("astlib/ast_402.ml", 702, 23747, 23794), 0), 0, Tag1 ("Astlib__Ast_402", 276)); (("Psig_modtype", 880), ([(Tag3 ((("module_type_declaration", 1020)), 0, (0)), 100000000, 0, -118)]), 0, (("astlib/ast_402.ml", 704, 23852, 23856), ("astlib/ast_402.ml", 704, 23852, 23897), 0), 0, Tag1 ("Astlib__Ast_402", 277)); (("Psig_open", 881), ([(Tag3 ((("open_description", 1021)), 0, (0)), 100000000, 0, -119)]), 0, (("astlib/ast_402.ml", 707, 23960, 23964), ("astlib/ast_402.ml", 707, 23960, 23995), 0), 0, Tag1 ("Astlib__Ast_402", 278)); (("Psig_include", 882), ([(Tag3 ((("include_description", 1023)), 0, (0)), 100000000, 0, -120)]), 0, (("astlib/ast_402.ml", 709, 24019, 24023), ("astlib/ast_402.ml", 709, 24019, 24060), 0), 0, Tag1 ("Astlib__Ast_402", 279)); (("Psig_class", 883), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_description", 1005)), 0, (0)), 100000000, 0, -122)], (0)), 100000000, 0, -121)]), 0, (("astlib/ast_402.ml", 711, 24088, 24092), ("astlib/ast_402.ml", 711, 24088, 24130), 0), 0, Tag1 ("Astlib__Ast_402", 280)); (("Psig_class_type", 884), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 1006)), 0, (0)), 100000000, 0, -124)], (0)), 100000000, 0, -123)]), 0, (("astlib/ast_402.ml", 713, 24183, 24187), ("astlib/ast_402.ml", 713, 24183, 24235), 0), 0, Tag1 ("Astlib__Ast_402", 281)); (("Psig_attribute", 885), ([(Tag3 ((("attribute", 978)), 0, (0)), 100000000, 0, -125)]), 0, (("astlib/ast_402.ml", 715, 24295, 24299), ("astlib/ast_402.ml", 715, 24295, 24328), 0), 0, Tag1 ("Astlib__Ast_402", 282)); (("Psig_extension", 886), ([(Tag3 ((("extension", 979)), 0, (0)), 100000000, 0, -126); (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -127)]), 0, (("astlib/ast_402.ml", 717, 24353, 24357), ("astlib/ast_402.ml", 717, 24353, 24399), 0), 0, Tag1 ("Astlib__Ast_402", 283))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 688, 23235, 23237), ("astlib/ast_402.ml", 717, 24353, 24399), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 78)), 2, 0); Tag1 (("module_declaration", 1019), (0, 0, [[(("pmd_name", 887), 0, (Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -106)], (0)), 100000000, 0, -105), (("astlib/ast_402.ml", 722, 24506, 24513), ("astlib/ast_402.ml", 722, 24506, 24534), 0), 0, Tag1 ("Astlib__Ast_402", 284)); (("pmd_type", 888), 0, (Tag3 ((("module_type", 1014)), 0, (0)), 100000000, 0, -107), (("astlib/ast_402.ml", 723, 24535, 24542), ("astlib/ast_402.ml", 723, 24535, 24564), 0), 0, Tag1 ("Astlib__Ast_402", 285)); (("pmd_attributes", 889), 0, (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -108), (("astlib/ast_402.ml", 724, 24565, 24572), ("astlib/ast_402.ml", 724, 24565, 24599), 0), 0, Tag1 ("Astlib__Ast_402", 286)); (("pmd_loc", 890), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -109), (("astlib/ast_402.ml", 725, 24626, 24633), ("astlib/ast_402.ml", 725, 24626, 24653), 0), 0, Tag1 ("Astlib__Ast_402", 287))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 720, 24424, 24426), ("astlib/ast_402.ml", 726, 24654, 24661), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 79)), 2, 0); Tag1 (("module_type_declaration", 1020), (0, 0, [[(("pmtd_name", 891), 0, (Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -100)], (0)), 100000000, 0, -99), (("astlib/ast_402.ml", 731, 24770, 24777), ("astlib/ast_402.ml", 731, 24770, 24799), 0), 0, Tag1 ("Astlib__Ast_402", 288)); (("pmtd_type", 892), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 1014)), 0, (0)), 100000000, 0, -102)], (0)), 100000000, 0, -101), (("astlib/ast_402.ml", 732, 24800, 24807), ("astlib/ast_402.ml", 732, 24800, 24837), 0), 0, Tag1 ("Astlib__Ast_402", 289)); (("pmtd_attributes", 893), 0, (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -103), (("astlib/ast_402.ml", 733, 24838, 24845), ("astlib/ast_402.ml", 733, 24838, 24873), 0), 0, Tag1 ("Astlib__Ast_402", 290)); (("pmtd_loc", 894), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -104), (("astlib/ast_402.ml", 734, 24900, 24907), ("astlib/ast_402.ml", 734, 24900, 24928), 0), 0, Tag1 ("Astlib__Ast_402", 291))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 729, 24678, 24680), ("astlib/ast_402.ml", 735, 24929, 24936), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 80)), 2, 0); Tag1 (("open_description", 1021), (0, 0, [[(("popen_lid", 895), 0, (Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -95)], (0)), 100000000, 0, -94), (("astlib/ast_402.ml", 742, 25099, 25106), ("astlib/ast_402.ml", 742, 25099, 25133), 0), 0, Tag1 ("Astlib__Ast_402", 292)); (("popen_override", 896), 0, (Tag3 (Tag1 ((("Asttypes", 964)), "override_flag"), 0, (0)), 100000000, 0, -96), (("astlib/ast_402.ml", 743, 25134, 25141), ("astlib/ast_402.ml", 743, 25134, 25171), 0), 0, Tag1 ("Astlib__Ast_402", 293)); (("popen_loc", 897), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -97), (("astlib/ast_402.ml", 744, 25172, 25179), ("astlib/ast_402.ml", 744, 25172, 25201), 0), 0, Tag1 ("Astlib__Ast_402", 294)); (("popen_attributes", 898), 0, (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -98), (("astlib/ast_402.ml", 745, 25202, 25209), ("astlib/ast_402.ml", 745, 25202, 25238), 0), 0, Tag1 ("Astlib__Ast_402", 295))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 740, 25021, 25023), ("astlib/ast_402.ml", 746, 25239, 25246), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 81)), 2, 0); Tag1 (("include_infos", 1022), ([((("a")), 100000000, 0, -91)], 1, [[(("pincl_mod", 899), 0, ((("a")), 100000000, 0, -91), (("astlib/ast_402.ml", 754, 25494, 25501), ("astlib/ast_402.ml", 754, 25494, 25515), 0), 0, Tag1 ("Astlib__Ast_402", 296)); (("pincl_loc", 900), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -92), (("astlib/ast_402.ml", 755, 25516, 25523), ("astlib/ast_402.ml", 755, 25516, 25545), 0), 0, Tag1 ("Astlib__Ast_402", 297)); (("pincl_attributes", 901), 0, (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -93), (("astlib/ast_402.ml", 756, 25546, 25553), ("astlib/ast_402.ml", 756, 25546, 25582), 0), 0, Tag1 ("Astlib__Ast_402", 298))]], 1, 0, [25], [0], 0, 0, (("astlib/ast_402.ml", 752, 25416, 25418), ("astlib/ast_402.ml", 757, 25583, 25590), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 82)), 2, 0); Tag1 (("include_description", 1023), (0, 0, 0, 1, ((Tag3 ((("include_infos", 1022)), [(Tag3 ((("module_type", 1014)), 0, (0)), 100000000, 0, -90)], (0)), 100000000, 0, -89)), 0, 0, 0, 0, (("astlib/ast_402.ml", 759, 25592, 25594), ("astlib/ast_402.ml", 759, 25592, 25645), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 83)), 2, 0); Tag1 (("include_declaration", 1024), (0, 0, 0, 1, ((Tag3 ((("include_infos", 1022)), [(Tag3 ((("module_expr", 1026)), 0, (0)), 100000000, 0, -88)], (0)), 100000000, 0, -87)), 0, 0, 0, 0, (("astlib/ast_402.ml", 762, 25666, 25668), ("astlib/ast_402.ml", 762, 25666, 25719), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 84)), 2, 0); Tag1 (("with_constraint", 1025), (0, 0, Tag1 ([(("Pwith_type", 902), ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -76)], (0)), 100000000, 0, -75); (Tag3 ((("type_declaration", 992)), 0, (0)), 100000000, 0, -77)]), 0, (("astlib/ast_402.ml", 766, 25808, 25812), ("astlib/ast_402.ml", 766, 25808, 25862), 0), 0, Tag1 ("Astlib__Ast_402", 299)); (("Pwith_module", 903), ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -79)], (0)), 100000000, 0, -78); (Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -81)], (0)), 100000000, 0, -80)]), 0, (("astlib/ast_402.ml", 771, 26013, 26017), ("astlib/ast_402.ml", 771, 26013, 26068), 0), 0, Tag1 ("Astlib__Ast_402", 300)); (("Pwith_typesubst", 904), ([(Tag3 ((("type_declaration", 992)), 0, (0)), 100000000, 0, -82)]), 0, (("astlib/ast_402.ml", 773, 26105, 26109), ("astlib/ast_402.ml", 773, 26105, 26146), 0), 0, Tag1 ("Astlib__Ast_402", 301)); (("Pwith_modsubst", 905), ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -84)], (0)), 100000000, 0, -83); (Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -86)], (0)), 100000000, 0, -85)]), 0, (("astlib/ast_402.ml", 775, 26182, 26186), ("astlib/ast_402.ml", 775, 26182, 26234), 0), 0, Tag1 ("Astlib__Ast_402", 302))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 765, 25740, 25742), ("astlib/ast_402.ml", 775, 26182, 26234), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 85)), 2, 0); Tag1 (("module_expr", 1026), (0, 0, [[(("pmod_desc", 906), 0, (Tag3 ((("module_expr_desc", 1027)), 0, (0)), 100000000, 0, -72), (("astlib/ast_402.ml", 782, 26390, 26397), ("astlib/ast_402.ml", 782, 26390, 26425), 0), 0, Tag1 ("Astlib__Ast_402", 303)); (("pmod_loc", 907), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -73), (("astlib/ast_402.ml", 783, 26426, 26433), ("astlib/ast_402.ml", 783, 26426, 26454), 0), 0, Tag1 ("Astlib__Ast_402", 304)); (("pmod_attributes", 908), 0, (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -74), (("astlib/ast_402.ml", 784, 26455, 26462), ("astlib/ast_402.ml", 784, 26455, 26490), 0), 0, Tag1 ("Astlib__Ast_402", 305))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 780, 26322, 26324), ("astlib/ast_402.ml", 785, 26515, 26522), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 86)), 2, 0); Tag1 (("module_expr_desc", 1027), (0, 0, Tag1 ([(("Pmod_ident", 909), ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -59)], (0)), 100000000, 0, -58)]), 0, (("astlib/ast_402.ml", 788, 26594, 26598), ("astlib/ast_402.ml", 788, 26594, 26629), 0), 0, Tag1 ("Astlib__Ast_402", 306)); (("Pmod_structure", 910), ([(Tag3 ((("structure", 1028)), 0, (0)), 100000000, 0, -60)]), 0, (("astlib/ast_402.ml", 790, 26648, 26652), ("astlib/ast_402.ml", 790, 26648, 26681), 0), 0, Tag1 ("Astlib__Ast_402", 307)); (("Pmod_functor", 911), ([(Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -62)], (0)), 100000000, 0, -61); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 1014)), 0, (0)), 100000000, 0, -64)], (0)), 100000000, 0, -63); (Tag3 ((("module_expr", 1026)), 0, (0)), 100000000, 0, -65)]), 0, (("astlib/ast_402.ml", 792, 26713, 26717), ("astlib/ast_402.ml", 792, 26713, 26780), 0), 0, Tag1 ("Astlib__Ast_402", 308)); (("Pmod_apply", 912), ([(Tag3 ((("module_expr", 1026)), 0, (0)), 100000000, 0, -66); (Tag3 ((("module_expr", 1026)), 0, (0)), 100000000, 0, -67)]), 0, (("astlib/ast_402.ml", 794, 26820, 26824), ("astlib/ast_402.ml", 794, 26820, 26865), 0), 0, Tag1 ("Astlib__Ast_402", 309)); (("Pmod_constraint", 913), ([(Tag3 ((("module_expr", 1026)), 0, (0)), 100000000, 0, -68); (Tag3 ((("module_type", 1014)), 0, (0)), 100000000, 0, -69)]), 0, (("astlib/ast_402.ml", 796, 26891, 26895), ("astlib/ast_402.ml", 796, 26891, 26941), 0), 0, Tag1 ("Astlib__Ast_402", 310)); (("Pmod_unpack", 914), ([(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -70)]), 0, (("astlib/ast_402.ml", 798, 26968, 26972), ("astlib/ast_402.ml", 798, 26968, 26999), 0), 0, Tag1 ("Astlib__Ast_402", 311)); (("Pmod_extension", 915), ([(Tag3 ((("extension", 979)), 0, (0)), 100000000, 0, -71)]), 0, (("astlib/ast_402.ml", 800, 27024, 27028), ("astlib/ast_402.ml", 800, 27024, 27057), 0), 0, Tag1 ("Astlib__Ast_402", 312))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 787, 26524, 26526), ("astlib/ast_402.ml", 800, 27024, 27057), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 87)), 2, 0); Tag1 (("structure", 1028), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("structure_item", 1029)), 0, (0)), 100000000, 0, -57)], (0)), 100000000, 0, -56)), 0, 0, 0, 0, (("astlib/ast_402.ml", 803, 27081, 27083), ("astlib/ast_402.ml", 803, 27081, 27118), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 88)), 2, 0); Tag1 (("structure_item", 1029), (0, 0, [[(("pstr_desc", 916), 0, (Tag3 ((("structure_item_desc", 1030)), 0, (0)), 100000000, 0, -54), (("astlib/ast_402.ml", 807, 27194, 27201), ("astlib/ast_402.ml", 807, 27194, 27232), 0), 0, Tag1 ("Astlib__Ast_402", 313)); (("pstr_loc", 917), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -55), (("astlib/ast_402.ml", 808, 27233, 27240), ("astlib/ast_402.ml", 808, 27233, 27261), 0), 0, Tag1 ("Astlib__Ast_402", 314))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 805, 27120, 27122), ("astlib/ast_402.ml", 809, 27262, 27269), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 89)), 2, 0); Tag1 (("structure_item_desc", 1030), (0, 0, Tag1 ([(("Pstr_eval", 918), ([(Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -31); (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -32)]), 0, (("astlib/ast_402.ml", 812, 27347, 27351), ("astlib/ast_402.ml", 812, 27347, 27389), 0), 0, Tag1 ("Astlib__Ast_402", 315)); (("Pstr_value", 919), ([(Tag3 (Tag1 ((("Asttypes", 964)), "rec_flag"), 0, (0)), 100000000, 0, -33); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 1031)), 0, (0)), 100000000, 0, -35)], (0)), 100000000, 0, -34)]), 0, (("astlib/ast_402.ml", 814, 27408, 27412), ("astlib/ast_402.ml", 814, 27408, 27457), 0), 0, Tag1 ("Astlib__Ast_402", 316)); (("Pstr_primitive", 920), ([(Tag3 ((("value_description", 991)), 0, (0)), 100000000, 0, -36)]), 0, (("astlib/ast_402.ml", 818, 27615, 27619), ("astlib/ast_402.ml", 818, 27615, 27656), 0), 0, Tag1 ("Astlib__Ast_402", 317)); (("Pstr_type", 921), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 992)), 0, (0)), 100000000, 0, -38)], (0)), 100000000, 0, -37)]), 0, (("astlib/ast_402.ml", 820, 27703, 27707), ("astlib/ast_402.ml", 820, 27703, 27743), 0), 0, Tag1 ("Astlib__Ast_402", 318)); (("Pstr_typext", 922), ([(Tag3 ((("type_extension", 996)), 0, (0)), 100000000, 0, -39)]), 0, (("astlib/ast_402.ml", 822, 27795, 27799), ("astlib/ast_402.ml", 822, 27795, 27830), 0), 0, Tag1 ("Astlib__Ast_402", 319)); (("Pstr_exception", 923), ([(Tag3 ((("extension_constructor", 997)), 0, (0)), 100000000, 0, -40)]), 0, (("astlib/ast_402.ml", 824, 27862, 27866), ("astlib/ast_402.ml", 824, 27862, 27907), 0), 0, Tag1 ("Astlib__Ast_402", 320)); (("Pstr_module", 924), ([(Tag3 ((("module_binding", 1032)), 0, (0)), 100000000, 0, -41)]), 0, (("astlib/ast_402.ml", 827, 27972, 27976), ("astlib/ast_402.ml", 827, 27972, 28007), 0), 0, Tag1 ("Astlib__Ast_402", 321)); (("Pstr_recmodule", 925), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_binding", 1032)), 0, (0)), 100000000, 0, -43)], (0)), 100000000, 0, -42)]), 0, (("astlib/ast_402.ml", 829, 28038, 28042), ("astlib/ast_402.ml", 829, 28038, 28081), 0), 0, Tag1 ("Astlib__Ast_402", 322)); (("Pstr_modtype", 926), ([(Tag3 ((("module_type_declaration", 1020)), 0, (0)), 100000000, 0, -44)]), 0, (("astlib/ast_402.ml", 831, 28139, 28143), ("astlib/ast_402.ml", 831, 28139, 28184), 0), 0, Tag1 ("Astlib__Ast_402", 323)); (("Pstr_open", 927), ([(Tag3 ((("open_description", 1021)), 0, (0)), 100000000, 0, -45)]), 0, (("astlib/ast_402.ml", 833, 28220, 28224), ("astlib/ast_402.ml", 833, 28220, 28255), 0), 0, Tag1 ("Astlib__Ast_402", 324)); (("Pstr_class", 928), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_declaration", 1013)), 0, (0)), 100000000, 0, -47)], (0)), 100000000, 0, -46)]), 0, (("astlib/ast_402.ml", 835, 28279, 28283), ("astlib/ast_402.ml", 835, 28279, 28321), 0), 0, Tag1 ("Astlib__Ast_402", 325)); (("Pstr_class_type", 929), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 1006)), 0, (0)), 100000000, 0, -49)], (0)), 100000000, 0, -48)]), 0, (("astlib/ast_402.ml", 837, 28374, 28378), ("astlib/ast_402.ml", 837, 28374, 28426), 0), 0, Tag1 ("Astlib__Ast_402", 326)); (("Pstr_include", 930), ([(Tag3 ((("include_declaration", 1024)), 0, (0)), 100000000, 0, -50)]), 0, (("astlib/ast_402.ml", 839, 28486, 28490), ("astlib/ast_402.ml", 839, 28486, 28527), 0), 0, Tag1 ("Astlib__Ast_402", 327)); (("Pstr_attribute", 931), ([(Tag3 ((("attribute", 978)), 0, (0)), 100000000, 0, -51)]), 0, (("astlib/ast_402.ml", 841, 28555, 28559), ("astlib/ast_402.ml", 841, 28555, 28588), 0), 0, Tag1 ("Astlib__Ast_402", 328)); (("Pstr_extension", 932), ([(Tag3 ((("extension", 979)), 0, (0)), 100000000, 0, -52); (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -53)]), 0, (("astlib/ast_402.ml", 843, 28613, 28617), ("astlib/ast_402.ml", 843, 28613, 28659), 0), 0, Tag1 ("Astlib__Ast_402", 329))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 811, 27271, 27273), ("astlib/ast_402.ml", 843, 28613, 28659), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 90)), 2, 0); Tag1 (("value_binding", 1031), (0, 0, [[(("pvb_pat", 933), 0, (Tag3 ((("pattern", 986)), 0, (0)), 100000000, 0, -27), (("astlib/ast_402.ml", 848, 28754, 28760), ("astlib/ast_402.ml", 848, 28754, 28777), 0), 0, Tag1 ("Astlib__Ast_402", 330)); (("pvb_expr", 934), 0, (Tag3 ((("expression", 988)), 0, (0)), 100000000, 0, -28), (("astlib/ast_402.ml", 849, 28778, 28784), ("astlib/ast_402.ml", 849, 28778, 28805), 0), 0, Tag1 ("Astlib__Ast_402", 331)); (("pvb_attributes", 935), 0, (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -29), (("astlib/ast_402.ml", 850, 28806, 28812), ("astlib/ast_402.ml", 850, 28806, 28839), 0), 0, Tag1 ("Astlib__Ast_402", 332)); (("pvb_loc", 936), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -30), (("astlib/ast_402.ml", 851, 28840, 28846), ("astlib/ast_402.ml", 851, 28840, 28866), 0), 0, Tag1 ("Astlib__Ast_402", 333))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 846, 28684, 28686), ("astlib/ast_402.ml", 852, 28867, 28872), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 91)), 2, 0); Tag1 (("module_binding", 1032), (0, 0, [[(("pmb_name", 937), 0, (Tag3 (Tag1 ((("Asttypes", 964)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -23)], (0)), 100000000, 0, -22), (("astlib/ast_402.ml", 856, 28948, 28955), ("astlib/ast_402.ml", 856, 28948, 28976), 0), 0, Tag1 ("Astlib__Ast_402", 334)); (("pmb_expr", 938), 0, (Tag3 ((("module_expr", 1026)), 0, (0)), 100000000, 0, -24), (("astlib/ast_402.ml", 857, 28977, 28984), ("astlib/ast_402.ml", 857, 28977, 29006), 0), 0, Tag1 ("Astlib__Ast_402", 335)); (("pmb_attributes", 939), 0, (Tag3 ((("attributes", 980)), 0, (0)), 100000000, 0, -25), (("astlib/ast_402.ml", 858, 29007, 29014), ("astlib/ast_402.ml", 858, 29007, 29041), 0), 0, Tag1 ("Astlib__Ast_402", 336)); (("pmb_loc", 940), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -26), (("astlib/ast_402.ml", 859, 29042, 29049), ("astlib/ast_402.ml", 859, 29042, 29069), 0), 0, Tag1 ("Astlib__Ast_402", 337))]], 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 854, 28874, 28876), ("astlib/ast_402.ml", 860, 29070, 29077), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 92)), 2, 0); Tag1 (("toplevel_phrase", 1033), (0, 0, Tag1 ([(("Ptop_def", 953), ([(Tag3 ((("structure", 1028)), 0, (0)), 100000000, 0, -19)]), 0, (("astlib/ast_402.ml", 868, 29212, 29216), ("astlib/ast_402.ml", 868, 29212, 29239), 0), 0, Tag1 ("Astlib__Ast_402", 340)); (("Ptop_dir", 954), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -20); (Tag3 ((("directive_argument", 1034)), 0, (0)), 100000000, 0, -21)]), 0, (("astlib/ast_402.ml", 869, 29240, 29244), ("astlib/ast_402.ml", 869, 29240, 29285), 0), 0, Tag1 ("Astlib__Ast_402", 341))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 867, 29143, 29145), ("astlib/ast_402.ml", 869, 29240, 29285), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 338)), 1, 0); Tag1 (("directive_argument", 1034), (0, 0, Tag1 ([(("Pdir_none", 955), (0), 0, (("astlib/ast_402.ml", 873, 29390, 29394), ("astlib/ast_402.ml", 873, 29390, 29405), 0), 0, Tag1 ("Astlib__Ast_402", 342)); (("Pdir_string", 956), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -15)]), 0, (("astlib/ast_402.ml", 874, 29406, 29410), ("astlib/ast_402.ml", 874, 29406, 29433), 0), 0, Tag1 ("Astlib__Ast_402", 343)); (("Pdir_int", 957), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -16)]), 0, (("astlib/ast_402.ml", 875, 29434, 29438), ("astlib/ast_402.ml", 875, 29434, 29455), 0), 0, Tag1 ("Astlib__Ast_402", 344)); (("Pdir_ident", 958), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -17)]), 0, (("astlib/ast_402.ml", 876, 29456, 29460), ("astlib/ast_402.ml", 876, 29456, 29487), 0), 0, Tag1 ("Astlib__Ast_402", 345)); (("Pdir_bool", 959), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -18)]), 0, (("astlib/ast_402.ml", 877, 29488, 29492), ("astlib/ast_402.ml", 877, 29488, 29511), 0), 0, Tag1 ("Astlib__Ast_402", 346))], 0), 1, 0, 0, 0, 0, 0, (("astlib/ast_402.ml", 872, 29316, 29318), ("astlib/ast_402.ml", 877, 29488, 29511), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 339)), 2, 0)]), 0, (("astlib/ast_402.ml", 60, 2545, 2545), ("astlib/ast_402.ml", 878, 29512, 29515), 0), Tag1 ("Astlib__Ast_402", 347)), 0, 0); Tag3 (("Config", 966), 0, (Tag1 ([(("ast_impl_magic_number", 1035), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -528), 0, (("astlib/ast_402.ml", 881, 29540, 29546), ("astlib/ast_402.ml", 881, 29540, 29567), 0), 0, Tag1 ("Astlib__Ast_402", 348)), 0); (("ast_intf_magic_number", 1036), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -527), 0, (("astlib/ast_402.ml", 882, 29585, 29591), ("astlib/ast_402.ml", 882, 29585, 29612), 0), 0, Tag1 ("Astlib__Ast_402", 349)), 0)]), 0, (("astlib/ast_402.ml", 880, 29517, 29517), ("astlib/ast_402.ml", 883, 29630, 29633), 0), Tag1 ("Astlib__Ast_402", 350)), 0, 0)], "Astlib__Ast_402", [("Astlib__Ast_402", ("\178]\161\230\193\144:\005/\\~\127'|\207\189")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Ocaml_common", ("1\212\195\020\163\232\187\142G\192\221\180@\1278u")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Astlib__Longident", ("\n\192\233\142\177n\225\191\238\161#\150\204n\"Y")); ("Astlib__Location", ("nn\153\250\162\2239\215\129\229e\026xg\000U")); ("Astlib__", ("\246\155.n\143$\1435\bi\005\019C\219\191A"))], [(0)])

  end
