val semv : string
val stack : string
val state : string
val token : string
val beforeendp : string
val startp : string
val endp : string
val startpos : string array -> int -> string
val endpos : string array -> int -> string
val semvtypent : Dune__exe.Grammar.Nonterminal.t -> Dune__exe.IL.typ
val semvtype : Dune__exe.Grammar.Symbol.t -> Dune__exe.IL.typ list
val tokpat :
  Dune__exe.Grammar.Terminal.t ->
  Dune__exe.IL.pattern -> Dune__exe.IL.pattern
val tokspat : Dune__exe.Grammar.TerminalSet.t -> Dune__exe.IL.pattern
val tok_bind_unit :
  Dune__exe.Grammar.Terminal.t ->
  Dune__exe.IL.pattern -> Dune__exe.IL.expr -> Dune__exe.IL.expr
val destructuretokendef :
  string ->
  Dune__exe.IL.typ ->
  bool ->
  (Dune__exe.Grammar.Terminal.t -> Dune__exe.IL.expr) -> Dune__exe.IL.valdef
val errorval : Dune__exe.IL.expr
val basics : string
("DEBUG:rule", [(("semv", 577), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -58), 0, (("src/codePieces.mli", 27, 1364, 1364), ("src/codePieces.mli", 27, 1364, 1381), 0), 0, Tag1 ("Dune__exe__CodePieces", 0)), 0); (("stack", 578), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -57), 0, (("src/codePieces.mli", 31, 1423, 1423), ("src/codePieces.mli", 31, 1423, 1440), 0), 0, Tag1 ("Dune__exe__CodePieces", 1)), 0); (("state", 579), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -56), 0, (("src/codePieces.mli", 35, 1482, 1482), ("src/codePieces.mli", 35, 1482, 1499), 0), 0, Tag1 ("Dune__exe__CodePieces", 2)), 0); (("token", 580), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -55), 0, (("src/codePieces.mli", 39, 1541, 1541), ("src/codePieces.mli", 39, 1541, 1558), 0), 0, Tag1 ("Dune__exe__CodePieces", 3)), 0); (("beforeendp", 581), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -54), 0, (("src/codePieces.mli", 43, 1615, 1615), ("src/codePieces.mli", 43, 1615, 1637), 0), 0, Tag1 ("Dune__exe__CodePieces", 4)), 0); (("startp", 582), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -53), 0, (("src/codePieces.mli", 44, 1638, 1638), ("src/codePieces.mli", 44, 1638, 1656), 0), 0, Tag1 ("Dune__exe__CodePieces", 5)), 0); (("endp", 583), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -52), 0, (("src/codePieces.mli", 45, 1657, 1657), ("src/codePieces.mli", 45, 1657, 1673), 0), 0, Tag1 ("Dune__exe__CodePieces", 6)), 0); (("startpos", 584), ((Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -51)], (0)), 100000000, 0, -50), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -49), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -48), 0), 100000000, 0, -47), 0), 100000000, 0, -46), 0, (("src/codePieces.mli", 46, 1674, 1674), ("src/codePieces.mli", 46, 1674, 1717), 0), 0, Tag1 ("Dune__exe__CodePieces", 7)), 0); (("endpos", 585), ((Tag1 (0, (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -45)], (0)), 100000000, 0, -44), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -43), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -42), 0), 100000000, 0, -41), 0), 100000000, 0, -40), 0, (("src/codePieces.mli", 47, 1718, 1718), ("src/codePieces.mli", 47, 1718, 1759), 0), 0, Tag1 ("Dune__exe__CodePieces", 8)), 0); (("semvtypent", 586), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Nonterminal"), "t"), 0, (0)), 100000000, 0, -39), (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "IL"), "typ"), 0, (0)), 100000000, 0, -38), 0), 100000000, 0, -37), 0, (("src/codePieces.mli", 56, 1969, 1969), ("src/codePieces.mli", 56, 1969, 2006), 0), 0, Tag1 ("Dune__exe__CodePieces", 9)), 0); (("semvtype", 587), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Symbol"), "t"), 0, (0)), 100000000, 0, -36), (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "IL"), "typ"), 0, (0)), 100000000, 0, -35)], (0)), 100000000, 0, -34), 0), 100000000, 0, -33), 0, (("src/codePieces.mli", 61, 2096, 2096), ("src/codePieces.mli", 61, 2096, 2131), 0), 0, Tag1 ("Dune__exe__CodePieces", 10)), 0); (("tokpat", 588), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Terminal"), "t"), 0, (0)), 100000000, 0, -32), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "IL"), "pattern"), 0, (0)), 100000000, 0, -31), (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "IL"), "pattern"), 0, (0)), 100000000, 0, -30), 0), 100000000, 0, -29), 0), 100000000, 0, -28), 0, (("src/codePieces.mli", 70, 2377, 2377), ("src/codePieces.mli", 70, 2377, 2421), 0), 0, Tag1 ("Dune__exe__CodePieces", 11)), 0); (("tokspat", 589), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "TerminalSet"), "t"), 0, (0)), 100000000, 0, -27), (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "IL"), "pattern"), 0, (0)), 100000000, 0, -26), 0), 100000000, 0, -25), 0, (("src/codePieces.mli", 75, 2539, 2539), ("src/codePieces.mli", 75, 2539, 2576), 0), 0, Tag1 ("Dune__exe__CodePieces", 12)), 0); (("tok_bind_unit", 590), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Terminal"), "t"), 0, (0)), 100000000, 0, -24), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "IL"), "pattern"), 0, (0)), 100000000, 0, -23), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "IL"), "expr"), 0, (0)), 100000000, 0, -22), (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "IL"), "expr"), 0, (0)), 100000000, 0, -21), 0), 100000000, 0, -20), 0), 100000000, 0, -19), 0), 100000000, 0, -18), 0, (("src/codePieces.mli", 81, 2755, 2755), ("src/codePieces.mli", 81, 2755, 2811), 0), 0, Tag1 ("Dune__exe__CodePieces", 13)), 0); (("destructuretokendef", 591), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -17), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "IL"), "typ"), 0, (0)), 100000000, 0, -16), (Tag1 (0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -15), (Tag1 (0, (Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "Grammar"), "Terminal"), "t"), 0, (0)), 100000000, 0, -14), (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "IL"), "expr"), 0, (0)), 100000000, 0, -13), 0), 100000000, 0, -12), (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "IL"), "valdef"), 0, (0)), 100000000, 0, -11), 0), 100000000, 0, -10), 0), 100000000, 0, -9), 0), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("src/codePieces.mli", 90, 3187, 3187), ("src/codePieces.mli", 90, 3187, 3267), 0), 0, Tag1 ("Dune__exe__CodePieces", 14)), 0); (("errorval", 592), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "IL"), "expr"), 0, (0)), 100000000, 0, -6), 0, (("src/codePieces.mli", 98, 3447, 3447), ("src/codePieces.mli", 98, 3447, 3465), 0), 0, Tag1 ("Dune__exe__CodePieces", 15)), 0); (("basics", 593), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5), 0, (("src/codePieces.mli", 107, 3825, 3825), ("src/codePieces.mli", 107, 3825, 3843), 0), 0, Tag1 ("Dune__exe__CodePieces", 16)), 0); (("mbasics", 594), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "BasicSyntax"), "grammar"), 0, (0)), 100000000, 0, -4), (Tag3 (Tag1 (Tag1 ((Tag2 ("Dune__exe")), "IL"), "structure"), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/codePieces.mli", 109, 3845, 3845), ("src/codePieces.mli", 109, 3845, 3890), 0), 0, Tag1 ("Dune__exe__CodePieces", 17)), 0)], "Dune__exe__CodePieces", [("Dune__exe__CodePieces", ("`\188rn-\137\182S\232n\227\031\241\227Dd")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("MenhirSdk__Keyword", ("\171\145\177^\199\189\197f\150\136y\144\252\234>\178")); ("MenhirSdk", ("F\232\012\196l\143\145[\255\2193U\197\027\176\139")); ("Dune__exe__Syntax", ("\002\205\007\164\2347\133\182\245*x\171\004\190\178\171")); ("Dune__exe__StringSet", ("uB\206\020%\219\199\135&\196,\015\190\015^\230")); ("Dune__exe__StringMap", ("\157\157\161k*M\030\254|\006>\144X\147j\222")); ("Dune__exe__Stretch", ("\003\145~\207\198HL&\187\195e'0\204\200\156")); ("Dune__exe__Settings", ("I\214\245\150\238/\2211\219\145S\218\004a:1")); ("Dune__exe__Positions", ("\137nS\236\011\187\r[\024:\162/\201\139\237}")); ("Dune__exe__InputFile", (",\0246\029z@\127T\235\227k~\t\138\213%")); ("Dune__exe__IL", ("\194\228\178\190\251\254\231\226\207\197c\133\253i\220\170")); ("Dune__exe__GrammarFunctor", ("\139\015m\230\161\218\014\241\156v\017\182\017=\215\030")); ("Dune__exe__Grammar", ("\206h\026\183\149X\202a=\181,\16851\132e")); ("Dune__exe__GSet", ("\246\0066\220ky~\0042_c\205p\186\249\170")); ("Dune__exe__GMap", ("z5C\250t+\028\210\224\015Z'{U-\242")); ("Dune__exe__Front", ("\148\176\180\242\232x\020\016\239\205>I\021\\n*")); ("Dune__exe__BasicSyntax", ("\219\025F6\236\222\186\020\209\135\130+\131\228\012\003")); ("Dune__exe__Action", ("c\225H \249\179\190\007`[X\019\132@\208\193")); ("Dune__exe", ("\137\000\197\175$\007]\218\141\248\172\212\146c\153\212")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val mbasics : Dune__exe.BasicSyntax.grammar -> Dune__exe.IL.structure
