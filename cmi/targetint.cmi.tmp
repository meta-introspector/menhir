type t
val zero : t
val one : t
val minus_one : t
val neg : t -> t
val add : t -> t -> t
val sub : t -> t -> t
val mul : t -> t -> t
val div : t -> t -> t
val unsigned_div : t -> t -> t
val rem : t -> t -> t
val unsigned_rem : t -> t -> t
val succ : t -> t
val pred : t -> t
val abs : t -> t
val size : int
val max_int : t
val min_int : t
val logand : t -> t -> t
val logor : t -> t -> t
val logxor : t -> t -> t
val lognot : t -> t
val shift_left : t -> int -> t
val shift_right : t -> int -> t
val shift_right_logical : t -> int -> t
val of_int : int -> t
val of_int_exn : int -> t
val to_int : t -> int
val of_float : float -> t
val to_float : t -> float
val of_int32 : int32 -> t
val to_int32 : t -> int32
val of_int64 : int64 -> t
val to_int64 : t -> int64
val of_string : string -> t
val to_string : t -> string
val compare : t -> t -> int
val unsigned_compare : t -> t -> int
val equal : t -> t -> bool
type repr = Int32 of int32 | Int64 of int64
val repr : t -> repr("DEBUG:rule", [Tag1 (("t", 469), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("utils/targetint.mli", 32, 1674, 1674), ("utils/targetint.mli", 32, 1674, 1680), 0), 0, 0, 0, Tag1 ("Targetint", 0)), 1, 0); (("zero", 470), ((Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -145), 0, (("utils/targetint.mli", 35, 1718, 1718), ("utils/targetint.mli", 35, 1718, 1730), 0), 0, Tag1 ("Targetint", 1)), 0); (("one", 471), ((Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -144), 0, (("utils/targetint.mli", 38, 1760, 1760), ("utils/targetint.mli", 38, 1760, 1771), 0), 0, Tag1 ("Targetint", 2)), 0); (("minus_one", 472), ((Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -143), 0, (("utils/targetint.mli", 41, 1801, 1801), ("utils/targetint.mli", 41, 1801, 1818), 0), 0, Tag1 ("Targetint", 3)), 0); (("neg", 473), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -142), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -141), 0), 100000000, 0, -140), 0, (("utils/targetint.mli", 44, 1849, 1849), ("utils/targetint.mli", 44, 1849, 1865), 0), 0, Tag1 ("Targetint", 4)), 0); (("add", 474), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -139), (Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -138), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -137), 0), 100000000, 0, -136), 0), 100000000, 0, -135), 0, (("utils/targetint.mli", 47, 1890, 1890), ("utils/targetint.mli", 47, 1890, 1911), 0), 0, Tag1 ("Targetint", 5)), 0); (("sub", 475), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -134), (Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -133), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -132), 0), 100000000, 0, -131), 0), 100000000, 0, -130), 0, (("utils/targetint.mli", 50, 1930, 1930), ("utils/targetint.mli", 50, 1930, 1951), 0), 0, Tag1 ("Targetint", 6)), 0); (("mul", 476), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -129), (Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -128), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -127), 0), 100000000, 0, -126), 0), 100000000, 0, -125), 0, (("utils/targetint.mli", 53, 1973, 1973), ("utils/targetint.mli", 53, 1973, 1994), 0), 0, Tag1 ("Targetint", 7)), 0); (("div", 477), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -124), (Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -123), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -122), 0), 100000000, 0, -121), 0), 100000000, 0, -120), 0, (("utils/targetint.mli", 56, 2019, 2019), ("utils/targetint.mli", 56, 2019, 2040), 0), 0, Tag1 ("Targetint", 8)), 0); (("unsigned_div", 478), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -119), (Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -118), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -117), 0), 100000000, 0, -116), 0), 100000000, 0, -115), 0, (("utils/targetint.mli", 61, 2234, 2234), ("utils/targetint.mli", 61, 2234, 2264), 0), 0, Tag1 ("Targetint", 9)), 0); (("rem", 479), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -114), (Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -113), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -112), 0), 100000000, 0, -111), 0), 100000000, 0, -110), 0, (("utils/targetint.mli", 65, 2368, 2368), ("utils/targetint.mli", 65, 2368, 2389), 0), 0, Tag1 ("Targetint", 10)), 0); (("unsigned_rem", 480), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -109), (Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -108), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -107), 0), 100000000, 0, -106), 0), 100000000, 0, -105), 0, (("utils/targetint.mli", 73, 2740, 2740), ("utils/targetint.mli", 73, 2740, 2770), 0), 0, Tag1 ("Targetint", 11)), 0); (("succ", 481), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -104), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -103), 0), 100000000, 0, -102), 0, (("utils/targetint.mli", 77, 2874, 2874), ("utils/targetint.mli", 77, 2874, 2891), 0), 0, Tag1 ("Targetint", 12)), 0); (("pred", 482), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -101), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -100), 0), 100000000, 0, -99), 0, (("utils/targetint.mli", 81, 2969, 2969), ("utils/targetint.mli", 81, 2969, 2986), 0), 0, Tag1 ("Targetint", 13)), 0); (("abs", 483), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -98), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -97), 0), 100000000, 0, -96), 0, (("utils/targetint.mli", 85, 3066, 3066), ("utils/targetint.mli", 85, 3066, 3082), 0), 0, Tag1 ("Targetint", 14)), 0); (("size", 484), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -95), 0, (("utils/targetint.mli", 89, 3197, 3197), ("utils/targetint.mli", 89, 3197, 3211), 0), 0, Tag1 ("Targetint", 15)), 0); (("max_int", 485), ((Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -94), 0, (("utils/targetint.mli", 92, 3265, 3265), ("utils/targetint.mli", 92, 3265, 3280), 0), 0, Tag1 ("Targetint", 16)), 0); (("min_int", 486), ((Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -93), 0, (("utils/targetint.mli", 97, 3416, 3416), ("utils/targetint.mli", 97, 3416, 3431), 0), 0, Tag1 ("Targetint", 17)), 0); (("logand", 487), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -92), (Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -91), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -90), 0), 100000000, 0, -89), 0), 100000000, 0, -88), 0, (("utils/targetint.mli", 102, 3559, 3559), ("utils/targetint.mli", 102, 3559, 3583), 0), 0, Tag1 ("Targetint", 18)), 0); (("logor", 488), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -87), (Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -86), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -85), 0), 100000000, 0, -84), 0), 100000000, 0, -83), 0, (("utils/targetint.mli", 105, 3613, 3613), ("utils/targetint.mli", 105, 3613, 3636), 0), 0, Tag1 ("Targetint", 19)), 0); (("logxor", 489), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -82), (Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -81), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -80), 0), 100000000, 0, -79), 0), 100000000, 0, -78), 0, (("utils/targetint.mli", 108, 3665, 3665), ("utils/targetint.mli", 108, 3665, 3689), 0), 0, Tag1 ("Targetint", 20)), 0); (("lognot", 490), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -77), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -76), 0), 100000000, 0, -75), 0, (("utils/targetint.mli", 111, 3728, 3728), ("utils/targetint.mli", 111, 3728, 3747), 0), 0, Tag1 ("Targetint", 21)), 0); (("shift_left", 491), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -74), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -73), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -72), 0), 100000000, 0, -71), 0), 100000000, 0, -70), 0, (("utils/targetint.mli", 114, 3782, 3782), ("utils/targetint.mli", 114, 3782, 3812), 0), 0, Tag1 ("Targetint", 22)), 0); (("shift_right", 492), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -69), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -68), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -67), 0), 100000000, 0, -66), 0), 100000000, 0, -65), 0, (("utils/targetint.mli", 120, 4028, 4028), ("utils/targetint.mli", 120, 4028, 4059), 0), 0, Tag1 ("Targetint", 23)), 0); (("shift_right_logical", 493), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -64), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -63), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -62), 0), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("utils/targetint.mli", 126, 4298, 4298), ("utils/targetint.mli", 126, 4298, 4337), 0), 0, Tag1 ("Targetint", 24)), 0); (("of_int", 494), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -59), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -58), 0), 100000000, 0, -57), 0, (("utils/targetint.mli", 133, 4587, 4587), ("utils/targetint.mli", 133, 4587, 4608), 0), 0, Tag1 ("Targetint", 25)), 0); (("of_int_exn", 495), ((Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -56), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -55), 0), 100000000, 0, -54), 0, (("utils/targetint.mli", 137, 4721, 4721), ("utils/targetint.mli", 137, 4721, 4746), 0), 0, Tag1 ("Targetint", 26)), 0); (("to_int", 496), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -53), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("utils/targetint.mli", 141, 4884, 4884), ("utils/targetint.mli", 141, 4884, 4905), 0), 0, Tag1 ("Targetint", 27)), 0); (("of_float", 497), ((Tag1 (0, (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -50), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -49), 0), 100000000, 0, -48), 0, (("utils/targetint.mli", 146, 5045, 5045), ("utils/targetint.mli", 146, 5045, 5070), 0), 0, Tag1 ("Targetint", 28)), 0); (("to_float", 498), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -47), (Tag3 ((Tag3 ("float", 4)), 0, (0)), 100000000, 0, -46), 0), 100000000, 0, -45), 0, (("utils/targetint.mli", 153, 5349, 5349), ("utils/targetint.mli", 153, 5349, 5374), 0), 0, Tag1 ("Targetint", 29)), 0); (("of_int32", 499), ((Tag1 (0, (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -44), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("utils/targetint.mli", 156, 5444, 5444), ("utils/targetint.mli", 156, 5444, 5469), 0), 0, Tag1 ("Targetint", 30)), 0); (("to_int32", 500), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -41), (Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("utils/targetint.mli", 160, 5551, 5551), ("utils/targetint.mli", 160, 5551, 5576), 0), 0, Tag1 ("Targetint", 31)), 0); (("of_int64", 501), ((Tag1 (0, (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -38), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -37), 0), 100000000, 0, -36), 0, (("utils/targetint.mli", 167, 5820, 5820), ("utils/targetint.mli", 167, 5820, 5845), 0), 0, Tag1 ("Targetint", 32)), 0); (("to_int64", 502), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -35), (Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -34), 0), 100000000, 0, -33), 0, (("utils/targetint.mli", 171, 5927, 5927), ("utils/targetint.mli", 171, 5927, 5952), 0), 0, Tag1 ("Targetint", 33)), 0); (("of_string", 503), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -32), (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("utils/targetint.mli", 175, 6034, 6034), ("utils/targetint.mli", 175, 6034, 6061), 0), 0, Tag1 ("Targetint", 34)), 0); (("to_string", 504), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -29), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -28), 0), 100000000, 0, -27), 0, (("utils/targetint.mli", 184, 6469, 6469), ("utils/targetint.mli", 184, 6469, 6496), 0), 0, Tag1 ("Targetint", 35)), 0); (("compare", 505), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -26), (Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -25), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("utils/targetint.mli", 187, 6567, 6567), ("utils/targetint.mli", 187, 6567, 6593), 0), 0, Tag1 ("Targetint", 36)), 0); (("unsigned_compare", 506), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -21), (Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -20), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -19), 0), 100000000, 0, -18), 0), 100000000, 0, -17), 0, (("utils/targetint.mli", 193, 6859, 6859), ("utils/targetint.mli", 193, 6859, 6894), 0), 0, Tag1 ("Targetint", 37)), 0); (("equal", 507), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -16), (Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -15), (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -14), 0), 100000000, 0, -13), 0), 100000000, 0, -12), 0, (("utils/targetint.mli", 197, 6991, 6991), ("utils/targetint.mli", 197, 6991, 7016), 0), 0, Tag1 ("Targetint", 38)), 0); Tag1 (("repr", 508), (0, 0, Tag1 ([(("Int32", 309), ([(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -10)]), 0, (("utils/targetint.mli", 201, 7073, 7075), ("utils/targetint.mli", 201, 7073, 7091), 0), 0, Tag1 ("Targetint", 40)); (("Int64", 310), ([(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -11)]), 0, (("utils/targetint.mli", 202, 7092, 7094), ("utils/targetint.mli", 202, 7092, 7110), 0), 0, Tag1 ("Targetint", 41))], 0), 1, 0, 0, 0, 0, 0, (("utils/targetint.mli", 200, 7061, 7061), ("utils/targetint.mli", 202, 7092, 7110), 0), 0, 0, 0, Tag1 ("Targetint", 39)), 1, 0); (("repr", 509), ((Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -9), (Tag3 ((("repr", 508)), 0, (0)), 100000000, 0, -8), 0), 100000000, 0, -7), 0, (("utils/targetint.mli", 204, 7112, 7112), ("utils/targetint.mli", 204, 7112, 7132), 0), 0, Tag1 ("Targetint", 42)), 0); (("print", 510), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Format"), "formatter"), 0, (0)), 100000000, 0, -6), (Tag1 (0, (Tag3 ((("t", 469)), 0, (0)), 100000000, 0, -5), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("utils/targetint.mli", 207, 7190, 7190), ("utils/targetint.mli", 207, 7190, 7231), 0), 0, Tag1 ("Targetint", 43)), 0)], "Targetint", [("Targetint", ("\246d\193-\187\015a_\181+\n \019\246;\150")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])

val print : Format.formatter -> t -> unit
