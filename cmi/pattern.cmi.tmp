type patvar = Names.Id.t
type case_info_pattern = {
  cip_style : Constr.case_style;
  cip_ind : Names.inductive option;
  cip_extensible : bool;
}
type constr_pattern =
    PRef of Names.GlobRef.t
  | PVar of Names.Id.t
  | PEvar of (Evar.t * constr_pattern list)
  | PRel of int
  | PApp of constr_pattern * constr_pattern array
  | PSoApp of patvar * constr_pattern list
  | PProj of Names.Projection.t * constr_pattern
  | PLambda of Names.Name.t * constr_pattern * constr_pattern
  | PProd of Names.Name.t * constr_pattern * constr_pattern
  | PLetIn of Names.Name.t * constr_pattern * constr_pattern option *
      constr_pattern
  | PSort of Sorts.family
  | PMeta of patvar option
  | PIf of constr_pattern * constr_pattern * constr_pattern
  | PCase of case_info_pattern *
      (Names.Name.t array * constr_pattern) option * constr_pattern *
      (int * Names.Name.t array * constr_pattern) list
  | PFix of (int array * int) *
      (Names.Name.t array * constr_pattern array * constr_pattern array)
  | PCoFix of int *
      (Names.Name.t array * constr_pattern array * constr_pattern array)
  | PInt of Uint63.t
  | PFloat of Float64.t
  | ("DEBUG:rule", [Tag1 (("patvar", 742), (0, 0, 0, 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -76)), 0, 0, 0, 0, (("pretyping/pattern.mli", 16, 740, 740), ("pretyping/pattern.mli", 16, 740, 758), 0), 0, 0, 0, Tag1 ("Pattern", 0)), 1, 0); Tag1 (("case_info_pattern", 743), (0, 0, [[(("cip_style", 529), 0, (Tag3 (Tag1 ((Tag2 ("Constr")), "case_style"), 0, (0)), 100000000, 0, -72), (("pretyping/pattern.mli", 19, 785, 791), ("pretyping/pattern.mli", 19, 785, 821), 0), 0, Tag1 ("Pattern", 3)); (("cip_ind", 530), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((Tag2 ("Names")), "inductive"), 0, (0)), 100000000, 0, -74)], (0)), 100000000, 0, -73), (("pretyping/pattern.mli", 20, 822, 828), ("pretyping/pattern.mli", 20, 822, 855), 0), 0, Tag1 ("Pattern", 4)); (("cip_extensible", 531), 0, (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -75), (("pretyping/pattern.mli", 21, 856, 862), ("pretyping/pattern.mli", 21, 856, 883), 0), 0, Tag1 ("Pattern", 5))]], 1, 0, 0, 0, 0, 0, (("pretyping/pattern.mli", 18, 760, 760), ("pretyping/pattern.mli", 21, 856, 926), 0), 0, 0, 0, Tag1 ("Pattern", 1)), 1, 0); Tag1 (("constr_pattern", 744), (0, 0, Tag1 ([(("PRef", 555), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "GlobRef"), "t"), 0, (0)), 100000000, 0, -2)]), 0, (("pretyping/pattern.mli", 24, 950, 952), ("pretyping/pattern.mli", 24, 950, 971), 0), 0, Tag1 ("Pattern", 7)); (("PVar", 567), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Id"), "t"), 0, (0)), 100000000, 0, -3)]), 0, (("pretyping/pattern.mli", 25, 972, 974), ("pretyping/pattern.mli", 25, 972, 988), 0), 0, Tag1 ("Pattern", 8)); (("PEvar", 568), ([(Tag2 ([(Tag3 (Tag1 ((Tag2 ("Evar")), "t"), 0, (0)), 100000000, 0, -5); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -7)], (0)), 100000000, 0, -6)]), 100000000, 0, -4)]), 0, (("pretyping/pattern.mli", 26, 989, 991), ("pretyping/pattern.mli", 26, 989, 1032), 0), 0, Tag1 ("Pattern", 9)); (("PRel", 578), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -8)]), 0, (("pretyping/pattern.mli", 27, 1033, 1035), ("pretyping/pattern.mli", 27, 1033, 1048), 0), 0, Tag1 ("Pattern", 10)); (("PApp", 579), ([(Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -9); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -11)], (0)), 100000000, 0, -10)]), 0, (("pretyping/pattern.mli", 28, 1049, 1051), ("pretyping/pattern.mli", 28, 1049, 1098), 0), 0, Tag1 ("Pattern", 11)); (("PSoApp", 580), ([(Tag3 ((("patvar", 742)), 0, (0)), 100000000, 0, -12); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -14)], (0)), 100000000, 0, -13)]), 0, (("pretyping/pattern.mli", 29, 1099, 1101), ("pretyping/pattern.mli", 29, 1099, 1141), 0), 0, Tag1 ("Pattern", 12)); (("PProj", 581), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Projection"), "t"), 0, (0)), 100000000, 0, -15); (Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -16)]), 0, (("pretyping/pattern.mli", 30, 1142, 1144), ("pretyping/pattern.mli", 30, 1142, 1184), 0), 0, Tag1 ("Pattern", 13)); (("PLambda", 606), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -17); (Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -18); (Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -19)]), 0, (("pretyping/pattern.mli", 31, 1185, 1187), ("pretyping/pattern.mli", 31, 1185, 1240), 0), 0, Tag1 ("Pattern", 14)); (("PProd", 616), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -20); (Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -21); (Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -22)]), 0, (("pretyping/pattern.mli", 32, 1241, 1243), ("pretyping/pattern.mli", 32, 1241, 1294), 0), 0, Tag1 ("Pattern", 15)); (("PLetIn", 617), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -23); (Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -24); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -26)], (0)), 100000000, 0, -25); (Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -27)]), 0, (("pretyping/pattern.mli", 33, 1295, 1297), ("pretyping/pattern.mli", 33, 1295, 1373), 0), 0, Tag1 ("Pattern", 16)); (("PSort", 618), ([(Tag3 (Tag1 ((Tag2 ("Sorts")), "family"), 0, (0)), 100000000, 0, -28)]), 0, (("pretyping/pattern.mli", 34, 1374, 1376), ("pretyping/pattern.mli", 34, 1374, 1399), 0), 0, Tag1 ("Pattern", 17)); (("PMeta", 651), ([(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("patvar", 742)), 0, (0)), 100000000, 0, -30)], (0)), 100000000, 0, -29)]), 0, (("pretyping/pattern.mli", 35, 1400, 1402), ("pretyping/pattern.mli", 35, 1400, 1426), 0), 0, Tag1 ("Pattern", 18)); (("PIf", 652), ([(Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -31); (Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -32); (Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -33)]), 0, (("pretyping/pattern.mli", 36, 1427, 1429), ("pretyping/pattern.mli", 36, 1427, 1486), 0), 0, Tag1 ("Pattern", 19)); (("PCase", 653), ([(Tag3 ((("case_info_pattern", 743)), 0, (0)), 100000000, 0, -34); (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -38)], (0)), 100000000, 0, -37); (Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -39)]), 100000000, 0, -36)], (0)), 100000000, 0, -35); (Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -40); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -43); (Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -45)], (0)), 100000000, 0, -44); (Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -46)]), 100000000, 0, -42)], (0)), 100000000, 0, -41)]), 0, (("pretyping/pattern.mli", 37, 1487, 1489), ("pretyping/pattern.mli", 38, 1578, 1626), 0), 0, Tag1 ("Pattern", 20)); (("PFix", 654), ([(Tag2 ([(Tag3 ((Tag3 ("array", 8)), [(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -49)], (0)), 100000000, 0, -48); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -50)]), 100000000, 0, -47); (Tag2 ([(Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -53)], (0)), 100000000, 0, -52); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -55)], (0)), 100000000, 0, -54); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -57)], (0)), 100000000, 0, -56)]), 100000000, 0, -51)]), 0, (("pretyping/pattern.mli", 39, 1667, 1669), ("pretyping/pattern.mli", 39, 1667, 1759), 0), 0, Tag1 ("Pattern", 21)); (("PCoFix", 655), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -58); (Tag2 ([(Tag3 ((Tag3 ("array", 8)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Names")), "Name"), "t"), 0, (0)), 100000000, 0, -61)], (0)), 100000000, 0, -60); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -63)], (0)), 100000000, 0, -62); (Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -65)], (0)), 100000000, 0, -64)]), 100000000, 0, -59)]), 0, (("pretyping/pattern.mli", 40, 1760, 1762), ("pretyping/pattern.mli", 40, 1760, 1840), 0), 0, Tag1 ("Pattern", 22)); (("PInt", 656), ([(Tag3 (Tag1 ((Tag2 ("Uint63")), "t"), 0, (0)), 100000000, 0, -66)]), 0, (("pretyping/pattern.mli", 41, 1841, 1843), ("pretyping/pattern.mli", 41, 1841, 1861), 0), 0, Tag1 ("Pattern", 23)); (("PFloat", 704), ([(Tag3 (Tag1 ((Tag2 ("Float64")), "t"), 0, (0)), 100000000, 0, -67)]), 0, (("pretyping/pattern.mli", 42, 1862, 1864), ("pretyping/pattern.mli", 42, 1862, 1885), 0), 0, Tag1 ("Pattern", 24)); (("PArray", 741), ([(Tag3 ((Tag3 ("array", 8)), [(Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -69)], (0)), 100000000, 0, -68); (Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -70); (Tag3 ((("constr_pattern", 744)), 0, (0)), 100000000, 0, -71)]), 0, (("pretyping/pattern.mli", 43, 1886, 1888), ("pretyping/pattern.mli", 43, 1886, 1954), 0), 0, Tag1 ("Pattern", 25))], 0), 1, 0, 0, 0, 0, 0, (("pretyping/pattern.mli", 23, 928, 928), ("pretyping/pattern.mli", 43, 1886, 1954), 0), 0, 0, 0, Tag1 ("Pattern", 6)), 1, 0)], "Pattern", [("Pattern", ("\195C\140Wb=\022\222\208\227^K\003\020\215X")); ("Util", ("t\188\174\159@v=\136w\1880\153\232\"\255H")); ("Univ", ("c\029n\183W>\138>\227\165\148(JTJ\227")); ("Uint63", ("\204\244\226e\029S\188_.\161\238\137\136\138\236\192")); ("UGraph", ("\156J\234h\004Y\179>M\137\192 \129\191J,")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Sorts", ("\200\193Q\202.\000\190}\174\000@\030\163g\202\230")); ("SList", ("\157\219\146R\2413\134\140 %\180\234\132\238j\212")); ("Predicate", ("a\165$o\234\192\245\231md7\233@\t\179\203")); ("Pp", ("\196\149\221o\"\162\237B\159\160\208\154G\200-\228")); ("Names", ("P\246\241\184\239\225f\018\211=,\180\156\237\132F")); ("Loc", ("\026\163i<\000\002\235\026\158\131\187\179\019\0300a")); ("Int", ("\015x\147\142S(\206:\188\"}\208\\\206\014\n")); ("Hashset", ("k\007\158\254\000@\159\r\223\239\202\203F\251-\204")); ("Hashcons", ("\"\244y]\225\153\184M-\246\236\n\241\187\239\016")); ("Float64", ("\219\005\019\195\215\135G\180\0027\026\026\030\198\165\193")); ("Exninfo", ("\234y\199N7\247\202\207\2051\153\214?\193\178\151")); ("Evar", ("\211\220k\204\216\154$\194\172\000\246w\209\t`\223")); ("Esubst", ("\228q\127\209\224p}\152\212B\198\030\n[\130\151")); ("Context", ("\245 \254C:.B\171\131\207Bz\249\1523\154")); ("Constr", ("q8Wv\220\207\200U\132\252r\191\211F\211\214")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("CSig", ("\167\147!w\140v\022\011u&\016\1997\025\165\t")); ("CSet", ("\147a\030\243p\rj\143\021\168\004\152\177\136\175\193")); ("CMap", ("\251\001\168\164\179\229b\204e\150\139\026d\227\168\134")); ("CList", ("A\nI\231LQ\150(\218t+t<]\021\005")); ("CAst", ("q\180Q\14938Y%\202icZU>\006\152")); ("CArray", ("\208\184\225B\128\004A\242\152j\188j\016\177}\150")); ("AcyclicGraph", ("\205\254\228\229\130\159\004\n\191^\193\203M\015\236F"))], [1; (0)])
PArray of constr_pattern array * constr_pattern * constr_pattern
